// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/roachpb"
	"github.com/cockroachdb/cockroach/pkg/security"
	"github.com/cockroachdb/cockroach/pkg/sql/lex"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
	"github.com/lib/pq/oid"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}

func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

//line sql-gen.y:78

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) user() security.SQLUsername {
	return u.val.(security.SQLUsername)
}
func (u *sqlSymUnion) users() []security.SQLUsername {
	return u.val.([]security.SQLUsername)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) enumValueList() tree.EnumValueList {
	return u.val.(tree.EnumValueList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) functionReference() tree.FunctionReference {
	return u.val.(tree.FunctionReference)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistence() tree.Persistence {
	return u.val.(tree.Persistence)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) targetList() tree.TargetList {
	return u.val.(tree.TargetList)
}
func (u *sqlSymUnion) targetListPtr() *tree.TargetList {
	return u.val.(*tree.TargetList)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() tree.WindowFrameExclusion {
	return u.val.(tree.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) deferrableMode() tree.DeferrableMode {
	return u.val.(tree.DeferrableMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) interleave() *tree.InterleaveDef {
	return u.val.(*tree.InterleaveDef)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) partitionByTable() *tree.PartitionByTable {
	return u.val.(*tree.PartitionByTable)
}
func (u *sqlSymUnion) partitionByIndex() *tree.PartitionByIndex {
	return u.val.(*tree.PartitionByIndex)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() tree.ComparisonOperator {
	return u.val.(tree.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) replicationOptions() *tree.ReplicationOptions {
	return u.val.(*tree.ReplicationOptions)
}
func (u *sqlSymUnion) copyOptions() *tree.CopyOptions {
	return u.val.(*tree.CopyOptions)
}
func (u *sqlSymUnion) restoreOptions() *tree.RestoreOptions {
	return u.val.(*tree.RestoreOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) stringOrPlaceholderOptList() tree.StringOrPlaceholderOptList {
	return u.val.(tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) listOfStringOrPlaceholderOptList() []tree.StringOrPlaceholderOptList {
	return u.val.([]tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) fullBackupClause() *tree.FullBackupClause {
	return u.val.(*tree.FullBackupClause)
}
func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}
func (u *sqlSymUnion) scheduleState() tree.ScheduleState {
	return u.val.(tree.ScheduleState)
}
func (u *sqlSymUnion) executorType() tree.ScheduledJobExecutorType {
	return u.val.(tree.ScheduledJobExecutorType)
}
func (u *sqlSymUnion) refreshDataOption() tree.RefreshDataOption {
	return u.val.(tree.RefreshDataOption)
}
func (u *sqlSymUnion) locality() *tree.Locality {
	return u.val.(*tree.Locality)
}
func (u *sqlSymUnion) survivalGoal() tree.SurvivalGoal {
	return u.val.(tree.SurvivalGoal)
}
func (u *sqlSymUnion) objectNamePrefix() tree.ObjectNamePrefix {
	return u.val.(tree.ObjectNamePrefix)
}
func (u *sqlSymUnion) objectNamePrefixList() tree.ObjectNamePrefixList {
	return u.val.(tree.ObjectNamePrefixList)
}

//line sql-gen.y:724
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lex.IDENT
const SCONST = lex.SCONST
const BCONST = lex.BCONST
const BITCONST = lex.BITCONST
const ICONST = lex.ICONST
const FCONST = lex.FCONST
const PLACEHOLDER = lex.PLACEHOLDER
const TYPECAST = lex.TYPECAST
const TYPEANNOTATE = lex.TYPEANNOTATE
const DOT_DOT = lex.DOT_DOT
const LESS_EQUALS = lex.LESS_EQUALS
const GREATER_EQUALS = lex.GREATER_EQUALS
const NOT_EQUALS = lex.NOT_EQUALS
const NOT_REGMATCH = lex.NOT_REGMATCH
const REGIMATCH = lex.REGIMATCH
const NOT_REGIMATCH = lex.NOT_REGIMATCH
const ERROR = lex.ERROR
const ABORT = lex.ABORT
const ACCESS = lex.ACCESS
const ACTION = lex.ACTION
const ADD = lex.ADD
const ADMIN = lex.ADMIN
const AFFINITY = lex.AFFINITY
const AFTER = lex.AFTER
const AGGREGATE = lex.AGGREGATE
const ALL = lex.ALL
const ALTER = lex.ALTER
const ALWAYS = lex.ALWAYS
const ANALYSE = lex.ANALYSE
const ANALYZE = lex.ANALYZE
const AND = lex.AND
const AND_AND = lex.AND_AND
const ANY = lex.ANY
const ANNOTATE_TYPE = lex.ANNOTATE_TYPE
const ARRAY = lex.ARRAY
const AS = lex.AS
const ASC = lex.ASC
const ASYMMETRIC = lex.ASYMMETRIC
const AT = lex.AT
const ATTRIBUTE = lex.ATTRIBUTE
const AUTHORIZATION = lex.AUTHORIZATION
const AUTOMATIC = lex.AUTOMATIC
const AVAILABILITY = lex.AVAILABILITY
const BACKUP = lex.BACKUP
const BACKUPS = lex.BACKUPS
const BEFORE = lex.BEFORE
const BEGIN = lex.BEGIN
const BETWEEN = lex.BETWEEN
const BIGINT = lex.BIGINT
const BIGSERIAL = lex.BIGSERIAL
const BINARY = lex.BINARY
const BIT = lex.BIT
const BUCKET_COUNT = lex.BUCKET_COUNT
const BOOLEAN = lex.BOOLEAN
const BOTH = lex.BOTH
const BOX2D = lex.BOX2D
const BUNDLE = lex.BUNDLE
const BY = lex.BY
const CACHE = lex.CACHE
const CANCEL = lex.CANCEL
const CANCELQUERY = lex.CANCELQUERY
const CASCADE = lex.CASCADE
const CASE = lex.CASE
const CAST = lex.CAST
const CBRT = lex.CBRT
const CHANGEFEED = lex.CHANGEFEED
const CHAR = lex.CHAR
const CHARACTER = lex.CHARACTER
const CHARACTERISTICS = lex.CHARACTERISTICS
const CHECK = lex.CHECK
const CLOSE = lex.CLOSE
const CLUSTER = lex.CLUSTER
const COALESCE = lex.COALESCE
const COLLATE = lex.COLLATE
const COLLATION = lex.COLLATION
const COLUMN = lex.COLUMN
const COLUMNS = lex.COLUMNS
const COMMENT = lex.COMMENT
const COMMENTS = lex.COMMENTS
const COMMIT = lex.COMMIT
const COMMITTED = lex.COMMITTED
const COMPACT = lex.COMPACT
const COMPLETE = lex.COMPLETE
const CONCAT = lex.CONCAT
const CONCURRENTLY = lex.CONCURRENTLY
const CONFIGURATION = lex.CONFIGURATION
const CONFIGURATIONS = lex.CONFIGURATIONS
const CONFIGURE = lex.CONFIGURE
const CONFLICT = lex.CONFLICT
const CONNECTION = lex.CONNECTION
const CONSTRAINT = lex.CONSTRAINT
const CONSTRAINTS = lex.CONSTRAINTS
const CONTAINS = lex.CONTAINS
const CONTROLCHANGEFEED = lex.CONTROLCHANGEFEED
const CONTROLJOB = lex.CONTROLJOB
const CONVERSION = lex.CONVERSION
const CONVERT = lex.CONVERT
const COPY = lex.COPY
const COVERING = lex.COVERING
const CREATE = lex.CREATE
const CREATEDB = lex.CREATEDB
const CREATELOGIN = lex.CREATELOGIN
const CREATEROLE = lex.CREATEROLE
const CROSS = lex.CROSS
const CSV = lex.CSV
const CUBE = lex.CUBE
const CURRENT = lex.CURRENT
const CURRENT_CATALOG = lex.CURRENT_CATALOG
const CURRENT_DATE = lex.CURRENT_DATE
const CURRENT_SCHEMA = lex.CURRENT_SCHEMA
const CURRENT_ROLE = lex.CURRENT_ROLE
const CURRENT_TIME = lex.CURRENT_TIME
const CURRENT_TIMESTAMP = lex.CURRENT_TIMESTAMP
const CURRENT_USER = lex.CURRENT_USER
const CURSOR = lex.CURSOR
const CYCLE = lex.CYCLE
const DATA = lex.DATA
const DATABASE = lex.DATABASE
const DATABASES = lex.DATABASES
const DATE = lex.DATE
const DAY = lex.DAY
const DEC = lex.DEC
const DECIMAL = lex.DECIMAL
const DEFAULT = lex.DEFAULT
const DEFAULTS = lex.DEFAULTS
const DEALLOCATE = lex.DEALLOCATE
const DECLARE = lex.DECLARE
const DEFERRABLE = lex.DEFERRABLE
const DEFERRED = lex.DEFERRED
const DELETE = lex.DELETE
const DELIMITER = lex.DELIMITER
const DESC = lex.DESC
const DESTINATION = lex.DESTINATION
const DETACHED = lex.DETACHED
const DISCARD = lex.DISCARD
const DISTINCT = lex.DISTINCT
const DO = lex.DO
const DOMAIN = lex.DOMAIN
const DOUBLE = lex.DOUBLE
const DROP = lex.DROP
const ELSE = lex.ELSE
const ENCODING = lex.ENCODING
const ENCRYPTION_PASSPHRASE = lex.ENCRYPTION_PASSPHRASE
const END = lex.END
const ENUM = lex.ENUM
const ENUMS = lex.ENUMS
const ESCAPE = lex.ESCAPE
const EXCEPT = lex.EXCEPT
const EXCLUDE = lex.EXCLUDE
const EXCLUDING = lex.EXCLUDING
const EXISTS = lex.EXISTS
const EXECUTE = lex.EXECUTE
const EXECUTION = lex.EXECUTION
const EXPERIMENTAL = lex.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lex.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lex.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lex.EXPERIMENTAL_AUDIT
const EXPIRATION = lex.EXPIRATION
const EXPLAIN = lex.EXPLAIN
const EXPORT = lex.EXPORT
const EXTENSION = lex.EXTENSION
const EXTRACT = lex.EXTRACT
const EXTRACT_DURATION = lex.EXTRACT_DURATION
const FAILURE = lex.FAILURE
const FALSE = lex.FALSE
const FAMILY = lex.FAMILY
const FETCH = lex.FETCH
const FETCHVAL = lex.FETCHVAL
const FETCHTEXT = lex.FETCHTEXT
const FETCHVAL_PATH = lex.FETCHVAL_PATH
const FETCHTEXT_PATH = lex.FETCHTEXT_PATH
const FILES = lex.FILES
const FILTER = lex.FILTER
const FIRST = lex.FIRST
const FLOAT = lex.FLOAT
const FLOAT4 = lex.FLOAT4
const FLOAT8 = lex.FLOAT8
const FLOORDIV = lex.FLOORDIV
const FOLLOWING = lex.FOLLOWING
const FOR = lex.FOR
const FORCE_INDEX = lex.FORCE_INDEX
const FOREIGN = lex.FOREIGN
const FROM = lex.FROM
const FULL = lex.FULL
const FUNCTION = lex.FUNCTION
const GENERATED = lex.GENERATED
const GEOGRAPHY = lex.GEOGRAPHY
const GEOMETRY = lex.GEOMETRY
const GEOMETRYM = lex.GEOMETRYM
const GEOMETRYZ = lex.GEOMETRYZ
const GEOMETRYZM = lex.GEOMETRYZM
const GEOMETRYCOLLECTION = lex.GEOMETRYCOLLECTION
const GEOMETRYCOLLECTIONM = lex.GEOMETRYCOLLECTIONM
const GEOMETRYCOLLECTIONZ = lex.GEOMETRYCOLLECTIONZ
const GEOMETRYCOLLECTIONZM = lex.GEOMETRYCOLLECTIONZM
const GLOBAL = lex.GLOBAL
const GOAL = lex.GOAL
const GRANT = lex.GRANT
const GRANTS = lex.GRANTS
const GREATEST = lex.GREATEST
const GROUP = lex.GROUP
const GROUPING = lex.GROUPING
const GROUPS = lex.GROUPS
const HAVING = lex.HAVING
const HASH = lex.HASH
const HIGH = lex.HIGH
const HISTOGRAM = lex.HISTOGRAM
const HOUR = lex.HOUR
const IDENTITY = lex.IDENTITY
const IF = lex.IF
const IFERROR = lex.IFERROR
const IFNULL = lex.IFNULL
const IGNORE_FOREIGN_KEYS = lex.IGNORE_FOREIGN_KEYS
const ILIKE = lex.ILIKE
const IMMEDIATE = lex.IMMEDIATE
const IMPORT = lex.IMPORT
const IN = lex.IN
const INCLUDE = lex.INCLUDE
const INCLUDING = lex.INCLUDING
const INCREMENT = lex.INCREMENT
const INCREMENTAL = lex.INCREMENTAL
const INET = lex.INET
const INET_CONTAINED_BY_OR_EQUALS = lex.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lex.INET_CONTAINS_OR_EQUALS
const INDEX = lex.INDEX
const INDEXES = lex.INDEXES
const INHERITS = lex.INHERITS
const INJECT = lex.INJECT
const INTERLEAVE = lex.INTERLEAVE
const INITIALLY = lex.INITIALLY
const INNER = lex.INNER
const INSERT = lex.INSERT
const INT = lex.INT
const INTEGER = lex.INTEGER
const INTERSECT = lex.INTERSECT
const INTERVAL = lex.INTERVAL
const INTO = lex.INTO
const INTO_DB = lex.INTO_DB
const INVERTED = lex.INVERTED
const IS = lex.IS
const ISERROR = lex.ISERROR
const ISNULL = lex.ISNULL
const ISOLATION = lex.ISOLATION
const JOB = lex.JOB
const JOBS = lex.JOBS
const JOIN = lex.JOIN
const JSON = lex.JSON
const JSONB = lex.JSONB
const JSON_SOME_EXISTS = lex.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lex.JSON_ALL_EXISTS
const KEY = lex.KEY
const KEYS = lex.KEYS
const KMS = lex.KMS
const KV = lex.KV
const LANGUAGE = lex.LANGUAGE
const LAST = lex.LAST
const LATERAL = lex.LATERAL
const LATEST = lex.LATEST
const LC_CTYPE = lex.LC_CTYPE
const LC_COLLATE = lex.LC_COLLATE
const LEADING = lex.LEADING
const LEASE = lex.LEASE
const LEAST = lex.LEAST
const LEFT = lex.LEFT
const LESS = lex.LESS
const LEVEL = lex.LEVEL
const LIKE = lex.LIKE
const LIMIT = lex.LIMIT
const LINESTRING = lex.LINESTRING
const LINESTRINGM = lex.LINESTRINGM
const LINESTRINGZ = lex.LINESTRINGZ
const LINESTRINGZM = lex.LINESTRINGZM
const LIST = lex.LIST
const LOCAL = lex.LOCAL
const LOCALITY = lex.LOCALITY
const LOCALTIME = lex.LOCALTIME
const LOCALTIMESTAMP = lex.LOCALTIMESTAMP
const LOCKED = lex.LOCKED
const LOGIN = lex.LOGIN
const LOOKUP = lex.LOOKUP
const LOW = lex.LOW
const LSHIFT = lex.LSHIFT
const MATCH = lex.MATCH
const MATERIALIZED = lex.MATERIALIZED
const MERGE = lex.MERGE
const MINVALUE = lex.MINVALUE
const MAXVALUE = lex.MAXVALUE
const METHOD = lex.METHOD
const MINUTE = lex.MINUTE
const MODIFYCLUSTERSETTING = lex.MODIFYCLUSTERSETTING
const MONTH = lex.MONTH
const MULTILINESTRING = lex.MULTILINESTRING
const MULTILINESTRINGM = lex.MULTILINESTRINGM
const MULTILINESTRINGZ = lex.MULTILINESTRINGZ
const MULTILINESTRINGZM = lex.MULTILINESTRINGZM
const MULTIPOINT = lex.MULTIPOINT
const MULTIPOINTM = lex.MULTIPOINTM
const MULTIPOINTZ = lex.MULTIPOINTZ
const MULTIPOINTZM = lex.MULTIPOINTZM
const MULTIPOLYGON = lex.MULTIPOLYGON
const MULTIPOLYGONM = lex.MULTIPOLYGONM
const MULTIPOLYGONZ = lex.MULTIPOLYGONZ
const MULTIPOLYGONZM = lex.MULTIPOLYGONZM
const NAN = lex.NAN
const NAME = lex.NAME
const NAMES = lex.NAMES
const NATURAL = lex.NATURAL
const NEVER = lex.NEVER
const NEXT = lex.NEXT
const NO = lex.NO
const NOCANCELQUERY = lex.NOCANCELQUERY
const NOCONTROLCHANGEFEED = lex.NOCONTROLCHANGEFEED
const NOCONTROLJOB = lex.NOCONTROLJOB
const NOCREATEDB = lex.NOCREATEDB
const NOCREATELOGIN = lex.NOCREATELOGIN
const NOCREATEROLE = lex.NOCREATEROLE
const NOLOGIN = lex.NOLOGIN
const NOMODIFYCLUSTERSETTING = lex.NOMODIFYCLUSTERSETTING
const NO_INDEX_JOIN = lex.NO_INDEX_JOIN
const NONE = lex.NONE
const NORMAL = lex.NORMAL
const NOT = lex.NOT
const NOTHING = lex.NOTHING
const NOTNULL = lex.NOTNULL
const NOVIEWACTIVITY = lex.NOVIEWACTIVITY
const NOWAIT = lex.NOWAIT
const NULL = lex.NULL
const NULLIF = lex.NULLIF
const NULLS = lex.NULLS
const NUMERIC = lex.NUMERIC
const OF = lex.OF
const OFF = lex.OFF
const OFFSET = lex.OFFSET
const OID = lex.OID
const OIDS = lex.OIDS
const OIDVECTOR = lex.OIDVECTOR
const ON = lex.ON
const ONLY = lex.ONLY
const OPT = lex.OPT
const OPTION = lex.OPTION
const OPTIONS = lex.OPTIONS
const OR = lex.OR
const ORDER = lex.ORDER
const ORDINALITY = lex.ORDINALITY
const OTHERS = lex.OTHERS
const OUT = lex.OUT
const OUTER = lex.OUTER
const OVER = lex.OVER
const OVERLAPS = lex.OVERLAPS
const OVERLAY = lex.OVERLAY
const OWNED = lex.OWNED
const OWNER = lex.OWNER
const OPERATOR = lex.OPERATOR
const PARENT = lex.PARENT
const PARTIAL = lex.PARTIAL
const PARTITION = lex.PARTITION
const PARTITIONS = lex.PARTITIONS
const PASSWORD = lex.PASSWORD
const PAUSE = lex.PAUSE
const PAUSED = lex.PAUSED
const PHYSICAL = lex.PHYSICAL
const PLACING = lex.PLACING
const PLAN = lex.PLAN
const PLANS = lex.PLANS
const POINT = lex.POINT
const POINTM = lex.POINTM
const POINTZ = lex.POINTZ
const POINTZM = lex.POINTZM
const POLYGON = lex.POLYGON
const POLYGONM = lex.POLYGONM
const POLYGONZ = lex.POLYGONZ
const POLYGONZM = lex.POLYGONZM
const POSITION = lex.POSITION
const PRECEDING = lex.PRECEDING
const PRECISION = lex.PRECISION
const PREPARE = lex.PREPARE
const PRESERVE = lex.PRESERVE
const PRIMARY = lex.PRIMARY
const PRIORITY = lex.PRIORITY
const PRIVILEGES = lex.PRIVILEGES
const PROCEDURAL = lex.PROCEDURAL
const PUBLIC = lex.PUBLIC
const PUBLICATION = lex.PUBLICATION
const QUERIES = lex.QUERIES
const QUERY = lex.QUERY
const RANGE = lex.RANGE
const RANGES = lex.RANGES
const READ = lex.READ
const REAL = lex.REAL
const REASSIGN = lex.REASSIGN
const RECURSIVE = lex.RECURSIVE
const RECURRING = lex.RECURRING
const REF = lex.REF
const REFERENCES = lex.REFERENCES
const REFRESH = lex.REFRESH
const REGCLASS = lex.REGCLASS
const REGION = lex.REGION
const REGIONAL = lex.REGIONAL
const REGIONS = lex.REGIONS
const REGPROC = lex.REGPROC
const REGPROCEDURE = lex.REGPROCEDURE
const REGNAMESPACE = lex.REGNAMESPACE
const REGTYPE = lex.REGTYPE
const REINDEX = lex.REINDEX
const REMOVE_PATH = lex.REMOVE_PATH
const RENAME = lex.RENAME
const REPEATABLE = lex.REPEATABLE
const REPLACE = lex.REPLACE
const REPLICATION = lex.REPLICATION
const RELEASE = lex.RELEASE
const RESET = lex.RESET
const RESTORE = lex.RESTORE
const RESTRICT = lex.RESTRICT
const RESUME = lex.RESUME
const RETURNING = lex.RETURNING
const RETRY = lex.RETRY
const REVISION_HISTORY = lex.REVISION_HISTORY
const REVOKE = lex.REVOKE
const RIGHT = lex.RIGHT
const ROLE = lex.ROLE
const ROLES = lex.ROLES
const ROLLBACK = lex.ROLLBACK
const ROLLUP = lex.ROLLUP
const ROW = lex.ROW
const ROWS = lex.ROWS
const RSHIFT = lex.RSHIFT
const RULE = lex.RULE
const RUNNING = lex.RUNNING
const SAVEPOINT = lex.SAVEPOINT
const SCATTER = lex.SCATTER
const SCHEDULE = lex.SCHEDULE
const SCHEDULES = lex.SCHEDULES
const SCHEMA = lex.SCHEMA
const SCHEMAS = lex.SCHEMAS
const SCRUB = lex.SCRUB
const SEARCH = lex.SEARCH
const SECOND = lex.SECOND
const SELECT = lex.SELECT
const SEQUENCE = lex.SEQUENCE
const SEQUENCES = lex.SEQUENCES
const SERIALIZABLE = lex.SERIALIZABLE
const SERVER = lex.SERVER
const SESSION = lex.SESSION
const SESSIONS = lex.SESSIONS
const SESSION_USER = lex.SESSION_USER
const SET = lex.SET
const SETS = lex.SETS
const SETTING = lex.SETTING
const SETTINGS = lex.SETTINGS
const SHARE = lex.SHARE
const SHOW = lex.SHOW
const SIMILAR = lex.SIMILAR
const SIMPLE = lex.SIMPLE
const SKIP = lex.SKIP
const SKIP_MISSING_FOREIGN_KEYS = lex.SKIP_MISSING_FOREIGN_KEYS
const SKIP_MISSING_SEQUENCES = lex.SKIP_MISSING_SEQUENCES
const SKIP_MISSING_SEQUENCE_OWNERS = lex.SKIP_MISSING_SEQUENCE_OWNERS
const SKIP_MISSING_VIEWS = lex.SKIP_MISSING_VIEWS
const SMALLINT = lex.SMALLINT
const SMALLSERIAL = lex.SMALLSERIAL
const SNAPSHOT = lex.SNAPSHOT
const SOME = lex.SOME
const SPLIT = lex.SPLIT
const SQL = lex.SQL
const START = lex.START
const STATISTICS = lex.STATISTICS
const STATUS = lex.STATUS
const STDIN = lex.STDIN
const STREAM = lex.STREAM
const STRICT = lex.STRICT
const STRING = lex.STRING
const STORAGE = lex.STORAGE
const STORE = lex.STORE
const STORED = lex.STORED
const STORING = lex.STORING
const SUBSTRING = lex.SUBSTRING
const SURVIVE = lex.SURVIVE
const SURVIVAL = lex.SURVIVAL
const SYMMETRIC = lex.SYMMETRIC
const SYNTAX = lex.SYNTAX
const SYSTEM = lex.SYSTEM
const SQRT = lex.SQRT
const SUBSCRIPTION = lex.SUBSCRIPTION
const STATEMENTS = lex.STATEMENTS
const TABLE = lex.TABLE
const TABLES = lex.TABLES
const TABLESPACE = lex.TABLESPACE
const TEMP = lex.TEMP
const TEMPLATE = lex.TEMPLATE
const TEMPORARY = lex.TEMPORARY
const TENANT = lex.TENANT
const TESTING_RELOCATE = lex.TESTING_RELOCATE
const EXPERIMENTAL_RELOCATE = lex.EXPERIMENTAL_RELOCATE
const TEXT = lex.TEXT
const THEN = lex.THEN
const TIES = lex.TIES
const TIME = lex.TIME
const TIMETZ = lex.TIMETZ
const TIMESTAMP = lex.TIMESTAMP
const TIMESTAMPTZ = lex.TIMESTAMPTZ
const TO = lex.TO
const THROTTLING = lex.THROTTLING
const TRAILING = lex.TRAILING
const TRACE = lex.TRACE
const TRANSACTION = lex.TRANSACTION
const TRANSACTIONS = lex.TRANSACTIONS
const TREAT = lex.TREAT
const TRIGGER = lex.TRIGGER
const TRIM = lex.TRIM
const TRUE = lex.TRUE
const TRUNCATE = lex.TRUNCATE
const TRUSTED = lex.TRUSTED
const TYPE = lex.TYPE
const TYPES = lex.TYPES
const TRACING = lex.TRACING
const UNBOUNDED = lex.UNBOUNDED
const UNCOMMITTED = lex.UNCOMMITTED
const UNION = lex.UNION
const UNIQUE = lex.UNIQUE
const UNKNOWN = lex.UNKNOWN
const UNLOGGED = lex.UNLOGGED
const UNSPLIT = lex.UNSPLIT
const UPDATE = lex.UPDATE
const UPSERT = lex.UPSERT
const UNTIL = lex.UNTIL
const USE = lex.USE
const USER = lex.USER
const USERS = lex.USERS
const USING = lex.USING
const UUID = lex.UUID
const VALID = lex.VALID
const VALIDATE = lex.VALIDATE
const VALUE = lex.VALUE
const VALUES = lex.VALUES
const VARBIT = lex.VARBIT
const VARCHAR = lex.VARCHAR
const VARIADIC = lex.VARIADIC
const VIEW = lex.VIEW
const VARYING = lex.VARYING
const VIEWACTIVITY = lex.VIEWACTIVITY
const VIRTUAL = lex.VIRTUAL
const VISIBLE = lex.VISIBLE
const WHEN = lex.WHEN
const WHERE = lex.WHERE
const WINDOW = lex.WINDOW
const WITH = lex.WITH
const WITHIN = lex.WITHIN
const WITHOUT = lex.WITHOUT
const WORK = lex.WORK
const WRITE = lex.WRITE
const YEAR = lex.YEAR
const ZONE = lex.ZONE
const NOT_LA = lex.NOT_LA
const NULLS_LA = lex.NULLS_LA
const WITH_LA = lex.WITH_LA
const AS_LA = lex.AS_LA
const GENERATED_ALWAYS = lex.GENERATED_ALWAYS
const CONTAINED_BY = lex.CONTAINED_BY
const POSTFIXOP = lex.POSTFIXOP
const UMINUS = lex.UMINUS
const HELPTOKEN = lex.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ACCESS",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFFINITY",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASYMMETRIC",
	"AT",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"AVAILABILITY",
	"BACKUP",
	"BACKUPS",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BINARY",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BOX2D",
	"BUNDLE",
	"BY",
	"CACHE",
	"CANCEL",
	"CANCELQUERY",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONNECTION",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONTROLCHANGEFEED",
	"CONTROLJOB",
	"CONVERSION",
	"CONVERT",
	"COPY",
	"COVERING",
	"CREATE",
	"CREATEDB",
	"CREATELOGIN",
	"CREATEROLE",
	"CROSS",
	"CSV",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CURSOR",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DELIMITER",
	"DESC",
	"DESTINATION",
	"DETACHED",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ENUMS",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXECUTION",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FAILURE",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE_INDEX",
	"FOREIGN",
	"FROM",
	"FULL",
	"FUNCTION",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYM",
	"GEOMETRYZ",
	"GEOMETRYZM",
	"GEOMETRYCOLLECTION",
	"GEOMETRYCOLLECTIONM",
	"GEOMETRYCOLLECTIONZ",
	"GEOMETRYCOLLECTIONZM",
	"GLOBAL",
	"GOAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HIGH",
	"HISTOGRAM",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDING",
	"INCREMENT",
	"INCREMENTAL",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INHERITS",
	"INJECT",
	"INTERLEAVE",
	"INITIALLY",
	"INNER",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INTO_DB",
	"INVERTED",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KMS",
	"KV",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LATEST",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LINESTRINGM",
	"LINESTRINGZ",
	"LINESTRINGZM",
	"LIST",
	"LOCAL",
	"LOCALITY",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"METHOD",
	"MINUTE",
	"MODIFYCLUSTERSETTING",
	"MONTH",
	"MULTILINESTRING",
	"MULTILINESTRINGM",
	"MULTILINESTRINGZ",
	"MULTILINESTRINGZM",
	"MULTIPOINT",
	"MULTIPOINTM",
	"MULTIPOINTZ",
	"MULTIPOINTZM",
	"MULTIPOLYGON",
	"MULTIPOLYGONM",
	"MULTIPOLYGONZ",
	"MULTIPOLYGONZM",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEVER",
	"NEXT",
	"NO",
	"NOCANCELQUERY",
	"NOCONTROLCHANGEFEED",
	"NOCONTROLJOB",
	"NOCREATEDB",
	"NOCREATELOGIN",
	"NOCREATEROLE",
	"NOLOGIN",
	"NOMODIFYCLUSTERSETTING",
	"NO_INDEX_JOIN",
	"NONE",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOVIEWACTIVITY",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PAUSED",
	"PHYSICAL",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POINTM",
	"POINTZ",
	"POINTZM",
	"POLYGON",
	"POLYGONM",
	"POLYGONZ",
	"POLYGONZM",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIORITY",
	"PRIVILEGES",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"REASSIGN",
	"RECURSIVE",
	"RECURRING",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REGCLASS",
	"REGION",
	"REGIONAL",
	"REGIONS",
	"REGPROC",
	"REGPROCEDURE",
	"REGNAMESPACE",
	"REGTYPE",
	"REINDEX",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"REPLICATION",
	"RELEASE",
	"RESET",
	"RESTORE",
	"RESTRICT",
	"RESUME",
	"RETURNING",
	"RETRY",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"RUNNING",
	"SAVEPOINT",
	"SCATTER",
	"SCHEDULE",
	"SCHEDULES",
	"SCHEMA",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETS",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SKIP_MISSING_FOREIGN_KEYS",
	"SKIP_MISSING_SEQUENCES",
	"SKIP_MISSING_SEQUENCE_OWNERS",
	"SKIP_MISSING_VIEWS",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"START",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STREAM",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SURVIVE",
	"SURVIVAL",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"STATEMENTS",
	"TABLE",
	"TABLES",
	"TABLESPACE",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TENANT",
	"TESTING_RELOCATE",
	"EXPERIMENTAL_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TRANSACTIONS",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TYPES",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIEWACTIVITY",
	"VIRTUAL",
	"VISIBLE",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"NULLS_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"'{'",
	"'}'",
	"':'",
}

var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:12881

//line yacctab:1
var sqlExca = [...]int{
	-1, 0,
	1, 35,
	-2, 1484,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 57,
	258, 383,
	-2, 0,
	-1, 74,
	240, 226,
	504, 226,
	-2, 0,
	-1, 87,
	228, 1232,
	242, 1232,
	258, 379,
	384, 379,
	394, 1002,
	430, 379,
	442, 1002,
	488, 1002,
	515, 379,
	541, 1002,
	-2, 0,
	-1, 93,
	133, 1484,
	235, 1484,
	526, 1484,
	527, 1484,
	-2, 0,
	-1, 109,
	151, 1455,
	170, 1455,
	183, 1455,
	238, 1455,
	271, 1455,
	336, 1455,
	346, 1455,
	521, 1455,
	-2, 1426,
	-1, 148,
	159, 863,
	257, 863,
	387, 830,
	447, 830,
	487, 830,
	507, 863,
	509, 830,
	-2, 0,
	-1, 150,
	4, 1486,
	21, 1486,
	22, 1486,
	23, 1486,
	24, 1486,
	25, 1486,
	26, 1486,
	27, 1486,
	28, 1486,
	30, 1486,
	31, 1486,
	37, 1486,
	42, 1486,
	43, 1486,
	45, 1486,
	46, 1486,
	47, 1486,
	48, 1486,
	49, 1486,
	50, 1486,
	51, 1486,
	52, 1486,
	54, 1486,
	55, 1486,
	56, 1486,
	57, 1486,
	59, 1486,
	60, 1486,
	61, 1486,
	62, 1486,
	63, 1486,
	64, 1486,
	65, 1486,
	69, 1486,
	70, 1486,
	71, 1486,
	72, 1486,
	74, 1486,
	75, 1486,
	76, 1486,
	80, 1486,
	81, 1486,
	82, 1486,
	83, 1486,
	84, 1486,
	85, 1486,
	86, 1486,
	89, 1486,
	90, 1486,
	91, 1486,
	92, 1486,
	93, 1486,
	95, 1486,
	97, 1486,
	98, 1486,
	99, 1486,
	100, 1486,
	101, 1486,
	102, 1486,
	104, 1486,
	105, 1486,
	106, 1486,
	108, 1486,
	109, 1486,
	110, 1486,
	118, 1486,
	119, 1486,
	120, 1486,
	121, 1486,
	122, 1486,
	124, 1486,
	125, 1486,
	126, 1486,
	128, 1486,
	129, 1486,
	130, 1486,
	132, 1486,
	133, 1486,
	134, 1486,
	136, 1486,
	137, 1486,
	138, 1486,
	141, 1486,
	142, 1486,
	143, 1486,
	145, 1486,
	146, 1486,
	148, 1486,
	149, 1486,
	150, 1486,
	152, 1486,
	153, 1486,
	154, 1486,
	155, 1486,
	156, 1486,
	157, 1486,
	158, 1486,
	159, 1486,
	160, 1486,
	161, 1486,
	162, 1486,
	163, 1486,
	164, 1486,
	165, 1486,
	166, 1486,
	167, 1486,
	169, 1486,
	175, 1486,
	176, 1486,
	177, 1486,
	178, 1486,
	182, 1486,
	184, 1486,
	188, 1486,
	189, 1486,
	190, 1486,
	191, 1486,
	192, 1486,
	193, 1486,
	194, 1486,
	195, 1486,
	196, 1486,
	197, 1486,
	198, 1486,
	199, 1486,
	200, 1486,
	202, 1486,
	203, 1486,
	205, 1486,
	206, 1486,
	208, 1486,
	209, 1486,
	210, 1486,
	211, 1486,
	212, 1486,
	213, 1486,
	214, 1486,
	215, 1486,
	216, 1486,
	218, 1486,
	219, 1486,
	221, 1486,
	222, 1486,
	223, 1486,
	224, 1486,
	228, 1486,
	229, 1486,
	230, 1486,
	231, 1486,
	232, 1486,
	235, 1486,
	236, 1486,
	237, 1486,
	239, 1486,
	241, 1486,
	242, 1486,
	244, 1486,
	246, 1486,
	247, 1486,
	248, 1486,
	250, 1486,
	254, 1486,
	255, 1486,
	256, 1486,
	257, 1486,
	258, 1486,
	259, 1486,
	261, 1486,
	262, 1486,
	263, 1486,
	265, 1486,
	266, 1486,
	268, 1486,
	269, 1486,
	272, 1486,
	276, 1486,
	277, 1486,
	278, 1486,
	281, 1486,
	282, 1486,
	283, 1486,
	284, 1486,
	286, 1486,
	287, 1486,
	288, 1486,
	289, 1486,
	290, 1486,
	291, 1486,
	292, 1486,
	293, 1486,
	294, 1486,
	295, 1486,
	296, 1486,
	297, 1486,
	298, 1486,
	299, 1486,
	300, 1486,
	301, 1486,
	302, 1486,
	303, 1486,
	304, 1486,
	305, 1486,
	306, 1486,
	307, 1486,
	309, 1486,
	311, 1486,
	312, 1486,
	313, 1486,
	314, 1486,
	315, 1486,
	316, 1486,
	317, 1486,
	318, 1486,
	319, 1486,
	320, 1486,
	321, 1486,
	322, 1486,
	324, 1486,
	326, 1486,
	328, 1486,
	329, 1486,
	331, 1486,
	332, 1486,
	333, 1486,
	334, 1486,
	335, 1486,
	338, 1486,
	341, 1486,
	342, 1486,
	343, 1486,
	344, 1486,
	347, 1486,
	348, 1486,
	349, 1486,
	351, 1486,
	353, 1486,
	354, 1486,
	355, 1486,
	356, 1486,
	357, 1486,
	358, 1486,
	359, 1486,
	360, 1486,
	361, 1486,
	362, 1486,
	363, 1486,
	364, 1486,
	366, 1486,
	367, 1486,
	368, 1486,
	369, 1486,
	370, 1486,
	371, 1486,
	372, 1486,
	373, 1486,
	374, 1486,
	375, 1486,
	376, 1486,
	377, 1486,
	378, 1486,
	379, 1486,
	380, 1486,
	382, 1486,
	383, 1486,
	385, 1486,
	386, 1486,
	387, 1486,
	388, 1486,
	389, 1486,
	390, 1486,
	391, 1486,
	392, 1486,
	393, 1486,
	394, 1486,
	395, 1486,
	396, 1486,
	398, 1486,
	400, 1486,
	401, 1486,
	402, 1486,
	407, 1486,
	409, 1486,
	410, 1486,
	411, 1486,
	412, 1486,
	413, 1486,
	414, 1486,
	415, 1486,
	416, 1486,
	417, 1486,
	419, 1486,
	420, 1486,
	421, 1486,
	423, 1486,
	424, 1486,
	425, 1486,
	426, 1486,
	427, 1486,
	428, 1486,
	430, 1486,
	431, 1486,
	432, 1486,
	433, 1486,
	434, 1486,
	435, 1486,
	436, 1486,
	437, 1486,
	438, 1486,
	439, 1486,
	440, 1486,
	442, 1486,
	443, 1486,
	444, 1486,
	445, 1486,
	446, 1486,
	447, 1486,
	449, 1486,
	450, 1486,
	451, 1486,
	452, 1486,
	453, 1486,
	454, 1486,
	456, 1486,
	457, 1486,
	458, 1486,
	459, 1486,
	460, 1486,
	461, 1486,
	462, 1486,
	464, 1486,
	466, 1486,
	467, 1486,
	468, 1486,
	469, 1486,
	470, 1486,
	471, 1486,
	472, 1486,
	473, 1486,
	474, 1486,
	475, 1486,
	476, 1486,
	477, 1486,
	478, 1486,
	479, 1486,
	480, 1486,
	481, 1486,
	483, 1486,
	484, 1486,
	486, 1486,
	487, 1486,
	489, 1486,
	490, 1486,
	491, 1486,
	492, 1486,
	493, 1486,
	494, 1486,
	495, 1486,
	496, 1486,
	497, 1486,
	499, 1486,
	500, 1486,
	501, 1486,
	502, 1486,
	503, 1486,
	505, 1486,
	507, 1486,
	508, 1486,
	509, 1486,
	510, 1486,
	511, 1486,
	512, 1486,
	514, 1486,
	515, 1486,
	516, 1486,
	517, 1486,
	519, 1486,
	520, 1486,
	523, 1486,
	524, 1486,
	525, 1486,
	526, 1486,
	527, 1486,
	528, 1486,
	529, 1486,
	531, 1486,
	534, 1486,
	535, 1486,
	536, 1486,
	537, 1486,
	538, 1486,
	539, 1486,
	541, 1486,
	542, 1486,
	543, 1486,
	544, 1486,
	550, 1486,
	551, 1486,
	552, 1486,
	553, 1486,
	554, 1486,
	555, 1486,
	-2, 0,
	-1, 151,
	1, 1341,
	131, 1341,
	246, 1341,
	325, 1341,
	382, 1341,
	391, 1341,
	559, 1341,
	583, 1341,
	-2, 0,
	-1, 153,
	1, 1341,
	583, 1341,
	-2, 0,
	-1, 154,
	1, 1341,
	583, 1341,
	-2, 0,
	-1, 155,
	1, 1341,
	504, 1341,
	583, 1341,
	-2, 0,
	-1, 183,
	151, 1454,
	170, 1454,
	183, 1454,
	238, 1454,
	271, 1454,
	336, 1454,
	346, 1454,
	521, 1454,
	-2, 1429,
	-1, 229,
	4, 1493,
	5, 1493,
	6, 1493,
	7, 1493,
	8, 1493,
	9, 1493,
	10, 1493,
	21, 1493,
	22, 1493,
	23, 1493,
	24, 1493,
	25, 1493,
	26, 1493,
	27, 1493,
	28, 1493,
	30, 1493,
	31, 1493,
	37, 1493,
	38, 1493,
	42, 1493,
	43, 1493,
	44, 1493,
	45, 1493,
	46, 1493,
	47, 1493,
	48, 1493,
	49, 1493,
	50, 1493,
	51, 1493,
	52, 1493,
	54, 1493,
	55, 1493,
	56, 1493,
	57, 1493,
	59, 1493,
	60, 1493,
	61, 1493,
	62, 1493,
	63, 1493,
	64, 1493,
	65, 1493,
	66, 1493,
	67, 1493,
	68, 1493,
	69, 1493,
	70, 1493,
	71, 1493,
	72, 1493,
	74, 1493,
	75, 1493,
	76, 1493,
	78, 1493,
	80, 1493,
	81, 1493,
	82, 1493,
	83, 1493,
	84, 1493,
	85, 1493,
	86, 1493,
	89, 1493,
	90, 1493,
	91, 1493,
	92, 1493,
	93, 1493,
	95, 1493,
	97, 1493,
	98, 1493,
	99, 1493,
	100, 1493,
	101, 1493,
	102, 1493,
	104, 1493,
	105, 1493,
	106, 1493,
	107, 1493,
	108, 1493,
	109, 1493,
	110, 1493,
	111, 1493,
	112, 1493,
	113, 1493,
	114, 1493,
	115, 1493,
	116, 1493,
	117, 1493,
	118, 1493,
	119, 1493,
	120, 1493,
	121, 1493,
	122, 1493,
	123, 1493,
	124, 1493,
	125, 1493,
	126, 1493,
	127, 1493,
	128, 1493,
	129, 1493,
	130, 1493,
	132, 1493,
	133, 1493,
	134, 1493,
	136, 1493,
	137, 1493,
	138, 1493,
	141, 1493,
	142, 1493,
	143, 1493,
	145, 1493,
	146, 1493,
	148, 1493,
	149, 1493,
	150, 1493,
	152, 1493,
	153, 1493,
	154, 1493,
	155, 1493,
	156, 1493,
	157, 1493,
	158, 1493,
	159, 1493,
	160, 1493,
	161, 1493,
	162, 1493,
	163, 1493,
	164, 1493,
	165, 1493,
	166, 1493,
	167, 1493,
	168, 1493,
	169, 1493,
	175, 1493,
	176, 1493,
	177, 1493,
	178, 1493,
	182, 1493,
	184, 1493,
	187, 1493,
	188, 1493,
	189, 1493,
	190, 1493,
	191, 1493,
	192, 1493,
	193, 1493,
	194, 1493,
	195, 1493,
	196, 1493,
	197, 1493,
	198, 1493,
	199, 1493,
	200, 1493,
	202, 1493,
	203, 1493,
	205, 1493,
	206, 1493,
	208, 1493,
	209, 1493,
	210, 1493,
	211, 1493,
	212, 1493,
	213, 1493,
	214, 1493,
	215, 1493,
	216, 1493,
	217, 1493,
	218, 1493,
	219, 1493,
	221, 1493,
	222, 1493,
	223, 1493,
	224, 1493,
	228, 1493,
	229, 1493,
	230, 1493,
	231, 1493,
	232, 1493,
	234, 1493,
	235, 1493,
	236, 1493,
	237, 1493,
	239, 1493,
	241, 1493,
	242, 1493,
	243, 1493,
	244, 1493,
	245, 1493,
	246, 1493,
	247, 1493,
	248, 1493,
	249, 1493,
	250, 1493,
	254, 1493,
	255, 1493,
	256, 1493,
	257, 1493,
	258, 1493,
	259, 1493,
	261, 1493,
	262, 1493,
	263, 1493,
	265, 1493,
	266, 1493,
	267, 1493,
	268, 1493,
	269, 1493,
	270, 1493,
	272, 1493,
	276, 1493,
	277, 1493,
	278, 1493,
	279, 1493,
	280, 1493,
	281, 1493,
	282, 1493,
	283, 1493,
	284, 1493,
	286, 1493,
	287, 1493,
	288, 1493,
	289, 1493,
	290, 1493,
	291, 1493,
	292, 1493,
	293, 1493,
	294, 1493,
	295, 1493,
	296, 1493,
	297, 1493,
	298, 1493,
	299, 1493,
	300, 1493,
	301, 1493,
	302, 1493,
	303, 1493,
	304, 1493,
	305, 1493,
	306, 1493,
	307, 1493,
	309, 1493,
	310, 1493,
	311, 1493,
	312, 1493,
	313, 1493,
	314, 1493,
	315, 1493,
	316, 1493,
	317, 1493,
	318, 1493,
	319, 1493,
	320, 1493,
	321, 1493,
	322, 1493,
	323, 1493,
	324, 1493,
	325, 1493,
	326, 1493,
	327, 1493,
	328, 1493,
	329, 1493,
	330, 1493,
	331, 1493,
	332, 1493,
	333, 1493,
	334, 1493,
	335, 1493,
	338, 1493,
	342, 1493,
	343, 1493,
	344, 1493,
	347, 1493,
	348, 1493,
	349, 1493,
	350, 1493,
	351, 1493,
	352, 1493,
	353, 1493,
	354, 1493,
	355, 1493,
	356, 1493,
	357, 1493,
	358, 1493,
	359, 1493,
	360, 1493,
	361, 1493,
	362, 1493,
	363, 1493,
	364, 1493,
	366, 1493,
	367, 1493,
	368, 1493,
	369, 1493,
	370, 1493,
	371, 1493,
	372, 1493,
	373, 1493,
	374, 1493,
	375, 1493,
	376, 1493,
	377, 1493,
	378, 1493,
	379, 1493,
	380, 1493,
	382, 1493,
	383, 1493,
	385, 1493,
	386, 1493,
	387, 1493,
	388, 1493,
	389, 1493,
	390, 1493,
	391, 1493,
	392, 1493,
	393, 1493,
	394, 1493,
	395, 1493,
	396, 1493,
	398, 1493,
	400, 1493,
	401, 1493,
	402, 1493,
	407, 1493,
	409, 1493,
	410, 1493,
	411, 1493,
	412, 1493,
	413, 1493,
	414, 1493,
	415, 1493,
	416, 1493,
	417, 1493,
	419, 1493,
	420, 1493,
	421, 1493,
	422, 1493,
	423, 1493,
	424, 1493,
	425, 1493,
	426, 1493,
	427, 1493,
	428, 1493,
	430, 1493,
	431, 1493,
	432, 1493,
	433, 1493,
	434, 1493,
	435, 1493,
	436, 1493,
	437, 1493,
	438, 1493,
	439, 1493,
	440, 1493,
	442, 1493,
	443, 1493,
	444, 1493,
	445, 1493,
	446, 1493,
	447, 1493,
	448, 1493,
	449, 1493,
	450, 1493,
	451, 1493,
	452, 1493,
	453, 1493,
	454, 1493,
	455, 1493,
	456, 1493,
	457, 1493,
	458, 1493,
	459, 1493,
	460, 1493,
	461, 1493,
	462, 1493,
	464, 1493,
	466, 1493,
	467, 1493,
	468, 1493,
	469, 1493,
	470, 1493,
	471, 1493,
	472, 1493,
	473, 1493,
	474, 1493,
	475, 1493,
	476, 1493,
	477, 1493,
	478, 1493,
	479, 1493,
	480, 1493,
	481, 1493,
	483, 1493,
	484, 1493,
	485, 1493,
	486, 1493,
	487, 1493,
	489, 1493,
	490, 1493,
	491, 1493,
	492, 1493,
	493, 1493,
	494, 1493,
	495, 1493,
	496, 1493,
	497, 1493,
	499, 1493,
	500, 1493,
	501, 1493,
	502, 1493,
	503, 1493,
	505, 1493,
	507, 1493,
	508, 1493,
	509, 1493,
	510, 1493,
	511, 1493,
	512, 1493,
	513, 1493,
	514, 1493,
	515, 1493,
	516, 1493,
	517, 1493,
	519, 1493,
	520, 1493,
	522, 1493,
	523, 1493,
	524, 1493,
	525, 1493,
	526, 1493,
	527, 1493,
	528, 1493,
	529, 1493,
	530, 1493,
	531, 1493,
	534, 1493,
	535, 1493,
	536, 1493,
	537, 1493,
	538, 1493,
	539, 1493,
	541, 1493,
	542, 1493,
	543, 1493,
	544, 1493,
	550, 1493,
	551, 1493,
	552, 1493,
	553, 1493,
	554, 1493,
	555, 1493,
	556, 1493,
	564, 1493,
	571, 1493,
	572, 1493,
	573, 1493,
	580, 1493,
	584, 1493,
	-2, 0,
	-1, 723,
	4, 1230,
	21, 1230,
	22, 1230,
	23, 1230,
	24, 1230,
	25, 1230,
	26, 1230,
	27, 1230,
	28, 1230,
	30, 1230,
	31, 1230,
	37, 1230,
	42, 1230,
	43, 1230,
	45, 1230,
	46, 1230,
	47, 1230,
	48, 1230,
	49, 1230,
	50, 1230,
	51, 1230,
	52, 1230,
	54, 1230,
	55, 1230,
	56, 1230,
	57, 1230,
	59, 1230,
	60, 1230,
	61, 1230,
	62, 1230,
	63, 1230,
	64, 1230,
	65, 1230,
	69, 1230,
	70, 1230,
	71, 1230,
	72, 1230,
	74, 1230,
	75, 1230,
	76, 1230,
	80, 1230,
	81, 1230,
	82, 1230,
	83, 1230,
	84, 1230,
	85, 1230,
	86, 1230,
	89, 1230,
	90, 1230,
	91, 1230,
	92, 1230,
	93, 1230,
	95, 1230,
	97, 1230,
	98, 1230,
	99, 1230,
	100, 1230,
	101, 1230,
	102, 1230,
	104, 1230,
	105, 1230,
	106, 1230,
	108, 1230,
	109, 1230,
	110, 1230,
	118, 1230,
	119, 1230,
	120, 1230,
	121, 1230,
	122, 1230,
	124, 1230,
	125, 1230,
	126, 1230,
	128, 1230,
	129, 1230,
	130, 1230,
	132, 1230,
	133, 1230,
	134, 1230,
	136, 1230,
	137, 1230,
	138, 1230,
	141, 1230,
	142, 1230,
	143, 1230,
	145, 1230,
	146, 1230,
	148, 1230,
	149, 1230,
	150, 1230,
	152, 1230,
	153, 1230,
	154, 1230,
	155, 1230,
	156, 1230,
	157, 1230,
	158, 1230,
	159, 1230,
	160, 1230,
	161, 1230,
	162, 1230,
	163, 1230,
	164, 1230,
	165, 1230,
	166, 1230,
	167, 1230,
	169, 1230,
	175, 1230,
	176, 1230,
	177, 1230,
	178, 1230,
	182, 1230,
	184, 1230,
	188, 1230,
	189, 1230,
	190, 1230,
	191, 1230,
	192, 1230,
	193, 1230,
	194, 1230,
	195, 1230,
	196, 1230,
	197, 1230,
	198, 1230,
	199, 1230,
	200, 1230,
	202, 1230,
	203, 1230,
	205, 1230,
	206, 1230,
	208, 1230,
	209, 1230,
	210, 1230,
	211, 1230,
	212, 1230,
	213, 1230,
	214, 1230,
	215, 1230,
	216, 1230,
	218, 1230,
	219, 1230,
	221, 1230,
	222, 1230,
	223, 1230,
	224, 1230,
	228, 1230,
	229, 1230,
	230, 1230,
	231, 1230,
	232, 1230,
	235, 1230,
	236, 1230,
	237, 1230,
	239, 1230,
	241, 1230,
	242, 1230,
	244, 1230,
	246, 1230,
	247, 1230,
	248, 1230,
	250, 1230,
	254, 1230,
	255, 1230,
	256, 1230,
	257, 1230,
	258, 1230,
	259, 1230,
	261, 1230,
	262, 1230,
	263, 1230,
	265, 1230,
	266, 1230,
	268, 1230,
	269, 1230,
	272, 1230,
	276, 1230,
	277, 1230,
	278, 1230,
	281, 1230,
	282, 1230,
	283, 1230,
	284, 1230,
	286, 1230,
	287, 1230,
	288, 1230,
	289, 1230,
	290, 1230,
	291, 1230,
	292, 1230,
	293, 1230,
	294, 1230,
	295, 1230,
	296, 1230,
	297, 1230,
	298, 1230,
	299, 1230,
	300, 1230,
	301, 1230,
	302, 1230,
	303, 1230,
	304, 1230,
	305, 1230,
	306, 1230,
	307, 1230,
	309, 1230,
	311, 1230,
	312, 1230,
	313, 1230,
	314, 1230,
	315, 1230,
	316, 1230,
	317, 1230,
	318, 1230,
	319, 1230,
	320, 1230,
	321, 1230,
	322, 1230,
	324, 1230,
	326, 1230,
	328, 1230,
	329, 1230,
	331, 1230,
	332, 1230,
	333, 1230,
	334, 1230,
	335, 1230,
	338, 1230,
	342, 1230,
	343, 1230,
	344, 1230,
	347, 1230,
	348, 1230,
	349, 1230,
	351, 1230,
	353, 1230,
	354, 1230,
	355, 1230,
	356, 1230,
	357, 1230,
	358, 1230,
	359, 1230,
	360, 1230,
	361, 1230,
	362, 1230,
	363, 1230,
	364, 1230,
	366, 1230,
	367, 1230,
	368, 1230,
	369, 1230,
	370, 1230,
	371, 1230,
	372, 1230,
	373, 1230,
	374, 1230,
	375, 1230,
	376, 1230,
	377, 1230,
	378, 1230,
	379, 1230,
	380, 1230,
	382, 1230,
	383, 1230,
	385, 1230,
	386, 1230,
	387, 1230,
	388, 1230,
	389, 1230,
	390, 1230,
	391, 1230,
	392, 1230,
	393, 1230,
	394, 1230,
	395, 1230,
	396, 1230,
	398, 1230,
	400, 1230,
	401, 1230,
	402, 1230,
	407, 1230,
	409, 1230,
	410, 1230,
	411, 1230,
	412, 1230,
	413, 1230,
	414, 1230,
	415, 1230,
	416, 1230,
	417, 1230,
	419, 1230,
	420, 1230,
	421, 1230,
	423, 1230,
	424, 1230,
	425, 1230,
	426, 1230,
	427, 1230,
	428, 1230,
	430, 1230,
	431, 1230,
	432, 1230,
	433, 1230,
	434, 1230,
	435, 1230,
	436, 1230,
	437, 1230,
	438, 1230,
	439, 1230,
	440, 1230,
	442, 1230,
	443, 1230,
	444, 1230,
	445, 1230,
	446, 1230,
	447, 1230,
	449, 1230,
	450, 1230,
	451, 1230,
	452, 1230,
	453, 1230,
	454, 1230,
	456, 1230,
	457, 1230,
	458, 1230,
	459, 1230,
	460, 1230,
	461, 1230,
	462, 1230,
	464, 1230,
	466, 1230,
	467, 1230,
	468, 1230,
	469, 1230,
	470, 1230,
	471, 1230,
	472, 1230,
	473, 1230,
	474, 1230,
	475, 1230,
	476, 1230,
	477, 1230,
	478, 1230,
	479, 1230,
	480, 1230,
	481, 1230,
	483, 1230,
	484, 1230,
	486, 1230,
	487, 1230,
	489, 1230,
	490, 1230,
	491, 1230,
	492, 1230,
	493, 1230,
	494, 1230,
	495, 1230,
	496, 1230,
	497, 1230,
	499, 1230,
	500, 1230,
	501, 1230,
	502, 1230,
	503, 1230,
	505, 1230,
	507, 1230,
	508, 1230,
	509, 1230,
	510, 1230,
	511, 1230,
	512, 1230,
	514, 1230,
	515, 1230,
	516, 1230,
	517, 1230,
	519, 1230,
	520, 1230,
	523, 1230,
	524, 1230,
	525, 1230,
	526, 1230,
	527, 1230,
	528, 1230,
	529, 1230,
	531, 1230,
	534, 1230,
	535, 1230,
	536, 1230,
	537, 1230,
	538, 1230,
	539, 1230,
	541, 1230,
	542, 1230,
	543, 1230,
	544, 1230,
	550, 1230,
	551, 1230,
	552, 1230,
	553, 1230,
	554, 1230,
	555, 1230,
	-2, 0,
	-1, 742,
	186, 2251,
	504, 2251,
	563, 2251,
	582, 2251,
	-2, 0,
	-1, 743,
	186, 2355,
	504, 2355,
	563, 2355,
	582, 2355,
	-2, 0,
	-1, 744,
	186, 2238,
	504, 2238,
	563, 2238,
	582, 2238,
	-2, 0,
	-1, 746,
	186, 2485,
	504, 2485,
	563, 2485,
	582, 2485,
	-2, 0,
	-1, 748,
	186, 2525,
	504, 2525,
	563, 2525,
	582, 2525,
	-2, 0,
	-1, 755,
	186, 2382,
	504, 2382,
	563, 2382,
	582, 2382,
	-2, 666,
	-1, 785,
	582, 2186,
	585, 2186,
	-2, 933,
	-1, 786,
	582, 2188,
	585, 2188,
	-2, 934,
	-1, 787,
	582, 2187,
	585, 2187,
	-2, 935,
	-1, 788,
	585, 2113,
	-2, 936,
	-1, 811,
	183, 240,
	-2, 0,
	-1, 835,
	44, 2160,
	-2, 0,
	-1, 836,
	541, 1208,
	-2, 1003,
	-1, 852,
	4, 1622,
	21, 1622,
	22, 1622,
	23, 1622,
	24, 1622,
	25, 1622,
	26, 1622,
	27, 1622,
	28, 1622,
	30, 1622,
	31, 1622,
	37, 1622,
	42, 1622,
	43, 1622,
	45, 1622,
	46, 1622,
	47, 1622,
	48, 1622,
	49, 1622,
	50, 1622,
	51, 1622,
	52, 1622,
	54, 1622,
	55, 1622,
	56, 1622,
	57, 1622,
	59, 1622,
	60, 1622,
	61, 1622,
	62, 1622,
	63, 1622,
	64, 1622,
	65, 1622,
	69, 1622,
	70, 1622,
	71, 1622,
	72, 1622,
	74, 1622,
	75, 1622,
	76, 1622,
	80, 1622,
	81, 1622,
	82, 1622,
	83, 1622,
	84, 1622,
	85, 1622,
	86, 1622,
	89, 1622,
	90, 1622,
	91, 1622,
	92, 1622,
	93, 1622,
	95, 1622,
	97, 1622,
	98, 1622,
	99, 1622,
	100, 1622,
	101, 1622,
	102, 1622,
	104, 1622,
	105, 1622,
	106, 1622,
	108, 1622,
	109, 1622,
	110, 1622,
	118, 1622,
	119, 1622,
	120, 1622,
	121, 1622,
	122, 1622,
	124, 1622,
	125, 1622,
	126, 1622,
	128, 1622,
	129, 1622,
	130, 1622,
	132, 1622,
	133, 1622,
	134, 1622,
	136, 1622,
	137, 1622,
	138, 1622,
	141, 1622,
	142, 1622,
	143, 1622,
	145, 1622,
	146, 1622,
	148, 1622,
	149, 1622,
	150, 1622,
	152, 1622,
	153, 1622,
	154, 1622,
	155, 1622,
	156, 1622,
	157, 1622,
	158, 1622,
	159, 1622,
	160, 1622,
	161, 1622,
	162, 1622,
	163, 1622,
	164, 1622,
	165, 1622,
	166, 1622,
	167, 1622,
	169, 1622,
	175, 1622,
	176, 1622,
	177, 1622,
	178, 1622,
	182, 1622,
	184, 1622,
	188, 1622,
	189, 1622,
	190, 1622,
	191, 1622,
	192, 1622,
	193, 1622,
	194, 1622,
	195, 1622,
	196, 1622,
	197, 1622,
	198, 1622,
	199, 1622,
	200, 1622,
	202, 1622,
	203, 1622,
	205, 1622,
	206, 1622,
	208, 1622,
	209, 1622,
	210, 1622,
	211, 1622,
	212, 1622,
	213, 1622,
	214, 1622,
	215, 1622,
	216, 1622,
	218, 1622,
	219, 1622,
	221, 1622,
	222, 1622,
	223, 1622,
	224, 1622,
	228, 1622,
	229, 1622,
	230, 1622,
	231, 1622,
	232, 1622,
	235, 1622,
	236, 1622,
	237, 1622,
	239, 1622,
	241, 1622,
	242, 1622,
	244, 1622,
	246, 1622,
	247, 1622,
	248, 1622,
	250, 1622,
	254, 1622,
	255, 1622,
	256, 1622,
	257, 1622,
	258, 1622,
	259, 1622,
	261, 1622,
	262, 1622,
	263, 1622,
	265, 1622,
	266, 1622,
	268, 1622,
	269, 1622,
	272, 1622,
	276, 1622,
	277, 1622,
	278, 1622,
	281, 1622,
	282, 1622,
	283, 1622,
	284, 1622,
	286, 1622,
	287, 1622,
	288, 1622,
	289, 1622,
	290, 1622,
	291, 1622,
	292, 1622,
	293, 1622,
	294, 1622,
	295, 1622,
	296, 1622,
	297, 1622,
	298, 1622,
	299, 1622,
	300, 1622,
	301, 1622,
	302, 1622,
	303, 1622,
	304, 1622,
	305, 1622,
	306, 1622,
	307, 1622,
	309, 1622,
	311, 1622,
	312, 1622,
	313, 1622,
	314, 1622,
	315, 1622,
	316, 1622,
	317, 1622,
	318, 1622,
	319, 1622,
	320, 1622,
	321, 1622,
	322, 1622,
	324, 1622,
	326, 1622,
	328, 1622,
	329, 1622,
	331, 1622,
	332, 1622,
	333, 1622,
	334, 1622,
	335, 1622,
	338, 1622,
	342, 1622,
	343, 1622,
	344, 1622,
	347, 1622,
	348, 1622,
	349, 1622,
	351, 1622,
	353, 1622,
	354, 1622,
	355, 1622,
	356, 1622,
	357, 1622,
	358, 1622,
	359, 1622,
	360, 1622,
	361, 1622,
	362, 1622,
	363, 1622,
	364, 1622,
	366, 1622,
	367, 1622,
	368, 1622,
	369, 1622,
	370, 1622,
	371, 1622,
	372, 1622,
	373, 1622,
	374, 1622,
	375, 1622,
	376, 1622,
	377, 1622,
	378, 1622,
	379, 1622,
	380, 1622,
	382, 1622,
	383, 1622,
	385, 1622,
	386, 1622,
	387, 1622,
	388, 1622,
	389, 1622,
	390, 1622,
	391, 1622,
	392, 1622,
	393, 1622,
	394, 1622,
	395, 1622,
	396, 1622,
	398, 1622,
	400, 1622,
	401, 1622,
	402, 1622,
	407, 1622,
	409, 1622,
	410, 1622,
	411, 1622,
	412, 1622,
	413, 1622,
	414, 1622,
	415, 1622,
	416, 1622,
	417, 1622,
	419, 1622,
	420, 1622,
	421, 1622,
	423, 1622,
	424, 1622,
	425, 1622,
	426, 1622,
	427, 1622,
	428, 1622,
	430, 1622,
	431, 1622,
	432, 1622,
	433, 1622,
	434, 1622,
	435, 1622,
	436, 1622,
	437, 1622,
	438, 1622,
	439, 1622,
	440, 1622,
	442, 1622,
	443, 1622,
	444, 1622,
	445, 1622,
	446, 1622,
	447, 1622,
	449, 1622,
	450, 1622,
	451, 1622,
	452, 1622,
	453, 1622,
	454, 1622,
	456, 1622,
	457, 1622,
	458, 1622,
	459, 1622,
	460, 1622,
	461, 1622,
	462, 1622,
	464, 1622,
	466, 1622,
	467, 1622,
	468, 1622,
	469, 1622,
	470, 1622,
	471, 1622,
	472, 1622,
	473, 1622,
	474, 1622,
	475, 1622,
	476, 1622,
	477, 1622,
	478, 1622,
	479, 1622,
	480, 1622,
	481, 1622,
	483, 1622,
	484, 1622,
	486, 1622,
	487, 1622,
	489, 1622,
	490, 1622,
	491, 1622,
	492, 1622,
	493, 1622,
	494, 1622,
	495, 1622,
	496, 1622,
	497, 1622,
	499, 1622,
	500, 1622,
	501, 1622,
	502, 1622,
	503, 1622,
	505, 1622,
	507, 1622,
	508, 1622,
	509, 1622,
	510, 1622,
	511, 1622,
	512, 1622,
	514, 1622,
	515, 1622,
	516, 1622,
	517, 1622,
	519, 1622,
	520, 1622,
	523, 1622,
	524, 1622,
	525, 1622,
	526, 1622,
	527, 1622,
	528, 1622,
	529, 1622,
	531, 1622,
	534, 1622,
	535, 1622,
	536, 1622,
	537, 1622,
	538, 1622,
	539, 1622,
	541, 1622,
	542, 1622,
	543, 1622,
	544, 1622,
	550, 1622,
	551, 1622,
	552, 1622,
	553, 1622,
	554, 1622,
	555, 1622,
	-2, 0,
	-1, 860,
	258, 383,
	-2, 0,
	-1, 930,
	387, 831,
	447, 831,
	487, 831,
	509, 831,
	-2, 0,
	-1, 931,
	387, 830,
	447, 830,
	487, 830,
	509, 830,
	-2, 770,
	-1, 935,
	1, 877,
	579, 877,
	581, 877,
	583, 877,
	-2, 0,
	-1, 936,
	1, 805,
	579, 805,
	581, 805,
	583, 805,
	-2, 0,
	-1, 937,
	1, 809,
	579, 809,
	581, 809,
	583, 809,
	-2, 0,
	-1, 938,
	1, 932,
	183, 932,
	579, 932,
	581, 932,
	583, 932,
	-2, 0,
	-1, 946,
	1, 836,
	579, 836,
	581, 836,
	583, 836,
	-2, 0,
	-1, 952,
	1, 877,
	579, 877,
	581, 877,
	583, 877,
	-2, 0,
	-1, 953,
	1, 879,
	579, 879,
	581, 879,
	583, 879,
	-2, 0,
	-1, 954,
	1, 882,
	579, 882,
	581, 882,
	583, 882,
	-2, 0,
	-1, 960,
	1, 900,
	579, 900,
	581, 900,
	583, 900,
	-2, 0,
	-1, 961,
	1, 902,
	579, 902,
	581, 902,
	583, 902,
	-2, 0,
	-1, 966,
	1, 927,
	579, 927,
	581, 927,
	583, 927,
	-2, 0,
	-1, 1012,
	170, 1497,
	183, 1497,
	271, 1497,
	336, 1497,
	-2, 1433,
	-1, 1027,
	170, 1496,
	183, 1496,
	271, 1496,
	336, 1496,
	-2, 1430,
	-1, 1053,
	582, 2185,
	-2, 674,
	-1, 1081,
	5, 2177,
	580, 2175,
	-2, 2166,
	-1, 1089,
	5, 2198,
	580, 2195,
	-2, 2186,
	-1, 1090,
	5, 2199,
	580, 2196,
	-2, 2187,
	-1, 1098,
	582, 2183,
	-2, 2165,
	-1, 1099,
	580, 2607,
	-2, 2184,
	-1, 1122,
	580, 2606,
	-2, 2200,
	-1, 1123,
	5, 1697,
	-2, 2577,
	-1, 1124,
	5, 1698,
	-2, 2578,
	-1, 1125,
	5, 1699,
	-2, 2592,
	-1, 1126,
	5, 1700,
	-2, 2556,
	-1, 1127,
	5, 1701,
	-2, 2590,
	-1, 1128,
	5, 1709,
	-2, 2569,
	-1, 1129,
	5, 1696,
	-2, 2565,
	-1, 1130,
	5, 1696,
	-2, 2564,
	-1, 1131,
	5, 1696,
	-2, 2583,
	-1, 1132,
	5, 1707,
	-2, 2558,
	-1, 1133,
	5, 1712,
	-2, 2557,
	-1, 1134,
	5, 1714,
	-2, 2602,
	-1, 1137,
	5, 1736,
	-2, 2595,
	-1, 1138,
	5, 1728,
	-2, 2596,
	-1, 1139,
	5, 1736,
	-2, 2597,
	-1, 1140,
	5, 1732,
	-2, 2598,
	-1, 1141,
	5, 1682,
	-2, 2570,
	-1, 1142,
	5, 1683,
	-2, 2571,
	-1, 1143,
	5, 1684,
	-2, 2559,
	-1, 1171,
	5, 1719,
	-2, 2603,
	-1, 1172,
	5, 1720,
	-2, 2593,
	-1, 1173,
	5, 1721,
	542, 1721,
	-2, 2560,
	-1, 1174,
	5, 1722,
	542, 1722,
	-2, 2561,
	-1, 1211,
	580, 2195,
	-2, 2186,
	-1, 1212,
	580, 2196,
	-2, 2187,
	-1, 1312,
	186, 2525,
	504, 2525,
	563, 2525,
	582, 2525,
	-2, 0,
	-1, 1315,
	1, 652,
	583, 652,
	-2, 1349,
	-1, 1443,
	355, 2161,
	409, 2161,
	449, 2161,
	573, 2161,
	-2, 2151,
	-1, 1454,
	584, 2161,
	-2, 2162,
	-1, 1460,
	1, 1205,
	579, 1205,
	581, 1205,
	583, 1205,
	-2, 1482,
	-1, 1508,
	394, 1002,
	541, 1002,
	-2, 378,
	-1, 1525,
	44, 2159,
	-2, 968,
	-1, 1532,
	1, 1205,
	579, 1205,
	581, 1205,
	583, 1205,
	-2, 1482,
	-1, 1540,
	4, 1230,
	21, 1230,
	22, 1230,
	23, 1230,
	24, 1230,
	25, 1230,
	26, 1230,
	27, 1230,
	28, 1230,
	30, 1230,
	31, 1230,
	37, 1230,
	42, 1230,
	43, 1230,
	45, 1230,
	46, 1230,
	47, 1230,
	48, 1230,
	49, 1230,
	50, 1230,
	51, 1230,
	52, 1230,
	54, 1230,
	55, 1230,
	56, 1230,
	57, 1230,
	59, 1230,
	60, 1230,
	61, 1230,
	62, 1230,
	63, 1230,
	64, 1230,
	65, 1230,
	69, 1230,
	70, 1230,
	71, 1230,
	72, 1230,
	74, 1230,
	75, 1230,
	76, 1230,
	80, 1230,
	81, 1230,
	82, 1230,
	83, 1230,
	84, 1230,
	85, 1230,
	86, 1230,
	89, 1230,
	90, 1230,
	91, 1230,
	92, 1230,
	93, 1230,
	95, 1230,
	97, 1230,
	98, 1230,
	99, 1230,
	100, 1230,
	101, 1230,
	102, 1230,
	104, 1230,
	105, 1230,
	106, 1230,
	108, 1230,
	109, 1230,
	110, 1230,
	118, 1230,
	119, 1230,
	120, 1230,
	121, 1230,
	122, 1230,
	124, 1230,
	125, 1230,
	126, 1230,
	128, 1230,
	129, 1230,
	130, 1230,
	132, 1230,
	133, 1230,
	134, 1230,
	136, 1230,
	137, 1230,
	138, 1230,
	141, 1230,
	142, 1230,
	143, 1230,
	145, 1230,
	146, 1230,
	148, 1230,
	149, 1230,
	150, 1230,
	152, 1230,
	153, 1230,
	154, 1230,
	155, 1230,
	156, 1230,
	157, 1230,
	158, 1230,
	159, 1230,
	160, 1230,
	161, 1230,
	162, 1230,
	163, 1230,
	164, 1230,
	165, 1230,
	166, 1230,
	167, 1230,
	175, 1230,
	176, 1230,
	177, 1230,
	178, 1230,
	182, 1230,
	184, 1230,
	188, 1230,
	189, 1230,
	190, 1230,
	191, 1230,
	192, 1230,
	193, 1230,
	194, 1230,
	195, 1230,
	196, 1230,
	197, 1230,
	198, 1230,
	199, 1230,
	200, 1230,
	202, 1230,
	203, 1230,
	205, 1230,
	206, 1230,
	208, 1230,
	209, 1230,
	210, 1230,
	211, 1230,
	212, 1230,
	213, 1230,
	214, 1230,
	215, 1230,
	216, 1230,
	218, 1230,
	219, 1230,
	221, 1230,
	222, 1230,
	223, 1230,
	224, 1230,
	229, 1230,
	230, 1230,
	231, 1230,
	232, 1230,
	235, 1230,
	236, 1230,
	237, 1230,
	239, 1230,
	241, 1230,
	242, 1230,
	244, 1230,
	246, 1230,
	247, 1230,
	248, 1230,
	250, 1230,
	254, 1230,
	255, 1230,
	256, 1230,
	257, 1230,
	258, 1230,
	259, 1230,
	261, 1230,
	262, 1230,
	263, 1230,
	265, 1230,
	266, 1230,
	268, 1230,
	269, 1230,
	272, 1230,
	276, 1230,
	277, 1230,
	278, 1230,
	281, 1230,
	282, 1230,
	283, 1230,
	284, 1230,
	286, 1230,
	287, 1230,
	288, 1230,
	289, 1230,
	290, 1230,
	291, 1230,
	292, 1230,
	293, 1230,
	294, 1230,
	295, 1230,
	296, 1230,
	297, 1230,
	298, 1230,
	299, 1230,
	300, 1230,
	301, 1230,
	302, 1230,
	303, 1230,
	304, 1230,
	305, 1230,
	306, 1230,
	307, 1230,
	309, 1230,
	311, 1230,
	312, 1230,
	313, 1230,
	314, 1230,
	315, 1230,
	316, 1230,
	317, 1230,
	318, 1230,
	319, 1230,
	320, 1230,
	321, 1230,
	322, 1230,
	324, 1230,
	328, 1230,
	329, 1230,
	331, 1230,
	332, 1230,
	333, 1230,
	334, 1230,
	335, 1230,
	338, 1230,
	340, 1230,
	342, 1230,
	343, 1230,
	344, 1230,
	347, 1230,
	348, 1230,
	349, 1230,
	351, 1230,
	353, 1230,
	354, 1230,
	355, 1230,
	356, 1230,
	357, 1230,
	358, 1230,
	359, 1230,
	360, 1230,
	361, 1230,
	362, 1230,
	363, 1230,
	364, 1230,
	366, 1230,
	367, 1230,
	368, 1230,
	369, 1230,
	370, 1230,
	371, 1230,
	372, 1230,
	373, 1230,
	374, 1230,
	375, 1230,
	376, 1230,
	377, 1230,
	378, 1230,
	379, 1230,
	380, 1230,
	382, 1230,
	383, 1230,
	385, 1230,
	386, 1230,
	387, 1230,
	388, 1230,
	389, 1230,
	390, 1230,
	391, 1230,
	392, 1230,
	393, 1230,
	394, 1230,
	395, 1230,
	396, 1230,
	398, 1230,
	400, 1230,
	401, 1230,
	402, 1230,
	407, 1230,
	409, 1230,
	410, 1230,
	411, 1230,
	412, 1230,
	413, 1230,
	414, 1230,
	415, 1230,
	416, 1230,
	417, 1230,
	419, 1230,
	420, 1230,
	421, 1230,
	423, 1230,
	424, 1230,
	425, 1230,
	426, 1230,
	427, 1230,
	428, 1230,
	430, 1230,
	431, 1230,
	432, 1230,
	433, 1230,
	434, 1230,
	435, 1230,
	436, 1230,
	437, 1230,
	438, 1230,
	439, 1230,
	440, 1230,
	442, 1230,
	443, 1230,
	444, 1230,
	445, 1230,
	446, 1230,
	447, 1230,
	449, 1230,
	450, 1230,
	451, 1230,
	452, 1230,
	453, 1230,
	454, 1230,
	456, 1230,
	457, 1230,
	458, 1230,
	459, 1230,
	460, 1230,
	461, 1230,
	462, 1230,
	464, 1230,
	466, 1230,
	467, 1230,
	468, 1230,
	469, 1230,
	470, 1230,
	471, 1230,
	472, 1230,
	473, 1230,
	474, 1230,
	475, 1230,
	476, 1230,
	477, 1230,
	478, 1230,
	479, 1230,
	480, 1230,
	481, 1230,
	483, 1230,
	484, 1230,
	486, 1230,
	487, 1230,
	489, 1230,
	490, 1230,
	491, 1230,
	492, 1230,
	493, 1230,
	494, 1230,
	495, 1230,
	496, 1230,
	497, 1230,
	499, 1230,
	500, 1230,
	501, 1230,
	502, 1230,
	503, 1230,
	505, 1230,
	507, 1230,
	508, 1230,
	509, 1230,
	510, 1230,
	511, 1230,
	512, 1230,
	514, 1230,
	515, 1230,
	516, 1230,
	517, 1230,
	519, 1230,
	520, 1230,
	523, 1230,
	524, 1230,
	525, 1230,
	526, 1230,
	527, 1230,
	528, 1230,
	529, 1230,
	531, 1230,
	534, 1230,
	535, 1230,
	536, 1230,
	537, 1230,
	538, 1230,
	539, 1230,
	541, 1230,
	542, 1230,
	543, 1230,
	544, 1230,
	550, 1230,
	551, 1230,
	552, 1230,
	553, 1230,
	554, 1230,
	555, 1230,
	-2, 0,
	-1, 1563,
	1, 523,
	579, 523,
	581, 523,
	583, 523,
	-2, 1453,
	-1, 1566,
	4, 2601,
	11, 2601,
	12, 2601,
	14, 2601,
	15, 2601,
	16, 2601,
	17, 2601,
	18, 2601,
	19, 2601,
	21, 2601,
	22, 2601,
	23, 2601,
	24, 2601,
	25, 2601,
	26, 2601,
	27, 2601,
	28, 2601,
	30, 2601,
	31, 2601,
	34, 2601,
	35, 2601,
	37, 2601,
	39, 2601,
	42, 2601,
	43, 2601,
	45, 2601,
	46, 2601,
	47, 2601,
	48, 2601,
	49, 2601,
	50, 2601,
	51, 2601,
	52, 2601,
	54, 2601,
	55, 2601,
	56, 2601,
	57, 2601,
	59, 2601,
	60, 2601,
	61, 2601,
	62, 2601,
	63, 2601,
	64, 2601,
	65, 2601,
	69, 2601,
	70, 2601,
	71, 2601,
	72, 2601,
	74, 2601,
	75, 2601,
	76, 2601,
	77, 2601,
	80, 2601,
	81, 2601,
	82, 2601,
	83, 2601,
	84, 2601,
	85, 2601,
	86, 2601,
	87, 2601,
	89, 2601,
	90, 2601,
	91, 2601,
	92, 2601,
	93, 2601,
	95, 2601,
	96, 2601,
	97, 2601,
	98, 2601,
	99, 2601,
	100, 2601,
	101, 2601,
	102, 2601,
	104, 2601,
	105, 2601,
	106, 2601,
	107, 2601,
	108, 2601,
	109, 2601,
	110, 2601,
	118, 2601,
	119, 2601,
	120, 2601,
	121, 2601,
	122, 2601,
	124, 2601,
	125, 2601,
	126, 2601,
	128, 2601,
	129, 2601,
	130, 2601,
	132, 2601,
	133, 2601,
	134, 2601,
	136, 2601,
	137, 2601,
	138, 2601,
	141, 2601,
	142, 2601,
	143, 2601,
	145, 2601,
	146, 2601,
	148, 2601,
	149, 2601,
	150, 2601,
	152, 2601,
	153, 2601,
	154, 2601,
	155, 2601,
	156, 2601,
	157, 2601,
	158, 2601,
	159, 2601,
	160, 2601,
	161, 2601,
	162, 2601,
	163, 2601,
	164, 2601,
	165, 2601,
	166, 2601,
	167, 2601,
	171, 2601,
	172, 2601,
	173, 2601,
	174, 2601,
	175, 2601,
	176, 2601,
	177, 2601,
	178, 2601,
	181, 2601,
	182, 2601,
	184, 2601,
	187, 2601,
	188, 2601,
	189, 2601,
	190, 2601,
	191, 2601,
	192, 2601,
	193, 2601,
	194, 2601,
	195, 2601,
	196, 2601,
	197, 2601,
	198, 2601,
	199, 2601,
	200, 2601,
	202, 2601,
	203, 2601,
	205, 2601,
	206, 2601,
	208, 2601,
	209, 2601,
	210, 2601,
	211, 2601,
	212, 2601,
	213, 2601,
	214, 2601,
	215, 2601,
	216, 2601,
	217, 2601,
	218, 2601,
	219, 2601,
	220, 2601,
	221, 2601,
	222, 2601,
	223, 2601,
	224, 2601,
	226, 2601,
	227, 2601,
	229, 2601,
	230, 2601,
	231, 2601,
	232, 2601,
	234, 2601,
	235, 2601,
	236, 2601,
	237, 2601,
	239, 2601,
	241, 2601,
	242, 2601,
	243, 2601,
	244, 2601,
	245, 2601,
	246, 2601,
	247, 2601,
	248, 2601,
	249, 2601,
	250, 2601,
	252, 2601,
	253, 2601,
	254, 2601,
	255, 2601,
	256, 2601,
	257, 2601,
	258, 2601,
	259, 2601,
	261, 2601,
	262, 2601,
	263, 2601,
	265, 2601,
	266, 2601,
	267, 2601,
	268, 2601,
	269, 2601,
	270, 2601,
	272, 2601,
	276, 2601,
	277, 2601,
	278, 2601,
	281, 2601,
	282, 2601,
	283, 2601,
	284, 2601,
	285, 2601,
	286, 2601,
	287, 2601,
	288, 2601,
	289, 2601,
	290, 2601,
	291, 2601,
	292, 2601,
	293, 2601,
	294, 2601,
	295, 2601,
	296, 2601,
	297, 2601,
	298, 2601,
	299, 2601,
	300, 2601,
	301, 2601,
	302, 2601,
	303, 2601,
	304, 2601,
	305, 2601,
	306, 2601,
	307, 2601,
	309, 2601,
	310, 2601,
	311, 2601,
	312, 2601,
	313, 2601,
	314, 2601,
	315, 2601,
	316, 2601,
	317, 2601,
	318, 2601,
	319, 2601,
	320, 2601,
	321, 2601,
	322, 2601,
	324, 2601,
	327, 2601,
	328, 2601,
	329, 2601,
	331, 2601,
	332, 2601,
	333, 2601,
	334, 2601,
	335, 2601,
	338, 2601,
	342, 2601,
	343, 2601,
	344, 2601,
	345, 2601,
	347, 2601,
	348, 2601,
	349, 2601,
	351, 2601,
	353, 2601,
	354, 2601,
	355, 2601,
	356, 2601,
	357, 2601,
	358, 2601,
	359, 2601,
	360, 2601,
	361, 2601,
	362, 2601,
	363, 2601,
	364, 2601,
	366, 2601,
	367, 2601,
	368, 2601,
	369, 2601,
	370, 2601,
	371, 2601,
	372, 2601,
	373, 2601,
	374, 2601,
	375, 2601,
	376, 2601,
	377, 2601,
	378, 2601,
	379, 2601,
	380, 2601,
	382, 2601,
	383, 2601,
	385, 2601,
	386, 2601,
	387, 2601,
	388, 2601,
	389, 2601,
	390, 2601,
	391, 2601,
	392, 2601,
	393, 2601,
	394, 2601,
	395, 2601,
	396, 2601,
	398, 2601,
	400, 2601,
	401, 2601,
	402, 2601,
	407, 2601,
	408, 2601,
	409, 2601,
	410, 2601,
	411, 2601,
	412, 2601,
	413, 2601,
	414, 2601,
	415, 2601,
	416, 2601,
	417, 2601,
	419, 2601,
	420, 2601,
	421, 2601,
	422, 2601,
	423, 2601,
	424, 2601,
	425, 2601,
	426, 2601,
	427, 2601,
	428, 2601,
	429, 2601,
	430, 2601,
	431, 2601,
	432, 2601,
	433, 2601,
	434, 2601,
	435, 2601,
	436, 2601,
	437, 2601,
	438, 2601,
	439, 2601,
	440, 2601,
	442, 2601,
	443, 2601,
	444, 2601,
	445, 2601,
	446, 2601,
	447, 2601,
	449, 2601,
	450, 2601,
	451, 2601,
	452, 2601,
	453, 2601,
	454, 2601,
	455, 2601,
	456, 2601,
	457, 2601,
	458, 2601,
	459, 2601,
	460, 2601,
	461, 2601,
	462, 2601,
	464, 2601,
	466, 2601,
	467, 2601,
	468, 2601,
	469, 2601,
	470, 2601,
	471, 2601,
	472, 2601,
	473, 2601,
	474, 2601,
	475, 2601,
	476, 2601,
	477, 2601,
	478, 2601,
	479, 2601,
	480, 2601,
	481, 2601,
	483, 2601,
	484, 2601,
	486, 2601,
	487, 2601,
	489, 2601,
	490, 2601,
	491, 2601,
	492, 2601,
	493, 2601,
	494, 2601,
	495, 2601,
	496, 2601,
	497, 2601,
	499, 2601,
	500, 2601,
	501, 2601,
	502, 2601,
	503, 2601,
	505, 2601,
	507, 2601,
	508, 2601,
	509, 2601,
	510, 2601,
	511, 2601,
	512, 2601,
	514, 2601,
	515, 2601,
	516, 2601,
	517, 2601,
	519, 2601,
	520, 2601,
	523, 2601,
	524, 2601,
	525, 2601,
	526, 2601,
	527, 2601,
	528, 2601,
	529, 2601,
	531, 2601,
	534, 2601,
	535, 2601,
	536, 2601,
	537, 2601,
	538, 2601,
	539, 2601,
	541, 2601,
	542, 2601,
	543, 2601,
	544, 2601,
	550, 2601,
	551, 2601,
	552, 2601,
	553, 2601,
	554, 2601,
	555, 2601,
	556, 2601,
	558, 2601,
	561, 2601,
	562, 2601,
	563, 2601,
	564, 2601,
	565, 2601,
	566, 2601,
	568, 2601,
	569, 2601,
	570, 2601,
	571, 2601,
	572, 2601,
	573, 2601,
	574, 2601,
	575, 2601,
	576, 2601,
	578, 2601,
	581, 2601,
	582, 2601,
	584, 2601,
	585, 2601,
	-2, 0,
	-1, 1571,
	186, 2485,
	504, 2485,
	563, 2485,
	582, 2485,
	-2, 0,
	-1, 1620,
	387, 831,
	447, 831,
	487, 831,
	509, 831,
	-2, 0,
	-1, 1647,
	1, 826,
	579, 826,
	581, 826,
	583, 826,
	-2, 0,
	-1, 1648,
	1, 864,
	579, 864,
	581, 864,
	583, 864,
	-2, 0,
	-1, 1649,
	1, 872,
	579, 872,
	581, 872,
	583, 872,
	-2, 0,
	-1, 1652,
	1, 835,
	579, 835,
	581, 835,
	583, 835,
	-2, 0,
	-1, 1654,
	1, 839,
	579, 839,
	581, 839,
	583, 839,
	-2, 0,
	-1, 1660,
	1, 846,
	579, 846,
	581, 846,
	583, 846,
	-2, 0,
	-1, 1689,
	1, 2547,
	579, 2547,
	581, 2547,
	582, 2547,
	583, 2547,
	-2, 898,
	-1, 1690,
	1, 2482,
	579, 2482,
	581, 2482,
	582, 2482,
	583, 2482,
	-2, 899,
	-1, 1708,
	1, 1344,
	583, 1344,
	-2, 1349,
	-1, 1711,
	170, 1496,
	183, 1496,
	271, 1496,
	336, 1496,
	-2, 1434,
	-1, 1805,
	151, 1455,
	170, 1455,
	183, 1455,
	238, 1455,
	271, 1455,
	336, 1455,
	346, 1455,
	521, 1455,
	-2, 1897,
	-1, 1865,
	581, 2047,
	-2, 0,
	-1, 1900,
	151, 1455,
	170, 1455,
	183, 1455,
	238, 1455,
	271, 1455,
	336, 1455,
	346, 1455,
	521, 1455,
	-2, 1583,
	-1, 1934,
	504, 2482,
	582, 2482,
	585, 2482,
	-2, 0,
	-1, 1951,
	580, 1724,
	-2, 1712,
	-1, 1982,
	186, 2482,
	582, 2482,
	585, 2482,
	-2, 0,
	-1, 2030,
	1, 654,
	583, 654,
	-2, 1349,
	-1, 2156,
	220, 241,
	-2, 2194,
	-1, 2157,
	220, 242,
	-2, 287,
	-1, 2261,
	1, 828,
	579, 828,
	581, 828,
	583, 828,
	-2, 0,
	-1, 2262,
	1, 866,
	579, 866,
	581, 866,
	583, 866,
	-2, 0,
	-1, 2263,
	1, 874,
	579, 874,
	581, 874,
	583, 874,
	-2, 0,
	-1, 2297,
	1, 848,
	579, 848,
	581, 848,
	583, 848,
	-2, 0,
	-1, 2350,
	427, 1523,
	428, 1523,
	-2, 1757,
	-1, 2381,
	14, 0,
	15, 0,
	16, 0,
	561, 0,
	562, 0,
	563, 0,
	-2, 1777,
	-1, 2382,
	14, 0,
	15, 0,
	16, 0,
	561, 0,
	562, 0,
	563, 0,
	-2, 1778,
	-1, 2383,
	96, 0,
	252, 0,
	253, 0,
	565, 0,
	566, 0,
	-2, 1779,
	-1, 2384,
	96, 0,
	252, 0,
	253, 0,
	565, 0,
	566, 0,
	-2, 1780,
	-1, 2385,
	96, 0,
	252, 0,
	253, 0,
	565, 0,
	566, 0,
	-2, 1781,
	-1, 2386,
	96, 0,
	252, 0,
	253, 0,
	565, 0,
	566, 0,
	-2, 1782,
	-1, 2387,
	96, 0,
	252, 0,
	253, 0,
	565, 0,
	566, 0,
	-2, 1783,
	-1, 2388,
	14, 0,
	15, 0,
	16, 0,
	561, 0,
	562, 0,
	563, 0,
	-2, 1784,
	-1, 2400,
	14, 0,
	15, 0,
	16, 0,
	561, 0,
	562, 0,
	563, 0,
	-2, 1796,
	-1, 2401,
	14, 0,
	15, 0,
	16, 0,
	561, 0,
	562, 0,
	563, 0,
	-2, 1797,
	-1, 2402,
	14, 0,
	15, 0,
	16, 0,
	561, 0,
	562, 0,
	563, 0,
	-2, 1798,
	-1, 2405,
	17, 0,
	18, 0,
	19, 0,
	51, 0,
	217, 0,
	220, 0,
	270, 0,
	455, 0,
	556, 0,
	564, 0,
	-2, 1803,
	-1, 2411,
	17, 0,
	18, 0,
	19, 0,
	51, 0,
	217, 0,
	220, 0,
	270, 0,
	455, 0,
	556, 0,
	564, 0,
	-2, 1807,
	-1, 2413,
	17, 0,
	18, 0,
	19, 0,
	51, 0,
	217, 0,
	220, 0,
	270, 0,
	455, 0,
	556, 0,
	564, 0,
	-2, 1815,
	-1, 2414,
	17, 0,
	18, 0,
	19, 0,
	51, 0,
	217, 0,
	220, 0,
	270, 0,
	455, 0,
	556, 0,
	564, 0,
	-2, 1816,
	-1, 2415,
	17, 0,
	18, 0,
	19, 0,
	51, 0,
	217, 0,
	220, 0,
	270, 0,
	455, 0,
	556, 0,
	564, 0,
	-2, 1817,
	-1, 2416,
	17, 0,
	18, 0,
	19, 0,
	51, 0,
	217, 0,
	220, 0,
	270, 0,
	455, 0,
	556, 0,
	564, 0,
	-2, 1818,
	-1, 2552,
	5, 2198,
	186, 2058,
	580, 2195,
	-2, 2186,
	-1, 2553,
	186, 2059,
	-2, 2552,
	-1, 2554,
	186, 2060,
	-2, 2381,
	-1, 2555,
	186, 2061,
	-2, 2269,
	-1, 2556,
	186, 2062,
	-2, 2322,
	-1, 2557,
	186, 2063,
	-2, 2366,
	-1, 2558,
	186, 2064,
	-2, 2480,
	-1, 2559,
	186, 2065,
	-2, 1880,
	-1, 2629,
	1, 1584,
	2, 1584,
	107, 1584,
	151, 1584,
	170, 1584,
	183, 1584,
	187, 1584,
	204, 1584,
	207, 1584,
	234, 1584,
	238, 1584,
	249, 1584,
	267, 1584,
	271, 1584,
	310, 1584,
	336, 1584,
	340, 1584,
	346, 1584,
	418, 1584,
	422, 1584,
	521, 1584,
	532, 1584,
	547, 1584,
	548, 1584,
	549, 1584,
	559, 1584,
	579, 1584,
	581, 1584,
	583, 1584,
	585, 1584,
	-2, 1583,
	-1, 2642,
	580, 2167,
	-2, 2181,
	-1, 2644,
	1, 303,
	547, 303,
	-2, 1482,
	-1, 2670,
	580, 1723,
	-2, 1713,
	-1, 2848,
	1, 1205,
	579, 1205,
	581, 1205,
	583, 1205,
	-2, 1482,
	-1, 3016,
	341, 1526,
	-2, 2591,
	-1, 3017,
	341, 1527,
	-2, 2466,
	-1, 3021,
	427, 2124,
	428, 2124,
	-2, 1878,
	-1, 3022,
	427, 2128,
	428, 2128,
	-2, 1879,
	-1, 3023,
	427, 2125,
	428, 2125,
	-2, 1878,
	-1, 3024,
	427, 2129,
	428, 2129,
	-2, 1879,
	-1, 3037,
	17, 0,
	18, 0,
	19, 0,
	51, 0,
	217, 0,
	220, 0,
	270, 0,
	455, 0,
	556, 0,
	564, 0,
	-2, 1805,
	-1, 3038,
	17, 0,
	18, 0,
	19, 0,
	51, 0,
	217, 0,
	220, 0,
	270, 0,
	455, 0,
	556, 0,
	564, 0,
	-2, 1809,
	-1, 3044,
	17, 0,
	18, 0,
	19, 0,
	51, 0,
	217, 0,
	220, 0,
	270, 0,
	455, 0,
	556, 0,
	564, 0,
	-2, 1811,
	-1, 3284,
	1, 651,
	579, 651,
	581, 651,
	583, 651,
	-2, 1349,
	-1, 3438,
	44, 2159,
	-2, 969,
	-1, 3443,
	1, 1205,
	579, 1205,
	581, 1205,
	583, 1205,
	-2, 1482,
	-1, 3548,
	17, 0,
	18, 0,
	19, 0,
	51, 0,
	217, 0,
	220, 0,
	270, 0,
	455, 0,
	556, 0,
	564, 0,
	-2, 1813,
	-1, 3555,
	243, 0,
	245, 0,
	327, 0,
	-2, 1832,
	-1, 3622,
	14, 0,
	15, 0,
	16, 0,
	561, 0,
	562, 0,
	563, 0,
	-2, 1861,
	-1, 3623,
	14, 0,
	15, 0,
	16, 0,
	561, 0,
	562, 0,
	563, 0,
	-2, 1862,
	-1, 3624,
	14, 0,
	15, 0,
	16, 0,
	561, 0,
	562, 0,
	563, 0,
	-2, 1863,
	-1, 3628,
	14, 0,
	15, 0,
	16, 0,
	561, 0,
	562, 0,
	563, 0,
	-2, 1867,
	-1, 3629,
	14, 0,
	15, 0,
	16, 0,
	561, 0,
	562, 0,
	563, 0,
	-2, 1868,
	-1, 3630,
	14, 0,
	15, 0,
	16, 0,
	561, 0,
	562, 0,
	563, 0,
	-2, 1869,
	-1, 3676,
	580, 2168,
	-2, 2182,
	-1, 3843,
	582, 2709,
	-2, 1408,
	-1, 3901,
	243, 0,
	245, 0,
	327, 0,
	-2, 1833,
	-1, 3904,
	17, 0,
	18, 0,
	19, 0,
	51, 0,
	217, 0,
	220, 0,
	270, 0,
	455, 0,
	556, 0,
	564, 0,
	-2, 1836,
	-1, 3905,
	17, 0,
	18, 0,
	19, 0,
	51, 0,
	217, 0,
	220, 0,
	270, 0,
	455, 0,
	556, 0,
	564, 0,
	-2, 1838,
	-1, 4002,
	582, 2183,
	-2, 1240,
	-1, 4143,
	17, 0,
	18, 0,
	19, 0,
	51, 0,
	217, 0,
	220, 0,
	270, 0,
	455, 0,
	556, 0,
	564, 0,
	-2, 1837,
	-1, 4144,
	17, 0,
	18, 0,
	19, 0,
	51, 0,
	217, 0,
	220, 0,
	270, 0,
	455, 0,
	556, 0,
	564, 0,
	-2, 1839,
	-1, 4155,
	243, 0,
	-2, 1870,
	-1, 4326,
	243, 0,
	-2, 1871,
	-1, 4515,
	51, 0,
	217, 0,
	270, 0,
	455, 0,
	556, 0,
	564, 0,
	-2, 2555,
}

const sqlPrivate = 57344

const sqlLast = 122351

var sqlAct = [...]int{
	265, 4611, 3427, 4567, 4697, 3195, 2926, 4366, 4508, 2913,
	4201, 4388, 3426, 4514, 4248, 4496, 4525, 4358, 4638, 4483,
	4409, 4464, 2078, 3884, 4384, 1472, 4467, 2736, 2153, 4507,
	4526, 4580, 4447, 1204, 4527, 4279, 4187, 4255, 1037, 3587,
	2798, 4330, 4100, 4095, 3540, 4164, 2360, 3998, 4206, 4132,
	4513, 4061, 2228, 1284, 3310, 3460, 1288, 3827, 2778, 3835,
	4082, 4075, 4084, 4264, 3771, 257, 4041, 1277, 2584, 3030,
	3999, 2237, 3983, 4293, 1720, 787, 1938, 2428, 3454, 4105,
	3808, 3422, 1587, 2012, 1215, 3368, 3793, 2368, 3412, 3313,
	1270, 3791, 2086, 753, 3295, 4160, 2361, 2810, 2948, 2935,
	3499, 787, 1906, 3501, 2872, 1348, 2902, 3679, 1440, 2937,
	3238, 3940, 3210, 3218, 2883, 2235, 3883, 3178, 3201, 2897,
	862, 2928, 2945, 1028, 2899, 2934, 1036, 174, 3199, 3332,
	1875, 4, 2914, 2148, 2147, 2738, 4612, 2097, 4331, 2622,
	2470, 3647, 1813, 2621, 1447, 2441, 1282, 3307, 2365, 1527,
	3177, 2944, 2876, 259, 1628, 2143, 782, 2825, 2472, 2124,
	3014, 2131, 1851, 2624, 1195, 258, 2884, 2066, 2010, 1331,
	1085, 2070, 2602, 2777, 2461, 1708, 2425, 1256, 2056, 2201,
	1876, 2581, 2349, 2332, 3424, 2330, 1564, 1090, 1987, 3245,
	1279, 2654, 1585, 1267, 4410, 1895, 2907, 2188, 784, 1530,
	2938, 1317, 788, 789, 684, 2653, 2464, 1198, 2720, 1885,
	1846, 2592, 2611, 670, 2442, 1177, 1722, 692, 1892, 183,
	174, 1939, 2548, 108, 1798, 855, 2331, 1721, 793, 2333,
	735, 2214, 1212, 1081, 2514, 184, 1092, 1660, 1647, 1194,
	796, 747, 4568, 1135, 2187, 1562, 1467, 1555, 2085, 2354,
	1066, 1988, 1985, 687, 793, 44, 43, 1200, 41, 695,
	32, 30, 28, 1175, 1727, 710, 796, 924, 3065, 1707,
	1478, 944, 3061, 3661, 836, 3662, 1032, 3470, 2001, 1653,
	1471, 2001, 4710, 2001, 856, 2001, 2601, 2001, 2001, 4700,
	3197, 4685, 4684, 3479, 4674, 2601, 2601, 4656, 2162, 877,
	4654, 4205, 4599, 4556, 4205, 4549, 2162, 4557, 3268, 2601,
	3267, 1032, 73, 4547, 859, 858, 4544, 2601, 4541, 4511,
	4545, 4510, 4542, 2162, 3253, 2162, 4509, 4504, 3469, 74,
	2022, 2022, 4503, 4494, 4492, 4489, 2022, 4205, 4205, 4267,
	4462, 2594, 4434, 4427, 4205, 78, 2661, 2601, 4426, 4421,
	1192, 4420, 2601, 4205, 4414, 4205, 4380, 4328, 2162, 4310,
	4052, 2661, 4307, 3870, 4304, 4257, 2162, 4221, 4205, 4258,
	4220, 2162, 4212, 4211, 2162, 4204, 2162, 4205, 4171, 4205,
	4145, 2681, 2162, 1234, 2661, 87, 4124, 1178, 1178, 4113,
	2022, 4036, 4021, 3479, 1013, 2601, 2601, 1326, 3903, 3851,
	1735, 1736, 2661, 3496, 1326, 2019, 1778, 1779, 1780, 1033,
	1012, 3845, 3479, 2657, 3806, 3496, 3150, 3151, 3807, 3168,
	3169, 3170, 3671, 2236, 1766, 860, 3672, 2162, 3669, 1999,
	3651, 1738, 3670, 3654, 93, 3074, 3029, 2601, 3571, 107,
	1784, 3075, 2162, 3567, 93, 104, 2601, 2601, 2806, 2162,
	1022, 1735, 1736, 1027, 1768, 1769, 1770, 1778, 1779, 1780,
	1480, 1227, 2680, 3495, 3486, 1210, 1737, 3496, 3487, 3194,
	1181, 4435, 1182, 2601, 1771, 1766, 1757, 3189, 4332, 4323,
	3188, 2601, 1738, 1594, 2601, 1754, 3141, 4311, 1179, 3115,
	3142, 1784, 3165, 3116, 3107, 3105, 3076, 4267, 3108, 2601,
	2601, 94, 2022, 2952, 2924, 3150, 3151, 2022, 2224, 2923,
	2704, 3651, 2660, 2224, 2601, 2601, 2661, 1737, 2651, 2645,
	2600, 2223, 2601, 2162, 2601, 2224, 2593, 1757, 4093, 4052,
	4022, 3870, 3487, 2801, 2090, 2719, 1754, 2035, 2000, 2016,
	2019, 2878, 1228, 2161, 2820, 2717, 1871, 1466, 3756, 3471,
	3064, 3543, 3519, 1893, 2136, 1630, 1580, 2638, 2637, 2636,
	1760, 1761, 1762, 1763, 2635, 2634, 1183, 1180, 3472, 3956,
	1743, 1021, 1020, 1019, 1018, 1017, 1016, 1015, 1011, 1010,
	1009, 1008, 1007, 229, 3150, 3151, 3156, 1006, 2991, 4107,
	1005, 1004, 1003, 1002, 2467, 1001, 1000, 999, 998, 997,
	996, 995, 922, 921, 3150, 3151, 1775, 229, 920, 1785,
	919, 1760, 1761, 1762, 1763, 1765, 1767, 918, 3150, 3151,
	917, 1743, 916, 915, 229, 3172, 914, 913, 912, 2002,
	231, 911, 2002, 910, 2002, 909, 2002, 908, 2002, 2002,
	907, 1752, 1753, 906, 97, 905, 1735, 1736, 3171, 904,
	903, 902, 901, 900, 231, 1088, 899, 1775, 898, 1773,
	1785, 897, 896, 895, 1480, 894, 1765, 1767, 893, 1492,
	892, 231, 891, 890, 1758, 3156, 3469, 1738, 880, 230,
	1087, 2468, 879, 1781, 875, 1782, 874, 868, 867, 854,
	3166, 853, 1752, 1753, 3165, 810, 182, 100, 809, 103,
	73, 808, 807, 230, 799, 2497, 798, 1228, 797, 2019,
	1773, 768, 1737, 229, 759, 223, 758, 74, 229, 757,
	230, 741, 185, 229, 224, 1758, 148, 253, 1293, 1090,
	252, 861, 223, 78, 251, 250, 148, 1480, 1471, 249,
	2593, 224, 248, 247, 246, 245, 185, 1290, 244, 4335,
	243, 242, 1090, 1479, 3156, 241, 1090, 240, 239, 238,
	231, 237, 2469, 185, 2466, 231, 3915, 1783, 236, 235,
	231, 234, 1351, 87, 3156, 233, 1351, 232, 3692, 3166,
	3665, 1293, 1228, 3497, 3241, 1772, 3192, 1486, 3156, 4109,
	1330, 1278, 2910, 3087, 1335, 2483, 150, 1764, 2691, 3070,
	2481, 2000, 1090, 2019, 1090, 2016, 1090, 2680, 2325, 230,
	2974, 186, 1293, 860, 230, 2859, 1743, 2892, 1759, 230,
	1321, 223, 1854, 1655, 3193, 2665, 223, 107, 2643, 1853,
	224, 223, 93, 104, 3167, 224, 1896, 2628, 1293, 1443,
	224, 2064, 1454, 1278, 1776, 1455, 2231, 1854, 1764, 2021,
	1919, 1857, 185, 1083, 1853, 1824, 1474, 185, 1293, 1734,
	1450, 1337, 857, 1293, 4532, 1445, 1815, 1214, 1598, 1759,
	4512, 1090, 4491, 1090, 4395, 4320, 1852, 1293, 3166, 1817,
	1491, 1064, 4159, 1090, 4314, 1090, 4312, 1207, 4114, 94,
	4199, 4092, 3166, 3965, 1470, 1776, 3938, 3937, 3931, 1261,
	1264, 3930, 3929, 3922, 3921, 1278, 1278, 1536, 1539, 3919,
	2471, 3914, 1206, 3911, 3910, 3811, 3805, 1274, 3696, 3695,
	3694, 3675, 229, 3167, 1315, 3642, 1458, 3641, 3640, 2230,
	1293, 3150, 3151, 1542, 1480, 1344, 3563, 1437, 1442, 3150,
	3151, 3559, 3236, 3185, 793, 1774, 3150, 3151, 1090, 3176,
	1584, 1090, 3149, 1777, 1755, 1751, 796, 1748, 1746, 1747,
	1739, 1740, 1741, 1742, 1744, 1745, 3162, 3163, 3164, 231,
	1822, 3146, 3145, 3161, 3159, 3160, 3152, 3153, 3154, 3155,
	3157, 3158, 1525, 3143, 3114, 174, 174, 3113, 1310, 3112,
	1567, 1569, 3109, 1469, 1468, 229, 1774, 3106, 1485, 3086,
	3069, 1749, 1750, 1756, 1777, 1755, 1751, 1599, 1748, 1746,
	1747, 1739, 1740, 1741, 1742, 1744, 1745, 1816, 230, 1814,
	1191, 3925, 3167, 3062, 2465, 3924, 2925, 3754, 1301, 4108,
	223, 1035, 97, 2629, 2454, 1734, 3167, 1815, 1733, 224,
	2204, 4704, 231, 1090, 1090, 1090, 1090, 1090, 1090, 1090,
	2674, 2169, 2167, 1321, 4648, 4647, 1321, 3812, 2894, 4613,
	4566, 185, 1735, 1736, 3160, 3152, 3153, 3154, 3155, 3157,
	3158, 4564, 1216, 3589, 1090, 4454, 2762, 4387, 4376, 3190,
	1090, 1033, 4373, 4372, 182, 100, 1766, 103, 4371, 4352,
	4334, 230, 1558, 1738, 3150, 3151, 4333, 3168, 3169, 3170,
	4308, 3156, 4292, 223, 4291, 2431, 229, 1669, 229, 3156,
	4277, 229, 224, 1208, 4274, 4273, 3156, 3899, 4268, 861,
	4217, 4195, 4157, 4140, 148, 4139, 4121, 4120, 1737, 4078,
	4053, 3955, 3936, 3871, 185, 3865, 1712, 3862, 3742, 3741,
	3727, 3726, 1579, 1706, 3152, 3153, 3154, 3155, 3157, 3158,
	3724, 3657, 3645, 231, 1593, 231, 3554, 3812, 231, 1802,
	3498, 3161, 3159, 3160, 3152, 3153, 3154, 3155, 3157, 3158,
	3165, 3480, 3446, 4336, 1804, 3161, 3159, 3160, 3152, 3153,
	3154, 3155, 3157, 3158, 150, 1090, 1090, 1090, 3381, 3343,
	2437, 1090, 229, 1604, 3312, 3261, 3091, 3090, 1212, 186,
	1212, 3085, 230, 1621, 230, 3166, 3053, 230, 1741, 1742,
	1744, 1745, 2871, 3166, 223, 1351, 223, 1656, 1860, 223,
	1859, 1858, 1855, 224, 1090, 224, 229, 787, 224, 1847,
	3259, 1845, 1743, 1956, 787, 2672, 2671, 1293, 2640, 231,
	1735, 1736, 1922, 2633, 2599, 2909, 2479, 185, 1918, 2893,
	185, 1874, 229, 1935, 1709, 1717, 1013, 1869, 1716, 1882,
	1983, 1868, 1867, 1873, 3156, 1866, 1865, 1864, 1863, 1862,
	1861, 1738, 1012, 231, 1842, 1841, 1840, 1765, 1767, 1839,
	1838, 1711, 1837, 4081, 2496, 1836, 1454, 1835, 230, 2047,
	2046, 1713, 1930, 2055, 2057, 1730, 1731, 1033, 1834, 231,
	223, 1833, 1856, 1293, 1927, 1832, 1737, 229, 1923, 224,
	1090, 3233, 1831, 1830, 1293, 1829, 1879, 1880, 1903, 1828,
	1817, 1803, 230, 2232, 39, 1801, 3171, 1796, 174, 1309,
	1232, 185, 1090, 1454, 223, 1223, 1758, 3961, 1351, 1556,
	1178, 1848, 1849, 224, 3907, 1735, 1736, 3691, 230, 3167,
	3668, 3660, 3073, 2080, 231, 2663, 2631, 3167, 4175, 3963,
	223, 3690, 1561, 3150, 3151, 185, 1816, 3257, 3166, 224,
	2062, 1334, 1799, 3475, 2482, 4024, 1738, 1914, 2028, 2480,
	793, 4645, 4637, 2799, 1321, 4374, 4269, 793, 2053, 229,
	1925, 185, 796, 4260, 4259, 4112, 1904, 2055, 4055, 796,
	4054, 2027, 4023, 230, 3958, 3874, 2055, 1901, 3873, 1332,
	3872, 1737, 2050, 2055, 1894, 223, 3663, 3482, 4265, 3481,
	1326, 1854, 1896, 1033, 224, 1931, 3541, 3766, 1853, 3346,
	1333, 1210, 1979, 1210, 3815, 4315, 231, 4313, 2004, 1704,
	1872, 1620, 3111, 3739, 1326, 2090, 185, 3110, 3035, 2764,
	2782, 1329, 2041, 1926, 3314, 1898, 3375, 1913, 1912, 2133,
	1911, 993, 1909, 1908, 1907, 1293, 1293, 229, 4198, 1950,
	229, 3429, 1326, 3428, 1826, 1351, 1953, 1837, 1837, 1670,
	1759, 1629, 1936, 3491, 4161, 230, 4578, 2229, 2030, 3159,
	3160, 3152, 3153, 3154, 3155, 3157, 3158, 223, 2026, 3152,
	3153, 3154, 3155, 3157, 3158, 994, 224, 4256, 3154, 3155,
	3157, 3158, 3167, 4552, 231, 1743, 4537, 231, 2253, 4524,
	3413, 2949, 1630, 2149, 2052, 3819, 3802, 3768, 185, 3763,
	3747, 3516, 3282, 3197, 3591, 2462, 4533, 2670, 2118, 1870,
	2123, 1850, 1608, 2128, 3420, 1823, 2198, 2154, 2159, 1535,
	3079, 1463, 1304, 1260, 2817, 2024, 4546, 4543, 2814, 3465,
	2467, 3719, 2051, 230, 2812, 2033, 230, 4367, 4096, 1293,
	4461, 1293, 4349, 1293, 3317, 223, 3734, 2932, 223, 2058,
	2048, 2205, 2906, 4191, 224, 3405, 4596, 224, 4627, 1293,
	1293, 3535, 4238, 4597, 3286, 2197, 4011, 1510, 1190, 1560,
	1293, 849, 1502, 4534, 3781, 1565, 185, 2096, 2705, 185,
	991, 4699, 1293, 4231, 1293, 1293, 1293, 1651, 1464, 989,
	793, 1747, 1739, 1740, 1741, 1742, 1744, 1745, 2151, 1031,
	2340, 4223, 796, 1667, 987, 985, 982, 787, 2194, 2303,
	2116, 4182, 2239, 974, 3162, 3163, 3164, 2468, 4050, 2301,
	4049, 3161, 3159, 3160, 3152, 3153, 3154, 3155, 3157, 3158,
	3779, 3778, 3770, 1668, 2042, 2252, 3762, 2199, 3761, 1469,
	1468, 3780, 3759, 3758, 3746, 2723, 2211, 2262, 1561, 3706,
	3705, 3409, 1511, 2723, 3408, 3252, 3084, 3083, 2115, 2338,
	2721, 2006, 3082, 2245, 2008, 3081, 2234, 3039, 2721, 2127,
	2013, 2823, 2822, 850, 2015, 2819, 2808, 2797, 2796, 2018,
	2792, 2257, 2791, 2160, 2090, 2790, 1030, 1650, 2769, 2768,
	2731, 2219, 2652, 1606, 1090, 2412, 1090, 1334, 2469, 1710,
	2466, 1666, 3288, 1090, 2208, 2510, 1956, 1956, 1351, 2263,
	1090, 1090, 1090, 1090, 1090, 1090, 1090, 1090, 1090, 1090,
	1090, 1090, 1090, 1090, 1090, 1090, 1090, 1090, 1090, 1090,
	1090, 1090, 1090, 1090, 1090, 1090, 1090, 1090, 1090, 1090,
	1090, 1090, 1090, 1090, 1090, 2180, 1090, 2221, 1090, 1090,
	1090, 1090, 2240, 2179, 2509, 2217, 1333, 2087, 4628, 1558,
	793, 2216, 1033, 2216, 1033, 1334, 2342, 2213, 4192, 4632,
	1090, 3258, 796, 1090, 1090, 1745, 3314, 2370, 2329, 3517,
	3373, 1090, 2903, 1310, 2225, 1090, 2226, 1090, 1090, 1548,
	2083, 1547, 2310, 3345, 1032, 1351, 1546, 2178, 1545, 2339,
	3970, 1090, 1090, 1090, 1090, 2279, 1090, 1090, 1090, 1090,
	1090, 1090, 1090, 1090, 2740, 2244, 2318, 2229, 1506, 2088,
	2089, 2323, 1601, 1207, 1333, 1207, 2059, 2060, 2249, 1519,
	2261, 1246, 1090, 1090, 1090, 1090, 1090, 1090, 1090, 1090,
	1090, 2443, 2444, 2427, 2712, 1090, 2471, 2121, 1206, 2084,
	1206, 979, 1465, 4138, 2955, 2443, 2459, 1212, 2427, 2766,
	4360, 3969, 1524, 4633, 1351, 2664, 2994, 2644, 2315, 2754,
	2297, 2307, 2337, 1212, 2353, 1739, 1740, 1741, 1742, 1744,
	1745, 2505, 2031, 4658, 3027, 1560, 3012, 1679, 1651, 1090,
	1351, 1622, 1219, 3722, 1715, 2266, 2471, 1914, 3158, 2753,
	2551, 2551, 2565, 2218, 2443, 2334, 766, 2585, 2587, 2328,
	4007, 2326, 2327, 2591, 1735, 1736, 4025, 1013, 2341, 3730,
	1013, 1013, 2462, 2317, 2786, 2269, 2743, 2366, 2367, 2458,
	2779, 2780, 3525, 2357, 1217, 3374, 2358, 2359, 1766, 2779,
	2780, 1602, 1950, 1950, 1618, 1738, 2779, 2780, 1648, 1953,
	1953, 1665, 2134, 3524, 1991, 2340, 4596, 2641, 1316, 2988,
	2465, 2616, 1703, 2260, 852, 851, 4641, 1308, 1278, 1029,
	4048, 1531, 4635, 2997, 3760, 2608, 2507, 1221, 1327, 4362,
	1737, 2508, 3757, 3788, 2511, 2816, 2512, 2513, 1650, 3407,
	4530, 1903, 2439, 1293, 1293, 1033, 1630, 3580, 1630, 2435,
	3285, 2456, 2130, 3371, 1033, 1178, 2433, 888, 1033, 2818,
	1649, 1327, 3026, 764, 2338, 2789, 1278, 2815, 2630, 1529,
	1991, 2813, 2767, 1662, 1300, 4608, 2129, 2811, 2607, 881,
	1508, 1991, 2270, 4616, 174, 1351, 4431, 3789, 4661, 2658,
	4615, 1220, 1607, 1884, 2166, 2165, 2650, 2700, 4585, 1208,
	2576, 1208, 1278, 1278, 2694, 2560, 1944, 2589, 2615, 2125,
	2620, 2597, 2598, 2626, 2627, 2547, 3974, 2609, 3889, 1956,
	3743, 2666, 2613, 2614, 3888, 2693, 1321, 3787, 2722, 3462,
	1901, 3019, 3020, 4688, 1743, 2726, 983, 1327, 2088, 2089,
	1210, 3463, 2336, 1323, 2655, 983, 1033, 1477, 2134, 1484,
	847, 1490, 846, 1856, 2996, 2324, 1210, 1351, 4005, 3995,
	983, 984, 983, 4137, 2302, 1683, 2098, 3297, 2126, 2765,
	2728, 1293, 2742, 1888, 2300, 1605, 1323, 969, 2314, 1765,
	1767, 2673, 3716, 2567, 2993, 3715, 2696, 1090, 1090, 2102,
	1090, 2732, 2677, 3991, 1443, 2471, 1848, 1849, 3384, 2001,
	3300, 2685, 1026, 4443, 2339, 2688, 2676, 2689, 4634, 2679,
	4441, 4531, 787, 4498, 1293, 4499, 1578, 2703, 1583, 3462,
	1891, 1454, 1328, 4179, 3362, 2725, 2702, 3975, 1592, 2695,
	1597, 2697, 2875, 2316, 2800, 1886, 1505, 2787, 1758, 2809,
	2794, 2793, 2071, 682, 3050, 1293, 2099, 3992, 2072, 1245,
	3354, 969, 1323, 1889, 2771, 1328, 2706, 1293, 2727, 1293,
	1024, 4368, 969, 4382, 4639, 1531, 2917, 2757, 3287, 4429,
	677, 765, 1677, 3048, 1293, 3731, 1026, 2337, 3363, 1324,
	2770, 2946, 731, 2995, 2730, 3329, 4361, 1026, 1325, 2146,
	2854, 1654, 2735, 2788, 970, 2856, 1887, 2781, 2783, 2784,
	2785, 2745, 2748, 1230, 3355, 2122, 2890, 4070, 4430, 4529,
	4006, 4584, 1324, 2741, 1843, 1090, 2956, 2957, 3361, 767,
	2975, 1325, 2976, 763, 882, 883, 3212, 2963, 2964, 2965,
	3255, 1328, 2795, 1025, 3041, 793, 1565, 2134, 1565, 2950,
	2772, 3328, 2268, 2145, 3353, 2729, 2137, 796, 2081, 2426,
	2103, 1218, 2144, 3885, 4150, 1950, 1454, 2071, 1603, 4607,
	4481, 2073, 1953, 2072, 1278, 793, 1090, 4640, 970, 3298,
	174, 2931, 1090, 1090, 2972, 2921, 2953, 796, 2077, 970,
	2971, 2958, 1759, 2959, 1469, 2857, 4472, 980, 1324, 2423,
	3577, 2723, 2980, 1714, 2982, 2265, 2984, 1325, 2886, 2869,
	4642, 1454, 2882, 1454, 2919, 1678, 2746, 2879, 1890, 1680,
	2880, 1049, 3045, 2409, 4033, 700, 2104, 2105, 2421, 2999,
	2453, 3001, 2708, 1795, 2901, 1888, 889, 1090, 1090, 3002,
	2071, 2922, 3004, 1090, 2912, 3046, 2072, 2933, 3089, 3051,
	2100, 2710, 2969, 1617, 1619, 3987, 1090, 1090, 2074, 2079,
	3988, 2951, 1090, 1090, 2686, 2979, 1326, 2981, 1090, 2983,
	2690, 2920, 2612, 2259, 869, 2138, 1307, 1090, 1090, 1090,
	4662, 3578, 1891, 1090, 2701, 2711, 2073, 3796, 2625, 2992,
	2850, 2101, 971, 1090, 4689, 2434, 3794, 2610, 2977, 1326,
	2978, 1032, 4559, 2077, 3593, 2709, 4085, 4649, 800, 3072,
	1090, 3990, 4560, 4080, 2110, 1889, 4583, 2726, 3042, 3879,
	3007, 884, 885, 4134, 3687, 4086, 3890, 3993, 3211, 4071,
	2726, 1748, 1746, 1747, 1739, 1740, 1741, 1742, 1744, 1745,
	3018, 2075, 3009, 3008, 2851, 2093, 3067, 3068, 1235, 3537,
	3010, 3071, 2728, 4389, 2353, 1681, 1910, 4528, 3013, 2073,
	2002, 4595, 4593, 1041, 3028, 2728, 971, 2417, 2111, 4408,
	3796, 3333, 1207, 2074, 2079, 1326, 2077, 971, 1635, 3794,
	4276, 3833, 3450, 3339, 2849, 2418, 2186, 2081, 1207, 2407,
	2419, 4214, 2410, 1881, 2424, 1233, 1226, 1206, 3063, 2094,
	1090, 1090, 1090, 3509, 669, 2106, 3797, 3810, 2109, 1090,
	1090, 1090, 3502, 1206, 1090, 1725, 3040, 3886, 678, 1944,
	1944, 3335, 2356, 2091, 1090, 1212, 1351, 3934, 3047, 2471,
	1090, 972, 1090, 3204, 3205, 2043, 3246, 3337, 3049, 2092,
	2727, 1212, 2406, 1682, 4667, 1724, 2074, 2079, 4213, 3631,
	2113, 4285, 3989, 2727, 1724, 4348, 2075, 4133, 1719, 1351,
	3834, 4010, 3774, 3718, 3308, 3078, 2730, 3451, 4009, 3442,
	1890, 1212, 3304, 2891, 1351, 3744, 2885, 3338, 2873, 2730,
	2212, 2107, 3187, 973, 3334, 1033, 2206, 2141, 2724, 3797,
	3996, 2200, 1956, 2192, 679, 2172, 1351, 2346, 3206, 3576,
	1499, 2040, 2081, 2747, 3239, 972, 1237, 3504, 3251, 3509,
	4390, 1293, 1293, 3646, 1023, 740, 972, 2090, 3502, 870,
	871, 4448, 3503, 3538, 4411, 1724, 2119, 2729, 4180, 2075,
	3702, 3265, 4083, 3976, 1090, 4101, 3302, 3301, 2308, 3226,
	2729, 2139, 680, 1795, 681, 2036, 1723, 3891, 1090, 4558,
	3216, 4254, 3291, 801, 802, 1723, 3836, 973, 2080, 3214,
	2870, 3681, 1293, 2076, 2250, 1248, 3235, 1956, 973, 2114,
	3795, 2069, 3283, 2420, 2773, 2081, 2038, 3792, 3292, 3293,
	4252, 2140, 4194, 2422, 3320, 1090, 3289, 1454, 1454, 3215,
	3182, 3183, 3184, 4135, 3224, 3240, 2080, 3316, 1208, 1293,
	3227, 3228, 3232, 3318, 3198, 3276, 3322, 1321, 3244, 3659,
	3500, 1725, 3213, 3504, 1208, 3682, 2039, 3225, 3315, 3033,
	1725, 1293, 3935, 1293, 3209, 2067, 1723, 2408, 3503, 3892,
	3208, 3319, 2347, 3011, 3324, 3632, 1652, 3326, 2649, 1351,
	2133, 3683, 2648, 3680, 3633, 3220, 2647, 4666, 2133, 2646,
	1293, 1554, 3801, 3795, 1293, 3230, 1552, 3231, 1210, 2877,
	3262, 3263, 1454, 3264, 3305, 2068, 4008, 3248, 3249, 3250,
	3387, 3376, 3389, 1030, 1210, 3393, 887, 1293, 2076, 3399,
	3348, 4202, 1540, 4355, 1293, 2603, 1293, 2197, 4249, 4062,
	1351, 3277, 3350, 804, 803, 3273, 1541, 787, 2751, 3269,
	3270, 3725, 3492, 4391, 1210, 4604, 872, 873, 1293, 2210,
	3370, 3284, 3416, 3256, 3364, 4386, 1636, 1884, 3372, 2606,
	1293, 3290, 4118, 3703, 3505, 3506, 3507, 3508, 1950, 3425,
	3366, 4177, 2954, 4451, 2855, 1953, 3382, 1212, 2853, 2238,
	3221, 3458, 1611, 3394, 2774, 2775, 3385, 3400, 4356, 4458,
	3303, 2076, 805, 806, 4445, 3336, 3941, 3648, 2478, 3434,
	2605, 3247, 1293, 1293, 3344, 2604, 3411, 2946, 3414, 4476,
	1699, 1991, 4189, 4606, 3456, 2313, 2946, 3357, 2312, 3352,
	1701, 2112, 1944, 4203, 3360, 1293, 3358, 3351, 3309, 3219,
	3359, 4117, 1278, 3377, 3449, 4548, 1698, 1888, 3467, 3383,
	739, 3441, 1565, 1950, 4375, 4156, 3396, 2122, 3478, 3365,
	1953, 3367, 3402, 3406, 3933, 3800, 4190, 3179, 1696, 4452,
	3553, 3223, 1674, 1672, 1351, 3457, 3514, 1351, 3513, 1646,
	3505, 3506, 3507, 3508, 4357, 2120, 3266, 3684, 3395, 1644,
	1926, 1642, 3401, 1640, 1891, 3518, 1638, 3410, 3144, 1632,
	793, 3452, 2771, 3418, 1627, 3052, 2874, 1625, 3438, 1886,
	1090, 3439, 796, 3437, 2807, 3459, 1090, 1090, 1550, 2763,
	1090, 1090, 1090, 2675, 1090, 2117, 2319, 1889, 1921, 1917,
	174, 174, 3511, 1090, 1956, 3476, 3477, 1702, 1589, 1553,
	3490, 3464, 1090, 1454, 1551, 1090, 2299, 3510, 3494, 3180,
	3473, 1351, 3533, 3532, 1719, 3466, 2121, 2990, 2989, 2961,
	1090, 3531, 2335, 1661, 886, 3528, 3488, 2274, 1351, 2191,
	1887, 2171, 1984, 1827, 3534, 1600, 1523, 3222, 1956, 1956,
	1090, 1090, 3530, 1090, 1090, 1090, 2477, 4523, 4034, 3765,
	3764, 4035, 4020, 4444, 4099, 3272, 4040, 3980, 3274, 3275,
	3832, 3823, 3777, 3278, 3386, 3279, 3539, 3280, 3737, 3735,
	3556, 981, 3717, 1033, 1700, 3521, 3445, 3522, 3527, 3523,
	1210, 3440, 3430, 2904, 4094, 1090, 2896, 3512, 2889, 1090,
	1697, 1956, 1956, 1090, 1090, 1090, 1090, 1090, 1090, 1090,
	1090, 1090, 1090, 1090, 1090, 1090, 1090, 1090, 1090, 1090,
	1090, 1090, 1695, 1090, 3536, 3605, 1673, 1671, 2881, 4581,
	1090, 1090, 1956, 1645, 2867, 2852, 2692, 1090, 2687, 2170,
	3565, 3566, 2168, 1643, 2150, 1641, 2135, 1639, 1090, 2108,
	1637, 3606, 1890, 1631, 2095, 2082, 1098, 3561, 1626, 1212,
	1212, 1624, 2023, 1090, 2020, 2017, 2014, 4302, 3572, 2009,
	2007, 2003, 1549, 3579, 3581, 3582, 1994, 3573, 3588, 3455,
	3397, 1187, 4572, 1728, 1929, 3031, 2144, 4597, 2044, 3005,
	3003, 4486, 1351, 4123, 3583, 4085, 3595, 2298, 4116, 3677,
	1207, 4115, 261, 261, 261, 3643, 672, 673, 1188, 688,
	672, 688, 698, 2322, 4086, 738, 1207, 3602, 4047, 756,
	4294, 3966, 3603, 2947, 762, 1206, 3604, 2063, 3685, 3686,
	1504, 261, 4280, 4295, 4287, 986, 988, 990, 2619, 1090,
	1950, 1206, 3697, 3698, 3699, 3635, 1207, 1953, 3608, 3610,
	2090, 866, 2752, 2723, 3844, 1693, 1694, 261, 2264, 2320,
	3664, 2723, 2209, 1090, 1269, 3650, 4296, 174, 2721, 2366,
	3596, 1206, 3644, 2294, 2293, 1268, 2749, 3655, 3656, 3636,
	3032, 727, 4485, 2271, 1950, 1950, 4012, 4042, 1735, 1736,
	1623, 1953, 1953, 1729, 1090, 1090, 3652, 3653, 2755, 3398,
	1735, 1736, 4322, 3942, 3920, 2321, 3707, 3331, 2756, 3995,
	2776, 1732, 1302, 1236, 4600, 4591, 683, 3773, 1189, 1738,
	3666, 4553, 2366, 3611, 3820, 3667, 2866, 4298, 2296, 2193,
	2756, 1313, 1090, 2804, 2814, 3711, 254, 1950, 1950, 3772,
	2812, 2821, 2802, 3991, 1953, 1953, 2803, 3984, 1269, 2758,
	4297, 4436, 2760, 3639, 1737, 780, 1293, 4402, 4396, 1293,
	2761, 1269, 3748, 4354, 3982, 2759, 1737, 4299, 1950, 837,
	3693, 694, 4341, 3986, 4271, 1953, 1956, 4247, 1991, 1991,
	672, 672, 4183, 666, 4181, 4178, 3830, 3822, 261, 3752,
	3753, 3755, 1210, 1210, 3809, 3674, 3721, 3992, 3444, 2911,
	3769, 2590, 2805, 1278, 2029, 3775, 1937, 1293, 4636, 4478,
	4200, 3740, 3767, 1090, 4479, 1807, 3978, 3977, 3714, 1812,
	3299, 1212, 1090, 3254, 3846, 3745, 1208, 4398, 4665, 1991,
	3150, 3151, 1293, 1293, 1293, 4610, 4478, 3853, 1610, 3985,
	2860, 4479, 1208, 2863, 1609, 2865, 3837, 2917, 2771, 1293,
	1735, 1736, 3784, 3816, 3799, 1471, 2197, 2715, 2716, 2713,
	2714, 3912, 2473, 3838, 1293, 1944, 1991, 3841, 3689, 2715,
	1351, 2713, 1208, 2506, 2946, 1676, 3829, 3790, 1675, 4272,
	3798, 4232, 4044, 4039, 4038, 3908, 3817, 3857, 1991, 2908,
	1991, 3688, 2908, 3584, 1351, 3391, 3388, 1090, 1090, 3821,
	1821, 1820, 3869, 1090, 1090, 1956, 4651, 4617, 1090, 1090,
	4440, 1090, 1207, 4439, 4438, 1090, 4337, 1991, 4250, 4227,
	4176, 1991, 4173, 4073, 4059, 3962, 1090, 3868, 3824, 3850,
	3804, 3733, 3840, 3728, 3448, 3447, 3325, 1206, 3271, 3786,
	1944, 3839, 1090, 3842, 3140, 3139, 3877, 3785, 3138, 3848,
	3803, 3852, 3847, 3137, 3136, 3135, 3858, 3859, 3134, 3875,
	3133, 3863, 3893, 3860, 3132, 3131, 3866, 3864, 2985, 3867,
	3130, 3129, 3128, 3127, 3126, 3826, 3125, 3124, 3876, 3906,
	3123, 3902, 3122, 3121, 3120, 3119, 3118, 3117, 2987, 2968,
	2967, 3894, 2966, 2895, 2868, 3987, 2750, 3309, 3887, 2683,
	3988, 2678, 1212, 2668, 2667, 2656, 2438, 4300, 2295, 2292,
	1212, 2291, 1950, 4301, 1351, 2290, 1351, 2289, 2288, 1953,
	2207, 2181, 2177, 1212, 2176, 2175, 2174, 2173, 1997, 1996,
	1995, 3882, 1993, 3947, 1293, 1293, 1928, 1692, 1691, 1633,
	1518, 1517, 1516, 1351, 1515, 1514, 1513, 1512, 1507, 1503,
	1501, 3990, 1500, 3700, 1210, 1457, 3239, 3701, 1342, 1341,
	1340, 1339, 1338, 1306, 1305, 1255, 1254, 3993, 1253, 1252,
	1251, 1250, 1249, 1247, 1242, 1212, 3932, 1212, 1241, 1240,
	1239, 1238, 1170, 3967, 3968, 2034, 992, 978, 4359, 3994,
	2311, 1685, 92, 1509, 823, 86, 2142, 1293, 3732, 949,
	4475, 1493, 3736, 4004, 3738, 4381, 831, 1351, 4000, 1293,
	4000, 3950, 1293, 4013, 3944, 3945, 4460, 4015, 4016, 3946,
	3943, 1351, 174, 3953, 4003, 3949, 3818, 3939, 3948, 3327,
	2824, 2273, 1634, 3954, 2275, 3234, 3957, 2632, 1208, 4428,
	3916, 1950, 4014, 3088, 3972, 4329, 4149, 2476, 1953, 1825,
	3191, 1293, 1293, 1735, 1736, 4043, 88, 4045, 1074, 1120,
	4069, 4068, 3981, 3720, 2936, 4066, 4065, 3979, 1941, 3776,
	1943, 1293, 1040, 1354, 4497, 2045, 1080, 1766, 2197, 2061,
	2054, 2669, 2550, 1351, 1738, 4063, 1097, 1094, 1293, 4018,
	1945, 1947, 3989, 1096, 1095, 1946, 1278, 1844, 4046, 1093,
	1940, 3828, 4027, 2915, 4057, 4030, 3474, 1559, 1557, 951,
	2049, 2432, 2460, 1212, 1207, 1207, 3077, 1818, 4037, 1737,
	1055, 4032, 1076, 1293, 1293, 1293, 2457, 4102, 1231, 4051,
	3996, 1224, 1065, 1054, 4058, 1210, 1351, 4056, 4060, 1206,
	1206, 4122, 3217, 1210, 4103, 3196, 4000, 3461, 1090, 1090,
	1090, 3673, 2345, 841, 3147, 2463, 1210, 1944, 1222, 2573,
	4119, 4091, 2566, 2562, 1244, 4106, 1351, 4064, 4079, 3281,
	2905, 1090, 1705, 4163, 1090, 1090, 261, 1797, 261, 261,
	4097, 1273, 261, 1283, 1090, 4019, 4088, 1956, 2916, 4029,
	1336, 1058, 1090, 1090, 1303, 2430, 4104, 4028, 1809, 3057,
	4031, 1944, 1944, 756, 2355, 3468, 4128, 1351, 1210, 1293,
	1210, 3237, 2662, 4482, 4141, 3592, 2185, 1186, 1185, 1229,
	4111, 1184, 4126, 1743, 4125, 4130, 4466, 261, 4463, 261,
	261, 1273, 2132, 261, 261, 1351, 1283, 3861, 3423, 2037,
	2707, 4136, 1787, 1090, 3431, 1070, 1453, 261, 3202, 1473,
	3493, 1520, 1090, 4090, 1944, 1944, 761, 4207, 1082, 4087,
	1090, 1786, 1956, 4158, 2845, 2844, 4351, 4152, 1765, 1767,
	1497, 1090, 1322, 1320, 1090, 1319, 1318, 4624, 4687, 3729,
	228, 3025, 1726, 4146, 1718, 1944, 1090, 4185, 225, 1522,
	4169, 4170, 1283, 1351, 227, 226, 261, 261, 4074, 1273,
	1293, 4210, 3678, 3243, 4172, 1293, 1293, 4551, 3750, 3415,
	1349, 23, 4226, 22, 1448, 21, 112, 42, 756, 20,
	261, 261, 4186, 128, 147, 146, 120, 1758, 145, 4193,
	4184, 144, 143, 3340, 3341, 142, 149, 3342, 141, 140,
	1208, 1208, 4262, 866, 135, 139, 1210, 138, 137, 136,
	1351, 134, 132, 1293, 133, 127, 3425, 4253, 131, 130,
	129, 126, 125, 4237, 124, 123, 4224, 122, 121, 4228,
	119, 1212, 1212, 118, 4229, 117, 1207, 3378, 3379, 116,
	4234, 3380, 115, 114, 4286, 113, 752, 749, 4245, 4242,
	1090, 1090, 4281, 4239, 4251, 4243, 61, 4246, 60, 111,
	110, 1206, 4266, 19, 4000, 4000, 1991, 1090, 1956, 4282,
	4261, 4284, 40, 14, 65, 66, 261, 4290, 4305, 4306,
	18, 13, 35, 1950, 91, 4270, 102, 4309, 101, 36,
	1953, 99, 98, 4283, 34, 261, 4106, 2436, 17, 16,
	4289, 4288, 4303, 15, 96, 95, 1090, 4278, 33, 1090,
	31, 11, 1807, 9, 1454, 8, 1212, 37, 4318, 4319,
	1905, 12, 5, 179, 178, 181, 177, 180, 1212, 90,
	176, 1759, 4317, 175, 89, 29, 4347, 10, 171, 4263,
	4241, 3814, 81, 4216, 4327, 173, 172, 170, 4240, 4000,
	169, 168, 82, 79, 167, 85, 166, 80, 1950, 84,
	83, 4000, 27, 6, 64, 1953, 2572, 2080, 4346, 2350,
	1090, 1090, 7, 4338, 4131, 4370, 3515, 105, 4343, 106,
	1090, 4385, 38, 4321, 77, 1212, 4363, 4364, 1212, 1944,
	76, 75, 1293, 4369, 26, 63, 25, 212, 211, 210,
	209, 208, 1293, 1293, 207, 206, 205, 4377, 4393, 4394,
	200, 199, 204, 202, 1278, 201, 4379, 1207, 4000, 1293,
	203, 4000, 4419, 198, 215, 1207, 214, 220, 219, 218,
	4392, 217, 4405, 1090, 1090, 4407, 216, 4397, 1207, 4400,
	4399, 4404, 1206, 1090, 213, 4266, 222, 197, 4412, 4424,
	1206, 4425, 4415, 4413, 4416, 4417, 4418, 196, 195, 193,
	189, 188, 1208, 1206, 1210, 1210, 192, 194, 191, 190,
	187, 4423, 4422, 1739, 1740, 1741, 1742, 1744, 1745, 221,
	4433, 72, 164, 4453, 1090, 1090, 165, 1090, 4437, 71,
	1207, 4457, 1207, 672, 163, 162, 161, 160, 159, 158,
	157, 4432, 70, 24, 1950, 4465, 4468, 4480, 2568, 2,
	1, 1953, 0, 0, 261, 1206, 261, 1206, 1944, 4455,
	261, 4477, 0, 4470, 4456, 4484, 0, 0, 0, 0,
	4502, 0, 0, 1473, 1273, 261, 0, 261, 4506, 0,
	1090, 1090, 1090, 261, 1473, 688, 0, 4505, 0, 1210,
	261, 1473, 4469, 4218, 4219, 4473, 4474, 4487, 0, 0,
	4493, 1210, 4500, 0, 0, 1998, 4501, 0, 0, 0,
	0, 0, 1090, 0, 0, 0, 0, 261, 0, 0,
	4540, 4233, 0, 4235, 261, 4236, 4522, 4521, 0, 0,
	4536, 4519, 4520, 4535, 0, 0, 0, 0, 0, 0,
	0, 0, 4554, 0, 1991, 0, 0, 0, 0, 0,
	4563, 0, 4561, 1920, 0, 0, 1991, 0, 1210, 1991,
	4577, 1210, 4565, 0, 756, 0, 1090, 0, 1207, 0,
	4575, 0, 0, 0, 4576, 0, 4562, 0, 0, 4582,
	0, 0, 0, 1208, 0, 0, 0, 4571, 4569, 0,
	0, 1208, 0, 1206, 4538, 0, 4598, 0, 0, 0,
	0, 4588, 4589, 0, 1208, 4602, 4573, 4574, 4594, 4570,
	4590, 4592, 4579, 0, 4603, 1212, 4465, 1212, 1991, 4468,
	2080, 4601, 4605, 0, 4619, 0, 0, 4614, 0, 0,
	4622, 4620, 4609, 4631, 4385, 4484, 4618, 0, 0, 3054,
	3055, 4630, 4626, 0, 0, 4625, 0, 0, 4000, 0,
	4000, 0, 0, 0, 4644, 4629, 1208, 0, 1208, 0,
	769, 0, 4621, 0, 4623, 0, 4643, 0, 4646, 0,
	0, 0, 0, 0, 0, 0, 2065, 0, 0, 0,
	0, 4652, 4659, 0, 0, 4653, 0, 1090, 1090, 4650,
	0, 0, 4657, 0, 0, 0, 1090, 0, 1090, 1090,
	4663, 0, 4655, 0, 0, 0, 4672, 4669, 4678, 0,
	4660, 4680, 4677, 4683, 4675, 4682, 0, 4378, 4681, 0,
	261, 0, 0, 261, 4679, 0, 0, 4690, 0, 4691,
	4686, 0, 0, 4676, 4693, 0, 2917, 4695, 0, 4696,
	0, 0, 0, 4698, 4694, 4692, 0, 4701, 0, 0,
	0, 0, 0, 0, 0, 1090, 4706, 4702, 4708, 0,
	0, 0, 4709, 0, 4711, 4712, 4670, 4671, 0, 4698,
	0, 0, 0, 0, 4703, 0, 261, 0, 0, 774,
	261, 0, 4705, 3173, 3174, 3175, 261, 2572, 0, 0,
	0, 0, 261, 0, 1208, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 261, 0,
	261, 0, 0, 2163, 672, 0, 261, 0, 0, 3825,
	0, 0, 0, 4707, 0, 0, 1207, 1207, 756, 0,
	0, 0, 866, 0, 0, 0, 0, 0, 0, 0,
	1944, 0, 0, 0, 0, 0, 778, 1991, 1210, 0,
	1210, 1206, 1206, 0, 0, 0, 0, 261, 0, 1273,
	261, 0, 733, 0, 0, 0, 0, 2572, 2572, 0,
	0, 0, 0, 0, 756, 0, 0, 0, 0, 0,
	0, 261, 0, 0, 0, 0, 776, 0, 2272, 3878,
	0, 0, 0, 261, 261, 0, 261, 0, 261, 0,
	261, 73, 261, 0, 0, 0, 0, 0, 0, 1735,
	1736, 1207, 0, 0, 0, 1944, 0, 0, 74, 0,
	0, 0, 2158, 1207, 0, 2304, 0, 0, 2305, 3015,
	2306, 0, 0, 1766, 78, 0, 1206, 0, 0, 0,
	1738, 0, 261, 0, 0, 781, 0, 0, 1206, 0,
	0, 0, 0, 0, 4550, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 738, 0, 0,
	0, 756, 0, 0, 87, 1737, 0, 0, 0, 0,
	1207, 0, 0, 1207, 0, 1757, 0, 0, 0, 0,
	0, 0, 0, 0, 1754, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1206, 0, 0, 1206, 2568,
	2568, 2572, 2572, 2572, 860, 0, 0, 771, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 107, 0,
	0, 0, 0, 93, 104, 0, 0, 1883, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 775, 3897, 0,
	0, 0, 1208, 1208, 0, 0, 0, 0, 0, 0,
	0, 1944, 0, 0, 0, 0, 0, 0, 0, 1760,
	1761, 1762, 1763, 0, 1735, 1736, 2369, 0, 0, 1743,
	0, 732, 0, 0, 0, 0, 0, 0, 0, 0,
	94, 0, 0, 0, 779, 0, 0, 0, 1766, 0,
	773, 0, 0, 0, 0, 1738, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1765, 1767, 0, 0, 672, 0,
	0, 3150, 3151, 0, 3168, 3169, 3170, 1208, 0, 0,
	1737, 0, 0, 261, 0, 0, 770, 0, 0, 1208,
	1752, 1753, 672, 2568, 2568, 2568, 0, 0, 0, 261,
	0, 672, 0, 2474, 0, 0, 3150, 3151, 0, 3168,
	3169, 3170, 0, 261, 777, 0, 0, 0, 0, 0,
	0, 2840, 0, 1758, 4072, 0, 0, 0, 734, 261,
	1283, 0, 0, 0, 0, 0, 0, 4089, 0, 772,
	0, 0, 0, 0, 0, 0, 1208, 3165, 0, 1208,
	0, 0, 0, 2659, 2832, 2830, 0, 0, 0, 0,
	4110, 2834, 2836, 2826, 1039, 0, 0, 0, 0, 0,
	0, 0, 0, 97, 0, 0, 0, 261, 1283, 0,
	0, 688, 3165, 0, 1743, 0, 0, 0, 0, 0,
	0, 2682, 0, 0, 3549, 3550, 0, 261, 2642, 0,
	261, 0, 0, 0, 261, 0, 261, 0, 0, 0,
	1207, 1273, 1207, 261, 261, 0, 1283, 1283, 2698, 0,
	0, 0, 0, 261, 0, 182, 100, 0, 103, 1765,
	1767, 0, 0, 0, 0, 1206, 0, 1206, 0, 0,
	0, 3156, 0, 0, 0, 0, 1764, 0, 0, 0,
	0, 0, 229, 0, 0, 0, 0, 0, 0, 0,
	861, 0, 0, 0, 0, 148, 0, 1759, 2739, 0,
	0, 0, 0, 0, 0, 0, 3156, 0, 0, 261,
	0, 0, 0, 0, 0, 0, 0, 0, 1758, 0,
	0, 0, 261, 0, 0, 0, 0, 0, 0, 231,
	0, 0, 0, 3171, 0, 261, 3612, 3613, 3614, 3615,
	3616, 3617, 3618, 3619, 3620, 3621, 3622, 3623, 3624, 3625,
	3626, 3627, 3628, 3629, 3630, 150, 3634, 0, 0, 0,
	0, 0, 261, 0, 0, 0, 0, 0, 0, 2828,
	186, 0, 0, 2718, 0, 3166, 0, 0, 230, 0,
	2842, 0, 0, 0, 0, 0, 0, 0, 261, 2858,
	223, 0, 0, 0, 0, 0, 0, 0, 0, 224,
	0, 2841, 2833, 2831, 2835, 2837, 2827, 2829, 2843, 0,
	3166, 0, 0, 1473, 0, 2839, 261, 0, 261, 0,
	0, 185, 0, 0, 0, 261, 0, 0, 0, 0,
	0, 0, 0, 1755, 1751, 2900, 1748, 1746, 1747, 1739,
	1740, 1741, 1742, 1744, 1745, 2739, 0, 672, 2846, 0,
	0, 0, 2572, 2572, 0, 0, 2929, 866, 0, 2739,
	2739, 0, 1759, 0, 0, 0, 1208, 0, 1208, 0,
	0, 0, 0, 0, 0, 0, 261, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 261, 1273, 261, 0, 0,
	0, 1473, 0, 1473, 1283, 261, 0, 0, 1273, 0,
	1273, 0, 1273, 3150, 3151, 0, 3168, 3169, 3170, 3167,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3898, 0, 0, 0,
	0, 261, 261, 261, 261, 1273, 0, 0, 1273, 0,
	261, 0, 261, 0, 3167, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2572, 2572, 2572, 2572, 2572, 2572,
	2572, 2572, 2572, 2572, 2572, 2572, 2572, 2572, 2572, 2572,
	2572, 2572, 2572, 261, 2572, 0, 0, 0, 0, 3165,
	0, 261, 4383, 0, 2568, 2568, 0, 0, 1202, 0,
	0, 0, 1746, 1747, 1739, 1740, 1741, 1742, 1744, 1745,
	0, 0, 0, 0, 0, 0, 4403, 0, 263, 0,
	1287, 2847, 0, 0, 0, 0, 0, 0, 0, 0,
	2838, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 256, 256, 668, 0, 0, 0,
	0, 3162, 3163, 3164, 0, 0, 0, 0, 3161, 3159,
	3160, 3152, 3153, 3154, 3155, 3157, 3158, 0, 0, 0,
	0, 0, 0, 1460, 0, 0, 0, 0, 0, 0,
	1473, 0, 0, 3156, 0, 0, 3162, 3163, 3164, 0,
	0, 0, 0, 3161, 3159, 3160, 3152, 3153, 3154, 3155,
	3157, 3158, 0, 0, 1495, 0, 2568, 2568, 2568, 2568,
	2568, 2568, 2568, 2568, 2568, 2568, 2568, 2568, 2568, 2568,
	2568, 2568, 2568, 2568, 2568, 0, 2568, 0, 0, 0,
	1532, 0, 0, 0, 0, 0, 1298, 0, 0, 0,
	0, 4488, 0, 0, 0, 3171, 0, 4490, 0, 0,
	0, 0, 0, 0, 0, 1573, 0, 0, 0, 1039,
	0, 0, 0, 1039, 0, 0, 0, 0, 0, 1586,
	0, 0, 1735, 1736, 0, 1768, 1769, 1770, 1778, 1779,
	1780, 0, 0, 0, 0, 0, 0, 3166, 0, 0,
	0, 0, 0, 0, 0, 1771, 1766, 0, 0, 0,
	0, 0, 0, 1738, 0, 1053, 0, 0, 0, 1475,
	0, 1481, 1784, 1487, 0, 0, 0, 0, 0, 0,
	0, 261, 1612, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 261, 1737, 0,
	0, 0, 672, 0, 0, 0, 0, 672, 1757, 0,
	672, 0, 0, 672, 672, 0, 0, 1754, 0, 672,
	0, 0, 0, 0, 0, 0, 0, 261, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1576, 1473,
	1581, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1590, 0, 1595, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1473, 0, 3203, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 261, 0, 0, 0, 261, 261,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3167, 1760, 1761, 1762, 1763, 0, 3229, 0, 0,
	0, 0, 1743, 0, 0, 0, 0, 2739, 2739, 261,
	0, 3296, 3242, 0, 0, 1657, 0, 0, 1663, 0,
	0, 2739, 0, 0, 3311, 0, 0, 0, 0, 0,
	0, 0, 2739, 3311, 3260, 2739, 3311, 0, 1775, 3311,
	0, 1785, 0, 0, 0, 0, 0, 1765, 1767, 0,
	0, 0, 261, 261, 3296, 0, 261, 0, 0, 0,
	0, 0, 0, 0, 1781, 0, 1782, 0, 0, 0,
	0, 0, 0, 1752, 1753, 0, 3296, 0, 261, 0,
	3369, 3369, 0, 0, 1273, 0, 0, 0, 0, 0,
	0, 1773, 0, 0, 0, 0, 1735, 1736, 0, 2739,
	0, 2739, 0, 3392, 2739, 3296, 1758, 0, 2739, 3296,
	1788, 1789, 1790, 1791, 1792, 1793, 1794, 0, 0, 0,
	1766, 0, 0, 3162, 3163, 3164, 0, 1738, 0, 0,
	3161, 3159, 3160, 3152, 3153, 3154, 3155, 3157, 3158, 261,
	1122, 1806, 0, 0, 0, 0, 0, 1819, 1783, 0,
	0, 0, 0, 261, 3419, 0, 0, 3421, 2739, 0,
	0, 261, 1737, 0, 0, 261, 1772, 0, 1283, 0,
	0, 0, 1757, 0, 0, 0, 0, 4155, 0, 0,
	0, 1754, 0, 261, 0, 0, 0, 0, 2900, 0,
	0, 1273, 0, 261, 0, 0, 2739, 0, 672, 0,
	0, 0, 0, 0, 0, 2739, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 261, 2900, 3242, 1764,
	2900, 0, 0, 0, 0, 3552, 4196, 0, 0, 0,
	2543, 2544, 2545, 2546, 2539, 2540, 2541, 2542, 0, 0,
	1759, 0, 1877, 1877, 1877, 0, 1760, 1761, 1762, 1763,
	0, 3520, 0, 0, 0, 0, 1743, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1776, 0, 3526, 0,
	0, 1273, 261, 0, 261, 0, 0, 0, 0, 0,
	1273, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1765, 1767, 0, 0, 0, 0, 0, 0, 0,
	261, 2519, 2520, 2521, 2522, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1752, 1753, 0,
	0, 0, 0, 0, 2531, 2532, 2533, 2534, 2527, 2528,
	2529, 2530, 2535, 2536, 2537, 2538, 0, 0, 0, 0,
	0, 0, 1448, 0, 0, 1349, 0, 0, 0, 0,
	1758, 0, 1213, 0, 0, 0, 3590, 1774, 1259, 0,
	1259, 1259, 1749, 1750, 1756, 1777, 1755, 1751, 0, 1748,
	1746, 1747, 1739, 1740, 1741, 1742, 1744, 1745, 0, 1039,
	4326, 0, 3101, 0, 0, 2572, 3102, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2515, 2516, 2517,
	2518, 2523, 2524, 2525, 2526, 0, 0, 0, 0, 1346,
	1053, 0, 0, 0, 1053, 1452, 0, 0, 0, 3569,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1435, 0, 0, 0, 1435, 0, 3585, 0, 0, 0,
	0, 0, 0, 0, 2572, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1764, 0, 261, 261, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1759, 0, 0, 672, 672, 0,
	0, 0, 1574, 1575, 0, 2227, 0, 1735, 1736, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1473,
	1473, 1287, 2241, 0, 0, 0, 0, 2568, 0, 0,
	0, 1766, 2243, 1473, 1473, 1473, 0, 0, 1738, 0,
	0, 0, 0, 0, 2251, 0, 2254, 2255, 2256, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3369, 0, 0, 0,
	0, 0, 0, 1737, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1757, 0, 0, 2568, 0, 0, 0,
	3676, 0, 1754, 0, 0, 0, 0, 0, 1684, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2572, 0,
	0, 0, 756, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1755, 1751, 0, 1748, 1746, 1747, 1739, 1740, 1741, 1742,
	1744, 1745, 0, 3369, 0, 0, 3547, 0, 0, 0,
	0, 0, 0, 0, 261, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1760, 1761, 1762,
	1763, 0, 0, 0, 3296, 0, 261, 1743, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 261, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 261, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 261, 0, 0,
	0, 0, 261, 0, 0, 0, 0, 261, 0, 0,
	0, 0, 1765, 1767, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2739, 261, 0, 0,
	0, 0, 0, 0, 0, 0, 2929, 2929, 1752, 1753,
	2568, 0, 866, 866, 2739, 0, 0, 0, 2900, 2900,
	0, 0, 866, 2739, 0, 0, 0, 0, 0, 0,
	0, 2344, 0, 2348, 0, 0, 0, 0, 0, 0,
	2362, 1758, 0, 0, 261, 0, 0, 2371, 2372, 2373,
	2374, 2375, 2376, 2377, 2378, 2379, 2380, 2381, 2382, 2383,
	2384, 2385, 2386, 2387, 2388, 2389, 2390, 2391, 2392, 2393,
	2394, 2395, 2396, 2397, 2398, 2399, 2400, 2401, 2402, 2403,
	2404, 2405, 0, 2411, 0, 2413, 2414, 2415, 2416, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1915, 0, 0, 0, 0, 2440, 1213, 0,
	0, 0, 0, 0, 0, 0, 3917, 1924, 1806, 1452,
	0, 0, 2455, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1435, 73, 0, 0, 0, 2485, 2488,
	2491, 2494, 0, 2498, 2499, 2500, 2501, 2502, 2503, 2504,
	0, 74, 1213, 0, 0, 0, 1213, 0, 0, 1259,
	0, 1213, 0, 0, 1764, 0, 1452, 78, 0, 0,
	0, 2564, 0, 2575, 2577, 2582, 0, 0, 261, 0,
	0, 0, 0, 0, 1473, 1759, 261, 0, 0, 0,
	0, 0, 1213, 0, 0, 0, 0, 0, 0, 261,
	0, 0, 0, 0, 0, 0, 0, 87, 0, 0,
	0, 0, 0, 0, 0, 2699, 1287, 0, 1213, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2739, 2739, 0, 3369, 0, 0, 1213, 0,
	0, 0, 0, 1213, 2739, 0, 0, 860, 0, 0,
	1053, 4002, 0, 4002, 1473, 0, 1435, 1213, 0, 0,
	0, 107, 2739, 0, 3311, 0, 93, 104, 1473, 1473,
	261, 3296, 0, 0, 3952, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3296, 0, 261, 3296, 0, 261,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3964, 0, 0, 2739, 0, 2739, 261, 0, 0,
	1213, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1755, 1751, 94, 1748, 1746, 1747, 1739, 1740, 1741,
	1742, 1744, 1745, 0, 2739, 0, 0, 0, 0, 4076,
	0, 0, 0, 2848, 0, 0, 0, 0, 0, 0,
	261, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	261, 0, 0, 0, 0, 73, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3150, 3151, 74, 3168, 3169, 3170, 0, 0, 0, 4002,
	0, 0, 1473, 1435, 0, 0, 0, 0, 78, 0,
	0, 0, 0, 3558, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2183, 0,
	0, 0, 2190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2203, 0, 0, 0, 87, 0,
	0, 0, 0, 0, 0, 0, 2962, 0, 0, 0,
	2215, 0, 2215, 0, 0, 0, 3165, 0, 2222, 1735,
	1736, 0, 0, 0, 0, 0, 97, 0, 0, 0,
	0, 0, 0, 0, 2861, 2862, 0, 2864, 860, 0,
	0, 0, 0, 1766, 0, 0, 0, 0, 0, 0,
	1738, 0, 107, 0, 1349, 0, 0, 93, 104, 2190,
	0, 0, 2247, 0, 0, 0, 0, 2739, 0, 3311,
	0, 0, 4188, 0, 0, 0, 0, 0, 182, 100,
	261, 103, 0, 2267, 4147, 1737, 0, 4208, 0, 4208,
	0, 0, 0, 0, 0, 1757, 2280, 0, 2282, 0,
	2284, 0, 2286, 0, 2287, 229, 0, 0, 0, 756,
	3156, 0, 0, 861, 94, 0, 0, 0, 148, 0,
	1273, 0, 0, 0, 0, 4147, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3296, 0, 261, 1213, 0,
	1213, 0, 0, 0, 2309, 0, 0, 0, 0, 0,
	0, 0, 231, 2369, 0, 1213, 0, 4188, 0, 0,
	0, 0, 2986, 0, 0, 2739, 0, 0, 0, 0,
	0, 0, 3171, 1957, 0, 0, 0, 1213, 150, 1760,
	1761, 1762, 1763, 4275, 0, 0, 0, 0, 0, 1743,
	0, 0, 0, 186, 0, 1473, 0, 0, 0, 0,
	0, 230, 0, 0, 0, 0, 0, 4002, 4002, 0,
	0, 2369, 0, 223, 3166, 0, 1435, 0, 0, 1788,
	1789, 0, 224, 0, 261, 261, 0, 0, 0, 0,
	0, 0, 0, 0, 1765, 1767, 0, 0, 0, 0,
	0, 0, 0, 1213, 1570, 0, 0, 0, 3590, 0,
	0, 0, 0, 0, 1213, 0, 0, 97, 0, 0,
	0, 0, 0, 0, 3369, 4340, 0, 0, 4342, 3369,
	4345, 0, 0, 0, 3037, 3038, 4188, 0, 1213, 0,
	3044, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4002, 1758, 0, 0, 0, 0, 0, 3058,
	3059, 0, 0, 1435, 4002, 2455, 0, 0, 0, 182,
	100, 0, 103, 0, 3066, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 261, 0, 0, 0, 0,
	3080, 0, 0, 0, 0, 0, 229, 0, 0, 0,
	0, 0, 0, 0, 861, 4076, 0, 3092, 0, 148,
	0, 0, 0, 0, 0, 0, 0, 0, 3167, 0,
	0, 4002, 0, 261, 4002, 0, 0, 0, 0, 0,
	0, 0, 1435, 0, 3311, 2639, 0, 0, 0, 0,
	0, 0, 0, 231, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1435, 0,
	1473, 0, 1473, 0, 0, 1213, 1213, 0, 0, 150,
	0, 0, 0, 0, 0, 1213, 1764, 0, 0, 0,
	0, 0, 0, 0, 186, 0, 0, 0, 4442, 0,
	0, 0, 230, 0, 0, 0, 0, 1759, 0, 4449,
	0, 0, 0, 0, 223, 0, 2582, 2582, 2582, 0,
	0, 0, 4208, 224, 0, 261, 0, 0, 0, 2684,
	0, 1877, 1259, 0, 0, 0, 1259, 0, 1259, 3207,
	0, 0, 0, 0, 2739, 1568, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2203, 0, 0, 0, 0,
	3162, 3163, 3164, 0, 0, 261, 0, 3161, 3159, 3160,
	3152, 3153, 3154, 3155, 3157, 3158, 0, 0, 0, 1213,
	0, 1213, 0, 1213, 0, 0, 0, 0, 0, 0,
	0, 0, 3590, 0, 0, 0, 0, 0, 0, 1213,
	1213, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1213, 1473, 0, 1435, 0, 0, 0, 0, 0, 0,
	0, 0, 1213, 0, 1213, 1213, 1213, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 261, 0,
	0, 1039, 0, 0, 0, 0, 1748, 1746, 1747, 1739,
	1740, 1741, 1742, 1744, 1745, 1039, 0, 0, 0, 0,
	0, 0, 0, 0, 1452, 0, 0, 0, 0, 3403,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4188, 0, 0, 0, 0, 1435, 0, 0, 0, 0,
	0, 0, 3330, 0, 0, 0, 0, 0, 0, 0,
	3435, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3443, 0, 2739, 0, 0, 0, 2190, 0,
	0, 4002, 0, 4002, 0, 0, 1473, 2203, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1957, 1957, 1213, 0,
	0, 0, 0, 0, 3484, 3485, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1473, 0, 0, 0, 0, 0, 0, 0, 2960, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1735, 1736,
	0, 1768, 1769, 1770, 1778, 1779, 1780, 2970, 0, 2973,
	0, 0, 0, 0, 0, 0, 2929, 0, 0, 0,
	0, 1771, 1766, 0, 0, 2739, 0, 0, 0, 1738,
	0, 0, 0, 0, 0, 0, 0, 0, 1784, 0,
	2929, 0, 0, 0, 0, 1213, 0, 0, 0, 0,
	0, 0, 0, 2998, 1452, 3000, 1452, 0, 0, 0,
	0, 0, 3006, 0, 1737, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1757, 3150, 3151, 0, 3168, 3169,
	3170, 0, 0, 1754, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1259, 0, 0, 3557, 0,
	0, 0, 0, 3034, 0, 0, 0, 1213, 0, 0,
	0, 0, 0, 0, 1213, 0, 0, 0, 0, 0,
	0, 0, 0, 1213, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1213, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3165, 0, 0, 0, 0, 0, 0, 1760, 1761,
	1762, 1763, 0, 0, 0, 0, 0, 0, 1743, 0,
	0, 0, 0, 0, 0, 0, 0, 2362, 0, 0,
	0, 0, 0, 3544, 3545, 0, 0, 3548, 0, 0,
	0, 3551, 0, 0, 0, 0, 0, 0, 0, 0,
	3555, 0, 0, 0, 1775, 1735, 1736, 1785, 0, 3562,
	0, 0, 3207, 1765, 1767, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3574, 0, 1766,
	1781, 0, 1782, 0, 0, 0, 1738, 0, 0, 1752,
	1753, 0, 0, 1213, 1213, 3156, 0, 3597, 3598, 0,
	3599, 3600, 3601, 0, 0, 0, 0, 1773, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1737, 1758, 0, 0, 0, 0, 0, 0, 0,
	0, 1757, 0, 0, 0, 1213, 0, 0, 0, 0,
	1754, 0, 3607, 0, 0, 0, 3609, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3171, 0, 0,
	0, 0, 0, 0, 1783, 0, 0, 0, 0, 1957,
	0, 0, 0, 0, 0, 0, 0, 3637, 3638, 0,
	0, 0, 1772, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3546, 3649, 0, 0, 0, 3166,
	0, 0, 0, 0, 1435, 0, 0, 1213, 0, 0,
	3658, 0, 0, 0, 0, 1760, 1761, 1762, 1763, 0,
	0, 1213, 0, 0, 0, 1743, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1435, 0, 0,
	0, 0, 0, 0, 0, 1764, 0, 0, 0, 0,
	0, 0, 1435, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1213, 0, 1759, 0, 0, 0,
	1765, 1767, 0, 0, 1435, 0, 1259, 0, 0, 0,
	1452, 1452, 0, 0, 0, 0, 3704, 0, 3782, 0,
	0, 0, 1776, 0, 0, 1213, 1752, 1753, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1213, 0, 1213,
	3723, 3294, 1053, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1213, 0, 1053, 0, 0, 1758,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3749, 3167, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3347, 3349, 0, 0, 2203, 0,
	0, 0, 0, 0, 3854, 3855, 3856, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1287, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1774, 0, 0, 0, 0, 1749, 1750,
	1756, 1777, 1755, 1751, 0, 1748, 1746, 1747, 1739, 1740,
	1741, 1742, 1744, 1745, 0, 0, 0, 1435, 2451, 0,
	0, 0, 2452, 0, 0, 0, 0, 0, 0, 0,
	1735, 1736, 0, 1768, 1769, 1770, 1778, 1779, 1780, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1764, 1771, 1766, 0, 0, 0, 0, 0,
	1877, 1738, 0, 3432, 1099, 0, 0, 3436, 1435, 3849,
	1784, 0, 0, 1759, 0, 3162, 3163, 3164, 0, 0,
	0, 0, 3161, 3159, 3160, 3152, 3153, 3154, 3155, 3157,
	3158, 0, 0, 0, 0, 0, 1737, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1757, 0, 0, 0,
	262, 262, 262, 0, 0, 1754, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3489, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 262,
	0, 0, 0, 0, 3895, 3896, 0, 0, 0, 0,
	3900, 3901, 0, 0, 0, 3904, 3905, 0, 0, 0,
	0, 0, 3909, 0, 0, 262, 3959, 3960, 0, 0,
	0, 0, 0, 3913, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3529, 0, 1452, 0, 0, 3918,
	1760, 1761, 1762, 1763, 0, 0, 0, 0, 0, 0,
	1743, 0, 1435, 0, 0, 1435, 0, 0, 0, 1755,
	1751, 0, 1748, 1746, 1747, 1739, 1740, 1741, 1742, 1744,
	1745, 0, 3542, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1775, 0, 0, 1785,
	0, 0, 0, 0, 0, 1765, 1767, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1781, 0, 1782, 1213, 1213, 0, 0, 0,
	0, 1752, 1753, 0, 0, 0, 0, 0, 0, 1435,
	0, 1213, 0, 1287, 0, 0, 0, 0, 0, 1773,
	0, 0, 0, 0, 0, 0, 1435, 0, 0, 1213,
	0, 0, 0, 0, 1758, 0, 0, 0, 0, 0,
	0, 1213, 0, 0, 1213, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1957, 0, 0, 0, 1213, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1783, 0, 0, 0,
	0, 1213, 1213, 0, 0, 4127, 0, 4129, 0, 0,
	0, 0, 0, 0, 1772, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1213, 0, 0, 0, 0, 1957, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1764, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1213,
	0, 4174, 0, 0, 0, 0, 0, 0, 1759, 0,
	1435, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1213, 0, 1213, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1776, 0, 0, 0, 0, 1213,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1213, 0, 0, 0, 1213, 4142, 4143, 4144, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1213, 2362, 0,
	0, 4153, 4154, 0, 1213, 0, 1213, 0, 0, 0,
	1213, 0, 0, 0, 0, 0, 0, 4244, 0, 4162,
	4165, 0, 0, 0, 0, 0, 0, 0, 1213, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1213, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1774, 0, 1213, 0, 0,
	1749, 1750, 1756, 1777, 1755, 1751, 0, 1748, 1746, 1747,
	1739, 1740, 1741, 1742, 1744, 1745, 0, 0, 2203, 4209,
	0, 0, 1213, 1213, 3923, 0, 0, 4215, 0, 2203,
	0, 0, 0, 0, 0, 0, 0, 0, 4222, 3813,
	0, 1039, 0, 0, 0, 1213, 0, 0, 0, 0,
	0, 0, 0, 4230, 2203, 0, 0, 0, 0, 3831,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1213, 0, 0, 1213, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3880, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1957, 0, 0, 0, 1435, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1213, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1435, 0, 0, 0, 0, 0, 1213, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1957, 1957,
	0, 0, 0, 0, 1287, 1287, 0, 0, 718, 0,
	0, 0, 0, 0, 262, 0, 262, 262, 0, 0,
	262, 1287, 1296, 4350, 0, 0, 4353, 0, 701, 0,
	0, 0, 0, 0, 702, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1957, 1957, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 262, 1296, 262, 262, 0,
	1296, 262, 262, 703, 0, 1296, 0, 0, 0, 0,
	0, 0, 1957, 0, 704, 262, 0, 1039, 1039, 0,
	0, 0, 0, 0, 0, 0, 0, 4401, 0, 0,
	0, 0, 1435, 0, 1435, 705, 1296, 0, 0, 1213,
	1213, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1735, 1736, 0, 0, 0, 724, 0, 0,
	0, 1435, 1296, 0, 262, 262, 0, 0, 0, 0,
	0, 0, 1213, 0, 0, 0, 1766, 706, 0, 0,
	0, 2362, 1296, 1738, 0, 0, 0, 1296, 262, 262,
	4165, 0, 4017, 0, 0, 0, 0, 0, 0, 0,
	707, 1296, 0, 0, 0, 0, 0, 0, 2203, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1737, 1735,
	1736, 708, 0, 0, 709, 1435, 0, 0, 1757, 0,
	0, 0, 1039, 0, 0, 0, 0, 1754, 0, 1435,
	733, 0, 0, 1766, 0, 0, 0, 0, 0, 0,
	1738, 0, 0, 0, 1296, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 723, 0, 0, 0, 0, 0,
	0, 0, 2203, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4098, 0, 262, 1737, 0, 4518, 4518, 4518,
	0, 3043, 0, 0, 0, 1757, 0, 0, 0, 0,
	0, 1435, 0, 262, 1754, 0, 0, 0, 0, 0,
	0, 0, 1760, 1761, 1762, 1763, 0, 0, 0, 4539,
	0, 0, 1743, 720, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1213, 0, 0, 1213,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1435, 0, 1957, 0, 3036, 0,
	0, 0, 0, 0, 0, 0, 0, 1765, 1767, 0,
	0, 0, 0, 4518, 0, 0, 0, 0, 0, 1760,
	1761, 1762, 1763, 0, 1435, 0, 0, 1213, 0, 1743,
	730, 0, 711, 1752, 1753, 0, 0, 0, 0, 0,
	0, 1213, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1213, 1213, 1213, 0, 0, 0, 0, 0,
	731, 0, 712, 0, 0, 1435, 1758, 0, 0, 1213,
	0, 0, 0, 0, 1765, 1767, 0, 0, 0, 0,
	0, 0, 4197, 0, 1213, 0, 0, 0, 0, 0,
	1213, 0, 0, 1435, 0, 0, 0, 0, 0, 732,
	1752, 1753, 0, 0, 0, 0, 713, 0, 0, 0,
	728, 729, 726, 0, 1213, 0, 0, 0, 721, 0,
	0, 714, 0, 0, 0, 1957, 0, 0, 0, 0,
	0, 0, 1053, 1758, 4518, 4664, 0, 0, 0, 2203,
	0, 0, 0, 4668, 0, 0, 0, 0, 0, 0,
	0, 1435, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 715, 0, 722, 0, 0, 0, 262, 0,
	0, 0, 0, 716, 0, 0, 0, 0, 0, 1296,
	0, 0, 0, 262, 262, 262, 0, 717, 0, 1764,
	0, 262, 725, 0, 0, 0, 0, 0, 262, 0,
	0, 1296, 0, 0, 0, 0, 734, 0, 1435, 0,
	1759, 0, 0, 0, 0, 0, 0, 719, 1075, 109,
	0, 0, 1213, 0, 0, 262, 4316, 1452, 0, 0,
	1213, 0, 262, 0, 1213, 0, 1213, 0, 0, 0,
	0, 0, 0, 1213, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1213, 1213, 1764, 0, 0, 0,
	0, 0, 0, 1213, 0, 0, 0, 1296, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1759, 1296, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1213, 0, 1213, 0, 0,
	0, 0, 1296, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 109, 0, 0, 0, 0, 1213, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1213, 0, 1213,
	0, 0, 1213, 0, 0, 0, 0, 0, 0, 0,
	0, 1213, 0, 0, 0, 0, 1755, 1751, 0, 1748,
	1746, 1747, 1739, 1740, 1741, 1742, 1744, 1745, 0, 0,
	0, 0, 0, 0, 0, 4406, 0, 0, 1053, 1053,
	0, 1213, 1213, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1213, 0, 1014, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1213, 1034, 0, 0, 0, 1213, 0,
	0, 0, 0, 1755, 1751, 0, 1748, 1746, 1747, 1739,
	1740, 1741, 1742, 1744, 1745, 0, 0, 0, 262, 1296,
	1296, 262, 0, 1213, 0, 0, 0, 0, 0, 1296,
	0, 0, 0, 1213, 1213, 1213, 0, 0, 0, 0,
	1196, 0, 0, 0, 0, 0, 1213, 4459, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1053, 262, 0, 1213, 0, 262, 0,
	0, 0, 0, 0, 262, 0, 0, 4495, 0, 0,
	262, 0, 0, 0, 0, 0, 0, 1957, 0, 0,
	0, 0, 0, 0, 0, 0, 262, 0, 262, 0,
	0, 0, 0, 0, 262, 0, 0, 1213, 0, 1213,
	0, 0, 0, 1296, 0, 1296, 0, 1296, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1296, 1296, 1213, 0, 0, 0, 0,
	0, 0, 0, 0, 1296, 262, 0, 0, 262, 0,
	4555, 0, 0, 0, 0, 0, 1296, 0, 1296, 1296,
	1296, 0, 1957, 0, 0, 0, 0, 0, 0, 262,
	0, 0, 0, 0, 1086, 0, 0, 0, 0, 0,
	0, 262, 262, 0, 262, 0, 262, 0, 262, 0,
	262, 0, 0, 1213, 0, 0, 0, 0, 0, 0,
	1213, 0, 0, 0, 0, 1213, 1213, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	260, 260, 260, 0, 0, 0, 0, 0, 0, 0,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 794,
	1213, 0, 0, 1213, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 718, 0,
	0, 1213, 1213, 0, 0, 794, 0, 0, 0, 0,
	0, 0, 1296, 0, 0, 0, 0, 0, 701, 0,
	0, 0, 0, 0, 702, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1957, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1735, 1736, 0, 0, 0, 0, 0,
	0, 0, 0, 703, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 704, 0, 0, 1766, 0, 0,
	0, 0, 0, 0, 1738, 0, 1213, 0, 0, 0,
	0, 0, 0, 0, 0, 705, 0, 0, 1213, 1296,
	1735, 1736, 0, 1768, 1769, 1770, 1778, 1779, 1780, 0,
	0, 0, 0, 0, 0, 0, 0, 724, 0, 1737,
	0, 0, 0, 1771, 1766, 0, 0, 0, 0, 1757,
	0, 1738, 0, 0, 0, 0, 1209, 706, 1754, 0,
	1784, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1213, 0, 0, 1213, 0,
	707, 0, 1213, 0, 0, 0, 1737, 0, 1296, 0,
	0, 0, 1213, 1213, 0, 0, 1757, 0, 0, 0,
	0, 708, 0, 0, 709, 1754, 0, 0, 0, 1213,
	0, 262, 0, 0, 1296, 0, 0, 0, 0, 0,
	733, 0, 0, 0, 0, 0, 0, 262, 0, 0,
	0, 0, 0, 1760, 1761, 1762, 1763, 0, 0, 0,
	0, 0, 0, 1743, 723, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 262, 0, 0, 109, 0,
	1760, 1761, 1762, 1763, 0, 0, 0, 0, 1765, 1767,
	1743, 0, 0, 0, 0, 262, 0, 0, 262, 0,
	0, 0, 262, 720, 262, 0, 0, 0, 0, 0,
	0, 262, 262, 0, 1752, 1753, 0, 1296, 1296, 0,
	0, 262, 0, 0, 0, 0, 1775, 0, 0, 1785,
	0, 0, 0, 0, 0, 1765, 1767, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1758, 0, 0,
	0, 109, 1781, 109, 1782, 109, 0, 0, 0, 1296,
	0, 1752, 1753, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 711, 0, 0, 0, 0, 262, 0, 1773,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	262, 0, 0, 0, 1758, 0, 0, 0, 0, 0,
	731, 0, 712, 262, 0, 0, 1034, 109, 109, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	109, 0, 109, 0, 0, 0, 0, 0, 0, 0,
	262, 1296, 109, 0, 109, 0, 1783, 0, 0, 732,
	0, 0, 0, 0, 0, 1296, 713, 0, 0, 0,
	728, 729, 726, 0, 1772, 0, 262, 0, 721, 0,
	0, 714, 0, 0, 0, 1213, 0, 1213, 0, 0,
	1764, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 262, 0, 262, 0, 1296, 0,
	0, 1759, 0, 262, 0, 109, 0, 0, 0, 0,
	0, 0, 715, 0, 722, 0, 0, 0, 0, 0,
	0, 0, 0, 716, 0, 0, 0, 1764, 0, 1296,
	0, 0, 0, 0, 0, 0, 0, 717, 0, 0,
	0, 1296, 725, 1296, 0, 0, 0, 0, 1759, 0,
	0, 0, 0, 0, 262, 0, 734, 0, 1296, 0,
	0, 0, 0, 0, 0, 0, 0, 719, 0, 0,
	0, 0, 0, 262, 1776, 262, 0, 0, 0, 0,
	0, 0, 0, 262, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1014, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1800, 0, 0, 0, 262,
	262, 262, 262, 0, 0, 0, 0, 0, 262, 0,
	262, 0, 1805, 0, 0, 0, 1811, 1755, 1751, 0,
	1748, 1746, 1747, 1739, 1740, 1741, 1742, 1744, 1745, 0,
	0, 0, 0, 0, 260, 0, 260, 260, 0, 0,
	260, 262, 0, 0, 0, 0, 0, 0, 0, 262,
	0, 0, 0, 0, 0, 1774, 0, 0, 0, 0,
	1749, 1750, 1756, 1777, 1755, 1751, 0, 1748, 1746, 1747,
	1739, 1740, 1741, 1742, 1744, 1745, 0, 0, 0, 0,
	0, 0, 0, 0, 3560, 260, 0, 260, 260, 0,
	0, 260, 260, 0, 0, 1735, 1736, 0, 1768, 1769,
	1770, 1778, 1779, 1780, 0, 794, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1771, 1766,
	0, 0, 0, 0, 0, 0, 1738, 0, 0, 0,
	0, 0, 0, 0, 0, 1784, 1897, 0, 1900, 0,
	109, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 260, 260, 0, 0, 0, 0,
	0, 1737, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1757, 0, 0, 0, 0, 0, 0, 260, 260,
	1754, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1760, 1761, 1762, 1763, 0,
	0, 0, 0, 0, 0, 1743, 0, 0, 0, 0,
	0, 0, 0, 0, 260, 0, 0, 0, 0, 0,
	1296, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 260, 0, 0, 0, 0, 0, 0,
	0, 1775, 0, 0, 1785, 0, 0, 0, 0, 0,
	1765, 1767, 0, 1296, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1781, 1296, 1782,
	0, 0, 0, 0, 0, 0, 1752, 1753, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1296, 0, 0, 0, 1773, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1296, 1296, 0, 0, 1758,
	0, 0, 262, 0, 0, 0, 262, 262, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 262, 0, 0,
	0, 1783, 0, 0, 0, 0, 1296, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1772,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	262, 262, 0, 1296, 262, 0, 0, 0, 0, 0,
	0, 262, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1296, 262, 1296, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1764, 1296, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1296, 0, 0, 1034, 1296, 1034,
	0, 0, 1899, 1759, 1209, 0, 0, 0, 260, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1296, 0, 260, 1899, 260, 0, 262, 1296, 1776,
	1296, 794, 0, 0, 1296, 0, 0, 0, 794, 0,
	0, 262, 0, 0, 0, 0, 0, 0, 0, 262,
	0, 0, 1296, 262, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1296, 260, 0, 0, 0, 0,
	0, 262, 260, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1296, 1296, 0, 0,
	0, 0, 0, 0, 262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1296,
	1774, 0, 0, 0, 0, 1749, 1750, 1756, 1777, 1755,
	1751, 0, 1748, 1746, 1747, 1739, 1740, 1741, 1742, 1744,
	1745, 0, 0, 0, 0, 4450, 1014, 0, 0, 1014,
	1014, 0, 0, 0, 0, 0, 0, 0, 1296, 0,
	262, 1296, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 266, 262, 0,
	0, 0, 0, 0, 2429, 0, 0, 1735, 1736, 0,
	1768, 1769, 1770, 1778, 1779, 1780, 0, 0, 0, 0,
	1034, 0, 0, 0, 0, 0, 0, 0, 0, 1805,
	1771, 1766, 0, 1805, 0, 1296, 0, 0, 1738, 0,
	0, 0, 0, 0, 0, 0, 0, 1784, 0, 0,
	0, 0, 1296, 0, 0, 0, 0, 0, 260, 0,
	0, 794, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 786, 1737, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1757, 0, 0, 0, 0, 0, 0,
	0, 0, 1754, 0, 0, 0, 0, 0, 786, 0,
	0, 0, 0, 0, 0, 1196, 0, 0, 0, 0,
	0, 0, 0, 0, 260, 0, 0, 0, 260, 0,
	0, 1900, 0, 0, 260, 0, 0, 0, 0, 0,
	260, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 260, 0, 260, 0,
	0, 0, 0, 0, 260, 0, 109, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1760, 1761, 1762,
	1763, 0, 0, 0, 0, 0, 0, 1743, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 260, 0, 0, 260, 0,
	0, 0, 0, 0, 0, 0, 1296, 0, 0, 0,
	0, 0, 0, 1775, 0, 0, 1785, 0, 0, 260,
	0, 0, 1765, 1767, 0, 0, 0, 0, 0, 0,
	0, 794, 260, 0, 260, 0, 260, 0, 260, 1781,
	260, 1782, 0, 0, 0, 0, 0, 0, 1752, 1753,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1773, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	260, 1758, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 109, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1783, 0, 0, 0, 0, 0, 0,
	0, 0, 1735, 1736, 0, 1768, 1769, 1770, 1778, 1779,
	1780, 1772, 0, 0, 0, 0, 109, 0, 0, 0,
	0, 0, 262, 0, 0, 0, 1766, 0, 0, 0,
	0, 0, 0, 1738, 0, 0, 0, 0, 0, 0,
	1296, 0, 1784, 1296, 262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 109, 262, 0, 109, 0, 109,
	0, 0, 0, 0, 0, 262, 0, 0, 1737, 0,
	0, 0, 0, 0, 1764, 262, 0, 0, 1757, 0,
	262, 0, 0, 0, 0, 262, 0, 1754, 0, 0,
	0, 1296, 0, 0, 0, 1759, 0, 0, 0, 0,
	0, 0, 0, 109, 0, 0, 109, 0, 0, 0,
	0, 0, 109, 0, 0, 0, 1296, 1296, 1296, 0,
	0, 1776, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1296, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1296, 0,
	0, 1209, 262, 0, 1296, 0, 0, 0, 0, 0,
	0, 0, 1760, 1761, 1762, 1763, 0, 1209, 0, 0,
	0, 0, 1743, 0, 0, 0, 0, 0, 1296, 0,
	0, 260, 109, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 260, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1775, 0,
	0, 1785, 0, 0, 0, 0, 0, 1765, 1767, 0,
	0, 0, 1774, 0, 0, 0, 0, 1749, 1750, 1756,
	1777, 1755, 1751, 0, 1748, 1746, 1747, 1739, 1740, 1741,
	1742, 1744, 1745, 1752, 1753, 260, 0, 0, 0, 0,
	0, 3104, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1773, 0, 0, 0, 260, 0, 0, 260, 0,
	0, 0, 260, 0, 260, 0, 1758, 0, 0, 0,
	0, 260, 260, 0, 0, 0, 0, 0, 0, 0,
	0, 260, 0, 0, 0, 0, 0, 0, 1296, 2429,
	1296, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1296, 1296,
	1805, 0, 0, 0, 0, 0, 0, 1296, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 260, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	260, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 260, 0, 0, 0, 0, 262, 0,
	0, 1296, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1296, 0, 1296, 262, 1294, 1296, 262, 0, 1764,
	260, 0, 0, 0, 0, 1296, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 262, 0, 0, 0, 0,
	1759, 0, 0, 0, 0, 0, 794, 0, 0, 0,
	0, 0, 0, 0, 0, 1296, 1296, 0, 0, 1352,
	0, 0, 0, 1352, 0, 0, 1776, 0, 1294, 0,
	0, 0, 0, 0, 260, 1296, 794, 0, 262, 0,
	0, 0, 0, 260, 0, 0, 0, 1296, 262, 0,
	0, 0, 1296, 0, 0, 0, 0, 0, 0, 1294,
	0, 0, 0, 1196, 0, 0, 0, 1091, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1196,
	0, 0, 0, 0, 0, 1294, 0, 1296, 1296, 1296,
	0, 0, 0, 0, 260, 0, 0, 0, 0, 0,
	1296, 0, 0, 0, 0, 1294, 0, 0, 0, 0,
	1294, 0, 0, 260, 0, 260, 0, 0, 0, 0,
	0, 0, 0, 260, 1294, 0, 0, 1774, 0, 0,
	1296, 0, 1749, 1750, 1756, 1777, 1755, 1751, 0, 1748,
	1746, 1747, 1739, 1740, 1741, 1742, 1744, 1745, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 260,
	260, 260, 260, 0, 0, 0, 0, 0, 260, 0,
	260, 1296, 0, 1296, 0, 0, 0, 1294, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1296,
	0, 260, 0, 0, 0, 0, 0, 0, 262, 260,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 109, 109, 0,
	0, 109, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1296, 0, 0,
	0, 0, 0, 0, 1296, 262, 0, 0, 0, 1296,
	1296, 109, 109, 0, 0, 109, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1296, 0, 0, 1296, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 262, 262, 0, 0, 0, 1735, 1736, 0,
	1768, 1769, 1770, 1778, 1779, 1780, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1196, 0, 0, 1034, 0,
	1771, 1766, 0, 0, 0, 0, 0, 0, 1738, 0,
	0, 0, 109, 109, 0, 0, 0, 1784, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1737, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1757, 0, 0, 0, 0, 0, 1209,
	0, 0, 1754, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 262, 0, 1209, 0, 0, 0, 0,
	0, 0, 1352, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 786, 0, 0, 0, 0, 0,
	0, 786, 0, 0, 1294, 1899, 0, 0, 0, 0,
	0, 262, 0, 0, 0, 0, 1296, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1296, 1296, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1760, 1761, 1762,
	1763, 0, 0, 1296, 0, 0, 0, 1743, 0, 0,
	0, 0, 260, 0, 0, 0, 260, 260, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1294, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1294, 0, 1775, 0, 0, 1785, 260, 0, 0,
	0, 0, 1765, 1767, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 262, 0, 1352, 0, 0, 0, 1781,
	0, 1782, 0, 0, 0, 0, 0, 0, 1752, 1753,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	260, 260, 0, 0, 260, 0, 1773, 0, 0, 0,
	0, 1899, 0, 262, 0, 0, 0, 0, 0, 0,
	0, 1758, 0, 0, 0, 0, 260, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 109,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1783, 0, 0, 0, 1196, 1196, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1772, 0, 0, 0, 0, 262, 260, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 794, 1294, 1294, 0, 0, 0, 0, 0, 260,
	0, 0, 1352, 260, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 260, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1209, 0, 0, 1764, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1759, 0, 0, 0, 0,
	0, 0, 0, 0, 260, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1295, 0, 0, 0, 0,
	0, 1776, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1294, 0, 1294, 0,
	1294, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1294, 1294, 0, 1353,
	260, 0, 260, 1353, 0, 0, 0, 1294, 1295, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1294,
	0, 1294, 1294, 1294, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 260, 1295,
	0, 0, 0, 0, 786, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1774, 0, 0, 1295, 0, 1749, 1750, 1756,
	1777, 1755, 1751, 109, 1748, 1746, 1747, 1739, 1740, 1741,
	1742, 1744, 1745, 0, 0, 1295, 0, 0, 0, 0,
	1295, 3103, 0, 0, 0, 0, 0, 0, 0, 1196,
	0, 0, 0, 0, 1295, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 109, 0, 1352, 1735, 1736, 0, 1768,
	1769, 1770, 1778, 1779, 1780, 0, 0, 1295, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1771,
	1766, 0, 0, 0, 0, 0, 0, 1738, 0, 0,
	0, 0, 0, 0, 0, 0, 1784, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1737, 1209, 1209, 0, 0, 0, 0, 0,
	0, 0, 1757, 0, 0, 0, 0, 0, 0, 0,
	0, 1754, 1352, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 109, 0, 0, 0, 0, 0,
	1196, 0, 0, 0, 0, 0, 0, 0, 1196, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1352, 0, 0, 0, 0, 1760, 1761, 1762, 1763,
	0, 0, 0, 0, 0, 0, 1743, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1352, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1775, 0, 0, 1785, 0, 0, 0, 0,
	0, 1765, 1767, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1781, 0,
	1782, 0, 0, 0, 0, 0, 0, 1752, 1753, 0,
	0, 0, 260, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1773, 0, 0, 0, 0,
	0, 0, 0, 0, 260, 0, 0, 0, 0, 0,
	1758, 0, 0, 0, 0, 260, 0, 0, 0, 0,
	1294, 1294, 0, 0, 0, 260, 0, 0, 109, 0,
	0, 0, 1353, 0, 0, 260, 0, 0, 0, 0,
	260, 109, 0, 0, 0, 260, 0, 0, 0, 0,
	0, 0, 1783, 0, 1295, 0, 0, 0, 0, 0,
	0, 0, 1352, 0, 109, 1209, 0, 0, 0, 0,
	1772, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 260, 0, 0, 0, 0, 0, 0, 0,
	1295, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1295, 0, 1764, 1352, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1294, 0,
	0, 0, 0, 0, 1759, 1353, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1776, 0, 0, 0, 0, 0, 0, 0, 0, 786,
	0, 1294, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1294, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1294, 0, 1294, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1209, 0, 0, 0,
	0, 1294, 0, 0, 1209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1899, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1774, 1295, 1295, 0, 0, 1749, 1750, 1756, 1777,
	1755, 1751, 1353, 1748, 1746, 1747, 1739, 1740, 1741, 1742,
	1744, 1745, 0, 0, 0, 0, 0, 0, 0, 0,
	3100, 0, 0, 0, 0, 0, 0, 0, 0, 1899,
	0, 1899, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2429, 0, 0, 0, 0, 0, 0, 260, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 260, 0, 0, 260, 1735, 1736,
	0, 1768, 1769, 1770, 1778, 1779, 1780, 0, 0, 0,
	0, 0, 0, 0, 0, 260, 0, 0, 0, 0,
	0, 1771, 1766, 0, 0, 0, 1295, 0, 1295, 1738,
	1295, 0, 0, 0, 0, 0, 0, 0, 1784, 0,
	0, 0, 0, 0, 0, 0, 1295, 1295, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1295, 260, 0,
	0, 0, 0, 0, 1737, 0, 0, 0, 260, 1295,
	0, 1295, 1295, 1295, 1757, 0, 0, 0, 0, 0,
	0, 0, 0, 1754, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1899, 0, 0,
	0, 0, 0, 0, 0, 0, 109, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	109, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1760, 1761,
	1762, 1763, 0, 0, 0, 0, 0, 0, 1743, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1353, 0, 0, 0, 0,
	0, 0, 0, 0, 1775, 0, 0, 1785, 0, 0,
	0, 0, 0, 1765, 1767, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 260, 0,
	1781, 0, 1782, 1352, 0, 0, 0, 0, 0, 1752,
	1753, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 109, 0, 1773, 0, 0,
	0, 109, 0, 0, 0, 0, 1352, 0, 0, 0,
	0, 0, 1758, 0, 0, 0, 0, 0, 0, 0,
	0, 1352, 1353, 0, 0, 260, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1352, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1783, 0, 0, 0, 1294, 1294,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1772, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1353, 0, 0, 0, 1899, 1899, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1294,
	0, 0, 260, 260, 0, 0, 0, 1353, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1764, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1294, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1759, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1294, 0,
	1294, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1899, 0, 1776, 0, 0, 0, 1352, 0, 0, 0,
	0, 0, 1899, 0, 0, 0, 0, 1294, 0, 1735,
	1736, 1294, 1768, 1769, 1770, 1778, 1779, 1780, 0, 0,
	0, 0, 0, 260, 0, 0, 0, 0, 0, 0,
	1295, 1295, 1771, 1766, 1294, 0, 0, 0, 0, 0,
	1738, 1294, 0, 1294, 0, 0, 0, 1352, 0, 1784,
	0, 0, 0, 0, 786, 0, 0, 0, 0, 1899,
	0, 260, 1899, 0, 0, 1294, 0, 0, 0, 0,
	0, 0, 1353, 0, 0, 1737, 0, 1294, 0, 0,
	0, 0, 0, 0, 0, 1757, 0, 0, 0, 0,
	0, 0, 0, 1774, 1754, 0, 0, 0, 1749, 1750,
	1756, 1777, 1755, 1751, 0, 1748, 1746, 1747, 1739, 1740,
	1741, 1742, 1744, 1745, 0, 0, 0, 0, 0, 1294,
	1294, 0, 3099, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1294, 0, 1353, 0, 0, 0, 0, 0,
	0, 0, 0, 260, 0, 0, 0, 0, 1295, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1760,
	1761, 1762, 1763, 0, 0, 0, 0, 0, 0, 1743,
	0, 1352, 0, 0, 1352, 0, 0, 0, 0, 0,
	0, 0, 0, 260, 0, 0, 0, 0, 0, 0,
	0, 1295, 0, 0, 0, 1735, 1736, 0, 1768, 1769,
	1770, 1778, 1779, 1780, 0, 1775, 0, 0, 1785, 0,
	0, 0, 0, 0, 1765, 1767, 0, 0, 1771, 1766,
	0, 0, 1295, 0, 0, 0, 1738, 0, 0, 0,
	0, 1781, 0, 1782, 1295, 1784, 1295, 0, 0, 0,
	1752, 1753, 0, 0, 0, 0, 0, 0, 1352, 0,
	0, 1295, 0, 0, 0, 0, 260, 0, 1773, 0,
	0, 1737, 0, 0, 0, 1352, 0, 0, 0, 0,
	0, 1757, 0, 1758, 0, 0, 0, 0, 0, 0,
	1754, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1783, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1772, 0, 0, 0, 0, 0, 1899,
	0, 1899, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1760, 1761, 1762, 1763, 0,
	0, 0, 0, 0, 0, 1743, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1764, 0, 0, 0,
	0, 1775, 0, 0, 1785, 0, 0, 0, 0, 0,
	1765, 1767, 0, 0, 0, 0, 0, 1759, 0, 1352,
	0, 0, 0, 0, 0, 0, 0, 1781, 0, 1782,
	0, 0, 0, 0, 0, 0, 1752, 1753, 0, 0,
	0, 0, 0, 1776, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1773, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1758,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1783, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1772,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1774, 0, 0, 0, 0, 1749,
	1750, 1756, 1777, 1755, 1751, 0, 1748, 1746, 1747, 1739,
	1740, 1741, 1742, 1744, 1745, 0, 0, 0, 0, 0,
	0, 0, 0, 3098, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1294, 0, 0, 1294, 0, 0, 0,
	0, 0, 1764, 1353, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1759, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1353, 0, 0, 0,
	0, 0, 0, 0, 1294, 0, 0, 0, 0, 1776,
	0, 1353, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1294,
	1294, 1294, 0, 1353, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1294, 0, 1295, 1295,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1294, 0, 0, 0, 0, 0, 1352, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1352, 0, 0, 0, 0, 0, 0, 0, 1295,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1774, 0, 0, 0, 0, 1749, 1750, 1756, 1777, 1755,
	1751, 0, 1748, 1746, 1747, 1739, 1740, 1741, 1742, 1744,
	1745, 0, 0, 0, 0, 0, 1295, 0, 0, 2452,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1295, 0,
	1295, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 812, 0, 0, 0, 1353, 1735, 1736, 0,
	1768, 1769, 1770, 1778, 1779, 1780, 0, 1295, 0, 0,
	0, 1295, 814, 0, 0, 0, 0, 0, 815, 0,
	1771, 1766, 0, 0, 0, 0, 0, 0, 1738, 0,
	0, 1352, 0, 1352, 1295, 0, 0, 1784, 0, 0,
	0, 1295, 0, 1295, 0, 0, 0, 1353, 0, 0,
	0, 1294, 1294, 0, 0, 0, 0, 816, 0, 833,
	1352, 0, 0, 1737, 0, 1295, 0, 0, 0, 0,
	0, 0, 0, 1757, 0, 0, 0, 1295, 0, 0,
	0, 0, 1754, 0, 817, 0, 0, 0, 0, 818,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 842, 0, 0, 1294, 0, 0, 819, 0, 1295,
	1295, 0, 0, 0, 1352, 0, 1294, 0, 0, 1294,
	0, 840, 0, 0, 0, 0, 0, 0, 1352, 0,
	0, 0, 1295, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 813, 0, 0, 1760, 1761, 1762,
	1763, 0, 0, 0, 0, 0, 0, 1743, 1294, 1294,
	0, 0, 0, 0, 0, 820, 0, 0, 821, 0,
	0, 1353, 0, 0, 1353, 0, 0, 0, 1294, 844,
	0, 0, 0, 0, 733, 0, 0, 0, 0, 0,
	1352, 0, 0, 1775, 0, 1294, 1785, 0, 0, 0,
	0, 0, 1765, 1767, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1781,
	0, 1782, 0, 0, 0, 0, 0, 0, 1752, 1753,
	1294, 1294, 1294, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1352, 0, 0, 1773, 0, 1353, 0,
	0, 0, 0, 0, 0, 0, 0, 843, 0, 0,
	0, 1758, 0, 0, 0, 1353, 0, 838, 0, 0,
	0, 0, 0, 1352, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1783, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1352, 0, 1294, 0, 0, 0,
	0, 1772, 0, 0, 0, 822, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 824, 0, 0, 0,
	0, 0, 1352, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1735, 1736, 0, 1768,
	1769, 1770, 1778, 1779, 1780, 0, 825, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1771,
	1766, 0, 0, 0, 1764, 0, 0, 1738, 0, 0,
	0, 0, 834, 0, 0, 0, 1784, 0, 0, 0,
	1352, 0, 0, 732, 0, 1759, 0, 1294, 0, 0,
	0, 0, 1294, 1294, 811, 0, 835, 0, 0, 1353,
	0, 0, 1737, 0, 0, 826, 0, 0, 0, 0,
	0, 1776, 1757, 0, 0, 0, 0, 0, 0, 0,
	0, 1754, 0, 0, 0, 0, 0, 0, 0, 832,
	0, 0, 0, 0, 0, 0, 0, 1352, 0, 0,
	1294, 0, 0, 0, 0, 0, 827, 0, 0, 0,
	828, 847, 0, 846, 0, 0, 0, 829, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 830, 0, 0, 0, 0, 839, 0, 0, 0,
	0, 0, 848, 0, 845, 0, 0, 0, 0, 0,
	734, 0, 0, 0, 0, 0, 1760, 1761, 1762, 1763,
	0, 0, 0, 0, 0, 0, 1743, 0, 0, 0,
	0, 0, 1774, 0, 0, 0, 0, 1749, 1750, 1756,
	1777, 1755, 1751, 0, 1748, 1746, 1747, 1739, 1740, 1741,
	1742, 1744, 1745, 0, 0, 0, 0, 4446, 0, 0,
	0, 0, 1775, 0, 0, 1785, 0, 0, 0, 0,
	0, 1765, 1767, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1295, 0, 0, 1295, 0, 1781, 0,
	1782, 0, 0, 0, 0, 0, 0, 1752, 1753, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1773, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1758, 0, 0, 0, 1295, 0, 0, 0, 0, 1294,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1294,
	1294, 0, 0, 0, 0, 0, 0, 0, 0, 1295,
	1295, 1295, 0, 0, 0, 0, 1294, 0, 0, 0,
	0, 0, 1783, 0, 0, 0, 1295, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1772, 1295, 0, 0, 0, 0, 0, 1353, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1353, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1764, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1759, 0, 0, 0, 0, 0,
	1735, 1736, 0, 1768, 1769, 1770, 1778, 1779, 1780, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1776, 0, 0, 1771, 1766, 0, 0, 0, 0, 0,
	0, 1738, 0, 0, 0, 0, 0, 0, 0, 0,
	1784, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1353, 0, 1353, 0, 0, 1737, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1757, 0, 0, 0,
	0, 1295, 1295, 0, 0, 1754, 0, 0, 0, 0,
	1353, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1774, 0, 0, 0, 0, 1749, 1750, 1756, 1777,
	1755, 1751, 0, 1748, 1746, 1747, 1739, 1740, 1741, 1742,
	1744, 1745, 0, 0, 1295, 0, 4365, 0, 0, 0,
	0, 0, 0, 0, 1353, 0, 1295, 0, 0, 1295,
	1760, 1761, 1762, 1763, 0, 0, 0, 0, 1353, 0,
	1743, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1295, 1295,
	0, 0, 0, 0, 0, 0, 1775, 0, 0, 1785,
	0, 0, 0, 0, 0, 1765, 1767, 0, 1295, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1353, 0, 1781, 0, 1782, 1295, 0, 0, 0, 0,
	0, 1752, 1753, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1773,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1295, 1295, 1295, 0, 1758, 0, 0, 0, 0, 0,
	0, 0, 0, 1353, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1353, 0, 0, 1783, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1772, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1353, 0, 1295, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1353, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1764, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1759, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1353, 0, 0, 0, 1776, 0, 0, 1295, 0, 0,
	0, 0, 1295, 1295, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1353, 0, 0,
	1295, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1774, 0, 0, 0, 0,
	1749, 1750, 1756, 1777, 1755, 1751, 0, 1748, 1746, 1747,
	1739, 1740, 1741, 1742, 1744, 1745, 0, 0, 0, 0,
	4325, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1350, 0, 0, 0, 1295,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1295,
	1295, 0, 270, 272, 271, 273, 274, 275, 276, 277,
	1355, 278, 279, 1356, 1357, 1358, 1295, 1359, 614, 1360,
	1361, 1362, 1363, 280, 281, 1153, 282, 283, 284, 285,
	286, 287, 615, 616, 0, 288, 617, 289, 618, 1364,
	619, 290, 291, 292, 293, 294, 295, 1365, 1366, 0,
	296, 620, 621, 622, 1367, 297, 298, 623, 1368, 1297,
	1369, 299, 300, 301, 302, 303, 304, 305, 0, 1370,
	307, 308, 309, 306, 310, 1371, 311, 0, 312, 313,
	314, 315, 316, 317, 1372, 318, 319, 320, 1154, 321,
	322, 323, 1373, 1374, 1376, 1375, 1377, 1378, 1379, 324,
	325, 326, 327, 328, 0, 329, 624, 625, 1380, 333,
	330, 331, 1381, 334, 332, 335, 1382, 336, 337, 338,
	1383, 1384, 339, 340, 341, 1385, 342, 343, 1386, 344,
	345, 346, 1387, 347, 348, 626, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 627, 628, 360, 1388,
	267, 1389, 0, 0, 0, 0, 361, 362, 363, 629,
	0, 0, 0, 364, 1390, 365, 1391, 1392, 1155, 366,
	367, 630, 631, 368, 369, 370, 371, 372, 373, 374,
	375, 376, 1393, 377, 632, 1394, 633, 378, 1395, 379,
	380, 381, 382, 383, 634, 635, 636, 460, 1157, 384,
	385, 1396, 386, 387, 388, 389, 0, 0, 0, 268,
	390, 391, 392, 394, 1397, 1156, 393, 637, 638, 1398,
	639, 1399, 395, 396, 1158, 640, 1159, 397, 398, 399,
	1160, 400, 0, 0, 0, 401, 402, 403, 404, 405,
	406, 1400, 407, 409, 408, 1401, 410, 641, 1161, 411,
	412, 1162, 1402, 413, 0, 0, 0, 414, 415, 418,
	1403, 1404, 416, 417, 419, 420, 0, 421, 422, 424,
	427, 423, 425, 426, 428, 441, 429, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 443, 0,
	442, 1163, 444, 445, 446, 451, 453, 454, 449, 450,
	452, 455, 456, 448, 1164, 447, 1405, 269, 1165, 457,
	458, 1406, 642, 459, 643, 461, 462, 1407, 0, 463,
	0, 1408, 1409, 465, 466, 467, 1410, 1411, 468, 469,
	644, 1166, 470, 1167, 645, 471, 472, 464, 473, 474,
	475, 476, 477, 478, 479, 480, 1412, 481, 482, 646,
	483, 484, 485, 647, 486, 487, 488, 648, 489, 649,
	490, 491, 1413, 492, 493, 0, 494, 495, 496, 497,
	498, 499, 500, 650, 501, 503, 502, 504, 1414, 505,
	0, 506, 507, 508, 0, 0, 0, 0, 509, 0,
	511, 512, 513, 514, 510, 515, 516, 517, 518, 1415,
	519, 520, 521, 1168, 522, 523, 524, 525, 651, 526,
	0, 527, 528, 534, 535, 529, 530, 536, 537, 538,
	539, 540, 1416, 542, 543, 541, 544, 545, 546, 1417,
	547, 548, 531, 532, 549, 550, 1169, 551, 552, 553,
	554, 555, 556, 652, 0, 557, 1418, 558, 559, 560,
	562, 533, 563, 568, 569, 653, 564, 565, 566, 567,
	654, 571, 572, 1419, 573, 574, 0, 570, 561, 1420,
	575, 576, 577, 578, 579, 580, 581, 354, 582, 1421,
	583, 655, 656, 657, 658, 1422, 592, 1423, 584, 585,
	586, 659, 587, 660, 1424, 588, 589, 590, 591, 0,
	593, 594, 1425, 1426, 595, 596, 597, 599, 600, 598,
	601, 1427, 602, 1428, 0, 603, 604, 605, 661, 662,
	663, 1429, 607, 606, 608, 664, 1430, 1431, 1432, 1433,
	1434, 609, 610, 665, 611, 612, 613, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1350, 0, 0, 0, 0, 0, 0, 0, 2617,
	0, 0, 0, 0, 0, 0, 0, 2618, 270, 272,
	271, 273, 274, 275, 276, 277, 1355, 278, 279, 1356,
	1357, 1358, 0, 1359, 614, 1360, 1361, 1362, 1363, 280,
	281, 1153, 282, 283, 284, 285, 286, 287, 615, 616,
	0, 288, 617, 289, 618, 1364, 619, 290, 291, 292,
	293, 294, 295, 1365, 1366, 0, 296, 620, 621, 622,
	1367, 297, 298, 623, 1368, 1297, 1369, 299, 300, 301,
	302, 303, 304, 305, 0, 1370, 307, 308, 309, 306,
	310, 1371, 311, 0, 312, 313, 314, 315, 316, 317,
	1372, 318, 319, 320, 1154, 321, 322, 323, 1373, 1374,
	1376, 1375, 1377, 1378, 1379, 324, 325, 326, 327, 328,
	0, 329, 624, 625, 1380, 333, 330, 331, 1381, 334,
	332, 335, 1382, 336, 337, 338, 1383, 1384, 339, 340,
	341, 1385, 342, 343, 1386, 344, 345, 346, 1387, 347,
	348, 626, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 627, 628, 360, 1388, 267, 1389, 0, 0,
	0, 0, 361, 362, 363, 629, 0, 0, 0, 364,
	1390, 365, 1391, 1392, 1155, 366, 367, 630, 631, 368,
	369, 370, 371, 372, 373, 374, 375, 376, 1393, 377,
	632, 1394, 633, 378, 1395, 379, 380, 381, 382, 383,
	634, 635, 636, 460, 1157, 384, 385, 1396, 386, 387,
	388, 389, 0, 0, 0, 268, 390, 391, 392, 394,
	1397, 1156, 393, 637, 638, 1398, 639, 1399, 395, 396,
	1158, 640, 1159, 397, 398, 399, 1160, 400, 0, 0,
	0, 401, 402, 403, 404, 405, 406, 1400, 407, 409,
	408, 1401, 410, 641, 1161, 411, 412, 1162, 1402, 413,
	0, 0, 0, 414, 415, 418, 1403, 1404, 416, 417,
	419, 420, 0, 421, 422, 424, 427, 423, 425, 426,
	428, 441, 429, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 443, 0, 442, 1163, 444, 445,
	446, 451, 453, 454, 449, 450, 452, 455, 456, 448,
	1164, 447, 1405, 269, 1165, 457, 458, 1406, 642, 459,
	643, 461, 462, 1407, 0, 463, 0, 1408, 1409, 465,
	466, 467, 1410, 1411, 468, 469, 644, 1166, 470, 1167,
	645, 471, 472, 464, 473, 474, 475, 476, 477, 478,
	479, 480, 1412, 481, 482, 646, 483, 484, 485, 647,
	486, 487, 488, 648, 489, 649, 490, 491, 1413, 492,
	493, 0, 494, 495, 496, 497, 498, 499, 500, 650,
	501, 503, 502, 504, 1414, 505, 0, 506, 507, 508,
	0, 0, 0, 0, 509, 0, 511, 512, 513, 514,
	510, 515, 516, 517, 518, 1415, 519, 520, 521, 1168,
	522, 523, 524, 525, 651, 526, 0, 527, 528, 534,
	535, 529, 530, 536, 537, 538, 539, 540, 1416, 542,
	543, 541, 544, 545, 546, 1417, 547, 548, 531, 532,
	549, 550, 1169, 551, 552, 553, 554, 555, 556, 652,
	0, 557, 1418, 558, 559, 560, 562, 533, 563, 568,
	569, 653, 564, 565, 566, 567, 654, 571, 572, 1419,
	573, 574, 0, 570, 561, 1420, 575, 576, 577, 578,
	579, 580, 581, 354, 582, 1421, 583, 655, 656, 657,
	658, 1422, 592, 1423, 584, 585, 586, 659, 587, 660,
	1424, 588, 589, 590, 591, 0, 593, 594, 1425, 1426,
	595, 596, 597, 599, 600, 598, 601, 1427, 602, 1428,
	0, 603, 604, 605, 661, 662, 663, 1429, 607, 606,
	608, 664, 1430, 1431, 1432, 1433, 1434, 609, 610, 665,
	611, 612, 613, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1350, 0, 0, 0, 0,
	3568, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3570, 270, 272, 271, 273, 274, 275, 276, 277,
	1355, 278, 279, 1356, 1357, 1358, 0, 1359, 614, 1360,
	1361, 1362, 1363, 280, 281, 1153, 282, 283, 284, 285,
	286, 287, 615, 616, 0, 288, 617, 289, 618, 1364,
	619, 290, 291, 292, 293, 294, 295, 1365, 1366, 0,
	296, 620, 621, 622, 1367, 297, 298, 623, 1368, 1297,
	1369, 299, 300, 301, 302, 303, 304, 305, 0, 1370,
	307, 308, 309, 306, 310, 1371, 311, 0, 312, 313,
	314, 315, 316, 317, 1372, 318, 319, 320, 1154, 321,
	322, 323, 1373, 1374, 1376, 1375, 1377, 1378, 1379, 324,
	325, 326, 327, 328, 0, 329, 624, 625, 1380, 333,
	330, 331, 1381, 334, 332, 335, 1382, 336, 337, 338,
	1383, 1384, 339, 340, 341, 1385, 342, 343, 1386, 344,
	345, 346, 1387, 347, 348, 626, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 627, 628, 360, 1388,
	267, 1389, 0, 0, 0, 0, 361, 362, 363, 629,
	0, 0, 0, 364, 1390, 365, 1391, 1392, 1155, 366,
	367, 630, 631, 368, 369, 370, 371, 372, 373, 374,
	375, 376, 1393, 377, 632, 1394, 633, 378, 1395, 379,
	380, 381, 382, 383, 634, 635, 636, 460, 1157, 384,
	385, 1396, 386, 387, 388, 389, 0, 0, 0, 268,
	390, 391, 392, 394, 1397, 1156, 393, 637, 638, 1398,
	639, 1399, 395, 396, 1158, 640, 1159, 397, 398, 399,
	1160, 400, 0, 0, 0, 401, 402, 403, 404, 405,
	406, 1400, 407, 409, 408, 1401, 410, 641, 1161, 411,
	412, 1162, 1402, 413, 0, 0, 0, 414, 415, 418,
	1403, 1404, 416, 417, 419, 420, 0, 421, 422, 424,
	427, 423, 425, 426, 428, 441, 429, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 443, 0,
	442, 1163, 444, 445, 446, 451, 453, 454, 449, 450,
	452, 455, 456, 448, 1164, 447, 1405, 269, 1165, 457,
	458, 1406, 642, 459, 643, 461, 462, 1407, 0, 463,
	0, 1408, 1409, 465, 466, 467, 1410, 1411, 468, 469,
	644, 1166, 470, 1167, 645, 471, 472, 464, 473, 474,
	475, 476, 477, 478, 479, 480, 1412, 481, 482, 646,
	483, 484, 485, 647, 486, 487, 488, 648, 489, 649,
	490, 491, 1413, 492, 493, 0, 494, 495, 496, 497,
	498, 499, 500, 650, 501, 503, 502, 504, 1414, 505,
	0, 506, 507, 508, 0, 0, 0, 0, 509, 0,
	511, 512, 513, 514, 510, 515, 516, 517, 518, 1415,
	519, 520, 521, 1168, 522, 523, 524, 525, 651, 526,
	0, 527, 528, 534, 535, 529, 530, 536, 537, 538,
	539, 540, 1416, 542, 543, 541, 544, 545, 546, 1417,
	547, 548, 531, 532, 549, 550, 1169, 551, 552, 553,
	554, 555, 556, 652, 0, 557, 1418, 558, 559, 560,
	562, 533, 563, 568, 569, 653, 564, 565, 566, 567,
	654, 571, 572, 1419, 573, 574, 0, 570, 561, 1420,
	575, 576, 577, 578, 579, 580, 581, 354, 582, 1421,
	583, 655, 656, 657, 658, 1422, 592, 1423, 584, 585,
	586, 659, 587, 660, 1424, 588, 589, 590, 591, 0,
	593, 594, 1425, 1426, 595, 596, 597, 599, 600, 598,
	601, 1427, 602, 1428, 0, 603, 604, 605, 661, 662,
	663, 1429, 607, 606, 608, 664, 1430, 1431, 1432, 1433,
	1434, 609, 610, 665, 611, 612, 613, 0, 0, 0,
	0, 0, 0, 1350, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3951,
	270, 272, 271, 273, 274, 275, 276, 277, 1355, 278,
	279, 1356, 1357, 1358, 0, 1359, 614, 1360, 1361, 1362,
	1363, 280, 281, 1153, 282, 283, 284, 285, 286, 287,
	615, 616, 0, 288, 617, 289, 618, 1364, 619, 290,
	291, 292, 293, 294, 295, 1365, 1366, 0, 296, 620,
	621, 622, 1367, 297, 298, 623, 1368, 1297, 1369, 299,
	300, 301, 302, 303, 304, 305, 0, 1370, 307, 308,
	309, 306, 310, 1371, 311, 0, 312, 313, 314, 315,
	316, 317, 1372, 318, 319, 320, 1154, 321, 322, 323,
	1373, 1374, 1376, 1375, 1377, 1378, 1379, 324, 325, 326,
	327, 328, 0, 329, 624, 625, 1380, 333, 330, 331,
	1381, 334, 332, 335, 1382, 336, 337, 338, 1383, 1384,
	339, 340, 341, 1385, 342, 343, 1386, 344, 345, 346,
	1387, 347, 348, 626, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 627, 628, 360, 1388, 267, 1389,
	0, 0, 0, 0, 361, 362, 363, 629, 0, 0,
	0, 364, 1390, 365, 1391, 1392, 1155, 366, 367, 630,
	631, 368, 369, 370, 371, 372, 373, 374, 375, 376,
	1393, 377, 632, 1394, 633, 378, 1395, 379, 380, 381,
	382, 383, 634, 635, 636, 460, 1157, 384, 385, 1396,
	386, 387, 388, 389, 0, 0, 0, 268, 390, 391,
	392, 394, 1397, 1156, 393, 637, 638, 1398, 639, 1399,
	395, 396, 1158, 640, 1159, 397, 398, 399, 1160, 400,
	0, 0, 0, 401, 402, 403, 404, 405, 406, 1400,
	407, 409, 408, 1401, 410, 641, 1161, 411, 412, 1162,
	1402, 413, 0, 0, 0, 414, 415, 418, 1403, 1404,
	416, 417, 419, 420, 0, 421, 422, 424, 427, 423,
	425, 426, 428, 441, 429, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 443, 0, 442, 1163,
	444, 445, 446, 451, 453, 454, 449, 450, 452, 455,
	456, 448, 1164, 447, 1405, 269, 1165, 457, 458, 1406,
	642, 459, 643, 461, 462, 1407, 0, 463, 0, 1408,
	1409, 465, 466, 467, 1410, 1411, 468, 469, 644, 1166,
	470, 1167, 645, 471, 472, 464, 473, 474, 475, 476,
	477, 478, 479, 480, 1412, 481, 482, 646, 483, 484,
	485, 647, 486, 487, 488, 648, 489, 649, 490, 491,
	1413, 492, 493, 0, 494, 495, 496, 497, 498, 499,
	500, 650, 501, 503, 502, 504, 1414, 505, 0, 506,
	507, 508, 0, 0, 0, 0, 509, 0, 511, 512,
	513, 514, 510, 515, 516, 517, 518, 1415, 519, 520,
	521, 1168, 522, 523, 524, 525, 651, 526, 0, 527,
	528, 534, 535, 529, 530, 536, 537, 538, 539, 540,
	1416, 542, 543, 541, 544, 545, 546, 1417, 547, 548,
	531, 532, 549, 550, 1169, 551, 552, 553, 554, 555,
	556, 652, 0, 557, 1418, 558, 559, 560, 562, 533,
	563, 568, 569, 653, 564, 565, 566, 567, 654, 571,
	572, 1419, 573, 574, 0, 570, 561, 1420, 575, 576,
	577, 578, 579, 580, 581, 354, 582, 1421, 583, 655,
	656, 657, 658, 1422, 592, 1423, 584, 585, 586, 659,
	587, 660, 1424, 588, 589, 590, 591, 0, 593, 594,
	1425, 1426, 595, 596, 597, 599, 600, 598, 601, 1427,
	602, 1428, 0, 603, 604, 605, 661, 662, 663, 1429,
	607, 606, 608, 664, 1430, 1431, 1432, 1433, 1434, 609,
	610, 665, 611, 612, 613, 0, 1350, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4148, 270, 272, 271, 273, 274, 275, 276,
	277, 1355, 278, 279, 1356, 1357, 1358, 0, 1359, 614,
	1360, 1361, 1362, 1363, 280, 281, 1153, 282, 283, 284,
	285, 286, 287, 615, 616, 0, 288, 617, 289, 618,
	1364, 619, 290, 291, 292, 293, 294, 295, 1365, 1366,
	0, 296, 620, 621, 622, 1367, 297, 298, 623, 1368,
	1297, 1369, 299, 300, 301, 302, 303, 304, 305, 0,
	1370, 307, 308, 309, 306, 310, 1371, 311, 0, 312,
	313, 314, 315, 316, 317, 1372, 318, 319, 320, 1154,
	321, 322, 323, 1373, 1374, 1376, 1375, 1377, 1378, 1379,
	324, 325, 326, 327, 328, 0, 329, 624, 625, 1380,
	333, 330, 331, 1381, 334, 332, 335, 1382, 336, 337,
	338, 1383, 1384, 339, 340, 341, 1385, 342, 343, 1386,
	344, 345, 346, 1387, 347, 348, 626, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 627, 628, 360,
	1388, 267, 1389, 0, 0, 0, 0, 361, 362, 363,
	629, 0, 0, 0, 364, 1390, 365, 1391, 1392, 1155,
	366, 367, 630, 631, 368, 369, 370, 371, 372, 373,
	374, 375, 376, 1393, 377, 632, 1394, 633, 378, 1395,
	379, 380, 381, 382, 383, 634, 635, 636, 460, 1157,
	384, 385, 1396, 386, 387, 388, 389, 0, 0, 0,
	268, 390, 391, 392, 394, 1397, 1156, 393, 637, 638,
	1398, 639, 1399, 395, 396, 1158, 640, 1159, 397, 398,
	399, 1160, 400, 0, 0, 0, 401, 402, 403, 404,
	405, 406, 1400, 407, 409, 408, 1401, 410, 641, 1161,
	411, 412, 1162, 1402, 413, 0, 0, 0, 414, 415,
	418, 1403, 1404, 416, 417, 419, 420, 0, 421, 422,
	424, 427, 423, 425, 426, 428, 441, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 443,
	0, 442, 1163, 444, 445, 446, 451, 453, 454, 449,
	450, 452, 455, 456, 448, 1164, 447, 1405, 269, 1165,
	457, 458, 1406, 642, 459, 643, 461, 462, 1407, 0,
	463, 0, 1408, 1409, 465, 466, 467, 1410, 1411, 468,
	469, 644, 1166, 470, 1167, 645, 471, 472, 464, 473,
	474, 475, 476, 477, 478, 479, 480, 1412, 481, 482,
	646, 483, 484, 485, 647, 486, 487, 488, 648, 489,
	649, 490, 491, 1413, 492, 493, 0, 494, 495, 496,
	497, 498, 499, 500, 650, 501, 503, 502, 504, 1414,
	505, 0, 506, 507, 508, 0, 0, 0, 0, 509,
	0, 511, 512, 513, 514, 510, 515, 516, 517, 518,
	1415, 519, 520, 521, 1168, 522, 523, 524, 525, 651,
	526, 0, 527, 528, 534, 535, 529, 530, 536, 537,
	538, 539, 540, 1416, 542, 543, 541, 544, 545, 546,
	1417, 547, 548, 531, 532, 549, 550, 1169, 551, 552,
	553, 554, 555, 556, 652, 0, 557, 1418, 558, 559,
	560, 562, 533, 563, 568, 569, 653, 564, 565, 566,
	567, 654, 571, 572, 1419, 573, 574, 0, 570, 561,
	1420, 575, 576, 577, 578, 579, 580, 581, 354, 582,
	1421, 583, 655, 656, 657, 658, 1422, 592, 1423, 584,
	585, 586, 659, 587, 660, 1424, 588, 589, 590, 591,
	0, 593, 594, 1425, 1426, 595, 596, 597, 599, 600,
	598, 601, 1427, 602, 1428, 0, 603, 604, 605, 661,
	662, 663, 1429, 607, 606, 608, 664, 1430, 1431, 1432,
	1433, 1434, 609, 610, 665, 611, 612, 613, 0, 1350,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4026, 270, 272, 271, 273,
	274, 275, 276, 277, 1355, 278, 279, 1356, 1357, 1358,
	0, 1359, 614, 1360, 1361, 1362, 1363, 280, 281, 1153,
	282, 283, 284, 285, 286, 287, 615, 616, 0, 288,
	617, 289, 618, 1364, 619, 290, 291, 292, 293, 294,
	295, 1365, 1366, 0, 296, 620, 621, 622, 1367, 297,
	298, 623, 1368, 1297, 1369, 299, 300, 301, 302, 303,
	304, 305, 0, 1370, 307, 308, 309, 306, 310, 1371,
	311, 0, 312, 313, 314, 315, 316, 317, 1372, 318,
	319, 320, 1154, 321, 322, 323, 1373, 1374, 1376, 1375,
	1377, 1378, 1379, 324, 325, 326, 327, 328, 0, 329,
	624, 625, 1380, 333, 330, 331, 1381, 334, 332, 335,
	1382, 336, 337, 338, 1383, 1384, 339, 340, 341, 1385,
	342, 343, 1386, 344, 345, 346, 1387, 347, 348, 626,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	627, 628, 360, 1388, 267, 1389, 0, 0, 0, 0,
	361, 362, 363, 629, 0, 0, 0, 364, 1390, 365,
	1391, 1392, 1155, 366, 367, 630, 631, 368, 369, 370,
	371, 372, 373, 374, 375, 376, 1393, 377, 632, 1394,
	633, 378, 1395, 379, 380, 381, 382, 383, 634, 635,
	636, 460, 1157, 384, 385, 1396, 386, 387, 388, 389,
	0, 0, 0, 268, 390, 391, 392, 394, 1397, 1156,
	393, 637, 638, 1398, 639, 1399, 395, 396, 1158, 640,
	1159, 397, 398, 399, 1160, 400, 0, 0, 0, 401,
	402, 403, 404, 405, 406, 1400, 407, 409, 408, 1401,
	410, 641, 1161, 411, 412, 1162, 1402, 413, 0, 0,
	0, 414, 415, 418, 1403, 1404, 416, 417, 419, 420,
	0, 421, 422, 424, 427, 423, 425, 426, 428, 441,
	429, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 443, 0, 442, 1163, 444, 445, 446, 451,
	453, 454, 449, 450, 452, 455, 456, 448, 1164, 447,
	1405, 269, 1165, 457, 458, 1406, 642, 459, 643, 461,
	462, 1407, 0, 463, 0, 1408, 1409, 465, 466, 467,
	1410, 1411, 468, 469, 644, 1166, 470, 1167, 645, 471,
	472, 464, 473, 474, 475, 476, 477, 478, 479, 480,
	1412, 481, 482, 646, 483, 484, 485, 647, 486, 487,
	488, 648, 489, 649, 490, 491, 1413, 492, 493, 0,
	494, 495, 496, 497, 498, 499, 500, 650, 501, 503,
	502, 504, 1414, 505, 0, 506, 507, 508, 0, 0,
	0, 0, 509, 0, 511, 512, 513, 514, 510, 515,
	516, 517, 518, 1415, 519, 520, 521, 1168, 522, 523,
	524, 525, 651, 526, 0, 527, 528, 534, 535, 529,
	530, 536, 537, 538, 539, 540, 1416, 542, 543, 541,
	544, 545, 546, 1417, 547, 548, 531, 532, 549, 550,
	1169, 551, 552, 553, 554, 555, 556, 652, 0, 557,
	1418, 558, 559, 560, 562, 533, 563, 568, 569, 653,
	564, 565, 566, 567, 654, 571, 572, 1419, 573, 574,
	0, 570, 561, 1420, 575, 576, 577, 578, 579, 580,
	581, 354, 582, 1421, 583, 655, 656, 657, 658, 1422,
	592, 1423, 584, 585, 586, 659, 587, 660, 1424, 588,
	589, 590, 591, 0, 593, 594, 1425, 1426, 595, 596,
	597, 599, 600, 598, 601, 1427, 602, 1428, 0, 603,
	604, 605, 661, 662, 663, 1429, 607, 606, 608, 664,
	1430, 1431, 1432, 1433, 1434, 609, 610, 665, 611, 612,
	613, 0, 1350, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3881, 270,
	272, 271, 273, 274, 275, 276, 277, 1355, 278, 279,
	1356, 1357, 1358, 0, 1359, 614, 1360, 1361, 1362, 1363,
	280, 281, 1153, 282, 283, 284, 285, 286, 287, 615,
	616, 0, 288, 617, 289, 618, 1364, 619, 290, 291,
	292, 293, 294, 295, 1365, 1366, 0, 296, 620, 621,
	622, 1367, 297, 298, 623, 1368, 1297, 1369, 299, 300,
	301, 302, 303, 304, 305, 0, 1370, 307, 308, 309,
	306, 310, 1371, 311, 0, 312, 313, 314, 315, 316,
	317, 1372, 318, 319, 320, 1154, 321, 322, 323, 1373,
	1374, 1376, 1375, 1377, 1378, 1379, 324, 325, 326, 327,
	328, 0, 329, 624, 625, 1380, 333, 330, 331, 1381,
	334, 332, 335, 1382, 336, 337, 338, 1383, 1384, 339,
	340, 341, 1385, 342, 343, 1386, 344, 345, 346, 1387,
	347, 348, 626, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 627, 628, 360, 1388, 267, 1389, 0,
	0, 0, 0, 361, 362, 363, 629, 0, 0, 0,
	364, 1390, 365, 1391, 1392, 1155, 366, 367, 630, 631,
	368, 369, 370, 371, 372, 373, 374, 375, 376, 1393,
	377, 632, 1394, 633, 378, 1395, 379, 380, 381, 382,
	383, 634, 635, 636, 460, 1157, 384, 385, 1396, 386,
	387, 388, 389, 0, 0, 0, 268, 390, 391, 392,
	394, 1397, 1156, 393, 637, 638, 1398, 639, 1399, 395,
	396, 1158, 640, 1159, 397, 398, 399, 1160, 400, 0,
	0, 0, 401, 402, 403, 404, 405, 406, 1400, 407,
	409, 408, 1401, 410, 641, 1161, 411, 412, 1162, 1402,
	413, 0, 0, 0, 414, 415, 418, 1403, 1404, 416,
	417, 419, 420, 0, 421, 422, 424, 427, 423, 425,
	426, 428, 441, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 443, 0, 442, 1163, 444,
	445, 446, 451, 453, 454, 449, 450, 452, 455, 456,
	448, 1164, 447, 1405, 269, 1165, 457, 458, 1406, 642,
	459, 643, 461, 462, 1407, 0, 463, 0, 1408, 1409,
	465, 466, 467, 1410, 1411, 468, 469, 644, 1166, 470,
	1167, 645, 471, 472, 464, 473, 474, 475, 476, 477,
	478, 479, 480, 1412, 481, 482, 646, 483, 484, 485,
	647, 486, 487, 488, 648, 489, 649, 490, 491, 1413,
	492, 493, 0, 494, 495, 496, 497, 498, 499, 500,
	650, 501, 503, 502, 504, 1414, 505, 0, 506, 507,
	508, 0, 0, 0, 0, 509, 0, 511, 512, 513,
	514, 510, 515, 516, 517, 518, 1415, 519, 520, 521,
	1168, 522, 523, 524, 525, 651, 526, 0, 527, 528,
	534, 535, 529, 530, 536, 537, 538, 539, 540, 1416,
	542, 543, 541, 544, 545, 546, 1417, 547, 548, 531,
	532, 549, 550, 1169, 551, 552, 553, 554, 555, 556,
	652, 0, 557, 1418, 558, 559, 560, 562, 533, 563,
	568, 569, 653, 564, 565, 566, 567, 654, 571, 572,
	1419, 573, 574, 0, 570, 561, 1420, 575, 576, 577,
	578, 579, 580, 581, 354, 582, 1421, 583, 655, 656,
	657, 658, 1422, 592, 1423, 584, 585, 586, 659, 587,
	660, 1424, 588, 589, 590, 591, 0, 593, 594, 1425,
	1426, 595, 596, 597, 599, 600, 598, 601, 1427, 602,
	1428, 0, 603, 604, 605, 661, 662, 663, 1429, 607,
	606, 608, 664, 1430, 1431, 1432, 1433, 1434, 609, 610,
	665, 611, 612, 613, 0, 1350, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3586, 270, 272, 271, 273, 274, 275, 276, 277,
	1355, 278, 279, 1356, 1357, 1358, 0, 1359, 614, 1360,
	1361, 1362, 1363, 280, 281, 1153, 282, 283, 284, 285,
	286, 287, 615, 616, 0, 288, 617, 289, 618, 1364,
	619, 290, 291, 292, 293, 294, 295, 1365, 1366, 0,
	296, 620, 621, 622, 1367, 297, 298, 623, 1368, 1297,
	1369, 299, 300, 301, 302, 303, 304, 305, 0, 1370,
	307, 308, 309, 306, 310, 1371, 311, 0, 312, 313,
	314, 315, 316, 317, 1372, 318, 319, 320, 1154, 321,
	322, 323, 1373, 1374, 1376, 1375, 1377, 1378, 1379, 324,
	325, 326, 327, 328, 0, 329, 624, 625, 1380, 333,
	330, 331, 1381, 334, 332, 335, 1382, 336, 337, 338,
	1383, 1384, 339, 340, 341, 1385, 342, 343, 1386, 344,
	345, 346, 1387, 347, 348, 626, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 627, 628, 360, 1388,
	267, 1389, 0, 0, 0, 0, 361, 362, 363, 629,
	0, 0, 0, 364, 1390, 365, 1391, 1392, 1155, 366,
	367, 630, 631, 368, 369, 370, 371, 372, 373, 374,
	375, 376, 1393, 377, 632, 1394, 633, 378, 1395, 379,
	380, 381, 382, 383, 634, 635, 636, 460, 1157, 384,
	385, 1396, 386, 387, 388, 389, 0, 0, 0, 268,
	390, 391, 392, 394, 1397, 1156, 393, 637, 638, 1398,
	639, 1399, 395, 396, 1158, 640, 1159, 397, 398, 399,
	1160, 400, 0, 0, 0, 401, 402, 403, 404, 405,
	406, 1400, 407, 409, 408, 1401, 410, 641, 1161, 411,
	412, 1162, 1402, 413, 0, 0, 0, 414, 415, 418,
	1403, 1404, 416, 417, 419, 420, 0, 421, 422, 424,
	427, 423, 425, 426, 428, 441, 429, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 443, 0,
	442, 1163, 444, 445, 446, 451, 453, 454, 449, 450,
	452, 455, 456, 448, 1164, 447, 1405, 269, 1165, 457,
	458, 1406, 642, 459, 643, 461, 462, 1407, 0, 463,
	0, 1408, 1409, 465, 466, 467, 1410, 1411, 468, 469,
	644, 1166, 470, 1167, 645, 471, 472, 464, 473, 474,
	475, 476, 477, 478, 479, 480, 1412, 481, 482, 646,
	483, 484, 485, 647, 486, 487, 488, 648, 489, 649,
	490, 491, 1413, 492, 493, 0, 494, 495, 496, 497,
	498, 499, 500, 650, 501, 503, 502, 504, 1414, 505,
	0, 506, 507, 508, 0, 0, 0, 0, 509, 0,
	511, 512, 513, 514, 510, 515, 516, 517, 518, 1415,
	519, 520, 521, 1168, 522, 523, 524, 525, 651, 526,
	0, 527, 528, 534, 535, 529, 530, 536, 537, 538,
	539, 540, 1416, 542, 543, 541, 544, 545, 546, 1417,
	547, 548, 531, 532, 549, 550, 1169, 551, 552, 553,
	554, 555, 556, 652, 0, 557, 1418, 558, 559, 560,
	562, 533, 563, 568, 569, 653, 564, 565, 566, 567,
	654, 571, 572, 1419, 573, 574, 0, 570, 561, 1420,
	575, 576, 577, 578, 579, 580, 581, 354, 582, 1421,
	583, 655, 656, 657, 658, 1422, 592, 1423, 584, 585,
	586, 659, 587, 660, 1424, 588, 589, 590, 591, 0,
	593, 594, 1425, 1426, 595, 596, 597, 599, 600, 598,
	601, 1427, 602, 1428, 0, 603, 604, 605, 661, 662,
	663, 1429, 607, 606, 608, 664, 1430, 1431, 1432, 1433,
	1434, 609, 610, 665, 611, 612, 613, 0, 1350, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3417, 270, 272, 271, 273, 274,
	275, 276, 277, 1355, 278, 279, 1356, 1357, 1358, 0,
	1359, 614, 1360, 1361, 1362, 1363, 280, 281, 1153, 282,
	283, 284, 285, 286, 287, 615, 616, 0, 288, 617,
	289, 618, 1364, 619, 290, 291, 292, 293, 294, 295,
	1365, 1366, 0, 296, 620, 621, 622, 1367, 297, 298,
	623, 1368, 1297, 1369, 299, 300, 301, 302, 303, 304,
	305, 0, 1370, 307, 308, 309, 306, 310, 1371, 311,
	0, 312, 313, 314, 315, 316, 317, 1372, 318, 319,
	320, 1154, 321, 322, 323, 1373, 1374, 1376, 1375, 1377,
	1378, 1379, 324, 325, 326, 327, 328, 0, 329, 624,
	625, 1380, 333, 330, 331, 1381, 334, 332, 335, 1382,
	336, 337, 338, 1383, 1384, 339, 340, 341, 1385, 342,
	343, 1386, 344, 345, 346, 1387, 347, 348, 626, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 627,
	628, 360, 1388, 267, 1389, 0, 0, 0, 0, 361,
	362, 363, 629, 0, 0, 0, 364, 1390, 365, 1391,
	1392, 1155, 366, 367, 630, 631, 368, 369, 370, 371,
	372, 373, 374, 375, 376, 1393, 377, 632, 1394, 633,
	378, 1395, 379, 380, 381, 382, 383, 634, 635, 636,
	460, 1157, 384, 385, 1396, 386, 387, 388, 389, 0,
	0, 0, 268, 390, 391, 392, 394, 1397, 1156, 393,
	637, 638, 1398, 639, 1399, 395, 396, 1158, 640, 1159,
	397, 398, 399, 1160, 400, 0, 0, 0, 401, 402,
	403, 404, 405, 406, 1400, 407, 409, 408, 1401, 410,
	641, 1161, 411, 412, 1162, 1402, 413, 0, 0, 0,
	414, 415, 418, 1403, 1404, 416, 417, 419, 420, 0,
	421, 422, 424, 427, 423, 425, 426, 428, 441, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 443, 0, 442, 1163, 444, 445, 446, 451, 453,
	454, 449, 450, 452, 455, 456, 448, 1164, 447, 1405,
	269, 1165, 457, 458, 1406, 642, 459, 643, 461, 462,
	1407, 0, 463, 0, 1408, 1409, 465, 466, 467, 1410,
	1411, 468, 469, 644, 1166, 470, 1167, 645, 471, 472,
	464, 473, 474, 475, 476, 477, 478, 479, 480, 1412,
	481, 482, 646, 483, 484, 485, 647, 486, 487, 488,
	648, 489, 649, 490, 491, 1413, 492, 493, 0, 494,
	495, 496, 497, 498, 499, 500, 650, 501, 503, 502,
	504, 1414, 505, 0, 506, 507, 508, 0, 0, 0,
	0, 509, 0, 511, 512, 513, 514, 510, 515, 516,
	517, 518, 1415, 519, 520, 521, 1168, 522, 523, 524,
	525, 651, 526, 0, 527, 528, 534, 535, 529, 530,
	536, 537, 538, 539, 540, 1416, 542, 543, 541, 544,
	545, 546, 1417, 547, 548, 531, 532, 549, 550, 1169,
	551, 552, 553, 554, 555, 556, 652, 0, 557, 1418,
	558, 559, 560, 562, 533, 563, 568, 569, 653, 564,
	565, 566, 567, 654, 571, 572, 1419, 573, 574, 0,
	570, 561, 1420, 575, 576, 577, 578, 579, 580, 581,
	354, 582, 1421, 583, 655, 656, 657, 658, 1422, 592,
	1423, 584, 585, 586, 659, 587, 660, 1424, 588, 589,
	590, 591, 0, 593, 594, 1425, 1426, 595, 596, 597,
	599, 600, 598, 601, 1427, 602, 1428, 0, 603, 604,
	605, 661, 662, 663, 1429, 607, 606, 608, 664, 1430,
	1431, 1432, 1433, 1434, 609, 610, 665, 611, 612, 613,
	0, 1350, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2475, 270, 272,
	271, 273, 274, 275, 276, 277, 1355, 278, 279, 1356,
	1357, 1358, 0, 1359, 614, 1360, 1361, 1362, 1363, 280,
	281, 1153, 282, 283, 284, 285, 286, 287, 615, 616,
	0, 288, 617, 289, 618, 1364, 619, 290, 291, 292,
	293, 294, 295, 1365, 1366, 0, 296, 620, 621, 622,
	1367, 297, 298, 623, 1368, 1297, 1369, 299, 300, 301,
	302, 303, 304, 305, 0, 1370, 307, 308, 309, 306,
	310, 1371, 311, 0, 312, 313, 314, 315, 316, 317,
	1372, 318, 319, 320, 1154, 321, 322, 323, 1373, 1374,
	1376, 1375, 1377, 1378, 1379, 324, 325, 326, 327, 328,
	0, 329, 624, 625, 1380, 333, 330, 331, 1381, 334,
	332, 335, 1382, 336, 337, 338, 1383, 1384, 339, 340,
	341, 1385, 342, 343, 1386, 344, 345, 346, 1387, 347,
	348, 626, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 627, 628, 360, 1388, 267, 1389, 0, 0,
	0, 0, 361, 362, 363, 629, 0, 0, 0, 364,
	1390, 365, 1391, 1392, 1155, 366, 367, 630, 631, 368,
	369, 370, 371, 372, 373, 374, 375, 376, 1393, 377,
	632, 1394, 633, 378, 1395, 379, 380, 381, 382, 383,
	634, 635, 636, 460, 1157, 384, 385, 1396, 386, 387,
	388, 389, 0, 0, 0, 268, 390, 391, 392, 394,
	1397, 1156, 393, 637, 638, 1398, 639, 1399, 395, 396,
	1158, 640, 1159, 397, 398, 399, 1160, 400, 0, 0,
	0, 401, 402, 403, 404, 405, 406, 1400, 407, 409,
	408, 1401, 410, 641, 1161, 411, 412, 1162, 1402, 413,
	0, 0, 0, 414, 415, 418, 1403, 1404, 416, 417,
	419, 420, 0, 421, 422, 424, 427, 423, 425, 426,
	428, 441, 429, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 443, 0, 442, 1163, 444, 445,
	446, 451, 453, 454, 449, 450, 452, 455, 456, 448,
	1164, 447, 1405, 269, 1165, 457, 458, 1406, 642, 459,
	643, 461, 462, 1407, 0, 463, 0, 1408, 1409, 465,
	466, 467, 1410, 1411, 468, 469, 644, 1166, 470, 1167,
	645, 471, 472, 464, 473, 474, 475, 476, 477, 478,
	479, 480, 1412, 481, 482, 646, 483, 484, 485, 647,
	486, 487, 488, 648, 489, 649, 490, 491, 1413, 492,
	493, 0, 494, 495, 496, 497, 498, 499, 500, 650,
	501, 503, 502, 504, 1414, 505, 0, 506, 507, 508,
	0, 0, 0, 0, 509, 0, 511, 512, 513, 514,
	510, 515, 516, 517, 518, 1415, 519, 520, 521, 1168,
	522, 523, 524, 525, 651, 526, 0, 527, 528, 534,
	535, 529, 530, 536, 537, 538, 539, 540, 1416, 542,
	543, 541, 544, 545, 546, 1417, 547, 548, 531, 532,
	549, 550, 1169, 551, 552, 553, 554, 555, 556, 652,
	0, 557, 1418, 558, 559, 560, 562, 533, 563, 568,
	569, 653, 564, 565, 566, 567, 654, 571, 572, 1419,
	573, 574, 0, 570, 561, 1420, 575, 576, 577, 578,
	579, 580, 581, 354, 582, 1421, 583, 655, 656, 657,
	658, 1422, 592, 1423, 584, 585, 586, 659, 587, 660,
	1424, 588, 589, 590, 591, 0, 593, 594, 1425, 1426,
	595, 596, 597, 599, 600, 598, 601, 1427, 602, 1428,
	0, 603, 604, 605, 661, 662, 663, 1429, 607, 606,
	608, 664, 1430, 1431, 1432, 1433, 1434, 609, 610, 665,
	611, 612, 613, 1446, 0, 1350, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2164, 0, 270, 272, 271, 273, 274, 275, 276, 277,
	1355, 278, 279, 1356, 1357, 1358, 0, 1359, 614, 1360,
	1361, 1362, 1363, 280, 281, 1153, 282, 283, 284, 285,
	286, 287, 615, 616, 0, 288, 617, 289, 618, 1364,
	619, 290, 291, 292, 293, 294, 295, 1365, 1366, 0,
	296, 620, 621, 622, 1367, 297, 298, 623, 1368, 1297,
	1369, 299, 300, 301, 302, 303, 304, 305, 0, 1370,
	307, 308, 309, 306, 310, 1371, 311, 0, 312, 313,
	314, 315, 316, 317, 1372, 318, 319, 320, 1154, 321,
	322, 323, 1373, 1374, 1376, 1375, 1377, 1378, 1379, 324,
	325, 326, 327, 328, 0, 329, 624, 625, 1380, 333,
	330, 331, 1381, 334, 332, 335, 1382, 336, 337, 338,
	1383, 1384, 339, 340, 341, 1385, 342, 343, 1386, 344,
	345, 346, 1387, 347, 348, 626, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 627, 628, 360, 1388,
	267, 1389, 0, 0, 0, 0, 361, 362, 363, 629,
	0, 0, 0, 364, 1390, 365, 1391, 1392, 1155, 366,
	367, 630, 631, 368, 369, 370, 371, 372, 373, 374,
	375, 376, 1393, 377, 632, 1394, 633, 378, 1395, 379,
	380, 381, 382, 383, 634, 635, 636, 460, 1157, 384,
	385, 1396, 386, 387, 388, 389, 0, 0, 0, 268,
	390, 391, 392, 394, 1397, 1156, 393, 637, 638, 1398,
	639, 1399, 395, 396, 1158, 640, 1159, 397, 398, 399,
	1160, 400, 0, 0, 0, 401, 402, 403, 404, 405,
	406, 1400, 407, 409, 408, 1401, 410, 641, 1161, 411,
	412, 1162, 1402, 413, 0, 0, 0, 414, 415, 418,
	1403, 1404, 416, 417, 419, 420, 0, 421, 422, 424,
	427, 423, 425, 426, 428, 441, 429, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 443, 0,
	442, 1163, 444, 445, 446, 451, 453, 454, 449, 450,
	452, 455, 456, 448, 1164, 447, 1405, 269, 1165, 457,
	458, 1406, 642, 459, 643, 461, 462, 1407, 0, 463,
	0, 1408, 1409, 465, 466, 467, 1410, 1411, 468, 469,
	644, 1166, 470, 1167, 645, 471, 472, 464, 473, 474,
	475, 476, 477, 478, 479, 480, 1412, 481, 482, 646,
	483, 484, 485, 647, 486, 487, 488, 648, 489, 649,
	490, 491, 1413, 492, 493, 0, 494, 495, 496, 497,
	498, 499, 500, 650, 501, 503, 502, 504, 1414, 505,
	0, 506, 507, 508, 0, 0, 0, 0, 509, 0,
	511, 512, 513, 514, 510, 515, 516, 517, 518, 1415,
	519, 520, 521, 1168, 522, 523, 524, 525, 651, 526,
	0, 527, 528, 534, 535, 529, 530, 536, 537, 538,
	539, 540, 1416, 542, 543, 541, 544, 545, 546, 1417,
	547, 548, 531, 532, 549, 550, 1169, 551, 552, 553,
	554, 555, 556, 652, 0, 557, 1418, 558, 559, 560,
	562, 533, 563, 568, 569, 653, 564, 565, 566, 567,
	654, 571, 572, 1419, 573, 574, 0, 570, 561, 1420,
	575, 576, 577, 578, 579, 580, 581, 354, 582, 1421,
	583, 655, 656, 657, 658, 1422, 592, 1423, 584, 585,
	586, 659, 587, 660, 1424, 588, 589, 590, 591, 0,
	593, 594, 1425, 1426, 595, 596, 597, 599, 600, 598,
	601, 1427, 602, 1428, 0, 603, 604, 605, 661, 662,
	663, 1429, 607, 606, 608, 664, 1430, 1431, 1432, 1433,
	1434, 609, 610, 665, 611, 612, 613, 1347, 0, 1350,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 272, 271, 273,
	274, 275, 276, 277, 1355, 278, 279, 1356, 1357, 1358,
	0, 1359, 614, 1360, 1361, 1362, 1363, 280, 281, 1153,
	282, 283, 284, 285, 286, 287, 615, 616, 0, 288,
	617, 289, 618, 1364, 619, 290, 291, 292, 293, 294,
	295, 1365, 1366, 0, 296, 620, 621, 622, 1367, 297,
	298, 623, 1368, 1297, 1369, 299, 300, 301, 302, 303,
	304, 305, 0, 1370, 307, 308, 309, 306, 310, 1371,
	311, 0, 312, 313, 314, 315, 316, 317, 1372, 318,
	319, 320, 1154, 321, 322, 323, 1373, 1374, 1376, 1375,
	1377, 1378, 1379, 324, 325, 326, 327, 328, 0, 329,
	624, 625, 1380, 333, 330, 331, 1381, 334, 332, 335,
	1382, 336, 337, 338, 1383, 1384, 339, 340, 341, 1385,
	342, 343, 1386, 344, 345, 346, 1387, 347, 348, 626,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	627, 628, 360, 1388, 267, 1389, 0, 0, 0, 0,
	361, 362, 363, 629, 0, 0, 0, 364, 1390, 365,
	1391, 1392, 1155, 366, 367, 630, 631, 368, 369, 370,
	371, 372, 373, 374, 375, 376, 1393, 377, 632, 1394,
	633, 378, 1395, 379, 380, 381, 382, 383, 634, 635,
	636, 460, 1157, 384, 385, 1396, 386, 387, 388, 389,
	0, 0, 0, 268, 390, 391, 392, 394, 1397, 1156,
	393, 637, 638, 1398, 639, 1399, 395, 396, 1158, 640,
	1159, 397, 398, 399, 1160, 400, 0, 0, 0, 401,
	402, 403, 404, 405, 406, 1400, 407, 409, 408, 1401,
	410, 641, 1161, 411, 412, 1162, 1402, 413, 0, 0,
	0, 414, 415, 418, 1403, 1404, 416, 417, 419, 420,
	0, 421, 422, 424, 427, 423, 425, 426, 428, 441,
	429, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 443, 0, 442, 1163, 444, 445, 446, 451,
	453, 454, 449, 450, 452, 455, 456, 448, 1164, 447,
	1405, 269, 1165, 457, 458, 1406, 642, 459, 643, 461,
	462, 1407, 0, 463, 0, 1408, 1409, 465, 466, 467,
	1410, 1411, 468, 469, 644, 1166, 470, 1167, 645, 471,
	472, 464, 473, 474, 475, 476, 477, 478, 479, 480,
	1412, 481, 482, 646, 483, 484, 485, 647, 486, 487,
	488, 648, 489, 649, 490, 491, 1413, 492, 493, 0,
	494, 495, 496, 497, 498, 499, 500, 650, 501, 503,
	502, 504, 1414, 505, 0, 506, 507, 508, 0, 0,
	0, 0, 509, 0, 511, 512, 513, 514, 510, 515,
	516, 517, 518, 1415, 519, 520, 521, 1168, 522, 523,
	524, 525, 651, 526, 0, 527, 528, 534, 535, 529,
	530, 536, 537, 538, 539, 540, 1416, 542, 543, 541,
	544, 545, 546, 1417, 547, 548, 531, 532, 549, 550,
	1169, 551, 552, 553, 554, 555, 556, 652, 0, 557,
	1418, 558, 559, 560, 562, 533, 563, 568, 569, 653,
	564, 565, 566, 567, 654, 571, 572, 1419, 573, 574,
	0, 570, 561, 1420, 575, 576, 577, 578, 579, 580,
	581, 354, 582, 1421, 583, 655, 656, 657, 658, 1422,
	592, 1423, 584, 585, 586, 659, 587, 660, 1424, 588,
	589, 590, 591, 0, 593, 594, 1425, 1426, 595, 596,
	597, 599, 600, 598, 601, 1427, 602, 1428, 0, 603,
	604, 605, 661, 662, 663, 1429, 607, 606, 608, 664,
	1430, 1431, 1432, 1433, 1434, 609, 610, 665, 611, 612,
	613, 1350, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 270, 272,
	271, 273, 274, 275, 276, 277, 1355, 278, 279, 1356,
	1357, 1358, 0, 1359, 614, 1360, 1361, 1362, 1363, 280,
	281, 1153, 282, 283, 284, 285, 286, 287, 615, 616,
	0, 288, 617, 289, 618, 1364, 619, 290, 291, 292,
	293, 294, 295, 1365, 1366, 0, 296, 620, 621, 622,
	1367, 297, 298, 623, 1368, 1297, 1369, 299, 300, 301,
	302, 303, 304, 305, 0, 1370, 307, 308, 309, 306,
	310, 1371, 311, 0, 312, 313, 314, 315, 316, 317,
	1372, 318, 319, 320, 1154, 321, 322, 323, 1373, 1374,
	1376, 1375, 1377, 1378, 1379, 324, 325, 326, 327, 328,
	0, 329, 624, 625, 1380, 333, 330, 331, 1381, 334,
	332, 335, 1382, 336, 337, 338, 1383, 1384, 339, 340,
	341, 1385, 342, 343, 1386, 344, 345, 346, 1387, 347,
	348, 626, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 627, 628, 360, 1388, 267, 1389, 0, 0,
	0, 0, 361, 362, 363, 629, 0, 0, 0, 364,
	1390, 365, 1391, 1392, 1155, 366, 367, 630, 631, 368,
	369, 370, 371, 372, 373, 374, 375, 376, 1393, 377,
	632, 1394, 633, 378, 1395, 379, 380, 381, 382, 383,
	634, 635, 636, 460, 1157, 384, 385, 1396, 386, 387,
	388, 389, 0, 0, 0, 268, 390, 391, 392, 394,
	1397, 1156, 393, 637, 638, 1398, 639, 1399, 395, 396,
	1158, 640, 1159, 397, 398, 399, 1160, 400, 0, 0,
	0, 401, 402, 403, 404, 405, 406, 1400, 407, 409,
	408, 1401, 410, 641, 1161, 411, 412, 1162, 1402, 413,
	0, 0, 0, 414, 415, 418, 1403, 1404, 416, 417,
	419, 420, 0, 421, 422, 424, 427, 423, 425, 426,
	428, 441, 429, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 443, 0, 442, 1163, 444, 445,
	446, 451, 453, 454, 449, 450, 452, 455, 456, 448,
	1164, 447, 1405, 269, 1165, 457, 458, 1406, 642, 459,
	643, 461, 462, 1407, 0, 463, 0, 1408, 1409, 465,
	466, 467, 1410, 1411, 468, 469, 644, 1166, 470, 1167,
	645, 471, 472, 464, 473, 474, 475, 476, 477, 478,
	479, 480, 1412, 481, 482, 646, 483, 484, 485, 647,
	486, 487, 488, 648, 489, 649, 490, 491, 1413, 492,
	493, 0, 494, 495, 496, 497, 498, 499, 500, 650,
	501, 503, 502, 504, 1414, 505, 0, 506, 507, 508,
	0, 0, 0, 0, 509, 0, 511, 512, 513, 514,
	510, 515, 516, 517, 518, 1415, 519, 520, 521, 1168,
	522, 523, 524, 525, 651, 526, 0, 527, 528, 534,
	535, 529, 530, 536, 537, 538, 539, 540, 1416, 542,
	543, 541, 544, 545, 546, 1417, 547, 548, 531, 532,
	549, 550, 1169, 551, 552, 553, 554, 555, 556, 652,
	0, 557, 1418, 558, 559, 560, 562, 533, 563, 568,
	569, 653, 564, 565, 566, 567, 654, 571, 572, 1419,
	573, 574, 0, 570, 561, 1420, 575, 576, 577, 578,
	579, 580, 581, 354, 582, 1421, 583, 655, 656, 657,
	658, 1422, 592, 1423, 584, 585, 586, 659, 587, 660,
	1424, 588, 589, 590, 591, 0, 593, 594, 1425, 1426,
	595, 596, 597, 599, 600, 598, 601, 1427, 602, 1428,
	0, 603, 604, 605, 661, 662, 663, 1429, 607, 606,
	608, 664, 1430, 1431, 1432, 1433, 1434, 609, 610, 665,
	611, 612, 613, 2450, 0, 1089, 1061, 1062, 1063, 1059,
	1060, 1072, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 270, 272, 271, 273, 274, 275, 276, 277,
	2447, 278, 279, 0, 0, 0, 0, 0, 1113, 1077,
	0, 0, 0, 280, 281, 1153, 282, 283, 284, 285,
	286, 287, 615, 1126, 0, 288, 1133, 289, 1132, 0,
	1143, 290, 291, 292, 293, 294, 295, 1079, 1112, 1046,
	296, 1173, 1174, 622, 0, 297, 298, 1119, 0, 1100,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 1154, 321,
	322, 323, 1103, 1101, 1102, 1109, 1105, 1104, 1108, 324,
	325, 326, 327, 328, 1136, 329, 1130, 1129, 1050, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	2448, 0, 339, 1121, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 1056, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 1144, 1145, 360, 1068,
	267, 0, 0, 0, 0, 0, 361, 362, 363, 1128,
	0, 0, 0, 364, 0, 365, 0, 0, 1155, 366,
	367, 1141, 1142, 368, 369, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 1151, 0, 1078, 378, 0, 379,
	380, 381, 382, 383, 1114, 1115, 1118, 460, 1157, 384,
	385, 0, 386, 387, 388, 389, 0, 0, 0, 268,
	390, 391, 392, 394, 0, 1156, 393, 1123, 1124, 0,
	1084, 0, 395, 396, 1158, 1116, 1159, 397, 398, 399,
	1160, 400, 0, 0, 0, 401, 402, 403, 404, 405,
	406, 0, 407, 409, 408, 0, 410, 1152, 1161, 411,
	412, 1162, 0, 413, 0, 0, 0, 414, 415, 418,
	1107, 1106, 416, 417, 419, 420, 0, 421, 422, 424,
	427, 423, 425, 426, 428, 441, 429, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 443, 0,
	442, 1163, 444, 445, 446, 451, 453, 454, 449, 450,
	452, 455, 456, 448, 1164, 447, 1047, 269, 1165, 457,
	458, 1069, 1117, 459, 1131, 461, 462, 0, 0, 463,
	0, 0, 0, 465, 466, 467, 0, 0, 468, 469,
	644, 1166, 470, 1167, 1146, 471, 472, 464, 473, 474,
	475, 476, 477, 478, 479, 480, 0, 481, 482, 646,
	483, 484, 485, 647, 486, 487, 488, 1147, 489, 649,
	490, 491, 0, 492, 493, 0, 494, 495, 496, 497,
	498, 499, 500, 1127, 501, 503, 502, 504, 0, 505,
	0, 506, 507, 508, 0, 0, 0, 0, 509, 0,
	511, 512, 513, 514, 510, 515, 516, 517, 518, 0,
	519, 520, 521, 1168, 522, 523, 524, 525, 1057, 526,
	0, 527, 528, 534, 535, 529, 530, 536, 537, 538,
	539, 540, 0, 542, 543, 541, 544, 545, 546, 1110,
	547, 548, 531, 532, 549, 550, 1169, 551, 552, 553,
	554, 555, 556, 1125, 0, 557, 0, 558, 559, 560,
	562, 533, 563, 568, 569, 1172, 564, 565, 566, 567,
	1148, 571, 572, 0, 573, 574, 1045, 570, 561, 0,
	575, 576, 577, 578, 579, 580, 581, 354, 582, 0,
	583, 1137, 1138, 1139, 1140, 0, 592, 0, 584, 585,
	586, 1149, 587, 1150, 1067, 588, 589, 590, 591, 0,
	593, 594, 0, 1051, 595, 596, 597, 599, 600, 598,
	601, 1111, 602, 0, 0, 603, 604, 605, 661, 1134,
	1171, 2446, 607, 606, 608, 664, 0, 0, 0, 0,
	0, 609, 610, 665, 611, 612, 613, 1048, 0, 0,
	0, 0, 0, 0, 0, 1044, 0, 0, 0, 0,
	0, 0, 1042, 1043, 2449, 0, 0, 0, 0, 0,
	0, 1073, 2445, 0, 1035, 1071, 1089, 1061, 1062, 1063,
	1059, 1060, 1072, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 270, 272, 271, 273, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 1113,
	1077, 0, 0, 0, 280, 281, 1153, 282, 283, 284,
	285, 286, 287, 615, 1126, 0, 288, 1133, 289, 1132,
	0, 1143, 290, 291, 292, 293, 294, 295, 1079, 1112,
	1046, 296, 1173, 1174, 622, 0, 297, 298, 1119, 0,
	1100, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 1154,
	321, 322, 323, 1103, 1101, 1102, 1109, 1105, 1104, 1108,
	324, 325, 326, 327, 328, 1136, 329, 1130, 1129, 1050,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 1121, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 1056, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 1144, 1145, 360,
	1068, 267, 0, 0, 0, 0, 0, 361, 362, 363,
	1128, 0, 0, 0, 364, 0, 365, 0, 0, 1155,
	366, 367, 1141, 1142, 368, 369, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 1151, 0, 1078, 378, 0,
	379, 380, 381, 382, 383, 1114, 1115, 1118, 460, 1157,
	384, 385, 0, 386, 387, 388, 389, 0, 0, 0,
	268, 390, 391, 392, 394, 0, 1156, 393, 1123, 1124,
	0, 1084, 0, 395, 396, 1158, 1116, 1159, 397, 398,
	399, 1160, 400, 0, 0, 0, 401, 402, 403, 404,
	405, 406, 0, 407, 409, 408, 0, 410, 1152, 1161,
	411, 412, 1162, 0, 413, 0, 0, 0, 414, 415,
	418, 1107, 1106, 416, 417, 419, 420, 0, 421, 422,
	424, 427, 423, 425, 426, 428, 441, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 443,
	0, 442, 1163, 444, 445, 446, 451, 453, 454, 449,
	450, 452, 455, 456, 448, 1164, 447, 1047, 269, 1165,
	457, 458, 1069, 1117, 459, 1131, 461, 462, 0, 0,
	463, 0, 0, 0, 465, 466, 467, 0, 0, 468,
	469, 644, 1166, 470, 1167, 1146, 471, 472, 464, 473,
	474, 475, 476, 477, 478, 479, 480, 0, 481, 482,
	646, 483, 484, 485, 647, 486, 487, 488, 1147, 489,
	649, 490, 491, 0, 492, 493, 0, 494, 495, 496,
	497, 498, 499, 500, 1127, 501, 503, 502, 504, 0,
	505, 0, 506, 507, 508, 0, 0, 0, 0, 509,
	0, 511, 512, 513, 514, 510, 515, 516, 517, 518,
	0, 519, 520, 521, 1168, 522, 523, 524, 525, 1057,
	526, 0, 527, 528, 534, 535, 529, 530, 536, 537,
	538, 539, 540, 229, 542, 543, 541, 544, 545, 546,
	1110, 547, 548, 531, 532, 549, 550, 1169, 551, 552,
	553, 554, 555, 556, 1125, 0, 557, 0, 558, 559,
	560, 562, 533, 563, 568, 569, 1172, 564, 565, 566,
	567, 1148, 571, 572, 0, 573, 574, 1045, 570, 561,
	231, 575, 576, 577, 578, 579, 580, 581, 354, 582,
	0, 583, 1137, 1138, 1139, 1140, 0, 592, 0, 584,
	585, 586, 1149, 587, 1150, 1067, 588, 589, 590, 591,
	0, 593, 594, 0, 1051, 595, 596, 597, 599, 600,
	598, 601, 1111, 602, 0, 0, 603, 604, 605, 1566,
	1134, 1171, 0, 607, 606, 608, 664, 0, 0, 0,
	0, 223, 609, 610, 665, 611, 612, 613, 1048, 0,
	224, 0, 0, 0, 0, 0, 1044, 0, 0, 0,
	0, 0, 0, 1042, 1043, 1089, 1061, 1062, 1063, 1059,
	1060, 1072, 1810, 1808, 0, 0, 1071, 0, 0, 0,
	0, 0, 270, 272, 271, 273, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 1113, 1077,
	0, 0, 0, 280, 281, 1153, 282, 283, 284, 285,
	286, 287, 615, 1126, 0, 288, 1133, 289, 1132, 0,
	1143, 290, 291, 292, 293, 294, 295, 1079, 1112, 1046,
	296, 1173, 1174, 622, 0, 297, 298, 1119, 0, 1100,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 1154, 321,
	322, 323, 1103, 1101, 1102, 1109, 1105, 1104, 1108, 324,
	325, 326, 327, 328, 1136, 329, 1130, 1129, 1050, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 1121, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 1056, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 1144, 1145, 360, 1068,
	267, 0, 0, 0, 0, 0, 361, 362, 363, 1128,
	0, 0, 0, 364, 0, 365, 0, 0, 1155, 366,
	367, 1141, 1142, 368, 369, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 1151, 0, 1078, 378, 0, 379,
	380, 381, 382, 383, 1114, 1115, 1118, 460, 1157, 384,
	385, 0, 386, 387, 388, 389, 0, 0, 0, 268,
	390, 391, 392, 394, 0, 1156, 393, 1123, 1124, 0,
	1084, 0, 395, 396, 1158, 1116, 1159, 397, 398, 399,
	1160, 400, 0, 0, 0, 401, 402, 403, 404, 405,
	406, 0, 407, 409, 408, 0, 410, 1152, 1161, 411,
	412, 1162, 0, 413, 0, 0, 0, 414, 415, 418,
	1107, 1106, 416, 417, 419, 420, 0, 421, 422, 424,
	427, 423, 425, 426, 428, 441, 429, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 443, 0,
	442, 1163, 444, 445, 446, 451, 453, 454, 449, 450,
	452, 455, 456, 448, 1164, 447, 1047, 269, 1165, 457,
	458, 1069, 1117, 459, 1131, 461, 462, 0, 0, 463,
	0, 0, 0, 465, 466, 467, 0, 0, 468, 469,
	644, 1166, 470, 1167, 1146, 471, 472, 464, 473, 474,
	475, 476, 477, 478, 479, 480, 0, 481, 482, 646,
	483, 484, 485, 647, 486, 487, 488, 1147, 489, 649,
	490, 491, 0, 492, 493, 0, 494, 495, 496, 497,
	498, 499, 500, 1127, 501, 503, 502, 504, 0, 505,
	0, 506, 507, 508, 0, 0, 0, 0, 509, 0,
	511, 512, 513, 514, 510, 515, 516, 517, 518, 0,
	519, 520, 521, 1168, 522, 523, 524, 525, 1057, 526,
	0, 527, 528, 534, 535, 529, 530, 536, 537, 538,
	539, 540, 229, 542, 543, 541, 544, 545, 546, 1110,
	547, 548, 531, 532, 549, 550, 1169, 551, 552, 553,
	554, 555, 556, 1125, 0, 557, 0, 558, 559, 560,
	562, 533, 563, 568, 569, 1172, 564, 565, 566, 567,
	1148, 571, 572, 0, 573, 574, 1045, 570, 561, 231,
	575, 576, 577, 578, 579, 580, 581, 354, 582, 0,
	583, 1137, 1138, 1139, 1140, 0, 592, 0, 584, 585,
	586, 1149, 587, 1150, 1067, 588, 589, 590, 591, 0,
	593, 594, 0, 1051, 595, 596, 597, 599, 600, 598,
	601, 1111, 602, 0, 0, 603, 604, 605, 1566, 1134,
	1171, 0, 607, 606, 608, 664, 0, 0, 0, 0,
	223, 609, 610, 665, 611, 612, 613, 1048, 0, 224,
	0, 0, 0, 0, 0, 1044, 0, 0, 0, 0,
	0, 0, 1042, 1043, 1089, 1061, 1062, 1063, 1059, 1060,
	1072, 1810, 3056, 0, 0, 1071, 0, 0, 0, 0,
	0, 270, 272, 271, 273, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 1113, 1077, 0,
	0, 0, 280, 281, 1153, 282, 283, 284, 285, 286,
	287, 615, 1126, 0, 288, 1133, 289, 1132, 0, 1143,
	290, 291, 292, 293, 294, 295, 1079, 1112, 1046, 296,
	1173, 1174, 622, 0, 297, 298, 1119, 0, 1100, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 1154, 321, 322,
	323, 1103, 1101, 1102, 1109, 1105, 1104, 1108, 324, 325,
	326, 327, 328, 1136, 329, 1130, 1129, 1050, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 1121, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 1056, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 1144, 1145, 360, 1068, 267,
	0, 0, 0, 0, 0, 361, 362, 363, 1128, 0,
	0, 0, 364, 0, 365, 0, 0, 1155, 366, 367,
	1141, 1142, 368, 369, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 1151, 0, 1078, 378, 0, 379, 380,
	381, 382, 383, 1114, 1115, 1118, 460, 1157, 384, 385,
	0, 386, 387, 388, 389, 0, 0, 0, 268, 390,
	391, 392, 394, 0, 1156, 393, 1123, 1124, 0, 1084,
	0, 395, 396, 1158, 1116, 1159, 397, 398, 399, 1160,
	400, 0, 0, 0, 401, 402, 403, 404, 405, 406,
	0, 407, 409, 408, 0, 410, 1152, 1161, 411, 412,
	1162, 0, 413, 0, 0, 0, 414, 415, 418, 1107,
	1106, 416, 417, 419, 420, 0, 421, 422, 424, 427,
	423, 425, 426, 428, 441, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 443, 0, 442,
	1163, 444, 445, 446, 451, 453, 454, 449, 450, 452,
	455, 456, 448, 1164, 447, 1047, 269, 1165, 457, 458,
	1069, 1117, 459, 1131, 461, 462, 0, 0, 463, 0,
	0, 0, 465, 466, 467, 0, 0, 468, 469, 644,
	1166, 470, 1167, 1146, 471, 472, 464, 473, 474, 475,
	476, 477, 478, 479, 480, 0, 481, 482, 646, 483,
	484, 485, 647, 486, 487, 488, 1147, 489, 649, 490,
	491, 0, 492, 493, 0, 494, 495, 496, 497, 498,
	499, 500, 1127, 501, 503, 502, 504, 0, 505, 0,
	506, 507, 508, 0, 0, 0, 0, 509, 0, 511,
	512, 513, 514, 510, 515, 516, 517, 518, 0, 519,
	520, 521, 1168, 522, 523, 524, 525, 1057, 526, 0,
	527, 528, 534, 535, 529, 530, 536, 537, 538, 539,
	540, 229, 542, 543, 541, 544, 545, 546, 1110, 547,
	548, 531, 532, 549, 550, 1169, 551, 552, 553, 554,
	555, 556, 1125, 0, 557, 0, 558, 559, 560, 562,
	533, 563, 568, 569, 1172, 564, 565, 566, 567, 1148,
	571, 572, 0, 573, 574, 1045, 570, 561, 231, 575,
	576, 577, 578, 579, 580, 581, 354, 582, 0, 583,
	1137, 1138, 1139, 1140, 0, 592, 0, 584, 585, 586,
	1149, 587, 1150, 1067, 588, 589, 590, 591, 0, 593,
	594, 0, 1051, 595, 596, 597, 599, 600, 598, 601,
	1111, 602, 0, 0, 603, 604, 605, 1566, 1134, 1171,
	0, 607, 606, 608, 664, 0, 0, 0, 0, 223,
	609, 610, 665, 611, 612, 613, 1048, 0, 224, 0,
	0, 0, 0, 0, 1044, 0, 0, 0, 0, 0,
	0, 1042, 1043, 1089, 1061, 1062, 1063, 1059, 1060, 1072,
	1810, 1808, 0, 0, 1071, 0, 0, 0, 0, 0,
	270, 272, 271, 273, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 1113, 1077, 0, 0,
	0, 280, 281, 1153, 282, 283, 284, 285, 286, 287,
	615, 1126, 0, 288, 1133, 289, 1132, 2578, 1143, 290,
	291, 292, 293, 294, 295, 1079, 1112, 1046, 296, 1173,
	1174, 622, 0, 297, 298, 1119, 0, 1100, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 1154, 321, 322, 323,
	1103, 1101, 1102, 1109, 1105, 1104, 1108, 324, 325, 326,
	327, 328, 1136, 329, 1130, 1129, 1050, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 1121, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 1056, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 1144, 1145, 360, 1068, 267, 0,
	0, 0, 0, 0, 361, 362, 363, 1128, 0, 0,
	0, 364, 0, 365, 0, 2583, 1155, 366, 367, 1141,
	1142, 368, 369, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 1151, 0, 1078, 378, 0, 379, 380, 381,
	382, 383, 1114, 1115, 1118, 460, 1157, 384, 385, 0,
	386, 387, 388, 389, 0, 0, 0, 268, 390, 391,
	392, 394, 0, 1156, 393, 1123, 1124, 0, 1084, 0,
	395, 396, 1158, 1116, 1159, 397, 398, 399, 1160, 400,
	0, 0, 0, 401, 402, 403, 404, 405, 406, 0,
	407, 409, 408, 2579, 410, 1152, 1161, 411, 412, 1162,
	0, 413, 0, 0, 0, 414, 415, 418, 1107, 1106,
	416, 417, 419, 420, 0, 421, 422, 424, 427, 423,
	425, 426, 428, 441, 429, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 443, 0, 442, 1163,
	444, 445, 446, 451, 453, 454, 449, 450, 452, 455,
	456, 448, 1164, 447, 1047, 269, 1165, 457, 458, 1069,
	1117, 459, 1131, 461, 462, 0, 0, 463, 0, 0,
	0, 465, 466, 467, 0, 0, 468, 469, 644, 1166,
	470, 1167, 1146, 471, 472, 464, 473, 474, 475, 476,
	477, 478, 479, 480, 0, 481, 482, 646, 483, 484,
	485, 647, 486, 487, 488, 1147, 489, 649, 490, 491,
	0, 492, 493, 0, 494, 495, 496, 497, 498, 499,
	500, 1127, 501, 503, 502, 504, 0, 505, 0, 506,
	507, 508, 0, 0, 0, 0, 509, 0, 511, 512,
	513, 514, 510, 515, 516, 517, 518, 0, 519, 520,
	521, 1168, 522, 523, 524, 525, 1057, 526, 0, 527,
	528, 534, 535, 529, 530, 536, 537, 538, 539, 540,
	0, 542, 543, 541, 544, 545, 546, 1110, 547, 548,
	531, 532, 549, 550, 1169, 551, 552, 553, 554, 555,
	556, 1125, 0, 557, 0, 558, 559, 560, 562, 533,
	563, 568, 569, 1172, 564, 565, 566, 567, 1148, 571,
	572, 0, 573, 574, 1045, 570, 561, 0, 575, 576,
	577, 578, 579, 580, 581, 354, 582, 0, 583, 1137,
	1138, 1139, 1140, 0, 592, 2580, 584, 585, 586, 1149,
	587, 1150, 1067, 588, 589, 590, 591, 0, 593, 594,
	0, 1051, 595, 596, 597, 599, 600, 598, 601, 1111,
	602, 0, 0, 603, 604, 605, 661, 1134, 1171, 0,
	607, 606, 608, 664, 0, 0, 0, 0, 0, 609,
	610, 665, 611, 612, 613, 1048, 0, 0, 0, 0,
	0, 0, 0, 1044, 0, 0, 0, 0, 0, 0,
	1042, 1043, 0, 0, 0, 0, 0, 0, 0, 1073,
	0, 0, 2495, 1071, 1089, 1061, 1062, 1063, 1059, 1060,
	1072, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 270, 272, 271, 273, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 1113, 1077, 0,
	0, 0, 280, 281, 1153, 282, 283, 284, 285, 286,
	287, 615, 1126, 0, 288, 1133, 289, 1132, 0, 1143,
	290, 291, 292, 293, 294, 295, 1079, 1112, 1046, 296,
	1173, 1174, 622, 0, 297, 298, 1119, 0, 1100, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 1154, 321, 322,
	323, 1103, 1101, 1102, 1109, 1105, 1104, 1108, 324, 325,
	326, 327, 328, 1136, 329, 1130, 1129, 1050, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 1121, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 1056, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 1144, 1145, 360, 1068, 267,
	0, 0, 0, 0, 0, 361, 362, 363, 1128, 0,
	0, 0, 364, 0, 365, 0, 0, 1155, 366, 367,
	1141, 1142, 368, 369, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 1151, 0, 1078, 378, 0, 379, 380,
	381, 382, 383, 1114, 1115, 1118, 460, 1157, 384, 385,
	0, 386, 387, 388, 389, 0, 0, 0, 268, 390,
	391, 392, 394, 0, 1156, 393, 1123, 1124, 0, 1084,
	0, 395, 396, 1158, 1116, 1159, 397, 398, 399, 1160,
	400, 0, 0, 0, 401, 402, 403, 404, 405, 406,
	0, 407, 409, 408, 0, 410, 1152, 1161, 411, 412,
	1162, 0, 413, 0, 0, 0, 414, 415, 418, 1107,
	1106, 416, 417, 419, 420, 0, 421, 422, 424, 427,
	423, 425, 426, 428, 441, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 443, 0, 442,
	1163, 444, 445, 446, 451, 453, 454, 449, 450, 452,
	455, 456, 448, 1164, 447, 1047, 269, 1165, 457, 458,
	1069, 1117, 459, 1131, 461, 462, 0, 0, 463, 0,
	0, 0, 465, 466, 467, 0, 0, 468, 469, 644,
	1166, 470, 1167, 1146, 471, 472, 464, 473, 474, 475,
	476, 477, 478, 479, 480, 0, 481, 482, 646, 483,
	484, 485, 647, 486, 487, 488, 1147, 489, 649, 490,
	491, 0, 492, 493, 0, 494, 495, 496, 497, 498,
	499, 500, 1127, 501, 503, 502, 504, 0, 505, 0,
	506, 507, 508, 0, 0, 0, 0, 509, 0, 511,
	512, 513, 514, 510, 515, 516, 517, 518, 0, 519,
	520, 521, 1168, 522, 523, 524, 525, 1057, 526, 0,
	527, 528, 534, 535, 529, 530, 536, 537, 538, 539,
	540, 0, 542, 543, 541, 544, 545, 546, 1110, 547,
	548, 531, 532, 549, 550, 1169, 551, 552, 553, 554,
	555, 556, 1125, 0, 557, 0, 558, 559, 560, 562,
	533, 563, 568, 569, 1172, 564, 565, 566, 567, 1148,
	571, 572, 0, 573, 574, 1045, 570, 561, 0, 575,
	576, 577, 578, 579, 580, 581, 354, 582, 0, 583,
	1137, 1138, 1139, 1140, 0, 592, 0, 584, 585, 586,
	1149, 587, 1150, 1067, 588, 589, 590, 591, 0, 593,
	594, 0, 1051, 595, 596, 597, 599, 600, 598, 601,
	1111, 602, 0, 0, 603, 604, 605, 661, 1134, 1171,
	0, 607, 606, 608, 664, 0, 0, 0, 0, 0,
	609, 610, 665, 611, 612, 613, 1048, 0, 0, 0,
	0, 0, 0, 0, 1044, 0, 0, 0, 0, 0,
	0, 1042, 1043, 0, 0, 0, 0, 0, 0, 0,
	1073, 2493, 0, 2492, 1071, 1089, 1061, 1062, 1063, 1059,
	1060, 1072, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 270, 272, 271, 273, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 1113, 1077,
	0, 0, 0, 280, 281, 1153, 282, 283, 284, 285,
	286, 287, 615, 1126, 0, 288, 1133, 289, 1132, 0,
	1143, 290, 291, 292, 293, 294, 295, 1079, 1112, 1046,
	296, 1173, 1174, 622, 0, 297, 298, 1119, 0, 1100,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 1154, 321,
	322, 323, 1103, 1101, 1102, 1109, 1105, 1104, 1108, 324,
	325, 326, 327, 328, 1136, 329, 1130, 1129, 1050, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 1121, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 1056, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 1144, 1145, 360, 1068,
	267, 0, 0, 0, 0, 0, 361, 362, 363, 1128,
	0, 0, 0, 364, 0, 365, 0, 0, 1155, 366,
	367, 1141, 1142, 368, 369, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 1151, 0, 1078, 378, 0, 379,
	380, 381, 382, 383, 1114, 1115, 1118, 460, 1157, 384,
	385, 0, 386, 387, 388, 389, 0, 0, 0, 268,
	390, 391, 392, 394, 0, 1156, 393, 1123, 1124, 0,
	1084, 0, 395, 396, 1158, 1116, 1159, 397, 398, 399,
	1160, 400, 0, 0, 0, 401, 402, 403, 404, 405,
	406, 0, 407, 409, 408, 0, 410, 1152, 1161, 411,
	412, 1162, 0, 413, 0, 0, 0, 414, 415, 418,
	1107, 1106, 416, 417, 419, 420, 0, 421, 422, 424,
	427, 423, 425, 426, 428, 441, 429, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 443, 0,
	442, 1163, 444, 445, 446, 451, 453, 454, 449, 450,
	452, 455, 456, 448, 1164, 447, 1047, 269, 1165, 457,
	458, 1069, 1117, 459, 1131, 461, 462, 0, 0, 463,
	0, 0, 0, 465, 466, 467, 0, 0, 468, 469,
	644, 1166, 470, 1167, 1146, 471, 472, 464, 473, 474,
	475, 476, 477, 478, 479, 480, 0, 481, 482, 646,
	483, 484, 485, 647, 486, 487, 488, 1147, 489, 649,
	490, 491, 0, 492, 493, 0, 494, 495, 496, 497,
	498, 499, 500, 1127, 501, 503, 502, 504, 0, 505,
	0, 506, 507, 508, 0, 0, 0, 0, 509, 0,
	511, 512, 513, 514, 510, 515, 516, 517, 518, 0,
	519, 520, 521, 1168, 522, 523, 524, 525, 1057, 526,
	0, 527, 528, 534, 535, 529, 530, 536, 537, 538,
	539, 540, 0, 542, 543, 541, 544, 545, 546, 1110,
	547, 548, 531, 532, 549, 550, 1169, 551, 552, 553,
	554, 555, 556, 1125, 0, 557, 0, 558, 559, 560,
	562, 533, 563, 568, 569, 1172, 564, 565, 566, 567,
	1148, 571, 572, 0, 573, 574, 1045, 570, 561, 0,
	575, 576, 577, 578, 579, 580, 581, 354, 582, 0,
	583, 1137, 1138, 1139, 1140, 0, 592, 0, 584, 585,
	586, 1149, 587, 1150, 1067, 588, 589, 590, 591, 0,
	593, 594, 0, 1051, 595, 596, 597, 599, 600, 598,
	601, 1111, 602, 0, 0, 603, 604, 605, 661, 1134,
	1171, 0, 607, 606, 608, 664, 0, 0, 0, 0,
	0, 609, 610, 665, 611, 612, 613, 1048, 0, 0,
	0, 0, 0, 0, 0, 1044, 0, 0, 0, 0,
	0, 0, 1042, 1043, 0, 0, 0, 0, 0, 0,
	0, 1073, 2490, 0, 2489, 1071, 1089, 1061, 1062, 1063,
	1059, 1060, 1072, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 270, 272, 271, 273, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 1113,
	1077, 0, 0, 0, 280, 281, 1153, 282, 283, 284,
	285, 286, 287, 615, 1126, 0, 288, 1133, 289, 1132,
	0, 1143, 290, 291, 292, 293, 294, 295, 1079, 1112,
	1046, 296, 1173, 1174, 622, 0, 297, 298, 1119, 0,
	1100, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 1154,
	321, 322, 323, 1103, 1101, 1102, 1109, 1105, 1104, 1108,
	324, 325, 326, 327, 328, 1136, 329, 1130, 1129, 1050,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 1121, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 1056, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 1144, 1145, 360,
	1068, 267, 0, 0, 0, 0, 0, 361, 362, 363,
	1128, 0, 0, 0, 364, 0, 365, 0, 0, 1155,
	366, 367, 1141, 1142, 368, 369, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 1151, 0, 1078, 378, 0,
	379, 380, 381, 382, 383, 1114, 1115, 1118, 460, 1157,
	384, 385, 0, 386, 387, 388, 389, 0, 0, 0,
	268, 390, 391, 392, 394, 0, 1156, 393, 1123, 1124,
	0, 1084, 0, 395, 396, 1158, 1116, 1159, 397, 398,
	399, 1160, 400, 0, 0, 0, 401, 402, 403, 404,
	405, 406, 0, 407, 409, 408, 0, 410, 1152, 1161,
	411, 412, 1162, 0, 413, 0, 0, 0, 414, 415,
	418, 1107, 1106, 416, 417, 419, 420, 0, 421, 422,
	424, 427, 423, 425, 426, 428, 441, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 443,
	0, 442, 1163, 444, 445, 446, 451, 453, 454, 449,
	450, 452, 455, 456, 448, 1164, 447, 1047, 269, 1165,
	457, 458, 1069, 1117, 459, 1131, 461, 462, 0, 0,
	463, 0, 0, 0, 465, 466, 467, 0, 0, 468,
	469, 644, 1166, 470, 1167, 1146, 471, 472, 464, 473,
	474, 475, 476, 477, 478, 479, 480, 0, 481, 482,
	646, 483, 484, 485, 647, 486, 487, 488, 1147, 489,
	649, 490, 491, 0, 492, 493, 0, 494, 495, 496,
	497, 498, 499, 500, 1127, 501, 503, 502, 504, 0,
	505, 0, 506, 507, 508, 0, 0, 0, 0, 509,
	0, 511, 512, 513, 514, 510, 515, 516, 517, 518,
	0, 519, 520, 521, 1168, 522, 523, 524, 525, 1057,
	526, 0, 527, 528, 534, 535, 529, 530, 536, 537,
	538, 539, 540, 0, 542, 543, 541, 544, 545, 546,
	1110, 547, 548, 531, 532, 549, 550, 1169, 551, 552,
	553, 554, 555, 556, 1125, 0, 557, 0, 558, 559,
	560, 562, 533, 563, 568, 569, 1172, 564, 565, 566,
	567, 1148, 571, 572, 0, 573, 574, 1045, 570, 561,
	0, 575, 576, 577, 578, 579, 580, 581, 354, 582,
	0, 583, 1137, 1138, 1139, 1140, 0, 592, 0, 584,
	585, 586, 1149, 587, 1150, 1067, 588, 589, 590, 591,
	0, 593, 594, 0, 1051, 595, 596, 597, 599, 600,
	598, 601, 1111, 602, 0, 0, 603, 604, 605, 661,
	1134, 1171, 0, 607, 606, 608, 664, 0, 0, 0,
	0, 0, 609, 610, 665, 611, 612, 613, 1048, 0,
	0, 0, 0, 0, 0, 0, 1044, 0, 0, 0,
	0, 0, 0, 1042, 1043, 0, 0, 0, 0, 0,
	0, 0, 1073, 2487, 0, 2486, 1071, 1089, 1061, 1062,
	1063, 1059, 1060, 1072, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 270, 272, 271, 273, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	1113, 1077, 0, 0, 0, 280, 281, 1153, 282, 283,
	284, 285, 286, 287, 615, 1126, 0, 288, 1133, 289,
	1132, 0, 1143, 290, 291, 292, 293, 294, 295, 1079,
	1112, 1046, 296, 1173, 1174, 622, 0, 297, 298, 1119,
	0, 1100, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	1154, 321, 322, 323, 1103, 1101, 1102, 1109, 1105, 1104,
	1108, 324, 325, 326, 327, 328, 1136, 329, 1130, 1129,
	1050, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 1121, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 1056, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 1144, 1145,
	360, 1068, 267, 0, 0, 0, 0, 0, 361, 362,
	363, 1128, 0, 0, 0, 364, 0, 365, 0, 0,
	1155, 366, 367, 1141, 1142, 368, 369, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 1151, 0, 1078, 378,
	0, 379, 380, 381, 382, 383, 1114, 1115, 1118, 460,
	1157, 384, 385, 0, 386, 387, 388, 389, 0, 0,
	0, 268, 390, 391, 392, 394, 0, 1156, 393, 1123,
	1124, 0, 1084, 0, 395, 396, 1158, 1116, 1159, 397,
	398, 399, 1160, 400, 0, 0, 0, 401, 402, 403,
	404, 405, 406, 0, 407, 409, 408, 0, 410, 1152,
	1161, 411, 412, 1162, 0, 413, 0, 0, 0, 414,
	415, 418, 1107, 1106, 416, 417, 419, 420, 0, 421,
	422, 424, 427, 423, 425, 426, 428, 441, 429, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	443, 0, 442, 1163, 444, 445, 446, 451, 453, 454,
	449, 450, 452, 455, 456, 448, 1164, 447, 1047, 269,
	1165, 457, 458, 1069, 1117, 459, 1131, 461, 462, 0,
	0, 463, 0, 0, 0, 465, 466, 467, 0, 0,
	468, 469, 644, 1166, 470, 1167, 1146, 471, 472, 464,
	473, 474, 475, 476, 477, 478, 479, 480, 0, 481,
	482, 646, 483, 484, 485, 647, 486, 487, 488, 1147,
	489, 649, 490, 491, 0, 492, 493, 0, 494, 495,
	496, 497, 498, 499, 500, 1127, 501, 503, 502, 504,
	0, 505, 0, 506, 507, 508, 0, 0, 0, 0,
	509, 0, 511, 512, 513, 514, 510, 515, 516, 517,
	518, 0, 519, 520, 521, 1168, 522, 523, 524, 525,
	1057, 526, 0, 527, 528, 534, 535, 529, 530, 536,
	537, 538, 539, 540, 0, 542, 543, 541, 544, 545,
	546, 1110, 547, 548, 531, 532, 549, 550, 1169, 551,
	552, 553, 554, 555, 556, 1125, 0, 557, 0, 558,
	559, 560, 562, 533, 563, 568, 569, 1172, 564, 565,
	566, 567, 1148, 571, 572, 0, 573, 574, 1045, 570,
	561, 0, 575, 576, 577, 578, 579, 580, 581, 354,
	582, 0, 583, 1137, 1138, 1139, 1140, 0, 592, 0,
	584, 585, 586, 1149, 587, 1150, 1067, 588, 589, 590,
	591, 0, 593, 594, 0, 1051, 595, 596, 597, 599,
	600, 598, 601, 1111, 602, 0, 0, 603, 604, 605,
	661, 1134, 1171, 0, 607, 606, 608, 664, 0, 0,
	0, 0, 0, 609, 610, 665, 611, 612, 613, 1048,
	0, 0, 0, 0, 0, 0, 0, 1044, 0, 0,
	0, 0, 0, 0, 1042, 1043, 0, 0, 0, 0,
	0, 0, 0, 1073, 2484, 0, 1659, 1071, 1089, 1061,
	1062, 1063, 1059, 1060, 1072, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 270, 272, 271, 273, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 1113, 1077, 0, 0, 0, 280, 281, 1153, 282,
	283, 284, 285, 286, 287, 615, 1126, 0, 288, 1133,
	289, 1132, 0, 1143, 290, 291, 292, 293, 294, 295,
	1079, 1112, 1046, 296, 1173, 1174, 622, 0, 297, 298,
	1119, 0, 1100, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 1154, 321, 322, 323, 1103, 1101, 1102, 1109, 1105,
	1104, 1108, 324, 325, 326, 327, 328, 1136, 329, 1130,
	1129, 1050, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 1121, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 1056, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 1144,
	1145, 360, 1068, 267, 0, 0, 0, 0, 0, 361,
	362, 363, 1128, 0, 0, 0, 364, 0, 365, 0,
	0, 1155, 366, 367, 1141, 1142, 368, 369, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 1151, 0, 1078,
	378, 0, 379, 380, 381, 382, 383, 1114, 1115, 1118,
	460, 1157, 384, 385, 0, 386, 387, 388, 389, 0,
	0, 0, 268, 390, 391, 392, 394, 0, 1156, 393,
	1123, 1124, 0, 1084, 0, 395, 396, 1158, 1116, 1159,
	397, 398, 399, 1160, 400, 0, 0, 0, 401, 402,
	403, 404, 405, 406, 0, 407, 409, 408, 0, 410,
	1152, 1161, 411, 412, 1162, 0, 413, 0, 0, 0,
	414, 415, 418, 1107, 1106, 416, 417, 419, 420, 0,
	421, 422, 424, 427, 423, 425, 426, 428, 441, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 443, 0, 442, 1163, 444, 445, 446, 451, 453,
	454, 449, 450, 452, 455, 456, 448, 1164, 447, 1047,
	269, 1165, 457, 458, 1069, 1117, 459, 1131, 461, 462,
	0, 0, 463, 0, 0, 0, 465, 466, 467, 0,
	0, 468, 469, 644, 1166, 470, 1167, 1146, 471, 472,
	464, 473, 474, 475, 476, 477, 478, 479, 480, 0,
	481, 482, 646, 483, 484, 485, 647, 486, 487, 488,
	1147, 489, 649, 490, 491, 0, 492, 493, 0, 494,
	495, 496, 497, 498, 499, 500, 1127, 501, 503, 502,
	504, 0, 505, 0, 506, 507, 508, 0, 0, 0,
	0, 509, 0, 511, 512, 513, 514, 510, 515, 516,
	517, 518, 0, 519, 520, 521, 1168, 522, 523, 524,
	525, 1057, 526, 0, 527, 528, 534, 535, 529, 530,
	536, 537, 538, 539, 540, 0, 542, 543, 541, 544,
	545, 546, 1110, 547, 548, 531, 532, 549, 550, 1169,
	551, 552, 553, 554, 555, 556, 1125, 0, 557, 0,
	558, 559, 560, 562, 533, 563, 568, 569, 1172, 564,
	565, 566, 567, 1148, 571, 572, 0, 573, 574, 1045,
	570, 561, 0, 575, 576, 577, 578, 579, 580, 581,
	354, 582, 0, 583, 1137, 1138, 1139, 1140, 0, 592,
	0, 584, 585, 586, 1149, 587, 1150, 1067, 588, 589,
	590, 591, 0, 593, 594, 0, 1051, 595, 596, 597,
	599, 600, 598, 601, 1111, 602, 0, 0, 603, 604,
	605, 661, 1134, 1171, 0, 607, 606, 608, 664, 0,
	1658, 0, 0, 0, 609, 610, 665, 611, 612, 613,
	1048, 0, 0, 0, 0, 0, 0, 0, 1044, 0,
	0, 0, 0, 0, 0, 1042, 1043, 0, 0, 0,
	0, 0, 0, 0, 1073, 0, 0, 1038, 1071, 1089,
	1061, 1062, 1063, 1059, 1060, 1072, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 272, 271, 273,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 1113, 1077, 0, 0, 0, 280, 281, 1153,
	282, 283, 284, 285, 286, 287, 615, 1126, 0, 288,
	1133, 289, 1132, 0, 1143, 290, 291, 292, 293, 294,
	295, 1079, 1112, 1046, 296, 1173, 1174, 622, 0, 297,
	298, 1119, 0, 1100, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 1154, 321, 322, 323, 1103, 1101, 1102, 1109,
	1105, 1104, 1108, 324, 325, 326, 327, 328, 1136, 329,
	1130, 1129, 1050, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 1121, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 1056,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	1144, 1145, 360, 1068, 267, 0, 0, 0, 0, 0,
	361, 362, 363, 1128, 0, 0, 0, 364, 0, 365,
	0, 0, 1155, 366, 367, 1141, 1142, 368, 369, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 1151, 0,
	1078, 378, 0, 379, 380, 381, 382, 383, 1114, 1115,
	1118, 460, 1157, 384, 385, 0, 386, 387, 388, 389,
	0, 0, 0, 268, 390, 391, 392, 394, 0, 1156,
	393, 1123, 1124, 0, 1084, 0, 395, 396, 1158, 1116,
	1159, 397, 398, 399, 1160, 400, 0, 0, 0, 401,
	402, 403, 404, 405, 406, 0, 407, 409, 408, 0,
	410, 1152, 1161, 411, 412, 1162, 0, 413, 0, 0,
	0, 414, 415, 418, 1107, 1106, 416, 417, 419, 420,
	0, 421, 422, 424, 427, 423, 425, 426, 428, 441,
	429, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 443, 0, 442, 1163, 444, 445, 446, 451,
	453, 454, 449, 450, 452, 455, 456, 448, 1164, 447,
	1047, 269, 1165, 457, 458, 1069, 1117, 459, 1131, 461,
	462, 0, 0, 463, 0, 1052, 0, 465, 466, 467,
	0, 0, 468, 469, 644, 1166, 470, 1167, 1146, 471,
	472, 464, 473, 474, 475, 476, 477, 478, 479, 480,
	0, 481, 482, 646, 483, 484, 485, 647, 486, 487,
	488, 1147, 489, 649, 490, 491, 0, 492, 493, 0,
	494, 495, 496, 497, 498, 499, 500, 1127, 501, 503,
	502, 504, 0, 505, 0, 506, 507, 508, 0, 0,
	0, 0, 509, 0, 511, 512, 513, 514, 510, 515,
	516, 517, 518, 0, 519, 520, 521, 1168, 522, 523,
	524, 525, 1057, 526, 0, 527, 528, 534, 535, 529,
	530, 536, 537, 538, 539, 540, 0, 542, 543, 541,
	544, 545, 546, 1110, 547, 548, 531, 532, 549, 550,
	1169, 551, 552, 553, 554, 555, 556, 1125, 0, 557,
	0, 558, 559, 560, 562, 533, 563, 568, 569, 1172,
	564, 565, 566, 567, 1148, 571, 572, 0, 573, 574,
	1045, 570, 561, 0, 575, 576, 577, 578, 579, 580,
	581, 354, 582, 0, 583, 1137, 1138, 1139, 1140, 0,
	592, 0, 584, 585, 586, 1149, 587, 1150, 1067, 588,
	589, 590, 591, 0, 593, 594, 0, 1051, 595, 596,
	597, 599, 600, 598, 601, 1111, 602, 0, 0, 603,
	604, 605, 661, 1134, 1171, 0, 607, 606, 608, 664,
	0, 0, 0, 0, 0, 609, 610, 665, 611, 612,
	613, 1048, 0, 0, 0, 0, 0, 0, 0, 1044,
	0, 0, 0, 0, 0, 0, 1042, 1043, 1089, 1061,
	1062, 1063, 1059, 1060, 1072, 1073, 0, 0, 0, 1071,
	0, 0, 0, 0, 0, 270, 272, 271, 273, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 1113, 1077, 0, 0, 0, 280, 281, 1153, 282,
	283, 284, 285, 286, 287, 615, 1126, 0, 288, 1133,
	289, 1132, 0, 1143, 290, 291, 292, 293, 294, 295,
	1079, 1112, 1046, 296, 1173, 1174, 622, 0, 297, 298,
	1119, 0, 1100, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 4471, 317, 0, 318, 319,
	320, 1154, 321, 322, 323, 1103, 1101, 1102, 1109, 1105,
	1104, 1108, 324, 325, 326, 327, 328, 1136, 329, 1130,
	1129, 1050, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 1121, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 1056, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 1144,
	1145, 360, 1068, 267, 0, 0, 0, 0, 0, 361,
	362, 363, 1128, 0, 0, 0, 364, 0, 365, 0,
	0, 1155, 366, 367, 1141, 1142, 368, 369, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 1151, 0, 1078,
	378, 0, 379, 380, 381, 382, 383, 1114, 1115, 1118,
	460, 1157, 384, 385, 0, 386, 387, 388, 389, 0,
	0, 0, 268, 390, 391, 392, 394, 0, 1156, 393,
	1123, 1124, 0, 1084, 0, 395, 396, 1158, 1116, 1159,
	397, 398, 399, 1160, 400, 0, 0, 0, 401, 402,
	403, 404, 405, 406, 0, 407, 409, 408, 0, 410,
	1152, 1161, 411, 412, 1162, 0, 413, 0, 0, 0,
	414, 415, 418, 1107, 1106, 416, 417, 419, 420, 0,
	421, 422, 424, 427, 423, 425, 426, 428, 441, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 443, 0, 442, 1163, 444, 445, 446, 451, 453,
	454, 449, 450, 452, 455, 456, 448, 1164, 447, 1047,
	269, 1165, 457, 458, 1069, 1117, 459, 1131, 461, 462,
	0, 0, 463, 0, 1052, 0, 465, 466, 467, 0,
	0, 468, 469, 644, 1166, 470, 1167, 1146, 471, 472,
	464, 473, 474, 475, 476, 477, 478, 479, 480, 0,
	481, 482, 646, 483, 484, 485, 647, 486, 487, 488,
	1147, 489, 649, 490, 491, 0, 492, 493, 0, 494,
	495, 496, 497, 498, 499, 500, 1127, 501, 503, 502,
	504, 0, 505, 0, 506, 507, 508, 0, 0, 0,
	0, 509, 0, 511, 512, 513, 514, 510, 515, 516,
	517, 518, 0, 519, 520, 521, 1168, 522, 523, 524,
	525, 1057, 526, 0, 527, 528, 534, 535, 529, 530,
	536, 537, 538, 539, 540, 0, 542, 543, 541, 544,
	545, 546, 1110, 547, 548, 531, 532, 549, 550, 1169,
	551, 552, 553, 554, 555, 556, 1125, 0, 557, 0,
	558, 559, 560, 562, 533, 563, 568, 569, 1172, 564,
	565, 566, 567, 1148, 571, 572, 0, 573, 574, 1045,
	570, 561, 0, 575, 576, 577, 578, 579, 580, 581,
	354, 582, 0, 583, 1137, 1138, 1139, 1140, 0, 592,
	0, 584, 585, 586, 1149, 587, 1150, 1067, 588, 589,
	590, 591, 0, 593, 594, 0, 1051, 595, 596, 597,
	599, 600, 598, 601, 1111, 602, 0, 0, 603, 604,
	605, 661, 1134, 1171, 0, 607, 606, 608, 664, 0,
	0, 0, 0, 0, 609, 610, 665, 611, 612, 613,
	1048, 0, 0, 0, 0, 0, 0, 0, 1044, 0,
	0, 0, 0, 0, 0, 1042, 1043, 1089, 1061, 1062,
	1063, 1059, 1060, 1072, 1073, 0, 0, 0, 1071, 0,
	0, 0, 0, 0, 270, 272, 271, 273, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	1113, 1077, 0, 0, 0, 280, 281, 1153, 282, 283,
	284, 285, 286, 287, 615, 1126, 0, 288, 1133, 289,
	1132, 0, 1143, 290, 291, 292, 293, 294, 295, 1079,
	1112, 1046, 296, 1173, 1174, 622, 0, 297, 298, 1119,
	0, 1100, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	1154, 321, 322, 323, 1103, 1101, 1102, 1109, 1105, 1104,
	1108, 324, 325, 326, 327, 328, 1136, 329, 1130, 1129,
	1050, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 1121, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 1056, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 1144, 1145,
	360, 1068, 267, 0, 0, 0, 0, 0, 361, 362,
	363, 1128, 0, 0, 0, 364, 0, 365, 0, 0,
	1155, 366, 367, 1141, 1142, 368, 369, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 1151, 0, 1078, 378,
	0, 379, 380, 381, 382, 383, 1114, 1115, 1118, 460,
	1157, 384, 385, 0, 386, 387, 388, 389, 0, 0,
	0, 2364, 390, 391, 392, 394, 0, 1156, 393, 1123,
	1124, 0, 1084, 0, 395, 396, 1158, 1116, 1159, 397,
	398, 399, 1160, 400, 0, 0, 0, 401, 402, 403,
	404, 405, 406, 0, 407, 409, 408, 0, 410, 1152,
	1161, 411, 412, 1162, 0, 413, 0, 0, 0, 414,
	415, 418, 1107, 1106, 416, 417, 419, 420, 0, 421,
	422, 424, 427, 423, 425, 426, 428, 441, 429, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	443, 0, 442, 1163, 444, 445, 446, 451, 453, 454,
	449, 450, 452, 455, 456, 448, 1164, 447, 1047, 269,
	1165, 457, 458, 1069, 1117, 459, 1131, 461, 462, 0,
	0, 463, 0, 0, 0, 465, 466, 467, 0, 0,
	468, 469, 644, 1166, 470, 1167, 1146, 471, 472, 464,
	473, 474, 475, 476, 477, 478, 479, 480, 0, 481,
	482, 646, 483, 484, 485, 647, 486, 487, 488, 1147,
	489, 649, 490, 491, 2363, 492, 493, 0, 494, 495,
	496, 497, 498, 499, 500, 1127, 501, 503, 502, 504,
	0, 505, 0, 506, 507, 508, 0, 0, 0, 0,
	509, 0, 511, 512, 513, 514, 510, 515, 516, 517,
	518, 0, 519, 520, 521, 1168, 522, 523, 524, 525,
	1057, 526, 0, 527, 528, 534, 535, 529, 530, 536,
	537, 538, 539, 540, 0, 542, 543, 541, 544, 545,
	546, 1110, 547, 548, 531, 532, 549, 550, 1169, 551,
	552, 553, 554, 555, 556, 1125, 0, 557, 0, 558,
	559, 560, 562, 533, 563, 568, 569, 1172, 564, 565,
	566, 567, 1148, 571, 572, 0, 573, 574, 1045, 570,
	561, 0, 575, 576, 577, 578, 579, 580, 581, 354,
	582, 0, 583, 1137, 1138, 1139, 1140, 0, 592, 0,
	584, 585, 586, 1149, 587, 1150, 1067, 588, 589, 590,
	591, 0, 593, 594, 0, 1051, 595, 596, 597, 599,
	600, 598, 601, 1111, 602, 0, 0, 603, 604, 605,
	661, 1134, 1171, 0, 607, 606, 608, 664, 0, 0,
	0, 0, 0, 609, 610, 665, 611, 612, 613, 1048,
	0, 0, 0, 0, 0, 0, 0, 1044, 0, 0,
	0, 0, 0, 0, 1042, 1043, 1089, 1061, 1062, 1063,
	1059, 1060, 1072, 1073, 0, 0, 0, 1071, 0, 0,
	0, 0, 0, 270, 272, 271, 273, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 1113,
	1077, 0, 0, 0, 280, 281, 1153, 282, 283, 284,
	285, 286, 287, 615, 1126, 0, 288, 1133, 289, 1132,
	0, 1143, 290, 291, 292, 293, 294, 295, 1079, 1112,
	1046, 296, 1173, 1174, 622, 0, 297, 298, 1119, 0,
	1100, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 1154,
	321, 322, 323, 1103, 1101, 1102, 1109, 1105, 1104, 1108,
	324, 325, 326, 327, 328, 1136, 329, 1130, 1129, 1050,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 1121, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 1056, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 1144, 1145, 360,
	1068, 267, 0, 0, 0, 0, 0, 361, 362, 363,
	1128, 0, 0, 0, 364, 0, 365, 0, 0, 1155,
	366, 367, 1141, 1142, 368, 369, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 1151, 0, 1078, 378, 0,
	379, 380, 381, 382, 383, 1114, 1115, 1118, 460, 1157,
	384, 385, 0, 386, 387, 388, 389, 0, 0, 0,
	268, 390, 391, 392, 394, 0, 1156, 393, 1123, 1124,
	0, 1084, 0, 395, 396, 1158, 1116, 1159, 397, 398,
	399, 1160, 400, 0, 0, 0, 401, 402, 403, 404,
	405, 406, 0, 407, 409, 408, 0, 410, 1152, 1161,
	411, 412, 1162, 0, 413, 0, 0, 0, 414, 415,
	418, 1107, 1106, 416, 417, 419, 420, 0, 421, 422,
	424, 427, 423, 425, 426, 428, 441, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 443,
	0, 442, 1163, 444, 445, 446, 451, 453, 454, 449,
	450, 452, 455, 456, 448, 1164, 447, 1047, 269, 1165,
	457, 458, 1069, 1117, 459, 1131, 461, 462, 0, 0,
	463, 0, 1052, 0, 465, 466, 467, 0, 0, 468,
	469, 644, 1166, 470, 1167, 1146, 471, 472, 464, 473,
	474, 475, 476, 477, 478, 479, 480, 0, 481, 482,
	646, 483, 484, 485, 647, 486, 487, 488, 1147, 489,
	649, 490, 491, 0, 492, 493, 0, 494, 495, 496,
	497, 498, 499, 500, 1127, 501, 503, 502, 504, 0,
	505, 0, 506, 507, 508, 0, 0, 0, 0, 509,
	0, 511, 512, 513, 514, 510, 515, 516, 517, 518,
	0, 519, 520, 521, 1168, 522, 523, 524, 525, 1057,
	526, 0, 527, 528, 534, 535, 529, 530, 536, 537,
	538, 539, 540, 0, 542, 543, 541, 544, 545, 546,
	1110, 547, 548, 531, 532, 549, 550, 1169, 551, 552,
	553, 554, 555, 556, 1125, 0, 557, 0, 558, 559,
	560, 562, 533, 563, 568, 569, 1172, 564, 565, 566,
	567, 1148, 571, 572, 0, 573, 574, 1045, 570, 561,
	0, 575, 576, 577, 578, 579, 580, 581, 354, 582,
	0, 583, 1137, 1138, 1139, 1140, 0, 592, 0, 584,
	585, 586, 1149, 587, 1150, 1067, 588, 589, 590, 591,
	0, 593, 594, 0, 1051, 595, 596, 597, 599, 600,
	598, 601, 1111, 602, 0, 0, 603, 604, 605, 661,
	1134, 1171, 0, 607, 606, 608, 664, 0, 0, 0,
	0, 0, 609, 610, 665, 611, 612, 613, 1048, 0,
	0, 0, 0, 0, 0, 0, 1044, 0, 0, 0,
	0, 0, 0, 1042, 1043, 1089, 1061, 1062, 1063, 1059,
	1060, 1072, 1073, 0, 0, 0, 1071, 0, 0, 0,
	0, 0, 270, 272, 271, 273, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 1113, 1077,
	0, 0, 0, 280, 281, 1153, 282, 283, 284, 285,
	286, 287, 615, 1126, 0, 288, 1133, 289, 1132, 0,
	1143, 290, 291, 292, 293, 294, 295, 1079, 1112, 1046,
	296, 1173, 1174, 622, 0, 297, 298, 1119, 0, 1100,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 4225, 317, 0, 318, 319, 320, 1154, 321,
	322, 323, 1103, 1101, 1102, 1109, 1105, 1104, 1108, 324,
	325, 326, 327, 328, 1136, 329, 1130, 1129, 1050, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 1121, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 1056, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 1144, 1145, 360, 1068,
	267, 0, 0, 0, 0, 0, 361, 362, 363, 1128,
	0, 0, 0, 364, 0, 365, 0, 0, 1155, 366,
	367, 1141, 1142, 368, 369, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 1151, 0, 1078, 378, 0, 379,
	380, 381, 382, 383, 1114, 1115, 1118, 460, 1157, 384,
	385, 0, 386, 387, 388, 389, 0, 0, 0, 268,
	390, 391, 392, 394, 0, 1156, 393, 1123, 1124, 0,
	1084, 0, 395, 396, 1158, 1116, 1159, 397, 398, 399,
	1160, 400, 0, 0, 0, 401, 402, 403, 404, 405,
	406, 0, 407, 409, 408, 0, 410, 1152, 1161, 411,
	412, 1162, 0, 413, 0, 0, 0, 414, 415, 418,
	1107, 1106, 416, 417, 419, 420, 0, 421, 422, 424,
	427, 423, 425, 426, 428, 441, 429, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 443, 0,
	442, 1163, 444, 445, 446, 451, 453, 454, 449, 450,
	452, 455, 456, 448, 1164, 447, 1047, 269, 1165, 457,
	458, 1069, 1117, 459, 1131, 461, 462, 0, 0, 463,
	0, 1052, 0, 465, 466, 467, 0, 0, 468, 469,
	644, 1166, 470, 1167, 1146, 471, 472, 464, 473, 474,
	475, 476, 477, 478, 479, 480, 0, 481, 482, 646,
	483, 484, 485, 647, 486, 487, 488, 1147, 489, 649,
	490, 491, 0, 492, 493, 0, 494, 495, 496, 497,
	498, 499, 500, 1127, 501, 503, 502, 504, 0, 505,
	0, 506, 507, 508, 0, 0, 0, 0, 509, 0,
	511, 512, 513, 514, 510, 515, 516, 517, 518, 0,
	519, 520, 521, 1168, 522, 523, 524, 525, 1057, 526,
	0, 527, 528, 534, 535, 529, 530, 536, 537, 538,
	539, 540, 0, 542, 543, 541, 544, 545, 546, 1110,
	547, 548, 531, 532, 549, 550, 1169, 551, 552, 553,
	554, 555, 556, 1125, 0, 557, 0, 558, 559, 560,
	562, 533, 563, 568, 569, 1172, 564, 565, 566, 567,
	1148, 571, 572, 0, 573, 574, 1045, 570, 561, 0,
	575, 576, 577, 578, 579, 580, 581, 354, 582, 0,
	583, 1137, 1138, 1139, 1140, 0, 592, 0, 584, 585,
	586, 1149, 587, 1150, 1067, 588, 589, 590, 591, 0,
	593, 594, 0, 1051, 595, 596, 597, 599, 600, 598,
	601, 1111, 602, 0, 0, 603, 604, 605, 661, 1134,
	1171, 0, 607, 606, 608, 664, 0, 0, 0, 0,
	0, 609, 610, 665, 611, 612, 613, 1048, 0, 0,
	0, 0, 0, 0, 0, 1044, 0, 0, 0, 0,
	0, 0, 1042, 1043, 1089, 1061, 1062, 1063, 1059, 1060,
	1072, 1073, 0, 0, 0, 1071, 0, 0, 0, 0,
	0, 270, 272, 271, 273, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 1113, 1077, 0,
	0, 0, 280, 281, 1153, 282, 283, 284, 285, 286,
	287, 615, 1126, 0, 288, 1133, 289, 1132, 0, 1143,
	290, 291, 292, 293, 294, 295, 1079, 1112, 1046, 296,
	1173, 1174, 622, 0, 297, 298, 1119, 0, 1100, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 1154, 321, 322,
	323, 1103, 1101, 1102, 1109, 1105, 1104, 1108, 324, 325,
	326, 327, 328, 1136, 329, 1130, 1129, 1050, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 1121, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 1056, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 1144, 1145, 360, 1068, 267,
	0, 0, 0, 0, 0, 361, 362, 363, 1128, 0,
	0, 0, 364, 0, 365, 0, 0, 1155, 366, 367,
	1141, 1142, 368, 369, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 1151, 0, 1078, 378, 0, 379, 380,
	381, 382, 383, 1114, 1115, 1118, 460, 1157, 384, 385,
	0, 386, 387, 388, 389, 0, 0, 0, 268, 390,
	391, 392, 394, 0, 1156, 393, 1123, 1124, 0, 1084,
	0, 395, 396, 1158, 1116, 1159, 397, 398, 399, 1160,
	400, 0, 0, 0, 401, 402, 403, 404, 405, 406,
	0, 407, 409, 408, 0, 410, 1152, 1161, 411, 412,
	1162, 0, 413, 0, 0, 0, 414, 415, 418, 1107,
	1106, 416, 417, 419, 420, 0, 421, 422, 424, 427,
	423, 425, 426, 428, 441, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 443, 0, 442,
	1163, 444, 445, 446, 451, 453, 454, 449, 450, 452,
	455, 456, 448, 1164, 447, 1047, 3843, 1165, 457, 458,
	1069, 1117, 459, 1131, 461, 462, 0, 0, 463, 0,
	0, 0, 465, 466, 467, 0, 0, 468, 469, 644,
	1166, 470, 1167, 1146, 471, 472, 464, 473, 474, 475,
	476, 477, 478, 479, 480, 0, 481, 482, 646, 483,
	484, 485, 647, 486, 487, 488, 1147, 489, 649, 490,
	491, 0, 492, 493, 0, 494, 495, 496, 497, 498,
	499, 500, 1127, 501, 503, 502, 504, 0, 505, 0,
	506, 507, 508, 0, 0, 0, 0, 509, 0, 511,
	512, 513, 514, 510, 515, 516, 517, 518, 0, 519,
	520, 521, 1168, 522, 523, 524, 525, 1057, 526, 0,
	527, 528, 534, 535, 529, 530, 536, 537, 538, 539,
	540, 0, 542, 543, 541, 544, 545, 546, 1110, 547,
	548, 531, 532, 549, 550, 1169, 551, 552, 553, 554,
	555, 556, 1125, 0, 557, 0, 558, 559, 560, 562,
	533, 563, 568, 569, 1172, 564, 565, 566, 567, 1148,
	571, 572, 0, 573, 574, 1045, 570, 561, 0, 575,
	576, 577, 578, 579, 580, 581, 354, 582, 0, 583,
	1137, 1138, 1139, 1140, 0, 592, 0, 584, 585, 586,
	1149, 587, 1150, 1067, 588, 589, 590, 591, 0, 593,
	594, 0, 1051, 595, 596, 597, 599, 600, 598, 601,
	1111, 602, 0, 0, 603, 604, 605, 661, 1134, 1171,
	0, 607, 606, 608, 664, 0, 0, 0, 0, 0,
	609, 610, 665, 611, 612, 613, 1048, 0, 0, 0,
	0, 0, 0, 0, 1044, 0, 0, 0, 0, 0,
	0, 1042, 1043, 1878, 0, 0, 0, 0, 0, 0,
	1073, 0, 0, 0, 1071, 1089, 1061, 1062, 1063, 1059,
	1060, 1072, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 270, 272, 271, 273, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 1113, 1077,
	0, 0, 0, 280, 281, 1153, 282, 283, 284, 285,
	286, 287, 615, 1126, 0, 288, 1133, 289, 1132, 0,
	1143, 290, 291, 292, 293, 294, 295, 1079, 1112, 1046,
	296, 1173, 1174, 622, 0, 297, 298, 1119, 0, 1100,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 1154, 321,
	322, 323, 1103, 1101, 1102, 1109, 1105, 1104, 1108, 324,
	325, 326, 327, 328, 1136, 329, 1130, 1129, 1050, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 1121, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 1056, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 1144, 1145, 360, 1068,
	267, 0, 0, 0, 0, 0, 361, 362, 363, 1128,
	0, 0, 0, 364, 0, 365, 0, 0, 1155, 366,
	367, 1141, 1142, 368, 369, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 1151, 0, 1078, 378, 0, 379,
	380, 381, 382, 383, 1114, 1115, 1118, 460, 1157, 384,
	385, 0, 386, 387, 388, 389, 0, 0, 0, 268,
	390, 391, 392, 394, 0, 1156, 393, 1123, 1124, 0,
	1084, 0, 395, 396, 1158, 1116, 1159, 397, 398, 399,
	1160, 400, 0, 0, 0, 401, 402, 403, 404, 405,
	406, 0, 407, 409, 408, 0, 410, 1152, 1161, 411,
	412, 1162, 0, 413, 0, 0, 0, 414, 415, 418,
	1107, 1106, 416, 417, 419, 420, 0, 421, 422, 424,
	427, 423, 425, 426, 428, 441, 429, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 443, 0,
	442, 1163, 444, 445, 446, 451, 453, 454, 449, 450,
	452, 455, 456, 448, 1164, 447, 1047, 269, 1165, 457,
	458, 1069, 1117, 459, 1131, 461, 462, 0, 0, 463,
	0, 0, 0, 465, 466, 467, 0, 0, 468, 469,
	644, 1166, 470, 1167, 1146, 471, 472, 464, 473, 474,
	475, 476, 477, 478, 479, 480, 0, 481, 482, 646,
	483, 484, 485, 647, 486, 487, 488, 1147, 489, 649,
	490, 491, 0, 492, 493, 0, 494, 495, 496, 497,
	498, 499, 500, 1127, 501, 503, 502, 504, 0, 505,
	0, 506, 507, 508, 0, 0, 0, 0, 509, 0,
	511, 512, 513, 514, 510, 515, 516, 517, 518, 0,
	519, 520, 521, 1168, 522, 523, 524, 525, 1057, 526,
	0, 527, 528, 534, 535, 529, 530, 536, 537, 538,
	539, 540, 0, 542, 543, 541, 544, 545, 546, 1110,
	547, 548, 531, 532, 549, 550, 1169, 551, 552, 553,
	554, 555, 556, 1125, 0, 557, 0, 558, 559, 560,
	562, 533, 563, 568, 569, 1172, 564, 565, 566, 567,
	1148, 571, 572, 0, 573, 574, 1045, 570, 561, 0,
	575, 576, 577, 578, 579, 580, 581, 354, 582, 0,
	583, 1137, 1138, 1139, 1140, 0, 592, 0, 584, 585,
	586, 1149, 587, 1150, 1067, 588, 589, 590, 591, 0,
	593, 594, 0, 1051, 595, 596, 597, 599, 600, 598,
	601, 1111, 602, 0, 0, 603, 604, 605, 661, 1134,
	1171, 3564, 607, 606, 608, 664, 0, 0, 0, 0,
	0, 609, 610, 665, 611, 612, 613, 1048, 0, 0,
	0, 0, 0, 0, 0, 1044, 0, 0, 0, 0,
	0, 0, 1042, 1043, 1089, 1061, 1062, 1063, 1059, 1060,
	1072, 1073, 0, 0, 0, 1071, 0, 0, 0, 0,
	0, 270, 272, 271, 273, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 1113, 1077, 0,
	0, 0, 280, 281, 1153, 282, 283, 284, 285, 286,
	287, 615, 1126, 0, 288, 1133, 289, 1132, 0, 1143,
	290, 291, 292, 293, 294, 295, 1079, 1112, 1046, 296,
	1173, 1174, 622, 0, 297, 298, 1119, 0, 1100, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 1154, 321, 322,
	323, 1103, 1101, 1102, 1109, 1105, 1104, 1108, 324, 325,
	326, 327, 328, 1136, 329, 1130, 1129, 1050, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 1121, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 1056, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 1144, 1145, 360, 1068, 267,
	0, 0, 0, 0, 0, 361, 362, 363, 1128, 0,
	0, 0, 364, 0, 365, 0, 0, 1155, 366, 367,
	1141, 1142, 368, 369, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 1151, 0, 1078, 378, 0, 379, 380,
	381, 382, 383, 1114, 1115, 1118, 460, 1157, 384, 385,
	0, 386, 387, 388, 389, 0, 0, 0, 268, 390,
	391, 392, 394, 0, 1156, 393, 1123, 1124, 0, 1084,
	0, 395, 396, 1158, 1116, 1159, 397, 398, 399, 1160,
	400, 0, 0, 0, 401, 402, 403, 404, 405, 406,
	0, 407, 409, 408, 0, 410, 1152, 1161, 411, 412,
	1162, 0, 413, 0, 0, 0, 414, 415, 418, 1107,
	1106, 416, 417, 419, 420, 0, 421, 422, 424, 427,
	423, 425, 426, 428, 441, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 443, 0, 442,
	1163, 444, 445, 446, 451, 453, 454, 449, 450, 452,
	455, 456, 448, 1164, 447, 1047, 269, 1165, 457, 458,
	1069, 1117, 459, 1131, 461, 462, 0, 0, 463, 0,
	0, 0, 465, 466, 467, 0, 0, 468, 469, 644,
	1166, 470, 1167, 1146, 471, 472, 464, 473, 474, 475,
	476, 477, 478, 479, 480, 0, 481, 482, 646, 483,
	484, 485, 647, 486, 487, 488, 1147, 489, 649, 490,
	491, 0, 492, 493, 0, 494, 495, 496, 497, 498,
	499, 500, 1127, 501, 503, 502, 504, 0, 505, 0,
	506, 507, 508, 0, 0, 0, 0, 509, 0, 511,
	512, 513, 514, 510, 515, 516, 517, 518, 0, 519,
	520, 521, 1168, 522, 523, 524, 525, 1057, 526, 0,
	527, 528, 534, 535, 529, 530, 536, 537, 538, 539,
	540, 0, 542, 543, 541, 544, 545, 546, 1110, 547,
	548, 531, 532, 549, 550, 1169, 551, 552, 553, 554,
	555, 556, 1125, 0, 557, 0, 558, 559, 560, 562,
	533, 563, 568, 569, 1172, 564, 565, 566, 567, 1148,
	571, 572, 0, 573, 574, 1045, 570, 561, 0, 575,
	576, 577, 578, 579, 580, 581, 354, 582, 0, 583,
	1137, 1138, 1139, 1140, 0, 592, 0, 584, 585, 586,
	1149, 587, 1150, 1067, 588, 589, 590, 591, 0, 593,
	594, 0, 1051, 595, 596, 597, 599, 600, 598, 601,
	1111, 602, 0, 0, 603, 604, 605, 661, 1134, 1171,
	0, 607, 606, 608, 664, 0, 0, 0, 0, 0,
	609, 610, 665, 611, 612, 613, 1048, 0, 0, 0,
	0, 0, 0, 0, 1044, 0, 0, 0, 0, 0,
	0, 1042, 1043, 1878, 0, 0, 0, 0, 0, 0,
	1073, 0, 0, 0, 1071, 1089, 1061, 1062, 1063, 1059,
	1060, 1072, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 270, 272, 271, 273, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 1113, 1077,
	0, 0, 0, 280, 281, 1153, 282, 283, 284, 285,
	286, 287, 615, 1126, 0, 288, 1133, 289, 1132, 0,
	1143, 290, 291, 292, 293, 294, 295, 1079, 1112, 1046,
	296, 1173, 1174, 622, 0, 297, 298, 1119, 0, 1100,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 1154, 321,
	322, 323, 1103, 1101, 1102, 1109, 1105, 1104, 1108, 324,
	325, 326, 327, 328, 1136, 329, 1130, 1129, 1050, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 1121, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 1056, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 1144, 1145, 360, 1068,
	267, 0, 0, 0, 0, 0, 361, 362, 363, 1128,
	0, 0, 0, 364, 0, 365, 0, 2583, 1155, 366,
	367, 1141, 1142, 368, 369, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 1151, 0, 1078, 378, 0, 379,
	380, 381, 382, 383, 1114, 1115, 1118, 460, 1157, 384,
	385, 0, 386, 387, 388, 389, 0, 0, 0, 268,
	390, 391, 392, 394, 0, 1156, 393, 1123, 1124, 0,
	1084, 0, 395, 396, 1158, 1116, 1159, 397, 398, 399,
	1160, 400, 0, 0, 0, 401, 402, 403, 404, 405,
	406, 0, 407, 409, 408, 0, 410, 1152, 1161, 411,
	412, 1162, 0, 413, 0, 0, 0, 414, 415, 418,
	1107, 1106, 416, 417, 419, 420, 0, 421, 422, 424,
	427, 423, 425, 426, 428, 441, 429, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 443, 0,
	442, 1163, 444, 445, 446, 451, 453, 454, 449, 450,
	452, 455, 456, 448, 1164, 447, 1047, 269, 1165, 457,
	458, 1069, 1117, 459, 1131, 461, 462, 0, 0, 463,
	0, 0, 0, 465, 466, 467, 0, 0, 468, 469,
	644, 1166, 470, 1167, 1146, 471, 472, 464, 473, 474,
	475, 476, 477, 478, 479, 480, 0, 481, 482, 646,
	483, 484, 485, 647, 486, 487, 488, 1147, 489, 649,
	490, 491, 0, 492, 493, 0, 494, 495, 496, 497,
	498, 499, 500, 1127, 501, 503, 502, 504, 0, 505,
	0, 506, 507, 508, 0, 0, 0, 0, 509, 0,
	511, 512, 513, 514, 510, 515, 516, 517, 518, 0,
	519, 520, 521, 1168, 522, 523, 524, 525, 1057, 526,
	0, 527, 528, 534, 535, 529, 530, 536, 537, 538,
	539, 540, 0, 542, 543, 541, 544, 545, 546, 1110,
	547, 548, 531, 532, 549, 550, 1169, 551, 552, 553,
	554, 555, 556, 1125, 0, 557, 0, 558, 559, 560,
	562, 533, 563, 568, 569, 1172, 564, 565, 566, 567,
	1148, 571, 572, 0, 573, 574, 1045, 570, 561, 0,
	575, 576, 577, 578, 579, 580, 581, 354, 582, 0,
	583, 1137, 1138, 1139, 1140, 0, 592, 0, 584, 585,
	586, 1149, 587, 1150, 1067, 588, 589, 590, 591, 0,
	593, 594, 0, 1051, 595, 596, 597, 599, 600, 598,
	601, 1111, 602, 0, 0, 603, 604, 605, 661, 1134,
	1171, 0, 607, 606, 608, 664, 0, 0, 0, 0,
	0, 609, 610, 665, 611, 612, 613, 1048, 0, 0,
	0, 0, 0, 0, 0, 1044, 0, 0, 0, 0,
	0, 0, 1042, 1043, 1089, 1061, 1062, 1063, 1059, 1060,
	1072, 1073, 0, 0, 0, 1071, 0, 0, 0, 0,
	0, 270, 272, 271, 273, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 1113, 1077, 0,
	0, 0, 280, 281, 1153, 282, 283, 284, 285, 286,
	287, 615, 1126, 0, 288, 1133, 289, 1132, 0, 1143,
	290, 291, 292, 293, 294, 295, 1079, 1112, 1046, 296,
	1173, 1174, 622, 0, 297, 298, 1119, 0, 1100, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 1154, 321, 322,
	323, 1103, 1101, 1102, 1109, 1105, 1104, 1108, 324, 325,
	326, 327, 328, 1136, 329, 1130, 1129, 1050, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 1121, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 1056, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 1144, 1145, 360, 1068, 267,
	0, 0, 0, 0, 0, 361, 362, 363, 1128, 0,
	0, 0, 364, 0, 365, 0, 0, 1155, 366, 367,
	1141, 1142, 368, 369, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 1151, 0, 1078, 378, 0, 379, 380,
	381, 382, 383, 1114, 1115, 1118, 460, 1157, 384, 385,
	0, 386, 387, 388, 389, 0, 0, 0, 268, 390,
	391, 392, 394, 0, 1156, 393, 1123, 1124, 0, 1084,
	0, 395, 396, 1158, 1116, 1159, 397, 398, 399, 1160,
	400, 0, 0, 0, 401, 402, 403, 404, 405, 406,
	0, 407, 409, 408, 0, 410, 1152, 1161, 411, 412,
	1162, 0, 413, 0, 0, 0, 414, 415, 418, 1107,
	1106, 416, 417, 419, 420, 0, 421, 422, 424, 427,
	423, 425, 426, 428, 441, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 443, 0, 442,
	1163, 444, 445, 446, 451, 453, 454, 449, 450, 452,
	455, 456, 448, 1164, 447, 1047, 269, 1165, 457, 458,
	1069, 1117, 459, 1131, 461, 462, 0, 0, 463, 0,
	0, 0, 465, 466, 467, 0, 0, 468, 469, 644,
	1166, 470, 1167, 1146, 471, 472, 464, 473, 474, 475,
	476, 477, 478, 479, 480, 0, 481, 482, 646, 483,
	484, 485, 647, 486, 487, 488, 1147, 489, 649, 490,
	491, 0, 492, 493, 0, 494, 495, 496, 497, 498,
	499, 500, 1127, 501, 503, 502, 504, 0, 505, 0,
	506, 507, 508, 0, 0, 0, 0, 509, 0, 511,
	512, 513, 514, 510, 515, 516, 517, 518, 0, 519,
	520, 521, 1168, 522, 523, 524, 525, 1057, 526, 0,
	527, 528, 534, 535, 529, 530, 536, 537, 538, 539,
	540, 0, 542, 543, 541, 544, 545, 546, 1110, 547,
	548, 531, 532, 549, 550, 1169, 551, 552, 553, 554,
	555, 556, 1125, 0, 557, 0, 558, 559, 560, 562,
	533, 563, 568, 569, 1172, 564, 565, 566, 567, 1148,
	571, 572, 0, 573, 574, 1045, 570, 561, 0, 575,
	576, 577, 578, 579, 580, 581, 354, 582, 0, 583,
	1137, 1138, 1139, 1140, 0, 592, 0, 584, 585, 586,
	1149, 587, 1150, 1067, 588, 589, 590, 591, 0, 593,
	594, 0, 1051, 595, 596, 597, 599, 600, 598, 601,
	1111, 602, 0, 0, 603, 604, 605, 661, 1134, 1171,
	0, 607, 606, 608, 664, 0, 0, 0, 0, 0,
	609, 610, 665, 611, 612, 613, 1048, 0, 0, 0,
	0, 0, 0, 0, 1044, 0, 0, 0, 0, 0,
	0, 1042, 1043, 0, 0, 0, 0, 0, 0, 0,
	1073, 1808, 0, 2588, 1071, 1089, 1061, 1062, 1063, 1059,
	1060, 1072, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 270, 272, 271, 273, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 1113, 1077,
	0, 0, 0, 280, 281, 1153, 282, 283, 284, 285,
	286, 287, 615, 1126, 0, 288, 1133, 289, 1132, 0,
	1143, 290, 291, 292, 293, 294, 295, 1079, 1112, 1046,
	296, 1173, 1174, 622, 0, 297, 298, 1119, 0, 1100,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 1154, 321,
	322, 323, 1103, 1101, 1102, 1109, 1105, 1104, 1108, 324,
	325, 326, 327, 328, 1136, 329, 1130, 1129, 1050, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 1121, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 1056, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 1144, 1145, 360, 1068,
	267, 0, 0, 0, 0, 0, 361, 362, 363, 1128,
	0, 0, 0, 364, 0, 365, 0, 0, 1155, 366,
	367, 1141, 1142, 368, 369, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 1151, 0, 1078, 378, 0, 379,
	380, 381, 382, 383, 1114, 1115, 1118, 460, 1157, 384,
	385, 0, 386, 387, 388, 389, 0, 0, 0, 268,
	390, 391, 392, 394, 0, 1156, 393, 1123, 1124, 0,
	1084, 0, 395, 396, 1158, 1116, 1159, 397, 398, 399,
	1160, 400, 0, 0, 0, 401, 402, 403, 404, 405,
	406, 0, 407, 409, 408, 0, 410, 1152, 1161, 411,
	412, 1162, 0, 413, 0, 0, 0, 414, 415, 418,
	1107, 1106, 416, 417, 419, 420, 0, 421, 422, 424,
	427, 423, 425, 426, 428, 441, 429, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 443, 0,
	442, 1163, 444, 445, 446, 451, 453, 454, 449, 450,
	452, 455, 456, 448, 1164, 447, 1047, 269, 1165, 457,
	458, 1069, 1117, 459, 1131, 461, 462, 0, 0, 463,
	0, 0, 0, 465, 466, 467, 0, 0, 468, 469,
	644, 1166, 470, 1167, 1146, 471, 472, 464, 473, 474,
	475, 476, 477, 478, 479, 480, 0, 481, 482, 646,
	483, 484, 485, 647, 486, 487, 488, 1147, 489, 649,
	490, 491, 0, 492, 493, 0, 494, 495, 496, 497,
	498, 499, 500, 1127, 501, 503, 502, 504, 0, 505,
	0, 506, 507, 508, 0, 0, 0, 0, 509, 0,
	511, 512, 513, 514, 510, 515, 516, 517, 518, 0,
	519, 520, 521, 1168, 522, 523, 524, 525, 1057, 526,
	0, 527, 528, 534, 535, 529, 530, 536, 537, 538,
	539, 540, 0, 542, 543, 541, 544, 545, 546, 1110,
	547, 548, 531, 532, 549, 550, 1169, 551, 552, 553,
	554, 555, 556, 1125, 0, 557, 0, 558, 559, 560,
	562, 533, 563, 568, 569, 1172, 564, 565, 566, 567,
	1148, 571, 572, 0, 573, 574, 1045, 570, 561, 0,
	575, 576, 577, 578, 579, 580, 581, 354, 582, 0,
	583, 1137, 1138, 1139, 1140, 0, 592, 0, 584, 585,
	586, 1149, 587, 1150, 1067, 588, 589, 590, 591, 0,
	593, 594, 0, 1051, 595, 596, 597, 599, 600, 598,
	601, 1111, 602, 0, 0, 603, 604, 605, 661, 1134,
	1171, 0, 607, 606, 608, 664, 0, 0, 0, 0,
	0, 609, 610, 665, 611, 612, 613, 1048, 0, 0,
	0, 0, 0, 0, 0, 1044, 0, 0, 0, 0,
	0, 0, 1042, 1043, 0, 0, 0, 0, 0, 0,
	0, 1073, 0, 0, 2586, 1071, 1089, 1061, 1062, 1063,
	1059, 1060, 1072, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 270, 272, 271, 273, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 1113,
	1077, 0, 0, 0, 280, 281, 1153, 282, 283, 284,
	285, 286, 287, 615, 1126, 0, 288, 1133, 289, 1132,
	0, 1143, 290, 291, 292, 293, 294, 295, 1079, 1112,
	1046, 296, 1173, 1174, 622, 0, 297, 298, 1119, 0,
	1100, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 1154,
	321, 322, 323, 1103, 1101, 1102, 1109, 1105, 1104, 1108,
	324, 325, 326, 327, 328, 1136, 329, 1130, 1129, 1050,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 1121, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 1056, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 1144, 1145, 360,
	1068, 267, 0, 0, 0, 0, 0, 361, 362, 363,
	1128, 0, 0, 0, 364, 0, 365, 0, 0, 1155,
	366, 367, 1141, 1142, 368, 369, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 1151, 0, 1078, 378, 0,
	379, 380, 381, 382, 383, 1114, 1115, 1118, 460, 1157,
	384, 385, 0, 386, 387, 388, 389, 0, 0, 0,
	268, 390, 391, 392, 394, 0, 1156, 393, 1123, 1124,
	0, 1084, 0, 395, 396, 1158, 1116, 1159, 397, 398,
	399, 1160, 400, 0, 0, 0, 401, 402, 403, 404,
	405, 406, 0, 407, 409, 408, 0, 410, 1152, 1161,
	411, 412, 1162, 0, 413, 0, 0, 0, 414, 415,
	418, 1107, 1106, 416, 417, 419, 420, 0, 421, 422,
	424, 427, 423, 425, 426, 428, 441, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 443,
	0, 442, 1163, 444, 445, 446, 451, 453, 454, 449,
	450, 452, 455, 456, 448, 1164, 447, 1047, 269, 1165,
	457, 458, 1069, 1117, 459, 1131, 461, 462, 0, 0,
	463, 0, 0, 0, 465, 466, 467, 0, 0, 468,
	469, 644, 1166, 470, 1167, 1146, 471, 472, 464, 473,
	474, 475, 476, 477, 478, 479, 480, 0, 481, 482,
	646, 483, 484, 485, 647, 486, 487, 488, 1147, 489,
	649, 490, 491, 0, 492, 493, 0, 494, 495, 496,
	497, 498, 499, 500, 1127, 501, 503, 502, 504, 0,
	505, 0, 506, 507, 508, 0, 0, 0, 0, 509,
	0, 511, 512, 513, 514, 510, 515, 516, 517, 518,
	0, 519, 520, 521, 1168, 522, 523, 524, 525, 1057,
	526, 0, 527, 528, 534, 535, 529, 530, 536, 537,
	538, 539, 540, 0, 542, 543, 541, 544, 545, 546,
	1110, 547, 548, 531, 532, 549, 550, 1169, 551, 552,
	553, 554, 555, 556, 1125, 0, 557, 0, 558, 559,
	560, 562, 533, 563, 568, 569, 1172, 564, 565, 566,
	567, 1148, 571, 572, 0, 573, 574, 1045, 570, 561,
	0, 575, 576, 577, 578, 579, 580, 581, 354, 582,
	0, 583, 1137, 1138, 1139, 1140, 0, 592, 0, 584,
	585, 586, 1149, 587, 1150, 1067, 588, 589, 590, 591,
	0, 593, 594, 0, 1051, 595, 596, 597, 599, 600,
	598, 601, 1111, 602, 0, 0, 603, 604, 605, 661,
	1134, 1171, 0, 607, 606, 608, 664, 0, 0, 0,
	0, 0, 609, 610, 665, 611, 612, 613, 1048, 0,
	0, 0, 0, 0, 0, 0, 1044, 0, 0, 0,
	0, 0, 0, 1042, 1043, 0, 0, 0, 0, 0,
	0, 0, 1073, 0, 0, 2574, 1071, 1089, 1061, 1062,
	1063, 1059, 1060, 1072, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 270, 272, 271, 273, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	1113, 1077, 0, 0, 0, 280, 281, 1153, 282, 283,
	284, 285, 286, 287, 615, 1126, 0, 288, 1133, 289,
	1132, 0, 1143, 290, 291, 292, 293, 294, 295, 1079,
	1112, 1046, 296, 1173, 1174, 622, 0, 297, 298, 1119,
	0, 1100, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	1154, 321, 322, 323, 1103, 1101, 1102, 1109, 1105, 1104,
	1108, 324, 325, 326, 327, 328, 1136, 329, 1130, 1129,
	1050, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 1121, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 1056, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 1144, 1145,
	360, 1068, 267, 0, 0, 0, 0, 0, 361, 362,
	363, 1128, 0, 0, 0, 364, 0, 365, 0, 0,
	1155, 366, 367, 1141, 1142, 368, 369, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 1151, 0, 1078, 378,
	0, 379, 380, 381, 382, 383, 1114, 1115, 1118, 460,
	1157, 384, 385, 0, 386, 387, 388, 389, 0, 0,
	0, 268, 390, 391, 392, 394, 0, 1156, 393, 1123,
	1124, 0, 1084, 0, 395, 396, 1158, 1116, 1159, 397,
	398, 399, 1160, 400, 0, 0, 0, 401, 402, 403,
	404, 405, 406, 0, 407, 409, 408, 0, 410, 1152,
	1161, 411, 412, 1162, 0, 413, 0, 0, 0, 414,
	415, 418, 1107, 1106, 416, 417, 419, 420, 0, 421,
	422, 424, 427, 423, 425, 426, 428, 441, 429, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	443, 0, 442, 1163, 444, 445, 446, 451, 453, 454,
	449, 450, 452, 455, 456, 448, 1164, 447, 1047, 269,
	1165, 457, 458, 1069, 1117, 459, 1131, 461, 462, 0,
	0, 463, 0, 0, 0, 465, 466, 467, 0, 0,
	468, 469, 644, 1166, 470, 1167, 1146, 471, 472, 464,
	473, 474, 475, 476, 477, 478, 479, 480, 0, 481,
	482, 646, 483, 484, 485, 647, 486, 487, 488, 1147,
	489, 649, 490, 491, 0, 492, 493, 0, 494, 495,
	496, 497, 498, 499, 500, 1127, 501, 503, 502, 504,
	0, 505, 0, 506, 507, 508, 0, 0, 0, 0,
	509, 0, 511, 512, 513, 514, 510, 515, 516, 517,
	518, 0, 519, 520, 521, 1168, 522, 523, 524, 525,
	1057, 526, 0, 527, 528, 534, 535, 529, 530, 536,
	537, 538, 539, 540, 0, 542, 543, 541, 544, 545,
	546, 1110, 547, 548, 531, 532, 549, 550, 1169, 551,
	552, 553, 554, 555, 556, 1125, 0, 557, 0, 558,
	559, 560, 562, 533, 563, 568, 569, 1172, 564, 565,
	566, 567, 1148, 571, 572, 0, 573, 574, 1045, 570,
	561, 0, 575, 576, 577, 578, 579, 580, 581, 354,
	582, 0, 583, 1137, 1138, 1139, 1140, 0, 592, 0,
	584, 585, 586, 1149, 587, 1150, 1067, 588, 589, 590,
	591, 0, 593, 594, 0, 1051, 595, 596, 597, 599,
	600, 598, 601, 1111, 602, 0, 0, 603, 604, 605,
	661, 1134, 1171, 0, 607, 606, 608, 664, 0, 0,
	0, 0, 0, 609, 610, 665, 611, 612, 613, 1048,
	0, 0, 0, 0, 0, 0, 0, 1044, 0, 0,
	0, 0, 0, 0, 1042, 1043, 0, 0, 0, 0,
	0, 0, 0, 1073, 0, 0, 2563, 1071, 1089, 1061,
	1062, 1063, 1059, 1060, 1072, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 270, 272, 271, 273, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 1113, 1077, 0, 0, 0, 280, 281, 1153, 282,
	283, 284, 285, 286, 287, 615, 1126, 0, 288, 1133,
	289, 1132, 0, 1143, 290, 291, 292, 293, 294, 295,
	1079, 1112, 1046, 296, 1173, 1174, 622, 0, 297, 298,
	1119, 0, 1100, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 1154, 321, 322, 323, 1103, 1101, 1102, 1109, 1105,
	1104, 1108, 324, 325, 326, 327, 328, 1136, 329, 1130,
	1129, 1050, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 1121, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 1056, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 1144,
	1145, 360, 1068, 267, 0, 0, 0, 0, 0, 361,
	362, 363, 1128, 0, 0, 0, 364, 0, 365, 0,
	0, 1155, 366, 367, 1141, 1142, 368, 369, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 1151, 0, 1078,
	378, 0, 379, 380, 381, 382, 383, 1114, 1115, 1118,
	460, 1157, 384, 385, 0, 386, 387, 388, 389, 0,
	0, 0, 268, 390, 391, 392, 394, 0, 1156, 393,
	1123, 1124, 0, 1084, 0, 395, 396, 1158, 1116, 1159,
	397, 398, 399, 1160, 400, 0, 0, 0, 401, 402,
	403, 404, 405, 406, 0, 407, 409, 408, 0, 410,
	1152, 1161, 411, 412, 1162, 0, 413, 0, 0, 0,
	414, 415, 418, 1107, 1106, 416, 417, 419, 420, 0,
	421, 422, 424, 427, 423, 425, 426, 428, 441, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 443, 0, 442, 1163, 444, 445, 446, 451, 453,
	454, 449, 450, 452, 455, 456, 448, 1164, 447, 1047,
	269, 1165, 457, 458, 1069, 1117, 459, 1131, 461, 462,
	0, 0, 463, 0, 0, 0, 465, 466, 467, 0,
	0, 468, 469, 644, 1166, 470, 1167, 1146, 471, 472,
	464, 473, 474, 475, 476, 477, 478, 479, 480, 0,
	481, 482, 646, 483, 484, 485, 647, 486, 487, 488,
	1147, 489, 649, 490, 491, 0, 492, 493, 0, 494,
	495, 496, 497, 498, 499, 500, 1127, 501, 503, 502,
	504, 0, 505, 0, 506, 507, 508, 0, 0, 0,
	0, 509, 0, 511, 512, 513, 514, 510, 515, 516,
	517, 518, 0, 519, 520, 521, 1168, 522, 523, 524,
	525, 1057, 526, 0, 527, 528, 534, 535, 529, 530,
	536, 537, 538, 539, 540, 0, 542, 543, 541, 544,
	545, 546, 1110, 547, 548, 531, 532, 549, 550, 1169,
	551, 552, 553, 554, 555, 556, 1125, 0, 557, 0,
	558, 559, 560, 562, 533, 563, 568, 569, 1172, 564,
	565, 566, 567, 1148, 571, 572, 0, 573, 574, 1045,
	570, 561, 0, 575, 576, 577, 578, 579, 580, 581,
	354, 582, 0, 583, 1137, 1138, 1139, 1140, 0, 592,
	0, 584, 585, 586, 1149, 587, 1150, 1067, 588, 589,
	590, 591, 0, 593, 594, 0, 1051, 595, 596, 597,
	599, 600, 598, 601, 1111, 602, 0, 0, 603, 604,
	605, 661, 1134, 1171, 0, 607, 606, 608, 664, 0,
	0, 0, 0, 0, 609, 610, 665, 611, 612, 613,
	1048, 0, 0, 0, 0, 0, 0, 0, 1044, 0,
	0, 0, 0, 0, 0, 1042, 1043, 0, 0, 0,
	0, 0, 0, 0, 1073, 0, 0, 2561, 1071, 2552,
	2559, 1062, 1063, 1059, 1060, 1072, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 272, 271, 273,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 1113, 1077, 0, 0, 0, 280, 281, 1153,
	282, 283, 284, 285, 286, 287, 615, 1126, 0, 288,
	1133, 289, 1132, 0, 1143, 290, 291, 292, 293, 294,
	295, 1079, 1112, 1046, 296, 1173, 1174, 622, 0, 297,
	298, 1119, 0, 1100, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 1154, 321, 322, 323, 1103, 1101, 1102, 1109,
	1105, 1104, 1108, 324, 325, 326, 327, 328, 1136, 2555,
	1130, 1129, 1050, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 1121, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 1056,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	1144, 1145, 360, 1068, 267, 0, 0, 0, 0, 0,
	361, 362, 363, 1128, 0, 0, 0, 364, 0, 365,
	0, 0, 1155, 366, 367, 1141, 1142, 368, 369, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 1151, 0,
	1078, 378, 0, 379, 380, 381, 2556, 383, 1114, 1115,
	1118, 460, 1157, 384, 385, 0, 386, 387, 388, 389,
	0, 0, 0, 268, 390, 391, 392, 394, 0, 1156,
	393, 1123, 1124, 0, 1084, 0, 395, 396, 1158, 1116,
	1159, 397, 398, 399, 1160, 400, 0, 0, 0, 401,
	402, 403, 404, 405, 406, 0, 407, 409, 408, 0,
	410, 1152, 1161, 411, 412, 1162, 0, 413, 0, 0,
	0, 414, 415, 418, 1107, 1106, 416, 417, 419, 420,
	0, 421, 422, 424, 427, 423, 425, 2557, 428, 2554,
	429, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 443, 0, 442, 1163, 444, 445, 446, 451,
	453, 454, 449, 450, 452, 455, 456, 448, 1164, 447,
	1047, 269, 1165, 457, 458, 1069, 1117, 459, 1131, 461,
	462, 0, 0, 463, 0, 0, 0, 465, 466, 467,
	0, 0, 468, 469, 644, 1166, 470, 1167, 1146, 471,
	472, 464, 473, 474, 475, 476, 477, 478, 479, 480,
	0, 481, 482, 646, 483, 484, 485, 647, 486, 487,
	488, 1147, 489, 649, 490, 491, 0, 492, 493, 0,
	494, 495, 496, 497, 498, 499, 500, 1127, 501, 503,
	502, 504, 0, 505, 0, 506, 507, 508, 0, 0,
	0, 0, 509, 0, 511, 512, 513, 514, 510, 515,
	516, 517, 518, 0, 519, 520, 521, 1168, 522, 523,
	524, 525, 1057, 526, 0, 527, 528, 534, 535, 529,
	530, 536, 537, 538, 539, 2558, 0, 542, 543, 541,
	544, 545, 546, 1110, 547, 548, 531, 532, 549, 550,
	1169, 551, 552, 553, 554, 555, 556, 1125, 0, 557,
	0, 558, 559, 560, 562, 533, 563, 568, 569, 1172,
	564, 565, 566, 567, 1148, 571, 572, 0, 573, 574,
	1045, 570, 561, 0, 575, 576, 577, 578, 579, 580,
	581, 354, 582, 0, 583, 1137, 1138, 1139, 1140, 0,
	592, 0, 584, 585, 586, 1149, 587, 1150, 1067, 588,
	589, 590, 591, 0, 593, 594, 0, 1051, 595, 596,
	597, 599, 600, 598, 601, 1111, 602, 0, 0, 603,
	604, 605, 661, 1134, 1171, 0, 607, 606, 608, 664,
	0, 0, 0, 0, 0, 609, 610, 665, 611, 2553,
	613, 1048, 0, 0, 0, 0, 0, 0, 0, 1044,
	0, 0, 0, 0, 0, 0, 1042, 1043, 0, 0,
	0, 0, 0, 0, 0, 1073, 0, 0, 2549, 1071,
	2552, 2559, 1062, 1063, 1059, 1060, 1072, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 270, 272, 271,
	273, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 1113, 1077, 0, 0, 0, 280, 281,
	1153, 282, 283, 284, 285, 286, 287, 615, 1126, 0,
	288, 1133, 289, 1132, 0, 1143, 290, 291, 292, 293,
	294, 295, 1079, 1112, 1046, 296, 1173, 1174, 622, 0,
	297, 298, 1119, 0, 1100, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 1154, 321, 322, 323, 1103, 1101, 1102,
	1109, 1105, 1104, 1108, 324, 325, 326, 327, 328, 1136,
	2555, 1130, 1129, 1050, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 1121, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	1056, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 1144, 1145, 360, 1068, 267, 0, 0, 0, 0,
	0, 361, 362, 363, 1128, 0, 0, 0, 364, 0,
	365, 0, 0, 1155, 366, 367, 1141, 1142, 368, 369,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 1151,
	0, 1078, 378, 0, 379, 380, 381, 2556, 383, 1114,
	1115, 1118, 460, 1157, 384, 385, 0, 386, 387, 388,
	389, 0, 0, 0, 268, 390, 391, 392, 394, 0,
	1156, 393, 1123, 1124, 0, 1084, 0, 395, 396, 1158,
	1116, 1159, 397, 398, 399, 1160, 400, 0, 0, 0,
	401, 402, 403, 404, 405, 406, 0, 407, 409, 408,
	0, 410, 1152, 1161, 411, 412, 1162, 0, 413, 0,
	0, 0, 414, 415, 418, 1107, 1106, 416, 417, 419,
	420, 0, 421, 422, 424, 427, 423, 425, 2557, 428,
	2554, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 443, 0, 442, 1163, 444, 445, 446,
	451, 453, 454, 449, 450, 452, 455, 456, 448, 1164,
	447, 1047, 269, 1165, 457, 458, 1069, 1117, 459, 1131,
	461, 462, 0, 0, 463, 0, 0, 0, 465, 466,
	467, 0, 0, 468, 469, 644, 1166, 470, 1167, 1146,
	471, 472, 464, 473, 474, 475, 476, 477, 478, 479,
	480, 0, 481, 482, 646, 483, 484, 485, 647, 486,
	487, 488, 1147, 489, 649, 490, 491, 0, 492, 493,
	0, 494, 495, 496, 497, 498, 499, 500, 1127, 501,
	503, 502, 504, 0, 505, 0, 506, 507, 508, 0,
	0, 0, 0, 509, 0, 511, 512, 513, 514, 510,
	515, 516, 517, 518, 0, 519, 520, 521, 1168, 522,
	523, 524, 525, 1057, 526, 0, 527, 528, 534, 535,
	529, 530, 536, 537, 538, 539, 2558, 0, 542, 543,
	541, 544, 545, 546, 1110, 547, 548, 531, 532, 549,
	550, 1169, 551, 552, 553, 554, 555, 556, 1125, 0,
	557, 0, 558, 559, 560, 562, 533, 563, 568, 569,
	1172, 564, 565, 566, 567, 1148, 571, 572, 0, 573,
	574, 1045, 570, 561, 0, 575, 576, 577, 578, 579,
	580, 581, 354, 582, 0, 583, 1137, 1138, 1139, 1140,
	0, 592, 0, 584, 585, 586, 1149, 587, 1150, 1067,
	588, 589, 590, 591, 0, 593, 594, 0, 1051, 595,
	596, 597, 599, 600, 598, 601, 1111, 602, 0, 0,
	603, 604, 605, 661, 1134, 1171, 0, 607, 606, 608,
	664, 0, 0, 0, 0, 0, 609, 610, 665, 611,
	2553, 613, 1048, 0, 0, 0, 0, 0, 0, 0,
	1044, 0, 0, 0, 0, 0, 0, 1042, 1043, 1089,
	1061, 1062, 1063, 1059, 1060, 1072, 1073, 0, 0, 0,
	1071, 0, 0, 0, 0, 0, 270, 272, 271, 273,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 1113, 1077, 0, 0, 0, 280, 281, 1153,
	282, 283, 284, 285, 286, 287, 615, 1126, 0, 288,
	1133, 289, 1132, 0, 1143, 290, 291, 292, 293, 294,
	295, 1079, 1112, 1046, 296, 1173, 1174, 622, 0, 297,
	298, 1119, 0, 1100, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 1154, 321, 322, 323, 1103, 1101, 1102, 1109,
	1105, 1104, 1108, 324, 325, 326, 327, 328, 1136, 329,
	1130, 1129, 1050, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 1121, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 1056,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	1144, 1145, 360, 1068, 267, 0, 0, 0, 0, 0,
	361, 362, 363, 1128, 0, 0, 0, 364, 0, 365,
	0, 0, 1155, 366, 367, 1141, 1142, 368, 369, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 1151, 0,
	1078, 378, 0, 379, 380, 381, 382, 383, 1114, 1115,
	1118, 460, 1157, 384, 385, 0, 386, 387, 388, 389,
	0, 0, 0, 268, 390, 391, 392, 394, 0, 1156,
	393, 1123, 1124, 0, 1084, 0, 395, 396, 1158, 1116,
	1159, 397, 398, 399, 1160, 400, 0, 0, 0, 401,
	402, 403, 404, 405, 406, 0, 407, 409, 408, 0,
	410, 1152, 1161, 411, 412, 1162, 0, 413, 0, 0,
	0, 414, 415, 418, 1107, 1106, 416, 417, 419, 420,
	0, 421, 422, 424, 427, 423, 425, 426, 428, 441,
	429, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 443, 0, 442, 1163, 444, 445, 446, 451,
	453, 454, 449, 450, 452, 455, 456, 448, 1164, 447,
	1047, 269, 1165, 457, 458, 1069, 1117, 459, 1131, 461,
	462, 0, 0, 463, 0, 0, 0, 465, 466, 467,
	0, 0, 468, 469, 644, 1166, 470, 1167, 1146, 471,
	472, 464, 473, 474, 475, 476, 477, 478, 479, 480,
	0, 481, 482, 646, 483, 484, 485, 647, 486, 487,
	488, 1147, 489, 649, 490, 491, 0, 492, 493, 0,
	494, 495, 496, 497, 498, 499, 500, 1127, 501, 503,
	502, 504, 0, 505, 0, 506, 507, 508, 0, 0,
	0, 0, 509, 0, 511, 512, 513, 514, 510, 515,
	516, 517, 518, 0, 519, 520, 521, 1168, 522, 523,
	524, 525, 1057, 526, 0, 527, 528, 534, 535, 529,
	530, 536, 537, 538, 539, 540, 0, 542, 543, 541,
	544, 545, 546, 1110, 547, 548, 531, 532, 549, 550,
	1169, 551, 552, 553, 554, 555, 556, 1125, 0, 557,
	0, 558, 559, 560, 562, 533, 563, 568, 569, 1172,
	564, 565, 566, 567, 1148, 571, 572, 0, 573, 574,
	1045, 570, 561, 0, 575, 576, 577, 578, 579, 580,
	581, 354, 582, 0, 583, 1137, 1138, 1139, 1140, 0,
	592, 0, 584, 585, 586, 1149, 587, 1150, 1067, 588,
	589, 590, 591, 0, 593, 594, 0, 1051, 595, 596,
	597, 599, 600, 598, 601, 1111, 602, 0, 0, 603,
	604, 605, 661, 1134, 1171, 0, 607, 606, 608, 664,
	0, 0, 0, 0, 0, 609, 610, 665, 611, 612,
	613, 1048, 0, 0, 0, 0, 0, 0, 0, 1044,
	0, 0, 0, 0, 0, 0, 1042, 1043, 0, 0,
	0, 0, 0, 1816, 0, 1073, 0, 0, 0, 1071,
	1089, 1061, 1062, 1063, 1059, 1060, 1072, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 270, 272, 271,
	273, 274, 275, 276, 277, 2343, 278, 279, 0, 0,
	0, 0, 0, 1113, 1077, 0, 0, 0, 280, 281,
	1153, 282, 283, 284, 285, 286, 287, 615, 1126, 0,
	288, 1133, 289, 1132, 0, 1143, 290, 291, 292, 293,
	294, 295, 1079, 1112, 1046, 296, 1173, 1174, 622, 0,
	297, 298, 1119, 0, 1100, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 1154, 321, 322, 323, 1103, 1101, 1102,
	1109, 1105, 1104, 1108, 324, 325, 326, 327, 328, 1136,
	329, 1130, 1129, 1050, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 1121, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	1056, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 1144, 1145, 360, 1068, 267, 0, 0, 0, 0,
	0, 361, 362, 363, 1128, 0, 0, 0, 364, 0,
	365, 0, 0, 1155, 366, 367, 1141, 1142, 368, 369,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 1151,
	0, 1078, 378, 0, 379, 380, 381, 382, 383, 1114,
	1115, 1118, 460, 1157, 384, 385, 0, 386, 387, 388,
	389, 0, 0, 0, 268, 390, 391, 392, 394, 0,
	1156, 393, 1123, 1124, 0, 1084, 0, 395, 396, 1158,
	1116, 1159, 397, 398, 399, 1160, 400, 0, 0, 0,
	401, 402, 403, 404, 405, 406, 0, 407, 409, 408,
	0, 410, 1152, 1161, 411, 412, 1162, 0, 413, 0,
	0, 0, 414, 415, 418, 1107, 1106, 416, 417, 419,
	420, 0, 421, 422, 424, 427, 423, 425, 426, 428,
	441, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 443, 0, 442, 1163, 444, 445, 446,
	451, 453, 454, 449, 450, 452, 455, 456, 448, 1164,
	447, 1047, 269, 1165, 457, 458, 1069, 1117, 459, 1131,
	461, 462, 0, 0, 463, 0, 0, 0, 465, 466,
	467, 0, 0, 468, 469, 644, 1166, 470, 1167, 1146,
	471, 472, 464, 473, 474, 475, 476, 477, 478, 479,
	480, 0, 481, 482, 646, 483, 484, 485, 647, 486,
	487, 488, 1147, 489, 649, 490, 491, 0, 492, 493,
	0, 494, 495, 496, 497, 498, 499, 500, 1127, 501,
	503, 502, 504, 0, 505, 0, 506, 507, 508, 0,
	0, 0, 0, 509, 0, 511, 512, 513, 514, 510,
	515, 516, 517, 518, 0, 519, 520, 521, 1168, 522,
	523, 524, 525, 1057, 526, 0, 527, 528, 534, 535,
	529, 530, 536, 537, 538, 539, 540, 0, 542, 543,
	541, 544, 545, 546, 1110, 547, 548, 531, 532, 549,
	550, 1169, 551, 552, 553, 554, 555, 556, 1125, 0,
	557, 0, 558, 559, 560, 562, 533, 563, 568, 569,
	1172, 564, 565, 566, 567, 1148, 571, 572, 0, 573,
	574, 1045, 570, 561, 0, 575, 576, 577, 578, 579,
	580, 581, 354, 582, 0, 583, 1137, 1138, 1139, 1140,
	0, 592, 0, 584, 585, 586, 1149, 587, 1150, 1067,
	588, 589, 590, 591, 0, 593, 594, 0, 1051, 595,
	596, 597, 599, 600, 598, 601, 1111, 602, 0, 0,
	603, 604, 605, 661, 1134, 1171, 0, 607, 606, 608,
	664, 0, 0, 0, 0, 0, 609, 610, 665, 611,
	612, 613, 1048, 0, 0, 0, 0, 0, 0, 0,
	1044, 0, 0, 0, 0, 0, 0, 1042, 1043, 0,
	0, 0, 0, 0, 0, 0, 1073, 0, 0, 1664,
	1071, 1089, 1061, 1062, 1063, 1059, 1060, 1072, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 270, 272,
	271, 273, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 1113, 1077, 0, 0, 0, 280,
	281, 1153, 282, 283, 284, 285, 286, 287, 615, 1126,
	0, 288, 1133, 289, 1132, 0, 1143, 290, 291, 292,
	293, 294, 295, 1079, 1112, 1046, 296, 1173, 1174, 622,
	0, 297, 298, 1119, 0, 1100, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 1154, 321, 322, 323, 1103, 1101,
	1102, 1109, 1105, 1104, 1108, 324, 325, 326, 327, 328,
	1136, 329, 1130, 1129, 1050, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 1121,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 1056, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 1144, 1145, 360, 1068, 267, 0, 0, 0,
	0, 0, 361, 362, 363, 1128, 0, 0, 0, 364,
	0, 365, 0, 0, 1155, 366, 367, 1141, 1142, 368,
	369, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	1151, 0, 1078, 378, 0, 379, 380, 381, 382, 383,
	1114, 1115, 1118, 460, 1157, 384, 385, 0, 386, 387,
	388, 389, 0, 0, 0, 268, 390, 391, 392, 394,
	0, 1156, 393, 1123, 1124, 0, 1084, 0, 395, 396,
	1158, 1116, 1159, 397, 398, 399, 1160, 400, 0, 0,
	0, 401, 402, 403, 404, 405, 406, 0, 407, 409,
	408, 0, 410, 1152, 1161, 411, 412, 1162, 0, 413,
	0, 0, 0, 414, 415, 418, 1107, 1106, 416, 417,
	419, 420, 0, 421, 422, 424, 427, 423, 425, 426,
	428, 441, 429, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 443, 0, 442, 1163, 444, 445,
	446, 451, 453, 454, 449, 450, 452, 455, 456, 448,
	1164, 447, 1047, 269, 1165, 457, 458, 1069, 1117, 459,
	1131, 461, 462, 0, 0, 463, 0, 0, 0, 465,
	466, 467, 0, 0, 468, 469, 644, 1166, 470, 1167,
	1146, 471, 472, 464, 473, 474, 475, 476, 477, 478,
	479, 480, 0, 481, 482, 646, 483, 484, 485, 647,
	486, 487, 488, 1147, 489, 649, 490, 491, 0, 492,
	493, 0, 494, 495, 496, 497, 498, 499, 500, 1127,
	501, 503, 502, 504, 0, 505, 0, 506, 507, 508,
	0, 0, 0, 0, 509, 0, 511, 512, 513, 514,
	510, 515, 516, 517, 518, 0, 519, 520, 521, 1168,
	522, 523, 524, 525, 1057, 526, 0, 527, 528, 534,
	535, 529, 530, 536, 537, 538, 539, 540, 0, 542,
	543, 541, 544, 545, 546, 1110, 547, 548, 531, 532,
	549, 550, 1169, 551, 552, 553, 554, 555, 556, 1125,
	0, 557, 0, 558, 559, 560, 562, 533, 563, 568,
	569, 1172, 564, 565, 566, 567, 1148, 571, 572, 0,
	573, 574, 1045, 570, 561, 0, 575, 576, 577, 578,
	579, 580, 581, 354, 582, 0, 583, 1137, 1138, 1139,
	1140, 0, 592, 0, 584, 585, 586, 1149, 587, 1150,
	1067, 588, 589, 590, 591, 0, 593, 594, 0, 1051,
	595, 596, 597, 599, 600, 598, 601, 1111, 602, 0,
	0, 603, 604, 605, 661, 1134, 1171, 0, 607, 606,
	608, 664, 0, 0, 0, 0, 0, 609, 610, 665,
	611, 612, 613, 1048, 0, 0, 0, 0, 0, 0,
	0, 1044, 0, 0, 0, 0, 0, 0, 1042, 1043,
	0, 0, 0, 0, 0, 0, 0, 1073, 0, 0,
	1596, 1071, 1089, 1061, 1062, 1063, 1059, 1060, 1072, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 270,
	272, 271, 273, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 1113, 1077, 0, 0, 0,
	280, 281, 1153, 282, 283, 284, 285, 286, 287, 615,
	1126, 0, 288, 1133, 289, 1132, 0, 1143, 290, 291,
	292, 293, 294, 295, 1079, 1112, 1046, 296, 1173, 1174,
	622, 0, 297, 298, 1119, 0, 1100, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 1154, 321, 322, 323, 1103,
	1101, 1102, 1109, 1105, 1104, 1108, 324, 325, 326, 327,
	328, 1136, 329, 1130, 1129, 1050, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	1121, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 1056, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 1144, 1145, 360, 1068, 267, 0, 0,
	0, 0, 0, 361, 362, 363, 1128, 0, 0, 0,
	364, 0, 365, 0, 0, 1155, 366, 367, 1141, 1142,
	368, 369, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 1151, 0, 1078, 378, 0, 379, 380, 381, 382,
	383, 1114, 1115, 1118, 460, 1157, 384, 385, 0, 386,
	387, 388, 389, 0, 0, 0, 268, 390, 391, 392,
	394, 0, 1156, 393, 1123, 1124, 0, 1084, 0, 395,
	396, 1158, 1116, 1159, 397, 398, 399, 1160, 400, 0,
	0, 0, 401, 402, 403, 404, 405, 406, 0, 407,
	409, 408, 0, 410, 1152, 1161, 411, 412, 1162, 0,
	413, 0, 0, 0, 414, 415, 418, 1107, 1106, 416,
	417, 419, 420, 0, 421, 422, 424, 427, 423, 425,
	426, 428, 441, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 443, 0, 442, 1163, 444,
	445, 446, 451, 453, 454, 449, 450, 452, 455, 456,
	448, 1164, 447, 1047, 269, 1165, 457, 458, 1069, 1117,
	459, 1131, 461, 462, 0, 0, 463, 0, 0, 0,
	465, 466, 467, 0, 0, 468, 469, 644, 1166, 470,
	1167, 1146, 471, 472, 464, 473, 474, 475, 476, 477,
	478, 479, 480, 0, 481, 482, 646, 483, 484, 485,
	647, 486, 487, 488, 1147, 489, 649, 490, 491, 0,
	492, 493, 0, 494, 495, 496, 497, 498, 499, 500,
	1127, 501, 503, 502, 504, 0, 505, 0, 506, 507,
	508, 0, 0, 0, 0, 509, 0, 511, 512, 513,
	514, 510, 515, 516, 517, 518, 0, 519, 520, 521,
	1168, 522, 523, 524, 525, 1057, 526, 0, 527, 528,
	534, 535, 529, 530, 536, 537, 538, 539, 540, 0,
	542, 543, 541, 544, 545, 546, 1110, 547, 548, 531,
	532, 549, 550, 1169, 551, 552, 553, 554, 555, 556,
	1125, 0, 557, 0, 558, 559, 560, 562, 533, 563,
	568, 569, 1172, 564, 565, 566, 567, 1148, 571, 572,
	0, 573, 574, 1045, 570, 561, 0, 575, 576, 577,
	578, 579, 580, 581, 354, 582, 0, 583, 1137, 1138,
	1139, 1140, 0, 592, 0, 584, 585, 586, 1149, 587,
	1150, 1067, 588, 589, 590, 591, 0, 593, 594, 0,
	1051, 595, 596, 597, 599, 600, 598, 601, 1111, 602,
	0, 0, 603, 604, 605, 661, 1134, 1171, 0, 607,
	606, 608, 664, 0, 0, 0, 0, 0, 609, 610,
	665, 611, 612, 613, 1048, 0, 0, 0, 0, 0,
	0, 0, 1044, 0, 0, 0, 0, 0, 0, 1042,
	1043, 0, 0, 0, 0, 0, 0, 0, 1073, 0,
	0, 1591, 1071, 1089, 1061, 1062, 1063, 1059, 1060, 1072,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	270, 272, 271, 273, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 1113, 1077, 0, 0,
	0, 280, 281, 1153, 282, 283, 284, 285, 286, 287,
	615, 1126, 0, 288, 1133, 289, 1132, 0, 1143, 290,
	291, 292, 293, 294, 295, 1079, 1112, 1046, 296, 1173,
	1174, 622, 0, 297, 298, 1119, 0, 1100, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 1154, 321, 322, 323,
	1103, 1101, 1102, 1109, 1105, 1104, 1108, 324, 325, 326,
	327, 328, 1136, 329, 1130, 1129, 1050, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 1121, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 1056, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 1144, 1145, 360, 1068, 267, 0,
	0, 0, 0, 0, 361, 362, 363, 1128, 0, 0,
	0, 364, 0, 365, 0, 0, 1155, 366, 367, 1141,
	1142, 368, 369, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 1151, 0, 1078, 378, 0, 379, 380, 381,
	382, 383, 1114, 1115, 1118, 460, 1157, 384, 385, 0,
	386, 387, 388, 389, 0, 0, 0, 268, 390, 391,
	392, 394, 0, 1156, 393, 1123, 1124, 0, 1084, 0,
	395, 396, 1158, 1116, 1159, 397, 398, 399, 1160, 400,
	0, 0, 0, 401, 402, 403, 404, 405, 406, 0,
	407, 409, 408, 0, 410, 1152, 1161, 411, 412, 1162,
	0, 413, 0, 0, 0, 414, 415, 418, 1107, 1106,
	416, 417, 419, 420, 0, 421, 422, 424, 427, 423,
	425, 426, 428, 441, 429, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 443, 0, 442, 1163,
	444, 445, 446, 451, 453, 454, 449, 450, 452, 455,
	456, 448, 1164, 447, 1047, 269, 1165, 457, 458, 1069,
	1117, 459, 1131, 461, 462, 0, 0, 463, 0, 0,
	0, 465, 466, 467, 0, 0, 468, 469, 644, 1166,
	470, 1167, 1146, 471, 472, 464, 473, 474, 475, 476,
	477, 478, 479, 480, 0, 481, 482, 646, 483, 484,
	485, 647, 486, 487, 488, 1147, 489, 649, 490, 491,
	0, 492, 493, 0, 494, 495, 496, 497, 498, 499,
	500, 1127, 501, 503, 502, 504, 0, 505, 0, 506,
	507, 508, 0, 0, 0, 0, 509, 0, 511, 512,
	513, 514, 510, 515, 516, 517, 518, 0, 519, 520,
	521, 1168, 522, 523, 524, 525, 1057, 526, 0, 527,
	528, 534, 535, 529, 530, 536, 537, 538, 539, 540,
	0, 542, 543, 541, 544, 545, 546, 1110, 547, 548,
	531, 532, 549, 550, 1169, 551, 552, 553, 554, 555,
	556, 1125, 0, 557, 0, 558, 559, 560, 562, 533,
	563, 568, 569, 1172, 564, 565, 566, 567, 1148, 571,
	572, 0, 573, 574, 1045, 570, 561, 0, 575, 576,
	577, 578, 579, 580, 581, 354, 582, 0, 583, 1137,
	1138, 1139, 1140, 0, 592, 0, 584, 585, 586, 1149,
	587, 1150, 1067, 588, 589, 590, 591, 0, 593, 594,
	0, 1051, 595, 596, 597, 599, 600, 598, 601, 1111,
	602, 0, 0, 603, 604, 605, 661, 1134, 1171, 0,
	607, 606, 608, 664, 0, 0, 0, 0, 0, 609,
	610, 665, 611, 612, 613, 1048, 0, 0, 0, 0,
	0, 0, 0, 1044, 0, 0, 0, 0, 0, 0,
	1042, 1043, 0, 0, 0, 0, 0, 0, 0, 1073,
	0, 0, 1582, 1071, 1089, 1061, 1062, 1063, 1059, 1060,
	1072, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 270, 272, 271, 273, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 1113, 1077, 0,
	0, 0, 280, 281, 1153, 282, 283, 284, 285, 286,
	287, 615, 1126, 0, 288, 1133, 289, 1132, 0, 1143,
	290, 291, 292, 293, 294, 295, 1079, 1112, 1046, 296,
	1173, 1174, 622, 0, 297, 298, 1119, 0, 1100, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 1154, 321, 322,
	323, 1103, 1101, 1102, 1109, 1105, 1104, 1108, 324, 325,
	326, 327, 328, 1136, 329, 1130, 1129, 1050, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 1121, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 1056, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 1144, 1145, 360, 1068, 267,
	0, 0, 0, 0, 0, 361, 362, 363, 1128, 0,
	0, 0, 364, 0, 365, 0, 0, 1155, 366, 367,
	1141, 1142, 368, 369, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 1151, 0, 1078, 378, 0, 379, 380,
	381, 382, 383, 1114, 1115, 1118, 460, 1157, 384, 385,
	0, 386, 387, 388, 389, 0, 0, 0, 268, 390,
	391, 392, 394, 0, 1156, 393, 1123, 1124, 0, 1084,
	0, 395, 396, 1158, 1116, 1159, 397, 398, 399, 1160,
	400, 0, 0, 0, 401, 402, 403, 404, 405, 406,
	0, 407, 409, 408, 0, 410, 1152, 1161, 411, 412,
	1162, 0, 413, 0, 0, 0, 414, 415, 418, 1107,
	1106, 416, 417, 419, 420, 0, 421, 422, 424, 427,
	423, 425, 426, 428, 441, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 443, 0, 442,
	1163, 444, 445, 446, 451, 453, 454, 449, 450, 452,
	455, 456, 448, 1164, 447, 1047, 269, 1165, 457, 458,
	1069, 1117, 459, 1131, 461, 462, 0, 0, 463, 0,
	0, 0, 465, 466, 467, 0, 0, 468, 469, 644,
	1166, 470, 1167, 1146, 471, 472, 464, 473, 474, 475,
	476, 477, 478, 479, 480, 0, 481, 482, 646, 483,
	484, 485, 647, 486, 487, 488, 1147, 489, 649, 490,
	491, 0, 492, 493, 0, 494, 495, 496, 497, 498,
	499, 500, 1127, 501, 503, 502, 504, 0, 505, 0,
	506, 507, 508, 0, 0, 0, 0, 509, 0, 511,
	512, 513, 514, 510, 515, 516, 517, 518, 0, 519,
	520, 521, 1168, 522, 523, 524, 525, 1057, 526, 0,
	527, 528, 534, 535, 529, 530, 536, 537, 538, 539,
	540, 0, 542, 543, 541, 544, 545, 546, 1110, 547,
	548, 531, 532, 549, 550, 1169, 551, 552, 553, 554,
	555, 556, 1125, 0, 557, 0, 558, 559, 560, 562,
	533, 563, 568, 569, 1172, 564, 565, 566, 567, 1148,
	571, 572, 0, 573, 574, 1045, 570, 561, 0, 575,
	576, 577, 578, 579, 580, 581, 354, 582, 0, 583,
	1137, 1138, 1139, 1140, 0, 592, 0, 584, 585, 586,
	1149, 587, 1150, 1067, 588, 589, 590, 591, 0, 593,
	594, 0, 1051, 595, 596, 597, 599, 600, 598, 601,
	1111, 602, 0, 0, 603, 604, 605, 661, 1134, 1171,
	0, 607, 606, 608, 664, 0, 0, 0, 0, 0,
	609, 610, 665, 611, 612, 613, 1048, 0, 0, 0,
	0, 0, 0, 0, 1044, 0, 0, 0, 0, 0,
	0, 1042, 1043, 0, 0, 0, 0, 0, 0, 0,
	1073, 0, 0, 1577, 1071, 1089, 1061, 1062, 1063, 1059,
	1060, 1072, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 270, 272, 271, 273, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 1113, 1077,
	0, 0, 0, 280, 281, 1153, 282, 283, 284, 285,
	286, 287, 615, 1126, 0, 288, 1133, 289, 1132, 0,
	1143, 290, 291, 292, 293, 294, 295, 1079, 1112, 1046,
	296, 1173, 1174, 622, 0, 297, 298, 1119, 0, 1100,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 1154, 321,
	322, 323, 1103, 1101, 1102, 1109, 1105, 1104, 1108, 324,
	325, 326, 327, 328, 1136, 329, 1130, 1129, 1050, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 1121, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 1056, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 1144, 1145, 360, 1068,
	267, 0, 0, 0, 0, 0, 361, 362, 363, 1128,
	0, 0, 0, 364, 0, 365, 0, 0, 1155, 366,
	367, 1141, 1142, 368, 369, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 1151, 0, 1078, 378, 0, 379,
	380, 381, 382, 383, 1114, 1115, 1118, 460, 1157, 384,
	385, 0, 386, 387, 388, 389, 0, 0, 0, 268,
	390, 391, 392, 394, 0, 1156, 393, 1123, 1124, 0,
	1084, 0, 395, 396, 1158, 1116, 1159, 397, 398, 399,
	1160, 400, 0, 0, 0, 401, 402, 403, 404, 405,
	406, 0, 407, 409, 408, 0, 410, 1152, 1161, 411,
	412, 1162, 0, 413, 0, 0, 0, 414, 415, 418,
	1107, 1106, 416, 417, 419, 420, 0, 421, 422, 424,
	427, 423, 425, 426, 428, 441, 429, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 443, 0,
	442, 1163, 444, 445, 446, 451, 453, 454, 449, 450,
	452, 455, 456, 448, 1164, 447, 1047, 269, 1165, 457,
	458, 1069, 1117, 459, 1131, 461, 462, 0, 0, 463,
	0, 0, 0, 465, 466, 467, 0, 0, 468, 469,
	644, 1166, 470, 1167, 1146, 471, 472, 464, 473, 474,
	475, 476, 477, 478, 479, 480, 0, 481, 482, 646,
	483, 484, 485, 647, 486, 487, 488, 1147, 489, 649,
	490, 491, 0, 492, 493, 0, 494, 495, 496, 497,
	498, 499, 500, 1127, 501, 503, 502, 504, 0, 505,
	0, 506, 507, 508, 0, 0, 0, 0, 509, 0,
	511, 512, 513, 514, 510, 515, 516, 517, 518, 0,
	519, 520, 521, 1168, 522, 523, 524, 525, 1057, 526,
	0, 527, 528, 534, 535, 529, 530, 536, 537, 538,
	539, 540, 0, 542, 543, 541, 544, 545, 546, 1110,
	547, 548, 531, 532, 549, 550, 1169, 551, 552, 553,
	554, 555, 556, 1125, 0, 557, 0, 558, 559, 560,
	562, 533, 563, 568, 569, 1172, 564, 565, 566, 567,
	1148, 571, 572, 0, 573, 574, 1045, 570, 561, 0,
	575, 576, 577, 578, 579, 580, 581, 354, 582, 0,
	583, 1137, 1138, 1139, 1140, 0, 592, 0, 584, 585,
	586, 1149, 587, 1150, 1067, 588, 589, 590, 591, 0,
	593, 594, 0, 1051, 595, 596, 597, 599, 600, 598,
	601, 1111, 602, 0, 0, 603, 604, 605, 661, 1134,
	1171, 0, 607, 606, 608, 664, 0, 0, 0, 0,
	0, 609, 610, 665, 611, 612, 613, 1048, 0, 0,
	0, 0, 0, 0, 0, 1044, 0, 0, 0, 0,
	0, 0, 1042, 1043, 0, 0, 0, 0, 0, 0,
	0, 1073, 0, 0, 1489, 1071, 1089, 1061, 1062, 1063,
	1059, 1060, 1072, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 270, 272, 271, 273, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 1113,
	1077, 0, 0, 0, 280, 281, 1153, 282, 283, 284,
	285, 286, 287, 615, 1126, 0, 288, 1133, 289, 1132,
	0, 1143, 290, 291, 292, 293, 294, 295, 1079, 1112,
	1046, 296, 1173, 1174, 622, 0, 297, 298, 1119, 0,
	1100, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 1154,
	321, 322, 323, 1103, 1101, 1102, 1109, 1105, 1104, 1108,
	324, 325, 326, 327, 328, 1136, 329, 1130, 1129, 1050,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 1121, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 1056, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 1144, 1145, 360,
	1068, 267, 0, 0, 0, 0, 0, 361, 362, 363,
	1128, 0, 0, 0, 364, 0, 365, 0, 0, 1155,
	366, 367, 1141, 1142, 368, 369, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 1151, 0, 1078, 378, 0,
	379, 380, 381, 382, 383, 1488, 1115, 1118, 460, 1157,
	384, 385, 0, 386, 387, 388, 389, 0, 0, 0,
	268, 390, 391, 392, 394, 0, 1156, 393, 1123, 1124,
	0, 1084, 0, 395, 396, 1158, 1116, 1159, 397, 398,
	399, 1160, 400, 0, 0, 0, 401, 402, 403, 404,
	405, 406, 0, 407, 409, 408, 0, 410, 1152, 1161,
	411, 412, 1162, 0, 413, 0, 0, 0, 414, 415,
	418, 1107, 1106, 416, 417, 419, 420, 0, 421, 422,
	424, 427, 423, 425, 426, 428, 441, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 443,
	0, 442, 1163, 444, 445, 446, 451, 453, 454, 449,
	450, 452, 455, 456, 448, 1164, 447, 1047, 269, 1165,
	457, 458, 1069, 1117, 459, 1131, 461, 462, 0, 0,
	463, 0, 0, 0, 465, 466, 467, 0, 0, 468,
	469, 644, 1166, 470, 1167, 1146, 471, 472, 464, 473,
	474, 475, 476, 477, 478, 479, 480, 0, 481, 482,
	646, 483, 484, 485, 647, 486, 487, 488, 1147, 489,
	649, 490, 491, 0, 492, 493, 0, 494, 495, 496,
	497, 498, 499, 500, 1127, 501, 503, 502, 504, 0,
	505, 0, 506, 507, 508, 0, 0, 0, 0, 509,
	0, 511, 512, 513, 514, 510, 515, 516, 517, 518,
	0, 519, 520, 521, 1168, 522, 523, 524, 525, 1057,
	526, 0, 527, 528, 534, 535, 529, 530, 536, 537,
	538, 539, 540, 0, 542, 543, 541, 544, 545, 546,
	1110, 547, 548, 531, 532, 549, 550, 1169, 551, 552,
	553, 554, 555, 556, 1125, 0, 557, 0, 558, 559,
	560, 562, 533, 563, 568, 569, 1172, 564, 565, 566,
	567, 1148, 571, 572, 0, 573, 574, 1045, 570, 561,
	0, 575, 576, 577, 578, 579, 580, 581, 354, 582,
	0, 583, 1137, 1138, 1139, 1140, 0, 592, 0, 584,
	585, 586, 1149, 587, 1150, 1067, 588, 589, 590, 591,
	0, 593, 594, 0, 1051, 595, 596, 597, 599, 600,
	598, 601, 1111, 602, 0, 0, 603, 604, 605, 661,
	1134, 1171, 0, 607, 606, 608, 664, 0, 0, 0,
	0, 0, 609, 610, 665, 611, 612, 613, 1048, 0,
	0, 0, 0, 0, 0, 0, 1044, 0, 0, 0,
	0, 0, 0, 1042, 1043, 0, 0, 0, 0, 0,
	0, 0, 1073, 0, 0, 1483, 1071, 1089, 1061, 1062,
	1063, 1059, 1060, 1072, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 270, 272, 271, 273, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	1113, 1077, 0, 0, 0, 280, 281, 1153, 282, 283,
	284, 285, 286, 287, 615, 1126, 0, 288, 1133, 289,
	1132, 0, 1143, 290, 291, 292, 293, 294, 295, 1079,
	1112, 1046, 296, 1173, 1174, 622, 0, 297, 298, 1119,
	0, 1100, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	1154, 321, 322, 323, 1103, 1101, 1102, 1109, 1105, 1104,
	1108, 324, 325, 326, 327, 328, 1136, 329, 1130, 1129,
	1050, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 1121, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 1056, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 1144, 1145,
	360, 1068, 267, 0, 0, 0, 0, 0, 361, 362,
	363, 1128, 0, 0, 0, 364, 0, 365, 0, 0,
	1155, 366, 367, 1141, 1142, 368, 369, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 1151, 0, 1078, 378,
	0, 379, 380, 381, 382, 383, 1482, 1115, 1118, 460,
	1157, 384, 385, 0, 386, 387, 388, 389, 0, 0,
	0, 268, 390, 391, 392, 394, 0, 1156, 393, 1123,
	1124, 0, 1084, 0, 395, 396, 1158, 1116, 1159, 397,
	398, 399, 1160, 400, 0, 0, 0, 401, 402, 403,
	404, 405, 406, 0, 407, 409, 408, 0, 410, 1152,
	1161, 411, 412, 1162, 0, 413, 0, 0, 0, 414,
	415, 418, 1107, 1106, 416, 417, 419, 420, 0, 421,
	422, 424, 427, 423, 425, 426, 428, 441, 429, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	443, 0, 442, 1163, 444, 445, 446, 451, 453, 454,
	449, 450, 452, 455, 456, 448, 1164, 447, 1047, 269,
	1165, 457, 458, 1069, 1117, 459, 1131, 461, 462, 0,
	0, 463, 0, 0, 0, 465, 466, 467, 0, 0,
	468, 469, 644, 1166, 470, 1167, 1146, 471, 472, 464,
	473, 474, 475, 476, 477, 478, 479, 480, 0, 481,
	482, 646, 483, 484, 485, 647, 486, 487, 488, 1147,
	489, 649, 490, 491, 0, 492, 493, 0, 494, 495,
	496, 497, 498, 499, 500, 1127, 501, 503, 502, 504,
	0, 505, 0, 506, 507, 508, 0, 0, 0, 0,
	509, 0, 511, 512, 513, 514, 510, 515, 516, 517,
	518, 0, 519, 520, 521, 1168, 522, 523, 524, 525,
	1057, 526, 0, 527, 528, 534, 535, 529, 530, 536,
	537, 538, 539, 540, 0, 542, 543, 541, 544, 545,
	546, 1110, 547, 548, 531, 532, 549, 550, 1169, 551,
	552, 553, 554, 555, 556, 1125, 0, 557, 0, 558,
	559, 560, 562, 533, 563, 568, 569, 1172, 564, 565,
	566, 567, 1148, 571, 572, 0, 573, 574, 1045, 570,
	561, 0, 575, 576, 577, 578, 579, 580, 581, 354,
	582, 0, 583, 1137, 1138, 1139, 1140, 0, 592, 0,
	584, 585, 586, 1149, 587, 1150, 1067, 588, 589, 590,
	591, 0, 593, 594, 0, 1051, 595, 596, 597, 599,
	600, 598, 601, 1111, 602, 0, 0, 603, 604, 605,
	661, 1134, 1171, 0, 607, 606, 608, 664, 0, 0,
	0, 0, 0, 609, 610, 665, 611, 612, 613, 1048,
	0, 0, 0, 0, 0, 0, 0, 1044, 0, 0,
	0, 0, 0, 0, 1042, 1043, 0, 0, 0, 0,
	0, 0, 0, 1073, 0, 0, 1476, 1071, 1089, 1061,
	1062, 1063, 1059, 1060, 1072, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 270, 272, 271, 273, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 1113, 1077, 0, 0, 0, 280, 281, 1153, 282,
	283, 284, 285, 286, 287, 615, 1126, 0, 288, 1133,
	289, 1132, 0, 1143, 290, 291, 292, 293, 294, 295,
	1079, 1112, 1046, 296, 1173, 1174, 622, 0, 297, 298,
	1119, 0, 1100, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 1154, 321, 322, 323, 1103, 1101, 1102, 1109, 1105,
	1104, 1108, 324, 325, 326, 327, 328, 1136, 329, 1130,
	1129, 1050, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 1121, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 1056, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 1144,
	1145, 360, 1068, 267, 0, 0, 0, 0, 0, 361,
	362, 363, 1128, 0, 0, 0, 364, 0, 365, 0,
	0, 1155, 366, 367, 1141, 1142, 368, 369, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 1151, 0, 1078,
	378, 0, 379, 380, 381, 382, 383, 1114, 1115, 1118,
	460, 1157, 384, 385, 0, 386, 387, 388, 389, 0,
	0, 0, 268, 390, 391, 392, 394, 0, 1156, 393,
	1123, 1124, 0, 1084, 0, 395, 396, 1158, 1116, 1159,
	397, 398, 399, 1160, 400, 0, 0, 0, 401, 402,
	403, 404, 405, 406, 0, 407, 409, 408, 0, 410,
	1152, 1161, 411, 412, 1162, 0, 413, 0, 0, 0,
	414, 415, 418, 1107, 1106, 416, 417, 419, 420, 0,
	421, 422, 424, 427, 423, 425, 426, 428, 441, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 443, 0, 442, 1163, 444, 445, 446, 451, 453,
	454, 449, 450, 452, 455, 456, 448, 1164, 447, 1047,
	269, 1165, 457, 458, 1069, 1117, 459, 1131, 461, 462,
	0, 0, 463, 0, 0, 0, 465, 466, 467, 0,
	0, 468, 469, 644, 1166, 470, 1167, 1146, 471, 472,
	464, 473, 474, 475, 476, 477, 478, 479, 480, 0,
	481, 482, 646, 483, 484, 485, 647, 486, 487, 488,
	1147, 489, 649, 490, 491, 0, 492, 493, 0, 494,
	495, 496, 497, 498, 499, 500, 1127, 501, 503, 502,
	504, 0, 505, 0, 506, 507, 508, 0, 0, 0,
	0, 509, 0, 511, 512, 513, 514, 510, 515, 516,
	517, 518, 0, 519, 520, 521, 1168, 522, 523, 524,
	525, 1057, 526, 0, 527, 528, 534, 535, 529, 530,
	536, 537, 538, 539, 540, 0, 542, 543, 541, 544,
	545, 546, 1110, 547, 548, 531, 532, 549, 550, 1169,
	551, 552, 553, 554, 555, 556, 1125, 0, 557, 0,
	558, 559, 560, 562, 533, 563, 568, 569, 1172, 564,
	565, 566, 567, 1148, 571, 572, 0, 573, 574, 1045,
	570, 561, 0, 575, 576, 577, 578, 579, 580, 581,
	354, 582, 0, 583, 1137, 1138, 1139, 1140, 0, 592,
	0, 584, 585, 586, 1149, 587, 1150, 1067, 588, 589,
	590, 591, 0, 593, 594, 0, 1051, 595, 596, 597,
	599, 600, 598, 601, 1111, 602, 0, 0, 603, 604,
	605, 661, 1134, 1171, 0, 607, 606, 608, 664, 0,
	0, 0, 0, 0, 609, 610, 665, 611, 612, 613,
	1048, 0, 0, 0, 0, 0, 0, 0, 1044, 0,
	0, 0, 0, 0, 0, 1042, 1043, 0, 0, 0,
	0, 0, 0, 0, 1073, 0, 0, 1299, 1071, 1089,
	1061, 1062, 1063, 1059, 1060, 1072, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 272, 271, 273,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 1113, 1077, 0, 0, 0, 280, 281, 1153,
	282, 283, 284, 285, 286, 287, 615, 1126, 0, 288,
	1133, 289, 1132, 0, 1143, 290, 291, 292, 293, 294,
	295, 1079, 1112, 1046, 296, 1173, 1174, 622, 0, 297,
	298, 1119, 0, 1100, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 1154, 321, 322, 323, 1103, 1101, 1102, 1109,
	1105, 1104, 1108, 324, 325, 326, 327, 328, 1136, 329,
	1130, 1129, 1050, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 1121, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 1056,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	1144, 1145, 360, 1068, 267, 0, 0, 0, 0, 0,
	361, 362, 363, 1128, 0, 0, 0, 364, 0, 365,
	0, 0, 1155, 366, 367, 1141, 1142, 368, 369, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 1151, 0,
	1078, 378, 0, 379, 380, 381, 382, 383, 1114, 1115,
	1118, 460, 1157, 384, 385, 0, 386, 387, 388, 389,
	0, 0, 0, 268, 390, 391, 392, 394, 0, 1156,
	393, 1123, 1124, 0, 1084, 0, 395, 396, 1158, 1116,
	1159, 397, 398, 399, 1160, 400, 0, 0, 0, 401,
	402, 403, 404, 405, 406, 0, 407, 409, 408, 0,
	410, 1152, 1161, 411, 412, 1162, 0, 413, 0, 0,
	0, 414, 415, 418, 1107, 1106, 416, 417, 419, 420,
	0, 421, 422, 424, 427, 423, 425, 426, 428, 441,
	429, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 443, 0, 442, 1163, 444, 445, 446, 451,
	453, 454, 449, 450, 452, 455, 456, 448, 1164, 447,
	1047, 269, 1165, 457, 458, 1069, 1117, 459, 1131, 461,
	462, 0, 0, 463, 0, 0, 0, 465, 466, 467,
	0, 0, 468, 469, 644, 1166, 470, 1167, 1146, 471,
	472, 464, 473, 474, 475, 476, 477, 478, 479, 480,
	0, 481, 482, 646, 483, 484, 485, 647, 486, 487,
	488, 1147, 489, 649, 490, 491, 0, 492, 493, 0,
	494, 495, 496, 497, 498, 499, 500, 1127, 501, 503,
	502, 504, 0, 505, 0, 506, 507, 508, 0, 0,
	0, 0, 509, 0, 511, 512, 513, 514, 510, 515,
	516, 517, 518, 0, 519, 520, 521, 1168, 522, 523,
	524, 525, 1057, 526, 0, 527, 528, 534, 535, 529,
	530, 536, 537, 538, 539, 540, 0, 542, 543, 541,
	544, 545, 546, 1110, 547, 548, 531, 532, 549, 550,
	1169, 551, 552, 553, 554, 555, 556, 1125, 0, 557,
	0, 558, 559, 560, 562, 533, 563, 568, 569, 1172,
	564, 565, 566, 567, 1148, 571, 572, 0, 573, 574,
	1045, 570, 561, 0, 575, 576, 577, 578, 579, 580,
	581, 354, 582, 0, 583, 1137, 1138, 1139, 1140, 0,
	592, 0, 584, 585, 586, 1149, 587, 1150, 1067, 588,
	589, 590, 591, 0, 593, 594, 0, 1051, 595, 596,
	597, 599, 600, 598, 601, 1111, 602, 0, 0, 603,
	604, 605, 661, 1134, 1171, 0, 607, 606, 608, 664,
	0, 0, 0, 0, 0, 609, 610, 665, 611, 612,
	613, 1048, 0, 0, 0, 0, 0, 0, 0, 1044,
	0, 0, 0, 0, 0, 0, 1042, 1043, 1089, 1061,
	1062, 1063, 1059, 1060, 1072, 1073, 0, 0, 0, 1071,
	0, 0, 0, 0, 0, 270, 272, 271, 273, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 1113, 1077, 0, 0, 0, 280, 281, 1153, 282,
	283, 284, 285, 286, 287, 615, 1126, 0, 288, 1133,
	289, 1132, 0, 1143, 290, 291, 292, 293, 294, 295,
	1079, 1112, 1046, 296, 1173, 1174, 622, 0, 297, 298,
	1119, 0, 1100, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 1154, 321, 322, 323, 1103, 1101, 1102, 1109, 1105,
	1104, 1108, 324, 325, 326, 327, 328, 1136, 329, 1130,
	1129, 1050, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 1121, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 1056, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 1144,
	1145, 360, 1068, 267, 0, 0, 0, 0, 0, 361,
	362, 363, 1128, 0, 0, 0, 364, 0, 365, 0,
	0, 1155, 366, 367, 1141, 1142, 368, 369, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 1151, 0, 1078,
	378, 0, 379, 380, 381, 382, 383, 1114, 1115, 1118,
	460, 1157, 384, 385, 0, 386, 387, 388, 389, 0,
	0, 0, 268, 390, 391, 392, 394, 0, 1156, 393,
	1123, 1124, 0, 1084, 0, 395, 396, 1158, 1116, 1159,
	397, 398, 399, 1160, 400, 0, 0, 0, 401, 402,
	403, 404, 405, 406, 0, 407, 409, 408, 0, 410,
	1152, 1161, 411, 412, 1162, 0, 413, 0, 0, 0,
	414, 415, 418, 1107, 1106, 416, 417, 419, 420, 0,
	421, 422, 424, 427, 423, 425, 426, 428, 441, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 443, 0, 442, 1163, 444, 445, 446, 451, 453,
	454, 449, 450, 452, 455, 456, 448, 1164, 447, 1047,
	269, 1165, 457, 458, 1069, 1117, 459, 1131, 461, 462,
	0, 0, 463, 0, 0, 0, 465, 466, 467, 0,
	0, 468, 469, 644, 1166, 470, 1167, 1146, 471, 472,
	464, 473, 474, 475, 476, 477, 478, 479, 480, 0,
	481, 482, 646, 483, 484, 485, 647, 486, 487, 488,
	1147, 489, 649, 490, 491, 0, 492, 493, 0, 494,
	495, 496, 497, 498, 499, 500, 1127, 501, 503, 502,
	504, 0, 505, 0, 506, 507, 508, 0, 0, 0,
	0, 509, 0, 511, 512, 513, 514, 510, 515, 516,
	517, 518, 0, 519, 520, 521, 1168, 522, 523, 524,
	525, 1057, 526, 0, 527, 528, 534, 535, 529, 530,
	536, 537, 538, 539, 540, 0, 542, 543, 541, 544,
	545, 546, 1110, 547, 548, 531, 532, 549, 550, 1169,
	551, 552, 553, 554, 555, 556, 1125, 0, 557, 0,
	558, 559, 560, 562, 533, 563, 568, 569, 1172, 564,
	565, 566, 567, 1148, 571, 572, 0, 573, 574, 1045,
	570, 561, 0, 575, 576, 577, 578, 579, 580, 581,
	354, 582, 0, 583, 1137, 1138, 1139, 1140, 0, 592,
	0, 584, 585, 586, 1149, 587, 1150, 1067, 588, 589,
	590, 591, 0, 593, 594, 0, 1051, 595, 596, 597,
	599, 600, 598, 601, 1111, 602, 0, 0, 603, 604,
	605, 661, 1134, 1171, 0, 607, 606, 608, 664, 0,
	0, 0, 0, 0, 609, 610, 665, 611, 612, 613,
	1048, 0, 0, 0, 0, 0, 0, 0, 1044, 0,
	0, 0, 0, 0, 0, 1042, 1043, 1089, 1061, 1062,
	1063, 1059, 1060, 1072, 1073, 0, 0, 0, 1071, 0,
	0, 0, 0, 0, 270, 272, 271, 273, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	1113, 1077, 0, 0, 0, 280, 281, 1153, 282, 283,
	284, 285, 286, 287, 615, 1126, 0, 288, 1133, 289,
	1132, 0, 1143, 290, 291, 292, 293, 294, 295, 1079,
	1112, 1046, 296, 1173, 1174, 622, 0, 297, 298, 1119,
	0, 1100, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	1154, 321, 322, 4517, 1103, 1101, 1102, 1109, 1105, 1104,
	1108, 324, 325, 326, 327, 328, 1136, 329, 1130, 1129,
	1050, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 1121, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 1056, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 1144, 1145,
	360, 1068, 267, 0, 0, 0, 0, 0, 361, 362,
	363, 1128, 0, 0, 0, 364, 0, 365, 0, 0,
	1155, 366, 367, 1141, 1142, 368, 369, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 1151, 0, 1078, 378,
	0, 379, 380, 381, 382, 383, 1114, 1115, 1118, 460,
	1157, 384, 385, 0, 386, 387, 388, 389, 0, 0,
	0, 268, 390, 391, 392, 394, 0, 1156, 393, 1123,
	1124, 0, 1084, 0, 395, 396, 1158, 1116, 1159, 397,
	398, 399, 1160, 400, 0, 0, 0, 401, 402, 403,
	404, 405, 406, 0, 407, 409, 408, 0, 410, 1152,
	1161, 411, 412, 1162, 0, 413, 0, 0, 0, 414,
	415, 418, 1107, 1106, 416, 417, 419, 420, 0, 421,
	422, 424, 427, 423, 425, 426, 428, 441, 429, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	443, 0, 442, 1163, 444, 445, 446, 451, 453, 454,
	449, 450, 452, 455, 456, 448, 1164, 447, 1047, 269,
	1165, 457, 458, 1069, 1117, 459, 1131, 461, 462, 0,
	0, 463, 0, 0, 0, 465, 466, 467, 0, 0,
	468, 469, 644, 1166, 470, 1167, 1146, 471, 472, 464,
	473, 474, 475, 476, 477, 478, 479, 480, 0, 481,
	482, 646, 483, 484, 485, 647, 486, 487, 488, 1147,
	489, 649, 490, 491, 0, 492, 493, 0, 494, 495,
	496, 497, 498, 499, 500, 1127, 501, 503, 502, 504,
	0, 505, 0, 506, 507, 508, 0, 0, 0, 0,
	509, 0, 511, 512, 513, 514, 510, 515, 516, 517,
	518, 0, 519, 520, 521, 1168, 522, 523, 524, 525,
	1057, 526, 0, 527, 528, 534, 535, 529, 530, 536,
	537, 538, 539, 540, 0, 542, 543, 541, 544, 545,
	546, 1110, 547, 548, 531, 532, 549, 550, 1169, 551,
	552, 553, 554, 555, 556, 1125, 0, 557, 0, 558,
	559, 560, 562, 533, 563, 568, 569, 1172, 564, 565,
	566, 567, 1148, 571, 572, 0, 573, 574, 1045, 570,
	561, 0, 575, 576, 577, 578, 579, 580, 581, 354,
	582, 0, 583, 1137, 1138, 1139, 1140, 0, 592, 0,
	584, 585, 586, 1149, 587, 1150, 1067, 588, 589, 590,
	591, 0, 4516, 594, 0, 1051, 595, 596, 597, 599,
	600, 598, 601, 1111, 602, 0, 0, 603, 604, 605,
	661, 1134, 1171, 0, 607, 606, 608, 664, 0, 0,
	0, 0, 0, 609, 610, 665, 611, 612, 613, 1048,
	0, 0, 0, 0, 0, 0, 0, 1044, 0, 0,
	0, 0, 0, 0, 1042, 1043, 1089, 1061, 1062, 1063,
	1059, 1060, 1072, 1073, 0, 0, 0, 1071, 0, 0,
	0, 0, 0, 270, 272, 271, 273, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 1113,
	1077, 0, 0, 0, 280, 281, 1153, 282, 283, 284,
	285, 286, 287, 4515, 1126, 0, 288, 1133, 289, 1132,
	0, 1143, 290, 291, 292, 293, 294, 295, 1079, 1112,
	1046, 296, 1173, 1174, 622, 0, 297, 298, 1119, 0,
	1100, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 1154,
	321, 322, 4517, 1103, 1101, 1102, 1109, 1105, 1104, 1108,
	324, 325, 326, 327, 328, 1136, 329, 1130, 1129, 1050,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 1121, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 1056, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 1144, 1145, 360,
	1068, 267, 0, 0, 0, 0, 0, 361, 362, 363,
	1128, 0, 0, 0, 364, 0, 365, 0, 0, 1155,
	366, 367, 1141, 1142, 368, 369, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 1151, 0, 1078, 378, 0,
	379, 380, 381, 382, 383, 1114, 1115, 1118, 460, 1157,
	384, 385, 0, 386, 387, 388, 389, 0, 0, 0,
	268, 390, 391, 392, 394, 0, 1156, 393, 1123, 1124,
	0, 1084, 0, 395, 396, 1158, 1116, 1159, 397, 398,
	399, 1160, 400, 0, 0, 0, 401, 402, 403, 404,
	405, 406, 0, 407, 409, 408, 0, 410, 1152, 1161,
	411, 412, 1162, 0, 413, 0, 0, 0, 414, 415,
	418, 1107, 1106, 416, 417, 419, 420, 0, 421, 422,
	424, 427, 423, 425, 426, 428, 441, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 443,
	0, 442, 1163, 444, 445, 446, 451, 453, 454, 449,
	450, 452, 455, 456, 448, 1164, 447, 1047, 269, 1165,
	457, 458, 1069, 1117, 459, 1131, 461, 462, 0, 0,
	463, 0, 0, 0, 465, 466, 467, 0, 0, 468,
	469, 644, 1166, 470, 1167, 1146, 471, 472, 464, 473,
	474, 475, 476, 477, 478, 479, 480, 0, 481, 482,
	646, 483, 484, 485, 647, 486, 487, 488, 1147, 489,
	649, 490, 491, 0, 492, 493, 0, 494, 495, 496,
	497, 498, 499, 500, 1127, 501, 503, 502, 504, 0,
	505, 0, 506, 507, 508, 0, 0, 0, 0, 509,
	0, 511, 512, 513, 514, 510, 515, 516, 517, 518,
	0, 519, 520, 521, 1168, 522, 523, 524, 525, 1057,
	526, 0, 527, 528, 534, 535, 529, 530, 536, 537,
	538, 539, 540, 0, 542, 543, 541, 544, 545, 546,
	1110, 547, 548, 531, 532, 549, 550, 1169, 551, 552,
	553, 554, 555, 556, 1125, 0, 557, 0, 558, 559,
	560, 562, 533, 563, 568, 569, 1172, 564, 565, 566,
	567, 1148, 571, 572, 0, 573, 574, 1045, 570, 561,
	0, 575, 576, 577, 578, 579, 580, 581, 354, 582,
	0, 583, 1137, 1138, 1139, 1140, 0, 592, 0, 584,
	585, 586, 1149, 587, 1150, 1067, 588, 589, 590, 591,
	0, 4516, 594, 0, 1051, 595, 596, 597, 599, 600,
	598, 601, 1111, 602, 0, 0, 603, 604, 605, 661,
	1134, 1171, 0, 607, 606, 608, 664, 0, 0, 0,
	0, 0, 609, 610, 665, 611, 612, 613, 1048, 0,
	0, 0, 0, 0, 0, 0, 1044, 0, 0, 0,
	0, 0, 0, 1042, 1043, 1089, 1061, 1062, 1063, 1059,
	1060, 1072, 1073, 0, 0, 0, 1071, 0, 0, 0,
	0, 0, 270, 272, 271, 273, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 1113, 1077,
	0, 0, 0, 280, 281, 1153, 282, 283, 284, 285,
	286, 287, 615, 1126, 0, 288, 1133, 289, 1132, 0,
	1143, 290, 291, 292, 293, 294, 295, 1079, 1112, 1046,
	296, 1173, 1174, 622, 0, 297, 298, 1119, 0, 1100,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 1154, 321,
	4167, 323, 1103, 1101, 1102, 1109, 1105, 1104, 1108, 324,
	325, 326, 327, 328, 1136, 329, 1130, 1129, 1050, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 1121, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 1056, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 1144, 1145, 360, 1068,
	267, 0, 0, 0, 0, 0, 361, 362, 363, 1128,
	0, 0, 0, 364, 0, 365, 0, 0, 1155, 366,
	367, 1141, 1142, 368, 369, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 1151, 0, 4168, 378, 0, 379,
	380, 381, 382, 383, 1114, 1115, 1118, 460, 1157, 384,
	385, 0, 386, 387, 388, 389, 0, 0, 0, 268,
	390, 391, 392, 394, 0, 1156, 393, 1123, 1124, 0,
	1084, 0, 395, 396, 1158, 1116, 1159, 397, 398, 399,
	1160, 400, 0, 0, 0, 401, 402, 403, 404, 405,
	406, 0, 407, 409, 408, 0, 410, 1152, 1161, 411,
	412, 1162, 0, 413, 0, 0, 0, 414, 415, 418,
	1107, 1106, 416, 417, 419, 420, 0, 421, 422, 424,
	427, 423, 425, 426, 428, 441, 429, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 443, 0,
	442, 1163, 444, 445, 446, 451, 453, 454, 449, 450,
	452, 455, 456, 448, 1164, 447, 1047, 269, 1165, 457,
	458, 1069, 1117, 459, 1131, 461, 462, 0, 0, 463,
	0, 0, 0, 465, 466, 467, 0, 0, 468, 469,
	644, 1166, 470, 1167, 1146, 471, 472, 464, 473, 474,
	475, 476, 477, 478, 479, 480, 0, 481, 482, 646,
	483, 484, 485, 647, 486, 487, 488, 1147, 489, 649,
	490, 491, 0, 492, 493, 0, 494, 495, 496, 497,
	498, 499, 500, 1127, 501, 503, 502, 504, 0, 505,
	0, 506, 507, 508, 0, 0, 0, 0, 509, 0,
	511, 512, 513, 514, 510, 515, 516, 517, 518, 0,
	519, 520, 521, 1168, 522, 523, 524, 4166, 1057, 526,
	0, 527, 528, 534, 535, 529, 530, 536, 537, 538,
	539, 540, 0, 542, 543, 541, 544, 545, 546, 1110,
	547, 548, 531, 532, 549, 550, 1169, 551, 552, 553,
	554, 555, 556, 1125, 0, 557, 0, 558, 559, 560,
	562, 533, 563, 568, 569, 1172, 564, 565, 566, 567,
	1148, 571, 572, 0, 573, 574, 1045, 570, 561, 0,
	575, 576, 577, 578, 579, 580, 581, 354, 582, 0,
	583, 1137, 1138, 1139, 1140, 0, 592, 0, 584, 585,
	586, 1149, 587, 1150, 1067, 588, 589, 590, 591, 0,
	593, 594, 0, 1051, 595, 596, 597, 599, 600, 598,
	601, 1111, 602, 0, 0, 603, 604, 605, 661, 1134,
	1171, 0, 607, 606, 608, 664, 0, 0, 0, 0,
	0, 609, 610, 665, 611, 612, 613, 1048, 0, 0,
	0, 0, 0, 0, 0, 1044, 0, 0, 0, 0,
	0, 0, 1042, 1043, 1089, 1061, 1062, 1063, 3023, 3024,
	1072, 1073, 0, 0, 0, 1071, 0, 0, 0, 0,
	0, 270, 272, 271, 273, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 1113, 1077, 0,
	0, 0, 280, 281, 1153, 282, 283, 284, 285, 286,
	287, 615, 1126, 0, 288, 1133, 289, 1132, 0, 1143,
	290, 291, 292, 293, 294, 295, 1079, 1112, 1046, 296,
	1173, 1174, 622, 0, 297, 298, 1119, 0, 1100, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 1154, 321, 322,
	323, 1103, 1101, 1102, 1109, 1105, 1104, 1108, 324, 325,
	326, 327, 328, 1136, 329, 1130, 1129, 1050, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 1121, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 1056, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 1144, 1145, 360, 1068, 267,
	0, 0, 0, 0, 0, 361, 362, 363, 1128, 0,
	0, 0, 364, 0, 365, 0, 0, 1155, 366, 367,
	1141, 1142, 368, 369, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 1151, 0, 1078, 378, 0, 379, 380,
	381, 382, 383, 1114, 1115, 1118, 460, 1157, 384, 385,
	0, 386, 387, 388, 389, 0, 0, 0, 268, 390,
	391, 392, 394, 0, 1156, 393, 1123, 1124, 0, 1084,
	0, 395, 396, 1158, 1116, 1159, 397, 398, 399, 1160,
	400, 0, 0, 0, 401, 402, 403, 404, 405, 406,
	0, 407, 409, 408, 0, 410, 1152, 1161, 411, 412,
	1162, 0, 413, 0, 0, 0, 414, 415, 418, 1107,
	1106, 416, 417, 419, 420, 0, 421, 422, 424, 427,
	423, 425, 426, 428, 441, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 443, 0, 442,
	1163, 444, 445, 446, 451, 453, 454, 449, 450, 452,
	455, 456, 448, 1164, 447, 1047, 269, 1165, 457, 458,
	1069, 1117, 459, 1131, 461, 462, 0, 0, 463, 0,
	0, 0, 465, 466, 467, 0, 0, 468, 469, 644,
	1166, 470, 1167, 1146, 471, 472, 464, 473, 474, 475,
	476, 477, 478, 479, 480, 0, 481, 482, 646, 483,
	484, 485, 647, 486, 487, 488, 1147, 489, 649, 490,
	491, 0, 492, 493, 0, 494, 495, 496, 497, 498,
	499, 500, 1127, 501, 503, 502, 504, 0, 505, 0,
	506, 507, 508, 0, 0, 0, 0, 509, 0, 511,
	512, 513, 514, 510, 515, 516, 517, 518, 0, 519,
	520, 521, 1168, 522, 523, 524, 525, 1057, 526, 0,
	527, 528, 534, 535, 529, 530, 536, 537, 538, 539,
	540, 0, 542, 543, 541, 544, 545, 546, 1110, 547,
	548, 531, 532, 549, 550, 1169, 551, 552, 553, 554,
	555, 556, 1125, 0, 557, 0, 558, 559, 560, 562,
	533, 563, 568, 569, 1172, 564, 565, 566, 567, 1148,
	571, 572, 0, 573, 574, 1045, 570, 561, 0, 575,
	576, 577, 578, 579, 580, 581, 354, 582, 0, 583,
	1137, 1138, 1139, 1140, 0, 592, 0, 584, 585, 586,
	1149, 587, 1150, 1067, 588, 589, 590, 591, 0, 593,
	594, 0, 1051, 595, 596, 597, 599, 600, 598, 601,
	1111, 602, 0, 0, 603, 604, 605, 661, 1134, 1171,
	0, 607, 606, 608, 664, 0, 0, 0, 0, 0,
	609, 610, 665, 611, 612, 613, 1048, 0, 0, 0,
	0, 0, 0, 0, 1044, 0, 0, 0, 0, 0,
	0, 1042, 1043, 1089, 1061, 1062, 1063, 3021, 3022, 1072,
	1073, 0, 0, 0, 1071, 0, 0, 0, 0, 0,
	270, 272, 271, 273, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 1113, 1077, 0, 0,
	0, 280, 281, 1153, 282, 283, 284, 285, 286, 287,
	615, 1126, 0, 288, 1133, 289, 1132, 0, 1143, 290,
	291, 292, 293, 294, 295, 1079, 1112, 1046, 296, 1173,
	1174, 622, 0, 297, 298, 1119, 0, 1100, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 1154, 321, 322, 323,
	1103, 1101, 1102, 1109, 1105, 1104, 1108, 324, 325, 326,
	327, 328, 1136, 329, 1130, 1129, 1050, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 1121, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 1056, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 1144, 1145, 360, 1068, 267, 0,
	0, 0, 0, 0, 361, 362, 363, 1128, 0, 0,
	0, 364, 0, 365, 0, 0, 1155, 366, 367, 1141,
	1142, 368, 369, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 1151, 0, 1078, 378, 0, 379, 380, 381,
	382, 383, 1114, 1115, 1118, 460, 1157, 384, 385, 0,
	386, 387, 388, 389, 0, 0, 0, 268, 390, 391,
	392, 394, 0, 1156, 393, 1123, 1124, 0, 1084, 0,
	395, 396, 1158, 1116, 1159, 397, 398, 399, 1160, 400,
	0, 0, 0, 401, 402, 403, 404, 405, 406, 0,
	407, 409, 408, 0, 410, 1152, 1161, 411, 412, 1162,
	0, 413, 0, 0, 0, 414, 415, 418, 1107, 1106,
	416, 417, 419, 420, 0, 421, 422, 424, 427, 423,
	425, 426, 428, 441, 429, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 443, 0, 442, 1163,
	444, 445, 446, 451, 453, 454, 449, 450, 452, 455,
	456, 448, 1164, 447, 1047, 269, 1165, 457, 458, 1069,
	1117, 459, 1131, 461, 462, 0, 0, 463, 0, 0,
	0, 465, 466, 467, 0, 0, 468, 469, 644, 1166,
	470, 1167, 1146, 471, 472, 464, 473, 474, 475, 476,
	477, 478, 479, 480, 0, 481, 482, 646, 483, 484,
	485, 647, 486, 487, 488, 1147, 489, 649, 490, 491,
	0, 492, 493, 0, 494, 495, 496, 497, 498, 499,
	500, 1127, 501, 503, 502, 504, 0, 505, 0, 506,
	507, 508, 0, 0, 0, 0, 509, 0, 511, 512,
	513, 514, 510, 515, 516, 517, 518, 0, 519, 520,
	521, 1168, 522, 523, 524, 525, 1057, 526, 0, 527,
	528, 534, 535, 529, 530, 536, 537, 538, 539, 540,
	0, 542, 543, 541, 544, 545, 546, 1110, 547, 548,
	531, 532, 549, 550, 1169, 551, 552, 553, 554, 555,
	556, 1125, 0, 557, 0, 558, 559, 560, 562, 533,
	563, 568, 569, 1172, 564, 565, 566, 567, 1148, 571,
	572, 0, 573, 574, 1045, 570, 561, 0, 575, 576,
	577, 578, 579, 580, 581, 354, 582, 0, 583, 1137,
	1138, 1139, 1140, 0, 592, 0, 584, 585, 586, 1149,
	587, 1150, 1067, 588, 589, 590, 591, 0, 593, 594,
	0, 1051, 595, 596, 597, 599, 600, 598, 601, 1111,
	602, 0, 0, 603, 604, 605, 661, 1134, 1171, 0,
	607, 606, 608, 664, 0, 0, 0, 0, 0, 609,
	610, 665, 611, 612, 613, 1048, 0, 0, 0, 0,
	0, 0, 0, 1044, 0, 0, 0, 0, 0, 0,
	1042, 1043, 1089, 1061, 1062, 1063, 1059, 1060, 1072, 1073,
	0, 0, 0, 1071, 0, 0, 0, 0, 0, 270,
	272, 271, 273, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 1113, 1077, 0, 0, 0,
	280, 281, 1153, 282, 283, 284, 285, 286, 287, 615,
	1126, 0, 288, 1133, 289, 1132, 0, 1143, 290, 291,
	292, 293, 294, 295, 1079, 1112, 1046, 296, 1173, 1174,
	622, 0, 297, 298, 1119, 0, 1100, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 1154, 321, 322, 323, 1103,
	1101, 1102, 1109, 1105, 1104, 1108, 324, 325, 326, 327,
	328, 1136, 329, 1130, 1129, 1050, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	1121, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 1056, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 1144, 1145, 360, 1068, 267, 0, 0,
	0, 0, 0, 361, 362, 363, 1128, 0, 0, 0,
	364, 0, 365, 0, 0, 1155, 366, 367, 1141, 1142,
	368, 369, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 1151, 0, 1078, 378, 0, 379, 380, 381, 382,
	383, 1114, 1115, 1118, 460, 1157, 384, 385, 0, 386,
	387, 388, 389, 0, 0, 0, 268, 390, 391, 392,
	394, 0, 1156, 393, 1123, 1124, 0, 1084, 0, 395,
	396, 1158, 1116, 1159, 397, 398, 399, 1160, 400, 0,
	0, 0, 401, 402, 403, 404, 405, 406, 0, 407,
	409, 408, 0, 410, 1152, 1161, 411, 412, 1162, 0,
	413, 0, 0, 0, 414, 415, 418, 1107, 1106, 416,
	417, 419, 420, 0, 421, 422, 424, 427, 423, 425,
	426, 428, 441, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 443, 0, 442, 1163, 444,
	445, 446, 451, 453, 454, 449, 450, 452, 455, 456,
	448, 1164, 447, 1047, 269, 1165, 457, 458, 1069, 1117,
	459, 1131, 461, 462, 0, 0, 463, 0, 0, 0,
	465, 466, 467, 0, 0, 468, 469, 644, 1166, 470,
	1167, 1146, 471, 472, 464, 473, 474, 475, 476, 477,
	478, 479, 480, 0, 481, 482, 646, 483, 484, 485,
	647, 486, 487, 488, 1147, 489, 649, 490, 491, 0,
	492, 493, 0, 494, 495, 496, 497, 498, 499, 500,
	1127, 501, 503, 502, 504, 0, 505, 0, 506, 507,
	508, 0, 0, 0, 0, 509, 0, 511, 512, 513,
	514, 510, 515, 516, 517, 518, 0, 519, 520, 521,
	1168, 522, 523, 524, 525, 1057, 526, 0, 527, 528,
	534, 535, 529, 530, 536, 537, 538, 539, 540, 0,
	542, 543, 541, 544, 545, 546, 1110, 547, 548, 531,
	532, 549, 550, 1169, 551, 552, 553, 554, 555, 556,
	1125, 0, 557, 0, 558, 559, 560, 562, 533, 563,
	568, 569, 1172, 564, 565, 566, 567, 1148, 571, 572,
	0, 573, 574, 1045, 570, 561, 0, 575, 576, 577,
	578, 579, 580, 581, 354, 582, 0, 583, 1137, 1138,
	1139, 1140, 0, 592, 0, 584, 585, 586, 1149, 587,
	1150, 1067, 588, 589, 590, 591, 0, 593, 594, 0,
	1051, 595, 596, 597, 599, 600, 598, 601, 1111, 602,
	0, 0, 603, 604, 605, 661, 1134, 1171, 0, 607,
	606, 608, 664, 0, 0, 0, 0, 0, 609, 610,
	665, 611, 612, 613, 1048, 0, 0, 0, 0, 0,
	0, 0, 1044, 0, 0, 0, 0, 0, 0, 2351,
	2352, 1089, 1061, 1062, 1063, 1059, 1060, 1072, 1073, 0,
	0, 0, 1071, 0, 0, 0, 0, 0, 270, 272,
	271, 273, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 1113, 1077, 0, 0, 0, 280,
	281, 1153, 282, 283, 284, 285, 286, 287, 615, 1126,
	0, 288, 1133, 289, 1132, 0, 1143, 290, 291, 292,
	293, 294, 295, 1079, 1112, 0, 296, 1173, 1174, 622,
	0, 297, 298, 1119, 0, 1100, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 1154, 321, 322, 323, 1103, 1101,
	1102, 1109, 1105, 1104, 1108, 324, 325, 326, 327, 328,
	1136, 329, 1130, 1129, 0, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 1121,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 1056, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 1144, 1145, 360, 1068, 267, 0, 0, 0,
	0, 0, 361, 362, 363, 1128, 0, 0, 0, 364,
	0, 365, 0, 0, 1155, 366, 367, 1141, 1142, 368,
	369, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	1151, 0, 1078, 378, 0, 379, 380, 381, 382, 383,
	1114, 1115, 1118, 460, 1157, 384, 385, 0, 386, 387,
	388, 389, 0, 0, 0, 268, 390, 391, 392, 394,
	0, 1156, 393, 1123, 1124, 0, 1084, 0, 395, 396,
	1158, 1116, 1159, 397, 398, 399, 1160, 400, 0, 0,
	0, 401, 402, 403, 404, 405, 406, 0, 407, 409,
	408, 0, 410, 1152, 1161, 411, 412, 1162, 0, 413,
	0, 0, 0, 414, 415, 418, 1107, 1106, 416, 417,
	419, 420, 0, 421, 422, 424, 427, 423, 425, 426,
	428, 441, 429, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 443, 0, 442, 1163, 444, 445,
	446, 451, 453, 454, 449, 450, 452, 455, 456, 448,
	1164, 447, 0, 269, 1165, 457, 458, 1069, 1117, 459,
	1131, 461, 462, 0, 0, 463, 0, 0, 0, 465,
	466, 467, 0, 0, 468, 469, 644, 1166, 470, 1167,
	1146, 471, 472, 464, 473, 474, 475, 476, 477, 478,
	479, 480, 0, 481, 482, 646, 483, 484, 485, 647,
	486, 487, 488, 1147, 489, 649, 490, 491, 0, 492,
	493, 0, 494, 495, 496, 497, 498, 499, 500, 1127,
	501, 503, 502, 504, 0, 505, 0, 506, 507, 508,
	0, 0, 0, 0, 509, 0, 511, 512, 513, 514,
	510, 515, 516, 517, 518, 0, 519, 520, 521, 1168,
	522, 523, 524, 525, 1057, 526, 0, 527, 528, 534,
	535, 529, 530, 536, 537, 538, 539, 540, 0, 542,
	543, 541, 544, 545, 546, 1110, 547, 548, 531, 532,
	549, 550, 1169, 551, 552, 553, 554, 555, 556, 1125,
	0, 557, 0, 558, 559, 560, 562, 533, 563, 568,
	569, 1172, 564, 565, 566, 567, 1148, 571, 572, 0,
	573, 574, 0, 570, 561, 0, 575, 576, 577, 578,
	579, 580, 581, 354, 582, 0, 583, 1137, 1138, 1139,
	1140, 0, 592, 0, 584, 585, 586, 1149, 587, 1150,
	1067, 588, 589, 590, 591, 0, 593, 594, 0, 0,
	595, 596, 597, 599, 600, 598, 601, 1111, 602, 0,
	0, 603, 604, 605, 661, 1134, 1171, 0, 607, 606,
	608, 664, 0, 0, 0, 0, 0, 609, 610, 665,
	611, 612, 613, 0, 0, 0, 0, 0, 0, 0,
	0, 2571, 0, 0, 0, 0, 0, 0, 2569, 2570,
	1089, 1061, 1062, 1063, 1059, 1060, 1072, 1073, 0, 0,
	0, 1071, 0, 0, 0, 0, 0, 270, 272, 271,
	273, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 1113, 1077, 0, 0, 0, 280, 281,
	1153, 282, 283, 284, 285, 286, 287, 615, 1126, 0,
	288, 1133, 289, 1132, 0, 1143, 290, 291, 292, 293,
	294, 295, 1079, 1112, 0, 296, 1173, 1174, 622, 0,
	297, 298, 1119, 0, 1100, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 1154, 321, 322, 323, 1103, 1101, 1102,
	1109, 1105, 1104, 1108, 324, 325, 326, 327, 328, 1136,
	329, 1130, 1129, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 1121, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	1056, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 1144, 1145, 360, 1068, 267, 0, 0, 0, 0,
	0, 361, 362, 363, 1128, 0, 0, 0, 364, 0,
	365, 0, 0, 1155, 366, 367, 1141, 1142, 368, 369,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 1151,
	0, 1078, 378, 0, 379, 380, 381, 382, 383, 1114,
	1115, 1118, 460, 1157, 384, 385, 0, 386, 387, 388,
	389, 0, 0, 0, 268, 390, 391, 392, 394, 0,
	1156, 393, 1123, 1124, 0, 1084, 0, 395, 396, 1158,
	1116, 1159, 397, 398, 399, 1160, 400, 0, 0, 0,
	401, 402, 403, 404, 405, 406, 0, 407, 409, 408,
	0, 410, 1152, 1161, 411, 412, 1162, 0, 413, 0,
	0, 0, 414, 415, 418, 1107, 1106, 416, 417, 419,
	420, 0, 421, 422, 424, 427, 423, 425, 426, 428,
	441, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 443, 0, 442, 1163, 444, 445, 446,
	451, 453, 454, 449, 450, 452, 455, 456, 448, 1164,
	447, 0, 269, 1165, 457, 458, 1069, 1117, 459, 1131,
	461, 462, 0, 0, 463, 0, 0, 0, 465, 466,
	467, 0, 0, 468, 469, 644, 1166, 470, 1167, 1146,
	471, 472, 464, 473, 474, 475, 476, 477, 478, 479,
	480, 0, 481, 482, 646, 483, 484, 485, 647, 486,
	487, 488, 1147, 489, 649, 490, 491, 0, 492, 493,
	0, 494, 495, 496, 497, 498, 499, 500, 1127, 501,
	503, 502, 504, 0, 505, 0, 506, 507, 508, 0,
	0, 0, 0, 509, 0, 511, 512, 513, 514, 510,
	515, 516, 517, 518, 0, 519, 520, 521, 1168, 522,
	523, 524, 525, 3016, 3017, 0, 527, 528, 534, 535,
	529, 530, 536, 537, 538, 539, 540, 0, 542, 543,
	541, 544, 545, 546, 1110, 547, 548, 531, 532, 549,
	550, 1169, 551, 552, 553, 554, 555, 556, 1125, 0,
	557, 0, 558, 559, 560, 562, 533, 563, 568, 569,
	1172, 564, 565, 566, 567, 1148, 571, 572, 0, 573,
	574, 0, 570, 561, 0, 575, 576, 577, 578, 579,
	580, 581, 354, 582, 0, 583, 1137, 1138, 1139, 1140,
	0, 592, 0, 584, 585, 586, 1149, 587, 1150, 1067,
	588, 589, 590, 591, 0, 593, 594, 0, 0, 595,
	596, 597, 599, 600, 598, 601, 1111, 602, 0, 0,
	603, 604, 605, 661, 1134, 1171, 0, 607, 606, 608,
	664, 0, 0, 0, 0, 0, 609, 610, 665, 611,
	612, 613, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2059, 2060, 1089,
	1061, 1062, 1063, 1059, 1060, 1072, 1073, 0, 0, 0,
	1071, 0, 0, 0, 0, 0, 270, 272, 271, 273,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 1113, 1077, 0, 0, 0, 280, 281, 1153,
	282, 283, 284, 285, 286, 287, 0, 1126, 0, 288,
	1133, 289, 1132, 0, 1143, 290, 291, 292, 293, 294,
	295, 1079, 1112, 1046, 296, 1173, 1174, 622, 0, 297,
	298, 1119, 0, 1100, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 1154, 321, 322, 4517, 1103, 1101, 1102, 1109,
	1105, 1104, 1108, 324, 325, 326, 327, 328, 1136, 329,
	1130, 1129, 1050, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 1121, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 1056,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	1144, 1145, 360, 1068, 267, 0, 0, 0, 0, 0,
	361, 362, 363, 1128, 0, 0, 0, 364, 0, 365,
	0, 0, 1155, 366, 367, 1141, 1142, 368, 369, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 1151, 0,
	1078, 378, 0, 379, 380, 381, 382, 383, 1114, 1115,
	1118, 460, 0, 384, 385, 0, 386, 387, 388, 389,
	0, 0, 0, 268, 390, 391, 392, 394, 0, 1156,
	393, 1123, 1124, 0, 1084, 0, 395, 396, 0, 1116,
	0, 397, 398, 399, 1160, 400, 0, 0, 0, 401,
	402, 403, 404, 405, 406, 0, 407, 409, 408, 0,
	410, 1152, 1161, 411, 412, 0, 0, 413, 0, 0,
	0, 414, 415, 418, 1107, 1106, 416, 417, 419, 420,
	0, 421, 422, 424, 427, 423, 425, 426, 428, 441,
	429, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 443, 0, 442, 1163, 444, 445, 446, 451,
	453, 454, 449, 450, 452, 455, 456, 448, 1164, 447,
	1047, 269, 0, 457, 458, 1069, 1117, 459, 1131, 461,
	462, 0, 0, 463, 0, 0, 0, 465, 466, 467,
	0, 0, 468, 469, 644, 1166, 470, 1167, 1146, 471,
	472, 464, 473, 474, 475, 476, 477, 478, 479, 480,
	0, 481, 482, 646, 483, 484, 485, 647, 486, 487,
	488, 1147, 489, 649, 490, 491, 0, 492, 493, 0,
	494, 495, 496, 497, 498, 499, 500, 1127, 501, 503,
	502, 504, 0, 505, 0, 506, 507, 508, 0, 0,
	0, 0, 509, 0, 511, 512, 513, 514, 510, 515,
	516, 517, 518, 0, 519, 520, 521, 1168, 522, 523,
	524, 525, 1057, 526, 0, 527, 528, 534, 535, 529,
	530, 536, 537, 538, 539, 540, 0, 542, 543, 541,
	544, 545, 546, 1110, 547, 548, 531, 532, 549, 550,
	0, 551, 552, 553, 554, 555, 556, 1125, 0, 557,
	0, 558, 559, 560, 562, 533, 563, 568, 569, 1172,
	564, 565, 566, 567, 1148, 571, 572, 0, 573, 574,
	1045, 570, 561, 0, 575, 576, 577, 578, 579, 580,
	581, 354, 582, 0, 583, 1137, 1138, 1139, 1140, 0,
	592, 0, 584, 585, 586, 1149, 587, 1150, 1067, 588,
	589, 590, 591, 0, 4516, 594, 0, 1051, 595, 596,
	597, 599, 600, 598, 601, 1111, 602, 0, 0, 603,
	604, 605, 661, 1134, 1171, 0, 607, 606, 608, 664,
	0, 0, 0, 0, 0, 609, 610, 665, 611, 612,
	613, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1035, 0, 1211, 0, 0, 1042, 1043, 0, 0,
	0, 0, 0, 0, 0, 1073, 0, 0, 0, 1071,
	270, 272, 271, 273, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 1113, 0, 0, 0,
	0, 280, 281, 1153, 282, 283, 284, 285, 286, 287,
	615, 616, 0, 288, 617, 289, 618, 0, 619, 290,
	291, 292, 293, 294, 295, 0, 1112, 0, 296, 620,
	621, 622, 0, 297, 298, 1119, 0, 1100, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 1154, 321, 322, 323,
	1103, 1101, 1102, 1109, 1105, 1104, 1108, 324, 325, 326,
	327, 328, 0, 329, 624, 625, 0, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 340, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 626, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 1144, 1145, 360, 0, 267, 0,
	0, 0, 0, 0, 361, 362, 363, 629, 0, 0,
	0, 364, 0, 365, 0, 0, 1155, 366, 367, 630,
	631, 368, 369, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 1151, 0, 633, 378, 0, 379, 380, 381,
	382, 383, 1114, 1115, 1118, 460, 1157, 384, 385, 0,
	386, 387, 388, 389, 0, 0, 0, 268, 390, 391,
	392, 394, 0, 1156, 393, 637, 638, 0, 639, 0,
	395, 396, 1158, 1116, 1159, 397, 398, 399, 1160, 400,
	0, 0, 0, 401, 402, 403, 404, 405, 406, 1197,
	407, 409, 408, 0, 410, 1152, 1161, 411, 412, 1162,
	0, 413, 0, 0, 0, 414, 415, 418, 1107, 1106,
	416, 417, 419, 420, 0, 421, 422, 424, 427, 423,
	425, 426, 428, 441, 429, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 443, 0, 442, 1163,
	444, 445, 446, 451, 453, 454, 449, 450, 452, 455,
	456, 448, 1164, 447, 0, 269, 1165, 457, 458, 0,
	1117, 459, 643, 461, 462, 0, 0, 463, 0, 0,
	1203, 465, 466, 467, 0, 0, 468, 469, 644, 1166,
	470, 1167, 1146, 471, 472, 464, 473, 474, 475, 476,
	477, 478, 479, 480, 0, 481, 482, 646, 483, 484,
	485, 647, 486, 487, 488, 1147, 489, 649, 490, 491,
	0, 492, 493, 0, 494, 495, 496, 497, 498, 499,
	500, 650, 501, 503, 502, 504, 0, 505, 0, 506,
	507, 508, 0, 0, 0, 0, 509, 0, 511, 512,
	513, 514, 510, 515, 516, 517, 518, 0, 519, 520,
	521, 1168, 522, 523, 524, 525, 651, 1205, 0, 527,
	528, 534, 535, 529, 530, 536, 537, 538, 539, 540,
	229, 542, 543, 541, 544, 545, 546, 1110, 547, 548,
	531, 532, 549, 550, 1169, 551, 552, 553, 554, 555,
	556, 652, 0, 557, 0, 558, 559, 560, 562, 533,
	563, 568, 569, 653, 564, 565, 566, 567, 1148, 571,
	572, 0, 573, 574, 0, 570, 561, 231, 575, 576,
	577, 578, 579, 580, 581, 354, 582, 0, 583, 655,
	656, 657, 658, 0, 592, 0, 584, 585, 586, 1149,
	587, 1150, 0, 588, 589, 590, 591, 0, 593, 594,
	0, 0, 595, 596, 597, 599, 600, 598, 601, 1111,
	602, 0, 0, 603, 604, 605, 1566, 662, 663, 0,
	607, 606, 608, 664, 0, 1211, 0, 0, 223, 609,
	610, 665, 611, 612, 613, 0, 0, 224, 0, 0,
	0, 0, 270, 272, 271, 273, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 1201, 1113, 1902,
	0, 0, 0, 280, 281, 1153, 282, 283, 284, 285,
	286, 287, 615, 616, 0, 288, 617, 289, 618, 0,
	619, 290, 291, 292, 293, 294, 295, 0, 1112, 0,
	296, 620, 621, 622, 0, 297, 298, 1119, 0, 1100,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 1154, 321,
	322, 323, 1103, 1101, 1102, 1109, 1105, 1104, 1108, 324,
	325, 326, 327, 328, 0, 329, 624, 625, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 626, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 1144, 1145, 360, 0,
	267, 0, 0, 0, 0, 0, 361, 362, 363, 629,
	0, 0, 0, 364, 0, 365, 0, 0, 1155, 366,
	367, 630, 631, 368, 369, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 1151, 0, 633, 378, 0, 379,
	380, 381, 382, 383, 1114, 1115, 1118, 460, 1157, 384,
	385, 0, 386, 387, 388, 389, 0, 0, 0, 268,
	390, 391, 392, 394, 0, 1156, 393, 637, 638, 0,
	639, 0, 395, 396, 1158, 1116, 1159, 397, 398, 399,
	1160, 400, 0, 0, 0, 401, 402, 403, 404, 405,
	406, 1197, 407, 409, 408, 0, 410, 1152, 1161, 411,
	412, 1162, 0, 413, 0, 0, 0, 414, 415, 418,
	1107, 1106, 416, 417, 419, 420, 0, 421, 422, 424,
	427, 423, 425, 426, 428, 441, 429, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 443, 0,
	442, 1163, 444, 445, 446, 451, 453, 454, 449, 450,
	452, 455, 456, 448, 1164, 447, 0, 269, 1165, 457,
	458, 0, 1117, 459, 643, 461, 462, 0, 0, 463,
	0, 0, 1203, 465, 466, 467, 0, 0, 468, 469,
	644, 1166, 470, 1167, 1146, 471, 472, 464, 473, 474,
	475, 476, 477, 478, 479, 480, 0, 481, 482, 646,
	483, 484, 485, 647, 486, 487, 488, 1147, 489, 649,
	490, 491, 0, 492, 493, 0, 494, 495, 496, 497,
	498, 499, 500, 650, 501, 503, 502, 504, 0, 505,
	0, 506, 507, 508, 0, 0, 0, 0, 509, 0,
	511, 512, 513, 514, 510, 515, 516, 517, 518, 0,
	519, 520, 521, 1168, 522, 523, 524, 525, 651, 1205,
	0, 527, 528, 534, 535, 529, 530, 536, 537, 538,
	539, 540, 229, 542, 543, 541, 544, 545, 546, 1110,
	547, 548, 531, 532, 549, 550, 1169, 551, 552, 553,
	554, 555, 556, 652, 0, 557, 0, 558, 559, 560,
	562, 533, 563, 568, 569, 653, 564, 565, 566, 567,
	1148, 571, 572, 0, 573, 574, 0, 570, 561, 231,
	575, 576, 577, 578, 579, 580, 581, 354, 582, 0,
	583, 655, 656, 657, 658, 0, 592, 0, 584, 585,
	586, 1149, 587, 1150, 0, 588, 589, 590, 591, 0,
	593, 594, 0, 0, 595, 596, 597, 599, 600, 598,
	601, 1111, 602, 0, 0, 603, 604, 605, 1566, 662,
	663, 0, 607, 606, 608, 664, 0, 3200, 0, 1211,
	223, 609, 610, 665, 611, 612, 613, 0, 0, 224,
	0, 0, 0, 0, 0, 0, 270, 272, 271, 273,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 1201,
	0, 1902, 1113, 0, 0, 0, 0, 280, 281, 1153,
	282, 283, 284, 285, 286, 287, 615, 616, 0, 288,
	617, 289, 618, 0, 619, 290, 291, 292, 293, 294,
	295, 0, 1112, 0, 296, 620, 621, 622, 0, 297,
	298, 1119, 0, 1100, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 1154, 321, 322, 323, 1103, 1101, 1102, 1109,
	1105, 1104, 1108, 324, 325, 326, 327, 328, 0, 329,
	624, 625, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 626,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	1144, 1145, 360, 0, 267, 0, 0, 0, 0, 0,
	361, 362, 363, 629, 0, 0, 0, 364, 0, 365,
	0, 0, 1155, 366, 367, 630, 631, 368, 369, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 1151, 0,
	633, 378, 0, 379, 380, 381, 382, 383, 1114, 1115,
	1118, 460, 1157, 384, 385, 0, 386, 387, 388, 389,
	0, 0, 0, 268, 390, 391, 392, 394, 0, 1156,
	393, 637, 638, 0, 639, 0, 395, 396, 1158, 1116,
	1159, 397, 398, 399, 1160, 400, 0, 0, 0, 401,
	402, 403, 404, 405, 406, 1197, 407, 409, 408, 0,
	410, 1152, 1161, 411, 412, 1162, 0, 413, 0, 0,
	0, 414, 415, 418, 1107, 1106, 416, 417, 419, 420,
	0, 421, 422, 424, 427, 423, 425, 426, 428, 441,
	429, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 443, 0, 442, 1163, 444, 445, 446, 451,
	453, 454, 449, 450, 452, 455, 456, 448, 1164, 447,
	0, 269, 1165, 457, 458, 0, 1117, 459, 643, 461,
	462, 0, 0, 463, 0, 0, 1203, 465, 466, 467,
	0, 0, 468, 469, 644, 1166, 470, 1167, 1146, 471,
	472, 464, 473, 474, 475, 476, 477, 478, 479, 480,
	0, 481, 482, 646, 483, 484, 485, 647, 486, 487,
	488, 1147, 489, 649, 490, 491, 0, 492, 493, 0,
	494, 495, 496, 497, 498, 499, 500, 650, 501, 503,
	502, 504, 0, 505, 0, 506, 507, 508, 0, 0,
	0, 0, 509, 0, 511, 512, 513, 514, 510, 515,
	516, 517, 518, 0, 519, 520, 521, 1168, 522, 523,
	524, 525, 651, 1205, 0, 527, 528, 534, 535, 529,
	530, 536, 537, 538, 539, 540, 0, 542, 543, 541,
	544, 545, 546, 1110, 547, 548, 531, 532, 549, 550,
	1169, 551, 552, 553, 554, 555, 556, 652, 0, 557,
	0, 558, 559, 560, 562, 533, 563, 568, 569, 653,
	564, 565, 566, 567, 1148, 571, 572, 0, 573, 574,
	0, 570, 561, 0, 575, 576, 577, 578, 579, 580,
	581, 354, 582, 0, 583, 655, 656, 657, 658, 0,
	592, 0, 584, 585, 586, 1149, 587, 1150, 0, 588,
	589, 590, 591, 0, 593, 594, 0, 0, 595, 596,
	597, 599, 600, 598, 601, 1111, 602, 0, 0, 603,
	604, 605, 661, 662, 663, 0, 607, 606, 608, 664,
	0, 1193, 0, 1211, 0, 609, 610, 665, 611, 612,
	613, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	270, 272, 271, 273, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 1201, 0, 1199, 1113, 0, 0, 0,
	0, 280, 281, 1153, 282, 283, 284, 285, 286, 287,
	615, 616, 0, 288, 617, 289, 618, 0, 619, 290,
	291, 292, 293, 294, 295, 0, 1112, 0, 296, 620,
	621, 622, 0, 297, 298, 1119, 0, 1100, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 1154, 321, 322, 323,
	1103, 1101, 1102, 1109, 1105, 1104, 1108, 324, 325, 326,
	327, 328, 0, 329, 624, 625, 0, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 340, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 626, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 1144, 1145, 360, 0, 267, 0,
	0, 0, 0, 0, 361, 362, 363, 629, 0, 0,
	0, 364, 0, 365, 0, 0, 1155, 366, 367, 630,
	631, 368, 369, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 1151, 0, 633, 378, 0, 379, 380, 381,
	382, 383, 1114, 1115, 1118, 460, 1157, 384, 385, 0,
	386, 387, 388, 389, 0, 0, 0, 268, 390, 391,
	392, 394, 0, 1156, 393, 637, 638, 0, 639, 0,
	395, 396, 1158, 1116, 1159, 397, 398, 399, 1160, 400,
	0, 0, 0, 401, 402, 403, 404, 405, 406, 1197,
	407, 409, 408, 0, 410, 1152, 1161, 411, 412, 1162,
	0, 413, 0, 0, 0, 414, 415, 418, 1107, 1106,
	416, 417, 419, 420, 0, 421, 422, 424, 427, 423,
	425, 426, 428, 441, 429, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 443, 0, 442, 1163,
	444, 445, 446, 451, 453, 454, 449, 450, 452, 455,
	456, 448, 1164, 447, 0, 269, 1165, 457, 458, 0,
	1117, 459, 643, 461, 462, 0, 0, 463, 0, 0,
	1203, 465, 466, 467, 0, 0, 468, 469, 644, 1166,
	470, 1167, 1146, 471, 472, 464, 473, 474, 475, 476,
	477, 478, 479, 480, 0, 481, 482, 646, 483, 484,
	485, 647, 486, 487, 488, 1147, 489, 649, 490, 491,
	0, 492, 493, 0, 494, 495, 496, 497, 498, 499,
	500, 650, 501, 503, 502, 504, 0, 505, 0, 506,
	507, 508, 0, 0, 0, 0, 509, 0, 511, 512,
	513, 514, 510, 515, 516, 517, 518, 0, 519, 520,
	521, 1168, 522, 523, 524, 525, 651, 1205, 0, 527,
	528, 534, 535, 529, 530, 536, 537, 538, 539, 540,
	0, 542, 543, 541, 544, 545, 546, 1110, 547, 548,
	531, 532, 549, 550, 1169, 551, 552, 553, 554, 555,
	556, 652, 0, 557, 0, 558, 559, 560, 562, 533,
	563, 568, 569, 653, 564, 565, 566, 567, 1148, 571,
	572, 0, 573, 574, 0, 570, 561, 0, 575, 576,
	577, 578, 579, 580, 581, 354, 582, 0, 583, 655,
	656, 657, 658, 0, 592, 0, 584, 585, 586, 1149,
	587, 1150, 0, 588, 589, 590, 591, 0, 593, 594,
	0, 0, 595, 596, 597, 599, 600, 598, 601, 1111,
	602, 0, 0, 603, 604, 605, 661, 662, 663, 0,
	607, 606, 608, 664, 0, 1211, 0, 0, 0, 609,
	610, 665, 611, 612, 613, 0, 0, 0, 0, 0,
	0, 0, 270, 272, 271, 273, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 1201, 1113, 1199,
	0, 0, 0, 280, 281, 1153, 282, 283, 284, 285,
	286, 287, 615, 616, 0, 288, 617, 289, 618, 0,
	619, 290, 291, 292, 293, 294, 295, 0, 1112, 0,
	296, 620, 621, 622, 0, 297, 298, 1119, 0, 1100,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 1154, 321,
	322, 323, 1103, 1101, 1102, 1109, 1105, 1104, 1108, 324,
	325, 326, 327, 328, 0, 329, 624, 625, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 626, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 1144, 1145, 360, 0,
	267, 0, 0, 0, 0, 0, 361, 362, 363, 629,
	0, 0, 0, 364, 0, 365, 0, 0, 1155, 366,
	367, 630, 631, 368, 369, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 1151, 0, 633, 378, 0, 379,
	380, 381, 382, 383, 1114, 1115, 1118, 460, 1157, 384,
	385, 0, 386, 387, 388, 389, 0, 0, 0, 268,
	390, 391, 392, 394, 0, 1156, 393, 637, 638, 0,
	639, 0, 395, 396, 1158, 1116, 1159, 397, 398, 399,
	1160, 400, 0, 0, 0, 401, 402, 403, 404, 405,
	406, 1197, 407, 409, 408, 0, 410, 1152, 1161, 411,
	412, 1162, 0, 413, 0, 0, 0, 414, 415, 418,
	1107, 1106, 416, 417, 419, 420, 0, 421, 422, 424,
	427, 423, 425, 426, 428, 441, 429, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 443, 0,
	442, 1163, 444, 445, 446, 451, 453, 454, 449, 450,
	452, 455, 456, 448, 1164, 447, 0, 269, 1165, 457,
	458, 0, 1117, 459, 643, 461, 462, 0, 0, 463,
	0, 0, 1203, 465, 466, 467, 0, 0, 468, 469,
	644, 1166, 470, 1167, 1146, 471, 472, 464, 473, 474,
	475, 476, 477, 478, 479, 480, 0, 481, 482, 646,
	483, 484, 485, 647, 486, 487, 488, 1147, 489, 649,
	490, 491, 0, 492, 493, 0, 494, 495, 496, 497,
	498, 499, 500, 650, 501, 503, 502, 504, 0, 505,
	0, 506, 507, 508, 0, 0, 0, 0, 509, 0,
	511, 512, 513, 514, 510, 515, 516, 517, 518, 0,
	519, 520, 521, 1168, 522, 523, 524, 525, 651, 1205,
	0, 527, 528, 534, 535, 529, 530, 536, 537, 538,
	539, 540, 0, 542, 543, 541, 544, 545, 546, 1110,
	547, 548, 531, 532, 549, 550, 1169, 551, 552, 553,
	554, 555, 556, 652, 0, 557, 0, 558, 559, 560,
	562, 533, 563, 568, 569, 653, 564, 565, 566, 567,
	1148, 571, 572, 0, 573, 574, 0, 570, 561, 0,
	575, 576, 577, 578, 579, 580, 581, 354, 582, 0,
	583, 655, 656, 657, 658, 0, 592, 0, 584, 585,
	586, 1149, 587, 1150, 0, 588, 589, 590, 591, 0,
	593, 594, 0, 0, 595, 596, 597, 599, 600, 598,
	601, 1111, 602, 0, 0, 603, 604, 605, 661, 662,
	663, 0, 607, 606, 608, 664, 0, 1211, 0, 0,
	0, 609, 610, 665, 611, 612, 613, 0, 0, 0,
	0, 0, 0, 0, 270, 272, 271, 273, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 1201,
	1113, 1199, 0, 0, 0, 280, 281, 1153, 282, 283,
	284, 285, 286, 287, 615, 616, 0, 288, 617, 289,
	618, 0, 619, 290, 291, 292, 293, 294, 295, 0,
	1112, 0, 296, 620, 621, 622, 0, 297, 298, 1119,
	0, 1100, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	1154, 321, 322, 323, 1103, 1101, 1102, 1109, 1105, 1104,
	1108, 324, 325, 326, 327, 328, 0, 329, 624, 625,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 626, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 1144, 1145,
	360, 0, 267, 0, 0, 0, 0, 0, 361, 362,
	363, 629, 0, 0, 0, 364, 0, 365, 0, 0,
	1155, 366, 367, 630, 631, 368, 369, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 1151, 0, 633, 378,
	0, 379, 380, 381, 382, 383, 1114, 1115, 1118, 460,
	1157, 384, 385, 0, 386, 387, 388, 389, 0, 0,
	0, 268, 390, 391, 392, 394, 0, 1156, 393, 637,
	638, 0, 639, 0, 395, 396, 1158, 1116, 1159, 397,
	398, 399, 1160, 400, 0, 0, 0, 401, 402, 403,
	404, 405, 406, 0, 407, 409, 408, 0, 410, 1152,
	1161, 411, 412, 1162, 0, 413, 0, 0, 0, 414,
	415, 418, 1107, 1106, 416, 417, 419, 420, 0, 421,
	422, 424, 427, 423, 425, 426, 428, 441, 429, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	443, 0, 442, 1163, 444, 445, 446, 451, 453, 454,
	449, 450, 452, 455, 456, 448, 1164, 447, 0, 269,
	1165, 457, 458, 0, 1117, 459, 643, 461, 462, 0,
	0, 463, 0, 0, 0, 465, 466, 467, 0, 0,
	468, 469, 644, 1166, 470, 1167, 1146, 471, 472, 464,
	473, 474, 475, 476, 477, 478, 479, 480, 0, 481,
	482, 646, 483, 484, 485, 647, 486, 487, 488, 1147,
	489, 649, 490, 491, 0, 492, 493, 0, 494, 495,
	496, 497, 498, 499, 500, 650, 501, 503, 502, 504,
	0, 505, 0, 506, 507, 508, 0, 0, 0, 0,
	509, 0, 511, 512, 513, 514, 510, 515, 516, 517,
	518, 0, 519, 520, 521, 1168, 522, 523, 524, 525,
	651, 526, 0, 527, 528, 534, 535, 529, 530, 536,
	537, 538, 539, 540, 0, 542, 543, 541, 544, 545,
	546, 1110, 547, 548, 531, 532, 549, 550, 1169, 551,
	552, 553, 554, 555, 556, 652, 0, 557, 0, 558,
	559, 560, 562, 533, 563, 568, 569, 653, 564, 565,
	566, 567, 1148, 571, 572, 0, 573, 574, 0, 570,
	561, 0, 575, 576, 577, 578, 579, 580, 581, 354,
	582, 0, 583, 655, 656, 657, 658, 0, 592, 0,
	584, 585, 586, 1149, 587, 1150, 0, 588, 589, 590,
	591, 0, 593, 594, 0, 0, 595, 596, 597, 599,
	600, 598, 601, 1111, 602, 0, 0, 603, 604, 605,
	661, 662, 663, 0, 607, 606, 608, 664, 1211, 0,
	0, 0, 0, 609, 610, 665, 611, 612, 613, 0,
	0, 0, 0, 0, 0, 270, 272, 271, 273, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 1113, 0, 4001, 0, 0, 280, 281, 1153, 282,
	283, 284, 285, 286, 287, 615, 616, 0, 288, 617,
	289, 618, 0, 619, 290, 291, 292, 293, 294, 295,
	0, 1112, 0, 296, 620, 621, 622, 0, 297, 298,
	1119, 0, 1100, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 1154, 321, 322, 323, 1103, 1101, 1102, 1109, 1105,
	1104, 1108, 324, 325, 326, 327, 328, 0, 329, 624,
	625, 0, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 340, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 626, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 1144,
	1145, 360, 0, 267, 0, 0, 0, 0, 0, 361,
	362, 363, 629, 0, 0, 0, 364, 0, 365, 0,
	0, 1155, 366, 367, 630, 631, 368, 369, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 1151, 0, 633,
	378, 0, 379, 380, 381, 382, 383, 1114, 1115, 1118,
	460, 1157, 384, 385, 0, 386, 387, 388, 389, 0,
	0, 0, 268, 390, 391, 392, 394, 0, 1156, 393,
	637, 638, 0, 639, 0, 395, 396, 1158, 1116, 1159,
	397, 398, 399, 1160, 400, 0, 0, 0, 401, 402,
	403, 404, 405, 406, 0, 407, 409, 408, 0, 410,
	1152, 1161, 411, 412, 1162, 0, 413, 0, 0, 0,
	414, 415, 418, 1107, 1106, 416, 417, 419, 420, 0,
	421, 422, 424, 427, 423, 425, 426, 428, 441, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 443, 0, 442, 1163, 444, 445, 446, 451, 453,
	454, 449, 450, 452, 455, 456, 448, 1164, 447, 0,
	269, 1165, 457, 458, 0, 1117, 459, 643, 461, 462,
	0, 0, 463, 0, 0, 0, 465, 466, 467, 0,
	0, 468, 469, 644, 1166, 470, 1167, 1146, 471, 472,
	464, 473, 474, 475, 476, 477, 478, 479, 480, 0,
	481, 482, 646, 483, 484, 485, 647, 486, 487, 488,
	1147, 489, 649, 490, 491, 0, 492, 493, 0, 494,
	495, 496, 497, 498, 499, 500, 650, 501, 503, 502,
	504, 0, 505, 0, 506, 507, 508, 0, 0, 0,
	0, 509, 0, 511, 512, 513, 514, 510, 515, 516,
	517, 518, 0, 519, 520, 521, 1168, 522, 523, 524,
	525, 651, 1205, 0, 527, 528, 534, 535, 529, 530,
	536, 537, 538, 539, 540, 0, 542, 543, 541, 544,
	545, 546, 1110, 547, 548, 531, 532, 549, 550, 1169,
	551, 552, 553, 554, 555, 556, 652, 0, 557, 0,
	558, 559, 560, 562, 533, 563, 568, 569, 653, 564,
	565, 566, 567, 1148, 571, 572, 0, 573, 574, 0,
	570, 561, 0, 575, 576, 577, 578, 579, 580, 581,
	354, 582, 0, 583, 655, 656, 657, 658, 0, 592,
	0, 584, 585, 586, 1149, 587, 1150, 0, 588, 589,
	590, 591, 0, 593, 594, 0, 0, 595, 596, 597,
	599, 600, 598, 601, 1111, 602, 0, 0, 603, 604,
	605, 661, 662, 663, 0, 607, 606, 608, 664, 0,
	1035, 0, 1292, 0, 609, 610, 665, 611, 612, 613,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 270,
	272, 271, 273, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 1801, 614, 0, 0, 0, 0,
	280, 281, 1153, 282, 283, 284, 285, 286, 287, 615,
	616, 0, 288, 617, 289, 618, 0, 619, 290, 291,
	292, 293, 294, 295, 0, 0, 0, 296, 620, 621,
	622, 0, 297, 298, 623, 0, 1297, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 1154, 321, 322, 323, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 326, 327,
	328, 0, 329, 624, 625, 0, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	340, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 626, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 627, 628, 360, 0, 267, 0, 0,
	0, 0, 0, 361, 362, 363, 629, 0, 0, 0,
	364, 0, 365, 0, 0, 1155, 366, 367, 630, 631,
	368, 369, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 632, 0, 633, 378, 0, 379, 380, 381, 382,
	383, 634, 635, 636, 460, 1157, 384, 385, 0, 386,
	387, 388, 389, 0, 0, 0, 0, 390, 391, 392,
	394, 0, 1156, 393, 637, 638, 0, 639, 0, 395,
	396, 1158, 640, 1159, 397, 398, 399, 1160, 400, 0,
	0, 0, 401, 402, 403, 404, 405, 406, 0, 407,
	409, 408, 0, 410, 641, 1161, 411, 412, 1162, 0,
	413, 0, 0, 0, 414, 415, 418, 0, 0, 416,
	417, 419, 420, 0, 421, 422, 424, 427, 423, 425,
	426, 428, 441, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 443, 0, 442, 1163, 444,
	445, 446, 451, 453, 454, 449, 450, 452, 455, 456,
	448, 1164, 447, 0, 0, 1165, 457, 458, 0, 642,
	459, 643, 461, 462, 0, 0, 463, 0, 0, 0,
	465, 466, 467, 0, 0, 468, 469, 644, 1166, 470,
	1167, 645, 471, 472, 464, 473, 474, 475, 476, 477,
	478, 479, 480, 0, 481, 482, 646, 483, 484, 485,
	647, 486, 487, 488, 648, 489, 649, 490, 491, 0,
	492, 493, 0, 494, 495, 496, 497, 498, 499, 500,
	650, 501, 503, 502, 504, 0, 505, 0, 506, 507,
	508, 0, 0, 0, 0, 509, 0, 511, 512, 513,
	514, 510, 515, 516, 517, 518, 0, 519, 520, 521,
	1168, 522, 523, 524, 525, 651, 526, 0, 527, 528,
	534, 535, 529, 530, 536, 537, 538, 539, 540, 229,
	542, 543, 541, 544, 545, 546, 0, 547, 548, 531,
	532, 549, 550, 1169, 551, 552, 553, 554, 555, 556,
	652, 0, 557, 0, 558, 559, 560, 562, 533, 563,
	568, 569, 653, 564, 565, 566, 567, 654, 571, 572,
	0, 573, 574, 0, 570, 561, 231, 575, 576, 577,
	578, 579, 580, 581, 354, 582, 0, 583, 655, 656,
	657, 658, 0, 592, 0, 584, 585, 586, 659, 587,
	660, 0, 588, 589, 590, 591, 0, 593, 594, 0,
	0, 595, 596, 597, 599, 600, 598, 601, 0, 602,
	0, 0, 603, 604, 605, 1566, 662, 663, 0, 607,
	606, 608, 664, 0, 1563, 0, 1292, 223, 609, 610,
	665, 611, 612, 613, 0, 0, 224, 0, 0, 0,
	0, 0, 0, 270, 272, 271, 273, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 185, 614,
	0, 0, 0, 0, 280, 281, 1153, 282, 283, 284,
	285, 286, 287, 615, 616, 0, 288, 617, 289, 618,
	0, 619, 290, 291, 292, 293, 294, 295, 0, 0,
	0, 296, 620, 621, 622, 0, 297, 298, 623, 0,
	1297, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 1154,
	321, 322, 323, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 326, 327, 328, 0, 329, 624, 625, 0,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 340, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 626, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 627, 628, 360,
	0, 267, 0, 0, 0, 0, 0, 361, 362, 363,
	629, 0, 0, 0, 364, 0, 365, 0, 0, 1155,
	366, 367, 630, 631, 368, 369, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 632, 0, 633, 378, 0,
	379, 380, 381, 382, 383, 634, 635, 636, 460, 1157,
	384, 385, 0, 386, 387, 388, 389, 0, 0, 0,
	0, 390, 391, 392, 394, 0, 1156, 393, 637, 638,
	0, 639, 0, 395, 396, 1158, 640, 1159, 397, 398,
	399, 1160, 400, 0, 0, 0, 401, 402, 403, 404,
	405, 406, 0, 407, 409, 408, 0, 410, 641, 1161,
	411, 412, 1162, 0, 413, 0, 0, 0, 414, 415,
	418, 0, 0, 416, 417, 419, 420, 0, 421, 422,
	424, 427, 423, 425, 426, 428, 441, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 443,
	0, 442, 1163, 444, 445, 446, 451, 453, 454, 449,
	450, 452, 455, 456, 448, 1164, 447, 0, 0, 1165,
	457, 458, 0, 642, 459, 643, 461, 462, 0, 0,
	463, 0, 0, 0, 465, 466, 467, 0, 0, 468,
	469, 644, 1166, 470, 1167, 645, 471, 472, 464, 473,
	474, 475, 476, 477, 478, 479, 480, 0, 481, 482,
	646, 483, 484, 485, 647, 486, 487, 488, 648, 489,
	649, 490, 491, 0, 492, 493, 0, 494, 495, 496,
	497, 498, 499, 500, 650, 501, 503, 502, 504, 0,
	505, 0, 506, 507, 508, 0, 0, 0, 0, 509,
	0, 511, 512, 513, 514, 510, 515, 516, 517, 518,
	0, 519, 520, 521, 1168, 522, 523, 524, 525, 651,
	526, 0, 527, 528, 534, 535, 529, 530, 536, 537,
	538, 539, 540, 229, 542, 543, 541, 544, 545, 546,
	0, 547, 548, 531, 532, 549, 550, 1169, 551, 552,
	553, 554, 555, 556, 652, 0, 557, 0, 558, 559,
	560, 562, 533, 563, 568, 569, 653, 564, 565, 566,
	567, 654, 571, 572, 0, 573, 574, 0, 570, 561,
	231, 575, 576, 577, 578, 579, 580, 581, 354, 582,
	0, 583, 655, 656, 657, 658, 0, 592, 0, 584,
	585, 586, 659, 587, 660, 0, 588, 589, 590, 591,
	0, 593, 594, 0, 0, 595, 596, 597, 599, 600,
	598, 601, 0, 602, 0, 0, 603, 604, 605, 1566,
	662, 663, 0, 607, 606, 608, 664, 0, 0, 0,
	0, 223, 609, 610, 665, 611, 612, 613, 0, 0,
	224, 0, 0, 0, 0, 0, 1292, 1291, 0, 0,
	0, 0, 1289, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 185, 270, 272, 271, 273, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 614,
	0, 0, 0, 0, 280, 281, 1153, 282, 283, 284,
	285, 286, 287, 615, 616, 0, 288, 617, 289, 618,
	0, 619, 290, 291, 292, 293, 294, 295, 0, 0,
	0, 296, 620, 621, 622, 0, 297, 298, 623, 0,
	1297, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 1154,
	321, 322, 323, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 326, 327, 328, 0, 329, 624, 625, 0,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 340, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 626, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 627, 628, 360,
	0, 267, 0, 0, 0, 0, 0, 361, 362, 363,
	629, 0, 0, 0, 364, 0, 365, 0, 0, 1155,
	366, 367, 630, 631, 368, 369, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 632, 0, 633, 378, 0,
	379, 380, 381, 382, 383, 634, 635, 636, 460, 1157,
	384, 385, 0, 386, 387, 388, 389, 0, 0, 0,
	0, 390, 391, 392, 394, 0, 1156, 393, 637, 638,
	0, 639, 0, 395, 396, 1158, 640, 1159, 397, 398,
	399, 1160, 400, 0, 0, 0, 401, 402, 403, 404,
	405, 406, 0, 407, 409, 408, 0, 410, 641, 1161,
	411, 412, 1162, 0, 413, 0, 0, 0, 414, 415,
	418, 0, 0, 416, 417, 419, 420, 0, 421, 422,
	424, 427, 423, 425, 426, 428, 441, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 443,
	0, 442, 1163, 444, 445, 446, 451, 453, 454, 449,
	450, 452, 455, 456, 448, 1164, 447, 0, 0, 1165,
	457, 458, 0, 642, 459, 643, 461, 462, 0, 0,
	463, 0, 0, 0, 465, 466, 467, 0, 0, 468,
	469, 644, 1166, 470, 1167, 645, 471, 472, 464, 473,
	474, 475, 476, 477, 478, 479, 480, 0, 481, 482,
	646, 483, 484, 485, 647, 486, 487, 488, 648, 489,
	649, 490, 491, 0, 492, 493, 0, 494, 495, 496,
	497, 498, 499, 500, 650, 501, 503, 502, 504, 0,
	505, 0, 506, 507, 508, 0, 0, 0, 0, 509,
	0, 511, 512, 513, 514, 510, 515, 516, 517, 518,
	0, 519, 520, 521, 1168, 522, 523, 524, 525, 651,
	526, 0, 527, 528, 534, 535, 529, 530, 536, 537,
	538, 539, 540, 0, 542, 543, 541, 544, 545, 546,
	0, 547, 548, 531, 532, 549, 550, 1169, 551, 552,
	553, 554, 555, 556, 652, 0, 557, 0, 558, 559,
	560, 562, 533, 563, 568, 569, 653, 564, 565, 566,
	567, 654, 571, 572, 0, 573, 574, 0, 570, 561,
	0, 575, 576, 577, 578, 579, 580, 581, 354, 582,
	0, 583, 655, 656, 657, 658, 0, 592, 0, 584,
	585, 586, 659, 587, 660, 0, 588, 589, 590, 591,
	0, 593, 594, 0, 0, 595, 596, 597, 599, 600,
	598, 601, 0, 602, 0, 0, 603, 604, 605, 661,
	662, 663, 0, 607, 606, 608, 664, 0, 0, 0,
	0, 0, 609, 610, 665, 611, 612, 613, 0, 0,
	0, 0, 0, 0, 0, 0, 1292, 1291, 0, 0,
	0, 0, 1289, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1588, 270, 272, 271, 273, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 614,
	0, 0, 0, 0, 280, 281, 1153, 282, 283, 284,
	285, 286, 287, 615, 616, 0, 288, 617, 289, 618,
	0, 619, 290, 291, 292, 293, 294, 295, 0, 0,
	0, 296, 620, 621, 622, 0, 297, 298, 623, 0,
	1297, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 1154,
	321, 322, 323, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 326, 327, 328, 0, 329, 624, 625, 0,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 340, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 626, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 627, 628, 360,
	0, 267, 0, 0, 0, 0, 0, 361, 362, 363,
	629, 0, 0, 0, 364, 0, 365, 0, 0, 1155,
	366, 367, 630, 631, 368, 369, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 632, 0, 633, 378, 0,
	379, 380, 381, 382, 383, 634, 635, 636, 460, 1157,
	384, 385, 0, 386, 387, 388, 389, 0, 0, 0,
	0, 390, 391, 392, 394, 0, 1156, 393, 637, 638,
	0, 639, 0, 395, 396, 1158, 640, 1159, 397, 398,
	399, 1160, 400, 0, 0, 0, 401, 402, 403, 404,
	405, 406, 0, 407, 409, 408, 0, 410, 641, 1161,
	411, 412, 1162, 0, 413, 0, 0, 0, 414, 415,
	418, 0, 0, 416, 417, 419, 420, 0, 421, 422,
	424, 427, 423, 425, 426, 428, 441, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 443,
	0, 442, 1163, 444, 445, 446, 451, 453, 454, 449,
	450, 452, 455, 456, 448, 1164, 447, 0, 0, 1165,
	457, 458, 0, 642, 459, 643, 461, 462, 0, 0,
	463, 0, 0, 0, 465, 466, 467, 0, 0, 468,
	469, 644, 1166, 470, 1167, 645, 471, 472, 464, 473,
	474, 475, 476, 477, 478, 479, 480, 0, 481, 482,
	646, 483, 484, 485, 647, 486, 487, 488, 648, 489,
	649, 490, 491, 0, 492, 493, 0, 494, 495, 496,
	497, 498, 499, 500, 650, 501, 503, 502, 504, 0,
	505, 0, 506, 507, 508, 0, 0, 0, 0, 509,
	0, 511, 512, 513, 514, 510, 515, 516, 517, 518,
	0, 519, 520, 521, 1168, 522, 523, 524, 525, 651,
	526, 0, 527, 528, 534, 535, 529, 530, 536, 537,
	538, 539, 540, 0, 542, 543, 541, 544, 545, 546,
	0, 547, 548, 531, 532, 549, 550, 1169, 551, 552,
	553, 554, 555, 556, 652, 0, 557, 0, 558, 559,
	560, 562, 533, 563, 568, 569, 653, 564, 565, 566,
	567, 654, 571, 572, 0, 573, 574, 0, 570, 561,
	0, 575, 576, 577, 578, 579, 580, 581, 354, 582,
	0, 583, 655, 656, 657, 658, 0, 592, 0, 584,
	585, 586, 659, 587, 660, 0, 588, 589, 590, 591,
	0, 593, 594, 0, 0, 595, 596, 597, 599, 600,
	598, 601, 0, 602, 0, 0, 603, 604, 605, 661,
	662, 663, 0, 607, 606, 608, 664, 0, 0, 0,
	0, 0, 609, 610, 665, 611, 612, 613, 0, 0,
	0, 0, 0, 0, 0, 0, 1292, 1291, 0, 0,
	0, 0, 1289, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3483, 270, 272, 271, 273, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 614,
	0, 0, 0, 0, 280, 281, 1153, 282, 283, 284,
	285, 286, 287, 615, 616, 0, 288, 617, 289, 618,
	0, 619, 290, 291, 292, 293, 294, 295, 0, 0,
	0, 296, 620, 621, 622, 0, 297, 298, 623, 0,
	1297, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 1154,
	321, 322, 323, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 326, 327, 328, 0, 329, 624, 625, 0,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 340, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 626, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 627, 628, 360,
	0, 267, 0, 0, 0, 0, 0, 361, 362, 363,
	629, 0, 0, 0, 364, 0, 365, 0, 0, 1155,
	366, 367, 630, 631, 368, 369, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 632, 0, 633, 378, 0,
	379, 380, 381, 382, 383, 634, 635, 636, 460, 1157,
	384, 385, 0, 386, 387, 388, 389, 0, 0, 0,
	0, 390, 391, 392, 394, 0, 1156, 393, 637, 638,
	0, 639, 0, 395, 396, 1158, 640, 1159, 397, 398,
	399, 1160, 400, 0, 0, 0, 401, 402, 403, 404,
	405, 406, 0, 407, 409, 408, 0, 410, 641, 1161,
	411, 412, 1162, 0, 413, 0, 0, 0, 414, 415,
	418, 0, 0, 416, 417, 419, 420, 0, 421, 422,
	424, 427, 423, 425, 426, 428, 441, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 443,
	0, 442, 1163, 444, 445, 446, 451, 453, 454, 449,
	450, 452, 455, 456, 448, 1164, 447, 0, 0, 1165,
	457, 458, 0, 642, 459, 643, 461, 462, 0, 0,
	463, 0, 0, 0, 465, 466, 467, 0, 0, 468,
	469, 644, 1166, 470, 1167, 645, 471, 472, 464, 473,
	474, 475, 476, 477, 478, 479, 480, 0, 481, 482,
	646, 483, 484, 485, 647, 486, 487, 488, 648, 489,
	649, 490, 491, 0, 492, 493, 0, 494, 495, 496,
	497, 498, 499, 500, 650, 501, 503, 502, 504, 0,
	505, 0, 506, 507, 508, 0, 0, 0, 0, 509,
	0, 511, 512, 513, 2242, 510, 515, 516, 517, 518,
	0, 519, 520, 521, 1168, 522, 523, 524, 525, 651,
	526, 0, 527, 528, 534, 535, 529, 530, 536, 537,
	538, 539, 540, 0, 542, 543, 541, 544, 545, 546,
	0, 547, 548, 531, 532, 549, 550, 1169, 551, 552,
	553, 554, 555, 556, 652, 0, 557, 0, 558, 559,
	560, 562, 533, 563, 568, 569, 653, 564, 565, 566,
	567, 654, 571, 572, 0, 573, 574, 0, 570, 561,
	0, 575, 576, 577, 578, 579, 580, 581, 354, 582,
	0, 583, 655, 656, 657, 658, 0, 592, 0, 584,
	585, 586, 659, 587, 660, 0, 588, 589, 590, 591,
	0, 593, 594, 0, 0, 595, 596, 597, 599, 600,
	598, 601, 0, 602, 0, 0, 603, 604, 605, 661,
	662, 663, 0, 607, 606, 608, 664, 0, 0, 0,
	0, 0, 609, 610, 665, 611, 612, 613, 0, 0,
	0, 0, 0, 0, 0, 0, 1292, 2156, 0, 0,
	0, 0, 2157, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1588, 270, 272, 271, 273, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 614,
	0, 0, 0, 0, 280, 281, 1153, 282, 283, 284,
	285, 286, 287, 615, 616, 0, 288, 617, 289, 618,
	0, 619, 290, 291, 292, 293, 294, 295, 0, 0,
	0, 296, 620, 621, 622, 0, 297, 298, 623, 0,
	1297, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 1154,
	321, 322, 323, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 326, 327, 328, 0, 329, 624, 625, 0,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 340, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 626, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 627, 628, 360,
	0, 267, 0, 0, 0, 0, 0, 361, 362, 363,
	629, 0, 0, 0, 364, 0, 365, 0, 0, 1155,
	366, 367, 630, 631, 368, 369, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 632, 0, 633, 378, 0,
	379, 380, 381, 382, 383, 634, 635, 636, 460, 1157,
	384, 385, 0, 386, 387, 388, 389, 0, 0, 0,
	0, 390, 391, 392, 394, 0, 1156, 393, 637, 638,
	0, 639, 0, 395, 396, 1158, 640, 1159, 397, 398,
	399, 1160, 400, 0, 0, 0, 401, 402, 403, 404,
	405, 406, 0, 2155, 409, 408, 0, 410, 641, 1161,
	411, 412, 1162, 0, 413, 0, 0, 0, 414, 415,
	418, 0, 0, 416, 417, 419, 420, 0, 421, 422,
	424, 427, 423, 425, 426, 428, 441, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 443,
	0, 442, 1163, 444, 445, 446, 451, 453, 454, 449,
	450, 452, 455, 456, 448, 1164, 447, 0, 0, 1165,
	457, 458, 0, 642, 459, 643, 461, 462, 0, 0,
	463, 0, 0, 0, 465, 466, 467, 0, 0, 468,
	469, 644, 1166, 470, 1167, 645, 471, 472, 464, 473,
	474, 475, 476, 477, 478, 479, 480, 0, 481, 482,
	646, 483, 484, 485, 647, 486, 487, 488, 648, 489,
	649, 490, 491, 0, 492, 493, 0, 494, 495, 496,
	497, 498, 499, 500, 650, 501, 503, 502, 504, 0,
	505, 0, 506, 507, 508, 0, 0, 0, 0, 509,
	0, 511, 512, 513, 514, 510, 515, 516, 517, 518,
	0, 519, 520, 521, 1168, 522, 523, 524, 525, 651,
	526, 0, 527, 528, 534, 535, 529, 530, 536, 537,
	538, 539, 540, 0, 542, 543, 541, 544, 545, 546,
	0, 547, 548, 531, 532, 549, 550, 1169, 551, 552,
	553, 554, 555, 556, 652, 0, 557, 0, 558, 559,
	560, 562, 533, 563, 568, 569, 653, 564, 565, 566,
	567, 654, 571, 572, 0, 573, 574, 0, 570, 561,
	0, 575, 576, 577, 578, 579, 580, 581, 354, 582,
	0, 583, 655, 656, 657, 658, 0, 592, 0, 584,
	585, 586, 659, 587, 660, 0, 588, 589, 590, 591,
	0, 593, 594, 0, 0, 595, 596, 597, 599, 600,
	598, 601, 0, 602, 0, 0, 603, 604, 605, 661,
	662, 663, 0, 607, 606, 608, 664, 0, 0, 0,
	0, 0, 609, 610, 665, 611, 612, 613, 0, 0,
	0, 0, 0, 0, 0, 0, 1292, 1291, 0, 0,
	0, 0, 1289, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1588, 270, 272, 271, 273, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 614,
	0, 0, 0, 0, 280, 281, 1153, 282, 283, 284,
	285, 286, 287, 615, 616, 0, 288, 617, 289, 618,
	0, 619, 290, 291, 292, 293, 294, 295, 0, 0,
	0, 296, 620, 621, 622, 0, 297, 298, 623, 0,
	1297, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 1154,
	321, 322, 323, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 326, 327, 328, 0, 329, 624, 625, 0,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 340, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 626, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 627, 628, 360,
	0, 267, 0, 0, 0, 0, 0, 361, 362, 363,
	629, 0, 0, 0, 364, 0, 365, 0, 0, 1155,
	366, 367, 630, 631, 368, 369, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 632, 0, 633, 378, 0,
	379, 380, 381, 382, 383, 634, 635, 636, 460, 1157,
	384, 385, 0, 386, 387, 388, 389, 0, 0, 0,
	0, 390, 391, 392, 394, 0, 1156, 393, 637, 638,
	0, 639, 0, 395, 396, 1158, 640, 1159, 397, 398,
	399, 1160, 400, 0, 0, 0, 401, 402, 403, 404,
	405, 406, 0, 407, 409, 408, 0, 410, 641, 1161,
	411, 412, 1162, 0, 413, 0, 0, 0, 414, 415,
	418, 0, 0, 416, 417, 419, 420, 0, 421, 422,
	424, 427, 423, 425, 426, 428, 441, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 443,
	0, 442, 1163, 444, 445, 446, 451, 453, 454, 449,
	450, 452, 455, 456, 448, 1164, 447, 0, 0, 1165,
	457, 458, 0, 642, 459, 643, 461, 462, 0, 0,
	463, 0, 0, 0, 465, 466, 467, 0, 0, 468,
	469, 644, 1166, 470, 1167, 645, 471, 472, 464, 473,
	474, 475, 476, 477, 478, 479, 480, 0, 481, 482,
	646, 483, 484, 485, 647, 486, 487, 488, 648, 489,
	649, 490, 491, 0, 492, 493, 0, 494, 495, 496,
	497, 498, 499, 500, 650, 501, 503, 502, 504, 0,
	505, 0, 506, 507, 508, 0, 0, 0, 0, 509,
	0, 511, 512, 513, 514, 510, 515, 516, 517, 518,
	0, 519, 520, 521, 1168, 522, 523, 524, 525, 651,
	526, 0, 527, 528, 534, 535, 529, 530, 536, 537,
	538, 539, 540, 0, 542, 543, 541, 544, 545, 546,
	0, 547, 548, 531, 532, 549, 550, 1169, 551, 552,
	553, 554, 555, 556, 652, 0, 557, 0, 558, 559,
	560, 562, 533, 563, 568, 569, 653, 564, 565, 566,
	567, 654, 571, 572, 0, 573, 574, 0, 570, 561,
	0, 575, 576, 577, 578, 579, 580, 581, 354, 582,
	0, 583, 655, 656, 657, 658, 0, 592, 0, 584,
	585, 586, 659, 587, 660, 0, 588, 589, 590, 591,
	0, 593, 594, 0, 0, 595, 596, 597, 599, 600,
	598, 601, 0, 602, 0, 0, 603, 604, 605, 661,
	662, 663, 0, 607, 606, 608, 664, 1211, 0, 0,
	0, 0, 609, 610, 665, 611, 612, 613, 0, 0,
	0, 0, 0, 0, 270, 272, 271, 273, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	1113, 0, 1572, 0, 0, 280, 281, 1153, 282, 283,
	284, 285, 286, 287, 615, 616, 0, 288, 617, 289,
	618, 0, 619, 290, 291, 292, 293, 294, 295, 0,
	1112, 0, 296, 620, 621, 622, 0, 297, 298, 1119,
	0, 1100, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	1154, 321, 322, 323, 1103, 1101, 1102, 1109, 1105, 1104,
	1108, 324, 325, 326, 327, 328, 0, 329, 624, 625,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 626, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 1144, 1145,
	360, 0, 267, 0, 0, 0, 0, 0, 361, 362,
	363, 629, 0, 0, 0, 364, 0, 365, 0, 0,
	1155, 366, 367, 630, 631, 368, 369, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 1151, 0, 633, 378,
	0, 379, 380, 381, 382, 383, 1114, 1115, 1118, 460,
	1157, 384, 385, 0, 386, 387, 388, 389, 0, 0,
	0, 268, 390, 391, 392, 394, 0, 1156, 393, 637,
	638, 0, 639, 0, 395, 396, 1158, 1116, 1159, 397,
	398, 399, 1160, 400, 0, 0, 0, 401, 402, 403,
	404, 405, 406, 0, 407, 409, 408, 0, 410, 1152,
	1161, 411, 412, 1162, 0, 413, 0, 0, 0, 414,
	415, 418, 1107, 1106, 416, 417, 419, 420, 0, 421,
	422, 424, 427, 423, 425, 426, 428, 441, 429, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	443, 0, 442, 1163, 444, 445, 446, 451, 453, 454,
	449, 450, 452, 455, 456, 448, 1164, 447, 0, 269,
	1165, 457, 458, 0, 1117, 459, 643, 461, 462, 0,
	0, 463, 0, 0, 0, 465, 466, 467, 0, 0,
	468, 469, 644, 1166, 470, 1167, 1146, 471, 472, 464,
	473, 474, 475, 476, 477, 478, 479, 480, 0, 481,
	482, 646, 483, 484, 485, 647, 486, 487, 488, 1147,
	489, 649, 490, 491, 0, 492, 493, 0, 494, 495,
	496, 497, 498, 499, 500, 650, 501, 503, 502, 504,
	0, 505, 0, 506, 507, 508, 0, 0, 0, 0,
	509, 0, 511, 512, 513, 514, 510, 515, 516, 517,
	518, 0, 519, 520, 521, 1168, 522, 523, 524, 525,
	651, 526, 0, 527, 528, 534, 535, 529, 530, 536,
	537, 538, 539, 540, 0, 542, 543, 541, 544, 545,
	546, 1110, 547, 548, 531, 532, 549, 550, 1169, 551,
	552, 553, 554, 555, 556, 652, 0, 557, 0, 558,
	559, 560, 562, 533, 563, 568, 569, 653, 564, 565,
	566, 567, 1148, 571, 572, 0, 573, 574, 0, 570,
	561, 0, 575, 576, 577, 578, 579, 580, 581, 354,
	582, 0, 583, 655, 656, 657, 658, 0, 592, 0,
	584, 585, 586, 1149, 587, 1150, 0, 588, 589, 590,
	591, 0, 593, 594, 0, 0, 595, 596, 597, 599,
	600, 598, 601, 1111, 602, 0, 0, 603, 604, 605,
	661, 662, 663, 0, 607, 606, 608, 664, 1035, 0,
	264, 0, 0, 609, 610, 665, 611, 612, 613, 0,
	0, 0, 0, 0, 0, 0, 0, 270, 272, 271,
	273, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 614, 0, 0, 0, 0, 280, 281,
	0, 282, 283, 284, 285, 286, 287, 615, 616, 0,
	288, 617, 289, 618, 0, 619, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 620, 621, 622, 0,
	297, 298, 623, 0, 0, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 323, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 326, 327, 328, 0,
	329, 624, 625, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	626, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 627, 628, 360, 0, 0, 0, 0, 0, 0,
	0, 361, 362, 363, 629, 0, 0, 0, 364, 0,
	365, 0, 0, 0, 366, 367, 630, 631, 368, 369,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 632,
	0, 633, 378, 0, 379, 380, 381, 382, 383, 634,
	635, 636, 460, 0, 384, 385, 0, 386, 387, 388,
	389, 0, 0, 0, 0, 390, 391, 392, 394, 0,
	0, 393, 637, 638, 0, 639, 0, 395, 396, 0,
	640, 0, 397, 398, 399, 0, 400, 0, 0, 0,
	401, 402, 403, 404, 405, 406, 0, 407, 409, 408,
	0, 410, 641, 0, 411, 412, 0, 0, 413, 0,
	0, 0, 414, 415, 418, 0, 0, 416, 417, 419,
	420, 0, 421, 422, 424, 427, 423, 425, 426, 428,
	441, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 443, 0, 442, 0, 444, 445, 446,
	451, 453, 454, 449, 450, 452, 455, 456, 448, 0,
	447, 0, 0, 0, 457, 458, 0, 642, 459, 643,
	461, 462, 0, 0, 463, 0, 0, 0, 465, 466,
	467, 0, 0, 468, 469, 644, 0, 470, 0, 645,
	471, 472, 464, 473, 474, 475, 476, 477, 478, 479,
	480, 0, 481, 482, 646, 483, 484, 485, 647, 486,
	487, 488, 648, 489, 649, 490, 491, 0, 492, 493,
	0, 494, 495, 496, 497, 498, 499, 500, 650, 501,
	503, 502, 504, 0, 505, 0, 506, 507, 508, 0,
	0, 0, 0, 509, 0, 511, 512, 513, 514, 510,
	515, 516, 517, 518, 0, 519, 520, 521, 0, 522,
	523, 524, 525, 651, 526, 0, 527, 528, 534, 535,
	529, 530, 536, 537, 538, 539, 540, 229, 542, 543,
	541, 544, 545, 546, 0, 547, 548, 531, 532, 549,
	550, 0, 551, 552, 553, 554, 555, 556, 652, 0,
	557, 0, 558, 559, 560, 562, 533, 563, 568, 569,
	653, 564, 565, 566, 567, 654, 571, 572, 0, 573,
	574, 0, 570, 561, 231, 575, 576, 577, 578, 579,
	580, 581, 354, 582, 0, 583, 655, 656, 657, 658,
	0, 592, 0, 584, 585, 586, 659, 587, 660, 0,
	588, 589, 590, 591, 0, 593, 594, 0, 0, 595,
	596, 597, 599, 600, 598, 601, 0, 602, 0, 0,
	603, 604, 605, 1566, 662, 663, 0, 607, 606, 608,
	664, 264, 0, 0, 0, 223, 609, 610, 665, 611,
	612, 613, 0, 0, 224, 0, 0, 0, 270, 272,
	271, 273, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 614, 0, 185, 0, 0, 280,
	281, 0, 282, 283, 284, 285, 286, 287, 615, 616,
	0, 288, 617, 289, 618, 0, 619, 290, 291, 292,
	293, 294, 295, 0, 0, 0, 296, 620, 621, 622,
	0, 297, 298, 623, 0, 0, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 0, 321, 322, 323, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 327, 328,
	0, 329, 624, 625, 0, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 340,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 626, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 627, 628, 360, 0, 267, 0, 0, 0,
	0, 0, 361, 362, 363, 629, 0, 0, 0, 364,
	0, 365, 0, 0, 0, 366, 367, 630, 631, 368,
	369, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	632, 0, 633, 378, 0, 379, 380, 381, 382, 383,
	634, 635, 636, 460, 0, 384, 385, 0, 386, 387,
	388, 389, 0, 0, 0, 268, 390, 391, 392, 394,
	0, 0, 393, 637, 638, 0, 639, 0, 395, 396,
	0, 640, 0, 397, 398, 399, 0, 400, 0, 0,
	0, 401, 402, 403, 404, 405, 406, 0, 407, 409,
	408, 0, 410, 641, 0, 411, 412, 0, 0, 413,
	0, 0, 0, 414, 415, 418, 0, 0, 416, 417,
	419, 420, 0, 421, 422, 424, 427, 423, 425, 426,
	428, 441, 429, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 443, 0, 442, 0, 444, 445,
	446, 451, 453, 454, 449, 450, 452, 455, 456, 448,
	0, 447, 0, 269, 0, 457, 458, 0, 642, 459,
	643, 461, 462, 0, 0, 463, 0, 0, 0, 465,
	466, 467, 0, 0, 468, 469, 644, 0, 470, 0,
	645, 471, 472, 464, 473, 474, 475, 476, 477, 478,
	479, 480, 0, 481, 482, 646, 483, 484, 485, 647,
	486, 487, 488, 648, 489, 649, 490, 491, 0, 492,
	493, 0, 494, 495, 496, 497, 498, 499, 500, 650,
	501, 503, 502, 504, 0, 505, 0, 506, 507, 508,
	0, 0, 0, 0, 509, 0, 511, 512, 513, 514,
	510, 515, 516, 517, 518, 0, 519, 520, 521, 0,
	522, 523, 524, 525, 651, 526, 0, 527, 528, 534,
	535, 529, 530, 536, 537, 538, 539, 540, 0, 542,
	543, 541, 544, 545, 546, 0, 547, 548, 531, 532,
	549, 550, 0, 551, 552, 553, 554, 555, 556, 652,
	0, 557, 0, 558, 559, 560, 562, 533, 563, 568,
	569, 653, 564, 565, 566, 567, 654, 571, 572, 0,
	573, 574, 0, 570, 561, 0, 575, 576, 577, 578,
	579, 580, 581, 354, 582, 0, 583, 655, 656, 657,
	658, 0, 592, 0, 584, 585, 586, 659, 587, 660,
	0, 588, 589, 590, 591, 0, 593, 594, 0, 0,
	595, 596, 597, 599, 600, 598, 601, 0, 602, 0,
	0, 603, 604, 605, 661, 662, 663, 0, 607, 606,
	608, 664, 264, 2930, 0, 0, 0, 609, 610, 665,
	611, 612, 613, 0, 0, 0, 0, 0, 0, 270,
	272, 271, 273, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 614, 0, 1916, 0, 0,
	280, 281, 0, 282, 283, 284, 285, 286, 287, 615,
	616, 0, 288, 617, 289, 618, 0, 619, 290, 291,
	292, 293, 294, 295, 0, 0, 0, 296, 620, 621,
	622, 0, 297, 298, 623, 0, 0, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 0, 321, 322, 323, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 326, 327,
	328, 0, 329, 624, 625, 0, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	340, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 626, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 627, 628, 360, 0, 0, 0, 0,
	0, 0, 0, 361, 362, 363, 629, 0, 0, 0,
	364, 0, 365, 0, 0, 0, 366, 367, 630, 631,
	368, 369, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 632, 0, 633, 378, 0, 379, 380, 381, 382,
	383, 634, 635, 636, 460, 0, 384, 385, 0, 386,
	387, 388, 389, 0, 0, 0, 0, 390, 391, 392,
	394, 0, 0, 393, 637, 638, 0, 639, 0, 395,
	396, 0, 640, 0, 397, 398, 399, 0, 400, 0,
	0, 0, 401, 402, 403, 404, 405, 406, 0, 407,
	409, 408, 0, 410, 641, 0, 411, 412, 0, 0,
	413, 0, 0, 0, 414, 415, 418, 0, 0, 416,
	417, 419, 420, 0, 421, 422, 424, 427, 423, 425,
	426, 428, 441, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 443, 0, 442, 0, 444,
	445, 446, 451, 453, 454, 449, 450, 452, 455, 456,
	448, 0, 447, 0, 0, 0, 457, 458, 0, 642,
	459, 643, 461, 462, 0, 0, 463, 0, 0, 0,
	465, 466, 467, 0, 0, 468, 469, 644, 0, 470,
	0, 645, 471, 472, 464, 473, 474, 475, 476, 477,
	478, 479, 480, 0, 481, 482, 646, 483, 484, 485,
	647, 486, 487, 488, 648, 489, 649, 490, 491, 0,
	492, 493, 0, 494, 495, 496, 497, 498, 499, 500,
	650, 501, 503, 502, 504, 0, 505, 0, 506, 507,
	508, 0, 0, 0, 0, 509, 0, 511, 512, 513,
	514, 510, 515, 516, 517, 518, 0, 519, 520, 521,
	0, 522, 523, 524, 525, 651, 526, 0, 527, 528,
	534, 535, 529, 530, 536, 537, 538, 539, 540, 0,
	542, 543, 541, 544, 545, 546, 0, 547, 548, 531,
	532, 549, 550, 0, 551, 552, 553, 554, 555, 556,
	652, 0, 557, 0, 558, 559, 560, 562, 533, 563,
	568, 569, 653, 564, 565, 566, 567, 654, 571, 572,
	0, 573, 574, 0, 570, 561, 0, 575, 576, 577,
	578, 579, 580, 581, 354, 582, 0, 583, 655, 656,
	657, 658, 0, 592, 0, 584, 585, 586, 659, 587,
	660, 0, 588, 589, 590, 591, 0, 593, 594, 0,
	0, 595, 596, 597, 599, 600, 598, 601, 0, 602,
	0, 0, 603, 604, 605, 661, 662, 663, 264, 607,
	606, 608, 664, 0, 0, 0, 0, 0, 609, 610,
	665, 611, 612, 613, 0, 270, 272, 271, 273, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 614, 0, 0, 0, 0, 280, 281, 4673, 282,
	283, 284, 285, 286, 287, 615, 616, 0, 288, 617,
	289, 618, 0, 619, 290, 291, 292, 293, 294, 295,
	0, 0, 0, 296, 620, 621, 622, 0, 297, 298,
	623, 0, 0, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 0, 321, 322, 323, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 326, 327, 328, 0, 329, 624,
	625, 0, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 340, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 626, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 627,
	628, 360, 0, 267, 0, 0, 0, 0, 0, 361,
	362, 363, 629, 0, 0, 0, 364, 0, 365, 0,
	0, 0, 366, 367, 630, 631, 368, 369, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 632, 0, 633,
	378, 0, 379, 380, 381, 382, 383, 634, 635, 636,
	460, 0, 384, 385, 0, 386, 387, 388, 389, 0,
	0, 0, 268, 390, 391, 392, 394, 0, 0, 393,
	637, 638, 0, 639, 0, 395, 396, 0, 640, 0,
	397, 398, 399, 0, 400, 0, 0, 0, 401, 402,
	403, 404, 405, 406, 0, 407, 409, 408, 0, 410,
	641, 0, 411, 412, 0, 0, 413, 0, 0, 0,
	414, 415, 418, 0, 0, 416, 417, 419, 420, 0,
	421, 422, 424, 427, 423, 425, 426, 428, 441, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 443, 0, 442, 0, 444, 445, 446, 451, 453,
	454, 449, 450, 452, 455, 456, 448, 0, 447, 0,
	269, 0, 457, 458, 0, 642, 459, 643, 461, 462,
	0, 0, 463, 0, 0, 0, 465, 466, 467, 0,
	0, 468, 469, 644, 0, 470, 0, 645, 471, 472,
	464, 473, 474, 475, 476, 477, 478, 479, 480, 0,
	481, 482, 646, 483, 484, 485, 647, 486, 487, 488,
	648, 489, 649, 490, 491, 0, 492, 493, 0, 494,
	495, 496, 497, 498, 499, 500, 650, 501, 503, 502,
	504, 0, 505, 0, 506, 507, 508, 0, 0, 0,
	0, 509, 0, 511, 512, 513, 514, 510, 515, 516,
	517, 518, 0, 519, 520, 521, 0, 522, 523, 524,
	525, 651, 526, 0, 527, 528, 534, 535, 529, 530,
	536, 537, 538, 539, 540, 0, 542, 543, 541, 544,
	545, 546, 0, 547, 548, 531, 532, 549, 550, 0,
	551, 552, 553, 554, 555, 556, 652, 0, 557, 0,
	558, 559, 560, 562, 533, 563, 568, 569, 653, 564,
	565, 566, 567, 654, 571, 572, 0, 573, 574, 0,
	570, 561, 0, 575, 576, 577, 578, 579, 580, 581,
	354, 582, 0, 583, 655, 656, 657, 658, 0, 592,
	0, 584, 585, 586, 659, 587, 660, 0, 588, 589,
	590, 591, 0, 593, 594, 0, 0, 595, 596, 597,
	599, 600, 598, 601, 0, 602, 0, 0, 603, 604,
	605, 661, 662, 663, 0, 607, 606, 608, 664, 0,
	264, 0, 0, 0, 609, 610, 665, 611, 612, 613,
	0, 0, 0, 0, 0, 0, 0, 270, 272, 271,
	273, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 3433, 614, 0, 0, 0, 0, 280, 281,
	0, 282, 283, 284, 285, 286, 287, 615, 616, 0,
	288, 617, 289, 618, 0, 619, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 620, 621, 622, 0,
	297, 298, 623, 0, 0, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 323, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 326, 327, 328, 0,
	329, 624, 625, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	626, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 627, 628, 360, 0, 267, 0, 0, 0, 0,
	0, 361, 362, 363, 629, 0, 0, 0, 364, 0,
	365, 0, 0, 0, 366, 367, 630, 631, 368, 369,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 632,
	0, 633, 378, 0, 379, 380, 381, 382, 383, 634,
	635, 636, 460, 0, 384, 385, 0, 386, 387, 388,
	389, 0, 0, 0, 268, 390, 391, 392, 394, 0,
	0, 393, 637, 638, 0, 639, 0, 395, 396, 0,
	640, 0, 397, 398, 399, 0, 400, 0, 0, 0,
	401, 402, 403, 404, 405, 406, 0, 407, 409, 408,
	0, 410, 641, 0, 411, 412, 0, 0, 413, 0,
	0, 0, 414, 415, 418, 0, 0, 416, 417, 419,
	420, 0, 421, 422, 424, 427, 423, 425, 426, 428,
	441, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 443, 0, 442, 0, 444, 445, 446,
	451, 453, 454, 449, 450, 452, 455, 456, 448, 0,
	447, 0, 269, 0, 457, 458, 0, 642, 459, 643,
	461, 462, 0, 0, 463, 0, 0, 0, 465, 466,
	467, 0, 0, 468, 469, 644, 0, 470, 0, 645,
	471, 472, 464, 473, 474, 475, 476, 477, 478, 479,
	480, 0, 481, 482, 646, 483, 484, 485, 647, 486,
	487, 488, 648, 489, 649, 490, 491, 0, 492, 493,
	0, 494, 495, 496, 497, 498, 499, 500, 650, 501,
	503, 502, 504, 0, 505, 0, 506, 507, 508, 0,
	0, 0, 0, 509, 0, 511, 512, 513, 514, 510,
	515, 516, 517, 518, 0, 519, 520, 521, 0, 522,
	523, 524, 525, 651, 526, 0, 527, 528, 534, 535,
	529, 530, 536, 537, 538, 539, 540, 0, 542, 543,
	541, 544, 545, 546, 0, 547, 548, 531, 532, 549,
	550, 0, 551, 552, 553, 554, 555, 556, 652, 0,
	557, 0, 558, 559, 560, 562, 533, 563, 568, 569,
	653, 564, 565, 566, 567, 654, 571, 572, 0, 573,
	574, 0, 570, 561, 0, 575, 576, 577, 578, 579,
	580, 581, 354, 582, 0, 583, 655, 656, 657, 658,
	0, 592, 0, 584, 585, 586, 659, 587, 660, 0,
	588, 589, 590, 591, 0, 593, 594, 0, 0, 595,
	596, 597, 599, 600, 598, 601, 0, 602, 0, 0,
	603, 604, 605, 661, 662, 663, 0, 607, 606, 608,
	664, 0, 264, 0, 0, 0, 609, 610, 665, 611,
	612, 613, 0, 0, 0, 0, 0, 0, 0, 270,
	272, 271, 273, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 1560, 614, 0, 0, 0, 0,
	280, 281, 0, 282, 283, 284, 285, 286, 287, 615,
	616, 0, 288, 617, 289, 618, 0, 619, 290, 291,
	292, 293, 294, 295, 0, 0, 0, 296, 620, 621,
	622, 0, 297, 298, 623, 0, 0, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 0, 321, 322, 323, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 326, 327,
	328, 0, 329, 624, 625, 0, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	340, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 626, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 627, 628, 360, 0, 0, 0, 0,
	0, 0, 0, 361, 362, 363, 629, 0, 0, 0,
	364, 0, 365, 0, 0, 0, 366, 367, 630, 631,
	368, 369, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 632, 0, 633, 378, 0, 379, 380, 381, 382,
	383, 634, 635, 636, 460, 0, 384, 385, 0, 386,
	387, 388, 389, 0, 0, 0, 0, 390, 391, 392,
	394, 0, 0, 393, 637, 638, 0, 639, 0, 395,
	396, 0, 640, 0, 397, 398, 399, 0, 400, 0,
	0, 0, 401, 402, 403, 404, 405, 406, 0, 407,
	409, 408, 0, 410, 641, 0, 411, 412, 0, 0,
	413, 0, 0, 0, 414, 415, 418, 0, 0, 416,
	417, 419, 420, 0, 421, 422, 424, 427, 423, 425,
	426, 428, 441, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 443, 0, 442, 0, 444,
	445, 446, 451, 453, 454, 449, 450, 452, 455, 456,
	448, 0, 447, 0, 0, 0, 457, 458, 0, 642,
	459, 643, 461, 462, 0, 0, 463, 0, 0, 0,
	465, 466, 467, 0, 0, 468, 469, 644, 0, 470,
	0, 645, 471, 472, 464, 473, 474, 475, 476, 477,
	478, 479, 480, 0, 481, 482, 646, 483, 484, 485,
	647, 486, 487, 488, 648, 489, 649, 490, 491, 0,
	492, 493, 0, 494, 495, 496, 497, 498, 499, 500,
	650, 501, 503, 502, 504, 0, 505, 0, 506, 507,
	508, 0, 0, 0, 0, 509, 0, 511, 512, 513,
	514, 510, 515, 516, 517, 518, 0, 519, 520, 521,
	0, 522, 523, 524, 525, 651, 526, 0, 527, 528,
	534, 535, 529, 530, 536, 537, 538, 539, 540, 0,
	542, 543, 541, 544, 545, 546, 0, 547, 548, 531,
	532, 549, 550, 0, 551, 552, 553, 554, 555, 556,
	652, 0, 557, 0, 558, 559, 560, 562, 533, 563,
	568, 569, 653, 564, 565, 566, 567, 654, 571, 572,
	0, 573, 574, 0, 570, 561, 0, 575, 576, 577,
	578, 579, 580, 581, 354, 582, 0, 583, 655, 656,
	657, 658, 0, 592, 0, 584, 585, 586, 659, 587,
	660, 0, 588, 589, 590, 591, 0, 593, 594, 0,
	0, 595, 596, 597, 599, 600, 598, 601, 0, 602,
	0, 0, 603, 604, 605, 661, 662, 663, 264, 607,
	606, 608, 664, 0, 0, 0, 0, 0, 609, 610,
	665, 611, 612, 613, 0, 270, 272, 271, 273, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 614, 0, 0, 0, 0, 280, 281, 2918, 282,
	283, 284, 285, 286, 287, 615, 616, 0, 288, 617,
	289, 618, 0, 619, 290, 291, 292, 293, 294, 295,
	0, 0, 0, 296, 620, 621, 622, 0, 297, 298,
	623, 0, 0, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 0, 321, 322, 323, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 326, 327, 328, 0, 329, 624,
	625, 0, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 340, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 626, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 627,
	628, 360, 0, 0, 0, 0, 0, 0, 0, 361,
	362, 363, 629, 0, 0, 0, 364, 0, 365, 0,
	0, 0, 366, 367, 630, 631, 368, 369, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 632, 0, 633,
	378, 0, 379, 380, 381, 382, 383, 634, 635, 636,
	460, 0, 384, 385, 0, 386, 387, 388, 389, 0,
	0, 0, 0, 390, 391, 392, 394, 0, 0, 393,
	637, 638, 0, 639, 0, 395, 396, 0, 640, 0,
	397, 398, 399, 0, 400, 0, 0, 0, 401, 402,
	403, 404, 405, 406, 0, 407, 409, 408, 0, 410,
	641, 0, 411, 412, 0, 0, 413, 0, 0, 0,
	414, 415, 418, 0, 0, 416, 417, 419, 420, 0,
	421, 422, 424, 427, 423, 425, 426, 428, 441, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 443, 0, 442, 0, 444, 445, 446, 451, 453,
	454, 449, 450, 452, 455, 456, 448, 0, 447, 0,
	0, 0, 457, 458, 0, 642, 459, 643, 461, 462,
	0, 0, 463, 0, 0, 0, 465, 466, 467, 0,
	0, 468, 469, 644, 0, 470, 0, 645, 471, 472,
	464, 473, 474, 475, 476, 477, 478, 479, 480, 0,
	481, 482, 646, 483, 484, 485, 647, 486, 487, 488,
	648, 489, 649, 490, 491, 0, 492, 493, 0, 494,
	495, 496, 497, 498, 499, 500, 650, 501, 503, 502,
	504, 0, 505, 0, 506, 507, 508, 0, 0, 0,
	0, 509, 0, 511, 512, 513, 514, 510, 515, 516,
	517, 518, 0, 519, 520, 521, 0, 522, 523, 524,
	525, 651, 526, 0, 527, 528, 534, 535, 529, 530,
	536, 537, 538, 539, 540, 0, 542, 543, 541, 544,
	545, 546, 0, 547, 548, 531, 532, 549, 550, 0,
	551, 552, 553, 554, 555, 556, 652, 0, 557, 0,
	558, 559, 560, 562, 533, 563, 568, 569, 653, 564,
	565, 566, 567, 654, 571, 572, 0, 573, 574, 0,
	570, 561, 0, 575, 576, 577, 578, 579, 580, 581,
	354, 582, 0, 583, 655, 656, 657, 658, 0, 592,
	0, 584, 585, 586, 659, 587, 660, 0, 588, 589,
	590, 591, 0, 593, 594, 0, 0, 595, 596, 597,
	599, 600, 598, 601, 0, 602, 0, 0, 603, 604,
	605, 661, 662, 663, 264, 607, 606, 608, 664, 0,
	0, 0, 0, 0, 609, 610, 665, 611, 612, 613,
	0, 270, 272, 271, 273, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 614, 0, 0,
	0, 0, 280, 281, 3589, 282, 283, 284, 285, 286,
	287, 615, 616, 0, 288, 617, 289, 618, 0, 619,
	290, 291, 292, 293, 294, 295, 0, 0, 0, 296,
	620, 621, 622, 0, 297, 298, 623, 0, 0, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 0, 321, 322,
	323, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	326, 327, 328, 0, 329, 624, 625, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 340, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 626, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 627, 628, 360, 0, 0,
	0, 0, 0, 0, 0, 361, 362, 363, 629, 0,
	0, 0, 364, 0, 365, 0, 0, 0, 366, 367,
	630, 631, 368, 369, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 632, 0, 633, 378, 0, 379, 380,
	381, 382, 383, 634, 635, 636, 460, 0, 384, 385,
	0, 386, 387, 388, 389, 0, 0, 0, 0, 390,
	391, 392, 394, 0, 0, 393, 637, 638, 0, 639,
	0, 395, 396, 0, 640, 0, 397, 398, 399, 0,
	400, 0, 0, 0, 401, 402, 403, 404, 405, 406,
	0, 407, 409, 408, 0, 410, 641, 0, 411, 412,
	0, 0, 413, 0, 0, 0, 414, 415, 418, 0,
	0, 416, 417, 419, 420, 0, 421, 422, 424, 427,
	423, 425, 426, 428, 441, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 443, 0, 442,
	0, 444, 445, 446, 451, 453, 454, 449, 450, 452,
	455, 456, 448, 0, 447, 0, 0, 0, 457, 458,
	0, 642, 459, 643, 461, 462, 0, 0, 463, 0,
	0, 0, 465, 466, 467, 0, 0, 468, 469, 644,
	0, 470, 0, 645, 471, 472, 464, 473, 474, 475,
	476, 477, 478, 479, 480, 0, 481, 482, 646, 483,
	484, 485, 647, 486, 487, 488, 648, 489, 649, 490,
	491, 0, 492, 493, 0, 494, 495, 496, 497, 498,
	499, 500, 650, 501, 503, 502, 504, 0, 505, 0,
	506, 507, 508, 0, 0, 0, 0, 509, 0, 511,
	512, 513, 514, 510, 515, 516, 517, 518, 0, 519,
	520, 521, 0, 522, 523, 524, 525, 651, 526, 0,
	527, 528, 534, 535, 529, 530, 536, 537, 538, 539,
	540, 0, 542, 543, 541, 544, 545, 546, 0, 547,
	548, 531, 532, 549, 550, 0, 551, 552, 553, 554,
	555, 556, 652, 0, 557, 0, 558, 559, 560, 562,
	533, 563, 568, 569, 653, 564, 565, 566, 567, 654,
	571, 572, 0, 573, 574, 0, 570, 561, 0, 575,
	576, 577, 578, 579, 580, 581, 354, 582, 0, 583,
	655, 656, 657, 658, 0, 592, 0, 584, 585, 586,
	659, 587, 660, 0, 588, 589, 590, 591, 0, 593,
	594, 0, 0, 595, 596, 597, 599, 600, 598, 601,
	0, 602, 0, 0, 603, 604, 605, 661, 662, 663,
	0, 607, 606, 608, 664, 0, 878, 0, 785, 0,
	609, 610, 665, 611, 612, 613, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 270, 272, 271, 273, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	2233, 614, 0, 0, 0, 0, 280, 281, 0, 282,
	283, 284, 285, 286, 287, 615, 616, 0, 288, 617,
	289, 618, 0, 619, 290, 291, 292, 293, 294, 295,
	0, 0, 0, 296, 620, 621, 622, 0, 297, 298,
	623, 0, 0, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 0, 321, 322, 323, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 326, 792, 328, 0, 329, 624,
	625, 0, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 340, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 626, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 627,
	628, 360, 0, 267, 0, 0, 0, 0, 0, 361,
	362, 363, 629, 0, 0, 0, 364, 0, 365, 0,
	876, 0, 366, 367, 630, 631, 368, 369, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 632, 0, 633,
	378, 0, 379, 380, 381, 382, 383, 634, 635, 636,
	460, 0, 384, 385, 0, 386, 387, 388, 389, 0,
	0, 0, 268, 390, 391, 392, 394, 0, 0, 393,
	637, 638, 0, 639, 0, 395, 396, 0, 640, 0,
	397, 398, 399, 0, 400, 0, 0, 0, 401, 402,
	403, 404, 405, 406, 0, 407, 409, 408, 0, 410,
	641, 0, 411, 412, 0, 0, 413, 0, 0, 0,
	414, 415, 418, 0, 0, 416, 417, 419, 420, 0,
	421, 422, 424, 427, 423, 425, 426, 428, 441, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 443, 0, 442, 0, 444, 445, 446, 451, 453,
	454, 449, 450, 452, 455, 456, 448, 0, 447, 0,
	269, 0, 457, 458, 0, 642, 459, 643, 461, 462,
	0, 0, 463, 0, 0, 0, 465, 466, 467, 0,
	0, 468, 469, 644, 0, 470, 0, 645, 471, 472,
	464, 473, 474, 475, 476, 477, 478, 479, 480, 0,
	481, 482, 646, 483, 484, 485, 647, 486, 487, 488,
	648, 489, 649, 490, 491, 0, 492, 493, 0, 494,
	495, 496, 497, 498, 499, 500, 650, 501, 503, 502,
	504, 0, 505, 0, 506, 507, 508, 0, 0, 0,
	0, 509, 0, 511, 512, 513, 514, 510, 515, 516,
	517, 518, 0, 519, 520, 521, 0, 522, 523, 524,
	525, 651, 526, 0, 527, 528, 534, 535, 529, 530,
	536, 537, 538, 539, 540, 0, 542, 543, 541, 544,
	545, 546, 0, 547, 548, 531, 532, 549, 550, 0,
	551, 552, 553, 554, 555, 556, 652, 0, 557, 0,
	558, 559, 560, 562, 533, 563, 568, 569, 653, 564,
	565, 566, 567, 654, 571, 572, 0, 573, 574, 0,
	570, 561, 790, 575, 576, 577, 578, 579, 791, 581,
	354, 582, 0, 583, 655, 656, 657, 658, 0, 592,
	0, 584, 585, 586, 659, 587, 660, 0, 588, 589,
	590, 591, 0, 593, 594, 0, 0, 595, 596, 597,
	599, 600, 598, 601, 0, 602, 0, 0, 603, 604,
	605, 661, 662, 663, 0, 607, 606, 608, 664, 0,
	783, 0, 785, 0, 609, 610, 665, 611, 612, 613,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 270,
	272, 271, 273, 274, 275, 276, 277, 795, 278, 279,
	0, 0, 0, 0, 0, 614, 0, 0, 0, 0,
	280, 281, 0, 282, 283, 284, 285, 286, 287, 615,
	616, 0, 288, 617, 289, 618, 0, 619, 290, 291,
	292, 293, 294, 295, 0, 0, 0, 296, 620, 621,
	622, 0, 297, 298, 623, 0, 0, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 0, 321, 322, 323, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 326, 792,
	328, 0, 329, 624, 625, 0, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	340, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 626, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 627, 628, 360, 0, 267, 0, 0,
	0, 0, 0, 361, 362, 363, 629, 0, 0, 0,
	364, 0, 365, 0, 0, 0, 366, 367, 630, 631,
	368, 369, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 632, 0, 633, 378, 0, 379, 380, 381, 382,
	383, 634, 635, 636, 460, 0, 384, 385, 0, 386,
	387, 388, 389, 0, 0, 0, 268, 390, 391, 392,
	394, 0, 0, 393, 637, 638, 0, 639, 0, 395,
	396, 0, 640, 0, 397, 398, 399, 0, 400, 0,
	0, 0, 401, 402, 403, 404, 405, 406, 0, 407,
	409, 408, 0, 410, 641, 0, 411, 412, 0, 0,
	413, 0, 0, 0, 414, 415, 418, 0, 0, 416,
	417, 419, 420, 0, 421, 422, 424, 427, 423, 425,
	426, 428, 441, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 443, 0, 442, 0, 444,
	445, 446, 451, 453, 454, 449, 450, 452, 455, 456,
	448, 0, 447, 0, 269, 0, 457, 458, 0, 642,
	459, 643, 461, 462, 0, 0, 463, 0, 0, 0,
	465, 466, 467, 0, 0, 468, 469, 644, 0, 470,
	0, 645, 471, 472, 464, 473, 474, 475, 476, 477,
	478, 479, 480, 0, 481, 482, 646, 483, 484, 485,
	647, 486, 487, 488, 648, 489, 649, 490, 491, 0,
	492, 493, 0, 494, 495, 496, 497, 498, 499, 500,
	650, 501, 503, 502, 504, 0, 505, 0, 506, 507,
	508, 0, 0, 0, 0, 509, 0, 511, 512, 513,
	514, 510, 515, 516, 517, 518, 0, 519, 520, 521,
	0, 522, 523, 524, 525, 651, 526, 0, 527, 528,
	534, 535, 529, 530, 536, 537, 538, 539, 540, 0,
	542, 543, 541, 544, 545, 546, 0, 547, 548, 531,
	532, 549, 550, 0, 551, 552, 553, 554, 555, 556,
	652, 0, 557, 0, 558, 559, 560, 562, 533, 563,
	568, 569, 653, 564, 565, 566, 567, 654, 571, 572,
	0, 573, 574, 0, 570, 561, 790, 575, 576, 577,
	578, 579, 791, 581, 354, 582, 0, 583, 655, 656,
	657, 658, 0, 592, 0, 584, 585, 586, 659, 587,
	660, 0, 588, 589, 590, 591, 0, 593, 594, 0,
	0, 595, 596, 597, 599, 600, 598, 601, 0, 602,
	0, 0, 603, 604, 605, 661, 662, 663, 1955, 607,
	606, 608, 664, 0, 0, 0, 0, 0, 609, 610,
	665, 611, 612, 613, 0, 270, 272, 271, 273, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 795, 0, 0, 0, 0, 280, 281, 1153, 282,
	283, 284, 285, 286, 287, 0, 1961, 0, 288, 1951,
	289, 1967, 0, 1974, 290, 291, 292, 293, 294, 295,
	0, 0, 0, 296, 1977, 1978, 0, 0, 297, 298,
	0, 0, 1297, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 1154, 321, 322, 323, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 326, 327, 328, 1136, 329, 1965,
	1964, 0, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 1121, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 0, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 0,
	0, 360, 0, 0, 0, 0, 0, 0, 0, 361,
	362, 363, 1963, 0, 0, 0, 364, 0, 365, 0,
	0, 1155, 366, 367, 1972, 1973, 368, 369, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 0, 0, 0,
	378, 0, 379, 380, 381, 382, 383, 0, 0, 0,
	460, 1157, 384, 385, 0, 386, 387, 388, 389, 0,
	0, 0, 0, 390, 391, 392, 394, 0, 1156, 393,
	1958, 1959, 0, 1954, 0, 395, 396, 1158, 0, 1159,
	397, 398, 399, 1160, 400, 0, 0, 0, 401, 402,
	403, 404, 405, 406, 0, 407, 409, 408, 0, 410,
	0, 1161, 411, 412, 1162, 0, 413, 0, 0, 0,
	414, 415, 418, 0, 0, 416, 417, 419, 420, 0,
	421, 422, 424, 427, 423, 425, 426, 428, 441, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 443, 0, 442, 1163, 444, 445, 446, 451, 453,
	454, 449, 450, 452, 455, 456, 448, 1164, 447, 0,
	0, 1165, 457, 458, 0, 0, 459, 1966, 461, 462,
	0, 0, 463, 0, 0, 0, 465, 466, 467, 0,
	0, 468, 469, 0, 1166, 470, 1167, 0, 471, 472,
	464, 473, 474, 475, 476, 477, 478, 479, 480, 0,
	481, 482, 1948, 483, 484, 485, 1949, 486, 487, 488,
	0, 489, 0, 490, 491, 0, 492, 493, 0, 494,
	495, 496, 497, 498, 499, 500, 1962, 501, 503, 502,
	504, 0, 505, 0, 506, 507, 508, 0, 0, 0,
	0, 509, 0, 511, 512, 513, 514, 510, 515, 516,
	517, 518, 0, 519, 520, 521, 1168, 522, 523, 524,
	525, 0, 526, 0, 527, 528, 534, 535, 529, 530,
	536, 537, 538, 539, 540, 0, 542, 543, 541, 544,
	545, 546, 0, 547, 548, 531, 532, 549, 550, 1169,
	551, 552, 553, 554, 555, 556, 1960, 0, 557, 0,
	558, 559, 560, 562, 533, 563, 568, 569, 1976, 564,
	565, 566, 567, 0, 571, 572, 0, 573, 574, 0,
	570, 561, 0, 575, 576, 577, 578, 579, 580, 581,
	354, 582, 0, 583, 1968, 1969, 1970, 1971, 0, 592,
	0, 584, 585, 586, 0, 587, 0, 0, 588, 589,
	590, 591, 0, 593, 594, 0, 0, 595, 596, 597,
	599, 600, 598, 601, 0, 602, 0, 0, 603, 604,
	605, 0, 1952, 1975, 0, 607, 606, 608, 785, 0,
	0, 0, 0, 0, 609, 610, 0, 611, 612, 613,
	0, 0, 0, 0, 0, 270, 272, 271, 273, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 614, 0, 0, 0, 0, 280, 281, 1942, 282,
	283, 284, 285, 286, 287, 615, 616, 0, 288, 617,
	289, 618, 0, 619, 290, 291, 292, 293, 294, 295,
	0, 0, 0, 296, 620, 621, 622, 0, 297, 298,
	623, 0, 0, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 0, 321, 322, 323, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 326, 792, 328, 0, 329, 624,
	625, 0, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 340, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 626, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 627,
	628, 360, 0, 267, 0, 0, 0, 0, 0, 361,
	362, 363, 629, 0, 0, 0, 364, 0, 365, 0,
	0, 0, 366, 367, 630, 631, 368, 369, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 632, 0, 633,
	378, 0, 379, 380, 381, 382, 383, 634, 635, 636,
	460, 0, 384, 385, 0, 386, 387, 388, 389, 0,
	0, 0, 268, 390, 391, 392, 394, 0, 0, 393,
	637, 638, 0, 639, 0, 395, 396, 0, 640, 0,
	397, 398, 399, 0, 400, 0, 0, 0, 401, 402,
	403, 404, 405, 406, 0, 407, 409, 408, 0, 410,
	641, 0, 411, 412, 0, 0, 413, 0, 0, 0,
	414, 415, 418, 0, 0, 416, 417, 419, 420, 0,
	421, 422, 424, 427, 423, 425, 426, 428, 441, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 443, 0, 442, 0, 444, 445, 446, 451, 453,
	454, 449, 450, 452, 455, 456, 448, 0, 447, 0,
	269, 0, 457, 458, 0, 642, 459, 643, 461, 462,
	0, 0, 463, 0, 0, 0, 465, 466, 467, 0,
	0, 468, 469, 644, 0, 470, 0, 645, 471, 472,
	464, 473, 474, 475, 476, 477, 478, 479, 480, 0,
	481, 482, 646, 483, 484, 485, 647, 486, 487, 488,
	648, 489, 649, 490, 491, 0, 492, 493, 0, 494,
	495, 496, 497, 498, 499, 500, 650, 501, 503, 502,
	504, 0, 505, 0, 506, 507, 508, 0, 0, 0,
	0, 509, 0, 511, 512, 513, 514, 510, 515, 516,
	517, 518, 0, 519, 520, 521, 0, 522, 523, 524,
	525, 651, 526, 0, 527, 528, 534, 535, 529, 530,
	536, 537, 538, 539, 540, 0, 542, 543, 541, 544,
	545, 546, 0, 547, 548, 531, 532, 549, 550, 0,
	551, 552, 553, 554, 555, 556, 652, 0, 557, 0,
	558, 559, 560, 562, 533, 563, 568, 569, 653, 564,
	565, 566, 567, 654, 571, 572, 0, 573, 574, 0,
	570, 561, 790, 575, 576, 577, 578, 579, 791, 581,
	354, 582, 0, 583, 655, 656, 657, 658, 0, 592,
	0, 584, 585, 586, 659, 587, 660, 0, 588, 589,
	590, 591, 0, 593, 594, 0, 0, 595, 596, 597,
	599, 600, 598, 601, 0, 602, 0, 0, 603, 604,
	605, 661, 662, 663, 0, 607, 606, 608, 664, 785,
	0, 0, 0, 0, 609, 610, 665, 611, 612, 613,
	0, 0, 0, 0, 0, 0, 270, 272, 271, 273,
	274, 275, 276, 277, 0, 278, 279, 795, 0, 0,
	0, 0, 614, 0, 0, 0, 0, 280, 281, 0,
	282, 283, 284, 285, 286, 287, 615, 616, 0, 288,
	617, 289, 618, 0, 619, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 620, 621, 622, 0, 297,
	298, 623, 0, 0, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 0, 321, 322, 323, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 792, 328, 0, 329,
	624, 625, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 626,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	627, 628, 360, 0, 267, 0, 0, 0, 0, 0,
	361, 362, 363, 629, 0, 0, 0, 364, 0, 365,
	0, 0, 0, 366, 367, 630, 631, 368, 369, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 632, 0,
	633, 378, 0, 379, 380, 381, 382, 383, 634, 635,
	636, 460, 0, 384, 385, 0, 386, 387, 388, 389,
	0, 0, 0, 268, 390, 391, 392, 394, 0, 0,
	393, 637, 638, 0, 639, 0, 395, 396, 0, 640,
	0, 397, 398, 399, 0, 400, 0, 0, 0, 401,
	402, 403, 404, 405, 406, 0, 407, 409, 408, 0,
	410, 641, 0, 411, 412, 0, 0, 413, 0, 0,
	0, 414, 415, 418, 0, 0, 416, 417, 419, 420,
	0, 421, 422, 424, 427, 423, 425, 426, 428, 441,
	429, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 443, 0, 442, 0, 444, 445, 446, 451,
	453, 454, 449, 450, 452, 455, 456, 448, 0, 447,
	0, 269, 0, 457, 458, 0, 642, 459, 643, 461,
	462, 0, 0, 463, 0, 0, 0, 465, 466, 467,
	0, 0, 468, 469, 644, 0, 470, 0, 645, 471,
	472, 464, 473, 474, 475, 476, 477, 478, 479, 480,
	0, 481, 482, 646, 483, 484, 485, 647, 486, 487,
	488, 648, 489, 649, 490, 491, 0, 492, 493, 0,
	494, 495, 496, 497, 498, 499, 500, 650, 501, 503,
	502, 504, 0, 505, 0, 506, 507, 508, 0, 0,
	0, 0, 509, 0, 511, 512, 513, 514, 510, 515,
	516, 517, 518, 0, 519, 520, 521, 0, 2276, 523,
	524, 525, 651, 526, 0, 527, 528, 534, 535, 529,
	530, 2277, 537, 538, 539, 540, 0, 542, 543, 541,
	544, 545, 546, 0, 547, 548, 531, 532, 549, 550,
	0, 551, 552, 553, 554, 555, 556, 652, 0, 557,
	0, 558, 559, 560, 562, 533, 563, 568, 569, 653,
	564, 565, 566, 567, 654, 571, 572, 0, 573, 574,
	0, 570, 561, 790, 575, 576, 577, 578, 579, 791,
	581, 354, 582, 0, 583, 655, 656, 657, 658, 0,
	592, 0, 584, 585, 586, 659, 587, 660, 0, 588,
	589, 2278, 591, 0, 593, 594, 0, 0, 595, 596,
	597, 599, 600, 598, 601, 0, 602, 0, 0, 603,
	604, 605, 661, 662, 663, 0, 607, 606, 608, 664,
	0, 2025, 0, 1292, 1992, 609, 610, 665, 611, 612,
	613, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	270, 272, 271, 273, 274, 275, 276, 277, 795, 278,
	279, 0, 0, 0, 0, 0, 614, 0, 0, 0,
	0, 280, 281, 1153, 282, 283, 284, 285, 286, 287,
	615, 616, 0, 288, 617, 289, 618, 0, 619, 290,
	291, 292, 293, 294, 295, 0, 0, 0, 296, 620,
	621, 622, 0, 297, 298, 623, 0, 1297, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 1154, 321, 322, 323,
	0, 0, 0, 0, 0, 0, 1989, 324, 325, 326,
	327, 328, 0, 329, 624, 625, 0, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 340, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 626, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 627, 628, 360, 0, 267, 0,
	0, 0, 0, 0, 361, 362, 363, 629, 0, 0,
	0, 364, 0, 365, 0, 0, 1155, 366, 367, 630,
	631, 368, 369, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 632, 0, 633, 378, 0, 379, 380, 381,
	382, 383, 634, 635, 636, 460, 1157, 384, 385, 0,
	386, 387, 388, 389, 0, 0, 0, 0, 390, 391,
	392, 394, 0, 1156, 393, 637, 638, 0, 639, 0,
	395, 396, 1158, 640, 1159, 397, 398, 399, 1160, 400,
	0, 0, 0, 401, 402, 403, 404, 405, 406, 0,
	407, 409, 408, 0, 410, 641, 1161, 411, 412, 1162,
	0, 413, 0, 0, 0, 414, 415, 418, 0, 0,
	416, 417, 419, 420, 0, 421, 422, 424, 427, 423,
	425, 426, 428, 441, 429, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 443, 0, 442, 1163,
	444, 445, 446, 451, 453, 454, 449, 450, 452, 455,
	456, 448, 1164, 447, 0, 0, 1165, 457, 458, 0,
	642, 459, 643, 461, 462, 0, 0, 463, 0, 0,
	0, 465, 466, 467, 0, 0, 468, 469, 644, 1166,
	470, 1167, 645, 471, 472, 464, 473, 474, 475, 476,
	477, 478, 479, 480, 0, 481, 482, 646, 483, 484,
	485, 647, 486, 487, 488, 648, 489, 649, 490, 491,
	0, 492, 493, 0, 494, 495, 496, 497, 498, 499,
	500, 650, 501, 503, 502, 504, 0, 505, 0, 506,
	507, 508, 0, 0, 0, 0, 509, 0, 511, 512,
	513, 514, 510, 515, 516, 517, 518, 0, 519, 520,
	521, 1168, 522, 523, 524, 525, 651, 526, 0, 527,
	528, 534, 535, 529, 530, 536, 537, 538, 539, 540,
	0, 542, 543, 541, 544, 545, 546, 1990, 547, 548,
	531, 532, 549, 550, 1169, 551, 552, 553, 554, 555,
	556, 652, 0, 557, 0, 558, 559, 560, 562, 533,
	563, 568, 569, 653, 564, 565, 566, 567, 654, 571,
	572, 0, 573, 574, 0, 570, 561, 0, 575, 576,
	577, 578, 579, 580, 581, 354, 582, 0, 583, 655,
	656, 657, 658, 0, 592, 0, 584, 585, 586, 659,
	587, 660, 0, 588, 589, 590, 591, 0, 593, 594,
	0, 0, 595, 596, 597, 599, 600, 598, 601, 0,
	602, 0, 0, 603, 604, 605, 661, 662, 663, 0,
	607, 606, 608, 664, 1986, 0, 1292, 1992, 0, 609,
	610, 665, 611, 612, 613, 0, 0, 0, 0, 0,
	0, 0, 0, 270, 272, 271, 273, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 614,
	0, 0, 0, 0, 280, 281, 1153, 282, 283, 284,
	285, 286, 287, 615, 616, 0, 288, 617, 289, 618,
	0, 619, 290, 291, 292, 293, 294, 295, 0, 0,
	0, 296, 620, 621, 622, 0, 297, 298, 623, 0,
	1297, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 1154,
	321, 322, 323, 0, 0, 0, 0, 0, 0, 1989,
	324, 325, 326, 327, 328, 0, 329, 624, 625, 0,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 340, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 626, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 627, 628, 360,
	0, 267, 0, 0, 0, 0, 0, 361, 362, 363,
	629, 0, 0, 0, 364, 0, 365, 0, 0, 1155,
	366, 367, 630, 631, 368, 369, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 632, 0, 633, 378, 0,
	379, 380, 381, 382, 383, 634, 635, 636, 460, 1157,
	384, 385, 0, 386, 387, 388, 389, 0, 0, 0,
	0, 390, 391, 392, 394, 0, 1156, 393, 637, 638,
	0, 639, 0, 395, 396, 1158, 640, 1159, 397, 398,
	399, 1160, 400, 0, 0, 0, 401, 402, 403, 404,
	405, 406, 0, 407, 409, 408, 0, 410, 641, 1161,
	411, 412, 1162, 0, 413, 0, 0, 0, 414, 415,
	418, 0, 0, 416, 417, 419, 420, 0, 421, 422,
	424, 427, 423, 425, 426, 428, 441, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 443,
	0, 442, 1163, 444, 445, 446, 451, 453, 454, 449,
	450, 452, 455, 456, 448, 1164, 447, 0, 0, 1165,
	457, 458, 0, 642, 459, 643, 461, 462, 0, 0,
	463, 0, 0, 0, 465, 466, 467, 0, 0, 468,
	469, 644, 1166, 470, 1167, 645, 471, 472, 464, 473,
	474, 475, 476, 477, 478, 479, 480, 0, 481, 482,
	646, 483, 484, 485, 647, 486, 487, 488, 648, 489,
	649, 490, 491, 0, 492, 493, 0, 494, 495, 496,
	497, 498, 499, 500, 650, 501, 503, 502, 504, 0,
	505, 0, 506, 507, 508, 0, 0, 0, 0, 509,
	0, 511, 512, 513, 514, 510, 515, 516, 517, 518,
	0, 519, 520, 521, 1168, 522, 523, 524, 525, 651,
	526, 0, 527, 528, 534, 535, 529, 530, 536, 537,
	538, 539, 540, 0, 542, 543, 541, 544, 545, 546,
	1990, 547, 548, 531, 532, 549, 550, 1169, 551, 552,
	553, 554, 555, 556, 652, 0, 557, 0, 558, 559,
	560, 562, 533, 563, 568, 569, 653, 564, 565, 566,
	567, 654, 571, 572, 0, 573, 574, 0, 570, 561,
	0, 575, 576, 577, 578, 579, 580, 581, 354, 582,
	0, 583, 655, 656, 657, 658, 0, 592, 0, 584,
	585, 586, 659, 587, 660, 0, 588, 589, 590, 591,
	0, 593, 594, 0, 0, 595, 596, 597, 599, 600,
	598, 601, 0, 602, 0, 0, 603, 604, 605, 661,
	662, 663, 785, 607, 606, 608, 664, 0, 0, 0,
	0, 0, 609, 610, 665, 611, 612, 613, 0, 270,
	272, 271, 273, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 614, 0, 0, 0, 0,
	280, 281, 0, 282, 283, 284, 285, 286, 287, 615,
	616, 0, 288, 617, 289, 618, 0, 619, 290, 291,
	292, 293, 294, 295, 0, 0, 0, 296, 620, 621,
	622, 0, 297, 298, 623, 0, 0, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 0, 321, 322, 323, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 326, 792,
	328, 0, 329, 624, 625, 0, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	340, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 626, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 627, 628, 360, 0, 267, 0, 0,
	0, 0, 0, 361, 362, 363, 629, 0, 0, 0,
	364, 0, 365, 0, 0, 0, 366, 367, 630, 631,
	368, 369, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 632, 0, 633, 378, 0, 379, 380, 381, 382,
	383, 634, 635, 636, 460, 0, 384, 385, 0, 386,
	387, 388, 389, 0, 0, 0, 268, 390, 391, 392,
	394, 0, 0, 393, 637, 638, 0, 639, 0, 395,
	396, 0, 640, 0, 397, 398, 399, 0, 400, 0,
	0, 0, 401, 402, 403, 404, 405, 406, 0, 407,
	409, 408, 0, 410, 641, 0, 411, 412, 0, 0,
	413, 0, 0, 0, 414, 415, 418, 0, 0, 416,
	417, 419, 420, 0, 421, 422, 424, 427, 423, 425,
	426, 428, 441, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 443, 0, 442, 0, 444,
	445, 446, 451, 453, 454, 449, 450, 452, 455, 456,
	448, 0, 447, 0, 269, 0, 457, 458, 0, 642,
	459, 643, 461, 462, 0, 0, 463, 0, 0, 0,
	465, 466, 467, 0, 0, 468, 469, 644, 0, 470,
	0, 645, 471, 472, 464, 473, 474, 475, 476, 477,
	478, 479, 480, 0, 481, 482, 646, 483, 484, 485,
	647, 486, 487, 488, 648, 489, 649, 490, 491, 0,
	492, 493, 0, 494, 495, 496, 497, 498, 499, 500,
	650, 501, 503, 502, 504, 0, 505, 0, 506, 507,
	508, 0, 0, 0, 0, 509, 0, 511, 512, 513,
	514, 510, 515, 516, 517, 518, 0, 519, 520, 521,
	0, 522, 523, 524, 525, 651, 526, 0, 527, 528,
	534, 535, 529, 530, 1981, 537, 538, 539, 540, 0,
	1982, 543, 541, 544, 545, 546, 0, 547, 548, 531,
	532, 549, 550, 0, 551, 552, 553, 554, 555, 556,
	652, 0, 557, 0, 558, 559, 560, 562, 533, 563,
	568, 569, 653, 564, 565, 566, 567, 654, 571, 572,
	0, 573, 574, 0, 570, 561, 790, 575, 576, 577,
	578, 579, 791, 581, 354, 582, 0, 583, 655, 656,
	657, 658, 0, 592, 0, 584, 585, 586, 659, 587,
	660, 0, 588, 589, 1980, 591, 0, 593, 594, 0,
	0, 595, 596, 597, 599, 600, 598, 601, 0, 602,
	0, 0, 603, 604, 605, 661, 662, 663, 0, 607,
	606, 608, 664, 785, 0, 0, 0, 0, 609, 610,
	665, 611, 612, 613, 0, 0, 0, 0, 0, 0,
	270, 272, 271, 273, 274, 275, 276, 277, 0, 278,
	279, 795, 0, 0, 0, 0, 614, 0, 0, 0,
	0, 280, 281, 0, 282, 283, 284, 285, 286, 287,
	615, 616, 0, 288, 617, 289, 618, 0, 619, 290,
	291, 292, 293, 294, 295, 0, 0, 0, 296, 620,
	621, 622, 0, 297, 298, 623, 0, 0, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 0, 321, 322, 323,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	792, 328, 0, 329, 624, 625, 0, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 340, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 626, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 627, 628, 360, 0, 267, 0,
	0, 0, 0, 0, 361, 362, 363, 629, 0, 0,
	0, 364, 0, 365, 0, 0, 0, 366, 367, 630,
	631, 368, 369, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 632, 0, 633, 378, 0, 379, 380, 381,
	382, 383, 634, 635, 636, 460, 0, 384, 385, 0,
	386, 387, 388, 389, 0, 0, 0, 268, 390, 391,
	392, 394, 0, 0, 393, 637, 638, 0, 639, 0,
	395, 396, 0, 640, 0, 397, 398, 399, 0, 400,
	0, 0, 0, 401, 402, 403, 404, 405, 406, 0,
	407, 409, 408, 0, 410, 641, 0, 411, 412, 0,
	0, 413, 0, 0, 0, 414, 415, 418, 0, 0,
	416, 417, 419, 420, 0, 421, 422, 424, 427, 423,
	425, 426, 428, 441, 429, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 443, 0, 442, 0,
	444, 445, 446, 451, 453, 454, 449, 450, 452, 455,
	456, 448, 0, 447, 0, 269, 0, 457, 458, 0,
	642, 459, 643, 461, 462, 0, 0, 463, 0, 0,
	0, 465, 466, 467, 0, 0, 468, 469, 644, 0,
	470, 0, 645, 471, 472, 464, 473, 474, 475, 476,
	477, 478, 479, 480, 0, 481, 482, 646, 483, 484,
	485, 647, 486, 487, 488, 648, 489, 649, 490, 491,
	0, 492, 493, 0, 494, 495, 496, 497, 498, 499,
	500, 650, 501, 503, 502, 504, 0, 505, 0, 506,
	507, 508, 0, 0, 0, 0, 509, 0, 511, 512,
	513, 514, 510, 515, 516, 517, 518, 0, 519, 520,
	521, 0, 522, 523, 524, 525, 651, 526, 0, 527,
	528, 534, 535, 529, 530, 1933, 537, 538, 539, 540,
	0, 1934, 543, 541, 544, 545, 546, 0, 547, 548,
	531, 532, 549, 550, 0, 551, 552, 553, 554, 555,
	556, 652, 0, 557, 0, 558, 559, 560, 562, 533,
	563, 568, 569, 653, 564, 565, 566, 567, 654, 571,
	572, 0, 573, 574, 0, 570, 561, 790, 575, 576,
	577, 578, 579, 791, 581, 354, 582, 0, 583, 655,
	656, 657, 658, 0, 592, 0, 584, 585, 586, 659,
	587, 660, 0, 588, 589, 1932, 591, 0, 593, 594,
	0, 0, 595, 596, 597, 599, 600, 598, 601, 0,
	602, 0, 0, 603, 604, 605, 661, 662, 663, 0,
	607, 606, 608, 664, 1292, 1992, 0, 0, 0, 609,
	610, 665, 611, 612, 613, 0, 0, 0, 0, 0,
	0, 270, 272, 271, 273, 274, 275, 276, 277, 0,
	278, 279, 795, 0, 0, 0, 0, 614, 0, 0,
	0, 0, 280, 281, 1153, 282, 283, 284, 285, 286,
	287, 615, 616, 0, 288, 617, 289, 618, 0, 619,
	290, 291, 292, 293, 294, 295, 0, 0, 0, 296,
	620, 621, 622, 0, 297, 298, 623, 0, 1297, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 1154, 321, 322,
	323, 0, 0, 0, 0, 0, 0, 1989, 324, 325,
	326, 327, 328, 0, 329, 624, 625, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 340, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 626, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 627, 628, 360, 0, 267,
	0, 0, 0, 0, 0, 361, 362, 363, 629, 0,
	0, 0, 364, 0, 365, 0, 0, 1155, 366, 367,
	630, 631, 368, 369, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 632, 0, 633, 378, 0, 379, 380,
	381, 382, 383, 634, 635, 636, 460, 1157, 384, 385,
	0, 386, 387, 388, 389, 0, 0, 0, 0, 390,
	391, 392, 394, 0, 1156, 393, 637, 638, 0, 639,
	0, 395, 396, 1158, 640, 1159, 397, 398, 399, 1160,
	400, 0, 0, 0, 401, 402, 403, 404, 405, 406,
	0, 407, 409, 408, 0, 410, 641, 1161, 411, 412,
	1162, 0, 413, 0, 0, 0, 414, 415, 418, 0,
	0, 416, 417, 419, 420, 0, 421, 422, 424, 427,
	423, 425, 426, 428, 441, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 443, 0, 442,
	1163, 444, 445, 446, 451, 453, 454, 449, 450, 452,
	455, 456, 448, 1164, 447, 0, 0, 1165, 457, 458,
	0, 642, 459, 643, 461, 462, 0, 0, 463, 0,
	0, 0, 465, 466, 467, 0, 0, 468, 469, 644,
	1166, 470, 1167, 645, 471, 472, 464, 473, 474, 475,
	476, 477, 478, 479, 480, 0, 481, 482, 646, 483,
	484, 485, 647, 486, 487, 488, 648, 489, 649, 490,
	491, 0, 492, 493, 0, 494, 495, 496, 497, 498,
	499, 500, 650, 501, 503, 502, 504, 0, 505, 0,
	506, 507, 508, 0, 0, 0, 0, 509, 0, 511,
	512, 513, 514, 510, 515, 516, 517, 518, 0, 519,
	520, 521, 1168, 522, 523, 524, 525, 651, 526, 0,
	527, 528, 534, 535, 529, 530, 536, 537, 538, 539,
	540, 0, 542, 543, 541, 544, 545, 546, 1990, 547,
	548, 531, 532, 549, 550, 1169, 551, 552, 553, 554,
	555, 556, 652, 0, 557, 0, 558, 559, 560, 562,
	533, 563, 568, 569, 653, 564, 565, 566, 567, 654,
	571, 572, 0, 573, 574, 0, 570, 561, 0, 575,
	576, 577, 578, 579, 580, 581, 354, 582, 0, 583,
	655, 656, 657, 658, 0, 592, 0, 584, 585, 586,
	659, 587, 660, 0, 588, 589, 590, 591, 0, 593,
	594, 0, 0, 595, 596, 597, 599, 600, 598, 601,
	0, 602, 0, 0, 603, 604, 605, 661, 662, 663,
	0, 607, 606, 608, 664, 0, 0, 0, 0, 0,
	609, 610, 665, 611, 612, 613, 1292, 1291, 0, 0,
	0, 0, 1289, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 270, 272, 271, 273, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 614,
	0, 0, 0, 0, 280, 281, 1153, 282, 283, 284,
	285, 286, 287, 615, 616, 0, 288, 617, 289, 618,
	0, 619, 290, 291, 292, 293, 294, 295, 0, 0,
	0, 296, 620, 621, 622, 0, 297, 298, 623, 0,
	1297, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 1154,
	321, 322, 323, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 326, 327, 328, 0, 329, 624, 625, 0,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 340, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 626, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 627, 628, 360,
	0, 267, 0, 0, 0, 0, 0, 361, 362, 363,
	629, 0, 0, 0, 364, 0, 365, 0, 0, 1155,
	366, 367, 630, 631, 368, 369, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 632, 0, 633, 378, 0,
	379, 380, 381, 382, 383, 634, 635, 636, 460, 1157,
	384, 385, 0, 386, 387, 388, 389, 0, 0, 0,
	0, 390, 391, 392, 394, 0, 1156, 393, 637, 638,
	0, 639, 0, 395, 396, 1158, 640, 1159, 397, 398,
	399, 1160, 400, 0, 0, 0, 401, 402, 403, 404,
	405, 406, 0, 407, 409, 408, 0, 410, 641, 1161,
	411, 412, 1162, 0, 413, 0, 0, 0, 414, 415,
	418, 0, 0, 416, 417, 419, 420, 0, 421, 422,
	424, 427, 423, 425, 426, 428, 441, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 443,
	0, 442, 1163, 444, 445, 446, 451, 453, 454, 449,
	450, 452, 455, 456, 448, 1164, 447, 0, 0, 1165,
	457, 458, 3783, 642, 459, 643, 461, 462, 0, 0,
	463, 0, 0, 0, 465, 466, 467, 0, 0, 468,
	469, 644, 1166, 470, 1167, 645, 471, 472, 464, 473,
	474, 475, 476, 477, 478, 479, 480, 0, 481, 482,
	646, 483, 484, 485, 647, 486, 487, 488, 648, 489,
	649, 490, 491, 0, 492, 493, 0, 494, 495, 496,
	497, 498, 499, 500, 650, 501, 503, 502, 504, 0,
	505, 0, 506, 507, 508, 0, 0, 0, 0, 509,
	0, 511, 512, 513, 514, 510, 515, 516, 517, 518,
	0, 519, 520, 521, 1168, 522, 523, 524, 525, 651,
	526, 0, 527, 528, 534, 535, 529, 530, 536, 537,
	538, 539, 540, 0, 542, 543, 541, 544, 545, 546,
	0, 547, 548, 531, 532, 549, 550, 1169, 551, 552,
	553, 554, 555, 556, 652, 0, 557, 0, 558, 559,
	560, 562, 533, 563, 568, 569, 653, 564, 565, 566,
	567, 654, 571, 572, 0, 573, 574, 0, 570, 561,
	0, 575, 576, 577, 578, 579, 580, 581, 354, 582,
	0, 583, 655, 656, 657, 658, 0, 592, 0, 584,
	585, 586, 659, 587, 660, 0, 588, 589, 590, 591,
	0, 593, 594, 0, 0, 595, 596, 597, 599, 600,
	598, 601, 0, 602, 0, 0, 603, 604, 605, 661,
	662, 663, 0, 607, 606, 608, 664, 0, 0, 0,
	0, 0, 609, 610, 665, 611, 612, 613, 1292, 1291,
	0, 0, 0, 0, 1289, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 270, 272, 271, 273, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 614, 0, 0, 0, 0, 280, 281, 1153, 282,
	283, 284, 285, 286, 287, 615, 616, 0, 288, 617,
	289, 618, 0, 619, 290, 291, 292, 293, 294, 295,
	0, 0, 0, 296, 620, 621, 622, 0, 297, 298,
	623, 0, 1297, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 1154, 321, 322, 323, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 326, 327, 328, 0, 329, 624,
	625, 0, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 340, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 626, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 627,
	628, 360, 0, 267, 0, 0, 0, 0, 0, 361,
	362, 363, 629, 0, 0, 0, 364, 0, 365, 0,
	0, 1155, 366, 367, 630, 631, 368, 369, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 632, 0, 633,
	378, 0, 379, 380, 381, 382, 383, 634, 635, 636,
	460, 1157, 384, 385, 0, 386, 387, 388, 389, 0,
	0, 0, 0, 390, 391, 392, 394, 0, 1156, 393,
	637, 638, 0, 639, 0, 395, 396, 1158, 640, 1159,
	397, 398, 399, 1160, 400, 0, 0, 0, 401, 402,
	403, 404, 405, 406, 0, 407, 409, 408, 0, 410,
	641, 1161, 411, 412, 1162, 0, 413, 0, 0, 0,
	414, 415, 418, 0, 0, 416, 417, 419, 420, 0,
	421, 422, 424, 427, 423, 425, 426, 428, 441, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 443, 0, 442, 1163, 444, 445, 446, 451, 453,
	454, 449, 450, 452, 455, 456, 448, 1164, 447, 0,
	0, 1165, 457, 458, 3404, 642, 459, 643, 461, 462,
	0, 0, 463, 0, 0, 0, 465, 466, 467, 0,
	0, 468, 469, 644, 1166, 470, 1167, 645, 471, 472,
	464, 473, 474, 475, 476, 477, 478, 479, 480, 0,
	481, 482, 646, 483, 484, 485, 647, 486, 487, 488,
	648, 489, 649, 490, 491, 0, 492, 493, 0, 494,
	495, 496, 497, 498, 499, 500, 650, 501, 503, 502,
	504, 0, 505, 0, 506, 507, 508, 0, 0, 0,
	0, 509, 0, 511, 512, 513, 514, 510, 515, 516,
	517, 518, 0, 519, 520, 521, 1168, 522, 523, 524,
	525, 651, 526, 0, 527, 528, 534, 535, 529, 530,
	536, 537, 538, 539, 540, 0, 542, 543, 541, 544,
	545, 546, 0, 547, 548, 531, 532, 549, 550, 1169,
	551, 552, 553, 554, 555, 556, 652, 0, 557, 0,
	558, 559, 560, 562, 533, 563, 568, 569, 653, 564,
	565, 566, 567, 654, 571, 572, 0, 573, 574, 0,
	570, 561, 0, 575, 576, 577, 578, 579, 580, 581,
	354, 582, 0, 583, 655, 656, 657, 658, 0, 592,
	0, 584, 585, 586, 659, 587, 660, 0, 588, 589,
	590, 591, 0, 593, 594, 0, 0, 595, 596, 597,
	599, 600, 598, 601, 0, 602, 0, 0, 603, 604,
	605, 661, 662, 663, 264, 607, 606, 608, 664, 0,
	0, 0, 0, 0, 609, 610, 665, 611, 612, 613,
	0, 270, 272, 271, 273, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 614, 0, 0,
	0, 0, 280, 281, 0, 282, 283, 284, 285, 286,
	287, 615, 616, 0, 288, 617, 289, 618, 0, 619,
	290, 291, 292, 293, 294, 295, 0, 0, 0, 296,
	620, 621, 622, 0, 297, 298, 623, 0, 0, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 0, 321, 322,
	323, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	326, 327, 328, 0, 329, 624, 625, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 340, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 626, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 627, 628, 360, 0, 267,
	0, 0, 0, 0, 0, 361, 362, 363, 629, 0,
	0, 0, 364, 0, 365, 0, 0, 0, 366, 367,
	630, 631, 368, 369, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 632, 0, 633, 378, 0, 379, 380,
	381, 382, 383, 634, 635, 636, 460, 0, 384, 385,
	0, 386, 387, 388, 389, 0, 0, 0, 268, 390,
	391, 392, 394, 0, 0, 393, 637, 638, 0, 639,
	0, 395, 396, 0, 640, 0, 397, 398, 399, 0,
	400, 0, 0, 0, 401, 402, 403, 404, 405, 406,
	0, 407, 409, 408, 0, 410, 641, 0, 411, 412,
	0, 0, 413, 0, 0, 0, 414, 415, 418, 0,
	0, 416, 417, 419, 420, 0, 421, 422, 424, 427,
	423, 425, 426, 428, 441, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 443, 0, 442,
	0, 444, 445, 446, 451, 453, 454, 449, 450, 452,
	455, 456, 448, 0, 447, 0, 269, 0, 457, 458,
	0, 642, 459, 643, 461, 462, 0, 0, 463, 0,
	0, 0, 465, 466, 467, 0, 0, 468, 469, 644,
	0, 470, 0, 645, 471, 472, 464, 473, 474, 475,
	476, 477, 478, 479, 480, 0, 481, 482, 646, 483,
	484, 485, 647, 486, 487, 488, 648, 489, 649, 490,
	491, 0, 492, 493, 0, 494, 495, 496, 497, 498,
	499, 500, 650, 501, 503, 502, 504, 0, 505, 0,
	506, 507, 508, 0, 0, 0, 0, 509, 0, 511,
	512, 513, 514, 510, 515, 516, 517, 518, 0, 519,
	520, 521, 0, 522, 523, 524, 525, 651, 526, 0,
	527, 528, 534, 535, 529, 530, 536, 537, 538, 539,
	540, 0, 542, 543, 541, 544, 545, 546, 0, 547,
	548, 531, 532, 549, 550, 0, 551, 552, 553, 554,
	555, 556, 652, 0, 557, 0, 558, 559, 560, 562,
	533, 563, 568, 569, 653, 564, 565, 566, 567, 654,
	571, 572, 0, 573, 574, 0, 570, 561, 0, 575,
	576, 577, 578, 579, 580, 581, 354, 582, 0, 583,
	655, 656, 657, 658, 0, 592, 0, 584, 585, 586,
	659, 587, 660, 0, 588, 589, 590, 591, 0, 593,
	594, 0, 0, 595, 596, 597, 599, 600, 598, 601,
	0, 602, 0, 0, 603, 604, 605, 661, 662, 663,
	0, 607, 606, 608, 664, 0, 0, 0, 0, 0,
	609, 610, 665, 611, 612, 613, 1616, 0, 1292, 1291,
	0, 0, 0, 0, 1289, 0, 0, 0, 0, 0,
	0, 0, 0, 795, 0, 270, 272, 271, 273, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 614, 0, 0, 0, 0, 280, 281, 1153, 282,
	283, 284, 285, 286, 287, 615, 616, 0, 288, 617,
	289, 618, 0, 619, 290, 291, 292, 293, 294, 295,
	0, 0, 0, 296, 620, 621, 622, 0, 297, 298,
	623, 0, 1297, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 1154, 321, 322, 323, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 326, 327, 328, 0, 329, 624,
	625, 0, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 340, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 626, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 627,
	628, 360, 0, 267, 0, 0, 0, 0, 0, 1615,
	362, 363, 629, 0, 0, 0, 364, 0, 365, 0,
	0, 1155, 366, 367, 630, 631, 368, 369, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 632, 0, 633,
	378, 0, 379, 380, 381, 382, 383, 634, 635, 636,
	460, 1157, 384, 385, 0, 386, 387, 388, 389, 0,
	0, 0, 0, 390, 391, 392, 394, 0, 1156, 393,
	637, 638, 0, 639, 0, 395, 396, 1158, 640, 1159,
	397, 398, 399, 1160, 400, 0, 0, 0, 401, 402,
	403, 404, 405, 406, 0, 407, 409, 408, 0, 410,
	641, 1161, 411, 412, 1162, 0, 413, 0, 0, 0,
	414, 415, 418, 0, 0, 416, 417, 419, 420, 0,
	421, 422, 424, 427, 423, 425, 426, 428, 441, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 443, 0, 442, 1163, 444, 445, 446, 451, 453,
	454, 449, 450, 452, 455, 456, 448, 1164, 447, 0,
	0, 1165, 457, 458, 0, 642, 459, 643, 461, 462,
	0, 0, 463, 0, 0, 0, 465, 466, 467, 0,
	0, 468, 469, 644, 1166, 470, 1167, 645, 471, 472,
	464, 473, 474, 475, 476, 477, 478, 479, 480, 0,
	481, 482, 646, 483, 484, 485, 647, 486, 487, 488,
	648, 489, 649, 490, 491, 0, 492, 493, 0, 494,
	495, 496, 497, 498, 1614, 500, 650, 501, 503, 502,
	504, 0, 505, 0, 506, 507, 508, 0, 0, 0,
	0, 509, 0, 511, 512, 513, 514, 510, 515, 516,
	517, 518, 0, 519, 520, 521, 1168, 522, 523, 524,
	525, 651, 526, 0, 527, 528, 534, 535, 529, 530,
	536, 1613, 538, 539, 540, 0, 542, 543, 541, 544,
	545, 546, 0, 547, 548, 531, 532, 549, 550, 1169,
	551, 552, 553, 554, 555, 556, 652, 0, 557, 0,
	558, 559, 560, 562, 533, 563, 568, 569, 653, 564,
	565, 566, 567, 654, 571, 572, 0, 573, 574, 0,
	570, 561, 0, 575, 576, 577, 578, 579, 580, 581,
	354, 582, 0, 583, 655, 656, 657, 658, 0, 592,
	0, 584, 585, 586, 659, 587, 660, 0, 588, 589,
	590, 591, 0, 593, 594, 0, 0, 595, 596, 597,
	599, 600, 598, 601, 0, 602, 0, 0, 603, 604,
	605, 661, 662, 663, 0, 607, 606, 608, 664, 0,
	0, 0, 0, 0, 609, 610, 665, 611, 612, 613,
	1534, 0, 1292, 1291, 0, 0, 0, 0, 1289, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 270,
	272, 271, 273, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 614, 0, 0, 0, 0,
	280, 281, 1153, 282, 283, 284, 285, 286, 287, 615,
	616, 0, 288, 617, 289, 618, 0, 619, 290, 291,
	292, 293, 294, 295, 0, 0, 0, 296, 620, 621,
	622, 0, 297, 298, 623, 0, 1297, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 1154, 321, 322, 323, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 326, 327,
	328, 0, 329, 624, 625, 0, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	340, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 626, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 627, 628, 360, 0, 267, 0, 0,
	0, 0, 0, 361, 362, 363, 629, 0, 0, 0,
	364, 0, 365, 0, 0, 1155, 366, 367, 630, 631,
	368, 369, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 632, 0, 633, 378, 0, 379, 380, 381, 382,
	383, 1533, 635, 636, 460, 1157, 384, 385, 0, 386,
	387, 388, 389, 0, 0, 0, 0, 390, 391, 392,
	394, 0, 1156, 393, 637, 638, 0, 639, 0, 395,
	396, 1158, 640, 1159, 397, 398, 399, 1160, 400, 0,
	0, 0, 401, 402, 403, 404, 405, 406, 0, 407,
	409, 408, 0, 410, 641, 1161, 411, 412, 1162, 0,
	413, 0, 0, 0, 414, 415, 418, 0, 0, 416,
	417, 419, 420, 0, 421, 422, 424, 427, 423, 425,
	426, 428, 441, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 443, 0, 442, 1163, 444,
	445, 446, 451, 453, 454, 449, 450, 452, 455, 456,
	448, 1164, 447, 0, 0, 1165, 457, 458, 0, 642,
	459, 643, 461, 462, 0, 0, 463, 0, 0, 0,
	465, 466, 467, 0, 0, 468, 469, 644, 1166, 470,
	1167, 645, 471, 472, 464, 473, 474, 475, 476, 477,
	478, 479, 480, 0, 481, 482, 646, 483, 484, 485,
	647, 486, 487, 488, 648, 489, 649, 490, 491, 0,
	492, 493, 0, 494, 495, 496, 497, 498, 499, 500,
	650, 501, 503, 502, 504, 0, 505, 0, 506, 507,
	508, 0, 0, 0, 0, 509, 0, 511, 512, 513,
	514, 510, 515, 516, 517, 518, 0, 519, 520, 521,
	1168, 522, 523, 524, 525, 651, 526, 0, 527, 528,
	534, 535, 529, 530, 536, 537, 538, 539, 540, 0,
	542, 543, 541, 544, 545, 546, 0, 547, 548, 531,
	532, 549, 550, 1169, 551, 552, 553, 554, 555, 556,
	652, 0, 557, 0, 558, 559, 560, 562, 533, 563,
	568, 569, 653, 564, 565, 566, 567, 654, 571, 572,
	0, 573, 574, 0, 570, 561, 0, 575, 576, 577,
	578, 579, 580, 581, 354, 582, 0, 583, 655, 656,
	657, 658, 0, 592, 0, 584, 585, 586, 659, 587,
	660, 0, 588, 589, 590, 591, 0, 593, 594, 0,
	0, 595, 596, 597, 599, 600, 598, 601, 0, 602,
	0, 0, 603, 604, 605, 661, 662, 663, 0, 607,
	606, 608, 664, 0, 0, 0, 0, 0, 609, 610,
	665, 611, 612, 613, 1494, 0, 1292, 1291, 0, 0,
	0, 0, 1289, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 270, 272, 271, 273, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 614,
	0, 0, 0, 0, 280, 281, 1153, 282, 283, 284,
	285, 286, 287, 615, 616, 0, 288, 617, 289, 618,
	0, 619, 290, 291, 292, 293, 294, 295, 0, 0,
	0, 296, 620, 621, 622, 0, 297, 298, 623, 0,
	1297, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 1154,
	321, 322, 323, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 326, 327, 328, 0, 329, 624, 625, 0,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 340, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 626, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 627, 628, 360,
	0, 267, 0, 0, 0, 0, 0, 361, 362, 363,
	629, 0, 0, 0, 364, 0, 365, 0, 0, 1155,
	366, 367, 630, 631, 368, 369, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 632, 0, 633, 378, 0,
	379, 380, 381, 382, 383, 634, 635, 636, 460, 1157,
	384, 385, 0, 386, 387, 388, 389, 0, 0, 0,
	0, 390, 391, 392, 394, 0, 1156, 393, 637, 638,
	0, 639, 0, 395, 396, 1158, 640, 1159, 397, 398,
	399, 1160, 400, 0, 0, 0, 401, 402, 403, 404,
	405, 406, 0, 407, 409, 408, 0, 410, 641, 1161,
	411, 412, 1162, 0, 413, 0, 0, 0, 414, 415,
	418, 0, 0, 416, 417, 419, 420, 0, 421, 422,
	424, 427, 423, 425, 426, 428, 441, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 443,
	0, 442, 1163, 444, 445, 446, 451, 453, 454, 449,
	450, 452, 455, 456, 448, 1164, 447, 0, 0, 1165,
	457, 458, 0, 642, 459, 643, 461, 462, 0, 0,
	463, 0, 0, 0, 465, 466, 467, 0, 0, 468,
	469, 644, 1166, 470, 1167, 645, 471, 472, 464, 473,
	474, 475, 476, 477, 478, 479, 480, 0, 481, 482,
	646, 483, 484, 485, 647, 486, 487, 488, 648, 489,
	649, 490, 491, 0, 492, 493, 0, 494, 495, 496,
	497, 498, 499, 500, 650, 501, 503, 502, 504, 0,
	505, 0, 506, 507, 508, 0, 0, 0, 0, 509,
	0, 511, 512, 513, 514, 510, 515, 516, 517, 518,
	0, 519, 520, 521, 1168, 522, 523, 524, 525, 651,
	526, 0, 527, 528, 534, 535, 529, 530, 536, 537,
	538, 539, 540, 0, 542, 543, 541, 544, 545, 546,
	0, 547, 548, 531, 532, 549, 550, 1169, 551, 552,
	553, 554, 555, 556, 652, 0, 557, 0, 558, 559,
	560, 562, 533, 563, 568, 569, 653, 564, 565, 566,
	567, 654, 571, 572, 0, 573, 574, 0, 570, 561,
	0, 575, 576, 577, 578, 579, 580, 581, 354, 582,
	0, 583, 655, 656, 657, 658, 0, 592, 0, 584,
	585, 586, 659, 587, 660, 0, 588, 589, 590, 591,
	0, 593, 594, 0, 0, 595, 596, 597, 599, 600,
	598, 601, 0, 602, 0, 0, 603, 604, 605, 661,
	662, 663, 0, 607, 606, 608, 664, 0, 0, 0,
	0, 0, 609, 610, 665, 611, 612, 613, 1462, 0,
	1292, 1291, 0, 0, 0, 0, 1289, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 270, 272, 271,
	273, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 614, 0, 0, 0, 0, 280, 281,
	1153, 282, 283, 284, 285, 286, 287, 615, 616, 0,
	288, 617, 289, 618, 0, 619, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 620, 621, 622, 0,
	297, 298, 623, 0, 1297, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 1154, 321, 322, 323, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 326, 327, 328, 0,
	329, 624, 625, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	626, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 627, 628, 360, 0, 267, 0, 0, 0, 0,
	0, 361, 362, 363, 629, 0, 0, 0, 364, 0,
	365, 0, 0, 1155, 366, 367, 630, 631, 368, 369,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 632,
	0, 633, 378, 0, 379, 380, 381, 382, 383, 1461,
	635, 636, 460, 1157, 384, 385, 0, 386, 387, 388,
	389, 0, 0, 0, 0, 390, 391, 392, 394, 0,
	1156, 393, 637, 638, 0, 639, 0, 395, 396, 1158,
	640, 1159, 397, 398, 399, 1160, 400, 0, 0, 0,
	401, 402, 403, 404, 405, 406, 0, 407, 409, 408,
	0, 410, 641, 1161, 411, 412, 1162, 0, 413, 0,
	0, 0, 414, 415, 418, 0, 0, 416, 417, 419,
	420, 0, 421, 422, 424, 427, 423, 425, 426, 428,
	441, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 443, 0, 442, 1163, 444, 445, 446,
	451, 453, 454, 449, 450, 452, 455, 456, 448, 1164,
	447, 0, 0, 1165, 457, 458, 0, 642, 459, 643,
	461, 462, 0, 0, 463, 0, 0, 0, 465, 466,
	467, 0, 0, 468, 469, 644, 1166, 470, 1167, 645,
	471, 472, 464, 473, 474, 475, 476, 477, 478, 479,
	480, 0, 481, 482, 646, 483, 484, 485, 647, 486,
	487, 488, 648, 489, 649, 490, 491, 0, 492, 493,
	0, 494, 495, 496, 497, 498, 499, 500, 650, 501,
	503, 502, 504, 0, 505, 0, 506, 507, 508, 0,
	0, 0, 0, 509, 0, 511, 512, 513, 514, 510,
	515, 516, 517, 518, 0, 519, 520, 521, 1168, 522,
	523, 524, 525, 651, 526, 0, 527, 528, 534, 535,
	529, 530, 536, 537, 538, 539, 540, 0, 542, 543,
	541, 544, 545, 546, 0, 547, 548, 531, 532, 549,
	550, 1169, 551, 552, 553, 554, 555, 556, 652, 0,
	557, 0, 558, 559, 560, 562, 533, 563, 568, 569,
	653, 564, 565, 566, 567, 654, 571, 572, 0, 573,
	574, 0, 570, 561, 0, 575, 576, 577, 578, 579,
	580, 581, 354, 582, 0, 583, 655, 656, 657, 658,
	0, 592, 0, 584, 585, 586, 659, 587, 660, 0,
	588, 589, 590, 591, 0, 593, 594, 0, 0, 595,
	596, 597, 599, 600, 598, 601, 0, 602, 0, 0,
	603, 604, 605, 661, 662, 663, 0, 607, 606, 608,
	664, 0, 0, 0, 0, 0, 609, 610, 665, 611,
	612, 613, 1286, 0, 1292, 1291, 0, 0, 0, 0,
	1289, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 270, 272, 271, 273, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 614, 0, 0,
	0, 0, 280, 281, 1153, 282, 283, 284, 285, 286,
	287, 615, 616, 0, 288, 617, 289, 618, 0, 619,
	290, 291, 292, 293, 294, 295, 0, 0, 0, 296,
	620, 621, 622, 0, 297, 298, 623, 0, 1297, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 1154, 321, 322,
	323, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	326, 327, 328, 0, 329, 624, 625, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 340, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 626, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 627, 628, 360, 0, 267,
	0, 0, 0, 0, 0, 361, 362, 363, 629, 0,
	0, 0, 364, 0, 365, 0, 0, 1155, 366, 367,
	630, 631, 368, 369, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 632, 0, 633, 378, 0, 379, 380,
	381, 382, 383, 1285, 635, 636, 460, 1157, 384, 385,
	0, 386, 387, 388, 389, 0, 0, 0, 0, 390,
	391, 392, 394, 0, 1156, 393, 637, 638, 0, 639,
	0, 395, 396, 1158, 640, 1159, 397, 398, 399, 1160,
	400, 0, 0, 0, 401, 402, 403, 404, 405, 406,
	0, 407, 409, 408, 0, 410, 641, 1161, 411, 412,
	1162, 0, 413, 0, 0, 0, 414, 415, 418, 0,
	0, 416, 417, 419, 420, 0, 421, 422, 424, 427,
	423, 425, 426, 428, 441, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 443, 0, 442,
	1163, 444, 445, 446, 451, 453, 454, 449, 450, 452,
	455, 456, 448, 1164, 447, 0, 0, 1165, 457, 458,
	0, 642, 459, 643, 461, 462, 0, 0, 463, 0,
	0, 0, 465, 466, 467, 0, 0, 468, 469, 644,
	1166, 470, 1167, 645, 471, 472, 464, 473, 474, 475,
	476, 477, 478, 479, 480, 0, 481, 482, 646, 483,
	484, 485, 647, 486, 487, 488, 648, 489, 649, 490,
	491, 0, 492, 493, 0, 494, 495, 496, 497, 498,
	499, 500, 650, 501, 503, 502, 504, 0, 505, 0,
	506, 507, 508, 0, 0, 0, 0, 509, 0, 511,
	512, 513, 514, 510, 515, 516, 517, 518, 0, 519,
	520, 521, 1168, 522, 523, 524, 525, 651, 526, 0,
	527, 528, 534, 535, 529, 530, 536, 537, 538, 539,
	540, 0, 542, 543, 541, 544, 545, 546, 0, 547,
	548, 531, 532, 549, 550, 1169, 551, 552, 553, 554,
	555, 556, 652, 0, 557, 0, 558, 559, 560, 562,
	533, 563, 568, 569, 653, 564, 565, 566, 567, 654,
	571, 572, 0, 573, 574, 0, 570, 561, 0, 575,
	576, 577, 578, 579, 580, 581, 354, 582, 0, 583,
	655, 656, 657, 658, 0, 592, 0, 584, 585, 586,
	659, 587, 660, 0, 588, 589, 590, 591, 0, 593,
	594, 0, 0, 595, 596, 597, 599, 600, 598, 601,
	0, 602, 0, 0, 603, 604, 605, 661, 662, 663,
	0, 607, 606, 608, 664, 0, 0, 0, 0, 0,
	609, 610, 665, 611, 612, 613, 1292, 1291, 0, 0,
	0, 0, 1289, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 270, 272, 271, 273, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 614,
	0, 0, 0, 0, 280, 281, 1153, 282, 283, 284,
	285, 286, 287, 615, 616, 0, 288, 617, 289, 618,
	0, 619, 290, 291, 292, 293, 294, 295, 0, 0,
	0, 296, 620, 621, 622, 0, 297, 298, 623, 0,
	1297, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 1154,
	321, 322, 323, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 326, 327, 328, 0, 329, 624, 625, 0,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 340, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 626, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 627, 628, 360,
	0, 267, 0, 0, 0, 0, 0, 361, 362, 363,
	629, 0, 0, 0, 364, 0, 365, 0, 0, 1155,
	366, 367, 630, 631, 368, 369, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 632, 0, 633, 378, 0,
	379, 380, 381, 382, 383, 634, 635, 636, 460, 1157,
	384, 385, 0, 386, 387, 388, 389, 0, 0, 0,
	0, 390, 391, 392, 394, 0, 1156, 393, 637, 638,
	0, 639, 0, 395, 396, 1158, 640, 1159, 397, 398,
	399, 1160, 400, 0, 0, 0, 401, 402, 403, 404,
	405, 406, 0, 407, 409, 408, 0, 410, 641, 1161,
	411, 412, 1162, 0, 413, 0, 0, 0, 414, 415,
	418, 0, 0, 416, 417, 419, 420, 0, 421, 422,
	424, 427, 423, 425, 426, 428, 441, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 443,
	0, 442, 1163, 444, 445, 446, 451, 453, 454, 449,
	450, 452, 455, 456, 448, 1164, 447, 0, 0, 1165,
	457, 458, 0, 642, 459, 643, 461, 462, 0, 0,
	463, 0, 0, 0, 465, 466, 467, 0, 0, 468,
	469, 644, 1166, 470, 1167, 645, 471, 472, 464, 473,
	474, 475, 476, 477, 478, 479, 480, 0, 481, 482,
	646, 483, 484, 485, 647, 486, 487, 488, 648, 489,
	649, 490, 491, 0, 492, 493, 0, 494, 495, 496,
	497, 498, 499, 500, 650, 501, 503, 502, 504, 0,
	505, 0, 506, 507, 508, 0, 0, 0, 0, 509,
	0, 511, 512, 513, 514, 510, 515, 516, 517, 518,
	0, 519, 520, 521, 1168, 522, 523, 524, 525, 651,
	526, 0, 527, 528, 534, 535, 529, 530, 536, 537,
	538, 539, 540, 0, 542, 543, 541, 544, 545, 546,
	0, 547, 548, 531, 532, 549, 550, 1169, 551, 552,
	553, 554, 555, 556, 652, 0, 557, 0, 558, 559,
	560, 562, 533, 563, 568, 569, 653, 564, 565, 566,
	567, 654, 571, 572, 0, 573, 574, 0, 570, 561,
	0, 575, 576, 577, 578, 579, 580, 581, 354, 582,
	0, 583, 655, 656, 657, 658, 0, 592, 0, 584,
	585, 586, 659, 587, 660, 0, 588, 589, 590, 591,
	0, 593, 594, 0, 0, 595, 596, 597, 599, 600,
	598, 601, 0, 602, 0, 0, 603, 604, 605, 661,
	662, 663, 0, 607, 606, 608, 664, 1292, 1992, 0,
	0, 0, 609, 610, 665, 611, 612, 613, 0, 0,
	0, 0, 0, 0, 270, 272, 271, 273, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	614, 0, 0, 0, 0, 280, 281, 1153, 282, 283,
	284, 285, 286, 287, 615, 616, 0, 288, 617, 289,
	618, 0, 619, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 620, 621, 622, 0, 297, 298, 623,
	0, 1297, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	1154, 321, 322, 323, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 327, 328, 0, 329, 624, 625,
	2032, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 626, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 627, 628,
	360, 0, 267, 0, 0, 0, 0, 0, 361, 362,
	363, 629, 0, 0, 0, 364, 0, 365, 0, 0,
	1155, 366, 367, 630, 631, 368, 369, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 632, 0, 633, 378,
	0, 379, 380, 381, 382, 383, 634, 635, 636, 460,
	1157, 384, 385, 0, 386, 387, 388, 389, 0, 0,
	0, 0, 390, 391, 392, 394, 0, 1156, 393, 637,
	638, 0, 639, 0, 395, 396, 1158, 640, 1159, 397,
	398, 399, 1160, 400, 0, 0, 0, 401, 402, 403,
	404, 405, 406, 0, 407, 409, 408, 0, 410, 641,
	1161, 411, 412, 1162, 0, 413, 0, 0, 0, 414,
	415, 418, 0, 0, 416, 417, 419, 420, 0, 421,
	422, 424, 427, 423, 425, 426, 428, 441, 429, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	443, 0, 442, 1163, 444, 445, 446, 451, 453, 454,
	449, 450, 452, 455, 456, 448, 1164, 447, 0, 0,
	1165, 457, 458, 0, 642, 459, 643, 461, 462, 0,
	0, 463, 0, 0, 0, 465, 466, 467, 0, 0,
	468, 469, 644, 1166, 470, 1167, 645, 471, 472, 464,
	473, 474, 475, 476, 477, 478, 479, 480, 0, 481,
	482, 646, 483, 484, 485, 647, 486, 487, 488, 648,
	489, 649, 490, 491, 0, 492, 493, 0, 494, 495,
	496, 497, 498, 499, 500, 650, 501, 503, 502, 504,
	0, 505, 0, 506, 507, 508, 0, 0, 0, 0,
	509, 0, 511, 512, 513, 514, 510, 515, 516, 517,
	518, 0, 519, 520, 521, 1168, 522, 523, 524, 525,
	651, 526, 0, 527, 528, 534, 535, 529, 530, 536,
	537, 538, 539, 540, 0, 542, 543, 541, 544, 545,
	546, 0, 547, 548, 531, 532, 549, 550, 1169, 551,
	552, 553, 554, 555, 556, 652, 0, 557, 0, 558,
	559, 560, 562, 533, 563, 568, 569, 653, 564, 565,
	566, 567, 654, 571, 572, 0, 573, 574, 0, 570,
	561, 0, 575, 576, 577, 578, 579, 580, 581, 354,
	582, 0, 583, 655, 656, 657, 658, 0, 592, 0,
	584, 585, 586, 659, 587, 660, 0, 588, 589, 590,
	591, 0, 593, 594, 0, 0, 595, 596, 597, 599,
	600, 598, 601, 0, 602, 0, 0, 603, 604, 605,
	661, 662, 663, 0, 607, 606, 608, 664, 1292, 1291,
	0, 0, 0, 609, 610, 665, 611, 612, 613, 0,
	0, 0, 0, 0, 0, 270, 272, 271, 273, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 614, 0, 0, 0, 0, 280, 281, 1153, 282,
	283, 284, 285, 286, 287, 615, 616, 0, 288, 617,
	289, 618, 0, 619, 290, 291, 292, 293, 294, 295,
	0, 0, 0, 296, 620, 621, 622, 0, 297, 298,
	623, 0, 1297, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 1154, 321, 322, 323, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 326, 327, 328, 0, 329, 624,
	625, 0, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 340, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 626, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 627,
	628, 360, 0, 267, 0, 0, 0, 0, 0, 361,
	362, 363, 629, 0, 0, 0, 364, 0, 365, 0,
	0, 1155, 366, 367, 630, 631, 368, 369, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 632, 0, 633,
	378, 0, 379, 380, 381, 382, 383, 634, 635, 636,
	460, 1157, 384, 385, 0, 386, 387, 388, 389, 0,
	0, 0, 0, 390, 391, 392, 394, 0, 1156, 393,
	637, 638, 0, 639, 0, 395, 396, 1158, 640, 1159,
	397, 398, 399, 1160, 400, 0, 0, 0, 401, 402,
	403, 404, 405, 406, 0, 407, 409, 408, 0, 410,
	641, 1161, 411, 412, 1162, 0, 413, 0, 0, 0,
	414, 415, 418, 0, 0, 416, 417, 419, 420, 0,
	421, 422, 424, 427, 423, 425, 426, 428, 441, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 443, 0, 442, 1163, 444, 445, 446, 451, 453,
	454, 449, 450, 452, 455, 456, 448, 1164, 447, 0,
	0, 1165, 457, 458, 0, 642, 459, 643, 461, 462,
	0, 0, 463, 0, 0, 0, 465, 466, 467, 0,
	0, 468, 469, 644, 1166, 470, 1167, 645, 471, 472,
	464, 473, 474, 475, 476, 477, 478, 479, 480, 0,
	481, 482, 646, 483, 484, 485, 647, 486, 487, 488,
	648, 489, 649, 490, 491, 0, 492, 493, 0, 494,
	495, 496, 497, 498, 499, 500, 650, 501, 503, 502,
	504, 0, 505, 0, 506, 507, 508, 0, 0, 0,
	0, 509, 0, 511, 512, 513, 514, 510, 515, 516,
	517, 518, 0, 519, 520, 521, 1168, 522, 523, 524,
	525, 651, 526, 0, 527, 528, 534, 535, 529, 530,
	536, 537, 538, 539, 540, 0, 542, 543, 541, 544,
	545, 546, 0, 547, 548, 531, 532, 549, 550, 1169,
	551, 552, 553, 554, 555, 556, 652, 0, 557, 0,
	558, 559, 560, 562, 533, 563, 568, 569, 653, 564,
	565, 566, 567, 654, 571, 572, 0, 573, 574, 0,
	570, 561, 0, 575, 576, 577, 578, 579, 580, 581,
	354, 582, 0, 583, 655, 656, 657, 658, 0, 592,
	0, 584, 585, 586, 659, 587, 660, 0, 588, 589,
	590, 591, 0, 593, 594, 0, 0, 595, 596, 597,
	599, 600, 598, 601, 0, 602, 0, 0, 603, 604,
	605, 661, 662, 663, 1292, 607, 606, 608, 664, 0,
	0, 0, 0, 0, 609, 610, 665, 611, 612, 613,
	0, 270, 272, 271, 273, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 614, 0, 0,
	0, 0, 280, 281, 1153, 282, 283, 284, 285, 286,
	287, 615, 616, 0, 288, 617, 289, 618, 0, 619,
	290, 291, 292, 293, 294, 295, 0, 0, 0, 296,
	620, 621, 622, 0, 297, 298, 623, 0, 1297, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 1154, 321, 322,
	323, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	326, 327, 328, 0, 329, 624, 625, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 340, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 626, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 627, 628, 360, 0, 267,
	0, 0, 0, 0, 0, 361, 362, 363, 629, 0,
	0, 0, 364, 0, 365, 0, 0, 1155, 366, 367,
	630, 631, 368, 369, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 632, 0, 633, 378, 0, 379, 380,
	381, 382, 383, 634, 635, 636, 460, 1157, 384, 385,
	0, 386, 387, 388, 389, 0, 0, 0, 0, 390,
	391, 392, 394, 0, 1156, 393, 637, 638, 0, 639,
	0, 395, 396, 1158, 640, 1159, 397, 398, 399, 1160,
	400, 0, 0, 0, 401, 402, 403, 404, 405, 406,
	0, 407, 409, 408, 0, 410, 641, 1161, 411, 412,
	1162, 0, 413, 0, 0, 0, 414, 415, 418, 0,
	0, 416, 417, 419, 420, 0, 421, 422, 424, 427,
	423, 425, 426, 428, 441, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 443, 0, 442,
	1163, 444, 445, 446, 451, 453, 454, 449, 450, 452,
	455, 456, 448, 1164, 447, 0, 0, 1165, 457, 458,
	0, 642, 459, 643, 461, 462, 0, 0, 463, 0,
	0, 0, 465, 466, 467, 0, 0, 468, 469, 644,
	1166, 470, 1167, 645, 471, 472, 464, 473, 474, 475,
	476, 477, 478, 479, 480, 0, 481, 482, 646, 483,
	484, 485, 647, 486, 487, 488, 648, 489, 649, 490,
	491, 0, 492, 493, 0, 494, 495, 496, 497, 498,
	499, 500, 650, 501, 503, 502, 504, 0, 505, 0,
	506, 507, 508, 0, 0, 0, 0, 509, 0, 511,
	512, 513, 514, 510, 515, 516, 517, 518, 0, 519,
	520, 521, 1168, 522, 523, 524, 525, 651, 526, 0,
	527, 528, 534, 535, 529, 530, 536, 537, 538, 539,
	540, 0, 542, 543, 541, 544, 545, 546, 0, 547,
	548, 531, 532, 549, 550, 1169, 551, 552, 553, 554,
	555, 556, 652, 0, 557, 0, 558, 559, 560, 562,
	533, 563, 568, 569, 653, 564, 565, 566, 567, 654,
	571, 572, 0, 573, 574, 0, 570, 561, 0, 575,
	576, 577, 578, 579, 580, 581, 354, 582, 0, 583,
	655, 656, 657, 658, 0, 592, 0, 584, 585, 586,
	659, 587, 660, 0, 588, 589, 590, 591, 0, 593,
	594, 0, 0, 595, 596, 597, 599, 600, 598, 601,
	0, 602, 0, 0, 603, 604, 605, 661, 662, 663,
	264, 607, 606, 608, 664, 0, 0, 0, 0, 0,
	609, 610, 665, 611, 612, 613, 0, 270, 272, 271,
	273, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 614, 0, 0, 0, 0, 280, 281,
	0, 282, 283, 284, 285, 286, 287, 615, 616, 0,
	288, 617, 289, 618, 0, 619, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 620, 621, 622, 2740,
	297, 298, 623, 0, 0, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	2737, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 323, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 326, 327, 328, 0,
	329, 624, 625, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 2744, 348,
	626, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 627, 628, 360, 0, 2943, 0, 0, 0, 0,
	0, 361, 362, 363, 629, 0, 0, 0, 364, 0,
	365, 2743, 0, 0, 366, 367, 630, 631, 368, 369,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 632,
	0, 633, 378, 0, 379, 380, 381, 382, 383, 634,
	635, 636, 460, 0, 384, 385, 0, 386, 387, 388,
	389, 0, 0, 0, 2940, 390, 391, 392, 394, 0,
	0, 393, 637, 638, 0, 639, 0, 395, 2942, 0,
	640, 0, 397, 398, 399, 0, 400, 0, 0, 0,
	401, 402, 403, 404, 405, 406, 0, 407, 409, 408,
	0, 410, 641, 0, 411, 412, 2939, 0, 413, 0,
	0, 0, 414, 415, 418, 0, 0, 416, 417, 419,
	420, 0, 421, 422, 424, 427, 423, 425, 426, 428,
	441, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 443, 0, 442, 0, 444, 445, 446,
	451, 453, 454, 449, 450, 452, 455, 456, 448, 0,
	447, 0, 0, 0, 457, 458, 0, 642, 459, 643,
	461, 462, 0, 0, 463, 0, 0, 0, 465, 466,
	467, 0, 0, 468, 469, 644, 0, 470, 0, 645,
	471, 472, 464, 473, 474, 475, 476, 477, 478, 479,
	480, 0, 481, 482, 646, 483, 484, 485, 647, 486,
	487, 488, 648, 489, 649, 490, 491, 2742, 492, 493,
	0, 494, 495, 496, 497, 498, 499, 500, 650, 501,
	503, 502, 504, 0, 505, 0, 506, 507, 508, 0,
	0, 0, 0, 509, 0, 511, 512, 513, 514, 510,
	515, 516, 517, 518, 0, 519, 520, 521, 0, 522,
	523, 524, 525, 651, 526, 0, 527, 528, 534, 535,
	529, 530, 536, 537, 538, 539, 540, 0, 542, 543,
	541, 544, 545, 546, 0, 547, 548, 531, 532, 549,
	550, 0, 551, 552, 553, 554, 555, 556, 652, 0,
	557, 0, 558, 559, 560, 562, 533, 563, 568, 569,
	653, 564, 565, 566, 567, 654, 571, 572, 0, 573,
	574, 0, 570, 561, 0, 575, 576, 577, 578, 579,
	580, 581, 354, 582, 0, 583, 655, 656, 657, 658,
	0, 592, 0, 584, 585, 586, 659, 587, 660, 0,
	588, 589, 590, 591, 0, 593, 594, 0, 2941, 595,
	596, 597, 599, 600, 598, 601, 0, 602, 0, 0,
	603, 604, 605, 661, 662, 663, 264, 607, 606, 608,
	664, 0, 0, 0, 0, 0, 609, 610, 665, 611,
	612, 613, 0, 270, 272, 271, 273, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 614,
	0, 0, 0, 0, 280, 281, 0, 282, 283, 284,
	285, 286, 287, 615, 616, 0, 288, 617, 289, 618,
	0, 619, 290, 291, 292, 293, 294, 295, 0, 0,
	0, 296, 620, 621, 622, 2740, 297, 298, 623, 0,
	0, 2734, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 2737, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 0,
	321, 322, 323, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 326, 327, 328, 0, 329, 624, 625, 0,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 340, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 2744, 348, 626, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 627, 628, 360,
	0, 0, 0, 0, 0, 0, 0, 361, 362, 363,
	629, 0, 0, 0, 364, 0, 365, 2743, 0, 0,
	366, 367, 630, 631, 368, 369, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 632, 0, 633, 378, 0,
	379, 380, 381, 382, 383, 2733, 635, 636, 460, 0,
	384, 385, 0, 386, 387, 388, 389, 0, 0, 0,
	0, 390, 391, 392, 394, 0, 0, 393, 637, 638,
	0, 639, 0, 395, 396, 0, 640, 0, 397, 398,
	399, 0, 400, 0, 0, 0, 401, 402, 403, 404,
	405, 406, 0, 407, 409, 408, 0, 410, 641, 0,
	411, 412, 0, 0, 413, 0, 0, 0, 414, 415,
	418, 0, 0, 416, 417, 419, 420, 0, 421, 422,
	424, 427, 423, 425, 426, 428, 441, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 443,
	0, 442, 0, 444, 445, 446, 451, 453, 454, 449,
	450, 452, 455, 456, 448, 0, 447, 0, 0, 0,
	457, 458, 0, 642, 459, 643, 461, 462, 0, 0,
	463, 0, 0, 0, 465, 466, 467, 0, 0, 468,
	469, 644, 0, 470, 0, 645, 471, 472, 464, 473,
	474, 475, 476, 477, 478, 479, 480, 0, 481, 482,
	646, 483, 484, 485, 647, 486, 487, 488, 648, 489,
	649, 490, 491, 2742, 492, 493, 0, 494, 495, 496,
	497, 498, 499, 500, 650, 501, 503, 502, 504, 0,
	505, 0, 506, 507, 508, 0, 0, 0, 0, 509,
	0, 511, 512, 513, 514, 510, 515, 516, 517, 518,
	0, 519, 520, 521, 0, 522, 523, 524, 525, 651,
	526, 0, 527, 528, 534, 535, 529, 530, 536, 537,
	538, 539, 540, 0, 542, 543, 541, 544, 545, 546,
	0, 547, 548, 531, 532, 549, 550, 0, 551, 552,
	553, 554, 555, 556, 652, 0, 557, 0, 558, 559,
	560, 562, 533, 563, 568, 569, 653, 564, 565, 566,
	567, 654, 571, 572, 0, 573, 574, 0, 570, 561,
	0, 575, 576, 577, 578, 579, 580, 581, 354, 582,
	0, 583, 655, 656, 657, 658, 0, 592, 0, 584,
	585, 586, 659, 587, 660, 0, 588, 589, 590, 591,
	0, 593, 594, 0, 2741, 595, 596, 597, 599, 600,
	598, 601, 0, 602, 0, 0, 603, 604, 605, 661,
	662, 663, 0, 607, 606, 608, 664, 1687, 0, 264,
	0, 0, 609, 610, 665, 611, 612, 613, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 272, 271, 273,
	274, 275, 276, 277, 1686, 278, 279, 0, 0, 0,
	0, 0, 614, 0, 0, 0, 0, 280, 281, 0,
	282, 283, 284, 285, 286, 287, 615, 616, 0, 288,
	617, 289, 618, 0, 619, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 620, 621, 622, 0, 297,
	298, 623, 0, 0, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 0, 321, 322, 323, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 327, 328, 0, 329,
	624, 625, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 626,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	627, 628, 360, 0, 267, 0, 0, 0, 0, 0,
	361, 362, 363, 629, 0, 0, 0, 364, 0, 365,
	0, 0, 0, 366, 367, 630, 631, 368, 369, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 632, 0,
	633, 378, 0, 379, 380, 381, 382, 383, 634, 635,
	636, 460, 0, 384, 385, 0, 386, 387, 388, 389,
	0, 0, 0, 268, 390, 391, 392, 394, 0, 0,
	393, 637, 638, 0, 639, 0, 395, 396, 0, 640,
	0, 397, 398, 399, 0, 400, 0, 0, 0, 401,
	402, 403, 404, 405, 406, 0, 407, 409, 408, 0,
	410, 641, 0, 411, 412, 0, 0, 413, 0, 0,
	0, 414, 415, 418, 0, 0, 416, 417, 419, 420,
	0, 421, 422, 424, 427, 423, 425, 426, 428, 441,
	429, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 443, 0, 442, 0, 444, 445, 446, 451,
	453, 454, 449, 450, 452, 455, 456, 448, 0, 447,
	0, 269, 0, 457, 458, 0, 642, 459, 643, 461,
	462, 0, 0, 463, 0, 0, 0, 465, 466, 467,
	0, 0, 468, 469, 644, 0, 470, 0, 645, 471,
	472, 464, 473, 474, 475, 476, 477, 478, 479, 480,
	0, 481, 482, 646, 483, 484, 485, 647, 486, 487,
	488, 648, 489, 649, 490, 491, 0, 492, 493, 0,
	494, 495, 496, 497, 498, 499, 500, 650, 501, 503,
	502, 504, 0, 505, 0, 506, 507, 508, 0, 0,
	0, 0, 509, 0, 511, 512, 513, 514, 510, 515,
	516, 517, 518, 0, 519, 520, 521, 0, 522, 523,
	524, 525, 651, 526, 0, 527, 528, 534, 535, 529,
	530, 536, 537, 538, 539, 540, 0, 1690, 543, 541,
	544, 545, 546, 0, 547, 548, 531, 532, 549, 550,
	0, 551, 552, 553, 554, 555, 556, 652, 0, 557,
	0, 558, 559, 560, 562, 533, 563, 568, 569, 653,
	564, 565, 566, 567, 654, 571, 572, 0, 573, 574,
	0, 570, 561, 1688, 575, 576, 577, 578, 579, 580,
	581, 354, 582, 0, 583, 655, 656, 657, 658, 0,
	592, 0, 584, 585, 586, 659, 587, 660, 0, 588,
	589, 590, 591, 0, 593, 594, 0, 0, 595, 596,
	597, 599, 600, 598, 601, 0, 602, 0, 0, 603,
	604, 605, 661, 662, 663, 0, 1689, 606, 608, 664,
	1439, 0, 264, 0, 0, 609, 610, 665, 611, 612,
	613, 0, 0, 0, 0, 0, 0, 0, 0, 270,
	272, 271, 273, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 614, 0, 0, 0, 0,
	280, 281, 0, 282, 283, 284, 285, 286, 287, 615,
	616, 0, 288, 617, 289, 618, 0, 619, 290, 291,
	292, 293, 294, 295, 0, 0, 0, 296, 620, 621,
	622, 0, 297, 298, 623, 0, 0, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 0, 321, 322, 323, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 326, 327,
	328, 0, 329, 624, 625, 0, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	340, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 626, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 627, 628, 360, 0, 267, 0, 0,
	0, 0, 0, 361, 362, 363, 629, 0, 0, 0,
	364, 0, 365, 0, 0, 0, 366, 367, 630, 631,
	368, 369, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 632, 0, 633, 378, 0, 379, 380, 381, 382,
	383, 1441, 635, 636, 460, 0, 384, 385, 0, 386,
	387, 388, 389, 0, 0, 0, 268, 390, 391, 392,
	394, 0, 0, 393, 637, 638, 0, 639, 0, 395,
	396, 0, 640, 0, 397, 398, 399, 0, 400, 0,
	0, 0, 401, 402, 403, 404, 405, 406, 0, 407,
	409, 408, 0, 410, 641, 0, 411, 412, 0, 0,
	413, 0, 0, 0, 414, 415, 418, 0, 0, 416,
	417, 419, 420, 0, 421, 422, 424, 427, 423, 425,
	426, 428, 441, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 443, 0, 442, 0, 444,
	445, 446, 451, 453, 454, 449, 450, 452, 455, 456,
	448, 0, 447, 0, 269, 0, 457, 458, 0, 642,
	459, 643, 461, 462, 0, 0, 463, 0, 0, 1203,
	465, 466, 467, 0, 0, 468, 469, 644, 0, 470,
	0, 645, 471, 472, 464, 473, 474, 475, 476, 477,
	478, 479, 480, 0, 481, 482, 646, 483, 484, 485,
	647, 486, 487, 488, 648, 489, 649, 490, 491, 0,
	492, 493, 0, 494, 495, 496, 497, 498, 499, 500,
	650, 501, 503, 502, 504, 0, 505, 0, 506, 507,
	508, 0, 0, 0, 0, 509, 0, 511, 512, 513,
	514, 510, 515, 516, 517, 518, 0, 519, 520, 521,
	0, 522, 523, 524, 525, 651, 526, 0, 527, 528,
	534, 535, 529, 530, 536, 537, 538, 539, 540, 0,
	542, 543, 541, 544, 545, 546, 0, 547, 548, 531,
	532, 549, 550, 0, 551, 552, 553, 554, 555, 556,
	652, 0, 557, 0, 558, 559, 560, 562, 533, 563,
	568, 569, 653, 564, 565, 566, 567, 654, 571, 572,
	0, 573, 574, 0, 570, 561, 0, 575, 576, 577,
	578, 579, 580, 581, 354, 582, 0, 583, 655, 656,
	657, 658, 0, 592, 0, 584, 585, 586, 659, 587,
	660, 0, 588, 589, 590, 591, 0, 593, 594, 0,
	0, 595, 596, 597, 599, 600, 598, 601, 0, 602,
	0, 0, 603, 604, 605, 661, 662, 663, 0, 607,
	606, 608, 664, 1436, 0, 264, 0, 0, 609, 610,
	665, 611, 612, 613, 0, 0, 0, 0, 0, 0,
	0, 0, 270, 272, 271, 273, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 614, 0,
	0, 0, 0, 280, 281, 0, 282, 283, 284, 285,
	286, 287, 615, 616, 0, 288, 617, 289, 618, 0,
	619, 290, 291, 292, 293, 294, 295, 0, 0, 0,
	296, 620, 621, 622, 0, 297, 298, 623, 0, 0,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 323, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 327, 328, 0, 329, 624, 625, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 626, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 627, 628, 360, 0,
	267, 0, 0, 0, 0, 0, 361, 362, 363, 629,
	0, 0, 0, 364, 0, 365, 0, 0, 0, 366,
	367, 630, 631, 368, 369, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 632, 0, 633, 378, 0, 379,
	380, 381, 382, 383, 1438, 635, 636, 460, 0, 384,
	385, 0, 386, 387, 388, 389, 0, 0, 0, 268,
	390, 391, 392, 394, 0, 0, 393, 637, 638, 0,
	639, 0, 395, 396, 0, 640, 0, 397, 398, 399,
	0, 400, 0, 0, 0, 401, 402, 403, 404, 405,
	406, 0, 407, 409, 408, 0, 410, 641, 0, 411,
	412, 0, 0, 413, 0, 0, 0, 414, 415, 418,
	0, 0, 416, 417, 419, 420, 0, 421, 422, 424,
	427, 423, 425, 426, 428, 441, 429, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 443, 0,
	442, 0, 444, 445, 446, 451, 453, 454, 449, 450,
	452, 455, 456, 448, 0, 447, 0, 269, 0, 457,
	458, 0, 642, 459, 643, 461, 462, 0, 0, 463,
	0, 0, 1203, 465, 466, 467, 0, 0, 468, 469,
	644, 0, 470, 0, 645, 471, 472, 464, 473, 474,
	475, 476, 477, 478, 479, 480, 0, 481, 482, 646,
	483, 484, 485, 647, 486, 487, 488, 648, 489, 649,
	490, 491, 0, 492, 493, 0, 494, 495, 496, 497,
	498, 499, 500, 650, 501, 503, 502, 504, 0, 505,
	0, 506, 507, 508, 0, 0, 0, 0, 509, 0,
	511, 512, 513, 514, 510, 515, 516, 517, 518, 0,
	519, 520, 521, 0, 522, 523, 524, 525, 651, 526,
	0, 527, 528, 534, 535, 529, 530, 536, 537, 538,
	539, 540, 0, 542, 543, 541, 544, 545, 546, 0,
	547, 548, 531, 532, 549, 550, 0, 551, 552, 553,
	554, 555, 556, 652, 0, 557, 0, 558, 559, 560,
	562, 533, 563, 568, 569, 653, 564, 565, 566, 567,
	654, 571, 572, 0, 573, 574, 0, 570, 561, 0,
	575, 576, 577, 578, 579, 580, 581, 354, 582, 0,
	583, 655, 656, 657, 658, 0, 592, 0, 584, 585,
	586, 659, 587, 660, 0, 588, 589, 590, 591, 0,
	593, 594, 0, 0, 595, 596, 597, 599, 600, 598,
	601, 0, 602, 0, 0, 603, 604, 605, 661, 662,
	663, 0, 607, 606, 608, 664, 1343, 0, 264, 0,
	0, 609, 610, 665, 611, 612, 613, 0, 0, 0,
	0, 0, 0, 0, 0, 270, 272, 271, 273, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 614, 0, 0, 0, 0, 280, 281, 0, 282,
	283, 284, 285, 286, 287, 615, 616, 0, 288, 617,
	289, 618, 0, 619, 290, 291, 292, 293, 294, 295,
	0, 0, 0, 296, 620, 621, 622, 0, 297, 298,
	623, 0, 0, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 0, 321, 322, 323, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 326, 327, 328, 0, 329, 624,
	625, 0, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 340, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 626, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 627,
	628, 360, 0, 267, 0, 0, 0, 0, 0, 361,
	362, 363, 629, 0, 0, 0, 364, 0, 365, 0,
	0, 0, 366, 367, 630, 631, 368, 369, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 632, 0, 633,
	378, 0, 379, 380, 381, 382, 383, 1345, 635, 636,
	460, 0, 384, 385, 0, 386, 387, 388, 389, 0,
	0, 0, 268, 390, 391, 392, 394, 0, 0, 393,
	637, 638, 0, 639, 0, 395, 396, 0, 640, 0,
	397, 398, 399, 0, 400, 0, 0, 0, 401, 402,
	403, 404, 405, 406, 0, 407, 409, 408, 0, 410,
	641, 0, 411, 412, 0, 0, 413, 0, 0, 0,
	414, 415, 418, 0, 0, 416, 417, 419, 420, 0,
	421, 422, 424, 427, 423, 425, 426, 428, 441, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 443, 0, 442, 0, 444, 445, 446, 451, 453,
	454, 449, 450, 452, 455, 456, 448, 0, 447, 0,
	269, 0, 457, 458, 0, 642, 459, 643, 461, 462,
	0, 0, 463, 0, 0, 1203, 465, 466, 467, 0,
	0, 468, 469, 644, 0, 470, 0, 645, 471, 472,
	464, 473, 474, 475, 476, 477, 478, 479, 480, 0,
	481, 482, 646, 483, 484, 485, 647, 486, 487, 488,
	648, 489, 649, 490, 491, 0, 492, 493, 0, 494,
	495, 496, 497, 498, 499, 500, 650, 501, 503, 502,
	504, 0, 505, 0, 506, 507, 508, 0, 0, 0,
	0, 509, 0, 511, 512, 513, 514, 510, 515, 516,
	517, 518, 0, 519, 520, 521, 0, 522, 523, 524,
	525, 651, 526, 0, 527, 528, 534, 535, 529, 530,
	536, 537, 538, 539, 540, 0, 542, 543, 541, 544,
	545, 546, 0, 547, 548, 531, 532, 549, 550, 0,
	551, 552, 553, 554, 555, 556, 652, 0, 557, 0,
	558, 559, 560, 562, 533, 563, 568, 569, 653, 564,
	565, 566, 567, 654, 571, 572, 0, 573, 574, 0,
	570, 561, 0, 575, 576, 577, 578, 579, 580, 581,
	354, 582, 0, 583, 655, 656, 657, 658, 0, 592,
	0, 584, 585, 586, 659, 587, 660, 0, 588, 589,
	590, 591, 0, 593, 594, 0, 0, 595, 596, 597,
	599, 600, 598, 601, 0, 602, 0, 0, 603, 604,
	605, 661, 662, 663, 0, 607, 606, 608, 664, 697,
	0, 264, 0, 0, 609, 610, 665, 611, 612, 613,
	0, 0, 0, 0, 0, 0, 0, 0, 270, 272,
	271, 273, 696, 275, 276, 277, 686, 278, 279, 0,
	0, 0, 0, 0, 614, 0, 0, 0, 0, 280,
	281, 0, 282, 283, 284, 285, 286, 287, 615, 616,
	0, 288, 617, 289, 618, 0, 619, 290, 291, 292,
	293, 294, 295, 0, 0, 0, 296, 620, 621, 622,
	0, 297, 298, 623, 0, 0, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	689, 318, 319, 320, 0, 321, 322, 323, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 327, 328,
	0, 329, 624, 625, 0, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 340,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 626, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 627, 628, 360, 0, 0, 0, 0, 0,
	0, 0, 361, 362, 363, 629, 0, 0, 0, 364,
	0, 365, 0, 0, 0, 366, 367, 630, 631, 368,
	369, 370, 371, 372, 373, 374, 375, 376, 690, 377,
	632, 0, 633, 378, 0, 379, 380, 381, 382, 383,
	634, 635, 636, 460, 0, 384, 385, 0, 386, 387,
	388, 389, 0, 0, 0, 0, 390, 391, 392, 394,
	0, 0, 393, 637, 638, 0, 639, 0, 395, 396,
	0, 640, 0, 397, 398, 399, 0, 400, 0, 0,
	0, 401, 402, 403, 404, 405, 406, 0, 407, 409,
	408, 0, 410, 641, 0, 411, 412, 0, 0, 413,
	0, 0, 0, 414, 415, 418, 0, 0, 416, 417,
	419, 420, 0, 421, 422, 424, 427, 423, 425, 426,
	428, 441, 429, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 443, 0, 442, 0, 444, 445,
	446, 451, 453, 454, 449, 450, 452, 455, 456, 448,
	0, 447, 0, 0, 0, 457, 458, 0, 642, 459,
	643, 461, 462, 0, 0, 463, 0, 0, 0, 465,
	466, 467, 0, 0, 468, 469, 644, 0, 470, 0,
	645, 471, 472, 464, 473, 474, 475, 476, 477, 478,
	479, 480, 0, 481, 482, 646, 483, 484, 485, 647,
	486, 487, 488, 648, 489, 649, 490, 491, 0, 492,
	493, 0, 494, 495, 496, 497, 498, 499, 500, 650,
	501, 503, 502, 504, 0, 505, 0, 506, 507, 508,
	0, 0, 0, 0, 509, 0, 511, 512, 513, 514,
	510, 515, 516, 517, 518, 0, 519, 520, 521, 0,
	522, 523, 524, 525, 651, 526, 0, 527, 528, 534,
	535, 529, 530, 536, 537, 538, 539, 540, 691, 542,
	543, 541, 544, 545, 546, 0, 547, 548, 531, 532,
	549, 550, 0, 551, 552, 553, 554, 555, 556, 652,
	0, 557, 0, 558, 559, 560, 562, 533, 563, 568,
	569, 653, 564, 565, 566, 567, 654, 571, 572, 0,
	573, 574, 0, 570, 561, 0, 575, 576, 577, 578,
	579, 580, 581, 354, 582, 0, 583, 655, 656, 657,
	658, 0, 592, 0, 584, 585, 586, 659, 587, 660,
	0, 588, 589, 590, 591, 0, 593, 594, 0, 0,
	595, 596, 597, 599, 600, 598, 601, 0, 602, 0,
	0, 603, 604, 605, 661, 662, 663, 0, 607, 606,
	608, 664, 685, 0, 264, 0, 0, 609, 610, 665,
	611, 612, 613, 0, 0, 0, 0, 0, 0, 0,
	0, 270, 272, 271, 273, 274, 275, 276, 277, 686,
	278, 279, 0, 0, 0, 0, 0, 614, 0, 0,
	0, 0, 280, 281, 0, 282, 283, 284, 285, 286,
	287, 615, 616, 0, 288, 617, 289, 618, 0, 619,
	290, 291, 292, 293, 294, 295, 0, 0, 0, 296,
	620, 621, 622, 0, 297, 298, 623, 0, 0, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 689, 318, 319, 320, 0, 321, 322,
	323, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	326, 327, 328, 0, 329, 624, 625, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 340, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 626, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 627, 628, 360, 0, 0,
	0, 0, 0, 0, 0, 361, 362, 363, 629, 0,
	0, 0, 364, 0, 365, 0, 0, 0, 366, 367,
	630, 631, 368, 369, 370, 371, 372, 373, 374, 375,
	376, 690, 377, 632, 0, 633, 378, 0, 379, 380,
	381, 382, 383, 634, 635, 636, 460, 0, 384, 385,
	0, 386, 387, 388, 389, 0, 0, 0, 0, 390,
	391, 392, 394, 0, 0, 393, 637, 638, 0, 639,
	0, 395, 396, 0, 640, 0, 397, 398, 399, 0,
	400, 0, 0, 0, 401, 402, 403, 404, 405, 406,
	0, 407, 409, 408, 0, 410, 641, 0, 411, 412,
	0, 0, 413, 0, 0, 0, 414, 415, 418, 0,
	0, 416, 417, 419, 420, 0, 421, 422, 424, 427,
	423, 425, 426, 428, 441, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 443, 0, 442,
	0, 444, 445, 446, 451, 453, 454, 449, 450, 452,
	455, 456, 448, 0, 447, 0, 0, 0, 457, 458,
	0, 642, 459, 643, 461, 462, 0, 0, 463, 0,
	0, 0, 465, 466, 467, 0, 0, 468, 469, 644,
	0, 470, 0, 645, 471, 472, 464, 473, 474, 475,
	476, 477, 478, 479, 480, 0, 481, 482, 646, 483,
	484, 485, 647, 486, 487, 488, 648, 489, 649, 490,
	491, 0, 492, 493, 0, 494, 495, 496, 497, 498,
	499, 500, 650, 501, 503, 502, 504, 0, 505, 0,
	506, 507, 508, 0, 0, 0, 0, 509, 0, 511,
	512, 513, 514, 510, 515, 516, 517, 518, 0, 519,
	520, 521, 0, 522, 523, 524, 525, 651, 526, 0,
	527, 528, 534, 535, 529, 530, 536, 537, 538, 539,
	540, 691, 542, 543, 541, 544, 545, 546, 0, 547,
	548, 531, 532, 549, 550, 0, 551, 552, 553, 554,
	555, 556, 652, 0, 557, 0, 558, 559, 560, 562,
	533, 563, 568, 569, 653, 564, 565, 566, 567, 654,
	571, 572, 0, 573, 574, 0, 570, 561, 0, 575,
	576, 577, 578, 579, 580, 581, 354, 582, 0, 583,
	655, 656, 657, 658, 0, 592, 0, 584, 585, 586,
	659, 587, 660, 0, 588, 589, 590, 591, 0, 593,
	594, 0, 0, 595, 596, 597, 599, 600, 598, 601,
	0, 602, 0, 0, 603, 604, 605, 661, 662, 663,
	264, 607, 606, 608, 664, 0, 0, 0, 0, 0,
	609, 610, 665, 611, 612, 613, 0, 270, 272, 271,
	273, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 614, 0, 0, 0, 0, 280, 281,
	0, 282, 283, 284, 285, 286, 287, 615, 616, 0,
	288, 617, 289, 618, 0, 619, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 620, 621, 622, 0,
	297, 298, 623, 0, 0, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 323, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 326, 327, 328, 0,
	329, 624, 625, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	626, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 627, 628, 360, 0, 267, 0, 0, 0, 0,
	0, 361, 362, 363, 629, 0, 0, 0, 364, 0,
	365, 0, 0, 0, 366, 367, 630, 631, 368, 369,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 632,
	0, 633, 378, 0, 379, 380, 381, 382, 383, 634,
	635, 636, 460, 0, 384, 385, 0, 386, 387, 388,
	389, 0, 0, 0, 268, 390, 391, 392, 394, 0,
	0, 393, 637, 638, 0, 639, 0, 395, 396, 0,
	640, 0, 397, 398, 399, 0, 400, 0, 0, 0,
	401, 402, 403, 404, 405, 406, 0, 407, 409, 408,
	0, 410, 641, 0, 411, 412, 0, 0, 413, 0,
	0, 0, 414, 415, 418, 0, 0, 416, 417, 419,
	420, 0, 421, 422, 424, 427, 423, 425, 426, 428,
	441, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 443, 0, 442, 0, 444, 445, 446,
	451, 453, 454, 449, 450, 452, 455, 456, 448, 0,
	447, 0, 269, 0, 457, 458, 0, 642, 459, 643,
	461, 462, 0, 0, 463, 0, 0, 1203, 465, 466,
	467, 0, 0, 468, 469, 644, 0, 470, 0, 645,
	471, 472, 464, 473, 474, 475, 476, 477, 478, 479,
	480, 0, 481, 482, 646, 483, 484, 485, 647, 486,
	487, 488, 648, 489, 649, 490, 491, 0, 492, 493,
	0, 494, 495, 496, 497, 498, 499, 500, 650, 501,
	503, 502, 504, 0, 505, 0, 506, 507, 508, 0,
	0, 0, 0, 509, 0, 511, 512, 513, 514, 510,
	515, 516, 517, 518, 0, 519, 520, 521, 0, 522,
	523, 524, 525, 651, 526, 0, 527, 528, 534, 535,
	529, 530, 536, 537, 538, 539, 540, 0, 542, 543,
	541, 544, 545, 546, 0, 547, 548, 531, 532, 549,
	550, 0, 551, 552, 553, 554, 555, 556, 652, 0,
	557, 0, 558, 559, 560, 562, 533, 563, 568, 569,
	653, 564, 565, 566, 567, 654, 571, 572, 0, 573,
	574, 0, 570, 561, 0, 575, 576, 577, 578, 579,
	580, 581, 354, 582, 0, 583, 655, 656, 657, 658,
	0, 592, 0, 584, 585, 586, 659, 587, 660, 0,
	588, 589, 590, 591, 0, 593, 594, 0, 0, 595,
	596, 597, 599, 600, 598, 601, 0, 602, 0, 0,
	603, 604, 605, 661, 662, 663, 264, 607, 606, 608,
	664, 0, 0, 0, 0, 0, 609, 610, 665, 611,
	612, 613, 0, 270, 272, 271, 273, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 614,
	0, 0, 0, 0, 280, 281, 0, 282, 283, 284,
	285, 286, 287, 615, 616, 0, 288, 617, 289, 618,
	0, 619, 290, 291, 292, 293, 294, 295, 0, 0,
	0, 296, 620, 621, 622, 0, 297, 298, 623, 0,
	0, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 0,
	321, 322, 323, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 326, 327, 328, 0, 329, 624, 625, 0,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 340, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 626, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 627, 628, 360,
	0, 267, 0, 0, 0, 0, 0, 361, 362, 363,
	629, 0, 0, 0, 364, 0, 365, 0, 0, 0,
	366, 367, 630, 631, 368, 369, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 632, 0, 633, 378, 0,
	379, 380, 381, 382, 383, 634, 635, 636, 460, 0,
	384, 385, 0, 386, 387, 388, 389, 0, 0, 0,
	268, 390, 391, 392, 394, 0, 0, 393, 637, 638,
	0, 639, 0, 395, 396, 0, 640, 0, 397, 398,
	399, 0, 400, 0, 0, 0, 401, 402, 403, 404,
	405, 406, 0, 407, 409, 408, 0, 410, 641, 0,
	411, 412, 0, 0, 413, 0, 0, 0, 414, 415,
	418, 0, 0, 416, 417, 419, 420, 0, 421, 422,
	424, 427, 423, 425, 426, 428, 441, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 443,
	0, 442, 0, 444, 445, 446, 451, 453, 454, 449,
	450, 452, 455, 456, 448, 3356, 447, 0, 269, 0,
	457, 458, 0, 642, 459, 643, 461, 462, 0, 0,
	463, 0, 0, 0, 465, 466, 467, 0, 0, 468,
	469, 644, 0, 470, 0, 645, 471, 472, 464, 473,
	474, 475, 476, 477, 478, 479, 480, 0, 481, 482,
	646, 483, 484, 485, 647, 486, 487, 488, 648, 489,
	649, 490, 491, 0, 492, 493, 0, 494, 495, 496,
	497, 498, 499, 500, 650, 501, 503, 502, 504, 0,
	505, 0, 506, 507, 508, 0, 0, 0, 0, 509,
	0, 511, 512, 513, 514, 510, 515, 516, 517, 518,
	0, 519, 520, 521, 0, 522, 523, 524, 525, 651,
	526, 0, 527, 528, 534, 535, 529, 530, 536, 537,
	538, 539, 540, 0, 542, 543, 541, 544, 545, 546,
	0, 547, 548, 531, 532, 549, 550, 0, 551, 552,
	553, 554, 555, 556, 652, 0, 557, 0, 558, 559,
	560, 562, 533, 563, 568, 569, 653, 564, 565, 566,
	567, 654, 571, 572, 0, 573, 574, 0, 570, 561,
	0, 575, 576, 577, 578, 579, 580, 581, 354, 582,
	0, 583, 655, 656, 657, 658, 0, 592, 0, 584,
	585, 586, 659, 587, 660, 0, 588, 589, 590, 591,
	0, 593, 594, 0, 0, 595, 596, 597, 599, 600,
	598, 601, 0, 602, 0, 0, 603, 604, 605, 661,
	662, 663, 0, 607, 606, 608, 664, 2888, 0, 264,
	0, 0, 609, 610, 665, 611, 612, 613, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 272, 271, 273,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 614, 0, 0, 0, 0, 280, 281, 0,
	282, 283, 284, 285, 286, 287, 615, 616, 0, 288,
	617, 289, 618, 0, 619, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 620, 621, 622, 0, 297,
	298, 623, 0, 0, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 0, 321, 322, 323, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 327, 328, 0, 329,
	624, 625, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 626,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	627, 628, 360, 0, 267, 0, 0, 0, 0, 0,
	361, 362, 363, 629, 0, 0, 0, 364, 0, 365,
	0, 0, 0, 366, 367, 630, 631, 368, 369, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 632, 0,
	633, 378, 0, 379, 380, 381, 382, 383, 2887, 635,
	636, 460, 0, 384, 385, 0, 386, 387, 388, 389,
	0, 0, 0, 268, 390, 391, 392, 394, 0, 0,
	393, 637, 638, 0, 639, 0, 395, 396, 0, 640,
	0, 397, 398, 399, 0, 400, 0, 0, 0, 401,
	402, 403, 404, 405, 406, 0, 407, 409, 408, 0,
	410, 641, 0, 411, 412, 0, 0, 413, 0, 0,
	0, 414, 415, 418, 0, 0, 416, 417, 419, 420,
	0, 421, 422, 424, 427, 423, 425, 426, 428, 441,
	429, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 443, 0, 442, 0, 444, 445, 446, 451,
	453, 454, 449, 450, 452, 455, 456, 448, 0, 447,
	0, 269, 0, 457, 458, 0, 642, 459, 643, 461,
	462, 0, 0, 463, 0, 0, 0, 465, 466, 467,
	0, 0, 468, 469, 644, 0, 470, 0, 645, 471,
	472, 464, 473, 474, 475, 476, 477, 478, 479, 480,
	0, 481, 482, 646, 483, 484, 485, 647, 486, 487,
	488, 648, 489, 649, 490, 491, 0, 492, 493, 0,
	494, 495, 496, 497, 498, 499, 500, 650, 501, 503,
	502, 504, 0, 505, 0, 506, 507, 508, 0, 0,
	0, 0, 509, 0, 511, 512, 513, 514, 510, 515,
	516, 517, 518, 0, 519, 520, 521, 0, 522, 523,
	524, 525, 651, 526, 0, 527, 528, 534, 535, 529,
	530, 536, 537, 538, 539, 540, 0, 542, 543, 541,
	544, 545, 546, 0, 547, 548, 531, 532, 549, 550,
	0, 551, 552, 553, 554, 555, 556, 652, 0, 557,
	0, 558, 559, 560, 562, 533, 563, 568, 569, 653,
	564, 565, 566, 567, 654, 571, 572, 0, 573, 574,
	0, 570, 561, 0, 575, 576, 577, 578, 579, 580,
	581, 354, 582, 0, 583, 655, 656, 657, 658, 0,
	592, 0, 584, 585, 586, 659, 587, 660, 0, 588,
	589, 590, 591, 0, 593, 594, 0, 0, 595, 596,
	597, 599, 600, 598, 601, 0, 602, 0, 0, 603,
	604, 605, 661, 662, 663, 0, 607, 606, 608, 664,
	2248, 0, 264, 0, 0, 609, 610, 665, 611, 612,
	613, 0, 0, 0, 0, 0, 0, 0, 0, 270,
	272, 271, 273, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 614, 0, 0, 0, 0,
	280, 281, 0, 282, 283, 284, 285, 286, 287, 615,
	616, 0, 288, 617, 289, 618, 0, 619, 290, 291,
	292, 293, 294, 295, 0, 0, 0, 296, 620, 621,
	622, 0, 297, 298, 623, 0, 0, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 0, 321, 322, 323, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 326, 327,
	328, 0, 329, 624, 625, 0, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	340, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 626, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 627, 628, 360, 0, 267, 0, 0,
	0, 0, 0, 361, 362, 363, 629, 0, 0, 0,
	364, 0, 365, 0, 0, 0, 366, 367, 630, 631,
	368, 369, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 632, 0, 633, 378, 0, 379, 380, 381, 382,
	383, 634, 635, 636, 460, 0, 384, 385, 0, 386,
	387, 388, 389, 0, 0, 0, 268, 390, 391, 392,
	394, 0, 0, 393, 637, 638, 0, 639, 0, 395,
	396, 0, 640, 0, 397, 398, 399, 0, 400, 0,
	0, 0, 401, 402, 403, 404, 405, 406, 0, 407,
	409, 408, 0, 410, 641, 0, 411, 412, 0, 0,
	413, 0, 0, 0, 414, 415, 418, 0, 0, 416,
	417, 419, 420, 0, 421, 422, 424, 427, 423, 425,
	426, 428, 441, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 443, 0, 442, 0, 444,
	445, 446, 451, 453, 454, 449, 450, 452, 455, 456,
	448, 0, 447, 0, 269, 0, 457, 458, 0, 642,
	459, 643, 461, 462, 0, 0, 463, 0, 0, 0,
	465, 466, 467, 0, 0, 468, 469, 644, 0, 470,
	0, 645, 471, 472, 464, 473, 474, 475, 476, 477,
	478, 479, 480, 0, 481, 482, 646, 483, 484, 485,
	647, 486, 487, 488, 648, 489, 649, 490, 491, 0,
	492, 493, 0, 494, 495, 496, 497, 498, 499, 500,
	650, 501, 503, 502, 504, 0, 505, 0, 506, 507,
	508, 0, 0, 0, 0, 509, 0, 511, 512, 513,
	514, 510, 515, 516, 517, 518, 0, 519, 520, 521,
	0, 522, 523, 524, 525, 651, 526, 0, 527, 528,
	534, 535, 529, 530, 536, 537, 538, 539, 540, 0,
	542, 543, 541, 544, 545, 546, 0, 547, 548, 531,
	532, 549, 550, 0, 551, 552, 553, 554, 555, 556,
	652, 0, 557, 0, 558, 559, 560, 562, 533, 563,
	568, 569, 653, 564, 565, 566, 567, 654, 571, 572,
	0, 573, 574, 0, 570, 561, 0, 575, 576, 577,
	578, 579, 580, 581, 354, 582, 0, 583, 655, 656,
	657, 658, 0, 592, 0, 584, 585, 586, 659, 587,
	660, 0, 588, 589, 590, 591, 0, 593, 594, 0,
	0, 595, 596, 597, 599, 600, 598, 601, 0, 602,
	0, 0, 603, 604, 605, 661, 662, 663, 264, 607,
	606, 608, 664, 0, 0, 0, 0, 0, 609, 610,
	665, 611, 612, 613, 0, 270, 272, 271, 273, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 614, 0, 0, 0, 0, 280, 281, 0, 282,
	283, 284, 285, 286, 287, 615, 616, 0, 288, 617,
	289, 618, 0, 619, 290, 291, 292, 293, 294, 295,
	0, 0, 0, 296, 620, 621, 622, 0, 297, 298,
	623, 0, 0, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 0, 321, 322, 323, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 326, 327, 328, 0, 329, 624,
	625, 0, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 340, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 626, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 627,
	628, 360, 0, 267, 0, 0, 0, 0, 0, 361,
	362, 363, 629, 0, 0, 0, 364, 0, 365, 0,
	0, 0, 366, 367, 630, 631, 368, 369, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 632, 0, 633,
	378, 0, 379, 380, 381, 382, 383, 634, 635, 636,
	460, 0, 384, 385, 0, 386, 387, 388, 389, 0,
	0, 0, 268, 390, 391, 392, 394, 0, 0, 393,
	637, 638, 0, 639, 0, 395, 396, 0, 640, 0,
	397, 398, 399, 0, 400, 0, 0, 0, 401, 402,
	403, 404, 405, 406, 0, 407, 409, 408, 0, 410,
	641, 0, 411, 412, 0, 0, 413, 0, 0, 0,
	414, 415, 418, 0, 0, 416, 417, 419, 420, 0,
	421, 422, 424, 427, 423, 425, 426, 428, 441, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 443, 0, 442, 0, 444, 445, 446, 451, 453,
	454, 449, 450, 452, 455, 456, 448, 0, 447, 0,
	269, 0, 457, 458, 0, 642, 459, 643, 461, 462,
	0, 0, 463, 0, 0, 0, 465, 466, 467, 0,
	0, 468, 469, 644, 0, 470, 0, 645, 471, 472,
	464, 473, 474, 475, 476, 477, 478, 479, 480, 0,
	481, 482, 646, 483, 484, 485, 647, 486, 487, 488,
	648, 489, 649, 490, 491, 0, 492, 493, 0, 494,
	495, 496, 497, 498, 499, 500, 650, 501, 503, 502,
	504, 0, 505, 0, 506, 507, 508, 0, 0, 0,
	0, 509, 0, 511, 512, 513, 514, 510, 515, 516,
	517, 518, 0, 519, 520, 521, 0, 522, 523, 524,
	525, 651, 526, 0, 527, 528, 534, 535, 529, 530,
	536, 537, 538, 539, 540, 0, 542, 543, 541, 544,
	545, 546, 0, 547, 548, 531, 532, 549, 550, 0,
	551, 552, 553, 554, 555, 556, 652, 0, 557, 0,
	558, 559, 560, 562, 533, 563, 568, 569, 653, 564,
	565, 566, 567, 654, 571, 572, 0, 573, 574, 0,
	570, 561, 2189, 575, 576, 577, 578, 579, 580, 581,
	354, 582, 0, 583, 655, 656, 657, 658, 0, 592,
	0, 584, 585, 586, 659, 587, 660, 0, 588, 589,
	590, 591, 0, 593, 594, 0, 0, 595, 596, 597,
	599, 600, 598, 601, 0, 602, 0, 0, 603, 604,
	605, 661, 662, 663, 0, 607, 606, 608, 664, 2196,
	0, 264, 0, 0, 609, 610, 665, 611, 612, 613,
	0, 0, 0, 0, 0, 0, 0, 0, 270, 272,
	271, 273, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 614, 0, 0, 0, 0, 280,
	281, 0, 282, 283, 284, 285, 286, 287, 615, 616,
	0, 288, 617, 289, 618, 0, 619, 290, 291, 292,
	293, 294, 295, 0, 0, 0, 296, 620, 621, 622,
	0, 297, 298, 623, 0, 0, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 0, 321, 322, 323, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 327, 328,
	0, 329, 624, 625, 0, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 340,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 626, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 627, 628, 360, 0, 267, 0, 0, 0,
	0, 0, 361, 362, 363, 629, 0, 0, 0, 364,
	0, 365, 0, 0, 0, 366, 367, 630, 631, 368,
	369, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	632, 0, 633, 378, 0, 379, 380, 381, 382, 383,
	2195, 635, 636, 460, 0, 384, 385, 0, 386, 387,
	388, 389, 0, 0, 0, 268, 390, 391, 392, 394,
	0, 0, 393, 637, 638, 0, 639, 0, 395, 396,
	0, 640, 0, 397, 398, 399, 0, 400, 0, 0,
	0, 401, 402, 403, 404, 405, 406, 0, 407, 409,
	408, 0, 410, 641, 0, 411, 412, 0, 0, 413,
	0, 0, 0, 414, 415, 418, 0, 0, 416, 417,
	419, 420, 0, 421, 422, 424, 427, 423, 425, 426,
	428, 441, 429, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 443, 0, 442, 0, 444, 445,
	446, 451, 453, 454, 449, 450, 452, 455, 456, 448,
	0, 447, 0, 269, 0, 457, 458, 0, 642, 459,
	643, 461, 462, 0, 0, 463, 0, 0, 0, 465,
	466, 467, 0, 0, 468, 469, 644, 0, 470, 0,
	645, 471, 472, 464, 473, 474, 475, 476, 477, 478,
	479, 480, 0, 481, 482, 646, 483, 484, 485, 647,
	486, 487, 488, 648, 489, 649, 490, 491, 0, 492,
	493, 0, 494, 495, 496, 497, 498, 499, 500, 650,
	501, 503, 502, 504, 0, 505, 0, 506, 507, 508,
	0, 0, 0, 0, 509, 0, 511, 512, 513, 514,
	510, 515, 516, 517, 518, 0, 519, 520, 521, 0,
	522, 523, 524, 525, 651, 526, 0, 527, 528, 534,
	535, 529, 530, 536, 537, 538, 539, 540, 0, 542,
	543, 541, 544, 545, 546, 0, 547, 548, 531, 532,
	549, 550, 0, 551, 552, 553, 554, 555, 556, 652,
	0, 557, 0, 558, 559, 560, 562, 533, 563, 568,
	569, 653, 564, 565, 566, 567, 654, 571, 572, 0,
	573, 574, 0, 570, 561, 0, 575, 576, 577, 578,
	579, 580, 581, 354, 582, 0, 583, 655, 656, 657,
	658, 0, 592, 0, 584, 585, 586, 659, 587, 660,
	0, 588, 589, 590, 591, 0, 593, 594, 0, 0,
	595, 596, 597, 599, 600, 598, 601, 0, 602, 0,
	0, 603, 604, 605, 661, 662, 663, 0, 607, 606,
	608, 664, 2182, 0, 264, 0, 0, 609, 610, 665,
	611, 612, 613, 0, 0, 0, 0, 0, 0, 0,
	0, 270, 272, 271, 273, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 614, 0, 0,
	0, 0, 280, 281, 0, 282, 283, 284, 285, 286,
	287, 615, 616, 0, 288, 617, 289, 618, 0, 619,
	290, 291, 292, 293, 294, 295, 0, 0, 0, 296,
	620, 621, 622, 0, 297, 298, 623, 0, 0, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 0, 321, 322,
	323, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	326, 327, 328, 0, 329, 624, 625, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 340, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 626, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 627, 628, 360, 0, 267,
	0, 0, 0, 0, 0, 361, 362, 363, 629, 0,
	0, 0, 364, 0, 365, 0, 0, 0, 366, 367,
	630, 631, 368, 369, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 632, 0, 633, 378, 0, 379, 380,
	381, 382, 383, 2184, 635, 636, 460, 0, 384, 385,
	0, 386, 387, 388, 389, 0, 0, 0, 268, 390,
	391, 392, 394, 0, 0, 393, 637, 638, 0, 639,
	0, 395, 396, 0, 640, 0, 397, 398, 399, 0,
	400, 0, 0, 0, 401, 402, 403, 404, 405, 406,
	0, 407, 409, 408, 0, 410, 641, 0, 411, 412,
	0, 0, 413, 0, 0, 0, 414, 415, 418, 0,
	0, 416, 417, 419, 420, 0, 421, 422, 424, 427,
	423, 425, 426, 428, 441, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 443, 0, 442,
	0, 444, 445, 446, 451, 453, 454, 449, 450, 452,
	455, 456, 448, 0, 447, 0, 269, 0, 457, 458,
	0, 642, 459, 643, 461, 462, 0, 0, 463, 0,
	0, 0, 465, 466, 467, 0, 0, 468, 469, 644,
	0, 470, 0, 645, 471, 472, 464, 473, 474, 475,
	476, 477, 478, 479, 480, 0, 481, 482, 646, 483,
	484, 485, 647, 486, 487, 488, 648, 489, 649, 490,
	491, 0, 492, 493, 0, 494, 495, 496, 497, 498,
	499, 500, 650, 501, 503, 502, 504, 0, 505, 0,
	506, 507, 508, 0, 0, 0, 0, 509, 0, 511,
	512, 513, 514, 510, 515, 516, 517, 518, 0, 519,
	520, 521, 0, 522, 523, 524, 525, 651, 526, 0,
	527, 528, 534, 535, 529, 530, 536, 537, 538, 539,
	540, 0, 542, 543, 541, 544, 545, 546, 0, 547,
	548, 531, 532, 549, 550, 0, 551, 552, 553, 554,
	555, 556, 652, 0, 557, 0, 558, 559, 560, 562,
	533, 563, 568, 569, 653, 564, 565, 566, 567, 654,
	571, 572, 0, 573, 574, 0, 570, 561, 0, 575,
	576, 577, 578, 579, 580, 581, 354, 582, 0, 583,
	655, 656, 657, 658, 0, 592, 0, 584, 585, 586,
	659, 587, 660, 0, 588, 589, 590, 591, 0, 593,
	594, 0, 0, 595, 596, 597, 599, 600, 598, 601,
	0, 602, 0, 0, 603, 604, 605, 661, 662, 663,
	264, 607, 606, 608, 664, 0, 0, 0, 0, 0,
	609, 610, 665, 611, 612, 613, 0, 270, 272, 271,
	273, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 614, 0, 0, 0, 0, 280, 281,
	0, 282, 283, 284, 285, 286, 287, 615, 616, 0,
	288, 617, 289, 618, 0, 619, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 620, 621, 622, 0,
	297, 298, 623, 0, 0, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 323, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 326, 327, 328, 0,
	329, 624, 625, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	626, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 627, 628, 360, 0, 267, 0, 0, 0, 0,
	0, 361, 362, 363, 629, 0, 0, 0, 364, 0,
	365, 0, 0, 0, 366, 367, 630, 631, 368, 369,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 632,
	0, 633, 378, 0, 379, 380, 381, 382, 383, 2152,
	635, 636, 460, 0, 384, 385, 0, 386, 387, 388,
	389, 0, 0, 0, 268, 390, 391, 392, 394, 0,
	0, 393, 637, 638, 0, 639, 0, 395, 396, 0,
	640, 0, 397, 398, 399, 0, 400, 0, 0, 0,
	401, 402, 403, 404, 405, 406, 0, 407, 409, 408,
	0, 410, 641, 0, 411, 412, 0, 0, 413, 0,
	0, 0, 414, 415, 418, 0, 0, 416, 417, 419,
	420, 0, 421, 422, 424, 427, 423, 425, 426, 428,
	441, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 443, 0, 442, 0, 444, 445, 446,
	451, 453, 454, 449, 450, 452, 455, 456, 448, 0,
	447, 0, 269, 0, 457, 458, 0, 642, 459, 643,
	461, 462, 0, 0, 463, 0, 0, 1203, 465, 466,
	467, 0, 0, 468, 469, 644, 0, 470, 0, 645,
	471, 472, 464, 473, 474, 475, 476, 477, 478, 479,
	480, 0, 481, 482, 646, 483, 484, 485, 647, 486,
	487, 488, 648, 489, 649, 490, 491, 0, 492, 493,
	0, 494, 495, 496, 497, 498, 499, 500, 650, 501,
	503, 502, 504, 0, 505, 0, 506, 507, 508, 0,
	0, 0, 0, 509, 0, 511, 512, 513, 514, 510,
	515, 516, 517, 518, 0, 519, 520, 521, 0, 522,
	523, 524, 525, 651, 526, 0, 527, 528, 534, 535,
	529, 530, 536, 537, 538, 539, 540, 0, 542, 543,
	541, 544, 545, 546, 0, 547, 548, 531, 532, 549,
	550, 0, 551, 552, 553, 554, 555, 556, 652, 0,
	557, 0, 558, 559, 560, 562, 533, 563, 568, 569,
	653, 564, 565, 566, 567, 654, 571, 572, 0, 573,
	574, 0, 570, 561, 0, 575, 576, 577, 578, 579,
	580, 581, 354, 582, 0, 583, 655, 656, 657, 658,
	0, 592, 0, 584, 585, 586, 659, 587, 660, 0,
	588, 589, 590, 591, 0, 593, 594, 0, 0, 595,
	596, 597, 599, 600, 598, 601, 0, 602, 0, 0,
	603, 604, 605, 661, 662, 663, 0, 607, 606, 608,
	664, 1538, 0, 264, 0, 0, 609, 610, 665, 611,
	612, 613, 0, 0, 0, 0, 0, 0, 0, 0,
	270, 272, 271, 273, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 614, 0, 0, 0,
	0, 280, 281, 0, 282, 283, 284, 285, 286, 287,
	615, 616, 0, 288, 617, 289, 618, 0, 619, 290,
	291, 292, 293, 294, 295, 0, 0, 0, 296, 620,
	621, 622, 0, 297, 298, 623, 0, 0, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 0, 321, 322, 323,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	327, 328, 0, 329, 624, 625, 0, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 340, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 626, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 627, 628, 360, 0, 267, 0,
	0, 0, 0, 0, 361, 362, 363, 629, 0, 0,
	0, 364, 0, 365, 0, 0, 0, 366, 367, 630,
	631, 368, 369, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 632, 0, 633, 378, 0, 379, 380, 381,
	382, 383, 1537, 635, 636, 460, 0, 384, 385, 0,
	386, 387, 388, 389, 0, 0, 0, 268, 390, 391,
	392, 394, 0, 0, 393, 637, 638, 0, 639, 0,
	395, 396, 0, 640, 0, 397, 398, 399, 0, 400,
	0, 0, 0, 401, 402, 403, 404, 405, 406, 0,
	407, 409, 408, 0, 410, 641, 0, 411, 412, 0,
	0, 413, 0, 0, 0, 414, 415, 418, 0, 0,
	416, 417, 419, 420, 0, 421, 422, 424, 427, 423,
	425, 426, 428, 441, 429, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 443, 0, 442, 0,
	444, 445, 446, 451, 453, 454, 449, 450, 452, 455,
	456, 448, 0, 447, 0, 269, 0, 457, 458, 0,
	642, 459, 643, 461, 462, 0, 0, 463, 0, 0,
	0, 465, 466, 467, 0, 0, 468, 469, 644, 0,
	470, 0, 645, 471, 472, 464, 473, 474, 475, 476,
	477, 478, 479, 480, 0, 481, 482, 646, 483, 484,
	485, 647, 486, 487, 488, 648, 489, 649, 490, 491,
	0, 492, 493, 0, 494, 495, 496, 497, 498, 499,
	500, 650, 501, 503, 502, 504, 0, 505, 0, 506,
	507, 508, 0, 0, 0, 0, 509, 0, 511, 512,
	513, 514, 510, 515, 516, 517, 518, 0, 519, 520,
	521, 0, 522, 523, 524, 525, 651, 526, 0, 527,
	528, 534, 535, 529, 530, 536, 537, 538, 539, 540,
	0, 542, 543, 541, 544, 545, 546, 0, 547, 548,
	531, 532, 549, 550, 0, 551, 552, 553, 554, 555,
	556, 652, 0, 557, 0, 558, 559, 560, 562, 533,
	563, 568, 569, 653, 564, 565, 566, 567, 654, 571,
	572, 0, 573, 574, 0, 570, 561, 0, 575, 576,
	577, 578, 579, 580, 581, 354, 582, 0, 583, 655,
	656, 657, 658, 0, 592, 0, 584, 585, 586, 659,
	587, 660, 0, 588, 589, 590, 591, 0, 593, 594,
	0, 0, 595, 596, 597, 599, 600, 598, 601, 0,
	602, 0, 0, 603, 604, 605, 661, 662, 663, 0,
	607, 606, 608, 664, 1456, 0, 264, 0, 0, 609,
	610, 665, 611, 612, 613, 0, 0, 0, 0, 0,
	0, 0, 0, 270, 272, 271, 273, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 614,
	0, 0, 0, 0, 280, 281, 0, 282, 283, 284,
	285, 286, 287, 615, 616, 0, 288, 617, 289, 618,
	0, 619, 290, 291, 292, 293, 294, 295, 0, 0,
	0, 296, 620, 621, 622, 0, 297, 298, 623, 0,
	0, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 0,
	321, 322, 323, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 326, 327, 328, 0, 329, 624, 625, 0,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 340, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 626, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 627, 628, 360,
	0, 267, 0, 0, 0, 0, 0, 361, 362, 363,
	629, 0, 0, 0, 364, 0, 365, 0, 0, 0,
	366, 367, 630, 631, 368, 369, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 632, 0, 633, 378, 0,
	379, 380, 381, 382, 383, 634, 635, 636, 460, 0,
	384, 385, 0, 386, 387, 388, 389, 0, 0, 0,
	268, 390, 391, 392, 394, 0, 0, 393, 637, 638,
	0, 639, 0, 395, 396, 0, 640, 0, 397, 398,
	399, 0, 400, 0, 0, 0, 401, 402, 403, 404,
	405, 406, 0, 407, 409, 408, 0, 410, 641, 0,
	411, 412, 0, 0, 413, 0, 0, 0, 414, 415,
	418, 0, 0, 416, 417, 419, 420, 0, 421, 422,
	424, 427, 423, 425, 426, 428, 441, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 443,
	0, 442, 0, 444, 445, 446, 451, 453, 454, 449,
	450, 452, 455, 456, 448, 0, 447, 0, 269, 0,
	457, 458, 0, 642, 459, 643, 461, 462, 0, 0,
	463, 0, 0, 0, 465, 466, 467, 0, 0, 468,
	469, 644, 0, 470, 0, 645, 471, 472, 464, 473,
	474, 475, 476, 477, 478, 479, 480, 0, 481, 482,
	646, 483, 484, 485, 647, 486, 487, 488, 648, 489,
	649, 490, 491, 0, 492, 493, 0, 494, 495, 496,
	497, 498, 499, 500, 650, 501, 503, 502, 504, 0,
	505, 0, 506, 507, 508, 0, 0, 0, 0, 509,
	0, 511, 512, 513, 514, 510, 515, 516, 517, 518,
	0, 519, 520, 521, 0, 522, 523, 524, 525, 651,
	526, 0, 527, 528, 534, 535, 529, 530, 536, 537,
	538, 539, 540, 0, 542, 543, 541, 544, 545, 546,
	0, 547, 548, 531, 532, 549, 550, 0, 551, 552,
	553, 554, 555, 556, 652, 0, 557, 0, 558, 559,
	560, 562, 533, 563, 568, 569, 653, 564, 565, 566,
	567, 654, 571, 572, 0, 573, 574, 0, 570, 561,
	0, 575, 576, 577, 578, 579, 580, 581, 354, 582,
	0, 583, 655, 656, 657, 658, 0, 592, 0, 584,
	585, 586, 659, 587, 660, 0, 588, 589, 590, 591,
	0, 593, 594, 0, 0, 595, 596, 597, 599, 600,
	598, 601, 0, 602, 0, 0, 603, 604, 605, 661,
	662, 663, 0, 607, 606, 608, 664, 1449, 0, 264,
	0, 0, 609, 610, 665, 611, 612, 613, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 272, 271, 273,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 614, 0, 0, 0, 0, 280, 281, 0,
	282, 283, 284, 285, 286, 287, 615, 616, 0, 288,
	617, 289, 618, 0, 619, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 620, 621, 622, 0, 297,
	298, 623, 0, 0, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 0, 321, 322, 323, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 327, 328, 0, 329,
	624, 625, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 626,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	627, 628, 360, 0, 267, 0, 0, 0, 0, 0,
	361, 362, 363, 629, 0, 0, 0, 364, 0, 365,
	0, 0, 0, 366, 367, 630, 631, 368, 369, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 632, 0,
	633, 378, 0, 379, 380, 381, 382, 383, 1451, 635,
	636, 460, 0, 384, 385, 0, 386, 387, 388, 389,
	0, 0, 0, 268, 390, 391, 392, 394, 0, 0,
	393, 637, 638, 0, 639, 0, 395, 396, 0, 640,
	0, 397, 398, 399, 0, 400, 0, 0, 0, 401,
	402, 403, 404, 405, 406, 0, 407, 409, 408, 0,
	410, 641, 0, 411, 412, 0, 0, 413, 0, 0,
	0, 414, 415, 418, 0, 0, 416, 417, 419, 420,
	0, 421, 422, 424, 427, 423, 425, 426, 428, 441,
	429, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 443, 0, 442, 0, 444, 445, 446, 451,
	453, 454, 449, 450, 452, 455, 456, 448, 0, 447,
	0, 269, 0, 457, 458, 0, 642, 459, 643, 461,
	462, 0, 0, 463, 0, 0, 0, 465, 466, 467,
	0, 0, 468, 469, 644, 0, 470, 0, 645, 471,
	472, 464, 473, 474, 475, 476, 477, 478, 479, 480,
	0, 481, 482, 646, 483, 484, 485, 647, 486, 487,
	488, 648, 489, 649, 490, 491, 0, 492, 493, 0,
	494, 495, 496, 497, 498, 499, 500, 650, 501, 503,
	502, 504, 0, 505, 0, 506, 507, 508, 0, 0,
	0, 0, 509, 0, 511, 512, 513, 514, 510, 515,
	516, 517, 518, 0, 519, 520, 521, 0, 522, 523,
	524, 525, 651, 526, 0, 527, 528, 534, 535, 529,
	530, 536, 537, 538, 539, 540, 0, 542, 543, 541,
	544, 545, 546, 0, 547, 548, 531, 532, 549, 550,
	0, 551, 552, 553, 554, 555, 556, 652, 0, 557,
	0, 558, 559, 560, 562, 533, 563, 568, 569, 653,
	564, 565, 566, 567, 654, 571, 572, 0, 573, 574,
	0, 570, 561, 0, 575, 576, 577, 578, 579, 580,
	581, 354, 582, 0, 583, 655, 656, 657, 658, 0,
	592, 0, 584, 585, 586, 659, 587, 660, 0, 588,
	589, 590, 591, 0, 593, 594, 0, 0, 595, 596,
	597, 599, 600, 598, 601, 0, 602, 0, 0, 603,
	604, 605, 661, 662, 663, 0, 607, 606, 608, 664,
	1276, 0, 264, 0, 0, 609, 610, 665, 611, 612,
	613, 0, 0, 0, 0, 0, 0, 0, 0, 270,
	272, 271, 273, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 614, 0, 0, 0, 0,
	280, 281, 0, 282, 283, 284, 285, 286, 287, 615,
	616, 0, 288, 617, 289, 618, 0, 619, 290, 291,
	292, 293, 294, 295, 0, 0, 0, 296, 620, 621,
	622, 0, 297, 298, 623, 0, 0, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 0, 321, 322, 323, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 326, 327,
	328, 0, 329, 624, 625, 0, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	340, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 626, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 627, 628, 360, 0, 267, 0, 0,
	0, 0, 0, 361, 362, 363, 629, 0, 0, 0,
	364, 0, 365, 0, 0, 0, 366, 367, 630, 631,
	368, 369, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 632, 0, 633, 378, 0, 379, 380, 381, 382,
	383, 1275, 635, 636, 460, 0, 384, 385, 0, 386,
	387, 388, 389, 0, 0, 0, 268, 390, 391, 392,
	394, 0, 0, 393, 637, 638, 0, 639, 0, 395,
	396, 0, 640, 0, 397, 398, 399, 0, 400, 0,
	0, 0, 401, 402, 403, 404, 405, 406, 0, 407,
	409, 408, 0, 410, 641, 0, 411, 412, 0, 0,
	413, 0, 0, 0, 414, 415, 418, 0, 0, 416,
	417, 419, 420, 0, 421, 422, 424, 427, 423, 425,
	426, 428, 441, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 443, 0, 442, 0, 444,
	445, 446, 451, 453, 454, 449, 450, 452, 455, 456,
	448, 0, 447, 0, 269, 0, 457, 458, 0, 642,
	459, 643, 461, 462, 0, 0, 463, 0, 0, 0,
	465, 466, 467, 0, 0, 468, 469, 644, 0, 470,
	0, 645, 471, 472, 464, 473, 474, 475, 476, 477,
	478, 479, 480, 0, 481, 482, 646, 483, 484, 485,
	647, 486, 487, 488, 648, 489, 649, 490, 491, 0,
	492, 493, 0, 494, 495, 496, 497, 498, 499, 500,
	650, 501, 503, 502, 504, 0, 505, 0, 506, 507,
	508, 0, 0, 0, 0, 509, 0, 511, 512, 513,
	514, 510, 515, 516, 517, 518, 0, 519, 520, 521,
	0, 522, 523, 524, 525, 651, 526, 0, 527, 528,
	534, 535, 529, 530, 536, 537, 538, 539, 540, 0,
	542, 543, 541, 544, 545, 546, 0, 547, 548, 531,
	532, 549, 550, 0, 551, 552, 553, 554, 555, 556,
	652, 0, 557, 0, 558, 559, 560, 562, 533, 563,
	568, 569, 653, 564, 565, 566, 567, 654, 571, 572,
	0, 573, 574, 0, 570, 561, 0, 575, 576, 577,
	578, 579, 580, 581, 354, 582, 0, 583, 655, 656,
	657, 658, 0, 592, 0, 584, 585, 586, 659, 587,
	660, 0, 588, 589, 590, 591, 0, 593, 594, 0,
	0, 595, 596, 597, 599, 600, 598, 601, 0, 602,
	0, 0, 603, 604, 605, 661, 662, 663, 0, 607,
	606, 608, 664, 1266, 0, 264, 0, 0, 609, 610,
	665, 611, 612, 613, 0, 0, 0, 0, 0, 0,
	0, 0, 270, 272, 271, 273, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 614, 0,
	0, 0, 0, 280, 281, 0, 282, 283, 284, 285,
	286, 287, 615, 616, 0, 288, 617, 289, 618, 0,
	619, 290, 291, 292, 293, 294, 295, 0, 0, 0,
	296, 620, 621, 622, 0, 297, 298, 623, 0, 0,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 323, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 327, 328, 0, 329, 624, 625, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 626, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 627, 628, 360, 0,
	267, 0, 0, 0, 0, 0, 361, 362, 363, 629,
	0, 0, 0, 364, 0, 365, 0, 0, 0, 366,
	367, 630, 631, 368, 369, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 632, 0, 633, 378, 0, 379,
	380, 381, 382, 383, 1265, 635, 636, 460, 0, 384,
	385, 0, 386, 387, 388, 389, 0, 0, 0, 268,
	390, 391, 392, 394, 0, 0, 393, 637, 638, 0,
	639, 0, 395, 396, 0, 640, 0, 397, 398, 399,
	0, 400, 0, 0, 0, 401, 402, 403, 404, 405,
	406, 0, 407, 409, 408, 0, 410, 641, 0, 411,
	412, 0, 0, 413, 0, 0, 0, 414, 415, 418,
	0, 0, 416, 417, 419, 420, 0, 421, 422, 424,
	427, 423, 425, 426, 428, 441, 429, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 443, 0,
	442, 0, 444, 445, 446, 451, 453, 454, 449, 450,
	452, 455, 456, 448, 0, 447, 0, 269, 0, 457,
	458, 0, 642, 459, 643, 461, 462, 0, 0, 463,
	0, 0, 0, 465, 466, 467, 0, 0, 468, 469,
	644, 0, 470, 0, 645, 471, 472, 464, 473, 474,
	475, 476, 477, 478, 479, 480, 0, 481, 482, 646,
	483, 484, 485, 647, 486, 487, 488, 648, 489, 649,
	490, 491, 0, 492, 493, 0, 494, 495, 496, 497,
	498, 499, 500, 650, 501, 503, 502, 504, 0, 505,
	0, 506, 507, 508, 0, 0, 0, 0, 509, 0,
	511, 512, 513, 514, 510, 515, 516, 517, 518, 0,
	519, 520, 521, 0, 522, 523, 524, 525, 651, 526,
	0, 527, 528, 534, 535, 529, 530, 536, 537, 538,
	539, 540, 0, 542, 543, 541, 544, 545, 546, 0,
	547, 548, 531, 532, 549, 550, 0, 551, 552, 553,
	554, 555, 556, 652, 0, 557, 0, 558, 559, 560,
	562, 533, 563, 568, 569, 653, 564, 565, 566, 567,
	654, 571, 572, 0, 573, 574, 0, 570, 561, 0,
	575, 576, 577, 578, 579, 580, 581, 354, 582, 0,
	583, 655, 656, 657, 658, 0, 592, 0, 584, 585,
	586, 659, 587, 660, 0, 588, 589, 590, 591, 0,
	593, 594, 0, 0, 595, 596, 597, 599, 600, 598,
	601, 0, 602, 0, 0, 603, 604, 605, 661, 662,
	663, 0, 607, 606, 608, 664, 1263, 0, 264, 0,
	0, 609, 610, 665, 611, 612, 613, 0, 0, 0,
	0, 0, 0, 0, 0, 270, 272, 271, 273, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 614, 0, 0, 0, 0, 280, 281, 0, 282,
	283, 284, 285, 286, 287, 615, 616, 0, 288, 617,
	289, 618, 0, 619, 290, 291, 292, 293, 294, 295,
	0, 0, 0, 296, 620, 621, 622, 0, 297, 298,
	623, 0, 0, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 0, 321, 322, 323, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 326, 327, 328, 0, 329, 624,
	625, 0, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 340, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 626, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 627,
	628, 360, 0, 267, 0, 0, 0, 0, 0, 361,
	362, 363, 629, 0, 0, 0, 364, 0, 365, 0,
	0, 0, 366, 367, 630, 631, 368, 369, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 632, 0, 633,
	378, 0, 379, 380, 381, 382, 383, 1262, 635, 636,
	460, 0, 384, 385, 0, 386, 387, 388, 389, 0,
	0, 0, 268, 390, 391, 392, 394, 0, 0, 393,
	637, 638, 0, 639, 0, 395, 396, 0, 640, 0,
	397, 398, 399, 0, 400, 0, 0, 0, 401, 402,
	403, 404, 405, 406, 0, 407, 409, 408, 0, 410,
	641, 0, 411, 412, 0, 0, 413, 0, 0, 0,
	414, 415, 418, 0, 0, 416, 417, 419, 420, 0,
	421, 422, 424, 427, 423, 425, 426, 428, 441, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 443, 0, 442, 0, 444, 445, 446, 451, 453,
	454, 449, 450, 452, 455, 456, 448, 0, 447, 0,
	269, 0, 457, 458, 0, 642, 459, 643, 461, 462,
	0, 0, 463, 0, 0, 0, 465, 466, 467, 0,
	0, 468, 469, 644, 0, 470, 0, 645, 471, 472,
	464, 473, 474, 475, 476, 477, 478, 479, 480, 0,
	481, 482, 646, 483, 484, 485, 647, 486, 487, 488,
	648, 489, 649, 490, 491, 0, 492, 493, 0, 494,
	495, 496, 497, 498, 499, 500, 650, 501, 503, 502,
	504, 0, 505, 0, 506, 507, 508, 0, 0, 0,
	0, 509, 0, 511, 512, 513, 514, 510, 515, 516,
	517, 518, 0, 519, 520, 521, 0, 522, 523, 524,
	525, 651, 526, 0, 527, 528, 534, 535, 529, 530,
	536, 537, 538, 539, 540, 0, 542, 543, 541, 544,
	545, 546, 0, 547, 548, 531, 532, 549, 550, 0,
	551, 552, 553, 554, 555, 556, 652, 0, 557, 0,
	558, 559, 560, 562, 533, 563, 568, 569, 653, 564,
	565, 566, 567, 654, 571, 572, 0, 573, 574, 0,
	570, 561, 0, 575, 576, 577, 578, 579, 580, 581,
	354, 582, 0, 583, 655, 656, 657, 658, 0, 592,
	0, 584, 585, 586, 659, 587, 660, 0, 588, 589,
	590, 591, 0, 593, 594, 0, 0, 595, 596, 597,
	599, 600, 598, 601, 0, 602, 0, 0, 603, 604,
	605, 661, 662, 663, 0, 607, 606, 608, 664, 1258,
	0, 264, 0, 0, 609, 610, 665, 611, 612, 613,
	0, 0, 0, 0, 0, 0, 0, 0, 270, 272,
	271, 273, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 614, 0, 0, 0, 0, 280,
	281, 0, 282, 283, 284, 285, 286, 287, 615, 616,
	0, 288, 617, 289, 618, 0, 619, 290, 291, 292,
	293, 294, 295, 0, 0, 0, 296, 620, 621, 622,
	0, 297, 298, 623, 0, 0, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 0, 321, 322, 323, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 327, 328,
	0, 329, 624, 625, 0, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 340,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 626, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 627, 628, 360, 0, 267, 0, 0, 0,
	0, 0, 361, 362, 363, 629, 0, 0, 0, 364,
	0, 365, 0, 0, 0, 366, 367, 630, 631, 368,
	369, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	632, 0, 633, 378, 0, 379, 380, 381, 382, 383,
	1257, 635, 636, 460, 0, 384, 385, 0, 386, 387,
	388, 389, 0, 0, 0, 268, 390, 391, 392, 394,
	0, 0, 393, 637, 638, 0, 639, 0, 395, 396,
	0, 640, 0, 397, 398, 399, 0, 400, 0, 0,
	0, 401, 402, 403, 404, 405, 406, 0, 407, 409,
	408, 0, 410, 641, 0, 411, 412, 0, 0, 413,
	0, 0, 0, 414, 415, 418, 0, 0, 416, 417,
	419, 420, 0, 421, 422, 424, 427, 423, 425, 426,
	428, 441, 429, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 443, 0, 442, 0, 444, 445,
	446, 451, 453, 454, 449, 450, 452, 455, 456, 448,
	0, 447, 0, 269, 0, 457, 458, 0, 642, 459,
	643, 461, 462, 0, 0, 463, 0, 0, 0, 465,
	466, 467, 0, 0, 468, 469, 644, 0, 470, 0,
	645, 471, 472, 464, 473, 474, 475, 476, 477, 478,
	479, 480, 0, 481, 482, 646, 483, 484, 485, 647,
	486, 487, 488, 648, 489, 649, 490, 491, 0, 492,
	493, 0, 494, 495, 496, 497, 498, 499, 500, 650,
	501, 503, 502, 504, 0, 505, 0, 506, 507, 508,
	0, 0, 0, 0, 509, 0, 511, 512, 513, 514,
	510, 515, 516, 517, 518, 0, 519, 520, 521, 0,
	522, 523, 524, 525, 651, 526, 0, 527, 528, 534,
	535, 529, 530, 536, 537, 538, 539, 540, 0, 542,
	543, 541, 544, 545, 546, 0, 547, 548, 531, 532,
	549, 550, 0, 551, 552, 553, 554, 555, 556, 652,
	0, 557, 0, 558, 559, 560, 562, 533, 563, 568,
	569, 653, 564, 565, 566, 567, 654, 571, 572, 0,
	573, 574, 0, 570, 561, 0, 575, 576, 577, 578,
	579, 580, 581, 354, 582, 0, 583, 655, 656, 657,
	658, 0, 592, 0, 584, 585, 586, 659, 587, 660,
	0, 588, 589, 590, 591, 0, 593, 594, 0, 0,
	595, 596, 597, 599, 600, 598, 601, 0, 602, 0,
	0, 603, 604, 605, 661, 662, 663, 0, 607, 606,
	608, 664, 667, 0, 264, 0, 0, 609, 610, 665,
	611, 612, 613, 0, 0, 0, 0, 0, 0, 0,
	0, 270, 272, 271, 273, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 614, 0, 0,
	0, 0, 280, 281, 0, 282, 283, 284, 285, 286,
	287, 615, 616, 0, 288, 617, 289, 618, 0, 619,
	290, 291, 292, 293, 294, 295, 0, 0, 0, 296,
	620, 621, 622, 0, 297, 298, 623, 0, 0, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 0, 321, 322,
	323, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	326, 327, 328, 0, 329, 624, 625, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 340, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 626, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 627, 628, 360, 0, 267,
	0, 0, 0, 0, 0, 361, 362, 363, 629, 0,
	0, 0, 364, 0, 365, 0, 0, 0, 366, 367,
	630, 631, 368, 369, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 632, 0, 633, 378, 0, 379, 380,
	381, 382, 383, 634, 635, 636, 460, 0, 384, 385,
	0, 386, 387, 388, 389, 0, 0, 0, 268, 390,
	391, 392, 394, 0, 0, 393, 637, 638, 0, 639,
	0, 395, 396, 0, 640, 0, 397, 398, 399, 0,
	400, 0, 0, 0, 401, 402, 403, 404, 405, 406,
	0, 407, 409, 408, 0, 410, 641, 0, 411, 412,
	0, 0, 413, 0, 0, 0, 414, 415, 418, 0,
	0, 416, 417, 419, 420, 0, 421, 422, 424, 427,
	423, 425, 426, 428, 441, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 443, 0, 442,
	0, 444, 445, 446, 451, 453, 454, 449, 450, 452,
	455, 456, 448, 0, 447, 0, 269, 0, 457, 458,
	0, 642, 459, 643, 461, 462, 0, 0, 463, 0,
	0, 0, 465, 466, 467, 0, 0, 468, 469, 644,
	0, 470, 0, 645, 471, 472, 464, 473, 474, 475,
	476, 477, 478, 479, 480, 0, 481, 482, 646, 483,
	484, 485, 647, 486, 487, 488, 648, 489, 649, 490,
	491, 0, 492, 493, 0, 494, 495, 496, 497, 498,
	499, 500, 650, 501, 503, 502, 504, 0, 505, 0,
	506, 507, 508, 0, 0, 0, 0, 509, 0, 511,
	512, 513, 514, 510, 515, 516, 517, 518, 0, 519,
	520, 521, 0, 522, 523, 524, 525, 651, 526, 0,
	527, 528, 534, 535, 529, 530, 536, 537, 538, 539,
	540, 0, 542, 543, 541, 544, 545, 546, 0, 547,
	548, 531, 532, 549, 550, 0, 551, 552, 553, 554,
	555, 556, 652, 0, 557, 0, 558, 559, 560, 562,
	533, 563, 568, 569, 653, 564, 565, 566, 567, 654,
	571, 572, 0, 573, 574, 0, 570, 561, 0, 575,
	576, 577, 578, 579, 580, 581, 354, 582, 0, 583,
	655, 656, 657, 658, 0, 592, 0, 584, 585, 586,
	659, 587, 660, 0, 588, 589, 590, 591, 0, 593,
	594, 0, 0, 595, 596, 597, 599, 600, 598, 601,
	0, 602, 0, 0, 603, 604, 605, 661, 662, 663,
	0, 607, 606, 608, 664, 255, 0, 264, 0, 0,
	609, 610, 665, 611, 612, 613, 0, 0, 0, 0,
	0, 0, 0, 0, 270, 272, 271, 273, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	614, 0, 0, 0, 0, 280, 281, 0, 282, 283,
	284, 285, 286, 287, 615, 616, 0, 288, 617, 289,
	618, 0, 619, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 620, 621, 622, 0, 297, 298, 623,
	0, 0, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 323, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 327, 328, 0, 329, 624, 625,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 626, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 627, 628,
	360, 0, 267, 0, 0, 0, 0, 0, 361, 362,
	363, 629, 0, 0, 0, 364, 0, 365, 0, 0,
	0, 366, 367, 630, 631, 368, 369, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 632, 0, 633, 378,
	0, 379, 380, 381, 382, 383, 634, 635, 636, 460,
	0, 384, 385, 0, 386, 387, 388, 389, 0, 0,
	0, 268, 390, 391, 392, 394, 0, 0, 393, 637,
	638, 0, 639, 0, 395, 396, 0, 640, 0, 397,
	398, 399, 0, 400, 0, 0, 0, 401, 402, 403,
	404, 405, 406, 0, 407, 409, 408, 0, 410, 641,
	0, 411, 412, 0, 0, 413, 0, 0, 0, 414,
	415, 418, 0, 0, 416, 417, 419, 420, 0, 421,
	422, 424, 427, 423, 425, 426, 428, 441, 429, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	443, 0, 442, 0, 444, 445, 446, 451, 453, 454,
	449, 450, 452, 455, 456, 448, 0, 447, 0, 269,
	0, 457, 458, 0, 642, 459, 643, 461, 462, 0,
	0, 463, 0, 0, 0, 465, 466, 467, 0, 0,
	468, 469, 644, 0, 470, 0, 645, 471, 472, 464,
	473, 474, 475, 476, 477, 478, 479, 480, 0, 481,
	482, 646, 483, 484, 485, 647, 486, 487, 488, 648,
	489, 649, 490, 491, 0, 492, 493, 0, 494, 495,
	496, 497, 498, 499, 500, 650, 501, 503, 502, 504,
	0, 505, 0, 506, 507, 508, 0, 0, 0, 0,
	509, 0, 511, 512, 513, 514, 510, 515, 516, 517,
	518, 0, 519, 520, 521, 0, 522, 523, 524, 525,
	651, 526, 0, 527, 528, 534, 535, 529, 530, 536,
	537, 538, 539, 540, 0, 542, 543, 541, 544, 545,
	546, 0, 547, 548, 531, 532, 549, 550, 0, 551,
	552, 553, 554, 555, 556, 652, 0, 557, 0, 558,
	559, 560, 562, 533, 563, 568, 569, 653, 564, 565,
	566, 567, 654, 571, 572, 0, 573, 574, 0, 570,
	561, 0, 575, 576, 577, 578, 579, 580, 581, 354,
	582, 0, 583, 655, 656, 657, 658, 0, 592, 0,
	584, 585, 586, 659, 587, 660, 0, 588, 589, 590,
	591, 0, 593, 594, 0, 0, 595, 596, 597, 599,
	600, 598, 601, 0, 602, 0, 0, 603, 604, 605,
	661, 662, 663, 264, 607, 606, 608, 664, 0, 0,
	0, 0, 0, 609, 610, 665, 611, 612, 613, 0,
	270, 272, 271, 273, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 614, 0, 0, 0,
	0, 280, 281, 0, 282, 283, 284, 285, 286, 287,
	615, 616, 0, 288, 617, 289, 618, 0, 619, 290,
	291, 292, 293, 294, 295, 0, 0, 0, 296, 620,
	621, 622, 0, 297, 298, 623, 0, 0, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 0, 321, 322, 323,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	327, 328, 0, 329, 624, 625, 0, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 340, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 626, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 627, 628, 360, 0, 267, 0,
	0, 0, 0, 0, 361, 362, 363, 629, 0, 0,
	0, 364, 0, 365, 0, 0, 0, 366, 367, 630,
	631, 368, 369, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 632, 0, 633, 378, 0, 379, 380, 381,
	382, 383, 634, 635, 636, 460, 0, 384, 385, 0,
	386, 387, 388, 389, 0, 0, 0, 268, 390, 391,
	392, 394, 0, 0, 393, 637, 638, 0, 639, 0,
	395, 396, 0, 640, 0, 397, 398, 399, 0, 400,
	0, 0, 0, 401, 402, 403, 404, 405, 406, 0,
	407, 409, 408, 0, 410, 641, 0, 411, 412, 0,
	0, 413, 0, 0, 0, 414, 415, 418, 0, 0,
	416, 417, 419, 420, 0, 421, 422, 424, 427, 423,
	425, 426, 428, 441, 429, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 443, 0, 442, 0,
	444, 445, 446, 451, 453, 454, 449, 450, 452, 455,
	456, 448, 0, 447, 0, 269, 0, 457, 458, 0,
	642, 459, 643, 461, 462, 0, 0, 463, 0, 0,
	0, 465, 466, 467, 0, 0, 468, 469, 644, 0,
	470, 0, 645, 471, 472, 464, 473, 474, 475, 476,
	477, 478, 479, 480, 0, 481, 482, 646, 483, 484,
	485, 647, 486, 487, 488, 648, 489, 649, 490, 491,
	0, 492, 493, 0, 494, 495, 496, 497, 498, 499,
	500, 650, 501, 503, 502, 504, 0, 505, 0, 506,
	507, 508, 0, 0, 0, 0, 509, 0, 511, 512,
	513, 514, 510, 515, 516, 517, 518, 0, 519, 520,
	521, 0, 522, 523, 524, 525, 651, 526, 0, 527,
	528, 534, 535, 529, 530, 536, 537, 538, 539, 540,
	0, 542, 543, 541, 544, 545, 546, 0, 547, 548,
	531, 532, 549, 550, 0, 551, 552, 553, 554, 555,
	556, 652, 0, 557, 0, 558, 559, 560, 562, 533,
	563, 568, 569, 653, 564, 565, 566, 567, 654, 571,
	572, 0, 573, 574, 0, 570, 561, 0, 575, 576,
	577, 578, 579, 580, 581, 354, 582, 0, 583, 655,
	656, 657, 658, 0, 592, 0, 584, 585, 586, 659,
	587, 660, 0, 588, 589, 590, 591, 0, 593, 594,
	0, 0, 595, 596, 597, 599, 600, 598, 601, 0,
	602, 0, 0, 603, 604, 605, 661, 662, 663, 264,
	607, 606, 608, 664, 0, 0, 0, 0, 0, 609,
	610, 665, 611, 612, 613, 0, 270, 272, 271, 273,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 614, 0, 0, 0, 0, 3709, 281, 0,
	282, 283, 284, 285, 286, 287, 615, 616, 0, 288,
	617, 289, 618, 0, 619, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 620, 621, 622, 0, 297,
	298, 623, 0, 0, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 0, 321, 322, 323, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 327, 328, 0, 329,
	624, 625, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 626,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	627, 628, 360, 0, 0, 0, 0, 0, 0, 0,
	361, 362, 363, 629, 0, 0, 0, 364, 0, 365,
	0, 0, 0, 366, 367, 630, 631, 368, 369, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 632, 0,
	633, 378, 0, 379, 380, 381, 382, 383, 634, 635,
	636, 460, 0, 384, 385, 0, 386, 387, 388, 389,
	0, 0, 0, 0, 390, 391, 392, 394, 0, 0,
	393, 637, 638, 0, 639, 0, 395, 396, 0, 640,
	0, 397, 398, 399, 0, 400, 0, 0, 0, 401,
	402, 403, 404, 405, 406, 0, 407, 409, 408, 0,
	410, 641, 0, 411, 412, 0, 0, 413, 0, 0,
	0, 414, 415, 418, 0, 0, 416, 417, 419, 420,
	0, 421, 422, 424, 427, 423, 425, 426, 428, 441,
	429, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 443, 0, 442, 0, 444, 445, 446, 451,
	453, 454, 449, 450, 452, 455, 456, 448, 3710, 447,
	0, 0, 0, 457, 458, 0, 642, 459, 643, 461,
	462, 0, 0, 463, 0, 0, 0, 465, 466, 467,
	0, 0, 468, 469, 644, 0, 470, 0, 645, 471,
	472, 464, 473, 474, 475, 476, 477, 478, 479, 480,
	0, 481, 482, 646, 483, 484, 485, 647, 486, 487,
	488, 648, 489, 649, 490, 491, 3712, 492, 493, 0,
	494, 495, 496, 497, 498, 499, 500, 650, 501, 503,
	502, 504, 0, 505, 0, 506, 507, 508, 0, 0,
	0, 0, 509, 0, 511, 512, 513, 514, 510, 515,
	516, 517, 518, 0, 519, 520, 521, 0, 522, 523,
	524, 525, 3713, 526, 0, 527, 528, 534, 535, 529,
	530, 536, 537, 538, 539, 540, 0, 542, 543, 541,
	544, 545, 546, 0, 547, 548, 531, 532, 549, 550,
	0, 551, 552, 553, 554, 555, 556, 652, 0, 557,
	0, 558, 559, 560, 562, 533, 563, 568, 569, 653,
	564, 565, 566, 567, 654, 571, 572, 0, 573, 574,
	0, 570, 561, 0, 575, 576, 577, 578, 579, 580,
	581, 354, 582, 0, 583, 655, 656, 657, 658, 3708,
	592, 0, 584, 585, 586, 659, 587, 660, 0, 588,
	589, 590, 591, 0, 593, 594, 0, 0, 595, 596,
	597, 599, 600, 598, 601, 0, 602, 0, 0, 603,
	604, 605, 661, 662, 663, 264, 607, 606, 608, 664,
	0, 0, 0, 0, 0, 609, 610, 665, 611, 612,
	613, 0, 270, 272, 271, 273, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 614, 0,
	0, 0, 0, 280, 281, 0, 282, 283, 284, 285,
	286, 287, 615, 616, 0, 288, 617, 289, 618, 0,
	619, 290, 291, 292, 293, 294, 295, 0, 0, 0,
	296, 620, 621, 622, 0, 297, 298, 623, 0, 0,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 689, 318, 319, 320, 0, 321,
	322, 323, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 327, 328, 0, 329, 624, 625, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 626, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 627, 628, 360, 0,
	0, 0, 0, 0, 0, 0, 361, 362, 363, 629,
	0, 0, 0, 364, 0, 365, 0, 0, 0, 366,
	367, 630, 631, 368, 369, 370, 371, 372, 373, 374,
	375, 376, 690, 377, 632, 0, 633, 378, 0, 379,
	380, 381, 382, 383, 634, 635, 636, 460, 0, 384,
	385, 0, 386, 387, 388, 389, 0, 0, 0, 0,
	390, 391, 392, 394, 0, 0, 393, 637, 638, 0,
	639, 0, 395, 396, 0, 640, 0, 397, 398, 399,
	0, 400, 0, 0, 0, 401, 402, 403, 404, 405,
	406, 0, 407, 409, 408, 0, 410, 641, 0, 411,
	412, 0, 0, 413, 0, 0, 0, 414, 415, 418,
	0, 0, 416, 417, 419, 420, 0, 421, 422, 424,
	427, 423, 425, 426, 428, 441, 429, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 443, 0,
	442, 0, 444, 445, 446, 451, 453, 454, 449, 450,
	452, 455, 456, 448, 0, 447, 0, 0, 0, 457,
	458, 0, 642, 459, 643, 461, 462, 0, 0, 463,
	0, 0, 0, 465, 466, 467, 0, 0, 468, 469,
	644, 0, 470, 0, 645, 471, 472, 464, 473, 474,
	475, 476, 477, 478, 479, 480, 0, 481, 482, 646,
	483, 484, 485, 647, 486, 487, 488, 648, 489, 649,
	490, 491, 0, 492, 493, 0, 494, 495, 496, 497,
	498, 499, 500, 650, 501, 503, 502, 504, 0, 505,
	0, 506, 507, 508, 0, 0, 0, 0, 509, 0,
	511, 512, 513, 514, 510, 515, 516, 517, 518, 0,
	519, 520, 521, 0, 522, 523, 524, 525, 651, 526,
	0, 527, 528, 534, 535, 529, 530, 536, 537, 538,
	539, 540, 691, 542, 543, 541, 544, 545, 546, 0,
	547, 548, 531, 532, 549, 550, 0, 551, 552, 553,
	554, 555, 556, 652, 0, 557, 0, 558, 559, 560,
	562, 533, 563, 568, 569, 653, 564, 565, 566, 567,
	654, 571, 572, 0, 573, 574, 0, 570, 561, 0,
	575, 576, 577, 578, 579, 580, 581, 354, 582, 0,
	583, 655, 656, 657, 658, 0, 592, 0, 584, 585,
	586, 659, 587, 660, 0, 588, 589, 590, 591, 0,
	593, 594, 0, 0, 595, 596, 597, 599, 600, 598,
	601, 0, 602, 0, 0, 603, 604, 605, 661, 662,
	663, 264, 607, 606, 608, 664, 0, 0, 0, 0,
	0, 609, 610, 665, 611, 612, 613, 0, 270, 272,
	271, 273, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 614, 0, 0, 0, 0, 280,
	281, 0, 282, 283, 284, 285, 286, 287, 615, 616,
	0, 288, 617, 289, 618, 0, 619, 290, 291, 292,
	293, 294, 295, 0, 0, 0, 296, 620, 621, 622,
	0, 297, 298, 623, 0, 0, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 0, 321, 322, 323, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 2285, 328,
	0, 329, 624, 625, 0, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 340,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 626, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 627, 628, 360, 0, 267, 0, 0, 0,
	0, 0, 361, 362, 363, 629, 0, 0, 0, 364,
	0, 365, 0, 0, 0, 366, 367, 630, 631, 368,
	369, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	632, 0, 633, 378, 0, 379, 380, 381, 382, 383,
	634, 635, 636, 460, 0, 384, 385, 0, 386, 387,
	388, 389, 0, 0, 0, 268, 390, 391, 392, 394,
	0, 0, 393, 637, 638, 0, 639, 0, 395, 396,
	0, 640, 0, 397, 398, 399, 0, 400, 0, 0,
	0, 401, 402, 403, 404, 405, 406, 0, 407, 409,
	408, 0, 410, 641, 0, 411, 412, 0, 0, 413,
	0, 0, 0, 414, 415, 418, 0, 0, 416, 417,
	419, 420, 0, 421, 422, 424, 427, 423, 425, 426,
	428, 441, 429, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 443, 0, 442, 0, 444, 445,
	446, 451, 453, 454, 449, 450, 452, 455, 456, 448,
	0, 447, 0, 269, 0, 457, 458, 0, 642, 459,
	643, 461, 462, 0, 0, 463, 0, 0, 0, 465,
	466, 467, 0, 0, 468, 469, 644, 0, 470, 0,
	645, 471, 472, 464, 473, 474, 475, 476, 477, 478,
	479, 480, 0, 481, 482, 646, 483, 484, 485, 647,
	486, 487, 488, 648, 489, 649, 490, 491, 0, 492,
	493, 0, 494, 495, 496, 497, 498, 499, 500, 650,
	501, 503, 502, 504, 0, 505, 0, 506, 507, 508,
	0, 0, 0, 0, 509, 0, 511, 512, 513, 514,
	510, 515, 516, 517, 518, 0, 519, 520, 521, 0,
	522, 523, 524, 525, 651, 526, 0, 527, 528, 534,
	535, 529, 530, 536, 537, 538, 539, 540, 0, 542,
	543, 541, 544, 545, 546, 0, 547, 548, 531, 532,
	549, 550, 0, 551, 552, 553, 554, 555, 556, 652,
	0, 557, 0, 558, 559, 560, 562, 533, 563, 568,
	569, 653, 564, 565, 566, 567, 654, 571, 572, 0,
	573, 574, 0, 570, 561, 0, 575, 576, 577, 578,
	579, 580, 581, 354, 582, 0, 583, 655, 656, 657,
	658, 0, 592, 0, 584, 585, 586, 659, 587, 660,
	0, 588, 589, 590, 591, 0, 593, 594, 0, 0,
	595, 596, 597, 599, 600, 598, 601, 0, 602, 0,
	0, 603, 604, 605, 661, 662, 663, 264, 607, 606,
	608, 664, 0, 0, 0, 0, 0, 609, 610, 665,
	611, 612, 613, 0, 270, 272, 271, 273, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	614, 0, 0, 0, 0, 280, 281, 0, 282, 283,
	284, 285, 286, 287, 615, 616, 0, 288, 617, 289,
	618, 0, 619, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 620, 621, 622, 0, 297, 298, 623,
	0, 0, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 323, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 2283, 328, 0, 329, 624, 625,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 626, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 627, 628,
	360, 0, 267, 0, 0, 0, 0, 0, 361, 362,
	363, 629, 0, 0, 0, 364, 0, 365, 0, 0,
	0, 366, 367, 630, 631, 368, 369, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 632, 0, 633, 378,
	0, 379, 380, 381, 382, 383, 634, 635, 636, 460,
	0, 384, 385, 0, 386, 387, 388, 389, 0, 0,
	0, 268, 390, 391, 392, 394, 0, 0, 393, 637,
	638, 0, 639, 0, 395, 396, 0, 640, 0, 397,
	398, 399, 0, 400, 0, 0, 0, 401, 402, 403,
	404, 405, 406, 0, 407, 409, 408, 0, 410, 641,
	0, 411, 412, 0, 0, 413, 0, 0, 0, 414,
	415, 418, 0, 0, 416, 417, 419, 420, 0, 421,
	422, 424, 427, 423, 425, 426, 428, 441, 429, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	443, 0, 442, 0, 444, 445, 446, 451, 453, 454,
	449, 450, 452, 455, 456, 448, 0, 447, 0, 269,
	0, 457, 458, 0, 642, 459, 643, 461, 462, 0,
	0, 463, 0, 0, 0, 465, 466, 467, 0, 0,
	468, 469, 644, 0, 470, 0, 645, 471, 472, 464,
	473, 474, 475, 476, 477, 478, 479, 480, 0, 481,
	482, 646, 483, 484, 485, 647, 486, 487, 488, 648,
	489, 649, 490, 491, 0, 492, 493, 0, 494, 495,
	496, 497, 498, 499, 500, 650, 501, 503, 502, 504,
	0, 505, 0, 506, 507, 508, 0, 0, 0, 0,
	509, 0, 511, 512, 513, 514, 510, 515, 516, 517,
	518, 0, 519, 520, 521, 0, 522, 523, 524, 525,
	651, 526, 0, 527, 528, 534, 535, 529, 530, 536,
	537, 538, 539, 540, 0, 542, 543, 541, 544, 545,
	546, 0, 547, 548, 531, 532, 549, 550, 0, 551,
	552, 553, 554, 555, 556, 652, 0, 557, 0, 558,
	559, 560, 562, 533, 563, 568, 569, 653, 564, 565,
	566, 567, 654, 571, 572, 0, 573, 574, 0, 570,
	561, 0, 575, 576, 577, 578, 579, 580, 581, 354,
	582, 0, 583, 655, 656, 657, 658, 0, 592, 0,
	584, 585, 586, 659, 587, 660, 0, 588, 589, 590,
	591, 0, 593, 594, 0, 0, 595, 596, 597, 599,
	600, 598, 601, 0, 602, 0, 0, 603, 604, 605,
	661, 662, 663, 264, 607, 606, 608, 664, 0, 0,
	0, 0, 0, 609, 610, 665, 611, 612, 613, 0,
	270, 272, 271, 273, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 614, 0, 0, 0,
	0, 280, 281, 0, 282, 283, 284, 285, 286, 287,
	615, 616, 0, 288, 617, 289, 618, 0, 619, 290,
	291, 292, 293, 294, 295, 0, 0, 0, 296, 620,
	621, 622, 0, 297, 298, 623, 0, 0, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 0, 321, 322, 323,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	2281, 328, 0, 329, 624, 625, 0, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 340, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 626, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 627, 628, 360, 0, 267, 0,
	0, 0, 0, 0, 361, 362, 363, 629, 0, 0,
	0, 364, 0, 365, 0, 0, 0, 366, 367, 630,
	631, 368, 369, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 632, 0, 633, 378, 0, 379, 380, 381,
	382, 383, 634, 635, 636, 460, 0, 384, 385, 0,
	386, 387, 388, 389, 0, 0, 0, 268, 390, 391,
	392, 394, 0, 0, 393, 637, 638, 0, 639, 0,
	395, 396, 0, 640, 0, 397, 398, 399, 0, 400,
	0, 0, 0, 401, 402, 403, 404, 405, 406, 0,
	407, 409, 408, 0, 410, 641, 0, 411, 412, 0,
	0, 413, 0, 0, 0, 414, 415, 418, 0, 0,
	416, 417, 419, 420, 0, 421, 422, 424, 427, 423,
	425, 426, 428, 441, 429, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 443, 0, 442, 0,
	444, 445, 446, 451, 453, 454, 449, 450, 452, 455,
	456, 448, 0, 447, 0, 269, 0, 457, 458, 0,
	642, 459, 643, 461, 462, 0, 0, 463, 0, 0,
	0, 465, 466, 467, 0, 0, 468, 469, 644, 0,
	470, 0, 645, 471, 472, 464, 473, 474, 475, 476,
	477, 478, 479, 480, 0, 481, 482, 646, 483, 484,
	485, 647, 486, 487, 488, 648, 489, 649, 490, 491,
	0, 492, 493, 0, 494, 495, 496, 497, 498, 499,
	500, 650, 501, 503, 502, 504, 0, 505, 0, 506,
	507, 508, 0, 0, 0, 0, 509, 0, 511, 512,
	513, 514, 510, 515, 516, 517, 518, 0, 519, 520,
	521, 0, 522, 523, 524, 525, 651, 526, 0, 527,
	528, 534, 535, 529, 530, 536, 537, 538, 539, 540,
	0, 542, 543, 541, 544, 545, 546, 0, 547, 548,
	531, 532, 549, 550, 0, 551, 552, 553, 554, 555,
	556, 652, 0, 557, 0, 558, 559, 560, 562, 533,
	563, 568, 569, 653, 564, 565, 566, 567, 654, 571,
	572, 0, 573, 574, 0, 570, 561, 0, 575, 576,
	577, 578, 579, 580, 581, 354, 582, 0, 583, 655,
	656, 657, 658, 0, 592, 0, 584, 585, 586, 659,
	587, 660, 0, 588, 589, 590, 591, 0, 593, 594,
	0, 0, 595, 596, 597, 599, 600, 598, 601, 0,
	602, 0, 0, 603, 604, 605, 661, 662, 663, 264,
	607, 606, 608, 664, 0, 0, 0, 0, 0, 609,
	610, 665, 611, 612, 613, 0, 270, 272, 271, 273,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 614, 0, 0, 0, 0, 280, 281, 0,
	282, 283, 284, 285, 286, 287, 615, 616, 0, 288,
	617, 289, 618, 0, 619, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 620, 621, 622, 0, 297,
	298, 623, 0, 0, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 0, 321, 322, 323, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 327, 328, 0, 329,
	624, 625, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 626,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	627, 628, 360, 0, 267, 0, 0, 0, 0, 0,
	361, 362, 363, 629, 0, 0, 0, 364, 0, 365,
	0, 0, 0, 366, 367, 630, 631, 368, 369, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 632, 0,
	633, 378, 0, 379, 380, 381, 382, 383, 2202, 635,
	636, 460, 0, 384, 385, 0, 386, 387, 388, 389,
	0, 0, 0, 268, 390, 391, 392, 394, 0, 0,
	393, 637, 638, 0, 639, 0, 395, 396, 0, 640,
	0, 397, 398, 399, 0, 400, 0, 0, 0, 401,
	402, 403, 404, 405, 406, 0, 407, 409, 408, 0,
	410, 641, 0, 411, 412, 0, 0, 413, 0, 0,
	0, 414, 415, 418, 0, 0, 416, 417, 419, 420,
	0, 421, 422, 424, 427, 423, 425, 426, 428, 441,
	429, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 443, 0, 442, 0, 444, 445, 446, 451,
	453, 454, 449, 450, 452, 455, 456, 448, 0, 447,
	0, 269, 0, 457, 458, 0, 642, 459, 643, 461,
	462, 0, 0, 463, 0, 0, 0, 465, 466, 467,
	0, 0, 468, 469, 644, 0, 470, 0, 645, 471,
	472, 464, 473, 474, 475, 476, 477, 478, 479, 480,
	0, 481, 482, 646, 483, 484, 485, 647, 486, 487,
	488, 648, 489, 649, 490, 491, 0, 492, 493, 0,
	494, 495, 496, 497, 498, 499, 500, 650, 501, 503,
	502, 504, 0, 505, 0, 506, 507, 508, 0, 0,
	0, 0, 509, 0, 511, 512, 513, 514, 510, 515,
	516, 517, 518, 0, 519, 520, 521, 0, 522, 523,
	524, 525, 651, 526, 0, 527, 528, 534, 535, 529,
	530, 536, 537, 538, 539, 540, 0, 542, 543, 541,
	544, 545, 546, 0, 547, 548, 531, 532, 549, 550,
	0, 551, 552, 553, 554, 555, 556, 652, 0, 557,
	0, 558, 559, 560, 562, 533, 563, 568, 569, 653,
	564, 565, 566, 567, 654, 571, 572, 0, 573, 574,
	0, 570, 561, 0, 575, 576, 577, 578, 579, 580,
	581, 354, 582, 0, 583, 655, 656, 657, 658, 0,
	592, 0, 584, 585, 586, 659, 587, 660, 0, 588,
	589, 590, 591, 0, 593, 594, 0, 0, 595, 596,
	597, 599, 600, 598, 601, 0, 602, 0, 0, 603,
	604, 605, 661, 662, 663, 264, 607, 606, 608, 664,
	0, 0, 0, 0, 0, 609, 610, 665, 611, 612,
	613, 0, 270, 272, 271, 273, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 614, 0,
	0, 0, 0, 280, 281, 0, 282, 283, 284, 285,
	286, 287, 615, 616, 0, 288, 617, 289, 618, 0,
	619, 290, 291, 292, 293, 294, 295, 0, 0, 0,
	296, 620, 621, 622, 0, 297, 298, 623, 0, 0,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 323, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 327, 328, 0, 329, 624, 625, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 626, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 627, 628, 360, 0,
	267, 0, 0, 0, 0, 0, 361, 362, 363, 629,
	0, 0, 0, 364, 0, 365, 0, 0, 0, 366,
	367, 630, 631, 368, 369, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 632, 0, 633, 378, 0, 379,
	380, 381, 382, 383, 2011, 635, 636, 460, 0, 384,
	385, 0, 386, 387, 388, 389, 0, 0, 0, 268,
	390, 391, 392, 394, 0, 0, 393, 637, 638, 0,
	639, 0, 395, 396, 0, 640, 0, 397, 398, 399,
	0, 400, 0, 0, 0, 401, 402, 403, 404, 405,
	406, 0, 407, 409, 408, 0, 410, 641, 0, 411,
	412, 0, 0, 413, 0, 0, 0, 414, 415, 418,
	0, 0, 416, 417, 419, 420, 0, 421, 422, 424,
	427, 423, 425, 426, 428, 441, 429, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 443, 0,
	442, 0, 444, 445, 446, 451, 453, 454, 449, 450,
	452, 455, 456, 448, 0, 447, 0, 269, 0, 457,
	458, 0, 642, 459, 643, 461, 462, 0, 0, 463,
	0, 0, 0, 465, 466, 467, 0, 0, 468, 469,
	644, 0, 470, 0, 645, 471, 472, 464, 473, 474,
	475, 476, 477, 478, 479, 480, 0, 481, 482, 646,
	483, 484, 485, 647, 486, 487, 488, 648, 489, 649,
	490, 491, 0, 492, 493, 0, 494, 495, 496, 497,
	498, 499, 500, 650, 501, 503, 502, 504, 0, 505,
	0, 506, 507, 508, 0, 0, 0, 0, 509, 0,
	511, 512, 513, 514, 510, 515, 516, 517, 518, 0,
	519, 520, 521, 0, 522, 523, 524, 525, 651, 526,
	0, 527, 528, 534, 535, 529, 530, 536, 537, 538,
	539, 540, 0, 542, 543, 541, 544, 545, 546, 0,
	547, 548, 531, 532, 549, 550, 0, 551, 552, 553,
	554, 555, 556, 652, 0, 557, 0, 558, 559, 560,
	562, 533, 563, 568, 569, 653, 564, 565, 566, 567,
	654, 571, 572, 0, 573, 574, 0, 570, 561, 0,
	575, 576, 577, 578, 579, 580, 581, 354, 582, 0,
	583, 655, 656, 657, 658, 0, 592, 0, 584, 585,
	586, 659, 587, 660, 0, 588, 589, 590, 591, 0,
	593, 594, 0, 0, 595, 596, 597, 599, 600, 598,
	601, 0, 602, 0, 0, 603, 604, 605, 661, 662,
	663, 264, 607, 606, 608, 664, 0, 0, 0, 0,
	0, 609, 610, 665, 611, 612, 613, 0, 270, 272,
	271, 273, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 614, 0, 0, 0, 0, 280,
	281, 0, 282, 283, 284, 285, 286, 287, 615, 616,
	0, 288, 617, 289, 618, 0, 619, 290, 291, 292,
	293, 294, 295, 0, 0, 0, 296, 620, 621, 622,
	0, 297, 298, 623, 0, 0, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 0, 321, 322, 323, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 327, 328,
	0, 329, 624, 625, 0, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 340,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 626, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 627, 628, 360, 0, 267, 0, 0, 0,
	0, 0, 361, 362, 363, 629, 0, 0, 0, 364,
	0, 365, 0, 0, 0, 366, 367, 630, 631, 368,
	369, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	632, 0, 633, 378, 0, 379, 380, 381, 382, 383,
	2005, 635, 636, 460, 0, 384, 385, 0, 386, 387,
	388, 389, 0, 0, 0, 268, 390, 391, 392, 394,
	0, 0, 393, 637, 638, 0, 639, 0, 395, 396,
	0, 640, 0, 397, 398, 399, 0, 400, 0, 0,
	0, 401, 402, 403, 404, 405, 406, 0, 407, 409,
	408, 0, 410, 641, 0, 411, 412, 0, 0, 413,
	0, 0, 0, 414, 415, 418, 0, 0, 416, 417,
	419, 420, 0, 421, 422, 424, 427, 423, 425, 426,
	428, 441, 429, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 443, 0, 442, 0, 444, 445,
	446, 451, 453, 454, 449, 450, 452, 455, 456, 448,
	0, 447, 0, 269, 0, 457, 458, 0, 642, 459,
	643, 461, 462, 0, 0, 463, 0, 0, 0, 465,
	466, 467, 0, 0, 468, 469, 644, 0, 470, 0,
	645, 471, 472, 464, 473, 474, 475, 476, 477, 478,
	479, 480, 0, 481, 482, 646, 483, 484, 485, 647,
	486, 487, 488, 648, 489, 649, 490, 491, 0, 492,
	493, 0, 494, 495, 496, 497, 498, 499, 500, 650,
	501, 503, 502, 504, 0, 505, 0, 506, 507, 508,
	0, 0, 0, 0, 509, 0, 511, 512, 513, 514,
	510, 515, 516, 517, 518, 0, 519, 520, 521, 0,
	522, 523, 524, 525, 651, 526, 0, 527, 528, 534,
	535, 529, 530, 536, 537, 538, 539, 540, 0, 542,
	543, 541, 544, 545, 546, 0, 547, 548, 531, 532,
	549, 550, 0, 551, 552, 553, 554, 555, 556, 652,
	0, 557, 0, 558, 559, 560, 562, 533, 563, 568,
	569, 653, 564, 565, 566, 567, 654, 571, 572, 0,
	573, 574, 0, 570, 561, 0, 575, 576, 577, 578,
	579, 580, 581, 354, 582, 0, 583, 655, 656, 657,
	658, 0, 592, 0, 584, 585, 586, 659, 587, 660,
	0, 588, 589, 590, 591, 0, 593, 594, 0, 0,
	595, 596, 597, 599, 600, 598, 601, 0, 602, 0,
	0, 603, 604, 605, 661, 662, 663, 0, 607, 606,
	608, 664, 865, 0, 264, 0, 0, 609, 610, 665,
	611, 612, 613, 0, 0, 0, 0, 0, 0, 0,
	0, 270, 272, 271, 273, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 614, 0, 0,
	0, 0, 280, 281, 0, 282, 283, 284, 285, 286,
	287, 615, 616, 0, 288, 617, 289, 618, 0, 619,
	290, 291, 292, 293, 294, 295, 0, 0, 0, 296,
	620, 621, 622, 0, 297, 298, 623, 0, 0, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 0, 321, 322,
	323, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	326, 327, 328, 0, 329, 624, 625, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 340, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 626, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 627, 628, 360, 0, 0,
	0, 0, 0, 0, 0, 361, 362, 363, 629, 0,
	0, 0, 364, 0, 365, 0, 0, 0, 366, 367,
	630, 631, 368, 369, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 632, 0, 633, 378, 0, 379, 380,
	381, 382, 383, 634, 635, 636, 460, 0, 384, 385,
	0, 386, 387, 388, 389, 0, 0, 0, 0, 390,
	391, 392, 394, 0, 0, 393, 637, 638, 0, 639,
	864, 395, 396, 0, 640, 0, 397, 398, 399, 0,
	400, 0, 0, 0, 401, 402, 403, 404, 405, 406,
	0, 407, 409, 408, 0, 410, 641, 0, 411, 412,
	0, 0, 413, 0, 0, 0, 414, 415, 418, 0,
	0, 416, 417, 419, 420, 0, 421, 422, 424, 427,
	423, 425, 426, 428, 441, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 443, 0, 442,
	0, 444, 445, 446, 451, 453, 454, 449, 450, 452,
	455, 456, 448, 0, 447, 0, 0, 0, 457, 458,
	0, 642, 459, 643, 461, 462, 0, 0, 463, 0,
	0, 0, 465, 466, 467, 0, 0, 468, 469, 644,
	0, 470, 0, 645, 471, 472, 464, 473, 474, 475,
	476, 477, 478, 479, 480, 0, 481, 482, 646, 483,
	484, 485, 647, 486, 487, 488, 648, 489, 649, 490,
	491, 0, 492, 493, 0, 494, 495, 496, 497, 498,
	499, 500, 650, 501, 503, 502, 504, 0, 505, 0,
	506, 507, 508, 0, 0, 0, 0, 509, 0, 511,
	512, 513, 514, 510, 515, 516, 517, 518, 0, 519,
	520, 521, 0, 522, 523, 524, 525, 651, 526, 0,
	527, 528, 534, 535, 529, 530, 536, 537, 538, 539,
	540, 0, 542, 543, 541, 544, 545, 546, 0, 547,
	548, 531, 532, 549, 550, 0, 551, 552, 553, 554,
	555, 556, 652, 0, 557, 0, 558, 559, 560, 562,
	533, 563, 568, 569, 653, 564, 565, 566, 567, 654,
	571, 572, 0, 573, 574, 0, 570, 561, 863, 575,
	576, 577, 578, 579, 580, 581, 354, 582, 0, 583,
	655, 656, 657, 658, 0, 592, 0, 584, 585, 586,
	659, 587, 660, 0, 588, 589, 590, 591, 0, 593,
	594, 0, 0, 595, 596, 597, 599, 600, 598, 601,
	0, 602, 0, 0, 603, 604, 605, 661, 662, 663,
	264, 607, 606, 608, 664, 0, 0, 0, 0, 0,
	609, 610, 665, 611, 612, 613, 0, 270, 272, 271,
	273, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 614, 0, 0, 0, 0, 280, 281,
	0, 282, 283, 284, 285, 286, 287, 615, 616, 0,
	288, 617, 289, 618, 0, 619, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 620, 621, 622, 0,
	297, 298, 623, 0, 0, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 323, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 326, 327, 328, 0,
	329, 624, 625, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	626, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 627, 628, 360, 0, 2943, 0, 0, 0, 0,
	0, 361, 362, 363, 629, 0, 0, 0, 364, 0,
	365, 0, 0, 0, 366, 367, 630, 631, 368, 369,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 632,
	0, 633, 378, 0, 379, 380, 381, 382, 383, 634,
	635, 636, 460, 0, 384, 385, 0, 386, 387, 388,
	389, 0, 0, 0, 0, 390, 391, 392, 394, 0,
	0, 393, 637, 638, 0, 639, 0, 395, 396, 0,
	640, 0, 397, 398, 399, 0, 400, 0, 0, 0,
	401, 402, 403, 404, 405, 406, 0, 407, 409, 408,
	0, 410, 641, 0, 411, 412, 0, 0, 413, 0,
	0, 0, 414, 415, 418, 0, 0, 416, 417, 419,
	420, 0, 421, 422, 424, 427, 423, 425, 426, 428,
	441, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 443, 0, 442, 0, 444, 445, 446,
	451, 453, 454, 449, 450, 452, 455, 456, 448, 0,
	447, 0, 0, 0, 457, 458, 0, 642, 459, 643,
	461, 462, 0, 0, 463, 0, 0, 0, 465, 466,
	467, 0, 0, 468, 469, 644, 0, 470, 0, 645,
	471, 472, 464, 473, 474, 475, 476, 477, 478, 479,
	480, 0, 481, 482, 646, 483, 484, 485, 647, 486,
	487, 488, 648, 489, 649, 490, 491, 4067, 492, 493,
	0, 494, 495, 496, 497, 498, 499, 500, 650, 501,
	503, 502, 504, 0, 505, 0, 506, 507, 508, 0,
	0, 0, 0, 509, 0, 511, 512, 513, 514, 510,
	515, 516, 517, 518, 0, 519, 520, 521, 0, 522,
	523, 524, 525, 651, 526, 0, 527, 528, 534, 535,
	529, 530, 536, 537, 538, 539, 540, 0, 542, 543,
	541, 544, 545, 546, 0, 547, 548, 531, 532, 549,
	550, 0, 551, 552, 553, 554, 555, 556, 652, 0,
	557, 0, 558, 559, 560, 562, 533, 563, 568, 569,
	653, 564, 565, 566, 567, 654, 571, 572, 0, 573,
	574, 0, 570, 561, 0, 575, 576, 577, 578, 579,
	580, 581, 354, 582, 0, 583, 655, 656, 657, 658,
	0, 592, 0, 584, 585, 586, 659, 587, 660, 0,
	588, 589, 590, 591, 0, 593, 594, 0, 0, 595,
	596, 597, 599, 600, 598, 601, 0, 602, 0, 0,
	603, 604, 605, 661, 662, 663, 264, 607, 606, 608,
	664, 0, 0, 0, 0, 0, 609, 610, 665, 611,
	612, 613, 0, 270, 272, 271, 273, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 614,
	0, 0, 0, 0, 280, 281, 0, 282, 283, 284,
	285, 286, 287, 615, 616, 0, 288, 617, 289, 618,
	0, 619, 290, 291, 292, 293, 294, 295, 0, 0,
	0, 296, 620, 621, 622, 0, 297, 298, 623, 0,
	0, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 0,
	321, 322, 323, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 326, 327, 328, 0, 329, 624, 625, 0,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 340, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 626, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 627, 628, 360,
	0, 0, 0, 0, 0, 0, 0, 361, 362, 363,
	629, 0, 0, 0, 364, 0, 365, 0, 0, 0,
	366, 367, 630, 631, 368, 369, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 632, 0, 633, 378, 0,
	379, 380, 381, 382, 383, 634, 635, 636, 460, 0,
	384, 385, 0, 386, 387, 388, 389, 0, 0, 0,
	0, 390, 391, 392, 394, 0, 0, 393, 637, 638,
	0, 639, 0, 395, 396, 0, 640, 0, 397, 398,
	399, 0, 400, 0, 0, 0, 401, 402, 403, 404,
	405, 406, 0, 407, 409, 408, 0, 410, 641, 0,
	411, 412, 0, 0, 413, 0, 0, 0, 414, 415,
	418, 0, 0, 416, 417, 419, 420, 0, 421, 422,
	424, 427, 423, 425, 426, 428, 441, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 443,
	0, 442, 0, 444, 445, 446, 451, 453, 454, 449,
	450, 452, 455, 456, 448, 3971, 447, 0, 0, 0,
	457, 458, 0, 642, 459, 643, 461, 462, 0, 0,
	463, 0, 0, 0, 465, 466, 467, 0, 0, 468,
	469, 644, 0, 470, 0, 645, 471, 472, 464, 473,
	474, 475, 476, 477, 478, 479, 480, 0, 481, 482,
	646, 483, 484, 485, 647, 486, 487, 488, 648, 489,
	649, 490, 491, 3973, 492, 493, 0, 494, 495, 496,
	497, 498, 499, 500, 650, 501, 503, 502, 504, 0,
	505, 0, 506, 507, 508, 0, 0, 0, 0, 509,
	0, 511, 512, 513, 514, 510, 515, 516, 517, 518,
	0, 519, 520, 521, 0, 522, 523, 524, 525, 651,
	526, 0, 527, 528, 534, 535, 529, 530, 536, 537,
	538, 539, 540, 0, 542, 543, 541, 544, 545, 546,
	0, 547, 548, 531, 532, 549, 550, 0, 551, 552,
	553, 554, 555, 556, 652, 0, 557, 0, 558, 559,
	560, 562, 533, 563, 568, 569, 653, 564, 565, 566,
	567, 654, 571, 572, 0, 573, 574, 0, 570, 561,
	0, 575, 576, 577, 578, 579, 580, 581, 354, 582,
	0, 583, 655, 656, 657, 658, 0, 592, 0, 584,
	585, 586, 659, 587, 660, 0, 588, 589, 590, 591,
	0, 593, 594, 0, 0, 595, 596, 597, 599, 600,
	598, 601, 0, 602, 0, 0, 603, 604, 605, 661,
	662, 663, 0, 607, 606, 608, 664, 754, 0, 264,
	0, 0, 609, 610, 665, 611, 612, 613, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 272, 271, 273,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 614, 0, 0, 0, 0, 280, 281, 1313,
	282, 283, 284, 285, 286, 287, 615, 616, 0, 288,
	617, 289, 618, 0, 619, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 620, 621, 1311, 0, 297,
	298, 623, 0, 0, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 0, 321, 322, 323, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 327, 328, 0, 329,
	624, 625, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 626,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	627, 628, 360, 0, 0, 0, 0, 0, 0, 0,
	361, 362, 363, 629, 0, 0, 0, 364, 0, 365,
	0, 0, 0, 366, 367, 630, 631, 368, 369, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 632, 0,
	633, 378, 0, 379, 380, 381, 382, 383, 634, 635,
	636, 460, 0, 384, 385, 0, 386, 387, 388, 389,
	0, 0, 0, 0, 390, 391, 392, 394, 0, 0,
	393, 637, 638, 0, 639, 0, 395, 396, 0, 640,
	0, 397, 398, 399, 0, 400, 0, 0, 0, 401,
	402, 403, 404, 405, 406, 0, 407, 409, 408, 0,
	410, 641, 0, 411, 412, 0, 0, 413, 0, 0,
	0, 414, 415, 418, 0, 0, 416, 417, 419, 420,
	0, 421, 422, 424, 427, 423, 425, 426, 428, 441,
	429, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 443, 0, 755, 0, 444, 445, 446, 451,
	453, 454, 449, 450, 452, 455, 456, 448, 0, 447,
	0, 0, 0, 457, 458, 0, 642, 459, 643, 461,
	462, 0, 0, 463, 0, 0, 0, 465, 466, 467,
	0, 0, 468, 469, 644, 0, 470, 0, 645, 471,
	472, 464, 473, 474, 475, 476, 477, 478, 479, 480,
	0, 481, 482, 646, 483, 484, 485, 647, 486, 487,
	488, 648, 489, 649, 490, 491, 0, 492, 493, 0,
	494, 495, 496, 497, 498, 499, 500, 650, 501, 503,
	502, 504, 0, 505, 0, 506, 507, 508, 0, 0,
	0, 0, 509, 0, 511, 512, 513, 514, 510, 515,
	516, 517, 518, 0, 519, 520, 521, 0, 522, 523,
	524, 525, 651, 526, 0, 527, 528, 534, 535, 529,
	530, 751, 537, 538, 539, 540, 0, 542, 543, 541,
	544, 1314, 546, 0, 547, 548, 531, 532, 549, 550,
	0, 551, 552, 553, 554, 555, 556, 652, 0, 557,
	0, 558, 559, 560, 562, 533, 563, 568, 569, 653,
	564, 565, 566, 567, 654, 571, 572, 0, 573, 574,
	0, 570, 561, 0, 575, 576, 577, 578, 579, 580,
	581, 354, 582, 0, 583, 750, 656, 657, 658, 0,
	592, 0, 584, 585, 586, 659, 587, 660, 0, 588,
	589, 590, 591, 0, 593, 594, 0, 0, 595, 596,
	597, 599, 600, 598, 601, 0, 602, 0, 0, 603,
	604, 605, 661, 662, 663, 0, 607, 606, 608, 664,
	754, 0, 264, 0, 0, 609, 610, 665, 611, 612,
	613, 0, 0, 0, 0, 0, 0, 0, 0, 270,
	272, 271, 273, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 614, 0, 0, 0, 0,
	280, 281, 1313, 282, 283, 284, 285, 286, 287, 615,
	616, 0, 288, 617, 289, 618, 0, 619, 290, 291,
	292, 293, 294, 295, 0, 0, 0, 296, 620, 621,
	1311, 0, 297, 298, 623, 0, 0, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 0, 321, 322, 323, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 326, 327,
	328, 0, 329, 624, 625, 0, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	340, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 626, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 627, 628, 360, 0, 0, 0, 0,
	0, 0, 0, 361, 362, 363, 629, 0, 0, 0,
	364, 0, 365, 0, 0, 0, 366, 367, 630, 631,
	368, 369, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 632, 0, 633, 378, 0, 379, 380, 381, 382,
	383, 634, 635, 636, 460, 0, 384, 385, 0, 386,
	387, 388, 389, 0, 0, 0, 0, 390, 391, 392,
	394, 0, 0, 393, 637, 638, 0, 639, 0, 395,
	396, 0, 640, 0, 397, 398, 399, 0, 400, 0,
	0, 0, 401, 402, 403, 404, 405, 406, 0, 407,
	409, 408, 0, 410, 641, 0, 411, 412, 0, 0,
	413, 0, 0, 0, 414, 415, 418, 0, 0, 416,
	417, 419, 420, 0, 421, 422, 424, 427, 423, 425,
	426, 428, 441, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 443, 0, 755, 0, 444,
	445, 446, 451, 453, 454, 449, 450, 452, 455, 456,
	448, 0, 447, 0, 0, 0, 457, 458, 0, 642,
	459, 643, 461, 462, 0, 0, 463, 0, 0, 0,
	465, 466, 467, 0, 0, 468, 469, 644, 0, 470,
	0, 645, 471, 472, 464, 473, 474, 475, 476, 477,
	478, 479, 480, 0, 481, 482, 646, 483, 484, 485,
	647, 486, 487, 488, 648, 489, 649, 490, 491, 0,
	492, 493, 0, 494, 495, 496, 497, 498, 499, 500,
	650, 501, 503, 502, 504, 0, 505, 0, 506, 507,
	508, 0, 0, 0, 0, 509, 0, 511, 512, 513,
	514, 510, 515, 516, 517, 518, 0, 519, 520, 521,
	0, 522, 523, 524, 525, 651, 526, 0, 527, 528,
	534, 535, 529, 530, 751, 537, 538, 539, 540, 0,
	542, 543, 541, 544, 1314, 546, 0, 547, 548, 531,
	532, 549, 550, 0, 551, 552, 553, 554, 555, 556,
	652, 0, 557, 0, 558, 559, 560, 562, 533, 563,
	568, 569, 653, 564, 565, 566, 567, 654, 571, 572,
	0, 573, 574, 0, 570, 561, 0, 575, 576, 577,
	578, 579, 580, 581, 354, 582, 0, 583, 750, 656,
	657, 658, 0, 592, 0, 584, 1312, 586, 659, 587,
	660, 0, 588, 589, 590, 591, 0, 593, 594, 0,
	0, 595, 596, 597, 599, 600, 598, 601, 0, 602,
	0, 0, 603, 604, 605, 661, 662, 663, 0, 607,
	606, 608, 664, 676, 0, 264, 0, 0, 609, 610,
	665, 611, 612, 613, 0, 0, 0, 0, 0, 0,
	0, 0, 270, 272, 271, 273, 274, 275, 276, 277,
	675, 278, 279, 0, 0, 0, 0, 0, 614, 0,
	0, 0, 0, 280, 281, 0, 282, 283, 284, 285,
	286, 287, 615, 616, 0, 288, 617, 289, 618, 0,
	619, 290, 291, 292, 293, 294, 295, 0, 0, 0,
	296, 620, 621, 622, 0, 297, 298, 623, 0, 0,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 323, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 327, 328, 0, 329, 624, 625, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 626, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 627, 628, 360, 0,
	0, 0, 0, 0, 0, 0, 361, 362, 363, 629,
	0, 0, 0, 364, 0, 365, 0, 0, 0, 366,
	367, 630, 631, 368, 369, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 632, 0, 633, 378, 0, 379,
	380, 381, 382, 383, 634, 635, 636, 460, 0, 384,
	385, 0, 386, 387, 388, 389, 0, 0, 0, 0,
	390, 391, 392, 394, 0, 0, 393, 637, 638, 0,
	639, 0, 395, 396, 0, 640, 0, 397, 398, 399,
	0, 400, 0, 0, 0, 401, 402, 403, 404, 405,
	406, 0, 407, 409, 408, 0, 410, 641, 0, 411,
	412, 0, 0, 413, 0, 0, 0, 414, 415, 418,
	0, 0, 416, 417, 419, 420, 0, 421, 422, 424,
	427, 423, 425, 426, 428, 441, 429, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 443, 0,
	442, 0, 444, 445, 446, 451, 453, 454, 449, 450,
	452, 455, 456, 448, 0, 447, 0, 0, 0, 457,
	458, 0, 642, 459, 643, 461, 462, 0, 0, 463,
	0, 0, 0, 465, 466, 467, 0, 0, 468, 469,
	644, 0, 470, 0, 645, 471, 472, 464, 473, 474,
	475, 476, 477, 478, 479, 480, 0, 481, 482, 646,
	483, 484, 485, 647, 486, 487, 488, 648, 489, 649,
	674, 491, 0, 492, 493, 0, 494, 495, 496, 497,
	498, 499, 500, 650, 501, 503, 502, 504, 0, 505,
	0, 506, 507, 508, 0, 0, 0, 0, 509, 0,
	511, 512, 513, 514, 510, 515, 516, 517, 518, 0,
	519, 520, 521, 0, 522, 523, 524, 525, 651, 526,
	0, 527, 528, 534, 535, 529, 530, 536, 537, 538,
	539, 540, 0, 542, 543, 541, 544, 545, 546, 0,
	547, 548, 531, 532, 549, 550, 0, 551, 552, 553,
	554, 555, 556, 652, 0, 557, 0, 558, 559, 560,
	562, 533, 563, 568, 569, 653, 564, 565, 566, 567,
	654, 571, 572, 0, 573, 574, 0, 570, 561, 0,
	575, 576, 577, 578, 579, 580, 581, 354, 582, 0,
	583, 655, 656, 657, 658, 0, 592, 0, 584, 585,
	586, 659, 587, 660, 0, 588, 589, 590, 591, 0,
	593, 594, 0, 0, 595, 596, 597, 599, 600, 598,
	601, 0, 602, 0, 0, 603, 604, 605, 661, 662,
	663, 0, 607, 606, 608, 664, 264, 2930, 0, 0,
	0, 609, 610, 665, 611, 612, 613, 0, 0, 0,
	0, 0, 0, 270, 272, 271, 273, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 614,
	0, 0, 0, 0, 280, 281, 0, 282, 283, 284,
	285, 286, 287, 615, 616, 0, 288, 617, 289, 618,
	0, 619, 290, 291, 292, 293, 294, 295, 0, 0,
	0, 296, 620, 621, 622, 0, 297, 298, 623, 0,
	0, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 0,
	321, 322, 323, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 326, 327, 328, 0, 329, 624, 625, 0,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 340, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 626, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 627, 628, 360,
	0, 0, 0, 0, 0, 0, 0, 361, 362, 363,
	629, 0, 0, 0, 364, 0, 365, 0, 0, 0,
	366, 367, 630, 631, 368, 369, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 632, 0, 633, 378, 0,
	379, 380, 381, 382, 383, 634, 635, 636, 460, 0,
	384, 385, 0, 386, 387, 388, 389, 0, 0, 0,
	0, 390, 391, 392, 394, 0, 0, 393, 637, 638,
	0, 639, 0, 395, 396, 0, 640, 0, 397, 398,
	399, 0, 400, 0, 0, 0, 401, 402, 403, 404,
	405, 406, 0, 407, 409, 408, 0, 410, 641, 0,
	411, 412, 0, 0, 413, 0, 0, 0, 414, 415,
	418, 0, 0, 416, 417, 419, 420, 0, 421, 422,
	424, 427, 423, 425, 426, 428, 441, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 443,
	0, 442, 0, 444, 445, 446, 451, 453, 454, 449,
	450, 452, 455, 456, 448, 0, 447, 0, 0, 0,
	457, 458, 0, 642, 459, 643, 461, 462, 0, 0,
	463, 0, 0, 0, 465, 466, 467, 0, 0, 468,
	469, 644, 0, 470, 0, 645, 471, 472, 464, 473,
	474, 475, 476, 477, 478, 479, 480, 0, 481, 482,
	646, 483, 484, 485, 647, 486, 487, 488, 648, 489,
	649, 490, 491, 0, 492, 493, 0, 494, 495, 496,
	497, 498, 499, 500, 650, 501, 503, 502, 504, 0,
	505, 0, 506, 507, 508, 0, 0, 0, 0, 509,
	0, 511, 512, 513, 514, 510, 515, 516, 517, 518,
	0, 519, 520, 521, 0, 522, 523, 524, 525, 651,
	526, 0, 527, 528, 534, 535, 529, 530, 536, 537,
	538, 539, 540, 0, 542, 543, 541, 544, 545, 546,
	0, 547, 548, 531, 532, 549, 550, 0, 551, 552,
	553, 554, 555, 556, 652, 0, 557, 0, 558, 559,
	560, 562, 533, 563, 568, 569, 653, 564, 565, 566,
	567, 654, 571, 572, 0, 573, 574, 0, 570, 561,
	0, 575, 576, 577, 578, 579, 580, 581, 354, 582,
	0, 583, 655, 656, 657, 658, 0, 592, 0, 584,
	585, 586, 659, 587, 660, 0, 588, 589, 590, 591,
	0, 593, 594, 0, 0, 595, 596, 597, 599, 600,
	598, 601, 0, 602, 0, 0, 603, 604, 605, 661,
	662, 663, 0, 607, 606, 608, 664, 264, 4077, 0,
	0, 0, 609, 610, 665, 611, 612, 613, 0, 0,
	0, 0, 0, 0, 270, 272, 271, 273, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	614, 0, 0, 0, 0, 280, 281, 0, 282, 283,
	284, 285, 286, 287, 615, 616, 0, 288, 617, 289,
	618, 0, 619, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 620, 621, 622, 0, 297, 298, 623,
	0, 0, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 323, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 327, 328, 0, 329, 624, 625,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 626, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 627, 628,
	360, 0, 0, 0, 0, 0, 0, 0, 361, 362,
	363, 629, 0, 0, 0, 364, 0, 365, 0, 0,
	0, 366, 367, 630, 631, 368, 369, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 632, 0, 633, 378,
	0, 379, 380, 381, 382, 383, 634, 635, 636, 460,
	0, 384, 385, 0, 386, 387, 388, 389, 0, 0,
	0, 0, 390, 391, 392, 394, 0, 0, 393, 637,
	638, 0, 639, 0, 395, 396, 0, 640, 0, 397,
	398, 399, 0, 400, 0, 0, 0, 401, 402, 403,
	404, 405, 406, 0, 407, 409, 408, 0, 410, 641,
	0, 411, 412, 0, 0, 413, 0, 0, 0, 414,
	415, 418, 0, 0, 416, 417, 419, 420, 0, 421,
	422, 424, 427, 423, 425, 426, 428, 441, 429, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	443, 0, 442, 0, 444, 445, 446, 451, 453, 454,
	449, 450, 452, 455, 456, 448, 0, 447, 0, 0,
	0, 457, 458, 0, 642, 459, 643, 461, 462, 0,
	0, 463, 0, 0, 0, 465, 466, 467, 0, 0,
	468, 469, 644, 0, 470, 0, 645, 471, 472, 464,
	473, 474, 475, 476, 477, 478, 479, 480, 0, 481,
	482, 646, 483, 484, 485, 647, 486, 487, 488, 648,
	489, 649, 490, 491, 0, 492, 493, 0, 494, 495,
	496, 497, 498, 499, 500, 650, 501, 503, 502, 504,
	0, 505, 0, 506, 507, 508, 0, 0, 0, 0,
	509, 0, 511, 512, 513, 514, 510, 515, 516, 517,
	518, 0, 519, 520, 521, 0, 522, 523, 524, 525,
	651, 526, 0, 527, 528, 534, 535, 529, 530, 536,
	537, 538, 539, 540, 0, 542, 543, 541, 544, 545,
	546, 0, 547, 548, 531, 532, 549, 550, 0, 551,
	552, 553, 554, 555, 556, 652, 0, 557, 0, 558,
	559, 560, 562, 533, 563, 568, 569, 653, 564, 565,
	566, 567, 654, 571, 572, 0, 573, 574, 0, 570,
	561, 0, 575, 576, 577, 578, 579, 580, 581, 354,
	582, 0, 583, 655, 656, 657, 658, 0, 592, 0,
	584, 585, 586, 659, 587, 660, 0, 588, 589, 590,
	591, 0, 593, 594, 0, 0, 595, 596, 597, 599,
	600, 598, 601, 0, 602, 0, 0, 603, 604, 605,
	661, 662, 663, 264, 607, 606, 608, 664, 0, 0,
	0, 0, 0, 609, 610, 665, 611, 612, 613, 0,
	270, 272, 271, 273, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 614, 0, 0, 0,
	0, 280, 281, 0, 282, 283, 284, 285, 286, 287,
	615, 616, 0, 288, 617, 289, 618, 0, 619, 290,
	291, 292, 293, 294, 295, 0, 0, 0, 296, 620,
	621, 622, 0, 297, 298, 623, 0, 0, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 0, 321, 322, 323,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	327, 328, 0, 329, 624, 625, 0, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 340, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 626, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 627, 628, 360, 0, 0, 0,
	0, 0, 0, 0, 361, 362, 363, 629, 0, 0,
	0, 364, 0, 365, 0, 0, 0, 366, 367, 630,
	631, 368, 369, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 632, 0, 633, 378, 0, 379, 380, 381,
	382, 383, 634, 635, 636, 460, 0, 384, 385, 0,
	386, 387, 388, 389, 0, 0, 0, 0, 390, 391,
	392, 394, 0, 0, 393, 637, 638, 0, 639, 0,
	395, 396, 0, 640, 0, 397, 398, 399, 0, 400,
	0, 0, 0, 401, 402, 403, 404, 405, 406, 0,
	407, 409, 408, 0, 410, 641, 0, 411, 412, 0,
	0, 413, 0, 0, 0, 414, 415, 418, 0, 0,
	416, 417, 419, 420, 0, 421, 422, 424, 427, 423,
	425, 426, 428, 441, 429, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 443, 0, 442, 0,
	444, 445, 446, 451, 453, 454, 449, 450, 452, 455,
	456, 448, 0, 447, 0, 0, 0, 457, 458, 0,
	642, 459, 643, 461, 462, 0, 0, 463, 0, 0,
	0, 465, 466, 467, 0, 0, 468, 469, 644, 0,
	470, 0, 645, 471, 472, 464, 473, 474, 475, 476,
	477, 478, 479, 480, 0, 481, 482, 646, 483, 484,
	485, 647, 486, 487, 488, 648, 489, 649, 490, 491,
	4344, 492, 493, 0, 494, 495, 496, 497, 498, 499,
	500, 650, 501, 503, 502, 504, 0, 505, 0, 506,
	507, 508, 0, 0, 0, 0, 509, 0, 511, 512,
	513, 514, 510, 515, 516, 517, 518, 0, 519, 520,
	521, 0, 522, 523, 524, 525, 651, 526, 0, 527,
	528, 534, 535, 529, 530, 536, 537, 538, 539, 540,
	0, 542, 543, 541, 544, 545, 546, 0, 547, 548,
	531, 532, 549, 550, 0, 551, 552, 553, 554, 555,
	556, 652, 0, 557, 0, 558, 559, 560, 562, 533,
	563, 568, 569, 653, 564, 565, 566, 567, 654, 571,
	572, 0, 573, 574, 0, 570, 561, 0, 575, 576,
	577, 578, 579, 580, 581, 354, 582, 0, 583, 655,
	656, 657, 658, 0, 592, 0, 584, 585, 586, 659,
	587, 660, 0, 588, 589, 590, 591, 0, 593, 594,
	0, 0, 595, 596, 597, 599, 600, 598, 601, 0,
	602, 0, 0, 603, 604, 605, 661, 662, 663, 264,
	607, 606, 608, 664, 0, 0, 0, 0, 0, 609,
	610, 665, 611, 612, 613, 0, 270, 272, 271, 273,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 614, 0, 0, 0, 0, 280, 281, 0,
	282, 283, 284, 285, 286, 287, 615, 616, 0, 288,
	617, 289, 618, 0, 619, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 620, 621, 622, 0, 297,
	298, 623, 0, 0, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 0, 321, 322, 323, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 327, 328, 0, 329,
	624, 625, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 626,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	627, 628, 360, 0, 0, 0, 0, 0, 0, 0,
	361, 362, 363, 629, 0, 0, 0, 364, 0, 365,
	0, 0, 0, 366, 367, 630, 631, 368, 369, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 632, 0,
	633, 378, 0, 379, 380, 381, 382, 383, 634, 635,
	636, 460, 0, 384, 385, 0, 386, 387, 388, 389,
	0, 0, 0, 0, 390, 391, 392, 394, 0, 0,
	393, 637, 638, 0, 639, 0, 395, 396, 0, 640,
	0, 397, 398, 399, 0, 400, 0, 0, 0, 401,
	402, 403, 404, 405, 406, 0, 407, 409, 408, 0,
	410, 641, 0, 411, 412, 0, 0, 413, 0, 0,
	0, 414, 415, 418, 0, 0, 416, 417, 419, 420,
	0, 421, 422, 424, 427, 423, 425, 426, 428, 441,
	429, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 443, 0, 442, 0, 444, 445, 446, 451,
	453, 454, 449, 450, 452, 455, 456, 448, 0, 447,
	0, 0, 0, 457, 458, 0, 642, 459, 643, 461,
	462, 0, 0, 463, 0, 0, 0, 465, 466, 467,
	0, 0, 468, 469, 644, 0, 470, 0, 645, 471,
	472, 464, 473, 474, 475, 476, 477, 478, 479, 480,
	0, 481, 482, 646, 483, 484, 485, 647, 486, 487,
	488, 648, 489, 649, 490, 491, 4339, 492, 493, 0,
	494, 495, 496, 497, 498, 499, 500, 650, 501, 503,
	502, 504, 0, 505, 0, 506, 507, 508, 0, 0,
	0, 0, 509, 0, 511, 512, 513, 514, 510, 515,
	516, 517, 518, 0, 519, 520, 521, 0, 522, 523,
	524, 525, 651, 526, 0, 527, 528, 534, 535, 529,
	530, 536, 537, 538, 539, 540, 0, 542, 543, 541,
	544, 545, 546, 0, 547, 548, 531, 532, 549, 550,
	0, 551, 552, 553, 554, 555, 556, 652, 0, 557,
	0, 558, 559, 560, 562, 533, 563, 568, 569, 653,
	564, 565, 566, 567, 654, 571, 572, 0, 573, 574,
	0, 570, 561, 0, 575, 576, 577, 578, 579, 580,
	581, 354, 582, 0, 583, 655, 656, 657, 658, 0,
	592, 0, 584, 585, 586, 659, 587, 660, 0, 588,
	589, 590, 591, 0, 593, 594, 0, 0, 595, 596,
	597, 599, 600, 598, 601, 0, 602, 0, 0, 603,
	604, 605, 661, 662, 663, 264, 607, 606, 608, 664,
	0, 0, 0, 0, 0, 609, 610, 665, 611, 612,
	613, 0, 270, 272, 271, 273, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 614, 0,
	0, 0, 0, 280, 281, 0, 282, 283, 284, 285,
	286, 287, 615, 616, 0, 288, 617, 289, 618, 0,
	619, 290, 291, 292, 293, 294, 295, 0, 0, 0,
	296, 620, 621, 622, 0, 297, 298, 623, 0, 0,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 323, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 327, 328, 0, 329, 624, 625, 3751, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 626, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 627, 628, 360, 0,
	0, 0, 0, 0, 0, 0, 361, 362, 363, 629,
	0, 0, 0, 364, 0, 365, 0, 0, 0, 366,
	367, 630, 631, 368, 369, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 632, 0, 633, 378, 0, 379,
	380, 381, 382, 383, 634, 635, 636, 460, 0, 384,
	385, 0, 386, 387, 388, 389, 0, 0, 0, 0,
	390, 391, 392, 394, 0, 0, 393, 637, 638, 0,
	639, 0, 395, 396, 0, 640, 0, 397, 398, 399,
	0, 400, 0, 0, 0, 401, 402, 403, 404, 405,
	406, 0, 407, 409, 408, 0, 410, 641, 0, 411,
	412, 0, 0, 413, 0, 0, 0, 414, 415, 418,
	0, 0, 416, 417, 419, 420, 0, 421, 422, 424,
	427, 423, 425, 426, 428, 441, 429, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 443, 0,
	442, 0, 444, 445, 446, 451, 453, 454, 449, 450,
	452, 455, 456, 448, 0, 447, 0, 0, 0, 457,
	458, 0, 642, 459, 643, 461, 462, 0, 0, 463,
	0, 0, 0, 465, 466, 467, 0, 0, 468, 469,
	644, 0, 470, 0, 645, 471, 472, 464, 473, 474,
	475, 476, 477, 478, 479, 480, 0, 481, 482, 646,
	483, 484, 485, 647, 486, 487, 488, 648, 489, 649,
	490, 491, 0, 492, 493, 0, 494, 495, 496, 497,
	498, 499, 500, 650, 501, 503, 502, 504, 0, 505,
	0, 506, 507, 508, 0, 0, 0, 0, 509, 0,
	511, 512, 513, 514, 510, 515, 516, 517, 518, 0,
	519, 520, 521, 0, 522, 523, 524, 525, 651, 526,
	0, 527, 528, 534, 535, 529, 530, 536, 537, 538,
	539, 540, 0, 542, 543, 541, 544, 545, 546, 0,
	547, 548, 531, 532, 549, 550, 0, 551, 552, 553,
	554, 555, 556, 652, 0, 557, 0, 558, 559, 560,
	562, 533, 563, 568, 569, 653, 564, 565, 566, 567,
	654, 571, 572, 0, 573, 574, 0, 570, 561, 0,
	575, 576, 577, 578, 579, 580, 581, 354, 582, 0,
	583, 655, 656, 657, 658, 0, 592, 0, 584, 585,
	586, 659, 587, 660, 0, 588, 589, 590, 591, 0,
	593, 594, 0, 0, 595, 596, 597, 599, 600, 598,
	601, 0, 602, 0, 0, 603, 604, 605, 661, 662,
	663, 264, 607, 606, 608, 664, 0, 0, 0, 0,
	0, 609, 610, 665, 611, 612, 613, 0, 270, 272,
	271, 273, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 614, 0, 2623, 0, 0, 280,
	281, 0, 282, 283, 284, 285, 286, 287, 615, 616,
	0, 288, 617, 289, 618, 0, 619, 290, 291, 292,
	293, 294, 295, 0, 0, 0, 296, 620, 621, 622,
	0, 297, 298, 623, 0, 0, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 0, 321, 322, 323, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 327, 328,
	0, 329, 624, 625, 0, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 340,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 626, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 627, 628, 360, 0, 0, 0, 0, 0,
	0, 0, 361, 362, 363, 629, 0, 0, 0, 364,
	0, 365, 0, 0, 0, 366, 367, 630, 631, 368,
	369, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	632, 0, 633, 378, 0, 379, 380, 381, 382, 383,
	634, 635, 636, 460, 0, 384, 385, 0, 386, 387,
	388, 389, 0, 0, 0, 0, 390, 391, 392, 394,
	0, 0, 393, 637, 638, 0, 639, 0, 395, 396,
	0, 640, 0, 397, 398, 399, 0, 400, 0, 0,
	0, 401, 402, 403, 404, 405, 406, 0, 407, 409,
	408, 0, 410, 641, 0, 411, 412, 0, 0, 413,
	0, 0, 0, 414, 415, 418, 0, 0, 416, 417,
	419, 420, 0, 421, 422, 424, 427, 423, 425, 426,
	428, 441, 429, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 443, 0, 442, 0, 444, 445,
	446, 451, 453, 454, 449, 450, 452, 455, 456, 448,
	0, 447, 0, 0, 0, 457, 458, 0, 642, 459,
	643, 461, 462, 0, 0, 463, 0, 0, 0, 465,
	466, 467, 0, 0, 468, 469, 644, 0, 470, 0,
	645, 471, 472, 464, 473, 474, 475, 476, 477, 478,
	479, 480, 0, 481, 482, 646, 483, 484, 485, 647,
	486, 487, 488, 648, 489, 649, 490, 491, 0, 492,
	493, 0, 494, 495, 496, 497, 498, 499, 500, 650,
	501, 503, 502, 504, 0, 505, 0, 506, 507, 508,
	0, 0, 0, 0, 509, 0, 511, 512, 513, 514,
	510, 515, 516, 517, 518, 0, 519, 520, 521, 0,
	522, 523, 524, 525, 651, 526, 0, 527, 528, 534,
	535, 529, 530, 536, 537, 538, 539, 540, 0, 542,
	543, 541, 544, 545, 546, 0, 547, 548, 531, 532,
	549, 550, 0, 551, 552, 553, 554, 555, 556, 652,
	0, 557, 0, 558, 559, 560, 562, 533, 563, 568,
	569, 653, 564, 565, 566, 567, 654, 571, 572, 0,
	573, 574, 0, 570, 561, 0, 575, 576, 577, 578,
	579, 580, 581, 354, 582, 0, 583, 655, 656, 657,
	658, 0, 592, 0, 584, 585, 586, 659, 587, 660,
	0, 588, 589, 590, 591, 0, 593, 594, 0, 0,
	595, 596, 597, 599, 600, 598, 601, 0, 602, 0,
	0, 603, 604, 605, 661, 662, 663, 0, 607, 606,
	608, 664, 264, 2930, 0, 0, 0, 609, 610, 665,
	611, 612, 613, 0, 0, 0, 0, 0, 0, 270,
	272, 271, 273, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 614, 0, 0, 0, 0,
	280, 281, 0, 282, 283, 284, 285, 286, 287, 615,
	616, 0, 288, 617, 289, 618, 0, 619, 290, 291,
	292, 293, 294, 295, 0, 0, 0, 296, 620, 621,
	622, 0, 297, 298, 623, 0, 0, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 0, 321, 322, 323, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 326, 327,
	328, 0, 329, 624, 625, 0, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	340, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 626, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 627, 628, 360, 0, 0, 0, 0,
	0, 0, 0, 361, 362, 363, 629, 0, 0, 0,
	364, 0, 365, 0, 0, 0, 366, 367, 630, 631,
	368, 369, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 632, 0, 633, 378, 0, 379, 380, 381, 382,
	383, 634, 635, 636, 460, 0, 384, 385, 0, 386,
	387, 388, 389, 0, 0, 0, 0, 390, 391, 392,
	394, 0, 0, 393, 637, 638, 0, 639, 0, 395,
	396, 0, 640, 0, 397, 398, 399, 0, 400, 0,
	0, 0, 401, 402, 403, 404, 405, 406, 0, 407,
	409, 408, 0, 410, 641, 0, 411, 412, 0, 0,
	413, 0, 0, 0, 414, 415, 418, 0, 0, 416,
	417, 419, 420, 0, 421, 422, 424, 427, 423, 425,
	426, 428, 441, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 443, 0, 442, 0, 444,
	445, 446, 451, 453, 454, 449, 450, 452, 455, 456,
	448, 0, 447, 0, 0, 0, 457, 458, 0, 642,
	459, 643, 461, 462, 0, 0, 463, 0, 0, 0,
	465, 466, 2927, 0, 0, 468, 469, 644, 0, 470,
	0, 645, 471, 472, 464, 473, 474, 475, 476, 477,
	478, 479, 480, 0, 481, 482, 646, 483, 484, 485,
	647, 486, 487, 488, 648, 489, 649, 490, 491, 0,
	492, 493, 0, 494, 495, 496, 497, 498, 499, 500,
	650, 501, 503, 502, 504, 0, 505, 0, 506, 507,
	508, 0, 0, 0, 0, 509, 0, 511, 512, 513,
	514, 510, 515, 516, 517, 518, 0, 519, 520, 521,
	0, 522, 523, 524, 525, 651, 526, 0, 527, 528,
	534, 535, 529, 530, 536, 537, 538, 539, 540, 0,
	542, 543, 541, 544, 545, 546, 0, 547, 548, 531,
	532, 549, 550, 0, 551, 552, 553, 554, 555, 556,
	652, 0, 557, 0, 558, 559, 560, 562, 533, 563,
	568, 569, 653, 564, 565, 566, 567, 654, 571, 572,
	0, 573, 574, 0, 570, 561, 0, 575, 576, 577,
	578, 579, 580, 581, 354, 582, 0, 583, 655, 656,
	657, 658, 0, 592, 0, 584, 585, 586, 659, 587,
	660, 0, 588, 589, 590, 591, 0, 593, 594, 0,
	0, 595, 596, 597, 599, 600, 598, 601, 0, 602,
	0, 0, 603, 604, 605, 661, 662, 663, 264, 607,
	606, 608, 664, 0, 0, 0, 0, 0, 609, 610,
	665, 611, 612, 613, 0, 270, 272, 271, 273, 274,
	275, 276, 277, 2258, 278, 279, 0, 0, 0, 0,
	0, 614, 0, 0, 0, 0, 280, 281, 0, 282,
	283, 284, 285, 286, 287, 615, 616, 0, 288, 617,
	289, 618, 0, 619, 290, 291, 292, 293, 294, 295,
	0, 0, 0, 296, 620, 621, 622, 0, 297, 298,
	623, 0, 0, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 0, 321, 322, 323, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 326, 327, 328, 0, 329, 624,
	625, 0, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 340, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 626, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 627,
	628, 360, 0, 0, 0, 0, 0, 0, 0, 361,
	362, 363, 629, 0, 0, 0, 364, 0, 365, 0,
	0, 0, 366, 367, 630, 631, 368, 369, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 632, 0, 633,
	378, 0, 379, 380, 381, 382, 383, 634, 635, 636,
	460, 0, 384, 385, 0, 386, 387, 388, 389, 0,
	0, 0, 0, 390, 391, 392, 394, 0, 0, 393,
	637, 638, 0, 639, 0, 395, 396, 0, 640, 0,
	397, 398, 399, 0, 400, 0, 0, 0, 401, 402,
	403, 404, 405, 406, 0, 407, 409, 408, 0, 410,
	641, 0, 411, 412, 0, 0, 413, 0, 0, 0,
	414, 415, 418, 0, 0, 416, 417, 419, 420, 0,
	421, 422, 424, 427, 423, 425, 426, 428, 441, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 443, 0, 442, 0, 444, 445, 446, 451, 453,
	454, 449, 450, 452, 455, 456, 448, 0, 447, 0,
	0, 0, 457, 458, 0, 642, 459, 643, 461, 462,
	0, 0, 463, 0, 0, 0, 465, 466, 467, 0,
	0, 468, 469, 644, 0, 470, 0, 645, 471, 472,
	464, 473, 474, 475, 476, 477, 478, 479, 480, 0,
	481, 482, 646, 483, 484, 485, 647, 486, 487, 488,
	648, 489, 649, 490, 491, 0, 492, 493, 0, 494,
	495, 496, 497, 498, 499, 500, 650, 501, 503, 502,
	504, 0, 505, 0, 506, 507, 508, 0, 0, 0,
	0, 509, 0, 511, 512, 513, 514, 510, 515, 516,
	517, 518, 0, 519, 520, 521, 0, 522, 523, 524,
	525, 651, 526, 0, 527, 528, 534, 535, 529, 530,
	536, 537, 538, 539, 540, 0, 542, 543, 541, 544,
	545, 546, 0, 547, 548, 531, 532, 549, 550, 0,
	551, 552, 553, 554, 555, 556, 652, 0, 557, 0,
	558, 559, 560, 562, 533, 563, 568, 569, 653, 564,
	565, 566, 567, 654, 571, 572, 0, 573, 574, 0,
	570, 561, 0, 575, 576, 577, 578, 579, 580, 581,
	354, 582, 0, 583, 655, 656, 657, 658, 0, 592,
	0, 584, 585, 586, 659, 587, 660, 0, 588, 589,
	590, 591, 0, 593, 594, 0, 0, 595, 596, 597,
	599, 600, 598, 601, 0, 602, 0, 0, 603, 604,
	605, 661, 662, 663, 0, 607, 606, 608, 664, 2246,
	0, 264, 0, 0, 609, 610, 665, 611, 612, 613,
	0, 0, 0, 0, 0, 0, 0, 0, 270, 272,
	271, 273, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 614, 0, 0, 0, 0, 280,
	281, 0, 282, 283, 284, 285, 286, 287, 615, 616,
	0, 288, 617, 289, 618, 0, 619, 290, 291, 292,
	293, 294, 295, 0, 0, 0, 296, 620, 621, 622,
	0, 297, 298, 623, 0, 0, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 0, 321, 322, 323, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 327, 328,
	0, 329, 624, 625, 0, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 340,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 626, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 627, 628, 360, 0, 0, 0, 0, 0,
	0, 0, 361, 362, 363, 629, 0, 0, 0, 364,
	0, 365, 0, 0, 0, 366, 367, 630, 631, 368,
	369, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	632, 0, 633, 378, 0, 379, 380, 381, 382, 383,
	634, 635, 636, 460, 0, 384, 385, 0, 386, 387,
	388, 389, 0, 0, 0, 0, 390, 391, 392, 394,
	0, 0, 393, 637, 638, 0, 639, 0, 395, 396,
	0, 640, 0, 397, 398, 399, 0, 400, 0, 0,
	0, 401, 402, 403, 404, 405, 406, 0, 407, 409,
	408, 0, 410, 641, 0, 411, 412, 0, 0, 413,
	0, 0, 0, 414, 415, 418, 0, 0, 416, 417,
	419, 420, 0, 421, 422, 424, 427, 423, 425, 426,
	428, 441, 429, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 443, 0, 442, 0, 444, 445,
	446, 451, 453, 454, 449, 450, 452, 455, 456, 448,
	0, 447, 0, 0, 0, 457, 458, 0, 642, 459,
	643, 461, 462, 0, 0, 463, 0, 0, 0, 465,
	466, 467, 0, 0, 468, 469, 644, 0, 470, 0,
	645, 471, 472, 464, 473, 474, 475, 476, 477, 478,
	479, 480, 0, 481, 482, 646, 483, 484, 485, 647,
	486, 487, 488, 648, 489, 649, 490, 491, 0, 492,
	493, 0, 494, 495, 496, 497, 498, 499, 500, 650,
	501, 503, 502, 504, 0, 505, 0, 506, 507, 508,
	0, 0, 0, 0, 509, 0, 511, 512, 513, 514,
	510, 515, 516, 517, 518, 0, 519, 520, 521, 0,
	522, 523, 524, 525, 651, 526, 0, 527, 528, 534,
	535, 529, 530, 536, 537, 538, 539, 540, 0, 542,
	543, 541, 544, 545, 546, 0, 547, 548, 531, 532,
	549, 550, 0, 551, 552, 553, 554, 555, 556, 652,
	0, 557, 0, 558, 559, 560, 562, 533, 563, 568,
	569, 653, 564, 565, 566, 567, 654, 571, 572, 0,
	573, 574, 0, 570, 561, 0, 575, 576, 577, 578,
	579, 580, 581, 354, 582, 0, 583, 655, 656, 657,
	658, 0, 592, 0, 584, 585, 586, 659, 587, 660,
	0, 588, 589, 590, 591, 0, 593, 594, 0, 0,
	595, 596, 597, 599, 600, 598, 601, 0, 602, 0,
	0, 603, 604, 605, 661, 662, 663, 0, 607, 606,
	608, 664, 754, 0, 264, 0, 0, 609, 610, 665,
	611, 612, 613, 0, 0, 0, 0, 0, 0, 0,
	0, 270, 272, 271, 273, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 614, 0, 0,
	0, 0, 280, 281, 0, 282, 283, 284, 285, 286,
	287, 615, 616, 0, 288, 617, 289, 618, 0, 619,
	290, 291, 292, 293, 294, 295, 0, 0, 0, 296,
	620, 621, 622, 0, 297, 744, 623, 0, 0, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 0, 321, 322,
	323, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	326, 327, 328, 0, 329, 624, 625, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 340, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 626, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 627, 628, 360, 0, 0,
	0, 0, 0, 0, 0, 361, 362, 363, 629, 0,
	0, 0, 364, 0, 365, 0, 0, 0, 366, 367,
	630, 631, 368, 369, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 632, 0, 633, 378, 0, 379, 380,
	381, 382, 383, 634, 635, 636, 460, 0, 384, 385,
	0, 386, 387, 388, 389, 0, 0, 0, 0, 390,
	391, 392, 394, 0, 0, 393, 637, 638, 0, 639,
	0, 395, 396, 0, 640, 0, 397, 398, 399, 0,
	400, 0, 0, 0, 401, 402, 403, 404, 405, 406,
	0, 407, 409, 408, 0, 410, 641, 0, 411, 412,
	0, 0, 413, 0, 0, 0, 414, 415, 418, 0,
	0, 416, 417, 419, 420, 0, 421, 422, 424, 427,
	423, 425, 426, 428, 441, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 443, 0, 755,
	0, 444, 445, 446, 451, 453, 454, 449, 450, 452,
	455, 456, 448, 0, 447, 0, 0, 0, 457, 458,
	0, 642, 459, 643, 461, 462, 0, 0, 463, 0,
	0, 0, 465, 466, 467, 0, 0, 468, 469, 644,
	0, 470, 0, 645, 471, 472, 464, 473, 474, 475,
	476, 477, 478, 479, 480, 0, 481, 482, 646, 483,
	484, 485, 647, 486, 487, 488, 648, 489, 649, 490,
	491, 0, 492, 493, 0, 494, 495, 496, 497, 498,
	499, 500, 650, 501, 503, 502, 504, 0, 505, 0,
	506, 507, 508, 0, 0, 0, 0, 509, 0, 511,
	512, 513, 514, 510, 515, 516, 517, 518, 0, 519,
	520, 521, 0, 522, 523, 524, 525, 651, 526, 0,
	527, 528, 534, 535, 529, 530, 751, 537, 538, 539,
	540, 0, 542, 543, 541, 544, 1571, 546, 0, 547,
	548, 531, 532, 549, 550, 0, 551, 552, 553, 554,
	555, 556, 652, 0, 557, 0, 558, 559, 560, 562,
	533, 563, 568, 569, 653, 564, 565, 566, 567, 654,
	571, 572, 0, 573, 574, 0, 570, 561, 0, 575,
	576, 577, 578, 579, 580, 581, 354, 582, 0, 583,
	750, 656, 657, 658, 0, 592, 0, 584, 585, 586,
	659, 587, 660, 0, 588, 589, 590, 591, 0, 593,
	594, 0, 0, 595, 596, 597, 599, 600, 598, 601,
	0, 602, 0, 0, 603, 604, 605, 661, 662, 663,
	0, 607, 606, 608, 664, 1544, 0, 264, 0, 0,
	609, 610, 665, 611, 612, 613, 0, 0, 0, 0,
	0, 0, 0, 0, 270, 272, 271, 273, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	614, 0, 0, 0, 0, 280, 281, 0, 282, 283,
	284, 285, 286, 287, 615, 616, 0, 288, 617, 289,
	618, 0, 619, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 620, 621, 622, 0, 297, 298, 623,
	0, 0, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 323, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 327, 328, 0, 329, 624, 625,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 626, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 627, 628,
	360, 0, 0, 0, 0, 0, 0, 0, 361, 362,
	363, 629, 0, 0, 0, 364, 0, 365, 0, 0,
	0, 366, 367, 630, 631, 368, 369, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 632, 0, 633, 378,
	0, 379, 380, 381, 382, 383, 1543, 635, 636, 460,
	0, 384, 385, 0, 386, 387, 388, 389, 0, 0,
	0, 0, 390, 391, 392, 394, 0, 0, 393, 637,
	638, 0, 639, 0, 395, 396, 0, 640, 0, 397,
	398, 399, 0, 400, 0, 0, 0, 401, 402, 403,
	404, 405, 406, 0, 407, 409, 408, 0, 410, 641,
	0, 411, 412, 0, 0, 413, 0, 0, 0, 414,
	415, 418, 0, 0, 416, 417, 419, 420, 0, 421,
	422, 424, 427, 423, 425, 426, 428, 441, 429, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	443, 0, 442, 0, 444, 445, 446, 451, 453, 454,
	449, 450, 452, 455, 456, 448, 0, 447, 0, 0,
	0, 457, 458, 0, 642, 459, 643, 461, 462, 0,
	0, 463, 0, 0, 0, 465, 466, 467, 0, 0,
	468, 469, 644, 0, 470, 0, 645, 471, 472, 464,
	473, 474, 475, 476, 477, 478, 479, 480, 0, 481,
	482, 646, 483, 484, 485, 647, 486, 487, 488, 648,
	489, 649, 490, 491, 0, 492, 493, 0, 494, 495,
	496, 497, 498, 499, 500, 650, 501, 503, 502, 504,
	0, 505, 0, 506, 507, 508, 0, 0, 0, 0,
	509, 0, 511, 512, 513, 514, 510, 515, 516, 517,
	518, 0, 519, 520, 521, 0, 522, 523, 524, 525,
	651, 526, 0, 527, 528, 534, 535, 529, 530, 536,
	537, 538, 539, 540, 0, 542, 543, 541, 544, 545,
	546, 0, 547, 548, 531, 532, 549, 550, 0, 551,
	552, 553, 554, 555, 556, 652, 0, 557, 0, 558,
	559, 560, 562, 533, 563, 568, 569, 653, 564, 565,
	566, 567, 654, 571, 572, 0, 573, 574, 0, 570,
	561, 0, 575, 576, 577, 578, 579, 580, 581, 354,
	582, 0, 583, 655, 656, 657, 658, 0, 592, 0,
	584, 585, 586, 659, 587, 660, 0, 588, 589, 590,
	591, 0, 593, 594, 0, 0, 595, 596, 597, 599,
	600, 598, 601, 0, 602, 0, 0, 603, 604, 605,
	661, 662, 663, 0, 607, 606, 608, 664, 1528, 0,
	264, 0, 0, 609, 610, 665, 611, 612, 613, 0,
	0, 0, 0, 0, 0, 0, 0, 270, 272, 271,
	273, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 614, 0, 0, 0, 0, 280, 281,
	0, 282, 283, 284, 285, 286, 287, 615, 616, 0,
	288, 617, 289, 618, 0, 619, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 620, 621, 622, 0,
	297, 298, 623, 0, 0, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 323, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 326, 327, 328, 0,
	329, 624, 625, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	626, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 627, 628, 360, 0, 0, 0, 0, 0, 0,
	0, 361, 362, 363, 629, 0, 0, 0, 364, 0,
	365, 0, 0, 0, 366, 367, 630, 631, 368, 369,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 632,
	0, 633, 378, 0, 379, 380, 381, 382, 383, 1526,
	635, 636, 460, 0, 384, 385, 0, 386, 387, 388,
	389, 0, 0, 0, 0, 390, 391, 392, 394, 0,
	0, 393, 637, 638, 0, 639, 0, 395, 396, 0,
	640, 0, 397, 398, 399, 0, 400, 0, 0, 0,
	401, 402, 403, 404, 405, 406, 0, 407, 409, 408,
	0, 410, 641, 0, 411, 412, 0, 0, 413, 0,
	0, 0, 414, 415, 418, 0, 0, 416, 417, 419,
	420, 0, 421, 422, 424, 427, 423, 425, 426, 428,
	441, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 443, 0, 442, 0, 444, 445, 446,
	451, 453, 454, 449, 450, 452, 455, 456, 448, 0,
	447, 0, 0, 0, 457, 458, 0, 642, 459, 643,
	461, 462, 0, 0, 463, 0, 0, 0, 465, 466,
	467, 0, 0, 468, 469, 644, 0, 470, 0, 645,
	471, 472, 464, 473, 474, 475, 476, 477, 478, 479,
	480, 0, 481, 482, 646, 483, 484, 485, 647, 486,
	487, 488, 648, 489, 649, 490, 491, 0, 492, 493,
	0, 494, 495, 496, 497, 498, 499, 500, 650, 501,
	503, 502, 504, 0, 505, 0, 506, 507, 508, 0,
	0, 0, 0, 509, 0, 511, 512, 513, 514, 510,
	515, 516, 517, 518, 0, 519, 520, 521, 0, 522,
	523, 524, 525, 651, 526, 0, 527, 528, 534, 535,
	529, 530, 536, 537, 538, 539, 540, 0, 542, 543,
	541, 544, 545, 546, 0, 547, 548, 531, 532, 549,
	550, 0, 551, 552, 553, 554, 555, 556, 652, 0,
	557, 0, 558, 559, 560, 562, 533, 563, 568, 569,
	653, 564, 565, 566, 567, 654, 571, 572, 0, 573,
	574, 0, 570, 561, 0, 575, 576, 577, 578, 579,
	580, 581, 354, 582, 0, 583, 655, 656, 657, 658,
	0, 592, 0, 584, 585, 586, 659, 587, 660, 0,
	588, 589, 590, 591, 0, 593, 594, 0, 0, 595,
	596, 597, 599, 600, 598, 601, 0, 602, 0, 0,
	603, 604, 605, 661, 662, 663, 0, 607, 606, 608,
	664, 1521, 0, 264, 0, 0, 609, 610, 665, 611,
	612, 613, 0, 0, 0, 0, 0, 0, 0, 0,
	270, 272, 271, 273, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 614, 0, 0, 0,
	0, 280, 281, 0, 282, 283, 284, 285, 286, 287,
	615, 616, 0, 288, 617, 289, 618, 0, 619, 290,
	291, 292, 293, 294, 295, 0, 0, 0, 296, 620,
	621, 622, 0, 297, 298, 623, 0, 0, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 0, 321, 322, 323,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	327, 328, 0, 329, 624, 625, 0, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 340, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 626, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 627, 628, 360, 0, 0, 0,
	0, 0, 0, 0, 361, 362, 363, 629, 0, 0,
	0, 364, 0, 365, 0, 0, 0, 366, 367, 630,
	631, 368, 369, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 632, 0, 633, 378, 0, 379, 380, 381,
	382, 383, 634, 635, 636, 460, 0, 384, 385, 0,
	386, 387, 388, 389, 0, 0, 0, 0, 390, 391,
	392, 394, 0, 0, 393, 637, 638, 0, 639, 0,
	395, 396, 0, 640, 0, 397, 398, 399, 0, 400,
	0, 0, 0, 401, 402, 403, 404, 405, 406, 0,
	407, 409, 408, 0, 410, 641, 0, 411, 412, 0,
	0, 413, 0, 0, 0, 414, 415, 418, 0, 0,
	416, 417, 419, 420, 0, 421, 422, 424, 427, 423,
	425, 426, 428, 441, 429, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 443, 0, 442, 0,
	444, 445, 446, 451, 453, 454, 449, 450, 452, 455,
	456, 448, 0, 447, 0, 0, 0, 457, 458, 0,
	642, 459, 643, 461, 462, 0, 0, 463, 0, 0,
	0, 465, 466, 467, 0, 0, 468, 469, 644, 0,
	470, 0, 645, 471, 472, 464, 473, 474, 475, 476,
	477, 478, 479, 480, 0, 481, 482, 646, 483, 484,
	485, 647, 486, 487, 488, 648, 489, 649, 490, 491,
	0, 492, 493, 0, 494, 495, 496, 497, 498, 499,
	500, 650, 501, 503, 502, 504, 0, 505, 0, 506,
	507, 508, 0, 0, 0, 0, 509, 0, 511, 512,
	513, 514, 510, 515, 516, 517, 518, 0, 519, 520,
	521, 0, 522, 523, 524, 525, 651, 526, 0, 527,
	528, 534, 535, 529, 530, 536, 537, 538, 539, 540,
	0, 542, 543, 541, 544, 545, 546, 0, 547, 548,
	531, 532, 549, 550, 0, 551, 552, 553, 554, 555,
	556, 652, 0, 557, 0, 558, 559, 560, 562, 533,
	563, 568, 569, 653, 564, 565, 566, 567, 654, 571,
	572, 0, 573, 574, 0, 570, 561, 0, 575, 576,
	577, 578, 579, 580, 581, 354, 582, 0, 583, 655,
	656, 657, 658, 0, 592, 0, 584, 585, 586, 659,
	587, 660, 0, 588, 589, 590, 591, 0, 593, 594,
	0, 0, 595, 596, 597, 599, 600, 598, 601, 0,
	602, 0, 0, 603, 604, 605, 661, 662, 663, 0,
	607, 606, 608, 664, 1498, 0, 264, 0, 0, 609,
	610, 665, 611, 612, 613, 0, 0, 0, 0, 0,
	0, 0, 0, 270, 272, 271, 273, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 614,
	0, 0, 0, 0, 280, 281, 0, 282, 283, 284,
	285, 286, 287, 615, 616, 0, 288, 617, 289, 618,
	0, 619, 290, 291, 292, 293, 294, 295, 0, 0,
	0, 296, 620, 621, 622, 0, 297, 298, 623, 0,
	0, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 0,
	321, 322, 323, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 326, 327, 328, 0, 329, 624, 625, 0,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 340, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 626, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 627, 628, 360,
	0, 0, 0, 0, 0, 0, 0, 361, 362, 363,
	629, 0, 0, 0, 364, 0, 365, 0, 0, 0,
	366, 367, 630, 631, 368, 369, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 632, 0, 633, 378, 0,
	379, 380, 381, 382, 383, 1496, 635, 636, 460, 0,
	384, 385, 0, 386, 387, 388, 389, 0, 0, 0,
	0, 390, 391, 392, 394, 0, 0, 393, 637, 638,
	0, 639, 0, 395, 396, 0, 640, 0, 397, 398,
	399, 0, 400, 0, 0, 0, 401, 402, 403, 404,
	405, 406, 0, 407, 409, 408, 0, 410, 641, 0,
	411, 412, 0, 0, 413, 0, 0, 0, 414, 415,
	418, 0, 0, 416, 417, 419, 420, 0, 421, 422,
	424, 427, 423, 425, 426, 428, 441, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 443,
	0, 442, 0, 444, 445, 446, 451, 453, 454, 449,
	450, 452, 455, 456, 448, 0, 447, 0, 0, 0,
	457, 458, 0, 642, 459, 643, 461, 462, 0, 0,
	463, 0, 0, 0, 465, 466, 467, 0, 0, 468,
	469, 644, 0, 470, 0, 645, 471, 472, 464, 473,
	474, 475, 476, 477, 478, 479, 480, 0, 481, 482,
	646, 483, 484, 485, 647, 486, 487, 488, 648, 489,
	649, 490, 491, 0, 492, 493, 0, 494, 495, 496,
	497, 498, 499, 500, 650, 501, 503, 502, 504, 0,
	505, 0, 506, 507, 508, 0, 0, 0, 0, 509,
	0, 511, 512, 513, 514, 510, 515, 516, 517, 518,
	0, 519, 520, 521, 0, 522, 523, 524, 525, 651,
	526, 0, 527, 528, 534, 535, 529, 530, 536, 537,
	538, 539, 540, 0, 542, 543, 541, 544, 545, 546,
	0, 547, 548, 531, 532, 549, 550, 0, 551, 552,
	553, 554, 555, 556, 652, 0, 557, 0, 558, 559,
	560, 562, 533, 563, 568, 569, 653, 564, 565, 566,
	567, 654, 571, 572, 0, 573, 574, 0, 570, 561,
	0, 575, 576, 577, 578, 579, 580, 581, 354, 582,
	0, 583, 655, 656, 657, 658, 0, 592, 0, 584,
	585, 586, 659, 587, 660, 0, 588, 589, 590, 591,
	0, 593, 594, 0, 0, 595, 596, 597, 599, 600,
	598, 601, 0, 602, 0, 0, 603, 604, 605, 661,
	662, 663, 0, 607, 606, 608, 664, 1459, 0, 264,
	0, 0, 609, 610, 665, 611, 612, 613, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 272, 271, 273,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 614, 0, 0, 0, 0, 280, 281, 0,
	282, 283, 284, 285, 286, 287, 615, 616, 0, 288,
	617, 289, 618, 0, 619, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 620, 621, 622, 0, 297,
	298, 623, 0, 0, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 0, 321, 322, 323, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 327, 328, 0, 329,
	624, 625, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 626,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	627, 628, 360, 0, 0, 0, 0, 0, 0, 0,
	361, 362, 363, 629, 0, 0, 0, 364, 0, 365,
	0, 0, 0, 366, 367, 630, 631, 368, 369, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 632, 0,
	633, 378, 0, 379, 380, 381, 382, 383, 634, 635,
	636, 460, 0, 384, 385, 0, 386, 387, 388, 389,
	0, 0, 0, 0, 390, 391, 392, 394, 0, 0,
	393, 637, 638, 0, 639, 0, 395, 396, 0, 640,
	0, 397, 398, 399, 0, 400, 0, 0, 0, 401,
	402, 403, 404, 405, 406, 0, 407, 409, 408, 0,
	410, 641, 0, 411, 412, 0, 0, 413, 0, 0,
	0, 414, 415, 418, 0, 0, 416, 417, 419, 420,
	0, 421, 422, 424, 427, 423, 425, 426, 428, 441,
	429, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 443, 0, 442, 0, 444, 445, 446, 451,
	453, 454, 449, 450, 452, 455, 456, 448, 0, 447,
	0, 0, 0, 457, 458, 0, 642, 459, 643, 461,
	462, 0, 0, 463, 0, 0, 0, 465, 466, 467,
	0, 0, 468, 469, 644, 0, 470, 0, 645, 471,
	472, 464, 473, 474, 475, 476, 477, 478, 479, 480,
	0, 481, 482, 646, 483, 484, 485, 647, 486, 487,
	488, 648, 489, 649, 490, 491, 0, 492, 493, 0,
	494, 495, 496, 497, 498, 499, 500, 650, 501, 503,
	502, 504, 0, 505, 0, 506, 507, 508, 0, 0,
	0, 0, 509, 0, 511, 512, 513, 514, 510, 515,
	516, 517, 518, 0, 519, 520, 521, 0, 522, 523,
	524, 525, 651, 526, 0, 527, 528, 534, 535, 529,
	530, 536, 537, 538, 539, 540, 0, 542, 543, 541,
	544, 545, 546, 0, 547, 548, 531, 532, 549, 550,
	0, 551, 552, 553, 554, 555, 556, 652, 0, 557,
	0, 558, 559, 560, 562, 533, 563, 568, 569, 653,
	564, 565, 566, 567, 654, 571, 572, 0, 573, 574,
	0, 570, 561, 0, 575, 576, 577, 578, 579, 580,
	581, 354, 582, 0, 583, 655, 656, 657, 658, 0,
	592, 0, 584, 585, 586, 659, 587, 660, 0, 588,
	589, 590, 591, 0, 593, 594, 0, 0, 595, 596,
	597, 599, 600, 598, 601, 0, 602, 0, 0, 603,
	604, 605, 661, 662, 663, 0, 607, 606, 608, 664,
	1444, 0, 264, 0, 0, 609, 610, 665, 611, 612,
	613, 0, 0, 0, 0, 0, 0, 0, 0, 270,
	272, 271, 273, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 614, 0, 0, 0, 0,
	280, 281, 0, 282, 283, 284, 285, 286, 287, 615,
	616, 0, 288, 617, 289, 618, 0, 619, 290, 291,
	292, 293, 294, 295, 0, 0, 0, 296, 620, 621,
	622, 0, 297, 298, 623, 0, 0, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 0, 321, 322, 323, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 326, 327,
	328, 0, 329, 624, 625, 0, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	340, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 626, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 627, 628, 360, 0, 0, 0, 0,
	0, 0, 0, 361, 362, 363, 629, 0, 0, 0,
	364, 0, 365, 0, 0, 0, 366, 367, 630, 631,
	368, 369, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 632, 0, 633, 378, 0, 379, 380, 381, 382,
	383, 634, 635, 636, 460, 0, 384, 385, 0, 386,
	387, 388, 389, 0, 0, 0, 0, 390, 391, 392,
	394, 0, 0, 393, 637, 638, 0, 639, 0, 395,
	396, 0, 640, 0, 397, 398, 399, 0, 400, 0,
	0, 0, 401, 402, 403, 404, 405, 406, 0, 407,
	409, 408, 0, 410, 641, 0, 411, 412, 0, 0,
	413, 0, 0, 0, 414, 415, 418, 0, 0, 416,
	417, 419, 420, 0, 421, 422, 424, 427, 423, 425,
	426, 428, 441, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 443, 0, 442, 0, 444,
	445, 446, 451, 453, 454, 449, 450, 452, 455, 456,
	448, 0, 447, 0, 0, 0, 457, 458, 0, 642,
	459, 643, 461, 462, 0, 0, 463, 0, 0, 0,
	465, 466, 467, 0, 0, 468, 469, 644, 0, 470,
	0, 645, 471, 472, 464, 473, 474, 475, 476, 477,
	478, 479, 480, 0, 481, 482, 646, 483, 484, 485,
	647, 486, 487, 488, 648, 489, 649, 490, 491, 0,
	492, 493, 0, 494, 495, 496, 497, 498, 499, 500,
	650, 501, 503, 502, 504, 0, 505, 0, 506, 507,
	508, 0, 0, 0, 0, 509, 0, 511, 512, 513,
	514, 510, 515, 516, 517, 518, 0, 519, 520, 521,
	0, 522, 523, 524, 525, 651, 526, 0, 527, 528,
	534, 535, 529, 530, 536, 537, 538, 539, 540, 0,
	542, 543, 541, 544, 545, 546, 0, 547, 548, 531,
	532, 549, 550, 0, 551, 552, 553, 554, 555, 556,
	652, 0, 557, 0, 558, 559, 560, 562, 533, 563,
	568, 569, 653, 564, 565, 566, 567, 654, 571, 572,
	0, 573, 574, 0, 570, 561, 0, 575, 576, 577,
	578, 579, 580, 581, 354, 582, 0, 583, 655, 656,
	657, 658, 0, 592, 0, 584, 585, 586, 659, 587,
	660, 0, 588, 589, 590, 591, 0, 593, 594, 0,
	0, 595, 596, 597, 599, 600, 598, 601, 0, 602,
	0, 0, 603, 604, 605, 661, 662, 663, 0, 607,
	606, 608, 664, 1281, 0, 264, 0, 0, 609, 610,
	665, 611, 612, 613, 0, 0, 0, 0, 0, 0,
	0, 0, 270, 272, 271, 273, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 614, 0,
	0, 0, 0, 280, 281, 0, 282, 283, 284, 285,
	286, 287, 615, 616, 0, 288, 617, 289, 618, 0,
	619, 290, 291, 292, 293, 294, 295, 0, 0, 0,
	296, 620, 621, 622, 0, 297, 298, 623, 0, 0,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 323, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 327, 328, 0, 329, 624, 625, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 626, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 627, 628, 360, 0,
	0, 0, 0, 0, 0, 0, 361, 362, 363, 629,
	0, 0, 0, 364, 0, 365, 0, 0, 0, 366,
	367, 630, 631, 368, 369, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 632, 0, 633, 378, 0, 379,
	380, 381, 382, 383, 1280, 635, 636, 460, 0, 384,
	385, 0, 386, 387, 388, 389, 0, 0, 0, 0,
	390, 391, 392, 394, 0, 0, 393, 637, 638, 0,
	639, 0, 395, 396, 0, 640, 0, 397, 398, 399,
	0, 400, 0, 0, 0, 401, 402, 403, 404, 405,
	406, 0, 407, 409, 408, 0, 410, 641, 0, 411,
	412, 0, 0, 413, 0, 0, 0, 414, 415, 418,
	0, 0, 416, 417, 419, 420, 0, 421, 422, 424,
	427, 423, 425, 426, 428, 441, 429, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 443, 0,
	442, 0, 444, 445, 446, 451, 453, 454, 449, 450,
	452, 455, 456, 448, 0, 447, 0, 0, 0, 457,
	458, 0, 642, 459, 643, 461, 462, 0, 0, 463,
	0, 0, 0, 465, 466, 467, 0, 0, 468, 469,
	644, 0, 470, 0, 645, 471, 472, 464, 473, 474,
	475, 476, 477, 478, 479, 480, 0, 481, 482, 646,
	483, 484, 485, 647, 486, 487, 488, 648, 489, 649,
	490, 491, 0, 492, 493, 0, 494, 495, 496, 497,
	498, 499, 500, 650, 501, 503, 502, 504, 0, 505,
	0, 506, 507, 508, 0, 0, 0, 0, 509, 0,
	511, 512, 513, 514, 510, 515, 516, 517, 518, 0,
	519, 520, 521, 0, 522, 523, 524, 525, 651, 526,
	0, 527, 528, 534, 535, 529, 530, 536, 537, 538,
	539, 540, 0, 542, 543, 541, 544, 545, 546, 0,
	547, 548, 531, 532, 549, 550, 0, 551, 552, 553,
	554, 555, 556, 652, 0, 557, 0, 558, 559, 560,
	562, 533, 563, 568, 569, 653, 564, 565, 566, 567,
	654, 571, 572, 0, 573, 574, 0, 570, 561, 0,
	575, 576, 577, 578, 579, 580, 581, 354, 582, 0,
	583, 655, 656, 657, 658, 0, 592, 0, 584, 585,
	586, 659, 587, 660, 0, 588, 589, 590, 591, 0,
	593, 594, 0, 0, 595, 596, 597, 599, 600, 598,
	601, 0, 602, 0, 0, 603, 604, 605, 661, 662,
	663, 0, 607, 606, 608, 664, 1272, 0, 264, 0,
	0, 609, 610, 665, 611, 612, 613, 0, 0, 0,
	0, 0, 0, 0, 0, 270, 272, 271, 273, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 614, 0, 0, 0, 0, 280, 281, 0, 282,
	283, 284, 285, 286, 287, 615, 616, 0, 288, 617,
	289, 618, 0, 619, 290, 291, 292, 293, 294, 295,
	0, 0, 0, 296, 620, 621, 622, 0, 297, 298,
	623, 0, 0, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 0, 321, 322, 323, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 326, 327, 328, 0, 329, 624,
	625, 0, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 340, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 626, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 627,
	628, 360, 0, 0, 0, 0, 0, 0, 0, 361,
	362, 363, 629, 0, 0, 0, 364, 0, 365, 0,
	0, 0, 366, 367, 630, 631, 368, 369, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 632, 0, 633,
	378, 0, 379, 380, 381, 382, 383, 1271, 635, 636,
	460, 0, 384, 385, 0, 386, 387, 388, 389, 0,
	0, 0, 0, 390, 391, 392, 394, 0, 0, 393,
	637, 638, 0, 639, 0, 395, 396, 0, 640, 0,
	397, 398, 399, 0, 400, 0, 0, 0, 401, 402,
	403, 404, 405, 406, 0, 407, 409, 408, 0, 410,
	641, 0, 411, 412, 0, 0, 413, 0, 0, 0,
	414, 415, 418, 0, 0, 416, 417, 419, 420, 0,
	421, 422, 424, 427, 423, 425, 426, 428, 441, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 443, 0, 442, 0, 444, 445, 446, 451, 453,
	454, 449, 450, 452, 455, 456, 448, 0, 447, 0,
	0, 0, 457, 458, 0, 642, 459, 643, 461, 462,
	0, 0, 463, 0, 0, 0, 465, 466, 467, 0,
	0, 468, 469, 644, 0, 470, 0, 645, 471, 472,
	464, 473, 474, 475, 476, 477, 478, 479, 480, 0,
	481, 482, 646, 483, 484, 485, 647, 486, 487, 488,
	648, 489, 649, 490, 491, 0, 492, 493, 0, 494,
	495, 496, 497, 498, 499, 500, 650, 501, 503, 502,
	504, 0, 505, 0, 506, 507, 508, 0, 0, 0,
	0, 509, 0, 511, 512, 513, 514, 510, 515, 516,
	517, 518, 0, 519, 520, 521, 0, 522, 523, 524,
	525, 651, 526, 0, 527, 528, 534, 535, 529, 530,
	536, 537, 538, 539, 540, 0, 542, 543, 541, 544,
	545, 546, 0, 547, 548, 531, 532, 549, 550, 0,
	551, 552, 553, 554, 555, 556, 652, 0, 557, 0,
	558, 559, 560, 562, 533, 563, 568, 569, 653, 564,
	565, 566, 567, 654, 571, 572, 0, 573, 574, 0,
	570, 561, 0, 575, 576, 577, 578, 579, 580, 581,
	354, 582, 0, 583, 655, 656, 657, 658, 0, 592,
	0, 584, 585, 586, 659, 587, 660, 0, 588, 589,
	590, 591, 0, 593, 594, 0, 0, 595, 596, 597,
	599, 600, 598, 601, 0, 602, 0, 0, 603, 604,
	605, 661, 662, 663, 264, 607, 606, 608, 664, 0,
	0, 0, 0, 0, 609, 610, 665, 611, 612, 613,
	0, 270, 272, 271, 273, 274, 275, 276, 277, 1225,
	278, 279, 0, 0, 0, 0, 0, 614, 0, 0,
	0, 0, 280, 281, 0, 282, 283, 284, 285, 286,
	287, 615, 616, 0, 288, 617, 289, 618, 0, 619,
	290, 291, 292, 293, 294, 295, 0, 0, 0, 296,
	620, 621, 622, 0, 297, 298, 623, 0, 0, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 0, 321, 322,
	323, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	326, 327, 328, 0, 329, 624, 625, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 340, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 626, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 627, 628, 360, 0, 0,
	0, 0, 0, 0, 0, 361, 362, 363, 629, 0,
	0, 0, 364, 0, 365, 0, 0, 0, 366, 367,
	630, 631, 368, 369, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 632, 0, 633, 378, 0, 379, 380,
	381, 382, 383, 634, 635, 636, 460, 0, 384, 385,
	0, 386, 387, 388, 389, 0, 0, 0, 0, 390,
	391, 392, 394, 0, 0, 393, 637, 638, 0, 639,
	0, 395, 396, 0, 640, 0, 397, 398, 399, 0,
	400, 0, 0, 0, 401, 402, 403, 404, 405, 406,
	0, 407, 409, 408, 0, 410, 641, 0, 411, 412,
	0, 0, 413, 0, 0, 0, 414, 415, 418, 0,
	0, 416, 417, 419, 420, 0, 421, 422, 424, 427,
	423, 425, 426, 428, 441, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 443, 0, 442,
	0, 444, 445, 446, 451, 453, 454, 449, 450, 452,
	455, 456, 448, 0, 447, 0, 0, 0, 457, 458,
	0, 642, 459, 643, 461, 462, 0, 0, 463, 0,
	0, 0, 465, 466, 467, 0, 0, 468, 469, 644,
	0, 470, 0, 645, 471, 472, 464, 473, 474, 475,
	476, 477, 478, 479, 480, 0, 481, 482, 646, 483,
	484, 485, 647, 486, 487, 488, 648, 489, 649, 490,
	491, 0, 492, 493, 0, 494, 495, 496, 497, 498,
	499, 500, 650, 501, 503, 502, 504, 0, 505, 0,
	506, 507, 508, 0, 0, 0, 0, 509, 0, 511,
	512, 513, 514, 510, 515, 516, 517, 518, 0, 519,
	520, 521, 0, 522, 523, 524, 525, 651, 526, 0,
	527, 528, 534, 535, 529, 530, 536, 537, 538, 539,
	540, 0, 542, 543, 541, 544, 545, 546, 0, 547,
	548, 531, 532, 549, 550, 0, 551, 552, 553, 554,
	555, 556, 652, 0, 557, 0, 558, 559, 560, 562,
	533, 563, 568, 569, 653, 564, 565, 566, 567, 654,
	571, 572, 0, 573, 574, 0, 570, 561, 0, 575,
	576, 577, 578, 579, 580, 581, 354, 582, 0, 583,
	655, 656, 657, 658, 0, 592, 0, 584, 585, 586,
	659, 587, 660, 0, 588, 589, 590, 591, 0, 593,
	594, 0, 0, 595, 596, 597, 599, 600, 598, 601,
	0, 602, 0, 0, 603, 604, 605, 661, 662, 663,
	264, 607, 606, 608, 664, 0, 0, 0, 0, 0,
	609, 610, 665, 611, 612, 613, 0, 270, 272, 271,
	273, 274, 275, 276, 277, 760, 278, 279, 0, 0,
	0, 0, 0, 614, 0, 0, 0, 0, 280, 281,
	0, 282, 283, 284, 285, 286, 287, 615, 616, 0,
	288, 617, 289, 618, 0, 619, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 620, 621, 622, 0,
	297, 298, 623, 0, 0, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 323, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 326, 327, 328, 0,
	329, 624, 625, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	626, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 627, 628, 360, 0, 0, 0, 0, 0, 0,
	0, 361, 362, 363, 629, 0, 0, 0, 364, 0,
	365, 0, 0, 0, 366, 367, 630, 631, 368, 369,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 632,
	0, 633, 378, 0, 379, 380, 381, 382, 383, 634,
	635, 636, 460, 0, 384, 385, 0, 386, 387, 388,
	389, 0, 0, 0, 0, 390, 391, 392, 394, 0,
	0, 393, 637, 638, 0, 639, 0, 395, 396, 0,
	640, 0, 397, 398, 399, 0, 400, 0, 0, 0,
	401, 402, 403, 404, 405, 406, 0, 407, 409, 408,
	0, 410, 641, 0, 411, 412, 0, 0, 413, 0,
	0, 0, 414, 415, 418, 0, 0, 416, 417, 419,
	420, 0, 421, 422, 424, 427, 423, 425, 426, 428,
	441, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 443, 0, 442, 0, 444, 445, 446,
	451, 453, 454, 449, 450, 452, 455, 456, 448, 0,
	447, 0, 0, 0, 457, 458, 0, 642, 459, 643,
	461, 462, 0, 0, 463, 0, 0, 0, 465, 466,
	467, 0, 0, 468, 469, 644, 0, 470, 0, 645,
	471, 472, 464, 473, 474, 475, 476, 477, 478, 479,
	480, 0, 481, 482, 646, 483, 484, 485, 647, 486,
	487, 488, 648, 489, 649, 490, 491, 0, 492, 493,
	0, 494, 495, 496, 497, 498, 499, 500, 650, 501,
	503, 502, 504, 0, 505, 0, 506, 507, 508, 0,
	0, 0, 0, 509, 0, 511, 512, 513, 514, 510,
	515, 516, 517, 518, 0, 519, 520, 521, 0, 522,
	523, 524, 525, 651, 526, 0, 527, 528, 534, 535,
	529, 530, 536, 537, 538, 539, 540, 0, 542, 543,
	541, 544, 545, 546, 0, 547, 548, 531, 532, 549,
	550, 0, 551, 552, 553, 554, 555, 556, 652, 0,
	557, 0, 558, 559, 560, 562, 533, 563, 568, 569,
	653, 564, 565, 566, 567, 654, 571, 572, 0, 573,
	574, 0, 570, 561, 0, 575, 576, 577, 578, 579,
	580, 581, 354, 582, 0, 583, 655, 656, 657, 658,
	0, 592, 0, 584, 585, 586, 659, 587, 660, 0,
	588, 589, 590, 591, 0, 593, 594, 0, 0, 595,
	596, 597, 599, 600, 598, 601, 0, 602, 0, 0,
	603, 604, 605, 661, 662, 663, 0, 607, 606, 608,
	664, 754, 0, 264, 0, 0, 609, 610, 665, 611,
	612, 613, 0, 0, 0, 0, 0, 0, 0, 0,
	270, 272, 271, 273, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 614, 0, 0, 0,
	0, 280, 281, 0, 282, 283, 284, 285, 286, 287,
	615, 616, 0, 288, 617, 289, 618, 0, 619, 290,
	291, 292, 293, 294, 295, 0, 0, 0, 296, 620,
	621, 622, 0, 297, 744, 623, 0, 0, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 742, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 0, 321, 322, 323,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	327, 328, 0, 329, 624, 625, 0, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 340, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 626, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 627, 628, 360, 0, 0, 0,
	0, 0, 0, 0, 361, 362, 363, 629, 0, 0,
	0, 364, 0, 365, 0, 0, 0, 366, 367, 630,
	631, 368, 369, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 632, 0, 633, 378, 0, 379, 380, 381,
	382, 383, 634, 635, 636, 460, 0, 384, 385, 0,
	386, 387, 388, 389, 0, 0, 0, 0, 390, 391,
	392, 394, 0, 0, 393, 637, 638, 0, 639, 0,
	395, 396, 0, 640, 0, 397, 398, 399, 0, 400,
	0, 0, 0, 401, 402, 403, 404, 405, 406, 0,
	407, 409, 408, 0, 410, 641, 0, 411, 412, 0,
	0, 413, 0, 0, 0, 414, 743, 418, 0, 0,
	416, 417, 419, 420, 0, 421, 422, 424, 427, 423,
	425, 426, 428, 441, 429, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 443, 0, 755, 0,
	444, 445, 446, 451, 453, 454, 449, 450, 452, 455,
	456, 448, 0, 447, 0, 0, 0, 457, 458, 0,
	642, 459, 643, 461, 462, 0, 0, 463, 0, 0,
	0, 465, 466, 467, 0, 0, 468, 469, 644, 0,
	470, 0, 645, 471, 472, 464, 473, 474, 475, 476,
	477, 478, 479, 480, 0, 481, 482, 646, 483, 484,
	485, 647, 486, 487, 488, 648, 489, 649, 490, 491,
	0, 492, 493, 0, 494, 495, 496, 497, 498, 499,
	500, 650, 501, 503, 502, 504, 0, 505, 0, 506,
	507, 508, 0, 0, 0, 0, 509, 0, 511, 512,
	513, 514, 510, 515, 516, 517, 518, 0, 519, 520,
	521, 0, 522, 523, 524, 525, 745, 526, 0, 527,
	528, 534, 535, 529, 530, 751, 537, 538, 539, 540,
	0, 542, 543, 541, 544, 746, 546, 0, 547, 548,
	531, 532, 549, 550, 0, 551, 552, 553, 554, 555,
	556, 652, 0, 557, 0, 558, 559, 560, 562, 533,
	563, 568, 569, 653, 564, 565, 566, 567, 654, 571,
	572, 0, 573, 574, 0, 570, 561, 0, 575, 576,
	577, 578, 579, 580, 581, 354, 582, 0, 583, 750,
	656, 657, 658, 0, 592, 0, 584, 748, 586, 659,
	587, 660, 0, 588, 589, 590, 591, 0, 593, 594,
	0, 0, 595, 596, 597, 599, 600, 598, 601, 0,
	602, 0, 0, 603, 604, 605, 661, 662, 663, 0,
	607, 606, 608, 664, 736, 0, 264, 0, 0, 609,
	610, 665, 611, 612, 613, 0, 0, 0, 0, 0,
	0, 0, 0, 270, 272, 271, 273, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 614,
	0, 0, 0, 0, 280, 281, 0, 282, 283, 284,
	285, 286, 287, 615, 616, 0, 288, 617, 289, 618,
	0, 619, 290, 291, 292, 293, 294, 295, 0, 0,
	0, 296, 620, 621, 622, 0, 297, 298, 623, 0,
	0, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 0,
	321, 322, 323, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 326, 327, 328, 0, 329, 624, 625, 0,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 340, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 626, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 627, 628, 360,
	0, 0, 0, 0, 0, 0, 0, 361, 362, 363,
	629, 0, 0, 0, 364, 0, 365, 0, 0, 0,
	366, 367, 630, 631, 368, 369, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 632, 0, 633, 378, 0,
	379, 380, 381, 382, 383, 634, 635, 636, 460, 0,
	384, 385, 0, 386, 387, 388, 389, 0, 0, 0,
	0, 390, 391, 392, 394, 0, 0, 393, 637, 638,
	0, 639, 0, 395, 396, 0, 640, 0, 397, 398,
	399, 0, 400, 0, 0, 0, 401, 402, 403, 404,
	405, 406, 0, 407, 409, 408, 0, 410, 641, 0,
	411, 412, 0, 0, 413, 0, 0, 0, 414, 415,
	418, 0, 0, 416, 417, 419, 420, 0, 421, 422,
	424, 427, 423, 425, 426, 428, 441, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 443,
	0, 442, 0, 444, 445, 446, 451, 453, 454, 449,
	450, 452, 455, 456, 448, 0, 447, 0, 0, 0,
	457, 458, 0, 642, 459, 643, 461, 462, 0, 0,
	463, 0, 0, 0, 465, 466, 467, 0, 0, 468,
	469, 644, 0, 470, 0, 645, 471, 472, 464, 473,
	474, 475, 476, 477, 478, 479, 480, 0, 481, 482,
	646, 483, 484, 485, 647, 486, 487, 488, 648, 489,
	649, 490, 491, 0, 492, 493, 0, 494, 495, 496,
	497, 498, 499, 500, 650, 501, 503, 502, 504, 0,
	505, 0, 506, 507, 508, 0, 0, 0, 0, 509,
	0, 511, 512, 513, 514, 510, 515, 516, 517, 518,
	0, 519, 520, 521, 0, 522, 523, 524, 525, 651,
	526, 0, 527, 528, 737, 535, 529, 530, 536, 537,
	538, 539, 540, 0, 542, 543, 541, 544, 545, 546,
	0, 547, 548, 531, 532, 549, 550, 0, 551, 552,
	553, 554, 555, 556, 652, 0, 557, 0, 558, 559,
	560, 562, 533, 563, 568, 569, 653, 564, 565, 566,
	567, 654, 571, 572, 0, 573, 574, 0, 570, 561,
	0, 575, 576, 577, 578, 579, 580, 581, 354, 582,
	0, 583, 655, 656, 657, 658, 0, 592, 0, 584,
	585, 586, 659, 587, 660, 0, 588, 589, 590, 591,
	0, 593, 594, 0, 0, 595, 596, 597, 599, 600,
	598, 601, 0, 602, 0, 0, 603, 604, 605, 661,
	662, 663, 0, 607, 606, 608, 664, 699, 0, 264,
	0, 0, 609, 610, 665, 611, 612, 613, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 272, 271, 273,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 614, 0, 0, 0, 0, 280, 281, 0,
	282, 283, 284, 285, 286, 287, 615, 616, 0, 288,
	617, 289, 618, 0, 619, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 620, 621, 622, 0, 297,
	298, 623, 0, 0, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 0, 321, 322, 323, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 327, 328, 0, 329,
	624, 625, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 626,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	627, 628, 360, 0, 0, 0, 0, 0, 0, 0,
	361, 362, 363, 629, 0, 0, 0, 364, 0, 365,
	0, 0, 0, 366, 367, 630, 631, 368, 369, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 632, 0,
	633, 378, 0, 379, 380, 381, 382, 383, 634, 635,
	636, 460, 0, 384, 385, 0, 386, 387, 388, 389,
	0, 0, 0, 0, 390, 391, 392, 394, 0, 0,
	393, 637, 638, 0, 639, 0, 395, 396, 0, 640,
	0, 397, 398, 399, 0, 400, 0, 0, 0, 401,
	402, 403, 404, 405, 406, 0, 407, 409, 408, 0,
	410, 641, 0, 411, 412, 0, 0, 413, 0, 0,
	0, 414, 415, 418, 0, 0, 416, 417, 419, 420,
	0, 421, 422, 424, 427, 423, 425, 426, 428, 441,
	429, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 443, 0, 442, 0, 444, 445, 446, 451,
	453, 454, 449, 450, 452, 455, 456, 448, 0, 447,
	0, 0, 0, 457, 458, 0, 642, 459, 643, 461,
	462, 0, 0, 463, 0, 0, 0, 465, 466, 467,
	0, 0, 468, 469, 644, 0, 470, 0, 645, 471,
	472, 464, 473, 474, 475, 476, 477, 478, 479, 480,
	0, 481, 482, 646, 483, 484, 485, 647, 486, 487,
	488, 648, 489, 649, 490, 491, 0, 492, 493, 0,
	494, 495, 496, 497, 498, 499, 500, 650, 501, 503,
	502, 504, 0, 505, 0, 506, 507, 508, 0, 0,
	0, 0, 509, 0, 511, 512, 513, 514, 510, 515,
	516, 517, 518, 0, 519, 520, 521, 0, 522, 523,
	524, 525, 651, 526, 0, 527, 528, 534, 535, 529,
	530, 536, 537, 538, 539, 540, 0, 542, 543, 541,
	544, 545, 546, 0, 547, 548, 531, 532, 549, 550,
	0, 551, 552, 553, 554, 555, 556, 652, 0, 557,
	0, 558, 559, 560, 562, 533, 563, 568, 569, 653,
	564, 565, 566, 567, 654, 571, 572, 0, 573, 574,
	0, 570, 561, 0, 575, 576, 577, 578, 579, 580,
	581, 354, 582, 0, 583, 655, 656, 657, 658, 0,
	592, 0, 584, 585, 586, 659, 587, 660, 0, 588,
	589, 590, 591, 0, 593, 594, 0, 0, 595, 596,
	597, 599, 600, 598, 601, 0, 602, 0, 0, 603,
	604, 605, 661, 662, 663, 0, 607, 606, 608, 664,
	693, 0, 264, 0, 0, 609, 610, 665, 611, 612,
	613, 0, 0, 0, 0, 0, 0, 0, 0, 270,
	272, 271, 273, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 614, 0, 0, 0, 0,
	280, 281, 0, 282, 283, 284, 285, 286, 287, 615,
	616, 0, 288, 617, 289, 618, 0, 619, 290, 291,
	292, 293, 294, 295, 0, 0, 0, 296, 620, 621,
	622, 0, 297, 298, 623, 0, 0, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 0, 321, 322, 323, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 326, 327,
	328, 0, 329, 624, 625, 0, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	340, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 626, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 627, 628, 360, 0, 0, 0, 0,
	0, 0, 0, 361, 362, 363, 629, 0, 0, 0,
	364, 0, 365, 0, 0, 0, 366, 367, 630, 631,
	368, 369, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 632, 0, 633, 378, 0, 379, 380, 381, 382,
	383, 634, 635, 636, 460, 0, 384, 385, 0, 386,
	387, 388, 389, 0, 0, 0, 0, 390, 391, 392,
	394, 0, 0, 393, 637, 638, 0, 639, 0, 395,
	396, 0, 640, 0, 397, 398, 399, 0, 400, 0,
	0, 0, 401, 402, 403, 404, 405, 406, 0, 407,
	409, 408, 0, 410, 641, 0, 411, 412, 0, 0,
	413, 0, 0, 0, 414, 415, 418, 0, 0, 416,
	417, 419, 420, 0, 421, 422, 424, 427, 423, 425,
	426, 428, 441, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 443, 0, 442, 0, 444,
	445, 446, 451, 453, 454, 449, 450, 452, 455, 456,
	448, 0, 447, 0, 0, 0, 457, 458, 0, 642,
	459, 643, 461, 462, 0, 0, 463, 0, 0, 0,
	465, 466, 467, 0, 0, 468, 469, 644, 0, 470,
	0, 645, 471, 472, 464, 473, 474, 475, 476, 477,
	478, 479, 480, 0, 481, 482, 646, 483, 484, 485,
	647, 486, 487, 488, 648, 489, 649, 490, 491, 0,
	492, 493, 0, 494, 495, 496, 497, 498, 499, 500,
	650, 501, 503, 502, 504, 0, 505, 0, 506, 507,
	508, 0, 0, 0, 0, 509, 0, 511, 512, 513,
	514, 510, 515, 516, 517, 518, 0, 519, 520, 521,
	0, 522, 523, 524, 525, 651, 526, 0, 527, 528,
	534, 535, 529, 530, 536, 537, 538, 539, 540, 0,
	542, 543, 541, 544, 545, 546, 0, 547, 548, 531,
	532, 549, 550, 0, 551, 552, 553, 554, 555, 556,
	652, 0, 557, 0, 558, 559, 560, 562, 533, 563,
	568, 569, 653, 564, 565, 566, 567, 654, 571, 572,
	0, 573, 574, 0, 570, 561, 0, 575, 576, 577,
	578, 579, 580, 581, 354, 582, 0, 583, 655, 656,
	657, 658, 0, 592, 0, 584, 585, 586, 659, 587,
	660, 0, 588, 589, 590, 591, 0, 593, 594, 0,
	0, 595, 596, 597, 599, 600, 598, 601, 0, 602,
	0, 0, 603, 604, 605, 661, 662, 663, 0, 607,
	606, 608, 664, 671, 0, 264, 0, 0, 609, 610,
	665, 611, 612, 613, 0, 0, 0, 0, 0, 0,
	0, 0, 270, 272, 271, 273, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 614, 0,
	0, 0, 0, 280, 281, 0, 282, 283, 284, 285,
	286, 287, 615, 616, 0, 288, 617, 289, 618, 0,
	619, 290, 291, 292, 293, 294, 295, 0, 0, 0,
	296, 620, 621, 622, 0, 297, 298, 623, 0, 0,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 323, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 327, 328, 0, 329, 624, 625, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 626, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 627, 628, 360, 0,
	0, 0, 0, 0, 0, 0, 361, 362, 363, 629,
	0, 0, 0, 364, 0, 365, 0, 0, 0, 366,
	367, 630, 631, 368, 369, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 632, 0, 633, 378, 0, 379,
	380, 381, 382, 383, 634, 635, 636, 460, 0, 384,
	385, 0, 386, 387, 388, 389, 0, 0, 0, 0,
	390, 391, 392, 394, 0, 0, 393, 637, 638, 0,
	639, 0, 395, 396, 0, 640, 0, 397, 398, 399,
	0, 400, 0, 0, 0, 401, 402, 403, 404, 405,
	406, 0, 407, 409, 408, 0, 410, 641, 0, 411,
	412, 0, 0, 413, 0, 0, 0, 414, 415, 418,
	0, 0, 416, 417, 419, 420, 0, 421, 422, 424,
	427, 423, 425, 426, 428, 441, 429, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 443, 0,
	442, 0, 444, 445, 446, 451, 453, 454, 449, 450,
	452, 455, 456, 448, 0, 447, 0, 0, 0, 457,
	458, 0, 642, 459, 643, 461, 462, 0, 0, 463,
	0, 0, 0, 465, 466, 467, 0, 0, 468, 469,
	644, 0, 470, 0, 645, 471, 472, 464, 473, 474,
	475, 476, 477, 478, 479, 480, 0, 481, 482, 646,
	483, 484, 485, 647, 486, 487, 488, 648, 489, 649,
	490, 491, 0, 492, 493, 0, 494, 495, 496, 497,
	498, 499, 500, 650, 501, 503, 502, 504, 0, 505,
	0, 506, 507, 508, 0, 0, 0, 0, 509, 0,
	511, 512, 513, 514, 510, 515, 516, 517, 518, 0,
	519, 520, 521, 0, 522, 523, 524, 525, 651, 526,
	0, 527, 528, 534, 535, 529, 530, 536, 537, 538,
	539, 540, 0, 542, 543, 541, 544, 545, 546, 0,
	547, 548, 531, 532, 549, 550, 0, 551, 552, 553,
	554, 555, 556, 652, 0, 557, 0, 558, 559, 560,
	562, 533, 563, 568, 569, 653, 564, 565, 566, 567,
	654, 571, 572, 0, 573, 574, 0, 570, 561, 0,
	575, 576, 577, 578, 579, 580, 581, 354, 582, 0,
	583, 655, 656, 657, 658, 0, 592, 0, 584, 585,
	586, 659, 587, 660, 0, 588, 589, 590, 591, 0,
	593, 594, 0, 0, 595, 596, 597, 599, 600, 598,
	601, 0, 602, 0, 0, 603, 604, 605, 661, 662,
	663, 264, 607, 606, 608, 664, 0, 0, 0, 0,
	0, 609, 610, 665, 611, 612, 613, 0, 270, 272,
	271, 273, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 614, 0, 0, 0, 0, 280,
	281, 0, 282, 283, 284, 285, 286, 287, 615, 616,
	0, 288, 617, 289, 618, 0, 619, 290, 291, 292,
	293, 294, 295, 0, 0, 0, 296, 620, 621, 622,
	0, 297, 298, 623, 0, 0, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 0, 321, 322, 323, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 327, 328,
	0, 329, 624, 625, 0, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 340,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 626, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 627, 628, 360, 0, 0, 0, 0, 0,
	0, 0, 361, 362, 363, 629, 0, 0, 0, 364,
	0, 365, 0, 0, 0, 366, 367, 630, 631, 368,
	369, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	632, 0, 633, 378, 0, 379, 380, 381, 382, 383,
	634, 635, 636, 460, 0, 384, 385, 0, 386, 387,
	388, 389, 0, 0, 0, 0, 390, 391, 392, 394,
	0, 0, 393, 637, 638, 0, 639, 0, 395, 396,
	0, 640, 0, 397, 398, 399, 0, 400, 0, 0,
	0, 401, 402, 403, 404, 405, 406, 0, 407, 409,
	408, 0, 410, 641, 0, 411, 412, 0, 0, 413,
	0, 0, 0, 414, 415, 418, 0, 0, 416, 417,
	419, 420, 0, 421, 422, 424, 427, 423, 425, 426,
	428, 441, 429, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 443, 0, 442, 0, 444, 445,
	446, 451, 453, 454, 449, 450, 452, 455, 456, 448,
	0, 447, 0, 0, 0, 457, 458, 0, 642, 459,
	643, 461, 462, 0, 0, 463, 0, 0, 0, 465,
	466, 467, 0, 0, 468, 469, 644, 0, 470, 0,
	645, 471, 472, 464, 473, 474, 475, 476, 477, 478,
	479, 480, 0, 481, 482, 646, 483, 484, 485, 647,
	486, 487, 488, 648, 489, 649, 490, 491, 0, 492,
	493, 0, 494, 495, 496, 497, 498, 499, 500, 650,
	501, 503, 502, 504, 0, 505, 0, 506, 507, 508,
	0, 0, 0, 0, 509, 0, 511, 512, 513, 514,
	510, 515, 516, 517, 518, 0, 519, 520, 521, 0,
	522, 523, 524, 525, 651, 526, 0, 527, 528, 534,
	535, 529, 530, 536, 537, 538, 539, 540, 0, 542,
	543, 541, 544, 545, 546, 0, 547, 548, 531, 532,
	549, 550, 0, 551, 552, 553, 554, 555, 556, 652,
	0, 557, 0, 558, 559, 560, 562, 533, 563, 568,
	569, 653, 564, 565, 566, 567, 654, 571, 572, 0,
	573, 574, 0, 570, 561, 0, 575, 576, 577, 578,
	579, 580, 581, 354, 582, 0, 583, 655, 656, 657,
	658, 0, 592, 0, 584, 585, 586, 659, 587, 660,
	0, 588, 589, 590, 591, 0, 593, 594, 0, 0,
	595, 596, 597, 599, 600, 598, 601, 0, 602, 0,
	0, 603, 604, 605, 661, 662, 663, 264, 607, 606,
	608, 664, 0, 0, 0, 0, 0, 609, 610, 665,
	611, 612, 613, 0, 270, 272, 271, 273, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	614, 0, 0, 0, 0, 280, 281, 0, 282, 283,
	284, 285, 286, 287, 615, 616, 0, 288, 617, 289,
	618, 0, 619, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 620, 621, 622, 0, 297, 298, 623,
	0, 0, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 323, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 327, 328, 0, 329, 624, 625,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 626, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 627, 628,
	360, 0, 0, 0, 0, 0, 0, 0, 361, 362,
	363, 629, 0, 0, 0, 364, 0, 365, 0, 0,
	0, 366, 367, 630, 631, 368, 369, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 632, 0, 633, 378,
	0, 379, 380, 381, 382, 383, 3453, 635, 636, 460,
	0, 384, 385, 0, 386, 387, 388, 389, 0, 0,
	0, 0, 390, 391, 392, 394, 0, 0, 393, 637,
	638, 0, 639, 0, 395, 396, 0, 640, 0, 397,
	398, 399, 0, 400, 0, 0, 0, 401, 402, 403,
	404, 405, 406, 0, 407, 409, 408, 0, 410, 641,
	0, 411, 412, 0, 0, 413, 0, 0, 0, 414,
	415, 418, 0, 0, 416, 417, 419, 420, 0, 421,
	422, 424, 427, 423, 425, 426, 428, 441, 429, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	443, 0, 442, 0, 444, 445, 446, 451, 453, 454,
	449, 450, 452, 455, 456, 448, 0, 447, 0, 0,
	0, 457, 458, 0, 642, 459, 643, 461, 462, 0,
	0, 463, 0, 0, 0, 465, 466, 467, 0, 0,
	468, 469, 644, 0, 470, 0, 645, 471, 472, 464,
	473, 474, 475, 476, 477, 478, 479, 480, 0, 481,
	482, 646, 483, 484, 485, 647, 486, 487, 488, 648,
	489, 649, 490, 491, 0, 492, 493, 0, 494, 495,
	496, 497, 498, 499, 500, 650, 501, 503, 502, 504,
	0, 505, 0, 506, 507, 508, 0, 0, 0, 0,
	509, 0, 511, 512, 513, 514, 510, 515, 516, 517,
	518, 0, 519, 520, 521, 0, 522, 523, 524, 525,
	651, 526, 0, 527, 528, 534, 535, 529, 530, 536,
	537, 538, 539, 540, 0, 542, 543, 541, 544, 545,
	546, 0, 547, 548, 531, 532, 549, 550, 0, 551,
	552, 553, 554, 555, 556, 652, 0, 557, 0, 558,
	559, 560, 562, 533, 563, 568, 569, 653, 564, 565,
	566, 567, 654, 571, 572, 0, 573, 574, 0, 570,
	561, 0, 575, 576, 577, 578, 579, 580, 581, 354,
	582, 0, 583, 655, 656, 657, 658, 0, 592, 0,
	584, 585, 586, 659, 587, 660, 0, 588, 589, 590,
	591, 0, 593, 594, 0, 0, 595, 596, 597, 599,
	600, 598, 601, 0, 602, 0, 0, 603, 604, 605,
	661, 662, 663, 264, 607, 606, 608, 664, 0, 0,
	0, 0, 0, 609, 610, 665, 611, 612, 613, 0,
	270, 272, 271, 273, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 614, 0, 0, 0,
	0, 280, 281, 0, 282, 283, 284, 285, 286, 287,
	615, 616, 0, 288, 617, 289, 618, 0, 619, 290,
	291, 292, 293, 294, 295, 0, 0, 0, 296, 620,
	621, 622, 0, 297, 298, 623, 0, 0, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 0, 321, 322, 323,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	327, 328, 0, 329, 624, 625, 0, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 340, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 626, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 627, 628, 360, 0, 0, 0,
	0, 0, 0, 0, 361, 362, 363, 629, 0, 0,
	0, 364, 0, 365, 0, 0, 0, 366, 367, 630,
	631, 368, 369, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 632, 0, 633, 378, 0, 379, 380, 381,
	382, 383, 3390, 635, 636, 460, 0, 384, 385, 0,
	386, 387, 388, 389, 0, 0, 0, 0, 390, 391,
	392, 394, 0, 0, 393, 637, 638, 0, 639, 0,
	395, 396, 0, 640, 0, 397, 398, 399, 0, 400,
	0, 0, 0, 401, 402, 403, 404, 405, 406, 0,
	407, 409, 408, 0, 410, 641, 0, 411, 412, 0,
	0, 413, 0, 0, 0, 414, 415, 418, 0, 0,
	416, 417, 419, 420, 0, 421, 422, 424, 427, 423,
	425, 426, 428, 441, 429, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 443, 0, 442, 0,
	444, 445, 446, 451, 453, 454, 449, 450, 452, 455,
	456, 448, 0, 447, 0, 0, 0, 457, 458, 0,
	642, 459, 643, 461, 462, 0, 0, 463, 0, 0,
	0, 465, 466, 467, 0, 0, 468, 469, 644, 0,
	470, 0, 645, 471, 472, 464, 473, 474, 475, 476,
	477, 478, 479, 480, 0, 481, 482, 646, 483, 484,
	485, 647, 486, 487, 488, 648, 489, 649, 490, 491,
	0, 492, 493, 0, 494, 495, 496, 497, 498, 499,
	500, 650, 501, 503, 502, 504, 0, 505, 0, 506,
	507, 508, 0, 0, 0, 0, 509, 0, 511, 512,
	513, 514, 510, 515, 516, 517, 518, 0, 519, 520,
	521, 0, 522, 523, 524, 525, 651, 526, 0, 527,
	528, 534, 535, 529, 530, 536, 537, 538, 539, 540,
	0, 542, 543, 541, 544, 545, 546, 0, 547, 548,
	531, 532, 549, 550, 0, 551, 552, 553, 554, 555,
	556, 652, 0, 557, 0, 558, 559, 560, 562, 533,
	563, 568, 569, 653, 564, 565, 566, 567, 654, 571,
	572, 0, 573, 574, 0, 570, 561, 0, 575, 576,
	577, 578, 579, 580, 581, 354, 582, 0, 583, 655,
	656, 657, 658, 0, 592, 0, 584, 585, 586, 659,
	587, 660, 0, 588, 589, 590, 591, 0, 593, 594,
	0, 0, 595, 596, 597, 599, 600, 598, 601, 0,
	602, 0, 0, 603, 604, 605, 661, 662, 663, 264,
	607, 606, 608, 664, 0, 0, 0, 0, 0, 609,
	610, 665, 611, 612, 613, 0, 270, 272, 271, 273,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 614, 0, 0, 0, 0, 280, 281, 0,
	282, 283, 284, 285, 286, 287, 615, 616, 0, 288,
	617, 289, 618, 0, 619, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 620, 621, 622, 0, 297,
	298, 623, 0, 0, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 0, 321, 322, 323, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 327, 328, 0, 329,
	624, 625, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 626,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	627, 628, 360, 0, 0, 0, 0, 0, 0, 0,
	361, 362, 363, 629, 0, 0, 0, 364, 0, 365,
	0, 0, 0, 366, 367, 630, 631, 368, 369, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 632, 0,
	633, 378, 0, 379, 380, 381, 382, 383, 3323, 635,
	636, 460, 0, 384, 385, 0, 386, 387, 388, 389,
	0, 0, 0, 0, 390, 391, 392, 394, 0, 0,
	393, 637, 638, 0, 639, 0, 395, 396, 0, 640,
	0, 397, 398, 399, 0, 400, 0, 0, 0, 401,
	402, 403, 404, 405, 406, 0, 407, 409, 408, 0,
	410, 641, 0, 411, 412, 0, 0, 413, 0, 0,
	0, 414, 415, 418, 0, 0, 416, 417, 419, 420,
	0, 421, 422, 424, 427, 423, 425, 426, 428, 441,
	429, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 443, 0, 442, 0, 444, 445, 446, 451,
	453, 454, 449, 450, 452, 455, 456, 448, 0, 447,
	0, 0, 0, 457, 458, 0, 642, 459, 643, 461,
	462, 0, 0, 463, 0, 0, 0, 465, 466, 467,
	0, 0, 468, 469, 644, 0, 470, 0, 645, 471,
	472, 464, 473, 474, 475, 476, 477, 478, 479, 480,
	0, 481, 482, 646, 483, 484, 485, 647, 486, 487,
	488, 648, 489, 649, 490, 491, 0, 492, 493, 0,
	494, 495, 496, 497, 498, 499, 500, 650, 501, 503,
	502, 504, 0, 505, 0, 506, 507, 508, 0, 0,
	0, 0, 509, 0, 511, 512, 513, 514, 510, 515,
	516, 517, 518, 0, 519, 520, 521, 0, 522, 523,
	524, 525, 651, 526, 0, 527, 528, 534, 535, 529,
	530, 536, 537, 538, 539, 540, 0, 542, 543, 541,
	544, 545, 546, 0, 547, 548, 531, 532, 549, 550,
	0, 551, 552, 553, 554, 555, 556, 652, 0, 557,
	0, 558, 559, 560, 562, 533, 563, 568, 569, 653,
	564, 565, 566, 567, 654, 571, 572, 0, 573, 574,
	0, 570, 561, 0, 575, 576, 577, 578, 579, 580,
	581, 354, 582, 0, 583, 655, 656, 657, 658, 0,
	592, 0, 584, 585, 586, 659, 587, 660, 0, 588,
	589, 590, 591, 0, 593, 594, 0, 0, 595, 596,
	597, 599, 600, 598, 601, 0, 602, 0, 0, 603,
	604, 605, 661, 662, 663, 264, 607, 606, 608, 664,
	0, 0, 0, 0, 0, 609, 610, 665, 611, 612,
	613, 0, 270, 272, 271, 273, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 614, 0,
	0, 0, 0, 280, 281, 0, 282, 283, 284, 285,
	286, 287, 615, 616, 0, 288, 617, 289, 618, 0,
	619, 290, 291, 292, 293, 294, 295, 0, 0, 0,
	296, 620, 621, 622, 0, 297, 298, 623, 0, 0,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 323, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 327, 328, 0, 329, 624, 625, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 626, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 627, 628, 360, 0,
	0, 0, 0, 0, 0, 0, 361, 362, 363, 629,
	0, 0, 0, 364, 0, 365, 0, 0, 0, 366,
	367, 630, 631, 368, 369, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 632, 0, 633, 378, 0, 379,
	380, 381, 382, 383, 3321, 635, 636, 460, 0, 384,
	385, 0, 386, 387, 388, 389, 0, 0, 0, 0,
	390, 391, 392, 394, 0, 0, 393, 637, 638, 0,
	639, 0, 395, 396, 0, 640, 0, 397, 398, 399,
	0, 400, 0, 0, 0, 401, 402, 403, 404, 405,
	406, 0, 407, 409, 408, 0, 410, 641, 0, 411,
	412, 0, 0, 413, 0, 0, 0, 414, 415, 418,
	0, 0, 416, 417, 419, 420, 0, 421, 422, 424,
	427, 423, 425, 426, 428, 441, 429, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 443, 0,
	442, 0, 444, 445, 446, 451, 453, 454, 449, 450,
	452, 455, 456, 448, 0, 447, 0, 0, 0, 457,
	458, 0, 642, 459, 643, 461, 462, 0, 0, 463,
	0, 0, 0, 465, 466, 467, 0, 0, 468, 469,
	644, 0, 470, 0, 645, 471, 472, 464, 473, 474,
	475, 476, 477, 478, 479, 480, 0, 481, 482, 646,
	483, 484, 485, 647, 486, 487, 488, 648, 489, 649,
	490, 491, 0, 492, 493, 0, 494, 495, 496, 497,
	498, 499, 500, 650, 501, 503, 502, 504, 0, 505,
	0, 506, 507, 508, 0, 0, 0, 0, 509, 0,
	511, 512, 513, 514, 510, 515, 516, 517, 518, 0,
	519, 520, 521, 0, 522, 523, 524, 525, 651, 526,
	0, 527, 528, 534, 535, 529, 530, 536, 537, 538,
	539, 540, 0, 542, 543, 541, 544, 545, 546, 0,
	547, 548, 531, 532, 549, 550, 0, 551, 552, 553,
	554, 555, 556, 652, 0, 557, 0, 558, 559, 560,
	562, 533, 563, 568, 569, 653, 564, 565, 566, 567,
	654, 571, 572, 0, 573, 574, 0, 570, 561, 0,
	575, 576, 577, 578, 579, 580, 581, 354, 582, 0,
	583, 655, 656, 657, 658, 0, 592, 0, 584, 585,
	586, 659, 587, 660, 0, 588, 589, 590, 591, 0,
	593, 594, 0, 0, 595, 596, 597, 599, 600, 598,
	601, 0, 602, 0, 0, 603, 604, 605, 661, 662,
	663, 264, 607, 606, 608, 664, 0, 0, 0, 0,
	0, 609, 610, 665, 611, 612, 613, 0, 270, 272,
	271, 273, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 614, 0, 0, 0, 0, 280,
	281, 0, 282, 283, 284, 285, 286, 287, 615, 616,
	0, 288, 617, 289, 618, 0, 619, 290, 291, 292,
	293, 294, 295, 0, 0, 0, 296, 620, 621, 622,
	0, 297, 298, 623, 0, 0, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 0, 321, 322, 323, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 327, 328,
	0, 329, 624, 625, 0, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 340,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 626, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 627, 628, 360, 0, 0, 0, 0, 0,
	0, 0, 361, 362, 363, 629, 0, 0, 0, 364,
	0, 365, 0, 0, 0, 366, 367, 630, 631, 368,
	369, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	632, 0, 633, 378, 0, 379, 380, 381, 382, 383,
	3306, 635, 636, 460, 0, 384, 385, 0, 386, 387,
	388, 389, 0, 0, 0, 0, 390, 391, 392, 394,
	0, 0, 393, 637, 638, 0, 639, 0, 395, 396,
	0, 640, 0, 397, 398, 399, 0, 400, 0, 0,
	0, 401, 402, 403, 404, 405, 406, 0, 407, 409,
	408, 0, 410, 641, 0, 411, 412, 0, 0, 413,
	0, 0, 0, 414, 415, 418, 0, 0, 416, 417,
	419, 420, 0, 421, 422, 424, 427, 423, 425, 426,
	428, 441, 429, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 443, 0, 442, 0, 444, 445,
	446, 451, 453, 454, 449, 450, 452, 455, 456, 448,
	0, 447, 0, 0, 0, 457, 458, 0, 642, 459,
	643, 461, 462, 0, 0, 463, 0, 0, 0, 465,
	466, 467, 0, 0, 468, 469, 644, 0, 470, 0,
	645, 471, 472, 464, 473, 474, 475, 476, 477, 478,
	479, 480, 0, 481, 482, 646, 483, 484, 485, 647,
	486, 487, 488, 648, 489, 649, 490, 491, 0, 492,
	493, 0, 494, 495, 496, 497, 498, 499, 500, 650,
	501, 503, 502, 504, 0, 505, 0, 506, 507, 508,
	0, 0, 0, 0, 509, 0, 511, 512, 513, 514,
	510, 515, 516, 517, 518, 0, 519, 520, 521, 0,
	522, 523, 524, 525, 651, 526, 0, 527, 528, 534,
	535, 529, 530, 536, 537, 538, 539, 540, 0, 542,
	543, 541, 544, 545, 546, 0, 547, 548, 531, 532,
	549, 550, 0, 551, 552, 553, 554, 555, 556, 652,
	0, 557, 0, 558, 559, 560, 562, 533, 563, 568,
	569, 653, 564, 565, 566, 567, 654, 571, 572, 0,
	573, 574, 0, 570, 561, 0, 575, 576, 577, 578,
	579, 580, 581, 354, 582, 0, 583, 655, 656, 657,
	658, 0, 592, 0, 584, 585, 586, 659, 587, 660,
	0, 588, 589, 590, 591, 0, 593, 594, 0, 0,
	595, 596, 597, 599, 600, 598, 601, 0, 602, 0,
	0, 603, 604, 605, 661, 662, 663, 264, 607, 606,
	608, 664, 0, 0, 0, 0, 0, 609, 610, 665,
	611, 612, 613, 0, 270, 272, 271, 273, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	614, 0, 0, 0, 0, 280, 281, 0, 282, 283,
	284, 285, 286, 287, 615, 616, 0, 288, 617, 289,
	618, 0, 619, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 620, 621, 622, 0, 297, 298, 623,
	0, 0, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 323, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 327, 328, 0, 329, 624, 625,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 626, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 627, 628,
	360, 0, 0, 0, 0, 0, 0, 0, 361, 362,
	363, 629, 0, 0, 0, 364, 0, 365, 0, 0,
	0, 366, 367, 630, 631, 368, 369, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 632, 0, 633, 378,
	0, 379, 380, 381, 382, 383, 2898, 635, 636, 460,
	0, 384, 385, 0, 386, 387, 388, 389, 0, 0,
	0, 0, 390, 391, 392, 394, 0, 0, 393, 637,
	638, 0, 639, 0, 395, 396, 0, 640, 0, 397,
	398, 399, 0, 400, 0, 0, 0, 401, 402, 403,
	404, 405, 406, 0, 407, 409, 408, 0, 410, 641,
	0, 411, 412, 0, 0, 413, 0, 0, 0, 414,
	415, 418, 0, 0, 416, 417, 419, 420, 0, 421,
	422, 424, 427, 423, 425, 426, 428, 441, 429, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	443, 0, 442, 0, 444, 445, 446, 451, 453, 454,
	449, 450, 452, 455, 456, 448, 0, 447, 0, 0,
	0, 457, 458, 0, 642, 459, 643, 461, 462, 0,
	0, 463, 0, 0, 0, 465, 466, 467, 0, 0,
	468, 469, 644, 0, 470, 0, 645, 471, 472, 464,
	473, 474, 475, 476, 477, 478, 479, 480, 0, 481,
	482, 646, 483, 484, 485, 647, 486, 487, 488, 648,
	489, 649, 490, 491, 0, 492, 493, 0, 494, 495,
	496, 497, 498, 499, 500, 650, 501, 503, 502, 504,
	0, 505, 0, 506, 507, 508, 0, 0, 0, 0,
	509, 0, 511, 512, 513, 514, 510, 515, 516, 517,
	518, 0, 519, 520, 521, 0, 522, 523, 524, 525,
	651, 526, 0, 527, 528, 534, 535, 529, 530, 536,
	537, 538, 539, 540, 0, 542, 543, 541, 544, 545,
	546, 0, 547, 548, 531, 532, 549, 550, 0, 551,
	552, 553, 554, 555, 556, 652, 0, 557, 0, 558,
	559, 560, 562, 533, 563, 568, 569, 653, 564, 565,
	566, 567, 654, 571, 572, 0, 573, 574, 0, 570,
	561, 0, 575, 576, 577, 578, 579, 580, 581, 354,
	582, 0, 583, 655, 656, 657, 658, 0, 592, 0,
	584, 585, 586, 659, 587, 660, 0, 588, 589, 590,
	591, 0, 593, 594, 0, 0, 595, 596, 597, 599,
	600, 598, 601, 0, 602, 0, 0, 603, 604, 605,
	661, 662, 663, 264, 607, 606, 608, 664, 0, 0,
	0, 0, 0, 609, 610, 665, 611, 612, 613, 0,
	270, 272, 271, 273, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 614, 0, 0, 0,
	0, 280, 281, 0, 282, 283, 284, 285, 286, 287,
	615, 616, 0, 288, 617, 289, 618, 0, 619, 290,
	291, 292, 293, 294, 295, 0, 0, 0, 296, 620,
	621, 622, 0, 297, 298, 623, 0, 0, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 0, 321, 322, 323,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	327, 328, 0, 329, 624, 625, 0, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 340, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 626, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 627, 628, 360, 0, 0, 0,
	0, 0, 0, 0, 361, 362, 363, 629, 0, 0,
	0, 364, 0, 365, 0, 0, 0, 366, 367, 630,
	631, 368, 369, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 632, 0, 633, 378, 0, 379, 380, 381,
	382, 383, 634, 635, 636, 460, 0, 384, 385, 0,
	386, 387, 388, 389, 0, 0, 0, 0, 390, 391,
	392, 394, 0, 0, 393, 637, 638, 0, 639, 0,
	395, 396, 0, 640, 0, 397, 398, 399, 0, 400,
	0, 0, 0, 401, 402, 403, 404, 405, 406, 0,
	407, 409, 408, 0, 410, 641, 0, 411, 412, 0,
	0, 413, 0, 0, 0, 414, 415, 418, 0, 0,
	416, 417, 419, 420, 0, 421, 422, 424, 427, 423,
	425, 426, 428, 441, 429, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 443, 0, 442, 0,
	444, 445, 446, 451, 453, 454, 449, 450, 452, 455,
	456, 448, 0, 447, 0, 0, 0, 457, 458, 0,
	642, 459, 643, 461, 462, 0, 0, 463, 0, 0,
	0, 465, 466, 467, 0, 0, 468, 469, 644, 0,
	470, 0, 645, 471, 472, 464, 473, 474, 475, 476,
	477, 478, 479, 480, 0, 481, 482, 646, 483, 484,
	485, 647, 486, 487, 488, 648, 489, 649, 490, 491,
	0, 492, 493, 0, 494, 495, 496, 497, 498, 499,
	500, 650, 501, 503, 502, 504, 0, 505, 0, 506,
	507, 508, 0, 0, 0, 0, 509, 0, 511, 512,
	513, 514, 510, 515, 516, 517, 518, 0, 519, 520,
	521, 0, 522, 523, 524, 525, 651, 526, 0, 527,
	528, 737, 535, 529, 530, 536, 537, 538, 539, 540,
	0, 542, 543, 541, 544, 545, 546, 0, 547, 548,
	531, 532, 549, 550, 0, 551, 552, 553, 554, 555,
	556, 652, 0, 557, 0, 558, 559, 560, 562, 533,
	563, 568, 569, 653, 564, 565, 566, 567, 654, 571,
	572, 0, 573, 574, 0, 570, 561, 0, 575, 576,
	577, 578, 579, 580, 581, 354, 582, 0, 583, 655,
	656, 657, 658, 0, 592, 0, 584, 585, 586, 659,
	587, 660, 0, 588, 589, 590, 591, 0, 593, 594,
	0, 0, 595, 596, 597, 599, 600, 598, 601, 0,
	602, 0, 0, 603, 604, 605, 661, 662, 663, 264,
	607, 606, 608, 664, 0, 0, 0, 0, 0, 609,
	610, 665, 611, 612, 613, 0, 270, 272, 271, 273,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 614, 0, 2220, 0, 0, 280, 281, 0,
	282, 283, 284, 285, 286, 287, 615, 616, 0, 288,
	617, 289, 618, 0, 619, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 620, 621, 622, 0, 297,
	298, 623, 0, 0, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 0, 321, 322, 323, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 327, 328, 0, 329,
	624, 625, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 626,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	627, 628, 360, 0, 0, 0, 0, 0, 0, 0,
	361, 362, 363, 629, 0, 0, 0, 364, 0, 365,
	0, 0, 0, 366, 367, 630, 631, 368, 369, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 632, 0,
	633, 378, 0, 379, 380, 381, 382, 383, 634, 635,
	636, 460, 0, 384, 385, 0, 386, 387, 388, 389,
	0, 0, 0, 0, 390, 391, 392, 394, 0, 0,
	393, 637, 638, 0, 639, 0, 395, 396, 0, 640,
	0, 397, 398, 399, 0, 400, 0, 0, 0, 401,
	402, 403, 404, 405, 406, 0, 407, 409, 408, 0,
	410, 641, 0, 411, 412, 0, 0, 413, 0, 0,
	0, 414, 415, 418, 0, 0, 416, 417, 419, 420,
	0, 421, 422, 424, 427, 423, 425, 426, 428, 441,
	429, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 443, 0, 442, 0, 444, 445, 446, 451,
	453, 454, 449, 450, 452, 455, 456, 448, 0, 447,
	0, 0, 0, 457, 458, 0, 642, 459, 643, 461,
	462, 0, 0, 463, 0, 0, 0, 465, 466, 467,
	0, 0, 468, 469, 644, 0, 470, 0, 645, 471,
	472, 464, 473, 474, 475, 476, 477, 478, 479, 480,
	0, 481, 482, 646, 483, 484, 485, 647, 486, 487,
	488, 648, 489, 649, 490, 491, 0, 492, 493, 0,
	494, 495, 496, 497, 498, 499, 500, 650, 501, 503,
	502, 504, 0, 505, 0, 506, 507, 508, 0, 0,
	0, 0, 509, 0, 511, 512, 513, 514, 510, 515,
	516, 517, 518, 0, 519, 520, 521, 0, 522, 523,
	524, 525, 651, 526, 0, 527, 528, 534, 535, 529,
	530, 536, 537, 538, 539, 540, 0, 542, 543, 541,
	544, 545, 546, 0, 0, 548, 531, 532, 549, 550,
	0, 551, 552, 553, 554, 555, 556, 652, 0, 557,
	0, 558, 559, 560, 562, 533, 563, 568, 569, 653,
	564, 565, 566, 567, 654, 571, 572, 0, 573, 574,
	0, 570, 561, 0, 575, 576, 577, 578, 579, 580,
	581, 354, 582, 0, 583, 655, 656, 657, 658, 0,
	592, 0, 584, 585, 586, 659, 587, 660, 0, 588,
	589, 590, 591, 0, 593, 594, 0, 0, 595, 596,
	597, 599, 600, 598, 601, 0, 602, 0, 0, 603,
	604, 605, 661, 662, 663, 264, 607, 606, 608, 664,
	0, 0, 0, 0, 0, 609, 610, 665, 611, 612,
	613, 0, 270, 272, 271, 273, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 614, 0,
	0, 0, 0, 280, 281, 0, 282, 283, 284, 285,
	286, 287, 615, 616, 0, 288, 617, 289, 618, 0,
	619, 290, 291, 292, 293, 294, 295, 0, 0, 0,
	296, 620, 621, 622, 0, 297, 298, 623, 0, 0,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 323, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 327, 328, 0, 329, 624, 625, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 626, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 627, 628, 360, 0,
	0, 0, 0, 0, 0, 0, 361, 362, 363, 629,
	0, 0, 0, 364, 0, 365, 0, 0, 0, 366,
	367, 630, 631, 368, 369, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 632, 0, 633, 378, 0, 379,
	380, 381, 382, 383, 1243, 635, 636, 460, 0, 384,
	385, 0, 386, 387, 388, 389, 0, 0, 0, 0,
	390, 391, 392, 394, 0, 0, 393, 637, 638, 0,
	639, 0, 395, 396, 0, 640, 0, 397, 398, 399,
	0, 400, 0, 0, 0, 401, 402, 403, 404, 405,
	406, 0, 407, 409, 408, 0, 410, 641, 0, 411,
	412, 0, 0, 413, 0, 0, 0, 414, 415, 418,
	0, 0, 416, 417, 419, 420, 0, 421, 422, 424,
	427, 423, 425, 426, 428, 441, 429, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 443, 0,
	442, 0, 444, 445, 446, 451, 453, 454, 449, 450,
	452, 455, 456, 448, 0, 447, 0, 0, 0, 457,
	458, 0, 642, 459, 643, 461, 462, 0, 0, 463,
	0, 0, 0, 465, 466, 467, 0, 0, 468, 469,
	644, 0, 470, 0, 645, 471, 472, 464, 473, 474,
	475, 476, 477, 478, 479, 480, 0, 481, 482, 646,
	483, 484, 485, 647, 486, 487, 488, 648, 489, 649,
	490, 491, 0, 492, 493, 0, 494, 495, 496, 497,
	498, 499, 500, 650, 501, 503, 502, 504, 0, 505,
	0, 506, 507, 508, 0, 0, 0, 0, 509, 0,
	511, 512, 513, 514, 510, 515, 516, 517, 518, 0,
	519, 520, 521, 0, 522, 523, 524, 525, 651, 526,
	0, 527, 528, 534, 535, 529, 530, 536, 537, 538,
	539, 540, 0, 542, 543, 541, 544, 545, 546, 0,
	547, 548, 531, 532, 549, 550, 0, 551, 552, 553,
	554, 555, 556, 652, 0, 557, 0, 558, 559, 560,
	562, 533, 563, 568, 569, 653, 564, 565, 566, 567,
	654, 571, 572, 0, 573, 574, 0, 570, 561, 0,
	575, 576, 577, 578, 579, 580, 581, 354, 582, 0,
	583, 655, 656, 657, 658, 0, 592, 0, 584, 585,
	586, 659, 587, 660, 0, 588, 589, 590, 591, 0,
	593, 594, 0, 0, 595, 596, 597, 599, 600, 598,
	601, 0, 602, 0, 0, 603, 604, 605, 661, 662,
	663, 264, 607, 606, 608, 664, 0, 0, 0, 0,
	0, 609, 610, 665, 611, 612, 613, 0, 270, 272,
	271, 273, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 614, 0, 0, 0, 0, 280,
	281, 0, 282, 283, 284, 285, 286, 287, 615, 616,
	0, 288, 617, 289, 618, 0, 619, 290, 291, 292,
	293, 294, 295, 0, 0, 0, 296, 620, 621, 622,
	0, 297, 298, 623, 0, 0, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 0, 321, 322, 323, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 327, 328,
	0, 329, 624, 625, 0, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 340,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 626, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 627, 628, 360, 0, 0, 0, 0, 0,
	0, 0, 361, 362, 363, 629, 0, 0, 0, 364,
	0, 365, 0, 0, 0, 366, 367, 630, 631, 368,
	369, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	632, 0, 633, 378, 0, 379, 380, 381, 382, 383,
	634, 635, 636, 460, 0, 384, 385, 0, 386, 387,
	388, 389, 0, 0, 0, 0, 390, 391, 392, 394,
	0, 0, 393, 637, 638, 0, 639, 0, 395, 396,
	0, 640, 0, 397, 398, 399, 0, 400, 0, 0,
	0, 401, 402, 403, 404, 405, 406, 0, 407, 409,
	408, 0, 410, 641, 0, 411, 412, 0, 0, 413,
	0, 0, 0, 414, 415, 418, 0, 0, 416, 417,
	419, 420, 0, 421, 422, 424, 427, 423, 425, 426,
	428, 441, 429, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 443, 0, 442, 0, 444, 445,
	446, 451, 453, 454, 449, 450, 452, 455, 456, 448,
	0, 447, 0, 0, 0, 457, 458, 0, 642, 459,
	643, 461, 462, 0, 0, 463, 0, 0, 0, 465,
	466, 467, 0, 0, 468, 469, 644, 0, 470, 0,
	645, 471, 472, 464, 473, 474, 475, 476, 477, 478,
	479, 480, 0, 481, 482, 646, 483, 484, 485, 647,
	486, 487, 488, 648, 489, 649, 490, 491, 0, 492,
	493, 0, 494, 495, 496, 497, 498, 499, 500, 650,
	501, 1176, 502, 504, 0, 505, 0, 506, 507, 508,
	0, 0, 0, 0, 509, 0, 511, 512, 513, 514,
	510, 515, 516, 517, 518, 0, 519, 520, 521, 0,
	522, 523, 524, 525, 651, 526, 0, 527, 528, 534,
	535, 529, 530, 536, 537, 538, 539, 540, 0, 542,
	543, 541, 544, 545, 546, 0, 547, 548, 531, 532,
	549, 550, 0, 551, 552, 553, 554, 555, 556, 652,
	0, 557, 0, 558, 559, 560, 562, 533, 563, 568,
	569, 653, 564, 565, 566, 567, 654, 571, 572, 0,
	573, 574, 0, 570, 561, 0, 575, 576, 577, 578,
	579, 580, 581, 354, 582, 0, 583, 655, 656, 657,
	658, 0, 592, 0, 584, 585, 586, 659, 587, 660,
	0, 588, 589, 590, 591, 0, 593, 594, 0, 0,
	595, 596, 597, 599, 600, 598, 601, 0, 602, 0,
	0, 603, 604, 605, 661, 662, 663, 264, 607, 606,
	608, 664, 0, 0, 0, 0, 0, 609, 610, 665,
	611, 612, 613, 0, 270, 272, 271, 273, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	614, 0, 0, 0, 0, 280, 281, 0, 282, 283,
	284, 285, 286, 287, 615, 616, 0, 288, 617, 289,
	618, 0, 619, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 620, 621, 622, 0, 297, 298, 623,
	0, 0, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 323, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 327, 328, 0, 329, 624, 625,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 626, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 627, 628,
	360, 0, 0, 0, 0, 0, 0, 0, 361, 362,
	363, 629, 0, 0, 0, 364, 0, 365, 0, 0,
	0, 366, 367, 630, 631, 368, 369, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 632, 0, 633, 0,
	0, 379, 380, 381, 382, 383, 634, 635, 636, 460,
	0, 384, 385, 0, 386, 387, 388, 389, 0, 0,
	0, 0, 390, 391, 392, 394, 0, 0, 393, 637,
	638, 0, 639, 0, 395, 396, 0, 640, 0, 397,
	398, 399, 0, 400, 0, 0, 0, 401, 402, 403,
	404, 405, 406, 0, 407, 409, 408, 0, 410, 641,
	0, 411, 412, 0, 0, 413, 0, 0, 0, 414,
	415, 418, 0, 0, 416, 417, 419, 420, 0, 421,
	422, 424, 427, 423, 425, 426, 428, 441, 429, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	443, 0, 442, 0, 444, 445, 446, 451, 453, 454,
	449, 450, 452, 455, 456, 448, 0, 447, 0, 0,
	0, 457, 458, 0, 642, 459, 643, 461, 462, 0,
	0, 463, 0, 0, 0, 465, 466, 467, 0, 0,
	468, 469, 644, 0, 470, 0, 645, 471, 472, 464,
	473, 474, 0, 476, 477, 478, 479, 480, 0, 481,
	482, 646, 483, 484, 485, 647, 486, 487, 488, 648,
	489, 649, 490, 491, 0, 492, 493, 0, 494, 495,
	496, 497, 0, 499, 500, 650, 501, 503, 502, 504,
	0, 505, 0, 506, 507, 508, 0, 0, 0, 0,
	509, 0, 511, 512, 513, 514, 510, 515, 516, 517,
	518, 0, 519, 520, 521, 0, 522, 523, 524, 525,
	651, 0, 0, 527, 528, 534, 535, 529, 530, 536,
	537, 538, 539, 540, 0, 542, 543, 541, 544, 545,
	546, 0, 547, 548, 531, 532, 549, 550, 0, 551,
	552, 553, 554, 555, 556, 652, 0, 557, 0, 558,
	559, 560, 562, 533, 563, 568, 569, 653, 564, 565,
	566, 567, 654, 571, 572, 0, 573, 574, 0, 570,
	561, 0, 575, 576, 577, 578, 579, 580, 581, 354,
	582, 0, 583, 655, 656, 657, 658, 0, 592, 0,
	584, 585, 586, 659, 587, 660, 0, 588, 589, 590,
	591, 0, 593, 594, 0, 0, 595, 596, 597, 599,
	600, 598, 601, 0, 602, 0, 0, 603, 604, 605,
	661, 662, 663, 0, 607, 606, 608, 664, 0, 0,
	0, 0, 0, 609, 610, 665, 611, 612, 613, 1735,
	1736, 0, 1768, 1769, 1770, 1778, 1779, 1780, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1771, 1766, 0, 0, 0, 0, 1735, 1736,
	1738, 1768, 1769, 1770, 1778, 1779, 1780, 0, 0, 1784,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1771, 1766, 0, 0, 0, 0, 0, 0, 1738,
	0, 0, 0, 0, 0, 1737, 1735, 1736, 1784, 1768,
	1769, 1770, 1778, 1779, 1780, 1757, 0, 0, 0, 0,
	0, 0, 0, 0, 1754, 0, 0, 0, 0, 1771,
	1766, 0, 0, 0, 1737, 0, 0, 1738, 0, 0,
	0, 0, 0, 0, 1757, 0, 1784, 0, 0, 0,
	0, 0, 0, 1754, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1737, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1757, 0, 0, 0, 0, 0, 0, 0,
	0, 1754, 0, 0, 0, 0, 0, 0, 0, 1760,
	1761, 1762, 1763, 0, 0, 0, 0, 0, 0, 1743,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1760, 1761,
	1762, 1763, 0, 0, 0, 0, 0, 0, 1743, 0,
	0, 0, 0, 0, 0, 1775, 0, 0, 1785, 0,
	0, 0, 0, 0, 1765, 1767, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1760, 1761, 1762, 1763,
	0, 1781, 0, 1782, 1775, 0, 1743, 1785, 0, 0,
	1752, 1753, 0, 1765, 1767, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1773, 0,
	1781, 0, 1782, 0, 0, 0, 0, 0, 0, 1752,
	1753, 0, 1775, 1758, 0, 1785, 0, 0, 0, 0,
	0, 1765, 1767, 0, 0, 0, 0, 1773, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1781, 0,
	1782, 0, 1758, 0, 0, 0, 0, 1752, 1753, 0,
	0, 0, 0, 0, 0, 1783, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1773, 0, 0, 0, 0,
	0, 0, 0, 1772, 0, 0, 0, 0, 0, 0,
	1758, 0, 0, 0, 1783, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1772, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1783, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1764, 0, 0, 0,
	1772, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1759, 0, 0,
	0, 0, 0, 0, 0, 1764, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1776, 0, 0, 1759, 0, 0, 0,
	0, 0, 1735, 1736, 0, 1768, 1769, 1770, 1778, 1779,
	1780, 0, 0, 1764, 0, 0, 0, 0, 0, 0,
	0, 0, 1776, 0, 0, 1771, 1766, 0, 0, 0,
	0, 0, 0, 1738, 1759, 0, 0, 0, 0, 0,
	0, 0, 1784, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1776, 0, 0, 0, 0, 0, 0, 0, 1737, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1757, 0,
	0, 0, 0, 0, 0, 0, 0, 1754, 0, 0,
	0, 0, 0, 0, 1774, 0, 0, 0, 0, 1749,
	1750, 1756, 1777, 1755, 1751, 0, 1748, 1746, 1747, 1739,
	1740, 1741, 1742, 1744, 1745, 0, 0, 0, 0, 4324,
	0, 0, 0, 1774, 0, 0, 0, 0, 1749, 1750,
	1756, 1777, 1755, 1751, 0, 1748, 1746, 1747, 1739, 1740,
	1741, 1742, 1744, 1745, 0, 0, 0, 0, 4151, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1774, 1760, 1761, 1762, 1763, 1749, 1750, 1756, 1777,
	1755, 1751, 1743, 1748, 1746, 1747, 1739, 1740, 1741, 1742,
	1744, 1745, 0, 0, 0, 0, 3997, 0, 0, 1735,
	1736, 0, 1768, 1769, 1770, 1778, 1779, 1780, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1775, 0,
	0, 1785, 1771, 1766, 0, 0, 0, 1765, 1767, 0,
	1738, 0, 0, 0, 0, 0, 0, 0, 0, 1784,
	0, 0, 0, 0, 1781, 0, 1782, 0, 0, 0,
	0, 0, 0, 1752, 1753, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1737, 0, 0, 0, 0,
	0, 1773, 0, 0, 0, 1757, 0, 0, 0, 0,
	0, 0, 0, 0, 1754, 0, 1758, 1735, 1736, 0,
	1768, 1769, 1770, 1778, 1779, 1780, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1771, 1766, 0, 0, 0, 0, 0, 0, 1738, 0,
	0, 0, 0, 0, 0, 0, 0, 1784, 1783, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1772, 0, 0, 0,
	0, 0, 0, 1737, 0, 0, 0, 0, 0, 1760,
	1761, 1762, 1763, 1757, 0, 0, 0, 0, 0, 1743,
	0, 0, 1754, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1775, 0, 0, 1785, 1764,
	0, 0, 0, 0, 1765, 1767, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1759, 1781, 0, 1782, 0, 0, 0, 0, 0, 0,
	1752, 1753, 0, 0, 0, 0, 0, 1760, 1761, 1762,
	1763, 0, 0, 0, 0, 0, 1776, 1743, 1773, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1758, 1735, 1736, 0, 1768, 1769, 1770,
	1778, 1779, 1780, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1775, 0, 0, 1785, 1771, 1766, 0,
	0, 0, 1765, 1767, 0, 1738, 0, 0, 0, 0,
	0, 0, 0, 0, 1784, 1783, 0, 0, 0, 1781,
	0, 1782, 0, 0, 0, 0, 0, 0, 1752, 1753,
	0, 0, 0, 1772, 0, 0, 0, 0, 0, 0,
	1737, 0, 0, 0, 0, 0, 1773, 0, 0, 0,
	1757, 0, 0, 0, 0, 0, 0, 1774, 0, 1754,
	0, 1758, 1749, 1750, 1756, 1777, 1755, 1751, 0, 1748,
	1746, 1747, 1739, 1740, 1741, 1742, 1744, 1745, 0, 0,
	0, 0, 3928, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1764, 0, 0, 0,
	0, 0, 0, 1783, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1759, 0, 0,
	0, 1772, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1760, 1761, 1762, 1763, 0, 0,
	0, 0, 0, 1776, 1743, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1735, 1736, 0, 1768, 1769, 1770,
	1778, 1779, 1780, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1771, 1766, 0,
	1775, 0, 0, 1785, 1764, 1738, 0, 0, 0, 1765,
	1767, 0, 0, 0, 1784, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1759, 1781, 0, 1782, 0,
	0, 0, 0, 0, 0, 1752, 1753, 0, 0, 0,
	1737, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1757, 1776, 0, 1773, 0, 0, 0, 0, 0, 1754,
	0, 0, 0, 0, 1774, 0, 0, 0, 1758, 1749,
	1750, 1756, 1777, 1755, 1751, 0, 1748, 1746, 1747, 1739,
	1740, 1741, 1742, 1744, 1745, 0, 0, 0, 0, 3927,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1783, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1772, 0,
	0, 0, 0, 0, 1760, 1761, 1762, 1763, 0, 0,
	0, 0, 0, 0, 1743, 0, 0, 0, 0, 0,
	0, 0, 1774, 0, 0, 0, 0, 1749, 1750, 1756,
	1777, 1755, 1751, 0, 1748, 1746, 1747, 1739, 1740, 1741,
	1742, 1744, 1745, 0, 0, 0, 0, 3926, 0, 0,
	1775, 0, 0, 1785, 0, 0, 0, 0, 0, 1765,
	1767, 1764, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1781, 0, 1782, 0,
	0, 0, 1759, 0, 0, 1752, 1753, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1773, 0, 0, 1735, 1736, 1776, 1768,
	1769, 1770, 1778, 1779, 1780, 0, 0, 0, 1758, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1771,
	1766, 0, 0, 0, 0, 0, 0, 1738, 0, 0,
	0, 0, 0, 0, 0, 0, 1784, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1783, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1737, 0, 0, 0, 0, 0, 1772, 0,
	0, 0, 1757, 0, 0, 0, 0, 0, 0, 0,
	0, 1754, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1774,
	0, 0, 0, 0, 1749, 1750, 1756, 1777, 1755, 1751,
	0, 1748, 1746, 1747, 1739, 1740, 1741, 1742, 1744, 1745,
	0, 0, 0, 0, 3594, 0, 0, 0, 0, 0,
	0, 1764, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1759, 0, 0, 0, 1760, 1761, 1762, 1763,
	0, 0, 0, 0, 0, 0, 1743, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1735, 1736, 1776, 1768,
	1769, 1770, 1778, 1779, 1780, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1771,
	1766, 0, 1775, 0, 0, 1785, 0, 1738, 0, 0,
	0, 1765, 1767, 0, 0, 0, 1784, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1781, 0,
	1782, 0, 0, 0, 0, 0, 0, 1752, 1753, 0,
	0, 0, 1737, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1757, 0, 0, 1773, 0, 0, 0, 0,
	0, 1754, 0, 0, 0, 0, 0, 0, 0, 0,
	1758, 0, 0, 0, 0, 0, 0, 0, 0, 1774,
	0, 0, 0, 0, 1749, 1750, 1756, 1777, 1755, 1751,
	0, 1748, 1746, 1747, 1739, 1740, 1741, 1742, 1744, 1745,
	0, 0, 0, 0, 3096, 0, 0, 0, 0, 0,
	0, 0, 1783, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1772, 0, 0, 0, 0, 0, 1760, 1761, 1762, 1763,
	0, 0, 0, 0, 0, 0, 1743, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1735, 1736, 0, 1768,
	1769, 1770, 1778, 1779, 1780, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1771,
	1766, 0, 1775, 0, 0, 1785, 0, 1738, 0, 0,
	0, 1765, 1767, 1764, 0, 0, 1784, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1781, 0,
	1782, 0, 0, 0, 1759, 0, 0, 1752, 1753, 0,
	0, 0, 1737, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1757, 0, 0, 1773, 0, 0, 0, 0,
	1776, 1754, 0, 0, 0, 0, 0, 0, 0, 0,
	1758, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1783, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1772, 0, 0, 0, 0, 0, 1760, 1761, 1762, 1763,
	0, 0, 0, 0, 0, 0, 1743, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1774, 0, 0, 0, 0, 1749, 1750, 1756, 1777,
	1755, 1751, 0, 1748, 1746, 1747, 1739, 1740, 1741, 1742,
	1744, 1745, 1775, 0, 0, 1785, 3095, 0, 0, 0,
	0, 1765, 1767, 1764, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1781, 0,
	1782, 0, 0, 0, 1759, 0, 0, 1752, 1753, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1773, 0, 0, 1735, 1736,
	1776, 1768, 1769, 1770, 1778, 1779, 1780, 0, 0, 0,
	1758, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1771, 1766, 0, 0, 0, 0, 0, 0, 1738,
	0, 0, 0, 0, 0, 0, 0, 0, 1784, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1783, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1737, 0, 0, 0, 0, 0,
	1772, 0, 0, 0, 1757, 0, 0, 0, 0, 0,
	0, 0, 0, 1754, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1774, 0, 0, 0, 0, 1749, 1750, 1756, 1777,
	1755, 1751, 0, 1748, 1746, 1747, 1739, 1740, 1741, 1742,
	1744, 1745, 0, 0, 0, 0, 3094, 0, 0, 0,
	0, 0, 0, 1764, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1759, 0, 0, 0, 1760, 1761,
	1762, 1763, 0, 0, 0, 0, 0, 0, 1743, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1776, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1775, 0, 0, 1785, 0, 0,
	0, 0, 0, 1765, 1767, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1781, 0, 1782, 0, 0, 0, 0, 0, 0, 1752,
	1753, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1773, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1758, 0, 0, 0, 0, 0, 0, 0,
	0, 1774, 0, 0, 0, 0, 1749, 1750, 1756, 1777,
	1755, 1751, 0, 1748, 1746, 1747, 1739, 1740, 1741, 1742,
	1744, 1745, 0, 0, 156, 0, 3093, 0, 0, 0,
	0, 0, 0, 73, 1783, 46, 45, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	74, 0, 1772, 151, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 78, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 67, 0, 0,
	0, 0, 0, 0, 48, 0, 153, 1735, 1736, 0,
	1768, 1769, 1770, 1778, 1779, 1780, 0, 0, 0, 0,
	0, 0, 0, 0, 47, 0, 87, 0, 0, 0,
	1771, 1766, 0, 0, 0, 1764, 0, 0, 1738, 0,
	0, 0, 0, 0, 0, 0, 0, 1784, 0, 0,
	0, 0, 50, 68, 0, 0, 1759, 0, 0, 0,
	0, 51, 0, 0, 0, 0, 57, 0, 0, 0,
	154, 0, 0, 1737, 0, 0, 0, 0, 49, 0,
	107, 0, 1776, 1757, 0, 93, 104, 0, 0, 0,
	0, 0, 1754, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 52, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 94, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1760, 1761, 1762,
	1763, 0, 0, 0, 0, 0, 0, 1743, 4587, 0,
	0, 0, 0, 1774, 0, 0, 0, 0, 1749, 1750,
	1756, 1777, 1755, 1751, 0, 1748, 1746, 1747, 1739, 1740,
	1741, 1742, 1744, 1745, 0, 0, 3060, 0, 0, 0,
	0, 0, 0, 1775, 0, 0, 1785, 0, 0, 0,
	0, 0, 1765, 1767, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1781,
	0, 1782, 0, 0, 0, 0, 0, 0, 1752, 1753,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1773, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1758, 0, 0, 0, 97, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 53, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 56, 0, 0, 0,
	0, 59, 0, 1783, 0, 0, 0, 0, 0, 0,
	69, 0, 0, 0, 0, 0, 58, 182, 100, 0,
	103, 1772, 0, 0, 54, 0, 0, 0, 155, 0,
	0, 0, 0, 0, 0, 55, 0, 0, 0, 0,
	0, 0, 0, 0, 229, 0, 0, 0, 0, 0,
	0, 0, 62, 4586, 0, 0, 0, 148, 1735, 1736,
	0, 1768, 1769, 1770, 1778, 1779, 1780, 0, 0, 0,
	0, 152, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1771, 1766, 0, 1764, 0, 0, 0, 0, 1738,
	0, 231, 0, 0, 0, 0, 0, 0, 1784, 0,
	0, 0, 0, 0, 0, 1759, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 150, 0, 0,
	0, 0, 0, 0, 1737, 0, 0, 0, 0, 0,
	0, 1776, 186, 0, 1757, 0, 0, 0, 0, 0,
	230, 1735, 1736, 1754, 1768, 1769, 1770, 1778, 1779, 1780,
	0, 0, 223, 0, 0, 0, 0, 0, 0, 0,
	0, 224, 0, 0, 1771, 1766, 0, 0, 0, 0,
	3031, 0, 1738, 0, 0, 0, 0, 0, 0, 0,
	0, 1784, 0, 185, 0, 0, 3, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1737, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1757, 1760, 1761,
	1762, 1763, 0, 0, 0, 0, 1754, 0, 1743, 0,
	3180, 0, 1774, 3179, 0, 0, 0, 1749, 1750, 1756,
	1777, 1755, 1751, 0, 1748, 1746, 1747, 1739, 1740, 1741,
	1742, 1744, 1745, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1775, 3032, 0, 1785, 0, 0,
	0, 0, 0, 1765, 1767, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1781, 0, 1782, 0, 0, 0, 0, 0, 0, 1752,
	1753, 1760, 1761, 1762, 1763, 0, 0, 0, 0, 0,
	0, 1743, 0, 2596, 0, 0, 0, 1773, 0, 0,
	1735, 1736, 0, 1768, 1769, 1770, 1778, 1779, 1780, 0,
	0, 0, 1758, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1771, 1766, 0, 0, 1775, 2595, 0,
	1785, 1738, 0, 0, 0, 0, 1765, 1767, 0, 0,
	1784, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1781, 1783, 1782, 0, 0, 0, 0,
	0, 0, 1752, 1753, 0, 0, 1737, 0, 0, 0,
	0, 0, 1772, 0, 0, 0, 1757, 0, 0, 0,
	1773, 0, 0, 0, 0, 1754, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1758, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1764, 0, 1783, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1772, 1759, 0, 0, 0,
	1760, 1761, 1762, 1763, 0, 0, 0, 0, 0, 0,
	1743, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1776, 0, 0, 0, 0, 0, 0, 0,
	1735, 1736, 0, 1768, 1769, 1770, 1778, 1779, 1780, 0,
	0, 0, 0, 0, 0, 0, 1775, 0, 0, 1785,
	0, 0, 0, 1771, 1766, 1765, 1767, 0, 1764, 0,
	0, 1738, 0, 0, 0, 0, 0, 0, 0, 0,
	1784, 0, 1781, 0, 1782, 0, 0, 0, 0, 1759,
	0, 1752, 1753, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1737, 0, 0, 1773,
	0, 0, 0, 0, 0, 1776, 1757, 0, 0, 0,
	0, 0, 0, 0, 1758, 1754, 0, 0, 0, 0,
	0, 0, 0, 1774, 0, 0, 0, 0, 1749, 1750,
	1756, 1777, 1755, 1751, 0, 1748, 1746, 1747, 1739, 1740,
	1741, 1742, 1744, 1745, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1783, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1772, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1760, 1761, 1762, 1763, 0, 0, 0, 0, 0, 0,
	1743, 0, 0, 0, 0, 0, 1774, 0, 0, 0,
	0, 1749, 1750, 1756, 1777, 1755, 1751, 0, 1748, 1746,
	1747, 1739, 1740, 1741, 1742, 1744, 1745, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1775, 1764, 0, 1785,
	0, 0, 0, 0, 0, 1765, 1767, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1759, 0,
	0, 0, 1781, 0, 1782, 0, 0, 0, 0, 0,
	0, 1752, 1753, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1776, 0, 0, 0, 0, 1773,
	1735, 1736, 0, 1768, 1769, 1770, 1778, 1779, 1780, 0,
	0, 0, 0, 0, 1758, 0, 0, 0, 0, 0,
	0, 0, 0, 1771, 1766, 0, 0, 0, 0, 0,
	0, 1738, 0, 0, 0, 0, 0, 0, 0, 0,
	1784, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1783, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1737, 0, 0, 0,
	0, 0, 0, 0, 1772, 1032, 1757, 0, 0, 0,
	0, 0, 0, 0, 0, 1754, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1774, 0, 0, 0, 0,
	1749, 1750, 1756, 1777, 1755, 1751, 0, 1748, 1746, 1747,
	1739, 1740, 1741, 1742, 1744, 1745, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1764, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1759, 0,
	1760, 1761, 1762, 1763, 0, 0, 0, 0, 0, 0,
	1743, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1776, 0, 0, 1735, 1736, 0,
	1768, 1769, 1770, 1778, 1779, 1780, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1775, 0, 0, 1785,
	1771, 1766, 0, 0, 0, 1765, 1767, 0, 1738, 0,
	0, 0, 0, 0, 0, 0, 0, 1784, 0, 0,
	0, 0, 1781, 0, 1782, 0, 0, 0, 0, 0,
	0, 1752, 1753, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1737, 0, 0, 0, 0, 0, 1773,
	0, 0, 0, 1757, 0, 0, 0, 0, 0, 0,
	0, 0, 1754, 0, 1758, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1774, 0, 0, 0, 0,
	1749, 1750, 1756, 1777, 1755, 1751, 0, 1748, 1746, 1747,
	1739, 1740, 1741, 1742, 1744, 1745, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1783, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1772, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1760, 1761, 1762,
	1763, 0, 0, 0, 0, 0, 0, 1743, 0, 0,
	0, 0, 3186, 0, 0, 0, 0, 1735, 1736, 0,
	1768, 1769, 1770, 1778, 1779, 1780, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1771, 1766, 0, 1775, 0, 3181, 1785, 1764, 1738, 0,
	0, 0, 1765, 1767, 0, 0, 0, 1784, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1759, 1781,
	0, 1782, 0, 0, 0, 0, 0, 0, 1752, 1753,
	0, 0, 0, 1737, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1757, 1776, 0, 1773, 0, 0, 0,
	1735, 1736, 1754, 1768, 1769, 1770, 1778, 1779, 1780, 0,
	0, 1758, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1771, 1766, 0, 0, 0, 0, 0,
	0, 1738, 0, 0, 0, 0, 0, 3575, 0, 0,
	1784, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1783, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1737, 0, 0, 0,
	0, 1772, 0, 0, 0, 0, 1757, 1760, 1761, 1762,
	1763, 0, 0, 0, 0, 1754, 0, 1743, 0, 0,
	0, 0, 0, 0, 0, 1774, 0, 0, 0, 0,
	1749, 1750, 1756, 1777, 1755, 1751, 0, 1748, 1746, 1747,
	1739, 1740, 1741, 1742, 1744, 1745, 0, 0, 0, 0,
	0, 0, 0, 1775, 0, 0, 1785, 0, 0, 0,
	0, 0, 1765, 1767, 1764, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1781,
	0, 1782, 0, 0, 0, 1759, 0, 0, 1752, 1753,
	1760, 1761, 1762, 1763, 0, 0, 0, 0, 0, 0,
	1743, 0, 0, 0, 0, 0, 1773, 0, 0, 1735,
	1736, 1776, 1768, 1769, 1770, 1778, 1779, 1780, 0, 0,
	0, 1758, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1771, 1766, 0, 0, 1775, 3097, 0, 1785,
	1738, 0, 0, 0, 0, 1765, 1767, 0, 0, 1784,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1781, 1783, 1782, 0, 0, 0, 0, 0,
	0, 1752, 1753, 0, 0, 1737, 0, 0, 0, 0,
	0, 1772, 0, 0, 0, 1757, 0, 0, 0, 1773,
	0, 0, 0, 0, 1754, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1758, 0, 0, 0, 0, 0,
	0, 0, 1774, 0, 0, 0, 0, 1749, 1750, 1756,
	1777, 1755, 1751, 0, 1748, 1746, 1747, 1739, 1740, 1741,
	1742, 1744, 1745, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1764, 0, 1783, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1772, 1759, 0, 0, 0, 1760,
	1761, 1762, 1763, 0, 0, 0, 0, 0, 0, 1743,
	0, 0, 0, 0, 3148, 0, 0, 0, 0, 0,
	0, 1776, 0, 0, 0, 0, 0, 0, 0, 1735,
	1736, 0, 1768, 1769, 1770, 1778, 1779, 1780, 0, 0,
	0, 0, 0, 0, 0, 1775, 0, 0, 1785, 0,
	0, 0, 1771, 1766, 1765, 1767, 0, 1764, 0, 0,
	1738, 0, 0, 0, 0, 0, 0, 0, 0, 1784,
	0, 1781, 0, 1782, 0, 0, 0, 0, 1759, 0,
	1752, 1753, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1737, 0, 0, 1773, 0,
	0, 0, 0, 0, 1776, 1757, 0, 0, 0, 0,
	0, 0, 0, 1758, 1754, 0, 0, 0, 0, 0,
	0, 0, 1774, 0, 0, 0, 0, 1749, 1750, 1756,
	1777, 1755, 1751, 0, 1748, 1746, 1747, 1739, 1740, 1741,
	1742, 1744, 1745, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1783, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1772, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1760,
	1761, 1762, 1763, 0, 0, 0, 0, 0, 0, 1743,
	0, 0, 0, 0, 0, 1774, 0, 0, 0, 0,
	1749, 1750, 1756, 1777, 1755, 1751, 0, 1748, 1746, 1747,
	1739, 1740, 1741, 1742, 1744, 1745, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1775, 1764, 0, 1785, 0,
	0, 0, 0, 0, 1765, 1767, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1759, 0, 0,
	0, 1781, 0, 1782, 0, 0, 0, 0, 0, 0,
	1752, 1753, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1776, 0, 0, 0, 0, 1773, 1735,
	1736, 0, 1768, 1769, 1770, 1778, 1779, 1780, 0, 0,
	0, 0, 0, 1758, 0, 0, 0, 0, 0, 0,
	0, 0, 1771, 1766, 0, 0, 0, 0, 0, 0,
	1738, 0, 0, 0, 0, 0, 0, 0, 0, 1784,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1783, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1737, 0, 0, 0, 0,
	0, 0, 0, 1772, 0, 1757, 0, 0, 0, 0,
	0, 0, 0, 0, 1754, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1774, 0, 0, 0, 0, 1749,
	1750, 1756, 1777, 1755, 1751, 0, 1748, 1746, 1747, 1739,
	1740, 1741, 1742, 1744, 1745, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1735, 1736, 0, 1768, 1769,
	1770, 1778, 1779, 1780, 0, 0, 1764, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1766,
	0, 0, 0, 0, 0, 0, 1738, 1759, 0, 1760,
	1761, 1762, 1763, 0, 0, 1784, 0, 0, 0, 1743,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1776, 0, 0, 0, 0, 0, 0,
	0, 1737, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1757, 0, 0, 0, 1775, 0, 0, 1785, 0,
	1754, 0, 0, 0, 1765, 1767, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1781, 0, 1782, 0, 0, 0, 0, 0, 0,
	1752, 1753, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1773, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1758, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1774, 1760, 1761, 1762, 1763, 1749,
	1750, 1756, 1777, 1755, 1751, 1743, 1748, 1746, 1747, 1739,
	1740, 1741, 1742, 1744, 1745, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1783, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1775, 0, 0, 1785, 0, 0, 0, 0, 0,
	1765, 1767, 0, 0, 0, 0, 0, 923, 0, 969,
	0, 0, 0, 0, 0, 0, 0, 1781, 0, 1782,
	0, 0, 0, 0, 0, 0, 1752, 1753, 0, 0,
	0, 0, 0, 0, 931, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1773, 0, 0, 0, 0, 0,
	945, 0, 929, 928, 0, 0, 1764, 0, 0, 1758,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1759, 0, 0,
	930, 0, 0, 0, 0, 933, 0, 0, 0, 0,
	977, 0, 0, 0, 0, 0, 0, 0, 0, 942,
	943, 1783, 0, 1776, 0, 0, 0, 0, 959, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 970, 935, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 936, 0, 0, 0, 0, 0,
	0, 0, 0, 968, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1764, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1759, 1774, 0, 0, 938, 0, 1749,
	1750, 1756, 1777, 1755, 1751, 927, 1748, 1746, 1747, 1739,
	1740, 1741, 1742, 1744, 1745, 0, 0, 0, 0, 1776,
	0, 0, 0, 939, 940, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 947, 946, 0, 0, 0, 0, 0, 0,
	941, 0, 0, 0, 956, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 974, 967, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 971, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1774, 0, 0, 0, 0, 1749, 1750, 1756, 1777, 1755,
	1751, 0, 1748, 1746, 1747, 1739, 1740, 1741, 1742, 1744,
	1745, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 934, 0, 0, 976, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	932, 0, 0, 0, 963, 964, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 966, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 961,
	0, 0, 0, 0, 0, 0, 975, 957, 0, 950,
	948, 0, 953, 0, 0, 0, 0, 0, 954, 0,
	0, 925, 0, 972, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 926, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 965, 0, 955, 0,
	0, 0, 0, 0, 952, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 973, 0, 0, 0, 0,
	0, 0, 0, 958, 0, 0, 0, 0, 0, 0,
	0, 0, 937, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 960, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	962,
}

var sqlPact = [...]int{
	119203, -1000, -1000, -1000, -1000, 194, -1000, -1000, 192, 188,
	186, 185, 178, 176, 175, 174, 172, 168, 167, -1000,
	-1000, -1000, -1000, -1000, -1000, 165, -1000, -1000, 162, -1000,
	161, 160, 159, -1000, -1000, 156, -1000, 152, -1000, -1000,
	-1000, -1000, 151, 147, 144, 88363, 87820, 88899, 2234, 109951,
	96431, 2221, 79160, 109408, 78617, 108865, 2041, 9166, 108322, 2683,
	138, -1000, 107779, 136, 133, 131, -1000, 107236, -1000, 1815,
	-1000, 128, -1000, 4608, 63928, 125, 123, 121, 2476, 119,
	-1000, 118, 115, -1000, -1000, 112, -1000, 15110, 1468, -1000,
	108, 106, -1000, 282, 93730, 105, 104, 2442, 103, 101,
	63384, 99, 95, 2057, 2844, -1000, -1000, 1968, -1000, -1000,
	90, 89, 87, 85, 82, 80, 79, 78, 75, 73,
	70, -1000, 69, 68, 67, 66, 62, -1000, 60, 57,
	54, -1000, 52, -1000, 50, 48, 45, 44, 43, 40,
	39, 37, 34, 27, 25, 20, 19, -1000, 121795, -1000,
	1879, 1634, 1633, 1632, 1617, 1608, 953, 18, 17, 16,
	15, 14, 13, 12, 10, 9, 8, 7, 4, -1,
	-2, -3, -4, -5, 142, -6, -7, -8, -9, -10,
	-11, -12, 2238, -1000, 1478, 1029, 29575, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 115847, 110487, -16, -113, -17, -1000, 3229,
	1018, 52469, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	285, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 492, 1843,
	755, -1000, -1000, -1000, 106700, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2226, -43, -1000, 1900, -1000, -1000, -1000,
	-1000, -1000, 750, -1000, 2225, 197, 2175, -1000, -1000, -1000,
	3302, 2385, 3729, 3728, 3727, 3726, 3722, 115311, 1741, 3721,
	2477, 3720, 3719, 3718, 3717, 3716, 3714, 3713, -1000, 87277,
	1012, 86734, 86191, 3323, 106164, 85648, 105621, 72660, 44585, 1026,
	3301, -1000, -1000, -1000, -1000, -1000, -1000, 110487, -1000, 1011,
	-1000, -1000, 3712, 3711, 1995, 749, 95888, -1000, 1986, -1000,
	896, 31282, -1000, 1223, -1000, 31282, 279, -1000, -1000, -1000,
	-1000, -1000, -1000, 3710, 3709, 3708, 3707, 3706, -1000, -1000,
	78074, 22695, 77531, 76988, 105078, 22141, 85105, 84562, 3703, 104535,
	72106, 1010, 1378, -1000, -1000, -1000, -1000, -1000, -1000, -38,
	69890, 3497, 110487, -1000, 274, -1000, -1000, -1000, -1000, -1000,
	-1000, 44004, 751, 43423, 785, 42842, 667, -1000, -1000, -1000,
	-1000, 71552, -1000, 103992, 2379, 3700, 3698, 1091, 3697, 3181,
	1728, 3696, 1649, 1167, 3695, 3694, 3693, 3692, 3690, 3689,
	3688, 1371, 103449, 2913, 1420, 102906, 1607, 70998, 1008, 84019,
	88899, 2624, 102363, 1335, 1328, -1000, -1000, -1000, -1000, 3036,
	2824, 2819, 1337, -1000, -1000, -1000, -1000, 55182, 7015, 6784,
	10176, 101820, 57982, 88899, 88899, -1000, -1000, -1000, -1000, -1000,
	42261, 554, 41680, 948, -1000, -1000, 55742, 2872, -1000, -1000,
	-1000, -1000, 41099, 481, 40518, 866, 110487, -1000, 2912, 1850,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2153, 1540, 3486, 2692, 70444,
	1972, 1366, 3265, 3025, 3022, 1479, 3017, 3687, 2546, 3014,
	3011, 3009, 3007, 2997, 1531, 2558, 277, 28994, 2900, 1618,
	39937, 1474, 1477, 2991, 2990, 3523, 1864, 1915, 2143, 76445,
	3686, 3685, 3216, 2986, 2964, 2740, 2948, -1000, 2871, -1000,
	-1000, -1000, -1000, 1437, -1000, -1000, -1000, -1000, 79696, -1000,
	-1000, 1877, -1000, -1000, 1877, -1000, -1000, -1000, -1000, -1000,
	1225, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1478, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2227, -1000, 1922, -1000, -1000, 2445, 3204,
	3204, 3204, 3300, 457, 454, -1000, 142, -1000, -1000, 121178,
	-1000, -1000, 45154, 45154, 45154, 45154, 45154, 45154, 45154, 2051,
	-1000, 747, -1000, -1000, 794, -1000, 745, 579, -1000, -1000,
	-1000, -1000, -1000, -1000, 741, -1000, -1000, -1000, -1000, -1000,
	-1000, 3497, -1000, 25520, -1000, -1000, -1000, 439, 740, 45154,
	-1000, -1000, 3546, 3545, 965, -1000, 273, 924, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2910, 739, 735, -1000, 733, 732, 725, 721, 718, -1000,
	-1000, -1000, 707, 705, 702, 700, 699, 696, 695, 694,
	-1000, 1916, -1000, -1000, -1000, -1000, -1000, -1000, 651, 649,
	649, 649, -1000, 999, -1000, -1000, -1000, 296, 642, 271,
	641, 640, 638, -1000, 690, 689, 688, 687, 686, 685,
	682, 681, 677, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	997, -1000, -1000, -1000, -1000, -39, 110487, -1000, 492, -39,
	-1000, -1000, 671, -1000, 33570, 33570, 33570, -1000, -1000, 2223,
	45154, -1000, 2780, -1000, -31, -31, 864, 54094, -1000, 51381,
	864, 272, 804, 59607, -1000, 2863, -1000, -1000, 668, 268,
	-1000, -1000, -1000, -1000, 23247, 2862, 110487, 110487, 88899, 88899,
	88899, 3684, 3096, 45154, -1000, -1000, 67709, 110487, 89971, -1000,
	-1000, 3417, 64464, 67168, 110487, 2909, 66632, 3680, -1000, -1000,
	-1000, -1000, -1000, 3072, 3678, 3677, 3676, -1000, 110487, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 216, 3067, -1000, -1000,
	93187, 216, 3066, -1000, 216, 3065, -1000, 92651, -1000, -1000,
	2114, 3062, -1000, -1000, 220, 3061, -1000, -1000, -1000, 218,
	3060, -1000, -1000, 267, -83, 3058, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 121178, -1000,
	-1000, -1000, 66089, -1000, 3226, -1000, -1000, 110487, -1000, 45154,
	-1000, 3415, 1910, 73753, 3337, -48, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2446, 2462, 1111, 2271, -1000, 3107, 1285,
	-1000, 31282, 3167, -1000, -1000, -1000, 259, 23247, -1000, -1000,
	-1000, -1000, -1000, -1000, 2386, 3051, 1354, -1000, 2259, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2160, 3050, -1000,
	2107, 3045, 2129, -1000, -1000, 2596, -1000, 3209, -1000, -1000,
	1623, 3042, -30, -1000, -1000, 2302, -1000, -1000, 1914, -1000,
	974, 3040, -1000, 83476, 57422, 55742, 69890, -42, -1000, -1000,
	-1000, -1000, -158, -1000, 21587, 121178, -1000, -1000, -1000, -1000,
	1640, 121178, 898, -1000, -1000, 3038, -1000, 121178, 897, -1000,
	-1000, 3035, -1000, 2908, -1000, -1000, 2340, -1000, -1000, 3675,
	-1000, -1000, 3674, -1000, 3673, 3672, 3670, -1000, 1639, 1878,
	3669, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 82940,
	2216, -1000, -1000, 81854, 2906, -1000, 2338, 3335, -1000, 82397,
	1005, -1000, 974, 2336, -1000, 92115, 1001, 2331, -1000, 3668,
	3310, 2651, 974, 2325, -1000, -1000, -1000, -1000, -1000, 1021,
	-1000, 61226, -1000, 61226, -1000, 1484, -1000, 114775, -31, 88899,
	3497, -1000, -60, -1000, -1000, -1000, 1018, -1000, 54638, -1000,
	54638, 95345, 73212, 938, 743, 62840, 121178, -1000, -1000, -1000,
	-1000, 121178, -1000, -1000, -1000, -162, 2689, -1000, 73212, 56862,
	121178, -1000, -1000, -1000, -1000, 121178, -1000, -1000, -1000, 73212,
	81854, -1000, 101277, 81318, -1000, -1000, 1370, 2484, -1000, -1000,
	-1000, 73212, 1298, 73212, 73212, 73212, -1000, 100734, -1000, -1000,
	1991, 1230, 3218, 1923, 88899, -1000, 1834, -1000, -1000, -1000,
	3252, 110487, -1000, -1000, 2904, -1000, 65545, 91579, -1000, 91043,
	-1000, 90507, -1000, 88899, -1000, 88899, -1000, 3666, 3665, 3663,
	-1000, -1000, 3659, -1000, 3657, 3238, -1000, 121178, 3237, -1000,
	3656, 3331, 2900, 121178, -1000, 3064, 1647, 1637, 110487, -1000,
	-1000, 110487, -1000, 110487, -1000, -1000, -1000, 1432, -1000, -1000,
	2439, -1000, -1000, -1000, -1000, 88899, 1333, -1000, -1000, -1000,
	-1000, -1000, -1000, 2762, -1000, 1670, -1000, 1725, -1000, 2860,
	3234, -1000, 1363, -1000, -1000, 223, -1000, -1000, -48, -1000,
	114239, -1000, 2445, -1000, 110487, -1000, 2454, 2891, 2899, 1731,
	2249, 2525, -1000, 39356, 2490, 48568, 2258, 142, -1000, -1000,
	142, 142, 30713, -1000, -1000, 64464, 64464, 23247, 1307, 45154,
	45154, 45154, 45154, 45154, 45154, 45154, 45154, 45154, 45154, 45154,
	45154, 45154, 45154, 45154, 45154, 45154, 45154, 45154, 45154, 45154,
	45154, 45154, 45154, 45154, 45154, 45154, 45154, 45154, 45154, 45154,
	45154, 45154, 45154, 45154, 2342, 45154, 1221, 45154, 45154, 45154,
	45154, 2230, -1000, -1000, 1847, 525, 2000, -1000, 3489, 3489,
	3489, 1334, 1334, 121564, 121564, 610, 3654, 794, -1000, 45154,
	-1000, 166, 45154, 23801, -1000, 454, 7827, 2361, -1000, 453,
	24382, -1000, -1000, -1000, 25520, 579, 38775, 45154, 989, 121178,
	-1000, -1000, 1436, 3504, 21034, 2930, 2724, 666, 798, 793,
	28413, 27832, 27251, 26670, 703, 45154, 45154, 45154, 45154, 45154,
	45154, 45154, 45154, -1000, -1000, 3515, -1000, 3504, -1000, -1000,
	-1000, -1000, 3504, 1284, 1235, 3504, -1000, 3504, 3504, 5969,
	5969, 38206, 37625, 37044, 49137, 36463, 45154, 26089, 35882, 35301,
	-1000, 110487, -39, 3412, 45154, 155, -1000, 119909, -1000, 155,
	155, 664, -61, 121178, 2647, 2647, 53011, 2218, 2092, 2092,
	2092, -1000, 864, 16581, 864, 99657, 2111, 864, 864, 255,
	278, 452, 50839, 2780, 99657, 777, 663, -18, -19, -24,
	-1000, -1000, -25, -26, -1000, -1000, 88899, 658, 23801, 23247,
	246, 1426, -62, 2576, 2573, 2569, -1000, 2565, -1000, 1648,
	-63, 1218, 88899, 110487, 3653, -136, -1000, 4821, -69, -1000,
	1317, 243, 3504, -1000, -1000, -1000, -1000, -1000, 3652, 3651,
	-1000, 995, 656, 655, 470, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 651, 649, 649, 649, -1000, 296, 642,
	271, 641, 640, 638, -1000, -1000, -1000, -1000, -1000, 2857,
	88899, 110487, 3649, -158, 89971, -123, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 110487, -1000, -1000, -1000, 3647, -1000,
	88899, -1000, -1000, 88899, 216, 3034, -1000, 88899, -1000, 88899,
	213, 3032, -1000, -1000, 110487, -1000, 88899, 88899, -1000, 110487,
	110487, 110487, 73212, 73212, 222, -1000, 88899, 867, -71, 1100,
	-48, -1000, -1000, -1000, 1877, -1000, 2011, -1000, -1000, -1000,
	-1000, -1000, -1000, 1390, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 965, -1000, -1000, -1000, -1000, -1000, -1000, 3501,
	3499, -40, -1000, -1000, 23247, -1000, -50, 1604, 2222, 1216,
	-1000, 75902, 2292, 3232, 3644, 2638, 3208, 1480, -1000, 1430,
	-1000, 3319, 79696, 3357, 3373, 811, -1000, 2853, -1000, -1000,
	894, 1661, 1616, 1215, 1214, 79696, 2107, -1000, 64464, -1000,
	2625, 3299, 1398, 1389, 1398, 1398, 1405, -1000, 79696, 1609,
	1211, 1208, 1206, 1821, 1820, -1000, -1000, 1904, -1000, 1204,
	1203, 820, 1814, -1000, -52, 3350, 3354, 183, -1000, 2848,
	1202, -1000, -1000, -1000, 3297, 88899, 23247, 1521, 1515, 1511,
	1603, 1201, -41, -1000, 3348, 1198, 1197, -1000, 5067, -1000,
	73212, 2105, 3031, 2688, 861, 2684, -1000, -1000, -1000, 861,
	-42, 69890, 110487, 233, -1000, 166, 45154, 45154, 166, 45154,
	166, 3329, 3030, -1000, -1000, -1000, -1000, -1000, 3642, 1851,
	2472, -1000, -1000, 632, 2323, 2840, 110487, 2589, -44, 88899,
	-1000, 65004, 3024, 68250, 2107, 2321, -1000, -1000, 80775, -1000,
	2994, 492, 2318, -1000, 669, 3641, 2992, -1000, 113703, -1000,
	3226, 1320, 2989, 1050, 665, 3410, -1000, 665, 61768, -1000,
	110487, -1000, -31, 670, 74830, -72, -77, 445, -1000, 100198,
	110487, 1045, 75366, 110487, 3153, 972, 55742, -1000, 55742, -78,
	-162, 2682, 1412, 938, 938, 861, -1000, 861, -1000, 88899,
	2896, -1000, -1000, 73212, 938, 938, 938, -1000, -1000, -1000,
	-1000, 3640, 3638, 3637, -1000, -1000, -1000, 973, 88899, 110487,
	88899, -1000, 228, -1000, 110487, -1000, 110487, 110487, 88899, -1000,
	973, 110487, 973, 110487, 973, 110487, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 166, 45154, -1000, -1000, 3636, 1543, -1000,
	2895, -1000, 2894, -1000, 6, -1000, -1000, -1000, -1000, -1000,
	-1000, 1775, -1000, -1000, 88899, 88899, 88899, 88899, 110487, 3119,
	-1000, 110487, 3117, 88899, -1000, 79696, -1000, 2454, 2891, -1000,
	-1000, -1000, -1000, -1000, -1000, 1376, 2179, -1000, 2549, -1000,
	1463, -1000, -1000, -1000, 121178, 49706, -1000, -1000, 121178, 1684,
	-1000, 47999, 47430, -1000, -1000, 1585, 88899, 2605, -1000, 2605,
	-149, -1000, 119730, 2535, 88899, -1000, -1000, -1000, -1000, -1000,
	893, 635, 635, 1229, 1229, 1229, 1229, 3327, 1051, 3792,
	5013, 389, 389, 7128, 7128, 7128, 7128, 7128, 389, 1933,
	1334, 1334, 1933, 1933, 1933, 1933, 1933, 1334, 1334, 1334,
	389, 389, 389, 121564, 121438, 9338, 45154, 45154, 1193, 1832,
	525, 9271, 45154, 10222, 10222, 10222, 10222, -1000, 2085, -1000,
	-1000, -1000, -1000, 2839, 626, 49137, 49137, -1000, -1000, -1000,
	-1000, 24951, 45154, -1000, -1000, -1000, -1000, 34720, -1000, -1000,
	118907, -316, 442, -139, -35, -1000, 45154, 45154, 45154, 419,
	-1000, 217, 45154, 110487, -1000, 14494, 773, -144, -1000, -85,
	1406, -1000, 45154, -1000, -1000, 1191, -1000, 1188, 1183, 1182,
	-1000, 621, 418, -1000, 211, -1000, 2067, 617, 616, 45154,
	-1000, -1000, -1000, -1000, -1000, 118645, -1000, -1000, 118465, -1000,
	-1000, 118285, -1000, -1000, 118023, -1000, -1000, -1000, 120988, 14298,
	13837, 13215, 5741, 12586, 11486, -86, 416, -87, 411, 892,
	887, 408, 406, 403, -92, -1000, 3635, 3634, 3633, -1000,
	3632, 3631, 3630, -1000, 3628, 3625, 3624, -1000, 3622, 3621,
	3620, -1000, 3619, 3618, 3613, -1000, 3612, 3608, 3606, -1000,
	3603, 3602, 3601, -1000, 3596, 3593, 3592, -95, 402, -1000,
	2832, -139, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	391, -1000, 390, -1000, 120809, -139, 371, 405, -1000, 49137,
	49137, 49137, -1000, 368, -1000, 119647, -1000, 120726, 34151, 34151,
	34151, 362, 120546, 45154, -139, -101, -1000, -104, -1000, -1000,
	499, -112, 986, 33570, 51925, 23247, -1000, 986, 986, 45154,
	-1000, 45154, 2551, -1000, -1000, -1000, -1000, 2545, 1966, 2647,
	53011, -1000, -1000, -1000, -1000, 99657, -1000, 3497, 2775, -1000,
	99657, -1000, -1000, 110487, 492, -1000, 99657, 99657, 23247, 864,
	-1000, 864, 99657, 730, -1000, -1000, -1000, -1000, -1000, 361,
	58523, -35, 202, 23247, 974, -1000, 2601, 2601, 2601, 2601,
	-1000, -1000, 110487, 1181, -46, -180, -1000, 3448, -1000, 1944,
	-1000, 64464, -1000, 789, 1222, 23247, -1000, -1000, -1000, 615,
	-1000, 3504, 3504, -1000, 3504, 110487, 2820, 124, -1000, 122,
	68250, 68250, 3586, -1000, -1000, 216, -1000, 88899, 216, 216,
	-1000, 88899, 88899, 2114, -1000, 220, -1000, 218, -1000, -1000,
	-83, -1000, 983, 31282, -1000, 1877, -1000, -1000, 1510, -1000,
	1857, -1000, 1232, -1000, -1000, -1000, -1000, 31282, -1000, 2313,
	110487, 110487, 88899, -1000, 110487, -1000, 1948, 3444, 1779, 2438,
	2437, 68250, -1000, 2317, 113167, 2309, 64464, 110487, -1000, -1000,
	614, 903, 2534, 2513, 1042, 110487, 110487, 2500, 112631, 112095,
	-1000, 3584, 110487, 1930, 45154, 3296, 2265, 2198, 166, 166,
	-1000, -1000, 166, 609, 1291, 88899, 88899, 110487, 68250, 88899,
	1875, -1000, -1000, -1000, -1000, -1000, 80232, -1000, -1000, 3513,
	3511, -1000, 1398, -1000, -1000, -1000, 1398, 2107, 1849, 110487,
	68250, 88899, 68250, 110487, 110487, -1000, 1597, 110487, 1410, -1000,
	820, 1958, 166, 166, -1000, -1000, 166, 608, 23247, 1769,
	-1000, 2911, 110487, 3541, 111559, 3540, 110487, 110487, 110487, 68250,
	3206, 110487, 110487, 68250, 5067, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 69354, 1057, 974, 1583,
	1180, 1177, 79696, 55742, 971, 55742, 2658, -1000, -1000, 20481,
	-1000, 121178, 121178, -1000, 121178, -1000, 65004, 110487, -1000, 1003,
	110487, 75366, 922, 2988, 60684, -158, 938, 73212, 88899, -44,
	2589, 110487, -1000, -1000, 2107, 2987, 492, 2314, -1000, 73212,
	3409, 2982, 592, 3583, 3582, -1000, 88899, 2212, 2312, -1000,
	-1000, 111023, 3084, 820, 110487, 986, 53011, 1781, -1000, 59066,
	1022, 110487, 1691, 91, -1000, -1000, -1000, -14, 110487, -1000,
	800, -1000, -1000, 670, 670, 938, -173, 591, -1000, 856,
	854, 56302, 73212, -117, -1000, -1000, -1000, -1000, 2309, 88899,
	110487, 1255, 2644, 110487, -118, -1000, 201, 580, -1000, 2436,
	-1000, -162, -1000, 972, 55742, 2812, 2810, -1000, -1000, 982,
	-1000, 1321, 938, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -32, 110487, -158, -158, -45, -46, -1000,
	973, -1000, 973, -1000, 973, -1000, 121178, -1000, -1000, 1537,
	1516, 110487, -1000, 23247, 110487, 88899, 23247, 88899, 2890, 2889,
	-1000, -1000, -1000, 110487, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1065, -1000, 1684, 2178, -1000, 579, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2412, -1000, -47, 30713,
	869, -1000, -1000, 88899, -33, 45154, 45154, 8034, 6436, 45154,
	49137, 49137, -1000, 45154, 6005, -1000, -1000, -1000, -1000, -1000,
	2804, 576, 45154, 64464, 7904, 7049, -1000, 360, 10269, 1933,
	-1000, 45154, -1000, 355, 33001, -1000, 120099, -70, -138, -1000,
	17147, -139, -143, -1000, -1000, 788, -1000, 3080, -1000, 45154,
	120359, 2375, 2159, 1735, 1486, 3504, 3538, 19928, -1000, 62304,
	987, 2128, 117843, -1000, -1000, -1000, -1000, 64464, 64464, 45154,
	45154, -1000, 45154, 45154, 45154, -1000, -1000, -1000, 3504, 870,
	-1000, -1000, -1000, 870, -1000, -1000, 1398, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1398, -1000, 45154, -1000, -1000, 2801, 45154, -1000,
	64464, 64464, 49137, 49137, 49137, 49137, 49137, 49137, 49137, 49137,
	49137, 49137, 49137, 49137, 49137, 49137, 49137, 49137, 49137, 49137,
	49137, 2480, 49137, 3469, 3469, 3469, -1000, 2886, 2801, 45154,
	45154, 64464, 347, 346, 344, -1000, 45154, -139, -1000, -1000,
	670, 572, -1000, 2396, -1000, 2723, -1000, 45154, -1000, -155,
	-1000, 2780, -1000, -1000, 2723, 2723, -148, 121178, 53011, 53011,
	-1000, 571, 45154, 2530, -1000, -1000, 772, -312, -1000, 853,
	-1000, -1000, -1000, -1000, -1000, 492, -1000, -1000, -1000, 198,
	99657, 99657, 771, -1000, -153, -1000, -1000, -159, -1000, 3406,
	340, 23247, -1000, 986, 2677, -1000, -1000, -1000, -1000, -1000,
	-1000, -158, 110487, 110487, 2151, 3536, -1000, 3510, 783, 768,
	196, 3504, 339, 338, 337, -158, 110487, 110487, 110487, -1000,
	-1000, -1000, -1000, 216, -1000, -1000, -1000, 213, -1000, -1000,
	-1000, -1000, 2580, -1000, -48, -1000, -1000, -1000, 45154, -1000,
	-1000, 3224, 1176, 1175, -1000, -1000, -1000, -1000, 3295, 89435,
	3442, 1764, 1761, -1000, 2978, -1000, 2308, -1000, 1027, -1000,
	1771, -1000, 45154, 570, 2643, 561, 560, 3581, 1806, 3579,
	1044, 2975, 2114, 2974, 2114, -1000, -1000, -1000, 890, -1000,
	121178, 2265, -1000, 559, 558, -1000, -50, 1596, 2209, 1170,
	981, -1000, -1000, 45154, 45154, 99121, -1000, 443, 3209, -36,
	-1000, -1000, -1000, 1576, 1169, 1168, -1000, -1000, -1000, -1000,
	2107, 1568, 1164, 1162, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 980, -1000, 2943, 2942, 872, 110487, -1000, 978, -1000,
	-1000, 45154, -1000, -52, 1158, 3340, 2307, 88899, -1000, 2114,
	2968, 1157, -1000, 1156, -1000, -1000, -1000, 3347, 3341, 1155,
	-1000, -1000, -1000, -1000, -1000, 68802, -1000, 110487, 68250, 88899,
	1658, 861, -1000, 2403, 861, 971, 2799, -1000, 2582, 977,
	88899, 3578, 335, -167, -53, 64464, 3405, -1000, 2239, 577,
	88899, 885, -1000, 3497, -1000, -1000, -1000, 976, -1000, 3330,
	88899, 3398, 2967, 974, 166, 88899, 3521, -1000, -1000, 3397,
	88899, 2966, 2211, 2305, 2463, 820, 74294, 974, 2125, -74,
	-1000, 1691, 32420, 3212, -170, -1000, -1000, -1000, 986, 61768,
	53011, 45154, 3577, -182, -1000, -1000, -1000, -1000, -1000, 96972,
	96972, 73212, 73212, 73212, 938, 110487, 110487, 75366, -1000, -1000,
	557, 110487, 110487, 555, -1000, 110487, 110487, 3575, 73212, -54,
	553, -1000, 847, 845, 842, -1000, -1000, -1000, -1000, -1000,
	972, -1000, -162, 55742, 166, -1000, 2145, 88899, -1000, 19375,
	-1000, -1000, -1000, -1000, -1000, -1000, 973, -1000, -1000, 1974,
	2253, 1974, 1677, 1671, -1000, -1000, 2155, -1000, -1000, -1000,
	-1000, 2540, 3195, 23247, 3339, 10222, 45154, 45154, 4848, 5482,
	1083, 10222, 45154, 45154, 64464, 11811, -183, 45154, 45154, -1000,
	45154, 765, 121178, 3530, 45154, 333, 332, -1000, -1000, -1000,
	3503, -1000, -1000, -1000, 121178, 45154, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 330, -1000, 184, -1000, -1000, -1000, 116383,
	-1000, 45154, 328, 3293, -1000, 323, 322, 8409, 440, 117656,
	117568, 117381, 321, -1000, -1000, 320, 317, 121178, 2886, 121178,
	-1000, -1000, 935, 935, 1352, 1352, 1352, 1352, 3469, 494,
	928, 920, 607, 607, 607, 593, 573, 573, 607, 607,
	607, 2798, 2458, 552, 5070, -1000, -1000, 121178, 121178, 316,
	-1000, -1000, -1000, -139, 315, 670, -1000, 2719, 3292, 121178,
	-1000, 53011, 2719, 2719, -1000, -1000, 1966, 110487, 121178, 53011,
	-1000, 2775, -1000, 17711, -1000, 23247, -1000, -1000, -1000, -1000,
	3497, -1000, 58523, -1000, 551, -1000, -13, -1000, 2677, -1000,
	841, -1000, -1000, 73212, 73212, -158, -158, -1000, -1000, 758,
	3573, 781, 23247, 312, -1000, -1000, -1000, -158, -158, -158,
	-1000, -1000, -1000, 3151, 121178, 110487, 110487, 1403, 94802, 1669,
	-1000, -1000, 1807, 2434, -1000, 3441, 3440, 110487, 2963, -1000,
	3320, -1000, 1042, 116995, 53553, -1000, 53553, 110487, -1000, -1000,
	1813, 2511, 1080, -1000, 3256, 110487, -1000, 110487, -1000, -1000,
	-1000, 110487, 110487, 88899, 110487, -1000, 68250, 2951, -189, 121178,
	-55, -1000, 839, -1000, 1373, -1000, 18822, 110487, 68250, 88899,
	110487, 68250, 88899, 2037, -1000, -1000, 2941, -1000, 2950, -190,
	23247, -1000, 3529, 3528, 2962, 3260, -1000, 110487, 3527, 110487,
	88899, 3148, -1000, -1000, -1000, -1000, -1000, 1564, 1146, 1144,
	971, -56, 550, -1000, 837, -1000, -1000, 835, 971, -1000,
	73212, 55742, 3572, 492, -1000, 2629, -1000, 94266, 2118, 166,
	-1000, 3571, 97513, 549, -1000, 2139, -1000, 704, -1000, 2358,
	68250, 2107, 166, 88899, -1000, -1000, 492, 310, -57, -1000,
	2996, 1036, 23247, 88899, 2960, 2443, 820, 74294, -1000, 1320,
	2525, -1000, -59, -1000, 449, 166, 2125, -1000, -74, 121178,
	-1000, 832, -1000, -192, -1000, -1000, 307, -1000, 3131, 3128,
	-1000, 2739, 53553, 547, 546, 110487, 3123, -1000, -1000, -195,
	2542, 2542, 73212, 55742, 73212, -1000, 972, -1000, -1000, 2399,
	-1000, -1000, -1000, -1000, -1000, 23247, 1655, -1000, 545, 543,
	-1000, -1000, -1000, -1000, 3195, 10222, 10222, 45154, 45154, 45154,
	10222, 11811, -201, -1000, 10222, 10222, -139, -1000, -1000, 120099,
	-1000, -1000, -1000, 121178, -1000, 18269, 1975, -1000, 116957, -1000,
	30713, -1000, -1000, 45154, 45154, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 49137, 2789, 542, 64464, -1000, -1000, 301,
	936, 45154, 46861, 2780, 936, 936, -1000, -203, -1000, -1000,
	-1000, 3497, -13, -1000, -1000, 3570, 23247, -1000, 73212, -1000,
	-1000, 780, -1000, 3568, -1000, -1000, -1000, -1000, -1000, 2681,
	3396, -1000, -1000, 1803, 2429, -1000, 3395, 1137, 3393, -1000,
	110487, -1000, 110487, -1000, 23247, 110487, 2773, 1253, -1000, 903,
	2498, 541, 49137, 88899, 888, -1000, 3429, 2720, -206, -1000,
	110487, 45154, 110487, -208, -209, 2288, -1000, -1000, 2231, 45154,
	-1000, 64464, 540, 2114, 2114, -211, -214, -1000, -1000, -1000,
	45154, 1127, 110487, 31851, -1000, 3567, 3209, -1000, -1000, -1000,
	-1000, -1000, -1000, 110487, -1000, 45154, 1109, -1000, -1000, -1000,
	3526, 2114, 23247, 2114, -1000, 2114, 3260, 1076, 110487, 68250,
	88899, -1000, 2320, 2320, 73212, 55742, -1000, -83, 971, -1000,
	3388, 2626, 3566, -1000, -1000, -1000, -1000, 2496, -1000, -1000,
	110487, 2467, 958, -1000, -216, -1000, 831, 830, 75366, 922,
	913, -1000, -88, 538, -1000, 823, -1000, -1000, -1000, -1000,
	492, 3385, -1000, 3524, 535, 534, 110487, 2210, 530, 23247,
	3189, 820, 74294, -1000, 3084, 1691, -1000, 2295, 110487, 3190,
	-1000, 2525, 525, -1000, 938, 524, 522, 3188, 3188, -217,
	53553, 53553, -219, 520, 938, -1000, -222, -1000, -1000, -1000,
	-1000, -98, -1000, 857, 855, -1000, -1000, 88899, 88899, 45154,
	45154, -1000, 10222, 10222, 10222, -1000, 294, -1000, -1000, 2125,
	3291, -1000, -106, 116928, 15899, 5105, 49137, 64464, -224, -1000,
	-1000, 110487, 121178, -107, -1000, 121178, 516, 510, 299, -1000,
	-1000, -1000, 594, -1000, -1000, 3564, -1000, 98585, 110487, -1000,
	3383, 110487, 98049, 110487, -1000, 2100, -1000, -1000, -1000, 110487,
	2300, -1000, -1000, -1000, 1040, 45154, 5070, 509, 45154, -1000,
	3374, -1000, 2620, 2786, 1788, 53553, -1000, 3195, -1000, 15475,
	-1000, 1035, 1844, -1000, -1000, 121178, 3260, 53553, -1000, -1000,
	508, 503, 121178, 502, 822, 2788, -1000, -1000, -1000, -1000,
	121178, 498, 3340, -1000, -1000, -1000, -1000, 2114, 88899, -1000,
	-1000, -1000, -1000, -225, -1000, -1000, 1848, 166, 1969, 2665,
	-1000, 2118, 497, -1000, -1000, 2183, 2560, -1000, 97513, 31282,
	31282, 293, 3369, 913, -1000, 3468, -1000, 3127, 3127, 45154,
	3368, 166, -1000, 3521, 53553, -1000, 88899, 53553, 2199, 1904,
	2423, 74294, -1000, 2463, -1000, -1000, -227, 110487, 1691, -1000,
	-1000, 73212, 73212, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1035, -230, -232, -1000, 73212, -1000,
	-1000, 2399, -1000, 110487, -1000, 110487, -1000, -1000, -233, -238,
	-1000, 1860, 45154, 30713, -1000, -1000, 5105, -239, -1000, -114,
	-1000, 3362, 46861, 3562, 3561, 3558, -1000, -1000, -1000, 1790,
	-1000, 110487, -1000, -1000, 1783, -1000, -1000, -1000, 2959, 2716,
	15106, 2405, 110487, 10854, -1000, 2771, -1000, -1000, 2626, 495,
	-1000, -1000, -1000, -1000, 869, 110487, 2626, 2711, 88899, 1038,
	-241, 1974, 1974, 45154, 30144, 2009, 45154, -1000, -1000, 3260,
	-1000, 2752, 3481, -1000, 922, -1000, 1983, 110487, -1000, 3249,
	-1000, 3121, -1000, -1000, -1000, 2629, 166, -1000, -1000, -1000,
	-246, 121178, 166, -1000, 291, -247, 1036, -248, 88899, 1793,
	-1000, 820, -1000, 2443, 986, -1000, -1000, -249, -254, 1788,
	1035, 1958, -255, -1000, -260, -262, -1000, -1000, 289, 46292,
	46292, 46292, -139, -149, -1000, 110487, 493, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2938, 970, -1000, 2187, 1833, 283,
	1059, -1000, -1000, 1958, 110487, -1000, -1000, -1000, 967, 492,
	-1000, 45154, 1035, -263, -1000, 1020, -265, -1000, 1019, -268,
	-1000, 2779, -1000, -276, 2114, 964, 3324, -1000, -1000, -1000,
	2183, 88899, -278, -1000, -1000, 2339, -1000, 2626, 958, -1000,
	-1000, -1000, 1035, 491, 1788, 480, 1397, 820, -1000, -1000,
	1398, 3189, 3092, 938, 938, 2626, 1788, 937, -1000, 938,
	-1000, -1000, -1000, 3027, -1000, 50275, 2109, 1651, 119276, 3027,
	3027, -1000, -1000, 110487, 3309, -1000, 2192, 2191, 1460, -1000,
	-1000, -1000, -1000, -1000, -1000, 2720, -279, 3308, 2405, 121178,
	2626, -1000, 1974, 2655, -1000, 1974, 2757, -1000, 1982, -1000,
	-1000, -1000, 1621, 3454, 1837, 479, -1000, 110487, 1642, 1635,
	3555, 1969, 2183, 1788, 53553, 2626, 53553, -1000, -1000, 110487,
	-1000, 1904, 1262, -1000, -1000, 1958, 2626, 986, 477, -1000,
	-1000, 1689, 3424, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 819, -1000, 3104, -1000, 1060, 1931, 1931, 986, -1000,
	818, 2187, -1000, -1000, 475, -1000, 474, -1000, 2133, -1000,
	-1000, -1000, -1000, 110487, -1000, -1000, 3554, -1000, 922, -1000,
	2626, -281, 1958, -284, -1000, -158, 1793, -1000, 1464, 937,
	1958, -1000, 1641, -1000, -1000, 2102, 45723, 45154, -1000, 3455,
	-1000, -1000, 2487, -1000, -1000, 45154, 2720, 45154, 45154, 60148,
	-287, -1000, 2183, 1958, 1035, 937, 1788, 1397, 61768, 986,
	937, -1000, -1000, -1000, 121178, -1000, -1000, -1000, 121178, -1000,
	-289, -290, -173, 96972, 2048, 1837, 937, 1788, 986, 2626,
	-1000, -257, -1000, 986, 1958, 1107, -292, -1000, -1000, -1000,
	-1000, 986, 2626, -1000, 1958, -1000, -1000, -1000, -1000, 461,
	-1000, -1000, 1958, 937, 45154, 937, 986, -299, 986, -1000,
	1958, -1000, -1000,
}

var sqlPgo = [...]int{
	0, 4400, 4399, 4393, 4392, 4390, 4389, 4388, 4387, 4386,
	4385, 4384, 4379, 4376, 4372, 4371, 4369, 4360, 4359, 4358,
	4357, 4356, 4351, 4350, 4349, 4348, 4347, 4337, 4336, 4334,
	4326, 4321, 4319, 4318, 4317, 4316, 4314, 4313, 4310, 4305,
	4303, 4302, 4301, 4300, 4296, 4295, 4294, 4291, 4290, 4289,
	4288, 4287, 4286, 4285, 4284, 4281, 4280, 4274, 4272, 4269,
	4267, 4266, 4264, 49, 4262, 4254, 4253, 4252, 4250, 4249,
	4247, 4246, 4245, 4244, 4243, 4242, 4241, 4240, 4237, 4236,
	4235, 4232, 4231, 4229, 63, 4228, 262, 4227, 4225, 4224,
	4223, 4220, 4219, 4217, 4216, 4215, 4214, 4213, 4212, 261,
	4211, 131, 4210, 4207, 4205, 4203, 4201, 260, 4200, 4198,
	4195, 4194, 270, 4193, 4189, 4188, 4184, 4182, 4181, 4179,
	4178, 4176, 4174, 4172, 82, 192, 4171, 4170, 1324, 4165,
	4164, 4163, 4162, 4153, 4150, 4149, 4148, 4146, 4137, 241,
	4136, 258, 4135, 4133, 4132, 4129, 4125, 4123, 4120, 4118,
	4117, 4115, 4114, 4112, 4111, 4110, 4109, 4108, 4105, 4104,
	4102, 4101, 4099, 4098, 4097, 4095, 4094, 4089, 4088, 4086,
	4085, 4082, 4081, 4078, 4076, 4075, 4074, 4073, 238, 267,
	189, 4069, 4067, 256, 255, 4066, 4065, 4063, 4061, 4059,
	121, 6, 52, 4058, 4057, 88, 86, 91, 98, 103,
	100, 4053, 107, 4052, 120, 61, 4048, 12, 2, 223,
	235, 9708, 219, 4045, 4044, 4038, 229, 183, 4034, 216,
	4032, 4031, 4030, 4029, 69, 44, 171, 167, 161, 159,
	429, 4028, 147, 106, 78, 59, 42, 15, 85, 194,
	20, 4027, 242, 3, 136, 1, 35, 4026, 4025, 4023,
	4022, 3206, 124, 4016, 253, 230, 157, 4015, 4014, 4011,
	881, 4008, 4007, 66, 4006, 90, 97, 119, 27, 122,
	4001, 138, 36, 4000, 163, 54, 3998, 144, 105, 87,
	10084, 5578, 3996, 108, 67, 179, 65, 165, 153, 191,
	94, 146, 149, 190, 203, 202, 170, 233, 3995, 231,
	3994, 3386, 83, 168, 3992, 3990, 3989, 81, 184, 104,
	3988, 3987, 73, 11, 14, 4, 8, 129, 24, 22,
	29, 3982, 23, 116, 51, 21, 3978, 26, 3976, 3971,
	3969, 3968, 3967, 84, 151, 3966, 268, 3965, 123, 46,
	47, 3963, 25, 204, 3962, 211, 128, 3961, 3955, 246,
	197, 177, 3954, 68, 214, 3949, 3948, 3945, 3941, 3940,
	130, 9, 132, 3938, 3927, 141, 3923, 45, 226, 185,
	3922, 55, 3920, 3919, 166, 114, 137, 264, 154, 212,
	112, 209, 172, 222, 3913, 3912, 3909, 181, 3908, 3905,
	206, 140, 3904, 3903, 193, 271, 89, 43, 74, 227,
	79, 182, 160, 3902, 196, 3901, 3897, 269, 175, 201,
	7, 17, 99, 125, 3895, 5, 224, 145, 218, 113,
	3892, 4987, 2163, 2533, 3883, 3882, 150, 117, 77, 111,
	142, 250, 76, 3878, 3876, 2391, 3872, 3870, 3867, 3866,
	174, 3862, 3861, 3860, 139, 143, 195, 3859, 96, 70,
	48, 19, 118, 239, 257, 110, 207, 164, 247, 3858,
	3857, 3856, 180, 3853, 71, 115, 152, 186, 245, 57,
	3851, 221, 3850, 148, 853, 64, 162, 3849, 210, 3847,
	3845, 3844, 3843, 3841, 3840, 3837, 243, 234, 3836, 3832,
	3831, 58, 178, 3830, 249, 158, 173, 102, 38, 3829,
	93, 3288, 3826, 236, 747, 56, 251, 188, 252, 3825,
	4872, 53, 3824, 0, 12307, 6060, 8454, 11487, 3823, 5598,
	3822, 3820, 3818, 200, 135, 3816, 3815, 3814, 109, 3813,
	80, 3812, 3811, 72, 3810, 32, 16, 18, 34, 30,
	680, 655, 3809, 3808, 33, 133, 126, 3806, 263, 215,
	3800, 3799, 3797, 3796, 95, 3795, 41, 3793, 39, 3790,
	3789, 50, 13, 31, 3787, 3785, 198, 3784, 205, 244,
	3782, 156, 3781, 3366, 134, 3780, 3779, 3776, 62, 60,
	248, 92, 3766, 274, 3756, 3331, 3755, 3751, 28, 3750,
	3749, 237, 169, 208, 3748, 3746, 155, 3745, 3744, 3743,
	265, 3742, 3741, 3740, 37, 3739, 10, 3738, 3737, 199,
	3131, 3736, 3735, 40, 3732, 176,
}

var sqlR1 = [...]int{
	0, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 3, 3, 3, 3,
	3, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 5,
	5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 11, 11, 7, 7, 7, 7, 8, 8, 8,
	8, 8, 49, 49, 9, 9, 9, 9, 9, 9,
	9, 9, 9, 36, 31, 32, 33, 34, 34, 10,
	10, 6, 6, 6, 6, 6, 6, 6, 6, 6,
	17, 17, 37, 37, 18, 18, 39, 39, 19, 19,
	40, 40, 580, 580, 22, 42, 23, 43, 16, 581,
	581, 581, 581, 35, 24, 44, 28, 28, 28, 28,
	28, 193, 193, 193, 193, 21, 21, 38, 38, 227,
	227, 226, 226, 226, 226, 226, 226, 226, 226, 226,
	226, 226, 226, 226, 226, 226, 226, 226, 226, 226,
	226, 226, 226, 226, 226, 576, 576, 229, 229, 228,
	223, 223, 582, 582, 230, 230, 230, 232, 232, 13,
	13, 13, 13, 13, 13, 13, 13, 13, 13, 475,
	475, 475, 508, 508, 507, 507, 507, 506, 506, 595,
	595, 596, 596, 596, 596, 596, 127, 127, 373, 373,
	373, 52, 52, 52, 52, 52, 571, 571, 195, 195,
	195, 197, 197, 196, 196, 196, 196, 75, 75, 587,
	587, 588, 588, 586, 589, 589, 589, 194, 194, 194,
	123, 123, 123, 123, 123, 123, 124, 124, 125, 125,
	198, 198, 198, 200, 200, 199, 199, 199, 199, 199,
	199, 199, 199, 204, 15, 108, 108, 108, 108, 108,
	108, 108, 108, 108, 103, 103, 510, 510, 511, 511,
	189, 189, 190, 190, 190, 190, 191, 191, 192, 192,
	192, 66, 201, 201, 203, 203, 202, 202, 202, 202,
	202, 54, 54, 54, 54, 54, 54, 54, 55, 55,
	55, 55, 55, 56, 56, 56, 56, 56, 56, 57,
	57, 57, 57, 57, 57, 64, 64, 64, 64, 64,
	180, 180, 67, 67, 67, 67, 67, 67, 67, 67,
	67, 67, 67, 67, 67, 72, 72, 72, 72, 597,
	597, 597, 597, 597, 597, 597, 597, 597, 597, 597,
	597, 597, 597, 597, 597, 597, 597, 597, 598, 598,
	599, 599, 600, 600, 601, 601, 601, 601, 601, 601,
	601, 601, 601, 601, 601, 601, 601, 601, 601, 601,
	601, 601, 601, 70, 70, 70, 70, 70, 70, 70,
	70, 70, 70, 70, 70, 70, 70, 70, 70, 70,
	81, 81, 335, 335, 300, 300, 82, 82, 82, 83,
	83, 84, 84, 68, 68, 569, 569, 350, 350, 466,
	466, 69, 577, 577, 577, 579, 579, 578, 578, 86,
	86, 372, 372, 87, 87, 87, 87, 87, 87, 88,
	88, 88, 88, 88, 88, 88, 89, 89, 89, 89,
	89, 89, 89, 89, 89, 89, 89, 89, 89, 89,
	96, 96, 96, 96, 96, 97, 97, 97, 94, 94,
	94, 91, 91, 91, 90, 90, 90, 95, 95, 95,
	568, 289, 289, 93, 93, 93, 92, 92, 92, 351,
	351, 98, 98, 98, 98, 301, 99, 99, 99, 99,
	99, 99, 99, 99, 101, 101, 101, 101, 101, 101,
	101, 101, 101, 101, 101, 101, 101, 101, 101, 101,
	101, 101, 101, 101, 101, 101, 101, 101, 101, 101,
	101, 101, 101, 101, 101, 102, 102, 102, 102, 102,
	102, 102, 102, 102, 102, 102, 102, 468, 468, 100,
	100, 100, 433, 433, 104, 104, 104, 388, 388, 105,
	105, 105, 105, 105, 106, 106, 106, 106, 106, 106,
	106, 126, 126, 126, 126, 126, 126, 126, 573, 573,
	343, 343, 254, 254, 254, 254, 116, 116, 116, 116,
	117, 117, 117, 118, 118, 185, 185, 133, 133, 133,
	133, 133, 132, 132, 132, 132, 132, 132, 58, 58,
	58, 59, 59, 60, 60, 61, 61, 62, 62, 63,
	63, 63, 63, 63, 135, 135, 592, 592, 137, 134,
	134, 134, 136, 136, 136, 136, 138, 139, 139, 139,
	139, 139, 139, 139, 139, 140, 140, 500, 500, 359,
	359, 498, 498, 520, 520, 499, 499, 305, 305, 305,
	305, 305, 306, 306, 306, 509, 509, 509, 509, 509,
	509, 141, 141, 141, 141, 141, 141, 141, 141, 141,
	141, 141, 141, 141, 141, 141, 141, 141, 141, 141,
	141, 141, 141, 141, 141, 141, 141, 141, 141, 141,
	141, 141, 141, 141, 141, 141, 141, 141, 141, 141,
	141, 141, 141, 141, 141, 141, 141, 141, 141, 141,
	141, 141, 141, 141, 141, 141, 141, 141, 141, 141,
	141, 141, 141, 141, 141, 141, 141, 141, 186, 186,
	187, 188, 188, 188, 188, 188, 164, 164, 164, 179,
	179, 179, 179, 179, 179, 179, 167, 167, 167, 151,
	151, 142, 142, 142, 142, 142, 142, 142, 146, 146,
	146, 146, 146, 146, 146, 146, 143, 143, 153, 153,
	153, 153, 153, 147, 147, 148, 148, 148, 148, 174,
	174, 150, 150, 152, 152, 152, 152, 152, 152, 152,
	152, 152, 144, 144, 144, 144, 155, 155, 155, 155,
	395, 395, 395, 178, 178, 154, 154, 154, 154, 154,
	154, 154, 154, 154, 154, 154, 177, 177, 177, 177,
	177, 177, 590, 590, 591, 591, 171, 171, 171, 171,
	171, 171, 447, 447, 165, 165, 165, 165, 170, 170,
	170, 170, 173, 173, 173, 173, 378, 378, 162, 162,
	162, 163, 163, 163, 168, 168, 169, 166, 166, 172,
	172, 172, 172, 145, 145, 145, 145, 602, 602, 602,
	175, 175, 161, 161, 176, 176, 176, 176, 176, 176,
	176, 176, 603, 603, 157, 157, 157, 156, 156, 156,
	156, 159, 159, 160, 160, 160, 160, 160, 160, 158,
	149, 570, 570, 566, 566, 566, 566, 566, 566, 566,
	566, 567, 567, 567, 567, 572, 572, 109, 109, 109,
	109, 109, 119, 119, 119, 119, 119, 110, 110, 110,
	110, 110, 112, 112, 111, 111, 111, 111, 76, 76,
	76, 76, 76, 14, 14, 14, 77, 77, 245, 245,
	207, 207, 207, 324, 324, 208, 208, 313, 313, 313,
	313, 205, 205, 206, 206, 78, 78, 604, 604, 604,
	583, 583, 583, 584, 584, 584, 584, 584, 584, 307,
	307, 308, 308, 413, 413, 413, 413, 413, 311, 311,
	311, 312, 312, 312, 312, 312, 312, 312, 312, 312,
	314, 314, 231, 231, 231, 322, 323, 323, 315, 315,
	321, 320, 320, 319, 319, 318, 318, 316, 317, 317,
	317, 326, 326, 325, 328, 328, 327, 412, 529, 529,
	531, 531, 531, 531, 531, 531, 531, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 396,
	396, 605, 605, 527, 527, 527, 528, 523, 523, 524,
	524, 524, 524, 524, 309, 309, 310, 310, 310, 310,
	525, 526, 341, 341, 451, 530, 530, 532, 532, 534,
	606, 606, 606, 606, 606, 606, 607, 607, 607, 411,
	411, 410, 410, 333, 333, 535, 535, 535, 535, 536,
	536, 536, 536, 536, 539, 538, 537, 537, 537, 537,
	537, 80, 80, 80, 375, 375, 374, 374, 376, 376,
	376, 376, 376, 376, 376, 376, 376, 376, 376, 376,
	376, 376, 376, 182, 182, 257, 257, 74, 74, 74,
	12, 12, 12, 585, 585, 585, 79, 79, 79, 79,
	79, 79, 256, 256, 256, 256, 256, 256, 256, 256,
	256, 256, 256, 256, 256, 256, 256, 256, 256, 256,
	256, 256, 575, 575, 574, 574, 258, 258, 609, 609,
	85, 85, 85, 85, 85, 85, 85, 85, 469, 469,
	470, 470, 73, 73, 73, 73, 73, 397, 397, 394,
	394, 393, 393, 340, 340, 449, 449, 449, 450, 262,
	262, 263, 263, 224, 224, 224, 30, 29, 20, 20,
	25, 25, 26, 26, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 27, 27, 46, 46, 46,
	46, 47, 47, 47, 47, 50, 50, 51, 51, 45,
	45, 45, 45, 48, 48, 41, 41, 593, 593, 594,
	594, 115, 115, 120, 120, 120, 120, 120, 121, 121,
	121, 121, 122, 122, 122, 122, 131, 131, 181, 181,
	181, 181, 181, 181, 181, 53, 53, 53, 53, 65,
	65, 65, 65, 129, 611, 611, 611, 130, 130, 130,
	610, 610, 255, 255, 407, 407, 408, 408, 612, 612,
	409, 409, 409, 409, 409, 248, 247, 249, 249, 250,
	250, 71, 71, 71, 240, 240, 239, 237, 237, 512,
	512, 242, 242, 242, 243, 243, 233, 233, 234, 234,
	235, 235, 236, 236, 246, 246, 613, 613, 107, 107,
	107, 184, 184, 299, 299, 299, 404, 404, 404, 334,
	334, 269, 269, 406, 406, 406, 406, 371, 371, 371,
	183, 183, 348, 348, 361, 361, 362, 362, 463, 463,
	363, 113, 113, 114, 114, 128, 128, 211, 211, 209,
	209, 209, 209, 209, 209, 209, 209, 216, 216, 217,
	217, 218, 218, 219, 220, 220, 220, 220, 352, 352,
	221, 221, 221, 210, 210, 210, 212, 212, 212, 212,
	212, 212, 212, 215, 215, 215, 215, 222, 222, 222,
	214, 214, 546, 546, 546, 548, 548, 550, 550, 549,
	549, 545, 545, 547, 547, 608, 608, 377, 377, 377,
	331, 332, 329, 329, 330, 330, 338, 338, 336, 337,
	337, 339, 339, 448, 448, 448, 225, 225, 225, 368,
	368, 368, 368, 369, 369, 400, 400, 398, 398, 398,
	398, 399, 399, 401, 401, 401, 402, 402, 403, 403,
	365, 365, 366, 366, 367, 367, 367, 367, 429, 429,
	213, 213, 213, 345, 345, 345, 346, 346, 419, 419,
	419, 419, 419, 419, 420, 420, 418, 418, 418, 418,
	452, 452, 452, 452, 452, 452, 452, 452, 452, 453,
	454, 454, 347, 347, 455, 405, 405, 564, 564, 564,
	565, 565, 446, 446, 456, 456, 456, 456, 456, 456,
	444, 444, 445, 445, 464, 465, 465, 381, 381, 381,
	381, 379, 379, 382, 382, 382, 382, 382, 380, 380,
	457, 457, 457, 457, 370, 370, 458, 458, 458, 458,
	459, 460, 460, 461, 461, 414, 415, 415, 471, 471,
	471, 471, 473, 344, 344, 344, 344, 344, 522, 521,
	521, 472, 472, 472, 472, 472, 472, 472, 472, 472,
	487, 487, 487, 487, 487, 487, 487, 487, 487, 487,
	487, 487, 487, 487, 487, 487, 487, 487, 487, 487,
	487, 487, 487, 487, 487, 487, 487, 487, 487, 487,
	487, 487, 488, 488, 488, 488, 488, 488, 488, 474,
	474, 474, 474, 474, 478, 478, 478, 477, 477, 477,
	477, 477, 477, 477, 477, 477, 477, 477, 479, 479,
	484, 484, 485, 485, 485, 480, 481, 486, 486, 486,
	486, 614, 614, 490, 490, 482, 482, 482, 482, 482,
	482, 482, 482, 482, 476, 476, 476, 483, 483, 483,
	390, 390, 390, 390, 390, 390, 390, 390, 390, 390,
	390, 390, 390, 389, 389, 391, 391, 421, 421, 421,
	421, 421, 421, 421, 421, 421, 421, 421, 421, 421,
	421, 421, 421, 421, 421, 421, 421, 421, 421, 421,
	421, 421, 421, 421, 421, 421, 421, 421, 421, 421,
	421, 421, 421, 421, 421, 421, 421, 421, 421, 421,
	421, 421, 421, 421, 421, 421, 421, 421, 421, 421,
	421, 421, 421, 421, 421, 421, 421, 421, 421, 421,
	421, 421, 421, 421, 421, 421, 421, 421, 421, 421,
	421, 421, 421, 421, 421, 421, 421, 421, 421, 421,
	421, 421, 421, 421, 421, 422, 422, 422, 422, 422,
	422, 422, 422, 422, 422, 422, 422, 422, 422, 422,
	422, 422, 422, 422, 422, 422, 422, 422, 422, 422,
	422, 422, 422, 422, 423, 423, 423, 423, 424, 424,
	424, 424, 424, 424, 424, 424, 424, 424, 424, 424,
	424, 424, 424, 424, 424, 424, 424, 424, 424, 424,
	424, 424, 424, 540, 540, 540, 540, 540, 540, 540,
	540, 425, 425, 543, 543, 544, 544, 541, 541, 541,
	541, 541, 541, 541, 541, 541, 541, 541, 541, 541,
	541, 541, 541, 541, 541, 541, 541, 541, 541, 541,
	542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
	542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
	542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
	542, 542, 542, 542, 542, 542, 551, 551, 552, 552,
	554, 554, 555, 555, 556, 557, 557, 557, 558, 559,
	559, 553, 553, 560, 560, 560, 560, 561, 561, 562,
	562, 562, 562, 562, 563, 563, 563, 563, 563, 435,
	435, 436, 436, 442, 442, 442, 304, 304, 304, 304,
	304, 304, 304, 304, 304, 304, 304, 304, 304, 304,
	304, 304, 259, 259, 259, 259, 259, 357, 357, 355,
	355, 355, 358, 358, 356, 356, 354, 354, 353, 353,
	432, 432, 430, 430, 434, 434, 383, 383, 489, 489,
	489, 489, 489, 489, 489, 489, 384, 384, 384, 392,
	385, 385, 386, 386, 386, 386, 386, 426, 427, 387,
	387, 387, 428, 428, 437, 441, 441, 440, 439, 439,
	438, 438, 416, 416, 417, 417, 364, 364, 615, 615,
	360, 360, 462, 462, 462, 462, 303, 303, 349, 349,
	302, 302, 294, 294, 295, 295, 295, 295, 342, 342,
	443, 443, 491, 491, 492, 492, 493, 493, 494, 494,
	495, 496, 497, 431, 431, 279, 278, 266, 267, 277,
	276, 275, 265, 268, 272, 273, 274, 270, 271, 285,
	284, 283, 238, 241, 290, 291, 291, 293, 293, 292,
	292, 281, 282, 467, 264, 296, 296, 297, 297, 297,
	298, 298, 298, 298, 260, 260, 261, 261, 286, 286,
	287, 288, 288, 280, 280, 280, 251, 251, 251, 252,
	252, 253, 253, 505, 505, 502, 502, 502, 503, 503,
	503, 504, 504, 504, 504, 501, 501, 501, 501, 501,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 517, 517, 517, 517, 517, 517,
	517, 517, 517, 517, 517, 517, 517, 517, 517, 517,
	517, 517, 517, 517, 517, 517, 517, 517, 517, 517,
	517, 517, 517, 517, 517, 517, 517, 517, 517, 517,
	517, 517, 517, 517, 517, 517, 517, 517, 517, 517,
	517, 517, 517, 517, 517, 517, 514, 514, 515, 515,
	515, 515, 515, 515, 515, 515, 515, 515, 515, 515,
	515, 515, 515, 515, 515, 515, 516, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 519, 519,
}

var sqlR2 = [...]int{
	0, 1, 1, 1, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 1, 1, 0, 1, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 1, 3, 1, 1, 1, 3, 1, 1, 1,
	1, 3, 4, 6, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 6, 6, 6, 4, 4, 5, 1,
	3, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	4, 6, 4, 6, 6, 9, 6, 9, 6, 5,
	6, 5, 1, 1, 5, 5, 6, 6, 4, 4,
	4, 4, 3, 4, 4, 4, 7, 7, 9, 8,
	9, 5, 3, 5, 7, 4, 12, 4, 12, 1,
	3, 5, 5, 2, 5, 3, 6, 4, 6, 5,
	6, 6, 4, 8, 3, 4, 2, 3, 10, 3,
	6, 4, 3, 1, 3, 2, 1, 1, 3, 1,
	3, 2, 2, 0, 1, 1, 0, 2, 0, 7,
	10, 6, 8, 6, 6, 6, 9, 4, 3, 2,
	2, 0, 1, 3, 1, 1, 1, 1, 1, 1,
	3, 6, 4, 6, 7, 9, 6, 2, 2, 3,
	0, 8, 6, 8, 7, 2, 0, 1, 2, 5,
	0, 1, 3, 3, 1, 1, 3, 12, 3, 1,
	0, 1, 1, 2, 3, 3, 0, 4, 6, 0,
	5, 7, 6, 8, 7, 2, 1, 3, 1, 3,
	2, 5, 0, 1, 3, 3, 3, 3, 1, 1,
	1, 1, 1, 1, 3, 6, 4, 9, 7, 12,
	12, 12, 9, 2, 7, 2, 1, 1, 1, 3,
	3, 0, 3, 1, 3, 1, 1, 3, 2, 5,
	0, 7, 2, 0, 1, 2, 3, 1, 1, 2,
	2, 1, 2, 1, 2, 1, 2, 2, 3, 3,
	3, 3, 3, 3, 5, 3, 3, 5, 3, 3,
	5, 3, 3, 5, 3, 6, 6, 6, 6, 4,
	1, 1, 1, 2, 1, 1, 2, 1, 2, 1,
	1, 1, 2, 1, 2, 6, 3, 8, 3, 4,
	3, 3, 4, 3, 4, 4, 4, 3, 5, 7,
	3, 3, 4, 3, 3, 3, 3, 3, 2, 0,
	1, 0, 1, 0, 4, 3, 3, 3, 3, 3,
	6, 4, 4, 4, 3, 5, 3, 3, 3, 3,
	3, 3, 3, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 4, 1, 2, 1, 2, 1, 2,
	7, 3, 2, 0, 1, 3, 3, 1, 0, 1,
	2, 2, 1, 6, 5, 1, 2, 1, 3, 2,
	0, 7, 2, 5, 0, 1, 3, 3, 1, 9,
	3, 2, 0, 2, 2, 2, 2, 2, 2, 1,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	4, 6, 5, 7, 3, 4, 6, 3, 4, 6,
	3, 5, 7, 3, 4, 6, 3, 4, 6, 3,
	1, 1, 3, 4, 6, 3, 3, 5, 3, 1,
	3, 2, 2, 2, 2, 1, 2, 2, 5, 3,
	3, 6, 6, 3, 1, 1, 2, 1, 1, 1,
	2, 1, 1, 2, 1, 2, 1, 2, 1, 1,
	1, 2, 1, 1, 2, 1, 1, 1, 1, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 1, 1, 2, 1, 2, 1, 3, 5,
	7, 2, 3, 0, 3, 5, 2, 3, 0, 2,
	3, 2, 3, 2, 6, 4, 7, 7, 7, 5,
	2, 6, 4, 7, 7, 7, 5, 2, 2, 1,
	1, 3, 1, 1, 1, 1, 1, 2, 1, 2,
	2, 3, 2, 4, 3, 2, 2, 1, 2, 1,
	3, 3, 1, 2, 1, 2, 1, 2, 1, 1,
	3, 5, 4, 6, 4, 3, 0, 1, 3, 2,
	4, 2, 4, 1, 6, 3, 1, 1, 5, 3,
	2, 6, 3, 3, 4, 4, 3, 1, 3, 2,
	3, 3, 1, 3, 1, 2, 1, 1, 2, 2,
	3, 1, 1, 1, 1, 1, 3, 2, 2, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 1,
	2, 1, 2, 1, 2, 1, 1, 2, 1, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 2,
	1, 3, 3, 3, 3, 3, 2, 3, 3, 1,
	1, 1, 1, 1, 2, 2, 5, 7, 3, 3,
	3, 4, 4, 6, 5, 5, 5, 3, 4, 4,
	3, 4, 4, 3, 4, 4, 5, 3, 5, 5,
	5, 7, 3, 3, 3, 2, 6, 4, 3, 2,
	3, 4, 3, 5, 3, 6, 5, 6, 3, 5,
	6, 3, 4, 3, 4, 3, 3, 4, 4, 5,
	0, 1, 1, 1, 1, 3, 2, 4, 3, 3,
	5, 3, 4, 3, 5, 3, 3, 4, 4, 5,
	3, 3, 1, 1, 0, 2, 5, 4, 6, 4,
	6, 4, 1, 0, 3, 4, 4, 5, 7, 5,
	3, 3, 3, 4, 4, 5, 2, 0, 4, 2,
	3, 4, 2, 3, 3, 3, 4, 3, 3, 4,
	3, 3, 3, 3, 4, 4, 3, 1, 1, 1,
	2, 3, 2, 3, 6, 6, 7, 9, 7, 9,
	3, 4, 1, 1, 10, 10, 3, 5, 5, 5,
	3, 5, 6, 4, 4, 5, 5, 2, 3, 2,
	5, 2, 0, 1, 1, 1, 1, 3, 2, 2,
	2, 2, 2, 2, 1, 2, 0, 1, 2, 1,
	2, 2, 1, 2, 1, 2, 2, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 6,
	5, 8, 3, 6, 6, 3, 13, 16, 1, 0,
	1, 2, 3, 0, 2, 0, 4, 0, 4, 5,
	4, 3, 3, 1, 3, 10, 13, 0, 2, 3,
	1, 1, 0, 1, 2, 2, 2, 2, 1, 1,
	0, 1, 3, 1, 1, 1, 2, 3, 3, 3,
	0, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	8, 0, 1, 1, 0, 2, 1, 0, 1, 0,
	1, 1, 0, 1, 4, 1, 0, 3, 7, 7,
	1, 1, 3, 7, 1, 3, 11, 3, 2, 0,
	3, 1, 2, 2, 3, 2, 6, 2, 1, 2,
	2, 2, 8, 4, 2, 5, 5, 5, 2, 2,
	0, 1, 3, 11, 12, 9, 5, 3, 1, 5,
	10, 7, 11, 3, 3, 0, 2, 4, 3, 3,
	1, 5, 1, 3, 1, 2, 0, 1, 2, 2,
	0, 1, 3, 3, 2, 2, 1, 1, 1, 4,
	0, 6, 0, 3, 0, 2, 2, 2, 0, 1,
	1, 2, 2, 0, 3, 3, 2, 1, 1, 2,
	2, 5, 8, 4, 1, 0, 1, 2, 2, 1,
	2, 3, 3, 2, 2, 3, 2, 2, 2, 2,
	2, 3, 1, 4, 2, 2, 2, 4, 7, 3,
	4, 6, 3, 1, 1, 1, 8, 10, 11, 7,
	10, 5, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 2, 0, 3, 3, 0, 1,
	8, 11, 3, 6, 6, 5, 3, 4, 1, 0,
	1, 3, 17, 20, 16, 19, 4, 2, 0, 1,
	0, 1, 0, 1, 3, 2, 4, 2, 3, 1,
	0, 2, 0, 1, 1, 0, 9, 6, 6, 8,
	6, 8, 5, 7, 2, 6, 7, 4, 4, 6,
	4, 4, 5, 5, 7, 3, 3, 4, 4, 6,
	3, 6, 7, 4, 6, 6, 8, 6, 7, 8,
	9, 6, 7, 8, 9, 6, 8, 6, 8, 6,
	7, 8, 9, 6, 8, 6, 8, 1, 0, 2,
	0, 2, 2, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 2, 2, 1, 2,
	1, 2, 1, 2, 1, 3, 2, 3, 2, 2,
	2, 2, 2, 2, 1, 1, 0, 2, 4, 2,
	1, 0, 2, 1, 1, 0, 1, 3, 1, 0,
	1, 1, 1, 1, 1, 2, 3, 2, 2, 1,
	2, 12, 15, 3, 1, 0, 4, 3, 0, 1,
	1, 4, 4, 5, 1, 0, 3, 0, 3, 0,
	3, 0, 3, 0, 4, 0, 1, 0, 6, 7,
	3, 6, 3, 1, 3, 1, 1, 4, 2, 1,
	3, 1, 3, 4, 8, 11, 5, 2, 2, 0,
	10, 3, 2, 0, 1, 3, 1, 1, 3, 3,
	5, 6, 4, 5, 4, 1, 1, 3, 3, 1,
	2, 4, 4, 2, 3, 5, 5, 1, 3, 1,
	0, 1, 2, 3, 2, 4, 2, 3, 0, 2,
	0, 2, 1, 2, 1, 1, 1, 2, 1, 2,
	1, 2, 1, 8, 8, 8, 2, 4, 4, 4,
	2, 2, 2, 2, 3, 1, 3, 1, 2, 6,
	7, 1, 0, 1, 0, 1, 0, 1, 1, 0,
	1, 5, 1, 0, 1, 0, 1, 0, 3, 3,
	5, 1, 3, 3, 4, 5, 2, 2, 0, 2,
	2, 1, 1, 1, 0, 1, 0, 2, 2, 5,
	4, 2, 3, 1, 1, 1, 1, 1, 1, 1,
	3, 0, 1, 3, 1, 3, 3, 3, 2, 0,
	4, 2, 5, 3, 2, 0, 1, 3, 3, 5,
	1, 1, 1, 1, 1, 3, 2, 4, 4, 0,
	4, 4, 3, 4, 1, 5, 3, 4, 5, 5,
	1, 5, 1, 3, 2, 0, 3, 0, 2, 3,
	1, 3, 2, 0, 3, 5, 6, 4, 6, 4,
	3, 2, 1, 0, 5, 1, 0, 2, 2, 2,
	1, 1, 0, 1, 1, 1, 1, 0, 4, 2,
	1, 2, 2, 4, 1, 3, 1, 2, 3, 2,
	4, 1, 0, 1, 0, 2, 1, 0, 2, 5,
	7, 2, 1, 2, 4, 3, 5, 0, 1, 3,
	5, 1, 2, 1, 1, 1, 1, 1, 2, 2,
	1, 2, 2, 2, 1, 2, 2, 2, 1, 2,
	2, 2, 1, 2, 2, 2, 1, 2, 2, 2,
	1, 2, 2, 2, 1, 2, 2, 2, 1, 2,
	2, 2, 1, 1, 1, 4, 4, 6, 6, 1,
	1, 1, 1, 1, 3, 5, 0, 1, 1, 1,
	1, 1, 2, 2, 2, 2, 2, 1, 3, 0,
	5, 4, 1, 2, 1, 4, 1, 1, 2, 1,
	1, 1, 1, 1, 0, 1, 2, 5, 1, 4,
	2, 5, 1, 4, 3, 3, 0, 1, 2, 4,
	1, 1, 1, 1, 1, 1, 3, 3, 3, 3,
	3, 3, 3, 1, 0, 1, 4, 1, 3, 3,
	3, 5, 2, 2, 2, 2, 2, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 2, 2, 3, 5, 4, 6, 3, 5, 4,
	6, 4, 6, 5, 7, 3, 3, 3, 3, 3,
	4, 3, 2, 4, 2, 3, 3, 4, 3, 4,
	3, 4, 5, 6, 6, 7, 6, 7, 6, 7,
	3, 4, 4, 1, 3, 1, 3, 3, 2, 2,
	2, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	5, 6, 6, 7, 1, 2, 1, 2, 1, 1,
	1, 1, 1, 6, 1, 1, 1, 1, 1, 1,
	2, 1, 5, 5, 6, 3, 1, 1, 1, 2,
	2, 2, 4, 3, 5, 6, 8, 6, 5, 4,
	3, 2, 2, 4, 1, 1, 1, 5, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 6,
	6, 8, 8, 6, 4, 6, 6, 6, 4, 1,
	3, 3, 3, 3, 3, 4, 3, 3, 4, 3,
	3, 4, 3, 3, 4, 3, 3, 3, 4, 3,
	4, 3, 4, 3, 4, 4, 3, 6, 5, 5,
	5, 4, 4, 3, 4, 3, 5, 0, 5, 0,
	2, 0, 1, 3, 3, 2, 2, 0, 6, 1,
	0, 3, 0, 3, 3, 3, 0, 1, 4, 2,
	2, 2, 2, 2, 3, 2, 2, 3, 0, 4,
	1, 1, 5, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 1, 2, 2, 3, 1,
	2, 3, 2, 3, 2, 3, 1, 0, 1, 3,
	1, 3, 3, 3, 1, 3, 3, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 4, 3, 1, 2,
	3, 0, 3, 3, 2, 2, 1, 2, 2, 3,
	2, 1, 1, 1, 5, 1, 2, 4, 2, 0,
	1, 0, 3, 5, 1, 0, 1, 2, 1, 0,
	1, 3, 3, 2, 1, 1, 1, 3, 1, 3,
	3, 1, 1, 1, 1, 5, 3, 1, 1, 3,
	1, 1, 1, 1, 2, 2, 1, 1, 2, 2,
	1, 1, 1, 3, 5, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 1, 3, 1,
	0, 1, 1, 1, 1, 1, 1, 3, 5, 7,
	1, 7, 5, 3, 1, 1, 1, 1, 1, 1,
	1, 3, 5, 1, 1, 1, 1, 1, 1, 1,
	0, 3, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
}

var sqlChk = [...]int{
	-1000, -1, -2, 583, -101, -98, -66, -64, -104, -105,
	-87, -106, -100, -126, -131, -113, -114, -115, -127, -133,
	-181, -186, -187, -188, -3, -52, -54, -67, -86, -88,
	-99, -108, -107, -109, -116, -123, -119, -103, -58, -128,
	-132, -141, -182, -183, -184, 33, 32, 101, 81, 155,
	129, 138, 201, 379, 421, 432, 393, 143, 413, 398,
	-136, -137, 449, -53, -65, -130, -129, 74, 130, 407,
	-4, -12, -15, 30, 47, -55, -56, -57, 63, -74,
	-70, -81, -75, -68, -69, -72, -597, 103, -547, -89,
	-92, -122, -601, 162, 219, -110, -111, 362, -117, -118,
	415, -120, -121, 417, 163, -60, -59, 157, -209, -211,
	-134, -135, -185, -142, -143, -144, -145, -146, -147, -148,
	-174, -149, -150, -151, -152, -153, -154, -158, -177, -155,
	-156, -157, -160, -159, -161, -166, -162, -163, -164, -165,
	-167, -168, -170, -171, -172, -173, -175, -176, 454, -169,
	514, 50, 468, 83, 147, 425, 21, -5, -6, -7,
	-8, -9, -10, -11, -14, -13, -71, -73, -76, -77,
	-78, -85, -79, -80, -546, -90, -91, -94, -96, -97,
	-93, -95, 414, -212, -210, 580, 529, -17, -22, -23,
	-18, -19, -21, -24, -20, -25, -26, -27, -37, -42,
	-43, -39, -40, -38, -41, -44, -45, -46, -47, -48,
	-49, -50, -51, -29, -35, -36, -30, -31, -32, -33,
	-34, -16, -28, 549, 558, -215, -213, -214, -222, 441,
	537, 488, 583, 583, 583, 583, 583, 583, 583, 583,
	583, 583, 583, 583, 583, 583, 583, 583, 583, 583,
	583, 583, 583, 583, -301, 2, -281, -286, -287, -288,
	-280, -251, -516, -519, 4, -513, -517, 169, 228, 326,
	21, 23, 22, 24, 25, 26, 27, 28, 30, 31,
	42, 43, 45, 46, 47, 48, 49, 50, 54, 56,
	60, 61, 62, 63, 64, 65, 69, 74, 75, 80,
	81, 82, 83, 84, 85, 86, 92, 89, 90, 91,
	93, 95, 97, 98, 99, 100, 101, 102, 104, 105,
	106, 108, 109, 110, 118, 119, 120, 121, 122, 124,
	129, 130, 133, 128, 132, 134, 136, 137, 138, 141,
	142, 143, 145, 146, 148, 149, 150, 152, 153, 155,
	156, 157, 160, 158, 496, 159, 161, 162, 163, 164,
	167, 175, 176, 177, 182, 184, 188, 189, 192, 193,
	194, 195, 196, 197, 198, 199, 200, 202, 206, 208,
	209, 210, 211, 212, 218, 219, 221, 222, 223, 224,
	229, 230, 231, 235, 232, 241, 242, 246, 247, 248,
	250, 254, 255, 256, 257, 258, 259, 261, 263, 262,
	265, 268, 269, 272, 276, 277, 281, 282, 278, 283,
	284, 286, 287, 290, 288, 291, 292, 289, 293, 295,
	296, 297, 298, 299, 300, 301, 302, 303, 304, 305,
	306, 294, 309, 307, 311, 312, 313, 324, 322, 317,
	318, 314, 319, 315, 316, 320, 321, 328, 329, 332,
	216, 334, 335, 338, 356, 342, 343, 344, 347, 348,
	351, 354, 355, 357, 358, 359, 360, 361, 362, 363,
	364, 366, 367, 369, 370, 371, 373, 374, 375, 377,
	379, 380, 382, 383, 385, 386, 387, 388, 389, 390,
	391, 393, 395, 394, 396, 398, 400, 401, 402, 407,
	413, 409, 410, 411, 412, 414, 415, 416, 417, 419,
	420, 421, 423, 424, 425, 426, 428, 430, 431, 434,
	435, 451, 452, 470, 432, 433, 436, 437, 438, 439,
	440, 444, 442, 443, 445, 446, 447, 449, 450, 453,
	454, 456, 457, 458, 459, 460, 461, 464, 466, 467,
	468, 487, 469, 471, 475, 476, 477, 478, 472, 473,
	486, 480, 481, 483, 484, 489, 490, 491, 492, 493,
	494, 495, 497, 499, 507, 508, 509, 511, 514, 515,
	516, 517, 505, 519, 520, 523, 524, 525, 528, 526,
	527, 529, 531, 534, 535, 536, 542, 541, 543, 550,
	551, 553, 554, 555, 37, 51, 52, 55, 57, 59,
	70, 71, 72, 76, 125, 126, 154, 165, 166, 178,
	190, 191, 203, 205, 213, 214, 215, 236, 237, 239,
	244, 266, 331, 333, 349, 353, 368, 372, 376, 378,
	392, 427, 462, 474, 479, 500, 501, 502, 503, 510,
	512, 537, 538, 539, 544, 552, -301, 2, -281, 340,
	-274, 2, -251, -251, 379, 29, 2, 29, 367, 443,
	491, 493, 2, -573, -343, 2, 29, -254, -251, 103,
	201, 441, -274, 2, -573, -343, 25, 2, -251, 2,
	354, 22, 28, 67, 78, 99, 141, 164, 185, 188,
	-600, 356, 386, 430, 445, 486, 497, 511, 2, 541,
	287, 442, 488, 228, 121, 516, 436, -585, 434, 435,
	354, 384, 423, 204, 530, -255, 2, 432, -251, 287,
	2, 583, 95, 277, 75, 427, 446, -139, 508, -138,
	500, 436, -140, -500, 2, 309, -251, 583, 583, 583,
	29, -264, -251, 488, 228, 436, 121, 484, 583, 2,
	488, 359, 541, 442, 121, 389, 228, 516, 188, 436,
	-585, 287, -571, 2, -566, 4, -517, -513, -295, -294,
	488, 494, 121, -288, -280, 573, -287, 583, 583, 583,
	2, 247, 248, 388, 387, 446, 447, 583, 583, 583,
	583, 434, 2, 164, 22, 28, 67, 94, 99, 127,
	185, 188, 345, -598, 356, 386, 445, 486, 490, 497,
	511, -584, 469, 69, 412, 436, -583, -585, 287, 516,
	141, -393, 121, 277, 199, 524, 493, 491, 522, 133,
	235, 527, 526, 583, 583, -101, 2, 580, 33, 32,
	143, 449, -204, 488, 240, 2, -251, 583, 583, 2,
	247, 248, 434, 435, 583, 583, 186, -566, 2, 583,
	583, 2, 247, 248, 434, 435, 240, 2, 69, 438,
	583, 583, 583, 583, 583, 583, 583, 583, 583, 583,
	583, 583, 583, 583, 583, 583, 583, 583, 583, 583,
	583, 583, 583, 583, 583, 583, 583, 583, 583, 583,
	583, 583, 583, 2, -179, 446, 469, 210, 48, 47,
	75, 29, 385, 80, 360, 122, 149, 517, 202, 228,
	229, 255, 94, 95, -395, 45, 248, 247, 435, -590,
	434, -447, 489, 437, 443, 483, 259, 432, 508, 103,
	531, 424, 555, 389, 390, 481, 402, 278, 158, 4,
	121, 309, 448, 500, 277, 431, 363, 85, -608, 2,
	488, -610, 2, 508, 508, 2, -610, 2, -610, 2,
	-610, 2, -611, 508, 552, 583, 583, 583, 583, 583,
	583, 583, 583, 583, 583, 583, 583, 583, 583, 583,
	583, 583, -210, -212, -211, 583, 583, 583, 583, 583,
	583, 583, -179, 446, 2, 75, 29, -336, -338, 521,
	238, 151, 346, -209, -211, 2, -546, -498, 2, -421,
	-520, -423, 571, 572, 564, 485, 68, 325, 556, -435,
	127, 522, 340, -519, -424, -437, 154, 427, -358, 8,
	9, 5, 6, 7, -260, -425, -431, 513, 168, 330,
	-298, 584, 10, 580, -543, -211, -436, 38, 205, 66,
	-502, -297, -261, -474, 239, -296, -280, -540, -541, 4,
	-513, -514, -503, -477, -485, -481, -482, -488, -251, -516,
	78, 112, 113, 111, 116, 115, 280, 279, 117, 114,
	448, 530, 67, 37, 213, 214, 244, 331, 215, 76,
	-542, 142, -515, 236, 237, 462, 52, 392, 178, 126,
	125, 333, 57, 55, 538, -486, 123, 500, 501, 502,
	503, 190, 191, 59, 165, 166, 353, 376, 479, 510,
	512, 203, 266, 44, 107, 187, 234, 217, 243, 245,
	249, 267, 270, 310, 323, 327, 350, 352, 422, 455,
	-614, 539, 474, 70, 71, -548, 394, -549, -274, -548,
	583, 583, 585, 583, -329, -331, -332, 2, 29, 139,
	580, 2, -452, 2, -453, -457, -211, 260, -456, 580,
	-454, 578, -281, 341, -544, 428, -540, -541, -260, -280,
	-297, 4, -513, -515, 582, -333, 580, 121, 488, 79,
	228, 164, -388, 580, -251, 29, 340, 504, 585, -330,
	383, -433, 580, 340, 186, 343, 61, 291, 2, 2,
	2, 2, 2, 213, -251, 488, 120, 2, 258, 2,
	2, 2, 2, 2, 2, 2, -351, 213, 2, -281,
	541, -351, 213, 2, -351, 213, 2, -394, 2, 88,
	-265, 213, 2, -251, -289, 213, 2, -284, -286, -293,
	213, 2, -291, -251, -511, 213, 2, -510, -505, 10,
	-504, 5, 4, -513, -517, -514, -516, 78, -421, 2,
	-128, 2, 61, -251, 541, 2, 2, 451, 2, 580,
	-139, 72, 508, 44, 446, -408, 2, -409, -247, -248,
	-249, -464, -250, 246, 382, 391, 559, 131, 325, 555,
	-498, -592, 186, 563, 504, -498, -359, 582, 2, 2,
	2, 2, 2, 2, -457, 213, -281, 2, -278, -501,
	4, -513, -517, -514, -518, 29, 32, 33, 34, 36,
	38, 39, 40, 41, 58, 66, 67, 73, 77, 79,
	88, 94, 103, 111, 112, 114, 113, 115, 116, 117,
	127, 131, 135, 139, 140, 144, 147, 151, 168, 170,
	183, 185, 186, 201, 204, 207, 220, 233, 238, 240,
	260, 264, 271, 279, 280, 325, 330, 336, 340, 341,
	345, 346, 365, 381, 397, 418, 441, 448, 465, 482,
	488, 498, 504, 506, 513, 521, 522, 530, 532, 540,
	545, 546, 547, 548, 549, -519, 2, -457, 213, 2,
	-283, 213, -457, -286, 2, -265, 2, -277, -501, 2,
	-302, 213, -281, -282, -286, -284, 2, 2, -291, 2,
	-510, 213, 2, 541, 240, 504, 585, -349, -294, -295,
	-497, 8, -342, -251, 582, -421, 2, -128, -112, 2,
	183, -421, 213, 2, -128, 213, 2, -421, 213, 2,
	-128, 213, 2, -587, 2, -510, 213, -251, 2, 291,
	2, 2, 511, 2, 99, 488, 120, 2, 411, -599,
	430, 515, 2, 2, 2, 2, 2, 2, 2, 488,
	-270, 2, -251, 183, 472, -291, 213, -292, 2, 442,
	-609, 394, -510, 213, 2, 541, -284, 213, 2, -284,
	228, 242, -265, 213, 2, 493, 491, 493, 491, 186,
	2, 240, 2, 240, 2, -458, 2, -459, -453, -460,
	578, 341, -468, 2, -467, -504, 537, -101, 580, -101,
	580, 446, 580, -510, -281, -281, -421, 2, -128, -112,
	2, -421, 2, -128, 2, -125, -510, -124, 580, 186,
	-421, 2, -128, -112, 2, -421, 2, -128, 2, -204,
	183, 2, 121, 488, -179, 2, 183, 532, 2, 8,
	2, 220, -510, 437, 390, 175, 2, 451, 2, 452,
	75, -395, 555, 75, 186, 2, 186, 2, -378, 2,
	549, 186, 2, 2, -570, 2, 340, 186, 2, 186,
	2, 186, 2, 186, 2, 186, 2, -178, 447, 509,
	487, 387, 248, 2, -128, 546, -112, -421, 546, 2,
	-591, 183, 435, -421, 2, 507, 257, 159, 186, -378,
	2, 186, 2, 186, 2, 5, 2, 388, 470, 2,
	246, 382, 470, 2, -281, -602, 29, 2, 488, 541,
	442, 2, 2, 89, 90, 186, 2, 186, 2, 200,
	186, 2, 186, 555, 2, -370, -457, -407, -408, -407,
	504, -336, -338, -179, 451, 2, -216, -368, -218, 183,
	-398, -399, -219, 271, 170, 336, -220, -377, 29, 139,
	-377, -377, 61, 581, 581, 11, 12, 77, 42, 571,
	572, 573, 574, 181, 575, 576, 569, 570, 568, 561,
	562, 566, 252, 253, 96, 565, 563, 87, 285, 429,
	171, 172, 173, 174, 408, 226, 35, 227, 14, 15,
	16, 34, 345, 270, 556, 217, 455, 564, 17, 18,
	19, 243, 245, 327, 51, 220, -259, -304, -421, -421,
	-421, -421, -421, -421, -421, 352, 580, -364, -416, 578,
	-211, 580, 580, 580, -497, -211, -421, -435, 581, -356,
	580, -211, -435, -430, 580, 427, 578, 580, -438, -421,
	5, 5, 5, 580, 582, -551, 550, 183, 580, 580,
	580, 580, 580, 580, 580, 580, 580, 580, 580, 580,
	580, 580, 580, 378, -479, 580, -478, 580, -478, -478,
	542, -476, 580, 558, 551, 580, -476, 580, 580, 580,
	580, 580, 580, 580, 580, 580, 580, 580, 580, 580,
	542, 585, -548, -333, 580, -360, -462, -421, 573, -360,
	-360, 340, -353, -421, 107, -381, 249, 310, 187, 267,
	422, 234, -418, 584, -418, -446, 558, -211, -454, -280,
	-211, -456, 580, -452, -446, -102, -497, -86, -99, -107,
	-128, -141, -183, -184, 573, -281, 580, 186, 580, 582,
	-501, 186, -342, -265, -281, -296, -297, -302, 2, 138,
	-353, -566, 516, 436, 442, -342, -254, 39, -432, -471,
	-472, -522, 584, -521, -474, -484, -480, -483, 368, 372,
	-503, 55, 538, -486, 239, 4, -513, -515, 236, 237,
	462, 52, 392, 178, 126, 125, 333, 57, 500, 501,
	502, 503, 190, 191, 59, 539, 474, 70, 71, -566,
	516, 436, 442, -342, 183, -508, 2, -507, -506, 117,
	448, -504, 5, 2, 154, 2, 2, 2, -251, -230,
	585, 65, 416, 154, -351, 213, -230, 154, -230, 154,
	-303, 213, -302, -230, 154, -230, 585, 154, -230, 585,
	154, 582, 585, 154, -508, 2, -394, -500, -353, 39,
	-408, 2, 127, -506, -612, 585, 269, -306, 284, 324,
	209, 341, 553, 334, 131, -509, 5, 4, -431, -443,
	127, 277, 239, -491, -493, 8, -492, 9, -494, 571,
	572, -499, -498, 110, 582, -501, -227, 409, 449, 355,
	-226, 24, 30, 143, 230, 313, 535, 160, -319, 231,
	-316, 359, 154, 466, 525, -580, -581, 433, 495, 496,
	91, 334, 449, 355, 409, 154, -374, -376, 39, 119,
	313, 354, 62, 223, 289, 290, 468, 544, 154, 449,
	355, 409, 355, 24, 143, -242, -239, 449, -581, 100,
	409, 480, 381, -581, -229, 466, 525, -580, -581, 433,
	409, -228, -321, -316, 359, 154, 584, 24, 143, 409,
	449, 355, -595, -596, 30, 409, 355, -574, -545, 549,
	154, -457, 213, -588, -124, 261, 5, 10, -510, -124,
	-349, 585, 585, -501, 573, 435, 434, 154, 154, 154,
	154, 183, 325, 2, 2, 2, 2, 2, 188, -583,
	-600, 2, 2, -281, 213, -335, 340, -569, -350, 488,
	-281, 183, 325, 44, -283, 213, 2, -286, 541, -574,
	325, -285, 213, -281, 39, 580, 325, 2, -394, 2,
	228, -545, 325, -458, -299, -281, -453, -299, 449, -274,
	39, -418, -281, 581, 585, -468, -468, -510, -192, 549,
	186, 103, 580, 580, -204, -465, 585, -464, 220, -511,
	-125, -510, 412, -510, -569, -265, 2, -281, 2, 488,
	250, -510, -192, 220, -510, -510, -510, -500, 29, 452,
	2, -178, 447, 509, 90, 452, 2, -281, 488, 121,
	228, 81, -251, -572, 183, -567, 423, 436, 516, -566,
	-281, 121, -281, 121, -281, 121, -281, -281, 2, 2,
	2, 2, 2, 86, 86, 2, 47, -591, 183, 2,
	507, 2, 507, 2, -251, -251, -251, 469, 269, -281,
	489, -603, 186, 183, 488, 228, 488, 228, 121, 186,
	75, 121, 29, 488, -230, 585, -255, -216, -368, -500,
	-369, -368, -217, -216, -219, 183, 391, 526, 313, 453,
	254, -399, -398, 29, -421, -403, 177, 312, -421, -401,
	-423, 571, 572, -492, -494, -352, 334, -210, -210, -210,
	-339, -448, -421, 381, 228, -473, -471, -471, -279, -501,
	500, -421, -421, -421, -421, -421, -421, -421, -421, -421,
	-421, -421, -421, -421, -421, -421, -421, -421, -421, -421,
	-421, -421, -421, -421, -421, -421, -421, -421, -421, -421,
	-421, -421, -421, -421, -421, -421, 270, 217, 455, 51,
	220, -421, 504, -421, -421, -421, -421, 307, 325, 330,
	513, 168, 523, 139, 334, -615, 482, 41, -428, -211,
	-357, 580, -442, 36, 465, 29, -435, 580, 2, -416,
	-421, -417, -354, -353, -353, 581, 540, 29, 139, 573,
	2, 581, 585, 39, 581, -421, -354, -434, -430, -353,
	-441, -440, 546, -389, -390, 554, 294, 124, 211, 292,
	-391, 440, -495, 8, -501, 573, -552, 176, 204, 580,
	581, 2, 581, 2, 581, -421, 2, 581, -421, 2,
	581, -421, 2, 581, -421, 2, 581, 2, -421, -421,
	-421, -421, -421, -421, -421, -353, 8, -495, -495, 500,
	500, -495, -495, -495, -487, 368, 369, 370, 371, 272,
	273, 274, 275, 372, 373, 374, 375, 299, 300, 301,
	302, 295, 296, 297, 298, 303, 304, 305, 306, 195,
	196, 197, 198, 191, 192, 193, 194, -487, -383, 2,
	-489, -353, 4, 554, 294, 124, 211, 292, 440, 5,
	-383, 2, -384, 2, -421, -353, -385, -422, -423, 571,
	572, 564, -435, -386, 2, -421, -354, -421, 58, 264,
	506, -387, -421, 186, -353, -353, 2, -353, 2, -549,
	39, -353, -345, 585, 186, 39, 4, -345, -345, 580,
	581, 585, -382, 208, 288, 283, 242, -382, -452, -381,
	249, -379, 350, -379, -379, -446, -266, 578, 586, -501,
	-446, -445, -444, 39, -274, 347, -446, -446, 582, 581,
	-445, 579, -564, 580, 583, 583, 583, 583, 583, -281,
	580, -353, -501, 582, 471, 581, 243, 243, 243, 243,
	428, 581, 504, -568, -289, -293, 2, 549, -101, 342,
	581, 585, -344, 38, 578, 582, -495, 2, 2, -490,
	542, 580, 580, -390, 580, 186, -568, -293, 2, -343,
	585, 504, -251, 2, -281, -351, -230, 154, -351, -351,
	-230, 585, 154, -265, -284, -289, -291, -293, -251, -510,
	-511, -230, -285, -592, 581, 508, -409, -305, 391, 464,
	410, 444, 484, 8, 9, 8, 9, 585, -501, 585,
	-593, 94, 504, 79, 436, -244, 278, 401, 313, 488,
	427, 504, -412, 213, 79, -523, -268, 94, -524, -251,
	73, 522, 381, 185, 152, -593, 94, 381, -593, 94,
	2, 230, 94, 449, 469, 29, 61, -457, 42, 42,
	29, -128, 265, 186, 555, 488, 228, 436, 504, 504,
	-457, -376, -471, 119, 289, 290, 61, -496, -491, 571,
	572, -496, 61, -496, -496, -496, 549, -283, -457, 436,
	504, 504, 504, 400, 400, -239, 504, 504, -613, 563,
	400, 585, 42, 42, 29, -128, 265, 186, 504, -302,
	-266, 536, 43, 536, 43, 536, 504, 43, 436, 504,
	585, 43, 504, 504, -575, -256, 106, 319, 282, 320,
	98, 316, 97, 315, 104, 317, 105, 318, 543, 328,
	64, 314, 293, 321, -257, -258, 361, 534, -510, 449,
	355, 409, 154, 220, -465, 220, -465, -294, -251, 582,
	-128, -421, -421, -128, -421, -128, 47, 154, 2, -609,
	258, 580, -309, 325, 186, -342, -466, 240, 585, -350,
	-566, 154, -507, -375, -374, 325, -285, 213, 2, 154,
	-333, 325, 148, 580, 389, 2, 154, -267, 213, -252,
	-251, -394, -233, 492, 154, -372, 532, -404, -128, 580,
	127, 39, -404, -361, -362, -463, -363, -268, 580, -274,
	-418, -101, -467, 581, 581, 581, -191, 344, -190, -251,
	5, -204, 532, -308, -413, -412, -527, -528, -523, 270,
	228, 522, 242, 169, -334, -269, -268, 120, -198, 549,
	-124, -125, 581, -465, 220, 472, -192, -192, -465, -465,
	-281, 183, -510, -192, -192, -192, 2, 2, 2, -378,
	-281, -265, -302, -281, 582, -342, -342, -293, -289, -378,
	-265, -378, -265, -378, -265, -128, -421, 2, 446, 183,
	183, 582, -378, 389, 121, 488, 359, 228, -281, -302,
	-281, -302, -265, 121, -265, 122, -281, -457, -369, -217,
	341, 254, 453, -401, -402, -423, 427, 428, -402, 427,
	428, 8, 9, 8, 9, -221, 457, 329, -351, 585,
	-224, 40, 135, 254, -281, 555, 150, -421, -421, 504,
	-615, 482, -428, 150, -421, 307, 330, 513, 168, 523,
	139, 334, 186, 580, -422, -422, 581, -355, -421, -421,
	579, 588, 581, -338, 585, -336, -421, -353, -353, 581,
	582, -353, -342, 579, 579, 585, 581, -439, -440, 144,
	-421, 504, 504, 504, 504, 580, 581, 582, -557, 351,
	580, 580, -421, 581, 581, 581, 581, 39, 585, 585,
	585, 581, 585, 585, 585, 581, 581, 581, 585, 581,
	555, 555, 581, 581, 581, 581, 585, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 581, 585, 581, 186, 581, 581, -392, 365, 581,
	11, 12, 571, 572, 573, 574, 181, 575, 576, 569,
	570, 568, 561, 562, 563, 87, 285, 429, 14, 15,
	16, 243, 220, -422, -422, -422, 581, -426, -427, 186,
	183, 39, -387, -387, -387, 581, 186, -353, 581, 581,
	580, -550, 287, 325, 581, -415, -414, 547, -462, -346,
	2, -452, -276, -501, -415, -415, -353, -421, 249, 249,
	-380, 532, 340, -382, -452, -445, -497, -420, -419, 184,
	40, 135, 322, 216, -445, -274, -333, -445, -445, -501,
	-446, -446, -444, 581, -565, -497, 581, -347, -455, -544,
	-338, 582, -501, -201, -545, -180, 5, 330, -180, -180,
	-180, -342, 504, 504, 25, 366, -471, 578, 579, 8,
	-501, 580, -495, -495, -495, -342, 186, 186, 186, -507,
	-507, 2, -230, -351, -230, -230, -302, -303, -230, -230,
	-230, -373, 549, -498, -408, 520, 84, 391, 500, -498,
	-226, 409, -268, -268, -281, -290, -251, 199, 401, 26,
	401, 269, 269, -507, 325, -412, 213, -232, 325, -471,
	-275, -251, 580, -396, 551, 254, 254, 532, -268, -275,
	254, 213, -268, 213, -275, 2, -275, -576, 391, 335,
	-421, 61, -317, 276, 389, 326, -227, 409, 449, 355,
	-128, -128, -128, 580, -592, 532, 138, -281, -302, -281,
	-290, -507, -285, 449, 355, 409, 323, -296, -496, -496,
	-374, 449, 355, 409, -290, -507, -283, -507, -238, -251,
	-238, 436, -265, 400, 555, 46, -613, -228, -128, -128,
	-128, 580, -266, -229, 409, 5, 213, -268, 5, -268,
	213, 5, -251, -268, -290, -507, -596, 24, 143, -268,
	-290, -507, -256, -510, 330, 528, -574, 436, 504, 504,
	-457, -124, -195, 549, -124, -189, 224, 573, -571, -251,
	541, -251, -307, -310, -308, -268, -207, -208, 551, 549,
	154, -300, -281, 578, -192, -510, -281, -466, -291, -292,
	154, -333, 325, -510, 39, 154, 580, 2, 2, -284,
	340, 325, -267, 213, -234, 145, -613, -265, -415, -346,
	-371, -406, 418, 340, -334, 537, -274, -371, -348, 585,
	186, 563, 582, -334, -461, 573, -101, -101, -192, 585,
	580, 563, 563, 580, -510, -510, 581, 585, -232, -281,
	-267, 228, 228, -273, -252, 581, 585, 582, 580, -200,
	344, -199, 146, 256, 241, 458, 459, 460, 461, 137,
	-465, -198, -125, 186, 186, -61, 549, 488, -192, 584,
	-251, -378, -378, -378, 446, 446, -251, -277, -265, -281,
	-278, -302, 183, 183, -265, 526, -402, 341, 281, -448,
	-225, 557, -281, 584, -421, -421, 150, 150, -421, -422,
	-422, -421, 150, 186, 580, -421, -432, 34, 34, 581,
	585, -417, -421, 581, 540, -338, -338, 581, 573, -501,
	584, 581, -430, 147, -421, 498, 294, 211, 292, -391,
	292, -391, -391, -495, 5, -501, 573, -558, -271, 580,
	-251, 547, -337, 346, 581, -473, -471, -421, -421, -421,
	-421, -421, -495, -476, -476, -491, -491, -421, -426, -421,
	-473, -471, -422, -422, -422, -422, -422, -422, -422, -422,
	-422, -422, -422, -422, -422, -422, -422, -422, -422, -422,
	-422, 139, 325, 334, -422, -427, -426, -421, -421, -471,
	581, 581, 581, -353, -101, 580, 287, -365, 204, -421,
	-465, 585, -365, -365, 581, -452, -452, 580, -421, 249,
	579, 585, 587, 563, -333, 582, -444, -445, 579, 581,
	585, 581, 585, -405, 39, 581, -501, -415, -203, -202,
	136, 54, 108, 134, 330, -342, -342, 343, 5, 8,
	578, 579, 582, -495, 581, 581, 581, -342, -342, -342,
	-230, -230, 120, 313, -421, 504, 504, 61, 504, 42,
	323, -238, 381, 427, 26, 401, 401, 154, 325, 534,
	-529, -524, 152, -421, 580, 228, 580, 580, 2, -223,
	143, 449, -594, 2, 532, 154, -230, 154, -230, 553,
	-317, 580, 580, 504, 436, -244, 504, 549, -353, -421,
	-193, 127, -500, -581, 584, -581, 584, 436, 504, 504,
	436, 504, 504, 549, 167, 167, 555, -238, 549, -353,
	504, -475, 49, 27, 325, -284, -230, 154, 504, 504,
	516, 449, -510, 330, -290, -507, -285, 449, 355, 409,
	-465, -197, 344, -196, 146, 420, 137, 256, -465, -195,
	186, 240, 549, -285, 2, 581, 581, 585, -530, 39,
	338, 338, 580, -281, -82, 549, -464, -497, -577, 549,
	44, -283, 39, 154, -574, -128, -285, -469, -470, 5,
	39, -281, 154, 340, 325, -235, 263, -613, -505, -545,
	-338, -371, -360, 326, 92, 581, -415, -362, -346, -421,
	2, 581, -190, -191, -510, -510, -510, -192, -204, -204,
	-413, -311, 580, -267, -252, 580, -204, -269, 2, -511,
	585, 580, 563, 563, 563, -198, -465, -124, -128, 344,
	-281, 573, -378, -323, -322, 359, 334, -323, 427, 427,
	341, 177, 259, -224, -266, -421, -421, 150, 34, 34,
	-421, -421, -432, 581, -421, -421, -353, 579, 5, -421,
	581, 581, 8, -421, 581, 582, -559, -251, -421, 581,
	61, 581, 581, 585, 585, 581, 581, 581, 581, 581,
	581, 581, -427, 186, 139, 334, 580, 581, 581, -101,
	-429, 207, 61, -452, -429, -429, -380, -342, -452, -419,
	-266, 578, -501, -497, -455, 580, 582, -202, 563, -510,
	-510, 579, 2, 578, -501, 581, 120, -268, -268, 488,
	427, 323, -238, 381, 427, 400, 269, 26, 26, -412,
	154, -531, 94, -533, 77, 169, 103, 325, 330, 522,
	381, 73, 127, 397, -605, 39, 560, 581, -340, -449,
	-544, 580, -251, -340, -342, 325, 477, 127, 325, 127,
	120, 516, 80, -268, -275, -342, -342, -281, -290, -507,
	161, 581, 585, 563, 2, 573, 573, -290, -507, -285,
	-290, -507, -283, 357, 167, 161, 581, -266, 5, 5,
	154, -263, 77, -268, 5, -268, -284, 120, 436, 504,
	504, -195, 585, 580, 563, 563, -195, -511, -124, 2,
	-333, -324, 230, -268, -528, -525, -526, 381, -532, -534,
	169, 381, -128, 2, -206, -205, -251, 5, 580, -309,
	344, 579, -579, 344, -578, 118, 137, -507, -375, -128,
	-285, -333, 581, 585, 148, -397, 532, -266, -281, 154,
	-236, 262, -613, -505, -233, -400, -398, 140, 580, 340,
	-128, -338, 563, 581, 581, 120, 120, 222, 153, -340,
	580, 580, -342, 120, 581, -199, -200, -510, -124, -510,
	-198, -62, -63, 228, 94, 364, -278, 488, 228, 580,
	580, -224, -421, -421, -421, 581, -338, -501, 573, -553,
	359, 581, -448, -421, -421, -422, 186, 580, -432, 581,
	-554, 548, -421, -366, -367, -421, 426, 109, 205, -554,
	-554, 581, -497, 2, -510, 578, 2, 220, 39, 400,
	269, 39, 504, 39, -412, -275, -279, -272, -251, 169,
	213, 330, 545, -396, 254, 580, -422, -281, 580, 2,
	31, -606, 131, 233, 581, 585, -450, -262, -251, -421,
	-450, 581, 581, 330, 330, -421, -471, 580, -230, -230,
	581, 581, -421, 504, -500, 101, -498, 2, -581, -265,
	-421, 504, 5, -230, -279, -230, -230, -263, 516, -290,
	-507, -285, -196, -197, -510, -124, -195, 39, -314, 232,
	2, -530, 254, -272, 254, -604, 549, 581, 585, 563,
	563, -307, -207, -83, -84, 505, -464, 585, 580, 563,
	-333, 39, 5, 580, 580, -251, 340, 580, -266, -246,
	93, -613, -505, -234, -371, 326, -342, 94, -400, -428,
	-192, 580, 580, -312, 82, 95, 128, 212, 189, 229,
	469, 475, 29, -312, 581, -340, -340, 581, 580, -192,
	581, 585, 29, 580, 29, 580, -281, -302, -353, -353,
	581, -338, 61, 585, 581, 581, -422, -432, 581, -555,
	-556, -271, 585, 580, 580, 450, 579, 2, -238, 381,
	-251, 39, -251, -238, 381, -251, -533, -272, 325, 532,
	-421, -253, 580, -421, 39, 233, 132, 218, -411, -607,
	102, 478, 221, -449, -224, 581, -410, 532, 397, -263,
	-340, 580, 580, 580, 563, 186, 580, -475, -230, -284,
	581, -586, 395, -128, -318, -319, 220, 580, -313, 340,
	120, 313, -205, -498, -498, 581, 39, -84, 9, -578,
	-579, -421, 39, -128, -469, -340, -281, -340, 340, -240,
	-239, 271, -505, -235, 581, -275, -371, -511, -511, -410,
	581, 581, -511, -63, -342, -342, 581, 581, -560, 389,
	428, 206, -353, -339, 581, 585, 39, -367, 2, 2,
	2, 400, -251, 400, 154, 208, 581, -535, 286, -251,
	581, 132, 218, -314, 580, -225, -450, -314, 208, -281,
	-582, 532, 581, -326, -325, -322, -328, -327, -322, -353,
	-498, 101, 357, -353, -263, -589, 187, -588, 5, 10,
	-207, 357, -341, -451, -268, 83, 120, -324, -128, 581,
	-128, 581, 581, -397, 581, -281, -237, -512, 400, 402,
	-613, -236, -415, 581, 581, -411, -410, -320, -316, 581,
	581, 581, 581, -561, -562, 51, 519, 110, -421, -561,
	-561, -556, -558, 169, 549, -536, -539, -538, 340, 456,
	187, 358, 581, 477, 544, -320, -342, 549, -333, -421,
	-410, 581, 585, 537, 581, 585, 537, 581, 186, 581,
	-230, -194, 549, 47, -313, -281, 581, 585, 380, 133,
	143, -314, -604, -410, 580, -411, 580, -243, -242, -613,
	-491, -246, 140, -192, -192, -314, -411, -208, 549, -192,
	-563, 152, -562, 377, 182, 427, 377, 182, -563, -563,
	-272, 56, -538, 340, -539, 340, 526, 133, -606, 581,
	56, -535, -314, -325, 220, -327, 186, 357, 434, -588,
	31, -245, -244, 580, -451, 428, 428, 2, -318, -313,
	-411, -340, -314, -340, -241, -342, -240, 326, 526, -320,
	-314, -415, 110, 204, 499, 313, 34, 563, -537, 313,
	416, 65, 449, -537, -415, 563, -536, 580, 580, 344,
	-342, 2, -207, -314, 581, -320, 581, -237, 449, -208,
	-320, 427, 348, -562, -421, 23, 330, 127, -421, -606,
	-353, -353, -191, 580, 581, -313, -320, -410, -208, -411,
	-243, -361, -415, -208, 581, 581, -191, -231, 65, 416,
	-245, -208, -411, -415, -314, -415, -415, -315, -316, 504,
	581, -415, -314, -320, 580, -320, -208, -353, -208, -415,
	581, -415, -315,
}

var sqlDef = [...]int{
	-2, -2, 1, 2, 3, 4, 6, 7, 8, 10,
	12, 14, 16, 18, 20, 22, 24, 26, 28, 30,
	31, 32, 33, 34, 524, 525, 527, 528, 529, 531,
	532, 534, 536, 538, 539, 540, 542, 543, 545, 546,
	547, 548, 549, 551, 553, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, -2, 0, 0,
	617, 619, 0, 1318, 1320, 1322, 1324, 0, 760, 0,
	36, 37, 39, 0, -2, 311, 313, 315, 0, 342,
	344, 345, 347, 349, 350, 351, 353, -2, 0, 459,
	460, 462, 464, -2, 0, 947, 949, 0, 606, 608,
	0, 952, 954, 0, 0, 628, 629, 0, 1425, -2,
	622, 624, 626, 691, 693, 695, 697, 699, 701, 703,
	705, 707, 708, 710, 712, 714, 716, 718, 719, 721,
	723, 725, 726, 728, 729, 731, 733, 735, 737, 739,
	741, 743, 745, 747, 749, 751, 753, 755, -2, 757,
	-2, -2, 0, -2, -2, -2, 1336, 41, 43, 45,
	47, 49, 51, 53, 55, 57, 403, 405, 407, 409,
	411, 414, 416, 418, 1483, 466, 468, 470, 472, 474,
	476, 478, 0, -2, 1497, 0, 0, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 101, 102,
	103, 104, 105, 106, 107, 108, 73, 74, 75, 77,
	78, 79, 80, 84, 85, 86, 87, 88, 89, 90,
	91, 99, 71, 0, 0, 1456, 1458, 1460, 1462, -2,
	0, 0, 5, 9, 11, 13, 15, 17, 19, 21,
	23, 25, 27, 29, 526, 530, 533, 535, 537, 541,
	544, 550, 552, 554, 511, 512, 515, 2161, 2178, 2179,
	2180, 2183, 2184, 2185, 2186, 2187, 2188, 2626, 2708, 2709,
	2210, 2211, 2212, 2213, 2214, 2215, 2216, 2217, 2218, 2219,
	2220, 2221, 2222, 2223, 2224, 2225, 2226, 2227, 2228, 2229,
	2230, 2231, 2232, 2233, 2234, 2235, 2236, 2237, 2238, 2239,
	2240, 2241, 2242, 2243, 2244, 2245, 2246, 2247, 2248, 2249,
	2250, 2251, 2252, 2253, 2254, 2255, 2256, 2257, 2258, 2259,
	2260, 2261, 2262, 2263, 2264, 2265, 2266, 2267, 2268, 2269,
	2270, 2271, 2272, 2273, 2274, 2275, 2276, 2277, 2278, 2279,
	2280, 2281, 2282, 2283, 2284, 2285, 2286, 2287, 2288, 2289,
	2290, 2291, 2292, 2293, 2294, 2295, 2296, 2297, 2298, 2299,
	2300, 2301, 2302, 2303, 2304, 2305, 2306, 2307, 2308, 2309,
	2310, 2311, 2312, 2313, 2314, 2315, 2316, 2317, 2318, 2319,
	2320, 2321, 2322, 2323, 2324, 2325, 2326, 2327, 2328, 2329,
	2330, 2331, 2332, 2333, 2334, 2335, 2336, 2337, 2338, 2339,
	2340, 2341, 2342, 2343, 2344, 2345, 2346, 2347, 2348, 2349,
	2350, 2351, 2352, 2353, 2354, 2355, 2356, 2357, 2358, 2359,
	2360, 2361, 2362, 2363, 2364, 2365, 2366, 2367, 2368, 2369,
	2370, 2371, 2372, 2373, 2374, 2375, 2376, 2377, 2378, 2379,
	2380, 2381, 2382, 2383, 2384, 2385, 2386, 2387, 2388, 2389,
	2390, 2391, 2392, 2393, 2394, 2395, 2396, 2397, 2398, 2399,
	2400, 2401, 2402, 2403, 2404, 2405, 2406, 2407, 2408, 2409,
	2410, 2411, 2412, 2413, 2414, 2415, 2416, 2417, 2418, 2419,
	2420, 2421, 2422, 2423, 2424, 2425, 2426, 2427, 2428, 2429,
	2430, 2431, 2432, 2433, 2434, 2435, 2436, 2437, 2438, 2439,
	2440, 2441, 2442, 2443, 2444, 2445, 2446, 2447, 2448, 2449,
	2450, 2451, 2452, 2453, 2454, 2455, 2456, 2457, 2458, 2459,
	2460, 2461, 2462, 2463, 2464, 2465, 2466, 2467, 2468, 2469,
	2470, 2471, 2472, 2473, 2474, 2475, 2476, 2477, 2478, 2479,
	2480, 2481, 2482, 2483, 2484, 2485, 2486, 2487, 2488, 2489,
	2490, 2491, 2492, 2493, 2494, 2495, 2496, 2497, 2498, 2499,
	2500, 2501, 2502, 2503, 2504, 2505, 2506, 2507, 2508, 2509,
	2510, 2511, 2512, 2513, 2514, 2515, 2516, 2517, 2518, 2519,
	2520, 2521, 2522, 2523, 2524, 2525, 2526, 2527, 2528, 2529,
	2530, 2531, 2532, 2533, 2534, 2535, 2536, 2537, 2538, 2539,
	2540, 2541, 2542, 2543, 2544, 2545, 2546, 2547, 2548, 2549,
	2550, 2551, 2552, 2553, 2554, 2555, 2556, 2557, 2558, 2559,
	2560, 2561, 2562, 2563, 2564, 2565, 2566, 2567, 2568, 2569,
	2570, 2571, 2572, 2573, 2574, 2575, 2576, 2577, 2578, 2579,
	2580, 2581, 2582, 2583, 2584, 2585, 2586, 2587, 2588, 2589,
	2590, 2591, 2592, 2593, 2594, 2595, 2596, 2597, 2598, 2599,
	2600, 2601, 2602, 2603, 2604, 2605, 513, 514, 1124, 0,
	578, 576, 2146, 579, 2430, 581, 583, 453, 454, 455,
	456, 457, 458, 0, 599, 590, 1495, 600, 602, 603,
	604, 605, 573, 571, 0, 599, 2214, 597, 1316, 1317,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 465, 0,
	0, 0, 0, -2, 0, 0, 0, 0, 0, 0,
	0, 382, 1173, 1174, 1175, 1301, 1302, 2474, 1343, 0,
	217, 618, -2, -2, -2, 2591, -2, 650, -2, 657,
	2595, 2476, 662, 0, 664, -2, 667, 1319, 1321, 1323,
	758, 759, 2164, 0, 0, 0, 0, 0, 38, 40,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 225, 227, -2, -2, -2, -2, 0,
	0, 2520, 2267, 2114, 2180, 2117, 2112, 312, 314, 316,
	317, 0, 0, 0, 0, 0, 0, 343, 346, 348,
	352, -2, 354, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 381, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, -2, -2, 0, 0, 0,
	0, 0, 0, 0, 0, 1008, 1000, 1001, 1231, 0,
	0, 0, -2, 461, 463, 516, 517, 0, 1484, 1484,
	-2, 0, 0, 0, 0, 283, 273, 948, 950, 951,
	0, 0, 0, 0, 607, 609, 0, 0, 255, 953,
	955, 956, 0, 0, 0, 0, 0, 285, 0, 0,
	623, 625, 627, 692, 694, 696, 698, 700, 702, 704,
	706, 709, 711, 713, 715, 717, 720, 722, 724, 727,
	730, 732, 734, 736, 738, 740, 742, 744, 746, 748,
	750, 752, 754, 756, 766, 0, 0, 0, 0, 0,
	-2, -2, 0, 0, 0, -2, -2, -2, -2, 0,
	0, 0, 0, 0, 0, 0, -2, 0, 854, 0,
	0, 0, -2, -2, -2, 0, 0, 0, 0, 0,
	-2, -2, 0, 0, 0, 0, -2, 929, 0, 769,
	771, 772, 773, 0, 832, 852, 853, 862, 0, 1164,
	1485, 1345, 1326, 1340, 1345, 1328, 1329, 1330, 1331, 1332,
	1337, 1339, 1333, 1334, 1335, 42, 44, 46, 48, 50,
	52, 54, 56, 58, 404, 406, 408, 410, 412, 415,
	417, 419, -2, 1454, 1455, 467, 469, 471, 473, 475,
	477, 479, 610, 0, 612, 0, 770, -2, 0, 1489,
	1489, 1489, 0, 0, 1455, 1453, 0, 615, 616, 671,
	672, 1757, 0, 0, 0, 0, 0, 0, 0, 2011,
	1843, 0, 673, -2, 1874, 1876, 2566, 2591, 2010, 1878,
	1879, 1880, 1881, 1882, 0, 1884, 1885, 1886, 1887, 1888,
	1889, 0, 1891, 0, 1896, 1897, 1898, 0, 2573, 2091,
	2174, -2, 0, 0, 2579, 2170, 0, 1977, 1914, -2,
	-2, 2197, 2176, 1689, 1690, 1691, 1692, 1693, -2, -2,
	2609, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925, 1926,
	1927, 1928, 0, 2554, 2574, 2575, 2580, 2582, 2576, 2563,
	1939, 2280, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, 1716, 1725, -2, -2, -2,
	-2, -2, -2, -2, 2567, 2568, 2585, 2588, 2594, 2599,
	2600, 2572, 2581, 2608, 2610, 2611, 2612, 2613, 2614, 2615,
	2616, 2617, 2618, 2619, 2620, 2621, 2622, 2623, 2624, 2625,
	1717, -2, -2, -2, -2, 1472, 2443, 1475, 1124, 1473,
	1457, 1459, 0, 1461, 0, 0, 0, 1466, 1492, 1490,
	0, 1541, 1470, 1471, 1559, 1559, 1583, 0, 1564, 0,
	1583, 1484, 1610, 0, 1570, 2466, 1915, 1916, 0, 2180,
	2175, -2, -2, 2606, 0, 0, 0, 0, 0, 0,
	0, 0, 574, 0, 580, 582, 0, 0, 0, 598,
	1494, 0, 0, 0, 0, 0, 0, 0, 385, 386,
	387, 388, 389, 2574, 0, 0, 0, 394, 0, 396,
	397, 398, 399, 400, 401, 402, 186, 2574, 484, 509,
	0, 186, 2574, 487, 186, 2574, 490, 0, 493, 1229,
	186, 2574, 496, 2142, 186, 2574, 499, 501, 2150, 186,
	2574, 505, 2157, 2155, 506, 2574, 508, 288, 286, 287,
	2193, 2194, 2201, 2202, 2203, 2204, 2607, 2609, 1312, 1313,
	1314, 1315, 0, 1342, 1230, 620, 621, 0, 645, 0,
	649, 2562, -2, 0, 2485, -2, 653, 1346, 1350, 1351,
	1352, 1353, 1354, 0, 0, 0, 0, 1359, 0, 0,
	659, 0, 0, 646, 647, 665, 668, 0, 761, 762,
	763, 764, 765, 70, 0, 2574, 1610, 72, 0, 2136,
	2205, 2206, 2207, 2208, 2209, 2627, 2628, 2629, 2630, 2631,
	2632, 2633, 2634, 2635, 2636, 2637, 2638, 2639, 2640, 2641,
	2642, 2643, 2644, 2645, 2646, 2647, 2648, 2649, 2650, 2651,
	2652, 2653, 2654, 2655, 2656, 2657, 2658, 2659, 2660, 2661,
	2662, 2663, 2664, 2665, 2666, 2667, 2668, 2669, 2670, 2671,
	2672, 2673, 2674, 2675, 2676, 2677, 2678, 2679, 2680, 2681,
	2682, 2683, 2684, 2685, 2686, 2687, 2688, 2689, 2690, 2691,
	2692, 2693, 2694, 2695, 2696, 2697, 2698, 2699, 2700, 2701,
	2702, 2703, 2704, 2705, 2706, 2707, 76, 0, 2574, 81,
	0, 2574, 0, -2, 92, 0, 100, 0, 2139, 109,
	0, 2574, 0, 2111, -2, 0, 198, 274, 0, 975,
	-2, 2574, 1172, 0, 0, 0, 0, 938, 2108, 2113,
	939, 2132, 940, 2118, 0, 318, 319, 320, 321, 322,
	0, 323, 2574, 325, 326, 0, 328, 329, 2574, 331,
	332, 0, 334, 0, 238, 239, 2574, 356, 358, 0,
	360, 361, 0, 363, 0, 0, 0, 367, -2, 383,
	0, 380, 370, 371, 373, 374, 375, 376, 377, 0,
	423, 421, 2147, 0, 0, -2, 2574, 0, 972, 0,
	0, 1209, -2, 2574, 1169, 0, 1216, 2574, 1212, 0,
	-2, 0, 1482, 2574, 1363, 1004, 1005, 1006, 1007, 1622,
	450, 0, 1390, 0, 1392, 0, 1411, 1616, 1559, 0,
	0, 1621, 0, -2, 567, 2163, -2, 519, 0, 520,
	0, -2, 0, 300, 0, 0, 957, 958, 959, 960,
	961, 964, 965, 966, 967, 1596, 256, 258, 0, 0,
	1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 0,
	0, 630, 0, 0, 767, 768, 0, 0, 778, 779,
	780, 0, 300, 2477, 2439, 2301, 787, 0, 790, 793,
	-2, 0, 0, 0, 0, 797, 0, 802, 803, 804,
	0, 0, 808, 810, 946, 812, 0, 0, 814, 0,
	818, 0, 821, 0, 823, 0, 825, -2, -2, -2,
	833, 834, -2, 838, -2, 0, 841, 843, 0, 845,
	-2, 0, 854, 850, 851, 0, 0, 0, 0, 870,
	871, 0, 880, 0, 883, 884, 885, 0, 887, 888,
	0, 890, 891, 892, 893, 0, 0, 896, 897, -2,
	-2, 901, 903, 0, 910, 0, 916, 0, 920, 0,
	0, 928, 0, 774, 775, 186, 1614, 1325, -2, 1327,
	0, -2, 0, 611, 0, 614, 1514, 1440, 1437, 0,
	1511, 1512, 1441, 0, 0, 0, 1448, 0, 1487, 1488,
	0, 0, 0, 1427, 1428, 0, 0, 0, 0, 2016,
	2017, 2018, 2019, 2020, 2021, 2024, 2025, 2022, 2023, 2026,
	2027, 0, 0, 0, 0, 0, 2028, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2029, 2030,
	2031, 0, 0, 2033, 0, 2035, 0, 0, 0, 0,
	0, 0, 1822, 1824, 2099, 0, 0, 2032, 1762, 1763,
	1764, 1765, 1766, 1801, 1802, 0, 0, 1875, 2096, 2095,
	1877, 0, 2047, 0, 1890, -2, 0, 2011, 2042, 0,
	0, 1899, 1900, 1901, 0, 0, 2047, 0, 0, 2090,
	1911, 1912, 1754, 0, 0, 1979, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1703, 1702, 0, 1704, 0, 1705, 1706,
	1713, 1726, 0, 0, 0, 0, 1730, 0, 0, 0,
	0, 0, 0, 0, 2071, -2, 0, 0, 0, 0,
	1718, 0, 1474, 0, 0, 1545, 2100, 2104, 2105, 1545,
	1545, 0, 0, 2048, 1607, 1607, 0, 0, 1602, 1602,
	1602, 1600, 1583, 0, 1583, 1593, 0, 1583, 1583, 0,
	-2, 1564, 0, 0, 1593, 0, 1577, 555, 557, 559,
	561, 562, 563, 565, 1611, 1612, 0, 0, 0, 0,
	2181, 0, 0, 0, 0, 0, 2166, 0, 339, 0,
	0, 0, 2530, 2476, -2, 585, 601, 1484, 0, 2050,
	1637, 1641, 0, 1643, 1644, 1645, 1646, 1647, 0, 0,
	1638, -2, 1714, 1716, 1737, 2198, 2199, 2200, 1697, 1698,
	1699, 1700, 1701, 1709, 1696, 1696, 1696, 1707, 1736, 1728,
	1736, 1732, 1682, 1683, 1684, 1719, 1720, 1721, 1722, 0,
	2530, 2476, -2, 592, 0, 0, 1422, 202, 204, 205,
	206, 207, 208, 384, 0, 391, 392, 393, 0, 480,
	0, 184, 185, 0, 186, 2574, 485, 0, 488, 0,
	186, 2574, 2106, 494, 0, 497, 0, 0, 503, 0,
	0, 0, 0, 0, 186, 1424, 0, 0, 0, 0,
	-2, 655, 660, 661, 0, 1348, 0, 1355, 682, 683,
	684, 1357, 1358, 0, 1360, 658, 685, 686, 687, 688,
	689, 690, 0, 2120, 2121, 2122, 2123, 2126, 2127, 0,
	0, 656, 675, 663, 0, 669, 110, 1298, 0, 0,
	149, 0, 1298, 1298, 0, 0, 0, 0, 173, 0,
	1043, 0, 0, 0, 0, 0, 134, 145, 122, 123,
	0, 0, 0, 0, 0, 0, 82, 1146, 0, 1149,
	0, 0, 0, 0, 0, 0, 0, 1162, 0, 0,
	0, 0, 0, 0, 0, 96, 97, 0, 133, 0,
	0, 1387, 0, 128, 112, 0, 0, 0, 135, 147,
	0, 177, 179, 1040, 0, 0, 0, 0, 0, 0,
	0, 0, 197, 209, 0, 0, 0, 1170, 0, 1481,
	0, 0, 2574, 0, 1596, 2347, -2, -2, 256, 1596,
	937, 0, 0, 2181, 2116, 0, 0, 0, 0, 0,
	0, 0, 0, 359, 362, 364, 365, 366, 0, 1208,
	0, 372, 413, 1095, 2574, 0, 0, 440, 435, 0,
	437, 0, 0, 0, 1145, 2574, 1143, 2151, 0, 1167,
	0, 1124, 2574, 2149, 0, 0, 0, 1217, 2190, 1226,
	1230, 1377, 0, 452, 0, 1393, 1395, 0, 0, 1617,
	0, 1619, 1559, 1484, 0, 0, 0, 0, 276, 0,
	0, 0, 0, 0, 0, 262, 0, 1595, 0, 0,
	1596, 256, 2454, 300, 300, 1596, 632, 1596, 634, 0,
	0, 781, 782, 0, 300, 300, 300, 788, 789, 791,
	792, -2, -2, -2, 911, 794, 795, 877, 0, 0,
	0, 876, 807, 811, 0, 931, 2462, 2476, 2530, 944,
	877, 2267, 877, 2267, 877, 2267, 822, 824, 827, 865,
	873, 837, 842, 0, 0, 847, 855, -2, 0, 857,
	0, 859, 0, 861, 877, 878, 881, 886, 889, 894,
	895, 0, 912, 913, 0, 0, 0, 0, 0, 0,
	923, 924, 0, 0, 1163, 0, 1338, 1514, 1440, 613,
	1431, 1513, 1432, 1439, 1442, 0, 0, 1444, 0, 1446,
	0, 1509, 1510, 1517, 1518, 0, 1528, 1529, 1521, 0,
	-2, 0, 0, 1524, 1525, 1450, 0, 1467, 1468, 1469,
	1498, 1501, 1245, 0, 2708, 1758, 1632, 1759, 1760, 2135,
	0, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775,
	1776, -2, -2, -2, -2, -2, -2, -2, -2, 1785,
	1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795,
	-2, -2, -2, 1799, 1800, -2, 2034, 2036, 0, 2099,
	0, -2, 0, -2, -2, -2, -2, 1819, 0, 1821,
	1826, 1828, 1830, 0, 0, 0, 0, 2098, 1840, 2082,
	2083, 0, 0, 2013, 2014, 2015, 1825, 0, 1844, 2097,
	2094, 0, 0, 2046, 1497, 1903, 0, 0, 0, 0,
	1910, 1895, 2044, 0, 2043, 0, 0, 0, 2054, 0,
	2089, 2085, 0, 2133, 1753, 1740, 1741, 1742, 1743, 1744,
	1745, 1755, 0, 2130, 2167, 2173, 1987, 0, 0, 0,
	1940, 1941, 1942, 1943, 1944, 0, 1946, 1947, 0, 1949,
	1950, 0, 1952, 1953, 0, 1955, 1956, 1957, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1650, 0, 0, 0, 1654,
	0, 0, 0, 1658, 0, 0, 0, 1662, 0, 0,
	0, 1666, 0, 0, 0, 1670, 0, 0, 0, 1674,
	0, 0, 0, 1678, 0, 0, 0, 0, 0, 1959,
	0, 2057, -2, -2, -2, -2, -2, -2, -2, -2,
	0, 1961, 0, 1963, 2048, 2068, 0, 0, 1845, 0,
	0, 0, 2011, 0, 1966, 2048, 2076, 0, 0, 0,
	0, 0, 2048, 0, 2081, 0, 1973, 0, 1975, 1476,
	0, 0, 1627, 0, 0, 0, 2103, 1627, 1627, 0,
	1540, 0, 0, 1603, 1604, 1605, 1606, 0, 0, 1607,
	0, 1597, 1601, 1598, 1599, 1593, 1556, 0, 0, 2137,
	1593, 1562, 1592, 0, 1124, 1582, 1593, 1593, 0, -2,
	1566, 1583, 0, 0, 556, 558, 560, 564, 566, 0,
	0, 1497, -2, 0, -2, 1123, 0, 0, 0, 0,
	575, 577, 0, 0, 500, 0, 589, 0, 569, 0,
	572, 0, 1628, 1631, 0, 0, 1642, 1648, 1649, 0,
	-2, 0, 0, 1738, 0, 0, 0, 0, 596, 0,
	0, 0, 0, 395, 510, 186, 482, 0, 186, 186,
	491, 0, 0, 186, 502, 186, 2158, 186, 2156, 289,
	507, 1423, 220, 0, 648, 0, 1347, 1356, 0, 679,
	0, 681, 0, 2124, 2128, 2125, 2129, 0, 670, 0,
	0, 0, 0, 1297, 0, 1252, 0, 0, 0, 0,
	0, 0, 153, 2574, 0, 188, 0, 0, 1088, 2143,
	0, 1080, 0, 0, 2287, 0, 0, 0, 0, 0,
	166, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	119, 124, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1147, 1148, 1150, 1157, 1159, 0, 1153, 2131, 0,
	0, 1154, 0, 1156, 1158, 1160, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 98, 0, 0, 0, 1386,
	1387, 0, 0, 0, 121, 125, 0, 0, 0, 0,
	2110, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1204, 1202, 1182, 1183, 1184, 1185,
	1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195,
	1196, 1197, 1198, 1199, 1200, 1201, 0, 0, -2, 0,
	0, 0, 0, 0, 230, 0, 291, 2109, 2119, 0,
	962, 963, 324, 327, 330, 333, 226, 0, 368, 0,
	0, 1010, 985, 0, 0, 422, 300, 0, 0, 436,
	440, 2160, 970, 1141, 1144, 0, 1124, 2574, 1181, 0,
	0, 0, 0, 0, 0, 1215, 0, 0, 2574, 2138,
	2189, 2190, 1379, 1387, 0, 1627, 0, 1409, 1396, 0,
	0, 0, 1409, 1413, 1414, 1416, 1417, 0, 0, 1618,
	1624, 518, 568, 1484, 1484, 300, 298, 2407, 296, 293,
	295, 0, 0, 0, 1011, 1013, 1014, 1015, 188, 0,
	2190, 1080, 2336, 2190, 0, 1399, 1401, 0, 250, 0,
	259, 1596, 257, 262, 0, 0, 0, 434, 631, 636,
	776, 0, 300, 784, 785, 786, 829, 867, 875, 796,
	798, 799, 800, 0, 0, 945, 941, 942, 943, 813,
	877, 816, 877, 819, 877, 840, 844, 849, 856, 0,
	0, 0, 869, 0, 0, 0, 0, 0, 0, 0,
	917, 918, 919, 921, 926, 925, 930, 1615, 1435, 1436,
	1438, 0, 1447, 0, 0, 1523, -2, -2, 1522, 1526,
	1527, -2, -2, -2, -2, 1443, 0, 1452, 1449, 0,
	1508, 1243, 1244, 0, 0, 0, 0, -2, -2, 0,
	0, 0, 1841, 0, -2, 1820, 1823, 1827, 1829, 1831,
	0, 0, 0, 0, 0, 0, 2037, 0, 2039, 1842,
	2092, 2095, 2009, 0, 0, 1496, 1497, 1497, 0, 1909,
	0, 2045, 0, 2052, 2053, 0, 1902, 0, 2086, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1913, 0,
	0, 0, 0, 1945, 1948, 1951, 1954, 0, 0, 0,
	0, 1934, 0, 0, 0, 1938, 1708, 1694, 0, 1736,
	1734, 1735, 1729, 1736, 1733, 1686, 0, 1651, 1652, 1653,
	1655, 1656, 1657, 1659, 1660, 1661, 1663, 1664, 1665, 1667,
	1668, 1669, 1671, 1672, 1673, 1675, 1676, 1677, 1679, 1680,
	1681, 1685, 0, 1958, 0, 1960, 1962, 0, 0, 1964,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1848, 1849, 1850, 1965, 2074, 2075, 0,
	0, 0, 0, 0, 0, 1971, 0, 2080, 1972, 1974,
	1484, 0, 1477, 0, 1542, 1531, 1626, 0, 2101, 1596,
	1544, 1546, 2102, 2140, 1531, 1531, 0, 2049, 0, 0,
	1587, 0, 0, 0, 1589, 1560, 0, 0, 1554, 0,
	1550, 1551, 1552, 1553, 1561, 1124, 1591, 1563, 1567, 2167,
	0, 1593, 0, 1578, 0, 1580, 1613, 0, 1572, 1575,
	0, 0, 2182, 1627, 0, 335, 340, 341, 336, 337,
	338, 584, 0, 0, 0, 0, 2051, 0, 1633, 0,
	1639, 0, 0, 0, 0, 591, 0, 0, 0, 203,
	1421, 390, 481, 186, 486, 489, 2107, 186, 495, 498,
	504, 216, 0, 644, -2, 677, 678, 680, 0, 676,
	150, 1298, 0, 0, 1248, 1250, 2154, 1254, 0, 0,
	0, 0, 0, 1275, 0, 155, 2574, 164, 0, 1059,
	0, 2141, 0, 0, 0, 0, 0, 0, 1300, 0,
	0, 2574, 186, 2574, 186, 167, 169, 172, 0, 176,
	174, 0, 1047, 0, 0, 1050, 111, 1298, 0, 0,
	114, 118, 126, 0, 0, 0, 132, 0, 0, 0,
	1277, 1281, 1289, 0, 0, 0, 1151, 1152, 1155, 1161,
	83, 0, 0, 0, 1285, 1287, 1293, 93, 94, 2152,
	95, 0, 1247, 0, 0, 0, 0, 178, 116, 120,
	127, 0, 1295, 113, 0, 201, 0, 0, 191, 186,
	2574, 0, 193, 0, 194, 195, 210, 0, 0, 0,
	973, 974, 1203, 1165, 1166, 0, 1171, 0, 0, 0,
	0, 1596, 222, 0, 1596, 230, 0, 2115, 0, 355,
	0, 0, 0, 0, 1009, 1106, 0, 980, 0, 0,
	0, 428, 424, 0, 433, 439, 438, 444, -2, 0,
	0, 0, 0, -2, 0, 0, 1219, 1213, 1214, 0,
	0, 0, 0, 2574, 1381, 1387, 0, 1482, 1497, 451,
	1388, 1409, 0, 0, 0, 1398, 1394, 1391, 1627, 0,
	0, 0, 0, 0, 1620, 1623, 521, 522, 275, 0,
	0, 0, 0, 0, 300, 0, 0, 0, 1016, 1020,
	0, 2190, 2190, 0, 2145, 0, 0, 0, 0, 260,
	0, 263, 0, 0, 0, 268, 269, 270, 271, 272,
	262, 252, 1596, 0, 0, 633, 0, 0, 783, 0,
	806, 815, 817, 820, 858, 860, 877, 904, 905, 1037,
	0, 1037, 0, 0, 922, 1445, 0, 1520, 1451, 1502,
	1503, 0, 1245, 0, 1761, 1804, 0, 0, -2, 0,
	0, 1808, 0, 0, 0, -2, 0, 0, 0, 2038,
	2040, 0, 2094, 1904, 0, 0, 0, 1908, 1892, 1893,
	0, 2012, 2055, 2084, 2088, 0, 1746, 1747, 1748, 1749,
	1750, 1751, 1752, 0, 2134, 2168, 2172, 1985, 1986, 1990,
	2148, 0, 0, 0, 1917, 0, 0, 0, 0, 0,
	0, 0, 0, 1727, 1731, 0, 0, 2056, 2067, 2069,
	1846, 1847, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858,
	1859, 1860, -2, -2, -2, 1864, 1865, 1866, -2, -2,
	-2, 0, 0, 0, 2070, 2072, 2073, 2077, 2078, 0,
	1968, 1969, 1970, 2079, 0, 1484, 1478, 1539, 0, 1625,
	1543, 0, 1539, 1539, 1491, 1585, 0, 0, 1609, 0,
	1557, 0, 1558, 0, 1590, 0, 1565, 1568, 1569, 1579,
	0, 1571, 0, 1574, 0, 1904, -2, 301, 302, 304,
	0, 307, 308, 0, 0, 587, 588, 586, 570, 0,
	0, 1635, 0, 0, 1711, 1715, 1739, 594, 595, 593,
	483, 492, 218, 0, 1594, 0, 0, 0, 0, 2220,
	1265, 1266, 0, 2591, 1270, 0, 0, 0, 0, 187,
	1057, 1087, 0, 0, 0, 1079, 0, 0, 1093, 157,
	0, 0, 0, 165, 0, 0, 162, 0, 171, 175,
	1044, 0, 0, 0, 0, 1253, 0, 0, 0, 129,
	130, 131, 0, 136, 0, 137, 0, 0, 0, 0,
	0, 0, 0, 0, 1371, 1372, 0, 1366, 0, 0,
	0, 189, 0, 0, 0, 1242, 212, 0, 0, 0,
	0, 0, 1206, 1207, 1278, 1282, 1290, 0, 0, 0,
	230, 228, 0, 231, 0, 234, 235, 0, 230, 224,
	0, 0, 0, 1124, 369, 983, 1094, 0, 1096, 0,
	981, 0, 0, 1095, 420, 0, 427, 0, 441, 0,
	0, 1145, 0, 0, 1168, 1179, 1124, 0, 1218, 1220,
	0, 1228, 0, 0, 0, 1383, 1387, 0, 1376, 1377,
	1516, 1389, 1407, -2, 0, 0, 1497, 1415, 1412, 1418,
	1419, 0, 297, 0, 292, 294, 0, 278, 0, 0,
	1012, 1017, 0, 0, 0, 0, 0, 1400, 1402, 0,
	0, 0, 0, 0, 0, 251, 262, 254, 284, 0,
	777, 801, 868, 906, 1036, 0, 0, 908, 0, 0,
	1519, 1506, 1507, 1504, 1245, 1806, 1810, 0, 0, 0,
	1812, -2, 0, 1834, -2, -2, 2041, 2093, 1883, 1497,
	1905, 1907, 1894, 2087, 1756, 0, 1992, 1989, 0, 1976,
	0, 1929, 1930, 0, 0, 1933, 1935, 1936, 1937, 1695,
	1688, 1687, 2066, 0, 0, 0, 0, 1967, 1479, 0,
	1981, 0, 0, 1547, 1981, 1981, 1586, 0, 1588, 1555,
	1548, 0, 2168, 1581, 1573, 0, 0, 305, 0, 309,
	310, 1629, 1634, 0, 1640, 1710, 219, 151, 152, 1257,
	1258, 1260, 1261, 0, 0, 1267, 1268, 0, 1273, 154,
	0, 1058, 0, 1061, 0, 0, 0, 0, 1068, 1080,
	0, 0, 0, 0, 0, 1081, 0, 1110, 0, 1233,
	1240, 0, -2, 0, 0, 0, 159, 181, 0, 0,
	1299, 0, 0, 186, 186, 0, 0, 1249, 1251, 1276,
	0, 0, 0, 0, 139, 0, 0, 1279, 1283, 1291,
	1286, 1288, 1294, 0, 1373, 0, 0, 1296, 199, 200,
	0, 186, 0, 186, 192, 186, 1242, 0, 0, 0,
	0, 221, 0, 0, 0, 0, 223, 290, 230, 357,
	0, 1031, 0, 1106, 1098, 1099, 1100, 0, 1105, 1107,
	0, 0, 997, 982, 0, 993, 0, 0, 1010, 985,
	0, 425, 442, 0, 445, 0, 448, 971, 1142, 1176,
	1124, 0, 1210, 0, 0, 0, 0, 0, 0, 0,
	1385, 1387, 0, 1378, 1379, 1409, 1515, 0, 0, 0,
	1397, 1516, 0, 299, 300, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 300, 264, 0, 265, 266, 267,
	253, 635, 637, 0, 0, 643, 1035, 0, 0, 0,
	0, 1505, 1814, -2, -2, 1835, 0, 2169, 2171, 1497,
	0, 1978, 1499, 0, 0, -2, 0, 0, 0, 1480,
	1463, 0, 1538, 1530, 1532, 1534, 2465, 2262, 2573, 1464,
	1465, 1608, 0, 1576, 306, 0, 1636, 0, 0, 1262,
	1263, 0, 0, 0, 156, 0, 1062, 1063, 2144, 1065,
	0, 1067, 1069, 1070, 1071, 0, 1074, 2192, 0, 1078,
	0, 1089, 1111, 0, 1120, 0, 1235, 1245, 1239, 0,
	1237, 1122, 0, 158, 160, 180, 1242, 0, 161, 170,
	0, 0, 115, 0, 0, 2256, 142, 140, 138, 1246,
	117, 0, 201, 211, 1241, 213, 196, 186, 0, 1280,
	1284, 1292, 232, 0, 233, 236, 0, 0, 1046, 0,
	984, 1097, 0, 1108, 1109, 987, 0, 986, 0, 0,
	0, 0, 0, 426, 429, 0, 432, 0, 0, 0,
	0, 0, 1221, 1219, 0, 1227, 0, 0, 0, 1365,
	0, 0, 1380, 1381, 449, 1403, 0, 0, 1409, 1420,
	277, 0, 0, 1018, 1021, 1022, 1023, 1024, 1025, 1026,
	1027, 1028, 1029, 1019, 1122, 0, 0, 1086, 0, 282,
	261, 0, 639, 0, 641, 0, 907, 909, 0, 0,
	1906, 1996, 0, 0, 1931, 1932, -2, 0, 1872, 1980,
	1982, 0, 0, 0, 0, 0, 1549, 1630, 1255, 0,
	1259, 0, 1269, 1271, 0, 1274, 1060, 1064, 0, 0,
	0, 1128, 0, 0, 1082, 0, 1114, 1115, 1031, 0,
	1116, 1117, 1118, 1234, 1508, 1240, 1031, 0, 0, 183,
	0, 0, 0, 0, 0, 0, 0, 190, 214, 1242,
	229, 246, 0, 1177, 985, 1045, 0, 0, 995, 0,
	998, 0, 994, 991, 992, 983, 0, 430, 431, 446,
	0, 447, 0, 1180, 0, 0, 1228, 0, 0, 1368,
	1364, 1387, 1382, 1383, 1627, 1406, 1410, 0, 0, 1120,
	1122, 1042, 0, 638, 0, 0, 914, 915, 0, 0,
	0, 0, 1991, 1500, 1873, 0, 0, 1533, 1535, 1536,
	1537, 1256, 1264, 1272, 0, 0, 1073, 1133, 0, 0,
	0, 1112, 1113, 1042, 0, 1238, 1236, 1091, 0, 1124,
	163, 0, 1122, 0, 1051, 0, 0, 1054, 0, 0,
	143, 2256, 141, 0, 186, 249, 0, 243, 241, 242,
	987, 0, 0, 1102, 1104, 0, 999, 1031, 997, 443,
	1178, 1211, 1122, 0, 1120, 0, 1375, 1387, 1369, 1370,
	0, 1385, 0, 300, 300, 1031, 1120, 985, 1041, 300,
	640, 642, 1988, 2008, 1997, -2, 2533, 2263, 0, 2008,
	2008, 1983, 1984, 0, 0, 1075, 1129, 1130, 0, 1125,
	1126, 1127, 2191, 1076, 1077, 1110, 0, 0, 1128, 182,
	1031, 1048, 0, 0, 1049, 0, 0, 146, 0, 148,
	215, 237, 0, 0, 979, 0, 1101, 0, 0, 0,
	0, 1046, 987, 1120, 0, 1031, 0, 1361, 1374, 0,
	1384, 1365, 0, 279, 280, 1042, 1031, 1627, 0, 281,
	1993, 0, 0, 1999, 2000, 2001, 2002, 2003, 1994, 1995,
	1066, 0, 1131, 0, 1132, 0, 0, 0, 1627, 1119,
	0, 1133, 168, 1052, 0, 1055, 0, 144, 0, 244,
	245, 976, 978, 0, 1103, 988, 0, 990, 985, 996,
	1031, 0, 1042, 0, 1367, 2153, 1368, 1404, 0, 985,
	1042, 1085, 0, 2005, 2006, 0, 0, 0, 1134, 0,
	1137, 1138, 0, 1135, 1090, 0, 1110, 0, 0, 0,
	0, 989, 987, 1042, 1122, 985, 1120, 1375, 0, 1627,
	985, 2004, 2007, 1998, 1072, 1136, 1139, 1140, 1121, 1092,
	0, 0, 247, 0, 1034, 979, 985, 1120, 1627, 1031,
	1362, 1627, 1083, 1627, 1039, 0, 0, 1030, 1032, 1033,
	977, 1627, 1031, 1224, 1042, 1405, 1084, 1053, 1038, 0,
	248, 1222, 1042, 985, 0, 985, 1627, 0, 1627, 1225,
	1039, 1223, 1056,
}

var sqlTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 569, 3, 575, 570, 3,
	580, 581, 573, 571, 585, 572, 582, 574, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 588, 3,
	561, 563, 562, 566, 584, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 578, 3, 579, 576, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 586, 568, 587, 564,
}

var sqlTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}

var sqlTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 475, 57818, 476, 57819, 477,
	57820, 478, 57821, 479, 57822, 480, 57823, 481, 57824, 482,
	57825, 483, 57826, 484, 57827, 485, 57828, 486, 57829, 487,
	57830, 488, 57831, 489, 57832, 490, 57833, 491, 57834, 492,
	57835, 493, 57836, 494, 57837, 495, 57838, 496, 57839, 497,
	57840, 498, 57841, 499, 57842, 500, 57843, 501, 57844, 502,
	57845, 503, 57846, 504, 57847, 505, 57848, 506, 57849, 507,
	57850, 508, 57851, 509, 57852, 510, 57853, 511, 57854, 512,
	57855, 513, 57856, 514, 57857, 515, 57858, 516, 57859, 517,
	57860, 518, 57861, 519, 57862, 520, 57863, 521, 57864, 522,
	57865, 523, 57866, 524, 57867, 525, 57868, 526, 57869, 527,
	57870, 528, 57871, 529, 57872, 530, 57873, 531, 57874, 532,
	57875, 533, 57876, 534, 57877, 535, 57878, 536, 57879, 537,
	57880, 538, 57881, 539, 57882, 540, 57883, 541, 57884, 542,
	57885, 543, 57886, 544, 57887, 545, 57888, 546, 57889, 547,
	57890, 548, 57891, 549, 57892, 550, 57893, 551, 57894, 552,
	57895, 553, 57896, 554, 57897, 555, 57898, 556, 57899, 557,
	57900, 558, 57901, 559, 57902, 560, 57903, 565, 57904, 567,
	57905, 577, 57906, 583, 0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := sqlPact[state]
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && sqlChk[sqlAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || sqlExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := sqlExca[i]
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = sqlTok1[0]
		goto out
	}
	if char < len(sqlTok1) {
		token = sqlTok1[char]
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = sqlTok2[char-sqlPrivate]
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = sqlTok3[i+0]
		if token == char {
			token = sqlTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = sqlTok2[1] /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = sqlPact[sqlstate]
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = sqlAct[sqln]
	if sqlChk[sqln] == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = sqlDef[sqlstate]
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && sqlExca[xi+1] == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = sqlExca[xi+0]
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = sqlExca[xi+1]
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = sqlPact[sqlS[sqlp].yys] + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = sqlAct[sqln] /* simulate a shift of "error" */
					if sqlChk[sqlstate] == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= sqlR2[sqln]
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = sqlR1[sqln]
	sqlg := sqlPgo[sqln]
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = sqlAct[sqlg]
	} else {
		sqlstate = sqlAct[sqlj]
		if sqlChk[sqlstate] != -sqln {
			sqlstate = sqlAct[sqlg]
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1302
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1307
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1309
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 9:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1312
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 11:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1313
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 13:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1314
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 15:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1315
		{
			return helpWith(sqllex, "GRANT")
		}
	case 17:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1316
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 19:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1317
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 21:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1318
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 23:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1319
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 25:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1320
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 27:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1321
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 29:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1322
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 35:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1329
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 38:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1338
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 40:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1340
		{
			return helpWith(sqllex, "ALTER")
		}
	case 42:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1343
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 44:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1344
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 46:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1345
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 48:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1346
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 50:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1347
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 52:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1348
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 54:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1349
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 56:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1350
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 58:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1351
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 70:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1410
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 72:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1436
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 76:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1450
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 81:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1468
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 82:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1472
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 83:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1476
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 92:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1502
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 93:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1506
		{
			sqlVAL.union.val = &tree.AlterDatabaseOwner{Name: tree.Name(sqlDollar[3].str), Owner: sqlDollar[6].union.user()}
		}
	case 94:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1512
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 95:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1521
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 96:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1530
		{
			sqlVAL.union.val = &tree.AlterDatabaseSurvivalGoal{
				Name:         tree.Name(sqlDollar[3].str),
				SurvivalGoal: sqlDollar[4].union.survivalGoal(),
			}
		}
	case 97:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1539
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[4].str),
			}
		}
	case 98:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1546
		{

			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[5].str),
			}
		}
	case 100:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1571
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 109:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1603
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 110:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1607
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 111:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1611
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 112:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1617
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 113:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1621
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 114:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1627
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 115:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1636
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 116:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1647
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 117:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1651
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 118:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1657
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 119:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1665
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 120:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1675
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 121:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1679
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 124:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1689
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[5].union.slct(),
			}
		}
	case 125:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1700
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[5].union.slct()}
		}
	case 126:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1707
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:  tree.TableIndexName{Table: name},
				Rows:          sqlDollar[6].union.slct(),
				RelocateLease: true,
			}
		}
	case 127:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1719
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateLease: true}
		}
	case 128:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1726
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 129:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1734
		{

			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: sqlDollar[4].union.expr()}
		}
	case 130:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1739
		{
			sqlVAL.union.val = &tree.SetZoneConfig{Options: sqlDollar[4].union.kvOptions()}
		}
	case 131:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1743
		{

			sqlVAL.union.val = &tree.SetZoneConfig{SetDefault: true}
		}
	case 132:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1748
		{
			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: tree.DNull}
		}
	case 133:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1754
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 134:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1762
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 135:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1773
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 136:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1783
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 137:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1793
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 138:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1802
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 139:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1813
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 140:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1819
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 141:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1827
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 142:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1831
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 143:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1835
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 144:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1839
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 145:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1845
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 146:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1850
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 147:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1861
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 148:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1865
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 149:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1871
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 150:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1875
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 151:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1882
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 152:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1887
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 153:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1892
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 154:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1897
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 155:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1902
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 156:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1907
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 157:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1912
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 158:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1917
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 159:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1922
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 160:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1927
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 161:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1932
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 162:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1941
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 163:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1953
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 164:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1963
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 165:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1970
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 166:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1973
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table inherits")
		}
	case 167:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1979
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table no inherits")
		}
	case 168:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:1986
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:    sqlDollar[7].union.idxElems(),
				Sharded:    sqlDollar[9].union.shardedIndexDef(),
				Interleave: sqlDollar[10].union.interleave(),
			}
		}
	case 169:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1994
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 170:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2001
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 171:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2010
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 172:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2019
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 173:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2024
		{
			sqlVAL.union.val = &tree.AlterTablePartitionByTable{
				PartitionByTable: sqlDollar[1].union.partitionByTable(),
			}
		}
	case 174:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2031
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 175:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2039
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 176:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2040
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 177:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2044
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 178:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2048
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 179:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2054
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionByIndex: sqlDollar[1].union.partitionByIndex(),
			}
		}
	case 180:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2062
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 181:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2066
		{
			sqlVAL.union.val = nil
		}
	case 182:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2072
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 183:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2076
		{
			sqlVAL.union.val = nil
		}
	case 184:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2083
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 185:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2087
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 186:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2091
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 187:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2097
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 188:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2101
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 189:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2126
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[6].str),
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 190:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2137
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[9].str),
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 191:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2148
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeDropValue{
					Val: tree.EnumValue(sqlDollar[6].str),
				},
			}
		}
	case 192:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2157
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: tree.EnumValue(sqlDollar[6].str),
					NewVal: tree.EnumValue(sqlDollar[8].str),
				},
			}
		}
	case 193:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2167
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 194:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2176
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 195:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2185
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeOwner{
					Owner: sqlDollar[6].union.user(),
				},
			}
		}
	case 196:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2194
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 197:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2198
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 198:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2201
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 199:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2205
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 200:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2212
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 201:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2219
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 202:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2225
		{
			sqlVAL.union.val = []security.SQLUsername{sqlDollar[1].union.user()}
		}
	case 203:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2229
		{
			sqlVAL.union.val = append(sqlDollar[1].union.users(), sqlDollar[3].union.user())
		}
	case 204:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2234
		{
			sqlVAL.union.val = sqlDollar[1].union.user()
		}
	case 205:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2236
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 206:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2241
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 207:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2248
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 208:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2256
		{

			sqlVAL.union.val, _ = security.MakeSQLUsernameFromUserInput(sqlDollar[1].str, security.UsernameValidation)
		}
	case 216:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2280
		{
			sqlVAL.union.val = &tree.RefreshMaterializedView{
				Name:              sqlDollar[5].union.unresolvedObjectName(),
				Concurrently:      sqlDollar[4].union.bool(),
				RefreshDataOption: sqlDollar[6].union.refreshDataOption(),
			}
		}
	case 217:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2287
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 218:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2291
		{
			sqlVAL.union.val = tree.RefreshDataWithData
		}
	case 219:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2295
		{
			sqlVAL.union.val = tree.RefreshDataClear
		}
	case 220:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2299
		{
			sqlVAL.union.val = tree.RefreshDataDefault
		}
	case 221:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2328
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: false,
				Subdir:         sqlDollar[4].union.expr(),
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 222:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2340
		{
			sqlVAL.union.val = &tree.Backup{
				Targets: sqlDollar[2].union.targetListPtr(),
				To:      sqlDollar[4].union.stringOrPlaceholderOptList(),
				Nested:  true,
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *sqlDollar[6].union.backupOptions(),
			}
		}
	case 223:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2350
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: true,
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 224:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2361
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:         sqlDollar[2].union.targetListPtr(),
				To:              sqlDollar[4].union.stringOrPlaceholderOptList(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}
		}
	case 225:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2370
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 226:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2374
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 227:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2378
		{
			t := sqlDollar[1].union.targetList()
			sqlVAL.union.val = &t
		}
	case 228:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2386
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 229:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2390
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 230:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2394
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 231:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2401
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 232:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2405
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 233:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2414
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 234:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2418
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: true}
		}
	case 235:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2422
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: true}
		}
	case 236:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2426
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 237:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2506
		{
			sqlVAL.union.val = &tree.ScheduledBackup{
				ScheduleLabel:   sqlDollar[3].union.expr(),
				Recurrence:      sqlDollar[10].union.expr(),
				FullBackup:      sqlDollar[11].union.fullBackupClause(),
				To:              sqlDollar[8].union.stringOrPlaceholderOptList(),
				Targets:         sqlDollar[6].union.targetListPtr(),
				BackupOptions:   *(sqlDollar[9].union.backupOptions()),
				ScheduleOptions: sqlDollar[12].union.kvOptions(),
			}
		}
	case 238:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2517
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 240:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2522
		{
			sqlVAL.union.val = nil
		}
	case 241:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2530
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 242:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2534
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 243:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2544
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 244:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2552
		{
			sqlVAL.union.val = &tree.FullBackupClause{Recurrence: sqlDollar[3].union.expr()}
		}
	case 245:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2556
		{
			sqlVAL.union.val = &tree.FullBackupClause{AlwaysFull: true}
		}
	case 246:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2560
		{
			sqlVAL.union.val = (*tree.FullBackupClause)(nil)
		}
	case 247:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2566
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 248:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2570
		{
			sqlVAL.union.val = sqlDollar[5].union.kvOptions()
		}
	case 249:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2574
		{
			sqlVAL.union.val = nil
		}
	case 250:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2605
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				From:               sqlDollar[3].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[4].union.asOfClause(),
				Options:            *(sqlDollar[5].union.restoreOptions()),
			}
		}
	case 251:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2614
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				Subdir:             sqlDollar[3].union.expr(),
				From:               sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[6].union.asOfClause(),
				Options:            *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 252:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2624
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[4].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *(sqlDollar[6].union.restoreOptions()),
			}
		}
	case 253:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2633
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				Subdir:  sqlDollar[4].union.expr(),
				From:    sqlDollar[6].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[7].union.asOfClause(),
				Options: *(sqlDollar[8].union.restoreOptions()),
			}
		}
	case 254:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2643
		{
			sqlVAL.union.val = &tree.StreamIngestion{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[7].union.stringOrPlaceholderOptList(),
			}
		}
	case 255:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2649
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 256:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2653
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList{sqlDollar[1].union.expr()}
		}
	case 257:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2657
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList(sqlDollar[2].union.exprs())
		}
	case 258:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2663
		{
			sqlVAL.union.val = []tree.StringOrPlaceholderOptList{sqlDollar[1].union.stringOrPlaceholderOptList()}
		}
	case 259:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2667
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listOfStringOrPlaceholderOptList(), sqlDollar[3].union.stringOrPlaceholderOptList())
		}
	case 260:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2674
		{
			sqlVAL.union.val = sqlDollar[2].union.restoreOptions()
		}
	case 261:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2678
		{
			sqlVAL.union.val = sqlDollar[4].union.restoreOptions()
		}
	case 262:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2682
		{
			sqlVAL.union.val = &tree.RestoreOptions{}
		}
	case 263:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2689
		{
			sqlVAL.union.val = sqlDollar[1].union.restoreOptions()
		}
	case 264:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2693
		{
			if err := sqlDollar[1].union.restoreOptions().CombineWith(sqlDollar[3].union.restoreOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 265:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2702
		{
			sqlVAL.union.val = &tree.RestoreOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 266:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2706
		{
			sqlVAL.union.val = &tree.RestoreOptions{DecryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 267:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2710
		{
			sqlVAL.union.val = &tree.RestoreOptions{IntoDB: sqlDollar[3].union.expr()}
		}
	case 268:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2714
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingFKs: true}
		}
	case 269:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2718
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequences: true}
		}
	case 270:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2722
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequenceOwners: true}
		}
	case 271:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2726
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingViews: true}
		}
	case 272:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2730
		{
			sqlVAL.union.val = &tree.RestoreOptions{Detached: true}
		}
	case 273:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2736
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 274:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2742
		{
			return unimplemented(sqllex, "alter function")
		}
	case 275:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2780
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 276:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2785
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 277:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2789
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 278:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2795
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 279:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2800
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateFile: sqlDollar[6].union.expr(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 280:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2805
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateDefs: sqlDollar[5].union.tblDefs(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 281:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2810
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 282:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2815
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 283:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2819
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 284:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2835
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 285:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2838
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 286:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2842
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 287:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2846
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 288:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2854
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 289:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2858
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 290:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2864
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 291:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2868
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 292:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2874
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 293:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2878
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 294:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2882
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 295:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2886
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 296:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2892
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 297:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2896
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 298:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2902
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 299:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2906
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 300:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2910
		{
			sqlVAL.union.val = nil
		}
	case 301:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2922
		{

			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			if sqlDollar[7].union.expr() != nil {
				return unimplementedWithIssue(sqllex, 54580)
			}
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: *sqlDollar[6].union.copyOptions(),
			}
		}
	case 302:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2938
		{
			sqlVAL.union.val = sqlDollar[2].union.copyOptions()
		}
	case 303:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2942
		{
			sqlVAL.union.val = &tree.CopyOptions{}
		}
	case 304:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2948
		{
			sqlVAL.union.val = sqlDollar[1].union.copyOptions()
		}
	case 305:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2952
		{
			if err := sqlDollar[1].union.copyOptions().CombineWith(sqlDollar[2].union.copyOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 306:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2960
		{
			sqlVAL.union.val = &tree.CopyOptions{Destination: sqlDollar[3].union.expr()}
		}
	case 307:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2964
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatBinary}
		}
	case 308:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2968
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatCSV}
		}
	case 309:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2972
		{
			sqlVAL.union.val = &tree.CopyOptions{Delimiter: sqlDollar[2].union.expr()}
		}
	case 310:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2976
		{
			sqlVAL.union.val = &tree.CopyOptions{Null: sqlDollar[2].union.expr()}
		}
	case 312:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2984
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 314:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2985
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 316:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2986
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 317:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2987
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 318:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2997
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 319:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3005
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 320:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3007
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 321:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3011
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 322:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3014
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 323:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3024
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 324:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3033
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 325:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3041
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 326:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3043
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 327:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3047
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 328:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3050
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 329:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3060
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 330:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3069
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 331:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3077
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 332:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3079
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 333:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3083
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 334:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3086
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 335:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3090
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 336:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3094
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 337:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3098
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 338:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3111
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 339:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3114
		{
			return unimplemented(sqllex, "comment on extension")
		}
	case 340:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3118
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 341:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3123
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 343:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3135
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 346:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3137
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 348:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3138
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 352:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3141
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 353:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3142
		{
		}
	case 354:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3143
		{
			return helpWith(sqllex, "CREATE")
		}
	case 355:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3150
		{
			sqlVAL.union.val = &tree.CreateExtension{IfNotExists: true, Name: sqlDollar[6].str}
		}
	case 356:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3153
		{
			sqlVAL.union.val = &tree.CreateExtension{Name: sqlDollar[3].str}
		}
	case 357:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3156
		{
			return unimplemented(sqllex, "create extension if not exists with")
		}
	case 358:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3157
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 359:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3160
		{
			return unimplemented(sqllex, "create access method")
		}
	case 360:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3161
		{
			return unimplemented(sqllex, "create aggregate")
		}
	case 361:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3162
		{
			return unimplemented(sqllex, "create cast")
		}
	case 362:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3163
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 363:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3164
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 364:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3165
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 365:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3166
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 366:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3167
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 367:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3168
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 368:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3169
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 369:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3170
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 370:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3171
		{
			return unimplemented(sqllex, "create operator")
		}
	case 371:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3172
		{
			return unimplemented(sqllex, "create publication")
		}
	case 372:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3173
		{
			return unimplemented(sqllex, "create rule")
		}
	case 373:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3174
		{
			return unimplemented(sqllex, "create server")
		}
	case 374:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3175
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 375:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3176
		{
			return unimplementedWithIssueDetail(sqllex, 54113, "create tablespace")
		}
	case 376:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3177
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 377:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3178
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create trigger")
		}
	case 378:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3181
		{
		}
	case 379:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3182
		{
		}
	case 380:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3185
		{
		}
	case 381:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3186
		{
		}
	case 382:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3189
		{
		}
	case 383:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3190
		{
		}
	case 384:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3193
		{
			return unimplemented(sqllex, "drop access method")
		}
	case 385:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3194
		{
			return unimplemented(sqllex, "drop aggregate")
		}
	case 386:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3195
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 387:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3196
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 388:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3197
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 389:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3198
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 390:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3199
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[5].str)
		}
	case 391:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3200
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[3].str)
		}
	case 392:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3201
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 393:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3202
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 394:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3203
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 395:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3204
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 396:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3205
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 397:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3206
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 398:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3207
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 399:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3208
		{
			return unimplemented(sqllex, "drop server")
		}
	case 400:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3209
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 401:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3210
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 402:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3211
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 404:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3214
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 406:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3215
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 408:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3216
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 410:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3217
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 412:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3218
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 413:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3220
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 415:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3221
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 417:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3222
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 419:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3223
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 420:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3233
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 421:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3241
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 422:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3245
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 423:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3249
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 424:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3255
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 425:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3259
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 426:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3268
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 427:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3275
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 428:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3281
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 429:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3287
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 430:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3291
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 431:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3302
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 432:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3314
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 433:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3329
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 434:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3337
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 435:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3347
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[1].union.tablePatterns()}
		}
	case 436:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3351
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 437:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3357
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()}
		}
	case 438:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3361
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedObjectName().ToUnresolvedName())
		}
	case 439:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3368
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 440:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3372
		{

			sqlVAL.union.val = nil
		}
	case 441:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3389
		{
			sqlVAL.union.val = &tree.ReplicationStream{
				Targets: sqlDollar[5].union.targetList(),
				SinkURI: sqlDollar[6].union.expr(),
				Options: *sqlDollar[7].union.replicationOptions(),
			}
		}
	case 442:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3400
		{
			sqlVAL.union.val = sqlDollar[2].union.replicationOptions()
		}
	case 443:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3404
		{
			sqlVAL.union.val = sqlDollar[4].union.replicationOptions()
		}
	case 444:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3408
		{
			sqlVAL.union.val = &tree.ReplicationOptions{}
		}
	case 445:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3415
		{
			sqlVAL.union.val = sqlDollar[1].union.replicationOptions()
		}
	case 446:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3419
		{
			if err := sqlDollar[1].union.replicationOptions().CombineWith(sqlDollar[3].union.replicationOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 447:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3428
		{
			sqlVAL.union.val = &tree.ReplicationOptions{Cursor: sqlDollar[3].union.expr()}
		}
	case 448:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3432
		{
			sqlVAL.union.val = &tree.ReplicationOptions{Detached: true}
		}
	case 449:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3445
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 450:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3455
		{
			return helpWith(sqllex, "DELETE")
		}
	case 451:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3458
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 452:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3459
		{
		}
	case 453:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3467
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 454:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3470
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 455:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3471
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 456:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3472
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 457:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3473
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 458:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3474
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 461:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3483
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 463:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3484
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 464:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3485
		{
		}
	case 465:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3486
		{
			return helpWith(sqllex, "DROP")
		}
	case 467:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3489
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 469:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3490
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 471:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3491
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 473:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3492
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 475:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3493
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 477:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3494
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 479:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3495
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 480:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3503
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 481:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3507
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 482:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3511
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[4].union.tableNames(),
				IfExists:       false,
				DropBehavior:   sqlDollar[5].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 483:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3520
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[6].union.tableNames(),
				IfExists:       true,
				DropBehavior:   sqlDollar[7].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 484:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3528
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 485:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3536
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 486:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3540
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 487:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3543
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 488:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3551
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 489:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3555
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 490:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3558
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 491:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3566
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 492:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3575
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 493:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3583
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 494:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3591
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 495:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3599
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 496:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3606
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 497:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3613
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 498:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3621
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 499:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3628
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 500:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3632
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[1].union.unresolvedObjectNames()}
		}
	case 501:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3638
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 502:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3642
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 503:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3651
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[3].union.objectNamePrefixList(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 504:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3659
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[5].union.objectNamePrefixList(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 505:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3666
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 506:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3674
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.exprs(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 507:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3678
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.exprs(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 508:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3681
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 509:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3685
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 510:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3690
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 511:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3703
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 512:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3708
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 513:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3710
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 514:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3715
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 515:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3719
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 516:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3742
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 517:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3749
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 518:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3751
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 519:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3759
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 520:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3767
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 521:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3775
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 522:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3783
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 523:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3794
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 526:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3798
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 530:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3801
		{
			return helpWith(sqllex, "DELETE")
		}
	case 533:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3803
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 535:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3804
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 537:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3805
		{
			return helpWith(sqllex, "INSERT")
		}
	case 541:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3808
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 544:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3810
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 546:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3813
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 550:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3818
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 552:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3819
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 554:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3820
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 556:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3825
		{
			return helpWith(sqllex, "DELETE")
		}
	case 558:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3826
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 560:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3827
		{
			return helpWith(sqllex, "INSERT")
		}
	case 561:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3829
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 564:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3833
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 566:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3834
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 567:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3838
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 568:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3842
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 569:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3852
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 570:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3860
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 571:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3868
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 572:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3872
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 573:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3876
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 574:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3886
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 575:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3893
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 576:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3901
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 577:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3905
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 578:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3909
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 579:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3919
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 580:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3923
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 581:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3927
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 582:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3931
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 583:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3934
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 584:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3956
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 585:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3960
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 586:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3964
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: true}
		}
	case 587:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3968
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 588:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3972
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees: sqlDollar[7].union.nameList(),
			}
		}
	case 589:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3982
		{
			return unimplemented(sqllex, "grant privileges on sequence")
		}
	case 590:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3985
		{
			return helpWith(sqllex, "GRANT")
		}
	case 591:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4007
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 592:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4011
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 593:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4015
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.nameList(), AdminOption: true}
		}
	case 594:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4019
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 595:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4023
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees: sqlDollar[7].union.nameList(),
			}
		}
	case 596:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4033
		{
			return unimplemented(sqllex, "revoke privileges on sequence")
		}
	case 597:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4036
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 598:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4041
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 599:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4045
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 600:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4055
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 601:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4059
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 607:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4073
		{
			return helpWith(sqllex, "RESET")
		}
	case 609:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4074
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 610:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4082
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 611:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4086
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 612:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4089
		{
			return helpWith(sqllex, "RESET")
		}
	case 613:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4097
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 614:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4100
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 615:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4111
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 616:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4114
		{
			return helpWith(sqllex, "USE")
		}
	case 618:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4118
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 619:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4119
		{
		}
	case 620:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4120
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 621:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4121
		{
			return unimplementedWithIssue(sqllex, 32562)
		}
	case 623:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4125
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 625:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4126
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 627:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4127
		{
			return helpWith(sqllex, "USE")
		}
	case 630:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4143
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 631:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4158
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 632:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4161
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 633:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4179
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 634:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4187
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 635:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4191
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 636:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4195
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 637:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4201
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 638:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4205
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 639:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4211
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 640:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4215
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 641:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4219
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 642:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4223
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 643:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4227
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 644:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4238
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 645:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4241
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 648:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4251
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 649:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4267
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 650:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4271
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 651:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4276
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 652:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4295
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 653:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4298
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 654:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4300
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 655:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4303
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 656:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4307
		{

			varName := sqlDollar[1].union.strs()
			if len(varName) == 1 && varName[0] == "tracing" {
				sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[3].union.exprs()}
			} else {
				sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
			}
		}
	case 658:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4326
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 659:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4333
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 660:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4338
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 661:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4343
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 663:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4348
		{
			return unimplemented(sqllex, "set from current")
		}
	case 664:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4349
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 665:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4357
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 666:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4362
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 667:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4369
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 668:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4373
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 669:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4379
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 670:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4383
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 672:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4390
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 675:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4411
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 676:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4415
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 677:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4421
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 678:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4425
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 679:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4429
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 680:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4433
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 681:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4437
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 682:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4443
		{
			sqlVAL.union.val = tree.Low
		}
	case 683:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4447
		{
			sqlVAL.union.val = tree.Normal
		}
	case 684:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4451
		{
			sqlVAL.union.val = tree.High
		}
	case 685:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4462
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 686:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4466
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 687:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4470
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 689:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4475
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 690:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4479
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 692:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4494
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 694:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4495
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 696:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4496
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 698:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4497
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 700:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4498
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 702:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4499
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 704:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4500
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 706:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4501
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 709:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4503
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 711:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4504
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 713:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4505
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 715:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4506
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 717:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4507
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 720:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4509
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 722:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4510
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 724:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4511
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 727:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4513
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 730:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4515
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 732:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4516
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 734:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4517
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 736:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4518
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 738:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4519
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 740:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4520
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 742:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4521
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 744:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4522
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 746:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4523
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 748:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4524
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 750:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4525
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 752:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4526
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 754:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4527
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 756:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4529
		{
			return helpWith(sqllex, "SHOW")
		}
	case 758:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4535
		{
		}
	case 759:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4536
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 760:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4539
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 761:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4543
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 762:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4548
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 763:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4553
		{

			return purposelyUnimplemented(sqllex, "reindex schema", "CockroachDB does not require reindexing.")
		}
	case 764:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4558
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 765:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4563
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 766:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4573
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 767:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4574
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 768:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4575
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 772:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4586
		{
			sqlVAL.str = "client_encoding"
		}
	case 774:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4589
		{
			sqlVAL.str = "timezone"
		}
	case 775:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4590
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 776:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4604
		{
			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 777:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4608
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[7].union.unresolvedObjectName(), UsingJSON: true}
		}
	case 778:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4612
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 779:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4623
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 780:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4631
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 781:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4639
		{
			sqlVAL.union.val = &tree.ShowBackup{
				InCollection: sqlDollar[4].union.expr(),
			}
		}
	case 782:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4645
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 783:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4653
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:      tree.BackupDefaultDetails,
				Path:         sqlDollar[3].union.expr(),
				InCollection: sqlDollar[5].union.expr(),
				Options:      sqlDollar[6].union.kvOptions(),
			}
		}
	case 784:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4662
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:              tree.BackupDefaultDetails,
				ShouldIncludeSchemas: true,
				Path:                 sqlDollar[4].union.expr(),
				Options:              sqlDollar[5].union.kvOptions(),
			}
		}
	case 785:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4671
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 786:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4680
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 787:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4688
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 788:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4698
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 789:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4702
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 790:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4705
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 791:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4707
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 792:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4710
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 793:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4712
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 794:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4716
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 795:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4719
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 796:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4727
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 797:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4730
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 798:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4738
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 799:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4742
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 800:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4746
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 801:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4750
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 802:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4753
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 803:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4761
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 804:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4764
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 805:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4771
		{
			sqlVAL.union.val = &tree.ShowEnums{}
		}
	case 806:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4775
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
			}
		}
	case 807:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4785
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
			}
		}
	case 808:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4794
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 809:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4801
		{
			sqlVAL.union.val = &tree.ShowTypes{}
		}
	case 810:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4804
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 811:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4817
		{
			lst := sqlDollar[3].union.targetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.nameList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.nameList()}
			}
		}
	case 812:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4825
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 813:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4833
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 814:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4836
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 815:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4838
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 816:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4842
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 817:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4846
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 818:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4849
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 819:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4851
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 820:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4855
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 821:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4858
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 822:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4866
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 823:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4869
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 824:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4871
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 825:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4874
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 826:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4882
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 827:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4885
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 828:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4887
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 829:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4890
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 830:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4894
		{
			sqlVAL.union.val = true
		}
	case 831:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4896
		{
			sqlVAL.union.val = true
		}
	case 832:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4898
		{
			sqlVAL.union.val = false
		}
	case 835:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4915
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 836:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4919
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 837:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4922
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 838:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4923
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 839:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4925
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 840:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4929
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 841:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4933
		{
			sqlVAL.union.val = &tree.ShowJobs{Schedules: sqlDollar[3].union.slct()}
		}
	case 842:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4936
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 843:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4938
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 844:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4946
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 845:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4954
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 846:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4964
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ExecutorType:   sqlDollar[3].union.executorType(),
			}
		}
	case 847:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4970
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 848:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4972
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: sqlDollar[2].union.scheduleState(),
				ExecutorType:   sqlDollar[4].union.executorType(),
			}
		}
	case 849:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4978
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 850:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4980
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ScheduleID:     sqlDollar[3].union.expr(),
			}
		}
	case 851:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4986
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 852:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4990
		{
			sqlVAL.union.val = tree.ActiveSchedules
		}
	case 853:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4994
		{
			sqlVAL.union.val = tree.PausedSchedules
		}
	case 854:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5000
		{
			sqlVAL.union.val = tree.InvalidExecutor
		}
	case 855:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5004
		{
			sqlVAL.union.val = tree.ScheduledBackupExecutor
		}
	case 856:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5015
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 857:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5018
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 858:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5020
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 859:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5023
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 860:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5025
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 861:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5029
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 862:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5032
		{
			sqlVAL.union.val = true
		}
	case 863:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5033
		{
			sqlVAL.union.val = false
		}
	case 864:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5041
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 865:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5044
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 866:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5046
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 867:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5049
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 868:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5057
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 869:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5067
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 870:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5077
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 871:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5080
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 872:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5087
		{
			sqlVAL.union.val = &tree.ShowTransactions{Cluster: sqlDollar[2].union.bool()}
		}
	case 873:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5090
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 874:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5092
		{
			sqlVAL.union.val = &tree.ShowTransactions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 875:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5095
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 876:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5098
		{
			sqlVAL.union.val = true
		}
	case 877:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5099
		{
			sqlVAL.union.val = false
		}
	case 878:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5106
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 879:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5110
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 880:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5113
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 881:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5120
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 882:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5124
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 883:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5127
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 884:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5134
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 885:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5138
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 886:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5142
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{}
		}
	case 887:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5152
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 888:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5155
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 889:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5163
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 890:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5168
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 891:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5173
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 892:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5177
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 893:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5187
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 894:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5191
		{

			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 895:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5196
		{
			sqlVAL.union.val = &tree.ShowCreateAllTables{}
		}
	case 896:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5199
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 900:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5212
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 901:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5215
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 902:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5223
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 903:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5226
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 904:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5230
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 905:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5234
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 906:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5238
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 907:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5246
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 908:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5254
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 909:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5261
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 910:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5268
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 911:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5272
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 913:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5278
		{
		}
	case 914:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5287
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 915:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5295
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 916:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5301
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 917:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5310
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 918:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5315
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 919:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5319
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 920:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5322
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 921:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5331
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{}
		}
	case 922:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5335
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{
				DatabaseName: tree.Name(sqlDollar[6].str),
			}
		}
	case 923:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5351
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromCluster,
			}
		}
	case 924:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5357
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
			}
		}
	case 925:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5363
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromAllDatabases,
			}
		}
	case 926:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5369
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
				DatabaseName:    tree.Name(sqlDollar[5].str),
			}
		}
	case 927:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5376
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDefault,
			}
		}
	case 928:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5381
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 929:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5385
		{
			sqlVAL.union.val = &tree.ShowVar{Name: "locality"}
		}
	case 930:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5391
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 931:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5398
		{
			tmp := sqlDollar[2].union.targetList()
			sqlVAL.union.val = &tmp
		}
	case 932:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5403
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 933:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5523
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 934:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5527
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 935:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5531
		{

			sqlVAL.union.val = tree.TargetList{
				Tables:   tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 936:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5570
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}
		}
	case 937:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5574
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.TargetList{Tables: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}
		}
	case 938:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5579
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 939:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5583
		{
			tenID := uint64(sqlDollar[2].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TargetList{Tenant: roachpb.MakeTenantID(tenID)}
		}
	case 940:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5591
		{
			sqlVAL.union.val = tree.TargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 941:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5600
		{
			sqlVAL.union.val = tree.TargetList{ForRoles: true, Roles: sqlDollar[2].union.nameList()}
		}
	case 942:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5604
		{
			sqlVAL.union.val = tree.TargetList{Schemas: sqlDollar[2].union.objectNamePrefixList()}
		}
	case 943:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5608
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[2].union.unresolvedObjectNames()}
		}
	case 945:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5615
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 946:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5619
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 948:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5632
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 950:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5633
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 951:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5634
		{
			return helpWith(sqllex, "PAUSE")
		}
	case 953:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5644
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 955:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5645
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 956:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5646
		{
			return helpWith(sqllex, "RESUME")
		}
	case 957:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5656
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 958:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5664
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 959:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5666
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 960:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5670
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 961:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5673
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 962:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5678
		{
			sqlVAL.union.val = sqlDollar[3].union.slct()
		}
	case 963:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5682
		{
			sqlVAL.union.val = &tree.Select{
				Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
			}
		}
	case 964:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5697
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseSchedule,
			}
		}
	case 965:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5705
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 966:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5707
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.PauseSchedule,
			}
		}
	case 967:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5713
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 968:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5721
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
			}
		}
	case 969:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5727
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
			}
		}
	case 970:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5734
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:   sqlDollar[3].union.objectNamePrefix(),
				AuthRole: sqlDollar[5].union.user(),
			}
		}
	case 971:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5741
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
				AuthRole:    sqlDollar[8].union.user(),
			}
		}
	case 972:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5748
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 973:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5759
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 974:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5768
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaOwner{
					Owner: sqlDollar[6].union.user(),
				},
			}
		}
	case 975:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5776
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 976:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:5815
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      false,
				Interleave:       sqlDollar[9].union.interleave(),
				Defs:             sqlDollar[6].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[10].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[11].union.storageParams(),
				OnCommit:         sqlDollar[12].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[13].union.locality(),
			}
		}
	case 977:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:5831
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      true,
				Interleave:       sqlDollar[12].union.interleave(),
				Defs:             sqlDollar[9].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[13].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[14].union.storageParams(),
				OnCommit:         sqlDollar[15].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[16].union.locality(),
			}
		}
	case 978:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5849
		{
			sqlVAL.union.val = sqlDollar[1].union.locality()
		}
	case 979:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5853
		{
			sqlVAL.union.val = (*tree.Locality)(nil)
		}
	case 981:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5860
		{

			sqlVAL.union.val = nil
		}
	case 982:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5866
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 983:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5872
		{
			sqlVAL.str = ""
		}
	case 984:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5876
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "create table inherits")
		}
	case 985:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5882
		{
			sqlVAL.union.val = nil
		}
	case 986:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5886
		{
			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 987:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5891
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 988:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5895
		{
			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 989:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5899
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 990:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5903
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 991:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5909
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 992:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5913
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 993:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5919
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 994:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5923
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 995:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5929
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    nil,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 996:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:5943
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    nil,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 997:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5958
		{
		}
	case 998:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5959
		{
		}
	case 999:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5960
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 1000:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5978
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5979
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1002:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5980
		{
			sqlVAL.union.val = tree.PersistencePermanent
		}
	case 1004:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5984
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5985
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5986
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1007:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5987
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5988
		{
			sqlVAL.union.val = tree.PersistenceUnlogged
		}
	case 1010:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5993
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5999
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6003
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1013:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6009
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6015
		{
			def := sqlDollar[1].union.constraintDef()
			valBehavior := sqlDollar[2].union.validationBehavior()
			if u, ok := def.(*tree.UniqueConstraintTableDef); ok && valBehavior == tree.ValidationSkip {
				typ := "PRIMARY KEY"
				if !u.PrimaryKey {
					typ = "UNIQUE"
				}
				return purposelyUnimplemented(sqllex, "table constraint", typ+" constraints cannot be marked NOT VALID")
			}
			sqlVAL.union.val = def
		}
	case 1017:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6028
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 1018:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6037
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 1019:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6041
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6047
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6052
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6053
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6054
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6055
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6056
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6057
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6058
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6059
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6060
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6065
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.InterleaveDef{
				Parent:       name,
				Fields:       sqlDollar[6].union.nameList(),
				DropBehavior: sqlDollar[8].union.dropBehavior(),
			}
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6074
		{
			sqlVAL.union.val = (*tree.InterleaveDef)(nil)
		}
	case 1032:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6081
		{

			sqlVAL.union.val = tree.DropCascade
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6086
		{

			sqlVAL.union.val = tree.DropRestrict
		}
	case 1034:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6091
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6097
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6104
		{
			sqlVAL.str = ""
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6111
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6117
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1041:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6125
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1042:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6131
		{
			sqlVAL.union.val = (*tree.PartitionByIndex)(nil)
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6137
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6143
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				All:         true,
				PartitionBy: sqlDollar[4].union.partitionBy(),
			}
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6153
		{
			sqlVAL.union.val = (*tree.PartitionByTable)(nil)
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6159
		{
			sqlVAL.union.val = sqlDollar[3].union.partitionBy()
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6165
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				List:   sqlDollar[6].union.listPartitions(),
			}
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6172
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				Range:  sqlDollar[6].union.rangePartitions(),
			}
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6179
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6185
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6189
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6195
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6205
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6209
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6215
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6229
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6240
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6244
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6250
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6254
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6258
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6262
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6266
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6270
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6274
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6292
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 1068:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6296
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6300
		{
			sqlVAL.union.val = tree.HiddenConstraint{}
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6304
		{
			sqlVAL.union.val = tree.UniqueConstraint{
				WithoutIndex: sqlDollar[2].union.bool(),
			}
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6310
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6314
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:      true,
				ShardBuckets: sqlDollar[8].union.expr(),
			}
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6321
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6325
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 1075:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6329
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6339
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: false}
		}
	case 1077:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6343
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: true}
		}
	case 1078:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6347
		{
			sqllex.Error("use AS ( <expr> ) STORED")
			return 1
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6354
		{
			sqlVAL.union.val = true
		}
	case 1080:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6358
		{
			sqlVAL.union.val = false
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6364
		{
		}
	case 1082:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6365
		{
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6370
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[2].str),
				Columns:          sqlDollar[4].union.idxElems(),
				Sharded:          sqlDollar[6].union.shardedIndexDef(),
				Storing:          sqlDollar[7].union.nameList(),
				Interleave:       sqlDollar[8].union.interleave(),
				PartitionByIndex: sqlDollar[9].union.partitionByIndex(),
				StorageParams:    sqlDollar[10].union.storageParams(),
				Predicate:        sqlDollar[11].union.expr(),
			}
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:6383
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:             tree.Name(sqlDollar[3].str),
					Columns:          sqlDollar[5].union.idxElems(),
					Sharded:          sqlDollar[7].union.shardedIndexDef(),
					Storing:          sqlDollar[8].union.nameList(),
					Interleave:       sqlDollar[9].union.interleave(),
					PartitionByIndex: sqlDollar[10].union.partitionByIndex(),
					StorageParams:    sqlDollar[11].union.storageParams(),
					Predicate:        sqlDollar[12].union.expr(),
				},
			}
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6398
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[3].str),
				Columns:          sqlDollar[5].union.idxElems(),
				Inverted:         true,
				PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
				StorageParams:    sqlDollar[8].union.storageParams(),
				Predicate:        sqlDollar[9].union.expr(),
			}
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6411
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6423
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6428
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6434
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6441
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				WithoutIndex: sqlDollar[2].union.bool(),
				IndexTableDef: tree.IndexTableDef{
					Columns:          sqlDollar[4].union.idxElems(),
					Storing:          sqlDollar[6].union.nameList(),
					Interleave:       sqlDollar[7].union.interleave(),
					PartitionByIndex: sqlDollar[8].union.partitionByIndex(),
					Predicate:        sqlDollar[10].union.expr(),
				},
			}
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6454
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:    sqlDollar[4].union.idxElems(),
					Sharded:    sqlDollar[6].union.shardedIndexDef(),
					Interleave: sqlDollar[7].union.interleave(),
				},
				PrimaryKey: true,
			}
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6466
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6477
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6484
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6488
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6494
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6504
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6515
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6519
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6526
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6532
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns: sqlDollar[4].union.idxElems(),
				},
				PrimaryKey: true,
			}
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6543
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6547
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6553
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6559
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6563
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6569
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6573
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6579
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6584
		{
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6585
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6586
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6587
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6588
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6589
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6607
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6611
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6617
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[6].union.expr(),
			}
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6623
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6629
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6633
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1125:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6653
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6657
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6661
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 1128:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6665
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6674
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6678
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6682
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6686
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6690
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6696
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1135:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6702
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6710
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6714
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 1138:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6718
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6722
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6726
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6745
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:        name,
				Persistence: sqlDollar[2].union.persistence(),
				Options:     sqlDollar[5].union.seqOpts(),
			}
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6754
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
			}
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6762
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6766
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6769
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6770
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6773
		{
			return unimplementedWithIssueDetail(sqllex, 25110, sqlDollar[2].union.typeReference().SQLString())
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6774
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6776
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6777
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6778
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6788
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6791
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6793
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6795
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6797
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6798
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6800
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6801
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6803
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6805
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6813
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6816
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6820
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6824
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6834
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6838
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.expr(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6841
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6849
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6853
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.expr(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6856
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6862
		{
			sqlVAL.union.val = true
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6866
		{

			sqlVAL.union.val = true
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6871
		{
			sqlVAL.union.val = false
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6881
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6895
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Persistence: sqlDollar[4].union.persistence(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6907
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6919
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[5].union.nameList(),
				AsSource:     sqlDollar[7].union.slct(),
				Materialized: true,
			}
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6929
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[8].union.nameList(),
				AsSource:     sqlDollar[10].union.slct(),
				Materialized: true,
				IfNotExists:  true,
			}
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6939
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6943
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6947
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6951
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6955
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6959
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6963
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6967
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6971
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6975
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6979
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6983
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6987
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6991
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6995
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6999
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7003
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7007
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7011
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7020
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7024
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 1204:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7030
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7034
		{
			sqlVAL.union.val = nil
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7040
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: sqlDollar[3].union.expr()}
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7044
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: tree.DNull}
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7049
		{
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7050
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7059
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.enumValueList(),
			}
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7067
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:    sqlDollar[6].union.unresolvedObjectName(),
				Variety:     tree.Enum,
				EnumLabels:  sqlDollar[10].union.enumValueList(),
				IfNotExists: true,
			}
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7075
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 1213:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7077
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1214:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7079
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7081
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7083
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7085
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7089
		{
			sqlVAL.union.val = sqlDollar[1].union.enumValueList()
		}
	case 1219:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7093
		{
			sqlVAL.union.val = tree.EnumValueList(nil)
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7099
		{
			sqlVAL.union.val = tree.EnumValueList{tree.EnumValue(sqlDollar[1].str)}
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7103
		{
			sqlVAL.union.val = append(sqlDollar[1].union.enumValueList(), tree.EnumValue(sqlDollar[3].str))
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-17 : sqlpt+1]
//line sql-gen.y:7123
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[5].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Columns:          sqlDollar[10].union.idxElems(),
				Sharded:          sqlDollar[12].union.shardedIndexDef(),
				Storing:          sqlDollar[13].union.nameList(),
				Interleave:       sqlDollar[14].union.interleave(),
				PartitionByIndex: sqlDollar[15].union.partitionByIndex(),
				StorageParams:    sqlDollar[16].union.storageParams(),
				Predicate:        sqlDollar[17].union.expr(),
				Inverted:         sqlDollar[8].union.bool(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-20 : sqlpt+1]
//line sql-gen.y:7141
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[8].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Sharded:          sqlDollar[15].union.shardedIndexDef(),
				Storing:          sqlDollar[16].union.nameList(),
				Interleave:       sqlDollar[17].union.interleave(),
				PartitionByIndex: sqlDollar[18].union.partitionByIndex(),
				Inverted:         sqlDollar[11].union.bool(),
				StorageParams:    sqlDollar[19].union.storageParams(),
				Predicate:        sqlDollar[20].union.expr(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:7160
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[6].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				Columns:          sqlDollar[10].union.idxElems(),
				Storing:          sqlDollar[12].union.nameList(),
				Interleave:       sqlDollar[13].union.interleave(),
				PartitionByIndex: sqlDollar[14].union.partitionByIndex(),
				StorageParams:    sqlDollar[15].union.storageParams(),
				Predicate:        sqlDollar[16].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:7177
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[9].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Storing:          sqlDollar[15].union.nameList(),
				Interleave:       sqlDollar[16].union.interleave(),
				PartitionByIndex: sqlDollar[17].union.partitionByIndex(),
				StorageParams:    sqlDollar[18].union.storageParams(),
				Predicate:        sqlDollar[19].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7194
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7198
		{

			switch sqlDollar[2].str {
			case "gin", "gist":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7213
		{
			sqlVAL.union.val = false
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7219
		{
			sqlVAL.union.val = true
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7223
		{
			sqlVAL.union.val = false
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7229
		{
			sqlVAL.union.val = true
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7233
		{
			sqlVAL.union.val = false
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7239
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7243
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7252
		{
			e := sqlDollar[2].union.idxElem()
			e.Expr = sqlDollar[1].union.expr()
			sqlVAL.union.val = e
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7258
		{
			e := sqlDollar[4].union.idxElem()
			e.Expr = sqlDollar[2].union.expr()
			sqlVAL.union.val = e
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7264
		{
			e := sqlDollar[2].union.idxElem()
			e.Column = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = e
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7272
		{

			opClass := sqlDollar[1].str
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			if opClass != "" {
				if opClass == "gin_trgm_ops" || opClass == "gist_trgm_ops" {
					return unimplementedWithIssueDetail(sqllex, 41285, "index using "+opClass)
				}
				return unimplementedWithIssue(sqllex, 47420)
			}

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = tree.IndexElem{Direction: dir, NullsOrder: nullsOrder}
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7296
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1240:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7297
		{
			sqlVAL.str = ""
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7300
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7301
		{
			sqlVAL.str = ""
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7305
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7309
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7313
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7319
		{
			sqlVAL.union.val = &tree.ReparentDatabase{Name: tree.Name(sqlDollar[3].str), Parent: tree.Name(sqlDollar[9].str)}
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7325
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7331
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7337
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7345
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false,
			}
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7351
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true,
			}
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7359
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Locality: sqlDollar[5].union.locality(),
				IfExists: false,
			}
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7367
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Locality: sqlDollar[7].union.locality(),
				IfExists: true,
			}
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7377
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7383
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[6].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7390
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7396
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7402
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7408
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel:       tree.LocalityLevelRow,
				RegionalByRowColumn: tree.Name(sqlDollar[6].str),
			}
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7415
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7421
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[4].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7428
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7434
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7440
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel:       tree.LocalityLevelRow,
				RegionalByRowColumn: tree.Name(sqlDollar[7].str),
			}
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7447
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7453
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[3].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7460
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7466
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7472
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel:       tree.LocalityLevelRow,
				RegionalByRowColumn: tree.Name(sqlDollar[6].str),
			}
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7479
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7485
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[6].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7492
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7498
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7504
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel:       tree.LocalityLevelRow,
				RegionalByRowColumn: tree.Name(sqlDollar[6].str),
			}
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7513
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.user(),
				IfExists: false,
			}
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7521
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.user(),
				IfExists: true,
			}
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7531
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsView: true,
			}
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7537
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[7].str),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7547
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsView: true,
			}
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7553
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[9].str),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7565
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.user(),
				IfExists: false,
				IsView:   true,
			}
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7574
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Owner:          sqlDollar[7].union.user(),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7584
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.user(),
				IfExists: true,
				IsView:   true,
			}
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7593
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Owner:          sqlDollar[9].union.user(),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7605
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsSequence: true,
			}
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7611
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsSequence: true,
			}
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7619
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[3].union.unresolvedObjectName(),
				Owner:      sqlDollar[6].union.user(),
				IfExists:   false,
				IsSequence: true,
			}
		}
	case 1288:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7628
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[5].union.unresolvedObjectName(),
				Owner:      sqlDollar[8].union.user(),
				IfExists:   true,
				IsSequence: true,
			}
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7639
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7645
		{
			name := sqlDollar[4].union.unresolvedObjectName()
			newName := sqlDollar[7].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7657
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7663
		{
			name := sqlDollar[6].union.unresolvedObjectName()
			newName := sqlDollar[9].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7677
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7683
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7691
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7695
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7700
		{
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7701
		{
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7704
		{
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7705
		{
		}
	case 1301:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7713
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7716
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7726
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7734
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7736
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7740
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7743
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7756
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeSchedule,
			}
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7764
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7766
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.ResumeSchedule,
			}
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7772
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7785
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.DropSchedule,
			}
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7793
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7795
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.DropSchedule,
			}
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7801
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7809
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7812
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7816
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7817
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1323:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7818
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7834
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7837
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7839
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7842
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1329:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7852
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1330:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7855
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1331:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7857
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7860
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7864
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7869
		{
		}
	case 1335:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7870
		{
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7871
		{
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7881
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7885
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7888
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7891
		{
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7892
		{
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7896
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7900
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7906
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7910
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7916
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7920
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7933
		{
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7935
		{
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7939
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7944
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7948
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7952
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7956
		{
			sqlVAL.union.val = tree.TransactionModes{Deferrable: sqlDollar[1].union.deferrableMode()}
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7962
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7968
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7974
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7978
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7984
		{
			sqlVAL.union.val = tree.Deferrable
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7988
		{
			sqlVAL.union.val = tree.NotDeferrable
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:7998
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:            tree.Name(sqlDollar[3].str),
				Template:        sqlDollar[5].str,
				Encoding:        sqlDollar[6].str,
				Collate:         sqlDollar[7].str,
				CType:           sqlDollar[8].str,
				ConnectionLimit: sqlDollar[9].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[10].str),
				Regions:         sqlDollar[11].union.nameList(),
				SurvivalGoal:    sqlDollar[12].union.survivalGoal(),
			}
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:8012
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists:     true,
				Name:            tree.Name(sqlDollar[6].str),
				Template:        sqlDollar[8].str,
				Encoding:        sqlDollar[9].str,
				Collate:         sqlDollar[10].str,
				CType:           sqlDollar[11].str,
				ConnectionLimit: sqlDollar[12].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[13].str),
				Regions:         sqlDollar[14].union.nameList(),
				SurvivalGoal:    sqlDollar[15].union.survivalGoal(),
			}
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8026
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8031
		{
			sqlVAL.str = ""
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8036
		{
			sqlVAL.str = sqlDollar[4].str
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8042
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8046
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8052
		{

		}
	case 1371:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8059
		{
			sqlVAL.union.val = tree.SurvivalGoalRegionFailure
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8063
		{
			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8067
		{

			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8076
		{
			sqlVAL.union.val = tree.SurvivalGoalDefault
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8082
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8086
		{
			sqlVAL.str = ""
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8092
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8096
		{
			sqlVAL.str = ""
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8102
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1381:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8106
		{
			sqlVAL.str = ""
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8112
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8116
		{
			sqlVAL.str = ""
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8122
		{
			ret, err := sqlDollar[4].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = ret
		}
	case 1385:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8130
		{
			sqlVAL.union.val = int32(-1)
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8135
		{
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8136
		{
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8151
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8158
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8165
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8176
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8183
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8187
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8196
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8201
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8207
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8211
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8215
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8221
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8225
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8245
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8249
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:   tree.NameList(nil),
				DoNothing: true,
			}
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8256
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				DoNothing:        true,
			}
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8264
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				Exprs:            sqlDollar[10].union.updateExprs(),
				Where:            tree.NewWhere(tree.AstWhere, sqlDollar[11].union.expr()),
			}
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8272
		{
			return unimplementedWithIssue(sqllex, 28161)
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8276
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8281
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8285
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8302
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8314
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8317
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8320
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8326
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8330
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8343
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8346
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8350
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8361
		{
			sqlVAL.union.val = &tree.ReassignOwnedBy{
				OldRoles: sqlDollar[4].union.users(),
				NewRole:  sqlDollar[6].union.user(),
			}
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8367
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8376
		{
			sqlVAL.union.val = &tree.DropOwnedBy{
				Roles:        sqlDollar[4].union.users(),
				DropBehavior: sqlDollar[5].union.dropBehavior(),
			}
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8382
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8423
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1427:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8429
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8433
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8448
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8452
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8456
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8460
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8464
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8468
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8472
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8476
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1437:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8481
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8482
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1439:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8485
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8486
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8490
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8494
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8500
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8509
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8510
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8511
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8512
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8515
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8516
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8519
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8520
		{
			sqlVAL.union.val = tree.LockWaitSkip
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8521
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8526
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8561
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8562
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8563
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8585
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1464:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8598
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8612
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1466:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8624
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1467:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8628
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1468:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8637
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1469:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8646
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1470:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8661
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8668
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1472:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8680
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1473:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8684
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8689
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8695
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8699
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8705
		{
			sqlVAL.union.val = true
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8709
		{
			sqlVAL.union.val = false
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8715
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8725
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8737
		{
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8738
		{
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8742
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8746
		{
			sqlVAL.union.val = nil
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8751
		{
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8752
		{
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8756
		{
			sqlVAL.union.val = true
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8760
		{
			sqlVAL.union.val = false
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8764
		{
			sqlVAL.union.val = false
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8770
		{
			sqlVAL.union.val = true
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8776
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8781
		{
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8782
		{
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8785
		{
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8786
		{
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8790
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1497:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8794
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8800
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8806
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8810
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8817
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8821
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8827
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8848
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8853
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8865
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8869
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8873
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8882
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8891
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8902
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8903
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8907
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8911
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8915
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1519:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8929
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8933
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1521:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8941
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1522:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8948
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8970
		{
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8971
		{
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8974
		{
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8975
		{
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8992
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8996
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9001
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9002
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1534:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9008
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1535:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9009
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "rollup")
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9010
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "cube")
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9011
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "grouping sets")
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9015
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9019
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9038
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9041
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9043
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9055
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9058
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9060
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9066
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9070
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9076
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9080
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9085
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9090
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9096
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9101
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9108
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9113
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9124
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9128
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9132
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9140
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9171
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9181
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1562:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9191
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9199
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9208
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9212
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9216
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9227
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9251
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9257
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9268
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9272
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1572:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9278
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1573:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9280
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1574:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9284
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1575:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9290
		{
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9292
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9295
		{
			sqlVAL.union.val = nil
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9296
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9297
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9301
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9305
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9311
		{
			sqlVAL.union.val = true
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9315
		{
			sqlVAL.union.val = false
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9335
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9339
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9343
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9347
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9351
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9355
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9361
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9365
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9372
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9378
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9385
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9391
		{
			sqlVAL.str = tree.AstFull
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9395
		{
			sqlVAL.str = tree.AstLeft
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9399
		{
			sqlVAL.str = tree.AstRight
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9403
		{
			sqlVAL.str = tree.AstInner
		}
	case 1601:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9409
		{
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9410
		{
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9434
		{
			sqlVAL.str = tree.AstHash
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9438
		{
			sqlVAL.str = tree.AstMerge
		}
	case 1605:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9442
		{
			sqlVAL.str = tree.AstLookup
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9446
		{
			sqlVAL.str = tree.AstInverted
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9450
		{
			sqlVAL.str = ""
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9463
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9467
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9472
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9473
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9474
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9475
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9479
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9484
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9498
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1617:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9502
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 1618:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9508
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9514
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1620:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9524
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[3].union.indexFlags(),
			}
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9534
		{
			sqlVAL.union.val = true
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9538
		{
			sqlVAL.union.val = false
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9544
		{
			sqlVAL.union.val = true
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9548
		{
			sqlVAL.union.val = false
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9554
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9561
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9573
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 1629:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9586
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1630:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9594
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9595
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9605
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1633:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9612
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9613
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9615
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 1636:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9623
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1637:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9624
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9636
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9643
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1641:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9652
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.MakeQChar(0)
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 1642:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9692
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.OIDTypeReference{OID: oid.Oid(id)}
		}
	case 1643:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9697
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1648:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9704
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 1649:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9705
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 1650:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9708
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9709
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1652:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9710
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9711
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9712
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 1655:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9713
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1656:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9714
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1657:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9715
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1658:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9716
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9717
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9718
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9719
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9720
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9721
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9722
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9723
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9724
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9725
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9726
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9727
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9728
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9729
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9730
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9731
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1674:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9732
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9733
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9734
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9735
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9736
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9737
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9738
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9739
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9742
		{
			sqlVAL.union.val = types.Geography
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9743
		{
			sqlVAL.union.val = types.Geometry
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9744
		{
			sqlVAL.union.val = types.Box2D
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9746
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9750
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9754
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9762
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9788
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9796
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9804
		{
			sqlVAL.union.val = nil
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9811
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9815
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9819
		{
			sqlVAL.union.val = types.Int2
		}
	case 1700:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9823
		{
			sqlVAL.union.val = types.Int
		}
	case 1701:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9827
		{
			sqlVAL.union.val = types.Float4
		}
	case 1702:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9831
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 1703:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9835
		{
			sqlVAL.union.val = types.Float
		}
	case 1704:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9839
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1705:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9847
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1706:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9855
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1707:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9863
		{
			sqlVAL.union.val = types.Bool
		}
	case 1708:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9869
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 1709:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9882
		{
			sqlVAL.union.val = types.Float
		}
	case 1710:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9888
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1711:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9894
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9902
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9906
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9910
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9916
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9928
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9934
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 1718:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9938
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1719:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9942
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1720:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9946
		{
			sqlVAL.union.val = types.String
		}
	case 1723:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9955
		{
			sqlVAL.union.val = true
		}
	case 1724:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9956
		{
			sqlVAL.union.val = false
		}
	case 1725:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9961
		{
			sqlVAL.union.val = types.Date
		}
	case 1726:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9965
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 1727:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9973
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 1728:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9985
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 1729:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9987
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 1730:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9996
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 1731:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10004
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 1732:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10017
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 1733:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10021
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 1734:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10031
		{
			sqlVAL.union.val = true
		}
	case 1735:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10032
		{
			sqlVAL.union.val = false
		}
	case 1736:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10033
		{
			sqlVAL.union.val = false
		}
	case 1737:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10037
		{
			sqlVAL.union.val = types.Interval
		}
	case 1738:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10041
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 1739:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10045
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 1740:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10056
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 1741:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10064
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1742:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10072
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 1743:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10080
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1744:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10088
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1745:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10096
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 1746:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10102
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1747:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10111
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1748:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10120
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1749:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10129
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 1750:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10135
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1751:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10144
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 1752:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10150
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 1754:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10160
		{
			sqlVAL.union.val = nil
		}
	case 1755:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10166
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 1756:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10174
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 1758:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10211
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1759:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10215
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1760:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10219
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 1761:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10223
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 1762:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10234
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1763:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10239
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1764:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10243
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1765:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10247
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnarySqrt, Expr: sqlDollar[2].union.expr()}
		}
	case 1766:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10251
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryCbrt, Expr: sqlDollar[2].union.expr()}
		}
	case 1767:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10255
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1768:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10259
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1769:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10263
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1770:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10267
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1771:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10271
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1772:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10275
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1773:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10279
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1774:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10283
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1775:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10287
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1776:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10291
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1777:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10295
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1778:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10299
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1779:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10303
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1780:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10307
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONSomeExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1781:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10311
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONAllExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1782:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10315
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Contains, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1783:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10319
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ContainedBy, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1784:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10323
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1785:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10327
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1786:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10331
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1787:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10335
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1788:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10339
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchVal, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1789:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10343
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchText, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1790:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10347
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchValPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1791:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10351
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchTextPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1792:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10355
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1793:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10359
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1794:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10363
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Overlaps, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1795:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10367
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1796:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10371
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1797:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10375
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1798:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10379
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1799:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10383
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1800:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10387
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1801:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10391
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1802:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10395
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1803:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10399
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Like, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1804:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10403
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1805:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10407
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotLike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1806:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10411
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1807:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10415
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1808:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10419
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1809:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10423
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1810:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10427
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1811:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10431
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.SimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1812:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10435
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1813:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10439
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotSimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1814:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10443
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 1815:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10447
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1816:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10451
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1817:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10455
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1818:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10459
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1819:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10463
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1820:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10467
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1821:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10471
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1822:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10475
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1823:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10479
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1824:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10483
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1825:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10486
		{
			return unimplemented(sqllex, "overlaps")
		}
	case 1826:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10488
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1827:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10492
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1828:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10496
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1829:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10500
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1830:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10504
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1831:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10508
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1832:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10512
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1833:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10516
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1834:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10520
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1835:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10524
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1836:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10528
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1837:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10532
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1838:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10536
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1839:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10540
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1840:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10544
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.In, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1841:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10548
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotIn, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1842:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10552
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(tree.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 1843:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10569
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1844:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10574
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 1846:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10586
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1847:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10590
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1848:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10594
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1849:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10598
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1850:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10602
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1851:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10606
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1852:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10610
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1853:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10614
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1854:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10618
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1855:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10622
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1856:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10626
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1857:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10630
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1858:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10634
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1859:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10638
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1860:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10642
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1861:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10646
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1862:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10650
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1863:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10654
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1864:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10658
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1865:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10662
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1866:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10666
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1867:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10670
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1868:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10674
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1869:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10678
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1870:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10682
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1871:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10686
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1872:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10690
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1873:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10694
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1875:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10708
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 1877:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10716
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 1878:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10752
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1879:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10756
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1880:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10760
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 1881:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10764
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 1882:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10768
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1883:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10773
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 1884:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10775
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1885:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10779
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1886:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10783
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 1887:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10787
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 1888:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10791
		{
			sqlVAL.union.val = tree.DNull
		}
	case 1889:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10795
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 1890:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10799
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 1891:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10808
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 1892:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10815
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 1893:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10819
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: sqlDollar[5].str}
		}
	case 1894:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10823
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil || idx <= 0 {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 1895:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10829
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1897:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10834
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1898:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10838
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1899:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10842
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1900:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10846
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 1901:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10850
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1902:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10853
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 1903:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10857
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 1904:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10861
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1905:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10864
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1906:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10865
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1907:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10867
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1908:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10873
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 1909:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10877
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 1910:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10880
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 1911:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10889
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.MakeQChar(0), SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var err error
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							typ, err = name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 1912:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10942
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 1913:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10955
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 1914:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10967
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1915:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10976
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1916:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10977
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1917:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10982
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 1918:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10986
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1919:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10990
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1920:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10996
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 1921:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11000
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1922:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11004
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1923:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11008
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1924:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11012
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1925:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11016
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1926:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11022
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1927:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11026
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1928:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11030
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1929:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11034
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 1930:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11038
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 1931:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11042
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 1932:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11046
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 1933:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11050
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 1934:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11054
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 1935:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11058
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 1936:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11062
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 1937:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11066
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1938:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11070
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 1940:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11077
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1941:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11080
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1942:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11082
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1943:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11085
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1944:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11087
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1945:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11091
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1946:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11094
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1947:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11096
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1948:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11100
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1949:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11103
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1950:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11105
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1951:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11109
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1952:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11112
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1953:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11114
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1954:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11118
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1955:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11121
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1956:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11123
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1957:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11126
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1958:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11128
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1959:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11131
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1960:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11133
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1961:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11136
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1962:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11138
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1963:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11141
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1964:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11143
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1965:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11147
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1966:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11150
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1967:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11151
		{
			return unimplemented(sqllex, "treat")
		}
	case 1968:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11153
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1969:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11157
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1970:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11161
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1971:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11165
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1972:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11169
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1973:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11172
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1974:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11174
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1975:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11177
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1976:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11183
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 1977:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11187
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 1978:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11193
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 1979:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11197
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1980:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11204
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 1981:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11208
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 1982:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11214
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 1983:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11218
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 1984:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11224
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 1985:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11232
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 1986:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11236
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1987:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11240
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 1988:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11247
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 1990:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11267
		{
			sqlVAL.str = ""
		}
	case 1991:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11273
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 1992:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11277
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1993:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11283
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1994:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11291
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1995:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11299
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1996:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11307
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 1997:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11313
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == tree.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 1998:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11326
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == tree.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == tree.CurrentRow && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 1999:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11354
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedPreceding}
		}
	case 2000:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11358
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedFollowing}
		}
	case 2001:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11362
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.CurrentRow}
		}
	case 2002:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11366
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetPreceding,
			}
		}
	case 2003:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11373
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetFollowing,
			}
		}
	case 2004:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11382
		{
			sqlVAL.union.val = tree.ExcludeCurrentRow
		}
	case 2005:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11386
		{
			sqlVAL.union.val = tree.ExcludeGroup
		}
	case 2006:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11390
		{
			sqlVAL.union.val = tree.ExcludeTies
		}
	case 2007:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11394
		{

			sqlVAL.union.val = tree.NoExclusion
		}
	case 2008:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11399
		{
			sqlVAL.union.val = tree.NoExclusion
		}
	case 2009:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11412
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 2010:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11416
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2012:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11423
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 2013:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11435
		{
			sqlVAL.union.val = tree.Any
		}
	case 2014:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11439
		{
			sqlVAL.union.val = tree.Some
		}
	case 2015:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11443
		{
			sqlVAL.union.val = tree.All
		}
	case 2016:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11448
		{
			sqlVAL.union.val = tree.Plus
		}
	case 2017:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11449
		{
			sqlVAL.union.val = tree.Minus
		}
	case 2018:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11450
		{
			sqlVAL.union.val = tree.Mult
		}
	case 2019:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11451
		{
			sqlVAL.union.val = tree.Div
		}
	case 2020:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11452
		{
			sqlVAL.union.val = tree.FloorDiv
		}
	case 2021:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11453
		{
			sqlVAL.union.val = tree.Mod
		}
	case 2022:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11454
		{
			sqlVAL.union.val = tree.Bitand
		}
	case 2023:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11455
		{
			sqlVAL.union.val = tree.Bitor
		}
	case 2024:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11456
		{
			sqlVAL.union.val = tree.Pow
		}
	case 2025:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11457
		{
			sqlVAL.union.val = tree.Bitxor
		}
	case 2026:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11458
		{
			sqlVAL.union.val = tree.LT
		}
	case 2027:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11459
		{
			sqlVAL.union.val = tree.GT
		}
	case 2028:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11460
		{
			sqlVAL.union.val = tree.EQ
		}
	case 2029:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11461
		{
			sqlVAL.union.val = tree.LE
		}
	case 2030:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11462
		{
			sqlVAL.union.val = tree.GE
		}
	case 2031:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11463
		{
			sqlVAL.union.val = tree.NE
		}
	case 2033:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11467
		{
			sqlVAL.union.val = tree.Like
		}
	case 2034:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11468
		{
			sqlVAL.union.val = tree.NotLike
		}
	case 2035:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11469
		{
			sqlVAL.union.val = tree.ILike
		}
	case 2036:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11470
		{
			sqlVAL.union.val = tree.NotILike
		}
	case 2037:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11493
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2038:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11497
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2039:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11503
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2040:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11507
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2041:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11511
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2042:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11522
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2043:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11526
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2044:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11532
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2045:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11536
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2047:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11543
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2048:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11549
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2049:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11553
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2050:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11559
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 2051:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11563
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 2052:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11569
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2053:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11573
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2054:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11579
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2055:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11583
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2056:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11589
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(strings.ToLower(sqlDollar[1].str)), sqlDollar[3].union.expr()}
		}
	case 2057:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11593
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2066:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11616
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 2067:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11620
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2068:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11624
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2069:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11630
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2070:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11637
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 2071:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11641
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2072:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11658
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2073:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11662
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2074:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11666
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2075:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11670
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 2076:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11674
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2077:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11680
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2078:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11686
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2079:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11692
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 2080:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11696
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 2081:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11700
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2082:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11706
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2084:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11718
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 2085:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11725
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 2086:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11729
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 2087:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11735
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 2088:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11741
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2089:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11745
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2091:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11752
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2092:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11758
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 2093:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11762
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 2095:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11769
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2096:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11775
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 2097:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11779
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 2098:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11784
		{
		}
	case 2099:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11785
		{
		}
	case 2100:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11789
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 2101:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11793
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 2102:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11799
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 2103:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11808
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 2104:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11812
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2105:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11816
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 2106:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11824
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 2107:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11828
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 2108:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11834
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 2109:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11838
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 2110:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11857
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 2111:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11865
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 2112:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11888
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2114:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11897
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2115:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11901
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2116:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11905
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2117:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11909
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 2118:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11915
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 2119:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11919
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 2124:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11934
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2125:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11938
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2128:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11950
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2129:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11954
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2130:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11963
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2131:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11974
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2132:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11983
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2133:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11991
		{
			var err error
			var d tree.Datum
			if sqlDollar[3].union.val == nil {
				d, err = tree.ParseDInterval(sqlDollar[2].str)
			} else {
				d, err = tree.ParseDIntervalWithTypeMetadata(sqlDollar[2].str, sqlDollar[3].union.intervalTypeMetadata())
			}
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 2134:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12003
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			d, err := tree.ParseDIntervalWithTypeMetadata(sqlDollar[5].str, types.IntervalTypeMetadata{
				Precision:      prec,
				PrecisionIsSet: true,
			})
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 2153:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12084
		{
			sqlVAL.union.val = sqlDollar[1].union.nameList()
		}
	case 2155:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12092
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{SchemaName: tree.Name(sqlDollar[1].str), ExplicitSchema: true}
		}
	case 2156:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12096
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{CatalogName: tree.Name(sqlDollar[1].str), SchemaName: tree.Name(sqlDollar[3].str), ExplicitCatalog: true, ExplicitSchema: true}
		}
	case 2157:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12102
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{sqlDollar[1].union.objectNamePrefix()}
		}
	case 2158:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12106
		{
			sqlVAL.union.val = append(sqlDollar[1].union.objectNamePrefixList(), sqlDollar[3].union.objectNamePrefix())
		}
	case 2160:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12114
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{ExplicitSchema: false}
		}
	case 2165:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12139
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2167:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12146
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2168:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12150
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2169:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12154
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2171:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12168
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2172:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12172
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2173:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12176
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2174:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12189
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2176:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12198
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2180:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12216
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2181:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12229
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2182:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12236
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2190:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12261
		{
			sqlVAL.str = ""
		}
	case 2191:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12267
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 2192:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12271
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
