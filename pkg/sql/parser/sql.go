// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/roachpb"
	"github.com/cockroachdb/cockroach/pkg/security"
	"github.com/cockroachdb/cockroach/pkg/sql/lexbase"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/scanner"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
	"github.com/lib/pq/oid"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}

func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

func processBinaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	lhs tree.Expr,
	rhs tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case tree.BinaryOperator:
		op.IsExplicitOperator = true
		return &tree.BinaryExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case tree.ComparisonOperator:
		op.IsExplicitOperator = true
		return &tree.ComparisonExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case tree.UnaryOperator:

		switch op.Symbol {
		case tree.UnaryComplement:
			return &tree.ComparisonExpr{
				Operator: tree.ComparisonOperator{
					Symbol:             tree.RegMatch,
					IsExplicitOperator: true,
				},
				Left:  lhs,
				Right: rhs,
			}, 0
		default:
			sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
			return nil, -1
		}
	default:
		sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
		return nil, 1
	}
}

func processUnaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	e, code := processUnaryQualOpInternal(sqllex, op, expr)
	if code != 0 {
		return e, code
	}
	if e, ok := e.(*tree.UnaryExpr); ok {
		e.Operator.IsExplicitOperator = true
	}
	return e, code
}

func processUnaryQualOpInternal(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case tree.UnaryOperator:
		return &tree.UnaryExpr{Operator: op, Expr: expr}, 0
	case tree.BinaryOperator:

		switch op.Symbol {
		case tree.Plus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryPlus),
				Expr:     expr,
			}, 0
		case tree.Minus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryMinus),
				Expr:     expr,
			}, 0
		}
	case tree.ComparisonOperator:
		switch op.Symbol {
		case tree.RegMatch:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryComplement),
				Expr:     expr,
			}, 0
		}
	}
	sqllex.Error(fmt.Sprintf("unknown unary operator %s", op))
	return nil, 1
}

//line sql-gen.y:165

var _ scanner.ScanSymType = &sqlSymType{}

func (s *sqlSymType) ID() int32 {
	return s.id
}

func (s *sqlSymType) SetID(id int32) {
	s.id = id
}

func (s *sqlSymType) Pos() int32 {
	return s.pos
}

func (s *sqlSymType) SetPos(pos int32) {
	s.pos = pos
}

func (s *sqlSymType) Str() string {
	return s.str
}

func (s *sqlSymType) SetStr(str string) {
	s.str = str
}

func (s *sqlSymType) UnionVal() interface{} {
	return s.union.val
}

func (s *sqlSymType) SetUnionVal(val interface{}) {
	s.union.val = val
}

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) user() security.SQLUsername {
	return u.val.(security.SQLUsername)
}
func (u *sqlSymUnion) userPtr() *security.SQLUsername {
	return u.val.(*security.SQLUsername)
}
func (u *sqlSymUnion) users() []security.SQLUsername {
	return u.val.([]security.SQLUsername)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) enumValueList() tree.EnumValueList {
	return u.val.(tree.EnumValueList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) functionReference() tree.FunctionReference {
	return u.val.(tree.FunctionReference)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistence() tree.Persistence {
	return u.val.(tree.Persistence)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) targetList() tree.TargetList {
	return u.val.(tree.TargetList)
}
func (u *sqlSymUnion) targetListPtr() *tree.TargetList {
	return u.val.(*tree.TargetList)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() tree.WindowFrameExclusion {
	return u.val.(tree.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) deferrableMode() tree.DeferrableMode {
	return u.val.(tree.DeferrableMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) interleave() *tree.InterleaveDef {
	return u.val.(*tree.InterleaveDef)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) partitionByTable() *tree.PartitionByTable {
	return u.val.(*tree.PartitionByTable)
}
func (u *sqlSymUnion) partitionByIndex() *tree.PartitionByIndex {
	return u.val.(*tree.PartitionByIndex)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() tree.ComparisonOperator {
	return u.val.(tree.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) replicationOptions() *tree.ReplicationOptions {
	return u.val.(*tree.ReplicationOptions)
}
func (u *sqlSymUnion) copyOptions() *tree.CopyOptions {
	return u.val.(*tree.CopyOptions)
}
func (u *sqlSymUnion) restoreOptions() *tree.RestoreOptions {
	return u.val.(*tree.RestoreOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) stringOrPlaceholderOptList() tree.StringOrPlaceholderOptList {
	return u.val.(tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) listOfStringOrPlaceholderOptList() []tree.StringOrPlaceholderOptList {
	return u.val.([]tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) fullBackupClause() *tree.FullBackupClause {
	return u.val.(*tree.FullBackupClause)
}

func (u *sqlSymUnion) scheduleLabelSpec() *tree.ScheduleLabelSpec {
	return u.val.(*tree.ScheduleLabelSpec)
}

func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}
func (u *sqlSymUnion) scheduleState() tree.ScheduleState {
	return u.val.(tree.ScheduleState)
}
func (u *sqlSymUnion) executorType() tree.ScheduledJobExecutorType {
	return u.val.(tree.ScheduledJobExecutorType)
}
func (u *sqlSymUnion) refreshDataOption() tree.RefreshDataOption {
	return u.val.(tree.RefreshDataOption)
}
func (u *sqlSymUnion) locality() *tree.Locality {
	return u.val.(*tree.Locality)
}
func (u *sqlSymUnion) survivalGoal() tree.SurvivalGoal {
	return u.val.(tree.SurvivalGoal)
}
func (u *sqlSymUnion) dataPlacement() tree.DataPlacement {
	return u.val.(tree.DataPlacement)
}
func (u *sqlSymUnion) objectNamePrefix() tree.ObjectNamePrefix {
	return u.val.(tree.ObjectNamePrefix)
}
func (u *sqlSymUnion) objectNamePrefixList() tree.ObjectNamePrefixList {
	return u.val.(tree.ObjectNamePrefixList)
}
func (u *sqlSymUnion) abbreviatedGrant() tree.AbbreviatedGrant {
	return u.val.(tree.AbbreviatedGrant)
}
func (u *sqlSymUnion) abbreviatedRevoke() tree.AbbreviatedRevoke {
	return u.val.(tree.AbbreviatedRevoke)
}
func (u *sqlSymUnion) alterDefaultPrivilegesTargetObject() tree.AlterDefaultPrivilegesTargetObject {
	return u.val.(tree.AlterDefaultPrivilegesTargetObject)
}
func (u *sqlSymUnion) setVar() *tree.SetVar {
	return u.val.(*tree.SetVar)
}

//line sql-gen.y:874
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lexbase.IDENT
const SCONST = lexbase.SCONST
const BCONST = lexbase.BCONST
const BITCONST = lexbase.BITCONST
const ICONST = lexbase.ICONST
const FCONST = lexbase.FCONST
const PLACEHOLDER = lexbase.PLACEHOLDER
const TYPECAST = lexbase.TYPECAST
const TYPEANNOTATE = lexbase.TYPEANNOTATE
const DOT_DOT = lexbase.DOT_DOT
const LESS_EQUALS = lexbase.LESS_EQUALS
const GREATER_EQUALS = lexbase.GREATER_EQUALS
const NOT_EQUALS = lexbase.NOT_EQUALS
const NOT_REGMATCH = lexbase.NOT_REGMATCH
const REGIMATCH = lexbase.REGIMATCH
const NOT_REGIMATCH = lexbase.NOT_REGIMATCH
const ERROR = lexbase.ERROR
const ABORT = lexbase.ABORT
const ACCESS = lexbase.ACCESS
const ACTION = lexbase.ACTION
const ADD = lexbase.ADD
const ADMIN = lexbase.ADMIN
const AFTER = lexbase.AFTER
const AGGREGATE = lexbase.AGGREGATE
const ALL = lexbase.ALL
const ALTER = lexbase.ALTER
const ALWAYS = lexbase.ALWAYS
const ANALYSE = lexbase.ANALYSE
const ANALYZE = lexbase.ANALYZE
const AND = lexbase.AND
const AND_AND = lexbase.AND_AND
const ANY = lexbase.ANY
const ANNOTATE_TYPE = lexbase.ANNOTATE_TYPE
const ARRAY = lexbase.ARRAY
const AS = lexbase.AS
const ASC = lexbase.ASC
const ASYMMETRIC = lexbase.ASYMMETRIC
const AT = lexbase.AT
const ATTRIBUTE = lexbase.ATTRIBUTE
const AUTHORIZATION = lexbase.AUTHORIZATION
const AUTOMATIC = lexbase.AUTOMATIC
const AVAILABILITY = lexbase.AVAILABILITY
const BACKUP = lexbase.BACKUP
const BACKUPS = lexbase.BACKUPS
const BEFORE = lexbase.BEFORE
const BEGIN = lexbase.BEGIN
const BETWEEN = lexbase.BETWEEN
const BIGINT = lexbase.BIGINT
const BIGSERIAL = lexbase.BIGSERIAL
const BINARY = lexbase.BINARY
const BIT = lexbase.BIT
const BUCKET_COUNT = lexbase.BUCKET_COUNT
const BOOLEAN = lexbase.BOOLEAN
const BOTH = lexbase.BOTH
const BOX2D = lexbase.BOX2D
const BUNDLE = lexbase.BUNDLE
const BY = lexbase.BY
const CACHE = lexbase.CACHE
const CANCEL = lexbase.CANCEL
const CANCELQUERY = lexbase.CANCELQUERY
const CASCADE = lexbase.CASCADE
const CASE = lexbase.CASE
const CAST = lexbase.CAST
const CBRT = lexbase.CBRT
const CHANGEFEED = lexbase.CHANGEFEED
const CHAR = lexbase.CHAR
const CHARACTER = lexbase.CHARACTER
const CHARACTERISTICS = lexbase.CHARACTERISTICS
const CHECK = lexbase.CHECK
const CLOSE = lexbase.CLOSE
const CLUSTER = lexbase.CLUSTER
const COALESCE = lexbase.COALESCE
const COLLATE = lexbase.COLLATE
const COLLATION = lexbase.COLLATION
const COLUMN = lexbase.COLUMN
const COLUMNS = lexbase.COLUMNS
const COMMENT = lexbase.COMMENT
const COMMENTS = lexbase.COMMENTS
const COMMIT = lexbase.COMMIT
const COMMITTED = lexbase.COMMITTED
const COMPACT = lexbase.COMPACT
const COMPLETE = lexbase.COMPLETE
const CONCAT = lexbase.CONCAT
const CONCURRENTLY = lexbase.CONCURRENTLY
const CONFIGURATION = lexbase.CONFIGURATION
const CONFIGURATIONS = lexbase.CONFIGURATIONS
const CONFIGURE = lexbase.CONFIGURE
const CONFLICT = lexbase.CONFLICT
const CONNECTION = lexbase.CONNECTION
const CONSTRAINT = lexbase.CONSTRAINT
const CONSTRAINTS = lexbase.CONSTRAINTS
const CONTAINS = lexbase.CONTAINS
const CONTROLCHANGEFEED = lexbase.CONTROLCHANGEFEED
const CONTROLJOB = lexbase.CONTROLJOB
const CONVERSION = lexbase.CONVERSION
const CONVERT = lexbase.CONVERT
const COPY = lexbase.COPY
const COVERING = lexbase.COVERING
const CREATE = lexbase.CREATE
const CREATEDB = lexbase.CREATEDB
const CREATELOGIN = lexbase.CREATELOGIN
const CREATEROLE = lexbase.CREATEROLE
const CROSS = lexbase.CROSS
const CSV = lexbase.CSV
const CUBE = lexbase.CUBE
const CURRENT = lexbase.CURRENT
const CURRENT_CATALOG = lexbase.CURRENT_CATALOG
const CURRENT_DATE = lexbase.CURRENT_DATE
const CURRENT_SCHEMA = lexbase.CURRENT_SCHEMA
const CURRENT_ROLE = lexbase.CURRENT_ROLE
const CURRENT_TIME = lexbase.CURRENT_TIME
const CURRENT_TIMESTAMP = lexbase.CURRENT_TIMESTAMP
const CURRENT_USER = lexbase.CURRENT_USER
const CURSOR = lexbase.CURSOR
const CYCLE = lexbase.CYCLE
const DATA = lexbase.DATA
const DATABASE = lexbase.DATABASE
const DATABASES = lexbase.DATABASES
const DATE = lexbase.DATE
const DAY = lexbase.DAY
const DEBUG_PAUSE_ON = lexbase.DEBUG_PAUSE_ON
const DEC = lexbase.DEC
const DECIMAL = lexbase.DECIMAL
const DEFAULT = lexbase.DEFAULT
const DEFAULTS = lexbase.DEFAULTS
const DEALLOCATE = lexbase.DEALLOCATE
const DECLARE = lexbase.DECLARE
const DEFERRABLE = lexbase.DEFERRABLE
const DEFERRED = lexbase.DEFERRED
const DELETE = lexbase.DELETE
const DELIMITER = lexbase.DELIMITER
const DESC = lexbase.DESC
const DESTINATION = lexbase.DESTINATION
const DETACHED = lexbase.DETACHED
const DISCARD = lexbase.DISCARD
const DISTINCT = lexbase.DISTINCT
const DO = lexbase.DO
const DOMAIN = lexbase.DOMAIN
const DOUBLE = lexbase.DOUBLE
const DROP = lexbase.DROP
const ELSE = lexbase.ELSE
const ENCODING = lexbase.ENCODING
const ENCRYPTION_PASSPHRASE = lexbase.ENCRYPTION_PASSPHRASE
const END = lexbase.END
const ENUM = lexbase.ENUM
const ENUMS = lexbase.ENUMS
const ESCAPE = lexbase.ESCAPE
const EXCEPT = lexbase.EXCEPT
const EXCLUDE = lexbase.EXCLUDE
const EXCLUDING = lexbase.EXCLUDING
const EXISTS = lexbase.EXISTS
const EXECUTE = lexbase.EXECUTE
const EXECUTION = lexbase.EXECUTION
const EXPERIMENTAL = lexbase.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lexbase.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lexbase.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lexbase.EXPERIMENTAL_AUDIT
const EXPIRATION = lexbase.EXPIRATION
const EXPLAIN = lexbase.EXPLAIN
const EXPORT = lexbase.EXPORT
const EXTENSION = lexbase.EXTENSION
const EXTRACT = lexbase.EXTRACT
const EXTRACT_DURATION = lexbase.EXTRACT_DURATION
const FAILURE = lexbase.FAILURE
const FALSE = lexbase.FALSE
const FAMILY = lexbase.FAMILY
const FETCH = lexbase.FETCH
const FETCHVAL = lexbase.FETCHVAL
const FETCHTEXT = lexbase.FETCHTEXT
const FETCHVAL_PATH = lexbase.FETCHVAL_PATH
const FETCHTEXT_PATH = lexbase.FETCHTEXT_PATH
const FILES = lexbase.FILES
const FILTER = lexbase.FILTER
const FIRST = lexbase.FIRST
const FLOAT = lexbase.FLOAT
const FLOAT4 = lexbase.FLOAT4
const FLOAT8 = lexbase.FLOAT8
const FLOORDIV = lexbase.FLOORDIV
const FOLLOWING = lexbase.FOLLOWING
const FOR = lexbase.FOR
const FORCE = lexbase.FORCE
const FORCE_INDEX = lexbase.FORCE_INDEX
const FORCE_ZIGZAG = lexbase.FORCE_ZIGZAG
const FOREIGN = lexbase.FOREIGN
const FROM = lexbase.FROM
const FULL = lexbase.FULL
const FUNCTION = lexbase.FUNCTION
const FUNCTIONS = lexbase.FUNCTIONS
const GENERATED = lexbase.GENERATED
const GEOGRAPHY = lexbase.GEOGRAPHY
const GEOMETRY = lexbase.GEOMETRY
const GEOMETRYM = lexbase.GEOMETRYM
const GEOMETRYZ = lexbase.GEOMETRYZ
const GEOMETRYZM = lexbase.GEOMETRYZM
const GEOMETRYCOLLECTION = lexbase.GEOMETRYCOLLECTION
const GEOMETRYCOLLECTIONM = lexbase.GEOMETRYCOLLECTIONM
const GEOMETRYCOLLECTIONZ = lexbase.GEOMETRYCOLLECTIONZ
const GEOMETRYCOLLECTIONZM = lexbase.GEOMETRYCOLLECTIONZM
const GLOBAL = lexbase.GLOBAL
const GOAL = lexbase.GOAL
const GRANT = lexbase.GRANT
const GRANTS = lexbase.GRANTS
const GREATEST = lexbase.GREATEST
const GROUP = lexbase.GROUP
const GROUPING = lexbase.GROUPING
const GROUPS = lexbase.GROUPS
const HAVING = lexbase.HAVING
const HASH = lexbase.HASH
const HIGH = lexbase.HIGH
const HISTOGRAM = lexbase.HISTOGRAM
const HOUR = lexbase.HOUR
const IDENTITY = lexbase.IDENTITY
const IF = lexbase.IF
const IFERROR = lexbase.IFERROR
const IFNULL = lexbase.IFNULL
const IGNORE_FOREIGN_KEYS = lexbase.IGNORE_FOREIGN_KEYS
const ILIKE = lexbase.ILIKE
const IMMEDIATE = lexbase.IMMEDIATE
const IMPORT = lexbase.IMPORT
const IN = lexbase.IN
const INCLUDE = lexbase.INCLUDE
const INCLUDE_DEPRECATED_INTERLEAVES = lexbase.INCLUDE_DEPRECATED_INTERLEAVES
const INCLUDING = lexbase.INCLUDING
const INCREMENT = lexbase.INCREMENT
const INCREMENTAL = lexbase.INCREMENTAL
const INET = lexbase.INET
const INET_CONTAINED_BY_OR_EQUALS = lexbase.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lexbase.INET_CONTAINS_OR_EQUALS
const INDEX = lexbase.INDEX
const INDEXES = lexbase.INDEXES
const INHERITS = lexbase.INHERITS
const INJECT = lexbase.INJECT
const INTERLEAVE = lexbase.INTERLEAVE
const INITIALLY = lexbase.INITIALLY
const INNER = lexbase.INNER
const INSERT = lexbase.INSERT
const INT = lexbase.INT
const INTEGER = lexbase.INTEGER
const INTERSECT = lexbase.INTERSECT
const INTERVAL = lexbase.INTERVAL
const INTO = lexbase.INTO
const INTO_DB = lexbase.INTO_DB
const INVERTED = lexbase.INVERTED
const IS = lexbase.IS
const ISERROR = lexbase.ISERROR
const ISNULL = lexbase.ISNULL
const ISOLATION = lexbase.ISOLATION
const JOB = lexbase.JOB
const JOBS = lexbase.JOBS
const JOIN = lexbase.JOIN
const JSON = lexbase.JSON
const JSONB = lexbase.JSONB
const JSON_SOME_EXISTS = lexbase.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lexbase.JSON_ALL_EXISTS
const KEY = lexbase.KEY
const KEYS = lexbase.KEYS
const KMS = lexbase.KMS
const KV = lexbase.KV
const LANGUAGE = lexbase.LANGUAGE
const LAST = lexbase.LAST
const LATERAL = lexbase.LATERAL
const LATEST = lexbase.LATEST
const LC_CTYPE = lexbase.LC_CTYPE
const LC_COLLATE = lexbase.LC_COLLATE
const LEADING = lexbase.LEADING
const LEASE = lexbase.LEASE
const LEAST = lexbase.LEAST
const LEFT = lexbase.LEFT
const LESS = lexbase.LESS
const LEVEL = lexbase.LEVEL
const LIKE = lexbase.LIKE
const LIMIT = lexbase.LIMIT
const LINESTRING = lexbase.LINESTRING
const LINESTRINGM = lexbase.LINESTRINGM
const LINESTRINGZ = lexbase.LINESTRINGZ
const LINESTRINGZM = lexbase.LINESTRINGZM
const LIST = lexbase.LIST
const LOCAL = lexbase.LOCAL
const LOCALITY = lexbase.LOCALITY
const LOCALTIME = lexbase.LOCALTIME
const LOCALTIMESTAMP = lexbase.LOCALTIMESTAMP
const LOCKED = lexbase.LOCKED
const LOGIN = lexbase.LOGIN
const LOOKUP = lexbase.LOOKUP
const LOW = lexbase.LOW
const LSHIFT = lexbase.LSHIFT
const MATCH = lexbase.MATCH
const MATERIALIZED = lexbase.MATERIALIZED
const MERGE = lexbase.MERGE
const MINVALUE = lexbase.MINVALUE
const MAXVALUE = lexbase.MAXVALUE
const METHOD = lexbase.METHOD
const MINUTE = lexbase.MINUTE
const MODIFYCLUSTERSETTING = lexbase.MODIFYCLUSTERSETTING
const MONTH = lexbase.MONTH
const MULTILINESTRING = lexbase.MULTILINESTRING
const MULTILINESTRINGM = lexbase.MULTILINESTRINGM
const MULTILINESTRINGZ = lexbase.MULTILINESTRINGZ
const MULTILINESTRINGZM = lexbase.MULTILINESTRINGZM
const MULTIPOINT = lexbase.MULTIPOINT
const MULTIPOINTM = lexbase.MULTIPOINTM
const MULTIPOINTZ = lexbase.MULTIPOINTZ
const MULTIPOINTZM = lexbase.MULTIPOINTZM
const MULTIPOLYGON = lexbase.MULTIPOLYGON
const MULTIPOLYGONM = lexbase.MULTIPOLYGONM
const MULTIPOLYGONZ = lexbase.MULTIPOLYGONZ
const MULTIPOLYGONZM = lexbase.MULTIPOLYGONZM
const NAN = lexbase.NAN
const NAME = lexbase.NAME
const NAMES = lexbase.NAMES
const NATURAL = lexbase.NATURAL
const NEVER = lexbase.NEVER
const NEW_DB_NAME = lexbase.NEW_DB_NAME
const NEXT = lexbase.NEXT
const NO = lexbase.NO
const NOCANCELQUERY = lexbase.NOCANCELQUERY
const NOCONTROLCHANGEFEED = lexbase.NOCONTROLCHANGEFEED
const NOCONTROLJOB = lexbase.NOCONTROLJOB
const NOCREATEDB = lexbase.NOCREATEDB
const NOCREATELOGIN = lexbase.NOCREATELOGIN
const NOCREATEROLE = lexbase.NOCREATEROLE
const NOLOGIN = lexbase.NOLOGIN
const NOMODIFYCLUSTERSETTING = lexbase.NOMODIFYCLUSTERSETTING
const NO_INDEX_JOIN = lexbase.NO_INDEX_JOIN
const NO_ZIGZAG_JOIN = lexbase.NO_ZIGZAG_JOIN
const NONE = lexbase.NONE
const NON_VOTERS = lexbase.NON_VOTERS
const NORMAL = lexbase.NORMAL
const NOT = lexbase.NOT
const NOTHING = lexbase.NOTHING
const NOTNULL = lexbase.NOTNULL
const NOVIEWACTIVITY = lexbase.NOVIEWACTIVITY
const NOWAIT = lexbase.NOWAIT
const NULL = lexbase.NULL
const NULLIF = lexbase.NULLIF
const NULLS = lexbase.NULLS
const NUMERIC = lexbase.NUMERIC
const OF = lexbase.OF
const OFF = lexbase.OFF
const OFFSET = lexbase.OFFSET
const OID = lexbase.OID
const OIDS = lexbase.OIDS
const OIDVECTOR = lexbase.OIDVECTOR
const ON = lexbase.ON
const ONLY = lexbase.ONLY
const OPT = lexbase.OPT
const OPTION = lexbase.OPTION
const OPTIONS = lexbase.OPTIONS
const OR = lexbase.OR
const ORDER = lexbase.ORDER
const ORDINALITY = lexbase.ORDINALITY
const OTHERS = lexbase.OTHERS
const OUT = lexbase.OUT
const OUTER = lexbase.OUTER
const OVER = lexbase.OVER
const OVERLAPS = lexbase.OVERLAPS
const OVERLAY = lexbase.OVERLAY
const OWNED = lexbase.OWNED
const OWNER = lexbase.OWNER
const OPERATOR = lexbase.OPERATOR
const PARENT = lexbase.PARENT
const PARTIAL = lexbase.PARTIAL
const PARTITION = lexbase.PARTITION
const PARTITIONS = lexbase.PARTITIONS
const PASSWORD = lexbase.PASSWORD
const PAUSE = lexbase.PAUSE
const PAUSED = lexbase.PAUSED
const PHYSICAL = lexbase.PHYSICAL
const PLACEMENT = lexbase.PLACEMENT
const PLACING = lexbase.PLACING
const PLAN = lexbase.PLAN
const PLANS = lexbase.PLANS
const POINT = lexbase.POINT
const POINTM = lexbase.POINTM
const POINTZ = lexbase.POINTZ
const POINTZM = lexbase.POINTZM
const POLYGON = lexbase.POLYGON
const POLYGONM = lexbase.POLYGONM
const POLYGONZ = lexbase.POLYGONZ
const POLYGONZM = lexbase.POLYGONZM
const POSITION = lexbase.POSITION
const PRECEDING = lexbase.PRECEDING
const PRECISION = lexbase.PRECISION
const PREPARE = lexbase.PREPARE
const PRESERVE = lexbase.PRESERVE
const PRIMARY = lexbase.PRIMARY
const PRIORITY = lexbase.PRIORITY
const PRIVILEGES = lexbase.PRIVILEGES
const PROCEDURAL = lexbase.PROCEDURAL
const PUBLIC = lexbase.PUBLIC
const PUBLICATION = lexbase.PUBLICATION
const QUERIES = lexbase.QUERIES
const QUERY = lexbase.QUERY
const RANGE = lexbase.RANGE
const RANGES = lexbase.RANGES
const READ = lexbase.READ
const REAL = lexbase.REAL
const REASON = lexbase.REASON
const REASSIGN = lexbase.REASSIGN
const RECURSIVE = lexbase.RECURSIVE
const RECURRING = lexbase.RECURRING
const REF = lexbase.REF
const REFERENCES = lexbase.REFERENCES
const REFRESH = lexbase.REFRESH
const REGCLASS = lexbase.REGCLASS
const REGION = lexbase.REGION
const REGIONAL = lexbase.REGIONAL
const REGIONS = lexbase.REGIONS
const REGNAMESPACE = lexbase.REGNAMESPACE
const REGPROC = lexbase.REGPROC
const REGPROCEDURE = lexbase.REGPROCEDURE
const REGROLE = lexbase.REGROLE
const REGTYPE = lexbase.REGTYPE
const REINDEX = lexbase.REINDEX
const REMOVE_PATH = lexbase.REMOVE_PATH
const RENAME = lexbase.RENAME
const REPEATABLE = lexbase.REPEATABLE
const REPLACE = lexbase.REPLACE
const REPLICATION = lexbase.REPLICATION
const RELEASE = lexbase.RELEASE
const RESET = lexbase.RESET
const RESTORE = lexbase.RESTORE
const RESTRICT = lexbase.RESTRICT
const RESTRICTED = lexbase.RESTRICTED
const RESUME = lexbase.RESUME
const RETURNING = lexbase.RETURNING
const RETRY = lexbase.RETRY
const REVISION_HISTORY = lexbase.REVISION_HISTORY
const REVOKE = lexbase.REVOKE
const RIGHT = lexbase.RIGHT
const ROLE = lexbase.ROLE
const ROLES = lexbase.ROLES
const ROLLBACK = lexbase.ROLLBACK
const ROLLUP = lexbase.ROLLUP
const ROUTINES = lexbase.ROUTINES
const ROW = lexbase.ROW
const ROWS = lexbase.ROWS
const RSHIFT = lexbase.RSHIFT
const RULE = lexbase.RULE
const RUNNING = lexbase.RUNNING
const SAVEPOINT = lexbase.SAVEPOINT
const SCANS = lexbase.SCANS
const SCATTER = lexbase.SCATTER
const SCHEDULE = lexbase.SCHEDULE
const SCHEDULES = lexbase.SCHEDULES
const SCHEMA = lexbase.SCHEMA
const SCHEMAS = lexbase.SCHEMAS
const SCRUB = lexbase.SCRUB
const SEARCH = lexbase.SEARCH
const SECOND = lexbase.SECOND
const SELECT = lexbase.SELECT
const SEQUENCE = lexbase.SEQUENCE
const SEQUENCES = lexbase.SEQUENCES
const SERIALIZABLE = lexbase.SERIALIZABLE
const SERVER = lexbase.SERVER
const SESSION = lexbase.SESSION
const SESSIONS = lexbase.SESSIONS
const SESSION_USER = lexbase.SESSION_USER
const SET = lexbase.SET
const SETS = lexbase.SETS
const SETTING = lexbase.SETTING
const SETTINGS = lexbase.SETTINGS
const SHARE = lexbase.SHARE
const SHOW = lexbase.SHOW
const SIMILAR = lexbase.SIMILAR
const SIMPLE = lexbase.SIMPLE
const SKIP = lexbase.SKIP
const SKIP_LOCALITIES_CHECK = lexbase.SKIP_LOCALITIES_CHECK
const SKIP_MISSING_FOREIGN_KEYS = lexbase.SKIP_MISSING_FOREIGN_KEYS
const SKIP_MISSING_SEQUENCES = lexbase.SKIP_MISSING_SEQUENCES
const SKIP_MISSING_SEQUENCE_OWNERS = lexbase.SKIP_MISSING_SEQUENCE_OWNERS
const SKIP_MISSING_VIEWS = lexbase.SKIP_MISSING_VIEWS
const SMALLINT = lexbase.SMALLINT
const SMALLSERIAL = lexbase.SMALLSERIAL
const SNAPSHOT = lexbase.SNAPSHOT
const SOME = lexbase.SOME
const SPLIT = lexbase.SPLIT
const SQL = lexbase.SQL
const START = lexbase.START
const STATISTICS = lexbase.STATISTICS
const STATUS = lexbase.STATUS
const STDIN = lexbase.STDIN
const STREAM = lexbase.STREAM
const STRICT = lexbase.STRICT
const STRING = lexbase.STRING
const STORAGE = lexbase.STORAGE
const STORE = lexbase.STORE
const STORED = lexbase.STORED
const STORING = lexbase.STORING
const SUBSTRING = lexbase.SUBSTRING
const SURVIVE = lexbase.SURVIVE
const SURVIVAL = lexbase.SURVIVAL
const SYMMETRIC = lexbase.SYMMETRIC
const SYNTAX = lexbase.SYNTAX
const SYSTEM = lexbase.SYSTEM
const SQRT = lexbase.SQRT
const SUBSCRIPTION = lexbase.SUBSCRIPTION
const STATEMENTS = lexbase.STATEMENTS
const TABLE = lexbase.TABLE
const TABLES = lexbase.TABLES
const TABLESPACE = lexbase.TABLESPACE
const TEMP = lexbase.TEMP
const TEMPLATE = lexbase.TEMPLATE
const TEMPORARY = lexbase.TEMPORARY
const TENANT = lexbase.TENANT
const TESTING_RELOCATE = lexbase.TESTING_RELOCATE
const EXPERIMENTAL_RELOCATE = lexbase.EXPERIMENTAL_RELOCATE
const TEXT = lexbase.TEXT
const THEN = lexbase.THEN
const TIES = lexbase.TIES
const TIME = lexbase.TIME
const TIMETZ = lexbase.TIMETZ
const TIMESTAMP = lexbase.TIMESTAMP
const TIMESTAMPTZ = lexbase.TIMESTAMPTZ
const TO = lexbase.TO
const THROTTLING = lexbase.THROTTLING
const TRAILING = lexbase.TRAILING
const TRACE = lexbase.TRACE
const TRANSACTION = lexbase.TRANSACTION
const TRANSACTIONS = lexbase.TRANSACTIONS
const TREAT = lexbase.TREAT
const TRIGGER = lexbase.TRIGGER
const TRIM = lexbase.TRIM
const TRUE = lexbase.TRUE
const TRUNCATE = lexbase.TRUNCATE
const TRUSTED = lexbase.TRUSTED
const TYPE = lexbase.TYPE
const TYPES = lexbase.TYPES
const TRACING = lexbase.TRACING
const UNBOUNDED = lexbase.UNBOUNDED
const UNCOMMITTED = lexbase.UNCOMMITTED
const UNION = lexbase.UNION
const UNIQUE = lexbase.UNIQUE
const UNKNOWN = lexbase.UNKNOWN
const UNLOGGED = lexbase.UNLOGGED
const UNSPLIT = lexbase.UNSPLIT
const UPDATE = lexbase.UPDATE
const UPSERT = lexbase.UPSERT
const UNTIL = lexbase.UNTIL
const USE = lexbase.USE
const USER = lexbase.USER
const USERS = lexbase.USERS
const USING = lexbase.USING
const UUID = lexbase.UUID
const VALID = lexbase.VALID
const VALIDATE = lexbase.VALIDATE
const VALUE = lexbase.VALUE
const VALUES = lexbase.VALUES
const VARBIT = lexbase.VARBIT
const VARCHAR = lexbase.VARCHAR
const VARIADIC = lexbase.VARIADIC
const VIEW = lexbase.VIEW
const VARYING = lexbase.VARYING
const VIEWACTIVITY = lexbase.VIEWACTIVITY
const VIRTUAL = lexbase.VIRTUAL
const VISIBLE = lexbase.VISIBLE
const VOTERS = lexbase.VOTERS
const WHEN = lexbase.WHEN
const WHERE = lexbase.WHERE
const WINDOW = lexbase.WINDOW
const WITH = lexbase.WITH
const WITHIN = lexbase.WITHIN
const WITHOUT = lexbase.WITHOUT
const WORK = lexbase.WORK
const WRITE = lexbase.WRITE
const YEAR = lexbase.YEAR
const ZONE = lexbase.ZONE
const NOT_LA = lexbase.NOT_LA
const NULLS_LA = lexbase.NULLS_LA
const WITH_LA = lexbase.WITH_LA
const AS_LA = lexbase.AS_LA
const GENERATED_ALWAYS = lexbase.GENERATED_ALWAYS
const GENERATED_BY_DEFAULT = lexbase.GENERATED_BY_DEFAULT
const RESET_ALL = lexbase.RESET_ALL
const ROLE_ALL = lexbase.ROLE_ALL
const USER_ALL = lexbase.USER_ALL
const ON_LA = lexbase.ON_LA
const CONTAINED_BY = lexbase.CONTAINED_BY
const POSTFIXOP = lexbase.POSTFIXOP
const UMINUS = lexbase.UMINUS
const HELPTOKEN = lexbase.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ACCESS",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASYMMETRIC",
	"AT",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"AVAILABILITY",
	"BACKUP",
	"BACKUPS",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BINARY",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BOX2D",
	"BUNDLE",
	"BY",
	"CACHE",
	"CANCEL",
	"CANCELQUERY",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONNECTION",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONTROLCHANGEFEED",
	"CONTROLJOB",
	"CONVERSION",
	"CONVERT",
	"COPY",
	"COVERING",
	"CREATE",
	"CREATEDB",
	"CREATELOGIN",
	"CREATEROLE",
	"CROSS",
	"CSV",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CURSOR",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEBUG_PAUSE_ON",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DELIMITER",
	"DESC",
	"DESTINATION",
	"DETACHED",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ENUMS",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXECUTION",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FAILURE",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE",
	"FORCE_INDEX",
	"FORCE_ZIGZAG",
	"FOREIGN",
	"FROM",
	"FULL",
	"FUNCTION",
	"FUNCTIONS",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYM",
	"GEOMETRYZ",
	"GEOMETRYZM",
	"GEOMETRYCOLLECTION",
	"GEOMETRYCOLLECTIONM",
	"GEOMETRYCOLLECTIONZ",
	"GEOMETRYCOLLECTIONZM",
	"GLOBAL",
	"GOAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HIGH",
	"HISTOGRAM",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDE_DEPRECATED_INTERLEAVES",
	"INCLUDING",
	"INCREMENT",
	"INCREMENTAL",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INHERITS",
	"INJECT",
	"INTERLEAVE",
	"INITIALLY",
	"INNER",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INTO_DB",
	"INVERTED",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KMS",
	"KV",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LATEST",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LINESTRINGM",
	"LINESTRINGZ",
	"LINESTRINGZM",
	"LIST",
	"LOCAL",
	"LOCALITY",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"METHOD",
	"MINUTE",
	"MODIFYCLUSTERSETTING",
	"MONTH",
	"MULTILINESTRING",
	"MULTILINESTRINGM",
	"MULTILINESTRINGZ",
	"MULTILINESTRINGZM",
	"MULTIPOINT",
	"MULTIPOINTM",
	"MULTIPOINTZ",
	"MULTIPOINTZM",
	"MULTIPOLYGON",
	"MULTIPOLYGONM",
	"MULTIPOLYGONZ",
	"MULTIPOLYGONZM",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEVER",
	"NEW_DB_NAME",
	"NEXT",
	"NO",
	"NOCANCELQUERY",
	"NOCONTROLCHANGEFEED",
	"NOCONTROLJOB",
	"NOCREATEDB",
	"NOCREATELOGIN",
	"NOCREATEROLE",
	"NOLOGIN",
	"NOMODIFYCLUSTERSETTING",
	"NO_INDEX_JOIN",
	"NO_ZIGZAG_JOIN",
	"NONE",
	"NON_VOTERS",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOVIEWACTIVITY",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PAUSED",
	"PHYSICAL",
	"PLACEMENT",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POINTM",
	"POINTZ",
	"POINTZM",
	"POLYGON",
	"POLYGONM",
	"POLYGONZ",
	"POLYGONZM",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIORITY",
	"PRIVILEGES",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"REASON",
	"REASSIGN",
	"RECURSIVE",
	"RECURRING",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REGCLASS",
	"REGION",
	"REGIONAL",
	"REGIONS",
	"REGNAMESPACE",
	"REGPROC",
	"REGPROCEDURE",
	"REGROLE",
	"REGTYPE",
	"REINDEX",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"REPLICATION",
	"RELEASE",
	"RESET",
	"RESTORE",
	"RESTRICT",
	"RESTRICTED",
	"RESUME",
	"RETURNING",
	"RETRY",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROUTINES",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"RUNNING",
	"SAVEPOINT",
	"SCANS",
	"SCATTER",
	"SCHEDULE",
	"SCHEDULES",
	"SCHEMA",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETS",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SKIP_LOCALITIES_CHECK",
	"SKIP_MISSING_FOREIGN_KEYS",
	"SKIP_MISSING_SEQUENCES",
	"SKIP_MISSING_SEQUENCE_OWNERS",
	"SKIP_MISSING_VIEWS",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"START",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STREAM",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SURVIVE",
	"SURVIVAL",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"STATEMENTS",
	"TABLE",
	"TABLES",
	"TABLESPACE",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TENANT",
	"TESTING_RELOCATE",
	"EXPERIMENTAL_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TRANSACTIONS",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TYPES",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIEWACTIVITY",
	"VIRTUAL",
	"VISIBLE",
	"VOTERS",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"NULLS_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"GENERATED_BY_DEFAULT",
	"RESET_ALL",
	"ROLE_ALL",
	"USER_ALL",
	"ON_LA",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"'{'",
	"'}'",
	"':'",
}

var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:13695

//line yacctab:1
var sqlExca = [...]int{
	-1, 0,
	1, 35,
	-2, 1591,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 57,
	262, 415,
	-2, 0,
	-1, 74,
	244, 243,
	518, 243,
	-2, 0,
	-1, 88,
	232, 1327,
	246, 1327,
	262, 411,
	392, 411,
	403, 1081,
	442, 411,
	455, 1081,
	502, 1081,
	529, 411,
	555, 1081,
	-2, 0,
	-1, 94,
	133, 1591,
	239, 1591,
	540, 1591,
	541, 1591,
	-2, 0,
	-1, 112,
	151, 1562,
	170, 1562,
	183, 1562,
	242, 1562,
	275, 1562,
	343, 1562,
	353, 1562,
	535, 1562,
	-2, 1533,
	-1, 153,
	159, 922,
	261, 922,
	395, 883,
	460, 883,
	501, 883,
	521, 922,
	523, 883,
	-2, 0,
	-1, 157,
	4, 1593,
	21, 1593,
	22, 1593,
	23, 1593,
	24, 1593,
	25, 1593,
	26, 1593,
	27, 1593,
	29, 1593,
	30, 1593,
	36, 1593,
	41, 1593,
	42, 1593,
	44, 1593,
	45, 1593,
	46, 1593,
	47, 1593,
	48, 1593,
	49, 1593,
	50, 1593,
	51, 1593,
	53, 1593,
	54, 1593,
	55, 1593,
	56, 1593,
	58, 1593,
	59, 1593,
	60, 1593,
	61, 1593,
	62, 1593,
	63, 1593,
	64, 1593,
	68, 1593,
	69, 1593,
	70, 1593,
	71, 1593,
	73, 1593,
	74, 1593,
	75, 1593,
	79, 1593,
	80, 1593,
	81, 1593,
	82, 1593,
	83, 1593,
	84, 1593,
	85, 1593,
	88, 1593,
	89, 1593,
	90, 1593,
	91, 1593,
	92, 1593,
	94, 1593,
	96, 1593,
	97, 1593,
	98, 1593,
	99, 1593,
	100, 1593,
	101, 1593,
	103, 1593,
	104, 1593,
	105, 1593,
	107, 1593,
	108, 1593,
	109, 1593,
	117, 1593,
	118, 1593,
	119, 1593,
	120, 1593,
	121, 1593,
	123, 1593,
	124, 1593,
	125, 1593,
	126, 1593,
	128, 1593,
	129, 1593,
	130, 1593,
	132, 1593,
	133, 1593,
	134, 1593,
	136, 1593,
	137, 1593,
	138, 1593,
	141, 1593,
	142, 1593,
	143, 1593,
	145, 1593,
	146, 1593,
	148, 1593,
	149, 1593,
	150, 1593,
	152, 1593,
	153, 1593,
	154, 1593,
	155, 1593,
	156, 1593,
	157, 1593,
	158, 1593,
	159, 1593,
	160, 1593,
	161, 1593,
	162, 1593,
	163, 1593,
	164, 1593,
	165, 1593,
	166, 1593,
	167, 1593,
	169, 1593,
	175, 1593,
	176, 1593,
	177, 1593,
	178, 1593,
	182, 1593,
	184, 1593,
	185, 1593,
	186, 1593,
	190, 1593,
	191, 1593,
	192, 1593,
	193, 1593,
	194, 1593,
	195, 1593,
	196, 1593,
	197, 1593,
	198, 1593,
	199, 1593,
	200, 1593,
	201, 1593,
	202, 1593,
	203, 1593,
	205, 1593,
	206, 1593,
	208, 1593,
	209, 1593,
	211, 1593,
	212, 1593,
	213, 1593,
	214, 1593,
	215, 1593,
	216, 1593,
	217, 1593,
	218, 1593,
	219, 1593,
	221, 1593,
	222, 1593,
	224, 1593,
	225, 1593,
	226, 1593,
	227, 1593,
	228, 1593,
	232, 1593,
	233, 1593,
	234, 1593,
	235, 1593,
	236, 1593,
	239, 1593,
	240, 1593,
	241, 1593,
	243, 1593,
	245, 1593,
	246, 1593,
	248, 1593,
	250, 1593,
	251, 1593,
	252, 1593,
	254, 1593,
	258, 1593,
	259, 1593,
	260, 1593,
	261, 1593,
	262, 1593,
	263, 1593,
	265, 1593,
	266, 1593,
	267, 1593,
	269, 1593,
	270, 1593,
	272, 1593,
	273, 1593,
	276, 1593,
	277, 1593,
	278, 1593,
	279, 1593,
	280, 1593,
	281, 1593,
	282, 1593,
	285, 1593,
	286, 1593,
	287, 1593,
	288, 1593,
	290, 1593,
	291, 1593,
	292, 1593,
	293, 1593,
	294, 1593,
	295, 1593,
	296, 1593,
	297, 1593,
	298, 1593,
	299, 1593,
	300, 1593,
	301, 1593,
	302, 1593,
	303, 1593,
	304, 1593,
	305, 1593,
	306, 1593,
	307, 1593,
	308, 1593,
	309, 1593,
	310, 1593,
	311, 1593,
	313, 1593,
	315, 1593,
	316, 1593,
	317, 1593,
	318, 1593,
	319, 1593,
	320, 1593,
	321, 1593,
	322, 1593,
	323, 1593,
	324, 1593,
	325, 1593,
	326, 1593,
	327, 1593,
	328, 1593,
	330, 1593,
	331, 1593,
	333, 1593,
	335, 1593,
	336, 1593,
	338, 1593,
	339, 1593,
	340, 1593,
	341, 1593,
	342, 1593,
	345, 1593,
	348, 1593,
	349, 1593,
	350, 1593,
	351, 1593,
	354, 1593,
	355, 1593,
	356, 1593,
	358, 1593,
	360, 1593,
	361, 1593,
	362, 1593,
	363, 1593,
	364, 1593,
	365, 1593,
	366, 1593,
	367, 1593,
	368, 1593,
	369, 1593,
	370, 1593,
	371, 1593,
	372, 1593,
	374, 1593,
	375, 1593,
	376, 1593,
	377, 1593,
	378, 1593,
	379, 1593,
	380, 1593,
	381, 1593,
	382, 1593,
	383, 1593,
	384, 1593,
	385, 1593,
	386, 1593,
	387, 1593,
	388, 1593,
	390, 1593,
	391, 1593,
	393, 1593,
	394, 1593,
	395, 1593,
	396, 1593,
	397, 1593,
	398, 1593,
	399, 1593,
	400, 1593,
	401, 1593,
	402, 1593,
	403, 1593,
	404, 1593,
	405, 1593,
	407, 1593,
	409, 1593,
	410, 1593,
	411, 1593,
	417, 1593,
	419, 1593,
	420, 1593,
	421, 1593,
	422, 1593,
	423, 1593,
	424, 1593,
	425, 1593,
	426, 1593,
	427, 1593,
	428, 1593,
	430, 1593,
	431, 1593,
	432, 1593,
	434, 1593,
	435, 1593,
	436, 1593,
	437, 1593,
	438, 1593,
	439, 1593,
	440, 1593,
	442, 1593,
	443, 1593,
	444, 1593,
	445, 1593,
	446, 1593,
	447, 1593,
	448, 1593,
	449, 1593,
	450, 1593,
	451, 1593,
	452, 1593,
	453, 1593,
	455, 1593,
	456, 1593,
	457, 1593,
	458, 1593,
	459, 1593,
	460, 1593,
	462, 1593,
	463, 1593,
	464, 1593,
	465, 1593,
	466, 1593,
	467, 1593,
	469, 1593,
	470, 1593,
	471, 1593,
	472, 1593,
	473, 1593,
	474, 1593,
	475, 1593,
	476, 1593,
	478, 1593,
	480, 1593,
	481, 1593,
	482, 1593,
	483, 1593,
	484, 1593,
	485, 1593,
	486, 1593,
	487, 1593,
	488, 1593,
	489, 1593,
	490, 1593,
	491, 1593,
	492, 1593,
	493, 1593,
	494, 1593,
	495, 1593,
	497, 1593,
	498, 1593,
	500, 1593,
	501, 1593,
	503, 1593,
	504, 1593,
	505, 1593,
	506, 1593,
	507, 1593,
	508, 1593,
	509, 1593,
	510, 1593,
	511, 1593,
	513, 1593,
	514, 1593,
	515, 1593,
	516, 1593,
	517, 1593,
	519, 1593,
	521, 1593,
	522, 1593,
	523, 1593,
	524, 1593,
	525, 1593,
	526, 1593,
	528, 1593,
	529, 1593,
	530, 1593,
	531, 1593,
	533, 1593,
	534, 1593,
	537, 1593,
	538, 1593,
	539, 1593,
	540, 1593,
	541, 1593,
	542, 1593,
	543, 1593,
	545, 1593,
	548, 1593,
	549, 1593,
	550, 1593,
	551, 1593,
	552, 1593,
	553, 1593,
	555, 1593,
	556, 1593,
	557, 1593,
	558, 1593,
	559, 1593,
	560, 1593,
	565, 1593,
	566, 1593,
	567, 1593,
	568, 1593,
	569, 1593,
	570, 1593,
	-2, 0,
	-1, 158,
	1, 1444,
	131, 1444,
	250, 1444,
	332, 1444,
	390, 1444,
	399, 1444,
	574, 1444,
	603, 1444,
	-2, 0,
	-1, 160,
	1, 1444,
	603, 1444,
	-2, 0,
	-1, 161,
	1, 1444,
	603, 1444,
	-2, 0,
	-1, 162,
	1, 1444,
	518, 1444,
	603, 1444,
	-2, 0,
	-1, 191,
	151, 1561,
	170, 1561,
	183, 1561,
	242, 1561,
	275, 1561,
	343, 1561,
	353, 1561,
	535, 1561,
	-2, 1536,
	-1, 239,
	4, 1600,
	5, 1600,
	6, 1600,
	7, 1600,
	8, 1600,
	9, 1600,
	10, 1600,
	21, 1600,
	22, 1600,
	23, 1600,
	24, 1600,
	25, 1600,
	26, 1600,
	27, 1600,
	29, 1600,
	30, 1600,
	36, 1600,
	37, 1600,
	41, 1600,
	42, 1600,
	43, 1600,
	44, 1600,
	45, 1600,
	46, 1600,
	47, 1600,
	48, 1600,
	49, 1600,
	50, 1600,
	51, 1600,
	53, 1600,
	54, 1600,
	55, 1600,
	56, 1600,
	58, 1600,
	59, 1600,
	60, 1600,
	61, 1600,
	62, 1600,
	63, 1600,
	64, 1600,
	65, 1600,
	66, 1600,
	67, 1600,
	68, 1600,
	69, 1600,
	70, 1600,
	71, 1600,
	73, 1600,
	74, 1600,
	75, 1600,
	77, 1600,
	79, 1600,
	80, 1600,
	81, 1600,
	82, 1600,
	83, 1600,
	84, 1600,
	85, 1600,
	88, 1600,
	89, 1600,
	90, 1600,
	91, 1600,
	92, 1600,
	94, 1600,
	96, 1600,
	97, 1600,
	98, 1600,
	99, 1600,
	100, 1600,
	101, 1600,
	103, 1600,
	104, 1600,
	105, 1600,
	106, 1600,
	107, 1600,
	108, 1600,
	109, 1600,
	110, 1600,
	111, 1600,
	112, 1600,
	113, 1600,
	114, 1600,
	115, 1600,
	116, 1600,
	117, 1600,
	118, 1600,
	119, 1600,
	120, 1600,
	121, 1600,
	122, 1600,
	123, 1600,
	124, 1600,
	125, 1600,
	126, 1600,
	127, 1600,
	128, 1600,
	129, 1600,
	130, 1600,
	132, 1600,
	133, 1600,
	134, 1600,
	136, 1600,
	137, 1600,
	138, 1600,
	141, 1600,
	142, 1600,
	143, 1600,
	145, 1600,
	146, 1600,
	148, 1600,
	149, 1600,
	150, 1600,
	152, 1600,
	153, 1600,
	154, 1600,
	155, 1600,
	156, 1600,
	157, 1600,
	158, 1600,
	159, 1600,
	160, 1600,
	161, 1600,
	162, 1600,
	163, 1600,
	164, 1600,
	165, 1600,
	166, 1600,
	167, 1600,
	168, 1600,
	169, 1600,
	175, 1600,
	176, 1600,
	177, 1600,
	178, 1600,
	182, 1600,
	184, 1600,
	185, 1600,
	186, 1600,
	189, 1600,
	190, 1600,
	191, 1600,
	192, 1600,
	193, 1600,
	194, 1600,
	195, 1600,
	196, 1600,
	197, 1600,
	198, 1600,
	199, 1600,
	200, 1600,
	201, 1600,
	202, 1600,
	203, 1600,
	205, 1600,
	206, 1600,
	208, 1600,
	209, 1600,
	211, 1600,
	212, 1600,
	213, 1600,
	214, 1600,
	215, 1600,
	216, 1600,
	217, 1600,
	218, 1600,
	219, 1600,
	220, 1600,
	221, 1600,
	222, 1600,
	224, 1600,
	225, 1600,
	226, 1600,
	227, 1600,
	228, 1600,
	232, 1600,
	233, 1600,
	234, 1600,
	235, 1600,
	236, 1600,
	238, 1600,
	239, 1600,
	240, 1600,
	241, 1600,
	243, 1600,
	245, 1600,
	246, 1600,
	247, 1600,
	248, 1600,
	249, 1600,
	250, 1600,
	251, 1600,
	252, 1600,
	253, 1600,
	254, 1600,
	258, 1600,
	259, 1600,
	260, 1600,
	261, 1600,
	262, 1600,
	263, 1600,
	265, 1600,
	266, 1600,
	267, 1600,
	269, 1600,
	270, 1600,
	271, 1600,
	272, 1600,
	273, 1600,
	274, 1600,
	276, 1600,
	277, 1600,
	278, 1600,
	279, 1600,
	280, 1600,
	281, 1600,
	282, 1600,
	283, 1600,
	284, 1600,
	285, 1600,
	286, 1600,
	287, 1600,
	288, 1600,
	290, 1600,
	291, 1600,
	292, 1600,
	293, 1600,
	294, 1600,
	295, 1600,
	296, 1600,
	297, 1600,
	298, 1600,
	299, 1600,
	300, 1600,
	301, 1600,
	302, 1600,
	303, 1600,
	304, 1600,
	305, 1600,
	306, 1600,
	307, 1600,
	308, 1600,
	309, 1600,
	310, 1600,
	311, 1600,
	313, 1600,
	314, 1600,
	315, 1600,
	316, 1600,
	317, 1600,
	318, 1600,
	319, 1600,
	320, 1600,
	321, 1600,
	322, 1600,
	323, 1600,
	324, 1600,
	325, 1600,
	326, 1600,
	327, 1600,
	328, 1600,
	329, 1600,
	330, 1600,
	331, 1600,
	332, 1600,
	333, 1600,
	334, 1600,
	335, 1600,
	336, 1600,
	337, 1600,
	338, 1600,
	339, 1600,
	340, 1600,
	341, 1600,
	342, 1600,
	345, 1600,
	349, 1600,
	350, 1600,
	351, 1600,
	354, 1600,
	355, 1600,
	356, 1600,
	357, 1600,
	358, 1600,
	359, 1600,
	360, 1600,
	361, 1600,
	362, 1600,
	363, 1600,
	364, 1600,
	365, 1600,
	366, 1600,
	367, 1600,
	368, 1600,
	369, 1600,
	370, 1600,
	371, 1600,
	372, 1600,
	374, 1600,
	375, 1600,
	376, 1600,
	377, 1600,
	378, 1600,
	379, 1600,
	380, 1600,
	381, 1600,
	382, 1600,
	383, 1600,
	384, 1600,
	385, 1600,
	386, 1600,
	387, 1600,
	388, 1600,
	390, 1600,
	391, 1600,
	393, 1600,
	394, 1600,
	395, 1600,
	396, 1600,
	397, 1600,
	398, 1600,
	399, 1600,
	400, 1600,
	401, 1600,
	402, 1600,
	403, 1600,
	404, 1600,
	405, 1600,
	407, 1600,
	409, 1600,
	410, 1600,
	411, 1600,
	417, 1600,
	419, 1600,
	420, 1600,
	421, 1600,
	422, 1600,
	423, 1600,
	424, 1600,
	425, 1600,
	426, 1600,
	427, 1600,
	428, 1600,
	430, 1600,
	431, 1600,
	432, 1600,
	433, 1600,
	434, 1600,
	435, 1600,
	436, 1600,
	437, 1600,
	438, 1600,
	439, 1600,
	440, 1600,
	442, 1600,
	443, 1600,
	444, 1600,
	445, 1600,
	446, 1600,
	447, 1600,
	448, 1600,
	449, 1600,
	450, 1600,
	451, 1600,
	452, 1600,
	453, 1600,
	455, 1600,
	456, 1600,
	457, 1600,
	458, 1600,
	459, 1600,
	460, 1600,
	461, 1600,
	462, 1600,
	463, 1600,
	464, 1600,
	465, 1600,
	466, 1600,
	467, 1600,
	468, 1600,
	469, 1600,
	470, 1600,
	471, 1600,
	472, 1600,
	473, 1600,
	474, 1600,
	475, 1600,
	476, 1600,
	478, 1600,
	480, 1600,
	481, 1600,
	482, 1600,
	483, 1600,
	484, 1600,
	485, 1600,
	486, 1600,
	487, 1600,
	488, 1600,
	489, 1600,
	490, 1600,
	491, 1600,
	492, 1600,
	493, 1600,
	494, 1600,
	495, 1600,
	497, 1600,
	498, 1600,
	499, 1600,
	500, 1600,
	501, 1600,
	503, 1600,
	504, 1600,
	505, 1600,
	506, 1600,
	507, 1600,
	508, 1600,
	509, 1600,
	510, 1600,
	511, 1600,
	513, 1600,
	514, 1600,
	515, 1600,
	516, 1600,
	517, 1600,
	519, 1600,
	521, 1600,
	522, 1600,
	523, 1600,
	524, 1600,
	525, 1600,
	526, 1600,
	527, 1600,
	528, 1600,
	529, 1600,
	530, 1600,
	531, 1600,
	533, 1600,
	534, 1600,
	536, 1600,
	537, 1600,
	538, 1600,
	539, 1600,
	540, 1600,
	541, 1600,
	542, 1600,
	543, 1600,
	544, 1600,
	545, 1600,
	548, 1600,
	549, 1600,
	550, 1600,
	551, 1600,
	552, 1600,
	553, 1600,
	555, 1600,
	556, 1600,
	557, 1600,
	558, 1600,
	559, 1600,
	560, 1600,
	565, 1600,
	566, 1600,
	567, 1600,
	568, 1600,
	569, 1600,
	570, 1600,
	571, 1600,
	584, 1600,
	591, 1600,
	592, 1600,
	593, 1600,
	600, 1600,
	604, 1600,
	-2, 0,
	-1, 751,
	4, 1325,
	21, 1325,
	22, 1325,
	23, 1325,
	24, 1325,
	25, 1325,
	26, 1325,
	27, 1325,
	29, 1325,
	30, 1325,
	36, 1325,
	41, 1325,
	42, 1325,
	44, 1325,
	45, 1325,
	46, 1325,
	47, 1325,
	48, 1325,
	49, 1325,
	50, 1325,
	51, 1325,
	53, 1325,
	54, 1325,
	55, 1325,
	56, 1325,
	58, 1325,
	59, 1325,
	60, 1325,
	61, 1325,
	62, 1325,
	63, 1325,
	64, 1325,
	68, 1325,
	69, 1325,
	70, 1325,
	71, 1325,
	73, 1325,
	74, 1325,
	75, 1325,
	79, 1325,
	80, 1325,
	81, 1325,
	82, 1325,
	83, 1325,
	84, 1325,
	85, 1325,
	88, 1325,
	89, 1325,
	90, 1325,
	91, 1325,
	92, 1325,
	94, 1325,
	96, 1325,
	97, 1325,
	98, 1325,
	99, 1325,
	100, 1325,
	101, 1325,
	103, 1325,
	104, 1325,
	105, 1325,
	107, 1325,
	108, 1325,
	109, 1325,
	117, 1325,
	118, 1325,
	119, 1325,
	120, 1325,
	121, 1325,
	123, 1325,
	124, 1325,
	125, 1325,
	126, 1325,
	128, 1325,
	129, 1325,
	130, 1325,
	132, 1325,
	133, 1325,
	134, 1325,
	136, 1325,
	137, 1325,
	138, 1325,
	141, 1325,
	142, 1325,
	143, 1325,
	145, 1325,
	146, 1325,
	148, 1325,
	149, 1325,
	150, 1325,
	152, 1325,
	153, 1325,
	154, 1325,
	155, 1325,
	156, 1325,
	157, 1325,
	158, 1325,
	159, 1325,
	160, 1325,
	161, 1325,
	162, 1325,
	163, 1325,
	164, 1325,
	165, 1325,
	166, 1325,
	167, 1325,
	169, 1325,
	175, 1325,
	176, 1325,
	177, 1325,
	178, 1325,
	182, 1325,
	184, 1325,
	185, 1325,
	186, 1325,
	190, 1325,
	191, 1325,
	192, 1325,
	193, 1325,
	194, 1325,
	195, 1325,
	196, 1325,
	197, 1325,
	198, 1325,
	199, 1325,
	200, 1325,
	201, 1325,
	202, 1325,
	203, 1325,
	205, 1325,
	206, 1325,
	208, 1325,
	209, 1325,
	211, 1325,
	212, 1325,
	213, 1325,
	214, 1325,
	215, 1325,
	216, 1325,
	217, 1325,
	218, 1325,
	219, 1325,
	221, 1325,
	222, 1325,
	224, 1325,
	225, 1325,
	226, 1325,
	227, 1325,
	228, 1325,
	232, 1325,
	233, 1325,
	234, 1325,
	235, 1325,
	236, 1325,
	239, 1325,
	240, 1325,
	241, 1325,
	243, 1325,
	245, 1325,
	246, 1325,
	248, 1325,
	250, 1325,
	251, 1325,
	252, 1325,
	254, 1325,
	258, 1325,
	259, 1325,
	260, 1325,
	261, 1325,
	262, 1325,
	263, 1325,
	265, 1325,
	266, 1325,
	267, 1325,
	269, 1325,
	270, 1325,
	272, 1325,
	273, 1325,
	276, 1325,
	277, 1325,
	278, 1325,
	279, 1325,
	280, 1325,
	281, 1325,
	282, 1325,
	285, 1325,
	286, 1325,
	287, 1325,
	288, 1325,
	290, 1325,
	291, 1325,
	292, 1325,
	293, 1325,
	294, 1325,
	295, 1325,
	296, 1325,
	297, 1325,
	298, 1325,
	299, 1325,
	300, 1325,
	301, 1325,
	302, 1325,
	303, 1325,
	304, 1325,
	305, 1325,
	306, 1325,
	307, 1325,
	308, 1325,
	309, 1325,
	310, 1325,
	311, 1325,
	313, 1325,
	315, 1325,
	316, 1325,
	317, 1325,
	318, 1325,
	319, 1325,
	320, 1325,
	321, 1325,
	322, 1325,
	323, 1325,
	324, 1325,
	325, 1325,
	326, 1325,
	327, 1325,
	328, 1325,
	330, 1325,
	331, 1325,
	333, 1325,
	335, 1325,
	336, 1325,
	338, 1325,
	339, 1325,
	340, 1325,
	341, 1325,
	342, 1325,
	345, 1325,
	349, 1325,
	350, 1325,
	351, 1325,
	354, 1325,
	355, 1325,
	356, 1325,
	358, 1325,
	360, 1325,
	361, 1325,
	362, 1325,
	363, 1325,
	364, 1325,
	365, 1325,
	366, 1325,
	367, 1325,
	368, 1325,
	369, 1325,
	370, 1325,
	371, 1325,
	372, 1325,
	374, 1325,
	375, 1325,
	376, 1325,
	377, 1325,
	378, 1325,
	379, 1325,
	380, 1325,
	381, 1325,
	382, 1325,
	383, 1325,
	384, 1325,
	385, 1325,
	386, 1325,
	387, 1325,
	388, 1325,
	390, 1325,
	391, 1325,
	393, 1325,
	394, 1325,
	395, 1325,
	396, 1325,
	397, 1325,
	398, 1325,
	399, 1325,
	400, 1325,
	401, 1325,
	402, 1325,
	403, 1325,
	404, 1325,
	405, 1325,
	407, 1325,
	409, 1325,
	410, 1325,
	411, 1325,
	417, 1325,
	419, 1325,
	420, 1325,
	421, 1325,
	422, 1325,
	423, 1325,
	424, 1325,
	425, 1325,
	426, 1325,
	427, 1325,
	428, 1325,
	430, 1325,
	431, 1325,
	432, 1325,
	434, 1325,
	435, 1325,
	436, 1325,
	437, 1325,
	438, 1325,
	439, 1325,
	440, 1325,
	442, 1325,
	443, 1325,
	444, 1325,
	445, 1325,
	446, 1325,
	447, 1325,
	448, 1325,
	449, 1325,
	450, 1325,
	451, 1325,
	452, 1325,
	453, 1325,
	455, 1325,
	456, 1325,
	457, 1325,
	458, 1325,
	459, 1325,
	460, 1325,
	462, 1325,
	463, 1325,
	464, 1325,
	465, 1325,
	466, 1325,
	467, 1325,
	469, 1325,
	470, 1325,
	471, 1325,
	472, 1325,
	473, 1325,
	474, 1325,
	475, 1325,
	476, 1325,
	478, 1325,
	480, 1325,
	481, 1325,
	482, 1325,
	483, 1325,
	484, 1325,
	485, 1325,
	486, 1325,
	487, 1325,
	488, 1325,
	489, 1325,
	490, 1325,
	491, 1325,
	492, 1325,
	493, 1325,
	494, 1325,
	495, 1325,
	497, 1325,
	498, 1325,
	500, 1325,
	501, 1325,
	503, 1325,
	504, 1325,
	505, 1325,
	506, 1325,
	507, 1325,
	508, 1325,
	509, 1325,
	510, 1325,
	511, 1325,
	513, 1325,
	514, 1325,
	515, 1325,
	516, 1325,
	517, 1325,
	519, 1325,
	521, 1325,
	522, 1325,
	523, 1325,
	524, 1325,
	525, 1325,
	526, 1325,
	528, 1325,
	529, 1325,
	530, 1325,
	531, 1325,
	533, 1325,
	534, 1325,
	537, 1325,
	538, 1325,
	539, 1325,
	540, 1325,
	541, 1325,
	542, 1325,
	543, 1325,
	545, 1325,
	548, 1325,
	549, 1325,
	550, 1325,
	551, 1325,
	552, 1325,
	553, 1325,
	555, 1325,
	556, 1325,
	557, 1325,
	558, 1325,
	559, 1325,
	560, 1325,
	565, 1325,
	566, 1325,
	567, 1325,
	568, 1325,
	569, 1325,
	570, 1325,
	-2, 0,
	-1, 770,
	188, 2391,
	518, 2391,
	583, 2391,
	602, 2391,
	-2, 0,
	-1, 771,
	188, 2378,
	518, 2378,
	583, 2378,
	602, 2378,
	-2, 0,
	-1, 773,
	188, 2641,
	518, 2641,
	583, 2641,
	602, 2641,
	-2, 0,
	-1, 776,
	188, 2503,
	518, 2503,
	583, 2503,
	602, 2503,
	-2, 0,
	-1, 777,
	188, 2682,
	518, 2682,
	583, 2682,
	602, 2682,
	-2, 0,
	-1, 785,
	188, 2530,
	518, 2530,
	583, 2530,
	602, 2530,
	-2, 709,
	-1, 820,
	602, 2327,
	605, 2327,
	-2, 1002,
	-1, 821,
	602, 2329,
	605, 2329,
	-2, 1003,
	-1, 822,
	602, 2328,
	605, 2328,
	-2, 1004,
	-1, 823,
	605, 2253,
	-2, 1005,
	-1, 848,
	183, 264,
	-2, 0,
	-1, 872,
	43, 2300,
	-2, 0,
	-1, 873,
	555, 1303,
	-2, 1082,
	-1, 889,
	4, 1733,
	21, 1733,
	22, 1733,
	23, 1733,
	24, 1733,
	25, 1733,
	26, 1733,
	27, 1733,
	29, 1733,
	30, 1733,
	36, 1733,
	41, 1733,
	42, 1733,
	44, 1733,
	45, 1733,
	46, 1733,
	47, 1733,
	48, 1733,
	49, 1733,
	50, 1733,
	51, 1733,
	53, 1733,
	54, 1733,
	55, 1733,
	56, 1733,
	58, 1733,
	59, 1733,
	60, 1733,
	61, 1733,
	62, 1733,
	63, 1733,
	64, 1733,
	68, 1733,
	69, 1733,
	70, 1733,
	71, 1733,
	73, 1733,
	74, 1733,
	75, 1733,
	79, 1733,
	80, 1733,
	81, 1733,
	82, 1733,
	83, 1733,
	84, 1733,
	85, 1733,
	88, 1733,
	89, 1733,
	90, 1733,
	91, 1733,
	92, 1733,
	94, 1733,
	96, 1733,
	97, 1733,
	98, 1733,
	99, 1733,
	100, 1733,
	101, 1733,
	103, 1733,
	104, 1733,
	105, 1733,
	107, 1733,
	108, 1733,
	109, 1733,
	117, 1733,
	118, 1733,
	119, 1733,
	120, 1733,
	121, 1733,
	123, 1733,
	124, 1733,
	125, 1733,
	126, 1733,
	128, 1733,
	129, 1733,
	130, 1733,
	132, 1733,
	133, 1733,
	134, 1733,
	136, 1733,
	137, 1733,
	138, 1733,
	141, 1733,
	142, 1733,
	143, 1733,
	145, 1733,
	146, 1733,
	148, 1733,
	149, 1733,
	150, 1733,
	152, 1733,
	153, 1733,
	154, 1733,
	155, 1733,
	156, 1733,
	157, 1733,
	158, 1733,
	159, 1733,
	160, 1733,
	161, 1733,
	162, 1733,
	163, 1733,
	164, 1733,
	165, 1733,
	166, 1733,
	167, 1733,
	169, 1733,
	175, 1733,
	176, 1733,
	177, 1733,
	178, 1733,
	182, 1733,
	184, 1733,
	185, 1733,
	186, 1733,
	190, 1733,
	191, 1733,
	192, 1733,
	193, 1733,
	194, 1733,
	195, 1733,
	196, 1733,
	197, 1733,
	198, 1733,
	199, 1733,
	200, 1733,
	201, 1733,
	202, 1733,
	203, 1733,
	205, 1733,
	206, 1733,
	208, 1733,
	209, 1733,
	211, 1733,
	212, 1733,
	213, 1733,
	214, 1733,
	215, 1733,
	216, 1733,
	217, 1733,
	218, 1733,
	219, 1733,
	221, 1733,
	222, 1733,
	224, 1733,
	225, 1733,
	226, 1733,
	227, 1733,
	228, 1733,
	232, 1733,
	233, 1733,
	234, 1733,
	235, 1733,
	236, 1733,
	239, 1733,
	240, 1733,
	241, 1733,
	243, 1733,
	245, 1733,
	246, 1733,
	248, 1733,
	250, 1733,
	251, 1733,
	252, 1733,
	254, 1733,
	258, 1733,
	259, 1733,
	260, 1733,
	261, 1733,
	262, 1733,
	263, 1733,
	265, 1733,
	266, 1733,
	267, 1733,
	269, 1733,
	270, 1733,
	272, 1733,
	273, 1733,
	276, 1733,
	277, 1733,
	278, 1733,
	279, 1733,
	280, 1733,
	281, 1733,
	282, 1733,
	285, 1733,
	286, 1733,
	287, 1733,
	288, 1733,
	290, 1733,
	291, 1733,
	292, 1733,
	293, 1733,
	294, 1733,
	295, 1733,
	296, 1733,
	297, 1733,
	298, 1733,
	299, 1733,
	300, 1733,
	301, 1733,
	302, 1733,
	303, 1733,
	304, 1733,
	305, 1733,
	306, 1733,
	307, 1733,
	308, 1733,
	309, 1733,
	310, 1733,
	311, 1733,
	313, 1733,
	315, 1733,
	316, 1733,
	317, 1733,
	318, 1733,
	319, 1733,
	320, 1733,
	321, 1733,
	322, 1733,
	323, 1733,
	324, 1733,
	325, 1733,
	326, 1733,
	327, 1733,
	328, 1733,
	330, 1733,
	331, 1733,
	333, 1733,
	335, 1733,
	336, 1733,
	338, 1733,
	339, 1733,
	340, 1733,
	341, 1733,
	342, 1733,
	345, 1733,
	349, 1733,
	350, 1733,
	351, 1733,
	354, 1733,
	355, 1733,
	356, 1733,
	358, 1733,
	360, 1733,
	361, 1733,
	362, 1733,
	363, 1733,
	364, 1733,
	365, 1733,
	366, 1733,
	367, 1733,
	368, 1733,
	369, 1733,
	370, 1733,
	371, 1733,
	372, 1733,
	374, 1733,
	375, 1733,
	376, 1733,
	377, 1733,
	378, 1733,
	379, 1733,
	380, 1733,
	381, 1733,
	382, 1733,
	383, 1733,
	384, 1733,
	385, 1733,
	386, 1733,
	387, 1733,
	388, 1733,
	390, 1733,
	391, 1733,
	393, 1733,
	394, 1733,
	395, 1733,
	396, 1733,
	397, 1733,
	398, 1733,
	399, 1733,
	400, 1733,
	401, 1733,
	402, 1733,
	403, 1733,
	404, 1733,
	405, 1733,
	407, 1733,
	409, 1733,
	410, 1733,
	411, 1733,
	417, 1733,
	419, 1733,
	420, 1733,
	421, 1733,
	422, 1733,
	423, 1733,
	424, 1733,
	425, 1733,
	426, 1733,
	427, 1733,
	428, 1733,
	430, 1733,
	431, 1733,
	432, 1733,
	434, 1733,
	435, 1733,
	436, 1733,
	437, 1733,
	438, 1733,
	439, 1733,
	440, 1733,
	442, 1733,
	443, 1733,
	444, 1733,
	445, 1733,
	446, 1733,
	447, 1733,
	448, 1733,
	449, 1733,
	450, 1733,
	451, 1733,
	452, 1733,
	453, 1733,
	455, 1733,
	456, 1733,
	457, 1733,
	458, 1733,
	459, 1733,
	460, 1733,
	462, 1733,
	463, 1733,
	464, 1733,
	465, 1733,
	466, 1733,
	467, 1733,
	469, 1733,
	470, 1733,
	471, 1733,
	472, 1733,
	473, 1733,
	474, 1733,
	475, 1733,
	476, 1733,
	478, 1733,
	480, 1733,
	481, 1733,
	482, 1733,
	483, 1733,
	484, 1733,
	485, 1733,
	486, 1733,
	487, 1733,
	488, 1733,
	489, 1733,
	490, 1733,
	491, 1733,
	492, 1733,
	493, 1733,
	494, 1733,
	495, 1733,
	497, 1733,
	498, 1733,
	500, 1733,
	501, 1733,
	503, 1733,
	504, 1733,
	505, 1733,
	506, 1733,
	507, 1733,
	508, 1733,
	509, 1733,
	510, 1733,
	511, 1733,
	513, 1733,
	514, 1733,
	515, 1733,
	516, 1733,
	517, 1733,
	519, 1733,
	521, 1733,
	522, 1733,
	523, 1733,
	524, 1733,
	525, 1733,
	526, 1733,
	528, 1733,
	529, 1733,
	530, 1733,
	531, 1733,
	533, 1733,
	534, 1733,
	537, 1733,
	538, 1733,
	539, 1733,
	540, 1733,
	541, 1733,
	542, 1733,
	543, 1733,
	545, 1733,
	548, 1733,
	549, 1733,
	550, 1733,
	551, 1733,
	552, 1733,
	553, 1733,
	555, 1733,
	556, 1733,
	557, 1733,
	558, 1733,
	559, 1733,
	560, 1733,
	565, 1733,
	566, 1733,
	567, 1733,
	568, 1733,
	569, 1733,
	570, 1733,
	-2, 0,
	-1, 899,
	262, 415,
	-2, 0,
	-1, 976,
	395, 884,
	460, 884,
	501, 884,
	523, 884,
	-2, 0,
	-1, 977,
	395, 883,
	460, 883,
	501, 883,
	523, 883,
	-2, 819,
	-1, 981,
	1, 936,
	599, 936,
	601, 936,
	603, 936,
	-2, 0,
	-1, 983,
	1, 858,
	599, 858,
	601, 858,
	603, 858,
	-2, 0,
	-1, 984,
	1, 862,
	599, 862,
	601, 862,
	603, 862,
	-2, 0,
	-1, 985,
	1, 1001,
	183, 1001,
	599, 1001,
	601, 1001,
	603, 1001,
	-2, 0,
	-1, 993,
	1, 889,
	599, 889,
	601, 889,
	603, 889,
	-2, 0,
	-1, 1000,
	1, 936,
	599, 936,
	601, 936,
	603, 936,
	-2, 0,
	-1, 1001,
	1, 938,
	599, 938,
	601, 938,
	603, 938,
	-2, 0,
	-1, 1002,
	1, 941,
	599, 941,
	601, 941,
	603, 941,
	-2, 0,
	-1, 1008,
	1, 965,
	599, 965,
	601, 965,
	603, 965,
	-2, 0,
	-1, 1009,
	1, 967,
	599, 967,
	601, 967,
	603, 967,
	-2, 0,
	-1, 1014,
	1, 995,
	599, 995,
	601, 995,
	603, 995,
	-2, 0,
	-1, 1064,
	170, 1604,
	183, 1604,
	275, 1604,
	343, 1604,
	-2, 1540,
	-1, 1079,
	170, 1603,
	183, 1603,
	275, 1603,
	343, 1603,
	-2, 1537,
	-1, 1106,
	602, 2326,
	-2, 717,
	-1, 1135,
	5, 2318,
	600, 2316,
	-2, 2307,
	-1, 1143,
	5, 2339,
	600, 2336,
	-2, 2327,
	-1, 1144,
	5, 2340,
	600, 2337,
	-2, 2328,
	-1, 1152,
	602, 2324,
	-2, 2306,
	-1, 1153,
	600, 2766,
	-2, 2325,
	-1, 1176,
	600, 2765,
	-2, 2341,
	-1, 1177,
	5, 1808,
	-2, 2736,
	-1, 1178,
	5, 1809,
	-2, 2737,
	-1, 1179,
	5, 1810,
	-2, 2751,
	-1, 1180,
	5, 1811,
	-2, 2715,
	-1, 1181,
	5, 1812,
	-2, 2749,
	-1, 1182,
	5, 1820,
	-2, 2728,
	-1, 1183,
	5, 1807,
	-2, 2724,
	-1, 1184,
	5, 1807,
	-2, 2723,
	-1, 1185,
	5, 1807,
	-2, 2742,
	-1, 1186,
	5, 1818,
	-2, 2717,
	-1, 1187,
	5, 1823,
	-2, 2716,
	-1, 1188,
	5, 1825,
	-2, 2761,
	-1, 1191,
	5, 1847,
	-2, 2754,
	-1, 1192,
	5, 1839,
	-2, 2755,
	-1, 1193,
	5, 1847,
	-2, 2756,
	-1, 1194,
	5, 1843,
	-2, 2757,
	-1, 1195,
	5, 1793,
	-2, 2729,
	-1, 1196,
	5, 1794,
	-2, 2730,
	-1, 1197,
	5, 1795,
	-2, 2718,
	-1, 1225,
	5, 1830,
	-2, 2762,
	-1, 1226,
	5, 1831,
	-2, 2752,
	-1, 1227,
	5, 1832,
	556, 1832,
	-2, 2719,
	-1, 1228,
	5, 1833,
	556, 1833,
	-2, 2720,
	-1, 1265,
	600, 2336,
	-2, 2327,
	-1, 1266,
	600, 2337,
	-2, 2328,
	-1, 1367,
	188, 2682,
	518, 2682,
	583, 2682,
	602, 2682,
	-2, 0,
	-1, 1372,
	1, 694,
	603, 694,
	-2, 1452,
	-1, 1500,
	362, 2301,
	419, 2301,
	462, 2301,
	593, 2301,
	-2, 2291,
	-1, 1511,
	604, 2301,
	-2, 2303,
	-1, 1519,
	1, 1300,
	424, 1264,
	462, 1264,
	577, 1264,
	599, 1300,
	601, 1300,
	603, 1300,
	-2, 1589,
	-1, 1525,
	204, 1397,
	223, 1397,
	432, 1397,
	-2, 0,
	-1, 1573,
	403, 1081,
	555, 1081,
	-2, 410,
	-1, 1590,
	43, 2299,
	-2, 1047,
	-1, 1597,
	1, 1300,
	599, 1300,
	601, 1300,
	603, 1300,
	-2, 1589,
	-1, 1605,
	4, 1325,
	21, 1325,
	22, 1325,
	23, 1325,
	24, 1325,
	25, 1325,
	26, 1325,
	27, 1325,
	29, 1325,
	30, 1325,
	36, 1325,
	41, 1325,
	42, 1325,
	44, 1325,
	45, 1325,
	46, 1325,
	47, 1325,
	48, 1325,
	49, 1325,
	50, 1325,
	51, 1325,
	53, 1325,
	54, 1325,
	55, 1325,
	56, 1325,
	58, 1325,
	59, 1325,
	60, 1325,
	61, 1325,
	62, 1325,
	63, 1325,
	64, 1325,
	68, 1325,
	69, 1325,
	70, 1325,
	71, 1325,
	73, 1325,
	74, 1325,
	75, 1325,
	79, 1325,
	80, 1325,
	81, 1325,
	82, 1325,
	83, 1325,
	84, 1325,
	85, 1325,
	88, 1325,
	89, 1325,
	90, 1325,
	91, 1325,
	92, 1325,
	94, 1325,
	96, 1325,
	97, 1325,
	98, 1325,
	99, 1325,
	100, 1325,
	101, 1325,
	103, 1325,
	104, 1325,
	105, 1325,
	107, 1325,
	108, 1325,
	109, 1325,
	117, 1325,
	118, 1325,
	119, 1325,
	120, 1325,
	121, 1325,
	123, 1325,
	124, 1325,
	125, 1325,
	126, 1325,
	128, 1325,
	129, 1325,
	130, 1325,
	132, 1325,
	133, 1325,
	134, 1325,
	136, 1325,
	137, 1325,
	138, 1325,
	141, 1325,
	142, 1325,
	143, 1325,
	145, 1325,
	146, 1325,
	148, 1325,
	149, 1325,
	150, 1325,
	152, 1325,
	153, 1325,
	154, 1325,
	155, 1325,
	156, 1325,
	157, 1325,
	158, 1325,
	159, 1325,
	160, 1325,
	161, 1325,
	162, 1325,
	163, 1325,
	164, 1325,
	165, 1325,
	166, 1325,
	167, 1325,
	175, 1325,
	176, 1325,
	177, 1325,
	178, 1325,
	182, 1325,
	184, 1325,
	185, 1325,
	186, 1325,
	190, 1325,
	191, 1325,
	192, 1325,
	193, 1325,
	194, 1325,
	195, 1325,
	196, 1325,
	197, 1325,
	198, 1325,
	199, 1325,
	200, 1325,
	201, 1325,
	202, 1325,
	203, 1325,
	205, 1325,
	206, 1325,
	208, 1325,
	209, 1325,
	211, 1325,
	212, 1325,
	213, 1325,
	214, 1325,
	215, 1325,
	216, 1325,
	217, 1325,
	218, 1325,
	219, 1325,
	221, 1325,
	222, 1325,
	224, 1325,
	225, 1325,
	226, 1325,
	227, 1325,
	228, 1325,
	233, 1325,
	234, 1325,
	235, 1325,
	236, 1325,
	239, 1325,
	240, 1325,
	241, 1325,
	243, 1325,
	245, 1325,
	246, 1325,
	248, 1325,
	250, 1325,
	251, 1325,
	252, 1325,
	254, 1325,
	258, 1325,
	259, 1325,
	260, 1325,
	261, 1325,
	262, 1325,
	263, 1325,
	265, 1325,
	266, 1325,
	267, 1325,
	269, 1325,
	270, 1325,
	272, 1325,
	273, 1325,
	276, 1325,
	277, 1325,
	278, 1325,
	279, 1325,
	280, 1325,
	281, 1325,
	282, 1325,
	285, 1325,
	286, 1325,
	287, 1325,
	288, 1325,
	290, 1325,
	291, 1325,
	292, 1325,
	293, 1325,
	294, 1325,
	295, 1325,
	296, 1325,
	297, 1325,
	298, 1325,
	299, 1325,
	300, 1325,
	301, 1325,
	302, 1325,
	303, 1325,
	304, 1325,
	305, 1325,
	306, 1325,
	307, 1325,
	308, 1325,
	309, 1325,
	310, 1325,
	311, 1325,
	313, 1325,
	315, 1325,
	316, 1325,
	317, 1325,
	318, 1325,
	319, 1325,
	320, 1325,
	321, 1325,
	322, 1325,
	323, 1325,
	324, 1325,
	325, 1325,
	326, 1325,
	327, 1325,
	328, 1325,
	330, 1325,
	331, 1325,
	335, 1325,
	336, 1325,
	338, 1325,
	339, 1325,
	340, 1325,
	341, 1325,
	342, 1325,
	345, 1325,
	347, 1325,
	349, 1325,
	350, 1325,
	351, 1325,
	354, 1325,
	355, 1325,
	356, 1325,
	358, 1325,
	360, 1325,
	361, 1325,
	362, 1325,
	363, 1325,
	364, 1325,
	365, 1325,
	366, 1325,
	367, 1325,
	368, 1325,
	369, 1325,
	370, 1325,
	371, 1325,
	372, 1325,
	374, 1325,
	375, 1325,
	376, 1325,
	377, 1325,
	378, 1325,
	379, 1325,
	380, 1325,
	381, 1325,
	382, 1325,
	383, 1325,
	384, 1325,
	385, 1325,
	386, 1325,
	387, 1325,
	388, 1325,
	390, 1325,
	391, 1325,
	393, 1325,
	394, 1325,
	395, 1325,
	396, 1325,
	397, 1325,
	398, 1325,
	399, 1325,
	400, 1325,
	401, 1325,
	402, 1325,
	403, 1325,
	404, 1325,
	405, 1325,
	407, 1325,
	409, 1325,
	410, 1325,
	411, 1325,
	417, 1325,
	419, 1325,
	420, 1325,
	421, 1325,
	422, 1325,
	423, 1325,
	424, 1325,
	425, 1325,
	426, 1325,
	427, 1325,
	428, 1325,
	430, 1325,
	431, 1325,
	432, 1325,
	434, 1325,
	435, 1325,
	436, 1325,
	437, 1325,
	438, 1325,
	439, 1325,
	440, 1325,
	442, 1325,
	443, 1325,
	444, 1325,
	445, 1325,
	446, 1325,
	447, 1325,
	448, 1325,
	449, 1325,
	450, 1325,
	451, 1325,
	452, 1325,
	453, 1325,
	455, 1325,
	456, 1325,
	457, 1325,
	458, 1325,
	459, 1325,
	460, 1325,
	462, 1325,
	463, 1325,
	464, 1325,
	465, 1325,
	466, 1325,
	467, 1325,
	469, 1325,
	470, 1325,
	471, 1325,
	472, 1325,
	473, 1325,
	474, 1325,
	475, 1325,
	476, 1325,
	478, 1325,
	480, 1325,
	481, 1325,
	482, 1325,
	483, 1325,
	484, 1325,
	485, 1325,
	486, 1325,
	487, 1325,
	488, 1325,
	489, 1325,
	490, 1325,
	491, 1325,
	492, 1325,
	493, 1325,
	494, 1325,
	495, 1325,
	497, 1325,
	498, 1325,
	500, 1325,
	501, 1325,
	503, 1325,
	504, 1325,
	505, 1325,
	506, 1325,
	507, 1325,
	508, 1325,
	509, 1325,
	510, 1325,
	511, 1325,
	513, 1325,
	514, 1325,
	515, 1325,
	516, 1325,
	517, 1325,
	519, 1325,
	521, 1325,
	522, 1325,
	523, 1325,
	524, 1325,
	525, 1325,
	526, 1325,
	528, 1325,
	529, 1325,
	530, 1325,
	531, 1325,
	533, 1325,
	534, 1325,
	537, 1325,
	538, 1325,
	539, 1325,
	540, 1325,
	541, 1325,
	542, 1325,
	543, 1325,
	545, 1325,
	548, 1325,
	549, 1325,
	550, 1325,
	551, 1325,
	552, 1325,
	553, 1325,
	555, 1325,
	556, 1325,
	557, 1325,
	558, 1325,
	559, 1325,
	560, 1325,
	565, 1325,
	566, 1325,
	567, 1325,
	568, 1325,
	569, 1325,
	570, 1325,
	-2, 0,
	-1, 1628,
	1, 555,
	599, 555,
	601, 555,
	603, 555,
	-2, 1560,
	-1, 1631,
	4, 2760,
	11, 2760,
	12, 2760,
	14, 2760,
	15, 2760,
	16, 2760,
	17, 2760,
	18, 2760,
	19, 2760,
	21, 2760,
	22, 2760,
	23, 2760,
	24, 2760,
	25, 2760,
	26, 2760,
	27, 2760,
	29, 2760,
	30, 2760,
	33, 2760,
	34, 2760,
	36, 2760,
	38, 2760,
	41, 2760,
	42, 2760,
	44, 2760,
	45, 2760,
	46, 2760,
	47, 2760,
	48, 2760,
	49, 2760,
	50, 2760,
	51, 2760,
	53, 2760,
	54, 2760,
	55, 2760,
	56, 2760,
	58, 2760,
	59, 2760,
	60, 2760,
	61, 2760,
	62, 2760,
	63, 2760,
	64, 2760,
	67, 2760,
	68, 2760,
	69, 2760,
	70, 2760,
	71, 2760,
	73, 2760,
	74, 2760,
	75, 2760,
	76, 2760,
	79, 2760,
	80, 2760,
	81, 2760,
	82, 2760,
	83, 2760,
	84, 2760,
	85, 2760,
	86, 2760,
	88, 2760,
	89, 2760,
	90, 2760,
	91, 2760,
	92, 2760,
	94, 2760,
	95, 2760,
	96, 2760,
	97, 2760,
	98, 2760,
	99, 2760,
	100, 2760,
	101, 2760,
	103, 2760,
	104, 2760,
	105, 2760,
	106, 2760,
	107, 2760,
	108, 2760,
	109, 2760,
	117, 2760,
	118, 2760,
	119, 2760,
	120, 2760,
	121, 2760,
	123, 2760,
	124, 2760,
	125, 2760,
	126, 2760,
	128, 2760,
	129, 2760,
	130, 2760,
	132, 2760,
	133, 2760,
	134, 2760,
	136, 2760,
	137, 2760,
	138, 2760,
	141, 2760,
	142, 2760,
	143, 2760,
	145, 2760,
	146, 2760,
	148, 2760,
	149, 2760,
	150, 2760,
	152, 2760,
	153, 2760,
	154, 2760,
	155, 2760,
	156, 2760,
	157, 2760,
	158, 2760,
	159, 2760,
	160, 2760,
	161, 2760,
	162, 2760,
	163, 2760,
	164, 2760,
	165, 2760,
	166, 2760,
	167, 2760,
	171, 2760,
	172, 2760,
	173, 2760,
	174, 2760,
	175, 2760,
	176, 2760,
	177, 2760,
	178, 2760,
	181, 2760,
	182, 2760,
	184, 2760,
	185, 2760,
	186, 2760,
	189, 2760,
	190, 2760,
	191, 2760,
	192, 2760,
	193, 2760,
	194, 2760,
	195, 2760,
	196, 2760,
	197, 2760,
	198, 2760,
	199, 2760,
	200, 2760,
	201, 2760,
	202, 2760,
	203, 2760,
	205, 2760,
	206, 2760,
	208, 2760,
	209, 2760,
	211, 2760,
	212, 2760,
	213, 2760,
	214, 2760,
	215, 2760,
	216, 2760,
	217, 2760,
	218, 2760,
	219, 2760,
	220, 2760,
	221, 2760,
	222, 2760,
	223, 2760,
	224, 2760,
	225, 2760,
	226, 2760,
	227, 2760,
	228, 2760,
	230, 2760,
	231, 2760,
	233, 2760,
	234, 2760,
	235, 2760,
	236, 2760,
	238, 2760,
	239, 2760,
	240, 2760,
	241, 2760,
	243, 2760,
	245, 2760,
	246, 2760,
	247, 2760,
	248, 2760,
	249, 2760,
	250, 2760,
	251, 2760,
	252, 2760,
	253, 2760,
	254, 2760,
	256, 2760,
	257, 2760,
	258, 2760,
	259, 2760,
	260, 2760,
	261, 2760,
	262, 2760,
	263, 2760,
	265, 2760,
	266, 2760,
	267, 2760,
	269, 2760,
	270, 2760,
	271, 2760,
	272, 2760,
	273, 2760,
	274, 2760,
	276, 2760,
	277, 2760,
	278, 2760,
	279, 2760,
	280, 2760,
	281, 2760,
	282, 2760,
	285, 2760,
	286, 2760,
	287, 2760,
	288, 2760,
	289, 2760,
	290, 2760,
	291, 2760,
	292, 2760,
	293, 2760,
	294, 2760,
	295, 2760,
	296, 2760,
	297, 2760,
	298, 2760,
	299, 2760,
	300, 2760,
	301, 2760,
	302, 2760,
	303, 2760,
	304, 2760,
	305, 2760,
	306, 2760,
	307, 2760,
	308, 2760,
	309, 2760,
	310, 2760,
	311, 2760,
	313, 2760,
	314, 2760,
	315, 2760,
	316, 2760,
	317, 2760,
	318, 2760,
	319, 2760,
	320, 2760,
	321, 2760,
	322, 2760,
	323, 2760,
	324, 2760,
	325, 2760,
	326, 2760,
	327, 2760,
	328, 2760,
	330, 2760,
	331, 2760,
	334, 2760,
	335, 2760,
	336, 2760,
	338, 2760,
	339, 2760,
	340, 2760,
	341, 2760,
	342, 2760,
	345, 2760,
	349, 2760,
	350, 2760,
	351, 2760,
	352, 2760,
	354, 2760,
	355, 2760,
	356, 2760,
	358, 2760,
	360, 2760,
	361, 2760,
	362, 2760,
	363, 2760,
	364, 2760,
	365, 2760,
	366, 2760,
	367, 2760,
	368, 2760,
	369, 2760,
	370, 2760,
	371, 2760,
	372, 2760,
	374, 2760,
	375, 2760,
	376, 2760,
	377, 2760,
	378, 2760,
	379, 2760,
	380, 2760,
	381, 2760,
	382, 2760,
	383, 2760,
	384, 2760,
	385, 2760,
	386, 2760,
	387, 2760,
	388, 2760,
	390, 2760,
	391, 2760,
	393, 2760,
	394, 2760,
	395, 2760,
	396, 2760,
	397, 2760,
	398, 2760,
	399, 2760,
	400, 2760,
	401, 2760,
	402, 2760,
	403, 2760,
	404, 2760,
	405, 2760,
	407, 2760,
	409, 2760,
	410, 2760,
	411, 2760,
	417, 2760,
	418, 2760,
	419, 2760,
	420, 2760,
	421, 2760,
	422, 2760,
	423, 2760,
	424, 2760,
	425, 2760,
	426, 2760,
	427, 2760,
	428, 2760,
	430, 2760,
	431, 2760,
	432, 2760,
	433, 2760,
	434, 2760,
	435, 2760,
	436, 2760,
	437, 2760,
	438, 2760,
	439, 2760,
	440, 2760,
	441, 2760,
	442, 2760,
	443, 2760,
	444, 2760,
	445, 2760,
	446, 2760,
	447, 2760,
	448, 2760,
	449, 2760,
	450, 2760,
	451, 2760,
	452, 2760,
	453, 2760,
	455, 2760,
	456, 2760,
	457, 2760,
	458, 2760,
	459, 2760,
	460, 2760,
	462, 2760,
	463, 2760,
	464, 2760,
	465, 2760,
	466, 2760,
	467, 2760,
	468, 2760,
	469, 2760,
	470, 2760,
	471, 2760,
	472, 2760,
	473, 2760,
	474, 2760,
	475, 2760,
	476, 2760,
	478, 2760,
	480, 2760,
	481, 2760,
	482, 2760,
	483, 2760,
	484, 2760,
	485, 2760,
	486, 2760,
	487, 2760,
	488, 2760,
	489, 2760,
	490, 2760,
	491, 2760,
	492, 2760,
	493, 2760,
	494, 2760,
	495, 2760,
	497, 2760,
	498, 2760,
	499, 2760,
	500, 2760,
	501, 2760,
	503, 2760,
	504, 2760,
	505, 2760,
	506, 2760,
	507, 2760,
	508, 2760,
	509, 2760,
	510, 2760,
	511, 2760,
	513, 2760,
	514, 2760,
	515, 2760,
	516, 2760,
	517, 2760,
	519, 2760,
	521, 2760,
	522, 2760,
	523, 2760,
	524, 2760,
	525, 2760,
	526, 2760,
	528, 2760,
	529, 2760,
	530, 2760,
	531, 2760,
	533, 2760,
	534, 2760,
	537, 2760,
	538, 2760,
	539, 2760,
	540, 2760,
	541, 2760,
	542, 2760,
	543, 2760,
	545, 2760,
	548, 2760,
	549, 2760,
	550, 2760,
	551, 2760,
	552, 2760,
	553, 2760,
	555, 2760,
	556, 2760,
	557, 2760,
	558, 2760,
	559, 2760,
	560, 2760,
	565, 2760,
	566, 2760,
	567, 2760,
	568, 2760,
	569, 2760,
	570, 2760,
	571, 2760,
	573, 2760,
	581, 2760,
	582, 2760,
	583, 2760,
	584, 2760,
	585, 2760,
	586, 2760,
	588, 2760,
	589, 2760,
	590, 2760,
	591, 2760,
	592, 2760,
	593, 2760,
	594, 2760,
	595, 2760,
	596, 2760,
	598, 2760,
	601, 2760,
	602, 2760,
	604, 2760,
	605, 2760,
	-2, 0,
	-1, 1636,
	188, 2641,
	518, 2641,
	583, 2641,
	602, 2641,
	-2, 0,
	-1, 1689,
	395, 884,
	460, 884,
	501, 884,
	523, 884,
	-2, 0,
	-1, 1700,
	1, 1397,
	599, 1397,
	601, 1397,
	603, 1397,
	-2, 0,
	-1, 1717,
	1, 879,
	599, 879,
	601, 879,
	603, 879,
	-2, 0,
	-1, 1718,
	1, 923,
	599, 923,
	601, 923,
	603, 923,
	-2, 0,
	-1, 1719,
	1, 931,
	599, 931,
	601, 931,
	603, 931,
	-2, 0,
	-1, 1722,
	1, 888,
	599, 888,
	601, 888,
	603, 888,
	-2, 0,
	-1, 1724,
	1, 894,
	599, 894,
	601, 894,
	603, 894,
	-2, 0,
	-1, 1727,
	1, 890,
	599, 890,
	601, 890,
	603, 890,
	-2, 0,
	-1, 1732,
	1, 904,
	599, 904,
	601, 904,
	603, 904,
	-2, 0,
	-1, 1763,
	1, 2624,
	599, 2624,
	601, 2624,
	602, 2624,
	603, 2624,
	-2, 0,
	-1, 1767,
	1, 976,
	599, 976,
	601, 976,
	603, 976,
	-2, 0,
	-1, 1782,
	1, 1447,
	603, 1447,
	-2, 1452,
	-1, 1785,
	170, 1603,
	183, 1603,
	275, 1603,
	343, 1603,
	-2, 1541,
	-1, 1885,
	151, 1562,
	170, 1562,
	183, 1562,
	242, 1562,
	275, 1562,
	343, 1562,
	353, 1562,
	535, 1562,
	-2, 2012,
	-1, 1946,
	601, 2187,
	-2, 0,
	-1, 1981,
	151, 1562,
	170, 1562,
	183, 1562,
	242, 1562,
	275, 1562,
	343, 1562,
	353, 1562,
	535, 1562,
	-2, 1694,
	-1, 2018,
	518, 2638,
	602, 2638,
	605, 2638,
	-2, 0,
	-1, 2035,
	600, 1835,
	-2, 1823,
	-1, 2067,
	188, 2638,
	602, 2638,
	605, 2638,
	-2, 0,
	-1, 2109,
	1, 696,
	603, 696,
	-2, 1452,
	-1, 2249,
	223, 259,
	-2, 2335,
	-1, 2250,
	223, 260,
	-2, 313,
	-1, 2360,
	1, 881,
	599, 881,
	601, 881,
	603, 881,
	-2, 0,
	-1, 2361,
	1, 925,
	599, 925,
	601, 925,
	603, 925,
	-2, 0,
	-1, 2362,
	1, 933,
	599, 933,
	601, 933,
	603, 933,
	-2, 0,
	-1, 2363,
	1, 978,
	599, 978,
	601, 978,
	603, 978,
	-2, 0,
	-1, 2404,
	1, 906,
	599, 906,
	601, 906,
	603, 906,
	-2, 0,
	-1, 2422,
	1, 961,
	599, 961,
	601, 961,
	603, 961,
	-2, 0,
	-1, 2467,
	439, 1630,
	440, 1630,
	-2, 1868,
	-1, 2498,
	14, 0,
	15, 0,
	16, 0,
	581, 0,
	582, 0,
	583, 0,
	-2, 1888,
	-1, 2499,
	14, 0,
	15, 0,
	16, 0,
	581, 0,
	582, 0,
	583, 0,
	-2, 1889,
	-1, 2500,
	95, 0,
	256, 0,
	257, 0,
	585, 0,
	586, 0,
	-2, 1890,
	-1, 2501,
	95, 0,
	256, 0,
	257, 0,
	585, 0,
	586, 0,
	-2, 1891,
	-1, 2502,
	95, 0,
	256, 0,
	257, 0,
	585, 0,
	586, 0,
	-2, 1892,
	-1, 2503,
	95, 0,
	256, 0,
	257, 0,
	585, 0,
	586, 0,
	-2, 1893,
	-1, 2504,
	95, 0,
	256, 0,
	257, 0,
	585, 0,
	586, 0,
	-2, 1894,
	-1, 2505,
	14, 0,
	15, 0,
	16, 0,
	581, 0,
	582, 0,
	583, 0,
	-2, 1895,
	-1, 2517,
	14, 0,
	15, 0,
	16, 0,
	581, 0,
	582, 0,
	583, 0,
	-2, 1907,
	-1, 2518,
	14, 0,
	15, 0,
	16, 0,
	581, 0,
	582, 0,
	583, 0,
	-2, 1908,
	-1, 2519,
	14, 0,
	15, 0,
	16, 0,
	581, 0,
	582, 0,
	583, 0,
	-2, 1909,
	-1, 2523,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	220, 0,
	223, 0,
	274, 0,
	468, 0,
	571, 0,
	584, 0,
	-2, 1916,
	-1, 2529,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	220, 0,
	223, 0,
	274, 0,
	468, 0,
	571, 0,
	584, 0,
	-2, 1920,
	-1, 2531,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	220, 0,
	223, 0,
	274, 0,
	468, 0,
	571, 0,
	584, 0,
	-2, 1928,
	-1, 2532,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	220, 0,
	223, 0,
	274, 0,
	468, 0,
	571, 0,
	584, 0,
	-2, 1929,
	-1, 2533,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	220, 0,
	223, 0,
	274, 0,
	468, 0,
	571, 0,
	584, 0,
	-2, 1930,
	-1, 2534,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	220, 0,
	223, 0,
	274, 0,
	468, 0,
	571, 0,
	584, 0,
	-2, 1931,
	-1, 2708,
	5, 2339,
	188, 2198,
	600, 2336,
	-2, 2327,
	-1, 2709,
	188, 2199,
	-2, 2711,
	-1, 2710,
	188, 2200,
	-2, 2529,
	-1, 2711,
	188, 2201,
	-2, 2409,
	-1, 2712,
	188, 2202,
	-2, 2466,
	-1, 2713,
	188, 2203,
	-2, 2514,
	-1, 2714,
	188, 2204,
	-2, 2636,
	-1, 2715,
	188, 2205,
	-2, 1995,
	-1, 2786,
	1, 1695,
	2, 1695,
	106, 1695,
	151, 1695,
	170, 1695,
	183, 1695,
	189, 1695,
	207, 1695,
	210, 1695,
	238, 1695,
	242, 1695,
	253, 1695,
	271, 1695,
	275, 1695,
	314, 1695,
	343, 1695,
	347, 1695,
	353, 1695,
	429, 1695,
	433, 1695,
	535, 1695,
	546, 1695,
	562, 1695,
	563, 1695,
	564, 1695,
	574, 1695,
	599, 1695,
	601, 1695,
	603, 1695,
	605, 1695,
	-2, 1694,
	-1, 2799,
	600, 2308,
	-2, 2322,
	-1, 2801,
	1, 330,
	562, 330,
	-2, 1589,
	-1, 2830,
	600, 1834,
	-2, 1824,
	-1, 3015,
	1, 1300,
	424, 1264,
	462, 1264,
	577, 1264,
	599, 1300,
	601, 1300,
	603, 1300,
	-2, 1589,
	-1, 3201,
	348, 1633,
	-2, 2750,
	-1, 3202,
	348, 1634,
	-2, 2621,
	-1, 3206,
	439, 2264,
	440, 2264,
	-2, 1993,
	-1, 3207,
	439, 2268,
	440, 2268,
	-2, 1994,
	-1, 3208,
	439, 2265,
	440, 2265,
	-2, 1993,
	-1, 3209,
	439, 2269,
	440, 2269,
	-2, 1994,
	-1, 3222,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	220, 0,
	223, 0,
	274, 0,
	468, 0,
	571, 0,
	584, 0,
	-2, 1918,
	-1, 3223,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	220, 0,
	223, 0,
	274, 0,
	468, 0,
	571, 0,
	584, 0,
	-2, 1922,
	-1, 3229,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	220, 0,
	223, 0,
	274, 0,
	468, 0,
	571, 0,
	584, 0,
	-2, 1924,
	-1, 3453,
	1, 691,
	599, 691,
	601, 691,
	603, 691,
	-2, 1452,
	-1, 3618,
	43, 2299,
	-2, 1048,
	-1, 3623,
	1, 1300,
	599, 1300,
	601, 1300,
	603, 1300,
	-2, 1589,
	-1, 3735,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	220, 0,
	223, 0,
	274, 0,
	468, 0,
	571, 0,
	584, 0,
	-2, 1926,
	-1, 3742,
	247, 0,
	249, 0,
	334, 0,
	-2, 1945,
	-1, 3810,
	14, 0,
	15, 0,
	16, 0,
	581, 0,
	582, 0,
	583, 0,
	-2, 1974,
	-1, 3811,
	14, 0,
	15, 0,
	16, 0,
	581, 0,
	582, 0,
	583, 0,
	-2, 1975,
	-1, 3812,
	14, 0,
	15, 0,
	16, 0,
	581, 0,
	582, 0,
	583, 0,
	-2, 1976,
	-1, 3816,
	14, 0,
	15, 0,
	16, 0,
	581, 0,
	582, 0,
	583, 0,
	-2, 1980,
	-1, 3817,
	14, 0,
	15, 0,
	16, 0,
	581, 0,
	582, 0,
	583, 0,
	-2, 1981,
	-1, 3818,
	14, 0,
	15, 0,
	16, 0,
	581, 0,
	582, 0,
	583, 0,
	-2, 1982,
	-1, 3866,
	600, 2309,
	-2, 2323,
	-1, 4040,
	602, 2867,
	-2, 1515,
	-1, 4102,
	247, 0,
	249, 0,
	334, 0,
	-2, 1946,
	-1, 4105,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	220, 0,
	223, 0,
	274, 0,
	468, 0,
	571, 0,
	584, 0,
	-2, 1949,
	-1, 4106,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	220, 0,
	223, 0,
	274, 0,
	468, 0,
	571, 0,
	584, 0,
	-2, 1951,
	-1, 4206,
	602, 2324,
	-2, 1335,
	-1, 4361,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	220, 0,
	223, 0,
	274, 0,
	468, 0,
	571, 0,
	584, 0,
	-2, 1950,
	-1, 4362,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	220, 0,
	223, 0,
	274, 0,
	468, 0,
	571, 0,
	584, 0,
	-2, 1952,
	-1, 4373,
	247, 0,
	-2, 1985,
	-1, 4561,
	247, 0,
	-2, 1986,
	-1, 4762,
	50, 0,
	220, 0,
	274, 0,
	468, 0,
	571, 0,
	584, 0,
	-2, 2714,
}

const sqlPrivate = 57344

const sqlLast = 134801

var sqlAct = [...]int{
	275, 4958, 3607, 4483, 4595, 4866, 4879, 3360, 4820, 4755,
	3103, 3090, 4423, 4603, 4743, 4772, 4631, 2892, 4761, 3606,
	4895, 4754, 4652, 1534, 2159, 4202, 4627, 4688, 2246, 4730,
	4711, 4708, 4774, 4773, 4833, 4514, 4490, 4468, 2323, 4565,
	4405, 3775, 4760, 4310, 2936, 3060, 2961, 4315, 4251, 4276,
	4382, 4350, 2477, 1339, 1258, 4428, 1343, 3727, 3640, 4032,
	3474, 4024, 4297, 4290, 1269, 3960, 4299, 4183, 4085, 1332,
	3215, 4203, 4499, 711, 2022, 822, 2335, 3534, 1794, 2091,
	2546, 1089, 3634, 4528, 1080, 4005, 4320, 3987, 2741, 3989,
	2296, 2485, 3602, 2167, 3477, 1987, 3046, 3591, 2078, 3681,
	3079, 1406, 3683, 822, 782, 3114, 3112, 1497, 3584, 3583,
	2005, 3127, 3869, 3405, 4084, 3383, 3375, 3122, 1697, 1334,
	2333, 4378, 1325, 897, 4, 1654, 3366, 4141, 722, 901,
	3343, 3074, 3105, 1088, 182, 3364, 2478, 2235, 2974, 3076,
	3111, 3091, 1956, 2233, 3022, 4867, 3496, 2178, 2894, 3836,
	2624, 2482, 1932, 1893, 4566, 2559, 2778, 3199, 1863, 3121,
	2779, 3342, 1504, 3471, 2194, 3050, 269, 892, 1337, 2234,
	2991, 817, 1592, 778, 268, 2229, 2781, 2210, 2023, 2217,
	1249, 2147, 1139, 1387, 1146, 2151, 1311, 1782, 2626, 2089,
	2935, 2615, 3061, 2759, 2543, 1144, 2137, 2449, 2466, 2738,
	2447, 2813, 1957, 1629, 3604, 755, 3056, 3084, 3412, 1652,
	2283, 823, 1595, 824, 2917, 3981, 970, 2880, 4653, 2812,
	1374, 1252, 819, 2618, 1966, 2749, 698, 3115, 182, 2768,
	720, 1927, 2704, 2670, 1973, 1877, 1231, 2596, 763, 1795,
	191, 828, 1266, 1796, 1732, 1717, 192, 1620, 774, 831,
	2309, 2243, 1627, 1322, 1529, 2282, 1135, 1976, 2166, 4821,
	2448, 2471, 2450, 1120, 4880, 1189, 3057, 111, 712, 828,
	723, 1254, 715, 44, 43, 1248, 873, 831, 41, 812,
	32, 1781, 738, 30, 28, 1229, 3252, 1801, 991, 1540,
	3850, 3246, 3851, 2080, 874, 2080, 4971, 4961, 3362, 4945,
	2758, 3659, 73, 2758, 2080, 1345, 4801, 1809, 1810, 2080,
	1723, 4944, 2080, 4934, 2080, 2758, 4915, 2255, 1533, 74,
	4427, 3659, 1554, 4913, 4852, 918, 2255, 4427, 2255, 4809,
	1840, 4398, 4798, 4810, 4796, 79, 2758, 1812, 2758, 4793,
	4790, 3649, 4758, 4794, 4791, 4757, 2255, 2255, 4756, 2255,
	4751, 4395, 2101, 4750, 2101, 1142, 1084, 2101, 4741, 3313,
	3314, 4739, 4427, 1865, 3650, 4427, 4736, 4706, 1246, 4677,
	4502, 4427, 1811, 2821, 3438, 88, 4670, 4669, 3313, 3314,
	2758, 2758, 4664, 4663, 4657, 4623, 4427, 4427, 2255, 4267,
	1809, 1810, 4563, 4545, 4542, 4539, 2821, 4069, 2255, 4427,
	4492, 4446, 4445, 1383, 4493, 2255, 2255, 1074, 4434, 4164,
	1232, 1232, 2255, 1840, 4433, 4426, 899, 4389, 4427, 4427,
	1812, 2255, 4363, 1065, 3421, 1084, 2821, 4339, 49, 1064,
	110, 2101, 3214, 4328, 2334, 94, 107, 3659, 2098, 4246,
	4229, 4104, 267, 2758, 2758, 2821, 1865, 4048, 1663, 1645,
	2255, 3676, 1541, 4042, 4003, 1811, 3861, 3676, 4004, 3859,
	3862, 1085, 3843, 3860, 2758, 1831, 2758, 3759, 1383, 3755,
	3675, 2255, 94, 2758, 3676, 2841, 3666, 1817, 4678, 1079,
	3667, 3359, 3436, 3354, 3353, 2758, 3304, 2758, 2758, 3302,
	3305, 1542, 3294, 3303, 1282, 95, 3295, 2817, 1264, 3840,
	1809, 1810, 2751, 1842, 1843, 1844, 1853, 1854, 1855, 3292,
	3263, 2098, 3261, 2758, 2758, 3131, 1289, 3101, 3262, 2101,
	1233, 2319, 1846, 1840, 3100, 4567, 1839, 1841, 2319, 3319,
	1812, 2864, 2621, 1809, 1810, 2758, 1553, 2820, 2255, 1859,
	2810, 2821, 2803, 2757, 2758, 2318, 2255, 2758, 3319, 2319,
	1834, 1835, 1836, 1837, 4558, 1235, 1865, 1236, 4546, 4502,
	1817, 2101, 2255, 1812, 3840, 1811, 2750, 4308, 239, 4267,
	2098, 1283, 4230, 3313, 3314, 1831, 3331, 3332, 3333, 4069,
	3667, 1283, 2964, 2879, 1828, 1832, 2116, 2079, 2095, 2171,
	3052, 2254, 2984, 2877, 1952, 4100, 1528, 1261, 1811, 3943,
	3730, 2572, 2573, 2574, 2591, 2592, 2593, 3651, 2758, 1839,
	1841, 3704, 1974, 2222, 1699, 2795, 241, 2794, 2793, 2792,
	2791, 2594, 1237, 2622, 239, 1234, 3652, 1533, 1073, 1542,
	1542, 1072, 1071, 1542, 1070, 1069, 2396, 3329, 1068, 1067,
	1063, 1062, 99, 1061, 1060, 1059, 1058, 1057, 3328, 1056,
	1055, 1054, 3173, 4159, 1865, 2081, 3329, 2081, 1053, 1862,
	1834, 1835, 1836, 1837, 1052, 240, 2081, 1051, 1832, 1050,
	1817, 2081, 241, 2584, 2081, 4116, 2081, 3251, 233, 1049,
	1048, 1047, 2580, 1046, 1028, 968, 967, 234, 966, 965,
	3313, 3314, 964, 963, 962, 961, 960, 190, 102, 959,
	958, 106, 957, 1817, 956, 2623, 955, 2620, 954, 1850,
	953, 1862, 1860, 952, 193, 951, 950, 2653, 949, 1839,
	1841, 240, 948, 947, 946, 945, 944, 239, 943, 942,
	1862, 941, 940, 939, 938, 900, 1856, 1833, 1857, 937,
	153, 936, 1862, 3319, 935, 1826, 1827, 1667, 2098, 934,
	933, 922, 921, 920, 916, 915, 1348, 1144, 2585, 2586,
	2587, 2588, 239, 1848, 239, 1548, 908, 907, 2579, 906,
	193, 891, 890, 3883, 239, 241, 1141, 153, 1832, 2651,
	847, 3649, 846, 845, 1144, 1144, 1144, 844, 835, 3330,
	834, 1283, 833, 832, 798, 1864, 789, 1838, 788, 787,
	769, 157, 1409, 1649, 1356, 263, 1409, 262, 3330, 3335,
	241, 261, 241, 1348, 260, 259, 194, 258, 257, 256,
	1833, 255, 241, 1858, 240, 254, 253, 252, 1087, 251,
	250, 249, 4549, 248, 2255, 247, 2851, 233, 1144, 3087,
	1144, 1847, 1144, 2589, 2590, 2079, 234, 246, 4322, 1348,
	2098, 3329, 1862, 2095, 1378, 2442, 245, 3313, 3314, 240,
	3319, 240, 2625, 1137, 244, 1391, 1392, 1393, 243, 1725,
	242, 240, 233, 193, 233, 1348, 2582, 1512, 1864, 3855,
	3677, 234, 3408, 234, 233, 1862, 1507, 1813, 1814, 1815,
	1816, 1818, 1819, 234, 3357, 1348, 2637, 3274, 1118, 2098,
	239, 239, 1348, 3257, 239, 3248, 3155, 1838, 193, 3032,
	193, 1144, 4783, 1144, 2825, 2800, 2635, 1935, 1348, 2750,
	193, 2785, 1532, 2145, 1934, 1862, 1144, 1502, 1144, 2326,
	1833, 2100, 3328, 1283, 2000, 3358, 1316, 1319, 3323, 3315,
	3316, 3317, 3318, 3320, 3321, 3069, 1601, 1604, 241, 241,
	1370, 1938, 241, 4547, 1904, 1329, 1536, 1851, 3315, 3316,
	3317, 3318, 3320, 3321, 1395, 1372, 1895, 1822, 1820, 1821,
	1813, 1814, 1815, 1816, 1818, 1819, 1348, 1268, 2619, 1547,
	1517, 1402, 1935, 1494, 1499, 1977, 4782, 4779, 1864, 1934,
	3313, 3314, 828, 3331, 3332, 3333, 1144, 240, 240, 1144,
	831, 240, 1607, 3330, 1809, 1810, 4759, 4738, 4638, 2834,
	233, 233, 4099, 1808, 233, 2325, 1933, 1902, 1260, 234,
	234, 4555, 1364, 234, 4570, 4418, 4377, 3319, 2583, 182,
	182, 4329, 3313, 3314, 1812, 4307, 4170, 1531, 4139, 1530,
	4138, 1590, 1862, 4132, 4131, 4130, 193, 193, 3313, 3314,
	193, 3331, 3332, 3333, 4123, 4324, 4122, 4120, 4115, 1668,
	1849, 3313, 3314, 1632, 1634, 3328, 4112, 4111, 4008, 1811,
	1823, 1824, 1830, 1852, 1829, 1825, 4002, 1822, 1820, 1821,
	1813, 1814, 1815, 1816, 1818, 1819, 1864, 3887, 239, 3886,
	4126, 3885, 3865, 3831, 4125, 1144, 1144, 1144, 1144, 1144,
	1144, 1144, 1144, 3941, 3830, 3829, 3751, 3746, 3403, 1378,
	3350, 3341, 1378, 1813, 1814, 1815, 1816, 1818, 1819, 1741,
	3312, 3309, 3308, 3328, 3306, 1896, 3301, 1894, 1144, 3300,
	3299, 3296, 3293, 3273, 1144, 3329, 241, 3256, 3249, 3247,
	1262, 3102, 2786, 3325, 3326, 3327, 2608, 1808, 1245, 1786,
	3324, 3322, 3323, 3315, 3316, 3317, 3318, 3320, 3321, 2262,
	3319, 1897, 1085, 1895, 2299, 1623, 239, 1807, 2569, 2570,
	2571, 2595, 2581, 2575, 1817, 2577, 2578, 2576, 2563, 2564,
	2565, 2566, 2567, 2568, 4965, 240, 4905, 4572, 1673, 4904,
	4009, 4868, 4819, 4817, 3071, 1270, 1333, 3777, 233, 239,
	1630, 1644, 3319, 3355, 4698, 2260, 4630, 234, 4614, 1862,
	1780, 4611, 4610, 4609, 241, 4589, 1662, 239, 3319, 4571,
	3400, 1884, 4588, 4586, 4569, 4568, 3335, 4543, 4527, 4526,
	2549, 3319, 4512, 4509, 193, 4508, 4503, 4442, 4413, 1144,
	1144, 1144, 4375, 4358, 4357, 1144, 1500, 241, 4336, 1511,
	1333, 4335, 1266, 4293, 1266, 239, 239, 4268, 4158, 4137,
	3336, 4070, 4062, 240, 4059, 241, 1690, 3929, 3329, 1409,
	3315, 3316, 3317, 3318, 3320, 3321, 233, 3928, 3911, 1144,
	239, 3910, 822, 1726, 3335, 234, 3908, 3330, 2040, 822,
	3846, 3834, 1787, 3741, 2003, 1882, 240, 1954, 3678, 3660,
	3626, 3551, 3509, 241, 241, 3476, 2019, 3430, 4323, 233,
	3278, 3428, 3086, 2068, 240, 2070, 2652, 1783, 234, 1333,
	1333, 3277, 3272, 4009, 2555, 3238, 3329, 233, 241, 1065,
	3045, 1941, 1940, 1963, 1939, 1064, 234, 1936, 1928, 3329,
	1926, 1791, 1862, 1790, 2832, 193, 1937, 2831, 2797, 2790,
	2756, 1785, 240, 240, 2633, 2010, 1881, 1809, 1810, 1999,
	1955, 1950, 1949, 193, 1144, 233, 233, 2013, 1948, 1348,
	1804, 1805, 1947, 1946, 234, 234, 1945, 240, 2650, 1944,
	1984, 2103, 1960, 1961, 1943, 1942, 1923, 1812, 1144, 182,
	233, 1922, 1921, 1920, 2004, 1085, 1409, 3070, 1919, 234,
	1862, 193, 193, 1918, 4550, 1917, 1916, 1232, 1915, 1914,
	1913, 1912, 2161, 1862, 39, 2085, 1929, 1930, 2087, 1911,
	3330, 1910, 1811, 1909, 2092, 1908, 193, 2327, 2094, 1897,
	1883, 2134, 1880, 2097, 3324, 3322, 3323, 3315, 3316, 3317,
	3318, 3320, 3321, 1875, 1378, 1363, 4296, 1621, 828, 1287,
	1278, 4166, 2107, 4108, 3882, 828, 831, 2008, 3858, 3849,
	3260, 2823, 2788, 831, 1626, 4396, 2106, 4168, 3881, 2143,
	3313, 3314, 2034, 1896, 3426, 1982, 2128, 2127, 3330, 1878,
	2136, 2138, 4232, 2136, 1975, 2136, 3655, 2136, 1995, 1390,
	4902, 3330, 3512, 4894, 2962, 2636, 4612, 4775, 4504, 4495,
	3313, 3314, 2083, 4494, 2014, 4327, 4270, 4269, 1264, 4231,
	1264, 2063, 1985, 4161, 4075, 2634, 1953, 2219, 4074, 4073,
	4072, 1085, 4071, 1979, 3853, 4548, 3852, 1348, 1348, 1994,
	1993, 2009, 3680, 1388, 1992, 2940, 1990, 1409, 3679, 1989,
	1988, 3662, 3661, 4848, 4846, 2205, 1383, 4500, 4012, 1977,
	2171, 1778, 1935, 2037, 1389, 2109, 2020, 3728, 1383, 1934,
	3325, 3326, 3327, 1044, 1689, 3955, 3298, 3324, 3322, 3323,
	3315, 3316, 3317, 3318, 3320, 3321, 3297, 3220, 2922, 1386,
	1906, 2122, 3926, 2989, 3478, 1698, 1815, 1816, 1818, 1819,
	3543, 3609, 3671, 3608, 2236, 1742, 2201, 2352, 2209, 2131,
	4831, 2214, 1383, 2324, 4491, 1918, 4805, 1261, 1045, 1261,
	4786, 4771, 1903, 2105, 3317, 3318, 3320, 3321, 3325, 3326,
	3327, 3592, 3128, 4417, 1699, 3324, 3322, 3323, 3315, 3316,
	3317, 3318, 3320, 3321, 1348, 2112, 1348, 2237, 1348, 3322,
	3323, 3315, 3316, 3317, 3318, 3320, 3321, 4016, 2139, 3999,
	2129, 1918, 2247, 2252, 3957, 3952, 1348, 1348, 3934, 3701,
	3451, 2331, 4379, 3362, 3779, 2616, 4780, 2970, 2830, 1348,
	3319, 2919, 3266, 1951, 2113, 1931, 3903, 4437, 3600, 2293,
	1600, 1348, 1524, 1348, 1348, 1348, 4409, 1359, 1315, 4795,
	2177, 2981, 2239, 2240, 4792, 828, 3645, 4604, 2204, 1677,
	2978, 2976, 2289, 831, 4311, 2241, 4705, 822, 4582, 2337,
	3481, 3921, 3109, 3083, 1625, 2133, 3575, 4850, 1511, 4849,
	2351, 2199, 4440, 4436, 4415, 2457, 2300, 3722, 2969, 1144,
	4464, 4219, 2918, 4781, 3970, 1567, 2865, 4960, 4618, 1526,
	1531, 2294, 1530, 3455, 4457, 2306, 1244, 2410, 3154, 2408,
	4217, 3457, 1384, 2132, 4884, 3024, 1042, 1040, 4214, 1038,
	1036, 886, 2198, 1033, 1144, 1511, 2213, 2195, 1739, 4448,
	2329, 1024, 4260, 1575, 4259, 3968, 3967, 2883, 3329, 3959,
	3949, 1740, 2883, 2253, 2621, 2455, 3948, 3946, 3945, 3933,
	2666, 2356, 2881, 1626, 2344, 3898, 3897, 2881, 1144, 2314,
	1144, 2123, 3969, 3581, 3580, 3420, 3271, 1144, 3270, 3269,
	2040, 2040, 1409, 1083, 1144, 1144, 1144, 1144, 1144, 1144,
	1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144,
	1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144,
	1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144,
	2274, 1144, 1862, 1144, 1144, 1144, 1144, 2275, 2316, 2303,
	1576, 2110, 2308, 1390, 2665, 3268, 2338, 887, 1373, 2312,
	1738, 1380, 1390, 828, 2459, 2622, 3224, 2987, 2441, 1144,
	1675, 831, 2986, 1144, 1144, 1364, 2320, 2983, 2321, 2487,
	1623, 1144, 2311, 2446, 2311, 1144, 2972, 1144, 1144, 4438,
	3511, 1085, 3427, 1085, 1082, 1409, 2168, 2956, 4410, 2955,
	2950, 1144, 1144, 1144, 1144, 2949, 3080, 1144, 1144, 1144,
	1144, 1144, 1144, 1144, 1144, 2343, 3478, 761, 1389, 2381,
	3330, 2457, 2948, 2456, 761, 2237, 2360, 1389, 2324, 1630,
	2164, 1630, 1819, 1144, 1144, 1144, 1144, 1144, 1144, 1144,
	1144, 1144, 2371, 1385, 3541, 2927, 1144, 2623, 2920, 2620,
	2926, 4885, 2920, 4213, 2887, 2811, 2530, 1784, 1266, 2169,
	2170, 2597, 2598, 1965, 2422, 1409, 2273, 2896, 4215, 2404,
	4356, 2541, 1670, 2434, 1266, 2597, 2613, 2838, 2483, 2484,
	1384, 2455, 2872, 1721, 2034, 2034, 2470, 1384, 4176, 2165,
	1144, 1409, 1613, 1611, 1612, 1610, 2368, 2454, 2815, 3702,
	2539, 1381, 2661, 1527, 1571, 1084, 1030, 2439, 2348, 1776,
	1382, 1584, 2824, 2443, 2545, 2545, 2924, 1301, 1260, 2421,
	1260, 2707, 2707, 2721, 2458, 2597, 2451, 2292, 2742, 2744,
	2561, 2944, 1065, 1625, 2748, 1065, 1065, 2445, 2474, 2444,
	2612, 2475, 2476, 1995, 796, 3321, 1969, 3906, 2361, 2431,
	1691, 4175, 2207, 2140, 2141, 3134, 2937, 2938, 2937, 2938,
	2937, 2938, 2453, 4233, 1589, 2037, 2037, 3324, 3322, 3323,
	3315, 3316, 3317, 3318, 3320, 3321, 3168, 4597, 2798, 2616,
	2802, 4473, 2899, 2152, 2765, 2433, 2910, 2414, 2153, 1720,
	1671, 1751, 1348, 1348, 2553, 1972, 2402, 3212, 1687, 1380,
	1984, 2551, 2557, 2773, 2625, 3542, 1380, 2663, 2369, 1777,
	1967, 2362, 2664, 3197, 4849, 2667, 2365, 2668, 2669, 1232,
	1737, 1789, 4917, 2359, 2610, 4777, 2814, 1362, 1970, 2456,
	4211, 2909, 2787, 2313, 3711, 2818, 1409, 1699, 1085, 3235,
	1262, 2028, 1262, 2535, 760, 182, 2860, 1699, 1085, 3710,
	2764, 760, 1085, 2625, 3170, 2854, 794, 2980, 889, 888,
	4258, 931, 1355, 1596, 2536, 2703, 2716, 3947, 3233, 2537,
	2040, 1968, 2846, 2542, 2733, 2837, 2754, 2755, 2850, 2746,
	4216, 1385, 1378, 2766, 3454, 1383, 2862, 1081, 1385, 2979,
	2770, 2771, 2861, 2420, 1734, 1982, 3768, 1937, 2977, 2975,
	4599, 4889, 2154, 2454, 3377, 2826, 2853, 3930, 4198, 2857,
	2171, 1721, 2882, 1409, 1264, 1594, 1755, 3944, 3890, 2158,
	2619, 2772, 3765, 2777, 3877, 4898, 2783, 2784, 3587, 1348,
	1264, 3211, 3579, 1676, 836, 3539, 2982, 2196, 923, 1381,
	4355, 1085, 4191, 1539, 2947, 1546, 1381, 1552, 1382, 2888,
	1144, 1144, 2833, 1144, 762, 1382, 2409, 2856, 2407, 2845,
	843, 762, 3918, 2848, 924, 2849, 1034, 1034, 4198, 1034,
	1035, 1929, 1930, 1034, 2836, 2840, 1718, 822, 2925, 1348,
	2863, 884, 710, 883, 2898, 2885, 2923, 2945, 2855, 4863,
	1971, 2973, 3179, 2155, 2160, 3049, 2440, 4192, 1674, 4890,
	1018, 4778, 4191, 2171, 3766, 4871, 4184, 2886, 705, 4870,
	1348, 3230, 2202, 1261, 2809, 2929, 1643, 1720, 1648, 2430,
	4674, 3094, 4920, 4182, 1078, 1348, 2866, 1348, 4474, 1261,
	4838, 1661, 4186, 1666, 2913, 4209, 3123, 3231, 1274, 1719,
	4472, 3236, 4090, 1348, 2152, 4089, 4470, 2928, 2930, 2153,
	4212, 3067, 2886, 2625, 2034, 2432, 2197, 4192, 3027, 2538,
	2946, 2901, 2904, 3029, 2954, 2939, 2941, 2942, 2943, 2540,
	2891, 3135, 3136, 795, 3063, 3705, 909, 2156, 2367, 3588,
	1271, 3916, 3142, 3143, 3144, 2179, 3642, 1570, 3585, 2988,
	3156, 1144, 3157, 4469, 3016, 3017, 1018, 3176, 1724, 4185,
	1300, 2960, 914, 3376, 3182, 4776, 2259, 2258, 2183, 2953,
	4892, 828, 2958, 4948, 1573, 4684, 1019, 2080, 2968, 831,
	1078, 4471, 797, 1383, 1276, 2162, 793, 4401, 2527, 2223,
	1383, 2897, 3643, 3978, 2230, 2037, 3204, 3205, 2963, 3152,
	3025, 2952, 182, 828, 2951, 3108, 2868, 4605, 1333, 3132,
	3129, 831, 3528, 1144, 2723, 3137, 1531, 3138, 3030, 1144,
	1144, 2625, 4625, 2154, 1752, 2180, 2232, 2870, 4598, 3465,
	3226, 2544, 1672, 2220, 3931, 3149, 3098, 3043, 3460, 4896,
	2158, 3151, 3096, 837, 838, 3053, 2220, 925, 926, 3158,
	3979, 3160, 1275, 3162, 4210, 3164, 3161, 1333, 3163, 3054,
	3165, 3184, 4187, 3186, 2871, 1596, 1031, 4188, 4672, 3529,
	3089, 3126, 1019, 3099, 3642, 1144, 1144, 4193, 3125, 2884,
	3174, 1144, 3110, 2231, 3493, 2869, 3554, 3232, 1333, 1333,
	3456, 2403, 1749, 3977, 1144, 1144, 3130, 3234, 3181, 2216,
	1144, 1144, 3097, 759, 932, 2552, 1144, 3187, 2224, 3078,
	3189, 4673, 3527, 2152, 2155, 2160, 3992, 1700, 2153, 4190,
	1686, 1688, 4187, 2801, 1525, 3990, 2215, 4188, 3025, 3178,
	1285, 1924, 3159, 1750, 2184, 2193, 4194, 4193, 4745, 2364,
	4746, 3492, 2208, 1788, 2113, 2206, 2358, 4897, 3520, 1361,
	4537, 1144, 1144, 1144, 4285, 4837, 3019, 1144, 2525, 3227,
	2211, 2528, 2208, 3424, 1753, 4891, 4860, 1144, 2157, 1020,
	2191, 2174, 2206, 3192, 3203, 1630, 3586, 2220, 3497, 4190,
	4352, 3259, 1500, 4899, 1144, 910, 911, 840, 839, 2169,
	2170, 2162, 2203, 3194, 4086, 3193, 4194, 2205, 2156, 4368,
	2185, 2186, 4728, 4529, 3994, 3521, 2883, 4812, 4716, 2470,
	3213, 3198, 2524, 3020, 1511, 706, 4530, 4813, 4243, 2212,
	1991, 2902, 728, 2028, 2028, 2181, 1874, 2192, 2175, 3276,
	2769, 3499, 2154, 3250, 3180, 2200, 2607, 3466, 4921, 3993,
	3254, 3255, 3503, 927, 928, 3258, 2162, 2782, 3519, 2158,
	4531, 841, 842, 1084, 4300, 3781, 3018, 4908, 1754, 4295,
	3917, 2959, 4080, 4091, 4906, 1020, 4189, 2207, 2182, 1272,
	2190, 2173, 3225, 4263, 4301, 3992, 1144, 1144, 1144, 1144,
	3878, 1290, 1969, 3724, 3990, 3195, 1144, 1144, 1144, 4632,
	1021, 1144, 4721, 4651, 1260, 3498, 707, 1705, 4511, 3501,
	4262, 1144, 1266, 1409, 4261, 4199, 4200, 1144, 4030, 1144,
	1260, 3630, 3369, 3370, 4533, 2281, 1962, 1022, 1266, 4351,
	4007, 1288, 1273, 2155, 2160, 1281, 4189, 2227, 1965, 697,
	3988, 1972, 1798, 1799, 1093, 4949, 1409, 4532, 3820, 2081,
	4135, 1798, 3502, 4087, 2473, 708, 2767, 709, 1266, 2172,
	2204, 1409, 2124, 4435, 1793, 4534, 3265, 3413, 4836, 4520,
	4581, 4031, 1511, 3994, 1970, 4199, 4200, 1085, 4926, 3963,
	1023, 3950, 2040, 1333, 4286, 3902, 1409, 2121, 3472, 3352,
	3631, 912, 913, 3622, 2225, 3419, 1021, 3871, 3468, 2187,
	3068, 3062, 1348, 3047, 2307, 3371, 3393, 2301, 3993, 2295,
	2287, 2267, 3406, 2266, 3764, 1564, 2526, 2156, 2463, 3434,
	3991, 1969, 2931, 1022, 1144, 4633, 1262, 3894, 1292, 4689,
	3381, 3835, 1798, 768, 1511, 3725, 1511, 2226, 1144, 2157,
	2886, 4654, 1262, 3407, 2415, 4033, 3402, 1797, 1348, 2161,
	2117, 3872, 4316, 2040, 3379, 3044, 1797, 1303, 3461, 3462,
	2776, 2150, 4489, 2119, 4487, 2162, 2349, 4092, 4353, 2341,
	1972, 1144, 4811, 4412, 3484, 2188, 1023, 3480, 3873, 3482,
	3870, 3479, 3486, 2161, 3218, 1967, 3196, 1348, 3848, 3380,
	3374, 3445, 3373, 2808, 3391, 3347, 3348, 3349, 4298, 3411,
	3394, 3395, 1378, 1970, 3441, 3452, 2120, 3443, 3444, 1348,
	3399, 1348, 3447, 3363, 3448, 1799, 3449, 3392, 2148, 3458,
	3378, 1728, 1727, 3483, 1799, 2332, 3488, 2903, 2264, 3490,
	1722, 2807, 2806, 1409, 2219, 2805, 1971, 1797, 2804, 3998,
	3051, 3821, 1082, 2219, 1348, 4424, 1968, 4592, 1348, 1619,
	3822, 1605, 4136, 4093, 3557, 3464, 3559, 3469, 2464, 3563,
	3425, 2149, 4484, 3569, 3514, 1606, 2034, 1874, 1264, 4277,
	3544, 1617, 2907, 1348, 3415, 3416, 3417, 3418, 3518, 3991,
	3431, 3432, 930, 3433, 1264, 3909, 3672, 1348, 4925, 1348,
	3537, 2305, 3595, 1409, 3442, 4333, 3516, 2932, 2933, 2760,
	822, 1348, 3446, 2028, 3397, 3899, 3398, 4857, 3439, 3589,
	4629, 4695, 1348, 3453, 1264, 4535, 4399, 3532, 3530, 3023,
	3437, 4536, 3422, 3605, 4634, 3459, 3895, 1348, 3133, 3028,
	3385, 3473, 3026, 2336, 2763, 2236, 1680, 2034, 4593, 3540,
	4420, 4419, 4407, 4702, 1266, 3555, 4686, 2037, 2157, 3614,
	3638, 4425, 1706, 3564, 3467, 3500, 4142, 3570, 3837, 2632,
	4861, 1772, 2631, 4723, 3123, 1971, 3510, 1261, 4332, 1348,
	1348, 3552, 1774, 3123, 1771, 2762, 4862, 3523, 2426, 1769,
	2761, 3874, 4859, 1261, 1746, 4797, 4621, 3636, 3621, 4408,
	4613, 3524, 4374, 3517, 1348, 3525, 4134, 3576, 3526, 3414,
	4696, 3658, 2397, 3629, 3545, 3997, 3344, 2113, 3647, 3740,
	1744, 3553, 3590, 1261, 3593, 3531, 1716, 3533, 2037, 3577,
	3566, 3572, 767, 2954, 3699, 3698, 3386, 4594, 3435, 1714,
	3307, 1712, 3237, 4476, 1710, 1708, 1702, 3048, 1696, 1409,
	3703, 2971, 1409, 1694, 1615, 3578, 2921, 2835, 2435, 2002,
	3565, 2009, 1998, 2113, 3571, 1775, 1656, 3345, 3720, 2406,
	3713, 2373, 3582, 2245, 3637, 3719, 828, 1793, 3900, 2929,
	3632, 3597, 3172, 3171, 831, 1144, 3384, 3390, 3140, 3639,
	3617, 1144, 1144, 2452, 3618, 1144, 1144, 1144, 3619, 1144,
	1733, 1618, 2113, 2376, 182, 182, 2286, 2265, 1144, 2040,
	2069, 1907, 1669, 1588, 3696, 4770, 3644, 1144, 4244, 3670,
	3389, 3695, 1144, 1616, 2113, 3653, 2113, 3954, 1409, 3953,
	3674, 4245, 3718, 4228, 929, 3646, 4834, 1144, 3656, 3657,
	3635, 4825, 4685, 4314, 4250, 1409, 4309, 4241, 4180, 3668,
	3707, 4029, 3708, 3717, 3709, 2040, 2040, 1144, 1144, 2113,
	1144, 1144, 1144, 2113, 1511, 1511, 3556, 4020, 1773, 2428,
	1770, 3966, 3715, 3951, 2427, 1768, 3924, 3922, 1144, 3901,
	1745, 3721, 1144, 3743, 2040, 2040, 1144, 1144, 1144, 1144,
	1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144, 1144,
	1144, 1144, 1144, 1144, 1144, 1144, 1743, 1144, 3753, 3754,
	1264, 3714, 1715, 3697, 3625, 1144, 1144, 2040, 3793, 3620,
	3794, 3726, 1144, 3761, 1085, 1713, 3723, 1711, 3387, 3388,
	1709, 1707, 1701, 1144, 1695, 3610, 3081, 1511, 3073, 1693,
	1614, 1032, 3066, 3055, 1266, 1266, 3041, 3040, 1144, 1152,
	2405, 3021, 2372, 2852, 2244, 2847, 2263, 2261, 2238, 2221,
	2189, 2176, 2292, 2163, 2102, 2099, 2096, 2093, 2088, 2086,
	2082, 2073, 3748, 3567, 1802, 2012, 3216, 3750, 2230, 1409,
	4850, 1241, 2125, 4591, 3190, 3188, 3760, 3014, 3867, 4733,
	3767, 3769, 3770, 2034, 4338, 271, 271, 271, 4300, 700,
	701, 3776, 716, 700, 716, 726, 3783, 1242, 766, 1261,
	3832, 4331, 786, 4330, 3875, 3876, 4257, 792, 4301, 3791,
	2438, 4172, 3124, 3792, 271, 2144, 1569, 3854, 1144, 3888,
	3889, 3771, 3891, 2483, 3784, 3798, 2883, 4522, 2883, 2034,
	2034, 2908, 3796, 3824, 4515, 905, 4041, 1144, 2363, 3833,
	2304, 2881, 271, 2905, 3790, 3839, 2171, 1766, 1767, 182,
	1323, 1324, 2483, 3799, 2370, 2400, 2436, 2395, 2034, 2034,
	3844, 3845, 3217, 4732, 2037, 3825, 4220, 1809, 1810, 4252,
	1144, 1144, 1809, 1810, 1692, 1803, 1333, 2911, 4557, 3841,
	3842, 4422, 3568, 4143, 4121, 3828, 3495, 2912, 1260, 2934,
	1806, 2034, 1037, 1039, 1041, 1357, 1291, 1812, 4853, 4844,
	3962, 3892, 2437, 264, 1260, 3893, 4806, 3693, 1243, 2912,
	2037, 2037, 1144, 3039, 4017, 3857, 2288, 1076, 3856, 1018,
	3691, 1368, 3961, 2978, 2976, 1324, 2985, 2965, 2914, 3684,
	4694, 2967, 1811, 2916, 1260, 1324, 1348, 1811, 4679, 2037,
	2037, 1348, 4645, 1078, 2966, 3923, 2915, 3925, 4639, 4590,
	694, 4506, 4482, 4893, 4400, 4027, 4019, 4006, 3935, 3864,
	3624, 3088, 2747, 2108, 2021, 4421, 2040, 3940, 3942, 2957,
	4725, 1523, 2037, 700, 700, 4726, 3939, 1522, 3423, 3884,
	4924, 271, 3956, 3905, 4641, 1511, 1533, 3964, 1679, 1077,
	1264, 1264, 3313, 3314, 1678, 4865, 4725, 1348, 1809, 1810,
	3958, 4726, 3927, 1144, 2875, 2876, 2873, 2874, 3932, 4113,
	1262, 1266, 1144, 2627, 3880, 2875, 4043, 2873, 3965, 3980,
	3982, 2662, 1348, 1348, 1348, 4026, 1262, 3094, 3686, 4507,
	4458, 4050, 3976, 3033, 2929, 1019, 3036, 4254, 3038, 1348,
	1348, 1348, 4034, 3685, 1748, 2028, 4249, 1747, 4013, 4248,
	3974, 4000, 3996, 4035, 3123, 4109, 1262, 3879, 3772, 1348,
	4038, 3561, 1407, 4054, 3558, 1409, 1505, 3984, 1901, 4014,
	1900, 3986, 4910, 4872, 3995, 4683, 4023, 4682, 4681, 4620,
	4619, 4574, 4485, 4037, 3085, 4452, 4397, 3085, 4018, 1261,
	1261, 1409, 4066, 3985, 1144, 1144, 4394, 4392, 4288, 3694,
	1144, 1144, 2040, 3973, 4274, 1144, 1144, 4218, 1144, 4167,
	4065, 4047, 4001, 1144, 3920, 3912, 2028, 3628, 3627, 3489,
	3440, 3177, 3169, 3148, 1144, 3147, 3146, 4021, 3145, 3072,
	3042, 2906, 2843, 2839, 3682, 4036, 2828, 2827, 2816, 2556,
	1144, 2429, 2401, 2394, 3473, 4039, 4045, 3975, 2393, 2392,
	2034, 4044, 4049, 2391, 4064, 4055, 4056, 2390, 2302, 2276,
	4094, 2272, 2271, 4060, 2270, 4063, 2269, 4076, 4057, 2268,
	3166, 2076, 4061, 2075, 2074, 2072, 4103, 2011, 4077, 1765,
	1764, 1703, 1583, 1582, 4078, 1581, 1580, 1579, 1578, 1577,
	1572, 4083, 1568, 4088, 1566, 1565, 4107, 1516, 1515, 1514,
	1400, 1266, 1399, 1398, 1397, 1396, 1360, 1310, 1309, 1266,
	1308, 1307, 1306, 1409, 1409, 1305, 1409, 1304, 1302, 1297,
	1260, 1296, 1295, 1266, 1294, 1293, 898, 8, 1020, 4095,
	4148, 2037, 1224, 2115, 1348, 1348, 1043, 1029, 4596, 4197,
	4196, 4195, 2425, 93, 1409, 1574, 2113, 860, 87, 2228,
	3919, 4800, 997, 4722, 3692, 3687, 3688, 3689, 3690, 4624,
	1557, 868, 4704, 4015, 3491, 2990, 2375, 1264, 1704, 1266,
	2377, 1266, 3401, 2789, 4671, 4173, 4174, 3406, 4117, 3275,
	4564, 4367, 2630, 1905, 3356, 89, 2034, 4133, 1128, 1174,
	4284, 4283, 4181, 3904, 1348, 4208, 4207, 3113, 4281, 4280,
	4221, 2025, 2027, 1092, 1409, 1412, 1348, 4744, 2126, 1348,
	1134, 2142, 4223, 4224, 2135, 2829, 4156, 2706, 4140, 1151,
	1409, 1148, 4147, 4204, 2029, 4204, 4150, 4144, 182, 4145,
	4146, 2031, 1150, 1149, 2030, 4149, 4157, 1925, 4177, 1147,
	2024, 4160, 1262, 4025, 4253, 4222, 4255, 3092, 3654, 1021,
	1624, 4151, 4153, 1622, 999, 2130, 2550, 4165, 1348, 1348,
	1333, 2614, 3264, 1898, 1108, 1130, 1261, 2037, 4179, 2611,
	4171, 1286, 1119, 1107, 1075, 3382, 1022, 3361, 1348, 3641,
	3863, 2462, 4278, 878, 3310, 2617, 1277, 2730, 2722, 4242,
	1409, 2718, 3450, 3082, 1779, 1348, 4381, 4237, 1102, 4256,
	1876, 3093, 4226, 1394, 1112, 2548, 1889, 3242, 2472, 3648,
	3404, 4272, 2822, 4729, 3780, 4235, 3175, 4240, 4238, 2280,
	1266, 1240, 1239, 2292, 4303, 4275, 1284, 1238, 4710, 1023,
	4707, 2218, 1348, 1348, 1348, 1348, 1348, 4058, 3603, 2118,
	4317, 2867, 1279, 2560, 4266, 4334, 4337, 1409, 4306, 3611,
	1124, 4318, 1510, 4271, 4265, 4264, 2419, 1264, 4247, 1144,
	1144, 1144, 2028, 3367, 3673, 1264, 1585, 4294, 791, 4429,
	4279, 4305, 1136, 1861, 4204, 1299, 4321, 1409, 3011, 1264,
	3010, 4585, 1144, 1379, 4273, 1144, 1144, 271, 4326, 271,
	271, 1377, 1328, 271, 1338, 1144, 1376, 4319, 2040, 1375,
	4227, 4881, 4947, 1144, 1144, 1358, 3915, 3914, 2028, 2028,
	1260, 1260, 4236, 786, 3913, 4239, 786, 238, 3210, 1800,
	1409, 1792, 1348, 235, 237, 1264, 4359, 1264, 4312, 2001,
	4341, 236, 4340, 4289, 3868, 3410, 4804, 2028, 2028, 3937,
	271, 3594, 271, 271, 1328, 1409, 271, 271, 4354, 4347,
	23, 1338, 22, 1144, 21, 4364, 1261, 116, 4343, 4348,
	42, 20, 155, 133, 1261, 271, 1144, 1535, 152, 151,
	2028, 125, 4376, 150, 149, 1144, 148, 147, 1261, 154,
	2040, 146, 145, 1555, 4302, 140, 144, 143, 142, 1144,
	1562, 141, 1144, 139, 137, 138, 132, 136, 135, 2113,
	134, 131, 130, 4403, 129, 128, 1144, 127, 4390, 1587,
	4391, 2113, 1338, 1409, 2113, 126, 271, 271, 4370, 1328,
	1348, 124, 4432, 156, 1261, 123, 1261, 4387, 4388, 122,
	1348, 1348, 1262, 1262, 121, 120, 4404, 119, 118, 117,
	786, 779, 271, 271, 4411, 780, 61, 4402, 60, 115,
	113, 114, 19, 40, 1650, 14, 2146, 65, 66, 18,
	4475, 13, 35, 92, 1657, 4463, 105, 104, 103, 905,
	36, 3605, 101, 4451, 4497, 1409, 1264, 100, 1348, 4454,
	4443, 4444, 2034, 2113, 34, 17, 4488, 16, 4453, 3504,
	3505, 15, 3506, 3507, 3508, 4449, 1266, 1266, 98, 97,
	96, 33, 31, 11, 4460, 9, 37, 4521, 1986, 12,
	4459, 4467, 4461, 5, 4462, 187, 4478, 4477, 1144, 1144,
	186, 4540, 4541, 4516, 4486, 189, 4455, 185, 4525, 4465,
	4505, 4481, 4501, 188, 4517, 1144, 2040, 91, 4544, 4519,
	3546, 3547, 184, 3548, 3549, 3550, 4496, 271, 183, 90,
	4204, 4204, 2292, 29, 10, 179, 4480, 4498, 4441, 4011,
	82, 181, 4518, 2037, 2034, 4321, 180, 178, 4524, 271,
	177, 176, 1333, 4523, 1144, 1261, 1144, 4538, 1144, 4573,
	83, 80, 4575, 175, 86, 174, 81, 1260, 1266, 85,
	84, 27, 6, 64, 7, 4349, 4552, 2256, 3700, 108,
	109, 1144, 38, 1266, 78, 77, 4553, 4554, 4580, 76,
	4562, 75, 4556, 4513, 26, 63, 25, 173, 220, 219,
	218, 217, 216, 215, 214, 213, 4466, 208, 4608, 2028,
	207, 4579, 212, 210, 209, 211, 206, 4576, 230, 229,
	223, 222, 4204, 228, 227, 2037, 226, 225, 224, 221,
	4607, 232, 205, 2161, 204, 1144, 1144, 4204, 203, 4600,
	4601, 201, 197, 196, 200, 1144, 202, 199, 4628, 198,
	1266, 195, 231, 1266, 72, 171, 172, 1348, 71, 170,
	169, 168, 167, 166, 4615, 165, 164, 1348, 1348, 70,
	24, 2, 1, 0, 4617, 4648, 0, 0, 4650, 0,
	0, 0, 0, 0, 1348, 0, 0, 0, 0, 1262,
	4622, 0, 0, 4662, 0, 0, 0, 4635, 1144, 1144,
	2034, 0, 4616, 0, 4204, 2113, 4643, 4204, 1144, 4642,
	4647, 4640, 4667, 4655, 4668, 4501, 4636, 4637, 4656, 0,
	4660, 4661, 4659, 4658, 2467, 0, 0, 0, 0, 0,
	0, 0, 1264, 1264, 0, 0, 0, 4665, 4666, 4697,
	0, 0, 0, 0, 0, 2028, 0, 4701, 0, 0,
	700, 4676, 1144, 1144, 0, 1144, 0, 1260, 4680, 0,
	0, 0, 0, 0, 0, 1260, 0, 0, 0, 0,
	0, 271, 0, 271, 4692, 4693, 0, 271, 0, 1260,
	0, 2037, 4719, 0, 0, 4720, 4675, 4727, 4731, 0,
	1535, 1328, 2006, 271, 4724, 271, 0, 0, 4700, 4699,
	0, 271, 1535, 716, 0, 4749, 4718, 4752, 271, 1535,
	0, 1535, 0, 1144, 1144, 1144, 0, 4753, 4709, 4712,
	0, 0, 0, 2077, 1264, 1260, 0, 1260, 4734, 0,
	0, 1261, 1261, 4740, 4714, 271, 0, 0, 0, 1264,
	4713, 4747, 271, 4717, 4748, 0, 1144, 0, 0, 0,
	0, 0, 2486, 0, 0, 0, 4766, 4767, 4768, 4784,
	4789, 4769, 4785, 0, 0, 0, 0, 0, 0, 0,
	2724, 0, 0, 0, 0, 0, 0, 1535, 4814, 1262,
	0, 786, 0, 0, 4807, 0, 4818, 1262, 0, 0,
	0, 0, 0, 4816, 0, 0, 4828, 4830, 4829, 4803,
	3693, 1262, 0, 1144, 0, 0, 1264, 0, 4787, 1264,
	0, 0, 4815, 3691, 0, 0, 0, 0, 0, 0,
	0, 4835, 3684, 1261, 4824, 0, 0, 0, 0, 4826,
	4827, 4822, 4823, 4855, 0, 4832, 0, 4851, 1261, 1511,
	0, 4841, 4842, 0, 0, 2628, 4845, 1262, 4847, 1262,
	0, 4843, 0, 0, 0, 4854, 0, 4799, 1266, 4802,
	1266, 4875, 4877, 4856, 2161, 4858, 0, 0, 4731, 0,
	0, 0, 4874, 4887, 0, 4864, 1260, 0, 4888, 4628,
	4869, 4873, 0, 4876, 0, 4878, 4882, 4883, 0, 0,
	4886, 0, 0, 0, 0, 0, 0, 0, 0, 4901,
	4709, 0, 0, 4712, 0, 1261, 0, 0, 1261, 0,
	4903, 4900, 4204, 0, 4204, 0, 0, 0, 0, 4912,
	0, 3686, 0, 0, 0, 0, 4907, 0, 0, 4918,
	0, 0, 4909, 4911, 1144, 1144, 3685, 0, 4916, 4914,
	0, 2799, 0, 1144, 271, 1144, 1144, 1333, 271, 4919,
	0, 0, 4922, 0, 0, 0, 4928, 4938, 0, 4932,
	4939, 0, 4943, 0, 0, 4940, 4942, 4937, 4935, 4941,
	0, 0, 0, 0, 4936, 3094, 0, 0, 0, 4951,
	0, 4950, 4952, 4954, 4946, 0, 4953, 4955, 0, 4956,
	0, 4957, 3694, 0, 4959, 0, 4963, 0, 1262, 4962,
	0, 0, 0, 0, 271, 0, 1144, 4967, 271, 4969,
	0, 0, 0, 4973, 271, 4970, 4964, 4972, 0, 0,
	271, 4959, 0, 0, 0, 4966, 0, 0, 0, 0,
	0, 0, 3006, 4929, 4930, 0, 271, 0, 271, 1099,
	0, 2028, 700, 0, 271, 0, 4931, 0, 3239, 3240,
	0, 0, 0, 0, 0, 0, 786, 0, 0, 0,
	905, 0, 0, 0, 0, 2998, 2996, 0, 0, 0,
	0, 0, 3000, 3002, 2992, 0, 0, 0, 0, 4022,
	0, 0, 0, 0, 0, 0, 2878, 0, 0, 271,
	0, 1328, 271, 0, 4968, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 786, 0, 0, 0,
	0, 0, 0, 271, 1264, 0, 1264, 2251, 0, 0,
	0, 2374, 0, 2028, 0, 0, 271, 271, 0, 271,
	0, 271, 0, 271, 0, 271, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 893, 0, 3692, 3687, 3688,
	3689, 3690, 1260, 1260, 4079, 0, 0, 0, 0, 0,
	2411, 0, 0, 2412, 0, 2413, 0, 0, 0, 0,
	0, 0, 73, 0, 896, 895, 0, 271, 271, 271,
	271, 0, 0, 73, 0, 0, 0, 0, 0, 74,
	0, 0, 0, 3313, 3314, 0, 3331, 3332, 3333, 0,
	74, 0, 0, 0, 766, 79, 1887, 0, 786, 0,
	1892, 0, 0, 1261, 0, 1261, 79, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3337, 3338, 3339, 3340, 0, 0, 2699, 2700, 2701, 2702,
	2695, 2696, 2697, 2698, 1260, 88, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2994, 88, 0, 0, 1260,
	0, 0, 0, 0, 0, 0, 3008, 0, 3328, 0,
	0, 0, 0, 0, 1262, 1262, 0, 273, 0, 2028,
	0, 0, 0, 0, 0, 0, 899, 3200, 3007, 2999,
	2997, 3001, 3003, 2993, 2995, 3009, 0, 899, 49, 0,
	110, 2562, 0, 0, 3005, 94, 107, 0, 0, 0,
	0, 110, 0, 0, 0, 0, 94, 107, 2675, 2676,
	2677, 2678, 0, 0, 0, 0, 1260, 0, 0, 1260,
	0, 0, 0, 0, 0, 0, 0, 3012, 0, 0,
	0, 2687, 2688, 2689, 2690, 2683, 2684, 2685, 2686, 2691,
	2692, 2693, 2694, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3319, 0, 95, 1262, 0, 2724, 2724,
	0, 0, 700, 0, 0, 0, 95, 0, 0, 0,
	0, 1262, 0, 0, 0, 0, 0, 271, 0, 0,
	0, 0, 0, 0, 0, 0, 700, 0, 0, 0,
	0, 0, 0, 271, 0, 700, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 271, 2671, 2672,
	2673, 2674, 2679, 2680, 2681, 2682, 0, 0, 0, 3335,
	0, 0, 0, 0, 0, 271, 1338, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1262, 0,
	0, 1262, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4287, 3313, 3314, 0, 3331, 3332, 3333, 0, 0,
	0, 3329, 1106, 0, 4304, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 271, 1338, 0, 0, 0, 716,
	0, 1809, 1810, 2842, 0, 0, 0, 4325, 0, 271,
	0, 0, 271, 2819, 0, 0, 271, 0, 271, 0,
	0, 0, 99, 1328, 1840, 271, 271, 3013, 1338, 1338,
	2858, 1812, 0, 99, 0, 271, 3004, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3328, 0, 0,
	0, 0, 0, 0, 0, 1862, 0, 1865, 0, 0,
	2724, 2724, 2724, 2724, 0, 0, 1811, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1831, 190, 102, 0,
	0, 106, 2895, 0, 0, 1828, 0, 0, 190, 102,
	0, 0, 106, 271, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 271, 239, 0, 0,
	0, 0, 0, 0, 0, 900, 0, 0, 239, 271,
	153, 0, 0, 0, 0, 0, 900, 0, 0, 0,
	786, 153, 0, 3330, 0, 0, 0, 0, 0, 0,
	4098, 0, 3319, 0, 1260, 0, 1260, 0, 0, 0,
	0, 271, 0, 0, 0, 241, 0, 0, 0, 0,
	0, 1834, 1835, 1836, 1837, 0, 241, 0, 0, 0,
	0, 1817, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 157, 0, 0, 271, 3031, 0, 0, 0, 0,
	0, 0, 157, 0, 0, 0, 194, 0, 0, 0,
	0, 0, 0, 3368, 240, 0, 0, 194, 0, 0,
	0, 1535, 0, 0, 271, 240, 271, 233, 0, 0,
	1839, 1841, 0, 271, 0, 0, 234, 0, 233, 0,
	0, 0, 0, 3077, 0, 0, 3396, 234, 0, 0,
	3736, 3737, 0, 2895, 0, 700, 1826, 1827, 0, 0,
	3329, 3409, 0, 894, 3106, 905, 0, 2895, 2895, 0,
	0, 0, 0, 0, 193, 0, 1262, 0, 1262, 0,
	0, 0, 0, 3325, 3326, 3327, 3429, 0, 271, 1832,
	3324, 3322, 3323, 3315, 3316, 3317, 3318, 3320, 3321, 0,
	0, 0, 0, 0, 0, 0, 0, 271, 1328, 271,
	0, 0, 0, 0, 0, 0, 1535, 0, 1535, 1338,
	271, 0, 0, 1328, 0, 1328, 0, 1328, 0, 0,
	0, 0, 0, 0, 1862, 0, 0, 0, 0, 0,
	3800, 3801, 3802, 3803, 3804, 3805, 3806, 3807, 3808, 3809,
	3810, 3811, 3812, 3813, 3814, 3815, 3816, 3817, 3818, 3819,
	0, 3823, 0, 1862, 0, 0, 0, 0, 0, 0,
	271, 271, 271, 271, 1328, 0, 0, 1328, 0, 271,
	0, 0, 271, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1342, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3330, 271, 0, 0, 0, 0, 1838, 0,
	0, 271, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1833, 0, 0, 0, 0, 0, 0, 0, 0,
	1519, 0, 0, 0, 0, 0, 0, 4626, 0, 0,
	0, 0, 0, 0, 0, 1809, 1810, 0, 0, 0,
	0, 0, 0, 2554, 0, 0, 0, 0, 0, 0,
	0, 4646, 0, 0, 0, 0, 1559, 0, 1840, 1887,
	0, 0, 0, 3409, 0, 1812, 0, 0, 0, 1864,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1597, 0, 0, 0, 0, 0, 0, 0,
	0, 1865, 0, 0, 0, 0, 0, 0, 0, 0,
	1811, 0, 0, 0, 0, 0, 0, 0, 0, 1638,
	1831, 0, 0, 0, 2729, 0, 0, 1535, 0, 1828,
	0, 0, 3325, 3326, 3327, 1653, 0, 0, 0, 3324,
	3322, 3323, 3315, 3316, 3317, 3318, 3320, 3321, 0, 0,
	2724, 2724, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1106, 1106, 1106, 0, 1829, 1825, 0, 1822, 1820,
	1821, 1813, 1814, 1815, 1816, 1818, 1819, 0, 0, 1492,
	0, 0, 0, 1492, 3739, 0, 0, 0, 0, 0,
	0, 0, 0, 1681, 4735, 0, 0, 0, 0, 0,
	4737, 0, 0, 0, 0, 1834, 1835, 1836, 1837, 0,
	0, 0, 0, 0, 0, 1817, 0, 0, 0, 1505,
	0, 0, 1407, 0, 0, 0, 0, 0, 0, 0,
	0, 1845, 0, 0, 0, 0, 0, 1809, 1810, 0,
	2724, 2724, 2724, 2724, 2724, 2724, 2724, 2724, 2724, 2724,
	2724, 2724, 2724, 2724, 2724, 2724, 2724, 2724, 2724, 2724,
	1840, 2724, 0, 0, 1839, 1841, 0, 1812, 0, 0,
	0, 271, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 271, 0, 0,
	1826, 1827, 700, 1865, 0, 0, 0, 700, 3757, 0,
	700, 0, 1811, 700, 700, 0, 0, 0, 0, 700,
	0, 0, 0, 0, 0, 3773, 0, 271, 0, 0,
	0, 0, 0, 1832, 0, 0, 0, 0, 0, 0,
	0, 1535, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1535, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 271, 0, 0,
	0, 271, 271, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1862, 0, 0,
	2895, 2895, 271, 0, 2006, 0, 0, 1817, 0, 0,
	2895, 0, 0, 3475, 0, 0, 0, 0, 0, 0,
	0, 2895, 3475, 0, 2895, 3475, 0, 0, 3475, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 271, 271, 2006, 0, 271, 0, 3866,
	0, 0, 1838, 0, 0, 0, 1839, 1841, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2006, 0, 271,
	0, 3536, 3536, 0, 0, 1833, 1328, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1845, 0, 0, 2895, 0, 2895, 0,
	3562, 2895, 2006, 0, 0, 2895, 2006, 0, 0, 786,
	0, 0, 0, 0, 0, 1832, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1864, 1328, 0, 0, 0, 0, 0,
	0, 271, 0, 0, 0, 1535, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 271,
	0, 3599, 0, 0, 3601, 2895, 0, 0, 271, 0,
	0, 0, 271, 0, 0, 1338, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1862,
	0, 0, 0, 271, 0, 0, 0, 0, 3077, 0,
	0, 1328, 0, 271, 0, 0, 2895, 0, 700, 0,
	0, 0, 0, 0, 0, 2895, 0, 0, 0, 1829,
	1825, 0, 1822, 1820, 1821, 1813, 1814, 1815, 1816, 1818,
	1819, 0, 0, 0, 0, 0, 271, 3077, 73, 0,
	3077, 2729, 0, 0, 0, 0, 1492, 0, 0, 0,
	0, 0, 0, 0, 0, 74, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1809, 1810, 1833, 0, 0,
	0, 79, 0, 0, 0, 3706, 0, 1845, 0, 0,
	0, 0, 0, 1845, 0, 0, 0, 0, 1840, 1845,
	0, 0, 0, 3712, 0, 1812, 1535, 0, 0, 1328,
	271, 0, 271, 0, 0, 0, 0, 0, 1328, 0,
	0, 88, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1865, 2729, 2729, 0, 1864, 0, 0, 0, 0,
	1811, 0, 0, 0, 0, 0, 0, 0, 271, 4373,
	1831, 0, 0, 0, 0, 1809, 1810, 0, 0, 1828,
	0, 0, 899, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 49, 1106, 110, 0, 1840, 0,
	0, 94, 107, 1492, 0, 1812, 0, 0, 0, 0,
	0, 1845, 0, 0, 0, 0, 1845, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3778, 4414, 0, 1845,
	0, 1865, 0, 0, 1845, 0, 0, 0, 0, 0,
	1811, 0, 0, 0, 1822, 1820, 1821, 1813, 1814, 1815,
	1816, 1818, 1819, 0, 0, 1834, 1835, 1836, 1837, 0,
	0, 95, 0, 0, 0, 1817, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2322, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1845,
	0, 0, 0, 1342, 2339, 1845, 0, 0, 0, 0,
	0, 0, 0, 0, 1839, 1841, 2342, 0, 0, 0,
	0, 0, 0, 271, 271, 0, 4155, 0, 2350, 0,
	2353, 2354, 2355, 0, 2729, 2729, 2729, 2729, 0, 0,
	1826, 1827, 0, 0, 1492, 1817, 0, 700, 700, 0,
	0, 0, 0, 0, 4169, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1535, 1535, 0, 1832, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1535, 1535, 0, 1535, 0,
	0, 0, 0, 0, 1839, 1841, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 99, 4561,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1809, 1810, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1845, 1845, 1845, 1845,
	1845, 1845, 1845, 1845, 0, 1840, 0, 1862, 0, 0,
	4584, 0, 1812, 1832, 0, 0, 1845, 0, 0, 0,
	0, 786, 0, 190, 102, 0, 0, 106, 0, 1845,
	0, 0, 0, 0, 0, 4606, 0, 0, 1865, 0,
	0, 0, 0, 0, 0, 0, 0, 1811, 0, 2724,
	0, 0, 0, 239, 3536, 0, 0, 0, 0, 0,
	0, 900, 1838, 0, 0, 0, 153, 271, 0, 0,
	0, 0, 0, 0, 0, 2728, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1833, 0, 1862, 1845, 2006,
	0, 271, 0, 0, 1845, 716, 716, 1338, 0, 3313,
	3314, 241, 3331, 3332, 3333, 0, 0, 2724, 0, 0,
	271, 0, 0, 0, 0, 0, 0, 1407, 0, 0,
	271, 3745, 0, 0, 0, 0, 0, 157, 0, 0,
	271, 0, 0, 0, 0, 271, 0, 0, 0, 0,
	271, 0, 194, 1864, 0, 0, 0, 4365, 0, 0,
	240, 0, 1817, 0, 0, 0, 0, 0, 0, 2895,
	271, 0, 0, 233, 0, 1833, 0, 0, 0, 3106,
	3106, 0, 234, 0, 3328, 905, 905, 2895, 0, 1492,
	0, 3077, 3077, 0, 0, 905, 2895, 0, 0, 0,
	4365, 0, 0, 0, 0, 0, 0, 0, 0, 1635,
	0, 1839, 1841, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 271, 0, 0, 2486, 0, 0, 0, 0,
	0, 0, 0, 1864, 0, 0, 0, 0, 0, 1829,
	1825, 0, 1822, 1820, 1821, 1813, 1814, 1815, 1816, 1818,
	1819, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1832, 0, 0, 0, 0, 0, 0, 0, 0, 3319,
	0, 0, 1492, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2486, 0, 0, 0, 4118, 0, 2724,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3313, 3314, 0, 3331, 3332, 3333, 2859,
	1342, 0, 0, 1820, 1821, 1813, 1814, 1815, 1816, 1818,
	1819, 0, 0, 0, 0, 3744, 0, 0, 0, 0,
	2724, 0, 0, 0, 1862, 3335, 0, 0, 0, 0,
	0, 0, 1492, 0, 0, 0, 0, 0, 0, 0,
	271, 0, 0, 0, 0, 2724, 1535, 0, 271, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1492, 0,
	0, 0, 271, 0, 0, 0, 0, 3329, 3328, 0,
	0, 0, 0, 0, 0, 0, 0, 1338, 0, 0,
	0, 0, 0, 0, 2729, 2729, 0, 0, 0, 0,
	1338, 0, 0, 0, 0, 0, 0, 2895, 2895, 0,
	3536, 2895, 1833, 0, 0, 0, 0, 0, 4206, 0,
	4206, 1535, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2895, 0, 3475, 0, 0, 0, 1535, 1535,
	271, 2006, 0, 0, 0, 0, 3015, 0, 0, 0,
	0, 1862, 0, 0, 2006, 0, 271, 2006, 0, 271,
	0, 3536, 0, 0, 0, 0, 0, 0, 0, 0,
	1864, 0, 0, 3319, 0, 0, 2895, 0, 2895, 271,
	0, 0, 0, 0, 2729, 2729, 2729, 2729, 2729, 2729,
	2729, 2729, 2729, 2729, 2729, 2729, 2729, 2729, 2729, 2729,
	2729, 2729, 2729, 2729, 0, 2729, 0, 0, 0, 0,
	0, 0, 0, 1492, 2895, 0, 0, 0, 0, 4291,
	0, 0, 0, 0, 0, 0, 0, 0, 1845, 3330,
	271, 0, 0, 0, 0, 0, 0, 0, 0, 3335,
	271, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1845, 0, 0, 0, 0, 0, 0,
	3141, 1821, 1813, 1814, 1815, 1816, 1818, 1819, 0, 4206,
	0, 0, 1535, 0, 0, 0, 0, 0, 0, 0,
	0, 3329, 0, 0, 0, 0, 0, 0, 0, 0,
	1492, 1845, 0, 0, 0, 1845, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1845,
	0, 0, 0, 0, 0, 0, 0, 0, 1845, 1845,
	1845, 1845, 1845, 1845, 1845, 1845, 1845, 1845, 1845, 1845,
	1845, 1845, 1845, 1845, 1845, 1845, 1845, 1845, 1845, 1845,
	1845, 1845, 1845, 1845, 1845, 1845, 1845, 1845, 1845, 1845,
	1845, 1845, 1845, 1845, 0, 1862, 0, 0, 0, 1845,
	0, 1845, 1845, 1845, 1845, 0, 0, 0, 0, 3325,
	3326, 3327, 0, 2728, 2728, 0, 3324, 3322, 3323, 3315,
	3316, 3317, 3318, 3320, 3321, 0, 0, 0, 1845, 0,
	2895, 0, 3475, 0, 0, 4406, 0, 0, 0, 0,
	0, 0, 0, 0, 271, 0, 0, 0, 73, 0,
	0, 0, 0, 0, 4430, 0, 4430, 0, 0, 1176,
	0, 0, 0, 0, 0, 74, 0, 0, 0, 0,
	0, 0, 0, 3330, 0, 0, 0, 0, 0, 1845,
	786, 79, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3536, 0, 1328, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2006, 1845,
	271, 0, 1845, 0, 0, 1845, 0, 0, 1845, 0,
	0, 88, 0, 0, 1845, 1845, 1845, 1845, 1845, 1845,
	1845, 0, 0, 0, 0, 4406, 0, 0, 0, 0,
	0, 0, 0, 2895, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4510, 899, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1535, 49, 0, 110, 0, 0, 0,
	0, 94, 107, 0, 0, 4206, 4206, 0, 0, 0,
	1845, 0, 0, 3334, 0, 2728, 2728, 2728, 2728, 0,
	0, 0, 1845, 0, 1845, 271, 271, 0, 0, 1845,
	0, 0, 0, 3325, 3326, 3327, 0, 0, 0, 0,
	3324, 3322, 3323, 3315, 3316, 3317, 3318, 3320, 3321, 3778,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 95, 0, 0, 0, 1535, 0, 0, 1535, 3536,
	4578, 0, 0, 0, 0, 0, 0, 4406, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4206, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4206, 0, 0, 0, 0, 0, 0, 0,
	0, 1267, 0, 1964, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 271, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 716, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4291, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4206,
	0, 271, 4206, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3475, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 99, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1535, 0,
	1535, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1809,
	1810, 0, 1842, 1843, 1844, 1853, 1854, 1855, 0, 0,
	0, 0, 0, 0, 0, 0, 4690, 0, 0, 0,
	0, 0, 1840, 190, 102, 0, 0, 106, 0, 1812,
	0, 0, 4430, 0, 0, 271, 0, 0, 1859, 0,
	1492, 0, 0, 0, 0, 0, 0, 0, 1535, 0,
	0, 1535, 0, 239, 0, 1865, 0, 0, 0, 0,
	2895, 900, 0, 0, 1811, 0, 153, 0, 1809, 1810,
	0, 0, 0, 1492, 1831, 0, 0, 0, 1091, 0,
	0, 271, 0, 1828, 1845, 1845, 0, 1845, 1492, 0,
	0, 1840, 0, 0, 0, 0, 0, 0, 1812, 0,
	0, 241, 0, 0, 0, 0, 0, 0, 3778, 0,
	0, 0, 0, 1492, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1865, 0, 0, 157, 1535, 0,
	0, 0, 0, 1811, 0, 0, 0, 0, 0, 0,
	3573, 0, 194, 1831, 0, 0, 0, 0, 0, 0,
	240, 1106, 1828, 0, 0, 0, 0, 0, 271, 1834,
	1835, 1836, 1837, 233, 0, 1106, 0, 0, 3598, 1817,
	0, 0, 234, 0, 0, 0, 0, 0, 0, 3615,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3623, 0, 0, 0, 0, 1633,
	4406, 0, 0, 0, 0, 0, 0, 3734, 1850, 0,
	0, 1860, 0, 0, 0, 0, 0, 1845, 1839, 1841,
	0, 0, 0, 2729, 0, 0, 0, 0, 1834, 1835,
	1836, 1837, 0, 0, 0, 0, 3664, 3665, 1817, 0,
	2895, 0, 0, 0, 1826, 1827, 0, 4206, 0, 4206,
	0, 0, 1535, 0, 0, 0, 0, 0, 0, 0,
	1492, 0, 1848, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1845, 1845, 0, 2728, 2728, 1832, 0, 1845,
	0, 2729, 0, 0, 0, 0, 0, 1839, 1841, 3334,
	3334, 0, 1535, 1845, 1845, 0, 0, 0, 1535, 0,
	0, 0, 0, 1845, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1826, 1827, 0, 0, 1845, 0, 0,
	1492, 0, 0, 0, 0, 0, 0, 0, 0, 1845,
	0, 0, 0, 0, 0, 0, 0, 0, 3106, 0,
	0, 0, 0, 0, 0, 0, 1832, 2895, 0, 0,
	0, 1862, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3106, 0, 2728, 2728, 2728, 2728, 2728,
	2728, 2728, 2728, 2728, 2728, 2728, 2728, 2728, 2728, 2728,
	2728, 2728, 2728, 2728, 2728, 0, 2728, 3334, 3334, 3334,
	3334, 0, 0, 0, 0, 1267, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1838, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1862, 0, 1845, 0, 0, 0, 0, 0, 0, 1833,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1267, 0, 0, 0, 1267, 0, 0, 0, 0,
	0, 0, 1267, 0, 0, 0, 1851, 0, 0, 0,
	0, 0, 0, 2729, 0, 0, 1492, 0, 0, 1492,
	0, 1809, 1810, 0, 0, 1838, 0, 1853, 1854, 1855,
	0, 0, 0, 0, 0, 0, 0, 1864, 1267, 0,
	0, 0, 0, 0, 1840, 0, 0, 0, 1833, 0,
	0, 1812, 0, 0, 2729, 0, 0, 0, 0, 0,
	1859, 0, 0, 0, 1267, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1865, 0, 2729,
	0, 0, 0, 0, 1267, 0, 1811, 0, 0, 0,
	0, 1267, 0, 0, 1845, 1492, 1831, 0, 0, 0,
	0, 0, 0, 0, 0, 1828, 1864, 1267, 0, 1849,
	0, 0, 1492, 0, 0, 0, 0, 0, 0, 1823,
	1824, 1830, 1852, 1829, 1825, 0, 1822, 1820, 1821, 1813,
	1814, 1815, 1816, 1818, 1819, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1267, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1834, 1835, 1836, 1837, 0, 0, 0, 0, 0,
	1353, 1817, 1829, 1825, 0, 1822, 1820, 1821, 1813, 1814,
	1815, 1816, 1818, 1819, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1091, 1091, 1091,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1850, 0, 0, 1860, 0, 0, 0, 0, 0, 0,
	1839, 1841, 0, 0, 0, 0, 1492, 0, 0, 0,
	0, 0, 0, 3971, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1826, 1827, 0, 0,
	0, 1537, 0, 1543, 0, 1549, 0, 0, 0, 0,
	0, 0, 0, 0, 1848, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1832,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1845, 1845, 0, 0, 1845, 3334, 3334, 1845, 4051,
	4052, 4053, 1845, 0, 1641, 0, 1646, 0, 0, 1845,
	0, 0, 0, 0, 0, 0, 1342, 4067, 4068, 1659,
	0, 1664, 1845, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1862, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1845, 1845, 1845, 1845, 1845,
	0, 0, 0, 0, 0, 1845, 0, 1845, 0, 0,
	3334, 3334, 3334, 3334, 3334, 3334, 3334, 3334, 3334, 3334,
	3334, 3334, 3334, 3334, 3334, 3334, 3334, 3334, 3334, 3334,
	0, 0, 0, 3334, 0, 0, 1845, 1845, 1838, 1729,
	0, 0, 1735, 0, 0, 0, 0, 0, 1845, 0,
	0, 1267, 0, 1267, 0, 0, 0, 1845, 0, 0,
	0, 1833, 0, 0, 0, 0, 0, 0, 1267, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2041, 1851, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1845, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1845, 0, 1864,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1866, 1867,
	1868, 1869, 1870, 1871, 1872, 1873, 1845, 0, 0, 0,
	0, 0, 1492, 73, 0, 0, 0, 0, 0, 0,
	0, 4162, 4163, 0, 0, 0, 0, 0, 1267, 0,
	74, 1886, 0, 0, 0, 0, 0, 1899, 1492, 0,
	0, 0, 0, 0, 0, 0, 79, 0, 0, 0,
	0, 1849, 0, 0, 0, 1267, 0, 0, 0, 0,
	0, 0, 0, 0, 1852, 1829, 1825, 0, 1822, 1820,
	1821, 1813, 1814, 1815, 1816, 1818, 1819, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 88, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1845, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 899, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 110, 1958, 1958, 1958, 1342, 94, 107, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1492, 1492, 0, 1492, 0, 0, 1845, 1845, 0, 0,
	0, 1845, 1845, 0, 0, 1845, 1845, 0, 0, 0,
	1845, 0, 0, 0, 1845, 0, 1267, 1267, 0, 1845,
	0, 1492, 0, 0, 1809, 1810, 1267, 0, 0, 0,
	0, 0, 0, 0, 2728, 0, 95, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1840, 0, 4342,
	0, 4344, 4345, 4346, 1812, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1865, 1492, 0, 0, 0, 0, 0, 0, 0, 1811,
	0, 0, 2728, 0, 0, 0, 0, 1492, 0, 1831,
	0, 0, 0, 0, 0, 0, 0, 0, 1828, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1091, 0, 1267, 0, 1267, 0, 1267, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4393,
	0, 0, 0, 0, 0, 1267, 1267, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1267, 0,
	1140, 0, 0, 3733, 0, 0, 0, 1492, 0, 0,
	1267, 0, 1267, 1267, 1267, 0, 0, 0, 0, 0,
	0, 0, 0, 99, 1834, 1835, 1836, 1837, 0, 0,
	0, 0, 0, 0, 1817, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 270, 270, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1492, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 829, 0, 0, 190, 102,
	0, 0, 106, 1839, 1841, 0, 0, 4479, 0, 0,
	0, 0, 0, 0, 1492, 0, 0, 0, 0, 0,
	1845, 1845, 1845, 829, 0, 0, 0, 0, 239, 1826,
	1827, 1845, 1845, 3334, 2728, 0, 900, 0, 0, 0,
	1845, 153, 0, 1845, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1492, 0, 2041,
	2041, 1267, 1832, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3334, 2728, 241, 0, 0, 0,
	0, 0, 1492, 0, 0, 0, 0, 0, 0, 0,
	0, 1845, 0, 0, 0, 0, 0, 0, 0, 1845,
	2728, 0, 157, 0, 0, 0, 0, 1845, 0, 0,
	0, 0, 0, 0, 0, 0, 1845, 194, 0, 0,
	0, 0, 0, 0, 0, 240, 0, 0, 0, 1106,
	0, 0, 0, 0, 0, 0, 1862, 0, 233, 0,
	0, 0, 0, 0, 0, 0, 0, 234, 0, 0,
	1492, 0, 0, 0, 1267, 0, 0, 0, 0, 0,
	0, 0, 1263, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1838, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1492, 0, 1833, 0, 0, 1267, 0, 0,
	0, 3334, 2398, 0, 1267, 0, 0, 0, 0, 0,
	0, 0, 0, 1267, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1845, 3334, 0, 0, 1845, 0, 0,
	1267, 0, 0, 0, 0, 0, 0, 2423, 0, 0,
	0, 0, 0, 0, 1342, 1342, 3334, 0, 0, 0,
	0, 0, 1864, 0, 0, 0, 0, 0, 799, 0,
	0, 1342, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2461, 0, 2465, 0, 0, 0, 0, 0, 0,
	2479, 0, 0, 810, 1845, 0, 0, 2488, 2489, 2490,
	2491, 2492, 2493, 2494, 2495, 2496, 2497, 2498, 2499, 2500,
	2501, 2502, 2503, 2504, 2505, 2506, 2507, 2508, 2509, 2510,
	2511, 2512, 2513, 2514, 2515, 2516, 2517, 2518, 2519, 2520,
	2521, 2522, 2523, 0, 2529, 0, 2531, 2532, 2533, 2534,
	0, 1267, 1267, 0, 0, 0, 0, 0, 1829, 1825,
	0, 1822, 1820, 1821, 1813, 1814, 1815, 1816, 1818, 1819,
	0, 0, 2558, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1886, 0, 0, 0, 2609, 0,
	0, 0, 1106, 1106, 0, 1267, 804, 0, 0, 0,
	0, 0, 0, 816, 2639, 2642, 2645, 2648, 0, 0,
	2654, 2655, 2656, 2657, 2658, 2659, 2660, 809, 0, 0,
	0, 0, 0, 0, 0, 1845, 0, 0, 0, 2041,
	0, 1809, 1810, 0, 0, 0, 0, 0, 2720, 0,
	2732, 2734, 2739, 0, 0, 0, 0, 0, 1845, 0,
	0, 0, 0, 0, 1840, 0, 0, 0, 0, 0,
	0, 1812, 0, 0, 0, 0, 808, 0, 0, 0,
	0, 0, 1267, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 761, 0, 0, 0, 1865, 1267, 0,
	0, 0, 0, 0, 0, 0, 1811, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1831, 0, 806, 0,
	1106, 0, 0, 0, 0, 1828, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1267, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 815, 0, 1267,
	3228, 0, 0, 1809, 1810, 0, 1842, 1843, 1844, 1853,
	1854, 1855, 0, 1845, 1267, 0, 1267, 1845, 0, 0,
	0, 1834, 1835, 1836, 1837, 1846, 1840, 0, 0, 0,
	0, 1817, 1267, 1812, 0, 0, 0, 0, 0, 0,
	0, 0, 1859, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1865,
	0, 0, 0, 0, 0, 0, 0, 0, 1811, 0,
	0, 0, 801, 0, 0, 0, 0, 0, 1831, 0,
	1839, 1841, 0, 0, 0, 0, 0, 1828, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 270, 0,
	270, 270, 0, 805, 270, 0, 1826, 1827, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1832,
	760, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 270, 0, 270, 270, 811, 0, 270, 270, 0,
	0, 803, 0, 1834, 1835, 1836, 1837, 0, 0, 0,
	0, 0, 0, 1817, 0, 0, 829, 0, 0, 0,
	0, 0, 0, 3034, 3035, 0, 3037, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 800, 0,
	0, 0, 1850, 1862, 0, 1860, 0, 0, 0, 0,
	0, 0, 1839, 1841, 0, 0, 0, 270, 270, 0,
	0, 0, 0, 0, 0, 0, 807, 0, 0, 1856,
	0, 1857, 0, 0, 0, 0, 0, 0, 1826, 1827,
	762, 0, 0, 270, 270, 0, 0, 0, 0, 0,
	0, 802, 0, 0, 1809, 1810, 1848, 0, 1838, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1832, 0, 0, 813, 814, 0, 1840, 0, 0,
	0, 1833, 0, 0, 1812, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1865, 0, 0, 0, 3167, 0, 1858, 0, 0, 1811,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1831,
	0, 0, 0, 0, 1847, 0, 0, 0, 1828, 1864,
	0, 0, 0, 0, 0, 1862, 0, 0, 270, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	270, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1866, 1867, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3221, 0, 0, 0, 0, 0, 0,
	1838, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1834, 1835, 1836, 1837, 0, 0,
	0, 1267, 1267, 1833, 1817, 1829, 1825, 0, 1822, 1820,
	1821, 1813, 1814, 1815, 1816, 1818, 1819, 1267, 3222, 3223,
	0, 0, 0, 0, 3229, 0, 0, 0, 0, 0,
	1851, 0, 0, 0, 0, 1267, 0, 0, 0, 0,
	0, 0, 0, 3243, 3244, 0, 0, 1267, 0, 2609,
	1267, 0, 0, 1839, 1841, 0, 0, 0, 0, 0,
	0, 1864, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2041, 0, 0, 0, 1267, 0, 0, 0, 1826,
	1827, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1267, 0, 0, 3253, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3267, 0, 1832, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3279, 0, 0,
	0, 0, 0, 1849, 0, 0, 0, 1267, 0, 0,
	0, 0, 2041, 1823, 1824, 1830, 1852, 1829, 1825, 0,
	1822, 1820, 1821, 1813, 1814, 1815, 1816, 1818, 1819, 746,
	0, 0, 0, 3288, 0, 0, 0, 3289, 0, 0,
	0, 0, 1980, 0, 1263, 0, 1267, 0, 270, 729,
	0, 0, 0, 0, 730, 0, 1862, 0, 0, 0,
	0, 0, 0, 746, 270, 1980, 270, 0, 1267, 0,
	1267, 0, 829, 0, 0, 0, 0, 0, 0, 829,
	0, 0, 0, 729, 0, 0, 0, 0, 730, 0,
	0, 0, 1267, 731, 0, 0, 0, 0, 0, 2739,
	2739, 2739, 0, 1267, 732, 0, 270, 1267, 0, 0,
	0, 1838, 0, 270, 1958, 0, 0, 0, 0, 0,
	0, 0, 3372, 0, 0, 733, 0, 731, 0, 0,
	0, 0, 1267, 0, 1833, 0, 0, 0, 732, 0,
	0, 0, 0, 0, 0, 0, 1267, 752, 1267, 0,
	0, 0, 1267, 0, 0, 0, 0, 0, 0, 733,
	1267, 0, 0, 0, 0, 0, 0, 0, 734, 0,
	0, 1267, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 752, 0, 0, 0, 0, 1267, 0, 0, 0,
	0, 735, 1864, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 734, 1267, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 736, 0, 0, 737, 0, 0,
	0, 0, 0, 0, 0, 735, 0, 1091, 1267, 1267,
	0, 0, 0, 0, 761, 0, 0, 0, 0, 0,
	0, 1091, 0, 0, 0, 0, 0, 0, 736, 0,
	0, 737, 0, 1267, 0, 0, 0, 0, 0, 751,
	0, 0, 0, 0, 0, 0, 0, 0, 761, 0,
	0, 0, 0, 0, 3494, 0, 0, 0, 1829, 1825,
	0, 1822, 1820, 1821, 1813, 1814, 1815, 1816, 1818, 1819,
	0, 0, 0, 751, 0, 0, 0, 0, 1267, 0,
	0, 1267, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 270, 0, 0, 748, 829,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 748, 0, 0, 0, 0, 0, 2041, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 270, 0, 1267, 0, 270,
	0, 0, 0, 0, 0, 270, 0, 0, 758, 0,
	739, 270, 0, 0, 1267, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2041, 2041, 0, 270, 0, 270,
	0, 0, 0, 0, 0, 270, 0, 0, 0, 759,
	0, 740, 0, 0, 739, 0, 0, 0, 0, 0,
	0, 0, 0, 2041, 2041, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 759, 0, 740, 0, 0, 0, 0,
	270, 760, 0, 270, 0, 0, 2041, 0, 0, 741,
	0, 0, 0, 0, 756, 757, 754, 0, 0, 0,
	0, 0, 749, 0, 270, 742, 0, 0, 0, 0,
	0, 0, 0, 1267, 1267, 760, 0, 829, 270, 0,
	270, 0, 270, 741, 270, 0, 270, 0, 756, 757,
	754, 0, 0, 0, 0, 0, 749, 0, 0, 742,
	0, 0, 0, 0, 0, 0, 0, 743, 1267, 750,
	0, 0, 0, 0, 0, 0, 0, 0, 744, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 270, 270,
	270, 270, 745, 0, 0, 0, 0, 753, 0, 0,
	0, 743, 0, 750, 0, 0, 0, 0, 0, 0,
	0, 762, 744, 0, 0, 0, 0, 0, 2479, 0,
	0, 0, 747, 0, 3731, 3732, 745, 0, 3735, 0,
	0, 753, 3738, 0, 0, 0, 0, 0, 0, 0,
	0, 3742, 0, 0, 0, 762, 0, 0, 0, 0,
	3749, 0, 0, 0, 0, 3372, 747, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3762, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3785, 3786, 0, 3787, 3788, 3789, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3795, 0, 0, 0, 3797, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1267, 0, 0, 0, 0,
	1267, 0, 0, 0, 0, 0, 0, 0, 3826, 3827,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2041, 3838, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3847, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1267, 0, 1263, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1267, 0, 0, 0, 1263, 0, 0, 0, 0, 0,
	0, 1267, 1267, 1267, 0, 0, 0, 0, 270, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1267, 1267,
	1267, 0, 0, 0, 0, 0, 270, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1267, 0,
	0, 3896, 0, 0, 1267, 0, 0, 0, 1809, 1810,
	0, 1842, 1843, 1844, 1853, 1854, 1855, 0, 0, 0,
	3907, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1267, 1840, 0, 0, 0, 270, 0, 0, 1812, 0,
	0, 2041, 0, 0, 0, 0, 0, 1859, 0, 0,
	270, 0, 0, 270, 3936, 0, 0, 270, 0, 270,
	0, 0, 0, 0, 1865, 0, 270, 270, 0, 0,
	0, 0, 0, 1811, 0, 0, 270, 0, 0, 0,
	0, 0, 0, 1831, 0, 0, 0, 0, 0, 0,
	0, 0, 1828, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1256, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 270, 0, 0, 0, 0, 0,
	1267, 0, 0, 0, 0, 0, 0, 270, 1267, 0,
	0, 0, 1267, 1267, 0, 1267, 0, 0, 0, 0,
	270, 0, 1267, 0, 266, 266, 696, 0, 1834, 1835,
	1836, 1837, 0, 1267, 1267, 0, 0, 0, 1817, 0,
	0, 0, 0, 1267, 0, 0, 1958, 0, 0, 0,
	0, 0, 270, 0, 0, 4046, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1267, 0,
	1267, 0, 0, 0, 0, 0, 0, 1850, 0, 0,
	1860, 0, 0, 0, 0, 829, 0, 1839, 1841, 0,
	0, 0, 0, 1267, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1267, 1856, 1267, 1857, 0, 1267, 0,
	0, 0, 0, 1826, 1827, 270, 0, 829, 0, 1267,
	0, 0, 0, 0, 270, 0, 0, 0, 0, 0,
	0, 1848, 0, 0, 0, 0, 0, 4096, 4097, 0,
	0, 0, 0, 4101, 4102, 0, 1832, 0, 4105, 4106,
	0, 0, 0, 0, 0, 0, 4110, 1267, 1267, 0,
	0, 0, 0, 0, 0, 0, 0, 4114, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1267, 0, 270,
	0, 0, 0, 4119, 0, 0, 0, 0, 0, 1267,
	0, 1858, 0, 0, 1267, 0, 0, 0, 270, 0,
	270, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 270, 0, 0, 0, 0, 0, 0, 0, 1267,
	1862, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1267, 1267, 1267, 1267, 1267, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1267, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 270, 270, 270, 270, 0, 0, 0, 0, 0,
	270, 0, 0, 270, 0, 1838, 1267, 0, 0, 0,
	0, 0, 0, 0, 1153, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2041, 1833, 0,
	0, 0, 0, 0, 270, 0, 0, 0, 0, 0,
	0, 0, 270, 0, 0, 0, 0, 0, 0, 1267,
	0, 1267, 0, 0, 0, 1851, 0, 0, 0, 0,
	272, 272, 272, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1267, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1864, 0, 0, 272,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2041,
	0, 0, 0, 0, 0, 0, 0, 272, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1267, 0, 0, 0, 0, 0, 0, 1267,
	0, 0, 0, 0, 0, 0, 0, 0, 1849, 1267,
	1267, 0, 0, 0, 0, 0, 0, 0, 1823, 1824,
	1830, 1852, 1829, 1825, 0, 1822, 1820, 1821, 1813, 1814,
	1815, 1816, 1818, 1819, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1267, 0, 0, 1267, 0, 0,
	0, 0, 0, 0, 0, 1809, 1810, 0, 1842, 1843,
	1844, 1853, 1854, 1855, 0, 1267, 1267, 0, 0, 0,
	0, 0, 4360, 4361, 4362, 0, 0, 1846, 1840, 0,
	0, 0, 0, 0, 0, 1812, 0, 0, 0, 0,
	0, 0, 0, 0, 1859, 2479, 0, 0, 4371, 4372,
	0, 0, 0, 0, 0, 2041, 0, 0, 0, 0,
	0, 1865, 0, 0, 0, 0, 4380, 4383, 0, 0,
	1811, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1831, 0, 0, 1129, 112, 0, 0, 0, 0, 1828,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1263, 0, 0, 0, 0, 1267, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1263, 0,
	0, 0, 1267, 0, 0, 0, 0, 0, 0, 4431,
	0, 0, 0, 0, 0, 0, 0, 0, 4439, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1980, 0,
	0, 0, 4447, 0, 0, 1091, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1834, 1835, 1836, 1837, 4456,
	0, 0, 0, 0, 0, 1817, 0, 0, 112, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1267,
	0, 0, 1267, 0, 0, 0, 1267, 0, 270, 0,
	0, 0, 270, 270, 0, 0, 1267, 1267, 0, 0,
	0, 0, 0, 0, 1850, 0, 0, 1860, 0, 0,
	0, 0, 0, 1267, 1839, 1841, 0, 0, 0, 0,
	0, 0, 0, 270, 0, 0, 0, 0, 0, 0,
	0, 1856, 0, 1857, 0, 0, 1314, 0, 1314, 1314,
	1826, 1827, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1066, 0, 1848, 0,
	0, 0, 0, 0, 270, 270, 0, 1086, 270, 0,
	0, 0, 0, 1832, 0, 1980, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1404,
	270, 0, 0, 0, 0, 1509, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1250, 0, 0, 1858, 0,
	0, 0, 0, 0, 849, 0, 0, 4583, 0, 0,
	0, 4587, 0, 0, 0, 0, 1847, 0, 0, 0,
	0, 0, 0, 0, 851, 0, 0, 1862, 0, 852,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 270, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	829, 0, 0, 0, 0, 0, 0, 0, 853, 270,
	870, 1639, 1640, 270, 0, 0, 0, 0, 0, 0,
	0, 0, 1838, 0, 0, 0, 0, 0, 1091, 1091,
	0, 0, 0, 0, 270, 854, 0, 0, 4644, 0,
	855, 0, 0, 0, 1263, 1833, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 879, 0, 0, 0, 0, 0, 0, 856,
	0, 0, 1851, 0, 0, 0, 0, 270, 0, 0,
	0, 0, 0, 877, 0, 0, 0, 0, 0, 0,
	0, 0, 2479, 0, 0, 0, 0, 0, 0, 0,
	0, 4383, 0, 1864, 0, 0, 850, 1267, 0, 1267,
	0, 0, 0, 0, 0, 0, 1756, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 857,
	0, 0, 858, 0, 0, 0, 0, 0, 0, 0,
	0, 270, 0, 270, 881, 0, 1091, 0, 0, 761,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 272, 0, 272, 272, 0, 0, 272, 0,
	1351, 0, 0, 0, 0, 1849, 0, 0, 0, 270,
	0, 0, 0, 0, 0, 1823, 1824, 1830, 1852, 1829,
	1825, 0, 1822, 1820, 1821, 1813, 1814, 1815, 1816, 1818,
	1819, 0, 0, 0, 0, 2605, 4765, 4765, 4765, 2606,
	0, 0, 0, 0, 0, 272, 1351, 272, 272, 0,
	1351, 272, 272, 880, 0, 0, 0, 1351, 0, 0,
	0, 0, 0, 875, 0, 0, 0, 0, 0, 4788,
	272, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1351, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1351,
	0, 272, 272, 0, 859, 0, 4765, 0, 0, 0,
	0, 0, 0, 0, 0, 861, 0, 0, 0, 1351,
	0, 0, 0, 0, 0, 0, 1351, 272, 272, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1351, 0, 1263, 1263, 862, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 871, 0, 1996, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 760, 0, 0, 0,
	0, 0, 2007, 0, 1509, 0, 0, 0, 0, 848,
	1351, 872, 0, 0, 0, 0, 0, 0, 0, 0,
	863, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 272, 0, 1314, 869, 0, 4765, 4923, 0,
	0, 1509, 0, 0, 0, 0, 4927, 0, 0, 0,
	0, 0, 864, 0, 272, 0, 865, 884, 0, 883,
	0, 112, 0, 866, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 867, 0, 0,
	0, 0, 876, 0, 0, 0, 0, 0, 885, 0,
	882, 0, 0, 0, 0, 0, 762, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 270, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 112, 0, 112, 0, 112, 0, 0, 0,
	0, 0, 270, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 270, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 270, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 270, 0, 0, 0, 0, 270, 0, 1086, 112,
	112, 270, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 112, 0, 112, 0, 0,
	0, 1263, 0, 0, 0, 0, 0, 0, 0, 0,
	112, 0, 112, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 270, 0, 0, 0, 0, 0, 0,
	0, 0, 272, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1351, 0, 0, 0, 112, 272, 272,
	272, 0, 0, 2278, 0, 0, 272, 2285, 0, 0,
	0, 0, 0, 272, 0, 0, 0, 0, 0, 2298,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2310, 0, 2310, 0, 0,
	272, 0, 0, 2317, 0, 0, 0, 272, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2285, 0,
	0, 2346, 1066, 1351, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 276, 0, 0, 0, 0,
	0, 1263, 2366, 1879, 0, 0, 0, 0, 0, 1263,
	1351, 0, 0, 0, 0, 0, 2382, 0, 2384, 0,
	2386, 1885, 2388, 1980, 2389, 1891, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 163, 0, 0, 0, 0, 0, 0, 0,
	73, 0, 46, 45, 0, 0, 2416, 2417, 2418, 1980,
	821, 1980, 0, 0, 0, 0, 0, 74, 0, 0,
	158, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 270, 0, 79, 0, 0, 0, 0, 821, 0,
	0, 0, 0, 0, 67, 0, 0, 270, 0, 0,
	270, 48, 0, 160, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	270, 47, 0, 88, 0, 0, 0, 0, 0, 272,
	0, 1351, 1351, 272, 0, 1978, 0, 1981, 0, 112,
	0, 1351, 0, 0, 0, 0, 0, 0, 0, 0,
	50, 68, 0, 0, 0, 0, 0, 0, 0, 51,
	0, 0, 0, 0, 57, 0, 0, 0, 161, 0,
	0, 270, 0, 0, 0, 0, 49, 0, 110, 0,
	0, 270, 0, 94, 107, 0, 0, 0, 0, 272,
	0, 0, 0, 272, 0, 0, 0, 0, 0, 272,
	0, 0, 0, 0, 0, 272, 0, 0, 0, 0,
	1980, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 272, 0, 272, 0, 52, 0, 0, 0, 272,
	0, 0, 0, 0, 0, 0, 0, 0, 1351, 0,
	1351, 0, 1351, 95, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1351, 1351, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1351, 272, 0, 0, 272, 0, 0,
	0, 0, 0, 0, 0, 1351, 0, 1351, 1351, 1351,
	0, 0, 0, 0, 0, 0, 2796, 0, 272, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 272, 272, 0, 272, 0, 272, 0, 272, 0,
	272, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 270, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 272, 272, 272, 272, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2844, 0,
	0, 1314, 0, 0, 0, 1314, 0, 1314, 0, 0,
	99, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2298, 0, 0, 0, 53, 0,
	0, 270, 0, 0, 0, 0, 1351, 0, 0, 0,
	0, 0, 0, 56, 0, 0, 0, 0, 59, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 69, 0,
	0, 0, 0, 0, 58, 190, 102, 0, 0, 106,
	0, 0, 0, 54, 0, 0, 0, 162, 0, 0,
	0, 0, 0, 0, 0, 55, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 239, 0, 0, 0, 0,
	0, 0, 0, 62, 0, 0, 1980, 1980, 153, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 159, 0, 0, 270, 270, 0, 1351,
	0, 0, 0, 0, 0, 0, 0, 1086, 0, 1086,
	1509, 0, 0, 241, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 157,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 194, 0, 0, 0, 0, 0,
	0, 0, 240, 0, 0, 0, 0, 0, 1980, 1351,
	0, 0, 0, 2285, 0, 233, 0, 0, 0, 0,
	0, 0, 2298, 1980, 234, 0, 0, 0, 0, 0,
	0, 0, 272, 0, 0, 1351, 0, 0, 0, 0,
	0, 112, 0, 0, 0, 270, 0, 0, 0, 0,
	272, 193, 0, 0, 3, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3139, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1980, 0, 270, 1980, 0, 0, 3150, 0, 3153, 272,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 272, 1066, 0, 272, 1066, 1066,
	0, 272, 0, 272, 0, 0, 0, 0, 0, 0,
	272, 272, 0, 0, 0, 0, 1351, 1351, 0, 0,
	272, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3183,
	1509, 3185, 1509, 0, 0, 0, 0, 0, 3191, 0,
	0, 1349, 0, 0, 2547, 0, 0, 0, 0, 0,
	1351, 0, 0, 0, 0, 0, 270, 0, 0, 0,
	0, 0, 0, 0, 1086, 0, 0, 0, 272, 0,
	0, 0, 1314, 0, 1885, 0, 0, 0, 1885, 0,
	3219, 272, 0, 0, 0, 0, 0, 1410, 0, 0,
	0, 1410, 0, 0, 272, 0, 0, 0, 1349, 0,
	0, 0, 270, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 272, 1351, 0, 0,
	0, 0, 0, 0, 1349, 0, 0, 0, 0, 0,
	0, 0, 0, 1351, 0, 0, 0, 0, 0, 0,
	0, 1250, 0, 0, 0, 0, 0, 0, 0, 272,
	1349, 0, 0, 0, 0, 0, 0, 1981, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 270,
	1349, 0, 0, 0, 0, 0, 0, 1349, 0, 272,
	0, 272, 0, 1351, 0, 0, 0, 0, 272, 0,
	0, 0, 0, 1349, 0, 112, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1351, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1351,
	0, 1351, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 272, 0, 0, 0, 1351, 0, 0,
	0, 1349, 0, 0, 0, 0, 0, 0, 1980, 0,
	1980, 0, 272, 0, 272, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 272, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 272, 272, 272, 272, 0,
	0, 0, 0, 0, 272, 0, 0, 272, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 272, 0,
	0, 0, 0, 0, 0, 0, 272, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1809, 1810, 0, 1842,
	1843, 1844, 1853, 1854, 1855, 0, 0, 0, 0, 0,
	0, 0, 112, 0, 0, 112, 1314, 112, 1846, 1840,
	1509, 1509, 0, 0, 0, 0, 1812, 0, 0, 0,
	1145, 0, 0, 0, 0, 1859, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3463, 1865, 0, 0, 0, 0, 0, 0, 0,
	0, 1811, 0, 112, 0, 0, 112, 0, 0, 0,
	0, 1831, 112, 0, 0, 0, 0, 0, 0, 0,
	1828, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3513, 3515, 0, 0, 2298, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1410, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 821, 0, 0,
	0, 0, 0, 0, 821, 0, 0, 0, 0, 112,
	0, 0, 0, 0, 0, 0, 1834, 1835, 1836, 1837,
	0, 0, 0, 0, 0, 0, 1817, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1850, 0, 0, 1860, 0,
	0, 0, 0, 0, 0, 1839, 1841, 3612, 0, 0,
	0, 3616, 0, 0, 1349, 0, 0, 1351, 0, 0,
	0, 0, 1856, 0, 1857, 0, 0, 0, 0, 0,
	0, 1826, 1827, 0, 0, 0, 0, 0, 0, 0,
	0, 1410, 0, 0, 0, 0, 0, 0, 0, 1848,
	1351, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1832, 1351, 0, 0, 0, 0,
	0, 0, 2547, 0, 0, 3669, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1351, 0, 0, 1885, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1351, 0, 0, 1858,
	0, 0, 272, 0, 0, 0, 272, 272, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1847, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1862, 3716,
	0, 1509, 0, 0, 0, 0, 0, 272, 0, 0,
	0, 0, 1351, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1349, 1349, 0, 0, 0, 3729, 0, 0,
	0, 0, 1410, 0, 0, 0, 0, 0, 272, 272,
	0, 1351, 272, 1838, 0, 0, 0, 0, 0, 272,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1351, 272, 1351, 1833, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1351, 0, 0,
	0, 0, 0, 1851, 0, 0, 0, 0, 1351, 0,
	0, 0, 1351, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1864, 0, 0, 1351, 0, 1349,
	0, 1349, 0, 1349, 0, 0, 272, 0, 0, 0,
	0, 1351, 0, 1351, 0, 1250, 0, 1351, 0, 0,
	0, 1349, 1349, 0, 272, 1351, 0, 0, 0, 0,
	0, 1250, 0, 272, 1349, 0, 1351, 272, 0, 0,
	0, 0, 0, 0, 0, 0, 1349, 0, 1349, 1349,
	1349, 1351, 0, 0, 0, 0, 0, 0, 272, 0,
	0, 0, 0, 0, 0, 0, 1849, 0, 0, 0,
	0, 0, 821, 0, 0, 0, 1823, 1824, 1830, 1852,
	1829, 1825, 0, 1822, 1820, 1821, 1813, 1814, 1815, 1816,
	1818, 1819, 0, 1351, 1351, 0, 0, 0, 0, 0,
	4124, 272, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1351, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1351, 0, 272, 1351, 272, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1410, 112, 112,
	0, 112, 112, 112, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 272, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 112,
	112, 0, 112, 112, 112, 0, 0, 0, 0, 0,
	0, 0, 1351, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1351,
	2298, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1410, 0, 0, 0, 0, 0, 0, 0, 0, 2298,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4010,
	0, 0, 0, 0, 0, 0, 1350, 0, 0, 0,
	0, 0, 0, 0, 2298, 0, 0, 0, 0, 4028,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1410, 0, 1411, 0, 0, 0, 1411, 1250, 0, 0,
	1086, 0, 0, 1350, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 112, 112, 1410, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4081, 0, 0, 0, 0, 0, 0, 0, 1350,
	0, 0, 0, 1351, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1350, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1350, 0, 0, 0, 0,
	0, 0, 1350, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1350, 0,
	0, 0, 0, 0, 0, 0, 0, 1349, 1349, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1410, 0, 0, 0, 0, 1350, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 272, 0, 0, 0, 0, 0, 0, 0,
	0, 1809, 1810, 0, 1842, 1843, 1844, 1853, 1854, 1855,
	1351, 0, 0, 0, 0, 1351, 272, 0, 0, 0,
	0, 0, 0, 1846, 1840, 0, 0, 0, 0, 0,
	0, 1812, 0, 0, 0, 272, 0, 0, 1410, 0,
	1859, 0, 0, 0, 0, 272, 0, 0, 0, 0,
	0, 0, 0, 0, 1349, 272, 0, 1865, 0, 4225,
	272, 0, 0, 0, 0, 272, 1811, 0, 0, 112,
	0, 1351, 0, 0, 0, 2298, 1831, 0, 0, 0,
	0, 0, 0, 0, 0, 1828, 0, 1250, 1250, 0,
	0, 0, 0, 0, 0, 0, 1351, 1351, 1351, 0,
	0, 0, 821, 0, 1349, 0, 0, 0, 0, 0,
	0, 0, 0, 1351, 1351, 1351, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1351, 0, 1349, 0, 272, 0, 1351,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2298,
	1349, 0, 1349, 0, 0, 0, 0, 0, 0, 4313,
	0, 1834, 1835, 1836, 1837, 1351, 0, 0, 1349, 0,
	0, 1817, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1850, 0, 0, 1860, 0, 0, 0, 0, 0, 0,
	1839, 1841, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1856, 0, 1857,
	0, 0, 0, 0, 0, 0, 1826, 1827, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1411,
	0, 0, 0, 0, 1848, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1832,
	0, 0, 0, 0, 0, 0, 0, 1351, 1351, 0,
	1351, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1351, 1351,
	0, 0, 0, 0, 0, 0, 0, 0, 1351, 0,
	0, 0, 0, 4416, 1858, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 112, 0,
	0, 0, 1847, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1862, 0, 0, 0, 0, 0, 1350,
	0, 0, 0, 0, 1250, 272, 0, 0, 1351, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1351, 0,
	1351, 272, 0, 1351, 272, 0, 1411, 0, 0, 2298,
	0, 0, 0, 0, 1351, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 272, 0, 0, 0, 1838, 0,
	0, 0, 0, 112, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1833, 1351, 1351, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1351, 0, 0, 272, 0, 0, 1851, 0,
	0, 0, 0, 0, 1351, 272, 0, 0, 0, 1351,
	0, 0, 1809, 1810, 0, 1842, 1843, 1844, 1853, 1854,
	1855, 0, 0, 0, 4551, 1509, 0, 0, 0, 1864,
	0, 0, 0, 0, 1846, 1840, 0, 0, 0, 0,
	0, 0, 1812, 0, 0, 0, 1351, 1351, 1351, 1351,
	1351, 1859, 0, 0, 0, 0, 0, 1350, 1350, 0,
	0, 1351, 0, 0, 0, 0, 0, 1411, 1865, 0,
	0, 0, 0, 0, 0, 0, 0, 1811, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1831, 112, 0,
	0, 1351, 0, 0, 1250, 0, 1828, 0, 0, 0,
	0, 1849, 1250, 0, 0, 0, 0, 0, 1410, 0,
	0, 1823, 1824, 1830, 1852, 1829, 1825, 0, 1822, 1820,
	1821, 1813, 1814, 1815, 1816, 1818, 1819, 0, 0, 0,
	0, 0, 0, 0, 1351, 3747, 1351, 0, 0, 0,
	0, 1410, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1410, 0, 0, 1351,
	0, 0, 0, 0, 1350, 0, 1350, 0, 1350, 272,
	0, 0, 1834, 1835, 1836, 1837, 0, 0, 0, 0,
	4649, 1410, 1817, 0, 0, 0, 1350, 1350, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1349, 0, 1350,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1350, 0, 1350, 1350, 1350, 0, 0, 0, 0,
	0, 1850, 0, 0, 1860, 0, 0, 1351, 0, 0,
	0, 1839, 1841, 0, 1351, 272, 0, 0, 0, 0,
	0, 0, 0, 1349, 1351, 1351, 0, 0, 1856, 0,
	1857, 0, 0, 0, 0, 0, 0, 1826, 1827, 0,
	112, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 112, 4703, 1848, 0, 0, 0, 0,
	0, 0, 1349, 0, 0, 0, 0, 0, 0, 1351,
	1832, 0, 1351, 0, 0, 0, 112, 0, 0, 0,
	0, 0, 0, 0, 1349, 0, 1349, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4742, 0, 0, 0, 0, 0, 0, 0, 1410, 0,
	272, 272, 0, 0, 0, 1858, 0, 0, 0, 1349,
	0, 0, 1411, 1349, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1847, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1862, 0, 0, 0, 1349, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1349, 0, 1349, 0, 0, 0, 1410, 0,
	0, 0, 0, 0, 0, 821, 1349, 4808, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1349, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1838,
	0, 0, 1349, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1411, 0, 0, 0, 272,
	0, 0, 1833, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1349, 1349, 0, 0, 0, 1851,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 272, 0, 0, 1349,
	0, 1351, 0, 0, 0, 0, 0, 0, 0, 0,
	1864, 1351, 1351, 0, 0, 1411, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1351, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1411, 0, 0, 1410, 0, 0, 1410, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1849, 0, 0, 0, 0, 0, 0, 0,
	272, 2547, 1823, 1824, 1830, 1852, 1829, 1825, 0, 1822,
	1820, 1821, 1813, 1814, 1815, 1816, 1818, 1819, 0, 0,
	0, 0, 0, 0, 0, 0, 3291, 0, 0, 0,
	0, 0, 0, 1410, 0, 0, 1809, 1810, 0, 1842,
	1843, 1844, 1853, 1854, 1855, 0, 272, 0, 0, 0,
	1410, 0, 1350, 1350, 0, 0, 0, 0, 1846, 1840,
	0, 0, 0, 0, 0, 0, 1812, 0, 0, 0,
	0, 0, 0, 0, 0, 1859, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1865, 0, 0, 0, 1411, 0, 0, 0,
	0, 1811, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1831, 0, 0, 0, 0, 0, 0, 0, 0,
	1828, 0, 0, 272, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 112, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1411, 0, 0, 0, 0, 0, 0,
	112, 0, 0, 0, 1410, 0, 0, 0, 0, 1350,
	0, 0, 0, 0, 0, 0, 1834, 1835, 1836, 1837,
	0, 0, 0, 0, 0, 0, 1817, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1350,
	0, 0, 0, 0, 0, 1850, 0, 0, 1860, 0,
	0, 0, 0, 0, 0, 1839, 1841, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1350, 0, 1856, 0, 1857, 0, 0, 0, 0, 0,
	0, 1826, 1827, 0, 0, 1350, 0, 1350, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1848,
	0, 1809, 1810, 1350, 1842, 1843, 1844, 1853, 1854, 1855,
	0, 0, 0, 112, 1832, 0, 0, 0, 0, 112,
	0, 0, 0, 1846, 1840, 0, 0, 0, 0, 0,
	0, 1812, 0, 0, 0, 0, 0, 0, 0, 0,
	1859, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1349, 0, 0, 0, 0, 1349, 1865, 0, 1858,
	0, 0, 0, 0, 0, 0, 1811, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1831, 1847, 0, 0,
	0, 0, 0, 0, 0, 1828, 0, 0, 1862, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1349, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1349, 1349, 1349,
	0, 0, 0, 1838, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1349, 1349, 1349, 0, 0, 0,
	0, 1834, 1835, 1836, 1837, 0, 1833, 0, 0, 0,
	0, 1817, 0, 0, 1349, 0, 0, 0, 0, 0,
	1410, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1851, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1410, 0, 0, 0,
	1850, 0, 0, 1860, 0, 0, 0, 0, 0, 0,
	1839, 1841, 0, 0, 1864, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1856, 0, 1857,
	0, 0, 0, 0, 0, 0, 1826, 1827, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1848, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1832,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1849, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1823, 1824, 1830, 1852,
	1829, 1825, 0, 1822, 1820, 1821, 1813, 1814, 1815, 1816,
	1818, 1819, 0, 0, 1858, 0, 0, 0, 1410, 1410,
	3290, 1410, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1847, 0, 0, 0, 0, 0, 0, 1349,
	1349, 0, 0, 1862, 0, 0, 0, 0, 0, 1410,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1411, 0, 0, 0, 0, 1838, 1349,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1410,
	0, 1349, 0, 0, 1349, 0, 0, 0, 0, 0,
	0, 1833, 0, 0, 0, 1410, 1411, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1411, 0, 0, 0, 0, 0, 0, 1851, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1349, 1349, 0, 1411, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1864,
	0, 0, 1350, 1349, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1410, 0, 0, 0, 0,
	1349, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1350, 0,
	0, 0, 0, 0, 0, 0, 0, 1349, 1349, 1349,
	1349, 1349, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1849, 1410, 0, 0, 0, 0, 0, 0, 0,
	0, 1823, 1824, 1830, 1852, 1829, 1825, 1350, 1822, 1820,
	1821, 1813, 1814, 1815, 1816, 1818, 1819, 0, 0, 0,
	0, 0, 1410, 0, 0, 3287, 0, 0, 0, 1350,
	0, 1350, 0, 1809, 1810, 0, 1842, 1843, 1844, 1853,
	1854, 1855, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1411, 0, 1846, 1840, 0, 0, 0,
	0, 0, 0, 1812, 1350, 1410, 0, 1349, 1350, 0,
	0, 0, 1859, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1865,
	1410, 0, 0, 1350, 0, 0, 0, 0, 1811, 0,
	0, 0, 0, 0, 0, 0, 0, 1350, 1831, 1350,
	0, 0, 0, 1411, 0, 0, 0, 1828, 0, 0,
	0, 1350, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1350, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1350, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1410, 0,
	0, 0, 0, 0, 0, 1349, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1349, 1349, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1350,
	1350, 0, 0, 1834, 1835, 1836, 1837, 0, 0, 0,
	0, 0, 0, 1817, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1350, 0, 0, 0, 0, 0,
	1410, 0, 0, 1349, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1850, 0, 0, 1860, 0, 0, 0, 0,
	0, 0, 1839, 1841, 0, 0, 0, 0, 0, 1411,
	0, 0, 1411, 0, 0, 0, 0, 0, 0, 1856,
	0, 1857, 0, 0, 0, 0, 0, 0, 1826, 1827,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1848, 0, 1809, 1810,
	0, 1842, 1843, 1844, 1853, 1854, 1855, 0, 0, 0,
	0, 1832, 0, 0, 0, 0, 0, 0, 0, 0,
	1846, 1840, 0, 0, 0, 0, 0, 0, 1812, 0,
	0, 0, 0, 0, 0, 0, 0, 1859, 1411, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1865, 1411, 1858, 0, 0, 0,
	0, 0, 0, 1811, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1831, 1847, 0, 0, 0, 0, 0,
	0, 0, 1828, 0, 0, 1862, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1349, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1349, 1349, 0, 0, 0, 0, 0, 0,
	1838, 0, 0, 0, 0, 0, 0, 0, 0, 1349,
	0, 0, 0, 0, 0, 0, 0, 0, 1834, 1835,
	1836, 1837, 0, 1833, 0, 0, 0, 0, 1817, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1411,
	1851, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1850, 0, 0,
	1860, 0, 0, 0, 0, 0, 0, 1839, 1841, 0,
	0, 1864, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1856, 0, 1857, 0, 0, 0,
	0, 0, 0, 1826, 1827, 0, 0, 0, 0, 0,
	0, 0, 0, 969, 0, 1018, 0, 0, 0, 0,
	0, 1848, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1832, 0, 0, 977,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1849, 0, 992, 0, 975, 974, 0,
	0, 0, 0, 1823, 1824, 1830, 1852, 1829, 1825, 0,
	1822, 1820, 1821, 1813, 1814, 1815, 1816, 1818, 1819, 994,
	0, 1858, 0, 0, 0, 976, 0, 3286, 0, 0,
	979, 0, 0, 0, 0, 1027, 0, 0, 0, 1847,
	0, 0, 0, 0, 989, 990, 0, 0, 0, 0,
	1862, 0, 0, 1007, 0, 0, 1350, 0, 0, 0,
	0, 1350, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1019, 981, 0, 0, 0, 0, 0, 982, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	983, 0, 0, 0, 0, 1838, 0, 0, 0, 1016,
	0, 0, 0, 0, 0, 0, 0, 1350, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1833, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1017, 0, 1350, 1350, 1350, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1851, 985, 0, 0, 1350,
	1350, 1350, 0, 0, 973, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1350,
	0, 0, 0, 986, 987, 1411, 1864, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 995, 993, 0, 0, 0, 0, 0, 0,
	988, 1411, 0, 0, 1004, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1024, 1015, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1849, 0,
	0, 0, 0, 0, 1020, 0, 0, 0, 1823, 1824,
	1830, 1852, 1829, 1825, 0, 1822, 1820, 1821, 1813, 1814,
	1815, 1816, 1818, 1819, 0, 0, 0, 0, 0, 0,
	0, 0, 3285, 0, 0, 0, 0, 0, 0, 0,
	1809, 1810, 0, 1842, 1843, 1844, 1853, 1854, 1855, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 980, 0,
	0, 1026, 1846, 1840, 0, 0, 0, 0, 0, 0,
	1812, 0, 0, 1411, 1411, 0, 1411, 0, 0, 1859,
	0, 0, 0, 0, 978, 0, 0, 0, 1011, 1012,
	0, 0, 0, 0, 1350, 1350, 1865, 0, 0, 0,
	0, 0, 1014, 0, 1411, 1811, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1831, 0, 0, 0, 0,
	0, 0, 0, 0, 1828, 1021, 1009, 0, 0, 0,
	0, 0, 0, 0, 1025, 1005, 0, 0, 998, 996,
	0, 1001, 0, 0, 0, 0, 0, 1002, 0, 0,
	971, 0, 1022, 0, 1350, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1411, 0, 1350, 0, 0, 1350,
	0, 0, 0, 0, 972, 0, 0, 0, 0, 0,
	1411, 0, 0, 0, 0, 0, 1013, 0, 1003, 0,
	0, 0, 0, 0, 1000, 0, 0, 0, 0, 0,
	1834, 1835, 1836, 1837, 0, 1023, 0, 0, 0, 0,
	1817, 0, 0, 1006, 0, 0, 0, 0, 1350, 1350,
	0, 0, 984, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1008, 0, 1350, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1850,
	1411, 0, 1860, 0, 0, 1350, 0, 0, 0, 1839,
	1841, 1010, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1856, 0, 1857, 0,
	0, 0, 0, 0, 0, 1826, 1827, 0, 0, 0,
	0, 0, 1350, 1350, 1350, 1350, 1350, 0, 0, 0,
	0, 0, 0, 1848, 0, 0, 0, 1411, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1832, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1411, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1858, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1411, 1847, 1350, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1862, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1411, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1838, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1833, 0, 0, 1411, 0, 0, 0, 0, 0, 0,
	1350, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1350, 1350, 0, 0, 0, 0, 0, 1851, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1864, 0,
	0, 0, 0, 0, 0, 1411, 0, 0, 1350, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1849, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1823, 1824, 1830, 1852, 1829, 1825, 0, 1822, 1820, 1821,
	1813, 1814, 1815, 1816, 1818, 1819, 0, 0, 0, 0,
	0, 0, 0, 0, 2606, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1408, 0, 0, 1350, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1350, 1350, 0,
	0, 280, 282, 281, 283, 284, 285, 286, 1413, 287,
	288, 1414, 1415, 1416, 1350, 1417, 642, 1418, 1419, 1420,
	1421, 289, 290, 1207, 291, 292, 293, 294, 295, 296,
	643, 644, 0, 297, 645, 298, 646, 1422, 647, 299,
	300, 301, 302, 303, 304, 1423, 1424, 0, 305, 648,
	649, 650, 1425, 306, 307, 651, 1426, 1352, 1427, 308,
	309, 310, 311, 312, 313, 314, 0, 1428, 316, 317,
	318, 315, 319, 1429, 320, 0, 321, 322, 323, 324,
	325, 326, 1430, 327, 328, 329, 1208, 330, 331, 332,
	1431, 1432, 1434, 1433, 1435, 1436, 1437, 333, 334, 335,
	336, 337, 0, 338, 340, 652, 653, 1438, 343, 339,
	341, 1439, 344, 342, 345, 1440, 346, 347, 348, 1441,
	1442, 349, 350, 351, 1443, 352, 353, 1444, 354, 355,
	356, 1445, 357, 358, 654, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 655, 656, 370, 1446, 277,
	1447, 0, 0, 0, 0, 371, 372, 373, 657, 0,
	0, 0, 374, 1448, 375, 376, 377, 1449, 1450, 1209,
	378, 379, 380, 658, 659, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 1451, 390, 660, 1452, 661, 391,
	1453, 392, 393, 394, 395, 396, 662, 663, 664, 480,
	1211, 397, 398, 1454, 399, 400, 401, 402, 403, 0,
	0, 0, 278, 404, 405, 406, 408, 1455, 1210, 407,
	665, 666, 1456, 667, 1457, 409, 410, 1212, 668, 1213,
	411, 412, 413, 1214, 414, 0, 0, 0, 415, 416,
	417, 418, 419, 420, 1458, 421, 423, 422, 1459, 424,
	669, 1215, 425, 426, 1216, 1460, 427, 428, 429, 430,
	431, 432, 435, 1461, 1462, 433, 434, 436, 437, 0,
	438, 439, 441, 444, 440, 442, 443, 445, 458, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 460, 0, 459, 1217, 461, 462, 463, 464, 470,
	472, 473, 468, 469, 471, 474, 475, 466, 467, 1218,
	476, 465, 1463, 279, 1219, 477, 478, 1464, 670, 479,
	671, 481, 482, 1465, 0, 483, 0, 1466, 1467, 485,
	486, 487, 1468, 1469, 488, 489, 672, 1220, 490, 1221,
	673, 491, 492, 484, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 1470, 502, 503, 674, 504, 505, 506,
	675, 507, 508, 509, 676, 510, 677, 511, 512, 1471,
	513, 514, 0, 515, 516, 517, 518, 519, 520, 521,
	678, 522, 523, 525, 524, 526, 1472, 527, 0, 528,
	529, 530, 0, 0, 0, 0, 0, 531, 0, 533,
	534, 535, 536, 532, 537, 538, 539, 540, 541, 1473,
	542, 543, 544, 1222, 545, 546, 547, 548, 549, 679,
	550, 0, 551, 552, 558, 559, 560, 553, 554, 561,
	562, 563, 564, 565, 1474, 567, 568, 566, 569, 570,
	571, 1475, 572, 573, 555, 556, 574, 575, 1223, 576,
	577, 578, 579, 580, 581, 582, 680, 0, 583, 1476,
	584, 585, 586, 588, 557, 589, 594, 595, 681, 590,
	591, 592, 593, 682, 597, 598, 1477, 599, 600, 0,
	596, 587, 1478, 601, 602, 603, 604, 605, 606, 607,
	364, 608, 1479, 609, 683, 684, 685, 686, 1480, 618,
	1481, 610, 611, 612, 687, 613, 688, 1482, 614, 615,
	616, 617, 0, 619, 620, 1483, 1484, 621, 622, 623,
	625, 626, 624, 627, 1485, 628, 1486, 0, 629, 630,
	631, 689, 690, 691, 1487, 633, 632, 634, 692, 635,
	636, 1488, 1489, 1490, 1491, 637, 638, 693, 639, 640,
	641, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1408, 0, 0, 0, 0, 0, 0, 0, 2774, 0,
	0, 0, 0, 0, 0, 0, 2775, 280, 282, 281,
	283, 284, 285, 286, 1413, 287, 288, 1414, 1415, 1416,
	0, 1417, 642, 1418, 1419, 1420, 1421, 289, 290, 1207,
	291, 292, 293, 294, 295, 296, 643, 644, 0, 297,
	645, 298, 646, 1422, 647, 299, 300, 301, 302, 303,
	304, 1423, 1424, 0, 305, 648, 649, 650, 1425, 306,
	307, 651, 1426, 1352, 1427, 308, 309, 310, 311, 312,
	313, 314, 0, 1428, 316, 317, 318, 315, 319, 1429,
	320, 0, 321, 322, 323, 324, 325, 326, 1430, 327,
	328, 329, 1208, 330, 331, 332, 1431, 1432, 1434, 1433,
	1435, 1436, 1437, 333, 334, 335, 336, 337, 0, 338,
	340, 652, 653, 1438, 343, 339, 341, 1439, 344, 342,
	345, 1440, 346, 347, 348, 1441, 1442, 349, 350, 351,
	1443, 352, 353, 1444, 354, 355, 356, 1445, 357, 358,
	654, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 655, 656, 370, 1446, 277, 1447, 0, 0, 0,
	0, 371, 372, 373, 657, 0, 0, 0, 374, 1448,
	375, 376, 377, 1449, 1450, 1209, 378, 379, 380, 658,
	659, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	1451, 390, 660, 1452, 661, 391, 1453, 392, 393, 394,
	395, 396, 662, 663, 664, 480, 1211, 397, 398, 1454,
	399, 400, 401, 402, 403, 0, 0, 0, 278, 404,
	405, 406, 408, 1455, 1210, 407, 665, 666, 1456, 667,
	1457, 409, 410, 1212, 668, 1213, 411, 412, 413, 1214,
	414, 0, 0, 0, 415, 416, 417, 418, 419, 420,
	1458, 421, 423, 422, 1459, 424, 669, 1215, 425, 426,
	1216, 1460, 427, 428, 429, 430, 431, 432, 435, 1461,
	1462, 433, 434, 436, 437, 0, 438, 439, 441, 444,
	440, 442, 443, 445, 458, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 460, 0, 459,
	1217, 461, 462, 463, 464, 470, 472, 473, 468, 469,
	471, 474, 475, 466, 467, 1218, 476, 465, 1463, 279,
	1219, 477, 478, 1464, 670, 479, 671, 481, 482, 1465,
	0, 483, 0, 1466, 1467, 485, 486, 487, 1468, 1469,
	488, 489, 672, 1220, 490, 1221, 673, 491, 492, 484,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 1470,
	502, 503, 674, 504, 505, 506, 675, 507, 508, 509,
	676, 510, 677, 511, 512, 1471, 513, 514, 0, 515,
	516, 517, 518, 519, 520, 521, 678, 522, 523, 525,
	524, 526, 1472, 527, 0, 528, 529, 530, 0, 0,
	0, 0, 0, 531, 0, 533, 534, 535, 536, 532,
	537, 538, 539, 540, 541, 1473, 542, 543, 544, 1222,
	545, 546, 547, 548, 549, 679, 550, 0, 551, 552,
	558, 559, 560, 553, 554, 561, 562, 563, 564, 565,
	1474, 567, 568, 566, 569, 570, 571, 1475, 572, 573,
	555, 556, 574, 575, 1223, 576, 577, 578, 579, 580,
	581, 582, 680, 0, 583, 1476, 584, 585, 586, 588,
	557, 589, 594, 595, 681, 590, 591, 592, 593, 682,
	597, 598, 1477, 599, 600, 0, 596, 587, 1478, 601,
	602, 603, 604, 605, 606, 607, 364, 608, 1479, 609,
	683, 684, 685, 686, 1480, 618, 1481, 610, 611, 612,
	687, 613, 688, 1482, 614, 615, 616, 617, 0, 619,
	620, 1483, 1484, 621, 622, 623, 625, 626, 624, 627,
	1485, 628, 1486, 0, 629, 630, 631, 689, 690, 691,
	1487, 633, 632, 634, 692, 635, 636, 1488, 1489, 1490,
	1491, 637, 638, 693, 639, 640, 641, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1408, 0, 0, 0, 0, 3756,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3758, 280, 282, 281, 283, 284, 285, 286, 1413, 287,
	288, 1414, 1415, 1416, 0, 1417, 642, 1418, 1419, 1420,
	1421, 289, 290, 1207, 291, 292, 293, 294, 295, 296,
	643, 644, 0, 297, 645, 298, 646, 1422, 647, 299,
	300, 301, 302, 303, 304, 1423, 1424, 0, 305, 648,
	649, 650, 1425, 306, 307, 651, 1426, 1352, 1427, 308,
	309, 310, 311, 312, 313, 314, 0, 1428, 316, 317,
	318, 315, 319, 1429, 320, 0, 321, 322, 323, 324,
	325, 326, 1430, 327, 328, 329, 1208, 330, 331, 332,
	1431, 1432, 1434, 1433, 1435, 1436, 1437, 333, 334, 335,
	336, 337, 0, 338, 340, 652, 653, 1438, 343, 339,
	341, 1439, 344, 342, 345, 1440, 346, 347, 348, 1441,
	1442, 349, 350, 351, 1443, 352, 353, 1444, 354, 355,
	356, 1445, 357, 358, 654, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 655, 656, 370, 1446, 277,
	1447, 0, 0, 0, 0, 371, 372, 373, 657, 0,
	0, 0, 374, 1448, 375, 376, 377, 1449, 1450, 1209,
	378, 379, 380, 658, 659, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 1451, 390, 660, 1452, 661, 391,
	1453, 392, 393, 394, 395, 396, 662, 663, 664, 480,
	1211, 397, 398, 1454, 399, 400, 401, 402, 403, 0,
	0, 0, 278, 404, 405, 406, 408, 1455, 1210, 407,
	665, 666, 1456, 667, 1457, 409, 410, 1212, 668, 1213,
	411, 412, 413, 1214, 414, 0, 0, 0, 415, 416,
	417, 418, 419, 420, 1458, 421, 423, 422, 1459, 424,
	669, 1215, 425, 426, 1216, 1460, 427, 428, 429, 430,
	431, 432, 435, 1461, 1462, 433, 434, 436, 437, 0,
	438, 439, 441, 444, 440, 442, 443, 445, 458, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 460, 0, 459, 1217, 461, 462, 463, 464, 470,
	472, 473, 468, 469, 471, 474, 475, 466, 467, 1218,
	476, 465, 1463, 279, 1219, 477, 478, 1464, 670, 479,
	671, 481, 482, 1465, 0, 483, 0, 1466, 1467, 485,
	486, 487, 1468, 1469, 488, 489, 672, 1220, 490, 1221,
	673, 491, 492, 484, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 1470, 502, 503, 674, 504, 505, 506,
	675, 507, 508, 509, 676, 510, 677, 511, 512, 1471,
	513, 514, 0, 515, 516, 517, 518, 519, 520, 521,
	678, 522, 523, 525, 524, 526, 1472, 527, 0, 528,
	529, 530, 0, 0, 0, 0, 0, 531, 0, 533,
	534, 535, 536, 532, 537, 538, 539, 540, 541, 1473,
	542, 543, 544, 1222, 545, 546, 547, 548, 549, 679,
	550, 0, 551, 552, 558, 559, 560, 553, 554, 561,
	562, 563, 564, 565, 1474, 567, 568, 566, 569, 570,
	571, 1475, 572, 573, 555, 556, 574, 575, 1223, 576,
	577, 578, 579, 580, 581, 582, 680, 0, 583, 1476,
	584, 585, 586, 588, 557, 589, 594, 595, 681, 590,
	591, 592, 593, 682, 597, 598, 1477, 599, 600, 0,
	596, 587, 1478, 601, 602, 603, 604, 605, 606, 607,
	364, 608, 1479, 609, 683, 684, 685, 686, 1480, 618,
	1481, 610, 611, 612, 687, 613, 688, 1482, 614, 615,
	616, 617, 0, 619, 620, 1483, 1484, 621, 622, 623,
	625, 626, 624, 627, 1485, 628, 1486, 0, 629, 630,
	631, 689, 690, 691, 1487, 633, 632, 634, 692, 635,
	636, 1488, 1489, 1490, 1491, 637, 638, 693, 639, 640,
	641, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1408, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4154, 280,
	282, 281, 283, 284, 285, 286, 1413, 287, 288, 1414,
	1415, 1416, 0, 1417, 642, 1418, 1419, 1420, 1421, 289,
	290, 1207, 291, 292, 293, 294, 295, 296, 643, 644,
	0, 297, 645, 298, 646, 1422, 647, 299, 300, 301,
	302, 303, 304, 1423, 1424, 0, 305, 648, 649, 650,
	1425, 306, 307, 651, 1426, 1352, 1427, 308, 309, 310,
	311, 312, 313, 314, 0, 1428, 316, 317, 318, 315,
	319, 1429, 320, 0, 321, 322, 323, 324, 325, 326,
	1430, 327, 328, 329, 1208, 330, 331, 332, 1431, 1432,
	1434, 1433, 1435, 1436, 1437, 333, 334, 335, 336, 337,
	0, 338, 340, 652, 653, 1438, 343, 339, 341, 1439,
	344, 342, 345, 1440, 346, 347, 348, 1441, 1442, 349,
	350, 351, 1443, 352, 353, 1444, 354, 355, 356, 1445,
	357, 358, 654, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 655, 656, 370, 1446, 277, 1447, 0,
	0, 0, 0, 371, 372, 373, 657, 0, 0, 0,
	374, 1448, 375, 376, 377, 1449, 1450, 1209, 378, 379,
	380, 658, 659, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 1451, 390, 660, 1452, 661, 391, 1453, 392,
	393, 394, 395, 396, 662, 663, 664, 480, 1211, 397,
	398, 1454, 399, 400, 401, 402, 403, 0, 0, 0,
	278, 404, 405, 406, 408, 1455, 1210, 407, 665, 666,
	1456, 667, 1457, 409, 410, 1212, 668, 1213, 411, 412,
	413, 1214, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 1458, 421, 423, 422, 1459, 424, 669, 1215,
	425, 426, 1216, 1460, 427, 428, 429, 430, 431, 432,
	435, 1461, 1462, 433, 434, 436, 437, 0, 438, 439,
	441, 444, 440, 442, 443, 445, 458, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 460,
	0, 459, 1217, 461, 462, 463, 464, 470, 472, 473,
	468, 469, 471, 474, 475, 466, 467, 1218, 476, 465,
	1463, 279, 1219, 477, 478, 1464, 670, 479, 671, 481,
	482, 1465, 0, 483, 0, 1466, 1467, 485, 486, 487,
	1468, 1469, 488, 489, 672, 1220, 490, 1221, 673, 491,
	492, 484, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 1470, 502, 503, 674, 504, 505, 506, 675, 507,
	508, 509, 676, 510, 677, 511, 512, 1471, 513, 514,
	0, 515, 516, 517, 518, 519, 520, 521, 678, 522,
	523, 525, 524, 526, 1472, 527, 0, 528, 529, 530,
	0, 0, 0, 0, 0, 531, 0, 533, 534, 535,
	536, 532, 537, 538, 539, 540, 541, 1473, 542, 543,
	544, 1222, 545, 546, 547, 548, 549, 679, 550, 0,
	551, 552, 558, 559, 560, 553, 554, 561, 562, 563,
	564, 565, 1474, 567, 568, 566, 569, 570, 571, 1475,
	572, 573, 555, 556, 574, 575, 1223, 576, 577, 578,
	579, 580, 581, 582, 680, 0, 583, 1476, 584, 585,
	586, 588, 557, 589, 594, 595, 681, 590, 591, 592,
	593, 682, 597, 598, 1477, 599, 600, 0, 596, 587,
	1478, 601, 602, 603, 604, 605, 606, 607, 364, 608,
	1479, 609, 683, 684, 685, 686, 1480, 618, 1481, 610,
	611, 612, 687, 613, 688, 1482, 614, 615, 616, 617,
	0, 619, 620, 1483, 1484, 621, 622, 623, 625, 626,
	624, 627, 1485, 628, 1486, 0, 629, 630, 631, 689,
	690, 691, 1487, 633, 632, 634, 692, 635, 636, 1488,
	1489, 1490, 1491, 637, 638, 693, 639, 640, 641, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1408, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4152, 280, 282, 281,
	283, 284, 285, 286, 1413, 287, 288, 1414, 1415, 1416,
	0, 1417, 642, 1418, 1419, 1420, 1421, 289, 290, 1207,
	291, 292, 293, 294, 295, 296, 643, 644, 0, 297,
	645, 298, 646, 1422, 647, 299, 300, 301, 302, 303,
	304, 1423, 1424, 0, 305, 648, 649, 650, 1425, 306,
	307, 651, 1426, 1352, 1427, 308, 309, 310, 311, 312,
	313, 314, 0, 1428, 316, 317, 318, 315, 319, 1429,
	320, 0, 321, 322, 323, 324, 325, 326, 1430, 327,
	328, 329, 1208, 330, 331, 332, 1431, 1432, 1434, 1433,
	1435, 1436, 1437, 333, 334, 335, 336, 337, 0, 338,
	340, 652, 653, 1438, 343, 339, 341, 1439, 344, 342,
	345, 1440, 346, 347, 348, 1441, 1442, 349, 350, 351,
	1443, 352, 353, 1444, 354, 355, 356, 1445, 357, 358,
	654, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 655, 656, 370, 1446, 277, 1447, 0, 0, 0,
	0, 371, 372, 373, 657, 0, 0, 0, 374, 1448,
	375, 376, 377, 1449, 1450, 1209, 378, 379, 380, 658,
	659, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	1451, 390, 660, 1452, 661, 391, 1453, 392, 393, 394,
	395, 396, 662, 663, 664, 480, 1211, 397, 398, 1454,
	399, 400, 401, 402, 403, 0, 0, 0, 278, 404,
	405, 406, 408, 1455, 1210, 407, 665, 666, 1456, 667,
	1457, 409, 410, 1212, 668, 1213, 411, 412, 413, 1214,
	414, 0, 0, 0, 415, 416, 417, 418, 419, 420,
	1458, 421, 423, 422, 1459, 424, 669, 1215, 425, 426,
	1216, 1460, 427, 428, 429, 430, 431, 432, 435, 1461,
	1462, 433, 434, 436, 437, 0, 438, 439, 441, 444,
	440, 442, 443, 445, 458, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 460, 0, 459,
	1217, 461, 462, 463, 464, 470, 472, 473, 468, 469,
	471, 474, 475, 466, 467, 1218, 476, 465, 1463, 279,
	1219, 477, 478, 1464, 670, 479, 671, 481, 482, 1465,
	0, 483, 0, 1466, 1467, 485, 486, 487, 1468, 1469,
	488, 489, 672, 1220, 490, 1221, 673, 491, 492, 484,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 1470,
	502, 503, 674, 504, 505, 506, 675, 507, 508, 509,
	676, 510, 677, 511, 512, 1471, 513, 514, 0, 515,
	516, 517, 518, 519, 520, 521, 678, 522, 523, 525,
	524, 526, 1472, 527, 0, 528, 529, 530, 0, 0,
	0, 0, 0, 531, 0, 533, 534, 535, 536, 532,
	537, 538, 539, 540, 541, 1473, 542, 543, 544, 1222,
	545, 546, 547, 548, 549, 679, 550, 0, 551, 552,
	558, 559, 560, 553, 554, 561, 562, 563, 564, 565,
	1474, 567, 568, 566, 569, 570, 571, 1475, 572, 573,
	555, 556, 574, 575, 1223, 576, 577, 578, 579, 580,
	581, 582, 680, 0, 583, 1476, 584, 585, 586, 588,
	557, 589, 594, 595, 681, 590, 591, 592, 593, 682,
	597, 598, 1477, 599, 600, 0, 596, 587, 1478, 601,
	602, 603, 604, 605, 606, 607, 364, 608, 1479, 609,
	683, 684, 685, 686, 1480, 618, 1481, 610, 611, 612,
	687, 613, 688, 1482, 614, 615, 616, 617, 0, 619,
	620, 1483, 1484, 621, 622, 623, 625, 626, 624, 627,
	1485, 628, 1486, 0, 629, 630, 631, 689, 690, 691,
	1487, 633, 632, 634, 692, 635, 636, 1488, 1489, 1490,
	1491, 637, 638, 693, 639, 640, 641, 0, 0, 0,
	0, 0, 0, 1408, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4366,
	280, 282, 281, 283, 284, 285, 286, 1413, 287, 288,
	1414, 1415, 1416, 0, 1417, 642, 1418, 1419, 1420, 1421,
	289, 290, 1207, 291, 292, 293, 294, 295, 296, 643,
	644, 0, 297, 645, 298, 646, 1422, 647, 299, 300,
	301, 302, 303, 304, 1423, 1424, 0, 305, 648, 649,
	650, 1425, 306, 307, 651, 1426, 1352, 1427, 308, 309,
	310, 311, 312, 313, 314, 0, 1428, 316, 317, 318,
	315, 319, 1429, 320, 0, 321, 322, 323, 324, 325,
	326, 1430, 327, 328, 329, 1208, 330, 331, 332, 1431,
	1432, 1434, 1433, 1435, 1436, 1437, 333, 334, 335, 336,
	337, 0, 338, 340, 652, 653, 1438, 343, 339, 341,
	1439, 344, 342, 345, 1440, 346, 347, 348, 1441, 1442,
	349, 350, 351, 1443, 352, 353, 1444, 354, 355, 356,
	1445, 357, 358, 654, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 655, 656, 370, 1446, 277, 1447,
	0, 0, 0, 0, 371, 372, 373, 657, 0, 0,
	0, 374, 1448, 375, 376, 377, 1449, 1450, 1209, 378,
	379, 380, 658, 659, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 1451, 390, 660, 1452, 661, 391, 1453,
	392, 393, 394, 395, 396, 662, 663, 664, 480, 1211,
	397, 398, 1454, 399, 400, 401, 402, 403, 0, 0,
	0, 278, 404, 405, 406, 408, 1455, 1210, 407, 665,
	666, 1456, 667, 1457, 409, 410, 1212, 668, 1213, 411,
	412, 413, 1214, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 1458, 421, 423, 422, 1459, 424, 669,
	1215, 425, 426, 1216, 1460, 427, 428, 429, 430, 431,
	432, 435, 1461, 1462, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 1217, 461, 462, 463, 464, 470, 472,
	473, 468, 469, 471, 474, 475, 466, 467, 1218, 476,
	465, 1463, 279, 1219, 477, 478, 1464, 670, 479, 671,
	481, 482, 1465, 0, 483, 0, 1466, 1467, 485, 486,
	487, 1468, 1469, 488, 489, 672, 1220, 490, 1221, 673,
	491, 492, 484, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 1470, 502, 503, 674, 504, 505, 506, 675,
	507, 508, 509, 676, 510, 677, 511, 512, 1471, 513,
	514, 0, 515, 516, 517, 518, 519, 520, 521, 678,
	522, 523, 525, 524, 526, 1472, 527, 0, 528, 529,
	530, 0, 0, 0, 0, 0, 531, 0, 533, 534,
	535, 536, 532, 537, 538, 539, 540, 541, 1473, 542,
	543, 544, 1222, 545, 546, 547, 548, 549, 679, 550,
	0, 551, 552, 558, 559, 560, 553, 554, 561, 562,
	563, 564, 565, 1474, 567, 568, 566, 569, 570, 571,
	1475, 572, 573, 555, 556, 574, 575, 1223, 576, 577,
	578, 579, 580, 581, 582, 680, 0, 583, 1476, 584,
	585, 586, 588, 557, 589, 594, 595, 681, 590, 591,
	592, 593, 682, 597, 598, 1477, 599, 600, 0, 596,
	587, 1478, 601, 602, 603, 604, 605, 606, 607, 364,
	608, 1479, 609, 683, 684, 685, 686, 1480, 618, 1481,
	610, 611, 612, 687, 613, 688, 1482, 614, 615, 616,
	617, 0, 619, 620, 1483, 1484, 621, 622, 623, 625,
	626, 624, 627, 1485, 628, 1486, 0, 629, 630, 631,
	689, 690, 691, 1487, 633, 632, 634, 692, 635, 636,
	1488, 1489, 1490, 1491, 637, 638, 693, 639, 640, 641,
	0, 0, 0, 0, 0, 0, 1408, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4234, 280, 282, 281, 283, 284, 285, 286,
	1413, 287, 288, 1414, 1415, 1416, 0, 1417, 642, 1418,
	1419, 1420, 1421, 289, 290, 1207, 291, 292, 293, 294,
	295, 296, 643, 644, 0, 297, 645, 298, 646, 1422,
	647, 299, 300, 301, 302, 303, 304, 1423, 1424, 0,
	305, 648, 649, 650, 1425, 306, 307, 651, 1426, 1352,
	1427, 308, 309, 310, 311, 312, 313, 314, 0, 1428,
	316, 317, 318, 315, 319, 1429, 320, 0, 321, 322,
	323, 324, 325, 326, 1430, 327, 328, 329, 1208, 330,
	331, 332, 1431, 1432, 1434, 1433, 1435, 1436, 1437, 333,
	334, 335, 336, 337, 0, 338, 340, 652, 653, 1438,
	343, 339, 341, 1439, 344, 342, 345, 1440, 346, 347,
	348, 1441, 1442, 349, 350, 351, 1443, 352, 353, 1444,
	354, 355, 356, 1445, 357, 358, 654, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 655, 656, 370,
	1446, 277, 1447, 0, 0, 0, 0, 371, 372, 373,
	657, 0, 0, 0, 374, 1448, 375, 376, 377, 1449,
	1450, 1209, 378, 379, 380, 658, 659, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 1451, 390, 660, 1452,
	661, 391, 1453, 392, 393, 394, 395, 396, 662, 663,
	664, 480, 1211, 397, 398, 1454, 399, 400, 401, 402,
	403, 0, 0, 0, 278, 404, 405, 406, 408, 1455,
	1210, 407, 665, 666, 1456, 667, 1457, 409, 410, 1212,
	668, 1213, 411, 412, 413, 1214, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 1458, 421, 423, 422,
	1459, 424, 669, 1215, 425, 426, 1216, 1460, 427, 428,
	429, 430, 431, 432, 435, 1461, 1462, 433, 434, 436,
	437, 0, 438, 439, 441, 444, 440, 442, 443, 445,
	458, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 459, 1217, 461, 462, 463,
	464, 470, 472, 473, 468, 469, 471, 474, 475, 466,
	467, 1218, 476, 465, 1463, 279, 1219, 477, 478, 1464,
	670, 479, 671, 481, 482, 1465, 0, 483, 0, 1466,
	1467, 485, 486, 487, 1468, 1469, 488, 489, 672, 1220,
	490, 1221, 673, 491, 492, 484, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 1470, 502, 503, 674, 504,
	505, 506, 675, 507, 508, 509, 676, 510, 677, 511,
	512, 1471, 513, 514, 0, 515, 516, 517, 518, 519,
	520, 521, 678, 522, 523, 525, 524, 526, 1472, 527,
	0, 528, 529, 530, 0, 0, 0, 0, 0, 531,
	0, 533, 534, 535, 536, 532, 537, 538, 539, 540,
	541, 1473, 542, 543, 544, 1222, 545, 546, 547, 548,
	549, 679, 550, 0, 551, 552, 558, 559, 560, 553,
	554, 561, 562, 563, 564, 565, 1474, 567, 568, 566,
	569, 570, 571, 1475, 572, 573, 555, 556, 574, 575,
	1223, 576, 577, 578, 579, 580, 581, 582, 680, 0,
	583, 1476, 584, 585, 586, 588, 557, 589, 594, 595,
	681, 590, 591, 592, 593, 682, 597, 598, 1477, 599,
	600, 0, 596, 587, 1478, 601, 602, 603, 604, 605,
	606, 607, 364, 608, 1479, 609, 683, 684, 685, 686,
	1480, 618, 1481, 610, 611, 612, 687, 613, 688, 1482,
	614, 615, 616, 617, 0, 619, 620, 1483, 1484, 621,
	622, 623, 625, 626, 624, 627, 1485, 628, 1486, 0,
	629, 630, 631, 689, 690, 691, 1487, 633, 632, 634,
	692, 635, 636, 1488, 1489, 1490, 1491, 637, 638, 693,
	639, 640, 641, 0, 0, 0, 0, 0, 0, 1408,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4082, 280, 282, 281, 283,
	284, 285, 286, 1413, 287, 288, 1414, 1415, 1416, 0,
	1417, 642, 1418, 1419, 1420, 1421, 289, 290, 1207, 291,
	292, 293, 294, 295, 296, 643, 644, 0, 297, 645,
	298, 646, 1422, 647, 299, 300, 301, 302, 303, 304,
	1423, 1424, 0, 305, 648, 649, 650, 1425, 306, 307,
	651, 1426, 1352, 1427, 308, 309, 310, 311, 312, 313,
	314, 0, 1428, 316, 317, 318, 315, 319, 1429, 320,
	0, 321, 322, 323, 324, 325, 326, 1430, 327, 328,
	329, 1208, 330, 331, 332, 1431, 1432, 1434, 1433, 1435,
	1436, 1437, 333, 334, 335, 336, 337, 0, 338, 340,
	652, 653, 1438, 343, 339, 341, 1439, 344, 342, 345,
	1440, 346, 347, 348, 1441, 1442, 349, 350, 351, 1443,
	352, 353, 1444, 354, 355, 356, 1445, 357, 358, 654,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	655, 656, 370, 1446, 277, 1447, 0, 0, 0, 0,
	371, 372, 373, 657, 0, 0, 0, 374, 1448, 375,
	376, 377, 1449, 1450, 1209, 378, 379, 380, 658, 659,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 1451,
	390, 660, 1452, 661, 391, 1453, 392, 393, 394, 395,
	396, 662, 663, 664, 480, 1211, 397, 398, 1454, 399,
	400, 401, 402, 403, 0, 0, 0, 278, 404, 405,
	406, 408, 1455, 1210, 407, 665, 666, 1456, 667, 1457,
	409, 410, 1212, 668, 1213, 411, 412, 413, 1214, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 1458,
	421, 423, 422, 1459, 424, 669, 1215, 425, 426, 1216,
	1460, 427, 428, 429, 430, 431, 432, 435, 1461, 1462,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 1217,
	461, 462, 463, 464, 470, 472, 473, 468, 469, 471,
	474, 475, 466, 467, 1218, 476, 465, 1463, 279, 1219,
	477, 478, 1464, 670, 479, 671, 481, 482, 1465, 0,
	483, 0, 1466, 1467, 485, 486, 487, 1468, 1469, 488,
	489, 672, 1220, 490, 1221, 673, 491, 492, 484, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 1470, 502,
	503, 674, 504, 505, 506, 675, 507, 508, 509, 676,
	510, 677, 511, 512, 1471, 513, 514, 0, 515, 516,
	517, 518, 519, 520, 521, 678, 522, 523, 525, 524,
	526, 1472, 527, 0, 528, 529, 530, 0, 0, 0,
	0, 0, 531, 0, 533, 534, 535, 536, 532, 537,
	538, 539, 540, 541, 1473, 542, 543, 544, 1222, 545,
	546, 547, 548, 549, 679, 550, 0, 551, 552, 558,
	559, 560, 553, 554, 561, 562, 563, 564, 565, 1474,
	567, 568, 566, 569, 570, 571, 1475, 572, 573, 555,
	556, 574, 575, 1223, 576, 577, 578, 579, 580, 581,
	582, 680, 0, 583, 1476, 584, 585, 586, 588, 557,
	589, 594, 595, 681, 590, 591, 592, 593, 682, 597,
	598, 1477, 599, 600, 0, 596, 587, 1478, 601, 602,
	603, 604, 605, 606, 607, 364, 608, 1479, 609, 683,
	684, 685, 686, 1480, 618, 1481, 610, 611, 612, 687,
	613, 688, 1482, 614, 615, 616, 617, 0, 619, 620,
	1483, 1484, 621, 622, 623, 625, 626, 624, 627, 1485,
	628, 1486, 0, 629, 630, 631, 689, 690, 691, 1487,
	633, 632, 634, 692, 635, 636, 1488, 1489, 1490, 1491,
	637, 638, 693, 639, 640, 641, 0, 0, 0, 0,
	0, 0, 1408, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3774, 280,
	282, 281, 283, 284, 285, 286, 1413, 287, 288, 1414,
	1415, 1416, 0, 1417, 642, 1418, 1419, 1420, 1421, 289,
	290, 1207, 291, 292, 293, 294, 295, 296, 643, 644,
	0, 297, 645, 298, 646, 1422, 647, 299, 300, 301,
	302, 303, 304, 1423, 1424, 0, 305, 648, 649, 650,
	1425, 306, 307, 651, 1426, 1352, 1427, 308, 309, 310,
	311, 312, 313, 314, 0, 1428, 316, 317, 318, 315,
	319, 1429, 320, 0, 321, 322, 323, 324, 325, 326,
	1430, 327, 328, 329, 1208, 330, 331, 332, 1431, 1432,
	1434, 1433, 1435, 1436, 1437, 333, 334, 335, 336, 337,
	0, 338, 340, 652, 653, 1438, 343, 339, 341, 1439,
	344, 342, 345, 1440, 346, 347, 348, 1441, 1442, 349,
	350, 351, 1443, 352, 353, 1444, 354, 355, 356, 1445,
	357, 358, 654, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 655, 656, 370, 1446, 277, 1447, 0,
	0, 0, 0, 371, 372, 373, 657, 0, 0, 0,
	374, 1448, 375, 376, 377, 1449, 1450, 1209, 378, 379,
	380, 658, 659, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 1451, 390, 660, 1452, 661, 391, 1453, 392,
	393, 394, 395, 396, 662, 663, 664, 480, 1211, 397,
	398, 1454, 399, 400, 401, 402, 403, 0, 0, 0,
	278, 404, 405, 406, 408, 1455, 1210, 407, 665, 666,
	1456, 667, 1457, 409, 410, 1212, 668, 1213, 411, 412,
	413, 1214, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 1458, 421, 423, 422, 1459, 424, 669, 1215,
	425, 426, 1216, 1460, 427, 428, 429, 430, 431, 432,
	435, 1461, 1462, 433, 434, 436, 437, 0, 438, 439,
	441, 444, 440, 442, 443, 445, 458, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 460,
	0, 459, 1217, 461, 462, 463, 464, 470, 472, 473,
	468, 469, 471, 474, 475, 466, 467, 1218, 476, 465,
	1463, 279, 1219, 477, 478, 1464, 670, 479, 671, 481,
	482, 1465, 0, 483, 0, 1466, 1467, 485, 486, 487,
	1468, 1469, 488, 489, 672, 1220, 490, 1221, 673, 491,
	492, 484, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 1470, 502, 503, 674, 504, 505, 506, 675, 507,
	508, 509, 676, 510, 677, 511, 512, 1471, 513, 514,
	0, 515, 516, 517, 518, 519, 520, 521, 678, 522,
	523, 525, 524, 526, 1472, 527, 0, 528, 529, 530,
	0, 0, 0, 0, 0, 531, 0, 533, 534, 535,
	536, 532, 537, 538, 539, 540, 541, 1473, 542, 543,
	544, 1222, 545, 546, 547, 548, 549, 679, 550, 0,
	551, 552, 558, 559, 560, 553, 554, 561, 562, 563,
	564, 565, 1474, 567, 568, 566, 569, 570, 571, 1475,
	572, 573, 555, 556, 574, 575, 1223, 576, 577, 578,
	579, 580, 581, 582, 680, 0, 583, 1476, 584, 585,
	586, 588, 557, 589, 594, 595, 681, 590, 591, 592,
	593, 682, 597, 598, 1477, 599, 600, 0, 596, 587,
	1478, 601, 602, 603, 604, 605, 606, 607, 364, 608,
	1479, 609, 683, 684, 685, 686, 1480, 618, 1481, 610,
	611, 612, 687, 613, 688, 1482, 614, 615, 616, 617,
	0, 619, 620, 1483, 1484, 621, 622, 623, 625, 626,
	624, 627, 1485, 628, 1486, 0, 629, 630, 631, 689,
	690, 691, 1487, 633, 632, 634, 692, 635, 636, 1488,
	1489, 1490, 1491, 637, 638, 693, 639, 640, 641, 0,
	0, 0, 0, 0, 0, 1408, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3596, 280, 282, 281, 283, 284, 285, 286, 1413,
	287, 288, 1414, 1415, 1416, 0, 1417, 642, 1418, 1419,
	1420, 1421, 289, 290, 1207, 291, 292, 293, 294, 295,
	296, 643, 644, 0, 297, 645, 298, 646, 1422, 647,
	299, 300, 301, 302, 303, 304, 1423, 1424, 0, 305,
	648, 649, 650, 1425, 306, 307, 651, 1426, 1352, 1427,
	308, 309, 310, 311, 312, 313, 314, 0, 1428, 316,
	317, 318, 315, 319, 1429, 320, 0, 321, 322, 323,
	324, 325, 326, 1430, 327, 328, 329, 1208, 330, 331,
	332, 1431, 1432, 1434, 1433, 1435, 1436, 1437, 333, 334,
	335, 336, 337, 0, 338, 340, 652, 653, 1438, 343,
	339, 341, 1439, 344, 342, 345, 1440, 346, 347, 348,
	1441, 1442, 349, 350, 351, 1443, 352, 353, 1444, 354,
	355, 356, 1445, 357, 358, 654, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 655, 656, 370, 1446,
	277, 1447, 0, 0, 0, 0, 371, 372, 373, 657,
	0, 0, 0, 374, 1448, 375, 376, 377, 1449, 1450,
	1209, 378, 379, 380, 658, 659, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 1451, 390, 660, 1452, 661,
	391, 1453, 392, 393, 394, 395, 396, 662, 663, 664,
	480, 1211, 397, 398, 1454, 399, 400, 401, 402, 403,
	0, 0, 0, 278, 404, 405, 406, 408, 1455, 1210,
	407, 665, 666, 1456, 667, 1457, 409, 410, 1212, 668,
	1213, 411, 412, 413, 1214, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 1458, 421, 423, 422, 1459,
	424, 669, 1215, 425, 426, 1216, 1460, 427, 428, 429,
	430, 431, 432, 435, 1461, 1462, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 1217, 461, 462, 463, 464,
	470, 472, 473, 468, 469, 471, 474, 475, 466, 467,
	1218, 476, 465, 1463, 279, 1219, 477, 478, 1464, 670,
	479, 671, 481, 482, 1465, 0, 483, 0, 1466, 1467,
	485, 486, 487, 1468, 1469, 488, 489, 672, 1220, 490,
	1221, 673, 491, 492, 484, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 1470, 502, 503, 674, 504, 505,
	506, 675, 507, 508, 509, 676, 510, 677, 511, 512,
	1471, 513, 514, 0, 515, 516, 517, 518, 519, 520,
	521, 678, 522, 523, 525, 524, 526, 1472, 527, 0,
	528, 529, 530, 0, 0, 0, 0, 0, 531, 0,
	533, 534, 535, 536, 532, 537, 538, 539, 540, 541,
	1473, 542, 543, 544, 1222, 545, 546, 547, 548, 549,
	679, 550, 0, 551, 552, 558, 559, 560, 553, 554,
	561, 562, 563, 564, 565, 1474, 567, 568, 566, 569,
	570, 571, 1475, 572, 573, 555, 556, 574, 575, 1223,
	576, 577, 578, 579, 580, 581, 582, 680, 0, 583,
	1476, 584, 585, 586, 588, 557, 589, 594, 595, 681,
	590, 591, 592, 593, 682, 597, 598, 1477, 599, 600,
	0, 596, 587, 1478, 601, 602, 603, 604, 605, 606,
	607, 364, 608, 1479, 609, 683, 684, 685, 686, 1480,
	618, 1481, 610, 611, 612, 687, 613, 688, 1482, 614,
	615, 616, 617, 0, 619, 620, 1483, 1484, 621, 622,
	623, 625, 626, 624, 627, 1485, 628, 1486, 0, 629,
	630, 631, 689, 690, 691, 1487, 633, 632, 634, 692,
	635, 636, 1488, 1489, 1490, 1491, 637, 638, 693, 639,
	640, 641, 0, 0, 0, 0, 0, 0, 1408, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2629, 280, 282, 281, 283, 284,
	285, 286, 1413, 287, 288, 1414, 1415, 1416, 0, 1417,
	642, 1418, 1419, 1420, 1421, 289, 290, 1207, 291, 292,
	293, 294, 295, 296, 643, 644, 0, 297, 645, 298,
	646, 1422, 647, 299, 300, 301, 302, 303, 304, 1423,
	1424, 0, 305, 648, 649, 650, 1425, 306, 307, 651,
	1426, 1352, 1427, 308, 309, 310, 311, 312, 313, 314,
	0, 1428, 316, 317, 318, 315, 319, 1429, 320, 0,
	321, 322, 323, 324, 325, 326, 1430, 327, 328, 329,
	1208, 330, 331, 332, 1431, 1432, 1434, 1433, 1435, 1436,
	1437, 333, 334, 335, 336, 337, 0, 338, 340, 652,
	653, 1438, 343, 339, 341, 1439, 344, 342, 345, 1440,
	346, 347, 348, 1441, 1442, 349, 350, 351, 1443, 352,
	353, 1444, 354, 355, 356, 1445, 357, 358, 654, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 655,
	656, 370, 1446, 277, 1447, 0, 0, 0, 0, 371,
	372, 373, 657, 0, 0, 0, 374, 1448, 375, 376,
	377, 1449, 1450, 1209, 378, 379, 380, 658, 659, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 1451, 390,
	660, 1452, 661, 391, 1453, 392, 393, 394, 395, 396,
	662, 663, 664, 480, 1211, 397, 398, 1454, 399, 400,
	401, 402, 403, 0, 0, 0, 278, 404, 405, 406,
	408, 1455, 1210, 407, 665, 666, 1456, 667, 1457, 409,
	410, 1212, 668, 1213, 411, 412, 413, 1214, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 1458, 421,
	423, 422, 1459, 424, 669, 1215, 425, 426, 1216, 1460,
	427, 428, 429, 430, 431, 432, 435, 1461, 1462, 433,
	434, 436, 437, 0, 438, 439, 441, 444, 440, 442,
	443, 445, 458, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 0, 459, 1217, 461,
	462, 463, 464, 470, 472, 473, 468, 469, 471, 474,
	475, 466, 467, 1218, 476, 465, 1463, 279, 1219, 477,
	478, 1464, 670, 479, 671, 481, 482, 1465, 0, 483,
	0, 1466, 1467, 485, 486, 487, 1468, 1469, 488, 489,
	672, 1220, 490, 1221, 673, 491, 492, 484, 493, 494,
	495, 496, 497, 498, 499, 500, 501, 1470, 502, 503,
	674, 504, 505, 506, 675, 507, 508, 509, 676, 510,
	677, 511, 512, 1471, 513, 514, 0, 515, 516, 517,
	518, 519, 520, 521, 678, 522, 523, 525, 524, 526,
	1472, 527, 0, 528, 529, 530, 0, 0, 0, 0,
	0, 531, 0, 533, 534, 535, 536, 532, 537, 538,
	539, 540, 541, 1473, 542, 543, 544, 1222, 545, 546,
	547, 548, 549, 679, 550, 0, 551, 552, 558, 559,
	560, 553, 554, 561, 562, 563, 564, 565, 1474, 567,
	568, 566, 569, 570, 571, 1475, 572, 573, 555, 556,
	574, 575, 1223, 576, 577, 578, 579, 580, 581, 582,
	680, 0, 583, 1476, 584, 585, 586, 588, 557, 589,
	594, 595, 681, 590, 591, 592, 593, 682, 597, 598,
	1477, 599, 600, 0, 596, 587, 1478, 601, 602, 603,
	604, 605, 606, 607, 364, 608, 1479, 609, 683, 684,
	685, 686, 1480, 618, 1481, 610, 611, 612, 687, 613,
	688, 1482, 614, 615, 616, 617, 0, 619, 620, 1483,
	1484, 621, 622, 623, 625, 626, 624, 627, 1485, 628,
	1486, 0, 629, 630, 631, 689, 690, 691, 1487, 633,
	632, 634, 692, 635, 636, 1488, 1489, 1490, 1491, 637,
	638, 693, 639, 640, 641, 0, 0, 0, 0, 1503,
	0, 1408, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2257, 280, 282,
	281, 283, 284, 285, 286, 1413, 287, 288, 1414, 1415,
	1416, 0, 1417, 642, 1418, 1419, 1420, 1421, 289, 290,
	1207, 291, 292, 293, 294, 295, 296, 643, 644, 0,
	297, 645, 298, 646, 1422, 647, 299, 300, 301, 302,
	303, 304, 1423, 1424, 0, 305, 648, 649, 650, 1425,
	306, 307, 651, 1426, 1352, 1427, 308, 309, 310, 311,
	312, 313, 314, 0, 1428, 316, 317, 318, 315, 319,
	1429, 320, 0, 321, 322, 323, 324, 325, 326, 1430,
	327, 328, 329, 1208, 330, 331, 332, 1431, 1432, 1434,
	1433, 1435, 1436, 1437, 333, 334, 335, 336, 337, 0,
	338, 340, 652, 653, 1438, 343, 339, 341, 1439, 344,
	342, 345, 1440, 346, 347, 348, 1441, 1442, 349, 350,
	351, 1443, 352, 353, 1444, 354, 355, 356, 1445, 357,
	358, 654, 359, 360, 361, 363, 365, 362, 366, 367,
	368, 369, 655, 656, 370, 1446, 277, 1447, 0, 0,
	0, 0, 371, 372, 373, 657, 0, 0, 0, 374,
	1448, 375, 376, 377, 1449, 1450, 1209, 378, 379, 380,
	658, 659, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 1451, 390, 660, 1452, 661, 391, 1453, 392, 393,
	394, 395, 396, 662, 663, 664, 480, 1211, 397, 398,
	1454, 399, 400, 401, 402, 403, 0, 0, 0, 278,
	404, 405, 406, 408, 1455, 1210, 407, 665, 666, 1456,
	667, 1457, 409, 410, 1212, 668, 1213, 411, 412, 413,
	1214, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 1458, 421, 423, 422, 1459, 424, 669, 1215, 425,
	426, 1216, 1460, 427, 428, 429, 430, 431, 432, 435,
	1461, 1462, 433, 434, 436, 437, 0, 438, 439, 441,
	444, 440, 442, 443, 445, 458, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 460, 0,
	459, 1217, 461, 462, 463, 464, 470, 472, 473, 468,
	469, 471, 474, 475, 466, 467, 1218, 476, 465, 1463,
	279, 1219, 477, 478, 1464, 670, 479, 671, 481, 482,
	1465, 0, 483, 0, 1466, 1467, 485, 486, 487, 1468,
	1469, 488, 489, 672, 1220, 490, 1221, 673, 491, 492,
	484, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	1470, 502, 503, 674, 504, 505, 506, 675, 507, 508,
	509, 676, 510, 677, 511, 512, 1471, 513, 514, 0,
	515, 516, 517, 518, 519, 520, 521, 678, 522, 523,
	525, 524, 526, 1472, 527, 0, 528, 529, 530, 0,
	0, 0, 0, 0, 531, 0, 533, 534, 535, 536,
	532, 537, 538, 539, 540, 541, 1473, 542, 543, 544,
	1222, 545, 546, 547, 548, 549, 679, 550, 0, 551,
	552, 558, 559, 560, 553, 554, 561, 562, 563, 564,
	565, 1474, 567, 568, 566, 569, 570, 571, 1475, 572,
	573, 555, 556, 574, 575, 1223, 576, 577, 578, 579,
	580, 581, 582, 680, 0, 583, 1476, 584, 585, 586,
	588, 557, 589, 594, 595, 681, 590, 591, 592, 593,
	682, 597, 598, 1477, 599, 600, 0, 596, 587, 1478,
	601, 602, 603, 604, 605, 606, 607, 364, 608, 1479,
	609, 683, 684, 685, 686, 1480, 618, 1481, 610, 611,
	612, 687, 613, 688, 1482, 614, 615, 616, 617, 0,
	619, 620, 1483, 1484, 621, 622, 623, 625, 626, 624,
	627, 1485, 628, 1486, 0, 629, 630, 631, 689, 690,
	691, 1487, 633, 632, 634, 692, 635, 636, 1488, 1489,
	1490, 1491, 637, 638, 693, 639, 640, 641, 1405, 0,
	1408, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 280, 282, 281,
	283, 284, 285, 286, 1413, 287, 288, 1414, 1415, 1416,
	0, 1417, 642, 1418, 1419, 1420, 1421, 289, 290, 1207,
	291, 292, 293, 294, 295, 296, 643, 644, 0, 297,
	645, 298, 646, 1422, 647, 299, 300, 301, 302, 303,
	304, 1423, 1424, 0, 305, 648, 649, 650, 1425, 306,
	307, 651, 1426, 1352, 1427, 308, 309, 310, 311, 312,
	313, 314, 0, 1428, 316, 317, 318, 315, 319, 1429,
	320, 0, 321, 322, 323, 324, 325, 326, 1430, 327,
	328, 329, 1208, 330, 331, 332, 1431, 1432, 1434, 1433,
	1435, 1436, 1437, 333, 334, 335, 336, 337, 0, 338,
	340, 652, 653, 1438, 343, 339, 341, 1439, 344, 342,
	345, 1440, 346, 347, 348, 1441, 1442, 349, 350, 351,
	1443, 352, 353, 1444, 354, 355, 356, 1445, 357, 358,
	654, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 655, 656, 370, 1446, 277, 1447, 0, 0, 0,
	0, 371, 372, 373, 657, 0, 0, 0, 374, 1448,
	375, 376, 377, 1449, 1450, 1209, 378, 379, 380, 658,
	659, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	1451, 390, 660, 1452, 661, 391, 1453, 392, 393, 394,
	395, 396, 662, 663, 664, 480, 1211, 397, 398, 1454,
	399, 400, 401, 402, 403, 0, 0, 0, 278, 404,
	405, 406, 408, 1455, 1210, 407, 665, 666, 1456, 667,
	1457, 409, 410, 1212, 668, 1213, 411, 412, 413, 1214,
	414, 0, 0, 0, 415, 416, 417, 418, 419, 420,
	1458, 421, 423, 422, 1459, 424, 669, 1215, 425, 426,
	1216, 1460, 427, 428, 429, 430, 431, 432, 435, 1461,
	1462, 433, 434, 436, 437, 0, 438, 439, 441, 444,
	440, 442, 443, 445, 458, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 460, 0, 459,
	1217, 461, 462, 463, 464, 470, 472, 473, 468, 469,
	471, 474, 475, 466, 467, 1218, 476, 465, 1463, 279,
	1219, 477, 478, 1464, 670, 479, 671, 481, 482, 1465,
	0, 483, 0, 1466, 1467, 485, 486, 487, 1468, 1469,
	488, 489, 672, 1220, 490, 1221, 673, 491, 492, 484,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 1470,
	502, 503, 674, 504, 505, 506, 675, 507, 508, 509,
	676, 510, 677, 511, 512, 1471, 513, 514, 0, 515,
	516, 517, 518, 519, 520, 521, 678, 522, 523, 525,
	524, 526, 1472, 527, 0, 528, 529, 530, 0, 0,
	0, 0, 0, 531, 0, 533, 534, 535, 536, 532,
	537, 538, 539, 540, 541, 1473, 542, 543, 544, 1222,
	545, 546, 547, 548, 549, 679, 550, 0, 551, 552,
	558, 559, 560, 553, 554, 561, 562, 563, 564, 565,
	1474, 567, 568, 566, 569, 570, 571, 1475, 572, 573,
	555, 556, 574, 575, 1223, 576, 577, 578, 579, 580,
	581, 582, 680, 0, 583, 1476, 584, 585, 586, 588,
	557, 589, 594, 595, 681, 590, 591, 592, 593, 682,
	597, 598, 1477, 599, 600, 0, 596, 587, 1478, 601,
	602, 603, 604, 605, 606, 607, 364, 608, 1479, 609,
	683, 684, 685, 686, 1480, 618, 1481, 610, 611, 612,
	687, 613, 688, 1482, 614, 615, 616, 617, 0, 619,
	620, 1483, 1484, 621, 622, 623, 625, 626, 624, 627,
	1485, 628, 1486, 0, 629, 630, 631, 689, 690, 691,
	1487, 633, 632, 634, 692, 635, 636, 1488, 1489, 1490,
	1491, 637, 638, 693, 639, 640, 641, 1408, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 280, 282, 281, 283, 284, 285,
	286, 1413, 287, 288, 1414, 1415, 1416, 0, 1417, 642,
	1418, 1419, 1420, 1421, 289, 290, 1207, 291, 292, 293,
	294, 295, 296, 643, 644, 0, 297, 645, 298, 646,
	1422, 647, 299, 300, 301, 302, 303, 304, 1423, 1424,
	0, 305, 648, 649, 650, 1425, 306, 307, 651, 1426,
	1352, 1427, 308, 309, 310, 311, 312, 313, 314, 0,
	1428, 316, 317, 318, 315, 319, 1429, 320, 0, 321,
	322, 323, 324, 325, 326, 1430, 327, 328, 329, 1208,
	330, 331, 332, 1431, 1432, 1434, 1433, 1435, 1436, 1437,
	333, 334, 335, 336, 337, 0, 338, 340, 652, 653,
	1438, 343, 339, 341, 1439, 344, 342, 345, 1440, 346,
	347, 348, 1441, 1442, 349, 350, 351, 1443, 352, 353,
	1444, 354, 355, 356, 1445, 357, 358, 654, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 655, 656,
	370, 1446, 277, 1447, 0, 0, 0, 0, 371, 372,
	373, 657, 0, 0, 0, 374, 1448, 375, 376, 377,
	1449, 1450, 1209, 378, 379, 380, 658, 659, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 1451, 390, 660,
	1452, 661, 391, 1453, 392, 393, 394, 395, 396, 662,
	663, 664, 480, 1211, 397, 398, 1454, 399, 400, 401,
	402, 403, 0, 0, 0, 278, 404, 405, 406, 408,
	1455, 1210, 407, 665, 666, 1456, 667, 1457, 409, 410,
	1212, 668, 1213, 411, 412, 413, 1214, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 1458, 421, 423,
	422, 1459, 424, 669, 1215, 425, 426, 1216, 1460, 427,
	428, 429, 430, 431, 432, 435, 1461, 1462, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 459, 1217, 461, 462,
	463, 464, 470, 472, 473, 468, 469, 471, 474, 475,
	466, 467, 1218, 476, 465, 1463, 279, 1219, 477, 478,
	1464, 670, 479, 671, 481, 482, 1465, 0, 483, 0,
	1466, 1467, 485, 486, 487, 1468, 1469, 488, 489, 672,
	1220, 490, 1221, 673, 491, 492, 484, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 1470, 502, 503, 674,
	504, 505, 506, 675, 507, 508, 509, 676, 510, 677,
	511, 512, 1471, 513, 514, 0, 515, 516, 517, 518,
	519, 520, 521, 678, 522, 523, 525, 524, 526, 1472,
	527, 0, 528, 529, 530, 0, 0, 0, 0, 0,
	531, 0, 533, 534, 535, 536, 532, 537, 538, 539,
	540, 541, 1473, 542, 543, 544, 1222, 545, 546, 547,
	548, 549, 679, 550, 0, 551, 552, 558, 559, 560,
	553, 554, 561, 562, 563, 564, 565, 1474, 567, 568,
	566, 569, 570, 571, 1475, 572, 573, 555, 556, 574,
	575, 1223, 576, 577, 578, 579, 580, 581, 582, 680,
	0, 583, 1476, 584, 585, 586, 588, 557, 589, 594,
	595, 681, 590, 591, 592, 593, 682, 597, 598, 1477,
	599, 600, 0, 596, 587, 1478, 601, 602, 603, 604,
	605, 606, 607, 364, 608, 1479, 609, 683, 684, 685,
	686, 1480, 618, 1481, 610, 611, 612, 687, 613, 688,
	1482, 614, 615, 616, 617, 0, 619, 620, 1483, 1484,
	621, 622, 623, 625, 626, 624, 627, 1485, 628, 1486,
	0, 629, 630, 631, 689, 690, 691, 1487, 633, 632,
	634, 692, 635, 636, 1488, 1489, 1490, 1491, 637, 638,
	693, 639, 640, 641, 2604, 0, 1143, 1115, 1116, 1117,
	1113, 1114, 1126, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 280, 282, 281, 283, 284, 285, 286,
	2601, 287, 288, 0, 0, 0, 0, 0, 1167, 1131,
	0, 0, 0, 289, 290, 1207, 291, 292, 293, 294,
	295, 296, 643, 1180, 0, 297, 1187, 298, 1186, 0,
	1197, 299, 300, 301, 302, 303, 304, 1133, 1166, 1098,
	305, 1227, 1228, 650, 0, 306, 307, 1173, 0, 1154,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 1208, 330,
	331, 332, 1157, 1155, 1156, 1163, 1159, 1158, 1162, 333,
	334, 335, 336, 337, 1190, 338, 340, 1184, 1183, 1103,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 2602, 0, 349, 1175, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 1109, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 1198, 1199, 370,
	1122, 277, 0, 0, 0, 0, 0, 371, 372, 373,
	1182, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 1209, 378, 379, 380, 1195, 1196, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 1205, 0,
	1132, 391, 0, 392, 393, 394, 395, 396, 1168, 1169,
	1172, 480, 1211, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 278, 404, 405, 406, 408, 0,
	1210, 407, 1177, 1178, 0, 1138, 0, 409, 410, 1212,
	1170, 1213, 411, 412, 413, 1214, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 0, 421, 423, 422,
	0, 424, 1206, 1215, 425, 426, 1216, 0, 427, 428,
	429, 430, 431, 432, 435, 1161, 1160, 433, 434, 436,
	437, 0, 438, 439, 441, 444, 440, 442, 443, 445,
	458, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 459, 1217, 461, 462, 463,
	464, 470, 472, 473, 468, 469, 471, 474, 475, 466,
	467, 1218, 476, 465, 1100, 279, 1219, 477, 478, 1123,
	1171, 479, 1185, 481, 482, 0, 0, 483, 0, 0,
	0, 485, 486, 487, 0, 0, 488, 489, 672, 1220,
	490, 1221, 1200, 491, 492, 1110, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 0, 502, 503, 674, 504,
	505, 506, 675, 507, 508, 509, 1201, 510, 677, 511,
	512, 0, 513, 514, 0, 515, 516, 517, 518, 519,
	520, 521, 1181, 522, 523, 525, 524, 526, 0, 527,
	0, 528, 529, 530, 0, 0, 0, 0, 0, 531,
	0, 533, 534, 535, 536, 532, 537, 538, 539, 540,
	541, 0, 542, 543, 544, 1222, 545, 546, 547, 548,
	549, 1111, 550, 0, 551, 552, 558, 559, 560, 553,
	554, 561, 562, 563, 564, 565, 0, 567, 568, 566,
	569, 570, 571, 1164, 572, 573, 555, 556, 574, 575,
	1223, 576, 577, 578, 579, 580, 581, 582, 1179, 0,
	583, 0, 584, 585, 586, 588, 557, 589, 594, 595,
	1226, 590, 591, 592, 593, 1202, 597, 598, 0, 599,
	600, 1097, 596, 587, 0, 601, 602, 603, 604, 605,
	606, 607, 364, 608, 0, 609, 1191, 1192, 1193, 1194,
	0, 618, 0, 610, 611, 612, 1203, 613, 1204, 1121,
	614, 615, 616, 617, 0, 619, 620, 0, 1104, 621,
	622, 623, 625, 626, 624, 627, 1165, 628, 0, 0,
	629, 630, 631, 689, 1188, 1225, 2600, 633, 632, 634,
	692, 635, 636, 0, 0, 0, 0, 637, 638, 693,
	639, 640, 641, 1101, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1096, 0, 0, 0,
	0, 0, 0, 1094, 1095, 2603, 0, 0, 0, 0,
	0, 0, 1127, 2599, 0, 1087, 1125, 1143, 1115, 1116,
	1117, 1113, 1114, 1126, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 280, 282, 281, 283, 284, 285,
	286, 0, 287, 288, 0, 0, 0, 0, 0, 1167,
	1131, 0, 0, 0, 289, 290, 1207, 291, 292, 293,
	294, 295, 296, 643, 1180, 0, 297, 1187, 298, 1186,
	0, 1197, 299, 300, 301, 302, 303, 304, 1133, 1166,
	1098, 305, 1227, 1228, 650, 0, 306, 307, 1173, 0,
	1154, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 1208,
	330, 331, 332, 1157, 1155, 1156, 1163, 1159, 1158, 1162,
	333, 334, 335, 336, 337, 1190, 338, 340, 1184, 1183,
	1103, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 1175, 351, 0, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 1109, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 1198, 1199,
	370, 1122, 277, 0, 0, 0, 0, 0, 371, 372,
	373, 1182, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 1209, 378, 379, 380, 1195, 1196, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 1205,
	0, 1132, 391, 0, 392, 393, 394, 395, 396, 1168,
	1169, 1172, 480, 1211, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 278, 404, 405, 406, 408,
	0, 1210, 407, 1177, 1178, 0, 1138, 0, 409, 410,
	1212, 1170, 1213, 411, 412, 413, 1214, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 0, 424, 1206, 1215, 425, 426, 1216, 0, 427,
	428, 429, 430, 431, 432, 435, 1161, 1160, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 459, 1217, 461, 462,
	463, 464, 470, 472, 473, 468, 469, 471, 474, 475,
	466, 467, 1218, 476, 465, 1100, 279, 1219, 477, 478,
	1123, 1171, 479, 1185, 481, 482, 0, 0, 483, 0,
	0, 0, 485, 486, 487, 0, 0, 488, 489, 672,
	1220, 490, 1221, 1200, 491, 492, 1110, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 0, 502, 503, 674,
	504, 505, 506, 675, 507, 508, 509, 1201, 510, 677,
	511, 512, 0, 513, 514, 0, 515, 516, 517, 518,
	519, 520, 521, 1181, 522, 523, 525, 524, 526, 0,
	527, 0, 528, 529, 530, 0, 0, 0, 0, 0,
	531, 0, 533, 534, 535, 536, 532, 537, 538, 539,
	540, 541, 0, 542, 543, 544, 1222, 545, 546, 547,
	548, 549, 1111, 550, 0, 551, 552, 558, 559, 560,
	553, 554, 561, 562, 563, 564, 565, 239, 567, 568,
	566, 569, 570, 571, 1164, 572, 573, 555, 556, 574,
	575, 1223, 576, 577, 578, 579, 580, 581, 582, 1179,
	0, 583, 0, 584, 585, 586, 588, 557, 589, 594,
	595, 1226, 590, 591, 592, 593, 1202, 597, 598, 0,
	599, 600, 1097, 596, 587, 241, 601, 602, 603, 604,
	605, 606, 607, 364, 608, 0, 609, 1191, 1192, 1193,
	1194, 0, 618, 0, 610, 611, 612, 1203, 613, 1204,
	1121, 614, 615, 616, 617, 0, 619, 620, 0, 1104,
	621, 622, 623, 625, 626, 624, 627, 1165, 628, 0,
	0, 629, 630, 631, 1631, 1188, 1225, 0, 633, 632,
	634, 692, 635, 636, 0, 0, 0, 233, 637, 638,
	693, 639, 640, 641, 1101, 0, 234, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1096, 0, 0,
	0, 0, 0, 0, 1094, 1095, 1143, 1115, 1116, 1117,
	1113, 1114, 1126, 1890, 1888, 0, 0, 1125, 0, 0,
	0, 0, 0, 280, 282, 281, 283, 284, 285, 286,
	0, 287, 288, 0, 0, 0, 0, 0, 1167, 1131,
	0, 0, 0, 289, 290, 1207, 291, 292, 293, 294,
	295, 296, 643, 1180, 0, 297, 1187, 298, 1186, 0,
	1197, 299, 300, 301, 302, 303, 304, 1133, 1166, 1098,
	305, 1227, 1228, 650, 0, 306, 307, 1173, 0, 1154,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 1208, 330,
	331, 332, 1157, 1155, 1156, 1163, 1159, 1158, 1162, 333,
	334, 335, 336, 337, 1190, 338, 340, 1184, 1183, 1103,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 1175, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 1109, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 1198, 1199, 370,
	1122, 277, 0, 0, 0, 0, 0, 371, 372, 373,
	1182, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 1209, 378, 379, 380, 1195, 1196, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 1205, 0,
	1132, 391, 0, 392, 393, 394, 395, 396, 1168, 1169,
	1172, 480, 1211, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 278, 404, 405, 406, 408, 0,
	1210, 407, 1177, 1178, 0, 1138, 0, 409, 410, 1212,
	1170, 1213, 411, 412, 413, 1214, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 0, 421, 423, 422,
	0, 424, 1206, 1215, 425, 426, 1216, 0, 427, 428,
	429, 430, 431, 432, 435, 1161, 1160, 433, 434, 436,
	437, 0, 438, 439, 441, 444, 440, 442, 443, 445,
	458, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 459, 1217, 461, 462, 463,
	464, 470, 472, 473, 468, 469, 471, 474, 475, 466,
	467, 1218, 476, 465, 1100, 279, 1219, 477, 478, 1123,
	1171, 479, 1185, 481, 482, 0, 0, 483, 0, 0,
	0, 485, 486, 487, 0, 0, 488, 489, 672, 1220,
	490, 1221, 1200, 491, 492, 1110, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 0, 502, 503, 674, 504,
	505, 506, 675, 507, 508, 509, 1201, 510, 677, 511,
	512, 0, 513, 514, 0, 515, 516, 517, 518, 519,
	520, 521, 1181, 522, 523, 525, 524, 526, 0, 527,
	0, 528, 529, 530, 0, 0, 0, 0, 0, 531,
	0, 533, 534, 535, 536, 532, 537, 538, 539, 540,
	541, 0, 542, 543, 544, 1222, 545, 546, 547, 548,
	549, 1111, 550, 0, 551, 552, 558, 559, 560, 553,
	554, 561, 562, 563, 564, 565, 239, 567, 568, 566,
	569, 570, 571, 1164, 572, 573, 555, 556, 574, 575,
	1223, 576, 577, 578, 579, 580, 581, 582, 1179, 0,
	583, 0, 584, 585, 586, 588, 557, 589, 594, 595,
	1226, 590, 591, 592, 593, 1202, 597, 598, 0, 599,
	600, 1097, 596, 587, 241, 601, 602, 603, 604, 605,
	606, 607, 364, 608, 0, 609, 1191, 1192, 1193, 1194,
	0, 618, 0, 610, 611, 612, 1203, 613, 1204, 1121,
	614, 615, 616, 617, 0, 619, 620, 0, 1104, 621,
	622, 623, 625, 626, 624, 627, 1165, 628, 0, 0,
	629, 630, 631, 1631, 1188, 1225, 0, 633, 632, 634,
	692, 635, 636, 0, 0, 0, 233, 637, 638, 693,
	639, 640, 641, 1101, 0, 234, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1096, 0, 0, 0,
	0, 0, 0, 1094, 1095, 1143, 1115, 1116, 1117, 1113,
	1114, 1126, 1890, 3241, 0, 0, 1125, 0, 0, 0,
	0, 0, 280, 282, 281, 283, 284, 285, 286, 0,
	287, 288, 0, 0, 0, 0, 0, 1167, 1131, 0,
	0, 0, 289, 290, 1207, 291, 292, 293, 294, 295,
	296, 643, 1180, 0, 297, 1187, 298, 1186, 0, 1197,
	299, 300, 301, 302, 303, 304, 1133, 1166, 1098, 305,
	1227, 1228, 650, 0, 306, 307, 1173, 0, 1154, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 1208, 330, 331,
	332, 1157, 1155, 1156, 1163, 1159, 1158, 1162, 333, 334,
	335, 336, 337, 1190, 338, 340, 1184, 1183, 1103, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 1175, 351, 0, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 1109, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 1198, 1199, 370, 1122,
	277, 0, 0, 0, 0, 0, 371, 372, 373, 1182,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	1209, 378, 379, 380, 1195, 1196, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 1205, 0, 1132,
	391, 0, 392, 393, 394, 395, 396, 1168, 1169, 1172,
	480, 1211, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 278, 404, 405, 406, 408, 0, 1210,
	407, 1177, 1178, 0, 1138, 0, 409, 410, 1212, 1170,
	1213, 411, 412, 413, 1214, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 1206, 1215, 425, 426, 1216, 0, 427, 428, 429,
	430, 431, 432, 435, 1161, 1160, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 1217, 461, 462, 463, 464,
	470, 472, 473, 468, 469, 471, 474, 475, 466, 467,
	1218, 476, 465, 1100, 279, 1219, 477, 478, 1123, 1171,
	479, 1185, 481, 482, 0, 0, 483, 0, 0, 0,
	485, 486, 487, 0, 0, 488, 489, 672, 1220, 490,
	1221, 1200, 491, 492, 1110, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 0, 502, 503, 674, 504, 505,
	506, 675, 507, 508, 509, 1201, 510, 677, 511, 512,
	0, 513, 514, 0, 515, 516, 517, 518, 519, 520,
	521, 1181, 522, 523, 525, 524, 526, 0, 527, 0,
	528, 529, 530, 0, 0, 0, 0, 0, 531, 0,
	533, 534, 535, 536, 532, 537, 538, 539, 540, 541,
	0, 542, 543, 544, 1222, 545, 546, 547, 548, 549,
	1111, 550, 0, 551, 552, 558, 559, 560, 553, 554,
	561, 562, 563, 564, 565, 239, 567, 568, 566, 569,
	570, 571, 1164, 572, 573, 555, 556, 574, 575, 1223,
	576, 577, 578, 579, 580, 581, 582, 1179, 0, 583,
	0, 584, 585, 586, 588, 557, 589, 594, 595, 1226,
	590, 591, 592, 593, 1202, 597, 598, 0, 599, 600,
	1097, 596, 587, 241, 601, 602, 603, 604, 605, 606,
	607, 364, 608, 0, 609, 1191, 1192, 1193, 1194, 0,
	618, 0, 610, 611, 612, 1203, 613, 1204, 1121, 614,
	615, 616, 617, 0, 619, 620, 0, 1104, 621, 622,
	623, 625, 626, 624, 627, 1165, 628, 0, 0, 629,
	630, 631, 1631, 1188, 1225, 0, 633, 632, 634, 692,
	635, 636, 0, 0, 0, 233, 637, 638, 693, 639,
	640, 641, 1101, 0, 234, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1096, 0, 0, 0, 0,
	0, 0, 1094, 1095, 1143, 1115, 1116, 1117, 1113, 1114,
	1126, 1890, 1888, 0, 0, 1125, 0, 0, 0, 0,
	0, 280, 282, 281, 283, 284, 285, 286, 0, 287,
	288, 0, 0, 0, 0, 0, 1167, 1131, 0, 0,
	0, 289, 290, 1207, 291, 292, 293, 294, 295, 296,
	643, 1180, 0, 297, 1187, 298, 1186, 2735, 1197, 299,
	300, 301, 302, 303, 304, 1133, 1166, 1098, 305, 1227,
	1228, 650, 0, 306, 307, 1173, 0, 1154, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	325, 326, 0, 327, 328, 329, 1208, 330, 331, 332,
	1157, 1155, 1156, 1163, 1159, 1158, 1162, 333, 334, 335,
	336, 337, 1190, 338, 340, 1184, 1183, 1103, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 1175, 351, 0, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 1109, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 1198, 1199, 370, 1122, 277,
	0, 0, 0, 0, 0, 371, 372, 373, 1182, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 2740, 1209,
	378, 379, 380, 1195, 1196, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 1205, 0, 1132, 391,
	0, 392, 393, 394, 395, 396, 1168, 1169, 1172, 480,
	1211, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 278, 404, 405, 406, 408, 0, 1210, 407,
	1177, 1178, 0, 1138, 0, 409, 410, 1212, 1170, 1213,
	411, 412, 413, 1214, 414, 0, 0, 0, 415, 416,
	417, 418, 419, 420, 0, 421, 423, 422, 2736, 424,
	1206, 1215, 425, 426, 1216, 0, 427, 428, 429, 430,
	431, 432, 435, 1161, 1160, 433, 434, 436, 437, 0,
	438, 439, 441, 444, 440, 442, 443, 445, 458, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 460, 0, 459, 1217, 461, 462, 463, 464, 470,
	472, 473, 468, 469, 471, 474, 475, 466, 467, 1218,
	476, 465, 1100, 279, 1219, 477, 478, 1123, 1171, 479,
	1185, 481, 482, 0, 0, 483, 0, 0, 0, 485,
	486, 487, 0, 0, 488, 489, 672, 1220, 490, 1221,
	1200, 491, 492, 1110, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 0, 502, 503, 674, 504, 505, 506,
	675, 507, 508, 509, 1201, 510, 677, 511, 512, 0,
	513, 514, 0, 515, 516, 517, 518, 519, 520, 521,
	1181, 522, 523, 525, 524, 526, 0, 527, 0, 528,
	529, 530, 0, 0, 0, 0, 0, 531, 0, 533,
	534, 535, 536, 532, 537, 538, 539, 540, 541, 0,
	542, 543, 544, 1222, 545, 546, 547, 548, 549, 1111,
	550, 0, 551, 552, 558, 559, 560, 553, 554, 561,
	562, 563, 564, 565, 0, 567, 568, 566, 569, 570,
	571, 1164, 572, 573, 555, 556, 574, 575, 1223, 576,
	577, 578, 579, 580, 581, 582, 1179, 0, 583, 0,
	584, 585, 586, 588, 557, 589, 594, 595, 1226, 590,
	591, 592, 593, 1202, 597, 598, 0, 599, 600, 1097,
	596, 587, 0, 601, 602, 603, 604, 605, 606, 607,
	364, 608, 0, 609, 1191, 1192, 1193, 1194, 0, 618,
	2737, 610, 611, 612, 1203, 613, 1204, 1121, 614, 615,
	616, 617, 0, 619, 620, 0, 1104, 621, 622, 623,
	625, 626, 624, 627, 1165, 628, 0, 0, 629, 630,
	631, 689, 1188, 1225, 0, 633, 632, 634, 692, 635,
	636, 0, 0, 0, 0, 637, 638, 693, 639, 640,
	641, 1101, 0, 0, 2649, 0, 1143, 1115, 1116, 1117,
	1113, 1114, 1126, 0, 1096, 0, 0, 0, 0, 0,
	0, 1094, 1095, 280, 282, 281, 283, 284, 285, 286,
	1127, 287, 288, 0, 1125, 0, 0, 0, 1167, 1131,
	0, 0, 0, 289, 290, 1207, 291, 292, 293, 294,
	295, 296, 643, 1180, 0, 297, 1187, 298, 1186, 0,
	1197, 299, 300, 301, 302, 303, 304, 1133, 1166, 1098,
	305, 1227, 1228, 650, 0, 306, 307, 1173, 0, 1154,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 1208, 330,
	331, 332, 1157, 1155, 1156, 1163, 1159, 1158, 1162, 333,
	334, 335, 336, 337, 1190, 338, 340, 1184, 1183, 1103,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 1175, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 1109, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 1198, 1199, 370,
	1122, 277, 0, 0, 0, 0, 0, 371, 372, 373,
	1182, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 1209, 378, 379, 380, 1195, 1196, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 1205, 0,
	1132, 391, 0, 392, 393, 394, 395, 396, 1168, 1169,
	1172, 480, 1211, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 278, 404, 405, 406, 408, 0,
	1210, 407, 1177, 1178, 0, 1138, 0, 409, 410, 1212,
	1170, 1213, 411, 412, 413, 1214, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 0, 421, 423, 422,
	0, 424, 1206, 1215, 425, 426, 1216, 0, 427, 428,
	429, 430, 431, 432, 435, 1161, 1160, 433, 434, 436,
	437, 0, 438, 439, 441, 444, 440, 442, 443, 445,
	458, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 459, 1217, 461, 462, 463,
	464, 470, 472, 473, 468, 469, 471, 474, 475, 466,
	467, 1218, 476, 465, 1100, 279, 1219, 477, 478, 1123,
	1171, 479, 1185, 481, 482, 0, 0, 483, 0, 0,
	0, 485, 486, 487, 0, 0, 488, 489, 672, 1220,
	490, 1221, 1200, 491, 492, 1110, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 0, 502, 503, 674, 504,
	505, 506, 675, 507, 508, 509, 1201, 510, 677, 511,
	512, 0, 513, 514, 0, 515, 516, 517, 518, 519,
	520, 521, 1181, 522, 523, 525, 524, 526, 0, 527,
	0, 528, 529, 530, 0, 0, 0, 0, 0, 531,
	0, 533, 534, 535, 536, 532, 537, 538, 539, 540,
	541, 0, 542, 543, 544, 1222, 545, 546, 547, 548,
	549, 1111, 550, 0, 551, 552, 558, 559, 560, 553,
	554, 561, 562, 563, 564, 565, 0, 567, 568, 566,
	569, 570, 571, 1164, 572, 573, 555, 556, 574, 575,
	1223, 576, 577, 578, 579, 580, 581, 582, 1179, 0,
	583, 0, 584, 585, 586, 588, 557, 589, 594, 595,
	1226, 590, 591, 592, 593, 1202, 597, 598, 0, 599,
	600, 1097, 596, 587, 0, 601, 602, 603, 604, 605,
	606, 607, 364, 608, 0, 609, 1191, 1192, 1193, 1194,
	0, 618, 0, 610, 611, 612, 1203, 613, 1204, 1121,
	614, 615, 616, 617, 0, 619, 620, 0, 1104, 621,
	622, 623, 625, 626, 624, 627, 1165, 628, 0, 0,
	629, 630, 631, 689, 1188, 1225, 0, 633, 632, 634,
	692, 635, 636, 0, 0, 0, 0, 637, 638, 693,
	639, 640, 641, 1101, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1096, 0, 0, 0,
	0, 0, 0, 1094, 1095, 0, 0, 0, 0, 0,
	0, 0, 1127, 2647, 0, 2646, 1125, 1143, 1115, 1116,
	1117, 1113, 1114, 1126, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 280, 282, 281, 283, 284, 285,
	286, 0, 287, 288, 0, 0, 0, 0, 0, 1167,
	1131, 0, 0, 0, 289, 290, 1207, 291, 292, 293,
	294, 295, 296, 643, 1180, 0, 297, 1187, 298, 1186,
	0, 1197, 299, 300, 301, 302, 303, 304, 1133, 1166,
	1098, 305, 1227, 1228, 650, 0, 306, 307, 1173, 0,
	1154, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 1208,
	330, 331, 332, 1157, 1155, 1156, 1163, 1159, 1158, 1162,
	333, 334, 335, 336, 337, 1190, 338, 340, 1184, 1183,
	1103, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 1175, 351, 0, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 1109, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 1198, 1199,
	370, 1122, 277, 0, 0, 0, 0, 0, 371, 372,
	373, 1182, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 1209, 378, 379, 380, 1195, 1196, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 1205,
	0, 1132, 391, 0, 392, 393, 394, 395, 396, 1168,
	1169, 1172, 480, 1211, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 278, 404, 405, 406, 408,
	0, 1210, 407, 1177, 1178, 0, 1138, 0, 409, 410,
	1212, 1170, 1213, 411, 412, 413, 1214, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 0, 424, 1206, 1215, 425, 426, 1216, 0, 427,
	428, 429, 430, 431, 432, 435, 1161, 1160, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 459, 1217, 461, 462,
	463, 464, 470, 472, 473, 468, 469, 471, 474, 475,
	466, 467, 1218, 476, 465, 1100, 279, 1219, 477, 478,
	1123, 1171, 479, 1185, 481, 482, 0, 0, 483, 0,
	0, 0, 485, 486, 487, 0, 0, 488, 489, 672,
	1220, 490, 1221, 1200, 491, 492, 1110, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 0, 502, 503, 674,
	504, 505, 506, 675, 507, 508, 509, 1201, 510, 677,
	511, 512, 0, 513, 514, 0, 515, 516, 517, 518,
	519, 520, 521, 1181, 522, 523, 525, 524, 526, 0,
	527, 0, 528, 529, 530, 0, 0, 0, 0, 0,
	531, 0, 533, 534, 535, 536, 532, 537, 538, 539,
	540, 541, 0, 542, 543, 544, 1222, 545, 546, 547,
	548, 549, 1111, 550, 0, 551, 552, 558, 559, 560,
	553, 554, 561, 562, 563, 564, 565, 0, 567, 568,
	566, 569, 570, 571, 1164, 572, 573, 555, 556, 574,
	575, 1223, 576, 577, 578, 579, 580, 581, 582, 1179,
	0, 583, 0, 584, 585, 586, 588, 557, 589, 594,
	595, 1226, 590, 591, 592, 593, 1202, 597, 598, 0,
	599, 600, 1097, 596, 587, 0, 601, 602, 603, 604,
	605, 606, 607, 364, 608, 0, 609, 1191, 1192, 1193,
	1194, 0, 618, 0, 610, 611, 612, 1203, 613, 1204,
	1121, 614, 615, 616, 617, 0, 619, 620, 0, 1104,
	621, 622, 623, 625, 626, 624, 627, 1165, 628, 0,
	0, 629, 630, 631, 689, 1188, 1225, 0, 633, 632,
	634, 692, 635, 636, 0, 0, 0, 0, 637, 638,
	693, 639, 640, 641, 1101, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1096, 0, 0,
	0, 0, 0, 0, 1094, 1095, 0, 0, 0, 0,
	0, 0, 0, 1127, 2644, 0, 2643, 1125, 1143, 1115,
	1116, 1117, 1113, 1114, 1126, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 280, 282, 281, 283, 284,
	285, 286, 0, 287, 288, 0, 0, 0, 0, 0,
	1167, 1131, 0, 0, 0, 289, 290, 1207, 291, 292,
	293, 294, 295, 296, 643, 1180, 0, 297, 1187, 298,
	1186, 0, 1197, 299, 300, 301, 302, 303, 304, 1133,
	1166, 1098, 305, 1227, 1228, 650, 0, 306, 307, 1173,
	0, 1154, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	1208, 330, 331, 332, 1157, 1155, 1156, 1163, 1159, 1158,
	1162, 333, 334, 335, 336, 337, 1190, 338, 340, 1184,
	1183, 1103, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 1175, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 1109, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 1198,
	1199, 370, 1122, 277, 0, 0, 0, 0, 0, 371,
	372, 373, 1182, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 1209, 378, 379, 380, 1195, 1196, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	1205, 0, 1132, 391, 0, 392, 393, 394, 395, 396,
	1168, 1169, 1172, 480, 1211, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 278, 404, 405, 406,
	408, 0, 1210, 407, 1177, 1178, 0, 1138, 0, 409,
	410, 1212, 1170, 1213, 411, 412, 413, 1214, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 0, 421,
	423, 422, 0, 424, 1206, 1215, 425, 426, 1216, 0,
	427, 428, 429, 430, 431, 432, 435, 1161, 1160, 433,
	434, 436, 437, 0, 438, 439, 441, 444, 440, 442,
	443, 445, 458, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 0, 459, 1217, 461,
	462, 463, 464, 470, 472, 473, 468, 469, 471, 474,
	475, 466, 467, 1218, 476, 465, 1100, 279, 1219, 477,
	478, 1123, 1171, 479, 1185, 481, 482, 0, 0, 483,
	0, 0, 0, 485, 486, 487, 0, 0, 488, 489,
	672, 1220, 490, 1221, 1200, 491, 492, 1110, 493, 494,
	495, 496, 497, 498, 499, 500, 501, 0, 502, 503,
	674, 504, 505, 506, 675, 507, 508, 509, 1201, 510,
	677, 511, 512, 0, 513, 514, 0, 515, 516, 517,
	518, 519, 520, 521, 1181, 522, 523, 525, 524, 526,
	0, 527, 0, 528, 529, 530, 0, 0, 0, 0,
	0, 531, 0, 533, 534, 535, 536, 532, 537, 538,
	539, 540, 541, 0, 542, 543, 544, 1222, 545, 546,
	547, 548, 549, 1111, 550, 0, 551, 552, 558, 559,
	560, 553, 554, 561, 562, 563, 564, 565, 0, 567,
	568, 566, 569, 570, 571, 1164, 572, 573, 555, 556,
	574, 575, 1223, 576, 577, 578, 579, 580, 581, 582,
	1179, 0, 583, 0, 584, 585, 586, 588, 557, 589,
	594, 595, 1226, 590, 591, 592, 593, 1202, 597, 598,
	0, 599, 600, 1097, 596, 587, 0, 601, 602, 603,
	604, 605, 606, 607, 364, 608, 0, 609, 1191, 1192,
	1193, 1194, 0, 618, 0, 610, 611, 612, 1203, 613,
	1204, 1121, 614, 615, 616, 617, 0, 619, 620, 0,
	1104, 621, 622, 623, 625, 626, 624, 627, 1165, 628,
	0, 0, 629, 630, 631, 689, 1188, 1225, 0, 633,
	632, 634, 692, 635, 636, 0, 0, 0, 0, 637,
	638, 693, 639, 640, 641, 1101, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1096, 0,
	0, 0, 0, 0, 0, 1094, 1095, 0, 0, 0,
	0, 0, 0, 0, 1127, 2641, 0, 2640, 1125, 1143,
	1115, 1116, 1117, 1113, 1114, 1126, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 280, 282, 281, 283,
	284, 285, 286, 0, 287, 288, 0, 0, 0, 0,
	0, 1167, 1131, 0, 0, 0, 289, 290, 1207, 291,
	292, 293, 294, 295, 296, 643, 1180, 0, 297, 1187,
	298, 1186, 0, 1197, 299, 300, 301, 302, 303, 304,
	1133, 1166, 1098, 305, 1227, 1228, 650, 0, 306, 307,
	1173, 0, 1154, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 1208, 330, 331, 332, 1157, 1155, 1156, 1163, 1159,
	1158, 1162, 333, 334, 335, 336, 337, 1190, 338, 340,
	1184, 1183, 1103, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 1175, 351, 0,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 1109,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	1198, 1199, 370, 1122, 277, 0, 0, 0, 0, 0,
	371, 372, 373, 1182, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 1209, 378, 379, 380, 1195, 1196,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 1205, 0, 1132, 391, 0, 392, 393, 394, 395,
	396, 1168, 1169, 1172, 480, 1211, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 278, 404, 405,
	406, 408, 0, 1210, 407, 1177, 1178, 0, 1138, 0,
	409, 410, 1212, 1170, 1213, 411, 412, 413, 1214, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 1206, 1215, 425, 426, 1216,
	0, 427, 428, 429, 430, 431, 432, 435, 1161, 1160,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 1217,
	461, 462, 463, 464, 470, 472, 473, 468, 469, 471,
	474, 475, 466, 467, 1218, 476, 465, 1100, 279, 1219,
	477, 478, 1123, 1171, 479, 1185, 481, 482, 0, 0,
	483, 0, 0, 0, 485, 486, 487, 0, 0, 488,
	489, 672, 1220, 490, 1221, 1200, 491, 492, 1110, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 0, 502,
	503, 674, 504, 505, 506, 675, 507, 508, 509, 1201,
	510, 677, 511, 512, 0, 513, 514, 0, 515, 516,
	517, 518, 519, 520, 521, 1181, 522, 523, 525, 524,
	526, 0, 527, 0, 528, 529, 530, 0, 0, 0,
	0, 0, 531, 0, 533, 534, 535, 536, 532, 537,
	538, 539, 540, 541, 0, 542, 543, 544, 1222, 545,
	546, 547, 548, 549, 1111, 550, 0, 551, 552, 558,
	559, 560, 553, 554, 561, 562, 563, 564, 565, 0,
	567, 568, 566, 569, 570, 571, 1164, 572, 573, 555,
	556, 574, 575, 1223, 576, 577, 578, 579, 580, 581,
	582, 1179, 0, 583, 0, 584, 585, 586, 588, 557,
	589, 594, 595, 1226, 590, 591, 592, 593, 1202, 597,
	598, 0, 599, 600, 1097, 596, 587, 0, 601, 602,
	603, 604, 605, 606, 607, 364, 608, 0, 609, 1191,
	1192, 1193, 1194, 0, 618, 0, 610, 611, 612, 1203,
	613, 1204, 1121, 614, 615, 616, 617, 0, 619, 620,
	0, 1104, 621, 622, 623, 625, 626, 624, 627, 1165,
	628, 0, 0, 629, 630, 631, 689, 1188, 1225, 0,
	633, 632, 634, 692, 635, 636, 0, 0, 0, 0,
	637, 638, 693, 639, 640, 641, 1101, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1096,
	0, 0, 0, 0, 0, 0, 1094, 1095, 0, 0,
	0, 0, 0, 0, 0, 1127, 2638, 0, 1731, 1125,
	1143, 1115, 1116, 1117, 1113, 1114, 1126, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 280, 282, 281,
	283, 284, 285, 286, 0, 287, 288, 0, 0, 0,
	0, 0, 1167, 1131, 0, 0, 0, 289, 290, 1207,
	291, 292, 293, 294, 295, 296, 643, 1180, 0, 297,
	1187, 298, 1186, 0, 1197, 299, 300, 301, 302, 303,
	304, 1133, 1166, 1098, 305, 1227, 1228, 650, 0, 306,
	307, 1173, 0, 1154, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 1208, 330, 331, 332, 1157, 1155, 1156, 1163,
	1159, 1158, 1162, 333, 334, 335, 336, 337, 1190, 338,
	340, 1184, 1183, 1103, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 1175, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	1109, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 1198, 1199, 370, 1122, 277, 0, 0, 0, 0,
	0, 371, 372, 373, 1182, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 1209, 378, 379, 380, 1195,
	1196, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 1205, 0, 1132, 391, 0, 392, 393, 394,
	395, 396, 1168, 1169, 1172, 480, 1211, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 278, 404,
	405, 406, 408, 0, 1210, 407, 1177, 1178, 0, 1138,
	0, 409, 410, 1212, 1170, 1213, 411, 412, 413, 1214,
	414, 0, 0, 0, 415, 416, 417, 418, 419, 420,
	0, 421, 423, 422, 0, 424, 1206, 1215, 425, 426,
	1216, 0, 427, 428, 429, 430, 431, 432, 435, 1161,
	1160, 433, 434, 436, 437, 0, 438, 439, 441, 444,
	440, 442, 443, 445, 458, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 460, 0, 459,
	1217, 461, 462, 463, 464, 470, 472, 473, 468, 469,
	471, 474, 475, 466, 467, 1218, 476, 465, 1100, 279,
	1219, 477, 478, 1123, 1171, 479, 1185, 481, 482, 0,
	0, 483, 0, 0, 0, 485, 486, 487, 0, 0,
	488, 489, 672, 1220, 490, 1221, 1200, 491, 492, 1110,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 0,
	502, 503, 674, 504, 505, 506, 675, 507, 508, 509,
	1201, 510, 677, 511, 512, 0, 513, 514, 0, 515,
	516, 517, 518, 519, 520, 521, 1181, 522, 523, 525,
	524, 526, 0, 527, 0, 528, 529, 530, 0, 0,
	0, 0, 0, 531, 0, 533, 534, 535, 536, 532,
	537, 538, 539, 540, 541, 0, 542, 543, 544, 1222,
	545, 546, 547, 548, 549, 1111, 550, 0, 551, 552,
	558, 559, 560, 553, 554, 561, 562, 563, 564, 565,
	0, 567, 568, 566, 569, 570, 571, 1164, 572, 573,
	555, 556, 574, 575, 1223, 576, 577, 578, 579, 580,
	581, 582, 1179, 0, 583, 0, 584, 585, 586, 588,
	557, 589, 594, 595, 1226, 590, 591, 592, 593, 1202,
	597, 598, 0, 599, 600, 1097, 596, 587, 0, 601,
	602, 603, 604, 605, 606, 607, 364, 608, 0, 609,
	1191, 1192, 1193, 1194, 0, 618, 0, 610, 611, 612,
	1203, 613, 1204, 1121, 614, 615, 616, 617, 0, 619,
	620, 0, 1104, 621, 622, 623, 625, 626, 624, 627,
	1165, 628, 0, 0, 629, 630, 631, 689, 1188, 1225,
	0, 633, 632, 634, 692, 635, 636, 1730, 0, 0,
	0, 637, 638, 693, 639, 640, 641, 1101, 0, 0,
	1090, 0, 1143, 1115, 1116, 1117, 1113, 1114, 1126, 0,
	1096, 0, 0, 0, 0, 0, 0, 1094, 1095, 280,
	282, 281, 283, 284, 285, 286, 1127, 287, 288, 0,
	1125, 0, 0, 0, 1167, 1131, 0, 0, 0, 289,
	290, 1207, 291, 292, 293, 294, 295, 296, 643, 1180,
	0, 297, 1187, 298, 1186, 0, 1197, 299, 300, 301,
	302, 303, 304, 1133, 1166, 1098, 305, 1227, 1228, 650,
	0, 306, 307, 1173, 0, 1154, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	0, 327, 328, 329, 1208, 330, 331, 332, 1157, 1155,
	1156, 1163, 1159, 1158, 1162, 333, 334, 335, 336, 337,
	1190, 338, 340, 1184, 1183, 1103, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	1175, 351, 0, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 1109, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 1198, 1199, 370, 1122, 277, 0, 0,
	0, 0, 0, 371, 372, 373, 1182, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 1209, 378, 379,
	380, 1195, 1196, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 1205, 0, 1132, 391, 0, 392,
	393, 394, 395, 396, 1168, 1169, 1172, 480, 1211, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	278, 404, 405, 406, 408, 0, 1210, 407, 1177, 1178,
	0, 1138, 0, 409, 410, 1212, 1170, 1213, 411, 412,
	413, 1214, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 0, 421, 423, 422, 0, 424, 1206, 1215,
	425, 426, 1216, 0, 427, 428, 429, 430, 431, 432,
	435, 1161, 1160, 433, 434, 436, 437, 0, 438, 439,
	441, 444, 440, 442, 443, 445, 458, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 460,
	0, 459, 1217, 461, 462, 463, 464, 470, 472, 473,
	468, 469, 471, 474, 475, 466, 467, 1218, 476, 465,
	1100, 279, 1219, 477, 478, 1123, 1171, 479, 1185, 481,
	482, 0, 0, 483, 0, 1105, 0, 485, 486, 487,
	0, 0, 488, 489, 672, 1220, 490, 1221, 1200, 491,
	492, 1110, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 0, 502, 503, 674, 504, 505, 506, 675, 507,
	508, 509, 1201, 510, 677, 511, 512, 0, 513, 514,
	0, 515, 516, 517, 518, 519, 520, 521, 1181, 522,
	523, 525, 524, 526, 0, 527, 0, 528, 529, 530,
	0, 0, 0, 0, 0, 531, 0, 533, 534, 535,
	536, 532, 537, 538, 539, 540, 541, 0, 542, 543,
	544, 1222, 545, 546, 547, 548, 549, 1111, 550, 0,
	551, 552, 558, 559, 560, 553, 554, 561, 562, 563,
	564, 565, 0, 567, 568, 566, 569, 570, 571, 1164,
	572, 573, 555, 556, 574, 575, 1223, 576, 577, 578,
	579, 580, 581, 582, 1179, 0, 583, 0, 584, 585,
	586, 588, 557, 589, 594, 595, 1226, 590, 591, 592,
	593, 1202, 597, 598, 0, 599, 600, 1097, 596, 587,
	0, 601, 602, 603, 604, 605, 606, 607, 364, 608,
	0, 609, 1191, 1192, 1193, 1194, 0, 618, 0, 610,
	611, 612, 1203, 613, 1204, 1121, 614, 615, 616, 617,
	0, 619, 620, 0, 1104, 621, 622, 623, 625, 626,
	624, 627, 1165, 628, 0, 0, 629, 630, 631, 689,
	1188, 1225, 0, 633, 632, 634, 692, 635, 636, 0,
	0, 0, 0, 637, 638, 693, 639, 640, 641, 1101,
	0, 0, 0, 0, 1143, 1115, 1116, 1117, 1113, 1114,
	1126, 0, 1096, 0, 0, 0, 0, 0, 0, 1094,
	1095, 280, 282, 281, 283, 284, 285, 286, 1127, 287,
	288, 0, 1125, 0, 0, 0, 1167, 1131, 0, 0,
	0, 289, 290, 1207, 291, 292, 293, 294, 295, 296,
	643, 1180, 0, 297, 1187, 298, 1186, 0, 1197, 299,
	300, 301, 302, 303, 304, 1133, 1166, 1098, 305, 1227,
	1228, 650, 0, 306, 307, 1173, 0, 1154, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	4715, 326, 0, 327, 328, 329, 1208, 330, 331, 332,
	1157, 1155, 1156, 1163, 1159, 1158, 1162, 333, 334, 335,
	336, 337, 1190, 338, 340, 1184, 1183, 1103, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 1175, 351, 0, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 1109, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 1198, 1199, 370, 1122, 277,
	0, 0, 0, 0, 0, 371, 372, 373, 1182, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 1209,
	378, 379, 380, 1195, 1196, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 1205, 0, 1132, 391,
	0, 392, 393, 394, 395, 396, 1168, 1169, 1172, 480,
	1211, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 278, 404, 405, 406, 408, 0, 1210, 407,
	1177, 1178, 0, 1138, 0, 409, 410, 1212, 1170, 1213,
	411, 412, 413, 1214, 414, 0, 0, 0, 415, 416,
	417, 418, 419, 420, 0, 421, 423, 422, 0, 424,
	1206, 1215, 425, 426, 1216, 0, 427, 428, 429, 430,
	431, 432, 435, 1161, 1160, 433, 434, 436, 437, 0,
	438, 439, 441, 444, 440, 442, 443, 445, 458, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 460, 0, 459, 1217, 461, 462, 463, 464, 470,
	472, 473, 468, 469, 471, 474, 475, 466, 467, 1218,
	476, 465, 1100, 279, 1219, 477, 478, 1123, 1171, 479,
	1185, 481, 482, 0, 0, 483, 0, 1105, 0, 485,
	486, 487, 0, 0, 488, 489, 672, 1220, 490, 1221,
	1200, 491, 492, 1110, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 0, 502, 503, 674, 504, 505, 506,
	675, 507, 508, 509, 1201, 510, 677, 511, 512, 0,
	513, 514, 0, 515, 516, 517, 518, 519, 520, 521,
	1181, 522, 523, 525, 524, 526, 0, 527, 0, 528,
	529, 530, 0, 0, 0, 0, 0, 531, 0, 533,
	534, 535, 536, 532, 537, 538, 539, 540, 541, 0,
	542, 543, 544, 1222, 545, 546, 547, 548, 549, 1111,
	550, 0, 551, 552, 558, 559, 560, 553, 554, 561,
	562, 563, 564, 565, 0, 567, 568, 566, 569, 570,
	571, 1164, 572, 573, 555, 556, 574, 575, 1223, 576,
	577, 578, 579, 580, 581, 582, 1179, 0, 583, 0,
	584, 585, 586, 588, 557, 589, 594, 595, 1226, 590,
	591, 592, 593, 1202, 597, 598, 0, 599, 600, 1097,
	596, 587, 0, 601, 602, 603, 604, 605, 606, 607,
	364, 608, 0, 609, 1191, 1192, 1193, 1194, 0, 618,
	0, 610, 611, 612, 1203, 613, 1204, 1121, 614, 615,
	616, 617, 0, 619, 620, 0, 1104, 621, 622, 623,
	625, 626, 624, 627, 1165, 628, 0, 0, 629, 630,
	631, 689, 1188, 1225, 0, 633, 632, 634, 692, 635,
	636, 0, 0, 0, 0, 637, 638, 693, 639, 640,
	641, 1101, 0, 0, 0, 0, 1143, 1115, 1116, 1117,
	1113, 1114, 1126, 0, 1096, 0, 0, 0, 0, 0,
	0, 1094, 1095, 280, 282, 281, 283, 284, 285, 286,
	1127, 287, 288, 0, 1125, 0, 0, 0, 1167, 1131,
	0, 0, 0, 289, 290, 1207, 291, 292, 293, 294,
	295, 296, 643, 1180, 0, 297, 1187, 298, 1186, 0,
	1197, 299, 300, 301, 302, 303, 304, 1133, 1166, 1098,
	305, 1227, 1228, 650, 0, 306, 307, 1173, 0, 1154,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 1208, 330,
	331, 332, 1157, 1155, 1156, 1163, 1159, 1158, 1162, 333,
	334, 335, 336, 337, 1190, 338, 340, 1184, 1183, 1103,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 1175, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 1109, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 1198, 1199, 370,
	1122, 277, 0, 0, 0, 0, 0, 371, 372, 373,
	1182, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 1209, 378, 379, 380, 1195, 1196, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 1205, 0,
	1132, 391, 0, 392, 393, 394, 395, 396, 1168, 1169,
	1172, 480, 1211, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 2481, 404, 405, 406, 408, 0,
	1210, 407, 1177, 1178, 0, 1138, 0, 409, 410, 1212,
	1170, 1213, 411, 412, 413, 1214, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 0, 421, 423, 422,
	0, 424, 1206, 1215, 425, 426, 1216, 0, 427, 428,
	429, 430, 431, 432, 435, 1161, 1160, 433, 434, 436,
	437, 0, 438, 439, 441, 444, 440, 442, 443, 445,
	458, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 459, 1217, 461, 462, 463,
	464, 470, 472, 473, 468, 469, 471, 474, 475, 466,
	467, 1218, 476, 465, 1100, 279, 1219, 477, 478, 1123,
	1171, 479, 1185, 481, 482, 0, 0, 483, 0, 0,
	0, 485, 486, 487, 0, 0, 488, 489, 672, 1220,
	490, 1221, 1200, 491, 492, 1110, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 0, 502, 503, 674, 504,
	505, 506, 675, 507, 508, 509, 1201, 510, 677, 511,
	512, 2480, 513, 514, 0, 515, 516, 517, 518, 519,
	520, 521, 1181, 522, 523, 525, 524, 526, 0, 527,
	0, 528, 529, 530, 0, 0, 0, 0, 0, 531,
	0, 533, 534, 535, 536, 532, 537, 538, 539, 540,
	541, 0, 542, 543, 544, 1222, 545, 546, 547, 548,
	549, 1111, 550, 0, 551, 552, 558, 559, 560, 553,
	554, 561, 562, 563, 564, 565, 0, 567, 568, 566,
	569, 570, 571, 1164, 572, 573, 555, 556, 574, 575,
	1223, 576, 577, 578, 579, 580, 581, 582, 1179, 0,
	583, 0, 584, 585, 586, 588, 557, 589, 594, 595,
	1226, 590, 591, 592, 593, 1202, 597, 598, 0, 599,
	600, 1097, 596, 587, 0, 601, 602, 603, 604, 605,
	606, 607, 364, 608, 0, 609, 1191, 1192, 1193, 1194,
	0, 618, 0, 610, 611, 612, 1203, 613, 1204, 1121,
	614, 615, 616, 617, 0, 619, 620, 0, 1104, 621,
	622, 623, 625, 626, 624, 627, 1165, 628, 0, 0,
	629, 630, 631, 689, 1188, 1225, 0, 633, 632, 634,
	692, 635, 636, 0, 0, 0, 0, 637, 638, 693,
	639, 640, 641, 1101, 0, 0, 0, 0, 1143, 1115,
	1116, 1117, 1113, 1114, 1126, 0, 1096, 0, 0, 0,
	0, 0, 0, 1094, 1095, 280, 282, 281, 283, 284,
	285, 286, 1127, 287, 288, 0, 1125, 0, 0, 0,
	1167, 1131, 0, 0, 0, 289, 290, 1207, 291, 292,
	293, 294, 295, 296, 643, 1180, 0, 297, 1187, 298,
	1186, 0, 1197, 299, 300, 301, 302, 303, 304, 1133,
	1166, 1098, 305, 1227, 1228, 650, 0, 306, 307, 1173,
	0, 1154, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	1208, 330, 331, 332, 1157, 1155, 1156, 1163, 1159, 1158,
	1162, 333, 334, 335, 336, 337, 1190, 338, 340, 1184,
	1183, 1103, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 1175, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 1109, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 1198,
	1199, 370, 1122, 277, 0, 0, 0, 0, 0, 371,
	372, 373, 1182, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 1209, 378, 379, 380, 1195, 1196, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	1205, 0, 1132, 391, 0, 392, 393, 394, 395, 396,
	1168, 1169, 1172, 480, 1211, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 278, 404, 405, 406,
	408, 0, 1210, 407, 1177, 1178, 0, 1138, 0, 409,
	410, 1212, 1170, 1213, 411, 412, 413, 1214, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 0, 421,
	423, 422, 0, 424, 1206, 1215, 425, 426, 1216, 0,
	427, 428, 429, 430, 431, 432, 435, 1161, 1160, 433,
	434, 436, 437, 0, 438, 439, 441, 444, 440, 442,
	443, 445, 458, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 0, 459, 1217, 461,
	462, 463, 464, 470, 472, 473, 468, 469, 471, 474,
	475, 466, 467, 1218, 476, 465, 1100, 279, 1219, 477,
	478, 1123, 1171, 479, 1185, 481, 482, 0, 0, 483,
	0, 1105, 0, 485, 486, 487, 0, 0, 488, 489,
	672, 1220, 490, 1221, 1200, 491, 492, 1110, 493, 494,
	495, 496, 497, 498, 499, 500, 501, 0, 502, 503,
	674, 504, 505, 506, 675, 507, 508, 509, 1201, 510,
	677, 511, 512, 0, 513, 514, 0, 515, 516, 517,
	518, 519, 520, 521, 1181, 522, 523, 525, 524, 526,
	0, 527, 0, 528, 529, 530, 0, 0, 0, 0,
	0, 531, 0, 533, 534, 535, 536, 532, 537, 538,
	539, 540, 541, 0, 542, 543, 544, 1222, 545, 546,
	547, 548, 549, 1111, 550, 0, 551, 552, 558, 559,
	560, 553, 554, 561, 562, 563, 564, 565, 0, 567,
	568, 566, 569, 570, 571, 1164, 572, 573, 555, 556,
	574, 575, 1223, 576, 577, 578, 579, 580, 581, 582,
	1179, 0, 583, 0, 584, 585, 586, 588, 557, 589,
	594, 595, 1226, 590, 591, 592, 593, 1202, 597, 598,
	0, 599, 600, 1097, 596, 587, 0, 601, 602, 603,
	604, 605, 606, 607, 364, 608, 0, 609, 1191, 1192,
	1193, 1194, 0, 618, 0, 610, 611, 612, 1203, 613,
	1204, 1121, 614, 615, 616, 617, 0, 619, 620, 0,
	1104, 621, 622, 623, 625, 626, 624, 627, 1165, 628,
	0, 0, 629, 630, 631, 689, 1188, 1225, 0, 633,
	632, 634, 692, 635, 636, 0, 0, 0, 0, 637,
	638, 693, 639, 640, 641, 1101, 0, 0, 0, 0,
	1143, 1115, 1116, 1117, 1113, 1114, 1126, 0, 1096, 0,
	0, 0, 0, 0, 0, 1094, 1095, 280, 282, 281,
	283, 284, 285, 286, 1127, 287, 288, 0, 1125, 0,
	0, 0, 1167, 1131, 0, 0, 0, 289, 290, 1207,
	291, 292, 293, 294, 295, 296, 643, 1180, 0, 297,
	1187, 298, 1186, 0, 1197, 299, 300, 301, 302, 303,
	304, 1133, 1166, 1098, 305, 1227, 1228, 650, 0, 306,
	307, 1173, 0, 1154, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 4450, 326, 0, 327,
	328, 329, 1208, 330, 331, 332, 1157, 1155, 1156, 1163,
	1159, 1158, 1162, 333, 334, 335, 336, 337, 1190, 338,
	340, 1184, 1183, 1103, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 1175, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	1109, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 1198, 1199, 370, 1122, 277, 0, 0, 0, 0,
	0, 371, 372, 373, 1182, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 1209, 378, 379, 380, 1195,
	1196, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 1205, 0, 1132, 391, 0, 392, 393, 394,
	395, 396, 1168, 1169, 1172, 480, 1211, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 278, 404,
	405, 406, 408, 0, 1210, 407, 1177, 1178, 0, 1138,
	0, 409, 410, 1212, 1170, 1213, 411, 412, 413, 1214,
	414, 0, 0, 0, 415, 416, 417, 418, 419, 420,
	0, 421, 423, 422, 0, 424, 1206, 1215, 425, 426,
	1216, 0, 427, 428, 429, 430, 431, 432, 435, 1161,
	1160, 433, 434, 436, 437, 0, 438, 439, 441, 444,
	440, 442, 443, 445, 458, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 460, 0, 459,
	1217, 461, 462, 463, 464, 470, 472, 473, 468, 469,
	471, 474, 475, 466, 467, 1218, 476, 465, 1100, 279,
	1219, 477, 478, 1123, 1171, 479, 1185, 481, 482, 0,
	0, 483, 0, 1105, 0, 485, 486, 487, 0, 0,
	488, 489, 672, 1220, 490, 1221, 1200, 491, 492, 1110,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 0,
	502, 503, 674, 504, 505, 506, 675, 507, 508, 509,
	1201, 510, 677, 511, 512, 0, 513, 514, 0, 515,
	516, 517, 518, 519, 520, 521, 1181, 522, 523, 525,
	524, 526, 0, 527, 0, 528, 529, 530, 0, 0,
	0, 0, 0, 531, 0, 533, 534, 535, 536, 532,
	537, 538, 539, 540, 541, 0, 542, 543, 544, 1222,
	545, 546, 547, 548, 549, 1111, 550, 0, 551, 552,
	558, 559, 560, 553, 554, 561, 562, 563, 564, 565,
	0, 567, 568, 566, 569, 570, 571, 1164, 572, 573,
	555, 556, 574, 575, 1223, 576, 577, 578, 579, 580,
	581, 582, 1179, 0, 583, 0, 584, 585, 586, 588,
	557, 589, 594, 595, 1226, 590, 591, 592, 593, 1202,
	597, 598, 0, 599, 600, 1097, 596, 587, 0, 601,
	602, 603, 604, 605, 606, 607, 364, 608, 0, 609,
	1191, 1192, 1193, 1194, 0, 618, 0, 610, 611, 612,
	1203, 613, 1204, 1121, 614, 615, 616, 617, 0, 619,
	620, 0, 1104, 621, 622, 623, 625, 626, 624, 627,
	1165, 628, 0, 0, 629, 630, 631, 689, 1188, 1225,
	0, 633, 632, 634, 692, 635, 636, 0, 0, 0,
	0, 637, 638, 693, 639, 640, 641, 1101, 0, 0,
	0, 0, 1143, 1115, 1116, 1117, 1113, 1114, 1126, 0,
	1096, 0, 0, 0, 0, 0, 0, 1094, 1095, 280,
	282, 281, 283, 284, 285, 286, 1127, 287, 288, 0,
	1125, 0, 0, 0, 1167, 1131, 0, 0, 0, 289,
	290, 1207, 291, 292, 293, 294, 295, 296, 643, 1180,
	0, 297, 1187, 298, 1186, 0, 1197, 299, 300, 301,
	302, 303, 304, 1133, 1166, 1098, 305, 1227, 1228, 650,
	0, 306, 307, 1173, 0, 1154, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	0, 327, 328, 329, 1208, 330, 331, 332, 1157, 1155,
	1156, 1163, 1159, 1158, 1162, 333, 334, 335, 336, 337,
	1190, 338, 340, 1184, 1183, 1103, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	1175, 351, 0, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 1109, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 1198, 1199, 370, 1122, 277, 0, 0,
	0, 0, 0, 371, 372, 373, 1182, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 1209, 378, 379,
	380, 1195, 1196, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 1205, 0, 1132, 391, 0, 392,
	393, 394, 395, 396, 1168, 1169, 1172, 480, 1211, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	278, 404, 405, 406, 408, 0, 1210, 407, 1177, 1178,
	0, 1138, 0, 409, 410, 1212, 1170, 1213, 411, 412,
	413, 1214, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 0, 421, 423, 422, 0, 424, 1206, 1215,
	425, 426, 1216, 0, 427, 428, 429, 430, 431, 432,
	435, 1161, 1160, 433, 434, 436, 437, 0, 438, 439,
	441, 444, 440, 442, 443, 445, 458, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 460,
	0, 459, 1217, 461, 462, 463, 464, 470, 472, 473,
	468, 469, 471, 474, 475, 466, 467, 1218, 476, 465,
	1100, 4040, 1219, 477, 478, 1123, 1171, 479, 1185, 481,
	482, 0, 0, 483, 0, 0, 0, 485, 486, 487,
	0, 0, 488, 489, 672, 1220, 490, 1221, 1200, 491,
	492, 1110, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 0, 502, 503, 674, 504, 505, 506, 675, 507,
	508, 509, 1201, 510, 677, 511, 512, 0, 513, 514,
	0, 515, 516, 517, 518, 519, 520, 521, 1181, 522,
	523, 525, 524, 526, 0, 527, 0, 528, 529, 530,
	0, 0, 0, 0, 0, 531, 0, 533, 534, 535,
	536, 532, 537, 538, 539, 540, 541, 0, 542, 543,
	544, 1222, 545, 546, 547, 548, 549, 1111, 550, 0,
	551, 552, 558, 559, 560, 553, 554, 561, 562, 563,
	564, 565, 0, 567, 568, 566, 569, 570, 571, 1164,
	572, 573, 555, 556, 574, 575, 1223, 576, 577, 578,
	579, 580, 581, 582, 1179, 0, 583, 0, 584, 585,
	586, 588, 557, 589, 594, 595, 1226, 590, 591, 592,
	593, 1202, 597, 598, 0, 599, 600, 1097, 596, 587,
	0, 601, 602, 603, 604, 605, 606, 607, 364, 608,
	0, 609, 1191, 1192, 1193, 1194, 0, 618, 0, 610,
	611, 612, 1203, 613, 1204, 1121, 614, 615, 616, 617,
	0, 619, 620, 0, 1104, 621, 622, 623, 625, 626,
	624, 627, 1165, 628, 0, 0, 629, 630, 631, 689,
	1188, 1225, 0, 633, 632, 634, 692, 635, 636, 0,
	0, 0, 0, 637, 638, 693, 639, 640, 641, 1101,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1096, 0, 0, 0, 0, 0, 0, 1094,
	1095, 1959, 0, 0, 0, 0, 0, 0, 1127, 0,
	0, 0, 1125, 1143, 1115, 1116, 1117, 1113, 1114, 1126,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	280, 282, 281, 283, 284, 285, 286, 0, 287, 288,
	0, 0, 0, 0, 0, 1167, 1131, 0, 0, 0,
	289, 290, 1207, 291, 292, 293, 294, 295, 296, 643,
	1180, 0, 297, 1187, 298, 1186, 0, 1197, 299, 300,
	301, 302, 303, 304, 1133, 1166, 1098, 305, 1227, 1228,
	650, 0, 306, 307, 1173, 0, 1154, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 1208, 330, 331, 332, 1157,
	1155, 1156, 1163, 1159, 1158, 1162, 333, 334, 335, 336,
	337, 1190, 338, 340, 1184, 1183, 1103, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 1175, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 1109, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 1198, 1199, 370, 1122, 277, 0,
	0, 0, 0, 0, 371, 372, 373, 1182, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 1209, 378,
	379, 380, 1195, 1196, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 1205, 0, 1132, 391, 0,
	392, 393, 394, 395, 396, 1168, 1169, 1172, 480, 1211,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 278, 404, 405, 406, 408, 0, 1210, 407, 1177,
	1178, 0, 1138, 0, 409, 410, 1212, 1170, 1213, 411,
	412, 413, 1214, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 1206,
	1215, 425, 426, 1216, 0, 427, 428, 429, 430, 431,
	432, 435, 1161, 1160, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 1217, 461, 462, 463, 464, 470, 472,
	473, 468, 469, 471, 474, 475, 466, 467, 1218, 476,
	465, 1100, 279, 1219, 477, 478, 1123, 1171, 479, 1185,
	481, 482, 0, 0, 483, 0, 0, 0, 485, 486,
	487, 0, 0, 488, 489, 672, 1220, 490, 1221, 1200,
	491, 492, 1110, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 0, 502, 503, 674, 504, 505, 506, 675,
	507, 508, 509, 1201, 510, 677, 511, 512, 0, 513,
	514, 0, 515, 516, 517, 518, 519, 520, 521, 1181,
	522, 523, 525, 524, 526, 0, 527, 0, 528, 529,
	530, 0, 0, 0, 0, 0, 531, 0, 533, 534,
	535, 536, 532, 537, 538, 539, 540, 541, 0, 542,
	543, 544, 1222, 545, 546, 547, 548, 549, 1111, 550,
	0, 551, 552, 558, 559, 560, 553, 554, 561, 562,
	563, 564, 565, 0, 567, 568, 566, 569, 570, 571,
	1164, 572, 573, 555, 556, 574, 575, 1223, 576, 577,
	578, 579, 580, 581, 582, 1179, 0, 583, 0, 584,
	585, 586, 588, 557, 589, 594, 595, 1226, 590, 591,
	592, 593, 1202, 597, 598, 0, 599, 600, 1097, 596,
	587, 0, 601, 602, 603, 604, 605, 606, 607, 364,
	608, 0, 609, 1191, 1192, 1193, 1194, 0, 618, 0,
	610, 611, 612, 1203, 613, 1204, 1121, 614, 615, 616,
	617, 0, 619, 620, 0, 1104, 621, 622, 623, 625,
	626, 624, 627, 1165, 628, 0, 0, 629, 630, 631,
	689, 1188, 1225, 3752, 633, 632, 634, 692, 635, 636,
	0, 0, 0, 0, 637, 638, 693, 639, 640, 641,
	1101, 0, 0, 0, 0, 1143, 1115, 1116, 1117, 1113,
	1114, 1126, 0, 1096, 0, 0, 0, 0, 0, 0,
	1094, 1095, 280, 282, 281, 283, 284, 285, 286, 1127,
	287, 288, 0, 1125, 0, 0, 0, 1167, 1131, 0,
	0, 0, 289, 290, 1207, 291, 292, 293, 294, 295,
	296, 643, 1180, 0, 297, 1187, 298, 1186, 0, 1197,
	299, 300, 301, 302, 303, 304, 1133, 1166, 1098, 305,
	1227, 1228, 650, 0, 306, 307, 1173, 0, 1154, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 1208, 330, 331,
	332, 1157, 1155, 1156, 1163, 1159, 1158, 1162, 333, 334,
	335, 336, 337, 1190, 338, 340, 1184, 1183, 1103, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 1175, 351, 0, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 1109, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 1198, 1199, 370, 1122,
	277, 0, 0, 0, 0, 0, 371, 372, 373, 1182,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	1209, 378, 379, 380, 1195, 1196, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 1205, 0, 1132,
	391, 0, 392, 393, 394, 395, 396, 1168, 1169, 1172,
	480, 1211, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 278, 404, 405, 406, 408, 0, 1210,
	407, 1177, 1178, 0, 1138, 0, 409, 410, 1212, 1170,
	1213, 411, 412, 413, 1214, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 1206, 1215, 425, 426, 1216, 0, 427, 428, 429,
	430, 431, 432, 435, 1161, 1160, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 1217, 461, 462, 463, 464,
	470, 472, 473, 468, 469, 471, 474, 475, 466, 467,
	1218, 476, 465, 1100, 279, 1219, 477, 478, 1123, 1171,
	479, 1185, 481, 482, 0, 0, 483, 0, 0, 0,
	485, 486, 487, 0, 0, 488, 489, 672, 1220, 490,
	1221, 1200, 491, 492, 1110, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 0, 502, 503, 674, 504, 505,
	506, 675, 507, 508, 509, 1201, 510, 677, 511, 512,
	0, 513, 514, 0, 515, 516, 517, 518, 519, 520,
	521, 1181, 522, 523, 525, 524, 526, 0, 527, 0,
	528, 529, 530, 0, 0, 0, 0, 0, 531, 0,
	533, 534, 535, 536, 532, 537, 538, 539, 540, 541,
	0, 542, 543, 544, 1222, 545, 546, 547, 548, 549,
	1111, 550, 0, 551, 552, 558, 559, 560, 553, 554,
	561, 562, 563, 564, 565, 0, 567, 568, 566, 569,
	570, 571, 1164, 572, 573, 555, 556, 574, 575, 1223,
	576, 577, 578, 579, 580, 581, 582, 1179, 0, 583,
	0, 584, 585, 586, 588, 557, 589, 594, 595, 1226,
	590, 591, 592, 593, 1202, 597, 598, 0, 599, 600,
	1097, 596, 587, 0, 601, 602, 603, 604, 605, 606,
	607, 364, 608, 0, 609, 1191, 1192, 1193, 1194, 0,
	618, 0, 610, 611, 612, 1203, 613, 1204, 1121, 614,
	615, 616, 617, 0, 619, 620, 0, 1104, 621, 622,
	623, 625, 626, 624, 627, 1165, 628, 0, 0, 629,
	630, 631, 689, 1188, 1225, 0, 633, 632, 634, 692,
	635, 636, 0, 0, 0, 0, 637, 638, 693, 639,
	640, 641, 1101, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1096, 0, 0, 0, 0,
	0, 0, 1094, 1095, 1959, 0, 0, 0, 0, 0,
	0, 1127, 0, 0, 0, 1125, 1143, 1115, 1116, 1117,
	1113, 1114, 1126, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 280, 282, 281, 283, 284, 285, 286,
	0, 287, 288, 0, 0, 0, 0, 0, 1167, 1131,
	0, 0, 0, 289, 290, 1207, 291, 292, 293, 294,
	295, 296, 643, 1180, 0, 297, 1187, 298, 1186, 0,
	1197, 299, 300, 301, 302, 303, 304, 1133, 1166, 1098,
	305, 1227, 1228, 650, 0, 306, 307, 1173, 0, 1154,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 1208, 330,
	331, 332, 1157, 1155, 1156, 1163, 1159, 1158, 1162, 333,
	334, 335, 336, 337, 1190, 338, 340, 1184, 1183, 1103,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 1175, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 1109, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 1198, 1199, 370,
	1122, 277, 0, 0, 0, 0, 0, 371, 372, 373,
	1182, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	2740, 1209, 378, 379, 380, 1195, 1196, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 1205, 0,
	1132, 391, 0, 392, 393, 394, 395, 396, 1168, 1169,
	1172, 480, 1211, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 278, 404, 405, 406, 408, 0,
	1210, 407, 1177, 1178, 0, 1138, 0, 409, 410, 1212,
	1170, 1213, 411, 412, 413, 1214, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 0, 421, 423, 422,
	0, 424, 1206, 1215, 425, 426, 1216, 0, 427, 428,
	429, 430, 431, 432, 435, 1161, 1160, 433, 434, 436,
	437, 0, 438, 439, 441, 444, 440, 442, 443, 445,
	458, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 459, 1217, 461, 462, 463,
	464, 470, 472, 473, 468, 469, 471, 474, 475, 466,
	467, 1218, 476, 465, 1100, 279, 1219, 477, 478, 1123,
	1171, 479, 1185, 481, 482, 0, 0, 483, 0, 0,
	0, 485, 486, 487, 0, 0, 488, 489, 672, 1220,
	490, 1221, 1200, 491, 492, 1110, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 0, 502, 503, 674, 504,
	505, 506, 675, 507, 508, 509, 1201, 510, 677, 511,
	512, 0, 513, 514, 0, 515, 516, 517, 518, 519,
	520, 521, 1181, 522, 523, 525, 524, 526, 0, 527,
	0, 528, 529, 530, 0, 0, 0, 0, 0, 531,
	0, 533, 534, 535, 536, 532, 537, 538, 539, 540,
	541, 0, 542, 543, 544, 1222, 545, 546, 547, 548,
	549, 1111, 550, 0, 551, 552, 558, 559, 560, 553,
	554, 561, 562, 563, 564, 565, 0, 567, 568, 566,
	569, 570, 571, 1164, 572, 573, 555, 556, 574, 575,
	1223, 576, 577, 578, 579, 580, 581, 582, 1179, 0,
	583, 0, 584, 585, 586, 588, 557, 589, 594, 595,
	1226, 590, 591, 592, 593, 1202, 597, 598, 0, 599,
	600, 1097, 596, 587, 0, 601, 602, 603, 604, 605,
	606, 607, 364, 608, 0, 609, 1191, 1192, 1193, 1194,
	0, 618, 0, 610, 611, 612, 1203, 613, 1204, 1121,
	614, 615, 616, 617, 0, 619, 620, 0, 1104, 621,
	622, 623, 625, 626, 624, 627, 1165, 628, 0, 0,
	629, 630, 631, 689, 1188, 1225, 0, 633, 632, 634,
	692, 635, 636, 0, 0, 0, 0, 637, 638, 693,
	639, 640, 641, 1101, 0, 0, 0, 0, 1143, 1115,
	1116, 1117, 1113, 1114, 1126, 0, 1096, 0, 0, 0,
	0, 0, 0, 1094, 1095, 280, 282, 281, 283, 284,
	285, 286, 1127, 287, 288, 0, 1125, 0, 0, 0,
	1167, 1131, 0, 0, 0, 289, 290, 1207, 291, 292,
	293, 294, 295, 296, 643, 1180, 0, 297, 1187, 298,
	1186, 0, 1197, 299, 300, 301, 302, 303, 304, 1133,
	1166, 1098, 305, 1227, 1228, 650, 0, 306, 307, 1173,
	0, 1154, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	1208, 330, 331, 332, 1157, 1155, 1156, 1163, 1159, 1158,
	1162, 333, 334, 335, 336, 337, 1190, 338, 340, 1184,
	1183, 1103, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 1175, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 1109, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 1198,
	1199, 370, 1122, 277, 0, 0, 0, 0, 0, 371,
	372, 373, 1182, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 1209, 378, 379, 380, 1195, 1196, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	1205, 0, 1132, 391, 0, 392, 393, 394, 395, 396,
	1168, 1169, 1172, 480, 1211, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 278, 404, 405, 406,
	408, 0, 1210, 407, 1177, 1178, 0, 1138, 0, 409,
	410, 1212, 1170, 1213, 411, 412, 413, 1214, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 0, 421,
	423, 422, 0, 424, 1206, 1215, 425, 426, 1216, 0,
	427, 428, 429, 430, 431, 432, 435, 1161, 1160, 433,
	434, 436, 437, 0, 438, 439, 441, 444, 440, 442,
	443, 445, 458, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 0, 459, 1217, 461,
	462, 463, 464, 470, 472, 473, 468, 469, 471, 474,
	475, 466, 467, 1218, 476, 465, 1100, 279, 1219, 477,
	478, 1123, 1171, 479, 1185, 481, 482, 0, 0, 483,
	0, 0, 0, 485, 486, 487, 0, 0, 488, 489,
	672, 1220, 490, 1221, 1200, 491, 492, 1110, 493, 494,
	495, 496, 497, 498, 499, 500, 501, 0, 502, 503,
	674, 504, 505, 506, 675, 507, 508, 509, 1201, 510,
	677, 511, 512, 0, 513, 514, 0, 515, 516, 517,
	518, 519, 520, 521, 1181, 522, 523, 525, 524, 526,
	0, 527, 0, 528, 529, 530, 0, 0, 0, 0,
	0, 531, 0, 533, 534, 535, 536, 532, 537, 538,
	539, 540, 541, 0, 542, 543, 544, 1222, 545, 546,
	547, 548, 549, 1111, 550, 0, 551, 552, 558, 559,
	560, 553, 554, 561, 562, 563, 564, 565, 0, 567,
	568, 566, 569, 570, 571, 1164, 572, 573, 555, 556,
	574, 575, 1223, 576, 577, 578, 579, 580, 581, 582,
	1179, 0, 583, 0, 584, 585, 586, 588, 557, 589,
	594, 595, 1226, 590, 591, 592, 593, 1202, 597, 598,
	0, 599, 600, 1097, 596, 587, 0, 601, 602, 603,
	604, 605, 606, 607, 364, 608, 0, 609, 1191, 1192,
	1193, 1194, 0, 618, 0, 610, 611, 612, 1203, 613,
	1204, 1121, 614, 615, 616, 617, 0, 619, 620, 0,
	1104, 621, 622, 623, 625, 626, 624, 627, 1165, 628,
	0, 0, 629, 630, 631, 689, 1188, 1225, 0, 633,
	632, 634, 692, 635, 636, 0, 0, 0, 0, 637,
	638, 693, 639, 640, 641, 1101, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1096, 0,
	0, 0, 0, 0, 0, 1094, 1095, 0, 0, 0,
	0, 0, 0, 0, 1127, 1888, 0, 2745, 1125, 1143,
	1115, 1116, 1117, 1113, 1114, 1126, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 280, 282, 281, 283,
	284, 285, 286, 0, 287, 288, 0, 0, 0, 0,
	0, 1167, 1131, 0, 0, 0, 289, 290, 1207, 291,
	292, 293, 294, 295, 296, 643, 1180, 0, 297, 1187,
	298, 1186, 0, 1197, 299, 300, 301, 302, 303, 304,
	1133, 1166, 1098, 305, 1227, 1228, 650, 0, 306, 307,
	1173, 0, 1154, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 1208, 330, 331, 332, 1157, 1155, 1156, 1163, 1159,
	1158, 1162, 333, 334, 335, 336, 337, 1190, 338, 340,
	1184, 1183, 1103, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 1175, 351, 0,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 1109,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	1198, 1199, 370, 1122, 277, 0, 0, 0, 0, 0,
	371, 372, 373, 1182, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 1209, 378, 379, 380, 1195, 1196,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 1205, 0, 1132, 391, 0, 392, 393, 394, 395,
	396, 1168, 1169, 1172, 480, 1211, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 278, 404, 405,
	406, 408, 0, 1210, 407, 1177, 1178, 0, 1138, 0,
	409, 410, 1212, 1170, 1213, 411, 412, 413, 1214, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 1206, 1215, 425, 426, 1216,
	0, 427, 428, 429, 430, 431, 432, 435, 1161, 1160,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 1217,
	461, 462, 463, 464, 470, 472, 473, 468, 469, 471,
	474, 475, 466, 467, 1218, 476, 465, 1100, 279, 1219,
	477, 478, 1123, 1171, 479, 1185, 481, 482, 0, 0,
	483, 0, 0, 0, 485, 486, 487, 0, 0, 488,
	489, 672, 1220, 490, 1221, 1200, 491, 492, 1110, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 0, 502,
	503, 674, 504, 505, 506, 675, 507, 508, 509, 1201,
	510, 677, 511, 512, 0, 513, 514, 0, 515, 516,
	517, 518, 519, 520, 521, 1181, 522, 523, 525, 524,
	526, 0, 527, 0, 528, 529, 530, 0, 0, 0,
	0, 0, 531, 0, 533, 534, 535, 536, 532, 537,
	538, 539, 540, 541, 0, 542, 543, 544, 1222, 545,
	546, 547, 548, 549, 1111, 550, 0, 551, 552, 558,
	559, 560, 553, 554, 561, 562, 563, 564, 565, 0,
	567, 568, 566, 569, 570, 571, 1164, 572, 573, 555,
	556, 574, 575, 1223, 576, 577, 578, 579, 580, 581,
	582, 1179, 0, 583, 0, 584, 585, 586, 588, 557,
	589, 594, 595, 1226, 590, 591, 592, 593, 1202, 597,
	598, 0, 599, 600, 1097, 596, 587, 0, 601, 602,
	603, 604, 605, 606, 607, 364, 608, 0, 609, 1191,
	1192, 1193, 1194, 0, 618, 0, 610, 611, 612, 1203,
	613, 1204, 1121, 614, 615, 616, 617, 0, 619, 620,
	0, 1104, 621, 622, 623, 625, 626, 624, 627, 1165,
	628, 0, 0, 629, 630, 631, 689, 1188, 1225, 0,
	633, 632, 634, 692, 635, 636, 0, 0, 0, 0,
	637, 638, 693, 639, 640, 641, 1101, 0, 0, 2743,
	0, 1143, 1115, 1116, 1117, 1113, 1114, 1126, 0, 1096,
	0, 0, 0, 0, 0, 0, 1094, 1095, 280, 282,
	281, 283, 284, 285, 286, 1127, 287, 288, 0, 1125,
	0, 0, 0, 1167, 1131, 0, 0, 0, 289, 290,
	1207, 291, 292, 293, 294, 295, 296, 643, 1180, 0,
	297, 1187, 298, 1186, 0, 1197, 299, 300, 301, 302,
	303, 304, 1133, 1166, 1098, 305, 1227, 1228, 650, 0,
	306, 307, 1173, 0, 1154, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 0, 316, 317, 318, 315, 319,
	0, 320, 0, 321, 322, 323, 324, 325, 326, 0,
	327, 328, 329, 1208, 330, 331, 332, 1157, 1155, 1156,
	1163, 1159, 1158, 1162, 333, 334, 335, 336, 337, 1190,
	338, 340, 1184, 1183, 1103, 343, 339, 341, 0, 344,
	342, 345, 0, 346, 347, 348, 0, 0, 349, 1175,
	351, 0, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 1109, 359, 360, 361, 363, 365, 362, 366, 367,
	368, 369, 1198, 1199, 370, 1122, 277, 0, 0, 0,
	0, 0, 371, 372, 373, 1182, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 1209, 378, 379, 380,
	1195, 1196, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 1205, 0, 1132, 391, 0, 392, 393,
	394, 395, 396, 1168, 1169, 1172, 480, 1211, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 278,
	404, 405, 406, 408, 0, 1210, 407, 1177, 1178, 0,
	1138, 0, 409, 410, 1212, 1170, 1213, 411, 412, 413,
	1214, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 0, 421, 423, 422, 0, 424, 1206, 1215, 425,
	426, 1216, 0, 427, 428, 429, 430, 431, 432, 435,
	1161, 1160, 433, 434, 436, 437, 0, 438, 439, 441,
	444, 440, 442, 443, 445, 458, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 460, 0,
	459, 1217, 461, 462, 463, 464, 470, 472, 473, 468,
	469, 471, 474, 475, 466, 467, 1218, 476, 465, 1100,
	279, 1219, 477, 478, 1123, 1171, 479, 1185, 481, 482,
	0, 0, 483, 0, 0, 0, 485, 486, 487, 0,
	0, 488, 489, 672, 1220, 490, 1221, 1200, 491, 492,
	1110, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	0, 502, 503, 674, 504, 505, 506, 675, 507, 508,
	509, 1201, 510, 677, 511, 512, 0, 513, 514, 0,
	515, 516, 517, 518, 519, 520, 521, 1181, 522, 523,
	525, 524, 526, 0, 527, 0, 528, 529, 530, 0,
	0, 0, 0, 0, 531, 0, 533, 534, 535, 536,
	532, 537, 538, 539, 540, 541, 0, 542, 543, 544,
	1222, 545, 546, 547, 548, 549, 1111, 550, 0, 551,
	552, 558, 559, 560, 553, 554, 561, 562, 563, 564,
	565, 0, 567, 568, 566, 569, 570, 571, 1164, 572,
	573, 555, 556, 574, 575, 1223, 576, 577, 578, 579,
	580, 581, 582, 1179, 0, 583, 0, 584, 585, 586,
	588, 557, 589, 594, 595, 1226, 590, 591, 592, 593,
	1202, 597, 598, 0, 599, 600, 1097, 596, 587, 0,
	601, 602, 603, 604, 605, 606, 607, 364, 608, 0,
	609, 1191, 1192, 1193, 1194, 0, 618, 0, 610, 611,
	612, 1203, 613, 1204, 1121, 614, 615, 616, 617, 0,
	619, 620, 0, 1104, 621, 622, 623, 625, 626, 624,
	627, 1165, 628, 0, 0, 629, 630, 631, 689, 1188,
	1225, 0, 633, 632, 634, 692, 635, 636, 0, 0,
	0, 0, 637, 638, 693, 639, 640, 641, 1101, 0,
	0, 2731, 0, 1143, 1115, 1116, 1117, 1113, 1114, 1126,
	0, 1096, 0, 0, 0, 0, 0, 0, 1094, 1095,
	280, 282, 281, 283, 284, 285, 286, 1127, 287, 288,
	0, 1125, 0, 0, 0, 1167, 1131, 0, 0, 0,
	289, 290, 1207, 291, 292, 293, 294, 295, 296, 643,
	1180, 0, 297, 1187, 298, 1186, 0, 1197, 299, 300,
	301, 302, 303, 304, 1133, 1166, 1098, 305, 1227, 1228,
	650, 0, 306, 307, 1173, 0, 1154, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 1208, 330, 331, 332, 1157,
	1155, 1156, 1163, 1159, 1158, 1162, 333, 334, 335, 336,
	337, 1190, 338, 340, 1184, 1183, 1103, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 1175, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 1109, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 1198, 1199, 370, 1122, 277, 0,
	0, 0, 0, 0, 371, 372, 373, 1182, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 1209, 378,
	379, 380, 1195, 1196, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 1205, 0, 1132, 391, 0,
	392, 393, 394, 395, 396, 1168, 1169, 1172, 480, 1211,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 278, 404, 405, 406, 408, 0, 1210, 407, 1177,
	1178, 0, 1138, 0, 409, 410, 1212, 1170, 1213, 411,
	412, 413, 1214, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 1206,
	1215, 425, 426, 1216, 0, 427, 428, 429, 430, 431,
	432, 435, 1161, 1160, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 1217, 461, 462, 463, 464, 470, 472,
	473, 468, 469, 471, 474, 475, 466, 467, 1218, 476,
	465, 1100, 279, 1219, 477, 478, 1123, 1171, 479, 1185,
	481, 482, 0, 0, 483, 0, 0, 0, 485, 486,
	487, 0, 0, 488, 489, 672, 1220, 490, 1221, 1200,
	491, 492, 1110, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 0, 502, 503, 674, 504, 505, 506, 675,
	507, 508, 509, 1201, 510, 677, 511, 512, 0, 513,
	514, 0, 515, 516, 517, 518, 519, 520, 521, 1181,
	522, 523, 525, 524, 526, 0, 527, 0, 528, 529,
	530, 0, 0, 0, 0, 0, 531, 0, 533, 534,
	535, 536, 532, 537, 538, 539, 540, 541, 0, 542,
	543, 544, 1222, 545, 546, 547, 548, 549, 1111, 550,
	0, 551, 552, 558, 559, 560, 553, 554, 561, 562,
	563, 564, 565, 0, 567, 568, 566, 569, 570, 571,
	1164, 572, 573, 555, 556, 574, 575, 1223, 576, 577,
	578, 579, 580, 581, 582, 1179, 0, 583, 0, 584,
	585, 586, 588, 557, 589, 594, 595, 1226, 590, 591,
	592, 593, 1202, 597, 598, 0, 599, 600, 1097, 596,
	587, 0, 601, 602, 603, 604, 605, 606, 607, 364,
	608, 0, 609, 1191, 1192, 1193, 1194, 0, 618, 0,
	610, 611, 612, 1203, 613, 1204, 1121, 614, 615, 616,
	617, 0, 619, 620, 0, 1104, 621, 622, 623, 625,
	626, 624, 627, 1165, 628, 0, 0, 629, 630, 631,
	689, 1188, 1225, 0, 633, 632, 634, 692, 635, 636,
	0, 0, 0, 0, 637, 638, 693, 639, 640, 641,
	1101, 0, 0, 2719, 0, 1143, 1115, 1116, 1117, 1113,
	1114, 1126, 0, 1096, 0, 0, 0, 0, 0, 0,
	1094, 1095, 280, 282, 281, 283, 284, 285, 286, 1127,
	287, 288, 0, 1125, 0, 0, 0, 1167, 1131, 0,
	0, 0, 289, 290, 1207, 291, 292, 293, 294, 295,
	296, 643, 1180, 0, 297, 1187, 298, 1186, 0, 1197,
	299, 300, 301, 302, 303, 304, 1133, 1166, 1098, 305,
	1227, 1228, 650, 0, 306, 307, 1173, 0, 1154, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 1208, 330, 331,
	332, 1157, 1155, 1156, 1163, 1159, 1158, 1162, 333, 334,
	335, 336, 337, 1190, 338, 340, 1184, 1183, 1103, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 1175, 351, 0, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 1109, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 1198, 1199, 370, 1122,
	277, 0, 0, 0, 0, 0, 371, 372, 373, 1182,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	1209, 378, 379, 380, 1195, 1196, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 1205, 0, 1132,
	391, 0, 392, 393, 394, 395, 396, 1168, 1169, 1172,
	480, 1211, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 278, 404, 405, 406, 408, 0, 1210,
	407, 1177, 1178, 0, 1138, 0, 409, 410, 1212, 1170,
	1213, 411, 412, 413, 1214, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 1206, 1215, 425, 426, 1216, 0, 427, 428, 429,
	430, 431, 432, 435, 1161, 1160, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 1217, 461, 462, 463, 464,
	470, 472, 473, 468, 469, 471, 474, 475, 466, 467,
	1218, 476, 465, 1100, 279, 1219, 477, 478, 1123, 1171,
	479, 1185, 481, 482, 0, 0, 483, 0, 0, 0,
	485, 486, 487, 0, 0, 488, 489, 672, 1220, 490,
	1221, 1200, 491, 492, 1110, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 0, 502, 503, 674, 504, 505,
	506, 675, 507, 508, 509, 1201, 510, 677, 511, 512,
	0, 513, 514, 0, 515, 516, 517, 518, 519, 520,
	521, 1181, 522, 523, 525, 524, 526, 0, 527, 0,
	528, 529, 530, 0, 0, 0, 0, 0, 531, 0,
	533, 534, 535, 536, 532, 537, 538, 539, 540, 541,
	0, 542, 543, 544, 1222, 545, 546, 547, 548, 549,
	1111, 550, 0, 551, 552, 558, 559, 560, 553, 554,
	561, 562, 563, 564, 565, 0, 567, 568, 566, 569,
	570, 571, 1164, 572, 573, 555, 556, 574, 575, 1223,
	576, 577, 578, 579, 580, 581, 582, 1179, 0, 583,
	0, 584, 585, 586, 588, 557, 589, 594, 595, 1226,
	590, 591, 592, 593, 1202, 597, 598, 0, 599, 600,
	1097, 596, 587, 0, 601, 602, 603, 604, 605, 606,
	607, 364, 608, 0, 609, 1191, 1192, 1193, 1194, 0,
	618, 0, 610, 611, 612, 1203, 613, 1204, 1121, 614,
	615, 616, 617, 0, 619, 620, 0, 1104, 621, 622,
	623, 625, 626, 624, 627, 1165, 628, 0, 0, 629,
	630, 631, 689, 1188, 1225, 0, 633, 632, 634, 692,
	635, 636, 0, 0, 0, 0, 637, 638, 693, 639,
	640, 641, 1101, 0, 0, 2717, 0, 2708, 2715, 1116,
	1117, 1113, 1114, 1126, 0, 1096, 0, 0, 0, 0,
	0, 0, 1094, 1095, 280, 282, 281, 283, 284, 285,
	286, 1127, 287, 288, 0, 1125, 0, 0, 0, 1167,
	1131, 0, 0, 0, 289, 290, 1207, 291, 292, 293,
	294, 295, 296, 643, 1180, 0, 297, 1187, 298, 1186,
	0, 1197, 299, 300, 301, 302, 303, 304, 1133, 1166,
	1098, 305, 1227, 1228, 650, 0, 306, 307, 1173, 0,
	1154, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 1208,
	330, 331, 332, 1157, 1155, 1156, 1163, 1159, 1158, 1162,
	333, 334, 335, 336, 337, 1190, 2711, 340, 1184, 1183,
	1103, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 1175, 351, 0, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 1109, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 1198, 1199,
	370, 1122, 277, 0, 0, 0, 0, 0, 371, 372,
	373, 1182, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 1209, 378, 379, 380, 1195, 1196, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 1205,
	0, 1132, 391, 0, 392, 393, 394, 2712, 396, 1168,
	1169, 1172, 480, 1211, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 278, 404, 405, 406, 408,
	0, 1210, 407, 1177, 1178, 0, 1138, 0, 409, 410,
	1212, 1170, 1213, 411, 412, 413, 1214, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 0, 424, 1206, 1215, 425, 426, 1216, 0, 427,
	428, 429, 430, 431, 432, 435, 1161, 1160, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 2713,
	445, 2710, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 459, 1217, 461, 462,
	463, 464, 470, 472, 473, 468, 469, 471, 474, 475,
	466, 467, 1218, 476, 465, 1100, 279, 1219, 477, 478,
	1123, 1171, 479, 1185, 481, 482, 0, 0, 483, 0,
	0, 0, 485, 486, 487, 0, 0, 488, 489, 672,
	1220, 490, 1221, 1200, 491, 492, 1110, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 0, 502, 503, 674,
	504, 505, 506, 675, 507, 508, 509, 1201, 510, 677,
	511, 512, 0, 513, 514, 0, 515, 516, 517, 518,
	519, 520, 521, 1181, 522, 523, 525, 524, 526, 0,
	527, 0, 528, 529, 530, 0, 0, 0, 0, 0,
	531, 0, 533, 534, 535, 536, 532, 537, 538, 539,
	540, 541, 0, 542, 543, 544, 1222, 545, 546, 547,
	548, 549, 1111, 550, 0, 551, 552, 558, 559, 560,
	553, 554, 561, 562, 563, 564, 2714, 0, 567, 568,
	566, 569, 570, 571, 1164, 572, 573, 555, 556, 574,
	575, 1223, 576, 577, 578, 579, 580, 581, 582, 1179,
	0, 583, 0, 584, 585, 586, 588, 557, 589, 594,
	595, 1226, 590, 591, 592, 593, 1202, 597, 598, 0,
	599, 600, 1097, 596, 587, 0, 601, 602, 603, 604,
	605, 606, 607, 364, 608, 0, 609, 1191, 1192, 1193,
	1194, 0, 618, 0, 610, 611, 612, 1203, 613, 1204,
	1121, 614, 615, 616, 617, 0, 619, 620, 0, 1104,
	621, 622, 623, 625, 626, 624, 627, 1165, 628, 0,
	0, 629, 630, 631, 689, 1188, 1225, 0, 633, 632,
	634, 692, 635, 636, 0, 0, 0, 0, 637, 638,
	693, 639, 2709, 641, 1101, 0, 0, 2705, 0, 2708,
	2715, 1116, 1117, 1113, 1114, 1126, 0, 1096, 0, 0,
	0, 0, 0, 0, 1094, 1095, 280, 282, 281, 283,
	284, 285, 286, 1127, 287, 288, 0, 1125, 0, 0,
	0, 1167, 1131, 0, 0, 0, 289, 290, 1207, 291,
	292, 293, 294, 295, 296, 643, 1180, 0, 297, 1187,
	298, 1186, 0, 1197, 299, 300, 301, 302, 303, 304,
	1133, 1166, 1098, 305, 1227, 1228, 650, 0, 306, 307,
	1173, 0, 1154, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 1208, 330, 331, 332, 1157, 1155, 1156, 1163, 1159,
	1158, 1162, 333, 334, 335, 336, 337, 1190, 2711, 340,
	1184, 1183, 1103, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 1175, 351, 0,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 1109,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	1198, 1199, 370, 1122, 277, 0, 0, 0, 0, 0,
	371, 372, 373, 1182, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 1209, 378, 379, 380, 1195, 1196,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 1205, 0, 1132, 391, 0, 392, 393, 394, 2712,
	396, 1168, 1169, 1172, 480, 1211, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 278, 404, 405,
	406, 408, 0, 1210, 407, 1177, 1178, 0, 1138, 0,
	409, 410, 1212, 1170, 1213, 411, 412, 413, 1214, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 1206, 1215, 425, 426, 1216,
	0, 427, 428, 429, 430, 431, 432, 435, 1161, 1160,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 2713, 445, 2710, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 1217,
	461, 462, 463, 464, 470, 472, 473, 468, 469, 471,
	474, 475, 466, 467, 1218, 476, 465, 1100, 279, 1219,
	477, 478, 1123, 1171, 479, 1185, 481, 482, 0, 0,
	483, 0, 0, 0, 485, 486, 487, 0, 0, 488,
	489, 672, 1220, 490, 1221, 1200, 491, 492, 1110, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 0, 502,
	503, 674, 504, 505, 506, 675, 507, 508, 509, 1201,
	510, 677, 511, 512, 0, 513, 514, 0, 515, 516,
	517, 518, 519, 520, 521, 1181, 522, 523, 525, 524,
	526, 0, 527, 0, 528, 529, 530, 0, 0, 0,
	0, 0, 531, 0, 533, 534, 535, 536, 532, 537,
	538, 539, 540, 541, 0, 542, 543, 544, 1222, 545,
	546, 547, 548, 549, 1111, 550, 0, 551, 552, 558,
	559, 560, 553, 554, 561, 562, 563, 564, 2714, 0,
	567, 568, 566, 569, 570, 571, 1164, 572, 573, 555,
	556, 574, 575, 1223, 576, 577, 578, 579, 580, 581,
	582, 1179, 0, 583, 0, 584, 585, 586, 588, 557,
	589, 594, 595, 1226, 590, 591, 592, 593, 1202, 597,
	598, 0, 599, 600, 1097, 596, 587, 0, 601, 602,
	603, 604, 605, 606, 607, 364, 608, 0, 609, 1191,
	1192, 1193, 1194, 0, 618, 0, 610, 611, 612, 1203,
	613, 1204, 1121, 614, 615, 616, 617, 0, 619, 620,
	0, 1104, 621, 622, 623, 625, 626, 624, 627, 1165,
	628, 0, 0, 629, 630, 631, 689, 1188, 1225, 0,
	633, 632, 634, 692, 635, 636, 0, 0, 0, 0,
	637, 638, 693, 639, 2709, 641, 1101, 0, 0, 0,
	0, 1143, 1115, 1116, 1117, 1113, 1114, 1126, 0, 1096,
	0, 0, 0, 0, 0, 0, 1094, 1095, 280, 282,
	281, 283, 284, 285, 286, 1127, 287, 288, 0, 1125,
	0, 0, 0, 1167, 1131, 0, 0, 0, 289, 290,
	1207, 291, 292, 293, 294, 295, 296, 643, 1180, 0,
	297, 1187, 298, 1186, 0, 1197, 299, 300, 301, 302,
	303, 304, 1133, 1166, 1098, 305, 1227, 1228, 650, 0,
	306, 307, 1173, 0, 1154, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 0, 316, 317, 318, 315, 319,
	0, 320, 0, 321, 322, 323, 324, 325, 326, 0,
	327, 328, 329, 1208, 330, 331, 332, 1157, 1155, 1156,
	1163, 1159, 1158, 1162, 333, 334, 335, 336, 337, 1190,
	338, 340, 1184, 1183, 1103, 343, 339, 341, 0, 344,
	342, 345, 0, 346, 347, 348, 0, 0, 349, 1175,
	351, 0, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 1109, 359, 360, 361, 363, 365, 362, 366, 367,
	368, 369, 1198, 1199, 370, 1122, 277, 0, 0, 0,
	0, 0, 371, 372, 373, 1182, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 1209, 378, 379, 380,
	1195, 1196, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 1205, 0, 1132, 391, 0, 392, 393,
	394, 395, 396, 1168, 1169, 1172, 480, 1211, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 278,
	404, 405, 406, 408, 0, 1210, 407, 1177, 1178, 0,
	1138, 0, 409, 410, 1212, 1170, 1213, 411, 412, 413,
	1214, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 0, 421, 423, 422, 0, 424, 1206, 1215, 425,
	426, 1216, 0, 427, 428, 429, 430, 431, 432, 435,
	1161, 1160, 433, 434, 436, 437, 0, 438, 439, 441,
	444, 440, 442, 443, 445, 458, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 460, 0,
	459, 1217, 461, 462, 463, 464, 470, 472, 473, 468,
	469, 471, 474, 475, 466, 467, 1218, 476, 465, 1100,
	279, 1219, 477, 478, 1123, 1171, 479, 1185, 481, 482,
	0, 0, 483, 0, 0, 0, 485, 486, 487, 0,
	0, 488, 489, 672, 1220, 490, 1221, 1200, 491, 492,
	1110, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	0, 502, 503, 674, 504, 505, 506, 675, 507, 508,
	509, 1201, 510, 677, 511, 512, 0, 513, 514, 0,
	515, 516, 517, 518, 519, 520, 521, 1181, 522, 523,
	525, 524, 526, 0, 527, 0, 528, 529, 530, 0,
	0, 0, 0, 0, 531, 0, 533, 534, 535, 536,
	532, 537, 538, 539, 540, 541, 0, 542, 543, 544,
	1222, 545, 546, 547, 548, 549, 1111, 550, 0, 551,
	552, 558, 559, 560, 553, 554, 561, 562, 563, 564,
	565, 0, 567, 568, 566, 569, 570, 571, 1164, 572,
	573, 555, 556, 574, 575, 1223, 576, 577, 578, 579,
	580, 581, 582, 1179, 0, 583, 0, 584, 585, 586,
	588, 557, 589, 594, 595, 1226, 590, 591, 592, 593,
	1202, 597, 598, 0, 599, 600, 1097, 596, 587, 0,
	601, 602, 603, 604, 605, 606, 607, 364, 608, 0,
	609, 1191, 1192, 1193, 1194, 0, 618, 0, 610, 611,
	612, 1203, 613, 1204, 1121, 614, 615, 616, 617, 0,
	619, 620, 0, 1104, 621, 622, 623, 625, 626, 624,
	627, 1165, 628, 0, 0, 629, 630, 631, 689, 1188,
	1225, 0, 633, 632, 634, 692, 635, 636, 0, 0,
	0, 0, 637, 638, 693, 639, 640, 641, 1101, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1096, 0, 0, 0, 0, 0, 0, 1094, 1095,
	0, 0, 0, 0, 0, 1896, 0, 1127, 0, 0,
	0, 1125, 1143, 1115, 1116, 1117, 1113, 1114, 1126, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 280,
	282, 281, 283, 284, 285, 286, 2460, 287, 288, 0,
	0, 0, 0, 0, 1167, 1131, 0, 0, 0, 289,
	290, 1207, 291, 292, 293, 294, 295, 296, 643, 1180,
	0, 297, 1187, 298, 1186, 0, 1197, 299, 300, 301,
	302, 303, 304, 1133, 1166, 1098, 305, 1227, 1228, 650,
	0, 306, 307, 1173, 0, 1154, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	0, 327, 328, 329, 1208, 330, 331, 332, 1157, 1155,
	1156, 1163, 1159, 1158, 1162, 333, 334, 335, 336, 337,
	1190, 338, 340, 1184, 1183, 1103, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	1175, 351, 0, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 1109, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 1198, 1199, 370, 1122, 277, 0, 0,
	0, 0, 0, 371, 372, 373, 1182, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 1209, 378, 379,
	380, 1195, 1196, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 1205, 0, 1132, 391, 0, 392,
	393, 394, 395, 396, 1168, 1169, 1172, 480, 1211, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	278, 404, 405, 406, 408, 0, 1210, 407, 1177, 1178,
	0, 1138, 0, 409, 410, 1212, 1170, 1213, 411, 412,
	413, 1214, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 0, 421, 423, 422, 0, 424, 1206, 1215,
	425, 426, 1216, 0, 427, 428, 429, 430, 431, 432,
	435, 1161, 1160, 433, 434, 436, 437, 0, 438, 439,
	441, 444, 440, 442, 443, 445, 458, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 460,
	0, 459, 1217, 461, 462, 463, 464, 470, 472, 473,
	468, 469, 471, 474, 475, 466, 467, 1218, 476, 465,
	1100, 279, 1219, 477, 478, 1123, 1171, 479, 1185, 481,
	482, 0, 0, 483, 0, 0, 0, 485, 486, 487,
	0, 0, 488, 489, 672, 1220, 490, 1221, 1200, 491,
	492, 1110, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 0, 502, 503, 674, 504, 505, 506, 675, 507,
	508, 509, 1201, 510, 677, 511, 512, 0, 513, 514,
	0, 515, 516, 517, 518, 519, 520, 521, 1181, 522,
	523, 525, 524, 526, 0, 527, 0, 528, 529, 530,
	0, 0, 0, 0, 0, 531, 0, 533, 534, 535,
	536, 532, 537, 538, 539, 540, 541, 0, 542, 543,
	544, 1222, 545, 546, 547, 548, 549, 1111, 550, 0,
	551, 552, 558, 559, 560, 553, 554, 561, 562, 563,
	564, 565, 0, 567, 568, 566, 569, 570, 571, 1164,
	572, 573, 555, 556, 574, 575, 1223, 576, 577, 578,
	579, 580, 581, 582, 1179, 0, 583, 0, 584, 585,
	586, 588, 557, 589, 594, 595, 1226, 590, 591, 592,
	593, 1202, 597, 598, 0, 599, 600, 1097, 596, 587,
	0, 601, 602, 603, 604, 605, 606, 607, 364, 608,
	0, 609, 1191, 1192, 1193, 1194, 0, 618, 0, 610,
	611, 612, 1203, 613, 1204, 1121, 614, 615, 616, 617,
	0, 619, 620, 0, 1104, 621, 622, 623, 625, 626,
	624, 627, 1165, 628, 0, 0, 629, 630, 631, 689,
	1188, 1225, 0, 633, 632, 634, 692, 635, 636, 0,
	0, 0, 0, 637, 638, 693, 639, 640, 641, 1101,
	0, 0, 2424, 0, 1143, 1115, 1116, 1117, 1113, 1114,
	1126, 0, 1096, 0, 0, 0, 0, 0, 0, 1094,
	1095, 280, 282, 281, 283, 284, 285, 286, 1127, 287,
	288, 0, 1125, 0, 0, 0, 1167, 1131, 0, 0,
	0, 289, 290, 1207, 291, 292, 293, 294, 295, 296,
	643, 1180, 0, 297, 1187, 298, 1186, 0, 1197, 299,
	300, 301, 302, 303, 304, 1133, 1166, 1098, 305, 1227,
	1228, 650, 0, 306, 307, 1173, 0, 1154, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	325, 326, 0, 327, 328, 329, 1208, 330, 331, 332,
	1157, 1155, 1156, 1163, 1159, 1158, 1162, 333, 334, 335,
	336, 337, 1190, 338, 340, 1184, 1183, 1103, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 1175, 351, 0, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 1109, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 1198, 1199, 370, 1122, 277,
	0, 0, 0, 0, 0, 371, 372, 373, 1182, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 1209,
	378, 379, 380, 1195, 1196, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 1205, 0, 1132, 391,
	0, 392, 393, 394, 395, 396, 1168, 1169, 1172, 480,
	1211, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 278, 404, 405, 406, 408, 0, 1210, 407,
	1177, 1178, 0, 1138, 0, 409, 410, 1212, 1170, 1213,
	411, 412, 413, 1214, 414, 0, 0, 0, 415, 416,
	417, 418, 419, 420, 0, 421, 423, 422, 0, 424,
	1206, 1215, 425, 426, 1216, 0, 427, 428, 429, 430,
	431, 432, 435, 1161, 1160, 433, 434, 436, 437, 0,
	438, 439, 441, 444, 440, 442, 443, 445, 458, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 460, 0, 459, 1217, 461, 462, 463, 464, 470,
	472, 473, 468, 469, 471, 474, 475, 466, 467, 1218,
	476, 465, 1100, 279, 1219, 477, 478, 1123, 1171, 479,
	1185, 481, 482, 0, 0, 483, 0, 0, 0, 485,
	486, 487, 0, 0, 488, 489, 672, 1220, 490, 1221,
	1200, 491, 492, 1110, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 0, 502, 503, 674, 504, 505, 506,
	675, 507, 508, 509, 1201, 510, 677, 511, 512, 0,
	513, 514, 0, 515, 516, 517, 518, 519, 520, 521,
	1181, 522, 523, 525, 524, 526, 0, 527, 0, 528,
	529, 530, 0, 0, 0, 0, 0, 531, 0, 533,
	534, 535, 536, 532, 537, 538, 539, 540, 541, 0,
	542, 543, 544, 1222, 545, 546, 547, 548, 549, 1111,
	550, 0, 551, 552, 558, 559, 560, 553, 554, 561,
	562, 563, 564, 565, 0, 567, 568, 566, 569, 570,
	571, 1164, 572, 573, 555, 556, 574, 575, 1223, 576,
	577, 578, 579, 580, 581, 582, 1179, 0, 583, 0,
	584, 585, 586, 588, 557, 589, 594, 595, 1226, 590,
	591, 592, 593, 1202, 597, 598, 0, 599, 600, 1097,
	596, 587, 0, 601, 602, 603, 604, 605, 606, 607,
	364, 608, 0, 609, 1191, 1192, 1193, 1194, 0, 618,
	0, 610, 611, 612, 1203, 613, 1204, 1121, 614, 615,
	616, 617, 0, 619, 620, 0, 1104, 621, 622, 623,
	625, 626, 624, 627, 1165, 628, 0, 0, 629, 630,
	631, 689, 1188, 1225, 0, 633, 632, 634, 692, 635,
	636, 0, 0, 0, 0, 637, 638, 693, 639, 640,
	641, 1101, 0, 0, 2399, 0, 1143, 1115, 1116, 1117,
	1113, 1114, 1126, 0, 1096, 0, 0, 0, 0, 0,
	0, 1094, 1095, 280, 282, 281, 283, 284, 285, 286,
	1127, 287, 288, 0, 1125, 0, 0, 0, 1167, 1131,
	0, 0, 0, 289, 290, 1207, 291, 292, 293, 294,
	295, 296, 643, 1180, 0, 297, 1187, 298, 1186, 0,
	1197, 299, 300, 301, 302, 303, 304, 1133, 1166, 1098,
	305, 1227, 1228, 650, 0, 306, 307, 1173, 0, 1154,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 1208, 330,
	331, 332, 1157, 1155, 1156, 1163, 1159, 1158, 1162, 333,
	334, 335, 336, 337, 1190, 338, 340, 1184, 1183, 1103,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 1175, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 1109, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 1198, 1199, 370,
	1122, 277, 0, 0, 0, 0, 0, 371, 372, 373,
	1182, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 1209, 378, 379, 380, 1195, 1196, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 1205, 0,
	1132, 391, 0, 392, 393, 394, 395, 396, 1168, 1169,
	1172, 480, 1211, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 278, 404, 405, 406, 408, 0,
	1210, 407, 1177, 1178, 0, 1138, 0, 409, 410, 1212,
	1170, 1213, 411, 412, 413, 1214, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 0, 421, 423, 422,
	0, 424, 1206, 1215, 425, 426, 1216, 0, 427, 428,
	429, 430, 431, 432, 435, 1161, 1160, 433, 434, 436,
	437, 0, 438, 439, 441, 444, 440, 442, 443, 445,
	458, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 459, 1217, 461, 462, 463,
	464, 470, 472, 473, 468, 469, 471, 474, 475, 466,
	467, 1218, 476, 465, 1100, 279, 1219, 477, 478, 1123,
	1171, 479, 1185, 481, 482, 0, 0, 483, 0, 0,
	0, 485, 486, 487, 0, 0, 488, 489, 672, 1220,
	490, 1221, 1200, 491, 492, 1110, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 0, 502, 503, 674, 504,
	505, 506, 675, 507, 508, 509, 1201, 510, 677, 511,
	512, 0, 513, 514, 0, 515, 516, 517, 518, 519,
	520, 521, 1181, 522, 523, 525, 524, 526, 0, 527,
	0, 528, 529, 530, 0, 0, 0, 0, 0, 531,
	0, 533, 534, 535, 536, 532, 537, 538, 539, 540,
	541, 0, 542, 543, 544, 1222, 545, 546, 547, 548,
	549, 1111, 550, 0, 551, 552, 558, 559, 560, 553,
	554, 561, 562, 563, 564, 565, 0, 567, 568, 566,
	569, 570, 571, 1164, 572, 573, 555, 556, 574, 575,
	1223, 576, 577, 578, 579, 580, 581, 582, 1179, 0,
	583, 0, 584, 585, 586, 588, 557, 589, 594, 595,
	1226, 590, 591, 592, 593, 1202, 597, 598, 0, 599,
	600, 1097, 596, 587, 0, 601, 602, 603, 604, 605,
	606, 607, 364, 608, 0, 609, 1191, 1192, 1193, 1194,
	0, 618, 0, 610, 611, 612, 1203, 613, 1204, 1121,
	614, 615, 616, 617, 0, 619, 620, 0, 1104, 621,
	622, 623, 625, 626, 624, 627, 1165, 628, 0, 0,
	629, 630, 631, 689, 1188, 1225, 0, 633, 632, 634,
	692, 635, 636, 0, 0, 0, 0, 637, 638, 693,
	639, 640, 641, 1101, 0, 0, 1736, 0, 1143, 1115,
	1116, 1117, 1113, 1114, 1126, 0, 1096, 0, 0, 0,
	0, 0, 0, 1094, 1095, 280, 282, 281, 283, 284,
	285, 286, 1127, 287, 288, 0, 1125, 0, 0, 0,
	1167, 1131, 0, 0, 0, 289, 290, 1207, 291, 292,
	293, 294, 295, 296, 643, 1180, 0, 297, 1187, 298,
	1186, 0, 1197, 299, 300, 301, 302, 303, 304, 1133,
	1166, 1098, 305, 1227, 1228, 650, 0, 306, 307, 1173,
	0, 1154, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	1208, 330, 331, 332, 1157, 1155, 1156, 1163, 1159, 1158,
	1162, 333, 334, 335, 336, 337, 1190, 338, 340, 1184,
	1183, 1103, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 1175, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 1109, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 1198,
	1199, 370, 1122, 277, 0, 0, 0, 0, 0, 371,
	372, 373, 1182, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 1209, 378, 379, 380, 1195, 1196, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	1205, 0, 1132, 391, 0, 392, 393, 394, 395, 396,
	1168, 1169, 1172, 480, 1211, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 278, 404, 405, 406,
	408, 0, 1210, 407, 1177, 1178, 0, 1138, 0, 409,
	410, 1212, 1170, 1213, 411, 412, 413, 1214, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 0, 421,
	423, 422, 0, 424, 1206, 1215, 425, 426, 1216, 0,
	427, 428, 429, 430, 431, 432, 435, 1161, 1160, 433,
	434, 436, 437, 0, 438, 439, 441, 444, 440, 442,
	443, 445, 458, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 0, 459, 1217, 461,
	462, 463, 464, 470, 472, 473, 468, 469, 471, 474,
	475, 466, 467, 1218, 476, 465, 1100, 279, 1219, 477,
	478, 1123, 1171, 479, 1185, 481, 482, 0, 0, 483,
	0, 0, 0, 485, 486, 487, 0, 0, 488, 489,
	672, 1220, 490, 1221, 1200, 491, 492, 1110, 493, 494,
	495, 496, 497, 498, 499, 500, 501, 0, 502, 503,
	674, 504, 505, 506, 675, 507, 508, 509, 1201, 510,
	677, 511, 512, 0, 513, 514, 0, 515, 516, 517,
	518, 519, 520, 521, 1181, 522, 523, 525, 524, 526,
	0, 527, 0, 528, 529, 530, 0, 0, 0, 0,
	0, 531, 0, 533, 534, 535, 536, 532, 537, 538,
	539, 540, 541, 0, 542, 543, 544, 1222, 545, 546,
	547, 548, 549, 1111, 550, 0, 551, 552, 558, 559,
	560, 553, 554, 561, 562, 563, 564, 565, 0, 567,
	568, 566, 569, 570, 571, 1164, 572, 573, 555, 556,
	574, 575, 1223, 576, 577, 578, 579, 580, 581, 582,
	1179, 0, 583, 0, 584, 585, 586, 588, 557, 589,
	594, 595, 1226, 590, 591, 592, 593, 1202, 597, 598,
	0, 599, 600, 1097, 596, 587, 0, 601, 602, 603,
	604, 605, 606, 607, 364, 608, 0, 609, 1191, 1192,
	1193, 1194, 0, 618, 0, 610, 611, 612, 1203, 613,
	1204, 1121, 614, 615, 616, 617, 0, 619, 620, 0,
	1104, 621, 622, 623, 625, 626, 624, 627, 1165, 628,
	0, 0, 629, 630, 631, 689, 1188, 1225, 0, 633,
	632, 634, 692, 635, 636, 0, 0, 0, 0, 637,
	638, 693, 639, 640, 641, 1101, 0, 0, 1665, 0,
	1143, 1115, 1116, 1117, 1113, 1114, 1126, 0, 1096, 0,
	0, 0, 0, 0, 0, 1094, 1095, 280, 282, 281,
	283, 284, 285, 286, 1127, 287, 288, 0, 1125, 0,
	0, 0, 1167, 1131, 0, 0, 0, 289, 290, 1207,
	291, 292, 293, 294, 295, 296, 643, 1180, 0, 297,
	1187, 298, 1186, 0, 1197, 299, 300, 301, 302, 303,
	304, 1133, 1166, 1098, 305, 1227, 1228, 650, 0, 306,
	307, 1173, 0, 1154, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 1208, 330, 331, 332, 1157, 1155, 1156, 1163,
	1159, 1158, 1162, 333, 334, 335, 336, 337, 1190, 338,
	340, 1184, 1183, 1103, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 1175, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	1109, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 1198, 1199, 370, 1122, 277, 0, 0, 0, 0,
	0, 371, 372, 373, 1182, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 1209, 378, 379, 380, 1195,
	1196, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 1205, 0, 1132, 391, 0, 392, 393, 394,
	395, 396, 1168, 1169, 1172, 480, 1211, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 278, 404,
	405, 406, 408, 0, 1210, 407, 1177, 1178, 0, 1138,
	0, 409, 410, 1212, 1170, 1213, 411, 412, 413, 1214,
	414, 0, 0, 0, 415, 416, 417, 418, 419, 420,
	0, 421, 423, 422, 0, 424, 1206, 1215, 425, 426,
	1216, 0, 427, 428, 429, 430, 431, 432, 435, 1161,
	1160, 433, 434, 436, 437, 0, 438, 439, 441, 444,
	440, 442, 443, 445, 458, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 460, 0, 459,
	1217, 461, 462, 463, 464, 470, 472, 473, 468, 469,
	471, 474, 475, 466, 467, 1218, 476, 465, 1100, 279,
	1219, 477, 478, 1123, 1171, 479, 1185, 481, 482, 0,
	0, 483, 0, 0, 0, 485, 486, 487, 0, 0,
	488, 489, 672, 1220, 490, 1221, 1200, 491, 492, 1110,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 0,
	502, 503, 674, 504, 505, 506, 675, 507, 508, 509,
	1201, 510, 677, 511, 512, 0, 513, 514, 0, 515,
	516, 517, 518, 519, 520, 521, 1181, 522, 523, 525,
	524, 526, 0, 527, 0, 528, 529, 530, 0, 0,
	0, 0, 0, 531, 0, 533, 534, 535, 536, 532,
	537, 538, 539, 540, 541, 0, 542, 543, 544, 1222,
	545, 546, 547, 548, 549, 1111, 550, 0, 551, 552,
	558, 559, 560, 553, 554, 561, 562, 563, 564, 565,
	0, 567, 568, 566, 569, 570, 571, 1164, 572, 573,
	555, 556, 574, 575, 1223, 576, 577, 578, 579, 580,
	581, 582, 1179, 0, 583, 0, 584, 585, 586, 588,
	557, 589, 594, 595, 1226, 590, 591, 592, 593, 1202,
	597, 598, 0, 599, 600, 1097, 596, 587, 0, 601,
	602, 603, 604, 605, 606, 607, 364, 608, 0, 609,
	1191, 1192, 1193, 1194, 0, 618, 0, 610, 611, 612,
	1203, 613, 1204, 1121, 614, 615, 616, 617, 0, 619,
	620, 0, 1104, 621, 622, 623, 625, 626, 624, 627,
	1165, 628, 0, 0, 629, 630, 631, 689, 1188, 1225,
	0, 633, 632, 634, 692, 635, 636, 0, 0, 0,
	0, 637, 638, 693, 639, 640, 641, 1101, 0, 0,
	1660, 0, 1143, 1115, 1116, 1117, 1113, 1114, 1126, 0,
	1096, 0, 0, 0, 0, 0, 0, 1094, 1095, 280,
	282, 281, 283, 284, 285, 286, 1127, 287, 288, 0,
	1125, 0, 0, 0, 1167, 1131, 0, 0, 0, 289,
	290, 1207, 291, 292, 293, 294, 295, 296, 643, 1180,
	0, 297, 1187, 298, 1186, 0, 1197, 299, 300, 301,
	302, 303, 304, 1133, 1166, 1098, 305, 1227, 1228, 650,
	0, 306, 307, 1173, 0, 1154, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	0, 327, 328, 329, 1208, 330, 331, 332, 1157, 1155,
	1156, 1163, 1159, 1158, 1162, 333, 334, 335, 336, 337,
	1190, 338, 340, 1184, 1183, 1103, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	1175, 351, 0, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 1109, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 1198, 1199, 370, 1122, 277, 0, 0,
	0, 0, 0, 371, 372, 373, 1182, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 1209, 378, 379,
	380, 1195, 1196, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 1205, 0, 1132, 391, 0, 392,
	393, 394, 395, 396, 1168, 1169, 1172, 480, 1211, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	278, 404, 405, 406, 408, 0, 1210, 407, 1177, 1178,
	0, 1138, 0, 409, 410, 1212, 1170, 1213, 411, 412,
	413, 1214, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 0, 421, 423, 422, 0, 424, 1206, 1215,
	425, 426, 1216, 0, 427, 428, 429, 430, 431, 432,
	435, 1161, 1160, 433, 434, 436, 437, 0, 438, 439,
	441, 444, 440, 442, 443, 445, 458, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 460,
	0, 459, 1217, 461, 462, 463, 464, 470, 472, 473,
	468, 469, 471, 474, 475, 466, 467, 1218, 476, 465,
	1100, 279, 1219, 477, 478, 1123, 1171, 479, 1185, 481,
	482, 0, 0, 483, 0, 0, 0, 485, 486, 487,
	0, 0, 488, 489, 672, 1220, 490, 1221, 1200, 491,
	492, 1110, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 0, 502, 503, 674, 504, 505, 506, 675, 507,
	508, 509, 1201, 510, 677, 511, 512, 0, 513, 514,
	0, 515, 516, 517, 518, 519, 520, 521, 1181, 522,
	523, 525, 524, 526, 0, 527, 0, 528, 529, 530,
	0, 0, 0, 0, 0, 531, 0, 533, 534, 535,
	536, 532, 537, 538, 539, 540, 541, 0, 542, 543,
	544, 1222, 545, 546, 547, 548, 549, 1111, 550, 0,
	551, 552, 558, 559, 560, 553, 554, 561, 562, 563,
	564, 565, 0, 567, 568, 566, 569, 570, 571, 1164,
	572, 573, 555, 556, 574, 575, 1223, 576, 577, 578,
	579, 580, 581, 582, 1179, 0, 583, 0, 584, 585,
	586, 588, 557, 589, 594, 595, 1226, 590, 591, 592,
	593, 1202, 597, 598, 0, 599, 600, 1097, 596, 587,
	0, 601, 602, 603, 604, 605, 606, 607, 364, 608,
	0, 609, 1191, 1192, 1193, 1194, 0, 618, 0, 610,
	611, 612, 1203, 613, 1204, 1121, 614, 615, 616, 617,
	0, 619, 620, 0, 1104, 621, 622, 623, 625, 626,
	624, 627, 1165, 628, 0, 0, 629, 630, 631, 689,
	1188, 1225, 0, 633, 632, 634, 692, 635, 636, 0,
	0, 0, 0, 637, 638, 693, 639, 640, 641, 1101,
	0, 0, 1647, 0, 1143, 1115, 1116, 1117, 1113, 1114,
	1126, 0, 1096, 0, 0, 0, 0, 0, 0, 1094,
	1095, 280, 282, 281, 283, 284, 285, 286, 1127, 287,
	288, 0, 1125, 0, 0, 0, 1167, 1131, 0, 0,
	0, 289, 290, 1207, 291, 292, 293, 294, 295, 296,
	643, 1180, 0, 297, 1187, 298, 1186, 0, 1197, 299,
	300, 301, 302, 303, 304, 1133, 1166, 1098, 305, 1227,
	1228, 650, 0, 306, 307, 1173, 0, 1154, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	325, 326, 0, 327, 328, 329, 1208, 330, 331, 332,
	1157, 1155, 1156, 1163, 1159, 1158, 1162, 333, 334, 335,
	336, 337, 1190, 338, 340, 1184, 1183, 1103, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 1175, 351, 0, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 1109, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 1198, 1199, 370, 1122, 277,
	0, 0, 0, 0, 0, 371, 372, 373, 1182, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 1209,
	378, 379, 380, 1195, 1196, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 1205, 0, 1132, 391,
	0, 392, 393, 394, 395, 396, 1168, 1169, 1172, 480,
	1211, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 278, 404, 405, 406, 408, 0, 1210, 407,
	1177, 1178, 0, 1138, 0, 409, 410, 1212, 1170, 1213,
	411, 412, 413, 1214, 414, 0, 0, 0, 415, 416,
	417, 418, 419, 420, 0, 421, 423, 422, 0, 424,
	1206, 1215, 425, 426, 1216, 0, 427, 428, 429, 430,
	431, 432, 435, 1161, 1160, 433, 434, 436, 437, 0,
	438, 439, 441, 444, 440, 442, 443, 445, 458, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 460, 0, 459, 1217, 461, 462, 463, 464, 470,
	472, 473, 468, 469, 471, 474, 475, 466, 467, 1218,
	476, 465, 1100, 279, 1219, 477, 478, 1123, 1171, 479,
	1185, 481, 482, 0, 0, 483, 0, 0, 0, 485,
	486, 487, 0, 0, 488, 489, 672, 1220, 490, 1221,
	1200, 491, 492, 1110, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 0, 502, 503, 674, 504, 505, 506,
	675, 507, 508, 509, 1201, 510, 677, 511, 512, 0,
	513, 514, 0, 515, 516, 517, 518, 519, 520, 521,
	1181, 522, 523, 525, 524, 526, 0, 527, 0, 528,
	529, 530, 0, 0, 0, 0, 0, 531, 0, 533,
	534, 535, 536, 532, 537, 538, 539, 540, 541, 0,
	542, 543, 544, 1222, 545, 546, 547, 548, 549, 1111,
	550, 0, 551, 552, 558, 559, 560, 553, 554, 561,
	562, 563, 564, 565, 0, 567, 568, 566, 569, 570,
	571, 1164, 572, 573, 555, 556, 574, 575, 1223, 576,
	577, 578, 579, 580, 581, 582, 1179, 0, 583, 0,
	584, 585, 586, 588, 557, 589, 594, 595, 1226, 590,
	591, 592, 593, 1202, 597, 598, 0, 599, 600, 1097,
	596, 587, 0, 601, 602, 603, 604, 605, 606, 607,
	364, 608, 0, 609, 1191, 1192, 1193, 1194, 0, 618,
	0, 610, 611, 612, 1203, 613, 1204, 1121, 614, 615,
	616, 617, 0, 619, 620, 0, 1104, 621, 622, 623,
	625, 626, 624, 627, 1165, 628, 0, 0, 629, 630,
	631, 689, 1188, 1225, 0, 633, 632, 634, 692, 635,
	636, 0, 0, 0, 0, 637, 638, 693, 639, 640,
	641, 1101, 0, 0, 1642, 0, 1143, 1115, 1116, 1117,
	1113, 1114, 1126, 0, 1096, 0, 0, 0, 0, 0,
	0, 1094, 1095, 280, 282, 281, 283, 284, 285, 286,
	1127, 287, 288, 0, 1125, 0, 0, 0, 1167, 1131,
	0, 0, 0, 289, 290, 1207, 291, 292, 293, 294,
	295, 296, 643, 1180, 0, 297, 1187, 298, 1186, 0,
	1197, 299, 300, 301, 302, 303, 304, 1133, 1166, 1098,
	305, 1227, 1228, 650, 0, 306, 307, 1173, 0, 1154,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 1208, 330,
	331, 332, 1157, 1155, 1156, 1163, 1159, 1158, 1162, 333,
	334, 335, 336, 337, 1190, 338, 340, 1184, 1183, 1103,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 1175, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 1109, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 1198, 1199, 370,
	1122, 277, 0, 0, 0, 0, 0, 371, 372, 373,
	1182, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 1209, 378, 379, 380, 1195, 1196, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 1205, 0,
	1132, 391, 0, 392, 393, 394, 395, 396, 1168, 1169,
	1172, 480, 1211, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 278, 404, 405, 406, 408, 0,
	1210, 407, 1177, 1178, 0, 1138, 0, 409, 410, 1212,
	1170, 1213, 411, 412, 413, 1214, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 0, 421, 423, 422,
	0, 424, 1206, 1215, 425, 426, 1216, 0, 427, 428,
	429, 430, 431, 432, 435, 1161, 1160, 433, 434, 436,
	437, 0, 438, 439, 441, 444, 440, 442, 443, 445,
	458, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 459, 1217, 461, 462, 463,
	464, 470, 472, 473, 468, 469, 471, 474, 475, 466,
	467, 1218, 476, 465, 1100, 279, 1219, 477, 478, 1123,
	1171, 479, 1185, 481, 482, 0, 0, 483, 0, 0,
	0, 485, 486, 487, 0, 0, 488, 489, 672, 1220,
	490, 1221, 1200, 491, 492, 1110, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 0, 502, 503, 674, 504,
	505, 506, 675, 507, 508, 509, 1201, 510, 677, 511,
	512, 0, 513, 514, 0, 515, 516, 517, 518, 519,
	520, 521, 1181, 522, 523, 525, 524, 526, 0, 527,
	0, 528, 529, 530, 0, 0, 0, 0, 0, 531,
	0, 533, 534, 535, 536, 532, 537, 538, 539, 540,
	541, 0, 542, 543, 544, 1222, 545, 546, 547, 548,
	549, 1111, 550, 0, 551, 552, 558, 559, 560, 553,
	554, 561, 562, 563, 564, 565, 0, 567, 568, 566,
	569, 570, 571, 1164, 572, 573, 555, 556, 574, 575,
	1223, 576, 577, 578, 579, 580, 581, 582, 1179, 0,
	583, 0, 584, 585, 586, 588, 557, 589, 594, 595,
	1226, 590, 591, 592, 593, 1202, 597, 598, 0, 599,
	600, 1097, 596, 587, 0, 601, 602, 603, 604, 605,
	606, 607, 364, 608, 0, 609, 1191, 1192, 1193, 1194,
	0, 618, 0, 610, 611, 612, 1203, 613, 1204, 1121,
	614, 615, 616, 617, 0, 619, 620, 0, 1104, 621,
	622, 623, 625, 626, 624, 627, 1165, 628, 0, 0,
	629, 630, 631, 689, 1188, 1225, 0, 633, 632, 634,
	692, 635, 636, 0, 0, 0, 0, 637, 638, 693,
	639, 640, 641, 1101, 0, 0, 1551, 0, 1143, 1115,
	1116, 1117, 1113, 1114, 1126, 0, 1096, 0, 0, 0,
	0, 0, 0, 1094, 1095, 280, 282, 281, 283, 284,
	285, 286, 1127, 287, 288, 0, 1125, 0, 0, 0,
	1167, 1131, 0, 0, 0, 289, 290, 1207, 291, 292,
	293, 294, 295, 296, 643, 1180, 0, 297, 1187, 298,
	1186, 0, 1197, 299, 300, 301, 302, 303, 304, 1133,
	1166, 1098, 305, 1227, 1228, 650, 0, 306, 307, 1173,
	0, 1154, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	1208, 330, 331, 332, 1157, 1155, 1156, 1163, 1159, 1158,
	1162, 333, 334, 335, 336, 337, 1190, 338, 340, 1184,
	1183, 1103, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 1175, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 1109, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 1198,
	1199, 370, 1122, 277, 0, 0, 0, 0, 0, 371,
	372, 373, 1182, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 1209, 378, 379, 380, 1195, 1196, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	1205, 0, 1132, 391, 0, 392, 393, 394, 395, 396,
	1550, 1169, 1172, 480, 1211, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 278, 404, 405, 406,
	408, 0, 1210, 407, 1177, 1178, 0, 1138, 0, 409,
	410, 1212, 1170, 1213, 411, 412, 413, 1214, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 0, 421,
	423, 422, 0, 424, 1206, 1215, 425, 426, 1216, 0,
	427, 428, 429, 430, 431, 432, 435, 1161, 1160, 433,
	434, 436, 437, 0, 438, 439, 441, 444, 440, 442,
	443, 445, 458, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 0, 459, 1217, 461,
	462, 463, 464, 470, 472, 473, 468, 469, 471, 474,
	475, 466, 467, 1218, 476, 465, 1100, 279, 1219, 477,
	478, 1123, 1171, 479, 1185, 481, 482, 0, 0, 483,
	0, 0, 0, 485, 486, 487, 0, 0, 488, 489,
	672, 1220, 490, 1221, 1200, 491, 492, 1110, 493, 494,
	495, 496, 497, 498, 499, 500, 501, 0, 502, 503,
	674, 504, 505, 506, 675, 507, 508, 509, 1201, 510,
	677, 511, 512, 0, 513, 514, 0, 515, 516, 517,
	518, 519, 520, 521, 1181, 522, 523, 525, 524, 526,
	0, 527, 0, 528, 529, 530, 0, 0, 0, 0,
	0, 531, 0, 533, 534, 535, 536, 532, 537, 538,
	539, 540, 541, 0, 542, 543, 544, 1222, 545, 546,
	547, 548, 549, 1111, 550, 0, 551, 552, 558, 559,
	560, 553, 554, 561, 562, 563, 564, 565, 0, 567,
	568, 566, 569, 570, 571, 1164, 572, 573, 555, 556,
	574, 575, 1223, 576, 577, 578, 579, 580, 581, 582,
	1179, 0, 583, 0, 584, 585, 586, 588, 557, 589,
	594, 595, 1226, 590, 591, 592, 593, 1202, 597, 598,
	0, 599, 600, 1097, 596, 587, 0, 601, 602, 603,
	604, 605, 606, 607, 364, 608, 0, 609, 1191, 1192,
	1193, 1194, 0, 618, 0, 610, 611, 612, 1203, 613,
	1204, 1121, 614, 615, 616, 617, 0, 619, 620, 0,
	1104, 621, 622, 623, 625, 626, 624, 627, 1165, 628,
	0, 0, 629, 630, 631, 689, 1188, 1225, 0, 633,
	632, 634, 692, 635, 636, 0, 0, 0, 0, 637,
	638, 693, 639, 640, 641, 1101, 0, 0, 1545, 0,
	1143, 1115, 1116, 1117, 1113, 1114, 1126, 0, 1096, 0,
	0, 0, 0, 0, 0, 1094, 1095, 280, 282, 281,
	283, 284, 285, 286, 1127, 287, 288, 0, 1125, 0,
	0, 0, 1167, 1131, 0, 0, 0, 289, 290, 1207,
	291, 292, 293, 294, 295, 296, 643, 1180, 0, 297,
	1187, 298, 1186, 0, 1197, 299, 300, 301, 302, 303,
	304, 1133, 1166, 1098, 305, 1227, 1228, 650, 0, 306,
	307, 1173, 0, 1154, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 1208, 330, 331, 332, 1157, 1155, 1156, 1163,
	1159, 1158, 1162, 333, 334, 335, 336, 337, 1190, 338,
	340, 1184, 1183, 1103, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 1175, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	1109, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 1198, 1199, 370, 1122, 277, 0, 0, 0, 0,
	0, 371, 372, 373, 1182, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 1209, 378, 379, 380, 1195,
	1196, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 1205, 0, 1132, 391, 0, 392, 393, 394,
	395, 396, 1544, 1169, 1172, 480, 1211, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 278, 404,
	405, 406, 408, 0, 1210, 407, 1177, 1178, 0, 1138,
	0, 409, 410, 1212, 1170, 1213, 411, 412, 413, 1214,
	414, 0, 0, 0, 415, 416, 417, 418, 419, 420,
	0, 421, 423, 422, 0, 424, 1206, 1215, 425, 426,
	1216, 0, 427, 428, 429, 430, 431, 432, 435, 1161,
	1160, 433, 434, 436, 437, 0, 438, 439, 441, 444,
	440, 442, 443, 445, 458, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 460, 0, 459,
	1217, 461, 462, 463, 464, 470, 472, 473, 468, 469,
	471, 474, 475, 466, 467, 1218, 476, 465, 1100, 279,
	1219, 477, 478, 1123, 1171, 479, 1185, 481, 482, 0,
	0, 483, 0, 0, 0, 485, 486, 487, 0, 0,
	488, 489, 672, 1220, 490, 1221, 1200, 491, 492, 1110,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 0,
	502, 503, 674, 504, 505, 506, 675, 507, 508, 509,
	1201, 510, 677, 511, 512, 0, 513, 514, 0, 515,
	516, 517, 518, 519, 520, 521, 1181, 522, 523, 525,
	524, 526, 0, 527, 0, 528, 529, 530, 0, 0,
	0, 0, 0, 531, 0, 533, 534, 535, 536, 532,
	537, 538, 539, 540, 541, 0, 542, 543, 544, 1222,
	545, 546, 547, 548, 549, 1111, 550, 0, 551, 552,
	558, 559, 560, 553, 554, 561, 562, 563, 564, 565,
	0, 567, 568, 566, 569, 570, 571, 1164, 572, 573,
	555, 556, 574, 575, 1223, 576, 577, 578, 579, 580,
	581, 582, 1179, 0, 583, 0, 584, 585, 586, 588,
	557, 589, 594, 595, 1226, 590, 591, 592, 593, 1202,
	597, 598, 0, 599, 600, 1097, 596, 587, 0, 601,
	602, 603, 604, 605, 606, 607, 364, 608, 0, 609,
	1191, 1192, 1193, 1194, 0, 618, 0, 610, 611, 612,
	1203, 613, 1204, 1121, 614, 615, 616, 617, 0, 619,
	620, 0, 1104, 621, 622, 623, 625, 626, 624, 627,
	1165, 628, 0, 0, 629, 630, 631, 689, 1188, 1225,
	0, 633, 632, 634, 692, 635, 636, 0, 0, 0,
	0, 637, 638, 693, 639, 640, 641, 1101, 0, 0,
	1538, 0, 1143, 1115, 1116, 1117, 1113, 1114, 1126, 0,
	1096, 0, 0, 0, 0, 0, 0, 1094, 1095, 280,
	282, 281, 283, 284, 285, 286, 1127, 287, 288, 0,
	1125, 0, 0, 0, 1167, 1131, 0, 0, 0, 289,
	290, 1207, 291, 292, 293, 294, 295, 296, 643, 1180,
	0, 297, 1187, 298, 1186, 0, 1197, 299, 300, 301,
	302, 303, 304, 1133, 1166, 1098, 305, 1227, 1228, 650,
	0, 306, 307, 1173, 0, 1154, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	0, 327, 328, 329, 1208, 330, 331, 332, 1157, 1155,
	1156, 1163, 1159, 1158, 1162, 333, 334, 335, 336, 337,
	1190, 338, 340, 1184, 1183, 1103, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	1175, 351, 0, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 1109, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 1198, 1199, 370, 1122, 277, 0, 0,
	0, 0, 0, 371, 372, 373, 1182, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 1209, 378, 379,
	380, 1195, 1196, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 1205, 0, 1132, 391, 0, 392,
	393, 394, 395, 396, 1168, 1169, 1172, 480, 1211, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	278, 404, 405, 406, 408, 0, 1210, 407, 1177, 1178,
	0, 1138, 0, 409, 410, 1212, 1170, 1213, 411, 412,
	413, 1214, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 0, 421, 423, 422, 0, 424, 1206, 1215,
	425, 426, 1216, 0, 427, 428, 429, 430, 431, 432,
	435, 1161, 1160, 433, 434, 436, 437, 0, 438, 439,
	441, 444, 440, 442, 443, 445, 458, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 460,
	0, 459, 1217, 461, 462, 463, 464, 470, 472, 473,
	468, 469, 471, 474, 475, 466, 467, 1218, 476, 465,
	1100, 279, 1219, 477, 478, 1123, 1171, 479, 1185, 481,
	482, 0, 0, 483, 0, 0, 0, 485, 486, 487,
	0, 0, 488, 489, 672, 1220, 490, 1221, 1200, 491,
	492, 1110, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 0, 502, 503, 674, 504, 505, 506, 675, 507,
	508, 509, 1201, 510, 677, 511, 512, 0, 513, 514,
	0, 515, 516, 517, 518, 519, 520, 521, 1181, 522,
	523, 525, 524, 526, 0, 527, 0, 528, 529, 530,
	0, 0, 0, 0, 0, 531, 0, 533, 534, 535,
	536, 532, 537, 538, 539, 540, 541, 0, 542, 543,
	544, 1222, 545, 546, 547, 548, 549, 1111, 550, 0,
	551, 552, 558, 559, 560, 553, 554, 561, 562, 563,
	564, 565, 0, 567, 568, 566, 569, 570, 571, 1164,
	572, 573, 555, 556, 574, 575, 1223, 576, 577, 578,
	579, 580, 581, 582, 1179, 0, 583, 0, 584, 585,
	586, 588, 557, 589, 594, 595, 1226, 590, 591, 592,
	593, 1202, 597, 598, 0, 599, 600, 1097, 596, 587,
	0, 601, 602, 603, 604, 605, 606, 607, 364, 608,
	0, 609, 1191, 1192, 1193, 1194, 0, 618, 0, 610,
	611, 612, 1203, 613, 1204, 1121, 614, 615, 616, 617,
	0, 619, 620, 0, 1104, 621, 622, 623, 625, 626,
	624, 627, 1165, 628, 0, 0, 629, 630, 631, 689,
	1188, 1225, 0, 633, 632, 634, 692, 635, 636, 0,
	0, 0, 0, 637, 638, 693, 639, 640, 641, 1101,
	0, 0, 1354, 0, 1143, 1115, 1116, 1117, 1113, 1114,
	1126, 0, 1096, 0, 0, 0, 0, 0, 0, 1094,
	1095, 280, 282, 281, 283, 284, 285, 286, 1127, 287,
	288, 0, 1125, 0, 0, 0, 1167, 1131, 0, 0,
	0, 289, 290, 1207, 291, 292, 293, 294, 295, 296,
	643, 1180, 0, 297, 1187, 298, 1186, 0, 1197, 299,
	300, 301, 302, 303, 304, 1133, 1166, 1098, 305, 1227,
	1228, 650, 0, 306, 307, 1173, 0, 1154, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	325, 326, 0, 327, 328, 329, 1208, 330, 331, 332,
	1157, 1155, 1156, 1163, 1159, 1158, 1162, 333, 334, 335,
	336, 337, 1190, 338, 340, 1184, 1183, 1103, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 1175, 351, 0, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 1109, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 1198, 1199, 370, 1122, 277,
	0, 0, 0, 0, 0, 371, 372, 373, 1182, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 1209,
	378, 379, 380, 1195, 1196, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 1205, 0, 1132, 391,
	0, 392, 393, 394, 395, 396, 1168, 1169, 1172, 480,
	1211, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 278, 404, 405, 406, 408, 0, 1210, 407,
	1177, 1178, 0, 1138, 0, 409, 410, 1212, 1170, 1213,
	411, 412, 413, 1214, 414, 0, 0, 0, 415, 416,
	417, 418, 419, 420, 0, 421, 423, 422, 0, 424,
	1206, 1215, 425, 426, 1216, 0, 427, 428, 429, 430,
	431, 432, 435, 1161, 1160, 433, 434, 436, 437, 0,
	438, 439, 441, 444, 440, 442, 443, 445, 458, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 460, 0, 459, 1217, 461, 462, 463, 464, 470,
	472, 473, 468, 469, 471, 474, 475, 466, 467, 1218,
	476, 465, 1100, 279, 1219, 477, 478, 1123, 1171, 479,
	1185, 481, 482, 0, 0, 483, 0, 0, 0, 485,
	486, 487, 0, 0, 488, 489, 672, 1220, 490, 1221,
	1200, 491, 492, 1110, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 0, 502, 503, 674, 504, 505, 506,
	675, 507, 508, 509, 1201, 510, 677, 511, 512, 0,
	513, 514, 0, 515, 516, 517, 518, 519, 520, 521,
	1181, 522, 523, 525, 524, 526, 0, 527, 0, 528,
	529, 530, 0, 0, 0, 0, 0, 531, 0, 533,
	534, 535, 536, 532, 537, 538, 539, 540, 541, 0,
	542, 543, 544, 1222, 545, 546, 547, 548, 549, 1111,
	550, 0, 551, 552, 558, 559, 560, 553, 554, 561,
	562, 563, 564, 565, 0, 567, 568, 566, 569, 570,
	571, 1164, 572, 573, 555, 556, 574, 575, 1223, 576,
	577, 578, 579, 580, 581, 582, 1179, 0, 583, 0,
	584, 585, 586, 588, 557, 589, 594, 595, 1226, 590,
	591, 592, 593, 1202, 597, 598, 0, 599, 600, 1097,
	596, 587, 0, 601, 602, 603, 604, 605, 606, 607,
	364, 608, 0, 609, 1191, 1192, 1193, 1194, 0, 618,
	0, 610, 611, 612, 1203, 613, 1204, 1121, 614, 615,
	616, 617, 0, 619, 620, 0, 1104, 621, 622, 623,
	625, 626, 624, 627, 1165, 628, 0, 0, 629, 630,
	631, 689, 1188, 1225, 0, 633, 632, 634, 692, 635,
	636, 0, 0, 0, 0, 637, 638, 693, 639, 640,
	641, 1101, 0, 0, 0, 0, 1143, 1115, 1116, 1117,
	1113, 1114, 1126, 0, 1096, 0, 0, 0, 0, 0,
	0, 1094, 1095, 280, 282, 281, 283, 284, 285, 286,
	1127, 287, 288, 0, 1125, 0, 0, 0, 1167, 1131,
	0, 0, 0, 289, 290, 1207, 291, 292, 293, 294,
	295, 296, 643, 1180, 0, 297, 1187, 298, 1186, 0,
	1197, 299, 300, 301, 302, 303, 304, 1133, 1166, 1098,
	305, 1227, 1228, 650, 0, 306, 307, 1173, 0, 1154,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 1208, 330,
	331, 332, 1157, 1155, 1156, 1163, 1159, 1158, 1162, 333,
	334, 335, 336, 337, 1190, 338, 340, 1184, 1183, 1103,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 1175, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 1109, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 1198, 1199, 370,
	1122, 277, 0, 0, 0, 0, 0, 371, 372, 373,
	1182, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 1209, 378, 379, 380, 1195, 1196, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 1205, 0,
	1132, 391, 0, 392, 393, 394, 395, 396, 1168, 1169,
	1172, 480, 1211, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 278, 404, 405, 406, 408, 0,
	1210, 407, 1177, 1178, 0, 1138, 0, 409, 410, 1212,
	1170, 1213, 411, 412, 413, 1214, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 0, 421, 423, 422,
	0, 424, 1206, 1215, 425, 426, 1216, 0, 427, 428,
	429, 430, 431, 432, 435, 1161, 1160, 433, 434, 436,
	437, 0, 438, 439, 441, 444, 440, 442, 443, 445,
	458, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 459, 1217, 461, 462, 463,
	464, 470, 472, 473, 468, 469, 471, 474, 475, 466,
	467, 1218, 476, 465, 1100, 279, 1219, 477, 478, 1123,
	1171, 479, 1185, 481, 482, 0, 0, 483, 0, 0,
	0, 485, 486, 487, 0, 0, 488, 489, 672, 1220,
	490, 1221, 1200, 491, 492, 1110, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 0, 502, 503, 674, 504,
	505, 506, 675, 507, 508, 509, 1201, 510, 677, 511,
	512, 0, 513, 514, 0, 515, 516, 517, 518, 519,
	520, 521, 1181, 522, 523, 525, 524, 526, 0, 527,
	0, 528, 529, 530, 0, 0, 0, 0, 0, 531,
	0, 533, 534, 535, 536, 532, 537, 538, 539, 540,
	541, 0, 542, 543, 544, 1222, 545, 546, 547, 548,
	549, 1111, 550, 0, 551, 552, 558, 559, 560, 553,
	554, 561, 562, 563, 564, 565, 0, 567, 568, 566,
	569, 570, 571, 1164, 572, 573, 555, 556, 574, 575,
	1223, 576, 577, 578, 579, 580, 581, 582, 1179, 0,
	583, 0, 584, 585, 586, 588, 557, 589, 594, 595,
	1226, 590, 591, 592, 593, 1202, 597, 598, 0, 599,
	600, 1097, 596, 587, 0, 601, 602, 603, 604, 605,
	606, 607, 364, 608, 0, 609, 1191, 1192, 1193, 1194,
	0, 618, 0, 610, 611, 612, 1203, 613, 1204, 1121,
	614, 615, 616, 617, 0, 619, 620, 0, 1104, 621,
	622, 623, 625, 626, 624, 627, 1165, 628, 0, 0,
	629, 630, 631, 689, 1188, 1225, 0, 633, 632, 634,
	692, 635, 636, 0, 0, 0, 0, 637, 638, 693,
	639, 640, 641, 1101, 0, 0, 0, 0, 1143, 1115,
	1116, 1117, 1113, 1114, 1126, 0, 1096, 0, 0, 0,
	0, 0, 0, 1094, 1095, 280, 282, 281, 283, 284,
	285, 286, 1127, 287, 288, 0, 1125, 0, 0, 0,
	1167, 1131, 0, 0, 0, 289, 290, 1207, 291, 292,
	293, 294, 295, 296, 643, 1180, 0, 297, 1187, 298,
	1186, 0, 1197, 299, 300, 301, 302, 303, 304, 1133,
	1166, 1098, 305, 1227, 1228, 650, 0, 306, 307, 1173,
	0, 1154, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	1208, 330, 331, 4764, 1157, 1155, 1156, 1163, 1159, 1158,
	1162, 333, 334, 335, 336, 337, 1190, 338, 340, 1184,
	1183, 1103, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 1175, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 1109, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 1198,
	1199, 370, 1122, 277, 0, 0, 0, 0, 0, 371,
	372, 373, 1182, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 1209, 378, 379, 380, 1195, 1196, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	1205, 0, 1132, 391, 0, 392, 393, 394, 395, 396,
	1168, 1169, 1172, 480, 1211, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 278, 404, 405, 406,
	408, 0, 1210, 407, 1177, 1178, 0, 1138, 0, 409,
	410, 1212, 1170, 1213, 411, 412, 413, 1214, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 0, 421,
	423, 422, 0, 424, 1206, 1215, 425, 426, 1216, 0,
	427, 428, 429, 430, 431, 432, 435, 1161, 1160, 433,
	434, 436, 437, 0, 438, 439, 441, 444, 440, 442,
	443, 445, 458, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 0, 459, 1217, 461,
	462, 463, 464, 470, 472, 473, 468, 469, 471, 474,
	475, 466, 467, 1218, 476, 465, 1100, 279, 1219, 477,
	478, 1123, 1171, 479, 1185, 481, 482, 0, 0, 483,
	0, 0, 0, 485, 486, 487, 0, 0, 488, 489,
	672, 1220, 490, 1221, 1200, 491, 492, 1110, 493, 494,
	495, 496, 497, 498, 499, 500, 501, 0, 502, 503,
	674, 504, 505, 506, 675, 507, 508, 509, 1201, 510,
	677, 511, 512, 0, 513, 514, 0, 515, 516, 517,
	518, 519, 520, 521, 1181, 522, 523, 525, 524, 526,
	0, 527, 0, 528, 529, 530, 0, 0, 0, 0,
	0, 531, 0, 533, 534, 535, 536, 532, 537, 538,
	539, 540, 541, 0, 542, 543, 544, 1222, 545, 546,
	547, 548, 549, 1111, 550, 0, 551, 552, 558, 559,
	560, 553, 554, 561, 562, 563, 564, 565, 0, 567,
	568, 566, 569, 570, 571, 1164, 572, 573, 555, 556,
	574, 575, 1223, 576, 577, 578, 579, 580, 581, 582,
	1179, 0, 583, 0, 584, 585, 586, 588, 557, 589,
	594, 595, 1226, 590, 591, 592, 593, 1202, 597, 598,
	0, 599, 600, 1097, 596, 587, 0, 601, 602, 603,
	604, 605, 606, 607, 364, 608, 0, 609, 1191, 1192,
	1193, 1194, 0, 618, 0, 610, 611, 612, 1203, 613,
	1204, 1121, 614, 615, 616, 617, 0, 4763, 620, 0,
	1104, 621, 622, 623, 625, 626, 624, 627, 1165, 628,
	0, 0, 629, 630, 631, 689, 1188, 1225, 0, 633,
	632, 634, 692, 635, 636, 0, 0, 0, 0, 637,
	638, 693, 639, 640, 641, 1101, 0, 0, 0, 0,
	1143, 1115, 1116, 1117, 1113, 1114, 1126, 0, 1096, 0,
	0, 0, 0, 0, 0, 1094, 1095, 280, 282, 281,
	283, 284, 285, 286, 1127, 287, 288, 0, 1125, 0,
	0, 0, 1167, 1131, 0, 0, 0, 289, 290, 1207,
	291, 292, 293, 294, 295, 296, 4762, 1180, 0, 297,
	1187, 298, 1186, 0, 1197, 299, 300, 301, 302, 303,
	304, 1133, 1166, 1098, 305, 1227, 1228, 650, 0, 306,
	307, 1173, 0, 1154, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 1208, 330, 331, 4764, 1157, 1155, 1156, 1163,
	1159, 1158, 1162, 333, 334, 335, 336, 337, 1190, 338,
	340, 1184, 1183, 1103, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 1175, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	1109, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 1198, 1199, 370, 1122, 277, 0, 0, 0, 0,
	0, 371, 372, 373, 1182, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 1209, 378, 379, 380, 1195,
	1196, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 1205, 0, 1132, 391, 0, 392, 393, 394,
	395, 396, 1168, 1169, 1172, 480, 1211, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 278, 404,
	405, 406, 408, 0, 1210, 407, 1177, 1178, 0, 1138,
	0, 409, 410, 1212, 1170, 1213, 411, 412, 413, 1214,
	414, 0, 0, 0, 415, 416, 417, 418, 419, 420,
	0, 421, 423, 422, 0, 424, 1206, 1215, 425, 426,
	1216, 0, 427, 428, 429, 430, 431, 432, 435, 1161,
	1160, 433, 434, 436, 437, 0, 438, 439, 441, 444,
	440, 442, 443, 445, 458, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 460, 0, 459,
	1217, 461, 462, 463, 464, 470, 472, 473, 468, 469,
	471, 474, 475, 466, 467, 1218, 476, 465, 1100, 279,
	1219, 477, 478, 1123, 1171, 479, 1185, 481, 482, 0,
	0, 483, 0, 0, 0, 485, 486, 487, 0, 0,
	488, 489, 672, 1220, 490, 1221, 1200, 491, 492, 1110,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 0,
	502, 503, 674, 504, 505, 506, 675, 507, 508, 509,
	1201, 510, 677, 511, 512, 0, 513, 514, 0, 515,
	516, 517, 518, 519, 520, 521, 1181, 522, 523, 525,
	524, 526, 0, 527, 0, 528, 529, 530, 0, 0,
	0, 0, 0, 531, 0, 533, 534, 535, 536, 532,
	537, 538, 539, 540, 541, 0, 542, 543, 544, 1222,
	545, 546, 547, 548, 549, 1111, 550, 0, 551, 552,
	558, 559, 560, 553, 554, 561, 562, 563, 564, 565,
	0, 567, 568, 566, 569, 570, 571, 1164, 572, 573,
	555, 556, 574, 575, 1223, 576, 577, 578, 579, 580,
	581, 582, 1179, 0, 583, 0, 584, 585, 586, 588,
	557, 589, 594, 595, 1226, 590, 591, 592, 593, 1202,
	597, 598, 0, 599, 600, 1097, 596, 587, 0, 601,
	602, 603, 604, 605, 606, 607, 364, 608, 0, 609,
	1191, 1192, 1193, 1194, 0, 618, 0, 610, 611, 612,
	1203, 613, 1204, 1121, 614, 615, 616, 617, 0, 4763,
	620, 0, 1104, 621, 622, 623, 625, 626, 624, 627,
	1165, 628, 0, 0, 629, 630, 631, 689, 1188, 1225,
	0, 633, 632, 634, 692, 635, 636, 0, 0, 0,
	0, 637, 638, 693, 639, 640, 641, 1101, 0, 0,
	0, 0, 1143, 1115, 1116, 1117, 1113, 1114, 1126, 0,
	1096, 0, 0, 0, 0, 0, 0, 1094, 1095, 280,
	282, 281, 283, 284, 285, 286, 1127, 287, 288, 0,
	1125, 0, 0, 0, 1167, 1131, 0, 0, 0, 289,
	290, 1207, 291, 292, 293, 294, 295, 296, 643, 1180,
	0, 297, 1187, 298, 1186, 0, 1197, 299, 300, 301,
	302, 303, 304, 1133, 1166, 1098, 305, 1227, 1228, 650,
	0, 306, 307, 1173, 0, 1154, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	0, 327, 328, 329, 1208, 330, 4385, 332, 1157, 1155,
	1156, 1163, 1159, 1158, 1162, 333, 334, 335, 336, 337,
	1190, 338, 340, 1184, 1183, 1103, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	1175, 351, 0, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 1109, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 1198, 1199, 370, 1122, 277, 0, 0,
	0, 0, 0, 371, 372, 373, 1182, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 1209, 378, 379,
	380, 1195, 1196, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 1205, 0, 4386, 391, 0, 392,
	393, 394, 395, 396, 1168, 1169, 1172, 480, 1211, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	278, 404, 405, 406, 408, 0, 1210, 407, 1177, 1178,
	0, 1138, 0, 409, 410, 1212, 1170, 1213, 411, 412,
	413, 1214, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 0, 421, 423, 422, 0, 424, 1206, 1215,
	425, 426, 1216, 0, 427, 428, 429, 430, 431, 432,
	435, 1161, 1160, 433, 434, 436, 437, 0, 438, 439,
	441, 444, 440, 442, 443, 445, 458, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 460,
	0, 459, 1217, 461, 462, 463, 464, 470, 472, 473,
	468, 469, 471, 474, 475, 466, 467, 1218, 476, 465,
	1100, 279, 1219, 477, 478, 1123, 1171, 479, 1185, 481,
	482, 0, 0, 483, 0, 0, 0, 485, 486, 487,
	0, 0, 488, 489, 672, 1220, 490, 1221, 1200, 491,
	492, 1110, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 0, 502, 503, 674, 504, 505, 506, 675, 507,
	508, 509, 1201, 510, 677, 511, 512, 0, 513, 514,
	0, 515, 516, 517, 518, 519, 520, 521, 1181, 522,
	523, 525, 524, 526, 0, 527, 0, 528, 529, 530,
	0, 0, 0, 0, 0, 531, 0, 533, 534, 535,
	536, 532, 537, 538, 539, 540, 541, 0, 542, 543,
	544, 1222, 545, 546, 547, 4384, 549, 1111, 550, 0,
	551, 552, 558, 559, 560, 553, 554, 561, 562, 563,
	564, 565, 0, 567, 568, 566, 569, 570, 571, 1164,
	572, 573, 555, 556, 574, 575, 1223, 576, 577, 578,
	579, 580, 581, 582, 1179, 0, 583, 0, 584, 585,
	586, 588, 557, 589, 594, 595, 1226, 590, 591, 592,
	593, 1202, 597, 598, 0, 599, 600, 1097, 596, 587,
	0, 601, 602, 603, 604, 605, 606, 607, 364, 608,
	0, 609, 1191, 1192, 1193, 1194, 0, 618, 0, 610,
	611, 612, 1203, 613, 1204, 1121, 614, 615, 616, 617,
	0, 619, 620, 0, 1104, 621, 622, 623, 625, 626,
	624, 627, 1165, 628, 0, 0, 629, 630, 631, 689,
	1188, 1225, 0, 633, 632, 634, 692, 635, 636, 0,
	0, 0, 0, 637, 638, 693, 639, 640, 641, 1101,
	0, 0, 0, 0, 1143, 1115, 1116, 1117, 3208, 3209,
	1126, 0, 1096, 0, 0, 0, 0, 0, 0, 1094,
	1095, 280, 282, 281, 283, 284, 285, 286, 1127, 287,
	288, 0, 1125, 0, 0, 0, 1167, 1131, 0, 0,
	0, 289, 290, 1207, 291, 292, 293, 294, 295, 296,
	643, 1180, 0, 297, 1187, 298, 1186, 0, 1197, 299,
	300, 301, 302, 303, 304, 1133, 1166, 1098, 305, 1227,
	1228, 650, 0, 306, 307, 1173, 0, 1154, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	325, 326, 0, 327, 328, 329, 1208, 330, 331, 332,
	1157, 1155, 1156, 1163, 1159, 1158, 1162, 333, 334, 335,
	336, 337, 1190, 338, 340, 1184, 1183, 1103, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 1175, 351, 0, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 1109, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 1198, 1199, 370, 1122, 277,
	0, 0, 0, 0, 0, 371, 372, 373, 1182, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 1209,
	378, 379, 380, 1195, 1196, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 1205, 0, 1132, 391,
	0, 392, 393, 394, 395, 396, 1168, 1169, 1172, 480,
	1211, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 278, 404, 405, 406, 408, 0, 1210, 407,
	1177, 1178, 0, 1138, 0, 409, 410, 1212, 1170, 1213,
	411, 412, 413, 1214, 414, 0, 0, 0, 415, 416,
	417, 418, 419, 420, 0, 421, 423, 422, 0, 424,
	1206, 1215, 425, 426, 1216, 0, 427, 428, 429, 430,
	431, 432, 435, 1161, 1160, 433, 434, 436, 437, 0,
	438, 439, 441, 444, 440, 442, 443, 445, 458, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 460, 0, 459, 1217, 461, 462, 463, 464, 470,
	472, 473, 468, 469, 471, 474, 475, 466, 467, 1218,
	476, 465, 1100, 279, 1219, 477, 478, 1123, 1171, 479,
	1185, 481, 482, 0, 0, 483, 0, 0, 0, 485,
	486, 487, 0, 0, 488, 489, 672, 1220, 490, 1221,
	1200, 491, 492, 1110, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 0, 502, 503, 674, 504, 505, 506,
	675, 507, 508, 509, 1201, 510, 677, 511, 512, 0,
	513, 514, 0, 515, 516, 517, 518, 519, 520, 521,
	1181, 522, 523, 525, 524, 526, 0, 527, 0, 528,
	529, 530, 0, 0, 0, 0, 0, 531, 0, 533,
	534, 535, 536, 532, 537, 538, 539, 540, 541, 0,
	542, 543, 544, 1222, 545, 546, 547, 548, 549, 1111,
	550, 0, 551, 552, 558, 559, 560, 553, 554, 561,
	562, 563, 564, 565, 0, 567, 568, 566, 569, 570,
	571, 1164, 572, 573, 555, 556, 574, 575, 1223, 576,
	577, 578, 579, 580, 581, 582, 1179, 0, 583, 0,
	584, 585, 586, 588, 557, 589, 594, 595, 1226, 590,
	591, 592, 593, 1202, 597, 598, 0, 599, 600, 1097,
	596, 587, 0, 601, 602, 603, 604, 605, 606, 607,
	364, 608, 0, 609, 1191, 1192, 1193, 1194, 0, 618,
	0, 610, 611, 612, 1203, 613, 1204, 1121, 614, 615,
	616, 617, 0, 619, 620, 0, 1104, 621, 622, 623,
	625, 626, 624, 627, 1165, 628, 0, 0, 629, 630,
	631, 689, 1188, 1225, 0, 633, 632, 634, 692, 635,
	636, 0, 0, 0, 0, 637, 638, 693, 639, 640,
	641, 1101, 0, 0, 0, 0, 1143, 1115, 1116, 1117,
	3206, 3207, 1126, 0, 1096, 0, 0, 0, 0, 0,
	0, 1094, 1095, 280, 282, 281, 283, 284, 285, 286,
	1127, 287, 288, 0, 1125, 0, 0, 0, 1167, 1131,
	0, 0, 0, 289, 290, 1207, 291, 292, 293, 294,
	295, 296, 643, 1180, 0, 297, 1187, 298, 1186, 0,
	1197, 299, 300, 301, 302, 303, 304, 1133, 1166, 1098,
	305, 1227, 1228, 650, 0, 306, 307, 1173, 0, 1154,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 1208, 330,
	331, 332, 1157, 1155, 1156, 1163, 1159, 1158, 1162, 333,
	334, 335, 336, 337, 1190, 338, 340, 1184, 1183, 1103,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 1175, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 1109, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 1198, 1199, 370,
	1122, 277, 0, 0, 0, 0, 0, 371, 372, 373,
	1182, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 1209, 378, 379, 380, 1195, 1196, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 1205, 0,
	1132, 391, 0, 392, 393, 394, 395, 396, 1168, 1169,
	1172, 480, 1211, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 278, 404, 405, 406, 408, 0,
	1210, 407, 1177, 1178, 0, 1138, 0, 409, 410, 1212,
	1170, 1213, 411, 412, 413, 1214, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 0, 421, 423, 422,
	0, 424, 1206, 1215, 425, 426, 1216, 0, 427, 428,
	429, 430, 431, 432, 435, 1161, 1160, 433, 434, 436,
	437, 0, 438, 439, 441, 444, 440, 442, 443, 445,
	458, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 459, 1217, 461, 462, 463,
	464, 470, 472, 473, 468, 469, 471, 474, 475, 466,
	467, 1218, 476, 465, 1100, 279, 1219, 477, 478, 1123,
	1171, 479, 1185, 481, 482, 0, 0, 483, 0, 0,
	0, 485, 486, 487, 0, 0, 488, 489, 672, 1220,
	490, 1221, 1200, 491, 492, 1110, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 0, 502, 503, 674, 504,
	505, 506, 675, 507, 508, 509, 1201, 510, 677, 511,
	512, 0, 513, 514, 0, 515, 516, 517, 518, 519,
	520, 521, 1181, 522, 523, 525, 524, 526, 0, 527,
	0, 528, 529, 530, 0, 0, 0, 0, 0, 531,
	0, 533, 534, 535, 536, 532, 537, 538, 539, 540,
	541, 0, 542, 543, 544, 1222, 545, 546, 547, 548,
	549, 1111, 550, 0, 551, 552, 558, 559, 560, 553,
	554, 561, 562, 563, 564, 565, 0, 567, 568, 566,
	569, 570, 571, 1164, 572, 573, 555, 556, 574, 575,
	1223, 576, 577, 578, 579, 580, 581, 582, 1179, 0,
	583, 0, 584, 585, 586, 588, 557, 589, 594, 595,
	1226, 590, 591, 592, 593, 1202, 597, 598, 0, 599,
	600, 1097, 596, 587, 0, 601, 602, 603, 604, 605,
	606, 607, 364, 608, 0, 609, 1191, 1192, 1193, 1194,
	0, 618, 0, 610, 611, 612, 1203, 613, 1204, 1121,
	614, 615, 616, 617, 0, 619, 620, 0, 1104, 621,
	622, 623, 625, 626, 624, 627, 1165, 628, 0, 0,
	629, 630, 631, 689, 1188, 1225, 0, 633, 632, 634,
	692, 635, 636, 0, 0, 0, 0, 637, 638, 693,
	639, 640, 641, 1101, 0, 0, 0, 0, 1143, 1115,
	1116, 1117, 1113, 1114, 1126, 0, 1096, 0, 0, 0,
	0, 0, 0, 1094, 1095, 280, 282, 281, 283, 284,
	285, 286, 1127, 287, 288, 0, 1125, 0, 0, 0,
	1167, 1131, 0, 0, 0, 289, 290, 1207, 291, 292,
	293, 294, 295, 296, 643, 1180, 0, 297, 1187, 298,
	1186, 0, 1197, 299, 300, 301, 302, 303, 304, 1133,
	1166, 1098, 305, 1227, 1228, 650, 0, 306, 307, 1173,
	0, 1154, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	1208, 330, 331, 332, 1157, 1155, 1156, 1163, 1159, 1158,
	1162, 333, 334, 335, 336, 337, 1190, 338, 340, 1184,
	1183, 1103, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 1175, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 1109, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 1198,
	1199, 370, 1122, 277, 0, 0, 0, 0, 0, 371,
	372, 373, 1182, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 1209, 378, 379, 380, 1195, 1196, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	1205, 0, 1132, 391, 0, 392, 393, 394, 395, 396,
	1168, 1169, 1172, 480, 1211, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 278, 404, 405, 406,
	408, 0, 1210, 407, 1177, 1178, 0, 1138, 0, 409,
	410, 1212, 1170, 1213, 411, 412, 413, 1214, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 0, 421,
	423, 422, 0, 424, 1206, 1215, 425, 426, 1216, 0,
	427, 428, 429, 430, 431, 432, 435, 1161, 1160, 433,
	434, 436, 437, 0, 438, 439, 441, 444, 440, 442,
	443, 445, 458, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 0, 459, 1217, 461,
	462, 463, 464, 470, 472, 473, 468, 469, 471, 474,
	475, 466, 467, 1218, 476, 465, 1100, 279, 1219, 477,
	478, 1123, 1171, 479, 1185, 481, 482, 0, 0, 483,
	0, 0, 0, 485, 486, 487, 0, 0, 488, 489,
	672, 1220, 490, 1221, 1200, 491, 492, 1110, 493, 494,
	495, 496, 497, 498, 499, 500, 501, 0, 502, 503,
	674, 504, 505, 506, 675, 507, 508, 509, 1201, 510,
	677, 511, 512, 0, 513, 514, 0, 515, 516, 517,
	518, 519, 520, 521, 1181, 522, 523, 525, 524, 526,
	0, 527, 0, 528, 529, 530, 0, 0, 0, 0,
	0, 531, 0, 533, 534, 535, 536, 532, 537, 538,
	539, 540, 541, 0, 542, 543, 544, 1222, 545, 546,
	547, 548, 549, 1111, 550, 0, 551, 552, 558, 559,
	560, 553, 554, 561, 562, 563, 564, 565, 0, 567,
	568, 566, 569, 570, 571, 1164, 572, 573, 555, 556,
	574, 575, 1223, 576, 577, 578, 579, 580, 581, 582,
	1179, 0, 583, 0, 584, 585, 586, 588, 557, 589,
	594, 595, 1226, 590, 591, 592, 593, 1202, 597, 598,
	0, 599, 600, 1097, 596, 587, 0, 601, 602, 603,
	604, 605, 606, 607, 364, 608, 0, 609, 1191, 1192,
	1193, 1194, 0, 618, 0, 610, 611, 612, 1203, 613,
	1204, 1121, 614, 615, 616, 617, 0, 619, 620, 0,
	1104, 621, 622, 623, 625, 626, 624, 627, 1165, 628,
	0, 0, 629, 630, 631, 689, 1188, 1225, 0, 633,
	632, 634, 692, 635, 636, 0, 0, 0, 0, 637,
	638, 693, 639, 640, 641, 1101, 0, 0, 0, 0,
	1143, 1115, 1116, 1117, 1113, 1114, 1126, 0, 1096, 0,
	0, 0, 0, 0, 0, 2468, 2469, 280, 282, 281,
	283, 284, 285, 286, 1127, 287, 288, 0, 1125, 0,
	0, 0, 1167, 1131, 0, 0, 0, 289, 290, 1207,
	291, 292, 293, 294, 295, 296, 643, 1180, 0, 297,
	1187, 298, 1186, 0, 1197, 299, 300, 301, 302, 303,
	304, 1133, 1166, 0, 305, 1227, 1228, 650, 0, 306,
	307, 1173, 0, 1154, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 1208, 330, 331, 332, 1157, 1155, 1156, 1163,
	1159, 1158, 1162, 333, 334, 335, 336, 337, 1190, 338,
	340, 1184, 1183, 0, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 1175, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	1109, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 1198, 1199, 370, 1122, 277, 0, 0, 0, 0,
	0, 371, 372, 373, 1182, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 1209, 378, 379, 380, 1195,
	1196, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 1205, 0, 1132, 391, 0, 392, 393, 394,
	395, 396, 1168, 1169, 1172, 480, 1211, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 278, 404,
	405, 406, 408, 0, 1210, 407, 1177, 1178, 0, 1138,
	0, 409, 410, 1212, 1170, 1213, 411, 412, 413, 1214,
	414, 0, 0, 0, 415, 416, 417, 418, 419, 420,
	0, 421, 423, 422, 0, 424, 1206, 1215, 425, 426,
	1216, 0, 427, 428, 429, 430, 431, 432, 435, 1161,
	1160, 433, 434, 436, 437, 0, 438, 439, 441, 444,
	440, 442, 443, 445, 458, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 460, 0, 459,
	1217, 461, 462, 463, 464, 470, 472, 473, 468, 469,
	471, 474, 475, 466, 467, 1218, 476, 465, 0, 279,
	1219, 477, 478, 1123, 1171, 479, 1185, 481, 482, 0,
	0, 483, 0, 0, 0, 485, 486, 487, 0, 0,
	488, 489, 672, 1220, 490, 1221, 1200, 491, 492, 1110,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 0,
	502, 503, 674, 504, 505, 506, 675, 507, 508, 509,
	1201, 510, 677, 511, 512, 0, 513, 514, 0, 515,
	516, 517, 518, 519, 520, 521, 1181, 522, 523, 525,
	524, 526, 0, 527, 0, 528, 529, 530, 0, 0,
	0, 0, 0, 531, 0, 533, 534, 535, 536, 532,
	537, 538, 539, 540, 541, 0, 542, 543, 544, 1222,
	545, 546, 547, 548, 549, 1111, 550, 0, 551, 552,
	558, 559, 560, 553, 554, 561, 562, 563, 564, 565,
	0, 567, 568, 566, 569, 570, 571, 1164, 572, 573,
	555, 556, 574, 575, 1223, 576, 577, 578, 579, 580,
	581, 582, 1179, 0, 583, 0, 584, 585, 586, 588,
	557, 589, 594, 595, 1226, 590, 591, 592, 593, 1202,
	597, 598, 0, 599, 600, 0, 596, 587, 0, 601,
	602, 603, 604, 605, 606, 607, 364, 608, 0, 609,
	1191, 1192, 1193, 1194, 0, 618, 0, 610, 611, 612,
	1203, 613, 1204, 1121, 614, 615, 616, 617, 0, 619,
	620, 0, 0, 621, 622, 623, 625, 626, 624, 627,
	1165, 628, 0, 0, 629, 630, 631, 689, 1188, 1225,
	0, 633, 632, 634, 692, 635, 636, 0, 0, 0,
	0, 637, 638, 693, 639, 640, 641, 0, 0, 0,
	0, 0, 1143, 1115, 1116, 1117, 1113, 1114, 1126, 0,
	2727, 0, 0, 0, 0, 0, 0, 2725, 2726, 280,
	282, 281, 283, 284, 285, 286, 1127, 287, 288, 0,
	1125, 0, 0, 0, 1167, 1131, 0, 0, 0, 289,
	290, 1207, 291, 292, 293, 294, 295, 296, 643, 1180,
	0, 297, 1187, 298, 1186, 0, 1197, 299, 300, 301,
	302, 303, 304, 1133, 1166, 0, 305, 1227, 1228, 650,
	0, 306, 307, 1173, 0, 1154, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	0, 327, 328, 329, 1208, 330, 331, 332, 1157, 1155,
	1156, 1163, 1159, 1158, 1162, 333, 334, 335, 336, 337,
	1190, 338, 340, 1184, 1183, 0, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	1175, 351, 0, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 1109, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 1198, 1199, 370, 1122, 277, 0, 0,
	0, 0, 0, 371, 372, 373, 1182, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 1209, 378, 379,
	380, 1195, 1196, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 1205, 0, 1132, 391, 0, 392,
	393, 394, 395, 396, 1168, 1169, 1172, 480, 1211, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	278, 404, 405, 406, 408, 0, 1210, 407, 1177, 1178,
	0, 1138, 0, 409, 410, 1212, 1170, 1213, 411, 412,
	413, 1214, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 0, 421, 423, 422, 0, 424, 1206, 1215,
	425, 426, 1216, 0, 427, 428, 429, 430, 431, 432,
	435, 1161, 1160, 433, 434, 436, 437, 0, 438, 439,
	441, 444, 440, 442, 443, 445, 458, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 460,
	0, 459, 1217, 461, 462, 463, 464, 470, 472, 473,
	468, 469, 471, 474, 475, 466, 467, 1218, 476, 465,
	0, 279, 1219, 477, 478, 1123, 1171, 479, 1185, 481,
	482, 0, 0, 483, 0, 0, 0, 485, 486, 487,
	0, 0, 488, 489, 672, 1220, 490, 1221, 1200, 491,
	492, 484, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 0, 502, 503, 674, 504, 505, 506, 675, 507,
	508, 509, 1201, 510, 677, 511, 512, 0, 513, 514,
	0, 515, 516, 517, 518, 519, 520, 521, 1181, 522,
	523, 525, 524, 526, 0, 527, 0, 528, 529, 530,
	0, 0, 0, 0, 0, 531, 0, 533, 534, 535,
	536, 532, 537, 538, 539, 540, 541, 0, 542, 543,
	544, 1222, 545, 546, 547, 548, 549, 3201, 3202, 0,
	551, 552, 558, 559, 560, 553, 554, 561, 562, 563,
	564, 565, 0, 567, 568, 566, 569, 570, 571, 1164,
	572, 573, 555, 556, 574, 575, 1223, 576, 577, 578,
	579, 580, 581, 582, 1179, 0, 583, 0, 584, 585,
	586, 588, 557, 589, 594, 595, 1226, 590, 591, 592,
	593, 1202, 597, 598, 0, 599, 600, 0, 596, 587,
	0, 601, 602, 603, 604, 605, 606, 607, 364, 608,
	0, 609, 1191, 1192, 1193, 1194, 0, 618, 0, 610,
	611, 612, 1203, 613, 1204, 1121, 614, 615, 616, 617,
	0, 619, 620, 0, 0, 621, 622, 623, 625, 626,
	624, 627, 1165, 628, 0, 0, 629, 630, 631, 689,
	1188, 1225, 0, 633, 632, 634, 692, 635, 636, 0,
	0, 0, 0, 637, 638, 693, 639, 640, 641, 0,
	0, 0, 0, 0, 1143, 1115, 1116, 1117, 1113, 1114,
	1126, 0, 0, 0, 0, 0, 0, 0, 0, 2140,
	2141, 280, 282, 281, 283, 284, 285, 286, 1127, 287,
	288, 0, 1125, 0, 0, 0, 1167, 1131, 0, 0,
	0, 289, 290, 1207, 291, 292, 293, 294, 295, 296,
	0, 1180, 0, 297, 1187, 298, 1186, 0, 1197, 299,
	300, 301, 302, 303, 304, 1133, 1166, 1098, 305, 1227,
	1228, 650, 0, 306, 307, 1173, 0, 1154, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	325, 326, 0, 327, 328, 329, 1208, 330, 331, 4764,
	1157, 1155, 1156, 1163, 1159, 1158, 1162, 333, 334, 335,
	336, 337, 1190, 338, 340, 1184, 1183, 1103, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 1175, 351, 0, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 1109, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 1198, 1199, 370, 1122, 277,
	0, 0, 0, 0, 0, 371, 372, 373, 1182, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 1209,
	378, 379, 380, 1195, 1196, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 1205, 0, 1132, 391,
	0, 392, 393, 394, 395, 396, 1168, 1169, 1172, 480,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 278, 404, 405, 406, 408, 0, 1210, 407,
	1177, 1178, 0, 1138, 0, 409, 410, 0, 1170, 0,
	411, 412, 413, 1214, 414, 0, 0, 0, 415, 416,
	417, 418, 419, 420, 0, 421, 423, 422, 0, 424,
	1206, 1215, 425, 426, 0, 0, 427, 428, 429, 430,
	431, 432, 435, 1161, 1160, 433, 434, 436, 437, 0,
	438, 439, 441, 444, 440, 442, 443, 445, 458, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 460, 0, 459, 1217, 461, 462, 463, 464, 470,
	472, 473, 468, 469, 471, 474, 475, 466, 467, 1218,
	476, 465, 1100, 279, 0, 477, 478, 1123, 1171, 479,
	1185, 481, 482, 0, 0, 483, 0, 0, 0, 485,
	486, 487, 0, 0, 488, 489, 672, 1220, 490, 1221,
	1200, 491, 492, 1110, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 0, 502, 503, 674, 504, 505, 506,
	675, 507, 508, 509, 1201, 510, 677, 511, 512, 0,
	513, 514, 0, 515, 516, 517, 518, 519, 520, 521,
	1181, 522, 523, 525, 524, 526, 0, 527, 0, 528,
	529, 530, 0, 0, 0, 0, 0, 531, 0, 533,
	534, 535, 536, 532, 537, 538, 539, 540, 541, 0,
	542, 543, 544, 1222, 545, 546, 547, 548, 549, 1111,
	550, 0, 551, 552, 558, 559, 560, 553, 554, 561,
	562, 563, 564, 565, 0, 567, 568, 566, 569, 570,
	571, 1164, 572, 573, 555, 556, 574, 575, 0, 576,
	577, 578, 579, 580, 581, 582, 1179, 0, 583, 0,
	584, 585, 586, 588, 557, 589, 594, 595, 1226, 590,
	591, 592, 593, 1202, 597, 598, 0, 599, 600, 1097,
	596, 587, 0, 601, 602, 603, 604, 605, 606, 607,
	364, 608, 0, 609, 1191, 1192, 1193, 1194, 0, 618,
	0, 610, 611, 612, 1203, 613, 1204, 1121, 614, 615,
	616, 617, 0, 4763, 620, 0, 1104, 621, 622, 623,
	625, 626, 624, 627, 1165, 628, 0, 0, 629, 630,
	631, 689, 1188, 1225, 0, 633, 632, 634, 692, 635,
	636, 0, 0, 0, 0, 637, 638, 693, 639, 640,
	641, 0, 0, 0, 1087, 0, 1265, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1094, 1095, 280, 282, 281, 283, 284, 285, 286,
	1127, 287, 288, 0, 1125, 0, 0, 0, 1167, 0,
	0, 0, 0, 289, 290, 1207, 291, 292, 293, 294,
	295, 296, 643, 644, 0, 297, 645, 298, 646, 0,
	647, 299, 300, 301, 302, 303, 304, 0, 1166, 0,
	305, 648, 649, 650, 0, 306, 307, 1173, 0, 1154,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 1208, 330,
	331, 332, 1157, 1155, 1156, 1163, 1159, 1158, 1162, 333,
	334, 335, 336, 337, 0, 338, 340, 652, 653, 0,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 350, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 654, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 1198, 1199, 370,
	0, 277, 0, 0, 0, 0, 0, 371, 372, 373,
	657, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 1209, 378, 379, 380, 658, 659, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 1205, 0,
	661, 391, 0, 392, 393, 394, 395, 396, 1168, 1169,
	1172, 480, 1211, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 278, 404, 405, 406, 408, 0,
	1210, 407, 665, 666, 0, 667, 0, 409, 410, 1212,
	1170, 1213, 411, 412, 413, 1214, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 1251, 421, 423, 422,
	0, 424, 1206, 1215, 425, 426, 1216, 0, 427, 428,
	429, 430, 431, 432, 435, 1161, 1160, 433, 434, 436,
	437, 0, 438, 439, 441, 444, 440, 442, 443, 445,
	458, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 459, 1217, 461, 462, 463,
	464, 470, 472, 473, 468, 469, 471, 474, 475, 466,
	467, 1218, 476, 465, 0, 279, 1219, 477, 478, 0,
	1171, 479, 671, 481, 482, 0, 0, 483, 0, 0,
	1257, 485, 486, 487, 0, 0, 488, 489, 672, 1220,
	490, 1221, 1200, 491, 492, 484, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 0, 502, 503, 674, 504,
	505, 506, 675, 507, 508, 509, 1201, 510, 677, 511,
	512, 0, 513, 514, 0, 515, 516, 517, 518, 519,
	520, 521, 678, 522, 523, 525, 524, 526, 0, 527,
	0, 528, 529, 530, 0, 0, 0, 0, 0, 531,
	0, 533, 534, 535, 536, 532, 537, 538, 539, 540,
	541, 0, 542, 543, 544, 1222, 545, 546, 547, 548,
	549, 679, 1259, 0, 551, 552, 558, 559, 560, 553,
	554, 561, 562, 563, 564, 565, 239, 567, 568, 566,
	569, 570, 571, 1164, 572, 573, 555, 556, 574, 575,
	1223, 576, 577, 578, 579, 580, 581, 582, 680, 0,
	583, 0, 584, 585, 586, 588, 557, 589, 594, 595,
	681, 590, 591, 592, 593, 1202, 597, 598, 0, 599,
	600, 0, 596, 587, 241, 601, 602, 603, 604, 605,
	606, 607, 364, 608, 0, 609, 683, 684, 685, 686,
	0, 618, 0, 610, 611, 612, 1203, 613, 1204, 0,
	614, 615, 616, 617, 0, 619, 620, 0, 0, 621,
	622, 623, 625, 626, 624, 627, 1165, 628, 0, 0,
	629, 630, 631, 1631, 690, 691, 0, 633, 632, 634,
	692, 635, 636, 0, 0, 0, 233, 637, 638, 693,
	639, 640, 641, 1265, 0, 234, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	280, 282, 281, 283, 284, 285, 286, 0, 287, 288,
	1255, 0, 1983, 0, 0, 1167, 0, 0, 0, 0,
	289, 290, 1207, 291, 292, 293, 294, 295, 296, 643,
	644, 0, 297, 645, 298, 646, 0, 647, 299, 300,
	301, 302, 303, 304, 0, 1166, 0, 305, 648, 649,
	650, 0, 306, 307, 1173, 0, 1154, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 1208, 330, 331, 332, 1157,
	1155, 1156, 1163, 1159, 1158, 1162, 333, 334, 335, 336,
	337, 0, 338, 340, 652, 653, 0, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 350, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 654, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 1198, 1199, 370, 0, 277, 0,
	0, 0, 0, 0, 371, 372, 373, 657, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 1209, 378,
	379, 380, 658, 659, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 1205, 0, 661, 391, 0,
	392, 393, 394, 395, 396, 1168, 1169, 1172, 480, 1211,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 278, 404, 405, 406, 408, 0, 1210, 407, 665,
	666, 0, 667, 0, 409, 410, 1212, 1170, 1213, 411,
	412, 413, 1214, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 1251, 421, 423, 422, 0, 424, 1206,
	1215, 425, 426, 1216, 0, 427, 428, 429, 430, 431,
	432, 435, 1161, 1160, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 1217, 461, 462, 463, 464, 470, 472,
	473, 468, 469, 471, 474, 475, 466, 467, 1218, 476,
	465, 0, 279, 1219, 477, 478, 0, 1171, 479, 671,
	481, 482, 0, 0, 483, 0, 0, 1257, 485, 486,
	487, 0, 0, 488, 489, 672, 1220, 490, 1221, 1200,
	491, 492, 484, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 0, 502, 503, 674, 504, 505, 506, 675,
	507, 508, 509, 1201, 510, 677, 511, 512, 0, 513,
	514, 0, 515, 516, 517, 518, 519, 520, 521, 678,
	522, 523, 525, 524, 526, 0, 527, 0, 528, 529,
	530, 0, 0, 0, 0, 0, 531, 0, 533, 534,
	535, 536, 532, 537, 538, 539, 540, 541, 0, 542,
	543, 544, 1222, 545, 546, 547, 548, 549, 679, 1259,
	0, 551, 552, 558, 559, 560, 553, 554, 561, 562,
	563, 564, 565, 239, 567, 568, 566, 569, 570, 571,
	1164, 572, 573, 555, 556, 574, 575, 1223, 576, 577,
	578, 579, 580, 581, 582, 680, 0, 583, 0, 584,
	585, 586, 588, 557, 589, 594, 595, 681, 590, 591,
	592, 593, 1202, 597, 598, 0, 599, 600, 0, 596,
	587, 241, 601, 602, 603, 604, 605, 606, 607, 364,
	608, 0, 609, 683, 684, 685, 686, 0, 618, 0,
	610, 611, 612, 1203, 613, 1204, 0, 614, 615, 616,
	617, 0, 619, 620, 0, 0, 621, 622, 623, 625,
	626, 624, 627, 1165, 628, 0, 0, 629, 630, 631,
	1631, 690, 691, 0, 633, 632, 634, 692, 635, 636,
	0, 0, 0, 233, 637, 638, 693, 639, 640, 641,
	0, 0, 234, 0, 0, 0, 0, 0, 0, 0,
	0, 3365, 0, 1265, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1255, 0, 1983,
	280, 282, 281, 283, 284, 285, 286, 0, 287, 288,
	0, 0, 0, 0, 0, 1167, 0, 0, 0, 0,
	289, 290, 1207, 291, 292, 293, 294, 295, 296, 643,
	644, 0, 297, 645, 298, 646, 0, 647, 299, 300,
	301, 302, 303, 304, 0, 1166, 0, 305, 648, 649,
	650, 0, 306, 307, 1173, 0, 1154, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 1208, 330, 331, 332, 1157,
	1155, 1156, 1163, 1159, 1158, 1162, 333, 334, 335, 336,
	337, 0, 338, 340, 652, 653, 0, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 350, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 654, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 1198, 1199, 370, 0, 277, 0,
	0, 0, 0, 0, 371, 372, 373, 657, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 1209, 378,
	379, 380, 658, 659, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 1205, 0, 661, 391, 0,
	392, 393, 394, 395, 396, 1168, 1169, 1172, 480, 1211,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 278, 404, 405, 406, 408, 0, 1210, 407, 665,
	666, 0, 667, 0, 409, 410, 1212, 1170, 1213, 411,
	412, 413, 1214, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 1251, 421, 423, 422, 0, 424, 1206,
	1215, 425, 426, 1216, 0, 427, 428, 429, 430, 431,
	432, 435, 1161, 1160, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 1217, 461, 462, 463, 464, 470, 472,
	473, 468, 469, 471, 474, 475, 466, 467, 1218, 476,
	465, 0, 279, 1219, 477, 478, 0, 1171, 479, 671,
	481, 482, 0, 0, 483, 0, 0, 1257, 485, 486,
	487, 0, 0, 488, 489, 672, 1220, 490, 1221, 1200,
	491, 492, 484, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 0, 502, 503, 674, 504, 505, 506, 675,
	507, 508, 509, 1201, 510, 677, 511, 512, 0, 513,
	514, 0, 515, 516, 517, 518, 519, 520, 521, 678,
	522, 523, 525, 524, 526, 0, 527, 0, 528, 529,
	530, 0, 0, 0, 0, 0, 531, 0, 533, 534,
	535, 536, 532, 537, 538, 539, 540, 541, 0, 542,
	543, 544, 1222, 545, 546, 547, 548, 549, 679, 1259,
	0, 551, 552, 558, 559, 560, 553, 554, 561, 562,
	563, 564, 565, 0, 567, 568, 566, 569, 570, 571,
	1164, 572, 573, 555, 556, 574, 575, 1223, 576, 577,
	578, 579, 580, 581, 582, 680, 0, 583, 0, 584,
	585, 586, 588, 557, 589, 594, 595, 681, 590, 591,
	592, 593, 1202, 597, 598, 0, 599, 600, 0, 596,
	587, 0, 601, 602, 603, 604, 605, 606, 607, 364,
	608, 0, 609, 683, 684, 685, 686, 0, 618, 0,
	610, 611, 612, 1203, 613, 1204, 0, 614, 615, 616,
	617, 0, 619, 620, 0, 0, 621, 622, 623, 625,
	626, 624, 627, 1165, 628, 0, 0, 629, 630, 631,
	689, 690, 691, 0, 633, 632, 634, 692, 635, 636,
	0, 1247, 0, 1265, 637, 638, 693, 639, 640, 641,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	280, 282, 281, 283, 284, 285, 286, 0, 287, 288,
	0, 0, 0, 0, 0, 1167, 0, 1255, 0, 1253,
	289, 290, 1207, 291, 292, 293, 294, 295, 296, 643,
	644, 0, 297, 645, 298, 646, 0, 647, 299, 300,
	301, 302, 303, 304, 0, 1166, 0, 305, 648, 649,
	650, 0, 306, 307, 1173, 0, 1154, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 1208, 330, 331, 332, 1157,
	1155, 1156, 1163, 1159, 1158, 1162, 333, 334, 335, 336,
	337, 0, 338, 340, 652, 653, 0, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 350, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 654, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 1198, 1199, 370, 0, 277, 0,
	0, 0, 0, 0, 371, 372, 373, 657, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 1209, 378,
	379, 380, 658, 659, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 1205, 0, 661, 391, 0,
	392, 393, 394, 395, 396, 1168, 1169, 1172, 480, 1211,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 278, 404, 405, 406, 408, 0, 1210, 407, 665,
	666, 0, 667, 0, 409, 410, 1212, 1170, 1213, 411,
	412, 413, 1214, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 1251, 421, 423, 422, 0, 424, 1206,
	1215, 425, 426, 1216, 0, 427, 428, 429, 430, 431,
	432, 435, 1161, 1160, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 1217, 461, 462, 463, 464, 470, 472,
	473, 468, 469, 471, 474, 475, 466, 467, 1218, 476,
	465, 0, 279, 1219, 477, 478, 0, 1171, 479, 671,
	481, 482, 0, 0, 483, 0, 0, 1257, 485, 486,
	487, 0, 0, 488, 489, 672, 1220, 490, 1221, 1200,
	491, 492, 484, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 0, 502, 503, 674, 504, 505, 506, 675,
	507, 508, 509, 1201, 510, 677, 511, 512, 0, 513,
	514, 0, 515, 516, 517, 518, 519, 520, 521, 678,
	522, 523, 525, 524, 526, 0, 527, 0, 528, 529,
	530, 0, 0, 0, 0, 0, 531, 0, 533, 534,
	535, 536, 532, 537, 538, 539, 540, 541, 0, 542,
	543, 544, 1222, 545, 546, 547, 548, 549, 679, 1259,
	0, 551, 552, 558, 559, 560, 553, 554, 561, 562,
	563, 564, 565, 0, 567, 568, 566, 569, 570, 571,
	1164, 572, 573, 555, 556, 574, 575, 1223, 576, 577,
	578, 579, 580, 581, 582, 680, 0, 583, 0, 584,
	585, 586, 588, 557, 589, 594, 595, 681, 590, 591,
	592, 593, 1202, 597, 598, 0, 599, 600, 0, 596,
	587, 0, 601, 602, 603, 604, 605, 606, 607, 364,
	608, 0, 609, 683, 684, 685, 686, 0, 618, 0,
	610, 611, 612, 1203, 613, 1204, 0, 614, 615, 616,
	617, 0, 619, 620, 0, 0, 621, 622, 623, 625,
	626, 624, 627, 1165, 628, 0, 0, 629, 630, 631,
	689, 690, 691, 0, 633, 632, 634, 692, 635, 636,
	0, 0, 0, 1265, 637, 638, 693, 639, 640, 641,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	280, 282, 281, 283, 284, 285, 286, 0, 287, 288,
	0, 0, 0, 0, 0, 1167, 0, 1255, 0, 1253,
	289, 290, 1207, 291, 292, 293, 294, 295, 296, 643,
	644, 0, 297, 645, 298, 646, 0, 647, 299, 300,
	301, 302, 303, 304, 0, 1166, 0, 305, 648, 649,
	650, 0, 306, 307, 1173, 0, 1154, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 1208, 330, 331, 332, 1157,
	1155, 1156, 1163, 1159, 1158, 1162, 333, 334, 335, 336,
	337, 0, 338, 340, 652, 653, 0, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 350, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 654, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 1198, 1199, 370, 0, 277, 0,
	0, 0, 0, 0, 371, 372, 373, 657, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 1209, 378,
	379, 380, 658, 659, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 1205, 0, 661, 391, 0,
	392, 393, 394, 395, 396, 1168, 1169, 1172, 480, 1211,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 278, 404, 405, 406, 408, 0, 1210, 407, 665,
	666, 0, 667, 0, 409, 410, 1212, 1170, 1213, 411,
	412, 413, 1214, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 1251, 421, 423, 422, 0, 424, 1206,
	1215, 425, 426, 1216, 0, 427, 428, 429, 430, 431,
	432, 435, 1161, 1160, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 1217, 461, 462, 463, 464, 470, 472,
	473, 468, 469, 471, 474, 475, 466, 467, 1218, 476,
	465, 0, 279, 1219, 477, 478, 0, 1171, 479, 671,
	481, 482, 0, 0, 483, 0, 0, 1257, 485, 486,
	487, 0, 0, 488, 489, 672, 1220, 490, 1221, 1200,
	491, 492, 484, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 0, 502, 503, 674, 504, 505, 506, 675,
	507, 508, 509, 1201, 510, 677, 511, 512, 0, 513,
	514, 0, 515, 516, 517, 518, 519, 520, 521, 678,
	522, 523, 525, 524, 526, 0, 527, 0, 528, 529,
	530, 0, 0, 0, 0, 0, 531, 0, 533, 534,
	535, 536, 532, 537, 538, 539, 540, 541, 0, 542,
	543, 544, 1222, 545, 546, 547, 548, 549, 679, 1259,
	0, 551, 552, 558, 559, 560, 553, 554, 561, 562,
	563, 564, 565, 0, 567, 568, 566, 569, 570, 571,
	1164, 572, 573, 555, 556, 574, 575, 1223, 576, 577,
	578, 579, 580, 581, 582, 680, 0, 583, 0, 584,
	585, 586, 588, 557, 589, 594, 595, 681, 590, 591,
	592, 593, 1202, 597, 598, 0, 599, 600, 0, 596,
	587, 0, 601, 602, 603, 604, 605, 606, 607, 364,
	608, 0, 609, 683, 684, 685, 686, 0, 618, 0,
	610, 611, 612, 1203, 613, 1204, 0, 614, 615, 616,
	617, 0, 619, 620, 0, 0, 621, 622, 623, 625,
	626, 624, 627, 1165, 628, 0, 0, 629, 630, 631,
	689, 690, 691, 0, 633, 632, 634, 692, 635, 636,
	0, 0, 0, 1265, 637, 638, 693, 639, 640, 641,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	280, 282, 281, 283, 284, 285, 286, 0, 287, 288,
	0, 0, 0, 0, 0, 1167, 0, 1255, 0, 1253,
	289, 290, 1207, 291, 292, 293, 294, 295, 296, 643,
	644, 0, 297, 645, 298, 646, 0, 647, 299, 300,
	301, 302, 303, 304, 0, 1166, 0, 305, 648, 649,
	650, 0, 306, 307, 1173, 0, 1154, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 1208, 330, 331, 332, 1157,
	1155, 1156, 1163, 1159, 1158, 1162, 333, 334, 335, 336,
	337, 0, 338, 340, 652, 653, 0, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 350, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 654, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 1198, 1199, 370, 0, 277, 0,
	0, 0, 0, 0, 371, 372, 373, 657, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 1209, 378,
	379, 380, 658, 659, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 1205, 0, 661, 391, 0,
	392, 393, 394, 395, 396, 1168, 1169, 1172, 480, 1211,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 278, 404, 405, 406, 408, 0, 1210, 407, 665,
	666, 0, 667, 0, 409, 410, 1212, 1170, 1213, 411,
	412, 413, 1214, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 1206,
	1215, 425, 426, 1216, 0, 427, 428, 429, 430, 431,
	432, 435, 1161, 1160, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 1217, 461, 462, 463, 464, 470, 472,
	473, 468, 469, 471, 474, 475, 466, 467, 1218, 476,
	465, 0, 279, 1219, 477, 478, 0, 1171, 479, 671,
	481, 482, 0, 0, 483, 0, 0, 0, 485, 486,
	487, 0, 0, 488, 489, 672, 1220, 490, 1221, 1200,
	491, 492, 484, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 0, 502, 503, 674, 504, 505, 506, 675,
	507, 508, 509, 1201, 510, 677, 511, 512, 0, 513,
	514, 0, 515, 516, 517, 518, 519, 520, 521, 678,
	522, 523, 525, 524, 526, 0, 527, 0, 528, 529,
	530, 0, 0, 0, 0, 0, 531, 0, 533, 534,
	535, 536, 532, 537, 538, 539, 540, 541, 0, 542,
	543, 544, 1222, 545, 546, 547, 548, 549, 679, 550,
	0, 551, 552, 558, 559, 560, 553, 554, 561, 562,
	563, 564, 565, 0, 567, 568, 566, 569, 570, 571,
	1164, 572, 573, 555, 556, 574, 575, 1223, 576, 577,
	578, 579, 580, 581, 582, 680, 0, 583, 0, 584,
	585, 586, 588, 557, 589, 594, 595, 681, 590, 591,
	592, 593, 1202, 597, 598, 0, 599, 600, 0, 596,
	587, 0, 601, 602, 603, 604, 605, 606, 607, 364,
	608, 0, 609, 683, 684, 685, 686, 0, 618, 0,
	610, 611, 612, 1203, 613, 1204, 0, 614, 615, 616,
	617, 0, 619, 620, 0, 0, 621, 622, 623, 625,
	626, 624, 627, 1165, 628, 0, 0, 629, 630, 631,
	689, 690, 691, 0, 633, 632, 634, 692, 635, 636,
	0, 0, 0, 1265, 637, 638, 693, 639, 640, 641,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	280, 282, 281, 283, 284, 285, 286, 0, 287, 288,
	0, 0, 0, 0, 0, 1167, 0, 0, 0, 4205,
	289, 290, 1207, 291, 292, 293, 294, 295, 296, 643,
	644, 0, 297, 645, 298, 646, 0, 647, 299, 300,
	301, 302, 303, 304, 0, 1166, 0, 305, 648, 649,
	650, 0, 306, 307, 1173, 0, 1154, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 1208, 330, 331, 332, 1157,
	1155, 1156, 1163, 1159, 1158, 1162, 333, 334, 335, 336,
	337, 0, 338, 340, 652, 653, 0, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 350, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 654, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 1198, 1199, 370, 0, 277, 0,
	0, 0, 0, 0, 371, 372, 373, 657, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 1209, 378,
	379, 380, 658, 659, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 1205, 0, 661, 391, 0,
	392, 393, 394, 395, 396, 1168, 1169, 1172, 480, 1211,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 278, 404, 405, 406, 408, 0, 1210, 407, 665,
	666, 0, 667, 0, 409, 410, 1212, 1170, 1213, 411,
	412, 413, 1214, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 1206,
	1215, 425, 426, 1216, 0, 427, 428, 429, 430, 431,
	432, 435, 1161, 1160, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 1217, 461, 462, 463, 464, 470, 472,
	473, 468, 469, 471, 474, 475, 466, 467, 1218, 476,
	465, 0, 279, 1219, 477, 478, 0, 1171, 479, 671,
	481, 482, 0, 0, 483, 0, 0, 0, 485, 486,
	487, 0, 0, 488, 489, 672, 1220, 490, 1221, 1200,
	491, 492, 484, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 0, 502, 503, 674, 504, 505, 506, 675,
	507, 508, 509, 1201, 510, 677, 511, 512, 0, 513,
	514, 0, 515, 516, 517, 518, 519, 520, 521, 678,
	522, 523, 525, 524, 526, 0, 527, 0, 528, 529,
	530, 0, 0, 0, 0, 0, 531, 0, 533, 534,
	535, 536, 532, 537, 538, 539, 540, 541, 0, 542,
	543, 544, 1222, 545, 546, 547, 548, 549, 679, 1259,
	0, 551, 552, 558, 559, 560, 553, 554, 561, 562,
	563, 564, 565, 0, 567, 568, 566, 569, 570, 571,
	1164, 572, 573, 555, 556, 574, 575, 1223, 576, 577,
	578, 579, 580, 581, 582, 680, 0, 583, 0, 584,
	585, 586, 588, 557, 589, 594, 595, 681, 590, 591,
	592, 593, 1202, 597, 598, 0, 599, 600, 0, 596,
	587, 0, 601, 602, 603, 604, 605, 606, 607, 364,
	608, 0, 609, 683, 684, 685, 686, 0, 618, 0,
	610, 611, 612, 1203, 613, 1204, 0, 614, 615, 616,
	617, 0, 619, 620, 0, 0, 621, 622, 623, 625,
	626, 624, 627, 1165, 628, 0, 0, 629, 630, 631,
	689, 690, 691, 0, 633, 632, 634, 692, 635, 636,
	274, 0, 0, 0, 637, 638, 693, 639, 640, 641,
	2572, 2573, 2574, 2591, 2592, 2593, 0, 280, 282, 281,
	283, 284, 285, 286, 0, 287, 288, 0, 0, 0,
	2594, 0, 642, 0, 0, 0, 0, 289, 290, 1880,
	291, 292, 293, 294, 295, 296, 643, 644, 0, 297,
	645, 298, 646, 0, 647, 299, 300, 301, 302, 303,
	304, 0, 0, 1865, 305, 648, 649, 650, 0, 306,
	307, 651, 0, 0, 0, 308, 309, 310, 311, 312,
	313, 314, 2584, 0, 316, 317, 318, 315, 319, 0,
	320, 2580, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 0, 330, 331, 332, 0, 0, 0, 0,
	0, 0, 0, 333, 334, 335, 336, 337, 0, 338,
	340, 652, 653, 0, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 350, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	654, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 655, 656, 370, 0, 0, 0, 2585, 2586, 2587,
	2588, 371, 372, 373, 657, 0, 0, 2579, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 658,
	659, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 660, 0, 661, 391, 0, 392, 393, 394,
	395, 396, 662, 663, 664, 480, 0, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 0, 404,
	405, 406, 408, 0, 0, 407, 665, 666, 0, 667,
	0, 409, 410, 0, 668, 0, 411, 412, 413, 0,
	414, 0, 2589, 2590, 415, 416, 417, 418, 419, 420,
	0, 421, 423, 422, 0, 424, 669, 0, 425, 426,
	0, 0, 427, 428, 429, 430, 431, 432, 435, 0,
	0, 433, 434, 436, 437, 2582, 438, 439, 441, 444,
	440, 442, 443, 445, 458, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 460, 0, 459,
	0, 461, 462, 463, 464, 470, 472, 473, 468, 469,
	471, 474, 475, 466, 467, 0, 476, 465, 0, 0,
	0, 477, 478, 0, 670, 479, 671, 481, 482, 0,
	0, 483, 0, 0, 0, 485, 486, 487, 0, 0,
	488, 489, 672, 0, 490, 0, 673, 491, 492, 484,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 0,
	502, 503, 674, 504, 505, 506, 675, 507, 508, 509,
	676, 510, 677, 511, 512, 0, 513, 514, 0, 515,
	516, 517, 518, 519, 520, 521, 678, 522, 523, 525,
	524, 526, 0, 527, 0, 528, 529, 530, 0, 0,
	0, 0, 0, 531, 0, 533, 534, 535, 536, 532,
	537, 538, 539, 540, 541, 0, 542, 543, 544, 0,
	545, 546, 547, 548, 549, 679, 550, 2583, 551, 552,
	558, 559, 560, 553, 554, 561, 562, 563, 564, 565,
	0, 567, 568, 566, 569, 570, 571, 0, 572, 573,
	555, 556, 574, 575, 0, 576, 577, 578, 579, 580,
	581, 582, 680, 0, 583, 0, 584, 585, 586, 588,
	557, 589, 594, 595, 681, 590, 591, 592, 593, 682,
	597, 598, 0, 599, 600, 1864, 596, 587, 0, 601,
	602, 603, 604, 605, 606, 607, 364, 608, 0, 609,
	683, 684, 685, 686, 0, 618, 0, 610, 611, 612,
	687, 613, 688, 0, 614, 615, 616, 617, 0, 619,
	620, 0, 0, 621, 622, 623, 625, 626, 624, 627,
	0, 628, 0, 0, 629, 630, 631, 689, 690, 691,
	0, 633, 632, 634, 692, 635, 636, 0, 0, 0,
	0, 637, 638, 693, 639, 640, 641, 0, 0, 0,
	0, 0, 0, 0, 1087, 0, 1347, 2569, 2570, 2571,
	2595, 2581, 2575, 0, 2577, 2578, 2576, 2563, 2564, 2565,
	2566, 2567, 2568, 280, 282, 281, 283, 284, 285, 286,
	0, 287, 288, 0, 0, 0, 0, 0, 642, 0,
	0, 0, 0, 289, 290, 1207, 291, 292, 293, 294,
	295, 296, 643, 644, 0, 297, 645, 298, 646, 0,
	647, 299, 300, 301, 302, 303, 304, 0, 0, 0,
	305, 648, 649, 650, 0, 306, 307, 651, 0, 1352,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 1208, 330,
	331, 332, 0, 0, 0, 0, 0, 0, 0, 333,
	334, 335, 336, 337, 0, 338, 340, 652, 653, 0,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 350, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 654, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 655, 656, 370,
	0, 277, 0, 0, 0, 0, 0, 371, 372, 373,
	657, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 1209, 378, 379, 380, 658, 659, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 660, 0,
	661, 391, 0, 392, 393, 394, 395, 396, 662, 663,
	664, 480, 1211, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 0, 404, 405, 406, 408, 0,
	1210, 407, 665, 666, 0, 667, 0, 409, 410, 1212,
	668, 1213, 411, 412, 413, 1214, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 0, 421, 423, 422,
	0, 424, 669, 1215, 425, 426, 1216, 0, 427, 428,
	429, 430, 431, 432, 435, 0, 0, 433, 434, 436,
	437, 0, 438, 439, 441, 444, 440, 442, 443, 445,
	458, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 459, 1217, 461, 462, 463,
	464, 470, 472, 473, 468, 469, 471, 474, 475, 466,
	467, 1218, 476, 465, 0, 0, 1219, 477, 478, 0,
	670, 479, 671, 481, 482, 0, 0, 483, 0, 0,
	0, 485, 486, 487, 0, 0, 488, 489, 672, 1220,
	490, 1221, 673, 491, 492, 484, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 0, 502, 503, 674, 504,
	505, 506, 675, 507, 508, 509, 676, 510, 677, 511,
	512, 0, 513, 514, 0, 515, 516, 517, 518, 519,
	520, 521, 678, 522, 523, 525, 524, 526, 0, 527,
	0, 528, 529, 530, 0, 0, 0, 0, 0, 531,
	0, 533, 534, 535, 536, 532, 537, 538, 539, 540,
	541, 0, 542, 543, 544, 1222, 545, 546, 547, 548,
	549, 679, 550, 0, 551, 552, 558, 559, 560, 553,
	554, 561, 562, 563, 564, 565, 239, 567, 568, 566,
	569, 570, 571, 0, 572, 573, 555, 556, 574, 575,
	1223, 576, 577, 578, 579, 580, 581, 582, 680, 0,
	583, 0, 584, 585, 586, 588, 557, 589, 594, 595,
	681, 590, 591, 592, 593, 682, 597, 598, 0, 599,
	600, 0, 596, 587, 241, 601, 602, 603, 604, 605,
	606, 607, 364, 608, 0, 609, 683, 684, 685, 686,
	0, 618, 0, 610, 611, 612, 687, 613, 688, 0,
	614, 615, 616, 617, 0, 619, 620, 0, 0, 621,
	622, 623, 625, 626, 624, 627, 0, 628, 0, 0,
	629, 630, 631, 1631, 690, 691, 0, 633, 632, 634,
	692, 635, 636, 0, 0, 0, 233, 637, 638, 693,
	639, 640, 641, 0, 0, 234, 1628, 0, 1347, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 280, 282, 281, 283, 284,
	285, 286, 193, 287, 288, 0, 0, 0, 0, 0,
	642, 0, 0, 0, 0, 289, 290, 1207, 291, 292,
	293, 294, 295, 296, 643, 644, 0, 297, 645, 298,
	646, 0, 647, 299, 300, 301, 302, 303, 304, 0,
	0, 0, 305, 648, 649, 650, 0, 306, 307, 651,
	0, 1352, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	1208, 330, 331, 332, 0, 0, 0, 0, 0, 0,
	0, 333, 334, 335, 336, 337, 0, 338, 340, 652,
	653, 0, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 350, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 654, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 655,
	656, 370, 0, 277, 0, 0, 0, 0, 0, 371,
	372, 373, 657, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 1209, 378, 379, 380, 658, 659, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	660, 0, 661, 391, 0, 392, 393, 394, 395, 396,
	662, 663, 664, 480, 1211, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 0, 404, 405, 406,
	408, 0, 1210, 407, 665, 666, 0, 667, 0, 409,
	410, 1212, 668, 1213, 411, 412, 413, 1214, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 0, 421,
	423, 422, 0, 424, 669, 1215, 425, 426, 1216, 0,
	427, 428, 429, 430, 431, 432, 435, 0, 0, 433,
	434, 436, 437, 0, 438, 439, 441, 444, 440, 442,
	443, 445, 458, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 0, 459, 1217, 461,
	462, 463, 464, 470, 472, 473, 468, 469, 471, 474,
	475, 466, 467, 1218, 476, 465, 0, 0, 1219, 477,
	478, 0, 670, 479, 671, 481, 482, 0, 0, 483,
	0, 0, 0, 485, 486, 487, 0, 0, 488, 489,
	672, 1220, 490, 1221, 673, 491, 492, 484, 493, 494,
	495, 496, 497, 498, 499, 500, 501, 0, 502, 503,
	674, 504, 505, 506, 675, 507, 508, 509, 676, 510,
	677, 511, 512, 0, 513, 514, 0, 515, 516, 517,
	518, 519, 520, 521, 678, 522, 523, 525, 524, 526,
	0, 527, 0, 528, 529, 530, 0, 0, 0, 0,
	0, 531, 0, 533, 534, 535, 536, 532, 537, 538,
	539, 540, 541, 0, 542, 543, 544, 1222, 545, 546,
	547, 548, 549, 679, 550, 0, 551, 552, 558, 559,
	560, 553, 554, 561, 562, 563, 564, 565, 239, 567,
	568, 566, 569, 570, 571, 0, 572, 573, 555, 556,
	574, 575, 1223, 576, 577, 578, 579, 580, 581, 582,
	680, 0, 583, 0, 584, 585, 586, 588, 557, 589,
	594, 595, 681, 590, 591, 592, 593, 682, 597, 598,
	0, 599, 600, 0, 596, 587, 241, 601, 602, 603,
	604, 605, 606, 607, 364, 608, 0, 609, 683, 684,
	685, 686, 0, 618, 0, 610, 611, 612, 687, 613,
	688, 0, 614, 615, 616, 617, 0, 619, 620, 0,
	0, 621, 622, 623, 625, 626, 624, 627, 0, 628,
	0, 0, 629, 630, 631, 1631, 690, 691, 0, 633,
	632, 634, 692, 635, 636, 0, 0, 0, 233, 637,
	638, 693, 639, 640, 641, 1347, 1346, 234, 0, 0,
	0, 1344, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 280, 282, 281, 283, 284, 285, 286, 0,
	287, 288, 0, 0, 193, 0, 0, 642, 0, 0,
	0, 0, 289, 290, 1207, 291, 292, 293, 294, 295,
	296, 643, 644, 0, 297, 645, 298, 646, 0, 647,
	299, 300, 301, 302, 303, 304, 0, 0, 0, 305,
	648, 649, 650, 0, 306, 307, 651, 0, 1352, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 1208, 330, 331,
	332, 0, 0, 0, 0, 0, 0, 0, 333, 334,
	335, 336, 337, 0, 338, 340, 652, 653, 0, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 350, 351, 0, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 654, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 655, 656, 370, 0,
	277, 0, 0, 0, 0, 0, 371, 372, 373, 657,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	1209, 378, 379, 380, 658, 659, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 660, 0, 661,
	391, 0, 392, 393, 394, 395, 396, 662, 663, 664,
	480, 1211, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 0, 404, 405, 406, 408, 0, 1210,
	407, 665, 666, 0, 667, 0, 409, 410, 1212, 668,
	1213, 411, 412, 413, 1214, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 669, 1215, 425, 426, 1216, 0, 427, 428, 429,
	430, 431, 432, 435, 0, 0, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 1217, 461, 462, 463, 464,
	470, 472, 473, 468, 469, 471, 474, 475, 466, 467,
	1218, 476, 465, 0, 0, 1219, 477, 478, 0, 670,
	479, 671, 481, 482, 0, 0, 483, 0, 0, 0,
	485, 486, 487, 0, 0, 488, 489, 672, 1220, 490,
	1221, 673, 491, 492, 484, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 0, 502, 503, 674, 504, 505,
	506, 675, 507, 508, 509, 676, 510, 677, 511, 512,
	0, 513, 514, 0, 515, 516, 517, 518, 519, 520,
	521, 678, 522, 523, 525, 524, 526, 0, 527, 0,
	528, 529, 530, 0, 0, 0, 0, 0, 531, 0,
	533, 534, 535, 536, 532, 537, 538, 539, 540, 541,
	0, 542, 543, 544, 1222, 545, 546, 547, 548, 549,
	679, 550, 0, 551, 552, 558, 559, 560, 553, 554,
	561, 562, 563, 564, 565, 0, 567, 568, 566, 569,
	570, 571, 0, 572, 573, 555, 556, 574, 575, 1223,
	576, 577, 578, 579, 580, 581, 582, 680, 0, 583,
	0, 584, 585, 586, 588, 557, 589, 594, 595, 681,
	590, 591, 592, 593, 682, 597, 598, 0, 599, 600,
	0, 596, 587, 0, 601, 602, 603, 604, 605, 606,
	607, 364, 608, 0, 609, 683, 684, 685, 686, 0,
	618, 0, 610, 611, 612, 687, 613, 688, 0, 614,
	615, 616, 617, 0, 619, 620, 0, 0, 621, 622,
	623, 625, 626, 624, 627, 0, 628, 0, 0, 629,
	630, 631, 689, 690, 691, 0, 633, 632, 634, 692,
	635, 636, 0, 0, 0, 0, 637, 638, 693, 639,
	640, 641, 1347, 1346, 0, 0, 0, 0, 1344, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 280,
	282, 281, 283, 284, 285, 286, 0, 287, 288, 0,
	0, 1655, 0, 0, 642, 0, 0, 0, 0, 289,
	290, 1207, 291, 292, 293, 294, 295, 296, 643, 644,
	0, 297, 645, 298, 646, 0, 647, 299, 300, 301,
	302, 303, 304, 0, 0, 0, 305, 648, 649, 650,
	0, 306, 307, 651, 0, 1352, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	0, 327, 328, 329, 1208, 330, 331, 332, 0, 0,
	0, 0, 0, 0, 0, 333, 334, 335, 336, 337,
	0, 338, 340, 652, 653, 0, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	350, 351, 0, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 654, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 655, 656, 370, 0, 277, 0, 0,
	0, 0, 0, 371, 372, 373, 657, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 1209, 378, 379,
	380, 658, 659, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 660, 0, 661, 391, 0, 392,
	393, 394, 395, 396, 662, 663, 664, 480, 1211, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	0, 404, 405, 406, 408, 0, 1210, 407, 665, 666,
	0, 667, 0, 409, 410, 1212, 668, 1213, 411, 412,
	413, 1214, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 0, 421, 423, 422, 0, 424, 669, 1215,
	425, 426, 1216, 0, 427, 428, 429, 430, 431, 432,
	435, 0, 0, 433, 434, 436, 437, 0, 438, 439,
	441, 444, 440, 442, 443, 445, 458, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 460,
	0, 459, 1217, 461, 462, 463, 464, 470, 472, 473,
	468, 469, 471, 474, 475, 466, 467, 1218, 476, 465,
	0, 0, 1219, 477, 478, 0, 670, 479, 671, 481,
	482, 0, 0, 483, 0, 0, 0, 485, 486, 487,
	0, 0, 488, 489, 672, 1220, 490, 1221, 673, 491,
	492, 484, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 0, 502, 503, 674, 504, 505, 506, 675, 507,
	508, 509, 676, 510, 677, 511, 512, 0, 513, 514,
	0, 515, 516, 517, 518, 519, 520, 521, 678, 522,
	523, 525, 524, 526, 0, 527, 0, 528, 529, 530,
	0, 0, 0, 0, 0, 531, 0, 533, 534, 535,
	536, 532, 537, 538, 539, 540, 541, 0, 542, 543,
	544, 1222, 545, 546, 547, 548, 549, 679, 550, 0,
	551, 552, 558, 559, 560, 553, 554, 561, 562, 563,
	564, 565, 0, 567, 568, 566, 569, 570, 571, 0,
	572, 573, 555, 556, 574, 575, 1223, 576, 577, 578,
	579, 580, 581, 582, 680, 0, 583, 0, 584, 585,
	586, 588, 557, 589, 594, 595, 681, 590, 591, 592,
	593, 682, 597, 598, 0, 599, 600, 0, 596, 587,
	0, 601, 602, 603, 604, 605, 606, 607, 364, 608,
	0, 609, 683, 684, 685, 686, 0, 618, 0, 610,
	611, 612, 687, 613, 688, 0, 614, 615, 616, 617,
	0, 619, 620, 0, 0, 621, 622, 623, 625, 626,
	624, 627, 0, 628, 0, 0, 629, 630, 631, 689,
	690, 691, 0, 633, 632, 634, 692, 635, 636, 0,
	0, 0, 0, 637, 638, 693, 639, 640, 641, 1347,
	1346, 0, 0, 0, 0, 1344, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 280, 282, 281, 283,
	284, 285, 286, 0, 287, 288, 0, 0, 3663, 0,
	0, 642, 0, 0, 0, 0, 289, 290, 1207, 291,
	292, 293, 294, 295, 296, 643, 644, 0, 297, 645,
	298, 646, 0, 647, 299, 300, 301, 302, 303, 304,
	0, 0, 0, 305, 648, 649, 650, 0, 306, 307,
	651, 0, 1352, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 1208, 330, 331, 332, 0, 0, 0, 0, 0,
	0, 0, 333, 334, 335, 336, 337, 0, 338, 340,
	652, 653, 0, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 350, 351, 0,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 654,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	655, 656, 370, 0, 277, 0, 0, 0, 0, 0,
	371, 372, 373, 657, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 1209, 378, 379, 380, 658, 659,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 660, 0, 661, 391, 0, 392, 393, 394, 395,
	396, 662, 663, 664, 480, 1211, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 0, 404, 405,
	406, 408, 0, 1210, 407, 665, 666, 0, 667, 0,
	409, 410, 1212, 668, 1213, 411, 412, 413, 1214, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 669, 1215, 425, 426, 1216,
	0, 427, 428, 429, 430, 431, 432, 435, 0, 0,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 1217,
	461, 462, 463, 464, 470, 472, 473, 468, 469, 471,
	474, 475, 466, 467, 1218, 476, 465, 0, 0, 1219,
	477, 478, 0, 670, 479, 671, 481, 482, 0, 0,
	483, 0, 0, 0, 485, 486, 487, 0, 0, 488,
	489, 672, 1220, 490, 1221, 673, 491, 492, 484, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 0, 502,
	503, 674, 504, 505, 506, 675, 507, 508, 509, 676,
	510, 677, 511, 512, 0, 513, 514, 0, 515, 516,
	517, 518, 519, 520, 521, 678, 522, 523, 525, 524,
	526, 0, 527, 0, 528, 529, 530, 0, 0, 0,
	0, 0, 531, 0, 533, 534, 535, 2340, 532, 537,
	538, 539, 540, 541, 0, 542, 543, 544, 1222, 545,
	546, 547, 548, 549, 679, 550, 0, 551, 552, 558,
	559, 560, 553, 554, 561, 562, 563, 564, 565, 0,
	567, 568, 566, 569, 570, 571, 0, 572, 573, 555,
	556, 574, 575, 1223, 576, 577, 578, 579, 580, 581,
	582, 680, 0, 583, 0, 584, 585, 586, 588, 557,
	589, 594, 595, 681, 590, 591, 592, 593, 682, 597,
	598, 0, 599, 600, 0, 596, 587, 0, 601, 602,
	603, 604, 605, 606, 607, 364, 608, 0, 609, 683,
	684, 685, 686, 0, 618, 0, 610, 611, 612, 687,
	613, 688, 0, 614, 615, 616, 617, 0, 619, 620,
	0, 0, 621, 622, 623, 625, 626, 624, 627, 0,
	628, 0, 0, 629, 630, 631, 689, 690, 691, 0,
	633, 632, 634, 692, 635, 636, 0, 0, 0, 0,
	637, 638, 693, 639, 640, 641, 1347, 2249, 0, 0,
	0, 0, 2250, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 280, 282, 281, 283, 284, 285, 286,
	0, 287, 288, 0, 0, 1655, 0, 0, 642, 0,
	0, 0, 0, 289, 290, 1207, 291, 292, 293, 294,
	295, 296, 643, 644, 0, 297, 645, 298, 646, 0,
	647, 299, 300, 301, 302, 303, 304, 0, 0, 0,
	305, 648, 649, 650, 0, 306, 307, 651, 0, 1352,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 1208, 330,
	331, 332, 0, 0, 0, 0, 0, 0, 0, 333,
	334, 335, 336, 337, 0, 338, 340, 652, 653, 0,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 350, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 654, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 655, 656, 370,
	0, 277, 0, 0, 0, 0, 0, 371, 372, 373,
	657, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 1209, 378, 379, 380, 658, 659, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 660, 0,
	661, 391, 0, 392, 393, 394, 395, 396, 662, 663,
	664, 480, 1211, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 0, 404, 405, 406, 408, 0,
	1210, 407, 665, 666, 0, 667, 0, 409, 410, 1212,
	668, 1213, 411, 412, 413, 1214, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 0, 2248, 423, 422,
	0, 424, 669, 1215, 425, 426, 1216, 0, 427, 428,
	429, 430, 431, 432, 435, 0, 0, 433, 434, 436,
	437, 0, 438, 439, 441, 444, 440, 442, 443, 445,
	458, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 459, 1217, 461, 462, 463,
	464, 470, 472, 473, 468, 469, 471, 474, 475, 466,
	467, 1218, 476, 465, 0, 0, 1219, 477, 478, 0,
	670, 479, 671, 481, 482, 0, 0, 483, 0, 0,
	0, 485, 486, 487, 0, 0, 488, 489, 672, 1220,
	490, 1221, 673, 491, 492, 484, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 0, 502, 503, 674, 504,
	505, 506, 675, 507, 508, 509, 676, 510, 677, 511,
	512, 0, 513, 514, 0, 515, 516, 517, 518, 519,
	520, 521, 678, 522, 523, 525, 524, 526, 0, 527,
	0, 528, 529, 530, 0, 0, 0, 0, 0, 531,
	0, 533, 534, 535, 536, 532, 537, 538, 539, 540,
	541, 0, 542, 543, 544, 1222, 545, 546, 547, 548,
	549, 679, 550, 0, 551, 552, 558, 559, 560, 553,
	554, 561, 562, 563, 564, 565, 0, 567, 568, 566,
	569, 570, 571, 0, 572, 573, 555, 556, 574, 575,
	1223, 576, 577, 578, 579, 580, 581, 582, 680, 0,
	583, 0, 584, 585, 586, 588, 557, 589, 594, 595,
	681, 590, 591, 592, 593, 682, 597, 598, 0, 599,
	600, 0, 596, 587, 0, 601, 602, 603, 604, 605,
	606, 607, 364, 608, 0, 609, 683, 684, 685, 686,
	0, 618, 0, 610, 611, 612, 687, 613, 688, 0,
	614, 615, 616, 617, 0, 619, 620, 0, 0, 621,
	622, 623, 625, 626, 624, 627, 0, 628, 0, 0,
	629, 630, 631, 689, 690, 691, 0, 633, 632, 634,
	692, 635, 636, 0, 0, 0, 0, 637, 638, 693,
	639, 640, 641, 1347, 1346, 0, 0, 0, 0, 1344,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	280, 282, 281, 283, 284, 285, 286, 0, 287, 288,
	0, 0, 1655, 0, 0, 642, 0, 0, 0, 0,
	289, 290, 1207, 291, 292, 293, 294, 295, 296, 643,
	644, 0, 297, 645, 298, 646, 0, 647, 299, 300,
	301, 302, 303, 304, 0, 0, 0, 305, 648, 649,
	650, 0, 306, 307, 651, 0, 1352, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 1208, 330, 331, 332, 0,
	0, 0, 0, 0, 0, 0, 333, 334, 335, 336,
	337, 0, 338, 340, 652, 653, 0, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 350, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 654, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 655, 656, 370, 0, 277, 0,
	0, 0, 0, 0, 371, 372, 373, 657, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 1209, 378,
	379, 380, 658, 659, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 660, 0, 661, 391, 0,
	392, 393, 394, 395, 396, 662, 663, 664, 480, 1211,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 408, 0, 1210, 407, 665,
	666, 0, 667, 0, 409, 410, 1212, 668, 1213, 411,
	412, 413, 1214, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 669,
	1215, 425, 426, 1216, 0, 427, 428, 429, 430, 431,
	432, 435, 0, 0, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 1217, 461, 462, 463, 464, 470, 472,
	473, 468, 469, 471, 474, 475, 466, 467, 1218, 476,
	465, 0, 0, 1219, 477, 478, 0, 670, 479, 671,
	481, 482, 0, 0, 483, 0, 0, 0, 485, 486,
	487, 0, 0, 488, 489, 672, 1220, 490, 1221, 673,
	491, 492, 484, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 0, 502, 503, 674, 504, 505, 506, 675,
	507, 508, 509, 676, 510, 677, 511, 512, 0, 513,
	514, 0, 515, 516, 517, 518, 519, 520, 521, 678,
	522, 523, 525, 524, 526, 0, 527, 0, 528, 529,
	530, 0, 0, 0, 0, 0, 531, 0, 533, 534,
	535, 536, 532, 537, 538, 539, 540, 541, 0, 542,
	543, 544, 1222, 545, 546, 547, 548, 549, 679, 550,
	0, 551, 552, 558, 559, 560, 553, 554, 561, 562,
	563, 564, 565, 0, 567, 568, 566, 569, 570, 571,
	0, 572, 573, 555, 556, 574, 575, 1223, 576, 577,
	578, 579, 580, 581, 582, 680, 0, 583, 0, 584,
	585, 586, 588, 557, 589, 594, 595, 681, 590, 591,
	592, 593, 682, 597, 598, 0, 599, 600, 0, 596,
	587, 0, 601, 602, 603, 604, 605, 606, 607, 364,
	608, 0, 609, 683, 684, 685, 686, 0, 618, 0,
	610, 611, 612, 687, 613, 688, 0, 614, 615, 616,
	617, 0, 619, 620, 0, 0, 621, 622, 623, 625,
	626, 624, 627, 0, 628, 0, 0, 629, 630, 631,
	689, 690, 691, 0, 633, 632, 634, 692, 635, 636,
	0, 1087, 0, 274, 637, 638, 693, 639, 640, 641,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	280, 282, 281, 283, 284, 285, 286, 0, 287, 288,
	0, 0, 0, 0, 0, 642, 0, 0, 0, 1637,
	289, 290, 0, 291, 292, 293, 294, 295, 296, 643,
	644, 0, 297, 645, 298, 646, 0, 647, 299, 300,
	301, 302, 303, 304, 0, 0, 0, 305, 648, 649,
	650, 0, 306, 307, 651, 0, 0, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 0, 330, 331, 332, 0,
	0, 0, 0, 0, 0, 0, 333, 334, 335, 336,
	337, 0, 338, 340, 652, 653, 0, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 350, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 654, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 655, 656, 370, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 657, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 658, 659, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 660, 0, 661, 391, 0,
	392, 393, 394, 395, 396, 662, 663, 664, 480, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 408, 0, 0, 407, 665,
	666, 0, 667, 0, 409, 410, 0, 668, 0, 411,
	412, 413, 0, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 669,
	0, 425, 426, 0, 0, 427, 428, 429, 430, 431,
	432, 435, 0, 0, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 0, 461, 462, 463, 464, 470, 472,
	473, 468, 469, 471, 474, 475, 466, 467, 0, 476,
	465, 0, 0, 0, 477, 478, 0, 670, 479, 671,
	481, 482, 0, 0, 483, 0, 0, 0, 485, 486,
	487, 0, 0, 488, 489, 672, 0, 490, 0, 673,
	491, 492, 484, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 0, 502, 503, 674, 504, 505, 506, 675,
	507, 508, 509, 676, 510, 677, 511, 512, 0, 513,
	514, 0, 515, 516, 517, 518, 519, 520, 521, 678,
	522, 523, 525, 524, 526, 0, 527, 0, 528, 529,
	530, 0, 0, 0, 0, 0, 531, 0, 533, 534,
	535, 536, 532, 537, 538, 539, 540, 541, 0, 542,
	543, 544, 0, 545, 546, 547, 548, 549, 679, 550,
	0, 551, 552, 558, 559, 560, 553, 554, 561, 562,
	563, 564, 565, 239, 567, 568, 566, 569, 570, 571,
	0, 572, 573, 555, 556, 574, 575, 0, 576, 577,
	578, 579, 580, 581, 582, 680, 0, 583, 0, 584,
	585, 586, 588, 557, 589, 594, 595, 681, 590, 591,
	592, 593, 682, 597, 598, 0, 599, 600, 0, 596,
	587, 241, 601, 602, 603, 604, 605, 606, 607, 364,
	608, 0, 609, 683, 684, 685, 686, 0, 618, 0,
	610, 611, 612, 687, 613, 688, 0, 614, 615, 616,
	617, 0, 619, 620, 0, 0, 621, 622, 623, 625,
	626, 624, 627, 0, 628, 0, 0, 629, 630, 631,
	1631, 690, 691, 0, 633, 632, 634, 692, 635, 636,
	274, 0, 0, 233, 637, 638, 693, 639, 640, 641,
	0, 0, 234, 0, 0, 0, 0, 280, 282, 281,
	283, 284, 285, 286, 0, 287, 288, 0, 0, 0,
	0, 0, 642, 0, 0, 0, 0, 289, 290, 193,
	291, 292, 293, 294, 295, 296, 643, 644, 0, 297,
	645, 298, 646, 0, 647, 299, 300, 301, 302, 303,
	304, 0, 0, 0, 305, 648, 649, 650, 0, 306,
	307, 651, 0, 0, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 0, 330, 331, 332, 0, 0, 0, 0,
	0, 0, 0, 333, 334, 335, 336, 337, 0, 338,
	340, 652, 653, 0, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 350, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	654, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 655, 656, 370, 0, 277, 0, 0, 0, 0,
	0, 371, 372, 373, 657, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 658,
	659, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 660, 0, 661, 391, 0, 392, 393, 394,
	395, 396, 662, 663, 664, 480, 0, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 278, 404,
	405, 406, 408, 0, 0, 407, 665, 666, 0, 667,
	0, 409, 410, 0, 668, 0, 411, 412, 413, 0,
	414, 0, 0, 0, 415, 416, 417, 418, 419, 420,
	0, 421, 423, 422, 0, 424, 669, 0, 425, 426,
	0, 0, 427, 428, 429, 430, 431, 432, 435, 0,
	0, 433, 434, 436, 437, 0, 438, 439, 441, 444,
	440, 442, 443, 445, 458, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 460, 0, 459,
	0, 461, 462, 463, 464, 470, 472, 473, 468, 469,
	471, 474, 475, 466, 467, 0, 476, 465, 0, 279,
	0, 477, 478, 0, 670, 479, 671, 481, 482, 0,
	0, 483, 0, 0, 0, 485, 486, 487, 0, 0,
	488, 489, 672, 0, 490, 0, 673, 491, 492, 484,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 0,
	502, 503, 674, 504, 505, 506, 675, 507, 508, 509,
	676, 510, 677, 511, 512, 0, 513, 514, 0, 515,
	516, 517, 518, 519, 520, 521, 678, 522, 523, 525,
	524, 526, 0, 527, 0, 528, 529, 530, 0, 0,
	0, 0, 0, 531, 0, 533, 534, 535, 536, 532,
	537, 538, 539, 540, 541, 0, 542, 543, 544, 0,
	545, 546, 547, 548, 549, 679, 550, 0, 551, 552,
	558, 559, 560, 553, 554, 561, 562, 563, 564, 565,
	0, 567, 568, 566, 569, 570, 571, 0, 572, 573,
	555, 556, 574, 575, 0, 576, 577, 578, 579, 580,
	581, 582, 680, 0, 583, 0, 584, 585, 586, 588,
	557, 589, 594, 595, 681, 590, 591, 592, 593, 682,
	597, 598, 0, 599, 600, 0, 596, 587, 0, 601,
	602, 603, 604, 605, 606, 607, 364, 608, 0, 609,
	683, 684, 685, 686, 0, 618, 0, 610, 611, 612,
	687, 613, 688, 0, 614, 615, 616, 617, 0, 619,
	620, 0, 0, 621, 622, 623, 625, 626, 624, 627,
	0, 628, 0, 0, 629, 630, 631, 689, 690, 691,
	0, 633, 632, 634, 692, 635, 636, 0, 0, 0,
	1265, 637, 638, 693, 639, 640, 641, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 280, 282, 281,
	283, 284, 285, 286, 0, 287, 288, 0, 0, 0,
	0, 0, 1167, 0, 0, 0, 1997, 289, 290, 1207,
	291, 292, 293, 294, 295, 296, 643, 644, 0, 297,
	645, 298, 646, 0, 647, 299, 300, 301, 302, 303,
	304, 0, 1166, 0, 305, 648, 649, 650, 0, 306,
	307, 1173, 0, 1154, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 1208, 330, 331, 332, 1157, 1155, 1156, 1163,
	1159, 1158, 1162, 333, 334, 335, 336, 337, 0, 338,
	340, 652, 653, 0, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 350, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	654, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 1198, 1199, 370, 0, 277, 0, 0, 0, 0,
	0, 371, 372, 373, 657, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 1209, 378, 379, 380, 658,
	659, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 1205, 0, 661, 391, 0, 392, 393, 394,
	395, 396, 1168, 1169, 1172, 480, 1211, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 278, 404,
	405, 406, 408, 0, 1210, 407, 665, 666, 0, 667,
	0, 409, 410, 1212, 1170, 1213, 411, 412, 413, 1214,
	414, 0, 0, 0, 415, 416, 417, 418, 419, 420,
	0, 421, 423, 422, 0, 424, 1206, 1215, 425, 426,
	1216, 0, 427, 428, 429, 430, 431, 432, 435, 1161,
	1160, 433, 434, 436, 437, 0, 438, 439, 441, 444,
	440, 442, 443, 445, 458, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 460, 0, 459,
	1217, 461, 462, 463, 464, 470, 472, 473, 468, 469,
	471, 474, 475, 466, 467, 1218, 476, 465, 0, 279,
	1219, 477, 478, 0, 1171, 479, 671, 481, 482, 0,
	0, 483, 0, 0, 0, 485, 486, 487, 0, 0,
	488, 489, 672, 1220, 490, 1221, 1200, 491, 492, 484,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 0,
	502, 503, 674, 504, 505, 506, 675, 507, 508, 509,
	1201, 510, 677, 511, 512, 0, 513, 514, 0, 515,
	516, 517, 518, 519, 520, 521, 678, 522, 523, 525,
	524, 526, 0, 527, 0, 528, 529, 530, 0, 0,
	0, 0, 0, 531, 0, 533, 534, 535, 536, 532,
	537, 538, 539, 540, 541, 0, 542, 543, 544, 1222,
	545, 546, 547, 548, 549, 679, 550, 0, 551, 552,
	558, 559, 560, 553, 554, 561, 562, 563, 564, 565,
	0, 567, 568, 566, 569, 570, 571, 1164, 572, 573,
	555, 556, 574, 575, 1223, 576, 577, 578, 579, 580,
	581, 582, 680, 0, 583, 0, 584, 585, 586, 588,
	557, 589, 594, 595, 681, 590, 591, 592, 593, 1202,
	597, 598, 0, 599, 600, 0, 596, 587, 0, 601,
	602, 603, 604, 605, 606, 607, 364, 608, 0, 609,
	683, 684, 685, 686, 0, 618, 0, 610, 611, 612,
	1203, 613, 1204, 0, 614, 615, 616, 617, 0, 619,
	620, 0, 0, 621, 622, 623, 625, 626, 624, 627,
	1165, 628, 0, 0, 629, 630, 631, 689, 690, 691,
	0, 633, 632, 634, 692, 635, 636, 274, 3107, 0,
	0, 637, 638, 693, 639, 640, 641, 0, 0, 0,
	0, 0, 0, 0, 280, 282, 281, 283, 284, 285,
	286, 0, 287, 288, 0, 0, 0, 0, 0, 642,
	0, 0, 0, 0, 289, 290, 0, 291, 292, 293,
	294, 295, 296, 643, 644, 0, 297, 645, 298, 646,
	0, 647, 299, 300, 301, 302, 303, 304, 0, 0,
	0, 305, 648, 649, 650, 0, 306, 307, 651, 0,
	0, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 0,
	330, 331, 332, 0, 0, 0, 0, 0, 0, 0,
	333, 334, 335, 336, 337, 0, 338, 340, 652, 653,
	0, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 350, 351, 0, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 654, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 655, 656,
	370, 0, 0, 0, 0, 0, 0, 0, 371, 372,
	373, 657, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 658, 659, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 660,
	0, 661, 391, 0, 392, 393, 394, 395, 396, 662,
	663, 664, 480, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 0, 404, 405, 406, 408,
	0, 0, 407, 665, 666, 0, 667, 0, 409, 410,
	0, 668, 0, 411, 412, 413, 0, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 0, 424, 669, 0, 425, 426, 0, 0, 427,
	428, 429, 430, 431, 432, 435, 0, 0, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 459, 0, 461, 462,
	463, 464, 470, 472, 473, 468, 469, 471, 474, 475,
	466, 467, 0, 476, 465, 0, 0, 0, 477, 478,
	0, 670, 479, 671, 481, 482, 0, 0, 483, 0,
	0, 0, 485, 486, 487, 0, 0, 488, 489, 672,
	0, 490, 0, 673, 491, 492, 484, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 0, 502, 503, 674,
	504, 505, 506, 675, 507, 508, 509, 676, 510, 677,
	511, 512, 0, 513, 514, 0, 515, 516, 517, 518,
	519, 520, 521, 678, 522, 523, 525, 524, 526, 0,
	527, 0, 528, 529, 530, 0, 0, 0, 0, 0,
	531, 0, 533, 534, 535, 536, 532, 537, 538, 539,
	540, 541, 0, 542, 543, 544, 0, 545, 546, 547,
	548, 549, 679, 550, 0, 551, 552, 558, 559, 560,
	553, 554, 561, 562, 563, 564, 565, 0, 567, 568,
	566, 569, 570, 571, 0, 572, 573, 555, 556, 574,
	575, 0, 576, 577, 578, 579, 580, 581, 582, 680,
	0, 583, 0, 584, 585, 586, 588, 557, 589, 594,
	595, 681, 590, 591, 592, 593, 682, 597, 598, 0,
	599, 600, 0, 596, 587, 0, 601, 602, 603, 604,
	605, 606, 607, 364, 608, 0, 609, 683, 684, 685,
	686, 0, 618, 0, 610, 611, 612, 687, 613, 688,
	0, 614, 615, 616, 617, 0, 619, 620, 0, 0,
	621, 622, 623, 625, 626, 624, 627, 0, 628, 0,
	0, 629, 630, 631, 689, 690, 691, 0, 633, 632,
	634, 692, 635, 636, 274, 0, 0, 0, 637, 638,
	693, 639, 640, 641, 0, 0, 0, 0, 0, 0,
	0, 280, 282, 281, 283, 284, 285, 286, 0, 287,
	288, 0, 0, 0, 0, 0, 642, 0, 0, 0,
	0, 289, 290, 4933, 291, 292, 293, 294, 295, 296,
	643, 644, 0, 297, 645, 298, 646, 0, 647, 299,
	300, 301, 302, 303, 304, 0, 0, 0, 305, 648,
	649, 650, 0, 306, 307, 651, 0, 0, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	325, 326, 0, 327, 328, 329, 0, 330, 331, 332,
	0, 0, 0, 0, 0, 0, 0, 333, 334, 335,
	336, 337, 0, 338, 340, 652, 653, 0, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 350, 351, 0, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 654, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 655, 656, 370, 0, 277,
	0, 0, 0, 0, 0, 371, 372, 373, 657, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 658, 659, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 660, 0, 661, 391,
	0, 392, 393, 394, 395, 396, 662, 663, 664, 480,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 278, 404, 405, 406, 408, 0, 0, 407,
	665, 666, 0, 667, 0, 409, 410, 0, 668, 0,
	411, 412, 413, 0, 414, 0, 0, 0, 415, 416,
	417, 418, 419, 420, 0, 421, 423, 422, 0, 424,
	669, 0, 425, 426, 0, 0, 427, 428, 429, 430,
	431, 432, 435, 0, 0, 433, 434, 436, 437, 0,
	438, 439, 441, 444, 440, 442, 443, 445, 458, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 460, 0, 459, 0, 461, 462, 463, 464, 470,
	472, 473, 468, 469, 471, 474, 475, 466, 467, 0,
	476, 465, 0, 279, 0, 477, 478, 0, 670, 479,
	671, 481, 482, 0, 0, 483, 0, 0, 0, 485,
	486, 487, 0, 0, 488, 489, 672, 0, 490, 0,
	673, 491, 492, 484, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 0, 502, 503, 674, 504, 505, 506,
	675, 507, 508, 509, 676, 510, 677, 511, 512, 0,
	513, 514, 0, 515, 516, 517, 518, 519, 520, 521,
	678, 522, 523, 525, 524, 526, 0, 527, 0, 528,
	529, 530, 0, 0, 0, 0, 0, 531, 0, 533,
	534, 535, 536, 532, 537, 538, 539, 540, 541, 0,
	542, 543, 544, 0, 545, 546, 547, 548, 549, 679,
	550, 0, 551, 552, 558, 559, 560, 553, 554, 561,
	562, 563, 564, 565, 0, 567, 568, 566, 569, 570,
	571, 0, 572, 573, 555, 556, 574, 575, 0, 576,
	577, 578, 579, 580, 581, 582, 680, 0, 583, 0,
	584, 585, 586, 588, 557, 589, 594, 595, 681, 590,
	591, 592, 593, 682, 597, 598, 0, 599, 600, 0,
	596, 587, 0, 601, 602, 603, 604, 605, 606, 607,
	364, 608, 0, 609, 683, 684, 685, 686, 0, 618,
	0, 610, 611, 612, 687, 613, 688, 0, 614, 615,
	616, 617, 0, 619, 620, 0, 0, 621, 622, 623,
	625, 626, 624, 627, 0, 628, 0, 0, 629, 630,
	631, 689, 690, 691, 0, 633, 632, 634, 692, 635,
	636, 0, 274, 0, 0, 637, 638, 693, 639, 640,
	641, 0, 0, 0, 0, 0, 0, 0, 0, 280,
	282, 281, 283, 284, 285, 286, 0, 287, 288, 0,
	0, 0, 0, 0, 642, 0, 0, 0, 3613, 289,
	290, 0, 291, 292, 293, 294, 295, 296, 643, 644,
	0, 297, 645, 298, 646, 0, 647, 299, 300, 301,
	302, 303, 304, 0, 0, 0, 305, 648, 649, 650,
	0, 306, 307, 651, 0, 0, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	0, 327, 328, 329, 0, 330, 331, 332, 0, 0,
	0, 0, 0, 0, 0, 333, 334, 335, 336, 337,
	0, 338, 340, 652, 653, 0, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	350, 351, 0, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 654, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 655, 656, 370, 0, 277, 0, 0,
	0, 0, 0, 371, 372, 373, 657, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 658, 659, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 660, 0, 661, 391, 0, 392,
	393, 394, 395, 396, 662, 663, 664, 480, 0, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	278, 404, 405, 406, 408, 0, 0, 407, 665, 666,
	0, 667, 0, 409, 410, 0, 668, 0, 411, 412,
	413, 0, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 0, 421, 423, 422, 0, 424, 669, 0,
	425, 426, 0, 0, 427, 428, 429, 430, 431, 432,
	435, 0, 0, 433, 434, 436, 437, 0, 438, 439,
	441, 444, 440, 442, 443, 445, 458, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 460,
	0, 459, 0, 461, 462, 463, 464, 470, 472, 473,
	468, 469, 471, 474, 475, 466, 467, 0, 476, 465,
	0, 279, 0, 477, 478, 0, 670, 479, 671, 481,
	482, 0, 0, 483, 0, 0, 0, 485, 486, 487,
	0, 0, 488, 489, 672, 0, 490, 0, 673, 491,
	492, 484, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 0, 502, 503, 674, 504, 505, 506, 675, 507,
	508, 509, 676, 510, 677, 511, 512, 0, 513, 514,
	0, 515, 516, 517, 518, 519, 520, 521, 678, 522,
	523, 525, 524, 526, 0, 527, 0, 528, 529, 530,
	0, 0, 0, 0, 0, 531, 0, 533, 534, 535,
	536, 532, 537, 538, 539, 540, 541, 0, 542, 543,
	544, 0, 545, 546, 547, 548, 549, 679, 550, 0,
	551, 552, 558, 559, 560, 553, 554, 561, 562, 563,
	564, 565, 0, 567, 568, 566, 569, 570, 571, 0,
	572, 573, 555, 556, 574, 575, 0, 576, 577, 578,
	579, 580, 581, 582, 680, 0, 583, 0, 584, 585,
	586, 588, 557, 589, 594, 595, 681, 590, 591, 592,
	593, 682, 597, 598, 0, 599, 600, 0, 596, 587,
	0, 601, 602, 603, 604, 605, 606, 607, 364, 608,
	0, 609, 683, 684, 685, 686, 0, 618, 0, 610,
	611, 612, 687, 613, 688, 0, 614, 615, 616, 617,
	0, 619, 620, 0, 0, 621, 622, 623, 625, 626,
	624, 627, 0, 628, 0, 0, 629, 630, 631, 689,
	690, 691, 0, 633, 632, 634, 692, 635, 636, 0,
	274, 0, 0, 637, 638, 693, 639, 640, 641, 0,
	0, 0, 0, 0, 0, 0, 0, 280, 282, 281,
	283, 284, 285, 286, 0, 287, 288, 0, 0, 0,
	0, 0, 642, 0, 0, 0, 1625, 289, 290, 0,
	291, 292, 293, 294, 295, 296, 643, 644, 0, 297,
	645, 298, 646, 0, 647, 299, 300, 301, 302, 303,
	304, 0, 0, 0, 305, 648, 649, 650, 0, 306,
	307, 651, 0, 0, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 0, 330, 331, 332, 0, 0, 0, 0,
	0, 0, 0, 333, 334, 335, 336, 337, 0, 338,
	340, 652, 653, 0, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 350, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	654, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 655, 656, 370, 0, 0, 0, 0, 0, 0,
	0, 371, 372, 373, 657, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 658,
	659, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 660, 0, 661, 391, 0, 392, 393, 394,
	395, 396, 662, 663, 664, 480, 0, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 0, 404,
	405, 406, 408, 0, 0, 407, 665, 666, 0, 667,
	0, 409, 410, 0, 668, 0, 411, 412, 413, 0,
	414, 0, 0, 0, 415, 416, 417, 418, 419, 420,
	0, 421, 423, 422, 0, 424, 669, 0, 425, 426,
	0, 0, 427, 428, 429, 430, 431, 432, 435, 0,
	0, 433, 434, 436, 437, 0, 438, 439, 441, 444,
	440, 442, 443, 445, 458, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 460, 0, 459,
	0, 461, 462, 463, 464, 470, 472, 473, 468, 469,
	471, 474, 475, 466, 467, 0, 476, 465, 0, 0,
	0, 477, 478, 0, 670, 479, 671, 481, 482, 0,
	0, 483, 0, 0, 0, 485, 486, 487, 0, 0,
	488, 489, 672, 0, 490, 0, 673, 491, 492, 484,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 0,
	502, 503, 674, 504, 505, 506, 675, 507, 508, 509,
	676, 510, 677, 511, 512, 0, 513, 514, 0, 515,
	516, 517, 518, 519, 520, 521, 678, 522, 523, 525,
	524, 526, 0, 527, 0, 528, 529, 530, 0, 0,
	0, 0, 0, 531, 0, 533, 534, 535, 536, 532,
	537, 538, 539, 540, 541, 0, 542, 543, 544, 0,
	545, 546, 547, 548, 549, 679, 550, 0, 551, 552,
	558, 559, 560, 553, 554, 561, 562, 563, 564, 565,
	0, 567, 568, 566, 569, 570, 571, 0, 572, 573,
	555, 556, 574, 575, 0, 576, 577, 578, 579, 580,
	581, 582, 680, 0, 583, 0, 584, 585, 586, 588,
	557, 589, 594, 595, 681, 590, 591, 592, 593, 682,
	597, 598, 0, 599, 600, 0, 596, 587, 0, 601,
	602, 603, 604, 605, 606, 607, 364, 608, 0, 609,
	683, 684, 685, 686, 0, 618, 0, 610, 611, 612,
	687, 613, 688, 0, 614, 615, 616, 617, 0, 619,
	620, 0, 0, 621, 622, 623, 625, 626, 624, 627,
	0, 628, 0, 0, 629, 630, 631, 689, 690, 691,
	0, 633, 632, 634, 692, 635, 636, 274, 0, 0,
	0, 637, 638, 693, 639, 640, 641, 0, 0, 0,
	0, 0, 0, 0, 280, 282, 281, 283, 284, 285,
	286, 0, 287, 288, 0, 0, 0, 0, 0, 642,
	0, 0, 0, 0, 289, 290, 3095, 291, 292, 293,
	294, 295, 296, 643, 644, 0, 297, 645, 298, 646,
	0, 647, 299, 300, 301, 302, 303, 304, 0, 0,
	0, 305, 648, 649, 650, 0, 306, 307, 651, 0,
	0, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 0,
	330, 331, 332, 0, 0, 0, 0, 0, 0, 0,
	333, 334, 335, 336, 337, 0, 338, 340, 652, 653,
	0, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 350, 351, 0, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 654, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 655, 656,
	370, 0, 0, 0, 0, 0, 0, 0, 371, 372,
	373, 657, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 658, 659, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 660,
	0, 661, 391, 0, 392, 393, 394, 395, 396, 662,
	663, 664, 480, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 0, 404, 405, 406, 408,
	0, 0, 407, 665, 666, 0, 667, 0, 409, 410,
	0, 668, 0, 411, 412, 413, 0, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 0, 424, 669, 0, 425, 426, 0, 0, 427,
	428, 429, 430, 431, 432, 435, 0, 0, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 459, 0, 461, 462,
	463, 464, 470, 472, 473, 468, 469, 471, 474, 475,
	466, 467, 0, 476, 465, 0, 0, 0, 477, 478,
	0, 670, 479, 671, 481, 482, 0, 0, 483, 0,
	0, 0, 485, 486, 487, 0, 0, 488, 489, 672,
	0, 490, 0, 673, 491, 492, 484, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 0, 502, 503, 674,
	504, 505, 506, 675, 507, 508, 509, 676, 510, 677,
	511, 512, 0, 513, 514, 0, 515, 516, 517, 518,
	519, 520, 521, 678, 522, 523, 525, 524, 526, 0,
	527, 0, 528, 529, 530, 0, 0, 0, 0, 0,
	531, 0, 533, 534, 535, 536, 532, 537, 538, 539,
	540, 541, 0, 542, 543, 544, 0, 545, 546, 547,
	548, 549, 679, 550, 0, 551, 552, 558, 559, 560,
	553, 554, 561, 562, 563, 564, 565, 0, 567, 568,
	566, 569, 570, 571, 0, 572, 573, 555, 556, 574,
	575, 0, 576, 577, 578, 579, 580, 581, 582, 680,
	0, 583, 0, 584, 585, 586, 588, 557, 589, 594,
	595, 681, 590, 591, 592, 593, 682, 597, 598, 0,
	599, 600, 0, 596, 587, 0, 601, 602, 603, 604,
	605, 606, 607, 364, 608, 0, 609, 683, 684, 685,
	686, 0, 618, 0, 610, 611, 612, 687, 613, 688,
	0, 614, 615, 616, 617, 0, 619, 620, 0, 0,
	621, 622, 623, 625, 626, 624, 627, 0, 628, 0,
	0, 629, 630, 631, 689, 690, 691, 0, 633, 632,
	634, 692, 635, 636, 274, 0, 0, 0, 637, 638,
	693, 639, 640, 641, 0, 0, 0, 0, 0, 0,
	0, 280, 282, 281, 283, 284, 285, 286, 0, 287,
	288, 0, 0, 0, 0, 0, 642, 0, 0, 0,
	0, 289, 290, 3777, 291, 292, 293, 294, 295, 296,
	643, 644, 0, 297, 645, 298, 646, 0, 647, 299,
	300, 301, 302, 303, 304, 0, 0, 0, 305, 648,
	649, 650, 0, 306, 307, 651, 0, 0, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	325, 326, 0, 327, 328, 329, 0, 330, 331, 332,
	0, 0, 0, 0, 0, 0, 0, 333, 334, 335,
	336, 337, 0, 338, 340, 652, 653, 0, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 350, 351, 0, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 654, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 655, 656, 370, 0, 0,
	0, 0, 0, 0, 0, 371, 372, 373, 657, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 658, 659, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 660, 0, 661, 391,
	0, 392, 393, 394, 395, 396, 662, 663, 664, 480,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 0, 404, 405, 406, 408, 0, 0, 407,
	665, 666, 0, 667, 0, 409, 410, 0, 668, 0,
	411, 412, 413, 0, 414, 0, 0, 0, 415, 416,
	417, 418, 419, 420, 0, 421, 423, 422, 0, 424,
	669, 0, 425, 426, 0, 0, 427, 428, 429, 430,
	431, 432, 435, 0, 0, 433, 434, 436, 437, 0,
	438, 439, 441, 444, 440, 442, 443, 445, 458, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 460, 0, 459, 0, 461, 462, 463, 464, 470,
	472, 473, 468, 469, 471, 474, 475, 466, 467, 0,
	476, 465, 0, 0, 0, 477, 478, 0, 670, 479,
	671, 481, 482, 0, 0, 483, 0, 0, 0, 485,
	486, 487, 0, 0, 488, 489, 672, 0, 490, 0,
	673, 491, 492, 484, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 0, 502, 503, 674, 504, 505, 506,
	675, 507, 508, 509, 676, 510, 677, 511, 512, 0,
	513, 514, 0, 515, 516, 517, 518, 519, 520, 521,
	678, 522, 523, 525, 524, 526, 0, 527, 0, 528,
	529, 530, 0, 0, 0, 0, 0, 531, 0, 533,
	534, 535, 536, 532, 537, 538, 539, 540, 541, 0,
	542, 543, 544, 0, 545, 546, 547, 548, 549, 679,
	550, 0, 551, 552, 558, 559, 560, 553, 554, 561,
	562, 563, 564, 565, 0, 567, 568, 566, 569, 570,
	571, 0, 572, 573, 555, 556, 574, 575, 0, 576,
	577, 578, 579, 580, 581, 582, 680, 0, 583, 0,
	584, 585, 586, 588, 557, 589, 594, 595, 681, 590,
	591, 592, 593, 682, 597, 598, 0, 599, 600, 0,
	596, 587, 0, 601, 602, 603, 604, 605, 606, 607,
	364, 608, 0, 609, 683, 684, 685, 686, 0, 618,
	0, 610, 611, 612, 687, 613, 688, 0, 614, 615,
	616, 617, 0, 619, 620, 0, 0, 621, 622, 623,
	625, 626, 624, 627, 0, 628, 0, 0, 629, 630,
	631, 689, 690, 691, 0, 633, 632, 634, 692, 635,
	636, 0, 919, 0, 820, 637, 638, 693, 639, 640,
	641, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 280, 282, 281, 283, 284, 285, 286, 0, 287,
	288, 0, 0, 0, 0, 0, 642, 0, 0, 0,
	2328, 289, 290, 0, 291, 292, 293, 294, 295, 296,
	643, 644, 0, 297, 645, 298, 646, 0, 647, 299,
	300, 301, 302, 303, 304, 0, 0, 0, 305, 648,
	649, 650, 0, 306, 307, 651, 0, 0, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	325, 326, 0, 327, 328, 329, 0, 330, 331, 332,
	0, 0, 0, 0, 0, 0, 0, 333, 334, 335,
	827, 337, 0, 338, 340, 652, 653, 0, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 350, 351, 0, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 654, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 655, 656, 370, 0, 277,
	0, 0, 0, 0, 0, 371, 372, 373, 657, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 917, 0,
	378, 379, 380, 658, 659, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 660, 0, 661, 391,
	0, 392, 393, 394, 395, 396, 662, 663, 664, 480,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 278, 404, 405, 406, 408, 0, 0, 407,
	665, 666, 0, 667, 0, 409, 410, 0, 668, 0,
	411, 412, 413, 0, 414, 0, 0, 0, 415, 416,
	417, 418, 419, 420, 0, 421, 423, 422, 0, 424,
	669, 0, 425, 426, 0, 0, 427, 428, 429, 430,
	431, 432, 435, 0, 0, 433, 434, 436, 437, 0,
	438, 439, 441, 444, 440, 442, 443, 445, 458, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 460, 0, 459, 0, 461, 462, 463, 464, 470,
	472, 473, 468, 469, 471, 474, 475, 466, 467, 0,
	476, 465, 0, 279, 0, 477, 478, 0, 670, 479,
	671, 481, 482, 0, 0, 483, 0, 0, 0, 485,
	486, 487, 0, 0, 488, 489, 672, 0, 490, 0,
	673, 491, 492, 484, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 0, 502, 503, 674, 504, 505, 506,
	675, 507, 508, 509, 676, 510, 677, 511, 512, 0,
	513, 514, 0, 515, 516, 517, 518, 519, 520, 521,
	678, 522, 523, 525, 524, 526, 0, 527, 0, 528,
	529, 530, 0, 0, 0, 0, 0, 531, 0, 533,
	534, 535, 536, 532, 537, 538, 539, 540, 541, 0,
	542, 543, 544, 0, 545, 546, 547, 548, 549, 679,
	550, 0, 551, 552, 558, 559, 560, 553, 554, 561,
	562, 563, 564, 565, 0, 567, 568, 566, 569, 570,
	571, 0, 572, 573, 555, 556, 574, 575, 0, 576,
	577, 578, 579, 580, 581, 582, 680, 0, 583, 0,
	584, 585, 586, 588, 557, 589, 594, 595, 681, 590,
	591, 592, 593, 682, 597, 598, 0, 599, 600, 0,
	596, 587, 825, 601, 602, 603, 604, 605, 826, 607,
	364, 608, 0, 609, 683, 684, 685, 686, 0, 618,
	0, 610, 611, 612, 687, 613, 688, 0, 614, 615,
	616, 617, 0, 619, 620, 0, 0, 621, 622, 623,
	625, 626, 624, 627, 0, 628, 0, 0, 629, 630,
	631, 689, 690, 691, 820, 633, 632, 634, 692, 635,
	636, 0, 0, 0, 0, 637, 638, 693, 639, 640,
	641, 280, 282, 281, 283, 284, 285, 286, 2066, 287,
	288, 0, 0, 0, 0, 0, 642, 0, 0, 0,
	0, 289, 290, 830, 291, 292, 293, 294, 295, 296,
	643, 644, 0, 297, 645, 298, 646, 0, 647, 299,
	300, 301, 302, 303, 304, 0, 0, 0, 305, 648,
	649, 650, 0, 306, 307, 651, 0, 0, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	325, 326, 0, 327, 328, 329, 0, 330, 331, 332,
	0, 0, 0, 0, 0, 0, 0, 333, 334, 335,
	827, 337, 0, 338, 340, 652, 653, 0, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 350, 351, 0, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 654, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 655, 656, 370, 0, 277,
	0, 0, 0, 0, 0, 371, 372, 373, 657, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 658, 659, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 660, 0, 661, 391,
	0, 392, 393, 394, 395, 396, 662, 663, 664, 480,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 278, 404, 405, 406, 408, 0, 0, 407,
	665, 666, 0, 667, 0, 409, 410, 0, 668, 0,
	411, 412, 413, 0, 414, 0, 0, 0, 415, 416,
	417, 418, 419, 420, 0, 421, 423, 422, 0, 424,
	669, 0, 425, 426, 0, 0, 427, 428, 429, 430,
	431, 432, 435, 0, 0, 433, 434, 436, 437, 0,
	438, 439, 441, 444, 440, 442, 443, 445, 458, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 460, 0, 459, 0, 461, 462, 463, 464, 470,
	472, 473, 468, 469, 471, 474, 475, 466, 467, 0,
	476, 465, 0, 279, 0, 477, 478, 0, 670, 479,
	671, 481, 482, 0, 0, 483, 0, 0, 0, 485,
	486, 487, 0, 0, 488, 489, 672, 0, 490, 0,
	673, 491, 492, 484, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 0, 502, 503, 674, 504, 505, 506,
	675, 507, 508, 509, 676, 510, 677, 511, 512, 0,
	513, 514, 0, 515, 516, 517, 518, 519, 520, 521,
	678, 522, 523, 525, 524, 526, 0, 527, 0, 528,
	529, 530, 0, 0, 0, 0, 0, 531, 0, 533,
	534, 535, 536, 532, 537, 538, 539, 540, 541, 0,
	542, 543, 544, 0, 545, 546, 547, 548, 549, 679,
	550, 0, 551, 552, 558, 559, 560, 553, 554, 2065,
	562, 563, 564, 565, 0, 2067, 568, 566, 569, 570,
	571, 0, 572, 573, 555, 556, 574, 575, 0, 576,
	577, 578, 579, 580, 581, 582, 680, 0, 583, 0,
	584, 585, 586, 588, 557, 589, 594, 595, 681, 590,
	591, 592, 593, 682, 597, 598, 0, 599, 600, 0,
	596, 587, 825, 601, 602, 603, 604, 605, 826, 607,
	364, 608, 0, 609, 683, 684, 685, 686, 0, 618,
	0, 610, 611, 612, 687, 613, 688, 0, 614, 615,
	2064, 617, 0, 619, 620, 0, 0, 621, 622, 623,
	625, 626, 624, 627, 0, 628, 0, 0, 629, 630,
	631, 689, 690, 691, 820, 633, 632, 634, 692, 635,
	636, 0, 0, 0, 0, 637, 638, 693, 639, 640,
	641, 280, 282, 281, 283, 284, 285, 286, 2017, 287,
	288, 0, 0, 0, 0, 0, 642, 0, 0, 0,
	0, 289, 290, 830, 291, 292, 293, 294, 295, 296,
	643, 644, 0, 297, 645, 298, 646, 0, 647, 299,
	300, 301, 302, 303, 304, 0, 0, 0, 305, 648,
	649, 650, 0, 306, 307, 651, 0, 0, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	325, 326, 0, 327, 328, 329, 0, 330, 331, 332,
	0, 0, 0, 0, 0, 0, 0, 333, 334, 335,
	827, 337, 0, 338, 340, 652, 653, 0, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 350, 351, 0, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 654, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 655, 656, 370, 0, 277,
	0, 0, 0, 0, 0, 371, 372, 373, 657, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 658, 659, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 660, 0, 661, 391,
	0, 392, 393, 394, 395, 396, 662, 663, 664, 480,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 278, 404, 405, 406, 408, 0, 0, 407,
	665, 666, 0, 667, 0, 409, 410, 0, 668, 0,
	411, 412, 413, 0, 414, 0, 0, 0, 415, 416,
	417, 418, 419, 420, 0, 421, 423, 422, 0, 424,
	669, 0, 425, 426, 0, 0, 427, 428, 429, 430,
	431, 432, 435, 0, 0, 433, 434, 436, 437, 0,
	438, 439, 441, 444, 440, 442, 443, 445, 458, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 460, 0, 459, 0, 461, 462, 463, 464, 470,
	472, 473, 468, 469, 471, 474, 475, 466, 467, 0,
	476, 465, 0, 279, 0, 477, 478, 0, 670, 479,
	671, 481, 482, 0, 0, 483, 0, 0, 0, 485,
	486, 487, 0, 0, 488, 489, 672, 0, 490, 0,
	673, 491, 492, 484, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 0, 502, 503, 674, 504, 505, 506,
	675, 507, 508, 509, 676, 510, 677, 511, 512, 0,
	513, 514, 0, 515, 516, 517, 518, 519, 520, 521,
	678, 522, 523, 525, 524, 526, 0, 527, 0, 528,
	529, 530, 0, 0, 0, 0, 0, 531, 0, 533,
	534, 535, 536, 532, 537, 538, 539, 540, 541, 0,
	542, 543, 544, 0, 545, 546, 547, 548, 549, 679,
	550, 0, 551, 552, 558, 559, 560, 553, 554, 2016,
	562, 563, 564, 565, 0, 2018, 568, 566, 569, 570,
	571, 0, 572, 573, 555, 556, 574, 575, 0, 576,
	577, 578, 579, 580, 581, 582, 680, 0, 583, 0,
	584, 585, 586, 588, 557, 589, 594, 595, 681, 590,
	591, 592, 593, 682, 597, 598, 0, 599, 600, 0,
	596, 587, 825, 601, 602, 603, 604, 605, 826, 607,
	364, 608, 0, 609, 683, 684, 685, 686, 0, 618,
	0, 610, 611, 612, 687, 613, 688, 0, 614, 615,
	2015, 617, 0, 619, 620, 0, 0, 621, 622, 623,
	625, 626, 624, 627, 0, 628, 0, 0, 629, 630,
	631, 689, 690, 691, 0, 633, 632, 634, 692, 635,
	636, 818, 0, 820, 0, 637, 638, 693, 639, 640,
	641, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	280, 282, 281, 283, 284, 285, 286, 0, 287, 288,
	0, 0, 0, 830, 0, 642, 0, 0, 0, 0,
	289, 290, 0, 291, 292, 293, 294, 295, 296, 643,
	644, 0, 297, 645, 298, 646, 0, 647, 299, 300,
	301, 302, 303, 304, 0, 0, 0, 305, 648, 649,
	650, 0, 306, 307, 651, 0, 0, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 0, 330, 331, 332, 0,
	0, 0, 0, 0, 0, 0, 333, 334, 335, 827,
	337, 0, 338, 340, 652, 653, 0, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 350, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 654, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 655, 656, 370, 0, 277, 0,
	0, 0, 0, 0, 371, 372, 373, 657, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 658, 659, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 660, 0, 661, 391, 0,
	392, 393, 394, 395, 396, 662, 663, 664, 480, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 278, 404, 405, 406, 408, 0, 0, 407, 665,
	666, 0, 667, 0, 409, 410, 0, 668, 0, 411,
	412, 413, 0, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 669,
	0, 425, 426, 0, 0, 427, 428, 429, 430, 431,
	432, 435, 0, 0, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 0, 461, 462, 463, 464, 470, 472,
	473, 468, 469, 471, 474, 475, 466, 467, 0, 476,
	465, 0, 279, 0, 477, 478, 0, 670, 479, 671,
	481, 482, 0, 0, 483, 0, 0, 0, 485, 486,
	487, 0, 0, 488, 489, 672, 0, 490, 0, 673,
	491, 492, 484, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 0, 502, 503, 674, 504, 505, 506, 675,
	507, 508, 509, 676, 510, 677, 511, 512, 0, 513,
	514, 0, 515, 516, 517, 518, 519, 520, 521, 678,
	522, 523, 525, 524, 526, 0, 527, 0, 528, 529,
	530, 0, 0, 0, 0, 0, 531, 0, 533, 534,
	535, 536, 532, 537, 538, 539, 540, 541, 0, 542,
	543, 544, 0, 545, 546, 547, 548, 549, 679, 550,
	0, 551, 552, 558, 559, 560, 553, 554, 561, 562,
	563, 564, 565, 0, 567, 568, 566, 569, 570, 571,
	0, 572, 573, 555, 556, 574, 575, 0, 576, 577,
	578, 579, 580, 581, 582, 680, 0, 583, 0, 584,
	585, 586, 588, 557, 589, 594, 595, 681, 590, 591,
	592, 593, 682, 597, 598, 0, 599, 600, 0, 596,
	587, 825, 601, 602, 603, 604, 605, 826, 607, 364,
	608, 0, 609, 683, 684, 685, 686, 0, 618, 0,
	610, 611, 612, 687, 613, 688, 0, 614, 615, 616,
	617, 0, 619, 620, 0, 0, 621, 622, 623, 625,
	626, 624, 627, 0, 628, 0, 0, 629, 630, 631,
	689, 690, 691, 0, 633, 632, 634, 692, 635, 636,
	2039, 0, 0, 0, 637, 638, 693, 639, 640, 641,
	0, 0, 0, 0, 0, 0, 0, 280, 282, 281,
	283, 284, 285, 286, 0, 287, 288, 0, 0, 0,
	0, 0, 830, 0, 0, 0, 0, 289, 290, 1207,
	291, 292, 293, 294, 295, 296, 0, 2045, 0, 297,
	2035, 298, 2051, 0, 2058, 299, 300, 301, 302, 303,
	304, 0, 0, 0, 305, 2061, 2062, 0, 0, 306,
	307, 0, 0, 1352, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 1208, 330, 331, 332, 0, 0, 0, 0,
	0, 0, 0, 333, 334, 335, 336, 337, 1190, 338,
	340, 2049, 2048, 0, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 1175, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	0, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 0, 0, 370, 0, 0, 0, 0, 0, 0,
	0, 371, 372, 373, 2047, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 1209, 378, 379, 380, 2056,
	2057, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 0, 0, 0, 391, 0, 392, 393, 394,
	395, 396, 0, 0, 0, 480, 1211, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 0, 404,
	405, 406, 408, 0, 1210, 407, 2042, 2043, 0, 2038,
	0, 409, 410, 1212, 0, 1213, 411, 412, 413, 1214,
	414, 0, 0, 0, 415, 416, 417, 418, 419, 420,
	0, 421, 423, 422, 0, 424, 0, 1215, 425, 426,
	1216, 0, 427, 428, 429, 430, 431, 432, 435, 0,
	0, 433, 434, 436, 437, 0, 438, 439, 441, 444,
	440, 442, 443, 445, 458, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 460, 0, 459,
	1217, 461, 462, 463, 464, 470, 472, 473, 468, 469,
	471, 474, 475, 466, 467, 1218, 476, 465, 0, 0,
	1219, 477, 478, 0, 0, 479, 2050, 481, 482, 0,
	0, 483, 0, 0, 0, 485, 486, 487, 0, 0,
	488, 489, 0, 1220, 490, 1221, 0, 491, 492, 484,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 0,
	502, 503, 2032, 504, 505, 506, 2033, 507, 508, 509,
	0, 510, 0, 511, 512, 0, 513, 514, 0, 515,
	516, 517, 518, 519, 520, 521, 2046, 522, 523, 525,
	524, 526, 0, 527, 0, 528, 529, 530, 0, 0,
	0, 0, 0, 531, 0, 533, 534, 535, 536, 532,
	537, 538, 539, 540, 541, 0, 542, 543, 544, 1222,
	545, 546, 547, 548, 549, 0, 550, 0, 551, 552,
	558, 559, 560, 553, 554, 561, 562, 563, 564, 565,
	0, 567, 568, 566, 569, 570, 571, 0, 572, 573,
	555, 556, 574, 575, 1223, 576, 577, 578, 579, 580,
	581, 582, 2044, 0, 583, 0, 584, 585, 586, 588,
	557, 589, 594, 595, 2060, 590, 591, 592, 593, 0,
	597, 598, 0, 599, 600, 0, 596, 587, 0, 601,
	602, 603, 604, 605, 606, 607, 364, 608, 0, 609,
	2052, 2053, 2054, 2055, 0, 618, 0, 610, 611, 612,
	0, 613, 0, 0, 614, 615, 616, 617, 0, 619,
	620, 0, 0, 621, 622, 623, 625, 626, 624, 627,
	0, 628, 0, 0, 629, 630, 631, 0, 2036, 2059,
	0, 633, 632, 634, 0, 635, 636, 0, 0, 0,
	0, 637, 638, 0, 639, 640, 641, 820, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 280, 282, 281, 283, 284, 285,
	286, 0, 287, 288, 0, 0, 0, 0, 0, 642,
	2026, 0, 0, 0, 289, 290, 0, 291, 292, 293,
	294, 295, 296, 643, 644, 0, 297, 645, 298, 646,
	0, 647, 299, 300, 301, 302, 303, 304, 0, 0,
	0, 305, 648, 649, 650, 0, 306, 307, 651, 0,
	0, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 0,
	330, 331, 332, 0, 0, 0, 0, 0, 0, 0,
	333, 334, 335, 827, 337, 0, 338, 340, 652, 653,
	0, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 350, 351, 0, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 654, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 655, 656,
	370, 0, 277, 0, 0, 0, 0, 0, 371, 372,
	373, 657, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 658, 659, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 660,
	0, 661, 391, 0, 392, 393, 394, 395, 396, 662,
	663, 664, 480, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 278, 404, 405, 406, 408,
	0, 0, 407, 665, 666, 0, 667, 0, 409, 410,
	0, 668, 0, 411, 412, 413, 0, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 0, 424, 669, 0, 425, 426, 0, 0, 427,
	428, 429, 430, 431, 432, 435, 0, 0, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 459, 0, 461, 462,
	463, 464, 470, 472, 473, 468, 469, 471, 474, 475,
	466, 467, 0, 476, 465, 0, 279, 0, 477, 478,
	0, 670, 479, 671, 481, 482, 0, 0, 483, 0,
	0, 0, 485, 486, 487, 0, 0, 488, 489, 672,
	0, 490, 0, 673, 491, 492, 484, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 0, 502, 503, 674,
	504, 505, 506, 675, 507, 508, 509, 676, 510, 677,
	511, 512, 0, 513, 514, 0, 515, 516, 517, 518,
	519, 520, 521, 678, 522, 523, 525, 524, 526, 0,
	527, 0, 528, 529, 530, 0, 0, 0, 0, 0,
	531, 0, 533, 534, 535, 536, 532, 537, 538, 539,
	540, 541, 0, 542, 543, 544, 0, 545, 546, 547,
	548, 549, 679, 550, 0, 551, 552, 558, 559, 560,
	553, 554, 561, 562, 563, 564, 565, 0, 567, 568,
	566, 569, 570, 571, 0, 572, 573, 555, 556, 574,
	575, 0, 576, 577, 578, 579, 580, 581, 582, 680,
	0, 583, 0, 584, 585, 586, 588, 557, 589, 594,
	595, 681, 590, 591, 592, 593, 682, 597, 598, 0,
	599, 600, 0, 596, 587, 825, 601, 602, 603, 604,
	605, 826, 607, 364, 608, 0, 609, 683, 684, 685,
	686, 0, 618, 0, 610, 611, 612, 687, 613, 688,
	0, 614, 615, 616, 617, 0, 619, 620, 0, 0,
	621, 622, 623, 625, 626, 624, 627, 0, 628, 0,
	0, 629, 630, 631, 689, 690, 691, 820, 633, 632,
	634, 692, 635, 636, 0, 0, 0, 0, 637, 638,
	693, 639, 640, 641, 280, 282, 281, 283, 284, 285,
	286, 0, 287, 288, 0, 0, 0, 0, 0, 642,
	0, 0, 0, 0, 289, 290, 830, 291, 292, 293,
	294, 295, 296, 643, 644, 0, 297, 645, 298, 646,
	0, 647, 299, 300, 301, 302, 303, 304, 0, 0,
	0, 305, 648, 649, 650, 0, 306, 307, 651, 0,
	0, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 0,
	330, 331, 332, 0, 0, 0, 0, 0, 0, 0,
	333, 334, 335, 827, 337, 0, 338, 340, 652, 653,
	0, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 350, 351, 0, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 654, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 655, 656,
	370, 0, 277, 0, 0, 0, 0, 0, 371, 372,
	373, 657, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 658, 659, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 660,
	0, 661, 391, 0, 392, 393, 394, 395, 396, 662,
	663, 664, 480, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 278, 404, 405, 406, 408,
	0, 0, 407, 665, 666, 0, 667, 0, 409, 410,
	0, 668, 0, 411, 412, 413, 0, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 0, 424, 669, 0, 425, 426, 0, 0, 427,
	428, 429, 430, 431, 432, 435, 0, 0, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 459, 0, 461, 462,
	463, 464, 470, 472, 473, 468, 469, 471, 474, 475,
	466, 467, 0, 476, 465, 0, 279, 0, 477, 478,
	0, 670, 479, 671, 481, 482, 0, 0, 483, 0,
	0, 0, 485, 486, 487, 0, 0, 488, 489, 672,
	0, 490, 0, 673, 491, 492, 484, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 0, 502, 503, 674,
	504, 505, 506, 675, 507, 508, 509, 676, 510, 677,
	511, 512, 0, 513, 514, 0, 515, 516, 517, 518,
	519, 520, 521, 678, 522, 523, 525, 524, 526, 0,
	527, 0, 528, 529, 530, 0, 0, 0, 0, 0,
	531, 0, 533, 534, 535, 536, 532, 537, 538, 539,
	540, 541, 0, 542, 543, 544, 0, 2378, 546, 547,
	548, 549, 679, 550, 0, 551, 552, 558, 559, 560,
	553, 554, 2379, 562, 563, 564, 565, 0, 567, 568,
	566, 569, 570, 571, 0, 572, 573, 555, 556, 574,
	575, 0, 576, 577, 578, 579, 580, 581, 582, 680,
	0, 583, 0, 584, 585, 586, 588, 557, 589, 594,
	595, 681, 590, 591, 592, 593, 682, 597, 598, 0,
	599, 600, 0, 596, 587, 825, 601, 602, 603, 604,
	605, 826, 607, 364, 608, 0, 609, 683, 684, 685,
	686, 0, 618, 0, 610, 611, 612, 687, 613, 688,
	0, 614, 615, 2380, 617, 0, 619, 620, 0, 0,
	621, 622, 623, 625, 626, 624, 627, 0, 628, 0,
	0, 629, 630, 631, 689, 690, 691, 274, 633, 632,
	634, 692, 635, 636, 0, 0, 0, 0, 637, 638,
	693, 639, 640, 641, 280, 282, 281, 283, 284, 285,
	286, 0, 287, 288, 0, 0, 0, 0, 0, 642,
	0, 0, 0, 0, 289, 290, 830, 291, 292, 293,
	294, 295, 296, 643, 644, 0, 297, 645, 298, 646,
	0, 647, 299, 300, 301, 302, 303, 304, 0, 0,
	0, 305, 648, 649, 650, 0, 306, 307, 651, 0,
	0, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 0,
	330, 331, 332, 0, 0, 0, 0, 0, 0, 0,
	333, 334, 335, 336, 337, 0, 338, 340, 652, 653,
	0, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 350, 351, 0, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 654, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 655, 656,
	370, 0, 277, 0, 0, 0, 0, 0, 371, 372,
	373, 657, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 658, 659, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 660,
	0, 661, 391, 0, 392, 393, 394, 395, 396, 662,
	663, 664, 480, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 278, 404, 405, 406, 408,
	0, 0, 407, 665, 666, 0, 667, 0, 409, 410,
	0, 668, 0, 411, 412, 413, 0, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 0, 424, 669, 0, 425, 426, 0, 0, 427,
	428, 429, 430, 431, 432, 435, 0, 0, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 459, 0, 461, 462,
	463, 464, 470, 472, 473, 468, 469, 471, 474, 475,
	466, 467, 0, 476, 465, 0, 279, 0, 477, 478,
	0, 670, 479, 671, 481, 482, 0, 0, 483, 0,
	0, 0, 485, 486, 487, 0, 0, 488, 489, 672,
	0, 490, 0, 673, 491, 492, 484, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 0, 502, 503, 674,
	504, 505, 506, 675, 507, 508, 509, 676, 510, 677,
	511, 512, 0, 513, 514, 0, 515, 516, 517, 518,
	519, 520, 521, 678, 522, 523, 525, 524, 526, 0,
	527, 0, 528, 529, 530, 0, 0, 0, 0, 0,
	531, 0, 533, 534, 535, 536, 532, 537, 538, 539,
	540, 541, 0, 542, 543, 544, 0, 545, 546, 547,
	548, 549, 679, 550, 0, 551, 552, 558, 559, 560,
	553, 554, 561, 562, 563, 564, 565, 0, 567, 568,
	566, 569, 570, 571, 0, 572, 573, 555, 556, 574,
	575, 0, 576, 577, 578, 579, 580, 581, 582, 680,
	0, 583, 0, 584, 585, 586, 588, 557, 589, 594,
	595, 681, 590, 591, 592, 593, 682, 597, 598, 0,
	599, 600, 0, 596, 587, 0, 601, 602, 603, 604,
	605, 606, 607, 364, 608, 0, 609, 683, 684, 685,
	686, 0, 618, 0, 610, 611, 612, 687, 613, 688,
	0, 614, 615, 616, 617, 0, 619, 620, 0, 0,
	621, 622, 623, 625, 626, 624, 627, 0, 628, 0,
	0, 629, 630, 631, 689, 690, 691, 0, 633, 632,
	634, 692, 635, 636, 0, 1347, 2114, 0, 637, 638,
	693, 639, 640, 641, 0, 0, 0, 0, 0, 0,
	0, 0, 280, 282, 281, 283, 284, 285, 286, 0,
	287, 288, 0, 0, 0, 0, 830, 642, 0, 0,
	0, 0, 289, 290, 1207, 291, 292, 293, 294, 295,
	296, 643, 644, 0, 297, 645, 298, 646, 0, 647,
	299, 300, 301, 302, 303, 304, 0, 0, 0, 305,
	648, 649, 650, 0, 306, 307, 651, 0, 1352, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 1208, 330, 331,
	332, 0, 0, 0, 0, 0, 0, 3058, 333, 334,
	335, 336, 337, 0, 338, 340, 652, 653, 0, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 350, 351, 0, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 654, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 655, 656, 370, 0,
	277, 0, 0, 0, 0, 0, 371, 372, 373, 657,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	1209, 378, 379, 380, 658, 659, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 660, 0, 661,
	391, 0, 392, 393, 394, 395, 396, 662, 663, 664,
	480, 1211, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 0, 404, 405, 406, 408, 0, 1210,
	407, 665, 666, 0, 667, 0, 409, 410, 1212, 668,
	1213, 411, 412, 413, 1214, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 669, 1215, 425, 426, 1216, 0, 427, 428, 429,
	430, 431, 432, 435, 0, 0, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 1217, 461, 462, 463, 464,
	470, 472, 473, 468, 469, 471, 474, 475, 466, 467,
	1218, 476, 465, 0, 0, 1219, 477, 478, 0, 670,
	479, 671, 481, 482, 0, 0, 483, 0, 0, 0,
	485, 486, 487, 0, 0, 488, 489, 672, 1220, 490,
	1221, 673, 491, 492, 484, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 0, 502, 503, 674, 504, 505,
	506, 675, 507, 508, 509, 676, 510, 677, 511, 512,
	0, 513, 514, 0, 515, 516, 517, 518, 519, 520,
	521, 678, 522, 523, 525, 524, 526, 0, 527, 0,
	528, 529, 530, 0, 0, 0, 0, 0, 531, 0,
	533, 534, 535, 536, 532, 537, 538, 539, 540, 541,
	0, 542, 543, 544, 1222, 545, 546, 547, 548, 549,
	679, 550, 0, 551, 552, 558, 559, 560, 553, 554,
	561, 562, 563, 564, 565, 0, 567, 568, 566, 569,
	570, 571, 3059, 572, 573, 555, 556, 574, 575, 1223,
	576, 577, 578, 579, 580, 581, 582, 680, 0, 583,
	0, 584, 585, 586, 588, 557, 589, 594, 595, 681,
	590, 591, 592, 593, 682, 597, 598, 0, 599, 600,
	0, 596, 587, 0, 601, 602, 603, 604, 605, 606,
	607, 364, 608, 0, 609, 683, 684, 685, 686, 0,
	618, 0, 610, 611, 612, 687, 613, 688, 0, 614,
	615, 616, 617, 0, 619, 620, 0, 0, 621, 622,
	623, 625, 626, 624, 627, 0, 628, 0, 0, 629,
	630, 631, 689, 690, 691, 0, 633, 632, 634, 692,
	635, 636, 0, 0, 0, 0, 637, 638, 693, 639,
	640, 641, 1347, 1346, 0, 0, 0, 0, 1344, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 280,
	282, 281, 283, 284, 285, 286, 0, 287, 288, 0,
	0, 0, 0, 0, 642, 0, 0, 0, 0, 289,
	290, 1207, 291, 292, 293, 294, 295, 296, 643, 644,
	0, 297, 645, 298, 646, 0, 647, 299, 300, 301,
	302, 303, 304, 0, 0, 0, 305, 648, 649, 650,
	0, 306, 307, 651, 0, 1352, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	0, 327, 328, 329, 1208, 330, 331, 332, 0, 0,
	0, 0, 0, 0, 0, 333, 334, 335, 336, 337,
	0, 338, 340, 652, 653, 0, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	350, 351, 0, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 654, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 655, 656, 370, 0, 277, 0, 0,
	0, 0, 0, 371, 372, 373, 657, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 1209, 378, 379,
	380, 658, 659, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 660, 0, 661, 391, 0, 392,
	393, 394, 395, 396, 662, 663, 664, 480, 1211, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	0, 404, 405, 406, 408, 0, 1210, 407, 665, 666,
	0, 667, 0, 409, 410, 1212, 668, 1213, 411, 412,
	413, 1214, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 0, 421, 423, 422, 0, 424, 669, 1215,
	425, 426, 1216, 0, 427, 428, 429, 430, 431, 432,
	435, 0, 0, 433, 434, 436, 437, 0, 438, 439,
	441, 444, 440, 442, 443, 445, 458, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 460,
	0, 459, 1217, 461, 462, 463, 464, 470, 472, 473,
	468, 469, 471, 474, 475, 466, 467, 1218, 476, 465,
	0, 0, 1219, 477, 478, 3972, 670, 479, 671, 481,
	482, 0, 0, 483, 0, 0, 0, 485, 486, 487,
	0, 0, 488, 489, 672, 1220, 490, 1221, 673, 491,
	492, 484, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 0, 502, 503, 674, 504, 505, 506, 675, 507,
	508, 509, 676, 510, 677, 511, 512, 0, 513, 514,
	0, 515, 516, 517, 518, 519, 520, 521, 678, 522,
	523, 525, 524, 526, 0, 527, 0, 528, 529, 530,
	0, 0, 0, 0, 0, 531, 0, 533, 534, 535,
	536, 532, 537, 538, 539, 540, 541, 0, 542, 543,
	544, 1222, 545, 546, 547, 548, 549, 679, 550, 0,
	551, 552, 558, 559, 560, 553, 554, 561, 562, 563,
	564, 565, 0, 567, 568, 566, 569, 570, 571, 0,
	572, 573, 555, 556, 574, 575, 1223, 576, 577, 578,
	579, 580, 581, 582, 680, 0, 583, 0, 584, 585,
	586, 588, 557, 589, 594, 595, 681, 590, 591, 592,
	593, 682, 597, 598, 0, 599, 600, 0, 596, 587,
	0, 601, 602, 603, 604, 605, 606, 607, 364, 608,
	0, 609, 683, 684, 685, 686, 0, 618, 0, 610,
	611, 612, 687, 613, 688, 0, 614, 615, 616, 617,
	0, 619, 620, 0, 0, 621, 622, 623, 625, 626,
	624, 627, 0, 628, 0, 0, 629, 630, 631, 689,
	690, 691, 0, 633, 632, 634, 692, 635, 636, 0,
	0, 0, 0, 637, 638, 693, 639, 640, 641, 1347,
	1346, 0, 0, 0, 0, 1344, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 280, 282, 281, 283,
	284, 285, 286, 0, 287, 288, 0, 0, 0, 0,
	0, 642, 0, 0, 0, 0, 289, 290, 1207, 291,
	292, 293, 294, 295, 296, 643, 644, 0, 297, 645,
	298, 646, 0, 647, 299, 300, 301, 302, 303, 304,
	0, 0, 0, 305, 648, 649, 650, 0, 306, 307,
	651, 0, 1352, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 1208, 330, 331, 332, 0, 0, 0, 0, 0,
	0, 0, 333, 334, 335, 336, 337, 0, 338, 340,
	652, 653, 0, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 350, 351, 0,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 654,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	655, 656, 370, 0, 277, 0, 0, 0, 0, 0,
	371, 372, 373, 657, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 1209, 378, 379, 380, 658, 659,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 660, 0, 661, 391, 0, 392, 393, 394, 395,
	396, 662, 663, 664, 480, 1211, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 0, 404, 405,
	406, 408, 0, 1210, 407, 665, 666, 0, 667, 0,
	409, 410, 1212, 668, 1213, 411, 412, 413, 1214, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 669, 1215, 425, 426, 1216,
	0, 427, 428, 429, 430, 431, 432, 435, 0, 0,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 1217,
	461, 462, 463, 464, 470, 472, 473, 468, 469, 471,
	474, 475, 466, 467, 1218, 476, 465, 0, 0, 1219,
	477, 478, 3574, 670, 479, 671, 481, 482, 0, 0,
	483, 0, 0, 0, 485, 486, 487, 0, 0, 488,
	489, 672, 1220, 490, 1221, 673, 491, 492, 484, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 0, 502,
	503, 674, 504, 505, 506, 675, 507, 508, 509, 676,
	510, 677, 511, 512, 0, 513, 514, 0, 515, 516,
	517, 518, 519, 520, 521, 678, 522, 523, 525, 524,
	526, 0, 527, 0, 528, 529, 530, 0, 0, 0,
	0, 0, 531, 0, 533, 534, 535, 536, 532, 537,
	538, 539, 540, 541, 0, 542, 543, 544, 1222, 545,
	546, 547, 548, 549, 679, 550, 0, 551, 552, 558,
	559, 560, 553, 554, 561, 562, 563, 564, 565, 0,
	567, 568, 566, 569, 570, 571, 0, 572, 573, 555,
	556, 574, 575, 1223, 576, 577, 578, 579, 580, 581,
	582, 680, 0, 583, 0, 584, 585, 586, 588, 557,
	589, 594, 595, 681, 590, 591, 592, 593, 682, 597,
	598, 0, 599, 600, 0, 596, 587, 0, 601, 602,
	603, 604, 605, 606, 607, 364, 608, 0, 609, 683,
	684, 685, 686, 0, 618, 0, 610, 611, 612, 687,
	613, 688, 0, 614, 615, 616, 617, 0, 619, 620,
	0, 0, 621, 622, 623, 625, 626, 624, 627, 0,
	628, 0, 0, 629, 630, 631, 689, 690, 691, 0,
	633, 632, 634, 692, 635, 636, 0, 0, 0, 0,
	637, 638, 693, 639, 640, 641, 1685, 0, 1347, 1346,
	0, 0, 0, 0, 1344, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 280, 282, 281, 283, 284,
	285, 286, 0, 287, 288, 0, 0, 0, 0, 0,
	642, 0, 0, 0, 0, 289, 290, 1207, 291, 292,
	293, 294, 295, 296, 643, 644, 0, 297, 645, 298,
	646, 0, 647, 299, 300, 301, 302, 303, 304, 0,
	0, 0, 305, 648, 649, 650, 0, 306, 307, 651,
	0, 1352, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	1208, 330, 331, 332, 0, 0, 0, 0, 0, 0,
	0, 333, 334, 335, 336, 337, 0, 338, 340, 652,
	653, 0, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 350, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 654, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 655,
	656, 370, 0, 277, 0, 0, 0, 0, 0, 1684,
	372, 373, 657, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 1209, 378, 379, 380, 658, 659, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	660, 0, 661, 391, 0, 392, 393, 394, 395, 396,
	662, 663, 664, 480, 1211, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 0, 404, 405, 406,
	408, 0, 1210, 407, 665, 666, 0, 667, 0, 409,
	410, 1212, 668, 1213, 411, 412, 413, 1214, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 0, 421,
	423, 422, 0, 424, 669, 1215, 425, 426, 1216, 0,
	427, 428, 429, 430, 431, 432, 435, 0, 0, 433,
	434, 436, 437, 0, 438, 439, 441, 444, 440, 442,
	443, 445, 458, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 0, 459, 1217, 461,
	462, 463, 464, 470, 472, 473, 468, 469, 471, 474,
	475, 466, 467, 1218, 476, 465, 0, 0, 1219, 477,
	478, 0, 670, 479, 671, 481, 482, 0, 0, 483,
	0, 0, 0, 485, 486, 487, 0, 0, 488, 489,
	672, 1220, 490, 1221, 673, 491, 492, 484, 493, 494,
	495, 496, 497, 498, 499, 500, 501, 0, 502, 503,
	674, 504, 505, 506, 675, 507, 508, 509, 676, 510,
	677, 511, 512, 0, 513, 514, 0, 515, 516, 517,
	518, 519, 1683, 521, 678, 522, 523, 525, 524, 526,
	0, 527, 0, 528, 529, 530, 0, 0, 0, 0,
	0, 531, 0, 533, 534, 535, 536, 532, 537, 538,
	539, 540, 541, 0, 542, 543, 544, 1222, 545, 546,
	547, 548, 549, 679, 550, 0, 551, 552, 558, 559,
	560, 553, 554, 561, 1682, 563, 564, 565, 0, 567,
	568, 566, 569, 570, 571, 0, 572, 573, 555, 556,
	574, 575, 1223, 576, 577, 578, 579, 580, 581, 582,
	680, 0, 583, 0, 584, 585, 586, 588, 557, 589,
	594, 595, 681, 590, 591, 592, 593, 682, 597, 598,
	0, 599, 600, 0, 596, 587, 0, 601, 602, 603,
	604, 605, 606, 607, 364, 608, 0, 609, 683, 684,
	685, 686, 0, 618, 0, 610, 611, 612, 687, 613,
	688, 0, 614, 615, 616, 617, 0, 619, 620, 0,
	0, 621, 622, 623, 625, 626, 624, 627, 0, 628,
	0, 0, 629, 630, 631, 689, 690, 691, 0, 633,
	632, 634, 692, 635, 636, 0, 0, 0, 0, 637,
	638, 693, 639, 640, 641, 1599, 0, 1347, 1346, 0,
	0, 0, 0, 1344, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 280, 282, 281, 283, 284, 285,
	286, 0, 287, 288, 0, 0, 0, 0, 0, 642,
	0, 0, 0, 0, 289, 290, 1207, 291, 292, 293,
	294, 295, 296, 643, 644, 0, 297, 645, 298, 646,
	0, 647, 299, 300, 301, 302, 303, 304, 0, 0,
	0, 305, 648, 649, 650, 0, 306, 307, 651, 0,
	1352, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 1208,
	330, 331, 332, 0, 0, 0, 0, 0, 0, 0,
	333, 334, 335, 336, 337, 0, 338, 340, 652, 653,
	0, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 350, 351, 0, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 654, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 655, 656,
	370, 0, 277, 0, 0, 0, 0, 0, 371, 372,
	373, 657, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 1209, 378, 379, 380, 658, 659, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 660,
	0, 661, 391, 0, 392, 393, 394, 395, 396, 1598,
	663, 664, 480, 1211, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 0, 404, 405, 406, 408,
	0, 1210, 407, 665, 666, 0, 667, 0, 409, 410,
	1212, 668, 1213, 411, 412, 413, 1214, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 0, 424, 669, 1215, 425, 426, 1216, 0, 427,
	428, 429, 430, 431, 432, 435, 0, 0, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 459, 1217, 461, 462,
	463, 464, 470, 472, 473, 468, 469, 471, 474, 475,
	466, 467, 1218, 476, 465, 0, 0, 1219, 477, 478,
	0, 670, 479, 671, 481, 482, 0, 0, 483, 0,
	0, 0, 485, 486, 487, 0, 0, 488, 489, 672,
	1220, 490, 1221, 673, 491, 492, 484, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 0, 502, 503, 674,
	504, 505, 506, 675, 507, 508, 509, 676, 510, 677,
	511, 512, 0, 513, 514, 0, 515, 516, 517, 518,
	519, 520, 521, 678, 522, 523, 525, 524, 526, 0,
	527, 0, 528, 529, 530, 0, 0, 0, 0, 0,
	531, 0, 533, 534, 535, 536, 532, 537, 538, 539,
	540, 541, 0, 542, 543, 544, 1222, 545, 546, 547,
	548, 549, 679, 550, 0, 551, 552, 558, 559, 560,
	553, 554, 561, 562, 563, 564, 565, 0, 567, 568,
	566, 569, 570, 571, 0, 572, 573, 555, 556, 574,
	575, 1223, 576, 577, 578, 579, 580, 581, 582, 680,
	0, 583, 0, 584, 585, 586, 588, 557, 589, 594,
	595, 681, 590, 591, 592, 593, 682, 597, 598, 0,
	599, 600, 0, 596, 587, 0, 601, 602, 603, 604,
	605, 606, 607, 364, 608, 0, 609, 683, 684, 685,
	686, 0, 618, 0, 610, 611, 612, 687, 613, 688,
	0, 614, 615, 616, 617, 0, 619, 620, 0, 0,
	621, 622, 623, 625, 626, 624, 627, 0, 628, 0,
	0, 629, 630, 631, 689, 690, 691, 0, 633, 632,
	634, 692, 635, 636, 0, 0, 0, 0, 637, 638,
	693, 639, 640, 641, 1558, 0, 1347, 1346, 0, 0,
	0, 0, 1344, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 280, 282, 281, 283, 284, 285, 286,
	0, 287, 288, 0, 0, 0, 0, 0, 642, 0,
	0, 0, 0, 289, 290, 1207, 291, 292, 293, 294,
	295, 296, 643, 644, 0, 297, 645, 298, 646, 0,
	647, 299, 300, 301, 302, 303, 304, 0, 0, 0,
	305, 648, 649, 650, 0, 306, 307, 651, 0, 1352,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 1208, 330,
	331, 332, 0, 0, 0, 0, 0, 0, 0, 333,
	334, 335, 336, 337, 0, 338, 340, 652, 653, 0,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 350, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 654, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 655, 656, 370,
	0, 277, 0, 0, 0, 0, 0, 371, 372, 373,
	657, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 1209, 378, 379, 380, 658, 659, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 660, 0,
	661, 391, 0, 392, 393, 394, 395, 396, 1560, 663,
	664, 480, 1211, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 0, 404, 405, 406, 408, 0,
	1210, 407, 665, 666, 0, 667, 0, 409, 410, 1212,
	668, 1213, 411, 412, 413, 1214, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 0, 421, 423, 422,
	0, 424, 669, 1215, 425, 426, 1216, 0, 427, 428,
	429, 430, 431, 432, 435, 0, 0, 433, 434, 436,
	437, 0, 438, 439, 441, 444, 440, 442, 443, 445,
	458, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 459, 1217, 461, 462, 463,
	464, 470, 472, 473, 468, 469, 471, 474, 475, 466,
	467, 1218, 476, 465, 0, 0, 1219, 477, 478, 0,
	670, 479, 671, 481, 482, 0, 0, 483, 0, 0,
	0, 485, 486, 487, 0, 0, 488, 489, 672, 1220,
	490, 1221, 673, 491, 492, 484, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 0, 502, 503, 674, 504,
	505, 506, 675, 507, 508, 509, 676, 510, 677, 511,
	512, 0, 513, 514, 0, 515, 516, 517, 518, 519,
	520, 521, 678, 522, 523, 525, 524, 526, 0, 527,
	0, 528, 529, 530, 0, 0, 0, 0, 0, 531,
	0, 533, 534, 535, 536, 532, 537, 538, 539, 540,
	541, 0, 542, 543, 544, 1222, 545, 546, 547, 548,
	549, 679, 550, 0, 551, 552, 558, 559, 560, 553,
	554, 561, 562, 563, 564, 565, 0, 567, 568, 566,
	569, 570, 571, 0, 572, 573, 555, 556, 574, 575,
	1223, 576, 577, 578, 579, 580, 581, 582, 680, 0,
	583, 0, 584, 585, 586, 588, 557, 589, 594, 595,
	681, 590, 591, 592, 593, 682, 597, 598, 0, 599,
	600, 0, 596, 587, 0, 601, 602, 603, 604, 605,
	606, 607, 364, 608, 0, 609, 683, 684, 685, 686,
	0, 618, 0, 610, 611, 612, 687, 613, 688, 0,
	614, 615, 616, 617, 0, 619, 620, 0, 0, 621,
	622, 623, 625, 626, 624, 627, 0, 628, 0, 0,
	629, 630, 631, 689, 690, 691, 0, 633, 632, 634,
	692, 635, 636, 0, 0, 0, 0, 637, 638, 693,
	639, 640, 641, 1521, 0, 1347, 1346, 0, 0, 0,
	0, 1344, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 280, 282, 281, 283, 284, 285, 286, 0,
	287, 288, 0, 0, 0, 0, 0, 642, 0, 0,
	0, 0, 289, 290, 1207, 291, 292, 293, 294, 295,
	296, 643, 644, 0, 297, 645, 298, 646, 0, 647,
	299, 300, 301, 302, 303, 304, 0, 0, 0, 305,
	648, 649, 650, 0, 306, 307, 651, 0, 1352, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 1208, 330, 331,
	332, 0, 0, 0, 0, 0, 0, 0, 333, 334,
	335, 336, 337, 0, 338, 340, 652, 653, 0, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 350, 351, 0, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 654, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 655, 656, 370, 0,
	277, 0, 0, 0, 0, 0, 371, 372, 373, 657,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	1209, 378, 379, 380, 658, 659, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 660, 0, 661,
	391, 0, 392, 393, 394, 395, 396, 1520, 663, 664,
	480, 1211, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 0, 404, 405, 406, 408, 0, 1210,
	407, 665, 666, 0, 667, 0, 409, 410, 1212, 668,
	1213, 411, 412, 413, 1214, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 669, 1215, 425, 426, 1216, 0, 427, 428, 429,
	430, 431, 432, 435, 0, 0, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 1217, 461, 462, 463, 464,
	470, 472, 473, 468, 469, 471, 474, 475, 466, 467,
	1218, 476, 465, 0, 0, 1219, 477, 478, 0, 670,
	479, 671, 481, 482, 0, 0, 483, 0, 0, 0,
	485, 486, 487, 0, 0, 488, 489, 672, 1220, 490,
	1221, 673, 491, 492, 484, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 0, 502, 503, 674, 504, 505,
	506, 675, 507, 508, 509, 676, 510, 677, 511, 512,
	0, 513, 514, 0, 515, 516, 517, 518, 519, 520,
	521, 678, 522, 523, 525, 524, 526, 0, 527, 0,
	528, 529, 530, 0, 0, 0, 0, 0, 531, 0,
	533, 534, 535, 536, 532, 537, 538, 539, 540, 541,
	0, 542, 543, 544, 1222, 545, 546, 547, 548, 549,
	679, 550, 0, 551, 552, 558, 559, 560, 553, 554,
	561, 562, 563, 564, 565, 0, 567, 568, 566, 569,
	570, 571, 0, 572, 573, 555, 556, 574, 575, 1223,
	576, 577, 578, 579, 580, 581, 582, 680, 0, 583,
	0, 584, 585, 586, 588, 557, 589, 594, 595, 681,
	590, 591, 592, 593, 682, 597, 598, 0, 599, 600,
	0, 596, 587, 0, 601, 602, 603, 604, 605, 606,
	607, 364, 608, 0, 609, 683, 684, 685, 686, 0,
	618, 0, 610, 611, 612, 687, 613, 688, 0, 614,
	615, 616, 617, 0, 619, 620, 0, 0, 621, 622,
	623, 625, 626, 624, 627, 0, 628, 0, 0, 629,
	630, 631, 689, 690, 691, 0, 633, 632, 634, 692,
	635, 636, 0, 0, 0, 0, 637, 638, 693, 639,
	640, 641, 1341, 0, 1347, 1346, 0, 0, 0, 0,
	1344, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 280, 282, 281, 283, 284, 285, 286, 0, 287,
	288, 0, 0, 0, 0, 0, 642, 0, 0, 0,
	0, 289, 290, 1207, 291, 292, 293, 294, 295, 296,
	643, 644, 0, 297, 645, 298, 646, 0, 647, 299,
	300, 301, 302, 303, 304, 0, 0, 0, 305, 648,
	649, 650, 0, 306, 307, 651, 0, 1352, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	325, 326, 0, 327, 328, 329, 1208, 330, 331, 332,
	0, 0, 0, 0, 0, 0, 0, 333, 334, 335,
	336, 337, 0, 338, 340, 652, 653, 0, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 350, 351, 0, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 654, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 655, 656, 370, 0, 277,
	0, 0, 0, 0, 0, 371, 372, 373, 657, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 1209,
	378, 379, 380, 658, 659, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 660, 0, 661, 391,
	0, 392, 393, 394, 395, 396, 1340, 663, 664, 480,
	1211, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 0, 404, 405, 406, 408, 0, 1210, 407,
	665, 666, 0, 667, 0, 409, 410, 1212, 668, 1213,
	411, 412, 413, 1214, 414, 0, 0, 0, 415, 416,
	417, 418, 419, 420, 0, 421, 423, 422, 0, 424,
	669, 1215, 425, 426, 1216, 0, 427, 428, 429, 430,
	431, 432, 435, 0, 0, 433, 434, 436, 437, 0,
	438, 439, 441, 444, 440, 442, 443, 445, 458, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 460, 0, 459, 1217, 461, 462, 463, 464, 470,
	472, 473, 468, 469, 471, 474, 475, 466, 467, 1218,
	476, 465, 0, 0, 1219, 477, 478, 0, 670, 479,
	671, 481, 482, 0, 0, 483, 0, 0, 0, 485,
	486, 487, 0, 0, 488, 489, 672, 1220, 490, 1221,
	673, 491, 492, 484, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 0, 502, 503, 674, 504, 505, 506,
	675, 507, 508, 509, 676, 510, 677, 511, 512, 0,
	513, 514, 0, 515, 516, 517, 518, 519, 520, 521,
	678, 522, 523, 525, 524, 526, 0, 527, 0, 528,
	529, 530, 0, 0, 0, 0, 0, 531, 0, 533,
	534, 535, 536, 532, 537, 538, 539, 540, 541, 0,
	542, 543, 544, 1222, 545, 546, 547, 548, 549, 679,
	550, 0, 551, 552, 558, 559, 560, 553, 554, 561,
	562, 563, 564, 565, 0, 567, 568, 566, 569, 570,
	571, 0, 572, 573, 555, 556, 574, 575, 1223, 576,
	577, 578, 579, 580, 581, 582, 680, 0, 583, 0,
	584, 585, 586, 588, 557, 589, 594, 595, 681, 590,
	591, 592, 593, 682, 597, 598, 0, 599, 600, 0,
	596, 587, 0, 601, 602, 603, 604, 605, 606, 607,
	364, 608, 0, 609, 683, 684, 685, 686, 0, 618,
	0, 610, 611, 612, 687, 613, 688, 0, 614, 615,
	616, 617, 0, 619, 620, 0, 0, 621, 622, 623,
	625, 626, 624, 627, 0, 628, 0, 0, 629, 630,
	631, 689, 690, 691, 0, 633, 632, 634, 692, 635,
	636, 0, 0, 0, 0, 637, 638, 693, 639, 640,
	641, 1347, 1346, 0, 0, 0, 0, 1344, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 280, 282,
	281, 283, 284, 285, 286, 0, 287, 288, 0, 0,
	0, 0, 0, 642, 0, 0, 0, 0, 289, 290,
	1207, 291, 292, 293, 294, 295, 296, 643, 644, 0,
	297, 645, 298, 646, 0, 647, 299, 300, 301, 302,
	303, 304, 0, 0, 0, 305, 648, 649, 650, 0,
	306, 307, 651, 0, 1352, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 0, 316, 317, 318, 315, 319,
	0, 320, 0, 321, 322, 323, 324, 325, 326, 0,
	327, 328, 329, 1208, 330, 331, 332, 0, 0, 0,
	0, 0, 0, 0, 333, 334, 335, 336, 337, 0,
	338, 340, 652, 653, 0, 343, 339, 341, 0, 344,
	342, 345, 0, 346, 347, 348, 0, 0, 349, 350,
	351, 0, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 654, 359, 360, 361, 363, 365, 362, 366, 367,
	368, 369, 655, 656, 370, 0, 277, 0, 0, 0,
	0, 0, 371, 372, 373, 657, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 1209, 378, 379, 380,
	658, 659, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 660, 0, 661, 391, 0, 392, 393,
	394, 395, 396, 662, 663, 664, 480, 1211, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 0,
	404, 405, 406, 408, 0, 1210, 407, 665, 666, 0,
	667, 0, 409, 410, 1212, 668, 1213, 411, 412, 413,
	1214, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 0, 421, 423, 422, 0, 424, 669, 1215, 425,
	426, 1216, 0, 427, 428, 429, 430, 431, 432, 435,
	0, 0, 433, 434, 436, 437, 0, 438, 439, 441,
	444, 440, 442, 443, 445, 458, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 460, 0,
	459, 1217, 461, 462, 463, 464, 470, 472, 473, 468,
	469, 471, 474, 475, 466, 467, 1218, 476, 465, 0,
	0, 1219, 477, 478, 0, 670, 479, 671, 481, 482,
	0, 0, 483, 0, 0, 0, 485, 486, 487, 0,
	0, 488, 489, 672, 1220, 490, 1221, 673, 491, 492,
	484, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	0, 502, 503, 674, 504, 505, 506, 675, 507, 508,
	509, 676, 510, 677, 511, 512, 0, 513, 514, 0,
	515, 516, 517, 518, 519, 520, 521, 678, 522, 523,
	525, 524, 526, 0, 527, 0, 528, 529, 530, 0,
	0, 0, 0, 0, 531, 0, 533, 534, 535, 536,
	532, 537, 538, 539, 540, 541, 0, 542, 543, 544,
	1222, 545, 546, 547, 548, 549, 679, 550, 0, 551,
	552, 558, 559, 560, 553, 554, 561, 562, 563, 564,
	565, 0, 567, 568, 566, 569, 570, 571, 0, 572,
	573, 555, 556, 574, 575, 1223, 576, 577, 578, 579,
	580, 581, 582, 680, 0, 583, 0, 584, 585, 586,
	588, 557, 589, 594, 595, 681, 590, 591, 592, 593,
	682, 597, 598, 0, 599, 600, 0, 596, 587, 0,
	601, 602, 603, 604, 605, 606, 607, 364, 608, 0,
	609, 683, 684, 685, 686, 0, 618, 0, 610, 611,
	612, 687, 613, 688, 0, 614, 615, 616, 617, 0,
	619, 620, 0, 0, 621, 622, 623, 625, 626, 624,
	627, 0, 628, 0, 0, 629, 630, 631, 689, 690,
	691, 0, 633, 632, 634, 692, 635, 636, 1347, 2114,
	0, 0, 637, 638, 693, 639, 640, 641, 0, 0,
	0, 0, 0, 0, 0, 280, 282, 281, 283, 284,
	285, 286, 0, 287, 288, 0, 0, 0, 0, 0,
	642, 0, 0, 0, 0, 289, 290, 1207, 291, 292,
	293, 294, 295, 296, 643, 644, 0, 297, 645, 298,
	646, 0, 647, 299, 300, 301, 302, 303, 304, 0,
	0, 0, 305, 648, 649, 650, 0, 306, 307, 651,
	0, 1352, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	1208, 330, 331, 332, 0, 0, 0, 0, 0, 0,
	0, 333, 334, 335, 336, 337, 0, 338, 340, 652,
	653, 2111, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 350, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 654, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 655,
	656, 370, 0, 277, 0, 0, 0, 0, 0, 371,
	372, 373, 657, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 1209, 378, 379, 380, 658, 659, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	660, 0, 661, 391, 0, 392, 393, 394, 395, 396,
	662, 663, 664, 480, 1211, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 0, 404, 405, 406,
	408, 0, 1210, 407, 665, 666, 0, 667, 0, 409,
	410, 1212, 668, 1213, 411, 412, 413, 1214, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 0, 421,
	423, 422, 0, 424, 669, 1215, 425, 426, 1216, 0,
	427, 428, 429, 430, 431, 432, 435, 0, 0, 433,
	434, 436, 437, 0, 438, 439, 441, 444, 440, 442,
	443, 445, 458, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 0, 459, 1217, 461,
	462, 463, 464, 470, 472, 473, 468, 469, 471, 474,
	475, 466, 467, 1218, 476, 465, 0, 0, 1219, 477,
	478, 0, 670, 479, 671, 481, 482, 0, 0, 483,
	0, 0, 0, 485, 486, 487, 0, 0, 488, 489,
	672, 1220, 490, 1221, 673, 491, 492, 484, 493, 494,
	495, 496, 497, 498, 499, 500, 501, 0, 502, 503,
	674, 504, 505, 506, 675, 507, 508, 509, 676, 510,
	677, 511, 512, 0, 513, 514, 0, 515, 516, 517,
	518, 519, 520, 521, 678, 522, 523, 525, 524, 526,
	0, 527, 0, 528, 529, 530, 0, 0, 0, 0,
	0, 531, 0, 533, 534, 535, 536, 532, 537, 538,
	539, 540, 541, 0, 542, 543, 544, 1222, 545, 546,
	547, 548, 549, 679, 550, 0, 551, 552, 558, 559,
	560, 553, 554, 561, 562, 563, 564, 565, 0, 567,
	568, 566, 569, 570, 571, 0, 572, 573, 555, 556,
	574, 575, 1223, 576, 577, 578, 579, 580, 581, 582,
	680, 0, 583, 0, 584, 585, 586, 588, 557, 589,
	594, 595, 681, 590, 591, 592, 593, 682, 597, 598,
	0, 599, 600, 0, 596, 587, 0, 601, 602, 603,
	604, 605, 606, 607, 364, 608, 0, 609, 683, 684,
	685, 686, 0, 618, 0, 610, 611, 612, 687, 613,
	688, 0, 614, 615, 616, 617, 0, 619, 620, 0,
	0, 621, 622, 623, 625, 626, 624, 627, 0, 628,
	0, 0, 629, 630, 631, 689, 690, 691, 0, 633,
	632, 634, 692, 635, 636, 1347, 1346, 0, 0, 637,
	638, 693, 639, 640, 641, 0, 0, 0, 0, 0,
	0, 0, 280, 282, 281, 283, 284, 285, 286, 0,
	287, 288, 0, 0, 0, 0, 0, 642, 0, 0,
	0, 0, 289, 290, 1207, 291, 292, 293, 294, 295,
	296, 643, 644, 0, 297, 645, 298, 646, 0, 647,
	299, 300, 301, 302, 303, 304, 0, 0, 0, 305,
	648, 649, 650, 0, 306, 307, 651, 0, 1352, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 1208, 330, 331,
	332, 0, 0, 0, 0, 0, 0, 0, 333, 334,
	335, 336, 337, 0, 338, 340, 652, 653, 0, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 350, 351, 0, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 654, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 655, 656, 370, 0,
	277, 0, 0, 0, 0, 0, 371, 372, 373, 657,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	1209, 378, 379, 380, 658, 659, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 660, 0, 661,
	391, 0, 392, 393, 394, 395, 396, 662, 663, 664,
	480, 1211, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 0, 404, 405, 406, 408, 0, 1210,
	407, 665, 666, 0, 667, 0, 409, 410, 1212, 668,
	1213, 411, 412, 413, 1214, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 669, 1215, 425, 426, 1216, 0, 427, 428, 429,
	430, 431, 432, 435, 0, 0, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 1217, 461, 462, 463, 464,
	470, 472, 473, 468, 469, 471, 474, 475, 466, 467,
	1218, 476, 465, 0, 0, 1219, 477, 478, 0, 670,
	479, 671, 481, 482, 0, 0, 483, 0, 0, 0,
	485, 486, 487, 0, 0, 488, 489, 672, 1220, 490,
	1221, 673, 491, 492, 484, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 0, 502, 503, 674, 504, 505,
	506, 675, 507, 508, 509, 676, 510, 677, 511, 512,
	0, 513, 514, 0, 515, 516, 517, 518, 519, 520,
	521, 678, 522, 523, 525, 524, 526, 0, 527, 0,
	528, 529, 530, 0, 0, 0, 0, 0, 531, 0,
	533, 534, 535, 536, 532, 537, 538, 539, 540, 541,
	0, 542, 543, 544, 1222, 545, 546, 547, 548, 549,
	679, 550, 0, 551, 552, 558, 559, 560, 553, 554,
	561, 562, 563, 564, 565, 0, 567, 568, 566, 569,
	570, 571, 0, 572, 573, 555, 556, 574, 575, 1223,
	576, 577, 578, 579, 580, 581, 582, 680, 0, 583,
	0, 584, 585, 586, 588, 557, 589, 594, 595, 681,
	590, 591, 592, 593, 682, 597, 598, 0, 599, 600,
	0, 596, 587, 0, 601, 602, 603, 604, 605, 606,
	607, 364, 608, 0, 609, 683, 684, 685, 686, 0,
	618, 0, 610, 611, 612, 687, 613, 688, 0, 614,
	615, 616, 617, 0, 619, 620, 0, 0, 621, 622,
	623, 625, 626, 624, 627, 0, 628, 0, 0, 629,
	630, 631, 689, 690, 691, 1347, 633, 632, 634, 692,
	635, 636, 0, 0, 0, 0, 637, 638, 693, 639,
	640, 641, 280, 282, 281, 283, 284, 285, 286, 0,
	287, 288, 0, 0, 0, 0, 0, 642, 0, 0,
	0, 0, 289, 290, 1207, 291, 292, 293, 294, 295,
	296, 643, 644, 0, 297, 645, 298, 646, 0, 647,
	299, 300, 301, 302, 303, 304, 0, 0, 0, 305,
	648, 649, 650, 0, 306, 307, 651, 0, 1352, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 1208, 330, 331,
	332, 0, 0, 0, 0, 0, 0, 0, 333, 334,
	335, 336, 337, 0, 338, 340, 652, 653, 0, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 350, 351, 0, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 654, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 655, 656, 370, 0,
	277, 0, 0, 0, 0, 0, 371, 372, 373, 657,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	1209, 378, 379, 380, 658, 659, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 660, 0, 661,
	391, 0, 392, 393, 394, 395, 396, 662, 663, 664,
	480, 1211, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 0, 404, 405, 406, 408, 0, 1210,
	407, 665, 666, 0, 667, 0, 409, 410, 1212, 668,
	1213, 411, 412, 413, 1214, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 669, 1215, 425, 426, 1216, 0, 427, 428, 429,
	430, 431, 432, 435, 0, 0, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 1217, 461, 462, 463, 464,
	470, 472, 473, 468, 469, 471, 474, 475, 466, 467,
	1218, 476, 465, 0, 0, 1219, 477, 478, 0, 670,
	479, 671, 481, 482, 0, 0, 483, 0, 0, 0,
	485, 486, 487, 0, 0, 488, 489, 672, 1220, 490,
	1221, 673, 491, 492, 484, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 0, 502, 503, 674, 504, 505,
	506, 675, 507, 508, 509, 676, 510, 677, 511, 512,
	0, 513, 514, 0, 515, 516, 517, 518, 519, 520,
	521, 678, 522, 523, 525, 524, 526, 0, 527, 0,
	528, 529, 530, 0, 0, 0, 0, 0, 531, 0,
	533, 534, 535, 536, 532, 537, 538, 539, 540, 541,
	0, 542, 543, 544, 1222, 545, 546, 547, 548, 549,
	679, 550, 0, 551, 552, 558, 559, 560, 553, 554,
	561, 562, 563, 564, 565, 0, 567, 568, 566, 569,
	570, 571, 0, 572, 573, 555, 556, 574, 575, 1223,
	576, 577, 578, 579, 580, 581, 582, 680, 0, 583,
	0, 584, 585, 586, 588, 557, 589, 594, 595, 681,
	590, 591, 592, 593, 682, 597, 598, 0, 599, 600,
	0, 596, 587, 0, 601, 602, 603, 604, 605, 606,
	607, 364, 608, 0, 609, 683, 684, 685, 686, 0,
	618, 0, 610, 611, 612, 687, 613, 688, 0, 614,
	615, 616, 617, 0, 619, 620, 0, 0, 621, 622,
	623, 625, 626, 624, 627, 0, 628, 0, 0, 629,
	630, 631, 689, 690, 691, 274, 633, 632, 634, 692,
	635, 636, 0, 0, 0, 0, 637, 638, 693, 639,
	640, 641, 280, 282, 281, 283, 284, 285, 286, 0,
	287, 288, 0, 0, 0, 0, 0, 642, 0, 0,
	0, 0, 289, 290, 0, 291, 292, 293, 294, 295,
	296, 643, 644, 0, 297, 645, 298, 646, 0, 647,
	299, 300, 301, 302, 303, 304, 0, 0, 0, 305,
	648, 649, 650, 2896, 306, 307, 651, 0, 0, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 2893, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 0, 330, 331,
	332, 0, 0, 0, 0, 0, 0, 0, 333, 334,
	335, 336, 337, 0, 338, 340, 652, 653, 0, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 350, 351, 0, 352, 353, 0, 354,
	355, 356, 0, 2900, 358, 654, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 655, 656, 370, 0,
	3120, 0, 0, 0, 0, 0, 371, 372, 373, 657,
	0, 0, 0, 374, 0, 375, 376, 377, 2899, 0,
	0, 378, 379, 380, 658, 659, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 660, 0, 661,
	391, 0, 392, 393, 394, 395, 396, 662, 663, 664,
	480, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 3117, 404, 405, 406, 408, 0, 0,
	407, 665, 666, 0, 667, 0, 409, 3119, 0, 668,
	0, 411, 412, 413, 0, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 669, 0, 425, 426, 3116, 0, 427, 428, 429,
	430, 431, 432, 435, 0, 0, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 0, 461, 462, 463, 464,
	470, 472, 473, 468, 469, 471, 474, 475, 466, 467,
	0, 476, 465, 0, 0, 0, 477, 478, 0, 670,
	479, 671, 481, 482, 0, 0, 483, 0, 0, 0,
	485, 486, 487, 0, 0, 488, 489, 672, 0, 490,
	0, 673, 491, 492, 484, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 0, 502, 503, 674, 504, 505,
	506, 675, 507, 508, 509, 676, 510, 677, 511, 512,
	2898, 513, 514, 0, 515, 516, 517, 518, 519, 520,
	521, 678, 522, 523, 525, 524, 526, 0, 527, 0,
	528, 529, 530, 0, 0, 0, 0, 0, 531, 0,
	533, 534, 535, 536, 532, 537, 538, 539, 540, 541,
	0, 542, 543, 544, 0, 545, 546, 547, 548, 549,
	679, 550, 0, 551, 552, 558, 559, 560, 553, 554,
	561, 562, 563, 564, 565, 0, 567, 568, 566, 569,
	570, 571, 0, 572, 573, 555, 556, 574, 575, 0,
	576, 577, 578, 579, 580, 581, 582, 680, 0, 583,
	0, 584, 585, 586, 588, 557, 589, 594, 595, 681,
	590, 591, 592, 593, 682, 597, 598, 0, 599, 600,
	0, 596, 587, 0, 601, 602, 603, 604, 605, 606,
	607, 364, 608, 0, 609, 683, 684, 685, 686, 0,
	618, 0, 610, 611, 612, 687, 613, 688, 0, 614,
	615, 616, 617, 0, 619, 620, 0, 3118, 621, 622,
	623, 625, 626, 624, 627, 0, 628, 0, 0, 629,
	630, 631, 689, 690, 691, 274, 633, 632, 634, 692,
	635, 636, 0, 0, 0, 0, 637, 638, 693, 639,
	640, 641, 280, 282, 281, 283, 284, 285, 286, 0,
	287, 288, 0, 0, 0, 0, 0, 642, 0, 0,
	0, 0, 289, 290, 0, 291, 292, 293, 294, 295,
	296, 643, 644, 0, 297, 645, 298, 646, 0, 647,
	299, 300, 301, 302, 303, 304, 0, 0, 0, 305,
	648, 649, 650, 2896, 306, 307, 651, 0, 0, 2890,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 2893, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 0, 330, 331,
	332, 0, 0, 0, 0, 0, 0, 0, 333, 334,
	335, 336, 337, 0, 338, 340, 652, 653, 0, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 350, 351, 0, 352, 353, 0, 354,
	355, 356, 0, 2900, 358, 654, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 655, 656, 370, 0,
	0, 0, 0, 0, 0, 0, 371, 372, 373, 657,
	0, 0, 0, 374, 0, 375, 376, 377, 2899, 0,
	0, 378, 379, 380, 658, 659, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 660, 0, 661,
	391, 0, 392, 393, 394, 395, 396, 2889, 663, 664,
	480, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 0, 404, 405, 406, 408, 0, 0,
	407, 665, 666, 0, 667, 0, 409, 410, 0, 668,
	0, 411, 412, 413, 0, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 669, 0, 425, 426, 0, 0, 427, 428, 429,
	430, 431, 432, 435, 0, 0, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 0, 461, 462, 463, 464,
	470, 472, 473, 468, 469, 471, 474, 475, 466, 467,
	0, 476, 465, 0, 0, 0, 477, 478, 0, 670,
	479, 671, 481, 482, 0, 0, 483, 0, 0, 0,
	485, 486, 487, 0, 0, 488, 489, 672, 0, 490,
	0, 673, 491, 492, 484, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 0, 502, 503, 674, 504, 505,
	506, 675, 507, 508, 509, 676, 510, 677, 511, 512,
	2898, 513, 514, 0, 515, 516, 517, 518, 519, 520,
	521, 678, 522, 523, 525, 524, 526, 0, 527, 0,
	528, 529, 530, 0, 0, 0, 0, 0, 531, 0,
	533, 534, 535, 536, 532, 537, 538, 539, 540, 541,
	0, 542, 543, 544, 0, 545, 546, 547, 548, 549,
	679, 550, 0, 551, 552, 558, 559, 560, 553, 554,
	561, 562, 563, 564, 565, 0, 567, 568, 566, 569,
	570, 571, 0, 572, 573, 555, 556, 574, 575, 0,
	576, 577, 578, 579, 580, 581, 582, 680, 0, 583,
	0, 584, 585, 586, 588, 557, 589, 594, 595, 681,
	590, 591, 592, 593, 682, 597, 598, 0, 599, 600,
	0, 596, 587, 0, 601, 602, 603, 604, 605, 606,
	607, 364, 608, 0, 609, 683, 684, 685, 686, 0,
	618, 0, 610, 611, 612, 687, 613, 688, 0, 614,
	615, 616, 617, 0, 619, 620, 0, 2897, 621, 622,
	623, 625, 626, 624, 627, 0, 628, 0, 0, 629,
	630, 631, 689, 690, 691, 0, 633, 632, 634, 692,
	635, 636, 1762, 0, 274, 0, 637, 638, 693, 639,
	640, 641, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 280, 282, 281, 283, 284, 285, 286, 1761, 287,
	288, 0, 0, 0, 0, 0, 642, 0, 0, 0,
	0, 289, 290, 0, 291, 292, 293, 294, 295, 296,
	643, 644, 0, 297, 645, 298, 646, 0, 647, 299,
	300, 301, 302, 303, 304, 0, 0, 0, 305, 648,
	649, 650, 0, 306, 307, 651, 0, 0, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	325, 326, 0, 327, 328, 329, 0, 330, 331, 332,
	0, 0, 0, 0, 0, 0, 0, 333, 334, 335,
	1760, 337, 0, 338, 340, 652, 653, 0, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 350, 351, 0, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 654, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 655, 656, 370, 0, 277,
	0, 0, 0, 0, 0, 371, 372, 373, 657, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 658, 659, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 660, 0, 661, 391,
	0, 392, 393, 394, 395, 396, 662, 663, 664, 480,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 278, 404, 405, 406, 408, 0, 0, 407,
	665, 666, 0, 667, 0, 409, 410, 0, 668, 0,
	411, 412, 413, 0, 414, 0, 0, 0, 415, 416,
	417, 418, 419, 420, 0, 421, 423, 422, 0, 424,
	669, 0, 425, 426, 0, 0, 427, 428, 429, 430,
	431, 432, 435, 0, 0, 433, 434, 436, 437, 0,
	438, 439, 441, 444, 440, 442, 443, 445, 458, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 460, 0, 459, 0, 461, 462, 463, 464, 470,
	472, 473, 468, 469, 471, 474, 475, 466, 467, 0,
	476, 465, 0, 279, 0, 477, 478, 0, 670, 479,
	671, 481, 482, 0, 0, 483, 0, 0, 0, 485,
	486, 487, 0, 0, 488, 489, 672, 0, 490, 0,
	673, 491, 492, 484, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 0, 502, 503, 674, 504, 505, 506,
	675, 507, 508, 509, 676, 510, 677, 511, 512, 0,
	513, 514, 0, 515, 516, 517, 518, 519, 520, 521,
	678, 522, 523, 525, 524, 526, 0, 527, 0, 528,
	529, 530, 0, 0, 0, 0, 0, 531, 0, 533,
	534, 535, 536, 532, 537, 538, 539, 540, 541, 0,
	542, 543, 544, 0, 545, 546, 547, 548, 549, 679,
	550, 0, 551, 552, 558, 559, 560, 1763, 554, 561,
	562, 563, 564, 565, 0, 1759, 568, 566, 569, 570,
	571, 0, 572, 573, 555, 556, 574, 575, 0, 576,
	577, 578, 579, 580, 581, 582, 680, 0, 583, 0,
	584, 585, 586, 588, 557, 589, 594, 595, 681, 590,
	591, 592, 593, 682, 597, 598, 0, 599, 600, 0,
	596, 587, 1757, 601, 602, 603, 604, 605, 606, 607,
	364, 608, 0, 609, 683, 684, 685, 686, 0, 618,
	0, 610, 611, 612, 687, 613, 688, 0, 614, 615,
	616, 617, 0, 619, 620, 0, 0, 621, 622, 623,
	625, 626, 624, 627, 0, 628, 0, 0, 629, 630,
	631, 689, 690, 691, 0, 1758, 632, 634, 692, 635,
	636, 1496, 0, 274, 0, 637, 638, 693, 639, 640,
	641, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	280, 282, 281, 283, 284, 285, 286, 0, 287, 288,
	0, 0, 0, 0, 0, 642, 0, 0, 0, 0,
	289, 290, 0, 291, 292, 293, 294, 295, 296, 643,
	644, 0, 297, 645, 298, 646, 0, 647, 299, 300,
	301, 302, 303, 304, 0, 0, 0, 305, 648, 649,
	650, 0, 306, 307, 651, 0, 0, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 0, 330, 331, 332, 0,
	0, 0, 0, 0, 0, 0, 333, 334, 335, 336,
	337, 0, 338, 340, 652, 653, 0, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 350, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 654, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 655, 656, 370, 0, 277, 0,
	0, 0, 0, 0, 371, 372, 373, 657, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 658, 659, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 660, 0, 661, 391, 0,
	392, 393, 394, 395, 396, 1498, 663, 664, 480, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 278, 404, 405, 406, 408, 0, 0, 407, 665,
	666, 0, 667, 0, 409, 410, 0, 668, 0, 411,
	412, 413, 0, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 669,
	0, 425, 426, 0, 0, 427, 428, 429, 430, 431,
	432, 435, 0, 0, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 0, 461, 462, 463, 464, 470, 472,
	473, 468, 469, 471, 474, 475, 466, 467, 0, 476,
	465, 0, 279, 0, 477, 478, 0, 670, 479, 671,
	481, 482, 0, 0, 483, 0, 0, 1257, 485, 486,
	487, 0, 0, 488, 489, 672, 0, 490, 0, 673,
	491, 492, 484, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 0, 502, 503, 674, 504, 505, 506, 675,
	507, 508, 509, 676, 510, 677, 511, 512, 0, 513,
	514, 0, 515, 516, 517, 518, 519, 520, 521, 678,
	522, 523, 525, 524, 526, 0, 527, 0, 528, 529,
	530, 0, 0, 0, 0, 0, 531, 0, 533, 534,
	535, 536, 532, 537, 538, 539, 540, 541, 0, 542,
	543, 544, 0, 545, 546, 547, 548, 549, 679, 550,
	0, 551, 552, 558, 559, 560, 553, 554, 561, 562,
	563, 564, 565, 0, 567, 568, 566, 569, 570, 571,
	0, 572, 573, 555, 556, 574, 575, 0, 576, 577,
	578, 579, 580, 581, 582, 680, 0, 583, 0, 584,
	585, 586, 588, 557, 589, 594, 595, 681, 590, 591,
	592, 593, 682, 597, 598, 0, 599, 600, 0, 596,
	587, 0, 601, 602, 603, 604, 605, 606, 607, 364,
	608, 0, 609, 683, 684, 685, 686, 0, 618, 0,
	610, 611, 612, 687, 613, 688, 0, 614, 615, 616,
	617, 0, 619, 620, 0, 0, 621, 622, 623, 625,
	626, 624, 627, 0, 628, 0, 0, 629, 630, 631,
	689, 690, 691, 0, 633, 632, 634, 692, 635, 636,
	1493, 0, 274, 0, 637, 638, 693, 639, 640, 641,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 280,
	282, 281, 283, 284, 285, 286, 0, 287, 288, 0,
	0, 0, 0, 0, 642, 0, 0, 0, 0, 289,
	290, 0, 291, 292, 293, 294, 295, 296, 643, 644,
	0, 297, 645, 298, 646, 0, 647, 299, 300, 301,
	302, 303, 304, 0, 0, 0, 305, 648, 649, 650,
	0, 306, 307, 651, 0, 0, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	0, 327, 328, 329, 0, 330, 331, 332, 0, 0,
	0, 0, 0, 0, 0, 333, 334, 335, 336, 337,
	0, 338, 340, 652, 653, 0, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	350, 351, 0, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 654, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 655, 656, 370, 0, 277, 0, 0,
	0, 0, 0, 371, 372, 373, 657, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 658, 659, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 660, 0, 661, 391, 0, 392,
	393, 394, 395, 396, 1495, 663, 664, 480, 0, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	278, 404, 405, 406, 408, 0, 0, 407, 665, 666,
	0, 667, 0, 409, 410, 0, 668, 0, 411, 412,
	413, 0, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 0, 421, 423, 422, 0, 424, 669, 0,
	425, 426, 0, 0, 427, 428, 429, 430, 431, 432,
	435, 0, 0, 433, 434, 436, 437, 0, 438, 439,
	441, 444, 440, 442, 443, 445, 458, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 460,
	0, 459, 0, 461, 462, 463, 464, 470, 472, 473,
	468, 469, 471, 474, 475, 466, 467, 0, 476, 465,
	0, 279, 0, 477, 478, 0, 670, 479, 671, 481,
	482, 0, 0, 483, 0, 0, 1257, 485, 486, 487,
	0, 0, 488, 489, 672, 0, 490, 0, 673, 491,
	492, 484, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 0, 502, 503, 674, 504, 505, 506, 675, 507,
	508, 509, 676, 510, 677, 511, 512, 0, 513, 514,
	0, 515, 516, 517, 518, 519, 520, 521, 678, 522,
	523, 525, 524, 526, 0, 527, 0, 528, 529, 530,
	0, 0, 0, 0, 0, 531, 0, 533, 534, 535,
	536, 532, 537, 538, 539, 540, 541, 0, 542, 543,
	544, 0, 545, 546, 547, 548, 549, 679, 550, 0,
	551, 552, 558, 559, 560, 553, 554, 561, 562, 563,
	564, 565, 0, 567, 568, 566, 569, 570, 571, 0,
	572, 573, 555, 556, 574, 575, 0, 576, 577, 578,
	579, 580, 581, 582, 680, 0, 583, 0, 584, 585,
	586, 588, 557, 589, 594, 595, 681, 590, 591, 592,
	593, 682, 597, 598, 0, 599, 600, 0, 596, 587,
	0, 601, 602, 603, 604, 605, 606, 607, 364, 608,
	0, 609, 683, 684, 685, 686, 0, 618, 0, 610,
	611, 612, 687, 613, 688, 0, 614, 615, 616, 617,
	0, 619, 620, 0, 0, 621, 622, 623, 625, 626,
	624, 627, 0, 628, 0, 0, 629, 630, 631, 689,
	690, 691, 0, 633, 632, 634, 692, 635, 636, 1401,
	0, 274, 0, 637, 638, 693, 639, 640, 641, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 280, 282,
	281, 283, 284, 285, 286, 0, 287, 288, 0, 0,
	0, 0, 0, 642, 0, 0, 0, 0, 289, 290,
	0, 291, 292, 293, 294, 295, 296, 643, 644, 0,
	297, 645, 298, 646, 0, 647, 299, 300, 301, 302,
	303, 304, 0, 0, 0, 305, 648, 649, 650, 0,
	306, 307, 651, 0, 0, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 0, 316, 317, 318, 315, 319,
	0, 320, 0, 321, 322, 323, 324, 325, 326, 0,
	327, 328, 329, 0, 330, 331, 332, 0, 0, 0,
	0, 0, 0, 0, 333, 334, 335, 336, 337, 0,
	338, 340, 652, 653, 0, 343, 339, 341, 0, 344,
	342, 345, 0, 346, 347, 348, 0, 0, 349, 350,
	351, 0, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 654, 359, 360, 361, 363, 365, 362, 366, 367,
	368, 369, 655, 656, 370, 0, 277, 0, 0, 0,
	0, 0, 371, 372, 373, 657, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	658, 659, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 660, 0, 661, 391, 0, 392, 393,
	394, 395, 396, 1403, 663, 664, 480, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 278,
	404, 405, 406, 408, 0, 0, 407, 665, 666, 0,
	667, 0, 409, 410, 0, 668, 0, 411, 412, 413,
	0, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 0, 421, 423, 422, 0, 424, 669, 0, 425,
	426, 0, 0, 427, 428, 429, 430, 431, 432, 435,
	0, 0, 433, 434, 436, 437, 0, 438, 439, 441,
	444, 440, 442, 443, 445, 458, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 460, 0,
	459, 0, 461, 462, 463, 464, 470, 472, 473, 468,
	469, 471, 474, 475, 466, 467, 0, 476, 465, 0,
	279, 0, 477, 478, 0, 670, 479, 671, 481, 482,
	0, 0, 483, 0, 0, 1257, 485, 486, 487, 0,
	0, 488, 489, 672, 0, 490, 0, 673, 491, 492,
	484, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	0, 502, 503, 674, 504, 505, 506, 675, 507, 508,
	509, 676, 510, 677, 511, 512, 0, 513, 514, 0,
	515, 516, 517, 518, 519, 520, 521, 678, 522, 523,
	525, 524, 526, 0, 527, 0, 528, 529, 530, 0,
	0, 0, 0, 0, 531, 0, 533, 534, 535, 536,
	532, 537, 538, 539, 540, 541, 0, 542, 543, 544,
	0, 545, 546, 547, 548, 549, 679, 550, 0, 551,
	552, 558, 559, 560, 553, 554, 561, 562, 563, 564,
	565, 0, 567, 568, 566, 569, 570, 571, 0, 572,
	573, 555, 556, 574, 575, 0, 576, 577, 578, 579,
	580, 581, 582, 680, 0, 583, 0, 584, 585, 586,
	588, 557, 589, 594, 595, 681, 590, 591, 592, 593,
	682, 597, 598, 0, 599, 600, 0, 596, 587, 0,
	601, 602, 603, 604, 605, 606, 607, 364, 608, 0,
	609, 683, 684, 685, 686, 0, 618, 0, 610, 611,
	612, 687, 613, 688, 0, 614, 615, 616, 617, 0,
	619, 620, 0, 0, 621, 622, 623, 625, 626, 624,
	627, 0, 628, 0, 0, 629, 630, 631, 689, 690,
	691, 0, 633, 632, 634, 692, 635, 636, 725, 0,
	274, 0, 637, 638, 693, 639, 640, 641, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 280, 282, 281,
	283, 724, 285, 286, 714, 287, 288, 0, 0, 0,
	0, 0, 642, 0, 0, 0, 0, 289, 290, 0,
	291, 292, 293, 294, 295, 296, 643, 644, 0, 297,
	645, 298, 646, 0, 647, 299, 300, 301, 302, 303,
	304, 0, 0, 0, 305, 648, 649, 650, 0, 306,
	307, 651, 0, 0, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 717, 327,
	328, 329, 0, 330, 331, 332, 0, 0, 0, 0,
	0, 0, 0, 333, 334, 335, 336, 337, 0, 338,
	340, 652, 653, 0, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 350, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	654, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 655, 656, 370, 0, 0, 0, 0, 0, 0,
	0, 371, 372, 373, 657, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 658,
	659, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	718, 390, 660, 0, 661, 391, 0, 392, 393, 394,
	395, 396, 662, 663, 664, 480, 0, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 0, 404,
	405, 406, 408, 0, 0, 407, 665, 666, 0, 667,
	0, 409, 410, 0, 668, 0, 411, 412, 413, 0,
	414, 0, 0, 0, 415, 416, 417, 418, 419, 420,
	0, 421, 423, 422, 0, 424, 669, 0, 425, 426,
	0, 0, 427, 428, 429, 430, 431, 432, 435, 0,
	0, 433, 434, 436, 437, 0, 438, 439, 441, 444,
	440, 442, 443, 445, 458, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 460, 0, 459,
	0, 461, 462, 463, 464, 470, 472, 473, 468, 469,
	471, 474, 475, 466, 467, 0, 476, 465, 0, 0,
	0, 477, 478, 0, 670, 479, 671, 481, 482, 0,
	0, 483, 0, 0, 0, 485, 486, 487, 0, 0,
	488, 489, 672, 0, 490, 0, 673, 491, 492, 484,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 0,
	502, 503, 674, 504, 505, 506, 675, 507, 508, 509,
	676, 510, 677, 511, 512, 0, 513, 514, 0, 515,
	516, 517, 518, 519, 520, 521, 678, 522, 523, 525,
	524, 526, 0, 527, 0, 528, 529, 530, 0, 0,
	0, 0, 0, 531, 0, 533, 534, 535, 536, 532,
	537, 538, 539, 540, 541, 0, 542, 543, 544, 0,
	545, 546, 547, 548, 549, 679, 550, 0, 551, 552,
	558, 559, 560, 553, 554, 561, 562, 563, 564, 565,
	719, 567, 568, 566, 569, 570, 571, 0, 572, 573,
	555, 556, 574, 575, 0, 576, 577, 578, 579, 580,
	581, 582, 680, 0, 583, 0, 584, 585, 586, 588,
	557, 589, 594, 595, 681, 590, 591, 592, 593, 682,
	597, 598, 0, 599, 600, 0, 596, 587, 0, 601,
	602, 603, 604, 605, 606, 607, 364, 608, 0, 609,
	683, 684, 685, 686, 0, 618, 0, 610, 611, 612,
	687, 613, 688, 0, 614, 615, 616, 617, 0, 619,
	620, 0, 0, 621, 622, 623, 625, 626, 624, 627,
	0, 628, 0, 0, 629, 630, 631, 689, 690, 691,
	0, 633, 632, 634, 692, 635, 636, 713, 0, 274,
	0, 637, 638, 693, 639, 640, 641, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 280, 282, 281, 283,
	284, 285, 286, 714, 287, 288, 0, 0, 0, 0,
	0, 642, 0, 0, 0, 0, 289, 290, 0, 291,
	292, 293, 294, 295, 296, 643, 644, 0, 297, 645,
	298, 646, 0, 647, 299, 300, 301, 302, 303, 304,
	0, 0, 0, 305, 648, 649, 650, 0, 306, 307,
	651, 0, 0, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 717, 327, 328,
	329, 0, 330, 331, 332, 0, 0, 0, 0, 0,
	0, 0, 333, 334, 335, 336, 337, 0, 338, 340,
	652, 653, 0, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 350, 351, 0,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 654,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	655, 656, 370, 0, 0, 0, 0, 0, 0, 0,
	371, 372, 373, 657, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 658, 659,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 718,
	390, 660, 0, 661, 391, 0, 392, 393, 394, 395,
	396, 662, 663, 664, 480, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 0, 404, 405,
	406, 408, 0, 0, 407, 665, 666, 0, 667, 0,
	409, 410, 0, 668, 0, 411, 412, 413, 0, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 669, 0, 425, 426, 0,
	0, 427, 428, 429, 430, 431, 432, 435, 0, 0,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 0,
	461, 462, 463, 464, 470, 472, 473, 468, 469, 471,
	474, 475, 466, 467, 0, 476, 465, 0, 0, 0,
	477, 478, 0, 670, 479, 671, 481, 482, 0, 0,
	483, 0, 0, 0, 485, 486, 487, 0, 0, 488,
	489, 672, 0, 490, 0, 673, 491, 492, 484, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 0, 502,
	503, 674, 504, 505, 506, 675, 507, 508, 509, 676,
	510, 677, 511, 512, 0, 513, 514, 0, 515, 516,
	517, 518, 519, 520, 521, 678, 522, 523, 525, 524,
	526, 0, 527, 0, 528, 529, 530, 0, 0, 0,
	0, 0, 531, 0, 533, 534, 535, 536, 532, 537,
	538, 539, 540, 541, 0, 542, 543, 544, 0, 545,
	546, 547, 548, 549, 679, 550, 0, 551, 552, 558,
	559, 560, 553, 554, 561, 562, 563, 564, 565, 719,
	567, 568, 566, 569, 570, 571, 0, 572, 573, 555,
	556, 574, 575, 0, 576, 577, 578, 579, 580, 581,
	582, 680, 0, 583, 0, 584, 585, 586, 588, 557,
	589, 594, 595, 681, 590, 591, 592, 593, 682, 597,
	598, 0, 599, 600, 0, 596, 587, 0, 601, 602,
	603, 604, 605, 606, 607, 364, 608, 0, 609, 683,
	684, 685, 686, 0, 618, 0, 610, 611, 612, 687,
	613, 688, 0, 614, 615, 616, 617, 0, 619, 620,
	0, 0, 621, 622, 623, 625, 626, 624, 627, 0,
	628, 0, 0, 629, 630, 631, 689, 690, 691, 274,
	633, 632, 634, 692, 635, 636, 0, 0, 0, 0,
	637, 638, 693, 639, 640, 641, 280, 282, 281, 283,
	284, 285, 286, 714, 287, 288, 0, 0, 0, 0,
	0, 642, 0, 0, 0, 0, 289, 290, 0, 291,
	292, 293, 294, 295, 296, 643, 644, 0, 297, 645,
	298, 646, 0, 647, 299, 300, 301, 302, 303, 304,
	0, 0, 0, 305, 648, 649, 650, 0, 306, 307,
	651, 0, 0, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 717, 327, 328,
	329, 0, 330, 331, 332, 0, 0, 0, 0, 0,
	0, 0, 333, 334, 335, 336, 337, 0, 338, 340,
	652, 653, 0, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 350, 351, 0,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 654,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	655, 656, 370, 0, 0, 0, 0, 0, 0, 0,
	371, 372, 373, 657, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 658, 659,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 718,
	390, 660, 0, 661, 391, 0, 392, 393, 394, 395,
	396, 662, 663, 664, 480, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 0, 404, 405,
	406, 408, 0, 0, 407, 665, 666, 0, 667, 0,
	409, 410, 0, 668, 0, 411, 412, 413, 0, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 669, 0, 425, 426, 0,
	0, 427, 428, 429, 430, 431, 432, 435, 0, 0,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 0,
	461, 462, 463, 464, 470, 472, 473, 468, 469, 471,
	474, 475, 466, 467, 0, 476, 465, 0, 0, 0,
	477, 478, 0, 670, 479, 671, 481, 482, 0, 0,
	483, 0, 0, 0, 485, 486, 487, 0, 0, 488,
	489, 672, 0, 490, 0, 673, 491, 492, 484, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 0, 502,
	503, 674, 504, 505, 506, 675, 507, 508, 509, 676,
	510, 677, 511, 512, 0, 513, 514, 0, 515, 516,
	517, 518, 519, 520, 521, 678, 522, 523, 525, 524,
	526, 0, 527, 0, 528, 529, 530, 0, 0, 0,
	0, 0, 531, 0, 533, 534, 535, 536, 532, 537,
	538, 539, 540, 541, 0, 542, 543, 544, 0, 545,
	546, 547, 548, 549, 679, 550, 0, 551, 552, 558,
	559, 560, 553, 554, 561, 562, 563, 564, 565, 719,
	567, 568, 566, 569, 570, 571, 0, 572, 573, 555,
	556, 574, 575, 0, 576, 577, 578, 579, 580, 581,
	582, 680, 0, 583, 0, 584, 585, 586, 588, 557,
	589, 594, 595, 681, 590, 591, 592, 593, 682, 597,
	598, 0, 599, 600, 0, 596, 587, 0, 601, 602,
	603, 604, 605, 606, 607, 364, 608, 0, 609, 683,
	684, 685, 686, 0, 618, 0, 610, 611, 612, 687,
	613, 688, 0, 614, 615, 616, 617, 0, 619, 620,
	0, 0, 621, 622, 623, 625, 626, 624, 627, 0,
	628, 0, 0, 629, 630, 631, 689, 690, 691, 274,
	633, 632, 634, 692, 635, 636, 0, 0, 0, 0,
	637, 638, 693, 639, 640, 641, 280, 282, 281, 283,
	284, 285, 286, 714, 287, 288, 0, 0, 0, 0,
	0, 642, 0, 0, 0, 0, 289, 290, 0, 291,
	292, 293, 294, 295, 296, 643, 644, 0, 297, 645,
	298, 646, 0, 647, 299, 300, 301, 302, 303, 304,
	0, 0, 0, 305, 648, 649, 650, 0, 306, 307,
	651, 0, 0, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 717, 327, 328,
	329, 0, 330, 331, 332, 0, 0, 0, 0, 0,
	0, 0, 333, 334, 335, 336, 337, 0, 338, 340,
	652, 653, 0, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 350, 351, 0,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 654,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	655, 656, 370, 0, 0, 0, 0, 0, 0, 0,
	371, 372, 373, 657, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 658, 659,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 3983,
	390, 660, 0, 661, 391, 0, 392, 393, 394, 395,
	396, 662, 663, 664, 480, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 0, 404, 405,
	406, 408, 0, 0, 407, 665, 666, 0, 667, 0,
	409, 410, 0, 668, 0, 411, 412, 413, 0, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 669, 0, 425, 426, 0,
	0, 427, 428, 429, 430, 431, 432, 435, 0, 0,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 0,
	461, 462, 463, 464, 470, 472, 473, 468, 469, 471,
	474, 475, 466, 467, 0, 476, 465, 0, 0, 0,
	477, 478, 0, 670, 479, 671, 481, 482, 0, 0,
	483, 0, 0, 0, 485, 486, 487, 0, 0, 488,
	489, 672, 0, 490, 0, 673, 491, 492, 484, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 0, 502,
	503, 674, 504, 505, 506, 675, 507, 508, 509, 676,
	510, 677, 511, 512, 0, 513, 514, 0, 515, 516,
	517, 518, 519, 520, 521, 678, 522, 523, 525, 524,
	526, 0, 527, 0, 528, 529, 530, 0, 0, 0,
	0, 0, 531, 0, 533, 534, 535, 536, 532, 537,
	538, 539, 540, 541, 0, 542, 543, 544, 0, 545,
	546, 547, 548, 549, 679, 550, 0, 551, 552, 558,
	559, 560, 553, 554, 561, 562, 563, 564, 565, 719,
	567, 568, 566, 569, 570, 571, 0, 572, 573, 555,
	556, 574, 575, 0, 576, 577, 578, 579, 580, 581,
	582, 680, 0, 583, 0, 584, 585, 586, 588, 557,
	589, 594, 595, 681, 590, 591, 592, 593, 682, 597,
	598, 0, 599, 600, 0, 596, 587, 0, 601, 602,
	603, 604, 605, 606, 607, 364, 608, 0, 609, 683,
	684, 685, 686, 0, 618, 0, 610, 611, 612, 687,
	613, 688, 0, 614, 615, 616, 617, 0, 619, 620,
	0, 0, 621, 622, 623, 625, 626, 624, 627, 0,
	628, 0, 0, 629, 630, 631, 689, 690, 691, 274,
	633, 632, 634, 692, 635, 636, 0, 0, 0, 0,
	637, 638, 693, 639, 640, 641, 280, 282, 281, 283,
	284, 285, 286, 0, 287, 288, 0, 0, 0, 0,
	0, 642, 0, 0, 0, 0, 289, 290, 0, 291,
	292, 293, 294, 295, 296, 643, 644, 0, 297, 645,
	298, 646, 0, 647, 299, 300, 301, 302, 303, 304,
	0, 0, 0, 305, 648, 649, 650, 0, 306, 307,
	651, 0, 0, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 0, 330, 331, 332, 0, 0, 0, 0, 0,
	0, 0, 333, 334, 335, 336, 337, 0, 338, 340,
	652, 653, 0, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 350, 351, 0,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 654,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	655, 656, 370, 0, 277, 0, 0, 0, 0, 0,
	371, 372, 373, 657, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 658, 659,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 660, 0, 661, 391, 0, 392, 393, 394, 395,
	396, 662, 663, 664, 480, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 278, 404, 405,
	406, 408, 0, 0, 407, 665, 666, 0, 667, 0,
	409, 410, 0, 668, 0, 411, 412, 413, 0, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 669, 0, 425, 426, 0,
	0, 427, 428, 429, 430, 431, 432, 435, 0, 0,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 0,
	461, 462, 463, 464, 470, 472, 473, 468, 469, 471,
	474, 475, 466, 467, 0, 476, 465, 0, 279, 0,
	477, 478, 0, 670, 479, 671, 481, 482, 0, 0,
	483, 0, 0, 1257, 485, 486, 487, 0, 0, 488,
	489, 672, 0, 490, 0, 673, 491, 492, 484, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 0, 502,
	503, 674, 504, 505, 506, 675, 507, 508, 509, 676,
	510, 677, 511, 512, 0, 513, 514, 0, 515, 516,
	517, 518, 519, 520, 521, 678, 522, 523, 525, 524,
	526, 0, 527, 0, 528, 529, 530, 0, 0, 0,
	0, 0, 531, 0, 533, 534, 535, 536, 532, 537,
	538, 539, 540, 541, 0, 542, 543, 544, 0, 545,
	546, 547, 548, 549, 679, 550, 0, 551, 552, 558,
	559, 560, 553, 554, 561, 562, 563, 564, 565, 0,
	567, 568, 566, 569, 570, 571, 0, 572, 573, 555,
	556, 574, 575, 0, 576, 577, 578, 579, 580, 581,
	582, 680, 0, 583, 0, 584, 585, 586, 588, 557,
	589, 594, 595, 681, 590, 591, 592, 593, 682, 597,
	598, 0, 599, 600, 0, 596, 587, 0, 601, 602,
	603, 604, 605, 606, 607, 364, 608, 0, 609, 683,
	684, 685, 686, 0, 618, 0, 610, 611, 612, 687,
	613, 688, 0, 614, 615, 616, 617, 0, 619, 620,
	0, 0, 621, 622, 623, 625, 626, 624, 627, 0,
	628, 0, 0, 629, 630, 631, 689, 690, 691, 274,
	633, 632, 634, 692, 635, 636, 0, 0, 0, 0,
	637, 638, 693, 639, 640, 641, 280, 282, 281, 283,
	284, 285, 286, 0, 287, 288, 0, 0, 0, 0,
	0, 642, 0, 0, 0, 0, 289, 290, 0, 291,
	292, 293, 294, 295, 296, 643, 644, 0, 297, 645,
	298, 646, 0, 647, 299, 300, 301, 302, 303, 304,
	0, 0, 0, 305, 648, 649, 650, 0, 306, 307,
	651, 0, 0, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 0, 330, 331, 332, 0, 0, 0, 0, 0,
	0, 0, 333, 334, 335, 336, 337, 0, 338, 340,
	652, 653, 0, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 350, 351, 0,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 654,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	655, 656, 370, 0, 277, 0, 0, 0, 0, 0,
	371, 372, 373, 657, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 658, 659,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 660, 0, 661, 391, 0, 392, 393, 394, 395,
	396, 662, 663, 664, 480, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 278, 404, 405,
	406, 408, 0, 0, 407, 665, 666, 0, 667, 0,
	409, 410, 0, 668, 0, 411, 412, 413, 0, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 669, 0, 425, 426, 0,
	0, 427, 428, 429, 430, 431, 432, 435, 0, 0,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 0,
	461, 462, 463, 464, 470, 472, 473, 468, 469, 471,
	474, 475, 466, 467, 3522, 476, 465, 0, 279, 0,
	477, 478, 0, 670, 479, 671, 481, 482, 0, 0,
	483, 0, 0, 0, 485, 486, 487, 0, 0, 488,
	489, 672, 0, 490, 0, 673, 491, 492, 484, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 0, 502,
	503, 674, 504, 505, 506, 675, 507, 508, 509, 676,
	510, 677, 511, 512, 0, 513, 514, 0, 515, 516,
	517, 518, 519, 520, 521, 678, 522, 523, 525, 524,
	526, 0, 527, 0, 528, 529, 530, 0, 0, 0,
	0, 0, 531, 0, 533, 534, 535, 536, 532, 537,
	538, 539, 540, 541, 0, 542, 543, 544, 0, 545,
	546, 547, 548, 549, 679, 550, 0, 551, 552, 558,
	559, 560, 553, 554, 561, 562, 563, 564, 565, 0,
	567, 568, 566, 569, 570, 571, 0, 572, 573, 555,
	556, 574, 575, 0, 576, 577, 578, 579, 580, 581,
	582, 680, 0, 583, 0, 584, 585, 586, 588, 557,
	589, 594, 595, 681, 590, 591, 592, 593, 682, 597,
	598, 0, 599, 600, 0, 596, 587, 0, 601, 602,
	603, 604, 605, 606, 607, 364, 608, 0, 609, 683,
	684, 685, 686, 0, 618, 0, 610, 611, 612, 687,
	613, 688, 0, 614, 615, 616, 617, 0, 619, 620,
	0, 0, 621, 622, 623, 625, 626, 624, 627, 0,
	628, 0, 0, 629, 630, 631, 689, 690, 691, 0,
	633, 632, 634, 692, 635, 636, 3065, 0, 274, 0,
	637, 638, 693, 639, 640, 641, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 280, 282, 281, 283, 284,
	285, 286, 0, 287, 288, 0, 0, 0, 0, 0,
	642, 0, 0, 0, 0, 289, 290, 0, 291, 292,
	293, 294, 295, 296, 643, 644, 0, 297, 645, 298,
	646, 0, 647, 299, 300, 301, 302, 303, 304, 0,
	0, 0, 305, 648, 649, 650, 0, 306, 307, 651,
	0, 0, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	0, 330, 331, 332, 0, 0, 0, 0, 0, 0,
	0, 333, 334, 335, 336, 337, 0, 338, 340, 652,
	653, 0, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 350, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 654, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 655,
	656, 370, 0, 277, 0, 0, 0, 0, 0, 371,
	372, 373, 657, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 658, 659, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	660, 0, 661, 391, 0, 392, 393, 394, 395, 396,
	3064, 663, 664, 480, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 278, 404, 405, 406,
	408, 0, 0, 407, 665, 666, 0, 667, 0, 409,
	410, 0, 668, 0, 411, 412, 413, 0, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 0, 421,
	423, 422, 0, 424, 669, 0, 425, 426, 0, 0,
	427, 428, 429, 430, 431, 432, 435, 0, 0, 433,
	434, 436, 437, 0, 438, 439, 441, 444, 440, 442,
	443, 445, 458, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 0, 459, 0, 461,
	462, 463, 464, 470, 472, 473, 468, 469, 471, 474,
	475, 466, 467, 0, 476, 465, 0, 279, 0, 477,
	478, 0, 670, 479, 671, 481, 482, 0, 0, 483,
	0, 0, 0, 485, 486, 487, 0, 0, 488, 489,
	672, 0, 490, 0, 673, 491, 492, 484, 493, 494,
	495, 496, 497, 498, 499, 500, 501, 0, 502, 503,
	674, 504, 505, 506, 675, 507, 508, 509, 676, 510,
	677, 511, 512, 0, 513, 514, 0, 515, 516, 517,
	518, 519, 520, 521, 678, 522, 523, 525, 524, 526,
	0, 527, 0, 528, 529, 530, 0, 0, 0, 0,
	0, 531, 0, 533, 534, 535, 536, 532, 537, 538,
	539, 540, 541, 0, 542, 543, 544, 0, 545, 546,
	547, 548, 549, 679, 550, 0, 551, 552, 558, 559,
	560, 553, 554, 561, 562, 563, 564, 565, 0, 567,
	568, 566, 569, 570, 571, 0, 572, 573, 555, 556,
	574, 575, 0, 576, 577, 578, 579, 580, 581, 582,
	680, 0, 583, 0, 584, 585, 586, 588, 557, 589,
	594, 595, 681, 590, 591, 592, 593, 682, 597, 598,
	0, 599, 600, 0, 596, 587, 0, 601, 602, 603,
	604, 605, 606, 607, 364, 608, 0, 609, 683, 684,
	685, 686, 0, 618, 0, 610, 611, 612, 687, 613,
	688, 0, 614, 615, 616, 617, 0, 619, 620, 0,
	0, 621, 622, 623, 625, 626, 624, 627, 0, 628,
	0, 0, 629, 630, 631, 689, 690, 691, 0, 633,
	632, 634, 692, 635, 636, 2347, 0, 274, 0, 637,
	638, 693, 639, 640, 641, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 280, 282, 281, 283, 284, 285,
	286, 0, 287, 288, 0, 0, 0, 0, 0, 642,
	0, 0, 0, 0, 289, 290, 0, 291, 292, 293,
	294, 295, 296, 643, 644, 0, 297, 645, 298, 646,
	0, 647, 299, 300, 301, 302, 303, 304, 0, 0,
	0, 305, 648, 649, 650, 0, 306, 307, 651, 0,
	0, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 0,
	330, 331, 332, 0, 0, 0, 0, 0, 0, 0,
	333, 334, 335, 336, 337, 0, 338, 340, 652, 653,
	0, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 350, 351, 0, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 654, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 655, 656,
	370, 0, 277, 0, 0, 0, 0, 0, 371, 372,
	373, 657, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 658, 659, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 660,
	0, 661, 391, 0, 392, 393, 394, 395, 396, 662,
	663, 664, 480, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 278, 404, 405, 406, 408,
	0, 0, 407, 665, 666, 0, 667, 0, 409, 410,
	0, 668, 0, 411, 412, 413, 0, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 0, 424, 669, 0, 425, 426, 0, 0, 427,
	428, 429, 430, 431, 432, 435, 0, 0, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 459, 0, 461, 462,
	463, 464, 470, 472, 473, 468, 469, 471, 474, 475,
	466, 467, 0, 476, 465, 0, 279, 0, 477, 478,
	0, 670, 479, 671, 481, 482, 0, 0, 483, 0,
	0, 0, 485, 486, 487, 0, 0, 488, 489, 672,
	0, 490, 0, 673, 491, 492, 484, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 0, 502, 503, 674,
	504, 505, 506, 675, 507, 508, 509, 676, 510, 677,
	511, 512, 0, 513, 514, 0, 515, 516, 517, 518,
	519, 520, 521, 678, 522, 523, 525, 524, 526, 0,
	527, 0, 528, 529, 530, 0, 0, 0, 0, 0,
	531, 0, 533, 534, 535, 536, 532, 537, 538, 539,
	540, 541, 0, 542, 543, 544, 0, 545, 546, 547,
	548, 549, 679, 550, 0, 551, 552, 558, 559, 560,
	553, 554, 561, 562, 563, 564, 565, 0, 567, 568,
	566, 569, 570, 571, 0, 572, 573, 555, 556, 574,
	575, 0, 576, 577, 578, 579, 580, 581, 582, 680,
	0, 583, 0, 584, 585, 586, 588, 557, 589, 594,
	595, 681, 590, 591, 592, 593, 682, 597, 598, 0,
	599, 600, 0, 596, 587, 0, 601, 602, 603, 604,
	605, 606, 607, 364, 608, 0, 609, 683, 684, 685,
	686, 0, 618, 0, 610, 611, 612, 687, 613, 688,
	0, 614, 615, 616, 617, 0, 619, 620, 0, 0,
	621, 622, 623, 625, 626, 624, 627, 0, 628, 0,
	0, 629, 630, 631, 689, 690, 691, 274, 633, 632,
	634, 692, 635, 636, 0, 0, 0, 0, 637, 638,
	693, 639, 640, 641, 280, 282, 281, 283, 284, 285,
	286, 0, 287, 288, 0, 0, 0, 0, 0, 642,
	0, 0, 0, 0, 289, 290, 0, 291, 292, 293,
	294, 295, 296, 643, 644, 0, 297, 645, 298, 646,
	0, 647, 299, 300, 301, 302, 303, 304, 0, 0,
	0, 305, 648, 649, 650, 0, 306, 307, 651, 0,
	0, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 0,
	330, 331, 332, 0, 0, 0, 0, 0, 0, 0,
	333, 334, 335, 336, 337, 0, 338, 340, 652, 653,
	0, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 350, 351, 0, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 654, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 655, 656,
	370, 0, 277, 0, 0, 0, 0, 0, 371, 372,
	373, 657, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 658, 659, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 660,
	0, 661, 391, 0, 392, 393, 394, 395, 396, 662,
	663, 664, 480, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 278, 404, 405, 406, 408,
	0, 0, 407, 665, 666, 0, 667, 0, 409, 410,
	0, 668, 0, 411, 412, 413, 0, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 0, 424, 669, 0, 425, 426, 0, 0, 427,
	428, 429, 430, 431, 432, 435, 0, 0, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 459, 0, 461, 462,
	463, 464, 470, 472, 473, 468, 469, 471, 474, 475,
	466, 467, 0, 476, 465, 0, 279, 0, 477, 478,
	0, 670, 479, 671, 481, 482, 0, 0, 483, 0,
	0, 0, 485, 486, 487, 0, 0, 488, 489, 672,
	0, 490, 0, 673, 491, 492, 484, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 0, 502, 503, 674,
	504, 505, 506, 675, 507, 508, 509, 676, 510, 677,
	511, 512, 0, 513, 514, 0, 515, 516, 517, 518,
	519, 520, 521, 678, 522, 523, 525, 524, 526, 0,
	527, 0, 528, 529, 530, 0, 0, 0, 0, 0,
	531, 0, 533, 534, 535, 536, 532, 537, 538, 539,
	540, 541, 0, 542, 543, 544, 0, 545, 546, 547,
	548, 549, 679, 550, 0, 551, 552, 558, 559, 560,
	553, 554, 561, 562, 563, 564, 565, 0, 567, 568,
	566, 569, 570, 571, 0, 572, 573, 555, 556, 574,
	575, 0, 576, 577, 578, 579, 580, 581, 582, 680,
	0, 583, 0, 584, 585, 586, 588, 557, 589, 594,
	595, 681, 590, 591, 592, 593, 682, 597, 598, 0,
	599, 600, 0, 596, 587, 2284, 601, 602, 603, 604,
	605, 606, 607, 364, 608, 0, 609, 683, 684, 685,
	686, 0, 618, 0, 610, 611, 612, 687, 613, 688,
	0, 614, 615, 616, 617, 0, 619, 620, 0, 0,
	621, 622, 623, 625, 626, 624, 627, 0, 628, 0,
	0, 629, 630, 631, 689, 690, 691, 0, 633, 632,
	634, 692, 635, 636, 2291, 0, 274, 0, 637, 638,
	693, 639, 640, 641, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 280, 282, 281, 283, 284, 285, 286,
	0, 287, 288, 0, 0, 0, 0, 0, 642, 0,
	0, 0, 0, 289, 290, 0, 291, 292, 293, 294,
	295, 296, 643, 644, 0, 297, 645, 298, 646, 0,
	647, 299, 300, 301, 302, 303, 304, 0, 0, 0,
	305, 648, 649, 650, 0, 306, 307, 651, 0, 0,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 0, 330,
	331, 332, 0, 0, 0, 0, 0, 0, 0, 333,
	334, 335, 336, 337, 0, 338, 340, 652, 653, 0,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 350, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 654, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 655, 656, 370,
	0, 277, 0, 0, 0, 0, 0, 371, 372, 373,
	657, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 658, 659, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 660, 0,
	661, 391, 0, 392, 393, 394, 395, 396, 2290, 663,
	664, 480, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 278, 404, 405, 406, 408, 0,
	0, 407, 665, 666, 0, 667, 0, 409, 410, 0,
	668, 0, 411, 412, 413, 0, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 0, 421, 423, 422,
	0, 424, 669, 0, 425, 426, 0, 0, 427, 428,
	429, 430, 431, 432, 435, 0, 0, 433, 434, 436,
	437, 0, 438, 439, 441, 444, 440, 442, 443, 445,
	458, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 459, 0, 461, 462, 463,
	464, 470, 472, 473, 468, 469, 471, 474, 475, 466,
	467, 0, 476, 465, 0, 279, 0, 477, 478, 0,
	670, 479, 671, 481, 482, 0, 0, 483, 0, 0,
	0, 485, 486, 487, 0, 0, 488, 489, 672, 0,
	490, 0, 673, 491, 492, 484, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 0, 502, 503, 674, 504,
	505, 506, 675, 507, 508, 509, 676, 510, 677, 511,
	512, 0, 513, 514, 0, 515, 516, 517, 518, 519,
	520, 521, 678, 522, 523, 525, 524, 526, 0, 527,
	0, 528, 529, 530, 0, 0, 0, 0, 0, 531,
	0, 533, 534, 535, 536, 532, 537, 538, 539, 540,
	541, 0, 542, 543, 544, 0, 545, 546, 547, 548,
	549, 679, 550, 0, 551, 552, 558, 559, 560, 553,
	554, 561, 562, 563, 564, 565, 0, 567, 568, 566,
	569, 570, 571, 0, 572, 573, 555, 556, 574, 575,
	0, 576, 577, 578, 579, 580, 581, 582, 680, 0,
	583, 0, 584, 585, 586, 588, 557, 589, 594, 595,
	681, 590, 591, 592, 593, 682, 597, 598, 0, 599,
	600, 0, 596, 587, 0, 601, 602, 603, 604, 605,
	606, 607, 364, 608, 0, 609, 683, 684, 685, 686,
	0, 618, 0, 610, 611, 612, 687, 613, 688, 0,
	614, 615, 616, 617, 0, 619, 620, 0, 0, 621,
	622, 623, 625, 626, 624, 627, 0, 628, 0, 0,
	629, 630, 631, 689, 690, 691, 0, 633, 632, 634,
	692, 635, 636, 2277, 0, 274, 0, 637, 638, 693,
	639, 640, 641, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 280, 282, 281, 283, 284, 285, 286, 0,
	287, 288, 0, 0, 0, 0, 0, 642, 0, 0,
	0, 0, 289, 290, 0, 291, 292, 293, 294, 295,
	296, 643, 644, 0, 297, 645, 298, 646, 0, 647,
	299, 300, 301, 302, 303, 304, 0, 0, 0, 305,
	648, 649, 650, 0, 306, 307, 651, 0, 0, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 0, 330, 331,
	332, 0, 0, 0, 0, 0, 0, 0, 333, 334,
	335, 336, 337, 0, 338, 340, 652, 653, 0, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 350, 351, 0, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 654, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 655, 656, 370, 0,
	277, 0, 0, 0, 0, 0, 371, 372, 373, 657,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 658, 659, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 660, 0, 661,
	391, 0, 392, 393, 394, 395, 396, 2279, 663, 664,
	480, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 278, 404, 405, 406, 408, 0, 0,
	407, 665, 666, 0, 667, 0, 409, 410, 0, 668,
	0, 411, 412, 413, 0, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 669, 0, 425, 426, 0, 0, 427, 428, 429,
	430, 431, 432, 435, 0, 0, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 0, 461, 462, 463, 464,
	470, 472, 473, 468, 469, 471, 474, 475, 466, 467,
	0, 476, 465, 0, 279, 0, 477, 478, 0, 670,
	479, 671, 481, 482, 0, 0, 483, 0, 0, 0,
	485, 486, 487, 0, 0, 488, 489, 672, 0, 490,
	0, 673, 491, 492, 484, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 0, 502, 503, 674, 504, 505,
	506, 675, 507, 508, 509, 676, 510, 677, 511, 512,
	0, 513, 514, 0, 515, 516, 517, 518, 519, 520,
	521, 678, 522, 523, 525, 524, 526, 0, 527, 0,
	528, 529, 530, 0, 0, 0, 0, 0, 531, 0,
	533, 534, 535, 536, 532, 537, 538, 539, 540, 541,
	0, 542, 543, 544, 0, 545, 546, 547, 548, 549,
	679, 550, 0, 551, 552, 558, 559, 560, 553, 554,
	561, 562, 563, 564, 565, 0, 567, 568, 566, 569,
	570, 571, 0, 572, 573, 555, 556, 574, 575, 0,
	576, 577, 578, 579, 580, 581, 582, 680, 0, 583,
	0, 584, 585, 586, 588, 557, 589, 594, 595, 681,
	590, 591, 592, 593, 682, 597, 598, 0, 599, 600,
	0, 596, 587, 0, 601, 602, 603, 604, 605, 606,
	607, 364, 608, 0, 609, 683, 684, 685, 686, 0,
	618, 0, 610, 611, 612, 687, 613, 688, 0, 614,
	615, 616, 617, 0, 619, 620, 0, 0, 621, 622,
	623, 625, 626, 624, 627, 0, 628, 0, 0, 629,
	630, 631, 689, 690, 691, 274, 633, 632, 634, 692,
	635, 636, 0, 0, 0, 0, 637, 638, 693, 639,
	640, 641, 280, 282, 281, 283, 284, 285, 286, 0,
	287, 288, 0, 0, 0, 0, 0, 642, 0, 0,
	0, 0, 289, 290, 0, 291, 292, 293, 294, 295,
	296, 643, 644, 0, 297, 645, 298, 646, 0, 647,
	299, 300, 301, 302, 303, 304, 0, 0, 0, 305,
	648, 649, 650, 0, 306, 307, 651, 0, 0, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 0, 330, 331,
	332, 0, 0, 0, 0, 0, 0, 0, 333, 334,
	335, 336, 337, 0, 338, 340, 652, 653, 0, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 350, 351, 0, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 654, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 655, 656, 370, 0,
	277, 0, 0, 0, 0, 0, 371, 372, 373, 657,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 658, 659, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 660, 0, 661,
	391, 0, 392, 393, 394, 395, 396, 2242, 663, 664,
	480, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 278, 404, 405, 406, 408, 0, 0,
	407, 665, 666, 0, 667, 0, 409, 410, 0, 668,
	0, 411, 412, 413, 0, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 669, 0, 425, 426, 0, 0, 427, 428, 429,
	430, 431, 432, 435, 0, 0, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 0, 461, 462, 463, 464,
	470, 472, 473, 468, 469, 471, 474, 475, 466, 467,
	0, 476, 465, 0, 279, 0, 477, 478, 0, 670,
	479, 671, 481, 482, 0, 0, 483, 0, 0, 1257,
	485, 486, 487, 0, 0, 488, 489, 672, 0, 490,
	0, 673, 491, 492, 484, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 0, 502, 503, 674, 504, 505,
	506, 675, 507, 508, 509, 676, 510, 677, 511, 512,
	0, 513, 514, 0, 515, 516, 517, 518, 519, 520,
	521, 678, 522, 523, 525, 524, 526, 0, 527, 0,
	528, 529, 530, 0, 0, 0, 0, 0, 531, 0,
	533, 534, 535, 536, 532, 537, 538, 539, 540, 541,
	0, 542, 543, 544, 0, 545, 546, 547, 548, 549,
	679, 550, 0, 551, 552, 558, 559, 560, 553, 554,
	561, 562, 563, 564, 565, 0, 567, 568, 566, 569,
	570, 571, 0, 572, 573, 555, 556, 574, 575, 0,
	576, 577, 578, 579, 580, 581, 582, 680, 0, 583,
	0, 584, 585, 586, 588, 557, 589, 594, 595, 681,
	590, 591, 592, 593, 682, 597, 598, 0, 599, 600,
	0, 596, 587, 0, 601, 602, 603, 604, 605, 606,
	607, 364, 608, 0, 609, 683, 684, 685, 686, 0,
	618, 0, 610, 611, 612, 687, 613, 688, 0, 614,
	615, 616, 617, 0, 619, 620, 0, 0, 621, 622,
	623, 625, 626, 624, 627, 0, 628, 0, 0, 629,
	630, 631, 689, 690, 691, 0, 633, 632, 634, 692,
	635, 636, 1603, 0, 274, 0, 637, 638, 693, 639,
	640, 641, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 280, 282, 281, 283, 284, 285, 286, 0, 287,
	288, 0, 0, 0, 0, 0, 642, 0, 0, 0,
	0, 289, 290, 0, 291, 292, 293, 294, 295, 296,
	643, 644, 0, 297, 645, 298, 646, 0, 647, 299,
	300, 301, 302, 303, 304, 0, 0, 0, 305, 648,
	649, 650, 0, 306, 307, 651, 0, 0, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	325, 326, 0, 327, 328, 329, 0, 330, 331, 332,
	0, 0, 0, 0, 0, 0, 0, 333, 334, 335,
	336, 337, 0, 338, 340, 652, 653, 0, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 350, 351, 0, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 654, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 655, 656, 370, 0, 277,
	0, 0, 0, 0, 0, 371, 372, 373, 657, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 658, 659, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 660, 0, 661, 391,
	0, 392, 393, 394, 395, 396, 1602, 663, 664, 480,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 278, 404, 405, 406, 408, 0, 0, 407,
	665, 666, 0, 667, 0, 409, 410, 0, 668, 0,
	411, 412, 413, 0, 414, 0, 0, 0, 415, 416,
	417, 418, 419, 420, 0, 421, 423, 422, 0, 424,
	669, 0, 425, 426, 0, 0, 427, 428, 429, 430,
	431, 432, 435, 0, 0, 433, 434, 436, 437, 0,
	438, 439, 441, 444, 440, 442, 443, 445, 458, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 460, 0, 459, 0, 461, 462, 463, 464, 470,
	472, 473, 468, 469, 471, 474, 475, 466, 467, 0,
	476, 465, 0, 279, 0, 477, 478, 0, 670, 479,
	671, 481, 482, 0, 0, 483, 0, 0, 0, 485,
	486, 487, 0, 0, 488, 489, 672, 0, 490, 0,
	673, 491, 492, 484, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 0, 502, 503, 674, 504, 505, 506,
	675, 507, 508, 509, 676, 510, 677, 511, 512, 0,
	513, 514, 0, 515, 516, 517, 518, 519, 520, 521,
	678, 522, 523, 525, 524, 526, 0, 527, 0, 528,
	529, 530, 0, 0, 0, 0, 0, 531, 0, 533,
	534, 535, 536, 532, 537, 538, 539, 540, 541, 0,
	542, 543, 544, 0, 545, 546, 547, 548, 549, 679,
	550, 0, 551, 552, 558, 559, 560, 553, 554, 561,
	562, 563, 564, 565, 0, 567, 568, 566, 569, 570,
	571, 0, 572, 573, 555, 556, 574, 575, 0, 576,
	577, 578, 579, 580, 581, 582, 680, 0, 583, 0,
	584, 585, 586, 588, 557, 589, 594, 595, 681, 590,
	591, 592, 593, 682, 597, 598, 0, 599, 600, 0,
	596, 587, 0, 601, 602, 603, 604, 605, 606, 607,
	364, 608, 0, 609, 683, 684, 685, 686, 0, 618,
	0, 610, 611, 612, 687, 613, 688, 0, 614, 615,
	616, 617, 0, 619, 620, 0, 0, 621, 622, 623,
	625, 626, 624, 627, 0, 628, 0, 0, 629, 630,
	631, 689, 690, 691, 0, 633, 632, 634, 692, 635,
	636, 1513, 0, 274, 0, 637, 638, 693, 639, 640,
	641, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	280, 282, 281, 283, 284, 285, 286, 0, 287, 288,
	0, 0, 0, 0, 0, 642, 0, 0, 0, 0,
	289, 290, 0, 291, 292, 293, 294, 295, 296, 643,
	644, 0, 297, 645, 298, 646, 0, 647, 299, 300,
	301, 302, 303, 304, 0, 0, 0, 305, 648, 649,
	650, 0, 306, 307, 651, 0, 0, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 0, 330, 331, 332, 0,
	0, 0, 0, 0, 0, 0, 333, 334, 335, 336,
	337, 0, 338, 340, 652, 653, 0, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 350, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 654, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 655, 656, 370, 0, 277, 0,
	0, 0, 0, 0, 371, 372, 373, 657, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 658, 659, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 660, 0, 661, 391, 0,
	392, 393, 394, 395, 396, 662, 663, 664, 480, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 278, 404, 405, 406, 408, 0, 0, 407, 665,
	666, 0, 667, 0, 409, 410, 0, 668, 0, 411,
	412, 413, 0, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 669,
	0, 425, 426, 0, 0, 427, 428, 429, 430, 431,
	432, 435, 0, 0, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 0, 461, 462, 463, 464, 470, 472,
	473, 468, 469, 471, 474, 475, 466, 467, 0, 476,
	465, 0, 279, 0, 477, 478, 0, 670, 479, 671,
	481, 482, 0, 0, 483, 0, 0, 0, 485, 486,
	487, 0, 0, 488, 489, 672, 0, 490, 0, 673,
	491, 492, 484, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 0, 502, 503, 674, 504, 505, 506, 675,
	507, 508, 509, 676, 510, 677, 511, 512, 0, 513,
	514, 0, 515, 516, 517, 518, 519, 520, 521, 678,
	522, 523, 525, 524, 526, 0, 527, 0, 528, 529,
	530, 0, 0, 0, 0, 0, 531, 0, 533, 534,
	535, 536, 532, 537, 538, 539, 540, 541, 0, 542,
	543, 544, 0, 545, 546, 547, 548, 549, 679, 550,
	0, 551, 552, 558, 559, 560, 553, 554, 561, 562,
	563, 564, 565, 0, 567, 568, 566, 569, 570, 571,
	0, 572, 573, 555, 556, 574, 575, 0, 576, 577,
	578, 579, 580, 581, 582, 680, 0, 583, 0, 584,
	585, 586, 588, 557, 589, 594, 595, 681, 590, 591,
	592, 593, 682, 597, 598, 0, 599, 600, 0, 596,
	587, 0, 601, 602, 603, 604, 605, 606, 607, 364,
	608, 0, 609, 683, 684, 685, 686, 0, 618, 0,
	610, 611, 612, 687, 613, 688, 0, 614, 615, 616,
	617, 0, 619, 620, 0, 0, 621, 622, 623, 625,
	626, 624, 627, 0, 628, 0, 0, 629, 630, 631,
	689, 690, 691, 0, 633, 632, 634, 692, 635, 636,
	1506, 0, 274, 0, 637, 638, 693, 639, 640, 641,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 280,
	282, 281, 283, 284, 285, 286, 0, 287, 288, 0,
	0, 0, 0, 0, 642, 0, 0, 0, 0, 289,
	290, 0, 291, 292, 293, 294, 295, 296, 643, 644,
	0, 297, 645, 298, 646, 0, 647, 299, 300, 301,
	302, 303, 304, 0, 0, 0, 305, 648, 649, 650,
	0, 306, 307, 651, 0, 0, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	0, 327, 328, 329, 0, 330, 331, 332, 0, 0,
	0, 0, 0, 0, 0, 333, 334, 335, 336, 337,
	0, 338, 340, 652, 653, 0, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	350, 351, 0, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 654, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 655, 656, 370, 0, 277, 0, 0,
	0, 0, 0, 371, 372, 373, 657, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 658, 659, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 660, 0, 661, 391, 0, 392,
	393, 394, 395, 396, 1508, 663, 664, 480, 0, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	278, 404, 405, 406, 408, 0, 0, 407, 665, 666,
	0, 667, 0, 409, 410, 0, 668, 0, 411, 412,
	413, 0, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 0, 421, 423, 422, 0, 424, 669, 0,
	425, 426, 0, 0, 427, 428, 429, 430, 431, 432,
	435, 0, 0, 433, 434, 436, 437, 0, 438, 439,
	441, 444, 440, 442, 443, 445, 458, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 460,
	0, 459, 0, 461, 462, 463, 464, 470, 472, 473,
	468, 469, 471, 474, 475, 466, 467, 0, 476, 465,
	0, 279, 0, 477, 478, 0, 670, 479, 671, 481,
	482, 0, 0, 483, 0, 0, 0, 485, 486, 487,
	0, 0, 488, 489, 672, 0, 490, 0, 673, 491,
	492, 484, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 0, 502, 503, 674, 504, 505, 506, 675, 507,
	508, 509, 676, 510, 677, 511, 512, 0, 513, 514,
	0, 515, 516, 517, 518, 519, 520, 521, 678, 522,
	523, 525, 524, 526, 0, 527, 0, 528, 529, 530,
	0, 0, 0, 0, 0, 531, 0, 533, 534, 535,
	536, 532, 537, 538, 539, 540, 541, 0, 542, 543,
	544, 0, 545, 546, 547, 548, 549, 679, 550, 0,
	551, 552, 558, 559, 560, 553, 554, 561, 562, 563,
	564, 565, 0, 567, 568, 566, 569, 570, 571, 0,
	572, 573, 555, 556, 574, 575, 0, 576, 577, 578,
	579, 580, 581, 582, 680, 0, 583, 0, 584, 585,
	586, 588, 557, 589, 594, 595, 681, 590, 591, 592,
	593, 682, 597, 598, 0, 599, 600, 0, 596, 587,
	0, 601, 602, 603, 604, 605, 606, 607, 364, 608,
	0, 609, 683, 684, 685, 686, 0, 618, 0, 610,
	611, 612, 687, 613, 688, 0, 614, 615, 616, 617,
	0, 619, 620, 0, 0, 621, 622, 623, 625, 626,
	624, 627, 0, 628, 0, 0, 629, 630, 631, 689,
	690, 691, 0, 633, 632, 634, 692, 635, 636, 1331,
	0, 274, 0, 637, 638, 693, 639, 640, 641, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 280, 282,
	281, 283, 284, 285, 286, 0, 287, 288, 0, 0,
	0, 0, 0, 642, 0, 0, 0, 0, 289, 290,
	0, 291, 292, 293, 294, 295, 296, 643, 644, 0,
	297, 645, 298, 646, 0, 647, 299, 300, 301, 302,
	303, 304, 0, 0, 0, 305, 648, 649, 650, 0,
	306, 307, 651, 0, 0, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 0, 316, 317, 318, 315, 319,
	0, 320, 0, 321, 322, 323, 324, 325, 326, 0,
	327, 328, 329, 0, 330, 331, 332, 0, 0, 0,
	0, 0, 0, 0, 333, 334, 335, 336, 337, 0,
	338, 340, 652, 653, 0, 343, 339, 341, 0, 344,
	342, 345, 0, 346, 347, 348, 0, 0, 349, 350,
	351, 0, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 654, 359, 360, 361, 363, 365, 362, 366, 367,
	368, 369, 655, 656, 370, 0, 277, 0, 0, 0,
	0, 0, 371, 372, 373, 657, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	658, 659, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 660, 0, 661, 391, 0, 392, 393,
	394, 395, 396, 1330, 663, 664, 480, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 278,
	404, 405, 406, 408, 0, 0, 407, 665, 666, 0,
	667, 0, 409, 410, 0, 668, 0, 411, 412, 413,
	0, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 0, 421, 423, 422, 0, 424, 669, 0, 425,
	426, 0, 0, 427, 428, 429, 430, 431, 432, 435,
	0, 0, 433, 434, 436, 437, 0, 438, 439, 441,
	444, 440, 442, 443, 445, 458, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 460, 0,
	459, 0, 461, 462, 463, 464, 470, 472, 473, 468,
	469, 471, 474, 475, 466, 467, 0, 476, 465, 0,
	279, 0, 477, 478, 0, 670, 479, 671, 481, 482,
	0, 0, 483, 0, 0, 0, 485, 486, 487, 0,
	0, 488, 489, 672, 0, 490, 0, 673, 491, 492,
	484, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	0, 502, 503, 674, 504, 505, 506, 675, 507, 508,
	509, 676, 510, 677, 511, 512, 0, 513, 514, 0,
	515, 516, 517, 518, 519, 520, 521, 678, 522, 523,
	525, 524, 526, 0, 527, 0, 528, 529, 530, 0,
	0, 0, 0, 0, 531, 0, 533, 534, 535, 536,
	532, 537, 538, 539, 540, 541, 0, 542, 543, 544,
	0, 545, 546, 547, 548, 549, 679, 550, 0, 551,
	552, 558, 559, 560, 553, 554, 561, 562, 563, 564,
	565, 0, 567, 568, 566, 569, 570, 571, 0, 572,
	573, 555, 556, 574, 575, 0, 576, 577, 578, 579,
	580, 581, 582, 680, 0, 583, 0, 584, 585, 586,
	588, 557, 589, 594, 595, 681, 590, 591, 592, 593,
	682, 597, 598, 0, 599, 600, 0, 596, 587, 0,
	601, 602, 603, 604, 605, 606, 607, 364, 608, 0,
	609, 683, 684, 685, 686, 0, 618, 0, 610, 611,
	612, 687, 613, 688, 0, 614, 615, 616, 617, 0,
	619, 620, 0, 0, 621, 622, 623, 625, 626, 624,
	627, 0, 628, 0, 0, 629, 630, 631, 689, 690,
	691, 0, 633, 632, 634, 692, 635, 636, 1321, 0,
	274, 0, 637, 638, 693, 639, 640, 641, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 280, 282, 281,
	283, 284, 285, 286, 0, 287, 288, 0, 0, 0,
	0, 0, 642, 0, 0, 0, 0, 289, 290, 0,
	291, 292, 293, 294, 295, 296, 643, 644, 0, 297,
	645, 298, 646, 0, 647, 299, 300, 301, 302, 303,
	304, 0, 0, 0, 305, 648, 649, 650, 0, 306,
	307, 651, 0, 0, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 0, 330, 331, 332, 0, 0, 0, 0,
	0, 0, 0, 333, 334, 335, 336, 337, 0, 338,
	340, 652, 653, 0, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 350, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	654, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 655, 656, 370, 0, 277, 0, 0, 0, 0,
	0, 371, 372, 373, 657, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 658,
	659, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 660, 0, 661, 391, 0, 392, 393, 394,
	395, 396, 1320, 663, 664, 480, 0, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 278, 404,
	405, 406, 408, 0, 0, 407, 665, 666, 0, 667,
	0, 409, 410, 0, 668, 0, 411, 412, 413, 0,
	414, 0, 0, 0, 415, 416, 417, 418, 419, 420,
	0, 421, 423, 422, 0, 424, 669, 0, 425, 426,
	0, 0, 427, 428, 429, 430, 431, 432, 435, 0,
	0, 433, 434, 436, 437, 0, 438, 439, 441, 444,
	440, 442, 443, 445, 458, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 460, 0, 459,
	0, 461, 462, 463, 464, 470, 472, 473, 468, 469,
	471, 474, 475, 466, 467, 0, 476, 465, 0, 279,
	0, 477, 478, 0, 670, 479, 671, 481, 482, 0,
	0, 483, 0, 0, 0, 485, 486, 487, 0, 0,
	488, 489, 672, 0, 490, 0, 673, 491, 492, 484,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 0,
	502, 503, 674, 504, 505, 506, 675, 507, 508, 509,
	676, 510, 677, 511, 512, 0, 513, 514, 0, 515,
	516, 517, 518, 519, 520, 521, 678, 522, 523, 525,
	524, 526, 0, 527, 0, 528, 529, 530, 0, 0,
	0, 0, 0, 531, 0, 533, 534, 535, 536, 532,
	537, 538, 539, 540, 541, 0, 542, 543, 544, 0,
	545, 546, 547, 548, 549, 679, 550, 0, 551, 552,
	558, 559, 560, 553, 554, 561, 562, 563, 564, 565,
	0, 567, 568, 566, 569, 570, 571, 0, 572, 573,
	555, 556, 574, 575, 0, 576, 577, 578, 579, 580,
	581, 582, 680, 0, 583, 0, 584, 585, 586, 588,
	557, 589, 594, 595, 681, 590, 591, 592, 593, 682,
	597, 598, 0, 599, 600, 0, 596, 587, 0, 601,
	602, 603, 604, 605, 606, 607, 364, 608, 0, 609,
	683, 684, 685, 686, 0, 618, 0, 610, 611, 612,
	687, 613, 688, 0, 614, 615, 616, 617, 0, 619,
	620, 0, 0, 621, 622, 623, 625, 626, 624, 627,
	0, 628, 0, 0, 629, 630, 631, 689, 690, 691,
	0, 633, 632, 634, 692, 635, 636, 1318, 0, 274,
	0, 637, 638, 693, 639, 640, 641, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 280, 282, 281, 283,
	284, 285, 286, 0, 287, 288, 0, 0, 0, 0,
	0, 642, 0, 0, 0, 0, 289, 290, 0, 291,
	292, 293, 294, 295, 296, 643, 644, 0, 297, 645,
	298, 646, 0, 647, 299, 300, 301, 302, 303, 304,
	0, 0, 0, 305, 648, 649, 650, 0, 306, 307,
	651, 0, 0, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 0, 330, 331, 332, 0, 0, 0, 0, 0,
	0, 0, 333, 334, 335, 336, 337, 0, 338, 340,
	652, 653, 0, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 350, 351, 0,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 654,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	655, 656, 370, 0, 277, 0, 0, 0, 0, 0,
	371, 372, 373, 657, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 658, 659,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 660, 0, 661, 391, 0, 392, 393, 394, 395,
	396, 1317, 663, 664, 480, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 278, 404, 405,
	406, 408, 0, 0, 407, 665, 666, 0, 667, 0,
	409, 410, 0, 668, 0, 411, 412, 413, 0, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 669, 0, 425, 426, 0,
	0, 427, 428, 429, 430, 431, 432, 435, 0, 0,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 0,
	461, 462, 463, 464, 470, 472, 473, 468, 469, 471,
	474, 475, 466, 467, 0, 476, 465, 0, 279, 0,
	477, 478, 0, 670, 479, 671, 481, 482, 0, 0,
	483, 0, 0, 0, 485, 486, 487, 0, 0, 488,
	489, 672, 0, 490, 0, 673, 491, 492, 484, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 0, 502,
	503, 674, 504, 505, 506, 675, 507, 508, 509, 676,
	510, 677, 511, 512, 0, 513, 514, 0, 515, 516,
	517, 518, 519, 520, 521, 678, 522, 523, 525, 524,
	526, 0, 527, 0, 528, 529, 530, 0, 0, 0,
	0, 0, 531, 0, 533, 534, 535, 536, 532, 537,
	538, 539, 540, 541, 0, 542, 543, 544, 0, 545,
	546, 547, 548, 549, 679, 550, 0, 551, 552, 558,
	559, 560, 553, 554, 561, 562, 563, 564, 565, 0,
	567, 568, 566, 569, 570, 571, 0, 572, 573, 555,
	556, 574, 575, 0, 576, 577, 578, 579, 580, 581,
	582, 680, 0, 583, 0, 584, 585, 586, 588, 557,
	589, 594, 595, 681, 590, 591, 592, 593, 682, 597,
	598, 0, 599, 600, 0, 596, 587, 0, 601, 602,
	603, 604, 605, 606, 607, 364, 608, 0, 609, 683,
	684, 685, 686, 0, 618, 0, 610, 611, 612, 687,
	613, 688, 0, 614, 615, 616, 617, 0, 619, 620,
	0, 0, 621, 622, 623, 625, 626, 624, 627, 0,
	628, 0, 0, 629, 630, 631, 689, 690, 691, 0,
	633, 632, 634, 692, 635, 636, 1313, 0, 274, 0,
	637, 638, 693, 639, 640, 641, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 280, 282, 281, 283, 284,
	285, 286, 0, 287, 288, 0, 0, 0, 0, 0,
	642, 0, 0, 0, 0, 289, 290, 0, 291, 292,
	293, 294, 295, 296, 643, 644, 0, 297, 645, 298,
	646, 0, 647, 299, 300, 301, 302, 303, 304, 0,
	0, 0, 305, 648, 649, 650, 0, 306, 307, 651,
	0, 0, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	0, 330, 331, 332, 0, 0, 0, 0, 0, 0,
	0, 333, 334, 335, 336, 337, 0, 338, 340, 652,
	653, 0, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 350, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 654, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 655,
	656, 370, 0, 277, 0, 0, 0, 0, 0, 371,
	372, 373, 657, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 658, 659, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	660, 0, 661, 391, 0, 392, 393, 394, 395, 396,
	1312, 663, 664, 480, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 278, 404, 405, 406,
	408, 0, 0, 407, 665, 666, 0, 667, 0, 409,
	410, 0, 668, 0, 411, 412, 413, 0, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 0, 421,
	423, 422, 0, 424, 669, 0, 425, 426, 0, 0,
	427, 428, 429, 430, 431, 432, 435, 0, 0, 433,
	434, 436, 437, 0, 438, 439, 441, 444, 440, 442,
	443, 445, 458, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 0, 459, 0, 461,
	462, 463, 464, 470, 472, 473, 468, 469, 471, 474,
	475, 466, 467, 0, 476, 465, 0, 279, 0, 477,
	478, 0, 670, 479, 671, 481, 482, 0, 0, 483,
	0, 0, 0, 485, 486, 487, 0, 0, 488, 489,
	672, 0, 490, 0, 673, 491, 492, 484, 493, 494,
	495, 496, 497, 498, 499, 500, 501, 0, 502, 503,
	674, 504, 505, 506, 675, 507, 508, 509, 676, 510,
	677, 511, 512, 0, 513, 514, 0, 515, 516, 517,
	518, 519, 520, 521, 678, 522, 523, 525, 524, 526,
	0, 527, 0, 528, 529, 530, 0, 0, 0, 0,
	0, 531, 0, 533, 534, 535, 536, 532, 537, 538,
	539, 540, 541, 0, 542, 543, 544, 0, 545, 546,
	547, 548, 549, 679, 550, 0, 551, 552, 558, 559,
	560, 553, 554, 561, 562, 563, 564, 565, 0, 567,
	568, 566, 569, 570, 571, 0, 572, 573, 555, 556,
	574, 575, 0, 576, 577, 578, 579, 580, 581, 582,
	680, 0, 583, 0, 584, 585, 586, 588, 557, 589,
	594, 595, 681, 590, 591, 592, 593, 682, 597, 598,
	0, 599, 600, 0, 596, 587, 0, 601, 602, 603,
	604, 605, 606, 607, 364, 608, 0, 609, 683, 684,
	685, 686, 0, 618, 0, 610, 611, 612, 687, 613,
	688, 0, 614, 615, 616, 617, 0, 619, 620, 0,
	0, 621, 622, 623, 625, 626, 624, 627, 0, 628,
	0, 0, 629, 630, 631, 689, 690, 691, 0, 633,
	632, 634, 692, 635, 636, 695, 0, 274, 0, 637,
	638, 693, 639, 640, 641, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 280, 282, 281, 283, 284, 285,
	286, 0, 287, 288, 0, 0, 0, 0, 0, 642,
	0, 0, 0, 0, 289, 290, 0, 291, 292, 293,
	294, 295, 296, 643, 644, 0, 297, 645, 298, 646,
	0, 647, 299, 300, 301, 302, 303, 304, 0, 0,
	0, 305, 648, 649, 650, 0, 306, 307, 651, 0,
	0, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 0,
	330, 331, 332, 0, 0, 0, 0, 0, 0, 0,
	333, 334, 335, 336, 337, 0, 338, 340, 652, 653,
	0, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 350, 351, 0, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 654, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 655, 656,
	370, 0, 277, 0, 0, 0, 0, 0, 371, 372,
	373, 657, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 658, 659, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 660,
	0, 661, 391, 0, 392, 393, 394, 395, 396, 662,
	663, 664, 480, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 278, 404, 405, 406, 408,
	0, 0, 407, 665, 666, 0, 667, 0, 409, 410,
	0, 668, 0, 411, 412, 413, 0, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 0, 424, 669, 0, 425, 426, 0, 0, 427,
	428, 429, 430, 431, 432, 435, 0, 0, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 459, 0, 461, 462,
	463, 464, 470, 472, 473, 468, 469, 471, 474, 475,
	466, 467, 0, 476, 465, 0, 279, 0, 477, 478,
	0, 670, 479, 671, 481, 482, 0, 0, 483, 0,
	0, 0, 485, 486, 487, 0, 0, 488, 489, 672,
	0, 490, 0, 673, 491, 492, 484, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 0, 502, 503, 674,
	504, 505, 506, 675, 507, 508, 509, 676, 510, 677,
	511, 512, 0, 513, 514, 0, 515, 516, 517, 518,
	519, 520, 521, 678, 522, 523, 525, 524, 526, 0,
	527, 0, 528, 529, 530, 0, 0, 0, 0, 0,
	531, 0, 533, 534, 535, 536, 532, 537, 538, 539,
	540, 541, 0, 542, 543, 544, 0, 545, 546, 547,
	548, 549, 679, 550, 0, 551, 552, 558, 559, 560,
	553, 554, 561, 562, 563, 564, 565, 0, 567, 568,
	566, 569, 570, 571, 0, 572, 573, 555, 556, 574,
	575, 0, 576, 577, 578, 579, 580, 581, 582, 680,
	0, 583, 0, 584, 585, 586, 588, 557, 589, 594,
	595, 681, 590, 591, 592, 593, 682, 597, 598, 0,
	599, 600, 0, 596, 587, 0, 601, 602, 603, 604,
	605, 606, 607, 364, 608, 0, 609, 683, 684, 685,
	686, 0, 618, 0, 610, 611, 612, 687, 613, 688,
	0, 614, 615, 616, 617, 0, 619, 620, 0, 0,
	621, 622, 623, 625, 626, 624, 627, 0, 628, 0,
	0, 629, 630, 631, 689, 690, 691, 0, 633, 632,
	634, 692, 635, 636, 265, 0, 274, 0, 637, 638,
	693, 639, 640, 641, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 280, 282, 281, 283, 284, 285, 286,
	0, 287, 288, 0, 0, 0, 0, 0, 642, 0,
	0, 0, 0, 289, 290, 0, 291, 292, 293, 294,
	295, 296, 643, 644, 0, 297, 645, 298, 646, 0,
	647, 299, 300, 301, 302, 303, 304, 0, 0, 0,
	305, 648, 649, 650, 0, 306, 307, 651, 0, 0,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 0, 330,
	331, 332, 0, 0, 0, 0, 0, 0, 0, 333,
	334, 335, 336, 337, 0, 338, 340, 652, 653, 0,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 350, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 654, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 655, 656, 370,
	0, 277, 0, 0, 0, 0, 0, 371, 372, 373,
	657, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 658, 659, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 660, 0,
	661, 391, 0, 392, 393, 394, 395, 396, 662, 663,
	664, 480, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 278, 404, 405, 406, 408, 0,
	0, 407, 665, 666, 0, 667, 0, 409, 410, 0,
	668, 0, 411, 412, 413, 0, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 0, 421, 423, 422,
	0, 424, 669, 0, 425, 426, 0, 0, 427, 428,
	429, 430, 431, 432, 435, 0, 0, 433, 434, 436,
	437, 0, 438, 439, 441, 444, 440, 442, 443, 445,
	458, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 459, 0, 461, 462, 463,
	464, 470, 472, 473, 468, 469, 471, 474, 475, 466,
	467, 0, 476, 465, 0, 279, 0, 477, 478, 0,
	670, 479, 671, 481, 482, 0, 0, 483, 0, 0,
	0, 485, 486, 487, 0, 0, 488, 489, 672, 0,
	490, 0, 673, 491, 492, 484, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 0, 502, 503, 674, 504,
	505, 506, 675, 507, 508, 509, 676, 510, 677, 511,
	512, 0, 513, 514, 0, 515, 516, 517, 518, 519,
	520, 521, 678, 522, 523, 525, 524, 526, 0, 527,
	0, 528, 529, 530, 0, 0, 0, 0, 0, 531,
	0, 533, 534, 535, 536, 532, 537, 538, 539, 540,
	541, 0, 542, 543, 544, 0, 545, 546, 547, 548,
	549, 679, 550, 0, 551, 552, 558, 559, 560, 553,
	554, 561, 562, 563, 564, 565, 0, 567, 568, 566,
	569, 570, 571, 0, 572, 573, 555, 556, 574, 575,
	0, 576, 577, 578, 579, 580, 581, 582, 680, 0,
	583, 0, 584, 585, 586, 588, 557, 589, 594, 595,
	681, 590, 591, 592, 593, 682, 597, 598, 0, 599,
	600, 0, 596, 587, 0, 601, 602, 603, 604, 605,
	606, 607, 364, 608, 0, 609, 683, 684, 685, 686,
	0, 618, 0, 610, 611, 612, 687, 613, 688, 0,
	614, 615, 616, 617, 0, 619, 620, 0, 0, 621,
	622, 623, 625, 626, 624, 627, 0, 628, 0, 0,
	629, 630, 631, 689, 690, 691, 274, 633, 632, 634,
	692, 635, 636, 0, 0, 0, 0, 637, 638, 693,
	639, 640, 641, 280, 282, 281, 283, 284, 285, 286,
	0, 287, 288, 0, 0, 0, 0, 0, 642, 0,
	0, 0, 0, 289, 290, 0, 291, 292, 293, 294,
	295, 296, 643, 644, 0, 297, 645, 298, 646, 0,
	647, 299, 300, 301, 302, 303, 304, 0, 0, 0,
	305, 648, 649, 650, 0, 306, 307, 651, 0, 0,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 0, 330,
	331, 332, 0, 0, 0, 0, 0, 0, 0, 333,
	334, 335, 336, 337, 0, 338, 340, 652, 653, 0,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 350, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 654, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 655, 656, 370,
	0, 277, 0, 0, 0, 0, 0, 371, 372, 373,
	657, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 658, 659, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 660, 0,
	661, 391, 0, 392, 393, 394, 395, 396, 662, 663,
	664, 480, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 278, 404, 405, 406, 408, 0,
	0, 407, 665, 666, 0, 667, 0, 409, 410, 0,
	668, 0, 411, 412, 413, 0, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 0, 421, 423, 422,
	0, 424, 669, 0, 425, 426, 0, 0, 427, 428,
	429, 430, 431, 432, 435, 0, 0, 433, 434, 436,
	437, 0, 438, 439, 441, 444, 440, 442, 443, 445,
	458, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 459, 0, 461, 462, 463,
	464, 470, 472, 473, 468, 469, 471, 474, 475, 466,
	467, 0, 476, 465, 0, 279, 0, 477, 478, 0,
	670, 479, 671, 481, 482, 0, 0, 483, 0, 0,
	0, 485, 486, 487, 0, 0, 488, 489, 672, 0,
	490, 0, 673, 491, 492, 484, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 0, 502, 503, 674, 504,
	505, 506, 675, 507, 508, 509, 676, 510, 677, 511,
	512, 0, 513, 514, 0, 515, 516, 517, 518, 519,
	520, 521, 678, 522, 523, 525, 524, 526, 0, 527,
	0, 528, 529, 530, 0, 0, 0, 0, 0, 531,
	0, 533, 534, 535, 536, 532, 537, 538, 539, 540,
	541, 0, 542, 543, 544, 0, 545, 546, 547, 548,
	549, 679, 550, 0, 551, 552, 558, 559, 560, 553,
	554, 561, 562, 563, 564, 565, 0, 567, 568, 566,
	569, 570, 571, 0, 572, 573, 555, 556, 574, 575,
	0, 576, 577, 578, 579, 580, 581, 582, 680, 0,
	583, 0, 584, 585, 586, 588, 557, 589, 594, 595,
	681, 590, 591, 592, 593, 682, 597, 598, 0, 599,
	600, 0, 596, 587, 0, 601, 602, 603, 604, 605,
	606, 607, 364, 608, 0, 609, 683, 684, 685, 686,
	0, 618, 0, 610, 611, 612, 687, 613, 688, 0,
	614, 615, 616, 617, 0, 619, 620, 0, 0, 621,
	622, 623, 625, 626, 624, 627, 0, 628, 0, 0,
	629, 630, 631, 689, 690, 691, 274, 633, 632, 634,
	692, 635, 636, 0, 0, 0, 0, 637, 638, 693,
	639, 640, 641, 280, 282, 281, 283, 284, 285, 286,
	0, 287, 288, 0, 0, 0, 0, 0, 642, 0,
	0, 0, 0, 289, 290, 0, 291, 292, 293, 294,
	295, 296, 643, 644, 0, 297, 645, 298, 646, 0,
	647, 299, 300, 301, 302, 303, 304, 0, 0, 0,
	305, 648, 649, 650, 0, 306, 307, 651, 0, 0,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 717, 327, 328, 329, 0, 330,
	331, 332, 0, 0, 0, 0, 0, 0, 0, 333,
	334, 335, 336, 337, 0, 338, 340, 652, 653, 0,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 350, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 654, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 655, 656, 370,
	0, 0, 0, 0, 0, 0, 0, 371, 372, 373,
	657, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 658, 659, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 718, 390, 660, 0,
	661, 391, 0, 392, 393, 394, 395, 396, 662, 663,
	664, 480, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 0, 404, 405, 406, 408, 0,
	0, 407, 665, 666, 0, 667, 0, 409, 410, 0,
	668, 0, 411, 412, 413, 0, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 0, 421, 423, 422,
	0, 424, 669, 0, 425, 426, 0, 0, 427, 428,
	429, 430, 431, 432, 435, 0, 0, 433, 434, 436,
	437, 0, 438, 439, 441, 444, 440, 442, 443, 445,
	458, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 459, 0, 461, 462, 463,
	464, 470, 472, 473, 468, 469, 471, 474, 475, 466,
	467, 0, 476, 465, 0, 0, 0, 477, 478, 0,
	670, 479, 671, 481, 482, 0, 0, 483, 0, 0,
	0, 485, 486, 487, 0, 0, 488, 489, 672, 0,
	490, 0, 673, 491, 492, 484, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 0, 502, 503, 674, 504,
	505, 506, 675, 507, 508, 509, 676, 510, 677, 511,
	512, 0, 513, 514, 0, 515, 516, 517, 518, 519,
	520, 521, 678, 522, 523, 525, 524, 526, 0, 527,
	0, 528, 529, 530, 0, 0, 0, 0, 0, 531,
	0, 533, 534, 535, 536, 532, 537, 538, 539, 540,
	541, 0, 542, 543, 544, 0, 545, 546, 547, 548,
	549, 679, 550, 0, 551, 552, 558, 559, 560, 553,
	554, 561, 562, 563, 564, 565, 719, 567, 568, 566,
	569, 570, 571, 0, 572, 573, 555, 556, 574, 575,
	0, 576, 577, 578, 579, 580, 581, 582, 680, 0,
	583, 0, 584, 585, 586, 588, 557, 589, 594, 595,
	681, 590, 591, 592, 593, 682, 597, 598, 0, 599,
	600, 0, 596, 587, 0, 601, 602, 603, 604, 605,
	606, 607, 364, 608, 0, 609, 683, 684, 685, 686,
	0, 618, 0, 610, 611, 612, 687, 613, 688, 0,
	614, 615, 616, 617, 0, 619, 620, 0, 0, 621,
	622, 623, 625, 626, 624, 627, 0, 628, 0, 0,
	629, 630, 631, 689, 690, 691, 274, 633, 632, 634,
	692, 635, 636, 0, 0, 0, 0, 637, 638, 693,
	639, 640, 641, 280, 282, 281, 283, 284, 285, 286,
	0, 287, 288, 0, 0, 0, 0, 0, 642, 0,
	0, 0, 0, 289, 290, 0, 291, 292, 293, 294,
	295, 296, 643, 644, 0, 297, 645, 298, 646, 0,
	647, 299, 300, 301, 302, 303, 304, 0, 0, 0,
	305, 648, 649, 650, 0, 306, 307, 651, 0, 0,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 0, 330,
	331, 332, 0, 0, 0, 0, 0, 0, 0, 333,
	334, 335, 2387, 337, 0, 338, 340, 652, 653, 0,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 350, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 654, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 655, 656, 370,
	0, 277, 0, 0, 0, 0, 0, 371, 372, 373,
	657, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 658, 659, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 660, 0,
	661, 391, 0, 392, 393, 394, 395, 396, 662, 663,
	664, 480, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 278, 404, 405, 406, 408, 0,
	0, 407, 665, 666, 0, 667, 0, 409, 410, 0,
	668, 0, 411, 412, 413, 0, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 0, 421, 423, 422,
	0, 424, 669, 0, 425, 426, 0, 0, 427, 428,
	429, 430, 431, 432, 435, 0, 0, 433, 434, 436,
	437, 0, 438, 439, 441, 444, 440, 442, 443, 445,
	458, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 459, 0, 461, 462, 463,
	464, 470, 472, 473, 468, 469, 471, 474, 475, 466,
	467, 0, 476, 465, 0, 279, 0, 477, 478, 0,
	670, 479, 671, 481, 482, 0, 0, 483, 0, 0,
	0, 485, 486, 487, 0, 0, 488, 489, 672, 0,
	490, 0, 673, 491, 492, 484, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 0, 502, 503, 674, 504,
	505, 506, 675, 507, 508, 509, 676, 510, 677, 511,
	512, 0, 513, 514, 0, 515, 516, 517, 518, 519,
	520, 521, 678, 522, 523, 525, 524, 526, 0, 527,
	0, 528, 529, 530, 0, 0, 0, 0, 0, 531,
	0, 533, 534, 535, 536, 532, 537, 538, 539, 540,
	541, 0, 542, 543, 544, 0, 545, 546, 547, 548,
	549, 679, 550, 0, 551, 552, 558, 559, 560, 553,
	554, 561, 562, 563, 564, 565, 0, 567, 568, 566,
	569, 570, 571, 0, 572, 573, 555, 556, 574, 575,
	0, 576, 577, 578, 579, 580, 581, 582, 680, 0,
	583, 0, 584, 585, 586, 588, 557, 589, 594, 595,
	681, 590, 591, 592, 593, 682, 597, 598, 0, 599,
	600, 0, 596, 587, 0, 601, 602, 603, 604, 605,
	606, 607, 364, 608, 0, 609, 683, 684, 685, 686,
	0, 618, 0, 610, 611, 612, 687, 613, 688, 0,
	614, 615, 616, 617, 0, 619, 620, 0, 0, 621,
	622, 623, 625, 626, 624, 627, 0, 628, 0, 0,
	629, 630, 631, 689, 690, 691, 274, 633, 632, 634,
	692, 635, 636, 0, 0, 0, 0, 637, 638, 693,
	639, 640, 641, 280, 282, 281, 283, 284, 285, 286,
	0, 287, 288, 0, 0, 0, 0, 0, 642, 0,
	0, 0, 0, 289, 290, 0, 291, 292, 293, 294,
	295, 296, 643, 644, 0, 297, 645, 298, 646, 0,
	647, 299, 300, 301, 302, 303, 304, 0, 0, 0,
	305, 648, 649, 650, 0, 306, 307, 651, 0, 0,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 0, 330,
	331, 332, 0, 0, 0, 0, 0, 0, 0, 333,
	334, 335, 2385, 337, 0, 338, 340, 652, 653, 0,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 350, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 654, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 655, 656, 370,
	0, 277, 0, 0, 0, 0, 0, 371, 372, 373,
	657, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 658, 659, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 660, 0,
	661, 391, 0, 392, 393, 394, 395, 396, 662, 663,
	664, 480, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 278, 404, 405, 406, 408, 0,
	0, 407, 665, 666, 0, 667, 0, 409, 410, 0,
	668, 0, 411, 412, 413, 0, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 0, 421, 423, 422,
	0, 424, 669, 0, 425, 426, 0, 0, 427, 428,
	429, 430, 431, 432, 435, 0, 0, 433, 434, 436,
	437, 0, 438, 439, 441, 444, 440, 442, 443, 445,
	458, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 459, 0, 461, 462, 463,
	464, 470, 472, 473, 468, 469, 471, 474, 475, 466,
	467, 0, 476, 465, 0, 279, 0, 477, 478, 0,
	670, 479, 671, 481, 482, 0, 0, 483, 0, 0,
	0, 485, 486, 487, 0, 0, 488, 489, 672, 0,
	490, 0, 673, 491, 492, 484, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 0, 502, 503, 674, 504,
	505, 506, 675, 507, 508, 509, 676, 510, 677, 511,
	512, 0, 513, 514, 0, 515, 516, 517, 518, 519,
	520, 521, 678, 522, 523, 525, 524, 526, 0, 527,
	0, 528, 529, 530, 0, 0, 0, 0, 0, 531,
	0, 533, 534, 535, 536, 532, 537, 538, 539, 540,
	541, 0, 542, 543, 544, 0, 545, 546, 547, 548,
	549, 679, 550, 0, 551, 552, 558, 559, 560, 553,
	554, 561, 562, 563, 564, 565, 0, 567, 568, 566,
	569, 570, 571, 0, 572, 573, 555, 556, 574, 575,
	0, 576, 577, 578, 579, 580, 581, 582, 680, 0,
	583, 0, 584, 585, 586, 588, 557, 589, 594, 595,
	681, 590, 591, 592, 593, 682, 597, 598, 0, 599,
	600, 0, 596, 587, 0, 601, 602, 603, 604, 605,
	606, 607, 364, 608, 0, 609, 683, 684, 685, 686,
	0, 618, 0, 610, 611, 612, 687, 613, 688, 0,
	614, 615, 616, 617, 0, 619, 620, 0, 0, 621,
	622, 623, 625, 626, 624, 627, 0, 628, 0, 0,
	629, 630, 631, 689, 690, 691, 274, 633, 632, 634,
	692, 635, 636, 0, 0, 0, 0, 637, 638, 693,
	639, 640, 641, 280, 282, 281, 283, 284, 285, 286,
	0, 287, 288, 0, 0, 0, 0, 0, 642, 0,
	0, 0, 0, 289, 290, 0, 291, 292, 293, 294,
	295, 296, 643, 644, 0, 297, 645, 298, 646, 0,
	647, 299, 300, 301, 302, 303, 304, 0, 0, 0,
	305, 648, 649, 650, 0, 306, 307, 651, 0, 0,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 0, 330,
	331, 332, 0, 0, 0, 0, 0, 0, 0, 333,
	334, 335, 2383, 337, 0, 338, 340, 652, 653, 0,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 350, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 654, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 655, 656, 370,
	0, 277, 0, 0, 0, 0, 0, 371, 372, 373,
	657, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 658, 659, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 660, 0,
	661, 391, 0, 392, 393, 394, 395, 396, 662, 663,
	664, 480, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 278, 404, 405, 406, 408, 0,
	0, 407, 665, 666, 0, 667, 0, 409, 410, 0,
	668, 0, 411, 412, 413, 0, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 0, 421, 423, 422,
	0, 424, 669, 0, 425, 426, 0, 0, 427, 428,
	429, 430, 431, 432, 435, 0, 0, 433, 434, 436,
	437, 0, 438, 439, 441, 444, 440, 442, 443, 445,
	458, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 459, 0, 461, 462, 463,
	464, 470, 472, 473, 468, 469, 471, 474, 475, 466,
	467, 0, 476, 465, 0, 279, 0, 477, 478, 0,
	670, 479, 671, 481, 482, 0, 0, 483, 0, 0,
	0, 485, 486, 487, 0, 0, 488, 489, 672, 0,
	490, 0, 673, 491, 492, 484, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 0, 502, 503, 674, 504,
	505, 506, 675, 507, 508, 509, 676, 510, 677, 511,
	512, 0, 513, 514, 0, 515, 516, 517, 518, 519,
	520, 521, 678, 522, 523, 525, 524, 526, 0, 527,
	0, 528, 529, 530, 0, 0, 0, 0, 0, 531,
	0, 533, 534, 535, 536, 532, 537, 538, 539, 540,
	541, 0, 542, 543, 544, 0, 545, 546, 547, 548,
	549, 679, 550, 0, 551, 552, 558, 559, 560, 553,
	554, 561, 562, 563, 564, 565, 0, 567, 568, 566,
	569, 570, 571, 0, 572, 573, 555, 556, 574, 575,
	0, 576, 577, 578, 579, 580, 581, 582, 680, 0,
	583, 0, 584, 585, 586, 588, 557, 589, 594, 595,
	681, 590, 591, 592, 593, 682, 597, 598, 0, 599,
	600, 0, 596, 587, 0, 601, 602, 603, 604, 605,
	606, 607, 364, 608, 0, 609, 683, 684, 685, 686,
	0, 618, 0, 610, 611, 612, 687, 613, 688, 0,
	614, 615, 616, 617, 0, 619, 620, 0, 0, 621,
	622, 623, 625, 626, 624, 627, 0, 628, 0, 0,
	629, 630, 631, 689, 690, 691, 274, 633, 632, 634,
	692, 635, 636, 0, 0, 0, 0, 637, 638, 693,
	639, 640, 641, 280, 282, 281, 283, 284, 285, 286,
	0, 287, 288, 0, 0, 0, 0, 0, 642, 0,
	0, 0, 0, 289, 290, 0, 291, 292, 293, 294,
	295, 296, 643, 644, 0, 297, 645, 298, 646, 0,
	647, 299, 300, 301, 302, 303, 304, 0, 0, 0,
	305, 648, 649, 650, 0, 306, 307, 651, 0, 0,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 0, 330,
	331, 332, 0, 0, 0, 0, 0, 0, 0, 333,
	334, 335, 336, 337, 0, 338, 340, 652, 653, 0,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 350, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 654, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 655, 656, 370,
	0, 277, 0, 0, 0, 0, 0, 371, 372, 373,
	657, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 658, 659, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 660, 0,
	661, 391, 0, 392, 393, 394, 395, 396, 2297, 663,
	664, 480, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 278, 404, 405, 406, 408, 0,
	0, 407, 665, 666, 0, 667, 0, 409, 410, 0,
	668, 0, 411, 412, 413, 0, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 0, 421, 423, 422,
	0, 424, 669, 0, 425, 426, 0, 0, 427, 428,
	429, 430, 431, 432, 435, 0, 0, 433, 434, 436,
	437, 0, 438, 439, 441, 444, 440, 442, 443, 445,
	458, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 459, 0, 461, 462, 463,
	464, 470, 472, 473, 468, 469, 471, 474, 475, 466,
	467, 0, 476, 465, 0, 279, 0, 477, 478, 0,
	670, 479, 671, 481, 482, 0, 0, 483, 0, 0,
	0, 485, 486, 487, 0, 0, 488, 489, 672, 0,
	490, 0, 673, 491, 492, 484, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 0, 502, 503, 674, 504,
	505, 506, 675, 507, 508, 509, 676, 510, 677, 511,
	512, 0, 513, 514, 0, 515, 516, 517, 518, 519,
	520, 521, 678, 522, 523, 525, 524, 526, 0, 527,
	0, 528, 529, 530, 0, 0, 0, 0, 0, 531,
	0, 533, 534, 535, 536, 532, 537, 538, 539, 540,
	541, 0, 542, 543, 544, 0, 545, 546, 547, 548,
	549, 679, 550, 0, 551, 552, 558, 559, 560, 553,
	554, 561, 562, 563, 564, 565, 0, 567, 568, 566,
	569, 570, 571, 0, 572, 573, 555, 556, 574, 575,
	0, 576, 577, 578, 579, 580, 581, 582, 680, 0,
	583, 0, 584, 585, 586, 588, 557, 589, 594, 595,
	681, 590, 591, 592, 593, 682, 597, 598, 0, 599,
	600, 0, 596, 587, 0, 601, 602, 603, 604, 605,
	606, 607, 364, 608, 0, 609, 683, 684, 685, 686,
	0, 618, 0, 610, 611, 612, 687, 613, 688, 0,
	614, 615, 616, 617, 0, 619, 620, 0, 0, 621,
	622, 623, 625, 626, 624, 627, 0, 628, 0, 0,
	629, 630, 631, 689, 690, 691, 274, 633, 632, 634,
	692, 635, 636, 0, 0, 0, 0, 637, 638, 693,
	639, 640, 641, 280, 282, 281, 283, 284, 285, 286,
	0, 287, 288, 0, 0, 0, 0, 0, 642, 0,
	0, 0, 0, 289, 290, 0, 291, 292, 293, 294,
	295, 296, 643, 644, 0, 297, 645, 298, 646, 0,
	647, 299, 300, 301, 302, 303, 304, 0, 0, 0,
	305, 648, 649, 650, 0, 306, 307, 651, 0, 0,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 0, 330,
	331, 332, 0, 0, 0, 0, 0, 0, 0, 333,
	334, 335, 336, 337, 0, 338, 340, 652, 653, 0,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 350, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 654, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 655, 656, 370,
	0, 277, 0, 0, 0, 0, 0, 371, 372, 373,
	657, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 658, 659, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 660, 0,
	661, 391, 0, 392, 393, 394, 395, 396, 2090, 663,
	664, 480, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 278, 404, 405, 406, 408, 0,
	0, 407, 665, 666, 0, 667, 0, 409, 410, 0,
	668, 0, 411, 412, 413, 0, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 0, 421, 423, 422,
	0, 424, 669, 0, 425, 426, 0, 0, 427, 428,
	429, 430, 431, 432, 435, 0, 0, 433, 434, 436,
	437, 0, 438, 439, 441, 444, 440, 442, 443, 445,
	458, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 459, 0, 461, 462, 463,
	464, 470, 472, 473, 468, 469, 471, 474, 475, 466,
	467, 0, 476, 465, 0, 279, 0, 477, 478, 0,
	670, 479, 671, 481, 482, 0, 0, 483, 0, 0,
	0, 485, 486, 487, 0, 0, 488, 489, 672, 0,
	490, 0, 673, 491, 492, 484, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 0, 502, 503, 674, 504,
	505, 506, 675, 507, 508, 509, 676, 510, 677, 511,
	512, 0, 513, 514, 0, 515, 516, 517, 518, 519,
	520, 521, 678, 522, 523, 525, 524, 526, 0, 527,
	0, 528, 529, 530, 0, 0, 0, 0, 0, 531,
	0, 533, 534, 535, 536, 532, 537, 538, 539, 540,
	541, 0, 542, 543, 544, 0, 545, 546, 547, 548,
	549, 679, 550, 0, 551, 552, 558, 559, 560, 553,
	554, 561, 562, 563, 564, 565, 0, 567, 568, 566,
	569, 570, 571, 0, 572, 573, 555, 556, 574, 575,
	0, 576, 577, 578, 579, 580, 581, 582, 680, 0,
	583, 0, 584, 585, 586, 588, 557, 589, 594, 595,
	681, 590, 591, 592, 593, 682, 597, 598, 0, 599,
	600, 0, 596, 587, 0, 601, 602, 603, 604, 605,
	606, 607, 364, 608, 0, 609, 683, 684, 685, 686,
	0, 618, 0, 610, 611, 612, 687, 613, 688, 0,
	614, 615, 616, 617, 0, 619, 620, 0, 0, 621,
	622, 623, 625, 626, 624, 627, 0, 628, 0, 0,
	629, 630, 631, 689, 690, 691, 274, 633, 632, 634,
	692, 635, 636, 0, 0, 0, 0, 637, 638, 693,
	639, 640, 641, 280, 282, 281, 283, 284, 285, 286,
	0, 287, 288, 0, 0, 0, 0, 0, 642, 0,
	0, 0, 0, 289, 290, 0, 291, 292, 293, 294,
	295, 296, 643, 644, 0, 297, 645, 298, 646, 0,
	647, 299, 300, 301, 302, 303, 304, 0, 0, 0,
	305, 648, 649, 650, 0, 306, 307, 651, 0, 0,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 0, 330,
	331, 332, 0, 0, 0, 0, 0, 0, 0, 333,
	334, 335, 336, 337, 0, 338, 340, 652, 653, 0,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 350, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 654, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 655, 656, 370,
	0, 277, 0, 0, 0, 0, 0, 371, 372, 373,
	657, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 658, 659, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 660, 0,
	661, 391, 0, 392, 393, 394, 395, 396, 2084, 663,
	664, 480, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 278, 404, 405, 406, 408, 0,
	0, 407, 665, 666, 0, 667, 0, 409, 410, 0,
	668, 0, 411, 412, 413, 0, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 0, 421, 423, 422,
	0, 424, 669, 0, 425, 426, 0, 0, 427, 428,
	429, 430, 431, 432, 435, 0, 0, 433, 434, 436,
	437, 0, 438, 439, 441, 444, 440, 442, 443, 445,
	458, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 459, 0, 461, 462, 463,
	464, 470, 472, 473, 468, 469, 471, 474, 475, 466,
	467, 0, 476, 465, 0, 279, 0, 477, 478, 0,
	670, 479, 671, 481, 482, 0, 0, 483, 0, 0,
	0, 485, 486, 487, 0, 0, 488, 489, 672, 0,
	490, 0, 673, 491, 492, 484, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 0, 502, 503, 674, 504,
	505, 506, 675, 507, 508, 509, 676, 510, 677, 511,
	512, 0, 513, 514, 0, 515, 516, 517, 518, 519,
	520, 521, 678, 522, 523, 525, 524, 526, 0, 527,
	0, 528, 529, 530, 0, 0, 0, 0, 0, 531,
	0, 533, 534, 535, 536, 532, 537, 538, 539, 540,
	541, 0, 542, 543, 544, 0, 545, 546, 547, 548,
	549, 679, 550, 0, 551, 552, 558, 559, 560, 553,
	554, 561, 562, 563, 564, 565, 0, 567, 568, 566,
	569, 570, 571, 0, 572, 573, 555, 556, 574, 575,
	0, 576, 577, 578, 579, 580, 581, 582, 680, 0,
	583, 0, 584, 585, 586, 588, 557, 589, 594, 595,
	681, 590, 591, 592, 593, 682, 597, 598, 0, 599,
	600, 0, 596, 587, 0, 601, 602, 603, 604, 605,
	606, 607, 364, 608, 0, 609, 683, 684, 685, 686,
	0, 618, 0, 610, 611, 612, 687, 613, 688, 0,
	614, 615, 616, 617, 0, 619, 620, 0, 0, 621,
	622, 623, 625, 626, 624, 627, 0, 628, 0, 0,
	629, 630, 631, 689, 690, 691, 0, 633, 632, 634,
	692, 635, 636, 904, 0, 274, 0, 637, 638, 693,
	639, 640, 641, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 280, 282, 281, 283, 284, 285, 286, 0,
	287, 288, 0, 0, 0, 0, 0, 642, 0, 0,
	0, 0, 289, 290, 0, 291, 292, 293, 294, 295,
	296, 643, 644, 0, 297, 645, 298, 646, 0, 647,
	299, 300, 301, 302, 303, 304, 0, 0, 0, 305,
	648, 649, 650, 0, 306, 307, 651, 0, 0, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 0, 330, 331,
	332, 0, 0, 0, 0, 0, 0, 0, 333, 334,
	335, 336, 337, 0, 338, 340, 652, 653, 0, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 350, 351, 0, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 654, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 655, 656, 370, 0,
	0, 0, 0, 0, 0, 0, 371, 372, 373, 657,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 658, 659, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 660, 0, 661,
	391, 0, 392, 393, 394, 395, 396, 662, 663, 664,
	480, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 0, 404, 405, 406, 408, 0, 0,
	407, 665, 666, 0, 667, 903, 409, 410, 0, 668,
	0, 411, 412, 413, 0, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 669, 0, 425, 426, 0, 0, 427, 428, 429,
	430, 431, 432, 435, 0, 0, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 0, 461, 462, 463, 464,
	470, 472, 473, 468, 469, 471, 474, 475, 466, 467,
	0, 476, 465, 0, 0, 0, 477, 478, 0, 670,
	479, 671, 481, 482, 0, 0, 483, 0, 0, 0,
	485, 486, 487, 0, 0, 488, 489, 672, 0, 490,
	0, 673, 491, 492, 484, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 0, 502, 503, 674, 504, 505,
	506, 675, 507, 508, 509, 676, 510, 677, 511, 512,
	0, 513, 514, 0, 515, 516, 517, 518, 519, 520,
	521, 678, 522, 523, 525, 524, 526, 0, 527, 0,
	528, 529, 530, 0, 0, 0, 0, 0, 531, 0,
	533, 534, 535, 536, 532, 537, 538, 539, 540, 541,
	0, 542, 543, 544, 0, 545, 546, 547, 548, 549,
	679, 550, 0, 551, 552, 558, 559, 560, 553, 554,
	561, 562, 563, 564, 565, 0, 567, 568, 566, 569,
	570, 571, 0, 572, 573, 555, 556, 574, 575, 0,
	576, 577, 578, 579, 580, 581, 582, 680, 0, 583,
	0, 584, 585, 586, 588, 557, 589, 594, 595, 681,
	590, 591, 592, 593, 682, 597, 598, 0, 599, 600,
	0, 596, 587, 902, 601, 602, 603, 604, 605, 606,
	607, 364, 608, 0, 609, 683, 684, 685, 686, 0,
	618, 0, 610, 611, 612, 687, 613, 688, 0, 614,
	615, 616, 617, 0, 619, 620, 0, 0, 621, 622,
	623, 625, 626, 624, 627, 0, 628, 0, 0, 629,
	630, 631, 689, 690, 691, 274, 633, 632, 634, 692,
	635, 636, 0, 0, 0, 0, 637, 638, 693, 639,
	640, 641, 280, 282, 281, 283, 284, 285, 286, 0,
	287, 288, 0, 0, 0, 0, 0, 642, 0, 0,
	0, 0, 289, 290, 0, 291, 292, 293, 294, 295,
	296, 643, 644, 0, 297, 645, 298, 646, 0, 647,
	299, 300, 301, 302, 303, 304, 0, 0, 0, 305,
	648, 649, 650, 0, 306, 307, 651, 0, 0, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 0, 330, 331,
	332, 0, 0, 0, 0, 0, 0, 0, 333, 334,
	335, 336, 337, 0, 338, 340, 652, 653, 0, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 350, 351, 0, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 654, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 655, 656, 370, 0,
	3120, 0, 0, 0, 0, 0, 371, 372, 373, 657,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 658, 659, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 660, 0, 661,
	391, 0, 392, 393, 394, 395, 396, 662, 663, 664,
	480, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 0, 404, 405, 406, 408, 0, 0,
	407, 665, 666, 0, 667, 0, 409, 410, 0, 668,
	0, 411, 412, 413, 0, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 669, 0, 425, 426, 0, 0, 427, 428, 429,
	430, 431, 432, 435, 0, 0, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 0, 461, 462, 463, 464,
	470, 472, 473, 468, 469, 471, 474, 475, 466, 467,
	0, 476, 465, 0, 0, 0, 477, 478, 0, 670,
	479, 671, 481, 482, 0, 0, 483, 0, 0, 0,
	485, 486, 487, 0, 0, 488, 489, 672, 0, 490,
	0, 673, 491, 492, 484, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 0, 502, 503, 674, 504, 505,
	506, 675, 507, 508, 509, 676, 510, 677, 511, 512,
	4282, 513, 514, 0, 515, 516, 517, 518, 519, 520,
	521, 678, 522, 523, 525, 524, 526, 0, 527, 0,
	528, 529, 530, 0, 0, 0, 0, 0, 531, 0,
	533, 534, 535, 536, 532, 537, 538, 539, 540, 541,
	0, 542, 543, 544, 0, 545, 546, 547, 548, 549,
	679, 550, 0, 551, 552, 558, 559, 560, 553, 554,
	561, 562, 563, 564, 565, 0, 567, 568, 566, 569,
	570, 571, 0, 572, 573, 555, 556, 574, 575, 0,
	576, 577, 578, 579, 580, 581, 582, 680, 0, 583,
	0, 584, 585, 586, 588, 557, 589, 594, 595, 681,
	590, 591, 592, 593, 682, 597, 598, 0, 599, 600,
	0, 596, 587, 0, 601, 602, 603, 604, 605, 606,
	607, 364, 608, 0, 609, 683, 684, 685, 686, 0,
	618, 0, 610, 611, 612, 687, 613, 688, 0, 614,
	615, 616, 617, 0, 619, 620, 0, 0, 621, 622,
	623, 625, 626, 624, 627, 0, 628, 0, 0, 629,
	630, 631, 689, 690, 691, 0, 633, 632, 634, 692,
	635, 636, 1365, 0, 274, 0, 637, 638, 693, 639,
	640, 641, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 280, 282, 281, 283, 284, 285, 286, 0, 287,
	288, 0, 0, 0, 0, 0, 642, 0, 0, 0,
	0, 289, 290, 1368, 291, 292, 293, 294, 295, 296,
	643, 644, 0, 297, 645, 298, 646, 0, 647, 299,
	300, 301, 302, 303, 304, 0, 0, 0, 305, 648,
	649, 1366, 0, 306, 307, 651, 0, 0, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	325, 326, 0, 327, 328, 329, 0, 330, 331, 332,
	0, 0, 0, 0, 0, 0, 0, 333, 334, 335,
	336, 337, 0, 338, 340, 652, 653, 0, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 350, 351, 0, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 654, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 655, 656, 370, 0, 0,
	0, 0, 0, 0, 0, 371, 372, 373, 657, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 658, 659, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 660, 0, 661, 391,
	0, 392, 393, 394, 395, 396, 662, 663, 664, 480,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 0, 404, 405, 406, 408, 0, 0, 407,
	665, 666, 0, 667, 0, 409, 410, 0, 668, 0,
	411, 412, 413, 0, 414, 0, 0, 0, 415, 416,
	417, 418, 419, 420, 0, 421, 423, 422, 0, 424,
	669, 0, 425, 426, 0, 0, 427, 428, 429, 430,
	431, 432, 435, 0, 0, 433, 434, 436, 437, 0,
	438, 439, 441, 444, 440, 442, 443, 445, 458, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 460, 0, 785, 0, 461, 462, 463, 464, 470,
	472, 473, 468, 469, 471, 474, 475, 466, 467, 0,
	476, 465, 0, 0, 0, 477, 478, 0, 670, 479,
	671, 481, 482, 0, 0, 483, 0, 0, 0, 485,
	486, 487, 0, 0, 488, 489, 672, 0, 490, 0,
	673, 491, 492, 484, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 0, 502, 503, 674, 504, 505, 506,
	675, 507, 508, 509, 676, 510, 677, 511, 512, 0,
	513, 514, 0, 515, 516, 517, 518, 519, 520, 521,
	678, 522, 523, 525, 524, 526, 0, 527, 0, 528,
	529, 530, 0, 0, 0, 0, 0, 531, 0, 533,
	534, 535, 536, 532, 537, 538, 539, 540, 541, 0,
	542, 543, 544, 0, 784, 546, 547, 548, 549, 679,
	550, 0, 551, 552, 558, 559, 560, 553, 554, 783,
	562, 563, 564, 565, 0, 567, 568, 566, 569, 1369,
	571, 0, 572, 573, 555, 556, 574, 575, 0, 576,
	577, 578, 579, 580, 581, 582, 680, 0, 583, 0,
	584, 585, 586, 588, 557, 589, 594, 595, 681, 590,
	591, 592, 593, 682, 597, 598, 0, 599, 600, 0,
	596, 587, 0, 601, 602, 603, 604, 605, 606, 607,
	364, 608, 0, 609, 781, 684, 685, 686, 0, 618,
	0, 610, 611, 612, 687, 613, 688, 0, 614, 615,
	616, 617, 0, 619, 620, 0, 0, 621, 622, 623,
	625, 626, 624, 627, 0, 628, 0, 0, 629, 630,
	631, 689, 690, 691, 0, 633, 632, 634, 692, 635,
	636, 1365, 0, 274, 0, 637, 638, 693, 639, 640,
	641, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	280, 282, 281, 283, 284, 285, 286, 0, 287, 288,
	0, 0, 0, 0, 0, 642, 0, 0, 0, 0,
	289, 290, 1368, 291, 292, 293, 294, 295, 296, 643,
	644, 0, 297, 645, 298, 646, 0, 647, 299, 300,
	301, 302, 303, 304, 0, 0, 0, 305, 648, 649,
	1366, 0, 306, 307, 651, 0, 0, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 0, 330, 331, 332, 0,
	0, 0, 0, 0, 0, 0, 333, 334, 335, 336,
	337, 0, 338, 340, 652, 653, 0, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 350, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 654, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 655, 656, 370, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 657, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 658, 659, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 660, 0, 661, 391, 0,
	392, 393, 394, 395, 396, 662, 663, 664, 480, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 408, 0, 0, 407, 665,
	666, 0, 667, 0, 409, 410, 0, 668, 0, 411,
	412, 413, 0, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 669,
	0, 425, 426, 0, 0, 427, 428, 429, 430, 431,
	432, 435, 0, 0, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 785, 0, 461, 462, 463, 464, 470, 472,
	473, 468, 469, 471, 474, 475, 466, 467, 0, 476,
	465, 0, 0, 0, 477, 478, 0, 670, 479, 671,
	481, 482, 0, 0, 483, 0, 0, 0, 485, 486,
	487, 0, 0, 488, 489, 672, 0, 490, 0, 673,
	491, 492, 484, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 0, 502, 503, 674, 504, 505, 506, 675,
	507, 508, 509, 676, 510, 677, 511, 512, 0, 513,
	514, 0, 515, 516, 517, 518, 519, 520, 521, 678,
	522, 523, 525, 524, 526, 0, 527, 0, 528, 529,
	530, 0, 0, 0, 0, 0, 531, 0, 533, 534,
	535, 536, 532, 537, 538, 539, 540, 541, 0, 542,
	543, 544, 0, 784, 546, 547, 548, 549, 679, 550,
	0, 551, 552, 558, 559, 560, 553, 554, 783, 562,
	563, 564, 565, 0, 567, 568, 566, 569, 1369, 571,
	0, 572, 573, 555, 556, 574, 575, 0, 576, 577,
	578, 579, 580, 581, 582, 680, 0, 583, 0, 584,
	585, 586, 588, 557, 589, 594, 595, 681, 590, 591,
	592, 593, 682, 597, 598, 0, 599, 600, 0, 596,
	587, 0, 601, 602, 603, 604, 605, 606, 607, 364,
	608, 0, 609, 781, 684, 685, 686, 0, 618, 0,
	610, 1367, 612, 687, 613, 688, 0, 614, 615, 616,
	617, 0, 619, 620, 0, 0, 621, 622, 623, 625,
	626, 624, 627, 0, 628, 0, 0, 629, 630, 631,
	689, 690, 691, 0, 633, 632, 634, 692, 635, 636,
	704, 0, 274, 0, 637, 638, 693, 639, 640, 641,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 280,
	282, 281, 283, 284, 285, 286, 703, 287, 288, 0,
	0, 0, 0, 0, 642, 0, 0, 0, 0, 289,
	290, 0, 291, 292, 293, 294, 295, 296, 643, 644,
	0, 297, 645, 298, 646, 0, 647, 299, 300, 301,
	302, 303, 304, 0, 0, 0, 305, 648, 649, 650,
	0, 306, 307, 651, 0, 0, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	0, 327, 328, 329, 0, 330, 331, 332, 0, 0,
	0, 0, 0, 0, 0, 333, 334, 335, 336, 337,
	0, 338, 340, 652, 653, 0, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	350, 351, 0, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 654, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 655, 656, 370, 0, 0, 0, 0,
	0, 0, 0, 371, 372, 373, 657, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 658, 659, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 660, 0, 661, 391, 0, 392,
	393, 394, 395, 396, 662, 663, 664, 480, 0, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	0, 404, 405, 406, 408, 0, 0, 407, 665, 666,
	0, 667, 0, 409, 410, 0, 668, 0, 411, 412,
	413, 0, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 0, 421, 423, 422, 0, 424, 669, 0,
	425, 426, 0, 0, 427, 428, 429, 430, 431, 432,
	435, 0, 0, 433, 434, 436, 437, 0, 438, 439,
	441, 444, 440, 442, 443, 445, 458, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 460,
	0, 459, 0, 461, 462, 463, 464, 470, 472, 473,
	468, 469, 471, 474, 475, 466, 467, 0, 476, 465,
	0, 0, 0, 477, 478, 0, 670, 479, 671, 481,
	482, 0, 0, 483, 0, 0, 0, 485, 486, 487,
	0, 0, 488, 489, 672, 0, 490, 0, 673, 491,
	492, 484, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 0, 502, 503, 674, 504, 505, 506, 675, 507,
	508, 509, 676, 510, 677, 702, 512, 0, 513, 514,
	0, 515, 516, 517, 518, 519, 520, 521, 678, 522,
	523, 525, 524, 526, 0, 527, 0, 528, 529, 530,
	0, 0, 0, 0, 0, 531, 0, 533, 534, 535,
	536, 532, 537, 538, 539, 540, 541, 0, 542, 543,
	544, 0, 545, 546, 547, 548, 549, 679, 550, 0,
	551, 552, 558, 559, 560, 553, 554, 561, 562, 563,
	564, 565, 0, 567, 568, 566, 569, 570, 571, 0,
	572, 573, 555, 556, 574, 575, 0, 576, 577, 578,
	579, 580, 581, 582, 680, 0, 583, 0, 584, 585,
	586, 588, 557, 589, 594, 595, 681, 590, 591, 592,
	593, 682, 597, 598, 0, 599, 600, 0, 596, 587,
	0, 601, 602, 603, 604, 605, 606, 607, 364, 608,
	0, 609, 683, 684, 685, 686, 0, 618, 0, 610,
	611, 612, 687, 613, 688, 0, 614, 615, 616, 617,
	0, 619, 620, 0, 0, 621, 622, 623, 625, 626,
	624, 627, 0, 628, 0, 0, 629, 630, 631, 689,
	690, 691, 0, 633, 632, 634, 692, 635, 636, 274,
	3107, 0, 0, 637, 638, 693, 639, 640, 641, 0,
	0, 0, 0, 0, 0, 0, 280, 282, 281, 283,
	284, 285, 286, 0, 287, 288, 0, 0, 0, 0,
	0, 642, 0, 0, 0, 0, 289, 290, 0, 291,
	292, 293, 294, 295, 296, 643, 644, 0, 297, 645,
	298, 646, 0, 647, 299, 300, 301, 302, 303, 304,
	0, 0, 0, 305, 648, 649, 650, 0, 306, 307,
	651, 0, 0, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 0, 330, 331, 332, 0, 0, 0, 0, 0,
	0, 0, 333, 334, 335, 336, 337, 0, 338, 340,
	652, 653, 0, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 350, 351, 0,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 654,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	655, 656, 370, 0, 0, 0, 0, 0, 0, 0,
	371, 372, 373, 657, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 658, 659,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 660, 0, 661, 391, 0, 392, 393, 394, 395,
	396, 662, 663, 664, 480, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 0, 404, 405,
	406, 408, 0, 0, 407, 665, 666, 0, 667, 0,
	409, 410, 0, 668, 0, 411, 412, 413, 0, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 669, 0, 425, 426, 0,
	0, 427, 428, 429, 430, 431, 432, 435, 0, 0,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 0,
	461, 462, 463, 464, 470, 472, 473, 468, 469, 471,
	474, 475, 466, 467, 0, 476, 465, 0, 0, 0,
	477, 478, 0, 670, 479, 671, 481, 482, 0, 0,
	483, 0, 0, 0, 485, 486, 487, 0, 0, 488,
	489, 672, 0, 490, 0, 673, 491, 492, 484, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 0, 502,
	503, 674, 504, 505, 506, 675, 507, 508, 509, 676,
	510, 677, 511, 512, 0, 513, 514, 0, 515, 516,
	517, 518, 519, 520, 521, 678, 522, 523, 525, 524,
	526, 0, 527, 0, 528, 529, 530, 0, 0, 0,
	0, 0, 531, 0, 533, 534, 535, 536, 532, 537,
	538, 539, 540, 541, 0, 542, 543, 544, 0, 545,
	546, 547, 548, 549, 679, 550, 0, 551, 552, 558,
	559, 560, 553, 554, 561, 562, 563, 564, 565, 0,
	567, 568, 566, 569, 570, 571, 0, 572, 573, 555,
	556, 574, 575, 0, 576, 577, 578, 579, 580, 581,
	582, 680, 0, 583, 0, 584, 585, 586, 588, 557,
	589, 594, 595, 681, 590, 591, 592, 593, 682, 597,
	598, 0, 599, 600, 0, 596, 587, 0, 601, 602,
	603, 604, 605, 606, 607, 364, 608, 0, 609, 683,
	684, 685, 686, 0, 618, 0, 610, 611, 612, 687,
	613, 688, 0, 614, 615, 616, 617, 0, 619, 620,
	0, 0, 621, 622, 623, 625, 626, 624, 627, 0,
	628, 0, 0, 629, 630, 631, 689, 690, 691, 0,
	633, 632, 634, 692, 635, 636, 274, 4292, 0, 0,
	637, 638, 693, 639, 640, 641, 0, 0, 0, 0,
	0, 0, 0, 280, 282, 281, 283, 284, 285, 286,
	0, 287, 288, 0, 0, 0, 0, 0, 642, 0,
	0, 0, 0, 289, 290, 0, 291, 292, 293, 294,
	295, 296, 643, 644, 0, 297, 645, 298, 646, 0,
	647, 299, 300, 301, 302, 303, 304, 0, 0, 0,
	305, 648, 649, 650, 0, 306, 307, 651, 0, 0,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 0, 330,
	331, 332, 0, 0, 0, 0, 0, 0, 0, 333,
	334, 335, 336, 337, 0, 338, 340, 652, 653, 0,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 350, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 654, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 655, 656, 370,
	0, 0, 0, 0, 0, 0, 0, 371, 372, 373,
	657, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 658, 659, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 660, 0,
	661, 391, 0, 392, 393, 394, 395, 396, 662, 663,
	664, 480, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 0, 404, 405, 406, 408, 0,
	0, 407, 665, 666, 0, 667, 0, 409, 410, 0,
	668, 0, 411, 412, 413, 0, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 0, 421, 423, 422,
	0, 424, 669, 0, 425, 426, 0, 0, 427, 428,
	429, 430, 431, 432, 435, 0, 0, 433, 434, 436,
	437, 0, 438, 439, 441, 444, 440, 442, 443, 445,
	458, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 459, 0, 461, 462, 463,
	464, 470, 472, 473, 468, 469, 471, 474, 475, 466,
	467, 0, 476, 465, 0, 0, 0, 477, 478, 0,
	670, 479, 671, 481, 482, 0, 0, 483, 0, 0,
	0, 485, 486, 487, 0, 0, 488, 489, 672, 0,
	490, 0, 673, 491, 492, 484, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 0, 502, 503, 674, 504,
	505, 506, 675, 507, 508, 509, 676, 510, 677, 511,
	512, 0, 513, 514, 0, 515, 516, 517, 518, 519,
	520, 521, 678, 522, 523, 525, 524, 526, 0, 527,
	0, 528, 529, 530, 0, 0, 0, 0, 0, 531,
	0, 533, 534, 535, 536, 532, 537, 538, 539, 540,
	541, 0, 542, 543, 544, 0, 545, 546, 547, 548,
	549, 679, 550, 0, 551, 552, 558, 559, 560, 553,
	554, 561, 562, 563, 564, 565, 0, 567, 568, 566,
	569, 570, 571, 0, 572, 573, 555, 556, 574, 575,
	0, 576, 577, 578, 579, 580, 581, 582, 680, 0,
	583, 0, 584, 585, 586, 588, 557, 589, 594, 595,
	681, 590, 591, 592, 593, 682, 597, 598, 0, 599,
	600, 0, 596, 587, 0, 601, 602, 603, 604, 605,
	606, 607, 364, 608, 0, 609, 683, 684, 685, 686,
	0, 618, 0, 610, 611, 612, 687, 613, 688, 0,
	614, 615, 616, 617, 0, 619, 620, 0, 0, 621,
	622, 623, 625, 626, 624, 627, 0, 628, 0, 0,
	629, 630, 631, 689, 690, 691, 274, 633, 632, 634,
	692, 635, 636, 0, 0, 0, 0, 637, 638, 693,
	639, 640, 641, 280, 282, 281, 283, 284, 285, 286,
	0, 287, 288, 0, 0, 0, 0, 0, 642, 0,
	0, 0, 0, 289, 290, 0, 291, 292, 293, 294,
	295, 296, 643, 644, 0, 297, 645, 298, 646, 0,
	647, 299, 300, 301, 302, 303, 304, 0, 0, 0,
	305, 648, 649, 650, 0, 306, 307, 651, 0, 0,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 0, 330,
	331, 332, 0, 0, 0, 0, 0, 0, 0, 333,
	334, 335, 336, 337, 0, 338, 340, 652, 653, 0,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 350, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 654, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 655, 656, 370,
	0, 0, 0, 0, 0, 0, 0, 371, 372, 373,
	657, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 658, 659, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 660, 0,
	661, 391, 0, 392, 393, 394, 395, 396, 662, 663,
	664, 480, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 0, 404, 405, 406, 408, 0,
	0, 407, 665, 666, 0, 667, 0, 409, 410, 0,
	668, 0, 411, 412, 413, 0, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 0, 421, 423, 422,
	0, 424, 669, 0, 425, 426, 0, 0, 427, 428,
	429, 430, 431, 432, 435, 0, 0, 433, 434, 436,
	437, 0, 438, 439, 441, 444, 440, 442, 443, 445,
	458, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 459, 0, 461, 462, 463,
	464, 470, 472, 473, 468, 469, 471, 474, 475, 466,
	467, 0, 476, 465, 0, 0, 0, 477, 478, 0,
	670, 479, 671, 481, 482, 0, 0, 483, 0, 0,
	0, 485, 486, 487, 0, 0, 488, 489, 672, 0,
	490, 0, 673, 491, 492, 484, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 0, 502, 503, 674, 504,
	505, 506, 675, 507, 508, 509, 676, 510, 677, 511,
	512, 4577, 513, 514, 0, 515, 516, 517, 518, 519,
	520, 521, 678, 522, 523, 525, 524, 526, 0, 527,
	0, 528, 529, 530, 0, 0, 0, 0, 0, 531,
	0, 533, 534, 535, 536, 532, 537, 538, 539, 540,
	541, 0, 542, 543, 544, 0, 545, 546, 547, 548,
	549, 679, 550, 0, 551, 552, 558, 559, 560, 553,
	554, 561, 562, 563, 564, 565, 0, 567, 568, 566,
	569, 570, 571, 0, 572, 573, 555, 556, 574, 575,
	0, 576, 577, 578, 579, 580, 581, 582, 680, 0,
	583, 0, 584, 585, 586, 588, 557, 589, 594, 595,
	681, 590, 591, 592, 593, 682, 597, 598, 0, 599,
	600, 0, 596, 587, 0, 601, 602, 603, 604, 605,
	606, 607, 364, 608, 0, 609, 683, 684, 685, 686,
	0, 618, 0, 610, 611, 612, 687, 613, 688, 0,
	614, 615, 616, 617, 0, 619, 620, 0, 0, 621,
	622, 623, 625, 626, 624, 627, 0, 628, 0, 0,
	629, 630, 631, 689, 690, 691, 274, 633, 632, 634,
	692, 635, 636, 0, 0, 0, 0, 637, 638, 693,
	639, 640, 641, 280, 282, 281, 283, 284, 285, 286,
	0, 287, 288, 0, 0, 0, 0, 0, 642, 0,
	0, 0, 0, 289, 290, 0, 291, 292, 293, 294,
	295, 296, 643, 644, 0, 297, 645, 298, 646, 0,
	647, 299, 300, 301, 302, 303, 304, 0, 0, 0,
	305, 648, 649, 650, 0, 306, 307, 651, 0, 0,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 0, 330,
	331, 332, 0, 0, 0, 0, 0, 0, 0, 333,
	334, 335, 336, 337, 0, 338, 340, 652, 653, 0,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 350, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 654, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 655, 656, 370,
	0, 0, 0, 0, 0, 0, 0, 371, 372, 373,
	657, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 658, 659, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 660, 0,
	661, 391, 0, 392, 393, 394, 395, 396, 662, 663,
	664, 480, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 0, 404, 405, 406, 408, 0,
	0, 407, 665, 666, 0, 667, 0, 409, 410, 0,
	668, 0, 411, 412, 413, 0, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 0, 421, 423, 422,
	0, 424, 669, 0, 425, 426, 0, 0, 427, 428,
	429, 430, 431, 432, 435, 0, 0, 433, 434, 436,
	437, 0, 438, 439, 441, 444, 440, 442, 443, 445,
	458, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 459, 0, 461, 462, 463,
	464, 470, 472, 473, 468, 469, 471, 474, 475, 466,
	467, 0, 476, 465, 0, 0, 0, 477, 478, 0,
	670, 479, 671, 481, 482, 0, 0, 483, 0, 0,
	0, 485, 486, 487, 0, 0, 488, 489, 672, 0,
	490, 0, 673, 491, 492, 484, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 0, 502, 503, 674, 504,
	505, 506, 675, 507, 508, 509, 676, 510, 677, 511,
	512, 4178, 513, 514, 0, 515, 516, 517, 518, 519,
	520, 521, 678, 522, 523, 525, 524, 526, 0, 527,
	0, 528, 529, 530, 0, 0, 0, 0, 0, 531,
	0, 533, 534, 535, 536, 532, 537, 538, 539, 540,
	541, 0, 542, 543, 544, 0, 545, 546, 547, 548,
	549, 679, 550, 0, 551, 552, 558, 559, 560, 553,
	554, 561, 562, 563, 564, 565, 0, 567, 568, 566,
	569, 570, 571, 0, 572, 573, 555, 556, 574, 575,
	0, 576, 577, 578, 579, 580, 581, 582, 680, 0,
	583, 0, 584, 585, 586, 588, 557, 589, 594, 595,
	681, 590, 591, 592, 593, 682, 597, 598, 0, 599,
	600, 0, 596, 587, 0, 601, 602, 603, 604, 605,
	606, 607, 364, 608, 0, 609, 683, 684, 685, 686,
	0, 618, 0, 610, 611, 612, 687, 613, 688, 0,
	614, 615, 616, 617, 0, 619, 620, 0, 0, 621,
	622, 623, 625, 626, 624, 627, 0, 628, 0, 0,
	629, 630, 631, 689, 690, 691, 274, 633, 632, 634,
	692, 635, 636, 0, 0, 0, 0, 637, 638, 693,
	639, 640, 641, 280, 282, 281, 283, 284, 285, 286,
	0, 287, 288, 0, 0, 0, 0, 0, 642, 0,
	0, 0, 0, 289, 290, 0, 291, 292, 293, 294,
	295, 296, 643, 644, 0, 297, 645, 298, 646, 0,
	647, 299, 300, 301, 302, 303, 304, 0, 0, 0,
	305, 648, 649, 650, 0, 306, 307, 651, 0, 0,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 0, 330,
	331, 332, 0, 0, 0, 0, 0, 0, 0, 333,
	334, 335, 336, 337, 0, 338, 340, 652, 653, 3938,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 350, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 654, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 655, 656, 370,
	0, 0, 0, 0, 0, 0, 0, 371, 372, 373,
	657, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 658, 659, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 660, 0,
	661, 391, 0, 392, 393, 394, 395, 396, 662, 663,
	664, 480, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 0, 404, 405, 406, 408, 0,
	0, 407, 665, 666, 0, 667, 0, 409, 410, 0,
	668, 0, 411, 412, 413, 0, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 0, 421, 423, 422,
	0, 424, 669, 0, 425, 426, 0, 0, 427, 428,
	429, 430, 431, 432, 435, 0, 0, 433, 434, 436,
	437, 0, 438, 439, 441, 444, 440, 442, 443, 445,
	458, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 459, 0, 461, 462, 463,
	464, 470, 472, 473, 468, 469, 471, 474, 475, 466,
	467, 0, 476, 465, 0, 0, 0, 477, 478, 0,
	670, 479, 671, 481, 482, 0, 0, 483, 0, 0,
	0, 485, 486, 487, 0, 0, 488, 489, 672, 0,
	490, 0, 673, 491, 492, 484, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 0, 502, 503, 674, 504,
	505, 506, 675, 507, 508, 509, 676, 510, 677, 511,
	512, 0, 513, 514, 0, 515, 516, 517, 518, 519,
	520, 521, 678, 522, 523, 525, 524, 526, 0, 527,
	0, 528, 529, 530, 0, 0, 0, 0, 0, 531,
	0, 533, 534, 535, 536, 532, 537, 538, 539, 540,
	541, 0, 542, 543, 544, 0, 545, 546, 547, 548,
	549, 679, 550, 0, 551, 552, 558, 559, 560, 553,
	554, 561, 562, 563, 564, 565, 0, 567, 568, 566,
	569, 570, 571, 0, 572, 573, 555, 556, 574, 575,
	0, 576, 577, 578, 579, 580, 581, 582, 680, 0,
	583, 0, 584, 585, 586, 588, 557, 589, 594, 595,
	681, 590, 591, 592, 593, 682, 597, 598, 0, 599,
	600, 0, 596, 587, 0, 601, 602, 603, 604, 605,
	606, 607, 364, 608, 0, 609, 683, 684, 685, 686,
	0, 618, 0, 610, 611, 612, 687, 613, 688, 0,
	614, 615, 616, 617, 0, 619, 620, 0, 0, 621,
	622, 623, 625, 626, 624, 627, 0, 628, 0, 0,
	629, 630, 631, 689, 690, 691, 274, 633, 632, 634,
	692, 635, 636, 0, 0, 0, 0, 637, 638, 693,
	639, 640, 641, 280, 282, 281, 283, 284, 285, 286,
	0, 287, 288, 0, 0, 0, 0, 0, 642, 0,
	2780, 0, 0, 289, 290, 0, 291, 292, 293, 294,
	295, 296, 643, 644, 0, 297, 645, 298, 646, 0,
	647, 299, 300, 301, 302, 303, 304, 0, 0, 0,
	305, 648, 649, 650, 0, 306, 307, 651, 0, 0,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 0, 330,
	331, 332, 0, 0, 0, 0, 0, 0, 0, 333,
	334, 335, 336, 337, 0, 338, 340, 652, 653, 0,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 350, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 654, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 655, 656, 370,
	0, 0, 0, 0, 0, 0, 0, 371, 372, 373,
	657, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 658, 659, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 660, 0,
	661, 391, 0, 392, 393, 394, 395, 396, 662, 663,
	664, 480, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 0, 404, 405, 406, 408, 0,
	0, 407, 665, 666, 0, 667, 0, 409, 410, 0,
	668, 0, 411, 412, 413, 0, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 0, 421, 423, 422,
	0, 424, 669, 0, 425, 426, 0, 0, 427, 428,
	429, 430, 431, 432, 435, 0, 0, 433, 434, 436,
	437, 0, 438, 439, 441, 444, 440, 442, 443, 445,
	458, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 459, 0, 461, 462, 463,
	464, 470, 472, 473, 468, 469, 471, 474, 475, 466,
	467, 0, 476, 465, 0, 0, 0, 477, 478, 0,
	670, 479, 671, 481, 482, 0, 0, 483, 0, 0,
	0, 485, 486, 487, 0, 0, 488, 489, 672, 0,
	490, 0, 673, 491, 492, 484, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 0, 502, 503, 674, 504,
	505, 506, 675, 507, 508, 509, 676, 510, 677, 511,
	512, 0, 513, 514, 0, 515, 516, 517, 518, 519,
	520, 521, 678, 522, 523, 525, 524, 526, 0, 527,
	0, 528, 529, 530, 0, 0, 0, 0, 0, 531,
	0, 533, 534, 535, 536, 532, 537, 538, 539, 540,
	541, 0, 542, 543, 544, 0, 545, 546, 547, 548,
	549, 679, 550, 0, 551, 552, 558, 559, 560, 553,
	554, 561, 562, 563, 564, 565, 0, 567, 568, 566,
	569, 570, 571, 0, 572, 573, 555, 556, 574, 575,
	0, 576, 577, 578, 579, 580, 581, 582, 680, 0,
	583, 0, 584, 585, 586, 588, 557, 589, 594, 595,
	681, 590, 591, 592, 593, 682, 597, 598, 0, 599,
	600, 0, 596, 587, 0, 601, 602, 603, 604, 605,
	606, 607, 364, 608, 0, 609, 683, 684, 685, 686,
	0, 618, 0, 610, 611, 612, 687, 613, 688, 0,
	614, 615, 616, 617, 0, 619, 620, 0, 0, 621,
	622, 623, 625, 626, 624, 627, 0, 628, 0, 0,
	629, 630, 631, 689, 690, 691, 0, 633, 632, 634,
	692, 635, 636, 274, 3107, 0, 0, 637, 638, 693,
	639, 640, 641, 0, 0, 0, 0, 0, 0, 0,
	280, 282, 281, 283, 284, 285, 286, 0, 287, 288,
	0, 0, 0, 0, 0, 642, 0, 0, 0, 0,
	289, 290, 0, 291, 292, 293, 294, 295, 296, 643,
	644, 0, 297, 645, 298, 646, 0, 647, 299, 300,
	301, 302, 303, 304, 0, 0, 0, 305, 648, 649,
	650, 0, 306, 307, 651, 0, 0, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 0, 330, 331, 332, 0,
	0, 0, 0, 0, 0, 0, 333, 334, 335, 336,
	337, 0, 338, 340, 652, 653, 0, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 350, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 654, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 655, 656, 370, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 657, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 658, 659, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 660, 0, 661, 391, 0,
	392, 393, 394, 395, 396, 662, 663, 664, 480, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 408, 0, 0, 407, 665,
	666, 0, 667, 0, 409, 410, 0, 668, 0, 411,
	412, 413, 0, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 669,
	0, 425, 426, 0, 0, 427, 428, 429, 430, 431,
	432, 435, 0, 0, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 0, 461, 462, 463, 464, 470, 472,
	473, 468, 469, 471, 474, 475, 466, 467, 0, 476,
	465, 0, 0, 0, 477, 478, 0, 670, 479, 671,
	481, 482, 0, 0, 483, 0, 0, 0, 485, 486,
	3104, 0, 0, 488, 489, 672, 0, 490, 0, 673,
	491, 492, 484, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 0, 502, 503, 674, 504, 505, 506, 675,
	507, 508, 509, 676, 510, 677, 511, 512, 0, 513,
	514, 0, 515, 516, 517, 518, 519, 520, 521, 678,
	522, 523, 525, 524, 526, 0, 527, 0, 528, 529,
	530, 0, 0, 0, 0, 0, 531, 0, 533, 534,
	535, 536, 532, 537, 538, 539, 540, 541, 0, 542,
	543, 544, 0, 545, 546, 547, 548, 549, 679, 550,
	0, 551, 552, 558, 559, 560, 553, 554, 561, 562,
	563, 564, 565, 0, 567, 568, 566, 569, 570, 571,
	0, 572, 573, 555, 556, 574, 575, 0, 576, 577,
	578, 579, 580, 581, 582, 680, 0, 583, 0, 584,
	585, 586, 588, 557, 589, 594, 595, 681, 590, 591,
	592, 593, 682, 597, 598, 0, 599, 600, 0, 596,
	587, 0, 601, 602, 603, 604, 605, 606, 607, 364,
	608, 0, 609, 683, 684, 685, 686, 0, 618, 0,
	610, 611, 612, 687, 613, 688, 0, 614, 615, 616,
	617, 0, 619, 620, 0, 0, 621, 622, 623, 625,
	626, 624, 627, 0, 628, 0, 0, 629, 630, 631,
	689, 690, 691, 274, 633, 632, 634, 692, 635, 636,
	0, 0, 0, 0, 637, 638, 693, 639, 640, 641,
	280, 282, 281, 283, 284, 285, 286, 0, 287, 288,
	0, 0, 0, 0, 0, 642, 0, 0, 0, 0,
	289, 290, 0, 291, 292, 293, 294, 295, 296, 643,
	644, 0, 297, 645, 298, 646, 0, 647, 299, 300,
	301, 302, 303, 304, 0, 0, 0, 305, 648, 649,
	650, 0, 306, 307, 651, 0, 0, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 0, 330, 331, 332, 0,
	0, 0, 0, 0, 0, 0, 333, 334, 335, 336,
	337, 0, 338, 340, 652, 653, 0, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 350, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 654, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 655, 656, 370, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 657, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 658, 659, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 660, 0, 661, 391, 0,
	392, 393, 394, 395, 396, 662, 663, 664, 480, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 408, 0, 0, 407, 665,
	666, 0, 667, 0, 409, 410, 0, 668, 0, 411,
	412, 413, 0, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 669,
	0, 425, 426, 0, 0, 427, 428, 429, 430, 431,
	432, 435, 0, 0, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 0, 461, 462, 463, 464, 470, 472,
	473, 468, 469, 471, 474, 475, 466, 467, 0, 476,
	465, 0, 0, 0, 477, 478, 0, 670, 479, 671,
	481, 482, 0, 0, 483, 0, 0, 0, 485, 486,
	487, 0, 0, 488, 489, 672, 0, 490, 0, 673,
	491, 492, 484, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 0, 502, 503, 674, 504, 505, 506, 675,
	507, 508, 509, 676, 510, 677, 511, 512, 2208, 513,
	514, 0, 515, 516, 517, 518, 519, 520, 521, 678,
	522, 523, 525, 524, 526, 0, 527, 0, 528, 529,
	530, 0, 0, 0, 0, 0, 531, 0, 533, 534,
	535, 536, 532, 537, 538, 539, 540, 541, 0, 542,
	543, 544, 0, 784, 546, 547, 548, 549, 679, 550,
	0, 551, 552, 558, 559, 560, 553, 554, 783, 562,
	563, 564, 565, 0, 567, 568, 566, 569, 570, 571,
	0, 572, 573, 555, 556, 574, 575, 0, 576, 577,
	578, 579, 580, 581, 582, 680, 0, 583, 0, 584,
	585, 586, 588, 557, 589, 594, 595, 681, 590, 591,
	592, 593, 682, 597, 598, 0, 599, 600, 0, 596,
	587, 0, 601, 602, 603, 604, 605, 606, 607, 364,
	608, 0, 609, 781, 684, 685, 686, 0, 618, 0,
	610, 611, 612, 687, 613, 688, 0, 614, 615, 616,
	617, 0, 619, 620, 0, 0, 621, 622, 623, 625,
	626, 624, 627, 0, 628, 0, 0, 629, 630, 631,
	689, 690, 691, 274, 633, 632, 634, 692, 635, 636,
	0, 0, 0, 0, 637, 638, 693, 639, 640, 641,
	280, 282, 281, 283, 284, 285, 286, 2357, 287, 288,
	0, 0, 0, 0, 0, 642, 0, 0, 0, 0,
	289, 290, 0, 291, 292, 293, 294, 295, 296, 643,
	644, 0, 297, 645, 298, 646, 0, 647, 299, 300,
	301, 302, 303, 304, 0, 0, 0, 305, 648, 649,
	650, 0, 306, 307, 651, 0, 0, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 0, 330, 331, 332, 0,
	0, 0, 0, 0, 0, 0, 333, 334, 335, 336,
	337, 0, 338, 340, 652, 653, 0, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 350, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 654, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 655, 656, 370, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 657, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 658, 659, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 660, 0, 661, 391, 0,
	392, 393, 394, 395, 396, 662, 663, 664, 480, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 408, 0, 0, 407, 665,
	666, 0, 667, 0, 409, 410, 0, 668, 0, 411,
	412, 413, 0, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 669,
	0, 425, 426, 0, 0, 427, 428, 429, 430, 431,
	432, 435, 0, 0, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 0, 461, 462, 463, 464, 470, 472,
	473, 468, 469, 471, 474, 475, 466, 467, 0, 476,
	465, 0, 0, 0, 477, 478, 0, 670, 479, 671,
	481, 482, 0, 0, 483, 0, 0, 0, 485, 486,
	487, 0, 0, 488, 489, 672, 0, 490, 0, 673,
	491, 492, 484, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 0, 502, 503, 674, 504, 505, 506, 675,
	507, 508, 509, 676, 510, 677, 511, 512, 0, 513,
	514, 0, 515, 516, 517, 518, 519, 520, 521, 678,
	522, 523, 525, 524, 526, 0, 527, 0, 528, 529,
	530, 0, 0, 0, 0, 0, 531, 0, 533, 534,
	535, 536, 532, 537, 538, 539, 540, 541, 0, 542,
	543, 544, 0, 545, 546, 547, 548, 549, 679, 550,
	0, 551, 552, 558, 559, 560, 553, 554, 561, 562,
	563, 564, 565, 0, 567, 568, 566, 569, 570, 571,
	0, 572, 573, 555, 556, 574, 575, 0, 576, 577,
	578, 579, 580, 581, 582, 680, 0, 583, 0, 584,
	585, 586, 588, 557, 589, 594, 595, 681, 590, 591,
	592, 593, 682, 597, 598, 0, 599, 600, 0, 596,
	587, 0, 601, 602, 603, 604, 605, 606, 607, 364,
	608, 0, 609, 683, 684, 685, 686, 0, 618, 0,
	610, 611, 612, 687, 613, 688, 0, 614, 615, 616,
	617, 0, 619, 620, 0, 0, 621, 622, 623, 625,
	626, 624, 627, 0, 628, 0, 0, 629, 630, 631,
	689, 690, 691, 0, 633, 632, 634, 692, 635, 636,
	2345, 0, 274, 0, 637, 638, 693, 639, 640, 641,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 280,
	282, 281, 283, 284, 285, 286, 0, 287, 288, 0,
	0, 0, 0, 0, 642, 0, 0, 0, 0, 289,
	290, 0, 291, 292, 293, 294, 295, 296, 643, 644,
	0, 297, 645, 298, 646, 0, 647, 299, 300, 301,
	302, 303, 304, 0, 0, 0, 305, 648, 649, 650,
	0, 306, 307, 651, 0, 0, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	0, 327, 328, 329, 0, 330, 331, 332, 0, 0,
	0, 0, 0, 0, 0, 333, 334, 335, 336, 337,
	0, 338, 340, 652, 653, 0, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	350, 351, 0, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 654, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 655, 656, 370, 0, 0, 0, 0,
	0, 0, 0, 371, 372, 373, 657, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 658, 659, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 660, 0, 661, 391, 0, 392,
	393, 394, 395, 396, 662, 663, 664, 480, 0, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	0, 404, 405, 406, 408, 0, 0, 407, 665, 666,
	0, 667, 0, 409, 410, 0, 668, 0, 411, 412,
	413, 0, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 0, 421, 423, 422, 0, 424, 669, 0,
	425, 426, 0, 0, 427, 428, 429, 430, 431, 432,
	435, 0, 0, 433, 434, 436, 437, 0, 438, 439,
	441, 444, 440, 442, 443, 445, 458, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 460,
	0, 459, 0, 461, 462, 463, 464, 470, 472, 473,
	468, 469, 471, 474, 475, 466, 467, 0, 476, 465,
	0, 0, 0, 477, 478, 0, 670, 479, 671, 481,
	482, 0, 0, 483, 0, 0, 0, 485, 486, 487,
	0, 0, 488, 489, 672, 0, 490, 0, 673, 491,
	492, 484, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 0, 502, 503, 674, 504, 505, 506, 675, 507,
	508, 509, 676, 510, 677, 511, 512, 0, 513, 514,
	0, 515, 516, 517, 518, 519, 520, 521, 678, 522,
	523, 525, 524, 526, 0, 527, 0, 528, 529, 530,
	0, 0, 0, 0, 0, 531, 0, 533, 534, 535,
	536, 532, 537, 538, 539, 540, 541, 0, 542, 543,
	544, 0, 545, 546, 547, 548, 549, 679, 550, 0,
	551, 552, 558, 559, 560, 553, 554, 561, 562, 563,
	564, 565, 0, 567, 568, 566, 569, 570, 571, 0,
	572, 573, 555, 556, 574, 575, 0, 576, 577, 578,
	579, 580, 581, 582, 680, 0, 583, 0, 584, 585,
	586, 588, 557, 589, 594, 595, 681, 590, 591, 592,
	593, 682, 597, 598, 0, 599, 600, 0, 596, 587,
	0, 601, 602, 603, 604, 605, 606, 607, 364, 608,
	0, 609, 683, 684, 685, 686, 0, 618, 0, 610,
	611, 612, 687, 613, 688, 0, 614, 615, 616, 617,
	0, 619, 620, 0, 0, 621, 622, 623, 625, 626,
	624, 627, 0, 628, 0, 0, 629, 630, 631, 689,
	690, 691, 0, 633, 632, 634, 692, 635, 636, 2104,
	0, 274, 0, 637, 638, 693, 639, 640, 641, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 280, 282,
	281, 283, 284, 285, 286, 0, 287, 288, 0, 0,
	0, 0, 0, 642, 0, 0, 0, 0, 289, 290,
	0, 291, 292, 293, 294, 295, 296, 643, 644, 0,
	297, 645, 298, 646, 0, 647, 299, 300, 301, 302,
	303, 304, 0, 0, 0, 305, 648, 649, 650, 0,
	306, 307, 651, 0, 0, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 0, 316, 317, 318, 315, 319,
	0, 320, 0, 321, 322, 323, 324, 325, 326, 0,
	327, 328, 329, 0, 330, 331, 332, 0, 0, 0,
	0, 0, 0, 0, 333, 334, 335, 336, 337, 0,
	338, 340, 652, 653, 0, 343, 339, 341, 0, 344,
	342, 345, 0, 346, 347, 348, 0, 0, 349, 350,
	351, 0, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 654, 359, 360, 361, 363, 365, 362, 366, 367,
	368, 369, 655, 656, 370, 0, 0, 0, 0, 0,
	0, 0, 371, 372, 373, 657, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	658, 659, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 660, 0, 661, 391, 0, 392, 393,
	394, 395, 396, 662, 663, 664, 480, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 0,
	404, 405, 406, 408, 0, 0, 407, 665, 666, 0,
	667, 0, 409, 410, 0, 668, 0, 411, 412, 413,
	0, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 0, 421, 423, 422, 0, 424, 669, 0, 425,
	426, 0, 0, 427, 428, 429, 430, 431, 432, 435,
	0, 0, 433, 434, 436, 437, 0, 438, 439, 441,
	444, 440, 442, 443, 445, 458, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 460, 0,
	459, 0, 461, 462, 463, 464, 470, 472, 473, 468,
	469, 471, 474, 475, 466, 467, 0, 476, 465, 0,
	0, 0, 477, 478, 0, 670, 479, 671, 481, 482,
	0, 0, 483, 0, 0, 0, 485, 486, 487, 0,
	0, 488, 489, 672, 0, 490, 0, 673, 491, 492,
	484, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	0, 502, 503, 674, 504, 505, 506, 675, 507, 508,
	509, 676, 510, 677, 511, 512, 0, 513, 514, 0,
	515, 516, 517, 518, 519, 520, 521, 678, 522, 523,
	525, 524, 526, 0, 527, 0, 528, 529, 530, 0,
	0, 0, 0, 0, 531, 0, 533, 534, 535, 536,
	532, 537, 538, 539, 540, 541, 0, 542, 543, 544,
	0, 545, 546, 547, 548, 549, 679, 550, 0, 551,
	552, 558, 559, 560, 553, 554, 561, 562, 563, 564,
	565, 0, 567, 568, 566, 569, 570, 571, 0, 572,
	573, 555, 556, 574, 575, 0, 576, 577, 578, 579,
	580, 581, 582, 680, 0, 583, 0, 584, 585, 586,
	588, 557, 589, 594, 595, 681, 590, 591, 592, 593,
	682, 597, 598, 0, 599, 600, 0, 596, 587, 0,
	601, 602, 603, 604, 605, 606, 607, 364, 608, 0,
	609, 683, 684, 685, 686, 0, 618, 0, 610, 611,
	612, 687, 613, 688, 0, 614, 615, 616, 617, 0,
	619, 620, 0, 0, 621, 622, 623, 625, 626, 624,
	627, 0, 628, 0, 0, 629, 630, 631, 689, 690,
	691, 0, 633, 632, 634, 692, 635, 636, 2071, 0,
	274, 0, 637, 638, 693, 639, 640, 641, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 280, 282, 281,
	283, 284, 285, 286, 0, 287, 288, 0, 0, 0,
	0, 0, 642, 0, 0, 0, 0, 289, 290, 0,
	291, 292, 293, 294, 295, 296, 643, 644, 0, 297,
	645, 298, 646, 0, 647, 299, 300, 301, 302, 303,
	304, 0, 0, 0, 305, 648, 649, 650, 0, 306,
	307, 651, 0, 0, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 0, 330, 331, 332, 0, 0, 0, 0,
	0, 0, 0, 333, 334, 335, 336, 337, 0, 338,
	340, 652, 653, 0, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 350, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	654, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 655, 656, 370, 0, 0, 0, 0, 0, 0,
	0, 371, 372, 373, 657, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 658,
	659, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 660, 0, 661, 391, 0, 392, 393, 394,
	395, 396, 662, 663, 664, 480, 0, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 0, 404,
	405, 406, 408, 0, 0, 407, 665, 666, 0, 667,
	0, 409, 410, 0, 668, 0, 411, 412, 413, 0,
	414, 0, 0, 0, 415, 416, 417, 418, 419, 420,
	0, 421, 423, 422, 0, 424, 669, 0, 425, 426,
	0, 0, 427, 428, 429, 430, 431, 432, 435, 0,
	0, 433, 434, 436, 437, 0, 438, 439, 441, 444,
	440, 442, 443, 445, 458, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 460, 0, 459,
	0, 461, 462, 463, 464, 470, 472, 473, 468, 469,
	471, 474, 475, 466, 467, 0, 476, 465, 0, 0,
	0, 477, 478, 0, 670, 479, 671, 481, 482, 0,
	0, 483, 0, 0, 0, 485, 486, 487, 0, 0,
	488, 489, 672, 0, 490, 0, 673, 491, 492, 484,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 0,
	502, 503, 674, 504, 505, 506, 675, 507, 508, 509,
	676, 510, 677, 511, 512, 0, 513, 514, 0, 515,
	516, 517, 518, 519, 520, 521, 678, 522, 523, 525,
	524, 526, 0, 527, 0, 528, 529, 530, 0, 0,
	0, 0, 0, 531, 0, 533, 534, 535, 536, 532,
	537, 538, 539, 540, 541, 0, 542, 543, 544, 0,
	545, 546, 547, 548, 549, 679, 550, 0, 551, 552,
	558, 559, 560, 553, 554, 561, 562, 563, 564, 565,
	0, 567, 568, 566, 569, 570, 571, 0, 572, 573,
	555, 556, 574, 575, 0, 576, 577, 578, 579, 580,
	581, 582, 680, 0, 583, 0, 584, 585, 586, 588,
	557, 589, 594, 595, 681, 590, 591, 592, 593, 682,
	597, 598, 0, 599, 600, 0, 596, 587, 0, 601,
	602, 603, 604, 605, 606, 607, 364, 608, 0, 609,
	683, 684, 685, 686, 0, 618, 0, 610, 611, 612,
	687, 613, 688, 0, 614, 615, 616, 617, 0, 619,
	620, 0, 0, 621, 622, 623, 625, 626, 624, 627,
	0, 628, 0, 0, 629, 630, 631, 689, 690, 691,
	0, 633, 632, 634, 692, 635, 636, 1658, 0, 274,
	0, 637, 638, 693, 639, 640, 641, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 280, 282, 281, 283,
	284, 285, 286, 0, 287, 288, 0, 0, 0, 0,
	0, 642, 0, 0, 0, 0, 289, 290, 0, 291,
	292, 293, 294, 295, 296, 643, 644, 0, 297, 645,
	298, 646, 0, 647, 299, 300, 301, 302, 303, 304,
	0, 0, 0, 305, 648, 649, 650, 0, 306, 307,
	651, 0, 0, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 0, 330, 331, 332, 0, 0, 0, 0, 0,
	0, 0, 333, 334, 335, 336, 337, 0, 338, 340,
	652, 653, 0, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 350, 351, 0,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 654,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	655, 656, 370, 0, 0, 0, 0, 0, 0, 0,
	371, 372, 373, 657, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 658, 659,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 660, 0, 661, 391, 0, 392, 393, 394, 395,
	396, 662, 663, 664, 480, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 0, 404, 405,
	406, 408, 0, 0, 407, 665, 666, 0, 667, 0,
	409, 410, 0, 668, 0, 411, 412, 413, 0, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 669, 0, 425, 426, 0,
	0, 427, 428, 429, 430, 431, 432, 435, 0, 0,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 0,
	461, 462, 463, 464, 470, 472, 473, 468, 469, 471,
	474, 475, 466, 467, 0, 476, 465, 0, 0, 0,
	477, 478, 0, 670, 479, 671, 481, 482, 0, 0,
	483, 0, 0, 0, 485, 486, 487, 0, 0, 488,
	489, 672, 0, 490, 0, 673, 491, 492, 484, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 0, 502,
	503, 674, 504, 505, 506, 675, 507, 508, 509, 676,
	510, 677, 511, 512, 0, 513, 514, 0, 515, 516,
	517, 518, 519, 520, 521, 678, 522, 523, 525, 524,
	526, 0, 527, 0, 528, 529, 530, 0, 0, 0,
	0, 0, 531, 0, 533, 534, 535, 536, 532, 537,
	538, 539, 540, 541, 0, 542, 543, 544, 0, 545,
	546, 547, 548, 549, 679, 550, 0, 551, 552, 558,
	559, 560, 553, 554, 561, 562, 563, 564, 565, 0,
	567, 568, 566, 569, 570, 571, 0, 572, 573, 555,
	556, 574, 575, 0, 576, 577, 578, 579, 580, 581,
	582, 680, 0, 583, 0, 584, 585, 586, 588, 557,
	589, 594, 595, 681, 590, 591, 592, 593, 682, 597,
	598, 0, 599, 600, 0, 596, 587, 0, 601, 602,
	603, 604, 605, 606, 607, 364, 608, 0, 609, 683,
	684, 685, 686, 0, 618, 0, 610, 611, 612, 687,
	613, 688, 0, 614, 615, 616, 617, 0, 619, 620,
	0, 0, 621, 622, 623, 625, 626, 624, 627, 0,
	628, 0, 0, 629, 630, 631, 689, 690, 691, 0,
	633, 632, 634, 692, 635, 636, 1651, 0, 274, 0,
	637, 638, 693, 639, 640, 641, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 280, 282, 281, 283, 284,
	285, 286, 0, 287, 288, 0, 0, 0, 0, 0,
	642, 0, 0, 0, 0, 289, 290, 0, 291, 292,
	293, 294, 295, 296, 643, 644, 0, 297, 645, 298,
	646, 0, 647, 299, 300, 301, 302, 303, 304, 0,
	0, 0, 305, 648, 649, 650, 0, 306, 307, 651,
	0, 0, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	0, 330, 331, 332, 0, 0, 0, 0, 0, 0,
	0, 333, 334, 335, 336, 337, 0, 338, 340, 652,
	653, 0, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 350, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 654, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 655,
	656, 370, 0, 0, 0, 0, 0, 0, 0, 371,
	372, 373, 657, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 658, 659, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	660, 0, 661, 391, 0, 392, 393, 394, 395, 396,
	662, 663, 664, 480, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 0, 404, 405, 406,
	408, 0, 0, 407, 665, 666, 0, 667, 0, 409,
	410, 0, 668, 0, 411, 412, 413, 0, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 0, 421,
	423, 422, 0, 424, 669, 0, 425, 426, 0, 0,
	427, 428, 429, 430, 431, 432, 435, 0, 0, 433,
	434, 436, 437, 0, 438, 439, 441, 444, 440, 442,
	443, 445, 458, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 0, 459, 0, 461,
	462, 463, 464, 470, 472, 473, 468, 469, 471, 474,
	475, 466, 467, 0, 476, 465, 0, 0, 0, 477,
	478, 0, 670, 479, 671, 481, 482, 0, 0, 483,
	0, 0, 0, 485, 486, 487, 0, 0, 488, 489,
	672, 0, 490, 0, 673, 491, 492, 484, 493, 494,
	495, 496, 497, 498, 499, 500, 501, 0, 502, 503,
	674, 504, 505, 506, 675, 507, 508, 509, 676, 510,
	677, 511, 512, 0, 513, 514, 0, 515, 516, 517,
	518, 519, 520, 521, 678, 522, 523, 525, 524, 526,
	0, 527, 0, 528, 529, 530, 0, 0, 0, 0,
	0, 531, 0, 533, 534, 535, 536, 532, 537, 538,
	539, 540, 541, 0, 542, 543, 544, 0, 545, 546,
	547, 548, 549, 679, 550, 0, 551, 552, 558, 559,
	560, 553, 554, 561, 562, 563, 564, 565, 0, 567,
	568, 566, 569, 570, 571, 0, 572, 573, 555, 556,
	574, 575, 0, 576, 577, 578, 579, 580, 581, 582,
	680, 0, 583, 0, 584, 585, 586, 588, 557, 589,
	594, 595, 681, 590, 591, 592, 593, 682, 597, 598,
	0, 599, 600, 0, 596, 587, 0, 601, 602, 603,
	604, 605, 606, 607, 364, 608, 0, 609, 683, 684,
	685, 686, 0, 618, 0, 610, 611, 612, 687, 613,
	688, 0, 614, 615, 616, 617, 0, 619, 620, 0,
	0, 621, 622, 623, 625, 626, 624, 627, 0, 628,
	0, 0, 629, 630, 631, 689, 690, 691, 0, 633,
	632, 634, 692, 635, 636, 775, 0, 274, 0, 637,
	638, 693, 639, 640, 641, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 280, 282, 281, 283, 284, 285,
	286, 0, 287, 288, 0, 0, 0, 0, 0, 642,
	0, 0, 0, 0, 289, 290, 0, 291, 292, 293,
	294, 295, 296, 643, 644, 0, 297, 645, 298, 646,
	0, 647, 299, 300, 301, 302, 303, 304, 0, 0,
	0, 305, 648, 649, 650, 0, 306, 771, 651, 0,
	0, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 0,
	330, 331, 332, 0, 0, 0, 0, 0, 0, 0,
	333, 334, 335, 336, 337, 0, 338, 340, 652, 653,
	0, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 350, 351, 0, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 654, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 655, 656,
	370, 0, 0, 0, 0, 0, 0, 0, 371, 372,
	373, 657, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 658, 659, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 660,
	0, 661, 391, 0, 392, 393, 394, 395, 396, 662,
	663, 664, 480, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 0, 404, 405, 406, 408,
	0, 0, 407, 665, 666, 0, 667, 0, 409, 410,
	0, 668, 0, 411, 412, 413, 0, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 0, 424, 669, 0, 425, 426, 0, 0, 427,
	428, 429, 430, 431, 776, 435, 0, 0, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 785, 0, 461, 462,
	463, 464, 470, 472, 473, 468, 469, 471, 474, 475,
	466, 467, 0, 476, 465, 0, 0, 0, 477, 478,
	0, 670, 479, 671, 481, 482, 0, 0, 483, 0,
	0, 0, 485, 486, 487, 0, 0, 488, 489, 672,
	0, 490, 0, 673, 491, 492, 484, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 0, 502, 503, 674,
	504, 505, 506, 675, 507, 508, 509, 676, 510, 677,
	511, 512, 0, 513, 514, 0, 515, 516, 517, 518,
	519, 520, 521, 678, 522, 523, 525, 524, 526, 0,
	527, 0, 528, 529, 530, 0, 0, 0, 0, 0,
	531, 0, 533, 534, 535, 536, 532, 537, 538, 539,
	540, 541, 0, 542, 543, 544, 0, 784, 546, 547,
	548, 549, 679, 550, 0, 551, 552, 558, 559, 560,
	553, 554, 783, 562, 563, 564, 565, 0, 567, 568,
	566, 569, 1636, 571, 0, 572, 573, 555, 556, 574,
	575, 0, 576, 577, 578, 579, 580, 581, 582, 680,
	0, 583, 0, 584, 585, 586, 588, 557, 589, 594,
	595, 681, 590, 591, 592, 593, 682, 597, 598, 0,
	599, 600, 0, 596, 587, 0, 601, 602, 603, 604,
	605, 606, 607, 364, 608, 0, 609, 781, 684, 685,
	686, 0, 618, 0, 610, 611, 612, 687, 613, 688,
	0, 614, 615, 616, 617, 0, 619, 620, 0, 0,
	621, 622, 623, 625, 626, 624, 627, 0, 628, 0,
	0, 629, 630, 631, 689, 690, 691, 0, 633, 632,
	634, 692, 635, 636, 1609, 0, 274, 0, 637, 638,
	693, 639, 640, 641, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 280, 282, 281, 283, 284, 285, 286,
	0, 287, 288, 0, 0, 0, 0, 0, 642, 0,
	0, 0, 0, 289, 290, 0, 291, 292, 293, 294,
	295, 296, 643, 644, 0, 297, 645, 298, 646, 0,
	647, 299, 300, 301, 302, 303, 304, 0, 0, 0,
	305, 648, 649, 650, 0, 306, 307, 651, 0, 0,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 0, 330,
	331, 332, 0, 0, 0, 0, 0, 0, 0, 333,
	334, 335, 336, 337, 0, 338, 340, 652, 653, 0,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 350, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 654, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 655, 656, 370,
	0, 0, 0, 0, 0, 0, 0, 371, 372, 373,
	657, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 658, 659, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 660, 0,
	661, 391, 0, 392, 393, 394, 395, 396, 1608, 663,
	664, 480, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 0, 404, 405, 406, 408, 0,
	0, 407, 665, 666, 0, 667, 0, 409, 410, 0,
	668, 0, 411, 412, 413, 0, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 0, 421, 423, 422,
	0, 424, 669, 0, 425, 426, 0, 0, 427, 428,
	429, 430, 431, 432, 435, 0, 0, 433, 434, 436,
	437, 0, 438, 439, 441, 444, 440, 442, 443, 445,
	458, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 459, 0, 461, 462, 463,
	464, 470, 472, 473, 468, 469, 471, 474, 475, 466,
	467, 0, 476, 465, 0, 0, 0, 477, 478, 0,
	670, 479, 671, 481, 482, 0, 0, 483, 0, 0,
	0, 485, 486, 487, 0, 0, 488, 489, 672, 0,
	490, 0, 673, 491, 492, 484, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 0, 502, 503, 674, 504,
	505, 506, 675, 507, 508, 509, 676, 510, 677, 511,
	512, 0, 513, 514, 0, 515, 516, 517, 518, 519,
	520, 521, 678, 522, 523, 525, 524, 526, 0, 527,
	0, 528, 529, 530, 0, 0, 0, 0, 0, 531,
	0, 533, 534, 535, 536, 532, 537, 538, 539, 540,
	541, 0, 542, 543, 544, 0, 545, 546, 547, 548,
	549, 679, 550, 0, 551, 552, 558, 559, 560, 553,
	554, 561, 562, 563, 564, 565, 0, 567, 568, 566,
	569, 570, 571, 0, 572, 573, 555, 556, 574, 575,
	0, 576, 577, 578, 579, 580, 581, 582, 680, 0,
	583, 0, 584, 585, 586, 588, 557, 589, 594, 595,
	681, 590, 591, 592, 593, 682, 597, 598, 0, 599,
	600, 0, 596, 587, 0, 601, 602, 603, 604, 605,
	606, 607, 364, 608, 0, 609, 683, 684, 685, 686,
	0, 618, 0, 610, 611, 612, 687, 613, 688, 0,
	614, 615, 616, 617, 0, 619, 620, 0, 0, 621,
	622, 623, 625, 626, 624, 627, 0, 628, 0, 0,
	629, 630, 631, 689, 690, 691, 0, 633, 632, 634,
	692, 635, 636, 1593, 0, 274, 0, 637, 638, 693,
	639, 640, 641, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 280, 282, 281, 283, 284, 285, 286, 0,
	287, 288, 0, 0, 0, 0, 0, 642, 0, 0,
	0, 0, 289, 290, 0, 291, 292, 293, 294, 295,
	296, 643, 644, 0, 297, 645, 298, 646, 0, 647,
	299, 300, 301, 302, 303, 304, 0, 0, 0, 305,
	648, 649, 650, 0, 306, 307, 651, 0, 0, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 0, 330, 331,
	332, 0, 0, 0, 0, 0, 0, 0, 333, 334,
	335, 336, 337, 0, 338, 340, 652, 653, 0, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 350, 351, 0, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 654, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 655, 656, 370, 0,
	0, 0, 0, 0, 0, 0, 371, 372, 373, 657,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 658, 659, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 660, 0, 661,
	391, 0, 392, 393, 394, 395, 396, 1591, 663, 664,
	480, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 0, 404, 405, 406, 408, 0, 0,
	407, 665, 666, 0, 667, 0, 409, 410, 0, 668,
	0, 411, 412, 413, 0, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 669, 0, 425, 426, 0, 0, 427, 428, 429,
	430, 431, 432, 435, 0, 0, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 0, 461, 462, 463, 464,
	470, 472, 473, 468, 469, 471, 474, 475, 466, 467,
	0, 476, 465, 0, 0, 0, 477, 478, 0, 670,
	479, 671, 481, 482, 0, 0, 483, 0, 0, 0,
	485, 486, 487, 0, 0, 488, 489, 672, 0, 490,
	0, 673, 491, 492, 484, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 0, 502, 503, 674, 504, 505,
	506, 675, 507, 508, 509, 676, 510, 677, 511, 512,
	0, 513, 514, 0, 515, 516, 517, 518, 519, 520,
	521, 678, 522, 523, 525, 524, 526, 0, 527, 0,
	528, 529, 530, 0, 0, 0, 0, 0, 531, 0,
	533, 534, 535, 536, 532, 537, 538, 539, 540, 541,
	0, 542, 543, 544, 0, 545, 546, 547, 548, 549,
	679, 550, 0, 551, 552, 558, 559, 560, 553, 554,
	561, 562, 563, 564, 565, 0, 567, 568, 566, 569,
	570, 571, 0, 572, 573, 555, 556, 574, 575, 0,
	576, 577, 578, 579, 580, 581, 582, 680, 0, 583,
	0, 584, 585, 586, 588, 557, 589, 594, 595, 681,
	590, 591, 592, 593, 682, 597, 598, 0, 599, 600,
	0, 596, 587, 0, 601, 602, 603, 604, 605, 606,
	607, 364, 608, 0, 609, 683, 684, 685, 686, 0,
	618, 0, 610, 611, 612, 687, 613, 688, 0, 614,
	615, 616, 617, 0, 619, 620, 0, 0, 621, 622,
	623, 625, 626, 624, 627, 0, 628, 0, 0, 629,
	630, 631, 689, 690, 691, 0, 633, 632, 634, 692,
	635, 636, 1586, 0, 274, 0, 637, 638, 693, 639,
	640, 641, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 280, 282, 281, 283, 284, 285, 286, 0, 287,
	288, 0, 0, 0, 0, 0, 642, 0, 0, 0,
	0, 289, 290, 0, 291, 292, 293, 294, 295, 296,
	643, 644, 0, 297, 645, 298, 646, 0, 647, 299,
	300, 301, 302, 303, 304, 0, 0, 0, 305, 648,
	649, 650, 0, 306, 307, 651, 0, 0, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	325, 326, 0, 327, 328, 329, 0, 330, 331, 332,
	0, 0, 0, 0, 0, 0, 0, 333, 334, 335,
	336, 337, 0, 338, 340, 652, 653, 0, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 350, 351, 0, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 654, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 655, 656, 370, 0, 0,
	0, 0, 0, 0, 0, 371, 372, 373, 657, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 658, 659, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 660, 0, 661, 391,
	0, 392, 393, 394, 395, 396, 662, 663, 664, 480,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 0, 404, 405, 406, 408, 0, 0, 407,
	665, 666, 0, 667, 0, 409, 410, 0, 668, 0,
	411, 412, 413, 0, 414, 0, 0, 0, 415, 416,
	417, 418, 419, 420, 0, 421, 423, 422, 0, 424,
	669, 0, 425, 426, 0, 0, 427, 428, 429, 430,
	431, 432, 435, 0, 0, 433, 434, 436, 437, 0,
	438, 439, 441, 444, 440, 442, 443, 445, 458, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 460, 0, 459, 0, 461, 462, 463, 464, 470,
	472, 473, 468, 469, 471, 474, 475, 466, 467, 0,
	476, 465, 0, 0, 0, 477, 478, 0, 670, 479,
	671, 481, 482, 0, 0, 483, 0, 0, 0, 485,
	486, 487, 0, 0, 488, 489, 672, 0, 490, 0,
	673, 491, 492, 484, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 0, 502, 503, 674, 504, 505, 506,
	675, 507, 508, 509, 676, 510, 677, 511, 512, 0,
	513, 514, 0, 515, 516, 517, 518, 519, 520, 521,
	678, 522, 523, 525, 524, 526, 0, 527, 0, 528,
	529, 530, 0, 0, 0, 0, 0, 531, 0, 533,
	534, 535, 536, 532, 537, 538, 539, 540, 541, 0,
	542, 543, 544, 0, 545, 546, 547, 548, 549, 679,
	550, 0, 551, 552, 558, 559, 560, 553, 554, 561,
	562, 563, 564, 565, 0, 567, 568, 566, 569, 570,
	571, 0, 572, 573, 555, 556, 574, 575, 0, 576,
	577, 578, 579, 580, 581, 582, 680, 0, 583, 0,
	584, 585, 586, 588, 557, 589, 594, 595, 681, 590,
	591, 592, 593, 682, 597, 598, 0, 599, 600, 0,
	596, 587, 0, 601, 602, 603, 604, 605, 606, 607,
	364, 608, 0, 609, 683, 684, 685, 686, 0, 618,
	0, 610, 611, 612, 687, 613, 688, 0, 614, 615,
	616, 617, 0, 619, 620, 0, 0, 621, 622, 623,
	625, 626, 624, 627, 0, 628, 0, 0, 629, 630,
	631, 689, 690, 691, 0, 633, 632, 634, 692, 635,
	636, 1563, 0, 274, 0, 637, 638, 693, 639, 640,
	641, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	280, 282, 281, 283, 284, 285, 286, 0, 287, 288,
	0, 0, 0, 0, 0, 642, 0, 0, 0, 0,
	289, 290, 0, 291, 292, 293, 294, 295, 296, 643,
	644, 0, 297, 645, 298, 646, 0, 647, 299, 300,
	301, 302, 303, 304, 0, 0, 0, 305, 648, 649,
	650, 0, 306, 307, 651, 0, 0, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 0, 330, 331, 332, 0,
	0, 0, 0, 0, 0, 0, 333, 334, 335, 336,
	337, 0, 338, 340, 652, 653, 0, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 350, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 654, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 655, 656, 370, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 657, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 658, 659, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 660, 0, 661, 391, 0,
	392, 393, 394, 395, 396, 1561, 663, 664, 480, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 408, 0, 0, 407, 665,
	666, 0, 667, 0, 409, 410, 0, 668, 0, 411,
	412, 413, 0, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 669,
	0, 425, 426, 0, 0, 427, 428, 429, 430, 431,
	432, 435, 0, 0, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 0, 461, 462, 463, 464, 470, 472,
	473, 468, 469, 471, 474, 475, 466, 467, 0, 476,
	465, 0, 0, 0, 477, 478, 0, 670, 479, 671,
	481, 482, 0, 0, 483, 0, 0, 0, 485, 486,
	487, 0, 0, 488, 489, 672, 0, 490, 0, 673,
	491, 492, 484, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 0, 502, 503, 674, 504, 505, 506, 675,
	507, 508, 509, 676, 510, 677, 511, 512, 0, 513,
	514, 0, 515, 516, 517, 518, 519, 520, 521, 678,
	522, 523, 525, 524, 526, 0, 527, 0, 528, 529,
	530, 0, 0, 0, 0, 0, 531, 0, 533, 534,
	535, 536, 532, 537, 538, 539, 540, 541, 0, 542,
	543, 544, 0, 545, 546, 547, 548, 549, 679, 550,
	0, 551, 552, 558, 559, 560, 553, 554, 561, 562,
	563, 564, 565, 0, 567, 568, 566, 569, 570, 571,
	0, 572, 573, 555, 556, 574, 575, 0, 576, 577,
	578, 579, 580, 581, 582, 680, 0, 583, 0, 584,
	585, 586, 588, 557, 589, 594, 595, 681, 590, 591,
	592, 593, 682, 597, 598, 0, 599, 600, 0, 596,
	587, 0, 601, 602, 603, 604, 605, 606, 607, 364,
	608, 0, 609, 683, 684, 685, 686, 0, 618, 0,
	610, 611, 612, 687, 613, 688, 0, 614, 615, 616,
	617, 0, 619, 620, 0, 0, 621, 622, 623, 625,
	626, 624, 627, 0, 628, 0, 0, 629, 630, 631,
	689, 690, 691, 0, 633, 632, 634, 692, 635, 636,
	1556, 0, 274, 0, 637, 638, 693, 639, 640, 641,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 280,
	282, 281, 283, 284, 285, 286, 0, 287, 288, 0,
	0, 0, 0, 0, 642, 0, 0, 0, 0, 289,
	290, 0, 291, 292, 293, 294, 295, 296, 643, 644,
	0, 297, 645, 298, 646, 0, 647, 299, 300, 301,
	302, 303, 304, 0, 0, 0, 305, 648, 649, 650,
	0, 306, 307, 651, 0, 0, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	0, 327, 328, 329, 0, 330, 331, 332, 0, 0,
	0, 0, 0, 0, 0, 333, 334, 335, 336, 337,
	0, 338, 340, 652, 653, 0, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	350, 351, 0, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 654, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 655, 656, 370, 0, 0, 0, 0,
	0, 0, 0, 371, 372, 373, 657, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 658, 659, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 660, 0, 661, 391, 0, 392,
	393, 394, 395, 396, 662, 663, 664, 480, 0, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	0, 404, 405, 406, 408, 0, 0, 407, 665, 666,
	0, 667, 0, 409, 410, 0, 668, 0, 411, 412,
	413, 0, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 0, 421, 423, 422, 0, 424, 669, 0,
	425, 426, 0, 0, 427, 428, 429, 430, 431, 432,
	435, 0, 0, 433, 434, 436, 437, 0, 438, 439,
	441, 444, 440, 442, 443, 445, 458, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 460,
	0, 459, 0, 461, 462, 463, 464, 470, 472, 473,
	468, 469, 471, 474, 475, 466, 467, 0, 476, 465,
	0, 0, 0, 477, 478, 0, 670, 479, 671, 481,
	482, 0, 0, 483, 0, 0, 0, 485, 486, 487,
	0, 0, 488, 489, 672, 0, 490, 0, 673, 491,
	492, 484, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 0, 502, 503, 674, 504, 505, 506, 675, 507,
	508, 509, 676, 510, 677, 511, 512, 0, 513, 514,
	0, 515, 516, 517, 518, 519, 520, 521, 678, 522,
	523, 525, 524, 526, 0, 527, 0, 528, 529, 530,
	0, 0, 0, 0, 0, 531, 0, 533, 534, 535,
	536, 532, 537, 538, 539, 540, 541, 0, 542, 543,
	544, 0, 545, 546, 547, 548, 549, 679, 550, 0,
	551, 552, 558, 559, 560, 553, 554, 561, 562, 563,
	564, 565, 0, 567, 568, 566, 569, 570, 571, 0,
	572, 573, 555, 556, 574, 575, 0, 576, 577, 578,
	579, 580, 581, 582, 680, 0, 583, 0, 584, 585,
	586, 588, 557, 589, 594, 595, 681, 590, 591, 592,
	593, 682, 597, 598, 0, 599, 600, 0, 596, 587,
	0, 601, 602, 603, 604, 605, 606, 607, 364, 608,
	0, 609, 683, 684, 685, 686, 0, 618, 0, 610,
	611, 612, 687, 613, 688, 0, 614, 615, 616, 617,
	0, 619, 620, 0, 0, 621, 622, 623, 625, 626,
	624, 627, 0, 628, 0, 0, 629, 630, 631, 689,
	690, 691, 0, 633, 632, 634, 692, 635, 636, 1518,
	0, 274, 0, 637, 638, 693, 639, 640, 641, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 280, 282,
	281, 283, 284, 285, 286, 0, 287, 288, 0, 0,
	0, 0, 0, 642, 0, 0, 0, 0, 289, 290,
	0, 291, 292, 293, 294, 295, 296, 643, 644, 0,
	297, 645, 298, 646, 0, 647, 299, 300, 301, 302,
	303, 304, 0, 0, 0, 305, 648, 649, 650, 0,
	306, 307, 651, 0, 0, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 0, 316, 317, 318, 315, 319,
	0, 320, 0, 321, 322, 323, 324, 325, 326, 0,
	327, 328, 329, 0, 330, 331, 332, 0, 0, 0,
	0, 0, 0, 0, 333, 334, 335, 336, 337, 0,
	338, 340, 652, 653, 0, 343, 339, 341, 0, 344,
	342, 345, 0, 346, 347, 348, 0, 0, 349, 350,
	351, 0, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 654, 359, 360, 361, 363, 365, 362, 366, 367,
	368, 369, 655, 656, 370, 0, 0, 0, 0, 0,
	0, 0, 371, 372, 373, 657, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	658, 659, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 660, 0, 661, 391, 0, 392, 393,
	394, 395, 396, 662, 663, 664, 480, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 0,
	404, 405, 406, 408, 0, 0, 407, 665, 666, 0,
	667, 0, 409, 410, 0, 668, 0, 411, 412, 413,
	0, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 0, 421, 423, 422, 0, 424, 669, 0, 425,
	426, 0, 0, 427, 428, 429, 430, 431, 432, 435,
	0, 0, 433, 434, 436, 437, 0, 438, 439, 441,
	444, 440, 442, 443, 445, 458, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 460, 0,
	459, 0, 461, 462, 463, 464, 470, 472, 473, 468,
	469, 471, 474, 475, 466, 467, 0, 476, 465, 0,
	0, 0, 477, 478, 0, 670, 479, 671, 481, 482,
	0, 0, 483, 0, 0, 0, 485, 486, 487, 0,
	0, 488, 489, 672, 0, 490, 0, 673, 491, 492,
	484, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	0, 502, 503, 674, 504, 505, 506, 675, 507, 508,
	509, 676, 510, 677, 511, 512, 0, 513, 514, 0,
	515, 516, 517, 518, 519, 520, 521, 678, 522, 523,
	525, 524, 526, 0, 527, 0, 528, 529, 530, 0,
	0, 0, 0, 0, 531, 0, 533, 534, 535, 536,
	532, 537, 538, 539, 540, 541, 0, 542, 543, 544,
	0, 545, 546, 547, 548, 549, 679, 550, 0, 551,
	552, 558, 559, 560, 553, 554, 561, 562, 563, 564,
	565, 0, 567, 568, 566, 569, 570, 571, 0, 572,
	573, 555, 556, 574, 575, 0, 576, 577, 578, 579,
	580, 581, 582, 680, 0, 583, 0, 584, 585, 586,
	588, 557, 589, 594, 595, 681, 590, 591, 592, 593,
	682, 597, 598, 0, 599, 600, 0, 596, 587, 0,
	601, 602, 603, 604, 605, 606, 607, 364, 608, 0,
	609, 683, 684, 685, 686, 0, 618, 0, 610, 611,
	612, 687, 613, 688, 0, 614, 615, 616, 617, 0,
	619, 620, 0, 0, 621, 622, 623, 625, 626, 624,
	627, 0, 628, 0, 0, 629, 630, 631, 689, 690,
	691, 0, 633, 632, 634, 692, 635, 636, 1501, 0,
	274, 0, 637, 638, 693, 639, 640, 641, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 280, 282, 281,
	283, 284, 285, 286, 0, 287, 288, 0, 0, 0,
	0, 0, 642, 0, 0, 0, 0, 289, 290, 0,
	291, 292, 293, 294, 295, 296, 643, 644, 0, 297,
	645, 298, 646, 0, 647, 299, 300, 301, 302, 303,
	304, 0, 0, 0, 305, 648, 649, 650, 0, 306,
	307, 651, 0, 0, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 0, 330, 331, 332, 0, 0, 0, 0,
	0, 0, 0, 333, 334, 335, 336, 337, 0, 338,
	340, 652, 653, 0, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 350, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	654, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 655, 656, 370, 0, 0, 0, 0, 0, 0,
	0, 371, 372, 373, 657, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 658,
	659, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 660, 0, 661, 391, 0, 392, 393, 394,
	395, 396, 662, 663, 664, 480, 0, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 0, 404,
	405, 406, 408, 0, 0, 407, 665, 666, 0, 667,
	0, 409, 410, 0, 668, 0, 411, 412, 413, 0,
	414, 0, 0, 0, 415, 416, 417, 418, 419, 420,
	0, 421, 423, 422, 0, 424, 669, 0, 425, 426,
	0, 0, 427, 428, 429, 430, 431, 432, 435, 0,
	0, 433, 434, 436, 437, 0, 438, 439, 441, 444,
	440, 442, 443, 445, 458, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 460, 0, 459,
	0, 461, 462, 463, 464, 470, 472, 473, 468, 469,
	471, 474, 475, 466, 467, 0, 476, 465, 0, 0,
	0, 477, 478, 0, 670, 479, 671, 481, 482, 0,
	0, 483, 0, 0, 0, 485, 486, 487, 0, 0,
	488, 489, 672, 0, 490, 0, 673, 491, 492, 484,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 0,
	502, 503, 674, 504, 505, 506, 675, 507, 508, 509,
	676, 510, 677, 511, 512, 0, 513, 514, 0, 515,
	516, 517, 518, 519, 520, 521, 678, 522, 523, 525,
	524, 526, 0, 527, 0, 528, 529, 530, 0, 0,
	0, 0, 0, 531, 0, 533, 534, 535, 536, 532,
	537, 538, 539, 540, 541, 0, 542, 543, 544, 0,
	545, 546, 547, 548, 549, 679, 550, 0, 551, 552,
	558, 559, 560, 553, 554, 561, 562, 563, 564, 565,
	0, 567, 568, 566, 569, 570, 571, 0, 572, 573,
	555, 556, 574, 575, 0, 576, 577, 578, 579, 580,
	581, 582, 680, 0, 583, 0, 584, 585, 586, 588,
	557, 589, 594, 595, 681, 590, 591, 592, 593, 682,
	597, 598, 0, 599, 600, 0, 596, 587, 0, 601,
	602, 603, 604, 605, 606, 607, 364, 608, 0, 609,
	683, 684, 685, 686, 0, 618, 0, 610, 611, 612,
	687, 613, 688, 0, 614, 615, 616, 617, 0, 619,
	620, 0, 0, 621, 622, 623, 625, 626, 624, 627,
	0, 628, 0, 0, 629, 630, 631, 689, 690, 691,
	0, 633, 632, 634, 692, 635, 636, 1371, 0, 274,
	0, 637, 638, 693, 639, 640, 641, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 280, 282, 281, 283,
	284, 285, 286, 0, 287, 288, 0, 0, 0, 0,
	0, 642, 0, 0, 0, 0, 289, 290, 0, 291,
	292, 293, 294, 295, 296, 643, 644, 0, 297, 645,
	298, 646, 0, 647, 299, 300, 301, 302, 303, 304,
	0, 0, 0, 305, 648, 649, 650, 0, 306, 307,
	651, 0, 0, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 0, 330, 331, 332, 0, 0, 0, 0, 0,
	0, 0, 333, 334, 335, 336, 337, 0, 338, 340,
	652, 653, 0, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 350, 351, 0,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 654,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	655, 656, 370, 0, 0, 0, 0, 0, 0, 0,
	371, 372, 373, 657, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 658, 659,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 660, 0, 661, 391, 0, 392, 393, 394, 395,
	396, 662, 663, 664, 480, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 0, 404, 405,
	406, 408, 0, 0, 407, 665, 666, 0, 667, 0,
	409, 410, 0, 668, 0, 411, 412, 413, 0, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 669, 0, 425, 426, 0,
	0, 427, 428, 429, 430, 431, 432, 435, 0, 0,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 0,
	461, 462, 463, 464, 470, 472, 473, 468, 469, 471,
	474, 475, 466, 467, 0, 476, 465, 0, 0, 0,
	477, 478, 0, 670, 479, 671, 481, 482, 0, 0,
	483, 0, 0, 0, 485, 486, 487, 0, 0, 488,
	489, 672, 0, 490, 0, 673, 491, 492, 484, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 0, 502,
	503, 674, 504, 505, 506, 675, 507, 508, 509, 676,
	510, 677, 511, 512, 0, 513, 514, 0, 515, 516,
	517, 518, 519, 520, 521, 678, 522, 523, 525, 524,
	526, 0, 527, 0, 528, 529, 530, 0, 0, 0,
	0, 0, 531, 0, 533, 534, 535, 536, 532, 537,
	538, 539, 540, 541, 0, 542, 543, 544, 0, 784,
	546, 547, 548, 549, 679, 550, 0, 551, 552, 558,
	559, 560, 553, 554, 783, 562, 563, 564, 565, 0,
	567, 568, 566, 569, 570, 571, 0, 572, 573, 555,
	556, 574, 575, 0, 576, 577, 578, 579, 580, 581,
	582, 680, 0, 583, 0, 584, 585, 586, 588, 557,
	589, 594, 595, 681, 590, 591, 592, 593, 682, 597,
	598, 0, 599, 600, 0, 596, 587, 0, 601, 602,
	603, 604, 605, 606, 607, 364, 608, 0, 609, 781,
	684, 685, 686, 0, 618, 0, 610, 611, 612, 687,
	613, 688, 0, 614, 615, 616, 617, 0, 619, 620,
	0, 0, 621, 622, 623, 625, 626, 624, 627, 0,
	628, 0, 0, 629, 630, 631, 689, 690, 691, 0,
	633, 632, 634, 692, 635, 636, 1336, 0, 274, 0,
	637, 638, 693, 639, 640, 641, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 280, 282, 281, 283, 284,
	285, 286, 0, 287, 288, 0, 0, 0, 0, 0,
	642, 0, 0, 0, 0, 289, 290, 0, 291, 292,
	293, 294, 295, 296, 643, 644, 0, 297, 645, 298,
	646, 0, 647, 299, 300, 301, 302, 303, 304, 0,
	0, 0, 305, 648, 649, 650, 0, 306, 307, 651,
	0, 0, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	0, 330, 331, 332, 0, 0, 0, 0, 0, 0,
	0, 333, 334, 335, 336, 337, 0, 338, 340, 652,
	653, 0, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 350, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 654, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 655,
	656, 370, 0, 0, 0, 0, 0, 0, 0, 371,
	372, 373, 657, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 658, 659, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	660, 0, 661, 391, 0, 392, 393, 394, 395, 396,
	1335, 663, 664, 480, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 0, 404, 405, 406,
	408, 0, 0, 407, 665, 666, 0, 667, 0, 409,
	410, 0, 668, 0, 411, 412, 413, 0, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 0, 421,
	423, 422, 0, 424, 669, 0, 425, 426, 0, 0,
	427, 428, 429, 430, 431, 432, 435, 0, 0, 433,
	434, 436, 437, 0, 438, 439, 441, 444, 440, 442,
	443, 445, 458, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 0, 459, 0, 461,
	462, 463, 464, 470, 472, 473, 468, 469, 471, 474,
	475, 466, 467, 0, 476, 465, 0, 0, 0, 477,
	478, 0, 670, 479, 671, 481, 482, 0, 0, 483,
	0, 0, 0, 485, 486, 487, 0, 0, 488, 489,
	672, 0, 490, 0, 673, 491, 492, 484, 493, 494,
	495, 496, 497, 498, 499, 500, 501, 0, 502, 503,
	674, 504, 505, 506, 675, 507, 508, 509, 676, 510,
	677, 511, 512, 0, 513, 514, 0, 515, 516, 517,
	518, 519, 520, 521, 678, 522, 523, 525, 524, 526,
	0, 527, 0, 528, 529, 530, 0, 0, 0, 0,
	0, 531, 0, 533, 534, 535, 536, 532, 537, 538,
	539, 540, 541, 0, 542, 543, 544, 0, 545, 546,
	547, 548, 549, 679, 550, 0, 551, 552, 558, 559,
	560, 553, 554, 561, 562, 563, 564, 565, 0, 567,
	568, 566, 569, 570, 571, 0, 572, 573, 555, 556,
	574, 575, 0, 576, 577, 578, 579, 580, 581, 582,
	680, 0, 583, 0, 584, 585, 586, 588, 557, 589,
	594, 595, 681, 590, 591, 592, 593, 682, 597, 598,
	0, 599, 600, 0, 596, 587, 0, 601, 602, 603,
	604, 605, 606, 607, 364, 608, 0, 609, 683, 684,
	685, 686, 0, 618, 0, 610, 611, 612, 687, 613,
	688, 0, 614, 615, 616, 617, 0, 619, 620, 0,
	0, 621, 622, 623, 625, 626, 624, 627, 0, 628,
	0, 0, 629, 630, 631, 689, 690, 691, 0, 633,
	632, 634, 692, 635, 636, 1327, 0, 274, 0, 637,
	638, 693, 639, 640, 641, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 280, 282, 281, 283, 284, 285,
	286, 0, 287, 288, 0, 0, 0, 0, 0, 642,
	0, 0, 0, 0, 289, 290, 0, 291, 292, 293,
	294, 295, 296, 643, 644, 0, 297, 645, 298, 646,
	0, 647, 299, 300, 301, 302, 303, 304, 0, 0,
	0, 305, 648, 649, 650, 0, 306, 307, 651, 0,
	0, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 0,
	330, 331, 332, 0, 0, 0, 0, 0, 0, 0,
	333, 334, 335, 336, 337, 0, 338, 340, 652, 653,
	0, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 350, 351, 0, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 654, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 655, 656,
	370, 0, 0, 0, 0, 0, 0, 0, 371, 372,
	373, 657, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 658, 659, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 660,
	0, 661, 391, 0, 392, 393, 394, 395, 396, 1326,
	663, 664, 480, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 0, 404, 405, 406, 408,
	0, 0, 407, 665, 666, 0, 667, 0, 409, 410,
	0, 668, 0, 411, 412, 413, 0, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 0, 424, 669, 0, 425, 426, 0, 0, 427,
	428, 429, 430, 431, 432, 435, 0, 0, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 459, 0, 461, 462,
	463, 464, 470, 472, 473, 468, 469, 471, 474, 475,
	466, 467, 0, 476, 465, 0, 0, 0, 477, 478,
	0, 670, 479, 671, 481, 482, 0, 0, 483, 0,
	0, 0, 485, 486, 487, 0, 0, 488, 489, 672,
	0, 490, 0, 673, 491, 492, 484, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 0, 502, 503, 674,
	504, 505, 506, 675, 507, 508, 509, 676, 510, 677,
	511, 512, 0, 513, 514, 0, 515, 516, 517, 518,
	519, 520, 521, 678, 522, 523, 525, 524, 526, 0,
	527, 0, 528, 529, 530, 0, 0, 0, 0, 0,
	531, 0, 533, 534, 535, 536, 532, 537, 538, 539,
	540, 541, 0, 542, 543, 544, 0, 545, 546, 547,
	548, 549, 679, 550, 0, 551, 552, 558, 559, 560,
	553, 554, 561, 562, 563, 564, 565, 0, 567, 568,
	566, 569, 570, 571, 0, 572, 573, 555, 556, 574,
	575, 0, 576, 577, 578, 579, 580, 581, 582, 680,
	0, 583, 0, 584, 585, 586, 588, 557, 589, 594,
	595, 681, 590, 591, 592, 593, 682, 597, 598, 0,
	599, 600, 0, 596, 587, 0, 601, 602, 603, 604,
	605, 606, 607, 364, 608, 0, 609, 683, 684, 685,
	686, 0, 618, 0, 610, 611, 612, 687, 613, 688,
	0, 614, 615, 616, 617, 0, 619, 620, 0, 0,
	621, 622, 623, 625, 626, 624, 627, 0, 628, 0,
	0, 629, 630, 631, 689, 690, 691, 274, 633, 632,
	634, 692, 635, 636, 0, 0, 0, 0, 637, 638,
	693, 639, 640, 641, 280, 282, 281, 283, 284, 285,
	286, 1280, 287, 288, 0, 0, 0, 0, 0, 642,
	0, 0, 0, 0, 289, 290, 0, 291, 292, 293,
	294, 295, 296, 643, 644, 0, 297, 645, 298, 646,
	0, 647, 299, 300, 301, 302, 303, 304, 0, 0,
	0, 305, 648, 649, 650, 0, 306, 307, 651, 0,
	0, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 0,
	330, 331, 332, 0, 0, 0, 0, 0, 0, 0,
	333, 334, 335, 336, 337, 0, 338, 340, 652, 653,
	0, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 350, 351, 0, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 654, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 655, 656,
	370, 0, 0, 0, 0, 0, 0, 0, 371, 372,
	373, 657, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 658, 659, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 660,
	0, 661, 391, 0, 392, 393, 394, 395, 396, 662,
	663, 664, 480, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 0, 404, 405, 406, 408,
	0, 0, 407, 665, 666, 0, 667, 0, 409, 410,
	0, 668, 0, 411, 412, 413, 0, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 0, 424, 669, 0, 425, 426, 0, 0, 427,
	428, 429, 430, 431, 432, 435, 0, 0, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 459, 0, 461, 462,
	463, 464, 470, 472, 473, 468, 469, 471, 474, 475,
	466, 467, 0, 476, 465, 0, 0, 0, 477, 478,
	0, 670, 479, 671, 481, 482, 0, 0, 483, 0,
	0, 0, 485, 486, 487, 0, 0, 488, 489, 672,
	0, 490, 0, 673, 491, 492, 484, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 0, 502, 503, 674,
	504, 505, 506, 675, 507, 508, 509, 676, 510, 677,
	511, 512, 0, 513, 514, 0, 515, 516, 517, 518,
	519, 520, 521, 678, 522, 523, 525, 524, 526, 0,
	527, 0, 528, 529, 530, 0, 0, 0, 0, 0,
	531, 0, 533, 534, 535, 536, 532, 537, 538, 539,
	540, 541, 0, 542, 543, 544, 0, 545, 546, 547,
	548, 549, 679, 550, 0, 551, 552, 558, 559, 560,
	553, 554, 561, 562, 563, 564, 565, 0, 567, 568,
	566, 569, 570, 571, 0, 572, 573, 555, 556, 574,
	575, 0, 576, 577, 578, 579, 580, 581, 582, 680,
	0, 583, 0, 584, 585, 586, 588, 557, 589, 594,
	595, 681, 590, 591, 592, 593, 682, 597, 598, 0,
	599, 600, 0, 596, 587, 0, 601, 602, 603, 604,
	605, 606, 607, 364, 608, 0, 609, 683, 684, 685,
	686, 0, 618, 0, 610, 611, 612, 687, 613, 688,
	0, 614, 615, 616, 617, 0, 619, 620, 0, 0,
	621, 622, 623, 625, 626, 624, 627, 0, 628, 0,
	0, 629, 630, 631, 689, 690, 691, 274, 633, 632,
	634, 692, 635, 636, 0, 0, 0, 0, 637, 638,
	693, 639, 640, 641, 280, 282, 281, 283, 284, 285,
	286, 790, 287, 288, 0, 0, 0, 0, 0, 642,
	0, 0, 0, 0, 289, 290, 0, 291, 292, 293,
	294, 295, 296, 643, 644, 0, 297, 645, 298, 646,
	0, 647, 299, 300, 301, 302, 303, 304, 0, 0,
	0, 305, 648, 649, 650, 0, 306, 307, 651, 0,
	0, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 0,
	330, 331, 332, 0, 0, 0, 0, 0, 0, 0,
	333, 334, 335, 336, 337, 0, 338, 340, 652, 653,
	0, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 350, 351, 0, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 654, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 655, 656,
	370, 0, 0, 0, 0, 0, 0, 0, 371, 372,
	373, 657, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 658, 659, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 660,
	0, 661, 391, 0, 392, 393, 394, 395, 396, 662,
	663, 664, 480, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 0, 404, 405, 406, 408,
	0, 0, 407, 665, 666, 0, 667, 0, 409, 410,
	0, 668, 0, 411, 412, 413, 0, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 0, 424, 669, 0, 425, 426, 0, 0, 427,
	428, 429, 430, 431, 432, 435, 0, 0, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 459, 0, 461, 462,
	463, 464, 470, 472, 473, 468, 469, 471, 474, 475,
	466, 467, 0, 476, 465, 0, 0, 0, 477, 478,
	0, 670, 479, 671, 481, 482, 0, 0, 483, 0,
	0, 0, 485, 486, 487, 0, 0, 488, 489, 672,
	0, 490, 0, 673, 491, 492, 484, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 0, 502, 503, 674,
	504, 505, 506, 675, 507, 508, 509, 676, 510, 677,
	511, 512, 0, 513, 514, 0, 515, 516, 517, 518,
	519, 520, 521, 678, 522, 523, 525, 524, 526, 0,
	527, 0, 528, 529, 530, 0, 0, 0, 0, 0,
	531, 0, 533, 534, 535, 536, 532, 537, 538, 539,
	540, 541, 0, 542, 543, 544, 0, 545, 546, 547,
	548, 549, 679, 550, 0, 551, 552, 558, 559, 560,
	553, 554, 561, 562, 563, 564, 565, 0, 567, 568,
	566, 569, 570, 571, 0, 572, 573, 555, 556, 574,
	575, 0, 576, 577, 578, 579, 580, 581, 582, 680,
	0, 583, 0, 584, 585, 586, 588, 557, 589, 594,
	595, 681, 590, 591, 592, 593, 682, 597, 598, 0,
	599, 600, 0, 596, 587, 0, 601, 602, 603, 604,
	605, 606, 607, 364, 608, 0, 609, 683, 684, 685,
	686, 0, 618, 0, 610, 611, 612, 687, 613, 688,
	0, 614, 615, 616, 617, 0, 619, 620, 0, 0,
	621, 622, 623, 625, 626, 624, 627, 0, 628, 0,
	0, 629, 630, 631, 689, 690, 691, 0, 633, 632,
	634, 692, 635, 636, 775, 0, 274, 0, 637, 638,
	693, 639, 640, 641, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 280, 282, 281, 283, 284, 285, 286,
	0, 287, 288, 0, 0, 0, 0, 0, 642, 0,
	0, 0, 0, 289, 290, 0, 291, 292, 293, 294,
	295, 296, 643, 644, 0, 297, 645, 298, 646, 0,
	647, 299, 300, 301, 302, 303, 304, 0, 0, 0,
	305, 648, 649, 650, 0, 306, 771, 651, 0, 0,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 770, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 0, 330,
	331, 332, 0, 0, 0, 0, 0, 0, 0, 333,
	334, 335, 336, 337, 0, 338, 340, 652, 653, 0,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 350, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 654, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 655, 656, 370,
	0, 0, 0, 0, 0, 0, 0, 371, 372, 373,
	657, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 658, 659, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 660, 0,
	661, 391, 0, 392, 393, 394, 395, 396, 662, 663,
	664, 480, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 0, 404, 405, 406, 408, 0,
	0, 407, 665, 666, 0, 667, 0, 409, 410, 0,
	668, 0, 411, 412, 413, 0, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 0, 421, 423, 422,
	0, 424, 669, 0, 425, 426, 0, 0, 427, 428,
	429, 430, 431, 776, 435, 0, 0, 433, 434, 436,
	437, 0, 438, 439, 441, 444, 440, 442, 443, 445,
	458, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 785, 0, 461, 462, 463,
	464, 470, 472, 473, 468, 469, 471, 474, 475, 466,
	467, 0, 476, 465, 0, 0, 0, 477, 478, 0,
	670, 479, 671, 481, 482, 0, 0, 483, 0, 0,
	0, 485, 486, 487, 0, 0, 488, 489, 672, 0,
	490, 0, 673, 491, 492, 484, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 0, 502, 503, 674, 504,
	505, 506, 675, 507, 508, 509, 676, 510, 677, 511,
	512, 0, 513, 514, 0, 515, 516, 517, 518, 519,
	520, 521, 678, 522, 523, 525, 524, 526, 0, 527,
	0, 528, 529, 530, 0, 0, 0, 0, 0, 531,
	0, 533, 534, 535, 536, 532, 537, 538, 539, 540,
	541, 0, 542, 543, 544, 0, 784, 546, 547, 548,
	549, 772, 550, 0, 551, 552, 558, 559, 560, 553,
	554, 783, 562, 563, 564, 565, 0, 567, 568, 566,
	569, 773, 571, 0, 572, 573, 555, 556, 574, 575,
	0, 576, 577, 578, 579, 580, 581, 582, 680, 0,
	583, 0, 584, 585, 586, 588, 557, 589, 594, 595,
	681, 590, 591, 592, 593, 682, 597, 598, 0, 599,
	600, 0, 596, 587, 0, 601, 602, 603, 604, 605,
	606, 607, 364, 608, 0, 609, 781, 684, 685, 686,
	0, 618, 0, 610, 777, 612, 687, 613, 688, 0,
	614, 615, 616, 617, 0, 619, 620, 0, 0, 621,
	622, 623, 625, 626, 624, 627, 0, 628, 0, 0,
	629, 630, 631, 689, 690, 691, 0, 633, 632, 634,
	692, 635, 636, 764, 0, 274, 0, 637, 638, 693,
	639, 640, 641, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 280, 282, 281, 283, 284, 285, 286, 0,
	287, 288, 0, 0, 0, 0, 0, 642, 0, 0,
	0, 0, 289, 290, 0, 291, 292, 293, 294, 295,
	296, 643, 644, 0, 297, 645, 298, 646, 0, 647,
	299, 300, 301, 302, 303, 304, 0, 0, 0, 305,
	648, 649, 650, 0, 306, 307, 651, 0, 0, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 0, 330, 331,
	332, 0, 0, 0, 0, 0, 0, 0, 333, 334,
	335, 336, 337, 0, 338, 340, 652, 653, 0, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 350, 351, 0, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 654, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 655, 656, 370, 0,
	0, 0, 0, 0, 0, 0, 371, 372, 373, 657,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 658, 659, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 660, 0, 661,
	391, 0, 392, 393, 394, 395, 396, 662, 663, 664,
	480, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 0, 404, 405, 406, 408, 0, 0,
	407, 665, 666, 0, 667, 0, 409, 410, 0, 668,
	0, 411, 412, 413, 0, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 669, 0, 425, 426, 0, 0, 427, 428, 429,
	430, 431, 432, 435, 0, 0, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 0, 461, 462, 463, 464,
	470, 472, 473, 468, 469, 471, 474, 475, 466, 467,
	0, 476, 465, 0, 0, 0, 477, 478, 0, 670,
	479, 671, 481, 482, 0, 0, 483, 0, 0, 0,
	485, 486, 487, 0, 0, 488, 489, 672, 0, 490,
	0, 673, 491, 492, 484, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 0, 502, 503, 674, 504, 505,
	506, 675, 507, 508, 509, 676, 510, 677, 511, 512,
	0, 513, 514, 0, 515, 516, 517, 518, 519, 520,
	521, 678, 522, 523, 525, 524, 526, 0, 527, 0,
	528, 529, 530, 0, 0, 0, 0, 0, 531, 0,
	533, 534, 535, 536, 532, 537, 538, 539, 540, 541,
	0, 542, 543, 544, 0, 545, 546, 547, 548, 549,
	679, 550, 0, 551, 552, 765, 559, 560, 553, 554,
	561, 562, 563, 564, 565, 0, 567, 568, 566, 569,
	570, 571, 0, 572, 573, 555, 556, 574, 575, 0,
	576, 577, 578, 579, 580, 581, 582, 680, 0, 583,
	0, 584, 585, 586, 588, 557, 589, 594, 595, 681,
	590, 591, 592, 593, 682, 597, 598, 0, 599, 600,
	0, 596, 587, 0, 601, 602, 603, 604, 605, 606,
	607, 364, 608, 0, 609, 683, 684, 685, 686, 0,
	618, 0, 610, 611, 612, 687, 613, 688, 0, 614,
	615, 616, 617, 0, 619, 620, 0, 0, 621, 622,
	623, 625, 626, 624, 627, 0, 628, 0, 0, 629,
	630, 631, 689, 690, 691, 0, 633, 632, 634, 692,
	635, 636, 727, 0, 274, 0, 637, 638, 693, 639,
	640, 641, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 280, 282, 281, 283, 284, 285, 286, 0, 287,
	288, 0, 0, 0, 0, 0, 642, 0, 0, 0,
	0, 289, 290, 0, 291, 292, 293, 294, 295, 296,
	643, 644, 0, 297, 645, 298, 646, 0, 647, 299,
	300, 301, 302, 303, 304, 0, 0, 0, 305, 648,
	649, 650, 0, 306, 307, 651, 0, 0, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	325, 326, 0, 327, 328, 329, 0, 330, 331, 332,
	0, 0, 0, 0, 0, 0, 0, 333, 334, 335,
	336, 337, 0, 338, 340, 652, 653, 0, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 350, 351, 0, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 654, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 655, 656, 370, 0, 0,
	0, 0, 0, 0, 0, 371, 372, 373, 657, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 658, 659, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 660, 0, 661, 391,
	0, 392, 393, 394, 395, 396, 662, 663, 664, 480,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 0, 404, 405, 406, 408, 0, 0, 407,
	665, 666, 0, 667, 0, 409, 410, 0, 668, 0,
	411, 412, 413, 0, 414, 0, 0, 0, 415, 416,
	417, 418, 419, 420, 0, 421, 423, 422, 0, 424,
	669, 0, 425, 426, 0, 0, 427, 428, 429, 430,
	431, 432, 435, 0, 0, 433, 434, 436, 437, 0,
	438, 439, 441, 444, 440, 442, 443, 445, 458, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 460, 0, 459, 0, 461, 462, 463, 464, 470,
	472, 473, 468, 469, 471, 474, 475, 466, 467, 0,
	476, 465, 0, 0, 0, 477, 478, 0, 670, 479,
	671, 481, 482, 0, 0, 483, 0, 0, 0, 485,
	486, 487, 0, 0, 488, 489, 672, 0, 490, 0,
	673, 491, 492, 484, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 0, 502, 503, 674, 504, 505, 506,
	675, 507, 508, 509, 676, 510, 677, 511, 512, 0,
	513, 514, 0, 515, 516, 517, 518, 519, 520, 521,
	678, 522, 523, 525, 524, 526, 0, 527, 0, 528,
	529, 530, 0, 0, 0, 0, 0, 531, 0, 533,
	534, 535, 536, 532, 537, 538, 539, 540, 541, 0,
	542, 543, 544, 0, 545, 546, 547, 548, 549, 679,
	550, 0, 551, 552, 558, 559, 560, 553, 554, 561,
	562, 563, 564, 565, 0, 567, 568, 566, 569, 570,
	571, 0, 572, 573, 555, 556, 574, 575, 0, 576,
	577, 578, 579, 580, 581, 582, 680, 0, 583, 0,
	584, 585, 586, 588, 557, 589, 594, 595, 681, 590,
	591, 592, 593, 682, 597, 598, 0, 599, 600, 0,
	596, 587, 0, 601, 602, 603, 604, 605, 606, 607,
	364, 608, 0, 609, 683, 684, 685, 686, 0, 618,
	0, 610, 611, 612, 687, 613, 688, 0, 614, 615,
	616, 617, 0, 619, 620, 0, 0, 621, 622, 623,
	625, 626, 624, 627, 0, 628, 0, 0, 629, 630,
	631, 689, 690, 691, 0, 633, 632, 634, 692, 635,
	636, 721, 0, 274, 0, 637, 638, 693, 639, 640,
	641, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	280, 282, 281, 283, 284, 285, 286, 0, 287, 288,
	0, 0, 0, 0, 0, 642, 0, 0, 0, 0,
	289, 290, 0, 291, 292, 293, 294, 295, 296, 643,
	644, 0, 297, 645, 298, 646, 0, 647, 299, 300,
	301, 302, 303, 304, 0, 0, 0, 305, 648, 649,
	650, 0, 306, 307, 651, 0, 0, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 0, 330, 331, 332, 0,
	0, 0, 0, 0, 0, 0, 333, 334, 335, 336,
	337, 0, 338, 340, 652, 653, 0, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 350, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 654, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 655, 656, 370, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 657, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 658, 659, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 660, 0, 661, 391, 0,
	392, 393, 394, 395, 396, 662, 663, 664, 480, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 408, 0, 0, 407, 665,
	666, 0, 667, 0, 409, 410, 0, 668, 0, 411,
	412, 413, 0, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 669,
	0, 425, 426, 0, 0, 427, 428, 429, 430, 431,
	432, 435, 0, 0, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 0, 461, 462, 463, 464, 470, 472,
	473, 468, 469, 471, 474, 475, 466, 467, 0, 476,
	465, 0, 0, 0, 477, 478, 0, 670, 479, 671,
	481, 482, 0, 0, 483, 0, 0, 0, 485, 486,
	487, 0, 0, 488, 489, 672, 0, 490, 0, 673,
	491, 492, 484, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 0, 502, 503, 674, 504, 505, 506, 675,
	507, 508, 509, 676, 510, 677, 511, 512, 0, 513,
	514, 0, 515, 516, 517, 518, 519, 520, 521, 678,
	522, 523, 525, 524, 526, 0, 527, 0, 528, 529,
	530, 0, 0, 0, 0, 0, 531, 0, 533, 534,
	535, 536, 532, 537, 538, 539, 540, 541, 0, 542,
	543, 544, 0, 545, 546, 547, 548, 549, 679, 550,
	0, 551, 552, 558, 559, 560, 553, 554, 561, 562,
	563, 564, 565, 0, 567, 568, 566, 569, 570, 571,
	0, 572, 573, 555, 556, 574, 575, 0, 576, 577,
	578, 579, 580, 581, 582, 680, 0, 583, 0, 584,
	585, 586, 588, 557, 589, 594, 595, 681, 590, 591,
	592, 593, 682, 597, 598, 0, 599, 600, 0, 596,
	587, 0, 601, 602, 603, 604, 605, 606, 607, 364,
	608, 0, 609, 683, 684, 685, 686, 0, 618, 0,
	610, 611, 612, 687, 613, 688, 0, 614, 615, 616,
	617, 0, 619, 620, 0, 0, 621, 622, 623, 625,
	626, 624, 627, 0, 628, 0, 0, 629, 630, 631,
	689, 690, 691, 0, 633, 632, 634, 692, 635, 636,
	699, 0, 274, 0, 637, 638, 693, 639, 640, 641,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 280,
	282, 281, 283, 284, 285, 286, 0, 287, 288, 0,
	0, 0, 0, 0, 642, 0, 0, 0, 0, 289,
	290, 0, 291, 292, 293, 294, 295, 296, 643, 644,
	0, 297, 645, 298, 646, 0, 647, 299, 300, 301,
	302, 303, 304, 0, 0, 0, 305, 648, 649, 650,
	0, 306, 307, 651, 0, 0, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	0, 327, 328, 329, 0, 330, 331, 332, 0, 0,
	0, 0, 0, 0, 0, 333, 334, 335, 336, 337,
	0, 338, 340, 652, 653, 0, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	350, 351, 0, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 654, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 655, 656, 370, 0, 0, 0, 0,
	0, 0, 0, 371, 372, 373, 657, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 658, 659, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 660, 0, 661, 391, 0, 392,
	393, 394, 395, 396, 662, 663, 664, 480, 0, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	0, 404, 405, 406, 408, 0, 0, 407, 665, 666,
	0, 667, 0, 409, 410, 0, 668, 0, 411, 412,
	413, 0, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 0, 421, 423, 422, 0, 424, 669, 0,
	425, 426, 0, 0, 427, 428, 429, 430, 431, 432,
	435, 0, 0, 433, 434, 436, 437, 0, 438, 439,
	441, 444, 440, 442, 443, 445, 458, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 460,
	0, 459, 0, 461, 462, 463, 464, 470, 472, 473,
	468, 469, 471, 474, 475, 466, 467, 0, 476, 465,
	0, 0, 0, 477, 478, 0, 670, 479, 671, 481,
	482, 0, 0, 483, 0, 0, 0, 485, 486, 487,
	0, 0, 488, 489, 672, 0, 490, 0, 673, 491,
	492, 484, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 0, 502, 503, 674, 504, 505, 506, 675, 507,
	508, 509, 676, 510, 677, 511, 512, 0, 513, 514,
	0, 515, 516, 517, 518, 519, 520, 521, 678, 522,
	523, 525, 524, 526, 0, 527, 0, 528, 529, 530,
	0, 0, 0, 0, 0, 531, 0, 533, 534, 535,
	536, 532, 537, 538, 539, 540, 541, 0, 542, 543,
	544, 0, 545, 546, 547, 548, 549, 679, 550, 0,
	551, 552, 558, 559, 560, 553, 554, 561, 562, 563,
	564, 565, 0, 567, 568, 566, 569, 570, 571, 0,
	572, 573, 555, 556, 574, 575, 0, 576, 577, 578,
	579, 580, 581, 582, 680, 0, 583, 0, 584, 585,
	586, 588, 557, 589, 594, 595, 681, 590, 591, 592,
	593, 682, 597, 598, 0, 599, 600, 0, 596, 587,
	0, 601, 602, 603, 604, 605, 606, 607, 364, 608,
	0, 609, 683, 684, 685, 686, 0, 618, 0, 610,
	611, 612, 687, 613, 688, 0, 614, 615, 616, 617,
	0, 619, 620, 0, 0, 621, 622, 623, 625, 626,
	624, 627, 0, 628, 0, 0, 629, 630, 631, 689,
	690, 691, 274, 633, 632, 634, 692, 635, 636, 0,
	0, 0, 0, 637, 638, 693, 639, 640, 641, 280,
	282, 281, 283, 284, 285, 286, 0, 287, 288, 0,
	0, 0, 0, 0, 642, 0, 0, 0, 0, 289,
	290, 0, 291, 292, 293, 294, 295, 296, 643, 644,
	0, 297, 645, 298, 646, 0, 647, 299, 300, 301,
	302, 303, 304, 0, 0, 0, 305, 648, 649, 650,
	0, 306, 307, 651, 0, 0, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	0, 327, 328, 329, 0, 330, 331, 332, 0, 0,
	0, 0, 0, 0, 0, 333, 334, 335, 336, 337,
	0, 338, 340, 652, 653, 0, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	350, 351, 0, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 654, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 655, 656, 370, 0, 0, 0, 0,
	0, 0, 0, 371, 372, 373, 657, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 658, 659, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 660, 0, 661, 391, 0, 392,
	393, 394, 395, 396, 662, 663, 664, 480, 0, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	0, 404, 405, 406, 408, 0, 0, 407, 665, 666,
	0, 667, 0, 409, 410, 0, 668, 0, 411, 412,
	413, 0, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 0, 421, 423, 422, 0, 424, 669, 0,
	425, 426, 0, 0, 427, 428, 429, 430, 431, 432,
	435, 0, 0, 433, 434, 436, 437, 0, 438, 439,
	441, 444, 440, 442, 443, 445, 458, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 460,
	0, 459, 0, 461, 462, 463, 464, 470, 472, 473,
	468, 469, 471, 474, 475, 466, 467, 0, 476, 465,
	0, 0, 0, 477, 478, 0, 670, 479, 671, 481,
	482, 0, 0, 483, 0, 0, 0, 485, 486, 487,
	0, 0, 488, 489, 672, 0, 490, 0, 673, 491,
	492, 484, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 0, 502, 503, 674, 504, 505, 506, 675, 507,
	508, 509, 676, 510, 677, 511, 512, 0, 513, 514,
	0, 515, 516, 517, 518, 519, 520, 521, 678, 522,
	523, 525, 524, 526, 0, 527, 0, 528, 529, 530,
	0, 0, 0, 0, 0, 531, 0, 533, 534, 535,
	536, 532, 537, 538, 539, 540, 541, 0, 542, 543,
	544, 0, 545, 546, 547, 548, 549, 679, 550, 0,
	551, 552, 558, 559, 560, 553, 554, 561, 562, 563,
	564, 565, 0, 567, 568, 566, 569, 570, 571, 0,
	572, 573, 555, 556, 574, 575, 0, 576, 577, 578,
	579, 580, 581, 582, 680, 0, 583, 0, 584, 585,
	586, 588, 557, 589, 594, 595, 681, 590, 591, 592,
	593, 682, 597, 598, 0, 599, 600, 0, 596, 587,
	0, 601, 602, 603, 604, 605, 606, 607, 364, 608,
	0, 609, 683, 684, 685, 686, 0, 618, 0, 610,
	611, 612, 687, 613, 688, 0, 614, 615, 616, 617,
	0, 619, 620, 0, 0, 621, 622, 623, 625, 626,
	624, 627, 0, 628, 0, 0, 629, 630, 631, 689,
	690, 691, 274, 633, 632, 634, 692, 635, 636, 0,
	0, 0, 0, 637, 638, 693, 639, 640, 641, 280,
	282, 281, 283, 284, 285, 286, 0, 287, 288, 0,
	0, 0, 0, 0, 642, 0, 0, 0, 0, 289,
	290, 0, 291, 292, 293, 294, 295, 296, 643, 644,
	0, 297, 645, 298, 646, 0, 647, 299, 300, 301,
	302, 303, 304, 0, 0, 0, 305, 648, 649, 650,
	0, 306, 307, 651, 0, 0, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	0, 327, 328, 329, 0, 330, 331, 332, 0, 0,
	0, 0, 0, 0, 0, 333, 334, 335, 336, 337,
	0, 338, 340, 652, 653, 0, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	350, 351, 0, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 654, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 655, 656, 370, 0, 0, 0, 0,
	0, 0, 0, 371, 372, 373, 657, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 658, 659, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 660, 0, 661, 391, 0, 392,
	393, 394, 395, 396, 3633, 663, 664, 480, 0, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	0, 404, 405, 406, 408, 0, 0, 407, 665, 666,
	0, 667, 0, 409, 410, 0, 668, 0, 411, 412,
	413, 0, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 0, 421, 423, 422, 0, 424, 669, 0,
	425, 426, 0, 0, 427, 428, 429, 430, 431, 432,
	435, 0, 0, 433, 434, 436, 437, 0, 438, 439,
	441, 444, 440, 442, 443, 445, 458, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 460,
	0, 459, 0, 461, 462, 463, 464, 470, 472, 473,
	468, 469, 471, 474, 475, 466, 467, 0, 476, 465,
	0, 0, 0, 477, 478, 0, 670, 479, 671, 481,
	482, 0, 0, 483, 0, 0, 0, 485, 486, 487,
	0, 0, 488, 489, 672, 0, 490, 0, 673, 491,
	492, 484, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 0, 502, 503, 674, 504, 505, 506, 675, 507,
	508, 509, 676, 510, 677, 511, 512, 0, 513, 514,
	0, 515, 516, 517, 518, 519, 520, 521, 678, 522,
	523, 525, 524, 526, 0, 527, 0, 528, 529, 530,
	0, 0, 0, 0, 0, 531, 0, 533, 534, 535,
	536, 532, 537, 538, 539, 540, 541, 0, 542, 543,
	544, 0, 545, 546, 547, 548, 549, 679, 550, 0,
	551, 552, 558, 559, 560, 553, 554, 561, 562, 563,
	564, 565, 0, 567, 568, 566, 569, 570, 571, 0,
	572, 573, 555, 556, 574, 575, 0, 576, 577, 578,
	579, 580, 581, 582, 680, 0, 583, 0, 584, 585,
	586, 588, 557, 589, 594, 595, 681, 590, 591, 592,
	593, 682, 597, 598, 0, 599, 600, 0, 596, 587,
	0, 601, 602, 603, 604, 605, 606, 607, 364, 608,
	0, 609, 683, 684, 685, 686, 0, 618, 0, 610,
	611, 612, 687, 613, 688, 0, 614, 615, 616, 617,
	0, 619, 620, 0, 0, 621, 622, 623, 625, 626,
	624, 627, 0, 628, 0, 0, 629, 630, 631, 689,
	690, 691, 274, 633, 632, 634, 692, 635, 636, 0,
	0, 0, 0, 637, 638, 693, 639, 640, 641, 280,
	282, 281, 283, 284, 285, 286, 0, 287, 288, 0,
	0, 0, 0, 0, 642, 0, 0, 0, 0, 289,
	290, 0, 291, 292, 293, 294, 295, 296, 643, 644,
	0, 297, 645, 298, 646, 0, 647, 299, 300, 301,
	302, 303, 304, 0, 0, 0, 305, 648, 649, 650,
	0, 306, 307, 651, 0, 0, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	0, 327, 328, 329, 0, 330, 331, 332, 0, 0,
	0, 0, 0, 0, 0, 333, 334, 335, 336, 337,
	0, 338, 340, 652, 653, 0, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	350, 351, 0, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 654, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 655, 656, 370, 0, 0, 0, 0,
	0, 0, 0, 371, 372, 373, 657, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 658, 659, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 660, 0, 661, 391, 0, 392,
	393, 394, 395, 396, 662, 663, 664, 480, 0, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	0, 404, 405, 406, 408, 0, 0, 407, 665, 666,
	0, 667, 0, 409, 410, 0, 668, 0, 411, 412,
	413, 0, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 0, 421, 423, 422, 0, 424, 669, 0,
	425, 426, 0, 0, 427, 428, 429, 430, 431, 432,
	435, 0, 0, 433, 434, 436, 437, 0, 438, 439,
	441, 444, 440, 442, 443, 445, 458, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 460,
	0, 459, 0, 461, 462, 463, 464, 470, 472, 473,
	468, 469, 471, 474, 475, 466, 467, 0, 476, 465,
	0, 0, 0, 477, 478, 0, 670, 479, 671, 481,
	482, 0, 0, 483, 0, 0, 0, 485, 486, 487,
	0, 0, 488, 489, 672, 0, 490, 0, 673, 491,
	492, 484, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 0, 502, 503, 674, 504, 505, 506, 675, 507,
	508, 509, 676, 510, 677, 511, 512, 0, 513, 514,
	0, 515, 516, 517, 518, 519, 520, 521, 678, 522,
	523, 525, 524, 526, 0, 527, 0, 528, 529, 530,
	0, 0, 0, 0, 0, 531, 0, 533, 534, 535,
	536, 532, 537, 538, 539, 540, 541, 0, 542, 543,
	544, 0, 784, 546, 547, 548, 549, 679, 550, 0,
	551, 552, 558, 559, 560, 553, 554, 783, 562, 563,
	564, 565, 0, 567, 568, 566, 569, 570, 571, 0,
	572, 573, 555, 556, 574, 575, 0, 576, 577, 578,
	579, 580, 581, 582, 680, 0, 583, 0, 584, 585,
	586, 588, 557, 589, 594, 595, 681, 590, 591, 592,
	593, 682, 597, 598, 0, 599, 600, 0, 596, 587,
	0, 601, 602, 603, 604, 605, 606, 607, 364, 608,
	0, 609, 781, 684, 685, 686, 0, 618, 0, 610,
	611, 612, 687, 613, 688, 0, 614, 615, 616, 617,
	0, 619, 620, 0, 0, 621, 622, 623, 625, 626,
	624, 627, 0, 628, 0, 0, 629, 630, 631, 689,
	690, 691, 274, 633, 632, 634, 692, 635, 636, 0,
	0, 0, 0, 637, 638, 693, 639, 640, 641, 280,
	282, 281, 283, 284, 285, 286, 0, 287, 288, 0,
	0, 0, 0, 0, 642, 0, 0, 0, 0, 289,
	290, 0, 291, 292, 293, 294, 295, 296, 643, 644,
	0, 297, 645, 298, 646, 0, 647, 299, 300, 301,
	302, 303, 304, 0, 0, 0, 305, 648, 649, 650,
	0, 306, 307, 651, 0, 0, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	0, 327, 328, 329, 0, 330, 331, 332, 0, 0,
	0, 0, 0, 0, 0, 333, 334, 335, 336, 337,
	0, 338, 340, 652, 653, 0, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	350, 351, 0, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 654, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 655, 656, 370, 0, 0, 0, 0,
	0, 0, 0, 371, 372, 373, 657, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 658, 659, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 660, 0, 661, 391, 0, 392,
	393, 394, 395, 396, 3560, 663, 664, 480, 0, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	0, 404, 405, 406, 408, 0, 0, 407, 665, 666,
	0, 667, 0, 409, 410, 0, 668, 0, 411, 412,
	413, 0, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 0, 421, 423, 422, 0, 424, 669, 0,
	425, 426, 0, 0, 427, 428, 429, 430, 431, 432,
	435, 0, 0, 433, 434, 436, 437, 0, 438, 439,
	441, 444, 440, 442, 443, 445, 458, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 460,
	0, 459, 0, 461, 462, 463, 464, 470, 472, 473,
	468, 469, 471, 474, 475, 466, 467, 0, 476, 465,
	0, 0, 0, 477, 478, 0, 670, 479, 671, 481,
	482, 0, 0, 483, 0, 0, 0, 485, 486, 487,
	0, 0, 488, 489, 672, 0, 490, 0, 673, 491,
	492, 484, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 0, 502, 503, 674, 504, 505, 506, 675, 507,
	508, 509, 676, 510, 677, 511, 512, 0, 513, 514,
	0, 515, 516, 517, 518, 519, 520, 521, 678, 522,
	523, 525, 524, 526, 0, 527, 0, 528, 529, 530,
	0, 0, 0, 0, 0, 531, 0, 533, 534, 535,
	536, 532, 537, 538, 539, 540, 541, 0, 542, 543,
	544, 0, 545, 546, 547, 548, 549, 679, 550, 0,
	551, 552, 558, 559, 560, 553, 554, 561, 562, 563,
	564, 565, 0, 567, 568, 566, 569, 570, 571, 0,
	572, 573, 555, 556, 574, 575, 0, 576, 577, 578,
	579, 580, 581, 582, 680, 0, 583, 0, 584, 585,
	586, 588, 557, 589, 594, 595, 681, 590, 591, 592,
	593, 682, 597, 598, 0, 599, 600, 0, 596, 587,
	0, 601, 602, 603, 604, 605, 606, 607, 364, 608,
	0, 609, 683, 684, 685, 686, 0, 618, 0, 610,
	611, 612, 687, 613, 688, 0, 614, 615, 616, 617,
	0, 619, 620, 0, 0, 621, 622, 623, 625, 626,
	624, 627, 0, 628, 0, 0, 629, 630, 631, 689,
	690, 691, 274, 633, 632, 634, 692, 635, 636, 0,
	0, 0, 0, 637, 638, 693, 639, 640, 641, 280,
	282, 281, 283, 284, 285, 286, 0, 287, 288, 0,
	0, 0, 0, 0, 642, 0, 0, 0, 0, 289,
	290, 0, 291, 292, 293, 294, 295, 296, 643, 644,
	0, 297, 645, 298, 646, 0, 647, 299, 300, 301,
	302, 303, 304, 0, 0, 0, 305, 648, 649, 650,
	0, 306, 307, 651, 0, 0, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	0, 327, 328, 329, 0, 330, 331, 332, 0, 0,
	0, 0, 0, 0, 0, 333, 334, 335, 336, 337,
	0, 338, 340, 652, 653, 0, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	350, 351, 0, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 654, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 655, 656, 370, 0, 0, 0, 0,
	0, 0, 0, 371, 372, 373, 657, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 658, 659, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 660, 0, 661, 391, 0, 392,
	393, 394, 395, 396, 3538, 663, 664, 480, 0, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	0, 404, 405, 406, 408, 0, 0, 407, 665, 666,
	0, 667, 0, 409, 410, 0, 668, 0, 411, 412,
	413, 0, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 0, 421, 423, 422, 0, 424, 669, 0,
	425, 426, 0, 0, 427, 428, 429, 430, 431, 432,
	435, 0, 0, 433, 434, 436, 437, 0, 438, 439,
	441, 444, 440, 442, 443, 445, 458, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 460,
	0, 459, 0, 461, 462, 463, 464, 470, 472, 473,
	468, 469, 471, 474, 475, 466, 467, 0, 476, 465,
	0, 0, 0, 477, 478, 0, 670, 479, 671, 481,
	482, 0, 0, 483, 0, 0, 0, 485, 486, 487,
	0, 0, 488, 489, 672, 0, 490, 0, 673, 491,
	492, 484, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 0, 502, 503, 674, 504, 505, 506, 675, 507,
	508, 509, 676, 510, 677, 511, 512, 0, 513, 514,
	0, 515, 516, 517, 518, 519, 520, 521, 678, 522,
	523, 525, 524, 526, 0, 527, 0, 528, 529, 530,
	0, 0, 0, 0, 0, 531, 0, 533, 534, 535,
	536, 532, 537, 538, 539, 540, 541, 0, 542, 543,
	544, 0, 545, 546, 547, 548, 549, 679, 550, 0,
	551, 552, 558, 559, 560, 553, 554, 561, 562, 563,
	564, 565, 0, 567, 568, 566, 569, 570, 571, 0,
	572, 573, 555, 556, 574, 575, 0, 576, 577, 578,
	579, 580, 581, 582, 680, 0, 583, 0, 584, 585,
	586, 588, 557, 589, 594, 595, 681, 590, 591, 592,
	593, 682, 597, 598, 0, 599, 600, 0, 596, 587,
	0, 601, 602, 603, 604, 605, 606, 607, 364, 608,
	0, 609, 683, 684, 685, 686, 0, 618, 0, 610,
	611, 612, 687, 613, 688, 0, 614, 615, 616, 617,
	0, 619, 620, 0, 0, 621, 622, 623, 625, 626,
	624, 627, 0, 628, 0, 0, 629, 630, 631, 689,
	690, 691, 274, 633, 632, 634, 692, 635, 636, 0,
	0, 0, 0, 637, 638, 693, 639, 640, 641, 280,
	282, 281, 283, 284, 285, 286, 0, 287, 288, 0,
	0, 0, 0, 0, 642, 0, 0, 0, 0, 289,
	290, 0, 291, 292, 293, 294, 295, 296, 643, 644,
	0, 297, 645, 298, 646, 0, 647, 299, 300, 301,
	302, 303, 304, 0, 0, 0, 305, 648, 649, 650,
	0, 306, 307, 651, 0, 0, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	0, 327, 328, 329, 0, 330, 331, 332, 0, 0,
	0, 0, 0, 0, 0, 333, 334, 335, 336, 337,
	0, 338, 340, 652, 653, 0, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	350, 351, 0, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 654, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 655, 656, 370, 0, 0, 0, 0,
	0, 0, 0, 371, 372, 373, 657, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 658, 659, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 660, 0, 661, 391, 0, 392,
	393, 394, 395, 396, 3535, 663, 664, 480, 0, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	0, 404, 405, 406, 408, 0, 0, 407, 665, 666,
	0, 667, 0, 409, 410, 0, 668, 0, 411, 412,
	413, 0, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 0, 421, 423, 422, 0, 424, 669, 0,
	425, 426, 0, 0, 427, 428, 429, 430, 431, 432,
	435, 0, 0, 433, 434, 436, 437, 0, 438, 439,
	441, 444, 440, 442, 443, 445, 458, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 460,
	0, 459, 0, 461, 462, 463, 464, 470, 472, 473,
	468, 469, 471, 474, 475, 466, 467, 0, 476, 465,
	0, 0, 0, 477, 478, 0, 670, 479, 671, 481,
	482, 0, 0, 483, 0, 0, 0, 485, 486, 487,
	0, 0, 488, 489, 672, 0, 490, 0, 673, 491,
	492, 484, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 0, 502, 503, 674, 504, 505, 506, 675, 507,
	508, 509, 676, 510, 677, 511, 512, 0, 513, 514,
	0, 515, 516, 517, 518, 519, 520, 521, 678, 522,
	523, 525, 524, 526, 0, 527, 0, 528, 529, 530,
	0, 0, 0, 0, 0, 531, 0, 533, 534, 535,
	536, 532, 537, 538, 539, 540, 541, 0, 542, 543,
	544, 0, 545, 546, 547, 548, 549, 679, 550, 0,
	551, 552, 558, 559, 560, 553, 554, 561, 562, 563,
	564, 565, 0, 567, 568, 566, 569, 570, 571, 0,
	572, 573, 555, 556, 574, 575, 0, 576, 577, 578,
	579, 580, 581, 582, 680, 0, 583, 0, 584, 585,
	586, 588, 557, 589, 594, 595, 681, 590, 591, 592,
	593, 682, 597, 598, 0, 599, 600, 0, 596, 587,
	0, 601, 602, 603, 604, 605, 606, 607, 364, 608,
	0, 609, 683, 684, 685, 686, 0, 618, 0, 610,
	611, 612, 687, 613, 688, 0, 614, 615, 616, 617,
	0, 619, 620, 0, 0, 621, 622, 623, 625, 626,
	624, 627, 0, 628, 0, 0, 629, 630, 631, 689,
	690, 691, 274, 633, 632, 634, 692, 635, 636, 0,
	0, 0, 0, 637, 638, 693, 639, 640, 641, 280,
	282, 281, 283, 284, 285, 286, 0, 287, 288, 0,
	0, 0, 0, 0, 642, 0, 0, 0, 0, 289,
	290, 0, 291, 292, 293, 294, 295, 296, 643, 644,
	0, 297, 645, 298, 646, 0, 647, 299, 300, 301,
	302, 303, 304, 0, 0, 0, 305, 648, 649, 650,
	0, 306, 307, 651, 0, 0, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	0, 327, 328, 329, 0, 330, 331, 332, 0, 0,
	0, 0, 0, 0, 0, 333, 334, 335, 336, 337,
	0, 338, 340, 652, 653, 0, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	350, 351, 0, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 654, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 655, 656, 370, 0, 0, 0, 0,
	0, 0, 0, 371, 372, 373, 657, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 658, 659, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 660, 0, 661, 391, 0, 392,
	393, 394, 395, 396, 3487, 663, 664, 480, 0, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	0, 404, 405, 406, 408, 0, 0, 407, 665, 666,
	0, 667, 0, 409, 410, 0, 668, 0, 411, 412,
	413, 0, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 0, 421, 423, 422, 0, 424, 669, 0,
	425, 426, 0, 0, 427, 428, 429, 430, 431, 432,
	435, 0, 0, 433, 434, 436, 437, 0, 438, 439,
	441, 444, 440, 442, 443, 445, 458, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 460,
	0, 459, 0, 461, 462, 463, 464, 470, 472, 473,
	468, 469, 471, 474, 475, 466, 467, 0, 476, 465,
	0, 0, 0, 477, 478, 0, 670, 479, 671, 481,
	482, 0, 0, 483, 0, 0, 0, 485, 486, 487,
	0, 0, 488, 489, 672, 0, 490, 0, 673, 491,
	492, 484, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 0, 502, 503, 674, 504, 505, 506, 675, 507,
	508, 509, 676, 510, 677, 511, 512, 0, 513, 514,
	0, 515, 516, 517, 518, 519, 520, 521, 678, 522,
	523, 525, 524, 526, 0, 527, 0, 528, 529, 530,
	0, 0, 0, 0, 0, 531, 0, 533, 534, 535,
	536, 532, 537, 538, 539, 540, 541, 0, 542, 543,
	544, 0, 545, 546, 547, 548, 549, 679, 550, 0,
	551, 552, 558, 559, 560, 553, 554, 561, 562, 563,
	564, 565, 0, 567, 568, 566, 569, 570, 571, 0,
	572, 573, 555, 556, 574, 575, 0, 576, 577, 578,
	579, 580, 581, 582, 680, 0, 583, 0, 584, 585,
	586, 588, 557, 589, 594, 595, 681, 590, 591, 592,
	593, 682, 597, 598, 0, 599, 600, 0, 596, 587,
	0, 601, 602, 603, 604, 605, 606, 607, 364, 608,
	0, 609, 683, 684, 685, 686, 0, 618, 0, 610,
	611, 612, 687, 613, 688, 0, 614, 615, 616, 617,
	0, 619, 620, 0, 0, 621, 622, 623, 625, 626,
	624, 627, 0, 628, 0, 0, 629, 630, 631, 689,
	690, 691, 274, 633, 632, 634, 692, 635, 636, 0,
	0, 0, 0, 637, 638, 693, 639, 640, 641, 280,
	282, 281, 283, 284, 285, 286, 0, 287, 288, 0,
	0, 0, 0, 0, 642, 0, 0, 0, 0, 289,
	290, 0, 291, 292, 293, 294, 295, 296, 643, 644,
	0, 297, 645, 298, 646, 0, 647, 299, 300, 301,
	302, 303, 304, 0, 0, 0, 305, 648, 649, 650,
	0, 306, 307, 651, 0, 0, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	0, 327, 328, 329, 0, 330, 331, 332, 0, 0,
	0, 0, 0, 0, 0, 333, 334, 335, 336, 337,
	0, 338, 340, 652, 653, 0, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	350, 351, 0, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 654, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 655, 656, 370, 0, 0, 0, 0,
	0, 0, 0, 371, 372, 373, 657, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 658, 659, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 660, 0, 661, 391, 0, 392,
	393, 394, 395, 396, 3485, 663, 664, 480, 0, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	0, 404, 405, 406, 408, 0, 0, 407, 665, 666,
	0, 667, 0, 409, 410, 0, 668, 0, 411, 412,
	413, 0, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 0, 421, 423, 422, 0, 424, 669, 0,
	425, 426, 0, 0, 427, 428, 429, 430, 431, 432,
	435, 0, 0, 433, 434, 436, 437, 0, 438, 439,
	441, 444, 440, 442, 443, 445, 458, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 460,
	0, 459, 0, 461, 462, 463, 464, 470, 472, 473,
	468, 469, 471, 474, 475, 466, 467, 0, 476, 465,
	0, 0, 0, 477, 478, 0, 670, 479, 671, 481,
	482, 0, 0, 483, 0, 0, 0, 485, 486, 487,
	0, 0, 488, 489, 672, 0, 490, 0, 673, 491,
	492, 484, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 0, 502, 503, 674, 504, 505, 506, 675, 507,
	508, 509, 676, 510, 677, 511, 512, 0, 513, 514,
	0, 515, 516, 517, 518, 519, 520, 521, 678, 522,
	523, 525, 524, 526, 0, 527, 0, 528, 529, 530,
	0, 0, 0, 0, 0, 531, 0, 533, 534, 535,
	536, 532, 537, 538, 539, 540, 541, 0, 542, 543,
	544, 0, 545, 546, 547, 548, 549, 679, 550, 0,
	551, 552, 558, 559, 560, 553, 554, 561, 562, 563,
	564, 565, 0, 567, 568, 566, 569, 570, 571, 0,
	572, 573, 555, 556, 574, 575, 0, 576, 577, 578,
	579, 580, 581, 582, 680, 0, 583, 0, 584, 585,
	586, 588, 557, 589, 594, 595, 681, 590, 591, 592,
	593, 682, 597, 598, 0, 599, 600, 0, 596, 587,
	0, 601, 602, 603, 604, 605, 606, 607, 364, 608,
	0, 609, 683, 684, 685, 686, 0, 618, 0, 610,
	611, 612, 687, 613, 688, 0, 614, 615, 616, 617,
	0, 619, 620, 0, 0, 621, 622, 623, 625, 626,
	624, 627, 0, 628, 0, 0, 629, 630, 631, 689,
	690, 691, 274, 633, 632, 634, 692, 635, 636, 0,
	0, 0, 0, 637, 638, 693, 639, 640, 641, 280,
	282, 281, 283, 284, 285, 286, 0, 287, 288, 0,
	0, 0, 0, 0, 642, 0, 0, 0, 0, 289,
	290, 0, 291, 292, 293, 294, 295, 296, 643, 644,
	0, 297, 645, 298, 646, 0, 647, 299, 300, 301,
	302, 303, 304, 0, 0, 0, 305, 648, 649, 650,
	0, 306, 307, 651, 0, 0, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	0, 327, 328, 329, 0, 330, 331, 332, 0, 0,
	0, 0, 0, 0, 0, 333, 334, 335, 336, 337,
	0, 338, 340, 652, 653, 0, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	350, 351, 0, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 654, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 655, 656, 370, 0, 0, 0, 0,
	0, 0, 0, 371, 372, 373, 657, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 658, 659, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 660, 0, 661, 391, 0, 392,
	393, 394, 395, 396, 3470, 663, 664, 480, 0, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	0, 404, 405, 406, 408, 0, 0, 407, 665, 666,
	0, 667, 0, 409, 410, 0, 668, 0, 411, 412,
	413, 0, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 0, 421, 423, 422, 0, 424, 669, 0,
	425, 426, 0, 0, 427, 428, 429, 430, 431, 432,
	435, 0, 0, 433, 434, 436, 437, 0, 438, 439,
	441, 444, 440, 442, 443, 445, 458, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 460,
	0, 459, 0, 461, 462, 463, 464, 470, 472, 473,
	468, 469, 471, 474, 475, 466, 467, 0, 476, 465,
	0, 0, 0, 477, 478, 0, 670, 479, 671, 481,
	482, 0, 0, 483, 0, 0, 0, 485, 486, 487,
	0, 0, 488, 489, 672, 0, 490, 0, 673, 491,
	492, 484, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 0, 502, 503, 674, 504, 505, 506, 675, 507,
	508, 509, 676, 510, 677, 511, 512, 0, 513, 514,
	0, 515, 516, 517, 518, 519, 520, 521, 678, 522,
	523, 525, 524, 526, 0, 527, 0, 528, 529, 530,
	0, 0, 0, 0, 0, 531, 0, 533, 534, 535,
	536, 532, 537, 538, 539, 540, 541, 0, 542, 543,
	544, 0, 545, 546, 547, 548, 549, 679, 550, 0,
	551, 552, 558, 559, 560, 553, 554, 561, 562, 563,
	564, 565, 0, 567, 568, 566, 569, 570, 571, 0,
	572, 573, 555, 556, 574, 575, 0, 576, 577, 578,
	579, 580, 581, 582, 680, 0, 583, 0, 584, 585,
	586, 588, 557, 589, 594, 595, 681, 590, 591, 592,
	593, 682, 597, 598, 0, 599, 600, 0, 596, 587,
	0, 601, 602, 603, 604, 605, 606, 607, 364, 608,
	0, 609, 683, 684, 685, 686, 0, 618, 0, 610,
	611, 612, 687, 613, 688, 0, 614, 615, 616, 617,
	0, 619, 620, 0, 0, 621, 622, 623, 625, 626,
	624, 627, 0, 628, 0, 0, 629, 630, 631, 689,
	690, 691, 274, 633, 632, 634, 692, 635, 636, 0,
	0, 0, 0, 637, 638, 693, 639, 640, 641, 280,
	282, 281, 283, 284, 285, 286, 0, 287, 288, 0,
	0, 0, 0, 0, 642, 0, 0, 0, 0, 289,
	290, 0, 291, 292, 293, 294, 295, 296, 643, 644,
	0, 297, 645, 298, 646, 0, 647, 299, 300, 301,
	302, 303, 304, 0, 0, 0, 305, 648, 649, 650,
	0, 306, 307, 651, 0, 0, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	0, 327, 328, 329, 0, 330, 331, 332, 0, 0,
	0, 0, 0, 0, 0, 333, 334, 335, 336, 337,
	0, 338, 340, 652, 653, 0, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	350, 351, 0, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 654, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 655, 656, 370, 0, 0, 0, 0,
	0, 0, 0, 371, 372, 373, 657, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 658, 659, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 660, 0, 661, 391, 0, 392,
	393, 394, 395, 396, 3075, 663, 664, 480, 0, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	0, 404, 405, 406, 408, 0, 0, 407, 665, 666,
	0, 667, 0, 409, 410, 0, 668, 0, 411, 412,
	413, 0, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 0, 421, 423, 422, 0, 424, 669, 0,
	425, 426, 0, 0, 427, 428, 429, 430, 431, 432,
	435, 0, 0, 433, 434, 436, 437, 0, 438, 439,
	441, 444, 440, 442, 443, 445, 458, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 460,
	0, 459, 0, 461, 462, 463, 464, 470, 472, 473,
	468, 469, 471, 474, 475, 466, 467, 0, 476, 465,
	0, 0, 0, 477, 478, 0, 670, 479, 671, 481,
	482, 0, 0, 483, 0, 0, 0, 485, 486, 487,
	0, 0, 488, 489, 672, 0, 490, 0, 673, 491,
	492, 484, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 0, 502, 503, 674, 504, 505, 506, 675, 507,
	508, 509, 676, 510, 677, 511, 512, 0, 513, 514,
	0, 515, 516, 517, 518, 519, 520, 521, 678, 522,
	523, 525, 524, 526, 0, 527, 0, 528, 529, 530,
	0, 0, 0, 0, 0, 531, 0, 533, 534, 535,
	536, 532, 537, 538, 539, 540, 541, 0, 542, 543,
	544, 0, 545, 546, 547, 548, 549, 679, 550, 0,
	551, 552, 558, 559, 560, 553, 554, 561, 562, 563,
	564, 565, 0, 567, 568, 566, 569, 570, 571, 0,
	572, 573, 555, 556, 574, 575, 0, 576, 577, 578,
	579, 580, 581, 582, 680, 0, 583, 0, 584, 585,
	586, 588, 557, 589, 594, 595, 681, 590, 591, 592,
	593, 682, 597, 598, 0, 599, 600, 0, 596, 587,
	0, 601, 602, 603, 604, 605, 606, 607, 364, 608,
	0, 609, 683, 684, 685, 686, 0, 618, 0, 610,
	611, 612, 687, 613, 688, 0, 614, 615, 616, 617,
	0, 619, 620, 0, 0, 621, 622, 623, 625, 626,
	624, 627, 0, 628, 0, 0, 629, 630, 631, 689,
	690, 691, 274, 633, 632, 634, 692, 635, 636, 0,
	0, 0, 0, 637, 638, 693, 639, 640, 641, 280,
	282, 281, 283, 284, 285, 286, 0, 287, 288, 0,
	0, 0, 0, 0, 642, 0, 0, 0, 0, 289,
	290, 0, 291, 292, 293, 294, 295, 296, 643, 644,
	0, 297, 645, 298, 646, 0, 647, 299, 300, 301,
	302, 303, 304, 0, 0, 0, 305, 648, 649, 650,
	0, 306, 307, 651, 0, 0, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	0, 327, 328, 329, 0, 330, 331, 332, 0, 0,
	0, 0, 0, 0, 0, 333, 334, 335, 336, 337,
	0, 338, 340, 652, 653, 0, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	350, 351, 0, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 654, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 655, 656, 370, 0, 0, 0, 0,
	0, 0, 0, 371, 372, 373, 657, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 658, 659, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 660, 0, 661, 391, 0, 392,
	393, 394, 395, 396, 662, 663, 664, 480, 0, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	0, 404, 405, 406, 408, 0, 0, 407, 665, 666,
	0, 667, 0, 409, 410, 0, 668, 0, 411, 412,
	413, 0, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 0, 421, 423, 422, 0, 424, 669, 0,
	425, 426, 0, 0, 427, 428, 429, 430, 431, 432,
	435, 0, 0, 433, 434, 436, 437, 0, 438, 439,
	441, 444, 440, 442, 443, 445, 458, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 460,
	0, 459, 0, 461, 462, 463, 464, 470, 472, 473,
	468, 469, 471, 474, 475, 466, 467, 0, 476, 465,
	0, 0, 0, 477, 478, 0, 670, 479, 671, 481,
	482, 0, 0, 483, 0, 0, 0, 485, 486, 487,
	0, 0, 488, 489, 672, 0, 490, 0, 673, 491,
	492, 484, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 0, 502, 503, 674, 504, 505, 506, 675, 507,
	508, 509, 676, 510, 677, 511, 512, 0, 513, 514,
	0, 515, 516, 517, 518, 519, 520, 521, 678, 522,
	523, 525, 524, 526, 0, 527, 0, 528, 529, 530,
	0, 0, 0, 0, 0, 531, 0, 533, 534, 535,
	536, 532, 537, 538, 539, 540, 541, 0, 542, 543,
	544, 0, 545, 546, 547, 548, 549, 679, 550, 0,
	551, 552, 765, 559, 560, 553, 554, 561, 562, 563,
	564, 565, 0, 567, 568, 566, 569, 570, 571, 0,
	572, 573, 555, 556, 574, 575, 0, 576, 577, 578,
	579, 580, 581, 582, 680, 0, 583, 0, 584, 585,
	586, 588, 557, 589, 594, 595, 681, 590, 591, 592,
	593, 682, 597, 598, 0, 599, 600, 0, 596, 587,
	0, 601, 602, 603, 604, 605, 606, 607, 364, 608,
	0, 609, 683, 684, 685, 686, 0, 618, 0, 610,
	611, 612, 687, 613, 688, 0, 614, 615, 616, 617,
	0, 619, 620, 0, 0, 621, 622, 623, 625, 626,
	624, 627, 0, 628, 0, 0, 629, 630, 631, 689,
	690, 691, 274, 633, 632, 634, 692, 635, 636, 0,
	0, 0, 0, 637, 638, 693, 639, 640, 641, 280,
	282, 281, 283, 284, 285, 286, 0, 287, 288, 0,
	0, 0, 0, 0, 642, 0, 2315, 0, 0, 289,
	290, 0, 291, 292, 293, 294, 295, 296, 643, 644,
	0, 297, 645, 298, 646, 0, 647, 299, 300, 301,
	302, 303, 304, 0, 0, 0, 305, 648, 649, 650,
	0, 306, 307, 651, 0, 0, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	0, 327, 328, 329, 0, 330, 331, 332, 0, 0,
	0, 0, 0, 0, 0, 333, 334, 335, 336, 337,
	0, 338, 340, 652, 653, 0, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	350, 351, 0, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 654, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 655, 656, 370, 0, 0, 0, 0,
	0, 0, 0, 371, 372, 373, 657, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 658, 659, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 660, 0, 661, 391, 0, 392,
	393, 394, 395, 396, 662, 663, 664, 480, 0, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	0, 404, 405, 406, 408, 0, 0, 407, 665, 666,
	0, 667, 0, 409, 410, 0, 668, 0, 411, 412,
	413, 0, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 0, 421, 423, 422, 0, 424, 669, 0,
	425, 426, 0, 0, 427, 428, 429, 430, 431, 432,
	435, 0, 0, 433, 434, 436, 437, 0, 438, 439,
	441, 444, 440, 442, 443, 445, 458, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 460,
	0, 459, 0, 461, 462, 463, 464, 470, 472, 473,
	468, 469, 471, 474, 475, 466, 467, 0, 476, 465,
	0, 0, 0, 477, 478, 0, 670, 479, 671, 481,
	482, 0, 0, 483, 0, 0, 0, 485, 486, 487,
	0, 0, 488, 489, 672, 0, 490, 0, 673, 491,
	492, 484, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 0, 502, 503, 674, 504, 505, 506, 675, 507,
	508, 509, 676, 510, 677, 511, 512, 0, 513, 514,
	0, 515, 516, 517, 518, 519, 520, 521, 678, 522,
	523, 525, 524, 526, 0, 527, 0, 528, 529, 530,
	0, 0, 0, 0, 0, 531, 0, 533, 534, 535,
	536, 532, 537, 538, 539, 540, 541, 0, 542, 543,
	544, 0, 545, 546, 547, 548, 549, 679, 550, 0,
	551, 552, 558, 559, 560, 553, 554, 561, 562, 563,
	564, 565, 0, 567, 568, 566, 569, 570, 571, 0,
	0, 573, 555, 556, 574, 575, 0, 576, 577, 578,
	579, 580, 581, 582, 680, 0, 583, 0, 584, 585,
	586, 588, 557, 589, 594, 595, 681, 590, 591, 592,
	593, 682, 597, 598, 0, 599, 600, 0, 596, 587,
	0, 601, 602, 603, 604, 605, 606, 607, 364, 608,
	0, 609, 683, 684, 685, 686, 0, 618, 0, 610,
	611, 612, 687, 613, 688, 0, 614, 615, 616, 617,
	0, 619, 620, 0, 0, 621, 622, 623, 625, 626,
	624, 627, 0, 628, 0, 0, 629, 630, 631, 689,
	690, 691, 274, 633, 632, 634, 692, 635, 636, 0,
	0, 0, 0, 637, 638, 693, 639, 640, 641, 280,
	282, 281, 283, 284, 285, 286, 0, 287, 288, 0,
	0, 0, 0, 0, 642, 0, 0, 0, 0, 289,
	290, 0, 291, 292, 293, 294, 295, 296, 643, 644,
	0, 297, 645, 298, 646, 0, 647, 299, 300, 301,
	302, 303, 304, 0, 0, 0, 305, 648, 649, 650,
	0, 306, 307, 651, 0, 0, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	0, 327, 328, 329, 0, 330, 331, 332, 0, 0,
	0, 0, 0, 0, 0, 333, 334, 335, 336, 337,
	0, 338, 340, 652, 653, 0, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	350, 351, 0, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 654, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 655, 656, 370, 0, 0, 0, 0,
	0, 0, 0, 371, 372, 373, 657, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 658, 659, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 660, 0, 661, 391, 0, 392,
	393, 394, 395, 396, 1298, 663, 664, 480, 0, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	0, 404, 405, 406, 408, 0, 0, 407, 665, 666,
	0, 667, 0, 409, 410, 0, 668, 0, 411, 412,
	413, 0, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 0, 421, 423, 422, 0, 424, 669, 0,
	425, 426, 0, 0, 427, 428, 429, 430, 431, 432,
	435, 0, 0, 433, 434, 436, 437, 0, 438, 439,
	441, 444, 440, 442, 443, 445, 458, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 460,
	0, 459, 0, 461, 462, 463, 464, 470, 472, 473,
	468, 469, 471, 474, 475, 466, 467, 0, 476, 465,
	0, 0, 0, 477, 478, 0, 670, 479, 671, 481,
	482, 0, 0, 483, 0, 0, 0, 485, 486, 487,
	0, 0, 488, 489, 672, 0, 490, 0, 673, 491,
	492, 484, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 0, 502, 503, 674, 504, 505, 506, 675, 507,
	508, 509, 676, 510, 677, 511, 512, 0, 513, 514,
	0, 515, 516, 517, 518, 519, 520, 521, 678, 522,
	523, 525, 524, 526, 0, 527, 0, 528, 529, 530,
	0, 0, 0, 0, 0, 531, 0, 533, 534, 535,
	536, 532, 537, 538, 539, 540, 541, 0, 542, 543,
	544, 0, 545, 546, 547, 548, 549, 679, 550, 0,
	551, 552, 558, 559, 560, 553, 554, 561, 562, 563,
	564, 565, 0, 567, 568, 566, 569, 570, 571, 0,
	572, 573, 555, 556, 574, 575, 0, 576, 577, 578,
	579, 580, 581, 582, 680, 0, 583, 0, 584, 585,
	586, 588, 557, 589, 594, 595, 681, 590, 591, 592,
	593, 682, 597, 598, 0, 599, 600, 0, 596, 587,
	0, 601, 602, 603, 604, 605, 606, 607, 364, 608,
	0, 609, 683, 684, 685, 686, 0, 618, 0, 610,
	611, 612, 687, 613, 688, 0, 614, 615, 616, 617,
	0, 619, 620, 0, 0, 621, 622, 623, 625, 626,
	624, 627, 0, 628, 0, 0, 629, 630, 631, 689,
	690, 691, 274, 633, 632, 634, 692, 635, 636, 0,
	0, 0, 0, 637, 638, 693, 639, 640, 641, 280,
	282, 281, 283, 284, 285, 286, 0, 287, 288, 0,
	0, 0, 0, 0, 642, 0, 0, 0, 0, 289,
	290, 0, 291, 292, 293, 294, 295, 296, 643, 644,
	0, 297, 645, 298, 646, 0, 647, 299, 300, 301,
	302, 303, 304, 0, 0, 0, 305, 648, 649, 650,
	0, 306, 307, 651, 0, 0, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	0, 327, 328, 329, 0, 330, 331, 332, 0, 0,
	0, 0, 0, 0, 0, 333, 334, 335, 336, 337,
	0, 338, 340, 652, 653, 0, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	350, 351, 0, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 654, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 655, 656, 370, 0, 0, 0, 0,
	0, 0, 0, 371, 372, 373, 657, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 658, 659, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 660, 0, 661, 391, 0, 392,
	393, 394, 395, 396, 662, 663, 664, 480, 0, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	0, 404, 405, 406, 408, 0, 0, 407, 665, 666,
	0, 667, 0, 409, 410, 0, 668, 0, 411, 412,
	413, 0, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 0, 421, 423, 422, 0, 424, 669, 0,
	425, 426, 0, 0, 427, 428, 429, 430, 431, 432,
	435, 0, 0, 433, 434, 436, 437, 0, 438, 439,
	441, 444, 440, 442, 443, 445, 458, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 460,
	0, 459, 0, 461, 462, 463, 464, 470, 472, 473,
	468, 469, 471, 474, 475, 466, 467, 0, 476, 465,
	0, 0, 0, 477, 478, 0, 670, 479, 671, 481,
	482, 0, 0, 483, 0, 0, 0, 485, 486, 487,
	0, 0, 488, 489, 672, 0, 490, 0, 673, 491,
	492, 484, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 0, 502, 503, 674, 504, 505, 506, 675, 507,
	508, 509, 676, 510, 677, 511, 512, 0, 513, 514,
	0, 515, 516, 517, 518, 519, 520, 521, 678, 522,
	523, 1230, 524, 526, 0, 527, 0, 528, 529, 530,
	0, 0, 0, 0, 0, 531, 0, 533, 534, 535,
	536, 532, 537, 538, 539, 540, 541, 0, 542, 543,
	544, 0, 545, 546, 547, 548, 549, 679, 550, 0,
	551, 552, 558, 559, 560, 553, 554, 561, 562, 563,
	564, 565, 0, 567, 568, 566, 569, 570, 571, 0,
	572, 573, 555, 556, 574, 575, 0, 576, 577, 578,
	579, 580, 581, 582, 680, 0, 583, 0, 584, 585,
	586, 588, 557, 589, 594, 595, 681, 590, 591, 592,
	593, 682, 597, 598, 0, 599, 600, 0, 596, 587,
	0, 601, 602, 603, 604, 605, 606, 607, 364, 608,
	0, 609, 683, 684, 685, 686, 0, 618, 0, 610,
	611, 612, 687, 613, 688, 0, 614, 615, 616, 617,
	0, 619, 620, 0, 0, 621, 622, 623, 625, 626,
	624, 627, 0, 628, 0, 0, 629, 630, 631, 689,
	690, 691, 274, 633, 632, 634, 692, 635, 636, 0,
	0, 0, 0, 637, 638, 693, 639, 640, 641, 280,
	282, 281, 283, 284, 285, 286, 0, 287, 288, 0,
	0, 0, 0, 0, 642, 0, 0, 0, 0, 289,
	290, 0, 291, 292, 293, 294, 295, 296, 643, 644,
	0, 297, 645, 298, 646, 0, 647, 299, 300, 301,
	302, 303, 304, 0, 0, 0, 305, 648, 649, 650,
	0, 306, 307, 651, 0, 0, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	0, 327, 328, 329, 0, 330, 331, 332, 0, 0,
	0, 0, 0, 0, 0, 333, 334, 335, 336, 337,
	0, 338, 340, 652, 653, 0, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	350, 351, 0, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 654, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 655, 656, 370, 0, 0, 0, 0,
	0, 0, 0, 371, 372, 373, 657, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 658, 659, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 660, 0, 661, 0, 0, 392,
	393, 394, 395, 396, 662, 663, 664, 480, 0, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	0, 404, 405, 406, 408, 0, 0, 407, 665, 666,
	0, 667, 0, 409, 410, 0, 668, 0, 411, 412,
	413, 0, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 0, 421, 423, 422, 0, 424, 669, 0,
	425, 426, 0, 0, 427, 428, 429, 430, 431, 432,
	435, 0, 0, 433, 434, 436, 437, 0, 438, 439,
	441, 444, 440, 442, 443, 445, 458, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 460,
	0, 459, 0, 461, 462, 463, 464, 470, 472, 473,
	468, 469, 471, 474, 475, 466, 467, 0, 476, 465,
	0, 0, 0, 477, 478, 0, 670, 479, 671, 481,
	482, 0, 0, 483, 0, 0, 0, 485, 486, 487,
	0, 0, 488, 489, 672, 0, 490, 0, 673, 491,
	492, 484, 493, 494, 0, 496, 497, 498, 499, 500,
	501, 0, 502, 503, 674, 504, 505, 506, 675, 507,
	508, 509, 676, 510, 677, 511, 512, 0, 513, 514,
	0, 515, 516, 517, 518, 0, 520, 521, 678, 522,
	523, 525, 524, 526, 0, 527, 0, 528, 529, 530,
	0, 0, 0, 0, 0, 531, 0, 533, 534, 535,
	536, 532, 537, 538, 539, 540, 541, 0, 542, 543,
	544, 0, 545, 546, 547, 548, 549, 679, 0, 0,
	551, 552, 558, 559, 560, 553, 554, 561, 562, 563,
	564, 565, 0, 567, 568, 566, 569, 570, 571, 0,
	572, 573, 555, 556, 574, 575, 0, 576, 577, 578,
	579, 580, 581, 582, 680, 0, 583, 0, 584, 585,
	586, 588, 557, 589, 594, 595, 681, 590, 591, 592,
	593, 682, 597, 598, 0, 599, 600, 0, 596, 587,
	0, 601, 602, 603, 604, 605, 606, 607, 364, 608,
	0, 609, 683, 684, 685, 686, 0, 618, 0, 610,
	611, 612, 687, 613, 688, 0, 614, 615, 616, 617,
	0, 619, 620, 0, 0, 621, 622, 623, 625, 626,
	624, 627, 0, 628, 0, 0, 629, 630, 631, 689,
	690, 691, 0, 633, 632, 634, 692, 635, 636, 0,
	0, 0, 0, 637, 638, 693, 639, 640, 641, 1809,
	1810, 0, 1842, 1843, 1844, 1853, 1854, 1855, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1846, 1840, 0, 0, 0, 0, 0, 0, 1812,
	0, 0, 0, 0, 0, 0, 0, 0, 1859, 0,
	1809, 1810, 0, 1842, 1843, 1844, 1853, 1854, 1855, 0,
	0, 0, 0, 0, 0, 1865, 0, 0, 0, 0,
	0, 0, 1846, 1840, 1811, 0, 0, 0, 0, 0,
	1812, 0, 0, 0, 1831, 0, 0, 0, 0, 1859,
	0, 0, 0, 1828, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1865, 0, 0, 0,
	0, 0, 0, 0, 0, 1811, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1831, 0, 0, 0, 0,
	0, 0, 0, 0, 1828, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1834,
	1835, 1836, 1837, 0, 0, 0, 0, 0, 0, 1817,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1834, 1835, 1836, 1837, 0, 0, 0, 0, 1850, 0,
	1817, 1860, 0, 0, 0, 0, 0, 0, 1839, 1841,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1856, 0, 1857, 0, 0,
	0, 0, 0, 0, 1826, 1827, 0, 0, 0, 1850,
	0, 0, 1860, 0, 0, 0, 0, 0, 0, 1839,
	1841, 0, 1848, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1856, 1832, 1857, 0,
	0, 0, 0, 0, 0, 1826, 1827, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1848, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1832, 0,
	0, 0, 1858, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1847, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1862, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1858, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1847, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1862, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1838, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1833,
	0, 0, 0, 0, 0, 1809, 1810, 0, 1842, 1843,
	1844, 1853, 1854, 1855, 0, 0, 0, 1838, 0, 0,
	0, 0, 0, 0, 0, 0, 1851, 1846, 1840, 0,
	0, 0, 0, 0, 0, 1812, 0, 0, 0, 0,
	1833, 0, 0, 0, 1859, 0, 1809, 1810, 0, 1842,
	1843, 1844, 1853, 1854, 1855, 0, 0, 1864, 0, 0,
	0, 1865, 0, 0, 0, 0, 0, 1851, 1846, 1840,
	1811, 0, 0, 0, 0, 0, 1812, 0, 0, 0,
	1831, 0, 0, 0, 0, 1859, 0, 0, 0, 1828,
	0, 0, 0, 0, 0, 0, 0, 0, 1864, 0,
	0, 0, 1865, 0, 0, 0, 0, 0, 0, 0,
	0, 1811, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1831, 0, 0, 0, 0, 0, 0, 0, 1849,
	1828, 0, 0, 0, 0, 0, 0, 0, 0, 1823,
	1824, 1830, 1852, 1829, 1825, 0, 1822, 1820, 1821, 1813,
	1814, 1815, 1816, 1818, 1819, 0, 0, 0, 0, 4691,
	0, 0, 0, 0, 0, 1834, 1835, 1836, 1837, 0,
	1849, 0, 0, 0, 0, 1817, 0, 0, 0, 0,
	1823, 1824, 1830, 1852, 1829, 1825, 0, 1822, 1820, 1821,
	1813, 1814, 1815, 1816, 1818, 1819, 0, 0, 0, 0,
	4687, 0, 0, 0, 0, 0, 1834, 1835, 1836, 1837,
	0, 0, 0, 0, 1850, 0, 1817, 1860, 0, 0,
	0, 0, 0, 0, 1839, 1841, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1856, 0, 1857, 0, 0, 0, 0, 0, 0,
	1826, 1827, 0, 0, 0, 1850, 0, 0, 1860, 0,
	0, 0, 0, 0, 0, 1839, 1841, 0, 1848, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1856, 1832, 1857, 0, 0, 0, 0, 0,
	0, 1826, 1827, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1848,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1832, 0, 0, 0, 1858, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1847, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1862, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1858,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1847, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1862, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1838, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1833, 0, 0, 0, 0,
	0, 1809, 1810, 0, 1842, 1843, 1844, 1853, 1854, 1855,
	0, 0, 0, 1838, 0, 0, 0, 0, 0, 0,
	0, 0, 1851, 1846, 1840, 0, 0, 0, 0, 0,
	0, 1812, 0, 0, 0, 0, 1833, 0, 0, 0,
	1859, 0, 1809, 1810, 0, 1842, 1843, 1844, 1853, 1854,
	1855, 0, 0, 1864, 0, 0, 0, 1865, 0, 0,
	0, 0, 0, 1851, 1846, 1840, 1811, 0, 0, 0,
	0, 0, 1812, 0, 0, 0, 1831, 0, 0, 0,
	0, 1859, 0, 0, 0, 1828, 0, 0, 0, 0,
	0, 0, 0, 0, 1864, 0, 0, 0, 1865, 0,
	0, 0, 0, 0, 0, 0, 0, 1811, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1831, 0, 0,
	0, 0, 0, 0, 0, 1849, 1828, 0, 0, 0,
	0, 0, 0, 0, 0, 1823, 1824, 1830, 1852, 1829,
	1825, 0, 1822, 1820, 1821, 1813, 1814, 1815, 1816, 1818,
	1819, 0, 0, 0, 0, 4602, 0, 0, 0, 0,
	0, 1834, 1835, 1836, 1837, 0, 1849, 0, 0, 0,
	0, 1817, 0, 0, 0, 0, 1823, 1824, 1830, 1852,
	1829, 1825, 0, 1822, 1820, 1821, 1813, 1814, 1815, 1816,
	1818, 1819, 0, 0, 0, 0, 4560, 0, 0, 0,
	0, 0, 1834, 1835, 1836, 1837, 0, 0, 0, 0,
	1850, 0, 1817, 1860, 0, 0, 0, 0, 0, 0,
	1839, 1841, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1856, 0, 1857,
	0, 0, 0, 0, 0, 0, 1826, 1827, 0, 0,
	0, 1850, 0, 0, 1860, 0, 0, 0, 0, 0,
	0, 1839, 1841, 0, 1848, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1856, 1832,
	1857, 0, 0, 0, 0, 0, 0, 1826, 1827, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1848, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1832, 0, 0, 0, 1858, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1847, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1862, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1858, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1847, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1862, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1838, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1833, 0, 0, 0, 0, 0, 1809, 1810, 0,
	1842, 1843, 1844, 1853, 1854, 1855, 0, 0, 0, 1838,
	0, 0, 0, 0, 0, 0, 0, 0, 1851, 1846,
	1840, 0, 0, 0, 0, 0, 0, 1812, 0, 0,
	0, 0, 1833, 0, 0, 0, 1859, 0, 1809, 1810,
	0, 1842, 1843, 1844, 1853, 1854, 1855, 0, 0, 1864,
	0, 0, 0, 1865, 0, 0, 0, 0, 0, 1851,
	1846, 1840, 1811, 0, 0, 0, 0, 0, 1812, 0,
	0, 0, 1831, 0, 0, 0, 0, 1859, 0, 0,
	0, 1828, 0, 0, 0, 0, 0, 0, 0, 0,
	1864, 0, 0, 0, 1865, 0, 0, 0, 0, 0,
	0, 0, 0, 1811, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1831, 0, 0, 0, 0, 0, 0,
	0, 1849, 1828, 0, 0, 0, 0, 0, 0, 0,
	0, 1823, 1824, 1830, 1852, 1829, 1825, 0, 1822, 1820,
	1821, 1813, 1814, 1815, 1816, 1818, 1819, 0, 0, 0,
	0, 4559, 0, 0, 0, 0, 0, 1834, 1835, 1836,
	1837, 0, 1849, 0, 0, 0, 0, 1817, 0, 0,
	0, 0, 1823, 1824, 1830, 1852, 1829, 1825, 0, 1822,
	1820, 1821, 1813, 1814, 1815, 1816, 1818, 1819, 0, 0,
	0, 0, 4369, 0, 0, 0, 0, 0, 1834, 1835,
	1836, 1837, 0, 0, 0, 0, 1850, 0, 1817, 1860,
	0, 0, 0, 0, 0, 0, 1839, 1841, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1856, 0, 1857, 0, 0, 0, 0,
	0, 0, 1826, 1827, 0, 0, 0, 1850, 0, 0,
	1860, 0, 0, 0, 0, 0, 0, 1839, 1841, 0,
	1848, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1856, 1832, 1857, 0, 0, 0,
	0, 0, 0, 1826, 1827, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1848, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1832, 0, 0, 0,
	1858, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1847, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1862,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1858, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1847,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1862, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1838, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1833, 0, 0,
	0, 0, 0, 1809, 1810, 0, 1842, 1843, 1844, 1853,
	1854, 1855, 0, 0, 0, 1838, 0, 0, 0, 0,
	0, 0, 0, 0, 1851, 1846, 1840, 0, 0, 0,
	0, 0, 0, 1812, 0, 0, 0, 0, 1833, 0,
	0, 0, 1859, 0, 1809, 1810, 0, 1842, 1843, 1844,
	1853, 1854, 1855, 0, 0, 1864, 0, 0, 0, 1865,
	0, 0, 0, 0, 0, 1851, 1846, 1840, 1811, 0,
	0, 0, 0, 0, 1812, 0, 0, 0, 1831, 0,
	0, 0, 0, 1859, 0, 0, 0, 1828, 0, 0,
	0, 0, 0, 0, 0, 0, 1864, 0, 0, 0,
	1865, 0, 0, 0, 0, 0, 0, 0, 0, 1811,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1831,
	0, 0, 0, 0, 0, 0, 0, 1849, 1828, 0,
	0, 0, 0, 0, 0, 0, 0, 1823, 1824, 1830,
	1852, 1829, 1825, 0, 1822, 1820, 1821, 1813, 1814, 1815,
	1816, 1818, 1819, 0, 0, 0, 0, 4201, 0, 0,
	0, 0, 0, 1834, 1835, 1836, 1837, 0, 1849, 0,
	0, 0, 0, 1817, 0, 0, 0, 0, 1823, 1824,
	1830, 1852, 1829, 1825, 0, 1822, 1820, 1821, 1813, 1814,
	1815, 1816, 1818, 1819, 0, 0, 0, 0, 4129, 0,
	0, 0, 0, 0, 1834, 1835, 1836, 1837, 0, 0,
	0, 0, 1850, 0, 1817, 1860, 0, 0, 0, 0,
	0, 0, 1839, 1841, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1856,
	0, 1857, 0, 0, 0, 0, 0, 0, 1826, 1827,
	0, 0, 0, 1850, 0, 0, 1860, 0, 0, 0,
	0, 0, 0, 1839, 1841, 0, 1848, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1856, 1832, 1857, 0, 0, 0, 0, 0, 0, 1826,
	1827, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1848, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1832, 0, 0, 0, 1858, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1847, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1862, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1858, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1847, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1862, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1838, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1833, 0, 0, 0, 0, 0, 1809,
	1810, 0, 1842, 1843, 1844, 1853, 1854, 1855, 0, 0,
	0, 1838, 0, 0, 0, 0, 0, 0, 0, 0,
	1851, 1846, 1840, 0, 0, 0, 0, 0, 0, 1812,
	0, 0, 0, 0, 1833, 0, 0, 0, 1859, 0,
	1809, 1810, 0, 1842, 1843, 1844, 1853, 1854, 1855, 0,
	0, 1864, 0, 0, 0, 1865, 0, 0, 0, 0,
	0, 1851, 1846, 1840, 1811, 0, 0, 0, 0, 0,
	1812, 0, 0, 0, 1831, 0, 0, 0, 0, 1859,
	0, 0, 0, 1828, 0, 0, 0, 0, 0, 0,
	0, 0, 1864, 0, 0, 0, 1865, 0, 0, 0,
	0, 0, 0, 0, 0, 1811, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1831, 0, 0, 0, 0,
	0, 0, 0, 1849, 1828, 0, 0, 0, 0, 0,
	0, 0, 0, 1823, 1824, 1830, 1852, 1829, 1825, 0,
	1822, 1820, 1821, 1813, 1814, 1815, 1816, 1818, 1819, 0,
	0, 0, 0, 4128, 0, 0, 0, 0, 0, 1834,
	1835, 1836, 1837, 0, 1849, 0, 0, 0, 0, 1817,
	0, 0, 0, 0, 1823, 1824, 1830, 1852, 1829, 1825,
	0, 1822, 1820, 1821, 1813, 1814, 1815, 1816, 1818, 1819,
	0, 0, 0, 0, 4127, 0, 0, 0, 0, 0,
	1834, 1835, 1836, 1837, 0, 0, 0, 0, 1850, 0,
	1817, 1860, 0, 0, 0, 0, 0, 0, 1839, 1841,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1856, 0, 1857, 0, 0,
	0, 0, 0, 0, 1826, 1827, 0, 0, 0, 1850,
	0, 0, 1860, 0, 0, 0, 0, 0, 0, 1839,
	1841, 0, 1848, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1856, 1832, 1857, 0,
	0, 0, 0, 0, 0, 1826, 1827, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1848, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1832, 0,
	0, 0, 1858, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1847, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1862, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1858, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1847, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1862, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1838, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1833,
	0, 0, 0, 0, 0, 1809, 1810, 0, 1842, 1843,
	1844, 1853, 1854, 1855, 0, 0, 0, 1838, 0, 0,
	0, 0, 0, 0, 0, 0, 1851, 1846, 1840, 0,
	0, 0, 0, 0, 0, 1812, 0, 0, 0, 0,
	1833, 0, 0, 0, 1859, 0, 1809, 1810, 0, 1842,
	1843, 1844, 1853, 1854, 1855, 0, 0, 1864, 0, 0,
	0, 1865, 0, 0, 0, 0, 0, 1851, 1846, 1840,
	1811, 0, 0, 0, 0, 0, 1812, 0, 0, 0,
	1831, 0, 0, 0, 0, 1859, 0, 0, 0, 1828,
	0, 0, 0, 0, 0, 0, 0, 0, 1864, 0,
	0, 0, 1865, 0, 0, 0, 0, 0, 0, 0,
	0, 1811, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1831, 0, 0, 0, 0, 0, 0, 0, 1849,
	1828, 0, 0, 0, 0, 0, 0, 0, 0, 1823,
	1824, 1830, 1852, 1829, 1825, 0, 1822, 1820, 1821, 1813,
	1814, 1815, 1816, 1818, 1819, 0, 0, 0, 0, 3782,
	0, 0, 0, 0, 0, 1834, 1835, 1836, 1837, 0,
	1849, 0, 0, 0, 0, 1817, 0, 0, 0, 0,
	1823, 1824, 1830, 1852, 1829, 1825, 0, 1822, 1820, 1821,
	1813, 1814, 1815, 1816, 1818, 1819, 0, 0, 0, 0,
	3283, 0, 0, 0, 0, 0, 1834, 1835, 1836, 1837,
	0, 0, 0, 0, 1850, 0, 1817, 1860, 0, 0,
	0, 0, 0, 0, 1839, 1841, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1856, 0, 1857, 0, 0, 0, 0, 0, 0,
	1826, 1827, 0, 0, 0, 1850, 0, 0, 1860, 0,
	0, 0, 0, 0, 0, 1839, 1841, 0, 1848, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1856, 1832, 1857, 0, 0, 0, 0, 0,
	0, 1826, 1827, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1848,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1832, 0, 0, 0, 1858, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1847, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1862, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1858,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1847, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1862, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1838, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1833, 0, 0, 0, 0,
	0, 1809, 1810, 0, 1842, 1843, 1844, 1853, 1854, 1855,
	0, 0, 0, 1838, 0, 0, 0, 0, 0, 0,
	0, 0, 1851, 1846, 1840, 0, 0, 0, 0, 0,
	0, 1812, 0, 0, 0, 0, 1833, 0, 0, 0,
	1859, 0, 1809, 1810, 0, 1842, 1843, 1844, 1853, 1854,
	1855, 0, 0, 1864, 0, 0, 0, 1865, 0, 0,
	0, 0, 0, 1851, 1846, 1840, 1811, 0, 0, 0,
	0, 0, 1812, 0, 0, 0, 1831, 0, 0, 0,
	0, 1859, 0, 0, 0, 1828, 0, 0, 0, 0,
	0, 0, 0, 0, 1864, 0, 0, 0, 1865, 0,
	0, 0, 0, 0, 0, 0, 0, 1811, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1831, 0, 0,
	0, 0, 0, 0, 0, 1849, 1828, 0, 0, 0,
	0, 0, 0, 0, 0, 1823, 1824, 1830, 1852, 1829,
	1825, 0, 1822, 1820, 1821, 1813, 1814, 1815, 1816, 1818,
	1819, 0, 0, 0, 0, 3282, 0, 0, 0, 0,
	0, 1834, 1835, 1836, 1837, 0, 1849, 0, 0, 0,
	0, 1817, 0, 0, 0, 0, 1823, 1824, 1830, 1852,
	1829, 1825, 0, 1822, 1820, 1821, 1813, 1814, 1815, 1816,
	1818, 1819, 0, 0, 0, 0, 3281, 0, 0, 0,
	0, 0, 1834, 1835, 1836, 1837, 0, 0, 0, 0,
	1850, 0, 1817, 1860, 0, 0, 0, 0, 0, 0,
	1839, 1841, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1856, 0, 1857,
	0, 0, 0, 0, 0, 0, 1826, 1827, 0, 0,
	0, 1850, 0, 0, 1860, 0, 0, 0, 0, 0,
	0, 1839, 1841, 0, 1848, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1856, 1832,
	1857, 0, 0, 0, 0, 0, 0, 1826, 1827, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1848, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1832, 0, 0, 0, 1858, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1847, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1862, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1858, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1847, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1862, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1838, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1833, 0, 0, 0, 0, 0, 1809, 1810, 0,
	1842, 1843, 1844, 1853, 1854, 1855, 0, 0, 0, 1838,
	0, 0, 0, 0, 0, 0, 0, 0, 1851, 1846,
	1840, 0, 0, 0, 0, 0, 0, 1812, 0, 0,
	0, 0, 1833, 0, 0, 0, 1859, 0, 1809, 1810,
	0, 1842, 1843, 1844, 1853, 1854, 1855, 0, 0, 1864,
	0, 0, 0, 1865, 0, 0, 0, 0, 0, 1851,
	1846, 1840, 1811, 0, 0, 0, 0, 0, 1812, 0,
	0, 0, 1831, 0, 0, 0, 0, 1859, 0, 0,
	0, 1828, 0, 0, 0, 0, 0, 0, 0, 0,
	1864, 0, 0, 0, 1865, 0, 0, 0, 0, 0,
	0, 0, 0, 1811, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1831, 0, 0, 0, 0, 0, 0,
	0, 1849, 1828, 0, 0, 0, 0, 0, 0, 0,
	0, 1823, 1824, 1830, 1852, 1829, 1825, 0, 1822, 1820,
	1821, 1813, 1814, 1815, 1816, 1818, 1819, 0, 0, 0,
	0, 3280, 0, 0, 0, 0, 0, 1834, 1835, 1836,
	1837, 0, 1849, 0, 0, 0, 0, 1817, 4840, 0,
	0, 0, 1823, 1824, 1830, 1852, 1829, 1825, 0, 1822,
	1820, 1821, 1813, 1814, 1815, 1816, 1818, 1819, 0, 0,
	3245, 0, 0, 0, 0, 0, 0, 0, 1834, 1835,
	1836, 1837, 0, 0, 0, 0, 1850, 0, 1817, 1860,
	3345, 0, 0, 0, 0, 3344, 1839, 1841, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1856, 0, 1857, 0, 0, 0, 0,
	0, 0, 1826, 1827, 0, 0, 0, 1850, 0, 0,
	1860, 0, 0, 0, 0, 0, 0, 1839, 1841, 0,
	1848, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1856, 1832, 1857, 0, 0, 0,
	0, 0, 0, 1826, 1827, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1848, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1832, 0, 0, 0,
	1858, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1847, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1862,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1858, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4839, 0, 0, 0, 0, 0, 0, 0, 1847,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1862, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1838, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1809, 1810, 1833, 1842, 1843,
	1844, 1853, 1854, 1855, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1838, 0, 1846, 1840, 0,
	0, 0, 0, 3216, 1851, 1812, 0, 0, 0, 2753,
	0, 0, 0, 0, 1859, 0, 1809, 1810, 1833, 1842,
	1843, 1844, 1853, 1854, 1855, 0, 0, 0, 0, 0,
	0, 1865, 0, 0, 0, 1864, 0, 0, 1846, 1840,
	1811, 0, 0, 2752, 0, 1851, 1812, 0, 0, 0,
	1831, 0, 0, 0, 0, 1859, 0, 0, 0, 1828,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1865, 0, 0, 0, 1864, 0, 0, 0,
	0, 1811, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1831, 0, 0, 0, 0, 0, 0, 0, 3217,
	1828, 0, 0, 0, 0, 0, 0, 1849, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1823, 1824, 1830,
	1852, 1829, 1825, 0, 1822, 1820, 1821, 1813, 1814, 1815,
	1816, 1818, 1819, 0, 0, 1834, 1835, 1836, 1837, 0,
	0, 0, 0, 0, 0, 1817, 0, 0, 1849, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1823, 1824,
	1830, 1852, 1829, 1825, 0, 1822, 1820, 1821, 1813, 1814,
	1815, 1816, 1818, 1819, 0, 0, 1834, 1835, 1836, 1837,
	0, 0, 0, 0, 1850, 0, 1817, 1860, 0, 0,
	0, 0, 0, 0, 1839, 1841, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1856, 0, 1857, 0, 0, 0, 0, 0, 0,
	1826, 1827, 0, 0, 0, 1850, 0, 0, 1860, 0,
	0, 0, 0, 0, 0, 1839, 1841, 0, 1848, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1856, 1832, 1857, 0, 0, 0, 0, 0,
	0, 1826, 1827, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1848,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1832, 0, 0, 0, 1858, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1847, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1862, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1858,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1847, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1862, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1838, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1809, 1810, 1833, 1842, 1843, 1844, 1853,
	1854, 1855, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1838, 0, 1846, 1840, 0, 0, 0,
	0, 0, 1851, 1812, 0, 0, 0, 0, 0, 0,
	0, 0, 1859, 0, 1809, 1810, 1833, 1842, 1843, 1844,
	1853, 1854, 1855, 0, 0, 0, 0, 0, 0, 1865,
	0, 0, 0, 1864, 0, 0, 1846, 1840, 1811, 0,
	0, 0, 0, 1851, 1812, 0, 0, 0, 1831, 0,
	0, 0, 0, 1859, 0, 0, 0, 1828, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1865, 0, 0, 0, 1864, 0, 0, 0, 0, 1811,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1831,
	0, 0, 0, 0, 0, 0, 0, 0, 1828, 0,
	0, 0, 0, 0, 0, 1849, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1823, 1824, 1830, 1852, 1829,
	1825, 0, 1822, 1820, 1821, 1813, 1814, 1815, 1816, 1818,
	1819, 0, 0, 1834, 1835, 1836, 1837, 0, 0, 0,
	0, 0, 0, 1817, 0, 0, 1849, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1823, 1824, 1830, 1852,
	1829, 1825, 0, 1822, 1820, 1821, 1813, 1814, 1815, 1816,
	1818, 1819, 0, 0, 1834, 1835, 1836, 1837, 0, 0,
	0, 0, 1850, 0, 1817, 1860, 0, 0, 0, 0,
	0, 0, 1839, 1841, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1856,
	0, 1857, 0, 0, 0, 0, 0, 0, 1826, 1827,
	0, 0, 0, 1850, 0, 0, 1860, 0, 0, 0,
	0, 0, 0, 1839, 1841, 0, 1848, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1856, 1832, 1857, 0, 0, 0, 0, 0, 0, 1826,
	1827, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1848, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1832, 0, 0, 0, 1858, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1847, 1084, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1862, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1858, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1847, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1862, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1838, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1809, 1810, 1833, 1842, 1843, 1844, 1853, 1854, 1855,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1838, 0, 1846, 1840, 0, 0, 0, 0, 0,
	1851, 1812, 0, 0, 0, 0, 0, 0, 0, 0,
	1859, 0, 1809, 1810, 1833, 1842, 1843, 1844, 1853, 1854,
	1855, 0, 0, 0, 0, 0, 0, 1865, 0, 0,
	0, 1864, 0, 0, 1846, 1840, 1811, 0, 0, 3346,
	0, 1851, 1812, 0, 0, 0, 1831, 0, 0, 0,
	0, 1859, 0, 0, 0, 1828, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1865, 0,
	0, 0, 1864, 0, 0, 0, 0, 1811, 0, 0,
	0, 0, 0, 0, 0, 3763, 0, 1831, 0, 0,
	0, 0, 0, 0, 0, 0, 1828, 0, 0, 0,
	0, 0, 0, 1849, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1823, 1824, 1830, 1852, 1829, 1825, 0,
	1822, 1820, 1821, 1813, 1814, 1815, 1816, 1818, 1819, 0,
	0, 1834, 1835, 1836, 1837, 0, 0, 0, 0, 0,
	0, 1817, 0, 0, 1849, 0, 0, 0, 3351, 0,
	0, 0, 0, 0, 1823, 1824, 1830, 1852, 1829, 1825,
	0, 1822, 1820, 1821, 1813, 1814, 1815, 1816, 1818, 1819,
	0, 0, 1834, 1835, 1836, 1837, 0, 0, 0, 0,
	1850, 0, 1817, 1860, 0, 0, 0, 0, 0, 0,
	1839, 1841, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1856, 0, 1857,
	0, 0, 0, 0, 0, 0, 1826, 1827, 0, 0,
	0, 1850, 0, 0, 1860, 0, 0, 0, 0, 0,
	0, 1839, 1841, 0, 1848, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1856, 1832,
	1857, 0, 0, 0, 0, 0, 0, 1826, 1827, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1848, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1832, 0, 0, 0, 1858, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1847, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1862, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1858, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1847, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1862, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1838, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1809,
	1810, 1833, 1842, 1843, 1844, 1853, 1854, 1855, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1838,
	0, 1846, 1840, 0, 0, 0, 0, 0, 1851, 1812,
	0, 0, 0, 0, 0, 0, 0, 0, 1859, 0,
	1809, 1810, 1833, 1842, 1843, 1844, 1853, 1854, 1855, 0,
	0, 0, 0, 0, 0, 1865, 0, 0, 0, 1864,
	0, 0, 1846, 1840, 1811, 0, 0, 3284, 0, 1851,
	1812, 0, 0, 0, 1831, 0, 0, 0, 0, 1859,
	0, 0, 0, 1828, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1865, 0, 0, 0,
	1864, 0, 0, 0, 0, 1811, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1831, 0, 0, 0, 0,
	0, 0, 0, 0, 1828, 0, 0, 0, 0, 0,
	0, 1849, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1823, 1824, 1830, 1852, 1829, 1825, 0, 1822, 1820,
	1821, 1813, 1814, 1815, 1816, 1818, 1819, 0, 0, 1834,
	1835, 1836, 1837, 0, 0, 0, 0, 0, 0, 1817,
	0, 0, 1849, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1823, 1824, 1830, 1852, 1829, 1825, 0, 1822,
	1820, 1821, 1813, 1814, 1815, 1816, 1818, 1819, 0, 0,
	1834, 1835, 1836, 1837, 0, 0, 0, 0, 1850, 0,
	1817, 1860, 0, 0, 0, 0, 0, 0, 1839, 1841,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1856, 0, 1857, 0, 0,
	0, 0, 0, 0, 1826, 1827, 0, 0, 0, 1850,
	0, 0, 1860, 0, 0, 0, 0, 0, 0, 1839,
	1841, 0, 1848, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1856, 1832, 1857, 0,
	0, 0, 0, 0, 0, 1826, 1827, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1848, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1832, 0,
	0, 0, 1858, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1847, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1862, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3311, 0, 1858, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1847, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1862, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1838, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1809, 1810, 1833,
	1842, 1843, 1844, 1853, 1854, 1855, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1838, 0, 1846,
	1840, 0, 0, 0, 0, 0, 1851, 1812, 0, 0,
	0, 0, 0, 0, 0, 0, 1859, 0, 1809, 1810,
	1833, 1842, 1843, 1844, 1853, 1854, 1855, 0, 0, 0,
	0, 0, 0, 1865, 0, 0, 0, 1864, 0, 0,
	1846, 1840, 1811, 0, 0, 0, 0, 1851, 1812, 0,
	0, 0, 1831, 0, 0, 0, 0, 1859, 0, 0,
	0, 1828, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1865, 0, 0, 0, 1864, 0,
	0, 0, 0, 1811, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1831, 0, 0, 0, 0, 0, 0,
	0, 0, 1828, 0, 0, 0, 0, 0, 0, 1849,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1823,
	1824, 1830, 1852, 1829, 1825, 0, 1822, 1820, 1821, 1813,
	1814, 1815, 1816, 1818, 1819, 0, 0, 1834, 1835, 1836,
	1837, 0, 0, 0, 0, 0, 0, 1817, 0, 0,
	1849, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1823, 1824, 1830, 1852, 1829, 1825, 0, 1822, 1820, 1821,
	1813, 1814, 1815, 1816, 1818, 1819, 0, 0, 1834, 1835,
	1836, 1837, 0, 0, 0, 0, 1850, 0, 1817, 1860,
	0, 0, 0, 0, 0, 0, 1839, 1841, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1856, 0, 1857, 0, 0, 0, 0,
	0, 0, 1826, 1827, 0, 0, 0, 1850, 0, 0,
	1860, 0, 0, 0, 0, 0, 0, 1839, 1841, 0,
	1848, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1856, 1832, 1857, 0, 0, 0,
	0, 0, 0, 1826, 1827, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1848, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1832, 0, 0, 0,
	1858, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1847, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1862,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1858, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1847,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1862, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1838, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1809, 1810, 1833, 1842, 1843,
	1844, 1853, 1854, 1855, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1838, 0, 1846, 1840, 0,
	0, 0, 0, 0, 1851, 1812, 0, 0, 0, 0,
	0, 0, 0, 0, 1859, 0, 0, 0, 1833, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1865, 0, 0, 0, 1864, 0, 0, 0, 0,
	1811, 0, 0, 0, 0, 1851, 0, 0, 0, 0,
	1831, 0, 0, 0, 0, 0, 0, 0, 0, 1828,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1864, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2330, 0, 0, 0, 0, 0, 0, 1849, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1823, 1824, 1830,
	1852, 1829, 1825, 0, 1822, 1820, 1821, 1813, 1814, 1815,
	1816, 1818, 1819, 0, 0, 1834, 1835, 1836, 1837, 0,
	0, 0, 0, 0, 0, 1817, 0, 0, 1849, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1823, 1824,
	1830, 1852, 1829, 1825, 0, 1822, 1820, 1821, 1813, 1814,
	1815, 1816, 1818, 1819, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1850, 0, 0, 1860, 0, 0,
	0, 0, 0, 0, 1839, 1841, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1856, 0, 1857, 0, 0, 0, 0, 0, 0,
	1826, 1827, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1848, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1832, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1858, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1862, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1838, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1833, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1851, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1864, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1849, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1823, 1824, 1830, 1852, 1829,
	1825, 0, 1822, 1820, 1821, 1813, 1814, 1815, 1816, 1818,
	1819,
}

var sqlPact = [...]int{
	13131, -1000, -1000, -1000, -1000, 267, -1000, -1000, 265, 261,
	253, 244, 232, 230, 228, 227, 226, 224, 223, -1000,
	-1000, -1000, -1000, -1000, -1000, 222, -1000, -1000, 218, -1000,
	216, 215, 214, -1000, -1000, 212, -1000, 211, -1000, -1000,
	-1000, -1000, 208, 204, 202, 94342, 93783, 94892, 2432, 119338,
	101528, 2290, 83775, 118779, 83216, 118220, 2311, 10497, 117661, 2871,
	197, -1000, 117102, 196, 195, 193, -1000, 116543, -1000, 1934,
	-1000, 191, -1000, 9616, 70329, 190, 189, 187, 185, 2242,
	184, -1000, 180, 179, -1000, -1000, 177, -1000, 12242, 1628,
	-1000, 169, 168, -1000, 5103, 99301, 166, 164, 163, 2384,
	152, 151, 68670, 150, 149, 148, 2246, 3020, -1000, -1000,
	2103, -1000, -1000, 147, 146, 141, 138, 136, 131, 130,
	129, 128, 126, 125, 123, 122, -1000, 121, 120, 119,
	115, 113, -1000, 112, 110, 107, -1000, 105, -1000, 103,
	101, 99, 97, 96, 93, 92, 91, 90, 89, 86,
	85, 83, 82, 17741, -1000, -1000, 81, 2014, 1761, 1758,
	1757, 1755, 1754, 1041, 80, 78, 77, 76, 66, 64,
	61, 55, 48, 47, 46, 44, 43, 42, 41, 40,
	38, 37, 170, 36, 35, 32, 31, 29, 28, 25,
	3555, -1000, 1662, 826, 32738, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 127038, 119888, 22, -48, 19, -1000, 3409,
	1146, 56869, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	375, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 595, 2270, 850, -1000,
	-1000, -1000, 115993, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2428, -24, -1000, 2189, -1000, -1000, -1000, -1000, -1000,
	849, -1000, 2424, 328, 2381, -1000, -1000, -1000, 3476, 2573,
	3863, 3862, 3860, 3859, 3857, 126488, 1908, 3856, 2635, 3855,
	3853, 3850, 3849, 3848, 3846, 3845, -1000, 93224, 1133, 92665,
	92106, 3488, 115443, 91547, 114884, 77090, 48870, 802, 3475, -1000,
	-1000, -1000, -1000, -1000, -1000, 119888, -1000, 1132, -1000, -1000,
	3844, 2135, 845, 100969, -1000, -1000, 114325, 1866, -1000, -1000,
	-1000, 1009, 1345, 34454, 34454, 34454, 362, -1000, -1000, -1000,
	-1000, -1000, -1000, 3843, 3842, 3841, 3840, 3838, -1000, -1000,
	82657, 25686, 82098, 81539, 113766, 25117, 90988, 90429, 3837, 3836,
	3835, 113207, 76521, 3589, 3583, 1127, 2183, 1495, -1000, -1000,
	-1000, -1000, -1000, -1000, -9, 72553, 3618, 119888, -1000, 354,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 48298, 450, 47726,
	763, 47154, 320, 112648, -1000, -1000, -1000, -1000, 75952, -1000,
	112089, 2560, 3833, 3832, 1210, 3830, 3358, 1895, 3828, 2003,
	1331, 3827, 3826, 3825, 3824, 3823, 3821, 3820, 1519, 111530,
	3060, 1588, 110971, 1770, 75383, 1125, 89870, 94892, 2759, 110412,
	1498, 1497, -1000, -1000, -1000, -1000, 3182, 3009, 2987, 1445,
	-1000, -1000, -1000, -1000, 60254, 7549, 6469, -1000, -1000, 10531,
	109853, 63089, 94892, 94892, -1000, -1000, -1000, -1000, -1000, -1000,
	46582, 447, 46010, 801, 109294, -1000, -1000, 60821, 3008, -1000,
	-1000, -1000, -1000, -1000, 108735, 45438, 446, 44866, 745, 119888,
	-1000, 3059, 1980, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2306, 1697, 3626, 2853, 74814, 2106, 1490, 3440, 3181,
	3176, 1583, 2176, 3174, 3819, 2745, 3173, 3172, 3169, 3167,
	3154, 1826, 2718, 308, 2710, 32166, 3047, 1756, 44294, 1609,
	1593, 3148, 3122, 3682, 2146, 2099, 2224, 80980, 3818, 3817,
	3399, 3117, 3112, 2898, 3110, -1000, 3007, 1517, -1000, -1000,
	-1000, -1000, -1000, 1549, -1000, -1000, -1000, -1000, -1000, 85425,
	-1000, -1000, 1621, -1000, -1000, 1621, -1000, -1000, -1000, -1000,
	-1000, 1449, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1662, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2402, -1000, 2129, -1000, -1000,
	2621, 3376, 3376, 3376, 3470, 566, 546, -1000, 170, -1000,
	-1000, 133817, -1000, -1000, 49442, 49442, 49442, 49442, 49442, 49442,
	49442, 49442, 2317, -1000, 843, -1000, -1000, 881, -1000, 832,
	756, 695, -1000, -1000, -1000, -1000, -1000, -1000, 830, -1000,
	-1000, -1000, -1000, -1000, -1000, 3618, -1000, 28601, -1000, -1000,
	-1000, 527, 829, 49442, -1000, -1000, 3705, 3703, 1012, -1000,
	352, 1015, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 3058, 825, 823, -1000, 821, 819,
	811, 810, 809, -1000, 808, -1000, 806, 805, 803, 798,
	793, 792, 791, 786, -1000, 2195, -1000, -1000, -1000, -1000,
	-1000, -1000, 740, 738, 738, 738, -1000, 1119, -1000, -1000,
	-1000, 416, 737, 351, 734, 732, 731, -1000, 785, 784,
	779, 776, 773, 772, 768, 762, 761, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1117, -1000, -1000, -1000, -1000, -11,
	119888, -1000, 595, -11, -1000, -1000, 760, -1000, 36771, 36771,
	36771, -1000, -1000, 2419, 49442, -1000, 2672, -1000, 8, 8,
	976, 58549, -1000, 55729, 976, 310, 895, 64206, -1000, 3004,
	-1000, -1000, 759, 332, -1000, -1000, -1000, -1000, 26253, 3001,
	119888, 119888, 119888, 94892, 94892, 94892, 3815, 3267, 49442, -1000,
	-1000, 69770, 119888, 95442, -1000, -1000, 3566, 70886, 69220, 119888,
	3057, 108176, 3813, -1000, -1000, -1000, -1000, -1000, 3247, 3812,
	3811, 3809, -1000, 119888, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 240, 3246, -1000, -1000, 98742, 240, 3245, -1000, 240,
	3244, -1000, 98192, -1000, -1000, 2363, 3243, -1000, -1000, 248,
	3242, -1000, -1000, -1000, 245, 3241, -1000, -1000, 329, -44,
	3240, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 133817, -1000, -1000, -1000, 107617, -1000, 3404,
	-1000, 119888, -1000, 49442, -1000, -1000, 3565, 1859, 78214, 3518,
	-1000, -1000, -19, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2617, 2615, 1233, 2461, -1000, 3281, 1472, 34454, 3346, -1000,
	-1000, -1000, -1000, -1000, 321, 26253, -1000, -1000, -1000, -1000,
	-1000, -1000, 2539, 3239, 1460, -1000, 2458, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2259, 3237, -1000, 2357, 3236, 2258,
	-1000, -1000, 2223, -1000, 3396, -1000, -1000, 2130, 3235, 9,
	-1000, -1000, 2415, -1000, -1000, -1000, -1000, 2114, -1000, 1371,
	3234, -1000, 2852, 2852, 89311, 3201, 62522, 60821, 72553, -14,
	-1000, -1000, -1000, -1000, -279, -1000, 24544, 133817, -1000, -1000,
	-1000, -1000, 1969, 133817, 1051, -1000, -1000, 3233, -1000, 133817,
	1005, -1000, -1000, 3232, -1000, 2716, -1000, 3054, -1000, -1000,
	2521, 2519, -1000, -1000, 3807, -1000, -1000, 3804, -1000, 3802,
	3800, 3799, -1000, 1786, 2161, 3797, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 88761, 2418, -1000, -1000, 87643, 3053,
	-1000, 2518, 3513, -1000, 88202, 1124, -1000, 1073, 2517, -1000,
	97642, 1126, 2515, -1000, 3796, 3478, 2799, 1073, 2512, -1000,
	-1000, -1000, -1000, -1000, 1116, -1000, 66438, -1000, 66438, -1000,
	1681, -1000, 125938, 8, 94892, 3618, -1000, -56, -1000, -1000,
	-1000, 1146, -1000, 59682, -1000, 59682, 100410, 77657, 1039, 827,
	68110, 133776, -1000, 1097, -1000, -1000, 133817, -1000, -1000, -1000,
	2713, -1000, -171, 2850, -1000, 77657, 61955, 2657, -1000, 133817,
	-1000, -1000, -1000, -1000, 133817, -1000, -1000, -1000, 77657, 87643,
	-1000, 107058, 87093, -1000, -1000, 1516, 2652, -1000, -1000, -1000,
	77657, 1374, 77657, 77657, 77657, -1000, 106499, -1000, -1000, 2131,
	1598, 3389, 2124, 94892, -1000, 1886, -1000, -1000, -1000, 3414,
	3199, 119888, -1000, -1000, 3050, -1000, 72003, 97092, -1000, 96542,
	-1000, 95992, -1000, 94892, -1000, 94892, -1000, 3795, 3791, 3787,
	-1000, -1000, 3786, -1000, 3781, 3412, -1000, 634, 43722, 133817,
	3410, -1000, 3780, 2060, 3047, 133817, -1000, 3197, 1747, 1745,
	119888, -1000, -1000, 119888, -1000, 119888, -1000, -1000, -1000, 1614,
	-1000, -1000, 2611, -1000, -1000, -1000, -1000, 94892, 94892, 94892,
	94892, 1526, -1000, 43150, -1000, -1000, 3116, 3779, 1827, -1000,
	1863, -1000, 3000, 3422, -1000, 1515, 1861, -1000, -1000, 250,
	-1000, -1000, -19, -1000, 125388, -1000, 2621, -1000, 119888, -1000,
	2612, 3024, 3040, 1673, 2440, 2702, -1000, 42578, 2681, 52874,
	2453, 170, -1000, -1000, 170, 170, 33882, -1000, -1000, 70886,
	70886, 26253, 1375, 49442, 49442, 49442, 49442, 49442, 49442, 49442,
	49442, 49442, 49442, 49442, 49442, 49442, 49442, 49442, 49442, 49442,
	49442, 49442, 49442, 49442, 49442, 49442, 49442, 49442, 49442, 49442,
	49442, 49442, 49442, 49442, 49442, 49442, 49442, 49442, 49442, 2388,
	49442, 1448, 49442, 49442, 49442, 49442, 1842, -1000, -1000, 1985,
	630, 2076, 756, -1000, -1000, -1000, 3627, 3627, 3627, 522,
	522, 522, 11287, 11287, 724, 3777, 881, -1000, 49442, -1000,
	114, 59106, 49442, 26822, -1000, 546, 11904, 2648, -1000, 545,
	27423, -1000, -1000, -1000, 28601, 695, 41977, 49442, 1104, 133817,
	-1000, -1000, 1661, 3645, 23971, 2926, 2892, 754, 914, 894,
	31565, 30964, 30363, 29762, 777, 715, 49442, 49442, 49442, 49442,
	49442, 49442, 49442, 49442, -1000, -1000, 3653, -1000, 3645, -1000,
	-1000, -1000, -1000, 3645, 1350, 1276, 3645, -1000, 3645, 3645,
	5002, 5002, 41405, 40833, 40261, 53446, 39689, 49442, 29190, 39117,
	38545, -1000, 119888, -11, 3564, 49442, 314, -1000, 132105, -1000,
	314, 314, 750, -58, 133817, 2828, 2828, 57429, 2543, 2323,
	2323, 2323, -1000, 976, 18780, 976, 104842, 2343, 976, 976,
	319, 412, 541, 55162, 2672, 104842, 863, 749, 17, 16,
	15, -1000, -1000, 14, 12, -1000, -1000, 94892, 748, 26822,
	26253, 313, 2088, -59, 2731, 2728, -1000, 2725, 2724, -1000,
	2686, -1000, 1884, -61, 1447, 94892, 119888, 1505, 3776, -67,
	-1000, 5114, -64, -1000, 1424, 312, 3645, -1000, -1000, -1000,
	-1000, -1000, 3775, 3774, -1000, 1112, 747, 744, 409, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 740, 738, 738,
	738, -1000, 416, 737, 351, 734, 732, 731, -1000, -1000,
	-1000, -1000, -1000, 2999, 94892, 119888, 1484, 3771, -279, 95442,
	-43, -1000, -1000, 119888, -1000, -1000, -1000, 3770, -1000, 94892,
	-1000, -1000, 94892, 240, 3231, -1000, 94892, -1000, 94892, 231,
	3229, -1000, -1000, 119888, -1000, 94892, 94892, -1000, 119888, 119888,
	119888, 77657, 77657, 229, -1000, 94892, 971, -70, 1214, -19,
	-1000, -1000, -1000, -1000, -1000, 1621, -1000, 2057, -1000, -1000,
	-1000, -1000, -1000, -1000, 1494, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1012, -1000, -1000, -1000, -1000, -1000, -1000,
	3638, 3636, -12, -1000, -1000, 26253, -1000, -22, 1704, 2080,
	1446, -1000, 80421, 2578, 3390, 3769, 2778, 3378, 1679, -1000,
	1613, -1000, 3489, 85425, 3527, 3545, 1402, -1000, 2998, -1000,
	-1000, 1008, 1794, 1839, 1442, 1437, 85425, 2357, -1000, 70886,
	-1000, 2744, 3469, 1479, 1475, 1479, 1479, 1477, -1000, 85425,
	1805, 1414, 1397, 1392, -1000, -1000, 2045, 2042, -1000, -1000,
	105949, -1000, 1391, 1389, 3581, 2402, 2284, 911, 2039, -1000,
	-23, 3526, 3543, 1398, -1000, 2993, 1378, -1000, -1000, -1000,
	3467, 94892, 26253, 1659, 1658, 1649, 1797, 1369, -13, -1000,
	3524, 1364, 1359, -1000, 1121, 4929, 3297, -1000, 77657, 1121,
	1121, 2244, 3227, 2836, 1727, -1000, 2849, 972, 2846, -1000,
	-1000, -1000, 972, -14, 72553, 119888, 307, -1000, 114, 49442,
	49442, 114, 49442, 114, -1000, 3507, 3223, 3222, -1000, -1000,
	-1000, -1000, -1000, 3768, 2112, 2633, -1000, -1000, 730, 2511,
	2989, 119888, 2736, -15, 94892, -1000, 71453, 3219, 73111, 2357,
	2509, -1000, -1000, 86534, -1000, 3218, 595, 2508, -1000, 797,
	3767, 3214, -1000, 124838, -1000, 3404, 1410, 3212, 1167, 712,
	3563, -1000, 712, 66996, -1000, 119888, -1000, 8, 273, 79321,
	-77, -84, 540, -1000, 105399, 119888, 1166, 79871, 119888, 3333,
	2127, 2120, -1000, 1058, 60821, -1000, 60821, -86, -171, 2845,
	1579, -1000, 1039, 1039, 972, -1000, 972, -1000, 94892, 3035,
	-1000, -1000, 77657, 1039, 1039, 1039, -1000, -1000, -1000, -1000,
	3766, 3764, 3763, 3761, -1000, -1000, 1060, 94892, 119888, 94892,
	-1000, -1000, 1720, -1000, 304, -1000, 119888, -1000, 119888, 119888,
	94892, -1000, 1060, 119888, 1060, 119888, 1060, 119888, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 114, -1000, -1000, 133817, -1000,
	49442, -1000, -1000, 1603, 3760, 1705, -1000, 3030, -1000, 3029,
	-1000, 50, -1000, -1000, 1978, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 3759, 133817, -1000, 2182, -1000, -1000, -1000, -1000,
	94892, 94892, 94892, 94892, 119888, 3295, -1000, 119888, 3293, 94892,
	-1000, -1000, 85425, -1000, 2612, 3024, -1000, -1000, -1000, -1000,
	-1000, -1000, 1467, 2387, -1000, 2668, -1000, 1657, -1000, -1000,
	-1000, 133817, 54018, -1000, -1000, 133817, 2007, -1000, 52302, 51730,
	-1000, -1000, 1771, 94892, 2740, -1000, 2740, -173, -1000, 132064,
	2666, 94892, -1000, -1000, -1000, -1000, -1000, 1007, 993, 993,
	1346, 1346, 1346, 1346, 3496, 6841, 296, 6594, 8410, 8410,
	379, 379, 379, 379, 379, 8410, 6086, 522, 522, 6086,
	6086, 6086, 6086, 6086, 522, 522, 522, 8410, 8410, 8410,
	522, 11287, 134204, 10163, 49442, 49442, 1358, 1984, 630, 9760,
	49442, 6514, 6514, 6514, 6514, -1000, 2010, -1000, -1000, -1000,
	-1000, 2984, 725, 53446, 53446, -1000, -1000, -1000, -1000, 28012,
	49442, -1000, -1000, -1000, -1000, 37944, -1000, -1000, 131241, -317,
	538, -1000, 303, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 537, -141, 72, -1000,
	49442, 49442, 49442, 536, -1000, 301, 49442, 119888, -1000, 18079,
	861, -87, -1000, -91, 1528, -1000, 49442, -1000, -1000, 1347,
	-1000, 1291, 1290, 1288, -1000, 722, 532, -1000, 295, -1000,
	2321, 721, 710, 49442, -1000, -1000, -1000, -1000, -1000, 131200,
	-1000, -1000, 130805, -1000, -1000, 130764, -1000, -1000, 130369, -1000,
	-1000, -1000, -1000, -1000, 133389, 17477, 17212, 16610, 9902, 16345,
	15741, -92, 531, -109, 530, 1006, 996, 529, 528, 525,
	-112, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -115, 523, -1000, 2982, -141, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 521, -1000, 520, -1000,
	133348, -141, 519, 1037, -1000, 53446, 53446, 53446, 53446, -1000,
	510, -1000, 131677, -1000, 132961, 37372, 37372, 37372, 509, 132920,
	49442, -141, -117, -1000, -118, -1000, -1000, 603, -120, 1101,
	36771, 56309, 26253, -1000, 1101, 1101, 49442, -1000, 49442, 2679,
	-1000, -1000, -1000, -1000, 2677, 1867, 2828, 57429, -1000, -1000,
	-1000, -1000, 104842, -1000, 3618, 3031, -1000, 104842, -1000, -1000,
	119888, 595, -1000, 104842, 104842, 26253, 976, -1000, 976, 104842,
	619, -1000, -1000, -1000, -1000, -1000, 507, 64766, 72, 280,
	26253, 1073, -1000, -1000, 2802, 2802, 2802, 2802, 2802, -1000,
	-1000, 119888, 1287, -17, -94, 2839, -1000, 3593, -1000, 2239,
	-1000, 70886, -1000, 876, 1303, 26253, -1000, -1000, -1000, 707,
	-1000, 3645, 3645, -1000, 3645, 119888, 2980, 294, 2837, -1000,
	186, 73111, 3758, -1000, -1000, 240, -1000, 94892, 240, 240,
	-1000, 94892, 94892, 2363, -1000, 248, -1000, 245, -1000, -1000,
	-44, -1000, 1096, 34454, -1000, 1621, -1000, -1000, 1660, -1000,
	2141, -1000, 1237, -1000, -1000, -1000, -1000, 34454, -1000, 2069,
	119888, 119888, 94892, -1000, 119888, -1000, 2277, 73111, -1000, 2506,
	124288, 2496, 70886, 119888, -1000, -1000, 705, 1018, 2663, 2659,
	1164, 119888, 119888, 2656, 123738, 123188, -1000, 3757, 119888, 2192,
	49442, 3466, 2348, 2330, 114, 114, -1000, 114, 114, 114,
	-1000, 702, 1354, 94892, 94892, 119888, 73111, 94892, 2236, -1000,
	-1000, -1000, -1000, -1000, 85975, -1000, -1000, 3649, 3647, -1000,
	1479, -1000, -1000, -1000, 1479, 2357, 2100, 119888, 73111, 94892,
	73111, 122638, 122088, -1000, -1000, 1796, 119888, -1000, -1000, -1000,
	-1000, 1545, -1000, 911, 2261, 114, 114, -1000, 114, 114,
	114, 701, 26253, 2117, -1000, 3080, 119888, 3699, 121538, 3696,
	119888, 119888, 119888, 73111, 3379, 119888, 119888, 73111, -1000, 120988,
	4929, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 74245, 1174, 119888, 1371, -1000, -1000, 1793, 1286,
	1285, 85425, 2194, 1789, 1954, 119888, 60821, 1057, 60821, 2804,
	-1000, -1000, 23398, -1000, 133817, 133817, -1000, 133817, -1000, 71453,
	77657, 119888, -1000, 1123, 119888, 79871, 1027, 3211, 65880, -279,
	1039, 77657, 94892, -15, 2736, 119888, -1000, -1000, -1000, -1000,
	-1000, 2357, 3195, 595, 2501, -1000, 77657, 3562, 3190, 700,
	3756, 3755, -1000, 94892, 2414, 2498, -1000, -1000, 120438, 3125,
	911, 119888, 1101, 57429, 2095, -1000, 63649, 1145, 119888, 1967,
	176, -1000, -1000, -1000, 24, 119888, -1000, 893, -1000, -1000,
	273, 273, 1039, -284, 699, -1000, 959, 958, 61388, 77657,
	-125, -1000, -1000, -1000, -1000, 2496, 94892, 119888, 1360, 2794,
	119888, -131, -1000, 278, 698, 955, 949, -1000, 3423, -1000,
	-171, -1000, 1058, 60821, 2977, 2976, -1000, -1000, 1095, -1000,
	1507, 1039, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 7, 1950, 119888, -279, -279, -35, -17,
	-1000, 1060, -1000, 1060, -1000, 1060, -1000, 133817, -1000, -1000,
	-1000, 1700, 1685, 119888, -1000, -1000, 119888, -1000, 26253, 119888,
	94892, 26253, 94892, 3022, 3015, -1000, -1000, -1000, 119888, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1187, -1000, 2007, 2385,
	-1000, 695, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2590, -1000, -18, 33882, 985, -1000, -1000, 94892, -4,
	49442, 49442, 9113, 8007, 49442, 53446, 53446, -1000, 49442, 5894,
	-1000, -1000, -1000, -1000, -1000, 2961, 693, 49442, 70886, 7162,
	6958, -1000, 506, 15270, 6086, -1000, 49442, -1000, 587, -1000,
	505, 36199, -1000, 132492, 3, -132, -1000, 19366, -141, -134,
	-1000, -1000, 875, -1000, 3206, -1000, 49442, 132533, 2556, 2018,
	1910, 1710, 3645, 3693, 22825, -1000, 67553, 1102, 2352, 130328,
	-1000, -1000, -1000, -1000, 70886, 70886, 49442, 49442, -1000, 49442,
	49442, 49442, -1000, -1000, -1000, 3645, 986, -1000, -1000, -1000,
	986, -1000, -1000, 1479, -1000, 1479, -1000, 49442, -1000, -1000,
	2958, 49442, -1000, 70886, 70886, 53446, 53446, 53446, 53446, 53446,
	53446, 53446, 53446, 53446, 53446, 53446, 53446, 53446, 53446, 53446,
	53446, 53446, 53446, 53446, 53446, 2649, 53446, 3621, 3621, 3621,
	679, -1000, 3014, 2958, 49442, 49442, 70886, 504, 503, 492,
	-1000, 49442, -141, -1000, -1000, 8914, 691, -1000, 2580, -1000,
	2891, -1000, 49442, -1000, -106, -1000, 2672, -1000, -1000, 2891,
	2891, -139, 133817, 57429, 57429, -1000, 690, 49442, 2675, -1000,
	-1000, 860, -315, -1000, 943, -1000, -1000, -1000, -1000, -1000,
	941, -1000, 595, -1000, -1000, -1000, 277, 104842, 104842, 859,
	-1000, -142, -1000, -1000, -145, -1000, 3561, 491, 26253, -1000,
	1101, 2784, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -279,
	119888, 119888, 1785, 2380, 3692, -1000, 3646, 870, 855, 171,
	3645, 490, 488, 486, -279, 119888, 119888, 1779, 119888, -1000,
	-1000, -1000, 240, -1000, -1000, -1000, 231, -1000, -1000, -1000,
	-1000, 2748, -1000, -19, -1000, -1000, -1000, 49442, -1000, -1000,
	3388, 1278, 1277, -1000, -1000, -1000, 2985, -1000, 3155, -1000,
	2493, -1000, 1128, -1000, 1905, -1000, 49442, 686, 2793, 681,
	678, 3753, 2248, 3752, 1165, 3153, 2363, 3152, 2363, -1000,
	-1000, -1000, 1014, -1000, 133817, 2348, -1000, 677, 667, -1000,
	-22, 1699, 2035, 1271, 1094, -1000, -1000, -1000, -1000, 49442,
	49442, 104292, -1000, 499, 3396, -5, -1000, -1000, -1000, 1778,
	1270, 1269, -1000, -1000, -1000, -1000, 2357, 1728, 1268, 1262,
	-1000, -1000, -1000, -1000, -1000, 2489, -1000, -1000, 3149, 1091,
	-1000, 3092, 3090, 995, 119888, -1000, 1090, -1000, -1000, -1000,
	-1000, 49442, -1000, -23, 1261, 3514, 2487, 94892, -1000, 2363,
	3147, 1258, -1000, 1257, -1000, -1000, -1000, 3522, 3521, 1272,
	-1000, -1000, -1000, -1000, -1000, 73678, -1000, -1000, 1121, 119888,
	73111, 94892, 2081, -1000, -1000, 84325, 84875, 119888, 2836, -279,
	972, -1000, 2429, 972, 1057, 2957, -1000, 2735, -1000, 1085,
	94892, 3750, 475, -147, -25, 70886, 3559, -1000, 2425, 723,
	94892, 984, -1000, 3618, -1000, -1000, -1000, 1083, -1000, 3511,
	94892, 3558, 3143, 1073, 114, 94892, 3660, -1000, -1000, 3557,
	94892, 3127, 2411, 2479, 2618, 911, 78771, 1073, 2350, -41,
	-1000, 1967, 35598, 3385, -148, -1000, -1000, -1000, 1101, 66996,
	57429, 49442, 3749, -154, -1000, -1000, -1000, -1000, -1000, 102085,
	102085, 77657, 77657, 77657, 1039, 119888, 119888, 79871, -1000, -1000,
	664, 119888, 119888, 662, -1000, 119888, 119888, 3748, 77657, 77657,
	77657, -26, 661, -1000, 939, 937, 936, -1000, -1000, -1000,
	-1000, -1000, -1000, 935, 931, 1058, -1000, -171, 60821, 114,
	-1000, 2361, 94892, -1000, 22252, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1060, -279, -1000, -1000, 2278, 2452, 2278, 1916,
	1913, -1000, -1000, 2365, -1000, -1000, -1000, -1000, 2730, 3367,
	26253, 3501, 6514, 49442, 49442, 5440, 979, 562, 6514, 49442,
	49442, 70886, 7938, -160, 49442, 49442, -1000, 49442, 854, 133817,
	-1000, 3690, 49442, 466, 465, -1000, -1000, -1000, 3641, -1000,
	-1000, -1000, 133817, 49442, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 457, -1000, 73, -1000, -1000, -1000, 127588, -1000, 49442,
	456, 3464, -1000, 455, 453, 14225, 489, 129933, 129892, 129497,
	444, -1000, -1000, 443, 442, 133817, 3014, 133817, -1000, -1000,
	1021, 1021, 1459, 1459, 1459, 1459, 3621, 348, 367, 1050,
	846, 846, 846, 1489, 679, 679, 846, 846, 846, 679,
	2948, 2651, 659, 5142, -1000, -1000, 133817, 133817, 439, -1000,
	-1000, -1000, -141, 437, 8914, -1000, 2886, 3463, 133817, -1000,
	57429, 2886, 2886, -1000, -1000, 1867, 119888, 133817, 57429, -1000,
	3031, -1000, 20528, 19950, -1000, 26253, -1000, -1000, -1000, -1000,
	3618, -1000, 64766, -1000, 658, -1000, 51, -1000, 2784, -1000,
	930, -1000, -1000, 77657, 77657, -279, -155, 119888, -1000, -1000,
	852, 3747, 869, 26253, 435, -1000, -1000, -1000, -279, -279,
	119888, -279, -1000, -1000, -1000, 3332, 133817, 119888, 119888, 1559,
	103742, 119888, 3124, -1000, 2240, -1000, 1164, 129456, 57989, -1000,
	57989, 119888, -1000, -1000, -1000, -1000, 2013, 1631, 3745, 1201,
	-1000, 3427, 119888, -1000, 119888, -1000, -1000, -1000, 119888, 119888,
	94892, 119888, -1000, 73111, 3102, -161, 133817, -33, -1000, 926,
	-1000, 1480, -1000, 21679, 119888, 73111, 94892, 119888, 73111, 94892,
	3123, 119888, 2304, -1000, -1000, 3081, -1000, 3100, -162, 26253,
	-1000, 3684, 3681, 3120, 3433, -1000, 119888, 3672, 119888, 94892,
	3327, -1000, -1000, -1000, -1000, -1000, -1000, 1721, 1256, 1254,
	2407, -34, 2403, 2373, -35, 2194, 1057, -36, 657, -1000,
	924, -1000, -1000, 923, -1000, 1057, -1000, 77657, 60821, 3742,
	595, -1000, 2775, -1000, 99851, 2435, 114, -1000, 3736, 102642,
	653, -1000, 2358, -1000, 847, -1000, 2587, 73111, 2357, 114,
	94892, -1000, -1000, 595, 434, -38, -1000, 3128, 1158, 26253,
	94892, 3119, 2626, 911, 78771, -1000, 1410, 2702, -1000, -39,
	-1000, 708, 114, 2350, -1000, -41, 133817, -1000, 922, -1000,
	-168, -1000, -1000, 430, -1000, 3324, 3322, -1000, 2882, 57989,
	651, 648, 119888, 3305, -1000, -1000, -174, -1000, -1000, 4636,
	4636, 77657, 60821, 77657, 77657, 77657, -1000, 1058, 972, -1000,
	2537, -1000, -1000, -1000, -1000, -1000, 26253, 1748, -1000, 644,
	643, -1000, -1000, -1000, -1000, 3367, 6514, 6514, 49442, 49442,
	49442, 6514, 7938, -179, -1000, 6514, 6514, -141, -1000, -1000,
	132492, -1000, -1000, -1000, 133817, -1000, 21106, 2283, -1000, 129061,
	-1000, 33882, -1000, -1000, 49442, 49442, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 53446, 2944, 642, 70886, -1000, -1000,
	425, 1099, 49442, 51158, 2672, 1099, 1099, -1000, -184, -1000,
	-1000, -1000, 3618, -1000, 3618, 51, -1000, -1000, 3735, 26253,
	-1000, 77657, -1000, -1000, 3734, -167, 867, -1000, 3724, -1000,
	-1000, 143, -1000, -1000, -1000, 2833, 3556, -1000, 2028, -1000,
	119888, -1000, 119888, -1000, 26253, 119888, 2913, 1349, -1000, 1018,
	2655, 638, 53446, 1184, 94892, 1023, 2866, 2865, -1000, 3575,
	3461, 2854, -186, -1000, 119888, 49442, 119888, -187, -193, 2466,
	-1000, -1000, 1183, 1340, 49442, 1182, -1000, -1000, -1000, 70886,
	637, 2363, 2363, -199, -200, -1000, -1000, -1000, 49442, 1251,
	119888, 35026, -1000, 3723, 3396, -1000, -1000, -1000, -1000, -1000,
	-1000, 119888, -1000, 119888, -1000, 49442, 1226, -1000, -1000, -1000,
	3665, 2363, 26253, 2363, -1000, 2363, 3433, 1200, 119888, 73111,
	94892, 1900, 1900, 2990, -1000, -1000, -1000, 2588, 2588, 77657,
	60821, -1000, -44, 1057, -1000, 3554, 2766, 3720, -1000, -1000,
	-1000, -1000, 2646, -1000, -1000, 119888, 2644, 1040, -1000, -201,
	-1000, 920, 916, 79871, 1027, 1028, -1000, -46, 636, -1000,
	915, -1000, -1000, -1000, -1000, 595, 3553, -1000, 3664, 635,
	633, 119888, 2401, 632, 26253, 3382, 911, 78771, -1000, 3125,
	1967, -1000, 2476, 119888, 3374, -1000, 2702, 630, -1000, 1039,
	629, 628, 2572, 2572, -206, 57989, 57989, -207, 627, 1039,
	-1000, -208, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -47,
	-1000, 925, 804, -1000, -1000, 94892, 94892, 49442, 49442, -1000,
	6514, 6514, 6514, -1000, 420, -1000, -1000, 2350, 3458, -1000,
	-51, 129020, 128625, 5411, 53446, 70886, -209, -1000, -1000, 119888,
	133817, -80, -1000, 133817, 625, 624, 561, -1000, -1000, -1000,
	620, 588, -1000, -1000, -1000, 119888, 3719, -1000, 119888, 103192,
	119888, -1000, -1000, 2180, -1000, -1000, -1000, 119888, 2478, -1000,
	-1000, -1000, 1162, 49442, 5142, 53446, 623, 49442, -1000, 622,
	615, 3551, 3286, -1000, 2750, 2946, 1986, 57989, -1000, 3367,
	-1000, 128584, -1000, 1151, 2051, -1000, -1000, -1000, -1000, 133817,
	53446, 3433, 57989, -1000, -1000, 613, 612, 133817, 611, 913,
	2942, -1000, -1000, -1000, -1000, -1000, 133817, 608, 3514, -1000,
	-1000, -1000, -1000, 2363, 94892, -1000, -1000, -1000, 1220, -1000,
	-1000, -1000, -1000, 3718, 3717, 2938, 84325, -1000, -216, -1000,
	-1000, 2068, 114, 2275, 2827, -1000, 2435, 606, -1000, -1000,
	2392, 2746, -1000, 102642, 34454, 34454, 407, 3550, 1028, -1000,
	3615, -1000, 3311, 3311, 49442, 3544, 114, -1000, 3660, 57989,
	-1000, 94892, 57989, 2396, 2203, 2606, 78771, -1000, 2618, -1000,
	-1000, -217, 119888, 1967, -1000, -1000, 77657, 77657, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1151,
	-218, -219, -1000, 77657, -1000, -1000, 2537, -1000, 119888, -1000,
	119888, -1000, -1000, -224, -225, -1000, 2121, 49442, 33882, -1000,
	-1000, 5411, -232, -1000, -127, -1000, 3540, 51158, 3716, 3715,
	3713, -1000, -1000, -279, -1000, -279, -1000, 2016, -1000, -1000,
	-1000, 3118, 2875, 128189, 5142, 2579, 119888, 128148, 2357, 2357,
	-1000, 3532, 2919, -1000, -1000, 2766, 604, -1000, -1000, -1000,
	-1000, 985, 119888, 2766, 2872, 94892, 5142, 1160, -234, 2278,
	2278, 49442, 33310, 2294, 49442, -1000, -1000, 3433, 119888, -1000,
	-1000, 119888, 2395, -1000, 2914, 3631, -1000, 1027, -1000, 2288,
	119888, -1000, 3421, -1000, 3300, -1000, -1000, -1000, 2775, 114,
	-1000, -1000, -1000, -235, 133817, 114, -1000, 406, -240, 1158,
	-243, 94892, 2179, -1000, 911, -1000, 2626, 1101, -1000, -1000,
	-248, -251, 1986, 1151, 2261, -253, -1000, -256, -259, -1000,
	-1000, 405, 50586, 50586, 50586, -141, -173, -1000, 119888, 597,
	-1000, -1000, -1000, -1000, -1000, 3076, 1047, -1000, 917, 1946,
	386, 1175, 385, 311, -1000, -1000, -1000, 2261, 119888, -1000,
	-1000, -1000, 1046, 595, -1000, 49442, 1151, -261, -1000, 1143,
	-262, -1000, 1138, -267, -1000, 2937, -1000, -269, 2363, -258,
	229, 1900, 1042, 3500, -1000, -1000, -1000, 2392, 94892, -272,
	-1000, -1000, 2524, -1000, 2766, 1040, -1000, -1000, -1000, 1151,
	593, 1986, 592, 1568, 911, -1000, -1000, 1479, 3382, 3131,
	1039, 1039, 2766, 1986, 1036, -1000, 1039, -1000, -1000, -1000,
	3114, -1000, 54590, 2423, 1901, 131636, 3114, 3114, -1000, -1000,
	119888, 3484, -1000, 964, 963, 1584, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2854, -277, 3483, 2579, 133817, 2766,
	-1000, 2278, 2824, -1000, 2278, 2934, -1000, 2252, -1000, -1000,
	-1000, 2896, -1000, 2928, -1000, 1852, 3605, 2598, 591, -1000,
	119888, 1879, 1875, 3711, 2275, 2392, 1986, 57989, 2766, 57989,
	2250, -1000, 119888, -1000, 2203, 1421, -1000, -1000, 2261, 2766,
	1101, 590, -1000, -1000, 2102, 3560, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 910, -1000, 3277, -1000, 1179, 2171,
	2171, 1101, -1000, 907, 917, -1000, -1000, 589, -1000, 586,
	-1000, 2364, 119888, 2356, -1000, -1000, -1000, -1000, 119888, -1000,
	-1000, 3710, -1000, 1027, -1000, 2766, -278, 2261, -285, -1000,
	-1000, -1000, -279, 2179, -1000, 1670, 1036, 2261, -1000, 1893,
	-1000, -1000, 2333, 50014, 49442, -1000, 3597, -1000, -1000, 2691,
	-1000, -1000, 49442, 2854, 49442, 49442, -1000, 229, 65323, -288,
	-1000, 2392, 2261, 1151, 1036, 1986, 1568, 66996, 1101, 1036,
	-1000, -1000, -1000, 133817, -1000, -1000, -1000, 133817, -1000, -290,
	-302, -1000, -284, 102085, 2359, 2598, 1036, 1986, 1101, 2766,
	2250, -264, -1000, 1101, 2261, 1219, -304, -1000, -1000, -1000,
	-1000, 1101, 2766, -1000, 2261, -1000, -1000, -1000, -1000, -1000,
	584, -1000, -1000, 2261, 1036, 49442, 1036, 1101, -305, 1101,
	-1000, 2261, -1000, -1000,
}

var sqlPgo = [...]int{
	0, 4532, 4531, 4530, 4529, 4526, 4525, 4523, 4522, 4521,
	4520, 4519, 4518, 164, 4516, 4515, 4514, 4512, 4511, 4509,
	4507, 4506, 4504, 4503, 4502, 4501, 4498, 4494, 4492, 4491,
	4489, 4488, 4487, 4486, 4484, 4483, 4481, 4480, 4479, 4478,
	4476, 4475, 4474, 4473, 4472, 4470, 4467, 4465, 4464, 4463,
	4462, 4461, 4460, 4459, 4458, 4457, 4456, 4455, 4454, 4451,
	4449, 4445, 4444, 4442, 4440, 4439, 4438, 4435, 51, 4434,
	4433, 4432, 4431, 4430, 4429, 4426, 4425, 4424, 4423, 4421,
	4420, 4411, 4410, 4407, 4406, 4401, 4400, 4399, 4397, 72,
	4395, 284, 4394, 4393, 4389, 4388, 4382, 4377, 4373, 4367,
	4365, 4360, 4355, 4353, 283, 4349, 123, 167, 4348, 4346,
	3866, 4345, 4343, 280, 4342, 4341, 4340, 4339, 4338, 289,
	4331, 4327, 4325, 4324, 4317, 4312, 4310, 4308, 4307, 4306,
	4303, 4302, 125, 209, 4301, 4299, 1414, 4298, 4297, 4295,
	4293, 4292, 4291, 4290, 4289, 4288, 4286, 4285, 248, 173,
	4281, 278, 4279, 4278, 4277, 4275, 4274, 4269, 4265, 4263,
	4261, 4255, 4247, 4245, 4244, 4242, 4241, 4240, 4238, 4237,
	4236, 4235, 4234, 4233, 4231, 4228, 4227, 4226, 4225, 4222,
	4221, 4219, 4217, 4216, 4214, 4213, 4211, 4209, 4208, 4203,
	4202, 245, 216, 208, 4201, 4200, 274, 273, 4197, 4194,
	4192, 4190, 4181, 132, 10, 38, 4179, 4176, 97, 89,
	87, 111, 102, 99, 4175, 112, 4174, 129, 63, 4173,
	19, 2, 267, 246, 11993, 240, 4171, 4164, 4163, 262,
	197, 4161, 243, 4159, 4158, 4157, 4154, 4147, 4146, 70,
	57, 185, 181, 179, 177, 98, 4142, 163, 100, 82,
	59, 47, 14, 77, 218, 22, 6, 264, 4141, 259,
	8, 145, 5, 35, 4139, 4136, 4131, 4123, 3379, 139,
	4121, 272, 238, 170, 4120, 4118, 4113, 898, 4112, 4109,
	48, 4108, 122, 138, 131, 17, 117, 4106, 154, 169,
	40, 4104, 176, 60, 4103, 162, 101, 91, 9260, 11408,
	4096, 4092, 107, 69, 90, 442, 174, 166, 201, 110,
	168, 172, 119, 213, 211, 182, 256, 4090, 250, 4089,
	3543, 79, 189, 158, 4999, 4083, 4081, 4079, 92, 204,
	96, 4078, 4077, 83, 16, 3, 1, 9, 146, 26,
	24, 21, 4071, 68, 114, 49, 31, 4070, 30, 4068,
	4067, 4066, 4062, 4061, 64, 159, 4059, 4056, 286, 4054,
	84, 52, 25, 4053, 23, 215, 4052, 225, 135, 4050,
	4049, 254, 210, 186, 4048, 88, 237, 4047, 4046, 4045,
	4044, 4043, 142, 11, 141, 4041, 4040, 149, 4036, 50,
	260, 200, 4034, 58, 4033, 4032, 192, 45, 147, 287,
	118, 229, 116, 224, 193, 232, 4031, 4028, 4027, 199,
	4026, 4025, 223, 150, 4024, 4023, 253, 288, 94, 43,
	78, 239, 86, 198, 157, 4021, 207, 4020, 4019, 281,
	187, 220, 13, 4, 106, 140, 4017, 7, 235, 155,
	234, 115, 4015, 7833, 2464, 2784, 4013, 4012, 161, 130,
	80, 127, 153, 263, 74, 4011, 4009, 4038, 4005, 4004,
	4003, 4002, 191, 4001, 3996, 3995, 160, 156, 257, 3994,
	136, 71, 55, 29, 126, 275, 271, 113, 221, 180,
	247, 3993, 3990, 3988, 202, 3987, 76, 120, 165, 203,
	252, 61, 3983, 178, 3980, 151, 863, 65, 152, 3979,
	231, 3977, 3974, 3973, 3972, 3971, 3964, 3961, 265, 233,
	3959, 3957, 3955, 44, 196, 3954, 261, 188, 190, 95,
	81, 3951, 104, 2900, 3950, 184, 305, 56, 266, 206,
	3948, 5077, 53, 3947, 0, 14270, 7589, 11714, 13095, 3945,
	5237, 3943, 3942, 3941, 227, 148, 3939, 3938, 3937, 105,
	3933, 85, 3932, 3931, 67, 3930, 27, 15, 20, 32,
	33, 776, 355, 3929, 3928, 54, 137, 133, 3925, 285,
	236, 3924, 3923, 3922, 3921, 121, 3920, 39, 3919, 41,
	3918, 3914, 42, 18, 34, 3913, 3912, 222, 3910, 219,
	255, 3908, 171, 3906, 73, 143, 3905, 3904, 3903, 66,
	62, 258, 93, 3902, 276, 3901, 205, 3900, 3899, 3899,
	28, 3893, 3892, 244, 109, 108, 3891, 251, 144, 37,
	214, 183, 217, 3890, 3889, 175, 3888, 3887, 3885, 282,
	3883, 3882, 36, 3881, 3880, 3879, 12, 3878, 3877, 212,
	3371, 3876, 3873, 46, 3872, 194,
}

var sqlR1 = [...]int{
	0, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 3, 3, 3, 3,
	3, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 11, 11, 7, 7, 7, 7, 8,
	8, 8, 8, 8, 52, 52, 9, 9, 9, 9,
	9, 9, 9, 9, 9, 9, 9, 37, 39, 38,
	32, 32, 33, 33, 34, 35, 35, 10, 10, 6,
	6, 6, 6, 6, 6, 6, 6, 6, 18, 18,
	40, 40, 19, 19, 42, 42, 20, 20, 43, 43,
	601, 601, 620, 620, 23, 23, 45, 45, 24, 46,
	17, 602, 602, 602, 602, 36, 25, 47, 29, 29,
	29, 29, 29, 206, 206, 206, 206, 22, 22, 41,
	41, 242, 242, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	597, 597, 244, 244, 243, 236, 236, 237, 237, 238,
	238, 603, 603, 245, 245, 245, 247, 247, 14, 14,
	14, 14, 14, 14, 14, 14, 14, 14, 497, 497,
	497, 529, 529, 529, 528, 528, 624, 624, 625, 625,
	625, 625, 625, 135, 135, 395, 395, 395, 56, 56,
	56, 56, 56, 592, 592, 208, 208, 208, 210, 210,
	209, 209, 209, 209, 209, 80, 80, 609, 609, 610,
	610, 608, 607, 607, 607, 611, 611, 611, 207, 207,
	207, 131, 131, 131, 131, 131, 131, 132, 132, 133,
	133, 211, 211, 211, 213, 213, 212, 212, 212, 212,
	212, 212, 212, 212, 212, 212, 212, 217, 16, 16,
	16, 114, 114, 114, 114, 114, 114, 114, 114, 114,
	109, 109, 531, 531, 532, 532, 202, 202, 203, 203,
	203, 203, 204, 204, 205, 205, 205, 71, 71, 214,
	214, 216, 216, 215, 215, 215, 215, 215, 58, 58,
	58, 58, 58, 58, 58, 58, 58, 59, 59, 59,
	59, 59, 60, 60, 60, 60, 60, 60, 61, 61,
	61, 61, 61, 61, 62, 62, 69, 69, 69, 69,
	69, 69, 193, 193, 72, 72, 72, 72, 72, 72,
	72, 72, 72, 72, 72, 72, 72, 77, 77, 77,
	77, 626, 626, 626, 626, 626, 626, 626, 626, 626,
	626, 626, 626, 626, 626, 626, 626, 626, 626, 626,
	627, 627, 628, 628, 629, 629, 630, 630, 630, 630,
	630, 630, 630, 630, 630, 630, 630, 630, 630, 630,
	630, 630, 630, 630, 630, 75, 75, 75, 75, 75,
	75, 75, 75, 75, 75, 75, 75, 75, 75, 75,
	75, 75, 86, 86, 356, 356, 319, 319, 87, 87,
	87, 88, 88, 89, 89, 73, 73, 590, 590, 372,
	372, 488, 488, 74, 598, 598, 598, 600, 600, 599,
	599, 91, 91, 394, 394, 92, 92, 92, 92, 92,
	92, 93, 93, 93, 93, 93, 93, 93, 94, 94,
	94, 94, 94, 94, 94, 94, 94, 94, 94, 94,
	94, 94, 101, 101, 101, 101, 101, 102, 102, 102,
	99, 99, 99, 96, 96, 96, 95, 95, 95, 100,
	100, 100, 589, 308, 308, 98, 98, 98, 97, 97,
	97, 373, 373, 103, 103, 103, 103, 320, 104, 104,
	104, 104, 104, 104, 104, 104, 107, 107, 106, 106,
	106, 106, 106, 106, 106, 106, 106, 106, 106, 106,
	106, 106, 106, 106, 106, 106, 106, 106, 106, 106,
	106, 106, 106, 106, 106, 106, 106, 106, 106, 108,
	108, 108, 108, 108, 108, 108, 108, 108, 108, 108,
	108, 490, 490, 105, 105, 105, 455, 455, 110, 110,
	110, 410, 410, 111, 111, 111, 111, 111, 112, 112,
	112, 112, 112, 112, 112, 112, 112, 134, 134, 134,
	134, 134, 134, 134, 134, 594, 594, 365, 365, 271,
	271, 271, 271, 123, 123, 123, 123, 124, 124, 124,
	125, 125, 198, 198, 141, 141, 141, 141, 140, 140,
	140, 140, 140, 140, 140, 140, 63, 63, 63, 64,
	64, 65, 65, 66, 66, 67, 67, 68, 68, 68,
	68, 68, 144, 144, 621, 621, 146, 143, 143, 143,
	143, 143, 142, 142, 145, 145, 145, 145, 147, 149,
	149, 149, 149, 149, 148, 148, 148, 148, 150, 150,
	522, 522, 381, 381, 520, 520, 541, 541, 521, 521,
	326, 326, 326, 326, 326, 327, 327, 327, 530, 530,
	530, 530, 530, 530, 151, 151, 151, 151, 151, 151,
	151, 151, 151, 151, 151, 151, 151, 151, 151, 151,
	151, 151, 151, 151, 151, 151, 151, 151, 151, 151,
	151, 151, 151, 151, 151, 151, 151, 151, 151, 151,
	151, 151, 151, 151, 151, 151, 151, 151, 151, 151,
	151, 151, 151, 151, 151, 151, 151, 151, 151, 151,
	151, 151, 151, 151, 151, 151, 151, 151, 151, 151,
	151, 151, 151, 151, 151, 151, 151, 199, 199, 200,
	201, 201, 201, 201, 201, 176, 176, 176, 192, 192,
	192, 192, 192, 192, 192, 192, 179, 179, 179, 163,
	163, 152, 152, 152, 152, 152, 152, 152, 157, 157,
	157, 157, 157, 157, 157, 157, 153, 153, 165, 165,
	165, 165, 165, 158, 158, 159, 159, 159, 160, 160,
	160, 160, 186, 186, 162, 162, 164, 164, 164, 164,
	164, 164, 164, 164, 164, 154, 154, 154, 154, 167,
	167, 167, 167, 417, 417, 417, 191, 191, 166, 166,
	166, 166, 166, 166, 166, 166, 166, 166, 166, 166,
	166, 166, 166, 166, 189, 189, 189, 189, 189, 189,
	612, 612, 613, 613, 613, 183, 183, 183, 183, 183,
	183, 469, 469, 177, 177, 177, 177, 182, 182, 182,
	182, 185, 185, 185, 185, 400, 400, 174, 174, 174,
	175, 175, 175, 180, 180, 181, 357, 357, 178, 178,
	184, 184, 184, 184, 155, 155, 155, 155, 155, 155,
	155, 156, 156, 156, 156, 187, 187, 173, 173, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	631, 631, 169, 169, 169, 168, 168, 168, 168, 171,
	171, 172, 172, 172, 172, 172, 172, 170, 161, 190,
	591, 591, 587, 587, 587, 587, 587, 587, 587, 587,
	588, 588, 588, 588, 593, 593, 115, 115, 115, 115,
	115, 115, 115, 126, 126, 126, 126, 126, 126, 126,
	129, 129, 116, 116, 116, 116, 116, 116, 116, 119,
	119, 117, 117, 117, 117, 118, 118, 81, 81, 81,
	81, 81, 15, 15, 15, 82, 82, 262, 262, 220,
	220, 220, 345, 345, 221, 221, 334, 334, 334, 334,
	218, 218, 219, 219, 83, 83, 632, 632, 632, 604,
	604, 604, 605, 605, 605, 605, 605, 605, 328, 328,
	329, 329, 435, 435, 435, 435, 435, 332, 332, 332,
	333, 333, 333, 333, 333, 333, 333, 333, 333, 335,
	335, 246, 246, 246, 343, 344, 344, 336, 336, 342,
	341, 341, 340, 340, 339, 339, 337, 338, 338, 338,
	347, 347, 346, 349, 349, 348, 434, 550, 550, 552,
	552, 552, 552, 552, 552, 552, 554, 554, 554, 554,
	554, 554, 554, 554, 554, 554, 554, 554, 554, 554,
	554, 554, 554, 418, 418, 633, 633, 634, 635, 548,
	548, 548, 549, 544, 544, 545, 545, 545, 545, 545,
	330, 330, 331, 331, 331, 331, 546, 547, 363, 363,
	473, 551, 551, 553, 553, 555, 636, 636, 636, 636,
	636, 636, 637, 637, 637, 433, 433, 432, 432, 354,
	354, 556, 556, 556, 556, 557, 557, 557, 557, 557,
	560, 559, 558, 558, 558, 558, 558, 85, 85, 85,
	397, 397, 396, 396, 398, 398, 398, 398, 398, 398,
	398, 398, 398, 398, 398, 398, 398, 398, 398, 195,
	195, 274, 274, 79, 79, 79, 12, 12, 12, 12,
	12, 12, 12, 289, 289, 13, 13, 13, 606, 606,
	606, 84, 84, 84, 84, 84, 84, 273, 273, 273,
	273, 273, 273, 273, 273, 273, 273, 273, 273, 273,
	273, 273, 273, 273, 273, 273, 273, 596, 596, 595,
	595, 275, 275, 639, 639, 90, 90, 90, 90, 90,
	90, 90, 90, 491, 491, 492, 492, 78, 78, 78,
	78, 78, 419, 419, 416, 416, 415, 415, 362, 362,
	471, 471, 471, 472, 279, 279, 280, 280, 239, 239,
	239, 31, 30, 21, 21, 26, 26, 27, 27, 261,
	261, 261, 261, 261, 261, 261, 261, 261, 28, 28,
	49, 49, 49, 49, 50, 50, 50, 50, 53, 53,
	54, 54, 48, 48, 48, 48, 51, 51, 44, 44,
	55, 55, 55, 55, 55, 614, 616, 616, 615, 615,
	619, 619, 619, 619, 619, 619, 617, 617, 618, 618,
	622, 622, 623, 623, 122, 122, 127, 127, 127, 127,
	127, 128, 128, 128, 128, 130, 130, 130, 130, 139,
	139, 194, 194, 194, 194, 194, 194, 194, 57, 57,
	57, 57, 70, 70, 70, 70, 137, 641, 641, 641,
	138, 138, 138, 640, 640, 272, 272, 429, 429, 430,
	430, 642, 642, 431, 431, 431, 431, 431, 265, 264,
	266, 266, 267, 267, 76, 76, 76, 255, 255, 254,
	256, 256, 257, 257, 252, 252, 533, 533, 259, 259,
	259, 260, 260, 248, 248, 249, 249, 250, 250, 251,
	251, 263, 263, 643, 643, 113, 113, 113, 197, 197,
	318, 318, 318, 426, 426, 426, 355, 355, 286, 286,
	428, 428, 428, 428, 393, 393, 393, 196, 196, 370,
	370, 383, 383, 384, 384, 485, 485, 385, 120, 120,
	121, 121, 136, 136, 224, 224, 222, 222, 222, 222,
	222, 222, 222, 222, 229, 229, 230, 230, 231, 231,
	232, 233, 233, 233, 233, 374, 374, 234, 234, 234,
	223, 223, 223, 225, 225, 225, 225, 225, 225, 225,
	228, 228, 228, 228, 235, 235, 235, 227, 227, 567,
	567, 567, 569, 569, 571, 571, 570, 570, 566, 566,
	568, 568, 638, 638, 399, 399, 399, 352, 353, 350,
	350, 351, 351, 360, 360, 358, 359, 359, 361, 361,
	470, 470, 470, 240, 240, 240, 390, 390, 390, 390,
	391, 391, 422, 422, 420, 420, 420, 420, 421, 421,
	423, 423, 423, 424, 424, 425, 425, 387, 387, 388,
	388, 389, 389, 389, 389, 451, 451, 226, 226, 226,
	367, 367, 367, 368, 368, 441, 441, 441, 441, 441,
	441, 441, 441, 441, 441, 442, 442, 440, 440, 440,
	440, 474, 474, 474, 474, 474, 474, 474, 474, 474,
	475, 476, 476, 369, 369, 477, 427, 427, 585, 585,
	585, 586, 586, 468, 468, 478, 478, 478, 478, 478,
	478, 466, 466, 467, 467, 486, 487, 487, 403, 403,
	403, 403, 401, 401, 404, 404, 404, 404, 404, 402,
	402, 479, 479, 479, 479, 392, 392, 480, 480, 480,
	480, 481, 482, 482, 483, 483, 436, 437, 437, 493,
	493, 493, 493, 495, 366, 366, 366, 366, 366, 543,
	542, 542, 494, 494, 494, 494, 494, 494, 494, 494,
	494, 509, 509, 509, 509, 509, 509, 509, 509, 509,
	509, 509, 509, 509, 509, 509, 509, 509, 509, 509,
	509, 509, 509, 509, 509, 509, 509, 509, 509, 509,
	509, 509, 509, 510, 510, 510, 510, 510, 510, 510,
	496, 496, 496, 496, 496, 500, 500, 500, 499, 499,
	499, 499, 499, 499, 499, 499, 499, 499, 499, 501,
	501, 506, 506, 507, 507, 507, 502, 503, 508, 508,
	508, 508, 644, 644, 512, 512, 504, 504, 504, 504,
	504, 504, 504, 504, 504, 498, 498, 498, 505, 505,
	505, 412, 412, 412, 412, 412, 412, 412, 412, 412,
	412, 412, 412, 412, 411, 411, 413, 413, 443, 443,
	443, 443, 443, 443, 443, 443, 443, 443, 443, 443,
	443, 443, 443, 443, 443, 443, 443, 443, 443, 443,
	443, 443, 443, 443, 443, 443, 443, 443, 443, 443,
	443, 443, 443, 443, 443, 443, 443, 443, 443, 443,
	443, 443, 443, 443, 443, 443, 443, 443, 443, 443,
	443, 443, 443, 443, 443, 443, 443, 443, 443, 443,
	443, 443, 443, 443, 443, 443, 443, 443, 443, 443,
	443, 443, 443, 443, 443, 443, 443, 443, 443, 443,
	443, 443, 443, 443, 443, 443, 443, 443, 444, 444,
	444, 444, 444, 444, 444, 444, 444, 444, 444, 444,
	444, 444, 444, 444, 444, 444, 444, 444, 444, 444,
	444, 444, 444, 444, 444, 444, 444, 444, 444, 445,
	445, 445, 445, 446, 446, 446, 446, 446, 446, 446,
	446, 446, 446, 446, 446, 446, 446, 446, 446, 446,
	446, 446, 446, 446, 446, 446, 446, 446, 561, 561,
	561, 561, 561, 561, 561, 561, 447, 447, 564, 564,
	565, 565, 562, 562, 562, 562, 562, 562, 562, 562,
	562, 562, 562, 562, 562, 562, 562, 562, 562, 562,
	562, 562, 562, 562, 562, 563, 563, 563, 563, 563,
	563, 563, 563, 563, 563, 563, 563, 563, 563, 563,
	563, 563, 563, 563, 563, 563, 563, 563, 563, 563,
	563, 563, 563, 563, 563, 563, 563, 563, 563, 563,
	563, 563, 563, 572, 572, 573, 573, 575, 575, 576,
	576, 577, 578, 578, 578, 579, 580, 580, 574, 574,
	581, 581, 581, 581, 582, 582, 583, 583, 583, 583,
	583, 584, 584, 584, 584, 584, 457, 457, 458, 458,
	464, 464, 464, 323, 323, 323, 323, 323, 323, 323,
	323, 323, 323, 323, 323, 323, 323, 323, 323, 323,
	323, 323, 323, 323, 323, 323, 323, 323, 323, 323,
	323, 323, 323, 323, 323, 323, 323, 323, 325, 325,
	324, 276, 276, 276, 276, 276, 276, 379, 379, 377,
	377, 377, 380, 380, 378, 378, 376, 376, 375, 375,
	454, 454, 452, 452, 456, 456, 405, 405, 511, 511,
	511, 511, 511, 511, 511, 511, 406, 406, 406, 414,
	407, 407, 408, 408, 408, 408, 408, 448, 449, 409,
	409, 409, 450, 450, 459, 463, 463, 462, 461, 461,
	460, 460, 438, 438, 439, 439, 386, 386, 645, 645,
	382, 382, 484, 484, 484, 484, 322, 322, 371, 371,
	321, 321, 313, 313, 314, 314, 314, 314, 364, 364,
	465, 465, 513, 513, 514, 514, 515, 515, 516, 516,
	517, 518, 519, 453, 453, 297, 296, 283, 284, 295,
	294, 293, 282, 285, 290, 291, 292, 287, 288, 304,
	303, 302, 253, 258, 309, 310, 310, 312, 312, 311,
	311, 299, 300, 301, 489, 281, 315, 315, 316, 316,
	316, 317, 317, 317, 317, 277, 277, 278, 278, 305,
	305, 306, 307, 307, 298, 298, 298, 268, 268, 268,
	269, 269, 270, 270, 527, 527, 524, 524, 524, 525,
	525, 525, 526, 526, 526, 526, 523, 523, 523, 523,
	523, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 538, 538, 538, 538, 538, 538, 538,
	538, 538, 538, 538, 538, 538, 538, 538, 538, 538,
	538, 538, 538, 538, 538, 538, 538, 538, 538, 538,
	538, 538, 538, 538, 538, 538, 538, 538, 538, 538,
	538, 538, 538, 538, 538, 538, 538, 538, 538, 538,
	538, 538, 538, 538, 538, 535, 535, 536, 536, 536,
	536, 536, 536, 536, 536, 536, 536, 536, 536, 536,
	536, 536, 536, 536, 536, 537, 539, 539, 539, 539,
	539, 539, 539, 539, 539, 539, 539, 539, 539, 539,
	539, 539, 539, 539, 539, 539, 539, 539, 539, 539,
	539, 539, 539, 539, 539, 539, 539, 539, 539, 539,
	539, 539, 539, 539, 539, 539, 539, 539, 539, 539,
	539, 539, 539, 539, 539, 539, 539, 539, 539, 539,
	539, 539, 539, 539, 539, 539, 539, 539, 539, 539,
	539, 539, 539, 539, 539, 539, 539, 539, 539, 539,
	539, 539, 539, 539, 539, 539, 540, 540,
}

var sqlR2 = [...]int{
	0, 1, 1, 1, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 1, 1, 0, 1, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 1, 3, 1, 1, 1, 3, 1,
	1, 1, 1, 3, 4, 6, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 6, 4, 4,
	6, 9, 6, 8, 4, 4, 5, 1, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 4, 6,
	4, 6, 6, 9, 6, 9, 6, 5, 6, 5,
	1, 1, 1, 0, 6, 6, 6, 6, 6, 6,
	4, 4, 4, 4, 3, 4, 4, 4, 7, 7,
	9, 8, 9, 5, 3, 5, 7, 4, 12, 4,
	12, 1, 3, 5, 5, 2, 5, 3, 6, 4,
	4, 4, 6, 5, 6, 5, 6, 4, 8, 3,
	4, 2, 3, 10, 3, 6, 4, 3, 1, 3,
	2, 1, 1, 3, 1, 3, 2, 4, 3, 2,
	3, 2, 0, 1, 1, 0, 2, 0, 7, 10,
	6, 8, 6, 6, 6, 9, 4, 3, 2, 2,
	0, 1, 1, 1, 1, 1, 1, 3, 6, 4,
	6, 7, 9, 6, 2, 2, 3, 0, 8, 6,
	8, 7, 2, 0, 1, 2, 5, 0, 1, 3,
	3, 1, 1, 3, 1, 12, 3, 1, 0, 1,
	1, 2, 1, 4, 0, 3, 3, 0, 4, 6,
	0, 5, 7, 6, 8, 8, 2, 1, 3, 1,
	3, 2, 5, 0, 1, 3, 3, 3, 3, 1,
	1, 1, 1, 1, 1, 3, 3, 1, 3, 3,
	3, 6, 4, 9, 7, 12, 12, 12, 9, 2,
	7, 2, 1, 1, 1, 3, 3, 0, 3, 1,
	3, 1, 1, 3, 2, 5, 0, 7, 5, 2,
	0, 1, 2, 3, 1, 1, 2, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 2, 3, 3, 3,
	3, 3, 3, 5, 3, 3, 5, 3, 3, 5,
	3, 3, 5, 3, 4, 3, 6, 6, 6, 6,
	6, 4, 1, 1, 1, 2, 1, 1, 2, 1,
	2, 1, 1, 1, 2, 1, 2, 6, 3, 8,
	3, 4, 3, 3, 4, 3, 4, 4, 4, 3,
	5, 7, 3, 3, 4, 3, 3, 3, 3, 3,
	2, 0, 1, 0, 1, 0, 4, 3, 3, 3,
	3, 3, 6, 4, 4, 4, 3, 5, 3, 3,
	3, 3, 3, 3, 3, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 4, 1, 2, 1, 2,
	1, 2, 7, 3, 2, 0, 1, 3, 3, 1,
	0, 1, 2, 2, 1, 6, 5, 1, 2, 1,
	3, 2, 0, 7, 2, 5, 0, 1, 3, 3,
	1, 9, 3, 2, 0, 2, 2, 2, 2, 2,
	2, 1, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 4, 6, 5, 7, 3, 4, 6, 3,
	4, 6, 3, 5, 7, 3, 4, 6, 3, 4,
	6, 3, 1, 1, 3, 4, 6, 3, 3, 5,
	3, 1, 3, 2, 2, 2, 2, 1, 2, 2,
	5, 3, 3, 6, 6, 3, 1, 1, 1, 1,
	2, 1, 1, 1, 2, 1, 1, 2, 1, 2,
	1, 2, 1, 1, 1, 2, 1, 1, 2, 1,
	1, 1, 1, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 1, 1, 2, 1,
	2, 1, 3, 5, 7, 2, 3, 0, 3, 5,
	2, 3, 0, 2, 3, 2, 3, 2, 6, 4,
	7, 7, 7, 9, 10, 5, 2, 6, 4, 7,
	7, 7, 10, 5, 2, 2, 1, 1, 3, 1,
	1, 1, 1, 1, 2, 1, 2, 2, 3, 2,
	4, 3, 2, 2, 1, 2, 1, 3, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 1, 3, 5,
	4, 6, 4, 3, 0, 1, 3, 2, 4, 2,
	4, 1, 6, 3, 1, 1, 5, 3, 3, 2,
	2, 6, 3, 3, 3, 3, 4, 4, 3, 1,
	3, 3, 2, 2, 1, 3, 3, 1, 2, 1,
	1, 2, 2, 3, 1, 1, 1, 1, 1, 3,
	2, 2, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 1, 2, 1, 2, 1, 2,
	1, 1, 2, 1, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 2, 1, 1, 1, 2, 2, 2, 1,
	3, 3, 3, 3, 3, 2, 3, 3, 1, 1,
	1, 1, 1, 1, 2, 2, 5, 7, 3, 3,
	3, 4, 4, 6, 5, 5, 5, 3, 4, 4,
	3, 4, 4, 3, 4, 4, 5, 3, 5, 5,
	5, 7, 3, 3, 3, 4, 6, 4, 2, 6,
	4, 3, 2, 3, 4, 3, 5, 3, 6, 5,
	6, 3, 5, 6, 3, 4, 3, 4, 3, 3,
	4, 4, 5, 0, 1, 1, 1, 1, 3, 2,
	3, 4, 3, 4, 3, 5, 3, 4, 4, 3,
	4, 5, 3, 4, 3, 4, 4, 5, 3, 3,
	1, 1, 0, 2, 3, 5, 4, 6, 4, 6,
	4, 1, 0, 3, 4, 4, 5, 7, 5, 3,
	3, 3, 4, 4, 5, 2, 0, 4, 2, 3,
	4, 2, 3, 3, 3, 5, 2, 0, 3, 3,
	4, 3, 3, 3, 3, 4, 4, 4, 4, 4,
	3, 4, 5, 4, 4, 2, 3, 2, 3, 6,
	6, 7, 9, 7, 9, 4, 3, 4, 4, 5,
	1, 1, 10, 10, 3, 5, 5, 5, 3, 5,
	6, 4, 4, 5, 5, 2, 3, 2, 5, 4,
	2, 0, 1, 1, 1, 1, 3, 2, 2, 2,
	2, 2, 2, 1, 2, 0, 1, 2, 1, 2,
	1, 2, 2, 1, 2, 1, 2, 1, 2, 2,
	4, 3, 3, 7, 3, 3, 7, 3, 3, 3,
	3, 3, 3, 3, 3, 4, 3, 3, 6, 5,
	8, 3, 6, 6, 3, 13, 16, 1, 0, 1,
	2, 3, 0, 2, 0, 4, 0, 4, 5, 4,
	3, 3, 1, 3, 10, 13, 0, 2, 3, 1,
	1, 0, 1, 2, 2, 2, 2, 1, 1, 0,
	1, 3, 1, 1, 1, 2, 3, 3, 3, 0,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 8,
	0, 1, 1, 0, 2, 1, 0, 1, 0, 1,
	1, 0, 1, 4, 1, 0, 3, 7, 7, 1,
	1, 3, 7, 1, 3, 11, 3, 2, 0, 3,
	1, 2, 2, 3, 2, 6, 2, 1, 2, 2,
	2, 8, 4, 2, 3, 5, 5, 5, 2, 5,
	5, 2, 2, 2, 0, 1, 1, 3, 4, 11,
	12, 9, 5, 3, 1, 5, 10, 7, 11, 3,
	3, 0, 2, 4, 3, 3, 1, 5, 1, 3,
	1, 2, 0, 1, 2, 2, 0, 1, 3, 3,
	2, 2, 1, 1, 1, 4, 0, 6, 0, 3,
	0, 2, 2, 2, 0, 1, 1, 2, 2, 0,
	3, 3, 2, 1, 1, 2, 2, 5, 8, 4,
	1, 0, 1, 2, 2, 1, 2, 3, 3, 2,
	2, 3, 2, 2, 2, 2, 2, 3, 1, 4,
	2, 2, 2, 4, 7, 3, 4, 6, 5, 7,
	5, 5, 3, 3, 0, 2, 2, 2, 1, 1,
	1, 8, 10, 11, 7, 10, 5, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 2, 2,
	0, 3, 3, 0, 1, 8, 11, 3, 6, 6,
	5, 3, 4, 1, 0, 1, 3, 17, 20, 16,
	19, 4, 2, 0, 1, 0, 1, 0, 1, 3,
	2, 4, 2, 3, 1, 0, 2, 0, 1, 1,
	0, 9, 6, 6, 8, 6, 8, 5, 7, 2,
	6, 7, 4, 4, 5, 2, 4, 6, 6, 8,
	6, 7, 8, 9, 6, 7, 8, 9, 6, 8,
	6, 8, 6, 7, 8, 9, 6, 8, 6, 8,
	6, 6, 8, 8, 4, 7, 3, 0, 7, 10,
	1, 1, 1, 1, 2, 2, 3, 0, 3, 0,
	1, 0, 2, 0, 2, 2, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 2,
	2, 1, 2, 1, 2, 1, 2, 1, 3, 2,
	3, 2, 2, 2, 2, 2, 2, 1, 1, 0,
	2, 4, 2, 1, 0, 2, 1, 1, 0, 1,
	3, 1, 0, 1, 1, 1, 1, 1, 2, 3,
	2, 2, 1, 2, 13, 16, 3, 1, 0, 4,
	1, 0, 2, 2, 3, 0, 1, 1, 4, 4,
	5, 1, 0, 3, 0, 3, 0, 3, 0, 3,
	0, 4, 0, 1, 0, 6, 7, 3, 6, 3,
	1, 3, 1, 1, 4, 2, 1, 3, 1, 3,
	4, 8, 11, 5, 2, 2, 0, 10, 3, 2,
	0, 1, 3, 1, 1, 3, 3, 5, 6, 4,
	5, 4, 1, 1, 3, 3, 1, 2, 4, 4,
	2, 3, 5, 5, 1, 3, 1, 0, 1, 2,
	3, 2, 4, 2, 3, 0, 2, 0, 2, 1,
	2, 1, 1, 1, 2, 1, 2, 1, 2, 1,
	8, 8, 8, 2, 4, 4, 4, 2, 2, 2,
	2, 3, 1, 3, 1, 2, 6, 7, 1, 0,
	1, 0, 1, 0, 1, 1, 0, 1, 5, 1,
	0, 1, 0, 1, 0, 3, 3, 5, 1, 3,
	3, 4, 5, 2, 2, 0, 2, 2, 1, 1,
	1, 0, 1, 0, 2, 2, 5, 4, 2, 3,
	1, 1, 1, 1, 1, 1, 1, 3, 0, 1,
	3, 1, 3, 3, 3, 2, 0, 4, 2, 5,
	3, 2, 0, 1, 3, 3, 5, 1, 1, 1,
	1, 1, 1, 3, 5, 1, 3, 2, 4, 4,
	0, 4, 4, 3, 4, 1, 5, 3, 4, 5,
	5, 1, 5, 1, 3, 2, 0, 3, 0, 2,
	3, 1, 3, 2, 0, 3, 5, 6, 4, 6,
	4, 3, 2, 1, 0, 5, 1, 0, 2, 2,
	2, 1, 1, 0, 1, 1, 1, 1, 0, 4,
	2, 1, 2, 2, 4, 1, 3, 1, 2, 3,
	2, 4, 1, 0, 1, 0, 2, 1, 0, 2,
	5, 7, 2, 1, 2, 4, 3, 5, 0, 1,
	3, 5, 1, 2, 1, 1, 1, 1, 1, 2,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 4, 4, 6, 6,
	1, 1, 1, 1, 1, 3, 5, 0, 1, 1,
	1, 1, 1, 2, 2, 2, 2, 2, 1, 3,
	0, 5, 4, 1, 2, 1, 4, 1, 1, 2,
	1, 1, 1, 1, 1, 0, 1, 2, 5, 1,
	4, 2, 5, 1, 4, 3, 3, 0, 1, 2,
	4, 1, 1, 1, 1, 1, 1, 3, 3, 3,
	3, 3, 3, 3, 1, 0, 1, 4, 1, 3,
	3, 3, 5, 2, 2, 2, 2, 2, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	2, 3, 3, 3, 2, 2, 3, 5, 4, 6,
	3, 5, 4, 6, 4, 6, 5, 7, 3, 3,
	3, 3, 3, 4, 3, 2, 4, 2, 3, 3,
	4, 3, 4, 3, 4, 5, 6, 6, 7, 6,
	7, 6, 7, 3, 4, 4, 1, 3, 1, 3,
	3, 2, 2, 2, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 2, 3, 5, 6, 6, 7, 1,
	2, 1, 2, 1, 1, 1, 1, 1, 6, 1,
	1, 1, 1, 1, 1, 2, 1, 5, 5, 6,
	3, 1, 1, 1, 2, 2, 2, 4, 3, 5,
	6, 8, 6, 5, 4, 3, 2, 2, 4, 1,
	1, 1, 5, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 6, 6, 8, 8, 6, 4,
	6, 6, 6, 4, 1, 3, 3, 3, 3, 3,
	4, 3, 3, 4, 3, 3, 4, 3, 3, 4,
	3, 3, 3, 3, 3, 4, 3, 4, 3, 4,
	3, 4, 4, 3, 6, 5, 5, 5, 4, 4,
	3, 4, 3, 5, 0, 5, 0, 2, 0, 1,
	3, 3, 2, 2, 0, 6, 1, 0, 3, 0,
	3, 3, 3, 0, 1, 4, 2, 2, 2, 2,
	2, 3, 2, 2, 3, 0, 4, 1, 1, 5,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	4, 1, 1, 1, 2, 1, 2, 2, 3, 1,
	2, 3, 2, 3, 2, 3, 1, 0, 1, 3,
	1, 3, 3, 3, 1, 3, 3, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 4, 3, 1, 2,
	3, 0, 3, 3, 2, 2, 1, 2, 2, 3,
	2, 1, 1, 1, 5, 1, 2, 4, 2, 0,
	1, 0, 3, 5, 1, 0, 1, 2, 1, 0,
	1, 3, 3, 2, 1, 1, 1, 3, 1, 3,
	3, 1, 1, 1, 1, 5, 3, 1, 1, 3,
	1, 1, 1, 1, 2, 2, 1, 1, 2, 2,
	1, 1, 1, 3, 5, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 1, 3, 1,
	0, 1, 1, 1, 1, 1, 1, 1, 3, 5,
	7, 1, 7, 5, 3, 1, 1, 1, 1, 1,
	1, 1, 3, 5, 1, 1, 1, 1, 1, 1,
	1, 0, 3, 0, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
}

var sqlChk = [...]int{
	-1000, -1, -2, 603, -106, -103, -71, -69, -110, -111,
	-92, -112, -105, -134, -139, -120, -121, -122, -135, -141,
	-194, -199, -200, -201, -3, -56, -58, -72, -91, -93,
	-104, -114, -113, -115, -123, -131, -126, -109, -63, -136,
	-140, -151, -195, -196, -197, 32, 31, 100, 80, 155,
	129, 138, 204, 387, 432, 444, 402, 143, 423, 407,
	-145, -146, 462, -57, -70, -138, -137, 73, 130, 417,
	-4, -12, -16, 29, 46, -59, -60, -61, -62, 62,
	-79, -75, -86, -80, -73, -74, -77, -626, 102, -568,
	-94, -97, -130, -630, 162, 222, -116, -117, -118, 369,
	-124, -125, 425, -127, -128, -129, 428, 163, -65, -64,
	157, -222, -224, -143, -142, -144, -198, -152, -153, -154,
	-155, -156, -157, -158, -160, -186, -161, -162, -163, -164,
	-165, -166, -170, -189, -167, -168, -169, -172, -171, -173,
	-178, -174, -175, -176, -177, -179, -180, -182, -183, -184,
	-185, -187, -188, 467, -181, -190, -159, 528, 49, 482,
	82, 147, 436, 21, -5, -6, -7, -8, -9, -10,
	-11, -15, -14, -55, -76, -78, -81, -82, -83, -90,
	-84, -85, -567, -95, -96, -99, -101, -102, -98, -100,
	424, -225, -223, 600, 543, -18, -23, -24, -19, -20,
	-22, -25, -21, -26, -27, -28, -40, -45, -46, -42,
	-43, -41, -44, -47, -48, -49, -50, -51, -52, -53,
	-54, -30, -36, -37, -31, -32, -33, -34, -35, -38,
	-39, -17, -29, 564, 573, -228, -226, -227, -235, 454,
	551, 502, 603, 603, 603, 603, 603, 603, 603, 603,
	603, 603, 603, 603, 603, 603, 603, 603, 603, 603,
	603, 603, 603, 603, -320, 2, -299, -305, -306, -307,
	-298, -268, -537, -540, 4, -534, -538, 169, 232, 333,
	21, 23, 22, 24, 25, 26, 27, 29, 30, 41,
	42, 44, 45, 46, 47, 48, 49, 53, 55, 59,
	60, 61, 62, 63, 64, 68, 73, 74, 79, 80,
	81, 82, 83, 84, 85, 91, 88, 89, 90, 92,
	94, 96, 97, 98, 99, 100, 101, 103, 104, 105,
	107, 108, 109, 117, 118, 119, 120, 121, 123, 129,
	124, 130, 133, 128, 132, 134, 136, 137, 138, 141,
	142, 143, 145, 146, 148, 149, 150, 152, 153, 155,
	156, 157, 160, 158, 510, 159, 161, 162, 163, 164,
	167, 175, 176, 177, 182, 184, 185, 186, 190, 191,
	192, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	205, 209, 211, 212, 213, 214, 215, 221, 222, 224,
	225, 226, 227, 228, 233, 234, 235, 239, 236, 245,
	246, 250, 251, 252, 254, 258, 259, 260, 261, 262,
	263, 265, 267, 266, 269, 272, 273, 276, 277, 278,
	279, 280, 281, 285, 286, 282, 287, 288, 290, 291,
	294, 292, 295, 296, 293, 297, 299, 300, 301, 302,
	303, 304, 305, 306, 307, 308, 309, 310, 298, 313,
	311, 315, 316, 317, 318, 331, 327, 328, 322, 323,
	319, 324, 320, 321, 325, 326, 330, 335, 336, 339,
	219, 341, 342, 345, 363, 349, 350, 351, 354, 355,
	358, 361, 362, 364, 365, 366, 367, 368, 369, 370,
	371, 372, 374, 375, 377, 378, 379, 381, 382, 383,
	385, 387, 388, 390, 391, 393, 394, 395, 396, 397,
	398, 399, 401, 402, 404, 403, 405, 407, 409, 410,
	411, 417, 423, 419, 420, 421, 422, 424, 425, 426,
	427, 428, 430, 431, 432, 434, 435, 436, 437, 438,
	440, 442, 443, 447, 448, 464, 465, 484, 444, 445,
	446, 449, 450, 451, 452, 453, 457, 455, 456, 458,
	459, 460, 462, 463, 466, 467, 469, 470, 471, 472,
	473, 474, 475, 478, 480, 481, 482, 501, 483, 485,
	489, 490, 491, 492, 486, 487, 500, 494, 495, 497,
	498, 503, 504, 505, 506, 507, 508, 509, 511, 513,
	521, 522, 523, 525, 528, 529, 530, 531, 519, 533,
	534, 537, 538, 539, 542, 540, 541, 543, 545, 548,
	549, 550, 556, 555, 557, 559, 560, 565, 566, 568,
	569, 570, 36, 50, 51, 54, 56, 58, 69, 70,
	71, 75, 125, 126, 154, 165, 166, 178, 193, 194,
	206, 208, 216, 217, 218, 240, 241, 243, 248, 270,
	338, 340, 356, 360, 376, 380, 384, 386, 400, 439,
	476, 488, 493, 514, 515, 516, 517, 524, 526, 551,
	552, 553, 558, 567, -320, 2, -299, 347, -292, 2,
	-268, -268, 387, 28, 2, 28, 375, 456, 505, 507,
	2, -594, -365, 2, 28, -271, -268, 102, 204, 454,
	-292, 2, -594, -365, 25, 2, -268, 2, 361, 22,
	27, 66, 77, 98, 141, 164, 187, 190, -629, 363,
	394, 442, 458, 500, 511, 525, 2, 555, 291, 455,
	502, 232, 120, 530, 449, -606, 447, 448, 361, 392,
	434, 207, 544, -272, 2, 444, -268, 291, 2, 603,
	94, 74, 439, 459, -148, 2, 281, 522, -149, -150,
	-147, 514, -522, 449, 434, 313, -268, 603, 603, 603,
	28, -281, -268, 502, 232, 449, 120, 498, 603, 2,
	502, 366, 555, 455, 120, 397, 232, 530, 190, 141,
	27, 449, -606, 578, 579, 291, 127, -592, 2, -587,
	4, -538, -534, -314, -313, 502, 508, 120, -307, -298,
	593, -306, 603, 603, 603, 603, 2, 251, 252, 396,
	395, 459, 460, 28, 603, 603, 603, 603, 447, 2,
	164, 22, 27, 66, 93, 98, 127, 187, 190, 352,
	-627, 363, 394, 458, 500, 504, 511, 525, -605, 483,
	68, 422, 449, -604, -606, 291, 530, 141, -415, 120,
	281, 202, 538, 507, 505, 536, 133, 239, 541, 540,
	603, 603, -107, 2, 600, 32, 31, -106, -110, 143,
	462, -217, 502, 244, 2, -268, 603, 603, 603, 2,
	251, 252, 447, 448, 28, 603, 603, 188, -587, 2,
	603, 603, 603, 2, 28, 251, 252, 447, 448, 244,
	2, 68, 451, 603, 603, 603, 603, 603, 603, 603,
	603, 603, 603, 603, 603, 603, 603, 603, 603, 603,
	603, 603, 603, 603, 603, 603, 603, 603, 603, 603,
	603, 603, 603, 603, 603, 603, 603, 603, 603, 2,
	-192, 459, 483, 213, 47, 46, 74, 28, 393, 79,
	367, 121, 127, 149, 531, 205, 232, 233, 259, 93,
	94, -417, 44, 252, 68, 251, 448, -612, 447, -469,
	503, 450, 456, 497, 263, 444, 522, 102, 545, 435,
	570, 397, 398, 495, 411, 282, 158, 189, 4, 120,
	313, 434, 461, 514, 281, 443, 370, 84, 603, -638,
	2, 502, -640, 2, 522, 522, 2, -640, 2, -640,
	2, -640, 2, -641, 522, 567, 603, 603, 603, 603,
	603, 603, 603, 603, 603, 603, 603, 603, 603, 603,
	603, 603, 603, 603, -223, -225, -224, 603, 603, 603,
	603, 603, 603, 603, -192, 459, 2, 74, 28, -358,
	-360, 535, 242, 151, 353, -222, -224, 2, -567, -520,
	2, -443, -541, -445, 591, 592, 584, 499, 67, -324,
	332, 571, -457, 127, 536, 347, -540, -446, -459, 154,
	363, 439, -380, 8, 9, 5, 6, 7, -277, -447,
	-453, 527, 168, 337, -317, 604, 10, 600, -564, -224,
	-458, 37, 208, 65, -524, -316, -278, -496, 243, -315,
	-298, -561, -562, 4, -534, -535, -525, -499, -507, -503,
	-504, -510, -268, -537, 77, 111, 112, 110, 115, 114,
	284, 283, 116, 113, 461, 544, 66, 36, 216, 217,
	248, 338, 218, 75, -563, 142, -536, 240, 241, 476,
	51, 400, 178, 126, 125, 340, 56, 54, 552, -508,
	122, 514, 515, 516, 517, 193, 194, 58, 165, 166,
	360, 384, 493, 524, 526, 206, 270, 43, 106, 189,
	238, 220, 247, 249, 253, 271, 274, 314, 329, 334,
	357, 359, 433, 468, -644, 553, 488, 69, 70, -569,
	403, -570, -292, -569, 603, 603, 605, 603, -350, -352,
	-353, 2, 28, 139, 600, 2, -474, 2, -475, -479,
	-224, 264, -478, 600, -476, 598, -299, 348, -565, 440,
	-561, -562, -277, -298, -316, 4, -534, -536, 602, -354,
	600, 120, 449, 502, 78, 232, 164, -410, 600, -268,
	28, 347, 518, 605, -351, 391, -455, 600, 347, 188,
	350, 60, 295, 2, 2, 2, 2, 2, 216, -268,
	502, 119, 2, 262, 2, 2, 2, 2, 2, 2,
	2, -373, 216, 2, -299, 555, -373, 216, 2, -373,
	216, 2, -416, 2, 87, -282, 216, 2, -268, -308,
	216, 2, -303, -305, -312, 216, 2, -310, -268, -532,
	216, 2, -531, -527, 10, -526, 5, 4, -534, -538,
	-535, -537, 77, -443, 2, -136, 2, 60, -268, 555,
	2, 464, 2, 600, -148, 2, 71, 522, 43, 459,
	-149, 2, -430, 2, -431, -264, -265, -266, -486, -267,
	250, 390, 399, 574, 131, 332, 570, -621, 188, 583,
	518, -520, -520, -520, -381, 602, 2, 2, 2, 2,
	2, 2, -479, 216, -299, 2, -296, -523, 4, -534,
	-538, -535, -539, 28, 31, 32, 33, 35, 37, 38,
	39, 40, 57, 65, 66, 72, 76, 78, 87, 93,
	102, 110, 111, 113, 112, 114, 115, 116, 127, 131,
	135, 139, 140, 144, 147, 151, 168, 170, 183, 187,
	188, 204, 207, 210, 223, 237, 242, 244, 264, 268,
	275, 283, 284, 332, 337, 343, 347, 348, 352, 353,
	373, 389, 406, 429, 454, 461, 479, 496, 502, 512,
	518, 520, 527, 535, 536, 544, 546, 554, 561, 562,
	563, 564, -540, 2, -479, 216, 2, -302, 216, -479,
	-305, 2, -282, 2, -295, -523, 2, -321, 216, -299,
	-301, -305, -303, 2, 2, 2, 2, -310, 2, -531,
	216, 2, 28, 28, 555, 391, 244, 518, 605, -371,
	-313, -314, -519, 8, -364, -268, 602, -443, 2, -136,
	-119, 2, 183, -443, 216, 2, -136, 216, 2, -443,
	216, 2, -136, 216, 2, -268, 2, -607, 2, -531,
	216, 216, -268, 2, 295, 2, 2, 525, 2, 98,
	502, 119, 2, 421, -628, 442, 529, 2, 2, 2,
	2, 2, 2, 2, 502, -287, 2, -268, 183, 486,
	-310, 216, -311, 2, 455, -639, 403, -531, 216, 2,
	555, -303, 216, 2, -303, 232, 246, -282, 216, 2,
	507, 505, 507, 505, 188, 2, 244, 2, 244, 2,
	-480, 2, -481, -475, -482, 598, 348, -490, 2, -489,
	-526, 551, -107, 600, -107, 600, 459, 600, -531, -299,
	-299, -443, 2, -136, -119, 2, -443, 2, -136, 2,
	-268, 2, -133, -531, -132, 600, 188, -268, 2, -443,
	2, -136, -119, 2, -443, 2, -136, 2, -217, 183,
	2, 120, 502, -192, 2, 183, 546, 2, 8, 2,
	223, -531, 450, 398, 175, 2, 464, 2, 465, 74,
	-417, 570, 74, 188, 2, 188, 2, -400, 2, 564,
	391, 188, 2, 2, -591, 2, 347, 188, 2, 188,
	2, 188, 2, 188, 2, 188, 2, -191, 460, 523,
	501, 395, 252, 2, -136, 561, -119, 252, 251, -443,
	561, 2, -613, 183, 448, -443, 2, 521, 261, 159,
	188, -400, 2, 188, 2, 188, 2, 5, 2, 396,
	484, 2, 250, 390, 484, 2, -299, 502, 555, 455,
	120, 28, 2, 447, 2, 2, 88, 89, 188, 2,
	188, 2, 203, 188, 2, 188, 502, 570, 2, -392,
	-479, -429, -430, -429, 518, -358, -360, -192, 464, 2,
	-229, -390, -231, 183, -420, -421, -232, 275, 170, 343,
	-233, -399, 28, 139, -399, -399, 60, 601, 601, 11,
	12, 76, 41, 591, 592, 593, 594, 181, 595, 596,
	589, 590, 588, 581, 582, 586, 256, 257, 95, 585,
	583, 86, 289, 441, 171, 172, 173, 174, 418, 230,
	34, 231, 14, 15, 16, -324, 33, 352, 274, 571,
	220, 468, 584, 17, 18, 19, 247, 249, 334, 50,
	223, -276, 363, -323, 499, 67, -443, -443, -443, -443,
	-443, -443, -443, -443, 359, 600, -386, -438, 598, -224,
	600, 600, 600, 600, -519, -224, -443, -457, 601, -378,
	600, -224, -457, -452, 600, 439, 598, 600, -460, -443,
	5, 5, 5, 600, 602, -572, 565, 183, 600, 600,
	600, 600, 600, 600, 600, 600, 600, 600, 600, 600,
	600, 600, 600, 600, 386, -501, 600, -500, 600, -500,
	-500, 556, -498, 600, 573, 566, 600, -498, 600, 600,
	600, 600, 600, 600, 600, 600, 600, 600, 600, 600,
	600, 556, 605, -569, -354, 600, -382, -484, -443, 593,
	-382, -382, 347, -375, -443, 106, -403, 253, 314, 189,
	271, 433, 238, -440, 604, -440, -468, 573, -224, -476,
	-298, -224, -478, 600, -474, -468, -108, -519, -91, -104,
	-113, -136, -151, -196, -197, 593, -299, 600, 188, 600,
	602, -523, 188, -364, -282, -309, -268, -299, -315, -316,
	-321, 2, 138, -375, -587, 530, 449, 28, 455, -364,
	-271, 38, -454, -493, -494, -543, 604, -542, -496, -506,
	-502, -505, 376, 380, -525, 54, 552, -508, 243, 4,
	-534, -536, 240, 241, 476, 51, 400, 178, 126, 125,
	340, 56, 514, 515, 516, 517, 193, 194, 58, 553,
	488, 69, 70, -587, 530, 449, 28, 455, -364, 183,
	-364, 2, 2, 154, 2, 2, 2, -268, -245, 605,
	64, 426, 154, -373, 216, -245, 154, -245, 154, -322,
	216, -321, -245, 154, -245, 605, 154, -245, 605, 154,
	602, 605, 154, -364, 2, -416, -522, -375, 38, -430,
	2, 127, -528, -526, 5, -642, 605, 273, -327, 288,
	331, 212, 348, 568, 341, 131, -530, 5, 4, -453,
	-465, 127, 281, 243, -513, -515, 8, -514, 9, -516,
	591, 592, -521, -520, 109, 602, -523, -242, 419, 462,
	362, -241, 24, 29, 143, 234, 318, 549, 160, -340,
	235, -337, 366, 154, 480, 539, -601, -602, 446, 509,
	510, 90, 341, 462, 362, 419, 154, -396, -398, 38,
	118, 318, 361, 61, 227, 293, 294, 482, 558, 154,
	462, 362, 419, 362, -13, -257, 24, 143, -259, -254,
	462, -602, 99, 419, 577, 424, 372, 494, 389, -602,
	-244, 480, 539, -601, -602, 446, 419, -243, -342, -337,
	366, 154, 604, 24, 143, 419, 462, 362, -624, -625,
	29, 419, 362, -595, -289, -566, 223, 564, 154, -289,
	-289, -479, 216, -617, 183, 2, -610, -132, 265, 5,
	10, -531, -132, -371, 605, 605, -523, 593, 448, 447,
	154, 154, 154, 154, 252, 183, 332, 332, 2, 2,
	2, 2, 2, 190, -604, -629, 2, 2, -299, 216,
	-356, 347, -590, -372, 502, -299, 183, 332, 43, -302,
	216, 2, -305, 555, -595, 332, -304, 216, -299, 38,
	600, 332, 2, -416, 2, 232, -566, 332, -480, -318,
	-299, -475, -318, 462, -292, 38, -440, -299, 601, 605,
	-490, -490, -531, -205, 564, 188, 102, 600, 600, -217,
	564, 564, 252, -487, 605, -486, 223, -532, -133, -531,
	422, 252, -531, -590, -282, 2, -299, 2, 502, 254,
	-531, -205, 223, -531, -531, -531, -522, 28, 465, 2,
	-191, 460, 523, 89, 465, 2, -299, 502, 120, 232,
	80, -617, 183, 2, -268, -593, 183, -588, 434, 449,
	530, -587, -299, 120, -299, 120, -299, 120, -299, -299,
	2, 2, 2, 2, 2, 85, 2, -136, -443, 2,
	85, 2, 46, 481, -613, 183, 2, 521, 2, 521,
	2, -268, -268, -268, 483, 273, -299, -299, -299, -300,
	-305, 503, 448, -443, 2, -631, 2, 188, 183, 2,
	502, 232, 502, 232, 120, 188, 74, 120, 28, 502,
	445, -245, 605, -272, -229, -390, -522, -391, -390, -230,
	-229, -232, 183, 399, 540, 318, 466, 258, -421, -420,
	28, -443, -425, 177, 317, -443, -423, -445, 591, 592,
	-514, -516, -374, 341, -223, -223, -223, -361, -470, -443,
	389, 232, -495, -493, -493, -297, -523, 514, -443, -443,
	-443, -443, -443, -443, -443, -443, -443, -443, -443, -443,
	-443, -443, -443, -443, -443, -443, -443, -443, -443, -443,
	-443, -443, -443, -443, -443, -443, -443, -443, -443, -443,
	-443, -443, -443, -443, 274, 220, 468, 50, 223, -443,
	518, -443, -443, -443, -443, 311, 332, 337, 527, 168,
	537, 139, 341, -645, 496, 40, -450, -224, -379, 600,
	-464, 35, 479, 28, -457, 600, 2, -438, -443, -439,
	-325, -323, -268, 591, 592, 593, 594, 595, 596, 581,
	582, 583, 14, 15, 16, 586, 590, 588, 589, 181,
	95, 585, 289, 441, 86, 171, 172, 173, 174, 256,
	257, 17, 18, 19, 34, 584, -376, -375, -375, 601,
	554, 28, 139, 593, 2, 601, 605, 38, 601, -443,
	-376, -456, -452, -375, -463, -462, 561, -411, -412, 569,
	298, 123, 214, 296, -413, 453, -517, 8, -523, 593,
	-573, 176, 207, 600, 601, 2, 601, 2, 601, -443,
	2, 601, -443, 2, 601, -443, 2, 601, -443, 2,
	601, 2, 601, 2, -443, -443, -443, -443, -443, -443,
	-443, -375, 8, -517, -517, 514, 514, -517, -517, -517,
	-509, 376, 377, 378, 379, 276, 277, 278, 279, 380,
	381, 382, 383, 303, 304, 305, 306, 299, 300, 301,
	302, 307, 308, 309, 310, 198, 199, 200, 201, 194,
	195, 196, 197, -509, -405, 2, -511, -375, 4, 569,
	298, 123, 214, 296, 453, 5, -405, 2, -406, 2,
	-443, -375, -407, -444, -445, 591, 592, 584, -324, -457,
	-408, 2, -443, -376, -443, 57, 268, 520, -409, -443,
	188, -375, -375, 2, -375, 2, -570, 38, -375, -367,
	605, 188, 38, 4, -367, -367, 600, 601, 605, -404,
	211, 292, 287, 246, -404, -474, -403, 253, -401, 357,
	-401, -401, -468, -283, 598, 606, -523, -468, -467, -466,
	38, -292, 354, -468, -468, 602, 601, -467, 599, -585,
	600, 603, 603, 603, 603, 603, -299, 600, -375, -523,
	602, 485, 2, 601, 247, 247, 247, 247, 247, 440,
	601, 518, -589, -308, -312, 503, 2, 564, -106, 349,
	601, 605, -366, 37, 598, 602, -517, 2, 2, -512,
	556, 600, 600, -412, 600, 188, -589, -312, 503, 2,
	-365, 518, -268, 2, -299, -373, -245, 154, -373, -373,
	-245, 605, 154, -282, -303, -308, -310, -312, -268, -531,
	-532, -245, -304, -621, 601, 522, -431, -326, 399, 478,
	420, 457, 498, 8, 9, 8, 9, 605, -523, 605,
	-622, 93, 518, 78, 449, -261, 282, 518, -434, 216,
	78, -544, -285, 93, -545, -268, 72, 536, 389, 187,
	152, -622, 93, 389, -622, 93, 2, 234, 93, 462,
	483, 28, 60, -479, 41, 41, 28, -620, 330, 269,
	560, 188, 570, 502, 232, 449, 518, 518, -479, -398,
	-493, 118, 293, 294, 60, -518, -513, 591, 592, -518,
	60, -518, -518, -518, 564, -302, -479, 449, 518, 518,
	518, 409, 409, -254, -149, 518, 518, 28, -192, 427,
	127, -643, 583, 409, 605, 41, 41, 28, -620, 330,
	269, 188, 518, -321, -283, 550, 42, 550, 42, 550,
	518, 42, 449, 518, 605, 42, 518, 518, -13, 462,
	-596, -273, 105, 324, 286, 325, 97, 321, 96, 320,
	103, 322, 104, 323, 557, 335, 63, 319, 297, 326,
	-274, -275, 368, 548, 120, -531, -13, -13, 462, 362,
	419, 154, -618, 223, 28, -606, 223, -487, 223, -487,
	-313, -268, 602, -136, -443, -443, -136, -443, -136, 46,
	154, 154, 2, -639, 262, 600, -330, 332, 188, -364,
	-488, 244, 605, -372, -587, 154, -529, -528, 116, 461,
	-397, -396, 332, -304, 216, 2, 154, -354, 332, 148,
	600, 397, 2, 154, -284, 216, -269, -268, -416, -248,
	506, 154, -394, 546, -426, -136, 600, 127, 38, -426,
	-383, -384, -485, -385, -285, 600, -292, -440, -107, -489,
	601, 601, 601, -204, 351, -203, -268, 5, -217, 546,
	-329, -435, -434, -548, -549, -544, 274, 232, 536, 246,
	169, -355, -286, -285, 119, 401, 401, -211, 564, -132,
	-133, 601, -487, 223, 486, -205, -205, -487, -487, -299,
	183, -531, -205, -205, -205, 2, 2, 2, 2, -400,
	-299, -282, -321, -299, 28, 602, -364, -364, -312, -308,
	-400, -282, -400, -282, -400, -282, -136, -443, 483, 2,
	459, 183, 183, 602, -400, -357, 429, 2, 397, 120,
	502, 366, 232, -299, -321, -299, -321, -282, 120, -282,
	121, -299, -479, -391, -230, 348, 258, 466, -423, -424,
	-445, 439, 440, -424, 439, 440, 8, 9, 8, 9,
	-234, 470, 336, -373, 605, -239, 39, 135, 258, -299,
	570, 150, -443, -443, 518, -645, 496, -450, 150, -443,
	311, 337, 527, 168, 537, 139, 341, 188, 600, -444,
	-444, 601, -377, -443, -443, 599, 608, 601, 602, 601,
	-360, 605, -358, -443, -375, -375, 601, 602, -375, -364,
	599, 599, 605, 601, -461, -462, 144, -443, 518, 518,
	518, 518, 600, 601, 602, -578, 358, 600, 600, -443,
	601, 601, 601, 601, 38, 605, 605, 605, 601, 605,
	605, 605, 601, 601, 601, 605, 601, 570, 570, 601,
	601, 601, 601, 605, 601, 605, 601, 188, 601, 601,
	-414, 373, 601, 11, 12, 591, 592, 593, 594, 181,
	595, 596, 589, 590, 588, 581, 582, 583, 86, 289,
	441, 14, 15, 16, -324, 247, 223, -444, -444, -444,
	-444, 601, -448, -449, 188, 183, 38, -409, -409, -409,
	601, 188, -375, 601, 601, 600, -571, 291, 332, 601,
	-437, -436, 562, -484, -368, 2, -474, -294, -523, -437,
	-437, -375, -443, 253, 253, -402, 546, 347, -404, -474,
	-467, -519, -442, -441, 185, 39, 135, 327, 328, 219,
	186, -467, -292, -354, -467, -467, -523, -468, -468, -466,
	601, -586, -519, 601, -369, -477, -565, -360, 602, -523,
	-214, -566, -193, 5, 337, -193, -193, -193, -193, -364,
	518, 518, 223, 25, 374, -493, 598, 599, 8, -523,
	600, -517, -517, -517, -364, 188, 188, 223, 188, -529,
	2, -245, -373, -245, -245, -321, -322, -245, -245, -245,
	-395, 564, -520, -430, 534, 83, 399, 514, -520, -241,
	419, -285, -285, -299, -309, 202, 410, -529, 332, -434,
	216, -247, 332, -493, -293, -268, 600, -418, 566, 258,
	258, 546, -285, -293, 258, 216, -285, 216, -293, 2,
	-293, -597, 399, 342, -443, 60, -338, 280, 397, 333,
	-242, 419, 462, 362, -136, -136, -136, -136, -136, 600,
	-621, 546, 138, -299, -321, -299, -309, -529, -304, 462,
	362, 419, 329, -315, -518, -518, -396, 462, 362, 419,
	-309, -529, -302, -529, -253, 216, -268, -253, 216, 449,
	-282, 409, 570, 45, -643, -243, -136, -136, -136, -136,
	-136, 600, -283, -244, 419, 5, 216, -285, 5, -285,
	216, 5, -268, -285, -309, -529, -625, 24, 143, -285,
	-309, -529, -273, -531, 337, 542, -282, -595, -289, 449,
	518, 518, -479, -614, -615, 204, 432, 449, 435, -364,
	-132, -208, 564, -132, -202, 228, 593, -592, -531, -268,
	555, -268, -328, -331, -329, -285, -220, -221, 566, 564,
	154, -319, -299, 598, -205, -531, -299, -488, -310, -311,
	154, -354, 332, -531, 38, 154, 600, 2, 2, -303,
	347, 332, -284, 216, -249, 145, -643, -282, -437, -368,
	-393, -428, 429, 347, -355, 551, -292, -393, -370, 605,
	188, 583, 602, -355, -483, 593, -107, -107, -205, 605,
	600, 583, 583, 600, -531, -531, 601, 605, -247, -299,
	-284, 232, 232, -291, -269, 601, 605, 602, 600, 583,
	583, -213, 351, -212, 146, 260, 245, 472, 473, 474,
	475, 137, 471, 124, 316, -487, -211, -133, 188, 188,
	-66, 564, 502, -205, 604, 435, -268, -400, -400, -400,
	459, 459, -268, -364, -295, -282, -299, -296, -321, 183,
	183, -282, 540, -424, 348, 285, -470, -240, 572, -299,
	604, -443, -443, 150, 150, -443, -444, -444, -443, 150,
	188, 600, -443, -454, 33, 33, 601, 605, -439, -443,
	-323, 601, 554, -360, -360, 601, 593, -523, 604, 601,
	-452, 147, -443, 512, 298, 214, 296, -413, 296, -413,
	-413, -517, 5, -523, 593, -579, -288, 600, -268, 562,
	-359, 353, 601, -495, -493, -443, -443, -443, -443, -443,
	-517, -498, -498, -513, -513, -443, -448, -443, -495, -493,
	-444, -444, -444, -444, -444, -444, -444, -444, -444, -444,
	-444, -444, -444, -444, -444, -444, -444, -444, -444, -444,
	139, 332, 341, -444, -449, -448, -443, -443, -493, 601,
	601, 601, -375, -106, 600, 291, -387, 207, -443, -487,
	605, -387, -387, 601, -474, -474, 600, -443, 253, 599,
	605, 607, 583, 583, -354, 602, -466, -467, 599, 601,
	605, 601, 605, -427, 38, 601, -523, -437, -216, -215,
	136, 53, 107, 134, 337, -364, -364, 449, 350, 5,
	8, 598, 599, 602, -517, 601, 601, 601, -364, -364,
	449, -364, -245, -245, 119, 318, -443, 518, 518, 60,
	223, 154, 332, 548, -550, -545, 152, -443, 600, 232,
	600, 600, 2, -236, -237, -238, 143, 462, 24, -623,
	2, 546, 154, -245, 154, -245, 568, -338, 600, 600,
	518, 449, -261, 518, 564, -375, -443, -206, 127, -522,
	-602, 604, -602, 604, 449, 518, 518, 449, 518, 518,
	332, 154, 564, 167, 167, 570, -253, 564, -375, 518,
	-497, 48, 26, 332, -303, -245, 154, 518, 518, 530,
	462, -531, 337, -13, -309, -529, -304, 462, 362, 419,
	-594, -365, -594, 204, -312, -618, -487, -210, 351, -209,
	146, 431, 137, 260, 225, -487, -208, 188, 244, 564,
	-304, 2, 601, 601, 605, -551, 38, 345, 345, 600,
	-299, -87, 564, -486, -519, -598, 564, 43, -302, 38,
	154, -595, -136, -304, -491, -492, 5, 38, -299, 154,
	347, 332, -250, 267, -643, -527, -566, -360, -393, -382,
	333, 91, 601, -437, -384, -368, -443, 2, 601, -203,
	-204, -531, -531, -531, -205, -217, -217, -435, -332, 600,
	-284, -269, 600, -217, -286, 2, -532, -531, -531, 605,
	600, 583, 583, 583, 583, 583, -211, -487, -132, -136,
	351, -299, 593, -400, -344, -343, 366, 341, -344, 439,
	439, 348, 177, 263, -239, -283, -443, -443, 150, 33,
	33, -443, -443, -454, 601, -443, -443, -375, 599, 5,
	-443, 601, 601, 8, -443, 601, 602, -580, -268, -443,
	601, 60, 601, 601, 605, 605, 601, 601, 601, 601,
	601, 601, 601, -449, 188, 139, 341, 600, 601, 601,
	-106, -451, 210, 60, -474, -451, -451, -402, -364, -474,
	-441, -283, 598, -283, 598, -523, -519, -477, 600, 602,
	-215, 583, -531, -531, 564, -312, 599, 2, 598, -523,
	601, -312, 119, -285, -285, 502, 439, -253, 389, -434,
	154, -552, 93, -554, 76, 169, 102, 332, 337, 536,
	389, 72, 127, 347, 406, -633, -634, -635, 38, 575,
	576, 601, -362, -471, -565, 600, -268, -362, -364, 332,
	491, 127, 347, 332, 127, 347, 559, 119, 2, 530,
	79, -285, -293, -364, -364, -299, -309, -529, 161, 601,
	605, 583, 2, 593, 593, -309, -529, -304, -309, -529,
	-302, 154, -253, 364, 167, 161, 601, -283, 5, 5,
	154, -280, 76, -285, 5, -285, -303, 119, 449, 518,
	518, 347, 347, 350, -614, -615, -208, 605, 600, 583,
	583, -208, -532, -132, 2, -354, -345, 234, -285, -549,
	-546, -547, 389, -553, -555, 169, 389, -136, 2, -219,
	-218, -268, 5, 600, -330, 351, 599, -600, 351, -599,
	117, 137, -529, -397, -136, -304, -354, 601, 605, 148,
	-419, 546, -283, -299, 154, -251, 266, -643, -527, -248,
	-422, -420, 140, 600, 347, -136, -360, 583, 601, 601,
	119, 119, 226, 153, -362, 600, 600, -364, 119, 601,
	-212, -213, -531, -132, -531, -531, -531, -211, -487, -67,
	-68, 232, 93, 371, -296, 502, 232, 600, 600, -239,
	-443, -443, -443, 601, -360, -523, 593, -574, 366, 601,
	-470, -443, -443, -444, 188, 600, -454, 601, -575, 563,
	-443, -388, -389, -443, 437, 108, 208, -575, -575, 601,
	-519, -519, 2, -531, 2, 518, 598, 2, 188, 223,
	38, 409, -434, -293, -297, -290, -268, 169, 216, 337,
	559, -418, 258, 600, -444, 540, -299, 600, 2, 215,
	215, 30, 60, -636, 131, 237, 601, 605, -472, -279,
	-268, -443, -472, 601, 601, 337, 540, 337, 559, -443,
	540, -493, 600, -245, -245, 601, 601, -443, 518, -522,
	100, -520, 2, -602, -253, -282, -443, 518, 5, -245,
	-297, -245, -245, -280, 530, -309, -529, -304, -619, 503,
	456, 531, 450, 191, 438, -619, 183, -209, -210, -531,
	-132, -208, 38, -335, 236, 2, -551, 258, -290, 258,
	-632, 564, 601, 605, 583, 583, -328, -220, -88, -89,
	519, -486, 605, 600, 583, -354, 38, 5, 600, 600,
	-268, 347, 600, -283, -263, 92, -643, -527, -249, -393,
	333, -364, 93, -422, -450, -205, 600, 600, -333, 81,
	94, 128, 215, 192, 233, 483, 489, 28, -333, 601,
	-362, -362, 601, 600, -205, 601, 605, 28, 600, 28,
	600, -299, -321, -375, -375, 601, -360, 60, 605, 601,
	601, -444, -454, 601, -576, -577, -288, 605, 600, 600,
	463, 599, 599, -364, 2, -364, -253, 389, -268, -554,
	-290, 332, 546, -443, -444, -270, 600, -443, 600, 600,
	38, 127, 237, 132, 221, -433, -637, 101, 492, 224,
	-471, -239, 601, -432, 546, 406, -444, -280, -362, 600,
	600, 600, 583, 188, 600, -497, -245, -303, 518, 2,
	2, 188, -594, 601, -608, 404, -136, -339, -340, 223,
	600, -334, 347, 119, 318, -218, -520, -520, 601, 38,
	-89, 9, -599, -600, -443, 38, -136, -491, -362, -299,
	-362, 347, -255, -254, 275, -527, -250, 601, -293, -393,
	-532, -532, -432, 601, 601, -532, -68, -364, -364, 601,
	601, -581, 397, 440, 209, -375, -361, 601, 605, 38,
	-389, 2, 2, 2, 409, 154, 211, 601, -556, 290,
	-268, 601, -397, -397, 38, 132, 221, -335, 600, -240,
	-472, -335, 211, -299, -603, 546, 601, -347, -346, -343,
	-349, -348, -343, -375, -520, 100, 364, -375, -280, -364,
	-364, 347, -611, 189, -610, 5, 10, -220, 364, -363,
	-473, -285, 82, 119, -345, -136, 601, -136, 601, 601,
	-419, 601, -299, -252, -533, 409, 411, -643, -251, -437,
	601, 601, -433, -432, -341, -337, 601, 601, 601, 601,
	-582, -583, 50, 533, 109, -443, -582, -582, -577, -579,
	169, 564, -557, -560, -559, 580, 469, 189, 365, 601,
	491, 558, 601, 601, -341, -364, 564, -354, -443, -432,
	601, 605, 551, 601, 605, 551, 601, 188, 601, -245,
	-616, 564, -245, -619, -207, 564, 46, -334, -299, 601,
	605, 388, 133, 143, -335, -632, -432, 600, -433, 600,
	-260, -259, -643, -513, -263, 140, -205, -205, -335, -433,
	-221, 564, -205, -584, 152, -583, 385, 182, 439, 385,
	182, -584, -584, -290, 55, -559, 580, -560, 580, 540,
	133, -636, 601, 55, -556, -335, -346, 223, -348, 188,
	364, 204, 188, 447, -610, 30, -262, -261, 600, -473,
	440, 440, 2, -339, -334, -433, -362, -335, -362, -256,
	-257, -258, -364, -255, 333, 540, -341, -335, -437, 109,
	207, 513, 318, 33, 583, -558, 318, 426, 64, 462,
	-558, -437, 583, -557, 600, 600, 350, -364, 351, -364,
	2, -220, -335, 601, -341, 601, -252, 462, -221, -341,
	439, 355, -583, -443, 23, 337, 127, -443, -636, -375,
	-375, -245, -204, 600, 601, -334, -341, -432, -221, -433,
	-260, -383, -437, -221, 601, 601, -204, -246, 64, 426,
	-262, -221, -433, -437, -335, -256, -437, -437, -336, -337,
	518, 601, -437, -335, -341, 600, -341, -221, -375, -221,
	-437, 601, -437, -336,
}

var sqlDef = [...]int{
	-2, -2, 1, 2, 3, 4, 6, 7, 8, 10,
	12, 14, 16, 18, 20, 22, 24, 26, 28, 30,
	31, 32, 33, 34, 558, 559, 561, 562, 563, 565,
	566, 568, 570, 572, 573, 574, 576, 577, 579, 580,
	581, 582, 583, 585, 587, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, -2, 0, 0,
	654, 656, 0, 1421, 1423, 1425, 1427, 0, 809, 0,
	36, 37, 39, 0, -2, 338, 340, 342, 344, 0,
	374, 376, 377, 379, 381, 382, 383, 385, -2, 0,
	491, 492, 494, 496, -2, 0, 1016, 1018, 1020, 0,
	643, 645, 0, 1023, 1025, 1027, 0, 0, 666, 667,
	0, 1532, -2, 658, 660, 662, 664, 734, 736, 738,
	740, 742, 744, 746, 748, 750, 752, 753, 755, 757,
	759, 761, 763, 764, 766, 768, 770, 771, 773, 774,
	776, 778, 780, 782, 784, 786, 788, 790, 792, 794,
	796, 798, 800, -2, 803, 804, 805, -2, -2, 0,
	-2, -2, -2, 1439, 41, 43, 45, 47, 49, 51,
	53, 55, 57, 59, 435, 437, 439, 441, 443, 446,
	448, 450, 1590, 498, 500, 502, 504, 506, 508, 510,
	0, -2, 1604, 0, 0, 61, 62, 63, 64, 65,
	66, 67, 68, 69, 70, 71, 109, 110, 111, 112,
	113, 114, 115, 116, 75, 76, 77, 79, 80, 81,
	82, 86, 87, 88, 89, 90, 91, 92, 93, 94,
	95, 107, 73, 0, 0, 1563, 1565, 1567, 1569, -2,
	0, 0, 5, 9, 11, 13, 15, 17, 19, 21,
	23, 25, 27, 29, 560, 564, 567, 569, 571, 575,
	578, 584, 586, 588, 543, 544, 547, 2301, 2319, 2320,
	2321, 2324, 2325, 2326, 2327, 2328, 2329, 2785, 2866, 2867,
	2351, 2352, 2353, 2354, 2355, 2356, 2357, 2358, 2359, 2360,
	2361, 2362, 2363, 2364, 2365, 2366, 2367, 2368, 2369, 2370,
	2371, 2372, 2373, 2374, 2375, 2376, 2377, 2378, 2379, 2380,
	2381, 2382, 2383, 2384, 2385, 2386, 2387, 2388, 2389, 2390,
	2391, 2392, 2393, 2394, 2395, 2396, 2397, 2398, 2399, 2400,
	2401, 2402, 2403, 2404, 2405, 2406, 2407, 2408, 2409, 2410,
	2411, 2412, 2413, 2414, 2415, 2416, 2417, 2418, 2419, 2420,
	2421, 2422, 2423, 2424, 2425, 2426, 2427, 2428, 2429, 2430,
	2431, 2432, 2433, 2434, 2435, 2436, 2437, 2438, 2439, 2440,
	2441, 2442, 2443, 2444, 2445, 2446, 2447, 2448, 2449, 2450,
	2451, 2452, 2453, 2454, 2455, 2456, 2457, 2458, 2459, 2460,
	2461, 2462, 2463, 2464, 2465, 2466, 2467, 2468, 2469, 2470,
	2471, 2472, 2473, 2474, 2475, 2476, 2477, 2478, 2479, 2480,
	2481, 2482, 2483, 2484, 2485, 2486, 2487, 2488, 2489, 2490,
	2491, 2492, 2493, 2494, 2495, 2496, 2497, 2498, 2499, 2500,
	2501, 2502, 2503, 2504, 2505, 2506, 2507, 2508, 2509, 2510,
	2511, 2512, 2513, 2514, 2515, 2516, 2517, 2518, 2519, 2520,
	2521, 2522, 2523, 2524, 2525, 2526, 2527, 2528, 2529, 2530,
	2531, 2532, 2533, 2534, 2535, 2536, 2537, 2538, 2539, 2540,
	2541, 2542, 2543, 2544, 2545, 2546, 2547, 2548, 2549, 2550,
	2551, 2552, 2553, 2554, 2555, 2556, 2557, 2558, 2559, 2560,
	2561, 2562, 2563, 2564, 2565, 2566, 2567, 2568, 2569, 2570,
	2571, 2572, 2573, 2574, 2575, 2576, 2577, 2578, 2579, 2580,
	2581, 2582, 2583, 2584, 2585, 2586, 2587, 2588, 2589, 2590,
	2591, 2592, 2593, 2594, 2595, 2596, 2597, 2598, 2599, 2600,
	2601, 2602, 2603, 2604, 2605, 2606, 2607, 2608, 2609, 2610,
	2611, 2612, 2613, 2614, 2615, 2616, 2617, 2618, 2619, 2620,
	2621, 2622, 2623, 2624, 2625, 2626, 2627, 2628, 2629, 2630,
	2631, 2632, 2633, 2634, 2635, 2636, 2637, 2638, 2639, 2640,
	2641, 2642, 2643, 2644, 2645, 2646, 2647, 2648, 2649, 2650,
	2651, 2652, 2653, 2654, 2655, 2656, 2657, 2658, 2659, 2660,
	2661, 2662, 2663, 2664, 2665, 2666, 2667, 2668, 2669, 2670,
	2671, 2672, 2673, 2674, 2675, 2676, 2677, 2678, 2679, 2680,
	2681, 2682, 2683, 2684, 2685, 2686, 2687, 2688, 2689, 2690,
	2691, 2692, 2693, 2694, 2695, 2696, 2697, 2698, 2699, 2700,
	2701, 2702, 2703, 2704, 2705, 2706, 2707, 2708, 2709, 2710,
	2711, 2712, 2713, 2714, 2715, 2716, 2717, 2718, 2719, 2720,
	2721, 2722, 2723, 2724, 2725, 2726, 2727, 2728, 2729, 2730,
	2731, 2732, 2733, 2734, 2735, 2736, 2737, 2738, 2739, 2740,
	2741, 2742, 2743, 2744, 2745, 2746, 2747, 2748, 2749, 2750,
	2751, 2752, 2753, 2754, 2755, 2756, 2757, 2758, 2759, 2760,
	2761, 2762, 2763, 2764, 545, 546, 1210, 0, 612, 610,
	2286, 613, 2582, 615, 617, 485, 486, 487, 488, 489,
	490, 0, 636, 626, 1602, 637, 639, 640, 641, 642,
	607, 605, 0, 636, 2355, 634, 1419, 1420, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 497, 0, 0, 0,
	0, -2, 0, 0, 0, 0, 0, 0, 0, 414,
	1268, 1269, 1270, 1404, 1405, 2629, 1446, 0, 234, 655,
	-2, -2, 2750, -2, 689, 690, -2, -2, 704, 707,
	699, 2754, 0, 2632, 2616, -2, 710, 1422, 1424, 1426,
	807, 808, 2305, 0, 0, 0, 0, 0, 38, 40,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 242, 244,
	-2, -2, -2, -2, 0, 0, 2677, 2407, 2254, 2321,
	2257, 2252, 339, 341, 343, 345, 346, 0, 0, 0,
	0, 0, 0, 0, 375, 378, 380, 384, -2, 386,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	413, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, -2, -2, 0, 0, 0, 0, 0, 0,
	0, 0, 1087, 1079, 1080, 1326, 0, 0, 0, -2,
	493, 495, 548, 549, 0, 1591, 1591, 556, 557, -2,
	0, 0, 0, 0, 309, 297, 1017, 1019, 1021, 1022,
	0, 0, 0, 0, 0, 644, 646, 0, 0, 276,
	1024, 1026, 1028, 1029, 0, 0, 0, 0, 0, 0,
	311, 0, 0, 659, 661, 663, 665, 735, 737, 739,
	741, 743, 745, 747, 749, 751, 754, 756, 758, 760,
	762, 765, 767, 769, 772, 775, 777, 779, 781, 783,
	785, 787, 789, 791, 793, 795, 797, 799, 801, 802,
	815, 0, 0, 0, 0, 0, -2, -2, 0, 0,
	0, -2, 0, -2, -2, -2, 0, 0, 0, 0,
	0, 0, 0, -2, 0, 0, 912, 0, 0, 0,
	-2, -2, -2, 0, 0, 0, 0, 0, -2, -2,
	0, 0, 0, 0, -2, 997, 0, 0, 818, 820,
	821, 822, 823, 0, 885, 910, 911, 921, 806, 0,
	1250, 1592, 1448, 1429, 1443, 1448, 1431, 1432, 1433, 1434,
	1435, 1440, 1442, 1436, 1437, 1438, 42, 44, 46, 48,
	50, 52, 54, 56, 58, 60, 436, 438, 440, 442,
	444, 447, 449, 451, -2, 1561, 1562, 499, 501, 503,
	505, 507, 509, 511, 647, 0, 649, 0, 819, -2,
	0, 1596, 1596, 1596, 0, 0, 1562, 1560, 0, 652,
	653, 714, 715, 1868, 0, 0, 0, 0, 0, 0,
	0, 0, 2128, 1956, 0, 716, -2, 1989, 1991, 2725,
	2555, 2750, 2127, 1993, 1994, 1995, 1996, 1997, 0, 1999,
	2000, 2001, 2002, 2003, 2004, 0, 2006, 0, 2011, 2012,
	2013, 0, 2732, 2231, 2315, -2, 0, 0, 2738, 2311,
	0, 2094, 2029, -2, -2, 2338, 2317, 1800, 1801, 1802,
	1803, 1804, -2, -2, 2768, 2033, 2034, 2035, 2036, 2037,
	2038, 2039, 2040, 2041, 2042, 2043, 0, 2713, 2733, 2734,
	2739, 2741, 2735, 2722, 2054, 2421, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, 1827,
	1836, -2, -2, -2, -2, -2, -2, -2, 2726, 2727,
	2744, 2747, 2753, 2758, 2759, 2731, 2740, 2767, 2769, 2770,
	2771, 2772, 2773, 2774, 2775, 2776, 2777, 2778, 2779, 2780,
	2781, 2782, 2783, 2784, 1828, -2, -2, -2, -2, 1579,
	2596, 1582, 1210, 1580, 1564, 1566, 0, 1568, 0, 0,
	0, 1573, 1599, 1597, 0, 1648, 1577, 1578, 1670, 1670,
	1694, 0, 1675, 0, 1694, 1591, 1721, 0, 1681, 2621,
	2030, 2031, 0, 2321, 2316, -2, -2, 2765, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 608, 0, 614,
	616, 0, 0, 0, 635, 1601, 0, 0, 0, 0,
	0, 0, 0, 417, 418, 419, 420, 421, 2733, 0,
	0, 0, 426, 0, 428, 429, 430, 431, 432, 433,
	434, 205, 2733, 516, 541, 0, 205, 2733, 519, 205,
	2733, 522, 0, 525, 1324, 205, 2733, 528, 2282, 205,
	2733, 531, 533, 2290, 205, 2733, 537, 2297, 2295, 538,
	2733, 540, 314, 312, 313, 2334, 2335, 2342, 2343, 2344,
	2345, 2766, 2768, 1415, 1416, 1417, 1418, 0, 1445, 1325,
	657, 0, 683, 0, 687, 688, 2721, -2, 0, 2641,
	692, 693, -2, 695, 1449, 1453, 1454, 1455, 1456, 1457,
	0, 0, 0, 0, 1462, 0, 0, 0, 0, 684,
	685, 702, 703, 708, 711, 0, 810, 811, 812, 813,
	814, 72, 0, 2733, 1721, 74, 0, 2276, 2346, 2347,
	2348, 2349, 2350, 2786, 2787, 2788, 2789, 2790, 2791, 2792,
	2793, 2794, 2795, 2796, 2797, 2798, 2799, 2800, 2801, 2802,
	2803, 2804, 2805, 2806, 2807, 2808, 2809, 2810, 2811, 2812,
	2813, 2814, 2815, 2816, 2817, 2818, 2819, 2820, 2821, 2822,
	2823, 2824, 2825, 2826, 2827, 2828, 2829, 2830, 2831, 2832,
	2833, 2834, 2835, 2836, 2837, 2838, 2839, 2840, 2841, 2842,
	2843, 2844, 2845, 2846, 2847, 2848, 2849, 2850, 2851, 2852,
	2853, 2854, 2855, 2856, 2857, 2858, 2859, 2860, 2861, 2862,
	2863, 2864, 2865, 78, 0, 2733, 83, 0, 2733, 0,
	-2, 96, 0, 108, 0, 2279, 117, 0, 2733, 0,
	2251, -2, 0, 217, 298, 299, 300, 0, 1054, -2,
	2733, 1262, 1264, 1264, 0, -2, 0, 0, 0, 1007,
	2248, 2253, 1008, 2272, 1009, 2258, 0, 347, 348, 349,
	350, 351, 0, 352, 2733, 354, 355, 0, 357, 358,
	2733, 360, 361, 0, 363, 0, 365, 0, 256, 262,
	2733, 2733, 388, 390, 0, 392, 393, 0, 395, 0,
	0, 0, 399, -2, 415, 0, 412, 402, 403, 405,
	406, 407, 408, 409, 0, 455, 453, 2287, 0, 0,
	-2, 2733, 0, 1051, 0, 0, 1304, -2, 2733, 1255,
	0, 1311, 2733, 1307, 0, -2, 0, 1589, 2733, 1466,
	1083, 1084, 1085, 1086, 1733, 482, 0, 1497, 0, 1499,
	0, 1518, 1727, 1670, 0, 0, 1732, 0, -2, 601,
	2304, -2, 551, 0, 552, 0, -2, 0, 326, 0,
	0, 1032, 1034, 1035, 1037, 1038, 1041, 1042, 1043, 1044,
	0, 1046, 1707, 277, 279, 0, 0, 0, 1031, 1406,
	1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 0, 0,
	668, 0, 0, 816, 817, 0, 0, 828, 829, 830,
	0, 326, 2633, 2591, 2442, 837, 0, 840, 843, -2,
	0, 0, 0, 0, 847, 0, 852, 853, 854, 0,
	-2, 0, 861, 863, 1015, 865, 0, 0, 867, 0,
	871, 0, 874, 0, 876, 0, 878, -2, -2, -2,
	886, 887, -2, 892, -2, 0, 896, -2, 0, 899,
	0, 902, -2, 0, 912, 908, 909, 0, 0, 0,
	0, 929, 930, 0, 939, 0, 942, 943, 944, 0,
	948, 949, 0, 951, 952, 953, 954, 0, 2704, 2638,
	2407, 0, 960, -2, 966, 968, 0, -2, 0, 984,
	0, 988, 0, 0, 996, 0, 0, 824, 825, 205,
	1725, 1428, -2, 1430, 0, -2, 0, 648, 0, 651,
	1621, 1547, 1544, 0, 1618, 1619, 1548, 0, 0, 0,
	1555, 0, 1594, 1595, 0, 0, 0, 1534, 1535, 0,
	0, 0, 0, 2133, 2134, 2135, 2136, 2149, 2137, 2138,
	2148, 2146, 2147, 2139, 2140, 2145, 2159, 2160, 2150, 2151,
	2141, 2154, 2152, 2153, 2155, 2156, 2157, 2158, 0, 0,
	2164, 0, 2142, 2143, 2144, 2172, 0, 0, 2173, 0,
	2175, 0, 2165, 2161, 2162, 2163, 0, 1935, 1937, 2239,
	0, 0, 0, 2171, 2166, 2167, 1873, 1874, 1875, 1876,
	1877, 1910, 1914, 1915, 0, 0, 1990, 2236, 2235, 1992,
	0, 0, 2187, 0, 2005, -2, 0, 2128, 2182, 0,
	0, 2014, 2015, 2016, 0, 0, 2187, 0, 0, 2230,
	2026, 2027, 1865, 0, 0, 2096, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1814, 1813, 0, 1815, 0, 1816,
	1817, 1824, 1837, 0, 0, 0, 0, 1841, 0, 0,
	0, 0, 0, 0, 0, 2211, -2, 0, 0, 0,
	0, 1829, 0, 1581, 0, 0, 1652, 2240, 2244, 2245,
	1652, 1652, 0, 0, 2188, 1718, 1718, 0, 0, 1713,
	1713, 1713, 1711, 1694, 0, 1694, 1704, 0, 1694, 1694,
	0, -2, 1675, 0, 0, 1704, 0, 1688, 589, 591,
	593, 595, 596, 597, 599, 1722, 1723, 0, 0, 0,
	0, 2322, 0, 0, 0, 0, 2294, 0, 0, 2307,
	0, 371, 0, 0, 0, 2687, 2632, 0, -2, 619,
	638, 1591, 0, 2190, 1748, 1752, 0, 1754, 1755, 1756,
	1757, 1758, 0, 0, 1749, -2, 1825, 1827, 1848, 2339,
	2340, 2341, 1808, 1809, 1810, 1811, 1812, 1820, 1807, 1807,
	1807, 1818, 1847, 1839, 1847, 1843, 1793, 1794, 1795, 1830,
	1831, 1832, 1833, 0, 2687, 2632, 0, -2, 628, 0,
	0, 1529, 416, 0, 423, 424, 425, 0, 512, 0,
	203, 204, 0, 205, 2733, 517, 0, 520, 0, 205,
	2733, 2246, 526, 0, 529, 0, 0, 535, 0, 0,
	0, 0, 0, 205, 1531, 0, 0, 0, 0, -2,
	697, 705, 706, 224, 225, 0, 1451, 0, 1458, 725,
	726, 727, 1460, 1461, 0, 1463, 700, 728, 729, 730,
	731, 732, 733, 0, 2260, 2261, 2262, 2263, 2266, 2267,
	0, 0, 698, 718, 701, 0, 712, 118, 1401, 0,
	0, 161, 0, 1401, 1401, 0, 0, 0, 0, 188,
	0, 1122, 0, 0, 0, 0, 133, 146, 157, 130,
	131, 0, 0, 0, 0, 0, 0, 84, 1232, 0,
	1235, 0, 0, 0, 0, 0, 0, 0, 1248, 0,
	0, 0, 0, 0, 98, 99, 0, 0, 104, 105,
	0, 145, 0, 0, 0, 0, 0, 1494, 0, 140,
	120, 0, 0, 133, 147, 159, 0, 192, 194, 1119,
	0, 0, 0, 0, 0, 0, 0, 0, 216, 226,
	0, 0, 0, 1256, 0, 0, 0, 1588, 0, 0,
	0, 0, 2733, 1399, 0, 1384, 0, 1707, 2492, -2,
	-2, 277, 1707, 1006, 0, 0, 2322, 2256, 0, 0,
	0, 0, 0, 0, 364, 0, 0, 0, 391, 394,
	396, 397, 398, 0, 1303, 0, 404, 445, 1181, 2733,
	0, 0, 472, 467, 0, 469, 0, 0, 0, 1231,
	2733, 1229, 2291, 0, 1253, 0, 1210, 2733, 2289, 0,
	0, 0, 1312, 2331, 1321, 1325, 1484, 0, 484, 0,
	1500, 1502, 0, 0, 1728, 0, 1730, 1670, 1591, 0,
	0, 0, 0, 302, 0, 0, 0, 0, 0, 0,
	0, 0, 1045, 283, 0, 1706, 0, 0, 1707, 277,
	2607, 1030, 326, 326, 1707, 670, 1707, 672, 0, 0,
	831, 832, 0, 326, 326, 326, 838, 839, 841, 842,
	-2, -2, -2, -2, 844, 845, 936, 0, 0, 0,
	935, 855, 0, 857, 860, 864, 0, 1000, 2616, 2632,
	2687, 1013, 936, 2407, 936, 2407, 936, 2407, 875, 877,
	880, 924, 932, 891, 898, 0, 893, 897, 900, 903,
	0, 905, 913, 0, -2, 0, 916, 0, 918, 0,
	920, 936, 937, 940, 947, 950, 955, 956, 957, 958,
	2302, 959, -2, 963, 964, 0, 975, 980, 981, 977,
	0, 0, 0, 0, 0, 0, 991, 992, 0, 0,
	999, 1249, 0, 1441, 1621, 1547, 650, 1538, 1620, 1539,
	1546, 1549, 0, 0, 1551, 0, 1553, 0, 1616, 1617,
	1624, 1625, 0, 1635, 1636, 1628, 0, -2, 0, 0,
	1631, 1632, 1557, 0, 1574, 1575, 1576, 1605, 1608, 1340,
	0, 2866, 1869, 1743, 1870, 1871, 2275, 0, 1878, 1879,
	1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, -2, -2,
	-2, -2, -2, -2, -2, -2, 1896, 1897, 1898, 1899,
	1900, 1901, 1902, 1903, 1904, 1905, 1906, -2, -2, -2,
	1911, 1912, 1913, -2, 2174, 2176, 0, 2239, 0, -2,
	0, -2, -2, -2, -2, 1932, 0, 1934, 1939, 1941,
	1943, 0, 0, 0, 0, 2238, 1953, 2222, 2223, 0,
	0, 2130, 2131, 2132, 1938, 0, 1957, 2237, 2234, 0,
	0, 2168, 0, 2133, 2134, 2135, 2136, 2137, 2138, 2139,
	2140, 2141, 2142, 2143, 2144, 2145, 2146, 2147, 2148, 2149,
	2150, 2151, 2152, 2153, 2154, 2155, 2156, 2157, 2158, 2159,
	2160, 2161, 2162, 2163, 2164, 2165, 0, 2186, 1604, 2018,
	0, 0, 0, 0, 2025, 2010, 2184, 0, 2183, 0,
	0, 0, 2194, 0, 2229, 2225, 0, 2273, 1864, 1851,
	1852, 1853, 1854, 1855, 1856, 1866, 0, 2270, 2308, 2314,
	2104, 0, 0, 0, 2055, 2056, 2057, 2058, 2059, 0,
	2061, 2062, 0, 2064, 2065, 0, 2067, 2068, 0, 2070,
	2071, 2072, 2073, 2074, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769,
	1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779,
	1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789,
	1790, 1791, 1792, 0, 0, 2076, 0, 2197, -2, -2,
	-2, -2, -2, -2, -2, -2, 0, 2078, 0, 2080,
	2188, 2208, 0, 0, 1958, 0, 0, 0, 0, 2128,
	0, 2083, 2188, 2216, 0, 0, 0, 0, 0, 2188,
	0, 2221, 0, 2090, 0, 2092, 1583, 0, 0, 1738,
	0, 0, 0, 2243, 1738, 1738, 0, 1647, 0, 0,
	1714, 1715, 1716, 1717, 0, 0, 1718, 0, 1708, 1712,
	1709, 1710, 1704, 1667, 0, 0, 2277, 1704, 1673, 1703,
	0, 1210, 1693, 1704, 1704, 0, -2, 1677, 1694, 0,
	0, 590, 592, 594, 598, 600, 0, 0, 1604, -2,
	0, -2, 328, 1209, 0, 0, 0, 0, 0, 609,
	611, 0, 0, 532, 0, 0, 625, 0, 603, 0,
	606, 0, 1739, 1742, 0, 0, 1753, 1759, 1760, 0,
	-2, 0, 0, 1849, 0, 0, 0, 0, 0, 633,
	0, 0, 0, 427, 542, 205, 514, 0, 205, 205,
	523, 0, 0, 205, 534, 205, 2298, 205, 2296, 315,
	539, 1530, 237, 0, 686, 0, 1450, 1459, 0, 722,
	0, 724, 0, 2264, 2268, 2265, 2269, 0, 713, 0,
	0, 0, 0, 1400, 0, 1347, 0, 0, 165, 2733,
	0, 207, 0, 0, 1174, 2283, 0, 1164, 0, 0,
	2428, 0, 0, 0, 0, 0, 181, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 127, 0, 0, 0,
	132, 0, 0, 0, 0, 0, 0, 0, 0, 1233,
	1234, 1236, 1243, 1245, 0, 1239, 2271, 0, 0, 1240,
	0, 1242, 1244, 1246, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 106, 1265, 0, 0, 1266, 1267, 1472,
	1473, 0, 1493, 1494, 0, 0, 0, 129, 0, 0,
	0, 0, 0, 0, 2250, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1258, 0,
	1299, 1297, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284,
	1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294,
	1295, 1296, 0, 0, 0, -2, 1260, 1261, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 247, 0, 317,
	2249, 2259, 0, 1039, 1040, 353, 356, 359, 362, 243,
	0, 0, 400, 0, 0, 1089, 1064, 0, 0, 454,
	326, 0, 0, 468, 472, 2300, 1049, 221, 222, 223,
	1227, 1230, 0, 1210, 2733, 1276, 0, 0, 0, 0,
	0, 0, 1310, 0, 0, 2733, 2278, 2330, 2331, 1486,
	1494, 0, 1738, 0, 1516, 1503, 0, 0, 0, 1516,
	1520, 1521, 1523, 1524, 0, 0, 1729, 1735, 550, 602,
	1591, 1591, 326, 324, 2558, 322, 319, 321, 0, 0,
	0, 1090, 1092, 1093, 1094, 207, 0, 2331, 1164, 2481,
	2331, 0, 1506, 1508, 0, 0, 0, 271, 0, 280,
	1707, 278, 283, 0, 0, 0, 466, 669, 674, 826,
	0, 326, 834, 835, 836, 882, 926, 934, 979, 846,
	848, 849, 850, 0, 0, 0, 1014, 1010, 1011, 1012,
	866, 936, 869, 936, 872, 936, 895, 901, 914, 907,
	915, 0, 0, 0, 928, 945, 0, 962, 0, 0,
	0, 0, 0, 0, 0, 985, 986, 987, 989, 994,
	993, 998, 1726, 1542, 1543, 1545, 0, 1554, 0, 0,
	1630, -2, -2, 1629, 1633, 1634, -2, -2, -2, -2,
	1550, 0, 1559, 1556, 0, 1615, 1338, 1339, 0, 0,
	0, 0, -2, -2, 0, 0, 0, 1954, 0, -2,
	1933, 1936, 1940, 1942, 1944, 0, 0, 0, 0, 0,
	0, 2177, 0, 2179, 1955, 2232, 2235, 2170, 0, 2126,
	0, 0, 1603, 1604, 1604, 0, 2024, 0, 2185, 0,
	2192, 2193, 0, 2017, 0, 2226, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2028, 0, 0, 0, 0,
	2060, 2063, 2066, 2069, 0, 0, 0, 0, 2049, 0,
	0, 0, 2053, 1819, 1805, 0, 1847, 1845, 1846, 1840,
	1847, 1844, 1797, 0, 1796, 0, 2075, 0, 2077, 2079,
	0, 0, 2081, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1961, 1962, 1963,
	1983, 2082, 2214, 2215, 0, 0, 0, 0, 0, 0,
	2088, 0, 2220, 2089, 2091, 1591, 0, 1584, 0, 1649,
	1638, 1737, 0, 2241, 1707, 1651, 1653, 2242, 2280, 1638,
	1638, 0, 2189, 0, 0, 1698, 0, 0, 0, 1700,
	1671, 0, 0, 1665, 0, 1657, 1658, 1659, 1660, 1661,
	1662, 1672, 1210, 1702, 1674, 1678, 2308, 0, 1704, 0,
	1689, 0, 1691, 1724, 0, 1683, 1686, 0, 0, 2323,
	1738, 0, 366, 372, 373, 367, 368, 369, 370, 618,
	0, 0, 0, 0, 0, 2191, 0, 1744, 0, 1750,
	0, 0, 0, 0, 627, 0, 0, 0, 0, 1528,
	422, 513, 205, 518, 521, 2247, 205, 527, 530, 536,
	233, 0, 682, -2, 720, 721, 723, 0, 719, 162,
	1401, 0, 0, 1343, 1345, 1349, 1355, 1358, 0, 167,
	2733, 179, 0, 1138, 0, 2281, 0, 0, 0, 0,
	0, 0, 1403, 0, 0, 2733, 205, 2733, 205, 182,
	184, 187, 0, 191, 189, 0, 1126, 0, 0, 1129,
	119, 1401, 0, 0, 122, 126, 134, 135, 138, 0,
	0, 0, 144, 0, 0, 0, 1360, 1364, 1372, 0,
	0, 0, 1237, 1238, 1241, 1247, 85, 0, 0, 0,
	1368, 1370, 1376, 97, 100, 2733, 2292, 102, 2733, 0,
	1342, 0, 0, 0, 0, 193, 124, 128, 136, 137,
	139, 0, 1378, 121, 0, 220, 0, 0, 210, 205,
	2733, 0, 212, 0, 213, 214, 227, 0, 0, 0,
	1052, 1053, 1298, 1251, 1252, 0, 1263, 1257, 0, 0,
	0, 0, 0, 1380, 1381, 0, 0, 0, 1399, 1396,
	1707, 239, 0, 1707, 247, 0, 2255, 0, 263, 387,
	0, 0, 0, 0, 1088, 1192, 0, 1059, 0, 0,
	0, 460, 456, 0, 465, 471, 470, 476, -2, 0,
	0, 0, 0, -2, 0, 0, 1314, 1308, 1309, 0,
	0, 0, 0, 2733, 1488, 1494, 0, 1589, 1604, 483,
	1495, 1516, 0, 0, 0, 1505, 1501, 1498, 1738, 0,
	0, 0, 0, 0, 1731, 1734, 553, 554, 301, 0,
	0, 0, 0, 0, 326, 0, 0, 0, 1095, 1099,
	0, 2331, 2331, 0, 2285, 0, 0, 0, 0, 0,
	0, 281, 0, 284, 0, 0, 0, 289, 290, 291,
	292, 293, 294, 0, 0, 283, 273, 1707, 0, 0,
	671, 0, 0, 833, 0, 856, 859, 868, 870, 873,
	917, 919, 936, 946, 969, 970, 1116, 0, 1116, 0,
	0, 990, 1552, 0, 1627, 1558, 1609, 1610, 0, 1340,
	0, 1872, 1917, 0, 0, -2, 0, 0, 1921, 0,
	0, 0, -2, 0, 0, 0, 2178, 2180, 0, 2234,
	2169, 2019, 0, 0, 0, 2023, 2007, 2008, 0, 2129,
	2195, 2224, 2228, 0, 1857, 1858, 1859, 1860, 1861, 1862,
	1863, 0, 2274, 2309, 2313, 2102, 2103, 2107, 2288, 0,
	0, 0, 2032, 0, 0, 0, 0, 0, 0, 0,
	0, 1838, 1842, 0, 0, 2196, 2207, 2209, 1959, 1960,
	1964, 1965, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973,
	-2, -2, -2, 1977, 1978, 1979, -2, -2, -2, 1984,
	0, 0, 0, 2210, 2212, 2213, 2217, 2218, 0, 2085,
	2086, 2087, 2219, 0, 1591, 1585, 1646, 0, 1736, 1650,
	0, 1646, 1646, 1598, 1696, 0, 0, 1720, 0, 1668,
	0, 1669, 0, 0, 1701, 0, 1676, 1679, 1680, 1690,
	0, 1682, 0, 1685, 0, 2019, -2, 327, 329, 331,
	0, 334, 335, 0, 0, 621, 622, 0, 620, 604,
	0, 0, 1746, 0, 0, 1822, 1826, 1850, 630, 631,
	0, 629, 515, 524, 235, 0, 1705, 0, 0, 0,
	0, 0, 0, 206, 1136, 1173, 0, 0, 0, 1163,
	0, 0, 1179, 169, 170, 171, 0, 0, 0, 0,
	180, 0, 0, 177, 0, 186, 190, 1123, 0, 0,
	0, 0, 1348, 0, 0, 0, 141, 142, 143, 0,
	148, 0, 149, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1478, 1479, 0, 1469, 0, 0, 0,
	208, 0, 0, 0, 1337, 229, 0, 0, 0, 0,
	0, 1301, 1302, 1259, 1361, 1365, 1373, 0, 0, 0,
	0, 636, 0, 641, 1398, 0, 247, 245, 0, 248,
	0, 251, 252, 0, 254, 247, 241, 0, 0, 0,
	1210, 401, 1062, 1180, 0, 1182, 0, 1060, 0, 0,
	1181, 452, 0, 459, 0, 473, 0, 0, 1231, 0,
	0, 1254, 1274, 1210, 0, 1313, 1315, 0, 1323, 0,
	0, 0, 1490, 1494, 0, 1483, 1484, 1623, 1496, 1514,
	-2, 0, 0, 1604, 1522, 1519, 1525, 1526, 0, 323,
	0, 318, 320, 0, 304, 0, 0, 1091, 1096, 0,
	0, 0, 0, 0, 1507, 1509, 0, 1033, 1036, 0,
	0, 0, 0, 0, 0, 0, 272, 283, 1707, 310,
	0, 827, 851, 927, 971, 1115, 0, 0, 973, 0,
	0, 1626, 1613, 1614, 1611, 1340, 1919, 1923, 0, 0,
	0, 1925, -2, 0, 1947, -2, -2, 2181, 2233, 1998,
	1604, 2020, 2022, 2009, 2227, 1867, 0, 2109, 2106, 0,
	2093, 0, 2044, 2045, 0, 0, 2048, 2050, 2051, 2052,
	1806, 1799, 1798, 2206, 0, 0, 0, 0, 2084, 1586,
	0, 2098, 0, 0, 1654, 2098, 2098, 1697, 0, 1699,
	1666, 1655, 0, 1663, 0, 2309, 1692, 1684, 0, 0,
	332, 0, 336, 337, 0, 0, 1740, 1745, 0, 1751,
	1821, 0, 236, 163, 164, 1352, 1356, 1353, 0, 166,
	0, 1137, 0, 1140, 0, 0, 0, 0, 1147, 1164,
	0, 0, 0, 0, 0, 0, 1166, 0, 1165, 0,
	0, 1196, 0, 1328, 1335, 0, -2, 0, 0, 0,
	173, 196, 0, 0, 0, 0, 199, 1402, 175, 0,
	0, 205, 205, 0, 0, 1344, 1346, 1359, 0, 0,
	0, 0, 151, 0, 0, 1362, 1366, 1374, 1369, 1371,
	1377, 0, 103, 0, 1480, 0, 0, 1379, 218, 219,
	0, 205, 0, 205, 211, 205, 1337, 0, 0, 0,
	0, 0, 0, 0, 1382, 1383, 238, 0, 0, 0,
	0, 240, 316, 247, 389, 0, 1110, 0, 1192, 1184,
	1185, 1186, 0, 1191, 1193, 0, 0, 1076, 1061, 0,
	1072, 0, 0, 1089, 1064, 0, 457, 474, 0, 477,
	0, 480, 1050, 1228, 1271, 1210, 0, 1305, 0, 0,
	0, 0, 0, 0, 0, 1492, 1494, 0, 1485, 1486,
	1516, 1622, 0, 0, 0, 1504, 1623, 0, 325, 326,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 326,
	285, 0, 286, 287, 288, 295, 296, 274, 275, 673,
	675, 0, 0, 681, 1114, 0, 0, 0, 0, 1612,
	1927, -2, -2, 1948, 0, 2310, 2312, 1604, 0, 2095,
	1606, 0, 0, -2, 0, 0, 0, 1587, 1570, 0,
	1645, 1637, 1639, 1641, 2619, 2402, 2732, 1571, 1572, 1719,
	0, 0, 1687, 333, 623, 0, 0, 1747, 0, 0,
	0, 1354, 168, 0, 1141, 1142, 2284, 1144, 0, 1146,
	1148, 1149, 1150, 0, 1153, 0, 2333, 0, 1158, 1161,
	1162, 0, 0, 1175, 1197, 0, 1206, 0, 1330, 1340,
	1334, 0, 1332, 1208, 0, 172, 198, 174, 200, 195,
	0, 1337, 0, 176, 185, 0, 0, 123, 0, 0,
	2396, 154, 152, 150, 101, 1341, 125, 0, 220, 228,
	1336, 230, 215, 205, 0, 1363, 1367, 1375, 0, 1390,
	1391, 1392, 1393, 0, 0, 0, 0, 249, 0, 250,
	253, 0, 0, 1125, 0, 1063, 1183, 0, 1194, 1195,
	1066, 0, 1065, 0, 0, 0, 0, 0, 458, 461,
	0, 464, 0, 0, 0, 0, 0, 1316, 1314, 0,
	1322, 0, 0, 0, 1468, 0, 0, 1487, 1488, 481,
	1510, 0, 0, 1516, 1527, 303, 0, 0, 1097, 1100,
	1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1098, 1208,
	0, 0, 1172, 0, 308, 282, 0, 677, 0, 679,
	0, 972, 974, 0, 0, 2021, 2113, 0, 0, 2046,
	2047, -2, 0, 1987, 2097, 2099, 0, 0, 0, 0,
	0, 1656, 1664, 624, 1741, 632, 1350, 0, 1357, 1139,
	1143, 0, 0, 0, 1154, 1214, 0, 0, 1231, 1231,
	1167, 0, 0, 1200, 1201, 1110, 0, 1202, 1203, 1204,
	1329, 1615, 1335, 1110, 0, 0, 197, 202, 0, 0,
	0, 0, 0, 0, 0, 209, 231, 1337, 0, 1394,
	1395, 0, 0, 246, 267, 0, 1272, 1064, 1124, 0,
	0, 1074, 0, 1077, 0, 1073, 1070, 1071, 1062, 0,
	462, 463, 478, 0, 479, 0, 1275, 0, 0, 1323,
	0, 0, 1475, 1467, 1494, 1489, 1490, 1738, 1513, 1517,
	0, 0, 1206, 1208, 1121, 0, 676, 0, 0, 982,
	983, 0, 0, 0, 0, 2108, 1607, 1988, 0, 0,
	1640, 1642, 1643, 1644, 1351, 0, 0, 1152, 1219, 0,
	0, 0, 0, 0, 1168, 1198, 1199, 1121, 0, 1333,
	1331, 1177, 0, 1210, 178, 0, 1208, 0, 1130, 0,
	0, 1133, 0, 0, 155, 2396, 153, 0, 205, 1387,
	205, 0, 270, 0, 261, 259, 260, 1066, 0, 0,
	1188, 1190, 0, 1078, 1110, 1076, 475, 1273, 1306, 1208,
	0, 1206, 0, 1482, 1494, 1476, 1477, 0, 1492, 0,
	326, 326, 1110, 1206, 1064, 1120, 326, 678, 680, 2105,
	2125, 2114, -2, 2690, 2403, 0, 2125, 2125, 2100, 2101,
	0, 0, 1155, 1215, 1216, 0, 1211, 1212, 1213, 2332,
	1156, 1157, 1159, 1160, 1196, 0, 0, 1214, 201, 1110,
	1127, 0, 0, 1128, 0, 0, 158, 0, 160, 232,
	1385, 0, 1388, 0, 255, 0, 0, 1058, 0, 1187,
	0, 0, 0, 0, 1125, 1066, 1206, 0, 1110, 0,
	1471, 1481, 0, 1491, 1468, 0, 305, 306, 1121, 1110,
	1738, 0, 307, 2110, 0, 0, 2116, 2117, 2118, 2119,
	2120, 2111, 2112, 1145, 0, 1217, 0, 1218, 0, 0,
	0, 1738, 1205, 0, 1219, 183, 1131, 0, 1134, 0,
	156, 0, 0, 0, 265, 266, 1055, 1057, 0, 1189,
	1067, 0, 1069, 1064, 1075, 1110, 0, 1121, 0, 1464,
	1470, 1474, 2293, 1475, 1511, 0, 1064, 1121, 1171, 0,
	2122, 2123, 0, 0, 0, 1220, 0, 1223, 1224, 0,
	1221, 1176, 0, 1196, 0, 0, 1386, 205, 0, 0,
	1068, 1066, 1121, 1208, 1064, 1206, 1482, 0, 1738, 1064,
	2121, 2124, 2115, 1151, 1222, 1225, 1226, 1207, 1178, 0,
	0, 1389, 268, 0, 1113, 1058, 1064, 1206, 1738, 1110,
	1471, 1738, 1169, 1738, 1118, 0, 0, 1109, 1111, 1112,
	1056, 1738, 1110, 1319, 1121, 1465, 1512, 1170, 1132, 1117,
	0, 269, 1317, 1121, 1064, 0, 1064, 1738, 0, 1738,
	1320, 1118, 1318, 1135,
}

var sqlTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 589, 3, 595, 590, 3,
	600, 601, 593, 591, 605, 592, 602, 594, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 608, 3,
	581, 583, 582, 586, 604, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 598, 3, 599, 596, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 606, 588, 607, 584,
}

var sqlTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}

var sqlTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 475, 57818, 476, 57819, 477,
	57820, 478, 57821, 479, 57822, 480, 57823, 481, 57824, 482,
	57825, 483, 57826, 484, 57827, 485, 57828, 486, 57829, 487,
	57830, 488, 57831, 489, 57832, 490, 57833, 491, 57834, 492,
	57835, 493, 57836, 494, 57837, 495, 57838, 496, 57839, 497,
	57840, 498, 57841, 499, 57842, 500, 57843, 501, 57844, 502,
	57845, 503, 57846, 504, 57847, 505, 57848, 506, 57849, 507,
	57850, 508, 57851, 509, 57852, 510, 57853, 511, 57854, 512,
	57855, 513, 57856, 514, 57857, 515, 57858, 516, 57859, 517,
	57860, 518, 57861, 519, 57862, 520, 57863, 521, 57864, 522,
	57865, 523, 57866, 524, 57867, 525, 57868, 526, 57869, 527,
	57870, 528, 57871, 529, 57872, 530, 57873, 531, 57874, 532,
	57875, 533, 57876, 534, 57877, 535, 57878, 536, 57879, 537,
	57880, 538, 57881, 539, 57882, 540, 57883, 541, 57884, 542,
	57885, 543, 57886, 544, 57887, 545, 57888, 546, 57889, 547,
	57890, 548, 57891, 549, 57892, 550, 57893, 551, 57894, 552,
	57895, 553, 57896, 554, 57897, 555, 57898, 556, 57899, 557,
	57900, 558, 57901, 559, 57902, 560, 57903, 561, 57904, 562,
	57905, 563, 57906, 564, 57907, 565, 57908, 566, 57909, 567,
	57910, 568, 57911, 569, 57912, 570, 57913, 571, 57914, 572,
	57915, 573, 57916, 574, 57917, 575, 57918, 576, 57919, 577,
	57920, 578, 57921, 579, 57922, 580, 57923, 585, 57924, 587,
	57925, 597, 57926, 603, 0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := sqlPact[state]
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && sqlChk[sqlAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || sqlExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := sqlExca[i]
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = sqlTok1[0]
		goto out
	}
	if char < len(sqlTok1) {
		token = sqlTok1[char]
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = sqlTok2[char-sqlPrivate]
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = sqlTok3[i+0]
		if token == char {
			token = sqlTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = sqlTok2[1] /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = sqlPact[sqlstate]
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = sqlAct[sqln]
	if sqlChk[sqln] == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = sqlDef[sqlstate]
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && sqlExca[xi+1] == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = sqlExca[xi+0]
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = sqlExca[xi+1]
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = sqlPact[sqlS[sqlp].yys] + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = sqlAct[sqln] /* simulate a shift of "error" */
					if sqlChk[sqlstate] == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= sqlR2[sqln]
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = sqlR1[sqln]
	sqlg := sqlPgo[sqln]
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = sqlAct[sqlg]
	} else {
		sqlstate = sqlAct[sqlj]
		if sqlChk[sqlstate] != -sqln {
			sqlstate = sqlAct[sqlg]
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1477
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1482
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1484
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 9:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1487
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 11:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1488
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 13:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1489
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 15:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1490
		{
			return helpWith(sqllex, "GRANT")
		}
	case 17:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1491
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 19:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1492
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 21:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1493
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 23:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1494
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 25:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1495
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 27:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1496
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 29:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1497
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 35:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1504
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 38:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1513
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 40:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1515
		{
			return helpWith(sqllex, "ALTER")
		}
	case 42:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1518
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 44:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1519
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 46:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1520
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 48:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1521
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 50:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1522
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 52:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1523
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 54:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1524
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 56:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1525
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 58:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1526
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 60:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1527
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 72:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1587
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 74:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1613
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 78:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1627
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 83:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1645
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 84:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1649
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 85:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1653
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 96:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1683
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 97:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1687
		{
			sqlVAL.union.val = &tree.AlterDatabaseOwner{Name: tree.Name(sqlDollar[3].str), Owner: sqlDollar[6].union.user()}
		}
	case 98:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1694
		{

			sqlVAL.union.val = &tree.AlterRoleSet{
				AllRoles:     true,
				DatabaseName: tree.Name(sqlDollar[3].str),
				IsRole:       true,
				SetOrReset:   sqlDollar[4].union.setVar(),
			}
		}
	case 99:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1706
		{

			sqlVAL.union.val = &tree.AlterDatabasePlacement{
				Name:      tree.Name(sqlDollar[3].str),
				Placement: sqlDollar[4].union.dataPlacement(),
			}
		}
	case 100:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1716
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 101:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1723
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:        tree.Name(sqlDollar[3].str),
				Region:      tree.Name(sqlDollar[9].str),
				IfNotExists: true,
			}
		}
	case 102:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1733
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 103:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1740
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:     tree.Name(sqlDollar[3].str),
				Region:   tree.Name(sqlDollar[8].str),
				IfExists: true,
			}
		}
	case 104:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1750
		{
			sqlVAL.union.val = &tree.AlterDatabaseSurvivalGoal{
				Name:         tree.Name(sqlDollar[3].str),
				SurvivalGoal: sqlDollar[4].union.survivalGoal(),
			}
		}
	case 105:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1759
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[4].str),
			}
		}
	case 106:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1766
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[5].str),
			}
		}
	case 108:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1790
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 117:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1822
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 118:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1826
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 119:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1830
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 120:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1836
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 121:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1840
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 122:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1846
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 123:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1855
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 124:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1866
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 125:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1870
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 126:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1876
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 127:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1884
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 128:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1894
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 129:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1898
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 132:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1907
		{
		}
	case 133:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1908
		{
		}
	case 134:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1912
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 135:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1921
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:      tree.TableIndexName{Table: name},
				Rows:              sqlDollar[6].union.slct(),
				RelocateNonVoters: true,
			}
		}
	case 136:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1933
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 137:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1938
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateNonVoters: true}
		}
	case 138:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1945
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:  tree.TableIndexName{Table: name},
				Rows:          sqlDollar[6].union.slct(),
				RelocateLease: true,
			}
		}
	case 139:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1957
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateLease: true}
		}
	case 140:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1964
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 141:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1972
		{

			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: sqlDollar[4].union.expr()}
		}
	case 142:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1977
		{
			sqlVAL.union.val = &tree.SetZoneConfig{Options: sqlDollar[4].union.kvOptions()}
		}
	case 143:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1981
		{

			sqlVAL.union.val = &tree.SetZoneConfig{SetDefault: true}
		}
	case 144:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1986
		{
			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: tree.DNull}
		}
	case 145:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1992
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 146:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2000
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 147:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2011
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 148:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2021
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 149:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2031
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 150:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2040
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 151:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2051
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 152:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2057
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 153:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2065
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 154:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2069
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 155:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2073
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 156:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2077
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 157:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2083
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 158:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2088
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 159:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2099
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 160:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2103
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 161:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2109
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 162:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2113
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 163:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2120
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 164:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2125
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 165:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2130
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 166:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2135
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 167:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2140
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 168:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2145
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 169:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2150
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 170:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2155
		{
			sqlVAL.union.val = &tree.AlterTableSetOnUpdate{Column: tree.Name(sqlDollar[3].str), Expr: sqlDollar[4].union.expr()}
		}
	case 171:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2160
		{
			sqlVAL.union.val = &tree.AlterTableSetVisible{Column: tree.Name(sqlDollar[3].str), Visible: sqlDollar[4].union.bool()}
		}
	case 172:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2165
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 173:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2170
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 174:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2175
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 175:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2179
		{
			return unimplemented(sqllex, "alter table alter column add")
		}
	case 176:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2184
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 177:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2193
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 178:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2205
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 179:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2215
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 180:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2222
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 181:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2225
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table inherits")
		}
	case 182:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2231
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table no inherits")
		}
	case 183:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2238
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:    sqlDollar[7].union.idxElems(),
				Sharded:    sqlDollar[9].union.shardedIndexDef(),
				Interleave: sqlDollar[10].union.interleave(),
			}
		}
	case 184:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2246
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 185:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2253
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 186:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2262
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 187:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2271
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 188:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2276
		{
			sqlVAL.union.val = &tree.AlterTablePartitionByTable{
				PartitionByTable: sqlDollar[1].union.partitionByTable(),
			}
		}
	case 189:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2283
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 190:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2291
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 191:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2292
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 192:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2296
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 193:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2300
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 194:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2306
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionByIndex: sqlDollar[1].union.partitionByIndex(),
			}
		}
	case 195:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2314
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 196:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2318
		{
			sqlVAL.union.val = nil
		}
	case 197:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2324
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 198:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2328
		{
			sqlVAL.union.val = nil
		}
	case 199:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2334
		{
			sqlVAL.union.val = true
		}
	case 200:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2338
		{
			sqlVAL.union.val = false
		}
	case 201:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2344
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 202:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2348
		{
			sqlVAL.union.val = nil
		}
	case 203:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2355
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 204:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2359
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 205:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2363
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 206:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2369
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 207:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2373
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 208:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2398
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[6].str),
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 209:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2409
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[9].str),
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 210:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2420
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeDropValue{
					Val: tree.EnumValue(sqlDollar[6].str),
				},
			}
		}
	case 211:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2429
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: tree.EnumValue(sqlDollar[6].str),
					NewVal: tree.EnumValue(sqlDollar[8].str),
				},
			}
		}
	case 212:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2439
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 213:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2448
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 214:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2457
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeOwner{
					Owner: sqlDollar[6].union.user(),
				},
			}
		}
	case 215:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2466
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 216:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2470
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 217:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2473
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 218:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2477
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 219:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2484
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 220:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2491
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 221:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2496
		{
			sqlVAL.union.val = sqlDollar[1].union.user()
		}
	case 222:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2498
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 223:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2503
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 224:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2510
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 225:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2518
		{

			sqlVAL.union.val, _ = security.MakeSQLUsernameFromUserInput(sqlDollar[1].str, security.UsernameValidation)
		}
	case 233:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2542
		{
			sqlVAL.union.val = &tree.RefreshMaterializedView{
				Name:              sqlDollar[5].union.unresolvedObjectName(),
				Concurrently:      sqlDollar[4].union.bool(),
				RefreshDataOption: sqlDollar[6].union.refreshDataOption(),
			}
		}
	case 234:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2549
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 235:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2553
		{
			sqlVAL.union.val = tree.RefreshDataWithData
		}
	case 236:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2557
		{
			sqlVAL.union.val = tree.RefreshDataClear
		}
	case 237:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2561
		{
			sqlVAL.union.val = tree.RefreshDataDefault
		}
	case 238:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2591
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: false,
				Subdir:         sqlDollar[4].union.expr(),
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 239:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2603
		{
			sqlVAL.union.val = &tree.Backup{
				Targets: sqlDollar[2].union.targetListPtr(),
				To:      sqlDollar[4].union.stringOrPlaceholderOptList(),
				Nested:  true,
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *sqlDollar[6].union.backupOptions(),
			}
		}
	case 240:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2613
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: true,
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 241:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2624
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:         sqlDollar[2].union.targetListPtr(),
				To:              sqlDollar[4].union.stringOrPlaceholderOptList(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}
		}
	case 242:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2633
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 243:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2637
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 244:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2641
		{
			t := sqlDollar[1].union.targetList()
			sqlVAL.union.val = &t
		}
	case 245:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2649
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 246:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2653
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 247:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2657
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 248:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2664
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 249:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2668
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 250:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2677
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 251:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2681
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: true}
		}
	case 252:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2685
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: true}
		}
	case 253:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2689
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 254:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2693
		{
			sqlVAL.union.val = &tree.BackupOptions{IncludeDeprecatedInterleaves: true}
		}
	case 255:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2775
		{
			sqlVAL.union.val = &tree.ScheduledBackup{
				ScheduleLabelSpec: *(sqlDollar[3].union.scheduleLabelSpec()),
				Recurrence:        sqlDollar[10].union.expr(),
				FullBackup:        sqlDollar[11].union.fullBackupClause(),
				To:                sqlDollar[8].union.stringOrPlaceholderOptList(),
				Targets:           sqlDollar[6].union.targetListPtr(),
				BackupOptions:     *(sqlDollar[9].union.backupOptions()),
				ScheduleOptions:   sqlDollar[12].union.kvOptions(),
			}
		}
	case 256:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2786
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 258:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2791
		{
			sqlVAL.union.val = nil
		}
	case 259:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2799
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 260:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2803
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 261:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2813
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 262:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2819
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{Label: sqlDollar[1].union.expr(), IfNotExists: false}
		}
	case 263:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2823
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{Label: sqlDollar[4].union.expr(), IfNotExists: true}
		}
	case 264:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2827
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{IfNotExists: false}
		}
	case 265:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2836
		{
			sqlVAL.union.val = &tree.FullBackupClause{Recurrence: sqlDollar[3].union.expr()}
		}
	case 266:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2840
		{
			sqlVAL.union.val = &tree.FullBackupClause{AlwaysFull: true}
		}
	case 267:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2844
		{
			sqlVAL.union.val = (*tree.FullBackupClause)(nil)
		}
	case 268:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2850
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 269:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2854
		{
			sqlVAL.union.val = sqlDollar[5].union.kvOptions()
		}
	case 270:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2858
		{
			sqlVAL.union.val = nil
		}
	case 271:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2892
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				From:               sqlDollar[3].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[4].union.asOfClause(),
				Options:            *(sqlDollar[5].union.restoreOptions()),
			}
		}
	case 272:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2901
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				Subdir:             sqlDollar[3].union.expr(),
				From:               sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[6].union.asOfClause(),
				Options:            *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 273:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2911
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[4].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *(sqlDollar[6].union.restoreOptions()),
			}
		}
	case 274:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2920
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				Subdir:  sqlDollar[4].union.expr(),
				From:    sqlDollar[6].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[7].union.asOfClause(),
				Options: *(sqlDollar[8].union.restoreOptions()),
			}
		}
	case 275:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2930
		{
			sqlVAL.union.val = &tree.StreamIngestion{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[7].union.stringOrPlaceholderOptList(),
				AsOf:    sqlDollar[8].union.asOfClause(),
			}
		}
	case 276:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2937
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 277:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2941
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList{sqlDollar[1].union.expr()}
		}
	case 278:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2945
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList(sqlDollar[2].union.exprs())
		}
	case 279:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2951
		{
			sqlVAL.union.val = []tree.StringOrPlaceholderOptList{sqlDollar[1].union.stringOrPlaceholderOptList()}
		}
	case 280:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2955
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listOfStringOrPlaceholderOptList(), sqlDollar[3].union.stringOrPlaceholderOptList())
		}
	case 281:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2962
		{
			sqlVAL.union.val = sqlDollar[2].union.restoreOptions()
		}
	case 282:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2966
		{
			sqlVAL.union.val = sqlDollar[4].union.restoreOptions()
		}
	case 283:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2970
		{
			sqlVAL.union.val = &tree.RestoreOptions{}
		}
	case 284:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2977
		{
			sqlVAL.union.val = sqlDollar[1].union.restoreOptions()
		}
	case 285:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2981
		{
			if err := sqlDollar[1].union.restoreOptions().CombineWith(sqlDollar[3].union.restoreOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 286:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2990
		{
			sqlVAL.union.val = &tree.RestoreOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 287:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2994
		{
			sqlVAL.union.val = &tree.RestoreOptions{DecryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 288:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2998
		{
			sqlVAL.union.val = &tree.RestoreOptions{IntoDB: sqlDollar[3].union.expr()}
		}
	case 289:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3002
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingFKs: true}
		}
	case 290:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3006
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequences: true}
		}
	case 291:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3010
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequenceOwners: true}
		}
	case 292:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3014
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingViews: true}
		}
	case 293:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3018
		{
			sqlVAL.union.val = &tree.RestoreOptions{Detached: true}
		}
	case 294:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3022
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipLocalitiesCheck: true}
		}
	case 295:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3026
		{
			sqlVAL.union.val = &tree.RestoreOptions{DebugPauseOn: sqlDollar[3].union.expr()}
		}
	case 296:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3030
		{
			sqlVAL.union.val = &tree.RestoreOptions{NewDBName: sqlDollar[3].union.expr()}
		}
	case 297:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3036
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 298:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3042
		{
			return unimplemented(sqllex, "alter function")
		}
	case 299:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3046
		{
			return unimplemented(sqllex, "alter domain")
		}
	case 300:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3050
		{
			return unimplemented(sqllex, "alter aggregate")
		}
	case 301:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3087
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 302:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3092
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 303:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3096
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 304:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3102
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 305:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3107
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateFile: sqlDollar[6].union.expr(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 306:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3112
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateDefs: sqlDollar[5].union.tblDefs(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 307:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3117
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 308:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3122
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 309:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3126
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 310:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3142
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 311:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3145
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 312:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3149
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 313:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3153
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 314:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3161
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 315:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3165
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 316:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3171
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 317:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3175
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 318:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3181
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 319:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3185
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 320:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3189
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 321:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3193
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 322:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3199
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 323:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3203
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 324:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3209
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 325:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3213
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 326:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3217
		{
			sqlVAL.union.val = nil
		}
	case 327:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3229
		{

			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			if sqlDollar[7].union.expr() != nil {
				return unimplementedWithIssue(sqllex, 54580)
			}
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: *sqlDollar[6].union.copyOptions(),
			}
		}
	case 328:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3243
		{
			return unimplemented(sqllex, "copy from unsupported format")
		}
	case 329:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3249
		{
			sqlVAL.union.val = sqlDollar[2].union.copyOptions()
		}
	case 330:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3253
		{
			sqlVAL.union.val = &tree.CopyOptions{}
		}
	case 331:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3259
		{
			sqlVAL.union.val = sqlDollar[1].union.copyOptions()
		}
	case 332:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3263
		{
			if err := sqlDollar[1].union.copyOptions().CombineWith(sqlDollar[2].union.copyOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 333:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3271
		{
			sqlVAL.union.val = &tree.CopyOptions{Destination: sqlDollar[3].union.expr()}
		}
	case 334:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3275
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatBinary}
		}
	case 335:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3279
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatCSV}
		}
	case 336:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3283
		{
			sqlVAL.union.val = &tree.CopyOptions{Delimiter: sqlDollar[2].union.expr()}
		}
	case 337:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3287
		{
			sqlVAL.union.val = &tree.CopyOptions{Null: sqlDollar[2].union.expr()}
		}
	case 339:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3295
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 341:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3296
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 343:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3297
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 345:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3298
		{
			return helpWith(sqllex, "CANCEL ALL JOBS")
		}
	case 346:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3299
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 347:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3309
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 348:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3317
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 349:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3319
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 350:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3323
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 351:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3326
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 352:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3336
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 353:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3345
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 354:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3353
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 355:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3355
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 356:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3359
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 357:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3362
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 358:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3372
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 359:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3381
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 360:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3389
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 361:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3391
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 362:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3395
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 363:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3398
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 364:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3406
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.CancelJob}
		}
	case 365:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3409
		{
			return helpWith(sqllex, "CANCEL ALL JOBS")
		}
	case 366:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3413
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 367:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3417
		{
			sqlVAL.union.val = &tree.CommentOnSchema{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 368:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3421
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 369:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3425
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 370:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3438
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 371:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3441
		{
			return unimplemented(sqllex, "comment on extension")
		}
	case 372:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3445
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 373:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3450
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 375:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3462
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 378:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3464
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 380:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3465
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 384:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3468
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 385:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3469
		{
		}
	case 386:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3470
		{
			return helpWith(sqllex, "CREATE")
		}
	case 387:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3477
		{
			sqlVAL.union.val = &tree.CreateExtension{IfNotExists: true, Name: sqlDollar[6].str}
		}
	case 388:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3480
		{
			sqlVAL.union.val = &tree.CreateExtension{Name: sqlDollar[3].str}
		}
	case 389:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3483
		{
			return unimplemented(sqllex, "create extension if not exists with")
		}
	case 390:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3484
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 391:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3487
		{
			return unimplemented(sqllex, "create access method")
		}
	case 392:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3488
		{
			return unimplemented(sqllex, "create aggregate")
		}
	case 393:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3489
		{
			return unimplemented(sqllex, "create cast")
		}
	case 394:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3490
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 395:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3491
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 396:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3492
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 397:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3493
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 398:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3494
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 399:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3495
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 400:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3496
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 401:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3497
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 402:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3498
		{
			return unimplementedWithIssue(sqllex, 65017)
		}
	case 403:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3499
		{
			return unimplemented(sqllex, "create publication")
		}
	case 404:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3500
		{
			return unimplemented(sqllex, "create rule")
		}
	case 405:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3501
		{
			return unimplemented(sqllex, "create server")
		}
	case 406:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3502
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 407:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3503
		{
			return unimplementedWithIssueDetail(sqllex, 54113, "create tablespace")
		}
	case 408:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3504
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 409:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3505
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create trigger")
		}
	case 410:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3508
		{
		}
	case 411:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3509
		{
		}
	case 412:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3512
		{
		}
	case 413:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3513
		{
		}
	case 414:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3516
		{
		}
	case 415:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3517
		{
		}
	case 416:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3520
		{
			return unimplemented(sqllex, "drop access method")
		}
	case 417:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3521
		{
			return unimplemented(sqllex, "drop aggregate")
		}
	case 418:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3522
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 419:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3523
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 420:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3524
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 421:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3525
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 422:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3526
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[5].str)
		}
	case 423:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3527
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[3].str)
		}
	case 424:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3528
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 425:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3529
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 426:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3530
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 427:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3531
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 428:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3532
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 429:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3533
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 430:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3534
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 431:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3535
		{
			return unimplemented(sqllex, "drop server")
		}
	case 432:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3536
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 433:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3537
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 434:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3538
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 436:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3541
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 438:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3542
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 440:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3543
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 442:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3544
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 444:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3545
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 445:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3547
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 447:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3548
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 449:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3549
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 451:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3550
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 452:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3560
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 453:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3568
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 454:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3572
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 455:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3576
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 456:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3582
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 457:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3586
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 458:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3595
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 459:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3602
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 460:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3608
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 461:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3614
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 462:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3618
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 463:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3629
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 464:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3641
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 465:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3656
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 466:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3664
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 467:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3674
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[1].union.tablePatterns()}
		}
	case 468:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3678
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 469:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3684
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()}
		}
	case 470:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3688
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedObjectName().ToUnresolvedName())
		}
	case 471:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3695
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 472:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3699
		{

			sqlVAL.union.val = nil
		}
	case 473:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3716
		{
			sqlVAL.union.val = &tree.ReplicationStream{
				Targets: sqlDollar[5].union.targetList(),
				SinkURI: sqlDollar[6].union.expr(),
				Options: *sqlDollar[7].union.replicationOptions(),
			}
		}
	case 474:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3727
		{
			sqlVAL.union.val = sqlDollar[2].union.replicationOptions()
		}
	case 475:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3731
		{
			sqlVAL.union.val = sqlDollar[4].union.replicationOptions()
		}
	case 476:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3735
		{
			sqlVAL.union.val = &tree.ReplicationOptions{}
		}
	case 477:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3742
		{
			sqlVAL.union.val = sqlDollar[1].union.replicationOptions()
		}
	case 478:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3746
		{
			if err := sqlDollar[1].union.replicationOptions().CombineWith(sqlDollar[3].union.replicationOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 479:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3755
		{
			sqlVAL.union.val = &tree.ReplicationOptions{Cursor: sqlDollar[3].union.expr()}
		}
	case 480:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3759
		{
			sqlVAL.union.val = &tree.ReplicationOptions{Detached: true}
		}
	case 481:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3772
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 482:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3782
		{
			return helpWith(sqllex, "DELETE")
		}
	case 483:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3785
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 484:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3786
		{
		}
	case 485:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3794
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 486:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3797
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 487:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3798
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 488:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3799
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 489:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3800
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 490:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3801
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 493:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3810
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 495:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3811
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 496:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3812
		{
		}
	case 497:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3813
		{
			return helpWith(sqllex, "DROP")
		}
	case 499:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3816
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 501:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3817
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 503:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3818
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 505:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3819
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 507:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3820
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 509:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3821
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 511:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3822
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 512:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3830
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 513:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3834
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 514:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3838
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[4].union.tableNames(),
				IfExists:       false,
				DropBehavior:   sqlDollar[5].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 515:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3847
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[6].union.tableNames(),
				IfExists:       true,
				DropBehavior:   sqlDollar[7].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 516:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3855
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 517:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3863
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 518:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3867
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 519:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3870
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 520:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3878
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 521:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3882
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 522:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3885
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 523:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3893
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 524:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3902
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 525:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3910
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 526:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3918
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 527:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3926
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 528:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3933
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 529:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3940
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 530:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3948
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 531:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3955
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 532:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3959
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[1].union.unresolvedObjectNames()}
		}
	case 533:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3965
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 534:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3969
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 535:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3978
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[3].union.objectNamePrefixList(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 536:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3986
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[5].union.objectNamePrefixList(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 537:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3993
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 538:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4001
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.exprs(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 539:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4005
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.exprs(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 540:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4008
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 541:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4012
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 542:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4017
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 543:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4030
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 544:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4035
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 545:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4037
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 546:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4042
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 547:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4046
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 548:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4069
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 549:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4076
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 550:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4078
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 551:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4086
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 552:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4094
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 553:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4102
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 554:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4110
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 555:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4121
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 560:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4129
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 564:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4132
		{
			return helpWith(sqllex, "DELETE")
		}
	case 567:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4134
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 569:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4135
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 571:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4136
		{
			return helpWith(sqllex, "INSERT")
		}
	case 575:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4139
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 578:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4141
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 580:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4144
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 584:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4149
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 586:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4150
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 588:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4151
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 590:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4156
		{
			return helpWith(sqllex, "DELETE")
		}
	case 592:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4157
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 594:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4158
		{
			return helpWith(sqllex, "INSERT")
		}
	case 595:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4160
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 598:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4164
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 600:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4165
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 601:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4169
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 602:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4173
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 603:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4183
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 604:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4191
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 605:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4199
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 606:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4203
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 607:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4207
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 608:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4217
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 609:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4224
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 610:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4232
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 611:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4236
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 612:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4240
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 613:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4250
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 614:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4254
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 615:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4258
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 616:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4262
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 617:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4265
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 618:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4288
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 619:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4292
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 620:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4296
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: true}
		}
	case 621:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4300
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 622:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4304
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees: sqlDollar[7].union.nameList(),
			}
		}
	case 623:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4314
		{
			return unimplemented(sqllex, "grant privileges on schema with")
		}
	case 624:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4318
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees: sqlDollar[10].union.nameList(),
			}
		}
	case 625:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4329
		{
			return unimplemented(sqllex, "grant privileges on sequence")
		}
	case 626:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4332
		{
			return helpWith(sqllex, "GRANT")
		}
	case 627:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4355
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 628:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4359
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 629:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4363
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.nameList(), AdminOption: true}
		}
	case 630:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4367
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 631:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4371
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees: sqlDollar[7].union.nameList(),
			}
		}
	case 632:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4381
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees: sqlDollar[10].union.nameList(),
			}
		}
	case 633:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4392
		{
			return unimplemented(sqllex, "revoke privileges on sequence")
		}
	case 634:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4395
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 635:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4400
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 636:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4404
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 637:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4414
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 638:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4418
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 644:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4432
		{
			return helpWith(sqllex, "RESET")
		}
	case 646:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4433
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 647:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4441
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}, Reset: true}
		}
	case 648:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4445
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}, Reset: true}
		}
	case 649:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4448
		{
			return helpWith(sqllex, "RESET")
		}
	case 650:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4456
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 651:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4459
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 652:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4470
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 653:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4473
		{
			return helpWith(sqllex, "USE")
		}
	case 655:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4477
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 656:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4478
		{
		}
	case 657:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4479
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 659:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4483
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 661:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4484
		{
			return helpWith(sqllex, "SET LOCAL")
		}
	case 663:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4485
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 665:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4486
		{
			return helpWith(sqllex, "USE")
		}
	case 668:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4502
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 669:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4517
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 670:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4520
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 671:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4538
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 672:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4546
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 673:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4550
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 674:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4554
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 675:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4560
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 676:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4564
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 677:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4570
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 678:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4574
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 679:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4578
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 680:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4582
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 681:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4586
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 682:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4597
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 683:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4600
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 686:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4610
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 687:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4626
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 688:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4629
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 689:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4631
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 690:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4634
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 691:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4637
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 692:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4651
		{
			ret := sqlDollar[3].union.setVar()
			ret.Local = true
			sqlVAL.union.val = ret
		}
	case 693:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4656
		{
			return helpWith(sqllex, "SET LOCAL")
		}
	case 694:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4673
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 695:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4676
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 696:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4678
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 697:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4681
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 698:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4685
		{

			varName := sqlDollar[1].union.strs()
			if len(varName) == 1 && varName[0] == "tracing" {
				sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[3].union.exprs()}
			} else {
				sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
			}
		}
	case 700:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4704
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 701:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4708
		{
			return unimplemented(sqllex, "set from current")
		}
	case 702:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4712
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 703:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4717
		{

			sqlVAL.union.val = &tree.SetVar{Name: "role", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 705:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4726
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 706:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4731
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 708:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4743
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 709:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4748
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 710:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4755
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 711:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4759
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 712:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4765
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 713:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4769
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 715:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4776
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 718:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4797
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 719:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4801
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 720:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4807
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 721:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4811
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 722:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4815
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 723:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4819
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 724:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4823
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 725:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4829
		{
			sqlVAL.union.val = tree.Low
		}
	case 726:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4833
		{
			sqlVAL.union.val = tree.Normal
		}
	case 727:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4837
		{
			sqlVAL.union.val = tree.High
		}
	case 728:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4848
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 729:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4852
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 730:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4856
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 732:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4861
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 733:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4865
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 735:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4880
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 737:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4881
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 739:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4882
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 741:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4883
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 743:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4884
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 745:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4885
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 747:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4886
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 749:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4887
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 751:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4888
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 754:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4890
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 756:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4891
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 758:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4892
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 760:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4893
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 762:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4894
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 765:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4896
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 767:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4897
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 769:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4898
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 772:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4900
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 775:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4902
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 777:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4903
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 779:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4904
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 781:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4905
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 783:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4906
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 785:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4907
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 787:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4908
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 789:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4909
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 791:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4910
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 793:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4911
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 795:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4912
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 797:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4913
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 799:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4914
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 801:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4915
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 802:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4916
		{
			return helpWith(sqllex, "SHOW")
		}
	case 806:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4919
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 807:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4924
		{
		}
	case 808:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4925
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 809:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4928
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 810:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4932
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 811:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4937
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 812:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4942
		{

			return purposelyUnimplemented(sqllex, "reindex schema", "CockroachDB does not require reindexing.")
		}
	case 813:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4947
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 814:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4952
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 815:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4962
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 816:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4963
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 817:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4964
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 821:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4975
		{
			sqlVAL.str = "client_encoding"
		}
	case 824:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4979
		{
			sqlVAL.str = "timezone"
		}
	case 825:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4980
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 826:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4994
		{
			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 827:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4998
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[7].union.unresolvedObjectName(), UsingJSON: true}
		}
	case 828:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5002
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 829:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5013
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 830:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5021
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 831:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5029
		{
			sqlVAL.union.val = &tree.ShowBackup{
				InCollection: sqlDollar[4].union.expr(),
			}
		}
	case 832:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5035
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 833:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5043
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:      tree.BackupDefaultDetails,
				Path:         sqlDollar[3].union.expr(),
				InCollection: sqlDollar[5].union.expr(),
				Options:      sqlDollar[6].union.kvOptions(),
			}
		}
	case 834:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5052
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:              tree.BackupDefaultDetails,
				ShouldIncludeSchemas: true,
				Path:                 sqlDollar[4].union.expr(),
				Options:              sqlDollar[5].union.kvOptions(),
			}
		}
	case 835:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5061
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 836:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5070
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 837:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5078
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 838:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5088
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 839:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5092
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 840:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5095
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 841:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5097
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 842:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5100
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 843:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5102
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 844:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5106
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 845:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5109
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 846:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5117
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 847:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5120
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 848:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5128
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 849:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5132
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 850:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5136
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 851:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5140
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 852:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5143
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 853:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5151
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 854:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5154
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 855:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5160
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				Roles: sqlDollar[4].union.nameList(),
			}
		}
	case 856:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5165
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				ForAllRoles: true,
			}
		}
	case 857:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5170
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 858:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5177
		{
			sqlVAL.union.val = &tree.ShowEnums{}
		}
	case 859:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5181
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
			}
		}
	case 860:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5191
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
			}
		}
	case 861:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5200
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 862:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5207
		{
			sqlVAL.union.val = &tree.ShowTypes{}
		}
	case 863:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5210
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 864:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5223
		{
			lst := sqlDollar[3].union.targetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.nameList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.nameList()}
			}
		}
	case 865:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5231
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 866:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5239
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 867:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5242
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 868:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5244
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 869:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5248
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 870:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5252
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 871:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5255
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 872:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5257
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 873:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5261
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 874:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5264
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 875:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5272
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 876:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5275
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 877:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5277
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 878:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5280
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 879:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5288
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 880:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5291
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 881:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5293
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 882:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5296
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 883:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5300
		{
			sqlVAL.union.val = true
		}
	case 884:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5302
		{
			sqlVAL.union.val = true
		}
	case 885:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5304
		{
			sqlVAL.union.val = false
		}
	case 888:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5321
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 889:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5325
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 890:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5329
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{}
		}
	case 891:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5332
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 892:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5333
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 893:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5334
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 894:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5336
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 895:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5340
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 896:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5344
		{
			sqlVAL.union.val = &tree.ShowJobs{Schedules: sqlDollar[3].union.slct()}
		}
	case 897:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5348
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{Jobs: sqlDollar[4].union.slct()}
		}
	case 898:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5351
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 899:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5353
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 900:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5361
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[4].union.expr()}}},
				},
			}
		}
	case 901:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5369
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 902:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5377
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 903:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5378
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 904:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5388
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ExecutorType:   sqlDollar[3].union.executorType(),
			}
		}
	case 905:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5394
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 906:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5396
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: sqlDollar[2].union.scheduleState(),
				ExecutorType:   sqlDollar[4].union.executorType(),
			}
		}
	case 907:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5402
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 908:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5404
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ScheduleID:     sqlDollar[3].union.expr(),
			}
		}
	case 909:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5410
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 910:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5414
		{
			sqlVAL.union.val = tree.ActiveSchedules
		}
	case 911:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5418
		{
			sqlVAL.union.val = tree.PausedSchedules
		}
	case 912:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5424
		{
			sqlVAL.union.val = tree.InvalidExecutor
		}
	case 913:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5428
		{
			sqlVAL.union.val = tree.ScheduledBackupExecutor
		}
	case 914:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5432
		{
			sqlVAL.union.val = tree.ScheduledSQLStatsCompactionExecutor
		}
	case 915:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5443
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 916:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5446
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 917:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5448
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 918:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5451
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 919:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5453
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 920:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5457
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 921:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5460
		{
			sqlVAL.union.val = true
		}
	case 922:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5461
		{
			sqlVAL.union.val = false
		}
	case 923:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5469
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 924:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5472
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 925:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5474
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 926:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5477
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 927:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5485
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 928:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5495
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 929:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5505
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 930:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5508
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 931:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5515
		{
			sqlVAL.union.val = &tree.ShowTransactions{Cluster: sqlDollar[2].union.bool()}
		}
	case 932:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5518
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 933:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5520
		{
			sqlVAL.union.val = &tree.ShowTransactions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 934:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5523
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 935:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5526
		{
			sqlVAL.union.val = true
		}
	case 936:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5527
		{
			sqlVAL.union.val = false
		}
	case 937:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5534
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 938:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5538
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 939:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5541
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 940:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5548
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 941:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5552
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 942:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5555
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 943:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5562
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 944:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5566
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 945:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5570
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{Columns: sqlDollar[5].union.nameList()}
		}
	case 946:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5577
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 947:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5581
		{

			sqlVAL.union.val = tree.ShowLastQueryStatisticsDefaultColumns
		}
	case 948:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5592
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 949:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5595
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 950:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5603
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 951:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5608
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 952:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5613
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 953:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5617
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 954:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5627
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 955:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5631
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeTable, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 956:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5636
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeView, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 957:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5641
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeSequence, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 958:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5646
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeDatabase, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 959:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5651
		{
			sqlVAL.union.val = &tree.ShowCreateAllTables{}
		}
	case 960:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5654
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 961:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5664
		{

			sqlVAL.union.val = &tree.ShowCreateSchedules{}
		}
	case 962:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5668
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 963:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5670
		{

			sqlVAL.union.val = &tree.ShowCreateSchedules{ScheduleID: sqlDollar[4].union.expr()}
		}
	case 964:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5674
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 965:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5682
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 966:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5685
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 967:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5693
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 968:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5696
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 969:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5706
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 970:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5710
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 971:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5714
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 972:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5722
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 973:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5730
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 974:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5737
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 975:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5743
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 976:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5745
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 977:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5748
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 978:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5750
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 979:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5753
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 981:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5757
		{
		}
	case 982:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5766
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 983:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5774
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 984:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5780
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 985:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5789
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 986:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5794
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 987:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5798
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 988:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5801
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 989:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5810
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{}
		}
	case 990:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5814
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{
				DatabaseName: tree.Name(sqlDollar[6].str),
			}
		}
	case 991:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5830
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromCluster,
			}
		}
	case 992:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5836
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
			}
		}
	case 993:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5842
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromAllDatabases,
			}
		}
	case 994:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5848
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
				DatabaseName:    tree.Name(sqlDollar[5].str),
			}
		}
	case 995:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5855
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDefault,
			}
		}
	case 996:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5860
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 997:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5864
		{
			sqlVAL.union.val = &tree.ShowVar{Name: "locality"}
		}
	case 998:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5870
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 999:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5877
		{

			sqlVAL.union.val = &tree.ShowFullTableScans{}
		}
	case 1000:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5884
		{
			tmp := sqlDollar[2].union.targetList()
			sqlVAL.union.val = &tmp
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5889
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 1002:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6009
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 1003:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6013
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 1004:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6017
		{

			sqlVAL.union.val = tree.TargetList{
				Tables:   tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6056
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6060
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.TargetList{Tables: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}
		}
	case 1007:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6065
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6069
		{
			tenID := uint64(sqlDollar[2].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TargetList{Tenant: roachpb.MakeTenantID(tenID)}
		}
	case 1009:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6077
		{
			sqlVAL.union.val = tree.TargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 1010:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6086
		{
			sqlVAL.union.val = tree.TargetList{ForRoles: true, Roles: sqlDollar[2].union.nameList()}
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6090
		{
			sqlVAL.union.val = tree.TargetList{Schemas: sqlDollar[2].union.objectNamePrefixList()}
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6094
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[2].union.unresolvedObjectNames()}
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6101
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1015:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6105
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1017:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6118
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1019:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6119
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6120
		{
			return helpWith(sqllex, "PAUSE ALL JOBS")
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6121
		{
			return helpWith(sqllex, "PAUSE")
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6131
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6132
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6133
		{
			return helpWith(sqllex, "RESUME ALL JOBS")
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6134
		{
			return helpWith(sqllex, "RESUME")
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6142
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.ResumeJob}
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6145
		{
			return helpWith(sqllex, "RESUME ALL JOBS")
		}
	case 1032:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6155
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6164
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
				Reason:  sqlDollar[7].union.expr(),
			}
		}
	case 1034:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6173
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6175
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1036:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6179
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob, Reason: sqlDollar[7].union.expr()}
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6183
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1038:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6186
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6191
		{
			sqlVAL.union.val = sqlDollar[3].union.slct()
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6195
		{
			sqlVAL.union.val = &tree.Select{
				Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
			}
		}
	case 1041:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6210
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseSchedule,
			}
		}
	case 1042:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6218
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6220
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.PauseSchedule,
			}
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6226
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6234
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.PauseJob}
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6237
		{
			return helpWith(sqllex, "PAUSE ALL JOBS")
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6246
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
			}
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6252
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
			}
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6259
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:   sqlDollar[3].union.objectNamePrefix(),
				AuthRole: sqlDollar[5].union.user(),
			}
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6266
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
				AuthRole:    sqlDollar[8].union.user(),
			}
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6273
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6284
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6293
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaOwner{
					Owner: sqlDollar[6].union.user(),
				},
			}
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6301
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:6340
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      false,
				Interleave:       sqlDollar[9].union.interleave(),
				Defs:             sqlDollar[6].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[10].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[11].union.storageParams(),
				OnCommit:         sqlDollar[12].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[13].union.locality(),
			}
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:6356
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      true,
				Interleave:       sqlDollar[12].union.interleave(),
				Defs:             sqlDollar[9].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[13].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[14].union.storageParams(),
				OnCommit:         sqlDollar[15].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[16].union.locality(),
			}
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6374
		{
			sqlVAL.union.val = sqlDollar[1].union.locality()
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6378
		{
			sqlVAL.union.val = (*tree.Locality)(nil)
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6385
		{

			sqlVAL.union.val = nil
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6391
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6397
		{
			sqlVAL.str = ""
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6401
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "create table inherits")
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6407
		{
			sqlVAL.union.val = nil
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6411
		{
			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6416
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6420
		{
			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 1068:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6424
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6428
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6434
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6438
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6444
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6448
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6454
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    nil,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1075:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:6468
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    nil,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6483
		{
		}
	case 1077:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6484
		{
		}
	case 1078:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6485
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6503
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1080:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6504
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6505
		{
			sqlVAL.union.val = tree.PersistencePermanent
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6509
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6510
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6511
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6512
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6513
		{
			sqlVAL.union.val = tree.PersistenceUnlogged
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6518
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6524
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6528
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6534
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6540
		{
			def := sqlDollar[1].union.constraintDef()
			valBehavior := sqlDollar[2].union.validationBehavior()
			if u, ok := def.(*tree.UniqueConstraintTableDef); ok && valBehavior == tree.ValidationSkip {
				typ := "PRIMARY KEY"
				if !u.PrimaryKey {
					typ = "UNIQUE"
				}
				return purposelyUnimplemented(sqllex, "table constraint", typ+" constraints cannot be marked NOT VALID")
			}
			sqlVAL.union.val = def
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6553
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6562
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6566
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6572
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6577
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6578
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6579
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6580
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6581
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6582
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6583
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6584
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6585
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6590
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.InterleaveDef{
				Parent:       name,
				Fields:       sqlDollar[6].union.nameList(),
				DropBehavior: sqlDollar[8].union.dropBehavior(),
			}
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6599
		{
			sqlVAL.union.val = (*tree.InterleaveDef)(nil)
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6606
		{

			sqlVAL.union.val = tree.DropCascade
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6611
		{

			sqlVAL.union.val = tree.DropRestrict
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6616
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6622
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6629
		{
			sqlVAL.str = ""
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6636
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6642
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6650
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6656
		{
			sqlVAL.union.val = (*tree.PartitionByIndex)(nil)
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6662
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6668
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				All:         true,
				PartitionBy: sqlDollar[4].union.partitionBy(),
			}
		}
	case 1125:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6678
		{
			sqlVAL.union.val = (*tree.PartitionByTable)(nil)
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6684
		{
			sqlVAL.union.val = sqlDollar[3].union.partitionBy()
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6690
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				List:   sqlDollar[6].union.listPartitions(),
			}
		}
	case 1128:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6697
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				Range:  sqlDollar[6].union.rangePartitions(),
			}
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6704
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6710
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6714
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6720
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6730
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6734
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 1135:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6740
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6754
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6765
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1138:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6769
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6775
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6779
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6783
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6787
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6791
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6795
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6799
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6817
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6821
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6825
		{
			sqlVAL.union.val = tree.HiddenConstraint{}
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6829
		{
			sqlVAL.union.val = tree.UniqueConstraint{
				WithoutIndex: sqlDollar[2].union.bool(),
			}
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6835
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6839
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:      true,
				ShardBuckets: sqlDollar[8].union.expr(),
			}
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6846
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6850
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6854
		{
			sqlVAL.union.val = &tree.ColumnOnUpdate{Expr: sqlDollar[3].union.expr()}
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6858
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6868
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: false}
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6872
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: true}
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6876
		{
			sqllex.Error("use AS ( <expr> ) STORED or AS ( <expr> ) VIRTUAL")
			return 1
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6881
		{
			sqlVAL.union.val = &tree.GeneratedAlwaysAsIdentity{
				SeqOptions: sqlDollar[4].union.seqOpts(),
			}
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6887
		{
			sqlVAL.union.val = &tree.GeneratedByDefAsIdentity{
				SeqOptions: sqlDollar[4].union.seqOpts(),
			}
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6893
		{
			sqlVAL.union.val = &tree.GeneratedAlwaysAsIdentity{}
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6897
		{
			sqlVAL.union.val = &tree.GeneratedByDefAsIdentity{}
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6903
		{

			sqlVAL.union.val = true
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6908
		{
			sqlVAL.union.val = false
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6913
		{
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6917
		{
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6920
		{
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6924
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[2].str),
				Columns:          sqlDollar[4].union.idxElems(),
				Sharded:          sqlDollar[6].union.shardedIndexDef(),
				Storing:          sqlDollar[7].union.nameList(),
				Interleave:       sqlDollar[8].union.interleave(),
				PartitionByIndex: sqlDollar[9].union.partitionByIndex(),
				StorageParams:    sqlDollar[10].union.storageParams(),
				Predicate:        sqlDollar[11].union.expr(),
			}
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:6937
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:             tree.Name(sqlDollar[3].str),
					Columns:          sqlDollar[5].union.idxElems(),
					Sharded:          sqlDollar[7].union.shardedIndexDef(),
					Storing:          sqlDollar[8].union.nameList(),
					Interleave:       sqlDollar[9].union.interleave(),
					PartitionByIndex: sqlDollar[10].union.partitionByIndex(),
					StorageParams:    sqlDollar[11].union.storageParams(),
					Predicate:        sqlDollar[12].union.expr(),
				},
			}
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6952
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[3].str),
				Columns:          sqlDollar[5].union.idxElems(),
				Inverted:         true,
				PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
				StorageParams:    sqlDollar[8].union.storageParams(),
				Predicate:        sqlDollar[9].union.expr(),
			}
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6965
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6977
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6982
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6988
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6995
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				WithoutIndex: sqlDollar[2].union.bool(),
				IndexTableDef: tree.IndexTableDef{
					Columns:          sqlDollar[4].union.idxElems(),
					Storing:          sqlDollar[6].union.nameList(),
					Interleave:       sqlDollar[7].union.interleave(),
					PartitionByIndex: sqlDollar[8].union.partitionByIndex(),
					Predicate:        sqlDollar[10].union.expr(),
				},
			}
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7008
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:    sqlDollar[4].union.idxElems(),
					Sharded:    sqlDollar[6].union.shardedIndexDef(),
					Interleave: sqlDollar[7].union.interleave(),
				},
				PrimaryKey: true,
			}
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7020
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7031
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7038
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7042
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7048
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7058
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7069
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7073
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7080
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7086
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns: sqlDollar[4].union.idxElems(),
				},
				PrimaryKey: true,
			}
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7097
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7101
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7107
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7113
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7117
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7123
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7127
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7133
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7138
		{
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7139
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7140
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7141
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7142
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 1201:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7143
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7161
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7165
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7171
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[6].union.expr(),
			}
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7177
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7183
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7187
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7207
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7211
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 1213:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7215
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 1214:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7219
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7228
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7232
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7236
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7240
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 1219:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7244
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7250
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7256
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7264
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7268
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7272
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7276
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7280
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7299
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:        name,
				Persistence: sqlDollar[2].union.persistence(),
				Options:     sqlDollar[5].union.seqOpts(),
			}
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7308
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
			}
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7316
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7320
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7323
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7324
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7327
		{
			return unimplementedWithIssueDetail(sqllex, 25110, sqlDollar[2].union.typeReference().SQLString())
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7328
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7330
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7331
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7332
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7342
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 1240:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7344
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7346
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7348
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7350
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7351
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7353
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7354
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7356
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7358
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7366
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7369
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7373
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7377
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7387
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7391
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.expr(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7394
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7405
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7409
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.expr(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7413
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[3].union.expr(), DatabaseName: tree.Name(sqlDollar[4].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7417
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[5].union.expr(), IfExists: true, DatabaseName: tree.Name(sqlDollar[6].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[7].union.setVar()}
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7421
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: true, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7425
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: false, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7428
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7432
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7436
		{
			sqlVAL.str = ""
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7442
		{
			sqlVAL.union.val = sqlDollar[2].union.setVar()
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7446
		{
			sqlVAL.union.val = &tree.SetVar{ResetAll: true}
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7450
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7458
		{
			sqlVAL.union.val = true
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7462
		{

			sqlVAL.union.val = true
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7467
		{
			sqlVAL.union.val = false
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7477
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7491
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Persistence: sqlDollar[4].union.persistence(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7503
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7515
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[5].union.nameList(),
				AsSource:     sqlDollar[7].union.slct(),
				Materialized: true,
			}
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7525
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[8].union.nameList(),
				AsSource:     sqlDollar[10].union.slct(),
				Materialized: true,
				IfNotExists:  true,
			}
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7535
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7539
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7543
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7547
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7551
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7555
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7559
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7563
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7567
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7571
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7575
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7579
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1288:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7583
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7587
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7591
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7595
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7599
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7603
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7607
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7616
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7620
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7626
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7630
		{
			sqlVAL.union.val = nil
		}
	case 1301:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7636
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: sqlDollar[3].union.expr()}
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7640
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: tree.DNull}
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7645
		{
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7646
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7655
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.enumValueList(),
			}
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7663
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:    sqlDollar[6].union.unresolvedObjectName(),
				Variety:     tree.Enum,
				EnumLabels:  sqlDollar[10].union.enumValueList(),
				IfNotExists: true,
			}
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7671
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7673
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7675
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7677
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7679
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7681
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7685
		{
			sqlVAL.union.val = sqlDollar[1].union.enumValueList()
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7689
		{
			sqlVAL.union.val = tree.EnumValueList(nil)
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7695
		{
			sqlVAL.union.val = tree.EnumValueList{tree.EnumValue(sqlDollar[1].str)}
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7699
		{
			sqlVAL.union.val = append(sqlDollar[1].union.enumValueList(), tree.EnumValue(sqlDollar[3].str))
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-17 : sqlpt+1]
//line sql-gen.y:7719
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[5].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Columns:          sqlDollar[10].union.idxElems(),
				Sharded:          sqlDollar[12].union.shardedIndexDef(),
				Storing:          sqlDollar[13].union.nameList(),
				Interleave:       sqlDollar[14].union.interleave(),
				PartitionByIndex: sqlDollar[15].union.partitionByIndex(),
				StorageParams:    sqlDollar[16].union.storageParams(),
				Predicate:        sqlDollar[17].union.expr(),
				Inverted:         sqlDollar[8].union.bool(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1318:
		sqlDollar = sqlS[sqlpt-20 : sqlpt+1]
//line sql-gen.y:7737
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[8].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Sharded:          sqlDollar[15].union.shardedIndexDef(),
				Storing:          sqlDollar[16].union.nameList(),
				Interleave:       sqlDollar[17].union.interleave(),
				PartitionByIndex: sqlDollar[18].union.partitionByIndex(),
				Inverted:         sqlDollar[11].union.bool(),
				StorageParams:    sqlDollar[19].union.storageParams(),
				Predicate:        sqlDollar[20].union.expr(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:7756
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[6].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				Columns:          sqlDollar[10].union.idxElems(),
				Storing:          sqlDollar[12].union.nameList(),
				Interleave:       sqlDollar[13].union.interleave(),
				PartitionByIndex: sqlDollar[14].union.partitionByIndex(),
				StorageParams:    sqlDollar[15].union.storageParams(),
				Predicate:        sqlDollar[16].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:7773
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[9].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Storing:          sqlDollar[15].union.nameList(),
				Interleave:       sqlDollar[16].union.interleave(),
				PartitionByIndex: sqlDollar[17].union.partitionByIndex(),
				StorageParams:    sqlDollar[18].union.storageParams(),
				Predicate:        sqlDollar[19].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7790
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1322:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7794
		{

			switch sqlDollar[2].str {
			case "gin", "gist":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1323:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7809
		{
			sqlVAL.union.val = false
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7815
		{
			sqlVAL.union.val = true
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7819
		{
			sqlVAL.union.val = false
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7825
		{
			sqlVAL.union.val = true
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7829
		{
			sqlVAL.union.val = false
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7835
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1329:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7839
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1330:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7848
		{
			e := sqlDollar[2].union.idxElem()
			e.Expr = sqlDollar[1].union.expr()
			sqlVAL.union.val = e
		}
	case 1331:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7854
		{
			e := sqlDollar[4].union.idxElem()
			e.Expr = sqlDollar[2].union.expr()
			sqlVAL.union.val = e
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7860
		{
			e := sqlDollar[2].union.idxElem()
			e.Column = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = e
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7868
		{

			opClass := sqlDollar[1].str
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			if opClass != "" {
				if opClass == "gin_trgm_ops" || opClass == "gist_trgm_ops" {
					return unimplementedWithIssueDetail(sqllex, 41285, "index using "+opClass)
				}
				return unimplementedWithIssue(sqllex, 47420)
			}

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = tree.IndexElem{Direction: dir, NullsOrder: nullsOrder}
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7892
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1335:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7893
		{
			sqlVAL.str = ""
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7896
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7897
		{
			sqlVAL.str = ""
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7901
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7905
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7909
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7915
		{
			sqlVAL.union.val = &tree.ReparentDatabase{Name: tree.Name(sqlDollar[3].str), Parent: tree.Name(sqlDollar[9].str)}
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7921
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7927
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7933
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7941
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false,
			}
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7947
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true,
			}
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7955
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Locality: sqlDollar[5].union.locality(),
				IfExists: false,
			}
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7963
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Locality: sqlDollar[7].union.locality(),
				IfExists: true,
			}
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7973
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7979
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[6].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7986
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7992
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7998
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[4].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8005
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8011
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8017
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8023
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel:       tree.LocalityLevelRow,
				RegionalByRowColumn: tree.Name(sqlDollar[6].str),
			}
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8032
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.user(),
				IfExists: false,
			}
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8040
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.user(),
				IfExists: true,
			}
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8050
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsView: true,
			}
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8056
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[7].str),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8066
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsView: true,
			}
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8072
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[9].str),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8084
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.user(),
				IfExists: false,
				IsView:   true,
			}
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8093
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Owner:          sqlDollar[7].union.user(),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8103
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.user(),
				IfExists: true,
				IsView:   true,
			}
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8112
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Owner:          sqlDollar[9].union.user(),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8124
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsSequence: true,
			}
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8130
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsSequence: true,
			}
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8138
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[3].union.unresolvedObjectName(),
				Owner:      sqlDollar[6].union.user(),
				IfExists:   false,
				IsSequence: true,
			}
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8147
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[5].union.unresolvedObjectName(),
				Owner:      sqlDollar[8].union.user(),
				IfExists:   true,
				IsSequence: true,
			}
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8158
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8164
		{
			name := sqlDollar[4].union.unresolvedObjectName()
			newName := sqlDollar[7].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8176
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8182
		{
			name := sqlDollar[6].union.unresolvedObjectName()
			newName := sqlDollar[9].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8196
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8202
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8210
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8214
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8226
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.nameList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Grant:   sqlDollar[6].union.abbreviatedGrant(),
				IsGrant: true,
			}
		}
	case 1381:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8235
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.nameList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Revoke:  sqlDollar[6].union.abbreviatedRevoke(),
				IsGrant: false,
			}
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8244
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Grant:       sqlDollar[8].union.abbreviatedGrant(),
				IsGrant:     true,
			}
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8253
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Revoke:      sqlDollar[8].union.abbreviatedRevoke(),
				IsGrant:     false,
			}
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8261
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 1385:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8265
		{
			sqlVAL.union.val = tree.AbbreviatedGrant{
				Privileges:      sqlDollar[2].union.privilegeList(),
				Target:          sqlDollar[4].union.alterDefaultPrivilegesTargetObject(),
				Grantees:        sqlDollar[6].union.nameList(),
				WithGrantOption: sqlDollar[7].union.bool(),
			}
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8276
		{
			sqlVAL.union.val = true
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8280
		{
			sqlVAL.union.val = false
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8286
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Target:     sqlDollar[4].union.alterDefaultPrivilegesTargetObject(),
				Grantees:   sqlDollar[6].union.nameList(),
			}
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8294
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges:     sqlDollar[5].union.privilegeList(),
				Target:         sqlDollar[7].union.alterDefaultPrivilegesTargetObject(),
				Grantees:       sqlDollar[9].union.nameList(),
				GrantOptionFor: true,
			}
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8305
		{
			sqlVAL.union.val = tree.Tables
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8309
		{
			sqlVAL.union.val = tree.Sequences
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8313
		{
			sqlVAL.union.val = tree.Types
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8317
		{
			sqlVAL.union.val = tree.Schemas
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8321
		{
			return unimplemented(sqllex, "ALTER DEFAULT PRIVILEGES ... ON FUNCTIONS ...")
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8325
		{
			return unimplemented(sqllex, "ALTER DEFAULT PRIVILEGES ... ON FUNCTIONS ...")
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8331
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8334
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8340
		{
			sqlVAL.union.val = sqlDollar[3].union.objectNamePrefixList()
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8344
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{}
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8349
		{
		}
	case 1401:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8350
		{
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8353
		{
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8354
		{
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8362
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8365
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8375
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8383
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8385
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8389
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8392
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8405
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeSchedule,
			}
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8413
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8415
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.ResumeSchedule,
			}
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8421
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8434
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.DropSchedule,
			}
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8442
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8444
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.DropSchedule,
			}
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8450
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8458
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8461
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8465
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8466
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8467
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8483
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8486
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8488
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8491
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8501
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8504
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8506
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8509
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8513
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1437:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8518
		{
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8519
		{
		}
	case 1439:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8520
		{
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8530
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8534
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8537
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8540
		{
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8541
		{
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8545
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8549
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8555
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8559
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8565
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8569
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8582
		{
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8584
		{
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8588
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8593
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8597
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8601
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8605
		{
			sqlVAL.union.val = tree.TransactionModes{Deferrable: sqlDollar[1].union.deferrableMode()}
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8611
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8617
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1460:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8623
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8627
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1462:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8633
		{
			sqlVAL.union.val = tree.Deferrable
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8637
		{
			sqlVAL.union.val = tree.NotDeferrable
		}
	case 1464:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:8647
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:            tree.Name(sqlDollar[3].str),
				Template:        sqlDollar[5].str,
				Encoding:        sqlDollar[6].str,
				Collate:         sqlDollar[7].str,
				CType:           sqlDollar[8].str,
				ConnectionLimit: sqlDollar[9].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[10].str),
				Regions:         sqlDollar[11].union.nameList(),
				SurvivalGoal:    sqlDollar[12].union.survivalGoal(),
				Placement:       sqlDollar[13].union.dataPlacement(),
			}
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:8662
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists:     true,
				Name:            tree.Name(sqlDollar[6].str),
				Template:        sqlDollar[8].str,
				Encoding:        sqlDollar[9].str,
				Collate:         sqlDollar[10].str,
				CType:           sqlDollar[11].str,
				ConnectionLimit: sqlDollar[12].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[13].str),
				Regions:         sqlDollar[14].union.nameList(),
				SurvivalGoal:    sqlDollar[15].union.survivalGoal(),
				Placement:       sqlDollar[16].union.dataPlacement(),
			}
		}
	case 1466:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8677
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1468:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8682
		{
			sqlVAL.str = ""
		}
	case 1469:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8687
		{
			sqlVAL.str = sqlDollar[4].str
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8694
		{
			sqlVAL.union.val = tree.DataPlacementUnspecified
		}
	case 1472:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8700
		{

			sqlVAL.union.val = tree.DataPlacementRestricted
		}
	case 1473:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8705
		{

			sqlVAL.union.val = tree.DataPlacementDefault
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8712
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8716
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8722
		{

		}
	case 1478:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8729
		{
			sqlVAL.union.val = tree.SurvivalGoalRegionFailure
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8733
		{
			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8737
		{

			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8746
		{
			sqlVAL.union.val = tree.SurvivalGoalDefault
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8752
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8756
		{
			sqlVAL.str = ""
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8762
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8766
		{
			sqlVAL.str = ""
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8772
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8776
		{
			sqlVAL.str = ""
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8782
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8786
		{
			sqlVAL.str = ""
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8792
		{
			ret, err := sqlDollar[4].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = ret
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8800
		{
			sqlVAL.union.val = int32(-1)
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8805
		{
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8806
		{
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8821
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8828
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1497:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8835
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8846
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8853
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8857
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8866
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8871
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8877
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8881
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8885
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8891
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8895
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8915
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8919
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:   tree.NameList(nil),
				DoNothing: true,
			}
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8926
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				DoNothing:        true,
			}
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8934
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				Exprs:            sqlDollar[10].union.updateExprs(),
				Where:            tree.NewWhere(tree.AstWhere, sqlDollar[11].union.expr()),
			}
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8942
		{
			return unimplementedWithIssue(sqllex, 28161)
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8946
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8951
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8955
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8972
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8984
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1519:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8987
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8990
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1521:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8996
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1522:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9000
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1525:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9013
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9016
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9020
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9031
		{
			sqlVAL.union.val = &tree.ReassignOwnedBy{
				OldRoles: sqlDollar[4].union.nameList(),
				NewRole:  sqlDollar[6].union.user(),
			}
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9037
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9046
		{
			sqlVAL.union.val = &tree.DropOwnedBy{
				Roles:        sqlDollar[4].union.nameList(),
				DropBehavior: sqlDollar[5].union.dropBehavior(),
			}
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9052
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9093
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1534:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9099
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1535:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9103
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9118
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9122
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9126
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9130
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9134
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9138
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9142
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9146
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9151
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9152
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9155
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9156
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9160
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9164
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9170
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9179
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9180
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9181
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9182
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9185
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9186
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9189
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9190
		{
			sqlVAL.union.val = tree.LockWaitSkip
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9191
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9196
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9231
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9232
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9233
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9255
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9268
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1572:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9282
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1573:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9294
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1574:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9298
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1575:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9307
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9316
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9331
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9338
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9350
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9354
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9359
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9365
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9369
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9375
		{
			sqlVAL.union.val = true
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9379
		{
			sqlVAL.union.val = false
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9385
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9395
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9407
		{
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9408
		{
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9412
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9416
		{
			sqlVAL.union.val = nil
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9421
		{
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9422
		{
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9426
		{
			sqlVAL.union.val = true
		}
	case 1595:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9430
		{
			sqlVAL.union.val = false
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9434
		{
			sqlVAL.union.val = false
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9440
		{
			sqlVAL.union.val = true
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9446
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9451
		{
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9452
		{
		}
	case 1601:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9455
		{
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9456
		{
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9460
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9464
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1605:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9470
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9476
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9480
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9487
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9491
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9497
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9518
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9523
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9535
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9539
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9543
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9549
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1617:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9558
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1620:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9569
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9570
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9574
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9578
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9582
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9596
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9600
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9608
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1629:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9615
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1633:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9637
		{
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9638
		{
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9641
		{
		}
	case 1636:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9642
		{
		}
	case 1637:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9659
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9663
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9668
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9669
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1641:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9675
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1642:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9676
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "rollup")
		}
	case 1643:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9677
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "cube")
		}
	case 1644:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9678
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "grouping sets")
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9682
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1646:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9686
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9705
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1648:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9708
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1649:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9710
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1650:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9722
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9725
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1652:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9727
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9733
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9737
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1655:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9743
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1656:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9747
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1657:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9752
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1658:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9757
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9763
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9768
		{
			sqlVAL.union.val = &tree.IndexFlags{NoZigzagJoin: true}
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9773
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9779
		{
			sqlVAL.union.val = &tree.IndexFlags{ForceZigzag: true}
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9784
		{
			sqlVAL.union.val = &tree.IndexFlags{ZigzagIndexes: []tree.UnrestrictedName{tree.UnrestrictedName(sqlDollar[3].str)}}
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9789
		{

			sqlVAL.union.val = &tree.IndexFlags{ZigzagIndexIDs: []tree.IndexID{tree.IndexID(sqlDollar[4].union.int64())}}
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9796
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9801
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9812
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9816
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9820
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9828
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9861
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9871
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9881
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1674:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9889
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9898
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9902
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9906
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9917
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9941
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9947
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9958
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9962
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9968
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9970
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9974
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9980
		{
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9982
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9985
		{
			sqlVAL.union.val = nil
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9986
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9987
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9991
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9995
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10001
		{
			sqlVAL.union.val = true
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10005
		{
			sqlVAL.union.val = false
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10025
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10029
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10033
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10037
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10041
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 1700:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10045
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1701:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10051
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 1702:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10055
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 1704:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10062
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 1705:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10068
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 1707:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10075
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 1708:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10081
		{
			sqlVAL.str = tree.AstFull
		}
	case 1709:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10085
		{
			sqlVAL.str = tree.AstLeft
		}
	case 1710:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10089
		{
			sqlVAL.str = tree.AstRight
		}
	case 1711:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10093
		{
			sqlVAL.str = tree.AstInner
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10099
		{
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10100
		{
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10124
		{
			sqlVAL.str = tree.AstHash
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10128
		{
			sqlVAL.str = tree.AstMerge
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10132
		{
			sqlVAL.str = tree.AstLookup
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10136
		{
			sqlVAL.str = tree.AstInverted
		}
	case 1718:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10140
		{
			sqlVAL.str = ""
		}
	case 1719:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10153
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 1720:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10157
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 1721:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10162
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1722:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10163
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1723:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10164
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 1724:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10165
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 1725:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10169
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 1726:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10174
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 1727:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10188
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1728:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10192
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 1729:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10198
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 1730:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10204
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1731:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10214
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[3].union.indexFlags(),
			}
		}
	case 1732:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10224
		{
			sqlVAL.union.val = true
		}
	case 1733:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10228
		{
			sqlVAL.union.val = false
		}
	case 1734:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10234
		{
			sqlVAL.union.val = true
		}
	case 1735:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10238
		{
			sqlVAL.union.val = false
		}
	case 1736:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10244
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1738:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10251
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1739:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10263
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 1740:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10276
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1741:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10284
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1742:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10285
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1743:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10295
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1744:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10302
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 1745:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10303
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1746:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10305
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 1747:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10313
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1748:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10314
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 1750:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10326
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1751:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10333
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1752:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10342
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.MakeQChar(0)
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 1753:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10382
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.OIDTypeReference{OID: oid.Oid(id)}
		}
	case 1754:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10387
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1759:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10394
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 1760:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10395
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 1761:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10398
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 1762:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10399
		{
			sqlVAL.union.val = geopb.ShapeType_PointM
		}
	case 1763:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10400
		{
			sqlVAL.union.val = geopb.ShapeType_PointZ
		}
	case 1764:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10401
		{
			sqlVAL.union.val = geopb.ShapeType_PointZM
		}
	case 1765:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10402
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 1766:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10403
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringM
		}
	case 1767:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10404
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZ
		}
	case 1768:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10405
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZM
		}
	case 1769:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10406
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 1770:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10407
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonM
		}
	case 1771:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10408
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZ
		}
	case 1772:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10409
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZM
		}
	case 1773:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10410
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 1774:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10411
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointM
		}
	case 1775:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10412
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZ
		}
	case 1776:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10413
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZM
		}
	case 1777:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10414
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 1778:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10415
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringM
		}
	case 1779:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10416
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZ
		}
	case 1780:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10417
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZM
		}
	case 1781:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10418
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 1782:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10419
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonM
		}
	case 1783:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10420
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZ
		}
	case 1784:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10421
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZM
		}
	case 1785:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10422
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 1786:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10423
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionM
		}
	case 1787:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10424
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZ
		}
	case 1788:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10425
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZM
		}
	case 1789:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10426
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 1790:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10427
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryM
		}
	case 1791:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10428
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZ
		}
	case 1792:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10429
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZM
		}
	case 1793:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10432
		{
			sqlVAL.union.val = types.Geography
		}
	case 1794:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10433
		{
			sqlVAL.union.val = types.Geometry
		}
	case 1795:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10434
		{
			sqlVAL.union.val = types.Box2D
		}
	case 1796:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10436
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1797:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10440
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1798:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10444
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1799:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10452
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1805:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10478
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1806:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10486
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1807:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10494
		{
			sqlVAL.union.val = nil
		}
	case 1808:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10501
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1809:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10505
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1810:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10509
		{
			sqlVAL.union.val = types.Int2
		}
	case 1811:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10513
		{
			sqlVAL.union.val = types.Int
		}
	case 1812:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10517
		{
			sqlVAL.union.val = types.Float4
		}
	case 1813:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10521
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 1814:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10525
		{
			sqlVAL.union.val = types.Float
		}
	case 1815:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10529
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1816:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10537
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1817:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10545
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1818:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10553
		{
			sqlVAL.union.val = types.Bool
		}
	case 1819:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10559
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 1820:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10572
		{
			sqlVAL.union.val = types.Float
		}
	case 1821:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10578
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1822:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10584
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1823:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10592
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 1824:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10596
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1825:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10600
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1826:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10606
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 1827:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10618
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1828:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10624
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 1829:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10628
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1830:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10632
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1831:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10636
		{
			sqlVAL.union.val = types.String
		}
	case 1834:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10645
		{
			sqlVAL.union.val = true
		}
	case 1835:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10646
		{
			sqlVAL.union.val = false
		}
	case 1836:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10651
		{
			sqlVAL.union.val = types.Date
		}
	case 1837:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10655
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 1838:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10663
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 1839:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10675
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 1840:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10677
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 1841:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10686
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 1842:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10694
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 1843:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10707
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 1844:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10711
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 1845:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10721
		{
			sqlVAL.union.val = true
		}
	case 1846:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10722
		{
			sqlVAL.union.val = false
		}
	case 1847:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10723
		{
			sqlVAL.union.val = false
		}
	case 1848:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10727
		{
			sqlVAL.union.val = types.Interval
		}
	case 1849:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10731
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 1850:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10735
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 1851:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10746
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 1852:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10754
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1853:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10762
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 1854:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10770
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1855:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10778
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1856:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10786
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 1857:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10792
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1858:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10801
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1859:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10810
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1860:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10819
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 1861:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10825
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1862:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10834
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 1863:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10840
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 1865:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10850
		{
			sqlVAL.union.val = nil
		}
	case 1866:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10856
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 1867:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10864
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 1869:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10901
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1870:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10905
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1871:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10909
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 1872:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10913
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 1873:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10924
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1874:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10929
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1875:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10933
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 1876:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10937
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnarySqrt), Expr: sqlDollar[2].union.expr()}
		}
	case 1877:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10941
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryCbrt), Expr: sqlDollar[2].union.expr()}
		}
	case 1878:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10945
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1879:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10949
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1880:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10953
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1881:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10957
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1882:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10961
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1883:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10965
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1884:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10969
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1885:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10973
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1886:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10977
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1887:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10981
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1888:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10985
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1889:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10989
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1890:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10993
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.JSONExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1891:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10997
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.JSONSomeExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1892:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11001
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.JSONAllExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1893:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11005
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.Contains), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1894:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11009
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.ContainedBy), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1895:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11013
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1896:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11017
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1897:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11021
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1898:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11025
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1899:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11029
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchVal), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1900:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11033
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchText), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1901:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11037
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchValPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1902:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11041
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchTextPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1903:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11045
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1904:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11049
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1905:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11053
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.Overlaps), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1906:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11057
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1907:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11061
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1908:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11065
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1909:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11069
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1910:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11073
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 1911:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11081
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 1912:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11091
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1913:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11095
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1914:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11099
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1915:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11103
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1916:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11107
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.Like), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1917:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11111
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1918:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11115
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotLike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1919:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11119
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1920:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11123
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.ILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1921:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11127
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1922:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11131
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1923:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11135
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1924:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11139
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.SimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1925:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11143
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1926:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11147
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotSimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1927:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11151
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 1928:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11155
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.RegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1929:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11159
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotRegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1930:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11163
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.RegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1931:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11167
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotRegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1932:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11171
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.EQ), Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1933:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11175
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NE), Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1934:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11179
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1935:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11183
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1936:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11187
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1937:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11191
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1938:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11194
		{
			return unimplemented(sqllex, "overlaps")
		}
	case 1939:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11196
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1940:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11200
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1941:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11204
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1942:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11208
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1943:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11212
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1944:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11216
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1945:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11220
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1946:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11224
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1947:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11228
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1948:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11232
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1949:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11236
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1950:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11240
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1951:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11244
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1952:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11248
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1953:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11252
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.In), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1954:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11256
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotIn), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1955:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11260
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(tree.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 1956:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11277
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1957:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11282
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 1959:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11294
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1960:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11298
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1961:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11302
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1962:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11306
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1963:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11310
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 1964:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11314
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1965:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11318
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1966:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11322
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1967:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11326
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1968:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11330
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1969:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11334
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1970:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11338
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1971:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11342
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1972:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11346
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1973:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11350
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1974:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11354
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1975:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11358
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1976:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11362
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1977:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11366
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1978:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11370
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1979:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11374
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1980:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11378
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1981:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11382
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1982:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11386
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1983:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11390
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 1984:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11398
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 1985:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11408
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1986:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11412
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1987:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11416
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1988:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11420
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1990:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11434
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 1992:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11442
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 1993:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11478
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1994:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11482
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1995:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11486
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 1996:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11490
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 1997:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11494
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1998:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11499
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 1999:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11501
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2000:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11505
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2001:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11509
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 2002:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11513
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 2003:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11517
		{
			sqlVAL.union.val = tree.DNull
		}
	case 2004:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11521
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 2005:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11525
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 2006:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11534
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 2007:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11541
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 2008:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11545
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: tree.Name(sqlDollar[5].str)}
		}
	case 2009:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11549
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil || idx <= 0 {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 2010:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11555
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 2012:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11560
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2013:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11564
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2014:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11568
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 2015:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11572
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 2016:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11576
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2017:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11579
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 2018:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11583
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 2019:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11587
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 2020:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11590
		{
			return unimplemented(sqllex, "variadic")
		}
	case 2021:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11591
		{
			return unimplemented(sqllex, "variadic")
		}
	case 2022:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11593
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 2023:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11599
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 2024:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11603
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 2025:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11606
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 2026:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11615
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.MakeQChar(0), SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var err error
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							typ, err = name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 2027:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11668
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 2028:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11681
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 2029:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11693
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2030:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11702
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2031:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11703
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2032:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11708
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 2033:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11712
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2034:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11716
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2035:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11722
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 2036:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11726
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2037:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11730
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2038:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11734
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2039:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11738
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2040:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11742
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2041:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11748
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2042:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11752
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("session_user")}
		}
	case 2043:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11756
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2044:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11760
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 2045:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11764
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 2046:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11768
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 2047:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11772
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 2048:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11776
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 2049:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11780
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 2050:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11784
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 2051:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11788
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 2052:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11792
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2053:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11796
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 2055:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11803
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2056:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11806
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2057:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11808
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2058:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11811
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2059:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11813
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2060:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11817
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2061:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11820
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2062:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11822
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2063:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11826
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2064:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11829
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2065:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11831
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2066:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11835
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2067:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11838
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2068:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11840
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2069:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11844
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2070:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11847
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2071:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11849
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2072:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11852
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2073:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11854
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2074:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11857
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2075:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11859
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2076:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11862
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2077:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11864
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2078:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11867
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2079:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11869
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2080:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11872
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2081:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11874
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2082:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11878
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2083:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11881
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2084:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11882
		{
			return unimplemented(sqllex, "treat")
		}
	case 2085:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11884
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2086:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11888
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2087:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11892
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2088:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11896
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2089:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11900
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2090:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11903
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2091:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11905
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2092:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11908
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2093:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11914
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 2094:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11918
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 2095:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11924
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 2096:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11928
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2097:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11935
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 2098:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11939
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 2099:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11945
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 2100:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11949
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 2101:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11955
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 2102:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11963
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 2103:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11967
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 2104:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11971
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 2105:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11978
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 2107:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11998
		{
			sqlVAL.str = ""
		}
	case 2108:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12004
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 2109:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12008
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2110:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12014
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2111:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12022
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2112:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12030
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2113:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12038
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 2114:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12044
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == tree.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 2115:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12057
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == tree.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == tree.CurrentRow && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 2116:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12085
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedPreceding}
		}
	case 2117:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12089
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedFollowing}
		}
	case 2118:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12093
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.CurrentRow}
		}
	case 2119:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12097
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetPreceding,
			}
		}
	case 2120:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12104
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetFollowing,
			}
		}
	case 2121:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12113
		{
			sqlVAL.union.val = tree.ExcludeCurrentRow
		}
	case 2122:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12117
		{
			sqlVAL.union.val = tree.ExcludeGroup
		}
	case 2123:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12121
		{
			sqlVAL.union.val = tree.ExcludeTies
		}
	case 2124:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12125
		{

			sqlVAL.union.val = tree.NoExclusion
		}
	case 2125:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12130
		{
			sqlVAL.union.val = tree.NoExclusion
		}
	case 2126:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12143
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 2127:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12147
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2129:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12154
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 2130:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12166
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Any)
		}
	case 2131:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12170
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Some)
		}
	case 2132:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12174
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.All)
		}
	case 2133:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12190
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Plus)
		}
	case 2134:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12191
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Minus)
		}
	case 2135:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12192
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Mult)
		}
	case 2136:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12193
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Div)
		}
	case 2137:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12194
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Mod)
		}
	case 2138:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12195
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Pow)
		}
	case 2139:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12196
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.LT)
		}
	case 2140:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12197
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.GT)
		}
	case 2141:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12198
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.EQ)
		}
	case 2142:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12199
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.LE)
		}
	case 2143:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12200
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.GE)
		}
	case 2144:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12201
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NE)
		}
	case 2145:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12203
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.JSONExists)
		}
	case 2146:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12204
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Bitand)
		}
	case 2147:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12205
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Bitor)
		}
	case 2148:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12206
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Bitxor)
		}
	case 2149:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12207
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.FloorDiv)
		}
	case 2150:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12208
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Contains)
		}
	case 2151:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12209
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.ContainedBy)
		}
	case 2152:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12210
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.LShift)
		}
	case 2153:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12211
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.RShift)
		}
	case 2154:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12212
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Concat)
		}
	case 2155:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12213
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchVal)
		}
	case 2156:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12214
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchText)
		}
	case 2157:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12215
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchValPath)
		}
	case 2158:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12216
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchTextPath)
		}
	case 2159:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12217
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.JSONSomeExists)
		}
	case 2160:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12218
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.JSONAllExists)
		}
	case 2161:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12219
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotRegMatch)
		}
	case 2162:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12220
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.RegIMatch)
		}
	case 2163:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12221
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotRegIMatch)
		}
	case 2164:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12222
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Overlaps)
		}
	case 2165:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12223
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryComplement)
		}
	case 2166:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12224
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnarySqrt)
		}
	case 2167:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12225
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryCbrt)
		}
	case 2169:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12230
		{

			if sqlDollar[1].str != "pg_catalog" {
				return unimplementedWithIssue(sqllex, 65017)
			}
			sqlVAL.union = sqlDollar[3].union
		}
	case 2170:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12246
		{
			sqlVAL.union = sqlDollar[3].union
		}
	case 2173:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12253
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Like)
		}
	case 2174:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12254
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotLike)
		}
	case 2175:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12255
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.ILike)
		}
	case 2176:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12256
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotILike)
		}
	case 2177:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12279
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2178:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12283
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2179:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12289
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2180:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12293
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2181:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12297
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2182:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12308
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2183:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12312
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2184:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12318
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2185:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12322
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2187:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12329
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2188:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12335
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2189:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12339
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2190:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12345
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 2191:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12349
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 2192:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12355
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2193:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12359
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2194:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12365
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2195:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12369
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2196:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12375
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(strings.ToLower(sqlDollar[1].str)), sqlDollar[3].union.expr()}
		}
	case 2197:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12379
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2206:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12402
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 2207:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12406
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2208:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12410
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2209:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12416
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2210:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12423
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 2211:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12427
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2212:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12444
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2213:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12448
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2214:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12452
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2215:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12456
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 2216:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12460
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2217:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12466
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2218:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12472
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2219:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12478
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 2220:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12482
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 2221:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12486
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2222:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12492
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2224:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12504
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 2225:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12511
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 2226:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12515
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 2227:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12521
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 2228:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12527
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2229:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12531
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2231:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12538
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2232:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12544
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 2233:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12548
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 2235:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12555
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2236:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12561
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 2237:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12565
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 2238:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12570
		{
		}
	case 2239:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12571
		{
		}
	case 2240:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12575
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 2241:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12579
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 2242:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12585
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 2243:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12594
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 2244:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12598
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2245:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12602
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 2246:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12610
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 2247:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12614
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 2248:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12620
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 2249:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12624
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 2250:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12643
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 2251:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12651
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 2252:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12674
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2254:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12683
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2255:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12687
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2256:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12691
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2257:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12695
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 2258:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12701
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 2259:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12705
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 2264:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12720
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2265:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12724
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2268:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12736
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2269:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12740
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2270:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12749
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2271:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12760
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2272:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12769
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2273:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12777
		{
			var t *types.T
			if sqlDollar[3].union.val == nil {
				t = types.Interval
			} else {
				t = types.MakeInterval(sqlDollar[3].union.intervalTypeMetadata())
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[2].str),
				Type: t,

				SyntaxMode: tree.CastShort,
			}
		}
	case 2274:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12794
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[5].str),
				Type: types.MakeInterval(
					types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true},
				),

				SyntaxMode: tree.CastShort,
			}
		}
	case 2293:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12879
		{
			sqlVAL.union.val = sqlDollar[1].union.nameList()
		}
	case 2295:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12887
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{SchemaName: tree.Name(sqlDollar[1].str), ExplicitSchema: true}
		}
	case 2296:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12891
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{CatalogName: tree.Name(sqlDollar[1].str), SchemaName: tree.Name(sqlDollar[3].str), ExplicitCatalog: true, ExplicitSchema: true}
		}
	case 2297:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12897
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{sqlDollar[1].union.objectNamePrefix()}
		}
	case 2298:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12901
		{
			sqlVAL.union.val = append(sqlDollar[1].union.objectNamePrefixList(), sqlDollar[3].union.objectNamePrefix())
		}
	case 2300:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12909
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{ExplicitSchema: false}
		}
	case 2306:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12936
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2308:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12943
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2309:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12947
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2310:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12951
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2312:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12965
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2313:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12969
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2314:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12973
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2315:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12986
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2317:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12995
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2321:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13013
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2322:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13026
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2323:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13033
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2331:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13058
		{
			sqlVAL.str = ""
		}
	case 2332:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13064
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 2333:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13068
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
