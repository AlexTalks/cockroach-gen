// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/roachpb"
	"github.com/cockroachdb/cockroach/pkg/sql/lex"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
	"github.com/lib/pq/oid"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}
func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

//line sql-gen.y:73

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) functionReference() tree.FunctionReference {
	return u.val.(tree.FunctionReference)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistence() tree.Persistence {
	return u.val.(tree.Persistence)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) targetList() tree.TargetList {
	return u.val.(tree.TargetList)
}
func (u *sqlSymUnion) targetListPtr() *tree.TargetList {
	return u.val.(*tree.TargetList)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() tree.WindowFrameExclusion {
	return u.val.(tree.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) interleave() *tree.InterleaveDef {
	return u.val.(*tree.InterleaveDef)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() tree.ComparisonOperator {
	return u.val.(tree.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) copyOptions() *tree.CopyOptions {
	return u.val.(*tree.CopyOptions)
}
func (u *sqlSymUnion) restoreOptions() *tree.RestoreOptions {
	return u.val.(*tree.RestoreOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) stringOrPlaceholderOptList() tree.StringOrPlaceholderOptList {
	return u.val.(tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) listOfStringOrPlaceholderOptList() []tree.StringOrPlaceholderOptList {
	return u.val.([]tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) fullBackupClause() *tree.FullBackupClause {
	return u.val.(*tree.FullBackupClause)
}
func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}
func (u *sqlSymUnion) scheduleState() tree.ScheduleState {
	return u.val.(tree.ScheduleState)
}
func (u *sqlSymUnion) executorType() tree.ScheduledJobExecutorType {
	return u.val.(tree.ScheduledJobExecutorType)
}
func (u *sqlSymUnion) refreshDataOption() tree.RefreshDataOption {
	return u.val.(tree.RefreshDataOption)
}

//line sql-gen.y:680
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lex.IDENT
const SCONST = lex.SCONST
const BCONST = lex.BCONST
const BITCONST = lex.BITCONST
const ICONST = lex.ICONST
const FCONST = lex.FCONST
const PLACEHOLDER = lex.PLACEHOLDER
const TYPECAST = lex.TYPECAST
const TYPEANNOTATE = lex.TYPEANNOTATE
const DOT_DOT = lex.DOT_DOT
const LESS_EQUALS = lex.LESS_EQUALS
const GREATER_EQUALS = lex.GREATER_EQUALS
const NOT_EQUALS = lex.NOT_EQUALS
const NOT_REGMATCH = lex.NOT_REGMATCH
const REGIMATCH = lex.REGIMATCH
const NOT_REGIMATCH = lex.NOT_REGIMATCH
const ERROR = lex.ERROR
const ABORT = lex.ABORT
const ACTION = lex.ACTION
const ADD = lex.ADD
const ADMIN = lex.ADMIN
const AFTER = lex.AFTER
const AGGREGATE = lex.AGGREGATE
const ALL = lex.ALL
const ALTER = lex.ALTER
const ALWAYS = lex.ALWAYS
const ANALYSE = lex.ANALYSE
const ANALYZE = lex.ANALYZE
const AND = lex.AND
const AND_AND = lex.AND_AND
const ANY = lex.ANY
const ANNOTATE_TYPE = lex.ANNOTATE_TYPE
const ARRAY = lex.ARRAY
const AS = lex.AS
const ASC = lex.ASC
const ASYMMETRIC = lex.ASYMMETRIC
const AT = lex.AT
const ATTRIBUTE = lex.ATTRIBUTE
const AUTHORIZATION = lex.AUTHORIZATION
const AUTOMATIC = lex.AUTOMATIC
const BACKUP = lex.BACKUP
const BACKUPS = lex.BACKUPS
const BEFORE = lex.BEFORE
const BEGIN = lex.BEGIN
const BETWEEN = lex.BETWEEN
const BIGINT = lex.BIGINT
const BIGSERIAL = lex.BIGSERIAL
const BINARY = lex.BINARY
const BIT = lex.BIT
const BUCKET_COUNT = lex.BUCKET_COUNT
const BOOLEAN = lex.BOOLEAN
const BOTH = lex.BOTH
const BOX2D = lex.BOX2D
const BUNDLE = lex.BUNDLE
const BY = lex.BY
const CACHE = lex.CACHE
const CANCEL = lex.CANCEL
const CANCELQUERY = lex.CANCELQUERY
const CASCADE = lex.CASCADE
const CASE = lex.CASE
const CAST = lex.CAST
const CBRT = lex.CBRT
const CHANGEFEED = lex.CHANGEFEED
const CHAR = lex.CHAR
const CHARACTER = lex.CHARACTER
const CHARACTERISTICS = lex.CHARACTERISTICS
const CHECK = lex.CHECK
const CLOSE = lex.CLOSE
const CLUSTER = lex.CLUSTER
const COALESCE = lex.COALESCE
const COLLATE = lex.COLLATE
const COLLATION = lex.COLLATION
const COLUMN = lex.COLUMN
const COLUMNS = lex.COLUMNS
const COMMENT = lex.COMMENT
const COMMENTS = lex.COMMENTS
const COMMIT = lex.COMMIT
const COMMITTED = lex.COMMITTED
const COMPACT = lex.COMPACT
const COMPLETE = lex.COMPLETE
const CONCAT = lex.CONCAT
const CONCURRENTLY = lex.CONCURRENTLY
const CONFIGURATION = lex.CONFIGURATION
const CONFIGURATIONS = lex.CONFIGURATIONS
const CONFIGURE = lex.CONFIGURE
const CONFLICT = lex.CONFLICT
const CONSTRAINT = lex.CONSTRAINT
const CONSTRAINTS = lex.CONSTRAINTS
const CONTAINS = lex.CONTAINS
const CONTROLCHANGEFEED = lex.CONTROLCHANGEFEED
const CONTROLJOB = lex.CONTROLJOB
const CONVERSION = lex.CONVERSION
const CONVERT = lex.CONVERT
const COPY = lex.COPY
const COVERING = lex.COVERING
const CREATE = lex.CREATE
const CREATEDB = lex.CREATEDB
const CREATELOGIN = lex.CREATELOGIN
const CREATEROLE = lex.CREATEROLE
const CROSS = lex.CROSS
const CUBE = lex.CUBE
const CURRENT = lex.CURRENT
const CURRENT_CATALOG = lex.CURRENT_CATALOG
const CURRENT_DATE = lex.CURRENT_DATE
const CURRENT_SCHEMA = lex.CURRENT_SCHEMA
const CURRENT_ROLE = lex.CURRENT_ROLE
const CURRENT_TIME = lex.CURRENT_TIME
const CURRENT_TIMESTAMP = lex.CURRENT_TIMESTAMP
const CURRENT_USER = lex.CURRENT_USER
const CYCLE = lex.CYCLE
const DATA = lex.DATA
const DATABASE = lex.DATABASE
const DATABASES = lex.DATABASES
const DATE = lex.DATE
const DAY = lex.DAY
const DEC = lex.DEC
const DECIMAL = lex.DECIMAL
const DEFAULT = lex.DEFAULT
const DEFAULTS = lex.DEFAULTS
const DEALLOCATE = lex.DEALLOCATE
const DECLARE = lex.DECLARE
const DEFERRABLE = lex.DEFERRABLE
const DEFERRED = lex.DEFERRED
const DELETE = lex.DELETE
const DESC = lex.DESC
const DESTINATION = lex.DESTINATION
const DETACHED = lex.DETACHED
const DISCARD = lex.DISCARD
const DISTINCT = lex.DISTINCT
const DO = lex.DO
const DOMAIN = lex.DOMAIN
const DOUBLE = lex.DOUBLE
const DROP = lex.DROP
const ELSE = lex.ELSE
const ENCODING = lex.ENCODING
const ENCRYPTION_PASSPHRASE = lex.ENCRYPTION_PASSPHRASE
const END = lex.END
const ENUM = lex.ENUM
const ENUMS = lex.ENUMS
const ESCAPE = lex.ESCAPE
const EXCEPT = lex.EXCEPT
const EXCLUDE = lex.EXCLUDE
const EXCLUDING = lex.EXCLUDING
const EXISTS = lex.EXISTS
const EXECUTE = lex.EXECUTE
const EXECUTION = lex.EXECUTION
const EXPERIMENTAL = lex.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lex.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lex.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lex.EXPERIMENTAL_AUDIT
const EXPIRATION = lex.EXPIRATION
const EXPLAIN = lex.EXPLAIN
const EXPORT = lex.EXPORT
const EXTENSION = lex.EXTENSION
const EXTRACT = lex.EXTRACT
const EXTRACT_DURATION = lex.EXTRACT_DURATION
const FALSE = lex.FALSE
const FAMILY = lex.FAMILY
const FETCH = lex.FETCH
const FETCHVAL = lex.FETCHVAL
const FETCHTEXT = lex.FETCHTEXT
const FETCHVAL_PATH = lex.FETCHVAL_PATH
const FETCHTEXT_PATH = lex.FETCHTEXT_PATH
const FILES = lex.FILES
const FILTER = lex.FILTER
const FIRST = lex.FIRST
const FLOAT = lex.FLOAT
const FLOAT4 = lex.FLOAT4
const FLOAT8 = lex.FLOAT8
const FLOORDIV = lex.FLOORDIV
const FOLLOWING = lex.FOLLOWING
const FOR = lex.FOR
const FORCE_INDEX = lex.FORCE_INDEX
const FOREIGN = lex.FOREIGN
const FROM = lex.FROM
const FULL = lex.FULL
const FUNCTION = lex.FUNCTION
const GENERATED = lex.GENERATED
const GEOGRAPHY = lex.GEOGRAPHY
const GEOMETRY = lex.GEOMETRY
const GEOMETRYCOLLECTION = lex.GEOMETRYCOLLECTION
const GLOBAL = lex.GLOBAL
const GRANT = lex.GRANT
const GRANTS = lex.GRANTS
const GREATEST = lex.GREATEST
const GROUP = lex.GROUP
const GROUPING = lex.GROUPING
const GROUPS = lex.GROUPS
const HAVING = lex.HAVING
const HASH = lex.HASH
const HIGH = lex.HIGH
const HISTOGRAM = lex.HISTOGRAM
const HOUR = lex.HOUR
const IDENTITY = lex.IDENTITY
const IF = lex.IF
const IFERROR = lex.IFERROR
const IFNULL = lex.IFNULL
const IGNORE_FOREIGN_KEYS = lex.IGNORE_FOREIGN_KEYS
const ILIKE = lex.ILIKE
const IMMEDIATE = lex.IMMEDIATE
const IMPORT = lex.IMPORT
const IN = lex.IN
const INCLUDE = lex.INCLUDE
const INCLUDING = lex.INCLUDING
const INCREMENT = lex.INCREMENT
const INCREMENTAL = lex.INCREMENTAL
const INET = lex.INET
const INET_CONTAINED_BY_OR_EQUALS = lex.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lex.INET_CONTAINS_OR_EQUALS
const INDEX = lex.INDEX
const INDEXES = lex.INDEXES
const INJECT = lex.INJECT
const INTERLEAVE = lex.INTERLEAVE
const INITIALLY = lex.INITIALLY
const INNER = lex.INNER
const INSERT = lex.INSERT
const INT = lex.INT
const INTEGER = lex.INTEGER
const INTERSECT = lex.INTERSECT
const INTERVAL = lex.INTERVAL
const INTO = lex.INTO
const INTO_DB = lex.INTO_DB
const INVERTED = lex.INVERTED
const IS = lex.IS
const ISERROR = lex.ISERROR
const ISNULL = lex.ISNULL
const ISOLATION = lex.ISOLATION
const JOB = lex.JOB
const JOBS = lex.JOBS
const JOIN = lex.JOIN
const JSON = lex.JSON
const JSONB = lex.JSONB
const JSON_SOME_EXISTS = lex.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lex.JSON_ALL_EXISTS
const KEY = lex.KEY
const KEYS = lex.KEYS
const KMS = lex.KMS
const KV = lex.KV
const LANGUAGE = lex.LANGUAGE
const LAST = lex.LAST
const LATERAL = lex.LATERAL
const LATEST = lex.LATEST
const LC_CTYPE = lex.LC_CTYPE
const LC_COLLATE = lex.LC_COLLATE
const LEADING = lex.LEADING
const LEASE = lex.LEASE
const LEAST = lex.LEAST
const LEFT = lex.LEFT
const LESS = lex.LESS
const LEVEL = lex.LEVEL
const LIKE = lex.LIKE
const LIMIT = lex.LIMIT
const LINESTRING = lex.LINESTRING
const LIST = lex.LIST
const LOCAL = lex.LOCAL
const LOCALTIME = lex.LOCALTIME
const LOCALTIMESTAMP = lex.LOCALTIMESTAMP
const LOCKED = lex.LOCKED
const LOGIN = lex.LOGIN
const LOOKUP = lex.LOOKUP
const LOW = lex.LOW
const LSHIFT = lex.LSHIFT
const MATCH = lex.MATCH
const MATERIALIZED = lex.MATERIALIZED
const MERGE = lex.MERGE
const MINVALUE = lex.MINVALUE
const MAXVALUE = lex.MAXVALUE
const MINUTE = lex.MINUTE
const MONTH = lex.MONTH
const MULTILINESTRING = lex.MULTILINESTRING
const MULTIPOINT = lex.MULTIPOINT
const MULTIPOLYGON = lex.MULTIPOLYGON
const NAN = lex.NAN
const NAME = lex.NAME
const NAMES = lex.NAMES
const NATURAL = lex.NATURAL
const NEVER = lex.NEVER
const NEXT = lex.NEXT
const NO = lex.NO
const NOCANCELQUERY = lex.NOCANCELQUERY
const NOCONTROLCHANGEFEED = lex.NOCONTROLCHANGEFEED
const NOCONTROLJOB = lex.NOCONTROLJOB
const NOCREATEDB = lex.NOCREATEDB
const NOCREATELOGIN = lex.NOCREATELOGIN
const NOCREATEROLE = lex.NOCREATEROLE
const NOLOGIN = lex.NOLOGIN
const NO_INDEX_JOIN = lex.NO_INDEX_JOIN
const NONE = lex.NONE
const NORMAL = lex.NORMAL
const NOT = lex.NOT
const NOTHING = lex.NOTHING
const NOTNULL = lex.NOTNULL
const NOVIEWACTIVITY = lex.NOVIEWACTIVITY
const NOWAIT = lex.NOWAIT
const NULL = lex.NULL
const NULLIF = lex.NULLIF
const NULLS = lex.NULLS
const NUMERIC = lex.NUMERIC
const OF = lex.OF
const OFF = lex.OFF
const OFFSET = lex.OFFSET
const OID = lex.OID
const OIDS = lex.OIDS
const OIDVECTOR = lex.OIDVECTOR
const ON = lex.ON
const ONLY = lex.ONLY
const OPT = lex.OPT
const OPTION = lex.OPTION
const OPTIONS = lex.OPTIONS
const OR = lex.OR
const ORDER = lex.ORDER
const ORDINALITY = lex.ORDINALITY
const OTHERS = lex.OTHERS
const OUT = lex.OUT
const OUTER = lex.OUTER
const OVER = lex.OVER
const OVERLAPS = lex.OVERLAPS
const OVERLAY = lex.OVERLAY
const OWNED = lex.OWNED
const OWNER = lex.OWNER
const OPERATOR = lex.OPERATOR
const PARENT = lex.PARENT
const PARTIAL = lex.PARTIAL
const PARTITION = lex.PARTITION
const PARTITIONS = lex.PARTITIONS
const PASSWORD = lex.PASSWORD
const PAUSE = lex.PAUSE
const PAUSED = lex.PAUSED
const PHYSICAL = lex.PHYSICAL
const PLACING = lex.PLACING
const PLAN = lex.PLAN
const PLANS = lex.PLANS
const POINT = lex.POINT
const POLYGON = lex.POLYGON
const POSITION = lex.POSITION
const PRECEDING = lex.PRECEDING
const PRECISION = lex.PRECISION
const PREPARE = lex.PREPARE
const PRESERVE = lex.PRESERVE
const PRIMARY = lex.PRIMARY
const PRIORITY = lex.PRIORITY
const PROCEDURAL = lex.PROCEDURAL
const PUBLIC = lex.PUBLIC
const PUBLICATION = lex.PUBLICATION
const QUERIES = lex.QUERIES
const QUERY = lex.QUERY
const RANGE = lex.RANGE
const RANGES = lex.RANGES
const READ = lex.READ
const REAL = lex.REAL
const RECURSIVE = lex.RECURSIVE
const RECURRING = lex.RECURRING
const REF = lex.REF
const REFERENCES = lex.REFERENCES
const REFRESH = lex.REFRESH
const REGCLASS = lex.REGCLASS
const REGPROC = lex.REGPROC
const REGPROCEDURE = lex.REGPROCEDURE
const REGNAMESPACE = lex.REGNAMESPACE
const REGTYPE = lex.REGTYPE
const REINDEX = lex.REINDEX
const REMOVE_PATH = lex.REMOVE_PATH
const RENAME = lex.RENAME
const REPEATABLE = lex.REPEATABLE
const REPLACE = lex.REPLACE
const RELEASE = lex.RELEASE
const RESET = lex.RESET
const RESTORE = lex.RESTORE
const RESTRICT = lex.RESTRICT
const RESUME = lex.RESUME
const RETURNING = lex.RETURNING
const RETRY = lex.RETRY
const REVISION_HISTORY = lex.REVISION_HISTORY
const REVOKE = lex.REVOKE
const RIGHT = lex.RIGHT
const ROLE = lex.ROLE
const ROLES = lex.ROLES
const ROLLBACK = lex.ROLLBACK
const ROLLUP = lex.ROLLUP
const ROW = lex.ROW
const ROWS = lex.ROWS
const RSHIFT = lex.RSHIFT
const RULE = lex.RULE
const RUNNING = lex.RUNNING
const SAVEPOINT = lex.SAVEPOINT
const SCATTER = lex.SCATTER
const SCHEDULE = lex.SCHEDULE
const SCHEDULES = lex.SCHEDULES
const SCHEMA = lex.SCHEMA
const SCHEMAS = lex.SCHEMAS
const SCRUB = lex.SCRUB
const SEARCH = lex.SEARCH
const SECOND = lex.SECOND
const SELECT = lex.SELECT
const SEQUENCE = lex.SEQUENCE
const SEQUENCES = lex.SEQUENCES
const SERIALIZABLE = lex.SERIALIZABLE
const SERVER = lex.SERVER
const SESSION = lex.SESSION
const SESSIONS = lex.SESSIONS
const SESSION_USER = lex.SESSION_USER
const SET = lex.SET
const SETTING = lex.SETTING
const SETTINGS = lex.SETTINGS
const SHARE = lex.SHARE
const SHOW = lex.SHOW
const SIMILAR = lex.SIMILAR
const SIMPLE = lex.SIMPLE
const SKIP = lex.SKIP
const SKIP_MISSING_FOREIGN_KEYS = lex.SKIP_MISSING_FOREIGN_KEYS
const SKIP_MISSING_SEQUENCES = lex.SKIP_MISSING_SEQUENCES
const SKIP_MISSING_SEQUENCE_OWNERS = lex.SKIP_MISSING_SEQUENCE_OWNERS
const SKIP_MISSING_VIEWS = lex.SKIP_MISSING_VIEWS
const SMALLINT = lex.SMALLINT
const SMALLSERIAL = lex.SMALLSERIAL
const SNAPSHOT = lex.SNAPSHOT
const SOME = lex.SOME
const SPLIT = lex.SPLIT
const SQL = lex.SQL
const START = lex.START
const STATISTICS = lex.STATISTICS
const STATUS = lex.STATUS
const STDIN = lex.STDIN
const STRICT = lex.STRICT
const STRING = lex.STRING
const STORAGE = lex.STORAGE
const STORE = lex.STORE
const STORED = lex.STORED
const STORING = lex.STORING
const SUBSTRING = lex.SUBSTRING
const SYMMETRIC = lex.SYMMETRIC
const SYNTAX = lex.SYNTAX
const SYSTEM = lex.SYSTEM
const SQRT = lex.SQRT
const SUBSCRIPTION = lex.SUBSCRIPTION
const TABLE = lex.TABLE
const TABLES = lex.TABLES
const TEMP = lex.TEMP
const TEMPLATE = lex.TEMPLATE
const TEMPORARY = lex.TEMPORARY
const TENANT = lex.TENANT
const TESTING_RELOCATE = lex.TESTING_RELOCATE
const EXPERIMENTAL_RELOCATE = lex.EXPERIMENTAL_RELOCATE
const TEXT = lex.TEXT
const THEN = lex.THEN
const TIES = lex.TIES
const TIME = lex.TIME
const TIMETZ = lex.TIMETZ
const TIMESTAMP = lex.TIMESTAMP
const TIMESTAMPTZ = lex.TIMESTAMPTZ
const TO = lex.TO
const THROTTLING = lex.THROTTLING
const TRAILING = lex.TRAILING
const TRACE = lex.TRACE
const TRANSACTION = lex.TRANSACTION
const TREAT = lex.TREAT
const TRIGGER = lex.TRIGGER
const TRIM = lex.TRIM
const TRUE = lex.TRUE
const TRUNCATE = lex.TRUNCATE
const TRUSTED = lex.TRUSTED
const TYPE = lex.TYPE
const TRACING = lex.TRACING
const UNBOUNDED = lex.UNBOUNDED
const UNCOMMITTED = lex.UNCOMMITTED
const UNION = lex.UNION
const UNIQUE = lex.UNIQUE
const UNKNOWN = lex.UNKNOWN
const UNLOGGED = lex.UNLOGGED
const UNSPLIT = lex.UNSPLIT
const UPDATE = lex.UPDATE
const UPSERT = lex.UPSERT
const UNTIL = lex.UNTIL
const USE = lex.USE
const USER = lex.USER
const USERS = lex.USERS
const USING = lex.USING
const UUID = lex.UUID
const VALID = lex.VALID
const VALIDATE = lex.VALIDATE
const VALUE = lex.VALUE
const VALUES = lex.VALUES
const VARBIT = lex.VARBIT
const VARCHAR = lex.VARCHAR
const VARIADIC = lex.VARIADIC
const VIEW = lex.VIEW
const VARYING = lex.VARYING
const VIEWACTIVITY = lex.VIEWACTIVITY
const VIRTUAL = lex.VIRTUAL
const WHEN = lex.WHEN
const WHERE = lex.WHERE
const WINDOW = lex.WINDOW
const WITH = lex.WITH
const WITHIN = lex.WITHIN
const WITHOUT = lex.WITHOUT
const WORK = lex.WORK
const WRITE = lex.WRITE
const YEAR = lex.YEAR
const ZONE = lex.ZONE
const NOT_LA = lex.NOT_LA
const WITH_LA = lex.WITH_LA
const AS_LA = lex.AS_LA
const GENERATED_ALWAYS = lex.GENERATED_ALWAYS
const CONTAINED_BY = lex.CONTAINED_BY
const POSTFIXOP = lex.POSTFIXOP
const UMINUS = lex.UMINUS
const HELPTOKEN = lex.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASYMMETRIC",
	"AT",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"BACKUP",
	"BACKUPS",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BINARY",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BOX2D",
	"BUNDLE",
	"BY",
	"CACHE",
	"CANCEL",
	"CANCELQUERY",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONTROLCHANGEFEED",
	"CONTROLJOB",
	"CONVERSION",
	"CONVERT",
	"COPY",
	"COVERING",
	"CREATE",
	"CREATEDB",
	"CREATELOGIN",
	"CREATEROLE",
	"CROSS",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DESC",
	"DESTINATION",
	"DETACHED",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ENUMS",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXECUTION",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE_INDEX",
	"FOREIGN",
	"FROM",
	"FULL",
	"FUNCTION",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYCOLLECTION",
	"GLOBAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HIGH",
	"HISTOGRAM",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDING",
	"INCREMENT",
	"INCREMENTAL",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INJECT",
	"INTERLEAVE",
	"INITIALLY",
	"INNER",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INTO_DB",
	"INVERTED",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KMS",
	"KV",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LATEST",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LIST",
	"LOCAL",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"MINUTE",
	"MONTH",
	"MULTILINESTRING",
	"MULTIPOINT",
	"MULTIPOLYGON",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEVER",
	"NEXT",
	"NO",
	"NOCANCELQUERY",
	"NOCONTROLCHANGEFEED",
	"NOCONTROLJOB",
	"NOCREATEDB",
	"NOCREATELOGIN",
	"NOCREATEROLE",
	"NOLOGIN",
	"NO_INDEX_JOIN",
	"NONE",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOVIEWACTIVITY",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PAUSED",
	"PHYSICAL",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POLYGON",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIORITY",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"RECURSIVE",
	"RECURRING",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REGCLASS",
	"REGPROC",
	"REGPROCEDURE",
	"REGNAMESPACE",
	"REGTYPE",
	"REINDEX",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"RELEASE",
	"RESET",
	"RESTORE",
	"RESTRICT",
	"RESUME",
	"RETURNING",
	"RETRY",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"RUNNING",
	"SAVEPOINT",
	"SCATTER",
	"SCHEDULE",
	"SCHEDULES",
	"SCHEMA",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SKIP_MISSING_FOREIGN_KEYS",
	"SKIP_MISSING_SEQUENCES",
	"SKIP_MISSING_SEQUENCE_OWNERS",
	"SKIP_MISSING_VIEWS",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"START",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"TABLE",
	"TABLES",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TENANT",
	"TESTING_RELOCATE",
	"EXPERIMENTAL_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIEWACTIVITY",
	"VIRTUAL",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"'{'",
	"'}'",
	"':'",
}
var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:11746

//line yacctab:1
var sqlExca = [...]int{
	-1, 0,
	1, 31,
	-2, 1326,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 69,
	224, 202,
	454, 202,
	-2, 0,
	-1, 79,
	213, 1131,
	226, 1131,
	242, 340,
	345, 340,
	354, 915,
	386, 340,
	398, 915,
	439, 915,
	464, 340,
	489, 915,
	-2, 0,
	-1, 85,
	242, 344,
	-2, 0,
	-1, 86,
	127, 1326,
	219, 1326,
	474, 1326,
	475, 1326,
	-2, 0,
	-1, 102,
	144, 1297,
	162, 1297,
	175, 1297,
	222, 1297,
	255, 1297,
	304, 1297,
	314, 1297,
	469, 1297,
	-2, 1268,
	-1, 136,
	152, 800,
	241, 800,
	348, 769,
	403, 769,
	457, 800,
	-2, 0,
	-1, 138,
	4, 1328,
	21, 1328,
	22, 1328,
	23, 1328,
	24, 1328,
	25, 1328,
	26, 1328,
	28, 1328,
	29, 1328,
	35, 1328,
	40, 1328,
	41, 1328,
	42, 1328,
	43, 1328,
	44, 1328,
	45, 1328,
	46, 1328,
	47, 1328,
	48, 1328,
	49, 1328,
	51, 1328,
	52, 1328,
	53, 1328,
	54, 1328,
	56, 1328,
	57, 1328,
	58, 1328,
	59, 1328,
	60, 1328,
	61, 1328,
	62, 1328,
	66, 1328,
	67, 1328,
	68, 1328,
	69, 1328,
	71, 1328,
	72, 1328,
	73, 1328,
	77, 1328,
	78, 1328,
	79, 1328,
	80, 1328,
	81, 1328,
	82, 1328,
	83, 1328,
	86, 1328,
	87, 1328,
	88, 1328,
	89, 1328,
	91, 1328,
	93, 1328,
	94, 1328,
	95, 1328,
	96, 1328,
	97, 1328,
	98, 1328,
	100, 1328,
	101, 1328,
	102, 1328,
	104, 1328,
	105, 1328,
	113, 1328,
	114, 1328,
	115, 1328,
	116, 1328,
	118, 1328,
	119, 1328,
	120, 1328,
	122, 1328,
	123, 1328,
	124, 1328,
	126, 1328,
	127, 1328,
	129, 1328,
	130, 1328,
	131, 1328,
	134, 1328,
	135, 1328,
	136, 1328,
	138, 1328,
	139, 1328,
	141, 1328,
	142, 1328,
	143, 1328,
	145, 1328,
	146, 1328,
	147, 1328,
	148, 1328,
	149, 1328,
	150, 1328,
	151, 1328,
	152, 1328,
	153, 1328,
	154, 1328,
	155, 1328,
	156, 1328,
	157, 1328,
	158, 1328,
	159, 1328,
	161, 1328,
	167, 1328,
	168, 1328,
	169, 1328,
	170, 1328,
	174, 1328,
	176, 1328,
	180, 1328,
	181, 1328,
	182, 1328,
	183, 1328,
	184, 1328,
	185, 1328,
	187, 1328,
	188, 1328,
	190, 1328,
	191, 1328,
	193, 1328,
	194, 1328,
	195, 1328,
	196, 1328,
	197, 1328,
	198, 1328,
	199, 1328,
	200, 1328,
	201, 1328,
	203, 1328,
	204, 1328,
	206, 1328,
	207, 1328,
	208, 1328,
	209, 1328,
	213, 1328,
	214, 1328,
	215, 1328,
	216, 1328,
	219, 1328,
	220, 1328,
	221, 1328,
	223, 1328,
	225, 1328,
	226, 1328,
	228, 1328,
	230, 1328,
	231, 1328,
	232, 1328,
	234, 1328,
	238, 1328,
	239, 1328,
	240, 1328,
	241, 1328,
	242, 1328,
	243, 1328,
	245, 1328,
	246, 1328,
	247, 1328,
	249, 1328,
	250, 1328,
	252, 1328,
	253, 1328,
	256, 1328,
	257, 1328,
	258, 1328,
	261, 1328,
	262, 1328,
	263, 1328,
	264, 1328,
	266, 1328,
	267, 1328,
	268, 1328,
	269, 1328,
	270, 1328,
	271, 1328,
	272, 1328,
	273, 1328,
	274, 1328,
	275, 1328,
	276, 1328,
	278, 1328,
	280, 1328,
	281, 1328,
	282, 1328,
	283, 1328,
	284, 1328,
	285, 1328,
	286, 1328,
	287, 1328,
	288, 1328,
	289, 1328,
	290, 1328,
	292, 1328,
	294, 1328,
	296, 1328,
	297, 1328,
	299, 1328,
	300, 1328,
	301, 1328,
	302, 1328,
	303, 1328,
	306, 1328,
	309, 1328,
	310, 1328,
	311, 1328,
	312, 1328,
	315, 1328,
	316, 1328,
	317, 1328,
	319, 1328,
	321, 1328,
	322, 1328,
	323, 1328,
	324, 1328,
	325, 1328,
	326, 1328,
	327, 1328,
	328, 1328,
	329, 1328,
	330, 1328,
	331, 1328,
	332, 1328,
	334, 1328,
	335, 1328,
	336, 1328,
	337, 1328,
	338, 1328,
	339, 1328,
	340, 1328,
	341, 1328,
	342, 1328,
	344, 1328,
	346, 1328,
	347, 1328,
	348, 1328,
	349, 1328,
	350, 1328,
	351, 1328,
	352, 1328,
	353, 1328,
	354, 1328,
	355, 1328,
	356, 1328,
	358, 1328,
	364, 1328,
	366, 1328,
	367, 1328,
	368, 1328,
	369, 1328,
	370, 1328,
	371, 1328,
	372, 1328,
	373, 1328,
	375, 1328,
	376, 1328,
	377, 1328,
	379, 1328,
	380, 1328,
	381, 1328,
	382, 1328,
	383, 1328,
	384, 1328,
	386, 1328,
	387, 1328,
	388, 1328,
	389, 1328,
	390, 1328,
	391, 1328,
	392, 1328,
	393, 1328,
	394, 1328,
	395, 1328,
	396, 1328,
	398, 1328,
	399, 1328,
	400, 1328,
	401, 1328,
	402, 1328,
	403, 1328,
	405, 1328,
	406, 1328,
	407, 1328,
	408, 1328,
	409, 1328,
	411, 1328,
	412, 1328,
	413, 1328,
	414, 1328,
	415, 1328,
	416, 1328,
	417, 1328,
	419, 1328,
	421, 1328,
	422, 1328,
	423, 1328,
	424, 1328,
	425, 1328,
	426, 1328,
	427, 1328,
	428, 1328,
	429, 1328,
	430, 1328,
	431, 1328,
	432, 1328,
	433, 1328,
	435, 1328,
	436, 1328,
	438, 1328,
	440, 1328,
	441, 1328,
	442, 1328,
	443, 1328,
	444, 1328,
	445, 1328,
	446, 1328,
	447, 1328,
	449, 1328,
	450, 1328,
	451, 1328,
	452, 1328,
	453, 1328,
	455, 1328,
	457, 1328,
	458, 1328,
	459, 1328,
	460, 1328,
	461, 1328,
	463, 1328,
	464, 1328,
	465, 1328,
	467, 1328,
	468, 1328,
	471, 1328,
	472, 1328,
	473, 1328,
	474, 1328,
	475, 1328,
	476, 1328,
	477, 1328,
	479, 1328,
	482, 1328,
	483, 1328,
	484, 1328,
	485, 1328,
	486, 1328,
	487, 1328,
	489, 1328,
	490, 1328,
	491, 1328,
	492, 1328,
	497, 1328,
	498, 1328,
	499, 1328,
	500, 1328,
	501, 1328,
	502, 1328,
	-2, 0,
	-1, 139,
	1, 1204,
	230, 1204,
	344, 1204,
	352, 1204,
	505, 1204,
	529, 1204,
	-2, 0,
	-1, 141,
	1, 1204,
	529, 1204,
	-2, 0,
	-1, 142,
	1, 1204,
	529, 1204,
	-2, 0,
	-1, 143,
	1, 1204,
	454, 1204,
	529, 1204,
	-2, 0,
	-1, 172,
	144, 1296,
	162, 1296,
	175, 1296,
	222, 1296,
	255, 1296,
	304, 1296,
	314, 1296,
	469, 1296,
	-2, 1271,
	-1, 210,
	4, 1335,
	5, 1335,
	6, 1335,
	7, 1335,
	8, 1335,
	9, 1335,
	10, 1335,
	21, 1335,
	22, 1335,
	23, 1335,
	24, 1335,
	25, 1335,
	26, 1335,
	28, 1335,
	29, 1335,
	35, 1335,
	36, 1335,
	40, 1335,
	41, 1335,
	42, 1335,
	43, 1335,
	44, 1335,
	45, 1335,
	46, 1335,
	47, 1335,
	48, 1335,
	49, 1335,
	51, 1335,
	52, 1335,
	53, 1335,
	54, 1335,
	56, 1335,
	57, 1335,
	58, 1335,
	59, 1335,
	60, 1335,
	61, 1335,
	62, 1335,
	63, 1335,
	64, 1335,
	65, 1335,
	66, 1335,
	67, 1335,
	68, 1335,
	69, 1335,
	71, 1335,
	72, 1335,
	73, 1335,
	75, 1335,
	77, 1335,
	78, 1335,
	79, 1335,
	80, 1335,
	81, 1335,
	82, 1335,
	83, 1335,
	86, 1335,
	87, 1335,
	88, 1335,
	89, 1335,
	91, 1335,
	93, 1335,
	94, 1335,
	95, 1335,
	96, 1335,
	97, 1335,
	98, 1335,
	100, 1335,
	101, 1335,
	102, 1335,
	103, 1335,
	104, 1335,
	105, 1335,
	106, 1335,
	107, 1335,
	108, 1335,
	109, 1335,
	110, 1335,
	111, 1335,
	112, 1335,
	113, 1335,
	114, 1335,
	115, 1335,
	116, 1335,
	117, 1335,
	118, 1335,
	119, 1335,
	120, 1335,
	121, 1335,
	122, 1335,
	123, 1335,
	124, 1335,
	126, 1335,
	127, 1335,
	129, 1335,
	130, 1335,
	131, 1335,
	134, 1335,
	135, 1335,
	136, 1335,
	138, 1335,
	139, 1335,
	141, 1335,
	142, 1335,
	143, 1335,
	145, 1335,
	146, 1335,
	147, 1335,
	148, 1335,
	149, 1335,
	150, 1335,
	151, 1335,
	152, 1335,
	153, 1335,
	154, 1335,
	155, 1335,
	156, 1335,
	157, 1335,
	158, 1335,
	159, 1335,
	160, 1335,
	161, 1335,
	167, 1335,
	168, 1335,
	169, 1335,
	170, 1335,
	174, 1335,
	176, 1335,
	179, 1335,
	180, 1335,
	181, 1335,
	182, 1335,
	183, 1335,
	184, 1335,
	185, 1335,
	187, 1335,
	188, 1335,
	190, 1335,
	191, 1335,
	193, 1335,
	194, 1335,
	195, 1335,
	196, 1335,
	197, 1335,
	198, 1335,
	199, 1335,
	200, 1335,
	201, 1335,
	202, 1335,
	203, 1335,
	204, 1335,
	206, 1335,
	207, 1335,
	208, 1335,
	209, 1335,
	213, 1335,
	214, 1335,
	215, 1335,
	216, 1335,
	218, 1335,
	219, 1335,
	220, 1335,
	221, 1335,
	223, 1335,
	225, 1335,
	226, 1335,
	227, 1335,
	228, 1335,
	229, 1335,
	230, 1335,
	231, 1335,
	232, 1335,
	233, 1335,
	234, 1335,
	238, 1335,
	239, 1335,
	240, 1335,
	241, 1335,
	242, 1335,
	243, 1335,
	245, 1335,
	246, 1335,
	247, 1335,
	249, 1335,
	250, 1335,
	251, 1335,
	252, 1335,
	253, 1335,
	254, 1335,
	256, 1335,
	257, 1335,
	258, 1335,
	259, 1335,
	260, 1335,
	261, 1335,
	262, 1335,
	263, 1335,
	264, 1335,
	266, 1335,
	267, 1335,
	268, 1335,
	269, 1335,
	270, 1335,
	271, 1335,
	272, 1335,
	273, 1335,
	274, 1335,
	275, 1335,
	276, 1335,
	278, 1335,
	279, 1335,
	280, 1335,
	281, 1335,
	282, 1335,
	283, 1335,
	284, 1335,
	285, 1335,
	286, 1335,
	287, 1335,
	288, 1335,
	289, 1335,
	290, 1335,
	291, 1335,
	292, 1335,
	293, 1335,
	294, 1335,
	295, 1335,
	296, 1335,
	297, 1335,
	298, 1335,
	299, 1335,
	300, 1335,
	301, 1335,
	302, 1335,
	303, 1335,
	306, 1335,
	310, 1335,
	311, 1335,
	312, 1335,
	315, 1335,
	316, 1335,
	317, 1335,
	318, 1335,
	319, 1335,
	320, 1335,
	321, 1335,
	322, 1335,
	323, 1335,
	324, 1335,
	325, 1335,
	326, 1335,
	327, 1335,
	328, 1335,
	329, 1335,
	330, 1335,
	331, 1335,
	332, 1335,
	334, 1335,
	335, 1335,
	336, 1335,
	337, 1335,
	338, 1335,
	339, 1335,
	340, 1335,
	341, 1335,
	342, 1335,
	344, 1335,
	346, 1335,
	347, 1335,
	348, 1335,
	349, 1335,
	350, 1335,
	351, 1335,
	352, 1335,
	353, 1335,
	354, 1335,
	355, 1335,
	356, 1335,
	358, 1335,
	364, 1335,
	366, 1335,
	367, 1335,
	368, 1335,
	369, 1335,
	370, 1335,
	371, 1335,
	372, 1335,
	373, 1335,
	375, 1335,
	376, 1335,
	377, 1335,
	378, 1335,
	379, 1335,
	380, 1335,
	381, 1335,
	382, 1335,
	383, 1335,
	384, 1335,
	386, 1335,
	387, 1335,
	388, 1335,
	389, 1335,
	390, 1335,
	391, 1335,
	392, 1335,
	393, 1335,
	394, 1335,
	395, 1335,
	396, 1335,
	398, 1335,
	399, 1335,
	400, 1335,
	401, 1335,
	402, 1335,
	403, 1335,
	404, 1335,
	405, 1335,
	406, 1335,
	407, 1335,
	408, 1335,
	409, 1335,
	410, 1335,
	411, 1335,
	412, 1335,
	413, 1335,
	414, 1335,
	415, 1335,
	416, 1335,
	417, 1335,
	419, 1335,
	421, 1335,
	422, 1335,
	423, 1335,
	424, 1335,
	425, 1335,
	426, 1335,
	427, 1335,
	428, 1335,
	429, 1335,
	430, 1335,
	431, 1335,
	432, 1335,
	433, 1335,
	435, 1335,
	436, 1335,
	437, 1335,
	438, 1335,
	440, 1335,
	441, 1335,
	442, 1335,
	443, 1335,
	444, 1335,
	445, 1335,
	446, 1335,
	447, 1335,
	449, 1335,
	450, 1335,
	451, 1335,
	452, 1335,
	453, 1335,
	455, 1335,
	457, 1335,
	458, 1335,
	459, 1335,
	460, 1335,
	461, 1335,
	462, 1335,
	463, 1335,
	464, 1335,
	465, 1335,
	467, 1335,
	468, 1335,
	470, 1335,
	471, 1335,
	472, 1335,
	473, 1335,
	474, 1335,
	475, 1335,
	476, 1335,
	477, 1335,
	478, 1335,
	479, 1335,
	482, 1335,
	483, 1335,
	484, 1335,
	485, 1335,
	486, 1335,
	487, 1335,
	489, 1335,
	490, 1335,
	491, 1335,
	492, 1335,
	497, 1335,
	498, 1335,
	499, 1335,
	500, 1335,
	501, 1335,
	502, 1335,
	503, 1335,
	510, 1335,
	517, 1335,
	518, 1335,
	519, 1335,
	526, 1335,
	530, 1335,
	-2, 0,
	-1, 638,
	178, 2045,
	454, 2045,
	509, 2045,
	528, 2045,
	-2, 0,
	-1, 639,
	178, 2137,
	454, 2137,
	509, 2137,
	528, 2137,
	-2, 0,
	-1, 640,
	178, 2033,
	454, 2033,
	509, 2033,
	528, 2033,
	-2, 0,
	-1, 642,
	178, 2242,
	454, 2242,
	509, 2242,
	528, 2242,
	-2, 0,
	-1, 644,
	178, 2276,
	454, 2276,
	509, 2276,
	528, 2276,
	-2, 0,
	-1, 651,
	178, 2152,
	454, 2152,
	509, 2152,
	528, 2152,
	-2, 617,
	-1, 682,
	528, 1983,
	531, 1983,
	-2, 854,
	-1, 683,
	528, 1985,
	531, 1985,
	-2, 855,
	-1, 684,
	528, 1984,
	531, 1984,
	-2, 856,
	-1, 685,
	531, 1918,
	-2, 857,
	-1, 707,
	175, 216,
	-2, 0,
	-1, 729,
	489, 1108,
	-2, 916,
	-1, 769,
	4, 1129,
	21, 1129,
	22, 1129,
	23, 1129,
	24, 1129,
	25, 1129,
	26, 1129,
	28, 1129,
	29, 1129,
	35, 1129,
	40, 1129,
	41, 1129,
	42, 1129,
	43, 1129,
	44, 1129,
	45, 1129,
	46, 1129,
	47, 1129,
	48, 1129,
	49, 1129,
	51, 1129,
	52, 1129,
	53, 1129,
	54, 1129,
	56, 1129,
	57, 1129,
	58, 1129,
	59, 1129,
	60, 1129,
	61, 1129,
	62, 1129,
	66, 1129,
	67, 1129,
	68, 1129,
	69, 1129,
	71, 1129,
	72, 1129,
	73, 1129,
	77, 1129,
	78, 1129,
	79, 1129,
	80, 1129,
	81, 1129,
	82, 1129,
	83, 1129,
	86, 1129,
	87, 1129,
	88, 1129,
	89, 1129,
	91, 1129,
	93, 1129,
	94, 1129,
	95, 1129,
	96, 1129,
	97, 1129,
	98, 1129,
	100, 1129,
	101, 1129,
	102, 1129,
	104, 1129,
	105, 1129,
	113, 1129,
	114, 1129,
	115, 1129,
	116, 1129,
	118, 1129,
	119, 1129,
	120, 1129,
	122, 1129,
	123, 1129,
	124, 1129,
	126, 1129,
	127, 1129,
	129, 1129,
	130, 1129,
	131, 1129,
	134, 1129,
	135, 1129,
	136, 1129,
	138, 1129,
	139, 1129,
	141, 1129,
	142, 1129,
	143, 1129,
	145, 1129,
	146, 1129,
	147, 1129,
	148, 1129,
	149, 1129,
	150, 1129,
	151, 1129,
	152, 1129,
	153, 1129,
	154, 1129,
	155, 1129,
	156, 1129,
	157, 1129,
	158, 1129,
	159, 1129,
	161, 1129,
	167, 1129,
	168, 1129,
	169, 1129,
	170, 1129,
	174, 1129,
	176, 1129,
	180, 1129,
	181, 1129,
	182, 1129,
	183, 1129,
	184, 1129,
	185, 1129,
	187, 1129,
	188, 1129,
	190, 1129,
	191, 1129,
	193, 1129,
	194, 1129,
	195, 1129,
	196, 1129,
	197, 1129,
	198, 1129,
	199, 1129,
	200, 1129,
	201, 1129,
	203, 1129,
	204, 1129,
	206, 1129,
	207, 1129,
	208, 1129,
	209, 1129,
	213, 1129,
	214, 1129,
	215, 1129,
	216, 1129,
	219, 1129,
	220, 1129,
	221, 1129,
	223, 1129,
	225, 1129,
	226, 1129,
	228, 1129,
	230, 1129,
	231, 1129,
	232, 1129,
	234, 1129,
	238, 1129,
	239, 1129,
	240, 1129,
	241, 1129,
	242, 1129,
	243, 1129,
	245, 1129,
	246, 1129,
	247, 1129,
	249, 1129,
	250, 1129,
	252, 1129,
	253, 1129,
	256, 1129,
	257, 1129,
	258, 1129,
	261, 1129,
	262, 1129,
	263, 1129,
	264, 1129,
	266, 1129,
	267, 1129,
	268, 1129,
	269, 1129,
	270, 1129,
	271, 1129,
	272, 1129,
	273, 1129,
	274, 1129,
	275, 1129,
	276, 1129,
	278, 1129,
	280, 1129,
	281, 1129,
	282, 1129,
	283, 1129,
	284, 1129,
	285, 1129,
	286, 1129,
	287, 1129,
	288, 1129,
	289, 1129,
	290, 1129,
	292, 1129,
	294, 1129,
	296, 1129,
	297, 1129,
	299, 1129,
	300, 1129,
	301, 1129,
	302, 1129,
	303, 1129,
	306, 1129,
	310, 1129,
	311, 1129,
	312, 1129,
	315, 1129,
	316, 1129,
	317, 1129,
	319, 1129,
	321, 1129,
	322, 1129,
	323, 1129,
	324, 1129,
	325, 1129,
	326, 1129,
	327, 1129,
	328, 1129,
	329, 1129,
	330, 1129,
	331, 1129,
	332, 1129,
	334, 1129,
	335, 1129,
	336, 1129,
	337, 1129,
	338, 1129,
	339, 1129,
	340, 1129,
	341, 1129,
	342, 1129,
	344, 1129,
	346, 1129,
	347, 1129,
	348, 1129,
	349, 1129,
	350, 1129,
	351, 1129,
	352, 1129,
	353, 1129,
	354, 1129,
	355, 1129,
	356, 1129,
	358, 1129,
	364, 1129,
	366, 1129,
	367, 1129,
	368, 1129,
	369, 1129,
	370, 1129,
	371, 1129,
	372, 1129,
	373, 1129,
	375, 1129,
	376, 1129,
	377, 1129,
	379, 1129,
	380, 1129,
	381, 1129,
	382, 1129,
	383, 1129,
	384, 1129,
	386, 1129,
	387, 1129,
	388, 1129,
	389, 1129,
	390, 1129,
	391, 1129,
	392, 1129,
	393, 1129,
	394, 1129,
	395, 1129,
	396, 1129,
	398, 1129,
	399, 1129,
	400, 1129,
	401, 1129,
	402, 1129,
	403, 1129,
	405, 1129,
	406, 1129,
	407, 1129,
	408, 1129,
	409, 1129,
	411, 1129,
	412, 1129,
	413, 1129,
	414, 1129,
	415, 1129,
	416, 1129,
	417, 1129,
	419, 1129,
	421, 1129,
	422, 1129,
	423, 1129,
	424, 1129,
	425, 1129,
	426, 1129,
	427, 1129,
	428, 1129,
	429, 1129,
	430, 1129,
	431, 1129,
	432, 1129,
	433, 1129,
	435, 1129,
	436, 1129,
	438, 1129,
	440, 1129,
	441, 1129,
	442, 1129,
	443, 1129,
	444, 1129,
	445, 1129,
	446, 1129,
	447, 1129,
	449, 1129,
	450, 1129,
	451, 1129,
	452, 1129,
	453, 1129,
	455, 1129,
	457, 1129,
	458, 1129,
	459, 1129,
	460, 1129,
	461, 1129,
	463, 1129,
	464, 1129,
	465, 1129,
	467, 1129,
	468, 1129,
	471, 1129,
	472, 1129,
	473, 1129,
	474, 1129,
	475, 1129,
	476, 1129,
	477, 1129,
	479, 1129,
	482, 1129,
	483, 1129,
	484, 1129,
	485, 1129,
	486, 1129,
	487, 1129,
	489, 1129,
	490, 1129,
	491, 1129,
	492, 1129,
	497, 1129,
	498, 1129,
	499, 1129,
	500, 1129,
	501, 1129,
	502, 1129,
	-2, 0,
	-1, 848,
	348, 770,
	403, 770,
	-2, 0,
	-1, 849,
	348, 769,
	403, 769,
	-2, 713,
	-1, 853,
	1, 810,
	525, 810,
	527, 810,
	529, 810,
	-2, 0,
	-1, 854,
	1, 748,
	525, 748,
	527, 748,
	529, 748,
	-2, 0,
	-1, 855,
	1, 853,
	175, 853,
	525, 853,
	527, 853,
	529, 853,
	-2, 0,
	-1, 863,
	1, 773,
	525, 773,
	527, 773,
	529, 773,
	-2, 0,
	-1, 869,
	1, 810,
	525, 810,
	527, 810,
	529, 810,
	-2, 0,
	-1, 870,
	1, 812,
	525, 812,
	527, 812,
	529, 812,
	-2, 0,
	-1, 871,
	1, 815,
	525, 815,
	527, 815,
	529, 815,
	-2, 0,
	-1, 877,
	1, 832,
	525, 832,
	527, 832,
	529, 832,
	-2, 0,
	-1, 878,
	1, 834,
	525, 834,
	527, 834,
	529, 834,
	-2, 0,
	-1, 927,
	162, 1337,
	175, 1337,
	255, 1337,
	304, 1337,
	-2, 1275,
	-1, 942,
	162, 1336,
	175, 1336,
	255, 1336,
	304, 1336,
	-2, 1272,
	-1, 968,
	528, 1982,
	-2, 625,
	-1, 996,
	5, 1974,
	526, 1972,
	-2, 1963,
	-1, 1004,
	5, 1995,
	526, 1992,
	-2, 1983,
	-1, 1005,
	5, 1996,
	526, 1993,
	-2, 1984,
	-1, 1013,
	528, 1980,
	-2, 1962,
	-1, 1014,
	526, 2356,
	-2, 1981,
	-1, 1037,
	526, 2355,
	-2, 1997,
	-1, 1038,
	5, 1502,
	-2, 2326,
	-1, 1039,
	5, 1503,
	-2, 2327,
	-1, 1040,
	5, 1504,
	-2, 2341,
	-1, 1041,
	5, 1505,
	-2, 2305,
	-1, 1042,
	5, 1506,
	-2, 2339,
	-1, 1043,
	5, 1514,
	-2, 2318,
	-1, 1044,
	5, 1501,
	-2, 2314,
	-1, 1045,
	5, 1501,
	-2, 2313,
	-1, 1046,
	5, 1501,
	-2, 2332,
	-1, 1047,
	5, 1512,
	-2, 2307,
	-1, 1048,
	5, 1517,
	-2, 2306,
	-1, 1049,
	5, 1519,
	-2, 2351,
	-1, 1052,
	5, 1541,
	-2, 2344,
	-1, 1053,
	5, 1533,
	-2, 2345,
	-1, 1054,
	5, 1541,
	-2, 2346,
	-1, 1055,
	5, 1537,
	-2, 2347,
	-1, 1056,
	5, 1487,
	-2, 2319,
	-1, 1057,
	5, 1488,
	-2, 2320,
	-1, 1058,
	5, 1489,
	-2, 2308,
	-1, 1085,
	5, 1524,
	-2, 2352,
	-1, 1086,
	5, 1525,
	-2, 2342,
	-1, 1087,
	5, 1526,
	490, 1526,
	-2, 2309,
	-1, 1088,
	5, 1527,
	490, 1527,
	-2, 2310,
	-1, 1125,
	526, 1992,
	-2, 1983,
	-1, 1126,
	526, 1993,
	-2, 1984,
	-1, 1156,
	178, 2276,
	454, 2276,
	509, 2276,
	528, 2276,
	-2, 0,
	-1, 1159,
	1, 603,
	529, 603,
	-2, 1212,
	-1, 1284,
	366, 1958,
	405, 1958,
	519, 1958,
	-2, 1956,
	-1, 1296,
	530, 1958,
	-2, 1959,
	-1, 1303,
	1, 1105,
	525, 1105,
	527, 1105,
	529, 1105,
	-2, 1324,
	-1, 1357,
	354, 915,
	489, 915,
	-2, 339,
	-1, 1378,
	1, 1105,
	525, 1105,
	527, 1105,
	529, 1105,
	-2, 1324,
	-1, 1385,
	4, 1129,
	21, 1129,
	22, 1129,
	23, 1129,
	24, 1129,
	25, 1129,
	26, 1129,
	28, 1129,
	29, 1129,
	35, 1129,
	40, 1129,
	41, 1129,
	42, 1129,
	43, 1129,
	44, 1129,
	45, 1129,
	46, 1129,
	47, 1129,
	48, 1129,
	49, 1129,
	51, 1129,
	52, 1129,
	53, 1129,
	54, 1129,
	56, 1129,
	57, 1129,
	58, 1129,
	59, 1129,
	60, 1129,
	61, 1129,
	62, 1129,
	66, 1129,
	67, 1129,
	68, 1129,
	69, 1129,
	71, 1129,
	72, 1129,
	73, 1129,
	77, 1129,
	78, 1129,
	79, 1129,
	80, 1129,
	81, 1129,
	82, 1129,
	83, 1129,
	86, 1129,
	87, 1129,
	88, 1129,
	89, 1129,
	91, 1129,
	93, 1129,
	94, 1129,
	95, 1129,
	96, 1129,
	97, 1129,
	98, 1129,
	100, 1129,
	101, 1129,
	102, 1129,
	104, 1129,
	105, 1129,
	113, 1129,
	114, 1129,
	115, 1129,
	116, 1129,
	118, 1129,
	119, 1129,
	120, 1129,
	122, 1129,
	123, 1129,
	124, 1129,
	126, 1129,
	127, 1129,
	129, 1129,
	130, 1129,
	131, 1129,
	134, 1129,
	135, 1129,
	136, 1129,
	138, 1129,
	139, 1129,
	141, 1129,
	142, 1129,
	143, 1129,
	145, 1129,
	146, 1129,
	147, 1129,
	148, 1129,
	149, 1129,
	150, 1129,
	151, 1129,
	152, 1129,
	153, 1129,
	154, 1129,
	155, 1129,
	156, 1129,
	157, 1129,
	158, 1129,
	159, 1129,
	167, 1129,
	168, 1129,
	169, 1129,
	170, 1129,
	174, 1129,
	176, 1129,
	180, 1129,
	181, 1129,
	182, 1129,
	183, 1129,
	184, 1129,
	185, 1129,
	187, 1129,
	188, 1129,
	190, 1129,
	191, 1129,
	193, 1129,
	194, 1129,
	195, 1129,
	196, 1129,
	197, 1129,
	198, 1129,
	199, 1129,
	200, 1129,
	201, 1129,
	203, 1129,
	204, 1129,
	206, 1129,
	207, 1129,
	208, 1129,
	209, 1129,
	214, 1129,
	215, 1129,
	216, 1129,
	219, 1129,
	220, 1129,
	221, 1129,
	223, 1129,
	225, 1129,
	226, 1129,
	228, 1129,
	230, 1129,
	231, 1129,
	232, 1129,
	234, 1129,
	238, 1129,
	239, 1129,
	240, 1129,
	241, 1129,
	242, 1129,
	243, 1129,
	245, 1129,
	246, 1129,
	247, 1129,
	249, 1129,
	250, 1129,
	252, 1129,
	253, 1129,
	256, 1129,
	257, 1129,
	258, 1129,
	261, 1129,
	262, 1129,
	263, 1129,
	264, 1129,
	266, 1129,
	267, 1129,
	268, 1129,
	269, 1129,
	270, 1129,
	271, 1129,
	272, 1129,
	273, 1129,
	274, 1129,
	275, 1129,
	276, 1129,
	278, 1129,
	280, 1129,
	281, 1129,
	282, 1129,
	283, 1129,
	284, 1129,
	285, 1129,
	286, 1129,
	287, 1129,
	288, 1129,
	289, 1129,
	290, 1129,
	292, 1129,
	296, 1129,
	297, 1129,
	299, 1129,
	300, 1129,
	301, 1129,
	302, 1129,
	303, 1129,
	306, 1129,
	308, 1129,
	310, 1129,
	311, 1129,
	312, 1129,
	315, 1129,
	316, 1129,
	317, 1129,
	319, 1129,
	321, 1129,
	322, 1129,
	323, 1129,
	324, 1129,
	325, 1129,
	326, 1129,
	327, 1129,
	328, 1129,
	329, 1129,
	330, 1129,
	331, 1129,
	332, 1129,
	334, 1129,
	335, 1129,
	336, 1129,
	337, 1129,
	338, 1129,
	339, 1129,
	340, 1129,
	341, 1129,
	342, 1129,
	344, 1129,
	346, 1129,
	347, 1129,
	348, 1129,
	349, 1129,
	350, 1129,
	351, 1129,
	352, 1129,
	353, 1129,
	354, 1129,
	355, 1129,
	356, 1129,
	358, 1129,
	364, 1129,
	366, 1129,
	367, 1129,
	368, 1129,
	369, 1129,
	370, 1129,
	371, 1129,
	372, 1129,
	373, 1129,
	375, 1129,
	376, 1129,
	377, 1129,
	379, 1129,
	380, 1129,
	381, 1129,
	382, 1129,
	383, 1129,
	384, 1129,
	386, 1129,
	387, 1129,
	388, 1129,
	389, 1129,
	390, 1129,
	391, 1129,
	392, 1129,
	393, 1129,
	394, 1129,
	395, 1129,
	396, 1129,
	398, 1129,
	399, 1129,
	400, 1129,
	401, 1129,
	402, 1129,
	403, 1129,
	405, 1129,
	406, 1129,
	407, 1129,
	408, 1129,
	409, 1129,
	411, 1129,
	412, 1129,
	413, 1129,
	414, 1129,
	415, 1129,
	416, 1129,
	417, 1129,
	419, 1129,
	421, 1129,
	422, 1129,
	423, 1129,
	424, 1129,
	425, 1129,
	426, 1129,
	427, 1129,
	428, 1129,
	429, 1129,
	430, 1129,
	431, 1129,
	432, 1129,
	433, 1129,
	435, 1129,
	436, 1129,
	438, 1129,
	440, 1129,
	441, 1129,
	442, 1129,
	443, 1129,
	444, 1129,
	445, 1129,
	446, 1129,
	447, 1129,
	449, 1129,
	450, 1129,
	451, 1129,
	452, 1129,
	453, 1129,
	455, 1129,
	457, 1129,
	458, 1129,
	459, 1129,
	460, 1129,
	461, 1129,
	463, 1129,
	464, 1129,
	465, 1129,
	467, 1129,
	468, 1129,
	471, 1129,
	472, 1129,
	473, 1129,
	474, 1129,
	475, 1129,
	476, 1129,
	477, 1129,
	479, 1129,
	482, 1129,
	483, 1129,
	484, 1129,
	485, 1129,
	486, 1129,
	487, 1129,
	489, 1129,
	490, 1129,
	491, 1129,
	492, 1129,
	497, 1129,
	498, 1129,
	499, 1129,
	500, 1129,
	501, 1129,
	502, 1129,
	-2, 0,
	-1, 1458,
	1, 478,
	525, 478,
	527, 478,
	529, 478,
	-2, 1295,
	-1, 1461,
	4, 2350,
	11, 2350,
	12, 2350,
	14, 2350,
	15, 2350,
	16, 2350,
	17, 2350,
	18, 2350,
	19, 2350,
	21, 2350,
	22, 2350,
	23, 2350,
	24, 2350,
	25, 2350,
	26, 2350,
	28, 2350,
	29, 2350,
	32, 2350,
	33, 2350,
	35, 2350,
	37, 2350,
	40, 2350,
	41, 2350,
	42, 2350,
	43, 2350,
	44, 2350,
	45, 2350,
	46, 2350,
	47, 2350,
	48, 2350,
	49, 2350,
	51, 2350,
	52, 2350,
	53, 2350,
	54, 2350,
	56, 2350,
	57, 2350,
	58, 2350,
	59, 2350,
	60, 2350,
	61, 2350,
	62, 2350,
	66, 2350,
	67, 2350,
	68, 2350,
	69, 2350,
	71, 2350,
	72, 2350,
	73, 2350,
	74, 2350,
	77, 2350,
	78, 2350,
	79, 2350,
	80, 2350,
	81, 2350,
	82, 2350,
	83, 2350,
	84, 2350,
	86, 2350,
	87, 2350,
	88, 2350,
	89, 2350,
	91, 2350,
	92, 2350,
	93, 2350,
	94, 2350,
	95, 2350,
	96, 2350,
	97, 2350,
	98, 2350,
	100, 2350,
	101, 2350,
	102, 2350,
	103, 2350,
	104, 2350,
	105, 2350,
	113, 2350,
	114, 2350,
	115, 2350,
	116, 2350,
	118, 2350,
	119, 2350,
	120, 2350,
	122, 2350,
	123, 2350,
	124, 2350,
	126, 2350,
	127, 2350,
	129, 2350,
	130, 2350,
	131, 2350,
	134, 2350,
	135, 2350,
	136, 2350,
	138, 2350,
	139, 2350,
	141, 2350,
	142, 2350,
	143, 2350,
	145, 2350,
	146, 2350,
	147, 2350,
	148, 2350,
	149, 2350,
	150, 2350,
	151, 2350,
	152, 2350,
	153, 2350,
	154, 2350,
	155, 2350,
	156, 2350,
	157, 2350,
	158, 2350,
	159, 2350,
	163, 2350,
	164, 2350,
	165, 2350,
	166, 2350,
	167, 2350,
	168, 2350,
	169, 2350,
	170, 2350,
	173, 2350,
	174, 2350,
	176, 2350,
	179, 2350,
	180, 2350,
	181, 2350,
	182, 2350,
	183, 2350,
	184, 2350,
	185, 2350,
	187, 2350,
	188, 2350,
	190, 2350,
	191, 2350,
	193, 2350,
	194, 2350,
	195, 2350,
	196, 2350,
	197, 2350,
	198, 2350,
	199, 2350,
	200, 2350,
	201, 2350,
	202, 2350,
	203, 2350,
	204, 2350,
	205, 2350,
	206, 2350,
	207, 2350,
	208, 2350,
	209, 2350,
	211, 2350,
	212, 2350,
	214, 2350,
	215, 2350,
	216, 2350,
	218, 2350,
	219, 2350,
	220, 2350,
	221, 2350,
	223, 2350,
	225, 2350,
	226, 2350,
	227, 2350,
	228, 2350,
	229, 2350,
	230, 2350,
	231, 2350,
	232, 2350,
	233, 2350,
	234, 2350,
	236, 2350,
	237, 2350,
	238, 2350,
	239, 2350,
	240, 2350,
	241, 2350,
	242, 2350,
	243, 2350,
	245, 2350,
	246, 2350,
	247, 2350,
	249, 2350,
	250, 2350,
	251, 2350,
	252, 2350,
	253, 2350,
	254, 2350,
	256, 2350,
	257, 2350,
	258, 2350,
	261, 2350,
	262, 2350,
	263, 2350,
	264, 2350,
	265, 2350,
	266, 2350,
	267, 2350,
	268, 2350,
	269, 2350,
	270, 2350,
	271, 2350,
	272, 2350,
	273, 2350,
	274, 2350,
	275, 2350,
	276, 2350,
	278, 2350,
	279, 2350,
	280, 2350,
	281, 2350,
	282, 2350,
	283, 2350,
	284, 2350,
	285, 2350,
	286, 2350,
	287, 2350,
	288, 2350,
	289, 2350,
	290, 2350,
	292, 2350,
	295, 2350,
	296, 2350,
	297, 2350,
	299, 2350,
	300, 2350,
	301, 2350,
	302, 2350,
	303, 2350,
	306, 2350,
	310, 2350,
	311, 2350,
	312, 2350,
	313, 2350,
	315, 2350,
	316, 2350,
	317, 2350,
	319, 2350,
	321, 2350,
	322, 2350,
	323, 2350,
	324, 2350,
	325, 2350,
	326, 2350,
	327, 2350,
	328, 2350,
	329, 2350,
	330, 2350,
	331, 2350,
	332, 2350,
	334, 2350,
	335, 2350,
	336, 2350,
	337, 2350,
	338, 2350,
	339, 2350,
	340, 2350,
	341, 2350,
	342, 2350,
	344, 2350,
	346, 2350,
	347, 2350,
	348, 2350,
	349, 2350,
	350, 2350,
	351, 2350,
	352, 2350,
	353, 2350,
	354, 2350,
	355, 2350,
	356, 2350,
	358, 2350,
	364, 2350,
	365, 2350,
	366, 2350,
	367, 2350,
	368, 2350,
	369, 2350,
	370, 2350,
	371, 2350,
	372, 2350,
	373, 2350,
	375, 2350,
	376, 2350,
	377, 2350,
	378, 2350,
	379, 2350,
	380, 2350,
	381, 2350,
	382, 2350,
	383, 2350,
	384, 2350,
	385, 2350,
	386, 2350,
	387, 2350,
	388, 2350,
	389, 2350,
	390, 2350,
	391, 2350,
	392, 2350,
	393, 2350,
	394, 2350,
	395, 2350,
	396, 2350,
	398, 2350,
	399, 2350,
	400, 2350,
	401, 2350,
	402, 2350,
	403, 2350,
	405, 2350,
	406, 2350,
	407, 2350,
	408, 2350,
	409, 2350,
	410, 2350,
	411, 2350,
	412, 2350,
	413, 2350,
	414, 2350,
	415, 2350,
	416, 2350,
	417, 2350,
	419, 2350,
	421, 2350,
	422, 2350,
	423, 2350,
	424, 2350,
	425, 2350,
	426, 2350,
	427, 2350,
	428, 2350,
	429, 2350,
	430, 2350,
	431, 2350,
	432, 2350,
	433, 2350,
	435, 2350,
	436, 2350,
	438, 2350,
	440, 2350,
	441, 2350,
	442, 2350,
	443, 2350,
	444, 2350,
	445, 2350,
	446, 2350,
	447, 2350,
	449, 2350,
	450, 2350,
	451, 2350,
	452, 2350,
	453, 2350,
	455, 2350,
	457, 2350,
	458, 2350,
	459, 2350,
	460, 2350,
	461, 2350,
	463, 2350,
	464, 2350,
	465, 2350,
	467, 2350,
	468, 2350,
	471, 2350,
	472, 2350,
	473, 2350,
	474, 2350,
	475, 2350,
	476, 2350,
	477, 2350,
	479, 2350,
	482, 2350,
	483, 2350,
	484, 2350,
	485, 2350,
	486, 2350,
	487, 2350,
	489, 2350,
	490, 2350,
	491, 2350,
	492, 2350,
	497, 2350,
	498, 2350,
	499, 2350,
	500, 2350,
	501, 2350,
	502, 2350,
	503, 2350,
	504, 2350,
	507, 2350,
	508, 2350,
	509, 2350,
	510, 2350,
	511, 2350,
	512, 2350,
	514, 2350,
	515, 2350,
	516, 2350,
	517, 2350,
	518, 2350,
	519, 2350,
	520, 2350,
	521, 2350,
	522, 2350,
	524, 2350,
	527, 2350,
	528, 2350,
	530, 2350,
	531, 2350,
	-2, 0,
	-1, 1466,
	178, 2242,
	454, 2242,
	509, 2242,
	528, 2242,
	-2, 0,
	-1, 1515,
	348, 770,
	403, 770,
	-2, 0,
	-1, 1540,
	1, 765,
	525, 765,
	527, 765,
	529, 765,
	-2, 0,
	-1, 1541,
	1, 801,
	525, 801,
	527, 801,
	529, 801,
	-2, 0,
	-1, 1542,
	1, 772,
	525, 772,
	527, 772,
	529, 772,
	-2, 0,
	-1, 1544,
	1, 776,
	525, 776,
	527, 776,
	529, 776,
	-2, 0,
	-1, 1550,
	1, 783,
	525, 783,
	527, 783,
	529, 783,
	-2, 0,
	-1, 1578,
	1, 2296,
	525, 2296,
	527, 2296,
	528, 2296,
	529, 2296,
	-2, 830,
	-1, 1579,
	1, 2239,
	525, 2239,
	527, 2239,
	528, 2239,
	529, 2239,
	-2, 831,
	-1, 1594,
	1, 1207,
	529, 1207,
	-2, 1212,
	-1, 1597,
	162, 1336,
	175, 1336,
	255, 1336,
	304, 1336,
	-2, 1276,
	-1, 1691,
	144, 1297,
	162, 1297,
	175, 1297,
	222, 1297,
	255, 1297,
	304, 1297,
	314, 1297,
	469, 1297,
	-2, 1702,
	-1, 1751,
	527, 1852,
	-2, 0,
	-1, 1786,
	144, 1297,
	162, 1297,
	175, 1297,
	222, 1297,
	255, 1297,
	304, 1297,
	314, 1297,
	469, 1297,
	-2, 1417,
	-1, 1834,
	526, 1529,
	-2, 1517,
	-1, 1870,
	1, 605,
	529, 605,
	-2, 1212,
	-1, 1982,
	205, 217,
	-2, 1991,
	-1, 1983,
	205, 218,
	-2, 260,
	-1, 2110,
	1, 767,
	525, 767,
	527, 767,
	529, 767,
	-2, 0,
	-1, 2111,
	1, 803,
	525, 803,
	527, 803,
	529, 803,
	-2, 0,
	-1, 2141,
	1, 785,
	525, 785,
	527, 785,
	529, 785,
	-2, 0,
	-1, 2187,
	383, 1363,
	384, 1363,
	-2, 1562,
	-1, 2218,
	14, 0,
	15, 0,
	16, 0,
	507, 0,
	508, 0,
	509, 0,
	-2, 1582,
	-1, 2219,
	14, 0,
	15, 0,
	16, 0,
	507, 0,
	508, 0,
	509, 0,
	-2, 1583,
	-1, 2220,
	92, 0,
	236, 0,
	237, 0,
	511, 0,
	512, 0,
	-2, 1584,
	-1, 2221,
	92, 0,
	236, 0,
	237, 0,
	511, 0,
	512, 0,
	-2, 1585,
	-1, 2222,
	92, 0,
	236, 0,
	237, 0,
	511, 0,
	512, 0,
	-2, 1586,
	-1, 2223,
	92, 0,
	236, 0,
	237, 0,
	511, 0,
	512, 0,
	-2, 1587,
	-1, 2224,
	92, 0,
	236, 0,
	237, 0,
	511, 0,
	512, 0,
	-2, 1588,
	-1, 2225,
	14, 0,
	15, 0,
	16, 0,
	507, 0,
	508, 0,
	509, 0,
	-2, 1589,
	-1, 2237,
	14, 0,
	15, 0,
	16, 0,
	507, 0,
	508, 0,
	509, 0,
	-2, 1601,
	-1, 2238,
	14, 0,
	15, 0,
	16, 0,
	507, 0,
	508, 0,
	509, 0,
	-2, 1602,
	-1, 2239,
	14, 0,
	15, 0,
	16, 0,
	507, 0,
	508, 0,
	509, 0,
	-2, 1603,
	-1, 2242,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	202, 0,
	205, 0,
	254, 0,
	410, 0,
	503, 0,
	510, 0,
	-2, 1608,
	-1, 2248,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	202, 0,
	205, 0,
	254, 0,
	410, 0,
	503, 0,
	510, 0,
	-2, 1612,
	-1, 2250,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	202, 0,
	205, 0,
	254, 0,
	410, 0,
	503, 0,
	510, 0,
	-2, 1620,
	-1, 2251,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	202, 0,
	205, 0,
	254, 0,
	410, 0,
	503, 0,
	510, 0,
	-2, 1621,
	-1, 2252,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	202, 0,
	205, 0,
	254, 0,
	410, 0,
	503, 0,
	510, 0,
	-2, 1622,
	-1, 2253,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	202, 0,
	205, 0,
	254, 0,
	410, 0,
	503, 0,
	510, 0,
	-2, 1623,
	-1, 2365,
	5, 1995,
	178, 1863,
	526, 1992,
	-2, 1983,
	-1, 2366,
	178, 1864,
	-2, 2301,
	-1, 2367,
	178, 1865,
	-2, 2151,
	-1, 2368,
	178, 1866,
	-2, 2061,
	-1, 2369,
	178, 1867,
	-2, 2105,
	-1, 2370,
	178, 1868,
	-2, 2146,
	-1, 2371,
	178, 1869,
	-2, 2237,
	-1, 2372,
	178, 1870,
	-2, 1685,
	-1, 2441,
	1, 1418,
	2, 1418,
	103, 1418,
	144, 1418,
	162, 1418,
	175, 1418,
	179, 1418,
	189, 1418,
	192, 1418,
	218, 1418,
	222, 1418,
	233, 1418,
	251, 1418,
	255, 1418,
	279, 1418,
	304, 1418,
	308, 1418,
	314, 1418,
	374, 1418,
	378, 1418,
	469, 1418,
	480, 1418,
	494, 1418,
	495, 1418,
	496, 1418,
	505, 1418,
	525, 1418,
	527, 1418,
	529, 1418,
	531, 1418,
	-2, 1417,
	-1, 2454,
	526, 1964,
	-2, 1978,
	-1, 2456,
	1, 276,
	-2, 1324,
	-1, 2480,
	526, 1528,
	-2, 1518,
	-1, 2614,
	1, 1105,
	525, 1105,
	527, 1105,
	529, 1105,
	-2, 1324,
	-1, 2786,
	309, 1366,
	-2, 2340,
	-1, 2787,
	309, 1367,
	-2, 2223,
	-1, 2791,
	383, 1929,
	384, 1929,
	-2, 1683,
	-1, 2792,
	383, 1933,
	384, 1933,
	-2, 1684,
	-1, 2793,
	383, 1930,
	384, 1930,
	-2, 1683,
	-1, 2794,
	383, 1934,
	384, 1934,
	-2, 1684,
	-1, 2807,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	202, 0,
	205, 0,
	254, 0,
	410, 0,
	503, 0,
	510, 0,
	-2, 1610,
	-1, 2808,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	202, 0,
	205, 0,
	254, 0,
	410, 0,
	503, 0,
	510, 0,
	-2, 1614,
	-1, 2814,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	202, 0,
	205, 0,
	254, 0,
	410, 0,
	503, 0,
	510, 0,
	-2, 1616,
	-1, 3016,
	230, 1212,
	344, 1212,
	352, 1212,
	505, 1212,
	-2, 602,
	-1, 3150,
	1, 1105,
	525, 1105,
	527, 1105,
	529, 1105,
	-2, 1324,
	-1, 3258,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	202, 0,
	205, 0,
	254, 0,
	410, 0,
	503, 0,
	510, 0,
	-2, 1618,
	-1, 3265,
	227, 0,
	229, 0,
	295, 0,
	-2, 1637,
	-1, 3332,
	14, 0,
	15, 0,
	16, 0,
	507, 0,
	508, 0,
	509, 0,
	-2, 1666,
	-1, 3333,
	14, 0,
	15, 0,
	16, 0,
	507, 0,
	508, 0,
	509, 0,
	-2, 1667,
	-1, 3334,
	14, 0,
	15, 0,
	16, 0,
	507, 0,
	508, 0,
	509, 0,
	-2, 1668,
	-1, 3338,
	14, 0,
	15, 0,
	16, 0,
	507, 0,
	508, 0,
	509, 0,
	-2, 1672,
	-1, 3339,
	14, 0,
	15, 0,
	16, 0,
	507, 0,
	508, 0,
	509, 0,
	-2, 1673,
	-1, 3340,
	14, 0,
	15, 0,
	16, 0,
	507, 0,
	508, 0,
	509, 0,
	-2, 1674,
	-1, 3386,
	526, 1965,
	-2, 1979,
	-1, 3521,
	528, 2456,
	-2, 1254,
	-1, 3579,
	227, 0,
	229, 0,
	295, 0,
	-2, 1638,
	-1, 3582,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	202, 0,
	205, 0,
	254, 0,
	410, 0,
	503, 0,
	510, 0,
	-2, 1641,
	-1, 3583,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	202, 0,
	205, 0,
	254, 0,
	410, 0,
	503, 0,
	510, 0,
	-2, 1643,
	-1, 3794,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	202, 0,
	205, 0,
	254, 0,
	410, 0,
	503, 0,
	510, 0,
	-2, 1642,
	-1, 3795,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	202, 0,
	205, 0,
	254, 0,
	410, 0,
	503, 0,
	510, 0,
	-2, 1644,
	-1, 3806,
	227, 0,
	-2, 1675,
	-1, 3956,
	227, 0,
	-2, 1676,
	-1, 4103,
	48, 0,
	202, 0,
	254, 0,
	410, 0,
	503, 0,
	510, 0,
	-2, 2304,
}

const sqlPrivate = 57344

const sqlLast = 106973

var sqlAct = [...]int{

	244, 3978, 4113, 3838, 2675, 3719, 3841, 4102, 4212, 3999,
	3562, 4078, 4062, 4044, 4059, 2705, 4114, 3135, 1979, 1323,
	4115, 2079, 3297, 3416, 3826, 3884, 4101, 3960, 3891, 3136,
	4161, 2941, 3783, 3751, 3746, 952, 3701, 2197, 1129, 1449,
	3034, 3167, 3513, 3900, 2088, 3733, 3455, 3923, 1444, 2265,
	3121, 3756, 1306, 1821, 3162, 2063, 3649, 3131, 3490, 2579,
	1606, 3473, 3160, 3475, 3250, 2714, 2205, 1923, 3417, 1792,
	684, 3811, 649, 2727, 2800, 1188, 2198, 2664, 3213, 2646,
	2397, 3215, 2716, 2515, 1822, 2637, 3388, 1481, 2964, 1281,
	2956, 1448, 4, 943, 684, 1118, 2984, 1523, 2924, 3561,
	2724, 3618, 2661, 2713, 2086, 2707, 783, 2945, 1007, 1933,
	2676, 2517, 1761, 2659, 37, 1974, 2434, 2923, 3357, 2947,
	2554, 1973, 2309, 2202, 3961, 2278, 1289, 2061, 1699, 1480,
	679, 238, 2307, 237, 2433, 2436, 2784, 2593, 1952, 1968,
	2647, 1172, 1909, 951, 163, 1000, 2723, 1762, 1959, 1906,
	1737, 2024, 1781, 2298, 3053, 1594, 2262, 2394, 2186, 2169,
	3885, 1424, 2415, 1896, 3133, 2167, 2991, 1459, 1445, 2669,
	2466, 2013, 1435, 685, 1109, 1376, 1005, 1161, 686, 777,
	2717, 615, 2465, 601, 2506, 2301, 1112, 623, 1771, 1732,
	2361, 2553, 2423, 1091, 2279, 2351, 1684, 1607, 1608, 2405,
	631, 690, 681, 693, 1550, 1308, 2012, 1108, 643, 172,
	101, 1286, 2168, 1126, 1457, 756, 2036, 729, 2170, 1318,
	173, 1400, 1050, 1922, 2191, 690, 981, 693, 618, 998,
	163, 1089, 42, 41, 626, 39, 30, 28, 1114, 26,
	1613, 2835, 842, 1593, 1329, 861, 1621, 1622, 3371, 2831,
	3372, 2052, 2943, 2052, 4278, 3177, 2052, 2052, 2414, 2052,
	4272, 4256, 1621, 1622, 3194, 2414, 4255, 4229, 1652, 4227,
	2414, 3665, 4223, 3665, 4143, 1624, 1987, 1778, 4144, 4137,
	947, 4135, 4132, 2414, 1652, 2414, 4133, 1169, 4129, 3176,
	4124, 1624, 4130, 4099, 1987, 996, 798, 1987, 4098, 4097,
	4092, 4091, 1987, 2072, 2072, 2072, 4087, 4085, 4057, 1623,
	3665, 3665, 3665, 2087, 947, 3012, 4038, 1621, 1622, 1643,
	2471, 2407, 4031, 4030, 4025, 1623, 2414, 2414, 3665, 4024,
	4018, 3992, 1106, 3665, 1987, 3711, 2672, 3194, 3958, 1652,
	1092, 1092, 2471, 3940, 3937, 1145, 1624, 3550, 1987, 2896,
	2897, 3934, 2914, 2915, 2916, 3665, 3893, 3858, 3857, 3849,
	3894, 1987, 1987, 1987, 1169, 3848, 1140, 3817, 2050, 3665,
	3577, 1987, 3796, 928, 3775, 3764, 2471, 3696, 2072, 3194,
	1623, 2414, 3684, 3664, 927, 948, 2414, 3665, 1621, 1622,
	3361, 1654, 1655, 1656, 1664, 1665, 1666, 2799, 1646, 1647,
	1648, 1649, 3581, 3529, 2414, 2844, 2471, 3210, 1629, 1657,
	1652, 2845, 3523, 4039, 937, 942, 3210, 1624, 1095, 3488,
	1096, 3953, 2911, 3489, 1629, 1670, 3381, 3379, 3364, 3281,
	3382, 3380, 2414, 1987, 3277, 3209, 3201, 1093, 2414, 3210,
	3202, 2940, 3941, 1141, 2935, 2414, 1651, 1653, 2414, 2934,
	2887, 1623, 2885, 2414, 2888, 2877, 2886, 2467, 2072, 2878,
	2875, 1643, 1651, 1653, 2414, 210, 2846, 2730, 3361, 1640,
	2414, 2072, 1482, 2703, 2702, 2406, 2490, 2075, 2075, 1629,
	2414, 2470, 3745, 2463, 2457, 2471, 1543, 2414, 1987, 3711,
	3685, 2413, 1987, 1621, 1622, 2414, 1987, 2414, 2074, 3550,
	1644, 3202, 2075, 2570, 1927, 2505, 1876, 212, 1124, 2051,
	2643, 2902, 2067, 1986, 2587, 1652, 1644, 1651, 1653, 2503,
	1757, 1317, 1624, 2304, 3446, 3253, 3231, 1779, 1962, 3178,
	1525, 2834, 2450, 2449, 2448, 2447, 2446, 1097, 1094, 1322,
	1646, 1647, 1648, 1649, 1621, 1622, 936, 935, 3179, 3634,
	1629, 934, 933, 211, 932, 210, 1623, 1489, 931, 930,
	926, 2053, 2764, 2053, 204, 2917, 2053, 2053, 925, 2053,
	924, 1644, 205, 1624, 923, 922, 921, 920, 919, 1661,
	918, 917, 1671, 916, 915, 914, 913, 912, 1651, 1653,
	911, 1475, 910, 892, 174, 840, 839, 212, 838, 837,
	1650, 2305, 836, 2912, 1667, 835, 1668, 1623, 3176, 834,
	833, 832, 210, 1638, 1639, 831, 830, 829, 828, 827,
	1645, 826, 825, 824, 823, 822, 821, 820, 819, 818,
	817, 1659, 816, 815, 814, 813, 1645, 812, 811, 1343,
	801, 800, 1644, 211, 796, 795, 789, 788, 1005, 747,
	746, 706, 1005, 705, 212, 1629, 236, 704, 696, 1331,
	695, 694, 663, 655, 654, 653, 3593, 1191, 1141, 637,
	232, 1191, 1669, 231, 2406, 1311, 2306, 2303, 230, 229,
	228, 227, 226, 1171, 174, 225, 86, 1176, 224, 1165,
	1658, 1645, 223, 1651, 1653, 222, 1322, 221, 1141, 1005,
	211, 1005, 220, 1005, 219, 218, 1629, 217, 1311, 216,
	215, 204, 214, 213, 3397, 3375, 3211, 2655, 2987, 205,
	2691, 1297, 2051, 2913, 2857, 2070, 2067, 1292, 2162, 2840,
	1331, 1311, 2624, 2475, 2938, 2455, 1782, 3758, 2440, 2896,
	2897, 2671, 1650, 2334, 2320, 2318, 1904, 1644, 1805, 1634,
	1632, 1633, 1625, 1626, 1627, 1628, 1630, 1631, 1321, 1620,
	2939, 1710, 1645, 4120, 1331, 1300, 1632, 1633, 1625, 1626,
	1627, 1628, 1630, 1631, 1311, 1005, 1325, 1701, 1178, 1740,
	1311, 1382, 1384, 1337, 1311, 1739, 1128, 1662, 4100, 1740,
	4006, 2082, 1005, 3950, 1005, 1739, 3944, 3942, 1311, 3836,
	1159, 2308, 3810, 1330, 1005, 3765, 1005, 1743, 3205, 3744,
	3641, 3616, 3615, 3609, 1328, 3608, 1335, 1738, 1341, 690,
	1372, 693, 1633, 1625, 1626, 1627, 1628, 1630, 1631, 3607,
	2896, 2897, 3600, 3962, 3599, 1342, 3597, 3592, 3589, 3588,
	1184, 3487, 1278, 1283, 3401, 2908, 2909, 2910, 1311, 3493,
	3400, 1154, 2907, 2905, 2906, 2898, 2899, 2900, 2901, 2903,
	2904, 1320, 3399, 3385, 3352, 1005, 1319, 1645, 1005, 3351,
	2081, 2896, 2897, 1462, 1464, 3350, 3273, 3269, 2982, 2931,
	1660, 210, 2922, 2895, 1635, 1636, 1642, 1663, 1641, 1637,
	1455, 1634, 1632, 1633, 1625, 1626, 1627, 1628, 1630, 1631,
	2892, 2902, 2891, 2911, 3603, 2889, 2302, 1473, 3602, 1478,
	1621, 1622, 3760, 2884, 1494, 2883, 2882, 2879, 1702, 1487,
	1700, 1492, 2876, 212, 163, 163, 2657, 2856, 210, 1429,
	1432, 2484, 1652, 2839, 2896, 2897, 2832, 2704, 1708, 1624,
	136, 1165, 1441, 1105, 1165, 2441, 3444, 1387, 2291, 1620,
	1619, 1701, 210, 1403, 4271, 4221, 4220, 2027, 1005, 1005,
	1005, 1005, 1005, 1005, 1005, 2896, 2897, 1559, 3494, 211,
	212, 4153, 4151, 1623, 4142, 1130, 1331, 1545, 1544, 1336,
	204, 3299, 1438, 1643, 3998, 1460, 210, 3988, 205, 1005,
	948, 1640, 2902, 2936, 212, 1005, 1634, 1632, 1633, 1625,
	1626, 1627, 1628, 1630, 1631, 1994, 1992, 3985, 1895, 3984,
	174, 1493, 3983, 3977, 3970, 3938, 211, 3922, 3921, 2268,
	3909, 1598, 3906, 3854, 3832, 3808, 3791, 204, 212, 3790,
	3772, 3771, 3736, 2902, 210, 205, 3712, 1474, 2896, 2897,
	211, 3633, 3575, 3614, 1621, 1622, 3551, 3545, 3542, 1488,
	3434, 204, 1627, 1628, 1630, 1631, 1690, 174, 3433, 205,
	1621, 1622, 1646, 1647, 1648, 1649, 3420, 3419, 1592, 3494,
	3367, 3355, 1629, 1624, 211, 3264, 212, 1688, 3212, 3195,
	3153, 174, 1652, 3093, 2912, 204, 1499, 3066, 3037, 1624,
	3036, 3006, 3004, 205, 2274, 1516, 2902, 2861, 2860, 1005,
	1005, 1005, 2656, 2855, 2823, 1005, 2636, 1623, 1546, 1746,
	1651, 1653, 1126, 1745, 1126, 174, 1744, 1741, 1733, 1731,
	2482, 3037, 211, 1623, 2481, 2912, 2452, 2902, 2445, 1191,
	3759, 1759, 2412, 204, 2316, 1638, 1639, 1005, 1804, 1760,
	684, 205, 1755, 1595, 1839, 684, 1754, 1303, 1753, 1752,
	1808, 1751, 1750, 1749, 1005, 1748, 1603, 1747, 1311, 1728,
	1818, 928, 1602, 174, 1644, 1864, 1621, 1622, 1727, 1597,
	1726, 1725, 927, 1005, 1724, 1723, 1722, 1721, 210, 1191,
	1346, 1599, 1720, 1719, 1718, 1768, 1616, 1617, 2912, 1717,
	1813, 1716, 1715, 1714, 1703, 1624, 1689, 1687, 210, 948,
	2902, 1165, 1682, 1378, 2913, 1742, 1629, 1153, 1902, 1143,
	1873, 1136, 1765, 1766, 3739, 2979, 3637, 1815, 2083, 3585,
	212, 3396, 1629, 3378, 1867, 3370, 1092, 2843, 2473, 1623,
	1796, 2443, 3821, 1789, 1868, 1734, 1735, 3639, 3395, 1702,
	212, 3002, 1685, 2575, 1003, 2913, 1452, 2900, 2901, 2903,
	2904, 3687, 1833, 1895, 2896, 2897, 1468, 2539, 1800, 163,
	1651, 1653, 4218, 1173, 1650, 4211, 211, 1790, 2333, 2319,
	2317, 690, 3986, 693, 3163, 1175, 690, 204, 693, 1811,
	3896, 3895, 3763, 3714, 1645, 205, 211, 3713, 3686, 3636,
	1782, 1893, 2912, 3554, 3553, 3945, 3943, 204, 1479, 3552,
	1787, 3373, 3197, 3196, 3497, 205, 1895, 174, 2913, 1166,
	1169, 2881, 1870, 1169, 1644, 2880, 1311, 1311, 3901, 1590,
	1507, 1866, 1758, 3835, 948, 1284, 1191, 174, 1296, 1299,
	1174, 2805, 2541, 2907, 2905, 2906, 2898, 2899, 2900, 2901,
	2903, 2904, 1816, 1809, 1170, 1915, 1515, 1862, 1799, 1798,
	1784, 1797, 1795, 1794, 1948, 1793, 2558, 1951, 908, 1740,
	1956, 3069, 3432, 2896, 2897, 1739, 1836, 1712, 1169, 1882,
	1819, 1524, 4096, 1827, 2907, 2905, 2906, 2898, 2899, 2900,
	2901, 2903, 2904, 1560, 1723, 1723, 3138, 1780, 3137, 1299,
	1299, 210, 2080, 3892, 2102, 1898, 3812, 1888, 4140, 909,
	4125, 4112, 3122, 1980, 1984, 210, 210, 1124, 2728, 1124,
	1641, 1637, 2913, 1634, 1632, 1633, 1625, 1626, 1627, 1628,
	1630, 1631, 1932, 1167, 1525, 1975, 3452, 3451, 1299, 1812,
	3437, 1168, 3228, 212, 1645, 3014, 2943, 3301, 2905, 2906,
	2898, 2899, 2900, 2901, 2903, 2904, 2028, 212, 212, 690,
	2299, 693, 2849, 1960, 4121, 2480, 1756, 1121, 1736, 1709,
	3129, 2021, 1428, 1927, 1311, 2017, 1311, 1104, 1311, 1381,
	1314, 2898, 2899, 2900, 2901, 2903, 2904, 1148, 2584, 211,
	4134, 4131, 3172, 2581, 1311, 1311, 3411, 3979, 4177, 1977,
	204, 1320, 3747, 211, 211, 1311, 1319, 4056, 205, 3967,
	2022, 3040, 3427, 2033, 204, 204, 1456, 1311, 1871, 1311,
	1311, 1311, 205, 205, 2711, 4122, 1955, 2555, 2556, 1503,
	174, 2668, 3115, 2089, 3245, 2902, 3875, 3018, 4202, 2101,
	684, 4178, 888, 950, 174, 174, 3465, 1985, 2041, 1175,
	3675, 1349, 2177, 2906, 2898, 2899, 2900, 2901, 2903, 2904,
	1625, 1626, 1627, 1628, 1630, 1631, 906, 904, 2030, 1558,
	1883, 2491, 4266, 1315, 964, 902, 1625, 1626, 1627, 1628,
	1630, 1631, 900, 897, 2005, 2004, 3868, 2085, 3860, 3709,
	3461, 2147, 3460, 1557, 1169, 2106, 2175, 3454, 3450, 2145,
	2055, 3448, 1359, 3408, 1174, 3407, 3464, 3118, 2998, 2854,
	2853, 2852, 1403, 2851, 2038, 2304, 2038, 742, 2809, 3003,
	1005, 2591, 1005, 2590, 2090, 2039, 2035, 2912, 2586, 1005,
	946, 2577, 1839, 1839, 1191, 2569, 1005, 1005, 1005, 1005,
	1005, 1005, 1005, 1005, 1005, 1005, 1005, 1005, 1005, 1005,
	1005, 1005, 1005, 1005, 1005, 1005, 1005, 1005, 1005, 1005,
	1005, 1005, 1005, 1005, 1005, 1005, 1005, 1005, 1005, 1005,
	1005, 690, 1005, 693, 1005, 1005, 1005, 1005, 2179, 1460,
	1360, 1460, 1556, 2166, 948, 1154, 948, 1631, 2076, 2568,
	2077, 2043, 2044, 2305, 1175, 2080, 1005, 2567, 3020, 1005,
	1005, 1160, 1501, 210, 2566, 2545, 2532, 1005, 945, 743,
	2509, 1005, 2093, 1005, 1005, 2464, 2203, 2204, 4203, 2094,
	3068, 1191, 2176, 2249, 2507, 1596, 2474, 1005, 1005, 1005,
	1005, 2347, 1005, 1005, 1005, 1005, 1005, 1005, 1005, 1005,
	1833, 1833, 2124, 2346, 2207, 212, 1166, 2913, 1393, 1174,
	1392, 2562, 1887, 1886, 2665, 2159, 1895, 1897, 1005, 1005,
	1005, 1005, 1005, 1005, 1005, 1005, 1005, 2141, 2306, 2303,
	2509, 1005, 2555, 2556, 1924, 2904, 894, 3229, 3688, 2280,
	2281, 1927, 3789, 1126, 2507, 2190, 1517, 2160, 2174, 2519,
	1191, 211, 2098, 2280, 2296, 1367, 1391, 2003, 1390, 1126,
	947, 1296, 204, 1316, 2543, 2498, 1920, 2163, 2057, 1496,
	205, 2059, 2456, 2171, 2178, 1005, 1191, 2064, 2299, 2342,
	2066, 2165, 2531, 2264, 2069, 2555, 2556, 2164, 2117, 1589,
	1925, 1926, 174, 928, 1414, 2380, 928, 928, 2364, 2364,
	2378, 2295, 2280, 1355, 2194, 2398, 2400, 2195, 2196, 2428,
	2151, 2404, 2264, 2158, 1836, 1836, 3661, 2782, 1921, 2156,
	1167, 1827, 1827, 1569, 3414, 2114, 2344, 2797, 1168, 1890,
	661, 2345, 1601, 4206, 2348, 1525, 2349, 2350, 1152, 2898,
	2899, 2900, 2901, 2903, 2904, 1311, 3843, 1525, 4177, 3657,
	2276, 3236, 4230, 2308, 3471, 2453, 2522, 1513, 1555, 2272,
	3671, 2583, 2420, 1092, 1800, 2530, 2270, 2293, 948, 2109,
	2040, 210, 3235, 2761, 2308, 1191, 809, 948, 1789, 2767,
	3083, 948, 1497, 2468, 3017, 3708, 2118, 3449, 802, 1166,
	1165, 2582, 3447, 3470, 3423, 2442, 2580, 1873, 210, 3436,
	3658, 2427, 3076, 2432, 2419, 1839, 2438, 2439, 3117, 2373,
	2078, 3661, 2360, 212, 3087, 944, 2389, 4207, 2476, 3082,
	883, 2402, 2616, 2585, 745, 744, 1452, 2091, 660, 1002,
	2161, 1892, 2421, 1191, 163, 2410, 2411, 2092, 2425, 2426,
	212, 3075, 2796, 941, 3657, 1787, 2511, 1311, 3650, 2100,
	613, 2103, 2104, 2105, 3845, 2565, 2544, 1946, 2302, 211,
	2110, 2615, 1005, 1005, 3648, 1005, 1891, 1502, 3788, 948,
	204, 1540, 1573, 3652, 1742, 608, 4118, 2770, 205, 2489,
	1918, 1169, 898, 898, 2510, 1930, 211, 2578, 2488, 2548,
	2542, 898, 2177, 2483, 664, 3658, 1945, 204, 899, 898,
	174, 2640, 2020, 1167, 2563, 205, 2146, 2538, 1734, 1735,
	4209, 1168, 2547, 1833, 2144, 2111, 2486, 2487, 740, 1958,
	739, 1377, 2521, 2492, 1929, 1552, 1541, 174, 1500, 1133,
	883, 884, 3669, 2653, 4222, 3651, 2175, 1357, 1124, 2157,
	2574, 3287, 1957, 1311, 1311, 2155, 1311, 4194, 3435, 3290,
	1991, 1990, 697, 941, 1124, 2619, 4193, 4233, 1311, 2621,
	4035, 2514, 1296, 3170, 2534, 1375, 2524, 2527, 1131, 2789,
	2790, 2462, 3653, 1311, 1953, 2625, 2546, 3654, 2628, 4166,
	2630, 1770, 3567, 2699, 2733, 2734, 2694, 3566, 690, 2564,
	693, 2769, 3169, 3980, 2679, 2740, 2741, 2742, 1925, 1926,
	979, 2557, 2559, 2560, 2561, 4246, 2173, 669, 2508, 1005,
	1377, 2750, 2116, 2751, 2766, 2246, 3288, 803, 804, 1413,
	956, 2670, 3656, 4119, 2670, 1934, 1954, 1836, 1354, 3169,
	1320, 2052, 2696, 3019, 1827, 2622, 3659, 2700, 2725, 3994,
	4215, 884, 1120, 2649, 2748, 2729, 1918, 1938, 2681, 2520,
	2634, 662, 1567, 1005, 659, 3728, 2644, 1774, 2710, 1005,
	1005, 2260, 2176, 3424, 1169, 2731, 1134, 3653, 1729, 2735,
	3670, 2736, 3654, 895, 2308, 2663, 2494, 4208, 2811, 2674,
	3844, 677, 2772, 2745, 2774, 3096, 2685, 776, 163, 2258,
	2688, 2496, 2689, 2752, 885, 2754, 1777, 2756, 2509, 3051,
	1570, 1935, 3000, 2768, 810, 671, 1498, 2263, 4117, 2695,
	2697, 1772, 2525, 2701, 1005, 1005, 2765, 3656, 2712, 4033,
	1005, 1972, 2758, 4146, 2497, 1899, 1900, 1927, 2174, 1775,
	2113, 3659, 4147, 1005, 1005, 1949, 1600, 2820, 3785, 1005,
	1005, 2308, 1151, 2495, 4165, 1005, 1568, 2693, 3050, 3655,
	1918, 1460, 2271, 4034, 1005, 1005, 1005, 1773, 3563, 675,
	1005, 1512, 1514, 3801, 1971, 2818, 3057, 2812, 4187, 2244,
	1005, 4067, 2247, 1963, 2108, 3997, 805, 806, 1970, 1774,
	2842, 698, 699, 609, 3694, 3662, 2958, 1005, 1681, 2437,
	2859, 2424, 4234, 2788, 947, 2779, 1939, 3303, 4244, 2747,
	2778, 2290, 3738, 3059, 885, 2254, 3478, 2777, 2753, 3557,
	2755, 2783, 2757, 1122, 1571, 3476, 2190, 3392, 1777, 666,
	886, 2243, 2255, 1146, 3568, 2798, 1121, 2256, 1121, 3247,
	2780, 2261, 4000, 2422, 1528, 2837, 2838, 3729, 4116, 4176,
	2841, 2775, 670, 4174, 3655, 2833, 4015, 610, 3908, 3511,
	3156, 1775, 2011, 1005, 1005, 1005, 1776, 1940, 1941, 3058,
	4213, 3784, 1005, 1005, 1005, 1767, 887, 1005, 1144, 1139,
	1936, 676, 600, 2810, 3492, 1611, 3932, 1005, 1126, 1191,
	3662, 2815, 3564, 1005, 673, 1005, 1969, 2193, 3478, 611,
	668, 612, 1132, 1126, 2686, 1572, 1928, 3476, 701, 700,
	2690, 1884, 3251, 2816, 3851, 4239, 2992, 2821, 3850, 4164,
	1937, 1191, 2950, 2951, 1610, 4247, 3479, 1610, 3830, 2614,
	790, 2848, 3612, 1126, 3915, 3674, 1191, 1605, 3924, 3966,
	886, 665, 3673, 3512, 3458, 3410, 3157, 3149, 4145, 3032,
	3925, 2053, 1839, 3028, 1299, 2972, 1191, 2933, 2654, 948,
	4214, 2648, 702, 703, 2997, 1881, 2638, 672, 2957, 2034,
	1005, 3341, 1947, 2952, 2023, 2526, 2016, 1999, 3286, 2962,
	678, 3926, 2549, 2183, 1005, 3010, 887, 2245, 1776, 636,
	3786, 667, 3356, 4216, 4045, 2981, 1839, 3248, 3474, 2152,
	1299, 2257, 1877, 4001, 3404, 3015, 3514, 3752, 3479, 2635,
	2259, 1416, 1005, 1311, 3890, 1950, 1165, 1609, 1610, 3021,
	1609, 1942, 2960, 3569, 3888, 2698, 1452, 2986, 2985, 2928,
	2929, 2930, 2099, 1693, 2944, 1879, 3001, 1698, 3369, 1770,
	3928, 2978, 2961, 2416, 3831, 3043, 3042, 2970, 1311, 3047,
	3048, 2971, 2990, 2973, 2974, 2739, 3927, 2966, 1191, 3029,
	1833, 3039, 3477, 1880, 2959, 3054, 1611, 1311, 3038, 1611,
	3024, 3025, 1311, 3929, 2976, 2803, 2977, 2817, 2781, 3071,
	3033, 1284, 3027, 1966, 3007, 3008, 2819, 3009, 3041, 1542,
	1943, 3045, 4238, 1311, 1681, 2184, 2955, 3570, 1296, 1311,
	3054, 1311, 3613, 2954, 1833, 1191, 2994, 2995, 2996, 2461,
	2460, 1609, 684, 2418, 3672, 1774, 3073, 3094, 2417, 3054,
	2459, 2458, 1385, 1311, 3054, 1399, 1964, 3016, 3022, 3483,
	3063, 3064, 3342, 1311, 3065, 1386, 3085, 3084, 2550, 2551,
	2642, 3343, 1397, 3143, 3477, 3099, 1915, 2967, 3102, 1126,
	1529, 1910, 3107, 3109, 1777, 945, 1911, 3103, 3973, 791,
	792, 3839, 3110, 3067, 3060, 1965, 3090, 3091, 3148, 1772,
	3092, 4002, 3405, 3720, 1836, 1915, 808, 3074, 3078, 3165,
	3206, 1827, 2032, 1124, 3081, 3125, 3120, 1775, 3123, 4184,
	3769, 1311, 1311, 2431, 3886, 2965, 3174, 3095, 1124, 3089,
	3134, 2732, 3086, 2620, 1299, 1299, 3193, 3105, 2618, 2993,
	3112, 1960, 1506, 1311, 1013, 1773, 3116, 3146, 1836, 1960,
	2969, 3104, 3223, 3097, 4048, 1827, 3111, 3186, 1124, 3619,
	3079, 3216, 4053, 3974, 3080, 2725, 4042, 2547, 3358, 2315,
	3828, 3230, 3127, 690, 2725, 693, 4071, 1191, 4186, 1587,
	1191, 3768, 1585, 3840, 635, 1296, 3166, 3158, 240, 240,
	240, 3088, 603, 604, 1912, 619, 603, 619, 629, 634,
	1564, 4136, 3119, 652, 1562, 3191, 3192, 3829, 658, 3987,
	1005, 1914, 3807, 3930, 240, 3224, 1005, 1005, 3931, 3173,
	1005, 1005, 1005, 1296, 1005, 1296, 1539, 3611, 3171, 1537,
	3187, 4049, 787, 1005, 1839, 3208, 3242, 3180, 240, 2968,
	3975, 3482, 1005, 3204, 1776, 1005, 2925, 3218, 793, 794,
	1535, 1191, 3263, 1533, 3226, 3241, 163, 163, 1812, 3183,
	1005, 3232, 3217, 3233, 3011, 3234, 2890, 2822, 1191, 2639,
	2576, 2540, 3225, 1916, 1531, 2485, 1807, 1398, 1839, 1839,
	1005, 1005, 1522, 1005, 1005, 1005, 3249, 3266, 3164, 1520,
	1395, 1803, 948, 1588, 1396, 1484, 2143, 2926, 3244, 3243,
	1605, 1005, 2763, 3238, 2762, 1005, 2738, 1839, 1839, 1005,
	1005, 1005, 1005, 1005, 1005, 1005, 1005, 1005, 1005, 1005,
	1005, 1005, 1005, 1005, 1005, 1005, 1005, 1005, 807, 1005,
	3246, 2172, 2154, 1551, 3214, 2121, 1005, 1005, 1839, 1996,
	3275, 3276, 1833, 1005, 1865, 1713, 3098, 1495, 1371, 603,
	603, 2314, 4111, 3695, 1005, 1586, 4188, 240, 1584, 3683,
	4041, 3750, 2203, 3306, 3700, 1126, 1126, 3271, 3646, 1005,
	3510, 3161, 3502, 3463, 1124, 939, 1563, 883, 3430, 3428,
	1561, 1917, 3409, 3152, 3282, 1918, 1833, 1833, 3293, 3239,
	3147, 2203, 3321, 3139, 3298, 3289, 3291, 3292, 1191, 2692,
	941, 3305, 1538, 3223, 2687, 1536, 2666, 2652, 2645, 2632,
	2617, 3312, 3216, 2073, 2071, 1833, 1833, 3315, 2068, 3316,
	3374, 3318, 3349, 3353, 3023, 2065, 1534, 1121, 3391, 1532,
	3320, 1005, 3345, 2060, 4162, 3219, 3220, 3221, 3222, 3354,
	3313, 3402, 3403, 1121, 3314, 940, 1833, 1005, 1005, 2058,
	1530, 2054, 3346, 2045, 1995, 1993, 1836, 1976, 1521, 1961,
	3360, 1944, 1931, 1827, 3182, 1519, 1394, 3184, 3185, 2142,
	1919, 896, 3188, 3283, 3189, 4154, 3190, 1005, 1005, 3362,
	3363, 1120, 1614, 1120, 3365, 3366, 2359, 2355, 884, 3106,
	163, 1814, 3390, 4178, 1970, 3113, 2801, 4081, 3218, 3774,
	1836, 1836, 1101, 3376, 1005, 3767, 3766, 1827, 1827, 3707,
	3642, 2726, 1903, 3217, 1351, 3917, 2529, 3522, 2509, 2509,
	1927, 2112, 3377, 1582, 1583, 3144, 1311, 1102, 2031, 1836,
	1836, 1437, 2507, 2528, 2138, 3150, 1827, 1827, 674, 3398,
	2137, 1913, 4080, 2119, 1436, 1839, 3676, 3702, 3443, 3445,
	1518, 3442, 3952, 3620, 3598, 2552, 3413, 3438, 3459, 2353,
	1836, 2533, 1618, 4180, 4172, 1621, 1622, 1827, 4141, 3457,
	3389, 1621, 1622, 1311, 2631, 2140, 2357, 2358, 2356, 1874,
	1005, 2581, 2589, 614, 3453, 3481, 2802, 1615, 1126, 1005,
	3456, 2588, 233, 3199, 3200, 3498, 2571, 2535, 4040, 2573,
	1624, 2547, 1969, 2537, 4010, 4007, 3972, 1311, 1311, 1311,
	1296, 1437, 2572, 901, 903, 905, 2536, 3524, 730, 3468,
	3519, 3533, 3499, 1311, 773, 3516, 3515, 1437, 1623, 3033,
	3904, 3537, 1103, 2020, 1623, 3472, 625, 597, 3480, 2352,
	2354, 3883, 1191, 3501, 3491, 3384, 3151, 3500, 2673, 2403,
	1869, 885, 1122, 1833, 1122, 1820, 2273, 4210, 3837, 2999,
	1124, 1124, 3549, 4237, 1191, 2896, 2897, 1005, 1005, 3518,
	2679, 1693, 4073, 1005, 1005, 1839, 3504, 4074, 1005, 1005,
	3469, 1005, 3503, 1621, 1622, 1005, 3219, 3220, 3221, 3222,
	3517, 3485, 3520, 2501, 2502, 3526, 1005, 3525, 4073, 2499,
	2500, 4009, 1505, 4074, 2725, 1322, 3590, 2310, 1504, 3394,
	3532, 2501, 1005, 2499, 3505, 2343, 3540, 3538, 3539, 3544,
	3905, 3547, 4190, 3572, 1566, 2385, 3546, 1565, 3580, 3543,
	3869, 3703, 3699, 3698, 3586, 3508, 3393, 3571, 3294, 3100,
	3555, 1707, 1706, 4224, 4195, 3560, 3963, 3864, 3822, 3819,
	1137, 3556, 3565, 3731, 3638, 3548, 3528, 3486, 1296, 1296,
	3484, 3584, 3426, 3421, 3181, 3155, 3154, 1836, 2760, 2744,
	2743, 2683, 1126, 2658, 1827, 938, 2633, 886, 1147, 2478,
	1126, 2477, 2275, 1833, 1191, 2139, 1191, 652, 2136, 2135,
	1189, 2134, 2133, 1126, 1290, 2048, 2047, 3625, 2046, 2029,
	2006, 2002, 2001, 2000, 1998, 1997, 1581, 1580, 1191, 1526,
	240, 1423, 240, 240, 1287, 1422, 240, 240, 1302, 1421,
	1420, 1419, 1418, 887, 3429, 1417, 3431, 3610, 1415, 1410,
	1005, 1409, 240, 1408, 1324, 1407, 1406, 1296, 1366, 1365,
	1364, 1363, 1362, 3628, 1361, 1356, 1350, 1348, 1347, 1182,
	3668, 1181, 1180, 3667, 1179, 1150, 1149, 1191, 3617, 1353,
	3631, 1084, 1875, 3679, 3680, 1191, 907, 3624, 893, 3842,
	3627, 1370, 3660, 1302, 3622, 3623, 1575, 240, 240, 84,
	1287, 3678, 1358, 1124, 3635, 3645, 3462, 718, 2985, 3632,
	240, 3621, 78, 1311, 1311, 1967, 3425, 1836, 1412, 3626,
	866, 3643, 3644, 3666, 1827, 4070, 1344, 3993, 725, 163,
	240, 4055, 240, 240, 3049, 1287, 240, 1302, 2592, 2120,
	1527, 1191, 3677, 3706, 3697, 2122, 1311, 652, 2980, 240,
	240, 2444, 3716, 3710, 3718, 4032, 3594, 2858, 3682, 3959,
	3800, 3715, 2313, 1711, 2937, 80, 989, 1035, 3727, 3690,
	3693, 3692, 787, 1005, 3743, 3704, 3726, 3705, 3647, 3412,
	2715, 3724, 3530, 1311, 1311, 1311, 3531, 3723, 1824, 1826,
	955, 1194, 1885, 995, 1191, 3773, 3770, 1901, 3754, 3753,
	3748, 3717, 3722, 3721, 1894, 2479, 1005, 1005, 1005, 3757,
	3740, 3737, 2363, 1012, 1009, 1828, 1830, 1011, 3466, 1010,
	1829, 1730, 1008, 1823, 1191, 3755, 3507, 3506, 2641, 1005,
	3691, 2677, 1005, 1005, 1402, 868, 3730, 1889, 2269, 2297,
	2847, 240, 1005, 1704, 970, 1839, 3741, 991, 3762, 2294,
	1005, 1005, 1142, 980, 969, 2963, 2942, 3168, 240, 3781,
	3777, 3383, 3776, 2182, 734, 1191, 2893, 1311, 3761, 3787,
	2300, 3779, 1135, 2386, 2379, 2375, 3013, 3792, 2667, 1591,
	1683, 1191, 1121, 2678, 3742, 1177, 973, 1124, 2267, 1005,
	1695, 2827, 2192, 3175, 2983, 1124, 1005, 1121, 3809, 3534,
	3535, 3536, 2472, 4077, 1005, 3803, 1839, 3302, 1124, 2010,
	1100, 3797, 1099, 1098, 1005, 1452, 4061, 1005, 4058, 3824,
	3541, 3132, 1878, 2493, 3815, 3816, 1005, 1121, 1673, 3818,
	3140, 3814, 985, 1191, 1295, 2948, 3207, 1368, 657, 997,
	1672, 2611, 3823, 2610, 1311, 1311, 3969, 3825, 1164, 1163,
	1162, 3031, 3863, 1833, 4245, 3422, 209, 2795, 1612, 1604,
	206, 3847, 1120, 208, 3846, 207, 3732, 3387, 2989, 4139,
	3440, 3124, 21, 3874, 20, 19, 105, 2385, 1120, 40,
	18, 1191, 119, 3889, 1311, 3898, 1299, 3865, 3861, 135,
	3853, 134, 2187, 133, 132, 131, 137, 130, 3882, 3871,
	129, 124, 1005, 1005, 3879, 3878, 128, 127, 126, 3916,
	3887, 3903, 125, 3902, 1833, 123, 122, 3920, 121, 120,
	118, 1005, 1005, 117, 3897, 3935, 3936, 3939, 3914, 116,
	3876, 115, 3881, 114, 2020, 113, 3912, 3911, 1005, 1839,
	3910, 112, 111, 3919, 3918, 110, 109, 3933, 3913, 108,
	3134, 107, 106, 3757, 648, 603, 645, 2385, 2385, 57,
	56, 104, 103, 1005, 17, 38, 1005, 1836, 14, 61,
	62, 16, 1806, 13, 1827, 3947, 240, 3976, 240, 33,
	83, 95, 240, 3965, 94, 1005, 34, 92, 91, 32,
	15, 3877, 3957, 89, 88, 1324, 1287, 240, 31, 240,
	29, 3948, 3949, 11, 240, 1324, 619, 9, 3982, 240,
	1324, 3964, 8, 35, 1791, 12, 652, 5, 168, 167,
	3981, 170, 1905, 166, 3951, 169, 1005, 1005, 1836, 82,
	165, 2381, 3996, 1122, 164, 1827, 3866, 1005, 81, 27,
	1005, 10, 1311, 1121, 160, 3899, 3989, 1833, 3496, 1122,
	76, 162, 1311, 1311, 3991, 161, 159, 158, 157, 77,
	4012, 4004, 4005, 4014, 74, 156, 4023, 155, 75, 1311,
	4003, 154, 25, 4008, 3902, 6, 60, 2385, 2385, 2385,
	7, 3782, 3227, 1005, 1005, 1452, 4017, 98, 4019, 99,
	4020, 4021, 4022, 4028, 4016, 4029, 36, 72, 71, 70,
	24, 59, 23, 197, 4027, 196, 195, 194, 4026, 193,
	192, 187, 186, 191, 4052, 189, 1005, 1005, 188, 1005,
	190, 4037, 185, 200, 4060, 4063, 199, 4051, 3995, 201,
	198, 203, 4050, 184, 182, 178, 4075, 177, 181, 183,
	180, 179, 4082, 4072, 176, 202, 152, 1769, 153, 4011,
	67, 151, 4065, 150, 149, 3778, 4094, 3780, 4069, 148,
	4093, 1836, 147, 4036, 1005, 1005, 1005, 146, 1827, 1988,
	145, 66, 22, 2, 1, 0, 3855, 3856, 4086, 240,
	4090, 4089, 240, 0, 4123, 4095, 0, 1005, 0, 4128,
	0, 4107, 4108, 4110, 0, 0, 4064, 4109, 0, 4068,
	3870, 0, 0, 3872, 3873, 0, 0, 0, 0, 0,
	0, 0, 4079, 0, 0, 0, 0, 4150, 2824, 2825,
	0, 0, 0, 4126, 4152, 0, 0, 0, 0, 4157,
	0, 4158, 240, 0, 1005, 0, 240, 2020, 4148, 3820,
	240, 4163, 4149, 4155, 4156, 0, 240, 0, 0, 4160,
	0, 1299, 4083, 0, 0, 4084, 0, 4159, 0, 240,
	0, 240, 4175, 240, 4182, 4173, 4171, 603, 4169, 4170,
	4181, 4060, 0, 0, 4063, 4183, 4185, 0, 0, 0,
	0, 2049, 1005, 0, 1005, 4179, 4192, 4198, 4200, 4197,
	4189, 0, 4191, 240, 4205, 0, 4196, 0, 0, 0,
	240, 0, 0, 0, 0, 4199, 0, 4201, 0, 0,
	0, 0, 0, 4204, 4219, 0, 3880, 4217, 0, 0,
	0, 0, 0, 954, 0, 0, 0, 0, 0, 1121,
	1121, 652, 0, 0, 4226, 787, 4225, 0, 2919, 2920,
	2921, 1005, 1005, 0, 0, 0, 0, 0, 4235, 1005,
	0, 1005, 1005, 4241, 0, 0, 4228, 0, 4079, 4249,
	240, 4232, 1287, 240, 4231, 4252, 4251, 0, 0, 0,
	0, 1910, 0, 3990, 1910, 0, 1911, 652, 0, 1911,
	0, 0, 4248, 0, 240, 242, 4260, 4262, 4250, 0,
	4257, 0, 4254, 4253, 240, 240, 4269, 240, 0, 240,
	0, 240, 1005, 240, 4267, 0, 0, 0, 4259, 0,
	0, 4265, 4261, 0, 4263, 0, 4264, 2608, 4270, 0,
	0, 4268, 0, 2148, 0, 4273, 2149, 0, 2150, 0,
	4274, 4242, 4243, 4276, 4280, 0, 4277, 0, 4279, 0,
	240, 0, 0, 0, 2679, 0, 0, 0, 0, 2600,
	2598, 0, 0, 0, 0, 0, 2602, 2604, 2594, 0,
	0, 634, 0, 2785, 0, 652, 0, 2206, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4275, 0, 1912, 0, 0, 1912, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1120, 0, 0,
	0, 1914, 0, 0, 1914, 2385, 2385, 0, 0, 0,
	0, 0, 1120, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1452, 1452, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1452, 1120, 2381, 2381, 0, 0, 0, 0, 0,
	0, 0, 1121, 0, 2311, 0, 0, 0, 0, 0,
	0, 968, 0, 1916, 0, 0, 1916, 0, 4138, 0,
	0, 0, 0, 0, 0, 0, 1296, 0, 2896, 2897,
	0, 2914, 2915, 2916, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2385, 2385, 2385, 2385, 2385, 2385, 2385,
	2385, 2385, 2385, 2385, 2385, 2385, 2385, 2385, 2385, 2385,
	2385, 2385, 0, 2385, 0, 0, 0, 0, 2596, 0,
	0, 0, 603, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 240, 0, 2609,
	2601, 2599, 2603, 2605, 2595, 2597, 603, 0, 0, 2454,
	0, 2911, 2607, 240, 0, 603, 0, 0, 0, 0,
	0, 0, 1299, 2381, 2381, 2381, 0, 240, 1122, 0,
	0, 1917, 0, 0, 1917, 1918, 0, 0, 1918, 0,
	0, 0, 240, 1122, 0, 2612, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1122, 3061, 0, 0, 1907, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 240, 0,
	619, 240, 0, 0, 0, 0, 1121, 0, 0, 0,
	2902, 0, 0, 0, 1121, 0, 0, 0, 2504, 0,
	0, 0, 0, 3062, 0, 0, 1908, 1121, 1120, 0,
	0, 0, 0, 0, 0, 0, 3259, 3260, 0, 0,
	0, 0, 2918, 0, 0, 2518, 0, 0, 0, 0,
	0, 0, 0, 0, 240, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2917, 954, 240, 0, 0, 954,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 240,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 240, 0, 0, 0,
	0, 1913, 2912, 0, 1913, 0, 0, 0, 2613, 0,
	0, 0, 0, 0, 0, 0, 1326, 2606, 1332, 0,
	1338, 240, 2623, 0, 3322, 3323, 3324, 3325, 3326, 3327,
	3328, 3329, 3330, 3331, 3332, 3333, 3334, 3335, 3336, 3337,
	3338, 3339, 3340, 0, 3344, 0, 1324, 0, 0, 240,
	0, 0, 0, 0, 0, 0, 240, 0, 0, 0,
	0, 0, 0, 0, 0, 2662, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2518, 0, 603, 0, 0,
	2682, 0, 0, 0, 0, 0, 240, 0, 0, 240,
	0, 0, 1453, 240, 0, 240, 0, 0, 0, 1122,
	1287, 0, 240, 240, 0, 1302, 1302, 0, 0, 1471,
	0, 1476, 0, 0, 0, 2708, 787, 0, 2518, 2518,
	0, 1485, 2913, 1490, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 240, 0, 0, 0, 0, 0, 0,
	0, 68, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 240, 1287, 240, 0, 0, 1324, 69, 1324, 0,
	0, 1287, 0, 1287, 0, 1287, 0, 0, 0, 0,
	0, 0, 0, 73, 0, 0, 0, 0, 0, 0,
	0, 0, 1547, 0, 0, 1553, 0, 0, 0, 0,
	240, 240, 240, 240, 1287, 240, 0, 240, 0, 0,
	0, 0, 0, 968, 0, 0, 0, 968, 0, 0,
	0, 0, 79, 0, 1120, 1120, 0, 0, 0, 0,
	0, 0, 1275, 0, 0, 0, 1275, 0, 240, 0,
	0, 0, 0, 0, 0, 0, 240, 0, 1621, 1622,
	0, 0, 0, 0, 2908, 2909, 2910, 0, 0, 85,
	0, 2907, 2905, 2906, 2898, 2899, 2900, 2901, 2903, 2904,
	1652, 2381, 2381, 100, 0, 0, 0, 1624, 86, 97,
	0, 0, 0, 0, 0, 1674, 1675, 1676, 1677, 1678,
	1679, 1680, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1623, 0, 0, 0, 0, 1692, 0, 0, 0,
	0, 1643, 1705, 0, 0, 0, 0, 87, 0, 1640,
	0, 0, 0, 0, 0, 1324, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2381,
	2381, 2381, 2381, 2381, 2381, 2381, 2381, 2381, 2381, 2381,
	2381, 2381, 2381, 2381, 2381, 2381, 2381, 2381, 0, 2381,
	3262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1122, 1122, 0, 0, 0,
	1646, 1647, 1648, 1649, 0, 0, 0, 0, 0, 0,
	1629, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1763, 1763, 1763, 0,
	0, 0, 2949, 2469, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1120, 1651, 1653,
	0, 0, 240, 90, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2975, 0, 0, 240, 0, 0,
	0, 0, 603, 1638, 1639, 0, 0, 603, 0, 2988,
	603, 0, 0, 603, 603, 0, 2385, 0, 0, 603,
	0, 0, 0, 171, 93, 0, 96, 240, 0, 3005,
	954, 0, 1644, 0, 0, 0, 0, 0, 0, 1324,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	210, 0, 0, 0, 0, 0, 0, 0, 782, 0,
	1324, 0, 136, 2385, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2518, 2518, 240, 0, 1302, 0, 0, 2518, 0,
	0, 3035, 212, 0, 0, 0, 0, 0, 0, 2518,
	3035, 0, 2518, 3035, 3035, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 138, 240, 240, 1302,
	240, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	175, 0, 1650, 0, 0, 0, 0, 0, 211, 0,
	1302, 240, 0, 0, 1287, 0, 0, 0, 1122, 204,
	0, 0, 1645, 0, 0, 0, 2518, 205, 3101, 2518,
	1302, 1120, 0, 2518, 2518, 1302, 0, 0, 0, 1120,
	0, 0, 2896, 2897, 0, 2914, 2915, 2916, 2988, 174,
	0, 0, 1120, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 240, 3576, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 240, 3128, 0, 0,
	3130, 2518, 2385, 0, 240, 0, 0, 0, 240, 0,
	1302, 0, 0, 0, 1275, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2662, 0,
	0, 1287, 0, 240, 0, 2911, 2518, 0, 603, 0,
	0, 0, 0, 0, 0, 2518, 0, 0, 0, 0,
	0, 0, 240, 0, 0, 0, 240, 240, 968, 0,
	0, 0, 0, 0, 1275, 0, 0, 3806, 1641, 1637,
	0, 1634, 1632, 1633, 1625, 1626, 1627, 1628, 1630, 1631,
	0, 0, 0, 240, 2662, 0, 0, 2662, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 778, 0,
	1290, 0, 0, 1189, 3833, 0, 0, 0, 0, 0,
	0, 0, 1122, 0, 2902, 0, 0, 0, 0, 3237,
	1122, 0, 1287, 240, 68, 240, 781, 780, 0, 0,
	0, 0, 0, 1122, 0, 0, 0, 0, 0, 0,
	69, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 73, 0, 240, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2917, 0,
	0, 0, 0, 0, 3279, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3295, 0, 0, 0, 79, 0, 0, 0, 0,
	0, 1275, 0, 0, 0, 0, 2912, 0, 0, 0,
	0, 0, 0, 0, 3300, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 85, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 100, 2181, 0, 2185,
	0, 86, 97, 3956, 0, 0, 2199, 0, 0, 0,
	0, 0, 0, 2208, 2209, 2210, 2211, 2212, 2213, 2214,
	2215, 2216, 2217, 2218, 2219, 2220, 2221, 2222, 2223, 2224,
	2225, 2226, 2227, 2228, 2229, 2230, 2231, 2232, 2233, 2234,
	2235, 2236, 2237, 2238, 2239, 2240, 2241, 2242, 0, 2248,
	87, 2250, 2251, 2252, 2253, 0, 0, 0, 0, 240,
	240, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3386, 0, 2277, 0, 0, 2913, 0, 0, 0,
	0, 603, 603, 0, 1692, 0, 0, 0, 2292, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1324, 2322, 2325, 2328, 2331, 0, 2335,
	2336, 2337, 2338, 2339, 2340, 2341, 1324, 1324, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2381, 0, 0, 0, 0, 2377, 0, 2388,
	2390, 2395, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 652, 0, 0, 90, 0, 0, 2381,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2908, 2909,
	2910, 0, 0, 0, 240, 2907, 2905, 2906, 2898, 2899,
	2900, 2901, 2903, 2904, 0, 0, 171, 93, 0, 96,
	0, 0, 1302, 240, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 240, 0, 0, 0, 0, 0,
	0, 0, 0, 210, 240, 0, 0, 0, 0, 1275,
	0, 782, 240, 0, 0, 136, 0, 240, 0, 0,
	0, 240, 0, 0, 0, 0, 0, 1621, 1622, 0,
	0, 0, 0, 1664, 1665, 1666, 0, 0, 0, 0,
	0, 2518, 240, 0, 0, 212, 0, 0, 0, 1652,
	0, 0, 0, 0, 0, 0, 1624, 0, 0, 2708,
	2708, 0, 0, 0, 1670, 787, 787, 2518, 0, 138,
	2662, 2662, 0, 0, 787, 2518, 0, 0, 0, 0,
	0, 2896, 2897, 175, 2914, 2915, 2916, 0, 2381, 0,
	1623, 211, 0, 0, 240, 0, 1275, 0, 0, 0,
	1643, 0, 204, 0, 0, 0, 0, 0, 1640, 0,
	205, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 779, 0, 0, 0, 0, 0, 0, 2626,
	2627, 0, 2629, 0, 0, 0, 0, 0, 0, 0,
	1014, 0, 0, 0, 2911, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3595, 1275, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1646,
	1647, 1648, 1649, 0, 0, 0, 0, 0, 0, 1629,
	0, 1275, 0, 0, 241, 241, 241, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2896, 2897, 0, 2914,
	2915, 2916, 0, 0, 0, 0, 0, 0, 1661, 3630,
	241, 1671, 0, 0, 0, 0, 240, 1651, 1653, 0,
	0, 0, 1324, 0, 240, 0, 0, 0, 0, 0,
	0, 3640, 0, 2902, 241, 0, 0, 240, 0, 0,
	0, 0, 1638, 1639, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1659, 0, 2518, 2518, 2518, 0, 0, 0, 0, 2911,
	0, 1644, 0, 0, 0, 1324, 2759, 0, 0, 0,
	1275, 0, 0, 2518, 0, 3035, 0, 2917, 1324, 1324,
	240, 1302, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1302, 240, 1302, 240, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2518, 0, 2518, 240,
	0, 0, 0, 0, 0, 2912, 1674, 1675, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1275, 0,
	0, 0, 0, 0, 2518, 0, 0, 0, 0, 3734,
	0, 0, 0, 0, 0, 0, 0, 240, 2902, 0,
	0, 0, 0, 0, 0, 0, 240, 0, 0, 68,
	0, 1650, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2807, 2808, 0, 0, 69, 0, 2814, 0, 0,
	0, 1645, 0, 0, 0, 0, 0, 1189, 0, 0,
	1324, 73, 0, 0, 0, 0, 2828, 2829, 0, 0,
	0, 0, 2292, 0, 0, 0, 1662, 0, 0, 0,
	0, 2836, 0, 0, 0, 0, 0, 3798, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2850, 0, 0,
	79, 0, 0, 0, 0, 2913, 0, 990, 102, 0,
	2912, 0, 0, 0, 2862, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3798, 0,
	0, 0, 0, 0, 0, 0, 0, 85, 0, 0,
	0, 0, 0, 0, 2206, 0, 0, 0, 0, 0,
	0, 100, 0, 0, 0, 0, 86, 97, 0, 0,
	0, 2518, 0, 3035, 0, 0, 3827, 0, 0, 1660,
	0, 0, 0, 0, 240, 0, 1663, 1641, 1637, 0,
	1634, 1632, 1633, 1625, 1626, 1627, 1628, 1630, 1631, 2395,
	2395, 2395, 0, 0, 102, 0, 2206, 0, 0, 0,
	652, 0, 0, 0, 1763, 87, 0, 0, 0, 1287,
	0, 0, 2953, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1302, 240, 1621, 1622, 2908, 2909, 2910,
	2913, 0, 0, 0, 2907, 2905, 2906, 2898, 2899, 2900,
	2901, 2903, 2904, 3827, 0, 0, 0, 1652, 0, 0,
	0, 2518, 0, 0, 1624, 0, 0, 0, 0, 0,
	0, 0, 3907, 0, 0, 0, 0, 0, 0, 0,
	0, 929, 0, 0, 1324, 0, 0, 0, 0, 0,
	0, 0, 949, 0, 0, 0, 0, 954, 1623, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1643, 0,
	0, 954, 0, 240, 240, 0, 1640, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1110, 0, 0, 0, 0, 0, 0, 3300, 0, 3052,
	0, 90, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3827, 0, 0, 0, 0, 0, 0,
	0, 0, 2908, 2909, 2910, 0, 0, 3257, 0, 2907,
	2905, 2906, 2898, 2899, 2900, 2901, 2903, 2904, 0, 0,
	0, 171, 93, 0, 96, 0, 0, 1646, 1647, 1648,
	1649, 0, 0, 0, 0, 0, 0, 1629, 0, 0,
	240, 0, 0, 0, 0, 0, 0, 0, 210, 0,
	0, 0, 0, 0, 0, 0, 782, 0, 0, 3734,
	136, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 240, 0, 1651, 1653, 0, 0, 0,
	0, 0, 3035, 0, 0, 0, 0, 0, 0, 0,
	212, 0, 0, 0, 1275, 0, 0, 0, 0, 0,
	1638, 1639, 0, 0, 0, 0, 0, 0, 1324, 0,
	1324, 0, 0, 0, 138, 0, 241, 1195, 241, 241,
	0, 1195, 241, 241, 0, 1195, 1275, 0, 175, 1644,
	0, 0, 0, 0, 0, 4046, 211, 0, 241, 0,
	0, 1275, 1324, 0, 0, 240, 0, 204, 0, 0,
	0, 0, 0, 0, 0, 205, 0, 0, 1195, 0,
	0, 1275, 240, 2518, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 968, 0, 174, 0, 0,
	240, 1195, 0, 241, 241, 0, 0, 0, 0, 968,
	0, 0, 0, 0, 0, 0, 241, 0, 0, 0,
	0, 0, 0, 0, 3300, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 241, 0, 241, 241,
	0, 0, 241, 0, 1195, 0, 0, 0, 0, 1650,
	1195, 0, 0, 0, 1195, 241, 241, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2199, 1195, 1645,
	0, 0, 0, 3254, 3255, 0, 0, 3258, 0, 0,
	0, 3261, 0, 1275, 0, 0, 0, 0, 0, 0,
	3265, 0, 0, 0, 0, 0, 3827, 0, 0, 3272,
	0, 0, 2953, 0, 0, 0, 1621, 1622, 0, 1654,
	1655, 1656, 1664, 1665, 1666, 0, 0, 3284, 1195, 0,
	0, 0, 0, 0, 0, 0, 0, 1324, 1652, 2518,
	1275, 0, 0, 0, 0, 1624, 0, 3307, 3308, 0,
	3309, 3310, 3311, 1670, 0, 0, 0, 241, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3317, 0,
	0, 0, 3319, 0, 241, 0, 0, 0, 0, 1623,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1643,
	0, 0, 0, 0, 0, 0, 0, 1640, 0, 0,
	0, 0, 0, 3347, 3348, 1641, 1637, 0, 1634, 1632,
	1633, 1625, 1626, 1627, 1628, 1630, 1631, 0, 0, 0,
	0, 3359, 0, 0, 0, 2518, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3368, 0, 0, 2708,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2708, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1646, 1647,
	1648, 1649, 0, 0, 0, 0, 0, 0, 1629, 0,
	0, 0, 1275, 0, 0, 1275, 0, 102, 0, 102,
	0, 102, 0, 0, 0, 0, 0, 0, 3406, 0,
	0, 0, 0, 0, 0, 0, 0, 1661, 0, 0,
	1671, 0, 0, 0, 3415, 3418, 1651, 1653, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1667, 0, 1668, 0, 0, 0, 0, 0,
	0, 1638, 1639, 0, 0, 3439, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1275, 0, 0, 1659,
	0, 0, 0, 102, 1621, 1622, 0, 949, 102, 102,
	1644, 0, 0, 1275, 0, 0, 0, 0, 0, 0,
	102, 0, 102, 0, 0, 0, 1652, 0, 0, 0,
	0, 0, 102, 1624, 102, 0, 0, 0, 241, 0,
	1669, 0, 0, 0, 0, 0, 0, 0, 0, 1195,
	0, 0, 0, 241, 241, 241, 0, 0, 0, 0,
	241, 0, 0, 0, 0, 241, 0, 1623, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1643, 1195, 0,
	0, 0, 0, 0, 0, 1640, 0, 1763, 0, 0,
	0, 102, 0, 0, 0, 0, 3527, 0, 0, 1195,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1650, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1645, 0, 0, 0, 0, 0, 3256, 0, 0, 0,
	0, 0, 0, 1275, 0, 0, 0, 0, 0, 2896,
	2897, 0, 2914, 2915, 2916, 1662, 1646, 1647, 1648, 1649,
	0, 0, 0, 0, 0, 0, 1629, 0, 1621, 1622,
	3268, 0, 0, 0, 3573, 3574, 0, 0, 0, 929,
	3578, 3579, 0, 0, 0, 3582, 3583, 0, 0, 0,
	1652, 0, 3587, 0, 0, 0, 0, 1624, 0, 1686,
	0, 0, 0, 3591, 1651, 1653, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1691, 0, 0, 3596,
	1697, 0, 2911, 0, 0, 0, 0, 0, 0, 1638,
	1639, 1623, 0, 0, 0, 241, 1195, 1195, 241, 0,
	0, 1643, 0, 0, 0, 0, 1195, 0, 1660, 1640,
	0, 0, 1635, 1636, 1642, 1663, 1641, 1637, 1644, 1634,
	1632, 1633, 1625, 1626, 1627, 1628, 1630, 1631, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 241, 0,
	0, 0, 241, 0, 0, 0, 241, 0, 0, 0,
	2813, 0, 241, 0, 0, 0, 0, 0, 0, 0,
	0, 2902, 0, 0, 0, 241, 0, 241, 0, 241,
	1646, 1647, 1648, 1649, 0, 0, 0, 0, 0, 0,
	1629, 0, 0, 0, 0, 0, 0, 3418, 0, 1783,
	0, 1786, 0, 102, 0, 0, 0, 0, 0, 241,
	0, 0, 0, 0, 0, 0, 241, 0, 1650, 0,
	0, 0, 0, 0, 0, 2917, 0, 0, 1651, 1653,
	2896, 2897, 0, 2914, 2915, 2916, 0, 0, 1645, 0,
	0, 0, 0, 0, 1195, 0, 1195, 1275, 1195, 0,
	0, 3267, 0, 1638, 1639, 0, 0, 0, 0, 0,
	0, 0, 0, 2912, 1195, 1195, 0, 0, 0, 1275,
	0, 0, 0, 0, 0, 1195, 241, 0, 0, 241,
	0, 0, 1644, 0, 0, 0, 0, 1195, 0, 1195,
	1195, 1195, 0, 0, 0, 0, 0, 0, 0, 0,
	241, 0, 0, 2911, 0, 0, 0, 0, 0, 0,
	241, 241, 0, 241, 0, 241, 0, 241, 0, 241,
	3418, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3793, 3794, 3795, 241, 0, 0, 0,
	0, 0, 0, 0, 1641, 1637, 0, 1634, 1632, 1633,
	1625, 1626, 1627, 1628, 1630, 1631, 2199, 0, 0, 3804,
	3805, 0, 1650, 2913, 0, 0, 0, 0, 0, 1275,
	0, 1275, 2902, 0, 0, 0, 0, 3813, 0, 0,
	0, 0, 1645, 0, 1195, 0, 0, 0, 0, 0,
	0, 0, 0, 1275, 0, 1621, 1622, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1652, 0, 0,
	0, 0, 0, 3418, 1624, 0, 2917, 0, 0, 0,
	0, 3852, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3859, 1275, 0, 954, 1116, 0, 0, 0, 0,
	1275, 0, 0, 3867, 0, 0, 0, 0, 1623, 0,
	0, 0, 0, 0, 2912, 0, 0, 0, 1643, 0,
	0, 1195, 0, 0, 0, 0, 1640, 0, 0, 0,
	0, 0, 0, 0, 0, 2908, 2909, 2910, 0, 235,
	235, 599, 2907, 2905, 2906, 2898, 2899, 2900, 2901, 2903,
	2904, 0, 0, 0, 0, 0, 1275, 0, 1641, 1637,
	0, 1634, 1632, 1633, 1625, 1626, 1627, 1628, 1630, 1631,
	0, 0, 0, 0, 0, 0, 0, 2806, 0, 3418,
	3418, 949, 0, 949, 0, 0, 0, 0, 0, 0,
	1195, 0, 0, 0, 0, 0, 0, 1646, 1647, 1648,
	1649, 0, 0, 0, 0, 0, 0, 1629, 0, 1275,
	0, 0, 0, 241, 0, 0, 1195, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 241, 0,
	0, 0, 0, 0, 2913, 0, 0, 0, 0, 1275,
	3968, 0, 0, 3971, 0, 1651, 1653, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3418, 0, 0, 0, 0, 0, 0, 0,
	1638, 1639, 0, 0, 241, 0, 0, 241, 0, 0,
	1275, 0, 0, 0, 0, 1195, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1275, 0, 0, 1644,
	0, 0, 0, 954, 954, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3418, 1195, 0, 3418, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	241, 929, 968, 0, 929, 929, 0, 0, 0, 0,
	0, 0, 241, 0, 0, 0, 0, 0, 1275, 0,
	0, 0, 0, 0, 0, 241, 2908, 2909, 2910, 0,
	68, 2199, 0, 2907, 2905, 2906, 2898, 2899, 2900, 2901,
	2903, 2904, 241, 1195, 0, 0, 69, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1195, 0, 2266,
	0, 0, 73, 0, 954, 0, 1275, 241, 0, 1650,
	0, 0, 0, 1001, 0, 949, 0, 0, 0, 0,
	0, 0, 0, 0, 1691, 0, 0, 0, 1691, 1645,
	0, 0, 0, 0, 0, 241, 0, 0, 0, 0,
	0, 79, 241, 0, 0, 0, 0, 0, 0, 0,
	0, 4106, 4106, 4106, 0, 0, 0, 239, 239, 239,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 241, 0, 4127, 241, 0, 0, 85, 241,
	0, 241, 0, 691, 0, 0, 0, 0, 241, 241,
	0, 0, 100, 1195, 1195, 0, 1195, 86, 97, 0,
	1110, 0, 0, 0, 0, 0, 0, 691, 1195, 0,
	0, 0, 0, 0, 0, 0, 1786, 0, 0, 241,
	0, 4106, 0, 1195, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 241, 0, 241,
	0, 0, 0, 0, 0, 0, 87, 0, 102, 0,
	0, 968, 968, 0, 0, 1641, 1637, 0, 1634, 1632,
	1633, 1625, 1626, 1627, 1628, 1630, 1631, 0, 0, 3418,
	0, 3418, 0, 0, 0, 0, 241, 241, 241, 241,
	0, 241, 0, 241, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 144, 0, 0, 0, 0,
	0, 0, 68, 0, 44, 43, 0, 0, 0, 0,
	0, 0, 0, 0, 241, 0, 0, 0, 69, 0,
	0, 139, 241, 0, 0, 0, 1123, 0, 4106, 4236,
	0, 0, 0, 0, 73, 0, 4240, 0, 0, 0,
	0, 0, 968, 0, 0, 63, 0, 0, 0, 0,
	102, 0, 46, 0, 141, 0, 0, 0, 0, 0,
	0, 0, 1621, 1622, 0, 0, 0, 0, 0, 0,
	0, 45, 90, 79, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 102, 1652, 0, 0, 0, 0, 0,
	0, 1624, 0, 0, 0, 0, 0, 48, 64, 0,
	0, 0, 0, 0, 0, 49, 0, 0, 0, 0,
	85, 0, 171, 93, 142, 96, 0, 0, 102, 0,
	0, 102, 47, 102, 100, 1623, 0, 0, 0, 86,
	97, 0, 0, 0, 0, 1643, 0, 0, 0, 210,
	0, 0, 0, 1640, 0, 0, 0, 782, 0, 0,
	0, 136, 0, 0, 0, 0, 0, 0, 0, 0,
	50, 0, 0, 0, 102, 0, 0, 102, 0, 0,
	0, 1186, 0, 0, 0, 0, 0, 1294, 87, 0,
	0, 212, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 102, 0, 0, 138, 0, 0, 0, 0,
	0, 0, 0, 0, 1646, 1647, 1648, 1649, 0, 175,
	0, 0, 0, 0, 1629, 0, 0, 211, 0, 1195,
	0, 0, 0, 0, 0, 0, 0, 0, 204, 0,
	0, 0, 0, 0, 0, 0, 205, 0, 0, 0,
	0, 1404, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1195, 1651, 1653, 0, 102, 0, 0, 1465, 0,
	0, 1427, 0, 1427, 1427, 0, 1195, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1638, 1639, 0,
	1469, 1470, 0, 0, 0, 0, 1195, 0, 0, 0,
	0, 0, 0, 0, 90, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 51, 1644, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 241,
	0, 0, 55, 0, 0, 0, 0, 0, 65, 0,
	0, 0, 0, 54, 171, 93, 0, 96, 0, 0,
	0, 52, 0, 1195, 0, 143, 0, 0, 0, 0,
	0, 0, 53, 241, 241, 0, 241, 0, 0, 0,
	0, 210, 0, 241, 0, 2266, 0, 0, 0, 58,
	0, 0, 1574, 136, 0, 0, 0, 241, 1195, 0,
	0, 0, 0, 0, 0, 0, 1691, 140, 1195, 0,
	0, 0, 0, 0, 0, 0, 0, 1195, 0, 0,
	0, 0, 1195, 212, 0, 0, 1650, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1195, 0, 0, 1645, 138, 241, 1195,
	0, 1195, 0, 0, 0, 1195, 0, 0, 0, 0,
	0, 175, 241, 0, 0, 0, 0, 0, 0, 211,
	241, 0, 0, 1195, 241, 0, 0, 0, 0, 0,
	204, 0, 0, 1195, 0, 0, 0, 0, 205, 239,
	0, 239, 239, 0, 0, 239, 239, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	174, 691, 0, 3, 0, 0, 0, 0, 241, 0,
	0, 0, 241, 241, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1195, 1195, 0, 0, 1110, 0, 0, 0, 241,
	0, 0, 0, 0, 0, 0, 239, 239, 0, 0,
	1110, 0, 0, 1195, 0, 0, 0, 0, 0, 239,
	0, 0, 1641, 1637, 0, 1634, 1632, 1633, 1625, 1626,
	1627, 1628, 1630, 1631, 0, 0, 0, 0, 0, 239,
	0, 239, 239, 0, 0, 239, 0, 1195, 0, 241,
	1195, 241, 0, 0, 0, 0, 0, 0, 239, 239,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1621, 1622, 0, 1654, 1655, 1656, 1664, 1665, 1666, 0,
	0, 0, 0, 1801, 241, 0, 0, 0, 0, 0,
	0, 1657, 1652, 0, 0, 0, 0, 0, 1810, 1624,
	1294, 0, 0, 0, 0, 0, 0, 1670, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1195, 0, 102, 102, 0, 0, 102, 0, 0,
	0, 0, 0, 1623, 0, 0, 0, 0, 1195, 0,
	0, 0, 0, 1643, 0, 0, 0, 0, 0, 0,
	239, 1640, 0, 0, 0, 0, 0, 0, 0, 102,
	102, 0, 0, 102, 0, 0, 0, 239, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1646, 1647, 1648, 1649, 0, 0, 0, 0,
	0, 0, 1629, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1037, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1110, 0, 0, 949,
	0, 1661, 0, 0, 1671, 0, 0, 0, 1195, 0,
	1651, 1653, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1667, 0, 1668, 0,
	102, 102, 0, 0, 0, 1638, 1639, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1659, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1644, 0, 0, 0, 0, 0,
	0, 0, 0, 2008, 0, 0, 0, 2015, 0, 0,
	0, 0, 0, 0, 0, 68, 0, 2026, 0, 0,
	0, 0, 0, 0, 1669, 0, 0, 0, 0, 0,
	1404, 69, 2037, 0, 2037, 0, 0, 0, 0, 0,
	0, 0, 1658, 0, 0, 0, 0, 73, 0, 0,
	241, 0, 0, 0, 0, 1785, 0, 1123, 0, 0,
	0, 239, 0, 0, 1427, 0, 1195, 0, 0, 241,
	0, 1294, 0, 0, 0, 0, 239, 1785, 239, 0,
	241, 0, 0, 691, 0, 0, 79, 0, 691, 0,
	241, 0, 0, 0, 1650, 0, 0, 0, 241, 0,
	0, 0, 0, 241, 0, 0, 0, 241, 0, 0,
	0, 0, 0, 1195, 1645, 0, 0, 0, 0, 0,
	0, 0, 0, 85, 0, 0, 0, 0, 1127, 0,
	0, 2015, 0, 0, 2096, 0, 0, 100, 0, 1662,
	0, 0, 86, 97, 0, 0, 0, 1195, 1195, 1195,
	0, 0, 0, 0, 0, 2115, 0, 0, 0, 0,
	0, 0, 0, 1195, 0, 0, 2125, 0, 2127, 0,
	2129, 0, 2131, 0, 2132, 0, 0, 0, 0, 0,
	241, 0, 1195, 0, 0, 0, 0, 0, 0, 0,
	0, 87, 0, 0, 102, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1195, 0, 0, 0, 0, 0,
	0, 2153, 1110, 1110, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1660, 0, 0, 0, 1635, 1636, 1642, 1663,
	1641, 1637, 0, 1634, 1632, 1633, 1625, 1626, 1627, 1628,
	1630, 1631, 0, 0, 0, 0, 2871, 0, 239, 0,
	2872, 691, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 239, 0, 0, 0, 239, 0, 90, 0, 239,
	0, 0, 0, 0, 1195, 239, 1195, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 239, 0,
	239, 0, 239, 0, 0, 0, 0, 0, 1195, 0,
	0, 0, 0, 0, 0, 0, 0, 171, 93, 0,
	96, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 239, 0, 0, 0, 0, 0, 0, 239,
	0, 0, 0, 0, 210, 0, 241, 0, 0, 0,
	0, 0, 782, 0, 0, 0, 136, 1195, 0, 241,
	0, 241, 0, 0, 0, 1195, 0, 0, 0, 102,
	0, 0, 0, 0, 0, 241, 0, 0, 0, 0,
	0, 0, 245, 0, 0, 0, 212, 0, 0, 0,
	0, 0, 0, 1195, 1195, 1110, 0, 0, 2451, 239,
	0, 0, 239, 0, 0, 0, 0, 0, 0, 0,
	138, 0, 0, 241, 0, 0, 0, 0, 0, 0,
	0, 1195, 241, 239, 175, 0, 1195, 0, 0, 0,
	0, 0, 211, 691, 239, 0, 239, 0, 239, 0,
	239, 0, 239, 204, 102, 0, 0, 0, 0, 0,
	0, 205, 683, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2026, 1195, 1195, 1195, 0, 0, 0, 0,
	0, 0, 0, 1463, 1195, 0, 683, 0, 0, 239,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1195, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1127, 0, 0, 1195, 1127, 1195, 0, 0,
	1127, 0, 0, 0, 0, 0, 0, 1294, 0, 0,
	0, 1195, 0, 0, 0, 0, 0, 0, 0, 0,
	241, 0, 0, 102, 0, 0, 0, 0, 0, 1110,
	0, 0, 0, 1127, 0, 0, 0, 1110, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1127, 0, 0, 0,
	2015, 0, 0, 1195, 0, 0, 0, 2026, 0, 0,
	241, 0, 0, 0, 1195, 1195, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2684, 0, 1127,
	1427, 0, 0, 0, 1427, 1127, 1427, 0, 0, 1127,
	0, 1195, 0, 0, 1195, 0, 0, 0, 0, 0,
	0, 0, 0, 1127, 0, 0, 1123, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1123, 0, 2737, 0, 0, 0, 0, 241,
	241, 0, 0, 0, 0, 0, 239, 0, 0, 102,
	0, 0, 2746, 0, 2749, 0, 0, 0, 0, 102,
	0, 239, 0, 1127, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 102, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2771, 1294, 2773, 1294, 0, 2776, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 239, 0, 0,
	239, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 241, 0, 0, 1427,
	0, 0, 0, 0, 0, 0, 0, 2804, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 241,
	0, 0, 1195, 239, 0, 0, 0, 0, 0, 0,
	0, 0, 1195, 1195, 0, 239, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 239, 1195,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 239, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	691, 241, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 241, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 239, 0,
	0, 0, 0, 0, 0, 239, 241, 0, 0, 0,
	0, 0, 1621, 1622, 0, 1654, 1655, 1656, 1664, 1665,
	1666, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1657, 1652, 239, 0, 0, 239, 0,
	0, 1624, 239, 0, 239, 0, 0, 0, 0, 1670,
	0, 239, 239, 0, 0, 0, 0, 0, 0, 0,
	0, 2266, 0, 0, 0, 0, 0, 1127, 0, 1127,
	0, 0, 0, 0, 0, 1623, 0, 0, 0, 0,
	0, 0, 239, 0, 1127, 1643, 0, 0, 0, 0,
	0, 0, 0, 1640, 0, 0, 0, 0, 0, 1840,
	239, 0, 239, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1127, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1192,
	0, 0, 0, 1192, 1127, 0, 0, 1312, 0, 239,
	239, 239, 239, 0, 239, 0, 239, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1646, 1647, 1648, 1649, 0, 0,
	1312, 0, 0, 0, 1629, 0, 0, 239, 0, 0,
	0, 102, 0, 0, 3026, 239, 0, 0, 0, 0,
	0, 0, 0, 1312, 0, 0, 0, 0, 0, 0,
	0, 0, 102, 1661, 0, 0, 1671, 0, 0, 0,
	0, 0, 1651, 1653, 0, 0, 0, 0, 3070, 3072,
	764, 2026, 0, 0, 0, 0, 0, 0, 1667, 0,
	1668, 0, 0, 0, 0, 0, 1312, 1638, 1639, 0,
	0, 0, 1312, 0, 748, 0, 1312, 0, 0, 0,
	0, 0, 0, 0, 0, 1659, 0, 0, 0, 0,
	1312, 0, 0, 0, 0, 0, 1644, 0, 0, 0,
	0, 1127, 1127, 0, 0, 0, 0, 0, 0, 0,
	0, 1127, 749, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 750, 0, 0, 1669, 0, 0, 0,
	0, 0, 0, 0, 0, 102, 0, 0, 102, 0,
	1312, 0, 0, 751, 1658, 3141, 0, 0, 0, 3145,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 770, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 752, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1427, 0, 0, 1650, 1294, 1294, 0,
	0, 0, 0, 0, 0, 753, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1645, 0, 0, 0,
	0, 1123, 0, 0, 3203, 754, 0, 0, 755, 0,
	0, 0, 0, 0, 0, 0, 1123, 677, 0, 0,
	0, 1662, 0, 0, 0, 0, 0, 0, 0, 1127,
	0, 1127, 0, 1127, 0, 0, 0, 0, 0, 0,
	0, 769, 0, 0, 0, 0, 1785, 0, 0, 1127,
	1127, 0, 0, 0, 3240, 0, 1294, 0, 0, 0,
	1127, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1127, 0, 1127, 1127, 1127, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3252,
	0, 0, 0, 0, 0, 766, 0, 0, 0, 0,
	0, 0, 239, 0, 0, 0, 0, 0, 0, 1006,
	0, 0, 0, 0, 1660, 0, 0, 0, 1635, 1636,
	1642, 1663, 1641, 1637, 0, 1634, 1632, 1633, 1625, 1626,
	1627, 1628, 1630, 1631, 0, 0, 239, 239, 2288, 239,
	0, 0, 2289, 0, 0, 0, 1785, 0, 0, 0,
	0, 0, 757, 0, 0, 0, 0, 0, 0, 0,
	239, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 776, 0, 758, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1840, 1840, 1127,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1192, 0, 0, 0, 0, 0, 676, 0, 0,
	0, 239, 683, 0, 759, 0, 0, 683, 774, 775,
	772, 0, 0, 0, 0, 691, 767, 0, 0, 760,
	1312, 0, 0, 239, 0, 0, 0, 239, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1192, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1123, 0, 0, 0, 761, 768, 0, 0,
	0, 0, 0, 0, 0, 762, 1127, 0, 0, 0,
	0, 239, 0, 0, 0, 239, 239, 0, 763, 0,
	0, 0, 0, 771, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 678, 0, 0, 0,
	0, 0, 239, 0, 0, 0, 0, 765, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1127, 0,
	0, 0, 0, 0, 0, 1127, 0, 0, 0, 0,
	0, 0, 0, 0, 1127, 0, 0, 0, 0, 0,
	0, 0, 239, 0, 239, 0, 0, 0, 0, 0,
	0, 1127, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1312, 1312,
	0, 0, 0, 0, 0, 0, 0, 239, 1192, 0,
	0, 0, 0, 0, 2026, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2026, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3495, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2026, 0,
	1127, 0, 3509, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1127, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1840, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3558, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1127, 0,
	0, 0, 0, 0, 0, 0, 1312, 0, 1312, 0,
	1312, 0, 1127, 0, 0, 0, 0, 0, 1123, 1123,
	0, 0, 0, 0, 0, 0, 1312, 1312, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1312, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1312,
	0, 1312, 1312, 1312, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 683, 0, 0, 0, 0, 0, 0, 0,
	0, 1621, 1622, 0, 1654, 1655, 1656, 1664, 1665, 1666,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1657, 1652, 0, 0, 0, 0, 1127, 1127,
	1624, 1127, 0, 0, 0, 0, 0, 0, 1670, 0,
	0, 0, 0, 1127, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1127, 0,
	0, 0, 0, 0, 1623, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1643, 0, 0, 0, 0, 0,
	0, 0, 1640, 239, 0, 0, 1192, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 239, 0, 0, 0, 0, 0, 0, 0,
	0, 3681, 0, 239, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 239, 2026, 0, 0, 0, 0, 0,
	0, 239, 0, 0, 0, 0, 239, 0, 0, 0,
	239, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1646, 1647, 1648, 1649, 0, 0, 0,
	0, 1123, 0, 1629, 0, 0, 1193, 0, 0, 0,
	1193, 0, 0, 1192, 1313, 0, 0, 0, 2026, 0,
	0, 0, 0, 0, 0, 0, 0, 3749, 0, 0,
	0, 0, 1661, 0, 0, 1671, 0, 0, 0, 0,
	0, 1651, 1653, 0, 0, 0, 0, 1313, 0, 0,
	0, 0, 0, 239, 0, 0, 0, 1667, 0, 1668,
	0, 0, 0, 0, 0, 0, 1638, 1639, 0, 0,
	1313, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1192, 0, 1659, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1644, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1192, 0,
	0, 0, 0, 1313, 0, 0, 0, 0, 0, 1313,
	0, 0, 0, 1313, 0, 1669, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1313, 0, 0,
	0, 0, 0, 1658, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3834, 0, 1312, 0, 0,
	0, 0, 0, 0, 0, 1123, 0, 1313, 0, 0,
	0, 0, 0, 1123, 0, 1650, 0, 0, 0, 0,
	0, 0, 0, 1127, 1127, 0, 1785, 1192, 0, 0,
	0, 0, 0, 0, 0, 1645, 0, 0, 1127, 0,
	0, 0, 0, 0, 0, 2026, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1127, 0, 0, 0,
	1662, 0, 0, 0, 0, 0, 0, 0, 1127, 0,
	0, 1127, 0, 0, 0, 0, 0, 0, 0, 239,
	0, 0, 0, 0, 0, 1192, 0, 1840, 0, 0,
	0, 1127, 239, 0, 239, 0, 0, 0, 0, 1312,
	0, 0, 0, 0, 0, 0, 0, 0, 239, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3946, 1294, 0, 0, 0, 0,
	0, 1840, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 239, 0, 1127, 0,
	0, 0, 0, 1660, 0, 239, 0, 1635, 1636, 1642,
	1663, 1641, 1637, 0, 1634, 1632, 1633, 1625, 1626, 1627,
	1628, 1630, 1631, 0, 0, 0, 0, 0, 0, 0,
	0, 3601, 0, 1127, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1127, 0, 1312, 1312, 0, 1312, 0,
	0, 0, 1127, 0, 0, 0, 0, 1127, 0, 0,
	1312, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1312, 0, 0, 1127, 0,
	0, 0, 0, 0, 1127, 0, 1127, 0, 0, 0,
	1127, 0, 0, 0, 4013, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1127, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1127, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1127, 0, 0, 0, 1193, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 239, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4054, 1313, 0, 0,
	0, 0, 0, 0, 0, 0, 1127, 1127, 0, 0,
	0, 0, 0, 4076, 0, 0, 0, 0, 1193, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1127, 0,
	0, 4088, 0, 239, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1127, 0, 0, 1127, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 708, 0, 0,
	0, 0, 239, 239, 0, 0, 0, 1621, 1622, 1840,
	1654, 1655, 1656, 1664, 1665, 1666, 0, 0, 0, 0,
	0, 709, 0, 0, 0, 0, 1127, 0, 0, 1652,
	0, 0, 0, 0, 0, 0, 1624, 0, 0, 0,
	0, 0, 0, 1127, 1670, 1313, 1313, 0, 0, 0,
	0, 0, 0, 1840, 1840, 1193, 0, 0, 0, 710,
	0, 727, 0, 0, 0, 0, 0, 0, 0, 0,
	1623, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1643, 0, 1840, 1840, 0, 711, 0, 0, 1640, 239,
	712, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1192, 0, 0, 0, 0, 0, 0, 0, 0,
	735, 0, 0, 1840, 0, 0, 713, 0, 0, 0,
	0, 0, 239, 0, 0, 0, 0, 0, 0, 733,
	0, 0, 0, 1192, 0, 0, 0, 0, 0, 0,
	1127, 1127, 0, 0, 0, 0, 0, 0, 1192, 0,
	0, 0, 714, 0, 0, 0, 0, 0, 0, 1646,
	1647, 1648, 1649, 0, 0, 0, 0, 0, 1192, 1629,
	0, 0, 715, 1127, 0, 716, 0, 0, 0, 0,
	737, 0, 0, 0, 677, 0, 0, 0, 0, 0,
	0, 0, 0, 1313, 239, 1313, 0, 1313, 1661, 0,
	0, 1671, 0, 0, 0, 0, 0, 1651, 1653, 0,
	0, 239, 0, 1313, 1313, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1313, 1312, 0, 0, 0, 239,
	0, 0, 1638, 1639, 0, 0, 1313, 0, 1313, 1313,
	1313, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1659, 0, 0, 736, 0, 0, 0, 0, 0, 0,
	1312, 1644, 731, 0, 0, 0, 0, 0, 0, 0,
	1192, 0, 0, 0, 0, 0, 0, 0, 0, 1312,
	0, 0, 0, 0, 1312, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1127, 0, 0, 0, 1312, 0, 0, 717, 0,
	0, 1312, 0, 1312, 0, 0, 0, 1192, 0, 719,
	1840, 0, 0, 0, 683, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1312, 0, 0, 0, 0,
	0, 0, 720, 0, 0, 1312, 0, 0, 1127, 0,
	0, 0, 0, 1193, 0, 0, 0, 0, 0, 0,
	0, 1650, 0, 1127, 0, 0, 0, 0, 0, 0,
	0, 0, 1621, 1622, 676, 1654, 1655, 1656, 1664, 1665,
	1666, 1645, 1127, 1127, 1127, 707, 0, 728, 0, 0,
	0, 0, 0, 1657, 1652, 0, 721, 0, 1127, 0,
	0, 1624, 0, 1312, 1312, 0, 1662, 0, 0, 1670,
	0, 0, 0, 0, 0, 0, 0, 1127, 0, 726,
	0, 0, 0, 0, 0, 1312, 0, 0, 0, 0,
	0, 0, 0, 722, 0, 1623, 740, 0, 739, 1127,
	1193, 0, 723, 0, 0, 1643, 0, 0, 0, 0,
	1840, 0, 0, 1640, 0, 724, 0, 0, 0, 1192,
	732, 0, 1192, 0, 0, 741, 0, 738, 0, 0,
	0, 0, 0, 678, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1660,
	0, 0, 0, 1635, 1636, 1642, 1663, 1641, 1637, 1193,
	1634, 1632, 1633, 1625, 1626, 1627, 1628, 1630, 1631, 0,
	0, 0, 0, 0, 1646, 1647, 1648, 1649, 0, 0,
	0, 0, 0, 1192, 1629, 1193, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1127, 0, 0,
	1192, 0, 0, 0, 0, 1127, 0, 0, 0, 1127,
	0, 1127, 0, 1661, 0, 0, 1671, 0, 1127, 0,
	0, 0, 1651, 1653, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1127, 0, 0, 0, 0, 1667, 0,
	1668, 0, 0, 0, 0, 0, 0, 1638, 1639, 0,
	0, 0, 0, 0, 1313, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1659, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1644, 0, 0, 0,
	0, 0, 1127, 0, 1193, 0, 0, 0, 0, 0,
	1127, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1669, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1127, 1127,
	0, 0, 0, 0, 1658, 0, 0, 0, 0, 0,
	1192, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1193, 0, 0, 0, 1127, 0, 0, 0,
	0, 1127, 0, 0, 0, 0, 1313, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1650, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1127, 1127,
	1127, 0, 0, 0, 0, 0, 1645, 0, 0, 1127,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1662, 0, 0, 0, 0, 0, 0, 0, 1127,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1840, 0, 1313, 1313, 0, 1313, 0, 0, 1312, 0,
	0, 0, 0, 0, 0, 0, 0, 1313, 0, 0,
	1127, 0, 1127, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1313, 0, 0, 0, 1127, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1312, 0, 0, 0, 0,
	0, 1840, 0, 0, 1660, 0, 0, 0, 1635, 1636,
	1642, 1663, 1641, 1637, 0, 1634, 1632, 1633, 1625, 1626,
	1627, 1628, 1630, 1631, 0, 0, 0, 0, 1127, 1312,
	1312, 1312, 3270, 0, 0, 0, 0, 0, 0, 1127,
	1127, 0, 0, 0, 0, 1312, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1192, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1127, 0, 0, 1127,
	0, 0, 0, 0, 0, 0, 1192, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1840, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1621, 1622, 0, 1654,
	1655, 1656, 1664, 1665, 1666, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1657, 1652, 0,
	0, 0, 0, 0, 0, 1624, 0, 0, 0, 0,
	0, 0, 0, 1670, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1192, 0, 1192, 1623,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1643,
	0, 0, 0, 0, 0, 0, 0, 1640, 0, 0,
	1192, 0, 0, 0, 0, 0, 0, 1127, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1127, 1127, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1127, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1193, 1192,
	0, 0, 0, 0, 0, 0, 0, 1192, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1646, 1647,
	1648, 1649, 0, 0, 0, 0, 0, 0, 1629, 0,
	1193, 0, 0, 0, 0, 1312, 1312, 0, 0, 0,
	0, 0, 0, 0, 0, 1193, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1661, 0, 0,
	1671, 0, 0, 1192, 0, 1193, 1651, 1653, 1312, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1667, 0, 1668, 0, 0, 0, 0, 0,
	0, 1638, 1639, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1312, 1312, 1312, 0, 1659,
	0, 0, 0, 0, 0, 0, 1192, 0, 0, 0,
	1644, 0, 1313, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1192, 0, 0, 0,
	1669, 0, 0, 0, 0, 0, 0, 1313, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1193, 1658, 0,
	0, 0, 0, 0, 0, 0, 1313, 0, 0, 0,
	0, 1313, 0, 0, 0, 0, 0, 1192, 0, 1312,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1313, 1192, 0, 0, 0, 0, 1313, 0,
	1313, 0, 0, 0, 1193, 0, 0, 0, 0, 0,
	1650, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1313, 0, 0, 0, 0, 0, 0, 0,
	1645, 0, 1313, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1192, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1662, 1312, 1312, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1313, 1313, 0, 1192, 0, 0, 1312, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1313, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1193, 0, 1660, 1193,
	0, 0, 1635, 1636, 1642, 1663, 1641, 1637, 0, 1634,
	1632, 1633, 1625, 1626, 1627, 1628, 1630, 1631, 0, 0,
	0, 0, 0, 0, 0, 0, 2874, 0, 0, 0,
	1621, 1622, 0, 1654, 1655, 1656, 1664, 1665, 1666, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1657, 1652, 0, 0, 0, 0, 0, 0, 1624,
	0, 0, 0, 0, 0, 0, 0, 1670, 0, 0,
	1193, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1193, 0, 0,
	0, 0, 0, 1623, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1643, 1312, 0, 0, 0, 0, 0,
	0, 1640, 0, 0, 1312, 1312, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1312, 0, 1621, 1622, 0, 1654, 1655, 1656, 1664,
	1665, 1666, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1657, 1652, 0, 0, 0, 0,
	0, 0, 1624, 0, 0, 0, 0, 0, 0, 0,
	1670, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1646, 1647, 1648, 1649, 0, 0, 0, 0,
	0, 0, 1629, 0, 0, 0, 1623, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1643, 0, 0, 0,
	0, 0, 0, 0, 1640, 0, 0, 1193, 0, 0,
	0, 1661, 0, 0, 1671, 0, 0, 0, 0, 0,
	1651, 1653, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1667, 0, 1668, 0,
	0, 0, 0, 0, 0, 1638, 1639, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1659, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1644, 1646, 1647, 1648, 1649, 0,
	0, 0, 0, 0, 0, 1629, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1669, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1661, 0, 0, 1671, 0, 0,
	0, 0, 1658, 1651, 1653, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1313, 0, 0, 0, 1667,
	0, 1668, 0, 0, 0, 0, 0, 0, 1638, 1639,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1659, 0, 0, 0,
	0, 0, 0, 0, 1650, 0, 0, 1644, 0, 0,
	0, 0, 1313, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1645, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1669, 0, 0,
	0, 0, 0, 0, 0, 0, 1313, 1313, 1313, 1662,
	0, 0, 0, 0, 0, 1658, 0, 0, 0, 0,
	0, 0, 1313, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1193, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1193, 0, 0, 0, 1650, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1645, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1660, 0, 0, 0, 1635, 1636, 1642, 1663,
	1641, 1637, 1662, 1634, 1632, 1633, 1625, 1626, 1627, 1628,
	1630, 1631, 0, 0, 0, 0, 0, 0, 0, 0,
	2873, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 841, 0, 883, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	849, 0, 0, 1193, 0, 1193, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 862, 847, 846, 0,
	0, 0, 0, 0, 0, 1660, 0, 1193, 0, 1635,
	1636, 1642, 1663, 1641, 1637, 0, 1634, 1632, 1633, 1625,
	1626, 1627, 1628, 1630, 1631, 848, 0, 0, 0, 0,
	851, 0, 0, 2870, 0, 891, 0, 0, 0, 0,
	0, 0, 0, 859, 860, 0, 0, 0, 0, 0,
	0, 0, 876, 0, 0, 0, 1193, 0, 0, 0,
	0, 0, 0, 0, 1193, 0, 0, 0, 884, 853,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1313, 1313, 0, 854, 0, 0, 0, 0,
	0, 0, 0, 0, 882, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1193, 0, 0, 0, 0, 1313, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	855, 0, 0, 0, 0, 0, 0, 0, 845, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1313, 1313, 1313, 0, 856, 857, 0, 0,
	0, 0, 0, 1193, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 864, 863, 0, 0, 0, 0,
	0, 0, 858, 0, 0, 0, 873, 0, 0, 0,
	0, 0, 0, 1193, 0, 0, 0, 0, 0, 0,
	0, 888, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 885, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1193, 0, 1313, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1193, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 852, 0, 0, 890, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 850,
	0, 0, 0, 880, 881, 0, 0, 0, 0, 0,
	0, 0, 1193, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1313, 1313, 0, 0, 0, 0, 0,
	0, 0, 0, 878, 0, 0, 0, 0, 0, 0,
	889, 874, 0, 867, 865, 0, 870, 0, 0, 0,
	0, 0, 871, 0, 0, 843, 0, 886, 0, 0,
	1193, 0, 0, 1313, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 844, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 872, 0,
	0, 0, 0, 869, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 887, 0, 0, 0, 0, 0, 0,
	0, 875, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 877, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 879, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1190,
	0, 1313, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1313, 1313, 0, 0, 0, 249, 250, 251, 252,
	253, 254, 1196, 255, 256, 1197, 1198, 1199, 1313, 1200,
	545, 1201, 1202, 1203, 1204, 257, 258, 260, 259, 261,
	262, 263, 264, 546, 547, 0, 265, 548, 266, 549,
	1205, 550, 267, 268, 269, 270, 271, 272, 1206, 1207,
	0, 273, 551, 552, 553, 1208, 274, 275, 554, 1209,
	1276, 1210, 276, 277, 278, 279, 280, 281, 282, 0,
	1211, 284, 285, 286, 283, 1212, 287, 0, 288, 289,
	290, 291, 292, 293, 1213, 294, 295, 296, 1068, 297,
	298, 1214, 1215, 1217, 1216, 1218, 1219, 1220, 299, 300,
	301, 302, 0, 303, 555, 556, 1221, 307, 304, 305,
	1222, 308, 306, 1223, 309, 310, 311, 1224, 1225, 312,
	313, 314, 1226, 315, 316, 1227, 317, 318, 319, 1228,
	320, 321, 557, 322, 323, 324, 326, 328, 325, 329,
	330, 331, 332, 558, 559, 1229, 246, 1230, 0, 0,
	0, 0, 333, 334, 335, 560, 0, 0, 0, 336,
	1231, 337, 1232, 1233, 1069, 338, 339, 561, 562, 340,
	341, 1234, 342, 563, 1235, 564, 343, 1236, 344, 345,
	346, 347, 348, 565, 566, 567, 411, 1071, 349, 350,
	1237, 351, 352, 353, 354, 0, 0, 0, 247, 355,
	356, 358, 1238, 1070, 357, 568, 569, 1239, 570, 1240,
	359, 360, 1072, 571, 1073, 361, 362, 363, 1074, 364,
	0, 0, 0, 365, 366, 367, 368, 369, 370, 1241,
	371, 373, 372, 1242, 374, 572, 1075, 375, 376, 1076,
	1243, 377, 378, 379, 1244, 1245, 380, 381, 382, 383,
	0, 384, 385, 387, 389, 386, 388, 393, 390, 391,
	392, 395, 0, 394, 1077, 396, 397, 398, 403, 405,
	406, 401, 402, 404, 407, 400, 1078, 399, 1246, 248,
	1079, 408, 409, 1247, 573, 410, 574, 412, 413, 1248,
	0, 414, 0, 1249, 1250, 416, 417, 418, 1251, 1252,
	419, 420, 575, 1080, 421, 1081, 576, 422, 423, 415,
	424, 425, 426, 427, 428, 429, 430, 431, 1253, 432,
	433, 577, 578, 579, 434, 580, 435, 436, 1254, 437,
	0, 438, 439, 440, 441, 442, 443, 444, 581, 446,
	445, 447, 1255, 448, 0, 0, 0, 0, 0, 449,
	0, 451, 452, 453, 450, 454, 455, 456, 457, 1256,
	458, 459, 460, 1082, 461, 462, 463, 464, 582, 465,
	0, 466, 467, 473, 474, 468, 469, 475, 476, 477,
	478, 479, 1257, 481, 482, 480, 483, 484, 485, 1258,
	486, 470, 471, 487, 488, 1083, 489, 490, 491, 492,
	493, 494, 583, 0, 495, 1259, 496, 497, 498, 499,
	472, 500, 505, 584, 501, 502, 503, 504, 585, 1260,
	507, 508, 0, 506, 1261, 509, 510, 511, 512, 513,
	514, 327, 515, 1262, 516, 586, 587, 588, 589, 1263,
	523, 1264, 517, 518, 590, 519, 591, 1265, 520, 521,
	522, 0, 524, 525, 1266, 1267, 526, 527, 528, 530,
	531, 529, 532, 1268, 533, 1269, 0, 534, 535, 536,
	592, 593, 594, 1270, 538, 537, 539, 595, 1271, 1272,
	1273, 1274, 540, 541, 596, 542, 543, 544, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1190, 0, 0, 0, 0, 0, 0, 0, 2429,
	0, 0, 0, 0, 0, 0, 0, 2430, 249, 250,
	251, 252, 253, 254, 1196, 255, 256, 1197, 1198, 1199,
	0, 1200, 545, 1201, 1202, 1203, 1204, 257, 258, 260,
	259, 261, 262, 263, 264, 546, 547, 0, 265, 548,
	266, 549, 1205, 550, 267, 268, 269, 270, 271, 272,
	1206, 1207, 0, 273, 551, 552, 553, 1208, 274, 275,
	554, 1209, 1276, 1210, 276, 277, 278, 279, 280, 281,
	282, 0, 1211, 284, 285, 286, 283, 1212, 287, 0,
	288, 289, 290, 291, 292, 293, 1213, 294, 295, 296,
	1068, 297, 298, 1214, 1215, 1217, 1216, 1218, 1219, 1220,
	299, 300, 301, 302, 0, 303, 555, 556, 1221, 307,
	304, 305, 1222, 308, 306, 1223, 309, 310, 311, 1224,
	1225, 312, 313, 314, 1226, 315, 316, 1227, 317, 318,
	319, 1228, 320, 321, 557, 322, 323, 324, 326, 328,
	325, 329, 330, 331, 332, 558, 559, 1229, 246, 1230,
	0, 0, 0, 0, 333, 334, 335, 560, 0, 0,
	0, 336, 1231, 337, 1232, 1233, 1069, 338, 339, 561,
	562, 340, 341, 1234, 342, 563, 1235, 564, 343, 1236,
	344, 345, 346, 347, 348, 565, 566, 567, 411, 1071,
	349, 350, 1237, 351, 352, 353, 354, 0, 0, 0,
	247, 355, 356, 358, 1238, 1070, 357, 568, 569, 1239,
	570, 1240, 359, 360, 1072, 571, 1073, 361, 362, 363,
	1074, 364, 0, 0, 0, 365, 366, 367, 368, 369,
	370, 1241, 371, 373, 372, 1242, 374, 572, 1075, 375,
	376, 1076, 1243, 377, 378, 379, 1244, 1245, 380, 381,
	382, 383, 0, 384, 385, 387, 389, 386, 388, 393,
	390, 391, 392, 395, 0, 394, 1077, 396, 397, 398,
	403, 405, 406, 401, 402, 404, 407, 400, 1078, 399,
	1246, 248, 1079, 408, 409, 1247, 573, 410, 574, 412,
	413, 1248, 0, 414, 0, 1249, 1250, 416, 417, 418,
	1251, 1252, 419, 420, 575, 1080, 421, 1081, 576, 422,
	423, 415, 424, 425, 426, 427, 428, 429, 430, 431,
	1253, 432, 433, 577, 578, 579, 434, 580, 435, 436,
	1254, 437, 0, 438, 439, 440, 441, 442, 443, 444,
	581, 446, 445, 447, 1255, 448, 0, 0, 0, 0,
	0, 449, 0, 451, 452, 453, 450, 454, 455, 456,
	457, 1256, 458, 459, 460, 1082, 461, 462, 463, 464,
	582, 465, 0, 466, 467, 473, 474, 468, 469, 475,
	476, 477, 478, 479, 1257, 481, 482, 480, 483, 484,
	485, 1258, 486, 470, 471, 487, 488, 1083, 489, 490,
	491, 492, 493, 494, 583, 0, 495, 1259, 496, 497,
	498, 499, 472, 500, 505, 584, 501, 502, 503, 504,
	585, 1260, 507, 508, 0, 506, 1261, 509, 510, 511,
	512, 513, 514, 327, 515, 1262, 516, 586, 587, 588,
	589, 1263, 523, 1264, 517, 518, 590, 519, 591, 1265,
	520, 521, 522, 0, 524, 525, 1266, 1267, 526, 527,
	528, 530, 531, 529, 532, 1268, 533, 1269, 0, 534,
	535, 536, 592, 593, 594, 1270, 538, 537, 539, 595,
	1271, 1272, 1273, 1274, 540, 541, 596, 542, 543, 544,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1190, 0, 0, 0, 0, 3278, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3280, 249, 250,
	251, 252, 253, 254, 1196, 255, 256, 1197, 1198, 1199,
	0, 1200, 545, 1201, 1202, 1203, 1204, 257, 258, 260,
	259, 261, 262, 263, 264, 546, 547, 0, 265, 548,
	266, 549, 1205, 550, 267, 268, 269, 270, 271, 272,
	1206, 1207, 0, 273, 551, 552, 553, 1208, 274, 275,
	554, 1209, 1276, 1210, 276, 277, 278, 279, 280, 281,
	282, 0, 1211, 284, 285, 286, 283, 1212, 287, 0,
	288, 289, 290, 291, 292, 293, 1213, 294, 295, 296,
	1068, 297, 298, 1214, 1215, 1217, 1216, 1218, 1219, 1220,
	299, 300, 301, 302, 0, 303, 555, 556, 1221, 307,
	304, 305, 1222, 308, 306, 1223, 309, 310, 311, 1224,
	1225, 312, 313, 314, 1226, 315, 316, 1227, 317, 318,
	319, 1228, 320, 321, 557, 322, 323, 324, 326, 328,
	325, 329, 330, 331, 332, 558, 559, 1229, 246, 1230,
	0, 0, 0, 0, 333, 334, 335, 560, 0, 0,
	0, 336, 1231, 337, 1232, 1233, 1069, 338, 339, 561,
	562, 340, 341, 1234, 342, 563, 1235, 564, 343, 1236,
	344, 345, 346, 347, 348, 565, 566, 567, 411, 1071,
	349, 350, 1237, 351, 352, 353, 354, 0, 0, 0,
	247, 355, 356, 358, 1238, 1070, 357, 568, 569, 1239,
	570, 1240, 359, 360, 1072, 571, 1073, 361, 362, 363,
	1074, 364, 0, 0, 0, 365, 366, 367, 368, 369,
	370, 1241, 371, 373, 372, 1242, 374, 572, 1075, 375,
	376, 1076, 1243, 377, 378, 379, 1244, 1245, 380, 381,
	382, 383, 0, 384, 385, 387, 389, 386, 388, 393,
	390, 391, 392, 395, 0, 394, 1077, 396, 397, 398,
	403, 405, 406, 401, 402, 404, 407, 400, 1078, 399,
	1246, 248, 1079, 408, 409, 1247, 573, 410, 574, 412,
	413, 1248, 0, 414, 0, 1249, 1250, 416, 417, 418,
	1251, 1252, 419, 420, 575, 1080, 421, 1081, 576, 422,
	423, 415, 424, 425, 426, 427, 428, 429, 430, 431,
	1253, 432, 433, 577, 578, 579, 434, 580, 435, 436,
	1254, 437, 0, 438, 439, 440, 441, 442, 443, 444,
	581, 446, 445, 447, 1255, 448, 0, 0, 0, 0,
	0, 449, 0, 451, 452, 453, 450, 454, 455, 456,
	457, 1256, 458, 459, 460, 1082, 461, 462, 463, 464,
	582, 465, 0, 466, 467, 473, 474, 468, 469, 475,
	476, 477, 478, 479, 1257, 481, 482, 480, 483, 484,
	485, 1258, 486, 470, 471, 487, 488, 1083, 489, 490,
	491, 492, 493, 494, 583, 0, 495, 1259, 496, 497,
	498, 499, 472, 500, 505, 584, 501, 502, 503, 504,
	585, 1260, 507, 508, 0, 506, 1261, 509, 510, 511,
	512, 513, 514, 327, 515, 1262, 516, 586, 587, 588,
	589, 1263, 523, 1264, 517, 518, 590, 519, 591, 1265,
	520, 521, 522, 0, 524, 525, 1266, 1267, 526, 527,
	528, 530, 531, 529, 532, 1268, 533, 1269, 0, 534,
	535, 536, 592, 593, 594, 1270, 538, 537, 539, 595,
	1271, 1272, 1273, 1274, 540, 541, 596, 542, 543, 544,
	0, 0, 0, 0, 0, 1190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3629, 249, 250, 251, 252, 253, 254, 1196, 255,
	256, 1197, 1198, 1199, 0, 1200, 545, 1201, 1202, 1203,
	1204, 257, 258, 260, 259, 261, 262, 263, 264, 546,
	547, 0, 265, 548, 266, 549, 1205, 550, 267, 268,
	269, 270, 271, 272, 1206, 1207, 0, 273, 551, 552,
	553, 1208, 274, 275, 554, 1209, 1276, 1210, 276, 277,
	278, 279, 280, 281, 282, 0, 1211, 284, 285, 286,
	283, 1212, 287, 0, 288, 289, 290, 291, 292, 293,
	1213, 294, 295, 296, 1068, 297, 298, 1214, 1215, 1217,
	1216, 1218, 1219, 1220, 299, 300, 301, 302, 0, 303,
	555, 556, 1221, 307, 304, 305, 1222, 308, 306, 1223,
	309, 310, 311, 1224, 1225, 312, 313, 314, 1226, 315,
	316, 1227, 317, 318, 319, 1228, 320, 321, 557, 322,
	323, 324, 326, 328, 325, 329, 330, 331, 332, 558,
	559, 1229, 246, 1230, 0, 0, 0, 0, 333, 334,
	335, 560, 0, 0, 0, 336, 1231, 337, 1232, 1233,
	1069, 338, 339, 561, 562, 340, 341, 1234, 342, 563,
	1235, 564, 343, 1236, 344, 345, 346, 347, 348, 565,
	566, 567, 411, 1071, 349, 350, 1237, 351, 352, 353,
	354, 0, 0, 0, 247, 355, 356, 358, 1238, 1070,
	357, 568, 569, 1239, 570, 1240, 359, 360, 1072, 571,
	1073, 361, 362, 363, 1074, 364, 0, 0, 0, 365,
	366, 367, 368, 369, 370, 1241, 371, 373, 372, 1242,
	374, 572, 1075, 375, 376, 1076, 1243, 377, 378, 379,
	1244, 1245, 380, 381, 382, 383, 0, 384, 385, 387,
	389, 386, 388, 393, 390, 391, 392, 395, 0, 394,
	1077, 396, 397, 398, 403, 405, 406, 401, 402, 404,
	407, 400, 1078, 399, 1246, 248, 1079, 408, 409, 1247,
	573, 410, 574, 412, 413, 1248, 0, 414, 0, 1249,
	1250, 416, 417, 418, 1251, 1252, 419, 420, 575, 1080,
	421, 1081, 576, 422, 423, 415, 424, 425, 426, 427,
	428, 429, 430, 431, 1253, 432, 433, 577, 578, 579,
	434, 580, 435, 436, 1254, 437, 0, 438, 439, 440,
	441, 442, 443, 444, 581, 446, 445, 447, 1255, 448,
	0, 0, 0, 0, 0, 449, 0, 451, 452, 453,
	450, 454, 455, 456, 457, 1256, 458, 459, 460, 1082,
	461, 462, 463, 464, 582, 465, 0, 466, 467, 473,
	474, 468, 469, 475, 476, 477, 478, 479, 1257, 481,
	482, 480, 483, 484, 485, 1258, 486, 470, 471, 487,
	488, 1083, 489, 490, 491, 492, 493, 494, 583, 0,
	495, 1259, 496, 497, 498, 499, 472, 500, 505, 584,
	501, 502, 503, 504, 585, 1260, 507, 508, 0, 506,
	1261, 509, 510, 511, 512, 513, 514, 327, 515, 1262,
	516, 586, 587, 588, 589, 1263, 523, 1264, 517, 518,
	590, 519, 591, 1265, 520, 521, 522, 0, 524, 525,
	1266, 1267, 526, 527, 528, 530, 531, 529, 532, 1268,
	533, 1269, 0, 534, 535, 536, 592, 593, 594, 1270,
	538, 537, 539, 595, 1271, 1272, 1273, 1274, 540, 541,
	596, 542, 543, 544, 1190, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3799, 249, 250, 251, 252, 253, 254, 1196, 255, 256,
	1197, 1198, 1199, 0, 1200, 545, 1201, 1202, 1203, 1204,
	257, 258, 260, 259, 261, 262, 263, 264, 546, 547,
	0, 265, 548, 266, 549, 1205, 550, 267, 268, 269,
	270, 271, 272, 1206, 1207, 0, 273, 551, 552, 553,
	1208, 274, 275, 554, 1209, 1276, 1210, 276, 277, 278,
	279, 280, 281, 282, 0, 1211, 284, 285, 286, 283,
	1212, 287, 0, 288, 289, 290, 291, 292, 293, 1213,
	294, 295, 296, 1068, 297, 298, 1214, 1215, 1217, 1216,
	1218, 1219, 1220, 299, 300, 301, 302, 0, 303, 555,
	556, 1221, 307, 304, 305, 1222, 308, 306, 1223, 309,
	310, 311, 1224, 1225, 312, 313, 314, 1226, 315, 316,
	1227, 317, 318, 319, 1228, 320, 321, 557, 322, 323,
	324, 326, 328, 325, 329, 330, 331, 332, 558, 559,
	1229, 246, 1230, 0, 0, 0, 0, 333, 334, 335,
	560, 0, 0, 0, 336, 1231, 337, 1232, 1233, 1069,
	338, 339, 561, 562, 340, 341, 1234, 342, 563, 1235,
	564, 343, 1236, 344, 345, 346, 347, 348, 565, 566,
	567, 411, 1071, 349, 350, 1237, 351, 352, 353, 354,
	0, 0, 0, 247, 355, 356, 358, 1238, 1070, 357,
	568, 569, 1239, 570, 1240, 359, 360, 1072, 571, 1073,
	361, 362, 363, 1074, 364, 0, 0, 0, 365, 366,
	367, 368, 369, 370, 1241, 371, 373, 372, 1242, 374,
	572, 1075, 375, 376, 1076, 1243, 377, 378, 379, 1244,
	1245, 380, 381, 382, 383, 0, 384, 385, 387, 389,
	386, 388, 393, 390, 391, 392, 395, 0, 394, 1077,
	396, 397, 398, 403, 405, 406, 401, 402, 404, 407,
	400, 1078, 399, 1246, 248, 1079, 408, 409, 1247, 573,
	410, 574, 412, 413, 1248, 0, 414, 0, 1249, 1250,
	416, 417, 418, 1251, 1252, 419, 420, 575, 1080, 421,
	1081, 576, 422, 423, 415, 424, 425, 426, 427, 428,
	429, 430, 431, 1253, 432, 433, 577, 578, 579, 434,
	580, 435, 436, 1254, 437, 0, 438, 439, 440, 441,
	442, 443, 444, 581, 446, 445, 447, 1255, 448, 0,
	0, 0, 0, 0, 449, 0, 451, 452, 453, 450,
	454, 455, 456, 457, 1256, 458, 459, 460, 1082, 461,
	462, 463, 464, 582, 465, 0, 466, 467, 473, 474,
	468, 469, 475, 476, 477, 478, 479, 1257, 481, 482,
	480, 483, 484, 485, 1258, 486, 470, 471, 487, 488,
	1083, 489, 490, 491, 492, 493, 494, 583, 0, 495,
	1259, 496, 497, 498, 499, 472, 500, 505, 584, 501,
	502, 503, 504, 585, 1260, 507, 508, 0, 506, 1261,
	509, 510, 511, 512, 513, 514, 327, 515, 1262, 516,
	586, 587, 588, 589, 1263, 523, 1264, 517, 518, 590,
	519, 591, 1265, 520, 521, 522, 0, 524, 525, 1266,
	1267, 526, 527, 528, 530, 531, 529, 532, 1268, 533,
	1269, 0, 534, 535, 536, 592, 593, 594, 1270, 538,
	537, 539, 595, 1271, 1272, 1273, 1274, 540, 541, 596,
	542, 543, 544, 1190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3689,
	249, 250, 251, 252, 253, 254, 1196, 255, 256, 1197,
	1198, 1199, 0, 1200, 545, 1201, 1202, 1203, 1204, 257,
	258, 260, 259, 261, 262, 263, 264, 546, 547, 0,
	265, 548, 266, 549, 1205, 550, 267, 268, 269, 270,
	271, 272, 1206, 1207, 0, 273, 551, 552, 553, 1208,
	274, 275, 554, 1209, 1276, 1210, 276, 277, 278, 279,
	280, 281, 282, 0, 1211, 284, 285, 286, 283, 1212,
	287, 0, 288, 289, 290, 291, 292, 293, 1213, 294,
	295, 296, 1068, 297, 298, 1214, 1215, 1217, 1216, 1218,
	1219, 1220, 299, 300, 301, 302, 0, 303, 555, 556,
	1221, 307, 304, 305, 1222, 308, 306, 1223, 309, 310,
	311, 1224, 1225, 312, 313, 314, 1226, 315, 316, 1227,
	317, 318, 319, 1228, 320, 321, 557, 322, 323, 324,
	326, 328, 325, 329, 330, 331, 332, 558, 559, 1229,
	246, 1230, 0, 0, 0, 0, 333, 334, 335, 560,
	0, 0, 0, 336, 1231, 337, 1232, 1233, 1069, 338,
	339, 561, 562, 340, 341, 1234, 342, 563, 1235, 564,
	343, 1236, 344, 345, 346, 347, 348, 565, 566, 567,
	411, 1071, 349, 350, 1237, 351, 352, 353, 354, 0,
	0, 0, 247, 355, 356, 358, 1238, 1070, 357, 568,
	569, 1239, 570, 1240, 359, 360, 1072, 571, 1073, 361,
	362, 363, 1074, 364, 0, 0, 0, 365, 366, 367,
	368, 369, 370, 1241, 371, 373, 372, 1242, 374, 572,
	1075, 375, 376, 1076, 1243, 377, 378, 379, 1244, 1245,
	380, 381, 382, 383, 0, 384, 385, 387, 389, 386,
	388, 393, 390, 391, 392, 395, 0, 394, 1077, 396,
	397, 398, 403, 405, 406, 401, 402, 404, 407, 400,
	1078, 399, 1246, 248, 1079, 408, 409, 1247, 573, 410,
	574, 412, 413, 1248, 0, 414, 0, 1249, 1250, 416,
	417, 418, 1251, 1252, 419, 420, 575, 1080, 421, 1081,
	576, 422, 423, 415, 424, 425, 426, 427, 428, 429,
	430, 431, 1253, 432, 433, 577, 578, 579, 434, 580,
	435, 436, 1254, 437, 0, 438, 439, 440, 441, 442,
	443, 444, 581, 446, 445, 447, 1255, 448, 0, 0,
	0, 0, 0, 449, 0, 451, 452, 453, 450, 454,
	455, 456, 457, 1256, 458, 459, 460, 1082, 461, 462,
	463, 464, 582, 465, 0, 466, 467, 473, 474, 468,
	469, 475, 476, 477, 478, 479, 1257, 481, 482, 480,
	483, 484, 485, 1258, 486, 470, 471, 487, 488, 1083,
	489, 490, 491, 492, 493, 494, 583, 0, 495, 1259,
	496, 497, 498, 499, 472, 500, 505, 584, 501, 502,
	503, 504, 585, 1260, 507, 508, 0, 506, 1261, 509,
	510, 511, 512, 513, 514, 327, 515, 1262, 516, 586,
	587, 588, 589, 1263, 523, 1264, 517, 518, 590, 519,
	591, 1265, 520, 521, 522, 0, 524, 525, 1266, 1267,
	526, 527, 528, 530, 531, 529, 532, 1268, 533, 1269,
	0, 534, 535, 536, 592, 593, 594, 1270, 538, 537,
	539, 595, 1271, 1272, 1273, 1274, 540, 541, 596, 542,
	543, 544, 1190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3559, 249,
	250, 251, 252, 253, 254, 1196, 255, 256, 1197, 1198,
	1199, 0, 1200, 545, 1201, 1202, 1203, 1204, 257, 258,
	260, 259, 261, 262, 263, 264, 546, 547, 0, 265,
	548, 266, 549, 1205, 550, 267, 268, 269, 270, 271,
	272, 1206, 1207, 0, 273, 551, 552, 553, 1208, 274,
	275, 554, 1209, 1276, 1210, 276, 277, 278, 279, 280,
	281, 282, 0, 1211, 284, 285, 286, 283, 1212, 287,
	0, 288, 289, 290, 291, 292, 293, 1213, 294, 295,
	296, 1068, 297, 298, 1214, 1215, 1217, 1216, 1218, 1219,
	1220, 299, 300, 301, 302, 0, 303, 555, 556, 1221,
	307, 304, 305, 1222, 308, 306, 1223, 309, 310, 311,
	1224, 1225, 312, 313, 314, 1226, 315, 316, 1227, 317,
	318, 319, 1228, 320, 321, 557, 322, 323, 324, 326,
	328, 325, 329, 330, 331, 332, 558, 559, 1229, 246,
	1230, 0, 0, 0, 0, 333, 334, 335, 560, 0,
	0, 0, 336, 1231, 337, 1232, 1233, 1069, 338, 339,
	561, 562, 340, 341, 1234, 342, 563, 1235, 564, 343,
	1236, 344, 345, 346, 347, 348, 565, 566, 567, 411,
	1071, 349, 350, 1237, 351, 352, 353, 354, 0, 0,
	0, 247, 355, 356, 358, 1238, 1070, 357, 568, 569,
	1239, 570, 1240, 359, 360, 1072, 571, 1073, 361, 362,
	363, 1074, 364, 0, 0, 0, 365, 366, 367, 368,
	369, 370, 1241, 371, 373, 372, 1242, 374, 572, 1075,
	375, 376, 1076, 1243, 377, 378, 379, 1244, 1245, 380,
	381, 382, 383, 0, 384, 385, 387, 389, 386, 388,
	393, 390, 391, 392, 395, 0, 394, 1077, 396, 397,
	398, 403, 405, 406, 401, 402, 404, 407, 400, 1078,
	399, 1246, 248, 1079, 408, 409, 1247, 573, 410, 574,
	412, 413, 1248, 0, 414, 0, 1249, 1250, 416, 417,
	418, 1251, 1252, 419, 420, 575, 1080, 421, 1081, 576,
	422, 423, 415, 424, 425, 426, 427, 428, 429, 430,
	431, 1253, 432, 433, 577, 578, 579, 434, 580, 435,
	436, 1254, 437, 0, 438, 439, 440, 441, 442, 443,
	444, 581, 446, 445, 447, 1255, 448, 0, 0, 0,
	0, 0, 449, 0, 451, 452, 453, 450, 454, 455,
	456, 457, 1256, 458, 459, 460, 1082, 461, 462, 463,
	464, 582, 465, 0, 466, 467, 473, 474, 468, 469,
	475, 476, 477, 478, 479, 1257, 481, 482, 480, 483,
	484, 485, 1258, 486, 470, 471, 487, 488, 1083, 489,
	490, 491, 492, 493, 494, 583, 0, 495, 1259, 496,
	497, 498, 499, 472, 500, 505, 584, 501, 502, 503,
	504, 585, 1260, 507, 508, 0, 506, 1261, 509, 510,
	511, 512, 513, 514, 327, 515, 1262, 516, 586, 587,
	588, 589, 1263, 523, 1264, 517, 518, 590, 519, 591,
	1265, 520, 521, 522, 0, 524, 525, 1266, 1267, 526,
	527, 528, 530, 531, 529, 532, 1268, 533, 1269, 0,
	534, 535, 536, 592, 593, 594, 1270, 538, 537, 539,
	595, 1271, 1272, 1273, 1274, 540, 541, 596, 542, 543,
	544, 1190, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3296, 249, 250,
	251, 252, 253, 254, 1196, 255, 256, 1197, 1198, 1199,
	0, 1200, 545, 1201, 1202, 1203, 1204, 257, 258, 260,
	259, 261, 262, 263, 264, 546, 547, 0, 265, 548,
	266, 549, 1205, 550, 267, 268, 269, 270, 271, 272,
	1206, 1207, 0, 273, 551, 552, 553, 1208, 274, 275,
	554, 1209, 1276, 1210, 276, 277, 278, 279, 280, 281,
	282, 0, 1211, 284, 285, 286, 283, 1212, 287, 0,
	288, 289, 290, 291, 292, 293, 1213, 294, 295, 296,
	1068, 297, 298, 1214, 1215, 1217, 1216, 1218, 1219, 1220,
	299, 300, 301, 302, 0, 303, 555, 556, 1221, 307,
	304, 305, 1222, 308, 306, 1223, 309, 310, 311, 1224,
	1225, 312, 313, 314, 1226, 315, 316, 1227, 317, 318,
	319, 1228, 320, 321, 557, 322, 323, 324, 326, 328,
	325, 329, 330, 331, 332, 558, 559, 1229, 246, 1230,
	0, 0, 0, 0, 333, 334, 335, 560, 0, 0,
	0, 336, 1231, 337, 1232, 1233, 1069, 338, 339, 561,
	562, 340, 341, 1234, 342, 563, 1235, 564, 343, 1236,
	344, 345, 346, 347, 348, 565, 566, 567, 411, 1071,
	349, 350, 1237, 351, 352, 353, 354, 0, 0, 0,
	247, 355, 356, 358, 1238, 1070, 357, 568, 569, 1239,
	570, 1240, 359, 360, 1072, 571, 1073, 361, 362, 363,
	1074, 364, 0, 0, 0, 365, 366, 367, 368, 369,
	370, 1241, 371, 373, 372, 1242, 374, 572, 1075, 375,
	376, 1076, 1243, 377, 378, 379, 1244, 1245, 380, 381,
	382, 383, 0, 384, 385, 387, 389, 386, 388, 393,
	390, 391, 392, 395, 0, 394, 1077, 396, 397, 398,
	403, 405, 406, 401, 402, 404, 407, 400, 1078, 399,
	1246, 248, 1079, 408, 409, 1247, 573, 410, 574, 412,
	413, 1248, 0, 414, 0, 1249, 1250, 416, 417, 418,
	1251, 1252, 419, 420, 575, 1080, 421, 1081, 576, 422,
	423, 415, 424, 425, 426, 427, 428, 429, 430, 431,
	1253, 432, 433, 577, 578, 579, 434, 580, 435, 436,
	1254, 437, 0, 438, 439, 440, 441, 442, 443, 444,
	581, 446, 445, 447, 1255, 448, 0, 0, 0, 0,
	0, 449, 0, 451, 452, 453, 450, 454, 455, 456,
	457, 1256, 458, 459, 460, 1082, 461, 462, 463, 464,
	582, 465, 0, 466, 467, 473, 474, 468, 469, 475,
	476, 477, 478, 479, 1257, 481, 482, 480, 483, 484,
	485, 1258, 486, 470, 471, 487, 488, 1083, 489, 490,
	491, 492, 493, 494, 583, 0, 495, 1259, 496, 497,
	498, 499, 472, 500, 505, 584, 501, 502, 503, 504,
	585, 1260, 507, 508, 0, 506, 1261, 509, 510, 511,
	512, 513, 514, 327, 515, 1262, 516, 586, 587, 588,
	589, 1263, 523, 1264, 517, 518, 590, 519, 591, 1265,
	520, 521, 522, 0, 524, 525, 1266, 1267, 526, 527,
	528, 530, 531, 529, 532, 1268, 533, 1269, 0, 534,
	535, 536, 592, 593, 594, 1270, 538, 537, 539, 595,
	1271, 1272, 1273, 1274, 540, 541, 596, 542, 543, 544,
	1190, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3126, 249, 250, 251,
	252, 253, 254, 1196, 255, 256, 1197, 1198, 1199, 0,
	1200, 545, 1201, 1202, 1203, 1204, 257, 258, 260, 259,
	261, 262, 263, 264, 546, 547, 0, 265, 548, 266,
	549, 1205, 550, 267, 268, 269, 270, 271, 272, 1206,
	1207, 0, 273, 551, 552, 553, 1208, 274, 275, 554,
	1209, 1276, 1210, 276, 277, 278, 279, 280, 281, 282,
	0, 1211, 284, 285, 286, 283, 1212, 287, 0, 288,
	289, 290, 291, 292, 293, 1213, 294, 295, 296, 1068,
	297, 298, 1214, 1215, 1217, 1216, 1218, 1219, 1220, 299,
	300, 301, 302, 0, 303, 555, 556, 1221, 307, 304,
	305, 1222, 308, 306, 1223, 309, 310, 311, 1224, 1225,
	312, 313, 314, 1226, 315, 316, 1227, 317, 318, 319,
	1228, 320, 321, 557, 322, 323, 324, 326, 328, 325,
	329, 330, 331, 332, 558, 559, 1229, 246, 1230, 0,
	0, 0, 0, 333, 334, 335, 560, 0, 0, 0,
	336, 1231, 337, 1232, 1233, 1069, 338, 339, 561, 562,
	340, 341, 1234, 342, 563, 1235, 564, 343, 1236, 344,
	345, 346, 347, 348, 565, 566, 567, 411, 1071, 349,
	350, 1237, 351, 352, 353, 354, 0, 0, 0, 247,
	355, 356, 358, 1238, 1070, 357, 568, 569, 1239, 570,
	1240, 359, 360, 1072, 571, 1073, 361, 362, 363, 1074,
	364, 0, 0, 0, 365, 366, 367, 368, 369, 370,
	1241, 371, 373, 372, 1242, 374, 572, 1075, 375, 376,
	1076, 1243, 377, 378, 379, 1244, 1245, 380, 381, 382,
	383, 0, 384, 385, 387, 389, 386, 388, 393, 390,
	391, 392, 395, 0, 394, 1077, 396, 397, 398, 403,
	405, 406, 401, 402, 404, 407, 400, 1078, 399, 1246,
	248, 1079, 408, 409, 1247, 573, 410, 574, 412, 413,
	1248, 0, 414, 0, 1249, 1250, 416, 417, 418, 1251,
	1252, 419, 420, 575, 1080, 421, 1081, 576, 422, 423,
	415, 424, 425, 426, 427, 428, 429, 430, 431, 1253,
	432, 433, 577, 578, 579, 434, 580, 435, 436, 1254,
	437, 0, 438, 439, 440, 441, 442, 443, 444, 581,
	446, 445, 447, 1255, 448, 0, 0, 0, 0, 0,
	449, 0, 451, 452, 453, 450, 454, 455, 456, 457,
	1256, 458, 459, 460, 1082, 461, 462, 463, 464, 582,
	465, 0, 466, 467, 473, 474, 468, 469, 475, 476,
	477, 478, 479, 1257, 481, 482, 480, 483, 484, 485,
	1258, 486, 470, 471, 487, 488, 1083, 489, 490, 491,
	492, 493, 494, 583, 0, 495, 1259, 496, 497, 498,
	499, 472, 500, 505, 584, 501, 502, 503, 504, 585,
	1260, 507, 508, 0, 506, 1261, 509, 510, 511, 512,
	513, 514, 327, 515, 1262, 516, 586, 587, 588, 589,
	1263, 523, 1264, 517, 518, 590, 519, 591, 1265, 520,
	521, 522, 0, 524, 525, 1266, 1267, 526, 527, 528,
	530, 531, 529, 532, 1268, 533, 1269, 0, 534, 535,
	536, 592, 593, 594, 1270, 538, 537, 539, 595, 1271,
	1272, 1273, 1274, 540, 541, 596, 542, 543, 544, 1190,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2312, 249, 250, 251, 252,
	253, 254, 1196, 255, 256, 1197, 1198, 1199, 0, 1200,
	545, 1201, 1202, 1203, 1204, 257, 258, 260, 259, 261,
	262, 263, 264, 546, 547, 0, 265, 548, 266, 549,
	1205, 550, 267, 268, 269, 270, 271, 272, 1206, 1207,
	0, 273, 551, 552, 553, 1208, 274, 275, 554, 1209,
	1276, 1210, 276, 277, 278, 279, 280, 281, 282, 0,
	1211, 284, 285, 286, 283, 1212, 287, 0, 288, 289,
	290, 291, 292, 293, 1213, 294, 295, 296, 1068, 297,
	298, 1214, 1215, 1217, 1216, 1218, 1219, 1220, 299, 300,
	301, 302, 0, 303, 555, 556, 1221, 307, 304, 305,
	1222, 308, 306, 1223, 309, 310, 311, 1224, 1225, 312,
	313, 314, 1226, 315, 316, 1227, 317, 318, 319, 1228,
	320, 321, 557, 322, 323, 324, 326, 328, 325, 329,
	330, 331, 332, 558, 559, 1229, 246, 1230, 0, 0,
	0, 0, 333, 334, 335, 560, 0, 0, 0, 336,
	1231, 337, 1232, 1233, 1069, 338, 339, 561, 562, 340,
	341, 1234, 342, 563, 1235, 564, 343, 1236, 344, 345,
	346, 347, 348, 565, 566, 567, 411, 1071, 349, 350,
	1237, 351, 352, 353, 354, 0, 0, 0, 247, 355,
	356, 358, 1238, 1070, 357, 568, 569, 1239, 570, 1240,
	359, 360, 1072, 571, 1073, 361, 362, 363, 1074, 364,
	0, 0, 0, 365, 366, 367, 368, 369, 370, 1241,
	371, 373, 372, 1242, 374, 572, 1075, 375, 376, 1076,
	1243, 377, 378, 379, 1244, 1245, 380, 381, 382, 383,
	0, 384, 385, 387, 389, 386, 388, 393, 390, 391,
	392, 395, 0, 394, 1077, 396, 397, 398, 403, 405,
	406, 401, 402, 404, 407, 400, 1078, 399, 1246, 248,
	1079, 408, 409, 1247, 573, 410, 574, 412, 413, 1248,
	0, 414, 0, 1249, 1250, 416, 417, 418, 1251, 1252,
	419, 420, 575, 1080, 421, 1081, 576, 422, 423, 415,
	424, 425, 426, 427, 428, 429, 430, 431, 1253, 432,
	433, 577, 578, 579, 434, 580, 435, 436, 1254, 437,
	0, 438, 439, 440, 441, 442, 443, 444, 581, 446,
	445, 447, 1255, 448, 0, 0, 0, 0, 0, 449,
	0, 451, 452, 453, 450, 454, 455, 456, 457, 1256,
	458, 459, 460, 1082, 461, 462, 463, 464, 582, 465,
	0, 466, 467, 473, 474, 468, 469, 475, 476, 477,
	478, 479, 1257, 481, 482, 480, 483, 484, 485, 1258,
	486, 470, 471, 487, 488, 1083, 489, 490, 491, 492,
	493, 494, 583, 0, 495, 1259, 496, 497, 498, 499,
	472, 500, 505, 584, 501, 502, 503, 504, 585, 1260,
	507, 508, 0, 506, 1261, 509, 510, 511, 512, 513,
	514, 327, 515, 1262, 516, 586, 587, 588, 589, 1263,
	523, 1264, 517, 518, 590, 519, 591, 1265, 520, 521,
	522, 0, 524, 525, 1266, 1267, 526, 527, 528, 530,
	531, 529, 532, 1268, 533, 1269, 0, 534, 535, 536,
	592, 593, 594, 1270, 538, 537, 539, 595, 1271, 1272,
	1273, 1274, 540, 541, 596, 542, 543, 544, 1288, 0,
	1190, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1989, 0, 0, 249, 250, 251,
	252, 253, 254, 1196, 255, 256, 1197, 1198, 1199, 0,
	1200, 545, 1201, 1202, 1203, 1204, 257, 258, 260, 259,
	261, 262, 263, 264, 546, 547, 0, 265, 548, 266,
	549, 1205, 550, 267, 268, 269, 270, 271, 272, 1206,
	1207, 0, 273, 551, 552, 553, 1208, 274, 275, 554,
	1209, 1276, 1210, 276, 277, 278, 279, 280, 281, 282,
	0, 1211, 284, 285, 286, 283, 1212, 287, 0, 288,
	289, 290, 291, 292, 293, 1213, 294, 295, 296, 1068,
	297, 298, 1214, 1215, 1217, 1216, 1218, 1219, 1220, 299,
	300, 301, 302, 0, 303, 555, 556, 1221, 307, 304,
	305, 1222, 308, 306, 1223, 309, 310, 311, 1224, 1225,
	312, 313, 314, 1226, 315, 316, 1227, 317, 318, 319,
	1228, 320, 321, 557, 322, 323, 324, 326, 328, 325,
	329, 330, 331, 332, 558, 559, 1229, 246, 1230, 0,
	0, 0, 0, 333, 334, 335, 560, 0, 0, 0,
	336, 1231, 337, 1232, 1233, 1069, 338, 339, 561, 562,
	340, 341, 1234, 342, 563, 1235, 564, 343, 1236, 344,
	345, 346, 347, 348, 565, 566, 567, 411, 1071, 349,
	350, 1237, 351, 352, 353, 354, 0, 0, 0, 247,
	355, 356, 358, 1238, 1070, 357, 568, 569, 1239, 570,
	1240, 359, 360, 1072, 571, 1073, 361, 362, 363, 1074,
	364, 0, 0, 0, 365, 366, 367, 368, 369, 370,
	1241, 371, 373, 372, 1242, 374, 572, 1075, 375, 376,
	1076, 1243, 377, 378, 379, 1244, 1245, 380, 381, 382,
	383, 0, 384, 385, 387, 389, 386, 388, 393, 390,
	391, 392, 395, 0, 394, 1077, 396, 397, 398, 403,
	405, 406, 401, 402, 404, 407, 400, 1078, 399, 1246,
	248, 1079, 408, 409, 1247, 573, 410, 574, 412, 413,
	1248, 0, 414, 0, 1249, 1250, 416, 417, 418, 1251,
	1252, 419, 420, 575, 1080, 421, 1081, 576, 422, 423,
	415, 424, 425, 426, 427, 428, 429, 430, 431, 1253,
	432, 433, 577, 578, 579, 434, 580, 435, 436, 1254,
	437, 0, 438, 439, 440, 441, 442, 443, 444, 581,
	446, 445, 447, 1255, 448, 0, 0, 0, 0, 0,
	449, 0, 451, 452, 453, 450, 454, 455, 456, 457,
	1256, 458, 459, 460, 1082, 461, 462, 463, 464, 582,
	465, 0, 466, 467, 473, 474, 468, 469, 475, 476,
	477, 478, 479, 1257, 481, 482, 480, 483, 484, 485,
	1258, 486, 470, 471, 487, 488, 1083, 489, 490, 491,
	492, 493, 494, 583, 0, 495, 1259, 496, 497, 498,
	499, 472, 500, 505, 584, 501, 502, 503, 504, 585,
	1260, 507, 508, 0, 506, 1261, 509, 510, 511, 512,
	513, 514, 327, 515, 1262, 516, 586, 587, 588, 589,
	1263, 523, 1264, 517, 518, 590, 519, 591, 1265, 520,
	521, 522, 0, 524, 525, 1266, 1267, 526, 527, 528,
	530, 531, 529, 532, 1268, 533, 1269, 0, 534, 535,
	536, 592, 593, 594, 1270, 538, 537, 539, 595, 1271,
	1272, 1273, 1274, 540, 541, 596, 542, 543, 544, 1187,
	0, 1190, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 249, 250,
	251, 252, 253, 254, 1196, 255, 256, 1197, 1198, 1199,
	0, 1200, 545, 1201, 1202, 1203, 1204, 257, 258, 260,
	259, 261, 262, 263, 264, 546, 547, 0, 265, 548,
	266, 549, 1205, 550, 267, 268, 269, 270, 271, 272,
	1206, 1207, 0, 273, 551, 552, 553, 1208, 274, 275,
	554, 1209, 1276, 1210, 276, 277, 278, 279, 280, 281,
	282, 0, 1211, 284, 285, 286, 283, 1212, 287, 0,
	288, 289, 290, 291, 292, 293, 1213, 294, 295, 296,
	1068, 297, 298, 1214, 1215, 1217, 1216, 1218, 1219, 1220,
	299, 300, 301, 302, 0, 303, 555, 556, 1221, 307,
	304, 305, 1222, 308, 306, 1223, 309, 310, 311, 1224,
	1225, 312, 313, 314, 1226, 315, 316, 1227, 317, 318,
	319, 1228, 320, 321, 557, 322, 323, 324, 326, 328,
	325, 329, 330, 331, 332, 558, 559, 1229, 246, 1230,
	0, 0, 0, 0, 333, 334, 335, 560, 0, 0,
	0, 336, 1231, 337, 1232, 1233, 1069, 338, 339, 561,
	562, 340, 341, 1234, 342, 563, 1235, 564, 343, 1236,
	344, 345, 346, 347, 348, 565, 566, 567, 411, 1071,
	349, 350, 1237, 351, 352, 353, 354, 0, 0, 0,
	247, 355, 356, 358, 1238, 1070, 357, 568, 569, 1239,
	570, 1240, 359, 360, 1072, 571, 1073, 361, 362, 363,
	1074, 364, 0, 0, 0, 365, 366, 367, 368, 369,
	370, 1241, 371, 373, 372, 1242, 374, 572, 1075, 375,
	376, 1076, 1243, 377, 378, 379, 1244, 1245, 380, 381,
	382, 383, 0, 384, 385, 387, 389, 386, 388, 393,
	390, 391, 392, 395, 0, 394, 1077, 396, 397, 398,
	403, 405, 406, 401, 402, 404, 407, 400, 1078, 399,
	1246, 248, 1079, 408, 409, 1247, 573, 410, 574, 412,
	413, 1248, 0, 414, 0, 1249, 1250, 416, 417, 418,
	1251, 1252, 419, 420, 575, 1080, 421, 1081, 576, 422,
	423, 415, 424, 425, 426, 427, 428, 429, 430, 431,
	1253, 432, 433, 577, 578, 579, 434, 580, 435, 436,
	1254, 437, 0, 438, 439, 440, 441, 442, 443, 444,
	581, 446, 445, 447, 1255, 448, 0, 0, 0, 0,
	0, 449, 0, 451, 452, 453, 450, 454, 455, 456,
	457, 1256, 458, 459, 460, 1082, 461, 462, 463, 464,
	582, 465, 0, 466, 467, 473, 474, 468, 469, 475,
	476, 477, 478, 479, 1257, 481, 482, 480, 483, 484,
	485, 1258, 486, 470, 471, 487, 488, 1083, 489, 490,
	491, 492, 493, 494, 583, 0, 495, 1259, 496, 497,
	498, 499, 472, 500, 505, 584, 501, 502, 503, 504,
	585, 1260, 507, 508, 0, 506, 1261, 509, 510, 511,
	512, 513, 514, 327, 515, 1262, 516, 586, 587, 588,
	589, 1263, 523, 1264, 517, 518, 590, 519, 591, 1265,
	520, 521, 522, 0, 524, 525, 1266, 1267, 526, 527,
	528, 530, 531, 529, 532, 1268, 533, 1269, 0, 534,
	535, 536, 592, 593, 594, 1270, 538, 537, 539, 595,
	1271, 1272, 1273, 1274, 540, 541, 596, 542, 543, 544,
	1190, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 250, 251,
	252, 253, 254, 1196, 255, 256, 1197, 1198, 1199, 0,
	1200, 545, 1201, 1202, 1203, 1204, 257, 258, 260, 259,
	261, 262, 263, 264, 546, 547, 0, 265, 548, 266,
	549, 1205, 550, 267, 268, 269, 270, 271, 272, 1206,
	1207, 0, 273, 551, 552, 553, 1208, 274, 275, 554,
	1209, 1276, 1210, 276, 277, 278, 279, 280, 281, 282,
	0, 1211, 284, 285, 286, 283, 1212, 287, 0, 288,
	289, 290, 291, 292, 293, 1213, 294, 295, 296, 1068,
	297, 298, 1214, 1215, 1217, 1216, 1218, 1219, 1220, 299,
	300, 301, 302, 0, 303, 555, 556, 1221, 307, 304,
	305, 1222, 308, 306, 1223, 309, 310, 311, 1224, 1225,
	312, 313, 314, 1226, 315, 316, 1227, 317, 318, 319,
	1228, 320, 321, 557, 322, 323, 324, 326, 328, 325,
	329, 330, 331, 332, 558, 559, 1229, 246, 1230, 0,
	0, 0, 0, 333, 334, 335, 560, 0, 0, 0,
	336, 1231, 337, 1232, 1233, 1069, 338, 339, 561, 562,
	340, 341, 1234, 342, 563, 1235, 564, 343, 1236, 344,
	345, 346, 347, 348, 565, 566, 567, 411, 1071, 349,
	350, 1237, 351, 352, 353, 354, 0, 0, 0, 247,
	355, 356, 358, 1238, 1070, 357, 568, 569, 1239, 570,
	1240, 359, 360, 1072, 571, 1073, 361, 362, 363, 1074,
	364, 0, 0, 0, 365, 366, 367, 368, 369, 370,
	1241, 371, 373, 372, 1242, 374, 572, 1075, 375, 376,
	1076, 1243, 377, 378, 379, 1244, 1245, 380, 381, 382,
	383, 0, 384, 385, 387, 389, 386, 388, 393, 390,
	391, 392, 395, 0, 394, 1077, 396, 397, 398, 403,
	405, 406, 401, 402, 404, 407, 400, 1078, 399, 1246,
	248, 1079, 408, 409, 1247, 573, 410, 574, 412, 413,
	1248, 0, 414, 0, 1249, 1250, 416, 417, 418, 1251,
	1252, 419, 420, 575, 1080, 421, 1081, 576, 422, 423,
	415, 424, 425, 426, 427, 428, 429, 430, 431, 1253,
	432, 433, 577, 578, 579, 434, 580, 435, 436, 1254,
	437, 0, 438, 439, 440, 441, 442, 443, 444, 581,
	446, 445, 447, 1255, 448, 0, 0, 0, 0, 0,
	449, 0, 451, 452, 453, 450, 454, 455, 456, 457,
	1256, 458, 459, 460, 1082, 461, 462, 463, 464, 582,
	465, 0, 466, 467, 473, 474, 468, 469, 475, 476,
	477, 478, 479, 1257, 481, 482, 480, 483, 484, 485,
	1258, 486, 470, 471, 487, 488, 1083, 489, 490, 491,
	492, 493, 494, 583, 0, 495, 1259, 496, 497, 498,
	499, 472, 500, 505, 584, 501, 502, 503, 504, 585,
	1260, 507, 508, 0, 506, 1261, 509, 510, 511, 512,
	513, 514, 327, 515, 1262, 516, 586, 587, 588, 589,
	1263, 523, 1264, 517, 518, 590, 519, 591, 1265, 520,
	521, 522, 0, 524, 525, 1266, 1267, 526, 527, 528,
	530, 531, 529, 532, 1268, 533, 1269, 0, 534, 535,
	536, 592, 593, 594, 1270, 538, 537, 539, 595, 1271,
	1272, 1273, 1274, 540, 541, 596, 542, 543, 544, 2287,
	0, 1004, 976, 977, 978, 974, 975, 987, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 249, 250,
	251, 252, 253, 254, 2284, 255, 256, 0, 0, 0,
	0, 0, 1028, 992, 0, 0, 0, 257, 258, 260,
	259, 261, 262, 263, 264, 546, 1041, 0, 265, 1048,
	266, 1047, 0, 1058, 267, 268, 269, 270, 271, 272,
	994, 1027, 961, 273, 1087, 1088, 553, 0, 274, 275,
	1034, 0, 1015, 0, 276, 277, 278, 279, 280, 281,
	282, 0, 0, 284, 285, 286, 283, 0, 287, 0,
	288, 289, 290, 291, 292, 293, 0, 294, 295, 296,
	1068, 297, 298, 1018, 1016, 1017, 1024, 1020, 1019, 1023,
	299, 300, 301, 302, 1051, 303, 1045, 1044, 965, 307,
	304, 305, 0, 308, 306, 0, 309, 310, 311, 2285,
	0, 312, 1036, 314, 0, 315, 316, 0, 317, 318,
	319, 0, 320, 321, 971, 322, 323, 324, 326, 328,
	325, 329, 330, 331, 332, 1059, 1060, 983, 246, 0,
	0, 0, 0, 0, 333, 334, 335, 1043, 0, 0,
	0, 336, 0, 337, 0, 0, 1069, 338, 339, 1056,
	1057, 340, 341, 0, 342, 1066, 0, 993, 343, 0,
	344, 345, 346, 347, 348, 1029, 1030, 1033, 411, 1071,
	349, 350, 0, 351, 352, 353, 354, 0, 0, 0,
	247, 355, 356, 358, 0, 1070, 357, 1038, 1039, 0,
	999, 0, 359, 360, 1072, 1031, 1073, 361, 362, 363,
	1074, 364, 0, 0, 0, 365, 366, 367, 368, 369,
	370, 0, 371, 373, 372, 0, 374, 1067, 1075, 375,
	376, 1076, 0, 377, 378, 379, 1022, 1021, 380, 381,
	382, 383, 0, 384, 385, 387, 389, 386, 388, 393,
	390, 391, 392, 395, 0, 394, 1077, 396, 397, 398,
	403, 405, 406, 401, 402, 404, 407, 400, 1078, 399,
	962, 248, 1079, 408, 409, 984, 1032, 410, 1046, 412,
	413, 0, 0, 414, 0, 0, 0, 416, 417, 418,
	0, 0, 419, 420, 575, 1080, 421, 1081, 1061, 422,
	423, 415, 424, 425, 426, 427, 428, 429, 430, 431,
	0, 432, 433, 577, 578, 1062, 434, 580, 435, 436,
	0, 437, 0, 438, 439, 440, 441, 442, 443, 444,
	1042, 446, 445, 447, 0, 448, 0, 0, 0, 0,
	0, 449, 0, 451, 452, 453, 450, 454, 455, 456,
	457, 0, 458, 459, 460, 1082, 461, 462, 463, 464,
	972, 465, 0, 466, 467, 473, 474, 468, 469, 475,
	476, 477, 478, 479, 0, 481, 482, 480, 483, 484,
	485, 1025, 486, 470, 471, 487, 488, 1083, 489, 490,
	491, 492, 493, 494, 1040, 0, 495, 0, 496, 497,
	498, 499, 472, 500, 505, 1086, 501, 502, 503, 504,
	1063, 0, 507, 508, 960, 506, 0, 509, 510, 511,
	512, 513, 514, 327, 515, 0, 516, 1052, 1053, 1054,
	1055, 0, 523, 0, 517, 518, 1064, 519, 1065, 982,
	520, 521, 522, 0, 524, 525, 0, 966, 526, 527,
	528, 530, 531, 529, 532, 1026, 533, 0, 0, 534,
	535, 536, 592, 1049, 1085, 2283, 538, 537, 539, 595,
	0, 0, 0, 0, 540, 541, 596, 542, 543, 544,
	963, 0, 0, 0, 0, 0, 0, 959, 0, 0,
	0, 0, 0, 0, 957, 958, 2286, 0, 0, 0,
	0, 0, 0, 988, 2282, 0, 950, 986, 1004, 976,
	977, 978, 974, 975, 987, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 250, 251, 252, 253,
	254, 0, 255, 256, 0, 0, 0, 0, 0, 1028,
	992, 0, 0, 0, 257, 258, 260, 259, 261, 262,
	263, 264, 546, 1041, 0, 265, 1048, 266, 1047, 0,
	1058, 267, 268, 269, 270, 271, 272, 994, 1027, 961,
	273, 1087, 1088, 553, 0, 274, 275, 1034, 0, 1015,
	0, 276, 277, 278, 279, 280, 281, 282, 0, 0,
	284, 285, 286, 283, 0, 287, 0, 288, 289, 290,
	291, 292, 293, 0, 294, 295, 296, 1068, 297, 298,
	1018, 1016, 1017, 1024, 1020, 1019, 1023, 299, 300, 301,
	302, 1051, 303, 1045, 1044, 965, 307, 304, 305, 0,
	308, 306, 0, 309, 310, 311, 0, 0, 312, 1036,
	314, 0, 315, 316, 0, 317, 318, 319, 0, 320,
	321, 971, 322, 323, 324, 326, 328, 325, 329, 330,
	331, 332, 1059, 1060, 983, 246, 0, 0, 0, 0,
	0, 333, 334, 335, 1043, 0, 0, 0, 336, 0,
	337, 0, 0, 1069, 338, 339, 1056, 1057, 340, 341,
	0, 342, 1066, 0, 993, 343, 0, 344, 345, 346,
	347, 348, 1029, 1030, 1033, 411, 1071, 349, 350, 0,
	351, 352, 353, 354, 0, 0, 0, 247, 355, 356,
	358, 0, 1070, 357, 1038, 1039, 0, 999, 0, 359,
	360, 1072, 1031, 1073, 361, 362, 363, 1074, 364, 0,
	0, 0, 365, 366, 367, 368, 369, 370, 0, 371,
	373, 372, 0, 374, 1067, 1075, 375, 376, 1076, 0,
	377, 378, 379, 1022, 1021, 380, 381, 382, 383, 0,
	384, 385, 387, 389, 386, 388, 393, 390, 391, 392,
	395, 0, 394, 1077, 396, 397, 398, 403, 405, 406,
	401, 402, 404, 407, 400, 1078, 399, 962, 248, 1079,
	408, 409, 984, 1032, 410, 1046, 412, 413, 0, 0,
	414, 0, 0, 0, 416, 417, 418, 0, 0, 419,
	420, 575, 1080, 421, 1081, 1061, 422, 423, 415, 424,
	425, 426, 427, 428, 429, 430, 431, 0, 432, 433,
	577, 578, 1062, 434, 580, 435, 436, 0, 437, 0,
	438, 439, 440, 441, 442, 443, 444, 1042, 446, 445,
	447, 0, 448, 0, 0, 0, 0, 0, 449, 0,
	451, 452, 453, 450, 454, 455, 456, 457, 0, 458,
	459, 460, 1082, 461, 462, 463, 464, 972, 465, 0,
	466, 467, 473, 474, 468, 469, 475, 476, 477, 478,
	479, 210, 481, 482, 480, 483, 484, 485, 1025, 486,
	470, 471, 487, 488, 1083, 489, 490, 491, 492, 493,
	494, 1040, 0, 495, 0, 496, 497, 498, 499, 472,
	500, 505, 1086, 501, 502, 503, 504, 1063, 0, 507,
	508, 960, 506, 212, 509, 510, 511, 512, 513, 514,
	327, 515, 0, 516, 1052, 1053, 1054, 1055, 0, 523,
	0, 517, 518, 1064, 519, 1065, 982, 520, 521, 522,
	0, 524, 525, 0, 966, 526, 527, 528, 530, 531,
	529, 532, 1026, 533, 0, 0, 534, 535, 536, 1461,
	1049, 1085, 0, 538, 537, 539, 595, 0, 0, 0,
	204, 540, 541, 596, 542, 543, 544, 963, 205, 0,
	0, 0, 0, 0, 959, 0, 0, 0, 0, 0,
	0, 957, 958, 1004, 976, 977, 978, 974, 975, 987,
	1696, 1694, 0, 0, 986, 0, 0, 0, 0, 0,
	249, 250, 251, 252, 253, 254, 0, 255, 256, 0,
	0, 0, 0, 0, 1028, 992, 0, 0, 0, 257,
	258, 260, 259, 261, 262, 263, 264, 546, 1041, 0,
	265, 1048, 266, 1047, 0, 1058, 267, 268, 269, 270,
	271, 272, 994, 1027, 961, 273, 1087, 1088, 553, 0,
	274, 275, 1034, 0, 1015, 0, 276, 277, 278, 279,
	280, 281, 282, 0, 0, 284, 285, 286, 283, 0,
	287, 0, 288, 289, 290, 291, 292, 293, 0, 294,
	295, 296, 1068, 297, 298, 1018, 1016, 1017, 1024, 1020,
	1019, 1023, 299, 300, 301, 302, 1051, 303, 1045, 1044,
	965, 307, 304, 305, 0, 308, 306, 0, 309, 310,
	311, 0, 0, 312, 1036, 314, 0, 315, 316, 0,
	317, 318, 319, 0, 320, 321, 971, 322, 323, 324,
	326, 328, 325, 329, 330, 331, 332, 1059, 1060, 983,
	246, 0, 0, 0, 0, 0, 333, 334, 335, 1043,
	0, 0, 0, 336, 0, 337, 0, 0, 1069, 338,
	339, 1056, 1057, 340, 341, 0, 342, 1066, 0, 993,
	343, 0, 344, 345, 346, 347, 348, 1029, 1030, 1033,
	411, 1071, 349, 350, 0, 351, 352, 353, 354, 0,
	0, 0, 247, 355, 356, 358, 0, 1070, 357, 1038,
	1039, 0, 999, 0, 359, 360, 1072, 1031, 1073, 361,
	362, 363, 1074, 364, 0, 0, 0, 365, 366, 367,
	368, 369, 370, 0, 371, 373, 372, 0, 374, 1067,
	1075, 375, 376, 1076, 0, 377, 378, 379, 1022, 1021,
	380, 381, 382, 383, 0, 384, 385, 387, 389, 386,
	388, 393, 390, 391, 392, 395, 0, 394, 1077, 396,
	397, 398, 403, 405, 406, 401, 402, 404, 407, 400,
	1078, 399, 962, 248, 1079, 408, 409, 984, 1032, 410,
	1046, 412, 413, 0, 0, 414, 0, 0, 0, 416,
	417, 418, 0, 0, 419, 420, 575, 1080, 421, 1081,
	1061, 422, 423, 415, 424, 425, 426, 427, 428, 429,
	430, 431, 0, 432, 433, 577, 578, 1062, 434, 580,
	435, 436, 0, 437, 0, 438, 439, 440, 441, 442,
	443, 444, 1042, 446, 445, 447, 0, 448, 0, 0,
	0, 0, 0, 449, 0, 451, 452, 453, 450, 454,
	455, 456, 457, 0, 458, 459, 460, 1082, 461, 462,
	463, 464, 972, 465, 0, 466, 467, 473, 474, 468,
	469, 475, 476, 477, 478, 479, 210, 481, 482, 480,
	483, 484, 485, 1025, 486, 470, 471, 487, 488, 1083,
	489, 490, 491, 492, 493, 494, 1040, 0, 495, 0,
	496, 497, 498, 499, 472, 500, 505, 1086, 501, 502,
	503, 504, 1063, 0, 507, 508, 960, 506, 212, 509,
	510, 511, 512, 513, 514, 327, 515, 0, 516, 1052,
	1053, 1054, 1055, 0, 523, 0, 517, 518, 1064, 519,
	1065, 982, 520, 521, 522, 0, 524, 525, 0, 966,
	526, 527, 528, 530, 531, 529, 532, 1026, 533, 0,
	0, 534, 535, 536, 1461, 1049, 1085, 0, 538, 537,
	539, 595, 0, 0, 0, 204, 540, 541, 596, 542,
	543, 544, 963, 205, 0, 0, 0, 0, 0, 959,
	0, 0, 0, 0, 0, 0, 957, 958, 1004, 976,
	977, 978, 974, 975, 987, 1696, 2826, 0, 0, 986,
	0, 0, 0, 0, 0, 249, 250, 251, 252, 253,
	254, 0, 255, 256, 0, 0, 0, 0, 0, 1028,
	992, 0, 0, 0, 257, 258, 260, 259, 261, 262,
	263, 264, 546, 1041, 0, 265, 1048, 266, 1047, 0,
	1058, 267, 268, 269, 270, 271, 272, 994, 1027, 961,
	273, 1087, 1088, 553, 0, 274, 275, 1034, 0, 1015,
	0, 276, 277, 278, 279, 280, 281, 282, 0, 0,
	284, 285, 286, 283, 0, 287, 0, 288, 289, 290,
	291, 292, 293, 0, 294, 295, 296, 1068, 297, 298,
	1018, 1016, 1017, 1024, 1020, 1019, 1023, 299, 300, 301,
	302, 1051, 303, 1045, 1044, 965, 307, 304, 305, 0,
	308, 306, 0, 309, 310, 311, 0, 0, 312, 1036,
	314, 0, 315, 316, 0, 317, 318, 319, 0, 320,
	321, 971, 322, 323, 324, 326, 328, 325, 329, 330,
	331, 332, 1059, 1060, 983, 246, 0, 0, 0, 0,
	0, 333, 334, 335, 1043, 0, 0, 0, 336, 0,
	337, 0, 0, 1069, 338, 339, 1056, 1057, 340, 341,
	0, 342, 1066, 0, 993, 343, 0, 344, 345, 346,
	347, 348, 1029, 1030, 1033, 411, 1071, 349, 350, 0,
	351, 352, 353, 354, 0, 0, 0, 247, 355, 356,
	358, 0, 1070, 357, 1038, 1039, 0, 999, 0, 359,
	360, 1072, 1031, 1073, 361, 362, 363, 1074, 364, 0,
	0, 0, 365, 366, 367, 368, 369, 370, 0, 371,
	373, 372, 0, 374, 1067, 1075, 375, 376, 1076, 0,
	377, 378, 379, 1022, 1021, 380, 381, 382, 383, 0,
	384, 385, 387, 389, 386, 388, 393, 390, 391, 392,
	395, 0, 394, 1077, 396, 397, 398, 403, 405, 406,
	401, 402, 404, 407, 400, 1078, 399, 962, 248, 1079,
	408, 409, 984, 1032, 410, 1046, 412, 413, 0, 0,
	414, 0, 0, 0, 416, 417, 418, 0, 0, 419,
	420, 575, 1080, 421, 1081, 1061, 422, 423, 415, 424,
	425, 426, 427, 428, 429, 430, 431, 0, 432, 433,
	577, 578, 1062, 434, 580, 435, 436, 0, 437, 0,
	438, 439, 440, 441, 442, 443, 444, 1042, 446, 445,
	447, 0, 448, 0, 0, 0, 0, 0, 449, 0,
	451, 452, 453, 450, 454, 455, 456, 457, 0, 458,
	459, 460, 1082, 461, 462, 463, 464, 972, 465, 0,
	466, 467, 473, 474, 468, 469, 475, 476, 477, 478,
	479, 210, 481, 482, 480, 483, 484, 485, 1025, 486,
	470, 471, 487, 488, 1083, 489, 490, 491, 492, 493,
	494, 1040, 0, 495, 0, 496, 497, 498, 499, 472,
	500, 505, 1086, 501, 502, 503, 504, 1063, 0, 507,
	508, 960, 506, 212, 509, 510, 511, 512, 513, 514,
	327, 515, 0, 516, 1052, 1053, 1054, 1055, 0, 523,
	0, 517, 518, 1064, 519, 1065, 982, 520, 521, 522,
	0, 524, 525, 0, 966, 526, 527, 528, 530, 531,
	529, 532, 1026, 533, 0, 0, 534, 535, 536, 1461,
	1049, 1085, 0, 538, 537, 539, 595, 0, 0, 0,
	204, 540, 541, 596, 542, 543, 544, 963, 205, 0,
	0, 0, 0, 0, 959, 0, 0, 0, 0, 0,
	0, 957, 958, 1004, 976, 977, 978, 974, 975, 987,
	1696, 1694, 0, 0, 986, 0, 0, 0, 0, 0,
	249, 250, 251, 252, 253, 254, 0, 255, 256, 0,
	0, 0, 0, 0, 1028, 992, 0, 0, 0, 257,
	258, 260, 259, 261, 262, 263, 264, 546, 1041, 0,
	265, 1048, 266, 1047, 2391, 1058, 267, 268, 269, 270,
	271, 272, 994, 1027, 961, 273, 1087, 1088, 553, 0,
	274, 275, 1034, 0, 1015, 0, 276, 277, 278, 279,
	280, 281, 282, 0, 0, 284, 285, 286, 283, 0,
	287, 0, 288, 289, 290, 291, 292, 293, 0, 294,
	295, 296, 1068, 297, 298, 1018, 1016, 1017, 1024, 1020,
	1019, 1023, 299, 300, 301, 302, 1051, 303, 1045, 1044,
	965, 307, 304, 305, 0, 308, 306, 0, 309, 310,
	311, 0, 0, 312, 1036, 314, 0, 315, 316, 0,
	317, 318, 319, 0, 320, 321, 971, 322, 323, 324,
	326, 328, 325, 329, 330, 331, 332, 1059, 1060, 983,
	246, 0, 0, 0, 0, 0, 333, 334, 335, 1043,
	0, 0, 0, 336, 0, 337, 0, 2396, 1069, 338,
	339, 1056, 1057, 340, 341, 0, 342, 1066, 0, 993,
	343, 0, 344, 345, 346, 347, 348, 1029, 1030, 1033,
	411, 1071, 349, 350, 0, 351, 352, 353, 354, 0,
	0, 0, 247, 355, 356, 358, 0, 1070, 357, 1038,
	1039, 0, 999, 0, 359, 360, 1072, 1031, 1073, 361,
	362, 363, 1074, 364, 0, 0, 0, 365, 366, 367,
	368, 369, 370, 0, 371, 373, 372, 2392, 374, 1067,
	1075, 375, 376, 1076, 0, 377, 378, 379, 1022, 1021,
	380, 381, 382, 383, 0, 384, 385, 387, 389, 386,
	388, 393, 390, 391, 392, 395, 0, 394, 1077, 396,
	397, 398, 403, 405, 406, 401, 402, 404, 407, 400,
	1078, 399, 962, 248, 1079, 408, 409, 984, 1032, 410,
	1046, 412, 413, 0, 0, 414, 0, 0, 0, 416,
	417, 418, 0, 0, 419, 420, 575, 1080, 421, 1081,
	1061, 422, 423, 415, 424, 425, 426, 427, 428, 429,
	430, 431, 0, 432, 433, 577, 578, 1062, 434, 580,
	435, 436, 0, 437, 0, 438, 439, 440, 441, 442,
	443, 444, 1042, 446, 445, 447, 0, 448, 0, 0,
	0, 0, 0, 449, 0, 451, 452, 453, 450, 454,
	455, 456, 457, 0, 458, 459, 460, 1082, 461, 462,
	463, 464, 972, 465, 0, 466, 467, 473, 474, 468,
	469, 475, 476, 477, 478, 479, 0, 481, 482, 480,
	483, 484, 485, 1025, 486, 470, 471, 487, 488, 1083,
	489, 490, 491, 492, 493, 494, 1040, 0, 495, 0,
	496, 497, 498, 499, 472, 500, 505, 1086, 501, 502,
	503, 504, 1063, 0, 507, 508, 960, 506, 0, 509,
	510, 511, 512, 513, 514, 327, 515, 0, 516, 1052,
	1053, 1054, 1055, 0, 523, 2393, 517, 518, 1064, 519,
	1065, 982, 520, 521, 522, 0, 524, 525, 0, 966,
	526, 527, 528, 530, 531, 529, 532, 1026, 533, 0,
	0, 534, 535, 536, 592, 1049, 1085, 0, 538, 537,
	539, 595, 0, 0, 0, 0, 540, 541, 596, 542,
	543, 544, 963, 0, 0, 0, 0, 0, 0, 959,
	0, 0, 0, 0, 0, 0, 957, 958, 0, 0,
	0, 0, 0, 0, 0, 988, 0, 0, 2332, 986,
	1004, 976, 977, 978, 974, 975, 987, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 250, 251,
	252, 253, 254, 0, 255, 256, 0, 0, 0, 0,
	0, 1028, 992, 0, 0, 0, 257, 258, 260, 259,
	261, 262, 263, 264, 546, 1041, 0, 265, 1048, 266,
	1047, 0, 1058, 267, 268, 269, 270, 271, 272, 994,
	1027, 961, 273, 1087, 1088, 553, 0, 274, 275, 1034,
	0, 1015, 0, 276, 277, 278, 279, 280, 281, 282,
	0, 0, 284, 285, 286, 283, 0, 287, 0, 288,
	289, 290, 291, 292, 293, 0, 294, 295, 296, 1068,
	297, 298, 1018, 1016, 1017, 1024, 1020, 1019, 1023, 299,
	300, 301, 302, 1051, 303, 1045, 1044, 965, 307, 304,
	305, 0, 308, 306, 0, 309, 310, 311, 0, 0,
	312, 1036, 314, 0, 315, 316, 0, 317, 318, 319,
	0, 320, 321, 971, 322, 323, 324, 326, 328, 325,
	329, 330, 331, 332, 1059, 1060, 983, 246, 0, 0,
	0, 0, 0, 333, 334, 335, 1043, 0, 0, 0,
	336, 0, 337, 0, 0, 1069, 338, 339, 1056, 1057,
	340, 341, 0, 342, 1066, 0, 993, 343, 0, 344,
	345, 346, 347, 348, 1029, 1030, 1033, 411, 1071, 349,
	350, 0, 351, 352, 353, 354, 0, 0, 0, 247,
	355, 356, 358, 0, 1070, 357, 1038, 1039, 0, 999,
	0, 359, 360, 1072, 1031, 1073, 361, 362, 363, 1074,
	364, 0, 0, 0, 365, 366, 367, 368, 369, 370,
	0, 371, 373, 372, 0, 374, 1067, 1075, 375, 376,
	1076, 0, 377, 378, 379, 1022, 1021, 380, 381, 382,
	383, 0, 384, 385, 387, 389, 386, 388, 393, 390,
	391, 392, 395, 0, 394, 1077, 396, 397, 398, 403,
	405, 406, 401, 402, 404, 407, 400, 1078, 399, 962,
	248, 1079, 408, 409, 984, 1032, 410, 1046, 412, 413,
	0, 0, 414, 0, 0, 0, 416, 417, 418, 0,
	0, 419, 420, 575, 1080, 421, 1081, 1061, 422, 423,
	415, 424, 425, 426, 427, 428, 429, 430, 431, 0,
	432, 433, 577, 578, 1062, 434, 580, 435, 436, 0,
	437, 0, 438, 439, 440, 441, 442, 443, 444, 1042,
	446, 445, 447, 0, 448, 0, 0, 0, 0, 0,
	449, 0, 451, 452, 453, 450, 454, 455, 456, 457,
	0, 458, 459, 460, 1082, 461, 462, 463, 464, 972,
	465, 0, 466, 467, 473, 474, 468, 469, 475, 476,
	477, 478, 479, 0, 481, 482, 480, 483, 484, 485,
	1025, 486, 470, 471, 487, 488, 1083, 489, 490, 491,
	492, 493, 494, 1040, 0, 495, 0, 496, 497, 498,
	499, 472, 500, 505, 1086, 501, 502, 503, 504, 1063,
	0, 507, 508, 960, 506, 0, 509, 510, 511, 512,
	513, 514, 327, 515, 0, 516, 1052, 1053, 1054, 1055,
	0, 523, 0, 517, 518, 1064, 519, 1065, 982, 520,
	521, 522, 0, 524, 525, 0, 966, 526, 527, 528,
	530, 531, 529, 532, 1026, 533, 0, 0, 534, 535,
	536, 592, 1049, 1085, 0, 538, 537, 539, 595, 0,
	0, 0, 0, 540, 541, 596, 542, 543, 544, 963,
	0, 0, 0, 0, 0, 0, 959, 0, 0, 0,
	0, 0, 0, 957, 958, 0, 0, 0, 0, 0,
	0, 0, 988, 2330, 0, 2329, 986, 1004, 976, 977,
	978, 974, 975, 987, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 250, 251, 252, 253, 254,
	0, 255, 256, 0, 0, 0, 0, 0, 1028, 992,
	0, 0, 0, 257, 258, 260, 259, 261, 262, 263,
	264, 546, 1041, 0, 265, 1048, 266, 1047, 0, 1058,
	267, 268, 269, 270, 271, 272, 994, 1027, 961, 273,
	1087, 1088, 553, 0, 274, 275, 1034, 0, 1015, 0,
	276, 277, 278, 279, 280, 281, 282, 0, 0, 284,
	285, 286, 283, 0, 287, 0, 288, 289, 290, 291,
	292, 293, 0, 294, 295, 296, 1068, 297, 298, 1018,
	1016, 1017, 1024, 1020, 1019, 1023, 299, 300, 301, 302,
	1051, 303, 1045, 1044, 965, 307, 304, 305, 0, 308,
	306, 0, 309, 310, 311, 0, 0, 312, 1036, 314,
	0, 315, 316, 0, 317, 318, 319, 0, 320, 321,
	971, 322, 323, 324, 326, 328, 325, 329, 330, 331,
	332, 1059, 1060, 983, 246, 0, 0, 0, 0, 0,
	333, 334, 335, 1043, 0, 0, 0, 336, 0, 337,
	0, 0, 1069, 338, 339, 1056, 1057, 340, 341, 0,
	342, 1066, 0, 993, 343, 0, 344, 345, 346, 347,
	348, 1029, 1030, 1033, 411, 1071, 349, 350, 0, 351,
	352, 353, 354, 0, 0, 0, 247, 355, 356, 358,
	0, 1070, 357, 1038, 1039, 0, 999, 0, 359, 360,
	1072, 1031, 1073, 361, 362, 363, 1074, 364, 0, 0,
	0, 365, 366, 367, 368, 369, 370, 0, 371, 373,
	372, 0, 374, 1067, 1075, 375, 376, 1076, 0, 377,
	378, 379, 1022, 1021, 380, 381, 382, 383, 0, 384,
	385, 387, 389, 386, 388, 393, 390, 391, 392, 395,
	0, 394, 1077, 396, 397, 398, 403, 405, 406, 401,
	402, 404, 407, 400, 1078, 399, 962, 248, 1079, 408,
	409, 984, 1032, 410, 1046, 412, 413, 0, 0, 414,
	0, 0, 0, 416, 417, 418, 0, 0, 419, 420,
	575, 1080, 421, 1081, 1061, 422, 423, 415, 424, 425,
	426, 427, 428, 429, 430, 431, 0, 432, 433, 577,
	578, 1062, 434, 580, 435, 436, 0, 437, 0, 438,
	439, 440, 441, 442, 443, 444, 1042, 446, 445, 447,
	0, 448, 0, 0, 0, 0, 0, 449, 0, 451,
	452, 453, 450, 454, 455, 456, 457, 0, 458, 459,
	460, 1082, 461, 462, 463, 464, 972, 465, 0, 466,
	467, 473, 474, 468, 469, 475, 476, 477, 478, 479,
	0, 481, 482, 480, 483, 484, 485, 1025, 486, 470,
	471, 487, 488, 1083, 489, 490, 491, 492, 493, 494,
	1040, 0, 495, 0, 496, 497, 498, 499, 472, 500,
	505, 1086, 501, 502, 503, 504, 1063, 0, 507, 508,
	960, 506, 0, 509, 510, 511, 512, 513, 514, 327,
	515, 0, 516, 1052, 1053, 1054, 1055, 0, 523, 0,
	517, 518, 1064, 519, 1065, 982, 520, 521, 522, 0,
	524, 525, 0, 966, 526, 527, 528, 530, 531, 529,
	532, 1026, 533, 0, 0, 534, 535, 536, 592, 1049,
	1085, 0, 538, 537, 539, 595, 0, 0, 0, 0,
	540, 541, 596, 542, 543, 544, 963, 0, 0, 0,
	0, 0, 0, 959, 0, 0, 0, 0, 0, 0,
	957, 958, 0, 0, 0, 0, 0, 0, 0, 988,
	2327, 0, 2326, 986, 1004, 976, 977, 978, 974, 975,
	987, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 250, 251, 252, 253, 254, 0, 255, 256,
	0, 0, 0, 0, 0, 1028, 992, 0, 0, 0,
	257, 258, 260, 259, 261, 262, 263, 264, 546, 1041,
	0, 265, 1048, 266, 1047, 0, 1058, 267, 268, 269,
	270, 271, 272, 994, 1027, 961, 273, 1087, 1088, 553,
	0, 274, 275, 1034, 0, 1015, 0, 276, 277, 278,
	279, 280, 281, 282, 0, 0, 284, 285, 286, 283,
	0, 287, 0, 288, 289, 290, 291, 292, 293, 0,
	294, 295, 296, 1068, 297, 298, 1018, 1016, 1017, 1024,
	1020, 1019, 1023, 299, 300, 301, 302, 1051, 303, 1045,
	1044, 965, 307, 304, 305, 0, 308, 306, 0, 309,
	310, 311, 0, 0, 312, 1036, 314, 0, 315, 316,
	0, 317, 318, 319, 0, 320, 321, 971, 322, 323,
	324, 326, 328, 325, 329, 330, 331, 332, 1059, 1060,
	983, 246, 0, 0, 0, 0, 0, 333, 334, 335,
	1043, 0, 0, 0, 336, 0, 337, 0, 0, 1069,
	338, 339, 1056, 1057, 340, 341, 0, 342, 1066, 0,
	993, 343, 0, 344, 345, 346, 347, 348, 1029, 1030,
	1033, 411, 1071, 349, 350, 0, 351, 352, 353, 354,
	0, 0, 0, 247, 355, 356, 358, 0, 1070, 357,
	1038, 1039, 0, 999, 0, 359, 360, 1072, 1031, 1073,
	361, 362, 363, 1074, 364, 0, 0, 0, 365, 366,
	367, 368, 369, 370, 0, 371, 373, 372, 0, 374,
	1067, 1075, 375, 376, 1076, 0, 377, 378, 379, 1022,
	1021, 380, 381, 382, 383, 0, 384, 385, 387, 389,
	386, 388, 393, 390, 391, 392, 395, 0, 394, 1077,
	396, 397, 398, 403, 405, 406, 401, 402, 404, 407,
	400, 1078, 399, 962, 248, 1079, 408, 409, 984, 1032,
	410, 1046, 412, 413, 0, 0, 414, 0, 0, 0,
	416, 417, 418, 0, 0, 419, 420, 575, 1080, 421,
	1081, 1061, 422, 423, 415, 424, 425, 426, 427, 428,
	429, 430, 431, 0, 432, 433, 577, 578, 1062, 434,
	580, 435, 436, 0, 437, 0, 438, 439, 440, 441,
	442, 443, 444, 1042, 446, 445, 447, 0, 448, 0,
	0, 0, 0, 0, 449, 0, 451, 452, 453, 450,
	454, 455, 456, 457, 0, 458, 459, 460, 1082, 461,
	462, 463, 464, 972, 465, 0, 466, 467, 473, 474,
	468, 469, 475, 476, 477, 478, 479, 0, 481, 482,
	480, 483, 484, 485, 1025, 486, 470, 471, 487, 488,
	1083, 489, 490, 491, 492, 493, 494, 1040, 0, 495,
	0, 496, 497, 498, 499, 472, 500, 505, 1086, 501,
	502, 503, 504, 1063, 0, 507, 508, 960, 506, 0,
	509, 510, 511, 512, 513, 514, 327, 515, 0, 516,
	1052, 1053, 1054, 1055, 0, 523, 0, 517, 518, 1064,
	519, 1065, 982, 520, 521, 522, 0, 524, 525, 0,
	966, 526, 527, 528, 530, 531, 529, 532, 1026, 533,
	0, 0, 534, 535, 536, 592, 1049, 1085, 0, 538,
	537, 539, 595, 0, 0, 0, 0, 540, 541, 596,
	542, 543, 544, 963, 0, 0, 0, 0, 0, 0,
	959, 0, 0, 0, 0, 0, 0, 957, 958, 0,
	0, 0, 0, 0, 0, 0, 988, 2324, 0, 2323,
	986, 1004, 976, 977, 978, 974, 975, 987, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 249, 250,
	251, 252, 253, 254, 0, 255, 256, 0, 0, 0,
	0, 0, 1028, 992, 0, 0, 0, 257, 258, 260,
	259, 261, 262, 263, 264, 546, 1041, 0, 265, 1048,
	266, 1047, 0, 1058, 267, 268, 269, 270, 271, 272,
	994, 1027, 961, 273, 1087, 1088, 553, 0, 274, 275,
	1034, 0, 1015, 0, 276, 277, 278, 279, 280, 281,
	282, 0, 0, 284, 285, 286, 283, 0, 287, 0,
	288, 289, 290, 291, 292, 293, 0, 294, 295, 296,
	1068, 297, 298, 1018, 1016, 1017, 1024, 1020, 1019, 1023,
	299, 300, 301, 302, 1051, 303, 1045, 1044, 965, 307,
	304, 305, 0, 308, 306, 0, 309, 310, 311, 0,
	0, 312, 1036, 314, 0, 315, 316, 0, 317, 318,
	319, 0, 320, 321, 971, 322, 323, 324, 326, 328,
	325, 329, 330, 331, 332, 1059, 1060, 983, 246, 0,
	0, 0, 0, 0, 333, 334, 335, 1043, 0, 0,
	0, 336, 0, 337, 0, 0, 1069, 338, 339, 1056,
	1057, 340, 341, 0, 342, 1066, 0, 993, 343, 0,
	344, 345, 346, 347, 348, 1029, 1030, 1033, 411, 1071,
	349, 350, 0, 351, 352, 353, 354, 0, 0, 0,
	247, 355, 356, 358, 0, 1070, 357, 1038, 1039, 0,
	999, 0, 359, 360, 1072, 1031, 1073, 361, 362, 363,
	1074, 364, 0, 0, 0, 365, 366, 367, 368, 369,
	370, 0, 371, 373, 372, 0, 374, 1067, 1075, 375,
	376, 1076, 0, 377, 378, 379, 1022, 1021, 380, 381,
	382, 383, 0, 384, 385, 387, 389, 386, 388, 393,
	390, 391, 392, 395, 0, 394, 1077, 396, 397, 398,
	403, 405, 406, 401, 402, 404, 407, 400, 1078, 399,
	962, 248, 1079, 408, 409, 984, 1032, 410, 1046, 412,
	413, 0, 0, 414, 0, 0, 0, 416, 417, 418,
	0, 0, 419, 420, 575, 1080, 421, 1081, 1061, 422,
	423, 415, 424, 425, 426, 427, 428, 429, 430, 431,
	0, 432, 433, 577, 578, 1062, 434, 580, 435, 436,
	0, 437, 0, 438, 439, 440, 441, 442, 443, 444,
	1042, 446, 445, 447, 0, 448, 0, 0, 0, 0,
	0, 449, 0, 451, 452, 453, 450, 454, 455, 456,
	457, 0, 458, 459, 460, 1082, 461, 462, 463, 464,
	972, 465, 0, 466, 467, 473, 474, 468, 469, 475,
	476, 477, 478, 479, 0, 481, 482, 480, 483, 484,
	485, 1025, 486, 470, 471, 487, 488, 1083, 489, 490,
	491, 492, 493, 494, 1040, 0, 495, 0, 496, 497,
	498, 499, 472, 500, 505, 1086, 501, 502, 503, 504,
	1063, 0, 507, 508, 960, 506, 0, 509, 510, 511,
	512, 513, 514, 327, 515, 0, 516, 1052, 1053, 1054,
	1055, 0, 523, 0, 517, 518, 1064, 519, 1065, 982,
	520, 521, 522, 0, 524, 525, 0, 966, 526, 527,
	528, 530, 531, 529, 532, 1026, 533, 0, 0, 534,
	535, 536, 592, 1049, 1085, 0, 538, 537, 539, 595,
	0, 0, 0, 0, 540, 541, 596, 542, 543, 544,
	963, 0, 0, 0, 0, 0, 0, 959, 0, 0,
	0, 0, 0, 0, 957, 958, 0, 0, 0, 0,
	0, 0, 0, 988, 2321, 0, 1549, 986, 1004, 976,
	977, 978, 974, 975, 987, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 250, 251, 252, 253,
	254, 0, 255, 256, 0, 0, 0, 0, 0, 1028,
	992, 0, 0, 0, 257, 258, 260, 259, 261, 262,
	263, 264, 546, 1041, 0, 265, 1048, 266, 1047, 0,
	1058, 267, 268, 269, 270, 271, 272, 994, 1027, 961,
	273, 1087, 1088, 553, 0, 274, 275, 1034, 0, 1015,
	0, 276, 277, 278, 279, 280, 281, 282, 0, 0,
	284, 285, 286, 283, 0, 287, 0, 288, 289, 290,
	291, 292, 293, 0, 294, 295, 296, 1068, 297, 298,
	1018, 1016, 1017, 1024, 1020, 1019, 1023, 299, 300, 301,
	302, 1051, 303, 1045, 1044, 965, 307, 304, 305, 0,
	308, 306, 0, 309, 310, 311, 0, 0, 312, 1036,
	314, 0, 315, 316, 0, 317, 318, 319, 0, 320,
	321, 971, 322, 323, 324, 326, 328, 325, 329, 330,
	331, 332, 1059, 1060, 983, 246, 0, 0, 0, 0,
	0, 333, 334, 335, 1043, 0, 0, 0, 336, 0,
	337, 0, 0, 1069, 338, 339, 1056, 1057, 340, 341,
	0, 342, 1066, 0, 993, 343, 0, 344, 345, 346,
	347, 348, 1029, 1030, 1033, 411, 1071, 349, 350, 0,
	351, 352, 353, 354, 0, 0, 0, 247, 355, 356,
	358, 0, 1070, 357, 1038, 1039, 0, 999, 0, 359,
	360, 1072, 1031, 1073, 361, 362, 363, 1074, 364, 0,
	0, 0, 365, 366, 367, 368, 369, 370, 0, 371,
	373, 372, 0, 374, 1067, 1075, 375, 376, 1076, 0,
	377, 378, 379, 1022, 1021, 380, 381, 382, 383, 0,
	384, 385, 387, 389, 386, 388, 393, 390, 391, 392,
	395, 0, 394, 1077, 396, 397, 398, 403, 405, 406,
	401, 402, 404, 407, 400, 1078, 399, 962, 248, 1079,
	408, 409, 984, 1032, 410, 1046, 412, 413, 0, 0,
	414, 0, 0, 0, 416, 417, 418, 0, 0, 419,
	420, 575, 1080, 421, 1081, 1061, 422, 423, 415, 424,
	425, 426, 427, 428, 429, 430, 431, 0, 432, 433,
	577, 578, 1062, 434, 580, 435, 436, 0, 437, 0,
	438, 439, 440, 441, 442, 443, 444, 1042, 446, 445,
	447, 0, 448, 0, 0, 0, 0, 0, 449, 0,
	451, 452, 453, 450, 454, 455, 456, 457, 0, 458,
	459, 460, 1082, 461, 462, 463, 464, 972, 465, 0,
	466, 467, 473, 474, 468, 469, 475, 476, 477, 478,
	479, 0, 481, 482, 480, 483, 484, 485, 1025, 486,
	470, 471, 487, 488, 1083, 489, 490, 491, 492, 493,
	494, 1040, 0, 495, 0, 496, 497, 498, 499, 472,
	500, 505, 1086, 501, 502, 503, 504, 1063, 0, 507,
	508, 960, 506, 0, 509, 510, 511, 512, 513, 514,
	327, 515, 0, 516, 1052, 1053, 1054, 1055, 0, 523,
	0, 517, 518, 1064, 519, 1065, 982, 520, 521, 522,
	0, 524, 525, 0, 966, 526, 527, 528, 530, 531,
	529, 532, 1026, 533, 0, 0, 534, 535, 536, 592,
	1049, 1085, 0, 538, 537, 539, 595, 1548, 0, 0,
	0, 540, 541, 596, 542, 543, 544, 963, 0, 0,
	0, 0, 0, 0, 959, 0, 0, 0, 0, 0,
	0, 957, 958, 0, 0, 0, 0, 0, 0, 0,
	988, 0, 0, 953, 986, 1004, 976, 977, 978, 974,
	975, 987, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 250, 251, 252, 253, 254, 0, 255,
	256, 0, 0, 0, 0, 0, 1028, 992, 0, 0,
	0, 257, 258, 260, 259, 261, 262, 263, 264, 546,
	1041, 0, 265, 1048, 266, 1047, 0, 1058, 267, 268,
	269, 270, 271, 272, 994, 1027, 961, 273, 1087, 1088,
	553, 0, 274, 275, 1034, 0, 1015, 0, 276, 277,
	278, 279, 280, 281, 282, 0, 0, 284, 285, 286,
	283, 0, 287, 0, 288, 289, 290, 291, 292, 293,
	0, 294, 295, 296, 1068, 297, 298, 1018, 1016, 1017,
	1024, 1020, 1019, 1023, 299, 300, 301, 302, 1051, 303,
	1045, 1044, 965, 307, 304, 305, 0, 308, 306, 0,
	309, 310, 311, 0, 0, 312, 1036, 314, 0, 315,
	316, 0, 317, 318, 319, 0, 320, 321, 971, 322,
	323, 324, 326, 328, 325, 329, 330, 331, 332, 1059,
	1060, 983, 246, 0, 0, 0, 0, 0, 333, 334,
	335, 1043, 0, 0, 0, 336, 0, 337, 0, 0,
	1069, 338, 339, 1056, 1057, 340, 341, 0, 342, 1066,
	0, 993, 343, 0, 344, 345, 346, 347, 348, 1029,
	1030, 1033, 411, 1071, 349, 350, 0, 351, 352, 353,
	354, 0, 0, 0, 247, 355, 356, 358, 0, 1070,
	357, 1038, 1039, 0, 999, 0, 359, 360, 1072, 1031,
	1073, 361, 362, 363, 1074, 364, 0, 0, 0, 365,
	366, 367, 368, 369, 370, 0, 371, 373, 372, 0,
	374, 1067, 1075, 375, 376, 1076, 0, 377, 378, 379,
	1022, 1021, 380, 381, 382, 383, 0, 384, 385, 387,
	389, 386, 388, 393, 390, 391, 392, 395, 0, 394,
	1077, 396, 397, 398, 403, 405, 406, 401, 402, 404,
	407, 400, 1078, 399, 962, 248, 1079, 408, 409, 984,
	1032, 410, 1046, 412, 413, 0, 0, 414, 0, 967,
	0, 416, 417, 418, 0, 0, 419, 420, 575, 1080,
	421, 1081, 1061, 422, 423, 415, 424, 425, 426, 427,
	428, 429, 430, 431, 0, 432, 433, 577, 578, 1062,
	434, 580, 435, 436, 0, 437, 0, 438, 439, 440,
	441, 442, 443, 444, 1042, 446, 445, 447, 0, 448,
	0, 0, 0, 0, 0, 449, 0, 451, 452, 453,
	450, 454, 455, 456, 457, 0, 458, 459, 460, 1082,
	461, 462, 463, 464, 972, 465, 0, 466, 467, 473,
	474, 468, 469, 475, 476, 477, 478, 479, 0, 481,
	482, 480, 483, 484, 485, 1025, 486, 470, 471, 487,
	488, 1083, 489, 490, 491, 492, 493, 494, 1040, 0,
	495, 0, 496, 497, 498, 499, 472, 500, 505, 1086,
	501, 502, 503, 504, 1063, 0, 507, 508, 960, 506,
	0, 509, 510, 511, 512, 513, 514, 327, 515, 0,
	516, 1052, 1053, 1054, 1055, 0, 523, 0, 517, 518,
	1064, 519, 1065, 982, 520, 521, 522, 0, 524, 525,
	0, 966, 526, 527, 528, 530, 531, 529, 532, 1026,
	533, 0, 0, 534, 535, 536, 592, 1049, 1085, 0,
	538, 537, 539, 595, 0, 0, 0, 0, 540, 541,
	596, 542, 543, 544, 963, 0, 0, 0, 0, 0,
	0, 959, 0, 0, 0, 0, 0, 0, 957, 958,
	1004, 976, 977, 978, 974, 975, 987, 988, 0, 0,
	0, 986, 0, 0, 0, 0, 0, 249, 250, 251,
	252, 253, 254, 0, 255, 256, 0, 0, 0, 0,
	0, 1028, 992, 0, 0, 0, 257, 258, 260, 259,
	261, 262, 263, 264, 546, 1041, 0, 265, 1048, 266,
	1047, 0, 1058, 267, 268, 269, 270, 271, 272, 994,
	1027, 961, 273, 1087, 1088, 553, 0, 274, 275, 1034,
	0, 1015, 0, 276, 277, 278, 279, 280, 281, 282,
	0, 0, 284, 285, 286, 283, 0, 287, 0, 288,
	289, 290, 291, 4066, 293, 0, 294, 295, 296, 1068,
	297, 298, 1018, 1016, 1017, 1024, 1020, 1019, 1023, 299,
	300, 301, 302, 1051, 303, 1045, 1044, 965, 307, 304,
	305, 0, 308, 306, 0, 309, 310, 311, 0, 0,
	312, 1036, 314, 0, 315, 316, 0, 317, 318, 319,
	0, 320, 321, 971, 322, 323, 324, 326, 328, 325,
	329, 330, 331, 332, 1059, 1060, 983, 246, 0, 0,
	0, 0, 0, 333, 334, 335, 1043, 0, 0, 0,
	336, 0, 337, 0, 0, 1069, 338, 339, 1056, 1057,
	340, 341, 0, 342, 1066, 0, 993, 343, 0, 344,
	345, 346, 347, 348, 1029, 1030, 1033, 411, 1071, 349,
	350, 0, 351, 352, 353, 354, 0, 0, 0, 247,
	355, 356, 358, 0, 1070, 357, 1038, 1039, 0, 999,
	0, 359, 360, 1072, 1031, 1073, 361, 362, 363, 1074,
	364, 0, 0, 0, 365, 366, 367, 368, 369, 370,
	0, 371, 373, 372, 0, 374, 1067, 1075, 375, 376,
	1076, 0, 377, 378, 379, 1022, 1021, 380, 381, 382,
	383, 0, 384, 385, 387, 389, 386, 388, 393, 390,
	391, 392, 395, 0, 394, 1077, 396, 397, 398, 403,
	405, 406, 401, 402, 404, 407, 400, 1078, 399, 962,
	248, 1079, 408, 409, 984, 1032, 410, 1046, 412, 413,
	0, 0, 414, 0, 967, 0, 416, 417, 418, 0,
	0, 419, 420, 575, 1080, 421, 1081, 1061, 422, 423,
	415, 424, 425, 426, 427, 428, 429, 430, 431, 0,
	432, 433, 577, 578, 1062, 434, 580, 435, 436, 0,
	437, 0, 438, 439, 440, 441, 442, 443, 444, 1042,
	446, 445, 447, 0, 448, 0, 0, 0, 0, 0,
	449, 0, 451, 452, 453, 450, 454, 455, 456, 457,
	0, 458, 459, 460, 1082, 461, 462, 463, 464, 972,
	465, 0, 466, 467, 473, 474, 468, 469, 475, 476,
	477, 478, 479, 0, 481, 482, 480, 483, 484, 485,
	1025, 486, 470, 471, 487, 488, 1083, 489, 490, 491,
	492, 493, 494, 1040, 0, 495, 0, 496, 497, 498,
	499, 472, 500, 505, 1086, 501, 502, 503, 504, 1063,
	0, 507, 508, 960, 506, 0, 509, 510, 511, 512,
	513, 514, 327, 515, 0, 516, 1052, 1053, 1054, 1055,
	0, 523, 0, 517, 518, 1064, 519, 1065, 982, 520,
	521, 522, 0, 524, 525, 0, 966, 526, 527, 528,
	530, 531, 529, 532, 1026, 533, 0, 0, 534, 535,
	536, 592, 1049, 1085, 0, 538, 537, 539, 595, 0,
	0, 0, 0, 540, 541, 596, 542, 543, 544, 963,
	0, 0, 0, 0, 0, 0, 959, 0, 0, 0,
	0, 0, 0, 957, 958, 1004, 976, 977, 978, 974,
	975, 987, 988, 0, 0, 0, 986, 0, 0, 0,
	0, 0, 249, 250, 251, 252, 253, 254, 0, 255,
	256, 0, 0, 0, 0, 0, 1028, 992, 0, 0,
	0, 257, 258, 260, 259, 261, 262, 263, 264, 546,
	1041, 0, 265, 1048, 266, 1047, 0, 1058, 267, 268,
	269, 270, 271, 272, 994, 1027, 961, 273, 1087, 1088,
	553, 0, 274, 275, 1034, 0, 1015, 0, 276, 277,
	278, 279, 280, 281, 282, 0, 0, 284, 285, 286,
	283, 0, 287, 0, 288, 289, 290, 291, 292, 293,
	0, 294, 295, 296, 1068, 297, 298, 1018, 1016, 1017,
	1024, 1020, 1019, 1023, 299, 300, 301, 302, 1051, 303,
	1045, 1044, 965, 307, 304, 305, 0, 308, 306, 0,
	309, 310, 311, 0, 0, 312, 1036, 314, 0, 315,
	316, 0, 317, 318, 319, 0, 320, 321, 971, 322,
	323, 324, 326, 328, 325, 329, 330, 331, 332, 1059,
	1060, 983, 246, 0, 0, 0, 0, 0, 333, 334,
	335, 1043, 0, 0, 0, 336, 0, 337, 0, 0,
	1069, 338, 339, 1056, 1057, 340, 341, 0, 342, 1066,
	0, 993, 343, 0, 344, 345, 346, 347, 348, 1029,
	1030, 1033, 411, 1071, 349, 350, 0, 351, 352, 353,
	354, 0, 0, 0, 2201, 355, 356, 358, 0, 1070,
	357, 1038, 1039, 0, 999, 0, 359, 360, 1072, 1031,
	1073, 361, 362, 363, 1074, 364, 0, 0, 0, 365,
	366, 367, 368, 369, 370, 0, 371, 373, 372, 0,
	374, 1067, 1075, 375, 376, 1076, 0, 377, 378, 379,
	1022, 1021, 380, 381, 382, 383, 0, 384, 385, 387,
	389, 386, 388, 393, 390, 391, 392, 395, 0, 394,
	1077, 396, 397, 398, 403, 405, 406, 401, 402, 404,
	407, 400, 1078, 399, 962, 248, 1079, 408, 409, 984,
	1032, 410, 1046, 412, 413, 0, 0, 414, 0, 0,
	0, 416, 417, 418, 0, 0, 419, 420, 575, 1080,
	421, 1081, 1061, 422, 423, 415, 424, 425, 426, 427,
	428, 429, 430, 431, 0, 432, 433, 577, 578, 1062,
	434, 580, 435, 436, 2200, 437, 0, 438, 439, 440,
	441, 442, 443, 444, 1042, 446, 445, 447, 0, 448,
	0, 0, 0, 0, 0, 449, 0, 451, 452, 453,
	450, 454, 455, 456, 457, 0, 458, 459, 460, 1082,
	461, 462, 463, 464, 972, 465, 0, 466, 467, 473,
	474, 468, 469, 475, 476, 477, 478, 479, 0, 481,
	482, 480, 483, 484, 485, 1025, 486, 470, 471, 487,
	488, 1083, 489, 490, 491, 492, 493, 494, 1040, 0,
	495, 0, 496, 497, 498, 499, 472, 500, 505, 1086,
	501, 502, 503, 504, 1063, 0, 507, 508, 960, 506,
	0, 509, 510, 511, 512, 513, 514, 327, 515, 0,
	516, 1052, 1053, 1054, 1055, 0, 523, 0, 517, 518,
	1064, 519, 1065, 982, 520, 521, 522, 0, 524, 525,
	0, 966, 526, 527, 528, 530, 531, 529, 532, 1026,
	533, 0, 0, 534, 535, 536, 592, 1049, 1085, 0,
	538, 537, 539, 595, 0, 0, 0, 0, 540, 541,
	596, 542, 543, 544, 963, 0, 0, 0, 0, 0,
	0, 959, 0, 0, 0, 0, 0, 0, 957, 958,
	1004, 976, 977, 978, 974, 975, 987, 988, 0, 0,
	0, 986, 0, 0, 0, 0, 0, 249, 250, 251,
	252, 253, 254, 0, 255, 256, 0, 0, 0, 0,
	0, 1028, 992, 0, 0, 0, 257, 258, 260, 259,
	261, 262, 263, 264, 546, 1041, 0, 265, 1048, 266,
	1047, 0, 1058, 267, 268, 269, 270, 271, 272, 994,
	1027, 961, 273, 1087, 1088, 553, 0, 274, 275, 1034,
	0, 1015, 0, 276, 277, 278, 279, 280, 281, 282,
	0, 0, 284, 285, 286, 283, 0, 287, 0, 288,
	289, 290, 291, 292, 293, 0, 294, 295, 296, 1068,
	297, 298, 1018, 1016, 1017, 1024, 1020, 1019, 1023, 299,
	300, 301, 302, 1051, 303, 1045, 1044, 965, 307, 304,
	305, 0, 308, 306, 0, 309, 310, 311, 0, 0,
	312, 1036, 314, 0, 315, 316, 0, 317, 318, 319,
	0, 320, 321, 971, 322, 323, 324, 326, 328, 325,
	329, 330, 331, 332, 1059, 1060, 983, 246, 0, 0,
	0, 0, 0, 333, 334, 335, 1043, 0, 0, 0,
	336, 0, 337, 0, 0, 1069, 338, 339, 1056, 1057,
	340, 341, 0, 342, 1066, 0, 993, 343, 0, 344,
	345, 346, 347, 348, 1029, 1030, 1033, 411, 1071, 349,
	350, 0, 351, 352, 353, 354, 0, 0, 0, 247,
	355, 356, 358, 0, 1070, 357, 1038, 1039, 0, 999,
	0, 359, 360, 1072, 1031, 1073, 361, 362, 363, 1074,
	364, 0, 0, 0, 365, 366, 367, 368, 369, 370,
	0, 371, 373, 372, 0, 374, 1067, 1075, 375, 376,
	1076, 0, 377, 378, 379, 1022, 1021, 380, 381, 382,
	383, 0, 384, 385, 387, 389, 386, 388, 393, 390,
	391, 392, 395, 0, 394, 1077, 396, 397, 398, 403,
	405, 406, 401, 402, 404, 407, 400, 1078, 399, 962,
	248, 1079, 408, 409, 984, 1032, 410, 1046, 412, 413,
	0, 0, 414, 0, 967, 0, 416, 417, 418, 0,
	0, 419, 420, 575, 1080, 421, 1081, 1061, 422, 423,
	415, 424, 425, 426, 427, 428, 429, 430, 431, 0,
	432, 433, 577, 578, 1062, 434, 580, 435, 436, 0,
	437, 0, 438, 439, 440, 441, 442, 443, 444, 1042,
	446, 445, 447, 0, 448, 0, 0, 0, 0, 0,
	449, 0, 451, 452, 453, 450, 454, 455, 456, 457,
	0, 458, 459, 460, 1082, 461, 462, 463, 464, 972,
	465, 0, 466, 467, 473, 474, 468, 469, 475, 476,
	477, 478, 479, 0, 481, 482, 480, 483, 484, 485,
	1025, 486, 470, 471, 487, 488, 1083, 489, 490, 491,
	492, 493, 494, 1040, 0, 495, 0, 496, 497, 498,
	499, 472, 500, 505, 1086, 501, 502, 503, 504, 1063,
	0, 507, 508, 960, 506, 0, 509, 510, 511, 512,
	513, 514, 327, 515, 0, 516, 1052, 1053, 1054, 1055,
	0, 523, 0, 517, 518, 1064, 519, 1065, 982, 520,
	521, 522, 0, 524, 525, 0, 966, 526, 527, 528,
	530, 531, 529, 532, 1026, 533, 0, 0, 534, 535,
	536, 592, 1049, 1085, 0, 538, 537, 539, 595, 0,
	0, 0, 0, 540, 541, 596, 542, 543, 544, 963,
	0, 0, 0, 0, 0, 0, 959, 0, 0, 0,
	0, 0, 0, 957, 958, 1004, 976, 977, 978, 974,
	975, 987, 988, 0, 0, 0, 986, 0, 0, 0,
	0, 0, 249, 250, 251, 252, 253, 254, 0, 255,
	256, 0, 0, 0, 0, 0, 1028, 992, 0, 0,
	0, 257, 258, 260, 259, 261, 262, 263, 264, 546,
	1041, 0, 265, 1048, 266, 1047, 0, 1058, 267, 268,
	269, 270, 271, 272, 994, 1027, 961, 273, 1087, 1088,
	553, 0, 274, 275, 1034, 0, 1015, 0, 276, 277,
	278, 279, 280, 281, 282, 0, 0, 284, 285, 286,
	283, 0, 287, 0, 288, 289, 290, 291, 3862, 293,
	0, 294, 295, 296, 1068, 297, 298, 1018, 1016, 1017,
	1024, 1020, 1019, 1023, 299, 300, 301, 302, 1051, 303,
	1045, 1044, 965, 307, 304, 305, 0, 308, 306, 0,
	309, 310, 311, 0, 0, 312, 1036, 314, 0, 315,
	316, 0, 317, 318, 319, 0, 320, 321, 971, 322,
	323, 324, 326, 328, 325, 329, 330, 331, 332, 1059,
	1060, 983, 246, 0, 0, 0, 0, 0, 333, 334,
	335, 1043, 0, 0, 0, 336, 0, 337, 0, 0,
	1069, 338, 339, 1056, 1057, 340, 341, 0, 342, 1066,
	0, 993, 343, 0, 344, 345, 346, 347, 348, 1029,
	1030, 1033, 411, 1071, 349, 350, 0, 351, 352, 353,
	354, 0, 0, 0, 247, 355, 356, 358, 0, 1070,
	357, 1038, 1039, 0, 999, 0, 359, 360, 1072, 1031,
	1073, 361, 362, 363, 1074, 364, 0, 0, 0, 365,
	366, 367, 368, 369, 370, 0, 371, 373, 372, 0,
	374, 1067, 1075, 375, 376, 1076, 0, 377, 378, 379,
	1022, 1021, 380, 381, 382, 383, 0, 384, 385, 387,
	389, 386, 388, 393, 390, 391, 392, 395, 0, 394,
	1077, 396, 397, 398, 403, 405, 406, 401, 402, 404,
	407, 400, 1078, 399, 962, 248, 1079, 408, 409, 984,
	1032, 410, 1046, 412, 413, 0, 0, 414, 0, 967,
	0, 416, 417, 418, 0, 0, 419, 420, 575, 1080,
	421, 1081, 1061, 422, 423, 415, 424, 425, 426, 427,
	428, 429, 430, 431, 0, 432, 433, 577, 578, 1062,
	434, 580, 435, 436, 0, 437, 0, 438, 439, 440,
	441, 442, 443, 444, 1042, 446, 445, 447, 0, 448,
	0, 0, 0, 0, 0, 449, 0, 451, 452, 453,
	450, 454, 455, 456, 457, 0, 458, 459, 460, 1082,
	461, 462, 463, 464, 972, 465, 0, 466, 467, 473,
	474, 468, 469, 475, 476, 477, 478, 479, 0, 481,
	482, 480, 483, 484, 485, 1025, 486, 470, 471, 487,
	488, 1083, 489, 490, 491, 492, 493, 494, 1040, 0,
	495, 0, 496, 497, 498, 499, 472, 500, 505, 1086,
	501, 502, 503, 504, 1063, 0, 507, 508, 960, 506,
	0, 509, 510, 511, 512, 513, 514, 327, 515, 0,
	516, 1052, 1053, 1054, 1055, 0, 523, 0, 517, 518,
	1064, 519, 1065, 982, 520, 521, 522, 0, 524, 525,
	0, 966, 526, 527, 528, 530, 531, 529, 532, 1026,
	533, 0, 0, 534, 535, 536, 592, 1049, 1085, 0,
	538, 537, 539, 595, 0, 0, 0, 0, 540, 541,
	596, 542, 543, 544, 963, 0, 0, 0, 0, 0,
	0, 959, 0, 0, 0, 0, 0, 0, 957, 958,
	1004, 976, 977, 978, 974, 975, 987, 988, 0, 0,
	0, 986, 0, 0, 0, 0, 0, 249, 250, 251,
	252, 253, 254, 0, 255, 256, 0, 0, 0, 0,
	0, 1028, 992, 0, 0, 0, 257, 258, 260, 259,
	261, 262, 263, 264, 546, 1041, 0, 265, 1048, 266,
	1047, 0, 1058, 267, 268, 269, 270, 271, 272, 994,
	1027, 961, 273, 1087, 1088, 553, 0, 274, 275, 1034,
	0, 1015, 0, 276, 277, 278, 279, 280, 281, 282,
	0, 0, 284, 285, 286, 283, 0, 287, 0, 288,
	289, 290, 291, 292, 293, 0, 294, 295, 296, 1068,
	297, 298, 1018, 1016, 1017, 1024, 1020, 1019, 1023, 299,
	300, 301, 302, 1051, 303, 1045, 1044, 965, 307, 304,
	305, 0, 308, 306, 0, 309, 310, 311, 0, 0,
	312, 1036, 314, 0, 315, 316, 0, 317, 318, 319,
	0, 320, 321, 971, 322, 323, 324, 326, 328, 325,
	329, 330, 331, 332, 1059, 1060, 983, 246, 0, 0,
	0, 0, 0, 333, 334, 335, 1043, 0, 0, 0,
	336, 0, 337, 0, 0, 1069, 338, 339, 1056, 1057,
	340, 341, 0, 342, 1066, 0, 993, 343, 0, 344,
	345, 346, 347, 348, 1029, 1030, 1033, 411, 1071, 349,
	350, 0, 351, 352, 353, 354, 0, 0, 0, 247,
	355, 356, 358, 0, 1070, 357, 1038, 1039, 0, 999,
	0, 359, 360, 1072, 1031, 1073, 361, 362, 363, 1074,
	364, 0, 0, 0, 365, 366, 367, 368, 369, 370,
	0, 371, 373, 372, 0, 374, 1067, 1075, 375, 376,
	1076, 0, 377, 378, 379, 1022, 1021, 380, 381, 382,
	383, 0, 384, 385, 387, 389, 386, 388, 393, 390,
	391, 392, 395, 0, 394, 1077, 396, 397, 398, 403,
	405, 406, 401, 402, 404, 407, 400, 1078, 399, 962,
	3521, 1079, 408, 409, 984, 1032, 410, 1046, 412, 413,
	0, 0, 414, 0, 0, 0, 416, 417, 418, 0,
	0, 419, 420, 575, 1080, 421, 1081, 1061, 422, 423,
	415, 424, 425, 426, 427, 428, 429, 430, 431, 0,
	432, 433, 577, 578, 1062, 434, 580, 435, 436, 0,
	437, 0, 438, 439, 440, 441, 442, 443, 444, 1042,
	446, 445, 447, 0, 448, 0, 0, 0, 0, 0,
	449, 0, 451, 452, 453, 450, 454, 455, 456, 457,
	0, 458, 459, 460, 1082, 461, 462, 463, 464, 972,
	465, 0, 466, 467, 473, 474, 468, 469, 475, 476,
	477, 478, 479, 0, 481, 482, 480, 483, 484, 485,
	1025, 486, 470, 471, 487, 488, 1083, 489, 490, 491,
	492, 493, 494, 1040, 0, 495, 0, 496, 497, 498,
	499, 472, 500, 505, 1086, 501, 502, 503, 504, 1063,
	0, 507, 508, 960, 506, 0, 509, 510, 511, 512,
	513, 514, 327, 515, 0, 516, 1052, 1053, 1054, 1055,
	0, 523, 0, 517, 518, 1064, 519, 1065, 982, 520,
	521, 522, 0, 524, 525, 0, 966, 526, 527, 528,
	530, 531, 529, 532, 1026, 533, 0, 0, 534, 535,
	536, 592, 1049, 1085, 0, 538, 537, 539, 595, 0,
	0, 0, 0, 540, 541, 596, 542, 543, 544, 963,
	0, 0, 0, 0, 0, 0, 959, 0, 0, 0,
	0, 0, 0, 957, 958, 1764, 0, 0, 0, 0,
	0, 0, 988, 0, 0, 0, 986, 1004, 976, 977,
	978, 974, 975, 987, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 250, 251, 252, 253, 254,
	0, 255, 256, 0, 0, 0, 0, 0, 1028, 992,
	0, 0, 0, 257, 258, 260, 259, 261, 262, 263,
	264, 546, 1041, 0, 265, 1048, 266, 1047, 0, 1058,
	267, 268, 269, 270, 271, 272, 994, 1027, 961, 273,
	1087, 1088, 553, 0, 274, 275, 1034, 0, 1015, 0,
	276, 277, 278, 279, 280, 281, 282, 0, 0, 284,
	285, 286, 283, 0, 287, 0, 288, 289, 290, 291,
	292, 293, 0, 294, 295, 296, 1068, 297, 298, 1018,
	1016, 1017, 1024, 1020, 1019, 1023, 299, 300, 301, 302,
	1051, 303, 1045, 1044, 965, 307, 304, 305, 0, 308,
	306, 0, 309, 310, 311, 0, 0, 312, 1036, 314,
	0, 315, 316, 0, 317, 318, 319, 0, 320, 321,
	971, 322, 323, 324, 326, 328, 325, 329, 330, 331,
	332, 1059, 1060, 983, 246, 0, 0, 0, 0, 0,
	333, 334, 335, 1043, 0, 0, 0, 336, 0, 337,
	0, 0, 1069, 338, 339, 1056, 1057, 340, 341, 0,
	342, 1066, 0, 993, 343, 0, 344, 345, 346, 347,
	348, 1029, 1030, 1033, 411, 1071, 349, 350, 0, 351,
	352, 353, 354, 0, 0, 0, 247, 355, 356, 358,
	0, 1070, 357, 1038, 1039, 0, 999, 0, 359, 360,
	1072, 1031, 1073, 361, 362, 363, 1074, 364, 0, 0,
	0, 365, 366, 367, 368, 369, 370, 0, 371, 373,
	372, 0, 374, 1067, 1075, 375, 376, 1076, 0, 377,
	378, 379, 1022, 1021, 380, 381, 382, 383, 0, 384,
	385, 387, 389, 386, 388, 393, 390, 391, 392, 395,
	0, 394, 1077, 396, 397, 398, 403, 405, 406, 401,
	402, 404, 407, 400, 1078, 399, 962, 248, 1079, 408,
	409, 984, 1032, 410, 1046, 412, 413, 0, 0, 414,
	0, 0, 0, 416, 417, 418, 0, 0, 419, 420,
	575, 1080, 421, 1081, 1061, 422, 423, 415, 424, 425,
	426, 427, 428, 429, 430, 431, 0, 432, 433, 577,
	578, 1062, 434, 580, 435, 436, 0, 437, 0, 438,
	439, 440, 441, 442, 443, 444, 1042, 446, 445, 447,
	0, 448, 0, 0, 0, 0, 0, 449, 0, 451,
	452, 453, 450, 454, 455, 456, 457, 0, 458, 459,
	460, 1082, 461, 462, 463, 464, 972, 465, 0, 466,
	467, 473, 474, 468, 469, 475, 476, 477, 478, 479,
	0, 481, 482, 480, 483, 484, 485, 1025, 486, 470,
	471, 487, 488, 1083, 489, 490, 491, 492, 493, 494,
	1040, 0, 495, 0, 496, 497, 498, 499, 472, 500,
	505, 1086, 501, 502, 503, 504, 1063, 0, 507, 508,
	960, 506, 0, 509, 510, 511, 512, 513, 514, 327,
	515, 0, 516, 1052, 1053, 1054, 1055, 0, 523, 0,
	517, 518, 1064, 519, 1065, 982, 520, 521, 522, 0,
	524, 525, 0, 966, 526, 527, 528, 530, 531, 529,
	532, 1026, 533, 0, 0, 534, 535, 536, 592, 1049,
	1085, 3274, 538, 537, 539, 595, 0, 0, 0, 0,
	540, 541, 596, 542, 543, 544, 963, 0, 0, 0,
	0, 0, 0, 959, 0, 0, 0, 0, 0, 0,
	957, 958, 1004, 976, 977, 978, 974, 975, 987, 988,
	0, 0, 0, 986, 0, 0, 0, 0, 0, 249,
	250, 251, 252, 253, 254, 0, 255, 256, 0, 0,
	0, 0, 0, 1028, 992, 0, 0, 0, 257, 258,
	260, 259, 261, 262, 263, 264, 546, 1041, 0, 265,
	1048, 266, 1047, 0, 1058, 267, 268, 269, 270, 271,
	272, 994, 1027, 961, 273, 1087, 1088, 553, 0, 274,
	275, 1034, 0, 1015, 0, 276, 277, 278, 279, 280,
	281, 282, 0, 0, 284, 285, 286, 283, 0, 287,
	0, 288, 289, 290, 291, 292, 293, 0, 294, 295,
	296, 1068, 297, 298, 1018, 1016, 1017, 1024, 1020, 1019,
	1023, 299, 300, 301, 302, 1051, 303, 1045, 1044, 965,
	307, 304, 305, 0, 308, 306, 0, 309, 310, 311,
	0, 0, 312, 1036, 314, 0, 315, 316, 0, 317,
	318, 319, 0, 320, 321, 971, 322, 323, 324, 326,
	328, 325, 329, 330, 331, 332, 1059, 1060, 983, 246,
	0, 0, 0, 0, 0, 333, 334, 335, 1043, 0,
	0, 0, 336, 0, 337, 0, 0, 1069, 338, 339,
	1056, 1057, 340, 341, 0, 342, 1066, 0, 993, 343,
	0, 344, 345, 346, 347, 348, 1029, 1030, 1033, 411,
	1071, 349, 350, 0, 351, 352, 353, 354, 0, 0,
	0, 247, 355, 356, 358, 0, 1070, 357, 1038, 1039,
	0, 999, 0, 359, 360, 1072, 1031, 1073, 361, 362,
	363, 1074, 364, 0, 0, 0, 365, 366, 367, 368,
	369, 370, 0, 371, 373, 372, 0, 374, 1067, 1075,
	375, 376, 1076, 0, 377, 378, 379, 1022, 1021, 380,
	381, 382, 383, 0, 384, 385, 387, 389, 386, 388,
	393, 390, 391, 392, 395, 0, 394, 1077, 396, 397,
	398, 403, 405, 406, 401, 402, 404, 407, 400, 1078,
	399, 962, 248, 1079, 408, 409, 984, 1032, 410, 1046,
	412, 413, 0, 0, 414, 0, 0, 0, 416, 417,
	418, 0, 0, 419, 420, 575, 1080, 421, 1081, 1061,
	422, 423, 415, 424, 425, 426, 427, 428, 429, 430,
	431, 0, 432, 433, 577, 578, 1062, 434, 580, 435,
	436, 0, 437, 0, 438, 439, 440, 441, 442, 443,
	444, 1042, 446, 445, 447, 0, 448, 0, 0, 0,
	0, 0, 449, 0, 451, 452, 453, 450, 454, 455,
	456, 457, 0, 458, 459, 460, 1082, 461, 462, 463,
	464, 972, 465, 0, 466, 467, 473, 474, 468, 469,
	475, 476, 477, 478, 479, 0, 481, 482, 480, 483,
	484, 485, 1025, 486, 470, 471, 487, 488, 1083, 489,
	490, 491, 492, 493, 494, 1040, 0, 495, 0, 496,
	497, 498, 499, 472, 500, 505, 1086, 501, 502, 503,
	504, 1063, 0, 507, 508, 960, 506, 0, 509, 510,
	511, 512, 513, 514, 327, 515, 0, 516, 1052, 1053,
	1054, 1055, 0, 523, 0, 517, 518, 1064, 519, 1065,
	982, 520, 521, 522, 0, 524, 525, 0, 966, 526,
	527, 528, 530, 531, 529, 532, 1026, 533, 0, 0,
	534, 535, 536, 592, 1049, 1085, 0, 538, 537, 539,
	595, 0, 0, 0, 0, 540, 541, 596, 542, 543,
	544, 963, 0, 0, 0, 0, 0, 0, 959, 0,
	0, 0, 0, 0, 0, 957, 958, 1764, 0, 0,
	0, 0, 0, 0, 988, 0, 0, 0, 986, 1004,
	976, 977, 978, 974, 975, 987, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 249, 250, 251, 252,
	253, 254, 0, 255, 256, 0, 0, 0, 0, 0,
	1028, 992, 0, 0, 0, 257, 258, 260, 259, 261,
	262, 263, 264, 546, 1041, 0, 265, 1048, 266, 1047,
	0, 1058, 267, 268, 269, 270, 271, 272, 994, 1027,
	961, 273, 1087, 1088, 553, 0, 274, 275, 1034, 0,
	1015, 0, 276, 277, 278, 279, 280, 281, 282, 0,
	0, 284, 285, 286, 283, 0, 287, 0, 288, 289,
	290, 291, 292, 293, 0, 294, 295, 296, 1068, 297,
	298, 1018, 1016, 1017, 1024, 1020, 1019, 1023, 299, 300,
	301, 302, 1051, 303, 1045, 1044, 965, 307, 304, 305,
	0, 308, 306, 0, 309, 310, 311, 0, 0, 312,
	1036, 314, 0, 315, 316, 0, 317, 318, 319, 0,
	320, 321, 971, 322, 323, 324, 326, 328, 325, 329,
	330, 331, 332, 1059, 1060, 983, 246, 0, 0, 0,
	0, 0, 333, 334, 335, 1043, 0, 0, 0, 336,
	0, 337, 0, 2396, 1069, 338, 339, 1056, 1057, 340,
	341, 0, 342, 1066, 0, 993, 343, 0, 344, 345,
	346, 347, 348, 1029, 1030, 1033, 411, 1071, 349, 350,
	0, 351, 352, 353, 354, 0, 0, 0, 247, 355,
	356, 358, 0, 1070, 357, 1038, 1039, 0, 999, 0,
	359, 360, 1072, 1031, 1073, 361, 362, 363, 1074, 364,
	0, 0, 0, 365, 366, 367, 368, 369, 370, 0,
	371, 373, 372, 0, 374, 1067, 1075, 375, 376, 1076,
	0, 377, 378, 379, 1022, 1021, 380, 381, 382, 383,
	0, 384, 385, 387, 389, 386, 388, 393, 390, 391,
	392, 395, 0, 394, 1077, 396, 397, 398, 403, 405,
	406, 401, 402, 404, 407, 400, 1078, 399, 962, 248,
	1079, 408, 409, 984, 1032, 410, 1046, 412, 413, 0,
	0, 414, 0, 0, 0, 416, 417, 418, 0, 0,
	419, 420, 575, 1080, 421, 1081, 1061, 422, 423, 415,
	424, 425, 426, 427, 428, 429, 430, 431, 0, 432,
	433, 577, 578, 1062, 434, 580, 435, 436, 0, 437,
	0, 438, 439, 440, 441, 442, 443, 444, 1042, 446,
	445, 447, 0, 448, 0, 0, 0, 0, 0, 449,
	0, 451, 452, 453, 450, 454, 455, 456, 457, 0,
	458, 459, 460, 1082, 461, 462, 463, 464, 972, 465,
	0, 466, 467, 473, 474, 468, 469, 475, 476, 477,
	478, 479, 0, 481, 482, 480, 483, 484, 485, 1025,
	486, 470, 471, 487, 488, 1083, 489, 490, 491, 492,
	493, 494, 1040, 0, 495, 0, 496, 497, 498, 499,
	472, 500, 505, 1086, 501, 502, 503, 504, 1063, 0,
	507, 508, 960, 506, 0, 509, 510, 511, 512, 513,
	514, 327, 515, 0, 516, 1052, 1053, 1054, 1055, 0,
	523, 0, 517, 518, 1064, 519, 1065, 982, 520, 521,
	522, 0, 524, 525, 0, 966, 526, 527, 528, 530,
	531, 529, 532, 1026, 533, 0, 0, 534, 535, 536,
	592, 1049, 1085, 0, 538, 537, 539, 595, 0, 0,
	0, 0, 540, 541, 596, 542, 543, 544, 963, 0,
	0, 0, 0, 0, 0, 959, 0, 0, 0, 0,
	0, 0, 957, 958, 1004, 976, 977, 978, 974, 975,
	987, 988, 0, 0, 0, 986, 0, 0, 0, 0,
	0, 249, 250, 251, 252, 253, 254, 0, 255, 256,
	0, 0, 0, 0, 0, 1028, 992, 0, 0, 0,
	257, 258, 260, 259, 261, 262, 263, 264, 546, 1041,
	0, 265, 1048, 266, 1047, 0, 1058, 267, 268, 269,
	270, 271, 272, 994, 1027, 961, 273, 1087, 1088, 553,
	0, 274, 275, 1034, 0, 1015, 0, 276, 277, 278,
	279, 280, 281, 282, 0, 0, 284, 285, 286, 283,
	0, 287, 0, 288, 289, 290, 291, 292, 293, 0,
	294, 295, 296, 1068, 297, 298, 1018, 1016, 1017, 1024,
	1020, 1019, 1023, 299, 300, 301, 302, 1051, 303, 1045,
	1044, 965, 307, 304, 305, 0, 308, 306, 0, 309,
	310, 311, 0, 0, 312, 1036, 314, 0, 315, 316,
	0, 317, 318, 319, 0, 320, 321, 971, 322, 323,
	324, 326, 328, 325, 329, 330, 331, 332, 1059, 1060,
	983, 246, 0, 0, 0, 0, 0, 333, 334, 335,
	1043, 0, 0, 0, 336, 0, 337, 0, 0, 1069,
	338, 339, 1056, 1057, 340, 341, 0, 342, 1066, 0,
	993, 343, 0, 344, 345, 346, 347, 348, 1029, 1030,
	1033, 411, 1071, 349, 350, 0, 351, 352, 353, 354,
	0, 0, 0, 247, 355, 356, 358, 0, 1070, 357,
	1038, 1039, 0, 999, 0, 359, 360, 1072, 1031, 1073,
	361, 362, 363, 1074, 364, 0, 0, 0, 365, 366,
	367, 368, 369, 370, 0, 371, 373, 372, 0, 374,
	1067, 1075, 375, 376, 1076, 0, 377, 378, 379, 1022,
	1021, 380, 381, 382, 383, 0, 384, 385, 387, 389,
	386, 388, 393, 390, 391, 392, 395, 0, 394, 1077,
	396, 397, 398, 403, 405, 406, 401, 402, 404, 407,
	400, 1078, 399, 962, 248, 1079, 408, 409, 984, 1032,
	410, 1046, 412, 413, 0, 0, 414, 0, 0, 0,
	416, 417, 418, 0, 0, 419, 420, 575, 1080, 421,
	1081, 1061, 422, 423, 415, 424, 425, 426, 427, 428,
	429, 430, 431, 0, 432, 433, 577, 578, 1062, 434,
	580, 435, 436, 0, 437, 0, 438, 439, 440, 441,
	442, 443, 444, 1042, 446, 445, 447, 0, 448, 0,
	0, 0, 0, 0, 449, 0, 451, 452, 453, 450,
	454, 455, 456, 457, 0, 458, 459, 460, 1082, 461,
	462, 463, 464, 972, 465, 0, 466, 467, 473, 474,
	468, 469, 475, 476, 477, 478, 479, 0, 481, 482,
	480, 483, 484, 485, 1025, 486, 470, 471, 487, 488,
	1083, 489, 490, 491, 492, 493, 494, 1040, 0, 495,
	0, 496, 497, 498, 499, 472, 500, 505, 1086, 501,
	502, 503, 504, 1063, 0, 507, 508, 960, 506, 0,
	509, 510, 511, 512, 513, 514, 327, 515, 0, 516,
	1052, 1053, 1054, 1055, 0, 523, 0, 517, 518, 1064,
	519, 1065, 982, 520, 521, 522, 0, 524, 525, 0,
	966, 526, 527, 528, 530, 531, 529, 532, 1026, 533,
	0, 0, 534, 535, 536, 592, 1049, 1085, 0, 538,
	537, 539, 595, 0, 0, 0, 0, 540, 541, 596,
	542, 543, 544, 963, 0, 0, 0, 0, 0, 0,
	959, 0, 0, 0, 0, 0, 0, 957, 958, 0,
	0, 0, 0, 0, 0, 0, 988, 1694, 0, 2401,
	986, 1004, 976, 977, 978, 974, 975, 987, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 249, 250,
	251, 252, 253, 254, 0, 255, 256, 0, 0, 0,
	0, 0, 1028, 992, 0, 0, 0, 257, 258, 260,
	259, 261, 262, 263, 264, 546, 1041, 0, 265, 1048,
	266, 1047, 0, 1058, 267, 268, 269, 270, 271, 272,
	994, 1027, 961, 273, 1087, 1088, 553, 0, 274, 275,
	1034, 0, 1015, 0, 276, 277, 278, 279, 280, 281,
	282, 0, 0, 284, 285, 286, 283, 0, 287, 0,
	288, 289, 290, 291, 292, 293, 0, 294, 295, 296,
	1068, 297, 298, 1018, 1016, 1017, 1024, 1020, 1019, 1023,
	299, 300, 301, 302, 1051, 303, 1045, 1044, 965, 307,
	304, 305, 0, 308, 306, 0, 309, 310, 311, 0,
	0, 312, 1036, 314, 0, 315, 316, 0, 317, 318,
	319, 0, 320, 321, 971, 322, 323, 324, 326, 328,
	325, 329, 330, 331, 332, 1059, 1060, 983, 246, 0,
	0, 0, 0, 0, 333, 334, 335, 1043, 0, 0,
	0, 336, 0, 337, 0, 0, 1069, 338, 339, 1056,
	1057, 340, 341, 0, 342, 1066, 0, 993, 343, 0,
	344, 345, 346, 347, 348, 1029, 1030, 1033, 411, 1071,
	349, 350, 0, 351, 352, 353, 354, 0, 0, 0,
	247, 355, 356, 358, 0, 1070, 357, 1038, 1039, 0,
	999, 0, 359, 360, 1072, 1031, 1073, 361, 362, 363,
	1074, 364, 0, 0, 0, 365, 366, 367, 368, 369,
	370, 0, 371, 373, 372, 0, 374, 1067, 1075, 375,
	376, 1076, 0, 377, 378, 379, 1022, 1021, 380, 381,
	382, 383, 0, 384, 385, 387, 389, 386, 388, 393,
	390, 391, 392, 395, 0, 394, 1077, 396, 397, 398,
	403, 405, 406, 401, 402, 404, 407, 400, 1078, 399,
	962, 248, 1079, 408, 409, 984, 1032, 410, 1046, 412,
	413, 0, 0, 414, 0, 0, 0, 416, 417, 418,
	0, 0, 419, 420, 575, 1080, 421, 1081, 1061, 422,
	423, 415, 424, 425, 426, 427, 428, 429, 430, 431,
	0, 432, 433, 577, 578, 1062, 434, 580, 435, 436,
	0, 437, 0, 438, 439, 440, 441, 442, 443, 444,
	1042, 446, 445, 447, 0, 448, 0, 0, 0, 0,
	0, 449, 0, 451, 452, 453, 450, 454, 455, 456,
	457, 0, 458, 459, 460, 1082, 461, 462, 463, 464,
	972, 465, 0, 466, 467, 473, 474, 468, 469, 475,
	476, 477, 478, 479, 0, 481, 482, 480, 483, 484,
	485, 1025, 486, 470, 471, 487, 488, 1083, 489, 490,
	491, 492, 493, 494, 1040, 0, 495, 0, 496, 497,
	498, 499, 472, 500, 505, 1086, 501, 502, 503, 504,
	1063, 0, 507, 508, 960, 506, 0, 509, 510, 511,
	512, 513, 514, 327, 515, 0, 516, 1052, 1053, 1054,
	1055, 0, 523, 0, 517, 518, 1064, 519, 1065, 982,
	520, 521, 522, 0, 524, 525, 0, 966, 526, 527,
	528, 530, 531, 529, 532, 1026, 533, 0, 0, 534,
	535, 536, 592, 1049, 1085, 0, 538, 537, 539, 595,
	0, 0, 0, 0, 540, 541, 596, 542, 543, 544,
	963, 0, 0, 0, 0, 0, 0, 959, 0, 0,
	0, 0, 0, 0, 957, 958, 0, 0, 0, 0,
	0, 0, 0, 988, 0, 0, 2399, 986, 1004, 976,
	977, 978, 974, 975, 987, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 250, 251, 252, 253,
	254, 0, 255, 256, 0, 0, 0, 0, 0, 1028,
	992, 0, 0, 0, 257, 258, 260, 259, 261, 262,
	263, 264, 546, 1041, 0, 265, 1048, 266, 1047, 0,
	1058, 267, 268, 269, 270, 271, 272, 994, 1027, 961,
	273, 1087, 1088, 553, 0, 274, 275, 1034, 0, 1015,
	0, 276, 277, 278, 279, 280, 281, 282, 0, 0,
	284, 285, 286, 283, 0, 287, 0, 288, 289, 290,
	291, 292, 293, 0, 294, 295, 296, 1068, 297, 298,
	1018, 1016, 1017, 1024, 1020, 1019, 1023, 299, 300, 301,
	302, 1051, 303, 1045, 1044, 965, 307, 304, 305, 0,
	308, 306, 0, 309, 310, 311, 0, 0, 312, 1036,
	314, 0, 315, 316, 0, 317, 318, 319, 0, 320,
	321, 971, 322, 323, 324, 326, 328, 325, 329, 330,
	331, 332, 1059, 1060, 983, 246, 0, 0, 0, 0,
	0, 333, 334, 335, 1043, 0, 0, 0, 336, 0,
	337, 0, 0, 1069, 338, 339, 1056, 1057, 340, 341,
	0, 342, 1066, 0, 993, 343, 0, 344, 345, 346,
	347, 348, 1029, 1030, 1033, 411, 1071, 349, 350, 0,
	351, 352, 353, 354, 0, 0, 0, 247, 355, 356,
	358, 0, 1070, 357, 1038, 1039, 0, 999, 0, 359,
	360, 1072, 1031, 1073, 361, 362, 363, 1074, 364, 0,
	0, 0, 365, 366, 367, 368, 369, 370, 0, 371,
	373, 372, 0, 374, 1067, 1075, 375, 376, 1076, 0,
	377, 378, 379, 1022, 1021, 380, 381, 382, 383, 0,
	384, 385, 387, 389, 386, 388, 393, 390, 391, 392,
	395, 0, 394, 1077, 396, 397, 398, 403, 405, 406,
	401, 402, 404, 407, 400, 1078, 399, 962, 248, 1079,
	408, 409, 984, 1032, 410, 1046, 412, 413, 0, 0,
	414, 0, 0, 0, 416, 417, 418, 0, 0, 419,
	420, 575, 1080, 421, 1081, 1061, 422, 423, 415, 424,
	425, 426, 427, 428, 429, 430, 431, 0, 432, 433,
	577, 578, 1062, 434, 580, 435, 436, 0, 437, 0,
	438, 439, 440, 441, 442, 443, 444, 1042, 446, 445,
	447, 0, 448, 0, 0, 0, 0, 0, 449, 0,
	451, 452, 453, 450, 454, 455, 456, 457, 0, 458,
	459, 460, 1082, 461, 462, 463, 464, 972, 465, 0,
	466, 467, 473, 474, 468, 469, 475, 476, 477, 478,
	479, 0, 481, 482, 480, 483, 484, 485, 1025, 486,
	470, 471, 487, 488, 1083, 489, 490, 491, 492, 493,
	494, 1040, 0, 495, 0, 496, 497, 498, 499, 472,
	500, 505, 1086, 501, 502, 503, 504, 1063, 0, 507,
	508, 960, 506, 0, 509, 510, 511, 512, 513, 514,
	327, 515, 0, 516, 1052, 1053, 1054, 1055, 0, 523,
	0, 517, 518, 1064, 519, 1065, 982, 520, 521, 522,
	0, 524, 525, 0, 966, 526, 527, 528, 530, 531,
	529, 532, 1026, 533, 0, 0, 534, 535, 536, 592,
	1049, 1085, 0, 538, 537, 539, 595, 0, 0, 0,
	0, 540, 541, 596, 542, 543, 544, 963, 0, 0,
	0, 0, 0, 0, 959, 0, 0, 0, 0, 0,
	0, 957, 958, 0, 0, 0, 0, 0, 0, 0,
	988, 0, 0, 2387, 986, 1004, 976, 977, 978, 974,
	975, 987, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 250, 251, 252, 253, 254, 0, 255,
	256, 0, 0, 0, 0, 0, 1028, 992, 0, 0,
	0, 257, 258, 260, 259, 261, 262, 263, 264, 546,
	1041, 0, 265, 1048, 266, 1047, 0, 1058, 267, 268,
	269, 270, 271, 272, 994, 1027, 961, 273, 1087, 1088,
	553, 0, 274, 275, 1034, 0, 1015, 0, 276, 277,
	278, 279, 280, 281, 282, 0, 0, 284, 285, 286,
	283, 0, 287, 0, 288, 289, 290, 291, 292, 293,
	0, 294, 295, 296, 1068, 297, 298, 1018, 1016, 1017,
	1024, 1020, 1019, 1023, 299, 300, 301, 302, 1051, 303,
	1045, 1044, 965, 307, 304, 305, 0, 308, 306, 0,
	309, 310, 311, 0, 0, 312, 1036, 314, 0, 315,
	316, 0, 317, 318, 319, 0, 320, 321, 971, 322,
	323, 324, 326, 328, 325, 329, 330, 331, 332, 1059,
	1060, 983, 246, 0, 0, 0, 0, 0, 333, 334,
	335, 1043, 0, 0, 0, 336, 0, 337, 0, 0,
	1069, 338, 339, 1056, 1057, 340, 341, 0, 342, 1066,
	0, 993, 343, 0, 344, 345, 346, 347, 348, 1029,
	1030, 1033, 411, 1071, 349, 350, 0, 351, 352, 353,
	354, 0, 0, 0, 247, 355, 356, 358, 0, 1070,
	357, 1038, 1039, 0, 999, 0, 359, 360, 1072, 1031,
	1073, 361, 362, 363, 1074, 364, 0, 0, 0, 365,
	366, 367, 368, 369, 370, 0, 371, 373, 372, 0,
	374, 1067, 1075, 375, 376, 1076, 0, 377, 378, 379,
	1022, 1021, 380, 381, 382, 383, 0, 384, 385, 387,
	389, 386, 388, 393, 390, 391, 392, 395, 0, 394,
	1077, 396, 397, 398, 403, 405, 406, 401, 402, 404,
	407, 400, 1078, 399, 962, 248, 1079, 408, 409, 984,
	1032, 410, 1046, 412, 413, 0, 0, 414, 0, 0,
	0, 416, 417, 418, 0, 0, 419, 420, 575, 1080,
	421, 1081, 1061, 422, 423, 415, 424, 425, 426, 427,
	428, 429, 430, 431, 0, 432, 433, 577, 578, 1062,
	434, 580, 435, 436, 0, 437, 0, 438, 439, 440,
	441, 442, 443, 444, 1042, 446, 445, 447, 0, 448,
	0, 0, 0, 0, 0, 449, 0, 451, 452, 453,
	450, 454, 455, 456, 457, 0, 458, 459, 460, 1082,
	461, 462, 463, 464, 972, 465, 0, 466, 467, 473,
	474, 468, 469, 475, 476, 477, 478, 479, 0, 481,
	482, 480, 483, 484, 485, 1025, 486, 470, 471, 487,
	488, 1083, 489, 490, 491, 492, 493, 494, 1040, 0,
	495, 0, 496, 497, 498, 499, 472, 500, 505, 1086,
	501, 502, 503, 504, 1063, 0, 507, 508, 960, 506,
	0, 509, 510, 511, 512, 513, 514, 327, 515, 0,
	516, 1052, 1053, 1054, 1055, 0, 523, 0, 517, 518,
	1064, 519, 1065, 982, 520, 521, 522, 0, 524, 525,
	0, 966, 526, 527, 528, 530, 531, 529, 532, 1026,
	533, 0, 0, 534, 535, 536, 592, 1049, 1085, 0,
	538, 537, 539, 595, 0, 0, 0, 0, 540, 541,
	596, 542, 543, 544, 963, 0, 0, 0, 0, 0,
	0, 959, 0, 0, 0, 0, 0, 0, 957, 958,
	0, 0, 0, 0, 0, 0, 0, 988, 0, 0,
	2376, 986, 1004, 976, 977, 978, 974, 975, 987, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	250, 251, 252, 253, 254, 0, 255, 256, 0, 0,
	0, 0, 0, 1028, 992, 0, 0, 0, 257, 258,
	260, 259, 261, 262, 263, 264, 546, 1041, 0, 265,
	1048, 266, 1047, 0, 1058, 267, 268, 269, 270, 271,
	272, 994, 1027, 961, 273, 1087, 1088, 553, 0, 274,
	275, 1034, 0, 1015, 0, 276, 277, 278, 279, 280,
	281, 282, 0, 0, 284, 285, 286, 283, 0, 287,
	0, 288, 289, 290, 291, 292, 293, 0, 294, 295,
	296, 1068, 297, 298, 1018, 1016, 1017, 1024, 1020, 1019,
	1023, 299, 300, 301, 302, 1051, 303, 1045, 1044, 965,
	307, 304, 305, 0, 308, 306, 0, 309, 310, 311,
	0, 0, 312, 1036, 314, 0, 315, 316, 0, 317,
	318, 319, 0, 320, 321, 971, 322, 323, 324, 326,
	328, 325, 329, 330, 331, 332, 1059, 1060, 983, 246,
	0, 0, 0, 0, 0, 333, 334, 335, 1043, 0,
	0, 0, 336, 0, 337, 0, 0, 1069, 338, 339,
	1056, 1057, 340, 341, 0, 342, 1066, 0, 993, 343,
	0, 344, 345, 346, 347, 348, 1029, 1030, 1033, 411,
	1071, 349, 350, 0, 351, 352, 353, 354, 0, 0,
	0, 247, 355, 356, 358, 0, 1070, 357, 1038, 1039,
	0, 999, 0, 359, 360, 1072, 1031, 1073, 361, 362,
	363, 1074, 364, 0, 0, 0, 365, 366, 367, 368,
	369, 370, 0, 371, 373, 372, 0, 374, 1067, 1075,
	375, 376, 1076, 0, 377, 378, 379, 1022, 1021, 380,
	381, 382, 383, 0, 384, 385, 387, 389, 386, 388,
	393, 390, 391, 392, 395, 0, 394, 1077, 396, 397,
	398, 403, 405, 406, 401, 402, 404, 407, 400, 1078,
	399, 962, 248, 1079, 408, 409, 984, 1032, 410, 1046,
	412, 413, 0, 0, 414, 0, 0, 0, 416, 417,
	418, 0, 0, 419, 420, 575, 1080, 421, 1081, 1061,
	422, 423, 415, 424, 425, 426, 427, 428, 429, 430,
	431, 0, 432, 433, 577, 578, 1062, 434, 580, 435,
	436, 0, 437, 0, 438, 439, 440, 441, 442, 443,
	444, 1042, 446, 445, 447, 0, 448, 0, 0, 0,
	0, 0, 449, 0, 451, 452, 453, 450, 454, 455,
	456, 457, 0, 458, 459, 460, 1082, 461, 462, 463,
	464, 972, 465, 0, 466, 467, 473, 474, 468, 469,
	475, 476, 477, 478, 479, 0, 481, 482, 480, 483,
	484, 485, 1025, 486, 470, 471, 487, 488, 1083, 489,
	490, 491, 492, 493, 494, 1040, 0, 495, 0, 496,
	497, 498, 499, 472, 500, 505, 1086, 501, 502, 503,
	504, 1063, 0, 507, 508, 960, 506, 0, 509, 510,
	511, 512, 513, 514, 327, 515, 0, 516, 1052, 1053,
	1054, 1055, 0, 523, 0, 517, 518, 1064, 519, 1065,
	982, 520, 521, 522, 0, 524, 525, 0, 966, 526,
	527, 528, 530, 531, 529, 532, 1026, 533, 0, 0,
	534, 535, 536, 592, 1049, 1085, 0, 538, 537, 539,
	595, 0, 0, 0, 0, 540, 541, 596, 542, 543,
	544, 963, 0, 0, 0, 0, 0, 0, 959, 0,
	0, 0, 0, 0, 0, 957, 958, 0, 0, 0,
	0, 0, 0, 0, 988, 0, 0, 2374, 986, 2365,
	2372, 977, 978, 974, 975, 987, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 249, 250, 251, 252,
	253, 254, 0, 255, 256, 0, 0, 0, 0, 0,
	1028, 992, 0, 0, 0, 257, 258, 260, 259, 261,
	262, 263, 264, 546, 1041, 0, 265, 1048, 266, 1047,
	0, 1058, 267, 268, 269, 270, 271, 272, 994, 1027,
	961, 273, 1087, 1088, 553, 0, 274, 275, 1034, 0,
	1015, 0, 276, 277, 278, 279, 280, 281, 282, 0,
	0, 284, 285, 286, 283, 0, 287, 0, 288, 289,
	290, 291, 292, 293, 0, 294, 295, 296, 1068, 297,
	298, 1018, 1016, 1017, 1024, 1020, 1019, 1023, 299, 300,
	301, 302, 1051, 2368, 1045, 1044, 965, 307, 304, 305,
	0, 308, 306, 0, 309, 310, 311, 0, 0, 312,
	1036, 314, 0, 315, 316, 0, 317, 318, 319, 0,
	320, 321, 971, 322, 323, 324, 326, 328, 325, 329,
	330, 331, 332, 1059, 1060, 983, 246, 0, 0, 0,
	0, 0, 333, 334, 335, 1043, 0, 0, 0, 336,
	0, 337, 0, 0, 1069, 338, 339, 1056, 1057, 340,
	341, 0, 342, 1066, 0, 993, 343, 0, 344, 345,
	346, 2369, 348, 1029, 1030, 1033, 411, 1071, 349, 350,
	0, 351, 352, 353, 354, 0, 0, 0, 247, 355,
	356, 358, 0, 1070, 357, 1038, 1039, 0, 999, 0,
	359, 360, 1072, 1031, 1073, 361, 362, 363, 1074, 364,
	0, 0, 0, 365, 366, 367, 368, 369, 370, 0,
	371, 373, 372, 0, 374, 1067, 1075, 375, 376, 1076,
	0, 377, 378, 379, 1022, 1021, 380, 381, 382, 383,
	0, 384, 385, 387, 389, 386, 2370, 2367, 390, 391,
	392, 395, 0, 394, 1077, 396, 397, 398, 403, 405,
	406, 401, 402, 404, 407, 400, 1078, 399, 962, 248,
	1079, 408, 409, 984, 1032, 410, 1046, 412, 413, 0,
	0, 414, 0, 0, 0, 416, 417, 418, 0, 0,
	419, 420, 575, 1080, 421, 1081, 1061, 422, 423, 415,
	424, 425, 426, 427, 428, 429, 430, 431, 0, 432,
	433, 577, 578, 1062, 434, 580, 435, 436, 0, 437,
	0, 438, 439, 440, 441, 442, 443, 444, 1042, 446,
	445, 447, 0, 448, 0, 0, 0, 0, 0, 449,
	0, 451, 452, 453, 450, 454, 455, 456, 457, 0,
	458, 459, 460, 1082, 461, 462, 463, 464, 972, 465,
	0, 466, 467, 473, 474, 468, 469, 475, 476, 477,
	478, 2371, 0, 481, 482, 480, 483, 484, 485, 1025,
	486, 470, 471, 487, 488, 1083, 489, 490, 491, 492,
	493, 494, 1040, 0, 495, 0, 496, 497, 498, 499,
	472, 500, 505, 1086, 501, 502, 503, 504, 1063, 0,
	507, 508, 960, 506, 0, 509, 510, 511, 512, 513,
	514, 327, 515, 0, 516, 1052, 1053, 1054, 1055, 0,
	523, 0, 517, 518, 1064, 519, 1065, 982, 520, 521,
	522, 0, 524, 525, 0, 966, 526, 527, 528, 530,
	531, 529, 532, 1026, 533, 0, 0, 534, 535, 536,
	592, 1049, 1085, 0, 538, 537, 539, 595, 0, 0,
	0, 0, 540, 541, 596, 542, 2366, 544, 963, 0,
	0, 0, 0, 0, 0, 959, 0, 0, 0, 0,
	0, 0, 957, 958, 0, 0, 0, 0, 0, 0,
	0, 988, 0, 0, 2362, 986, 2365, 2372, 977, 978,
	974, 975, 987, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 250, 251, 252, 253, 254, 0,
	255, 256, 0, 0, 0, 0, 0, 1028, 992, 0,
	0, 0, 257, 258, 260, 259, 261, 262, 263, 264,
	546, 1041, 0, 265, 1048, 266, 1047, 0, 1058, 267,
	268, 269, 270, 271, 272, 994, 1027, 961, 273, 1087,
	1088, 553, 0, 274, 275, 1034, 0, 1015, 0, 276,
	277, 278, 279, 280, 281, 282, 0, 0, 284, 285,
	286, 283, 0, 287, 0, 288, 289, 290, 291, 292,
	293, 0, 294, 295, 296, 1068, 297, 298, 1018, 1016,
	1017, 1024, 1020, 1019, 1023, 299, 300, 301, 302, 1051,
	2368, 1045, 1044, 965, 307, 304, 305, 0, 308, 306,
	0, 309, 310, 311, 0, 0, 312, 1036, 314, 0,
	315, 316, 0, 317, 318, 319, 0, 320, 321, 971,
	322, 323, 324, 326, 328, 325, 329, 330, 331, 332,
	1059, 1060, 983, 246, 0, 0, 0, 0, 0, 333,
	334, 335, 1043, 0, 0, 0, 336, 0, 337, 0,
	0, 1069, 338, 339, 1056, 1057, 340, 341, 0, 342,
	1066, 0, 993, 343, 0, 344, 345, 346, 2369, 348,
	1029, 1030, 1033, 411, 1071, 349, 350, 0, 351, 352,
	353, 354, 0, 0, 0, 247, 355, 356, 358, 0,
	1070, 357, 1038, 1039, 0, 999, 0, 359, 360, 1072,
	1031, 1073, 361, 362, 363, 1074, 364, 0, 0, 0,
	365, 366, 367, 368, 369, 370, 0, 371, 373, 372,
	0, 374, 1067, 1075, 375, 376, 1076, 0, 377, 378,
	379, 1022, 1021, 380, 381, 382, 383, 0, 384, 385,
	387, 389, 386, 2370, 2367, 390, 391, 392, 395, 0,
	394, 1077, 396, 397, 398, 403, 405, 406, 401, 402,
	404, 407, 400, 1078, 399, 962, 248, 1079, 408, 409,
	984, 1032, 410, 1046, 412, 413, 0, 0, 414, 0,
	0, 0, 416, 417, 418, 0, 0, 419, 420, 575,
	1080, 421, 1081, 1061, 422, 423, 415, 424, 425, 426,
	427, 428, 429, 430, 431, 0, 432, 433, 577, 578,
	1062, 434, 580, 435, 436, 0, 437, 0, 438, 439,
	440, 441, 442, 443, 444, 1042, 446, 445, 447, 0,
	448, 0, 0, 0, 0, 0, 449, 0, 451, 452,
	453, 450, 454, 455, 456, 457, 0, 458, 459, 460,
	1082, 461, 462, 463, 464, 972, 465, 0, 466, 467,
	473, 474, 468, 469, 475, 476, 477, 478, 2371, 0,
	481, 482, 480, 483, 484, 485, 1025, 486, 470, 471,
	487, 488, 1083, 489, 490, 491, 492, 493, 494, 1040,
	0, 495, 0, 496, 497, 498, 499, 472, 500, 505,
	1086, 501, 502, 503, 504, 1063, 0, 507, 508, 960,
	506, 0, 509, 510, 511, 512, 513, 514, 327, 515,
	0, 516, 1052, 1053, 1054, 1055, 0, 523, 0, 517,
	518, 1064, 519, 1065, 982, 520, 521, 522, 0, 524,
	525, 0, 966, 526, 527, 528, 530, 531, 529, 532,
	1026, 533, 0, 0, 534, 535, 536, 592, 1049, 1085,
	0, 538, 537, 539, 595, 0, 0, 0, 0, 540,
	541, 596, 542, 2366, 544, 963, 0, 0, 0, 0,
	0, 0, 959, 0, 0, 0, 0, 0, 0, 957,
	958, 1004, 976, 977, 978, 974, 975, 987, 988, 0,
	0, 0, 986, 0, 0, 0, 0, 0, 249, 250,
	251, 252, 253, 254, 0, 255, 256, 0, 0, 0,
	0, 0, 1028, 992, 0, 0, 0, 257, 258, 260,
	259, 261, 262, 263, 264, 546, 1041, 0, 265, 1048,
	266, 1047, 0, 1058, 267, 268, 269, 270, 271, 272,
	994, 1027, 961, 273, 1087, 1088, 553, 0, 274, 275,
	1034, 0, 1015, 0, 276, 277, 278, 279, 280, 281,
	282, 0, 0, 284, 285, 286, 283, 0, 287, 0,
	288, 289, 290, 291, 292, 293, 0, 294, 295, 296,
	1068, 297, 298, 1018, 1016, 1017, 1024, 1020, 1019, 1023,
	299, 300, 301, 302, 1051, 303, 1045, 1044, 965, 307,
	304, 305, 0, 308, 306, 0, 309, 310, 311, 0,
	0, 312, 1036, 314, 0, 315, 316, 0, 317, 318,
	319, 0, 320, 321, 971, 322, 323, 324, 326, 328,
	325, 329, 330, 331, 332, 1059, 1060, 983, 246, 0,
	0, 0, 0, 0, 333, 334, 335, 1043, 0, 0,
	0, 336, 0, 337, 0, 0, 1069, 338, 339, 1056,
	1057, 340, 341, 0, 342, 1066, 0, 993, 343, 0,
	344, 345, 346, 347, 348, 1029, 1030, 1033, 411, 1071,
	349, 350, 0, 351, 352, 353, 354, 0, 0, 0,
	247, 355, 356, 358, 0, 1070, 357, 1038, 1039, 0,
	999, 0, 359, 360, 1072, 1031, 1073, 361, 362, 363,
	1074, 364, 0, 0, 0, 365, 366, 367, 368, 369,
	370, 0, 371, 373, 372, 0, 374, 1067, 1075, 375,
	376, 1076, 0, 377, 378, 379, 1022, 1021, 380, 381,
	382, 383, 0, 384, 385, 387, 389, 386, 388, 393,
	390, 391, 392, 395, 0, 394, 1077, 396, 397, 398,
	403, 405, 406, 401, 402, 404, 407, 400, 1078, 399,
	962, 248, 1079, 408, 409, 984, 1032, 410, 1046, 412,
	413, 0, 0, 414, 0, 0, 0, 416, 417, 418,
	0, 0, 419, 420, 575, 1080, 421, 1081, 1061, 422,
	423, 415, 424, 425, 426, 427, 428, 429, 430, 431,
	0, 432, 433, 577, 578, 1062, 434, 580, 435, 436,
	0, 437, 0, 438, 439, 440, 441, 442, 443, 444,
	1042, 446, 445, 447, 0, 448, 0, 0, 0, 0,
	0, 449, 0, 451, 452, 453, 450, 454, 455, 456,
	457, 0, 458, 459, 460, 1082, 461, 462, 463, 464,
	972, 465, 0, 466, 467, 473, 474, 468, 469, 475,
	476, 477, 478, 479, 0, 481, 482, 480, 483, 484,
	485, 1025, 486, 470, 471, 487, 488, 1083, 489, 490,
	491, 492, 493, 494, 1040, 0, 495, 0, 496, 497,
	498, 499, 472, 500, 505, 1086, 501, 502, 503, 504,
	1063, 0, 507, 508, 960, 506, 0, 509, 510, 511,
	512, 513, 514, 327, 515, 0, 516, 1052, 1053, 1054,
	1055, 0, 523, 0, 517, 518, 1064, 519, 1065, 982,
	520, 521, 522, 0, 524, 525, 0, 966, 526, 527,
	528, 530, 531, 529, 532, 1026, 533, 0, 0, 534,
	535, 536, 592, 1049, 1085, 0, 538, 537, 539, 595,
	0, 0, 0, 0, 540, 541, 596, 542, 543, 544,
	963, 0, 0, 0, 0, 0, 0, 959, 0, 0,
	0, 0, 0, 0, 957, 958, 0, 0, 0, 0,
	0, 1702, 0, 988, 0, 0, 0, 986, 1004, 976,
	977, 978, 974, 975, 987, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 250, 251, 252, 253,
	254, 2180, 255, 256, 0, 0, 0, 0, 0, 1028,
	992, 0, 0, 0, 257, 258, 260, 259, 261, 262,
	263, 264, 546, 1041, 0, 265, 1048, 266, 1047, 0,
	1058, 267, 268, 269, 270, 271, 272, 994, 1027, 961,
	273, 1087, 1088, 553, 0, 274, 275, 1034, 0, 1015,
	0, 276, 277, 278, 279, 280, 281, 282, 0, 0,
	284, 285, 286, 283, 0, 287, 0, 288, 289, 290,
	291, 292, 293, 0, 294, 295, 296, 1068, 297, 298,
	1018, 1016, 1017, 1024, 1020, 1019, 1023, 299, 300, 301,
	302, 1051, 303, 1045, 1044, 965, 307, 304, 305, 0,
	308, 306, 0, 309, 310, 311, 0, 0, 312, 1036,
	314, 0, 315, 316, 0, 317, 318, 319, 0, 320,
	321, 971, 322, 323, 324, 326, 328, 325, 329, 330,
	331, 332, 1059, 1060, 983, 246, 0, 0, 0, 0,
	0, 333, 334, 335, 1043, 0, 0, 0, 336, 0,
	337, 0, 0, 1069, 338, 339, 1056, 1057, 340, 341,
	0, 342, 1066, 0, 993, 343, 0, 344, 345, 346,
	347, 348, 1029, 1030, 1033, 411, 1071, 349, 350, 0,
	351, 352, 353, 354, 0, 0, 0, 247, 355, 356,
	358, 0, 1070, 357, 1038, 1039, 0, 999, 0, 359,
	360, 1072, 1031, 1073, 361, 362, 363, 1074, 364, 0,
	0, 0, 365, 366, 367, 368, 369, 370, 0, 371,
	373, 372, 0, 374, 1067, 1075, 375, 376, 1076, 0,
	377, 378, 379, 1022, 1021, 380, 381, 382, 383, 0,
	384, 385, 387, 389, 386, 388, 393, 390, 391, 392,
	395, 0, 394, 1077, 396, 397, 398, 403, 405, 406,
	401, 402, 404, 407, 400, 1078, 399, 962, 248, 1079,
	408, 409, 984, 1032, 410, 1046, 412, 413, 0, 0,
	414, 0, 0, 0, 416, 417, 418, 0, 0, 419,
	420, 575, 1080, 421, 1081, 1061, 422, 423, 415, 424,
	425, 426, 427, 428, 429, 430, 431, 0, 432, 433,
	577, 578, 1062, 434, 580, 435, 436, 0, 437, 0,
	438, 439, 440, 441, 442, 443, 444, 1042, 446, 445,
	447, 0, 448, 0, 0, 0, 0, 0, 449, 0,
	451, 452, 453, 450, 454, 455, 456, 457, 0, 458,
	459, 460, 1082, 461, 462, 463, 464, 972, 465, 0,
	466, 467, 473, 474, 468, 469, 475, 476, 477, 478,
	479, 0, 481, 482, 480, 483, 484, 485, 1025, 486,
	470, 471, 487, 488, 1083, 489, 490, 491, 492, 493,
	494, 1040, 0, 495, 0, 496, 497, 498, 499, 472,
	500, 505, 1086, 501, 502, 503, 504, 1063, 0, 507,
	508, 960, 506, 0, 509, 510, 511, 512, 513, 514,
	327, 515, 0, 516, 1052, 1053, 1054, 1055, 0, 523,
	0, 517, 518, 1064, 519, 1065, 982, 520, 521, 522,
	0, 524, 525, 0, 966, 526, 527, 528, 530, 531,
	529, 532, 1026, 533, 0, 0, 534, 535, 536, 592,
	1049, 1085, 0, 538, 537, 539, 595, 0, 0, 0,
	0, 540, 541, 596, 542, 543, 544, 963, 0, 0,
	0, 0, 0, 0, 959, 0, 0, 0, 0, 0,
	0, 957, 958, 0, 0, 0, 0, 0, 0, 0,
	988, 0, 0, 1554, 986, 1004, 976, 977, 978, 974,
	975, 987, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 250, 251, 252, 253, 254, 0, 255,
	256, 0, 0, 0, 0, 0, 1028, 992, 0, 0,
	0, 257, 258, 260, 259, 261, 262, 263, 264, 546,
	1041, 0, 265, 1048, 266, 1047, 0, 1058, 267, 268,
	269, 270, 271, 272, 994, 1027, 961, 273, 1087, 1088,
	553, 0, 274, 275, 1034, 0, 1015, 0, 276, 277,
	278, 279, 280, 281, 282, 0, 0, 284, 285, 286,
	283, 0, 287, 0, 288, 289, 290, 291, 292, 293,
	0, 294, 295, 296, 1068, 297, 298, 1018, 1016, 1017,
	1024, 1020, 1019, 1023, 299, 300, 301, 302, 1051, 303,
	1045, 1044, 965, 307, 304, 305, 0, 308, 306, 0,
	309, 310, 311, 0, 0, 312, 1036, 314, 0, 315,
	316, 0, 317, 318, 319, 0, 320, 321, 971, 322,
	323, 324, 326, 328, 325, 329, 330, 331, 332, 1059,
	1060, 983, 246, 0, 0, 0, 0, 0, 333, 334,
	335, 1043, 0, 0, 0, 336, 0, 337, 0, 0,
	1069, 338, 339, 1056, 1057, 340, 341, 0, 342, 1066,
	0, 993, 343, 0, 344, 345, 346, 347, 348, 1029,
	1030, 1033, 411, 1071, 349, 350, 0, 351, 352, 353,
	354, 0, 0, 0, 247, 355, 356, 358, 0, 1070,
	357, 1038, 1039, 0, 999, 0, 359, 360, 1072, 1031,
	1073, 361, 362, 363, 1074, 364, 0, 0, 0, 365,
	366, 367, 368, 369, 370, 0, 371, 373, 372, 0,
	374, 1067, 1075, 375, 376, 1076, 0, 377, 378, 379,
	1022, 1021, 380, 381, 382, 383, 0, 384, 385, 387,
	389, 386, 388, 393, 390, 391, 392, 395, 0, 394,
	1077, 396, 397, 398, 403, 405, 406, 401, 402, 404,
	407, 400, 1078, 399, 962, 248, 1079, 408, 409, 984,
	1032, 410, 1046, 412, 413, 0, 0, 414, 0, 0,
	0, 416, 417, 418, 0, 0, 419, 420, 575, 1080,
	421, 1081, 1061, 422, 423, 415, 424, 425, 426, 427,
	428, 429, 430, 431, 0, 432, 433, 577, 578, 1062,
	434, 580, 435, 436, 0, 437, 0, 438, 439, 440,
	441, 442, 443, 444, 1042, 446, 445, 447, 0, 448,
	0, 0, 0, 0, 0, 449, 0, 451, 452, 453,
	450, 454, 455, 456, 457, 0, 458, 459, 460, 1082,
	461, 462, 463, 464, 972, 465, 0, 466, 467, 473,
	474, 468, 469, 475, 476, 477, 478, 479, 0, 481,
	482, 480, 483, 484, 485, 1025, 486, 470, 471, 487,
	488, 1083, 489, 490, 491, 492, 493, 494, 1040, 0,
	495, 0, 496, 497, 498, 499, 472, 500, 505, 1086,
	501, 502, 503, 504, 1063, 0, 507, 508, 960, 506,
	0, 509, 510, 511, 512, 513, 514, 327, 515, 0,
	516, 1052, 1053, 1054, 1055, 0, 523, 0, 517, 518,
	1064, 519, 1065, 982, 520, 521, 522, 0, 524, 525,
	0, 966, 526, 527, 528, 530, 531, 529, 532, 1026,
	533, 0, 0, 534, 535, 536, 592, 1049, 1085, 0,
	538, 537, 539, 595, 0, 0, 0, 0, 540, 541,
	596, 542, 543, 544, 963, 0, 0, 0, 0, 0,
	0, 959, 0, 0, 0, 0, 0, 0, 957, 958,
	0, 0, 0, 0, 0, 0, 0, 988, 0, 0,
	1491, 986, 1004, 976, 977, 978, 974, 975, 987, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	250, 251, 252, 253, 254, 0, 255, 256, 0, 0,
	0, 0, 0, 1028, 992, 0, 0, 0, 257, 258,
	260, 259, 261, 262, 263, 264, 546, 1041, 0, 265,
	1048, 266, 1047, 0, 1058, 267, 268, 269, 270, 271,
	272, 994, 1027, 961, 273, 1087, 1088, 553, 0, 274,
	275, 1034, 0, 1015, 0, 276, 277, 278, 279, 280,
	281, 282, 0, 0, 284, 285, 286, 283, 0, 287,
	0, 288, 289, 290, 291, 292, 293, 0, 294, 295,
	296, 1068, 297, 298, 1018, 1016, 1017, 1024, 1020, 1019,
	1023, 299, 300, 301, 302, 1051, 303, 1045, 1044, 965,
	307, 304, 305, 0, 308, 306, 0, 309, 310, 311,
	0, 0, 312, 1036, 314, 0, 315, 316, 0, 317,
	318, 319, 0, 320, 321, 971, 322, 323, 324, 326,
	328, 325, 329, 330, 331, 332, 1059, 1060, 983, 246,
	0, 0, 0, 0, 0, 333, 334, 335, 1043, 0,
	0, 0, 336, 0, 337, 0, 0, 1069, 338, 339,
	1056, 1057, 340, 341, 0, 342, 1066, 0, 993, 343,
	0, 344, 345, 346, 347, 348, 1029, 1030, 1033, 411,
	1071, 349, 350, 0, 351, 352, 353, 354, 0, 0,
	0, 247, 355, 356, 358, 0, 1070, 357, 1038, 1039,
	0, 999, 0, 359, 360, 1072, 1031, 1073, 361, 362,
	363, 1074, 364, 0, 0, 0, 365, 366, 367, 368,
	369, 370, 0, 371, 373, 372, 0, 374, 1067, 1075,
	375, 376, 1076, 0, 377, 378, 379, 1022, 1021, 380,
	381, 382, 383, 0, 384, 385, 387, 389, 386, 388,
	393, 390, 391, 392, 395, 0, 394, 1077, 396, 397,
	398, 403, 405, 406, 401, 402, 404, 407, 400, 1078,
	399, 962, 248, 1079, 408, 409, 984, 1032, 410, 1046,
	412, 413, 0, 0, 414, 0, 0, 0, 416, 417,
	418, 0, 0, 419, 420, 575, 1080, 421, 1081, 1061,
	422, 423, 415, 424, 425, 426, 427, 428, 429, 430,
	431, 0, 432, 433, 577, 578, 1062, 434, 580, 435,
	436, 0, 437, 0, 438, 439, 440, 441, 442, 443,
	444, 1042, 446, 445, 447, 0, 448, 0, 0, 0,
	0, 0, 449, 0, 451, 452, 453, 450, 454, 455,
	456, 457, 0, 458, 459, 460, 1082, 461, 462, 463,
	464, 972, 465, 0, 466, 467, 473, 474, 468, 469,
	475, 476, 477, 478, 479, 0, 481, 482, 480, 483,
	484, 485, 1025, 486, 470, 471, 487, 488, 1083, 489,
	490, 491, 492, 493, 494, 1040, 0, 495, 0, 496,
	497, 498, 499, 472, 500, 505, 1086, 501, 502, 503,
	504, 1063, 0, 507, 508, 960, 506, 0, 509, 510,
	511, 512, 513, 514, 327, 515, 0, 516, 1052, 1053,
	1054, 1055, 0, 523, 0, 517, 518, 1064, 519, 1065,
	982, 520, 521, 522, 0, 524, 525, 0, 966, 526,
	527, 528, 530, 531, 529, 532, 1026, 533, 0, 0,
	534, 535, 536, 592, 1049, 1085, 0, 538, 537, 539,
	595, 0, 0, 0, 0, 540, 541, 596, 542, 543,
	544, 963, 0, 0, 0, 0, 0, 0, 959, 0,
	0, 0, 0, 0, 0, 957, 958, 0, 0, 0,
	0, 0, 0, 0, 988, 0, 0, 1486, 986, 1004,
	976, 977, 978, 974, 975, 987, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 249, 250, 251, 252,
	253, 254, 0, 255, 256, 0, 0, 0, 0, 0,
	1028, 992, 0, 0, 0, 257, 258, 260, 259, 261,
	262, 263, 264, 546, 1041, 0, 265, 1048, 266, 1047,
	0, 1058, 267, 268, 269, 270, 271, 272, 994, 1027,
	961, 273, 1087, 1088, 553, 0, 274, 275, 1034, 0,
	1015, 0, 276, 277, 278, 279, 280, 281, 282, 0,
	0, 284, 285, 286, 283, 0, 287, 0, 288, 289,
	290, 291, 292, 293, 0, 294, 295, 296, 1068, 297,
	298, 1018, 1016, 1017, 1024, 1020, 1019, 1023, 299, 300,
	301, 302, 1051, 303, 1045, 1044, 965, 307, 304, 305,
	0, 308, 306, 0, 309, 310, 311, 0, 0, 312,
	1036, 314, 0, 315, 316, 0, 317, 318, 319, 0,
	320, 321, 971, 322, 323, 324, 326, 328, 325, 329,
	330, 331, 332, 1059, 1060, 983, 246, 0, 0, 0,
	0, 0, 333, 334, 335, 1043, 0, 0, 0, 336,
	0, 337, 0, 0, 1069, 338, 339, 1056, 1057, 340,
	341, 0, 342, 1066, 0, 993, 343, 0, 344, 345,
	346, 347, 348, 1029, 1030, 1033, 411, 1071, 349, 350,
	0, 351, 352, 353, 354, 0, 0, 0, 247, 355,
	356, 358, 0, 1070, 357, 1038, 1039, 0, 999, 0,
	359, 360, 1072, 1031, 1073, 361, 362, 363, 1074, 364,
	0, 0, 0, 365, 366, 367, 368, 369, 370, 0,
	371, 373, 372, 0, 374, 1067, 1075, 375, 376, 1076,
	0, 377, 378, 379, 1022, 1021, 380, 381, 382, 383,
	0, 384, 385, 387, 389, 386, 388, 393, 390, 391,
	392, 395, 0, 394, 1077, 396, 397, 398, 403, 405,
	406, 401, 402, 404, 407, 400, 1078, 399, 962, 248,
	1079, 408, 409, 984, 1032, 410, 1046, 412, 413, 0,
	0, 414, 0, 0, 0, 416, 417, 418, 0, 0,
	419, 420, 575, 1080, 421, 1081, 1061, 422, 423, 415,
	424, 425, 426, 427, 428, 429, 430, 431, 0, 432,
	433, 577, 578, 1062, 434, 580, 435, 436, 0, 437,
	0, 438, 439, 440, 441, 442, 443, 444, 1042, 446,
	445, 447, 0, 448, 0, 0, 0, 0, 0, 449,
	0, 451, 452, 453, 450, 454, 455, 456, 457, 0,
	458, 459, 460, 1082, 461, 462, 463, 464, 972, 465,
	0, 466, 467, 473, 474, 468, 469, 475, 476, 477,
	478, 479, 0, 481, 482, 480, 483, 484, 485, 1025,
	486, 470, 471, 487, 488, 1083, 489, 490, 491, 492,
	493, 494, 1040, 0, 495, 0, 496, 497, 498, 499,
	472, 500, 505, 1086, 501, 502, 503, 504, 1063, 0,
	507, 508, 960, 506, 0, 509, 510, 511, 512, 513,
	514, 327, 515, 0, 516, 1052, 1053, 1054, 1055, 0,
	523, 0, 517, 518, 1064, 519, 1065, 982, 520, 521,
	522, 0, 524, 525, 0, 966, 526, 527, 528, 530,
	531, 529, 532, 1026, 533, 0, 0, 534, 535, 536,
	592, 1049, 1085, 0, 538, 537, 539, 595, 0, 0,
	0, 0, 540, 541, 596, 542, 543, 544, 963, 0,
	0, 0, 0, 0, 0, 959, 0, 0, 0, 0,
	0, 0, 957, 958, 0, 0, 0, 0, 0, 0,
	0, 988, 0, 0, 1477, 986, 1004, 976, 977, 978,
	974, 975, 987, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 250, 251, 252, 253, 254, 0,
	255, 256, 0, 0, 0, 0, 0, 1028, 992, 0,
	0, 0, 257, 258, 260, 259, 261, 262, 263, 264,
	546, 1041, 0, 265, 1048, 266, 1047, 0, 1058, 267,
	268, 269, 270, 271, 272, 994, 1027, 961, 273, 1087,
	1088, 553, 0, 274, 275, 1034, 0, 1015, 0, 276,
	277, 278, 279, 280, 281, 282, 0, 0, 284, 285,
	286, 283, 0, 287, 0, 288, 289, 290, 291, 292,
	293, 0, 294, 295, 296, 1068, 297, 298, 1018, 1016,
	1017, 1024, 1020, 1019, 1023, 299, 300, 301, 302, 1051,
	303, 1045, 1044, 965, 307, 304, 305, 0, 308, 306,
	0, 309, 310, 311, 0, 0, 312, 1036, 314, 0,
	315, 316, 0, 317, 318, 319, 0, 320, 321, 971,
	322, 323, 324, 326, 328, 325, 329, 330, 331, 332,
	1059, 1060, 983, 246, 0, 0, 0, 0, 0, 333,
	334, 335, 1043, 0, 0, 0, 336, 0, 337, 0,
	0, 1069, 338, 339, 1056, 1057, 340, 341, 0, 342,
	1066, 0, 993, 343, 0, 344, 345, 346, 347, 348,
	1029, 1030, 1033, 411, 1071, 349, 350, 0, 351, 352,
	353, 354, 0, 0, 0, 247, 355, 356, 358, 0,
	1070, 357, 1038, 1039, 0, 999, 0, 359, 360, 1072,
	1031, 1073, 361, 362, 363, 1074, 364, 0, 0, 0,
	365, 366, 367, 368, 369, 370, 0, 371, 373, 372,
	0, 374, 1067, 1075, 375, 376, 1076, 0, 377, 378,
	379, 1022, 1021, 380, 381, 382, 383, 0, 384, 385,
	387, 389, 386, 388, 393, 390, 391, 392, 395, 0,
	394, 1077, 396, 397, 398, 403, 405, 406, 401, 402,
	404, 407, 400, 1078, 399, 962, 248, 1079, 408, 409,
	984, 1032, 410, 1046, 412, 413, 0, 0, 414, 0,
	0, 0, 416, 417, 418, 0, 0, 419, 420, 575,
	1080, 421, 1081, 1061, 422, 423, 415, 424, 425, 426,
	427, 428, 429, 430, 431, 0, 432, 433, 577, 578,
	1062, 434, 580, 435, 436, 0, 437, 0, 438, 439,
	440, 441, 442, 443, 444, 1042, 446, 445, 447, 0,
	448, 0, 0, 0, 0, 0, 449, 0, 451, 452,
	453, 450, 454, 455, 456, 457, 0, 458, 459, 460,
	1082, 461, 462, 463, 464, 972, 465, 0, 466, 467,
	473, 474, 468, 469, 475, 476, 477, 478, 479, 0,
	481, 482, 480, 483, 484, 485, 1025, 486, 470, 471,
	487, 488, 1083, 489, 490, 491, 492, 493, 494, 1040,
	0, 495, 0, 496, 497, 498, 499, 472, 500, 505,
	1086, 501, 502, 503, 504, 1063, 0, 507, 508, 960,
	506, 0, 509, 510, 511, 512, 513, 514, 327, 515,
	0, 516, 1052, 1053, 1054, 1055, 0, 523, 0, 517,
	518, 1064, 519, 1065, 982, 520, 521, 522, 0, 524,
	525, 0, 966, 526, 527, 528, 530, 531, 529, 532,
	1026, 533, 0, 0, 534, 535, 536, 592, 1049, 1085,
	0, 538, 537, 539, 595, 0, 0, 0, 0, 540,
	541, 596, 542, 543, 544, 963, 0, 0, 0, 0,
	0, 0, 959, 0, 0, 0, 0, 0, 0, 957,
	958, 0, 0, 0, 0, 0, 0, 0, 988, 0,
	0, 1472, 986, 1004, 976, 977, 978, 974, 975, 987,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	249, 250, 251, 252, 253, 254, 0, 255, 256, 0,
	0, 0, 0, 0, 1028, 992, 0, 0, 0, 257,
	258, 260, 259, 261, 262, 263, 264, 546, 1041, 0,
	265, 1048, 266, 1047, 0, 1058, 267, 268, 269, 270,
	271, 272, 994, 1027, 961, 273, 1087, 1088, 553, 0,
	274, 275, 1034, 0, 1015, 0, 276, 277, 278, 279,
	280, 281, 282, 0, 0, 284, 285, 286, 283, 0,
	287, 0, 288, 289, 290, 291, 292, 293, 0, 294,
	295, 296, 1068, 297, 298, 1018, 1016, 1017, 1024, 1020,
	1019, 1023, 299, 300, 301, 302, 1051, 303, 1045, 1044,
	965, 307, 304, 305, 0, 308, 306, 0, 309, 310,
	311, 0, 0, 312, 1036, 314, 0, 315, 316, 0,
	317, 318, 319, 0, 320, 321, 971, 322, 323, 324,
	326, 328, 325, 329, 330, 331, 332, 1059, 1060, 983,
	246, 0, 0, 0, 0, 0, 333, 334, 335, 1043,
	0, 0, 0, 336, 0, 337, 0, 0, 1069, 338,
	339, 1056, 1057, 340, 341, 0, 342, 1066, 0, 993,
	343, 0, 344, 345, 346, 347, 348, 1029, 1030, 1033,
	411, 1071, 349, 350, 0, 351, 352, 353, 354, 0,
	0, 0, 247, 355, 356, 358, 0, 1070, 357, 1038,
	1039, 0, 999, 0, 359, 360, 1072, 1031, 1073, 361,
	362, 363, 1074, 364, 0, 0, 0, 365, 366, 367,
	368, 369, 370, 0, 371, 373, 372, 0, 374, 1067,
	1075, 375, 376, 1076, 0, 377, 378, 379, 1022, 1021,
	380, 381, 382, 383, 0, 384, 385, 387, 389, 386,
	388, 393, 390, 391, 392, 395, 0, 394, 1077, 396,
	397, 398, 403, 405, 406, 401, 402, 404, 407, 400,
	1078, 399, 962, 248, 1079, 408, 409, 984, 1032, 410,
	1046, 412, 413, 0, 0, 414, 0, 0, 0, 416,
	417, 418, 0, 0, 419, 420, 575, 1080, 421, 1081,
	1061, 422, 423, 415, 424, 425, 426, 427, 428, 429,
	430, 431, 0, 432, 433, 577, 578, 1062, 434, 580,
	435, 436, 0, 437, 0, 438, 439, 440, 441, 442,
	443, 444, 1042, 446, 445, 447, 0, 448, 0, 0,
	0, 0, 0, 449, 0, 451, 452, 453, 450, 454,
	455, 456, 457, 0, 458, 459, 460, 1082, 461, 462,
	463, 464, 972, 465, 0, 466, 467, 473, 474, 468,
	469, 475, 476, 477, 478, 479, 0, 481, 482, 480,
	483, 484, 485, 1025, 486, 470, 471, 487, 488, 1083,
	489, 490, 491, 492, 493, 494, 1040, 0, 495, 0,
	496, 497, 498, 499, 472, 500, 505, 1086, 501, 502,
	503, 504, 1063, 0, 507, 508, 960, 506, 0, 509,
	510, 511, 512, 513, 514, 327, 515, 0, 516, 1052,
	1053, 1054, 1055, 0, 523, 0, 517, 518, 1064, 519,
	1065, 982, 520, 521, 522, 0, 524, 525, 0, 966,
	526, 527, 528, 530, 531, 529, 532, 1026, 533, 0,
	0, 534, 535, 536, 592, 1049, 1085, 0, 538, 537,
	539, 595, 0, 0, 0, 0, 540, 541, 596, 542,
	543, 544, 963, 0, 0, 0, 0, 0, 0, 959,
	0, 0, 0, 0, 0, 0, 957, 958, 0, 0,
	0, 0, 0, 0, 0, 988, 0, 0, 1454, 986,
	1004, 976, 977, 978, 974, 975, 987, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 250, 251,
	252, 253, 254, 0, 255, 256, 0, 0, 0, 0,
	0, 1028, 992, 0, 0, 0, 257, 258, 260, 259,
	261, 262, 263, 264, 546, 1041, 0, 265, 1048, 266,
	1047, 0, 1058, 267, 268, 269, 270, 271, 272, 994,
	1027, 961, 273, 1087, 1088, 553, 0, 274, 275, 1034,
	0, 1015, 0, 276, 277, 278, 279, 280, 281, 282,
	0, 0, 284, 285, 286, 283, 0, 287, 0, 288,
	289, 290, 291, 292, 293, 0, 294, 295, 296, 1068,
	297, 298, 1018, 1016, 1017, 1024, 1020, 1019, 1023, 299,
	300, 301, 302, 1051, 303, 1045, 1044, 965, 307, 304,
	305, 0, 308, 306, 0, 309, 310, 311, 0, 0,
	312, 1036, 314, 0, 315, 316, 0, 317, 318, 319,
	0, 320, 321, 971, 322, 323, 324, 326, 328, 325,
	329, 330, 331, 332, 1059, 1060, 983, 246, 0, 0,
	0, 0, 0, 333, 334, 335, 1043, 0, 0, 0,
	336, 0, 337, 0, 0, 1069, 338, 339, 1056, 1057,
	340, 341, 0, 342, 1066, 0, 993, 343, 0, 344,
	345, 346, 347, 348, 1029, 1030, 1033, 411, 1071, 349,
	350, 0, 351, 352, 353, 354, 0, 0, 0, 247,
	355, 356, 358, 0, 1070, 357, 1038, 1039, 0, 999,
	0, 359, 360, 1072, 1031, 1073, 361, 362, 363, 1074,
	364, 0, 0, 0, 365, 366, 367, 368, 369, 370,
	0, 371, 373, 372, 0, 374, 1067, 1075, 375, 376,
	1076, 0, 377, 378, 379, 1022, 1021, 380, 381, 382,
	383, 0, 384, 385, 387, 389, 386, 388, 393, 390,
	391, 392, 395, 0, 394, 1077, 396, 397, 398, 403,
	405, 406, 401, 402, 404, 407, 400, 1078, 399, 962,
	248, 1079, 408, 409, 984, 1032, 410, 1046, 412, 413,
	0, 0, 414, 0, 0, 0, 416, 417, 418, 0,
	0, 419, 420, 575, 1080, 421, 1081, 1061, 422, 423,
	415, 424, 425, 426, 427, 428, 429, 430, 431, 0,
	432, 433, 577, 578, 1062, 434, 580, 435, 436, 0,
	437, 0, 438, 439, 440, 441, 442, 443, 444, 1042,
	446, 445, 447, 0, 448, 0, 0, 0, 0, 0,
	449, 0, 451, 452, 453, 450, 454, 455, 456, 457,
	0, 458, 459, 460, 1082, 461, 462, 463, 464, 972,
	465, 0, 466, 467, 473, 474, 468, 469, 475, 476,
	477, 478, 479, 0, 481, 482, 480, 483, 484, 485,
	1025, 486, 470, 471, 487, 488, 1083, 489, 490, 491,
	492, 493, 494, 1040, 0, 495, 0, 496, 497, 498,
	499, 472, 500, 505, 1086, 501, 502, 503, 504, 1063,
	0, 507, 508, 960, 506, 0, 509, 510, 511, 512,
	513, 514, 327, 515, 0, 516, 1052, 1053, 1054, 1055,
	0, 523, 0, 517, 518, 1064, 519, 1065, 982, 520,
	521, 522, 0, 524, 525, 0, 966, 526, 527, 528,
	530, 531, 529, 532, 1026, 533, 0, 0, 534, 535,
	536, 592, 1049, 1085, 0, 538, 537, 539, 595, 0,
	0, 0, 0, 540, 541, 596, 542, 543, 544, 963,
	0, 0, 0, 0, 0, 0, 959, 0, 0, 0,
	0, 0, 0, 957, 958, 0, 0, 0, 0, 0,
	0, 0, 988, 0, 0, 1340, 986, 1004, 976, 977,
	978, 974, 975, 987, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 250, 251, 252, 253, 254,
	0, 255, 256, 0, 0, 0, 0, 0, 1028, 992,
	0, 0, 0, 257, 258, 260, 259, 261, 262, 263,
	264, 546, 1041, 0, 265, 1048, 266, 1047, 0, 1058,
	267, 268, 269, 270, 271, 272, 994, 1027, 961, 273,
	1087, 1088, 553, 0, 274, 275, 1034, 0, 1015, 0,
	276, 277, 278, 279, 280, 281, 282, 0, 0, 284,
	285, 286, 283, 0, 287, 0, 288, 289, 290, 291,
	292, 293, 0, 294, 295, 296, 1068, 297, 298, 1018,
	1016, 1017, 1024, 1020, 1019, 1023, 299, 300, 301, 302,
	1051, 303, 1045, 1044, 965, 307, 304, 305, 0, 308,
	306, 0, 309, 310, 311, 0, 0, 312, 1036, 314,
	0, 315, 316, 0, 317, 318, 319, 0, 320, 321,
	971, 322, 323, 324, 326, 328, 325, 329, 330, 331,
	332, 1059, 1060, 983, 246, 0, 0, 0, 0, 0,
	333, 334, 335, 1043, 0, 0, 0, 336, 0, 337,
	0, 0, 1069, 338, 339, 1056, 1057, 340, 341, 0,
	342, 1066, 0, 993, 343, 0, 344, 345, 346, 347,
	348, 1339, 1030, 1033, 411, 1071, 349, 350, 0, 351,
	352, 353, 354, 0, 0, 0, 247, 355, 356, 358,
	0, 1070, 357, 1038, 1039, 0, 999, 0, 359, 360,
	1072, 1031, 1073, 361, 362, 363, 1074, 364, 0, 0,
	0, 365, 366, 367, 368, 369, 370, 0, 371, 373,
	372, 0, 374, 1067, 1075, 375, 376, 1076, 0, 377,
	378, 379, 1022, 1021, 380, 381, 382, 383, 0, 384,
	385, 387, 389, 386, 388, 393, 390, 391, 392, 395,
	0, 394, 1077, 396, 397, 398, 403, 405, 406, 401,
	402, 404, 407, 400, 1078, 399, 962, 248, 1079, 408,
	409, 984, 1032, 410, 1046, 412, 413, 0, 0, 414,
	0, 0, 0, 416, 417, 418, 0, 0, 419, 420,
	575, 1080, 421, 1081, 1061, 422, 423, 415, 424, 425,
	426, 427, 428, 429, 430, 431, 0, 432, 433, 577,
	578, 1062, 434, 580, 435, 436, 0, 437, 0, 438,
	439, 440, 441, 442, 443, 444, 1042, 446, 445, 447,
	0, 448, 0, 0, 0, 0, 0, 449, 0, 451,
	452, 453, 450, 454, 455, 456, 457, 0, 458, 459,
	460, 1082, 461, 462, 463, 464, 972, 465, 0, 466,
	467, 473, 474, 468, 469, 475, 476, 477, 478, 479,
	0, 481, 482, 480, 483, 484, 485, 1025, 486, 470,
	471, 487, 488, 1083, 489, 490, 491, 492, 493, 494,
	1040, 0, 495, 0, 496, 497, 498, 499, 472, 500,
	505, 1086, 501, 502, 503, 504, 1063, 0, 507, 508,
	960, 506, 0, 509, 510, 511, 512, 513, 514, 327,
	515, 0, 516, 1052, 1053, 1054, 1055, 0, 523, 0,
	517, 518, 1064, 519, 1065, 982, 520, 521, 522, 0,
	524, 525, 0, 966, 526, 527, 528, 530, 531, 529,
	532, 1026, 533, 0, 0, 534, 535, 536, 592, 1049,
	1085, 0, 538, 537, 539, 595, 0, 0, 0, 0,
	540, 541, 596, 542, 543, 544, 963, 0, 0, 0,
	0, 0, 0, 959, 0, 0, 0, 0, 0, 0,
	957, 958, 0, 0, 0, 0, 0, 0, 0, 988,
	0, 0, 1334, 986, 1004, 976, 977, 978, 974, 975,
	987, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 250, 251, 252, 253, 254, 0, 255, 256,
	0, 0, 0, 0, 0, 1028, 992, 0, 0, 0,
	257, 258, 260, 259, 261, 262, 263, 264, 546, 1041,
	0, 265, 1048, 266, 1047, 0, 1058, 267, 268, 269,
	270, 271, 272, 994, 1027, 961, 273, 1087, 1088, 553,
	0, 274, 275, 1034, 0, 1015, 0, 276, 277, 278,
	279, 280, 281, 282, 0, 0, 284, 285, 286, 283,
	0, 287, 0, 288, 289, 290, 291, 292, 293, 0,
	294, 295, 296, 1068, 297, 298, 1018, 1016, 1017, 1024,
	1020, 1019, 1023, 299, 300, 301, 302, 1051, 303, 1045,
	1044, 965, 307, 304, 305, 0, 308, 306, 0, 309,
	310, 311, 0, 0, 312, 1036, 314, 0, 315, 316,
	0, 317, 318, 319, 0, 320, 321, 971, 322, 323,
	324, 326, 328, 325, 329, 330, 331, 332, 1059, 1060,
	983, 246, 0, 0, 0, 0, 0, 333, 334, 335,
	1043, 0, 0, 0, 336, 0, 337, 0, 0, 1069,
	338, 339, 1056, 1057, 340, 341, 0, 342, 1066, 0,
	993, 343, 0, 344, 345, 346, 347, 348, 1333, 1030,
	1033, 411, 1071, 349, 350, 0, 351, 352, 353, 354,
	0, 0, 0, 247, 355, 356, 358, 0, 1070, 357,
	1038, 1039, 0, 999, 0, 359, 360, 1072, 1031, 1073,
	361, 362, 363, 1074, 364, 0, 0, 0, 365, 366,
	367, 368, 369, 370, 0, 371, 373, 372, 0, 374,
	1067, 1075, 375, 376, 1076, 0, 377, 378, 379, 1022,
	1021, 380, 381, 382, 383, 0, 384, 385, 387, 389,
	386, 388, 393, 390, 391, 392, 395, 0, 394, 1077,
	396, 397, 398, 403, 405, 406, 401, 402, 404, 407,
	400, 1078, 399, 962, 248, 1079, 408, 409, 984, 1032,
	410, 1046, 412, 413, 0, 0, 414, 0, 0, 0,
	416, 417, 418, 0, 0, 419, 420, 575, 1080, 421,
	1081, 1061, 422, 423, 415, 424, 425, 426, 427, 428,
	429, 430, 431, 0, 432, 433, 577, 578, 1062, 434,
	580, 435, 436, 0, 437, 0, 438, 439, 440, 441,
	442, 443, 444, 1042, 446, 445, 447, 0, 448, 0,
	0, 0, 0, 0, 449, 0, 451, 452, 453, 450,
	454, 455, 456, 457, 0, 458, 459, 460, 1082, 461,
	462, 463, 464, 972, 465, 0, 466, 467, 473, 474,
	468, 469, 475, 476, 477, 478, 479, 0, 481, 482,
	480, 483, 484, 485, 1025, 486, 470, 471, 487, 488,
	1083, 489, 490, 491, 492, 493, 494, 1040, 0, 495,
	0, 496, 497, 498, 499, 472, 500, 505, 1086, 501,
	502, 503, 504, 1063, 0, 507, 508, 960, 506, 0,
	509, 510, 511, 512, 513, 514, 327, 515, 0, 516,
	1052, 1053, 1054, 1055, 0, 523, 0, 517, 518, 1064,
	519, 1065, 982, 520, 521, 522, 0, 524, 525, 0,
	966, 526, 527, 528, 530, 531, 529, 532, 1026, 533,
	0, 0, 534, 535, 536, 592, 1049, 1085, 0, 538,
	537, 539, 595, 0, 0, 0, 0, 540, 541, 596,
	542, 543, 544, 963, 0, 0, 0, 0, 0, 0,
	959, 0, 0, 0, 0, 0, 0, 957, 958, 0,
	0, 0, 0, 0, 0, 0, 988, 0, 0, 1327,
	986, 1004, 976, 977, 978, 974, 975, 987, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 249, 250,
	251, 252, 253, 254, 0, 255, 256, 0, 0, 0,
	0, 0, 1028, 992, 0, 0, 0, 257, 258, 260,
	259, 261, 262, 263, 264, 546, 1041, 0, 265, 1048,
	266, 1047, 0, 1058, 267, 268, 269, 270, 271, 272,
	994, 1027, 961, 273, 1087, 1088, 553, 0, 274, 275,
	1034, 0, 1015, 0, 276, 277, 278, 279, 280, 281,
	282, 0, 0, 284, 285, 286, 283, 0, 287, 0,
	288, 289, 290, 291, 292, 293, 0, 294, 295, 296,
	1068, 297, 298, 1018, 1016, 1017, 1024, 1020, 1019, 1023,
	299, 300, 301, 302, 1051, 303, 1045, 1044, 965, 307,
	304, 305, 0, 308, 306, 0, 309, 310, 311, 0,
	0, 312, 1036, 314, 0, 315, 316, 0, 317, 318,
	319, 0, 320, 321, 971, 322, 323, 324, 326, 328,
	325, 329, 330, 331, 332, 1059, 1060, 983, 246, 0,
	0, 0, 0, 0, 333, 334, 335, 1043, 0, 0,
	0, 336, 0, 337, 0, 0, 1069, 338, 339, 1056,
	1057, 340, 341, 0, 342, 1066, 0, 993, 343, 0,
	344, 345, 346, 347, 348, 1029, 1030, 1033, 411, 1071,
	349, 350, 0, 351, 352, 353, 354, 0, 0, 0,
	247, 355, 356, 358, 0, 1070, 357, 1038, 1039, 0,
	999, 0, 359, 360, 1072, 1031, 1073, 361, 362, 363,
	1074, 364, 0, 0, 0, 365, 366, 367, 368, 369,
	370, 0, 371, 373, 372, 0, 374, 1067, 1075, 375,
	376, 1076, 0, 377, 378, 379, 1022, 1021, 380, 381,
	382, 383, 0, 384, 385, 387, 389, 386, 388, 393,
	390, 391, 392, 395, 0, 394, 1077, 396, 397, 398,
	403, 405, 406, 401, 402, 404, 407, 400, 1078, 399,
	962, 248, 1079, 408, 409, 984, 1032, 410, 1046, 412,
	413, 0, 0, 414, 0, 0, 0, 416, 417, 418,
	0, 0, 419, 420, 575, 1080, 421, 1081, 1061, 422,
	423, 415, 424, 425, 426, 427, 428, 429, 430, 431,
	0, 432, 433, 577, 578, 1062, 434, 580, 435, 436,
	0, 437, 0, 438, 439, 440, 441, 442, 443, 444,
	1042, 446, 445, 447, 0, 448, 0, 0, 0, 0,
	0, 449, 0, 451, 452, 453, 450, 454, 455, 456,
	457, 0, 458, 459, 460, 1082, 461, 462, 463, 464,
	972, 465, 0, 466, 467, 473, 474, 468, 469, 475,
	476, 477, 478, 479, 0, 481, 482, 480, 483, 484,
	485, 1025, 486, 470, 471, 487, 488, 1083, 489, 490,
	491, 492, 493, 494, 1040, 0, 495, 0, 496, 497,
	498, 499, 472, 500, 505, 1086, 501, 502, 503, 504,
	1063, 0, 507, 508, 960, 506, 0, 509, 510, 511,
	512, 513, 514, 327, 515, 0, 516, 1052, 1053, 1054,
	1055, 0, 523, 0, 517, 518, 1064, 519, 1065, 982,
	520, 521, 522, 0, 524, 525, 0, 966, 526, 527,
	528, 530, 531, 529, 532, 1026, 533, 0, 0, 534,
	535, 536, 592, 1049, 1085, 0, 538, 537, 539, 595,
	0, 0, 0, 0, 540, 541, 596, 542, 543, 544,
	963, 0, 0, 0, 0, 0, 0, 959, 0, 0,
	0, 0, 0, 0, 957, 958, 1004, 976, 977, 978,
	974, 975, 987, 988, 0, 0, 0, 986, 0, 0,
	0, 0, 0, 249, 250, 251, 252, 253, 254, 0,
	255, 256, 0, 0, 0, 0, 0, 1028, 992, 0,
	0, 0, 257, 258, 260, 259, 261, 262, 263, 264,
	546, 1041, 0, 265, 1048, 266, 1047, 0, 1058, 267,
	268, 269, 270, 271, 272, 994, 1027, 961, 273, 1087,
	1088, 553, 0, 274, 275, 1034, 0, 1015, 0, 276,
	277, 278, 279, 280, 281, 282, 0, 0, 284, 285,
	286, 283, 0, 287, 0, 288, 289, 290, 291, 292,
	293, 0, 294, 295, 296, 1068, 297, 298, 1018, 1016,
	1017, 1024, 1020, 1019, 1023, 299, 300, 301, 302, 1051,
	303, 1045, 1044, 965, 307, 304, 305, 0, 308, 306,
	0, 309, 310, 311, 0, 0, 312, 1036, 314, 0,
	315, 316, 0, 317, 318, 319, 0, 320, 321, 971,
	322, 323, 324, 326, 328, 325, 329, 330, 331, 332,
	1059, 1060, 983, 246, 0, 0, 0, 0, 0, 333,
	334, 335, 1043, 0, 0, 0, 336, 0, 337, 0,
	0, 1069, 338, 339, 1056, 1057, 340, 341, 0, 342,
	1066, 0, 993, 343, 0, 344, 345, 346, 347, 348,
	1029, 1030, 1033, 411, 1071, 349, 350, 0, 351, 352,
	353, 354, 0, 0, 0, 247, 355, 356, 358, 0,
	1070, 357, 1038, 1039, 0, 999, 0, 359, 360, 1072,
	1031, 1073, 361, 362, 363, 1074, 364, 0, 0, 0,
	365, 366, 367, 368, 369, 370, 0, 371, 373, 372,
	0, 374, 1067, 1075, 375, 376, 1076, 0, 377, 378,
	379, 1022, 1021, 380, 381, 382, 383, 0, 384, 385,
	387, 389, 386, 388, 393, 390, 391, 392, 395, 0,
	394, 1077, 396, 397, 398, 403, 405, 406, 401, 402,
	404, 407, 400, 1078, 399, 962, 248, 1079, 408, 409,
	984, 1032, 410, 1046, 412, 413, 0, 0, 414, 0,
	0, 0, 416, 417, 418, 0, 0, 419, 420, 575,
	1080, 421, 1081, 1061, 422, 423, 415, 424, 425, 426,
	427, 428, 429, 430, 431, 0, 432, 433, 577, 578,
	1062, 434, 580, 435, 436, 0, 437, 0, 438, 439,
	440, 441, 442, 443, 444, 1042, 446, 445, 447, 0,
	448, 0, 0, 0, 0, 0, 449, 0, 451, 452,
	453, 450, 454, 455, 456, 457, 0, 458, 459, 460,
	1082, 461, 462, 463, 464, 972, 465, 0, 466, 467,
	473, 474, 468, 469, 475, 476, 477, 478, 479, 0,
	481, 482, 480, 483, 484, 485, 1025, 486, 470, 471,
	487, 488, 1083, 489, 490, 491, 492, 493, 494, 1040,
	0, 495, 0, 496, 497, 498, 499, 472, 500, 505,
	1086, 501, 502, 503, 504, 1063, 0, 507, 508, 960,
	506, 0, 509, 510, 511, 512, 513, 514, 327, 515,
	0, 516, 1052, 1053, 1054, 1055, 0, 523, 0, 517,
	518, 1064, 519, 1065, 982, 520, 521, 522, 0, 524,
	525, 0, 966, 526, 527, 528, 530, 531, 529, 532,
	1026, 533, 0, 0, 534, 535, 536, 592, 1049, 1085,
	0, 538, 537, 539, 595, 0, 0, 0, 0, 540,
	541, 596, 542, 543, 544, 963, 0, 0, 0, 0,
	0, 0, 959, 0, 0, 0, 0, 0, 0, 957,
	958, 1004, 976, 977, 978, 974, 975, 987, 988, 0,
	0, 0, 986, 0, 0, 0, 0, 0, 249, 250,
	251, 252, 253, 254, 0, 255, 256, 0, 0, 0,
	0, 0, 1028, 992, 0, 0, 0, 257, 258, 260,
	259, 261, 262, 263, 264, 546, 1041, 0, 265, 1048,
	266, 1047, 0, 1058, 267, 268, 269, 270, 271, 272,
	994, 1027, 961, 273, 1087, 1088, 553, 0, 274, 275,
	1034, 0, 1015, 0, 276, 277, 278, 279, 280, 281,
	282, 0, 0, 284, 285, 286, 283, 0, 287, 0,
	288, 289, 290, 291, 292, 293, 0, 294, 295, 296,
	1068, 297, 4105, 1018, 1016, 1017, 1024, 1020, 1019, 1023,
	299, 300, 301, 302, 1051, 303, 1045, 1044, 965, 307,
	304, 305, 0, 308, 306, 0, 309, 310, 311, 0,
	0, 312, 1036, 314, 0, 315, 316, 0, 317, 318,
	319, 0, 320, 321, 971, 322, 323, 324, 326, 328,
	325, 329, 330, 331, 332, 1059, 1060, 983, 246, 0,
	0, 0, 0, 0, 333, 334, 335, 1043, 0, 0,
	0, 336, 0, 337, 0, 0, 1069, 338, 339, 1056,
	1057, 340, 341, 0, 342, 1066, 0, 993, 343, 0,
	344, 345, 346, 347, 348, 1029, 1030, 1033, 411, 1071,
	349, 350, 0, 351, 352, 353, 354, 0, 0, 0,
	247, 355, 356, 358, 0, 1070, 357, 1038, 1039, 0,
	999, 0, 359, 360, 1072, 1031, 1073, 361, 362, 363,
	1074, 364, 0, 0, 0, 365, 366, 367, 368, 369,
	370, 0, 371, 373, 372, 0, 374, 1067, 1075, 375,
	376, 1076, 0, 377, 378, 379, 1022, 1021, 380, 381,
	382, 383, 0, 384, 385, 387, 389, 386, 388, 393,
	390, 391, 392, 395, 0, 394, 1077, 396, 397, 398,
	403, 405, 406, 401, 402, 404, 407, 400, 1078, 399,
	962, 248, 1079, 408, 409, 984, 1032, 410, 1046, 412,
	413, 0, 0, 414, 0, 0, 0, 416, 417, 418,
	0, 0, 419, 420, 575, 1080, 421, 1081, 1061, 422,
	423, 415, 424, 425, 426, 427, 428, 429, 430, 431,
	0, 432, 433, 577, 578, 1062, 434, 580, 435, 436,
	0, 437, 0, 438, 439, 440, 441, 442, 443, 444,
	1042, 446, 445, 447, 0, 448, 0, 0, 0, 0,
	0, 449, 0, 451, 452, 453, 450, 454, 455, 456,
	457, 0, 458, 459, 460, 1082, 461, 462, 463, 464,
	972, 465, 0, 466, 467, 473, 474, 468, 469, 475,
	476, 477, 478, 479, 0, 481, 482, 480, 483, 484,
	485, 1025, 486, 470, 471, 487, 488, 1083, 489, 490,
	491, 492, 493, 494, 1040, 0, 495, 0, 496, 497,
	498, 499, 472, 500, 505, 1086, 501, 502, 503, 504,
	1063, 0, 507, 508, 960, 506, 0, 509, 510, 511,
	512, 513, 514, 327, 515, 0, 516, 1052, 1053, 1054,
	1055, 0, 523, 0, 517, 518, 1064, 519, 1065, 982,
	520, 521, 522, 0, 4104, 525, 0, 966, 526, 527,
	528, 530, 531, 529, 532, 1026, 533, 0, 0, 534,
	535, 536, 592, 1049, 1085, 0, 538, 537, 539, 595,
	0, 0, 0, 0, 540, 541, 596, 542, 543, 544,
	963, 0, 0, 0, 0, 0, 0, 959, 0, 0,
	0, 0, 0, 0, 957, 958, 1004, 976, 977, 978,
	974, 975, 987, 988, 0, 0, 0, 986, 0, 0,
	0, 0, 0, 249, 250, 251, 252, 253, 254, 0,
	255, 256, 0, 0, 0, 0, 0, 1028, 992, 0,
	0, 0, 257, 258, 260, 259, 261, 262, 263, 264,
	4103, 1041, 0, 265, 1048, 266, 1047, 0, 1058, 267,
	268, 269, 270, 271, 272, 994, 1027, 961, 273, 1087,
	1088, 553, 0, 274, 275, 1034, 0, 1015, 0, 276,
	277, 278, 279, 280, 281, 282, 0, 0, 284, 285,
	286, 283, 0, 287, 0, 288, 289, 290, 291, 292,
	293, 0, 294, 295, 296, 1068, 297, 4105, 1018, 1016,
	1017, 1024, 1020, 1019, 1023, 299, 300, 301, 302, 1051,
	303, 1045, 1044, 965, 307, 304, 305, 0, 308, 306,
	0, 309, 310, 311, 0, 0, 312, 1036, 314, 0,
	315, 316, 0, 317, 318, 319, 0, 320, 321, 971,
	322, 323, 324, 326, 328, 325, 329, 330, 331, 332,
	1059, 1060, 983, 246, 0, 0, 0, 0, 0, 333,
	334, 335, 1043, 0, 0, 0, 336, 0, 337, 0,
	0, 1069, 338, 339, 1056, 1057, 340, 341, 0, 342,
	1066, 0, 993, 343, 0, 344, 345, 346, 347, 348,
	1029, 1030, 1033, 411, 1071, 349, 350, 0, 351, 352,
	353, 354, 0, 0, 0, 247, 355, 356, 358, 0,
	1070, 357, 1038, 1039, 0, 999, 0, 359, 360, 1072,
	1031, 1073, 361, 362, 363, 1074, 364, 0, 0, 0,
	365, 366, 367, 368, 369, 370, 0, 371, 373, 372,
	0, 374, 1067, 1075, 375, 376, 1076, 0, 377, 378,
	379, 1022, 1021, 380, 381, 382, 383, 0, 384, 385,
	387, 389, 386, 388, 393, 390, 391, 392, 395, 0,
	394, 1077, 396, 397, 398, 403, 405, 406, 401, 402,
	404, 407, 400, 1078, 399, 962, 248, 1079, 408, 409,
	984, 1032, 410, 1046, 412, 413, 0, 0, 414, 0,
	0, 0, 416, 417, 418, 0, 0, 419, 420, 575,
	1080, 421, 1081, 1061, 422, 423, 415, 424, 425, 426,
	427, 428, 429, 430, 431, 0, 432, 433, 577, 578,
	1062, 434, 580, 435, 436, 0, 437, 0, 438, 439,
	440, 441, 442, 443, 444, 1042, 446, 445, 447, 0,
	448, 0, 0, 0, 0, 0, 449, 0, 451, 452,
	453, 450, 454, 455, 456, 457, 0, 458, 459, 460,
	1082, 461, 462, 463, 464, 972, 465, 0, 466, 467,
	473, 474, 468, 469, 475, 476, 477, 478, 479, 0,
	481, 482, 480, 483, 484, 485, 1025, 486, 470, 471,
	487, 488, 1083, 489, 490, 491, 492, 493, 494, 1040,
	0, 495, 0, 496, 497, 498, 499, 472, 500, 505,
	1086, 501, 502, 503, 504, 1063, 0, 507, 508, 960,
	506, 0, 509, 510, 511, 512, 513, 514, 327, 515,
	0, 516, 1052, 1053, 1054, 1055, 0, 523, 0, 517,
	518, 1064, 519, 1065, 982, 520, 521, 522, 0, 4104,
	525, 0, 966, 526, 527, 528, 530, 531, 529, 532,
	1026, 533, 0, 0, 534, 535, 536, 592, 1049, 1085,
	0, 538, 537, 539, 595, 0, 0, 0, 0, 540,
	541, 596, 542, 543, 544, 963, 0, 0, 0, 0,
	0, 0, 959, 0, 0, 0, 0, 0, 0, 957,
	958, 1004, 976, 977, 978, 2793, 2794, 987, 988, 0,
	0, 0, 986, 0, 0, 0, 0, 0, 249, 250,
	251, 252, 253, 254, 0, 255, 256, 0, 0, 0,
	0, 0, 1028, 992, 0, 0, 0, 257, 258, 260,
	259, 261, 262, 263, 264, 546, 1041, 0, 265, 1048,
	266, 1047, 0, 1058, 267, 268, 269, 270, 271, 272,
	994, 1027, 961, 273, 1087, 1088, 553, 0, 274, 275,
	1034, 0, 1015, 0, 276, 277, 278, 279, 280, 281,
	282, 0, 0, 284, 285, 286, 283, 0, 287, 0,
	288, 289, 290, 291, 292, 293, 0, 294, 295, 296,
	1068, 297, 298, 1018, 1016, 1017, 1024, 1020, 1019, 1023,
	299, 300, 301, 302, 1051, 303, 1045, 1044, 965, 307,
	304, 305, 0, 308, 306, 0, 309, 310, 311, 0,
	0, 312, 1036, 314, 0, 315, 316, 0, 317, 318,
	319, 0, 320, 321, 971, 322, 323, 324, 326, 328,
	325, 329, 330, 331, 332, 1059, 1060, 983, 246, 0,
	0, 0, 0, 0, 333, 334, 335, 1043, 0, 0,
	0, 336, 0, 337, 0, 0, 1069, 338, 339, 1056,
	1057, 340, 341, 0, 342, 1066, 0, 993, 343, 0,
	344, 345, 346, 347, 348, 1029, 1030, 1033, 411, 1071,
	349, 350, 0, 351, 352, 353, 354, 0, 0, 0,
	247, 355, 356, 358, 0, 1070, 357, 1038, 1039, 0,
	999, 0, 359, 360, 1072, 1031, 1073, 361, 362, 363,
	1074, 364, 0, 0, 0, 365, 366, 367, 368, 369,
	370, 0, 371, 373, 372, 0, 374, 1067, 1075, 375,
	376, 1076, 0, 377, 378, 379, 1022, 1021, 380, 381,
	382, 383, 0, 384, 385, 387, 389, 386, 388, 393,
	390, 391, 392, 395, 0, 394, 1077, 396, 397, 398,
	403, 405, 406, 401, 402, 404, 407, 400, 1078, 399,
	962, 248, 1079, 408, 409, 984, 1032, 410, 1046, 412,
	413, 0, 0, 414, 0, 0, 0, 416, 417, 418,
	0, 0, 419, 420, 575, 1080, 421, 1081, 1061, 422,
	423, 415, 424, 425, 426, 427, 428, 429, 430, 431,
	0, 432, 433, 577, 578, 1062, 434, 580, 435, 436,
	0, 437, 0, 438, 439, 440, 441, 442, 443, 444,
	1042, 446, 445, 447, 0, 448, 0, 0, 0, 0,
	0, 449, 0, 451, 452, 453, 450, 454, 455, 456,
	457, 0, 458, 459, 460, 1082, 461, 462, 463, 464,
	972, 465, 0, 466, 467, 473, 474, 468, 469, 475,
	476, 477, 478, 479, 0, 481, 482, 480, 483, 484,
	485, 1025, 486, 470, 471, 487, 488, 1083, 489, 490,
	491, 492, 493, 494, 1040, 0, 495, 0, 496, 497,
	498, 499, 472, 500, 505, 1086, 501, 502, 503, 504,
	1063, 0, 507, 508, 960, 506, 0, 509, 510, 511,
	512, 513, 514, 327, 515, 0, 516, 1052, 1053, 1054,
	1055, 0, 523, 0, 517, 518, 1064, 519, 1065, 982,
	520, 521, 522, 0, 524, 525, 0, 966, 526, 527,
	528, 530, 531, 529, 532, 1026, 533, 0, 0, 534,
	535, 536, 592, 1049, 1085, 0, 538, 537, 539, 595,
	0, 0, 0, 0, 540, 541, 596, 542, 543, 544,
	963, 0, 0, 0, 0, 0, 0, 959, 0, 0,
	0, 0, 0, 0, 957, 958, 1004, 976, 977, 978,
	2791, 2792, 987, 988, 0, 0, 0, 986, 0, 0,
	0, 0, 0, 249, 250, 251, 252, 253, 254, 0,
	255, 256, 0, 0, 0, 0, 0, 1028, 992, 0,
	0, 0, 257, 258, 260, 259, 261, 262, 263, 264,
	546, 1041, 0, 265, 1048, 266, 1047, 0, 1058, 267,
	268, 269, 270, 271, 272, 994, 1027, 961, 273, 1087,
	1088, 553, 0, 274, 275, 1034, 0, 1015, 0, 276,
	277, 278, 279, 280, 281, 282, 0, 0, 284, 285,
	286, 283, 0, 287, 0, 288, 289, 290, 291, 292,
	293, 0, 294, 295, 296, 1068, 297, 298, 1018, 1016,
	1017, 1024, 1020, 1019, 1023, 299, 300, 301, 302, 1051,
	303, 1045, 1044, 965, 307, 304, 305, 0, 308, 306,
	0, 309, 310, 311, 0, 0, 312, 1036, 314, 0,
	315, 316, 0, 317, 318, 319, 0, 320, 321, 971,
	322, 323, 324, 326, 328, 325, 329, 330, 331, 332,
	1059, 1060, 983, 246, 0, 0, 0, 0, 0, 333,
	334, 335, 1043, 0, 0, 0, 336, 0, 337, 0,
	0, 1069, 338, 339, 1056, 1057, 340, 341, 0, 342,
	1066, 0, 993, 343, 0, 344, 345, 346, 347, 348,
	1029, 1030, 1033, 411, 1071, 349, 350, 0, 351, 352,
	353, 354, 0, 0, 0, 247, 355, 356, 358, 0,
	1070, 357, 1038, 1039, 0, 999, 0, 359, 360, 1072,
	1031, 1073, 361, 362, 363, 1074, 364, 0, 0, 0,
	365, 366, 367, 368, 369, 370, 0, 371, 373, 372,
	0, 374, 1067, 1075, 375, 376, 1076, 0, 377, 378,
	379, 1022, 1021, 380, 381, 382, 383, 0, 384, 385,
	387, 389, 386, 388, 393, 390, 391, 392, 395, 0,
	394, 1077, 396, 397, 398, 403, 405, 406, 401, 402,
	404, 407, 400, 1078, 399, 962, 248, 1079, 408, 409,
	984, 1032, 410, 1046, 412, 413, 0, 0, 414, 0,
	0, 0, 416, 417, 418, 0, 0, 419, 420, 575,
	1080, 421, 1081, 1061, 422, 423, 415, 424, 425, 426,
	427, 428, 429, 430, 431, 0, 432, 433, 577, 578,
	1062, 434, 580, 435, 436, 0, 437, 0, 438, 439,
	440, 441, 442, 443, 444, 1042, 446, 445, 447, 0,
	448, 0, 0, 0, 0, 0, 449, 0, 451, 452,
	453, 450, 454, 455, 456, 457, 0, 458, 459, 460,
	1082, 461, 462, 463, 464, 972, 465, 0, 466, 467,
	473, 474, 468, 469, 475, 476, 477, 478, 479, 0,
	481, 482, 480, 483, 484, 485, 1025, 486, 470, 471,
	487, 488, 1083, 489, 490, 491, 492, 493, 494, 1040,
	0, 495, 0, 496, 497, 498, 499, 472, 500, 505,
	1086, 501, 502, 503, 504, 1063, 0, 507, 508, 960,
	506, 0, 509, 510, 511, 512, 513, 514, 327, 515,
	0, 516, 1052, 1053, 1054, 1055, 0, 523, 0, 517,
	518, 1064, 519, 1065, 982, 520, 521, 522, 0, 524,
	525, 0, 966, 526, 527, 528, 530, 531, 529, 532,
	1026, 533, 0, 0, 534, 535, 536, 592, 1049, 1085,
	0, 538, 537, 539, 595, 0, 0, 0, 0, 540,
	541, 596, 542, 543, 544, 963, 0, 0, 0, 0,
	0, 0, 959, 0, 0, 0, 0, 0, 0, 957,
	958, 1004, 976, 977, 978, 974, 975, 987, 988, 0,
	0, 0, 986, 0, 0, 0, 0, 0, 249, 250,
	251, 252, 253, 254, 0, 255, 256, 0, 0, 0,
	0, 0, 1028, 992, 0, 0, 0, 257, 258, 260,
	259, 261, 262, 263, 264, 546, 1041, 0, 265, 1048,
	266, 1047, 0, 1058, 267, 268, 269, 270, 271, 272,
	994, 1027, 961, 273, 1087, 1088, 553, 0, 274, 275,
	1034, 0, 1015, 0, 276, 277, 278, 279, 280, 281,
	282, 0, 0, 284, 285, 286, 283, 0, 287, 0,
	288, 289, 290, 291, 292, 293, 0, 294, 295, 296,
	1068, 297, 298, 1018, 1016, 1017, 1024, 1020, 1019, 1023,
	299, 300, 301, 302, 1051, 303, 1045, 1044, 965, 307,
	304, 305, 0, 308, 306, 0, 309, 310, 311, 0,
	0, 312, 1036, 314, 0, 315, 316, 0, 317, 318,
	319, 0, 320, 321, 971, 322, 323, 324, 326, 328,
	325, 329, 330, 331, 332, 1059, 1060, 983, 246, 0,
	0, 0, 0, 0, 333, 334, 335, 1043, 0, 0,
	0, 336, 0, 337, 0, 0, 1069, 338, 339, 1056,
	1057, 340, 341, 0, 342, 1066, 0, 993, 343, 0,
	344, 345, 346, 347, 348, 1029, 1030, 1033, 411, 1071,
	349, 350, 0, 351, 352, 353, 354, 0, 0, 0,
	247, 355, 356, 358, 0, 1070, 357, 1038, 1039, 0,
	999, 0, 359, 360, 1072, 1031, 1073, 361, 362, 363,
	1074, 364, 0, 0, 0, 365, 366, 367, 368, 369,
	370, 0, 371, 373, 372, 0, 374, 1067, 1075, 375,
	376, 1076, 0, 377, 378, 379, 1022, 1021, 380, 381,
	382, 383, 0, 384, 385, 387, 389, 386, 388, 393,
	390, 391, 392, 395, 0, 394, 1077, 396, 397, 398,
	403, 405, 406, 401, 402, 404, 407, 400, 1078, 399,
	962, 248, 1079, 408, 409, 984, 1032, 410, 1046, 412,
	413, 0, 0, 414, 0, 0, 0, 416, 417, 418,
	0, 0, 419, 420, 575, 1080, 421, 1081, 1061, 422,
	423, 415, 424, 425, 426, 427, 428, 429, 430, 431,
	0, 432, 433, 577, 578, 1062, 434, 580, 435, 436,
	0, 437, 0, 438, 439, 440, 441, 442, 443, 444,
	1042, 446, 445, 447, 0, 448, 0, 0, 0, 0,
	0, 449, 0, 451, 452, 453, 450, 454, 455, 456,
	457, 0, 458, 459, 460, 1082, 461, 462, 463, 464,
	972, 465, 0, 466, 467, 473, 474, 468, 469, 475,
	476, 477, 478, 479, 0, 481, 482, 480, 483, 484,
	485, 1025, 486, 470, 471, 487, 488, 1083, 489, 490,
	491, 492, 493, 494, 1040, 0, 495, 0, 496, 497,
	498, 499, 472, 500, 505, 1086, 501, 502, 503, 504,
	1063, 0, 507, 508, 960, 506, 0, 509, 510, 511,
	512, 513, 514, 327, 515, 0, 516, 1052, 1053, 1054,
	1055, 0, 523, 0, 517, 518, 1064, 519, 1065, 982,
	520, 521, 522, 0, 524, 525, 0, 966, 526, 527,
	528, 530, 531, 529, 532, 1026, 533, 0, 0, 534,
	535, 536, 592, 1049, 1085, 0, 538, 537, 539, 595,
	0, 0, 0, 0, 540, 541, 596, 542, 543, 544,
	963, 0, 0, 0, 0, 0, 0, 959, 0, 0,
	0, 0, 0, 0, 2188, 2189, 1004, 976, 977, 978,
	974, 975, 987, 988, 0, 0, 0, 986, 0, 0,
	0, 0, 0, 249, 250, 251, 252, 253, 254, 0,
	255, 256, 0, 0, 0, 0, 0, 1028, 992, 0,
	0, 0, 257, 258, 260, 259, 261, 262, 263, 264,
	546, 1041, 0, 265, 1048, 266, 1047, 0, 1058, 267,
	268, 269, 270, 271, 272, 994, 1027, 0, 273, 1087,
	1088, 553, 0, 274, 275, 1034, 0, 1015, 0, 276,
	277, 278, 279, 280, 281, 282, 0, 0, 284, 285,
	286, 283, 0, 287, 0, 288, 289, 290, 291, 292,
	293, 0, 294, 295, 296, 1068, 297, 298, 1018, 1016,
	1017, 1024, 1020, 1019, 1023, 299, 300, 301, 302, 1051,
	303, 1045, 1044, 0, 307, 304, 305, 0, 308, 306,
	0, 309, 310, 311, 0, 0, 312, 1036, 314, 0,
	315, 316, 0, 317, 318, 319, 0, 320, 321, 971,
	322, 323, 324, 326, 328, 325, 329, 330, 331, 332,
	1059, 1060, 983, 246, 0, 0, 0, 0, 0, 333,
	334, 335, 1043, 0, 0, 0, 336, 0, 337, 0,
	0, 1069, 338, 339, 1056, 1057, 340, 341, 0, 342,
	1066, 0, 993, 343, 0, 344, 345, 346, 347, 348,
	1029, 1030, 1033, 411, 1071, 349, 350, 0, 351, 352,
	353, 354, 0, 0, 0, 247, 355, 356, 358, 0,
	1070, 357, 1038, 1039, 0, 999, 0, 359, 360, 1072,
	1031, 1073, 361, 362, 363, 1074, 364, 0, 0, 0,
	365, 366, 367, 368, 369, 370, 0, 371, 373, 372,
	0, 374, 1067, 1075, 375, 376, 1076, 0, 377, 378,
	379, 1022, 1021, 380, 381, 382, 383, 0, 384, 385,
	387, 389, 386, 388, 393, 390, 391, 392, 395, 0,
	394, 1077, 396, 397, 398, 403, 405, 406, 401, 402,
	404, 407, 400, 1078, 399, 0, 248, 1079, 408, 409,
	984, 1032, 410, 1046, 412, 413, 0, 0, 414, 0,
	0, 0, 416, 417, 418, 0, 0, 419, 420, 575,
	1080, 421, 1081, 1061, 422, 423, 415, 424, 425, 426,
	427, 428, 429, 430, 431, 0, 432, 433, 577, 578,
	1062, 434, 580, 435, 436, 0, 437, 0, 438, 439,
	440, 441, 442, 443, 444, 1042, 446, 445, 447, 0,
	448, 0, 0, 0, 0, 0, 449, 0, 451, 452,
	453, 450, 454, 455, 456, 457, 0, 458, 459, 460,
	1082, 461, 462, 463, 464, 972, 465, 0, 466, 467,
	473, 474, 468, 469, 475, 476, 477, 478, 479, 0,
	481, 482, 480, 483, 484, 485, 1025, 486, 470, 471,
	487, 488, 1083, 489, 490, 491, 492, 493, 494, 1040,
	0, 495, 0, 496, 497, 498, 499, 472, 500, 505,
	1086, 501, 502, 503, 504, 1063, 0, 507, 508, 0,
	506, 0, 509, 510, 511, 512, 513, 514, 327, 515,
	0, 516, 1052, 1053, 1054, 1055, 0, 523, 0, 517,
	518, 1064, 519, 1065, 982, 520, 521, 522, 0, 524,
	525, 0, 0, 526, 527, 528, 530, 531, 529, 532,
	1026, 533, 0, 0, 534, 535, 536, 592, 1049, 1085,
	0, 538, 537, 539, 595, 0, 0, 0, 0, 540,
	541, 596, 542, 543, 544, 1004, 976, 977, 978, 974,
	975, 987, 2384, 0, 0, 0, 0, 0, 0, 2382,
	2383, 0, 249, 250, 251, 252, 253, 254, 988, 255,
	256, 0, 986, 0, 0, 0, 1028, 992, 0, 0,
	0, 257, 258, 260, 259, 261, 262, 263, 264, 546,
	1041, 0, 265, 1048, 266, 1047, 0, 1058, 267, 268,
	269, 270, 271, 272, 994, 1027, 0, 273, 1087, 1088,
	553, 0, 274, 275, 1034, 0, 1015, 0, 276, 277,
	278, 279, 280, 281, 282, 0, 0, 284, 285, 286,
	283, 0, 287, 0, 288, 289, 290, 291, 292, 293,
	0, 294, 295, 296, 1068, 297, 298, 1018, 1016, 1017,
	1024, 1020, 1019, 1023, 299, 300, 301, 302, 1051, 303,
	1045, 1044, 0, 307, 304, 305, 0, 308, 306, 0,
	309, 310, 311, 0, 0, 312, 1036, 314, 0, 315,
	316, 0, 317, 318, 319, 0, 320, 321, 971, 322,
	323, 324, 326, 328, 325, 329, 330, 331, 332, 1059,
	1060, 983, 246, 0, 0, 0, 0, 0, 333, 334,
	335, 1043, 0, 0, 0, 336, 0, 337, 0, 0,
	1069, 338, 339, 1056, 1057, 340, 341, 0, 342, 1066,
	0, 993, 343, 0, 344, 345, 346, 347, 348, 1029,
	1030, 1033, 411, 1071, 349, 350, 0, 351, 352, 353,
	354, 0, 0, 0, 247, 355, 356, 358, 0, 1070,
	357, 1038, 1039, 0, 999, 0, 359, 360, 1072, 1031,
	1073, 361, 362, 363, 1074, 364, 0, 0, 0, 365,
	366, 367, 368, 369, 370, 0, 371, 373, 372, 0,
	374, 1067, 1075, 375, 376, 1076, 0, 377, 378, 379,
	1022, 1021, 380, 381, 382, 383, 0, 384, 385, 387,
	389, 386, 388, 393, 390, 391, 392, 395, 0, 394,
	1077, 396, 397, 398, 403, 405, 406, 401, 402, 404,
	407, 400, 1078, 399, 0, 248, 1079, 408, 409, 984,
	1032, 410, 1046, 412, 413, 0, 0, 414, 0, 0,
	0, 416, 417, 418, 0, 0, 419, 420, 575, 1080,
	421, 1081, 1061, 422, 423, 415, 424, 425, 426, 427,
	428, 429, 430, 431, 0, 432, 433, 577, 578, 1062,
	434, 580, 435, 436, 0, 437, 0, 438, 439, 440,
	441, 442, 443, 444, 1042, 446, 445, 447, 0, 448,
	0, 0, 0, 0, 0, 449, 0, 451, 452, 453,
	450, 454, 455, 456, 457, 0, 458, 459, 460, 1082,
	461, 462, 463, 464, 2786, 2787, 0, 466, 467, 473,
	474, 468, 469, 475, 476, 477, 478, 479, 0, 481,
	482, 480, 483, 484, 485, 1025, 486, 470, 471, 487,
	488, 1083, 489, 490, 491, 492, 493, 494, 1040, 0,
	495, 0, 496, 497, 498, 499, 472, 500, 505, 1086,
	501, 502, 503, 504, 1063, 0, 507, 508, 0, 506,
	0, 509, 510, 511, 512, 513, 514, 327, 515, 0,
	516, 1052, 1053, 1054, 1055, 0, 523, 0, 517, 518,
	1064, 519, 1065, 982, 520, 521, 522, 0, 524, 525,
	0, 0, 526, 527, 528, 530, 531, 529, 532, 1026,
	533, 0, 0, 534, 535, 536, 592, 1049, 1085, 0,
	538, 537, 539, 595, 0, 0, 0, 0, 540, 541,
	596, 542, 543, 544, 1004, 976, 977, 978, 974, 975,
	987, 0, 0, 0, 0, 0, 0, 0, 1899, 1900,
	0, 249, 250, 251, 252, 253, 254, 988, 255, 256,
	0, 986, 0, 0, 0, 1028, 992, 0, 0, 0,
	257, 258, 260, 259, 261, 262, 263, 264, 0, 1041,
	0, 265, 1048, 266, 1047, 0, 1058, 267, 268, 269,
	270, 271, 272, 994, 1027, 961, 273, 1087, 1088, 553,
	0, 274, 275, 1034, 0, 1015, 0, 276, 277, 278,
	279, 280, 281, 282, 0, 0, 284, 285, 286, 283,
	0, 287, 0, 288, 289, 290, 291, 292, 293, 0,
	294, 295, 296, 1068, 297, 4105, 1018, 1016, 1017, 1024,
	1020, 1019, 1023, 299, 300, 301, 302, 1051, 303, 1045,
	1044, 965, 307, 304, 305, 0, 308, 306, 0, 309,
	310, 311, 0, 0, 312, 1036, 314, 0, 315, 316,
	0, 317, 318, 319, 0, 320, 321, 971, 322, 323,
	324, 326, 328, 325, 329, 330, 331, 332, 1059, 1060,
	983, 246, 0, 0, 0, 0, 0, 333, 334, 335,
	1043, 0, 0, 0, 336, 0, 337, 0, 0, 1069,
	338, 339, 1056, 1057, 340, 341, 0, 342, 1066, 0,
	993, 343, 0, 344, 345, 346, 347, 348, 1029, 1030,
	1033, 411, 0, 349, 350, 0, 351, 352, 353, 354,
	0, 0, 0, 247, 355, 356, 358, 0, 1070, 357,
	1038, 1039, 0, 999, 0, 359, 360, 0, 1031, 0,
	361, 362, 363, 1074, 364, 0, 0, 0, 365, 366,
	367, 368, 369, 370, 0, 371, 373, 372, 0, 374,
	1067, 1075, 375, 376, 0, 0, 377, 378, 379, 1022,
	1021, 380, 381, 382, 383, 0, 384, 385, 387, 389,
	386, 388, 393, 390, 391, 392, 395, 0, 394, 1077,
	396, 397, 398, 403, 405, 406, 401, 402, 404, 407,
	400, 1078, 399, 962, 248, 0, 408, 409, 984, 1032,
	410, 1046, 412, 413, 0, 0, 414, 0, 0, 0,
	416, 417, 418, 0, 0, 419, 420, 575, 1080, 421,
	1081, 1061, 422, 423, 415, 424, 425, 426, 427, 428,
	429, 430, 431, 0, 432, 433, 577, 578, 1062, 434,
	580, 435, 436, 0, 437, 0, 438, 439, 440, 441,
	442, 443, 444, 1042, 446, 445, 447, 0, 448, 0,
	0, 0, 0, 0, 449, 0, 451, 452, 453, 450,
	454, 455, 456, 457, 0, 458, 459, 460, 1082, 461,
	462, 463, 464, 972, 465, 0, 466, 467, 473, 474,
	468, 469, 475, 476, 477, 478, 479, 0, 481, 482,
	480, 483, 484, 485, 1025, 486, 470, 471, 487, 488,
	0, 489, 490, 491, 492, 493, 494, 1040, 0, 495,
	0, 496, 497, 498, 499, 472, 500, 505, 1086, 501,
	502, 503, 504, 1063, 0, 507, 508, 960, 506, 0,
	509, 510, 511, 512, 513, 514, 327, 515, 0, 516,
	1052, 1053, 1054, 1055, 0, 523, 0, 517, 518, 1064,
	519, 1065, 982, 520, 521, 522, 0, 4104, 525, 0,
	966, 526, 527, 528, 530, 531, 529, 532, 1026, 533,
	0, 0, 534, 535, 536, 592, 1049, 1085, 0, 538,
	537, 539, 595, 0, 0, 0, 0, 540, 541, 596,
	542, 543, 544, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 950, 0, 1125, 0, 0, 957, 958, 0,
	0, 0, 0, 0, 0, 0, 988, 0, 0, 0,
	986, 249, 250, 251, 252, 253, 254, 0, 255, 256,
	0, 0, 0, 0, 0, 1028, 0, 0, 0, 0,
	257, 258, 260, 259, 261, 262, 263, 264, 546, 547,
	0, 265, 548, 266, 549, 0, 550, 267, 268, 269,
	270, 271, 272, 0, 1027, 0, 273, 551, 552, 553,
	0, 274, 275, 1034, 0, 1015, 0, 276, 277, 278,
	279, 280, 281, 282, 0, 0, 284, 285, 286, 283,
	0, 287, 0, 288, 289, 290, 291, 292, 293, 0,
	294, 295, 296, 1068, 297, 298, 1018, 1016, 1017, 1024,
	1020, 1019, 1023, 299, 300, 301, 302, 0, 303, 555,
	556, 0, 307, 304, 305, 0, 308, 306, 0, 309,
	310, 311, 0, 0, 312, 313, 314, 0, 315, 316,
	0, 317, 318, 319, 0, 320, 321, 557, 322, 323,
	324, 326, 328, 325, 329, 330, 331, 332, 1059, 1060,
	0, 246, 0, 0, 0, 0, 0, 333, 334, 335,
	560, 0, 0, 0, 336, 0, 337, 0, 0, 1069,
	338, 339, 561, 562, 340, 341, 0, 342, 1066, 0,
	564, 343, 0, 344, 345, 346, 347, 348, 1029, 1030,
	1033, 411, 1071, 349, 350, 0, 351, 352, 353, 354,
	0, 0, 0, 247, 355, 356, 358, 0, 1070, 357,
	568, 569, 0, 570, 0, 359, 360, 1072, 1031, 1073,
	361, 362, 363, 1074, 364, 0, 0, 0, 365, 366,
	367, 368, 369, 370, 1111, 371, 373, 372, 0, 374,
	1067, 1075, 375, 376, 1076, 0, 377, 378, 379, 1022,
	1021, 380, 381, 382, 383, 0, 384, 385, 387, 389,
	386, 388, 393, 390, 391, 392, 395, 0, 394, 1077,
	396, 397, 398, 403, 405, 406, 401, 402, 404, 407,
	400, 1078, 399, 0, 248, 1079, 408, 409, 0, 1032,
	410, 574, 412, 413, 0, 0, 414, 0, 0, 1117,
	416, 417, 418, 0, 0, 419, 420, 575, 1080, 421,
	1081, 1061, 422, 423, 415, 424, 425, 426, 427, 428,
	429, 430, 431, 0, 432, 433, 577, 578, 1062, 434,
	580, 435, 436, 0, 437, 0, 438, 439, 440, 441,
	442, 443, 444, 581, 446, 445, 447, 0, 448, 0,
	0, 0, 0, 0, 449, 0, 451, 452, 453, 450,
	454, 455, 456, 457, 0, 458, 459, 460, 1082, 461,
	462, 463, 464, 582, 1119, 0, 466, 467, 473, 474,
	468, 469, 475, 476, 477, 478, 479, 210, 481, 482,
	480, 483, 484, 485, 1025, 486, 470, 471, 487, 488,
	1083, 489, 490, 491, 492, 493, 494, 583, 0, 495,
	0, 496, 497, 498, 499, 472, 500, 505, 584, 501,
	502, 503, 504, 1063, 0, 507, 508, 0, 506, 212,
	509, 510, 511, 512, 513, 514, 327, 515, 0, 516,
	586, 587, 588, 589, 0, 523, 0, 517, 518, 1064,
	519, 1065, 0, 520, 521, 522, 0, 524, 525, 0,
	0, 526, 527, 528, 530, 531, 529, 532, 1026, 533,
	0, 0, 534, 535, 536, 1461, 593, 594, 0, 538,
	537, 539, 595, 0, 1125, 0, 204, 540, 541, 596,
	542, 543, 544, 0, 205, 0, 0, 0, 0, 0,
	0, 249, 250, 251, 252, 253, 254, 0, 255, 256,
	0, 0, 0, 0, 1115, 1028, 1788, 0, 0, 0,
	257, 258, 260, 259, 261, 262, 263, 264, 546, 547,
	0, 265, 548, 266, 549, 0, 550, 267, 268, 269,
	270, 271, 272, 0, 1027, 0, 273, 551, 552, 553,
	0, 274, 275, 1034, 0, 1015, 0, 276, 277, 278,
	279, 280, 281, 282, 0, 0, 284, 285, 286, 283,
	0, 287, 0, 288, 289, 290, 291, 292, 293, 0,
	294, 295, 296, 1068, 297, 298, 1018, 1016, 1017, 1024,
	1020, 1019, 1023, 299, 300, 301, 302, 0, 303, 555,
	556, 0, 307, 304, 305, 0, 308, 306, 0, 309,
	310, 311, 0, 0, 312, 313, 314, 0, 315, 316,
	0, 317, 318, 319, 0, 320, 321, 557, 322, 323,
	324, 326, 328, 325, 329, 330, 331, 332, 1059, 1060,
	0, 246, 0, 0, 0, 0, 0, 333, 334, 335,
	560, 0, 0, 0, 336, 0, 337, 0, 0, 1069,
	338, 339, 561, 562, 340, 341, 0, 342, 1066, 0,
	564, 343, 0, 344, 345, 346, 347, 348, 1029, 1030,
	1033, 411, 1071, 349, 350, 0, 351, 352, 353, 354,
	0, 0, 0, 247, 355, 356, 358, 0, 1070, 357,
	568, 569, 0, 570, 0, 359, 360, 1072, 1031, 1073,
	361, 362, 363, 1074, 364, 0, 0, 0, 365, 366,
	367, 368, 369, 370, 1111, 371, 373, 372, 0, 374,
	1067, 1075, 375, 376, 1076, 0, 377, 378, 379, 1022,
	1021, 380, 381, 382, 383, 0, 384, 385, 387, 389,
	386, 388, 393, 390, 391, 392, 395, 0, 394, 1077,
	396, 397, 398, 403, 405, 406, 401, 402, 404, 407,
	400, 1078, 399, 0, 248, 1079, 408, 409, 0, 1032,
	410, 574, 412, 413, 0, 0, 414, 0, 0, 1117,
	416, 417, 418, 0, 0, 419, 420, 575, 1080, 421,
	1081, 1061, 422, 423, 415, 424, 425, 426, 427, 428,
	429, 430, 431, 0, 432, 433, 577, 578, 1062, 434,
	580, 435, 436, 0, 437, 0, 438, 439, 440, 441,
	442, 443, 444, 581, 446, 445, 447, 0, 448, 0,
	0, 0, 0, 0, 449, 0, 451, 452, 453, 450,
	454, 455, 456, 457, 0, 458, 459, 460, 1082, 461,
	462, 463, 464, 582, 1119, 0, 466, 467, 473, 474,
	468, 469, 475, 476, 477, 478, 479, 210, 481, 482,
	480, 483, 484, 485, 1025, 486, 470, 471, 487, 488,
	1083, 489, 490, 491, 492, 493, 494, 583, 0, 495,
	0, 496, 497, 498, 499, 472, 500, 505, 584, 501,
	502, 503, 504, 1063, 0, 507, 508, 0, 506, 212,
	509, 510, 511, 512, 513, 514, 327, 515, 0, 516,
	586, 587, 588, 589, 0, 523, 0, 517, 518, 1064,
	519, 1065, 0, 520, 521, 522, 0, 524, 525, 0,
	0, 526, 527, 528, 530, 531, 529, 532, 1026, 533,
	0, 0, 534, 535, 536, 1461, 593, 594, 0, 538,
	537, 539, 595, 0, 0, 0, 204, 540, 541, 596,
	542, 543, 544, 0, 205, 0, 0, 0, 2946, 0,
	1125, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1115, 0, 1788, 249, 250, 251,
	252, 253, 254, 0, 255, 256, 0, 0, 0, 0,
	0, 1028, 0, 0, 0, 0, 257, 258, 260, 259,
	261, 262, 263, 264, 546, 547, 0, 265, 548, 266,
	549, 0, 550, 267, 268, 269, 270, 271, 272, 0,
	1027, 0, 273, 551, 552, 553, 0, 274, 275, 1034,
	0, 1015, 0, 276, 277, 278, 279, 280, 281, 282,
	0, 0, 284, 285, 286, 283, 0, 287, 0, 288,
	289, 290, 291, 292, 293, 0, 294, 295, 296, 1068,
	297, 298, 1018, 1016, 1017, 1024, 1020, 1019, 1023, 299,
	300, 301, 302, 0, 303, 555, 556, 0, 307, 304,
	305, 0, 308, 306, 0, 309, 310, 311, 0, 0,
	312, 313, 314, 0, 315, 316, 0, 317, 318, 319,
	0, 320, 321, 557, 322, 323, 324, 326, 328, 325,
	329, 330, 331, 332, 1059, 1060, 0, 246, 0, 0,
	0, 0, 0, 333, 334, 335, 560, 0, 0, 0,
	336, 0, 337, 0, 0, 1069, 338, 339, 561, 562,
	340, 341, 0, 342, 1066, 0, 564, 343, 0, 344,
	345, 346, 347, 348, 1029, 1030, 1033, 411, 1071, 349,
	350, 0, 351, 352, 353, 354, 0, 0, 0, 247,
	355, 356, 358, 0, 1070, 357, 568, 569, 0, 570,
	0, 359, 360, 1072, 1031, 1073, 361, 362, 363, 1074,
	364, 0, 0, 0, 365, 366, 367, 368, 369, 370,
	1111, 371, 373, 372, 0, 374, 1067, 1075, 375, 376,
	1076, 0, 377, 378, 379, 1022, 1021, 380, 381, 382,
	383, 0, 384, 385, 387, 389, 386, 388, 393, 390,
	391, 392, 395, 0, 394, 1077, 396, 397, 398, 403,
	405, 406, 401, 402, 404, 407, 400, 1078, 399, 0,
	248, 1079, 408, 409, 0, 1032, 410, 574, 412, 413,
	0, 0, 414, 0, 0, 1117, 416, 417, 418, 0,
	0, 419, 420, 575, 1080, 421, 1081, 1061, 422, 423,
	415, 424, 425, 426, 427, 428, 429, 430, 431, 0,
	432, 433, 577, 578, 1062, 434, 580, 435, 436, 0,
	437, 0, 438, 439, 440, 441, 442, 443, 444, 581,
	446, 445, 447, 0, 448, 0, 0, 0, 0, 0,
	449, 0, 451, 452, 453, 450, 454, 455, 456, 457,
	0, 458, 459, 460, 1082, 461, 462, 463, 464, 582,
	1119, 0, 466, 467, 473, 474, 468, 469, 475, 476,
	477, 478, 479, 0, 481, 482, 480, 483, 484, 485,
	1025, 486, 470, 471, 487, 488, 1083, 489, 490, 491,
	492, 493, 494, 583, 0, 495, 0, 496, 497, 498,
	499, 472, 500, 505, 584, 501, 502, 503, 504, 1063,
	0, 507, 508, 0, 506, 0, 509, 510, 511, 512,
	513, 514, 327, 515, 0, 516, 586, 587, 588, 589,
	0, 523, 0, 517, 518, 1064, 519, 1065, 0, 520,
	521, 522, 0, 524, 525, 0, 0, 526, 527, 528,
	530, 531, 529, 532, 1026, 533, 0, 0, 534, 535,
	536, 592, 593, 594, 0, 538, 537, 539, 595, 0,
	1107, 0, 1125, 540, 541, 596, 542, 543, 544, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	250, 251, 252, 253, 254, 0, 255, 256, 0, 0,
	1115, 0, 1113, 1028, 0, 0, 0, 0, 257, 258,
	260, 259, 261, 262, 263, 264, 546, 547, 0, 265,
	548, 266, 549, 0, 550, 267, 268, 269, 270, 271,
	272, 0, 1027, 0, 273, 551, 552, 553, 0, 274,
	275, 1034, 0, 1015, 0, 276, 277, 278, 279, 280,
	281, 282, 0, 0, 284, 285, 286, 283, 0, 287,
	0, 288, 289, 290, 291, 292, 293, 0, 294, 295,
	296, 1068, 297, 298, 1018, 1016, 1017, 1024, 1020, 1019,
	1023, 299, 300, 301, 302, 0, 303, 555, 556, 0,
	307, 304, 305, 0, 308, 306, 0, 309, 310, 311,
	0, 0, 312, 313, 314, 0, 315, 316, 0, 317,
	318, 319, 0, 320, 321, 557, 322, 323, 324, 326,
	328, 325, 329, 330, 331, 332, 1059, 1060, 0, 246,
	0, 0, 0, 0, 0, 333, 334, 335, 560, 0,
	0, 0, 336, 0, 337, 0, 0, 1069, 338, 339,
	561, 562, 340, 341, 0, 342, 1066, 0, 564, 343,
	0, 344, 345, 346, 347, 348, 1029, 1030, 1033, 411,
	1071, 349, 350, 0, 351, 352, 353, 354, 0, 0,
	0, 247, 355, 356, 358, 0, 1070, 357, 568, 569,
	0, 570, 0, 359, 360, 1072, 1031, 1073, 361, 362,
	363, 1074, 364, 0, 0, 0, 365, 366, 367, 368,
	369, 370, 1111, 371, 373, 372, 0, 374, 1067, 1075,
	375, 376, 1076, 0, 377, 378, 379, 1022, 1021, 380,
	381, 382, 383, 0, 384, 385, 387, 389, 386, 388,
	393, 390, 391, 392, 395, 0, 394, 1077, 396, 397,
	398, 403, 405, 406, 401, 402, 404, 407, 400, 1078,
	399, 0, 248, 1079, 408, 409, 0, 1032, 410, 574,
	412, 413, 0, 0, 414, 0, 0, 1117, 416, 417,
	418, 0, 0, 419, 420, 575, 1080, 421, 1081, 1061,
	422, 423, 415, 424, 425, 426, 427, 428, 429, 430,
	431, 0, 432, 433, 577, 578, 1062, 434, 580, 435,
	436, 0, 437, 0, 438, 439, 440, 441, 442, 443,
	444, 581, 446, 445, 447, 0, 448, 0, 0, 0,
	0, 0, 449, 0, 451, 452, 453, 450, 454, 455,
	456, 457, 0, 458, 459, 460, 1082, 461, 462, 463,
	464, 582, 1119, 0, 466, 467, 473, 474, 468, 469,
	475, 476, 477, 478, 479, 0, 481, 482, 480, 483,
	484, 485, 1025, 486, 470, 471, 487, 488, 1083, 489,
	490, 491, 492, 493, 494, 583, 0, 495, 0, 496,
	497, 498, 499, 472, 500, 505, 584, 501, 502, 503,
	504, 1063, 0, 507, 508, 0, 506, 0, 509, 510,
	511, 512, 513, 514, 327, 515, 0, 516, 586, 587,
	588, 589, 0, 523, 0, 517, 518, 1064, 519, 1065,
	0, 520, 521, 522, 0, 524, 525, 0, 0, 526,
	527, 528, 530, 531, 529, 532, 1026, 533, 0, 0,
	534, 535, 536, 592, 593, 594, 0, 538, 537, 539,
	595, 0, 1125, 0, 0, 540, 541, 596, 542, 543,
	544, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	250, 251, 252, 253, 254, 0, 255, 256, 0, 0,
	0, 0, 1115, 1028, 1113, 0, 0, 0, 257, 258,
	260, 259, 261, 262, 263, 264, 546, 547, 0, 265,
	548, 266, 549, 0, 550, 267, 268, 269, 270, 271,
	272, 0, 1027, 0, 273, 551, 552, 553, 0, 274,
	275, 1034, 0, 1015, 0, 276, 277, 278, 279, 280,
	281, 282, 0, 0, 284, 285, 286, 283, 0, 287,
	0, 288, 289, 290, 291, 292, 293, 0, 294, 295,
	296, 1068, 297, 298, 1018, 1016, 1017, 1024, 1020, 1019,
	1023, 299, 300, 301, 302, 0, 303, 555, 556, 0,
	307, 304, 305, 0, 308, 306, 0, 309, 310, 311,
	0, 0, 312, 313, 314, 0, 315, 316, 0, 317,
	318, 319, 0, 320, 321, 557, 322, 323, 324, 326,
	328, 325, 329, 330, 331, 332, 1059, 1060, 0, 246,
	0, 0, 0, 0, 0, 333, 334, 335, 560, 0,
	0, 0, 336, 0, 337, 0, 0, 1069, 338, 339,
	561, 562, 340, 341, 0, 342, 1066, 0, 564, 343,
	0, 344, 345, 346, 347, 348, 1029, 1030, 1033, 411,
	1071, 349, 350, 0, 351, 352, 353, 354, 0, 0,
	0, 247, 355, 356, 358, 0, 1070, 357, 568, 569,
	0, 570, 0, 359, 360, 1072, 1031, 1073, 361, 362,
	363, 1074, 364, 0, 0, 0, 365, 366, 367, 368,
	369, 370, 1111, 371, 373, 372, 0, 374, 1067, 1075,
	375, 376, 1076, 0, 377, 378, 379, 1022, 1021, 380,
	381, 382, 383, 0, 384, 385, 387, 389, 386, 388,
	393, 390, 391, 392, 395, 0, 394, 1077, 396, 397,
	398, 403, 405, 406, 401, 402, 404, 407, 400, 1078,
	399, 0, 248, 1079, 408, 409, 0, 1032, 410, 574,
	412, 413, 0, 0, 414, 0, 0, 1117, 416, 417,
	418, 0, 0, 419, 420, 575, 1080, 421, 1081, 1061,
	422, 423, 415, 424, 425, 426, 427, 428, 429, 430,
	431, 0, 432, 433, 577, 578, 1062, 434, 580, 435,
	436, 0, 437, 0, 438, 439, 440, 441, 442, 443,
	444, 581, 446, 445, 447, 0, 448, 0, 0, 0,
	0, 0, 449, 0, 451, 452, 453, 450, 454, 455,
	456, 457, 0, 458, 459, 460, 1082, 461, 462, 463,
	464, 582, 1119, 0, 466, 467, 473, 474, 468, 469,
	475, 476, 477, 478, 479, 0, 481, 482, 480, 483,
	484, 485, 1025, 486, 470, 471, 487, 488, 1083, 489,
	490, 491, 492, 493, 494, 583, 0, 495, 0, 496,
	497, 498, 499, 472, 500, 505, 584, 501, 502, 503,
	504, 1063, 0, 507, 508, 0, 506, 0, 509, 510,
	511, 512, 513, 514, 327, 515, 0, 516, 586, 587,
	588, 589, 0, 523, 0, 517, 518, 1064, 519, 1065,
	0, 520, 521, 522, 0, 524, 525, 0, 0, 526,
	527, 528, 530, 531, 529, 532, 1026, 533, 0, 0,
	534, 535, 536, 592, 593, 594, 0, 538, 537, 539,
	595, 0, 1125, 0, 0, 540, 541, 596, 542, 543,
	544, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	250, 251, 252, 253, 254, 0, 255, 256, 0, 0,
	0, 0, 1115, 1028, 1113, 0, 0, 0, 257, 258,
	260, 259, 261, 262, 263, 264, 546, 547, 0, 265,
	548, 266, 549, 0, 550, 267, 268, 269, 270, 271,
	272, 0, 1027, 0, 273, 551, 552, 553, 0, 274,
	275, 1034, 0, 1015, 0, 276, 277, 278, 279, 280,
	281, 282, 0, 0, 284, 285, 286, 283, 0, 287,
	0, 288, 289, 290, 291, 292, 293, 0, 294, 295,
	296, 1068, 297, 298, 1018, 1016, 1017, 1024, 1020, 1019,
	1023, 299, 300, 301, 302, 0, 303, 555, 556, 0,
	307, 304, 305, 0, 308, 306, 0, 309, 310, 311,
	0, 0, 312, 313, 314, 0, 315, 316, 0, 317,
	318, 319, 0, 320, 321, 557, 322, 323, 324, 326,
	328, 325, 329, 330, 331, 332, 1059, 1060, 0, 246,
	0, 0, 0, 0, 0, 333, 334, 335, 560, 0,
	0, 0, 336, 0, 337, 0, 0, 1069, 338, 339,
	561, 562, 340, 341, 0, 342, 1066, 0, 564, 343,
	0, 344, 345, 346, 347, 348, 1029, 1030, 1033, 411,
	1071, 349, 350, 0, 351, 352, 353, 354, 0, 0,
	0, 247, 355, 356, 358, 0, 1070, 357, 568, 569,
	0, 570, 0, 359, 360, 1072, 1031, 1073, 361, 362,
	363, 1074, 364, 0, 0, 0, 365, 366, 367, 368,
	369, 370, 0, 371, 373, 372, 0, 374, 1067, 1075,
	375, 376, 1076, 0, 377, 378, 379, 1022, 1021, 380,
	381, 382, 383, 0, 384, 385, 387, 389, 386, 388,
	393, 390, 391, 392, 395, 0, 394, 1077, 396, 397,
	398, 403, 405, 406, 401, 402, 404, 407, 400, 1078,
	399, 0, 248, 1079, 408, 409, 0, 1032, 410, 574,
	412, 413, 0, 0, 414, 0, 0, 0, 416, 417,
	418, 0, 0, 419, 420, 575, 1080, 421, 1081, 1061,
	422, 423, 415, 424, 425, 426, 427, 428, 429, 430,
	431, 0, 432, 433, 577, 578, 1062, 434, 580, 435,
	436, 0, 437, 0, 438, 439, 440, 441, 442, 443,
	444, 581, 446, 445, 447, 0, 448, 0, 0, 0,
	0, 0, 449, 0, 451, 452, 453, 450, 454, 455,
	456, 457, 0, 458, 459, 460, 1082, 461, 462, 463,
	464, 582, 1119, 0, 466, 467, 473, 474, 468, 469,
	475, 476, 477, 478, 479, 0, 481, 482, 480, 483,
	484, 485, 1025, 486, 470, 471, 487, 488, 1083, 489,
	490, 491, 492, 493, 494, 583, 0, 495, 0, 496,
	497, 498, 499, 472, 500, 505, 584, 501, 502, 503,
	504, 1063, 0, 507, 508, 0, 506, 0, 509, 510,
	511, 512, 513, 514, 327, 515, 0, 516, 586, 587,
	588, 589, 0, 523, 0, 517, 518, 1064, 519, 1065,
	0, 520, 521, 522, 0, 524, 525, 0, 0, 526,
	527, 528, 530, 531, 529, 532, 1026, 533, 0, 0,
	534, 535, 536, 592, 593, 594, 0, 538, 537, 539,
	595, 0, 950, 0, 1310, 540, 541, 596, 542, 543,
	544, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 250, 251, 252, 253, 254, 0, 255, 256,
	0, 0, 0, 0, 1687, 545, 0, 0, 0, 0,
	257, 258, 260, 259, 261, 262, 263, 264, 546, 547,
	0, 265, 548, 266, 549, 0, 550, 267, 268, 269,
	270, 271, 272, 0, 0, 0, 273, 551, 552, 553,
	0, 274, 275, 554, 0, 1276, 0, 276, 277, 278,
	279, 280, 281, 282, 0, 0, 284, 285, 286, 283,
	0, 287, 0, 288, 289, 290, 291, 292, 293, 0,
	294, 295, 296, 1068, 297, 298, 0, 0, 0, 0,
	0, 0, 0, 299, 300, 301, 302, 0, 303, 555,
	556, 0, 307, 304, 305, 0, 308, 306, 0, 309,
	310, 311, 0, 0, 312, 313, 314, 0, 315, 316,
	0, 317, 318, 319, 0, 320, 321, 557, 322, 323,
	324, 326, 328, 325, 329, 330, 331, 332, 558, 559,
	0, 246, 0, 0, 0, 0, 0, 333, 334, 335,
	560, 0, 0, 0, 336, 0, 337, 0, 0, 1069,
	338, 339, 561, 562, 340, 341, 0, 342, 563, 0,
	564, 343, 0, 344, 345, 346, 347, 348, 565, 566,
	567, 411, 1071, 349, 350, 0, 351, 352, 353, 354,
	0, 0, 0, 0, 355, 356, 358, 0, 1070, 357,
	568, 569, 0, 570, 0, 359, 360, 1072, 571, 1073,
	361, 362, 363, 1074, 364, 0, 0, 0, 365, 366,
	367, 368, 369, 370, 0, 371, 373, 372, 0, 374,
	572, 1075, 375, 376, 1076, 0, 377, 378, 379, 0,
	0, 380, 381, 382, 383, 0, 384, 385, 387, 389,
	386, 388, 393, 390, 391, 392, 395, 0, 394, 1077,
	396, 397, 398, 403, 405, 406, 401, 402, 404, 407,
	400, 1078, 399, 0, 0, 1079, 408, 409, 0, 573,
	410, 574, 412, 413, 0, 0, 414, 0, 0, 0,
	416, 417, 418, 0, 0, 419, 420, 575, 1080, 421,
	1081, 576, 422, 423, 415, 424, 425, 426, 427, 428,
	429, 430, 431, 0, 432, 433, 577, 578, 579, 434,
	580, 435, 436, 0, 437, 0, 438, 439, 440, 441,
	442, 443, 444, 581, 446, 445, 447, 0, 448, 0,
	0, 0, 0, 0, 449, 0, 451, 452, 453, 450,
	454, 455, 456, 457, 0, 458, 459, 460, 1082, 461,
	462, 463, 464, 582, 465, 0, 466, 467, 473, 474,
	468, 469, 475, 476, 477, 478, 479, 210, 481, 482,
	480, 483, 484, 485, 0, 486, 470, 471, 487, 488,
	1083, 489, 490, 491, 492, 493, 494, 583, 0, 495,
	0, 496, 497, 498, 499, 472, 500, 505, 584, 501,
	502, 503, 504, 585, 0, 507, 508, 0, 506, 212,
	509, 510, 511, 512, 513, 514, 327, 515, 0, 516,
	586, 587, 588, 589, 0, 523, 0, 517, 518, 590,
	519, 591, 0, 520, 521, 522, 0, 524, 525, 0,
	0, 526, 527, 528, 530, 531, 529, 532, 0, 533,
	0, 0, 534, 535, 536, 1461, 593, 594, 0, 538,
	537, 539, 595, 0, 0, 0, 204, 540, 541, 596,
	542, 543, 544, 0, 205, 0, 0, 0, 1458, 0,
	1310, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 174, 249, 250, 251,
	252, 253, 254, 0, 255, 256, 0, 0, 0, 0,
	0, 545, 0, 0, 0, 0, 257, 258, 260, 259,
	261, 262, 263, 264, 546, 547, 0, 265, 548, 266,
	549, 0, 550, 267, 268, 269, 270, 271, 272, 0,
	0, 0, 273, 551, 552, 553, 0, 274, 275, 554,
	0, 1276, 0, 276, 277, 278, 279, 280, 281, 282,
	0, 0, 284, 285, 286, 283, 0, 287, 0, 288,
	289, 290, 291, 292, 293, 0, 294, 295, 296, 1068,
	297, 298, 0, 0, 0, 0, 0, 0, 0, 299,
	300, 301, 302, 0, 303, 555, 556, 0, 307, 304,
	305, 0, 308, 306, 0, 309, 310, 311, 0, 0,
	312, 313, 314, 0, 315, 316, 0, 317, 318, 319,
	0, 320, 321, 557, 322, 323, 324, 326, 328, 325,
	329, 330, 331, 332, 558, 559, 0, 246, 0, 0,
	0, 0, 0, 333, 334, 335, 560, 0, 0, 0,
	336, 0, 337, 0, 0, 1069, 338, 339, 561, 562,
	340, 341, 0, 342, 563, 0, 564, 343, 0, 344,
	345, 346, 347, 348, 565, 566, 567, 411, 1071, 349,
	350, 0, 351, 352, 353, 354, 0, 0, 0, 0,
	355, 356, 358, 0, 1070, 357, 568, 569, 0, 570,
	0, 359, 360, 1072, 571, 1073, 361, 362, 363, 1074,
	364, 0, 0, 0, 365, 366, 367, 368, 369, 370,
	0, 371, 373, 372, 0, 374, 572, 1075, 375, 376,
	1076, 0, 377, 378, 379, 0, 0, 380, 381, 382,
	383, 0, 384, 385, 387, 389, 386, 388, 393, 390,
	391, 392, 395, 0, 394, 1077, 396, 397, 398, 403,
	405, 406, 401, 402, 404, 407, 400, 1078, 399, 0,
	0, 1079, 408, 409, 0, 573, 410, 574, 412, 413,
	0, 0, 414, 0, 0, 0, 416, 417, 418, 0,
	0, 419, 420, 575, 1080, 421, 1081, 576, 422, 423,
	415, 424, 425, 426, 427, 428, 429, 430, 431, 0,
	432, 433, 577, 578, 579, 434, 580, 435, 436, 0,
	437, 0, 438, 439, 440, 441, 442, 443, 444, 581,
	446, 445, 447, 0, 448, 0, 0, 0, 0, 0,
	449, 0, 451, 452, 453, 450, 454, 455, 456, 457,
	0, 458, 459, 460, 1082, 461, 462, 463, 464, 582,
	465, 0, 466, 467, 473, 474, 468, 469, 475, 476,
	477, 478, 479, 210, 481, 482, 480, 483, 484, 485,
	0, 486, 470, 471, 487, 488, 1083, 489, 490, 491,
	492, 493, 494, 583, 0, 495, 0, 496, 497, 498,
	499, 472, 500, 505, 584, 501, 502, 503, 504, 585,
	0, 507, 508, 0, 506, 212, 509, 510, 511, 512,
	513, 514, 327, 515, 0, 516, 586, 587, 588, 589,
	0, 523, 0, 517, 518, 590, 519, 591, 0, 520,
	521, 522, 0, 524, 525, 0, 0, 526, 527, 528,
	530, 531, 529, 532, 0, 533, 0, 0, 534, 535,
	536, 1461, 593, 594, 0, 538, 537, 539, 595, 0,
	0, 0, 204, 540, 541, 596, 542, 543, 544, 0,
	205, 0, 0, 0, 0, 0, 1310, 1309, 0, 0,
	0, 0, 1307, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 174, 249, 250, 251, 252, 253, 254, 0,
	255, 256, 0, 0, 0, 0, 0, 545, 0, 0,
	0, 0, 257, 258, 260, 259, 261, 262, 263, 264,
	546, 547, 0, 265, 548, 266, 549, 0, 550, 267,
	268, 269, 270, 271, 272, 0, 0, 0, 273, 551,
	552, 553, 0, 274, 275, 554, 0, 1276, 0, 276,
	277, 278, 279, 280, 281, 282, 0, 0, 284, 285,
	286, 283, 0, 287, 0, 288, 289, 290, 291, 292,
	293, 0, 294, 295, 296, 1068, 297, 298, 0, 0,
	0, 0, 0, 0, 0, 299, 300, 301, 302, 0,
	303, 555, 556, 0, 307, 304, 305, 0, 308, 306,
	0, 309, 310, 311, 0, 0, 312, 313, 314, 0,
	315, 316, 0, 317, 318, 319, 0, 320, 321, 557,
	322, 323, 324, 326, 328, 325, 329, 330, 331, 332,
	558, 559, 0, 246, 0, 0, 0, 0, 0, 333,
	334, 335, 560, 0, 0, 0, 336, 0, 337, 0,
	0, 1069, 338, 339, 561, 562, 340, 341, 0, 342,
	563, 0, 564, 343, 0, 344, 345, 346, 347, 348,
	565, 566, 567, 411, 1071, 349, 350, 0, 351, 352,
	353, 354, 0, 0, 0, 0, 355, 356, 358, 0,
	1070, 357, 568, 569, 0, 570, 0, 359, 360, 1072,
	571, 1073, 361, 362, 363, 1074, 364, 0, 0, 0,
	365, 366, 367, 368, 369, 370, 0, 371, 373, 372,
	0, 374, 572, 1075, 375, 376, 1076, 0, 377, 378,
	379, 0, 0, 380, 381, 382, 383, 0, 384, 385,
	387, 389, 386, 388, 393, 390, 391, 392, 395, 0,
	394, 1077, 396, 397, 398, 403, 405, 406, 401, 402,
	404, 407, 400, 1078, 399, 0, 0, 1079, 408, 409,
	0, 573, 410, 574, 412, 413, 0, 0, 414, 0,
	0, 0, 416, 417, 418, 0, 0, 419, 420, 575,
	1080, 421, 1081, 576, 422, 423, 415, 424, 425, 426,
	427, 428, 429, 430, 431, 0, 432, 433, 577, 578,
	579, 434, 580, 435, 436, 0, 437, 0, 438, 439,
	440, 441, 442, 443, 444, 581, 446, 445, 447, 0,
	448, 0, 0, 0, 0, 0, 449, 0, 451, 452,
	453, 450, 454, 455, 456, 457, 0, 458, 459, 460,
	1082, 461, 462, 463, 464, 582, 465, 0, 466, 467,
	473, 474, 468, 469, 475, 476, 477, 478, 479, 0,
	481, 482, 480, 483, 484, 485, 0, 486, 470, 471,
	487, 488, 1083, 489, 490, 491, 492, 493, 494, 583,
	0, 495, 0, 496, 497, 498, 499, 472, 500, 505,
	584, 501, 502, 503, 504, 585, 0, 507, 508, 0,
	506, 0, 509, 510, 511, 512, 513, 514, 327, 515,
	0, 516, 586, 587, 588, 589, 0, 523, 0, 517,
	518, 590, 519, 591, 0, 520, 521, 522, 0, 524,
	525, 0, 0, 526, 527, 528, 530, 531, 529, 532,
	0, 533, 0, 0, 534, 535, 536, 592, 593, 594,
	0, 538, 537, 539, 595, 0, 0, 0, 0, 540,
	541, 596, 542, 543, 544, 1310, 1309, 0, 0, 0,
	0, 1307, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 250, 251, 252, 253, 254, 1483, 255,
	256, 0, 0, 0, 0, 0, 545, 0, 0, 0,
	0, 257, 258, 260, 259, 261, 262, 263, 264, 546,
	547, 0, 265, 548, 266, 549, 0, 550, 267, 268,
	269, 270, 271, 272, 0, 0, 0, 273, 551, 552,
	553, 0, 274, 275, 554, 0, 1276, 0, 276, 277,
	278, 279, 280, 281, 282, 0, 0, 284, 285, 286,
	283, 0, 287, 0, 288, 289, 290, 291, 292, 293,
	0, 294, 295, 296, 1068, 297, 298, 0, 0, 0,
	0, 0, 0, 0, 299, 300, 301, 302, 0, 303,
	555, 556, 0, 307, 304, 305, 0, 308, 306, 0,
	309, 310, 311, 0, 0, 312, 313, 314, 0, 315,
	316, 0, 317, 318, 319, 0, 320, 321, 557, 322,
	323, 324, 326, 328, 325, 329, 330, 331, 332, 558,
	559, 0, 246, 0, 0, 0, 0, 0, 333, 334,
	335, 560, 0, 0, 0, 336, 0, 337, 0, 0,
	1069, 338, 339, 561, 562, 340, 341, 0, 342, 563,
	0, 564, 343, 0, 344, 345, 346, 347, 348, 565,
	566, 567, 411, 1071, 349, 350, 0, 351, 352, 353,
	354, 0, 0, 0, 0, 355, 356, 358, 0, 1070,
	357, 568, 569, 0, 570, 0, 359, 360, 1072, 571,
	1073, 361, 362, 363, 1074, 364, 0, 0, 0, 365,
	366, 367, 368, 369, 370, 0, 371, 373, 372, 0,
	374, 572, 1075, 375, 376, 1076, 0, 377, 378, 379,
	0, 0, 380, 381, 382, 383, 0, 384, 385, 387,
	389, 386, 388, 393, 390, 391, 392, 395, 0, 394,
	1077, 396, 397, 398, 403, 405, 406, 401, 402, 404,
	407, 400, 1078, 399, 0, 0, 1079, 408, 409, 0,
	573, 410, 574, 412, 413, 0, 0, 414, 0, 0,
	0, 416, 417, 418, 0, 0, 419, 420, 575, 1080,
	421, 1081, 576, 422, 423, 415, 424, 425, 426, 427,
	428, 429, 430, 431, 0, 432, 433, 577, 578, 579,
	434, 580, 435, 436, 0, 437, 0, 438, 439, 440,
	441, 442, 443, 444, 581, 446, 445, 447, 0, 448,
	0, 0, 0, 0, 0, 449, 0, 451, 452, 453,
	450, 454, 455, 456, 457, 0, 458, 459, 460, 1082,
	461, 462, 463, 464, 582, 465, 0, 466, 467, 473,
	474, 468, 469, 475, 476, 477, 478, 479, 0, 481,
	482, 480, 483, 484, 485, 0, 486, 470, 471, 487,
	488, 1083, 489, 490, 491, 492, 493, 494, 583, 0,
	495, 0, 496, 497, 498, 499, 472, 500, 505, 584,
	501, 502, 503, 504, 585, 0, 507, 508, 0, 506,
	0, 509, 510, 511, 512, 513, 514, 327, 515, 0,
	516, 586, 587, 588, 589, 0, 523, 0, 517, 518,
	590, 519, 591, 0, 520, 521, 522, 0, 524, 525,
	0, 0, 526, 527, 528, 530, 531, 529, 532, 0,
	533, 0, 0, 534, 535, 536, 592, 593, 594, 0,
	538, 537, 539, 595, 0, 0, 0, 0, 540, 541,
	596, 542, 543, 544, 1310, 1982, 0, 0, 0, 0,
	1983, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 250, 251, 252, 253, 254, 3198, 255, 256,
	0, 0, 0, 0, 0, 545, 0, 0, 0, 0,
	257, 258, 260, 259, 261, 262, 263, 264, 546, 547,
	0, 265, 548, 266, 549, 0, 550, 267, 268, 269,
	270, 271, 272, 0, 0, 0, 273, 551, 552, 553,
	0, 274, 275, 554, 0, 1276, 0, 276, 277, 278,
	279, 280, 281, 282, 0, 0, 284, 285, 286, 283,
	0, 287, 0, 288, 289, 290, 291, 292, 293, 0,
	294, 295, 296, 1068, 297, 298, 0, 0, 0, 0,
	0, 0, 0, 299, 300, 301, 302, 0, 303, 555,
	556, 0, 307, 304, 305, 0, 308, 306, 0, 309,
	310, 311, 0, 0, 312, 313, 314, 0, 315, 316,
	0, 317, 318, 319, 0, 320, 321, 557, 322, 323,
	324, 326, 328, 325, 329, 330, 331, 332, 558, 559,
	0, 246, 0, 0, 0, 0, 0, 333, 334, 335,
	560, 0, 0, 0, 336, 0, 337, 0, 0, 1069,
	338, 339, 561, 562, 340, 341, 0, 342, 563, 0,
	564, 343, 0, 344, 345, 346, 347, 348, 565, 566,
	567, 411, 1071, 349, 350, 0, 351, 352, 353, 354,
	0, 0, 0, 0, 355, 356, 358, 0, 1070, 357,
	568, 569, 0, 570, 0, 359, 360, 1072, 571, 1073,
	361, 362, 363, 1074, 364, 0, 0, 0, 365, 366,
	367, 368, 369, 370, 0, 1981, 373, 372, 0, 374,
	572, 1075, 375, 376, 1076, 0, 377, 378, 379, 0,
	0, 380, 381, 382, 383, 0, 384, 385, 387, 389,
	386, 388, 393, 390, 391, 392, 395, 0, 394, 1077,
	396, 397, 398, 403, 405, 406, 401, 402, 404, 407,
	400, 1078, 399, 0, 0, 1079, 408, 409, 0, 573,
	410, 574, 412, 413, 0, 0, 414, 0, 0, 0,
	416, 417, 418, 0, 0, 419, 420, 575, 1080, 421,
	1081, 576, 422, 423, 415, 424, 425, 426, 427, 428,
	429, 430, 431, 0, 432, 433, 577, 578, 579, 434,
	580, 435, 436, 0, 437, 0, 438, 439, 440, 441,
	442, 443, 444, 581, 446, 445, 447, 0, 448, 0,
	0, 0, 0, 0, 449, 0, 451, 452, 453, 450,
	454, 455, 456, 457, 0, 458, 459, 460, 1082, 461,
	462, 463, 464, 582, 465, 0, 466, 467, 473, 474,
	468, 469, 475, 476, 477, 478, 479, 0, 481, 482,
	480, 483, 484, 485, 0, 486, 470, 471, 487, 488,
	1083, 489, 490, 491, 492, 493, 494, 583, 0, 495,
	0, 496, 497, 498, 499, 472, 500, 505, 584, 501,
	502, 503, 504, 585, 0, 507, 508, 0, 506, 0,
	509, 510, 511, 512, 513, 514, 327, 515, 0, 516,
	586, 587, 588, 589, 0, 523, 0, 517, 518, 590,
	519, 591, 0, 520, 521, 522, 0, 524, 525, 0,
	0, 526, 527, 528, 530, 531, 529, 532, 0, 533,
	0, 0, 534, 535, 536, 592, 593, 594, 0, 538,
	537, 539, 595, 0, 0, 0, 0, 540, 541, 596,
	542, 543, 544, 1310, 1309, 0, 0, 0, 0, 1307,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	249, 250, 251, 252, 253, 254, 1483, 255, 256, 0,
	0, 0, 0, 0, 545, 0, 0, 0, 0, 257,
	258, 260, 259, 261, 262, 263, 264, 546, 547, 0,
	265, 548, 266, 549, 0, 550, 267, 268, 269, 270,
	271, 272, 0, 0, 0, 273, 551, 552, 553, 0,
	274, 275, 554, 0, 1276, 0, 276, 277, 278, 279,
	280, 281, 282, 0, 0, 284, 285, 286, 283, 0,
	287, 0, 288, 289, 290, 291, 292, 293, 0, 294,
	295, 296, 1068, 297, 298, 0, 0, 0, 0, 0,
	0, 0, 299, 300, 301, 302, 0, 303, 555, 556,
	0, 307, 304, 305, 0, 308, 306, 0, 309, 310,
	311, 0, 0, 312, 313, 314, 0, 315, 316, 0,
	317, 318, 319, 0, 320, 321, 557, 322, 323, 324,
	326, 328, 325, 329, 330, 331, 332, 558, 559, 0,
	246, 0, 0, 0, 0, 0, 333, 334, 335, 560,
	0, 0, 0, 336, 0, 337, 0, 0, 1069, 338,
	339, 561, 562, 340, 341, 0, 342, 563, 0, 564,
	343, 0, 344, 345, 346, 347, 348, 565, 566, 567,
	411, 1071, 349, 350, 0, 351, 352, 353, 354, 0,
	0, 0, 0, 355, 356, 358, 0, 1070, 357, 568,
	569, 0, 570, 0, 359, 360, 1072, 571, 1073, 361,
	362, 363, 1074, 364, 0, 0, 0, 365, 366, 367,
	368, 369, 370, 0, 371, 373, 372, 0, 374, 572,
	1075, 375, 376, 1076, 0, 377, 378, 379, 0, 0,
	380, 381, 382, 383, 0, 384, 385, 387, 389, 386,
	388, 393, 390, 391, 392, 395, 0, 394, 1077, 396,
	397, 398, 403, 405, 406, 401, 402, 404, 407, 400,
	1078, 399, 0, 0, 1079, 408, 409, 0, 573, 410,
	574, 412, 413, 0, 0, 414, 0, 0, 0, 416,
	417, 418, 0, 0, 419, 420, 575, 1080, 421, 1081,
	576, 422, 423, 415, 424, 425, 426, 427, 428, 429,
	430, 431, 0, 432, 433, 577, 578, 579, 434, 580,
	435, 436, 0, 437, 0, 438, 439, 440, 441, 442,
	443, 444, 581, 446, 445, 447, 0, 448, 0, 0,
	0, 0, 0, 449, 0, 451, 452, 453, 450, 454,
	455, 456, 457, 0, 458, 459, 460, 1082, 461, 462,
	463, 464, 582, 465, 0, 466, 467, 473, 474, 468,
	469, 475, 476, 477, 478, 479, 0, 481, 482, 480,
	483, 484, 485, 0, 486, 470, 471, 487, 488, 1083,
	489, 490, 491, 492, 493, 494, 583, 0, 495, 0,
	496, 497, 498, 499, 472, 500, 505, 584, 501, 502,
	503, 504, 585, 0, 507, 508, 0, 506, 0, 509,
	510, 511, 512, 513, 514, 327, 515, 0, 516, 586,
	587, 588, 589, 0, 523, 0, 517, 518, 590, 519,
	591, 0, 520, 521, 522, 0, 524, 525, 0, 0,
	526, 527, 528, 530, 531, 529, 532, 0, 533, 0,
	0, 534, 535, 536, 592, 593, 594, 0, 538, 537,
	539, 595, 1125, 0, 0, 0, 540, 541, 596, 542,
	543, 544, 0, 0, 0, 0, 0, 0, 0, 249,
	250, 251, 252, 253, 254, 0, 255, 256, 0, 0,
	0, 0, 0, 1028, 0, 1467, 0, 0, 257, 258,
	260, 259, 261, 262, 263, 264, 546, 547, 0, 265,
	548, 266, 549, 0, 550, 267, 268, 269, 270, 271,
	272, 0, 1027, 0, 273, 551, 552, 553, 0, 274,
	275, 1034, 0, 1015, 0, 276, 277, 278, 279, 280,
	281, 282, 0, 0, 284, 285, 286, 283, 0, 287,
	0, 288, 289, 290, 291, 292, 293, 0, 294, 295,
	296, 1068, 297, 298, 1018, 1016, 1017, 1024, 1020, 1019,
	1023, 299, 300, 301, 302, 0, 303, 555, 556, 0,
	307, 304, 305, 0, 308, 306, 0, 309, 310, 311,
	0, 0, 312, 313, 314, 0, 315, 316, 0, 317,
	318, 319, 0, 320, 321, 557, 322, 323, 324, 326,
	328, 325, 329, 330, 331, 332, 1059, 1060, 0, 246,
	0, 0, 0, 0, 0, 333, 334, 335, 560, 0,
	0, 0, 336, 0, 337, 0, 0, 1069, 338, 339,
	561, 562, 340, 341, 0, 342, 1066, 0, 564, 343,
	0, 344, 345, 346, 347, 348, 1029, 1030, 1033, 411,
	1071, 349, 350, 0, 351, 352, 353, 354, 0, 0,
	0, 247, 355, 356, 358, 0, 1070, 357, 568, 569,
	0, 570, 0, 359, 360, 1072, 1031, 1073, 361, 362,
	363, 1074, 364, 0, 0, 0, 365, 366, 367, 368,
	369, 370, 0, 371, 373, 372, 0, 374, 1067, 1075,
	375, 376, 1076, 0, 377, 378, 379, 1022, 1021, 380,
	381, 382, 383, 0, 384, 385, 387, 389, 386, 388,
	393, 390, 391, 392, 395, 0, 394, 1077, 396, 397,
	398, 403, 405, 406, 401, 402, 404, 407, 400, 1078,
	399, 0, 248, 1079, 408, 409, 0, 1032, 410, 574,
	412, 413, 0, 0, 414, 0, 0, 0, 416, 417,
	418, 0, 0, 419, 420, 575, 1080, 421, 1081, 1061,
	422, 423, 415, 424, 425, 426, 427, 428, 429, 430,
	431, 0, 432, 433, 577, 578, 1062, 434, 580, 435,
	436, 0, 437, 0, 438, 439, 440, 441, 442, 443,
	444, 581, 446, 445, 447, 0, 448, 0, 0, 0,
	0, 0, 449, 0, 451, 452, 453, 450, 454, 455,
	456, 457, 0, 458, 459, 460, 1082, 461, 462, 463,
	464, 582, 465, 0, 466, 467, 473, 474, 468, 469,
	475, 476, 477, 478, 479, 0, 481, 482, 480, 483,
	484, 485, 1025, 486, 470, 471, 487, 488, 1083, 489,
	490, 491, 492, 493, 494, 583, 0, 495, 0, 496,
	497, 498, 499, 472, 500, 505, 584, 501, 502, 503,
	504, 1063, 0, 507, 508, 0, 506, 0, 509, 510,
	511, 512, 513, 514, 327, 515, 0, 516, 586, 587,
	588, 589, 0, 523, 0, 517, 518, 1064, 519, 1065,
	0, 520, 521, 522, 0, 524, 525, 0, 0, 526,
	527, 528, 530, 531, 529, 532, 1026, 533, 0, 0,
	534, 535, 536, 592, 593, 594, 0, 538, 537, 539,
	595, 950, 0, 243, 0, 540, 541, 596, 542, 543,
	544, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	249, 250, 251, 252, 253, 254, 0, 255, 256, 0,
	0, 0, 0, 0, 545, 0, 0, 0, 0, 257,
	258, 260, 259, 261, 262, 263, 264, 546, 547, 0,
	265, 548, 266, 549, 0, 550, 267, 268, 269, 270,
	271, 272, 0, 0, 0, 273, 551, 552, 553, 0,
	274, 275, 554, 0, 0, 0, 276, 277, 278, 279,
	280, 281, 282, 0, 0, 284, 285, 286, 283, 0,
	287, 0, 288, 289, 290, 291, 292, 293, 0, 294,
	295, 296, 0, 297, 298, 0, 0, 0, 0, 0,
	0, 0, 299, 300, 301, 302, 0, 303, 555, 556,
	0, 307, 304, 305, 0, 308, 306, 0, 309, 310,
	311, 0, 0, 312, 313, 314, 0, 315, 316, 0,
	317, 318, 319, 0, 320, 321, 557, 322, 323, 324,
	326, 328, 325, 329, 330, 331, 332, 558, 559, 0,
	0, 0, 0, 0, 0, 0, 333, 334, 335, 560,
	0, 0, 0, 336, 0, 337, 0, 0, 0, 338,
	339, 561, 562, 340, 341, 0, 342, 563, 0, 564,
	343, 0, 344, 345, 346, 347, 348, 565, 566, 567,
	411, 0, 349, 350, 0, 351, 352, 353, 354, 0,
	0, 0, 0, 355, 356, 358, 0, 0, 357, 568,
	569, 0, 570, 0, 359, 360, 0, 571, 0, 361,
	362, 363, 0, 364, 0, 0, 0, 365, 366, 367,
	368, 369, 370, 0, 371, 373, 372, 0, 374, 572,
	0, 375, 376, 0, 0, 377, 378, 379, 0, 0,
	380, 381, 382, 383, 0, 384, 385, 387, 389, 386,
	388, 393, 390, 391, 392, 395, 0, 394, 0, 396,
	397, 398, 403, 405, 406, 401, 402, 404, 407, 400,
	0, 399, 0, 0, 0, 408, 409, 0, 573, 410,
	574, 412, 413, 0, 0, 414, 0, 0, 0, 416,
	417, 418, 0, 0, 419, 420, 575, 0, 421, 0,
	576, 422, 423, 415, 424, 425, 426, 427, 428, 429,
	430, 431, 0, 432, 433, 577, 578, 579, 434, 580,
	435, 436, 0, 437, 0, 438, 439, 440, 441, 442,
	443, 444, 581, 446, 445, 447, 0, 448, 0, 0,
	0, 0, 0, 449, 0, 451, 452, 453, 450, 454,
	455, 456, 457, 0, 458, 459, 460, 0, 461, 462,
	463, 464, 582, 465, 0, 466, 467, 473, 474, 468,
	469, 475, 476, 477, 478, 479, 210, 481, 482, 480,
	483, 484, 485, 0, 486, 470, 471, 487, 488, 0,
	489, 490, 491, 492, 493, 494, 583, 0, 495, 0,
	496, 497, 498, 499, 472, 500, 505, 584, 501, 502,
	503, 504, 585, 0, 507, 508, 0, 506, 212, 509,
	510, 511, 512, 513, 514, 327, 515, 0, 516, 586,
	587, 588, 589, 0, 523, 0, 517, 518, 590, 519,
	591, 0, 520, 521, 522, 0, 524, 525, 0, 0,
	526, 527, 528, 530, 531, 529, 532, 0, 533, 0,
	0, 534, 535, 536, 1461, 593, 594, 0, 538, 537,
	539, 595, 243, 0, 0, 204, 540, 541, 596, 542,
	543, 544, 0, 205, 0, 0, 0, 0, 0, 249,
	250, 251, 252, 253, 254, 0, 255, 256, 0, 0,
	0, 0, 0, 545, 0, 174, 0, 0, 257, 258,
	260, 259, 261, 262, 263, 264, 546, 547, 0, 265,
	548, 266, 549, 0, 550, 267, 268, 269, 270, 271,
	272, 0, 0, 0, 273, 551, 552, 553, 0, 274,
	275, 554, 0, 0, 0, 276, 277, 278, 279, 280,
	281, 282, 0, 0, 284, 285, 286, 283, 0, 287,
	0, 288, 289, 290, 291, 292, 293, 0, 294, 295,
	296, 0, 297, 298, 0, 0, 0, 0, 0, 0,
	0, 299, 300, 301, 302, 0, 303, 555, 556, 0,
	307, 304, 305, 0, 308, 306, 0, 309, 310, 311,
	0, 0, 312, 313, 314, 0, 315, 316, 0, 317,
	318, 319, 0, 320, 321, 557, 322, 323, 324, 326,
	328, 325, 329, 330, 331, 332, 558, 559, 0, 246,
	0, 0, 0, 0, 0, 333, 334, 335, 560, 0,
	0, 0, 336, 0, 337, 0, 0, 0, 338, 339,
	561, 562, 340, 341, 0, 342, 563, 0, 564, 343,
	0, 344, 345, 346, 347, 348, 565, 566, 567, 411,
	0, 349, 350, 0, 351, 352, 353, 354, 0, 0,
	0, 247, 355, 356, 358, 0, 0, 357, 568, 569,
	0, 570, 0, 359, 360, 0, 571, 0, 361, 362,
	363, 0, 364, 0, 0, 0, 365, 366, 367, 368,
	369, 370, 0, 371, 373, 372, 0, 374, 572, 0,
	375, 376, 0, 0, 377, 378, 379, 0, 0, 380,
	381, 382, 383, 0, 384, 385, 387, 389, 386, 388,
	393, 390, 391, 392, 395, 0, 394, 0, 396, 397,
	398, 403, 405, 406, 401, 402, 404, 407, 400, 0,
	399, 0, 248, 0, 408, 409, 0, 573, 410, 574,
	412, 413, 0, 0, 414, 0, 0, 0, 416, 417,
	418, 0, 0, 419, 420, 575, 0, 421, 0, 576,
	422, 423, 415, 424, 425, 426, 427, 428, 429, 430,
	431, 0, 432, 433, 577, 578, 579, 434, 580, 435,
	436, 0, 437, 0, 438, 439, 440, 441, 442, 443,
	444, 581, 446, 445, 447, 0, 448, 0, 0, 0,
	0, 0, 449, 0, 451, 452, 453, 450, 454, 455,
	456, 457, 0, 458, 459, 460, 0, 461, 462, 463,
	464, 582, 465, 0, 466, 467, 473, 474, 468, 469,
	475, 476, 477, 478, 479, 0, 481, 482, 480, 483,
	484, 485, 0, 486, 470, 471, 487, 488, 0, 489,
	490, 491, 492, 493, 494, 583, 0, 495, 0, 496,
	497, 498, 499, 472, 500, 505, 584, 501, 502, 503,
	504, 585, 0, 507, 508, 0, 506, 0, 509, 510,
	511, 512, 513, 514, 327, 515, 0, 516, 586, 587,
	588, 589, 0, 523, 0, 517, 518, 590, 519, 591,
	0, 520, 521, 522, 0, 524, 525, 0, 0, 526,
	527, 528, 530, 531, 529, 532, 0, 533, 0, 0,
	534, 535, 536, 592, 593, 594, 0, 538, 537, 539,
	595, 0, 1401, 0, 243, 540, 541, 596, 542, 543,
	544, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 250, 251, 252, 253, 254, 0, 255, 256,
	0, 0, 0, 0, 1802, 545, 0, 0, 0, 0,
	257, 258, 260, 259, 261, 262, 263, 264, 546, 547,
	0, 265, 548, 266, 549, 0, 550, 267, 268, 269,
	270, 271, 272, 0, 0, 0, 273, 551, 552, 553,
	0, 274, 275, 554, 0, 0, 0, 276, 277, 278,
	279, 280, 281, 282, 0, 0, 284, 285, 286, 283,
	0, 287, 0, 288, 289, 290, 291, 292, 293, 0,
	294, 295, 296, 0, 297, 298, 0, 0, 0, 0,
	0, 0, 0, 299, 300, 301, 302, 0, 303, 555,
	556, 0, 307, 304, 305, 0, 308, 306, 0, 309,
	310, 311, 0, 0, 312, 313, 314, 0, 315, 316,
	0, 317, 318, 319, 0, 320, 321, 557, 322, 323,
	324, 326, 328, 325, 329, 330, 331, 332, 558, 559,
	0, 246, 0, 0, 0, 0, 0, 333, 334, 335,
	560, 0, 0, 0, 336, 0, 337, 0, 0, 0,
	338, 339, 561, 562, 340, 341, 0, 342, 563, 0,
	564, 343, 0, 344, 345, 346, 347, 348, 565, 566,
	567, 411, 0, 349, 350, 0, 351, 352, 353, 354,
	0, 0, 0, 247, 355, 356, 358, 0, 0, 357,
	568, 569, 0, 570, 0, 359, 360, 0, 571, 0,
	361, 362, 363, 0, 364, 0, 0, 0, 365, 366,
	367, 368, 369, 370, 0, 371, 373, 372, 0, 374,
	572, 0, 375, 376, 0, 0, 377, 378, 379, 0,
	0, 380, 381, 382, 383, 0, 384, 385, 387, 389,
	386, 388, 393, 390, 391, 392, 395, 0, 394, 0,
	396, 397, 398, 403, 405, 406, 401, 402, 404, 407,
	400, 0, 399, 0, 248, 0, 408, 409, 0, 573,
	410, 574, 412, 413, 0, 0, 414, 0, 0, 0,
	416, 417, 418, 0, 0, 419, 420, 575, 0, 421,
	0, 576, 422, 423, 415, 424, 425, 426, 427, 428,
	429, 430, 431, 0, 432, 433, 577, 578, 579, 434,
	580, 435, 436, 0, 437, 0, 438, 439, 440, 441,
	442, 443, 444, 581, 446, 445, 447, 0, 448, 0,
	0, 0, 0, 0, 449, 0, 451, 452, 453, 450,
	454, 455, 456, 457, 0, 458, 459, 460, 0, 461,
	462, 463, 464, 582, 465, 0, 466, 467, 473, 474,
	468, 469, 475, 476, 477, 478, 479, 0, 481, 482,
	480, 483, 484, 485, 0, 486, 470, 471, 487, 488,
	0, 489, 490, 491, 492, 493, 494, 583, 0, 495,
	0, 496, 497, 498, 499, 472, 500, 505, 584, 501,
	502, 503, 504, 585, 0, 507, 508, 0, 506, 0,
	509, 510, 511, 512, 513, 514, 327, 515, 0, 516,
	586, 587, 588, 589, 0, 523, 0, 517, 518, 590,
	519, 591, 0, 520, 521, 522, 0, 524, 525, 0,
	0, 526, 527, 528, 530, 531, 529, 532, 0, 533,
	0, 0, 534, 535, 536, 592, 593, 594, 0, 538,
	537, 539, 595, 0, 243, 2709, 0, 540, 541, 596,
	542, 543, 544, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 250, 251, 252, 253, 254, 0, 255, 256,
	0, 0, 0, 0, 1405, 545, 0, 0, 0, 0,
	257, 258, 260, 259, 261, 262, 263, 264, 546, 547,
	0, 265, 548, 266, 549, 0, 550, 267, 268, 269,
	270, 271, 272, 0, 0, 0, 273, 551, 552, 553,
	0, 274, 275, 554, 0, 0, 0, 276, 277, 278,
	279, 280, 281, 282, 0, 0, 284, 285, 286, 283,
	0, 287, 0, 288, 289, 290, 291, 292, 293, 0,
	294, 295, 296, 0, 297, 298, 0, 0, 0, 0,
	0, 0, 0, 299, 300, 301, 302, 0, 303, 555,
	556, 0, 307, 304, 305, 0, 308, 306, 0, 309,
	310, 311, 0, 0, 312, 313, 314, 0, 315, 316,
	0, 317, 318, 319, 0, 320, 321, 557, 322, 323,
	324, 326, 328, 325, 329, 330, 331, 332, 558, 559,
	0, 0, 0, 0, 0, 0, 0, 333, 334, 335,
	560, 0, 0, 0, 336, 0, 337, 0, 0, 0,
	338, 339, 561, 562, 340, 341, 0, 342, 563, 0,
	564, 343, 0, 344, 345, 346, 347, 348, 565, 566,
	567, 411, 0, 349, 350, 0, 351, 352, 353, 354,
	0, 0, 0, 0, 355, 356, 358, 0, 0, 357,
	568, 569, 0, 570, 0, 359, 360, 0, 571, 0,
	361, 362, 363, 0, 364, 0, 0, 0, 365, 366,
	367, 368, 369, 370, 0, 371, 373, 372, 0, 374,
	572, 0, 375, 376, 0, 0, 377, 378, 379, 0,
	0, 380, 381, 382, 383, 0, 384, 385, 387, 389,
	386, 388, 393, 390, 391, 392, 395, 0, 394, 0,
	396, 397, 398, 403, 405, 406, 401, 402, 404, 407,
	400, 0, 399, 0, 0, 0, 408, 409, 0, 573,
	410, 574, 412, 413, 0, 0, 414, 0, 0, 0,
	416, 417, 418, 0, 0, 419, 420, 575, 0, 421,
	0, 576, 422, 423, 415, 424, 425, 426, 427, 428,
	429, 430, 431, 0, 432, 433, 577, 578, 579, 434,
	580, 435, 436, 0, 437, 0, 438, 439, 440, 441,
	442, 443, 444, 581, 446, 445, 447, 0, 448, 0,
	0, 0, 0, 0, 449, 0, 451, 452, 453, 450,
	454, 455, 456, 457, 0, 458, 459, 460, 0, 461,
	462, 463, 464, 582, 465, 0, 466, 467, 473, 474,
	468, 469, 475, 476, 477, 478, 479, 0, 481, 482,
	480, 483, 484, 485, 0, 486, 470, 471, 487, 488,
	0, 489, 490, 491, 492, 493, 494, 583, 0, 495,
	0, 496, 497, 498, 499, 472, 500, 505, 584, 501,
	502, 503, 504, 585, 0, 507, 508, 0, 506, 0,
	509, 510, 511, 512, 513, 514, 327, 515, 0, 516,
	586, 587, 588, 589, 0, 523, 0, 517, 518, 590,
	519, 591, 0, 520, 521, 522, 0, 524, 525, 0,
	0, 526, 527, 528, 530, 531, 529, 532, 0, 533,
	0, 0, 534, 535, 536, 592, 593, 594, 0, 538,
	537, 539, 595, 243, 0, 0, 0, 540, 541, 596,
	542, 543, 544, 0, 0, 0, 0, 0, 0, 0,
	249, 250, 251, 252, 253, 254, 0, 255, 256, 0,
	0, 0, 0, 0, 545, 0, 4258, 0, 0, 257,
	258, 260, 259, 261, 262, 263, 264, 546, 547, 0,
	265, 548, 266, 549, 0, 550, 267, 268, 269, 270,
	271, 272, 0, 0, 0, 273, 551, 552, 553, 0,
	274, 275, 554, 0, 0, 0, 276, 277, 278, 279,
	280, 281, 282, 0, 0, 284, 285, 286, 283, 0,
	287, 0, 288, 289, 290, 291, 292, 293, 0, 294,
	295, 296, 0, 297, 298, 0, 0, 0, 0, 0,
	0, 0, 299, 300, 301, 302, 0, 303, 555, 556,
	0, 307, 304, 305, 0, 308, 306, 0, 309, 310,
	311, 0, 0, 312, 313, 314, 0, 315, 316, 0,
	317, 318, 319, 0, 320, 321, 557, 322, 323, 324,
	326, 328, 325, 329, 330, 331, 332, 558, 559, 0,
	246, 0, 0, 0, 0, 0, 333, 334, 335, 560,
	0, 0, 0, 336, 0, 337, 0, 0, 0, 338,
	339, 561, 562, 340, 341, 0, 342, 563, 0, 564,
	343, 0, 344, 345, 346, 347, 348, 565, 566, 567,
	411, 0, 349, 350, 0, 351, 352, 353, 354, 0,
	0, 0, 247, 355, 356, 358, 0, 0, 357, 568,
	569, 0, 570, 0, 359, 360, 0, 571, 0, 361,
	362, 363, 0, 364, 0, 0, 0, 365, 366, 367,
	368, 369, 370, 0, 371, 373, 372, 0, 374, 572,
	0, 375, 376, 0, 0, 377, 378, 379, 0, 0,
	380, 381, 382, 383, 0, 384, 385, 387, 389, 386,
	388, 393, 390, 391, 392, 395, 0, 394, 0, 396,
	397, 398, 403, 405, 406, 401, 402, 404, 407, 400,
	0, 399, 0, 248, 0, 408, 409, 0, 573, 410,
	574, 412, 413, 0, 0, 414, 0, 0, 0, 416,
	417, 418, 0, 0, 419, 420, 575, 0, 421, 0,
	576, 422, 423, 415, 424, 425, 426, 427, 428, 429,
	430, 431, 0, 432, 433, 577, 578, 579, 434, 580,
	435, 436, 0, 437, 0, 438, 439, 440, 441, 442,
	443, 444, 581, 446, 445, 447, 0, 448, 0, 0,
	0, 0, 0, 449, 0, 451, 452, 453, 450, 454,
	455, 456, 457, 0, 458, 459, 460, 0, 461, 462,
	463, 464, 582, 465, 0, 466, 467, 473, 474, 468,
	469, 475, 476, 477, 478, 479, 0, 481, 482, 480,
	483, 484, 485, 0, 486, 470, 471, 487, 488, 0,
	489, 490, 491, 492, 493, 494, 583, 0, 495, 0,
	496, 497, 498, 499, 472, 500, 505, 584, 501, 502,
	503, 504, 585, 0, 507, 508, 0, 506, 0, 509,
	510, 511, 512, 513, 514, 327, 515, 0, 516, 586,
	587, 588, 589, 0, 523, 0, 517, 518, 590, 519,
	591, 0, 520, 521, 522, 0, 524, 525, 0, 0,
	526, 527, 528, 530, 531, 529, 532, 0, 533, 0,
	0, 534, 535, 536, 592, 593, 594, 0, 538, 537,
	539, 595, 0, 243, 0, 0, 540, 541, 596, 542,
	543, 544, 0, 0, 0, 0, 0, 0, 0, 0,
	249, 250, 251, 252, 253, 254, 0, 255, 256, 0,
	0, 0, 0, 3142, 545, 0, 0, 0, 0, 257,
	258, 260, 259, 261, 262, 263, 264, 546, 547, 0,
	265, 548, 266, 549, 0, 550, 267, 268, 269, 270,
	271, 272, 0, 0, 0, 273, 551, 552, 553, 0,
	274, 275, 554, 0, 0, 0, 276, 277, 278, 279,
	280, 281, 282, 0, 0, 284, 285, 286, 283, 0,
	287, 0, 288, 289, 290, 291, 292, 293, 0, 294,
	295, 296, 0, 297, 298, 0, 0, 0, 0, 0,
	0, 0, 299, 300, 301, 302, 0, 303, 555, 556,
	0, 307, 304, 305, 0, 308, 306, 0, 309, 310,
	311, 0, 0, 312, 313, 314, 0, 315, 316, 0,
	317, 318, 319, 0, 320, 321, 557, 322, 323, 324,
	326, 328, 325, 329, 330, 331, 332, 558, 559, 0,
	246, 0, 0, 0, 0, 0, 333, 334, 335, 560,
	0, 0, 0, 336, 0, 337, 0, 0, 0, 338,
	339, 561, 562, 340, 341, 0, 342, 563, 0, 564,
	343, 0, 344, 345, 346, 347, 348, 565, 566, 567,
	411, 0, 349, 350, 0, 351, 352, 353, 354, 0,
	0, 0, 247, 355, 356, 358, 0, 0, 357, 568,
	569, 0, 570, 0, 359, 360, 0, 571, 0, 361,
	362, 363, 0, 364, 0, 0, 0, 365, 366, 367,
	368, 369, 370, 0, 371, 373, 372, 0, 374, 572,
	0, 375, 376, 0, 0, 377, 378, 379, 0, 0,
	380, 381, 382, 383, 0, 384, 385, 387, 389, 386,
	388, 393, 390, 391, 392, 395, 0, 394, 0, 396,
	397, 398, 403, 405, 406, 401, 402, 404, 407, 400,
	0, 399, 0, 248, 0, 408, 409, 0, 573, 410,
	574, 412, 413, 0, 0, 414, 0, 0, 0, 416,
	417, 418, 0, 0, 419, 420, 575, 0, 421, 0,
	576, 422, 423, 415, 424, 425, 426, 427, 428, 429,
	430, 431, 0, 432, 433, 577, 578, 579, 434, 580,
	435, 436, 0, 437, 0, 438, 439, 440, 441, 442,
	443, 444, 581, 446, 445, 447, 0, 448, 0, 0,
	0, 0, 0, 449, 0, 451, 452, 453, 450, 454,
	455, 456, 457, 0, 458, 459, 460, 0, 461, 462,
	463, 464, 582, 465, 0, 466, 467, 473, 474, 468,
	469, 475, 476, 477, 478, 479, 0, 481, 482, 480,
	483, 484, 485, 0, 486, 470, 471, 487, 488, 0,
	489, 490, 491, 492, 493, 494, 583, 0, 495, 0,
	496, 497, 498, 499, 472, 500, 505, 584, 501, 502,
	503, 504, 585, 0, 507, 508, 0, 506, 0, 509,
	510, 511, 512, 513, 514, 327, 515, 0, 516, 586,
	587, 588, 589, 0, 523, 0, 517, 518, 590, 519,
	591, 0, 520, 521, 522, 0, 524, 525, 0, 0,
	526, 527, 528, 530, 531, 529, 532, 0, 533, 0,
	0, 534, 535, 536, 592, 593, 594, 0, 538, 537,
	539, 595, 0, 243, 0, 0, 540, 541, 596, 542,
	543, 544, 0, 0, 0, 0, 0, 0, 0, 0,
	249, 250, 251, 252, 253, 254, 0, 255, 256, 0,
	0, 0, 0, 1405, 545, 0, 0, 0, 0, 257,
	258, 260, 259, 261, 262, 263, 264, 546, 547, 0,
	265, 548, 266, 549, 0, 550, 267, 268, 269, 270,
	271, 272, 0, 0, 0, 273, 551, 552, 553, 0,
	274, 275, 554, 0, 0, 0, 276, 277, 278, 279,
	280, 281, 282, 0, 0, 284, 285, 286, 283, 0,
	287, 0, 288, 289, 290, 291, 292, 293, 0, 294,
	295, 296, 0, 297, 298, 0, 0, 0, 0, 0,
	0, 0, 299, 300, 301, 302, 0, 303, 555, 556,
	0, 307, 304, 305, 0, 308, 306, 0, 309, 310,
	311, 0, 0, 312, 313, 314, 0, 315, 316, 0,
	317, 318, 319, 0, 320, 321, 557, 322, 323, 324,
	326, 328, 325, 329, 330, 331, 332, 558, 559, 0,
	0, 0, 0, 0, 0, 0, 333, 334, 335, 560,
	0, 0, 0, 336, 0, 337, 0, 0, 0, 338,
	339, 561, 562, 340, 341, 0, 342, 563, 0, 564,
	343, 0, 344, 345, 346, 347, 348, 565, 566, 567,
	411, 0, 349, 350, 0, 351, 352, 353, 354, 0,
	0, 0, 0, 355, 356, 358, 0, 0, 357, 568,
	569, 0, 570, 0, 359, 360, 0, 571, 0, 361,
	362, 363, 0, 364, 0, 0, 0, 365, 366, 367,
	368, 369, 370, 0, 371, 373, 372, 0, 374, 572,
	0, 375, 376, 0, 0, 377, 378, 379, 0, 0,
	380, 381, 382, 383, 0, 384, 385, 387, 389, 386,
	388, 393, 390, 391, 392, 395, 0, 394, 0, 396,
	397, 398, 403, 405, 406, 401, 402, 404, 407, 400,
	0, 399, 0, 0, 0, 408, 409, 0, 573, 410,
	574, 412, 413, 0, 0, 414, 0, 0, 0, 416,
	417, 418, 0, 0, 419, 420, 575, 0, 421, 0,
	576, 422, 423, 415, 424, 425, 426, 427, 428, 429,
	430, 431, 0, 432, 433, 577, 578, 579, 434, 580,
	435, 436, 0, 437, 0, 438, 439, 440, 441, 442,
	443, 444, 581, 446, 445, 447, 0, 448, 0, 0,
	0, 0, 0, 449, 0, 451, 452, 453, 450, 454,
	455, 456, 457, 0, 458, 459, 460, 0, 461, 462,
	463, 464, 582, 465, 0, 466, 467, 473, 474, 468,
	469, 475, 476, 477, 478, 479, 0, 481, 482, 480,
	483, 484, 485, 0, 486, 470, 471, 487, 488, 0,
	489, 490, 491, 492, 493, 494, 583, 0, 495, 0,
	496, 497, 498, 499, 472, 500, 505, 584, 501, 502,
	503, 504, 585, 0, 507, 508, 0, 506, 0, 509,
	510, 511, 512, 513, 514, 327, 515, 0, 516, 586,
	587, 588, 589, 0, 523, 0, 517, 518, 590, 519,
	591, 0, 520, 521, 522, 0, 524, 525, 0, 0,
	526, 527, 528, 530, 531, 529, 532, 0, 533, 0,
	0, 534, 535, 536, 592, 593, 594, 0, 538, 537,
	539, 595, 243, 0, 0, 0, 540, 541, 596, 542,
	543, 544, 0, 0, 0, 0, 0, 0, 0, 249,
	250, 251, 252, 253, 254, 0, 255, 256, 0, 0,
	0, 0, 0, 545, 0, 2680, 0, 0, 257, 258,
	260, 259, 261, 262, 263, 264, 546, 547, 0, 265,
	548, 266, 549, 0, 550, 267, 268, 269, 270, 271,
	272, 0, 0, 0, 273, 551, 552, 553, 0, 274,
	275, 554, 0, 0, 0, 276, 277, 278, 279, 280,
	281, 282, 0, 0, 284, 285, 286, 283, 0, 287,
	0, 288, 289, 290, 291, 292, 293, 0, 294, 295,
	296, 0, 297, 298, 0, 0, 0, 0, 0, 0,
	0, 299, 300, 301, 302, 0, 303, 555, 556, 0,
	307, 304, 305, 0, 308, 306, 0, 309, 310, 311,
	0, 0, 312, 313, 314, 0, 315, 316, 0, 317,
	318, 319, 0, 320, 321, 557, 322, 323, 324, 326,
	328, 325, 329, 330, 331, 332, 558, 559, 0, 0,
	0, 0, 0, 0, 0, 333, 334, 335, 560, 0,
	0, 0, 336, 0, 337, 0, 0, 0, 338, 339,
	561, 562, 340, 341, 0, 342, 563, 0, 564, 343,
	0, 344, 345, 346, 347, 348, 565, 566, 567, 411,
	0, 349, 350, 0, 351, 352, 353, 354, 0, 0,
	0, 0, 355, 356, 358, 0, 0, 357, 568, 569,
	0, 570, 0, 359, 360, 0, 571, 0, 361, 362,
	363, 0, 364, 0, 0, 0, 365, 366, 367, 368,
	369, 370, 0, 371, 373, 372, 0, 374, 572, 0,
	375, 376, 0, 0, 377, 378, 379, 0, 0, 380,
	381, 382, 383, 0, 384, 385, 387, 389, 386, 388,
	393, 390, 391, 392, 395, 0, 394, 0, 396, 397,
	398, 403, 405, 406, 401, 402, 404, 407, 400, 0,
	399, 0, 0, 0, 408, 409, 0, 573, 410, 574,
	412, 413, 0, 0, 414, 0, 0, 0, 416, 417,
	418, 0, 0, 419, 420, 575, 0, 421, 0, 576,
	422, 423, 415, 424, 425, 426, 427, 428, 429, 430,
	431, 0, 432, 433, 577, 578, 579, 434, 580, 435,
	436, 0, 437, 0, 438, 439, 440, 441, 442, 443,
	444, 581, 446, 445, 447, 0, 448, 0, 0, 0,
	0, 0, 449, 0, 451, 452, 453, 450, 454, 455,
	456, 457, 0, 458, 459, 460, 0, 461, 462, 463,
	464, 582, 465, 0, 466, 467, 473, 474, 468, 469,
	475, 476, 477, 478, 479, 0, 481, 482, 480, 483,
	484, 485, 0, 486, 470, 471, 487, 488, 0, 489,
	490, 491, 492, 493, 494, 583, 0, 495, 0, 496,
	497, 498, 499, 472, 500, 505, 584, 501, 502, 503,
	504, 585, 0, 507, 508, 0, 506, 0, 509, 510,
	511, 512, 513, 514, 327, 515, 0, 516, 586, 587,
	588, 589, 0, 523, 0, 517, 518, 590, 519, 591,
	0, 520, 521, 522, 0, 524, 525, 0, 0, 526,
	527, 528, 530, 531, 529, 532, 0, 533, 0, 0,
	534, 535, 536, 592, 593, 594, 0, 538, 537, 539,
	595, 243, 0, 0, 0, 540, 541, 596, 542, 543,
	544, 0, 0, 0, 0, 0, 0, 0, 249, 250,
	251, 252, 253, 254, 0, 255, 256, 0, 0, 0,
	0, 0, 545, 0, 3299, 0, 0, 257, 258, 260,
	259, 261, 262, 263, 264, 546, 547, 0, 265, 548,
	266, 549, 0, 550, 267, 268, 269, 270, 271, 272,
	0, 0, 0, 273, 551, 552, 553, 0, 274, 275,
	554, 0, 0, 0, 276, 277, 278, 279, 280, 281,
	282, 0, 0, 284, 285, 286, 283, 0, 287, 0,
	288, 289, 290, 291, 292, 293, 0, 294, 295, 296,
	0, 297, 298, 0, 0, 0, 0, 0, 0, 0,
	299, 300, 301, 302, 0, 303, 555, 556, 0, 307,
	304, 305, 0, 308, 306, 0, 309, 310, 311, 0,
	0, 312, 313, 314, 0, 315, 316, 0, 317, 318,
	319, 0, 320, 321, 557, 322, 323, 324, 326, 328,
	325, 329, 330, 331, 332, 558, 559, 0, 0, 0,
	0, 0, 0, 0, 333, 334, 335, 560, 0, 0,
	0, 336, 0, 337, 0, 0, 0, 338, 339, 561,
	562, 340, 341, 0, 342, 563, 0, 564, 343, 0,
	344, 345, 346, 347, 348, 565, 566, 567, 411, 0,
	349, 350, 0, 351, 352, 353, 354, 0, 0, 0,
	0, 355, 356, 358, 0, 0, 357, 568, 569, 0,
	570, 0, 359, 360, 0, 571, 0, 361, 362, 363,
	0, 364, 0, 0, 0, 365, 366, 367, 368, 369,
	370, 0, 371, 373, 372, 0, 374, 572, 0, 375,
	376, 0, 0, 377, 378, 379, 0, 0, 380, 381,
	382, 383, 0, 384, 385, 387, 389, 386, 388, 393,
	390, 391, 392, 395, 0, 394, 0, 396, 397, 398,
	403, 405, 406, 401, 402, 404, 407, 400, 0, 399,
	0, 0, 0, 408, 409, 0, 573, 410, 574, 412,
	413, 0, 0, 414, 0, 0, 0, 416, 417, 418,
	0, 0, 419, 420, 575, 0, 421, 0, 576, 422,
	423, 415, 424, 425, 426, 427, 428, 429, 430, 431,
	0, 432, 433, 577, 578, 579, 434, 580, 435, 436,
	0, 437, 0, 438, 439, 440, 441, 442, 443, 444,
	581, 446, 445, 447, 0, 448, 0, 0, 0, 0,
	0, 449, 0, 451, 452, 453, 450, 454, 455, 456,
	457, 0, 458, 459, 460, 0, 461, 462, 463, 464,
	582, 465, 0, 466, 467, 473, 474, 468, 469, 475,
	476, 477, 478, 479, 0, 481, 482, 480, 483, 484,
	485, 0, 486, 470, 471, 487, 488, 0, 489, 490,
	491, 492, 493, 494, 583, 0, 495, 0, 496, 497,
	498, 499, 472, 500, 505, 584, 501, 502, 503, 504,
	585, 0, 507, 508, 0, 506, 0, 509, 510, 511,
	512, 513, 514, 327, 515, 0, 516, 586, 587, 588,
	589, 0, 523, 0, 517, 518, 590, 519, 591, 0,
	520, 521, 522, 0, 524, 525, 0, 0, 526, 527,
	528, 530, 531, 529, 532, 0, 533, 0, 0, 534,
	535, 536, 592, 593, 594, 0, 538, 537, 539, 595,
	0, 799, 0, 682, 540, 541, 596, 542, 543, 544,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	249, 250, 251, 252, 253, 254, 0, 255, 256, 0,
	0, 0, 0, 2084, 545, 0, 0, 0, 0, 257,
	258, 260, 259, 261, 262, 263, 264, 546, 547, 0,
	265, 548, 266, 549, 0, 550, 267, 268, 269, 270,
	271, 272, 0, 0, 0, 273, 551, 552, 553, 0,
	274, 275, 554, 0, 0, 0, 276, 277, 278, 279,
	280, 281, 282, 0, 0, 284, 285, 286, 283, 0,
	287, 0, 288, 289, 290, 291, 292, 293, 0, 294,
	295, 296, 0, 297, 298, 0, 0, 0, 0, 0,
	0, 0, 299, 300, 689, 302, 0, 303, 555, 556,
	0, 307, 304, 305, 0, 308, 306, 0, 309, 310,
	311, 0, 0, 312, 313, 314, 0, 315, 316, 0,
	317, 318, 319, 0, 320, 321, 557, 322, 323, 324,
	326, 328, 325, 329, 330, 331, 332, 558, 559, 0,
	246, 0, 0, 0, 0, 0, 333, 334, 335, 560,
	0, 0, 0, 336, 0, 337, 0, 797, 0, 338,
	339, 561, 562, 340, 341, 0, 342, 563, 0, 564,
	343, 0, 344, 345, 346, 347, 348, 565, 566, 567,
	411, 0, 349, 350, 0, 351, 352, 353, 354, 0,
	0, 0, 247, 355, 356, 358, 0, 0, 357, 568,
	569, 0, 570, 0, 359, 360, 0, 571, 0, 361,
	362, 363, 0, 364, 0, 0, 0, 365, 366, 367,
	368, 369, 370, 0, 371, 373, 372, 0, 374, 572,
	0, 375, 376, 0, 0, 377, 378, 379, 0, 0,
	380, 381, 382, 383, 0, 384, 385, 387, 389, 386,
	388, 393, 390, 391, 392, 395, 0, 394, 0, 396,
	397, 398, 403, 405, 406, 401, 402, 404, 407, 400,
	0, 399, 0, 248, 0, 408, 409, 0, 573, 410,
	574, 412, 413, 0, 0, 414, 0, 0, 0, 416,
	417, 418, 0, 0, 419, 420, 575, 0, 421, 0,
	576, 422, 423, 415, 424, 425, 426, 427, 428, 429,
	430, 431, 0, 432, 433, 577, 578, 579, 434, 580,
	435, 436, 0, 437, 0, 438, 439, 440, 441, 442,
	443, 444, 581, 446, 445, 447, 0, 448, 0, 0,
	0, 0, 0, 449, 0, 451, 452, 453, 450, 454,
	455, 456, 457, 0, 458, 459, 460, 0, 461, 462,
	463, 464, 582, 465, 0, 466, 467, 473, 474, 468,
	469, 475, 476, 477, 478, 479, 0, 481, 482, 480,
	483, 484, 485, 0, 486, 470, 471, 487, 488, 0,
	489, 490, 491, 492, 493, 494, 583, 0, 495, 0,
	496, 497, 498, 499, 472, 500, 505, 584, 501, 502,
	503, 504, 585, 0, 507, 508, 0, 506, 687, 509,
	510, 511, 512, 688, 514, 327, 515, 0, 516, 586,
	587, 588, 589, 0, 523, 0, 517, 518, 590, 519,
	591, 0, 520, 521, 522, 0, 524, 525, 0, 0,
	526, 527, 528, 530, 531, 529, 532, 0, 533, 0,
	0, 534, 535, 536, 592, 593, 594, 0, 538, 537,
	539, 595, 0, 680, 0, 682, 540, 541, 596, 542,
	543, 544, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 250, 251, 252, 253, 254, 692, 255,
	256, 0, 0, 0, 0, 0, 545, 0, 0, 0,
	0, 257, 258, 260, 259, 261, 262, 263, 264, 546,
	547, 0, 265, 548, 266, 549, 0, 550, 267, 268,
	269, 270, 271, 272, 0, 0, 0, 273, 551, 552,
	553, 0, 274, 275, 554, 0, 0, 0, 276, 277,
	278, 279, 280, 281, 282, 0, 0, 284, 285, 286,
	283, 0, 287, 0, 288, 289, 290, 291, 292, 293,
	0, 294, 295, 296, 0, 297, 298, 0, 0, 0,
	0, 0, 0, 0, 299, 300, 689, 302, 0, 303,
	555, 556, 0, 307, 304, 305, 0, 308, 306, 0,
	309, 310, 311, 0, 0, 312, 313, 314, 0, 315,
	316, 0, 317, 318, 319, 0, 320, 321, 557, 322,
	323, 324, 326, 328, 325, 329, 330, 331, 332, 558,
	559, 0, 246, 0, 0, 0, 0, 0, 333, 334,
	335, 560, 0, 0, 0, 336, 0, 337, 0, 0,
	0, 338, 339, 561, 562, 340, 341, 0, 342, 563,
	0, 564, 343, 0, 344, 345, 346, 347, 348, 565,
	566, 567, 411, 0, 349, 350, 0, 351, 352, 353,
	354, 0, 0, 0, 247, 355, 356, 358, 0, 0,
	357, 568, 569, 0, 570, 0, 359, 360, 0, 571,
	0, 361, 362, 363, 0, 364, 0, 0, 0, 365,
	366, 367, 368, 369, 370, 0, 371, 373, 372, 0,
	374, 572, 0, 375, 376, 0, 0, 377, 378, 379,
	0, 0, 380, 381, 382, 383, 0, 384, 385, 387,
	389, 386, 388, 393, 390, 391, 392, 395, 0, 394,
	0, 396, 397, 398, 403, 405, 406, 401, 402, 404,
	407, 400, 0, 399, 0, 248, 0, 408, 409, 0,
	573, 410, 574, 412, 413, 0, 0, 414, 0, 0,
	0, 416, 417, 418, 0, 0, 419, 420, 575, 0,
	421, 0, 576, 422, 423, 415, 424, 425, 426, 427,
	428, 429, 430, 431, 0, 432, 433, 577, 578, 579,
	434, 580, 435, 436, 0, 437, 0, 438, 439, 440,
	441, 442, 443, 444, 581, 446, 445, 447, 0, 448,
	0, 0, 0, 0, 0, 449, 0, 451, 452, 453,
	450, 454, 455, 456, 457, 0, 458, 459, 460, 0,
	461, 462, 463, 464, 582, 465, 0, 466, 467, 473,
	474, 468, 469, 475, 476, 477, 478, 479, 0, 481,
	482, 480, 483, 484, 485, 0, 486, 470, 471, 487,
	488, 0, 489, 490, 491, 492, 493, 494, 583, 0,
	495, 0, 496, 497, 498, 499, 472, 500, 505, 584,
	501, 502, 503, 504, 585, 0, 507, 508, 0, 506,
	687, 509, 510, 511, 512, 688, 514, 327, 515, 0,
	516, 586, 587, 588, 589, 0, 523, 0, 517, 518,
	590, 519, 591, 0, 520, 521, 522, 0, 524, 525,
	0, 0, 526, 527, 528, 530, 531, 529, 532, 0,
	533, 0, 0, 534, 535, 536, 592, 593, 594, 0,
	538, 537, 539, 595, 682, 0, 0, 0, 540, 541,
	596, 542, 543, 544, 0, 0, 0, 0, 0, 0,
	0, 249, 250, 251, 252, 253, 254, 0, 255, 256,
	692, 0, 0, 0, 0, 545, 0, 0, 0, 0,
	257, 258, 260, 259, 261, 262, 263, 264, 546, 547,
	0, 265, 548, 266, 549, 0, 550, 267, 268, 269,
	270, 271, 272, 0, 0, 0, 273, 551, 552, 553,
	0, 274, 275, 554, 0, 0, 0, 276, 277, 278,
	279, 280, 281, 282, 0, 0, 284, 285, 286, 283,
	0, 287, 0, 288, 289, 290, 291, 292, 293, 0,
	294, 295, 296, 0, 297, 298, 0, 0, 0, 0,
	0, 0, 0, 299, 300, 689, 302, 0, 303, 555,
	556, 0, 307, 304, 305, 0, 308, 306, 0, 309,
	310, 311, 0, 0, 312, 313, 314, 0, 315, 316,
	0, 317, 318, 319, 0, 320, 321, 557, 322, 323,
	324, 326, 328, 325, 329, 330, 331, 332, 558, 559,
	0, 246, 0, 0, 0, 0, 0, 333, 334, 335,
	560, 0, 0, 0, 336, 0, 337, 0, 0, 0,
	338, 339, 561, 562, 340, 341, 0, 342, 563, 0,
	564, 343, 0, 344, 345, 346, 347, 348, 565, 566,
	567, 411, 0, 349, 350, 0, 351, 352, 353, 354,
	0, 0, 0, 247, 355, 356, 358, 0, 0, 357,
	568, 569, 0, 570, 0, 359, 360, 0, 571, 0,
	361, 362, 363, 0, 364, 0, 0, 0, 365, 366,
	367, 368, 369, 370, 0, 371, 373, 372, 0, 374,
	572, 0, 375, 376, 0, 0, 377, 378, 379, 0,
	0, 380, 381, 382, 383, 0, 384, 385, 387, 389,
	386, 388, 393, 390, 391, 392, 395, 0, 394, 0,
	396, 397, 398, 403, 405, 406, 401, 402, 404, 407,
	400, 0, 399, 0, 248, 0, 408, 409, 0, 573,
	410, 574, 412, 413, 0, 0, 414, 0, 0, 0,
	416, 417, 418, 0, 0, 419, 420, 575, 0, 421,
	0, 576, 422, 423, 415, 424, 425, 426, 427, 428,
	429, 430, 431, 0, 432, 433, 577, 578, 579, 434,
	580, 435, 436, 0, 437, 0, 438, 439, 440, 441,
	442, 443, 444, 581, 446, 445, 447, 0, 448, 0,
	0, 0, 0, 0, 449, 0, 451, 452, 453, 450,
	454, 455, 456, 457, 0, 458, 459, 460, 0, 461,
	462, 463, 464, 582, 465, 0, 466, 467, 473, 474,
	468, 469, 475, 476, 477, 478, 479, 0, 481, 482,
	480, 483, 484, 485, 0, 486, 470, 471, 487, 488,
	0, 489, 490, 491, 492, 493, 494, 583, 0, 495,
	0, 496, 497, 498, 499, 472, 500, 505, 584, 501,
	502, 503, 504, 585, 0, 507, 508, 0, 506, 687,
	509, 510, 511, 512, 688, 514, 327, 515, 0, 516,
	586, 587, 588, 589, 0, 523, 0, 517, 518, 590,
	519, 591, 0, 520, 521, 522, 0, 524, 525, 0,
	0, 526, 527, 528, 530, 531, 529, 532, 0, 533,
	0, 0, 534, 535, 536, 592, 593, 594, 0, 538,
	537, 539, 595, 682, 0, 0, 0, 540, 541, 596,
	542, 543, 544, 0, 0, 0, 0, 0, 0, 0,
	249, 250, 251, 252, 253, 254, 0, 255, 256, 692,
	0, 0, 0, 0, 545, 0, 0, 0, 0, 257,
	258, 260, 259, 261, 262, 263, 264, 546, 547, 0,
	265, 548, 266, 549, 0, 550, 267, 268, 269, 270,
	271, 272, 0, 0, 0, 273, 551, 552, 553, 0,
	274, 275, 554, 0, 0, 0, 276, 277, 278, 279,
	280, 281, 282, 0, 0, 284, 285, 286, 283, 0,
	287, 0, 288, 289, 290, 291, 292, 293, 0, 294,
	295, 296, 0, 297, 298, 0, 0, 0, 0, 0,
	0, 0, 299, 300, 689, 302, 0, 303, 555, 556,
	0, 307, 304, 305, 0, 308, 306, 0, 309, 310,
	311, 0, 0, 312, 313, 314, 0, 315, 316, 0,
	317, 318, 319, 0, 320, 321, 557, 322, 323, 324,
	326, 328, 325, 329, 330, 331, 332, 558, 559, 0,
	246, 0, 0, 0, 0, 0, 333, 334, 335, 560,
	0, 0, 0, 336, 0, 337, 0, 0, 0, 338,
	339, 561, 562, 340, 341, 0, 342, 563, 0, 564,
	343, 0, 344, 345, 346, 347, 348, 565, 566, 567,
	411, 0, 349, 350, 0, 351, 352, 353, 354, 0,
	0, 0, 247, 355, 356, 358, 0, 0, 357, 568,
	569, 0, 570, 0, 359, 360, 0, 571, 0, 361,
	362, 363, 0, 364, 0, 0, 0, 365, 366, 367,
	368, 369, 370, 0, 371, 373, 372, 0, 374, 572,
	0, 375, 376, 0, 0, 377, 378, 379, 0, 0,
	380, 381, 382, 383, 0, 384, 385, 387, 389, 386,
	388, 393, 390, 391, 392, 395, 0, 394, 0, 396,
	397, 398, 403, 405, 406, 401, 402, 404, 407, 400,
	0, 399, 0, 248, 0, 408, 409, 0, 573, 410,
	574, 412, 413, 0, 0, 414, 0, 0, 0, 416,
	417, 418, 0, 0, 419, 420, 575, 0, 421, 0,
	576, 422, 423, 415, 424, 425, 426, 427, 428, 429,
	430, 431, 0, 432, 433, 577, 578, 579, 434, 580,
	435, 436, 0, 437, 0, 438, 439, 440, 441, 442,
	443, 444, 581, 446, 445, 447, 0, 448, 0, 0,
	0, 0, 0, 449, 0, 451, 452, 453, 450, 454,
	455, 456, 457, 0, 458, 459, 460, 0, 2123, 462,
	463, 464, 582, 465, 0, 466, 467, 473, 474, 468,
	469, 475, 476, 477, 478, 479, 0, 481, 482, 480,
	483, 484, 485, 0, 486, 470, 471, 487, 488, 0,
	489, 490, 491, 492, 493, 494, 583, 0, 495, 0,
	496, 497, 498, 499, 472, 500, 505, 584, 501, 502,
	503, 504, 585, 0, 507, 508, 0, 506, 687, 509,
	510, 511, 512, 688, 514, 327, 515, 0, 516, 586,
	587, 588, 589, 0, 523, 0, 517, 518, 590, 519,
	591, 0, 520, 521, 522, 0, 524, 525, 0, 0,
	526, 527, 528, 530, 531, 529, 532, 0, 533, 0,
	0, 534, 535, 536, 592, 593, 594, 0, 538, 537,
	539, 595, 682, 0, 0, 0, 540, 541, 596, 542,
	543, 544, 0, 0, 0, 0, 0, 0, 0, 249,
	250, 251, 252, 253, 254, 0, 255, 256, 692, 0,
	0, 0, 0, 545, 0, 0, 0, 0, 257, 258,
	260, 259, 261, 262, 263, 264, 546, 547, 0, 265,
	548, 266, 549, 0, 550, 267, 268, 269, 270, 271,
	272, 0, 0, 0, 273, 551, 552, 553, 0, 274,
	275, 554, 0, 0, 0, 276, 277, 278, 279, 280,
	281, 282, 0, 0, 284, 285, 286, 283, 0, 287,
	0, 288, 289, 290, 291, 292, 293, 0, 294, 295,
	296, 0, 297, 298, 0, 0, 0, 0, 0, 0,
	0, 299, 300, 689, 302, 0, 303, 555, 556, 0,
	307, 304, 305, 0, 308, 306, 0, 309, 310, 311,
	0, 0, 312, 313, 314, 0, 315, 316, 0, 317,
	318, 319, 0, 320, 321, 557, 322, 323, 324, 326,
	328, 325, 329, 330, 331, 332, 558, 559, 0, 246,
	0, 0, 0, 0, 0, 333, 334, 335, 560, 0,
	0, 0, 336, 0, 337, 0, 0, 0, 338, 339,
	561, 562, 340, 341, 0, 342, 563, 0, 564, 343,
	0, 344, 345, 346, 347, 348, 565, 566, 567, 411,
	0, 349, 350, 0, 351, 352, 353, 354, 0, 0,
	0, 247, 355, 356, 358, 0, 0, 357, 568, 569,
	0, 570, 0, 359, 360, 0, 571, 0, 361, 362,
	363, 0, 364, 0, 0, 0, 365, 366, 367, 368,
	369, 370, 0, 371, 373, 372, 0, 374, 572, 0,
	375, 376, 0, 0, 377, 378, 379, 0, 0, 380,
	381, 382, 383, 0, 384, 385, 387, 389, 386, 388,
	393, 390, 391, 392, 395, 0, 394, 0, 396, 397,
	398, 403, 405, 406, 401, 402, 404, 407, 400, 0,
	399, 0, 248, 0, 408, 409, 0, 573, 410, 574,
	412, 413, 0, 0, 414, 0, 0, 0, 416, 417,
	418, 0, 0, 419, 420, 575, 0, 421, 0, 576,
	422, 423, 415, 424, 425, 426, 427, 428, 429, 430,
	431, 0, 432, 433, 577, 578, 579, 434, 580, 435,
	436, 0, 437, 0, 438, 439, 440, 441, 442, 443,
	444, 581, 446, 445, 447, 0, 448, 0, 0, 0,
	0, 0, 449, 0, 451, 452, 453, 450, 454, 455,
	456, 457, 0, 458, 459, 460, 0, 461, 462, 463,
	464, 582, 465, 0, 466, 467, 473, 474, 468, 469,
	475, 476, 477, 478, 479, 0, 481, 482, 480, 483,
	484, 485, 0, 486, 470, 471, 487, 488, 0, 489,
	490, 491, 492, 493, 494, 583, 0, 495, 0, 496,
	497, 498, 499, 472, 500, 505, 584, 501, 502, 503,
	504, 585, 0, 507, 508, 0, 506, 687, 509, 510,
	511, 512, 688, 514, 327, 515, 0, 516, 586, 587,
	588, 589, 0, 523, 0, 517, 518, 590, 519, 591,
	0, 520, 521, 1863, 0, 524, 525, 0, 0, 526,
	527, 528, 530, 531, 529, 532, 0, 533, 0, 0,
	534, 535, 536, 592, 593, 594, 0, 538, 537, 539,
	595, 682, 0, 0, 0, 540, 541, 596, 542, 543,
	544, 0, 0, 0, 0, 0, 0, 0, 249, 250,
	251, 252, 253, 254, 0, 255, 256, 692, 0, 0,
	0, 0, 545, 0, 0, 0, 0, 257, 258, 260,
	259, 261, 262, 263, 264, 546, 547, 0, 265, 548,
	266, 549, 0, 550, 267, 268, 269, 270, 271, 272,
	0, 0, 0, 273, 551, 552, 553, 0, 274, 275,
	554, 0, 0, 0, 276, 277, 278, 279, 280, 281,
	282, 0, 0, 284, 285, 286, 283, 0, 287, 0,
	288, 289, 290, 291, 292, 293, 0, 294, 295, 296,
	0, 297, 298, 0, 0, 0, 0, 0, 0, 0,
	299, 300, 689, 302, 0, 303, 555, 556, 0, 307,
	304, 305, 0, 308, 306, 0, 309, 310, 311, 0,
	0, 312, 313, 314, 0, 315, 316, 0, 317, 318,
	319, 0, 320, 321, 557, 322, 323, 324, 326, 328,
	325, 329, 330, 331, 332, 558, 559, 0, 246, 0,
	0, 0, 0, 0, 333, 334, 335, 560, 0, 0,
	0, 336, 0, 337, 0, 0, 0, 338, 339, 561,
	562, 340, 341, 0, 342, 563, 0, 564, 343, 0,
	344, 345, 346, 347, 348, 565, 566, 567, 411, 0,
	349, 350, 0, 351, 352, 353, 354, 0, 0, 0,
	247, 355, 356, 358, 0, 0, 357, 568, 569, 0,
	570, 0, 359, 360, 0, 571, 0, 361, 362, 363,
	0, 364, 0, 0, 0, 365, 366, 367, 368, 369,
	370, 0, 371, 373, 372, 0, 374, 572, 0, 375,
	376, 0, 0, 377, 378, 379, 0, 0, 380, 381,
	382, 383, 0, 384, 385, 387, 389, 386, 388, 393,
	390, 391, 392, 395, 0, 394, 0, 396, 397, 398,
	403, 405, 406, 401, 402, 404, 407, 400, 0, 399,
	0, 248, 0, 408, 409, 0, 573, 410, 574, 412,
	413, 0, 0, 414, 0, 0, 0, 416, 417, 418,
	0, 0, 419, 420, 575, 0, 421, 0, 576, 422,
	423, 415, 424, 425, 426, 427, 428, 429, 430, 431,
	0, 432, 433, 577, 578, 579, 434, 580, 435, 436,
	0, 437, 0, 438, 439, 440, 441, 442, 443, 444,
	581, 446, 445, 447, 0, 448, 0, 0, 0, 0,
	0, 449, 0, 451, 452, 453, 450, 454, 455, 456,
	457, 0, 458, 459, 460, 0, 461, 462, 463, 464,
	582, 465, 0, 466, 467, 473, 474, 468, 469, 475,
	476, 477, 478, 479, 0, 481, 482, 480, 483, 484,
	485, 0, 486, 470, 471, 487, 488, 0, 489, 490,
	491, 492, 493, 494, 583, 0, 495, 0, 496, 497,
	498, 499, 472, 500, 505, 584, 501, 502, 503, 504,
	585, 0, 507, 508, 0, 506, 687, 509, 510, 511,
	512, 688, 514, 327, 515, 0, 516, 586, 587, 588,
	589, 0, 523, 0, 517, 518, 590, 519, 591, 0,
	520, 521, 1817, 0, 524, 525, 0, 0, 526, 527,
	528, 530, 531, 529, 532, 0, 533, 0, 0, 534,
	535, 536, 592, 593, 594, 1838, 538, 537, 539, 595,
	0, 0, 0, 0, 540, 541, 596, 542, 543, 544,
	0, 0, 249, 250, 251, 252, 253, 254, 0, 255,
	256, 0, 0, 0, 0, 0, 692, 0, 0, 0,
	0, 257, 258, 260, 259, 261, 262, 263, 264, 0,
	1844, 0, 265, 1834, 266, 1850, 0, 1857, 267, 268,
	269, 270, 271, 272, 0, 0, 0, 273, 1860, 1861,
	0, 0, 274, 275, 0, 0, 1276, 0, 276, 277,
	278, 279, 280, 281, 282, 0, 0, 284, 285, 286,
	283, 0, 287, 0, 288, 289, 290, 291, 292, 293,
	0, 294, 295, 296, 1068, 297, 298, 0, 0, 0,
	0, 0, 0, 0, 299, 300, 301, 302, 1051, 303,
	1848, 1847, 0, 307, 304, 305, 0, 308, 306, 0,
	309, 310, 311, 0, 0, 312, 1036, 314, 0, 315,
	316, 0, 317, 318, 319, 0, 320, 321, 0, 322,
	323, 324, 326, 328, 325, 329, 330, 331, 332, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 333, 334,
	335, 1846, 0, 0, 0, 336, 0, 337, 0, 0,
	1069, 338, 339, 1855, 1856, 340, 341, 0, 342, 0,
	0, 0, 343, 0, 344, 345, 346, 347, 348, 0,
	0, 0, 411, 1071, 349, 350, 0, 351, 352, 353,
	354, 0, 0, 0, 0, 355, 356, 358, 0, 1070,
	357, 1841, 1842, 0, 1837, 0, 359, 360, 1072, 0,
	1073, 361, 362, 363, 1074, 364, 0, 0, 0, 365,
	366, 367, 368, 369, 370, 0, 371, 373, 372, 0,
	374, 0, 1075, 375, 376, 1076, 0, 377, 378, 379,
	0, 0, 380, 381, 382, 383, 0, 384, 385, 387,
	389, 386, 388, 393, 390, 391, 392, 395, 0, 394,
	1077, 396, 397, 398, 403, 405, 406, 401, 402, 404,
	407, 400, 1078, 399, 0, 0, 1079, 408, 409, 0,
	0, 410, 1849, 412, 413, 0, 0, 414, 0, 0,
	0, 416, 417, 418, 0, 0, 419, 420, 0, 1080,
	421, 1081, 0, 422, 423, 415, 424, 425, 426, 427,
	428, 429, 430, 431, 0, 432, 433, 1831, 1832, 0,
	434, 0, 435, 436, 0, 437, 0, 438, 439, 440,
	441, 442, 443, 444, 1845, 446, 445, 447, 0, 448,
	0, 0, 0, 0, 0, 449, 0, 451, 452, 453,
	450, 454, 455, 456, 457, 0, 458, 459, 460, 1082,
	461, 462, 463, 464, 0, 465, 0, 466, 467, 473,
	474, 468, 469, 475, 476, 477, 478, 479, 0, 481,
	482, 480, 483, 484, 485, 0, 486, 470, 471, 487,
	488, 1083, 489, 490, 491, 492, 493, 494, 1843, 0,
	495, 0, 496, 497, 498, 499, 472, 500, 505, 1859,
	501, 502, 503, 504, 0, 0, 507, 508, 0, 506,
	0, 509, 510, 511, 512, 513, 514, 327, 515, 0,
	516, 1851, 1852, 1853, 1854, 0, 523, 0, 517, 518,
	0, 519, 0, 0, 520, 521, 522, 0, 524, 525,
	0, 0, 526, 527, 528, 530, 531, 529, 532, 0,
	533, 0, 0, 534, 535, 536, 0, 1835, 1858, 0,
	538, 537, 539, 0, 0, 0, 0, 0, 540, 541,
	0, 542, 543, 544, 1310, 1309, 0, 0, 0, 0,
	1307, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 250, 251, 252, 253, 254, 0, 255, 256,
	0, 1825, 0, 0, 0, 545, 0, 0, 0, 0,
	257, 258, 260, 259, 261, 262, 263, 264, 546, 547,
	0, 265, 548, 266, 549, 0, 550, 267, 268, 269,
	270, 271, 272, 0, 0, 0, 273, 551, 552, 553,
	0, 274, 275, 554, 0, 1276, 0, 276, 277, 278,
	279, 280, 281, 282, 0, 0, 284, 285, 286, 283,
	0, 287, 0, 288, 289, 290, 291, 292, 293, 0,
	294, 295, 296, 1068, 297, 298, 0, 0, 0, 0,
	0, 0, 0, 299, 300, 301, 302, 0, 303, 555,
	556, 0, 307, 304, 305, 0, 308, 306, 0, 309,
	310, 311, 0, 0, 312, 313, 314, 0, 315, 316,
	0, 317, 318, 319, 0, 320, 321, 557, 322, 323,
	324, 326, 328, 325, 329, 330, 331, 332, 558, 559,
	0, 246, 0, 0, 0, 0, 0, 333, 334, 335,
	560, 0, 0, 0, 336, 0, 337, 0, 0, 1069,
	338, 339, 561, 562, 340, 341, 0, 342, 563, 0,
	564, 343, 0, 344, 345, 346, 347, 348, 565, 566,
	567, 411, 1071, 349, 350, 0, 351, 352, 353, 354,
	0, 0, 0, 0, 355, 356, 358, 0, 1070, 357,
	568, 569, 0, 570, 0, 359, 360, 1072, 571, 1073,
	361, 362, 363, 1074, 364, 0, 0, 0, 365, 366,
	367, 368, 369, 370, 0, 371, 373, 372, 0, 374,
	572, 1075, 375, 376, 1076, 0, 377, 378, 379, 0,
	0, 380, 381, 382, 383, 0, 384, 385, 387, 389,
	386, 388, 393, 390, 391, 392, 395, 0, 394, 1077,
	396, 397, 398, 403, 405, 406, 401, 402, 404, 407,
	400, 1078, 399, 0, 0, 1079, 408, 409, 3467, 573,
	410, 574, 412, 413, 0, 0, 414, 0, 0, 0,
	416, 417, 418, 0, 0, 419, 420, 575, 1080, 421,
	1081, 576, 422, 423, 415, 424, 425, 426, 427, 428,
	429, 430, 431, 0, 432, 433, 577, 578, 579, 434,
	580, 435, 436, 0, 437, 0, 438, 439, 440, 441,
	442, 443, 444, 581, 446, 445, 447, 0, 448, 0,
	0, 0, 0, 0, 449, 0, 451, 452, 453, 450,
	454, 455, 456, 457, 0, 458, 459, 460, 1082, 461,
	462, 463, 464, 582, 465, 0, 466, 467, 473, 474,
	468, 469, 475, 476, 477, 478, 479, 0, 481, 482,
	480, 483, 484, 485, 0, 486, 470, 471, 487, 488,
	1083, 489, 490, 491, 492, 493, 494, 583, 0, 495,
	0, 496, 497, 498, 499, 472, 500, 505, 584, 501,
	502, 503, 504, 585, 0, 507, 508, 0, 506, 0,
	509, 510, 511, 512, 513, 514, 327, 515, 0, 516,
	586, 587, 588, 589, 0, 523, 0, 517, 518, 590,
	519, 591, 0, 520, 521, 522, 0, 524, 525, 0,
	0, 526, 527, 528, 530, 531, 529, 532, 0, 533,
	0, 0, 534, 535, 536, 592, 593, 594, 0, 538,
	537, 539, 595, 0, 0, 0, 0, 540, 541, 596,
	542, 543, 544, 1310, 1309, 0, 0, 0, 0, 1307,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	249, 250, 251, 252, 253, 254, 0, 255, 256, 0,
	0, 0, 0, 0, 545, 0, 0, 0, 0, 257,
	258, 260, 259, 261, 262, 263, 264, 546, 547, 0,
	265, 548, 266, 549, 0, 550, 267, 268, 269, 270,
	271, 272, 0, 0, 0, 273, 551, 552, 553, 0,
	274, 275, 554, 0, 1276, 0, 276, 277, 278, 279,
	280, 281, 282, 0, 0, 284, 285, 286, 283, 0,
	287, 0, 288, 289, 290, 291, 292, 293, 0, 294,
	295, 296, 1068, 297, 298, 0, 0, 0, 0, 0,
	0, 0, 299, 300, 301, 302, 0, 303, 555, 556,
	0, 307, 304, 305, 0, 308, 306, 0, 309, 310,
	311, 0, 0, 312, 313, 314, 0, 315, 316, 0,
	317, 318, 319, 0, 320, 321, 557, 322, 323, 324,
	326, 328, 325, 329, 330, 331, 332, 558, 559, 0,
	246, 0, 0, 0, 0, 0, 333, 334, 335, 560,
	0, 0, 0, 336, 0, 337, 0, 0, 1069, 338,
	339, 561, 562, 340, 341, 0, 342, 563, 0, 564,
	343, 0, 344, 345, 346, 347, 348, 565, 566, 567,
	411, 1071, 349, 350, 0, 351, 352, 353, 354, 0,
	0, 0, 0, 355, 356, 358, 0, 1070, 357, 568,
	569, 0, 570, 0, 359, 360, 1072, 571, 1073, 361,
	362, 363, 1074, 364, 0, 0, 0, 365, 366, 367,
	368, 369, 370, 0, 371, 373, 372, 0, 374, 572,
	1075, 375, 376, 1076, 0, 377, 378, 379, 0, 0,
	380, 381, 382, 383, 0, 384, 385, 387, 389, 386,
	388, 393, 390, 391, 392, 395, 0, 394, 1077, 396,
	397, 398, 403, 405, 406, 401, 402, 404, 407, 400,
	1078, 399, 0, 0, 1079, 408, 409, 3114, 573, 410,
	574, 412, 413, 0, 0, 414, 0, 0, 0, 416,
	417, 418, 0, 0, 419, 420, 575, 1080, 421, 1081,
	576, 422, 423, 415, 424, 425, 426, 427, 428, 429,
	430, 431, 0, 432, 433, 577, 578, 579, 434, 580,
	435, 436, 0, 437, 0, 438, 439, 440, 441, 442,
	443, 444, 581, 446, 445, 447, 0, 448, 0, 0,
	0, 0, 0, 449, 0, 451, 452, 453, 450, 454,
	455, 456, 457, 0, 458, 459, 460, 1082, 461, 462,
	463, 464, 582, 465, 0, 466, 467, 473, 474, 468,
	469, 475, 476, 477, 478, 479, 0, 481, 482, 480,
	483, 484, 485, 0, 486, 470, 471, 487, 488, 1083,
	489, 490, 491, 492, 493, 494, 583, 0, 495, 0,
	496, 497, 498, 499, 472, 500, 505, 584, 501, 502,
	503, 504, 585, 0, 507, 508, 0, 506, 0, 509,
	510, 511, 512, 513, 514, 327, 515, 0, 516, 586,
	587, 588, 589, 0, 523, 0, 517, 518, 590, 519,
	591, 0, 520, 521, 522, 0, 524, 525, 0, 0,
	526, 527, 528, 530, 531, 529, 532, 0, 533, 0,
	0, 534, 535, 536, 592, 593, 594, 0, 538, 537,
	539, 595, 1310, 1309, 0, 0, 540, 541, 596, 542,
	543, 544, 0, 0, 0, 0, 0, 0, 0, 249,
	250, 251, 252, 253, 254, 0, 255, 256, 0, 0,
	0, 0, 0, 545, 0, 0, 0, 0, 257, 258,
	260, 259, 261, 262, 263, 264, 546, 547, 0, 265,
	548, 266, 549, 0, 550, 267, 268, 269, 270, 271,
	272, 0, 0, 0, 273, 551, 552, 553, 0, 274,
	275, 554, 0, 1276, 0, 276, 277, 278, 279, 280,
	281, 282, 0, 0, 284, 285, 286, 283, 0, 287,
	0, 288, 289, 290, 291, 292, 293, 0, 294, 295,
	296, 1068, 297, 298, 0, 0, 0, 0, 0, 0,
	3055, 299, 300, 301, 302, 0, 303, 555, 556, 0,
	307, 304, 305, 0, 308, 306, 0, 309, 310, 311,
	0, 0, 312, 313, 314, 0, 315, 316, 0, 317,
	318, 319, 0, 320, 321, 557, 322, 323, 324, 326,
	328, 325, 329, 330, 331, 332, 558, 559, 0, 246,
	0, 0, 0, 0, 0, 333, 334, 335, 560, 0,
	0, 0, 336, 0, 337, 0, 0, 1069, 338, 339,
	561, 562, 340, 341, 0, 342, 563, 0, 564, 343,
	0, 344, 345, 346, 347, 348, 565, 566, 567, 411,
	1071, 349, 350, 0, 351, 352, 353, 354, 0, 0,
	0, 0, 355, 356, 358, 0, 1070, 357, 568, 569,
	0, 570, 0, 359, 360, 1072, 571, 1073, 361, 362,
	363, 1074, 364, 0, 0, 0, 365, 366, 367, 368,
	369, 370, 0, 371, 373, 372, 0, 374, 572, 1075,
	375, 376, 1076, 0, 377, 378, 379, 0, 0, 380,
	381, 382, 383, 0, 384, 385, 387, 389, 386, 388,
	393, 390, 391, 392, 395, 0, 394, 1077, 396, 397,
	398, 403, 405, 406, 401, 402, 404, 407, 400, 1078,
	399, 0, 0, 1079, 408, 409, 0, 573, 410, 574,
	412, 413, 0, 0, 414, 0, 0, 0, 416, 417,
	418, 0, 0, 419, 420, 575, 1080, 421, 1081, 576,
	422, 423, 415, 424, 425, 426, 427, 428, 429, 430,
	431, 0, 432, 433, 577, 578, 579, 434, 580, 435,
	436, 0, 437, 0, 438, 439, 440, 441, 442, 443,
	444, 581, 446, 445, 447, 0, 448, 0, 0, 0,
	0, 0, 449, 0, 451, 452, 453, 450, 454, 455,
	456, 457, 0, 458, 459, 460, 1082, 461, 462, 463,
	464, 582, 465, 0, 466, 467, 473, 474, 468, 469,
	475, 476, 477, 478, 479, 0, 481, 482, 480, 483,
	484, 485, 3056, 486, 470, 471, 487, 488, 1083, 489,
	490, 491, 492, 493, 494, 583, 0, 495, 0, 496,
	497, 498, 499, 472, 500, 505, 584, 501, 502, 503,
	504, 585, 0, 507, 508, 0, 506, 0, 509, 510,
	511, 512, 513, 514, 327, 515, 0, 516, 586, 587,
	588, 589, 0, 523, 0, 517, 518, 590, 519, 591,
	0, 520, 521, 522, 0, 524, 525, 0, 0, 526,
	527, 528, 530, 531, 529, 532, 0, 533, 0, 0,
	534, 535, 536, 592, 593, 594, 243, 538, 537, 539,
	595, 0, 0, 0, 0, 540, 541, 596, 542, 543,
	544, 0, 0, 249, 250, 251, 252, 253, 254, 0,
	255, 256, 0, 0, 0, 0, 0, 545, 0, 0,
	0, 0, 257, 258, 260, 259, 261, 262, 263, 264,
	546, 547, 0, 265, 548, 266, 549, 0, 550, 267,
	268, 269, 270, 271, 272, 0, 0, 0, 273, 551,
	552, 553, 0, 274, 275, 554, 0, 0, 0, 276,
	277, 278, 279, 280, 281, 282, 0, 0, 284, 285,
	286, 283, 0, 287, 0, 288, 289, 290, 291, 292,
	293, 0, 294, 295, 296, 0, 297, 298, 0, 0,
	0, 0, 0, 0, 0, 299, 300, 301, 302, 0,
	303, 555, 556, 0, 307, 304, 305, 0, 308, 306,
	0, 309, 310, 311, 0, 0, 312, 313, 314, 0,
	315, 316, 0, 317, 318, 319, 0, 320, 321, 557,
	322, 323, 324, 326, 328, 325, 329, 330, 331, 332,
	558, 559, 0, 246, 0, 0, 0, 0, 0, 333,
	334, 335, 560, 0, 0, 0, 336, 0, 337, 0,
	0, 0, 338, 339, 561, 562, 340, 341, 0, 342,
	563, 0, 564, 343, 0, 344, 345, 346, 347, 348,
	565, 566, 567, 411, 0, 349, 350, 0, 351, 352,
	353, 354, 0, 0, 0, 247, 355, 356, 358, 0,
	0, 357, 568, 569, 0, 570, 0, 359, 360, 0,
	571, 0, 361, 362, 363, 0, 364, 0, 0, 0,
	365, 366, 367, 368, 369, 370, 0, 371, 373, 372,
	0, 374, 572, 0, 375, 376, 0, 0, 377, 378,
	379, 0, 0, 380, 381, 382, 383, 0, 384, 385,
	387, 389, 386, 388, 393, 390, 391, 392, 395, 0,
	394, 0, 396, 397, 398, 403, 405, 406, 401, 402,
	404, 407, 400, 0, 399, 0, 248, 0, 408, 409,
	0, 573, 410, 574, 412, 413, 0, 0, 414, 0,
	0, 0, 416, 417, 418, 0, 0, 419, 420, 575,
	0, 421, 0, 576, 422, 423, 415, 424, 425, 426,
	427, 428, 429, 430, 431, 0, 432, 433, 577, 578,
	579, 434, 580, 435, 436, 0, 437, 0, 438, 439,
	440, 441, 442, 443, 444, 581, 446, 445, 447, 0,
	448, 0, 0, 0, 0, 0, 449, 0, 451, 452,
	453, 450, 454, 455, 456, 457, 0, 458, 459, 460,
	0, 461, 462, 463, 464, 582, 465, 0, 466, 467,
	473, 474, 468, 469, 475, 476, 477, 478, 479, 0,
	481, 482, 480, 483, 484, 485, 0, 486, 470, 471,
	487, 488, 0, 489, 490, 491, 492, 493, 494, 583,
	0, 495, 0, 496, 497, 498, 499, 472, 500, 505,
	584, 501, 502, 503, 504, 585, 0, 507, 508, 0,
	506, 0, 509, 510, 511, 512, 513, 514, 327, 515,
	0, 516, 586, 587, 588, 589, 0, 523, 0, 517,
	518, 590, 519, 591, 0, 520, 521, 522, 0, 524,
	525, 0, 0, 526, 527, 528, 530, 531, 529, 532,
	0, 533, 0, 0, 534, 535, 536, 592, 593, 594,
	0, 538, 537, 539, 595, 0, 0, 0, 0, 540,
	541, 596, 542, 543, 544, 1511, 0, 1310, 1309, 0,
	0, 0, 0, 1307, 0, 0, 0, 0, 0, 0,
	0, 692, 0, 0, 249, 250, 251, 252, 253, 254,
	0, 255, 256, 0, 0, 0, 0, 0, 545, 0,
	0, 0, 0, 257, 258, 260, 259, 261, 262, 263,
	264, 546, 547, 0, 265, 548, 266, 549, 0, 550,
	267, 268, 269, 270, 271, 272, 0, 0, 0, 273,
	551, 552, 553, 0, 274, 275, 554, 0, 1276, 0,
	276, 277, 278, 279, 280, 281, 282, 0, 0, 284,
	285, 286, 283, 0, 287, 0, 288, 289, 290, 291,
	292, 293, 0, 294, 295, 296, 1068, 297, 298, 0,
	0, 0, 0, 0, 0, 0, 299, 300, 301, 302,
	0, 303, 555, 556, 0, 307, 304, 305, 0, 308,
	306, 0, 309, 310, 311, 0, 0, 312, 313, 314,
	0, 315, 316, 0, 317, 318, 319, 0, 320, 321,
	557, 322, 323, 324, 326, 328, 325, 329, 330, 331,
	332, 558, 559, 0, 246, 0, 0, 0, 0, 0,
	1510, 334, 335, 560, 0, 0, 0, 336, 0, 337,
	0, 0, 1069, 338, 339, 561, 562, 340, 341, 0,
	342, 563, 0, 564, 343, 0, 344, 345, 346, 347,
	348, 565, 566, 567, 411, 1071, 349, 350, 0, 351,
	352, 353, 354, 0, 0, 0, 0, 355, 356, 358,
	0, 1070, 357, 568, 569, 0, 570, 0, 359, 360,
	1072, 571, 1073, 361, 362, 363, 1074, 364, 0, 0,
	0, 365, 366, 367, 368, 369, 370, 0, 371, 373,
	372, 0, 374, 572, 1075, 375, 376, 1076, 0, 377,
	378, 379, 0, 0, 380, 381, 382, 383, 0, 384,
	385, 387, 389, 386, 388, 393, 390, 391, 392, 395,
	0, 394, 1077, 396, 397, 398, 403, 405, 406, 401,
	402, 404, 407, 400, 1078, 399, 0, 0, 1079, 408,
	409, 0, 573, 410, 574, 412, 413, 0, 0, 414,
	0, 0, 0, 416, 417, 418, 0, 0, 419, 420,
	575, 1080, 421, 1081, 576, 422, 423, 415, 424, 425,
	426, 427, 428, 429, 430, 431, 0, 432, 433, 577,
	578, 579, 434, 580, 435, 436, 0, 437, 0, 438,
	439, 440, 441, 442, 1509, 444, 581, 446, 445, 447,
	0, 448, 0, 0, 0, 0, 0, 449, 0, 451,
	452, 453, 450, 454, 455, 456, 457, 0, 458, 459,
	460, 1082, 461, 462, 463, 464, 582, 465, 0, 466,
	467, 473, 474, 468, 469, 475, 1508, 477, 478, 479,
	0, 481, 482, 480, 483, 484, 485, 0, 486, 470,
	471, 487, 488, 1083, 489, 490, 491, 492, 493, 494,
	583, 0, 495, 0, 496, 497, 498, 499, 472, 500,
	505, 584, 501, 502, 503, 504, 585, 0, 507, 508,
	0, 506, 0, 509, 510, 511, 512, 513, 514, 327,
	515, 0, 516, 586, 587, 588, 589, 0, 523, 0,
	517, 518, 590, 519, 591, 0, 520, 521, 522, 0,
	524, 525, 0, 0, 526, 527, 528, 530, 531, 529,
	532, 0, 533, 0, 0, 534, 535, 536, 592, 593,
	594, 0, 538, 537, 539, 595, 0, 0, 0, 0,
	540, 541, 596, 542, 543, 544, 1451, 0, 1310, 1309,
	0, 0, 0, 0, 1307, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 250, 251, 252, 253,
	254, 0, 255, 256, 0, 0, 0, 0, 0, 545,
	0, 0, 0, 0, 257, 258, 260, 259, 261, 262,
	263, 264, 546, 547, 0, 265, 548, 266, 549, 0,
	550, 267, 268, 269, 270, 271, 272, 0, 0, 0,
	273, 551, 552, 553, 0, 274, 275, 554, 0, 1276,
	0, 276, 277, 278, 279, 280, 281, 282, 0, 0,
	284, 285, 286, 283, 0, 287, 0, 288, 289, 290,
	291, 292, 293, 0, 294, 295, 296, 1068, 297, 298,
	0, 0, 0, 0, 0, 0, 0, 299, 300, 301,
	302, 0, 303, 555, 556, 0, 307, 304, 305, 0,
	308, 306, 0, 309, 310, 311, 0, 0, 312, 313,
	314, 0, 315, 316, 0, 317, 318, 319, 0, 320,
	321, 557, 322, 323, 324, 326, 328, 325, 329, 330,
	331, 332, 558, 559, 0, 246, 0, 0, 0, 0,
	0, 333, 334, 335, 560, 0, 0, 0, 336, 0,
	337, 0, 0, 1069, 338, 339, 561, 562, 340, 341,
	0, 342, 563, 0, 564, 343, 0, 344, 345, 346,
	347, 348, 1450, 566, 567, 411, 1071, 349, 350, 0,
	351, 352, 353, 354, 0, 0, 0, 0, 355, 356,
	358, 0, 1070, 357, 568, 569, 0, 570, 0, 359,
	360, 1072, 571, 1073, 361, 362, 363, 1074, 364, 0,
	0, 0, 365, 366, 367, 368, 369, 370, 0, 371,
	373, 372, 0, 374, 572, 1075, 375, 376, 1076, 0,
	377, 378, 379, 0, 0, 380, 381, 382, 383, 0,
	384, 385, 387, 389, 386, 388, 393, 390, 391, 392,
	395, 0, 394, 1077, 396, 397, 398, 403, 405, 406,
	401, 402, 404, 407, 400, 1078, 399, 0, 0, 1079,
	408, 409, 0, 573, 410, 574, 412, 413, 0, 0,
	414, 0, 0, 0, 416, 417, 418, 0, 0, 419,
	420, 575, 1080, 421, 1081, 576, 422, 423, 415, 424,
	425, 426, 427, 428, 429, 430, 431, 0, 432, 433,
	577, 578, 579, 434, 580, 435, 436, 0, 437, 0,
	438, 439, 440, 441, 442, 443, 444, 581, 446, 445,
	447, 0, 448, 0, 0, 0, 0, 0, 449, 0,
	451, 452, 453, 450, 454, 455, 456, 457, 0, 458,
	459, 460, 1082, 461, 462, 463, 464, 582, 465, 0,
	466, 467, 473, 474, 468, 469, 475, 476, 477, 478,
	479, 0, 481, 482, 480, 483, 484, 485, 0, 486,
	470, 471, 487, 488, 1083, 489, 490, 491, 492, 493,
	494, 583, 0, 495, 0, 496, 497, 498, 499, 472,
	500, 505, 584, 501, 502, 503, 504, 585, 0, 507,
	508, 0, 506, 0, 509, 510, 511, 512, 513, 514,
	327, 515, 0, 516, 586, 587, 588, 589, 0, 523,
	0, 517, 518, 590, 519, 591, 0, 520, 521, 522,
	0, 524, 525, 0, 0, 526, 527, 528, 530, 531,
	529, 532, 0, 533, 0, 0, 534, 535, 536, 592,
	593, 594, 0, 538, 537, 539, 595, 0, 0, 0,
	0, 540, 541, 596, 542, 543, 544, 1380, 0, 1310,
	1309, 0, 0, 0, 0, 1307, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 249, 250, 251, 252,
	253, 254, 0, 255, 256, 0, 0, 0, 0, 0,
	545, 0, 0, 0, 0, 257, 258, 260, 259, 261,
	262, 263, 264, 546, 547, 0, 265, 548, 266, 549,
	0, 550, 267, 268, 269, 270, 271, 272, 0, 0,
	0, 273, 551, 552, 553, 0, 274, 275, 554, 0,
	1276, 0, 276, 277, 278, 279, 280, 281, 282, 0,
	0, 284, 285, 286, 283, 0, 287, 0, 288, 289,
	290, 291, 292, 293, 0, 294, 295, 296, 1068, 297,
	298, 0, 0, 0, 0, 0, 0, 0, 299, 300,
	301, 302, 0, 303, 555, 556, 0, 307, 304, 305,
	0, 308, 306, 0, 309, 310, 311, 0, 0, 312,
	313, 314, 0, 315, 316, 0, 317, 318, 319, 0,
	320, 321, 557, 322, 323, 324, 326, 328, 325, 329,
	330, 331, 332, 558, 559, 0, 246, 0, 0, 0,
	0, 0, 333, 334, 335, 560, 0, 0, 0, 336,
	0, 337, 0, 0, 1069, 338, 339, 561, 562, 340,
	341, 0, 342, 563, 0, 564, 343, 0, 344, 345,
	346, 347, 348, 1379, 566, 567, 411, 1071, 349, 350,
	0, 351, 352, 353, 354, 0, 0, 0, 0, 355,
	356, 358, 0, 1070, 357, 568, 569, 0, 570, 0,
	359, 360, 1072, 571, 1073, 361, 362, 363, 1074, 364,
	0, 0, 0, 365, 366, 367, 368, 369, 370, 0,
	371, 373, 372, 0, 374, 572, 1075, 375, 376, 1076,
	0, 377, 378, 379, 0, 0, 380, 381, 382, 383,
	0, 384, 385, 387, 389, 386, 388, 393, 390, 391,
	392, 395, 0, 394, 1077, 396, 397, 398, 403, 405,
	406, 401, 402, 404, 407, 400, 1078, 399, 0, 0,
	1079, 408, 409, 0, 573, 410, 574, 412, 413, 0,
	0, 414, 0, 0, 0, 416, 417, 418, 0, 0,
	419, 420, 575, 1080, 421, 1081, 576, 422, 423, 415,
	424, 425, 426, 427, 428, 429, 430, 431, 0, 432,
	433, 577, 578, 579, 434, 580, 435, 436, 0, 437,
	0, 438, 439, 440, 441, 442, 443, 444, 581, 446,
	445, 447, 0, 448, 0, 0, 0, 0, 0, 449,
	0, 451, 452, 453, 450, 454, 455, 456, 457, 0,
	458, 459, 460, 1082, 461, 462, 463, 464, 582, 465,
	0, 466, 467, 473, 474, 468, 469, 475, 476, 477,
	478, 479, 0, 481, 482, 480, 483, 484, 485, 0,
	486, 470, 471, 487, 488, 1083, 489, 490, 491, 492,
	493, 494, 583, 0, 495, 0, 496, 497, 498, 499,
	472, 500, 505, 584, 501, 502, 503, 504, 585, 0,
	507, 508, 0, 506, 0, 509, 510, 511, 512, 513,
	514, 327, 515, 0, 516, 586, 587, 588, 589, 0,
	523, 0, 517, 518, 590, 519, 591, 0, 520, 521,
	522, 0, 524, 525, 0, 0, 526, 527, 528, 530,
	531, 529, 532, 0, 533, 0, 0, 534, 535, 536,
	592, 593, 594, 0, 538, 537, 539, 595, 0, 0,
	0, 0, 540, 541, 596, 542, 543, 544, 1345, 0,
	1310, 1309, 0, 0, 0, 0, 1307, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 250, 251,
	252, 253, 254, 0, 255, 256, 0, 0, 0, 0,
	0, 545, 0, 0, 0, 0, 257, 258, 260, 259,
	261, 262, 263, 264, 546, 547, 0, 265, 548, 266,
	549, 0, 550, 267, 268, 269, 270, 271, 272, 0,
	0, 0, 273, 551, 552, 553, 0, 274, 275, 554,
	0, 1276, 0, 276, 277, 278, 279, 280, 281, 282,
	0, 0, 284, 285, 286, 283, 0, 287, 0, 288,
	289, 290, 291, 292, 293, 0, 294, 295, 296, 1068,
	297, 298, 0, 0, 0, 0, 0, 0, 0, 299,
	300, 301, 302, 0, 303, 555, 556, 0, 307, 304,
	305, 0, 308, 306, 0, 309, 310, 311, 0, 0,
	312, 313, 314, 0, 315, 316, 0, 317, 318, 319,
	0, 320, 321, 557, 322, 323, 324, 326, 328, 325,
	329, 330, 331, 332, 558, 559, 0, 246, 0, 0,
	0, 0, 0, 333, 334, 335, 560, 0, 0, 0,
	336, 0, 337, 0, 0, 1069, 338, 339, 561, 562,
	340, 341, 0, 342, 563, 0, 564, 343, 0, 344,
	345, 346, 347, 348, 565, 566, 567, 411, 1071, 349,
	350, 0, 351, 352, 353, 354, 0, 0, 0, 0,
	355, 356, 358, 0, 1070, 357, 568, 569, 0, 570,
	0, 359, 360, 1072, 571, 1073, 361, 362, 363, 1074,
	364, 0, 0, 0, 365, 366, 367, 368, 369, 370,
	0, 371, 373, 372, 0, 374, 572, 1075, 375, 376,
	1076, 0, 377, 378, 379, 0, 0, 380, 381, 382,
	383, 0, 384, 385, 387, 389, 386, 388, 393, 390,
	391, 392, 395, 0, 394, 1077, 396, 397, 398, 403,
	405, 406, 401, 402, 404, 407, 400, 1078, 399, 0,
	0, 1079, 408, 409, 0, 573, 410, 574, 412, 413,
	0, 0, 414, 0, 0, 0, 416, 417, 418, 0,
	0, 419, 420, 575, 1080, 421, 1081, 576, 422, 423,
	415, 424, 425, 426, 427, 428, 429, 430, 431, 0,
	432, 433, 577, 578, 579, 434, 580, 435, 436, 0,
	437, 0, 438, 439, 440, 441, 442, 443, 444, 581,
	446, 445, 447, 0, 448, 0, 0, 0, 0, 0,
	449, 0, 451, 452, 453, 450, 454, 455, 456, 457,
	0, 458, 459, 460, 1082, 461, 462, 463, 464, 582,
	465, 0, 466, 467, 473, 474, 468, 469, 475, 476,
	477, 478, 479, 0, 481, 482, 480, 483, 484, 485,
	0, 486, 470, 471, 487, 488, 1083, 489, 490, 491,
	492, 493, 494, 583, 0, 495, 0, 496, 497, 498,
	499, 472, 500, 505, 584, 501, 502, 503, 504, 585,
	0, 507, 508, 0, 506, 0, 509, 510, 511, 512,
	513, 514, 327, 515, 0, 516, 586, 587, 588, 589,
	0, 523, 0, 517, 518, 590, 519, 591, 0, 520,
	521, 522, 0, 524, 525, 0, 0, 526, 527, 528,
	530, 531, 529, 532, 0, 533, 0, 0, 534, 535,
	536, 592, 593, 594, 0, 538, 537, 539, 595, 0,
	0, 0, 0, 540, 541, 596, 542, 543, 544, 1305,
	0, 1310, 1309, 0, 0, 0, 0, 1307, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 249, 250,
	251, 252, 253, 254, 0, 255, 256, 0, 0, 0,
	0, 0, 545, 0, 0, 0, 0, 257, 258, 260,
	259, 261, 262, 263, 264, 546, 547, 0, 265, 548,
	266, 549, 0, 550, 267, 268, 269, 270, 271, 272,
	0, 0, 0, 273, 551, 552, 553, 0, 274, 275,
	554, 0, 1276, 0, 276, 277, 278, 279, 280, 281,
	282, 0, 0, 284, 285, 286, 283, 0, 287, 0,
	288, 289, 290, 291, 292, 293, 0, 294, 295, 296,
	1068, 297, 298, 0, 0, 0, 0, 0, 0, 0,
	299, 300, 301, 302, 0, 303, 555, 556, 0, 307,
	304, 305, 0, 308, 306, 0, 309, 310, 311, 0,
	0, 312, 313, 314, 0, 315, 316, 0, 317, 318,
	319, 0, 320, 321, 557, 322, 323, 324, 326, 328,
	325, 329, 330, 331, 332, 558, 559, 0, 246, 0,
	0, 0, 0, 0, 333, 334, 335, 560, 0, 0,
	0, 336, 0, 337, 0, 0, 1069, 338, 339, 561,
	562, 340, 341, 0, 342, 563, 0, 564, 343, 0,
	344, 345, 346, 347, 348, 1304, 566, 567, 411, 1071,
	349, 350, 0, 351, 352, 353, 354, 0, 0, 0,
	0, 355, 356, 358, 0, 1070, 357, 568, 569, 0,
	570, 0, 359, 360, 1072, 571, 1073, 361, 362, 363,
	1074, 364, 0, 0, 0, 365, 366, 367, 368, 369,
	370, 0, 371, 373, 372, 0, 374, 572, 1075, 375,
	376, 1076, 0, 377, 378, 379, 0, 0, 380, 381,
	382, 383, 0, 384, 385, 387, 389, 386, 388, 393,
	390, 391, 392, 395, 0, 394, 1077, 396, 397, 398,
	403, 405, 406, 401, 402, 404, 407, 400, 1078, 399,
	0, 0, 1079, 408, 409, 0, 573, 410, 574, 412,
	413, 0, 0, 414, 0, 0, 0, 416, 417, 418,
	0, 0, 419, 420, 575, 1080, 421, 1081, 576, 422,
	423, 415, 424, 425, 426, 427, 428, 429, 430, 431,
	0, 432, 433, 577, 578, 579, 434, 580, 435, 436,
	0, 437, 0, 438, 439, 440, 441, 442, 443, 444,
	581, 446, 445, 447, 0, 448, 0, 0, 0, 0,
	0, 449, 0, 451, 452, 453, 450, 454, 455, 456,
	457, 0, 458, 459, 460, 1082, 461, 462, 463, 464,
	582, 465, 0, 466, 467, 473, 474, 468, 469, 475,
	476, 477, 478, 479, 0, 481, 482, 480, 483, 484,
	485, 0, 486, 470, 471, 487, 488, 1083, 489, 490,
	491, 492, 493, 494, 583, 0, 495, 0, 496, 497,
	498, 499, 472, 500, 505, 584, 501, 502, 503, 504,
	585, 0, 507, 508, 0, 506, 0, 509, 510, 511,
	512, 513, 514, 327, 515, 0, 516, 586, 587, 588,
	589, 0, 523, 0, 517, 518, 590, 519, 591, 0,
	520, 521, 522, 0, 524, 525, 0, 0, 526, 527,
	528, 530, 531, 529, 532, 0, 533, 0, 0, 534,
	535, 536, 592, 593, 594, 0, 538, 537, 539, 595,
	0, 0, 0, 0, 540, 541, 596, 542, 543, 544,
	1310, 1309, 0, 0, 0, 0, 1307, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 250, 251,
	252, 253, 254, 0, 255, 256, 0, 0, 0, 0,
	0, 545, 0, 0, 0, 0, 257, 258, 260, 259,
	261, 262, 263, 264, 546, 547, 0, 265, 548, 266,
	549, 0, 550, 267, 268, 269, 270, 271, 272, 0,
	0, 0, 273, 551, 552, 553, 0, 274, 275, 554,
	0, 1276, 0, 276, 277, 278, 279, 280, 281, 282,
	0, 0, 284, 285, 286, 283, 0, 287, 0, 288,
	289, 290, 291, 292, 293, 0, 294, 295, 296, 1068,
	297, 298, 0, 0, 0, 0, 0, 0, 0, 299,
	300, 301, 302, 0, 303, 555, 556, 0, 307, 304,
	305, 0, 308, 306, 0, 309, 310, 311, 0, 0,
	312, 313, 314, 0, 315, 316, 0, 317, 318, 319,
	0, 320, 321, 557, 322, 323, 324, 326, 328, 325,
	329, 330, 331, 332, 558, 559, 0, 246, 0, 0,
	0, 0, 0, 333, 334, 335, 560, 0, 0, 0,
	336, 0, 337, 0, 0, 1069, 338, 339, 561, 562,
	340, 341, 0, 342, 563, 0, 564, 343, 0, 344,
	345, 346, 347, 348, 565, 566, 567, 411, 1071, 349,
	350, 0, 351, 352, 353, 354, 0, 0, 0, 0,
	355, 356, 358, 0, 1070, 357, 568, 569, 0, 570,
	0, 359, 360, 1072, 571, 1073, 361, 362, 363, 1074,
	364, 0, 0, 0, 365, 366, 367, 368, 369, 370,
	0, 371, 373, 372, 0, 374, 572, 1075, 375, 376,
	1076, 0, 377, 378, 379, 0, 0, 380, 381, 382,
	383, 0, 384, 385, 387, 389, 386, 388, 393, 390,
	391, 392, 395, 0, 394, 1077, 396, 397, 398, 403,
	405, 406, 401, 402, 404, 407, 400, 1078, 399, 0,
	0, 1079, 408, 409, 0, 573, 410, 574, 412, 413,
	0, 0, 414, 0, 0, 0, 416, 417, 418, 0,
	0, 419, 420, 575, 1080, 421, 1081, 576, 422, 423,
	415, 424, 425, 426, 427, 428, 429, 430, 431, 0,
	432, 433, 577, 578, 579, 434, 580, 435, 436, 0,
	437, 0, 438, 439, 440, 441, 442, 443, 444, 581,
	446, 445, 447, 0, 448, 0, 0, 0, 0, 0,
	449, 0, 451, 452, 453, 450, 454, 455, 456, 457,
	0, 458, 459, 460, 1082, 461, 462, 463, 464, 582,
	465, 0, 466, 467, 473, 474, 468, 469, 475, 476,
	477, 478, 479, 0, 481, 482, 480, 483, 484, 485,
	0, 486, 470, 471, 487, 488, 1083, 489, 490, 491,
	492, 493, 494, 583, 0, 495, 0, 496, 497, 498,
	499, 472, 500, 505, 584, 501, 502, 503, 504, 585,
	0, 507, 508, 0, 506, 0, 509, 510, 511, 512,
	513, 514, 327, 515, 0, 516, 586, 587, 588, 589,
	0, 523, 0, 517, 518, 590, 519, 591, 0, 520,
	521, 522, 0, 524, 525, 0, 0, 526, 527, 528,
	530, 531, 529, 532, 0, 533, 0, 0, 534, 535,
	536, 592, 593, 594, 0, 538, 537, 539, 595, 1310,
	1309, 0, 0, 540, 541, 596, 542, 543, 544, 0,
	0, 0, 0, 0, 0, 0, 249, 250, 251, 252,
	253, 254, 0, 255, 256, 0, 0, 0, 0, 0,
	545, 0, 0, 0, 0, 257, 258, 260, 259, 261,
	262, 263, 264, 546, 547, 0, 265, 548, 266, 549,
	0, 550, 267, 268, 269, 270, 271, 272, 0, 0,
	0, 273, 551, 552, 553, 0, 274, 275, 554, 0,
	1276, 0, 276, 277, 278, 279, 280, 281, 282, 0,
	0, 284, 285, 286, 283, 0, 287, 0, 288, 289,
	290, 291, 292, 293, 0, 294, 295, 296, 1068, 297,
	298, 0, 0, 0, 0, 0, 0, 0, 299, 300,
	301, 302, 0, 303, 555, 556, 1872, 307, 304, 305,
	0, 308, 306, 0, 309, 310, 311, 0, 0, 312,
	313, 314, 0, 315, 316, 0, 317, 318, 319, 0,
	320, 321, 557, 322, 323, 324, 326, 328, 325, 329,
	330, 331, 332, 558, 559, 0, 246, 0, 0, 0,
	0, 0, 333, 334, 335, 560, 0, 0, 0, 336,
	0, 337, 0, 0, 1069, 338, 339, 561, 562, 340,
	341, 0, 342, 563, 0, 564, 343, 0, 344, 345,
	346, 347, 348, 565, 566, 567, 411, 1071, 349, 350,
	0, 351, 352, 353, 354, 0, 0, 0, 0, 355,
	356, 358, 0, 1070, 357, 568, 569, 0, 570, 0,
	359, 360, 1072, 571, 1073, 361, 362, 363, 1074, 364,
	0, 0, 0, 365, 366, 367, 368, 369, 370, 0,
	371, 373, 372, 0, 374, 572, 1075, 375, 376, 1076,
	0, 377, 378, 379, 0, 0, 380, 381, 382, 383,
	0, 384, 385, 387, 389, 386, 388, 393, 390, 391,
	392, 395, 0, 394, 1077, 396, 397, 398, 403, 405,
	406, 401, 402, 404, 407, 400, 1078, 399, 0, 0,
	1079, 408, 409, 0, 573, 410, 574, 412, 413, 0,
	0, 414, 0, 0, 0, 416, 417, 418, 0, 0,
	419, 420, 575, 1080, 421, 1081, 576, 422, 423, 415,
	424, 425, 426, 427, 428, 429, 430, 431, 0, 432,
	433, 577, 578, 579, 434, 580, 435, 436, 0, 437,
	0, 438, 439, 440, 441, 442, 443, 444, 581, 446,
	445, 447, 0, 448, 0, 0, 0, 0, 0, 449,
	0, 451, 452, 453, 450, 454, 455, 456, 457, 0,
	458, 459, 460, 1082, 461, 462, 463, 464, 582, 465,
	0, 466, 467, 473, 474, 468, 469, 475, 476, 477,
	478, 479, 0, 481, 482, 480, 483, 484, 485, 0,
	486, 470, 471, 487, 488, 1083, 489, 490, 491, 492,
	493, 494, 583, 0, 495, 0, 496, 497, 498, 499,
	472, 500, 505, 584, 501, 502, 503, 504, 585, 0,
	507, 508, 0, 506, 0, 509, 510, 511, 512, 513,
	514, 327, 515, 0, 516, 586, 587, 588, 589, 0,
	523, 0, 517, 518, 590, 519, 591, 0, 520, 521,
	522, 0, 524, 525, 0, 0, 526, 527, 528, 530,
	531, 529, 532, 0, 533, 0, 0, 534, 535, 536,
	592, 593, 594, 0, 538, 537, 539, 595, 1310, 1309,
	0, 0, 540, 541, 596, 542, 543, 544, 0, 0,
	0, 0, 0, 0, 0, 249, 250, 251, 252, 253,
	254, 0, 255, 256, 0, 0, 0, 0, 0, 545,
	0, 0, 0, 0, 257, 258, 260, 259, 261, 262,
	263, 264, 546, 547, 0, 265, 548, 266, 549, 0,
	550, 267, 268, 269, 270, 271, 272, 0, 0, 0,
	273, 551, 552, 553, 0, 274, 275, 554, 0, 1276,
	0, 276, 277, 278, 279, 280, 281, 282, 0, 0,
	284, 285, 286, 283, 0, 287, 0, 288, 289, 290,
	291, 292, 293, 0, 294, 295, 296, 1068, 297, 298,
	0, 0, 0, 0, 0, 0, 0, 299, 300, 301,
	302, 0, 303, 555, 556, 0, 307, 304, 305, 0,
	308, 306, 0, 309, 310, 311, 0, 0, 312, 313,
	314, 0, 315, 316, 0, 317, 318, 319, 0, 320,
	321, 557, 322, 323, 324, 326, 328, 325, 329, 330,
	331, 332, 558, 559, 0, 246, 0, 0, 0, 0,
	0, 333, 334, 335, 560, 0, 0, 0, 336, 0,
	337, 0, 0, 1069, 338, 339, 561, 562, 340, 341,
	0, 342, 563, 0, 564, 343, 0, 344, 345, 346,
	347, 348, 565, 566, 567, 411, 1071, 349, 350, 0,
	351, 352, 353, 354, 0, 0, 0, 0, 355, 356,
	358, 0, 1070, 357, 568, 569, 0, 570, 0, 359,
	360, 1072, 571, 1073, 361, 362, 363, 1074, 364, 0,
	0, 0, 365, 366, 367, 368, 369, 370, 0, 371,
	373, 372, 0, 374, 572, 1075, 375, 376, 1076, 0,
	377, 378, 379, 0, 0, 380, 381, 382, 383, 0,
	384, 385, 387, 389, 386, 388, 393, 390, 391, 392,
	395, 0, 394, 1077, 396, 397, 398, 403, 405, 406,
	401, 402, 404, 407, 400, 1078, 399, 0, 0, 1079,
	408, 409, 0, 573, 410, 574, 412, 413, 0, 0,
	414, 0, 0, 0, 416, 417, 418, 0, 0, 419,
	420, 575, 1080, 421, 1081, 576, 422, 423, 415, 424,
	425, 426, 427, 428, 429, 430, 431, 0, 432, 433,
	577, 578, 579, 434, 580, 435, 436, 0, 437, 0,
	438, 439, 440, 441, 442, 443, 444, 581, 446, 445,
	447, 0, 448, 0, 0, 0, 0, 0, 449, 0,
	451, 452, 453, 450, 454, 455, 456, 457, 0, 458,
	459, 460, 1082, 461, 462, 463, 464, 582, 465, 0,
	466, 467, 473, 474, 468, 469, 475, 476, 477, 478,
	479, 0, 481, 482, 480, 483, 484, 485, 0, 486,
	470, 471, 487, 488, 1083, 489, 490, 491, 492, 493,
	494, 583, 0, 495, 0, 496, 497, 498, 499, 472,
	500, 505, 584, 501, 502, 503, 504, 585, 0, 507,
	508, 0, 506, 0, 509, 510, 511, 512, 513, 514,
	327, 515, 0, 516, 586, 587, 588, 589, 0, 523,
	0, 517, 518, 590, 519, 591, 0, 520, 521, 522,
	0, 524, 525, 0, 0, 526, 527, 528, 530, 531,
	529, 532, 0, 533, 0, 0, 534, 535, 536, 592,
	593, 594, 1310, 538, 537, 539, 595, 0, 0, 0,
	0, 540, 541, 596, 542, 543, 544, 0, 0, 249,
	250, 251, 252, 253, 254, 0, 255, 256, 0, 0,
	0, 0, 0, 545, 0, 0, 0, 0, 257, 258,
	260, 259, 261, 262, 263, 264, 546, 547, 0, 265,
	548, 266, 549, 0, 550, 267, 268, 269, 270, 271,
	272, 0, 0, 0, 273, 551, 552, 553, 0, 274,
	275, 554, 0, 1276, 0, 276, 277, 278, 279, 280,
	281, 282, 0, 0, 284, 285, 286, 283, 0, 287,
	0, 288, 289, 290, 291, 292, 293, 0, 294, 295,
	296, 1068, 297, 298, 0, 0, 0, 0, 0, 0,
	0, 299, 300, 301, 302, 0, 303, 555, 556, 0,
	307, 304, 305, 0, 308, 306, 0, 309, 310, 311,
	0, 0, 312, 313, 314, 0, 315, 316, 0, 317,
	318, 319, 0, 320, 321, 557, 322, 323, 324, 326,
	328, 325, 329, 330, 331, 332, 558, 559, 0, 246,
	0, 0, 0, 0, 0, 333, 334, 335, 560, 0,
	0, 0, 336, 0, 337, 0, 0, 1069, 338, 339,
	561, 562, 340, 341, 0, 342, 563, 0, 564, 343,
	0, 344, 345, 346, 347, 348, 565, 566, 567, 411,
	1071, 349, 350, 0, 351, 352, 353, 354, 0, 0,
	0, 0, 355, 356, 358, 0, 1070, 357, 568, 569,
	0, 570, 0, 359, 360, 1072, 571, 1073, 361, 362,
	363, 1074, 364, 0, 0, 0, 365, 366, 367, 368,
	369, 370, 0, 371, 373, 372, 0, 374, 572, 1075,
	375, 376, 1076, 0, 377, 378, 379, 0, 0, 380,
	381, 382, 383, 0, 384, 385, 387, 389, 386, 388,
	393, 390, 391, 392, 395, 0, 394, 1077, 396, 397,
	398, 403, 405, 406, 401, 402, 404, 407, 400, 1078,
	399, 0, 0, 1079, 408, 409, 0, 573, 410, 574,
	412, 413, 0, 0, 414, 0, 0, 0, 416, 417,
	418, 0, 0, 419, 420, 575, 1080, 421, 1081, 576,
	422, 423, 415, 424, 425, 426, 427, 428, 429, 430,
	431, 0, 432, 433, 577, 578, 579, 434, 580, 435,
	436, 0, 437, 0, 438, 439, 440, 441, 442, 443,
	444, 581, 446, 445, 447, 0, 448, 0, 0, 0,
	0, 0, 449, 0, 451, 452, 453, 450, 454, 455,
	456, 457, 0, 458, 459, 460, 1082, 461, 462, 463,
	464, 582, 465, 0, 466, 467, 473, 474, 468, 469,
	475, 476, 477, 478, 479, 0, 481, 482, 480, 483,
	484, 485, 0, 486, 470, 471, 487, 488, 1083, 489,
	490, 491, 492, 493, 494, 583, 0, 495, 0, 496,
	497, 498, 499, 472, 500, 505, 584, 501, 502, 503,
	504, 585, 0, 507, 508, 0, 506, 0, 509, 510,
	511, 512, 513, 514, 327, 515, 0, 516, 586, 587,
	588, 589, 0, 523, 0, 517, 518, 590, 519, 591,
	0, 520, 521, 522, 0, 524, 525, 0, 0, 526,
	527, 528, 530, 531, 529, 532, 0, 533, 0, 0,
	534, 535, 536, 592, 593, 594, 243, 538, 537, 539,
	595, 0, 0, 0, 0, 540, 541, 596, 542, 543,
	544, 0, 0, 249, 250, 251, 252, 253, 254, 0,
	255, 256, 0, 0, 0, 0, 0, 545, 0, 0,
	0, 0, 257, 258, 260, 259, 261, 262, 263, 264,
	546, 547, 0, 265, 548, 266, 549, 0, 550, 267,
	268, 269, 270, 271, 272, 0, 0, 0, 273, 551,
	552, 553, 2519, 274, 275, 554, 0, 0, 0, 276,
	277, 278, 279, 280, 281, 282, 0, 0, 284, 285,
	286, 283, 2516, 287, 0, 288, 289, 290, 291, 292,
	293, 0, 294, 295, 296, 0, 297, 298, 0, 0,
	0, 0, 0, 0, 0, 299, 300, 301, 302, 0,
	303, 555, 556, 0, 307, 304, 305, 0, 308, 306,
	0, 309, 310, 311, 0, 0, 312, 313, 314, 0,
	315, 316, 0, 317, 318, 319, 0, 2523, 321, 557,
	322, 323, 324, 326, 328, 325, 329, 330, 331, 332,
	558, 559, 0, 2722, 0, 0, 0, 0, 0, 333,
	334, 335, 560, 0, 0, 0, 336, 0, 337, 2522,
	0, 0, 338, 339, 561, 562, 340, 341, 0, 342,
	563, 0, 564, 343, 0, 344, 345, 346, 347, 348,
	565, 566, 567, 411, 0, 349, 350, 0, 351, 352,
	353, 354, 0, 0, 0, 2719, 355, 356, 358, 0,
	0, 357, 568, 569, 0, 570, 0, 359, 2721, 0,
	571, 0, 361, 362, 363, 0, 364, 0, 0, 0,
	365, 366, 367, 368, 369, 370, 0, 371, 373, 372,
	0, 374, 572, 0, 375, 376, 2718, 0, 377, 378,
	379, 0, 0, 380, 381, 382, 383, 0, 384, 385,
	387, 389, 386, 388, 393, 390, 391, 392, 395, 0,
	394, 0, 396, 397, 398, 403, 405, 406, 401, 402,
	404, 407, 400, 0, 399, 0, 0, 0, 408, 409,
	0, 573, 410, 574, 412, 413, 0, 0, 414, 0,
	0, 0, 416, 417, 418, 0, 0, 419, 420, 575,
	0, 421, 0, 576, 422, 423, 415, 424, 425, 426,
	427, 428, 429, 430, 431, 0, 432, 433, 577, 578,
	579, 434, 580, 435, 436, 2521, 437, 0, 438, 439,
	440, 441, 442, 443, 444, 581, 446, 445, 447, 0,
	448, 0, 0, 0, 0, 0, 449, 0, 451, 452,
	453, 450, 454, 455, 456, 457, 0, 458, 459, 460,
	0, 461, 462, 463, 464, 582, 465, 0, 466, 467,
	473, 474, 468, 469, 475, 476, 477, 478, 479, 0,
	481, 482, 480, 483, 484, 485, 0, 486, 470, 471,
	487, 488, 0, 489, 490, 491, 492, 493, 494, 583,
	0, 495, 0, 496, 497, 498, 499, 472, 500, 505,
	584, 501, 502, 503, 504, 585, 0, 507, 508, 0,
	506, 0, 509, 510, 511, 512, 513, 514, 327, 515,
	0, 516, 586, 587, 588, 589, 0, 523, 0, 517,
	518, 590, 519, 591, 0, 520, 521, 522, 0, 524,
	525, 0, 2720, 526, 527, 528, 530, 531, 529, 532,
	0, 533, 0, 0, 534, 535, 536, 592, 593, 594,
	243, 538, 537, 539, 595, 0, 0, 0, 0, 540,
	541, 596, 542, 543, 544, 0, 0, 249, 250, 251,
	252, 253, 254, 0, 255, 256, 0, 0, 0, 0,
	0, 545, 0, 0, 0, 0, 257, 258, 260, 259,
	261, 262, 263, 264, 546, 547, 0, 265, 548, 266,
	549, 0, 550, 267, 268, 269, 270, 271, 272, 0,
	0, 0, 273, 551, 552, 553, 2519, 274, 275, 554,
	0, 0, 2513, 276, 277, 278, 279, 280, 281, 282,
	0, 0, 284, 285, 286, 283, 2516, 287, 0, 288,
	289, 290, 291, 292, 293, 0, 294, 295, 296, 0,
	297, 298, 0, 0, 0, 0, 0, 0, 0, 299,
	300, 301, 302, 0, 303, 555, 556, 0, 307, 304,
	305, 0, 308, 306, 0, 309, 310, 311, 0, 0,
	312, 313, 314, 0, 315, 316, 0, 317, 318, 319,
	0, 2523, 321, 557, 322, 323, 324, 326, 328, 325,
	329, 330, 331, 332, 558, 559, 0, 0, 0, 0,
	0, 0, 0, 333, 334, 335, 560, 0, 0, 0,
	336, 0, 337, 2522, 0, 0, 338, 339, 561, 562,
	340, 341, 0, 342, 563, 0, 564, 343, 0, 344,
	345, 346, 347, 348, 2512, 566, 567, 411, 0, 349,
	350, 0, 351, 352, 353, 354, 0, 0, 0, 0,
	355, 356, 358, 0, 0, 357, 568, 569, 0, 570,
	0, 359, 360, 0, 571, 0, 361, 362, 363, 0,
	364, 0, 0, 0, 365, 366, 367, 368, 369, 370,
	0, 371, 373, 372, 0, 374, 572, 0, 375, 376,
	0, 0, 377, 378, 379, 0, 0, 380, 381, 382,
	383, 0, 384, 385, 387, 389, 386, 388, 393, 390,
	391, 392, 395, 0, 394, 0, 396, 397, 398, 403,
	405, 406, 401, 402, 404, 407, 400, 0, 399, 0,
	0, 0, 408, 409, 0, 573, 410, 574, 412, 413,
	0, 0, 414, 0, 0, 0, 416, 417, 418, 0,
	0, 419, 420, 575, 0, 421, 0, 576, 422, 423,
	415, 424, 425, 426, 427, 428, 429, 430, 431, 0,
	432, 433, 577, 578, 579, 434, 580, 435, 436, 2521,
	437, 0, 438, 439, 440, 441, 442, 443, 444, 581,
	446, 445, 447, 0, 448, 0, 0, 0, 0, 0,
	449, 0, 451, 452, 453, 450, 454, 455, 456, 457,
	0, 458, 459, 460, 0, 461, 462, 463, 464, 582,
	465, 0, 466, 467, 473, 474, 468, 469, 475, 476,
	477, 478, 479, 0, 481, 482, 480, 483, 484, 485,
	0, 486, 470, 471, 487, 488, 0, 489, 490, 491,
	492, 493, 494, 583, 0, 495, 0, 496, 497, 498,
	499, 472, 500, 505, 584, 501, 502, 503, 504, 585,
	0, 507, 508, 0, 506, 0, 509, 510, 511, 512,
	513, 514, 327, 515, 0, 516, 586, 587, 588, 589,
	0, 523, 0, 517, 518, 590, 519, 591, 0, 520,
	521, 522, 0, 524, 525, 0, 2520, 526, 527, 528,
	530, 531, 529, 532, 0, 533, 0, 0, 534, 535,
	536, 592, 593, 594, 0, 538, 537, 539, 595, 1576,
	0, 243, 0, 540, 541, 596, 542, 543, 544, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 249, 250,
	251, 252, 253, 254, 0, 255, 256, 0, 0, 0,
	0, 0, 545, 0, 0, 0, 0, 257, 258, 260,
	259, 261, 262, 263, 264, 546, 547, 0, 265, 548,
	266, 549, 0, 550, 267, 268, 269, 270, 271, 272,
	0, 0, 0, 273, 551, 552, 553, 0, 274, 275,
	554, 0, 0, 0, 276, 277, 278, 279, 280, 281,
	282, 0, 0, 284, 285, 286, 283, 0, 287, 0,
	288, 289, 290, 291, 292, 293, 0, 294, 295, 296,
	0, 297, 298, 0, 0, 0, 0, 0, 0, 0,
	299, 300, 301, 302, 0, 303, 555, 556, 0, 307,
	304, 305, 0, 308, 306, 0, 309, 310, 311, 0,
	0, 312, 313, 314, 0, 315, 316, 0, 317, 318,
	319, 0, 320, 321, 557, 322, 323, 324, 326, 328,
	325, 329, 330, 331, 332, 558, 559, 0, 246, 0,
	0, 0, 0, 0, 333, 334, 335, 560, 0, 0,
	0, 336, 0, 337, 0, 0, 0, 338, 339, 561,
	562, 340, 341, 0, 342, 563, 0, 564, 343, 0,
	344, 345, 346, 347, 348, 565, 566, 567, 411, 0,
	349, 350, 0, 351, 352, 353, 354, 0, 0, 0,
	247, 355, 356, 358, 0, 0, 357, 568, 569, 0,
	570, 0, 359, 360, 0, 571, 0, 361, 362, 363,
	0, 364, 0, 0, 0, 365, 366, 367, 368, 369,
	370, 0, 371, 373, 372, 0, 374, 572, 0, 375,
	376, 0, 0, 377, 378, 379, 0, 0, 380, 381,
	382, 383, 0, 384, 385, 387, 389, 386, 388, 393,
	390, 391, 392, 395, 0, 394, 0, 396, 397, 398,
	403, 405, 406, 401, 402, 404, 407, 400, 0, 399,
	0, 248, 0, 408, 409, 0, 573, 410, 574, 412,
	413, 0, 0, 414, 0, 0, 0, 416, 417, 418,
	0, 0, 419, 420, 575, 0, 421, 0, 576, 422,
	423, 415, 424, 425, 426, 427, 428, 429, 430, 431,
	0, 432, 433, 577, 578, 579, 434, 580, 435, 436,
	0, 437, 0, 438, 439, 440, 441, 442, 443, 444,
	581, 446, 445, 447, 0, 448, 0, 0, 0, 0,
	0, 449, 0, 451, 452, 453, 450, 454, 455, 456,
	457, 0, 458, 459, 460, 0, 461, 462, 463, 464,
	582, 465, 0, 466, 467, 473, 474, 468, 469, 475,
	476, 477, 478, 479, 0, 1579, 482, 480, 483, 484,
	485, 0, 486, 470, 471, 487, 488, 0, 489, 490,
	491, 492, 493, 494, 583, 0, 495, 0, 496, 497,
	498, 499, 472, 500, 505, 584, 501, 502, 503, 504,
	585, 0, 507, 508, 0, 506, 1577, 509, 510, 511,
	512, 513, 514, 327, 515, 0, 516, 586, 587, 588,
	589, 0, 523, 0, 517, 518, 590, 519, 591, 0,
	520, 521, 522, 0, 524, 525, 0, 0, 526, 527,
	528, 530, 531, 529, 532, 0, 533, 0, 0, 534,
	535, 536, 592, 593, 594, 0, 1578, 537, 539, 595,
	1280, 0, 243, 0, 540, 541, 596, 542, 543, 544,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	250, 251, 252, 253, 254, 0, 255, 256, 0, 0,
	0, 0, 0, 545, 0, 0, 0, 0, 257, 258,
	260, 259, 261, 262, 263, 264, 546, 547, 0, 265,
	548, 266, 549, 0, 550, 267, 268, 269, 270, 271,
	272, 0, 0, 0, 273, 551, 552, 553, 0, 274,
	275, 554, 0, 0, 0, 276, 277, 278, 279, 280,
	281, 282, 0, 0, 284, 285, 286, 283, 0, 287,
	0, 288, 289, 290, 291, 292, 293, 0, 294, 295,
	296, 0, 297, 298, 0, 0, 0, 0, 0, 0,
	0, 299, 300, 301, 302, 0, 303, 555, 556, 0,
	307, 304, 305, 0, 308, 306, 0, 309, 310, 311,
	0, 0, 312, 313, 314, 0, 315, 316, 0, 317,
	318, 319, 0, 320, 321, 557, 322, 323, 324, 326,
	328, 325, 329, 330, 331, 332, 558, 559, 0, 246,
	0, 0, 0, 0, 0, 333, 334, 335, 560, 0,
	0, 0, 336, 0, 337, 0, 0, 0, 338, 339,
	561, 562, 340, 341, 0, 342, 563, 0, 564, 343,
	0, 344, 345, 346, 347, 348, 1282, 566, 567, 411,
	0, 349, 350, 0, 351, 352, 353, 354, 0, 0,
	0, 247, 355, 356, 358, 0, 0, 357, 568, 569,
	0, 570, 0, 359, 360, 0, 571, 0, 361, 362,
	363, 0, 364, 0, 0, 0, 365, 366, 367, 368,
	369, 370, 0, 371, 373, 372, 0, 374, 572, 0,
	375, 376, 0, 0, 377, 378, 379, 0, 0, 380,
	381, 382, 383, 0, 384, 385, 387, 389, 386, 388,
	393, 390, 391, 392, 395, 0, 394, 0, 396, 397,
	398, 403, 405, 406, 401, 402, 404, 407, 400, 0,
	399, 0, 248, 0, 408, 409, 0, 573, 410, 574,
	412, 413, 0, 0, 414, 0, 0, 1117, 416, 417,
	418, 0, 0, 419, 420, 575, 0, 421, 0, 576,
	422, 423, 415, 424, 425, 426, 427, 428, 429, 430,
	431, 0, 432, 433, 577, 578, 579, 434, 580, 435,
	436, 0, 437, 0, 438, 439, 440, 441, 442, 443,
	444, 581, 446, 445, 447, 0, 448, 0, 0, 0,
	0, 0, 449, 0, 451, 452, 453, 450, 454, 455,
	456, 457, 0, 458, 459, 460, 0, 461, 462, 463,
	464, 582, 465, 0, 466, 467, 473, 474, 468, 469,
	475, 476, 477, 478, 479, 0, 481, 482, 480, 483,
	484, 485, 0, 486, 470, 471, 487, 488, 0, 489,
	490, 491, 492, 493, 494, 583, 0, 495, 0, 496,
	497, 498, 499, 472, 500, 505, 584, 501, 502, 503,
	504, 585, 0, 507, 508, 0, 506, 0, 509, 510,
	511, 512, 513, 514, 327, 515, 0, 516, 586, 587,
	588, 589, 0, 523, 0, 517, 518, 590, 519, 591,
	0, 520, 521, 522, 0, 524, 525, 0, 0, 526,
	527, 528, 530, 531, 529, 532, 0, 533, 0, 0,
	534, 535, 536, 592, 593, 594, 0, 538, 537, 539,
	595, 1277, 0, 243, 0, 540, 541, 596, 542, 543,
	544, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	249, 250, 251, 252, 253, 254, 0, 255, 256, 0,
	0, 0, 0, 0, 545, 0, 0, 0, 0, 257,
	258, 260, 259, 261, 262, 263, 264, 546, 547, 0,
	265, 548, 266, 549, 0, 550, 267, 268, 269, 270,
	271, 272, 0, 0, 0, 273, 551, 552, 553, 0,
	274, 275, 554, 0, 0, 0, 276, 277, 278, 279,
	280, 281, 282, 0, 0, 284, 285, 286, 283, 0,
	287, 0, 288, 289, 290, 291, 292, 293, 0, 294,
	295, 296, 0, 297, 298, 0, 0, 0, 0, 0,
	0, 0, 299, 300, 301, 302, 0, 303, 555, 556,
	0, 307, 304, 305, 0, 308, 306, 0, 309, 310,
	311, 0, 0, 312, 313, 314, 0, 315, 316, 0,
	317, 318, 319, 0, 320, 321, 557, 322, 323, 324,
	326, 328, 325, 329, 330, 331, 332, 558, 559, 0,
	246, 0, 0, 0, 0, 0, 333, 334, 335, 560,
	0, 0, 0, 336, 0, 337, 0, 0, 0, 338,
	339, 561, 562, 340, 341, 0, 342, 563, 0, 564,
	343, 0, 344, 345, 346, 347, 348, 1279, 566, 567,
	411, 0, 349, 350, 0, 351, 352, 353, 354, 0,
	0, 0, 247, 355, 356, 358, 0, 0, 357, 568,
	569, 0, 570, 0, 359, 360, 0, 571, 0, 361,
	362, 363, 0, 364, 0, 0, 0, 365, 366, 367,
	368, 369, 370, 0, 371, 373, 372, 0, 374, 572,
	0, 375, 376, 0, 0, 377, 378, 379, 0, 0,
	380, 381, 382, 383, 0, 384, 385, 387, 389, 386,
	388, 393, 390, 391, 392, 395, 0, 394, 0, 396,
	397, 398, 403, 405, 406, 401, 402, 404, 407, 400,
	0, 399, 0, 248, 0, 408, 409, 0, 573, 410,
	574, 412, 413, 0, 0, 414, 0, 0, 1117, 416,
	417, 418, 0, 0, 419, 420, 575, 0, 421, 0,
	576, 422, 423, 415, 424, 425, 426, 427, 428, 429,
	430, 431, 0, 432, 433, 577, 578, 579, 434, 580,
	435, 436, 0, 437, 0, 438, 439, 440, 441, 442,
	443, 444, 581, 446, 445, 447, 0, 448, 0, 0,
	0, 0, 0, 449, 0, 451, 452, 453, 450, 454,
	455, 456, 457, 0, 458, 459, 460, 0, 461, 462,
	463, 464, 582, 465, 0, 466, 467, 473, 474, 468,
	469, 475, 476, 477, 478, 479, 0, 481, 482, 480,
	483, 484, 485, 0, 486, 470, 471, 487, 488, 0,
	489, 490, 491, 492, 493, 494, 583, 0, 495, 0,
	496, 497, 498, 499, 472, 500, 505, 584, 501, 502,
	503, 504, 585, 0, 507, 508, 0, 506, 0, 509,
	510, 511, 512, 513, 514, 327, 515, 0, 516, 586,
	587, 588, 589, 0, 523, 0, 517, 518, 590, 519,
	591, 0, 520, 521, 522, 0, 524, 525, 0, 0,
	526, 527, 528, 530, 531, 529, 532, 0, 533, 0,
	0, 534, 535, 536, 592, 593, 594, 0, 538, 537,
	539, 595, 1183, 0, 243, 0, 540, 541, 596, 542,
	543, 544, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 250, 251, 252, 253, 254, 0, 255, 256,
	0, 0, 0, 0, 0, 545, 0, 0, 0, 0,
	257, 258, 260, 259, 261, 262, 263, 264, 546, 547,
	0, 265, 548, 266, 549, 0, 550, 267, 268, 269,
	270, 271, 272, 0, 0, 0, 273, 551, 552, 553,
	0, 274, 275, 554, 0, 0, 0, 276, 277, 278,
	279, 280, 281, 282, 0, 0, 284, 285, 286, 283,
	0, 287, 0, 288, 289, 290, 291, 292, 293, 0,
	294, 295, 296, 0, 297, 298, 0, 0, 0, 0,
	0, 0, 0, 299, 300, 301, 302, 0, 303, 555,
	556, 0, 307, 304, 305, 0, 308, 306, 0, 309,
	310, 311, 0, 0, 312, 313, 314, 0, 315, 316,
	0, 317, 318, 319, 0, 320, 321, 557, 322, 323,
	324, 326, 328, 325, 329, 330, 331, 332, 558, 559,
	0, 246, 0, 0, 0, 0, 0, 333, 334, 335,
	560, 0, 0, 0, 336, 0, 337, 0, 0, 0,
	338, 339, 561, 562, 340, 341, 0, 342, 563, 0,
	564, 343, 0, 344, 345, 346, 347, 348, 1185, 566,
	567, 411, 0, 349, 350, 0, 351, 352, 353, 354,
	0, 0, 0, 247, 355, 356, 358, 0, 0, 357,
	568, 569, 0, 570, 0, 359, 360, 0, 571, 0,
	361, 362, 363, 0, 364, 0, 0, 0, 365, 366,
	367, 368, 369, 370, 0, 371, 373, 372, 0, 374,
	572, 0, 375, 376, 0, 0, 377, 378, 379, 0,
	0, 380, 381, 382, 383, 0, 384, 385, 387, 389,
	386, 388, 393, 390, 391, 392, 395, 0, 394, 0,
	396, 397, 398, 403, 405, 406, 401, 402, 404, 407,
	400, 0, 399, 0, 248, 0, 408, 409, 0, 573,
	410, 574, 412, 413, 0, 0, 414, 0, 0, 1117,
	416, 417, 418, 0, 0, 419, 420, 575, 0, 421,
	0, 576, 422, 423, 415, 424, 425, 426, 427, 428,
	429, 430, 431, 0, 432, 433, 577, 578, 579, 434,
	580, 435, 436, 0, 437, 0, 438, 439, 440, 441,
	442, 443, 444, 581, 446, 445, 447, 0, 448, 0,
	0, 0, 0, 0, 449, 0, 451, 452, 453, 450,
	454, 455, 456, 457, 0, 458, 459, 460, 0, 461,
	462, 463, 464, 582, 465, 0, 466, 467, 473, 474,
	468, 469, 475, 476, 477, 478, 479, 0, 481, 482,
	480, 483, 484, 485, 0, 486, 470, 471, 487, 488,
	0, 489, 490, 491, 492, 493, 494, 583, 0, 495,
	0, 496, 497, 498, 499, 472, 500, 505, 584, 501,
	502, 503, 504, 585, 0, 507, 508, 0, 506, 0,
	509, 510, 511, 512, 513, 514, 327, 515, 0, 516,
	586, 587, 588, 589, 0, 523, 0, 517, 518, 590,
	519, 591, 0, 520, 521, 522, 0, 524, 525, 0,
	0, 526, 527, 528, 530, 531, 529, 532, 0, 533,
	0, 0, 534, 535, 536, 592, 593, 594, 0, 538,
	537, 539, 595, 628, 0, 243, 0, 540, 541, 596,
	542, 543, 544, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 250, 251, 627, 253, 254, 617, 255,
	256, 0, 0, 0, 0, 0, 545, 0, 0, 0,
	0, 257, 258, 260, 259, 261, 262, 263, 264, 546,
	547, 0, 265, 548, 266, 549, 0, 550, 267, 268,
	269, 270, 271, 272, 0, 0, 0, 273, 551, 552,
	553, 0, 274, 275, 554, 0, 0, 0, 276, 277,
	278, 279, 280, 281, 282, 0, 0, 284, 285, 286,
	283, 0, 287, 0, 288, 289, 290, 291, 292, 293,
	620, 294, 295, 296, 0, 297, 298, 0, 0, 0,
	0, 0, 0, 0, 299, 300, 301, 302, 0, 303,
	555, 556, 0, 307, 304, 305, 0, 308, 306, 0,
	309, 310, 311, 0, 0, 312, 313, 314, 0, 315,
	316, 0, 317, 318, 319, 0, 320, 321, 557, 322,
	323, 324, 326, 328, 325, 329, 330, 331, 332, 558,
	559, 0, 0, 0, 0, 0, 0, 0, 333, 334,
	335, 560, 0, 0, 0, 336, 0, 337, 0, 0,
	0, 338, 339, 561, 562, 340, 341, 621, 342, 563,
	0, 564, 343, 0, 344, 345, 346, 347, 348, 565,
	566, 567, 411, 0, 349, 350, 0, 351, 352, 353,
	354, 0, 0, 0, 0, 355, 356, 358, 0, 0,
	357, 568, 569, 0, 570, 0, 359, 360, 0, 571,
	0, 361, 362, 363, 0, 364, 0, 0, 0, 365,
	366, 367, 368, 369, 370, 0, 371, 373, 372, 0,
	374, 572, 0, 375, 376, 0, 0, 377, 378, 379,
	0, 0, 380, 381, 382, 383, 0, 384, 385, 387,
	389, 386, 388, 393, 390, 391, 392, 395, 0, 394,
	0, 396, 397, 398, 403, 405, 406, 401, 402, 404,
	407, 400, 0, 399, 0, 0, 0, 408, 409, 0,
	573, 410, 574, 412, 413, 0, 0, 414, 0, 0,
	0, 416, 417, 418, 0, 0, 419, 420, 575, 0,
	421, 0, 576, 422, 423, 415, 424, 425, 426, 427,
	428, 429, 430, 431, 0, 432, 433, 577, 578, 579,
	434, 580, 435, 436, 0, 437, 0, 438, 439, 440,
	441, 442, 443, 444, 581, 446, 445, 447, 0, 448,
	0, 0, 0, 0, 0, 449, 0, 451, 452, 453,
	450, 454, 455, 456, 457, 0, 458, 459, 460, 0,
	461, 462, 463, 464, 582, 465, 0, 466, 467, 473,
	474, 468, 469, 475, 476, 477, 478, 479, 622, 481,
	482, 480, 483, 484, 485, 0, 486, 470, 471, 487,
	488, 0, 489, 490, 491, 492, 493, 494, 583, 0,
	495, 0, 496, 497, 498, 499, 472, 500, 505, 584,
	501, 502, 503, 504, 585, 0, 507, 508, 0, 506,
	0, 509, 510, 511, 512, 513, 514, 327, 515, 0,
	516, 586, 587, 588, 589, 0, 523, 0, 517, 518,
	590, 519, 591, 0, 520, 521, 522, 0, 524, 525,
	0, 0, 526, 527, 528, 530, 531, 529, 532, 0,
	533, 0, 0, 534, 535, 536, 592, 593, 594, 0,
	538, 537, 539, 595, 616, 0, 243, 0, 540, 541,
	596, 542, 543, 544, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 250, 251, 252, 253, 254, 617,
	255, 256, 0, 0, 0, 0, 0, 545, 0, 0,
	0, 0, 257, 258, 260, 259, 261, 262, 263, 264,
	546, 547, 0, 265, 548, 266, 549, 0, 550, 267,
	268, 269, 270, 271, 272, 0, 0, 0, 273, 551,
	552, 553, 0, 274, 275, 554, 0, 0, 0, 276,
	277, 278, 279, 280, 281, 282, 0, 0, 284, 285,
	286, 283, 0, 287, 0, 288, 289, 290, 291, 292,
	293, 620, 294, 295, 296, 0, 297, 298, 0, 0,
	0, 0, 0, 0, 0, 299, 300, 301, 302, 0,
	303, 555, 556, 0, 307, 304, 305, 0, 308, 306,
	0, 309, 310, 311, 0, 0, 312, 313, 314, 0,
	315, 316, 0, 317, 318, 319, 0, 320, 321, 557,
	322, 323, 324, 326, 328, 325, 329, 330, 331, 332,
	558, 559, 0, 0, 0, 0, 0, 0, 0, 333,
	334, 335, 560, 0, 0, 0, 336, 0, 337, 0,
	0, 0, 338, 339, 561, 562, 340, 341, 621, 342,
	563, 0, 564, 343, 0, 344, 345, 346, 347, 348,
	565, 566, 567, 411, 0, 349, 350, 0, 351, 352,
	353, 354, 0, 0, 0, 0, 355, 356, 358, 0,
	0, 357, 568, 569, 0, 570, 0, 359, 360, 0,
	571, 0, 361, 362, 363, 0, 364, 0, 0, 0,
	365, 366, 367, 368, 369, 370, 0, 371, 373, 372,
	0, 374, 572, 0, 375, 376, 0, 0, 377, 378,
	379, 0, 0, 380, 381, 382, 383, 0, 384, 385,
	387, 389, 386, 388, 393, 390, 391, 392, 395, 0,
	394, 0, 396, 397, 398, 403, 405, 406, 401, 402,
	404, 407, 400, 0, 399, 0, 0, 0, 408, 409,
	0, 573, 410, 574, 412, 413, 0, 0, 414, 0,
	0, 0, 416, 417, 418, 0, 0, 419, 420, 575,
	0, 421, 0, 576, 422, 423, 415, 424, 425, 426,
	427, 428, 429, 430, 431, 0, 432, 433, 577, 578,
	579, 434, 580, 435, 436, 0, 437, 0, 438, 439,
	440, 441, 442, 443, 444, 581, 446, 445, 447, 0,
	448, 0, 0, 0, 0, 0, 449, 0, 451, 452,
	453, 450, 454, 455, 456, 457, 0, 458, 459, 460,
	0, 461, 462, 463, 464, 582, 465, 0, 466, 467,
	473, 474, 468, 469, 475, 476, 477, 478, 479, 622,
	481, 482, 480, 483, 484, 485, 0, 486, 470, 471,
	487, 488, 0, 489, 490, 491, 492, 493, 494, 583,
	0, 495, 0, 496, 497, 498, 499, 472, 500, 505,
	584, 501, 502, 503, 504, 585, 0, 507, 508, 0,
	506, 0, 509, 510, 511, 512, 513, 514, 327, 515,
	0, 516, 586, 587, 588, 589, 0, 523, 0, 517,
	518, 590, 519, 591, 0, 520, 521, 522, 0, 524,
	525, 0, 0, 526, 527, 528, 530, 531, 529, 532,
	0, 533, 0, 0, 534, 535, 536, 592, 593, 594,
	243, 538, 537, 539, 595, 0, 0, 0, 0, 540,
	541, 596, 542, 543, 544, 0, 0, 249, 250, 251,
	252, 253, 254, 0, 255, 256, 0, 0, 0, 0,
	0, 545, 0, 0, 0, 0, 257, 258, 260, 259,
	261, 262, 263, 264, 546, 547, 0, 265, 548, 266,
	549, 0, 550, 267, 268, 269, 270, 271, 272, 0,
	0, 0, 273, 551, 552, 553, 0, 274, 275, 554,
	0, 0, 0, 276, 277, 278, 279, 280, 281, 282,
	0, 0, 284, 285, 286, 283, 0, 287, 0, 288,
	289, 290, 291, 292, 293, 0, 294, 295, 296, 0,
	297, 298, 0, 0, 0, 0, 0, 0, 0, 299,
	300, 301, 302, 0, 303, 555, 556, 0, 307, 304,
	305, 0, 308, 306, 0, 309, 310, 311, 0, 0,
	312, 313, 314, 0, 315, 316, 0, 317, 318, 319,
	0, 320, 321, 557, 322, 323, 324, 326, 328, 325,
	329, 330, 331, 332, 558, 559, 0, 246, 0, 0,
	0, 0, 0, 333, 334, 335, 560, 0, 0, 0,
	336, 0, 337, 0, 0, 0, 338, 339, 561, 562,
	340, 341, 0, 342, 563, 0, 564, 343, 0, 344,
	345, 346, 347, 348, 565, 566, 567, 411, 0, 349,
	350, 0, 351, 352, 353, 354, 0, 0, 0, 247,
	355, 356, 358, 0, 0, 357, 568, 569, 0, 570,
	0, 359, 360, 0, 571, 0, 361, 362, 363, 0,
	364, 0, 0, 0, 365, 366, 367, 368, 369, 370,
	0, 371, 373, 372, 0, 374, 572, 0, 375, 376,
	0, 0, 377, 378, 379, 0, 0, 380, 381, 382,
	383, 0, 384, 385, 387, 389, 386, 388, 393, 390,
	391, 392, 395, 0, 394, 0, 396, 397, 398, 403,
	405, 406, 401, 402, 404, 407, 400, 0, 399, 0,
	248, 0, 408, 409, 0, 573, 410, 574, 412, 413,
	0, 0, 414, 0, 0, 1117, 416, 417, 418, 0,
	0, 419, 420, 575, 0, 421, 0, 576, 422, 423,
	415, 424, 425, 426, 427, 428, 429, 430, 431, 0,
	432, 433, 577, 578, 579, 434, 580, 435, 436, 0,
	437, 0, 438, 439, 440, 441, 442, 443, 444, 581,
	446, 445, 447, 0, 448, 0, 0, 0, 0, 0,
	449, 0, 451, 452, 453, 450, 454, 455, 456, 457,
	0, 458, 459, 460, 0, 461, 462, 463, 464, 582,
	465, 0, 466, 467, 473, 474, 468, 469, 475, 476,
	477, 478, 479, 0, 481, 482, 480, 483, 484, 485,
	0, 486, 470, 471, 487, 488, 0, 489, 490, 491,
	492, 493, 494, 583, 0, 495, 0, 496, 497, 498,
	499, 472, 500, 505, 584, 501, 502, 503, 504, 585,
	0, 507, 508, 0, 506, 0, 509, 510, 511, 512,
	513, 514, 327, 515, 0, 516, 586, 587, 588, 589,
	0, 523, 0, 517, 518, 590, 519, 591, 0, 520,
	521, 522, 0, 524, 525, 0, 0, 526, 527, 528,
	530, 531, 529, 532, 0, 533, 0, 0, 534, 535,
	536, 592, 593, 594, 243, 538, 537, 539, 595, 0,
	0, 0, 0, 540, 541, 596, 542, 543, 544, 0,
	0, 249, 250, 251, 252, 253, 254, 0, 255, 256,
	0, 0, 0, 0, 0, 545, 0, 0, 0, 0,
	257, 258, 260, 259, 261, 262, 263, 264, 546, 547,
	0, 265, 548, 266, 549, 0, 550, 267, 268, 269,
	270, 271, 272, 0, 0, 0, 273, 551, 552, 553,
	0, 274, 275, 554, 0, 0, 0, 276, 277, 278,
	279, 280, 281, 282, 0, 0, 284, 285, 286, 283,
	0, 287, 0, 288, 289, 290, 291, 292, 293, 0,
	294, 295, 296, 0, 297, 298, 0, 0, 0, 0,
	0, 0, 0, 299, 300, 301, 302, 0, 303, 555,
	556, 0, 307, 304, 305, 0, 308, 306, 0, 309,
	310, 311, 0, 0, 312, 313, 314, 0, 315, 316,
	0, 317, 318, 319, 0, 320, 321, 557, 322, 323,
	324, 326, 328, 325, 329, 330, 331, 332, 558, 559,
	0, 246, 0, 0, 0, 0, 0, 333, 334, 335,
	560, 0, 0, 0, 336, 0, 337, 0, 0, 0,
	338, 339, 561, 562, 340, 341, 0, 342, 563, 0,
	564, 343, 0, 344, 345, 346, 347, 348, 565, 566,
	567, 411, 0, 349, 350, 0, 351, 352, 353, 354,
	0, 0, 0, 247, 355, 356, 358, 0, 0, 357,
	568, 569, 0, 570, 0, 359, 360, 0, 571, 0,
	361, 362, 363, 0, 364, 0, 0, 0, 365, 366,
	367, 368, 369, 370, 0, 371, 373, 372, 0, 374,
	572, 0, 375, 376, 0, 0, 377, 378, 379, 0,
	0, 380, 381, 382, 383, 0, 384, 385, 387, 389,
	386, 388, 393, 390, 391, 392, 395, 0, 394, 0,
	396, 397, 398, 403, 405, 406, 401, 402, 404, 407,
	400, 3077, 399, 0, 248, 0, 408, 409, 0, 573,
	410, 574, 412, 413, 0, 0, 414, 0, 0, 0,
	416, 417, 418, 0, 0, 419, 420, 575, 0, 421,
	0, 576, 422, 423, 415, 424, 425, 426, 427, 428,
	429, 430, 431, 0, 432, 433, 577, 578, 579, 434,
	580, 435, 436, 0, 437, 0, 438, 439, 440, 441,
	442, 443, 444, 581, 446, 445, 447, 0, 448, 0,
	0, 0, 0, 0, 449, 0, 451, 452, 453, 450,
	454, 455, 456, 457, 0, 458, 459, 460, 0, 461,
	462, 463, 464, 582, 465, 0, 466, 467, 473, 474,
	468, 469, 475, 476, 477, 478, 479, 0, 481, 482,
	480, 483, 484, 485, 0, 486, 470, 471, 487, 488,
	0, 489, 490, 491, 492, 493, 494, 583, 0, 495,
	0, 496, 497, 498, 499, 472, 500, 505, 584, 501,
	502, 503, 504, 585, 0, 507, 508, 0, 506, 0,
	509, 510, 511, 512, 513, 514, 327, 515, 0, 516,
	586, 587, 588, 589, 0, 523, 0, 517, 518, 590,
	519, 591, 0, 520, 521, 522, 0, 524, 525, 0,
	0, 526, 527, 528, 530, 531, 529, 532, 0, 533,
	0, 0, 534, 535, 536, 592, 593, 594, 0, 538,
	537, 539, 595, 2651, 0, 243, 0, 540, 541, 596,
	542, 543, 544, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 250, 251, 252, 253, 254, 0, 255,
	256, 0, 0, 0, 0, 0, 545, 0, 0, 0,
	0, 257, 258, 260, 259, 261, 262, 263, 264, 546,
	547, 0, 265, 548, 266, 549, 0, 550, 267, 268,
	269, 270, 271, 272, 0, 0, 0, 273, 551, 552,
	553, 0, 274, 275, 554, 0, 0, 0, 276, 277,
	278, 279, 280, 281, 282, 0, 0, 284, 285, 286,
	283, 0, 287, 0, 288, 289, 290, 291, 292, 293,
	0, 294, 295, 296, 0, 297, 298, 0, 0, 0,
	0, 0, 0, 0, 299, 300, 301, 302, 0, 303,
	555, 556, 0, 307, 304, 305, 0, 308, 306, 0,
	309, 310, 311, 0, 0, 312, 313, 314, 0, 315,
	316, 0, 317, 318, 319, 0, 320, 321, 557, 322,
	323, 324, 326, 328, 325, 329, 330, 331, 332, 558,
	559, 0, 246, 0, 0, 0, 0, 0, 333, 334,
	335, 560, 0, 0, 0, 336, 0, 337, 0, 0,
	0, 338, 339, 561, 562, 340, 341, 0, 342, 563,
	0, 564, 343, 0, 344, 345, 346, 347, 348, 2650,
	566, 567, 411, 0, 349, 350, 0, 351, 352, 353,
	354, 0, 0, 0, 247, 355, 356, 358, 0, 0,
	357, 568, 569, 0, 570, 0, 359, 360, 0, 571,
	0, 361, 362, 363, 0, 364, 0, 0, 0, 365,
	366, 367, 368, 369, 370, 0, 371, 373, 372, 0,
	374, 572, 0, 375, 376, 0, 0, 377, 378, 379,
	0, 0, 380, 381, 382, 383, 0, 384, 385, 387,
	389, 386, 388, 393, 390, 391, 392, 395, 0, 394,
	0, 396, 397, 398, 403, 405, 406, 401, 402, 404,
	407, 400, 0, 399, 0, 248, 0, 408, 409, 0,
	573, 410, 574, 412, 413, 0, 0, 414, 0, 0,
	0, 416, 417, 418, 0, 0, 419, 420, 575, 0,
	421, 0, 576, 422, 423, 415, 424, 425, 426, 427,
	428, 429, 430, 431, 0, 432, 433, 577, 578, 579,
	434, 580, 435, 436, 0, 437, 0, 438, 439, 440,
	441, 442, 443, 444, 581, 446, 445, 447, 0, 448,
	0, 0, 0, 0, 0, 449, 0, 451, 452, 453,
	450, 454, 455, 456, 457, 0, 458, 459, 460, 0,
	461, 462, 463, 464, 582, 465, 0, 466, 467, 473,
	474, 468, 469, 475, 476, 477, 478, 479, 0, 481,
	482, 480, 483, 484, 485, 0, 486, 470, 471, 487,
	488, 0, 489, 490, 491, 492, 493, 494, 583, 0,
	495, 0, 496, 497, 498, 499, 472, 500, 505, 584,
	501, 502, 503, 504, 585, 0, 507, 508, 0, 506,
	0, 509, 510, 511, 512, 513, 514, 327, 515, 0,
	516, 586, 587, 588, 589, 0, 523, 0, 517, 518,
	590, 519, 591, 0, 520, 521, 522, 0, 524, 525,
	0, 0, 526, 527, 528, 530, 531, 529, 532, 0,
	533, 0, 0, 534, 535, 536, 592, 593, 594, 0,
	538, 537, 539, 595, 2097, 0, 243, 0, 540, 541,
	596, 542, 543, 544, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 250, 251, 252, 253, 254, 0,
	255, 256, 0, 0, 0, 0, 0, 545, 0, 0,
	0, 0, 257, 258, 260, 259, 261, 262, 263, 264,
	546, 547, 0, 265, 548, 266, 549, 0, 550, 267,
	268, 269, 270, 271, 272, 0, 0, 0, 273, 551,
	552, 553, 0, 274, 275, 554, 0, 0, 0, 276,
	277, 278, 279, 280, 281, 282, 0, 0, 284, 285,
	286, 283, 0, 287, 0, 288, 289, 290, 291, 292,
	293, 0, 294, 295, 296, 0, 297, 298, 0, 0,
	0, 0, 0, 0, 0, 299, 300, 301, 302, 0,
	303, 555, 556, 0, 307, 304, 305, 0, 308, 306,
	0, 309, 310, 311, 0, 0, 312, 313, 314, 0,
	315, 316, 0, 317, 318, 319, 0, 320, 321, 557,
	322, 323, 324, 326, 328, 325, 329, 330, 331, 332,
	558, 559, 0, 246, 0, 0, 0, 0, 0, 333,
	334, 335, 560, 0, 0, 0, 336, 0, 337, 0,
	0, 0, 338, 339, 561, 562, 340, 341, 0, 342,
	563, 0, 564, 343, 0, 344, 345, 346, 347, 348,
	565, 566, 567, 411, 0, 349, 350, 0, 351, 352,
	353, 354, 0, 0, 0, 247, 355, 356, 358, 0,
	0, 357, 568, 569, 0, 570, 0, 359, 360, 0,
	571, 0, 361, 362, 363, 0, 364, 0, 0, 0,
	365, 366, 367, 368, 369, 370, 0, 371, 373, 372,
	0, 374, 572, 0, 375, 376, 0, 0, 377, 378,
	379, 0, 0, 380, 381, 382, 383, 0, 384, 385,
	387, 389, 386, 388, 393, 390, 391, 392, 395, 0,
	394, 0, 396, 397, 398, 403, 405, 406, 401, 402,
	404, 407, 400, 0, 399, 0, 248, 0, 408, 409,
	0, 573, 410, 574, 412, 413, 0, 0, 414, 0,
	0, 0, 416, 417, 418, 0, 0, 419, 420, 575,
	0, 421, 0, 576, 422, 423, 415, 424, 425, 426,
	427, 428, 429, 430, 431, 0, 432, 433, 577, 578,
	579, 434, 580, 435, 436, 0, 437, 0, 438, 439,
	440, 441, 442, 443, 444, 581, 446, 445, 447, 0,
	448, 0, 0, 0, 0, 0, 449, 0, 451, 452,
	453, 450, 454, 455, 456, 457, 0, 458, 459, 460,
	0, 461, 462, 463, 464, 582, 465, 0, 466, 467,
	473, 474, 468, 469, 475, 476, 477, 478, 479, 0,
	481, 482, 480, 483, 484, 485, 0, 486, 470, 471,
	487, 488, 0, 489, 490, 491, 492, 493, 494, 583,
	0, 495, 0, 496, 497, 498, 499, 472, 500, 505,
	584, 501, 502, 503, 504, 585, 0, 507, 508, 0,
	506, 0, 509, 510, 511, 512, 513, 514, 327, 515,
	0, 516, 586, 587, 588, 589, 0, 523, 0, 517,
	518, 590, 519, 591, 0, 520, 521, 522, 0, 524,
	525, 0, 0, 526, 527, 528, 530, 531, 529, 532,
	0, 533, 0, 0, 534, 535, 536, 592, 593, 594,
	243, 538, 537, 539, 595, 0, 0, 0, 0, 540,
	541, 596, 542, 543, 544, 0, 0, 249, 250, 251,
	252, 253, 254, 0, 255, 256, 0, 0, 0, 0,
	0, 545, 0, 0, 0, 0, 257, 258, 260, 259,
	261, 262, 263, 264, 546, 547, 0, 265, 548, 266,
	549, 0, 550, 267, 268, 269, 270, 271, 272, 0,
	0, 0, 273, 551, 552, 553, 0, 274, 275, 554,
	0, 0, 0, 276, 277, 278, 279, 280, 281, 282,
	0, 0, 284, 285, 286, 283, 0, 287, 0, 288,
	289, 290, 291, 292, 293, 0, 294, 295, 296, 0,
	297, 298, 0, 0, 0, 0, 0, 0, 0, 299,
	300, 301, 302, 0, 303, 555, 556, 0, 307, 304,
	305, 0, 308, 306, 0, 309, 310, 311, 0, 0,
	312, 313, 314, 0, 315, 316, 0, 317, 318, 319,
	0, 320, 321, 557, 322, 323, 324, 326, 328, 325,
	329, 330, 331, 332, 558, 559, 0, 246, 0, 0,
	0, 0, 0, 333, 334, 335, 560, 0, 0, 0,
	336, 0, 337, 0, 0, 0, 338, 339, 561, 562,
	340, 341, 0, 342, 563, 0, 564, 343, 0, 344,
	345, 346, 347, 348, 565, 566, 567, 411, 0, 349,
	350, 0, 351, 352, 353, 354, 0, 0, 0, 247,
	355, 356, 358, 0, 0, 357, 568, 569, 0, 570,
	0, 359, 360, 0, 571, 0, 361, 362, 363, 0,
	364, 0, 0, 0, 365, 366, 367, 368, 369, 370,
	0, 371, 373, 372, 0, 374, 572, 0, 375, 376,
	0, 0, 377, 378, 379, 0, 0, 380, 381, 382,
	383, 0, 384, 385, 387, 389, 386, 388, 393, 390,
	391, 392, 395, 0, 394, 0, 396, 397, 398, 403,
	405, 406, 401, 402, 404, 407, 400, 0, 399, 0,
	248, 0, 408, 409, 0, 573, 410, 574, 412, 413,
	0, 0, 414, 0, 0, 0, 416, 417, 418, 0,
	0, 419, 420, 575, 0, 421, 0, 576, 422, 423,
	415, 424, 425, 426, 427, 428, 429, 430, 431, 0,
	432, 433, 577, 578, 579, 434, 580, 435, 436, 0,
	437, 0, 438, 439, 440, 441, 442, 443, 444, 581,
	446, 445, 447, 0, 448, 0, 0, 0, 0, 0,
	449, 0, 451, 452, 453, 450, 454, 455, 456, 457,
	0, 458, 459, 460, 0, 461, 462, 463, 464, 582,
	465, 0, 466, 467, 473, 474, 468, 469, 475, 476,
	477, 478, 479, 0, 481, 482, 480, 483, 484, 485,
	0, 486, 470, 471, 487, 488, 0, 489, 490, 491,
	492, 493, 494, 583, 0, 495, 0, 496, 497, 498,
	499, 472, 500, 505, 584, 501, 502, 503, 504, 585,
	0, 507, 508, 0, 506, 2014, 509, 510, 511, 512,
	513, 514, 327, 515, 0, 516, 586, 587, 588, 589,
	0, 523, 0, 517, 518, 590, 519, 591, 0, 520,
	521, 522, 0, 524, 525, 0, 0, 526, 527, 528,
	530, 531, 529, 532, 0, 533, 0, 0, 534, 535,
	536, 592, 593, 594, 0, 538, 537, 539, 595, 2019,
	0, 243, 0, 540, 541, 596, 542, 543, 544, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 249, 250,
	251, 252, 253, 254, 0, 255, 256, 0, 0, 0,
	0, 0, 545, 0, 0, 0, 0, 257, 258, 260,
	259, 261, 262, 263, 264, 546, 547, 0, 265, 548,
	266, 549, 0, 550, 267, 268, 269, 270, 271, 272,
	0, 0, 0, 273, 551, 552, 553, 0, 274, 275,
	554, 0, 0, 0, 276, 277, 278, 279, 280, 281,
	282, 0, 0, 284, 285, 286, 283, 0, 287, 0,
	288, 289, 290, 291, 292, 293, 0, 294, 295, 296,
	0, 297, 298, 0, 0, 0, 0, 0, 0, 0,
	299, 300, 301, 302, 0, 303, 555, 556, 0, 307,
	304, 305, 0, 308, 306, 0, 309, 310, 311, 0,
	0, 312, 313, 314, 0, 315, 316, 0, 317, 318,
	319, 0, 320, 321, 557, 322, 323, 324, 326, 328,
	325, 329, 330, 331, 332, 558, 559, 0, 246, 0,
	0, 0, 0, 0, 333, 334, 335, 560, 0, 0,
	0, 336, 0, 337, 0, 0, 0, 338, 339, 561,
	562, 340, 341, 0, 342, 563, 0, 564, 343, 0,
	344, 345, 346, 347, 348, 2018, 566, 567, 411, 0,
	349, 350, 0, 351, 352, 353, 354, 0, 0, 0,
	247, 355, 356, 358, 0, 0, 357, 568, 569, 0,
	570, 0, 359, 360, 0, 571, 0, 361, 362, 363,
	0, 364, 0, 0, 0, 365, 366, 367, 368, 369,
	370, 0, 371, 373, 372, 0, 374, 572, 0, 375,
	376, 0, 0, 377, 378, 379, 0, 0, 380, 381,
	382, 383, 0, 384, 385, 387, 389, 386, 388, 393,
	390, 391, 392, 395, 0, 394, 0, 396, 397, 398,
	403, 405, 406, 401, 402, 404, 407, 400, 0, 399,
	0, 248, 0, 408, 409, 0, 573, 410, 574, 412,
	413, 0, 0, 414, 0, 0, 0, 416, 417, 418,
	0, 0, 419, 420, 575, 0, 421, 0, 576, 422,
	423, 415, 424, 425, 426, 427, 428, 429, 430, 431,
	0, 432, 433, 577, 578, 579, 434, 580, 435, 436,
	0, 437, 0, 438, 439, 440, 441, 442, 443, 444,
	581, 446, 445, 447, 0, 448, 0, 0, 0, 0,
	0, 449, 0, 451, 452, 453, 450, 454, 455, 456,
	457, 0, 458, 459, 460, 0, 461, 462, 463, 464,
	582, 465, 0, 466, 467, 473, 474, 468, 469, 475,
	476, 477, 478, 479, 0, 481, 482, 480, 483, 484,
	485, 0, 486, 470, 471, 487, 488, 0, 489, 490,
	491, 492, 493, 494, 583, 0, 495, 0, 496, 497,
	498, 499, 472, 500, 505, 584, 501, 502, 503, 504,
	585, 0, 507, 508, 0, 506, 0, 509, 510, 511,
	512, 513, 514, 327, 515, 0, 516, 586, 587, 588,
	589, 0, 523, 0, 517, 518, 590, 519, 591, 0,
	520, 521, 522, 0, 524, 525, 0, 0, 526, 527,
	528, 530, 531, 529, 532, 0, 533, 0, 0, 534,
	535, 536, 592, 593, 594, 0, 538, 537, 539, 595,
	2007, 0, 243, 0, 540, 541, 596, 542, 543, 544,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	250, 251, 252, 253, 254, 0, 255, 256, 0, 0,
	0, 0, 0, 545, 0, 0, 0, 0, 257, 258,
	260, 259, 261, 262, 263, 264, 546, 547, 0, 265,
	548, 266, 549, 0, 550, 267, 268, 269, 270, 271,
	272, 0, 0, 0, 273, 551, 552, 553, 0, 274,
	275, 554, 0, 0, 0, 276, 277, 278, 279, 280,
	281, 282, 0, 0, 284, 285, 286, 283, 0, 287,
	0, 288, 289, 290, 291, 292, 293, 0, 294, 295,
	296, 0, 297, 298, 0, 0, 0, 0, 0, 0,
	0, 299, 300, 301, 302, 0, 303, 555, 556, 0,
	307, 304, 305, 0, 308, 306, 0, 309, 310, 311,
	0, 0, 312, 313, 314, 0, 315, 316, 0, 317,
	318, 319, 0, 320, 321, 557, 322, 323, 324, 326,
	328, 325, 329, 330, 331, 332, 558, 559, 0, 246,
	0, 0, 0, 0, 0, 333, 334, 335, 560, 0,
	0, 0, 336, 0, 337, 0, 0, 0, 338, 339,
	561, 562, 340, 341, 0, 342, 563, 0, 564, 343,
	0, 344, 345, 346, 347, 348, 2009, 566, 567, 411,
	0, 349, 350, 0, 351, 352, 353, 354, 0, 0,
	0, 247, 355, 356, 358, 0, 0, 357, 568, 569,
	0, 570, 0, 359, 360, 0, 571, 0, 361, 362,
	363, 0, 364, 0, 0, 0, 365, 366, 367, 368,
	369, 370, 0, 371, 373, 372, 0, 374, 572, 0,
	375, 376, 0, 0, 377, 378, 379, 0, 0, 380,
	381, 382, 383, 0, 384, 385, 387, 389, 386, 388,
	393, 390, 391, 392, 395, 0, 394, 0, 396, 397,
	398, 403, 405, 406, 401, 402, 404, 407, 400, 0,
	399, 0, 248, 0, 408, 409, 0, 573, 410, 574,
	412, 413, 0, 0, 414, 0, 0, 0, 416, 417,
	418, 0, 0, 419, 420, 575, 0, 421, 0, 576,
	422, 423, 415, 424, 425, 426, 427, 428, 429, 430,
	431, 0, 432, 433, 577, 578, 579, 434, 580, 435,
	436, 0, 437, 0, 438, 439, 440, 441, 442, 443,
	444, 581, 446, 445, 447, 0, 448, 0, 0, 0,
	0, 0, 449, 0, 451, 452, 453, 450, 454, 455,
	456, 457, 0, 458, 459, 460, 0, 461, 462, 463,
	464, 582, 465, 0, 466, 467, 473, 474, 468, 469,
	475, 476, 477, 478, 479, 0, 481, 482, 480, 483,
	484, 485, 0, 486, 470, 471, 487, 488, 0, 489,
	490, 491, 492, 493, 494, 583, 0, 495, 0, 496,
	497, 498, 499, 472, 500, 505, 584, 501, 502, 503,
	504, 585, 0, 507, 508, 0, 506, 0, 509, 510,
	511, 512, 513, 514, 327, 515, 0, 516, 586, 587,
	588, 589, 0, 523, 0, 517, 518, 590, 519, 591,
	0, 520, 521, 522, 0, 524, 525, 0, 0, 526,
	527, 528, 530, 531, 529, 532, 0, 533, 0, 0,
	534, 535, 536, 592, 593, 594, 243, 538, 537, 539,
	595, 0, 0, 0, 0, 540, 541, 596, 542, 543,
	544, 0, 0, 249, 250, 251, 252, 253, 254, 0,
	255, 256, 0, 0, 0, 0, 0, 545, 0, 0,
	0, 0, 257, 258, 260, 259, 261, 262, 263, 264,
	546, 547, 0, 265, 548, 266, 549, 0, 550, 267,
	268, 269, 270, 271, 272, 0, 0, 0, 273, 551,
	552, 553, 0, 274, 275, 554, 0, 0, 0, 276,
	277, 278, 279, 280, 281, 282, 0, 0, 284, 285,
	286, 283, 0, 287, 0, 288, 289, 290, 291, 292,
	293, 0, 294, 295, 296, 0, 297, 298, 0, 0,
	0, 0, 0, 0, 0, 299, 300, 301, 302, 0,
	303, 555, 556, 0, 307, 304, 305, 0, 308, 306,
	0, 309, 310, 311, 0, 0, 312, 313, 314, 0,
	315, 316, 0, 317, 318, 319, 0, 320, 321, 557,
	322, 323, 324, 326, 328, 325, 329, 330, 331, 332,
	558, 559, 0, 246, 0, 0, 0, 0, 0, 333,
	334, 335, 560, 0, 0, 0, 336, 0, 337, 0,
	0, 0, 338, 339, 561, 562, 340, 341, 0, 342,
	563, 0, 564, 343, 0, 344, 345, 346, 347, 348,
	1978, 566, 567, 411, 0, 349, 350, 0, 351, 352,
	353, 354, 0, 0, 0, 247, 355, 356, 358, 0,
	0, 357, 568, 569, 0, 570, 0, 359, 360, 0,
	571, 0, 361, 362, 363, 0, 364, 0, 0, 0,
	365, 366, 367, 368, 369, 370, 0, 371, 373, 372,
	0, 374, 572, 0, 375, 376, 0, 0, 377, 378,
	379, 0, 0, 380, 381, 382, 383, 0, 384, 385,
	387, 389, 386, 388, 393, 390, 391, 392, 395, 0,
	394, 0, 396, 397, 398, 403, 405, 406, 401, 402,
	404, 407, 400, 0, 399, 0, 248, 0, 408, 409,
	0, 573, 410, 574, 412, 413, 0, 0, 414, 0,
	0, 1117, 416, 417, 418, 0, 0, 419, 420, 575,
	0, 421, 0, 576, 422, 423, 415, 424, 425, 426,
	427, 428, 429, 430, 431, 0, 432, 433, 577, 578,
	579, 434, 580, 435, 436, 0, 437, 0, 438, 439,
	440, 441, 442, 443, 444, 581, 446, 445, 447, 0,
	448, 0, 0, 0, 0, 0, 449, 0, 451, 452,
	453, 450, 454, 455, 456, 457, 0, 458, 459, 460,
	0, 461, 462, 463, 464, 582, 465, 0, 466, 467,
	473, 474, 468, 469, 475, 476, 477, 478, 479, 0,
	481, 482, 480, 483, 484, 485, 0, 486, 470, 471,
	487, 488, 0, 489, 490, 491, 492, 493, 494, 583,
	0, 495, 0, 496, 497, 498, 499, 472, 500, 505,
	584, 501, 502, 503, 504, 585, 0, 507, 508, 0,
	506, 0, 509, 510, 511, 512, 513, 514, 327, 515,
	0, 516, 586, 587, 588, 589, 0, 523, 0, 517,
	518, 590, 519, 591, 0, 520, 521, 522, 0, 524,
	525, 0, 0, 526, 527, 528, 530, 531, 529, 532,
	0, 533, 0, 0, 534, 535, 536, 592, 593, 594,
	0, 538, 537, 539, 595, 1443, 0, 243, 0, 540,
	541, 596, 542, 543, 544, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 250, 251, 252, 253, 254,
	0, 255, 256, 0, 0, 0, 0, 0, 545, 0,
	0, 0, 0, 257, 258, 260, 259, 261, 262, 263,
	264, 546, 547, 0, 265, 548, 266, 549, 0, 550,
	267, 268, 269, 270, 271, 272, 0, 0, 0, 273,
	551, 552, 553, 0, 274, 275, 554, 0, 0, 0,
	276, 277, 278, 279, 280, 281, 282, 0, 0, 284,
	285, 286, 283, 0, 287, 0, 288, 289, 290, 291,
	292, 293, 0, 294, 295, 296, 0, 297, 298, 0,
	0, 0, 0, 0, 0, 0, 299, 300, 301, 302,
	0, 303, 555, 556, 0, 307, 304, 305, 0, 308,
	306, 0, 309, 310, 311, 0, 0, 312, 313, 314,
	0, 315, 316, 0, 317, 318, 319, 0, 320, 321,
	557, 322, 323, 324, 326, 328, 325, 329, 330, 331,
	332, 558, 559, 0, 246, 0, 0, 0, 0, 0,
	333, 334, 335, 560, 0, 0, 0, 336, 0, 337,
	0, 0, 0, 338, 339, 561, 562, 340, 341, 0,
	342, 563, 0, 564, 343, 0, 344, 345, 346, 347,
	348, 1442, 566, 567, 411, 0, 349, 350, 0, 351,
	352, 353, 354, 0, 0, 0, 247, 355, 356, 358,
	0, 0, 357, 568, 569, 0, 570, 0, 359, 360,
	0, 571, 0, 361, 362, 363, 0, 364, 0, 0,
	0, 365, 366, 367, 368, 369, 370, 0, 371, 373,
	372, 0, 374, 572, 0, 375, 376, 0, 0, 377,
	378, 379, 0, 0, 380, 381, 382, 383, 0, 384,
	385, 387, 389, 386, 388, 393, 390, 391, 392, 395,
	0, 394, 0, 396, 397, 398, 403, 405, 406, 401,
	402, 404, 407, 400, 0, 399, 0, 248, 0, 408,
	409, 0, 573, 410, 574, 412, 413, 0, 0, 414,
	0, 0, 0, 416, 417, 418, 0, 0, 419, 420,
	575, 0, 421, 0, 576, 422, 423, 415, 424, 425,
	426, 427, 428, 429, 430, 431, 0, 432, 433, 577,
	578, 579, 434, 580, 435, 436, 0, 437, 0, 438,
	439, 440, 441, 442, 443, 444, 581, 446, 445, 447,
	0, 448, 0, 0, 0, 0, 0, 449, 0, 451,
	452, 453, 450, 454, 455, 456, 457, 0, 458, 459,
	460, 0, 461, 462, 463, 464, 582, 465, 0, 466,
	467, 473, 474, 468, 469, 475, 476, 477, 478, 479,
	0, 481, 482, 480, 483, 484, 485, 0, 486, 470,
	471, 487, 488, 0, 489, 490, 491, 492, 493, 494,
	583, 0, 495, 0, 496, 497, 498, 499, 472, 500,
	505, 584, 501, 502, 503, 504, 585, 0, 507, 508,
	0, 506, 0, 509, 510, 511, 512, 513, 514, 327,
	515, 0, 516, 586, 587, 588, 589, 0, 523, 0,
	517, 518, 590, 519, 591, 0, 520, 521, 522, 0,
	524, 525, 0, 0, 526, 527, 528, 530, 531, 529,
	532, 0, 533, 0, 0, 534, 535, 536, 592, 593,
	594, 0, 538, 537, 539, 595, 1434, 0, 243, 0,
	540, 541, 596, 542, 543, 544, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 250, 251, 252, 253,
	254, 0, 255, 256, 0, 0, 0, 0, 0, 545,
	0, 0, 0, 0, 257, 258, 260, 259, 261, 262,
	263, 264, 546, 547, 0, 265, 548, 266, 549, 0,
	550, 267, 268, 269, 270, 271, 272, 0, 0, 0,
	273, 551, 552, 553, 0, 274, 275, 554, 0, 0,
	0, 276, 277, 278, 279, 280, 281, 282, 0, 0,
	284, 285, 286, 283, 0, 287, 0, 288, 289, 290,
	291, 292, 293, 0, 294, 295, 296, 0, 297, 298,
	0, 0, 0, 0, 0, 0, 0, 299, 300, 301,
	302, 0, 303, 555, 556, 0, 307, 304, 305, 0,
	308, 306, 0, 309, 310, 311, 0, 0, 312, 313,
	314, 0, 315, 316, 0, 317, 318, 319, 0, 320,
	321, 557, 322, 323, 324, 326, 328, 325, 329, 330,
	331, 332, 558, 559, 0, 246, 0, 0, 0, 0,
	0, 333, 334, 335, 560, 0, 0, 0, 336, 0,
	337, 0, 0, 0, 338, 339, 561, 562, 340, 341,
	0, 342, 563, 0, 564, 343, 0, 344, 345, 346,
	347, 348, 1433, 566, 567, 411, 0, 349, 350, 0,
	351, 352, 353, 354, 0, 0, 0, 247, 355, 356,
	358, 0, 0, 357, 568, 569, 0, 570, 0, 359,
	360, 0, 571, 0, 361, 362, 363, 0, 364, 0,
	0, 0, 365, 366, 367, 368, 369, 370, 0, 371,
	373, 372, 0, 374, 572, 0, 375, 376, 0, 0,
	377, 378, 379, 0, 0, 380, 381, 382, 383, 0,
	384, 385, 387, 389, 386, 388, 393, 390, 391, 392,
	395, 0, 394, 0, 396, 397, 398, 403, 405, 406,
	401, 402, 404, 407, 400, 0, 399, 0, 248, 0,
	408, 409, 0, 573, 410, 574, 412, 413, 0, 0,
	414, 0, 0, 0, 416, 417, 418, 0, 0, 419,
	420, 575, 0, 421, 0, 576, 422, 423, 415, 424,
	425, 426, 427, 428, 429, 430, 431, 0, 432, 433,
	577, 578, 579, 434, 580, 435, 436, 0, 437, 0,
	438, 439, 440, 441, 442, 443, 444, 581, 446, 445,
	447, 0, 448, 0, 0, 0, 0, 0, 449, 0,
	451, 452, 453, 450, 454, 455, 456, 457, 0, 458,
	459, 460, 0, 461, 462, 463, 464, 582, 465, 0,
	466, 467, 473, 474, 468, 469, 475, 476, 477, 478,
	479, 0, 481, 482, 480, 483, 484, 485, 0, 486,
	470, 471, 487, 488, 0, 489, 490, 491, 492, 493,
	494, 583, 0, 495, 0, 496, 497, 498, 499, 472,
	500, 505, 584, 501, 502, 503, 504, 585, 0, 507,
	508, 0, 506, 0, 509, 510, 511, 512, 513, 514,
	327, 515, 0, 516, 586, 587, 588, 589, 0, 523,
	0, 517, 518, 590, 519, 591, 0, 520, 521, 522,
	0, 524, 525, 0, 0, 526, 527, 528, 530, 531,
	529, 532, 0, 533, 0, 0, 534, 535, 536, 592,
	593, 594, 0, 538, 537, 539, 595, 1431, 0, 243,
	0, 540, 541, 596, 542, 543, 544, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 249, 250, 251, 252,
	253, 254, 0, 255, 256, 0, 0, 0, 0, 0,
	545, 0, 0, 0, 0, 257, 258, 260, 259, 261,
	262, 263, 264, 546, 547, 0, 265, 548, 266, 549,
	0, 550, 267, 268, 269, 270, 271, 272, 0, 0,
	0, 273, 551, 552, 553, 0, 274, 275, 554, 0,
	0, 0, 276, 277, 278, 279, 280, 281, 282, 0,
	0, 284, 285, 286, 283, 0, 287, 0, 288, 289,
	290, 291, 292, 293, 0, 294, 295, 296, 0, 297,
	298, 0, 0, 0, 0, 0, 0, 0, 299, 300,
	301, 302, 0, 303, 555, 556, 0, 307, 304, 305,
	0, 308, 306, 0, 309, 310, 311, 0, 0, 312,
	313, 314, 0, 315, 316, 0, 317, 318, 319, 0,
	320, 321, 557, 322, 323, 324, 326, 328, 325, 329,
	330, 331, 332, 558, 559, 0, 246, 0, 0, 0,
	0, 0, 333, 334, 335, 560, 0, 0, 0, 336,
	0, 337, 0, 0, 0, 338, 339, 561, 562, 340,
	341, 0, 342, 563, 0, 564, 343, 0, 344, 345,
	346, 347, 348, 1430, 566, 567, 411, 0, 349, 350,
	0, 351, 352, 353, 354, 0, 0, 0, 247, 355,
	356, 358, 0, 0, 357, 568, 569, 0, 570, 0,
	359, 360, 0, 571, 0, 361, 362, 363, 0, 364,
	0, 0, 0, 365, 366, 367, 368, 369, 370, 0,
	371, 373, 372, 0, 374, 572, 0, 375, 376, 0,
	0, 377, 378, 379, 0, 0, 380, 381, 382, 383,
	0, 384, 385, 387, 389, 386, 388, 393, 390, 391,
	392, 395, 0, 394, 0, 396, 397, 398, 403, 405,
	406, 401, 402, 404, 407, 400, 0, 399, 0, 248,
	0, 408, 409, 0, 573, 410, 574, 412, 413, 0,
	0, 414, 0, 0, 0, 416, 417, 418, 0, 0,
	419, 420, 575, 0, 421, 0, 576, 422, 423, 415,
	424, 425, 426, 427, 428, 429, 430, 431, 0, 432,
	433, 577, 578, 579, 434, 580, 435, 436, 0, 437,
	0, 438, 439, 440, 441, 442, 443, 444, 581, 446,
	445, 447, 0, 448, 0, 0, 0, 0, 0, 449,
	0, 451, 452, 453, 450, 454, 455, 456, 457, 0,
	458, 459, 460, 0, 461, 462, 463, 464, 582, 465,
	0, 466, 467, 473, 474, 468, 469, 475, 476, 477,
	478, 479, 0, 481, 482, 480, 483, 484, 485, 0,
	486, 470, 471, 487, 488, 0, 489, 490, 491, 492,
	493, 494, 583, 0, 495, 0, 496, 497, 498, 499,
	472, 500, 505, 584, 501, 502, 503, 504, 585, 0,
	507, 508, 0, 506, 0, 509, 510, 511, 512, 513,
	514, 327, 515, 0, 516, 586, 587, 588, 589, 0,
	523, 0, 517, 518, 590, 519, 591, 0, 520, 521,
	522, 0, 524, 525, 0, 0, 526, 527, 528, 530,
	531, 529, 532, 0, 533, 0, 0, 534, 535, 536,
	592, 593, 594, 0, 538, 537, 539, 595, 1426, 0,
	243, 0, 540, 541, 596, 542, 543, 544, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 250, 251,
	252, 253, 254, 0, 255, 256, 0, 0, 0, 0,
	0, 545, 0, 0, 0, 0, 257, 258, 260, 259,
	261, 262, 263, 264, 546, 547, 0, 265, 548, 266,
	549, 0, 550, 267, 268, 269, 270, 271, 272, 0,
	0, 0, 273, 551, 552, 553, 0, 274, 275, 554,
	0, 0, 0, 276, 277, 278, 279, 280, 281, 282,
	0, 0, 284, 285, 286, 283, 0, 287, 0, 288,
	289, 290, 291, 292, 293, 0, 294, 295, 296, 0,
	297, 298, 0, 0, 0, 0, 0, 0, 0, 299,
	300, 301, 302, 0, 303, 555, 556, 0, 307, 304,
	305, 0, 308, 306, 0, 309, 310, 311, 0, 0,
	312, 313, 314, 0, 315, 316, 0, 317, 318, 319,
	0, 320, 321, 557, 322, 323, 324, 326, 328, 325,
	329, 330, 331, 332, 558, 559, 0, 246, 0, 0,
	0, 0, 0, 333, 334, 335, 560, 0, 0, 0,
	336, 0, 337, 0, 0, 0, 338, 339, 561, 562,
	340, 341, 0, 342, 563, 0, 564, 343, 0, 344,
	345, 346, 347, 348, 1425, 566, 567, 411, 0, 349,
	350, 0, 351, 352, 353, 354, 0, 0, 0, 247,
	355, 356, 358, 0, 0, 357, 568, 569, 0, 570,
	0, 359, 360, 0, 571, 0, 361, 362, 363, 0,
	364, 0, 0, 0, 365, 366, 367, 368, 369, 370,
	0, 371, 373, 372, 0, 374, 572, 0, 375, 376,
	0, 0, 377, 378, 379, 0, 0, 380, 381, 382,
	383, 0, 384, 385, 387, 389, 386, 388, 393, 390,
	391, 392, 395, 0, 394, 0, 396, 397, 398, 403,
	405, 406, 401, 402, 404, 407, 400, 0, 399, 0,
	248, 0, 408, 409, 0, 573, 410, 574, 412, 413,
	0, 0, 414, 0, 0, 0, 416, 417, 418, 0,
	0, 419, 420, 575, 0, 421, 0, 576, 422, 423,
	415, 424, 425, 426, 427, 428, 429, 430, 431, 0,
	432, 433, 577, 578, 579, 434, 580, 435, 436, 0,
	437, 0, 438, 439, 440, 441, 442, 443, 444, 581,
	446, 445, 447, 0, 448, 0, 0, 0, 0, 0,
	449, 0, 451, 452, 453, 450, 454, 455, 456, 457,
	0, 458, 459, 460, 0, 461, 462, 463, 464, 582,
	465, 0, 466, 467, 473, 474, 468, 469, 475, 476,
	477, 478, 479, 0, 481, 482, 480, 483, 484, 485,
	0, 486, 470, 471, 487, 488, 0, 489, 490, 491,
	492, 493, 494, 583, 0, 495, 0, 496, 497, 498,
	499, 472, 500, 505, 584, 501, 502, 503, 504, 585,
	0, 507, 508, 0, 506, 0, 509, 510, 511, 512,
	513, 514, 327, 515, 0, 516, 586, 587, 588, 589,
	0, 523, 0, 517, 518, 590, 519, 591, 0, 520,
	521, 522, 0, 524, 525, 0, 0, 526, 527, 528,
	530, 531, 529, 532, 0, 533, 0, 0, 534, 535,
	536, 592, 593, 594, 0, 538, 537, 539, 595, 1383,
	0, 243, 0, 540, 541, 596, 542, 543, 544, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 249, 250,
	251, 252, 253, 254, 0, 255, 256, 0, 0, 0,
	0, 0, 545, 0, 0, 0, 0, 257, 258, 260,
	259, 261, 262, 263, 264, 546, 547, 0, 265, 548,
	266, 549, 0, 550, 267, 268, 269, 270, 271, 272,
	0, 0, 0, 273, 551, 552, 553, 0, 274, 275,
	554, 0, 0, 0, 276, 277, 278, 279, 280, 281,
	282, 0, 0, 284, 285, 286, 283, 0, 287, 0,
	288, 289, 290, 291, 292, 293, 0, 294, 295, 296,
	0, 297, 298, 0, 0, 0, 0, 0, 0, 0,
	299, 300, 301, 302, 0, 303, 555, 556, 0, 307,
	304, 305, 0, 308, 306, 0, 309, 310, 311, 0,
	0, 312, 313, 314, 0, 315, 316, 0, 317, 318,
	319, 0, 320, 321, 557, 322, 323, 324, 326, 328,
	325, 329, 330, 331, 332, 558, 559, 0, 246, 0,
	0, 0, 0, 0, 333, 334, 335, 560, 0, 0,
	0, 336, 0, 337, 0, 0, 0, 338, 339, 561,
	562, 340, 341, 0, 342, 563, 0, 564, 343, 0,
	344, 345, 346, 347, 348, 565, 566, 567, 411, 0,
	349, 350, 0, 351, 352, 353, 354, 0, 0, 0,
	247, 355, 356, 358, 0, 0, 357, 568, 569, 0,
	570, 0, 359, 360, 0, 571, 0, 361, 362, 363,
	0, 364, 0, 0, 0, 365, 366, 367, 368, 369,
	370, 0, 371, 373, 372, 0, 374, 572, 0, 375,
	376, 0, 0, 377, 378, 379, 0, 0, 380, 381,
	382, 383, 0, 384, 385, 387, 389, 386, 388, 393,
	390, 391, 392, 395, 0, 394, 0, 396, 397, 398,
	403, 405, 406, 401, 402, 404, 407, 400, 0, 399,
	0, 248, 0, 408, 409, 0, 573, 410, 574, 412,
	413, 0, 0, 414, 0, 0, 0, 416, 417, 418,
	0, 0, 419, 420, 575, 0, 421, 0, 576, 422,
	423, 415, 424, 425, 426, 427, 428, 429, 430, 431,
	0, 432, 433, 577, 578, 579, 434, 580, 435, 436,
	0, 437, 0, 438, 439, 440, 441, 442, 443, 444,
	581, 446, 445, 447, 0, 448, 0, 0, 0, 0,
	0, 449, 0, 451, 452, 453, 450, 454, 455, 456,
	457, 0, 458, 459, 460, 0, 461, 462, 463, 464,
	582, 465, 0, 466, 467, 473, 474, 468, 469, 475,
	476, 477, 478, 479, 0, 481, 482, 480, 483, 484,
	485, 0, 486, 470, 471, 487, 488, 0, 489, 490,
	491, 492, 493, 494, 583, 0, 495, 0, 496, 497,
	498, 499, 472, 500, 505, 584, 501, 502, 503, 504,
	585, 0, 507, 508, 0, 506, 0, 509, 510, 511,
	512, 513, 514, 327, 515, 0, 516, 586, 587, 588,
	589, 0, 523, 0, 517, 518, 590, 519, 591, 0,
	520, 521, 522, 0, 524, 525, 0, 0, 526, 527,
	528, 530, 531, 529, 532, 0, 533, 0, 0, 534,
	535, 536, 592, 593, 594, 0, 538, 537, 539, 595,
	1298, 0, 243, 0, 540, 541, 596, 542, 543, 544,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	250, 251, 252, 253, 254, 0, 255, 256, 0, 0,
	0, 0, 0, 545, 0, 0, 0, 0, 257, 258,
	260, 259, 261, 262, 263, 264, 546, 547, 0, 265,
	548, 266, 549, 0, 550, 267, 268, 269, 270, 271,
	272, 0, 0, 0, 273, 551, 552, 553, 0, 274,
	275, 554, 0, 0, 0, 276, 277, 278, 279, 280,
	281, 282, 0, 0, 284, 285, 286, 283, 0, 287,
	0, 288, 289, 290, 291, 292, 293, 0, 294, 295,
	296, 0, 297, 298, 0, 0, 0, 0, 0, 0,
	0, 299, 300, 301, 302, 0, 303, 555, 556, 0,
	307, 304, 305, 0, 308, 306, 0, 309, 310, 311,
	0, 0, 312, 313, 314, 0, 315, 316, 0, 317,
	318, 319, 0, 320, 321, 557, 322, 323, 324, 326,
	328, 325, 329, 330, 331, 332, 558, 559, 0, 246,
	0, 0, 0, 0, 0, 333, 334, 335, 560, 0,
	0, 0, 336, 0, 337, 0, 0, 0, 338, 339,
	561, 562, 340, 341, 0, 342, 563, 0, 564, 343,
	0, 344, 345, 346, 347, 348, 565, 566, 567, 411,
	0, 349, 350, 0, 351, 352, 353, 354, 0, 0,
	0, 247, 355, 356, 358, 0, 0, 357, 568, 569,
	0, 570, 0, 359, 360, 0, 571, 0, 361, 362,
	363, 0, 364, 0, 0, 0, 365, 366, 367, 368,
	369, 370, 0, 371, 373, 372, 0, 374, 572, 0,
	375, 376, 0, 0, 377, 378, 379, 0, 0, 380,
	381, 382, 383, 0, 384, 385, 387, 389, 386, 388,
	393, 390, 391, 392, 395, 0, 394, 0, 396, 397,
	398, 403, 405, 406, 401, 402, 404, 407, 400, 0,
	399, 0, 248, 0, 408, 409, 0, 573, 410, 574,
	412, 413, 0, 0, 414, 0, 0, 0, 416, 417,
	418, 0, 0, 419, 420, 575, 0, 421, 0, 576,
	422, 423, 415, 424, 425, 426, 427, 428, 429, 430,
	431, 0, 432, 433, 577, 578, 579, 434, 580, 435,
	436, 0, 437, 0, 438, 439, 440, 441, 442, 443,
	444, 581, 446, 445, 447, 0, 448, 0, 0, 0,
	0, 0, 449, 0, 451, 452, 453, 450, 454, 455,
	456, 457, 0, 458, 459, 460, 0, 461, 462, 463,
	464, 582, 465, 0, 466, 467, 473, 474, 468, 469,
	475, 476, 477, 478, 479, 0, 481, 482, 480, 483,
	484, 485, 0, 486, 470, 471, 487, 488, 0, 489,
	490, 491, 492, 493, 494, 583, 0, 495, 0, 496,
	497, 498, 499, 472, 500, 505, 584, 501, 502, 503,
	504, 585, 0, 507, 508, 0, 506, 0, 509, 510,
	511, 512, 513, 514, 327, 515, 0, 516, 586, 587,
	588, 589, 0, 523, 0, 517, 518, 590, 519, 591,
	0, 520, 521, 522, 0, 524, 525, 0, 0, 526,
	527, 528, 530, 531, 529, 532, 0, 533, 0, 0,
	534, 535, 536, 592, 593, 594, 0, 538, 537, 539,
	595, 1291, 0, 243, 0, 540, 541, 596, 542, 543,
	544, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	249, 250, 251, 252, 253, 254, 0, 255, 256, 0,
	0, 0, 0, 0, 545, 0, 0, 0, 0, 257,
	258, 260, 259, 261, 262, 263, 264, 546, 547, 0,
	265, 548, 266, 549, 0, 550, 267, 268, 269, 270,
	271, 272, 0, 0, 0, 273, 551, 552, 553, 0,
	274, 275, 554, 0, 0, 0, 276, 277, 278, 279,
	280, 281, 282, 0, 0, 284, 285, 286, 283, 0,
	287, 0, 288, 289, 290, 291, 292, 293, 0, 294,
	295, 296, 0, 297, 298, 0, 0, 0, 0, 0,
	0, 0, 299, 300, 301, 302, 0, 303, 555, 556,
	0, 307, 304, 305, 0, 308, 306, 0, 309, 310,
	311, 0, 0, 312, 313, 314, 0, 315, 316, 0,
	317, 318, 319, 0, 320, 321, 557, 322, 323, 324,
	326, 328, 325, 329, 330, 331, 332, 558, 559, 0,
	246, 0, 0, 0, 0, 0, 333, 334, 335, 560,
	0, 0, 0, 336, 0, 337, 0, 0, 0, 338,
	339, 561, 562, 340, 341, 0, 342, 563, 0, 564,
	343, 0, 344, 345, 346, 347, 348, 1293, 566, 567,
	411, 0, 349, 350, 0, 351, 352, 353, 354, 0,
	0, 0, 247, 355, 356, 358, 0, 0, 357, 568,
	569, 0, 570, 0, 359, 360, 0, 571, 0, 361,
	362, 363, 0, 364, 0, 0, 0, 365, 366, 367,
	368, 369, 370, 0, 371, 373, 372, 0, 374, 572,
	0, 375, 376, 0, 0, 377, 378, 379, 0, 0,
	380, 381, 382, 383, 0, 384, 385, 387, 389, 386,
	388, 393, 390, 391, 392, 395, 0, 394, 0, 396,
	397, 398, 403, 405, 406, 401, 402, 404, 407, 400,
	0, 399, 0, 248, 0, 408, 409, 0, 573, 410,
	574, 412, 413, 0, 0, 414, 0, 0, 0, 416,
	417, 418, 0, 0, 419, 420, 575, 0, 421, 0,
	576, 422, 423, 415, 424, 425, 426, 427, 428, 429,
	430, 431, 0, 432, 433, 577, 578, 579, 434, 580,
	435, 436, 0, 437, 0, 438, 439, 440, 441, 442,
	443, 444, 581, 446, 445, 447, 0, 448, 0, 0,
	0, 0, 0, 449, 0, 451, 452, 453, 450, 454,
	455, 456, 457, 0, 458, 459, 460, 0, 461, 462,
	463, 464, 582, 465, 0, 466, 467, 473, 474, 468,
	469, 475, 476, 477, 478, 479, 0, 481, 482, 480,
	483, 484, 485, 0, 486, 470, 471, 487, 488, 0,
	489, 490, 491, 492, 493, 494, 583, 0, 495, 0,
	496, 497, 498, 499, 472, 500, 505, 584, 501, 502,
	503, 504, 585, 0, 507, 508, 0, 506, 0, 509,
	510, 511, 512, 513, 514, 327, 515, 0, 516, 586,
	587, 588, 589, 0, 523, 0, 517, 518, 590, 519,
	591, 0, 520, 521, 522, 0, 524, 525, 0, 0,
	526, 527, 528, 530, 531, 529, 532, 0, 533, 0,
	0, 534, 535, 536, 592, 593, 594, 0, 538, 537,
	539, 595, 598, 0, 243, 0, 540, 541, 596, 542,
	543, 544, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 250, 251, 252, 253, 254, 0, 255, 256,
	0, 0, 0, 0, 0, 545, 0, 0, 0, 0,
	257, 258, 260, 259, 261, 262, 263, 264, 546, 547,
	0, 265, 548, 266, 549, 0, 550, 267, 268, 269,
	270, 271, 272, 0, 0, 0, 273, 551, 552, 553,
	0, 274, 275, 554, 0, 0, 0, 276, 277, 278,
	279, 280, 281, 282, 0, 0, 284, 285, 286, 283,
	0, 287, 0, 288, 289, 290, 291, 292, 293, 0,
	294, 295, 296, 0, 297, 298, 0, 0, 0, 0,
	0, 0, 0, 299, 300, 301, 302, 0, 303, 555,
	556, 0, 307, 304, 305, 0, 308, 306, 0, 309,
	310, 311, 0, 0, 312, 313, 314, 0, 315, 316,
	0, 317, 318, 319, 0, 320, 321, 557, 322, 323,
	324, 326, 328, 325, 329, 330, 331, 332, 558, 559,
	0, 246, 0, 0, 0, 0, 0, 333, 334, 335,
	560, 0, 0, 0, 336, 0, 337, 0, 0, 0,
	338, 339, 561, 562, 340, 341, 0, 342, 563, 0,
	564, 343, 0, 344, 345, 346, 347, 348, 565, 566,
	567, 411, 0, 349, 350, 0, 351, 352, 353, 354,
	0, 0, 0, 247, 355, 356, 358, 0, 0, 357,
	568, 569, 0, 570, 0, 359, 360, 0, 571, 0,
	361, 362, 363, 0, 364, 0, 0, 0, 365, 366,
	367, 368, 369, 370, 0, 371, 373, 372, 0, 374,
	572, 0, 375, 376, 0, 0, 377, 378, 379, 0,
	0, 380, 381, 382, 383, 0, 384, 385, 387, 389,
	386, 388, 393, 390, 391, 392, 395, 0, 394, 0,
	396, 397, 398, 403, 405, 406, 401, 402, 404, 407,
	400, 0, 399, 0, 248, 0, 408, 409, 0, 573,
	410, 574, 412, 413, 0, 0, 414, 0, 0, 0,
	416, 417, 418, 0, 0, 419, 420, 575, 0, 421,
	0, 576, 422, 423, 415, 424, 425, 426, 427, 428,
	429, 430, 431, 0, 432, 433, 577, 578, 579, 434,
	580, 435, 436, 0, 437, 0, 438, 439, 440, 441,
	442, 443, 444, 581, 446, 445, 447, 0, 448, 0,
	0, 0, 0, 0, 449, 0, 451, 452, 453, 450,
	454, 455, 456, 457, 0, 458, 459, 460, 0, 461,
	462, 463, 464, 582, 465, 0, 466, 467, 473, 474,
	468, 469, 475, 476, 477, 478, 479, 0, 481, 482,
	480, 483, 484, 485, 0, 486, 470, 471, 487, 488,
	0, 489, 490, 491, 492, 493, 494, 583, 0, 495,
	0, 496, 497, 498, 499, 472, 500, 505, 584, 501,
	502, 503, 504, 585, 0, 507, 508, 0, 506, 0,
	509, 510, 511, 512, 513, 514, 327, 515, 0, 516,
	586, 587, 588, 589, 0, 523, 0, 517, 518, 590,
	519, 591, 0, 520, 521, 522, 0, 524, 525, 0,
	0, 526, 527, 528, 530, 531, 529, 532, 0, 533,
	0, 0, 534, 535, 536, 592, 593, 594, 0, 538,
	537, 539, 595, 234, 0, 243, 0, 540, 541, 596,
	542, 543, 544, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 250, 251, 252, 253, 254, 0, 255,
	256, 0, 0, 0, 0, 0, 545, 0, 0, 0,
	0, 257, 258, 260, 259, 261, 262, 263, 264, 546,
	547, 0, 265, 548, 266, 549, 0, 550, 267, 268,
	269, 270, 271, 272, 0, 0, 0, 273, 551, 552,
	553, 0, 274, 275, 554, 0, 0, 0, 276, 277,
	278, 279, 280, 281, 282, 0, 0, 284, 285, 286,
	283, 0, 287, 0, 288, 289, 290, 291, 292, 293,
	0, 294, 295, 296, 0, 297, 298, 0, 0, 0,
	0, 0, 0, 0, 299, 300, 301, 302, 0, 303,
	555, 556, 0, 307, 304, 305, 0, 308, 306, 0,
	309, 310, 311, 0, 0, 312, 313, 314, 0, 315,
	316, 0, 317, 318, 319, 0, 320, 321, 557, 322,
	323, 324, 326, 328, 325, 329, 330, 331, 332, 558,
	559, 0, 246, 0, 0, 0, 0, 0, 333, 334,
	335, 560, 0, 0, 0, 336, 0, 337, 0, 0,
	0, 338, 339, 561, 562, 340, 341, 0, 342, 563,
	0, 564, 343, 0, 344, 345, 346, 347, 348, 565,
	566, 567, 411, 0, 349, 350, 0, 351, 352, 353,
	354, 0, 0, 0, 247, 355, 356, 358, 0, 0,
	357, 568, 569, 0, 570, 0, 359, 360, 0, 571,
	0, 361, 362, 363, 0, 364, 0, 0, 0, 365,
	366, 367, 368, 369, 370, 0, 371, 373, 372, 0,
	374, 572, 0, 375, 376, 0, 0, 377, 378, 379,
	0, 0, 380, 381, 382, 383, 0, 384, 385, 387,
	389, 386, 388, 393, 390, 391, 392, 395, 0, 394,
	0, 396, 397, 398, 403, 405, 406, 401, 402, 404,
	407, 400, 0, 399, 0, 248, 0, 408, 409, 0,
	573, 410, 574, 412, 413, 0, 0, 414, 0, 0,
	0, 416, 417, 418, 0, 0, 419, 420, 575, 0,
	421, 0, 576, 422, 423, 415, 424, 425, 426, 427,
	428, 429, 430, 431, 0, 432, 433, 577, 578, 579,
	434, 580, 435, 436, 0, 437, 0, 438, 439, 440,
	441, 442, 443, 444, 581, 446, 445, 447, 0, 448,
	0, 0, 0, 0, 0, 449, 0, 451, 452, 453,
	450, 454, 455, 456, 457, 0, 458, 459, 460, 0,
	461, 462, 463, 464, 582, 465, 0, 466, 467, 473,
	474, 468, 469, 475, 476, 477, 478, 479, 0, 481,
	482, 480, 483, 484, 485, 0, 486, 470, 471, 487,
	488, 0, 489, 490, 491, 492, 493, 494, 583, 0,
	495, 0, 496, 497, 498, 499, 472, 500, 505, 584,
	501, 502, 503, 504, 585, 0, 507, 508, 0, 506,
	0, 509, 510, 511, 512, 513, 514, 327, 515, 0,
	516, 586, 587, 588, 589, 0, 523, 0, 517, 518,
	590, 519, 591, 0, 520, 521, 522, 0, 524, 525,
	0, 0, 526, 527, 528, 530, 531, 529, 532, 0,
	533, 0, 0, 534, 535, 536, 592, 593, 594, 243,
	538, 537, 539, 595, 0, 0, 0, 0, 540, 541,
	596, 542, 543, 544, 0, 0, 249, 250, 251, 252,
	253, 254, 0, 255, 256, 0, 0, 0, 0, 0,
	545, 0, 0, 0, 0, 257, 258, 260, 259, 261,
	262, 263, 264, 546, 547, 0, 265, 548, 266, 549,
	0, 550, 267, 268, 269, 270, 271, 272, 0, 0,
	0, 273, 551, 552, 553, 0, 274, 275, 554, 0,
	0, 0, 276, 277, 278, 279, 280, 281, 282, 0,
	0, 284, 285, 286, 283, 0, 287, 0, 288, 289,
	290, 291, 292, 293, 0, 294, 295, 296, 0, 297,
	298, 0, 0, 0, 0, 0, 0, 0, 299, 300,
	301, 302, 0, 303, 555, 556, 0, 307, 304, 305,
	0, 308, 306, 0, 309, 310, 311, 0, 0, 312,
	313, 314, 0, 315, 316, 0, 317, 318, 319, 0,
	320, 321, 557, 322, 323, 324, 326, 328, 325, 329,
	330, 331, 332, 558, 559, 0, 246, 0, 0, 0,
	0, 0, 333, 334, 335, 560, 0, 0, 0, 336,
	0, 337, 0, 0, 0, 338, 339, 561, 562, 340,
	341, 0, 342, 563, 0, 564, 343, 0, 344, 345,
	346, 347, 348, 565, 566, 567, 411, 0, 349, 350,
	0, 351, 352, 353, 354, 0, 0, 0, 247, 355,
	356, 358, 0, 0, 357, 568, 569, 0, 570, 0,
	359, 360, 0, 571, 0, 361, 362, 363, 0, 364,
	0, 0, 0, 365, 366, 367, 368, 369, 370, 0,
	371, 373, 372, 0, 374, 572, 0, 375, 376, 0,
	0, 377, 378, 379, 0, 0, 380, 381, 382, 383,
	0, 384, 385, 387, 389, 386, 388, 393, 390, 391,
	392, 395, 0, 394, 0, 396, 397, 398, 403, 405,
	406, 401, 402, 404, 407, 400, 0, 399, 0, 248,
	0, 408, 409, 0, 573, 410, 574, 412, 413, 0,
	0, 414, 0, 0, 0, 416, 417, 418, 0, 0,
	419, 420, 575, 0, 421, 0, 576, 422, 423, 415,
	424, 425, 426, 427, 428, 429, 430, 431, 0, 432,
	433, 577, 578, 579, 434, 580, 435, 436, 0, 437,
	0, 438, 439, 440, 441, 442, 443, 444, 581, 446,
	445, 447, 0, 448, 0, 0, 0, 0, 0, 449,
	0, 451, 452, 453, 450, 454, 455, 456, 457, 0,
	458, 459, 460, 0, 461, 462, 463, 464, 582, 465,
	0, 466, 467, 473, 474, 468, 469, 475, 476, 477,
	478, 479, 0, 481, 482, 480, 483, 484, 485, 0,
	486, 470, 471, 487, 488, 0, 489, 490, 491, 492,
	493, 494, 583, 0, 495, 0, 496, 497, 498, 499,
	472, 500, 505, 584, 501, 502, 503, 504, 585, 0,
	507, 508, 0, 506, 0, 509, 510, 511, 512, 513,
	514, 327, 515, 0, 516, 586, 587, 588, 589, 0,
	523, 0, 517, 518, 590, 519, 591, 0, 520, 521,
	522, 0, 524, 525, 0, 0, 526, 527, 528, 530,
	531, 529, 532, 0, 533, 0, 0, 534, 535, 536,
	592, 593, 594, 243, 538, 537, 539, 595, 0, 0,
	0, 0, 540, 541, 596, 542, 543, 544, 0, 0,
	249, 250, 251, 252, 253, 254, 0, 255, 256, 0,
	0, 0, 0, 0, 545, 0, 0, 0, 0, 257,
	258, 260, 259, 261, 262, 263, 264, 546, 547, 0,
	265, 548, 266, 549, 0, 550, 267, 268, 269, 270,
	271, 272, 0, 0, 0, 273, 551, 552, 553, 0,
	274, 275, 554, 0, 0, 0, 276, 277, 278, 279,
	280, 281, 282, 0, 0, 284, 285, 286, 283, 0,
	287, 0, 288, 289, 290, 291, 292, 293, 620, 294,
	295, 296, 0, 297, 298, 0, 0, 0, 0, 0,
	0, 0, 299, 300, 301, 302, 0, 303, 555, 556,
	0, 307, 304, 305, 0, 308, 306, 0, 309, 310,
	311, 0, 0, 312, 313, 314, 0, 315, 316, 0,
	317, 318, 319, 0, 320, 321, 557, 322, 323, 324,
	326, 328, 325, 329, 330, 331, 332, 558, 559, 0,
	0, 0, 0, 0, 0, 0, 333, 334, 335, 560,
	0, 0, 0, 336, 0, 337, 0, 0, 0, 338,
	339, 561, 562, 340, 341, 621, 342, 563, 0, 564,
	343, 0, 344, 345, 346, 347, 348, 565, 566, 567,
	411, 0, 349, 350, 0, 351, 352, 353, 354, 0,
	0, 0, 0, 355, 356, 358, 0, 0, 357, 568,
	569, 0, 570, 0, 359, 360, 0, 571, 0, 361,
	362, 363, 0, 364, 0, 0, 0, 365, 366, 367,
	368, 369, 370, 0, 371, 373, 372, 0, 374, 572,
	0, 375, 376, 0, 0, 377, 378, 379, 0, 0,
	380, 381, 382, 383, 0, 384, 385, 387, 389, 386,
	388, 393, 390, 391, 392, 395, 0, 394, 0, 396,
	397, 398, 403, 405, 406, 401, 402, 404, 407, 400,
	0, 399, 0, 0, 0, 408, 409, 0, 573, 410,
	574, 412, 413, 0, 0, 414, 0, 0, 0, 416,
	417, 418, 0, 0, 419, 420, 575, 0, 421, 0,
	576, 422, 423, 415, 424, 425, 426, 427, 428, 429,
	430, 431, 0, 432, 433, 577, 578, 579, 434, 580,
	435, 436, 0, 437, 0, 438, 439, 440, 441, 442,
	443, 444, 581, 446, 445, 447, 0, 448, 0, 0,
	0, 0, 0, 449, 0, 451, 452, 453, 450, 454,
	455, 456, 457, 0, 458, 459, 460, 0, 461, 462,
	463, 464, 582, 465, 0, 466, 467, 473, 474, 468,
	469, 475, 476, 477, 478, 479, 622, 481, 482, 480,
	483, 484, 485, 0, 486, 470, 471, 487, 488, 0,
	489, 490, 491, 492, 493, 494, 583, 0, 495, 0,
	496, 497, 498, 499, 472, 500, 505, 584, 501, 502,
	503, 504, 585, 0, 507, 508, 0, 506, 0, 509,
	510, 511, 512, 513, 514, 327, 515, 0, 516, 586,
	587, 588, 589, 0, 523, 0, 517, 518, 590, 519,
	591, 0, 520, 521, 522, 0, 524, 525, 0, 0,
	526, 527, 528, 530, 531, 529, 532, 0, 533, 0,
	0, 534, 535, 536, 592, 593, 594, 243, 538, 537,
	539, 595, 0, 0, 0, 0, 540, 541, 596, 542,
	543, 544, 0, 0, 249, 250, 251, 252, 253, 254,
	0, 255, 256, 0, 0, 0, 0, 0, 545, 0,
	0, 0, 0, 257, 258, 260, 259, 261, 262, 263,
	264, 546, 547, 0, 265, 548, 266, 549, 0, 550,
	267, 268, 269, 270, 271, 272, 0, 0, 0, 273,
	551, 552, 553, 0, 274, 275, 554, 0, 0, 0,
	276, 277, 278, 279, 280, 281, 282, 0, 0, 284,
	285, 286, 283, 0, 287, 0, 288, 289, 290, 291,
	292, 293, 0, 294, 295, 296, 0, 297, 298, 0,
	0, 0, 0, 0, 0, 0, 299, 300, 2130, 302,
	0, 303, 555, 556, 0, 307, 304, 305, 0, 308,
	306, 0, 309, 310, 311, 0, 0, 312, 313, 314,
	0, 315, 316, 0, 317, 318, 319, 0, 320, 321,
	557, 322, 323, 324, 326, 328, 325, 329, 330, 331,
	332, 558, 559, 0, 246, 0, 0, 0, 0, 0,
	333, 334, 335, 560, 0, 0, 0, 336, 0, 337,
	0, 0, 0, 338, 339, 561, 562, 340, 341, 0,
	342, 563, 0, 564, 343, 0, 344, 345, 346, 347,
	348, 565, 566, 567, 411, 0, 349, 350, 0, 351,
	352, 353, 354, 0, 0, 0, 247, 355, 356, 358,
	0, 0, 357, 568, 569, 0, 570, 0, 359, 360,
	0, 571, 0, 361, 362, 363, 0, 364, 0, 0,
	0, 365, 366, 367, 368, 369, 370, 0, 371, 373,
	372, 0, 374, 572, 0, 375, 376, 0, 0, 377,
	378, 379, 0, 0, 380, 381, 382, 383, 0, 384,
	385, 387, 389, 386, 388, 393, 390, 391, 392, 395,
	0, 394, 0, 396, 397, 398, 403, 405, 406, 401,
	402, 404, 407, 400, 0, 399, 0, 248, 0, 408,
	409, 0, 573, 410, 574, 412, 413, 0, 0, 414,
	0, 0, 0, 416, 417, 418, 0, 0, 419, 420,
	575, 0, 421, 0, 576, 422, 423, 415, 424, 425,
	426, 427, 428, 429, 430, 431, 0, 432, 433, 577,
	578, 579, 434, 580, 435, 436, 0, 437, 0, 438,
	439, 440, 441, 442, 443, 444, 581, 446, 445, 447,
	0, 448, 0, 0, 0, 0, 0, 449, 0, 451,
	452, 453, 450, 454, 455, 456, 457, 0, 458, 459,
	460, 0, 461, 462, 463, 464, 582, 465, 0, 466,
	467, 473, 474, 468, 469, 475, 476, 477, 478, 479,
	0, 481, 482, 480, 483, 484, 485, 0, 486, 470,
	471, 487, 488, 0, 489, 490, 491, 492, 493, 494,
	583, 0, 495, 0, 496, 497, 498, 499, 472, 500,
	505, 584, 501, 502, 503, 504, 585, 0, 507, 508,
	0, 506, 0, 509, 510, 511, 512, 513, 514, 327,
	515, 0, 516, 586, 587, 588, 589, 0, 523, 0,
	517, 518, 590, 519, 591, 0, 520, 521, 522, 0,
	524, 525, 0, 0, 526, 527, 528, 530, 531, 529,
	532, 0, 533, 0, 0, 534, 535, 536, 592, 593,
	594, 243, 538, 537, 539, 595, 0, 0, 0, 0,
	540, 541, 596, 542, 543, 544, 0, 0, 249, 250,
	251, 252, 253, 254, 0, 255, 256, 0, 0, 0,
	0, 0, 545, 0, 0, 0, 0, 257, 258, 260,
	259, 261, 262, 263, 264, 546, 547, 0, 265, 548,
	266, 549, 0, 550, 267, 268, 269, 270, 271, 272,
	0, 0, 0, 273, 551, 552, 553, 0, 274, 275,
	554, 0, 0, 0, 276, 277, 278, 279, 280, 281,
	282, 0, 0, 284, 285, 286, 283, 0, 287, 0,
	288, 289, 290, 291, 292, 293, 0, 294, 295, 296,
	0, 297, 298, 0, 0, 0, 0, 0, 0, 0,
	299, 300, 2128, 302, 0, 303, 555, 556, 0, 307,
	304, 305, 0, 308, 306, 0, 309, 310, 311, 0,
	0, 312, 313, 314, 0, 315, 316, 0, 317, 318,
	319, 0, 320, 321, 557, 322, 323, 324, 326, 328,
	325, 329, 330, 331, 332, 558, 559, 0, 246, 0,
	0, 0, 0, 0, 333, 334, 335, 560, 0, 0,
	0, 336, 0, 337, 0, 0, 0, 338, 339, 561,
	562, 340, 341, 0, 342, 563, 0, 564, 343, 0,
	344, 345, 346, 347, 348, 565, 566, 567, 411, 0,
	349, 350, 0, 351, 352, 353, 354, 0, 0, 0,
	247, 355, 356, 358, 0, 0, 357, 568, 569, 0,
	570, 0, 359, 360, 0, 571, 0, 361, 362, 363,
	0, 364, 0, 0, 0, 365, 366, 367, 368, 369,
	370, 0, 371, 373, 372, 0, 374, 572, 0, 375,
	376, 0, 0, 377, 378, 379, 0, 0, 380, 381,
	382, 383, 0, 384, 385, 387, 389, 386, 388, 393,
	390, 391, 392, 395, 0, 394, 0, 396, 397, 398,
	403, 405, 406, 401, 402, 404, 407, 400, 0, 399,
	0, 248, 0, 408, 409, 0, 573, 410, 574, 412,
	413, 0, 0, 414, 0, 0, 0, 416, 417, 418,
	0, 0, 419, 420, 575, 0, 421, 0, 576, 422,
	423, 415, 424, 425, 426, 427, 428, 429, 430, 431,
	0, 432, 433, 577, 578, 579, 434, 580, 435, 436,
	0, 437, 0, 438, 439, 440, 441, 442, 443, 444,
	581, 446, 445, 447, 0, 448, 0, 0, 0, 0,
	0, 449, 0, 451, 452, 453, 450, 454, 455, 456,
	457, 0, 458, 459, 460, 0, 461, 462, 463, 464,
	582, 465, 0, 466, 467, 473, 474, 468, 469, 475,
	476, 477, 478, 479, 0, 481, 482, 480, 483, 484,
	485, 0, 486, 470, 471, 487, 488, 0, 489, 490,
	491, 492, 493, 494, 583, 0, 495, 0, 496, 497,
	498, 499, 472, 500, 505, 584, 501, 502, 503, 504,
	585, 0, 507, 508, 0, 506, 0, 509, 510, 511,
	512, 513, 514, 327, 515, 0, 516, 586, 587, 588,
	589, 0, 523, 0, 517, 518, 590, 519, 591, 0,
	520, 521, 522, 0, 524, 525, 0, 0, 526, 527,
	528, 530, 531, 529, 532, 0, 533, 0, 0, 534,
	535, 536, 592, 593, 594, 243, 538, 537, 539, 595,
	0, 0, 0, 0, 540, 541, 596, 542, 543, 544,
	0, 0, 249, 250, 251, 252, 253, 254, 0, 255,
	256, 0, 0, 0, 0, 0, 545, 0, 0, 0,
	0, 257, 258, 260, 259, 261, 262, 263, 264, 546,
	547, 0, 265, 548, 266, 549, 0, 550, 267, 268,
	269, 270, 271, 272, 0, 0, 0, 273, 551, 552,
	553, 0, 274, 275, 554, 0, 0, 0, 276, 277,
	278, 279, 280, 281, 282, 0, 0, 284, 285, 286,
	283, 0, 287, 0, 288, 289, 290, 291, 292, 293,
	0, 294, 295, 296, 0, 297, 298, 0, 0, 0,
	0, 0, 0, 0, 299, 300, 2126, 302, 0, 303,
	555, 556, 0, 307, 304, 305, 0, 308, 306, 0,
	309, 310, 311, 0, 0, 312, 313, 314, 0, 315,
	316, 0, 317, 318, 319, 0, 320, 321, 557, 322,
	323, 324, 326, 328, 325, 329, 330, 331, 332, 558,
	559, 0, 246, 0, 0, 0, 0, 0, 333, 334,
	335, 560, 0, 0, 0, 336, 0, 337, 0, 0,
	0, 338, 339, 561, 562, 340, 341, 0, 342, 563,
	0, 564, 343, 0, 344, 345, 346, 347, 348, 565,
	566, 567, 411, 0, 349, 350, 0, 351, 352, 353,
	354, 0, 0, 0, 247, 355, 356, 358, 0, 0,
	357, 568, 569, 0, 570, 0, 359, 360, 0, 571,
	0, 361, 362, 363, 0, 364, 0, 0, 0, 365,
	366, 367, 368, 369, 370, 0, 371, 373, 372, 0,
	374, 572, 0, 375, 376, 0, 0, 377, 378, 379,
	0, 0, 380, 381, 382, 383, 0, 384, 385, 387,
	389, 386, 388, 393, 390, 391, 392, 395, 0, 394,
	0, 396, 397, 398, 403, 405, 406, 401, 402, 404,
	407, 400, 0, 399, 0, 248, 0, 408, 409, 0,
	573, 410, 574, 412, 413, 0, 0, 414, 0, 0,
	0, 416, 417, 418, 0, 0, 419, 420, 575, 0,
	421, 0, 576, 422, 423, 415, 424, 425, 426, 427,
	428, 429, 430, 431, 0, 432, 433, 577, 578, 579,
	434, 580, 435, 436, 0, 437, 0, 438, 439, 440,
	441, 442, 443, 444, 581, 446, 445, 447, 0, 448,
	0, 0, 0, 0, 0, 449, 0, 451, 452, 453,
	450, 454, 455, 456, 457, 0, 458, 459, 460, 0,
	461, 462, 463, 464, 582, 465, 0, 466, 467, 473,
	474, 468, 469, 475, 476, 477, 478, 479, 0, 481,
	482, 480, 483, 484, 485, 0, 486, 470, 471, 487,
	488, 0, 489, 490, 491, 492, 493, 494, 583, 0,
	495, 0, 496, 497, 498, 499, 472, 500, 505, 584,
	501, 502, 503, 504, 585, 0, 507, 508, 0, 506,
	0, 509, 510, 511, 512, 513, 514, 327, 515, 0,
	516, 586, 587, 588, 589, 0, 523, 0, 517, 518,
	590, 519, 591, 0, 520, 521, 522, 0, 524, 525,
	0, 0, 526, 527, 528, 530, 531, 529, 532, 0,
	533, 0, 0, 534, 535, 536, 592, 593, 594, 243,
	538, 537, 539, 595, 0, 0, 0, 0, 540, 541,
	596, 542, 543, 544, 0, 0, 249, 250, 251, 252,
	253, 254, 0, 255, 256, 0, 0, 0, 0, 0,
	545, 0, 0, 0, 0, 257, 258, 260, 259, 261,
	262, 263, 264, 546, 547, 0, 265, 548, 266, 549,
	0, 550, 267, 268, 269, 270, 271, 272, 0, 0,
	0, 273, 551, 552, 553, 0, 274, 275, 554, 0,
	0, 0, 276, 277, 278, 279, 280, 281, 282, 0,
	0, 284, 285, 286, 283, 0, 287, 0, 288, 289,
	290, 291, 292, 293, 0, 294, 295, 296, 0, 297,
	298, 0, 0, 0, 0, 0, 0, 0, 299, 300,
	301, 302, 0, 303, 555, 556, 0, 307, 304, 305,
	0, 308, 306, 0, 309, 310, 311, 0, 0, 312,
	313, 314, 0, 315, 316, 0, 317, 318, 319, 0,
	320, 321, 557, 322, 323, 324, 326, 328, 325, 329,
	330, 331, 332, 558, 559, 0, 246, 0, 0, 0,
	0, 0, 333, 334, 335, 560, 0, 0, 0, 336,
	0, 337, 0, 0, 0, 338, 339, 561, 562, 340,
	341, 0, 342, 563, 0, 564, 343, 0, 344, 345,
	346, 347, 348, 2062, 566, 567, 411, 0, 349, 350,
	0, 351, 352, 353, 354, 0, 0, 0, 247, 355,
	356, 358, 0, 0, 357, 568, 569, 0, 570, 0,
	359, 360, 0, 571, 0, 361, 362, 363, 0, 364,
	0, 0, 0, 365, 366, 367, 368, 369, 370, 0,
	371, 373, 372, 0, 374, 572, 0, 375, 376, 0,
	0, 377, 378, 379, 0, 0, 380, 381, 382, 383,
	0, 384, 385, 387, 389, 386, 388, 393, 390, 391,
	392, 395, 0, 394, 0, 396, 397, 398, 403, 405,
	406, 401, 402, 404, 407, 400, 0, 399, 0, 248,
	0, 408, 409, 0, 573, 410, 574, 412, 413, 0,
	0, 414, 0, 0, 0, 416, 417, 418, 0, 0,
	419, 420, 575, 0, 421, 0, 576, 422, 423, 415,
	424, 425, 426, 427, 428, 429, 430, 431, 0, 432,
	433, 577, 578, 579, 434, 580, 435, 436, 0, 437,
	0, 438, 439, 440, 441, 442, 443, 444, 581, 446,
	445, 447, 0, 448, 0, 0, 0, 0, 0, 449,
	0, 451, 452, 453, 450, 454, 455, 456, 457, 0,
	458, 459, 460, 0, 461, 462, 463, 464, 582, 465,
	0, 466, 467, 473, 474, 468, 469, 475, 476, 477,
	478, 479, 0, 481, 482, 480, 483, 484, 485, 0,
	486, 470, 471, 487, 488, 0, 489, 490, 491, 492,
	493, 494, 583, 0, 495, 0, 496, 497, 498, 499,
	472, 500, 505, 584, 501, 502, 503, 504, 585, 0,
	507, 508, 0, 506, 0, 509, 510, 511, 512, 513,
	514, 327, 515, 0, 516, 586, 587, 588, 589, 0,
	523, 0, 517, 518, 590, 519, 591, 0, 520, 521,
	522, 0, 524, 525, 0, 0, 526, 527, 528, 530,
	531, 529, 532, 0, 533, 0, 0, 534, 535, 536,
	592, 593, 594, 243, 538, 537, 539, 595, 0, 0,
	0, 0, 540, 541, 596, 542, 543, 544, 0, 0,
	249, 250, 251, 252, 253, 254, 0, 255, 256, 0,
	0, 0, 0, 0, 545, 0, 0, 0, 0, 257,
	258, 260, 259, 261, 262, 263, 264, 546, 547, 0,
	265, 548, 266, 549, 0, 550, 267, 268, 269, 270,
	271, 272, 0, 0, 0, 273, 551, 552, 553, 0,
	274, 275, 554, 0, 0, 0, 276, 277, 278, 279,
	280, 281, 282, 0, 0, 284, 285, 286, 283, 0,
	287, 0, 288, 289, 290, 291, 292, 293, 0, 294,
	295, 296, 0, 297, 298, 0, 0, 0, 0, 0,
	0, 0, 299, 300, 301, 302, 0, 303, 555, 556,
	0, 307, 304, 305, 0, 308, 306, 0, 309, 310,
	311, 0, 0, 312, 313, 314, 0, 315, 316, 0,
	317, 318, 319, 0, 320, 321, 557, 322, 323, 324,
	326, 328, 325, 329, 330, 331, 332, 558, 559, 0,
	246, 0, 0, 0, 0, 0, 333, 334, 335, 560,
	0, 0, 0, 336, 0, 337, 0, 0, 0, 338,
	339, 561, 562, 340, 341, 0, 342, 563, 0, 564,
	343, 0, 344, 345, 346, 347, 348, 2056, 566, 567,
	411, 0, 349, 350, 0, 351, 352, 353, 354, 0,
	0, 0, 247, 355, 356, 358, 0, 0, 357, 568,
	569, 0, 570, 0, 359, 360, 0, 571, 0, 361,
	362, 363, 0, 364, 0, 0, 0, 365, 366, 367,
	368, 369, 370, 0, 371, 373, 372, 0, 374, 572,
	0, 375, 376, 0, 0, 377, 378, 379, 0, 0,
	380, 381, 382, 383, 0, 384, 385, 387, 389, 386,
	388, 393, 390, 391, 392, 395, 0, 394, 0, 396,
	397, 398, 403, 405, 406, 401, 402, 404, 407, 400,
	0, 399, 0, 248, 0, 408, 409, 0, 573, 410,
	574, 412, 413, 0, 0, 414, 0, 0, 0, 416,
	417, 418, 0, 0, 419, 420, 575, 0, 421, 0,
	576, 422, 423, 415, 424, 425, 426, 427, 428, 429,
	430, 431, 0, 432, 433, 577, 578, 579, 434, 580,
	435, 436, 0, 437, 0, 438, 439, 440, 441, 442,
	443, 444, 581, 446, 445, 447, 0, 448, 0, 0,
	0, 0, 0, 449, 0, 451, 452, 453, 450, 454,
	455, 456, 457, 0, 458, 459, 460, 0, 461, 462,
	463, 464, 582, 465, 0, 466, 467, 473, 474, 468,
	469, 475, 476, 477, 478, 479, 0, 481, 482, 480,
	483, 484, 485, 0, 486, 470, 471, 487, 488, 0,
	489, 490, 491, 492, 493, 494, 583, 0, 495, 0,
	496, 497, 498, 499, 472, 500, 505, 584, 501, 502,
	503, 504, 585, 0, 507, 508, 0, 506, 0, 509,
	510, 511, 512, 513, 514, 327, 515, 0, 516, 586,
	587, 588, 589, 0, 523, 0, 517, 518, 590, 519,
	591, 0, 520, 521, 522, 0, 524, 525, 0, 0,
	526, 527, 528, 530, 531, 529, 532, 0, 533, 0,
	0, 534, 535, 536, 592, 593, 594, 243, 538, 537,
	539, 595, 0, 0, 0, 0, 540, 541, 596, 542,
	543, 544, 0, 0, 249, 250, 251, 252, 253, 254,
	0, 255, 256, 0, 0, 0, 0, 0, 545, 0,
	0, 0, 0, 257, 258, 260, 259, 261, 262, 263,
	264, 546, 547, 0, 265, 548, 266, 549, 0, 550,
	267, 268, 269, 270, 271, 272, 0, 0, 0, 273,
	551, 552, 553, 0, 274, 275, 554, 0, 0, 0,
	276, 277, 278, 279, 280, 281, 282, 0, 0, 284,
	285, 286, 283, 0, 287, 0, 288, 289, 290, 291,
	292, 293, 0, 294, 295, 296, 0, 297, 298, 0,
	0, 0, 0, 0, 0, 0, 299, 300, 301, 302,
	0, 303, 555, 556, 0, 307, 304, 305, 0, 308,
	306, 0, 309, 310, 311, 0, 0, 312, 313, 314,
	0, 315, 316, 0, 317, 318, 319, 0, 320, 321,
	557, 322, 323, 324, 326, 328, 325, 329, 330, 331,
	332, 558, 559, 0, 246, 0, 0, 0, 0, 0,
	333, 334, 335, 560, 0, 0, 0, 336, 0, 337,
	0, 0, 0, 338, 339, 561, 562, 340, 341, 0,
	342, 563, 0, 564, 343, 0, 344, 345, 346, 347,
	348, 2025, 566, 567, 411, 0, 349, 350, 0, 351,
	352, 353, 354, 0, 0, 0, 247, 355, 356, 358,
	0, 0, 357, 568, 569, 0, 570, 0, 359, 360,
	0, 571, 0, 361, 362, 363, 0, 364, 0, 0,
	0, 365, 366, 367, 368, 369, 370, 0, 371, 373,
	372, 0, 374, 572, 0, 375, 376, 0, 0, 377,
	378, 379, 0, 0, 380, 381, 382, 383, 0, 384,
	385, 387, 389, 386, 388, 393, 390, 391, 392, 395,
	0, 394, 0, 396, 397, 398, 403, 405, 406, 401,
	402, 404, 407, 400, 0, 399, 0, 248, 0, 408,
	409, 0, 573, 410, 574, 412, 413, 0, 0, 414,
	0, 0, 0, 416, 417, 418, 0, 0, 419, 420,
	575, 0, 421, 0, 576, 422, 423, 415, 424, 425,
	426, 427, 428, 429, 430, 431, 0, 432, 433, 577,
	578, 579, 434, 580, 435, 436, 0, 437, 0, 438,
	439, 440, 441, 442, 443, 444, 581, 446, 445, 447,
	0, 448, 0, 0, 0, 0, 0, 449, 0, 451,
	452, 453, 450, 454, 455, 456, 457, 0, 458, 459,
	460, 0, 461, 462, 463, 464, 582, 465, 0, 466,
	467, 473, 474, 468, 469, 475, 476, 477, 478, 479,
	0, 481, 482, 480, 483, 484, 485, 0, 486, 470,
	471, 487, 488, 0, 489, 490, 491, 492, 493, 494,
	583, 0, 495, 0, 496, 497, 498, 499, 472, 500,
	505, 584, 501, 502, 503, 504, 585, 0, 507, 508,
	0, 506, 0, 509, 510, 511, 512, 513, 514, 327,
	515, 0, 516, 586, 587, 588, 589, 0, 523, 0,
	517, 518, 590, 519, 591, 0, 520, 521, 522, 0,
	524, 525, 0, 0, 526, 527, 528, 530, 531, 529,
	532, 0, 533, 0, 0, 534, 535, 536, 592, 593,
	594, 0, 538, 537, 539, 595, 786, 0, 243, 0,
	540, 541, 596, 542, 543, 544, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 250, 251, 252, 253,
	254, 0, 255, 256, 0, 0, 0, 0, 0, 545,
	0, 0, 0, 0, 257, 258, 260, 259, 261, 262,
	263, 264, 546, 547, 0, 265, 548, 266, 549, 0,
	550, 267, 268, 269, 270, 271, 272, 0, 0, 0,
	273, 551, 552, 553, 0, 274, 275, 554, 0, 0,
	0, 276, 277, 278, 279, 280, 281, 282, 0, 0,
	284, 285, 286, 283, 0, 287, 0, 288, 289, 290,
	291, 292, 293, 0, 294, 295, 296, 0, 297, 298,
	0, 0, 0, 0, 0, 0, 0, 299, 300, 301,
	302, 0, 303, 555, 556, 0, 307, 304, 305, 0,
	308, 306, 0, 309, 310, 311, 0, 0, 312, 313,
	314, 0, 315, 316, 0, 317, 318, 319, 0, 320,
	321, 557, 322, 323, 324, 326, 328, 325, 329, 330,
	331, 332, 558, 559, 0, 0, 0, 0, 0, 0,
	0, 333, 334, 335, 560, 0, 0, 0, 336, 0,
	337, 0, 0, 0, 338, 339, 561, 562, 340, 341,
	0, 342, 563, 0, 564, 343, 0, 344, 345, 346,
	347, 348, 565, 566, 567, 411, 0, 349, 350, 0,
	351, 352, 353, 354, 0, 0, 0, 0, 355, 356,
	358, 0, 0, 357, 568, 569, 0, 570, 785, 359,
	360, 0, 571, 0, 361, 362, 363, 0, 364, 0,
	0, 0, 365, 366, 367, 368, 369, 370, 0, 371,
	373, 372, 0, 374, 572, 0, 375, 376, 0, 0,
	377, 378, 379, 0, 0, 380, 381, 382, 383, 0,
	384, 385, 387, 389, 386, 388, 393, 390, 391, 392,
	395, 0, 394, 0, 396, 397, 398, 403, 405, 406,
	401, 402, 404, 407, 400, 0, 399, 0, 0, 0,
	408, 409, 0, 573, 410, 574, 412, 413, 0, 0,
	414, 0, 0, 0, 416, 417, 418, 0, 0, 419,
	420, 575, 0, 421, 0, 576, 422, 423, 415, 424,
	425, 426, 427, 428, 429, 430, 431, 0, 432, 433,
	577, 578, 579, 434, 580, 435, 436, 0, 437, 0,
	438, 439, 440, 441, 442, 443, 444, 581, 446, 445,
	447, 0, 448, 0, 0, 0, 0, 0, 449, 0,
	451, 452, 453, 450, 454, 455, 456, 457, 0, 458,
	459, 460, 0, 461, 462, 463, 464, 582, 465, 0,
	466, 467, 473, 474, 468, 469, 475, 476, 477, 478,
	479, 0, 481, 482, 480, 483, 484, 485, 0, 486,
	470, 471, 487, 488, 0, 489, 490, 491, 492, 493,
	494, 583, 0, 495, 0, 496, 497, 498, 499, 472,
	500, 505, 584, 501, 502, 503, 504, 585, 0, 507,
	508, 0, 506, 784, 509, 510, 511, 512, 513, 514,
	327, 515, 0, 516, 586, 587, 588, 589, 0, 523,
	0, 517, 518, 590, 519, 591, 0, 520, 521, 522,
	0, 524, 525, 0, 0, 526, 527, 528, 530, 531,
	529, 532, 0, 533, 0, 0, 534, 535, 536, 592,
	593, 594, 243, 538, 537, 539, 595, 0, 0, 0,
	0, 540, 541, 596, 542, 543, 544, 0, 0, 249,
	250, 251, 252, 253, 254, 0, 255, 256, 0, 0,
	0, 0, 0, 545, 0, 0, 0, 0, 257, 258,
	260, 259, 261, 262, 263, 264, 546, 547, 0, 265,
	548, 266, 549, 0, 550, 267, 268, 269, 270, 271,
	272, 0, 0, 0, 273, 551, 552, 553, 0, 274,
	275, 554, 0, 0, 0, 276, 277, 278, 279, 280,
	281, 282, 0, 0, 284, 285, 286, 283, 0, 287,
	0, 288, 289, 290, 291, 292, 293, 0, 294, 295,
	296, 0, 297, 298, 0, 0, 0, 0, 0, 0,
	0, 299, 300, 301, 302, 0, 303, 555, 556, 0,
	307, 304, 305, 0, 308, 306, 0, 309, 310, 311,
	0, 0, 312, 313, 314, 0, 315, 316, 0, 317,
	318, 319, 0, 320, 321, 557, 322, 323, 324, 326,
	328, 325, 329, 330, 331, 332, 558, 559, 0, 2722,
	0, 0, 0, 0, 0, 333, 334, 335, 560, 0,
	0, 0, 336, 0, 337, 0, 0, 0, 338, 339,
	561, 562, 340, 341, 0, 342, 563, 0, 564, 343,
	0, 344, 345, 346, 347, 348, 565, 566, 567, 411,
	0, 349, 350, 0, 351, 352, 353, 354, 0, 0,
	0, 0, 355, 356, 358, 0, 0, 357, 568, 569,
	0, 570, 0, 359, 360, 0, 571, 0, 361, 362,
	363, 0, 364, 0, 0, 0, 365, 366, 367, 368,
	369, 370, 0, 371, 373, 372, 0, 374, 572, 0,
	375, 376, 0, 0, 377, 378, 379, 0, 0, 380,
	381, 382, 383, 0, 384, 385, 387, 389, 386, 388,
	393, 390, 391, 392, 395, 0, 394, 0, 396, 397,
	398, 403, 405, 406, 401, 402, 404, 407, 400, 0,
	399, 0, 0, 0, 408, 409, 0, 573, 410, 574,
	412, 413, 0, 0, 414, 0, 0, 0, 416, 417,
	418, 0, 0, 419, 420, 575, 0, 421, 0, 576,
	422, 423, 415, 424, 425, 426, 427, 428, 429, 430,
	431, 0, 432, 433, 577, 578, 579, 434, 580, 435,
	436, 3725, 437, 0, 438, 439, 440, 441, 442, 443,
	444, 581, 446, 445, 447, 0, 448, 0, 0, 0,
	0, 0, 449, 0, 451, 452, 453, 450, 454, 455,
	456, 457, 0, 458, 459, 460, 0, 461, 462, 463,
	464, 582, 465, 0, 466, 467, 473, 474, 468, 469,
	475, 476, 477, 478, 479, 0, 481, 482, 480, 483,
	484, 485, 0, 486, 470, 471, 487, 488, 0, 489,
	490, 491, 492, 493, 494, 583, 0, 495, 0, 496,
	497, 498, 499, 472, 500, 505, 584, 501, 502, 503,
	504, 585, 0, 507, 508, 0, 506, 0, 509, 510,
	511, 512, 513, 514, 327, 515, 0, 516, 586, 587,
	588, 589, 0, 523, 0, 517, 518, 590, 519, 591,
	0, 520, 521, 522, 0, 524, 525, 0, 0, 526,
	527, 528, 530, 531, 529, 532, 0, 533, 0, 0,
	534, 535, 536, 592, 593, 594, 0, 538, 537, 539,
	595, 607, 0, 243, 0, 540, 541, 596, 542, 543,
	544, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	249, 250, 251, 252, 253, 254, 606, 255, 256, 0,
	0, 0, 0, 0, 545, 0, 0, 0, 0, 257,
	258, 260, 259, 261, 262, 263, 264, 546, 547, 0,
	265, 548, 266, 549, 0, 550, 267, 268, 269, 270,
	271, 272, 0, 0, 0, 273, 551, 552, 553, 0,
	274, 275, 554, 0, 0, 0, 276, 277, 278, 279,
	280, 281, 282, 0, 0, 284, 285, 286, 283, 0,
	287, 0, 288, 289, 290, 291, 292, 293, 0, 294,
	295, 296, 0, 297, 298, 0, 0, 0, 0, 0,
	0, 0, 299, 300, 301, 302, 0, 303, 555, 556,
	0, 307, 304, 305, 0, 308, 306, 0, 309, 310,
	311, 0, 0, 312, 313, 314, 0, 315, 316, 0,
	317, 318, 319, 0, 320, 321, 557, 322, 323, 324,
	326, 328, 325, 329, 330, 331, 332, 558, 559, 0,
	0, 0, 0, 0, 0, 0, 333, 334, 335, 560,
	0, 0, 0, 336, 0, 337, 0, 0, 0, 338,
	339, 561, 562, 340, 341, 0, 342, 563, 0, 564,
	343, 0, 344, 345, 346, 347, 348, 565, 566, 567,
	411, 0, 349, 350, 0, 351, 352, 353, 354, 0,
	0, 0, 0, 355, 356, 358, 0, 0, 357, 568,
	569, 0, 570, 0, 359, 360, 0, 571, 0, 361,
	362, 363, 0, 364, 0, 0, 0, 365, 366, 367,
	368, 369, 370, 0, 371, 373, 372, 0, 374, 572,
	0, 375, 376, 0, 0, 377, 378, 379, 0, 0,
	380, 381, 382, 383, 0, 384, 385, 387, 389, 386,
	388, 393, 390, 391, 392, 395, 0, 394, 0, 396,
	397, 398, 403, 405, 406, 401, 402, 404, 407, 400,
	0, 399, 0, 0, 0, 408, 409, 0, 573, 410,
	574, 412, 413, 0, 0, 414, 0, 0, 0, 416,
	417, 418, 0, 0, 419, 420, 575, 0, 421, 0,
	576, 422, 423, 415, 424, 425, 426, 427, 428, 429,
	430, 431, 0, 432, 433, 577, 578, 579, 434, 580,
	605, 436, 0, 437, 0, 438, 439, 440, 441, 442,
	443, 444, 581, 446, 445, 447, 0, 448, 0, 0,
	0, 0, 0, 449, 0, 451, 452, 453, 450, 454,
	455, 456, 457, 0, 458, 459, 460, 0, 461, 462,
	463, 464, 582, 465, 0, 466, 467, 473, 474, 468,
	469, 475, 476, 477, 478, 479, 0, 481, 482, 480,
	483, 484, 485, 0, 486, 470, 471, 487, 488, 0,
	489, 490, 491, 492, 493, 494, 583, 0, 495, 0,
	496, 497, 498, 499, 472, 500, 505, 584, 501, 502,
	503, 504, 585, 0, 507, 508, 0, 506, 0, 509,
	510, 511, 512, 513, 514, 327, 515, 0, 516, 586,
	587, 588, 589, 0, 523, 0, 517, 518, 590, 519,
	591, 0, 520, 521, 522, 0, 524, 525, 0, 0,
	526, 527, 528, 530, 531, 529, 532, 0, 533, 0,
	0, 534, 535, 536, 592, 593, 594, 0, 538, 537,
	539, 595, 243, 2709, 0, 0, 540, 541, 596, 542,
	543, 544, 0, 0, 0, 0, 0, 0, 0, 249,
	250, 251, 252, 253, 254, 0, 255, 256, 0, 0,
	0, 0, 0, 545, 0, 0, 0, 0, 257, 258,
	260, 259, 261, 262, 263, 264, 546, 547, 0, 265,
	548, 266, 549, 0, 550, 267, 268, 269, 270, 271,
	272, 0, 0, 0, 273, 551, 552, 553, 0, 274,
	275, 554, 0, 0, 0, 276, 277, 278, 279, 280,
	281, 282, 0, 0, 284, 285, 286, 283, 0, 287,
	0, 288, 289, 290, 291, 292, 293, 0, 294, 295,
	296, 0, 297, 298, 0, 0, 0, 0, 0, 0,
	0, 299, 300, 301, 302, 0, 303, 555, 556, 0,
	307, 304, 305, 0, 308, 306, 0, 309, 310, 311,
	0, 0, 312, 313, 314, 0, 315, 316, 0, 317,
	318, 319, 0, 320, 321, 557, 322, 323, 324, 326,
	328, 325, 329, 330, 331, 332, 558, 559, 0, 0,
	0, 0, 0, 0, 0, 333, 334, 335, 560, 0,
	0, 0, 336, 0, 337, 0, 0, 0, 338, 339,
	561, 562, 340, 341, 0, 342, 563, 0, 564, 343,
	0, 344, 345, 346, 347, 348, 565, 566, 567, 411,
	0, 349, 350, 0, 351, 352, 353, 354, 0, 0,
	0, 0, 355, 356, 358, 0, 0, 357, 568, 569,
	0, 570, 0, 359, 360, 0, 571, 0, 361, 362,
	363, 0, 364, 0, 0, 0, 365, 366, 367, 368,
	369, 370, 0, 371, 373, 372, 0, 374, 572, 0,
	375, 376, 0, 0, 377, 378, 379, 0, 0, 380,
	381, 382, 383, 0, 384, 385, 387, 389, 386, 388,
	393, 390, 391, 392, 395, 0, 394, 0, 396, 397,
	398, 403, 405, 406, 401, 402, 404, 407, 400, 0,
	399, 0, 0, 0, 408, 409, 0, 573, 410, 574,
	412, 413, 0, 0, 414, 0, 0, 0, 416, 417,
	418, 0, 0, 419, 420, 575, 0, 421, 0, 576,
	422, 423, 415, 424, 425, 426, 427, 428, 429, 430,
	431, 0, 432, 433, 577, 578, 579, 434, 580, 435,
	436, 0, 437, 0, 438, 439, 440, 441, 442, 443,
	444, 581, 446, 445, 447, 0, 448, 0, 0, 0,
	0, 0, 449, 0, 451, 452, 453, 450, 454, 455,
	456, 457, 0, 458, 459, 460, 0, 461, 462, 463,
	464, 582, 465, 0, 466, 467, 473, 474, 468, 469,
	475, 476, 477, 478, 479, 0, 481, 482, 480, 483,
	484, 485, 0, 486, 470, 471, 487, 488, 0, 489,
	490, 491, 492, 493, 494, 583, 0, 495, 0, 496,
	497, 498, 499, 472, 500, 505, 584, 501, 502, 503,
	504, 585, 0, 507, 508, 0, 506, 0, 509, 510,
	511, 512, 513, 514, 327, 515, 0, 516, 586, 587,
	588, 589, 0, 523, 0, 517, 518, 590, 519, 591,
	0, 520, 521, 522, 0, 524, 525, 0, 0, 526,
	527, 528, 530, 531, 529, 532, 0, 533, 0, 0,
	534, 535, 536, 592, 593, 594, 0, 538, 537, 539,
	595, 243, 3735, 0, 0, 540, 541, 596, 542, 543,
	544, 0, 0, 0, 0, 0, 0, 0, 249, 250,
	251, 252, 253, 254, 0, 255, 256, 0, 0, 0,
	0, 0, 545, 0, 0, 0, 0, 257, 258, 260,
	259, 261, 262, 263, 264, 546, 547, 0, 265, 548,
	266, 549, 0, 550, 267, 268, 269, 270, 271, 272,
	0, 0, 0, 273, 551, 552, 553, 0, 274, 275,
	554, 0, 0, 0, 276, 277, 278, 279, 280, 281,
	282, 0, 0, 284, 285, 286, 283, 0, 287, 0,
	288, 289, 290, 291, 292, 293, 0, 294, 295, 296,
	0, 297, 298, 0, 0, 0, 0, 0, 0, 0,
	299, 300, 301, 302, 0, 303, 555, 556, 0, 307,
	304, 305, 0, 308, 306, 0, 309, 310, 311, 0,
	0, 312, 313, 314, 0, 315, 316, 0, 317, 318,
	319, 0, 320, 321, 557, 322, 323, 324, 326, 328,
	325, 329, 330, 331, 332, 558, 559, 0, 0, 0,
	0, 0, 0, 0, 333, 334, 335, 560, 0, 0,
	0, 336, 0, 337, 0, 0, 0, 338, 339, 561,
	562, 340, 341, 0, 342, 563, 0, 564, 343, 0,
	344, 345, 346, 347, 348, 565, 566, 567, 411, 0,
	349, 350, 0, 351, 352, 353, 354, 0, 0, 0,
	0, 355, 356, 358, 0, 0, 357, 568, 569, 0,
	570, 0, 359, 360, 0, 571, 0, 361, 362, 363,
	0, 364, 0, 0, 0, 365, 366, 367, 368, 369,
	370, 0, 371, 373, 372, 0, 374, 572, 0, 375,
	376, 0, 0, 377, 378, 379, 0, 0, 380, 381,
	382, 383, 0, 384, 385, 387, 389, 386, 388, 393,
	390, 391, 392, 395, 0, 394, 0, 396, 397, 398,
	403, 405, 406, 401, 402, 404, 407, 400, 0, 399,
	0, 0, 0, 408, 409, 0, 573, 410, 574, 412,
	413, 0, 0, 414, 0, 0, 0, 416, 417, 418,
	0, 0, 419, 420, 575, 0, 421, 0, 576, 422,
	423, 415, 424, 425, 426, 427, 428, 429, 430, 431,
	0, 432, 433, 577, 578, 579, 434, 580, 435, 436,
	0, 437, 0, 438, 439, 440, 441, 442, 443, 444,
	581, 446, 445, 447, 0, 448, 0, 0, 0, 0,
	0, 449, 0, 451, 452, 453, 450, 454, 455, 456,
	457, 0, 458, 459, 460, 0, 461, 462, 463, 464,
	582, 465, 0, 466, 467, 473, 474, 468, 469, 475,
	476, 477, 478, 479, 0, 481, 482, 480, 483, 484,
	485, 0, 486, 470, 471, 487, 488, 0, 489, 490,
	491, 492, 493, 494, 583, 0, 495, 0, 496, 497,
	498, 499, 472, 500, 505, 584, 501, 502, 503, 504,
	585, 0, 507, 508, 0, 506, 0, 509, 510, 511,
	512, 513, 514, 327, 515, 0, 516, 586, 587, 588,
	589, 0, 523, 0, 517, 518, 590, 519, 591, 0,
	520, 521, 522, 0, 524, 525, 0, 0, 526, 527,
	528, 530, 531, 529, 532, 0, 533, 0, 0, 534,
	535, 536, 592, 593, 594, 243, 538, 537, 539, 595,
	0, 0, 0, 0, 540, 541, 596, 542, 543, 544,
	0, 0, 249, 250, 251, 252, 253, 254, 0, 255,
	256, 0, 0, 0, 0, 0, 545, 0, 0, 0,
	0, 257, 258, 260, 259, 261, 262, 263, 264, 546,
	547, 0, 265, 548, 266, 549, 0, 550, 267, 268,
	269, 270, 271, 272, 0, 0, 0, 273, 551, 552,
	553, 0, 274, 275, 554, 0, 0, 0, 276, 277,
	278, 279, 280, 281, 282, 0, 0, 284, 285, 286,
	283, 0, 287, 0, 288, 289, 290, 291, 292, 293,
	0, 294, 295, 296, 0, 297, 298, 0, 0, 0,
	0, 0, 0, 0, 299, 300, 301, 302, 0, 303,
	555, 556, 3441, 307, 304, 305, 0, 308, 306, 0,
	309, 310, 311, 0, 0, 312, 313, 314, 0, 315,
	316, 0, 317, 318, 319, 0, 320, 321, 557, 322,
	323, 324, 326, 328, 325, 329, 330, 331, 332, 558,
	559, 0, 0, 0, 0, 0, 0, 0, 333, 334,
	335, 560, 0, 0, 0, 336, 0, 337, 0, 0,
	0, 338, 339, 561, 562, 340, 341, 0, 342, 563,
	0, 564, 343, 0, 344, 345, 346, 347, 348, 565,
	566, 567, 411, 0, 349, 350, 0, 351, 352, 353,
	354, 0, 0, 0, 0, 355, 356, 358, 0, 0,
	357, 568, 569, 0, 570, 0, 359, 360, 0, 571,
	0, 361, 362, 363, 0, 364, 0, 0, 0, 365,
	366, 367, 368, 369, 370, 0, 371, 373, 372, 0,
	374, 572, 0, 375, 376, 0, 0, 377, 378, 379,
	0, 0, 380, 381, 382, 383, 0, 384, 385, 387,
	389, 386, 388, 393, 390, 391, 392, 395, 0, 394,
	0, 396, 397, 398, 403, 405, 406, 401, 402, 404,
	407, 400, 0, 399, 0, 0, 0, 408, 409, 0,
	573, 410, 574, 412, 413, 0, 0, 414, 0, 0,
	0, 416, 417, 418, 0, 0, 419, 420, 575, 0,
	421, 0, 576, 422, 423, 415, 424, 425, 426, 427,
	428, 429, 430, 431, 0, 432, 433, 577, 578, 579,
	434, 580, 435, 436, 0, 437, 0, 438, 439, 440,
	441, 442, 443, 444, 581, 446, 445, 447, 0, 448,
	0, 0, 0, 0, 0, 449, 0, 451, 452, 453,
	450, 454, 455, 456, 457, 0, 458, 459, 460, 0,
	461, 462, 463, 464, 582, 465, 0, 466, 467, 473,
	474, 468, 469, 475, 476, 477, 478, 479, 0, 481,
	482, 480, 483, 484, 485, 0, 486, 470, 471, 487,
	488, 0, 489, 490, 491, 492, 493, 494, 583, 0,
	495, 0, 496, 497, 498, 499, 472, 500, 505, 584,
	501, 502, 503, 504, 585, 0, 507, 508, 0, 506,
	0, 509, 510, 511, 512, 513, 514, 327, 515, 0,
	516, 586, 587, 588, 589, 0, 523, 0, 517, 518,
	590, 519, 591, 0, 520, 521, 522, 0, 524, 525,
	0, 0, 526, 527, 528, 530, 531, 529, 532, 0,
	533, 0, 0, 534, 535, 536, 592, 593, 594, 243,
	538, 537, 539, 595, 0, 0, 0, 0, 540, 541,
	596, 542, 543, 544, 0, 0, 249, 250, 251, 252,
	253, 254, 0, 255, 256, 0, 0, 0, 0, 0,
	545, 0, 2435, 0, 0, 257, 258, 260, 259, 261,
	262, 263, 264, 546, 547, 0, 265, 548, 266, 549,
	0, 550, 267, 268, 269, 270, 271, 272, 0, 0,
	0, 273, 551, 552, 553, 0, 274, 275, 554, 0,
	0, 0, 276, 277, 278, 279, 280, 281, 282, 0,
	0, 284, 285, 286, 283, 0, 287, 0, 288, 289,
	290, 291, 292, 293, 0, 294, 295, 296, 0, 297,
	298, 0, 0, 0, 0, 0, 0, 0, 299, 300,
	301, 302, 0, 303, 555, 556, 0, 307, 304, 305,
	0, 308, 306, 0, 309, 310, 311, 0, 0, 312,
	313, 314, 0, 315, 316, 0, 317, 318, 319, 0,
	320, 321, 557, 322, 323, 324, 326, 328, 325, 329,
	330, 331, 332, 558, 559, 0, 0, 0, 0, 0,
	0, 0, 333, 334, 335, 560, 0, 0, 0, 336,
	0, 337, 0, 0, 0, 338, 339, 561, 562, 340,
	341, 0, 342, 563, 0, 564, 343, 0, 344, 345,
	346, 347, 348, 565, 566, 567, 411, 0, 349, 350,
	0, 351, 352, 353, 354, 0, 0, 0, 0, 355,
	356, 358, 0, 0, 357, 568, 569, 0, 570, 0,
	359, 360, 0, 571, 0, 361, 362, 363, 0, 364,
	0, 0, 0, 365, 366, 367, 368, 369, 370, 0,
	371, 373, 372, 0, 374, 572, 0, 375, 376, 0,
	0, 377, 378, 379, 0, 0, 380, 381, 382, 383,
	0, 384, 385, 387, 389, 386, 388, 393, 390, 391,
	392, 395, 0, 394, 0, 396, 397, 398, 403, 405,
	406, 401, 402, 404, 407, 400, 0, 399, 0, 0,
	0, 408, 409, 0, 573, 410, 574, 412, 413, 0,
	0, 414, 0, 0, 0, 416, 417, 418, 0, 0,
	419, 420, 575, 0, 421, 0, 576, 422, 423, 415,
	424, 425, 426, 427, 428, 429, 430, 431, 0, 432,
	433, 577, 578, 579, 434, 580, 435, 436, 0, 437,
	0, 438, 439, 440, 441, 442, 443, 444, 581, 446,
	445, 447, 0, 448, 0, 0, 0, 0, 0, 449,
	0, 451, 452, 453, 450, 454, 455, 456, 457, 0,
	458, 459, 460, 0, 461, 462, 463, 464, 582, 465,
	0, 466, 467, 473, 474, 468, 469, 475, 476, 477,
	478, 479, 0, 481, 482, 480, 483, 484, 485, 0,
	486, 470, 471, 487, 488, 0, 489, 490, 491, 492,
	493, 494, 583, 0, 495, 0, 496, 497, 498, 499,
	472, 500, 505, 584, 501, 502, 503, 504, 585, 0,
	507, 508, 0, 506, 0, 509, 510, 511, 512, 513,
	514, 327, 515, 0, 516, 586, 587, 588, 589, 0,
	523, 0, 517, 518, 590, 519, 591, 0, 520, 521,
	522, 0, 524, 525, 0, 0, 526, 527, 528, 530,
	531, 529, 532, 0, 533, 0, 0, 534, 535, 536,
	592, 593, 594, 0, 538, 537, 539, 595, 243, 2709,
	0, 0, 540, 541, 596, 542, 543, 544, 0, 0,
	0, 0, 0, 0, 0, 249, 250, 251, 252, 253,
	254, 0, 255, 256, 0, 0, 0, 0, 0, 545,
	0, 0, 0, 0, 257, 258, 260, 259, 261, 262,
	263, 264, 546, 547, 0, 265, 548, 266, 549, 0,
	550, 267, 268, 269, 270, 271, 272, 0, 0, 0,
	273, 551, 552, 553, 0, 274, 275, 554, 0, 0,
	0, 276, 277, 278, 279, 280, 281, 282, 0, 0,
	284, 285, 286, 283, 0, 287, 0, 288, 289, 290,
	291, 292, 293, 0, 294, 295, 296, 0, 297, 298,
	0, 0, 0, 0, 0, 0, 0, 299, 300, 301,
	302, 0, 303, 555, 556, 0, 307, 304, 305, 0,
	308, 306, 0, 309, 310, 311, 0, 0, 312, 313,
	314, 0, 315, 316, 0, 317, 318, 319, 0, 320,
	321, 557, 322, 323, 324, 326, 328, 325, 329, 330,
	331, 332, 558, 559, 0, 0, 0, 0, 0, 0,
	0, 333, 334, 335, 560, 0, 0, 0, 336, 0,
	337, 0, 0, 0, 338, 339, 561, 562, 340, 341,
	0, 342, 563, 0, 564, 343, 0, 344, 345, 346,
	347, 348, 565, 566, 567, 411, 0, 349, 350, 0,
	351, 352, 353, 354, 0, 0, 0, 0, 355, 356,
	358, 0, 0, 357, 568, 569, 0, 570, 0, 359,
	360, 0, 571, 0, 361, 362, 363, 0, 364, 0,
	0, 0, 365, 366, 367, 368, 369, 370, 0, 371,
	373, 372, 0, 374, 572, 0, 375, 376, 0, 0,
	377, 378, 379, 0, 0, 380, 381, 382, 383, 0,
	384, 385, 387, 389, 386, 388, 393, 390, 391, 392,
	395, 0, 394, 0, 396, 397, 398, 403, 405, 406,
	401, 402, 404, 407, 400, 0, 399, 0, 0, 0,
	408, 409, 0, 573, 410, 574, 412, 413, 0, 0,
	414, 0, 0, 0, 416, 417, 2706, 0, 0, 419,
	420, 575, 0, 421, 0, 576, 422, 423, 415, 424,
	425, 426, 427, 428, 429, 430, 431, 0, 432, 433,
	577, 578, 579, 434, 580, 435, 436, 0, 437, 0,
	438, 439, 440, 441, 442, 443, 444, 581, 446, 445,
	447, 0, 448, 0, 0, 0, 0, 0, 449, 0,
	451, 452, 453, 450, 454, 455, 456, 457, 0, 458,
	459, 460, 0, 461, 462, 463, 464, 582, 465, 0,
	466, 467, 473, 474, 468, 469, 475, 476, 477, 478,
	479, 0, 481, 482, 480, 483, 484, 485, 0, 486,
	470, 471, 487, 488, 0, 489, 490, 491, 492, 493,
	494, 583, 0, 495, 0, 496, 497, 498, 499, 472,
	500, 505, 584, 501, 502, 503, 504, 585, 0, 507,
	508, 0, 506, 0, 509, 510, 511, 512, 513, 514,
	327, 515, 0, 516, 586, 587, 588, 589, 0, 523,
	0, 517, 518, 590, 519, 591, 0, 520, 521, 522,
	0, 524, 525, 0, 0, 526, 527, 528, 530, 531,
	529, 532, 0, 533, 0, 0, 534, 535, 536, 592,
	593, 594, 243, 538, 537, 539, 595, 0, 0, 0,
	0, 540, 541, 596, 542, 543, 544, 0, 0, 249,
	250, 251, 252, 253, 254, 2107, 255, 256, 0, 0,
	0, 0, 0, 545, 0, 0, 0, 0, 257, 258,
	260, 259, 261, 262, 263, 264, 546, 547, 0, 265,
	548, 266, 549, 0, 550, 267, 268, 269, 270, 271,
	272, 0, 0, 0, 273, 551, 552, 553, 0, 274,
	275, 554, 0, 0, 0, 276, 277, 278, 279, 280,
	281, 282, 0, 0, 284, 285, 286, 283, 0, 287,
	0, 288, 289, 290, 291, 292, 293, 0, 294, 295,
	296, 0, 297, 298, 0, 0, 0, 0, 0, 0,
	0, 299, 300, 301, 302, 0, 303, 555, 556, 0,
	307, 304, 305, 0, 308, 306, 0, 309, 310, 311,
	0, 0, 312, 313, 314, 0, 315, 316, 0, 317,
	318, 319, 0, 320, 321, 557, 322, 323, 324, 326,
	328, 325, 329, 330, 331, 332, 558, 559, 0, 0,
	0, 0, 0, 0, 0, 333, 334, 335, 560, 0,
	0, 0, 336, 0, 337, 0, 0, 0, 338, 339,
	561, 562, 340, 341, 0, 342, 563, 0, 564, 343,
	0, 344, 345, 346, 347, 348, 565, 566, 567, 411,
	0, 349, 350, 0, 351, 352, 353, 354, 0, 0,
	0, 0, 355, 356, 358, 0, 0, 357, 568, 569,
	0, 570, 0, 359, 360, 0, 571, 0, 361, 362,
	363, 0, 364, 0, 0, 0, 365, 366, 367, 368,
	369, 370, 0, 371, 373, 372, 0, 374, 572, 0,
	375, 376, 0, 0, 377, 378, 379, 0, 0, 380,
	381, 382, 383, 0, 384, 385, 387, 389, 386, 388,
	393, 390, 391, 392, 395, 0, 394, 0, 396, 397,
	398, 403, 405, 406, 401, 402, 404, 407, 400, 0,
	399, 0, 0, 0, 408, 409, 0, 573, 410, 574,
	412, 413, 0, 0, 414, 0, 0, 0, 416, 417,
	418, 0, 0, 419, 420, 575, 0, 421, 0, 576,
	422, 423, 415, 424, 425, 426, 427, 428, 429, 430,
	431, 0, 432, 433, 577, 578, 579, 434, 580, 435,
	436, 0, 437, 0, 438, 439, 440, 441, 442, 443,
	444, 581, 446, 445, 447, 0, 448, 0, 0, 0,
	0, 0, 449, 0, 451, 452, 453, 450, 454, 455,
	456, 457, 0, 458, 459, 460, 0, 461, 462, 463,
	464, 582, 465, 0, 466, 467, 473, 474, 468, 469,
	475, 476, 477, 478, 479, 0, 481, 482, 480, 483,
	484, 485, 0, 486, 470, 471, 487, 488, 0, 489,
	490, 491, 492, 493, 494, 583, 0, 495, 0, 496,
	497, 498, 499, 472, 500, 505, 584, 501, 502, 503,
	504, 585, 0, 507, 508, 0, 506, 0, 509, 510,
	511, 512, 513, 514, 327, 515, 0, 516, 586, 587,
	588, 589, 0, 523, 0, 517, 518, 590, 519, 591,
	0, 520, 521, 522, 0, 524, 525, 0, 0, 526,
	527, 528, 530, 531, 529, 532, 0, 533, 0, 0,
	534, 535, 536, 592, 593, 594, 0, 538, 537, 539,
	595, 2095, 0, 243, 0, 540, 541, 596, 542, 543,
	544, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	249, 250, 251, 252, 253, 254, 0, 255, 256, 0,
	0, 0, 0, 0, 545, 0, 0, 0, 0, 257,
	258, 260, 259, 261, 262, 263, 264, 546, 547, 0,
	265, 548, 266, 549, 0, 550, 267, 268, 269, 270,
	271, 272, 0, 0, 0, 273, 551, 552, 553, 0,
	274, 275, 554, 0, 0, 0, 276, 277, 278, 279,
	280, 281, 282, 0, 0, 284, 285, 286, 283, 0,
	287, 0, 288, 289, 290, 291, 292, 293, 0, 294,
	295, 296, 0, 297, 298, 0, 0, 0, 0, 0,
	0, 0, 299, 300, 301, 302, 0, 303, 555, 556,
	0, 307, 304, 305, 0, 308, 306, 0, 309, 310,
	311, 0, 0, 312, 313, 314, 0, 315, 316, 0,
	317, 318, 319, 0, 320, 321, 557, 322, 323, 324,
	326, 328, 325, 329, 330, 331, 332, 558, 559, 0,
	0, 0, 0, 0, 0, 0, 333, 334, 335, 560,
	0, 0, 0, 336, 0, 337, 0, 0, 0, 338,
	339, 561, 562, 340, 341, 0, 342, 563, 0, 564,
	343, 0, 344, 345, 346, 347, 348, 565, 566, 567,
	411, 0, 349, 350, 0, 351, 352, 353, 354, 0,
	0, 0, 0, 355, 356, 358, 0, 0, 357, 568,
	569, 0, 570, 0, 359, 360, 0, 571, 0, 361,
	362, 363, 0, 364, 0, 0, 0, 365, 366, 367,
	368, 369, 370, 0, 371, 373, 372, 0, 374, 572,
	0, 375, 376, 0, 0, 377, 378, 379, 0, 0,
	380, 381, 382, 383, 0, 384, 385, 387, 389, 386,
	388, 393, 390, 391, 392, 395, 0, 394, 0, 396,
	397, 398, 403, 405, 406, 401, 402, 404, 407, 400,
	0, 399, 0, 0, 0, 408, 409, 0, 573, 410,
	574, 412, 413, 0, 0, 414, 0, 0, 0, 416,
	417, 418, 0, 0, 419, 420, 575, 0, 421, 0,
	576, 422, 423, 415, 424, 425, 426, 427, 428, 429,
	430, 431, 0, 432, 433, 577, 578, 579, 434, 580,
	435, 436, 0, 437, 0, 438, 439, 440, 441, 442,
	443, 444, 581, 446, 445, 447, 0, 448, 0, 0,
	0, 0, 0, 449, 0, 451, 452, 453, 450, 454,
	455, 456, 457, 0, 458, 459, 460, 0, 461, 462,
	463, 464, 582, 465, 0, 466, 467, 473, 474, 468,
	469, 475, 476, 477, 478, 479, 0, 481, 482, 480,
	483, 484, 485, 0, 486, 470, 471, 487, 488, 0,
	489, 490, 491, 492, 493, 494, 583, 0, 495, 0,
	496, 497, 498, 499, 472, 500, 505, 584, 501, 502,
	503, 504, 585, 0, 507, 508, 0, 506, 0, 509,
	510, 511, 512, 513, 514, 327, 515, 0, 516, 586,
	587, 588, 589, 0, 523, 0, 517, 518, 590, 519,
	591, 0, 520, 521, 522, 0, 524, 525, 0, 0,
	526, 527, 528, 530, 531, 529, 532, 0, 533, 0,
	0, 534, 535, 536, 592, 593, 594, 0, 538, 537,
	539, 595, 650, 0, 243, 0, 540, 541, 596, 542,
	543, 544, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 250, 251, 252, 253, 254, 0, 255, 256,
	0, 0, 0, 0, 0, 545, 0, 0, 0, 0,
	257, 258, 1157, 259, 261, 262, 263, 264, 546, 547,
	0, 265, 548, 266, 549, 0, 550, 267, 268, 269,
	270, 271, 272, 0, 0, 0, 273, 551, 552, 1155,
	0, 274, 275, 554, 0, 0, 0, 276, 277, 278,
	279, 280, 281, 282, 0, 0, 284, 285, 286, 283,
	0, 287, 0, 288, 289, 290, 291, 292, 293, 0,
	294, 295, 296, 0, 297, 298, 0, 0, 0, 0,
	0, 0, 0, 299, 300, 301, 302, 0, 303, 555,
	556, 0, 307, 304, 305, 0, 308, 306, 0, 309,
	310, 311, 0, 0, 312, 313, 314, 0, 315, 316,
	0, 317, 318, 319, 0, 320, 321, 557, 322, 323,
	324, 326, 328, 325, 329, 330, 331, 332, 558, 559,
	0, 0, 0, 0, 0, 0, 0, 333, 334, 335,
	560, 0, 0, 0, 336, 0, 337, 0, 0, 0,
	338, 339, 561, 562, 340, 341, 0, 342, 563, 0,
	564, 343, 0, 344, 345, 346, 347, 348, 565, 566,
	567, 411, 0, 349, 350, 0, 351, 352, 353, 354,
	0, 0, 0, 0, 355, 356, 358, 0, 0, 357,
	568, 569, 0, 570, 0, 359, 360, 0, 571, 0,
	361, 362, 363, 0, 364, 0, 0, 0, 365, 366,
	367, 368, 369, 370, 0, 371, 373, 372, 0, 374,
	572, 0, 375, 376, 0, 0, 377, 378, 379, 0,
	0, 380, 381, 382, 383, 0, 384, 385, 387, 389,
	386, 388, 393, 390, 391, 392, 395, 0, 651, 0,
	396, 397, 398, 403, 405, 406, 401, 402, 404, 407,
	400, 0, 399, 0, 0, 0, 408, 409, 0, 573,
	410, 574, 412, 413, 0, 0, 414, 0, 0, 0,
	416, 417, 418, 0, 0, 419, 420, 575, 0, 421,
	0, 576, 422, 423, 415, 424, 425, 426, 427, 428,
	429, 430, 431, 0, 432, 433, 577, 578, 579, 434,
	580, 435, 436, 0, 437, 0, 438, 439, 440, 441,
	442, 443, 444, 581, 446, 445, 447, 0, 448, 0,
	0, 0, 0, 0, 449, 0, 451, 452, 453, 450,
	454, 455, 456, 457, 0, 458, 459, 460, 0, 461,
	462, 463, 464, 582, 465, 0, 466, 467, 473, 474,
	468, 469, 647, 476, 477, 478, 479, 0, 481, 482,
	480, 483, 1158, 485, 0, 486, 470, 471, 487, 488,
	0, 489, 490, 491, 492, 493, 494, 583, 0, 495,
	0, 496, 497, 498, 499, 472, 500, 505, 584, 501,
	502, 503, 504, 585, 0, 507, 508, 0, 506, 0,
	509, 510, 511, 512, 513, 514, 327, 515, 0, 516,
	646, 587, 588, 589, 0, 523, 0, 517, 518, 590,
	519, 591, 0, 520, 521, 522, 0, 524, 525, 0,
	0, 526, 527, 528, 530, 531, 529, 532, 0, 533,
	0, 0, 534, 535, 536, 592, 593, 594, 0, 538,
	537, 539, 595, 650, 0, 243, 0, 540, 541, 596,
	542, 543, 544, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 250, 251, 252, 253, 254, 0, 255,
	256, 0, 0, 0, 0, 0, 545, 0, 0, 0,
	0, 257, 258, 260, 259, 261, 262, 263, 264, 546,
	547, 0, 265, 548, 266, 549, 0, 550, 267, 268,
	269, 270, 271, 272, 0, 0, 0, 273, 551, 552,
	553, 0, 274, 640, 554, 0, 0, 0, 276, 277,
	278, 279, 280, 281, 282, 0, 0, 284, 285, 286,
	283, 0, 287, 0, 288, 289, 290, 291, 292, 293,
	0, 294, 295, 296, 0, 297, 298, 0, 0, 0,
	0, 0, 0, 0, 299, 300, 301, 302, 0, 303,
	555, 556, 0, 307, 304, 305, 0, 308, 306, 0,
	309, 310, 311, 0, 0, 312, 313, 314, 0, 315,
	316, 0, 317, 318, 319, 0, 320, 321, 557, 322,
	323, 324, 326, 328, 325, 329, 330, 331, 332, 558,
	559, 0, 0, 0, 0, 0, 0, 0, 333, 334,
	335, 560, 0, 0, 0, 336, 0, 337, 0, 0,
	0, 338, 339, 561, 562, 340, 341, 0, 342, 563,
	0, 564, 343, 0, 344, 345, 346, 347, 348, 565,
	566, 567, 411, 0, 349, 350, 0, 351, 352, 353,
	354, 0, 0, 0, 0, 355, 356, 358, 0, 0,
	357, 568, 569, 0, 570, 0, 359, 360, 0, 571,
	0, 361, 362, 363, 0, 364, 0, 0, 0, 365,
	366, 367, 368, 369, 370, 0, 371, 373, 372, 0,
	374, 572, 0, 375, 376, 0, 0, 377, 378, 379,
	0, 0, 380, 381, 382, 383, 0, 384, 385, 387,
	389, 386, 388, 393, 390, 391, 392, 395, 0, 651,
	0, 396, 397, 398, 403, 405, 406, 401, 402, 404,
	407, 400, 0, 399, 0, 0, 0, 408, 409, 0,
	573, 410, 574, 412, 413, 0, 0, 414, 0, 0,
	0, 416, 417, 418, 0, 0, 419, 420, 575, 0,
	421, 0, 576, 422, 423, 415, 424, 425, 426, 427,
	428, 429, 430, 431, 0, 432, 433, 577, 578, 579,
	434, 580, 435, 436, 0, 437, 0, 438, 439, 440,
	441, 442, 443, 444, 581, 446, 445, 447, 0, 448,
	0, 0, 0, 0, 0, 449, 0, 451, 452, 453,
	450, 454, 455, 456, 457, 0, 458, 459, 460, 0,
	461, 462, 463, 464, 582, 465, 0, 466, 467, 473,
	474, 468, 469, 647, 476, 477, 478, 479, 0, 481,
	482, 480, 483, 1466, 485, 0, 486, 470, 471, 487,
	488, 0, 489, 490, 491, 492, 493, 494, 583, 0,
	495, 0, 496, 497, 498, 499, 472, 500, 505, 584,
	501, 502, 503, 504, 585, 0, 507, 508, 0, 506,
	0, 509, 510, 511, 512, 513, 514, 327, 515, 0,
	516, 646, 587, 588, 589, 0, 523, 0, 517, 518,
	590, 519, 591, 0, 520, 521, 522, 0, 524, 525,
	0, 0, 526, 527, 528, 530, 531, 529, 532, 0,
	533, 0, 0, 534, 535, 536, 592, 593, 594, 0,
	538, 537, 539, 595, 1447, 0, 243, 0, 540, 541,
	596, 542, 543, 544, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 250, 251, 252, 253, 254, 0,
	255, 256, 0, 0, 0, 0, 0, 545, 0, 0,
	0, 0, 257, 258, 260, 259, 261, 262, 263, 264,
	546, 547, 0, 265, 548, 266, 549, 0, 550, 267,
	268, 269, 270, 271, 272, 0, 0, 0, 273, 551,
	552, 553, 0, 274, 275, 554, 0, 0, 0, 276,
	277, 278, 279, 280, 281, 282, 0, 0, 284, 285,
	286, 283, 0, 287, 0, 288, 289, 290, 291, 292,
	293, 0, 294, 295, 296, 0, 297, 298, 0, 0,
	0, 0, 0, 0, 0, 299, 300, 301, 302, 0,
	303, 555, 556, 0, 307, 304, 305, 0, 308, 306,
	0, 309, 310, 311, 0, 0, 312, 313, 314, 0,
	315, 316, 0, 317, 318, 319, 0, 320, 321, 557,
	322, 323, 324, 326, 328, 325, 329, 330, 331, 332,
	558, 559, 0, 0, 0, 0, 0, 0, 0, 333,
	334, 335, 560, 0, 0, 0, 336, 0, 337, 0,
	0, 0, 338, 339, 561, 562, 340, 341, 0, 342,
	563, 0, 564, 343, 0, 344, 345, 346, 347, 348,
	1446, 566, 567, 411, 0, 349, 350, 0, 351, 352,
	353, 354, 0, 0, 0, 0, 355, 356, 358, 0,
	0, 357, 568, 569, 0, 570, 0, 359, 360, 0,
	571, 0, 361, 362, 363, 0, 364, 0, 0, 0,
	365, 366, 367, 368, 369, 370, 0, 371, 373, 372,
	0, 374, 572, 0, 375, 376, 0, 0, 377, 378,
	379, 0, 0, 380, 381, 382, 383, 0, 384, 385,
	387, 389, 386, 388, 393, 390, 391, 392, 395, 0,
	394, 0, 396, 397, 398, 403, 405, 406, 401, 402,
	404, 407, 400, 0, 399, 0, 0, 0, 408, 409,
	0, 573, 410, 574, 412, 413, 0, 0, 414, 0,
	0, 0, 416, 417, 418, 0, 0, 419, 420, 575,
	0, 421, 0, 576, 422, 423, 415, 424, 425, 426,
	427, 428, 429, 430, 431, 0, 432, 433, 577, 578,
	579, 434, 580, 435, 436, 0, 437, 0, 438, 439,
	440, 441, 442, 443, 444, 581, 446, 445, 447, 0,
	448, 0, 0, 0, 0, 0, 449, 0, 451, 452,
	453, 450, 454, 455, 456, 457, 0, 458, 459, 460,
	0, 461, 462, 463, 464, 582, 465, 0, 466, 467,
	473, 474, 468, 469, 475, 476, 477, 478, 479, 0,
	481, 482, 480, 483, 484, 485, 0, 486, 470, 471,
	487, 488, 0, 489, 490, 491, 492, 493, 494, 583,
	0, 495, 0, 496, 497, 498, 499, 472, 500, 505,
	584, 501, 502, 503, 504, 585, 0, 507, 508, 0,
	506, 0, 509, 510, 511, 512, 513, 514, 327, 515,
	0, 516, 586, 587, 588, 589, 0, 523, 0, 517,
	518, 590, 519, 591, 0, 520, 521, 522, 0, 524,
	525, 0, 0, 526, 527, 528, 530, 531, 529, 532,
	0, 533, 0, 0, 534, 535, 536, 592, 593, 594,
	0, 538, 537, 539, 595, 1440, 0, 243, 0, 540,
	541, 596, 542, 543, 544, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 250, 251, 252, 253, 254,
	0, 255, 256, 0, 0, 0, 0, 0, 545, 0,
	0, 0, 0, 257, 258, 260, 259, 261, 262, 263,
	264, 546, 547, 0, 265, 548, 266, 549, 0, 550,
	267, 268, 269, 270, 271, 272, 0, 0, 0, 273,
	551, 552, 553, 0, 274, 275, 554, 0, 0, 0,
	276, 277, 278, 279, 280, 281, 282, 0, 0, 284,
	285, 286, 283, 0, 287, 0, 288, 289, 290, 291,
	292, 293, 0, 294, 295, 296, 0, 297, 298, 0,
	0, 0, 0, 0, 0, 0, 299, 300, 301, 302,
	0, 303, 555, 556, 0, 307, 304, 305, 0, 308,
	306, 0, 309, 310, 311, 0, 0, 312, 313, 314,
	0, 315, 316, 0, 317, 318, 319, 0, 320, 321,
	557, 322, 323, 324, 326, 328, 325, 329, 330, 331,
	332, 558, 559, 0, 0, 0, 0, 0, 0, 0,
	333, 334, 335, 560, 0, 0, 0, 336, 0, 337,
	0, 0, 0, 338, 339, 561, 562, 340, 341, 0,
	342, 563, 0, 564, 343, 0, 344, 345, 346, 347,
	348, 1439, 566, 567, 411, 0, 349, 350, 0, 351,
	352, 353, 354, 0, 0, 0, 0, 355, 356, 358,
	0, 0, 357, 568, 569, 0, 570, 0, 359, 360,
	0, 571, 0, 361, 362, 363, 0, 364, 0, 0,
	0, 365, 366, 367, 368, 369, 370, 0, 371, 373,
	372, 0, 374, 572, 0, 375, 376, 0, 0, 377,
	378, 379, 0, 0, 380, 381, 382, 383, 0, 384,
	385, 387, 389, 386, 388, 393, 390, 391, 392, 395,
	0, 394, 0, 396, 397, 398, 403, 405, 406, 401,
	402, 404, 407, 400, 0, 399, 0, 0, 0, 408,
	409, 0, 573, 410, 574, 412, 413, 0, 0, 414,
	0, 0, 0, 416, 417, 418, 0, 0, 419, 420,
	575, 0, 421, 0, 576, 422, 423, 415, 424, 425,
	426, 427, 428, 429, 430, 431, 0, 432, 433, 577,
	578, 579, 434, 580, 435, 436, 0, 437, 0, 438,
	439, 440, 441, 442, 443, 444, 581, 446, 445, 447,
	0, 448, 0, 0, 0, 0, 0, 449, 0, 451,
	452, 453, 450, 454, 455, 456, 457, 0, 458, 459,
	460, 0, 461, 462, 463, 464, 582, 465, 0, 466,
	467, 473, 474, 468, 469, 475, 476, 477, 478, 479,
	0, 481, 482, 480, 483, 484, 485, 0, 486, 470,
	471, 487, 488, 0, 489, 490, 491, 492, 493, 494,
	583, 0, 495, 0, 496, 497, 498, 499, 472, 500,
	505, 584, 501, 502, 503, 504, 585, 0, 507, 508,
	0, 506, 0, 509, 510, 511, 512, 513, 514, 327,
	515, 0, 516, 586, 587, 588, 589, 0, 523, 0,
	517, 518, 590, 519, 591, 0, 520, 521, 522, 0,
	524, 525, 0, 0, 526, 527, 528, 530, 531, 529,
	532, 0, 533, 0, 0, 534, 535, 536, 592, 593,
	594, 0, 538, 537, 539, 595, 1389, 0, 243, 0,
	540, 541, 596, 542, 543, 544, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 250, 251, 252, 253,
	254, 0, 255, 256, 0, 0, 0, 0, 0, 545,
	0, 0, 0, 0, 257, 258, 260, 259, 261, 262,
	263, 264, 546, 547, 0, 265, 548, 266, 549, 0,
	550, 267, 268, 269, 270, 271, 272, 0, 0, 0,
	273, 551, 552, 553, 0, 274, 275, 554, 0, 0,
	0, 276, 277, 278, 279, 280, 281, 282, 0, 0,
	284, 285, 286, 283, 0, 287, 0, 288, 289, 290,
	291, 292, 293, 0, 294, 295, 296, 0, 297, 298,
	0, 0, 0, 0, 0, 0, 0, 299, 300, 301,
	302, 0, 303, 555, 556, 0, 307, 304, 305, 0,
	308, 306, 0, 309, 310, 311, 0, 0, 312, 313,
	314, 0, 315, 316, 0, 317, 318, 319, 0, 320,
	321, 557, 322, 323, 324, 326, 328, 325, 329, 330,
	331, 332, 558, 559, 0, 0, 0, 0, 0, 0,
	0, 333, 334, 335, 560, 0, 0, 0, 336, 0,
	337, 0, 0, 0, 338, 339, 561, 562, 340, 341,
	0, 342, 563, 0, 564, 343, 0, 344, 345, 346,
	347, 348, 1388, 566, 567, 411, 0, 349, 350, 0,
	351, 352, 353, 354, 0, 0, 0, 0, 355, 356,
	358, 0, 0, 357, 568, 569, 0, 570, 0, 359,
	360, 0, 571, 0, 361, 362, 363, 0, 364, 0,
	0, 0, 365, 366, 367, 368, 369, 370, 0, 371,
	373, 372, 0, 374, 572, 0, 375, 376, 0, 0,
	377, 378, 379, 0, 0, 380, 381, 382, 383, 0,
	384, 385, 387, 389, 386, 388, 393, 390, 391, 392,
	395, 0, 394, 0, 396, 397, 398, 403, 405, 406,
	401, 402, 404, 407, 400, 0, 399, 0, 0, 0,
	408, 409, 0, 573, 410, 574, 412, 413, 0, 0,
	414, 0, 0, 0, 416, 417, 418, 0, 0, 419,
	420, 575, 0, 421, 0, 576, 422, 423, 415, 424,
	425, 426, 427, 428, 429, 430, 431, 0, 432, 433,
	577, 578, 579, 434, 580, 435, 436, 0, 437, 0,
	438, 439, 440, 441, 442, 443, 444, 581, 446, 445,
	447, 0, 448, 0, 0, 0, 0, 0, 449, 0,
	451, 452, 453, 450, 454, 455, 456, 457, 0, 458,
	459, 460, 0, 461, 462, 463, 464, 582, 465, 0,
	466, 467, 473, 474, 468, 469, 475, 476, 477, 478,
	479, 0, 481, 482, 480, 483, 484, 485, 0, 486,
	470, 471, 487, 488, 0, 489, 490, 491, 492, 493,
	494, 583, 0, 495, 0, 496, 497, 498, 499, 472,
	500, 505, 584, 501, 502, 503, 504, 585, 0, 507,
	508, 0, 506, 0, 509, 510, 511, 512, 513, 514,
	327, 515, 0, 516, 586, 587, 588, 589, 0, 523,
	0, 517, 518, 590, 519, 591, 0, 520, 521, 522,
	0, 524, 525, 0, 0, 526, 527, 528, 530, 531,
	529, 532, 0, 533, 0, 0, 534, 535, 536, 592,
	593, 594, 0, 538, 537, 539, 595, 1374, 0, 243,
	0, 540, 541, 596, 542, 543, 544, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 249, 250, 251, 252,
	253, 254, 0, 255, 256, 0, 0, 0, 0, 0,
	545, 0, 0, 0, 0, 257, 258, 260, 259, 261,
	262, 263, 264, 546, 547, 0, 265, 548, 266, 549,
	0, 550, 267, 268, 269, 270, 271, 272, 0, 0,
	0, 273, 551, 552, 553, 0, 274, 275, 554, 0,
	0, 0, 276, 277, 278, 279, 280, 281, 282, 0,
	0, 284, 285, 286, 283, 0, 287, 0, 288, 289,
	290, 291, 292, 293, 0, 294, 295, 296, 0, 297,
	298, 0, 0, 0, 0, 0, 0, 0, 299, 300,
	301, 302, 0, 303, 555, 556, 0, 307, 304, 305,
	0, 308, 306, 0, 309, 310, 311, 0, 0, 312,
	313, 314, 0, 315, 316, 0, 317, 318, 319, 0,
	320, 321, 557, 322, 323, 324, 326, 328, 325, 329,
	330, 331, 332, 558, 559, 0, 0, 0, 0, 0,
	0, 0, 333, 334, 335, 560, 0, 0, 0, 336,
	0, 337, 0, 0, 0, 338, 339, 561, 562, 340,
	341, 0, 342, 563, 0, 564, 343, 0, 344, 345,
	346, 347, 348, 1373, 566, 567, 411, 0, 349, 350,
	0, 351, 352, 353, 354, 0, 0, 0, 0, 355,
	356, 358, 0, 0, 357, 568, 569, 0, 570, 0,
	359, 360, 0, 571, 0, 361, 362, 363, 0, 364,
	0, 0, 0, 365, 366, 367, 368, 369, 370, 0,
	371, 373, 372, 0, 374, 572, 0, 375, 376, 0,
	0, 377, 378, 379, 0, 0, 380, 381, 382, 383,
	0, 384, 385, 387, 389, 386, 388, 393, 390, 391,
	392, 395, 0, 394, 0, 396, 397, 398, 403, 405,
	406, 401, 402, 404, 407, 400, 0, 399, 0, 0,
	0, 408, 409, 0, 573, 410, 574, 412, 413, 0,
	0, 414, 0, 0, 0, 416, 417, 418, 0, 0,
	419, 420, 575, 0, 421, 0, 576, 422, 423, 415,
	424, 425, 426, 427, 428, 429, 430, 431, 0, 432,
	433, 577, 578, 579, 434, 580, 435, 436, 0, 437,
	0, 438, 439, 440, 441, 442, 443, 444, 581, 446,
	445, 447, 0, 448, 0, 0, 0, 0, 0, 449,
	0, 451, 452, 453, 450, 454, 455, 456, 457, 0,
	458, 459, 460, 0, 461, 462, 463, 464, 582, 465,
	0, 466, 467, 473, 474, 468, 469, 475, 476, 477,
	478, 479, 0, 481, 482, 480, 483, 484, 485, 0,
	486, 470, 471, 487, 488, 0, 489, 490, 491, 492,
	493, 494, 583, 0, 495, 0, 496, 497, 498, 499,
	472, 500, 505, 584, 501, 502, 503, 504, 585, 0,
	507, 508, 0, 506, 0, 509, 510, 511, 512, 513,
	514, 327, 515, 0, 516, 586, 587, 588, 589, 0,
	523, 0, 517, 518, 590, 519, 591, 0, 520, 521,
	522, 0, 524, 525, 0, 0, 526, 527, 528, 530,
	531, 529, 532, 0, 533, 0, 0, 534, 535, 536,
	592, 593, 594, 0, 538, 537, 539, 595, 1369, 0,
	243, 0, 540, 541, 596, 542, 543, 544, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 250, 251,
	252, 253, 254, 0, 255, 256, 0, 0, 0, 0,
	0, 545, 0, 0, 0, 0, 257, 258, 260, 259,
	261, 262, 263, 264, 546, 547, 0, 265, 548, 266,
	549, 0, 550, 267, 268, 269, 270, 271, 272, 0,
	0, 0, 273, 551, 552, 553, 0, 274, 275, 554,
	0, 0, 0, 276, 277, 278, 279, 280, 281, 282,
	0, 0, 284, 285, 286, 283, 0, 287, 0, 288,
	289, 290, 291, 292, 293, 0, 294, 295, 296, 0,
	297, 298, 0, 0, 0, 0, 0, 0, 0, 299,
	300, 301, 302, 0, 303, 555, 556, 0, 307, 304,
	305, 0, 308, 306, 0, 309, 310, 311, 0, 0,
	312, 313, 314, 0, 315, 316, 0, 317, 318, 319,
	0, 320, 321, 557, 322, 323, 324, 326, 328, 325,
	329, 330, 331, 332, 558, 559, 0, 0, 0, 0,
	0, 0, 0, 333, 334, 335, 560, 0, 0, 0,
	336, 0, 337, 0, 0, 0, 338, 339, 561, 562,
	340, 341, 0, 342, 563, 0, 564, 343, 0, 344,
	345, 346, 347, 348, 565, 566, 567, 411, 0, 349,
	350, 0, 351, 352, 353, 354, 0, 0, 0, 0,
	355, 356, 358, 0, 0, 357, 568, 569, 0, 570,
	0, 359, 360, 0, 571, 0, 361, 362, 363, 0,
	364, 0, 0, 0, 365, 366, 367, 368, 369, 370,
	0, 371, 373, 372, 0, 374, 572, 0, 375, 376,
	0, 0, 377, 378, 379, 0, 0, 380, 381, 382,
	383, 0, 384, 385, 387, 389, 386, 388, 393, 390,
	391, 392, 395, 0, 394, 0, 396, 397, 398, 403,
	405, 406, 401, 402, 404, 407, 400, 0, 399, 0,
	0, 0, 408, 409, 0, 573, 410, 574, 412, 413,
	0, 0, 414, 0, 0, 0, 416, 417, 418, 0,
	0, 419, 420, 575, 0, 421, 0, 576, 422, 423,
	415, 424, 425, 426, 427, 428, 429, 430, 431, 0,
	432, 433, 577, 578, 579, 434, 580, 435, 436, 0,
	437, 0, 438, 439, 440, 441, 442, 443, 444, 581,
	446, 445, 447, 0, 448, 0, 0, 0, 0, 0,
	449, 0, 451, 452, 453, 450, 454, 455, 456, 457,
	0, 458, 459, 460, 0, 461, 462, 463, 464, 582,
	465, 0, 466, 467, 473, 474, 468, 469, 475, 476,
	477, 478, 479, 0, 481, 482, 480, 483, 484, 485,
	0, 486, 470, 471, 487, 488, 0, 489, 490, 491,
	492, 493, 494, 583, 0, 495, 0, 496, 497, 498,
	499, 472, 500, 505, 584, 501, 502, 503, 504, 585,
	0, 507, 508, 0, 506, 0, 509, 510, 511, 512,
	513, 514, 327, 515, 0, 516, 586, 587, 588, 589,
	0, 523, 0, 517, 518, 590, 519, 591, 0, 520,
	521, 522, 0, 524, 525, 0, 0, 526, 527, 528,
	530, 531, 529, 532, 0, 533, 0, 0, 534, 535,
	536, 592, 593, 594, 0, 538, 537, 539, 595, 1301,
	0, 243, 0, 540, 541, 596, 542, 543, 544, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 249, 250,
	251, 252, 253, 254, 0, 255, 256, 0, 0, 0,
	0, 0, 545, 0, 0, 0, 0, 257, 258, 260,
	259, 261, 262, 263, 264, 546, 547, 0, 265, 548,
	266, 549, 0, 550, 267, 268, 269, 270, 271, 272,
	0, 0, 0, 273, 551, 552, 553, 0, 274, 275,
	554, 0, 0, 0, 276, 277, 278, 279, 280, 281,
	282, 0, 0, 284, 285, 286, 283, 0, 287, 0,
	288, 289, 290, 291, 292, 293, 0, 294, 295, 296,
	0, 297, 298, 0, 0, 0, 0, 0, 0, 0,
	299, 300, 301, 302, 0, 303, 555, 556, 0, 307,
	304, 305, 0, 308, 306, 0, 309, 310, 311, 0,
	0, 312, 313, 314, 0, 315, 316, 0, 317, 318,
	319, 0, 320, 321, 557, 322, 323, 324, 326, 328,
	325, 329, 330, 331, 332, 558, 559, 0, 0, 0,
	0, 0, 0, 0, 333, 334, 335, 560, 0, 0,
	0, 336, 0, 337, 0, 0, 0, 338, 339, 561,
	562, 340, 341, 0, 342, 563, 0, 564, 343, 0,
	344, 345, 346, 347, 348, 565, 566, 567, 411, 0,
	349, 350, 0, 351, 352, 353, 354, 0, 0, 0,
	0, 355, 356, 358, 0, 0, 357, 568, 569, 0,
	570, 0, 359, 360, 0, 571, 0, 361, 362, 363,
	0, 364, 0, 0, 0, 365, 366, 367, 368, 369,
	370, 0, 371, 373, 372, 0, 374, 572, 0, 375,
	376, 0, 0, 377, 378, 379, 0, 0, 380, 381,
	382, 383, 0, 384, 385, 387, 389, 386, 388, 393,
	390, 391, 392, 395, 0, 394, 0, 396, 397, 398,
	403, 405, 406, 401, 402, 404, 407, 400, 0, 399,
	0, 0, 0, 408, 409, 0, 573, 410, 574, 412,
	413, 0, 0, 414, 0, 0, 0, 416, 417, 418,
	0, 0, 419, 420, 575, 0, 421, 0, 576, 422,
	423, 415, 424, 425, 426, 427, 428, 429, 430, 431,
	0, 432, 433, 577, 578, 579, 434, 580, 435, 436,
	0, 437, 0, 438, 439, 440, 441, 442, 443, 444,
	581, 446, 445, 447, 0, 448, 0, 0, 0, 0,
	0, 449, 0, 451, 452, 453, 450, 454, 455, 456,
	457, 0, 458, 459, 460, 0, 461, 462, 463, 464,
	582, 465, 0, 466, 467, 473, 474, 468, 469, 475,
	476, 477, 478, 479, 0, 481, 482, 480, 483, 484,
	485, 0, 486, 470, 471, 487, 488, 0, 489, 490,
	491, 492, 493, 494, 583, 0, 495, 0, 496, 497,
	498, 499, 472, 500, 505, 584, 501, 502, 503, 504,
	585, 0, 507, 508, 0, 506, 0, 509, 510, 511,
	512, 513, 514, 327, 515, 0, 516, 586, 587, 588,
	589, 0, 523, 0, 517, 518, 590, 519, 591, 0,
	520, 521, 522, 0, 524, 525, 0, 0, 526, 527,
	528, 530, 531, 529, 532, 0, 533, 0, 0, 534,
	535, 536, 592, 593, 594, 0, 538, 537, 539, 595,
	1285, 0, 243, 0, 540, 541, 596, 542, 543, 544,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	250, 251, 252, 253, 254, 0, 255, 256, 0, 0,
	0, 0, 0, 545, 0, 0, 0, 0, 257, 258,
	260, 259, 261, 262, 263, 264, 546, 547, 0, 265,
	548, 266, 549, 0, 550, 267, 268, 269, 270, 271,
	272, 0, 0, 0, 273, 551, 552, 553, 0, 274,
	275, 554, 0, 0, 0, 276, 277, 278, 279, 280,
	281, 282, 0, 0, 284, 285, 286, 283, 0, 287,
	0, 288, 289, 290, 291, 292, 293, 0, 294, 295,
	296, 0, 297, 298, 0, 0, 0, 0, 0, 0,
	0, 299, 300, 301, 302, 0, 303, 555, 556, 0,
	307, 304, 305, 0, 308, 306, 0, 309, 310, 311,
	0, 0, 312, 313, 314, 0, 315, 316, 0, 317,
	318, 319, 0, 320, 321, 557, 322, 323, 324, 326,
	328, 325, 329, 330, 331, 332, 558, 559, 0, 0,
	0, 0, 0, 0, 0, 333, 334, 335, 560, 0,
	0, 0, 336, 0, 337, 0, 0, 0, 338, 339,
	561, 562, 340, 341, 0, 342, 563, 0, 564, 343,
	0, 344, 345, 346, 347, 348, 565, 566, 567, 411,
	0, 349, 350, 0, 351, 352, 353, 354, 0, 0,
	0, 0, 355, 356, 358, 0, 0, 357, 568, 569,
	0, 570, 0, 359, 360, 0, 571, 0, 361, 362,
	363, 0, 364, 0, 0, 0, 365, 366, 367, 368,
	369, 370, 0, 371, 373, 372, 0, 374, 572, 0,
	375, 376, 0, 0, 377, 378, 379, 0, 0, 380,
	381, 382, 383, 0, 384, 385, 387, 389, 386, 388,
	393, 390, 391, 392, 395, 0, 394, 0, 396, 397,
	398, 403, 405, 406, 401, 402, 404, 407, 400, 0,
	399, 0, 0, 0, 408, 409, 0, 573, 410, 574,
	412, 413, 0, 0, 414, 0, 0, 0, 416, 417,
	418, 0, 0, 419, 420, 575, 0, 421, 0, 576,
	422, 423, 415, 424, 425, 426, 427, 428, 429, 430,
	431, 0, 432, 433, 577, 578, 579, 434, 580, 435,
	436, 0, 437, 0, 438, 439, 440, 441, 442, 443,
	444, 581, 446, 445, 447, 0, 448, 0, 0, 0,
	0, 0, 449, 0, 451, 452, 453, 450, 454, 455,
	456, 457, 0, 458, 459, 460, 0, 461, 462, 463,
	464, 582, 465, 0, 466, 467, 473, 474, 468, 469,
	475, 476, 477, 478, 479, 0, 481, 482, 480, 483,
	484, 485, 0, 486, 470, 471, 487, 488, 0, 489,
	490, 491, 492, 493, 494, 583, 0, 495, 0, 496,
	497, 498, 499, 472, 500, 505, 584, 501, 502, 503,
	504, 585, 0, 507, 508, 0, 506, 0, 509, 510,
	511, 512, 513, 514, 327, 515, 0, 516, 586, 587,
	588, 589, 0, 523, 0, 517, 518, 590, 519, 591,
	0, 520, 521, 522, 0, 524, 525, 0, 0, 526,
	527, 528, 530, 531, 529, 532, 0, 533, 0, 0,
	534, 535, 536, 592, 593, 594, 0, 538, 537, 539,
	595, 650, 0, 243, 0, 540, 541, 596, 542, 543,
	544, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	249, 250, 251, 252, 253, 254, 0, 255, 256, 0,
	0, 0, 0, 0, 545, 0, 0, 0, 0, 257,
	258, 1157, 259, 261, 262, 263, 264, 546, 547, 0,
	265, 548, 266, 549, 0, 550, 267, 268, 269, 270,
	271, 272, 0, 0, 0, 273, 551, 552, 1155, 0,
	274, 275, 554, 0, 0, 0, 276, 277, 278, 279,
	280, 281, 282, 0, 0, 284, 285, 286, 283, 0,
	287, 0, 288, 289, 290, 291, 292, 293, 0, 294,
	295, 296, 0, 297, 298, 0, 0, 0, 0, 0,
	0, 0, 299, 300, 301, 302, 0, 303, 555, 556,
	0, 307, 304, 305, 0, 308, 306, 0, 309, 310,
	311, 0, 0, 312, 313, 314, 0, 315, 316, 0,
	317, 318, 319, 0, 320, 321, 557, 322, 323, 324,
	326, 328, 325, 329, 330, 331, 332, 558, 559, 0,
	0, 0, 0, 0, 0, 0, 333, 334, 335, 560,
	0, 0, 0, 336, 0, 337, 0, 0, 0, 338,
	339, 561, 562, 340, 341, 0, 342, 563, 0, 564,
	343, 0, 344, 345, 346, 347, 348, 565, 566, 567,
	411, 0, 349, 350, 0, 351, 352, 353, 354, 0,
	0, 0, 0, 355, 356, 358, 0, 0, 357, 568,
	569, 0, 570, 0, 359, 360, 0, 571, 0, 361,
	362, 363, 0, 364, 0, 0, 0, 365, 366, 367,
	368, 369, 370, 0, 371, 373, 372, 0, 374, 572,
	0, 375, 376, 0, 0, 377, 378, 379, 0, 0,
	380, 381, 382, 383, 0, 384, 385, 387, 389, 386,
	388, 393, 390, 391, 392, 395, 0, 651, 0, 396,
	397, 398, 403, 405, 406, 401, 402, 404, 407, 400,
	0, 399, 0, 0, 0, 408, 409, 0, 573, 410,
	574, 412, 413, 0, 0, 414, 0, 0, 0, 416,
	417, 418, 0, 0, 419, 420, 575, 0, 421, 0,
	576, 422, 423, 415, 424, 425, 426, 427, 428, 429,
	430, 431, 0, 432, 433, 577, 578, 579, 434, 580,
	435, 436, 0, 437, 0, 438, 439, 440, 441, 442,
	443, 444, 581, 446, 445, 447, 0, 448, 0, 0,
	0, 0, 0, 449, 0, 451, 452, 453, 450, 454,
	455, 456, 457, 0, 458, 459, 460, 0, 461, 462,
	463, 464, 582, 465, 0, 466, 467, 473, 474, 468,
	469, 647, 476, 477, 478, 479, 0, 481, 482, 480,
	483, 1158, 485, 0, 486, 470, 471, 487, 488, 0,
	489, 490, 491, 492, 493, 494, 583, 0, 495, 0,
	496, 497, 498, 499, 472, 500, 505, 584, 501, 502,
	503, 504, 585, 0, 507, 508, 0, 506, 0, 509,
	510, 511, 512, 513, 514, 327, 515, 0, 516, 646,
	587, 588, 589, 0, 523, 0, 517, 1156, 590, 519,
	591, 0, 520, 521, 522, 0, 524, 525, 0, 0,
	526, 527, 528, 530, 531, 529, 532, 0, 533, 0,
	0, 534, 535, 536, 592, 593, 594, 243, 538, 537,
	539, 595, 0, 0, 0, 0, 540, 541, 596, 542,
	543, 544, 0, 0, 249, 250, 251, 252, 253, 254,
	1138, 255, 256, 0, 0, 0, 0, 0, 545, 0,
	0, 0, 0, 257, 258, 260, 259, 261, 262, 263,
	264, 546, 547, 0, 265, 548, 266, 549, 0, 550,
	267, 268, 269, 270, 271, 272, 0, 0, 0, 273,
	551, 552, 553, 0, 274, 275, 554, 0, 0, 0,
	276, 277, 278, 279, 280, 281, 282, 0, 0, 284,
	285, 286, 283, 0, 287, 0, 288, 289, 290, 291,
	292, 293, 0, 294, 295, 296, 0, 297, 298, 0,
	0, 0, 0, 0, 0, 0, 299, 300, 301, 302,
	0, 303, 555, 556, 0, 307, 304, 305, 0, 308,
	306, 0, 309, 310, 311, 0, 0, 312, 313, 314,
	0, 315, 316, 0, 317, 318, 319, 0, 320, 321,
	557, 322, 323, 324, 326, 328, 325, 329, 330, 331,
	332, 558, 559, 0, 0, 0, 0, 0, 0, 0,
	333, 334, 335, 560, 0, 0, 0, 336, 0, 337,
	0, 0, 0, 338, 339, 561, 562, 340, 341, 0,
	342, 563, 0, 564, 343, 0, 344, 345, 346, 347,
	348, 565, 566, 567, 411, 0, 349, 350, 0, 351,
	352, 353, 354, 0, 0, 0, 0, 355, 356, 358,
	0, 0, 357, 568, 569, 0, 570, 0, 359, 360,
	0, 571, 0, 361, 362, 363, 0, 364, 0, 0,
	0, 365, 366, 367, 368, 369, 370, 0, 371, 373,
	372, 0, 374, 572, 0, 375, 376, 0, 0, 377,
	378, 379, 0, 0, 380, 381, 382, 383, 0, 384,
	385, 387, 389, 386, 388, 393, 390, 391, 392, 395,
	0, 394, 0, 396, 397, 398, 403, 405, 406, 401,
	402, 404, 407, 400, 0, 399, 0, 0, 0, 408,
	409, 0, 573, 410, 574, 412, 413, 0, 0, 414,
	0, 0, 0, 416, 417, 418, 0, 0, 419, 420,
	575, 0, 421, 0, 576, 422, 423, 415, 424, 425,
	426, 427, 428, 429, 430, 431, 0, 432, 433, 577,
	578, 579, 434, 580, 435, 436, 0, 437, 0, 438,
	439, 440, 441, 442, 443, 444, 581, 446, 445, 447,
	0, 448, 0, 0, 0, 0, 0, 449, 0, 451,
	452, 453, 450, 454, 455, 456, 457, 0, 458, 459,
	460, 0, 461, 462, 463, 464, 582, 465, 0, 466,
	467, 473, 474, 468, 469, 475, 476, 477, 478, 479,
	0, 481, 482, 480, 483, 484, 485, 0, 486, 470,
	471, 487, 488, 0, 489, 490, 491, 492, 493, 494,
	583, 0, 495, 0, 496, 497, 498, 499, 472, 500,
	505, 584, 501, 502, 503, 504, 585, 0, 507, 508,
	0, 506, 0, 509, 510, 511, 512, 513, 514, 327,
	515, 0, 516, 586, 587, 588, 589, 0, 523, 0,
	517, 518, 590, 519, 591, 0, 520, 521, 522, 0,
	524, 525, 0, 0, 526, 527, 528, 530, 531, 529,
	532, 0, 533, 0, 0, 534, 535, 536, 592, 593,
	594, 243, 538, 537, 539, 595, 0, 0, 0, 0,
	540, 541, 596, 542, 543, 544, 0, 0, 249, 250,
	251, 252, 253, 254, 656, 255, 256, 0, 0, 0,
	0, 0, 545, 0, 0, 0, 0, 257, 258, 260,
	259, 261, 262, 263, 264, 546, 547, 0, 265, 548,
	266, 549, 0, 550, 267, 268, 269, 270, 271, 272,
	0, 0, 0, 273, 551, 552, 553, 0, 274, 275,
	554, 0, 0, 0, 276, 277, 278, 279, 280, 281,
	282, 0, 0, 284, 285, 286, 283, 0, 287, 0,
	288, 289, 290, 291, 292, 293, 0, 294, 295, 296,
	0, 297, 298, 0, 0, 0, 0, 0, 0, 0,
	299, 300, 301, 302, 0, 303, 555, 556, 0, 307,
	304, 305, 0, 308, 306, 0, 309, 310, 311, 0,
	0, 312, 313, 314, 0, 315, 316, 0, 317, 318,
	319, 0, 320, 321, 557, 322, 323, 324, 326, 328,
	325, 329, 330, 331, 332, 558, 559, 0, 0, 0,
	0, 0, 0, 0, 333, 334, 335, 560, 0, 0,
	0, 336, 0, 337, 0, 0, 0, 338, 339, 561,
	562, 340, 341, 0, 342, 563, 0, 564, 343, 0,
	344, 345, 346, 347, 348, 565, 566, 567, 411, 0,
	349, 350, 0, 351, 352, 353, 354, 0, 0, 0,
	0, 355, 356, 358, 0, 0, 357, 568, 569, 0,
	570, 0, 359, 360, 0, 571, 0, 361, 362, 363,
	0, 364, 0, 0, 0, 365, 366, 367, 368, 369,
	370, 0, 371, 373, 372, 0, 374, 572, 0, 375,
	376, 0, 0, 377, 378, 379, 0, 0, 380, 381,
	382, 383, 0, 384, 385, 387, 389, 386, 388, 393,
	390, 391, 392, 395, 0, 394, 0, 396, 397, 398,
	403, 405, 406, 401, 402, 404, 407, 400, 0, 399,
	0, 0, 0, 408, 409, 0, 573, 410, 574, 412,
	413, 0, 0, 414, 0, 0, 0, 416, 417, 418,
	0, 0, 419, 420, 575, 0, 421, 0, 576, 422,
	423, 415, 424, 425, 426, 427, 428, 429, 430, 431,
	0, 432, 433, 577, 578, 579, 434, 580, 435, 436,
	0, 437, 0, 438, 439, 440, 441, 442, 443, 444,
	581, 446, 445, 447, 0, 448, 0, 0, 0, 0,
	0, 449, 0, 451, 452, 453, 450, 454, 455, 456,
	457, 0, 458, 459, 460, 0, 461, 462, 463, 464,
	582, 465, 0, 466, 467, 473, 474, 468, 469, 475,
	476, 477, 478, 479, 0, 481, 482, 480, 483, 484,
	485, 0, 486, 470, 471, 487, 488, 0, 489, 490,
	491, 492, 493, 494, 583, 0, 495, 0, 496, 497,
	498, 499, 472, 500, 505, 584, 501, 502, 503, 504,
	585, 0, 507, 508, 0, 506, 0, 509, 510, 511,
	512, 513, 514, 327, 515, 0, 516, 586, 587, 588,
	589, 0, 523, 0, 517, 518, 590, 519, 591, 0,
	520, 521, 522, 0, 524, 525, 0, 0, 526, 527,
	528, 530, 531, 529, 532, 0, 533, 0, 0, 534,
	535, 536, 592, 593, 594, 0, 538, 537, 539, 595,
	650, 0, 243, 0, 540, 541, 596, 542, 543, 544,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	250, 251, 252, 253, 254, 0, 255, 256, 0, 0,
	0, 0, 0, 545, 0, 0, 0, 0, 257, 258,
	260, 259, 261, 262, 263, 264, 546, 547, 0, 265,
	548, 266, 549, 0, 550, 267, 268, 269, 270, 271,
	272, 0, 0, 0, 273, 551, 552, 553, 0, 274,
	640, 554, 0, 0, 0, 276, 277, 278, 279, 280,
	281, 282, 0, 0, 284, 285, 286, 283, 0, 638,
	0, 288, 289, 290, 291, 292, 293, 0, 294, 295,
	296, 0, 297, 298, 0, 0, 0, 0, 0, 0,
	0, 299, 300, 301, 302, 0, 303, 555, 556, 0,
	307, 304, 305, 0, 308, 306, 0, 309, 310, 311,
	0, 0, 312, 313, 314, 0, 315, 316, 0, 317,
	318, 319, 0, 320, 321, 557, 322, 323, 324, 326,
	328, 325, 329, 330, 331, 332, 558, 559, 0, 0,
	0, 0, 0, 0, 0, 333, 334, 335, 560, 0,
	0, 0, 336, 0, 337, 0, 0, 0, 338, 339,
	561, 562, 340, 341, 0, 342, 563, 0, 564, 343,
	0, 344, 345, 346, 347, 348, 565, 566, 567, 411,
	0, 349, 350, 0, 351, 352, 353, 354, 0, 0,
	0, 0, 355, 356, 358, 0, 0, 357, 568, 569,
	0, 570, 0, 359, 360, 0, 571, 0, 361, 362,
	363, 0, 364, 0, 0, 0, 365, 366, 367, 368,
	369, 370, 0, 371, 373, 372, 0, 374, 572, 0,
	375, 376, 0, 0, 377, 378, 639, 0, 0, 380,
	381, 382, 383, 0, 384, 385, 387, 389, 386, 388,
	393, 390, 391, 392, 395, 0, 651, 0, 396, 397,
	398, 403, 405, 406, 401, 402, 404, 407, 400, 0,
	399, 0, 0, 0, 408, 409, 0, 573, 410, 574,
	412, 413, 0, 0, 414, 0, 0, 0, 416, 417,
	418, 0, 0, 419, 420, 575, 0, 421, 0, 576,
	422, 423, 415, 424, 425, 426, 427, 428, 429, 430,
	431, 0, 432, 433, 577, 578, 579, 434, 580, 435,
	436, 0, 437, 0, 438, 439, 440, 441, 442, 443,
	444, 581, 446, 445, 447, 0, 448, 0, 0, 0,
	0, 0, 449, 0, 451, 452, 453, 450, 454, 455,
	456, 457, 0, 458, 459, 460, 0, 461, 462, 463,
	464, 641, 465, 0, 466, 467, 473, 474, 468, 469,
	647, 476, 477, 478, 479, 0, 481, 482, 480, 483,
	642, 485, 0, 486, 470, 471, 487, 488, 0, 489,
	490, 491, 492, 493, 494, 583, 0, 495, 0, 496,
	497, 498, 499, 472, 500, 505, 584, 501, 502, 503,
	504, 585, 0, 507, 508, 0, 506, 0, 509, 510,
	511, 512, 513, 514, 327, 515, 0, 516, 646, 587,
	588, 589, 0, 523, 0, 517, 644, 590, 519, 591,
	0, 520, 521, 522, 0, 524, 525, 0, 0, 526,
	527, 528, 530, 531, 529, 532, 0, 533, 0, 0,
	534, 535, 536, 592, 593, 594, 0, 538, 537, 539,
	595, 632, 0, 243, 0, 540, 541, 596, 542, 543,
	544, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	249, 250, 251, 252, 253, 254, 0, 255, 256, 0,
	0, 0, 0, 0, 545, 0, 0, 0, 0, 257,
	258, 260, 259, 261, 262, 263, 264, 546, 547, 0,
	265, 548, 266, 549, 0, 550, 267, 268, 269, 270,
	271, 272, 0, 0, 0, 273, 551, 552, 553, 0,
	274, 275, 554, 0, 0, 0, 276, 277, 278, 279,
	280, 281, 282, 0, 0, 284, 285, 286, 283, 0,
	287, 0, 288, 289, 290, 291, 292, 293, 0, 294,
	295, 296, 0, 297, 298, 0, 0, 0, 0, 0,
	0, 0, 299, 300, 301, 302, 0, 303, 555, 556,
	0, 307, 304, 305, 0, 308, 306, 0, 309, 310,
	311, 0, 0, 312, 313, 314, 0, 315, 316, 0,
	317, 318, 319, 0, 320, 321, 557, 322, 323, 324,
	326, 328, 325, 329, 330, 331, 332, 558, 559, 0,
	0, 0, 0, 0, 0, 0, 333, 334, 335, 560,
	0, 0, 0, 336, 0, 337, 0, 0, 0, 338,
	339, 561, 562, 340, 341, 0, 342, 563, 0, 564,
	343, 0, 344, 345, 346, 347, 348, 565, 566, 567,
	411, 0, 349, 350, 0, 351, 352, 353, 354, 0,
	0, 0, 0, 355, 356, 358, 0, 0, 357, 568,
	569, 0, 570, 0, 359, 360, 0, 571, 0, 361,
	362, 363, 0, 364, 0, 0, 0, 365, 366, 367,
	368, 369, 370, 0, 371, 373, 372, 0, 374, 572,
	0, 375, 376, 0, 0, 377, 378, 379, 0, 0,
	380, 381, 382, 383, 0, 384, 385, 387, 389, 386,
	388, 393, 390, 391, 392, 395, 0, 394, 0, 396,
	397, 398, 403, 405, 406, 401, 402, 404, 407, 400,
	0, 399, 0, 0, 0, 408, 409, 0, 573, 410,
	574, 412, 413, 0, 0, 414, 0, 0, 0, 416,
	417, 418, 0, 0, 419, 420, 575, 0, 421, 0,
	576, 422, 423, 415, 424, 425, 426, 427, 428, 429,
	430, 431, 0, 432, 433, 577, 578, 579, 434, 580,
	435, 436, 0, 437, 0, 438, 439, 440, 441, 442,
	443, 444, 581, 446, 445, 447, 0, 448, 0, 0,
	0, 0, 0, 449, 0, 451, 452, 453, 450, 454,
	455, 456, 457, 0, 458, 459, 460, 0, 461, 462,
	463, 464, 582, 465, 0, 466, 467, 633, 474, 468,
	469, 475, 476, 477, 478, 479, 0, 481, 482, 480,
	483, 484, 485, 0, 486, 470, 471, 487, 488, 0,
	489, 490, 491, 492, 493, 494, 583, 0, 495, 0,
	496, 497, 498, 499, 472, 500, 505, 584, 501, 502,
	503, 504, 585, 0, 507, 508, 0, 506, 0, 509,
	510, 511, 512, 513, 514, 327, 515, 0, 516, 586,
	587, 588, 589, 0, 523, 0, 517, 518, 590, 519,
	591, 0, 520, 521, 522, 0, 524, 525, 0, 0,
	526, 527, 528, 530, 531, 529, 532, 0, 533, 0,
	0, 534, 535, 536, 592, 593, 594, 0, 538, 537,
	539, 595, 630, 0, 243, 0, 540, 541, 596, 542,
	543, 544, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 250, 251, 252, 253, 254, 0, 255, 256,
	0, 0, 0, 0, 0, 545, 0, 0, 0, 0,
	257, 258, 260, 259, 261, 262, 263, 264, 546, 547,
	0, 265, 548, 266, 549, 0, 550, 267, 268, 269,
	270, 271, 272, 0, 0, 0, 273, 551, 552, 553,
	0, 274, 275, 554, 0, 0, 0, 276, 277, 278,
	279, 280, 281, 282, 0, 0, 284, 285, 286, 283,
	0, 287, 0, 288, 289, 290, 291, 292, 293, 0,
	294, 295, 296, 0, 297, 298, 0, 0, 0, 0,
	0, 0, 0, 299, 300, 301, 302, 0, 303, 555,
	556, 0, 307, 304, 305, 0, 308, 306, 0, 309,
	310, 311, 0, 0, 312, 313, 314, 0, 315, 316,
	0, 317, 318, 319, 0, 320, 321, 557, 322, 323,
	324, 326, 328, 325, 329, 330, 331, 332, 558, 559,
	0, 0, 0, 0, 0, 0, 0, 333, 334, 335,
	560, 0, 0, 0, 336, 0, 337, 0, 0, 0,
	338, 339, 561, 562, 340, 341, 0, 342, 563, 0,
	564, 343, 0, 344, 345, 346, 347, 348, 565, 566,
	567, 411, 0, 349, 350, 0, 351, 352, 353, 354,
	0, 0, 0, 0, 355, 356, 358, 0, 0, 357,
	568, 569, 0, 570, 0, 359, 360, 0, 571, 0,
	361, 362, 363, 0, 364, 0, 0, 0, 365, 366,
	367, 368, 369, 370, 0, 371, 373, 372, 0, 374,
	572, 0, 375, 376, 0, 0, 377, 378, 379, 0,
	0, 380, 381, 382, 383, 0, 384, 385, 387, 389,
	386, 388, 393, 390, 391, 392, 395, 0, 394, 0,
	396, 397, 398, 403, 405, 406, 401, 402, 404, 407,
	400, 0, 399, 0, 0, 0, 408, 409, 0, 573,
	410, 574, 412, 413, 0, 0, 414, 0, 0, 0,
	416, 417, 418, 0, 0, 419, 420, 575, 0, 421,
	0, 576, 422, 423, 415, 424, 425, 426, 427, 428,
	429, 430, 431, 0, 432, 433, 577, 578, 579, 434,
	580, 435, 436, 0, 437, 0, 438, 439, 440, 441,
	442, 443, 444, 581, 446, 445, 447, 0, 448, 0,
	0, 0, 0, 0, 449, 0, 451, 452, 453, 450,
	454, 455, 456, 457, 0, 458, 459, 460, 0, 461,
	462, 463, 464, 582, 465, 0, 466, 467, 473, 474,
	468, 469, 475, 476, 477, 478, 479, 0, 481, 482,
	480, 483, 484, 485, 0, 486, 470, 471, 487, 488,
	0, 489, 490, 491, 492, 493, 494, 583, 0, 495,
	0, 496, 497, 498, 499, 472, 500, 505, 584, 501,
	502, 503, 504, 585, 0, 507, 508, 0, 506, 0,
	509, 510, 511, 512, 513, 514, 327, 515, 0, 516,
	586, 587, 588, 589, 0, 523, 0, 517, 518, 590,
	519, 591, 0, 520, 521, 522, 0, 524, 525, 0,
	0, 526, 527, 528, 530, 531, 529, 532, 0, 533,
	0, 0, 534, 535, 536, 592, 593, 594, 0, 538,
	537, 539, 595, 624, 0, 243, 0, 540, 541, 596,
	542, 543, 544, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 250, 251, 252, 253, 254, 0, 255,
	256, 0, 0, 0, 0, 0, 545, 0, 0, 0,
	0, 257, 258, 260, 259, 261, 262, 263, 264, 546,
	547, 0, 265, 548, 266, 549, 0, 550, 267, 268,
	269, 270, 271, 272, 0, 0, 0, 273, 551, 552,
	553, 0, 274, 275, 554, 0, 0, 0, 276, 277,
	278, 279, 280, 281, 282, 0, 0, 284, 285, 286,
	283, 0, 287, 0, 288, 289, 290, 291, 292, 293,
	0, 294, 295, 296, 0, 297, 298, 0, 0, 0,
	0, 0, 0, 0, 299, 300, 301, 302, 0, 303,
	555, 556, 0, 307, 304, 305, 0, 308, 306, 0,
	309, 310, 311, 0, 0, 312, 313, 314, 0, 315,
	316, 0, 317, 318, 319, 0, 320, 321, 557, 322,
	323, 324, 326, 328, 325, 329, 330, 331, 332, 558,
	559, 0, 0, 0, 0, 0, 0, 0, 333, 334,
	335, 560, 0, 0, 0, 336, 0, 337, 0, 0,
	0, 338, 339, 561, 562, 340, 341, 0, 342, 563,
	0, 564, 343, 0, 344, 345, 346, 347, 348, 565,
	566, 567, 411, 0, 349, 350, 0, 351, 352, 353,
	354, 0, 0, 0, 0, 355, 356, 358, 0, 0,
	357, 568, 569, 0, 570, 0, 359, 360, 0, 571,
	0, 361, 362, 363, 0, 364, 0, 0, 0, 365,
	366, 367, 368, 369, 370, 0, 371, 373, 372, 0,
	374, 572, 0, 375, 376, 0, 0, 377, 378, 379,
	0, 0, 380, 381, 382, 383, 0, 384, 385, 387,
	389, 386, 388, 393, 390, 391, 392, 395, 0, 394,
	0, 396, 397, 398, 403, 405, 406, 401, 402, 404,
	407, 400, 0, 399, 0, 0, 0, 408, 409, 0,
	573, 410, 574, 412, 413, 0, 0, 414, 0, 0,
	0, 416, 417, 418, 0, 0, 419, 420, 575, 0,
	421, 0, 576, 422, 423, 415, 424, 425, 426, 427,
	428, 429, 430, 431, 0, 432, 433, 577, 578, 579,
	434, 580, 435, 436, 0, 437, 0, 438, 439, 440,
	441, 442, 443, 444, 581, 446, 445, 447, 0, 448,
	0, 0, 0, 0, 0, 449, 0, 451, 452, 453,
	450, 454, 455, 456, 457, 0, 458, 459, 460, 0,
	461, 462, 463, 464, 582, 465, 0, 466, 467, 473,
	474, 468, 469, 475, 476, 477, 478, 479, 0, 481,
	482, 480, 483, 484, 485, 0, 486, 470, 471, 487,
	488, 0, 489, 490, 491, 492, 493, 494, 583, 0,
	495, 0, 496, 497, 498, 499, 472, 500, 505, 584,
	501, 502, 503, 504, 585, 0, 507, 508, 0, 506,
	0, 509, 510, 511, 512, 513, 514, 327, 515, 0,
	516, 586, 587, 588, 589, 0, 523, 0, 517, 518,
	590, 519, 591, 0, 520, 521, 522, 0, 524, 525,
	0, 0, 526, 527, 528, 530, 531, 529, 532, 0,
	533, 0, 0, 534, 535, 536, 592, 593, 594, 0,
	538, 537, 539, 595, 602, 0, 243, 0, 540, 541,
	596, 542, 543, 544, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 250, 251, 252, 253, 254, 0,
	255, 256, 0, 0, 0, 0, 0, 545, 0, 0,
	0, 0, 257, 258, 260, 259, 261, 262, 263, 264,
	546, 547, 0, 265, 548, 266, 549, 0, 550, 267,
	268, 269, 270, 271, 272, 0, 0, 0, 273, 551,
	552, 553, 0, 274, 275, 554, 0, 0, 0, 276,
	277, 278, 279, 280, 281, 282, 0, 0, 284, 285,
	286, 283, 0, 287, 0, 288, 289, 290, 291, 292,
	293, 0, 294, 295, 296, 0, 297, 298, 0, 0,
	0, 0, 0, 0, 0, 299, 300, 301, 302, 0,
	303, 555, 556, 0, 307, 304, 305, 0, 308, 306,
	0, 309, 310, 311, 0, 0, 312, 313, 314, 0,
	315, 316, 0, 317, 318, 319, 0, 320, 321, 557,
	322, 323, 324, 326, 328, 325, 329, 330, 331, 332,
	558, 559, 0, 0, 0, 0, 0, 0, 0, 333,
	334, 335, 560, 0, 0, 0, 336, 0, 337, 0,
	0, 0, 338, 339, 561, 562, 340, 341, 0, 342,
	563, 0, 564, 343, 0, 344, 345, 346, 347, 348,
	565, 566, 567, 411, 0, 349, 350, 0, 351, 352,
	353, 354, 0, 0, 0, 0, 355, 356, 358, 0,
	0, 357, 568, 569, 0, 570, 0, 359, 360, 0,
	571, 0, 361, 362, 363, 0, 364, 0, 0, 0,
	365, 366, 367, 368, 369, 370, 0, 371, 373, 372,
	0, 374, 572, 0, 375, 376, 0, 0, 377, 378,
	379, 0, 0, 380, 381, 382, 383, 0, 384, 385,
	387, 389, 386, 388, 393, 390, 391, 392, 395, 0,
	394, 0, 396, 397, 398, 403, 405, 406, 401, 402,
	404, 407, 400, 0, 399, 0, 0, 0, 408, 409,
	0, 573, 410, 574, 412, 413, 0, 0, 414, 0,
	0, 0, 416, 417, 418, 0, 0, 419, 420, 575,
	0, 421, 0, 576, 422, 423, 415, 424, 425, 426,
	427, 428, 429, 430, 431, 0, 432, 433, 577, 578,
	579, 434, 580, 435, 436, 0, 437, 0, 438, 439,
	440, 441, 442, 443, 444, 581, 446, 445, 447, 0,
	448, 0, 0, 0, 0, 0, 449, 0, 451, 452,
	453, 450, 454, 455, 456, 457, 0, 458, 459, 460,
	0, 461, 462, 463, 464, 582, 465, 0, 466, 467,
	473, 474, 468, 469, 475, 476, 477, 478, 479, 0,
	481, 482, 480, 483, 484, 485, 0, 486, 470, 471,
	487, 488, 0, 489, 490, 491, 492, 493, 494, 583,
	0, 495, 0, 496, 497, 498, 499, 472, 500, 505,
	584, 501, 502, 503, 504, 585, 0, 507, 508, 0,
	506, 0, 509, 510, 511, 512, 513, 514, 327, 515,
	0, 516, 586, 587, 588, 589, 0, 523, 0, 517,
	518, 590, 519, 591, 0, 520, 521, 522, 0, 524,
	525, 0, 0, 526, 527, 528, 530, 531, 529, 532,
	0, 533, 0, 0, 534, 535, 536, 592, 593, 594,
	243, 538, 537, 539, 595, 0, 0, 0, 0, 540,
	541, 596, 542, 543, 544, 0, 0, 249, 250, 251,
	252, 253, 254, 0, 255, 256, 0, 0, 0, 0,
	0, 545, 0, 0, 0, 0, 257, 258, 260, 259,
	261, 262, 263, 264, 546, 547, 0, 265, 548, 266,
	549, 0, 550, 267, 268, 269, 270, 271, 272, 0,
	0, 0, 273, 551, 552, 553, 0, 274, 275, 554,
	0, 0, 0, 276, 277, 278, 279, 280, 281, 282,
	0, 0, 284, 285, 286, 283, 0, 287, 0, 288,
	289, 290, 291, 292, 293, 0, 294, 295, 296, 0,
	297, 298, 0, 0, 0, 0, 0, 0, 0, 299,
	300, 301, 302, 0, 303, 555, 556, 0, 307, 304,
	305, 0, 308, 306, 0, 309, 310, 311, 0, 0,
	312, 313, 314, 0, 315, 316, 0, 317, 318, 319,
	0, 320, 321, 557, 322, 323, 324, 326, 328, 325,
	329, 330, 331, 332, 558, 559, 0, 0, 0, 0,
	0, 0, 0, 333, 334, 335, 560, 0, 0, 0,
	336, 0, 337, 0, 0, 0, 338, 339, 561, 562,
	340, 341, 0, 342, 563, 0, 564, 343, 0, 344,
	345, 346, 347, 348, 565, 566, 567, 411, 0, 349,
	350, 0, 351, 352, 353, 354, 0, 0, 0, 0,
	355, 356, 358, 0, 0, 357, 568, 569, 0, 570,
	0, 359, 360, 0, 571, 0, 361, 362, 363, 0,
	364, 0, 0, 0, 365, 366, 367, 368, 369, 370,
	0, 371, 373, 372, 0, 374, 572, 0, 375, 376,
	0, 0, 377, 378, 379, 0, 0, 380, 381, 382,
	383, 0, 384, 385, 387, 389, 386, 388, 393, 390,
	391, 392, 395, 0, 394, 0, 396, 397, 398, 403,
	405, 406, 401, 402, 404, 407, 400, 0, 399, 0,
	0, 0, 408, 409, 0, 573, 410, 574, 412, 413,
	0, 0, 414, 0, 0, 0, 416, 417, 418, 0,
	0, 419, 420, 575, 0, 421, 0, 576, 422, 423,
	415, 424, 425, 426, 427, 428, 429, 430, 431, 0,
	432, 433, 577, 578, 579, 434, 580, 435, 436, 0,
	437, 0, 438, 439, 440, 441, 442, 443, 444, 581,
	446, 445, 447, 0, 448, 0, 0, 0, 0, 0,
	449, 0, 451, 452, 453, 450, 454, 455, 456, 457,
	0, 458, 459, 460, 0, 461, 462, 463, 464, 582,
	465, 0, 466, 467, 473, 474, 468, 469, 475, 476,
	477, 478, 479, 0, 481, 482, 480, 483, 484, 485,
	0, 486, 470, 471, 487, 488, 0, 489, 490, 491,
	492, 493, 494, 583, 0, 495, 0, 496, 497, 498,
	499, 472, 500, 505, 584, 501, 502, 503, 504, 585,
	0, 507, 508, 0, 506, 0, 509, 510, 511, 512,
	513, 514, 327, 515, 0, 516, 586, 587, 588, 589,
	0, 523, 0, 517, 518, 590, 519, 591, 0, 520,
	521, 522, 0, 524, 525, 0, 0, 526, 527, 528,
	530, 531, 529, 532, 0, 533, 0, 0, 534, 535,
	536, 592, 593, 594, 243, 538, 537, 539, 595, 0,
	0, 0, 0, 540, 541, 596, 542, 543, 544, 0,
	0, 249, 250, 251, 252, 253, 254, 0, 255, 256,
	0, 0, 0, 0, 0, 545, 0, 0, 0, 0,
	257, 258, 260, 259, 261, 262, 263, 264, 546, 547,
	0, 265, 548, 266, 549, 0, 550, 267, 268, 269,
	270, 271, 272, 0, 0, 0, 273, 551, 552, 553,
	0, 274, 275, 554, 0, 0, 0, 276, 277, 278,
	279, 280, 281, 282, 0, 0, 284, 285, 286, 283,
	0, 287, 0, 288, 289, 290, 291, 292, 293, 0,
	294, 295, 296, 0, 297, 298, 0, 0, 0, 0,
	0, 0, 0, 299, 300, 301, 302, 0, 303, 555,
	556, 0, 307, 304, 305, 0, 308, 306, 0, 309,
	310, 311, 0, 0, 312, 313, 314, 0, 315, 316,
	0, 317, 318, 319, 0, 320, 321, 557, 322, 323,
	324, 326, 328, 325, 329, 330, 331, 332, 558, 559,
	0, 0, 0, 0, 0, 0, 0, 333, 334, 335,
	560, 0, 0, 0, 336, 0, 337, 0, 0, 0,
	338, 339, 561, 562, 340, 341, 0, 342, 563, 0,
	564, 343, 0, 344, 345, 346, 347, 348, 3159, 566,
	567, 411, 0, 349, 350, 0, 351, 352, 353, 354,
	0, 0, 0, 0, 355, 356, 358, 0, 0, 357,
	568, 569, 0, 570, 0, 359, 360, 0, 571, 0,
	361, 362, 363, 0, 364, 0, 0, 0, 365, 366,
	367, 368, 369, 370, 0, 371, 373, 372, 0, 374,
	572, 0, 375, 376, 0, 0, 377, 378, 379, 0,
	0, 380, 381, 382, 383, 0, 384, 385, 387, 389,
	386, 388, 393, 390, 391, 392, 395, 0, 394, 0,
	396, 397, 398, 403, 405, 406, 401, 402, 404, 407,
	400, 0, 399, 0, 0, 0, 408, 409, 0, 573,
	410, 574, 412, 413, 0, 0, 414, 0, 0, 0,
	416, 417, 418, 0, 0, 419, 420, 575, 0, 421,
	0, 576, 422, 423, 415, 424, 425, 426, 427, 428,
	429, 430, 431, 0, 432, 433, 577, 578, 579, 434,
	580, 435, 436, 0, 437, 0, 438, 439, 440, 441,
	442, 443, 444, 581, 446, 445, 447, 0, 448, 0,
	0, 0, 0, 0, 449, 0, 451, 452, 453, 450,
	454, 455, 456, 457, 0, 458, 459, 460, 0, 461,
	462, 463, 464, 582, 465, 0, 466, 467, 473, 474,
	468, 469, 475, 476, 477, 478, 479, 0, 481, 482,
	480, 483, 484, 485, 0, 486, 470, 471, 487, 488,
	0, 489, 490, 491, 492, 493, 494, 583, 0, 495,
	0, 496, 497, 498, 499, 472, 500, 505, 584, 501,
	502, 503, 504, 585, 0, 507, 508, 0, 506, 0,
	509, 510, 511, 512, 513, 514, 327, 515, 0, 516,
	586, 587, 588, 589, 0, 523, 0, 517, 518, 590,
	519, 591, 0, 520, 521, 522, 0, 524, 525, 0,
	0, 526, 527, 528, 530, 531, 529, 532, 0, 533,
	0, 0, 534, 535, 536, 592, 593, 594, 243, 538,
	537, 539, 595, 0, 0, 0, 0, 540, 541, 596,
	542, 543, 544, 0, 0, 249, 250, 251, 252, 253,
	254, 0, 255, 256, 0, 0, 0, 0, 0, 545,
	0, 0, 0, 0, 257, 258, 260, 259, 261, 262,
	263, 264, 546, 547, 0, 265, 548, 266, 549, 0,
	550, 267, 268, 269, 270, 271, 272, 0, 0, 0,
	273, 551, 552, 553, 0, 274, 275, 554, 0, 0,
	0, 276, 277, 278, 279, 280, 281, 282, 0, 0,
	284, 285, 286, 283, 0, 287, 0, 288, 289, 290,
	291, 292, 293, 0, 294, 295, 296, 0, 297, 298,
	0, 0, 0, 0, 0, 0, 0, 299, 300, 301,
	302, 0, 303, 555, 556, 0, 307, 304, 305, 0,
	308, 306, 0, 309, 310, 311, 0, 0, 312, 313,
	314, 0, 315, 316, 0, 317, 318, 319, 0, 320,
	321, 557, 322, 323, 324, 326, 328, 325, 329, 330,
	331, 332, 558, 559, 0, 0, 0, 0, 0, 0,
	0, 333, 334, 335, 560, 0, 0, 0, 336, 0,
	337, 0, 0, 0, 338, 339, 561, 562, 340, 341,
	0, 342, 563, 0, 564, 343, 0, 344, 345, 346,
	347, 348, 3108, 566, 567, 411, 0, 349, 350, 0,
	351, 352, 353, 354, 0, 0, 0, 0, 355, 356,
	358, 0, 0, 357, 568, 569, 0, 570, 0, 359,
	360, 0, 571, 0, 361, 362, 363, 0, 364, 0,
	0, 0, 365, 366, 367, 368, 369, 370, 0, 371,
	373, 372, 0, 374, 572, 0, 375, 376, 0, 0,
	377, 378, 379, 0, 0, 380, 381, 382, 383, 0,
	384, 385, 387, 389, 386, 388, 393, 390, 391, 392,
	395, 0, 394, 0, 396, 397, 398, 403, 405, 406,
	401, 402, 404, 407, 400, 0, 399, 0, 0, 0,
	408, 409, 0, 573, 410, 574, 412, 413, 0, 0,
	414, 0, 0, 0, 416, 417, 418, 0, 0, 419,
	420, 575, 0, 421, 0, 576, 422, 423, 415, 424,
	425, 426, 427, 428, 429, 430, 431, 0, 432, 433,
	577, 578, 579, 434, 580, 435, 436, 0, 437, 0,
	438, 439, 440, 441, 442, 443, 444, 581, 446, 445,
	447, 0, 448, 0, 0, 0, 0, 0, 449, 0,
	451, 452, 453, 450, 454, 455, 456, 457, 0, 458,
	459, 460, 0, 461, 462, 463, 464, 582, 465, 0,
	466, 467, 473, 474, 468, 469, 475, 476, 477, 478,
	479, 0, 481, 482, 480, 483, 484, 485, 0, 486,
	470, 471, 487, 488, 0, 489, 490, 491, 492, 493,
	494, 583, 0, 495, 0, 496, 497, 498, 499, 472,
	500, 505, 584, 501, 502, 503, 504, 585, 0, 507,
	508, 0, 506, 0, 509, 510, 511, 512, 513, 514,
	327, 515, 0, 516, 586, 587, 588, 589, 0, 523,
	0, 517, 518, 590, 519, 591, 0, 520, 521, 522,
	0, 524, 525, 0, 0, 526, 527, 528, 530, 531,
	529, 532, 0, 533, 0, 0, 534, 535, 536, 592,
	593, 594, 243, 538, 537, 539, 595, 0, 0, 0,
	0, 540, 541, 596, 542, 543, 544, 0, 0, 249,
	250, 251, 252, 253, 254, 0, 255, 256, 0, 0,
	0, 0, 0, 545, 0, 0, 0, 0, 257, 258,
	260, 259, 261, 262, 263, 264, 546, 547, 0, 265,
	548, 266, 549, 0, 550, 267, 268, 269, 270, 271,
	272, 0, 0, 0, 273, 551, 552, 553, 0, 274,
	275, 554, 0, 0, 0, 276, 277, 278, 279, 280,
	281, 282, 0, 0, 284, 285, 286, 283, 0, 287,
	0, 288, 289, 290, 291, 292, 293, 0, 294, 295,
	296, 0, 297, 298, 0, 0, 0, 0, 0, 0,
	0, 299, 300, 301, 302, 0, 303, 555, 556, 0,
	307, 304, 305, 0, 308, 306, 0, 309, 310, 311,
	0, 0, 312, 313, 314, 0, 315, 316, 0, 317,
	318, 319, 0, 320, 321, 557, 322, 323, 324, 326,
	328, 325, 329, 330, 331, 332, 558, 559, 0, 0,
	0, 0, 0, 0, 0, 333, 334, 335, 560, 0,
	0, 0, 336, 0, 337, 0, 0, 0, 338, 339,
	561, 562, 340, 341, 0, 342, 563, 0, 564, 343,
	0, 344, 345, 346, 347, 348, 3046, 566, 567, 411,
	0, 349, 350, 0, 351, 352, 353, 354, 0, 0,
	0, 0, 355, 356, 358, 0, 0, 357, 568, 569,
	0, 570, 0, 359, 360, 0, 571, 0, 361, 362,
	363, 0, 364, 0, 0, 0, 365, 366, 367, 368,
	369, 370, 0, 371, 373, 372, 0, 374, 572, 0,
	375, 376, 0, 0, 377, 378, 379, 0, 0, 380,
	381, 382, 383, 0, 384, 385, 387, 389, 386, 388,
	393, 390, 391, 392, 395, 0, 394, 0, 396, 397,
	398, 403, 405, 406, 401, 402, 404, 407, 400, 0,
	399, 0, 0, 0, 408, 409, 0, 573, 410, 574,
	412, 413, 0, 0, 414, 0, 0, 0, 416, 417,
	418, 0, 0, 419, 420, 575, 0, 421, 0, 576,
	422, 423, 415, 424, 425, 426, 427, 428, 429, 430,
	431, 0, 432, 433, 577, 578, 579, 434, 580, 435,
	436, 0, 437, 0, 438, 439, 440, 441, 442, 443,
	444, 581, 446, 445, 447, 0, 448, 0, 0, 0,
	0, 0, 449, 0, 451, 452, 453, 450, 454, 455,
	456, 457, 0, 458, 459, 460, 0, 461, 462, 463,
	464, 582, 465, 0, 466, 467, 473, 474, 468, 469,
	475, 476, 477, 478, 479, 0, 481, 482, 480, 483,
	484, 485, 0, 486, 470, 471, 487, 488, 0, 489,
	490, 491, 492, 493, 494, 583, 0, 495, 0, 496,
	497, 498, 499, 472, 500, 505, 584, 501, 502, 503,
	504, 585, 0, 507, 508, 0, 506, 0, 509, 510,
	511, 512, 513, 514, 327, 515, 0, 516, 586, 587,
	588, 589, 0, 523, 0, 517, 518, 590, 519, 591,
	0, 520, 521, 522, 0, 524, 525, 0, 0, 526,
	527, 528, 530, 531, 529, 532, 0, 533, 0, 0,
	534, 535, 536, 592, 593, 594, 243, 538, 537, 539,
	595, 0, 0, 0, 0, 540, 541, 596, 542, 543,
	544, 0, 0, 249, 250, 251, 252, 253, 254, 0,
	255, 256, 0, 0, 0, 0, 0, 545, 0, 0,
	0, 0, 257, 258, 260, 259, 261, 262, 263, 264,
	546, 547, 0, 265, 548, 266, 549, 0, 550, 267,
	268, 269, 270, 271, 272, 0, 0, 0, 273, 551,
	552, 553, 0, 274, 275, 554, 0, 0, 0, 276,
	277, 278, 279, 280, 281, 282, 0, 0, 284, 285,
	286, 283, 0, 287, 0, 288, 289, 290, 291, 292,
	293, 0, 294, 295, 296, 0, 297, 298, 0, 0,
	0, 0, 0, 0, 0, 299, 300, 301, 302, 0,
	303, 555, 556, 0, 307, 304, 305, 0, 308, 306,
	0, 309, 310, 311, 0, 0, 312, 313, 314, 0,
	315, 316, 0, 317, 318, 319, 0, 320, 321, 557,
	322, 323, 324, 326, 328, 325, 329, 330, 331, 332,
	558, 559, 0, 0, 0, 0, 0, 0, 0, 333,
	334, 335, 560, 0, 0, 0, 336, 0, 337, 0,
	0, 0, 338, 339, 561, 562, 340, 341, 0, 342,
	563, 0, 564, 343, 0, 344, 345, 346, 347, 348,
	3044, 566, 567, 411, 0, 349, 350, 0, 351, 352,
	353, 354, 0, 0, 0, 0, 355, 356, 358, 0,
	0, 357, 568, 569, 0, 570, 0, 359, 360, 0,
	571, 0, 361, 362, 363, 0, 364, 0, 0, 0,
	365, 366, 367, 368, 369, 370, 0, 371, 373, 372,
	0, 374, 572, 0, 375, 376, 0, 0, 377, 378,
	379, 0, 0, 380, 381, 382, 383, 0, 384, 385,
	387, 389, 386, 388, 393, 390, 391, 392, 395, 0,
	394, 0, 396, 397, 398, 403, 405, 406, 401, 402,
	404, 407, 400, 0, 399, 0, 0, 0, 408, 409,
	0, 573, 410, 574, 412, 413, 0, 0, 414, 0,
	0, 0, 416, 417, 418, 0, 0, 419, 420, 575,
	0, 421, 0, 576, 422, 423, 415, 424, 425, 426,
	427, 428, 429, 430, 431, 0, 432, 433, 577, 578,
	579, 434, 580, 435, 436, 0, 437, 0, 438, 439,
	440, 441, 442, 443, 444, 581, 446, 445, 447, 0,
	448, 0, 0, 0, 0, 0, 449, 0, 451, 452,
	453, 450, 454, 455, 456, 457, 0, 458, 459, 460,
	0, 461, 462, 463, 464, 582, 465, 0, 466, 467,
	473, 474, 468, 469, 475, 476, 477, 478, 479, 0,
	481, 482, 480, 483, 484, 485, 0, 486, 470, 471,
	487, 488, 0, 489, 490, 491, 492, 493, 494, 583,
	0, 495, 0, 496, 497, 498, 499, 472, 500, 505,
	584, 501, 502, 503, 504, 585, 0, 507, 508, 0,
	506, 0, 509, 510, 511, 512, 513, 514, 327, 515,
	0, 516, 586, 587, 588, 589, 0, 523, 0, 517,
	518, 590, 519, 591, 0, 520, 521, 522, 0, 524,
	525, 0, 0, 526, 527, 528, 530, 531, 529, 532,
	0, 533, 0, 0, 534, 535, 536, 592, 593, 594,
	243, 538, 537, 539, 595, 0, 0, 0, 0, 540,
	541, 596, 542, 543, 544, 0, 0, 249, 250, 251,
	252, 253, 254, 0, 255, 256, 0, 0, 0, 0,
	0, 545, 0, 0, 0, 0, 257, 258, 260, 259,
	261, 262, 263, 264, 546, 547, 0, 265, 548, 266,
	549, 0, 550, 267, 268, 269, 270, 271, 272, 0,
	0, 0, 273, 551, 552, 553, 0, 274, 275, 554,
	0, 0, 0, 276, 277, 278, 279, 280, 281, 282,
	0, 0, 284, 285, 286, 283, 0, 287, 0, 288,
	289, 290, 291, 292, 293, 0, 294, 295, 296, 0,
	297, 298, 0, 0, 0, 0, 0, 0, 0, 299,
	300, 301, 302, 0, 303, 555, 556, 0, 307, 304,
	305, 0, 308, 306, 0, 309, 310, 311, 0, 0,
	312, 313, 314, 0, 315, 316, 0, 317, 318, 319,
	0, 320, 321, 557, 322, 323, 324, 326, 328, 325,
	329, 330, 331, 332, 558, 559, 0, 0, 0, 0,
	0, 0, 0, 333, 334, 335, 560, 0, 0, 0,
	336, 0, 337, 0, 0, 0, 338, 339, 561, 562,
	340, 341, 0, 342, 563, 0, 564, 343, 0, 344,
	345, 346, 347, 348, 3030, 566, 567, 411, 0, 349,
	350, 0, 351, 352, 353, 354, 0, 0, 0, 0,
	355, 356, 358, 0, 0, 357, 568, 569, 0, 570,
	0, 359, 360, 0, 571, 0, 361, 362, 363, 0,
	364, 0, 0, 0, 365, 366, 367, 368, 369, 370,
	0, 371, 373, 372, 0, 374, 572, 0, 375, 376,
	0, 0, 377, 378, 379, 0, 0, 380, 381, 382,
	383, 0, 384, 385, 387, 389, 386, 388, 393, 390,
	391, 392, 395, 0, 394, 0, 396, 397, 398, 403,
	405, 406, 401, 402, 404, 407, 400, 0, 399, 0,
	0, 0, 408, 409, 0, 573, 410, 574, 412, 413,
	0, 0, 414, 0, 0, 0, 416, 417, 418, 0,
	0, 419, 420, 575, 0, 421, 0, 576, 422, 423,
	415, 424, 425, 426, 427, 428, 429, 430, 431, 0,
	432, 433, 577, 578, 579, 434, 580, 435, 436, 0,
	437, 0, 438, 439, 440, 441, 442, 443, 444, 581,
	446, 445, 447, 0, 448, 0, 0, 0, 0, 0,
	449, 0, 451, 452, 453, 450, 454, 455, 456, 457,
	0, 458, 459, 460, 0, 461, 462, 463, 464, 582,
	465, 0, 466, 467, 473, 474, 468, 469, 475, 476,
	477, 478, 479, 0, 481, 482, 480, 483, 484, 485,
	0, 486, 470, 471, 487, 488, 0, 489, 490, 491,
	492, 493, 494, 583, 0, 495, 0, 496, 497, 498,
	499, 472, 500, 505, 584, 501, 502, 503, 504, 585,
	0, 507, 508, 0, 506, 0, 509, 510, 511, 512,
	513, 514, 327, 515, 0, 516, 586, 587, 588, 589,
	0, 523, 0, 517, 518, 590, 519, 591, 0, 520,
	521, 522, 0, 524, 525, 0, 0, 526, 527, 528,
	530, 531, 529, 532, 0, 533, 0, 0, 534, 535,
	536, 592, 593, 594, 243, 538, 537, 539, 595, 0,
	0, 0, 0, 540, 541, 596, 542, 543, 544, 0,
	0, 249, 250, 251, 252, 253, 254, 0, 255, 256,
	0, 0, 0, 0, 0, 545, 0, 0, 0, 0,
	257, 258, 260, 259, 261, 262, 263, 264, 546, 547,
	0, 265, 548, 266, 549, 0, 550, 267, 268, 269,
	270, 271, 272, 0, 0, 0, 273, 551, 552, 553,
	0, 274, 275, 554, 0, 0, 0, 276, 277, 278,
	279, 280, 281, 282, 0, 0, 284, 285, 286, 283,
	0, 287, 0, 288, 289, 290, 291, 292, 293, 0,
	294, 295, 296, 0, 297, 298, 0, 0, 0, 0,
	0, 0, 0, 299, 300, 301, 302, 0, 303, 555,
	556, 0, 307, 304, 305, 0, 308, 306, 0, 309,
	310, 311, 0, 0, 312, 313, 314, 0, 315, 316,
	0, 317, 318, 319, 0, 320, 321, 557, 322, 323,
	324, 326, 328, 325, 329, 330, 331, 332, 558, 559,
	0, 0, 0, 0, 0, 0, 0, 333, 334, 335,
	560, 0, 0, 0, 336, 0, 337, 0, 0, 0,
	338, 339, 561, 562, 340, 341, 0, 342, 563, 0,
	564, 343, 0, 344, 345, 346, 347, 348, 2660, 566,
	567, 411, 0, 349, 350, 0, 351, 352, 353, 354,
	0, 0, 0, 0, 355, 356, 358, 0, 0, 357,
	568, 569, 0, 570, 0, 359, 360, 0, 571, 0,
	361, 362, 363, 0, 364, 0, 0, 0, 365, 366,
	367, 368, 369, 370, 0, 371, 373, 372, 0, 374,
	572, 0, 375, 376, 0, 0, 377, 378, 379, 0,
	0, 380, 381, 382, 383, 0, 384, 385, 387, 389,
	386, 388, 393, 390, 391, 392, 395, 0, 394, 0,
	396, 397, 398, 403, 405, 406, 401, 402, 404, 407,
	400, 0, 399, 0, 0, 0, 408, 409, 0, 573,
	410, 574, 412, 413, 0, 0, 414, 0, 0, 0,
	416, 417, 418, 0, 0, 419, 420, 575, 0, 421,
	0, 576, 422, 423, 415, 424, 425, 426, 427, 428,
	429, 430, 431, 0, 432, 433, 577, 578, 579, 434,
	580, 435, 436, 0, 437, 0, 438, 439, 440, 441,
	442, 443, 444, 581, 446, 445, 447, 0, 448, 0,
	0, 0, 0, 0, 449, 0, 451, 452, 453, 450,
	454, 455, 456, 457, 0, 458, 459, 460, 0, 461,
	462, 463, 464, 582, 465, 0, 466, 467, 473, 474,
	468, 469, 475, 476, 477, 478, 479, 0, 481, 482,
	480, 483, 484, 485, 0, 486, 470, 471, 487, 488,
	0, 489, 490, 491, 492, 493, 494, 583, 0, 495,
	0, 496, 497, 498, 499, 472, 500, 505, 584, 501,
	502, 503, 504, 585, 0, 507, 508, 0, 506, 0,
	509, 510, 511, 512, 513, 514, 327, 515, 0, 516,
	586, 587, 588, 589, 0, 523, 0, 517, 518, 590,
	519, 591, 0, 520, 521, 522, 0, 524, 525, 0,
	0, 526, 527, 528, 530, 531, 529, 532, 0, 533,
	0, 0, 534, 535, 536, 592, 593, 594, 243, 538,
	537, 539, 595, 0, 0, 0, 0, 540, 541, 596,
	542, 543, 544, 0, 0, 249, 250, 251, 252, 253,
	254, 0, 255, 256, 0, 0, 0, 0, 0, 545,
	0, 0, 0, 0, 257, 258, 260, 259, 261, 262,
	263, 264, 546, 547, 0, 265, 548, 266, 549, 0,
	550, 267, 268, 269, 270, 271, 272, 0, 0, 0,
	273, 551, 552, 553, 0, 274, 275, 554, 0, 0,
	0, 276, 277, 278, 279, 280, 281, 282, 0, 0,
	284, 285, 286, 283, 0, 287, 0, 288, 289, 290,
	291, 292, 293, 0, 294, 295, 296, 0, 297, 298,
	0, 0, 0, 0, 0, 0, 0, 299, 300, 301,
	302, 0, 303, 555, 556, 0, 307, 304, 305, 0,
	308, 306, 0, 309, 310, 311, 0, 0, 312, 313,
	314, 0, 315, 316, 0, 317, 318, 319, 0, 320,
	321, 557, 322, 323, 324, 326, 328, 325, 329, 330,
	331, 332, 558, 559, 0, 0, 0, 0, 0, 0,
	0, 333, 334, 335, 560, 0, 0, 0, 336, 0,
	337, 0, 0, 0, 338, 339, 561, 562, 340, 341,
	0, 342, 563, 0, 564, 343, 0, 344, 345, 346,
	347, 348, 565, 566, 567, 411, 0, 349, 350, 0,
	351, 352, 353, 354, 0, 0, 0, 0, 355, 356,
	358, 0, 0, 357, 568, 569, 0, 570, 0, 359,
	360, 0, 571, 0, 361, 362, 363, 0, 364, 0,
	0, 0, 365, 366, 367, 368, 369, 370, 0, 371,
	373, 372, 0, 374, 572, 0, 375, 376, 0, 0,
	377, 378, 379, 0, 0, 380, 381, 382, 383, 0,
	384, 385, 387, 389, 386, 388, 393, 390, 391, 392,
	395, 0, 394, 0, 396, 397, 398, 403, 405, 406,
	401, 402, 404, 407, 400, 0, 399, 0, 0, 0,
	408, 409, 0, 573, 410, 574, 412, 413, 0, 0,
	414, 0, 0, 0, 416, 417, 418, 0, 0, 419,
	420, 575, 0, 421, 0, 576, 422, 423, 415, 424,
	425, 426, 427, 428, 429, 430, 431, 0, 432, 433,
	577, 578, 579, 434, 580, 435, 436, 0, 437, 0,
	438, 439, 440, 441, 442, 443, 444, 581, 446, 445,
	447, 0, 448, 0, 0, 0, 0, 0, 449, 0,
	451, 452, 453, 450, 454, 455, 456, 457, 0, 458,
	459, 460, 0, 461, 462, 463, 464, 582, 465, 0,
	466, 467, 633, 474, 468, 469, 475, 476, 477, 478,
	479, 0, 481, 482, 480, 483, 484, 485, 0, 486,
	470, 471, 487, 488, 0, 489, 490, 491, 492, 493,
	494, 583, 0, 495, 0, 496, 497, 498, 499, 472,
	500, 505, 584, 501, 502, 503, 504, 585, 0, 507,
	508, 0, 506, 0, 509, 510, 511, 512, 513, 514,
	327, 515, 0, 516, 586, 587, 588, 589, 0, 523,
	0, 517, 518, 590, 519, 591, 0, 520, 521, 522,
	0, 524, 525, 0, 0, 526, 527, 528, 530, 531,
	529, 532, 0, 533, 0, 0, 534, 535, 536, 592,
	593, 594, 243, 538, 537, 539, 595, 0, 0, 0,
	0, 540, 541, 596, 542, 543, 544, 0, 0, 249,
	250, 251, 252, 253, 254, 0, 255, 256, 0, 0,
	0, 0, 0, 545, 0, 2042, 0, 0, 257, 258,
	260, 259, 261, 262, 263, 264, 546, 547, 0, 265,
	548, 266, 549, 0, 550, 267, 268, 269, 270, 271,
	272, 0, 0, 0, 273, 551, 552, 553, 0, 274,
	275, 554, 0, 0, 0, 276, 277, 278, 279, 280,
	281, 282, 0, 0, 284, 285, 286, 283, 0, 287,
	0, 288, 289, 290, 291, 292, 293, 0, 294, 295,
	296, 0, 297, 298, 0, 0, 0, 0, 0, 0,
	0, 299, 300, 301, 302, 0, 303, 555, 556, 0,
	307, 304, 305, 0, 308, 306, 0, 309, 310, 311,
	0, 0, 312, 313, 314, 0, 315, 316, 0, 317,
	318, 319, 0, 320, 321, 557, 322, 323, 324, 326,
	328, 325, 329, 330, 331, 332, 558, 559, 0, 0,
	0, 0, 0, 0, 0, 333, 334, 335, 560, 0,
	0, 0, 336, 0, 337, 0, 0, 0, 338, 339,
	561, 562, 340, 341, 0, 342, 563, 0, 564, 343,
	0, 344, 345, 346, 347, 348, 565, 566, 567, 411,
	0, 349, 350, 0, 351, 352, 353, 354, 0, 0,
	0, 0, 355, 356, 358, 0, 0, 357, 568, 569,
	0, 570, 0, 359, 360, 0, 571, 0, 361, 362,
	363, 0, 364, 0, 0, 0, 365, 366, 367, 368,
	369, 370, 0, 371, 373, 372, 0, 374, 572, 0,
	375, 376, 0, 0, 377, 378, 379, 0, 0, 380,
	381, 382, 383, 0, 384, 385, 387, 389, 386, 388,
	393, 390, 391, 392, 395, 0, 394, 0, 396, 397,
	398, 403, 405, 406, 401, 402, 404, 407, 400, 0,
	399, 0, 0, 0, 408, 409, 0, 573, 410, 574,
	412, 413, 0, 0, 414, 0, 0, 0, 416, 417,
	418, 0, 0, 419, 420, 575, 0, 421, 0, 576,
	422, 423, 415, 424, 425, 426, 427, 428, 429, 430,
	431, 0, 432, 433, 577, 578, 579, 434, 580, 435,
	436, 0, 437, 0, 438, 439, 440, 441, 442, 443,
	444, 581, 446, 445, 447, 0, 448, 0, 0, 0,
	0, 0, 449, 0, 451, 452, 453, 450, 454, 455,
	456, 457, 0, 458, 459, 460, 0, 461, 462, 463,
	464, 582, 465, 0, 466, 467, 473, 474, 468, 469,
	475, 476, 477, 478, 479, 0, 481, 482, 480, 483,
	484, 485, 0, 0, 470, 471, 487, 488, 0, 489,
	490, 491, 492, 493, 494, 583, 0, 495, 0, 496,
	497, 498, 499, 472, 500, 505, 584, 501, 502, 503,
	504, 585, 0, 507, 508, 0, 506, 0, 509, 510,
	511, 512, 513, 514, 327, 515, 0, 516, 586, 587,
	588, 589, 0, 523, 0, 517, 518, 590, 519, 591,
	0, 520, 521, 522, 0, 524, 525, 0, 0, 526,
	527, 528, 530, 531, 529, 532, 0, 533, 0, 0,
	534, 535, 536, 592, 593, 594, 243, 538, 537, 539,
	595, 0, 0, 0, 0, 540, 541, 596, 542, 543,
	544, 0, 0, 249, 250, 251, 252, 253, 254, 0,
	255, 256, 0, 0, 0, 0, 0, 545, 0, 0,
	0, 0, 257, 258, 260, 259, 261, 262, 263, 264,
	546, 547, 0, 265, 548, 266, 549, 0, 550, 267,
	268, 269, 270, 271, 272, 0, 0, 0, 273, 551,
	552, 553, 0, 274, 275, 554, 0, 0, 0, 276,
	277, 278, 279, 280, 281, 282, 0, 0, 284, 285,
	286, 283, 0, 287, 0, 288, 289, 290, 291, 292,
	293, 0, 294, 295, 296, 0, 297, 298, 0, 0,
	0, 0, 0, 0, 0, 299, 300, 301, 302, 0,
	303, 555, 556, 0, 307, 304, 305, 0, 308, 306,
	0, 309, 310, 311, 0, 0, 312, 313, 314, 0,
	315, 316, 0, 317, 318, 319, 0, 320, 321, 557,
	322, 323, 324, 326, 328, 325, 329, 330, 331, 332,
	558, 559, 0, 0, 0, 0, 0, 0, 0, 333,
	334, 335, 560, 0, 0, 0, 336, 0, 337, 0,
	0, 0, 338, 339, 561, 562, 340, 341, 0, 342,
	563, 0, 564, 343, 0, 344, 345, 346, 347, 348,
	1411, 566, 567, 411, 0, 349, 350, 0, 351, 352,
	353, 354, 0, 0, 0, 0, 355, 356, 358, 0,
	0, 357, 568, 569, 0, 570, 0, 359, 360, 0,
	571, 0, 361, 362, 363, 0, 364, 0, 0, 0,
	365, 366, 367, 368, 369, 370, 0, 371, 373, 372,
	0, 374, 572, 0, 375, 376, 0, 0, 377, 378,
	379, 0, 0, 380, 381, 382, 383, 0, 384, 385,
	387, 389, 386, 388, 393, 390, 391, 392, 395, 0,
	394, 0, 396, 397, 398, 403, 405, 406, 401, 402,
	404, 407, 400, 0, 399, 0, 0, 0, 408, 409,
	0, 573, 410, 574, 412, 413, 0, 0, 414, 0,
	0, 0, 416, 417, 418, 0, 0, 419, 420, 575,
	0, 421, 0, 576, 422, 423, 415, 424, 425, 426,
	427, 428, 429, 430, 431, 0, 432, 433, 577, 578,
	579, 434, 580, 435, 436, 0, 437, 0, 438, 439,
	440, 441, 442, 443, 444, 581, 446, 445, 447, 0,
	448, 0, 0, 0, 0, 0, 449, 0, 451, 452,
	453, 450, 454, 455, 456, 457, 0, 458, 459, 460,
	0, 461, 462, 463, 464, 582, 465, 0, 466, 467,
	473, 474, 468, 469, 475, 476, 477, 478, 479, 0,
	481, 482, 480, 483, 484, 485, 0, 486, 470, 471,
	487, 488, 0, 489, 490, 491, 492, 493, 494, 583,
	0, 495, 0, 496, 497, 498, 499, 472, 500, 505,
	584, 501, 502, 503, 504, 585, 0, 507, 508, 0,
	506, 0, 509, 510, 511, 512, 513, 514, 327, 515,
	0, 516, 586, 587, 588, 589, 0, 523, 0, 517,
	518, 590, 519, 591, 0, 520, 521, 522, 0, 524,
	525, 0, 0, 526, 527, 528, 530, 531, 529, 532,
	0, 533, 0, 0, 534, 535, 536, 592, 593, 594,
	243, 538, 537, 539, 595, 0, 0, 0, 0, 540,
	541, 596, 542, 543, 544, 0, 0, 249, 250, 251,
	252, 253, 254, 0, 255, 256, 0, 0, 0, 0,
	0, 545, 0, 0, 0, 0, 257, 258, 260, 259,
	261, 262, 263, 264, 546, 547, 0, 265, 548, 266,
	549, 0, 550, 267, 268, 269, 270, 271, 272, 0,
	0, 0, 273, 551, 552, 553, 0, 274, 275, 554,
	0, 0, 0, 276, 277, 278, 279, 280, 281, 282,
	0, 0, 284, 285, 286, 283, 0, 287, 0, 288,
	289, 290, 291, 292, 293, 0, 294, 295, 296, 0,
	297, 298, 0, 0, 0, 0, 0, 0, 0, 299,
	300, 301, 302, 0, 303, 555, 556, 0, 307, 304,
	305, 0, 308, 306, 0, 309, 310, 311, 0, 0,
	312, 313, 314, 0, 315, 316, 0, 317, 318, 319,
	0, 320, 321, 557, 322, 323, 324, 326, 328, 325,
	329, 330, 331, 332, 558, 559, 0, 0, 0, 0,
	0, 0, 0, 333, 334, 335, 560, 0, 0, 0,
	336, 0, 337, 0, 0, 0, 338, 339, 561, 562,
	340, 341, 0, 342, 563, 0, 564, 343, 0, 344,
	345, 346, 347, 348, 1352, 566, 567, 411, 0, 349,
	350, 0, 351, 352, 353, 354, 0, 0, 0, 0,
	355, 356, 358, 0, 0, 357, 568, 569, 0, 570,
	0, 359, 360, 0, 571, 0, 361, 362, 363, 0,
	364, 0, 0, 0, 365, 366, 367, 368, 369, 370,
	0, 371, 373, 372, 0, 374, 572, 0, 375, 376,
	0, 0, 377, 378, 379, 0, 0, 380, 381, 382,
	383, 0, 384, 385, 387, 389, 386, 388, 393, 390,
	391, 392, 395, 0, 394, 0, 396, 397, 398, 403,
	405, 406, 401, 402, 404, 407, 400, 0, 399, 0,
	0, 0, 408, 409, 0, 573, 410, 574, 412, 413,
	0, 0, 414, 0, 0, 0, 416, 417, 418, 0,
	0, 419, 420, 575, 0, 421, 0, 576, 422, 423,
	415, 424, 425, 426, 427, 428, 429, 430, 431, 0,
	432, 433, 577, 578, 579, 434, 580, 435, 436, 0,
	437, 0, 438, 439, 440, 441, 442, 443, 444, 581,
	446, 445, 447, 0, 448, 0, 0, 0, 0, 0,
	449, 0, 451, 452, 453, 450, 454, 455, 456, 457,
	0, 458, 459, 460, 0, 461, 462, 463, 464, 582,
	465, 0, 466, 467, 473, 474, 468, 469, 475, 476,
	477, 478, 479, 0, 481, 482, 480, 483, 484, 485,
	0, 486, 470, 471, 487, 488, 0, 489, 490, 491,
	492, 493, 494, 583, 0, 495, 0, 496, 497, 498,
	499, 472, 500, 505, 584, 501, 502, 503, 504, 585,
	0, 507, 508, 0, 506, 0, 509, 510, 511, 512,
	513, 514, 327, 515, 0, 516, 586, 587, 588, 589,
	0, 523, 0, 517, 518, 590, 519, 591, 0, 520,
	521, 522, 0, 524, 525, 0, 0, 526, 527, 528,
	530, 531, 529, 532, 0, 533, 0, 0, 534, 535,
	536, 592, 593, 594, 243, 538, 537, 539, 595, 0,
	0, 0, 0, 540, 541, 596, 542, 543, 544, 0,
	0, 249, 250, 251, 252, 253, 254, 0, 255, 256,
	0, 0, 0, 0, 0, 545, 0, 0, 0, 0,
	257, 258, 260, 259, 261, 262, 263, 264, 546, 547,
	0, 265, 548, 266, 549, 0, 550, 267, 268, 269,
	270, 271, 272, 0, 0, 0, 273, 551, 552, 553,
	0, 274, 275, 554, 0, 0, 0, 276, 277, 278,
	279, 280, 281, 282, 0, 0, 284, 285, 286, 283,
	0, 287, 0, 288, 289, 290, 291, 292, 293, 0,
	294, 295, 296, 0, 297, 298, 0, 0, 0, 0,
	0, 0, 0, 299, 300, 301, 302, 0, 303, 555,
	556, 0, 307, 304, 305, 0, 308, 306, 0, 309,
	310, 311, 0, 0, 312, 313, 314, 0, 315, 316,
	0, 317, 318, 319, 0, 320, 321, 557, 322, 323,
	324, 326, 328, 325, 329, 330, 331, 332, 558, 559,
	0, 0, 0, 0, 0, 0, 0, 333, 334, 335,
	560, 0, 0, 0, 336, 0, 337, 0, 0, 0,
	338, 339, 561, 562, 340, 341, 0, 342, 563, 0,
	564, 343, 0, 344, 345, 346, 347, 348, 565, 566,
	567, 411, 0, 349, 350, 0, 351, 352, 353, 354,
	0, 0, 0, 0, 355, 356, 358, 0, 0, 357,
	568, 569, 0, 570, 0, 359, 360, 0, 571, 0,
	361, 362, 363, 0, 364, 0, 0, 0, 365, 366,
	367, 368, 369, 370, 0, 371, 373, 372, 0, 374,
	572, 0, 375, 376, 0, 0, 377, 378, 379, 0,
	0, 380, 381, 382, 383, 0, 384, 385, 387, 389,
	386, 388, 393, 390, 391, 392, 395, 0, 394, 0,
	396, 397, 398, 403, 405, 406, 401, 402, 404, 407,
	400, 0, 399, 0, 0, 0, 408, 409, 0, 573,
	410, 574, 412, 413, 0, 0, 414, 0, 0, 0,
	416, 417, 418, 0, 0, 419, 420, 575, 0, 421,
	0, 576, 422, 423, 415, 424, 425, 426, 427, 428,
	429, 430, 431, 0, 432, 433, 577, 578, 579, 434,
	580, 435, 436, 0, 437, 0, 438, 439, 440, 441,
	442, 443, 444, 581, 1090, 445, 447, 0, 448, 0,
	0, 0, 0, 0, 449, 0, 451, 452, 453, 450,
	454, 455, 456, 457, 0, 458, 459, 460, 0, 461,
	462, 463, 464, 582, 465, 0, 466, 467, 473, 474,
	468, 469, 475, 476, 477, 478, 479, 0, 481, 482,
	480, 483, 484, 485, 0, 486, 470, 471, 487, 488,
	0, 489, 490, 491, 492, 493, 494, 583, 0, 495,
	0, 496, 497, 498, 499, 472, 500, 505, 584, 501,
	502, 503, 504, 585, 0, 507, 508, 0, 506, 0,
	509, 510, 511, 512, 513, 514, 327, 515, 0, 516,
	586, 587, 588, 589, 0, 523, 0, 517, 518, 590,
	519, 591, 0, 520, 521, 522, 0, 524, 525, 0,
	0, 526, 527, 528, 530, 531, 529, 532, 0, 533,
	0, 0, 534, 535, 536, 592, 593, 594, 243, 538,
	537, 539, 595, 0, 0, 0, 0, 540, 541, 596,
	542, 543, 544, 0, 0, 249, 250, 251, 252, 253,
	254, 0, 255, 256, 0, 0, 0, 0, 0, 545,
	0, 0, 0, 0, 257, 258, 260, 259, 261, 262,
	263, 264, 546, 547, 0, 265, 548, 266, 549, 0,
	550, 267, 268, 269, 270, 271, 272, 0, 0, 0,
	273, 551, 552, 553, 0, 274, 275, 554, 0, 0,
	0, 276, 277, 278, 279, 280, 281, 282, 0, 0,
	284, 285, 286, 283, 0, 287, 0, 288, 289, 290,
	291, 292, 293, 0, 294, 295, 296, 0, 297, 298,
	0, 0, 0, 0, 0, 0, 0, 299, 300, 301,
	302, 0, 303, 555, 556, 0, 307, 304, 305, 0,
	308, 306, 0, 309, 310, 311, 0, 0, 312, 313,
	314, 0, 315, 316, 0, 317, 318, 319, 0, 320,
	321, 557, 322, 323, 324, 326, 328, 325, 329, 330,
	331, 332, 558, 559, 0, 0, 0, 0, 0, 0,
	0, 333, 334, 335, 560, 0, 0, 0, 336, 0,
	337, 0, 0, 0, 338, 339, 561, 562, 340, 341,
	0, 342, 563, 0, 564, 0, 0, 344, 345, 346,
	347, 348, 565, 566, 567, 411, 0, 349, 350, 0,
	351, 352, 353, 354, 0, 0, 0, 0, 355, 356,
	358, 0, 0, 357, 568, 569, 0, 570, 0, 359,
	360, 0, 571, 0, 361, 362, 363, 0, 364, 0,
	0, 0, 365, 366, 367, 368, 369, 370, 0, 371,
	373, 372, 0, 374, 572, 0, 375, 376, 0, 0,
	377, 378, 379, 0, 0, 380, 381, 382, 383, 0,
	384, 385, 387, 389, 386, 388, 393, 390, 391, 392,
	395, 0, 394, 0, 396, 397, 398, 403, 405, 406,
	401, 402, 404, 407, 400, 0, 399, 0, 0, 0,
	408, 409, 0, 573, 410, 574, 412, 413, 0, 0,
	414, 0, 0, 0, 416, 417, 418, 0, 0, 419,
	420, 575, 0, 421, 0, 576, 422, 423, 415, 424,
	425, 0, 427, 428, 429, 430, 431, 0, 432, 433,
	577, 578, 579, 434, 580, 435, 436, 0, 437, 0,
	438, 439, 440, 441, 0, 443, 444, 581, 446, 445,
	447, 0, 448, 0, 0, 0, 0, 0, 449, 0,
	451, 452, 453, 450, 454, 455, 456, 457, 0, 458,
	459, 460, 0, 461, 462, 463, 464, 582, 0, 0,
	466, 467, 473, 474, 468, 469, 475, 476, 477, 478,
	479, 0, 481, 482, 480, 483, 484, 485, 0, 486,
	470, 471, 487, 488, 0, 489, 490, 491, 492, 493,
	494, 583, 0, 495, 0, 496, 497, 498, 499, 472,
	500, 505, 584, 501, 502, 503, 504, 585, 0, 507,
	508, 0, 506, 0, 509, 510, 511, 512, 513, 514,
	327, 515, 0, 516, 586, 587, 588, 589, 0, 523,
	0, 517, 518, 590, 519, 591, 0, 520, 521, 522,
	0, 524, 525, 0, 0, 526, 527, 528, 530, 531,
	529, 532, 0, 533, 0, 0, 534, 535, 536, 592,
	593, 594, 0, 538, 537, 539, 595, 0, 0, 0,
	0, 540, 541, 596, 542, 543, 544, 1621, 1622, 0,
	1654, 1655, 1656, 1664, 1665, 1666, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1657, 1652,
	0, 0, 0, 0, 0, 0, 1624, 0, 0, 0,
	0, 0, 0, 0, 1670, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1621, 1622, 0,
	1654, 1655, 1656, 1664, 1665, 1666, 0, 0, 0, 0,
	1623, 0, 0, 0, 0, 0, 0, 0, 1657, 1652,
	1643, 0, 0, 0, 0, 0, 1624, 0, 1640, 0,
	0, 0, 0, 0, 1670, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1623, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1643, 0, 0, 0, 0, 0, 0, 0, 1640, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1646,
	1647, 1648, 1649, 0, 0, 0, 0, 0, 0, 1629,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1661, 0,
	0, 1671, 0, 0, 0, 0, 0, 1651, 1653, 1646,
	1647, 1648, 1649, 0, 0, 0, 0, 0, 0, 1629,
	0, 0, 0, 1667, 0, 1668, 0, 0, 0, 0,
	0, 0, 1638, 1639, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1661, 0,
	1659, 1671, 0, 0, 0, 0, 0, 1651, 1653, 0,
	0, 1644, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1667, 0, 1668, 0, 0, 0, 0,
	0, 0, 1638, 1639, 0, 0, 0, 0, 0, 0,
	0, 1669, 0, 0, 0, 0, 0, 0, 0, 0,
	1659, 0, 0, 0, 0, 0, 0, 0, 0, 1658,
	0, 1644, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1669, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1658,
	0, 1650, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1621,
	1622, 1645, 1654, 1655, 1656, 1664, 1665, 1666, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1657, 1652, 0, 0, 0, 0, 1662, 0, 1624, 0,
	0, 1650, 0, 0, 0, 0, 1670, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1645, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1623, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1643, 0, 0, 0, 1662, 0, 0, 0,
	1640, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1660,
	0, 0, 0, 1635, 1636, 1642, 1663, 1641, 1637, 0,
	1634, 1632, 1633, 1625, 1626, 1627, 1628, 1630, 1631, 0,
	0, 0, 0, 0, 0, 0, 0, 2869, 0, 0,
	0, 1646, 1647, 1648, 1649, 0, 0, 0, 0, 0,
	0, 1629, 0, 0, 0, 0, 0, 0, 0, 1660,
	0, 0, 0, 1635, 1636, 1642, 1663, 1641, 1637, 0,
	1634, 1632, 1633, 1625, 1626, 1627, 1628, 1630, 1631, 0,
	1661, 0, 0, 1671, 0, 0, 0, 2868, 0, 1651,
	1653, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1667, 0, 1668, 0, 0,
	0, 0, 0, 0, 1638, 1639, 0, 1621, 1622, 0,
	1654, 1655, 1656, 1664, 1665, 1666, 0, 0, 0, 0,
	0, 0, 1659, 0, 0, 0, 0, 0, 1657, 1652,
	0, 0, 0, 1644, 0, 0, 1624, 0, 0, 0,
	0, 0, 0, 0, 1670, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1669, 0, 0, 0, 0, 0, 0,
	1623, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1643, 1658, 0, 0, 0, 0, 0, 0, 1640, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1621, 1622, 0, 1654, 1655, 1656, 1664, 1665, 1666,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1657, 1652, 0, 0, 0, 0, 0, 0,
	1624, 0, 0, 1650, 0, 0, 0, 0, 1670, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1645, 0, 0, 0, 0, 0, 1646,
	1647, 1648, 1649, 0, 1623, 0, 0, 0, 0, 1629,
	0, 0, 0, 0, 1643, 0, 0, 0, 1662, 0,
	0, 0, 1640, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1661, 0,
	0, 1671, 0, 0, 0, 0, 0, 1651, 1653, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1667, 0, 1668, 0, 0, 0, 0,
	0, 0, 1638, 1639, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1659, 0, 0, 1646, 1647, 1648, 1649, 0, 0, 0,
	0, 1644, 0, 1629, 0, 0, 0, 0, 0, 0,
	0, 1660, 0, 0, 0, 1635, 1636, 1642, 1663, 1641,
	1637, 0, 1634, 1632, 1633, 1625, 1626, 1627, 1628, 1630,
	1631, 1669, 1661, 0, 0, 1671, 0, 0, 0, 2289,
	0, 1651, 1653, 0, 0, 0, 0, 0, 0, 1658,
	0, 0, 0, 0, 0, 0, 0, 1667, 0, 1668,
	0, 0, 0, 0, 0, 0, 1638, 1639, 0, 0,
	0, 1621, 1622, 0, 1654, 1655, 1656, 1664, 1665, 1666,
	0, 0, 0, 0, 1659, 0, 0, 0, 0, 0,
	0, 0, 1657, 1652, 0, 1644, 0, 0, 0, 0,
	1624, 1650, 0, 0, 0, 0, 0, 0, 1670, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1645, 0, 0, 0, 1669, 0, 0, 0, 0,
	0, 0, 0, 0, 1623, 0, 0, 0, 0, 0,
	0, 0, 0, 1658, 1643, 0, 1662, 0, 0, 0,
	0, 0, 1640, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1650, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1645, 0, 0, 0, 0,
	0, 0, 0, 1646, 1647, 1648, 1649, 0, 0, 0,
	0, 0, 0, 1629, 0, 0, 0, 0, 0, 1660,
	1662, 0, 0, 1635, 1636, 1642, 1663, 1641, 1637, 0,
	1634, 1632, 1633, 1625, 1626, 1627, 1628, 1630, 1631, 0,
	0, 0, 1661, 4047, 0, 1671, 0, 0, 0, 0,
	0, 1651, 1653, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1667, 0, 1668,
	0, 0, 0, 0, 0, 0, 1638, 1639, 0, 1621,
	1622, 0, 1654, 1655, 1656, 1664, 1665, 1666, 0, 0,
	0, 0, 0, 0, 1659, 0, 0, 0, 0, 0,
	1657, 1652, 0, 0, 0, 1644, 0, 0, 1624, 0,
	0, 0, 0, 1660, 0, 0, 1670, 1635, 1636, 1642,
	1663, 1641, 1637, 0, 1634, 1632, 1633, 1625, 1626, 1627,
	1628, 1630, 1631, 0, 0, 1669, 0, 4043, 0, 0,
	0, 0, 1623, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1643, 1658, 0, 0, 0, 0, 0, 0,
	1640, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1621, 1622, 0, 1654, 1655, 1656,
	1664, 1665, 1666, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1657, 1652, 0, 0, 0,
	0, 0, 0, 1624, 0, 1650, 0, 0, 0, 0,
	0, 1670, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1645, 0, 0, 0, 0,
	0, 1646, 1647, 1648, 1649, 0, 0, 1623, 0, 0,
	0, 1629, 0, 0, 0, 0, 0, 1643, 0, 0,
	1662, 0, 0, 0, 0, 1640, 0, 0, 0, 0,
	0, 1621, 1622, 0, 1654, 1655, 1656, 1664, 1665, 1666,
	1661, 0, 0, 1671, 0, 0, 0, 0, 0, 1651,
	1653, 0, 1657, 1652, 0, 0, 0, 0, 0, 0,
	1624, 0, 0, 0, 0, 1667, 0, 1668, 1670, 0,
	0, 0, 0, 0, 1638, 1639, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1659, 0, 1623, 0, 1646, 1647, 1648, 1649,
	0, 0, 0, 1644, 1643, 0, 1629, 0, 0, 0,
	0, 0, 1640, 1660, 0, 0, 0, 1635, 1636, 1642,
	1663, 1641, 1637, 0, 1634, 1632, 1633, 1625, 1626, 1627,
	1628, 1630, 1631, 1669, 0, 1661, 0, 3955, 1671, 0,
	0, 0, 0, 0, 1651, 1653, 0, 0, 0, 0,
	0, 1658, 0, 0, 0, 0, 0, 0, 0, 0,
	1667, 0, 1668, 0, 0, 0, 0, 0, 0, 1638,
	1639, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1646, 1647, 1648, 1649, 1659, 0, 0,
	0, 0, 0, 1629, 0, 0, 0, 0, 1644, 0,
	0, 0, 0, 1650, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1661, 1645, 0, 1671, 0, 0, 1669, 0,
	0, 1651, 1653, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1658, 1667, 1662, 1668,
	0, 0, 0, 0, 0, 0, 1638, 1639, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1659, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1644, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1650, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1669, 0, 0, 1645, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1658, 0, 0, 0, 0, 0, 0,
	0, 1660, 0, 1662, 0, 1635, 1636, 1642, 1663, 1641,
	1637, 0, 1634, 1632, 1633, 1625, 1626, 1627, 1628, 1630,
	1631, 0, 0, 0, 0, 3954, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1650, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1621, 1622, 0, 1654,
	1655, 1656, 1664, 1665, 1666, 1645, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1657, 1652, 0,
	0, 0, 0, 0, 0, 1624, 0, 0, 0, 0,
	1662, 0, 0, 1670, 0, 0, 1660, 0, 0, 0,
	1635, 1636, 1642, 1663, 1641, 1637, 0, 1634, 1632, 1633,
	1625, 1626, 1627, 1628, 1630, 1631, 0, 0, 0, 1623,
	3802, 0, 0, 0, 0, 0, 0, 0, 0, 1643,
	0, 0, 0, 0, 0, 0, 0, 1640, 0, 0,
	0, 1621, 1622, 0, 1654, 1655, 1656, 1664, 1665, 1666,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1657, 1652, 0, 0, 0, 0, 0, 0,
	1624, 0, 0, 0, 0, 0, 0, 0, 1670, 0,
	0, 0, 0, 1660, 0, 0, 0, 1635, 1636, 1642,
	1663, 1641, 1637, 0, 1634, 1632, 1633, 1625, 1626, 1627,
	1628, 1630, 1631, 0, 1623, 0, 0, 3663, 1646, 1647,
	1648, 1649, 0, 0, 1643, 0, 0, 0, 1629, 0,
	0, 0, 1640, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1661, 0, 0,
	1671, 0, 0, 0, 0, 0, 1651, 1653, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1667, 0, 1668, 0, 0, 0, 0, 0,
	0, 1638, 1639, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1646, 1647, 1648, 1649, 0, 0, 1659,
	0, 0, 0, 1629, 0, 0, 0, 0, 0, 0,
	1644, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1661, 0, 0, 1671, 0, 0, 0, 0,
	1669, 1651, 1653, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1667, 1658, 1668,
	0, 0, 0, 0, 0, 0, 1638, 1639, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1659, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1644, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1650, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1669, 0, 0, 0, 0,
	1645, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1658, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1662, 0, 0, 0, 0,
	0, 0, 1621, 1622, 0, 1654, 1655, 1656, 1664, 1665,
	1666, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1657, 1652, 0, 0, 0, 0, 0,
	0, 1624, 0, 0, 0, 1650, 0, 0, 0, 1670,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1645, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1623, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1643, 0, 0, 0, 0,
	1662, 0, 0, 1640, 0, 0, 0, 0, 1660, 0,
	0, 0, 1635, 1636, 1642, 1663, 1641, 1637, 0, 1634,
	1632, 1633, 1625, 1626, 1627, 1628, 1630, 1631, 0, 0,
	0, 0, 3606, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1646, 1647, 1648, 1649, 0, 0,
	0, 0, 0, 0, 1629, 0, 0, 0, 0, 0,
	0, 0, 0, 1660, 0, 0, 0, 1635, 1636, 1642,
	1663, 1641, 1637, 0, 1634, 1632, 1633, 1625, 1626, 1627,
	1628, 1630, 1631, 1661, 0, 0, 1671, 3605, 0, 0,
	0, 0, 1651, 1653, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1667, 0,
	1668, 0, 0, 0, 0, 0, 0, 1638, 1639, 0,
	1621, 1622, 0, 1654, 1655, 1656, 1664, 1665, 1666, 0,
	0, 0, 0, 0, 0, 1659, 0, 0, 0, 0,
	0, 1657, 1652, 0, 0, 0, 1644, 0, 0, 1624,
	0, 0, 0, 0, 0, 0, 0, 1670, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1669, 0, 0, 0,
	0, 0, 0, 1623, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1643, 1658, 0, 0, 0, 0, 0,
	0, 1640, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1621, 1622, 0, 1654, 1655,
	1656, 1664, 1665, 1666, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1657, 1652, 0, 0,
	0, 0, 0, 0, 1624, 0, 1650, 0, 0, 0,
	0, 0, 1670, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1645, 0, 0, 0,
	0, 0, 1646, 1647, 1648, 1649, 0, 0, 1623, 0,
	0, 0, 1629, 0, 0, 0, 0, 0, 1643, 0,
	0, 1662, 0, 0, 0, 0, 1640, 0, 0, 0,
	0, 0, 1621, 1622, 0, 1654, 1655, 1656, 1664, 1665,
	1666, 1661, 0, 0, 1671, 0, 0, 0, 0, 0,
	1651, 1653, 0, 1657, 1652, 0, 0, 0, 0, 0,
	0, 1624, 0, 0, 0, 0, 1667, 0, 1668, 1670,
	0, 0, 0, 0, 0, 1638, 1639, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1659, 0, 1623, 0, 1646, 1647, 1648,
	1649, 0, 0, 0, 1644, 1643, 0, 1629, 0, 0,
	0, 0, 0, 1640, 1660, 0, 0, 0, 1635, 1636,
	1642, 1663, 1641, 1637, 0, 1634, 1632, 1633, 1625, 1626,
	1627, 1628, 1630, 1631, 1669, 0, 1661, 0, 3604, 1671,
	0, 0, 0, 0, 0, 1651, 1653, 0, 0, 0,
	0, 0, 1658, 0, 0, 0, 0, 0, 0, 0,
	0, 1667, 0, 1668, 0, 0, 0, 0, 0, 0,
	1638, 1639, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1646, 1647, 1648, 1649, 1659, 0,
	0, 0, 0, 0, 1629, 0, 0, 0, 0, 1644,
	0, 0, 0, 0, 1650, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1661, 1645, 0, 1671, 0, 0, 1669,
	0, 0, 1651, 1653, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1658, 1667, 1662,
	1668, 0, 0, 0, 0, 0, 0, 1638, 1639, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1659, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1644, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1650,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1669, 0, 0, 1645,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1658, 0, 0, 0, 0, 0,
	0, 0, 1660, 0, 1662, 0, 1635, 1636, 1642, 1663,
	1641, 1637, 0, 1634, 1632, 1633, 1625, 1626, 1627, 1628,
	1630, 1631, 0, 0, 0, 0, 3304, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1650, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1621, 1622, 0,
	1654, 1655, 1656, 1664, 1665, 1666, 1645, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1657, 1652,
	0, 0, 0, 0, 0, 0, 1624, 0, 0, 0,
	0, 1662, 0, 0, 1670, 0, 0, 1660, 0, 0,
	0, 1635, 1636, 1642, 1663, 1641, 1637, 0, 1634, 1632,
	1633, 1625, 1626, 1627, 1628, 1630, 1631, 0, 0, 0,
	1623, 2866, 0, 0, 0, 0, 0, 0, 0, 0,
	1643, 0, 0, 0, 0, 0, 0, 0, 1640, 0,
	0, 0, 1621, 1622, 0, 1654, 1655, 1656, 1664, 1665,
	1666, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1657, 1652, 0, 0, 0, 0, 0,
	0, 1624, 0, 0, 0, 0, 0, 0, 0, 1670,
	0, 0, 0, 0, 1660, 0, 0, 0, 1635, 1636,
	1642, 1663, 1641, 1637, 0, 1634, 1632, 1633, 1625, 1626,
	1627, 1628, 1630, 1631, 0, 1623, 0, 0, 2865, 1646,
	1647, 1648, 1649, 0, 0, 1643, 0, 0, 0, 1629,
	0, 0, 0, 1640, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1661, 0,
	0, 1671, 0, 0, 0, 0, 0, 1651, 1653, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1667, 0, 1668, 0, 0, 0, 0,
	0, 0, 1638, 1639, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1646, 1647, 1648, 1649, 0, 0,
	1659, 0, 0, 0, 1629, 0, 0, 0, 0, 0,
	0, 1644, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1661, 0, 0, 1671, 0, 0, 0,
	0, 1669, 1651, 1653, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1667, 1658,
	1668, 0, 0, 0, 0, 0, 0, 1638, 1639, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1659, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1644, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1650, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1669, 0, 0, 0,
	0, 1645, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1658, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1662, 0, 0, 0,
	0, 0, 0, 1621, 1622, 0, 1654, 1655, 1656, 1664,
	1665, 1666, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1657, 1652, 0, 0, 0, 0,
	0, 0, 1624, 0, 0, 0, 1650, 0, 0, 0,
	1670, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1645, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1623, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1643, 0, 0, 0,
	0, 1662, 0, 0, 1640, 0, 0, 0, 0, 1660,
	0, 0, 0, 1635, 1636, 1642, 1663, 1641, 1637, 0,
	1634, 1632, 1633, 1625, 1626, 1627, 1628, 1630, 1631, 0,
	0, 0, 0, 2864, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1646, 1647, 1648, 1649, 0,
	0, 0, 0, 0, 0, 1629, 0, 0, 0, 0,
	0, 0, 0, 0, 1660, 0, 0, 0, 1635, 1636,
	1642, 1663, 1641, 1637, 0, 1634, 1632, 1633, 1625, 1626,
	1627, 1628, 1630, 1631, 1661, 0, 0, 1671, 2863, 0,
	0, 0, 0, 1651, 1653, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1667,
	0, 1668, 0, 0, 0, 0, 0, 0, 1638, 1639,
	0, 1621, 1622, 0, 1654, 1655, 1656, 1664, 1665, 1666,
	0, 0, 0, 0, 0, 0, 1659, 0, 0, 0,
	0, 0, 1657, 1652, 0, 0, 0, 1644, 0, 0,
	1624, 0, 0, 0, 0, 0, 0, 0, 1670, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1669, 0, 0,
	0, 0, 0, 0, 1623, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1643, 1658, 0, 0, 0, 0,
	0, 0, 1640, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1621, 1622, 0, 1654, 1655,
	1656, 1664, 1665, 1666, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1657, 1652, 0, 0,
	0, 0, 2801, 0, 1624, 0, 0, 1650, 0, 0,
	0, 0, 1670, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1645, 0, 0,
	0, 0, 0, 1646, 1647, 1648, 1649, 0, 1623, 0,
	0, 0, 0, 1629, 4168, 0, 0, 0, 1643, 0,
	0, 0, 1662, 0, 0, 0, 1640, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1661, 0, 0, 1671, 0, 0, 0, 0,
	0, 1651, 1653, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2802, 0, 0, 0, 0, 1667, 0, 1668,
	0, 0, 0, 0, 0, 0, 1638, 1639, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1659, 0, 0, 1646, 1647, 1648,
	1649, 0, 0, 0, 0, 1644, 0, 1629, 0, 0,
	0, 0, 0, 0, 0, 1660, 0, 0, 0, 1635,
	1636, 1642, 1663, 1641, 1637, 0, 1634, 1632, 1633, 1625,
	1626, 1627, 1628, 1630, 1631, 1669, 1661, 2830, 0, 1671,
	0, 0, 0, 0, 0, 1651, 1653, 0, 0, 0,
	0, 0, 0, 1658, 0, 0, 0, 0, 0, 0,
	0, 1667, 0, 1668, 0, 0, 0, 0, 0, 0,
	1638, 1639, 0, 0, 0, 0, 0, 0, 0, 4167,
	0, 0, 0, 0, 0, 0, 0, 0, 1659, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1644,
	0, 0, 0, 0, 0, 1650, 0, 0, 0, 0,
	0, 0, 0, 0, 1621, 1622, 0, 1654, 1655, 1656,
	1664, 1665, 1666, 0, 0, 1645, 0, 0, 0, 1669,
	0, 0, 0, 0, 0, 1657, 1652, 0, 0, 0,
	0, 0, 0, 1624, 0, 0, 0, 1658, 0, 0,
	1662, 1670, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1623, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1643, 0, 0,
	0, 0, 0, 0, 0, 1640, 0, 0, 0, 1650,
	0, 0, 2409, 0, 0, 0, 0, 0, 0, 1621,
	1622, 0, 1654, 1655, 1656, 1664, 1665, 1666, 0, 1645,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1657, 1652, 0, 0, 0, 2408, 0, 0, 1624, 0,
	0, 0, 0, 1660, 1662, 0, 1670, 1635, 1636, 1642,
	1663, 1641, 1637, 0, 1634, 1632, 1633, 1625, 1626, 1627,
	1628, 1630, 1631, 0, 0, 0, 1646, 1647, 1648, 1649,
	0, 0, 1623, 0, 0, 0, 1629, 0, 2926, 0,
	0, 2925, 1643, 0, 0, 0, 0, 0, 0, 0,
	1640, 0, 0, 0, 0, 0, 1621, 1622, 0, 1654,
	1655, 1656, 1664, 1665, 1666, 1661, 0, 0, 1671, 0,
	0, 0, 0, 0, 1651, 1653, 0, 1657, 1652, 0,
	0, 0, 0, 0, 0, 1624, 0, 0, 0, 0,
	1667, 0, 1668, 1670, 0, 0, 0, 1660, 0, 1638,
	1639, 1635, 1636, 1642, 1663, 1641, 1637, 0, 1634, 1632,
	1633, 1625, 1626, 1627, 1628, 1630, 1631, 1659, 0, 1623,
	0, 1646, 1647, 1648, 1649, 0, 0, 0, 1644, 1643,
	0, 1629, 0, 0, 0, 0, 0, 1640, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1669, 0,
	1661, 0, 0, 1671, 0, 0, 0, 0, 0, 1651,
	1653, 0, 0, 0, 0, 0, 1658, 0, 0, 0,
	0, 0, 0, 0, 0, 1667, 0, 1668, 0, 0,
	0, 0, 0, 0, 1638, 1639, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1646, 1647,
	1648, 1649, 1659, 0, 0, 0, 0, 0, 1629, 0,
	0, 0, 0, 1644, 0, 0, 0, 0, 1650, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1621, 1622,
	0, 1654, 1655, 1656, 1664, 1665, 1666, 1661, 1645, 0,
	1671, 0, 0, 1669, 0, 0, 1651, 1653, 0, 1657,
	1652, 0, 0, 0, 0, 0, 0, 1624, 0, 0,
	0, 1658, 1667, 1662, 1668, 1670, 0, 0, 0, 0,
	0, 1638, 1639, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1659,
	0, 1623, 0, 0, 0, 0, 0, 0, 0, 0,
	1644, 1643, 0, 0, 0, 0, 0, 0, 0, 1640,
	0, 0, 0, 1650, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1669, 0, 0, 1645, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1658, 947,
	0, 0, 0, 0, 0, 0, 1660, 0, 1662, 0,
	1635, 1636, 1642, 1663, 1641, 1637, 0, 1634, 1632, 1633,
	1625, 1626, 1627, 1628, 1630, 1631, 0, 0, 0, 0,
	1646, 1647, 1648, 1649, 0, 0, 0, 0, 0, 0,
	1629, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1650, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1621, 1622, 0, 1654, 1655, 1656, 1664, 1665, 1666, 1661,
	1645, 0, 1671, 0, 0, 0, 0, 0, 1651, 1653,
	0, 1657, 1652, 0, 0, 0, 0, 0, 0, 1624,
	0, 0, 0, 0, 1667, 1662, 1668, 1670, 0, 0,
	0, 1660, 0, 1638, 1639, 1635, 1636, 1642, 1663, 1641,
	1637, 0, 1634, 1632, 1633, 1625, 1626, 1627, 1628, 1630,
	1631, 1659, 0, 1623, 0, 0, 0, 0, 0, 0,
	0, 0, 1644, 1643, 0, 0, 0, 0, 0, 0,
	0, 1640, 0, 0, 0, 0, 0, 1621, 1622, 0,
	1654, 1655, 1656, 1664, 1665, 1666, 0, 0, 0, 0,
	0, 0, 1669, 0, 0, 0, 0, 0, 1657, 1652,
	0, 0, 0, 2927, 0, 0, 1624, 0, 0, 0,
	1658, 0, 0, 0, 1670, 0, 0, 0, 1660, 0,
	0, 0, 1635, 1636, 1642, 1663, 1641, 1637, 0, 1634,
	1632, 1633, 1625, 1626, 1627, 1628, 1630, 1631, 0, 0,
	1623, 0, 1646, 1647, 1648, 1649, 0, 0, 0, 0,
	1643, 0, 1629, 0, 0, 0, 0, 2932, 1640, 0,
	0, 0, 1650, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1661, 1645, 0, 1671, 0, 0, 0, 0, 0,
	1651, 1653, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1667, 1662, 1668, 0,
	0, 0, 0, 0, 0, 1638, 1639, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1646,
	1647, 1648, 1649, 1659, 0, 0, 0, 0, 0, 1629,
	0, 0, 0, 0, 1644, 3285, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1621,
	1622, 0, 1654, 1655, 1656, 1664, 1665, 1666, 1661, 0,
	0, 1671, 0, 0, 1669, 0, 0, 1651, 1653, 0,
	1657, 1652, 0, 0, 0, 2867, 0, 0, 1624, 0,
	0, 0, 1658, 1667, 0, 1668, 1670, 0, 0, 0,
	1660, 0, 1638, 1639, 1635, 1636, 1642, 1663, 1641, 1637,
	0, 1634, 1632, 1633, 1625, 1626, 1627, 1628, 1630, 1631,
	1659, 0, 1623, 0, 0, 0, 0, 0, 0, 0,
	0, 1644, 1643, 0, 0, 0, 0, 0, 0, 0,
	1640, 0, 0, 0, 1650, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1669, 0, 0, 1645, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1658,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1662,
	0, 0, 0, 0, 0, 0, 0, 0, 1621, 1622,
	0, 1654, 1655, 1656, 1664, 1665, 1666, 0, 0, 0,
	0, 1646, 1647, 1648, 1649, 0, 0, 0, 0, 1657,
	1652, 1629, 0, 0, 0, 0, 0, 1624, 0, 0,
	0, 1650, 0, 0, 0, 1670, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1661, 1645, 0, 1671, 0, 0, 0, 0, 0, 1651,
	1653, 1623, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1643, 0, 0, 0, 1667, 1662, 1668, 0, 1640,
	0, 0, 1660, 0, 1638, 1639, 1635, 1636, 1642, 1663,
	1641, 1637, 0, 1634, 1632, 1633, 1625, 1626, 1627, 1628,
	1630, 1631, 1659, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1644, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1669, 0, 0, 0, 0, 0, 0,
	1646, 1647, 1648, 1649, 0, 0, 0, 0, 0, 0,
	1629, 1658, 0, 0, 0, 0, 0, 0, 0, 1660,
	0, 0, 0, 1635, 1636, 1642, 1663, 1641, 1637, 0,
	1634, 1632, 1633, 1625, 1626, 1627, 1628, 1630, 1631, 1661,
	0, 0, 1671, 0, 0, 0, 0, 0, 1651, 1653,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1650, 1667, 0, 1668, 0, 0, 0,
	0, 0, 0, 1638, 1639, 0, 0, 0, 0, 0,
	0, 0, 0, 1645, 0, 0, 0, 0, 0, 0,
	0, 1659, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1644, 0, 0, 0, 0, 0, 1662, 0,
	0, 0, 0, 0, 0, 0, 0, 1621, 1622, 0,
	1654, 1655, 1656, 1664, 1665, 1666, 0, 0, 0, 0,
	0, 0, 1669, 0, 0, 0, 0, 0, 1657, 1652,
	0, 0, 0, 0, 0, 0, 1624, 0, 0, 0,
	1658, 0, 0, 0, 1670, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2894, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1623, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1643, 0, 0, 0, 0, 0, 0, 0, 1640, 0,
	0, 1660, 1650, 0, 0, 1635, 1636, 1642, 1663, 1641,
	1637, 0, 1634, 1632, 1633, 1625, 1626, 1627, 1628, 1630,
	1631, 0, 1645, 0, 0, 0, 0, 0, 0, 0,
	0, 1621, 1622, 0, 1654, 1655, 1656, 1664, 1665, 1666,
	0, 0, 0, 0, 0, 0, 0, 1662, 0, 0,
	0, 0, 1657, 1652, 0, 0, 0, 0, 0, 0,
	1624, 0, 0, 0, 0, 0, 0, 0, 1670, 1646,
	1647, 1648, 1649, 0, 0, 0, 0, 0, 0, 1629,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1623, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1643, 0, 0, 0, 1661, 0,
	0, 1671, 1640, 0, 0, 0, 0, 1651, 1653, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1667, 0, 1668, 0, 0, 0, 0,
	1660, 0, 1638, 1639, 1635, 1636, 1642, 1663, 1641, 1637,
	0, 1634, 1632, 1633, 1625, 1626, 1627, 1628, 1630, 1631,
	1659, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1644, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1646, 1647, 1648, 1649, 0, 0, 0,
	0, 0, 0, 1629, 0, 0, 0, 0, 0, 0,
	0, 1669, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1658,
	0, 0, 1661, 0, 0, 1671, 0, 0, 0, 0,
	0, 1651, 1653, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1667, 0, 1668,
	0, 0, 0, 0, 0, 0, 1638, 1639, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1650, 0, 0, 1659, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1644, 0, 0, 0, 0,
	0, 1645, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1669, 1662, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1650, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1645, 0, 0, 0, 1660,
	0, 0, 0, 1635, 1636, 1642, 1663, 1641, 1637, 0,
	1634, 1632, 1633, 1625, 1626, 1627, 1628, 1630, 1631, 0,
	1662, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1660, 0, 0, 0, 1635, 1636, 1642,
	1663, 1641, 1637, 0, 1634, 1632, 1633, 1625, 1626, 1627,
	1628, 1630, 1631,
}
var sqlPact = [...]int{

	8174, -1000, -1000, -1000, -1000, 184, -1000, -1000, 183, 181,
	180, 178, 176, 175, 173, 168, 166, -1000, -1000, -1000,
	-1000, -1000, -1000, 163, -1000, -1000, 159, -1000, 156, 153,
	152, -1000, -1000, 151, -1000, 150, -1000, -1000, -1000, -1000,
	149, 144, 141, 77371, 76880, 77855, 2094, 94452, 82709, 1978,
	69052, 93961, 68561, 93470, 92979, 2507, 140, -1000, 92488, 136,
	135, 134, -1000, 91997, -1000, 1745, -1000, 133, 2022, 56261,
	132, 131, 129, 2080, 128, -1000, 124, 122, -1000, 11795,
	1480, -1000, 121, 120, -1000, 10248, 5476, 81734, 118, 117,
	2448, 116, 115, 55769, 112, 111, 1916, 2694, -1000, -1000,
	1840, -1000, -1000, 109, 108, 106, 105, 104, 103, 101,
	100, 99, 98, -1000, 97, 96, 95, 94, 93, 92,
	90, 89, -1000, 88, 87, 86, 82, 81, 80, 76,
	73, 70, 69, 67, 66, -1000, 13873, 64, 1764, 1571,
	1570, 1563, 1555, 1554, 900, 63, 61, 58, 57, 56,
	55, 54, 52, 51, -1000, 49, 48, 47, 46, 45,
	41, 39, 31, 158, 30, 29, 25, 23, 22, 18,
	17, 2963, -1000, 1476, 1531, 26191, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 100260, 94936, 9, -111, 8, -1000,
	3090, 941, 46398, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 258,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 449,
	1983, 685, -1000, -1000, -1000, 91513, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2091, -88, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 683, -1000, 2090, 167, 2042, -1000, -1000,
	-1000, -1000, -1000, 94936, -1000, 988, -1000, -1000, 3444, 3443,
	1866, 681, 91029, -1000, 1689, -1000, 842, 27736, -1000, 1085,
	-1000, 27736, 250, -1000, -1000, -1000, -1000, -1000, -1000, 3442,
	3440, 3439, 3437, -1000, -1000, 68070, 19957, 67579, 67088, 90538,
	19456, 76389, 75898, 90047, 63177, 981, -1000, -1000, -1000, 1339,
	-1000, -1000, -1000, -1000, -1000, -1000, -10, 60672, 3287, 94936,
	-1000, 248, -1000, -1000, -1000, -1000, -1000, -1000, 39797, 801,
	39270, 781, 38743, 637, -1000, -1000, -1000, 62676, -1000, 3436,
	3435, 1081, 3434, 3009, 99776, 1719, 3433, 1699, 1206, 3432,
	3430, 3429, 3428, 3427, 3426, 1346, 89556, 2763, 89065, 1697,
	62175, 980, 75407, 77855, 2429, 88574, 1345, 1297, -1000, -1000,
	-1000, -1000, 2878, 2660, 2643, 52340, -1000, -1000, 3424, 3423,
	3421, 3419, 3417, 99292, 1710, 3416, 2289, 3413, 3410, 3409,
	3408, 3407, 3403, 3399, -1000, 74916, 973, 74425, 73934, 3132,
	88083, 73443, 87592, 61674, 38216, 1504, -1000, -1000, -1000, 48376,
	9057, 7942, 87101, 50379, 77855, 77855, -1000, -1000, -1000, -1000,
	-1000, 37689, 589, 37162, 1296, -1000, -1000, 48882, 2707, -1000,
	-1000, -1000, -1000, 36635, 555, 36108, 1009, 94936, -1000, 2762,
	1797, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2056, 1517, 3290, 2527, 61173, 1885, 1274,
	3068, 2877, 2870, 1369, 3397, 2362, 2862, 2841, 2838, 2817,
	2814, 1653, 2377, 484, 25664, 2748, 1664, 35581, 1431, 1381,
	2792, 2788, 3312, 1833, 1851, 2000, 66597, 3395, 3394, 3027,
	2770, 2767, 2705, -1000, -1000, -1000, -1000, 1317, -1000, -1000,
	-1000, -1000, -1000, 69536, -1000, -1000, 1079, -1000, -1000, 1079,
	-1000, -1000, -1000, -1000, -1000, 1261, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1476, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1946, -1000,
	1860, -1000, -1000, 2282, 3045, 3045, 3045, 3094, 423, 422,
	-1000, 158, -1000, -1000, 106336, -1000, -1000, 40312, 40312, 40312,
	40312, 40312, 40312, 40312, 1998, -1000, 676, -1000, -1000, 718,
	-1000, 671, 551, -1000, -1000, -1000, -1000, -1000, -1000, 670,
	-1000, -1000, -1000, -1000, -1000, -1000, 3287, -1000, 22514, -1000,
	-1000, -1000, 394, 668, 40312, -1000, -1000, 3327, 3326, 933,
	-1000, 233, 870, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2760, 667, 666, -1000, 665,
	663, 658, 657, 656, -1000, -1000, -1000, 651, 650, 649,
	648, 645, 644, 642, 633, -1000, 1858, -1000, -1000, -1000,
	-1000, -1000, -1000, 593, 592, 592, 592, -1000, 968, -1000,
	-1000, -1000, 291, 591, 281, 590, 587, 583, -1000, 631,
	629, 627, 626, 625, 623, 622, 620, 616, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 966, -1000, -1000, -1000, -1000, -11,
	94936, -1000, 449, -11, -1000, -1000, 613, -1000, 29808, 29808,
	29808, -1000, -1000, 2087, 40312, -1000, 2456, -1000, -3, -3,
	786, 47378, -1000, 45400, 786, 531, 739, 51848, -1000, 2703,
	-1000, -1000, 612, 220, -1000, -1000, -1000, -1000, 20456, 2688,
	94936, 94936, 77855, 77855, 77855, 2950, 40312, -1000, -1000, 58217,
	94936, 78339, 3208, 58701, 57728, 94936, 2759, -1000, 3036, -1000,
	-1000, 94936, -1000, 40312, -1000, 3203, 1506, 64165, 3127, -25,
	-1000, -1000, -1000, -1000, -1000, -1000, 2269, 2291, 1060, 2129,
	1738, -1000, 27736, 2997, -1000, -1000, -1000, 218, 20456, -1000,
	-1000, -1000, -1000, -1000, 4221, 2913, 1375, -1000, 2124, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1649, 2905,
	-1000, 2118, 2904, 1621, -1000, -1000, 2169, -1000, -1000, 3022,
	-1000, -1000, 1683, 2902, -2, -1000, -1000, 2280, -1000, -1000,
	1928, -1000, -1000, 929, 2900, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 72952, 49880, 48882, 60672, -18, -1000,
	-1000, -1000, -1000, -35, -1000, 18955, 106336, -1000, -1000, -1000,
	-1000, 1690, 106336, 859, -1000, -1000, 2898, -1000, 106336, 858,
	-1000, -1000, 2897, -1000, 2754, -1000, -1000, -1000, -1000, 3393,
	-1000, 3392, 2204, 3391, 3390, 3389, -1000, 1607, 1872, 3388,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 72468, 2074, -1000,
	-1000, 71486, -1000, 2203, -1000, 71977, 972, -1000, 929, 2201,
	-1000, 81243, 920, -1000, 3387, 3116, 2489, 929, 2196, -1000,
	-1000, -1000, -1000, -1000, 53809, -1000, 53809, -1000, 53809, -1000,
	1495, -1000, 98808, -3, -3, 3287, -1000, -1000, -1000, -1000,
	-1000, 2896, 3386, 3384, 3383, -1000, 94936, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 191, 2894, -1000, -1000, 80759, 191,
	2892, -1000, 191, 2876, -1000, 80275, -1000, -1000, 2099, 2868,
	-1000, 195, 2861, -1000, -1000, 194, 2857, -1000, -1000, -73,
	2856, -1000, -1000, 106336, -1000, -1000, -1000, -29, -1000, -1000,
	-1000, 941, -1000, 47870, -1000, 47870, 86610, 63676, 896, 692,
	55277, 106336, -1000, -1000, -1000, -1000, 106336, -1000, -1000, -1000,
	-218, -1000, -1000, 63676, 48882, 106336, -1000, -1000, -1000, -1000,
	106336, -1000, -1000, -1000, 63676, 71486, -1000, 86119, 71002, -1000,
	-1000, 1343, 2318, -1000, -1000, -1000, 63676, 1189, 63676, 63676,
	63676, -1000, 85628, -1000, -1000, 1897, 1642, 3024, 1853, 77855,
	-1000, 1703, -1000, -1000, -1000, 3055, -1000, 2750, -1000, 57239,
	79791, -1000, 79307, -1000, 78823, -1000, 77855, -1000, 77855, -1000,
	3380, 3379, 3377, -1000, 3376, 3047, -1000, 106336, 3041, -1000,
	3373, 3121, 2748, 106336, -1000, 2884, 1587, 1579, 94936, -1000,
	-1000, 94936, -1000, 94936, -1000, -1000, -1000, 1416, -1000, -1000,
	2266, -1000, -1000, -1000, -1000, 77855, -1000, -1000, -1000, -1000,
	-1000, -1000, 2747, -1000, 1636, -1000, 1630, -1000, 1338, -1000,
	-1000, 197, -1000, -1000, -25, -1000, 98324, -1000, 2282, -1000,
	94936, -1000, 2285, 2715, 2746, 1784, 2101, 2376, -1000, 35054,
	2334, 42887, 2115, 158, -1000, -1000, 158, 158, 27221, -1000,
	-1000, 58701, 58701, 20456, 1284, 40312, 40312, 40312, 40312, 40312,
	40312, 40312, 40312, 40312, 40312, 40312, 40312, 40312, 40312, 40312,
	40312, 40312, 40312, 40312, 40312, 40312, 40312, 40312, 40312, 40312,
	40312, 40312, 40312, 40312, 40312, 40312, 40312, 40312, 40312, 40312,
	2097, 40312, 1259, 40312, 40312, 40312, 40312, 2059, -1000, -1000,
	1803, 493, 1862, -1000, 3262, 3262, 3262, 1033, 1033, 6845,
	6845, 568, 3370, 718, -1000, 40312, -1000, 68, 40312, 20957,
	-1000, 422, 10031, 2294, -1000, 421, 21484, -1000, -1000, -1000,
	22514, 551, 34527, 40312, 957, 106336, -1000, -1000, 1487, 3289,
	18456, 2773, 2570, 608, 743, 742, 25137, 24610, 24083, 23556,
	741, 40312, 40312, 40312, 40312, 40312, 40312, 40312, 40312, -1000,
	-1000, 3297, -1000, 3289, -1000, -1000, -1000, -1000, 3289, 1283,
	1271, 3289, -1000, 3289, 3289, 2893, 2893, 34012, 33485, 32958,
	43402, 32431, 40312, 23029, 31904, 31377, -1000, 94936, -11, 3202,
	40312, 143, -1000, 105208, -1000, 143, 143, 606, -36, 106336,
	2370, 2370, 46888, 2130, 2003, 2003, 2003, -1000, 786, 14435,
	786, 84655, 2004, 786, 786, 210, 232, 418, 44910, 2456,
	84655, 706, 602, 7, 6, 5, -1000, -1000, 4, 3,
	-1000, -1000, 77855, 600, 20957, 20456, 207, 1376, -43, 2414,
	2413, 2403, -1000, 2402, 1717, -44, 1251, 77855, -39, -1000,
	4813, -46, -1000, 1192, 205, 3289, -1000, -1000, -1000, -1000,
	-1000, 3369, 3367, -1000, 965, 598, 594, 405, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 593, 592, 592, 592,
	-1000, 291, 591, 281, 590, 587, 583, -1000, -1000, -1000,
	-1000, -1000, 2687, 77855, -35, 78339, 77855, 821, -51, 1103,
	-25, -1000, -1000, -1000, 64165, 1079, -1000, 1854, -1000, -1000,
	-1000, -1000, -1000, -1000, 1359, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 933, -1000, -1000, -1000, -1000, -1000, -1000, 3281,
	3275, -12, -1000, -1000, 20456, -1000, -26, 1684, 1622, -1000,
	66106, 2152, 3033, 3016, 1490, -1000, 1388, 1242, 3093, 69536,
	3147, 3166, 1008, -1000, 2683, -1000, -1000, 830, 1581, 1594,
	1241, 69536, 2118, -1000, 58701, -1000, 2389, 3087, 1000, 1298,
	1000, 1000, 1245, -1000, 69536, 1593, 1240, 1233, -1000, 1225,
	1171, -1000, -28, 3146, 3162, 994, -1000, 2682, 1167, -1000,
	-1000, 77855, 20456, 1442, 1437, 1561, 1164, -17, -1000, 3140,
	3131, 1159, 1157, -1000, 4226, -1000, 63676, 1586, 2853, 2523,
	805, 2518, -1000, -1000, 805, -18, 60672, 94936, 204, -1000,
	68, 40312, 40312, 68, 40312, 68, 3120, -1000, -1000, 2852,
	-1000, -1000, -1000, 3364, 1786, 2287, -1000, -1000, 580, 2193,
	2681, 94936, 2436, -21, 77855, -1000, 2851, 2118, 2188, -1000,
	-1000, 70511, -1000, 2850, 449, 2185, -1000, 576, 3361, -1000,
	97840, -1000, 3036, 1302, 2849, 1041, 215, 3201, -1000, 215,
	54299, -1000, 94936, -1000, -1000, 94936, -1000, -1000, -1000, 3359,
	-1000, 77855, -1000, -1000, 77855, 191, 2847, -1000, 77855, -1000,
	77855, 189, 2842, -1000, -1000, 94936, -1000, 77855, 77855, -1000,
	94936, 94936, 63676, 63676, 6221, 65138, -53, -54, 410, -1000,
	85144, 94936, 1034, 65622, 94936, 2987, 912, 48882, -1000, -60,
	-218, 2516, 896, 896, 805, -1000, 805, -1000, 77855, 2721,
	-1000, -1000, 63676, 896, 896, 896, -1000, -1000, -1000, -1000,
	3358, 3357, -1000, -1000, -1000, 928, 77855, 94936, 77855, -1000,
	-1000, 94936, -1000, 94936, -1000, 928, 94936, 928, 94936, 928,
	94936, -1000, -1000, -1000, -1000, -1000, -1000, 68, 40312, -1000,
	-1000, 3356, 1501, -1000, 2719, -1000, 2717, -1000, 34, -1000,
	-1000, -1000, -1000, -1000, 1794, 77855, 77855, 77855, 77855, 94936,
	77855, -1000, 69536, -1000, 2285, 2715, -1000, -1000, -1000, -1000,
	-1000, -1000, 1304, 2051, -1000, 2360, -1000, 1439, -1000, -1000,
	-1000, 106336, 43901, -1000, -1000, 106336, 1716, -1000, 42372, 41857,
	-1000, -1000, 1560, 77855, 2453, -1000, 2453, -134, -1000, 104844,
	2357, 77855, -1000, -1000, -1000, -1000, -1000, 829, 533, 533,
	1155, 1155, 1155, 1155, 3150, 306, 1049, 251, 5886, 5886,
	235, 235, 235, 235, 235, 5886, 482, 1033, 1033, 482,
	482, 482, 482, 482, 1033, 1033, 1033, 5886, 5886, 5886,
	6845, 106450, 7644, 40312, 40312, 1154, 1774, 493, 7257, 40312,
	8251, 8251, 8251, 8251, -1000, 2135, -1000, -1000, -1000, -1000,
	2679, 578, 43402, 43402, -1000, -1000, -1000, -1000, 21999, 40312,
	-1000, -1000, -1000, -1000, 30850, -1000, -1000, 104522, -285, 409,
	-127, 0, -1000, 40312, 40312, 40312, 406, -1000, 201, 40312,
	94936, -1000, 101608, 702, -120, -1000, -61, 1315, -1000, 40312,
	-1000, -1000, 1149, -1000, 1147, 1146, 1145, -1000, 577, 400,
	-1000, 196, -1000, 2001, 572, 571, 40312, -1000, -1000, -1000,
	-1000, -1000, 104201, -1000, -1000, 104116, -1000, -1000, 103751, -1000,
	-1000, 103664, -1000, -1000, -1000, 105928, 101286, 101236, 13422, 8799,
	13319, 12795, -67, 395, -72, 390, 813, 809, 389, 388,
	386, -75, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-77, 378, -1000, 2678, -127, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 375, -1000, 373, -1000, 106067, -127, 356,
	4437, -1000, 43402, 43402, 43402, -1000, 355, -1000, 105113, -1000,
	105746, 30335, 30335, 30335, 352, 105659, 40312, -127, -78, -1000,
	-83, -1000, -1000, 467, -86, 942, 29808, 45906, 20456, -1000,
	942, 942, 40312, -1000, 40312, 2390, -1000, -1000, -1000, 2383,
	2008, 2370, 46888, -1000, -1000, -1000, -1000, 84655, -1000, 3287,
	2539, -1000, 84655, -1000, -1000, 94936, 449, -1000, 84655, 84655,
	20456, 786, -1000, 786, 84655, 688, -1000, -1000, -1000, -1000,
	-1000, 351, 50868, 0, 190, 20456, 929, -1000, 2431, 2431,
	2431, 2431, -1000, -1000, 94936, 1144, -19, 3225, -1000, 1898,
	-1000, 58701, -1000, 717, 1084, 20456, -1000, -1000, -1000, 565,
	-1000, 3289, 3289, -1000, 3289, 94936, 2676, 137, 939, 27736,
	-1000, 1079, -1000, -1000, 1446, -1000, 1811, -1000, 1238, -1000,
	-1000, -1000, -1000, 27736, -1000, 2648, 94936, 94936, 77855, -1000,
	94936, -1000, 2180, 97356, 2176, 58701, 94936, -1000, -1000, 564,
	562, 2350, 2343, 1021, 94936, 94936, 2327, 96872, 96388, 94936,
	1926, 40312, 60188, 2039, 4218, 68, 68, -1000, -1000, 68,
	561, 1230, 77855, 77855, 94936, 77855, 1566, -1000, -1000, -1000,
	-1000, -1000, 70020, -1000, -1000, 3295, 3293, -1000, 1000, -1000,
	-1000, -1000, 1000, 2118, 1544, 94936, 77855, 60188, 1552, 94936,
	1953, 68, 68, -1000, -1000, 68, 557, 20456, 1849, -1000,
	2738, 94936, 3324, 94936, 94936, 94936, 60188, 3056, 95904, 94936,
	94936, 60188, 4226, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 59699, 1046, 929, 1546, 1143, 69536, 48882, 906,
	48882, 2496, -1000, -1000, 17957, -1000, 106336, 106336, -1000, 106336,
	-1000, 56750, 94936, -1000, 971, 94936, 65622, 890, 2836, 53319,
	-35, 896, 63676, 77855, -21, 94936, -1000, 2118, 2833, 449,
	2174, -1000, 63676, 3199, 2826, 554, 3354, 3353, -1000, 2072,
	2173, -1000, -1000, 95420, 2823, 765, 94936, 942, 46888, 1785,
	-1000, 51359, 997, 94936, 1748, 77, -1000, -1000, -1000, 20,
	94936, -1000, 3352, -1000, -1000, 191, -1000, 77855, 191, 191,
	-1000, 77855, 77855, 2099, -1000, 195, -1000, 194, -1000, -73,
	-1000, -1000, 6221, 6221, 896, -194, 553, -1000, 794, 793,
	49381, 63676, -91, -1000, -1000, -1000, -1000, -1000, 77855, 94936,
	595, 2487, 94936, -92, -1000, 188, 552, -1000, 2612, -1000,
	-1000, 912, 48882, 2666, -1000, -1000, 936, -1000, 1328, 896,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -4,
	-35, -35, -1000, 928, -1000, 928, -1000, 928, -1000, 106336,
	-1000, -1000, 1500, 1479, 94936, -1000, 20456, 94936, 77855, 20456,
	77855, 2714, 2713, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1050, -1000, 1716, 2050, -1000, 551, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2256, -1000, -22, 27221,
	2132, -1000, -1000, 77855, -5, 40312, 40312, 7093, 6434, 40312,
	43402, 43402, -1000, 40312, 4927, -1000, -1000, -1000, -1000, -1000,
	2664, 549, 40312, 58701, 7459, 7238, -1000, 350, 12161, 482,
	-1000, 40312, -1000, 349, 29293, -1000, 105295, -34, -93, -1000,
	14947, -127, -98, -1000, -1000, 715, -1000, 2923, -1000, 40312,
	105477, 2226, 1875, 1808, 1508, 3289, 3323, 17458, -1000, 54788,
	943, 2013, 103569, -1000, -1000, -1000, -1000, 58701, 58701, 40312,
	40312, -1000, 40312, 40312, 40312, -1000, -1000, -1000, 3289, 861,
	-1000, -1000, -1000, 861, -1000, -1000, 1000, -1000, 1000, -1000,
	40312, -1000, -1000, 2658, 40312, -1000, 58701, 58701, 43402, 43402,
	43402, 43402, 43402, 43402, 43402, 43402, 43402, 43402, 43402, 43402,
	43402, 43402, 43402, 43402, 43402, 43402, 43402, 2359, 43402, 3244,
	3244, 3244, -1000, 2712, 2658, 40312, 40312, 58701, 348, 342,
	337, -1000, 40312, -127, -1000, -1000, 6221, 545, -1000, 2245,
	-1000, 2569, -1000, 40312, -1000, -141, -1000, 2456, -1000, -1000,
	2569, 2569, -99, 106336, 46888, 46888, -1000, 544, 40312, 2325,
	-1000, -1000, 700, -283, -1000, 792, -1000, -1000, -1000, -1000,
	-1000, 449, -1000, -1000, -1000, 187, 84655, 84655, 698, -1000,
	-100, -1000, -1000, -101, -1000, 3198, 336, 20456, -1000, -1000,
	3031, -1000, -1000, -1000, -1000, -1000, -1000, -35, 94936, 2036,
	3321, -1000, 3291, 714, 696, 186, 3289, 335, 323, 317,
	-35, 94936, 94936, -1000, 2410, -1000, -25, -1000, -1000, -1000,
	40312, -1000, -1000, 3032, 1141, 1139, -1000, -1000, 2825, -1000,
	2172, -1000, 1004, -1000, 1709, -1000, 40312, 40312, 541, 540,
	3351, 1788, 3350, 1022, 2822, 2099, 2821, 2099, -1000, -1000,
	862, -1000, 106336, -1000, -1000, -1000, -1000, 532, 524, -1000,
	-26, 1624, 1537, 934, -1000, -1000, 40312, 40312, 84171, -1000,
	416, 3022, -6, -1000, -1000, 1530, 1137, -1000, -1000, -1000,
	-1000, 2118, 1525, 1134, -1000, -1000, -1000, 931, -1000, -1000,
	930, -1000, -1000, 40312, -1000, -28, 1133, 3134, 2171, 77855,
	1128, -1000, 1126, -1000, -1000, -1000, 3130, 2099, 2816, 1131,
	-1000, -1000, -1000, -1000, -1000, 59200, -1000, 94936, 77855, 1518,
	805, -1000, 2206, 805, 906, 2653, -1000, 2425, 3348, 77855,
	3345, 314, -108, -30, 58701, 3197, -1000, 2098, 543, 77855,
	808, -1000, 3287, -1000, -1000, -1000, -1000, 77855, 3196, 2815,
	929, 68, 77855, 3320, -1000, -1000, 77855, 2813, 2071, 2170,
	2279, 765, 64654, -1000, 929, 2010, -63, -1000, 1748, 28766,
	3018, -115, -1000, -1000, -1000, 942, 54299, 46888, 40312, 3344,
	-124, -1000, -1000, 191, -1000, -1000, -1000, 189, -1000, -1000,
	-1000, -1000, -1000, -1000, 83198, 83198, 63676, 63676, 63676, 896,
	94936, 94936, 65622, -1000, 522, 94936, 94936, 521, -1000, 94936,
	94936, 3343, 63676, -32, 520, -1000, 790, 785, 784, -1000,
	-1000, -1000, -1000, -1000, -1000, -218, 68, -1000, 2027, 77855,
	-1000, 16959, -1000, -1000, -1000, -1000, -1000, 928, -1000, -1000,
	1961, 2110, 1961, 1734, 1729, -1000, 2045, -1000, -1000, -1000,
	-1000, 2374, 3048, 20456, 3144, 8251, 40312, 40312, 899, 5321,
	338, 8251, 40312, 40312, 58701, 11796, -125, 40312, 40312, -1000,
	40312, 694, 106336, 3319, 40312, 312, 311, -1000, -1000, -1000,
	3288, -1000, -1000, -1000, 106336, 40312, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 310, -1000, 138, -1000, -1000, -1000, 100744,
	-1000, 40312, 309, 3086, -1000, 307, 305, 11020, 377, 103341,
	103020, 102935, 302, -1000, -1000, 288, 286, 106336, 2712, 106336,
	-1000, -1000, 728, 728, 1243, 1243, 1243, 1243, 3244, 1027,
	1352, 923, 819, 819, 819, 860, 954, 954, 819, 819,
	819, 2639, 2320, 517, 5940, -1000, -1000, 106336, 106336, 285,
	-1000, -1000, -1000, -127, 284, 6221, -1000, 2557, 3085, 106336,
	-1000, 46888, 2557, 2557, -1000, -1000, 2008, 94936, 106336, 46888,
	-1000, 2539, -1000, 15457, -1000, 20456, -1000, -1000, -1000, -1000,
	3287, -1000, 50868, -1000, 515, -1000, 21, 3031, -1000, 780,
	-1000, -35, -1000, -1000, 691, 3342, 713, 20456, 283, -1000,
	-1000, -1000, -35, -35, -1000, 2986, 106336, 94936, 94936, 94936,
	2811, -1000, 1904, -1000, 1021, 102570, -144, -1000, 104844, 40312,
	94936, -1000, -1000, 1769, 2341, 1075, -1000, 3059, 94936, -1000,
	94936, -1000, -1000, 94936, 94936, 77855, 94936, 2795, -145, 106336,
	-41, -1000, 779, -1000, 1249, -1000, 16460, 94936, 77855, 94936,
	77855, 1989, 2789, -150, 20456, -1000, 3318, 3317, 2807, 3063,
	3316, 94936, -1000, 94936, 77855, 2985, -1000, -1000, -1000, -1000,
	1523, 1125, 906, -42, 510, -1000, 778, -1000, -1000, 774,
	906, -1000, 63676, 48882, -1000, 449, -1000, 2477, -1000, 82218,
	2024, 68, -1000, 3341, 83687, 506, -1000, 2020, -1000, 689,
	2118, 68, 77855, -1000, -1000, 449, 282, -49, -1000, 1012,
	20456, 77855, 2804, 2281, 765, 64654, -1000, 1302, 2376, -1000,
	-56, -1000, 604, 68, 2010, -1000, -63, 106336, -1000, 773,
	-1000, -1000, -1000, -152, -1000, -1000, 278, -1000, 2982, 2981,
	-1000, 2564, 40312, 505, 504, 94936, 2975, -1000, -1000, -153,
	2863, 2863, 63676, 48882, 63676, 912, -1000, 2178, -1000, -1000,
	-1000, -1000, -1000, 20456, 1559, -1000, 503, 500, -1000, -1000,
	-1000, -1000, 3048, 8251, 8251, 40312, 40312, 40312, 8251, 11796,
	-155, -1000, 8251, 8251, -127, -1000, -1000, 105295, -1000, -1000,
	-1000, 106336, -1000, 15961, 1966, -1000, 102483, -1000, 27221, -1000,
	-1000, 40312, 40312, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 43402, 2624, 499, 58701, -1000, -1000, 275, 901, 40312,
	40312, 2456, 901, 901, -1000, -160, -1000, -1000, -1000, 3287,
	21, -1000, -1000, 3337, 20456, -1000, 63676, 708, -1000, 3336,
	-1000, -1000, -1000, -1000, -1000, -1000, 94936, -1000, 94936, -1000,
	20456, 94936, 2599, 2150, -1000, -1000, 2326, 498, 43402, 77855,
	797, -1000, 3219, 2556, 1778, 40312, 2132, -162, -168, 2140,
	-1000, -1000, 2136, 40312, -1000, 58701, 497, 2099, 2099, -169,
	-170, -1000, -1000, 40312, 1124, 94936, 28251, -1000, 3335, 3022,
	-1000, -1000, -1000, -1000, 94936, 40312, 1122, -1000, -1000, -1000,
	3315, 2099, 20456, -1000, 2099, 2099, 3063, 1061, 94936, 77855,
	-1000, 2288, 2288, 63676, 48882, -1000, -73, 906, 3194, 1953,
	2509, -1000, -1000, -1000, -1000, 2306, -1000, -1000, 94936, 2296,
	897, -1000, -171, -1000, 772, 771, 65622, 890, 863, -1000,
	-1000, -1000, 449, 3183, -1000, 3305, 496, 94936, 2070, 494,
	20456, -1000, 765, 64654, -1000, 2823, 1748, -1000, 2160, 94936,
	3015, -1000, 2376, 493, -1000, 896, 492, 491, 2379, 2379,
	-176, 40312, 40312, -183, 489, 896, -1000, -184, -1000, -1000,
	-1000, -1000, -89, -1000, 770, 769, -1000, -1000, 77855, 77855,
	40312, 40312, -1000, 8251, 8251, 8251, -1000, 266, -1000, -1000,
	2010, 3084, -1000, -110, 102388, 102160, 6065, 43402, 58701, -189,
	-1000, -1000, 94936, 106336, -127, -1000, -1000, -1000, 308, -1000,
	-1000, 3334, -1000, -1000, 1809, -1000, -1000, -1000, 94936, 2166,
	-1000, 1019, 40312, 5940, 488, 40312, -1000, 3159, -1000, 2461,
	2627, 2477, 487, -1000, -1000, -1000, -1000, -1000, 1007, 1766,
	-1000, -1000, 106336, 3063, 40312, -1000, -1000, 486, 483, 106336,
	481, 763, 2621, -1000, -1000, -1000, -1000, 106336, 461, 3134,
	-1000, -1000, -1000, -1000, 2099, 77855, -1000, -1000, -1000, -196,
	-1000, -1000, 1814, 68, 890, -1000, 1980, 2024, 458, -1000,
	-1000, 2054, 2409, -1000, 83687, 27736, 27736, 263, 3158, 863,
	-1000, 3282, -1000, 3157, 68, -1000, 40312, -1000, 77855, 40312,
	2068, 64654, -1000, 2279, -1000, -1000, -197, 94936, 1748, -1000,
	-1000, 63676, 63676, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1007, -198, -203, -1000, 63676, -1000,
	-1000, 2178, -1000, 94936, -1000, 94936, -1000, -1000, -204, -205,
	-1000, 1899, 40312, 27221, -1000, -1000, 6065, -211, -1000, -118,
	-1000, 3151, -1000, -1000, -1000, -1000, 2803, 2563, 101930, 2248,
	94936, 101836, -1000, 2618, -1000, -1000, 1953, 94936, 2477, 2559,
	77855, 1017, -219, 1961, 1961, 40312, 26706, 1976, 40312, -1000,
	-1000, 3063, -1000, 2587, 3257, -1000, 2054, 77855, 94936, -1000,
	3052, -1000, 2973, -1000, -1000, -1000, 2477, 68, -1000, -1000,
	68, -1000, -220, 1012, -221, 77855, -1000, 2281, 942, -1000,
	-1000, -226, -227, 1778, 1007, 876, -228, -1000, -229, -234,
	-1000, -1000, 261, 41342, 41342, 41342, -127, -134, -1000, 94936,
	455, 2781, 905, -1000, 2060, 1827, 236, 1023, -1000, -1000,
	2556, -237, -1000, 904, 449, -1000, 40312, 1007, -239, -1000,
	996, -245, -1000, 995, -246, -1000, 2613, -1000, -248, 2099,
	902, 3114, -1000, -1000, -1000, -1000, 448, -253, -1000, -1000,
	2126, -1000, 1953, 897, -1000, 1007, 446, 1778, 445, -1000,
	2932, 896, 896, 2477, 1778, 942, 442, 896, -1000, -1000,
	-1000, 2879, -1000, 44400, 2100, 1726, 104750, 2879, 2879, -1000,
	-1000, 94936, 3101, -1000, 2065, 2061, 1404, -1000, -1000, -1000,
	-1000, -1000, -1000, 942, -1000, 3100, 2248, 106336, 2477, -1000,
	1961, 2504, -1000, 1961, 2590, -1000, 1973, -1000, -1000, -1000,
	2796, 3283, 94936, -1000, 94936, 1702, 1693, 3332, 890, 2054,
	1778, 40312, 2477, 40312, 1234, -1000, -1000, 1953, 2477, -1000,
	-1000, -1000, 1758, 3215, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 756, -1000, 2956, -1000, 1014, 2108, 2108, -1000,
	753, 2060, -1000, -1000, 430, -1000, 429, -1000, 1674, -1000,
	-1000, -255, -1000, -1000, 3331, -1000, 2054, -1000, 2477, -258,
	1953, -260, -1000, 1477, 876, 1953, 1704, -1000, -1000, 2006,
	40827, 40312, -1000, 3231, -1000, -1000, 2314, -1000, 40312, 2556,
	40312, 40312, 2016, 2073, -1000, -1000, 1953, 1007, 876, 1778,
	54299, 942, 876, -1000, -1000, -1000, 106336, -1000, -1000, -1000,
	106336, -1000, -261, -266, 52830, -1000, -1000, -1000, 876, 1778,
	942, 2477, -242, -1000, 942, 1953, 1108, -194, 83198, 942,
	2477, -1000, 1953, -1000, -1000, -1000, 428, -267, -1000, 1953,
	876, 40312, -1000, 876, 942, -273, 942, -1000, 1953, -1000,
	-1000,
}
var sqlPgo = [...]int{

	0, 4044, 4043, 4042, 4041, 4040, 4037, 4032, 4029, 4024,
	4023, 4021, 4020, 4018, 4016, 4015, 4014, 4011, 4010, 4009,
	4008, 4007, 4005, 4004, 4003, 4001, 4000, 3999, 3996, 3993,
	3992, 3990, 3988, 3985, 3983, 3982, 3981, 3980, 3979, 3977,
	3976, 3975, 3973, 3972, 3971, 3970, 3969, 3968, 3967, 3966,
	3959, 3957, 3952, 3951, 32, 3950, 3946, 3945, 3942, 3941,
	3938, 3937, 3935, 3934, 3929, 3928, 3927, 3926, 3925, 3921,
	3920, 3918, 3915, 43, 3914, 239, 3911, 3909, 3908, 3904,
	3900, 3899, 3895, 3893, 3891, 3889, 3888, 3887, 237, 3885,
	92, 3884, 3883, 3882, 3877, 3873, 236, 3870, 3868, 3864,
	3863, 244, 3860, 3859, 3858, 3857, 3856, 3854, 3851, 3850,
	3849, 87, 129, 3843, 3841, 114, 3840, 3839, 3838, 3835,
	3834, 3832, 3831, 3830, 3829, 3826, 208, 3824, 235, 3822,
	3821, 3819, 3816, 3815, 3812, 3811, 3805, 3803, 3801, 3799,
	3793, 3790, 3789, 3788, 3786, 3785, 3782, 3778, 3777, 3776,
	3771, 3770, 3767, 3766, 3765, 3764, 3763, 3761, 3759, 3752,
	242, 166, 3750, 3749, 233, 232, 3746, 3745, 3744, 3742,
	3741, 105, 15, 21, 3740, 3739, 50, 63, 61, 73,
	81, 78, 3738, 86, 3737, 106, 45, 3736, 17, 29,
	210, 220, 6327, 209, 3735, 3733, 3730, 218, 159, 3729,
	198, 3728, 3727, 3726, 3725, 74, 64, 142, 149, 148,
	138, 368, 3724, 3721, 77, 62, 42, 33, 3720, 3719,
	3718, 2734, 102, 3716, 228, 200, 137, 3713, 3711, 3710,
	2130, 3709, 36, 3708, 211, 59, 113, 83, 100, 3707,
	124, 24, 3706, 135, 40, 3705, 126, 75, 66, 8013,
	7705, 3704, 89, 48, 151, 656, 133, 131, 170, 91,
	168, 178, 173, 145, 295, 3702, 216, 3700, 3182, 55,
	127, 3698, 3693, 3692, 57, 164, 85, 3691, 3690, 47,
	9, 5, 25, 160, 10, 99, 14, 3688, 12, 3686,
	3683, 3682, 3680, 38, 146, 3679, 241, 3677, 93, 37,
	23, 3673, 19, 181, 3672, 199, 107, 3664, 3663, 219,
	171, 161, 3662, 80, 194, 3661, 3660, 3658, 3656, 3655,
	112, 4, 110, 3653, 3650, 118, 212, 165, 3649, 41,
	3648, 3646, 140, 79, 109, 240, 97, 192, 90, 188,
	162, 190, 3645, 3644, 3643, 157, 3642, 3640, 185, 132,
	3636, 3634, 172, 245, 34, 60, 197, 51, 158, 136,
	3633, 169, 3631, 3627, 243, 155, 177, 1, 6, 65,
	103, 3626, 31, 196, 125, 277, 88, 3625, 4017, 1825,
	2150, 3624, 3623, 117, 98, 49, 101, 128, 226, 53,
	3622, 3619, 1564, 3617, 3614, 3613, 3610, 153, 3609, 3608,
	3607, 116, 134, 152, 3605, 76, 68, 11, 119, 207,
	238, 96, 186, 174, 221, 3604, 147, 3601, 44, 104,
	3598, 167, 214, 3597, 3596, 84, 3593, 123, 229, 46,
	150, 3592, 189, 3591, 3590, 3589, 3587, 3586, 3585, 3584,
	222, 195, 3583, 3582, 3575, 120, 163, 3574, 224, 122,
	191, 69, 35, 3567, 72, 2713, 3563, 108, 205, 52,
	154, 3562, 472, 39, 0, 10529, 8985, 6020, 9492, 3561,
	4255, 3560, 3559, 3558, 180, 111, 3557, 3551, 3550, 82,
	3549, 58, 3548, 3546, 56, 3538, 13, 2, 8, 20,
	16, 1959, 1244, 3537, 3536, 95, 115, 143, 3535, 231,
	193, 3534, 3533, 3532, 3530, 71, 3529, 27, 3527, 22,
	3526, 3525, 26, 7, 30, 3521, 3518, 202, 3515, 182,
	206, 3510, 130, 3509, 3173, 121, 3508, 3504, 223, 67,
	3501, 217, 3498, 3128, 3497, 3496, 18, 3495, 3490, 204,
	141, 184, 3486, 3485, 139, 3482, 3477, 3472, 215, 3469,
	3466, 28, 3462, 3, 3459, 3458, 175, 3061, 3456, 3452,
	54, 3451, 156,
}
var sqlR1 = [...]int{

	0, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 3, 3, 3, 3, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 11, 11, 7, 7, 7, 8,
	8, 8, 8, 41, 41, 9, 9, 9, 9, 9,
	29, 10, 10, 6, 6, 6, 6, 6, 6, 6,
	6, 6, 16, 16, 30, 30, 17, 17, 32, 32,
	18, 18, 33, 33, 528, 528, 21, 35, 22, 36,
	15, 529, 529, 529, 529, 28, 23, 37, 25, 25,
	25, 25, 25, 174, 174, 174, 174, 20, 20, 31,
	31, 208, 208, 207, 207, 207, 207, 207, 207, 207,
	207, 207, 207, 207, 207, 207, 207, 207, 207, 207,
	207, 207, 207, 207, 207, 207, 527, 527, 210, 210,
	209, 204, 204, 530, 530, 211, 211, 211, 213, 213,
	13, 13, 13, 13, 13, 13, 13, 13, 13, 429,
	429, 429, 460, 460, 460, 543, 543, 544, 544, 544,
	544, 544, 114, 114, 331, 331, 331, 43, 43, 43,
	43, 43, 522, 522, 176, 176, 176, 178, 178, 177,
	177, 177, 177, 64, 64, 535, 535, 536, 536, 534,
	537, 537, 537, 175, 175, 175, 110, 110, 110, 110,
	111, 111, 112, 112, 179, 179, 179, 181, 181, 180,
	180, 180, 180, 180, 180, 180, 180, 185, 97, 97,
	97, 97, 97, 97, 97, 97, 97, 92, 92, 462,
	462, 463, 463, 170, 170, 171, 171, 171, 171, 172,
	172, 173, 173, 173, 57, 182, 182, 184, 184, 183,
	183, 45, 45, 45, 45, 45, 45, 45, 46, 46,
	46, 46, 46, 47, 47, 47, 47, 47, 47, 48,
	48, 48, 48, 48, 48, 55, 55, 55, 55, 161,
	161, 58, 58, 58, 58, 58, 58, 58, 58, 58,
	545, 545, 545, 545, 545, 545, 545, 545, 545, 545,
	545, 545, 545, 545, 545, 545, 545, 545, 545, 546,
	546, 547, 547, 548, 548, 549, 549, 549, 549, 549,
	549, 549, 549, 549, 549, 549, 549, 549, 549, 549,
	549, 549, 549, 60, 60, 60, 60, 60, 60, 60,
	60, 60, 60, 60, 60, 60, 60, 60, 60, 60,
	60, 70, 70, 295, 295, 267, 267, 71, 71, 71,
	72, 72, 73, 73, 59, 59, 520, 520, 310, 310,
	420, 420, 75, 75, 330, 330, 76, 76, 76, 76,
	76, 76, 77, 77, 77, 77, 77, 77, 77, 78,
	78, 78, 78, 78, 78, 78, 78, 78, 78, 78,
	78, 78, 78, 85, 85, 85, 85, 85, 86, 86,
	86, 83, 83, 83, 80, 80, 80, 79, 79, 79,
	84, 84, 84, 519, 258, 258, 82, 82, 82, 260,
	260, 81, 81, 81, 311, 311, 87, 87, 87, 87,
	268, 88, 88, 88, 88, 88, 88, 88, 88, 90,
	90, 90, 90, 90, 90, 90, 90, 90, 90, 90,
	90, 90, 90, 90, 90, 90, 90, 90, 90, 90,
	90, 90, 90, 90, 90, 90, 90, 90, 90, 90,
	91, 91, 91, 91, 91, 91, 91, 91, 91, 91,
	91, 91, 422, 422, 89, 89, 89, 390, 390, 93,
	93, 93, 346, 346, 94, 94, 94, 94, 94, 95,
	95, 95, 95, 95, 113, 113, 113, 113, 113, 524,
	524, 303, 303, 224, 224, 224, 224, 103, 103, 103,
	103, 104, 104, 104, 105, 105, 166, 166, 120, 120,
	120, 120, 120, 119, 119, 119, 119, 119, 119, 49,
	49, 49, 50, 50, 51, 51, 52, 52, 53, 53,
	54, 54, 54, 54, 54, 122, 122, 540, 540, 124,
	121, 121, 121, 123, 123, 123, 123, 125, 126, 126,
	126, 126, 126, 126, 126, 126, 127, 127, 454, 454,
	319, 319, 452, 452, 471, 471, 453, 453, 272, 272,
	272, 272, 272, 273, 273, 273, 461, 461, 461, 461,
	461, 461, 128, 128, 128, 128, 128, 128, 128, 128,
	128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
	128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
	128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
	128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
	128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
	128, 128, 167, 167, 168, 169, 169, 169, 169, 148,
	148, 148, 160, 160, 160, 160, 160, 160, 160, 151,
	151, 151, 138, 138, 129, 129, 129, 129, 129, 129,
	129, 133, 133, 133, 133, 133, 133, 133, 133, 130,
	130, 140, 140, 140, 140, 140, 134, 134, 135, 135,
	137, 137, 139, 139, 139, 139, 139, 139, 139, 139,
	139, 131, 131, 131, 131, 142, 142, 142, 142, 353,
	353, 353, 141, 141, 141, 141, 141, 141, 141, 141,
	141, 141, 141, 159, 159, 159, 159, 159, 159, 538,
	538, 539, 539, 155, 155, 155, 155, 155, 155, 404,
	404, 149, 149, 149, 149, 154, 154, 154, 154, 336,
	336, 146, 146, 146, 147, 147, 147, 152, 152, 153,
	150, 150, 156, 156, 156, 156, 132, 132, 132, 550,
	550, 550, 157, 157, 145, 145, 158, 158, 158, 158,
	158, 158, 158, 158, 144, 144, 144, 143, 143, 143,
	143, 136, 521, 521, 517, 517, 517, 517, 517, 517,
	517, 517, 518, 518, 523, 523, 98, 98, 98, 98,
	98, 106, 106, 106, 106, 106, 99, 99, 99, 99,
	99, 101, 101, 100, 100, 100, 100, 65, 65, 65,
	14, 14, 14, 66, 66, 188, 188, 188, 189, 189,
	280, 280, 280, 280, 186, 186, 187, 187, 67, 67,
	551, 551, 551, 531, 531, 531, 532, 532, 532, 532,
	532, 532, 274, 274, 275, 275, 370, 370, 370, 370,
	370, 278, 278, 278, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 281, 281, 212, 212, 212, 284, 285,
	285, 282, 282, 283, 283, 283, 287, 287, 286, 289,
	289, 288, 369, 480, 480, 482, 482, 482, 482, 482,
	482, 482, 484, 484, 484, 484, 484, 484, 484, 484,
	484, 484, 484, 552, 552, 478, 478, 478, 479, 474,
	474, 475, 475, 475, 475, 475, 276, 276, 277, 277,
	277, 277, 476, 477, 301, 301, 407, 481, 481, 483,
	483, 485, 553, 553, 553, 553, 553, 553, 554, 554,
	554, 368, 368, 367, 367, 293, 293, 486, 486, 486,
	486, 487, 487, 487, 487, 487, 490, 489, 488, 488,
	488, 488, 488, 69, 69, 69, 333, 333, 332, 332,
	334, 334, 334, 334, 334, 334, 334, 334, 334, 334,
	334, 334, 334, 334, 334, 163, 163, 227, 227, 63,
	63, 63, 12, 12, 12, 533, 533, 533, 68, 68,
	68, 68, 68, 68, 226, 226, 226, 226, 226, 226,
	226, 226, 226, 226, 226, 226, 226, 226, 226, 226,
	226, 226, 526, 526, 525, 525, 228, 228, 556, 556,
	74, 74, 74, 74, 74, 74, 74, 423, 423, 424,
	424, 62, 62, 62, 62, 62, 354, 354, 352, 352,
	351, 351, 300, 300, 406, 232, 232, 205, 205, 205,
	27, 26, 19, 19, 24, 24, 39, 39, 39, 39,
	42, 42, 38, 38, 38, 38, 40, 40, 34, 34,
	541, 541, 542, 542, 102, 102, 107, 107, 107, 107,
	107, 108, 108, 108, 108, 109, 109, 109, 109, 118,
	118, 162, 162, 162, 162, 162, 162, 162, 44, 44,
	44, 44, 56, 56, 56, 56, 116, 558, 558, 558,
	117, 117, 117, 557, 557, 225, 225, 364, 364, 365,
	365, 559, 559, 366, 366, 366, 366, 219, 218, 220,
	220, 61, 61, 61, 214, 214, 215, 215, 216, 216,
	217, 217, 560, 560, 96, 96, 96, 165, 165, 266,
	266, 266, 361, 361, 361, 294, 294, 238, 238, 363,
	363, 363, 363, 329, 329, 329, 164, 164, 308, 308,
	321, 321, 322, 322, 417, 417, 323, 115, 115, 192,
	192, 190, 190, 190, 190, 190, 190, 190, 190, 197,
	197, 198, 198, 199, 199, 200, 201, 201, 201, 201,
	312, 312, 202, 202, 202, 191, 191, 191, 193, 193,
	193, 193, 193, 193, 193, 196, 196, 196, 196, 203,
	203, 203, 195, 195, 497, 497, 497, 499, 499, 501,
	501, 500, 500, 496, 496, 498, 498, 555, 555, 335,
	335, 335, 291, 292, 290, 290, 298, 298, 296, 297,
	297, 299, 299, 405, 405, 405, 206, 206, 206, 326,
	326, 326, 326, 327, 327, 357, 357, 355, 355, 355,
	355, 356, 356, 358, 358, 358, 359, 359, 360, 360,
	325, 325, 386, 386, 194, 194, 194, 305, 305, 305,
	306, 306, 376, 376, 376, 376, 376, 376, 377, 377,
	375, 375, 375, 375, 408, 408, 408, 408, 408, 408,
	408, 408, 408, 409, 410, 410, 307, 307, 411, 362,
	362, 515, 515, 515, 516, 516, 403, 403, 412, 412,
	412, 412, 412, 412, 401, 401, 402, 402, 418, 419,
	419, 339, 339, 339, 339, 337, 337, 340, 340, 340,
	340, 338, 338, 413, 413, 413, 413, 328, 328, 414,
	414, 414, 414, 415, 371, 372, 372, 425, 425, 425,
	425, 427, 304, 304, 304, 304, 304, 473, 472, 472,
	426, 426, 426, 426, 426, 426, 426, 426, 426, 441,
	441, 441, 441, 441, 441, 441, 441, 442, 442, 442,
	442, 442, 442, 442, 428, 428, 428, 428, 428, 432,
	432, 432, 431, 431, 431, 431, 431, 431, 431, 431,
	431, 431, 431, 433, 433, 438, 438, 439, 439, 439,
	434, 435, 440, 440, 440, 440, 561, 561, 444, 444,
	436, 436, 436, 436, 436, 436, 436, 436, 436, 430,
	430, 430, 437, 437, 437, 348, 348, 348, 348, 348,
	348, 348, 348, 348, 348, 348, 348, 348, 347, 347,
	349, 349, 378, 378, 378, 378, 378, 378, 378, 378,
	378, 378, 378, 378, 378, 378, 378, 378, 378, 378,
	378, 378, 378, 378, 378, 378, 378, 378, 378, 378,
	378, 378, 378, 378, 378, 378, 378, 378, 378, 378,
	378, 378, 378, 378, 378, 378, 378, 378, 378, 378,
	378, 378, 378, 378, 378, 378, 378, 378, 378, 378,
	378, 378, 378, 378, 378, 378, 378, 378, 378, 378,
	378, 378, 378, 378, 378, 378, 378, 378, 378, 378,
	378, 378, 378, 378, 378, 378, 378, 378, 378, 378,
	379, 379, 379, 379, 379, 379, 379, 379, 379, 379,
	379, 379, 379, 379, 379, 379, 379, 379, 379, 379,
	379, 379, 379, 379, 379, 379, 379, 379, 379, 380,
	380, 380, 380, 381, 381, 381, 381, 381, 381, 381,
	381, 381, 381, 381, 381, 381, 381, 381, 381, 381,
	381, 381, 381, 381, 381, 381, 381, 381, 491, 491,
	491, 491, 491, 491, 491, 491, 382, 382, 494, 494,
	495, 495, 492, 492, 492, 492, 492, 492, 492, 492,
	492, 492, 492, 492, 492, 492, 492, 492, 492, 492,
	492, 492, 492, 492, 492, 493, 493, 493, 493, 493,
	493, 493, 493, 493, 493, 493, 493, 493, 493, 493,
	493, 493, 493, 493, 493, 493, 493, 493, 493, 493,
	493, 493, 493, 493, 493, 493, 493, 493, 493, 493,
	493, 502, 502, 503, 503, 505, 505, 506, 506, 507,
	508, 508, 508, 509, 510, 510, 504, 504, 511, 511,
	511, 511, 512, 512, 513, 513, 513, 513, 513, 514,
	514, 514, 514, 514, 392, 392, 393, 393, 399, 399,
	399, 271, 271, 271, 271, 271, 271, 271, 271, 271,
	271, 271, 271, 271, 271, 271, 271, 229, 229, 229,
	229, 229, 317, 317, 315, 315, 315, 318, 318, 316,
	316, 314, 314, 313, 313, 389, 389, 387, 387, 391,
	391, 341, 341, 443, 443, 443, 443, 443, 443, 443,
	443, 342, 342, 342, 350, 343, 343, 344, 344, 344,
	344, 344, 383, 384, 345, 345, 345, 385, 385, 394,
	398, 398, 397, 396, 396, 395, 395, 373, 373, 374,
	374, 324, 324, 562, 562, 320, 320, 416, 416, 416,
	416, 270, 270, 309, 309, 269, 269, 261, 261, 262,
	262, 262, 262, 302, 302, 400, 400, 445, 445, 446,
	446, 447, 447, 448, 448, 449, 450, 451, 388, 388,
	248, 247, 235, 236, 246, 245, 244, 234, 237, 241,
	242, 243, 239, 240, 254, 253, 252, 259, 250, 251,
	421, 233, 263, 263, 264, 264, 264, 265, 265, 265,
	265, 230, 230, 231, 231, 255, 255, 256, 257, 257,
	249, 249, 249, 221, 221, 221, 222, 222, 223, 223,
	459, 459, 456, 456, 456, 457, 457, 457, 458, 458,
	458, 458, 455, 455, 455, 455, 455, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 464, 464, 464, 464, 464, 464, 464,
	464, 464, 464, 468, 468, 468, 468, 468, 468, 468,
	468, 468, 468, 468, 468, 468, 468, 468, 468, 468,
	468, 468, 468, 468, 468, 468, 468, 468, 468, 468,
	468, 468, 468, 468, 468, 468, 468, 468, 468, 468,
	468, 468, 468, 468, 468, 468, 468, 468, 468, 468,
	468, 468, 468, 468, 468, 465, 465, 466, 466, 466,
	466, 466, 466, 466, 466, 466, 466, 466, 466, 466,
	466, 466, 466, 466, 467, 469, 469, 469, 469, 469,
	469, 469, 469, 469, 469, 469, 469, 469, 469, 469,
	469, 469, 469, 469, 469, 469, 469, 469, 469, 469,
	469, 469, 469, 469, 469, 469, 469, 469, 469, 469,
	469, 469, 469, 469, 469, 469, 469, 469, 469, 469,
	469, 469, 469, 469, 469, 469, 469, 469, 469, 469,
	469, 469, 469, 469, 469, 469, 469, 469, 469, 469,
	469, 469, 469, 469, 469, 469, 469, 469, 469, 469,
	469, 469, 469, 469, 469, 470, 470,
}
var sqlR2 = [...]int{

	0, 1, 1, 1, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 1, 1, 1,
	1, 0, 1, 1, 2, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 1, 3, 1, 1, 3, 1,
	1, 1, 3, 4, 6, 1, 1, 1, 1, 3,
	6, 1, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 4, 6, 4, 6, 6, 9, 6, 9,
	6, 5, 6, 5, 1, 1, 5, 5, 6, 6,
	4, 4, 4, 4, 3, 4, 4, 4, 7, 7,
	9, 8, 9, 5, 3, 5, 7, 4, 12, 4,
	12, 1, 3, 5, 5, 2, 5, 3, 6, 4,
	6, 5, 6, 6, 4, 8, 3, 4, 10, 3,
	6, 4, 3, 1, 3, 3, 2, 1, 1, 3,
	1, 3, 2, 2, 0, 1, 1, 0, 2, 0,
	7, 10, 8, 6, 6, 6, 9, 4, 3, 2,
	2, 0, 1, 1, 1, 1, 3, 6, 4, 6,
	7, 9, 6, 2, 2, 3, 0, 8, 6, 8,
	7, 2, 0, 1, 2, 5, 0, 1, 3, 3,
	1, 1, 3, 12, 3, 1, 0, 1, 1, 2,
	3, 3, 0, 5, 7, 0, 5, 6, 8, 2,
	1, 3, 1, 3, 2, 5, 0, 1, 3, 3,
	3, 3, 1, 1, 1, 1, 1, 1, 6, 4,
	9, 7, 12, 12, 12, 9, 2, 7, 2, 1,
	1, 1, 3, 3, 0, 3, 1, 3, 1, 1,
	3, 2, 5, 0, 6, 2, 0, 1, 2, 3,
	1, 1, 2, 1, 2, 1, 2, 2, 3, 3,
	3, 3, 3, 3, 5, 3, 3, 5, 3, 3,
	5, 3, 3, 5, 3, 6, 6, 6, 6, 1,
	1, 1, 2, 1, 1, 2, 1, 2, 1, 2,
	3, 3, 4, 3, 4, 7, 4, 4, 4, 3,
	5, 7, 3, 3, 4, 3, 3, 3, 3, 2,
	0, 1, 0, 1, 0, 3, 3, 3, 3, 3,
	6, 4, 4, 4, 3, 5, 3, 3, 3, 3,
	3, 3, 3, 1, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 4, 1, 2, 1, 2, 1,
	2, 7, 3, 2, 0, 1, 3, 3, 1, 0,
	1, 2, 2, 1, 6, 5, 1, 2, 1, 3,
	2, 0, 9, 3, 2, 0, 2, 2, 2, 2,
	2, 2, 1, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 4, 6, 5, 7, 3, 4, 6,
	3, 4, 6, 3, 5, 7, 3, 4, 6, 3,
	4, 6, 3, 1, 1, 3, 4, 6, 3, 1,
	3, 3, 5, 3, 1, 3, 2, 2, 2, 2,
	1, 2, 2, 5, 3, 3, 6, 6, 3, 1,
	1, 2, 1, 1, 1, 2, 1, 1, 2, 1,
	2, 1, 2, 1, 1, 1, 2, 1, 1, 2,
	1, 1, 1, 1, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 3, 5, 7, 2, 3, 0, 3,
	5, 2, 3, 0, 2, 3, 2, 3, 2, 6,
	4, 7, 7, 2, 6, 4, 7, 7, 2, 1,
	1, 1, 3, 1, 1, 1, 1, 1, 2, 1,
	2, 2, 3, 2, 4, 3, 2, 2, 1, 2,
	1, 3, 3, 1, 2, 1, 2, 1, 2, 1,
	1, 3, 5, 4, 6, 4, 3, 0, 1, 3,
	2, 4, 2, 4, 1, 6, 3, 1, 1, 5,
	3, 2, 6, 3, 3, 4, 4, 3, 1, 3,
	2, 3, 3, 1, 3, 1, 2, 1, 1, 2,
	2, 3, 1, 1, 1, 1, 1, 3, 2, 2,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 2, 2, 1, 3, 3, 3, 3, 2,
	3, 3, 1, 1, 1, 1, 1, 2, 2, 5,
	7, 3, 3, 3, 4, 4, 6, 5, 5, 5,
	3, 4, 4, 3, 4, 4, 3, 4, 4, 5,
	3, 5, 5, 5, 7, 3, 3, 3, 2, 3,
	4, 3, 5, 3, 6, 5, 6, 3, 5, 6,
	3, 4, 3, 4, 3, 3, 4, 4, 5, 0,
	1, 1, 3, 2, 4, 3, 3, 5, 3, 4,
	3, 5, 3, 3, 4, 4, 5, 3, 3, 1,
	1, 0, 2, 5, 4, 6, 4, 6, 4, 1,
	0, 3, 4, 4, 5, 7, 5, 3, 3, 2,
	0, 4, 2, 3, 4, 2, 3, 3, 3, 4,
	3, 3, 4, 3, 3, 3, 3, 4, 3, 1,
	1, 1, 2, 3, 2, 3, 6, 6, 7, 9,
	7, 9, 3, 4, 10, 10, 3, 5, 5, 5,
	3, 5, 2, 0, 1, 1, 1, 1, 3, 2,
	2, 2, 2, 1, 2, 0, 1, 2, 1, 2,
	2, 1, 2, 1, 2, 2, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 6, 3,
	6, 6, 3, 11, 14, 1, 2, 3, 0, 4,
	0, 4, 5, 4, 3, 3, 1, 3, 10, 13,
	0, 2, 3, 1, 1, 0, 1, 2, 2, 2,
	2, 1, 1, 0, 1, 3, 1, 1, 1, 1,
	3, 3, 3, 0, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 8, 0, 1, 1, 0, 2, 1,
	0, 1, 0, 9, 9, 3, 1, 3, 7, 1,
	3, 11, 3, 2, 0, 3, 1, 2, 2, 3,
	2, 6, 2, 1, 1, 2, 8, 4, 2, 5,
	5, 5, 2, 1, 3, 11, 12, 8, 5, 3,
	1, 5, 9, 7, 11, 3, 3, 0, 2, 4,
	3, 3, 1, 5, 1, 3, 1, 2, 0, 1,
	2, 2, 0, 1, 3, 3, 2, 2, 1, 1,
	1, 4, 0, 6, 0, 3, 0, 2, 2, 2,
	0, 1, 1, 2, 2, 0, 3, 3, 2, 1,
	1, 2, 2, 5, 8, 4, 1, 0, 1, 2,
	2, 1, 2, 3, 3, 2, 2, 3, 2, 2,
	2, 2, 2, 3, 1, 4, 2, 2, 2, 4,
	7, 3, 4, 6, 3, 1, 1, 1, 8, 10,
	11, 7, 10, 5, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 2, 0, 3, 3, 0, 1,
	8, 3, 6, 6, 5, 3, 4, 1, 0, 1,
	3, 17, 20, 16, 19, 4, 2, 0, 1, 0,
	1, 0, 1, 3, 3, 2, 0, 1, 1, 0,
	9, 6, 6, 8, 6, 8, 6, 7, 8, 9,
	6, 8, 6, 7, 8, 9, 6, 8, 6, 8,
	1, 0, 2, 0, 2, 2, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 2,
	2, 1, 2, 1, 2, 1, 2, 1, 3, 2,
	3, 2, 2, 2, 2, 2, 2, 1, 1, 0,
	2, 4, 2, 1, 0, 2, 1, 1, 0, 1,
	3, 1, 0, 1, 1, 1, 1, 2, 3, 2,
	2, 8, 11, 3, 3, 0, 3, 0, 3, 0,
	3, 0, 1, 0, 6, 7, 3, 6, 3, 1,
	3, 1, 1, 4, 2, 1, 3, 1, 3, 4,
	8, 11, 5, 2, 2, 0, 10, 3, 2, 0,
	1, 3, 1, 1, 3, 3, 5, 1, 1, 3,
	3, 1, 2, 4, 4, 2, 3, 5, 5, 1,
	3, 1, 0, 1, 2, 3, 2, 4, 2, 3,
	0, 2, 0, 2, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 8, 8, 8, 2, 4,
	4, 4, 2, 2, 2, 2, 3, 1, 3, 1,
	2, 6, 7, 1, 0, 1, 0, 1, 0, 1,
	1, 0, 1, 5, 1, 0, 1, 0, 3, 3,
	5, 1, 3, 3, 4, 5, 2, 2, 0, 2,
	2, 1, 1, 1, 0, 1, 0, 2, 2, 5,
	4, 2, 3, 1, 1, 1, 1, 1, 1, 1,
	3, 0, 2, 0, 4, 2, 5, 3, 2, 0,
	1, 3, 3, 5, 1, 1, 1, 1, 1, 3,
	2, 4, 4, 0, 4, 4, 3, 4, 1, 5,
	3, 4, 5, 5, 1, 5, 1, 3, 2, 0,
	3, 0, 2, 3, 1, 3, 2, 0, 3, 5,
	6, 4, 6, 4, 3, 2, 1, 0, 5, 1,
	0, 2, 2, 2, 1, 1, 0, 1, 1, 1,
	0, 4, 2, 1, 2, 2, 4, 1, 3, 1,
	2, 3, 2, 2, 2, 1, 0, 2, 5, 7,
	2, 1, 2, 4, 3, 5, 0, 1, 3, 5,
	1, 2, 1, 1, 1, 1, 1, 2, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	4, 4, 6, 6, 1, 1, 1, 1, 1, 3,
	5, 0, 1, 1, 1, 1, 1, 2, 2, 2,
	2, 2, 1, 3, 0, 5, 4, 1, 2, 1,
	4, 1, 1, 2, 1, 1, 1, 1, 1, 0,
	1, 2, 5, 1, 4, 2, 5, 1, 4, 3,
	3, 0, 1, 2, 4, 1, 1, 1, 1, 1,
	1, 3, 3, 3, 3, 3, 3, 3, 1, 0,
	1, 4, 1, 3, 3, 3, 5, 2, 2, 2,
	2, 2, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 2, 2, 3, 5,
	4, 6, 3, 5, 4, 6, 4, 6, 5, 7,
	3, 3, 3, 3, 3, 4, 3, 2, 4, 2,
	3, 3, 4, 3, 4, 3, 4, 5, 6, 6,
	7, 6, 7, 6, 7, 3, 4, 4, 1, 3,
	1, 3, 3, 2, 2, 2, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 5, 6, 6, 7, 1,
	2, 1, 2, 1, 1, 1, 1, 1, 6, 1,
	1, 1, 1, 1, 1, 2, 1, 5, 5, 6,
	3, 1, 1, 1, 2, 2, 2, 4, 3, 5,
	6, 8, 6, 5, 4, 3, 2, 2, 4, 1,
	1, 1, 5, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 6, 6, 8, 8, 6, 4,
	6, 6, 6, 4, 1, 3, 3, 3, 3, 3,
	4, 3, 3, 4, 3, 3, 4, 3, 3, 4,
	3, 3, 3, 4, 3, 4, 3, 4, 3, 4,
	4, 3, 6, 5, 5, 5, 4, 4, 3, 4,
	3, 5, 0, 5, 0, 2, 0, 1, 3, 3,
	2, 2, 0, 6, 1, 0, 3, 0, 3, 3,
	3, 0, 1, 4, 2, 2, 2, 2, 2, 3,
	2, 2, 3, 0, 4, 1, 1, 5, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	1, 2, 2, 3, 1, 2, 3, 2, 3, 2,
	3, 1, 0, 1, 3, 1, 3, 3, 3, 1,
	3, 3, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 4, 3, 1, 2, 3, 0, 3, 3, 2,
	2, 1, 2, 2, 3, 2, 1, 1, 1, 5,
	1, 2, 4, 2, 0, 1, 0, 3, 5, 1,
	0, 1, 2, 1, 0, 1, 3, 3, 2, 1,
	1, 1, 3, 1, 3, 3, 1, 1, 1, 1,
	5, 3, 1, 1, 3, 1, 1, 1, 1, 2,
	2, 1, 1, 2, 2, 1, 1, 1, 3, 5,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 5, 7, 1, 7, 5,
	3, 1, 1, 1, 1, 1, 1, 1, 3, 5,
	1, 1, 1, 1, 1, 1, 1, 0, 3, 0,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1,
}
var sqlChk = [...]int{

	-1000, -1, -2, 529, -90, -87, -57, -55, -93, -94,
	-76, -95, -89, -113, -118, -102, -114, -120, -162, -167,
	-168, -169, -3, -43, -45, -58, -75, -77, -88, -97,
	-96, -98, -103, -110, -106, -92, -49, -115, -119, -128,
	-163, -164, -165, 31, 30, 97, 78, 148, 123, 131,
	186, 341, 377, 388, 369, 358, -123, -124, 405, -44,
	-56, -117, -116, 71, 124, 364, -4, -12, 28, 44,
	-46, -47, -48, 60, -63, -60, -70, -64, -545, 99,
	-498, -78, -81, -109, -549, 136, 155, 204, -99, -100,
	330, -104, -105, 371, -107, -108, 373, 156, -51, -50,
	150, -190, -192, -121, -122, -166, -129, -130, -131, -132,
	-133, -134, -135, -136, -137, -138, -139, -140, -141, -159,
	-142, -143, -144, -145, -150, -146, -147, -148, -149, -151,
	-152, -154, -155, -156, -157, -158, 409, -153, 463, 47,
	423, 80, 140, 381, 21, -5, -6, -7, -8, -9,
	-10, -11, -14, -13, -59, -61, -62, -65, -66, -67,
	-74, -68, -69, -497, -79, -80, -83, -85, -86, -82,
	-84, 370, -193, -191, 526, 477, -16, -21, -22, -17,
	-18, -20, -23, -19, -24, -30, -35, -36, -32, -33,
	-31, -34, -37, -38, -39, -40, -41, -42, -26, -28,
	-29, -27, -15, -25, 496, 504, -196, -194, -195, -203,
	397, 485, 439, 529, 529, 529, 529, 529, 529, 529,
	529, 529, 529, 529, 529, 529, 529, 529, 529, 529,
	529, 529, 529, -268, 2, -250, -255, -256, -257, -249,
	-221, -467, -470, 4, -464, -468, 161, 213, 294, 21,
	22, 23, 24, 25, 26, 28, 29, 40, 41, 43,
	42, 44, 45, 46, 47, 51, 53, 57, 58, 59,
	60, 61, 62, 66, 71, 72, 77, 78, 79, 80,
	81, 82, 83, 89, 86, 87, 88, 91, 93, 94,
	95, 96, 97, 98, 100, 101, 102, 104, 105, 113,
	114, 115, 116, 118, 123, 124, 127, 122, 126, 129,
	130, 131, 134, 135, 136, 138, 139, 141, 142, 143,
	145, 146, 148, 149, 150, 153, 151, 446, 152, 154,
	155, 156, 157, 167, 168, 169, 174, 176, 180, 181,
	184, 185, 187, 191, 193, 194, 195, 196, 197, 203,
	204, 206, 207, 208, 209, 214, 215, 219, 216, 225,
	226, 230, 231, 232, 234, 238, 239, 240, 241, 242,
	243, 245, 247, 246, 249, 252, 253, 256, 257, 258,
	261, 262, 263, 264, 266, 267, 270, 268, 271, 269,
	273, 274, 275, 272, 278, 276, 280, 281, 282, 292,
	290, 286, 287, 283, 288, 284, 285, 289, 296, 297,
	300, 201, 302, 303, 306, 324, 310, 311, 312, 315,
	316, 319, 322, 323, 325, 326, 327, 328, 329, 330,
	331, 332, 334, 335, 339, 341, 342, 344, 346, 347,
	348, 349, 350, 351, 352, 355, 354, 356, 358, 364,
	369, 366, 367, 368, 370, 371, 372, 373, 375, 376,
	377, 379, 380, 381, 382, 384, 386, 387, 390, 391,
	406, 407, 425, 388, 389, 392, 393, 394, 395, 396,
	400, 398, 399, 401, 402, 403, 405, 408, 409, 411,
	412, 413, 414, 415, 416, 419, 421, 422, 423, 424,
	426, 429, 430, 431, 432, 427, 438, 435, 436, 440,
	441, 442, 443, 444, 445, 447, 449, 457, 458, 460,
	463, 464, 465, 455, 467, 468, 471, 472, 473, 476,
	474, 475, 477, 479, 482, 483, 484, 490, 489, 491,
	497, 498, 500, 501, 502, 35, 48, 49, 52, 54,
	56, 67, 68, 69, 73, 119, 120, 147, 158, 159,
	170, 182, 183, 188, 190, 198, 199, 200, 220, 221,
	223, 228, 250, 299, 301, 317, 321, 336, 337, 338,
	340, 353, 383, 417, 428, 433, 450, 451, 452, 453,
	459, 461, 485, 486, 487, 492, 499, -268, 2, -250,
	308, -243, 2, -221, -221, 341, 27, 2, 27, 335,
	399, 441, 443, 2, -524, -303, 2, 27, -224, -221,
	99, 186, 397, -243, 2, -524, -303, 24, 2, -221,
	2, -225, 2, 388, -221, 267, 2, 529, 91, 258,
	72, 383, 402, -126, 458, -125, 450, 392, -127, -454,
	2, 278, -221, 529, 529, 529, 27, -233, -221, 439,
	213, 115, 436, 529, 2, 439, 327, 489, 398, 115,
	350, 213, 465, 392, -533, 267, 379, 189, 478, -522,
	2, -517, 4, -468, -464, -262, -261, 439, 444, 115,
	-257, -249, 519, -256, 529, 529, 529, 2, 231, 232,
	349, 348, 402, 403, 529, 529, 529, 390, 2, 26,
	64, 90, 95, 121, 157, 177, 180, 313, -546, 324,
	347, 401, 438, 447, 460, -532, 424, 66, 392, -531,
	-533, 267, 465, 134, -351, 115, 258, 185, 472, 443,
	441, 470, 127, 219, 475, 474, 529, 529, 26, 64,
	75, 95, 134, 157, 177, 180, -548, 324, 347, 386,
	401, 438, 447, 460, 2, 489, 267, 398, 439, 213,
	115, 465, 392, -533, 390, 391, 345, -90, 2, 526,
	31, 30, 405, -185, 439, 224, 2, -221, 529, 529,
	2, 231, 232, 390, 391, 529, 529, 178, -517, 2,
	529, 529, 2, 231, 232, 390, 391, 224, 2, 66,
	394, 529, 529, 529, 529, 529, 529, 529, 529, 529,
	529, 529, 529, 529, 529, 529, 529, 529, 529, 529,
	529, 529, 529, 529, 529, 529, 529, 529, 529, 529,
	529, 2, -160, 402, 424, 195, 45, 44, 72, 27,
	346, 77, 328, 116, 142, 187, 213, 214, 239, 90,
	91, -353, 43, 232, 231, 391, -538, 390, -404, 440,
	393, 399, 435, 243, 388, 458, 99, 479, 380, 502,
	350, 351, 151, 4, 115, 278, 404, 450, 258, 387,
	331, 82, 529, -555, 2, 439, -557, 2, 458, 458,
	2, -557, 2, -557, 2, -557, 2, -558, 458, 499,
	529, 529, 529, 529, 529, 529, 529, 529, 529, 529,
	529, 529, 529, 529, 529, 529, 529, -191, -193, -192,
	529, 529, 529, 529, 529, 529, 529, -160, 402, 2,
	72, 27, -296, -298, 469, 222, 144, 314, -190, -192,
	2, -497, -452, 2, -378, -471, -380, 517, 518, 510,
	437, 65, 293, 503, -392, 121, 470, 308, -470, -381,
	-394, 147, 383, -318, 8, 9, 5, 6, 7, -230,
	-382, -388, 462, 160, 298, -265, 530, 10, 526, -494,
	-192, -393, 36, 190, 63, -456, -264, -231, -428, 223,
	-263, -249, -491, -492, 4, -464, -465, -457, -431, -439,
	-435, -436, -442, -221, -467, 75, 107, 108, 106, 111,
	110, 260, 259, 112, 109, 404, 478, 64, 35, 198,
	199, 228, 299, 200, 73, -493, 135, -466, 220, 221,
	417, 49, 353, 170, 120, 119, 301, 54, 52, 486,
	-440, 117, 450, 451, 452, 453, 182, 183, 56, 158,
	159, 321, 338, 433, 459, 461, 188, 250, 103, 179,
	218, 202, 227, 229, 233, 251, 254, 279, 291, 295,
	318, 320, 378, 410, -561, 487, 428, 67, 68, -499,
	354, -500, -243, -499, 529, 529, 531, 529, -290, -291,
	-292, 2, 27, 132, 526, 2, -408, 2, -409, -413,
	-192, 244, -412, 526, -410, 524, -250, 309, -495, 384,
	-491, -492, -230, -249, -264, 4, -464, -466, 528, -293,
	526, 115, 439, 76, 213, -346, 526, -221, 27, 308,
	454, 531, -390, 526, 308, 178, 311, -221, 489, 2,
	2, 406, 2, 526, -126, 69, 458, 42, 402, -365,
	2, -366, -218, -219, -220, -418, 230, 344, 352, 505,
	502, -452, -540, 178, 509, 454, -452, -319, 528, 2,
	2, 2, 2, 2, -413, 198, -250, 2, -247, -455,
	4, -464, -468, -465, -469, -467, 27, 30, 31, 32,
	34, 36, 37, 38, 39, 55, 63, 64, 70, 74,
	76, 85, 90, 99, 106, 107, 109, 108, 110, 111,
	112, 121, 125, 128, 132, 133, 137, 140, 144, 160,
	162, 175, 177, 178, 186, 189, 192, 205, 217, 222,
	224, 244, 248, 255, 259, 260, 293, 298, 304, 308,
	309, 313, 314, 333, 343, 357, 374, 397, 404, 420,
	434, 439, 448, 454, 456, 462, 469, 470, 478, 480,
	488, 493, 494, 495, 496, -470, 75, 2, -413, 198,
	2, -252, 198, -413, -255, 2, -234, -221, 2, -246,
	-455, 2, -269, 198, -250, -251, -255, -253, 2, -255,
	-259, 2, -221, -462, 198, 2, -459, 10, -458, 5,
	4, -464, -468, -465, 489, 224, 454, 531, -309, -261,
	-262, -451, 8, -302, -221, 528, -378, 2, -115, -101,
	2, 175, -378, 198, 2, -115, 198, 2, -378, 198,
	2, -115, 198, 2, -535, 2, -462, 2, 2, 460,
	2, 95, 198, -221, 439, 114, 2, 368, -547, 386,
	464, 2, 2, 2, 2, 2, 2, 439, -239, 2,
	-221, 175, -259, 198, 2, 398, -556, 354, -462, 198,
	2, 489, -253, 2, -253, 213, 226, -234, 198, 2,
	443, 441, 443, 441, 178, 2, 224, 2, 224, 2,
	-414, 2, -415, -409, -250, 524, 2, 2, 2, 2,
	2, 198, -221, 439, 114, 2, 242, 2, 2, 2,
	2, 2, 2, 2, -311, 198, 2, -250, 489, -311,
	198, 2, -311, 198, 2, -352, 2, 85, -234, 198,
	2, -258, 198, 2, -253, -260, 198, 2, -259, -463,
	198, 2, -462, -378, 2, -115, 2, -422, 2, -421,
	-458, 485, -90, 526, -90, 526, 402, 526, -462, -250,
	-250, -378, 2, -115, -101, 2, -378, 2, -115, 2,
	-112, -111, -462, 526, 178, -378, 2, -115, -101, 2,
	-378, 2, -115, 2, -185, 175, 2, 115, 439, -160,
	2, 175, 480, 2, 8, 2, 205, -462, 393, 351,
	167, 2, 406, 2, 407, 72, -353, 502, 72, 178,
	2, 178, 2, -336, 2, 496, 2, -521, 2, 308,
	178, 2, 178, 2, 178, 2, 178, 2, 178, 2,
	348, 403, 232, 2, -115, 493, -101, -378, 493, 2,
	-539, 175, 391, -378, 2, 457, 241, 152, 178, -336,
	2, 178, 2, 178, 2, 5, 2, 349, 425, 2,
	230, 344, 425, 2, -250, -550, 2, 439, 489, 398,
	2, 2, 86, 87, 178, 2, 178, 2, 178, 502,
	2, -328, -413, -364, -365, -364, 454, -296, -298, -160,
	406, 2, -197, -326, -199, 175, -355, -356, -200, 255,
	162, 304, -201, -335, 27, 132, -335, -335, 58, 527,
	527, 11, 12, 74, 40, 517, 518, 519, 520, 173,
	521, 522, 515, 516, 514, 507, 508, 512, 236, 237,
	92, 511, 509, 84, 265, 385, 163, 164, 165, 166,
	365, 211, 33, 212, 14, 15, 16, 32, 313, 254,
	503, 202, 410, 510, 17, 18, 19, 227, 229, 295,
	48, 205, -229, -271, -378, -378, -378, -378, -378, -378,
	-378, 320, 526, -324, -373, 524, -192, 526, 526, 526,
	-451, -192, -378, -392, 527, -316, 526, -192, -392, -387,
	526, 383, 524, 526, -395, -378, 5, 5, 5, 526,
	528, -502, 497, 175, 526, 526, 526, 526, 526, 526,
	526, 526, 526, 526, 526, 526, 526, 526, 526, 340,
	-433, 526, -432, 526, -432, -432, 490, -430, 526, 504,
	498, 526, -430, 526, 526, 526, 526, 526, 526, 526,
	526, 526, 526, 526, 526, 526, 490, 531, -499, -293,
	526, -320, -416, -378, 519, -320, -320, 308, -313, -378,
	103, -339, 233, 279, 179, 251, 378, 218, -375, 530,
	-375, -403, 504, -192, -410, -249, -192, -412, 526, -408,
	-403, -91, -451, -75, -88, -96, -115, -128, -164, -165,
	519, -250, 526, 178, 526, 528, -455, 178, -302, -234,
	-250, -263, -264, -269, 131, -313, -517, 465, -302, -224,
	37, -389, -425, -426, -473, 530, -472, -428, -438, -434,
	-437, 336, 337, -457, 52, 486, -440, 223, 4, -464,
	-466, 220, 221, 417, 49, 353, 170, 120, 119, 301,
	54, 450, 451, 452, 453, 182, 183, 56, 487, 428,
	67, 68, -517, 465, -302, 175, -352, -454, -313, 37,
	-365, 2, 121, -459, 42, -559, 531, 253, -273, 264,
	292, 194, 309, 500, 302, -461, 5, 4, -388, -400,
	121, 258, 223, -445, -447, 8, -446, 9, -448, 517,
	518, -453, -452, 105, 528, -455, -208, 366, 405, -207,
	23, 28, 136, 483, 153, -283, 215, 323, 327, 147,
	421, 473, -528, -529, 389, 445, 446, 88, 302, 405,
	366, 147, -332, -334, 37, 113, 282, 322, 59, 208,
	269, 270, 423, 492, 147, 405, 366, 323, -529, 96,
	366, -529, -210, 421, 473, -528, -529, 389, 366, -209,
	-283, 147, 530, 23, 366, 405, 323, -543, -544, 136,
	28, 366, 323, -525, -496, 496, 147, -413, 198, -536,
	-111, 245, 5, 10, -111, -309, 531, 531, -455, 519,
	391, 390, 147, 147, 147, 147, 175, 2, 2, 293,
	2, 2, 2, 180, -531, -548, 2, 2, -250, 198,
	-295, 308, -520, -310, 439, -250, 293, -252, 198, 2,
	-255, 489, -525, 293, -254, 198, -250, 37, 526, 2,
	-352, 2, 213, -496, 293, -414, -266, -250, -409, -266,
	405, -243, 37, -375, -375, 147, 2, 2, 2, -221,
	-211, 531, 62, 372, 147, -311, 198, -211, 147, -211,
	147, -270, 198, -269, -211, 147, -211, 531, 147, -211,
	531, 147, 531, 147, 527, 531, -422, -422, -462, -173,
	496, 178, 99, 526, 526, -185, -419, 531, -418, -463,
	-112, -462, -462, -520, -234, 2, -250, 2, 439, 234,
	-462, -173, 205, -462, -462, -462, -454, 27, 407, 2,
	348, 403, 87, 407, 2, -250, 439, 115, 213, 78,
	-523, 175, -518, 379, -517, -250, 115, -250, 115, -250,
	115, -250, -250, 2, 2, 2, 2, 83, 83, 2,
	44, -539, 175, 2, 457, 2, 457, 2, -221, -221,
	-221, 424, 253, -250, 175, 439, 213, 439, 213, 115,
	439, -211, 531, -225, -197, -326, -454, -327, -326, -198,
	-197, -200, 175, 352, 474, 282, 408, 238, -356, -355,
	27, -378, -360, 169, 281, -378, -358, -380, 517, 518,
	-446, -448, -312, 302, -191, -191, -191, -299, -405, -378,
	343, 213, -427, -425, -425, -248, -455, 450, -378, -378,
	-378, -378, -378, -378, -378, -378, -378, -378, -378, -378,
	-378, -378, -378, -378, -378, -378, -378, -378, -378, -378,
	-378, -378, -378, -378, -378, -378, -378, -378, -378, -378,
	-378, -378, -378, 254, 202, 410, 48, 205, -378, 454,
	-378, -378, -378, -378, 276, 293, 298, 462, 160, 471,
	132, 302, -562, 434, 39, -385, -192, -317, 526, -399,
	34, 420, 27, -392, 526, 2, -373, -378, -374, -314,
	-313, -313, 527, 488, 27, 132, 519, 2, 527, 531,
	37, 527, -378, -314, -391, -387, -313, -398, -397, 493,
	-347, -348, 501, 272, 118, 196, 271, -349, 396, -449,
	8, -455, 519, -503, 168, 189, 526, 527, 2, 527,
	2, 527, -378, 2, 527, -378, 2, 527, -378, 2,
	527, -378, 2, 527, 2, -378, -378, -378, -378, -378,
	-378, -378, -313, 8, -449, -449, 450, 450, -449, -449,
	-449, -441, 336, 256, 337, 184, 275, 273, 274, 183,
	-441, -341, 2, -443, -313, 4, 501, 272, 118, 196,
	271, 396, 5, -341, 2, -342, 2, -378, -313, -343,
	-379, -380, 517, 518, 510, -392, -344, 2, -378, -314,
	-378, 55, 248, 456, -345, -378, 178, -313, -313, 2,
	-313, 2, -500, 37, -313, -305, 531, 178, 37, 4,
	-305, -305, 526, 527, 531, -340, 193, 268, 263, -340,
	-408, -339, 233, -337, 318, -337, -337, -403, -235, 524,
	532, -455, -403, -402, -401, 37, -243, 315, -403, -403,
	528, 527, -402, 525, -515, 526, 529, 529, 529, 529,
	529, -250, 526, -313, -455, 528, 426, 527, 227, 227,
	227, 227, 384, 527, 454, -519, -258, 496, -90, 310,
	527, 531, -304, 36, 524, 528, -449, 2, 2, -444,
	490, 526, 526, -348, 526, 178, -519, -303, -254, -540,
	527, 458, -366, -272, 352, 419, 367, 400, 436, 8,
	9, 8, 9, 531, -455, 531, -541, 90, 454, 76,
	392, -369, 198, 76, -474, -237, 90, -475, -221, 70,
	470, 343, 177, 145, -541, 90, 343, -541, 90, 90,
	405, 424, 454, 58, -413, 40, 40, 27, -115, 249,
	178, 502, 439, 213, 392, 454, -413, -334, -425, 113,
	269, 270, 58, -450, -445, 517, 518, -450, 58, -450,
	-450, -450, 496, -252, -413, 392, 454, 454, 454, 454,
	531, 40, 40, 27, -115, 249, 178, 454, -269, -235,
	484, 41, 484, 454, 41, 392, 454, 531, 41, 41,
	454, 454, -526, -226, 102, 288, 262, 289, 94, 285,
	93, 284, 100, 286, 101, 287, 491, 296, 61, 283,
	-227, -228, 329, 482, -462, 405, 366, 147, 205, -419,
	205, -419, -261, -221, 528, -115, -378, -378, -115, -378,
	-115, 44, 147, 2, -556, 242, 526, -276, 293, 178,
	-302, -420, 224, 531, -310, 147, -333, -332, 293, -254,
	198, 2, 147, -293, 293, 141, 526, 350, 2, -236,
	198, -222, -221, -352, -214, 442, 147, -330, 480, -361,
	-115, 526, 121, 37, -361, -321, -322, -417, -323, -237,
	526, -243, -221, 2, -250, -311, -211, 147, -311, -311,
	-211, 531, 147, -234, -253, -258, -259, -260, -462, -463,
	-90, -421, 527, 527, 527, -172, 312, -171, -221, 5,
	-185, 480, -275, -370, -369, -478, -479, -474, 254, 213,
	470, 226, 161, -294, -238, -237, 114, -179, 496, -111,
	527, -419, 205, -173, -173, -419, -419, -250, 175, -462,
	-173, -173, -173, 2, 2, -336, -250, -234, -269, -250,
	-302, -302, -336, -234, -336, -234, -336, -234, -115, -378,
	2, 402, 175, 175, 528, -336, 350, 115, 439, 327,
	213, -250, -269, -250, -269, -234, -250, -413, -327, -198,
	309, 238, 408, -358, -359, -380, 383, 384, -359, 383,
	384, 8, 9, 8, 9, -202, 412, 297, -311, 531,
	-205, 38, 128, 238, -250, 502, 143, -378, -378, 454,
	-562, 434, -385, 143, -378, 276, 298, 462, 160, 471,
	132, 302, 178, 526, -379, -379, 527, -315, -378, -378,
	525, 534, 527, -298, 531, -296, -378, -313, -313, 527,
	528, -313, -302, 525, 525, 531, 527, -396, -397, 137,
	-378, 454, 454, 454, 454, 526, 527, 528, -508, 319,
	526, 526, -378, 527, 527, 527, 527, 37, 531, 531,
	531, 527, 531, 531, 531, 527, 527, 527, 531, 527,
	502, 502, 527, 527, 527, 527, 531, 527, 531, 527,
	178, 527, 527, -350, 333, 527, 11, 12, 517, 518,
	519, 520, 173, 521, 522, 515, 516, 514, 507, 508,
	509, 84, 265, 385, 14, 15, 16, 227, 205, -379,
	-379, -379, 527, -383, -384, 178, 175, 37, -345, -345,
	-345, 527, 178, -313, 527, 527, 526, -501, 267, 293,
	527, -372, -371, 494, -416, -306, 2, -408, -245, -455,
	-372, -372, -313, -378, 233, 233, -338, 480, 308, -340,
	-408, -402, -451, -377, -376, 176, 38, 128, 290, 201,
	-402, -243, -293, -402, -402, -455, -403, -403, -401, 527,
	-516, -451, 527, -307, -411, -495, -298, 528, -455, -182,
	-496, -161, 5, 298, -161, -161, -161, -302, 454, 24,
	334, -425, 524, 525, 8, -455, 526, -449, -449, -449,
	-302, 178, 178, -331, 496, -452, -365, 468, 81, 352,
	450, -452, -207, 366, -237, -237, -250, -259, 293, -369,
	198, -213, 293, -425, -244, -221, 526, 526, 238, 238,
	480, -237, -244, 238, 198, -237, 198, -244, -244, -527,
	352, 303, -378, -460, -459, 112, 404, 257, 350, 294,
	-208, 366, 405, -115, -115, -115, 526, -540, 480, 131,
	-250, -269, -250, -259, -254, 405, 366, 291, -263, -450,
	-450, -332, 405, 366, -259, -252, -460, 392, -234, -209,
	-115, -115, -115, 526, -235, -210, 366, 5, 198, -237,
	5, -221, -237, -259, -460, -544, 23, -237, 198, -237,
	-259, -460, -226, -462, 298, 476, -525, 392, 454, -413,
	-111, -176, 496, -111, -170, 209, 519, -522, -221, 489,
	-221, -274, -277, -275, -237, -188, -189, 498, 496, 147,
	-267, -250, 524, -173, -462, -250, -259, 147, -293, 293,
	-462, 37, 147, 526, 2, 2, 308, 293, -236, 198,
	-215, 138, -560, 509, -234, -372, -306, -329, -363, 374,
	308, -294, 485, -243, -329, -308, 531, 178, 509, 528,
	-294, 2, -211, -311, -211, -211, -269, -270, -211, -211,
	-211, -90, -90, -173, 531, 526, 509, 509, 526, -462,
	-462, 527, 531, -250, -236, 213, 213, -242, -222, 527,
	531, 528, 526, -181, 312, -180, 139, 240, 225, 413,
	414, 415, 416, 130, -179, -112, 178, -52, 496, 439,
	-173, 530, -336, -336, -336, 402, 402, -221, -246, -234,
	-250, -247, -269, 175, 175, 474, -359, 309, 261, -405,
	-206, 300, -250, 530, -378, -378, 143, 143, -378, -379,
	-379, -378, 143, 178, 526, -378, -389, 32, 32, 527,
	531, -374, -378, 527, 488, -298, -298, 527, 519, -455,
	530, 527, -387, 140, -378, 448, 272, 196, 271, -349,
	271, -349, -349, -449, 5, -455, 519, -509, -240, 526,
	-221, 494, -297, 314, 527, -427, -425, -378, -378, -378,
	-378, -378, -449, -430, -430, -445, -445, -378, -383, -378,
	-427, -425, -379, -379, -379, -379, -379, -379, -379, -379,
	-379, -379, -379, -379, -379, -379, -379, -379, -379, -379,
	-379, 132, 293, 302, -379, -384, -383, -378, -378, -425,
	527, 527, 527, -313, -90, 526, 267, -325, 189, -378,
	-419, 531, -325, -325, 527, -408, -408, 526, -378, 233,
	525, 531, 533, 509, -293, 528, -401, -402, 525, 527,
	531, 527, 531, -362, 37, 527, -455, -184, -183, 129,
	51, -302, 311, 5, 8, 524, 525, 528, -449, 527,
	527, 527, -302, -302, 114, 282, -378, 454, 454, 147,
	293, 482, -480, -475, 145, -378, -300, -406, -378, 526,
	526, 2, -204, 136, 405, -542, 2, 480, 147, -211,
	147, -211, 500, 526, 526, 454, 392, 496, -313, -378,
	-174, 121, -454, -529, 530, -529, 530, 392, 454, 392,
	454, 496, 496, -313, 454, -429, 46, 25, 293, -253,
	454, 454, -211, 147, 465, 405, -462, 298, -259, -254,
	405, 366, -419, -178, 312, -177, 139, 376, 130, 240,
	-419, -176, 178, 224, 2, -254, 2, 527, 527, 531,
	-481, 37, 306, 306, 526, -250, -71, 496, -418, -451,
	-252, 37, 147, -525, -115, -254, -423, -424, 5, -250,
	147, 308, 293, -216, 247, -560, -459, -496, -298, -329,
	-320, 294, 89, 527, -372, -322, -306, -378, 2, 527,
	-211, -211, -171, -172, -462, -462, -462, -173, -185, -185,
	-370, -278, 526, -236, -222, 526, -185, -238, 2, -463,
	531, 526, 509, 509, 509, -419, -115, 312, -250, 519,
	-336, -285, -284, 327, 302, -285, 383, 383, 309, 169,
	243, -205, -235, -378, -378, 143, 32, 32, -378, -378,
	-389, 527, -378, -378, -313, 525, 5, -378, 527, 527,
	8, -378, 527, 528, -510, -221, -378, 527, 58, 527,
	527, 531, 531, 527, 527, 527, 527, 527, 527, 527,
	-384, 178, 132, 302, 526, 527, 527, -90, -386, 192,
	58, -408, -386, -386, -338, -302, -408, -376, -235, 524,
	-455, -451, -411, 526, 528, -183, 509, 525, 2, 524,
	-455, 527, 114, -237, -237, -369, 147, -482, 90, -484,
	74, 161, 99, 293, 298, 470, 343, 70, 121, 357,
	-552, 37, 506, 527, 527, 531, -205, -300, -302, 293,
	431, 121, 293, 121, 114, 465, 77, -237, -244, -302,
	-302, -250, -259, 154, 527, 531, 509, 2, 519, 519,
	-259, -254, -259, -252, 325, 154, 527, -235, 5, 5,
	147, -232, 74, 5, -237, -237, -253, 114, 392, 454,
	-176, 531, 526, 509, 509, -176, -463, -111, -293, -281,
	216, -237, -479, -476, -477, 343, -483, -485, 161, 343,
	-115, 2, -187, -186, -221, 5, 526, -276, 312, 525,
	-333, -115, -254, -293, 527, 531, -354, 480, -235, -250,
	147, -217, 246, -560, -459, -214, -357, -355, 133, 526,
	308, -115, -298, 509, 527, 527, 114, 114, 207, 146,
	-300, 526, 526, -302, 114, 527, -180, -181, -462, -111,
	-462, -179, -53, -54, 213, 90, 332, -247, 439, 213,
	526, 526, -205, -378, -378, -378, 527, -298, -455, 519,
	-504, 327, 527, -405, -378, -378, -379, 178, 526, -389,
	527, -505, 495, -378, -313, -505, -505, 527, -451, 2,
	-462, 524, 2, -369, -244, -248, -241, -221, 161, 198,
	298, 238, 526, -379, -250, 526, 2, 29, -553, 125,
	217, -368, -554, 98, 432, 206, -406, -206, 527, 527,
	298, 298, -378, -425, 526, -211, -211, 527, 527, -378,
	454, -454, 97, -452, 2, -529, -234, -378, 454, 5,
	-211, -248, -211, -211, -232, 465, -259, -254, -177, -178,
	-462, -111, -176, 37, -282, -283, 205, -481, 238, -241,
	238, -551, 496, 527, 531, 509, 509, -274, -188, -72,
	-73, 455, -418, -293, 37, 5, 526, -221, 308, 526,
	-235, -560, -459, -215, -329, 294, -302, 90, -357, -385,
	-173, 526, 526, -279, 79, 91, 122, 197, 181, 214,
	424, 429, 27, -279, 527, -300, -300, 527, 526, -173,
	527, 531, 27, 526, 27, 526, -250, -269, -313, -313,
	527, -298, 58, 531, 527, 527, -379, -389, 527, -506,
	-507, -240, 525, 2, -484, -241, 293, 480, -378, -223,
	526, -378, 37, 217, 126, 203, -281, 526, -367, 480,
	357, -232, -300, 526, 526, 526, 509, 178, 526, -429,
	-211, -253, 527, -534, 355, -115, -188, 325, 526, -280,
	308, 114, 282, -186, -452, -452, 527, 37, -73, 9,
	37, -115, -300, -250, -300, 308, -459, -216, 527, -244,
	-329, -463, -463, -367, 527, 527, -463, -54, -302, -302,
	527, 527, -511, 350, 384, 191, -313, -299, 527, 531,
	37, 147, 193, 527, -486, 266, -221, 527, 126, 203,
	-282, -302, -281, 193, -250, -530, 480, 527, -287, -286,
	-284, -289, -288, -284, -313, -452, 97, 325, -313, -232,
	-537, 179, -536, 5, 10, -280, -250, -301, -407, -237,
	80, 114, -281, -115, -115, 527, -354, 527, -250, -217,
	-372, 527, 527, -368, -367, -189, 496, 527, 527, 527,
	527, -512, -513, 48, 467, 105, -378, -512, -512, -507,
	-509, 161, 496, -487, -490, -489, 308, 411, 179, 326,
	527, 431, 492, -553, 527, 496, -293, -378, -367, 527,
	531, 485, 527, 531, 485, 527, 178, 527, -211, -175,
	496, 44, 526, 527, 531, 342, 127, 136, -282, -551,
	-367, 526, -368, 526, 133, -173, -173, -281, -368, -372,
	-173, -514, 145, -513, 339, 174, 383, 339, 174, -514,
	-514, -241, 53, -489, 308, -490, 308, 474, 127, -372,
	53, -486, -281, -286, 205, -288, 178, 325, 150, -536,
	29, -302, -407, 384, 384, 2, -188, -280, -368, -300,
	-281, -300, 294, 474, -282, -281, 105, 189, 449, 282,
	32, 509, -488, 282, 372, 62, 405, -488, 509, -487,
	526, 526, 390, 527, 2, -280, -281, 527, -282, 527,
	405, -189, -282, 383, 316, -513, -378, 22, 298, 121,
	-378, -553, -313, -313, 312, -212, 62, 372, -282, -367,
	-189, -368, -321, -372, -189, 527, 527, -172, 526, -189,
	-368, -372, -281, -372, -372, -282, 454, -172, -372, -281,
	-282, 526, 527, -282, -189, -313, -189, -372, 527, -372,
	-282,
}
var sqlDef = [...]int{

	-2, -2, 1, 2, 3, 4, 6, 7, 8, 10,
	12, 14, 16, 18, 20, 22, 24, 26, 27, 28,
	29, 30, 479, 480, 482, 483, 484, 486, 487, 489,
	491, 493, 494, 495, 497, 498, 500, 501, 502, 503,
	504, 506, 508, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 568, 570, 0, 1181,
	1183, 1185, 1187, 0, 704, 0, 32, 33, 0, -2,
	281, 283, 285, 0, 311, 313, 314, 316, 318, -2,
	0, 412, 413, 415, 417, -2, -2, 0, 866, 868,
	0, 557, 559, 0, 871, 873, 0, 0, 579, 580,
	0, 1267, -2, 573, 575, 577, 642, 644, 646, 648,
	650, 652, 654, 656, 657, 659, 661, 663, 665, 667,
	669, 671, 673, 674, 676, 678, 680, 682, 684, 686,
	688, 690, 692, 694, 696, 698, -2, 700, -2, -2,
	0, -2, -2, -2, 1199, 36, 38, 40, 42, 44,
	46, 48, 50, 52, 363, 364, 366, 368, 370, 372,
	375, 377, 379, 1325, 419, 421, 423, 425, 427, 429,
	431, 0, -2, 1337, 0, 0, 54, 55, 56, 57,
	58, 59, 60, 61, 62, 83, 84, 85, 86, 87,
	88, 89, 90, 66, 67, 69, 70, 71, 75, 76,
	77, 78, 81, 64, 0, 0, 1298, 1300, 1302, 1304,
	-2, 0, 0, 5, 9, 11, 13, 15, 17, 19,
	21, 23, 25, 481, 485, 488, 490, 492, 496, 499,
	505, 507, 509, 466, 467, 470, 1958, 1975, 1976, 1977,
	1980, 1981, 1982, 1983, 1984, 1985, 2374, 2455, 2456, 2007,
	2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017,
	2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027,
	2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037,
	2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047,
	2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057,
	2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067,
	2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077,
	2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087,
	2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097,
	2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107,
	2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117,
	2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126, 2127,
	2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136, 2137,
	2138, 2139, 2140, 2141, 2142, 2143, 2144, 2145, 2146, 2147,
	2148, 2149, 2150, 2151, 2152, 2153, 2154, 2155, 2156, 2157,
	2158, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167,
	2168, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2177,
	2178, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187,
	2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197,
	2198, 2199, 2200, 2201, 2202, 2203, 2204, 2205, 2206, 2207,
	2208, 2209, 2210, 2211, 2212, 2213, 2214, 2215, 2216, 2217,
	2218, 2219, 2220, 2221, 2222, 2223, 2224, 2225, 2226, 2227,
	2228, 2229, 2230, 2231, 2232, 2233, 2234, 2235, 2236, 2237,
	2238, 2239, 2240, 2241, 2242, 2243, 2244, 2245, 2246, 2247,
	2248, 2249, 2250, 2251, 2252, 2253, 2254, 2255, 2256, 2257,
	2258, 2259, 2260, 2261, 2262, 2263, 2264, 2265, 2266, 2267,
	2268, 2269, 2270, 2271, 2272, 2273, 2274, 2275, 2276, 2277,
	2278, 2279, 2280, 2281, 2282, 2283, 2284, 2285, 2286, 2287,
	2288, 2289, 2290, 2291, 2292, 2293, 2294, 2295, 2296, 2297,
	2298, 2299, 2300, 2301, 2302, 2303, 2304, 2305, 2306, 2307,
	2308, 2309, 2310, 2311, 2312, 2313, 2314, 2315, 2316, 2317,
	2318, 2319, 2320, 2321, 2322, 2323, 2324, 2325, 2326, 2327,
	2328, 2329, 2330, 2331, 2332, 2333, 2334, 2335, 2336, 2337,
	2338, 2339, 2340, 2341, 2342, 2343, 2344, 2345, 2346, 2347,
	2348, 2349, 2350, 2351, 2352, 2353, 2354, 468, 469, 1026,
	0, 533, 531, 1951, 534, 2193, 536, 538, 406, 407,
	408, 409, 410, 411, 0, 550, 543, 549, 551, 553,
	554, 555, 556, 528, 526, 0, 550, 2010, 548, 1179,
	1180, 1164, 1165, 2231, 1206, 0, 193, 569, -2, -2,
	-2, 2340, -2, 601, -2, 608, 2344, 2233, 613, 0,
	615, -2, 618, 1182, 1184, 1186, 702, 703, 1961, 0,
	0, 0, 0, 34, 35, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1075, 1076, 1077, 0,
	201, 203, -2, -2, -2, -2, 0, 0, 2271, 2059,
	1919, 1977, 1922, 1917, 282, 284, 286, 287, 0, 0,
	0, 0, 0, 0, 312, 315, 317, -2, 319, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 342, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, -2,
	0, 0, 0, 0, 0, 0, 0, 0, 921, 913,
	914, 1130, 0, 0, 0, 0, 414, 416, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 418, 0, 0, 0, 0, -2,
	0, 0, 0, 0, 0, 0, 343, 471, 472, 0,
	1326, 1326, 0, 0, 0, 0, 256, 247, 867, 869,
	870, 0, 0, 0, 0, 558, 560, 0, 0, 229,
	872, 874, 875, 0, 0, 0, 0, 0, 258, 0,
	0, 574, 576, 578, 643, 645, 647, 649, 651, 653,
	655, 658, 660, 662, 664, 666, 668, 670, 672, 675,
	677, 679, 681, 683, 685, 687, 689, 691, 693, 695,
	697, 699, 709, 0, 0, 0, 0, 0, -2, -2,
	0, 0, 0, -2, -2, -2, 0, 0, 0, 0,
	0, 0, 0, -2, 0, 791, 0, 0, 0, -2,
	-2, -2, 0, 0, 0, 0, 0, -2, -2, 0,
	0, 0, 0, 712, 714, 715, 716, 0, 771, 789,
	790, 799, 701, 0, 1066, 1327, 1208, 1189, 1203, 1208,
	1191, 1192, 1193, 1194, 1195, 1200, 1202, 1196, 1197, 1198,
	37, 39, 41, 43, 45, 47, 49, 51, 53, 365,
	367, 369, 371, 373, 376, 378, 380, -2, 1296, 1297,
	420, 422, 424, 426, 428, 430, 432, 561, 0, 563,
	0, 713, -2, 0, 1331, 1331, 1331, 0, 0, 1297,
	1295, 0, 566, 567, 622, 623, 1562, 0, 0, 0,
	0, 0, 0, 0, 1816, 1648, 0, 624, -2, 1679,
	1681, 2315, 2340, 1815, 1683, 1684, 1685, 1686, 1687, 0,
	1689, 1690, 1691, 1692, 1693, 1694, 0, 1696, 0, 1701,
	1702, 1703, 0, 2322, 1896, 1971, -2, 0, 0, 2328,
	1967, 0, 1782, 1719, -2, -2, 1994, 1973, 1494, 1495,
	1496, 1497, 1498, -2, -2, 2357, 1723, 1724, 1725, 1726,
	1727, 1728, 1729, 1730, 1731, 1732, 1733, 0, 2303, 2323,
	2324, 2329, 2331, 2325, 2312, 1744, 2071, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	1521, 1530, -2, -2, -2, -2, -2, -2, -2, 2316,
	2317, 2334, 2337, 2343, 2348, 2349, 2321, 2330, 2358, 2359,
	2360, 2361, 2362, 2363, 2364, 2365, 2366, 2367, 2368, 2369,
	2370, 2371, 2372, 2373, 1522, -2, -2, -2, -2, 1314,
	2204, 1317, 1026, 1315, 1299, 1301, 0, 1303, 0, 0,
	0, 1308, 1334, 1332, 0, 1375, 1312, 1313, 1393, 1393,
	1417, 0, 1398, 0, 1417, 1326, 1443, 0, 1404, 2223,
	1720, 1721, 0, 1977, 1972, -2, -2, 2355, 0, 0,
	0, 0, 0, 0, 0, 529, 0, 535, 537, 0,
	0, 0, 0, 0, 0, 0, 0, 1205, 1129, 571,
	572, 0, 596, 0, 600, 2311, -2, 2018, 2242, -2,
	604, 1209, 1213, 1214, 1215, 1216, 0, 0, 0, 0,
	0, 610, 0, 0, 597, 598, 616, 619, 0, 705,
	706, 707, 708, 63, 0, 2323, 1443, 65, 0, 1941,
	2002, 2003, 2004, 2005, 2006, 2356, 2375, 2376, 2377, 2378,
	2379, 2380, 2381, 2382, 2383, 2384, 2385, 2386, 2387, 2388,
	2389, 2390, 2391, 2392, 2393, 2394, 2395, 2396, 2397, 2398,
	2399, 2400, 2401, 2402, 2403, 2404, 2405, 2406, 2407, 2408,
	2409, 2410, 2411, 2412, 2413, 2414, 2415, 2416, 2417, 2418,
	2419, 2420, 2421, 2422, 2423, 2424, 2425, 2426, 2427, 2428,
	2429, 2430, 2431, 2432, 2433, 2434, 2435, 2436, 2437, 2438,
	2439, 2440, 2441, 2442, 2443, 2444, 2445, 2446, 2447, 2448,
	2449, 2450, 2451, 2452, 2453, 2454, 2357, 68, 0, 2323,
	72, 0, 2323, 0, -2, 79, 0, 1947, 82, 0,
	1944, 91, 0, 2323, 0, 1916, -2, 0, 178, 1955,
	0, 892, 1957, -2, 2323, 1074, 259, 260, 1990, 1991,
	1998, 1999, 2000, 2001, 0, 0, 0, 0, 859, 1913,
	1918, 860, 1937, 861, 1923, 0, 288, 289, 290, 291,
	292, 0, 293, 2323, 295, 296, 0, 298, 299, 2323,
	301, 302, 0, 304, 0, 214, 215, 320, 321, 0,
	323, 0, 2323, 0, 0, 0, 329, -2, 344, 0,
	341, 332, 333, 335, 336, 337, 338, 0, 384, 382,
	1952, 0, 887, 2323, 889, 0, 0, 1109, -2, 2323,
	1071, 0, 1115, 1111, 0, -2, 0, 1324, 2323, 1223,
	917, 918, 919, 920, 0, 403, 0, 1236, 0, 1238,
	0, 1257, 1449, 1393, 1393, 0, 345, 346, 347, 348,
	349, 2323, 0, 0, 0, 354, 0, 356, 357, 358,
	359, 360, 361, 362, 167, 2323, 437, 464, 0, 167,
	2323, 440, 167, 2323, 443, 0, 446, 1128, 167, 2323,
	449, 167, 2323, 452, 454, 167, 2323, 458, 459, 461,
	2323, 463, 261, 1175, 1176, 1177, 1178, 0, -2, 522,
	1960, -2, 474, 0, 475, 0, -2, 0, 273, 0,
	0, 876, 877, 878, 879, 880, 883, 884, 885, 886,
	1430, 232, 230, 0, 0, 1166, 1167, 1168, 1169, 1170,
	1171, 1172, 1173, 1174, 0, 0, 581, 0, 0, 710,
	711, 0, 0, 721, 722, 723, 0, 273, 2234, 2201,
	2091, 730, 0, 733, 736, -2, 0, 0, 0, 0,
	740, 0, 745, 746, 747, 0, 749, 865, 751, 0,
	0, 753, 0, 757, 0, 760, 0, 762, 0, 764,
	-2, -2, -2, 775, -2, 0, 778, 780, 0, 782,
	-2, 0, 791, 787, 788, 0, 0, 0, 0, 807,
	808, 0, 813, 0, 816, 817, 818, 0, 820, 821,
	0, 823, 824, 825, 826, 0, 828, 829, -2, -2,
	833, 835, 0, 842, 0, 846, 0, 850, 0, 717,
	718, 167, 1447, 1188, -2, 1190, 0, -2, 0, 562,
	0, 565, 1354, 1282, 1279, 0, 1351, 1352, 1283, 0,
	0, 0, 1290, 0, 1329, 1330, 0, 0, 0, 1269,
	1270, 0, 0, 0, 0, 1821, 1822, 1823, 1824, 1825,
	1826, 1829, 1830, 1827, 1828, 1831, 1832, 0, 0, 0,
	0, 0, 1833, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1834, 1835, 1836, 0, 0, 1838,
	0, 1840, 0, 0, 0, 0, 0, 0, 1627, 1629,
	1904, 0, 0, 1837, 1567, 1568, 1569, 1570, 1571, 1606,
	1607, 0, 0, 1680, 1901, 1900, 1682, 0, 1852, 0,
	1695, -2, 0, 1816, 1847, 0, 0, 1704, 1705, 1706,
	0, 0, 1852, 0, 0, 1895, 1716, 1717, 1559, 0,
	0, 1784, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1508,
	1507, 0, 1509, 0, 1510, 1511, 1518, 1531, 0, 0,
	0, 0, 1535, 0, 0, 0, 0, 0, 0, 0,
	1876, -2, 0, 0, 0, 0, 1523, 0, 1316, 0,
	0, 1379, 1905, 1909, 1910, 1379, 1379, 0, 0, 1853,
	1440, 1440, 0, 0, 1436, 1436, 1436, 1434, 1417, 0,
	1417, 1427, 0, 1417, 1417, 0, -2, 1398, 0, 0,
	1427, 0, 1411, 510, 512, 514, 516, 517, 518, 520,
	1444, 1445, 0, 0, 0, 0, 1978, 0, 0, 0,
	0, 0, 1963, 0, 0, 0, 0, 2280, 540, 552,
	1326, 0, 1855, 1466, 1470, 0, 1472, 1473, 1474, 1475,
	1476, 0, 0, 1467, -2, 1519, 1521, 1542, 1995, 1996,
	1997, 1502, 1503, 1504, 1505, 1506, 1514, 1501, 1501, 1501,
	1512, 1541, 1533, 1541, 1537, 1487, 1488, 1489, 1524, 1525,
	1526, 1527, 0, 2280, 545, 0, 0, 0, 0, 0,
	-2, 606, 611, 612, 0, 0, 1211, 0, 1217, 633,
	634, 635, 1219, 1220, 0, 609, 636, 637, 638, 639,
	640, 641, 0, 1925, 1926, 1927, 1928, 1931, 1932, 0,
	0, 607, 626, 614, 0, 620, 92, 1161, 0, 131,
	0, 1161, 1161, 0, 0, 153, 0, 0, 0, 0,
	0, 0, 0, 116, 127, 104, 105, 0, 0, 0,
	0, 0, 73, 1048, 0, 1051, 0, 0, 0, 0,
	0, 0, 0, 1064, 0, 0, 0, 0, 115, 0,
	0, 110, 94, 0, 0, 0, 117, 129, 0, 158,
	160, 0, 0, 0, 0, 0, 0, 177, 185, 0,
	0, 0, 0, 1072, 0, 1323, 0, 0, 2323, 0,
	1430, 2129, -2, -2, 1430, 858, 0, 0, 1978, 1921,
	0, 0, 0, 0, 0, 0, 0, 322, 324, 0,
	326, 327, 328, 0, 1108, 0, 334, 374, 997, 2323,
	0, 0, 401, 396, 0, 398, 0, 1047, 2323, 1045,
	1956, 0, 1069, 0, 1026, 2323, 1954, 0, 0, 1116,
	1987, 1125, 1129, 1225, 0, 405, 0, 1239, 1241, 0,
	0, 1450, 0, 1452, 1453, 0, 351, 352, 353, 0,
	433, 0, 165, 166, 0, 167, 2323, 438, 0, 441,
	0, 167, 2323, 1911, 447, 0, 450, 0, 0, 456,
	0, 0, 0, 0, 1326, 0, 0, 0, 0, 249,
	0, 0, 0, 0, 0, 0, 236, 0, 1429, 0,
	1430, 230, 273, 273, 1430, 583, 1430, 585, 0, 0,
	724, 725, 0, 273, 273, 273, 731, 732, 734, 735,
	-2, -2, 843, 737, 738, 810, 0, 0, 0, 809,
	750, 0, 852, 2219, 863, 810, 2059, 810, 2059, 810,
	2059, 761, 763, 766, 802, 774, 779, 0, 0, 784,
	792, -2, 0, 794, 0, 796, 0, 798, 810, 811,
	814, 819, 822, 827, 0, 0, 0, 0, 0, 0,
	0, 1065, 0, 1201, 1354, 1282, 564, 1273, 1353, 1274,
	1281, 1284, 0, 0, 1286, 0, 1288, 0, 1349, 1350,
	1357, 1358, 0, 1368, 1369, 1361, 0, -2, 0, 0,
	1364, 1365, 1292, 0, 1309, 1310, 1311, 1338, 1341, 1139,
	0, 2455, 1563, 1461, 1564, 1565, 1940, 0, 1572, 1573,
	1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, -2, -2,
	-2, -2, -2, -2, -2, -2, 1590, 1591, 1592, 1593,
	1594, 1595, 1596, 1597, 1598, 1599, 1600, -2, -2, -2,
	1604, 1605, -2, 1839, 1841, 0, 1904, 0, -2, 0,
	-2, -2, -2, -2, 1624, 0, 1626, 1631, 1633, 1635,
	0, 0, 0, 0, 1903, 1645, 1887, 1888, 0, 0,
	1818, 1819, 1820, 1630, 0, 1649, 1902, 1899, 0, 0,
	1851, 1337, 1708, 0, 0, 0, 0, 1715, 1700, 1849,
	0, 1848, 0, 0, 0, 1859, 0, 1894, 1890, 0,
	1938, 1558, 1545, 1546, 1547, 1548, 1549, 1550, 1560, 0,
	1935, 1964, 1970, 1792, 0, 0, 0, 1745, 1746, 1747,
	1748, 1749, 0, 1751, 1752, 0, 1754, 1755, 0, 1757,
	1758, 0, 1760, 1761, 1762, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486,
	0, 0, 1764, 0, 1862, -2, -2, -2, -2, -2,
	-2, -2, -2, 0, 1766, 0, 1768, 1853, 1873, 0,
	0, 1650, 0, 0, 0, 1816, 0, 1771, 1853, 1881,
	0, 0, 0, 0, 0, 1853, 0, 1886, 0, 1778,
	0, 1780, 1318, 0, 0, 1456, 0, 0, 0, 1908,
	1456, 1456, 0, 1374, 0, 0, 1437, 1438, 1439, 0,
	0, 1440, 0, 1431, 1435, 1432, 1433, 1427, 1390, 0,
	0, 1942, 1427, 1396, 1426, 0, 1026, 1416, 1427, 1427,
	0, -2, 1400, 1417, 0, 0, 511, 513, 515, 519,
	521, 0, 0, 1337, -2, 0, -2, 1025, 0, 0,
	0, 0, 530, 532, 0, 0, 453, 0, 524, 0,
	527, 0, 1457, 1460, 0, 0, 1471, 1477, 1478, 0,
	-2, 0, 0, 1543, 0, 0, 0, 0, 196, 0,
	599, 0, 1210, 1218, 0, 630, 0, 632, 0, 1929,
	1933, 1930, 1934, 0, 621, 0, 0, 0, 0, 1160,
	0, 135, 2323, 0, 169, 0, 0, 990, 1948, 0,
	0, 0, 0, 2078, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 101, 106, 0,
	0, 0, 0, 0, 0, 0, 0, 1049, 1050, 1052,
	1059, 1061, 0, 1055, 1936, 0, 0, 1056, 0, 1058,
	1060, 1062, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 103, 107, 0, 0, 0, 0, 1915,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1104, 1102, 1084, 1085, 1086, 1087, 1088, 1089,
	1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099,
	1100, 1101, 0, 0, -2, 0, 0, 0, 0, 206,
	0, 264, 1914, 1924, 0, 881, 882, 294, 297, 300,
	303, 202, 0, 330, 0, 0, 923, 898, 0, 0,
	383, 273, 0, 0, 397, 0, 1043, 1046, 0, 1026,
	2323, 1083, 0, 0, 0, 0, 0, 0, 1114, 0,
	2323, 1943, 1986, 1987, 1227, 1233, 0, 1456, 0, 1255,
	1242, 0, 0, 0, 1255, 1259, 1260, 1262, 1263, 0,
	0, 1451, 0, 355, 465, 167, 435, 0, 167, 167,
	444, 0, 0, 167, 455, 167, 460, 167, 262, 462,
	473, 523, 1326, 1326, 273, 271, 2176, 269, 266, 268,
	0, 0, 0, 924, 926, 927, 928, 929, 0, 1987,
	0, 2118, 1987, 0, 1245, 1247, 0, 226, 0, 233,
	231, 236, 0, 0, 395, 582, 587, 719, 0, 273,
	727, 728, 729, 768, 804, 739, 741, 742, 743, 0,
	864, 862, 752, 810, 755, 810, 758, 810, 777, 781,
	786, 793, 0, 0, 0, 806, 0, 0, 0, 0,
	0, 0, 0, 847, 848, 849, 851, 1448, 1277, 1278,
	1280, 0, 1289, 0, 0, 1363, -2, -2, 1362, 1366,
	1367, -2, -2, -2, -2, 1285, 0, 1294, 1291, 0,
	1348, 1137, 1138, 0, 0, 0, 0, -2, -2, 0,
	0, 0, 1646, 0, -2, 1625, 1628, 1632, 1634, 1636,
	0, 0, 0, 0, 0, 0, 1842, 0, 1844, 1647,
	1897, 1900, 1814, 0, 0, 1336, 1337, 1337, 0, 1714,
	0, 1850, 0, 1857, 1858, 0, 1707, 0, 1891, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1718, 0,
	0, 0, 0, 1750, 1753, 1756, 1759, 0, 0, 0,
	0, 1739, 0, 0, 0, 1743, 1513, 1499, 0, 1541,
	1539, 1540, 1534, 1541, 1538, 1491, 0, 1490, 0, 1763,
	0, 1765, 1767, 0, 0, 1769, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1653,
	1654, 1655, 1770, 1879, 1880, 0, 0, 0, 0, 0,
	0, 1776, 0, 1885, 1777, 1779, 1326, 0, 1319, 0,
	1376, 1371, 1455, 0, 1906, 1430, 1378, 1380, 1907, 1945,
	1371, 1371, 0, 1854, 0, 0, 1421, 0, 0, 0,
	1423, 1394, 0, 0, 1388, 0, 1384, 1385, 1386, 1387,
	1395, 1026, 1425, 1397, 1401, 1964, 0, 1427, 0, 1412,
	0, 1414, 1446, 0, 1406, 1409, 0, 0, 1979, 274,
	0, 305, 309, 310, 306, 307, 308, 539, 0, 0,
	0, 1856, 0, 1462, 0, 1468, 0, 0, 0, 0,
	544, 0, 0, 192, 0, 595, -2, 628, 629, 631,
	0, 627, 132, 1161, 0, 0, 1142, 1144, 0, 137,
	2323, 146, 0, 964, 0, 1946, 0, 0, 0, 0,
	0, 1163, 0, 0, 2323, 167, 2323, 167, 149, 152,
	0, 157, 154, 155, 182, 183, 184, 0, 0, 955,
	93, 1161, 0, 96, 100, 108, 0, 0, 0, 114,
	0, 0, 0, 1146, 1152, 0, 0, 1053, 1054, 1057,
	1063, 74, 0, 0, 1150, 1156, 80, 0, 1141, 159,
	98, 102, 109, 0, 1158, 95, 0, 181, 0, 0,
	0, 173, 0, 174, 175, 186, 0, 167, 2323, 0,
	890, 891, 1103, 1067, 1068, 0, 1073, 0, 0, 0,
	1430, 198, 0, 1430, 206, 0, 1920, 0, 0, 0,
	0, 0, 0, 922, 1008, 0, 895, 0, 0, 0,
	389, 385, 0, 394, 400, 399, 888, 0, 0, 0,
	-2, 0, 0, 1118, 1112, 1113, 0, 0, 0, 2323,
	1229, 1233, 0, 1232, 1324, 1337, 404, 1234, 1255, 0,
	0, 0, 1244, 1240, 1237, 1456, 0, 0, 0, 0,
	0, 350, 434, 167, 439, 442, 1912, 167, 448, 451,
	457, 476, 477, 248, 0, 0, 0, 0, 0, 273,
	0, 0, 0, 933, 0, 1987, 1987, 0, 1950, 0,
	0, 0, 0, 234, 0, 237, 0, 0, 0, 242,
	243, 244, 245, 246, 227, 1430, 0, 584, 0, 0,
	726, 0, 754, 756, 759, 795, 797, 810, 836, 837,
	950, 0, 950, 0, 0, 1287, 0, 1360, 1293, 1342,
	1343, 0, 1139, 0, 1566, 1609, 0, 0, -2, 0,
	0, 1613, 0, 0, 0, -2, 0, 0, 0, 1843,
	1845, 0, 1899, 1709, 0, 0, 0, 1713, 1697, 1698,
	0, 1817, 1860, 1889, 1893, 0, 1551, 1552, 1553, 1554,
	1555, 1556, 1557, 0, 1939, 1965, 1969, 1790, 1791, 1795,
	1953, 0, 0, 0, 1722, 0, 0, 0, 0, 0,
	0, 0, 0, 1532, 1536, 0, 0, 1861, 1872, 1874,
	1651, 1652, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663,
	1664, 1665, -2, -2, -2, 1669, 1670, 1671, -2, -2,
	-2, 0, 0, 0, 1875, 1877, 1878, 1882, 1883, 0,
	1773, 1774, 1775, 1884, 0, 1326, 1320, 1373, 0, 1454,
	1377, 0, 1373, 1373, 1333, 1419, 0, 0, 1442, 0,
	1391, 0, 1392, 0, 1424, 0, 1399, 1402, 1403, 1413,
	0, 1405, 0, 1408, 0, 1709, -2, 275, 277, 0,
	280, 542, 541, 525, 0, 0, 1464, 0, 0, 1516,
	1520, 1544, 547, 546, 194, 0, 1428, 0, 0, 0,
	0, 168, 962, 989, 0, 0, 0, 1132, 1139, 0,
	0, 995, 139, 0, 0, 0, 147, 0, 0, 144,
	0, 151, 156, 0, 0, 0, 0, 0, 0, 111,
	112, 113, 0, 118, 0, 119, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 170, 0, 0, 0, 1136,
	0, 0, 188, 0, 0, 0, 1106, 1107, 1147, 1153,
	0, 0, 206, 204, 0, 207, 0, 210, 211, 0,
	206, 200, 0, 0, 325, 1026, 331, 944, 996, 0,
	998, 0, 896, 0, 0, 997, 381, 0, 388, 0,
	1047, 0, 0, 1070, 1081, 1026, 0, 1117, 1119, 1127,
	0, 0, 0, 1231, 1233, 0, 1224, 1225, 1356, 1235,
	1253, -2, 0, 0, 1337, 1261, 1258, 1264, 1265, 0,
	436, 445, 270, 0, 265, 267, 0, 251, 0, 0,
	925, 930, 0, 0, 0, 0, 0, 1246, 1248, 0,
	0, 0, 0, 0, 0, 236, 257, 0, 720, 744,
	805, 838, 949, 0, 0, 840, 0, 0, 1359, 1346,
	1347, 1344, 1139, 1611, 1615, 0, 0, 0, 1617, -2,
	0, 1639, -2, -2, 1846, 1898, 1688, 1337, 1710, 1712,
	1699, 1892, 1561, 0, 1797, 1794, 0, 1781, 0, 1734,
	1735, 0, 0, 1738, 1740, 1741, 1742, 1500, 1493, 1492,
	1871, 0, 0, 0, 0, 1772, 1321, 0, 1786, 0,
	0, 1381, 1786, 1786, 1420, 0, 1422, 1389, 1382, 0,
	1965, 1415, 1407, 0, 0, 278, 0, 1458, 1463, 0,
	1469, 1515, 195, 133, 134, 136, 0, 963, 0, 966,
	0, 0, 0, 0, 973, 974, 0, 0, 0, 0,
	0, 983, 0, 1012, 1022, 0, 1348, 0, 0, 0,
	141, 162, 0, 0, 1162, 0, 0, 167, 167, 0,
	0, 1143, 1145, 0, 0, 0, 0, 121, 0, 0,
	1148, 1154, 1151, 1157, 0, 0, 0, 1159, 179, 180,
	0, 167, 0, 172, 167, 167, 1136, 0, 0, 0,
	197, 0, 0, 0, 0, 199, 263, 206, 0, 952,
	0, 1008, 1000, 1001, 1002, 0, 1007, 1009, 0, 0,
	910, 897, 0, 906, 0, 0, 923, 898, 0, 386,
	1044, 1078, 1026, 0, 1110, 0, 0, 0, 0, 0,
	0, 1221, 1233, 0, 1226, 1227, 1255, 1355, 0, 0,
	0, 1243, 1356, 0, 272, 273, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 273, 238, 0, 239, 240,
	241, 228, 586, 588, 0, 0, 594, 948, 0, 0,
	0, 0, 1345, 1619, -2, -2, 1640, 0, 1966, 1968,
	1337, 0, 1783, 1339, 0, 0, -2, 0, 0, 0,
	1322, 1305, 0, 1372, 1370, 1306, 1307, 1441, 0, 1410,
	279, 0, 1465, 138, 0, 967, 968, 1949, 970, 0,
	972, 975, 0, 978, 1989, 0, 982, 0, 991, 1013,
	0, 944, 0, 1018, 1019, 1020, 1133, 1134, 1024, 0,
	140, 142, 161, 1136, 0, 143, 150, 0, 0, 97,
	0, 0, 2050, 124, 122, 120, 1140, 99, 0, 181,
	187, 1135, 176, 189, 167, 0, 1149, 1155, 208, 0,
	209, 212, 0, 0, 898, 951, 0, 999, 0, 1010,
	1011, 900, 0, 899, 0, 0, 0, 0, 0, 387,
	390, 0, 393, 0, 0, 1120, 0, 1126, 0, 0,
	0, 0, 1228, 1229, 402, 1249, 0, 0, 1255, 1266,
	250, 0, 0, 931, 934, 935, 936, 937, 938, 939,
	940, 941, 942, 932, 1024, 0, 0, 988, 0, 255,
	235, 0, 590, 0, 592, 0, 839, 841, 0, 0,
	1711, 1801, 0, 0, 1736, 1737, -2, 0, 1677, 1785,
	1787, 0, 1383, 1459, 965, 969, 0, 0, 0, 1030,
	0, 0, 984, 0, 1016, 1017, 952, 0, 944, 0,
	0, 164, 0, 0, 0, 0, 0, 0, 0, 171,
	190, 1136, 205, 222, 0, 1079, 900, 0, 0, 908,
	0, 911, 0, 907, 904, 905, 944, 0, 391, 392,
	0, 1082, 0, 1127, 0, 0, 1230, 1231, 1456, 1252,
	1256, 0, 0, 1022, 1024, 898, 0, 589, 0, 0,
	844, 845, 0, 0, 0, 0, 1796, 1340, 1678, 0,
	0, 0, 0, 977, 1035, 0, 0, 0, 1014, 1015,
	1012, 0, 993, 0, 1026, 145, 0, 1024, 0, 956,
	0, 0, 959, 0, 0, 125, 2050, 123, 0, 167,
	225, 0, 219, 217, 218, 893, 0, 0, 1004, 1006,
	0, 912, 952, 910, 1080, 1024, 0, 1022, 0, 1222,
	0, 273, 273, 944, 1022, 1456, 0, 273, 591, 593,
	1793, 1813, 1802, -2, 2282, 2056, 0, 1813, 1813, 1788,
	1789, 0, 0, 979, 1031, 1032, 0, 1027, 1028, 1029,
	1988, 980, 981, 1456, 1021, 0, 1030, 163, 944, 953,
	0, 0, 954, 0, 0, 128, 0, 130, 191, 213,
	0, 0, 0, 1003, 0, 0, 0, 0, 898, 900,
	1022, 0, 944, 0, 0, 252, 253, 952, 944, 987,
	254, 1798, 0, 0, 1804, 1805, 1806, 1807, 1808, 1799,
	1800, 971, 0, 1033, 0, 1034, 0, 0, 0, 992,
	0, 1035, 148, 957, 0, 960, 0, 126, 0, 220,
	221, 0, 1005, 901, 0, 903, 900, 909, 944, 0,
	952, 0, 1250, 0, 898, 952, 0, 1810, 1811, 0,
	0, 0, 1036, 0, 1039, 1040, 0, 1037, 0, 1012,
	0, 0, 0, 947, 902, 894, 952, 1024, 898, 1022,
	0, 1456, 898, 1809, 1812, 1803, 976, 1038, 1041, 1042,
	1023, 994, 0, 0, 0, 943, 945, 946, 898, 1022,
	1456, 944, 1456, 985, 1456, 952, 0, 223, 0, 1456,
	944, 1123, 952, 1251, 986, 958, 0, 0, 1121, 952,
	898, 0, 224, 898, 1456, 0, 1456, 1124, 952, 1122,
	961,
}
var sqlTok1 = [...]int{

	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 515, 3, 521, 516, 3,
	526, 527, 519, 517, 531, 518, 528, 520, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 534, 3,
	507, 509, 508, 512, 530, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 524, 3, 525, 522, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 532, 514, 533, 510,
}
var sqlTok2 = [...]int{

	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}
var sqlTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 475, 57818, 476, 57819, 477,
	57820, 478, 57821, 479, 57822, 480, 57823, 481, 57824, 482,
	57825, 483, 57826, 484, 57827, 485, 57828, 486, 57829, 487,
	57830, 488, 57831, 489, 57832, 490, 57833, 491, 57834, 492,
	57835, 493, 57836, 494, 57837, 495, 57838, 496, 57839, 497,
	57840, 498, 57841, 499, 57842, 500, 57843, 501, 57844, 502,
	57845, 503, 57846, 504, 57847, 505, 57848, 506, 57849, 511,
	57850, 513, 57851, 523, 57852, 529, 0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := sqlPact[state]
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && sqlChk[sqlAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || sqlExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := sqlExca[i]
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = sqlTok1[0]
		goto out
	}
	if char < len(sqlTok1) {
		token = sqlTok1[char]
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = sqlTok2[char-sqlPrivate]
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = sqlTok3[i+0]
		if token == char {
			token = sqlTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = sqlTok2[1] /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = sqlPact[sqlstate]
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = sqlAct[sqln]
	if sqlChk[sqln] == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = sqlDef[sqlstate]
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && sqlExca[xi+1] == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = sqlExca[xi+0]
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = sqlExca[xi+1]
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = sqlPact[sqlS[sqlp].yys] + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = sqlAct[sqln] /* simulate a shift of "error" */
					if sqlChk[sqlstate] == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= sqlR2[sqln]
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = sqlR1[sqln]
	sqlg := sqlPgo[sqln]
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = sqlAct[sqlg]
	} else {
		sqlstate = sqlAct[sqlj]
		if sqlChk[sqlstate] != -sqln {
			sqlstate = sqlAct[sqlg]
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1217
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1222
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1224
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 9:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1227
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 11:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1228
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 13:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1229
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 15:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1230
		{
			return helpWith(sqllex, "GRANT")
		}
	case 17:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1231
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 19:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1232
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 21:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1233
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 23:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1234
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 25:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1235
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 31:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1242
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 34:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1251
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 35:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1252
		{
			return helpWith(sqllex, "ALTER")
		}
	case 37:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1255
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 39:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1256
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 41:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1257
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 43:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1258
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 45:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1259
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 47:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1260
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 49:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1261
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 51:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1262
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 53:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1263
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 63:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1319
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 65:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1345
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 68:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1358
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 72:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1375
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 73:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1379
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 74:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1383
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 79:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1400
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 80:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1404
		{
			sqlVAL.union.val = &tree.AlterDatabaseOwner{Name: tree.Name(sqlDollar[3].str), Owner: sqlDollar[6].str}
		}
	case 82:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1425
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 91:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1457
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 92:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1461
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 93:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1465
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 94:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1471
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 95:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1475
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 96:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1481
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 97:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1490
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 98:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1501
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 99:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1505
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 100:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1511
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 101:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1519
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 102:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1529
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 103:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1533
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 106:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1543
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[5].union.slct(),
			}
		}
	case 107:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1554
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[5].union.slct()}
		}
	case 108:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1561
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:  tree.TableIndexName{Table: name},
				Rows:          sqlDollar[6].union.slct(),
				RelocateLease: true,
			}
		}
	case 109:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1573
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateLease: true}
		}
	case 110:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1580
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 111:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1588
		{

			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: sqlDollar[4].union.expr()}
		}
	case 112:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1593
		{
			sqlVAL.union.val = &tree.SetZoneConfig{Options: sqlDollar[4].union.kvOptions()}
		}
	case 113:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1597
		{

			sqlVAL.union.val = &tree.SetZoneConfig{SetDefault: true}
		}
	case 114:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1602
		{
			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: tree.DNull}
		}
	case 115:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1608
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 116:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1616
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 117:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1627
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 118:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1637
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 119:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1647
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 120:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1656
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 121:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1667
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 122:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1673
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 123:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1681
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 124:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1685
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 125:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1689
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 126:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1693
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 127:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1699
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 128:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1704
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 129:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1715
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 130:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1719
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 131:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1725
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 132:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1729
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 133:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1736
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 134:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1741
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 135:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1746
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 136:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1751
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 137:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1756
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 138:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1761
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 139:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1766
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 140:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1771
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 141:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1776
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 142:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1781
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 143:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1786
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 144:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1795
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 145:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1807
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 146:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1817
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 147:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1824
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 148:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:1828
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:    sqlDollar[7].union.idxElems(),
				Sharded:    sqlDollar[9].union.shardedIndexDef(),
				Interleave: sqlDollar[10].union.interleave(),
			}
		}
	case 149:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1836
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 150:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1843
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 151:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1852
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 152:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1861
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 153:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1866
		{
			sqlVAL.union.val = &tree.AlterTablePartitionBy{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 154:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1873
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 155:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1881
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Owner: sqlDollar[3].str,
			}
		}
	case 156:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1888
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 157:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1889
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 158:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1893
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 159:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1897
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 160:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1903
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 161:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1911
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 162:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1915
		{
			sqlVAL.union.val = nil
		}
	case 163:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1921
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 164:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1925
		{
			sqlVAL.union.val = nil
		}
	case 165:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1932
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 166:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1936
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 167:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1940
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 168:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1946
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 169:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1950
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 170:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1975
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      sqlDollar[6].str,
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 171:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:1986
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      sqlDollar[9].str,
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 172:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1997
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: sqlDollar[6].str,
					NewVal: sqlDollar[8].str,
				},
			}
		}
	case 173:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2007
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: sqlDollar[6].str,
				},
			}
		}
	case 174:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2016
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: sqlDollar[6].str,
				},
			}
		}
	case 175:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2025
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeOwner{
					Owner: sqlDollar[6].str,
				},
			}
		}
	case 176:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2034
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 177:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2038
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 178:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2041
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 179:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2045
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: sqlDollar[2].str,
			}
		}
	case 180:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2052
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: sqlDollar[2].str,
			}
		}
	case 181:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2059
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 192:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2085
		{
			sqlVAL.union.val = &tree.RefreshMaterializedView{
				Name:              sqlDollar[5].union.unresolvedObjectName(),
				Concurrently:      sqlDollar[4].union.bool(),
				RefreshDataOption: sqlDollar[6].union.refreshDataOption(),
			}
		}
	case 193:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2092
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 194:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2096
		{
			sqlVAL.union.val = tree.RefreshDataWithData
		}
	case 195:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2100
		{
			sqlVAL.union.val = tree.RefreshDataClear
		}
	case 196:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2104
		{
			sqlVAL.union.val = tree.RefreshDataDefault
		}
	case 197:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2133
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: false,
				Subdir:         sqlDollar[4].union.expr(),
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 198:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2145
		{
			sqlVAL.union.val = &tree.Backup{
				Targets: sqlDollar[2].union.targetListPtr(),
				To:      sqlDollar[4].union.stringOrPlaceholderOptList(),
				Nested:  true,
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *sqlDollar[6].union.backupOptions(),
			}
		}
	case 199:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2155
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: true,
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 200:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2166
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:         sqlDollar[2].union.targetListPtr(),
				To:              sqlDollar[4].union.stringOrPlaceholderOptList(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}
		}
	case 201:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2175
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 202:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2179
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 203:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2183
		{
			t := sqlDollar[1].union.targetList()
			sqlVAL.union.val = &t
		}
	case 204:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2191
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 205:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2195
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 206:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2199
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 207:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2206
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 208:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2210
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 209:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2219
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 210:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2223
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: true}
		}
	case 211:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2227
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: true}
		}
	case 212:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2231
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 213:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2316
		{
			sqlVAL.union.val = &tree.ScheduledBackup{
				ScheduleLabel:   sqlDollar[3].union.expr(),
				Recurrence:      sqlDollar[10].union.expr(),
				FullBackup:      sqlDollar[11].union.fullBackupClause(),
				To:              sqlDollar[8].union.stringOrPlaceholderOptList(),
				Targets:         sqlDollar[6].union.targetListPtr(),
				BackupOptions:   *(sqlDollar[9].union.backupOptions()),
				ScheduleOptions: sqlDollar[12].union.kvOptions(),
			}
		}
	case 214:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2327
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 216:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2332
		{
			sqlVAL.union.val = nil
		}
	case 217:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2340
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 218:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2344
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 219:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2354
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 220:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2362
		{
			sqlVAL.union.val = &tree.FullBackupClause{Recurrence: sqlDollar[3].union.expr()}
		}
	case 221:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2366
		{
			sqlVAL.union.val = &tree.FullBackupClause{AlwaysFull: true}
		}
	case 222:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2370
		{
			sqlVAL.union.val = (*tree.FullBackupClause)(nil)
		}
	case 223:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2376
		{
			sqlVAL.union.val = sqlDollar[5].union.kvOptions()
		}
	case 224:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2380
		{
			sqlVAL.union.val = sqlDollar[6].union.kvOptions()
		}
	case 225:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2384
		{
			sqlVAL.union.val = nil
		}
	case 226:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2415
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				From:               sqlDollar[3].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[4].union.asOfClause(),
				Options:            *(sqlDollar[5].union.restoreOptions()),
			}
		}
	case 227:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2424
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[4].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *(sqlDollar[6].union.restoreOptions()),
			}
		}
	case 228:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2433
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				Subdir:  sqlDollar[4].union.expr(),
				From:    sqlDollar[6].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[7].union.asOfClause(),
				Options: *(sqlDollar[8].union.restoreOptions()),
			}
		}
	case 229:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2442
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 230:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2446
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList{sqlDollar[1].union.expr()}
		}
	case 231:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2450
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList(sqlDollar[2].union.exprs())
		}
	case 232:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2456
		{
			sqlVAL.union.val = []tree.StringOrPlaceholderOptList{sqlDollar[1].union.stringOrPlaceholderOptList()}
		}
	case 233:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2460
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listOfStringOrPlaceholderOptList(), sqlDollar[3].union.stringOrPlaceholderOptList())
		}
	case 234:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2467
		{
			sqlVAL.union.val = sqlDollar[2].union.restoreOptions()
		}
	case 235:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2471
		{
			sqlVAL.union.val = sqlDollar[4].union.restoreOptions()
		}
	case 236:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2475
		{
			sqlVAL.union.val = &tree.RestoreOptions{}
		}
	case 237:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2482
		{
			sqlVAL.union.val = sqlDollar[1].union.restoreOptions()
		}
	case 238:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2486
		{
			if err := sqlDollar[1].union.restoreOptions().CombineWith(sqlDollar[3].union.restoreOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 239:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2495
		{
			sqlVAL.union.val = &tree.RestoreOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 240:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2499
		{
			sqlVAL.union.val = &tree.RestoreOptions{DecryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 241:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2503
		{
			sqlVAL.union.val = &tree.RestoreOptions{IntoDB: sqlDollar[3].union.expr()}
		}
	case 242:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2507
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingFKs: true}
		}
	case 243:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2511
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequences: true}
		}
	case 244:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2515
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequenceOwners: true}
		}
	case 245:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2519
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingViews: true}
		}
	case 246:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2523
		{
			sqlVAL.union.val = &tree.RestoreOptions{Detached: true}
		}
	case 247:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2529
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 248:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2566
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 249:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2571
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 250:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2575
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 251:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2581
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 252:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2586
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateFile: sqlDollar[6].union.expr(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 253:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2591
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateDefs: sqlDollar[5].union.tblDefs(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 254:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2596
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 255:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2601
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 256:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2605
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 257:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2621
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 258:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2624
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 259:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2628
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 260:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2632
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 261:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2640
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 262:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2644
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 263:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2650
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 264:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2654
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 265:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2660
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 266:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2664
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 267:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2668
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 268:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2672
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 269:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2678
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 270:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2682
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 271:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2688
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 272:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2692
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 273:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2696
		{
			sqlVAL.union.val = nil
		}
	case 274:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2708
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: *sqlDollar[6].union.copyOptions(),
			}
		}
	case 275:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2720
		{
			sqlVAL.union.val = sqlDollar[2].union.copyOptions()
		}
	case 276:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2724
		{
			sqlVAL.union.val = &tree.CopyOptions{}
		}
	case 277:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2730
		{
			sqlVAL.union.val = sqlDollar[1].union.copyOptions()
		}
	case 278:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2734
		{
			if err := sqlDollar[1].union.copyOptions().CombineWith(sqlDollar[2].union.copyOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 279:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2742
		{
			sqlVAL.union.val = &tree.CopyOptions{Destination: sqlDollar[3].union.expr()}
		}
	case 280:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2746
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatBinary}
		}
	case 282:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2754
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 284:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2755
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 286:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2756
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 287:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2757
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 288:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2767
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 289:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2775
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 290:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2777
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 291:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2781
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 292:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2784
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 293:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2794
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 294:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2803
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 295:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2811
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 296:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2813
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 297:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2817
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 298:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2820
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 299:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2830
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 300:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2839
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 301:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2847
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 302:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2849
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 303:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2853
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 304:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2856
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 305:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2860
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 306:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2864
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 307:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2868
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 308:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2881
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 309:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2887
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 310:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2892
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 312:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2904
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 315:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2906
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 317:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2907
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 318:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2908
		{
		}
	case 319:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2909
		{
			return helpWith(sqllex, "CREATE")
		}
	case 320:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2912
		{
			return unimplemented(sqllex, "create aggregate")
		}
	case 321:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2913
		{
			return unimplemented(sqllex, "create cast")
		}
	case 322:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2914
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 323:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2915
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 324:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2916
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 325:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2917
		{
			return unimplemented(sqllex, "create extension "+sqlDollar[6].str)
		}
	case 326:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2918
		{
			return unimplemented(sqllex, "create extension "+sqlDollar[3].str)
		}
	case 327:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2919
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 328:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2920
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 329:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2921
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 330:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2922
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 331:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2923
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 332:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2924
		{
			return unimplemented(sqllex, "create operator")
		}
	case 333:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2925
		{
			return unimplemented(sqllex, "create publication")
		}
	case 334:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2926
		{
			return unimplemented(sqllex, "create rule")
		}
	case 335:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2927
		{
			return unimplemented(sqllex, "create server")
		}
	case 336:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2928
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 337:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2929
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 338:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2930
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create")
		}
	case 339:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2933
		{
		}
	case 340:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2934
		{
		}
	case 341:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2937
		{
		}
	case 342:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2938
		{
		}
	case 343:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2941
		{
		}
	case 344:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2942
		{
		}
	case 345:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2945
		{
			return unimplemented(sqllex, "drop aggregate")
		}
	case 346:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2946
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 347:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2947
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 348:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2948
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 349:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2949
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 350:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2950
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[5].str)
		}
	case 351:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2951
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[3].str)
		}
	case 352:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2952
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 353:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2953
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 354:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2954
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 355:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2955
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 356:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2956
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 357:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2957
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 358:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2958
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 359:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2959
		{
			return unimplemented(sqllex, "drop server")
		}
	case 360:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2960
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 361:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2961
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 362:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2962
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 365:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2966
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 367:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2967
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 369:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2968
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 371:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2969
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 373:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2970
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 374:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2972
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 376:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2973
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 378:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2974
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 380:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2975
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 381:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2985
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 382:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2993
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 383:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2997
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 384:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3001
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 385:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3007
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 386:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3011
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 387:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3020
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 388:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3027
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 389:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3033
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 390:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3039
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 391:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3043
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 392:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3054
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 393:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3066
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 394:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3074
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 395:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3082
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 396:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3092
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[1].union.tablePatterns()}
		}
	case 397:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3096
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 398:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3102
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()}
		}
	case 399:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3106
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedObjectName().ToUnresolvedName())
		}
	case 400:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3113
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 401:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3117
		{

			sqlVAL.union.val = nil
		}
	case 402:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3131
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 403:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3141
		{
			return helpWith(sqllex, "DELETE")
		}
	case 404:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3144
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 405:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3145
		{
		}
	case 406:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3153
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 407:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3156
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 408:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3157
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 409:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3158
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 410:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3159
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 411:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3160
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 414:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3169
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 416:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3170
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 417:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3171
		{
		}
	case 418:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3172
		{
			return helpWith(sqllex, "DROP")
		}
	case 420:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3175
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 422:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3176
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 424:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3177
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 426:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3178
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 428:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3179
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 430:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3180
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 432:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3181
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 433:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3189
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 434:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3193
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 435:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3197
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[4].union.tableNames(),
				IfExists:       false,
				DropBehavior:   sqlDollar[5].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 436:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3206
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[6].union.tableNames(),
				IfExists:       true,
				DropBehavior:   sqlDollar[7].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 437:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3214
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 438:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3222
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 439:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3226
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 440:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3229
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 441:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3237
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 442:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3241
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 443:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3244
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 444:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3252
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 445:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3261
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 446:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3269
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 447:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3277
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 448:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3285
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 449:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3292
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 450:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3299
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 451:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3307
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 452:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3314
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 453:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3318
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[1].union.unresolvedObjectNames()}
		}
	case 454:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3324
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 455:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3328
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 456:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3337
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[3].union.strs(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 457:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3345
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[5].union.strs(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 458:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3352
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 459:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3356
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 460:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3360
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 461:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3370
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.exprs(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 462:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3374
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.exprs(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 463:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3377
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 464:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3381
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 465:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3386
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 466:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3399
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 467:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3404
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 468:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3406
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 469:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3411
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 470:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3415
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 471:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3437
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 472:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3444
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 473:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3446
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 474:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3454
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"DISTSQL", "ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 475:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3462
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"DISTSQL", "ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 476:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3470
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 477:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3478
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 478:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3489
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 481:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3493
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 485:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3496
		{
			return helpWith(sqllex, "DELETE")
		}
	case 488:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3498
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 490:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3499
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 492:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3500
		{
			return helpWith(sqllex, "INSERT")
		}
	case 496:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3503
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 499:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3505
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 501:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3508
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 505:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3513
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 507:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3514
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 509:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3515
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 511:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3520
		{
			return helpWith(sqllex, "DELETE")
		}
	case 513:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3521
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 515:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3522
		{
			return helpWith(sqllex, "INSERT")
		}
	case 516:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3524
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 519:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3528
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 521:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3529
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 522:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3533
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 523:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3537
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 524:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3547
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 525:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3555
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 526:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3563
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 527:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3567
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 528:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3571
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 529:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3581
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 530:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3588
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 531:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3596
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 532:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3600
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 533:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3604
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 534:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3614
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 535:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3618
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 536:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3622
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 537:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3626
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 538:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3629
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 539:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3649
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 540:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3653
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 541:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3657
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: true}
		}
	case 542:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3661
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 543:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3664
		{
			return helpWith(sqllex, "GRANT")
		}
	case 544:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3684
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 545:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3688
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 546:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3692
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.nameList(), AdminOption: true}
		}
	case 547:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3696
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 548:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3699
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 549:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3704
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 550:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3708
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 551:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3718
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 552:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3722
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 558:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3736
		{
			return helpWith(sqllex, "RESET")
		}
	case 560:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3737
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 561:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3745
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 562:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3749
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 563:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3752
		{
			return helpWith(sqllex, "RESET")
		}
	case 564:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3760
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 565:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3763
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 566:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3774
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 567:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3777
		{
			return helpWith(sqllex, "USE")
		}
	case 569:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3781
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 570:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3782
		{
		}
	case 571:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3783
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 572:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3784
		{
			return unimplementedWithIssue(sqllex, 32562)
		}
	case 574:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3788
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 576:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3789
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 578:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3790
		{
			return helpWith(sqllex, "USE")
		}
	case 581:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3806
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 582:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3821
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 583:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3824
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 584:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3842
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 585:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3850
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 586:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3854
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 587:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3858
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 588:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3864
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 589:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3868
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 590:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3874
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 591:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3878
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 592:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3882
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 593:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3886
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 594:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3890
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 595:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3901
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 596:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3904
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 599:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3914
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 600:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3930
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 601:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3934
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 602:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3939
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 603:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3956
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 604:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3959
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 605:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3961
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 606:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3964
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 607:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3968
		{

			varName := sqlDollar[1].union.strs()
			if len(varName) == 1 && varName[0] == "tracing" {
				sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[3].union.exprs()}
			} else {
				sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
			}
		}
	case 609:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3987
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 610:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3994
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 611:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3999
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 612:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4004
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 614:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4009
		{
			return unimplemented(sqllex, "set from current")
		}
	case 615:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4010
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 616:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4018
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 617:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4023
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 618:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4030
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 619:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4034
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 620:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4040
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 621:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4044
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 623:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4051
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 626:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4072
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 627:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4076
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 628:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4082
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 629:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4086
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 630:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4090
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 631:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4094
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 632:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4098
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 633:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4104
		{
			sqlVAL.union.val = tree.Low
		}
	case 634:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4108
		{
			sqlVAL.union.val = tree.Normal
		}
	case 635:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4112
		{
			sqlVAL.union.val = tree.High
		}
	case 636:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4123
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 637:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4127
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 638:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4131
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 640:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4136
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 641:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4140
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 643:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4154
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 645:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4155
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 647:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4156
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 649:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4157
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 651:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4158
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 653:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4159
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 655:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4160
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 658:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4162
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 660:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4163
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 662:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4164
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 664:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4165
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 666:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4166
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 668:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4167
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 670:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4168
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 672:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4169
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 675:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4171
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 677:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4172
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 679:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4173
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 681:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4174
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 683:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4175
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 685:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4176
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 687:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4177
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 689:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4178
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 691:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4179
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 693:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4180
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 695:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4181
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 697:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4182
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 699:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4184
		{
			return helpWith(sqllex, "SHOW")
		}
	case 701:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4185
		{
			return helpWith(sqllex, "SHOW LAST QUERY STATISTICS")
		}
	case 702:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4190
		{
		}
	case 703:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4191
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 704:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4194
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 705:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4198
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 706:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4203
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 707:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4208
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 708:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4213
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 709:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4223
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 710:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4224
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 711:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4225
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 715:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4236
		{
			sqlVAL.str = "client_encoding"
		}
	case 717:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4239
		{
			sqlVAL.str = "timezone"
		}
	case 718:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4240
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 719:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4254
		{
			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 720:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4258
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[7].union.unresolvedObjectName(), UsingJSON: true}
		}
	case 721:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4262
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 722:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4273
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 723:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4281
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 724:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4289
		{
			sqlVAL.union.val = &tree.ShowBackup{
				InCollection: sqlDollar[4].union.expr(),
			}
		}
	case 725:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4295
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 726:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4303
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:      tree.BackupDefaultDetails,
				Path:         sqlDollar[3].union.expr(),
				InCollection: sqlDollar[5].union.expr(),
				Options:      sqlDollar[6].union.kvOptions(),
			}
		}
	case 727:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4312
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:              tree.BackupDefaultDetails,
				ShouldIncludeSchemas: true,
				Path:                 sqlDollar[4].union.expr(),
				Options:              sqlDollar[5].union.kvOptions(),
			}
		}
	case 728:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4321
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 729:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4330
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 730:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4338
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 731:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4348
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 732:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4352
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 733:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4355
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 734:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4357
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 735:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4360
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 736:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4362
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 737:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4366
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 738:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4369
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 739:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4377
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 740:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4380
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 741:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4388
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 742:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4392
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 743:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4396
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 744:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4400
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 745:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4403
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 746:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4411
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 747:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4414
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 748:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4421
		{
			sqlVAL.union.val = &tree.ShowEnums{}
		}
	case 749:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4424
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 750:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4437
		{
			lst := sqlDollar[3].union.targetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.nameList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.nameList()}
			}
		}
	case 751:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4445
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 752:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4453
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 753:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4456
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 754:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4458
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 755:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4462
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 756:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4466
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 757:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4469
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 758:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4471
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 759:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4475
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 760:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4478
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 761:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4486
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 762:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4489
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 763:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4491
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 764:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4494
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 765:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4502
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 766:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4505
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 767:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4507
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 768:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4510
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 769:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4514
		{
			sqlVAL.union.val = true
		}
	case 770:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4516
		{
			sqlVAL.union.val = true
		}
	case 771:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4518
		{
			sqlVAL.union.val = false
		}
	case 772:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4529
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 773:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4533
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 774:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4536
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 775:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4537
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 776:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4539
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 777:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4543
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 778:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4547
		{
			sqlVAL.union.val = &tree.ShowJobs{Schedules: sqlDollar[3].union.slct()}
		}
	case 779:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4550
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 780:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4552
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 781:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4560
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 782:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4568
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 783:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4578
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ExecutorType:   sqlDollar[3].union.executorType(),
			}
		}
	case 784:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4584
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 785:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4586
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: sqlDollar[2].union.scheduleState(),
				ExecutorType:   sqlDollar[4].union.executorType(),
			}
		}
	case 786:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4592
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 787:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4594
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ScheduleID:     sqlDollar[3].union.expr(),
			}
		}
	case 788:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4600
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 789:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4604
		{
			sqlVAL.union.val = tree.ActiveSchedules
		}
	case 790:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4608
		{
			sqlVAL.union.val = tree.PausedSchedules
		}
	case 791:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4614
		{
			sqlVAL.union.val = tree.InvalidExecutor
		}
	case 792:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4618
		{
			sqlVAL.union.val = tree.ScheduledBackupExecutor
		}
	case 793:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4629
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 794:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4632
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 795:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4634
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 796:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4637
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 797:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4639
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 798:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4643
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 799:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4646
		{
			sqlVAL.union.val = true
		}
	case 800:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4647
		{
			sqlVAL.union.val = false
		}
	case 801:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4655
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 802:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4658
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 803:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4660
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 804:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4663
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 805:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4671
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 806:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4681
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 807:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4691
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 808:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4694
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 809:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4697
		{
			sqlVAL.union.val = true
		}
	case 810:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4698
		{
			sqlVAL.union.val = false
		}
	case 811:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4705
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 812:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4709
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 813:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4712
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 814:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4719
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 815:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4723
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 816:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4726
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 817:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4733
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 818:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4737
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 819:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4744
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{}
		}
	case 820:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4754
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 821:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4757
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 822:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4765
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 823:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4770
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 824:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4775
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 825:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4779
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 826:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4787
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 827:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4791
		{

			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 828:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4795
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 832:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4808
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 833:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4811
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 834:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4819
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 835:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4822
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 836:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4826
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 837:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4830
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 838:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4834
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 839:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4842
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 840:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4850
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 841:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4857
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 842:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4864
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 843:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4868
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 844:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4879
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 845:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4887
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 846:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4893
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 847:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4902
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 848:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4907
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 849:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4911
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 850:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4914
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 851:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4918
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 852:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4925
		{
			tmp := sqlDollar[2].union.targetList()
			sqlVAL.union.val = &tmp
		}
	case 853:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4930
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 854:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5050
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 855:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5054
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 856:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5058
		{

			sqlVAL.union.val = tree.TargetList{
				Tables:   tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 857:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5097
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}
		}
	case 858:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5101
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.TargetList{Tables: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}
		}
	case 859:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5106
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 860:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5110
		{
			tenID := uint64(sqlDollar[2].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TargetList{Tenant: roachpb.MakeTenantID(tenID)}
		}
	case 861:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5118
		{
			sqlVAL.union.val = tree.TargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 862:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5127
		{
			sqlVAL.union.val = tree.TargetList{ForRoles: true, Roles: sqlDollar[2].union.nameList()}
		}
	case 864:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5134
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 865:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5138
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 867:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5151
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 869:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5152
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 870:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5153
		{
			return helpWith(sqllex, "PAUSE")
		}
	case 872:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5163
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 874:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5164
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 875:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5165
		{
			return helpWith(sqllex, "RESUME")
		}
	case 876:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5175
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 877:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5183
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 878:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5185
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 879:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5189
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 880:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5192
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 881:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5197
		{
			sqlVAL.union.val = sqlDollar[3].union.slct()
		}
	case 882:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5201
		{
			sqlVAL.union.val = &tree.Select{
				Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
			}
		}
	case 883:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5216
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseSchedule,
			}
		}
	case 884:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5224
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 885:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5226
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.PauseSchedule,
			}
		}
	case 886:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5232
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 887:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5240
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].str,
			}
		}
	case 888:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5246
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].str,
				IfNotExists: true,
			}
		}
	case 889:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5252
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 890:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5263
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].str,
				Cmd: &tree.AlterSchemaRename{
					NewName: sqlDollar[6].str,
				},
			}
		}
	case 891:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5272
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].str,
				Cmd: &tree.AlterSchemaOwner{
					Owner: sqlDollar[6].str,
				},
			}
		}
	case 892:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5280
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 893:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5319
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    sqlDollar[8].union.interleave(),
				Defs:          sqlDollar[6].union.tblDefs(),
				AsSource:      nil,
				PartitionBy:   sqlDollar[9].union.partitionBy(),
				Persistence:   sqlDollar[2].union.persistence(),
				StorageParams: sqlDollar[10].union.storageParams(),
				OnCommit:      sqlDollar[11].union.createTableOnCommitSetting(),
			}
		}
	case 894:
		sqlDollar = sqlS[sqlpt-14 : sqlpt+1]
//line sql-gen.y:5334
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    sqlDollar[11].union.interleave(),
				Defs:          sqlDollar[9].union.tblDefs(),
				AsSource:      nil,
				PartitionBy:   sqlDollar[12].union.partitionBy(),
				Persistence:   sqlDollar[2].union.persistence(),
				StorageParams: sqlDollar[13].union.storageParams(),
				OnCommit:      sqlDollar[14].union.createTableOnCommitSetting(),
			}
		}
	case 896:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5352
		{

			sqlVAL.union.val = nil
		}
	case 897:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5358
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 898:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5364
		{
			sqlVAL.union.val = nil
		}
	case 899:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5368
		{

			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 900:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5375
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 901:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5379
		{

			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 902:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5384
		{

			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 903:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5389
		{

			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 904:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5396
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 905:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5400
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 906:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5406
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 907:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5410
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 908:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5416
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    nil,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 909:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:5430
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    nil,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 910:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5445
		{
		}
	case 911:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5446
		{
		}
	case 912:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5447
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 913:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5465
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 914:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5466
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 915:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5467
		{
			sqlVAL.union.val = tree.PersistencePermanent
		}
	case 917:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5471
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 918:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5472
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 919:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5473
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 920:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5474
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 921:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5475
		{
			sqlVAL.union.val = tree.PersistenceUnlogged
		}
	case 923:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5480
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 924:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5486
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 925:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5490
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 926:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5496
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 929:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5502
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 930:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5506
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 931:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5515
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 932:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5519
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 933:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5525
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 934:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5530
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 935:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5531
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 936:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5532
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 937:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5533
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 938:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5534
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 939:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5535
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 940:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5536
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 941:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5537
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 942:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5538
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 943:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5543
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.InterleaveDef{
				Parent:       name,
				Fields:       sqlDollar[6].union.nameList(),
				DropBehavior: sqlDollar[8].union.dropBehavior(),
			}
		}
	case 944:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5552
		{
			sqlVAL.union.val = (*tree.InterleaveDef)(nil)
		}
	case 945:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5559
		{

			sqlVAL.union.val = tree.DropCascade
		}
	case 946:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5564
		{

			sqlVAL.union.val = tree.DropRestrict
		}
	case 947:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5569
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 948:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5575
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 950:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5582
		{
			sqlVAL.str = ""
		}
	case 952:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5589
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 953:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5595
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[5].union.nameList(),
				List:   sqlDollar[8].union.listPartitions(),
			}
		}
	case 954:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5602
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[5].union.nameList(),
				Range:  sqlDollar[8].union.rangePartitions(),
			}
		}
	case 955:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5609
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 956:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5615
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 957:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5619
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 958:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5625
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 959:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5635
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 960:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5639
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 961:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5645
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 962:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5659
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 963:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5670
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 964:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5674
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 965:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5680
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 966:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5684
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 967:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5688
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 968:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5692
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 969:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5696
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 970:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5700
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 971:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5704
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 972:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5722
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 973:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5726
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 974:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5730
		{
			sqlVAL.union.val = tree.UniqueConstraint{}
		}
	case 975:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5734
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 976:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5738
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:      true,
				ShardBuckets: sqlDollar[8].union.expr(),
			}
		}
	case 977:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5745
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 978:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5749
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 979:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5753
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 980:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5763
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr()}
		}
	case 981:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5767
		{
			return unimplemented(sqllex, "virtual computed columns")
		}
	case 982:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5771
		{
			sqllex.Error("use AS ( <expr> ) STORED")
			return 1
		}
	case 983:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5778
		{
		}
	case 984:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5779
		{
		}
	case 985:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5784
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:          tree.Name(sqlDollar[2].str),
				Columns:       sqlDollar[4].union.idxElems(),
				Sharded:       sqlDollar[6].union.shardedIndexDef(),
				Storing:       sqlDollar[7].union.nameList(),
				Interleave:    sqlDollar[8].union.interleave(),
				PartitionBy:   sqlDollar[9].union.partitionBy(),
				StorageParams: sqlDollar[10].union.storageParams(),
				Predicate:     sqlDollar[11].union.expr(),
			}
		}
	case 986:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:5797
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:          tree.Name(sqlDollar[3].str),
					Columns:       sqlDollar[5].union.idxElems(),
					Sharded:       sqlDollar[7].union.shardedIndexDef(),
					Storing:       sqlDollar[8].union.nameList(),
					Interleave:    sqlDollar[9].union.interleave(),
					PartitionBy:   sqlDollar[10].union.partitionBy(),
					StorageParams: sqlDollar[11].union.storageParams(),
					Predicate:     sqlDollar[12].union.expr(),
				},
			}
		}
	case 987:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5812
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:          tree.Name(sqlDollar[3].str),
				Columns:       sqlDollar[5].union.idxElems(),
				Inverted:      true,
				StorageParams: sqlDollar[7].union.storageParams(),
				Predicate:     sqlDollar[8].union.expr(),
			}
		}
	case 988:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5824
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 989:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5836
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 990:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5841
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 991:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5847
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 992:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5853
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:     sqlDollar[3].union.idxElems(),
					Storing:     sqlDollar[5].union.nameList(),
					Interleave:  sqlDollar[6].union.interleave(),
					PartitionBy: sqlDollar[7].union.partitionBy(),
					Predicate:   sqlDollar[9].union.expr(),
				},
			}
		}
	case 993:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5865
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:    sqlDollar[4].union.idxElems(),
					Sharded:    sqlDollar[6].union.shardedIndexDef(),
					Interleave: sqlDollar[7].union.interleave(),
				},
				PrimaryKey: true,
			}
		}
	case 994:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5877
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 995:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5888
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 996:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5895
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 997:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5899
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 998:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5905
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 999:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5915
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 1000:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5926
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5930
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 1002:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5937
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1003:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5943
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns: sqlDollar[4].union.idxElems(),
				},
				PrimaryKey: true,
			}
		}
	case 1004:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5954
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5958
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5964
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 1007:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5970
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5974
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1009:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5980
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1010:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5984
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5990
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5995
		{
		}
	case 1013:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5996
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5997
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 1015:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5998
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5999
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 1017:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6000
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6018
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6022
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6028
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[6].union.expr(),
			}
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6034
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6040
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6044
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6064
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6068
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6072
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6076
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6085
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 1032:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6089
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6093
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 1034:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6097
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6101
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 1036:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6107
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6113
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1038:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6121
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6125
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6129
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 1041:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6133
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 1042:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6137
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6156
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:        name,
				Persistence: sqlDollar[2].union.persistence(),
				Options:     sqlDollar[5].union.seqOpts(),
			}
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6165
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
			}
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6173
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6177
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6180
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6181
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6184
		{
			return unimplementedWithIssueDetail(sqllex, 25110, sqlDollar[2].union.typeReference().SQLString())
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6185
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6187
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6188
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6189
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6199
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6202
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6204
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6206
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6208
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6209
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6211
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6212
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6214
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6216
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6224
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6227
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6231
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 1068:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6235
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6245
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6249
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.expr(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6252
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6260
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6264
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.expr(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6267
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 1075:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6273
		{
			sqlVAL.union.val = true
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6277
		{

			sqlVAL.union.val = true
		}
	case 1077:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6282
		{
			sqlVAL.union.val = false
		}
	case 1078:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6292
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6306
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Persistence: sqlDollar[4].union.persistence(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 1080:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6318
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6330
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[5].union.nameList(),
				AsSource:     sqlDollar[7].union.slct(),
				Materialized: true,
			}
		}
	case 1082:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6340
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[8].union.nameList(),
				AsSource:     sqlDollar[10].union.slct(),
				Materialized: true,
				IfNotExists:  true,
			}
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6350
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6354
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6358
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6362
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6366
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6370
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6374
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6378
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6382
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6386
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6390
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6394
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6398
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6402
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6406
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6410
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6414
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6423
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6427
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6433
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6437
		{
			sqlVAL.union.val = nil
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6443
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: sqlDollar[3].union.expr()}
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6447
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: tree.DNull}
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6452
		{
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6453
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6462
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.strs(),
			}
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6469
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6471
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6473
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6475
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6477
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6479
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6483
		{
			sqlVAL.union.val = sqlDollar[1].union.strs()
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6487
		{
			sqlVAL.union.val = []string(nil)
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6493
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6497
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-17 : sqlpt+1]
//line sql-gen.y:6517
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:          tree.Name(sqlDollar[5].str),
				Table:         table,
				Unique:        sqlDollar[2].union.bool(),
				Columns:       sqlDollar[10].union.idxElems(),
				Sharded:       sqlDollar[12].union.shardedIndexDef(),
				Storing:       sqlDollar[13].union.nameList(),
				Interleave:    sqlDollar[14].union.interleave(),
				PartitionBy:   sqlDollar[15].union.partitionBy(),
				StorageParams: sqlDollar[16].union.storageParams(),
				Predicate:     sqlDollar[17].union.expr(),
				Inverted:      sqlDollar[8].union.bool(),
				Concurrently:  sqlDollar[4].union.bool(),
			}
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-20 : sqlpt+1]
//line sql-gen.y:6535
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:          tree.Name(sqlDollar[8].str),
				Table:         table,
				Unique:        sqlDollar[2].union.bool(),
				IfNotExists:   true,
				Columns:       sqlDollar[13].union.idxElems(),
				Sharded:       sqlDollar[15].union.shardedIndexDef(),
				Storing:       sqlDollar[16].union.nameList(),
				Interleave:    sqlDollar[17].union.interleave(),
				PartitionBy:   sqlDollar[18].union.partitionBy(),
				Inverted:      sqlDollar[11].union.bool(),
				StorageParams: sqlDollar[19].union.storageParams(),
				Predicate:     sqlDollar[20].union.expr(),
				Concurrently:  sqlDollar[4].union.bool(),
			}
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:6554
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:          tree.Name(sqlDollar[6].str),
				Table:         table,
				Unique:        sqlDollar[2].union.bool(),
				Inverted:      true,
				Columns:       sqlDollar[10].union.idxElems(),
				Storing:       sqlDollar[12].union.nameList(),
				Interleave:    sqlDollar[13].union.interleave(),
				PartitionBy:   sqlDollar[14].union.partitionBy(),
				StorageParams: sqlDollar[15].union.storageParams(),
				Predicate:     sqlDollar[16].union.expr(),
				Concurrently:  sqlDollar[5].union.bool(),
			}
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:6571
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:          tree.Name(sqlDollar[9].str),
				Table:         table,
				Unique:        sqlDollar[2].union.bool(),
				Inverted:      true,
				IfNotExists:   true,
				Columns:       sqlDollar[13].union.idxElems(),
				Storing:       sqlDollar[15].union.nameList(),
				Interleave:    sqlDollar[16].union.interleave(),
				PartitionBy:   sqlDollar[17].union.partitionBy(),
				StorageParams: sqlDollar[18].union.storageParams(),
				Predicate:     sqlDollar[19].union.expr(),
				Concurrently:  sqlDollar[5].union.bool(),
			}
		}
	case 1125:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6588
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6592
		{

			switch sqlDollar[2].str {
			case "gin", "gist":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6607
		{
			sqlVAL.union.val = false
		}
	case 1128:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6613
		{
			sqlVAL.union.val = true
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6617
		{
			sqlVAL.union.val = false
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6623
		{
			sqlVAL.union.val = true
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6627
		{
			sqlVAL.union.val = false
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6633
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6637
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6646
		{

			e := sqlDollar[1].union.expr()
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			if colName, ok := e.(*tree.UnresolvedName); ok && colName.NumParts == 1 {
				sqlVAL.union.val = tree.IndexElem{Column: tree.Name(colName.Parts[0]), Direction: dir, NullsOrder: nullsOrder}
			} else {
				return unimplementedWithIssueDetail(sqllex, 9682, fmt.Sprintf("%T", e))
			}
		}
	case 1135:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6668
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6669
		{
			sqlVAL.str = ""
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6673
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1138:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6677
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6681
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6687
		{
			sqlVAL.union.val = &tree.ReparentDatabase{Name: tree.Name(sqlDollar[3].str), Parent: tree.Name(sqlDollar[9].str)}
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6693
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6699
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6705
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6713
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: sqlDollar[6].str, IfExists: false,
			}
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6719
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: sqlDollar[8].str, IfExists: true,
			}
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6727
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: sqlDollar[6].str, IfExists: false, IsView: true,
			}
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6733
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Schema:         sqlDollar[7].str,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6743
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: sqlDollar[8].str, IfExists: true, IsView: true,
			}
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6749
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Schema:         sqlDollar[9].str,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6761
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: sqlDollar[6].str, IfExists: false, IsSequence: true,
			}
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6767
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: sqlDollar[8].str, IfExists: true, IsSequence: true,
			}
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6775
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6781
		{
			name := sqlDollar[4].union.unresolvedObjectName()
			newName := sqlDollar[7].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6793
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6799
		{
			name := sqlDollar[6].union.unresolvedObjectName()
			newName := sqlDollar[9].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6813
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6819
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6827
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6831
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6836
		{
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6837
		{
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6840
		{
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6841
		{
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6849
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6852
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6862
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6870
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6872
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6876
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6879
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6892
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeSchedule,
			}
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6900
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6902
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.ResumeSchedule,
			}
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6908
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6921
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.DropSchedule,
			}
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6929
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6931
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.DropSchedule,
			}
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6937
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6945
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6948
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6952
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6953
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6954
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6970
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6973
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6975
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6978
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6988
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6991
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6993
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6996
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7000
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7005
		{
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7006
		{
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7007
		{
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7017
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1201:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7021
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7024
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7027
		{
		}
	case 1204:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7028
		{
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7032
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7036
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7042
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7046
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7052
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7056
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7069
		{
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7071
		{
		}
	case 1213:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7075
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1214:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7080
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7084
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7088
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7094
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7100
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1219:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7106
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7110
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7120
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:     tree.Name(sqlDollar[3].str),
				Template: sqlDollar[5].str,
				Encoding: sqlDollar[6].str,
				Collate:  sqlDollar[7].str,
				CType:    sqlDollar[8].str,
			}
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7130
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists: true,
				Name:        tree.Name(sqlDollar[6].str),
				Template:    sqlDollar[8].str,
				Encoding:    sqlDollar[9].str,
				Collate:     sqlDollar[10].str,
				CType:       sqlDollar[11].str,
			}
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7140
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7144
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7148
		{
			sqlVAL.str = ""
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7154
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7158
		{
			sqlVAL.str = ""
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7164
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7168
		{
			sqlVAL.str = ""
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7174
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7178
		{
			sqlVAL.str = ""
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7183
		{
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7184
		{
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7199
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7206
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7213
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7224
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7231
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7235
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1240:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7244
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7249
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7255
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7259
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7263
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7269
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7273
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7293
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7297
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:   tree.NameList(nil),
				DoNothing: true,
			}
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7304
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				DoNothing:        true,
			}
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7312
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				Exprs:            sqlDollar[10].union.updateExprs(),
				Where:            tree.NewWhere(tree.AstWhere, sqlDollar[11].union.expr()),
			}
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7320
		{
			return unimplementedWithIssue(sqllex, 28161)
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7324
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7329
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7333
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7350
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7362
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7365
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7368
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7374
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7378
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7391
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7394
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7398
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7441
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7447
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7451
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7466
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7470
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7474
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7478
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7482
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7486
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7490
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7494
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7499
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7500
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7503
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7504
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7508
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7512
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7518
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7527
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7528
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1288:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7529
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7530
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7533
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7534
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7537
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7538
		{
			sqlVAL.union.val = tree.LockWaitSkip
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7539
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7544
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7579
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1301:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7580
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7581
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7603
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7616
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7630
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7642
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7646
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7655
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7664
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7679
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7686
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7698
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7702
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7707
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7713
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1318:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7717
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7723
		{
			sqlVAL.union.val = true
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7727
		{
			sqlVAL.union.val = false
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7733
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1322:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7743
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1323:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7755
		{
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7756
		{
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7760
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7764
		{
			sqlVAL.union.val = nil
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7769
		{
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7770
		{
		}
	case 1329:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7774
		{
			sqlVAL.union.val = true
		}
	case 1330:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7778
		{
			sqlVAL.union.val = false
		}
	case 1331:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7782
		{
			sqlVAL.union.val = false
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7788
		{
			sqlVAL.union.val = true
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7794
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7799
		{
		}
	case 1335:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7800
		{
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7804
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7808
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7814
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7820
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7824
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7831
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7835
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7841
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7862
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7867
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7879
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7883
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7887
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7896
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7905
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7916
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7917
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7921
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7925
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7929
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7943
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7947
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7955
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7962
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7984
		{
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7985
		{
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7988
		{
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7989
		{
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8006
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8010
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8016
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8020
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8039
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8042
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8044
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8056
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8059
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8061
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8067
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1381:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8071
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8077
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8081
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8086
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1385:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8091
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8097
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8102
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8109
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8114
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8125
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8129
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8133
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8141
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8172
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8182
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8192
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8200
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8209
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8213
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8217
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1401:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8228
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8252
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8258
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8269
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8273
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8279
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8281
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8285
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8291
		{
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8293
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8296
		{
			sqlVAL.union.val = nil
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8297
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8298
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8302
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8306
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8312
		{
			sqlVAL.union.val = true
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8316
		{
			sqlVAL.union.val = false
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8336
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8340
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8344
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8348
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8352
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8356
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8362
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8366
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 1427:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8373
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8379
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8386
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8392
		{
			sqlVAL.str = tree.AstFull
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8396
		{
			sqlVAL.str = tree.AstLeft
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8400
		{
			sqlVAL.str = tree.AstRight
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8404
		{
			sqlVAL.str = tree.AstInner
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8410
		{
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8411
		{
		}
	case 1437:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8432
		{
			sqlVAL.str = tree.AstHash
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8436
		{
			sqlVAL.str = tree.AstMerge
		}
	case 1439:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8440
		{
			sqlVAL.str = tree.AstLookup
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8444
		{
			sqlVAL.str = ""
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8457
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8461
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8466
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8467
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8468
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8469
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8473
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8478
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8492
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8496
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8502
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8508
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8518
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8528
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8535
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8547
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8560
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8568
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1460:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8569
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8579
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1462:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8586
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8587
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1464:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8589
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8597
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1466:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8598
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 1468:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8610
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1469:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8617
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1470:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8626
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.MakeQChar(0)
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8666
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.OIDTypeReference{OID: oid.Oid(id)}
		}
	case 1472:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8671
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8678
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8679
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8682
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8683
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8684
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8685
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8686
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8687
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8688
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8689
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8692
		{
			sqlVAL.union.val = types.Geography
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8693
		{
			sqlVAL.union.val = types.Geometry
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8694
		{
			sqlVAL.union.val = types.Box2D
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8696
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8700
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8704
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8712
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8738
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8746
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8754
		{
			sqlVAL.union.val = nil
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8761
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8765
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8769
		{
			sqlVAL.union.val = types.Int2
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8773
		{
			sqlVAL.union.val = types.Int
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8777
		{
			sqlVAL.union.val = types.Float4
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8781
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8785
		{
			sqlVAL.union.val = types.Float
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8789
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8797
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8805
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8813
		{
			sqlVAL.union.val = types.Bool
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8819
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8832
		{
			sqlVAL.union.val = types.Float
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8838
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8844
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8852
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8856
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1519:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8860
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8866
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 1521:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8878
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1522:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8884
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 1523:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8888
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1524:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8892
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1525:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8896
		{
			sqlVAL.union.val = types.String
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8905
		{
			sqlVAL.union.val = true
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8906
		{
			sqlVAL.union.val = false
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8911
		{
			sqlVAL.union.val = types.Date
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8915
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8923
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8935
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 1534:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8937
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 1535:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8946
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8954
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8967
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8971
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8981
		{
			sqlVAL.union.val = true
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8982
		{
			sqlVAL.union.val = false
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8983
		{
			sqlVAL.union.val = false
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8987
		{
			sqlVAL.union.val = types.Interval
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8991
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8995
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9006
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9014
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9022
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9030
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9038
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9046
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9052
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9061
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9070
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9079
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9085
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9094
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9100
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9110
		{
			sqlVAL.union.val = nil
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9116
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9124
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9161
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9165
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9169
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9173
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9184
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9189
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9193
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9197
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnarySqrt, Expr: sqlDollar[2].union.expr()}
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9201
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryCbrt, Expr: sqlDollar[2].union.expr()}
		}
	case 1572:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9205
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1573:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9209
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1574:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9213
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1575:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9217
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9221
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9225
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9229
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9233
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9237
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9241
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9245
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9249
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9253
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9257
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONSomeExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9261
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONAllExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9265
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Contains, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9269
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ContainedBy, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9273
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9277
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9281
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9285
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9289
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchVal, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9293
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchText, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1595:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9297
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchValPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9301
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchTextPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9305
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9309
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9313
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Overlaps, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9317
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1601:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9321
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9325
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9329
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9333
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1605:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9337
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9341
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9345
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9349
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Like, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9353
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9357
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotLike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9361
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9365
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9369
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9373
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9377
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9381
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.SimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1617:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9385
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1618:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9389
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotSimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9393
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 1620:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9397
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9401
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9405
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9409
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9413
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9417
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9421
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9425
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9429
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1629:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9433
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1630:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9436
		{
			return unimplemented(sqllex, "overlaps")
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9438
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9442
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1633:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9446
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9450
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9454
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1636:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9458
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1637:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9462
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9466
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9470
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9474
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1641:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9478
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1642:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9482
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1643:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9486
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1644:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9490
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9494
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.In, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1646:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9498
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotIn, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9502
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(tree.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 1648:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9519
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1649:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9524
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9536
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1652:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9540
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9544
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9548
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1655:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9552
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1656:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9556
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1657:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9560
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1658:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9564
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9568
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9572
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9576
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9580
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9584
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9588
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9592
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9596
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9600
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9604
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9608
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9612
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9616
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9620
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9624
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1674:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9628
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9632
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9636
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9640
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9644
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9658
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9666
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9702
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9706
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9710
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9714
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9718
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9723
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9725
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9729
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9733
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9737
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9741
		{
			sqlVAL.union.val = tree.DNull
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9745
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9749
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9758
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9765
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9769
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: sqlDollar[5].str}
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9773
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil || idx <= 0 {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 1700:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9779
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1702:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9784
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1703:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9788
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1704:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9792
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1705:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9796
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 1706:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9800
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1707:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9803
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 1708:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9807
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 1709:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9811
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1710:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9814
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1711:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9815
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9817
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9823
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9827
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9830
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9839
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.MakeQChar(0), SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var err error
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							typ, err = name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9892
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 1718:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9905
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 1719:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9917
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1720:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9926
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1721:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9927
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1722:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9932
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 1723:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9936
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1724:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9940
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1725:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9946
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 1726:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9950
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1727:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9954
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1728:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9958
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1729:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9962
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1730:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9966
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1731:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9972
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1732:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9976
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1733:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9980
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1734:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9984
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 1735:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9988
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 1736:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9992
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 1737:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9996
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 1738:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10000
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 1739:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10004
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 1740:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10008
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 1741:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10012
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 1742:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10016
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1743:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10020
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 1745:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10027
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1746:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10030
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1747:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10032
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1748:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10035
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1749:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10037
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1750:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10041
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1751:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10044
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1752:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10046
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1753:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10050
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1754:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10053
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1755:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10055
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1756:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10059
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1757:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10062
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1758:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10064
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1759:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10068
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1760:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10071
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1761:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10073
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1762:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10076
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1763:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10078
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1764:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10081
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1765:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10083
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1766:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10086
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1767:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10088
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1768:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10091
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1769:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10093
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1770:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10097
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1771:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10100
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1772:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10101
		{
			return unimplemented(sqllex, "treat")
		}
	case 1773:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10103
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1774:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10107
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1775:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10111
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1776:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10115
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1777:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10119
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1778:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10122
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1779:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10124
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1780:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10127
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1781:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10133
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 1782:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10137
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 1783:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10143
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 1784:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10147
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1785:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10154
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 1786:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10158
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 1787:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10164
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 1788:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10168
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 1789:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10174
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 1790:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10182
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 1791:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10186
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1792:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10190
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 1793:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10197
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 1795:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10217
		{
			sqlVAL.str = ""
		}
	case 1796:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10223
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 1797:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10227
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1798:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10233
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1799:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10241
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1800:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10249
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1801:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10257
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 1802:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10263
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == tree.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 1803:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10276
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == tree.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == tree.CurrentRow && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 1804:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10304
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedPreceding}
		}
	case 1805:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10308
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedFollowing}
		}
	case 1806:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10312
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.CurrentRow}
		}
	case 1807:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10316
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetPreceding,
			}
		}
	case 1808:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10323
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetFollowing,
			}
		}
	case 1809:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10332
		{
			sqlVAL.union.val = tree.ExcludeCurrentRow
		}
	case 1810:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10336
		{
			sqlVAL.union.val = tree.ExcludeGroup
		}
	case 1811:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10340
		{
			sqlVAL.union.val = tree.ExcludeTies
		}
	case 1812:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10344
		{

			sqlVAL.union.val = tree.NoExclusion
		}
	case 1813:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10349
		{
			sqlVAL.union.val = tree.NoExclusion
		}
	case 1814:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10362
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 1815:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10366
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1817:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10373
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 1818:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10385
		{
			sqlVAL.union.val = tree.Any
		}
	case 1819:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10389
		{
			sqlVAL.union.val = tree.Some
		}
	case 1820:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10393
		{
			sqlVAL.union.val = tree.All
		}
	case 1821:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10398
		{
			sqlVAL.union.val = tree.Plus
		}
	case 1822:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10399
		{
			sqlVAL.union.val = tree.Minus
		}
	case 1823:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10400
		{
			sqlVAL.union.val = tree.Mult
		}
	case 1824:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10401
		{
			sqlVAL.union.val = tree.Div
		}
	case 1825:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10402
		{
			sqlVAL.union.val = tree.FloorDiv
		}
	case 1826:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10403
		{
			sqlVAL.union.val = tree.Mod
		}
	case 1827:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10404
		{
			sqlVAL.union.val = tree.Bitand
		}
	case 1828:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10405
		{
			sqlVAL.union.val = tree.Bitor
		}
	case 1829:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10406
		{
			sqlVAL.union.val = tree.Pow
		}
	case 1830:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10407
		{
			sqlVAL.union.val = tree.Bitxor
		}
	case 1831:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10408
		{
			sqlVAL.union.val = tree.LT
		}
	case 1832:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10409
		{
			sqlVAL.union.val = tree.GT
		}
	case 1833:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10410
		{
			sqlVAL.union.val = tree.EQ
		}
	case 1834:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10411
		{
			sqlVAL.union.val = tree.LE
		}
	case 1835:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10412
		{
			sqlVAL.union.val = tree.GE
		}
	case 1836:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10413
		{
			sqlVAL.union.val = tree.NE
		}
	case 1838:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10417
		{
			sqlVAL.union.val = tree.Like
		}
	case 1839:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10418
		{
			sqlVAL.union.val = tree.NotLike
		}
	case 1840:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10419
		{
			sqlVAL.union.val = tree.ILike
		}
	case 1841:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10420
		{
			sqlVAL.union.val = tree.NotILike
		}
	case 1842:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10443
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 1843:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10447
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1844:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10453
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1845:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10457
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1846:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10461
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 1847:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10472
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 1848:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10476
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1849:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10482
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1850:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10486
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 1852:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10493
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1853:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10499
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1854:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10503
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1855:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10509
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 1856:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10513
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 1857:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10519
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1858:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10523
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1859:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10529
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1860:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10533
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1861:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10539
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(sqlDollar[1].str), sqlDollar[3].union.expr()}
		}
	case 1862:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10543
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1871:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10566
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 1872:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10570
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 1873:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10574
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1874:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10580
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1875:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10587
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 1876:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10591
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1877:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10608
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 1878:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10612
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 1879:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10616
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 1880:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10620
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 1881:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10624
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1882:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10630
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1883:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10636
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1884:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10642
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 1885:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10646
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 1886:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10650
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1887:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10656
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1889:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10668
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 1890:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10675
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 1891:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10679
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 1892:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10685
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 1893:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10691
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1894:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10695
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1896:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10702
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1897:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10708
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 1898:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10712
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 1900:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10719
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1901:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10725
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 1902:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10729
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 1903:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10734
		{
		}
	case 1904:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10735
		{
		}
	case 1905:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10739
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 1906:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10743
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 1907:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10749
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1908:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10758
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1909:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10762
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1910:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10766
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 1911:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10774
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 1912:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10778
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 1913:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10784
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 1914:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10788
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 1915:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10807
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 1916:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10815
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 1917:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10838
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 1919:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10847
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 1920:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10851
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1921:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10855
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 1922:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10859
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 1923:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10865
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1924:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10869
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1929:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10884
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 1930:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10888
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 1933:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10900
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 1934:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10904
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 1935:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10913
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 1936:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10924
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 1937:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10933
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 1938:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10941
		{
			var err error
			var d tree.Datum
			if sqlDollar[3].union.val == nil {
				d, err = tree.ParseDInterval(sqlDollar[2].str)
			} else {
				d, err = tree.ParseDIntervalWithTypeMetadata(sqlDollar[2].str, sqlDollar[3].union.intervalTypeMetadata())
			}
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1939:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10953
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			d, err := tree.ParseDIntervalWithTypeMetadata(sqlDollar[5].str, types.IntervalTypeMetadata{
				Precision:      prec,
				PrecisionIsSet: true,
			})
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1962:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11054
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 1964:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11061
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1965:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11065
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1966:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11069
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1968:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11083
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1969:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11087
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1970:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11091
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 1971:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11104
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 1973:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11113
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 1977:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11131
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1978:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11144
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1979:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11151
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1987:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11176
		{
			sqlVAL.str = ""
		}
	case 1988:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11182
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1989:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11186
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
