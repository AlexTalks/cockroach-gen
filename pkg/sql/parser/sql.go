// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/roachpb"
	"github.com/cockroachdb/cockroach/pkg/security"
	"github.com/cockroachdb/cockroach/pkg/sql/lex"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
	"github.com/lib/pq/oid"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}

func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

//line sql-gen.y:78

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) user() security.SQLUsername {
	return u.val.(security.SQLUsername)
}
func (u *sqlSymUnion) users() []security.SQLUsername {
	return u.val.([]security.SQLUsername)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) enumValueList() tree.EnumValueList {
	return u.val.(tree.EnumValueList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) functionReference() tree.FunctionReference {
	return u.val.(tree.FunctionReference)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistence() tree.Persistence {
	return u.val.(tree.Persistence)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) targetList() tree.TargetList {
	return u.val.(tree.TargetList)
}
func (u *sqlSymUnion) targetListPtr() *tree.TargetList {
	return u.val.(*tree.TargetList)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() tree.WindowFrameExclusion {
	return u.val.(tree.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) deferrableMode() tree.DeferrableMode {
	return u.val.(tree.DeferrableMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) interleave() *tree.InterleaveDef {
	return u.val.(*tree.InterleaveDef)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) partitionByTable() *tree.PartitionByTable {
	return u.val.(*tree.PartitionByTable)
}
func (u *sqlSymUnion) partitionByIndex() *tree.PartitionByIndex {
	return u.val.(*tree.PartitionByIndex)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() tree.ComparisonOperator {
	return u.val.(tree.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) replicationOptions() *tree.ReplicationOptions {
	return u.val.(*tree.ReplicationOptions)
}
func (u *sqlSymUnion) copyOptions() *tree.CopyOptions {
	return u.val.(*tree.CopyOptions)
}
func (u *sqlSymUnion) restoreOptions() *tree.RestoreOptions {
	return u.val.(*tree.RestoreOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) stringOrPlaceholderOptList() tree.StringOrPlaceholderOptList {
	return u.val.(tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) listOfStringOrPlaceholderOptList() []tree.StringOrPlaceholderOptList {
	return u.val.([]tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) fullBackupClause() *tree.FullBackupClause {
	return u.val.(*tree.FullBackupClause)
}
func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}
func (u *sqlSymUnion) scheduleState() tree.ScheduleState {
	return u.val.(tree.ScheduleState)
}
func (u *sqlSymUnion) executorType() tree.ScheduledJobExecutorType {
	return u.val.(tree.ScheduledJobExecutorType)
}
func (u *sqlSymUnion) refreshDataOption() tree.RefreshDataOption {
	return u.val.(tree.RefreshDataOption)
}
func (u *sqlSymUnion) locality() *tree.Locality {
	return u.val.(*tree.Locality)
}
func (u *sqlSymUnion) survivalGoal() tree.SurvivalGoal {
	return u.val.(tree.SurvivalGoal)
}
func (u *sqlSymUnion) objectNamePrefix() tree.ObjectNamePrefix {
	return u.val.(tree.ObjectNamePrefix)
}
func (u *sqlSymUnion) objectNamePrefixList() tree.ObjectNamePrefixList {
	return u.val.(tree.ObjectNamePrefixList)
}

//line sql-gen.y:724
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lex.IDENT
const SCONST = lex.SCONST
const BCONST = lex.BCONST
const BITCONST = lex.BITCONST
const ICONST = lex.ICONST
const FCONST = lex.FCONST
const PLACEHOLDER = lex.PLACEHOLDER
const TYPECAST = lex.TYPECAST
const TYPEANNOTATE = lex.TYPEANNOTATE
const DOT_DOT = lex.DOT_DOT
const LESS_EQUALS = lex.LESS_EQUALS
const GREATER_EQUALS = lex.GREATER_EQUALS
const NOT_EQUALS = lex.NOT_EQUALS
const NOT_REGMATCH = lex.NOT_REGMATCH
const REGIMATCH = lex.REGIMATCH
const NOT_REGIMATCH = lex.NOT_REGIMATCH
const ERROR = lex.ERROR
const ABORT = lex.ABORT
const ACCESS = lex.ACCESS
const ACTION = lex.ACTION
const ADD = lex.ADD
const ADMIN = lex.ADMIN
const AFFINITY = lex.AFFINITY
const AFTER = lex.AFTER
const AGGREGATE = lex.AGGREGATE
const ALL = lex.ALL
const ALTER = lex.ALTER
const ALWAYS = lex.ALWAYS
const ANALYSE = lex.ANALYSE
const ANALYZE = lex.ANALYZE
const AND = lex.AND
const AND_AND = lex.AND_AND
const ANY = lex.ANY
const ANNOTATE_TYPE = lex.ANNOTATE_TYPE
const ARRAY = lex.ARRAY
const AS = lex.AS
const ASC = lex.ASC
const ASYMMETRIC = lex.ASYMMETRIC
const AT = lex.AT
const ATTRIBUTE = lex.ATTRIBUTE
const AUTHORIZATION = lex.AUTHORIZATION
const AUTOMATIC = lex.AUTOMATIC
const AVAILABILITY = lex.AVAILABILITY
const BACKUP = lex.BACKUP
const BACKUPS = lex.BACKUPS
const BEFORE = lex.BEFORE
const BEGIN = lex.BEGIN
const BETWEEN = lex.BETWEEN
const BIGINT = lex.BIGINT
const BIGSERIAL = lex.BIGSERIAL
const BINARY = lex.BINARY
const BIT = lex.BIT
const BUCKET_COUNT = lex.BUCKET_COUNT
const BOOLEAN = lex.BOOLEAN
const BOTH = lex.BOTH
const BOX2D = lex.BOX2D
const BUNDLE = lex.BUNDLE
const BY = lex.BY
const CACHE = lex.CACHE
const CANCEL = lex.CANCEL
const CANCELQUERY = lex.CANCELQUERY
const CASCADE = lex.CASCADE
const CASE = lex.CASE
const CAST = lex.CAST
const CBRT = lex.CBRT
const CHANGEFEED = lex.CHANGEFEED
const CHAR = lex.CHAR
const CHARACTER = lex.CHARACTER
const CHARACTERISTICS = lex.CHARACTERISTICS
const CHECK = lex.CHECK
const CLOSE = lex.CLOSE
const CLUSTER = lex.CLUSTER
const COALESCE = lex.COALESCE
const COLLATE = lex.COLLATE
const COLLATION = lex.COLLATION
const COLUMN = lex.COLUMN
const COLUMNS = lex.COLUMNS
const COMMENT = lex.COMMENT
const COMMENTS = lex.COMMENTS
const COMMIT = lex.COMMIT
const COMMITTED = lex.COMMITTED
const COMPACT = lex.COMPACT
const COMPLETE = lex.COMPLETE
const CONCAT = lex.CONCAT
const CONCURRENTLY = lex.CONCURRENTLY
const CONFIGURATION = lex.CONFIGURATION
const CONFIGURATIONS = lex.CONFIGURATIONS
const CONFIGURE = lex.CONFIGURE
const CONFLICT = lex.CONFLICT
const CONNECTION = lex.CONNECTION
const CONSTRAINT = lex.CONSTRAINT
const CONSTRAINTS = lex.CONSTRAINTS
const CONTAINS = lex.CONTAINS
const CONTROLCHANGEFEED = lex.CONTROLCHANGEFEED
const CONTROLJOB = lex.CONTROLJOB
const CONVERSION = lex.CONVERSION
const CONVERT = lex.CONVERT
const COPY = lex.COPY
const COVERING = lex.COVERING
const CREATE = lex.CREATE
const CREATEDB = lex.CREATEDB
const CREATELOGIN = lex.CREATELOGIN
const CREATEROLE = lex.CREATEROLE
const CROSS = lex.CROSS
const CSV = lex.CSV
const CUBE = lex.CUBE
const CURRENT = lex.CURRENT
const CURRENT_CATALOG = lex.CURRENT_CATALOG
const CURRENT_DATE = lex.CURRENT_DATE
const CURRENT_SCHEMA = lex.CURRENT_SCHEMA
const CURRENT_ROLE = lex.CURRENT_ROLE
const CURRENT_TIME = lex.CURRENT_TIME
const CURRENT_TIMESTAMP = lex.CURRENT_TIMESTAMP
const CURRENT_USER = lex.CURRENT_USER
const CURSOR = lex.CURSOR
const CYCLE = lex.CYCLE
const DATA = lex.DATA
const DATABASE = lex.DATABASE
const DATABASES = lex.DATABASES
const DATE = lex.DATE
const DAY = lex.DAY
const DEC = lex.DEC
const DECIMAL = lex.DECIMAL
const DEFAULT = lex.DEFAULT
const DEFAULTS = lex.DEFAULTS
const DEALLOCATE = lex.DEALLOCATE
const DECLARE = lex.DECLARE
const DEFERRABLE = lex.DEFERRABLE
const DEFERRED = lex.DEFERRED
const DELETE = lex.DELETE
const DELIMITER = lex.DELIMITER
const DESC = lex.DESC
const DESTINATION = lex.DESTINATION
const DETACHED = lex.DETACHED
const DISCARD = lex.DISCARD
const DISTINCT = lex.DISTINCT
const DO = lex.DO
const DOMAIN = lex.DOMAIN
const DOUBLE = lex.DOUBLE
const DROP = lex.DROP
const ELSE = lex.ELSE
const ENCODING = lex.ENCODING
const ENCRYPTION_PASSPHRASE = lex.ENCRYPTION_PASSPHRASE
const END = lex.END
const ENUM = lex.ENUM
const ENUMS = lex.ENUMS
const ESCAPE = lex.ESCAPE
const EXCEPT = lex.EXCEPT
const EXCLUDE = lex.EXCLUDE
const EXCLUDING = lex.EXCLUDING
const EXISTS = lex.EXISTS
const EXECUTE = lex.EXECUTE
const EXECUTION = lex.EXECUTION
const EXPERIMENTAL = lex.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lex.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lex.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lex.EXPERIMENTAL_AUDIT
const EXPIRATION = lex.EXPIRATION
const EXPLAIN = lex.EXPLAIN
const EXPORT = lex.EXPORT
const EXTENSION = lex.EXTENSION
const EXTRACT = lex.EXTRACT
const EXTRACT_DURATION = lex.EXTRACT_DURATION
const FAILURE = lex.FAILURE
const FALSE = lex.FALSE
const FAMILY = lex.FAMILY
const FETCH = lex.FETCH
const FETCHVAL = lex.FETCHVAL
const FETCHTEXT = lex.FETCHTEXT
const FETCHVAL_PATH = lex.FETCHVAL_PATH
const FETCHTEXT_PATH = lex.FETCHTEXT_PATH
const FILES = lex.FILES
const FILTER = lex.FILTER
const FIRST = lex.FIRST
const FLOAT = lex.FLOAT
const FLOAT4 = lex.FLOAT4
const FLOAT8 = lex.FLOAT8
const FLOORDIV = lex.FLOORDIV
const FOLLOWING = lex.FOLLOWING
const FOR = lex.FOR
const FORCE_INDEX = lex.FORCE_INDEX
const FOREIGN = lex.FOREIGN
const FROM = lex.FROM
const FULL = lex.FULL
const FUNCTION = lex.FUNCTION
const GENERATED = lex.GENERATED
const GEOGRAPHY = lex.GEOGRAPHY
const GEOMETRY = lex.GEOMETRY
const GEOMETRYM = lex.GEOMETRYM
const GEOMETRYZ = lex.GEOMETRYZ
const GEOMETRYZM = lex.GEOMETRYZM
const GEOMETRYCOLLECTION = lex.GEOMETRYCOLLECTION
const GEOMETRYCOLLECTIONM = lex.GEOMETRYCOLLECTIONM
const GEOMETRYCOLLECTIONZ = lex.GEOMETRYCOLLECTIONZ
const GEOMETRYCOLLECTIONZM = lex.GEOMETRYCOLLECTIONZM
const GLOBAL = lex.GLOBAL
const GOAL = lex.GOAL
const GRANT = lex.GRANT
const GRANTS = lex.GRANTS
const GREATEST = lex.GREATEST
const GROUP = lex.GROUP
const GROUPING = lex.GROUPING
const GROUPS = lex.GROUPS
const HAVING = lex.HAVING
const HASH = lex.HASH
const HIGH = lex.HIGH
const HISTOGRAM = lex.HISTOGRAM
const HOUR = lex.HOUR
const IDENTITY = lex.IDENTITY
const IF = lex.IF
const IFERROR = lex.IFERROR
const IFNULL = lex.IFNULL
const IGNORE_FOREIGN_KEYS = lex.IGNORE_FOREIGN_KEYS
const ILIKE = lex.ILIKE
const IMMEDIATE = lex.IMMEDIATE
const IMPORT = lex.IMPORT
const IN = lex.IN
const INCLUDE = lex.INCLUDE
const INCLUDING = lex.INCLUDING
const INCREMENT = lex.INCREMENT
const INCREMENTAL = lex.INCREMENTAL
const INET = lex.INET
const INET_CONTAINED_BY_OR_EQUALS = lex.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lex.INET_CONTAINS_OR_EQUALS
const INDEX = lex.INDEX
const INDEXES = lex.INDEXES
const INHERITS = lex.INHERITS
const INJECT = lex.INJECT
const INTERLEAVE = lex.INTERLEAVE
const INITIALLY = lex.INITIALLY
const INNER = lex.INNER
const INSERT = lex.INSERT
const INT = lex.INT
const INTEGER = lex.INTEGER
const INTERSECT = lex.INTERSECT
const INTERVAL = lex.INTERVAL
const INTO = lex.INTO
const INTO_DB = lex.INTO_DB
const INVERTED = lex.INVERTED
const IS = lex.IS
const ISERROR = lex.ISERROR
const ISNULL = lex.ISNULL
const ISOLATION = lex.ISOLATION
const JOB = lex.JOB
const JOBS = lex.JOBS
const JOIN = lex.JOIN
const JSON = lex.JSON
const JSONB = lex.JSONB
const JSON_SOME_EXISTS = lex.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lex.JSON_ALL_EXISTS
const KEY = lex.KEY
const KEYS = lex.KEYS
const KMS = lex.KMS
const KV = lex.KV
const LANGUAGE = lex.LANGUAGE
const LAST = lex.LAST
const LATERAL = lex.LATERAL
const LATEST = lex.LATEST
const LC_CTYPE = lex.LC_CTYPE
const LC_COLLATE = lex.LC_COLLATE
const LEADING = lex.LEADING
const LEASE = lex.LEASE
const LEAST = lex.LEAST
const LEFT = lex.LEFT
const LESS = lex.LESS
const LEVEL = lex.LEVEL
const LIKE = lex.LIKE
const LIMIT = lex.LIMIT
const LINESTRING = lex.LINESTRING
const LINESTRINGM = lex.LINESTRINGM
const LINESTRINGZ = lex.LINESTRINGZ
const LINESTRINGZM = lex.LINESTRINGZM
const LIST = lex.LIST
const LOCAL = lex.LOCAL
const LOCALITY = lex.LOCALITY
const LOCALTIME = lex.LOCALTIME
const LOCALTIMESTAMP = lex.LOCALTIMESTAMP
const LOCKED = lex.LOCKED
const LOGIN = lex.LOGIN
const LOOKUP = lex.LOOKUP
const LOW = lex.LOW
const LSHIFT = lex.LSHIFT
const MATCH = lex.MATCH
const MATERIALIZED = lex.MATERIALIZED
const MERGE = lex.MERGE
const MINVALUE = lex.MINVALUE
const MAXVALUE = lex.MAXVALUE
const METHOD = lex.METHOD
const MINUTE = lex.MINUTE
const MODIFYCLUSTERSETTING = lex.MODIFYCLUSTERSETTING
const MONTH = lex.MONTH
const MULTILINESTRING = lex.MULTILINESTRING
const MULTILINESTRINGM = lex.MULTILINESTRINGM
const MULTILINESTRINGZ = lex.MULTILINESTRINGZ
const MULTILINESTRINGZM = lex.MULTILINESTRINGZM
const MULTIPOINT = lex.MULTIPOINT
const MULTIPOINTM = lex.MULTIPOINTM
const MULTIPOINTZ = lex.MULTIPOINTZ
const MULTIPOINTZM = lex.MULTIPOINTZM
const MULTIPOLYGON = lex.MULTIPOLYGON
const MULTIPOLYGONM = lex.MULTIPOLYGONM
const MULTIPOLYGONZ = lex.MULTIPOLYGONZ
const MULTIPOLYGONZM = lex.MULTIPOLYGONZM
const NAN = lex.NAN
const NAME = lex.NAME
const NAMES = lex.NAMES
const NATURAL = lex.NATURAL
const NEVER = lex.NEVER
const NEXT = lex.NEXT
const NO = lex.NO
const NOCANCELQUERY = lex.NOCANCELQUERY
const NOCONTROLCHANGEFEED = lex.NOCONTROLCHANGEFEED
const NOCONTROLJOB = lex.NOCONTROLJOB
const NOCREATEDB = lex.NOCREATEDB
const NOCREATELOGIN = lex.NOCREATELOGIN
const NOCREATEROLE = lex.NOCREATEROLE
const NOLOGIN = lex.NOLOGIN
const NOMODIFYCLUSTERSETTING = lex.NOMODIFYCLUSTERSETTING
const NO_INDEX_JOIN = lex.NO_INDEX_JOIN
const NONE = lex.NONE
const NORMAL = lex.NORMAL
const NOT = lex.NOT
const NOTHING = lex.NOTHING
const NOTNULL = lex.NOTNULL
const NOVIEWACTIVITY = lex.NOVIEWACTIVITY
const NOWAIT = lex.NOWAIT
const NULL = lex.NULL
const NULLIF = lex.NULLIF
const NULLS = lex.NULLS
const NUMERIC = lex.NUMERIC
const OF = lex.OF
const OFF = lex.OFF
const OFFSET = lex.OFFSET
const OID = lex.OID
const OIDS = lex.OIDS
const OIDVECTOR = lex.OIDVECTOR
const ON = lex.ON
const ONLY = lex.ONLY
const OPT = lex.OPT
const OPTION = lex.OPTION
const OPTIONS = lex.OPTIONS
const OR = lex.OR
const ORDER = lex.ORDER
const ORDINALITY = lex.ORDINALITY
const OTHERS = lex.OTHERS
const OUT = lex.OUT
const OUTER = lex.OUTER
const OVER = lex.OVER
const OVERLAPS = lex.OVERLAPS
const OVERLAY = lex.OVERLAY
const OWNED = lex.OWNED
const OWNER = lex.OWNER
const OPERATOR = lex.OPERATOR
const PARENT = lex.PARENT
const PARTIAL = lex.PARTIAL
const PARTITION = lex.PARTITION
const PARTITIONED = lex.PARTITIONED
const PARTITIONS = lex.PARTITIONS
const PASSWORD = lex.PASSWORD
const PAUSE = lex.PAUSE
const PAUSED = lex.PAUSED
const PHYSICAL = lex.PHYSICAL
const PLACING = lex.PLACING
const PLAN = lex.PLAN
const PLANS = lex.PLANS
const POINT = lex.POINT
const POINTM = lex.POINTM
const POINTZ = lex.POINTZ
const POINTZM = lex.POINTZM
const POLYGON = lex.POLYGON
const POLYGONM = lex.POLYGONM
const POLYGONZ = lex.POLYGONZ
const POLYGONZM = lex.POLYGONZM
const POSITION = lex.POSITION
const PRECEDING = lex.PRECEDING
const PRECISION = lex.PRECISION
const PREPARE = lex.PREPARE
const PRESERVE = lex.PRESERVE
const PRIMARY = lex.PRIMARY
const PRIORITY = lex.PRIORITY
const PRIVILEGES = lex.PRIVILEGES
const PROCEDURAL = lex.PROCEDURAL
const PUBLIC = lex.PUBLIC
const PUBLICATION = lex.PUBLICATION
const QUERIES = lex.QUERIES
const QUERY = lex.QUERY
const RANGE = lex.RANGE
const RANGES = lex.RANGES
const READ = lex.READ
const REAL = lex.REAL
const REASSIGN = lex.REASSIGN
const RECURSIVE = lex.RECURSIVE
const RECURRING = lex.RECURRING
const REF = lex.REF
const REFERENCES = lex.REFERENCES
const REFRESH = lex.REFRESH
const REGCLASS = lex.REGCLASS
const REGION = lex.REGION
const REGIONAL = lex.REGIONAL
const REGIONS = lex.REGIONS
const REGPROC = lex.REGPROC
const REGPROCEDURE = lex.REGPROCEDURE
const REGNAMESPACE = lex.REGNAMESPACE
const REGTYPE = lex.REGTYPE
const REINDEX = lex.REINDEX
const REMOVE_PATH = lex.REMOVE_PATH
const RENAME = lex.RENAME
const REPEATABLE = lex.REPEATABLE
const REPLACE = lex.REPLACE
const REPLICATION = lex.REPLICATION
const RELEASE = lex.RELEASE
const RESET = lex.RESET
const RESTORE = lex.RESTORE
const RESTRICT = lex.RESTRICT
const RESUME = lex.RESUME
const RETURNING = lex.RETURNING
const RETRY = lex.RETRY
const REVISION_HISTORY = lex.REVISION_HISTORY
const REVOKE = lex.REVOKE
const RIGHT = lex.RIGHT
const ROLE = lex.ROLE
const ROLES = lex.ROLES
const ROLLBACK = lex.ROLLBACK
const ROLLUP = lex.ROLLUP
const ROW = lex.ROW
const ROWS = lex.ROWS
const RSHIFT = lex.RSHIFT
const RULE = lex.RULE
const RUNNING = lex.RUNNING
const SAVEPOINT = lex.SAVEPOINT
const SCATTER = lex.SCATTER
const SCHEDULE = lex.SCHEDULE
const SCHEDULES = lex.SCHEDULES
const SCHEMA = lex.SCHEMA
const SCHEMAS = lex.SCHEMAS
const SCRUB = lex.SCRUB
const SEARCH = lex.SEARCH
const SECOND = lex.SECOND
const SELECT = lex.SELECT
const SEQUENCE = lex.SEQUENCE
const SEQUENCES = lex.SEQUENCES
const SERIALIZABLE = lex.SERIALIZABLE
const SERVER = lex.SERVER
const SESSION = lex.SESSION
const SESSIONS = lex.SESSIONS
const SESSION_USER = lex.SESSION_USER
const SET = lex.SET
const SETS = lex.SETS
const SETTING = lex.SETTING
const SETTINGS = lex.SETTINGS
const SHARE = lex.SHARE
const SHOW = lex.SHOW
const SIMILAR = lex.SIMILAR
const SIMPLE = lex.SIMPLE
const SKIP = lex.SKIP
const SKIP_MISSING_FOREIGN_KEYS = lex.SKIP_MISSING_FOREIGN_KEYS
const SKIP_MISSING_SEQUENCES = lex.SKIP_MISSING_SEQUENCES
const SKIP_MISSING_SEQUENCE_OWNERS = lex.SKIP_MISSING_SEQUENCE_OWNERS
const SKIP_MISSING_VIEWS = lex.SKIP_MISSING_VIEWS
const SMALLINT = lex.SMALLINT
const SMALLSERIAL = lex.SMALLSERIAL
const SNAPSHOT = lex.SNAPSHOT
const SOME = lex.SOME
const SPLIT = lex.SPLIT
const SQL = lex.SQL
const START = lex.START
const STATISTICS = lex.STATISTICS
const STATUS = lex.STATUS
const STDIN = lex.STDIN
const STREAM = lex.STREAM
const STRICT = lex.STRICT
const STRING = lex.STRING
const STORAGE = lex.STORAGE
const STORE = lex.STORE
const STORED = lex.STORED
const STORING = lex.STORING
const SUBSTRING = lex.SUBSTRING
const SURVIVE = lex.SURVIVE
const SURVIVAL = lex.SURVIVAL
const SYMMETRIC = lex.SYMMETRIC
const SYNTAX = lex.SYNTAX
const SYSTEM = lex.SYSTEM
const SQRT = lex.SQRT
const SUBSCRIPTION = lex.SUBSCRIPTION
const STATEMENTS = lex.STATEMENTS
const TABLE = lex.TABLE
const TABLES = lex.TABLES
const TABLESPACE = lex.TABLESPACE
const TEMP = lex.TEMP
const TEMPLATE = lex.TEMPLATE
const TEMPORARY = lex.TEMPORARY
const TENANT = lex.TENANT
const TESTING_RELOCATE = lex.TESTING_RELOCATE
const EXPERIMENTAL_RELOCATE = lex.EXPERIMENTAL_RELOCATE
const TEXT = lex.TEXT
const THEN = lex.THEN
const TIES = lex.TIES
const TIME = lex.TIME
const TIMETZ = lex.TIMETZ
const TIMESTAMP = lex.TIMESTAMP
const TIMESTAMPTZ = lex.TIMESTAMPTZ
const TO = lex.TO
const THROTTLING = lex.THROTTLING
const TRAILING = lex.TRAILING
const TRACE = lex.TRACE
const TRANSACTION = lex.TRANSACTION
const TRANSACTIONS = lex.TRANSACTIONS
const TREAT = lex.TREAT
const TRIGGER = lex.TRIGGER
const TRIM = lex.TRIM
const TRUE = lex.TRUE
const TRUNCATE = lex.TRUNCATE
const TRUSTED = lex.TRUSTED
const TYPE = lex.TYPE
const TYPES = lex.TYPES
const TRACING = lex.TRACING
const UNBOUNDED = lex.UNBOUNDED
const UNCOMMITTED = lex.UNCOMMITTED
const UNION = lex.UNION
const UNIQUE = lex.UNIQUE
const UNKNOWN = lex.UNKNOWN
const UNLOGGED = lex.UNLOGGED
const UNSPLIT = lex.UNSPLIT
const UPDATE = lex.UPDATE
const UPSERT = lex.UPSERT
const UNTIL = lex.UNTIL
const USE = lex.USE
const USER = lex.USER
const USERS = lex.USERS
const USING = lex.USING
const UUID = lex.UUID
const VALID = lex.VALID
const VALIDATE = lex.VALIDATE
const VALUE = lex.VALUE
const VALUES = lex.VALUES
const VARBIT = lex.VARBIT
const VARCHAR = lex.VARCHAR
const VARIADIC = lex.VARIADIC
const VIEW = lex.VIEW
const VARYING = lex.VARYING
const VIEWACTIVITY = lex.VIEWACTIVITY
const VIRTUAL = lex.VIRTUAL
const VISIBLE = lex.VISIBLE
const WHEN = lex.WHEN
const WHERE = lex.WHERE
const WINDOW = lex.WINDOW
const WITH = lex.WITH
const WITHIN = lex.WITHIN
const WITHOUT = lex.WITHOUT
const WORK = lex.WORK
const WRITE = lex.WRITE
const YEAR = lex.YEAR
const ZONE = lex.ZONE
const NOT_LA = lex.NOT_LA
const NULLS_LA = lex.NULLS_LA
const WITH_LA = lex.WITH_LA
const AS_LA = lex.AS_LA
const GENERATED_ALWAYS = lex.GENERATED_ALWAYS
const CONTAINED_BY = lex.CONTAINED_BY
const POSTFIXOP = lex.POSTFIXOP
const UMINUS = lex.UMINUS
const HELPTOKEN = lex.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ACCESS",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFFINITY",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASYMMETRIC",
	"AT",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"AVAILABILITY",
	"BACKUP",
	"BACKUPS",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BINARY",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BOX2D",
	"BUNDLE",
	"BY",
	"CACHE",
	"CANCEL",
	"CANCELQUERY",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONNECTION",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONTROLCHANGEFEED",
	"CONTROLJOB",
	"CONVERSION",
	"CONVERT",
	"COPY",
	"COVERING",
	"CREATE",
	"CREATEDB",
	"CREATELOGIN",
	"CREATEROLE",
	"CROSS",
	"CSV",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CURSOR",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DELIMITER",
	"DESC",
	"DESTINATION",
	"DETACHED",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ENUMS",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXECUTION",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FAILURE",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE_INDEX",
	"FOREIGN",
	"FROM",
	"FULL",
	"FUNCTION",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYM",
	"GEOMETRYZ",
	"GEOMETRYZM",
	"GEOMETRYCOLLECTION",
	"GEOMETRYCOLLECTIONM",
	"GEOMETRYCOLLECTIONZ",
	"GEOMETRYCOLLECTIONZM",
	"GLOBAL",
	"GOAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HIGH",
	"HISTOGRAM",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDING",
	"INCREMENT",
	"INCREMENTAL",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INHERITS",
	"INJECT",
	"INTERLEAVE",
	"INITIALLY",
	"INNER",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INTO_DB",
	"INVERTED",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KMS",
	"KV",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LATEST",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LINESTRINGM",
	"LINESTRINGZ",
	"LINESTRINGZM",
	"LIST",
	"LOCAL",
	"LOCALITY",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"METHOD",
	"MINUTE",
	"MODIFYCLUSTERSETTING",
	"MONTH",
	"MULTILINESTRING",
	"MULTILINESTRINGM",
	"MULTILINESTRINGZ",
	"MULTILINESTRINGZM",
	"MULTIPOINT",
	"MULTIPOINTM",
	"MULTIPOINTZ",
	"MULTIPOINTZM",
	"MULTIPOLYGON",
	"MULTIPOLYGONM",
	"MULTIPOLYGONZ",
	"MULTIPOLYGONZM",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEVER",
	"NEXT",
	"NO",
	"NOCANCELQUERY",
	"NOCONTROLCHANGEFEED",
	"NOCONTROLJOB",
	"NOCREATEDB",
	"NOCREATELOGIN",
	"NOCREATEROLE",
	"NOLOGIN",
	"NOMODIFYCLUSTERSETTING",
	"NO_INDEX_JOIN",
	"NONE",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOVIEWACTIVITY",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONED",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PAUSED",
	"PHYSICAL",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POINTM",
	"POINTZ",
	"POINTZM",
	"POLYGON",
	"POLYGONM",
	"POLYGONZ",
	"POLYGONZM",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIORITY",
	"PRIVILEGES",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"REASSIGN",
	"RECURSIVE",
	"RECURRING",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REGCLASS",
	"REGION",
	"REGIONAL",
	"REGIONS",
	"REGPROC",
	"REGPROCEDURE",
	"REGNAMESPACE",
	"REGTYPE",
	"REINDEX",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"REPLICATION",
	"RELEASE",
	"RESET",
	"RESTORE",
	"RESTRICT",
	"RESUME",
	"RETURNING",
	"RETRY",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"RUNNING",
	"SAVEPOINT",
	"SCATTER",
	"SCHEDULE",
	"SCHEDULES",
	"SCHEMA",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETS",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SKIP_MISSING_FOREIGN_KEYS",
	"SKIP_MISSING_SEQUENCES",
	"SKIP_MISSING_SEQUENCE_OWNERS",
	"SKIP_MISSING_VIEWS",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"START",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STREAM",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SURVIVE",
	"SURVIVAL",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"STATEMENTS",
	"TABLE",
	"TABLES",
	"TABLESPACE",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TENANT",
	"TESTING_RELOCATE",
	"EXPERIMENTAL_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TRANSACTIONS",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TYPES",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIEWACTIVITY",
	"VIRTUAL",
	"VISIBLE",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"NULLS_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"'{'",
	"'}'",
	"':'",
}

var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:12937

//line yacctab:1
var sqlExca = [...]int{
	-1, 0,
	1, 35,
	-2, 1495,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 57,
	258, 383,
	-2, 0,
	-1, 74,
	240, 226,
	505, 226,
	-2, 0,
	-1, 87,
	228, 1236,
	242, 1236,
	258, 379,
	385, 379,
	395, 1006,
	431, 379,
	443, 1006,
	489, 1006,
	516, 379,
	542, 1006,
	-2, 0,
	-1, 93,
	133, 1495,
	235, 1495,
	527, 1495,
	528, 1495,
	-2, 0,
	-1, 109,
	151, 1466,
	170, 1466,
	183, 1466,
	238, 1466,
	271, 1466,
	336, 1466,
	346, 1466,
	522, 1466,
	-2, 1437,
	-1, 148,
	159, 864,
	257, 864,
	388, 831,
	448, 831,
	488, 831,
	508, 864,
	510, 831,
	-2, 0,
	-1, 150,
	4, 1497,
	21, 1497,
	22, 1497,
	23, 1497,
	24, 1497,
	25, 1497,
	26, 1497,
	27, 1497,
	28, 1497,
	30, 1497,
	31, 1497,
	37, 1497,
	42, 1497,
	43, 1497,
	45, 1497,
	46, 1497,
	47, 1497,
	48, 1497,
	49, 1497,
	50, 1497,
	51, 1497,
	52, 1497,
	54, 1497,
	55, 1497,
	56, 1497,
	57, 1497,
	59, 1497,
	60, 1497,
	61, 1497,
	62, 1497,
	63, 1497,
	64, 1497,
	65, 1497,
	69, 1497,
	70, 1497,
	71, 1497,
	72, 1497,
	74, 1497,
	75, 1497,
	76, 1497,
	80, 1497,
	81, 1497,
	82, 1497,
	83, 1497,
	84, 1497,
	85, 1497,
	86, 1497,
	89, 1497,
	90, 1497,
	91, 1497,
	92, 1497,
	93, 1497,
	95, 1497,
	97, 1497,
	98, 1497,
	99, 1497,
	100, 1497,
	101, 1497,
	102, 1497,
	104, 1497,
	105, 1497,
	106, 1497,
	108, 1497,
	109, 1497,
	110, 1497,
	118, 1497,
	119, 1497,
	120, 1497,
	121, 1497,
	122, 1497,
	124, 1497,
	125, 1497,
	126, 1497,
	128, 1497,
	129, 1497,
	130, 1497,
	132, 1497,
	133, 1497,
	134, 1497,
	136, 1497,
	137, 1497,
	138, 1497,
	141, 1497,
	142, 1497,
	143, 1497,
	145, 1497,
	146, 1497,
	148, 1497,
	149, 1497,
	150, 1497,
	152, 1497,
	153, 1497,
	154, 1497,
	155, 1497,
	156, 1497,
	157, 1497,
	158, 1497,
	159, 1497,
	160, 1497,
	161, 1497,
	162, 1497,
	163, 1497,
	164, 1497,
	165, 1497,
	166, 1497,
	167, 1497,
	169, 1497,
	175, 1497,
	176, 1497,
	177, 1497,
	178, 1497,
	182, 1497,
	184, 1497,
	188, 1497,
	189, 1497,
	190, 1497,
	191, 1497,
	192, 1497,
	193, 1497,
	194, 1497,
	195, 1497,
	196, 1497,
	197, 1497,
	198, 1497,
	199, 1497,
	200, 1497,
	202, 1497,
	203, 1497,
	205, 1497,
	206, 1497,
	208, 1497,
	209, 1497,
	210, 1497,
	211, 1497,
	212, 1497,
	213, 1497,
	214, 1497,
	215, 1497,
	216, 1497,
	218, 1497,
	219, 1497,
	221, 1497,
	222, 1497,
	223, 1497,
	224, 1497,
	228, 1497,
	229, 1497,
	230, 1497,
	231, 1497,
	232, 1497,
	235, 1497,
	236, 1497,
	237, 1497,
	239, 1497,
	241, 1497,
	242, 1497,
	244, 1497,
	246, 1497,
	247, 1497,
	248, 1497,
	250, 1497,
	254, 1497,
	255, 1497,
	256, 1497,
	257, 1497,
	258, 1497,
	259, 1497,
	261, 1497,
	262, 1497,
	263, 1497,
	265, 1497,
	266, 1497,
	268, 1497,
	269, 1497,
	272, 1497,
	276, 1497,
	277, 1497,
	278, 1497,
	281, 1497,
	282, 1497,
	283, 1497,
	284, 1497,
	286, 1497,
	287, 1497,
	288, 1497,
	289, 1497,
	290, 1497,
	291, 1497,
	292, 1497,
	293, 1497,
	294, 1497,
	295, 1497,
	296, 1497,
	297, 1497,
	298, 1497,
	299, 1497,
	300, 1497,
	301, 1497,
	302, 1497,
	303, 1497,
	304, 1497,
	305, 1497,
	306, 1497,
	307, 1497,
	309, 1497,
	311, 1497,
	312, 1497,
	313, 1497,
	314, 1497,
	315, 1497,
	316, 1497,
	317, 1497,
	318, 1497,
	319, 1497,
	320, 1497,
	321, 1497,
	322, 1497,
	324, 1497,
	326, 1497,
	328, 1497,
	329, 1497,
	331, 1497,
	332, 1497,
	333, 1497,
	334, 1497,
	335, 1497,
	338, 1497,
	341, 1497,
	342, 1497,
	343, 1497,
	344, 1497,
	347, 1497,
	348, 1497,
	349, 1497,
	351, 1497,
	353, 1497,
	354, 1497,
	355, 1497,
	356, 1497,
	357, 1497,
	358, 1497,
	359, 1497,
	360, 1497,
	361, 1497,
	362, 1497,
	363, 1497,
	364, 1497,
	365, 1497,
	367, 1497,
	368, 1497,
	369, 1497,
	370, 1497,
	371, 1497,
	372, 1497,
	373, 1497,
	374, 1497,
	375, 1497,
	376, 1497,
	377, 1497,
	378, 1497,
	379, 1497,
	380, 1497,
	381, 1497,
	383, 1497,
	384, 1497,
	386, 1497,
	387, 1497,
	388, 1497,
	389, 1497,
	390, 1497,
	391, 1497,
	392, 1497,
	393, 1497,
	394, 1497,
	395, 1497,
	396, 1497,
	397, 1497,
	399, 1497,
	401, 1497,
	402, 1497,
	403, 1497,
	408, 1497,
	410, 1497,
	411, 1497,
	412, 1497,
	413, 1497,
	414, 1497,
	415, 1497,
	416, 1497,
	417, 1497,
	418, 1497,
	420, 1497,
	421, 1497,
	422, 1497,
	424, 1497,
	425, 1497,
	426, 1497,
	427, 1497,
	428, 1497,
	429, 1497,
	431, 1497,
	432, 1497,
	433, 1497,
	434, 1497,
	435, 1497,
	436, 1497,
	437, 1497,
	438, 1497,
	439, 1497,
	440, 1497,
	441, 1497,
	443, 1497,
	444, 1497,
	445, 1497,
	446, 1497,
	447, 1497,
	448, 1497,
	450, 1497,
	451, 1497,
	452, 1497,
	453, 1497,
	454, 1497,
	455, 1497,
	457, 1497,
	458, 1497,
	459, 1497,
	460, 1497,
	461, 1497,
	462, 1497,
	463, 1497,
	465, 1497,
	467, 1497,
	468, 1497,
	469, 1497,
	470, 1497,
	471, 1497,
	472, 1497,
	473, 1497,
	474, 1497,
	475, 1497,
	476, 1497,
	477, 1497,
	478, 1497,
	479, 1497,
	480, 1497,
	481, 1497,
	482, 1497,
	484, 1497,
	485, 1497,
	487, 1497,
	488, 1497,
	490, 1497,
	491, 1497,
	492, 1497,
	493, 1497,
	494, 1497,
	495, 1497,
	496, 1497,
	497, 1497,
	498, 1497,
	500, 1497,
	501, 1497,
	502, 1497,
	503, 1497,
	504, 1497,
	506, 1497,
	508, 1497,
	509, 1497,
	510, 1497,
	511, 1497,
	512, 1497,
	513, 1497,
	515, 1497,
	516, 1497,
	517, 1497,
	518, 1497,
	520, 1497,
	521, 1497,
	524, 1497,
	525, 1497,
	526, 1497,
	527, 1497,
	528, 1497,
	529, 1497,
	530, 1497,
	532, 1497,
	535, 1497,
	536, 1497,
	537, 1497,
	538, 1497,
	539, 1497,
	540, 1497,
	542, 1497,
	543, 1497,
	544, 1497,
	545, 1497,
	551, 1497,
	552, 1497,
	553, 1497,
	554, 1497,
	555, 1497,
	556, 1497,
	-2, 0,
	-1, 151,
	1, 1352,
	131, 1352,
	246, 1352,
	325, 1352,
	383, 1352,
	392, 1352,
	560, 1352,
	584, 1352,
	-2, 0,
	-1, 153,
	1, 1352,
	584, 1352,
	-2, 0,
	-1, 154,
	1, 1352,
	584, 1352,
	-2, 0,
	-1, 155,
	1, 1352,
	505, 1352,
	584, 1352,
	-2, 0,
	-1, 183,
	151, 1465,
	170, 1465,
	183, 1465,
	238, 1465,
	271, 1465,
	336, 1465,
	346, 1465,
	522, 1465,
	-2, 1440,
	-1, 229,
	4, 1504,
	5, 1504,
	6, 1504,
	7, 1504,
	8, 1504,
	9, 1504,
	10, 1504,
	21, 1504,
	22, 1504,
	23, 1504,
	24, 1504,
	25, 1504,
	26, 1504,
	27, 1504,
	28, 1504,
	30, 1504,
	31, 1504,
	37, 1504,
	38, 1504,
	42, 1504,
	43, 1504,
	44, 1504,
	45, 1504,
	46, 1504,
	47, 1504,
	48, 1504,
	49, 1504,
	50, 1504,
	51, 1504,
	52, 1504,
	54, 1504,
	55, 1504,
	56, 1504,
	57, 1504,
	59, 1504,
	60, 1504,
	61, 1504,
	62, 1504,
	63, 1504,
	64, 1504,
	65, 1504,
	66, 1504,
	67, 1504,
	68, 1504,
	69, 1504,
	70, 1504,
	71, 1504,
	72, 1504,
	74, 1504,
	75, 1504,
	76, 1504,
	78, 1504,
	80, 1504,
	81, 1504,
	82, 1504,
	83, 1504,
	84, 1504,
	85, 1504,
	86, 1504,
	89, 1504,
	90, 1504,
	91, 1504,
	92, 1504,
	93, 1504,
	95, 1504,
	97, 1504,
	98, 1504,
	99, 1504,
	100, 1504,
	101, 1504,
	102, 1504,
	104, 1504,
	105, 1504,
	106, 1504,
	107, 1504,
	108, 1504,
	109, 1504,
	110, 1504,
	111, 1504,
	112, 1504,
	113, 1504,
	114, 1504,
	115, 1504,
	116, 1504,
	117, 1504,
	118, 1504,
	119, 1504,
	120, 1504,
	121, 1504,
	122, 1504,
	123, 1504,
	124, 1504,
	125, 1504,
	126, 1504,
	127, 1504,
	128, 1504,
	129, 1504,
	130, 1504,
	132, 1504,
	133, 1504,
	134, 1504,
	136, 1504,
	137, 1504,
	138, 1504,
	141, 1504,
	142, 1504,
	143, 1504,
	145, 1504,
	146, 1504,
	148, 1504,
	149, 1504,
	150, 1504,
	152, 1504,
	153, 1504,
	154, 1504,
	155, 1504,
	156, 1504,
	157, 1504,
	158, 1504,
	159, 1504,
	160, 1504,
	161, 1504,
	162, 1504,
	163, 1504,
	164, 1504,
	165, 1504,
	166, 1504,
	167, 1504,
	168, 1504,
	169, 1504,
	175, 1504,
	176, 1504,
	177, 1504,
	178, 1504,
	182, 1504,
	184, 1504,
	187, 1504,
	188, 1504,
	189, 1504,
	190, 1504,
	191, 1504,
	192, 1504,
	193, 1504,
	194, 1504,
	195, 1504,
	196, 1504,
	197, 1504,
	198, 1504,
	199, 1504,
	200, 1504,
	202, 1504,
	203, 1504,
	205, 1504,
	206, 1504,
	208, 1504,
	209, 1504,
	210, 1504,
	211, 1504,
	212, 1504,
	213, 1504,
	214, 1504,
	215, 1504,
	216, 1504,
	217, 1504,
	218, 1504,
	219, 1504,
	221, 1504,
	222, 1504,
	223, 1504,
	224, 1504,
	228, 1504,
	229, 1504,
	230, 1504,
	231, 1504,
	232, 1504,
	234, 1504,
	235, 1504,
	236, 1504,
	237, 1504,
	239, 1504,
	241, 1504,
	242, 1504,
	243, 1504,
	244, 1504,
	245, 1504,
	246, 1504,
	247, 1504,
	248, 1504,
	249, 1504,
	250, 1504,
	254, 1504,
	255, 1504,
	256, 1504,
	257, 1504,
	258, 1504,
	259, 1504,
	261, 1504,
	262, 1504,
	263, 1504,
	265, 1504,
	266, 1504,
	267, 1504,
	268, 1504,
	269, 1504,
	270, 1504,
	272, 1504,
	276, 1504,
	277, 1504,
	278, 1504,
	279, 1504,
	280, 1504,
	281, 1504,
	282, 1504,
	283, 1504,
	284, 1504,
	286, 1504,
	287, 1504,
	288, 1504,
	289, 1504,
	290, 1504,
	291, 1504,
	292, 1504,
	293, 1504,
	294, 1504,
	295, 1504,
	296, 1504,
	297, 1504,
	298, 1504,
	299, 1504,
	300, 1504,
	301, 1504,
	302, 1504,
	303, 1504,
	304, 1504,
	305, 1504,
	306, 1504,
	307, 1504,
	309, 1504,
	310, 1504,
	311, 1504,
	312, 1504,
	313, 1504,
	314, 1504,
	315, 1504,
	316, 1504,
	317, 1504,
	318, 1504,
	319, 1504,
	320, 1504,
	321, 1504,
	322, 1504,
	323, 1504,
	324, 1504,
	325, 1504,
	326, 1504,
	327, 1504,
	328, 1504,
	329, 1504,
	330, 1504,
	331, 1504,
	332, 1504,
	333, 1504,
	334, 1504,
	335, 1504,
	338, 1504,
	342, 1504,
	343, 1504,
	344, 1504,
	347, 1504,
	348, 1504,
	349, 1504,
	350, 1504,
	351, 1504,
	352, 1504,
	353, 1504,
	354, 1504,
	355, 1504,
	356, 1504,
	357, 1504,
	358, 1504,
	359, 1504,
	360, 1504,
	361, 1504,
	362, 1504,
	363, 1504,
	364, 1504,
	365, 1504,
	367, 1504,
	368, 1504,
	369, 1504,
	370, 1504,
	371, 1504,
	372, 1504,
	373, 1504,
	374, 1504,
	375, 1504,
	376, 1504,
	377, 1504,
	378, 1504,
	379, 1504,
	380, 1504,
	381, 1504,
	383, 1504,
	384, 1504,
	386, 1504,
	387, 1504,
	388, 1504,
	389, 1504,
	390, 1504,
	391, 1504,
	392, 1504,
	393, 1504,
	394, 1504,
	395, 1504,
	396, 1504,
	397, 1504,
	399, 1504,
	401, 1504,
	402, 1504,
	403, 1504,
	408, 1504,
	410, 1504,
	411, 1504,
	412, 1504,
	413, 1504,
	414, 1504,
	415, 1504,
	416, 1504,
	417, 1504,
	418, 1504,
	420, 1504,
	421, 1504,
	422, 1504,
	423, 1504,
	424, 1504,
	425, 1504,
	426, 1504,
	427, 1504,
	428, 1504,
	429, 1504,
	431, 1504,
	432, 1504,
	433, 1504,
	434, 1504,
	435, 1504,
	436, 1504,
	437, 1504,
	438, 1504,
	439, 1504,
	440, 1504,
	441, 1504,
	443, 1504,
	444, 1504,
	445, 1504,
	446, 1504,
	447, 1504,
	448, 1504,
	449, 1504,
	450, 1504,
	451, 1504,
	452, 1504,
	453, 1504,
	454, 1504,
	455, 1504,
	456, 1504,
	457, 1504,
	458, 1504,
	459, 1504,
	460, 1504,
	461, 1504,
	462, 1504,
	463, 1504,
	465, 1504,
	467, 1504,
	468, 1504,
	469, 1504,
	470, 1504,
	471, 1504,
	472, 1504,
	473, 1504,
	474, 1504,
	475, 1504,
	476, 1504,
	477, 1504,
	478, 1504,
	479, 1504,
	480, 1504,
	481, 1504,
	482, 1504,
	484, 1504,
	485, 1504,
	486, 1504,
	487, 1504,
	488, 1504,
	490, 1504,
	491, 1504,
	492, 1504,
	493, 1504,
	494, 1504,
	495, 1504,
	496, 1504,
	497, 1504,
	498, 1504,
	500, 1504,
	501, 1504,
	502, 1504,
	503, 1504,
	504, 1504,
	506, 1504,
	508, 1504,
	509, 1504,
	510, 1504,
	511, 1504,
	512, 1504,
	513, 1504,
	514, 1504,
	515, 1504,
	516, 1504,
	517, 1504,
	518, 1504,
	520, 1504,
	521, 1504,
	523, 1504,
	524, 1504,
	525, 1504,
	526, 1504,
	527, 1504,
	528, 1504,
	529, 1504,
	530, 1504,
	531, 1504,
	532, 1504,
	535, 1504,
	536, 1504,
	537, 1504,
	538, 1504,
	539, 1504,
	540, 1504,
	542, 1504,
	543, 1504,
	544, 1504,
	545, 1504,
	551, 1504,
	552, 1504,
	553, 1504,
	554, 1504,
	555, 1504,
	556, 1504,
	557, 1504,
	565, 1504,
	572, 1504,
	573, 1504,
	574, 1504,
	581, 1504,
	585, 1504,
	-2, 0,
	-1, 724,
	4, 1234,
	21, 1234,
	22, 1234,
	23, 1234,
	24, 1234,
	25, 1234,
	26, 1234,
	27, 1234,
	28, 1234,
	30, 1234,
	31, 1234,
	37, 1234,
	42, 1234,
	43, 1234,
	45, 1234,
	46, 1234,
	47, 1234,
	48, 1234,
	49, 1234,
	50, 1234,
	51, 1234,
	52, 1234,
	54, 1234,
	55, 1234,
	56, 1234,
	57, 1234,
	59, 1234,
	60, 1234,
	61, 1234,
	62, 1234,
	63, 1234,
	64, 1234,
	65, 1234,
	69, 1234,
	70, 1234,
	71, 1234,
	72, 1234,
	74, 1234,
	75, 1234,
	76, 1234,
	80, 1234,
	81, 1234,
	82, 1234,
	83, 1234,
	84, 1234,
	85, 1234,
	86, 1234,
	89, 1234,
	90, 1234,
	91, 1234,
	92, 1234,
	93, 1234,
	95, 1234,
	97, 1234,
	98, 1234,
	99, 1234,
	100, 1234,
	101, 1234,
	102, 1234,
	104, 1234,
	105, 1234,
	106, 1234,
	108, 1234,
	109, 1234,
	110, 1234,
	118, 1234,
	119, 1234,
	120, 1234,
	121, 1234,
	122, 1234,
	124, 1234,
	125, 1234,
	126, 1234,
	128, 1234,
	129, 1234,
	130, 1234,
	132, 1234,
	133, 1234,
	134, 1234,
	136, 1234,
	137, 1234,
	138, 1234,
	141, 1234,
	142, 1234,
	143, 1234,
	145, 1234,
	146, 1234,
	148, 1234,
	149, 1234,
	150, 1234,
	152, 1234,
	153, 1234,
	154, 1234,
	155, 1234,
	156, 1234,
	157, 1234,
	158, 1234,
	159, 1234,
	160, 1234,
	161, 1234,
	162, 1234,
	163, 1234,
	164, 1234,
	165, 1234,
	166, 1234,
	167, 1234,
	169, 1234,
	175, 1234,
	176, 1234,
	177, 1234,
	178, 1234,
	182, 1234,
	184, 1234,
	188, 1234,
	189, 1234,
	190, 1234,
	191, 1234,
	192, 1234,
	193, 1234,
	194, 1234,
	195, 1234,
	196, 1234,
	197, 1234,
	198, 1234,
	199, 1234,
	200, 1234,
	202, 1234,
	203, 1234,
	205, 1234,
	206, 1234,
	208, 1234,
	209, 1234,
	210, 1234,
	211, 1234,
	212, 1234,
	213, 1234,
	214, 1234,
	215, 1234,
	216, 1234,
	218, 1234,
	219, 1234,
	221, 1234,
	222, 1234,
	223, 1234,
	224, 1234,
	228, 1234,
	229, 1234,
	230, 1234,
	231, 1234,
	232, 1234,
	235, 1234,
	236, 1234,
	237, 1234,
	239, 1234,
	241, 1234,
	242, 1234,
	244, 1234,
	246, 1234,
	247, 1234,
	248, 1234,
	250, 1234,
	254, 1234,
	255, 1234,
	256, 1234,
	257, 1234,
	258, 1234,
	259, 1234,
	261, 1234,
	262, 1234,
	263, 1234,
	265, 1234,
	266, 1234,
	268, 1234,
	269, 1234,
	272, 1234,
	276, 1234,
	277, 1234,
	278, 1234,
	281, 1234,
	282, 1234,
	283, 1234,
	284, 1234,
	286, 1234,
	287, 1234,
	288, 1234,
	289, 1234,
	290, 1234,
	291, 1234,
	292, 1234,
	293, 1234,
	294, 1234,
	295, 1234,
	296, 1234,
	297, 1234,
	298, 1234,
	299, 1234,
	300, 1234,
	301, 1234,
	302, 1234,
	303, 1234,
	304, 1234,
	305, 1234,
	306, 1234,
	307, 1234,
	309, 1234,
	311, 1234,
	312, 1234,
	313, 1234,
	314, 1234,
	315, 1234,
	316, 1234,
	317, 1234,
	318, 1234,
	319, 1234,
	320, 1234,
	321, 1234,
	322, 1234,
	324, 1234,
	326, 1234,
	328, 1234,
	329, 1234,
	331, 1234,
	332, 1234,
	333, 1234,
	334, 1234,
	335, 1234,
	338, 1234,
	342, 1234,
	343, 1234,
	344, 1234,
	347, 1234,
	348, 1234,
	349, 1234,
	351, 1234,
	353, 1234,
	354, 1234,
	355, 1234,
	356, 1234,
	357, 1234,
	358, 1234,
	359, 1234,
	360, 1234,
	361, 1234,
	362, 1234,
	363, 1234,
	364, 1234,
	365, 1234,
	367, 1234,
	368, 1234,
	369, 1234,
	370, 1234,
	371, 1234,
	372, 1234,
	373, 1234,
	374, 1234,
	375, 1234,
	376, 1234,
	377, 1234,
	378, 1234,
	379, 1234,
	380, 1234,
	381, 1234,
	383, 1234,
	384, 1234,
	386, 1234,
	387, 1234,
	388, 1234,
	389, 1234,
	390, 1234,
	391, 1234,
	392, 1234,
	393, 1234,
	394, 1234,
	395, 1234,
	396, 1234,
	397, 1234,
	399, 1234,
	401, 1234,
	402, 1234,
	403, 1234,
	408, 1234,
	410, 1234,
	411, 1234,
	412, 1234,
	413, 1234,
	414, 1234,
	415, 1234,
	416, 1234,
	417, 1234,
	418, 1234,
	420, 1234,
	421, 1234,
	422, 1234,
	424, 1234,
	425, 1234,
	426, 1234,
	427, 1234,
	428, 1234,
	429, 1234,
	431, 1234,
	432, 1234,
	433, 1234,
	434, 1234,
	435, 1234,
	436, 1234,
	437, 1234,
	438, 1234,
	439, 1234,
	440, 1234,
	441, 1234,
	443, 1234,
	444, 1234,
	445, 1234,
	446, 1234,
	447, 1234,
	448, 1234,
	450, 1234,
	451, 1234,
	452, 1234,
	453, 1234,
	454, 1234,
	455, 1234,
	457, 1234,
	458, 1234,
	459, 1234,
	460, 1234,
	461, 1234,
	462, 1234,
	463, 1234,
	465, 1234,
	467, 1234,
	468, 1234,
	469, 1234,
	470, 1234,
	471, 1234,
	472, 1234,
	473, 1234,
	474, 1234,
	475, 1234,
	476, 1234,
	477, 1234,
	478, 1234,
	479, 1234,
	480, 1234,
	481, 1234,
	482, 1234,
	484, 1234,
	485, 1234,
	487, 1234,
	488, 1234,
	490, 1234,
	491, 1234,
	492, 1234,
	493, 1234,
	494, 1234,
	495, 1234,
	496, 1234,
	497, 1234,
	498, 1234,
	500, 1234,
	501, 1234,
	502, 1234,
	503, 1234,
	504, 1234,
	506, 1234,
	508, 1234,
	509, 1234,
	510, 1234,
	511, 1234,
	512, 1234,
	513, 1234,
	515, 1234,
	516, 1234,
	517, 1234,
	518, 1234,
	520, 1234,
	521, 1234,
	524, 1234,
	525, 1234,
	526, 1234,
	527, 1234,
	528, 1234,
	529, 1234,
	530, 1234,
	532, 1234,
	535, 1234,
	536, 1234,
	537, 1234,
	538, 1234,
	539, 1234,
	540, 1234,
	542, 1234,
	543, 1234,
	544, 1234,
	545, 1234,
	551, 1234,
	552, 1234,
	553, 1234,
	554, 1234,
	555, 1234,
	556, 1234,
	-2, 0,
	-1, 743,
	186, 2262,
	505, 2262,
	564, 2262,
	583, 2262,
	-2, 0,
	-1, 744,
	186, 2366,
	505, 2366,
	564, 2366,
	583, 2366,
	-2, 0,
	-1, 745,
	186, 2249,
	505, 2249,
	564, 2249,
	583, 2249,
	-2, 0,
	-1, 747,
	186, 2497,
	505, 2497,
	564, 2497,
	583, 2497,
	-2, 0,
	-1, 749,
	186, 2537,
	505, 2537,
	564, 2537,
	583, 2537,
	-2, 0,
	-1, 756,
	186, 2393,
	505, 2393,
	564, 2393,
	583, 2393,
	-2, 666,
	-1, 786,
	583, 2197,
	586, 2197,
	-2, 937,
	-1, 787,
	583, 2199,
	586, 2199,
	-2, 938,
	-1, 788,
	583, 2198,
	586, 2198,
	-2, 939,
	-1, 789,
	586, 2124,
	-2, 940,
	-1, 812,
	183, 240,
	-2, 0,
	-1, 836,
	44, 2171,
	-2, 0,
	-1, 837,
	542, 1212,
	-2, 1007,
	-1, 853,
	4, 1633,
	21, 1633,
	22, 1633,
	23, 1633,
	24, 1633,
	25, 1633,
	26, 1633,
	27, 1633,
	28, 1633,
	30, 1633,
	31, 1633,
	37, 1633,
	42, 1633,
	43, 1633,
	45, 1633,
	46, 1633,
	47, 1633,
	48, 1633,
	49, 1633,
	50, 1633,
	51, 1633,
	52, 1633,
	54, 1633,
	55, 1633,
	56, 1633,
	57, 1633,
	59, 1633,
	60, 1633,
	61, 1633,
	62, 1633,
	63, 1633,
	64, 1633,
	65, 1633,
	69, 1633,
	70, 1633,
	71, 1633,
	72, 1633,
	74, 1633,
	75, 1633,
	76, 1633,
	80, 1633,
	81, 1633,
	82, 1633,
	83, 1633,
	84, 1633,
	85, 1633,
	86, 1633,
	89, 1633,
	90, 1633,
	91, 1633,
	92, 1633,
	93, 1633,
	95, 1633,
	97, 1633,
	98, 1633,
	99, 1633,
	100, 1633,
	101, 1633,
	102, 1633,
	104, 1633,
	105, 1633,
	106, 1633,
	108, 1633,
	109, 1633,
	110, 1633,
	118, 1633,
	119, 1633,
	120, 1633,
	121, 1633,
	122, 1633,
	124, 1633,
	125, 1633,
	126, 1633,
	128, 1633,
	129, 1633,
	130, 1633,
	132, 1633,
	133, 1633,
	134, 1633,
	136, 1633,
	137, 1633,
	138, 1633,
	141, 1633,
	142, 1633,
	143, 1633,
	145, 1633,
	146, 1633,
	148, 1633,
	149, 1633,
	150, 1633,
	152, 1633,
	153, 1633,
	154, 1633,
	155, 1633,
	156, 1633,
	157, 1633,
	158, 1633,
	159, 1633,
	160, 1633,
	161, 1633,
	162, 1633,
	163, 1633,
	164, 1633,
	165, 1633,
	166, 1633,
	167, 1633,
	169, 1633,
	175, 1633,
	176, 1633,
	177, 1633,
	178, 1633,
	182, 1633,
	184, 1633,
	188, 1633,
	189, 1633,
	190, 1633,
	191, 1633,
	192, 1633,
	193, 1633,
	194, 1633,
	195, 1633,
	196, 1633,
	197, 1633,
	198, 1633,
	199, 1633,
	200, 1633,
	202, 1633,
	203, 1633,
	205, 1633,
	206, 1633,
	208, 1633,
	209, 1633,
	210, 1633,
	211, 1633,
	212, 1633,
	213, 1633,
	214, 1633,
	215, 1633,
	216, 1633,
	218, 1633,
	219, 1633,
	221, 1633,
	222, 1633,
	223, 1633,
	224, 1633,
	228, 1633,
	229, 1633,
	230, 1633,
	231, 1633,
	232, 1633,
	235, 1633,
	236, 1633,
	237, 1633,
	239, 1633,
	241, 1633,
	242, 1633,
	244, 1633,
	246, 1633,
	247, 1633,
	248, 1633,
	250, 1633,
	254, 1633,
	255, 1633,
	256, 1633,
	257, 1633,
	258, 1633,
	259, 1633,
	261, 1633,
	262, 1633,
	263, 1633,
	265, 1633,
	266, 1633,
	268, 1633,
	269, 1633,
	272, 1633,
	276, 1633,
	277, 1633,
	278, 1633,
	281, 1633,
	282, 1633,
	283, 1633,
	284, 1633,
	286, 1633,
	287, 1633,
	288, 1633,
	289, 1633,
	290, 1633,
	291, 1633,
	292, 1633,
	293, 1633,
	294, 1633,
	295, 1633,
	296, 1633,
	297, 1633,
	298, 1633,
	299, 1633,
	300, 1633,
	301, 1633,
	302, 1633,
	303, 1633,
	304, 1633,
	305, 1633,
	306, 1633,
	307, 1633,
	309, 1633,
	311, 1633,
	312, 1633,
	313, 1633,
	314, 1633,
	315, 1633,
	316, 1633,
	317, 1633,
	318, 1633,
	319, 1633,
	320, 1633,
	321, 1633,
	322, 1633,
	324, 1633,
	326, 1633,
	328, 1633,
	329, 1633,
	331, 1633,
	332, 1633,
	333, 1633,
	334, 1633,
	335, 1633,
	338, 1633,
	342, 1633,
	343, 1633,
	344, 1633,
	347, 1633,
	348, 1633,
	349, 1633,
	351, 1633,
	353, 1633,
	354, 1633,
	355, 1633,
	356, 1633,
	357, 1633,
	358, 1633,
	359, 1633,
	360, 1633,
	361, 1633,
	362, 1633,
	363, 1633,
	364, 1633,
	365, 1633,
	367, 1633,
	368, 1633,
	369, 1633,
	370, 1633,
	371, 1633,
	372, 1633,
	373, 1633,
	374, 1633,
	375, 1633,
	376, 1633,
	377, 1633,
	378, 1633,
	379, 1633,
	380, 1633,
	381, 1633,
	383, 1633,
	384, 1633,
	386, 1633,
	387, 1633,
	388, 1633,
	389, 1633,
	390, 1633,
	391, 1633,
	392, 1633,
	393, 1633,
	394, 1633,
	395, 1633,
	396, 1633,
	397, 1633,
	399, 1633,
	401, 1633,
	402, 1633,
	403, 1633,
	408, 1633,
	410, 1633,
	411, 1633,
	412, 1633,
	413, 1633,
	414, 1633,
	415, 1633,
	416, 1633,
	417, 1633,
	418, 1633,
	420, 1633,
	421, 1633,
	422, 1633,
	424, 1633,
	425, 1633,
	426, 1633,
	427, 1633,
	428, 1633,
	429, 1633,
	431, 1633,
	432, 1633,
	433, 1633,
	434, 1633,
	435, 1633,
	436, 1633,
	437, 1633,
	438, 1633,
	439, 1633,
	440, 1633,
	441, 1633,
	443, 1633,
	444, 1633,
	445, 1633,
	446, 1633,
	447, 1633,
	448, 1633,
	450, 1633,
	451, 1633,
	452, 1633,
	453, 1633,
	454, 1633,
	455, 1633,
	457, 1633,
	458, 1633,
	459, 1633,
	460, 1633,
	461, 1633,
	462, 1633,
	463, 1633,
	465, 1633,
	467, 1633,
	468, 1633,
	469, 1633,
	470, 1633,
	471, 1633,
	472, 1633,
	473, 1633,
	474, 1633,
	475, 1633,
	476, 1633,
	477, 1633,
	478, 1633,
	479, 1633,
	480, 1633,
	481, 1633,
	482, 1633,
	484, 1633,
	485, 1633,
	487, 1633,
	488, 1633,
	490, 1633,
	491, 1633,
	492, 1633,
	493, 1633,
	494, 1633,
	495, 1633,
	496, 1633,
	497, 1633,
	498, 1633,
	500, 1633,
	501, 1633,
	502, 1633,
	503, 1633,
	504, 1633,
	506, 1633,
	508, 1633,
	509, 1633,
	510, 1633,
	511, 1633,
	512, 1633,
	513, 1633,
	515, 1633,
	516, 1633,
	517, 1633,
	518, 1633,
	520, 1633,
	521, 1633,
	524, 1633,
	525, 1633,
	526, 1633,
	527, 1633,
	528, 1633,
	529, 1633,
	530, 1633,
	532, 1633,
	535, 1633,
	536, 1633,
	537, 1633,
	538, 1633,
	539, 1633,
	540, 1633,
	542, 1633,
	543, 1633,
	544, 1633,
	545, 1633,
	551, 1633,
	552, 1633,
	553, 1633,
	554, 1633,
	555, 1633,
	556, 1633,
	-2, 0,
	-1, 861,
	258, 383,
	-2, 0,
	-1, 932,
	388, 832,
	448, 832,
	488, 832,
	510, 832,
	-2, 0,
	-1, 933,
	388, 831,
	448, 831,
	488, 831,
	510, 831,
	-2, 771,
	-1, 937,
	1, 878,
	580, 878,
	582, 878,
	584, 878,
	-2, 0,
	-1, 938,
	1, 806,
	580, 806,
	582, 806,
	584, 806,
	-2, 0,
	-1, 939,
	1, 810,
	580, 810,
	582, 810,
	584, 810,
	-2, 0,
	-1, 940,
	1, 936,
	183, 936,
	580, 936,
	582, 936,
	584, 936,
	-2, 0,
	-1, 948,
	1, 837,
	580, 837,
	582, 837,
	584, 837,
	-2, 0,
	-1, 954,
	1, 878,
	580, 878,
	582, 878,
	584, 878,
	-2, 0,
	-1, 955,
	1, 880,
	580, 880,
	582, 880,
	584, 880,
	-2, 0,
	-1, 956,
	1, 883,
	580, 883,
	582, 883,
	584, 883,
	-2, 0,
	-1, 962,
	1, 901,
	580, 901,
	582, 901,
	584, 901,
	-2, 0,
	-1, 963,
	1, 903,
	580, 903,
	582, 903,
	584, 903,
	-2, 0,
	-1, 968,
	1, 931,
	580, 931,
	582, 931,
	584, 931,
	-2, 0,
	-1, 1014,
	170, 1508,
	183, 1508,
	271, 1508,
	336, 1508,
	-2, 1444,
	-1, 1029,
	170, 1507,
	183, 1507,
	271, 1507,
	336, 1507,
	-2, 1441,
	-1, 1055,
	583, 2196,
	-2, 674,
	-1, 1083,
	5, 2188,
	581, 2186,
	-2, 2177,
	-1, 1091,
	5, 2209,
	581, 2206,
	-2, 2197,
	-1, 1092,
	5, 2210,
	581, 2207,
	-2, 2198,
	-1, 1100,
	583, 2194,
	-2, 2176,
	-1, 1101,
	581, 2619,
	-2, 2195,
	-1, 1124,
	581, 2618,
	-2, 2211,
	-1, 1125,
	5, 1708,
	-2, 2589,
	-1, 1126,
	5, 1709,
	-2, 2590,
	-1, 1127,
	5, 1710,
	-2, 2604,
	-1, 1128,
	5, 1711,
	-2, 2568,
	-1, 1129,
	5, 1712,
	-2, 2602,
	-1, 1130,
	5, 1720,
	-2, 2581,
	-1, 1131,
	5, 1707,
	-2, 2577,
	-1, 1132,
	5, 1707,
	-2, 2576,
	-1, 1133,
	5, 1707,
	-2, 2595,
	-1, 1134,
	5, 1718,
	-2, 2570,
	-1, 1135,
	5, 1723,
	-2, 2569,
	-1, 1136,
	5, 1725,
	-2, 2614,
	-1, 1139,
	5, 1747,
	-2, 2607,
	-1, 1140,
	5, 1739,
	-2, 2608,
	-1, 1141,
	5, 1747,
	-2, 2609,
	-1, 1142,
	5, 1743,
	-2, 2610,
	-1, 1143,
	5, 1693,
	-2, 2582,
	-1, 1144,
	5, 1694,
	-2, 2583,
	-1, 1145,
	5, 1695,
	-2, 2571,
	-1, 1173,
	5, 1730,
	-2, 2615,
	-1, 1174,
	5, 1731,
	-2, 2605,
	-1, 1175,
	5, 1732,
	543, 1732,
	-2, 2572,
	-1, 1176,
	5, 1733,
	543, 1733,
	-2, 2573,
	-1, 1213,
	581, 2206,
	-2, 2197,
	-1, 1214,
	581, 2207,
	-2, 2198,
	-1, 1314,
	186, 2537,
	505, 2537,
	564, 2537,
	583, 2537,
	-2, 0,
	-1, 1317,
	1, 652,
	584, 652,
	-2, 1360,
	-1, 1445,
	355, 2172,
	410, 2172,
	450, 2172,
	574, 2172,
	-2, 2162,
	-1, 1456,
	585, 2172,
	-2, 2173,
	-1, 1462,
	1, 1209,
	580, 1209,
	582, 1209,
	584, 1209,
	-2, 1493,
	-1, 1510,
	395, 1006,
	542, 1006,
	-2, 378,
	-1, 1527,
	44, 2170,
	-2, 972,
	-1, 1534,
	1, 1209,
	580, 1209,
	582, 1209,
	584, 1209,
	-2, 1493,
	-1, 1542,
	4, 1234,
	21, 1234,
	22, 1234,
	23, 1234,
	24, 1234,
	25, 1234,
	26, 1234,
	27, 1234,
	28, 1234,
	30, 1234,
	31, 1234,
	37, 1234,
	42, 1234,
	43, 1234,
	45, 1234,
	46, 1234,
	47, 1234,
	48, 1234,
	49, 1234,
	50, 1234,
	51, 1234,
	52, 1234,
	54, 1234,
	55, 1234,
	56, 1234,
	57, 1234,
	59, 1234,
	60, 1234,
	61, 1234,
	62, 1234,
	63, 1234,
	64, 1234,
	65, 1234,
	69, 1234,
	70, 1234,
	71, 1234,
	72, 1234,
	74, 1234,
	75, 1234,
	76, 1234,
	80, 1234,
	81, 1234,
	82, 1234,
	83, 1234,
	84, 1234,
	85, 1234,
	86, 1234,
	89, 1234,
	90, 1234,
	91, 1234,
	92, 1234,
	93, 1234,
	95, 1234,
	97, 1234,
	98, 1234,
	99, 1234,
	100, 1234,
	101, 1234,
	102, 1234,
	104, 1234,
	105, 1234,
	106, 1234,
	108, 1234,
	109, 1234,
	110, 1234,
	118, 1234,
	119, 1234,
	120, 1234,
	121, 1234,
	122, 1234,
	124, 1234,
	125, 1234,
	126, 1234,
	128, 1234,
	129, 1234,
	130, 1234,
	132, 1234,
	133, 1234,
	134, 1234,
	136, 1234,
	137, 1234,
	138, 1234,
	141, 1234,
	142, 1234,
	143, 1234,
	145, 1234,
	146, 1234,
	148, 1234,
	149, 1234,
	150, 1234,
	152, 1234,
	153, 1234,
	154, 1234,
	155, 1234,
	156, 1234,
	157, 1234,
	158, 1234,
	159, 1234,
	160, 1234,
	161, 1234,
	162, 1234,
	163, 1234,
	164, 1234,
	165, 1234,
	166, 1234,
	167, 1234,
	175, 1234,
	176, 1234,
	177, 1234,
	178, 1234,
	182, 1234,
	184, 1234,
	188, 1234,
	189, 1234,
	190, 1234,
	191, 1234,
	192, 1234,
	193, 1234,
	194, 1234,
	195, 1234,
	196, 1234,
	197, 1234,
	198, 1234,
	199, 1234,
	200, 1234,
	202, 1234,
	203, 1234,
	205, 1234,
	206, 1234,
	208, 1234,
	209, 1234,
	210, 1234,
	211, 1234,
	212, 1234,
	213, 1234,
	214, 1234,
	215, 1234,
	216, 1234,
	218, 1234,
	219, 1234,
	221, 1234,
	222, 1234,
	223, 1234,
	224, 1234,
	229, 1234,
	230, 1234,
	231, 1234,
	232, 1234,
	235, 1234,
	236, 1234,
	237, 1234,
	239, 1234,
	241, 1234,
	242, 1234,
	244, 1234,
	246, 1234,
	247, 1234,
	248, 1234,
	250, 1234,
	254, 1234,
	255, 1234,
	256, 1234,
	257, 1234,
	258, 1234,
	259, 1234,
	261, 1234,
	262, 1234,
	263, 1234,
	265, 1234,
	266, 1234,
	268, 1234,
	269, 1234,
	272, 1234,
	276, 1234,
	277, 1234,
	278, 1234,
	281, 1234,
	282, 1234,
	283, 1234,
	284, 1234,
	286, 1234,
	287, 1234,
	288, 1234,
	289, 1234,
	290, 1234,
	291, 1234,
	292, 1234,
	293, 1234,
	294, 1234,
	295, 1234,
	296, 1234,
	297, 1234,
	298, 1234,
	299, 1234,
	300, 1234,
	301, 1234,
	302, 1234,
	303, 1234,
	304, 1234,
	305, 1234,
	306, 1234,
	307, 1234,
	309, 1234,
	311, 1234,
	312, 1234,
	313, 1234,
	314, 1234,
	315, 1234,
	316, 1234,
	317, 1234,
	318, 1234,
	319, 1234,
	320, 1234,
	321, 1234,
	322, 1234,
	324, 1234,
	328, 1234,
	329, 1234,
	331, 1234,
	332, 1234,
	333, 1234,
	334, 1234,
	335, 1234,
	338, 1234,
	340, 1234,
	342, 1234,
	343, 1234,
	344, 1234,
	347, 1234,
	348, 1234,
	349, 1234,
	351, 1234,
	353, 1234,
	354, 1234,
	355, 1234,
	356, 1234,
	357, 1234,
	358, 1234,
	359, 1234,
	360, 1234,
	361, 1234,
	362, 1234,
	363, 1234,
	364, 1234,
	365, 1234,
	367, 1234,
	368, 1234,
	369, 1234,
	370, 1234,
	371, 1234,
	372, 1234,
	373, 1234,
	374, 1234,
	375, 1234,
	376, 1234,
	377, 1234,
	378, 1234,
	379, 1234,
	380, 1234,
	381, 1234,
	383, 1234,
	384, 1234,
	386, 1234,
	387, 1234,
	388, 1234,
	389, 1234,
	390, 1234,
	391, 1234,
	392, 1234,
	393, 1234,
	394, 1234,
	395, 1234,
	396, 1234,
	397, 1234,
	399, 1234,
	401, 1234,
	402, 1234,
	403, 1234,
	408, 1234,
	410, 1234,
	411, 1234,
	412, 1234,
	413, 1234,
	414, 1234,
	415, 1234,
	416, 1234,
	417, 1234,
	418, 1234,
	420, 1234,
	421, 1234,
	422, 1234,
	424, 1234,
	425, 1234,
	426, 1234,
	427, 1234,
	428, 1234,
	429, 1234,
	431, 1234,
	432, 1234,
	433, 1234,
	434, 1234,
	435, 1234,
	436, 1234,
	437, 1234,
	438, 1234,
	439, 1234,
	440, 1234,
	441, 1234,
	443, 1234,
	444, 1234,
	445, 1234,
	446, 1234,
	447, 1234,
	448, 1234,
	450, 1234,
	451, 1234,
	452, 1234,
	453, 1234,
	454, 1234,
	455, 1234,
	457, 1234,
	458, 1234,
	459, 1234,
	460, 1234,
	461, 1234,
	462, 1234,
	463, 1234,
	465, 1234,
	467, 1234,
	468, 1234,
	469, 1234,
	470, 1234,
	471, 1234,
	472, 1234,
	473, 1234,
	474, 1234,
	475, 1234,
	476, 1234,
	477, 1234,
	478, 1234,
	479, 1234,
	480, 1234,
	481, 1234,
	482, 1234,
	484, 1234,
	485, 1234,
	487, 1234,
	488, 1234,
	490, 1234,
	491, 1234,
	492, 1234,
	493, 1234,
	494, 1234,
	495, 1234,
	496, 1234,
	497, 1234,
	498, 1234,
	500, 1234,
	501, 1234,
	502, 1234,
	503, 1234,
	504, 1234,
	506, 1234,
	508, 1234,
	509, 1234,
	510, 1234,
	511, 1234,
	512, 1234,
	513, 1234,
	515, 1234,
	516, 1234,
	517, 1234,
	518, 1234,
	520, 1234,
	521, 1234,
	524, 1234,
	525, 1234,
	526, 1234,
	527, 1234,
	528, 1234,
	529, 1234,
	530, 1234,
	532, 1234,
	535, 1234,
	536, 1234,
	537, 1234,
	538, 1234,
	539, 1234,
	540, 1234,
	542, 1234,
	543, 1234,
	544, 1234,
	545, 1234,
	551, 1234,
	552, 1234,
	553, 1234,
	554, 1234,
	555, 1234,
	556, 1234,
	-2, 0,
	-1, 1565,
	1, 523,
	580, 523,
	582, 523,
	584, 523,
	-2, 1464,
	-1, 1568,
	4, 2613,
	11, 2613,
	12, 2613,
	14, 2613,
	15, 2613,
	16, 2613,
	17, 2613,
	18, 2613,
	19, 2613,
	21, 2613,
	22, 2613,
	23, 2613,
	24, 2613,
	25, 2613,
	26, 2613,
	27, 2613,
	28, 2613,
	30, 2613,
	31, 2613,
	34, 2613,
	35, 2613,
	37, 2613,
	39, 2613,
	42, 2613,
	43, 2613,
	45, 2613,
	46, 2613,
	47, 2613,
	48, 2613,
	49, 2613,
	50, 2613,
	51, 2613,
	52, 2613,
	54, 2613,
	55, 2613,
	56, 2613,
	57, 2613,
	59, 2613,
	60, 2613,
	61, 2613,
	62, 2613,
	63, 2613,
	64, 2613,
	65, 2613,
	69, 2613,
	70, 2613,
	71, 2613,
	72, 2613,
	74, 2613,
	75, 2613,
	76, 2613,
	77, 2613,
	80, 2613,
	81, 2613,
	82, 2613,
	83, 2613,
	84, 2613,
	85, 2613,
	86, 2613,
	87, 2613,
	89, 2613,
	90, 2613,
	91, 2613,
	92, 2613,
	93, 2613,
	95, 2613,
	96, 2613,
	97, 2613,
	98, 2613,
	99, 2613,
	100, 2613,
	101, 2613,
	102, 2613,
	104, 2613,
	105, 2613,
	106, 2613,
	107, 2613,
	108, 2613,
	109, 2613,
	110, 2613,
	118, 2613,
	119, 2613,
	120, 2613,
	121, 2613,
	122, 2613,
	124, 2613,
	125, 2613,
	126, 2613,
	128, 2613,
	129, 2613,
	130, 2613,
	132, 2613,
	133, 2613,
	134, 2613,
	136, 2613,
	137, 2613,
	138, 2613,
	141, 2613,
	142, 2613,
	143, 2613,
	145, 2613,
	146, 2613,
	148, 2613,
	149, 2613,
	150, 2613,
	152, 2613,
	153, 2613,
	154, 2613,
	155, 2613,
	156, 2613,
	157, 2613,
	158, 2613,
	159, 2613,
	160, 2613,
	161, 2613,
	162, 2613,
	163, 2613,
	164, 2613,
	165, 2613,
	166, 2613,
	167, 2613,
	171, 2613,
	172, 2613,
	173, 2613,
	174, 2613,
	175, 2613,
	176, 2613,
	177, 2613,
	178, 2613,
	181, 2613,
	182, 2613,
	184, 2613,
	187, 2613,
	188, 2613,
	189, 2613,
	190, 2613,
	191, 2613,
	192, 2613,
	193, 2613,
	194, 2613,
	195, 2613,
	196, 2613,
	197, 2613,
	198, 2613,
	199, 2613,
	200, 2613,
	202, 2613,
	203, 2613,
	205, 2613,
	206, 2613,
	208, 2613,
	209, 2613,
	210, 2613,
	211, 2613,
	212, 2613,
	213, 2613,
	214, 2613,
	215, 2613,
	216, 2613,
	217, 2613,
	218, 2613,
	219, 2613,
	220, 2613,
	221, 2613,
	222, 2613,
	223, 2613,
	224, 2613,
	226, 2613,
	227, 2613,
	229, 2613,
	230, 2613,
	231, 2613,
	232, 2613,
	234, 2613,
	235, 2613,
	236, 2613,
	237, 2613,
	239, 2613,
	241, 2613,
	242, 2613,
	243, 2613,
	244, 2613,
	245, 2613,
	246, 2613,
	247, 2613,
	248, 2613,
	249, 2613,
	250, 2613,
	252, 2613,
	253, 2613,
	254, 2613,
	255, 2613,
	256, 2613,
	257, 2613,
	258, 2613,
	259, 2613,
	261, 2613,
	262, 2613,
	263, 2613,
	265, 2613,
	266, 2613,
	267, 2613,
	268, 2613,
	269, 2613,
	270, 2613,
	272, 2613,
	276, 2613,
	277, 2613,
	278, 2613,
	281, 2613,
	282, 2613,
	283, 2613,
	284, 2613,
	285, 2613,
	286, 2613,
	287, 2613,
	288, 2613,
	289, 2613,
	290, 2613,
	291, 2613,
	292, 2613,
	293, 2613,
	294, 2613,
	295, 2613,
	296, 2613,
	297, 2613,
	298, 2613,
	299, 2613,
	300, 2613,
	301, 2613,
	302, 2613,
	303, 2613,
	304, 2613,
	305, 2613,
	306, 2613,
	307, 2613,
	309, 2613,
	310, 2613,
	311, 2613,
	312, 2613,
	313, 2613,
	314, 2613,
	315, 2613,
	316, 2613,
	317, 2613,
	318, 2613,
	319, 2613,
	320, 2613,
	321, 2613,
	322, 2613,
	324, 2613,
	327, 2613,
	328, 2613,
	329, 2613,
	331, 2613,
	332, 2613,
	333, 2613,
	334, 2613,
	335, 2613,
	338, 2613,
	342, 2613,
	343, 2613,
	344, 2613,
	345, 2613,
	347, 2613,
	348, 2613,
	349, 2613,
	351, 2613,
	353, 2613,
	354, 2613,
	355, 2613,
	356, 2613,
	357, 2613,
	358, 2613,
	359, 2613,
	360, 2613,
	361, 2613,
	362, 2613,
	363, 2613,
	364, 2613,
	365, 2613,
	367, 2613,
	368, 2613,
	369, 2613,
	370, 2613,
	371, 2613,
	372, 2613,
	373, 2613,
	374, 2613,
	375, 2613,
	376, 2613,
	377, 2613,
	378, 2613,
	379, 2613,
	380, 2613,
	381, 2613,
	383, 2613,
	384, 2613,
	386, 2613,
	387, 2613,
	388, 2613,
	389, 2613,
	390, 2613,
	391, 2613,
	392, 2613,
	393, 2613,
	394, 2613,
	395, 2613,
	396, 2613,
	397, 2613,
	399, 2613,
	401, 2613,
	402, 2613,
	403, 2613,
	408, 2613,
	409, 2613,
	410, 2613,
	411, 2613,
	412, 2613,
	413, 2613,
	414, 2613,
	415, 2613,
	416, 2613,
	417, 2613,
	418, 2613,
	420, 2613,
	421, 2613,
	422, 2613,
	423, 2613,
	424, 2613,
	425, 2613,
	426, 2613,
	427, 2613,
	428, 2613,
	429, 2613,
	430, 2613,
	431, 2613,
	432, 2613,
	433, 2613,
	434, 2613,
	435, 2613,
	436, 2613,
	437, 2613,
	438, 2613,
	439, 2613,
	440, 2613,
	441, 2613,
	443, 2613,
	444, 2613,
	445, 2613,
	446, 2613,
	447, 2613,
	448, 2613,
	450, 2613,
	451, 2613,
	452, 2613,
	453, 2613,
	454, 2613,
	455, 2613,
	456, 2613,
	457, 2613,
	458, 2613,
	459, 2613,
	460, 2613,
	461, 2613,
	462, 2613,
	463, 2613,
	465, 2613,
	467, 2613,
	468, 2613,
	469, 2613,
	470, 2613,
	471, 2613,
	472, 2613,
	473, 2613,
	474, 2613,
	475, 2613,
	476, 2613,
	477, 2613,
	478, 2613,
	479, 2613,
	480, 2613,
	481, 2613,
	482, 2613,
	484, 2613,
	485, 2613,
	487, 2613,
	488, 2613,
	490, 2613,
	491, 2613,
	492, 2613,
	493, 2613,
	494, 2613,
	495, 2613,
	496, 2613,
	497, 2613,
	498, 2613,
	500, 2613,
	501, 2613,
	502, 2613,
	503, 2613,
	504, 2613,
	506, 2613,
	508, 2613,
	509, 2613,
	510, 2613,
	511, 2613,
	512, 2613,
	513, 2613,
	515, 2613,
	516, 2613,
	517, 2613,
	518, 2613,
	520, 2613,
	521, 2613,
	524, 2613,
	525, 2613,
	526, 2613,
	527, 2613,
	528, 2613,
	529, 2613,
	530, 2613,
	532, 2613,
	535, 2613,
	536, 2613,
	537, 2613,
	538, 2613,
	539, 2613,
	540, 2613,
	542, 2613,
	543, 2613,
	544, 2613,
	545, 2613,
	551, 2613,
	552, 2613,
	553, 2613,
	554, 2613,
	555, 2613,
	556, 2613,
	557, 2613,
	559, 2613,
	562, 2613,
	563, 2613,
	564, 2613,
	565, 2613,
	566, 2613,
	567, 2613,
	569, 2613,
	570, 2613,
	571, 2613,
	572, 2613,
	573, 2613,
	574, 2613,
	575, 2613,
	576, 2613,
	577, 2613,
	579, 2613,
	582, 2613,
	583, 2613,
	585, 2613,
	586, 2613,
	-2, 0,
	-1, 1573,
	186, 2497,
	505, 2497,
	564, 2497,
	583, 2497,
	-2, 0,
	-1, 1622,
	388, 832,
	448, 832,
	488, 832,
	510, 832,
	-2, 0,
	-1, 1649,
	1, 827,
	580, 827,
	582, 827,
	584, 827,
	-2, 0,
	-1, 1650,
	1, 865,
	580, 865,
	582, 865,
	584, 865,
	-2, 0,
	-1, 1651,
	1, 873,
	580, 873,
	582, 873,
	584, 873,
	-2, 0,
	-1, 1654,
	1, 836,
	580, 836,
	582, 836,
	584, 836,
	-2, 0,
	-1, 1656,
	1, 840,
	580, 840,
	582, 840,
	584, 840,
	-2, 0,
	-1, 1662,
	1, 847,
	580, 847,
	582, 847,
	584, 847,
	-2, 0,
	-1, 1691,
	1, 2559,
	580, 2559,
	582, 2559,
	583, 2559,
	584, 2559,
	-2, 899,
	-1, 1692,
	1, 2494,
	580, 2494,
	582, 2494,
	583, 2494,
	584, 2494,
	-2, 900,
	-1, 1696,
	1, 912,
	580, 912,
	582, 912,
	584, 912,
	-2, 0,
	-1, 1710,
	1, 1355,
	584, 1355,
	-2, 1360,
	-1, 1713,
	170, 1507,
	183, 1507,
	271, 1507,
	336, 1507,
	-2, 1445,
	-1, 1807,
	151, 1466,
	170, 1466,
	183, 1466,
	238, 1466,
	271, 1466,
	336, 1466,
	346, 1466,
	522, 1466,
	-2, 1908,
	-1, 1867,
	582, 2058,
	-2, 0,
	-1, 1902,
	151, 1466,
	170, 1466,
	183, 1466,
	238, 1466,
	271, 1466,
	336, 1466,
	346, 1466,
	522, 1466,
	-2, 1594,
	-1, 1936,
	505, 2494,
	583, 2494,
	586, 2494,
	-2, 0,
	-1, 1953,
	581, 1735,
	-2, 1723,
	-1, 1984,
	186, 2494,
	583, 2494,
	586, 2494,
	-2, 0,
	-1, 2032,
	1, 654,
	584, 654,
	-2, 1360,
	-1, 2158,
	220, 241,
	-2, 2205,
	-1, 2159,
	220, 242,
	-2, 287,
	-1, 2263,
	1, 829,
	580, 829,
	582, 829,
	584, 829,
	-2, 0,
	-1, 2264,
	1, 867,
	580, 867,
	582, 867,
	584, 867,
	-2, 0,
	-1, 2265,
	1, 875,
	580, 875,
	582, 875,
	584, 875,
	-2, 0,
	-1, 2266,
	1, 914,
	580, 914,
	582, 914,
	584, 914,
	-2, 0,
	-1, 2299,
	1, 849,
	580, 849,
	582, 849,
	584, 849,
	-2, 0,
	-1, 2354,
	428, 1534,
	429, 1534,
	-2, 1768,
	-1, 2385,
	14, 0,
	15, 0,
	16, 0,
	562, 0,
	563, 0,
	564, 0,
	-2, 1788,
	-1, 2386,
	14, 0,
	15, 0,
	16, 0,
	562, 0,
	563, 0,
	564, 0,
	-2, 1789,
	-1, 2387,
	96, 0,
	252, 0,
	253, 0,
	566, 0,
	567, 0,
	-2, 1790,
	-1, 2388,
	96, 0,
	252, 0,
	253, 0,
	566, 0,
	567, 0,
	-2, 1791,
	-1, 2389,
	96, 0,
	252, 0,
	253, 0,
	566, 0,
	567, 0,
	-2, 1792,
	-1, 2390,
	96, 0,
	252, 0,
	253, 0,
	566, 0,
	567, 0,
	-2, 1793,
	-1, 2391,
	96, 0,
	252, 0,
	253, 0,
	566, 0,
	567, 0,
	-2, 1794,
	-1, 2392,
	14, 0,
	15, 0,
	16, 0,
	562, 0,
	563, 0,
	564, 0,
	-2, 1795,
	-1, 2404,
	14, 0,
	15, 0,
	16, 0,
	562, 0,
	563, 0,
	564, 0,
	-2, 1807,
	-1, 2405,
	14, 0,
	15, 0,
	16, 0,
	562, 0,
	563, 0,
	564, 0,
	-2, 1808,
	-1, 2406,
	14, 0,
	15, 0,
	16, 0,
	562, 0,
	563, 0,
	564, 0,
	-2, 1809,
	-1, 2409,
	17, 0,
	18, 0,
	19, 0,
	51, 0,
	217, 0,
	220, 0,
	270, 0,
	456, 0,
	557, 0,
	565, 0,
	-2, 1814,
	-1, 2415,
	17, 0,
	18, 0,
	19, 0,
	51, 0,
	217, 0,
	220, 0,
	270, 0,
	456, 0,
	557, 0,
	565, 0,
	-2, 1818,
	-1, 2417,
	17, 0,
	18, 0,
	19, 0,
	51, 0,
	217, 0,
	220, 0,
	270, 0,
	456, 0,
	557, 0,
	565, 0,
	-2, 1826,
	-1, 2418,
	17, 0,
	18, 0,
	19, 0,
	51, 0,
	217, 0,
	220, 0,
	270, 0,
	456, 0,
	557, 0,
	565, 0,
	-2, 1827,
	-1, 2419,
	17, 0,
	18, 0,
	19, 0,
	51, 0,
	217, 0,
	220, 0,
	270, 0,
	456, 0,
	557, 0,
	565, 0,
	-2, 1828,
	-1, 2420,
	17, 0,
	18, 0,
	19, 0,
	51, 0,
	217, 0,
	220, 0,
	270, 0,
	456, 0,
	557, 0,
	565, 0,
	-2, 1829,
	-1, 2556,
	5, 2209,
	186, 2069,
	581, 2206,
	-2, 2197,
	-1, 2557,
	186, 2070,
	-2, 2564,
	-1, 2558,
	186, 2071,
	-2, 2392,
	-1, 2559,
	186, 2072,
	-2, 2280,
	-1, 2560,
	186, 2073,
	-2, 2333,
	-1, 2561,
	186, 2074,
	-2, 2377,
	-1, 2562,
	186, 2075,
	-2, 2492,
	-1, 2563,
	186, 2076,
	-2, 1891,
	-1, 2633,
	1, 1595,
	2, 1595,
	107, 1595,
	151, 1595,
	170, 1595,
	183, 1595,
	187, 1595,
	204, 1595,
	207, 1595,
	234, 1595,
	238, 1595,
	249, 1595,
	267, 1595,
	271, 1595,
	310, 1595,
	336, 1595,
	340, 1595,
	346, 1595,
	419, 1595,
	423, 1595,
	522, 1595,
	533, 1595,
	548, 1595,
	549, 1595,
	550, 1595,
	560, 1595,
	580, 1595,
	582, 1595,
	584, 1595,
	586, 1595,
	-2, 1594,
	-1, 2646,
	581, 2178,
	-2, 2192,
	-1, 2648,
	1, 303,
	548, 303,
	-2, 1493,
	-1, 2674,
	581, 1734,
	-2, 1724,
	-1, 2852,
	1, 1209,
	580, 1209,
	582, 1209,
	584, 1209,
	-2, 1493,
	-1, 3021,
	341, 1537,
	-2, 2603,
	-1, 3022,
	341, 1538,
	-2, 2478,
	-1, 3026,
	428, 2135,
	429, 2135,
	-2, 1889,
	-1, 3027,
	428, 2139,
	429, 2139,
	-2, 1890,
	-1, 3028,
	428, 2136,
	429, 2136,
	-2, 1889,
	-1, 3029,
	428, 2140,
	429, 2140,
	-2, 1890,
	-1, 3042,
	17, 0,
	18, 0,
	19, 0,
	51, 0,
	217, 0,
	220, 0,
	270, 0,
	456, 0,
	557, 0,
	565, 0,
	-2, 1816,
	-1, 3043,
	17, 0,
	18, 0,
	19, 0,
	51, 0,
	217, 0,
	220, 0,
	270, 0,
	456, 0,
	557, 0,
	565, 0,
	-2, 1820,
	-1, 3049,
	17, 0,
	18, 0,
	19, 0,
	51, 0,
	217, 0,
	220, 0,
	270, 0,
	456, 0,
	557, 0,
	565, 0,
	-2, 1822,
	-1, 3265,
	1, 651,
	580, 651,
	582, 651,
	584, 651,
	-2, 1360,
	-1, 3420,
	44, 2170,
	-2, 973,
	-1, 3425,
	1, 1209,
	580, 1209,
	582, 1209,
	584, 1209,
	-2, 1493,
	-1, 3530,
	17, 0,
	18, 0,
	19, 0,
	51, 0,
	217, 0,
	220, 0,
	270, 0,
	456, 0,
	557, 0,
	565, 0,
	-2, 1824,
	-1, 3537,
	243, 0,
	245, 0,
	327, 0,
	-2, 1843,
	-1, 3604,
	14, 0,
	15, 0,
	16, 0,
	562, 0,
	563, 0,
	564, 0,
	-2, 1872,
	-1, 3605,
	14, 0,
	15, 0,
	16, 0,
	562, 0,
	563, 0,
	564, 0,
	-2, 1873,
	-1, 3606,
	14, 0,
	15, 0,
	16, 0,
	562, 0,
	563, 0,
	564, 0,
	-2, 1874,
	-1, 3610,
	14, 0,
	15, 0,
	16, 0,
	562, 0,
	563, 0,
	564, 0,
	-2, 1878,
	-1, 3611,
	14, 0,
	15, 0,
	16, 0,
	562, 0,
	563, 0,
	564, 0,
	-2, 1879,
	-1, 3612,
	14, 0,
	15, 0,
	16, 0,
	562, 0,
	563, 0,
	564, 0,
	-2, 1880,
	-1, 3658,
	581, 2179,
	-2, 2193,
	-1, 3828,
	583, 2721,
	-2, 1419,
	-1, 3886,
	243, 0,
	245, 0,
	327, 0,
	-2, 1844,
	-1, 3889,
	17, 0,
	18, 0,
	19, 0,
	51, 0,
	217, 0,
	220, 0,
	270, 0,
	456, 0,
	557, 0,
	565, 0,
	-2, 1847,
	-1, 3890,
	17, 0,
	18, 0,
	19, 0,
	51, 0,
	217, 0,
	220, 0,
	270, 0,
	456, 0,
	557, 0,
	565, 0,
	-2, 1849,
	-1, 3991,
	583, 2194,
	-2, 1244,
	-1, 4133,
	17, 0,
	18, 0,
	19, 0,
	51, 0,
	217, 0,
	220, 0,
	270, 0,
	456, 0,
	557, 0,
	565, 0,
	-2, 1848,
	-1, 4134,
	17, 0,
	18, 0,
	19, 0,
	51, 0,
	217, 0,
	220, 0,
	270, 0,
	456, 0,
	557, 0,
	565, 0,
	-2, 1850,
	-1, 4145,
	243, 0,
	-2, 1881,
	-1, 4319,
	243, 0,
	-2, 1882,
	-1, 4508,
	51, 0,
	217, 0,
	270, 0,
	456, 0,
	557, 0,
	565, 0,
	-2, 2567,
}

const sqlPrivate = 57344

const sqlLast = 122811

var sqlAct = [...]int{
	265, 4604, 3409, 2917, 4690, 3176, 4501, 2930, 4560, 4194,
	3408, 4381, 4359, 4507, 4241, 4489, 4500, 4351, 4518, 4631,
	2080, 4402, 3987, 4460, 4377, 2155, 4476, 2740, 4457, 1206,
	3869, 4440, 4519, 4180, 4520, 2782, 4272, 2230, 4573, 4248,
	1474, 3569, 4506, 1217, 4323, 4089, 4084, 1090, 4050, 3522,
	4199, 4154, 2802, 1286, 4122, 3812, 2364, 4071, 1290, 1039,
	4030, 3442, 4073, 3820, 4257, 3756, 3035, 3988, 4064, 3350,
	3972, 1279, 2239, 2588, 4286, 788, 2432, 3436, 4094, 2014,
	3778, 3404, 3793, 3276, 3776, 1722, 2372, 754, 2088, 1589,
	3295, 2939, 4150, 1350, 2814, 2237, 1940, 3481, 1030, 2952,
	3483, 788, 3199, 2876, 2906, 3292, 2941, 2887, 1442, 3661,
	3191, 3219, 1908, 3394, 3159, 3925, 3868, 2938, 2365, 2949,
	2932, 257, 2203, 2901, 1941, 3180, 1877, 863, 2918, 2150,
	4605, 2149, 2742, 3314, 2626, 2099, 3158, 2369, 2903, 4324,
	3182, 2001, 3629, 2474, 1815, 1038, 174, 2445, 3019, 1853,
	2126, 4, 2948, 3289, 2625, 2880, 2628, 1449, 1284, 1094,
	259, 783, 2145, 2829, 1051, 2133, 1529, 2072, 2068, 2888,
	1197, 1710, 2012, 1087, 1333, 1897, 2465, 2606, 1878, 2585,
	1258, 2058, 2429, 2353, 3226, 2336, 3406, 1092, 1083, 1272,
	2334, 2658, 1566, 2911, 2190, 2781, 1532, 2724, 1630, 1587,
	789, 790, 4403, 2942, 685, 1319, 671, 2468, 1887, 785,
	693, 1200, 39, 1848, 1281, 1179, 2657, 2552, 2518, 2446,
	1800, 183, 2615, 1894, 1723, 1724, 184, 2335, 1649, 1662,
	736, 2216, 1214, 2337, 2189, 794, 2596, 748, 1557, 174,
	1469, 1564, 1269, 2087, 1196, 856, 4561, 2358, 1068, 1990,
	1987, 258, 2476, 1292, 688, 1202, 44, 43, 41, 696,
	32, 794, 30, 1177, 1729, 711, 28, 926, 837, 3070,
	1709, 1089, 1480, 946, 3643, 3066, 3644, 2003, 3178, 1209,
	1137, 2003, 108, 857, 1034, 2003, 4703, 2003, 1655, 2003,
	2605, 4693, 4678, 1473, 4677, 3461, 2605, 4667, 2605, 2003,
	4649, 2164, 4647, 4592, 4198, 4549, 4198, 2164, 4542, 4550,
	878, 73, 2605, 860, 859, 4540, 3451, 4537, 4534, 2605,
	4504, 4538, 4535, 4503, 2164, 1066, 797, 2164, 74, 4502,
	4497, 4496, 4487, 2024, 2024, 2024, 4198, 4485, 4482, 4455,
	1034, 4198, 4260, 4198, 78, 4427, 4420, 4419, 3461, 2665,
	2605, 2605, 797, 4414, 4413, 4407, 4373, 4198, 4198, 2164,
	4041, 4321, 4303, 4300, 4297, 2665, 3855, 2164, 4198, 4250,
	4214, 4213, 1194, 4251, 2164, 2164, 1328, 3234, 4205, 4204,
	1180, 1180, 2164, 4198, 87, 4197, 4161, 4135, 4113, 4198,
	2164, 2665, 2024, 4102, 4025, 4010, 1015, 3461, 2605, 2605,
	3888, 1014, 2238, 3836, 2665, 3830, 3791, 3478, 1328, 3478,
	3792, 1737, 1738, 3653, 3651, 3636, 2685, 3654, 3652, 2605,
	1212, 3553, 3549, 3477, 861, 2164, 2605, 3478, 3468, 73,
	2164, 3034, 3469, 3079, 3633, 1768, 3131, 3132, 107, 3080,
	1229, 3175, 1740, 93, 104, 2605, 74, 93, 2605, 2471,
	1024, 3452, 3249, 3248, 1029, 3170, 2661, 4428, 2021, 2605,
	1737, 1738, 78, 3169, 4325, 2598, 3122, 2605, 1035, 1482,
	3123, 3120, 3112, 1236, 3110, 3121, 3113, 1739, 2605, 3081,
	4316, 2956, 2928, 2605, 1768, 2024, 2226, 1759, 1181, 2927,
	2708, 1740, 2164, 2226, 2605, 2664, 1756, 2684, 4304, 2665,
	94, 2655, 87, 1208, 2649, 2605, 229, 2604, 2164, 1737,
	1738, 2605, 1770, 1771, 1772, 1780, 1781, 1782, 2225, 4260,
	2024, 1230, 2226, 1183, 2605, 1184, 1739, 3633, 2597, 4082,
	4041, 4011, 1773, 1768, 3855, 3469, 2472, 2805, 2092, 2723,
	1740, 2037, 861, 2002, 2018, 2021, 2882, 1494, 2163, 1786,
	3882, 2824, 2721, 231, 1873, 1468, 107, 1210, 3741, 3525,
	3501, 93, 104, 1895, 2138, 3453, 2642, 1596, 1632, 2641,
	2640, 1762, 1763, 1764, 1765, 1739, 2639, 2638, 229, 1185,
	3069, 1745, 1182, 1023, 3454, 1759, 1022, 1021, 1020, 1019,
	1018, 1017, 1013, 1012, 1756, 1011, 1010, 1009, 1008, 1582,
	1007, 2996, 230, 1006, 1005, 1004, 3137, 1003, 1002, 1001,
	1000, 1737, 1738, 999, 223, 998, 997, 2473, 94, 2470,
	924, 923, 922, 224, 921, 231, 1767, 1769, 920, 2004,
	1745, 919, 918, 2004, 917, 1768, 916, 2004, 915, 2004,
	914, 2004, 1740, 913, 97, 185, 912, 911, 3941, 1488,
	910, 2004, 1754, 1755, 909, 908, 907, 906, 905, 904,
	903, 902, 901, 900, 899, 898, 897, 896, 1085, 1762,
	1763, 1764, 1765, 895, 230, 1767, 1769, 1739, 894, 1745,
	893, 892, 891, 881, 880, 1760, 876, 875, 869, 868,
	855, 854, 811, 810, 1481, 2914, 182, 100, 809, 103,
	808, 800, 799, 798, 769, 73, 760, 759, 758, 742,
	3147, 253, 252, 251, 250, 1777, 249, 185, 1787, 248,
	1473, 247, 74, 229, 1767, 1769, 246, 229, 229, 1295,
	1092, 862, 245, 244, 1760, 243, 148, 242, 78, 241,
	148, 1783, 240, 1784, 239, 3131, 3132, 238, 1482, 237,
	1754, 1755, 236, 1092, 235, 234, 233, 1092, 1493, 232,
	3900, 3674, 97, 1737, 1738, 3647, 2475, 3479, 1775, 3222,
	231, 3092, 3075, 1353, 231, 231, 2979, 1353, 87, 2863,
	1482, 1745, 1295, 1760, 2669, 2896, 4096, 1768, 2647, 2632,
	2501, 2487, 1856, 2485, 1740, 4525, 150, 2066, 2695, 1855,
	2233, 2023, 2002, 1092, 1921, 1092, 2021, 1092, 2018, 1766,
	2684, 186, 1332, 1295, 182, 100, 1337, 103, 861, 230,
	2329, 1859, 1323, 230, 230, 1785, 1767, 1769, 1826, 1739,
	1761, 223, 107, 1657, 1476, 223, 223, 93, 104, 1295,
	224, 229, 1339, 1774, 224, 224, 1216, 4307, 1280, 862,
	1457, 3451, 1230, 2021, 148, 3148, 4505, 1452, 1898, 1295,
	1487, 1856, 858, 4305, 1295, 2597, 185, 185, 1855, 4192,
	3131, 3132, 1092, 1230, 1092, 1482, 4484, 4388, 1295, 1761,
	2469, 1736, 4313, 2232, 1092, 1760, 1092, 4149, 231, 3173,
	1854, 1817, 4103, 4081, 94, 3950, 1445, 3923, 3922, 1456,
	1280, 4328, 3916, 1263, 1266, 1472, 2678, 1766, 3915, 3914,
	3907, 3906, 1538, 1541, 150, 3137, 3904, 3899, 1276, 3896,
	3895, 1317, 3796, 3790, 3678, 3677, 3676, 3174, 1761, 186,
	3657, 3624, 1295, 1745, 3623, 3131, 3132, 230, 3622, 1460,
	3545, 3541, 1346, 1302, 1439, 1444, 3131, 3132, 3217, 223,
	1092, 3166, 794, 1092, 1778, 3157, 3130, 3127, 224, 3126,
	2810, 3124, 1280, 1280, 3119, 1447, 1757, 1753, 3118, 1750,
	1748, 1749, 1741, 1742, 1743, 1744, 1746, 1747, 1767, 1769,
	185, 1193, 1600, 3117, 3114, 1312, 4098, 229, 3111, 3091,
	3074, 3067, 1471, 1470, 2929, 1527, 3141, 3133, 3134, 3135,
	3136, 3138, 3139, 2633, 2458, 174, 174, 229, 1824, 1736,
	229, 1569, 1571, 1817, 2171, 1601, 1479, 2663, 1486, 2169,
	1492, 1741, 1742, 1743, 1744, 1746, 1747, 2898, 2206, 4697,
	1761, 1819, 3739, 1544, 231, 1735, 4641, 1760, 97, 229,
	3137, 1586, 1818, 797, 1816, 1092, 1092, 1092, 1092, 1092,
	1092, 1092, 4640, 3797, 231, 1776, 1323, 231, 4606, 1323,
	1751, 1752, 1758, 1779, 1757, 1753, 4559, 1750, 1748, 1749,
	1741, 1742, 1743, 1744, 1746, 1747, 1092, 1303, 4557, 4329,
	3910, 1218, 1092, 230, 3909, 1580, 231, 1585, 3571, 229,
	182, 100, 4447, 103, 1037, 223, 4380, 1594, 1560, 1599,
	4369, 4366, 4365, 230, 224, 3137, 230, 4364, 4345, 4327,
	4326, 4301, 1567, 1714, 4285, 223, 3137, 229, 223, 4284,
	3131, 3132, 2435, 4270, 224, 862, 185, 224, 4267, 4266,
	148, 4261, 4210, 4188, 229, 230, 231, 229, 4147, 4130,
	4129, 1035, 4110, 4109, 3147, 1581, 185, 223, 4067, 2913,
	4042, 1708, 3940, 1671, 3921, 3856, 224, 1595, 3850, 3847,
	3727, 1656, 3726, 3712, 231, 3797, 2441, 3711, 3709, 1750,
	1748, 1749, 1741, 1742, 1743, 1744, 1746, 1747, 185, 3639,
	1989, 231, 1761, 3171, 231, 230, 1806, 1092, 1092, 1092,
	150, 3627, 3536, 1092, 1804, 1606, 3480, 223, 3462, 3428,
	1214, 3363, 1214, 3325, 3294, 186, 224, 1623, 3242, 3147,
	3096, 3095, 3090, 230, 3240, 3058, 2875, 1353, 2897, 1862,
	3147, 1658, 1737, 1738, 1875, 223, 1092, 4097, 185, 788,
	230, 1861, 1860, 230, 224, 1958, 788, 1857, 1849, 1295,
	1809, 1847, 223, 2676, 1814, 223, 2675, 1209, 2644, 1209,
	2766, 224, 2637, 1740, 224, 2603, 185, 1711, 1719, 1924,
	1015, 2483, 1920, 1876, 1718, 1014, 1884, 1871, 1870, 1869,
	1937, 1868, 1867, 185, 1866, 1865, 185, 1985, 2234, 1864,
	1863, 1844, 1843, 1842, 1713, 1841, 1840, 1839, 1739, 3148,
	3137, 1858, 1838, 1715, 3214, 1837, 1836, 1732, 1733, 1932,
	1835, 1834, 1929, 1833, 1832, 1295, 3133, 3134, 3135, 3136,
	3138, 3139, 1092, 1831, 1881, 1882, 1295, 1830, 1819, 1805,
	1737, 1738, 1748, 1749, 1741, 1742, 1743, 1744, 1746, 1747,
	1803, 1798, 1311, 1558, 1092, 1180, 1234, 1225, 4070, 3946,
	1353, 3892, 1905, 3673, 1456, 3650, 1850, 1851, 3642, 174,
	3078, 1740, 2635, 2082, 3148, 2049, 2048, 1563, 1035, 2057,
	2059, 2667, 4165, 3948, 3672, 3148, 1818, 2055, 3131, 3132,
	2500, 2486, 3238, 2484, 1801, 3457, 1916, 4013, 1906, 4638,
	1336, 4630, 1328, 2803, 4367, 2030, 1739, 1323, 1212, 794,
	1212, 1456, 4262, 2064, 1952, 1927, 794, 2029, 3751, 4308,
	2057, 4253, 4252, 4101, 4044, 2008, 1737, 1738, 2010, 1925,
	1928, 2057, 4043, 1903, 2015, 4306, 1912, 2057, 2017, 4012,
	3943, 1896, 229, 2020, 3523, 3859, 3858, 229, 3857, 4258,
	1768, 3133, 3134, 3135, 3136, 3138, 3139, 1740, 1933, 1335,
	3645, 1839, 1874, 2006, 3464, 1981, 1839, 3463, 4191, 1856,
	1898, 3116, 2092, 2786, 3115, 1900, 1855, 1706, 3040, 2135,
	1915, 1914, 1913, 3357, 1911, 3328, 1910, 1295, 1295, 231,
	1909, 1208, 1739, 1208, 231, 2768, 1622, 1353, 2052, 2043,
	797, 229, 1331, 1328, 1035, 1938, 2032, 797, 1737, 1738,
	1745, 3724, 1993, 3142, 3140, 3141, 3133, 3134, 3135, 3136,
	3138, 3139, 1334, 3800, 995, 3140, 3141, 3133, 3134, 3135,
	3136, 3138, 3139, 1328, 3411, 1955, 3410, 229, 230, 1740,
	3296, 2255, 3473, 230, 1828, 1210, 1672, 1210, 231, 4526,
	223, 4571, 2231, 4249, 229, 223, 2120, 4545, 2125, 224,
	1631, 2130, 4530, 4517, 224, 2466, 3395, 2953, 996, 2028,
	1632, 2151, 3804, 4151, 1739, 2026, 2156, 2161, 1993, 3787,
	1192, 185, 3753, 3748, 231, 2035, 185, 3732, 3498, 1993,
	2207, 1295, 3263, 1295, 3178, 1295, 1745, 230, 3573, 2060,
	2050, 231, 3084, 2674, 1825, 4184, 1872, 1852, 3402, 223,
	2054, 1295, 1295, 4360, 2200, 1562, 4527, 1537, 224, 1465,
	1306, 1262, 1295, 4539, 4536, 3447, 2821, 3704, 3387, 2818,
	4085, 2816, 2098, 230, 1295, 4454, 1295, 1295, 1295, 4342,
	185, 1767, 1769, 3299, 3719, 223, 1610, 2936, 2053, 794,
	230, 2910, 4589, 3517, 224, 3766, 2153, 4231, 4590, 788,
	2196, 3984, 223, 4000, 2241, 1512, 4620, 1504, 993, 991,
	2118, 224, 2254, 2199, 2709, 989, 185, 4692, 1745, 987,
	2033, 1466, 4224, 4216, 4175, 4039, 2201, 4038, 1318, 1471,
	1470, 3267, 1563, 185, 2213, 3980, 984, 3764, 976, 2305,
	1760, 3763, 2303, 3135, 3136, 3138, 3139, 3755, 3747, 3746,
	3269, 3744, 2044, 3743, 2117, 3731, 2129, 2727, 1043, 3688,
	2727, 3687, 3765, 3391, 3390, 2236, 2471, 2259, 3233, 2162,
	1670, 2514, 2725, 3089, 3088, 2725, 2221, 3087, 3086, 3499,
	797, 1033, 3044, 2827, 1669, 2826, 1092, 2823, 1092, 3981,
	1513, 2812, 2801, 2344, 2800, 1092, 2796, 2795, 1958, 1958,
	1353, 2794, 1092, 1092, 1092, 1092, 1092, 1092, 1092, 1092,
	1092, 1092, 1092, 1092, 1092, 1092, 1092, 1092, 1092, 1092,
	1092, 1092, 1092, 1092, 1092, 1092, 1092, 1092, 1092, 1092,
	1092, 1092, 1092, 1092, 1092, 1092, 1092, 2182, 1092, 2181,
	1092, 1092, 1092, 1092, 2223, 2210, 3239, 2219, 1747, 1329,
	2215, 2242, 2342, 2472, 2247, 2089, 1560, 1329, 2218, 794,
	2218, 4185, 1092, 2773, 2333, 1092, 1092, 1608, 1032, 2346,
	2772, 1312, 2227, 1092, 2228, 2160, 2735, 1092, 3355, 1092,
	1092, 1336, 1668, 2656, 1567, 1761, 1567, 1353, 2085, 2416,
	2571, 1712, 1336, 1092, 1092, 1092, 1092, 2246, 1092, 1092,
	1092, 1092, 1092, 1092, 1092, 1092, 3296, 4621, 2281, 2328,
	2513, 2231, 2263, 1035, 2374, 1035, 2907, 2090, 2091, 850,
	3327, 2312, 2370, 2371, 1092, 1092, 1092, 1092, 1092, 1092,
	1092, 1092, 1092, 2180, 2473, 1508, 2470, 1092, 2447, 2448,
	1335, 1741, 1742, 1743, 1744, 1746, 1747, 2086, 981, 1214,
	797, 1335, 2447, 2463, 2299, 971, 1353, 1952, 1952, 2327,
	1329, 2744, 2668, 1946, 1325, 1214, 1248, 2251, 4625, 2357,
	1562, 1550, 1325, 1549, 1653, 1548, 1034, 1547, 2509, 1521,
	1028, 1092, 1353, 2061, 2062, 3955, 1467, 3976, 4128, 1603,
	2716, 2431, 3977, 2343, 3139, 1916, 1209, 2555, 2555, 2569,
	2999, 2447, 2332, 2330, 2589, 2591, 2338, 2345, 2331, 4014,
	2595, 1015, 1209, 2790, 1015, 1015, 2361, 1624, 2344, 2362,
	2363, 851, 2440, 2462, 2783, 2784, 1749, 1741, 1742, 1743,
	1744, 1746, 1747, 3356, 2264, 2783, 2784, 1809, 1685, 1221,
	3707, 2783, 2784, 1330, 3979, 2466, 3954, 2123, 2770, 2959,
	2620, 1330, 2431, 1526, 2645, 3996, 1681, 2648, 2758, 2309,
	3982, 3032, 4626, 2319, 3131, 3132, 2341, 3149, 3150, 3151,
	3017, 1705, 972, 2747, 1652, 1325, 4353, 2342, 1955, 1955,
	2443, 1219, 2322, 2475, 1653, 1295, 1295, 3884, 1620, 2612,
	1180, 2576, 4589, 4651, 2757, 2220, 2265, 2439, 2460, 2268,
	2100, 1326, 2271, 1717, 2437, 1905, 1310, 3002, 1604, 1326,
	1327, 1743, 1744, 1746, 1747, 3507, 1280, 3506, 1327, 2993,
	2262, 2634, 4037, 2104, 1223, 2611, 3562, 1353, 2820, 3715,
	2619, 2730, 2624, 1667, 1632, 2630, 2631, 1212, 2475, 2704,
	3146, 2551, 2564, 1533, 1650, 174, 1035, 2580, 1632, 2593,
	2698, 2662, 1031, 1212, 1330, 1035, 2340, 3745, 2613, 1035,
	2819, 1958, 2511, 2817, 1280, 2815, 2732, 2512, 3266, 1323,
	2515, 4628, 2516, 2517, 2617, 2618, 1903, 1664, 2601, 2602,
	2101, 4523, 1858, 3728, 1652, 3978, 2726, 2139, 1222, 2321,
	3031, 1531, 1026, 2146, 971, 4355, 4634, 2469, 3742, 1353,
	1280, 1280, 3055, 3389, 2427, 3353, 1651, 2822, 2690, 2272,
	2659, 2706, 1326, 1295, 2694, 985, 985, 1609, 2343, 1028,
	1208, 1327, 985, 3985, 2677, 2736, 986, 2092, 2705, 1092,
	1092, 3053, 1092, 2425, 3137, 889, 1208, 848, 3001, 847,
	2700, 1850, 1851, 985, 2793, 2304, 2689, 1035, 2302, 4127,
	2692, 2683, 2693, 3994, 788, 2731, 1295, 2670, 2681, 2680,
	973, 2729, 770, 2730, 2707, 1027, 2697, 2771, 4601, 2998,
	2746, 2699, 2168, 2167, 1210, 2475, 2712, 2813, 1328, 2791,
	4609, 2734, 1682, 683, 2105, 2776, 1328, 1295, 4608, 2879,
	1210, 2341, 1445, 2654, 2775, 2714, 3152, 2701, 2732, 1295,
	4424, 1295, 2710, 4654, 1507, 4578, 2140, 2894, 2921, 2769,
	678, 972, 2858, 853, 852, 2761, 1295, 2860, 3963, 1456,
	1952, 3874, 767, 2950, 2318, 3024, 3025, 3873, 2774, 2715,
	3445, 3444, 2749, 2752, 1510, 1247, 3701, 2739, 3147, 3700,
	4681, 2792, 2733, 2960, 2961, 3692, 2148, 2003, 4436, 2713,
	2106, 2107, 4524, 3559, 2967, 2968, 2969, 1092, 4627, 3282,
	2765, 2785, 2787, 2788, 2789, 4434, 4172, 1607, 3000, 971,
	3050, 4169, 2421, 3773, 2102, 801, 4491, 2980, 4492, 2981,
	3964, 775, 2799, 2890, 794, 2804, 4361, 2731, 2954, 1328,
	2422, 3278, 3984, 3051, 1028, 2423, 2798, 3056, 2957, 2428,
	974, 2147, 2809, 2962, 2136, 2963, 3995, 2730, 2797, 3444,
	1092, 2745, 2977, 2734, 794, 2103, 1092, 1092, 4375, 1683,
	2935, 1533, 3729, 3781, 1471, 2861, 3980, 882, 3774, 765,
	3973, 174, 3779, 3046, 3560, 982, 3716, 2925, 2873, 2923,
	2864, 1955, 2732, 2867, 4632, 2869, 2883, 3971, 779, 1220,
	2320, 4522, 975, 4354, 1456, 3366, 3975, 732, 3268, 3004,
	1679, 3006, 1280, 2884, 734, 1232, 1946, 1946, 3772, 3344,
	2270, 1092, 1092, 2916, 2733, 797, 1605, 1092, 2727, 2926,
	3981, 2937, 2124, 3148, 4422, 4577, 972, 1845, 777, 2912,
	1092, 1092, 2912, 2750, 2430, 2136, 1092, 1092, 4059, 973,
	2955, 1456, 1092, 1456, 3336, 797, 3311, 1684, 2924, 1993,
	870, 1092, 1092, 1092, 2854, 2905, 4552, 1092, 2143, 3236,
	2136, 2976, 3974, 4423, 3345, 1680, 4553, 1092, 2974, 2413,
	2108, 2731, 2983, 2985, 2438, 2987, 2083, 2989, 1619, 1621,
	1567, 2984, 3782, 2986, 1092, 2988, 2132, 782, 4633, 701,
	2267, 3047, 3280, 1716, 2982, 4124, 1309, 2734, 3077, 3337,
	3012, 3870, 3023, 3310, 3343, 2997, 2728, 4140, 2990, 2855,
	2131, 2261, 3007, 2141, 2576, 3009, 2112, 3052, 3014, 2424,
	4600, 4635, 3013, 2475, 3689, 3072, 3073, 3054, 4474, 2426,
	3076, 2357, 2095, 3018, 3279, 4465, 3315, 4022, 1797, 3335,
	3094, 3033, 2616, 2127, 1289, 890, 2109, 3068, 2457, 2853,
	4655, 2629, 1034, 2142, 3575, 3143, 3144, 3145, 2733, 772,
	802, 803, 3142, 3140, 3141, 3133, 3134, 3135, 3136, 3138,
	3139, 2113, 2090, 2091, 1092, 1092, 1092, 1025, 766, 974,
	4642, 4069, 3864, 1092, 1092, 1092, 3317, 2096, 1092, 679,
	776, 3669, 3781, 1890, 2576, 2576, 3045, 1462, 1092, 1214,
	1353, 3779, 2128, 4382, 1092, 1237, 1092, 3185, 3186, 3875,
	1637, 2111, 883, 884, 973, 1214, 3519, 3015, 3976, 4521,
	4588, 4576, 4586, 3977, 733, 4401, 768, 2094, 1497, 4123,
	764, 975, 4682, 1353, 4269, 2411, 3818, 780, 2414, 2004,
	1893, 3083, 3432, 774, 2188, 1214, 1209, 3780, 1353, 4074,
	3316, 4060, 1883, 3795, 1534, 2614, 1235, 1228, 670, 3871,
	1727, 3168, 1209, 2360, 2093, 680, 1958, 2045, 4075, 3663,
	1353, 3919, 3207, 1891, 3220, 3979, 4660, 3187, 3227, 1575,
	4207, 4206, 1726, 3690, 4278, 1295, 1295, 4341, 2410, 771,
	2042, 3982, 1209, 1588, 3819, 871, 872, 3232, 3759, 3703,
	3999, 805, 804, 3613, 4551, 3290, 3433, 3998, 1092, 3424,
	3286, 3782, 2895, 681, 2889, 682, 2877, 778, 1035, 2214,
	3246, 2751, 1092, 3664, 2208, 2202, 4383, 2194, 2174, 3684,
	2082, 735, 3558, 1501, 3197, 1239, 1295, 3628, 2576, 2576,
	2576, 1958, 773, 2350, 3221, 741, 4441, 1614, 3520, 3665,
	3216, 3662, 3273, 3274, 974, 3195, 2777, 4404, 4173, 1092,
	806, 807, 3163, 3164, 3165, 2040, 4125, 3264, 2082, 1946,
	3965, 3213, 1726, 1295, 3196, 3257, 3179, 3300, 3225, 3205,
	3304, 3270, 1323, 1725, 3206, 3208, 3209, 1212, 3284, 3491,
	3237, 3194, 3283, 3491, 2310, 1295, 2038, 1295, 3484, 3777,
	885, 886, 3484, 1212, 3821, 2041, 975, 3201, 4090, 3211,
	2874, 3212, 2135, 1353, 4295, 1250, 3978, 1456, 1456, 1726,
	2135, 4247, 4245, 3691, 1295, 1952, 4187, 3876, 1295, 1892,
	3287, 3253, 1721, 1212, 3255, 3256, 3229, 3230, 3231, 3259,
	3302, 3260, 3298, 3261, 3369, 3297, 3371, 3038, 1727, 3375,
	3330, 1295, 3016, 3381, 3985, 3332, 3301, 3358, 1295, 3306,
	1295, 1797, 3308, 2252, 1353, 3291, 3920, 4287, 3352, 3258,
	1208, 788, 3254, 1725, 2412, 4072, 3780, 3346, 2351, 4659,
	4288, 3265, 1295, 873, 874, 3641, 1208, 3190, 3189, 3614,
	1654, 3271, 1456, 3486, 1295, 3786, 3334, 3486, 3615, 2881,
	1952, 2653, 3202, 3407, 3348, 3997, 3376, 3364, 3485, 3877,
	3382, 1214, 3485, 4289, 2652, 3440, 1208, 2199, 3416, 4384,
	1725, 2651, 3685, 2650, 1210, 1032, 2778, 2779, 3243, 3244,
	3318, 3245, 2607, 4348, 3423, 1556, 1295, 1295, 1993, 1993,
	1210, 2950, 1542, 3326, 4242, 3666, 1955, 3393, 1638, 3396,
	2950, 3200, 4195, 4051, 3339, 1554, 1543, 888, 1209, 1295,
	3438, 3342, 2755, 3710, 3365, 3474, 2610, 3460, 2212, 1928,
	1210, 3359, 3431, 3398, 4291, 3322, 3323, 4597, 3449, 3324,
	4379, 4167, 3340, 3204, 3388, 1727, 3341, 3378, 2958, 1993,
	2859, 3354, 3384, 4107, 2857, 2240, 3482, 4290, 1613, 1353,
	3367, 4444, 1353, 3228, 3500, 4349, 4451, 2609, 4438, 3926,
	3630, 4182, 2608, 2482, 4292, 1701, 2314, 4469, 1703, 3360,
	3361, 1955, 1280, 3362, 2775, 1700, 1993, 3392, 1698, 3434,
	740, 794, 3400, 4599, 4541, 1092, 3441, 1676, 1674, 1886,
	3419, 1092, 1092, 4368, 3420, 1092, 1092, 1092, 1993, 1092,
	1993, 3492, 3421, 4146, 4196, 4183, 3918, 3493, 1092, 1958,
	1648, 1646, 4106, 1644, 1642, 1640, 3446, 1092, 3472, 1634,
	1092, 3785, 3448, 174, 174, 3455, 1353, 1993, 3160, 3458,
	3459, 1993, 3513, 1629, 3535, 1092, 3476, 4445, 1627, 3203,
	3496, 4350, 3495, 1353, 1552, 3512, 3470, 3247, 3439, 1212,
	3125, 3057, 2878, 1958, 1958, 1092, 1092, 2811, 1092, 1092,
	1092, 3487, 3488, 3489, 3490, 3487, 3488, 3489, 3490, 1890,
	2767, 2679, 797, 2323, 1456, 1923, 1092, 1919, 1704, 1591,
	1092, 3161, 1958, 1958, 1092, 1092, 1092, 1092, 1092, 1092,
	1092, 1092, 1092, 1092, 1092, 1092, 1092, 1092, 1092, 1092,
	1092, 1092, 1092, 3521, 1092, 3538, 3509, 3587, 3494, 3588,
	2301, 1092, 1092, 1958, 3515, 3514, 1893, 3518, 1092, 1721,
	3547, 3548, 2995, 1555, 2994, 2965, 2339, 1663, 4023, 1092,
	2276, 1888, 1208, 2193, 3503, 2173, 3504, 1986, 3505, 3510,
	1214, 1214, 1829, 1553, 1092, 887, 1035, 2316, 3516, 1891,
	2315, 1602, 1702, 1525, 2481, 3750, 4516, 3749, 3368, 1699,
	2576, 2576, 1697, 4024, 3543, 4009, 983, 1886, 1952, 4437,
	4088, 1675, 1673, 1353, 4029, 3554, 3969, 2370, 3578, 3817,
	3659, 3561, 3563, 3564, 3570, 4574, 1210, 1209, 1209, 3808,
	3577, 3625, 1889, 3762, 1647, 1645, 3555, 1643, 1641, 1639,
	3646, 3722, 3720, 1633, 3702, 4293, 2370, 3593, 3427, 3422,
	3412, 4294, 1952, 1952, 3585, 3590, 2908, 1628, 3586, 3592,
	1092, 2900, 1626, 3617, 3667, 3668, 3632, 2893, 1551, 2885,
	2871, 2856, 2696, 2691, 2172, 2170, 2152, 3621, 3679, 3680,
	3681, 1952, 1952, 2137, 2110, 1092, 3618, 1890, 2576, 2576,
	2576, 2576, 2576, 2576, 2576, 2576, 2576, 2576, 2576, 2576,
	2576, 2576, 2576, 2576, 2576, 2576, 2576, 174, 2576, 2097,
	2084, 2025, 1952, 3626, 2022, 2019, 1092, 1092, 3634, 3635,
	3637, 3638, 2016, 2011, 1946, 2009, 2005, 1996, 4083, 1955,
	3437, 2300, 4565, 3565, 1893, 1730, 3648, 1189, 3379, 4074,
	1931, 3696, 4590, 2046, 2146, 1892, 3010, 3036, 3008, 1888,
	4479, 4112, 4105, 4104, 1092, 2326, 3584, 3649, 4075, 4036,
	988, 990, 992, 3951, 1190, 2951, 2886, 1891, 1212, 1212,
	2065, 1506, 2727, 1955, 1955, 4280, 2727, 2756, 1295, 4273,
	2229, 1295, 3829, 2092, 1695, 1696, 3682, 2725, 2266, 3733,
	3683, 2753, 2211, 1271, 2296, 2295, 1289, 2243, 1958, 1946,
	4478, 2324, 1955, 1955, 2273, 3737, 4031, 2245, 3738, 3740,
	1889, 1270, 4001, 1625, 728, 3706, 2354, 2759, 3752, 2253,
	4315, 2256, 2257, 2258, 3927, 1737, 1738, 3754, 3905, 1295,
	3313, 3760, 2760, 1955, 2780, 1092, 3721, 3725, 3723, 1734,
	3193, 3730, 3037, 1214, 1092, 1731, 3831, 2325, 1304, 2760,
	1238, 1208, 1208, 4593, 1295, 1295, 1295, 3380, 4584, 4546,
	3838, 254, 684, 3769, 2870, 2298, 3805, 3758, 2775, 2921,
	2195, 1295, 1315, 2818, 1191, 2816, 3801, 2825, 1271, 3775,
	3822, 1280, 3783, 1737, 1738, 3675, 1295, 3823, 781, 3757,
	1209, 1739, 1353, 2806, 3842, 3826, 2950, 1271, 2808, 2764,
	2762, 3784, 838, 3761, 3771, 1210, 1210, 4429, 667, 4629,
	4395, 2807, 2763, 4389, 1740, 3788, 1353, 695, 3802, 1092,
	1092, 3806, 3291, 1892, 3854, 1092, 1092, 1958, 4347, 3825,
	1092, 1092, 4334, 1092, 2199, 4264, 4240, 1092, 4176, 4174,
	3811, 4168, 3959, 3958, 3815, 2073, 1100, 3809, 1092, 1739,
	3807, 2074, 3794, 3656, 3426, 2572, 2915, 1952, 2594, 3824,
	4193, 3827, 2031, 1939, 1092, 3967, 3966, 3699, 3833, 2623,
	3832, 3281, 3837, 3235, 4658, 3862, 4391, 3845, 4471, 4471,
	3861, 3878, 3860, 4472, 4472, 3843, 3844, 3848, 3852, 3131,
	3132, 1473, 261, 261, 261, 3851, 673, 674, 3897, 689,
	673, 689, 699, 3849, 4603, 739, 3891, 1737, 1738, 757,
	3879, 2719, 2720, 1612, 763, 2717, 2718, 2477, 3671, 1611,
	3872, 261, 2719, 3887, 1214, 2717, 2510, 1678, 3814, 3810,
	1677, 1212, 1214, 3192, 1993, 4265, 1353, 4225, 1353, 4033,
	4028, 867, 4027, 3893, 3670, 1214, 3566, 261, 3373, 3370,
	1823, 1822, 4644, 4610, 4433, 4432, 1295, 1295, 4431, 4330,
	4243, 4220, 4166, 4163, 2075, 1353, 4062, 4048, 3947, 3853,
	3932, 1209, 3835, 3789, 3220, 3718, 3713, 3430, 1955, 1209,
	3429, 2079, 3307, 3252, 2992, 2973, 1952, 2972, 2971, 2970,
	2899, 2872, 1209, 2754, 2687, 3917, 2682, 3867, 2672, 3863,
	1214, 2671, 1214, 2660, 2442, 3952, 3953, 2317, 2297, 2294,
	2293, 2292, 2291, 2290, 1208, 2209, 2183, 1946, 2179, 2178,
	2177, 2176, 1295, 2175, 3992, 1999, 1998, 1997, 1995, 3989,
	3935, 3989, 1353, 1930, 1295, 1694, 3934, 1295, 4002, 3931,
	3929, 3930, 1693, 3993, 1635, 1520, 1353, 1209, 1519, 1209,
	3956, 2076, 2081, 3961, 1518, 3938, 3939, 4004, 4005, 1517,
	3942, 1946, 1946, 174, 3928, 1516, 1515, 1514, 1210, 3924,
	673, 673, 3933, 1509, 1505, 1503, 1295, 1295, 261, 2073,
	4032, 1502, 4034, 1459, 3968, 2074, 1344, 1343, 1342, 1341,
	1946, 1946, 1340, 1308, 1307, 1257, 1295, 1256, 1255, 1254,
	1253, 1252, 1251, 4007, 1249, 1244, 1243, 1955, 1353, 1242,
	4052, 1241, 1212, 1295, 1240, 1172, 4016, 2036, 4003, 4019,
	1212, 1946, 4049, 994, 980, 4352, 3983, 4035, 2313, 4046,
	2703, 1289, 1687, 1212, 2077, 92, 1511, 824, 1214, 86,
	4026, 2144, 3717, 951, 4468, 4080, 4021, 1495, 1295, 1295,
	1295, 4374, 832, 4453, 3803, 3250, 3251, 4018, 3309, 2199,
	4108, 1353, 2828, 2275, 4091, 1636, 4047, 3989, 2277, 3215,
	2636, 4092, 4421, 1092, 1092, 1092, 3901, 1280, 3093, 4040,
	2083, 4111, 4322, 4139, 2480, 1209, 1827, 4045, 1212, 4053,
	1212, 1353, 4068, 3172, 88, 1208, 1092, 1076, 2075, 1092,
	1092, 4095, 4086, 1208, 4077, 1122, 3285, 4058, 4057, 1092,
	3970, 3705, 1958, 2940, 4055, 2079, 1208, 1092, 1092, 4093,
	4100, 4079, 4054, 1943, 1945, 1042, 1356, 4490, 2047, 1082,
	2063, 3272, 1353, 2056, 1295, 2673, 4131, 2554, 4117, 1099,
	1096, 1947, 1949, 3333, 4115, 1098, 4114, 1097, 4120, 1210,
	1948, 4119, 1846, 1095, 4126, 1942, 3813, 1210, 2852, 2919,
	3456, 1561, 1559, 953, 1353, 3347, 2051, 3349, 2436, 2464,
	1210, 1208, 1092, 1208, 3082, 1993, 1820, 1057, 1078, 2461,
	1233, 1092, 1067, 4136, 1056, 2076, 2081, 1993, 3198, 1092,
	1993, 1958, 3177, 3443, 3377, 3655, 2349, 4061, 3383, 842,
	1092, 3128, 2467, 1092, 1224, 2577, 2570, 2566, 4148, 3262,
	4078, 2909, 4159, 4160, 4142, 1092, 1707, 4153, 1799, 2920,
	1338, 1060, 1353, 2434, 1811, 1210, 1212, 1210, 3062, 1295,
	2359, 3450, 4203, 4099, 1295, 1295, 3218, 2666, 3020, 4162,
	4475, 3574, 2187, 1188, 1187, 1231, 1186, 4459, 4456, 1993,
	4179, 4177, 2134, 3846, 3405, 2039, 2711, 2078, 1789, 4186,
	3413, 2966, 4219, 1072, 1455, 3183, 1946, 4178, 2077, 4255,
	3475, 1952, 1522, 2576, 762, 4200, 1084, 1788, 2849, 1353,
	2848, 4344, 1295, 4246, 1324, 3407, 4230, 1322, 1321, 4217,
	1320, 4617, 4680, 3714, 4221, 228, 3030, 1728, 1720, 225,
	1214, 1214, 227, 226, 4063, 3660, 3224, 4544, 4227, 1208,
	3321, 4232, 4235, 4263, 2083, 4209, 3735, 4236, 2572, 2572,
	1092, 1092, 4298, 4299, 4238, 4244, 3397, 23, 4279, 3989,
	3989, 4283, 4259, 4274, 4211, 4212, 2576, 1092, 1958, 4254,
	4275, 4302, 22, 21, 112, 42, 4277, 1209, 1209, 20,
	1952, 4239, 4234, 128, 147, 146, 120, 145, 144, 143,
	142, 4276, 4226, 1210, 4228, 3319, 4229, 149, 4282, 4281,
	141, 140, 4296, 4271, 135, 139, 4095, 138, 137, 1092,
	136, 134, 1092, 132, 133, 127, 131, 130, 129, 1214,
	126, 125, 1955, 4311, 4312, 1946, 124, 123, 4310, 122,
	121, 1214, 4222, 119, 118, 3320, 4340, 117, 116, 115,
	114, 113, 753, 750, 61, 60, 111, 110, 3989, 19,
	40, 14, 1226, 4363, 65, 66, 18, 4331, 4314, 13,
	3989, 35, 91, 102, 4320, 4336, 1209, 101, 2082, 4339,
	1456, 36, 99, 1092, 1092, 98, 34, 17, 1209, 16,
	3059, 3060, 4378, 1092, 15, 1246, 4356, 4357, 1214, 96,
	4362, 1214, 2572, 2572, 2572, 1295, 95, 261, 33, 261,
	261, 1955, 1275, 261, 1285, 1295, 1295, 31, 11, 9,
	4398, 4370, 1993, 4400, 263, 1305, 8, 3989, 1212, 1212,
	3989, 2078, 1295, 4372, 757, 37, 1907, 1952, 12, 5,
	4412, 2576, 4386, 4387, 179, 1209, 1092, 1092, 1209, 4393,
	4385, 4390, 4397, 4392, 178, 181, 1092, 177, 261, 4259,
	261, 261, 1275, 4405, 261, 261, 180, 1285, 4410, 4411,
	4406, 90, 176, 4409, 3131, 3132, 175, 4417, 261, 4418,
	1475, 89, 1351, 1280, 29, 4415, 1450, 10, 171, 4416,
	4256, 3799, 81, 173, 172, 170, 4446, 1092, 1092, 169,
	1092, 1499, 4371, 4426, 4450, 168, 82, 4430, 79, 167,
	85, 1208, 1208, 166, 80, 84, 4408, 1212, 4473, 4425,
	1524, 83, 27, 1285, 6, 4458, 4461, 261, 261, 1212,
	1275, 4470, 64, 7, 3154, 3155, 3156, 4448, 4477, 4449,
	4121, 3497, 105, 4495, 106, 38, 77, 76, 75, 757,
	3146, 261, 261, 1092, 1092, 1092, 4499, 4463, 1955, 26,
	4498, 63, 25, 4467, 212, 1210, 1210, 4480, 211, 210,
	4462, 209, 208, 4466, 867, 207, 4486, 206, 205, 200,
	199, 204, 4494, 4376, 202, 1092, 1212, 4493, 201, 1212,
	203, 198, 215, 4528, 214, 220, 4512, 4513, 4533, 219,
	1208, 4515, 218, 4514, 217, 216, 213, 4396, 222, 197,
	196, 1055, 1208, 195, 193, 4547, 189, 188, 4529, 192,
	194, 191, 190, 187, 221, 4554, 4531, 72, 4556, 164,
	165, 71, 163, 4570, 162, 4558, 161, 160, 159, 1092,
	158, 157, 70, 4568, 3137, 24, 2, 4569, 261, 1,
	0, 4555, 4575, 0, 1210, 0, 0, 0, 0, 4563,
	0, 4564, 0, 0, 4566, 4567, 1210, 261, 4591, 1208,
	4572, 0, 1208, 4562, 0, 0, 0, 0, 4595, 0,
	4583, 4581, 4582, 4587, 4585, 0, 0, 2115, 1214, 0,
	1214, 2082, 4598, 4594, 4596, 0, 4458, 4612, 0, 4461,
	0, 3770, 4602, 4615, 4613, 4378, 4624, 4607, 4477, 4611,
	4614, 0, 4616, 0, 4623, 4622, 4619, 3989, 0, 3989,
	1946, 0, 0, 1210, 0, 0, 1210, 4637, 0, 0,
	0, 0, 4481, 4618, 0, 1209, 0, 1209, 4483, 4543,
	4636, 0, 0, 4639, 0, 0, 0, 0, 3147, 0,
	0, 0, 4645, 0, 2092, 4652, 0, 0, 4646, 0,
	1092, 1092, 4648, 2121, 0, 4650, 0, 0, 0, 1092,
	4653, 1092, 1092, 4656, 0, 0, 0, 4643, 0, 4662,
	4665, 4671, 0, 0, 0, 4674, 4676, 4668, 4675, 4673,
	4670, 0, 0, 4669, 0, 0, 3385, 4672, 0, 1946,
	4683, 0, 4684, 0, 4679, 0, 2116, 4686, 0, 2921,
	4688, 0, 4689, 0, 4691, 0, 0, 4687, 4685, 0,
	4694, 0, 0, 0, 0, 0, 0, 3417, 1092, 4699,
	4695, 4701, 0, 0, 4696, 4702, 0, 4704, 4705, 3425,
	4691, 0, 4698, 0, 4663, 4664, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1737,
	1738, 0, 0, 0, 0, 673, 0, 0, 0, 0,
	0, 0, 0, 0, 2572, 2572, 1212, 0, 1212, 0,
	0, 3466, 3467, 1768, 0, 0, 261, 0, 261, 0,
	1740, 0, 261, 3148, 0, 0, 0, 0, 0, 0,
	0, 4700, 0, 0, 0, 1475, 1275, 261, 0, 261,
	0, 0, 0, 0, 0, 261, 1475, 689, 0, 1737,
	1738, 0, 261, 1475, 0, 1739, 1922, 0, 0, 0,
	0, 0, 0, 0, 0, 1759, 0, 2000, 0, 0,
	0, 0, 0, 1768, 0, 0, 1946, 0, 0, 261,
	1740, 0, 0, 0, 0, 0, 261, 0, 0, 1208,
	0, 1208, 2572, 2572, 2572, 2572, 2572, 2572, 2572, 2572,
	2572, 2572, 2572, 2572, 2572, 2572, 2572, 2572, 2572, 2572,
	2572, 0, 2572, 0, 0, 1739, 0, 3131, 3132, 0,
	3149, 3150, 3151, 0, 0, 1759, 757, 0, 0, 0,
	0, 0, 0, 0, 1756, 0, 3531, 3532, 0, 0,
	3883, 0, 0, 1210, 0, 1210, 0, 0, 2114, 1762,
	1763, 1764, 1765, 0, 0, 0, 0, 0, 0, 1745,
	0, 0, 3142, 3140, 3141, 3133, 3134, 3135, 3136, 3138,
	3139, 0, 4008, 0, 2844, 2124, 2073, 0, 0, 2067,
	0, 0, 2074, 0, 4017, 0, 0, 4020, 3534, 0,
	0, 0, 0, 3146, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2122, 1767, 1769, 0, 2836, 2834, 1762,
	1763, 1764, 1765, 0, 2838, 2840, 2830, 0, 0, 1745,
	0, 0, 0, 0, 3594, 3595, 3596, 3597, 3598, 3599,
	3600, 3601, 3602, 3603, 3604, 3605, 3606, 3607, 3608, 3609,
	3610, 3611, 3612, 2119, 3616, 0, 4076, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1760, 1767, 1769, 0, 0, 0, 0,
	0, 0, 0, 0, 2123, 0, 0, 0, 0, 0,
	0, 0, 261, 0, 0, 261, 0, 3137, 0, 0,
	1754, 1755, 0, 0, 0, 2075, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1055, 0, 0,
	0, 1055, 2079, 0, 0, 0, 2165, 0, 0, 0,
	0, 0, 0, 1760, 0, 0, 0, 1437, 0, 0,
	0, 1437, 0, 0, 0, 0, 0, 0, 261, 0,
	0, 0, 261, 0, 0, 0, 0, 0, 261, 3152,
	0, 0, 0, 0, 261, 0, 0, 1737, 1738, 0,
	1770, 1771, 1772, 1780, 1781, 1782, 0, 0, 0, 0,
	261, 0, 261, 0, 0, 0, 673, 0, 261, 0,
	1773, 1768, 2076, 2081, 0, 0, 0, 1766, 1740, 0,
	757, 3147, 2832, 0, 867, 0, 0, 1786, 0, 0,
	0, 0, 0, 2846, 0, 0, 0, 0, 1761, 0,
	0, 0, 3131, 3132, 0, 3149, 3150, 3151, 0, 261,
	0, 1275, 261, 1739, 2845, 2837, 2835, 2839, 2841, 2831,
	2833, 2847, 0, 1759, 0, 3540, 757, 0, 2843, 0,
	0, 0, 1756, 261, 0, 0, 0, 1766, 0, 0,
	2274, 0, 0, 0, 0, 261, 261, 0, 261, 0,
	261, 0, 261, 3767, 261, 2077, 0, 0, 1761, 0,
	0, 0, 2850, 0, 0, 0, 0, 0, 0, 4233,
	0, 0, 0, 0, 0, 0, 0, 2306, 3146, 0,
	2307, 0, 2308, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 261, 0, 0, 2071, 0, 0,
	0, 2083, 0, 0, 0, 0, 0, 1762, 1763, 1764,
	1765, 0, 0, 0, 0, 0, 0, 1745, 0, 739,
	0, 0, 0, 757, 0, 0, 3148, 0, 0, 3839,
	3840, 3841, 0, 0, 0, 0, 0, 1750, 1748, 1749,
	1741, 1742, 1743, 1744, 1746, 1747, 1289, 0, 0, 0,
	0, 0, 2069, 1777, 0, 0, 1787, 0, 0, 0,
	0, 0, 1767, 1769, 0, 0, 0, 0, 0, 2373,
	0, 0, 3137, 0, 0, 0, 0, 0, 0, 1783,
	0, 1784, 0, 0, 0, 0, 0, 0, 1754, 1755,
	0, 0, 2070, 0, 1757, 1753, 0, 1750, 1748, 1749,
	1741, 1742, 1743, 1744, 1746, 1747, 1775, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1760, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3152, 2851, 0, 0, 0, 0,
	0, 0, 0, 0, 2842, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2478, 0, 3143, 3144,
	3145, 0, 0, 1785, 0, 3142, 3140, 3141, 3133, 3134,
	3135, 3136, 3138, 3139, 0, 0, 3147, 0, 2078, 0,
	673, 1774, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 261, 0, 0, 0, 0,
	0, 0, 0, 0, 673, 0, 0, 0, 0, 0,
	0, 261, 0, 673, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 261, 0, 0, 0, 0,
	0, 3944, 3945, 0, 0, 0, 0, 0, 0, 0,
	0, 261, 1285, 0, 0, 1766, 0, 0, 0, 0,
	0, 2646, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1437, 0, 0, 0, 0, 1761, 0, 0, 0,
	0, 1737, 1738, 0, 1770, 1771, 1772, 1780, 1781, 1782,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 261,
	1285, 0, 1778, 689, 0, 1768, 0, 0, 0, 0,
	0, 0, 1740, 2686, 0, 0, 0, 0, 0, 261,
	0, 1786, 261, 0, 0, 0, 261, 0, 261, 0,
	0, 3148, 0, 1275, 0, 261, 261, 0, 1285, 1285,
	2702, 0, 0, 0, 0, 261, 0, 1739, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1759, 0, 0,
	0, 1289, 0, 0, 0, 0, 1756, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2572, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1055, 0,
	2743, 0, 0, 0, 1437, 0, 0, 0, 0, 0,
	0, 261, 0, 1776, 0, 0, 2722, 0, 1751, 1752,
	1758, 1779, 1757, 1753, 261, 1750, 1748, 1749, 1741, 1742,
	1743, 1744, 1746, 1747, 0, 0, 1885, 261, 3106, 0,
	0, 0, 3107, 4116, 0, 4118, 0, 0, 0, 0,
	2572, 1762, 1763, 1764, 1765, 0, 0, 0, 0, 0,
	0, 1745, 0, 0, 261, 0, 0, 0, 0, 0,
	1737, 1738, 0, 3143, 3144, 3145, 1780, 1781, 1782, 0,
	3142, 3140, 3141, 3133, 3134, 3135, 3136, 3138, 3139, 0,
	261, 2862, 0, 0, 1768, 0, 0, 1777, 0, 0,
	1787, 1740, 0, 0, 0, 0, 1767, 1769, 0, 0,
	1786, 0, 0, 0, 0, 1475, 0, 0, 261, 4145,
	261, 0, 0, 0, 0, 0, 0, 261, 0, 4164,
	0, 0, 1754, 1755, 0, 0, 1739, 2904, 0, 0,
	0, 1437, 0, 0, 0, 0, 1759, 2743, 0, 673,
	1775, 0, 0, 0, 0, 1756, 0, 0, 2933, 867,
	0, 2743, 2743, 0, 0, 1760, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 261, 0,
	0, 0, 4189, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 261, 1275, 261,
	0, 0, 0, 1475, 0, 1475, 1285, 261, 0, 0,
	1275, 0, 1275, 0, 1275, 2572, 0, 0, 0, 0,
	0, 0, 0, 1041, 0, 0, 0, 0, 0, 4237,
	1762, 1763, 1764, 1765, 0, 0, 0, 0, 0, 0,
	1745, 0, 0, 0, 0, 261, 261, 261, 261, 1275,
	0, 0, 1275, 0, 261, 0, 261, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1777, 0, 0, 1787,
	0, 0, 0, 0, 0, 1767, 1769, 261, 0, 1766,
	0, 0, 0, 0, 0, 261, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1761, 1754, 1755, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1775,
	0, 0, 0, 0, 0, 0, 1778, 0, 0, 0,
	0, 0, 0, 0, 1760, 0, 0, 4319, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1475, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1437, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1776, 0, 0,
	0, 0, 1751, 1752, 1758, 1779, 1757, 1753, 0, 1750,
	1748, 1749, 1741, 1742, 1743, 1744, 1746, 1747, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1766, 0,
	1289, 1289, 0, 0, 0, 0, 0, 73, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1289, 0, 1761,
	0, 1437, 0, 0, 74, 0, 0, 0, 0, 0,
	1737, 1738, 0, 1770, 1771, 1772, 1780, 1781, 1782, 0,
	78, 0, 0, 0, 0, 1778, 0, 0, 0, 0,
	0, 0, 0, 1773, 1768, 261, 0, 0, 0, 0,
	0, 1740, 0, 0, 0, 0, 0, 0, 0, 0,
	1786, 261, 0, 0, 0, 0, 673, 0, 0, 3184,
	87, 673, 0, 0, 673, 0, 0, 673, 673, 0,
	1437, 0, 0, 673, 0, 0, 1739, 0, 0, 0,
	0, 261, 0, 0, 0, 0, 1759, 0, 0, 0,
	0, 0, 3210, 1475, 0, 1756, 1437, 0, 0, 0,
	861, 0, 0, 0, 0, 0, 0, 3223, 0, 0,
	0, 0, 0, 0, 107, 0, 1475, 0, 0, 93,
	104, 0, 0, 0, 0, 0, 1776, 0, 261, 3241,
	0, 0, 261, 261, 1779, 1757, 1753, 0, 1750, 1748,
	1749, 1741, 1742, 1743, 1744, 1746, 1747, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2743, 2743, 261, 0, 3277, 0, 0, 0, 0,
	1762, 1763, 1764, 1765, 0, 2743, 94, 0, 3293, 0,
	1745, 0, 0, 0, 0, 0, 2743, 3293, 0, 2743,
	3293, 3131, 3132, 3293, 3149, 3150, 3151, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 261, 261, 3277, 0,
	261, 0, 0, 0, 3539, 0, 1777, 0, 0, 1787,
	0, 0, 0, 0, 0, 1767, 1769, 0, 0, 0,
	3277, 0, 261, 0, 3351, 3351, 0, 0, 1275, 0,
	0, 1437, 1783, 0, 1784, 0, 0, 0, 0, 0,
	0, 1754, 1755, 2743, 0, 2743, 0, 3374, 2743, 3277,
	0, 0, 2743, 3277, 0, 0, 0, 3146, 0, 1775,
	0, 0, 0, 0, 0, 0, 1300, 0, 0, 0,
	0, 0, 0, 0, 1760, 0, 0, 0, 0, 0,
	0, 0, 0, 261, 0, 0, 0, 0, 0, 1041,
	0, 0, 0, 1041, 0, 0, 0, 261, 3401, 0,
	0, 3403, 2743, 1437, 0, 261, 0, 0, 0, 261,
	97, 0, 1285, 3223, 0, 0, 1785, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 261, 0, 0,
	0, 0, 2904, 0, 1774, 1275, 0, 261, 0, 1477,
	2743, 1483, 673, 1489, 0, 0, 0, 0, 0, 2743,
	0, 3137, 1737, 1738, 0, 0, 0, 0, 0, 0,
	0, 0, 182, 100, 0, 103, 0, 0, 0, 0,
	261, 2904, 0, 0, 2904, 0, 1768, 0, 0, 0,
	0, 0, 0, 1740, 0, 0, 0, 0, 0, 229,
	0, 0, 0, 0, 0, 0, 0, 862, 1766, 0,
	0, 0, 148, 0, 0, 0, 3502, 0, 1578, 0,
	1583, 0, 0, 3152, 0, 0, 0, 0, 1739, 1761,
	1592, 0, 1597, 3508, 0, 0, 1275, 261, 1759, 261,
	0, 0, 0, 0, 0, 1275, 231, 1756, 0, 0,
	0, 0, 0, 0, 0, 1778, 0, 0, 1450, 0,
	0, 1351, 0, 0, 0, 3147, 0, 0, 0, 0,
	0, 0, 150, 0, 0, 261, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 186, 0, 0,
	0, 0, 0, 0, 0, 230, 1659, 0, 0, 1665,
	0, 3529, 0, 0, 0, 0, 0, 223, 0, 0,
	0, 0, 0, 0, 0, 0, 224, 0, 0, 0,
	0, 0, 1762, 1763, 1764, 1765, 0, 0, 0, 0,
	0, 3572, 1745, 0, 0, 3551, 3131, 3132, 1572, 3149,
	3150, 3151, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3567, 0, 0, 0, 1776, 0, 0, 0,
	0, 1751, 1752, 1758, 1779, 1757, 1753, 0, 1750, 1748,
	1749, 1741, 1742, 1743, 1744, 1746, 1747, 1767, 1769, 0,
	0, 2455, 0, 0, 0, 2456, 0, 0, 0, 0,
	0, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 0, 0,
	0, 0, 0, 1754, 1755, 0, 0, 0, 0, 0,
	3148, 0, 3146, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1808, 0, 0, 0, 261, 261, 1821, 0,
	0, 0, 0, 0, 0, 0, 1760, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 673, 673,
	0, 0, 0, 0, 0, 3131, 3132, 0, 3149, 3150,
	3151, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1475, 1475, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3658, 0, 1475, 1475, 1475, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3131, 3132, 0, 3149, 3150, 3151, 3137, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3351, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3146, 0, 1879, 1879, 1879, 0, 0, 0, 0,
	0, 0, 3143, 3144, 3145, 3153, 0, 0, 0, 3142,
	3140, 3141, 3133, 3134, 3135, 3136, 3138, 3139, 0, 0,
	1766, 0, 0, 0, 757, 0, 0, 0, 3152, 0,
	0, 0, 0, 0, 1437, 0, 3146, 1737, 1738, 0,
	0, 1761, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3351, 0, 0, 0, 0,
	0, 1768, 0, 0, 0, 0, 261, 1437, 1740, 0,
	3147, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1437, 0, 0, 3137, 3277, 0, 261, 0,
	0, 0, 0, 1124, 0, 0, 0, 0, 0, 261,
	0, 0, 0, 1739, 1437, 0, 0, 0, 0, 261,
	0, 0, 0, 1759, 0, 0, 0, 0, 0, 261,
	0, 0, 1756, 0, 261, 0, 0, 0, 0, 261,
	3137, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1041, 0, 1055, 0, 0, 0, 0, 3152, 2743, 261,
	0, 0, 0, 0, 0, 0, 1055, 0, 2933, 2933,
	0, 0, 0, 0, 867, 867, 2743, 0, 0, 0,
	2904, 2904, 0, 0, 867, 2743, 3528, 1757, 1753, 0,
	1750, 1748, 1749, 1741, 1742, 1743, 1744, 1746, 1747, 3147,
	0, 0, 0, 0, 0, 0, 261, 1762, 1763, 1764,
	1765, 0, 0, 0, 0, 0, 0, 1745, 0, 0,
	0, 0, 0, 0, 0, 3148, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3147, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1437, 0, 0,
	0, 0, 1767, 1769, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3902, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1754, 1755,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1437, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1760, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1215, 0, 0, 0, 0,
	261, 0, 0, 0, 3148, 0, 1475, 0, 261, 0,
	0, 0, 0, 0, 0, 0, 0, 3143, 3144, 3145,
	0, 261, 0, 0, 3142, 3140, 3141, 3133, 3134, 3135,
	3136, 3138, 3139, 0, 0, 0, 0, 3937, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3148,
	0, 0, 0, 0, 2743, 2743, 0, 3351, 0, 0,
	3351, 0, 0, 0, 3949, 0, 0, 0, 0, 2743,
	0, 0, 0, 0, 0, 0, 3991, 0, 3991, 1475,
	0, 0, 0, 0, 0, 0, 0, 2743, 0, 3293,
	0, 0, 0, 1475, 1475, 261, 3277, 0, 0, 0,
	0, 0, 0, 1437, 0, 1766, 1437, 0, 0, 3277,
	0, 261, 3277, 0, 261, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1761, 0, 0, 2743,
	0, 2743, 261, 0, 0, 0, 3143, 3144, 3145, 0,
	0, 0, 0, 3142, 3140, 3141, 3133, 3134, 3135, 3136,
	3138, 3139, 0, 0, 0, 0, 0, 0, 0, 2743,
	0, 0, 0, 0, 4065, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 261, 0, 0, 0, 0,
	1437, 3143, 3144, 3145, 0, 261, 0, 0, 3142, 3140,
	3141, 3133, 3134, 3135, 3136, 3138, 3139, 1437, 0, 0,
	0, 0, 2348, 0, 2352, 0, 0, 0, 0, 0,
	0, 2366, 0, 0, 3991, 0, 0, 1475, 2375, 2376,
	2377, 2378, 2379, 2380, 2381, 2382, 2383, 2384, 2385, 2386,
	2387, 2388, 2389, 2390, 2391, 2392, 2393, 2394, 2395, 2396,
	2397, 2398, 2399, 2400, 2401, 2402, 2403, 2404, 2405, 2406,
	2407, 2408, 2409, 0, 2415, 0, 2417, 2418, 2419, 2420,
	1351, 0, 1757, 1753, 0, 1750, 1748, 1749, 1741, 1742,
	1743, 1744, 1746, 1747, 0, 0, 0, 0, 2444, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1808,
	4137, 0, 0, 2459, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2489,
	2492, 2495, 2498, 0, 2502, 2503, 2504, 2505, 2506, 2507,
	2508, 0, 0, 0, 0, 4170, 4171, 1437, 0, 0,
	0, 4137, 0, 0, 0, 0, 2743, 0, 3293, 0,
	0, 4181, 2568, 0, 2579, 2581, 2586, 0, 156, 261,
	0, 0, 0, 0, 0, 0, 4201, 73, 4201, 46,
	45, 0, 0, 2373, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 74, 0, 0, 151, 757, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1275,
	78, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 67, 0, 0, 3277, 0, 261, 0, 48, 0,
	153, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2373, 0, 0, 0, 1204, 4181, 0, 47, 0,
	87, 0, 0, 0, 2743, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4268, 0, 0, 0, 50, 68, 0, 0,
	0, 0, 0, 0, 1475, 51, 0, 0, 0, 0,
	57, 256, 256, 669, 154, 0, 3991, 3991, 0, 0,
	0, 0, 49, 0, 107, 0, 0, 0, 0, 93,
	104, 0, 1215, 0, 261, 261, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3572, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 52, 0,
	0, 0, 0, 0, 3351, 4333, 1215, 0, 0, 0,
	1215, 4335, 3351, 4338, 0, 1215, 94, 0, 0, 4181,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3991, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1215, 3991, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1737, 1738, 0, 261, 0,
	0, 0, 1215, 0, 0, 0, 1437, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4065, 1768,
	0, 0, 1215, 0, 0, 0, 1740, 1215, 0, 0,
	1437, 0, 0, 0, 3991, 0, 261, 3991, 0, 0,
	0, 1215, 0, 0, 0, 2865, 2866, 3293, 2868, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1739, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1759, 0, 1475, 0, 1475, 0, 0, 0, 0,
	1756, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	97, 0, 0, 0, 0, 1215, 0, 0, 0, 0,
	0, 4435, 0, 0, 0, 0, 0, 53, 0, 0,
	0, 0, 4442, 0, 0, 0, 0, 0, 0, 0,
	0, 56, 0, 0, 0, 4201, 59, 0, 261, 0,
	0, 0, 0, 0, 3048, 69, 0, 0, 0, 0,
	0, 58, 182, 100, 0, 103, 0, 2743, 0, 54,
	1437, 0, 1437, 155, 0, 1762, 1763, 1764, 1765, 0,
	55, 0, 0, 0, 0, 1745, 0, 0, 261, 229,
	0, 0, 0, 2991, 0, 0, 0, 62, 0, 1437,
	0, 0, 148, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3572, 152, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1767, 1769, 0, 0, 1475, 0, 231, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1790, 1791, 0, 0, 1754, 1755, 0, 0,
	0, 261, 150, 0, 0, 0, 1437, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 186, 0, 0,
	1437, 0, 0, 0, 0, 230, 0, 0, 0, 1760,
	0, 0, 0, 0, 0, 0, 0, 223, 0, 0,
	0, 0, 0, 4181, 0, 0, 224, 3042, 3043, 0,
	0, 0, 0, 3049, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 185, 0,
	0, 3, 3063, 3064, 0, 73, 0, 2743, 2459, 0,
	0, 0, 1437, 0, 3991, 0, 3991, 3071, 0, 1475,
	0, 0, 74, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3085, 0, 0, 0, 0, 78, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3097, 0, 0, 1215, 0, 1215, 0, 0, 0, 0,
	0, 0, 0, 1475, 0, 1437, 0, 0, 0, 0,
	1215, 0, 0, 0, 0, 0, 0, 0, 87, 0,
	0, 0, 0, 1766, 0, 0, 0, 0, 1959, 0,
	0, 0, 1215, 0, 0, 1437, 0, 0, 0, 2933,
	0, 0, 0, 0, 1761, 0, 0, 0, 2743, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 861, 0,
	0, 0, 0, 2933, 0, 0, 0, 0, 0, 0,
	0, 0, 107, 0, 0, 0, 1437, 93, 104, 0,
	0, 0, 0, 0, 0, 0, 1737, 1738, 0, 2586,
	2586, 2586, 0, 0, 0, 0, 0, 0, 1215, 0,
	0, 0, 0, 0, 1879, 0, 0, 0, 1437, 1215,
	1768, 0, 3188, 0, 0, 0, 0, 1740, 0, 0,
	0, 0, 0, 1077, 109, 0, 0, 0, 0, 0,
	0, 0, 0, 1215, 94, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1055, 0, 0,
	0, 0, 1739, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1759, 0, 0, 0, 1437, 0, 0, 0,
	0, 1756, 0, 0, 0, 0, 1261, 0, 1261, 1261,
	1757, 1753, 0, 1750, 1748, 1749, 1741, 1742, 1743, 1744,
	1746, 1747, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1041, 0, 0, 109, 0, 0,
	0, 0, 0, 1437, 0, 3041, 0, 1348, 1041, 0,
	0, 0, 0, 1454, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1762, 1763, 1764, 1765,
	0, 0, 0, 0, 0, 0, 1745, 0, 0, 0,
	1215, 1215, 0, 0, 0, 3312, 0, 0, 0, 0,
	1215, 0, 0, 0, 0, 0, 1737, 1738, 97, 1770,
	1771, 1772, 1780, 1781, 1782, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1016, 1773,
	1768, 1767, 1769, 0, 0, 0, 0, 1740, 0, 1036,
	0, 0, 0, 0, 0, 0, 1786, 0, 0, 0,
	1576, 1577, 0, 0, 0, 0, 0, 1754, 1755, 0,
	182, 100, 0, 103, 0, 0, 0, 0, 0, 0,
	0, 0, 1739, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1759, 0, 0, 1198, 0, 229, 0, 0,
	1760, 1756, 0, 0, 1215, 862, 1215, 0, 1215, 0,
	148, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1215, 1215, 0, 1055, 1055, 0,
	0, 0, 0, 0, 0, 1215, 0, 0, 0, 0,
	0, 0, 0, 0, 231, 0, 0, 1215, 0, 1215,
	1215, 1215, 0, 0, 0, 0, 0, 1686, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	150, 0, 0, 0, 0, 0, 1762, 1763, 1764, 1765,
	0, 0, 0, 0, 0, 186, 1745, 0, 0, 0,
	0, 0, 0, 230, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 223, 0, 0, 0, 0,
	0, 0, 0, 0, 224, 0, 0, 0, 0, 0,
	0, 0, 1777, 0, 1766, 1787, 0, 0, 0, 0,
	0, 1767, 1769, 0, 0, 0, 1570, 0, 0, 0,
	0, 0, 1055, 0, 0, 1761, 0, 0, 1783, 0,
	1784, 0, 0, 0, 0, 0, 0, 1754, 1755, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1959, 1959, 1215, 0, 1775, 0, 0, 0, 0,
	0, 2366, 0, 0, 0, 0, 0, 3526, 3527, 0,
	1760, 3530, 0, 0, 0, 3533, 0, 0, 0, 0,
	0, 0, 0, 0, 3537, 0, 0, 0, 0, 0,
	0, 0, 0, 3544, 0, 0, 3188, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3556, 1785, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1774, 3579, 3580, 0, 3581, 3582, 3583, 0, 0, 0,
	1215, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3589, 0, 0, 0, 3591, 0, 0, 0,
	0, 1757, 1753, 0, 1750, 1748, 1749, 1741, 1742, 1743,
	1744, 1746, 1747, 0, 0, 0, 0, 0, 0, 0,
	0, 1917, 0, 0, 0, 0, 0, 3619, 3620, 0,
	0, 0, 0, 0, 1766, 0, 1926, 0, 1454, 0,
	0, 0, 1215, 0, 0, 3631, 0, 0, 0, 1215,
	0, 0, 0, 0, 0, 1761, 0, 0, 1215, 0,
	3640, 0, 0, 0, 0, 0, 1737, 1738, 0, 1770,
	1771, 1772, 1780, 1781, 1782, 1215, 0, 0, 1261, 0,
	0, 1778, 0, 0, 0, 1454, 0, 0, 0, 1773,
	1768, 0, 0, 0, 0, 0, 0, 1740, 0, 0,
	0, 0, 0, 0, 0, 0, 1786, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1739, 0, 0, 0, 3686, 0, 0, 0,
	0, 0, 1759, 0, 0, 0, 0, 0, 0, 0,
	0, 1756, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3708, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1215, 1215,
	0, 0, 1776, 0, 0, 0, 0, 1751, 1752, 1758,
	1779, 1757, 1753, 3734, 1750, 1748, 1749, 1741, 1742, 1743,
	1744, 1746, 1747, 0, 0, 0, 0, 0, 0, 0,
	0, 3908, 0, 0, 109, 0, 0, 0, 0, 0,
	1215, 0, 0, 0, 0, 0, 1762, 1763, 1764, 1765,
	0, 0, 0, 0, 0, 0, 1745, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1959, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1777, 0, 0, 1787, 0, 0, 0, 0,
	0, 1767, 1769, 0, 0, 0, 0, 109, 0, 109,
	0, 109, 1215, 0, 0, 0, 0, 0, 1783, 0,
	1784, 0, 0, 0, 0, 0, 1215, 1754, 1755, 0,
	0, 1879, 0, 0, 0, 0, 0, 0, 0, 0,
	3834, 0, 0, 0, 0, 1775, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2185, 0, 0,
	1760, 2192, 1036, 109, 109, 0, 0, 0, 0, 1215,
	0, 0, 0, 2205, 0, 0, 109, 0, 109, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 109, 2217,
	109, 2217, 0, 0, 0, 0, 0, 2224, 0, 0,
	1215, 0, 1785, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1215, 0, 1215, 3880, 3881, 0, 0, 0,
	1774, 3885, 3886, 0, 0, 0, 3889, 3890, 0, 1215,
	0, 0, 0, 3894, 0, 0, 0, 0, 2192, 0,
	0, 2249, 0, 0, 3898, 0, 0, 0, 0, 0,
	0, 0, 109, 0, 0, 0, 0, 0, 0, 0,
	3903, 0, 2269, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2282, 0, 2284, 0, 2286,
	0, 2288, 0, 2289, 1766, 2547, 2548, 2549, 2550, 2543,
	2544, 2545, 2546, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1761, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2311, 0, 0, 0, 0, 0, 0,
	0, 1778, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1016, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1802, 0, 0, 0, 2523, 2524, 2525, 2526,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1807,
	0, 0, 0, 1813, 0, 0, 0, 0, 0, 2535,
	2536, 2537, 2538, 2531, 2532, 2533, 2534, 2539, 2540, 2541,
	2542, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1776, 0, 0, 0, 0, 1751, 1752, 1758,
	1779, 1757, 1753, 0, 1750, 1748, 1749, 1741, 1742, 1743,
	1744, 1746, 1747, 0, 0, 0, 0, 0, 0, 0,
	0, 3542, 0, 2519, 2520, 2521, 2522, 2527, 2528, 2529,
	2530, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 813, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1899, 0, 1902, 0, 109, 0, 1737,
	1738, 0, 815, 0, 0, 0, 0, 0, 816, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1768, 0, 0, 0, 0, 0, 0,
	1740, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2643, 0, 0, 817, 0, 834,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4132,
	4133, 4134, 1215, 1215, 0, 1739, 0, 0, 0, 0,
	0, 0, 0, 0, 818, 1759, 0, 0, 1215, 819,
	0, 0, 2366, 0, 1756, 4143, 4144, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1215, 0, 0, 0,
	0, 843, 0, 4152, 4155, 0, 0, 820, 1215, 0,
	0, 1215, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 841, 0, 0, 0, 0, 0, 0, 2688, 1959,
	0, 1261, 0, 1215, 0, 1261, 0, 1261, 0, 0,
	0, 0, 0, 0, 814, 0, 0, 0, 1215, 1215,
	0, 0, 0, 0, 2205, 0, 0, 0, 0, 1762,
	1763, 1764, 1765, 0, 0, 821, 0, 4202, 822, 1745,
	0, 0, 0, 0, 0, 4208, 0, 0, 0, 845,
	0, 0, 0, 0, 734, 0, 4215, 0, 0, 1041,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1215,
	0, 4223, 0, 0, 1959, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1767, 1769, 0, 0, 0, 0,
	0, 0, 1737, 1738, 0, 1770, 1771, 1772, 1780, 1781,
	1782, 0, 0, 0, 0, 0, 1215, 0, 0, 0,
	1754, 1755, 0, 0, 0, 1773, 1768, 0, 0, 1101,
	0, 0, 0, 1740, 0, 0, 0, 844, 1215, 0,
	1215, 0, 1786, 1454, 0, 0, 0, 839, 0, 0,
	0, 0, 0, 1760, 0, 0, 1215, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1215, 1739, 0,
	0, 1215, 0, 0, 0, 262, 262, 262, 1759, 0,
	0, 0, 0, 0, 0, 0, 0, 1756, 0, 0,
	0, 0, 0, 0, 1215, 0, 0, 2192, 0, 0,
	0, 1215, 0, 1215, 262, 823, 2205, 1215, 0, 0,
	0, 0, 0, 0, 0, 0, 825, 0, 0, 0,
	0, 0, 0, 0, 0, 1215, 0, 0, 0, 0,
	262, 0, 0, 0, 0, 0, 0, 1215, 0, 0,
	0, 0, 0, 0, 1036, 4343, 1036, 826, 4346, 0,
	0, 0, 0, 0, 1215, 0, 0, 2964, 0, 0,
	0, 0, 1762, 1763, 1764, 1765, 0, 0, 0, 0,
	0, 0, 1745, 835, 0, 0, 2975, 1766, 2978, 1215,
	1215, 0, 0, 0, 733, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 812, 0, 836, 1761, 0,
	0, 0, 1215, 0, 0, 0, 827, 0, 1777, 1041,
	1041, 1787, 0, 0, 0, 0, 0, 1767, 1769, 4394,
	0, 0, 0, 0, 3003, 1454, 3005, 1454, 0, 0,
	833, 0, 0, 3011, 1783, 0, 1784, 0, 0, 0,
	0, 0, 1215, 1754, 1755, 1215, 0, 828, 0, 0,
	0, 829, 848, 0, 847, 0, 0, 0, 830, 0,
	0, 1775, 0, 0, 0, 0, 1261, 0, 0, 0,
	0, 0, 831, 2366, 3039, 0, 1760, 840, 0, 0,
	0, 0, 4155, 849, 0, 846, 0, 0, 0, 0,
	0, 735, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1959, 1016, 0, 0, 1016, 1016, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1785, 1215,
	0, 0, 0, 0, 1041, 0, 0, 0, 0, 0,
	0, 0, 0, 719, 1757, 1753, 1215, 1750, 1748, 1749,
	1741, 1742, 1743, 1744, 1746, 1747, 1959, 1959, 0, 0,
	0, 0, 0, 702, 0, 0, 0, 0, 0, 703,
	0, 2433, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1959, 1959, 1036, 0, 4511,
	4511, 4511, 0, 0, 0, 0, 1807, 0, 0, 0,
	1807, 0, 0, 0, 0, 0, 0, 0, 704, 0,
	1766, 0, 0, 0, 0, 0, 1959, 0, 0, 705,
	0, 4532, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1761, 0, 0, 0, 0, 0, 0, 0, 0,
	706, 0, 0, 1215, 1215, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1778, 0, 0,
	0, 0, 725, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1198, 0, 0, 4511, 1215, 0, 0, 0,
	0, 0, 707, 0, 0, 0, 0, 0, 1902, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 708, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 109, 0, 0, 709, 0, 0, 710,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 734, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1776, 0,
	0, 0, 0, 1751, 1752, 1758, 1779, 1757, 1753, 724,
	1750, 1748, 1749, 1741, 1742, 1743, 1744, 1746, 1747, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4511, 4657, 0, 0,
	0, 0, 0, 0, 0, 4661, 0, 1261, 0, 0,
	0, 1454, 1454, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 721, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1215, 3275, 0, 1215, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1959, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 109, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3329, 3331, 0, 0, 2205,
	0, 0, 1215, 0, 0, 731, 0, 712, 0, 0,
	0, 0, 0, 0, 0, 0, 1215, 0, 0, 0,
	0, 0, 0, 109, 0, 0, 0, 1215, 1215, 1215,
	0, 0, 0, 0, 0, 0, 732, 0, 713, 0,
	0, 0, 0, 0, 1215, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1215,
	0, 109, 0, 0, 109, 1215, 109, 0, 0, 0,
	262, 0, 262, 262, 0, 733, 262, 0, 1298, 0,
	0, 0, 714, 0, 0, 0, 729, 730, 727, 1215,
	0, 0, 0, 0, 722, 0, 0, 715, 0, 0,
	1959, 0, 0, 0, 3414, 0, 0, 0, 3418, 0,
	109, 0, 0, 109, 0, 0, 0, 0, 0, 109,
	0, 262, 1298, 262, 262, 0, 1298, 262, 262, 0,
	0, 1298, 0, 0, 0, 0, 0, 0, 716, 0,
	723, 262, 0, 0, 0, 0, 0, 0, 0, 717,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1298, 718, 0, 0, 0, 0, 726, 3471,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 735, 0, 0, 0, 0, 0, 1298, 109,
	262, 262, 0, 720, 0, 0, 0, 1215, 0, 0,
	0, 0, 0, 0, 0, 1215, 0, 0, 1298, 1215,
	0, 1215, 0, 1298, 262, 262, 0, 0, 1215, 0,
	0, 0, 0, 0, 0, 0, 3511, 1298, 1454, 1215,
	1215, 0, 0, 0, 0, 0, 0, 0, 1215, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3524, 0, 0, 0, 0, 0,
	0, 0, 0, 1215, 0, 1215, 0, 0, 0, 0,
	0, 1298, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1215, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1215, 0, 1215, 2433, 0,
	1215, 262, 0, 719, 0, 0, 0, 0, 0, 1215,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1807,
	262, 0, 0, 702, 0, 0, 0, 0, 0, 703,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1215,
	1215, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1215,
	0, 0, 0, 0, 0, 0, 0, 0, 704, 0,
	0, 1215, 0, 0, 0, 0, 1215, 0, 0, 705,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	706, 1215, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1215, 1215, 1215, 0, 0, 0, 0, 0, 0,
	0, 0, 725, 0, 1215, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 707, 1737, 1738, 0, 1770, 1771, 1772, 1780,
	1781, 1782, 0, 0, 1215, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 708, 1773, 1768, 0, 0,
	0, 0, 0, 0, 1740, 1959, 0, 0, 0, 0,
	0, 0, 1198, 1786, 0, 0, 709, 0, 0, 710,
	0, 0, 0, 0, 0, 1215, 0, 1215, 1198, 0,
	0, 0, 0, 0, 0, 734, 0, 0, 0, 1739,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1759,
	0, 0, 0, 0, 0, 0, 0, 1215, 1756, 724,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 262, 0, 0, 0, 0,
	0, 0, 0, 0, 1959, 0, 1298, 0, 0, 0,
	262, 262, 262, 0, 0, 0, 0, 0, 262, 0,
	0, 0, 0, 0, 0, 262, 0, 0, 1298, 0,
	0, 0, 0, 0, 0, 1215, 0, 0, 721, 0,
	0, 0, 1215, 0, 0, 0, 0, 1215, 1215, 0,
	0, 0, 262, 1762, 1763, 1764, 1765, 2205, 0, 262,
	0, 0, 0, 1745, 0, 0, 0, 0, 2205, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3798, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1215, 2205, 1298, 1215, 109, 109, 3816, 1777,
	109, 0, 1787, 0, 0, 1298, 0, 712, 1767, 1769,
	0, 0, 0, 1215, 1215, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1783, 0, 1784, 0, 1298,
	0, 0, 0, 0, 1754, 1755, 732, 0, 713, 0,
	109, 109, 0, 0, 109, 0, 0, 0, 0, 0,
	0, 1959, 1775, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3865, 0, 1760, 0, 0,
	0, 0, 0, 0, 0, 733, 0, 0, 0, 0,
	0, 0, 714, 0, 0, 0, 729, 730, 727, 0,
	0, 0, 0, 0, 722, 0, 0, 715, 0, 0,
	0, 0, 1215, 0, 0, 0, 0, 0, 0, 1785,
	0, 0, 0, 0, 1215, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1774, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 716, 0,
	723, 0, 0, 0, 1198, 0, 0, 1036, 0, 717,
	0, 0, 0, 0, 0, 262, 1298, 1298, 262, 0,
	0, 109, 109, 718, 0, 0, 1298, 0, 726, 0,
	0, 1215, 0, 0, 1215, 0, 0, 0, 1215, 0,
	0, 0, 735, 0, 0, 0, 0, 0, 1215, 1215,
	0, 1766, 0, 720, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1215, 0, 0, 0, 0,
	0, 262, 1761, 0, 0, 262, 0, 0, 0, 0,
	0, 262, 0, 0, 0, 0, 0, 262, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1778, 0,
	0, 0, 0, 262, 0, 262, 0, 0, 0, 0,
	0, 262, 0, 0, 0, 0, 0, 0, 0, 0,
	1298, 0, 1298, 0, 1298, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1298, 1298, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1298, 262, 0, 4006, 262, 0, 0, 0, 0,
	0, 0, 0, 1298, 0, 1298, 1298, 1298, 0, 0,
	2205, 0, 0, 0, 0, 0, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 262, 262,
	0, 262, 0, 262, 0, 262, 0, 262, 0, 1776,
	0, 0, 0, 0, 1751, 1752, 1758, 1779, 1757, 1753,
	0, 1750, 1748, 1749, 1741, 1742, 1743, 1744, 1746, 1747,
	0, 925, 0, 971, 0, 0, 0, 0, 3109, 0,
	0, 0, 0, 0, 2205, 0, 0, 262, 0, 0,
	0, 0, 0, 0, 4087, 0, 0, 0, 933, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 947, 109, 931, 930, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1198, 1198, 0, 0, 0, 0, 1298,
	0, 0, 0, 0, 932, 0, 0, 0, 0, 935,
	0, 0, 0, 0, 979, 0, 0, 0, 0, 0,
	0, 0, 0, 944, 945, 0, 0, 0, 0, 0,
	0, 1215, 961, 1215, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	972, 937, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 938, 0,
	0, 0, 0, 0, 0, 0, 1298, 970, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 940, 0, 0, 0, 0, 0, 0, 0, 929,
	0, 0, 0, 1737, 1738, 0, 1770, 1771, 1772, 1780,
	1781, 1782, 0, 0, 0, 1298, 0, 941, 942, 0,
	0, 0, 0, 0, 0, 0, 1773, 1768, 0, 0,
	0, 0, 0, 0, 1740, 2205, 949, 948, 262, 0,
	0, 1298, 0, 1786, 943, 0, 0, 0, 958, 0,
	0, 0, 0, 0, 262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 976, 969, 0, 1739,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1759,
	0, 0, 0, 0, 0, 0, 0, 0, 1756, 0,
	109, 0, 0, 0, 0, 0, 0, 0, 973, 0,
	0, 0, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1198, 0, 0, 0,
	0, 0, 262, 4309, 1454, 262, 0, 0, 0, 262,
	0, 262, 0, 0, 0, 0, 0, 0, 262, 262,
	0, 0, 0, 0, 1298, 1298, 0, 0, 262, 0,
	936, 0, 0, 978, 0, 0, 0, 0, 0, 0,
	109, 0, 0, 1762, 1763, 1764, 1765, 0, 0, 0,
	0, 0, 0, 1745, 0, 934, 0, 0, 0, 965,
	966, 0, 0, 0, 0, 0, 1298, 0, 0, 0,
	0, 0, 968, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 262, 0, 0, 0, 0, 1777,
	0, 0, 1787, 0, 963, 0, 0, 262, 1767, 1769,
	0, 977, 959, 0, 952, 950, 0, 955, 0, 0,
	262, 0, 0, 956, 0, 1783, 927, 1784, 974, 0,
	0, 0, 0, 0, 1754, 1755, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 262, 1298, 928,
	0, 0, 1775, 0, 0, 4399, 0, 0, 0, 0,
	0, 967, 1298, 957, 0, 0, 0, 1760, 0, 954,
	0, 0, 0, 262, 0, 0, 0, 0, 0, 0,
	975, 109, 0, 0, 0, 0, 0, 1198, 960, 0,
	0, 0, 0, 0, 0, 1198, 0, 939, 0, 0,
	0, 262, 0, 262, 0, 1298, 0, 0, 0, 1785,
	262, 962, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1774, 0, 0,
	0, 0, 0, 0, 0, 964, 1298, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4452, 1298, 0,
	1298, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 262, 0, 0, 0, 1298, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1088,
	262, 0, 262, 0, 0, 0, 0, 4488, 0, 0,
	262, 1766, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1761, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 260, 260, 260, 262, 262,
	262, 262, 0, 0, 0, 0, 0, 262, 1778, 262,
	0, 0, 0, 0, 0, 0, 0, 0, 109, 0,
	0, 0, 0, 0, 795, 0, 0, 0, 0, 0,
	4548, 109, 0, 0, 0, 0, 0, 0, 0, 0,
	262, 0, 0, 0, 0, 0, 0, 0, 262, 0,
	795, 0, 0, 0, 109, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1776,
	0, 0, 0, 0, 1751, 1752, 1758, 1779, 1757, 1753,
	0, 1750, 1748, 1749, 1741, 1742, 1743, 1744, 1746, 1747,
	0, 0, 0, 0, 0, 0, 0, 0, 3108, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 266, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1211, 0, 0, 1737, 1738, 0, 1770, 1771, 1772,
	1780, 1781, 1782, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1773, 1768, 0,
	0, 0, 0, 0, 0, 1740, 0, 0, 0, 0,
	0, 0, 0, 0, 1786, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 787, 0, 0, 0, 0, 0, 0, 0,
	1739, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1759, 0, 0, 0, 0, 0, 0, 0, 787, 1756,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1298,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1298, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2433, 0, 1298, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1762, 1763, 1764, 1765, 0, 1298,
	0, 0, 0, 0, 1745, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1298, 1298, 0, 0, 0, 0,
	0, 262, 0, 0, 0, 262, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1777, 0, 0, 1787, 0, 0, 0, 0, 0, 1767,
	1769, 0, 0, 0, 0, 0, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 1298, 1783, 0, 1784, 0,
	0, 0, 0, 0, 0, 1754, 1755, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1775, 0, 0, 0, 0, 0, 262,
	262, 0, 1298, 262, 0, 0, 0, 0, 1760, 0,
	262, 0, 0, 0, 109, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1298, 262, 1298, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 109, 0,
	0, 0, 1298, 0, 0, 0, 0, 0, 0, 0,
	1785, 0, 0, 1298, 0, 0, 0, 1298, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1774, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1298, 0, 0, 0, 0, 0, 262, 1298, 0, 1298,
	0, 0, 0, 1298, 0, 0, 0, 0, 0, 0,
	262, 0, 0, 0, 0, 0, 0, 0, 262, 0,
	0, 1298, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1298, 0, 0, 0, 0, 0, 0,
	262, 0, 1766, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1761, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 109, 0, 1298, 1298, 0, 0, 109,
	0, 0, 0, 262, 0, 0, 0, 0, 0, 1778,
	0, 0, 0, 0, 0, 0, 0, 0, 1298, 0,
	1093, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	260, 0, 260, 260, 0, 0, 260, 0, 1298, 0,
	262, 1298, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 1737, 1738, 0, 1770, 1771, 1772, 1780, 1781, 1782,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1773, 1768, 0, 0, 262, 0,
	0, 260, 1740, 260, 260, 0, 0, 260, 260, 0,
	1776, 1786, 0, 0, 0, 1751, 1752, 1758, 1779, 1757,
	1753, 795, 1750, 1748, 1749, 1741, 1742, 1743, 1744, 1746,
	1747, 0, 0, 0, 0, 1298, 0, 1739, 0, 3105,
	0, 0, 0, 0, 0, 0, 0, 1759, 0, 0,
	0, 0, 1298, 0, 0, 0, 1756, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	260, 260, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 260, 260, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1762, 1763, 1764, 1765, 0, 0, 0, 0, 0,
	0, 1745, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1296, 1777, 0, 0,
	1787, 0, 1298, 0, 0, 0, 1767, 1769, 0, 0,
	0, 260, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1783, 0, 1784, 0, 0, 0, 0,
	260, 0, 1754, 1755, 0, 0, 0, 0, 0, 0,
	1354, 0, 0, 0, 1354, 0, 0, 0, 0, 1296,
	1775, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1760, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1296, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1296, 1785, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1774, 1296, 0, 0, 0,
	0, 1296, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1296, 0, 0, 0, 262,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1298, 0, 0,
	1298, 262, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 262, 0, 0, 0, 0, 0, 0, 1766,
	0, 0, 262, 0, 0, 0, 0, 0, 0, 1296,
	0, 0, 262, 0, 0, 0, 0, 262, 0, 0,
	1761, 0, 262, 0, 0, 0, 0, 0, 1298, 0,
	0, 0, 0, 1737, 1738, 0, 1770, 1771, 1772, 1780,
	1781, 1782, 0, 0, 0, 0, 1778, 0, 0, 0,
	0, 0, 0, 1298, 1298, 1298, 1773, 1768, 0, 1901,
	0, 1211, 0, 0, 1740, 260, 0, 0, 0, 0,
	1298, 0, 0, 1786, 0, 0, 0, 0, 0, 0,
	260, 1901, 260, 0, 0, 1298, 0, 0, 795, 262,
	0, 1298, 0, 0, 0, 795, 0, 0, 0, 1739,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1759,
	0, 0, 0, 0, 0, 1298, 0, 0, 1756, 0,
	0, 0, 260, 0, 0, 0, 0, 0, 0, 260,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1776, 0, 0,
	0, 0, 1751, 1752, 1758, 1779, 1757, 1753, 0, 1750,
	1748, 1749, 1741, 1742, 1743, 1744, 1746, 1747, 0, 0,
	0, 0, 0, 0, 0, 0, 3104, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1762, 1763, 1764, 1765, 0, 0, 0,
	0, 0, 0, 1745, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1298, 0, 1298, 0, 1777,
	0, 0, 1787, 0, 0, 0, 0, 0, 1767, 1769,
	0, 0, 0, 0, 0, 1298, 1298, 0, 0, 0,
	0, 0, 0, 0, 1298, 1783, 0, 1784, 0, 0,
	0, 0, 0, 0, 1754, 1755, 0, 0, 0, 1297,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1775, 0, 1354, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 787, 1760, 0, 0,
	0, 0, 0, 787, 0, 0, 1296, 0, 262, 0,
	0, 1298, 0, 1355, 0, 260, 0, 1355, 795, 0,
	0, 1298, 1297, 1298, 262, 0, 1298, 262, 0, 0,
	0, 0, 0, 0, 0, 1298, 0, 0, 0, 1785,
	0, 0, 0, 0, 0, 262, 0, 0, 0, 0,
	0, 0, 0, 1297, 0, 0, 0, 1774, 0, 0,
	0, 0, 0, 0, 0, 1298, 1298, 0, 0, 0,
	0, 260, 1296, 0, 0, 260, 0, 0, 0, 1297,
	0, 260, 0, 1296, 0, 1298, 0, 260, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 1298, 262, 1297,
	0, 0, 1298, 260, 1297, 260, 0, 1354, 0, 0,
	0, 260, 0, 0, 0, 0, 0, 0, 1297, 0,
	0, 1766, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1298, 1298, 1298,
	0, 0, 1761, 0, 0, 0, 0, 0, 0, 0,
	1298, 0, 260, 0, 0, 260, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1778, 0,
	0, 0, 1297, 0, 0, 0, 260, 0, 0, 0,
	1298, 0, 0, 0, 0, 0, 0, 0, 795, 260,
	0, 260, 0, 260, 0, 260, 0, 260, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1298, 0, 1298, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1296, 1296, 0, 260, 0, 0,
	0, 0, 0, 0, 1354, 0, 0, 0, 0, 0,
	0, 0, 0, 1298, 0, 0, 0, 0, 0, 0,
	0, 0, 262, 0, 0, 0, 0, 0, 0, 1776,
	0, 0, 0, 0, 1751, 1752, 1758, 1779, 1757, 1753,
	0, 1750, 1748, 1749, 1741, 1742, 1743, 1744, 1746, 1747,
	0, 0, 0, 0, 0, 0, 0, 0, 3103, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1298, 0, 0, 0, 0, 0, 0, 1298, 262,
	0, 0, 0, 1298, 1298, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1296, 0,
	1296, 0, 1296, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1296, 1296,
	0, 0, 0, 0, 0, 0, 0, 0, 1298, 1296,
	0, 1298, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1296, 0, 1296, 1296, 1296, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 787, 262, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1211, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1211, 0, 0, 1355, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 260, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1297,
	0, 0, 0, 0, 260, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1737, 1738, 0, 1770, 1771, 1772,
	1780, 1781, 1782, 0, 0, 0, 0, 1354, 0, 0,
	0, 262, 0, 0, 0, 0, 0, 1773, 1768, 0,
	0, 0, 0, 0, 0, 1740, 0, 0, 0, 0,
	0, 0, 260, 0, 1786, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1297, 0, 0, 0, 262,
	0, 0, 260, 0, 1298, 260, 1297, 0, 0, 260,
	1739, 260, 0, 0, 1298, 1298, 0, 0, 260, 260,
	1759, 0, 0, 0, 0, 0, 0, 0, 260, 1756,
	1355, 1298, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1354, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 260, 0, 0, 0, 0, 0,
	0, 262, 0, 0, 0, 0, 0, 260, 0, 0,
	0, 0, 0, 0, 1762, 1763, 1764, 1765, 0, 0,
	260, 0, 0, 1354, 1745, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 262, 0, 0, 0, 0, 0, 260, 0, 1354,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1777, 0, 0, 1787, 0, 0, 0, 1297, 1297, 1767,
	1769, 0, 0, 795, 0, 0, 0, 1355, 0, 0,
	0, 0, 0, 0, 0, 0, 1783, 0, 1784, 0,
	0, 0, 0, 0, 0, 1754, 1755, 0, 0, 0,
	0, 260, 0, 795, 0, 0, 0, 0, 0, 0,
	260, 0, 0, 1775, 262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1760, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1296, 1296, 0, 0, 0, 0, 0, 0,
	0, 260, 0, 0, 0, 0, 0, 0, 0, 0,
	1785, 1297, 0, 1297, 0, 1297, 0, 0, 0, 0,
	260, 0, 260, 0, 0, 0, 0, 0, 1774, 0,
	260, 1297, 1297, 0, 1354, 0, 0, 0, 0, 0,
	0, 0, 1297, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1297, 0, 1297, 1297, 1297, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 260, 260,
	260, 260, 0, 0, 0, 0, 0, 260, 0, 260,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1766, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1354, 0, 0, 0,
	260, 0, 0, 1761, 0, 0, 0, 0, 260, 0,
	1296, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1778,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 787, 0, 1296, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1355, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1296, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1296, 0, 1296, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1296, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1776, 0, 0, 0, 0, 1751, 1752, 1758, 1779, 1757,
	1753, 0, 1750, 1748, 1749, 1741, 1742, 1743, 1744, 1746,
	1747, 0, 0, 0, 0, 0, 0, 1355, 0, 2456,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1737, 1738, 0, 1770, 1771, 1772, 1780,
	1781, 1782, 0, 0, 0, 0, 1355, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1773, 1768, 1211, 0,
	0, 0, 0, 0, 1740, 0, 0, 0, 0, 0,
	0, 0, 1355, 1786, 1211, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1739,
	0, 0, 0, 0, 1901, 0, 0, 0, 0, 1759,
	0, 0, 0, 0, 0, 0, 0, 0, 1756, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 260, 0, 0, 0, 260, 260, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1297, 1297, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 260, 0, 0, 0,
	0, 0, 0, 1762, 1763, 1764, 1765, 0, 0, 0,
	0, 0, 0, 1745, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1355, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 260,
	260, 0, 0, 260, 0, 0, 0, 0, 0, 1777,
	1901, 0, 1787, 0, 0, 0, 0, 0, 1767, 1769,
	0, 0, 0, 0, 0, 260, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1783, 0, 1784, 0, 0,
	0, 0, 0, 0, 1754, 1755, 0, 1354, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1355,
	0, 0, 1775, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1297, 0, 0, 0, 1760, 0, 0,
	1354, 0, 0, 0, 0, 0, 260, 0, 0, 0,
	0, 0, 0, 0, 0, 1354, 0, 0, 0, 0,
	795, 0, 0, 0, 0, 0, 0, 0, 260, 0,
	0, 0, 260, 0, 0, 0, 1297, 1354, 0, 1785,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	260, 0, 1296, 1296, 0, 0, 0, 1774, 0, 0,
	1211, 0, 0, 0, 0, 0, 0, 1297, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1297,
	0, 1297, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 260, 0, 0, 1297, 0, 0, 0,
	0, 0, 0, 1296, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1766, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1296, 0, 1761, 0, 0, 0, 0, 0, 0, 0,
	260, 0, 260, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1296, 0, 1296, 0, 0, 0, 1778, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1354, 0, 0, 0, 0, 0, 0, 0, 260, 0,
	0, 1296, 0, 0, 0, 1296, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1296, 0,
	0, 0, 0, 0, 0, 1296, 0, 1296, 0, 0,
	0, 1354, 0, 0, 0, 0, 0, 0, 787, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1296,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1296, 0, 0, 0, 0, 0, 0, 0, 1776,
	0, 0, 0, 0, 1751, 1752, 1758, 1779, 1757, 1753,
	0, 1750, 1748, 1749, 1741, 1742, 1743, 1744, 1746, 1747,
	0, 0, 0, 0, 4443, 0, 0, 0, 0, 0,
	0, 0, 0, 1296, 1296, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1296, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1211,
	1211, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1354, 0, 0, 1354,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1737, 1738, 0, 1770, 1771, 1772, 1780,
	1781, 1782, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1773, 1768, 0, 0,
	0, 0, 0, 0, 1740, 0, 0, 0, 0, 0,
	0, 0, 0, 1786, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1355, 0, 0, 1354, 0, 0, 0, 0, 0, 1739,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1759,
	1354, 0, 0, 0, 0, 0, 0, 0, 1756, 0,
	0, 0, 0, 1355, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1355, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1355, 0, 0, 0, 0, 0, 0, 0, 0, 260,
	0, 0, 0, 0, 0, 1297, 1297, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 260, 0, 1762, 1763, 1764, 1765, 0, 0, 0,
	0, 0, 260, 1745, 0, 0, 0, 0, 0, 0,
	0, 0, 260, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 260, 0, 0, 0, 1297, 260, 0, 0,
	0, 0, 260, 0, 0, 0, 0, 0, 0, 1777,
	1354, 0, 1787, 0, 0, 0, 0, 0, 1767, 1769,
	0, 0, 1211, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1297, 0, 1783, 0, 1784, 0, 0,
	0, 0, 0, 0, 1754, 1755, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1297, 0, 1297, 0, 0,
	0, 0, 1775, 0, 0, 0, 0, 0, 0, 260,
	0, 0, 0, 1355, 0, 0, 0, 1760, 0, 0,
	0, 0, 0, 0, 1297, 0, 0, 0, 1297, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1297, 0, 0, 0, 0, 0, 0, 1297, 1785,
	1297, 0, 0, 0, 1355, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1774, 0, 0,
	0, 0, 1297, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1297, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1296, 0, 0, 1296, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1297, 1297, 0, 0,
	0, 1766, 0, 1211, 0, 0, 0, 0, 0, 0,
	0, 1211, 0, 0, 0, 0, 0, 0, 0, 1297,
	0, 0, 1761, 0, 1901, 0, 1296, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1778, 0,
	0, 1296, 1296, 1296, 0, 0, 0, 0, 0, 1355,
	0, 0, 1355, 0, 0, 0, 0, 0, 1296, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1901,
	0, 1901, 0, 1296, 0, 0, 0, 0, 0, 1354,
	0, 0, 0, 0, 0, 0, 0, 0, 260, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1354, 260, 0, 0, 260, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 260, 1355, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1776,
	0, 0, 0, 1355, 1751, 1752, 1758, 1779, 1757, 1753,
	0, 1750, 1748, 1749, 1741, 1742, 1743, 1744, 1746, 1747,
	0, 0, 0, 0, 4439, 0, 0, 0, 260, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 260, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1901, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1354, 0, 1354, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1296, 1296, 0, 0, 0, 0, 0,
	0, 0, 1354, 0, 0, 0, 0, 0, 0, 1737,
	1738, 0, 1770, 1771, 1772, 1780, 1781, 1782, 0, 0,
	0, 0, 0, 1355, 0, 0, 0, 0, 0, 0,
	0, 0, 1773, 1768, 0, 0, 0, 0, 0, 0,
	1740, 0, 0, 0, 0, 0, 0, 0, 0, 1786,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1296,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1354,
	0, 1296, 0, 0, 1296, 1739, 0, 0, 0, 0,
	0, 0, 0, 1354, 0, 1759, 0, 0, 0, 0,
	0, 0, 260, 0, 1756, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1296, 1296, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1296, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1354, 0, 0, 0, 260,
	1296, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1762,
	1763, 1764, 1765, 0, 0, 0, 0, 0, 0, 1745,
	0, 0, 0, 0, 0, 1296, 1296, 1296, 1297, 0,
	0, 1297, 0, 0, 0, 0, 0, 0, 1354, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1777, 0, 0, 1787, 1901,
	1901, 0, 0, 0, 1767, 1769, 0, 0, 1354, 0,
	0, 0, 0, 0, 0, 0, 0, 260, 260, 1297,
	0, 1783, 0, 1784, 0, 0, 0, 0, 0, 0,
	1754, 1755, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1297, 1297, 1297, 0, 1775, 1354,
	0, 1296, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1297, 0, 1760, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1297, 0, 0, 0,
	0, 1354, 1355, 0, 0, 0, 0, 0, 1901, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1901, 0, 0, 0, 0, 1785, 1355, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 260, 0, 1774, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1354,
	0, 0, 0, 0, 0, 0, 1296, 0, 0, 0,
	0, 1296, 1296, 0, 0, 0, 0, 1901, 0, 260,
	1901, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1766, 0, 0,
	0, 0, 0, 0, 0, 0, 1354, 0, 0, 1296,
	0, 0, 0, 0, 0, 0, 0, 0, 1761, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1355, 0, 1355, 0,
	0, 0, 0, 0, 1778, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1297, 1297, 0, 0,
	0, 260, 0, 0, 0, 1355, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 260, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1297, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1355, 0, 1297, 0, 0, 1297, 0, 0,
	0, 0, 0, 0, 0, 1776, 1355, 0, 0, 0,
	1751, 1752, 1758, 1779, 1757, 1753, 0, 1750, 1748, 1749,
	1741, 1742, 1743, 1744, 1746, 1747, 0, 0, 0, 0,
	4358, 0, 0, 0, 260, 0, 1297, 1297, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1296, 0, 0, 0, 1297, 0, 0, 0,
	0, 0, 1296, 1296, 0, 0, 0, 0, 1355, 0,
	0, 0, 0, 1297, 0, 0, 0, 0, 0, 1296,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1297, 1297,
	1297, 0, 0, 0, 0, 0, 0, 1901, 0, 1901,
	0, 1355, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1355, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1355, 0, 1297, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1355, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1355, 0, 0, 0, 0, 0, 0, 1297,
	0, 0, 0, 0, 1297, 1297, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1355,
	0, 0, 1297, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1352, 0, 0, 0, 1297, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1297, 1297, 0, 270, 272,
	271, 273, 274, 275, 276, 277, 1357, 278, 279, 1358,
	1359, 1360, 1297, 1361, 615, 1362, 1363, 1364, 1365, 280,
	281, 1155, 282, 283, 284, 285, 286, 287, 616, 617,
	0, 288, 618, 289, 619, 1366, 620, 290, 291, 292,
	293, 294, 295, 1367, 1368, 0, 296, 621, 622, 623,
	1369, 297, 298, 624, 1370, 1299, 1371, 299, 300, 301,
	302, 303, 304, 305, 0, 1372, 307, 308, 309, 306,
	310, 1373, 311, 0, 312, 313, 314, 315, 316, 317,
	1374, 318, 319, 320, 1156, 321, 322, 323, 1375, 1376,
	1378, 1377, 1379, 1380, 1381, 324, 325, 326, 327, 328,
	0, 329, 625, 626, 1382, 333, 330, 331, 1383, 334,
	332, 335, 1384, 336, 337, 338, 1385, 1386, 339, 340,
	341, 1387, 342, 343, 1388, 344, 345, 346, 1389, 347,
	348, 627, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 628, 629, 360, 1390, 267, 1391, 0, 0,
	0, 0, 361, 362, 363, 630, 0, 0, 0, 364,
	1392, 365, 1393, 1394, 1157, 366, 367, 631, 632, 368,
	369, 370, 371, 372, 373, 374, 375, 376, 1395, 377,
	633, 1396, 634, 378, 1397, 379, 380, 381, 382, 383,
	635, 636, 637, 460, 1159, 384, 385, 1398, 386, 387,
	388, 389, 0, 0, 0, 268, 390, 391, 392, 394,
	1399, 1158, 393, 638, 639, 1400, 640, 1401, 395, 396,
	1160, 641, 1161, 397, 398, 399, 1162, 400, 0, 0,
	0, 401, 402, 403, 404, 405, 406, 1402, 407, 409,
	408, 1403, 410, 642, 1163, 411, 412, 1164, 1404, 413,
	0, 0, 0, 414, 415, 418, 1405, 1406, 416, 417,
	419, 420, 0, 421, 422, 424, 427, 423, 425, 426,
	428, 441, 429, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 443, 0, 442, 1165, 444, 445,
	446, 451, 453, 454, 449, 450, 452, 455, 456, 448,
	1166, 447, 1407, 269, 1167, 457, 458, 1408, 643, 459,
	644, 461, 462, 1409, 0, 463, 0, 1410, 1411, 465,
	466, 467, 1412, 1413, 468, 469, 645, 1168, 470, 1169,
	646, 471, 472, 464, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 1414, 482, 483, 647, 484, 485, 486,
	648, 487, 488, 489, 649, 490, 650, 491, 492, 1415,
	493, 494, 0, 495, 496, 497, 498, 499, 500, 501,
	651, 502, 504, 503, 505, 1416, 506, 0, 507, 508,
	509, 0, 0, 0, 0, 510, 0, 512, 513, 514,
	515, 511, 516, 517, 518, 519, 1417, 520, 521, 522,
	1170, 523, 524, 525, 526, 652, 527, 0, 528, 529,
	535, 536, 530, 531, 537, 538, 539, 540, 541, 1418,
	543, 544, 542, 545, 546, 547, 1419, 548, 549, 532,
	533, 550, 551, 1171, 552, 553, 554, 555, 556, 557,
	653, 0, 558, 1420, 559, 560, 561, 563, 534, 564,
	569, 570, 654, 565, 566, 567, 568, 655, 572, 573,
	1421, 574, 575, 0, 571, 562, 1422, 576, 577, 578,
	579, 580, 581, 582, 354, 583, 1423, 584, 656, 657,
	658, 659, 1424, 593, 1425, 585, 586, 587, 660, 588,
	661, 1426, 589, 590, 591, 592, 0, 594, 595, 1427,
	1428, 596, 597, 598, 600, 601, 599, 602, 1429, 603,
	1430, 0, 604, 605, 606, 662, 663, 664, 1431, 608,
	607, 609, 665, 1432, 1433, 1434, 1435, 1436, 610, 611,
	666, 612, 613, 614, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1352, 0,
	0, 0, 0, 0, 0, 0, 2621, 0, 0, 0,
	0, 0, 0, 0, 2622, 270, 272, 271, 273, 274,
	275, 276, 277, 1357, 278, 279, 1358, 1359, 1360, 0,
	1361, 615, 1362, 1363, 1364, 1365, 280, 281, 1155, 282,
	283, 284, 285, 286, 287, 616, 617, 0, 288, 618,
	289, 619, 1366, 620, 290, 291, 292, 293, 294, 295,
	1367, 1368, 0, 296, 621, 622, 623, 1369, 297, 298,
	624, 1370, 1299, 1371, 299, 300, 301, 302, 303, 304,
	305, 0, 1372, 307, 308, 309, 306, 310, 1373, 311,
	0, 312, 313, 314, 315, 316, 317, 1374, 318, 319,
	320, 1156, 321, 322, 323, 1375, 1376, 1378, 1377, 1379,
	1380, 1381, 324, 325, 326, 327, 328, 0, 329, 625,
	626, 1382, 333, 330, 331, 1383, 334, 332, 335, 1384,
	336, 337, 338, 1385, 1386, 339, 340, 341, 1387, 342,
	343, 1388, 344, 345, 346, 1389, 347, 348, 627, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 628,
	629, 360, 1390, 267, 1391, 0, 0, 0, 0, 361,
	362, 363, 630, 0, 0, 0, 364, 1392, 365, 1393,
	1394, 1157, 366, 367, 631, 632, 368, 369, 370, 371,
	372, 373, 374, 375, 376, 1395, 377, 633, 1396, 634,
	378, 1397, 379, 380, 381, 382, 383, 635, 636, 637,
	460, 1159, 384, 385, 1398, 386, 387, 388, 389, 0,
	0, 0, 268, 390, 391, 392, 394, 1399, 1158, 393,
	638, 639, 1400, 640, 1401, 395, 396, 1160, 641, 1161,
	397, 398, 399, 1162, 400, 0, 0, 0, 401, 402,
	403, 404, 405, 406, 1402, 407, 409, 408, 1403, 410,
	642, 1163, 411, 412, 1164, 1404, 413, 0, 0, 0,
	414, 415, 418, 1405, 1406, 416, 417, 419, 420, 0,
	421, 422, 424, 427, 423, 425, 426, 428, 441, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 443, 0, 442, 1165, 444, 445, 446, 451, 453,
	454, 449, 450, 452, 455, 456, 448, 1166, 447, 1407,
	269, 1167, 457, 458, 1408, 643, 459, 644, 461, 462,
	1409, 0, 463, 0, 1410, 1411, 465, 466, 467, 1412,
	1413, 468, 469, 645, 1168, 470, 1169, 646, 471, 472,
	464, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	1414, 482, 483, 647, 484, 485, 486, 648, 487, 488,
	489, 649, 490, 650, 491, 492, 1415, 493, 494, 0,
	495, 496, 497, 498, 499, 500, 501, 651, 502, 504,
	503, 505, 1416, 506, 0, 507, 508, 509, 0, 0,
	0, 0, 510, 0, 512, 513, 514, 515, 511, 516,
	517, 518, 519, 1417, 520, 521, 522, 1170, 523, 524,
	525, 526, 652, 527, 0, 528, 529, 535, 536, 530,
	531, 537, 538, 539, 540, 541, 1418, 543, 544, 542,
	545, 546, 547, 1419, 548, 549, 532, 533, 550, 551,
	1171, 552, 553, 554, 555, 556, 557, 653, 0, 558,
	1420, 559, 560, 561, 563, 534, 564, 569, 570, 654,
	565, 566, 567, 568, 655, 572, 573, 1421, 574, 575,
	0, 571, 562, 1422, 576, 577, 578, 579, 580, 581,
	582, 354, 583, 1423, 584, 656, 657, 658, 659, 1424,
	593, 1425, 585, 586, 587, 660, 588, 661, 1426, 589,
	590, 591, 592, 0, 594, 595, 1427, 1428, 596, 597,
	598, 600, 601, 599, 602, 1429, 603, 1430, 0, 604,
	605, 606, 662, 663, 664, 1431, 608, 607, 609, 665,
	1432, 1433, 1434, 1435, 1436, 610, 611, 666, 612, 613,
	614, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1352, 0, 0, 0, 0, 3550, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3552,
	270, 272, 271, 273, 274, 275, 276, 277, 1357, 278,
	279, 1358, 1359, 1360, 0, 1361, 615, 1362, 1363, 1364,
	1365, 280, 281, 1155, 282, 283, 284, 285, 286, 287,
	616, 617, 0, 288, 618, 289, 619, 1366, 620, 290,
	291, 292, 293, 294, 295, 1367, 1368, 0, 296, 621,
	622, 623, 1369, 297, 298, 624, 1370, 1299, 1371, 299,
	300, 301, 302, 303, 304, 305, 0, 1372, 307, 308,
	309, 306, 310, 1373, 311, 0, 312, 313, 314, 315,
	316, 317, 1374, 318, 319, 320, 1156, 321, 322, 323,
	1375, 1376, 1378, 1377, 1379, 1380, 1381, 324, 325, 326,
	327, 328, 0, 329, 625, 626, 1382, 333, 330, 331,
	1383, 334, 332, 335, 1384, 336, 337, 338, 1385, 1386,
	339, 340, 341, 1387, 342, 343, 1388, 344, 345, 346,
	1389, 347, 348, 627, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 628, 629, 360, 1390, 267, 1391,
	0, 0, 0, 0, 361, 362, 363, 630, 0, 0,
	0, 364, 1392, 365, 1393, 1394, 1157, 366, 367, 631,
	632, 368, 369, 370, 371, 372, 373, 374, 375, 376,
	1395, 377, 633, 1396, 634, 378, 1397, 379, 380, 381,
	382, 383, 635, 636, 637, 460, 1159, 384, 385, 1398,
	386, 387, 388, 389, 0, 0, 0, 268, 390, 391,
	392, 394, 1399, 1158, 393, 638, 639, 1400, 640, 1401,
	395, 396, 1160, 641, 1161, 397, 398, 399, 1162, 400,
	0, 0, 0, 401, 402, 403, 404, 405, 406, 1402,
	407, 409, 408, 1403, 410, 642, 1163, 411, 412, 1164,
	1404, 413, 0, 0, 0, 414, 415, 418, 1405, 1406,
	416, 417, 419, 420, 0, 421, 422, 424, 427, 423,
	425, 426, 428, 441, 429, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 443, 0, 442, 1165,
	444, 445, 446, 451, 453, 454, 449, 450, 452, 455,
	456, 448, 1166, 447, 1407, 269, 1167, 457, 458, 1408,
	643, 459, 644, 461, 462, 1409, 0, 463, 0, 1410,
	1411, 465, 466, 467, 1412, 1413, 468, 469, 645, 1168,
	470, 1169, 646, 471, 472, 464, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 1414, 482, 483, 647, 484,
	485, 486, 648, 487, 488, 489, 649, 490, 650, 491,
	492, 1415, 493, 494, 0, 495, 496, 497, 498, 499,
	500, 501, 651, 502, 504, 503, 505, 1416, 506, 0,
	507, 508, 509, 0, 0, 0, 0, 510, 0, 512,
	513, 514, 515, 511, 516, 517, 518, 519, 1417, 520,
	521, 522, 1170, 523, 524, 525, 526, 652, 527, 0,
	528, 529, 535, 536, 530, 531, 537, 538, 539, 540,
	541, 1418, 543, 544, 542, 545, 546, 547, 1419, 548,
	549, 532, 533, 550, 551, 1171, 552, 553, 554, 555,
	556, 557, 653, 0, 558, 1420, 559, 560, 561, 563,
	534, 564, 569, 570, 654, 565, 566, 567, 568, 655,
	572, 573, 1421, 574, 575, 0, 571, 562, 1422, 576,
	577, 578, 579, 580, 581, 582, 354, 583, 1423, 584,
	656, 657, 658, 659, 1424, 593, 1425, 585, 586, 587,
	660, 588, 661, 1426, 589, 590, 591, 592, 0, 594,
	595, 1427, 1428, 596, 597, 598, 600, 601, 599, 602,
	1429, 603, 1430, 0, 604, 605, 606, 662, 663, 664,
	1431, 608, 607, 609, 665, 1432, 1433, 1434, 1435, 1436,
	610, 611, 666, 612, 613, 614, 0, 0, 0, 0,
	0, 0, 1352, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3936, 270,
	272, 271, 273, 274, 275, 276, 277, 1357, 278, 279,
	1358, 1359, 1360, 0, 1361, 615, 1362, 1363, 1364, 1365,
	280, 281, 1155, 282, 283, 284, 285, 286, 287, 616,
	617, 0, 288, 618, 289, 619, 1366, 620, 290, 291,
	292, 293, 294, 295, 1367, 1368, 0, 296, 621, 622,
	623, 1369, 297, 298, 624, 1370, 1299, 1371, 299, 300,
	301, 302, 303, 304, 305, 0, 1372, 307, 308, 309,
	306, 310, 1373, 311, 0, 312, 313, 314, 315, 316,
	317, 1374, 318, 319, 320, 1156, 321, 322, 323, 1375,
	1376, 1378, 1377, 1379, 1380, 1381, 324, 325, 326, 327,
	328, 0, 329, 625, 626, 1382, 333, 330, 331, 1383,
	334, 332, 335, 1384, 336, 337, 338, 1385, 1386, 339,
	340, 341, 1387, 342, 343, 1388, 344, 345, 346, 1389,
	347, 348, 627, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 628, 629, 360, 1390, 267, 1391, 0,
	0, 0, 0, 361, 362, 363, 630, 0, 0, 0,
	364, 1392, 365, 1393, 1394, 1157, 366, 367, 631, 632,
	368, 369, 370, 371, 372, 373, 374, 375, 376, 1395,
	377, 633, 1396, 634, 378, 1397, 379, 380, 381, 382,
	383, 635, 636, 637, 460, 1159, 384, 385, 1398, 386,
	387, 388, 389, 0, 0, 0, 268, 390, 391, 392,
	394, 1399, 1158, 393, 638, 639, 1400, 640, 1401, 395,
	396, 1160, 641, 1161, 397, 398, 399, 1162, 400, 0,
	0, 0, 401, 402, 403, 404, 405, 406, 1402, 407,
	409, 408, 1403, 410, 642, 1163, 411, 412, 1164, 1404,
	413, 0, 0, 0, 414, 415, 418, 1405, 1406, 416,
	417, 419, 420, 0, 421, 422, 424, 427, 423, 425,
	426, 428, 441, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 443, 0, 442, 1165, 444,
	445, 446, 451, 453, 454, 449, 450, 452, 455, 456,
	448, 1166, 447, 1407, 269, 1167, 457, 458, 1408, 643,
	459, 644, 461, 462, 1409, 0, 463, 0, 1410, 1411,
	465, 466, 467, 1412, 1413, 468, 469, 645, 1168, 470,
	1169, 646, 471, 472, 464, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 1414, 482, 483, 647, 484, 485,
	486, 648, 487, 488, 489, 649, 490, 650, 491, 492,
	1415, 493, 494, 0, 495, 496, 497, 498, 499, 500,
	501, 651, 502, 504, 503, 505, 1416, 506, 0, 507,
	508, 509, 0, 0, 0, 0, 510, 0, 512, 513,
	514, 515, 511, 516, 517, 518, 519, 1417, 520, 521,
	522, 1170, 523, 524, 525, 526, 652, 527, 0, 528,
	529, 535, 536, 530, 531, 537, 538, 539, 540, 541,
	1418, 543, 544, 542, 545, 546, 547, 1419, 548, 549,
	532, 533, 550, 551, 1171, 552, 553, 554, 555, 556,
	557, 653, 0, 558, 1420, 559, 560, 561, 563, 534,
	564, 569, 570, 654, 565, 566, 567, 568, 655, 572,
	573, 1421, 574, 575, 0, 571, 562, 1422, 576, 577,
	578, 579, 580, 581, 582, 354, 583, 1423, 584, 656,
	657, 658, 659, 1424, 593, 1425, 585, 586, 587, 660,
	588, 661, 1426, 589, 590, 591, 592, 0, 594, 595,
	1427, 1428, 596, 597, 598, 600, 601, 599, 602, 1429,
	603, 1430, 0, 604, 605, 606, 662, 663, 664, 1431,
	608, 607, 609, 665, 1432, 1433, 1434, 1435, 1436, 610,
	611, 666, 612, 613, 614, 0, 1352, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4138, 270, 272, 271, 273, 274, 275, 276,
	277, 1357, 278, 279, 1358, 1359, 1360, 0, 1361, 615,
	1362, 1363, 1364, 1365, 280, 281, 1155, 282, 283, 284,
	285, 286, 287, 616, 617, 0, 288, 618, 289, 619,
	1366, 620, 290, 291, 292, 293, 294, 295, 1367, 1368,
	0, 296, 621, 622, 623, 1369, 297, 298, 624, 1370,
	1299, 1371, 299, 300, 301, 302, 303, 304, 305, 0,
	1372, 307, 308, 309, 306, 310, 1373, 311, 0, 312,
	313, 314, 315, 316, 317, 1374, 318, 319, 320, 1156,
	321, 322, 323, 1375, 1376, 1378, 1377, 1379, 1380, 1381,
	324, 325, 326, 327, 328, 0, 329, 625, 626, 1382,
	333, 330, 331, 1383, 334, 332, 335, 1384, 336, 337,
	338, 1385, 1386, 339, 340, 341, 1387, 342, 343, 1388,
	344, 345, 346, 1389, 347, 348, 627, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 628, 629, 360,
	1390, 267, 1391, 0, 0, 0, 0, 361, 362, 363,
	630, 0, 0, 0, 364, 1392, 365, 1393, 1394, 1157,
	366, 367, 631, 632, 368, 369, 370, 371, 372, 373,
	374, 375, 376, 1395, 377, 633, 1396, 634, 378, 1397,
	379, 380, 381, 382, 383, 635, 636, 637, 460, 1159,
	384, 385, 1398, 386, 387, 388, 389, 0, 0, 0,
	268, 390, 391, 392, 394, 1399, 1158, 393, 638, 639,
	1400, 640, 1401, 395, 396, 1160, 641, 1161, 397, 398,
	399, 1162, 400, 0, 0, 0, 401, 402, 403, 404,
	405, 406, 1402, 407, 409, 408, 1403, 410, 642, 1163,
	411, 412, 1164, 1404, 413, 0, 0, 0, 414, 415,
	418, 1405, 1406, 416, 417, 419, 420, 0, 421, 422,
	424, 427, 423, 425, 426, 428, 441, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 443,
	0, 442, 1165, 444, 445, 446, 451, 453, 454, 449,
	450, 452, 455, 456, 448, 1166, 447, 1407, 269, 1167,
	457, 458, 1408, 643, 459, 644, 461, 462, 1409, 0,
	463, 0, 1410, 1411, 465, 466, 467, 1412, 1413, 468,
	469, 645, 1168, 470, 1169, 646, 471, 472, 464, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 1414, 482,
	483, 647, 484, 485, 486, 648, 487, 488, 489, 649,
	490, 650, 491, 492, 1415, 493, 494, 0, 495, 496,
	497, 498, 499, 500, 501, 651, 502, 504, 503, 505,
	1416, 506, 0, 507, 508, 509, 0, 0, 0, 0,
	510, 0, 512, 513, 514, 515, 511, 516, 517, 518,
	519, 1417, 520, 521, 522, 1170, 523, 524, 525, 526,
	652, 527, 0, 528, 529, 535, 536, 530, 531, 537,
	538, 539, 540, 541, 1418, 543, 544, 542, 545, 546,
	547, 1419, 548, 549, 532, 533, 550, 551, 1171, 552,
	553, 554, 555, 556, 557, 653, 0, 558, 1420, 559,
	560, 561, 563, 534, 564, 569, 570, 654, 565, 566,
	567, 568, 655, 572, 573, 1421, 574, 575, 0, 571,
	562, 1422, 576, 577, 578, 579, 580, 581, 582, 354,
	583, 1423, 584, 656, 657, 658, 659, 1424, 593, 1425,
	585, 586, 587, 660, 588, 661, 1426, 589, 590, 591,
	592, 0, 594, 595, 1427, 1428, 596, 597, 598, 600,
	601, 599, 602, 1429, 603, 1430, 0, 604, 605, 606,
	662, 663, 664, 1431, 608, 607, 609, 665, 1432, 1433,
	1434, 1435, 1436, 610, 611, 666, 612, 613, 614, 0,
	1352, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4015, 270, 272, 271,
	273, 274, 275, 276, 277, 1357, 278, 279, 1358, 1359,
	1360, 0, 1361, 615, 1362, 1363, 1364, 1365, 280, 281,
	1155, 282, 283, 284, 285, 286, 287, 616, 617, 0,
	288, 618, 289, 619, 1366, 620, 290, 291, 292, 293,
	294, 295, 1367, 1368, 0, 296, 621, 622, 623, 1369,
	297, 298, 624, 1370, 1299, 1371, 299, 300, 301, 302,
	303, 304, 305, 0, 1372, 307, 308, 309, 306, 310,
	1373, 311, 0, 312, 313, 314, 315, 316, 317, 1374,
	318, 319, 320, 1156, 321, 322, 323, 1375, 1376, 1378,
	1377, 1379, 1380, 1381, 324, 325, 326, 327, 328, 0,
	329, 625, 626, 1382, 333, 330, 331, 1383, 334, 332,
	335, 1384, 336, 337, 338, 1385, 1386, 339, 340, 341,
	1387, 342, 343, 1388, 344, 345, 346, 1389, 347, 348,
	627, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 628, 629, 360, 1390, 267, 1391, 0, 0, 0,
	0, 361, 362, 363, 630, 0, 0, 0, 364, 1392,
	365, 1393, 1394, 1157, 366, 367, 631, 632, 368, 369,
	370, 371, 372, 373, 374, 375, 376, 1395, 377, 633,
	1396, 634, 378, 1397, 379, 380, 381, 382, 383, 635,
	636, 637, 460, 1159, 384, 385, 1398, 386, 387, 388,
	389, 0, 0, 0, 268, 390, 391, 392, 394, 1399,
	1158, 393, 638, 639, 1400, 640, 1401, 395, 396, 1160,
	641, 1161, 397, 398, 399, 1162, 400, 0, 0, 0,
	401, 402, 403, 404, 405, 406, 1402, 407, 409, 408,
	1403, 410, 642, 1163, 411, 412, 1164, 1404, 413, 0,
	0, 0, 414, 415, 418, 1405, 1406, 416, 417, 419,
	420, 0, 421, 422, 424, 427, 423, 425, 426, 428,
	441, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 443, 0, 442, 1165, 444, 445, 446,
	451, 453, 454, 449, 450, 452, 455, 456, 448, 1166,
	447, 1407, 269, 1167, 457, 458, 1408, 643, 459, 644,
	461, 462, 1409, 0, 463, 0, 1410, 1411, 465, 466,
	467, 1412, 1413, 468, 469, 645, 1168, 470, 1169, 646,
	471, 472, 464, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 1414, 482, 483, 647, 484, 485, 486, 648,
	487, 488, 489, 649, 490, 650, 491, 492, 1415, 493,
	494, 0, 495, 496, 497, 498, 499, 500, 501, 651,
	502, 504, 503, 505, 1416, 506, 0, 507, 508, 509,
	0, 0, 0, 0, 510, 0, 512, 513, 514, 515,
	511, 516, 517, 518, 519, 1417, 520, 521, 522, 1170,
	523, 524, 525, 526, 652, 527, 0, 528, 529, 535,
	536, 530, 531, 537, 538, 539, 540, 541, 1418, 543,
	544, 542, 545, 546, 547, 1419, 548, 549, 532, 533,
	550, 551, 1171, 552, 553, 554, 555, 556, 557, 653,
	0, 558, 1420, 559, 560, 561, 563, 534, 564, 569,
	570, 654, 565, 566, 567, 568, 655, 572, 573, 1421,
	574, 575, 0, 571, 562, 1422, 576, 577, 578, 579,
	580, 581, 582, 354, 583, 1423, 584, 656, 657, 658,
	659, 1424, 593, 1425, 585, 586, 587, 660, 588, 661,
	1426, 589, 590, 591, 592, 0, 594, 595, 1427, 1428,
	596, 597, 598, 600, 601, 599, 602, 1429, 603, 1430,
	0, 604, 605, 606, 662, 663, 664, 1431, 608, 607,
	609, 665, 1432, 1433, 1434, 1435, 1436, 610, 611, 666,
	612, 613, 614, 0, 1352, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3866, 270, 272, 271, 273, 274, 275, 276, 277, 1357,
	278, 279, 1358, 1359, 1360, 0, 1361, 615, 1362, 1363,
	1364, 1365, 280, 281, 1155, 282, 283, 284, 285, 286,
	287, 616, 617, 0, 288, 618, 289, 619, 1366, 620,
	290, 291, 292, 293, 294, 295, 1367, 1368, 0, 296,
	621, 622, 623, 1369, 297, 298, 624, 1370, 1299, 1371,
	299, 300, 301, 302, 303, 304, 305, 0, 1372, 307,
	308, 309, 306, 310, 1373, 311, 0, 312, 313, 314,
	315, 316, 317, 1374, 318, 319, 320, 1156, 321, 322,
	323, 1375, 1376, 1378, 1377, 1379, 1380, 1381, 324, 325,
	326, 327, 328, 0, 329, 625, 626, 1382, 333, 330,
	331, 1383, 334, 332, 335, 1384, 336, 337, 338, 1385,
	1386, 339, 340, 341, 1387, 342, 343, 1388, 344, 345,
	346, 1389, 347, 348, 627, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 628, 629, 360, 1390, 267,
	1391, 0, 0, 0, 0, 361, 362, 363, 630, 0,
	0, 0, 364, 1392, 365, 1393, 1394, 1157, 366, 367,
	631, 632, 368, 369, 370, 371, 372, 373, 374, 375,
	376, 1395, 377, 633, 1396, 634, 378, 1397, 379, 380,
	381, 382, 383, 635, 636, 637, 460, 1159, 384, 385,
	1398, 386, 387, 388, 389, 0, 0, 0, 268, 390,
	391, 392, 394, 1399, 1158, 393, 638, 639, 1400, 640,
	1401, 395, 396, 1160, 641, 1161, 397, 398, 399, 1162,
	400, 0, 0, 0, 401, 402, 403, 404, 405, 406,
	1402, 407, 409, 408, 1403, 410, 642, 1163, 411, 412,
	1164, 1404, 413, 0, 0, 0, 414, 415, 418, 1405,
	1406, 416, 417, 419, 420, 0, 421, 422, 424, 427,
	423, 425, 426, 428, 441, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 443, 0, 442,
	1165, 444, 445, 446, 451, 453, 454, 449, 450, 452,
	455, 456, 448, 1166, 447, 1407, 269, 1167, 457, 458,
	1408, 643, 459, 644, 461, 462, 1409, 0, 463, 0,
	1410, 1411, 465, 466, 467, 1412, 1413, 468, 469, 645,
	1168, 470, 1169, 646, 471, 472, 464, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 1414, 482, 483, 647,
	484, 485, 486, 648, 487, 488, 489, 649, 490, 650,
	491, 492, 1415, 493, 494, 0, 495, 496, 497, 498,
	499, 500, 501, 651, 502, 504, 503, 505, 1416, 506,
	0, 507, 508, 509, 0, 0, 0, 0, 510, 0,
	512, 513, 514, 515, 511, 516, 517, 518, 519, 1417,
	520, 521, 522, 1170, 523, 524, 525, 526, 652, 527,
	0, 528, 529, 535, 536, 530, 531, 537, 538, 539,
	540, 541, 1418, 543, 544, 542, 545, 546, 547, 1419,
	548, 549, 532, 533, 550, 551, 1171, 552, 553, 554,
	555, 556, 557, 653, 0, 558, 1420, 559, 560, 561,
	563, 534, 564, 569, 570, 654, 565, 566, 567, 568,
	655, 572, 573, 1421, 574, 575, 0, 571, 562, 1422,
	576, 577, 578, 579, 580, 581, 582, 354, 583, 1423,
	584, 656, 657, 658, 659, 1424, 593, 1425, 585, 586,
	587, 660, 588, 661, 1426, 589, 590, 591, 592, 0,
	594, 595, 1427, 1428, 596, 597, 598, 600, 601, 599,
	602, 1429, 603, 1430, 0, 604, 605, 606, 662, 663,
	664, 1431, 608, 607, 609, 665, 1432, 1433, 1434, 1435,
	1436, 610, 611, 666, 612, 613, 614, 0, 1352, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3568, 270, 272, 271, 273, 274,
	275, 276, 277, 1357, 278, 279, 1358, 1359, 1360, 0,
	1361, 615, 1362, 1363, 1364, 1365, 280, 281, 1155, 282,
	283, 284, 285, 286, 287, 616, 617, 0, 288, 618,
	289, 619, 1366, 620, 290, 291, 292, 293, 294, 295,
	1367, 1368, 0, 296, 621, 622, 623, 1369, 297, 298,
	624, 1370, 1299, 1371, 299, 300, 301, 302, 303, 304,
	305, 0, 1372, 307, 308, 309, 306, 310, 1373, 311,
	0, 312, 313, 314, 315, 316, 317, 1374, 318, 319,
	320, 1156, 321, 322, 323, 1375, 1376, 1378, 1377, 1379,
	1380, 1381, 324, 325, 326, 327, 328, 0, 329, 625,
	626, 1382, 333, 330, 331, 1383, 334, 332, 335, 1384,
	336, 337, 338, 1385, 1386, 339, 340, 341, 1387, 342,
	343, 1388, 344, 345, 346, 1389, 347, 348, 627, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 628,
	629, 360, 1390, 267, 1391, 0, 0, 0, 0, 361,
	362, 363, 630, 0, 0, 0, 364, 1392, 365, 1393,
	1394, 1157, 366, 367, 631, 632, 368, 369, 370, 371,
	372, 373, 374, 375, 376, 1395, 377, 633, 1396, 634,
	378, 1397, 379, 380, 381, 382, 383, 635, 636, 637,
	460, 1159, 384, 385, 1398, 386, 387, 388, 389, 0,
	0, 0, 268, 390, 391, 392, 394, 1399, 1158, 393,
	638, 639, 1400, 640, 1401, 395, 396, 1160, 641, 1161,
	397, 398, 399, 1162, 400, 0, 0, 0, 401, 402,
	403, 404, 405, 406, 1402, 407, 409, 408, 1403, 410,
	642, 1163, 411, 412, 1164, 1404, 413, 0, 0, 0,
	414, 415, 418, 1405, 1406, 416, 417, 419, 420, 0,
	421, 422, 424, 427, 423, 425, 426, 428, 441, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 443, 0, 442, 1165, 444, 445, 446, 451, 453,
	454, 449, 450, 452, 455, 456, 448, 1166, 447, 1407,
	269, 1167, 457, 458, 1408, 643, 459, 644, 461, 462,
	1409, 0, 463, 0, 1410, 1411, 465, 466, 467, 1412,
	1413, 468, 469, 645, 1168, 470, 1169, 646, 471, 472,
	464, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	1414, 482, 483, 647, 484, 485, 486, 648, 487, 488,
	489, 649, 490, 650, 491, 492, 1415, 493, 494, 0,
	495, 496, 497, 498, 499, 500, 501, 651, 502, 504,
	503, 505, 1416, 506, 0, 507, 508, 509, 0, 0,
	0, 0, 510, 0, 512, 513, 514, 515, 511, 516,
	517, 518, 519, 1417, 520, 521, 522, 1170, 523, 524,
	525, 526, 652, 527, 0, 528, 529, 535, 536, 530,
	531, 537, 538, 539, 540, 541, 1418, 543, 544, 542,
	545, 546, 547, 1419, 548, 549, 532, 533, 550, 551,
	1171, 552, 553, 554, 555, 556, 557, 653, 0, 558,
	1420, 559, 560, 561, 563, 534, 564, 569, 570, 654,
	565, 566, 567, 568, 655, 572, 573, 1421, 574, 575,
	0, 571, 562, 1422, 576, 577, 578, 579, 580, 581,
	582, 354, 583, 1423, 584, 656, 657, 658, 659, 1424,
	593, 1425, 585, 586, 587, 660, 588, 661, 1426, 589,
	590, 591, 592, 0, 594, 595, 1427, 1428, 596, 597,
	598, 600, 601, 599, 602, 1429, 603, 1430, 0, 604,
	605, 606, 662, 663, 664, 1431, 608, 607, 609, 665,
	1432, 1433, 1434, 1435, 1436, 610, 611, 666, 612, 613,
	614, 0, 1352, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3399, 270,
	272, 271, 273, 274, 275, 276, 277, 1357, 278, 279,
	1358, 1359, 1360, 0, 1361, 615, 1362, 1363, 1364, 1365,
	280, 281, 1155, 282, 283, 284, 285, 286, 287, 616,
	617, 0, 288, 618, 289, 619, 1366, 620, 290, 291,
	292, 293, 294, 295, 1367, 1368, 0, 296, 621, 622,
	623, 1369, 297, 298, 624, 1370, 1299, 1371, 299, 300,
	301, 302, 303, 304, 305, 0, 1372, 307, 308, 309,
	306, 310, 1373, 311, 0, 312, 313, 314, 315, 316,
	317, 1374, 318, 319, 320, 1156, 321, 322, 323, 1375,
	1376, 1378, 1377, 1379, 1380, 1381, 324, 325, 326, 327,
	328, 0, 329, 625, 626, 1382, 333, 330, 331, 1383,
	334, 332, 335, 1384, 336, 337, 338, 1385, 1386, 339,
	340, 341, 1387, 342, 343, 1388, 344, 345, 346, 1389,
	347, 348, 627, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 628, 629, 360, 1390, 267, 1391, 0,
	0, 0, 0, 361, 362, 363, 630, 0, 0, 0,
	364, 1392, 365, 1393, 1394, 1157, 366, 367, 631, 632,
	368, 369, 370, 371, 372, 373, 374, 375, 376, 1395,
	377, 633, 1396, 634, 378, 1397, 379, 380, 381, 382,
	383, 635, 636, 637, 460, 1159, 384, 385, 1398, 386,
	387, 388, 389, 0, 0, 0, 268, 390, 391, 392,
	394, 1399, 1158, 393, 638, 639, 1400, 640, 1401, 395,
	396, 1160, 641, 1161, 397, 398, 399, 1162, 400, 0,
	0, 0, 401, 402, 403, 404, 405, 406, 1402, 407,
	409, 408, 1403, 410, 642, 1163, 411, 412, 1164, 1404,
	413, 0, 0, 0, 414, 415, 418, 1405, 1406, 416,
	417, 419, 420, 0, 421, 422, 424, 427, 423, 425,
	426, 428, 441, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 443, 0, 442, 1165, 444,
	445, 446, 451, 453, 454, 449, 450, 452, 455, 456,
	448, 1166, 447, 1407, 269, 1167, 457, 458, 1408, 643,
	459, 644, 461, 462, 1409, 0, 463, 0, 1410, 1411,
	465, 466, 467, 1412, 1413, 468, 469, 645, 1168, 470,
	1169, 646, 471, 472, 464, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 1414, 482, 483, 647, 484, 485,
	486, 648, 487, 488, 489, 649, 490, 650, 491, 492,
	1415, 493, 494, 0, 495, 496, 497, 498, 499, 500,
	501, 651, 502, 504, 503, 505, 1416, 506, 0, 507,
	508, 509, 0, 0, 0, 0, 510, 0, 512, 513,
	514, 515, 511, 516, 517, 518, 519, 1417, 520, 521,
	522, 1170, 523, 524, 525, 526, 652, 527, 0, 528,
	529, 535, 536, 530, 531, 537, 538, 539, 540, 541,
	1418, 543, 544, 542, 545, 546, 547, 1419, 548, 549,
	532, 533, 550, 551, 1171, 552, 553, 554, 555, 556,
	557, 653, 0, 558, 1420, 559, 560, 561, 563, 534,
	564, 569, 570, 654, 565, 566, 567, 568, 655, 572,
	573, 1421, 574, 575, 0, 571, 562, 1422, 576, 577,
	578, 579, 580, 581, 582, 354, 583, 1423, 584, 656,
	657, 658, 659, 1424, 593, 1425, 585, 586, 587, 660,
	588, 661, 1426, 589, 590, 591, 592, 0, 594, 595,
	1427, 1428, 596, 597, 598, 600, 601, 599, 602, 1429,
	603, 1430, 0, 604, 605, 606, 662, 663, 664, 1431,
	608, 607, 609, 665, 1432, 1433, 1434, 1435, 1436, 610,
	611, 666, 612, 613, 614, 0, 1352, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2479, 270, 272, 271, 273, 274, 275, 276,
	277, 1357, 278, 279, 1358, 1359, 1360, 0, 1361, 615,
	1362, 1363, 1364, 1365, 280, 281, 1155, 282, 283, 284,
	285, 286, 287, 616, 617, 0, 288, 618, 289, 619,
	1366, 620, 290, 291, 292, 293, 294, 295, 1367, 1368,
	0, 296, 621, 622, 623, 1369, 297, 298, 624, 1370,
	1299, 1371, 299, 300, 301, 302, 303, 304, 305, 0,
	1372, 307, 308, 309, 306, 310, 1373, 311, 0, 312,
	313, 314, 315, 316, 317, 1374, 318, 319, 320, 1156,
	321, 322, 323, 1375, 1376, 1378, 1377, 1379, 1380, 1381,
	324, 325, 326, 327, 328, 0, 329, 625, 626, 1382,
	333, 330, 331, 1383, 334, 332, 335, 1384, 336, 337,
	338, 1385, 1386, 339, 340, 341, 1387, 342, 343, 1388,
	344, 345, 346, 1389, 347, 348, 627, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 628, 629, 360,
	1390, 267, 1391, 0, 0, 0, 0, 361, 362, 363,
	630, 0, 0, 0, 364, 1392, 365, 1393, 1394, 1157,
	366, 367, 631, 632, 368, 369, 370, 371, 372, 373,
	374, 375, 376, 1395, 377, 633, 1396, 634, 378, 1397,
	379, 380, 381, 382, 383, 635, 636, 637, 460, 1159,
	384, 385, 1398, 386, 387, 388, 389, 0, 0, 0,
	268, 390, 391, 392, 394, 1399, 1158, 393, 638, 639,
	1400, 640, 1401, 395, 396, 1160, 641, 1161, 397, 398,
	399, 1162, 400, 0, 0, 0, 401, 402, 403, 404,
	405, 406, 1402, 407, 409, 408, 1403, 410, 642, 1163,
	411, 412, 1164, 1404, 413, 0, 0, 0, 414, 415,
	418, 1405, 1406, 416, 417, 419, 420, 0, 421, 422,
	424, 427, 423, 425, 426, 428, 441, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 443,
	0, 442, 1165, 444, 445, 446, 451, 453, 454, 449,
	450, 452, 455, 456, 448, 1166, 447, 1407, 269, 1167,
	457, 458, 1408, 643, 459, 644, 461, 462, 1409, 0,
	463, 0, 1410, 1411, 465, 466, 467, 1412, 1413, 468,
	469, 645, 1168, 470, 1169, 646, 471, 472, 464, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 1414, 482,
	483, 647, 484, 485, 486, 648, 487, 488, 489, 649,
	490, 650, 491, 492, 1415, 493, 494, 0, 495, 496,
	497, 498, 499, 500, 501, 651, 502, 504, 503, 505,
	1416, 506, 0, 507, 508, 509, 0, 0, 0, 0,
	510, 0, 512, 513, 514, 515, 511, 516, 517, 518,
	519, 1417, 520, 521, 522, 1170, 523, 524, 525, 526,
	652, 527, 0, 528, 529, 535, 536, 530, 531, 537,
	538, 539, 540, 541, 1418, 543, 544, 542, 545, 546,
	547, 1419, 548, 549, 532, 533, 550, 551, 1171, 552,
	553, 554, 555, 556, 557, 653, 0, 558, 1420, 559,
	560, 561, 563, 534, 564, 569, 570, 654, 565, 566,
	567, 568, 655, 572, 573, 1421, 574, 575, 0, 571,
	562, 1422, 576, 577, 578, 579, 580, 581, 582, 354,
	583, 1423, 584, 656, 657, 658, 659, 1424, 593, 1425,
	585, 586, 587, 660, 588, 661, 1426, 589, 590, 591,
	592, 0, 594, 595, 1427, 1428, 596, 597, 598, 600,
	601, 599, 602, 1429, 603, 1430, 0, 604, 605, 606,
	662, 663, 664, 1431, 608, 607, 609, 665, 1432, 1433,
	1434, 1435, 1436, 610, 611, 666, 612, 613, 614, 1448,
	0, 1352, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2166, 0, 270, 272,
	271, 273, 274, 275, 276, 277, 1357, 278, 279, 1358,
	1359, 1360, 0, 1361, 615, 1362, 1363, 1364, 1365, 280,
	281, 1155, 282, 283, 284, 285, 286, 287, 616, 617,
	0, 288, 618, 289, 619, 1366, 620, 290, 291, 292,
	293, 294, 295, 1367, 1368, 0, 296, 621, 622, 623,
	1369, 297, 298, 624, 1370, 1299, 1371, 299, 300, 301,
	302, 303, 304, 305, 0, 1372, 307, 308, 309, 306,
	310, 1373, 311, 0, 312, 313, 314, 315, 316, 317,
	1374, 318, 319, 320, 1156, 321, 322, 323, 1375, 1376,
	1378, 1377, 1379, 1380, 1381, 324, 325, 326, 327, 328,
	0, 329, 625, 626, 1382, 333, 330, 331, 1383, 334,
	332, 335, 1384, 336, 337, 338, 1385, 1386, 339, 340,
	341, 1387, 342, 343, 1388, 344, 345, 346, 1389, 347,
	348, 627, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 628, 629, 360, 1390, 267, 1391, 0, 0,
	0, 0, 361, 362, 363, 630, 0, 0, 0, 364,
	1392, 365, 1393, 1394, 1157, 366, 367, 631, 632, 368,
	369, 370, 371, 372, 373, 374, 375, 376, 1395, 377,
	633, 1396, 634, 378, 1397, 379, 380, 381, 382, 383,
	635, 636, 637, 460, 1159, 384, 385, 1398, 386, 387,
	388, 389, 0, 0, 0, 268, 390, 391, 392, 394,
	1399, 1158, 393, 638, 639, 1400, 640, 1401, 395, 396,
	1160, 641, 1161, 397, 398, 399, 1162, 400, 0, 0,
	0, 401, 402, 403, 404, 405, 406, 1402, 407, 409,
	408, 1403, 410, 642, 1163, 411, 412, 1164, 1404, 413,
	0, 0, 0, 414, 415, 418, 1405, 1406, 416, 417,
	419, 420, 0, 421, 422, 424, 427, 423, 425, 426,
	428, 441, 429, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 443, 0, 442, 1165, 444, 445,
	446, 451, 453, 454, 449, 450, 452, 455, 456, 448,
	1166, 447, 1407, 269, 1167, 457, 458, 1408, 643, 459,
	644, 461, 462, 1409, 0, 463, 0, 1410, 1411, 465,
	466, 467, 1412, 1413, 468, 469, 645, 1168, 470, 1169,
	646, 471, 472, 464, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 1414, 482, 483, 647, 484, 485, 486,
	648, 487, 488, 489, 649, 490, 650, 491, 492, 1415,
	493, 494, 0, 495, 496, 497, 498, 499, 500, 501,
	651, 502, 504, 503, 505, 1416, 506, 0, 507, 508,
	509, 0, 0, 0, 0, 510, 0, 512, 513, 514,
	515, 511, 516, 517, 518, 519, 1417, 520, 521, 522,
	1170, 523, 524, 525, 526, 652, 527, 0, 528, 529,
	535, 536, 530, 531, 537, 538, 539, 540, 541, 1418,
	543, 544, 542, 545, 546, 547, 1419, 548, 549, 532,
	533, 550, 551, 1171, 552, 553, 554, 555, 556, 557,
	653, 0, 558, 1420, 559, 560, 561, 563, 534, 564,
	569, 570, 654, 565, 566, 567, 568, 655, 572, 573,
	1421, 574, 575, 0, 571, 562, 1422, 576, 577, 578,
	579, 580, 581, 582, 354, 583, 1423, 584, 656, 657,
	658, 659, 1424, 593, 1425, 585, 586, 587, 660, 588,
	661, 1426, 589, 590, 591, 592, 0, 594, 595, 1427,
	1428, 596, 597, 598, 600, 601, 599, 602, 1429, 603,
	1430, 0, 604, 605, 606, 662, 663, 664, 1431, 608,
	607, 609, 665, 1432, 1433, 1434, 1435, 1436, 610, 611,
	666, 612, 613, 614, 1349, 0, 1352, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 270, 272, 271, 273, 274, 275, 276,
	277, 1357, 278, 279, 1358, 1359, 1360, 0, 1361, 615,
	1362, 1363, 1364, 1365, 280, 281, 1155, 282, 283, 284,
	285, 286, 287, 616, 617, 0, 288, 618, 289, 619,
	1366, 620, 290, 291, 292, 293, 294, 295, 1367, 1368,
	0, 296, 621, 622, 623, 1369, 297, 298, 624, 1370,
	1299, 1371, 299, 300, 301, 302, 303, 304, 305, 0,
	1372, 307, 308, 309, 306, 310, 1373, 311, 0, 312,
	313, 314, 315, 316, 317, 1374, 318, 319, 320, 1156,
	321, 322, 323, 1375, 1376, 1378, 1377, 1379, 1380, 1381,
	324, 325, 326, 327, 328, 0, 329, 625, 626, 1382,
	333, 330, 331, 1383, 334, 332, 335, 1384, 336, 337,
	338, 1385, 1386, 339, 340, 341, 1387, 342, 343, 1388,
	344, 345, 346, 1389, 347, 348, 627, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 628, 629, 360,
	1390, 267, 1391, 0, 0, 0, 0, 361, 362, 363,
	630, 0, 0, 0, 364, 1392, 365, 1393, 1394, 1157,
	366, 367, 631, 632, 368, 369, 370, 371, 372, 373,
	374, 375, 376, 1395, 377, 633, 1396, 634, 378, 1397,
	379, 380, 381, 382, 383, 635, 636, 637, 460, 1159,
	384, 385, 1398, 386, 387, 388, 389, 0, 0, 0,
	268, 390, 391, 392, 394, 1399, 1158, 393, 638, 639,
	1400, 640, 1401, 395, 396, 1160, 641, 1161, 397, 398,
	399, 1162, 400, 0, 0, 0, 401, 402, 403, 404,
	405, 406, 1402, 407, 409, 408, 1403, 410, 642, 1163,
	411, 412, 1164, 1404, 413, 0, 0, 0, 414, 415,
	418, 1405, 1406, 416, 417, 419, 420, 0, 421, 422,
	424, 427, 423, 425, 426, 428, 441, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 443,
	0, 442, 1165, 444, 445, 446, 451, 453, 454, 449,
	450, 452, 455, 456, 448, 1166, 447, 1407, 269, 1167,
	457, 458, 1408, 643, 459, 644, 461, 462, 1409, 0,
	463, 0, 1410, 1411, 465, 466, 467, 1412, 1413, 468,
	469, 645, 1168, 470, 1169, 646, 471, 472, 464, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 1414, 482,
	483, 647, 484, 485, 486, 648, 487, 488, 489, 649,
	490, 650, 491, 492, 1415, 493, 494, 0, 495, 496,
	497, 498, 499, 500, 501, 651, 502, 504, 503, 505,
	1416, 506, 0, 507, 508, 509, 0, 0, 0, 0,
	510, 0, 512, 513, 514, 515, 511, 516, 517, 518,
	519, 1417, 520, 521, 522, 1170, 523, 524, 525, 526,
	652, 527, 0, 528, 529, 535, 536, 530, 531, 537,
	538, 539, 540, 541, 1418, 543, 544, 542, 545, 546,
	547, 1419, 548, 549, 532, 533, 550, 551, 1171, 552,
	553, 554, 555, 556, 557, 653, 0, 558, 1420, 559,
	560, 561, 563, 534, 564, 569, 570, 654, 565, 566,
	567, 568, 655, 572, 573, 1421, 574, 575, 0, 571,
	562, 1422, 576, 577, 578, 579, 580, 581, 582, 354,
	583, 1423, 584, 656, 657, 658, 659, 1424, 593, 1425,
	585, 586, 587, 660, 588, 661, 1426, 589, 590, 591,
	592, 0, 594, 595, 1427, 1428, 596, 597, 598, 600,
	601, 599, 602, 1429, 603, 1430, 0, 604, 605, 606,
	662, 663, 664, 1431, 608, 607, 609, 665, 1432, 1433,
	1434, 1435, 1436, 610, 611, 666, 612, 613, 614, 1352,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 272, 271, 273,
	274, 275, 276, 277, 1357, 278, 279, 1358, 1359, 1360,
	0, 1361, 615, 1362, 1363, 1364, 1365, 280, 281, 1155,
	282, 283, 284, 285, 286, 287, 616, 617, 0, 288,
	618, 289, 619, 1366, 620, 290, 291, 292, 293, 294,
	295, 1367, 1368, 0, 296, 621, 622, 623, 1369, 297,
	298, 624, 1370, 1299, 1371, 299, 300, 301, 302, 303,
	304, 305, 0, 1372, 307, 308, 309, 306, 310, 1373,
	311, 0, 312, 313, 314, 315, 316, 317, 1374, 318,
	319, 320, 1156, 321, 322, 323, 1375, 1376, 1378, 1377,
	1379, 1380, 1381, 324, 325, 326, 327, 328, 0, 329,
	625, 626, 1382, 333, 330, 331, 1383, 334, 332, 335,
	1384, 336, 337, 338, 1385, 1386, 339, 340, 341, 1387,
	342, 343, 1388, 344, 345, 346, 1389, 347, 348, 627,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	628, 629, 360, 1390, 267, 1391, 0, 0, 0, 0,
	361, 362, 363, 630, 0, 0, 0, 364, 1392, 365,
	1393, 1394, 1157, 366, 367, 631, 632, 368, 369, 370,
	371, 372, 373, 374, 375, 376, 1395, 377, 633, 1396,
	634, 378, 1397, 379, 380, 381, 382, 383, 635, 636,
	637, 460, 1159, 384, 385, 1398, 386, 387, 388, 389,
	0, 0, 0, 268, 390, 391, 392, 394, 1399, 1158,
	393, 638, 639, 1400, 640, 1401, 395, 396, 1160, 641,
	1161, 397, 398, 399, 1162, 400, 0, 0, 0, 401,
	402, 403, 404, 405, 406, 1402, 407, 409, 408, 1403,
	410, 642, 1163, 411, 412, 1164, 1404, 413, 0, 0,
	0, 414, 415, 418, 1405, 1406, 416, 417, 419, 420,
	0, 421, 422, 424, 427, 423, 425, 426, 428, 441,
	429, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 443, 0, 442, 1165, 444, 445, 446, 451,
	453, 454, 449, 450, 452, 455, 456, 448, 1166, 447,
	1407, 269, 1167, 457, 458, 1408, 643, 459, 644, 461,
	462, 1409, 0, 463, 0, 1410, 1411, 465, 466, 467,
	1412, 1413, 468, 469, 645, 1168, 470, 1169, 646, 471,
	472, 464, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 1414, 482, 483, 647, 484, 485, 486, 648, 487,
	488, 489, 649, 490, 650, 491, 492, 1415, 493, 494,
	0, 495, 496, 497, 498, 499, 500, 501, 651, 502,
	504, 503, 505, 1416, 506, 0, 507, 508, 509, 0,
	0, 0, 0, 510, 0, 512, 513, 514, 515, 511,
	516, 517, 518, 519, 1417, 520, 521, 522, 1170, 523,
	524, 525, 526, 652, 527, 0, 528, 529, 535, 536,
	530, 531, 537, 538, 539, 540, 541, 1418, 543, 544,
	542, 545, 546, 547, 1419, 548, 549, 532, 533, 550,
	551, 1171, 552, 553, 554, 555, 556, 557, 653, 0,
	558, 1420, 559, 560, 561, 563, 534, 564, 569, 570,
	654, 565, 566, 567, 568, 655, 572, 573, 1421, 574,
	575, 0, 571, 562, 1422, 576, 577, 578, 579, 580,
	581, 582, 354, 583, 1423, 584, 656, 657, 658, 659,
	1424, 593, 1425, 585, 586, 587, 660, 588, 661, 1426,
	589, 590, 591, 592, 0, 594, 595, 1427, 1428, 596,
	597, 598, 600, 601, 599, 602, 1429, 603, 1430, 0,
	604, 605, 606, 662, 663, 664, 1431, 608, 607, 609,
	665, 1432, 1433, 1434, 1435, 1436, 610, 611, 666, 612,
	613, 614, 2454, 0, 1091, 1063, 1064, 1065, 1061, 1062,
	1074, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 270, 272, 271, 273, 274, 275, 276, 277, 2451,
	278, 279, 0, 0, 0, 0, 0, 1115, 1079, 0,
	0, 0, 280, 281, 1155, 282, 283, 284, 285, 286,
	287, 616, 1128, 0, 288, 1135, 289, 1134, 0, 1145,
	290, 291, 292, 293, 294, 295, 1081, 1114, 1048, 296,
	1175, 1176, 623, 0, 297, 298, 1121, 0, 1102, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 1156, 321, 322,
	323, 1105, 1103, 1104, 1111, 1107, 1106, 1110, 324, 325,
	326, 327, 328, 1138, 329, 1132, 1131, 1052, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 2452,
	0, 339, 1123, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 1058, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 1146, 1147, 360, 1070, 267,
	0, 0, 0, 0, 0, 361, 362, 363, 1130, 0,
	0, 0, 364, 0, 365, 0, 0, 1157, 366, 367,
	1143, 1144, 368, 369, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 1153, 0, 1080, 378, 0, 379, 380,
	381, 382, 383, 1116, 1117, 1120, 460, 1159, 384, 385,
	0, 386, 387, 388, 389, 0, 0, 0, 268, 390,
	391, 392, 394, 0, 1158, 393, 1125, 1126, 0, 1086,
	0, 395, 396, 1160, 1118, 1161, 397, 398, 399, 1162,
	400, 0, 0, 0, 401, 402, 403, 404, 405, 406,
	0, 407, 409, 408, 0, 410, 1154, 1163, 411, 412,
	1164, 0, 413, 0, 0, 0, 414, 415, 418, 1109,
	1108, 416, 417, 419, 420, 0, 421, 422, 424, 427,
	423, 425, 426, 428, 441, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 443, 0, 442,
	1165, 444, 445, 446, 451, 453, 454, 449, 450, 452,
	455, 456, 448, 1166, 447, 1049, 269, 1167, 457, 458,
	1071, 1119, 459, 1133, 461, 462, 0, 0, 463, 0,
	0, 0, 465, 466, 467, 0, 0, 468, 469, 645,
	1168, 470, 1169, 1148, 471, 472, 464, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 0, 482, 483, 647,
	484, 485, 486, 648, 487, 488, 489, 1149, 490, 650,
	491, 492, 0, 493, 494, 0, 495, 496, 497, 498,
	499, 500, 501, 1129, 502, 504, 503, 505, 0, 506,
	0, 507, 508, 509, 0, 0, 0, 0, 510, 0,
	512, 513, 514, 515, 511, 516, 517, 518, 519, 0,
	520, 521, 522, 1170, 523, 524, 525, 526, 1059, 527,
	0, 528, 529, 535, 536, 530, 531, 537, 538, 539,
	540, 541, 0, 543, 544, 542, 545, 546, 547, 1112,
	548, 549, 532, 533, 550, 551, 1171, 552, 553, 554,
	555, 556, 557, 1127, 0, 558, 0, 559, 560, 561,
	563, 534, 564, 569, 570, 1174, 565, 566, 567, 568,
	1150, 572, 573, 0, 574, 575, 1047, 571, 562, 0,
	576, 577, 578, 579, 580, 581, 582, 354, 583, 0,
	584, 1139, 1140, 1141, 1142, 0, 593, 0, 585, 586,
	587, 1151, 588, 1152, 1069, 589, 590, 591, 592, 0,
	594, 595, 0, 1053, 596, 597, 598, 600, 601, 599,
	602, 1113, 603, 0, 0, 604, 605, 606, 662, 1136,
	1173, 2450, 608, 607, 609, 665, 0, 0, 0, 0,
	0, 610, 611, 666, 612, 613, 614, 1050, 0, 0,
	0, 0, 0, 0, 0, 1046, 0, 0, 0, 0,
	0, 0, 1044, 1045, 2453, 0, 0, 0, 0, 0,
	0, 1075, 2449, 0, 1037, 1073, 1091, 1063, 1064, 1065,
	1061, 1062, 1074, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 270, 272, 271, 273, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 1115,
	1079, 0, 0, 0, 280, 281, 1155, 282, 283, 284,
	285, 286, 287, 616, 1128, 0, 288, 1135, 289, 1134,
	0, 1145, 290, 291, 292, 293, 294, 295, 1081, 1114,
	1048, 296, 1175, 1176, 623, 0, 297, 298, 1121, 0,
	1102, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 1156,
	321, 322, 323, 1105, 1103, 1104, 1111, 1107, 1106, 1110,
	324, 325, 326, 327, 328, 1138, 329, 1132, 1131, 1052,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 1123, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 1058, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 1146, 1147, 360,
	1070, 267, 0, 0, 0, 0, 0, 361, 362, 363,
	1130, 0, 0, 0, 364, 0, 365, 0, 0, 1157,
	366, 367, 1143, 1144, 368, 369, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 1153, 0, 1080, 378, 0,
	379, 380, 381, 382, 383, 1116, 1117, 1120, 460, 1159,
	384, 385, 0, 386, 387, 388, 389, 0, 0, 0,
	268, 390, 391, 392, 394, 0, 1158, 393, 1125, 1126,
	0, 1086, 0, 395, 396, 1160, 1118, 1161, 397, 398,
	399, 1162, 400, 0, 0, 0, 401, 402, 403, 404,
	405, 406, 0, 407, 409, 408, 0, 410, 1154, 1163,
	411, 412, 1164, 0, 413, 0, 0, 0, 414, 415,
	418, 1109, 1108, 416, 417, 419, 420, 0, 421, 422,
	424, 427, 423, 425, 426, 428, 441, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 443,
	0, 442, 1165, 444, 445, 446, 451, 453, 454, 449,
	450, 452, 455, 456, 448, 1166, 447, 1049, 269, 1167,
	457, 458, 1071, 1119, 459, 1133, 461, 462, 0, 0,
	463, 0, 0, 0, 465, 466, 467, 0, 0, 468,
	469, 645, 1168, 470, 1169, 1148, 471, 472, 464, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 0, 482,
	483, 647, 484, 485, 486, 648, 487, 488, 489, 1149,
	490, 650, 491, 492, 0, 493, 494, 0, 495, 496,
	497, 498, 499, 500, 501, 1129, 502, 504, 503, 505,
	0, 506, 0, 507, 508, 509, 0, 0, 0, 0,
	510, 0, 512, 513, 514, 515, 511, 516, 517, 518,
	519, 0, 520, 521, 522, 1170, 523, 524, 525, 526,
	1059, 527, 0, 528, 529, 535, 536, 530, 531, 537,
	538, 539, 540, 541, 229, 543, 544, 542, 545, 546,
	547, 1112, 548, 549, 532, 533, 550, 551, 1171, 552,
	553, 554, 555, 556, 557, 1127, 0, 558, 0, 559,
	560, 561, 563, 534, 564, 569, 570, 1174, 565, 566,
	567, 568, 1150, 572, 573, 0, 574, 575, 1047, 571,
	562, 231, 576, 577, 578, 579, 580, 581, 582, 354,
	583, 0, 584, 1139, 1140, 1141, 1142, 0, 593, 0,
	585, 586, 587, 1151, 588, 1152, 1069, 589, 590, 591,
	592, 0, 594, 595, 0, 1053, 596, 597, 598, 600,
	601, 599, 602, 1113, 603, 0, 0, 604, 605, 606,
	1568, 1136, 1173, 0, 608, 607, 609, 665, 0, 0,
	0, 0, 223, 610, 611, 666, 612, 613, 614, 1050,
	0, 224, 0, 0, 0, 0, 0, 1046, 0, 0,
	0, 0, 0, 0, 1044, 1045, 1091, 1063, 1064, 1065,
	1061, 1062, 1074, 1812, 1810, 0, 0, 1073, 0, 0,
	0, 0, 0, 270, 272, 271, 273, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 1115,
	1079, 0, 0, 0, 280, 281, 1155, 282, 283, 284,
	285, 286, 287, 616, 1128, 0, 288, 1135, 289, 1134,
	0, 1145, 290, 291, 292, 293, 294, 295, 1081, 1114,
	1048, 296, 1175, 1176, 623, 0, 297, 298, 1121, 0,
	1102, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 1156,
	321, 322, 323, 1105, 1103, 1104, 1111, 1107, 1106, 1110,
	324, 325, 326, 327, 328, 1138, 329, 1132, 1131, 1052,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 1123, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 1058, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 1146, 1147, 360,
	1070, 267, 0, 0, 0, 0, 0, 361, 362, 363,
	1130, 0, 0, 0, 364, 0, 365, 0, 0, 1157,
	366, 367, 1143, 1144, 368, 369, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 1153, 0, 1080, 378, 0,
	379, 380, 381, 382, 383, 1116, 1117, 1120, 460, 1159,
	384, 385, 0, 386, 387, 388, 389, 0, 0, 0,
	268, 390, 391, 392, 394, 0, 1158, 393, 1125, 1126,
	0, 1086, 0, 395, 396, 1160, 1118, 1161, 397, 398,
	399, 1162, 400, 0, 0, 0, 401, 402, 403, 404,
	405, 406, 0, 407, 409, 408, 0, 410, 1154, 1163,
	411, 412, 1164, 0, 413, 0, 0, 0, 414, 415,
	418, 1109, 1108, 416, 417, 419, 420, 0, 421, 422,
	424, 427, 423, 425, 426, 428, 441, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 443,
	0, 442, 1165, 444, 445, 446, 451, 453, 454, 449,
	450, 452, 455, 456, 448, 1166, 447, 1049, 269, 1167,
	457, 458, 1071, 1119, 459, 1133, 461, 462, 0, 0,
	463, 0, 0, 0, 465, 466, 467, 0, 0, 468,
	469, 645, 1168, 470, 1169, 1148, 471, 472, 464, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 0, 482,
	483, 647, 484, 485, 486, 648, 487, 488, 489, 1149,
	490, 650, 491, 492, 0, 493, 494, 0, 495, 496,
	497, 498, 499, 500, 501, 1129, 502, 504, 503, 505,
	0, 506, 0, 507, 508, 509, 0, 0, 0, 0,
	510, 0, 512, 513, 514, 515, 511, 516, 517, 518,
	519, 0, 520, 521, 522, 1170, 523, 524, 525, 526,
	1059, 527, 0, 528, 529, 535, 536, 530, 531, 537,
	538, 539, 540, 541, 229, 543, 544, 542, 545, 546,
	547, 1112, 548, 549, 532, 533, 550, 551, 1171, 552,
	553, 554, 555, 556, 557, 1127, 0, 558, 0, 559,
	560, 561, 563, 534, 564, 569, 570, 1174, 565, 566,
	567, 568, 1150, 572, 573, 0, 574, 575, 1047, 571,
	562, 231, 576, 577, 578, 579, 580, 581, 582, 354,
	583, 0, 584, 1139, 1140, 1141, 1142, 0, 593, 0,
	585, 586, 587, 1151, 588, 1152, 1069, 589, 590, 591,
	592, 0, 594, 595, 0, 1053, 596, 597, 598, 600,
	601, 599, 602, 1113, 603, 0, 0, 604, 605, 606,
	1568, 1136, 1173, 0, 608, 607, 609, 665, 0, 0,
	0, 0, 223, 610, 611, 666, 612, 613, 614, 1050,
	0, 224, 0, 0, 0, 0, 0, 1046, 0, 0,
	0, 0, 0, 0, 1044, 1045, 1091, 1063, 1064, 1065,
	1061, 1062, 1074, 1812, 3061, 0, 0, 1073, 0, 0,
	0, 0, 0, 270, 272, 271, 273, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 1115,
	1079, 0, 0, 0, 280, 281, 1155, 282, 283, 284,
	285, 286, 287, 616, 1128, 0, 288, 1135, 289, 1134,
	0, 1145, 290, 291, 292, 293, 294, 295, 1081, 1114,
	1048, 296, 1175, 1176, 623, 0, 297, 298, 1121, 0,
	1102, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 1156,
	321, 322, 323, 1105, 1103, 1104, 1111, 1107, 1106, 1110,
	324, 325, 326, 327, 328, 1138, 329, 1132, 1131, 1052,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 1123, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 1058, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 1146, 1147, 360,
	1070, 267, 0, 0, 0, 0, 0, 361, 362, 363,
	1130, 0, 0, 0, 364, 0, 365, 0, 0, 1157,
	366, 367, 1143, 1144, 368, 369, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 1153, 0, 1080, 378, 0,
	379, 380, 381, 382, 383, 1116, 1117, 1120, 460, 1159,
	384, 385, 0, 386, 387, 388, 389, 0, 0, 0,
	268, 390, 391, 392, 394, 0, 1158, 393, 1125, 1126,
	0, 1086, 0, 395, 396, 1160, 1118, 1161, 397, 398,
	399, 1162, 400, 0, 0, 0, 401, 402, 403, 404,
	405, 406, 0, 407, 409, 408, 0, 410, 1154, 1163,
	411, 412, 1164, 0, 413, 0, 0, 0, 414, 415,
	418, 1109, 1108, 416, 417, 419, 420, 0, 421, 422,
	424, 427, 423, 425, 426, 428, 441, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 443,
	0, 442, 1165, 444, 445, 446, 451, 453, 454, 449,
	450, 452, 455, 456, 448, 1166, 447, 1049, 269, 1167,
	457, 458, 1071, 1119, 459, 1133, 461, 462, 0, 0,
	463, 0, 0, 0, 465, 466, 467, 0, 0, 468,
	469, 645, 1168, 470, 1169, 1148, 471, 472, 464, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 0, 482,
	483, 647, 484, 485, 486, 648, 487, 488, 489, 1149,
	490, 650, 491, 492, 0, 493, 494, 0, 495, 496,
	497, 498, 499, 500, 501, 1129, 502, 504, 503, 505,
	0, 506, 0, 507, 508, 509, 0, 0, 0, 0,
	510, 0, 512, 513, 514, 515, 511, 516, 517, 518,
	519, 0, 520, 521, 522, 1170, 523, 524, 525, 526,
	1059, 527, 0, 528, 529, 535, 536, 530, 531, 537,
	538, 539, 540, 541, 229, 543, 544, 542, 545, 546,
	547, 1112, 548, 549, 532, 533, 550, 551, 1171, 552,
	553, 554, 555, 556, 557, 1127, 0, 558, 0, 559,
	560, 561, 563, 534, 564, 569, 570, 1174, 565, 566,
	567, 568, 1150, 572, 573, 0, 574, 575, 1047, 571,
	562, 231, 576, 577, 578, 579, 580, 581, 582, 354,
	583, 0, 584, 1139, 1140, 1141, 1142, 0, 593, 0,
	585, 586, 587, 1151, 588, 1152, 1069, 589, 590, 591,
	592, 0, 594, 595, 0, 1053, 596, 597, 598, 600,
	601, 599, 602, 1113, 603, 0, 0, 604, 605, 606,
	1568, 1136, 1173, 0, 608, 607, 609, 665, 0, 0,
	0, 0, 223, 610, 611, 666, 612, 613, 614, 1050,
	0, 224, 0, 0, 0, 0, 0, 1046, 0, 0,
	0, 0, 0, 0, 1044, 1045, 1091, 1063, 1064, 1065,
	1061, 1062, 1074, 1812, 1810, 0, 0, 1073, 0, 0,
	0, 0, 0, 270, 272, 271, 273, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 1115,
	1079, 0, 0, 0, 280, 281, 1155, 282, 283, 284,
	285, 286, 287, 616, 1128, 0, 288, 1135, 289, 1134,
	2582, 1145, 290, 291, 292, 293, 294, 295, 1081, 1114,
	1048, 296, 1175, 1176, 623, 0, 297, 298, 1121, 0,
	1102, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 1156,
	321, 322, 323, 1105, 1103, 1104, 1111, 1107, 1106, 1110,
	324, 325, 326, 327, 328, 1138, 329, 1132, 1131, 1052,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 1123, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 1058, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 1146, 1147, 360,
	1070, 267, 0, 0, 0, 0, 0, 361, 362, 363,
	1130, 0, 0, 0, 364, 0, 365, 0, 2587, 1157,
	366, 367, 1143, 1144, 368, 369, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 1153, 0, 1080, 378, 0,
	379, 380, 381, 382, 383, 1116, 1117, 1120, 460, 1159,
	384, 385, 0, 386, 387, 388, 389, 0, 0, 0,
	268, 390, 391, 392, 394, 0, 1158, 393, 1125, 1126,
	0, 1086, 0, 395, 396, 1160, 1118, 1161, 397, 398,
	399, 1162, 400, 0, 0, 0, 401, 402, 403, 404,
	405, 406, 0, 407, 409, 408, 2583, 410, 1154, 1163,
	411, 412, 1164, 0, 413, 0, 0, 0, 414, 415,
	418, 1109, 1108, 416, 417, 419, 420, 0, 421, 422,
	424, 427, 423, 425, 426, 428, 441, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 443,
	0, 442, 1165, 444, 445, 446, 451, 453, 454, 449,
	450, 452, 455, 456, 448, 1166, 447, 1049, 269, 1167,
	457, 458, 1071, 1119, 459, 1133, 461, 462, 0, 0,
	463, 0, 0, 0, 465, 466, 467, 0, 0, 468,
	469, 645, 1168, 470, 1169, 1148, 471, 472, 464, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 0, 482,
	483, 647, 484, 485, 486, 648, 487, 488, 489, 1149,
	490, 650, 491, 492, 0, 493, 494, 0, 495, 496,
	497, 498, 499, 500, 501, 1129, 502, 504, 503, 505,
	0, 506, 0, 507, 508, 509, 0, 0, 0, 0,
	510, 0, 512, 513, 514, 515, 511, 516, 517, 518,
	519, 0, 520, 521, 522, 1170, 523, 524, 525, 526,
	1059, 527, 0, 528, 529, 535, 536, 530, 531, 537,
	538, 539, 540, 541, 0, 543, 544, 542, 545, 546,
	547, 1112, 548, 549, 532, 533, 550, 551, 1171, 552,
	553, 554, 555, 556, 557, 1127, 0, 558, 0, 559,
	560, 561, 563, 534, 564, 569, 570, 1174, 565, 566,
	567, 568, 1150, 572, 573, 0, 574, 575, 1047, 571,
	562, 0, 576, 577, 578, 579, 580, 581, 582, 354,
	583, 0, 584, 1139, 1140, 1141, 1142, 0, 593, 2584,
	585, 586, 587, 1151, 588, 1152, 1069, 589, 590, 591,
	592, 0, 594, 595, 0, 1053, 596, 597, 598, 600,
	601, 599, 602, 1113, 603, 0, 0, 604, 605, 606,
	662, 1136, 1173, 0, 608, 607, 609, 665, 0, 0,
	0, 0, 0, 610, 611, 666, 612, 613, 614, 1050,
	0, 0, 0, 0, 0, 0, 0, 1046, 0, 0,
	0, 0, 0, 0, 1044, 1045, 0, 0, 0, 0,
	0, 0, 0, 1075, 0, 0, 2499, 1073, 1091, 1063,
	1064, 1065, 1061, 1062, 1074, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 270, 272, 271, 273, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 1115, 1079, 0, 0, 0, 280, 281, 1155, 282,
	283, 284, 285, 286, 287, 616, 1128, 0, 288, 1135,
	289, 1134, 0, 1145, 290, 291, 292, 293, 294, 295,
	1081, 1114, 1048, 296, 1175, 1176, 623, 0, 297, 298,
	1121, 0, 1102, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 1156, 321, 322, 323, 1105, 1103, 1104, 1111, 1107,
	1106, 1110, 324, 325, 326, 327, 328, 1138, 329, 1132,
	1131, 1052, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 1123, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 1058, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 1146,
	1147, 360, 1070, 267, 0, 0, 0, 0, 0, 361,
	362, 363, 1130, 0, 0, 0, 364, 0, 365, 0,
	0, 1157, 366, 367, 1143, 1144, 368, 369, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 1153, 0, 1080,
	378, 0, 379, 380, 381, 382, 383, 1116, 1117, 1120,
	460, 1159, 384, 385, 0, 386, 387, 388, 389, 0,
	0, 0, 268, 390, 391, 392, 394, 0, 1158, 393,
	1125, 1126, 0, 1086, 0, 395, 396, 1160, 1118, 1161,
	397, 398, 399, 1162, 400, 0, 0, 0, 401, 402,
	403, 404, 405, 406, 0, 407, 409, 408, 0, 410,
	1154, 1163, 411, 412, 1164, 0, 413, 0, 0, 0,
	414, 415, 418, 1109, 1108, 416, 417, 419, 420, 0,
	421, 422, 424, 427, 423, 425, 426, 428, 441, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 443, 0, 442, 1165, 444, 445, 446, 451, 453,
	454, 449, 450, 452, 455, 456, 448, 1166, 447, 1049,
	269, 1167, 457, 458, 1071, 1119, 459, 1133, 461, 462,
	0, 0, 463, 0, 0, 0, 465, 466, 467, 0,
	0, 468, 469, 645, 1168, 470, 1169, 1148, 471, 472,
	464, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	0, 482, 483, 647, 484, 485, 486, 648, 487, 488,
	489, 1149, 490, 650, 491, 492, 0, 493, 494, 0,
	495, 496, 497, 498, 499, 500, 501, 1129, 502, 504,
	503, 505, 0, 506, 0, 507, 508, 509, 0, 0,
	0, 0, 510, 0, 512, 513, 514, 515, 511, 516,
	517, 518, 519, 0, 520, 521, 522, 1170, 523, 524,
	525, 526, 1059, 527, 0, 528, 529, 535, 536, 530,
	531, 537, 538, 539, 540, 541, 0, 543, 544, 542,
	545, 546, 547, 1112, 548, 549, 532, 533, 550, 551,
	1171, 552, 553, 554, 555, 556, 557, 1127, 0, 558,
	0, 559, 560, 561, 563, 534, 564, 569, 570, 1174,
	565, 566, 567, 568, 1150, 572, 573, 0, 574, 575,
	1047, 571, 562, 0, 576, 577, 578, 579, 580, 581,
	582, 354, 583, 0, 584, 1139, 1140, 1141, 1142, 0,
	593, 0, 585, 586, 587, 1151, 588, 1152, 1069, 589,
	590, 591, 592, 0, 594, 595, 0, 1053, 596, 597,
	598, 600, 601, 599, 602, 1113, 603, 0, 0, 604,
	605, 606, 662, 1136, 1173, 0, 608, 607, 609, 665,
	0, 0, 0, 0, 0, 610, 611, 666, 612, 613,
	614, 1050, 0, 0, 0, 0, 0, 0, 0, 1046,
	0, 0, 0, 0, 0, 0, 1044, 1045, 0, 0,
	0, 0, 0, 0, 0, 1075, 2497, 0, 2496, 1073,
	1091, 1063, 1064, 1065, 1061, 1062, 1074, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 270, 272, 271,
	273, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 1115, 1079, 0, 0, 0, 280, 281,
	1155, 282, 283, 284, 285, 286, 287, 616, 1128, 0,
	288, 1135, 289, 1134, 0, 1145, 290, 291, 292, 293,
	294, 295, 1081, 1114, 1048, 296, 1175, 1176, 623, 0,
	297, 298, 1121, 0, 1102, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 1156, 321, 322, 323, 1105, 1103, 1104,
	1111, 1107, 1106, 1110, 324, 325, 326, 327, 328, 1138,
	329, 1132, 1131, 1052, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 1123, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	1058, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 1146, 1147, 360, 1070, 267, 0, 0, 0, 0,
	0, 361, 362, 363, 1130, 0, 0, 0, 364, 0,
	365, 0, 0, 1157, 366, 367, 1143, 1144, 368, 369,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 1153,
	0, 1080, 378, 0, 379, 380, 381, 382, 383, 1116,
	1117, 1120, 460, 1159, 384, 385, 0, 386, 387, 388,
	389, 0, 0, 0, 268, 390, 391, 392, 394, 0,
	1158, 393, 1125, 1126, 0, 1086, 0, 395, 396, 1160,
	1118, 1161, 397, 398, 399, 1162, 400, 0, 0, 0,
	401, 402, 403, 404, 405, 406, 0, 407, 409, 408,
	0, 410, 1154, 1163, 411, 412, 1164, 0, 413, 0,
	0, 0, 414, 415, 418, 1109, 1108, 416, 417, 419,
	420, 0, 421, 422, 424, 427, 423, 425, 426, 428,
	441, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 443, 0, 442, 1165, 444, 445, 446,
	451, 453, 454, 449, 450, 452, 455, 456, 448, 1166,
	447, 1049, 269, 1167, 457, 458, 1071, 1119, 459, 1133,
	461, 462, 0, 0, 463, 0, 0, 0, 465, 466,
	467, 0, 0, 468, 469, 645, 1168, 470, 1169, 1148,
	471, 472, 464, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 0, 482, 483, 647, 484, 485, 486, 648,
	487, 488, 489, 1149, 490, 650, 491, 492, 0, 493,
	494, 0, 495, 496, 497, 498, 499, 500, 501, 1129,
	502, 504, 503, 505, 0, 506, 0, 507, 508, 509,
	0, 0, 0, 0, 510, 0, 512, 513, 514, 515,
	511, 516, 517, 518, 519, 0, 520, 521, 522, 1170,
	523, 524, 525, 526, 1059, 527, 0, 528, 529, 535,
	536, 530, 531, 537, 538, 539, 540, 541, 0, 543,
	544, 542, 545, 546, 547, 1112, 548, 549, 532, 533,
	550, 551, 1171, 552, 553, 554, 555, 556, 557, 1127,
	0, 558, 0, 559, 560, 561, 563, 534, 564, 569,
	570, 1174, 565, 566, 567, 568, 1150, 572, 573, 0,
	574, 575, 1047, 571, 562, 0, 576, 577, 578, 579,
	580, 581, 582, 354, 583, 0, 584, 1139, 1140, 1141,
	1142, 0, 593, 0, 585, 586, 587, 1151, 588, 1152,
	1069, 589, 590, 591, 592, 0, 594, 595, 0, 1053,
	596, 597, 598, 600, 601, 599, 602, 1113, 603, 0,
	0, 604, 605, 606, 662, 1136, 1173, 0, 608, 607,
	609, 665, 0, 0, 0, 0, 0, 610, 611, 666,
	612, 613, 614, 1050, 0, 0, 0, 0, 0, 0,
	0, 1046, 0, 0, 0, 0, 0, 0, 1044, 1045,
	0, 0, 0, 0, 0, 0, 0, 1075, 2494, 0,
	2493, 1073, 1091, 1063, 1064, 1065, 1061, 1062, 1074, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 270,
	272, 271, 273, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 1115, 1079, 0, 0, 0,
	280, 281, 1155, 282, 283, 284, 285, 286, 287, 616,
	1128, 0, 288, 1135, 289, 1134, 0, 1145, 290, 291,
	292, 293, 294, 295, 1081, 1114, 1048, 296, 1175, 1176,
	623, 0, 297, 298, 1121, 0, 1102, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 1156, 321, 322, 323, 1105,
	1103, 1104, 1111, 1107, 1106, 1110, 324, 325, 326, 327,
	328, 1138, 329, 1132, 1131, 1052, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	1123, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 1058, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 1146, 1147, 360, 1070, 267, 0, 0,
	0, 0, 0, 361, 362, 363, 1130, 0, 0, 0,
	364, 0, 365, 0, 0, 1157, 366, 367, 1143, 1144,
	368, 369, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 1153, 0, 1080, 378, 0, 379, 380, 381, 382,
	383, 1116, 1117, 1120, 460, 1159, 384, 385, 0, 386,
	387, 388, 389, 0, 0, 0, 268, 390, 391, 392,
	394, 0, 1158, 393, 1125, 1126, 0, 1086, 0, 395,
	396, 1160, 1118, 1161, 397, 398, 399, 1162, 400, 0,
	0, 0, 401, 402, 403, 404, 405, 406, 0, 407,
	409, 408, 0, 410, 1154, 1163, 411, 412, 1164, 0,
	413, 0, 0, 0, 414, 415, 418, 1109, 1108, 416,
	417, 419, 420, 0, 421, 422, 424, 427, 423, 425,
	426, 428, 441, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 443, 0, 442, 1165, 444,
	445, 446, 451, 453, 454, 449, 450, 452, 455, 456,
	448, 1166, 447, 1049, 269, 1167, 457, 458, 1071, 1119,
	459, 1133, 461, 462, 0, 0, 463, 0, 0, 0,
	465, 466, 467, 0, 0, 468, 469, 645, 1168, 470,
	1169, 1148, 471, 472, 464, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 0, 482, 483, 647, 484, 485,
	486, 648, 487, 488, 489, 1149, 490, 650, 491, 492,
	0, 493, 494, 0, 495, 496, 497, 498, 499, 500,
	501, 1129, 502, 504, 503, 505, 0, 506, 0, 507,
	508, 509, 0, 0, 0, 0, 510, 0, 512, 513,
	514, 515, 511, 516, 517, 518, 519, 0, 520, 521,
	522, 1170, 523, 524, 525, 526, 1059, 527, 0, 528,
	529, 535, 536, 530, 531, 537, 538, 539, 540, 541,
	0, 543, 544, 542, 545, 546, 547, 1112, 548, 549,
	532, 533, 550, 551, 1171, 552, 553, 554, 555, 556,
	557, 1127, 0, 558, 0, 559, 560, 561, 563, 534,
	564, 569, 570, 1174, 565, 566, 567, 568, 1150, 572,
	573, 0, 574, 575, 1047, 571, 562, 0, 576, 577,
	578, 579, 580, 581, 582, 354, 583, 0, 584, 1139,
	1140, 1141, 1142, 0, 593, 0, 585, 586, 587, 1151,
	588, 1152, 1069, 589, 590, 591, 592, 0, 594, 595,
	0, 1053, 596, 597, 598, 600, 601, 599, 602, 1113,
	603, 0, 0, 604, 605, 606, 662, 1136, 1173, 0,
	608, 607, 609, 665, 0, 0, 0, 0, 0, 610,
	611, 666, 612, 613, 614, 1050, 0, 0, 0, 0,
	0, 0, 0, 1046, 0, 0, 0, 0, 0, 0,
	1044, 1045, 0, 0, 0, 0, 0, 0, 0, 1075,
	2491, 0, 2490, 1073, 1091, 1063, 1064, 1065, 1061, 1062,
	1074, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 270, 272, 271, 273, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 1115, 1079, 0,
	0, 0, 280, 281, 1155, 282, 283, 284, 285, 286,
	287, 616, 1128, 0, 288, 1135, 289, 1134, 0, 1145,
	290, 291, 292, 293, 294, 295, 1081, 1114, 1048, 296,
	1175, 1176, 623, 0, 297, 298, 1121, 0, 1102, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 1156, 321, 322,
	323, 1105, 1103, 1104, 1111, 1107, 1106, 1110, 324, 325,
	326, 327, 328, 1138, 329, 1132, 1131, 1052, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 1123, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 1058, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 1146, 1147, 360, 1070, 267,
	0, 0, 0, 0, 0, 361, 362, 363, 1130, 0,
	0, 0, 364, 0, 365, 0, 0, 1157, 366, 367,
	1143, 1144, 368, 369, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 1153, 0, 1080, 378, 0, 379, 380,
	381, 382, 383, 1116, 1117, 1120, 460, 1159, 384, 385,
	0, 386, 387, 388, 389, 0, 0, 0, 268, 390,
	391, 392, 394, 0, 1158, 393, 1125, 1126, 0, 1086,
	0, 395, 396, 1160, 1118, 1161, 397, 398, 399, 1162,
	400, 0, 0, 0, 401, 402, 403, 404, 405, 406,
	0, 407, 409, 408, 0, 410, 1154, 1163, 411, 412,
	1164, 0, 413, 0, 0, 0, 414, 415, 418, 1109,
	1108, 416, 417, 419, 420, 0, 421, 422, 424, 427,
	423, 425, 426, 428, 441, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 443, 0, 442,
	1165, 444, 445, 446, 451, 453, 454, 449, 450, 452,
	455, 456, 448, 1166, 447, 1049, 269, 1167, 457, 458,
	1071, 1119, 459, 1133, 461, 462, 0, 0, 463, 0,
	0, 0, 465, 466, 467, 0, 0, 468, 469, 645,
	1168, 470, 1169, 1148, 471, 472, 464, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 0, 482, 483, 647,
	484, 485, 486, 648, 487, 488, 489, 1149, 490, 650,
	491, 492, 0, 493, 494, 0, 495, 496, 497, 498,
	499, 500, 501, 1129, 502, 504, 503, 505, 0, 506,
	0, 507, 508, 509, 0, 0, 0, 0, 510, 0,
	512, 513, 514, 515, 511, 516, 517, 518, 519, 0,
	520, 521, 522, 1170, 523, 524, 525, 526, 1059, 527,
	0, 528, 529, 535, 536, 530, 531, 537, 538, 539,
	540, 541, 0, 543, 544, 542, 545, 546, 547, 1112,
	548, 549, 532, 533, 550, 551, 1171, 552, 553, 554,
	555, 556, 557, 1127, 0, 558, 0, 559, 560, 561,
	563, 534, 564, 569, 570, 1174, 565, 566, 567, 568,
	1150, 572, 573, 0, 574, 575, 1047, 571, 562, 0,
	576, 577, 578, 579, 580, 581, 582, 354, 583, 0,
	584, 1139, 1140, 1141, 1142, 0, 593, 0, 585, 586,
	587, 1151, 588, 1152, 1069, 589, 590, 591, 592, 0,
	594, 595, 0, 1053, 596, 597, 598, 600, 601, 599,
	602, 1113, 603, 0, 0, 604, 605, 606, 662, 1136,
	1173, 0, 608, 607, 609, 665, 0, 0, 0, 0,
	0, 610, 611, 666, 612, 613, 614, 1050, 0, 0,
	0, 0, 0, 0, 0, 1046, 0, 0, 0, 0,
	0, 0, 1044, 1045, 0, 0, 0, 0, 0, 0,
	0, 1075, 2488, 0, 1661, 1073, 1091, 1063, 1064, 1065,
	1061, 1062, 1074, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 270, 272, 271, 273, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 1115,
	1079, 0, 0, 0, 280, 281, 1155, 282, 283, 284,
	285, 286, 287, 616, 1128, 0, 288, 1135, 289, 1134,
	0, 1145, 290, 291, 292, 293, 294, 295, 1081, 1114,
	1048, 296, 1175, 1176, 623, 0, 297, 298, 1121, 0,
	1102, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 1156,
	321, 322, 323, 1105, 1103, 1104, 1111, 1107, 1106, 1110,
	324, 325, 326, 327, 328, 1138, 329, 1132, 1131, 1052,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 1123, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 1058, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 1146, 1147, 360,
	1070, 267, 0, 0, 0, 0, 0, 361, 362, 363,
	1130, 0, 0, 0, 364, 0, 365, 0, 0, 1157,
	366, 367, 1143, 1144, 368, 369, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 1153, 0, 1080, 378, 0,
	379, 380, 381, 382, 383, 1116, 1117, 1120, 460, 1159,
	384, 385, 0, 386, 387, 388, 389, 0, 0, 0,
	268, 390, 391, 392, 394, 0, 1158, 393, 1125, 1126,
	0, 1086, 0, 395, 396, 1160, 1118, 1161, 397, 398,
	399, 1162, 400, 0, 0, 0, 401, 402, 403, 404,
	405, 406, 0, 407, 409, 408, 0, 410, 1154, 1163,
	411, 412, 1164, 0, 413, 0, 0, 0, 414, 415,
	418, 1109, 1108, 416, 417, 419, 420, 0, 421, 422,
	424, 427, 423, 425, 426, 428, 441, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 443,
	0, 442, 1165, 444, 445, 446, 451, 453, 454, 449,
	450, 452, 455, 456, 448, 1166, 447, 1049, 269, 1167,
	457, 458, 1071, 1119, 459, 1133, 461, 462, 0, 0,
	463, 0, 0, 0, 465, 466, 467, 0, 0, 468,
	469, 645, 1168, 470, 1169, 1148, 471, 472, 464, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 0, 482,
	483, 647, 484, 485, 486, 648, 487, 488, 489, 1149,
	490, 650, 491, 492, 0, 493, 494, 0, 495, 496,
	497, 498, 499, 500, 501, 1129, 502, 504, 503, 505,
	0, 506, 0, 507, 508, 509, 0, 0, 0, 0,
	510, 0, 512, 513, 514, 515, 511, 516, 517, 518,
	519, 0, 520, 521, 522, 1170, 523, 524, 525, 526,
	1059, 527, 0, 528, 529, 535, 536, 530, 531, 537,
	538, 539, 540, 541, 0, 543, 544, 542, 545, 546,
	547, 1112, 548, 549, 532, 533, 550, 551, 1171, 552,
	553, 554, 555, 556, 557, 1127, 0, 558, 0, 559,
	560, 561, 563, 534, 564, 569, 570, 1174, 565, 566,
	567, 568, 1150, 572, 573, 0, 574, 575, 1047, 571,
	562, 0, 576, 577, 578, 579, 580, 581, 582, 354,
	583, 0, 584, 1139, 1140, 1141, 1142, 0, 593, 0,
	585, 586, 587, 1151, 588, 1152, 1069, 589, 590, 591,
	592, 0, 594, 595, 0, 1053, 596, 597, 598, 600,
	601, 599, 602, 1113, 603, 0, 0, 604, 605, 606,
	662, 1136, 1173, 0, 608, 607, 609, 665, 0, 1660,
	0, 0, 0, 610, 611, 666, 612, 613, 614, 1050,
	0, 0, 0, 0, 0, 0, 0, 1046, 0, 0,
	0, 0, 0, 0, 1044, 1045, 0, 0, 0, 0,
	0, 0, 0, 1075, 0, 0, 1040, 1073, 1091, 1063,
	1064, 1065, 1061, 1062, 1074, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 270, 272, 271, 273, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 1115, 1079, 0, 0, 0, 280, 281, 1155, 282,
	283, 284, 285, 286, 287, 616, 1128, 0, 288, 1135,
	289, 1134, 0, 1145, 290, 291, 292, 293, 294, 295,
	1081, 1114, 1048, 296, 1175, 1176, 623, 0, 297, 298,
	1121, 0, 1102, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 1156, 321, 322, 323, 1105, 1103, 1104, 1111, 1107,
	1106, 1110, 324, 325, 326, 327, 328, 1138, 329, 1132,
	1131, 1052, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 1123, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 1058, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 1146,
	1147, 360, 1070, 267, 0, 0, 0, 0, 0, 361,
	362, 363, 1130, 0, 0, 0, 364, 0, 365, 0,
	0, 1157, 366, 367, 1143, 1144, 368, 369, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 1153, 0, 1080,
	378, 0, 379, 380, 381, 382, 383, 1116, 1117, 1120,
	460, 1159, 384, 385, 0, 386, 387, 388, 389, 0,
	0, 0, 268, 390, 391, 392, 394, 0, 1158, 393,
	1125, 1126, 0, 1086, 0, 395, 396, 1160, 1118, 1161,
	397, 398, 399, 1162, 400, 0, 0, 0, 401, 402,
	403, 404, 405, 406, 0, 407, 409, 408, 0, 410,
	1154, 1163, 411, 412, 1164, 0, 413, 0, 0, 0,
	414, 415, 418, 1109, 1108, 416, 417, 419, 420, 0,
	421, 422, 424, 427, 423, 425, 426, 428, 441, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 443, 0, 442, 1165, 444, 445, 446, 451, 453,
	454, 449, 450, 452, 455, 456, 448, 1166, 447, 1049,
	269, 1167, 457, 458, 1071, 1119, 459, 1133, 461, 462,
	0, 0, 463, 0, 1054, 0, 465, 466, 467, 0,
	0, 468, 469, 645, 1168, 470, 1169, 1148, 471, 472,
	464, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	0, 482, 483, 647, 484, 485, 486, 648, 487, 488,
	489, 1149, 490, 650, 491, 492, 0, 493, 494, 0,
	495, 496, 497, 498, 499, 500, 501, 1129, 502, 504,
	503, 505, 0, 506, 0, 507, 508, 509, 0, 0,
	0, 0, 510, 0, 512, 513, 514, 515, 511, 516,
	517, 518, 519, 0, 520, 521, 522, 1170, 523, 524,
	525, 526, 1059, 527, 0, 528, 529, 535, 536, 530,
	531, 537, 538, 539, 540, 541, 0, 543, 544, 542,
	545, 546, 547, 1112, 548, 549, 532, 533, 550, 551,
	1171, 552, 553, 554, 555, 556, 557, 1127, 0, 558,
	0, 559, 560, 561, 563, 534, 564, 569, 570, 1174,
	565, 566, 567, 568, 1150, 572, 573, 0, 574, 575,
	1047, 571, 562, 0, 576, 577, 578, 579, 580, 581,
	582, 354, 583, 0, 584, 1139, 1140, 1141, 1142, 0,
	593, 0, 585, 586, 587, 1151, 588, 1152, 1069, 589,
	590, 591, 592, 0, 594, 595, 0, 1053, 596, 597,
	598, 600, 601, 599, 602, 1113, 603, 0, 0, 604,
	605, 606, 662, 1136, 1173, 0, 608, 607, 609, 665,
	0, 0, 0, 0, 0, 610, 611, 666, 612, 613,
	614, 1050, 0, 0, 0, 0, 0, 0, 0, 1046,
	0, 0, 0, 0, 0, 0, 1044, 1045, 1091, 1063,
	1064, 1065, 1061, 1062, 1074, 1075, 0, 0, 0, 1073,
	0, 0, 0, 0, 0, 270, 272, 271, 273, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 1115, 1079, 0, 0, 0, 280, 281, 1155, 282,
	283, 284, 285, 286, 287, 616, 1128, 0, 288, 1135,
	289, 1134, 0, 1145, 290, 291, 292, 293, 294, 295,
	1081, 1114, 1048, 296, 1175, 1176, 623, 0, 297, 298,
	1121, 0, 1102, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 4464, 317, 0, 318, 319,
	320, 1156, 321, 322, 323, 1105, 1103, 1104, 1111, 1107,
	1106, 1110, 324, 325, 326, 327, 328, 1138, 329, 1132,
	1131, 1052, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 1123, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 1058, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 1146,
	1147, 360, 1070, 267, 0, 0, 0, 0, 0, 361,
	362, 363, 1130, 0, 0, 0, 364, 0, 365, 0,
	0, 1157, 366, 367, 1143, 1144, 368, 369, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 1153, 0, 1080,
	378, 0, 379, 380, 381, 382, 383, 1116, 1117, 1120,
	460, 1159, 384, 385, 0, 386, 387, 388, 389, 0,
	0, 0, 268, 390, 391, 392, 394, 0, 1158, 393,
	1125, 1126, 0, 1086, 0, 395, 396, 1160, 1118, 1161,
	397, 398, 399, 1162, 400, 0, 0, 0, 401, 402,
	403, 404, 405, 406, 0, 407, 409, 408, 0, 410,
	1154, 1163, 411, 412, 1164, 0, 413, 0, 0, 0,
	414, 415, 418, 1109, 1108, 416, 417, 419, 420, 0,
	421, 422, 424, 427, 423, 425, 426, 428, 441, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 443, 0, 442, 1165, 444, 445, 446, 451, 453,
	454, 449, 450, 452, 455, 456, 448, 1166, 447, 1049,
	269, 1167, 457, 458, 1071, 1119, 459, 1133, 461, 462,
	0, 0, 463, 0, 1054, 0, 465, 466, 467, 0,
	0, 468, 469, 645, 1168, 470, 1169, 1148, 471, 472,
	464, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	0, 482, 483, 647, 484, 485, 486, 648, 487, 488,
	489, 1149, 490, 650, 491, 492, 0, 493, 494, 0,
	495, 496, 497, 498, 499, 500, 501, 1129, 502, 504,
	503, 505, 0, 506, 0, 507, 508, 509, 0, 0,
	0, 0, 510, 0, 512, 513, 514, 515, 511, 516,
	517, 518, 519, 0, 520, 521, 522, 1170, 523, 524,
	525, 526, 1059, 527, 0, 528, 529, 535, 536, 530,
	531, 537, 538, 539, 540, 541, 0, 543, 544, 542,
	545, 546, 547, 1112, 548, 549, 532, 533, 550, 551,
	1171, 552, 553, 554, 555, 556, 557, 1127, 0, 558,
	0, 559, 560, 561, 563, 534, 564, 569, 570, 1174,
	565, 566, 567, 568, 1150, 572, 573, 0, 574, 575,
	1047, 571, 562, 0, 576, 577, 578, 579, 580, 581,
	582, 354, 583, 0, 584, 1139, 1140, 1141, 1142, 0,
	593, 0, 585, 586, 587, 1151, 588, 1152, 1069, 589,
	590, 591, 592, 0, 594, 595, 0, 1053, 596, 597,
	598, 600, 601, 599, 602, 1113, 603, 0, 0, 604,
	605, 606, 662, 1136, 1173, 0, 608, 607, 609, 665,
	0, 0, 0, 0, 0, 610, 611, 666, 612, 613,
	614, 1050, 0, 0, 0, 0, 0, 0, 0, 1046,
	0, 0, 0, 0, 0, 0, 1044, 1045, 1091, 1063,
	1064, 1065, 1061, 1062, 1074, 1075, 0, 0, 0, 1073,
	0, 0, 0, 0, 0, 270, 272, 271, 273, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 1115, 1079, 0, 0, 0, 280, 281, 1155, 282,
	283, 284, 285, 286, 287, 616, 1128, 0, 288, 1135,
	289, 1134, 0, 1145, 290, 291, 292, 293, 294, 295,
	1081, 1114, 1048, 296, 1175, 1176, 623, 0, 297, 298,
	1121, 0, 1102, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 1156, 321, 322, 323, 1105, 1103, 1104, 1111, 1107,
	1106, 1110, 324, 325, 326, 327, 328, 1138, 329, 1132,
	1131, 1052, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 1123, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 1058, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 1146,
	1147, 360, 1070, 267, 0, 0, 0, 0, 0, 361,
	362, 363, 1130, 0, 0, 0, 364, 0, 365, 0,
	0, 1157, 366, 367, 1143, 1144, 368, 369, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 1153, 0, 1080,
	378, 0, 379, 380, 381, 382, 383, 1116, 1117, 1120,
	460, 1159, 384, 385, 0, 386, 387, 388, 389, 0,
	0, 0, 2368, 390, 391, 392, 394, 0, 1158, 393,
	1125, 1126, 0, 1086, 0, 395, 396, 1160, 1118, 1161,
	397, 398, 399, 1162, 400, 0, 0, 0, 401, 402,
	403, 404, 405, 406, 0, 407, 409, 408, 0, 410,
	1154, 1163, 411, 412, 1164, 0, 413, 0, 0, 0,
	414, 415, 418, 1109, 1108, 416, 417, 419, 420, 0,
	421, 422, 424, 427, 423, 425, 426, 428, 441, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 443, 0, 442, 1165, 444, 445, 446, 451, 453,
	454, 449, 450, 452, 455, 456, 448, 1166, 447, 1049,
	269, 1167, 457, 458, 1071, 1119, 459, 1133, 461, 462,
	0, 0, 463, 0, 0, 0, 465, 466, 467, 0,
	0, 468, 469, 645, 1168, 470, 1169, 1148, 471, 472,
	464, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	0, 482, 483, 647, 484, 485, 486, 648, 487, 488,
	489, 1149, 490, 650, 491, 492, 2367, 493, 494, 0,
	495, 496, 497, 498, 499, 500, 501, 1129, 502, 504,
	503, 505, 0, 506, 0, 507, 508, 509, 0, 0,
	0, 0, 510, 0, 512, 513, 514, 515, 511, 516,
	517, 518, 519, 0, 520, 521, 522, 1170, 523, 524,
	525, 526, 1059, 527, 0, 528, 529, 535, 536, 530,
	531, 537, 538, 539, 540, 541, 0, 543, 544, 542,
	545, 546, 547, 1112, 548, 549, 532, 533, 550, 551,
	1171, 552, 553, 554, 555, 556, 557, 1127, 0, 558,
	0, 559, 560, 561, 563, 534, 564, 569, 570, 1174,
	565, 566, 567, 568, 1150, 572, 573, 0, 574, 575,
	1047, 571, 562, 0, 576, 577, 578, 579, 580, 581,
	582, 354, 583, 0, 584, 1139, 1140, 1141, 1142, 0,
	593, 0, 585, 586, 587, 1151, 588, 1152, 1069, 589,
	590, 591, 592, 0, 594, 595, 0, 1053, 596, 597,
	598, 600, 601, 599, 602, 1113, 603, 0, 0, 604,
	605, 606, 662, 1136, 1173, 0, 608, 607, 609, 665,
	0, 0, 0, 0, 0, 610, 611, 666, 612, 613,
	614, 1050, 0, 0, 0, 0, 0, 0, 0, 1046,
	0, 0, 0, 0, 0, 0, 1044, 1045, 1091, 1063,
	1064, 1065, 1061, 1062, 1074, 1075, 0, 0, 0, 1073,
	0, 0, 0, 0, 0, 270, 272, 271, 273, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 1115, 1079, 0, 0, 0, 280, 281, 1155, 282,
	283, 284, 285, 286, 287, 616, 1128, 0, 288, 1135,
	289, 1134, 0, 1145, 290, 291, 292, 293, 294, 295,
	1081, 1114, 1048, 296, 1175, 1176, 623, 0, 297, 298,
	1121, 0, 1102, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 1156, 321, 322, 323, 1105, 1103, 1104, 1111, 1107,
	1106, 1110, 324, 325, 326, 327, 328, 1138, 329, 1132,
	1131, 1052, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 1123, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 1058, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 1146,
	1147, 360, 1070, 267, 0, 0, 0, 0, 0, 361,
	362, 363, 1130, 0, 0, 0, 364, 0, 365, 0,
	0, 1157, 366, 367, 1143, 1144, 368, 369, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 1153, 0, 1080,
	378, 0, 379, 380, 381, 382, 383, 1116, 1117, 1120,
	460, 1159, 384, 385, 0, 386, 387, 388, 389, 0,
	0, 0, 268, 390, 391, 392, 394, 0, 1158, 393,
	1125, 1126, 0, 1086, 0, 395, 396, 1160, 1118, 1161,
	397, 398, 399, 1162, 400, 0, 0, 0, 401, 402,
	403, 404, 405, 406, 0, 407, 409, 408, 0, 410,
	1154, 1163, 411, 412, 1164, 0, 413, 0, 0, 0,
	414, 415, 418, 1109, 1108, 416, 417, 419, 420, 0,
	421, 422, 424, 427, 423, 425, 426, 428, 441, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 443, 0, 442, 1165, 444, 445, 446, 451, 453,
	454, 449, 450, 452, 455, 456, 448, 1166, 447, 1049,
	269, 1167, 457, 458, 1071, 1119, 459, 1133, 461, 462,
	0, 0, 463, 0, 1054, 0, 465, 466, 467, 0,
	0, 468, 469, 645, 1168, 470, 1169, 1148, 471, 472,
	464, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	0, 482, 483, 647, 484, 485, 486, 648, 487, 488,
	489, 1149, 490, 650, 491, 492, 0, 493, 494, 0,
	495, 496, 497, 498, 499, 500, 501, 1129, 502, 504,
	503, 505, 0, 506, 0, 507, 508, 509, 0, 0,
	0, 0, 510, 0, 512, 513, 514, 515, 511, 516,
	517, 518, 519, 0, 520, 521, 522, 1170, 523, 524,
	525, 526, 1059, 527, 0, 528, 529, 535, 536, 530,
	531, 537, 538, 539, 540, 541, 0, 543, 544, 542,
	545, 546, 547, 1112, 548, 549, 532, 533, 550, 551,
	1171, 552, 553, 554, 555, 556, 557, 1127, 0, 558,
	0, 559, 560, 561, 563, 534, 564, 569, 570, 1174,
	565, 566, 567, 568, 1150, 572, 573, 0, 574, 575,
	1047, 571, 562, 0, 576, 577, 578, 579, 580, 581,
	582, 354, 583, 0, 584, 1139, 1140, 1141, 1142, 0,
	593, 0, 585, 586, 587, 1151, 588, 1152, 1069, 589,
	590, 591, 592, 0, 594, 595, 0, 1053, 596, 597,
	598, 600, 601, 599, 602, 1113, 603, 0, 0, 604,
	605, 606, 662, 1136, 1173, 0, 608, 607, 609, 665,
	0, 0, 0, 0, 0, 610, 611, 666, 612, 613,
	614, 1050, 0, 0, 0, 0, 0, 0, 0, 1046,
	0, 0, 0, 0, 0, 0, 1044, 1045, 1091, 1063,
	1064, 1065, 1061, 1062, 1074, 1075, 0, 0, 0, 1073,
	0, 0, 0, 0, 0, 270, 272, 271, 273, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 1115, 1079, 0, 0, 0, 280, 281, 1155, 282,
	283, 284, 285, 286, 287, 616, 1128, 0, 288, 1135,
	289, 1134, 0, 1145, 290, 291, 292, 293, 294, 295,
	1081, 1114, 1048, 296, 1175, 1176, 623, 0, 297, 298,
	1121, 0, 1102, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 4218, 317, 0, 318, 319,
	320, 1156, 321, 322, 323, 1105, 1103, 1104, 1111, 1107,
	1106, 1110, 324, 325, 326, 327, 328, 1138, 329, 1132,
	1131, 1052, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 1123, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 1058, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 1146,
	1147, 360, 1070, 267, 0, 0, 0, 0, 0, 361,
	362, 363, 1130, 0, 0, 0, 364, 0, 365, 0,
	0, 1157, 366, 367, 1143, 1144, 368, 369, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 1153, 0, 1080,
	378, 0, 379, 380, 381, 382, 383, 1116, 1117, 1120,
	460, 1159, 384, 385, 0, 386, 387, 388, 389, 0,
	0, 0, 268, 390, 391, 392, 394, 0, 1158, 393,
	1125, 1126, 0, 1086, 0, 395, 396, 1160, 1118, 1161,
	397, 398, 399, 1162, 400, 0, 0, 0, 401, 402,
	403, 404, 405, 406, 0, 407, 409, 408, 0, 410,
	1154, 1163, 411, 412, 1164, 0, 413, 0, 0, 0,
	414, 415, 418, 1109, 1108, 416, 417, 419, 420, 0,
	421, 422, 424, 427, 423, 425, 426, 428, 441, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 443, 0, 442, 1165, 444, 445, 446, 451, 453,
	454, 449, 450, 452, 455, 456, 448, 1166, 447, 1049,
	269, 1167, 457, 458, 1071, 1119, 459, 1133, 461, 462,
	0, 0, 463, 0, 1054, 0, 465, 466, 467, 0,
	0, 468, 469, 645, 1168, 470, 1169, 1148, 471, 472,
	464, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	0, 482, 483, 647, 484, 485, 486, 648, 487, 488,
	489, 1149, 490, 650, 491, 492, 0, 493, 494, 0,
	495, 496, 497, 498, 499, 500, 501, 1129, 502, 504,
	503, 505, 0, 506, 0, 507, 508, 509, 0, 0,
	0, 0, 510, 0, 512, 513, 514, 515, 511, 516,
	517, 518, 519, 0, 520, 521, 522, 1170, 523, 524,
	525, 526, 1059, 527, 0, 528, 529, 535, 536, 530,
	531, 537, 538, 539, 540, 541, 0, 543, 544, 542,
	545, 546, 547, 1112, 548, 549, 532, 533, 550, 551,
	1171, 552, 553, 554, 555, 556, 557, 1127, 0, 558,
	0, 559, 560, 561, 563, 534, 564, 569, 570, 1174,
	565, 566, 567, 568, 1150, 572, 573, 0, 574, 575,
	1047, 571, 562, 0, 576, 577, 578, 579, 580, 581,
	582, 354, 583, 0, 584, 1139, 1140, 1141, 1142, 0,
	593, 0, 585, 586, 587, 1151, 588, 1152, 1069, 589,
	590, 591, 592, 0, 594, 595, 0, 1053, 596, 597,
	598, 600, 601, 599, 602, 1113, 603, 0, 0, 604,
	605, 606, 662, 1136, 1173, 0, 608, 607, 609, 665,
	0, 0, 0, 0, 0, 610, 611, 666, 612, 613,
	614, 1050, 0, 0, 0, 0, 0, 0, 0, 1046,
	0, 0, 0, 0, 0, 0, 1044, 1045, 1091, 1063,
	1064, 1065, 1061, 1062, 1074, 1075, 0, 0, 0, 1073,
	0, 0, 0, 0, 0, 270, 272, 271, 273, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 1115, 1079, 0, 0, 0, 280, 281, 1155, 282,
	283, 284, 285, 286, 287, 616, 1128, 0, 288, 1135,
	289, 1134, 0, 1145, 290, 291, 292, 293, 294, 295,
	1081, 1114, 1048, 296, 1175, 1176, 623, 0, 297, 298,
	1121, 0, 1102, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 1156, 321, 322, 323, 1105, 1103, 1104, 1111, 1107,
	1106, 1110, 324, 325, 326, 327, 328, 1138, 329, 1132,
	1131, 1052, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 1123, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 1058, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 1146,
	1147, 360, 1070, 267, 0, 0, 0, 0, 0, 361,
	362, 363, 1130, 0, 0, 0, 364, 0, 365, 0,
	0, 1157, 366, 367, 1143, 1144, 368, 369, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 1153, 0, 1080,
	378, 0, 379, 380, 381, 382, 383, 1116, 1117, 1120,
	460, 1159, 384, 385, 0, 386, 387, 388, 389, 0,
	0, 0, 268, 390, 391, 392, 394, 0, 1158, 393,
	1125, 1126, 0, 1086, 0, 395, 396, 1160, 1118, 1161,
	397, 398, 399, 1162, 400, 0, 0, 0, 401, 402,
	403, 404, 405, 406, 0, 407, 409, 408, 0, 410,
	1154, 1163, 411, 412, 1164, 0, 413, 0, 0, 0,
	414, 415, 418, 1109, 1108, 416, 417, 419, 420, 0,
	421, 422, 424, 427, 423, 425, 426, 428, 441, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 443, 0, 442, 1165, 444, 445, 446, 451, 453,
	454, 449, 450, 452, 455, 456, 448, 1166, 447, 1049,
	3828, 1167, 457, 458, 1071, 1119, 459, 1133, 461, 462,
	0, 0, 463, 0, 0, 0, 465, 466, 467, 0,
	0, 468, 469, 645, 1168, 470, 1169, 1148, 471, 472,
	464, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	0, 482, 483, 647, 484, 485, 486, 648, 487, 488,
	489, 1149, 490, 650, 491, 492, 0, 493, 494, 0,
	495, 496, 497, 498, 499, 500, 501, 1129, 502, 504,
	503, 505, 0, 506, 0, 507, 508, 509, 0, 0,
	0, 0, 510, 0, 512, 513, 514, 515, 511, 516,
	517, 518, 519, 0, 520, 521, 522, 1170, 523, 524,
	525, 526, 1059, 527, 0, 528, 529, 535, 536, 530,
	531, 537, 538, 539, 540, 541, 0, 543, 544, 542,
	545, 546, 547, 1112, 548, 549, 532, 533, 550, 551,
	1171, 552, 553, 554, 555, 556, 557, 1127, 0, 558,
	0, 559, 560, 561, 563, 534, 564, 569, 570, 1174,
	565, 566, 567, 568, 1150, 572, 573, 0, 574, 575,
	1047, 571, 562, 0, 576, 577, 578, 579, 580, 581,
	582, 354, 583, 0, 584, 1139, 1140, 1141, 1142, 0,
	593, 0, 585, 586, 587, 1151, 588, 1152, 1069, 589,
	590, 591, 592, 0, 594, 595, 0, 1053, 596, 597,
	598, 600, 601, 599, 602, 1113, 603, 0, 0, 604,
	605, 606, 662, 1136, 1173, 0, 608, 607, 609, 665,
	0, 0, 0, 0, 0, 610, 611, 666, 612, 613,
	614, 1050, 0, 0, 0, 0, 0, 0, 0, 1046,
	0, 0, 0, 0, 0, 0, 1044, 1045, 1880, 0,
	0, 0, 0, 0, 0, 1075, 0, 0, 0, 1073,
	1091, 1063, 1064, 1065, 1061, 1062, 1074, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 270, 272, 271,
	273, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 1115, 1079, 0, 0, 0, 280, 281,
	1155, 282, 283, 284, 285, 286, 287, 616, 1128, 0,
	288, 1135, 289, 1134, 0, 1145, 290, 291, 292, 293,
	294, 295, 1081, 1114, 1048, 296, 1175, 1176, 623, 0,
	297, 298, 1121, 0, 1102, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 1156, 321, 322, 323, 1105, 1103, 1104,
	1111, 1107, 1106, 1110, 324, 325, 326, 327, 328, 1138,
	329, 1132, 1131, 1052, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 1123, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	1058, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 1146, 1147, 360, 1070, 267, 0, 0, 0, 0,
	0, 361, 362, 363, 1130, 0, 0, 0, 364, 0,
	365, 0, 0, 1157, 366, 367, 1143, 1144, 368, 369,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 1153,
	0, 1080, 378, 0, 379, 380, 381, 382, 383, 1116,
	1117, 1120, 460, 1159, 384, 385, 0, 386, 387, 388,
	389, 0, 0, 0, 268, 390, 391, 392, 394, 0,
	1158, 393, 1125, 1126, 0, 1086, 0, 395, 396, 1160,
	1118, 1161, 397, 398, 399, 1162, 400, 0, 0, 0,
	401, 402, 403, 404, 405, 406, 0, 407, 409, 408,
	0, 410, 1154, 1163, 411, 412, 1164, 0, 413, 0,
	0, 0, 414, 415, 418, 1109, 1108, 416, 417, 419,
	420, 0, 421, 422, 424, 427, 423, 425, 426, 428,
	441, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 443, 0, 442, 1165, 444, 445, 446,
	451, 453, 454, 449, 450, 452, 455, 456, 448, 1166,
	447, 1049, 269, 1167, 457, 458, 1071, 1119, 459, 1133,
	461, 462, 0, 0, 463, 0, 0, 0, 465, 466,
	467, 0, 0, 468, 469, 645, 1168, 470, 1169, 1148,
	471, 472, 464, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 0, 482, 483, 647, 484, 485, 486, 648,
	487, 488, 489, 1149, 490, 650, 491, 492, 0, 493,
	494, 0, 495, 496, 497, 498, 499, 500, 501, 1129,
	502, 504, 503, 505, 0, 506, 0, 507, 508, 509,
	0, 0, 0, 0, 510, 0, 512, 513, 514, 515,
	511, 516, 517, 518, 519, 0, 520, 521, 522, 1170,
	523, 524, 525, 526, 1059, 527, 0, 528, 529, 535,
	536, 530, 531, 537, 538, 539, 540, 541, 0, 543,
	544, 542, 545, 546, 547, 1112, 548, 549, 532, 533,
	550, 551, 1171, 552, 553, 554, 555, 556, 557, 1127,
	0, 558, 0, 559, 560, 561, 563, 534, 564, 569,
	570, 1174, 565, 566, 567, 568, 1150, 572, 573, 0,
	574, 575, 1047, 571, 562, 0, 576, 577, 578, 579,
	580, 581, 582, 354, 583, 0, 584, 1139, 1140, 1141,
	1142, 0, 593, 0, 585, 586, 587, 1151, 588, 1152,
	1069, 589, 590, 591, 592, 0, 594, 595, 0, 1053,
	596, 597, 598, 600, 601, 599, 602, 1113, 603, 0,
	0, 604, 605, 606, 662, 1136, 1173, 3546, 608, 607,
	609, 665, 0, 0, 0, 0, 0, 610, 611, 666,
	612, 613, 614, 1050, 0, 0, 0, 0, 0, 0,
	0, 1046, 0, 0, 0, 0, 0, 0, 1044, 1045,
	1091, 1063, 1064, 1065, 1061, 1062, 1074, 1075, 0, 0,
	0, 1073, 0, 0, 0, 0, 0, 270, 272, 271,
	273, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 1115, 1079, 0, 0, 0, 280, 281,
	1155, 282, 283, 284, 285, 286, 287, 616, 1128, 0,
	288, 1135, 289, 1134, 0, 1145, 290, 291, 292, 293,
	294, 295, 1081, 1114, 1048, 296, 1175, 1176, 623, 0,
	297, 298, 1121, 0, 1102, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 1156, 321, 322, 323, 1105, 1103, 1104,
	1111, 1107, 1106, 1110, 324, 325, 326, 327, 328, 1138,
	329, 1132, 1131, 1052, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 1123, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	1058, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 1146, 1147, 360, 1070, 267, 0, 0, 0, 0,
	0, 361, 362, 363, 1130, 0, 0, 0, 364, 0,
	365, 0, 0, 1157, 366, 367, 1143, 1144, 368, 369,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 1153,
	0, 1080, 378, 0, 379, 380, 381, 382, 383, 1116,
	1117, 1120, 460, 1159, 384, 385, 0, 386, 387, 388,
	389, 0, 0, 0, 268, 390, 391, 392, 394, 0,
	1158, 393, 1125, 1126, 0, 1086, 0, 395, 396, 1160,
	1118, 1161, 397, 398, 399, 1162, 400, 0, 0, 0,
	401, 402, 403, 404, 405, 406, 0, 407, 409, 408,
	0, 410, 1154, 1163, 411, 412, 1164, 0, 413, 0,
	0, 0, 414, 415, 418, 1109, 1108, 416, 417, 419,
	420, 0, 421, 422, 424, 427, 423, 425, 426, 428,
	441, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 443, 0, 442, 1165, 444, 445, 446,
	451, 453, 454, 449, 450, 452, 455, 456, 448, 1166,
	447, 1049, 269, 1167, 457, 458, 1071, 1119, 459, 1133,
	461, 462, 0, 0, 463, 0, 0, 0, 465, 466,
	467, 0, 0, 468, 469, 645, 1168, 470, 1169, 1148,
	471, 472, 464, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 0, 482, 483, 647, 484, 485, 486, 648,
	487, 488, 489, 1149, 490, 650, 491, 492, 0, 493,
	494, 0, 495, 496, 497, 498, 499, 500, 501, 1129,
	502, 504, 503, 505, 0, 506, 0, 507, 508, 509,
	0, 0, 0, 0, 510, 0, 512, 513, 514, 515,
	511, 516, 517, 518, 519, 0, 520, 521, 522, 1170,
	523, 524, 525, 526, 1059, 527, 0, 528, 529, 535,
	536, 530, 531, 537, 538, 539, 540, 541, 0, 543,
	544, 542, 545, 546, 547, 1112, 548, 549, 532, 533,
	550, 551, 1171, 552, 553, 554, 555, 556, 557, 1127,
	0, 558, 0, 559, 560, 561, 563, 534, 564, 569,
	570, 1174, 565, 566, 567, 568, 1150, 572, 573, 0,
	574, 575, 1047, 571, 562, 0, 576, 577, 578, 579,
	580, 581, 582, 354, 583, 0, 584, 1139, 1140, 1141,
	1142, 0, 593, 0, 585, 586, 587, 1151, 588, 1152,
	1069, 589, 590, 591, 592, 0, 594, 595, 0, 1053,
	596, 597, 598, 600, 601, 599, 602, 1113, 603, 0,
	0, 604, 605, 606, 662, 1136, 1173, 0, 608, 607,
	609, 665, 0, 0, 0, 0, 0, 610, 611, 666,
	612, 613, 614, 1050, 0, 0, 0, 0, 0, 0,
	0, 1046, 0, 0, 0, 0, 0, 0, 1044, 1045,
	1880, 0, 0, 0, 0, 0, 0, 1075, 0, 0,
	0, 1073, 1091, 1063, 1064, 1065, 1061, 1062, 1074, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 270,
	272, 271, 273, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 1115, 1079, 0, 0, 0,
	280, 281, 1155, 282, 283, 284, 285, 286, 287, 616,
	1128, 0, 288, 1135, 289, 1134, 0, 1145, 290, 291,
	292, 293, 294, 295, 1081, 1114, 1048, 296, 1175, 1176,
	623, 0, 297, 298, 1121, 0, 1102, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 1156, 321, 322, 323, 1105,
	1103, 1104, 1111, 1107, 1106, 1110, 324, 325, 326, 327,
	328, 1138, 329, 1132, 1131, 1052, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	1123, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 1058, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 1146, 1147, 360, 1070, 267, 0, 0,
	0, 0, 0, 361, 362, 363, 1130, 0, 0, 0,
	364, 0, 365, 0, 2587, 1157, 366, 367, 1143, 1144,
	368, 369, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 1153, 0, 1080, 378, 0, 379, 380, 381, 382,
	383, 1116, 1117, 1120, 460, 1159, 384, 385, 0, 386,
	387, 388, 389, 0, 0, 0, 268, 390, 391, 392,
	394, 0, 1158, 393, 1125, 1126, 0, 1086, 0, 395,
	396, 1160, 1118, 1161, 397, 398, 399, 1162, 400, 0,
	0, 0, 401, 402, 403, 404, 405, 406, 0, 407,
	409, 408, 0, 410, 1154, 1163, 411, 412, 1164, 0,
	413, 0, 0, 0, 414, 415, 418, 1109, 1108, 416,
	417, 419, 420, 0, 421, 422, 424, 427, 423, 425,
	426, 428, 441, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 443, 0, 442, 1165, 444,
	445, 446, 451, 453, 454, 449, 450, 452, 455, 456,
	448, 1166, 447, 1049, 269, 1167, 457, 458, 1071, 1119,
	459, 1133, 461, 462, 0, 0, 463, 0, 0, 0,
	465, 466, 467, 0, 0, 468, 469, 645, 1168, 470,
	1169, 1148, 471, 472, 464, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 0, 482, 483, 647, 484, 485,
	486, 648, 487, 488, 489, 1149, 490, 650, 491, 492,
	0, 493, 494, 0, 495, 496, 497, 498, 499, 500,
	501, 1129, 502, 504, 503, 505, 0, 506, 0, 507,
	508, 509, 0, 0, 0, 0, 510, 0, 512, 513,
	514, 515, 511, 516, 517, 518, 519, 0, 520, 521,
	522, 1170, 523, 524, 525, 526, 1059, 527, 0, 528,
	529, 535, 536, 530, 531, 537, 538, 539, 540, 541,
	0, 543, 544, 542, 545, 546, 547, 1112, 548, 549,
	532, 533, 550, 551, 1171, 552, 553, 554, 555, 556,
	557, 1127, 0, 558, 0, 559, 560, 561, 563, 534,
	564, 569, 570, 1174, 565, 566, 567, 568, 1150, 572,
	573, 0, 574, 575, 1047, 571, 562, 0, 576, 577,
	578, 579, 580, 581, 582, 354, 583, 0, 584, 1139,
	1140, 1141, 1142, 0, 593, 0, 585, 586, 587, 1151,
	588, 1152, 1069, 589, 590, 591, 592, 0, 594, 595,
	0, 1053, 596, 597, 598, 600, 601, 599, 602, 1113,
	603, 0, 0, 604, 605, 606, 662, 1136, 1173, 0,
	608, 607, 609, 665, 0, 0, 0, 0, 0, 610,
	611, 666, 612, 613, 614, 1050, 0, 0, 0, 0,
	0, 0, 0, 1046, 0, 0, 0, 0, 0, 0,
	1044, 1045, 1091, 1063, 1064, 1065, 1061, 1062, 1074, 1075,
	0, 0, 0, 1073, 0, 0, 0, 0, 0, 270,
	272, 271, 273, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 1115, 1079, 0, 0, 0,
	280, 281, 1155, 282, 283, 284, 285, 286, 287, 616,
	1128, 0, 288, 1135, 289, 1134, 0, 1145, 290, 291,
	292, 293, 294, 295, 1081, 1114, 1048, 296, 1175, 1176,
	623, 0, 297, 298, 1121, 0, 1102, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 1156, 321, 322, 323, 1105,
	1103, 1104, 1111, 1107, 1106, 1110, 324, 325, 326, 327,
	328, 1138, 329, 1132, 1131, 1052, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	1123, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 1058, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 1146, 1147, 360, 1070, 267, 0, 0,
	0, 0, 0, 361, 362, 363, 1130, 0, 0, 0,
	364, 0, 365, 0, 0, 1157, 366, 367, 1143, 1144,
	368, 369, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 1153, 0, 1080, 378, 0, 379, 380, 381, 382,
	383, 1116, 1117, 1120, 460, 1159, 384, 385, 0, 386,
	387, 388, 389, 0, 0, 0, 268, 390, 391, 392,
	394, 0, 1158, 393, 1125, 1126, 0, 1086, 0, 395,
	396, 1160, 1118, 1161, 397, 398, 399, 1162, 400, 0,
	0, 0, 401, 402, 403, 404, 405, 406, 0, 407,
	409, 408, 0, 410, 1154, 1163, 411, 412, 1164, 0,
	413, 0, 0, 0, 414, 415, 418, 1109, 1108, 416,
	417, 419, 420, 0, 421, 422, 424, 427, 423, 425,
	426, 428, 441, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 443, 0, 442, 1165, 444,
	445, 446, 451, 453, 454, 449, 450, 452, 455, 456,
	448, 1166, 447, 1049, 269, 1167, 457, 458, 1071, 1119,
	459, 1133, 461, 462, 0, 0, 463, 0, 0, 0,
	465, 466, 467, 0, 0, 468, 469, 645, 1168, 470,
	1169, 1148, 471, 472, 464, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 0, 482, 483, 647, 484, 485,
	486, 648, 487, 488, 489, 1149, 490, 650, 491, 492,
	0, 493, 494, 0, 495, 496, 497, 498, 499, 500,
	501, 1129, 502, 504, 503, 505, 0, 506, 0, 507,
	508, 509, 0, 0, 0, 0, 510, 0, 512, 513,
	514, 515, 511, 516, 517, 518, 519, 0, 520, 521,
	522, 1170, 523, 524, 525, 526, 1059, 527, 0, 528,
	529, 535, 536, 530, 531, 537, 538, 539, 540, 541,
	0, 543, 544, 542, 545, 546, 547, 1112, 548, 549,
	532, 533, 550, 551, 1171, 552, 553, 554, 555, 556,
	557, 1127, 0, 558, 0, 559, 560, 561, 563, 534,
	564, 569, 570, 1174, 565, 566, 567, 568, 1150, 572,
	573, 0, 574, 575, 1047, 571, 562, 0, 576, 577,
	578, 579, 580, 581, 582, 354, 583, 0, 584, 1139,
	1140, 1141, 1142, 0, 593, 0, 585, 586, 587, 1151,
	588, 1152, 1069, 589, 590, 591, 592, 0, 594, 595,
	0, 1053, 596, 597, 598, 600, 601, 599, 602, 1113,
	603, 0, 0, 604, 605, 606, 662, 1136, 1173, 0,
	608, 607, 609, 665, 0, 0, 0, 0, 0, 610,
	611, 666, 612, 613, 614, 1050, 0, 0, 0, 0,
	0, 0, 0, 1046, 0, 0, 0, 0, 0, 0,
	1044, 1045, 0, 0, 0, 0, 0, 0, 0, 1075,
	1810, 0, 2592, 1073, 1091, 1063, 1064, 1065, 1061, 1062,
	1074, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 270, 272, 271, 273, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 1115, 1079, 0,
	0, 0, 280, 281, 1155, 282, 283, 284, 285, 286,
	287, 616, 1128, 0, 288, 1135, 289, 1134, 0, 1145,
	290, 291, 292, 293, 294, 295, 1081, 1114, 1048, 296,
	1175, 1176, 623, 0, 297, 298, 1121, 0, 1102, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 1156, 321, 322,
	323, 1105, 1103, 1104, 1111, 1107, 1106, 1110, 324, 325,
	326, 327, 328, 1138, 329, 1132, 1131, 1052, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 1123, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 1058, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 1146, 1147, 360, 1070, 267,
	0, 0, 0, 0, 0, 361, 362, 363, 1130, 0,
	0, 0, 364, 0, 365, 0, 0, 1157, 366, 367,
	1143, 1144, 368, 369, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 1153, 0, 1080, 378, 0, 379, 380,
	381, 382, 383, 1116, 1117, 1120, 460, 1159, 384, 385,
	0, 386, 387, 388, 389, 0, 0, 0, 268, 390,
	391, 392, 394, 0, 1158, 393, 1125, 1126, 0, 1086,
	0, 395, 396, 1160, 1118, 1161, 397, 398, 399, 1162,
	400, 0, 0, 0, 401, 402, 403, 404, 405, 406,
	0, 407, 409, 408, 0, 410, 1154, 1163, 411, 412,
	1164, 0, 413, 0, 0, 0, 414, 415, 418, 1109,
	1108, 416, 417, 419, 420, 0, 421, 422, 424, 427,
	423, 425, 426, 428, 441, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 443, 0, 442,
	1165, 444, 445, 446, 451, 453, 454, 449, 450, 452,
	455, 456, 448, 1166, 447, 1049, 269, 1167, 457, 458,
	1071, 1119, 459, 1133, 461, 462, 0, 0, 463, 0,
	0, 0, 465, 466, 467, 0, 0, 468, 469, 645,
	1168, 470, 1169, 1148, 471, 472, 464, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 0, 482, 483, 647,
	484, 485, 486, 648, 487, 488, 489, 1149, 490, 650,
	491, 492, 0, 493, 494, 0, 495, 496, 497, 498,
	499, 500, 501, 1129, 502, 504, 503, 505, 0, 506,
	0, 507, 508, 509, 0, 0, 0, 0, 510, 0,
	512, 513, 514, 515, 511, 516, 517, 518, 519, 0,
	520, 521, 522, 1170, 523, 524, 525, 526, 1059, 527,
	0, 528, 529, 535, 536, 530, 531, 537, 538, 539,
	540, 541, 0, 543, 544, 542, 545, 546, 547, 1112,
	548, 549, 532, 533, 550, 551, 1171, 552, 553, 554,
	555, 556, 557, 1127, 0, 558, 0, 559, 560, 561,
	563, 534, 564, 569, 570, 1174, 565, 566, 567, 568,
	1150, 572, 573, 0, 574, 575, 1047, 571, 562, 0,
	576, 577, 578, 579, 580, 581, 582, 354, 583, 0,
	584, 1139, 1140, 1141, 1142, 0, 593, 0, 585, 586,
	587, 1151, 588, 1152, 1069, 589, 590, 591, 592, 0,
	594, 595, 0, 1053, 596, 597, 598, 600, 601, 599,
	602, 1113, 603, 0, 0, 604, 605, 606, 662, 1136,
	1173, 0, 608, 607, 609, 665, 0, 0, 0, 0,
	0, 610, 611, 666, 612, 613, 614, 1050, 0, 0,
	0, 0, 0, 0, 0, 1046, 0, 0, 0, 0,
	0, 0, 1044, 1045, 0, 0, 0, 0, 0, 0,
	0, 1075, 0, 0, 2590, 1073, 1091, 1063, 1064, 1065,
	1061, 1062, 1074, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 270, 272, 271, 273, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 1115,
	1079, 0, 0, 0, 280, 281, 1155, 282, 283, 284,
	285, 286, 287, 616, 1128, 0, 288, 1135, 289, 1134,
	0, 1145, 290, 291, 292, 293, 294, 295, 1081, 1114,
	1048, 296, 1175, 1176, 623, 0, 297, 298, 1121, 0,
	1102, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 1156,
	321, 322, 323, 1105, 1103, 1104, 1111, 1107, 1106, 1110,
	324, 325, 326, 327, 328, 1138, 329, 1132, 1131, 1052,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 1123, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 1058, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 1146, 1147, 360,
	1070, 267, 0, 0, 0, 0, 0, 361, 362, 363,
	1130, 0, 0, 0, 364, 0, 365, 0, 0, 1157,
	366, 367, 1143, 1144, 368, 369, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 1153, 0, 1080, 378, 0,
	379, 380, 381, 382, 383, 1116, 1117, 1120, 460, 1159,
	384, 385, 0, 386, 387, 388, 389, 0, 0, 0,
	268, 390, 391, 392, 394, 0, 1158, 393, 1125, 1126,
	0, 1086, 0, 395, 396, 1160, 1118, 1161, 397, 398,
	399, 1162, 400, 0, 0, 0, 401, 402, 403, 404,
	405, 406, 0, 407, 409, 408, 0, 410, 1154, 1163,
	411, 412, 1164, 0, 413, 0, 0, 0, 414, 415,
	418, 1109, 1108, 416, 417, 419, 420, 0, 421, 422,
	424, 427, 423, 425, 426, 428, 441, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 443,
	0, 442, 1165, 444, 445, 446, 451, 453, 454, 449,
	450, 452, 455, 456, 448, 1166, 447, 1049, 269, 1167,
	457, 458, 1071, 1119, 459, 1133, 461, 462, 0, 0,
	463, 0, 0, 0, 465, 466, 467, 0, 0, 468,
	469, 645, 1168, 470, 1169, 1148, 471, 472, 464, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 0, 482,
	483, 647, 484, 485, 486, 648, 487, 488, 489, 1149,
	490, 650, 491, 492, 0, 493, 494, 0, 495, 496,
	497, 498, 499, 500, 501, 1129, 502, 504, 503, 505,
	0, 506, 0, 507, 508, 509, 0, 0, 0, 0,
	510, 0, 512, 513, 514, 515, 511, 516, 517, 518,
	519, 0, 520, 521, 522, 1170, 523, 524, 525, 526,
	1059, 527, 0, 528, 529, 535, 536, 530, 531, 537,
	538, 539, 540, 541, 0, 543, 544, 542, 545, 546,
	547, 1112, 548, 549, 532, 533, 550, 551, 1171, 552,
	553, 554, 555, 556, 557, 1127, 0, 558, 0, 559,
	560, 561, 563, 534, 564, 569, 570, 1174, 565, 566,
	567, 568, 1150, 572, 573, 0, 574, 575, 1047, 571,
	562, 0, 576, 577, 578, 579, 580, 581, 582, 354,
	583, 0, 584, 1139, 1140, 1141, 1142, 0, 593, 0,
	585, 586, 587, 1151, 588, 1152, 1069, 589, 590, 591,
	592, 0, 594, 595, 0, 1053, 596, 597, 598, 600,
	601, 599, 602, 1113, 603, 0, 0, 604, 605, 606,
	662, 1136, 1173, 0, 608, 607, 609, 665, 0, 0,
	0, 0, 0, 610, 611, 666, 612, 613, 614, 1050,
	0, 0, 0, 0, 0, 0, 0, 1046, 0, 0,
	0, 0, 0, 0, 1044, 1045, 0, 0, 0, 0,
	0, 0, 0, 1075, 0, 0, 2578, 1073, 1091, 1063,
	1064, 1065, 1061, 1062, 1074, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 270, 272, 271, 273, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 1115, 1079, 0, 0, 0, 280, 281, 1155, 282,
	283, 284, 285, 286, 287, 616, 1128, 0, 288, 1135,
	289, 1134, 0, 1145, 290, 291, 292, 293, 294, 295,
	1081, 1114, 1048, 296, 1175, 1176, 623, 0, 297, 298,
	1121, 0, 1102, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 1156, 321, 322, 323, 1105, 1103, 1104, 1111, 1107,
	1106, 1110, 324, 325, 326, 327, 328, 1138, 329, 1132,
	1131, 1052, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 1123, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 1058, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 1146,
	1147, 360, 1070, 267, 0, 0, 0, 0, 0, 361,
	362, 363, 1130, 0, 0, 0, 364, 0, 365, 0,
	0, 1157, 366, 367, 1143, 1144, 368, 369, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 1153, 0, 1080,
	378, 0, 379, 380, 381, 382, 383, 1116, 1117, 1120,
	460, 1159, 384, 385, 0, 386, 387, 388, 389, 0,
	0, 0, 268, 390, 391, 392, 394, 0, 1158, 393,
	1125, 1126, 0, 1086, 0, 395, 396, 1160, 1118, 1161,
	397, 398, 399, 1162, 400, 0, 0, 0, 401, 402,
	403, 404, 405, 406, 0, 407, 409, 408, 0, 410,
	1154, 1163, 411, 412, 1164, 0, 413, 0, 0, 0,
	414, 415, 418, 1109, 1108, 416, 417, 419, 420, 0,
	421, 422, 424, 427, 423, 425, 426, 428, 441, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 443, 0, 442, 1165, 444, 445, 446, 451, 453,
	454, 449, 450, 452, 455, 456, 448, 1166, 447, 1049,
	269, 1167, 457, 458, 1071, 1119, 459, 1133, 461, 462,
	0, 0, 463, 0, 0, 0, 465, 466, 467, 0,
	0, 468, 469, 645, 1168, 470, 1169, 1148, 471, 472,
	464, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	0, 482, 483, 647, 484, 485, 486, 648, 487, 488,
	489, 1149, 490, 650, 491, 492, 0, 493, 494, 0,
	495, 496, 497, 498, 499, 500, 501, 1129, 502, 504,
	503, 505, 0, 506, 0, 507, 508, 509, 0, 0,
	0, 0, 510, 0, 512, 513, 514, 515, 511, 516,
	517, 518, 519, 0, 520, 521, 522, 1170, 523, 524,
	525, 526, 1059, 527, 0, 528, 529, 535, 536, 530,
	531, 537, 538, 539, 540, 541, 0, 543, 544, 542,
	545, 546, 547, 1112, 548, 549, 532, 533, 550, 551,
	1171, 552, 553, 554, 555, 556, 557, 1127, 0, 558,
	0, 559, 560, 561, 563, 534, 564, 569, 570, 1174,
	565, 566, 567, 568, 1150, 572, 573, 0, 574, 575,
	1047, 571, 562, 0, 576, 577, 578, 579, 580, 581,
	582, 354, 583, 0, 584, 1139, 1140, 1141, 1142, 0,
	593, 0, 585, 586, 587, 1151, 588, 1152, 1069, 589,
	590, 591, 592, 0, 594, 595, 0, 1053, 596, 597,
	598, 600, 601, 599, 602, 1113, 603, 0, 0, 604,
	605, 606, 662, 1136, 1173, 0, 608, 607, 609, 665,
	0, 0, 0, 0, 0, 610, 611, 666, 612, 613,
	614, 1050, 0, 0, 0, 0, 0, 0, 0, 1046,
	0, 0, 0, 0, 0, 0, 1044, 1045, 0, 0,
	0, 0, 0, 0, 0, 1075, 0, 0, 2567, 1073,
	1091, 1063, 1064, 1065, 1061, 1062, 1074, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 270, 272, 271,
	273, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 1115, 1079, 0, 0, 0, 280, 281,
	1155, 282, 283, 284, 285, 286, 287, 616, 1128, 0,
	288, 1135, 289, 1134, 0, 1145, 290, 291, 292, 293,
	294, 295, 1081, 1114, 1048, 296, 1175, 1176, 623, 0,
	297, 298, 1121, 0, 1102, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 1156, 321, 322, 323, 1105, 1103, 1104,
	1111, 1107, 1106, 1110, 324, 325, 326, 327, 328, 1138,
	329, 1132, 1131, 1052, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 1123, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	1058, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 1146, 1147, 360, 1070, 267, 0, 0, 0, 0,
	0, 361, 362, 363, 1130, 0, 0, 0, 364, 0,
	365, 0, 0, 1157, 366, 367, 1143, 1144, 368, 369,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 1153,
	0, 1080, 378, 0, 379, 380, 381, 382, 383, 1116,
	1117, 1120, 460, 1159, 384, 385, 0, 386, 387, 388,
	389, 0, 0, 0, 268, 390, 391, 392, 394, 0,
	1158, 393, 1125, 1126, 0, 1086, 0, 395, 396, 1160,
	1118, 1161, 397, 398, 399, 1162, 400, 0, 0, 0,
	401, 402, 403, 404, 405, 406, 0, 407, 409, 408,
	0, 410, 1154, 1163, 411, 412, 1164, 0, 413, 0,
	0, 0, 414, 415, 418, 1109, 1108, 416, 417, 419,
	420, 0, 421, 422, 424, 427, 423, 425, 426, 428,
	441, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 443, 0, 442, 1165, 444, 445, 446,
	451, 453, 454, 449, 450, 452, 455, 456, 448, 1166,
	447, 1049, 269, 1167, 457, 458, 1071, 1119, 459, 1133,
	461, 462, 0, 0, 463, 0, 0, 0, 465, 466,
	467, 0, 0, 468, 469, 645, 1168, 470, 1169, 1148,
	471, 472, 464, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 0, 482, 483, 647, 484, 485, 486, 648,
	487, 488, 489, 1149, 490, 650, 491, 492, 0, 493,
	494, 0, 495, 496, 497, 498, 499, 500, 501, 1129,
	502, 504, 503, 505, 0, 506, 0, 507, 508, 509,
	0, 0, 0, 0, 510, 0, 512, 513, 514, 515,
	511, 516, 517, 518, 519, 0, 520, 521, 522, 1170,
	523, 524, 525, 526, 1059, 527, 0, 528, 529, 535,
	536, 530, 531, 537, 538, 539, 540, 541, 0, 543,
	544, 542, 545, 546, 547, 1112, 548, 549, 532, 533,
	550, 551, 1171, 552, 553, 554, 555, 556, 557, 1127,
	0, 558, 0, 559, 560, 561, 563, 534, 564, 569,
	570, 1174, 565, 566, 567, 568, 1150, 572, 573, 0,
	574, 575, 1047, 571, 562, 0, 576, 577, 578, 579,
	580, 581, 582, 354, 583, 0, 584, 1139, 1140, 1141,
	1142, 0, 593, 0, 585, 586, 587, 1151, 588, 1152,
	1069, 589, 590, 591, 592, 0, 594, 595, 0, 1053,
	596, 597, 598, 600, 601, 599, 602, 1113, 603, 0,
	0, 604, 605, 606, 662, 1136, 1173, 0, 608, 607,
	609, 665, 0, 0, 0, 0, 0, 610, 611, 666,
	612, 613, 614, 1050, 0, 0, 0, 0, 0, 0,
	0, 1046, 0, 0, 0, 0, 0, 0, 1044, 1045,
	0, 0, 0, 0, 0, 0, 0, 1075, 0, 0,
	2565, 1073, 2556, 2563, 1064, 1065, 1061, 1062, 1074, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 270,
	272, 271, 273, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 1115, 1079, 0, 0, 0,
	280, 281, 1155, 282, 283, 284, 285, 286, 287, 616,
	1128, 0, 288, 1135, 289, 1134, 0, 1145, 290, 291,
	292, 293, 294, 295, 1081, 1114, 1048, 296, 1175, 1176,
	623, 0, 297, 298, 1121, 0, 1102, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 1156, 321, 322, 323, 1105,
	1103, 1104, 1111, 1107, 1106, 1110, 324, 325, 326, 327,
	328, 1138, 2559, 1132, 1131, 1052, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	1123, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 1058, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 1146, 1147, 360, 1070, 267, 0, 0,
	0, 0, 0, 361, 362, 363, 1130, 0, 0, 0,
	364, 0, 365, 0, 0, 1157, 366, 367, 1143, 1144,
	368, 369, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 1153, 0, 1080, 378, 0, 379, 380, 381, 2560,
	383, 1116, 1117, 1120, 460, 1159, 384, 385, 0, 386,
	387, 388, 389, 0, 0, 0, 268, 390, 391, 392,
	394, 0, 1158, 393, 1125, 1126, 0, 1086, 0, 395,
	396, 1160, 1118, 1161, 397, 398, 399, 1162, 400, 0,
	0, 0, 401, 402, 403, 404, 405, 406, 0, 407,
	409, 408, 0, 410, 1154, 1163, 411, 412, 1164, 0,
	413, 0, 0, 0, 414, 415, 418, 1109, 1108, 416,
	417, 419, 420, 0, 421, 422, 424, 427, 423, 425,
	2561, 428, 2558, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 443, 0, 442, 1165, 444,
	445, 446, 451, 453, 454, 449, 450, 452, 455, 456,
	448, 1166, 447, 1049, 269, 1167, 457, 458, 1071, 1119,
	459, 1133, 461, 462, 0, 0, 463, 0, 0, 0,
	465, 466, 467, 0, 0, 468, 469, 645, 1168, 470,
	1169, 1148, 471, 472, 464, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 0, 482, 483, 647, 484, 485,
	486, 648, 487, 488, 489, 1149, 490, 650, 491, 492,
	0, 493, 494, 0, 495, 496, 497, 498, 499, 500,
	501, 1129, 502, 504, 503, 505, 0, 506, 0, 507,
	508, 509, 0, 0, 0, 0, 510, 0, 512, 513,
	514, 515, 511, 516, 517, 518, 519, 0, 520, 521,
	522, 1170, 523, 524, 525, 526, 1059, 527, 0, 528,
	529, 535, 536, 530, 531, 537, 538, 539, 540, 2562,
	0, 543, 544, 542, 545, 546, 547, 1112, 548, 549,
	532, 533, 550, 551, 1171, 552, 553, 554, 555, 556,
	557, 1127, 0, 558, 0, 559, 560, 561, 563, 534,
	564, 569, 570, 1174, 565, 566, 567, 568, 1150, 572,
	573, 0, 574, 575, 1047, 571, 562, 0, 576, 577,
	578, 579, 580, 581, 582, 354, 583, 0, 584, 1139,
	1140, 1141, 1142, 0, 593, 0, 585, 586, 587, 1151,
	588, 1152, 1069, 589, 590, 591, 592, 0, 594, 595,
	0, 1053, 596, 597, 598, 600, 601, 599, 602, 1113,
	603, 0, 0, 604, 605, 606, 662, 1136, 1173, 0,
	608, 607, 609, 665, 0, 0, 0, 0, 0, 610,
	611, 666, 612, 2557, 614, 1050, 0, 0, 0, 0,
	0, 0, 0, 1046, 0, 0, 0, 0, 0, 0,
	1044, 1045, 0, 0, 0, 0, 0, 0, 0, 1075,
	0, 0, 2553, 1073, 2556, 2563, 1064, 1065, 1061, 1062,
	1074, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 270, 272, 271, 273, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 1115, 1079, 0,
	0, 0, 280, 281, 1155, 282, 283, 284, 285, 286,
	287, 616, 1128, 0, 288, 1135, 289, 1134, 0, 1145,
	290, 291, 292, 293, 294, 295, 1081, 1114, 1048, 296,
	1175, 1176, 623, 0, 297, 298, 1121, 0, 1102, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 1156, 321, 322,
	323, 1105, 1103, 1104, 1111, 1107, 1106, 1110, 324, 325,
	326, 327, 328, 1138, 2559, 1132, 1131, 1052, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 1123, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 1058, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 1146, 1147, 360, 1070, 267,
	0, 0, 0, 0, 0, 361, 362, 363, 1130, 0,
	0, 0, 364, 0, 365, 0, 0, 1157, 366, 367,
	1143, 1144, 368, 369, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 1153, 0, 1080, 378, 0, 379, 380,
	381, 2560, 383, 1116, 1117, 1120, 460, 1159, 384, 385,
	0, 386, 387, 388, 389, 0, 0, 0, 268, 390,
	391, 392, 394, 0, 1158, 393, 1125, 1126, 0, 1086,
	0, 395, 396, 1160, 1118, 1161, 397, 398, 399, 1162,
	400, 0, 0, 0, 401, 402, 403, 404, 405, 406,
	0, 407, 409, 408, 0, 410, 1154, 1163, 411, 412,
	1164, 0, 413, 0, 0, 0, 414, 415, 418, 1109,
	1108, 416, 417, 419, 420, 0, 421, 422, 424, 427,
	423, 425, 2561, 428, 2558, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 443, 0, 442,
	1165, 444, 445, 446, 451, 453, 454, 449, 450, 452,
	455, 456, 448, 1166, 447, 1049, 269, 1167, 457, 458,
	1071, 1119, 459, 1133, 461, 462, 0, 0, 463, 0,
	0, 0, 465, 466, 467, 0, 0, 468, 469, 645,
	1168, 470, 1169, 1148, 471, 472, 464, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 0, 482, 483, 647,
	484, 485, 486, 648, 487, 488, 489, 1149, 490, 650,
	491, 492, 0, 493, 494, 0, 495, 496, 497, 498,
	499, 500, 501, 1129, 502, 504, 503, 505, 0, 506,
	0, 507, 508, 509, 0, 0, 0, 0, 510, 0,
	512, 513, 514, 515, 511, 516, 517, 518, 519, 0,
	520, 521, 522, 1170, 523, 524, 525, 526, 1059, 527,
	0, 528, 529, 535, 536, 530, 531, 537, 538, 539,
	540, 2562, 0, 543, 544, 542, 545, 546, 547, 1112,
	548, 549, 532, 533, 550, 551, 1171, 552, 553, 554,
	555, 556, 557, 1127, 0, 558, 0, 559, 560, 561,
	563, 534, 564, 569, 570, 1174, 565, 566, 567, 568,
	1150, 572, 573, 0, 574, 575, 1047, 571, 562, 0,
	576, 577, 578, 579, 580, 581, 582, 354, 583, 0,
	584, 1139, 1140, 1141, 1142, 0, 593, 0, 585, 586,
	587, 1151, 588, 1152, 1069, 589, 590, 591, 592, 0,
	594, 595, 0, 1053, 596, 597, 598, 600, 601, 599,
	602, 1113, 603, 0, 0, 604, 605, 606, 662, 1136,
	1173, 0, 608, 607, 609, 665, 0, 0, 0, 0,
	0, 610, 611, 666, 612, 2557, 614, 1050, 0, 0,
	0, 0, 0, 0, 0, 1046, 0, 0, 0, 0,
	0, 0, 1044, 1045, 1091, 1063, 1064, 1065, 1061, 1062,
	1074, 1075, 0, 0, 0, 1073, 0, 0, 0, 0,
	0, 270, 272, 271, 273, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 1115, 1079, 0,
	0, 0, 280, 281, 1155, 282, 283, 284, 285, 286,
	287, 616, 1128, 0, 288, 1135, 289, 1134, 0, 1145,
	290, 291, 292, 293, 294, 295, 1081, 1114, 1048, 296,
	1175, 1176, 623, 0, 297, 298, 1121, 0, 1102, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 1156, 321, 322,
	323, 1105, 1103, 1104, 1111, 1107, 1106, 1110, 324, 325,
	326, 327, 328, 1138, 329, 1132, 1131, 1052, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 1123, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 1058, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 1146, 1147, 360, 1070, 267,
	0, 0, 0, 0, 0, 361, 362, 363, 1130, 0,
	0, 0, 364, 0, 365, 0, 0, 1157, 366, 367,
	1143, 1144, 368, 369, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 1153, 0, 1080, 378, 0, 379, 380,
	381, 382, 383, 1116, 1117, 1120, 460, 1159, 384, 385,
	0, 386, 387, 388, 389, 0, 0, 0, 268, 390,
	391, 392, 394, 0, 1158, 393, 1125, 1126, 0, 1086,
	0, 395, 396, 1160, 1118, 1161, 397, 398, 399, 1162,
	400, 0, 0, 0, 401, 402, 403, 404, 405, 406,
	0, 407, 409, 408, 0, 410, 1154, 1163, 411, 412,
	1164, 0, 413, 0, 0, 0, 414, 415, 418, 1109,
	1108, 416, 417, 419, 420, 0, 421, 422, 424, 427,
	423, 425, 426, 428, 441, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 443, 0, 442,
	1165, 444, 445, 446, 451, 453, 454, 449, 450, 452,
	455, 456, 448, 1166, 447, 1049, 269, 1167, 457, 458,
	1071, 1119, 459, 1133, 461, 462, 0, 0, 463, 0,
	0, 0, 465, 466, 467, 0, 0, 468, 469, 645,
	1168, 470, 1169, 1148, 471, 472, 464, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 0, 482, 483, 647,
	484, 485, 486, 648, 487, 488, 489, 1149, 490, 650,
	491, 492, 0, 493, 494, 0, 495, 496, 497, 498,
	499, 500, 501, 1129, 502, 504, 503, 505, 0, 506,
	0, 507, 508, 509, 0, 0, 0, 0, 510, 0,
	512, 513, 514, 515, 511, 516, 517, 518, 519, 0,
	520, 521, 522, 1170, 523, 524, 525, 526, 1059, 527,
	0, 528, 529, 535, 536, 530, 531, 537, 538, 539,
	540, 541, 0, 543, 544, 542, 545, 546, 547, 1112,
	548, 549, 532, 533, 550, 551, 1171, 552, 553, 554,
	555, 556, 557, 1127, 0, 558, 0, 559, 560, 561,
	563, 534, 564, 569, 570, 1174, 565, 566, 567, 568,
	1150, 572, 573, 0, 574, 575, 1047, 571, 562, 0,
	576, 577, 578, 579, 580, 581, 582, 354, 583, 0,
	584, 1139, 1140, 1141, 1142, 0, 593, 0, 585, 586,
	587, 1151, 588, 1152, 1069, 589, 590, 591, 592, 0,
	594, 595, 0, 1053, 596, 597, 598, 600, 601, 599,
	602, 1113, 603, 0, 0, 604, 605, 606, 662, 1136,
	1173, 0, 608, 607, 609, 665, 0, 0, 0, 0,
	0, 610, 611, 666, 612, 613, 614, 1050, 0, 0,
	0, 0, 0, 0, 0, 1046, 0, 0, 0, 0,
	0, 0, 1044, 1045, 0, 0, 0, 0, 0, 1818,
	0, 1075, 0, 0, 0, 1073, 1091, 1063, 1064, 1065,
	1061, 1062, 1074, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 270, 272, 271, 273, 274, 275, 276,
	277, 2347, 278, 279, 0, 0, 0, 0, 0, 1115,
	1079, 0, 0, 0, 280, 281, 1155, 282, 283, 284,
	285, 286, 287, 616, 1128, 0, 288, 1135, 289, 1134,
	0, 1145, 290, 291, 292, 293, 294, 295, 1081, 1114,
	1048, 296, 1175, 1176, 623, 0, 297, 298, 1121, 0,
	1102, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 1156,
	321, 322, 323, 1105, 1103, 1104, 1111, 1107, 1106, 1110,
	324, 325, 326, 327, 328, 1138, 329, 1132, 1131, 1052,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 1123, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 1058, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 1146, 1147, 360,
	1070, 267, 0, 0, 0, 0, 0, 361, 362, 363,
	1130, 0, 0, 0, 364, 0, 365, 0, 0, 1157,
	366, 367, 1143, 1144, 368, 369, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 1153, 0, 1080, 378, 0,
	379, 380, 381, 382, 383, 1116, 1117, 1120, 460, 1159,
	384, 385, 0, 386, 387, 388, 389, 0, 0, 0,
	268, 390, 391, 392, 394, 0, 1158, 393, 1125, 1126,
	0, 1086, 0, 395, 396, 1160, 1118, 1161, 397, 398,
	399, 1162, 400, 0, 0, 0, 401, 402, 403, 404,
	405, 406, 0, 407, 409, 408, 0, 410, 1154, 1163,
	411, 412, 1164, 0, 413, 0, 0, 0, 414, 415,
	418, 1109, 1108, 416, 417, 419, 420, 0, 421, 422,
	424, 427, 423, 425, 426, 428, 441, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 443,
	0, 442, 1165, 444, 445, 446, 451, 453, 454, 449,
	450, 452, 455, 456, 448, 1166, 447, 1049, 269, 1167,
	457, 458, 1071, 1119, 459, 1133, 461, 462, 0, 0,
	463, 0, 0, 0, 465, 466, 467, 0, 0, 468,
	469, 645, 1168, 470, 1169, 1148, 471, 472, 464, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 0, 482,
	483, 647, 484, 485, 486, 648, 487, 488, 489, 1149,
	490, 650, 491, 492, 0, 493, 494, 0, 495, 496,
	497, 498, 499, 500, 501, 1129, 502, 504, 503, 505,
	0, 506, 0, 507, 508, 509, 0, 0, 0, 0,
	510, 0, 512, 513, 514, 515, 511, 516, 517, 518,
	519, 0, 520, 521, 522, 1170, 523, 524, 525, 526,
	1059, 527, 0, 528, 529, 535, 536, 530, 531, 537,
	538, 539, 540, 541, 0, 543, 544, 542, 545, 546,
	547, 1112, 548, 549, 532, 533, 550, 551, 1171, 552,
	553, 554, 555, 556, 557, 1127, 0, 558, 0, 559,
	560, 561, 563, 534, 564, 569, 570, 1174, 565, 566,
	567, 568, 1150, 572, 573, 0, 574, 575, 1047, 571,
	562, 0, 576, 577, 578, 579, 580, 581, 582, 354,
	583, 0, 584, 1139, 1140, 1141, 1142, 0, 593, 0,
	585, 586, 587, 1151, 588, 1152, 1069, 589, 590, 591,
	592, 0, 594, 595, 0, 1053, 596, 597, 598, 600,
	601, 599, 602, 1113, 603, 0, 0, 604, 605, 606,
	662, 1136, 1173, 0, 608, 607, 609, 665, 0, 0,
	0, 0, 0, 610, 611, 666, 612, 613, 614, 1050,
	0, 0, 0, 0, 0, 0, 0, 1046, 0, 0,
	0, 0, 0, 0, 1044, 1045, 0, 0, 0, 0,
	0, 0, 0, 1075, 0, 0, 1666, 1073, 1091, 1063,
	1064, 1065, 1061, 1062, 1074, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 270, 272, 271, 273, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 1115, 1079, 0, 0, 0, 280, 281, 1155, 282,
	283, 284, 285, 286, 287, 616, 1128, 0, 288, 1135,
	289, 1134, 0, 1145, 290, 291, 292, 293, 294, 295,
	1081, 1114, 1048, 296, 1175, 1176, 623, 0, 297, 298,
	1121, 0, 1102, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 1156, 321, 322, 323, 1105, 1103, 1104, 1111, 1107,
	1106, 1110, 324, 325, 326, 327, 328, 1138, 329, 1132,
	1131, 1052, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 1123, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 1058, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 1146,
	1147, 360, 1070, 267, 0, 0, 0, 0, 0, 361,
	362, 363, 1130, 0, 0, 0, 364, 0, 365, 0,
	0, 1157, 366, 367, 1143, 1144, 368, 369, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 1153, 0, 1080,
	378, 0, 379, 380, 381, 382, 383, 1116, 1117, 1120,
	460, 1159, 384, 385, 0, 386, 387, 388, 389, 0,
	0, 0, 268, 390, 391, 392, 394, 0, 1158, 393,
	1125, 1126, 0, 1086, 0, 395, 396, 1160, 1118, 1161,
	397, 398, 399, 1162, 400, 0, 0, 0, 401, 402,
	403, 404, 405, 406, 0, 407, 409, 408, 0, 410,
	1154, 1163, 411, 412, 1164, 0, 413, 0, 0, 0,
	414, 415, 418, 1109, 1108, 416, 417, 419, 420, 0,
	421, 422, 424, 427, 423, 425, 426, 428, 441, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 443, 0, 442, 1165, 444, 445, 446, 451, 453,
	454, 449, 450, 452, 455, 456, 448, 1166, 447, 1049,
	269, 1167, 457, 458, 1071, 1119, 459, 1133, 461, 462,
	0, 0, 463, 0, 0, 0, 465, 466, 467, 0,
	0, 468, 469, 645, 1168, 470, 1169, 1148, 471, 472,
	464, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	0, 482, 483, 647, 484, 485, 486, 648, 487, 488,
	489, 1149, 490, 650, 491, 492, 0, 493, 494, 0,
	495, 496, 497, 498, 499, 500, 501, 1129, 502, 504,
	503, 505, 0, 506, 0, 507, 508, 509, 0, 0,
	0, 0, 510, 0, 512, 513, 514, 515, 511, 516,
	517, 518, 519, 0, 520, 521, 522, 1170, 523, 524,
	525, 526, 1059, 527, 0, 528, 529, 535, 536, 530,
	531, 537, 538, 539, 540, 541, 0, 543, 544, 542,
	545, 546, 547, 1112, 548, 549, 532, 533, 550, 551,
	1171, 552, 553, 554, 555, 556, 557, 1127, 0, 558,
	0, 559, 560, 561, 563, 534, 564, 569, 570, 1174,
	565, 566, 567, 568, 1150, 572, 573, 0, 574, 575,
	1047, 571, 562, 0, 576, 577, 578, 579, 580, 581,
	582, 354, 583, 0, 584, 1139, 1140, 1141, 1142, 0,
	593, 0, 585, 586, 587, 1151, 588, 1152, 1069, 589,
	590, 591, 592, 0, 594, 595, 0, 1053, 596, 597,
	598, 600, 601, 599, 602, 1113, 603, 0, 0, 604,
	605, 606, 662, 1136, 1173, 0, 608, 607, 609, 665,
	0, 0, 0, 0, 0, 610, 611, 666, 612, 613,
	614, 1050, 0, 0, 0, 0, 0, 0, 0, 1046,
	0, 0, 0, 0, 0, 0, 1044, 1045, 0, 0,
	0, 0, 0, 0, 0, 1075, 0, 0, 1598, 1073,
	1091, 1063, 1064, 1065, 1061, 1062, 1074, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 270, 272, 271,
	273, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 1115, 1079, 0, 0, 0, 280, 281,
	1155, 282, 283, 284, 285, 286, 287, 616, 1128, 0,
	288, 1135, 289, 1134, 0, 1145, 290, 291, 292, 293,
	294, 295, 1081, 1114, 1048, 296, 1175, 1176, 623, 0,
	297, 298, 1121, 0, 1102, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 1156, 321, 322, 323, 1105, 1103, 1104,
	1111, 1107, 1106, 1110, 324, 325, 326, 327, 328, 1138,
	329, 1132, 1131, 1052, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 1123, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	1058, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 1146, 1147, 360, 1070, 267, 0, 0, 0, 0,
	0, 361, 362, 363, 1130, 0, 0, 0, 364, 0,
	365, 0, 0, 1157, 366, 367, 1143, 1144, 368, 369,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 1153,
	0, 1080, 378, 0, 379, 380, 381, 382, 383, 1116,
	1117, 1120, 460, 1159, 384, 385, 0, 386, 387, 388,
	389, 0, 0, 0, 268, 390, 391, 392, 394, 0,
	1158, 393, 1125, 1126, 0, 1086, 0, 395, 396, 1160,
	1118, 1161, 397, 398, 399, 1162, 400, 0, 0, 0,
	401, 402, 403, 404, 405, 406, 0, 407, 409, 408,
	0, 410, 1154, 1163, 411, 412, 1164, 0, 413, 0,
	0, 0, 414, 415, 418, 1109, 1108, 416, 417, 419,
	420, 0, 421, 422, 424, 427, 423, 425, 426, 428,
	441, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 443, 0, 442, 1165, 444, 445, 446,
	451, 453, 454, 449, 450, 452, 455, 456, 448, 1166,
	447, 1049, 269, 1167, 457, 458, 1071, 1119, 459, 1133,
	461, 462, 0, 0, 463, 0, 0, 0, 465, 466,
	467, 0, 0, 468, 469, 645, 1168, 470, 1169, 1148,
	471, 472, 464, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 0, 482, 483, 647, 484, 485, 486, 648,
	487, 488, 489, 1149, 490, 650, 491, 492, 0, 493,
	494, 0, 495, 496, 497, 498, 499, 500, 501, 1129,
	502, 504, 503, 505, 0, 506, 0, 507, 508, 509,
	0, 0, 0, 0, 510, 0, 512, 513, 514, 515,
	511, 516, 517, 518, 519, 0, 520, 521, 522, 1170,
	523, 524, 525, 526, 1059, 527, 0, 528, 529, 535,
	536, 530, 531, 537, 538, 539, 540, 541, 0, 543,
	544, 542, 545, 546, 547, 1112, 548, 549, 532, 533,
	550, 551, 1171, 552, 553, 554, 555, 556, 557, 1127,
	0, 558, 0, 559, 560, 561, 563, 534, 564, 569,
	570, 1174, 565, 566, 567, 568, 1150, 572, 573, 0,
	574, 575, 1047, 571, 562, 0, 576, 577, 578, 579,
	580, 581, 582, 354, 583, 0, 584, 1139, 1140, 1141,
	1142, 0, 593, 0, 585, 586, 587, 1151, 588, 1152,
	1069, 589, 590, 591, 592, 0, 594, 595, 0, 1053,
	596, 597, 598, 600, 601, 599, 602, 1113, 603, 0,
	0, 604, 605, 606, 662, 1136, 1173, 0, 608, 607,
	609, 665, 0, 0, 0, 0, 0, 610, 611, 666,
	612, 613, 614, 1050, 0, 0, 0, 0, 0, 0,
	0, 1046, 0, 0, 0, 0, 0, 0, 1044, 1045,
	0, 0, 0, 0, 0, 0, 0, 1075, 0, 0,
	1593, 1073, 1091, 1063, 1064, 1065, 1061, 1062, 1074, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 270,
	272, 271, 273, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 1115, 1079, 0, 0, 0,
	280, 281, 1155, 282, 283, 284, 285, 286, 287, 616,
	1128, 0, 288, 1135, 289, 1134, 0, 1145, 290, 291,
	292, 293, 294, 295, 1081, 1114, 1048, 296, 1175, 1176,
	623, 0, 297, 298, 1121, 0, 1102, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 1156, 321, 322, 323, 1105,
	1103, 1104, 1111, 1107, 1106, 1110, 324, 325, 326, 327,
	328, 1138, 329, 1132, 1131, 1052, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	1123, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 1058, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 1146, 1147, 360, 1070, 267, 0, 0,
	0, 0, 0, 361, 362, 363, 1130, 0, 0, 0,
	364, 0, 365, 0, 0, 1157, 366, 367, 1143, 1144,
	368, 369, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 1153, 0, 1080, 378, 0, 379, 380, 381, 382,
	383, 1116, 1117, 1120, 460, 1159, 384, 385, 0, 386,
	387, 388, 389, 0, 0, 0, 268, 390, 391, 392,
	394, 0, 1158, 393, 1125, 1126, 0, 1086, 0, 395,
	396, 1160, 1118, 1161, 397, 398, 399, 1162, 400, 0,
	0, 0, 401, 402, 403, 404, 405, 406, 0, 407,
	409, 408, 0, 410, 1154, 1163, 411, 412, 1164, 0,
	413, 0, 0, 0, 414, 415, 418, 1109, 1108, 416,
	417, 419, 420, 0, 421, 422, 424, 427, 423, 425,
	426, 428, 441, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 443, 0, 442, 1165, 444,
	445, 446, 451, 453, 454, 449, 450, 452, 455, 456,
	448, 1166, 447, 1049, 269, 1167, 457, 458, 1071, 1119,
	459, 1133, 461, 462, 0, 0, 463, 0, 0, 0,
	465, 466, 467, 0, 0, 468, 469, 645, 1168, 470,
	1169, 1148, 471, 472, 464, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 0, 482, 483, 647, 484, 485,
	486, 648, 487, 488, 489, 1149, 490, 650, 491, 492,
	0, 493, 494, 0, 495, 496, 497, 498, 499, 500,
	501, 1129, 502, 504, 503, 505, 0, 506, 0, 507,
	508, 509, 0, 0, 0, 0, 510, 0, 512, 513,
	514, 515, 511, 516, 517, 518, 519, 0, 520, 521,
	522, 1170, 523, 524, 525, 526, 1059, 527, 0, 528,
	529, 535, 536, 530, 531, 537, 538, 539, 540, 541,
	0, 543, 544, 542, 545, 546, 547, 1112, 548, 549,
	532, 533, 550, 551, 1171, 552, 553, 554, 555, 556,
	557, 1127, 0, 558, 0, 559, 560, 561, 563, 534,
	564, 569, 570, 1174, 565, 566, 567, 568, 1150, 572,
	573, 0, 574, 575, 1047, 571, 562, 0, 576, 577,
	578, 579, 580, 581, 582, 354, 583, 0, 584, 1139,
	1140, 1141, 1142, 0, 593, 0, 585, 586, 587, 1151,
	588, 1152, 1069, 589, 590, 591, 592, 0, 594, 595,
	0, 1053, 596, 597, 598, 600, 601, 599, 602, 1113,
	603, 0, 0, 604, 605, 606, 662, 1136, 1173, 0,
	608, 607, 609, 665, 0, 0, 0, 0, 0, 610,
	611, 666, 612, 613, 614, 1050, 0, 0, 0, 0,
	0, 0, 0, 1046, 0, 0, 0, 0, 0, 0,
	1044, 1045, 0, 0, 0, 0, 0, 0, 0, 1075,
	0, 0, 1584, 1073, 1091, 1063, 1064, 1065, 1061, 1062,
	1074, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 270, 272, 271, 273, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 1115, 1079, 0,
	0, 0, 280, 281, 1155, 282, 283, 284, 285, 286,
	287, 616, 1128, 0, 288, 1135, 289, 1134, 0, 1145,
	290, 291, 292, 293, 294, 295, 1081, 1114, 1048, 296,
	1175, 1176, 623, 0, 297, 298, 1121, 0, 1102, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 1156, 321, 322,
	323, 1105, 1103, 1104, 1111, 1107, 1106, 1110, 324, 325,
	326, 327, 328, 1138, 329, 1132, 1131, 1052, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 1123, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 1058, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 1146, 1147, 360, 1070, 267,
	0, 0, 0, 0, 0, 361, 362, 363, 1130, 0,
	0, 0, 364, 0, 365, 0, 0, 1157, 366, 367,
	1143, 1144, 368, 369, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 1153, 0, 1080, 378, 0, 379, 380,
	381, 382, 383, 1116, 1117, 1120, 460, 1159, 384, 385,
	0, 386, 387, 388, 389, 0, 0, 0, 268, 390,
	391, 392, 394, 0, 1158, 393, 1125, 1126, 0, 1086,
	0, 395, 396, 1160, 1118, 1161, 397, 398, 399, 1162,
	400, 0, 0, 0, 401, 402, 403, 404, 405, 406,
	0, 407, 409, 408, 0, 410, 1154, 1163, 411, 412,
	1164, 0, 413, 0, 0, 0, 414, 415, 418, 1109,
	1108, 416, 417, 419, 420, 0, 421, 422, 424, 427,
	423, 425, 426, 428, 441, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 443, 0, 442,
	1165, 444, 445, 446, 451, 453, 454, 449, 450, 452,
	455, 456, 448, 1166, 447, 1049, 269, 1167, 457, 458,
	1071, 1119, 459, 1133, 461, 462, 0, 0, 463, 0,
	0, 0, 465, 466, 467, 0, 0, 468, 469, 645,
	1168, 470, 1169, 1148, 471, 472, 464, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 0, 482, 483, 647,
	484, 485, 486, 648, 487, 488, 489, 1149, 490, 650,
	491, 492, 0, 493, 494, 0, 495, 496, 497, 498,
	499, 500, 501, 1129, 502, 504, 503, 505, 0, 506,
	0, 507, 508, 509, 0, 0, 0, 0, 510, 0,
	512, 513, 514, 515, 511, 516, 517, 518, 519, 0,
	520, 521, 522, 1170, 523, 524, 525, 526, 1059, 527,
	0, 528, 529, 535, 536, 530, 531, 537, 538, 539,
	540, 541, 0, 543, 544, 542, 545, 546, 547, 1112,
	548, 549, 532, 533, 550, 551, 1171, 552, 553, 554,
	555, 556, 557, 1127, 0, 558, 0, 559, 560, 561,
	563, 534, 564, 569, 570, 1174, 565, 566, 567, 568,
	1150, 572, 573, 0, 574, 575, 1047, 571, 562, 0,
	576, 577, 578, 579, 580, 581, 582, 354, 583, 0,
	584, 1139, 1140, 1141, 1142, 0, 593, 0, 585, 586,
	587, 1151, 588, 1152, 1069, 589, 590, 591, 592, 0,
	594, 595, 0, 1053, 596, 597, 598, 600, 601, 599,
	602, 1113, 603, 0, 0, 604, 605, 606, 662, 1136,
	1173, 0, 608, 607, 609, 665, 0, 0, 0, 0,
	0, 610, 611, 666, 612, 613, 614, 1050, 0, 0,
	0, 0, 0, 0, 0, 1046, 0, 0, 0, 0,
	0, 0, 1044, 1045, 0, 0, 0, 0, 0, 0,
	0, 1075, 0, 0, 1579, 1073, 1091, 1063, 1064, 1065,
	1061, 1062, 1074, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 270, 272, 271, 273, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 1115,
	1079, 0, 0, 0, 280, 281, 1155, 282, 283, 284,
	285, 286, 287, 616, 1128, 0, 288, 1135, 289, 1134,
	0, 1145, 290, 291, 292, 293, 294, 295, 1081, 1114,
	1048, 296, 1175, 1176, 623, 0, 297, 298, 1121, 0,
	1102, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 1156,
	321, 322, 323, 1105, 1103, 1104, 1111, 1107, 1106, 1110,
	324, 325, 326, 327, 328, 1138, 329, 1132, 1131, 1052,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 1123, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 1058, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 1146, 1147, 360,
	1070, 267, 0, 0, 0, 0, 0, 361, 362, 363,
	1130, 0, 0, 0, 364, 0, 365, 0, 0, 1157,
	366, 367, 1143, 1144, 368, 369, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 1153, 0, 1080, 378, 0,
	379, 380, 381, 382, 383, 1116, 1117, 1120, 460, 1159,
	384, 385, 0, 386, 387, 388, 389, 0, 0, 0,
	268, 390, 391, 392, 394, 0, 1158, 393, 1125, 1126,
	0, 1086, 0, 395, 396, 1160, 1118, 1161, 397, 398,
	399, 1162, 400, 0, 0, 0, 401, 402, 403, 404,
	405, 406, 0, 407, 409, 408, 0, 410, 1154, 1163,
	411, 412, 1164, 0, 413, 0, 0, 0, 414, 415,
	418, 1109, 1108, 416, 417, 419, 420, 0, 421, 422,
	424, 427, 423, 425, 426, 428, 441, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 443,
	0, 442, 1165, 444, 445, 446, 451, 453, 454, 449,
	450, 452, 455, 456, 448, 1166, 447, 1049, 269, 1167,
	457, 458, 1071, 1119, 459, 1133, 461, 462, 0, 0,
	463, 0, 0, 0, 465, 466, 467, 0, 0, 468,
	469, 645, 1168, 470, 1169, 1148, 471, 472, 464, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 0, 482,
	483, 647, 484, 485, 486, 648, 487, 488, 489, 1149,
	490, 650, 491, 492, 0, 493, 494, 0, 495, 496,
	497, 498, 499, 500, 501, 1129, 502, 504, 503, 505,
	0, 506, 0, 507, 508, 509, 0, 0, 0, 0,
	510, 0, 512, 513, 514, 515, 511, 516, 517, 518,
	519, 0, 520, 521, 522, 1170, 523, 524, 525, 526,
	1059, 527, 0, 528, 529, 535, 536, 530, 531, 537,
	538, 539, 540, 541, 0, 543, 544, 542, 545, 546,
	547, 1112, 548, 549, 532, 533, 550, 551, 1171, 552,
	553, 554, 555, 556, 557, 1127, 0, 558, 0, 559,
	560, 561, 563, 534, 564, 569, 570, 1174, 565, 566,
	567, 568, 1150, 572, 573, 0, 574, 575, 1047, 571,
	562, 0, 576, 577, 578, 579, 580, 581, 582, 354,
	583, 0, 584, 1139, 1140, 1141, 1142, 0, 593, 0,
	585, 586, 587, 1151, 588, 1152, 1069, 589, 590, 591,
	592, 0, 594, 595, 0, 1053, 596, 597, 598, 600,
	601, 599, 602, 1113, 603, 0, 0, 604, 605, 606,
	662, 1136, 1173, 0, 608, 607, 609, 665, 0, 0,
	0, 0, 0, 610, 611, 666, 612, 613, 614, 1050,
	0, 0, 0, 0, 0, 0, 0, 1046, 0, 0,
	0, 0, 0, 0, 1044, 1045, 0, 0, 0, 0,
	0, 0, 0, 1075, 0, 0, 1491, 1073, 1091, 1063,
	1064, 1065, 1061, 1062, 1074, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 270, 272, 271, 273, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 1115, 1079, 0, 0, 0, 280, 281, 1155, 282,
	283, 284, 285, 286, 287, 616, 1128, 0, 288, 1135,
	289, 1134, 0, 1145, 290, 291, 292, 293, 294, 295,
	1081, 1114, 1048, 296, 1175, 1176, 623, 0, 297, 298,
	1121, 0, 1102, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 1156, 321, 322, 323, 1105, 1103, 1104, 1111, 1107,
	1106, 1110, 324, 325, 326, 327, 328, 1138, 329, 1132,
	1131, 1052, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 1123, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 1058, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 1146,
	1147, 360, 1070, 267, 0, 0, 0, 0, 0, 361,
	362, 363, 1130, 0, 0, 0, 364, 0, 365, 0,
	0, 1157, 366, 367, 1143, 1144, 368, 369, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 1153, 0, 1080,
	378, 0, 379, 380, 381, 382, 383, 1490, 1117, 1120,
	460, 1159, 384, 385, 0, 386, 387, 388, 389, 0,
	0, 0, 268, 390, 391, 392, 394, 0, 1158, 393,
	1125, 1126, 0, 1086, 0, 395, 396, 1160, 1118, 1161,
	397, 398, 399, 1162, 400, 0, 0, 0, 401, 402,
	403, 404, 405, 406, 0, 407, 409, 408, 0, 410,
	1154, 1163, 411, 412, 1164, 0, 413, 0, 0, 0,
	414, 415, 418, 1109, 1108, 416, 417, 419, 420, 0,
	421, 422, 424, 427, 423, 425, 426, 428, 441, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 443, 0, 442, 1165, 444, 445, 446, 451, 453,
	454, 449, 450, 452, 455, 456, 448, 1166, 447, 1049,
	269, 1167, 457, 458, 1071, 1119, 459, 1133, 461, 462,
	0, 0, 463, 0, 0, 0, 465, 466, 467, 0,
	0, 468, 469, 645, 1168, 470, 1169, 1148, 471, 472,
	464, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	0, 482, 483, 647, 484, 485, 486, 648, 487, 488,
	489, 1149, 490, 650, 491, 492, 0, 493, 494, 0,
	495, 496, 497, 498, 499, 500, 501, 1129, 502, 504,
	503, 505, 0, 506, 0, 507, 508, 509, 0, 0,
	0, 0, 510, 0, 512, 513, 514, 515, 511, 516,
	517, 518, 519, 0, 520, 521, 522, 1170, 523, 524,
	525, 526, 1059, 527, 0, 528, 529, 535, 536, 530,
	531, 537, 538, 539, 540, 541, 0, 543, 544, 542,
	545, 546, 547, 1112, 548, 549, 532, 533, 550, 551,
	1171, 552, 553, 554, 555, 556, 557, 1127, 0, 558,
	0, 559, 560, 561, 563, 534, 564, 569, 570, 1174,
	565, 566, 567, 568, 1150, 572, 573, 0, 574, 575,
	1047, 571, 562, 0, 576, 577, 578, 579, 580, 581,
	582, 354, 583, 0, 584, 1139, 1140, 1141, 1142, 0,
	593, 0, 585, 586, 587, 1151, 588, 1152, 1069, 589,
	590, 591, 592, 0, 594, 595, 0, 1053, 596, 597,
	598, 600, 601, 599, 602, 1113, 603, 0, 0, 604,
	605, 606, 662, 1136, 1173, 0, 608, 607, 609, 665,
	0, 0, 0, 0, 0, 610, 611, 666, 612, 613,
	614, 1050, 0, 0, 0, 0, 0, 0, 0, 1046,
	0, 0, 0, 0, 0, 0, 1044, 1045, 0, 0,
	0, 0, 0, 0, 0, 1075, 0, 0, 1485, 1073,
	1091, 1063, 1064, 1065, 1061, 1062, 1074, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 270, 272, 271,
	273, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 1115, 1079, 0, 0, 0, 280, 281,
	1155, 282, 283, 284, 285, 286, 287, 616, 1128, 0,
	288, 1135, 289, 1134, 0, 1145, 290, 291, 292, 293,
	294, 295, 1081, 1114, 1048, 296, 1175, 1176, 623, 0,
	297, 298, 1121, 0, 1102, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 1156, 321, 322, 323, 1105, 1103, 1104,
	1111, 1107, 1106, 1110, 324, 325, 326, 327, 328, 1138,
	329, 1132, 1131, 1052, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 1123, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	1058, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 1146, 1147, 360, 1070, 267, 0, 0, 0, 0,
	0, 361, 362, 363, 1130, 0, 0, 0, 364, 0,
	365, 0, 0, 1157, 366, 367, 1143, 1144, 368, 369,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 1153,
	0, 1080, 378, 0, 379, 380, 381, 382, 383, 1484,
	1117, 1120, 460, 1159, 384, 385, 0, 386, 387, 388,
	389, 0, 0, 0, 268, 390, 391, 392, 394, 0,
	1158, 393, 1125, 1126, 0, 1086, 0, 395, 396, 1160,
	1118, 1161, 397, 398, 399, 1162, 400, 0, 0, 0,
	401, 402, 403, 404, 405, 406, 0, 407, 409, 408,
	0, 410, 1154, 1163, 411, 412, 1164, 0, 413, 0,
	0, 0, 414, 415, 418, 1109, 1108, 416, 417, 419,
	420, 0, 421, 422, 424, 427, 423, 425, 426, 428,
	441, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 443, 0, 442, 1165, 444, 445, 446,
	451, 453, 454, 449, 450, 452, 455, 456, 448, 1166,
	447, 1049, 269, 1167, 457, 458, 1071, 1119, 459, 1133,
	461, 462, 0, 0, 463, 0, 0, 0, 465, 466,
	467, 0, 0, 468, 469, 645, 1168, 470, 1169, 1148,
	471, 472, 464, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 0, 482, 483, 647, 484, 485, 486, 648,
	487, 488, 489, 1149, 490, 650, 491, 492, 0, 493,
	494, 0, 495, 496, 497, 498, 499, 500, 501, 1129,
	502, 504, 503, 505, 0, 506, 0, 507, 508, 509,
	0, 0, 0, 0, 510, 0, 512, 513, 514, 515,
	511, 516, 517, 518, 519, 0, 520, 521, 522, 1170,
	523, 524, 525, 526, 1059, 527, 0, 528, 529, 535,
	536, 530, 531, 537, 538, 539, 540, 541, 0, 543,
	544, 542, 545, 546, 547, 1112, 548, 549, 532, 533,
	550, 551, 1171, 552, 553, 554, 555, 556, 557, 1127,
	0, 558, 0, 559, 560, 561, 563, 534, 564, 569,
	570, 1174, 565, 566, 567, 568, 1150, 572, 573, 0,
	574, 575, 1047, 571, 562, 0, 576, 577, 578, 579,
	580, 581, 582, 354, 583, 0, 584, 1139, 1140, 1141,
	1142, 0, 593, 0, 585, 586, 587, 1151, 588, 1152,
	1069, 589, 590, 591, 592, 0, 594, 595, 0, 1053,
	596, 597, 598, 600, 601, 599, 602, 1113, 603, 0,
	0, 604, 605, 606, 662, 1136, 1173, 0, 608, 607,
	609, 665, 0, 0, 0, 0, 0, 610, 611, 666,
	612, 613, 614, 1050, 0, 0, 0, 0, 0, 0,
	0, 1046, 0, 0, 0, 0, 0, 0, 1044, 1045,
	0, 0, 0, 0, 0, 0, 0, 1075, 0, 0,
	1478, 1073, 1091, 1063, 1064, 1065, 1061, 1062, 1074, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 270,
	272, 271, 273, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 1115, 1079, 0, 0, 0,
	280, 281, 1155, 282, 283, 284, 285, 286, 287, 616,
	1128, 0, 288, 1135, 289, 1134, 0, 1145, 290, 291,
	292, 293, 294, 295, 1081, 1114, 1048, 296, 1175, 1176,
	623, 0, 297, 298, 1121, 0, 1102, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 1156, 321, 322, 323, 1105,
	1103, 1104, 1111, 1107, 1106, 1110, 324, 325, 326, 327,
	328, 1138, 329, 1132, 1131, 1052, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	1123, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 1058, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 1146, 1147, 360, 1070, 267, 0, 0,
	0, 0, 0, 361, 362, 363, 1130, 0, 0, 0,
	364, 0, 365, 0, 0, 1157, 366, 367, 1143, 1144,
	368, 369, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 1153, 0, 1080, 378, 0, 379, 380, 381, 382,
	383, 1116, 1117, 1120, 460, 1159, 384, 385, 0, 386,
	387, 388, 389, 0, 0, 0, 268, 390, 391, 392,
	394, 0, 1158, 393, 1125, 1126, 0, 1086, 0, 395,
	396, 1160, 1118, 1161, 397, 398, 399, 1162, 400, 0,
	0, 0, 401, 402, 403, 404, 405, 406, 0, 407,
	409, 408, 0, 410, 1154, 1163, 411, 412, 1164, 0,
	413, 0, 0, 0, 414, 415, 418, 1109, 1108, 416,
	417, 419, 420, 0, 421, 422, 424, 427, 423, 425,
	426, 428, 441, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 443, 0, 442, 1165, 444,
	445, 446, 451, 453, 454, 449, 450, 452, 455, 456,
	448, 1166, 447, 1049, 269, 1167, 457, 458, 1071, 1119,
	459, 1133, 461, 462, 0, 0, 463, 0, 0, 0,
	465, 466, 467, 0, 0, 468, 469, 645, 1168, 470,
	1169, 1148, 471, 472, 464, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 0, 482, 483, 647, 484, 485,
	486, 648, 487, 488, 489, 1149, 490, 650, 491, 492,
	0, 493, 494, 0, 495, 496, 497, 498, 499, 500,
	501, 1129, 502, 504, 503, 505, 0, 506, 0, 507,
	508, 509, 0, 0, 0, 0, 510, 0, 512, 513,
	514, 515, 511, 516, 517, 518, 519, 0, 520, 521,
	522, 1170, 523, 524, 525, 526, 1059, 527, 0, 528,
	529, 535, 536, 530, 531, 537, 538, 539, 540, 541,
	0, 543, 544, 542, 545, 546, 547, 1112, 548, 549,
	532, 533, 550, 551, 1171, 552, 553, 554, 555, 556,
	557, 1127, 0, 558, 0, 559, 560, 561, 563, 534,
	564, 569, 570, 1174, 565, 566, 567, 568, 1150, 572,
	573, 0, 574, 575, 1047, 571, 562, 0, 576, 577,
	578, 579, 580, 581, 582, 354, 583, 0, 584, 1139,
	1140, 1141, 1142, 0, 593, 0, 585, 586, 587, 1151,
	588, 1152, 1069, 589, 590, 591, 592, 0, 594, 595,
	0, 1053, 596, 597, 598, 600, 601, 599, 602, 1113,
	603, 0, 0, 604, 605, 606, 662, 1136, 1173, 0,
	608, 607, 609, 665, 0, 0, 0, 0, 0, 610,
	611, 666, 612, 613, 614, 1050, 0, 0, 0, 0,
	0, 0, 0, 1046, 0, 0, 0, 0, 0, 0,
	1044, 1045, 0, 0, 0, 0, 0, 0, 0, 1075,
	0, 0, 1301, 1073, 1091, 1063, 1064, 1065, 1061, 1062,
	1074, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 270, 272, 271, 273, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 1115, 1079, 0,
	0, 0, 280, 281, 1155, 282, 283, 284, 285, 286,
	287, 616, 1128, 0, 288, 1135, 289, 1134, 0, 1145,
	290, 291, 292, 293, 294, 295, 1081, 1114, 1048, 296,
	1175, 1176, 623, 0, 297, 298, 1121, 0, 1102, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 1156, 321, 322,
	323, 1105, 1103, 1104, 1111, 1107, 1106, 1110, 324, 325,
	326, 327, 328, 1138, 329, 1132, 1131, 1052, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 1123, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 1058, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 1146, 1147, 360, 1070, 267,
	0, 0, 0, 0, 0, 361, 362, 363, 1130, 0,
	0, 0, 364, 0, 365, 0, 0, 1157, 366, 367,
	1143, 1144, 368, 369, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 1153, 0, 1080, 378, 0, 379, 380,
	381, 382, 383, 1116, 1117, 1120, 460, 1159, 384, 385,
	0, 386, 387, 388, 389, 0, 0, 0, 268, 390,
	391, 392, 394, 0, 1158, 393, 1125, 1126, 0, 1086,
	0, 395, 396, 1160, 1118, 1161, 397, 398, 399, 1162,
	400, 0, 0, 0, 401, 402, 403, 404, 405, 406,
	0, 407, 409, 408, 0, 410, 1154, 1163, 411, 412,
	1164, 0, 413, 0, 0, 0, 414, 415, 418, 1109,
	1108, 416, 417, 419, 420, 0, 421, 422, 424, 427,
	423, 425, 426, 428, 441, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 443, 0, 442,
	1165, 444, 445, 446, 451, 453, 454, 449, 450, 452,
	455, 456, 448, 1166, 447, 1049, 269, 1167, 457, 458,
	1071, 1119, 459, 1133, 461, 462, 0, 0, 463, 0,
	0, 0, 465, 466, 467, 0, 0, 468, 469, 645,
	1168, 470, 1169, 1148, 471, 472, 464, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 0, 482, 483, 647,
	484, 485, 486, 648, 487, 488, 489, 1149, 490, 650,
	491, 492, 0, 493, 494, 0, 495, 496, 497, 498,
	499, 500, 501, 1129, 502, 504, 503, 505, 0, 506,
	0, 507, 508, 509, 0, 0, 0, 0, 510, 0,
	512, 513, 514, 515, 511, 516, 517, 518, 519, 0,
	520, 521, 522, 1170, 523, 524, 525, 526, 1059, 527,
	0, 528, 529, 535, 536, 530, 531, 537, 538, 539,
	540, 541, 0, 543, 544, 542, 545, 546, 547, 1112,
	548, 549, 532, 533, 550, 551, 1171, 552, 553, 554,
	555, 556, 557, 1127, 0, 558, 0, 559, 560, 561,
	563, 534, 564, 569, 570, 1174, 565, 566, 567, 568,
	1150, 572, 573, 0, 574, 575, 1047, 571, 562, 0,
	576, 577, 578, 579, 580, 581, 582, 354, 583, 0,
	584, 1139, 1140, 1141, 1142, 0, 593, 0, 585, 586,
	587, 1151, 588, 1152, 1069, 589, 590, 591, 592, 0,
	594, 595, 0, 1053, 596, 597, 598, 600, 601, 599,
	602, 1113, 603, 0, 0, 604, 605, 606, 662, 1136,
	1173, 0, 608, 607, 609, 665, 0, 0, 0, 0,
	0, 610, 611, 666, 612, 613, 614, 1050, 0, 0,
	0, 0, 0, 0, 0, 1046, 0, 0, 0, 0,
	0, 0, 1044, 1045, 1091, 1063, 1064, 1065, 1061, 1062,
	1074, 1075, 0, 0, 0, 1073, 0, 0, 0, 0,
	0, 270, 272, 271, 273, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 1115, 1079, 0,
	0, 0, 280, 281, 1155, 282, 283, 284, 285, 286,
	287, 616, 1128, 0, 288, 1135, 289, 1134, 0, 1145,
	290, 291, 292, 293, 294, 295, 1081, 1114, 1048, 296,
	1175, 1176, 623, 0, 297, 298, 1121, 0, 1102, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 1156, 321, 322,
	323, 1105, 1103, 1104, 1111, 1107, 1106, 1110, 324, 325,
	326, 327, 328, 1138, 329, 1132, 1131, 1052, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 1123, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 1058, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 1146, 1147, 360, 1070, 267,
	0, 0, 0, 0, 0, 361, 362, 363, 1130, 0,
	0, 0, 364, 0, 365, 0, 0, 1157, 366, 367,
	1143, 1144, 368, 369, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 1153, 0, 1080, 378, 0, 379, 380,
	381, 382, 383, 1116, 1117, 1120, 460, 1159, 384, 385,
	0, 386, 387, 388, 389, 0, 0, 0, 268, 390,
	391, 392, 394, 0, 1158, 393, 1125, 1126, 0, 1086,
	0, 395, 396, 1160, 1118, 1161, 397, 398, 399, 1162,
	400, 0, 0, 0, 401, 402, 403, 404, 405, 406,
	0, 407, 409, 408, 0, 410, 1154, 1163, 411, 412,
	1164, 0, 413, 0, 0, 0, 414, 415, 418, 1109,
	1108, 416, 417, 419, 420, 0, 421, 422, 424, 427,
	423, 425, 426, 428, 441, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 443, 0, 442,
	1165, 444, 445, 446, 451, 453, 454, 449, 450, 452,
	455, 456, 448, 1166, 447, 1049, 269, 1167, 457, 458,
	1071, 1119, 459, 1133, 461, 462, 0, 0, 463, 0,
	0, 0, 465, 466, 467, 0, 0, 468, 469, 645,
	1168, 470, 1169, 1148, 471, 472, 464, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 0, 482, 483, 647,
	484, 485, 486, 648, 487, 488, 489, 1149, 490, 650,
	491, 492, 0, 493, 494, 0, 495, 496, 497, 498,
	499, 500, 501, 1129, 502, 504, 503, 505, 0, 506,
	0, 507, 508, 509, 0, 0, 0, 0, 510, 0,
	512, 513, 514, 515, 511, 516, 517, 518, 519, 0,
	520, 521, 522, 1170, 523, 524, 525, 526, 1059, 527,
	0, 528, 529, 535, 536, 530, 531, 537, 538, 539,
	540, 541, 0, 543, 544, 542, 545, 546, 547, 1112,
	548, 549, 532, 533, 550, 551, 1171, 552, 553, 554,
	555, 556, 557, 1127, 0, 558, 0, 559, 560, 561,
	563, 534, 564, 569, 570, 1174, 565, 566, 567, 568,
	1150, 572, 573, 0, 574, 575, 1047, 571, 562, 0,
	576, 577, 578, 579, 580, 581, 582, 354, 583, 0,
	584, 1139, 1140, 1141, 1142, 0, 593, 0, 585, 586,
	587, 1151, 588, 1152, 1069, 589, 590, 591, 592, 0,
	594, 595, 0, 1053, 596, 597, 598, 600, 601, 599,
	602, 1113, 603, 0, 0, 604, 605, 606, 662, 1136,
	1173, 0, 608, 607, 609, 665, 0, 0, 0, 0,
	0, 610, 611, 666, 612, 613, 614, 1050, 0, 0,
	0, 0, 0, 0, 0, 1046, 0, 0, 0, 0,
	0, 0, 1044, 1045, 1091, 1063, 1064, 1065, 1061, 1062,
	1074, 1075, 0, 0, 0, 1073, 0, 0, 0, 0,
	0, 270, 272, 271, 273, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 1115, 1079, 0,
	0, 0, 280, 281, 1155, 282, 283, 284, 285, 286,
	287, 616, 1128, 0, 288, 1135, 289, 1134, 0, 1145,
	290, 291, 292, 293, 294, 295, 1081, 1114, 1048, 296,
	1175, 1176, 623, 0, 297, 298, 1121, 0, 1102, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 1156, 321, 322,
	4510, 1105, 1103, 1104, 1111, 1107, 1106, 1110, 324, 325,
	326, 327, 328, 1138, 329, 1132, 1131, 1052, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 1123, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 1058, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 1146, 1147, 360, 1070, 267,
	0, 0, 0, 0, 0, 361, 362, 363, 1130, 0,
	0, 0, 364, 0, 365, 0, 0, 1157, 366, 367,
	1143, 1144, 368, 369, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 1153, 0, 1080, 378, 0, 379, 380,
	381, 382, 383, 1116, 1117, 1120, 460, 1159, 384, 385,
	0, 386, 387, 388, 389, 0, 0, 0, 268, 390,
	391, 392, 394, 0, 1158, 393, 1125, 1126, 0, 1086,
	0, 395, 396, 1160, 1118, 1161, 397, 398, 399, 1162,
	400, 0, 0, 0, 401, 402, 403, 404, 405, 406,
	0, 407, 409, 408, 0, 410, 1154, 1163, 411, 412,
	1164, 0, 413, 0, 0, 0, 414, 415, 418, 1109,
	1108, 416, 417, 419, 420, 0, 421, 422, 424, 427,
	423, 425, 426, 428, 441, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 443, 0, 442,
	1165, 444, 445, 446, 451, 453, 454, 449, 450, 452,
	455, 456, 448, 1166, 447, 1049, 269, 1167, 457, 458,
	1071, 1119, 459, 1133, 461, 462, 0, 0, 463, 0,
	0, 0, 465, 466, 467, 0, 0, 468, 469, 645,
	1168, 470, 1169, 1148, 471, 472, 464, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 0, 482, 483, 647,
	484, 485, 486, 648, 487, 488, 489, 1149, 490, 650,
	491, 492, 0, 493, 494, 0, 495, 496, 497, 498,
	499, 500, 501, 1129, 502, 504, 503, 505, 0, 506,
	0, 507, 508, 509, 0, 0, 0, 0, 510, 0,
	512, 513, 514, 515, 511, 516, 517, 518, 519, 0,
	520, 521, 522, 1170, 523, 524, 525, 526, 1059, 527,
	0, 528, 529, 535, 536, 530, 531, 537, 538, 539,
	540, 541, 0, 543, 544, 542, 545, 546, 547, 1112,
	548, 549, 532, 533, 550, 551, 1171, 552, 553, 554,
	555, 556, 557, 1127, 0, 558, 0, 559, 560, 561,
	563, 534, 564, 569, 570, 1174, 565, 566, 567, 568,
	1150, 572, 573, 0, 574, 575, 1047, 571, 562, 0,
	576, 577, 578, 579, 580, 581, 582, 354, 583, 0,
	584, 1139, 1140, 1141, 1142, 0, 593, 0, 585, 586,
	587, 1151, 588, 1152, 1069, 589, 590, 591, 592, 0,
	4509, 595, 0, 1053, 596, 597, 598, 600, 601, 599,
	602, 1113, 603, 0, 0, 604, 605, 606, 662, 1136,
	1173, 0, 608, 607, 609, 665, 0, 0, 0, 0,
	0, 610, 611, 666, 612, 613, 614, 1050, 0, 0,
	0, 0, 0, 0, 0, 1046, 0, 0, 0, 0,
	0, 0, 1044, 1045, 1091, 1063, 1064, 1065, 1061, 1062,
	1074, 1075, 0, 0, 0, 1073, 0, 0, 0, 0,
	0, 270, 272, 271, 273, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 1115, 1079, 0,
	0, 0, 280, 281, 1155, 282, 283, 284, 285, 286,
	287, 4508, 1128, 0, 288, 1135, 289, 1134, 0, 1145,
	290, 291, 292, 293, 294, 295, 1081, 1114, 1048, 296,
	1175, 1176, 623, 0, 297, 298, 1121, 0, 1102, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 1156, 321, 322,
	4510, 1105, 1103, 1104, 1111, 1107, 1106, 1110, 324, 325,
	326, 327, 328, 1138, 329, 1132, 1131, 1052, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 1123, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 1058, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 1146, 1147, 360, 1070, 267,
	0, 0, 0, 0, 0, 361, 362, 363, 1130, 0,
	0, 0, 364, 0, 365, 0, 0, 1157, 366, 367,
	1143, 1144, 368, 369, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 1153, 0, 1080, 378, 0, 379, 380,
	381, 382, 383, 1116, 1117, 1120, 460, 1159, 384, 385,
	0, 386, 387, 388, 389, 0, 0, 0, 268, 390,
	391, 392, 394, 0, 1158, 393, 1125, 1126, 0, 1086,
	0, 395, 396, 1160, 1118, 1161, 397, 398, 399, 1162,
	400, 0, 0, 0, 401, 402, 403, 404, 405, 406,
	0, 407, 409, 408, 0, 410, 1154, 1163, 411, 412,
	1164, 0, 413, 0, 0, 0, 414, 415, 418, 1109,
	1108, 416, 417, 419, 420, 0, 421, 422, 424, 427,
	423, 425, 426, 428, 441, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 443, 0, 442,
	1165, 444, 445, 446, 451, 453, 454, 449, 450, 452,
	455, 456, 448, 1166, 447, 1049, 269, 1167, 457, 458,
	1071, 1119, 459, 1133, 461, 462, 0, 0, 463, 0,
	0, 0, 465, 466, 467, 0, 0, 468, 469, 645,
	1168, 470, 1169, 1148, 471, 472, 464, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 0, 482, 483, 647,
	484, 485, 486, 648, 487, 488, 489, 1149, 490, 650,
	491, 492, 0, 493, 494, 0, 495, 496, 497, 498,
	499, 500, 501, 1129, 502, 504, 503, 505, 0, 506,
	0, 507, 508, 509, 0, 0, 0, 0, 510, 0,
	512, 513, 514, 515, 511, 516, 517, 518, 519, 0,
	520, 521, 522, 1170, 523, 524, 525, 526, 1059, 527,
	0, 528, 529, 535, 536, 530, 531, 537, 538, 539,
	540, 541, 0, 543, 544, 542, 545, 546, 547, 1112,
	548, 549, 532, 533, 550, 551, 1171, 552, 553, 554,
	555, 556, 557, 1127, 0, 558, 0, 559, 560, 561,
	563, 534, 564, 569, 570, 1174, 565, 566, 567, 568,
	1150, 572, 573, 0, 574, 575, 1047, 571, 562, 0,
	576, 577, 578, 579, 580, 581, 582, 354, 583, 0,
	584, 1139, 1140, 1141, 1142, 0, 593, 0, 585, 586,
	587, 1151, 588, 1152, 1069, 589, 590, 591, 592, 0,
	4509, 595, 0, 1053, 596, 597, 598, 600, 601, 599,
	602, 1113, 603, 0, 0, 604, 605, 606, 662, 1136,
	1173, 0, 608, 607, 609, 665, 0, 0, 0, 0,
	0, 610, 611, 666, 612, 613, 614, 1050, 0, 0,
	0, 0, 0, 0, 0, 1046, 0, 0, 0, 0,
	0, 0, 1044, 1045, 1091, 1063, 1064, 1065, 1061, 1062,
	1074, 1075, 0, 0, 0, 1073, 0, 0, 0, 0,
	0, 270, 272, 271, 273, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 1115, 1079, 0,
	0, 0, 280, 281, 1155, 282, 283, 284, 285, 286,
	287, 616, 1128, 0, 288, 1135, 289, 1134, 0, 1145,
	290, 291, 292, 293, 294, 295, 1081, 1114, 1048, 296,
	1175, 1176, 623, 0, 297, 298, 1121, 0, 1102, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 1156, 321, 4157,
	323, 1105, 1103, 1104, 1111, 1107, 1106, 1110, 324, 325,
	326, 327, 328, 1138, 329, 1132, 1131, 1052, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 1123, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 1058, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 1146, 1147, 360, 1070, 267,
	0, 0, 0, 0, 0, 361, 362, 363, 1130, 0,
	0, 0, 364, 0, 365, 0, 0, 1157, 366, 367,
	1143, 1144, 368, 369, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 1153, 0, 4158, 378, 0, 379, 380,
	381, 382, 383, 1116, 1117, 1120, 460, 1159, 384, 385,
	0, 386, 387, 388, 389, 0, 0, 0, 268, 390,
	391, 392, 394, 0, 1158, 393, 1125, 1126, 0, 1086,
	0, 395, 396, 1160, 1118, 1161, 397, 398, 399, 1162,
	400, 0, 0, 0, 401, 402, 403, 404, 405, 406,
	0, 407, 409, 408, 0, 410, 1154, 1163, 411, 412,
	1164, 0, 413, 0, 0, 0, 414, 415, 418, 1109,
	1108, 416, 417, 419, 420, 0, 421, 422, 424, 427,
	423, 425, 426, 428, 441, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 443, 0, 442,
	1165, 444, 445, 446, 451, 453, 454, 449, 450, 452,
	455, 456, 448, 1166, 447, 1049, 269, 1167, 457, 458,
	1071, 1119, 459, 1133, 461, 462, 0, 0, 463, 0,
	0, 0, 465, 466, 467, 0, 0, 468, 469, 645,
	1168, 470, 1169, 1148, 471, 472, 464, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 0, 482, 483, 647,
	484, 485, 486, 648, 487, 488, 489, 1149, 490, 650,
	491, 492, 0, 493, 494, 0, 495, 496, 497, 498,
	499, 500, 501, 1129, 502, 504, 503, 505, 0, 506,
	0, 507, 508, 509, 0, 0, 0, 0, 510, 0,
	512, 513, 514, 515, 511, 516, 517, 518, 519, 0,
	520, 521, 522, 1170, 523, 524, 525, 4156, 1059, 527,
	0, 528, 529, 535, 536, 530, 531, 537, 538, 539,
	540, 541, 0, 543, 544, 542, 545, 546, 547, 1112,
	548, 549, 532, 533, 550, 551, 1171, 552, 553, 554,
	555, 556, 557, 1127, 0, 558, 0, 559, 560, 561,
	563, 534, 564, 569, 570, 1174, 565, 566, 567, 568,
	1150, 572, 573, 0, 574, 575, 1047, 571, 562, 0,
	576, 577, 578, 579, 580, 581, 582, 354, 583, 0,
	584, 1139, 1140, 1141, 1142, 0, 593, 0, 585, 586,
	587, 1151, 588, 1152, 1069, 589, 590, 591, 592, 0,
	594, 595, 0, 1053, 596, 597, 598, 600, 601, 599,
	602, 1113, 603, 0, 0, 604, 605, 606, 662, 1136,
	1173, 0, 608, 607, 609, 665, 0, 0, 0, 0,
	0, 610, 611, 666, 612, 613, 614, 1050, 0, 0,
	0, 0, 0, 0, 0, 1046, 0, 0, 0, 0,
	0, 0, 1044, 1045, 1091, 1063, 1064, 1065, 3028, 3029,
	1074, 1075, 0, 0, 0, 1073, 0, 0, 0, 0,
	0, 270, 272, 271, 273, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 1115, 1079, 0,
	0, 0, 280, 281, 1155, 282, 283, 284, 285, 286,
	287, 616, 1128, 0, 288, 1135, 289, 1134, 0, 1145,
	290, 291, 292, 293, 294, 295, 1081, 1114, 1048, 296,
	1175, 1176, 623, 0, 297, 298, 1121, 0, 1102, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 1156, 321, 322,
	323, 1105, 1103, 1104, 1111, 1107, 1106, 1110, 324, 325,
	326, 327, 328, 1138, 329, 1132, 1131, 1052, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 1123, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 1058, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 1146, 1147, 360, 1070, 267,
	0, 0, 0, 0, 0, 361, 362, 363, 1130, 0,
	0, 0, 364, 0, 365, 0, 0, 1157, 366, 367,
	1143, 1144, 368, 369, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 1153, 0, 1080, 378, 0, 379, 380,
	381, 382, 383, 1116, 1117, 1120, 460, 1159, 384, 385,
	0, 386, 387, 388, 389, 0, 0, 0, 268, 390,
	391, 392, 394, 0, 1158, 393, 1125, 1126, 0, 1086,
	0, 395, 396, 1160, 1118, 1161, 397, 398, 399, 1162,
	400, 0, 0, 0, 401, 402, 403, 404, 405, 406,
	0, 407, 409, 408, 0, 410, 1154, 1163, 411, 412,
	1164, 0, 413, 0, 0, 0, 414, 415, 418, 1109,
	1108, 416, 417, 419, 420, 0, 421, 422, 424, 427,
	423, 425, 426, 428, 441, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 443, 0, 442,
	1165, 444, 445, 446, 451, 453, 454, 449, 450, 452,
	455, 456, 448, 1166, 447, 1049, 269, 1167, 457, 458,
	1071, 1119, 459, 1133, 461, 462, 0, 0, 463, 0,
	0, 0, 465, 466, 467, 0, 0, 468, 469, 645,
	1168, 470, 1169, 1148, 471, 472, 464, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 0, 482, 483, 647,
	484, 485, 486, 648, 487, 488, 489, 1149, 490, 650,
	491, 492, 0, 493, 494, 0, 495, 496, 497, 498,
	499, 500, 501, 1129, 502, 504, 503, 505, 0, 506,
	0, 507, 508, 509, 0, 0, 0, 0, 510, 0,
	512, 513, 514, 515, 511, 516, 517, 518, 519, 0,
	520, 521, 522, 1170, 523, 524, 525, 526, 1059, 527,
	0, 528, 529, 535, 536, 530, 531, 537, 538, 539,
	540, 541, 0, 543, 544, 542, 545, 546, 547, 1112,
	548, 549, 532, 533, 550, 551, 1171, 552, 553, 554,
	555, 556, 557, 1127, 0, 558, 0, 559, 560, 561,
	563, 534, 564, 569, 570, 1174, 565, 566, 567, 568,
	1150, 572, 573, 0, 574, 575, 1047, 571, 562, 0,
	576, 577, 578, 579, 580, 581, 582, 354, 583, 0,
	584, 1139, 1140, 1141, 1142, 0, 593, 0, 585, 586,
	587, 1151, 588, 1152, 1069, 589, 590, 591, 592, 0,
	594, 595, 0, 1053, 596, 597, 598, 600, 601, 599,
	602, 1113, 603, 0, 0, 604, 605, 606, 662, 1136,
	1173, 0, 608, 607, 609, 665, 0, 0, 0, 0,
	0, 610, 611, 666, 612, 613, 614, 1050, 0, 0,
	0, 0, 0, 0, 0, 1046, 0, 0, 0, 0,
	0, 0, 1044, 1045, 1091, 1063, 1064, 1065, 3026, 3027,
	1074, 1075, 0, 0, 0, 1073, 0, 0, 0, 0,
	0, 270, 272, 271, 273, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 1115, 1079, 0,
	0, 0, 280, 281, 1155, 282, 283, 284, 285, 286,
	287, 616, 1128, 0, 288, 1135, 289, 1134, 0, 1145,
	290, 291, 292, 293, 294, 295, 1081, 1114, 1048, 296,
	1175, 1176, 623, 0, 297, 298, 1121, 0, 1102, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 1156, 321, 322,
	323, 1105, 1103, 1104, 1111, 1107, 1106, 1110, 324, 325,
	326, 327, 328, 1138, 329, 1132, 1131, 1052, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 1123, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 1058, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 1146, 1147, 360, 1070, 267,
	0, 0, 0, 0, 0, 361, 362, 363, 1130, 0,
	0, 0, 364, 0, 365, 0, 0, 1157, 366, 367,
	1143, 1144, 368, 369, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 1153, 0, 1080, 378, 0, 379, 380,
	381, 382, 383, 1116, 1117, 1120, 460, 1159, 384, 385,
	0, 386, 387, 388, 389, 0, 0, 0, 268, 390,
	391, 392, 394, 0, 1158, 393, 1125, 1126, 0, 1086,
	0, 395, 396, 1160, 1118, 1161, 397, 398, 399, 1162,
	400, 0, 0, 0, 401, 402, 403, 404, 405, 406,
	0, 407, 409, 408, 0, 410, 1154, 1163, 411, 412,
	1164, 0, 413, 0, 0, 0, 414, 415, 418, 1109,
	1108, 416, 417, 419, 420, 0, 421, 422, 424, 427,
	423, 425, 426, 428, 441, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 443, 0, 442,
	1165, 444, 445, 446, 451, 453, 454, 449, 450, 452,
	455, 456, 448, 1166, 447, 1049, 269, 1167, 457, 458,
	1071, 1119, 459, 1133, 461, 462, 0, 0, 463, 0,
	0, 0, 465, 466, 467, 0, 0, 468, 469, 645,
	1168, 470, 1169, 1148, 471, 472, 464, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 0, 482, 483, 647,
	484, 485, 486, 648, 487, 488, 489, 1149, 490, 650,
	491, 492, 0, 493, 494, 0, 495, 496, 497, 498,
	499, 500, 501, 1129, 502, 504, 503, 505, 0, 506,
	0, 507, 508, 509, 0, 0, 0, 0, 510, 0,
	512, 513, 514, 515, 511, 516, 517, 518, 519, 0,
	520, 521, 522, 1170, 523, 524, 525, 526, 1059, 527,
	0, 528, 529, 535, 536, 530, 531, 537, 538, 539,
	540, 541, 0, 543, 544, 542, 545, 546, 547, 1112,
	548, 549, 532, 533, 550, 551, 1171, 552, 553, 554,
	555, 556, 557, 1127, 0, 558, 0, 559, 560, 561,
	563, 534, 564, 569, 570, 1174, 565, 566, 567, 568,
	1150, 572, 573, 0, 574, 575, 1047, 571, 562, 0,
	576, 577, 578, 579, 580, 581, 582, 354, 583, 0,
	584, 1139, 1140, 1141, 1142, 0, 593, 0, 585, 586,
	587, 1151, 588, 1152, 1069, 589, 590, 591, 592, 0,
	594, 595, 0, 1053, 596, 597, 598, 600, 601, 599,
	602, 1113, 603, 0, 0, 604, 605, 606, 662, 1136,
	1173, 0, 608, 607, 609, 665, 0, 0, 0, 0,
	0, 610, 611, 666, 612, 613, 614, 1050, 0, 0,
	0, 0, 0, 0, 0, 1046, 0, 0, 0, 0,
	0, 0, 1044, 1045, 1091, 1063, 1064, 1065, 1061, 1062,
	1074, 1075, 0, 0, 0, 1073, 0, 0, 0, 0,
	0, 270, 272, 271, 273, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 1115, 1079, 0,
	0, 0, 280, 281, 1155, 282, 283, 284, 285, 286,
	287, 616, 1128, 0, 288, 1135, 289, 1134, 0, 1145,
	290, 291, 292, 293, 294, 295, 1081, 1114, 1048, 296,
	1175, 1176, 623, 0, 297, 298, 1121, 0, 1102, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 1156, 321, 322,
	323, 1105, 1103, 1104, 1111, 1107, 1106, 1110, 324, 325,
	326, 327, 328, 1138, 329, 1132, 1131, 1052, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 1123, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 1058, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 1146, 1147, 360, 1070, 267,
	0, 0, 0, 0, 0, 361, 362, 363, 1130, 0,
	0, 0, 364, 0, 365, 0, 0, 1157, 366, 367,
	1143, 1144, 368, 369, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 1153, 0, 1080, 378, 0, 379, 380,
	381, 382, 383, 1116, 1117, 1120, 460, 1159, 384, 385,
	0, 386, 387, 388, 389, 0, 0, 0, 268, 390,
	391, 392, 394, 0, 1158, 393, 1125, 1126, 0, 1086,
	0, 395, 396, 1160, 1118, 1161, 397, 398, 399, 1162,
	400, 0, 0, 0, 401, 402, 403, 404, 405, 406,
	0, 407, 409, 408, 0, 410, 1154, 1163, 411, 412,
	1164, 0, 413, 0, 0, 0, 414, 415, 418, 1109,
	1108, 416, 417, 419, 420, 0, 421, 422, 424, 427,
	423, 425, 426, 428, 441, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 443, 0, 442,
	1165, 444, 445, 446, 451, 453, 454, 449, 450, 452,
	455, 456, 448, 1166, 447, 1049, 269, 1167, 457, 458,
	1071, 1119, 459, 1133, 461, 462, 0, 0, 463, 0,
	0, 0, 465, 466, 467, 0, 0, 468, 469, 645,
	1168, 470, 1169, 1148, 471, 472, 464, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 0, 482, 483, 647,
	484, 485, 486, 648, 487, 488, 489, 1149, 490, 650,
	491, 492, 0, 493, 494, 0, 495, 496, 497, 498,
	499, 500, 501, 1129, 502, 504, 503, 505, 0, 506,
	0, 507, 508, 509, 0, 0, 0, 0, 510, 0,
	512, 513, 514, 515, 511, 516, 517, 518, 519, 0,
	520, 521, 522, 1170, 523, 524, 525, 526, 1059, 527,
	0, 528, 529, 535, 536, 530, 531, 537, 538, 539,
	540, 541, 0, 543, 544, 542, 545, 546, 547, 1112,
	548, 549, 532, 533, 550, 551, 1171, 552, 553, 554,
	555, 556, 557, 1127, 0, 558, 0, 559, 560, 561,
	563, 534, 564, 569, 570, 1174, 565, 566, 567, 568,
	1150, 572, 573, 0, 574, 575, 1047, 571, 562, 0,
	576, 577, 578, 579, 580, 581, 582, 354, 583, 0,
	584, 1139, 1140, 1141, 1142, 0, 593, 0, 585, 586,
	587, 1151, 588, 1152, 1069, 589, 590, 591, 592, 0,
	594, 595, 0, 1053, 596, 597, 598, 600, 601, 599,
	602, 1113, 603, 0, 0, 604, 605, 606, 662, 1136,
	1173, 0, 608, 607, 609, 665, 0, 0, 0, 0,
	0, 610, 611, 666, 612, 613, 614, 1050, 0, 0,
	0, 0, 0, 0, 0, 1046, 0, 0, 0, 0,
	0, 0, 2355, 2356, 1091, 1063, 1064, 1065, 1061, 1062,
	1074, 1075, 0, 0, 0, 1073, 0, 0, 0, 0,
	0, 270, 272, 271, 273, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 1115, 1079, 0,
	0, 0, 280, 281, 1155, 282, 283, 284, 285, 286,
	287, 616, 1128, 0, 288, 1135, 289, 1134, 0, 1145,
	290, 291, 292, 293, 294, 295, 1081, 1114, 0, 296,
	1175, 1176, 623, 0, 297, 298, 1121, 0, 1102, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 1156, 321, 322,
	323, 1105, 1103, 1104, 1111, 1107, 1106, 1110, 324, 325,
	326, 327, 328, 1138, 329, 1132, 1131, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 1123, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 1058, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 1146, 1147, 360, 1070, 267,
	0, 0, 0, 0, 0, 361, 362, 363, 1130, 0,
	0, 0, 364, 0, 365, 0, 0, 1157, 366, 367,
	1143, 1144, 368, 369, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 1153, 0, 1080, 378, 0, 379, 380,
	381, 382, 383, 1116, 1117, 1120, 460, 1159, 384, 385,
	0, 386, 387, 388, 389, 0, 0, 0, 268, 390,
	391, 392, 394, 0, 1158, 393, 1125, 1126, 0, 1086,
	0, 395, 396, 1160, 1118, 1161, 397, 398, 399, 1162,
	400, 0, 0, 0, 401, 402, 403, 404, 405, 406,
	0, 407, 409, 408, 0, 410, 1154, 1163, 411, 412,
	1164, 0, 413, 0, 0, 0, 414, 415, 418, 1109,
	1108, 416, 417, 419, 420, 0, 421, 422, 424, 427,
	423, 425, 426, 428, 441, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 443, 0, 442,
	1165, 444, 445, 446, 451, 453, 454, 449, 450, 452,
	455, 456, 448, 1166, 447, 0, 269, 1167, 457, 458,
	1071, 1119, 459, 1133, 461, 462, 0, 0, 463, 0,
	0, 0, 465, 466, 467, 0, 0, 468, 469, 645,
	1168, 470, 1169, 1148, 471, 472, 464, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 0, 482, 483, 647,
	484, 485, 486, 648, 487, 488, 489, 1149, 490, 650,
	491, 492, 0, 493, 494, 0, 495, 496, 497, 498,
	499, 500, 501, 1129, 502, 504, 503, 505, 0, 506,
	0, 507, 508, 509, 0, 0, 0, 0, 510, 0,
	512, 513, 514, 515, 511, 516, 517, 518, 519, 0,
	520, 521, 522, 1170, 523, 524, 525, 526, 1059, 527,
	0, 528, 529, 535, 536, 530, 531, 537, 538, 539,
	540, 541, 0, 543, 544, 542, 545, 546, 547, 1112,
	548, 549, 532, 533, 550, 551, 1171, 552, 553, 554,
	555, 556, 557, 1127, 0, 558, 0, 559, 560, 561,
	563, 534, 564, 569, 570, 1174, 565, 566, 567, 568,
	1150, 572, 573, 0, 574, 575, 0, 571, 562, 0,
	576, 577, 578, 579, 580, 581, 582, 354, 583, 0,
	584, 1139, 1140, 1141, 1142, 0, 593, 0, 585, 586,
	587, 1151, 588, 1152, 1069, 589, 590, 591, 592, 0,
	594, 595, 0, 0, 596, 597, 598, 600, 601, 599,
	602, 1113, 603, 0, 0, 604, 605, 606, 662, 1136,
	1173, 0, 608, 607, 609, 665, 0, 0, 0, 0,
	0, 610, 611, 666, 612, 613, 614, 0, 0, 0,
	0, 0, 0, 0, 0, 2575, 0, 0, 0, 0,
	0, 0, 2573, 2574, 1091, 1063, 1064, 1065, 1061, 1062,
	1074, 1075, 0, 0, 0, 1073, 0, 0, 0, 0,
	0, 270, 272, 271, 273, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 1115, 1079, 0,
	0, 0, 280, 281, 1155, 282, 283, 284, 285, 286,
	287, 616, 1128, 0, 288, 1135, 289, 1134, 0, 1145,
	290, 291, 292, 293, 294, 295, 1081, 1114, 0, 296,
	1175, 1176, 623, 0, 297, 298, 1121, 0, 1102, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 1156, 321, 322,
	323, 1105, 1103, 1104, 1111, 1107, 1106, 1110, 324, 325,
	326, 327, 328, 1138, 329, 1132, 1131, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 1123, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 1058, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 1146, 1147, 360, 1070, 267,
	0, 0, 0, 0, 0, 361, 362, 363, 1130, 0,
	0, 0, 364, 0, 365, 0, 0, 1157, 366, 367,
	1143, 1144, 368, 369, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 1153, 0, 1080, 378, 0, 379, 380,
	381, 382, 383, 1116, 1117, 1120, 460, 1159, 384, 385,
	0, 386, 387, 388, 389, 0, 0, 0, 268, 390,
	391, 392, 394, 0, 1158, 393, 1125, 1126, 0, 1086,
	0, 395, 396, 1160, 1118, 1161, 397, 398, 399, 1162,
	400, 0, 0, 0, 401, 402, 403, 404, 405, 406,
	0, 407, 409, 408, 0, 410, 1154, 1163, 411, 412,
	1164, 0, 413, 0, 0, 0, 414, 415, 418, 1109,
	1108, 416, 417, 419, 420, 0, 421, 422, 424, 427,
	423, 425, 426, 428, 441, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 443, 0, 442,
	1165, 444, 445, 446, 451, 453, 454, 449, 450, 452,
	455, 456, 448, 1166, 447, 0, 269, 1167, 457, 458,
	1071, 1119, 459, 1133, 461, 462, 0, 0, 463, 0,
	0, 0, 465, 466, 467, 0, 0, 468, 469, 645,
	1168, 470, 1169, 1148, 471, 472, 464, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 0, 482, 483, 647,
	484, 485, 486, 648, 487, 488, 489, 1149, 490, 650,
	491, 492, 0, 493, 494, 0, 495, 496, 497, 498,
	499, 500, 501, 1129, 502, 504, 503, 505, 0, 506,
	0, 507, 508, 509, 0, 0, 0, 0, 510, 0,
	512, 513, 514, 515, 511, 516, 517, 518, 519, 0,
	520, 521, 522, 1170, 523, 524, 525, 526, 3021, 3022,
	0, 528, 529, 535, 536, 530, 531, 537, 538, 539,
	540, 541, 0, 543, 544, 542, 545, 546, 547, 1112,
	548, 549, 532, 533, 550, 551, 1171, 552, 553, 554,
	555, 556, 557, 1127, 0, 558, 0, 559, 560, 561,
	563, 534, 564, 569, 570, 1174, 565, 566, 567, 568,
	1150, 572, 573, 0, 574, 575, 0, 571, 562, 0,
	576, 577, 578, 579, 580, 581, 582, 354, 583, 0,
	584, 1139, 1140, 1141, 1142, 0, 593, 0, 585, 586,
	587, 1151, 588, 1152, 1069, 589, 590, 591, 592, 0,
	594, 595, 0, 0, 596, 597, 598, 600, 601, 599,
	602, 1113, 603, 0, 0, 604, 605, 606, 662, 1136,
	1173, 0, 608, 607, 609, 665, 0, 0, 0, 0,
	0, 610, 611, 666, 612, 613, 614, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2061, 2062, 1091, 1063, 1064, 1065, 1061, 1062,
	1074, 1075, 0, 0, 0, 1073, 0, 0, 0, 0,
	0, 270, 272, 271, 273, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 1115, 1079, 0,
	0, 0, 280, 281, 1155, 282, 283, 284, 285, 286,
	287, 0, 1128, 0, 288, 1135, 289, 1134, 0, 1145,
	290, 291, 292, 293, 294, 295, 1081, 1114, 1048, 296,
	1175, 1176, 623, 0, 297, 298, 1121, 0, 1102, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 1156, 321, 322,
	4510, 1105, 1103, 1104, 1111, 1107, 1106, 1110, 324, 325,
	326, 327, 328, 1138, 329, 1132, 1131, 1052, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 1123, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 1058, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 1146, 1147, 360, 1070, 267,
	0, 0, 0, 0, 0, 361, 362, 363, 1130, 0,
	0, 0, 364, 0, 365, 0, 0, 1157, 366, 367,
	1143, 1144, 368, 369, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 1153, 0, 1080, 378, 0, 379, 380,
	381, 382, 383, 1116, 1117, 1120, 460, 0, 384, 385,
	0, 386, 387, 388, 389, 0, 0, 0, 268, 390,
	391, 392, 394, 0, 1158, 393, 1125, 1126, 0, 1086,
	0, 395, 396, 0, 1118, 0, 397, 398, 399, 1162,
	400, 0, 0, 0, 401, 402, 403, 404, 405, 406,
	0, 407, 409, 408, 0, 410, 1154, 1163, 411, 412,
	0, 0, 413, 0, 0, 0, 414, 415, 418, 1109,
	1108, 416, 417, 419, 420, 0, 421, 422, 424, 427,
	423, 425, 426, 428, 441, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 443, 0, 442,
	1165, 444, 445, 446, 451, 453, 454, 449, 450, 452,
	455, 456, 448, 1166, 447, 1049, 269, 0, 457, 458,
	1071, 1119, 459, 1133, 461, 462, 0, 0, 463, 0,
	0, 0, 465, 466, 467, 0, 0, 468, 469, 645,
	1168, 470, 1169, 1148, 471, 472, 464, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 0, 482, 483, 647,
	484, 485, 486, 648, 487, 488, 489, 1149, 490, 650,
	491, 492, 0, 493, 494, 0, 495, 496, 497, 498,
	499, 500, 501, 1129, 502, 504, 503, 505, 0, 506,
	0, 507, 508, 509, 0, 0, 0, 0, 510, 0,
	512, 513, 514, 515, 511, 516, 517, 518, 519, 0,
	520, 521, 522, 1170, 523, 524, 525, 526, 1059, 527,
	0, 528, 529, 535, 536, 530, 531, 537, 538, 539,
	540, 541, 0, 543, 544, 542, 545, 546, 547, 1112,
	548, 549, 532, 533, 550, 551, 0, 552, 553, 554,
	555, 556, 557, 1127, 0, 558, 0, 559, 560, 561,
	563, 534, 564, 569, 570, 1174, 565, 566, 567, 568,
	1150, 572, 573, 0, 574, 575, 1047, 571, 562, 0,
	576, 577, 578, 579, 580, 581, 582, 354, 583, 0,
	584, 1139, 1140, 1141, 1142, 0, 593, 0, 585, 586,
	587, 1151, 588, 1152, 1069, 589, 590, 591, 592, 0,
	4509, 595, 0, 1053, 596, 597, 598, 600, 601, 599,
	602, 1113, 603, 0, 0, 604, 605, 606, 662, 1136,
	1173, 0, 608, 607, 609, 665, 0, 0, 0, 0,
	0, 610, 611, 666, 612, 613, 614, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1037, 0, 1213,
	0, 0, 1044, 1045, 0, 0, 0, 0, 0, 0,
	0, 1075, 0, 0, 0, 1073, 270, 272, 271, 273,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 1115, 0, 0, 0, 0, 280, 281, 1155,
	282, 283, 284, 285, 286, 287, 616, 617, 0, 288,
	618, 289, 619, 0, 620, 290, 291, 292, 293, 294,
	295, 0, 1114, 0, 296, 621, 622, 623, 0, 297,
	298, 1121, 0, 1102, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 1156, 321, 322, 323, 1105, 1103, 1104, 1111,
	1107, 1106, 1110, 324, 325, 326, 327, 328, 0, 329,
	625, 626, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 627,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	1146, 1147, 360, 0, 267, 0, 0, 0, 0, 0,
	361, 362, 363, 630, 0, 0, 0, 364, 0, 365,
	0, 0, 1157, 366, 367, 631, 632, 368, 369, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 1153, 0,
	634, 378, 0, 379, 380, 381, 382, 383, 1116, 1117,
	1120, 460, 1159, 384, 385, 0, 386, 387, 388, 389,
	0, 0, 0, 268, 390, 391, 392, 394, 0, 1158,
	393, 638, 639, 0, 640, 0, 395, 396, 1160, 1118,
	1161, 397, 398, 399, 1162, 400, 0, 0, 0, 401,
	402, 403, 404, 405, 406, 1199, 407, 409, 408, 0,
	410, 1154, 1163, 411, 412, 1164, 0, 413, 0, 0,
	0, 414, 415, 418, 1109, 1108, 416, 417, 419, 420,
	0, 421, 422, 424, 427, 423, 425, 426, 428, 441,
	429, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 443, 0, 442, 1165, 444, 445, 446, 451,
	453, 454, 449, 450, 452, 455, 456, 448, 1166, 447,
	0, 269, 1167, 457, 458, 0, 1119, 459, 644, 461,
	462, 0, 0, 463, 0, 0, 1205, 465, 466, 467,
	0, 0, 468, 469, 645, 1168, 470, 1169, 1148, 471,
	472, 464, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 0, 482, 483, 647, 484, 485, 486, 648, 487,
	488, 489, 1149, 490, 650, 491, 492, 0, 493, 494,
	0, 495, 496, 497, 498, 499, 500, 501, 651, 502,
	504, 503, 505, 0, 506, 0, 507, 508, 509, 0,
	0, 0, 0, 510, 0, 512, 513, 514, 515, 511,
	516, 517, 518, 519, 0, 520, 521, 522, 1170, 523,
	524, 525, 526, 652, 1207, 0, 528, 529, 535, 536,
	530, 531, 537, 538, 539, 540, 541, 229, 543, 544,
	542, 545, 546, 547, 1112, 548, 549, 532, 533, 550,
	551, 1171, 552, 553, 554, 555, 556, 557, 653, 0,
	558, 0, 559, 560, 561, 563, 534, 564, 569, 570,
	654, 565, 566, 567, 568, 1150, 572, 573, 0, 574,
	575, 0, 571, 562, 231, 576, 577, 578, 579, 580,
	581, 582, 354, 583, 0, 584, 656, 657, 658, 659,
	0, 593, 0, 585, 586, 587, 1151, 588, 1152, 0,
	589, 590, 591, 592, 0, 594, 595, 0, 0, 596,
	597, 598, 600, 601, 599, 602, 1113, 603, 0, 0,
	604, 605, 606, 1568, 663, 664, 0, 608, 607, 609,
	665, 0, 1213, 0, 0, 223, 610, 611, 666, 612,
	613, 614, 0, 0, 224, 0, 0, 0, 0, 270,
	272, 271, 273, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 1203, 1115, 1904, 0, 0, 0,
	280, 281, 1155, 282, 283, 284, 285, 286, 287, 616,
	617, 0, 288, 618, 289, 619, 0, 620, 290, 291,
	292, 293, 294, 295, 0, 1114, 0, 296, 621, 622,
	623, 0, 297, 298, 1121, 0, 1102, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 1156, 321, 322, 323, 1105,
	1103, 1104, 1111, 1107, 1106, 1110, 324, 325, 326, 327,
	328, 0, 329, 625, 626, 0, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	340, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 627, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 1146, 1147, 360, 0, 267, 0, 0,
	0, 0, 0, 361, 362, 363, 630, 0, 0, 0,
	364, 0, 365, 0, 0, 1157, 366, 367, 631, 632,
	368, 369, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 1153, 0, 634, 378, 0, 379, 380, 381, 382,
	383, 1116, 1117, 1120, 460, 1159, 384, 385, 0, 386,
	387, 388, 389, 0, 0, 0, 268, 390, 391, 392,
	394, 0, 1158, 393, 638, 639, 0, 640, 0, 395,
	396, 1160, 1118, 1161, 397, 398, 399, 1162, 400, 0,
	0, 0, 401, 402, 403, 404, 405, 406, 1199, 407,
	409, 408, 0, 410, 1154, 1163, 411, 412, 1164, 0,
	413, 0, 0, 0, 414, 415, 418, 1109, 1108, 416,
	417, 419, 420, 0, 421, 422, 424, 427, 423, 425,
	426, 428, 441, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 443, 0, 442, 1165, 444,
	445, 446, 451, 453, 454, 449, 450, 452, 455, 456,
	448, 1166, 447, 0, 269, 1167, 457, 458, 0, 1119,
	459, 644, 461, 462, 0, 0, 463, 0, 0, 1205,
	465, 466, 467, 0, 0, 468, 469, 645, 1168, 470,
	1169, 1148, 471, 472, 464, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 0, 482, 483, 647, 484, 485,
	486, 648, 487, 488, 489, 1149, 490, 650, 491, 492,
	0, 493, 494, 0, 495, 496, 497, 498, 499, 500,
	501, 651, 502, 504, 503, 505, 0, 506, 0, 507,
	508, 509, 0, 0, 0, 0, 510, 0, 512, 513,
	514, 515, 511, 516, 517, 518, 519, 0, 520, 521,
	522, 1170, 523, 524, 525, 526, 652, 1207, 0, 528,
	529, 535, 536, 530, 531, 537, 538, 539, 540, 541,
	229, 543, 544, 542, 545, 546, 547, 1112, 548, 549,
	532, 533, 550, 551, 1171, 552, 553, 554, 555, 556,
	557, 653, 0, 558, 0, 559, 560, 561, 563, 534,
	564, 569, 570, 654, 565, 566, 567, 568, 1150, 572,
	573, 0, 574, 575, 0, 571, 562, 231, 576, 577,
	578, 579, 580, 581, 582, 354, 583, 0, 584, 656,
	657, 658, 659, 0, 593, 0, 585, 586, 587, 1151,
	588, 1152, 0, 589, 590, 591, 592, 0, 594, 595,
	0, 0, 596, 597, 598, 600, 601, 599, 602, 1113,
	603, 0, 0, 604, 605, 606, 1568, 663, 664, 0,
	608, 607, 609, 665, 0, 3181, 0, 1213, 223, 610,
	611, 666, 612, 613, 614, 0, 0, 224, 0, 0,
	0, 0, 0, 0, 270, 272, 271, 273, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 1203, 0, 1904,
	1115, 0, 0, 0, 0, 280, 281, 1155, 282, 283,
	284, 285, 286, 287, 616, 617, 0, 288, 618, 289,
	619, 0, 620, 290, 291, 292, 293, 294, 295, 0,
	1114, 0, 296, 621, 622, 623, 0, 297, 298, 1121,
	0, 1102, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	1156, 321, 322, 323, 1105, 1103, 1104, 1111, 1107, 1106,
	1110, 324, 325, 326, 327, 328, 0, 329, 625, 626,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 627, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 1146, 1147,
	360, 0, 267, 0, 0, 0, 0, 0, 361, 362,
	363, 630, 0, 0, 0, 364, 0, 365, 0, 0,
	1157, 366, 367, 631, 632, 368, 369, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 1153, 0, 634, 378,
	0, 379, 380, 381, 382, 383, 1116, 1117, 1120, 460,
	1159, 384, 385, 0, 386, 387, 388, 389, 0, 0,
	0, 268, 390, 391, 392, 394, 0, 1158, 393, 638,
	639, 0, 640, 0, 395, 396, 1160, 1118, 1161, 397,
	398, 399, 1162, 400, 0, 0, 0, 401, 402, 403,
	404, 405, 406, 1199, 407, 409, 408, 0, 410, 1154,
	1163, 411, 412, 1164, 0, 413, 0, 0, 0, 414,
	415, 418, 1109, 1108, 416, 417, 419, 420, 0, 421,
	422, 424, 427, 423, 425, 426, 428, 441, 429, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	443, 0, 442, 1165, 444, 445, 446, 451, 453, 454,
	449, 450, 452, 455, 456, 448, 1166, 447, 0, 269,
	1167, 457, 458, 0, 1119, 459, 644, 461, 462, 0,
	0, 463, 0, 0, 1205, 465, 466, 467, 0, 0,
	468, 469, 645, 1168, 470, 1169, 1148, 471, 472, 464,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 0,
	482, 483, 647, 484, 485, 486, 648, 487, 488, 489,
	1149, 490, 650, 491, 492, 0, 493, 494, 0, 495,
	496, 497, 498, 499, 500, 501, 651, 502, 504, 503,
	505, 0, 506, 0, 507, 508, 509, 0, 0, 0,
	0, 510, 0, 512, 513, 514, 515, 511, 516, 517,
	518, 519, 0, 520, 521, 522, 1170, 523, 524, 525,
	526, 652, 1207, 0, 528, 529, 535, 536, 530, 531,
	537, 538, 539, 540, 541, 0, 543, 544, 542, 545,
	546, 547, 1112, 548, 549, 532, 533, 550, 551, 1171,
	552, 553, 554, 555, 556, 557, 653, 0, 558, 0,
	559, 560, 561, 563, 534, 564, 569, 570, 654, 565,
	566, 567, 568, 1150, 572, 573, 0, 574, 575, 0,
	571, 562, 0, 576, 577, 578, 579, 580, 581, 582,
	354, 583, 0, 584, 656, 657, 658, 659, 0, 593,
	0, 585, 586, 587, 1151, 588, 1152, 0, 589, 590,
	591, 592, 0, 594, 595, 0, 0, 596, 597, 598,
	600, 601, 599, 602, 1113, 603, 0, 0, 604, 605,
	606, 662, 663, 664, 0, 608, 607, 609, 665, 0,
	1195, 0, 1213, 0, 610, 611, 666, 612, 613, 614,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 270,
	272, 271, 273, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 1203, 0, 1201, 1115, 0, 0, 0, 0,
	280, 281, 1155, 282, 283, 284, 285, 286, 287, 616,
	617, 0, 288, 618, 289, 619, 0, 620, 290, 291,
	292, 293, 294, 295, 0, 1114, 0, 296, 621, 622,
	623, 0, 297, 298, 1121, 0, 1102, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 1156, 321, 322, 323, 1105,
	1103, 1104, 1111, 1107, 1106, 1110, 324, 325, 326, 327,
	328, 0, 329, 625, 626, 0, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	340, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 627, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 1146, 1147, 360, 0, 267, 0, 0,
	0, 0, 0, 361, 362, 363, 630, 0, 0, 0,
	364, 0, 365, 0, 0, 1157, 366, 367, 631, 632,
	368, 369, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 1153, 0, 634, 378, 0, 379, 380, 381, 382,
	383, 1116, 1117, 1120, 460, 1159, 384, 385, 0, 386,
	387, 388, 389, 0, 0, 0, 268, 390, 391, 392,
	394, 0, 1158, 393, 638, 639, 0, 640, 0, 395,
	396, 1160, 1118, 1161, 397, 398, 399, 1162, 400, 0,
	0, 0, 401, 402, 403, 404, 405, 406, 1199, 407,
	409, 408, 0, 410, 1154, 1163, 411, 412, 1164, 0,
	413, 0, 0, 0, 414, 415, 418, 1109, 1108, 416,
	417, 419, 420, 0, 421, 422, 424, 427, 423, 425,
	426, 428, 441, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 443, 0, 442, 1165, 444,
	445, 446, 451, 453, 454, 449, 450, 452, 455, 456,
	448, 1166, 447, 0, 269, 1167, 457, 458, 0, 1119,
	459, 644, 461, 462, 0, 0, 463, 0, 0, 1205,
	465, 466, 467, 0, 0, 468, 469, 645, 1168, 470,
	1169, 1148, 471, 472, 464, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 0, 482, 483, 647, 484, 485,
	486, 648, 487, 488, 489, 1149, 490, 650, 491, 492,
	0, 493, 494, 0, 495, 496, 497, 498, 499, 500,
	501, 651, 502, 504, 503, 505, 0, 506, 0, 507,
	508, 509, 0, 0, 0, 0, 510, 0, 512, 513,
	514, 515, 511, 516, 517, 518, 519, 0, 520, 521,
	522, 1170, 523, 524, 525, 526, 652, 1207, 0, 528,
	529, 535, 536, 530, 531, 537, 538, 539, 540, 541,
	0, 543, 544, 542, 545, 546, 547, 1112, 548, 549,
	532, 533, 550, 551, 1171, 552, 553, 554, 555, 556,
	557, 653, 0, 558, 0, 559, 560, 561, 563, 534,
	564, 569, 570, 654, 565, 566, 567, 568, 1150, 572,
	573, 0, 574, 575, 0, 571, 562, 0, 576, 577,
	578, 579, 580, 581, 582, 354, 583, 0, 584, 656,
	657, 658, 659, 0, 593, 0, 585, 586, 587, 1151,
	588, 1152, 0, 589, 590, 591, 592, 0, 594, 595,
	0, 0, 596, 597, 598, 600, 601, 599, 602, 1113,
	603, 0, 0, 604, 605, 606, 662, 663, 664, 0,
	608, 607, 609, 665, 0, 1213, 0, 0, 0, 610,
	611, 666, 612, 613, 614, 0, 0, 0, 0, 0,
	0, 0, 270, 272, 271, 273, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 1203, 1115, 1201,
	0, 0, 0, 280, 281, 1155, 282, 283, 284, 285,
	286, 287, 616, 617, 0, 288, 618, 289, 619, 0,
	620, 290, 291, 292, 293, 294, 295, 0, 1114, 0,
	296, 621, 622, 623, 0, 297, 298, 1121, 0, 1102,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 1156, 321,
	322, 323, 1105, 1103, 1104, 1111, 1107, 1106, 1110, 324,
	325, 326, 327, 328, 0, 329, 625, 626, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 627, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 1146, 1147, 360, 0,
	267, 0, 0, 0, 0, 0, 361, 362, 363, 630,
	0, 0, 0, 364, 0, 365, 0, 0, 1157, 366,
	367, 631, 632, 368, 369, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 1153, 0, 634, 378, 0, 379,
	380, 381, 382, 383, 1116, 1117, 1120, 460, 1159, 384,
	385, 0, 386, 387, 388, 389, 0, 0, 0, 268,
	390, 391, 392, 394, 0, 1158, 393, 638, 639, 0,
	640, 0, 395, 396, 1160, 1118, 1161, 397, 398, 399,
	1162, 400, 0, 0, 0, 401, 402, 403, 404, 405,
	406, 1199, 407, 409, 408, 0, 410, 1154, 1163, 411,
	412, 1164, 0, 413, 0, 0, 0, 414, 415, 418,
	1109, 1108, 416, 417, 419, 420, 0, 421, 422, 424,
	427, 423, 425, 426, 428, 441, 429, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 443, 0,
	442, 1165, 444, 445, 446, 451, 453, 454, 449, 450,
	452, 455, 456, 448, 1166, 447, 0, 269, 1167, 457,
	458, 0, 1119, 459, 644, 461, 462, 0, 0, 463,
	0, 0, 1205, 465, 466, 467, 0, 0, 468, 469,
	645, 1168, 470, 1169, 1148, 471, 472, 464, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 0, 482, 483,
	647, 484, 485, 486, 648, 487, 488, 489, 1149, 490,
	650, 491, 492, 0, 493, 494, 0, 495, 496, 497,
	498, 499, 500, 501, 651, 502, 504, 503, 505, 0,
	506, 0, 507, 508, 509, 0, 0, 0, 0, 510,
	0, 512, 513, 514, 515, 511, 516, 517, 518, 519,
	0, 520, 521, 522, 1170, 523, 524, 525, 526, 652,
	1207, 0, 528, 529, 535, 536, 530, 531, 537, 538,
	539, 540, 541, 0, 543, 544, 542, 545, 546, 547,
	1112, 548, 549, 532, 533, 550, 551, 1171, 552, 553,
	554, 555, 556, 557, 653, 0, 558, 0, 559, 560,
	561, 563, 534, 564, 569, 570, 654, 565, 566, 567,
	568, 1150, 572, 573, 0, 574, 575, 0, 571, 562,
	0, 576, 577, 578, 579, 580, 581, 582, 354, 583,
	0, 584, 656, 657, 658, 659, 0, 593, 0, 585,
	586, 587, 1151, 588, 1152, 0, 589, 590, 591, 592,
	0, 594, 595, 0, 0, 596, 597, 598, 600, 601,
	599, 602, 1113, 603, 0, 0, 604, 605, 606, 662,
	663, 664, 0, 608, 607, 609, 665, 0, 1213, 0,
	0, 0, 610, 611, 666, 612, 613, 614, 0, 0,
	0, 0, 0, 0, 0, 270, 272, 271, 273, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	1203, 1115, 1201, 0, 0, 0, 280, 281, 1155, 282,
	283, 284, 285, 286, 287, 616, 617, 0, 288, 618,
	289, 619, 0, 620, 290, 291, 292, 293, 294, 295,
	0, 1114, 0, 296, 621, 622, 623, 0, 297, 298,
	1121, 0, 1102, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 1156, 321, 322, 323, 1105, 1103, 1104, 1111, 1107,
	1106, 1110, 324, 325, 326, 327, 328, 0, 329, 625,
	626, 0, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 340, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 627, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 1146,
	1147, 360, 0, 267, 0, 0, 0, 0, 0, 361,
	362, 363, 630, 0, 0, 0, 364, 0, 365, 0,
	0, 1157, 366, 367, 631, 632, 368, 369, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 1153, 0, 634,
	378, 0, 379, 380, 381, 382, 383, 1116, 1117, 1120,
	460, 1159, 384, 385, 0, 386, 387, 388, 389, 0,
	0, 0, 268, 390, 391, 392, 394, 0, 1158, 393,
	638, 639, 0, 640, 0, 395, 396, 1160, 1118, 1161,
	397, 398, 399, 1162, 400, 0, 0, 0, 401, 402,
	403, 404, 405, 406, 0, 407, 409, 408, 0, 410,
	1154, 1163, 411, 412, 1164, 0, 413, 0, 0, 0,
	414, 415, 418, 1109, 1108, 416, 417, 419, 420, 0,
	421, 422, 424, 427, 423, 425, 426, 428, 441, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 443, 0, 442, 1165, 444, 445, 446, 451, 453,
	454, 449, 450, 452, 455, 456, 448, 1166, 447, 0,
	269, 1167, 457, 458, 0, 1119, 459, 644, 461, 462,
	0, 0, 463, 0, 0, 0, 465, 466, 467, 0,
	0, 468, 469, 645, 1168, 470, 1169, 1148, 471, 472,
	464, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	0, 482, 483, 647, 484, 485, 486, 648, 487, 488,
	489, 1149, 490, 650, 491, 492, 0, 493, 494, 0,
	495, 496, 497, 498, 499, 500, 501, 651, 502, 504,
	503, 505, 0, 506, 0, 507, 508, 509, 0, 0,
	0, 0, 510, 0, 512, 513, 514, 515, 511, 516,
	517, 518, 519, 0, 520, 521, 522, 1170, 523, 524,
	525, 526, 652, 527, 0, 528, 529, 535, 536, 530,
	531, 537, 538, 539, 540, 541, 0, 543, 544, 542,
	545, 546, 547, 1112, 548, 549, 532, 533, 550, 551,
	1171, 552, 553, 554, 555, 556, 557, 653, 0, 558,
	0, 559, 560, 561, 563, 534, 564, 569, 570, 654,
	565, 566, 567, 568, 1150, 572, 573, 0, 574, 575,
	0, 571, 562, 0, 576, 577, 578, 579, 580, 581,
	582, 354, 583, 0, 584, 656, 657, 658, 659, 0,
	593, 0, 585, 586, 587, 1151, 588, 1152, 0, 589,
	590, 591, 592, 0, 594, 595, 0, 0, 596, 597,
	598, 600, 601, 599, 602, 1113, 603, 0, 0, 604,
	605, 606, 662, 663, 664, 0, 608, 607, 609, 665,
	1213, 0, 0, 0, 0, 610, 611, 666, 612, 613,
	614, 0, 0, 0, 0, 0, 0, 270, 272, 271,
	273, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 1115, 0, 3990, 0, 0, 280, 281,
	1155, 282, 283, 284, 285, 286, 287, 616, 617, 0,
	288, 618, 289, 619, 0, 620, 290, 291, 292, 293,
	294, 295, 0, 1114, 0, 296, 621, 622, 623, 0,
	297, 298, 1121, 0, 1102, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 1156, 321, 322, 323, 1105, 1103, 1104,
	1111, 1107, 1106, 1110, 324, 325, 326, 327, 328, 0,
	329, 625, 626, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	627, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 1146, 1147, 360, 0, 267, 0, 0, 0, 0,
	0, 361, 362, 363, 630, 0, 0, 0, 364, 0,
	365, 0, 0, 1157, 366, 367, 631, 632, 368, 369,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 1153,
	0, 634, 378, 0, 379, 380, 381, 382, 383, 1116,
	1117, 1120, 460, 1159, 384, 385, 0, 386, 387, 388,
	389, 0, 0, 0, 268, 390, 391, 392, 394, 0,
	1158, 393, 638, 639, 0, 640, 0, 395, 396, 1160,
	1118, 1161, 397, 398, 399, 1162, 400, 0, 0, 0,
	401, 402, 403, 404, 405, 406, 0, 407, 409, 408,
	0, 410, 1154, 1163, 411, 412, 1164, 0, 413, 0,
	0, 0, 414, 415, 418, 1109, 1108, 416, 417, 419,
	420, 0, 421, 422, 424, 427, 423, 425, 426, 428,
	441, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 443, 0, 442, 1165, 444, 445, 446,
	451, 453, 454, 449, 450, 452, 455, 456, 448, 1166,
	447, 0, 269, 1167, 457, 458, 0, 1119, 459, 644,
	461, 462, 0, 0, 463, 0, 0, 0, 465, 466,
	467, 0, 0, 468, 469, 645, 1168, 470, 1169, 1148,
	471, 472, 464, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 0, 482, 483, 647, 484, 485, 486, 648,
	487, 488, 489, 1149, 490, 650, 491, 492, 0, 493,
	494, 0, 495, 496, 497, 498, 499, 500, 501, 651,
	502, 504, 503, 505, 0, 506, 0, 507, 508, 509,
	0, 0, 0, 0, 510, 0, 512, 513, 514, 515,
	511, 516, 517, 518, 519, 0, 520, 521, 522, 1170,
	523, 524, 525, 526, 652, 1207, 0, 528, 529, 535,
	536, 530, 531, 537, 538, 539, 540, 541, 0, 543,
	544, 542, 545, 546, 547, 1112, 548, 549, 532, 533,
	550, 551, 1171, 552, 553, 554, 555, 556, 557, 653,
	0, 558, 0, 559, 560, 561, 563, 534, 564, 569,
	570, 654, 565, 566, 567, 568, 1150, 572, 573, 0,
	574, 575, 0, 571, 562, 0, 576, 577, 578, 579,
	580, 581, 582, 354, 583, 0, 584, 656, 657, 658,
	659, 0, 593, 0, 585, 586, 587, 1151, 588, 1152,
	0, 589, 590, 591, 592, 0, 594, 595, 0, 0,
	596, 597, 598, 600, 601, 599, 602, 1113, 603, 0,
	0, 604, 605, 606, 662, 663, 664, 0, 608, 607,
	609, 665, 0, 1037, 0, 1294, 0, 610, 611, 666,
	612, 613, 614, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 270, 272, 271, 273, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 1803, 615, 0,
	0, 0, 0, 280, 281, 1155, 282, 283, 284, 285,
	286, 287, 616, 617, 0, 288, 618, 289, 619, 0,
	620, 290, 291, 292, 293, 294, 295, 0, 0, 0,
	296, 621, 622, 623, 0, 297, 298, 624, 0, 1299,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 1156, 321,
	322, 323, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 327, 328, 0, 329, 625, 626, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 627, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 628, 629, 360, 0,
	267, 0, 0, 0, 0, 0, 361, 362, 363, 630,
	0, 0, 0, 364, 0, 365, 0, 0, 1157, 366,
	367, 631, 632, 368, 369, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 633, 0, 634, 378, 0, 379,
	380, 381, 382, 383, 635, 636, 637, 460, 1159, 384,
	385, 0, 386, 387, 388, 389, 0, 0, 0, 0,
	390, 391, 392, 394, 0, 1158, 393, 638, 639, 0,
	640, 0, 395, 396, 1160, 641, 1161, 397, 398, 399,
	1162, 400, 0, 0, 0, 401, 402, 403, 404, 405,
	406, 0, 407, 409, 408, 0, 410, 642, 1163, 411,
	412, 1164, 0, 413, 0, 0, 0, 414, 415, 418,
	0, 0, 416, 417, 419, 420, 0, 421, 422, 424,
	427, 423, 425, 426, 428, 441, 429, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 443, 0,
	442, 1165, 444, 445, 446, 451, 453, 454, 449, 450,
	452, 455, 456, 448, 1166, 447, 0, 0, 1167, 457,
	458, 0, 643, 459, 644, 461, 462, 0, 0, 463,
	0, 0, 0, 465, 466, 467, 0, 0, 468, 469,
	645, 1168, 470, 1169, 646, 471, 472, 464, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 0, 482, 483,
	647, 484, 485, 486, 648, 487, 488, 489, 649, 490,
	650, 491, 492, 0, 493, 494, 0, 495, 496, 497,
	498, 499, 500, 501, 651, 502, 504, 503, 505, 0,
	506, 0, 507, 508, 509, 0, 0, 0, 0, 510,
	0, 512, 513, 514, 515, 511, 516, 517, 518, 519,
	0, 520, 521, 522, 1170, 523, 524, 525, 526, 652,
	527, 0, 528, 529, 535, 536, 530, 531, 537, 538,
	539, 540, 541, 229, 543, 544, 542, 545, 546, 547,
	0, 548, 549, 532, 533, 550, 551, 1171, 552, 553,
	554, 555, 556, 557, 653, 0, 558, 0, 559, 560,
	561, 563, 534, 564, 569, 570, 654, 565, 566, 567,
	568, 655, 572, 573, 0, 574, 575, 0, 571, 562,
	231, 576, 577, 578, 579, 580, 581, 582, 354, 583,
	0, 584, 656, 657, 658, 659, 0, 593, 0, 585,
	586, 587, 660, 588, 661, 0, 589, 590, 591, 592,
	0, 594, 595, 0, 0, 596, 597, 598, 600, 601,
	599, 602, 0, 603, 0, 0, 604, 605, 606, 1568,
	663, 664, 0, 608, 607, 609, 665, 0, 1565, 0,
	1294, 223, 610, 611, 666, 612, 613, 614, 0, 0,
	224, 0, 0, 0, 0, 0, 0, 270, 272, 271,
	273, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 185, 615, 0, 0, 0, 0, 280, 281,
	1155, 282, 283, 284, 285, 286, 287, 616, 617, 0,
	288, 618, 289, 619, 0, 620, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 621, 622, 623, 0,
	297, 298, 624, 0, 1299, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 1156, 321, 322, 323, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 326, 327, 328, 0,
	329, 625, 626, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	627, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 628, 629, 360, 0, 267, 0, 0, 0, 0,
	0, 361, 362, 363, 630, 0, 0, 0, 364, 0,
	365, 0, 0, 1157, 366, 367, 631, 632, 368, 369,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 633,
	0, 634, 378, 0, 379, 380, 381, 382, 383, 635,
	636, 637, 460, 1159, 384, 385, 0, 386, 387, 388,
	389, 0, 0, 0, 0, 390, 391, 392, 394, 0,
	1158, 393, 638, 639, 0, 640, 0, 395, 396, 1160,
	641, 1161, 397, 398, 399, 1162, 400, 0, 0, 0,
	401, 402, 403, 404, 405, 406, 0, 407, 409, 408,
	0, 410, 642, 1163, 411, 412, 1164, 0, 413, 0,
	0, 0, 414, 415, 418, 0, 0, 416, 417, 419,
	420, 0, 421, 422, 424, 427, 423, 425, 426, 428,
	441, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 443, 0, 442, 1165, 444, 445, 446,
	451, 453, 454, 449, 450, 452, 455, 456, 448, 1166,
	447, 0, 0, 1167, 457, 458, 0, 643, 459, 644,
	461, 462, 0, 0, 463, 0, 0, 0, 465, 466,
	467, 0, 0, 468, 469, 645, 1168, 470, 1169, 646,
	471, 472, 464, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 0, 482, 483, 647, 484, 485, 486, 648,
	487, 488, 489, 649, 490, 650, 491, 492, 0, 493,
	494, 0, 495, 496, 497, 498, 499, 500, 501, 651,
	502, 504, 503, 505, 0, 506, 0, 507, 508, 509,
	0, 0, 0, 0, 510, 0, 512, 513, 514, 515,
	511, 516, 517, 518, 519, 0, 520, 521, 522, 1170,
	523, 524, 525, 526, 652, 527, 0, 528, 529, 535,
	536, 530, 531, 537, 538, 539, 540, 541, 229, 543,
	544, 542, 545, 546, 547, 0, 548, 549, 532, 533,
	550, 551, 1171, 552, 553, 554, 555, 556, 557, 653,
	0, 558, 0, 559, 560, 561, 563, 534, 564, 569,
	570, 654, 565, 566, 567, 568, 655, 572, 573, 0,
	574, 575, 0, 571, 562, 231, 576, 577, 578, 579,
	580, 581, 582, 354, 583, 0, 584, 656, 657, 658,
	659, 0, 593, 0, 585, 586, 587, 660, 588, 661,
	0, 589, 590, 591, 592, 0, 594, 595, 0, 0,
	596, 597, 598, 600, 601, 599, 602, 0, 603, 0,
	0, 604, 605, 606, 1568, 663, 664, 0, 608, 607,
	609, 665, 0, 0, 0, 0, 223, 610, 611, 666,
	612, 613, 614, 0, 0, 224, 0, 0, 0, 0,
	0, 1294, 1293, 0, 0, 0, 0, 1291, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 185, 270, 272,
	271, 273, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 615, 0, 0, 0, 0, 280,
	281, 1155, 282, 283, 284, 285, 286, 287, 616, 617,
	0, 288, 618, 289, 619, 0, 620, 290, 291, 292,
	293, 294, 295, 0, 0, 0, 296, 621, 622, 623,
	0, 297, 298, 624, 0, 1299, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 1156, 321, 322, 323, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 327, 328,
	0, 329, 625, 626, 0, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 340,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 627, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 628, 629, 360, 0, 267, 0, 0, 0,
	0, 0, 361, 362, 363, 630, 0, 0, 0, 364,
	0, 365, 0, 0, 1157, 366, 367, 631, 632, 368,
	369, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	633, 0, 634, 378, 0, 379, 380, 381, 382, 383,
	635, 636, 637, 460, 1159, 384, 385, 0, 386, 387,
	388, 389, 0, 0, 0, 0, 390, 391, 392, 394,
	0, 1158, 393, 638, 639, 0, 640, 0, 395, 396,
	1160, 641, 1161, 397, 398, 399, 1162, 400, 0, 0,
	0, 401, 402, 403, 404, 405, 406, 0, 407, 409,
	408, 0, 410, 642, 1163, 411, 412, 1164, 0, 413,
	0, 0, 0, 414, 415, 418, 0, 0, 416, 417,
	419, 420, 0, 421, 422, 424, 427, 423, 425, 426,
	428, 441, 429, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 443, 0, 442, 1165, 444, 445,
	446, 451, 453, 454, 449, 450, 452, 455, 456, 448,
	1166, 447, 0, 0, 1167, 457, 458, 0, 643, 459,
	644, 461, 462, 0, 0, 463, 0, 0, 0, 465,
	466, 467, 0, 0, 468, 469, 645, 1168, 470, 1169,
	646, 471, 472, 464, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 0, 482, 483, 647, 484, 485, 486,
	648, 487, 488, 489, 649, 490, 650, 491, 492, 0,
	493, 494, 0, 495, 496, 497, 498, 499, 500, 501,
	651, 502, 504, 503, 505, 0, 506, 0, 507, 508,
	509, 0, 0, 0, 0, 510, 0, 512, 513, 514,
	515, 511, 516, 517, 518, 519, 0, 520, 521, 522,
	1170, 523, 524, 525, 526, 652, 527, 0, 528, 529,
	535, 536, 530, 531, 537, 538, 539, 540, 541, 0,
	543, 544, 542, 545, 546, 547, 0, 548, 549, 532,
	533, 550, 551, 1171, 552, 553, 554, 555, 556, 557,
	653, 0, 558, 0, 559, 560, 561, 563, 534, 564,
	569, 570, 654, 565, 566, 567, 568, 655, 572, 573,
	0, 574, 575, 0, 571, 562, 0, 576, 577, 578,
	579, 580, 581, 582, 354, 583, 0, 584, 656, 657,
	658, 659, 0, 593, 0, 585, 586, 587, 660, 588,
	661, 0, 589, 590, 591, 592, 0, 594, 595, 0,
	0, 596, 597, 598, 600, 601, 599, 602, 0, 603,
	0, 0, 604, 605, 606, 662, 663, 664, 0, 608,
	607, 609, 665, 0, 0, 0, 0, 0, 610, 611,
	666, 612, 613, 614, 0, 0, 0, 0, 0, 0,
	0, 0, 1294, 1293, 0, 0, 0, 0, 1291, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1590, 270,
	272, 271, 273, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 615, 0, 0, 0, 0,
	280, 281, 1155, 282, 283, 284, 285, 286, 287, 616,
	617, 0, 288, 618, 289, 619, 0, 620, 290, 291,
	292, 293, 294, 295, 0, 0, 0, 296, 621, 622,
	623, 0, 297, 298, 624, 0, 1299, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 1156, 321, 322, 323, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 326, 327,
	328, 0, 329, 625, 626, 0, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	340, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 627, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 628, 629, 360, 0, 267, 0, 0,
	0, 0, 0, 361, 362, 363, 630, 0, 0, 0,
	364, 0, 365, 0, 0, 1157, 366, 367, 631, 632,
	368, 369, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 633, 0, 634, 378, 0, 379, 380, 381, 382,
	383, 635, 636, 637, 460, 1159, 384, 385, 0, 386,
	387, 388, 389, 0, 0, 0, 0, 390, 391, 392,
	394, 0, 1158, 393, 638, 639, 0, 640, 0, 395,
	396, 1160, 641, 1161, 397, 398, 399, 1162, 400, 0,
	0, 0, 401, 402, 403, 404, 405, 406, 0, 407,
	409, 408, 0, 410, 642, 1163, 411, 412, 1164, 0,
	413, 0, 0, 0, 414, 415, 418, 0, 0, 416,
	417, 419, 420, 0, 421, 422, 424, 427, 423, 425,
	426, 428, 441, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 443, 0, 442, 1165, 444,
	445, 446, 451, 453, 454, 449, 450, 452, 455, 456,
	448, 1166, 447, 0, 0, 1167, 457, 458, 0, 643,
	459, 644, 461, 462, 0, 0, 463, 0, 0, 0,
	465, 466, 467, 0, 0, 468, 469, 645, 1168, 470,
	1169, 646, 471, 472, 464, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 0, 482, 483, 647, 484, 485,
	486, 648, 487, 488, 489, 649, 490, 650, 491, 492,
	0, 493, 494, 0, 495, 496, 497, 498, 499, 500,
	501, 651, 502, 504, 503, 505, 0, 506, 0, 507,
	508, 509, 0, 0, 0, 0, 510, 0, 512, 513,
	514, 515, 511, 516, 517, 518, 519, 0, 520, 521,
	522, 1170, 523, 524, 525, 526, 652, 527, 0, 528,
	529, 535, 536, 530, 531, 537, 538, 539, 540, 541,
	0, 543, 544, 542, 545, 546, 547, 0, 548, 549,
	532, 533, 550, 551, 1171, 552, 553, 554, 555, 556,
	557, 653, 0, 558, 0, 559, 560, 561, 563, 534,
	564, 569, 570, 654, 565, 566, 567, 568, 655, 572,
	573, 0, 574, 575, 0, 571, 562, 0, 576, 577,
	578, 579, 580, 581, 582, 354, 583, 0, 584, 656,
	657, 658, 659, 0, 593, 0, 585, 586, 587, 660,
	588, 661, 0, 589, 590, 591, 592, 0, 594, 595,
	0, 0, 596, 597, 598, 600, 601, 599, 602, 0,
	603, 0, 0, 604, 605, 606, 662, 663, 664, 0,
	608, 607, 609, 665, 0, 0, 0, 0, 0, 610,
	611, 666, 612, 613, 614, 0, 0, 0, 0, 0,
	0, 0, 0, 1294, 1293, 0, 0, 0, 0, 1291,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3465,
	270, 272, 271, 273, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 615, 0, 0, 0,
	0, 280, 281, 1155, 282, 283, 284, 285, 286, 287,
	616, 617, 0, 288, 618, 289, 619, 0, 620, 290,
	291, 292, 293, 294, 295, 0, 0, 0, 296, 621,
	622, 623, 0, 297, 298, 624, 0, 1299, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 1156, 321, 322, 323,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	327, 328, 0, 329, 625, 626, 0, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 340, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 627, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 628, 629, 360, 0, 267, 0,
	0, 0, 0, 0, 361, 362, 363, 630, 0, 0,
	0, 364, 0, 365, 0, 0, 1157, 366, 367, 631,
	632, 368, 369, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 633, 0, 634, 378, 0, 379, 380, 381,
	382, 383, 635, 636, 637, 460, 1159, 384, 385, 0,
	386, 387, 388, 389, 0, 0, 0, 0, 390, 391,
	392, 394, 0, 1158, 393, 638, 639, 0, 640, 0,
	395, 396, 1160, 641, 1161, 397, 398, 399, 1162, 400,
	0, 0, 0, 401, 402, 403, 404, 405, 406, 0,
	407, 409, 408, 0, 410, 642, 1163, 411, 412, 1164,
	0, 413, 0, 0, 0, 414, 415, 418, 0, 0,
	416, 417, 419, 420, 0, 421, 422, 424, 427, 423,
	425, 426, 428, 441, 429, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 443, 0, 442, 1165,
	444, 445, 446, 451, 453, 454, 449, 450, 452, 455,
	456, 448, 1166, 447, 0, 0, 1167, 457, 458, 0,
	643, 459, 644, 461, 462, 0, 0, 463, 0, 0,
	0, 465, 466, 467, 0, 0, 468, 469, 645, 1168,
	470, 1169, 646, 471, 472, 464, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 0, 482, 483, 647, 484,
	485, 486, 648, 487, 488, 489, 649, 490, 650, 491,
	492, 0, 493, 494, 0, 495, 496, 497, 498, 499,
	500, 501, 651, 502, 504, 503, 505, 0, 506, 0,
	507, 508, 509, 0, 0, 0, 0, 510, 0, 512,
	513, 514, 2244, 511, 516, 517, 518, 519, 0, 520,
	521, 522, 1170, 523, 524, 525, 526, 652, 527, 0,
	528, 529, 535, 536, 530, 531, 537, 538, 539, 540,
	541, 0, 543, 544, 542, 545, 546, 547, 0, 548,
	549, 532, 533, 550, 551, 1171, 552, 553, 554, 555,
	556, 557, 653, 0, 558, 0, 559, 560, 561, 563,
	534, 564, 569, 570, 654, 565, 566, 567, 568, 655,
	572, 573, 0, 574, 575, 0, 571, 562, 0, 576,
	577, 578, 579, 580, 581, 582, 354, 583, 0, 584,
	656, 657, 658, 659, 0, 593, 0, 585, 586, 587,
	660, 588, 661, 0, 589, 590, 591, 592, 0, 594,
	595, 0, 0, 596, 597, 598, 600, 601, 599, 602,
	0, 603, 0, 0, 604, 605, 606, 662, 663, 664,
	0, 608, 607, 609, 665, 0, 0, 0, 0, 0,
	610, 611, 666, 612, 613, 614, 0, 0, 0, 0,
	0, 0, 0, 0, 1294, 2158, 0, 0, 0, 0,
	2159, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1590, 270, 272, 271, 273, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 615, 0, 0,
	0, 0, 280, 281, 1155, 282, 283, 284, 285, 286,
	287, 616, 617, 0, 288, 618, 289, 619, 0, 620,
	290, 291, 292, 293, 294, 295, 0, 0, 0, 296,
	621, 622, 623, 0, 297, 298, 624, 0, 1299, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 1156, 321, 322,
	323, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	326, 327, 328, 0, 329, 625, 626, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 340, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 627, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 628, 629, 360, 0, 267,
	0, 0, 0, 0, 0, 361, 362, 363, 630, 0,
	0, 0, 364, 0, 365, 0, 0, 1157, 366, 367,
	631, 632, 368, 369, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 633, 0, 634, 378, 0, 379, 380,
	381, 382, 383, 635, 636, 637, 460, 1159, 384, 385,
	0, 386, 387, 388, 389, 0, 0, 0, 0, 390,
	391, 392, 394, 0, 1158, 393, 638, 639, 0, 640,
	0, 395, 396, 1160, 641, 1161, 397, 398, 399, 1162,
	400, 0, 0, 0, 401, 402, 403, 404, 405, 406,
	0, 2157, 409, 408, 0, 410, 642, 1163, 411, 412,
	1164, 0, 413, 0, 0, 0, 414, 415, 418, 0,
	0, 416, 417, 419, 420, 0, 421, 422, 424, 427,
	423, 425, 426, 428, 441, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 443, 0, 442,
	1165, 444, 445, 446, 451, 453, 454, 449, 450, 452,
	455, 456, 448, 1166, 447, 0, 0, 1167, 457, 458,
	0, 643, 459, 644, 461, 462, 0, 0, 463, 0,
	0, 0, 465, 466, 467, 0, 0, 468, 469, 645,
	1168, 470, 1169, 646, 471, 472, 464, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 0, 482, 483, 647,
	484, 485, 486, 648, 487, 488, 489, 649, 490, 650,
	491, 492, 0, 493, 494, 0, 495, 496, 497, 498,
	499, 500, 501, 651, 502, 504, 503, 505, 0, 506,
	0, 507, 508, 509, 0, 0, 0, 0, 510, 0,
	512, 513, 514, 515, 511, 516, 517, 518, 519, 0,
	520, 521, 522, 1170, 523, 524, 525, 526, 652, 527,
	0, 528, 529, 535, 536, 530, 531, 537, 538, 539,
	540, 541, 0, 543, 544, 542, 545, 546, 547, 0,
	548, 549, 532, 533, 550, 551, 1171, 552, 553, 554,
	555, 556, 557, 653, 0, 558, 0, 559, 560, 561,
	563, 534, 564, 569, 570, 654, 565, 566, 567, 568,
	655, 572, 573, 0, 574, 575, 0, 571, 562, 0,
	576, 577, 578, 579, 580, 581, 582, 354, 583, 0,
	584, 656, 657, 658, 659, 0, 593, 0, 585, 586,
	587, 660, 588, 661, 0, 589, 590, 591, 592, 0,
	594, 595, 0, 0, 596, 597, 598, 600, 601, 599,
	602, 0, 603, 0, 0, 604, 605, 606, 662, 663,
	664, 0, 608, 607, 609, 665, 0, 0, 0, 0,
	0, 610, 611, 666, 612, 613, 614, 0, 0, 0,
	0, 0, 0, 0, 0, 1294, 1293, 0, 0, 0,
	0, 1291, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1590, 270, 272, 271, 273, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 615, 0,
	0, 0, 0, 280, 281, 1155, 282, 283, 284, 285,
	286, 287, 616, 617, 0, 288, 618, 289, 619, 0,
	620, 290, 291, 292, 293, 294, 295, 0, 0, 0,
	296, 621, 622, 623, 0, 297, 298, 624, 0, 1299,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 1156, 321,
	322, 323, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 327, 328, 0, 329, 625, 626, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 627, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 628, 629, 360, 0,
	267, 0, 0, 0, 0, 0, 361, 362, 363, 630,
	0, 0, 0, 364, 0, 365, 0, 0, 1157, 366,
	367, 631, 632, 368, 369, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 633, 0, 634, 378, 0, 379,
	380, 381, 382, 383, 635, 636, 637, 460, 1159, 384,
	385, 0, 386, 387, 388, 389, 0, 0, 0, 0,
	390, 391, 392, 394, 0, 1158, 393, 638, 639, 0,
	640, 0, 395, 396, 1160, 641, 1161, 397, 398, 399,
	1162, 400, 0, 0, 0, 401, 402, 403, 404, 405,
	406, 0, 407, 409, 408, 0, 410, 642, 1163, 411,
	412, 1164, 0, 413, 0, 0, 0, 414, 415, 418,
	0, 0, 416, 417, 419, 420, 0, 421, 422, 424,
	427, 423, 425, 426, 428, 441, 429, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 443, 0,
	442, 1165, 444, 445, 446, 451, 453, 454, 449, 450,
	452, 455, 456, 448, 1166, 447, 0, 0, 1167, 457,
	458, 0, 643, 459, 644, 461, 462, 0, 0, 463,
	0, 0, 0, 465, 466, 467, 0, 0, 468, 469,
	645, 1168, 470, 1169, 646, 471, 472, 464, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 0, 482, 483,
	647, 484, 485, 486, 648, 487, 488, 489, 649, 490,
	650, 491, 492, 0, 493, 494, 0, 495, 496, 497,
	498, 499, 500, 501, 651, 502, 504, 503, 505, 0,
	506, 0, 507, 508, 509, 0, 0, 0, 0, 510,
	0, 512, 513, 514, 515, 511, 516, 517, 518, 519,
	0, 520, 521, 522, 1170, 523, 524, 525, 526, 652,
	527, 0, 528, 529, 535, 536, 530, 531, 537, 538,
	539, 540, 541, 0, 543, 544, 542, 545, 546, 547,
	0, 548, 549, 532, 533, 550, 551, 1171, 552, 553,
	554, 555, 556, 557, 653, 0, 558, 0, 559, 560,
	561, 563, 534, 564, 569, 570, 654, 565, 566, 567,
	568, 655, 572, 573, 0, 574, 575, 0, 571, 562,
	0, 576, 577, 578, 579, 580, 581, 582, 354, 583,
	0, 584, 656, 657, 658, 659, 0, 593, 0, 585,
	586, 587, 660, 588, 661, 0, 589, 590, 591, 592,
	0, 594, 595, 0, 0, 596, 597, 598, 600, 601,
	599, 602, 0, 603, 0, 0, 604, 605, 606, 662,
	663, 664, 0, 608, 607, 609, 665, 1213, 0, 0,
	0, 0, 610, 611, 666, 612, 613, 614, 0, 0,
	0, 0, 0, 0, 270, 272, 271, 273, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	1115, 0, 1574, 0, 0, 280, 281, 1155, 282, 283,
	284, 285, 286, 287, 616, 617, 0, 288, 618, 289,
	619, 0, 620, 290, 291, 292, 293, 294, 295, 0,
	1114, 0, 296, 621, 622, 623, 0, 297, 298, 1121,
	0, 1102, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	1156, 321, 322, 323, 1105, 1103, 1104, 1111, 1107, 1106,
	1110, 324, 325, 326, 327, 328, 0, 329, 625, 626,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 627, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 1146, 1147,
	360, 0, 267, 0, 0, 0, 0, 0, 361, 362,
	363, 630, 0, 0, 0, 364, 0, 365, 0, 0,
	1157, 366, 367, 631, 632, 368, 369, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 1153, 0, 634, 378,
	0, 379, 380, 381, 382, 383, 1116, 1117, 1120, 460,
	1159, 384, 385, 0, 386, 387, 388, 389, 0, 0,
	0, 268, 390, 391, 392, 394, 0, 1158, 393, 638,
	639, 0, 640, 0, 395, 396, 1160, 1118, 1161, 397,
	398, 399, 1162, 400, 0, 0, 0, 401, 402, 403,
	404, 405, 406, 0, 407, 409, 408, 0, 410, 1154,
	1163, 411, 412, 1164, 0, 413, 0, 0, 0, 414,
	415, 418, 1109, 1108, 416, 417, 419, 420, 0, 421,
	422, 424, 427, 423, 425, 426, 428, 441, 429, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	443, 0, 442, 1165, 444, 445, 446, 451, 453, 454,
	449, 450, 452, 455, 456, 448, 1166, 447, 0, 269,
	1167, 457, 458, 0, 1119, 459, 644, 461, 462, 0,
	0, 463, 0, 0, 0, 465, 466, 467, 0, 0,
	468, 469, 645, 1168, 470, 1169, 1148, 471, 472, 464,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 0,
	482, 483, 647, 484, 485, 486, 648, 487, 488, 489,
	1149, 490, 650, 491, 492, 0, 493, 494, 0, 495,
	496, 497, 498, 499, 500, 501, 651, 502, 504, 503,
	505, 0, 506, 0, 507, 508, 509, 0, 0, 0,
	0, 510, 0, 512, 513, 514, 515, 511, 516, 517,
	518, 519, 0, 520, 521, 522, 1170, 523, 524, 525,
	526, 652, 527, 0, 528, 529, 535, 536, 530, 531,
	537, 538, 539, 540, 541, 0, 543, 544, 542, 545,
	546, 547, 1112, 548, 549, 532, 533, 550, 551, 1171,
	552, 553, 554, 555, 556, 557, 653, 0, 558, 0,
	559, 560, 561, 563, 534, 564, 569, 570, 654, 565,
	566, 567, 568, 1150, 572, 573, 0, 574, 575, 0,
	571, 562, 0, 576, 577, 578, 579, 580, 581, 582,
	354, 583, 0, 584, 656, 657, 658, 659, 0, 593,
	0, 585, 586, 587, 1151, 588, 1152, 0, 589, 590,
	591, 592, 0, 594, 595, 0, 0, 596, 597, 598,
	600, 601, 599, 602, 1113, 603, 0, 0, 604, 605,
	606, 662, 663, 664, 0, 608, 607, 609, 665, 1037,
	0, 264, 0, 0, 610, 611, 666, 612, 613, 614,
	0, 0, 0, 0, 0, 0, 0, 0, 270, 272,
	271, 273, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 615, 0, 0, 0, 0, 280,
	281, 0, 282, 283, 284, 285, 286, 287, 616, 617,
	0, 288, 618, 289, 619, 0, 620, 290, 291, 292,
	293, 294, 295, 0, 0, 0, 296, 621, 622, 623,
	0, 297, 298, 624, 0, 0, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 0, 321, 322, 323, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 327, 328,
	0, 329, 625, 626, 0, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 340,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 627, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 628, 629, 360, 0, 0, 0, 0, 0,
	0, 0, 361, 362, 363, 630, 0, 0, 0, 364,
	0, 365, 0, 0, 0, 366, 367, 631, 632, 368,
	369, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	633, 0, 634, 378, 0, 379, 380, 381, 382, 383,
	635, 636, 637, 460, 0, 384, 385, 0, 386, 387,
	388, 389, 0, 0, 0, 0, 390, 391, 392, 394,
	0, 0, 393, 638, 639, 0, 640, 0, 395, 396,
	0, 641, 0, 397, 398, 399, 0, 400, 0, 0,
	0, 401, 402, 403, 404, 405, 406, 0, 407, 409,
	408, 0, 410, 642, 0, 411, 412, 0, 0, 413,
	0, 0, 0, 414, 415, 418, 0, 0, 416, 417,
	419, 420, 0, 421, 422, 424, 427, 423, 425, 426,
	428, 441, 429, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 443, 0, 442, 0, 444, 445,
	446, 451, 453, 454, 449, 450, 452, 455, 456, 448,
	0, 447, 0, 0, 0, 457, 458, 0, 643, 459,
	644, 461, 462, 0, 0, 463, 0, 0, 0, 465,
	466, 467, 0, 0, 468, 469, 645, 0, 470, 0,
	646, 471, 472, 464, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 0, 482, 483, 647, 484, 485, 486,
	648, 487, 488, 489, 649, 490, 650, 491, 492, 0,
	493, 494, 0, 495, 496, 497, 498, 499, 500, 501,
	651, 502, 504, 503, 505, 0, 506, 0, 507, 508,
	509, 0, 0, 0, 0, 510, 0, 512, 513, 514,
	515, 511, 516, 517, 518, 519, 0, 520, 521, 522,
	0, 523, 524, 525, 526, 652, 527, 0, 528, 529,
	535, 536, 530, 531, 537, 538, 539, 540, 541, 229,
	543, 544, 542, 545, 546, 547, 0, 548, 549, 532,
	533, 550, 551, 0, 552, 553, 554, 555, 556, 557,
	653, 0, 558, 0, 559, 560, 561, 563, 534, 564,
	569, 570, 654, 565, 566, 567, 568, 655, 572, 573,
	0, 574, 575, 0, 571, 562, 231, 576, 577, 578,
	579, 580, 581, 582, 354, 583, 0, 584, 656, 657,
	658, 659, 0, 593, 0, 585, 586, 587, 660, 588,
	661, 0, 589, 590, 591, 592, 0, 594, 595, 0,
	0, 596, 597, 598, 600, 601, 599, 602, 0, 603,
	0, 0, 604, 605, 606, 1568, 663, 664, 0, 608,
	607, 609, 665, 264, 0, 0, 0, 223, 610, 611,
	666, 612, 613, 614, 0, 0, 224, 0, 0, 0,
	270, 272, 271, 273, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 615, 0, 185, 0,
	0, 280, 281, 0, 282, 283, 284, 285, 286, 287,
	616, 617, 0, 288, 618, 289, 619, 0, 620, 290,
	291, 292, 293, 294, 295, 0, 0, 0, 296, 621,
	622, 623, 0, 297, 298, 624, 0, 0, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 0, 321, 322, 323,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	327, 328, 0, 329, 625, 626, 0, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 340, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 627, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 628, 629, 360, 0, 267, 0,
	0, 0, 0, 0, 361, 362, 363, 630, 0, 0,
	0, 364, 0, 365, 0, 0, 0, 366, 367, 631,
	632, 368, 369, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 633, 0, 634, 378, 0, 379, 380, 381,
	382, 383, 635, 636, 637, 460, 0, 384, 385, 0,
	386, 387, 388, 389, 0, 0, 0, 268, 390, 391,
	392, 394, 0, 0, 393, 638, 639, 0, 640, 0,
	395, 396, 0, 641, 0, 397, 398, 399, 0, 400,
	0, 0, 0, 401, 402, 403, 404, 405, 406, 0,
	407, 409, 408, 0, 410, 642, 0, 411, 412, 0,
	0, 413, 0, 0, 0, 414, 415, 418, 0, 0,
	416, 417, 419, 420, 0, 421, 422, 424, 427, 423,
	425, 426, 428, 441, 429, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 443, 0, 442, 0,
	444, 445, 446, 451, 453, 454, 449, 450, 452, 455,
	456, 448, 0, 447, 0, 269, 0, 457, 458, 0,
	643, 459, 644, 461, 462, 0, 0, 463, 0, 0,
	0, 465, 466, 467, 0, 0, 468, 469, 645, 0,
	470, 0, 646, 471, 472, 464, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 0, 482, 483, 647, 484,
	485, 486, 648, 487, 488, 489, 649, 490, 650, 491,
	492, 0, 493, 494, 0, 495, 496, 497, 498, 499,
	500, 501, 651, 502, 504, 503, 505, 0, 506, 0,
	507, 508, 509, 0, 0, 0, 0, 510, 0, 512,
	513, 514, 515, 511, 516, 517, 518, 519, 0, 520,
	521, 522, 0, 523, 524, 525, 526, 652, 527, 0,
	528, 529, 535, 536, 530, 531, 537, 538, 539, 540,
	541, 0, 543, 544, 542, 545, 546, 547, 0, 548,
	549, 532, 533, 550, 551, 0, 552, 553, 554, 555,
	556, 557, 653, 0, 558, 0, 559, 560, 561, 563,
	534, 564, 569, 570, 654, 565, 566, 567, 568, 655,
	572, 573, 0, 574, 575, 0, 571, 562, 0, 576,
	577, 578, 579, 580, 581, 582, 354, 583, 0, 584,
	656, 657, 658, 659, 0, 593, 0, 585, 586, 587,
	660, 588, 661, 0, 589, 590, 591, 592, 0, 594,
	595, 0, 0, 596, 597, 598, 600, 601, 599, 602,
	0, 603, 0, 0, 604, 605, 606, 662, 663, 664,
	0, 608, 607, 609, 665, 264, 2934, 0, 0, 0,
	610, 611, 666, 612, 613, 614, 0, 0, 0, 0,
	0, 0, 270, 272, 271, 273, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 615, 0,
	1918, 0, 0, 280, 281, 0, 282, 283, 284, 285,
	286, 287, 616, 617, 0, 288, 618, 289, 619, 0,
	620, 290, 291, 292, 293, 294, 295, 0, 0, 0,
	296, 621, 622, 623, 0, 297, 298, 624, 0, 0,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 323, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 327, 328, 0, 329, 625, 626, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 627, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 628, 629, 360, 0,
	0, 0, 0, 0, 0, 0, 361, 362, 363, 630,
	0, 0, 0, 364, 0, 365, 0, 0, 0, 366,
	367, 631, 632, 368, 369, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 633, 0, 634, 378, 0, 379,
	380, 381, 382, 383, 635, 636, 637, 460, 0, 384,
	385, 0, 386, 387, 388, 389, 0, 0, 0, 0,
	390, 391, 392, 394, 0, 0, 393, 638, 639, 0,
	640, 0, 395, 396, 0, 641, 0, 397, 398, 399,
	0, 400, 0, 0, 0, 401, 402, 403, 404, 405,
	406, 0, 407, 409, 408, 0, 410, 642, 0, 411,
	412, 0, 0, 413, 0, 0, 0, 414, 415, 418,
	0, 0, 416, 417, 419, 420, 0, 421, 422, 424,
	427, 423, 425, 426, 428, 441, 429, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 443, 0,
	442, 0, 444, 445, 446, 451, 453, 454, 449, 450,
	452, 455, 456, 448, 0, 447, 0, 0, 0, 457,
	458, 0, 643, 459, 644, 461, 462, 0, 0, 463,
	0, 0, 0, 465, 466, 467, 0, 0, 468, 469,
	645, 0, 470, 0, 646, 471, 472, 464, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 0, 482, 483,
	647, 484, 485, 486, 648, 487, 488, 489, 649, 490,
	650, 491, 492, 0, 493, 494, 0, 495, 496, 497,
	498, 499, 500, 501, 651, 502, 504, 503, 505, 0,
	506, 0, 507, 508, 509, 0, 0, 0, 0, 510,
	0, 512, 513, 514, 515, 511, 516, 517, 518, 519,
	0, 520, 521, 522, 0, 523, 524, 525, 526, 652,
	527, 0, 528, 529, 535, 536, 530, 531, 537, 538,
	539, 540, 541, 0, 543, 544, 542, 545, 546, 547,
	0, 548, 549, 532, 533, 550, 551, 0, 552, 553,
	554, 555, 556, 557, 653, 0, 558, 0, 559, 560,
	561, 563, 534, 564, 569, 570, 654, 565, 566, 567,
	568, 655, 572, 573, 0, 574, 575, 0, 571, 562,
	0, 576, 577, 578, 579, 580, 581, 582, 354, 583,
	0, 584, 656, 657, 658, 659, 0, 593, 0, 585,
	586, 587, 660, 588, 661, 0, 589, 590, 591, 592,
	0, 594, 595, 0, 0, 596, 597, 598, 600, 601,
	599, 602, 0, 603, 0, 0, 604, 605, 606, 662,
	663, 664, 264, 608, 607, 609, 665, 0, 0, 0,
	0, 0, 610, 611, 666, 612, 613, 614, 0, 270,
	272, 271, 273, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 615, 0, 0, 0, 0,
	280, 281, 4666, 282, 283, 284, 285, 286, 287, 616,
	617, 0, 288, 618, 289, 619, 0, 620, 290, 291,
	292, 293, 294, 295, 0, 0, 0, 296, 621, 622,
	623, 0, 297, 298, 624, 0, 0, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 0, 321, 322, 323, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 326, 327,
	328, 0, 329, 625, 626, 0, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	340, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 627, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 628, 629, 360, 0, 267, 0, 0,
	0, 0, 0, 361, 362, 363, 630, 0, 0, 0,
	364, 0, 365, 0, 0, 0, 366, 367, 631, 632,
	368, 369, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 633, 0, 634, 378, 0, 379, 380, 381, 382,
	383, 635, 636, 637, 460, 0, 384, 385, 0, 386,
	387, 388, 389, 0, 0, 0, 268, 390, 391, 392,
	394, 0, 0, 393, 638, 639, 0, 640, 0, 395,
	396, 0, 641, 0, 397, 398, 399, 0, 400, 0,
	0, 0, 401, 402, 403, 404, 405, 406, 0, 407,
	409, 408, 0, 410, 642, 0, 411, 412, 0, 0,
	413, 0, 0, 0, 414, 415, 418, 0, 0, 416,
	417, 419, 420, 0, 421, 422, 424, 427, 423, 425,
	426, 428, 441, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 443, 0, 442, 0, 444,
	445, 446, 451, 453, 454, 449, 450, 452, 455, 456,
	448, 0, 447, 0, 269, 0, 457, 458, 0, 643,
	459, 644, 461, 462, 0, 0, 463, 0, 0, 0,
	465, 466, 467, 0, 0, 468, 469, 645, 0, 470,
	0, 646, 471, 472, 464, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 0, 482, 483, 647, 484, 485,
	486, 648, 487, 488, 489, 649, 490, 650, 491, 492,
	0, 493, 494, 0, 495, 496, 497, 498, 499, 500,
	501, 651, 502, 504, 503, 505, 0, 506, 0, 507,
	508, 509, 0, 0, 0, 0, 510, 0, 512, 513,
	514, 515, 511, 516, 517, 518, 519, 0, 520, 521,
	522, 0, 523, 524, 525, 526, 652, 527, 0, 528,
	529, 535, 536, 530, 531, 537, 538, 539, 540, 541,
	0, 543, 544, 542, 545, 546, 547, 0, 548, 549,
	532, 533, 550, 551, 0, 552, 553, 554, 555, 556,
	557, 653, 0, 558, 0, 559, 560, 561, 563, 534,
	564, 569, 570, 654, 565, 566, 567, 568, 655, 572,
	573, 0, 574, 575, 0, 571, 562, 0, 576, 577,
	578, 579, 580, 581, 582, 354, 583, 0, 584, 656,
	657, 658, 659, 0, 593, 0, 585, 586, 587, 660,
	588, 661, 0, 589, 590, 591, 592, 0, 594, 595,
	0, 0, 596, 597, 598, 600, 601, 599, 602, 0,
	603, 0, 0, 604, 605, 606, 662, 663, 664, 0,
	608, 607, 609, 665, 0, 264, 0, 0, 0, 610,
	611, 666, 612, 613, 614, 0, 0, 0, 0, 0,
	0, 0, 270, 272, 271, 273, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 3415, 615, 0,
	0, 0, 0, 280, 281, 0, 282, 283, 284, 285,
	286, 287, 616, 617, 0, 288, 618, 289, 619, 0,
	620, 290, 291, 292, 293, 294, 295, 0, 0, 0,
	296, 621, 622, 623, 0, 297, 298, 624, 0, 0,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 323, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 327, 328, 0, 329, 625, 626, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 627, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 628, 629, 360, 0,
	267, 0, 0, 0, 0, 0, 361, 362, 363, 630,
	0, 0, 0, 364, 0, 365, 0, 0, 0, 366,
	367, 631, 632, 368, 369, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 633, 0, 634, 378, 0, 379,
	380, 381, 382, 383, 635, 636, 637, 460, 0, 384,
	385, 0, 386, 387, 388, 389, 0, 0, 0, 268,
	390, 391, 392, 394, 0, 0, 393, 638, 639, 0,
	640, 0, 395, 396, 0, 641, 0, 397, 398, 399,
	0, 400, 0, 0, 0, 401, 402, 403, 404, 405,
	406, 0, 407, 409, 408, 0, 410, 642, 0, 411,
	412, 0, 0, 413, 0, 0, 0, 414, 415, 418,
	0, 0, 416, 417, 419, 420, 0, 421, 422, 424,
	427, 423, 425, 426, 428, 441, 429, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 443, 0,
	442, 0, 444, 445, 446, 451, 453, 454, 449, 450,
	452, 455, 456, 448, 0, 447, 0, 269, 0, 457,
	458, 0, 643, 459, 644, 461, 462, 0, 0, 463,
	0, 0, 0, 465, 466, 467, 0, 0, 468, 469,
	645, 0, 470, 0, 646, 471, 472, 464, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 0, 482, 483,
	647, 484, 485, 486, 648, 487, 488, 489, 649, 490,
	650, 491, 492, 0, 493, 494, 0, 495, 496, 497,
	498, 499, 500, 501, 651, 502, 504, 503, 505, 0,
	506, 0, 507, 508, 509, 0, 0, 0, 0, 510,
	0, 512, 513, 514, 515, 511, 516, 517, 518, 519,
	0, 520, 521, 522, 0, 523, 524, 525, 526, 652,
	527, 0, 528, 529, 535, 536, 530, 531, 537, 538,
	539, 540, 541, 0, 543, 544, 542, 545, 546, 547,
	0, 548, 549, 532, 533, 550, 551, 0, 552, 553,
	554, 555, 556, 557, 653, 0, 558, 0, 559, 560,
	561, 563, 534, 564, 569, 570, 654, 565, 566, 567,
	568, 655, 572, 573, 0, 574, 575, 0, 571, 562,
	0, 576, 577, 578, 579, 580, 581, 582, 354, 583,
	0, 584, 656, 657, 658, 659, 0, 593, 0, 585,
	586, 587, 660, 588, 661, 0, 589, 590, 591, 592,
	0, 594, 595, 0, 0, 596, 597, 598, 600, 601,
	599, 602, 0, 603, 0, 0, 604, 605, 606, 662,
	663, 664, 0, 608, 607, 609, 665, 0, 264, 0,
	0, 0, 610, 611, 666, 612, 613, 614, 0, 0,
	0, 0, 0, 0, 0, 270, 272, 271, 273, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	1562, 615, 0, 0, 0, 0, 280, 281, 0, 282,
	283, 284, 285, 286, 287, 616, 617, 0, 288, 618,
	289, 619, 0, 620, 290, 291, 292, 293, 294, 295,
	0, 0, 0, 296, 621, 622, 623, 0, 297, 298,
	624, 0, 0, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 0, 321, 322, 323, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 326, 327, 328, 0, 329, 625,
	626, 0, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 340, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 627, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 628,
	629, 360, 0, 0, 0, 0, 0, 0, 0, 361,
	362, 363, 630, 0, 0, 0, 364, 0, 365, 0,
	0, 0, 366, 367, 631, 632, 368, 369, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 633, 0, 634,
	378, 0, 379, 380, 381, 382, 383, 635, 636, 637,
	460, 0, 384, 385, 0, 386, 387, 388, 389, 0,
	0, 0, 0, 390, 391, 392, 394, 0, 0, 393,
	638, 639, 0, 640, 0, 395, 396, 0, 641, 0,
	397, 398, 399, 0, 400, 0, 0, 0, 401, 402,
	403, 404, 405, 406, 0, 407, 409, 408, 0, 410,
	642, 0, 411, 412, 0, 0, 413, 0, 0, 0,
	414, 415, 418, 0, 0, 416, 417, 419, 420, 0,
	421, 422, 424, 427, 423, 425, 426, 428, 441, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 443, 0, 442, 0, 444, 445, 446, 451, 453,
	454, 449, 450, 452, 455, 456, 448, 0, 447, 0,
	0, 0, 457, 458, 0, 643, 459, 644, 461, 462,
	0, 0, 463, 0, 0, 0, 465, 466, 467, 0,
	0, 468, 469, 645, 0, 470, 0, 646, 471, 472,
	464, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	0, 482, 483, 647, 484, 485, 486, 648, 487, 488,
	489, 649, 490, 650, 491, 492, 0, 493, 494, 0,
	495, 496, 497, 498, 499, 500, 501, 651, 502, 504,
	503, 505, 0, 506, 0, 507, 508, 509, 0, 0,
	0, 0, 510, 0, 512, 513, 514, 515, 511, 516,
	517, 518, 519, 0, 520, 521, 522, 0, 523, 524,
	525, 526, 652, 527, 0, 528, 529, 535, 536, 530,
	531, 537, 538, 539, 540, 541, 0, 543, 544, 542,
	545, 546, 547, 0, 548, 549, 532, 533, 550, 551,
	0, 552, 553, 554, 555, 556, 557, 653, 0, 558,
	0, 559, 560, 561, 563, 534, 564, 569, 570, 654,
	565, 566, 567, 568, 655, 572, 573, 0, 574, 575,
	0, 571, 562, 0, 576, 577, 578, 579, 580, 581,
	582, 354, 583, 0, 584, 656, 657, 658, 659, 0,
	593, 0, 585, 586, 587, 660, 588, 661, 0, 589,
	590, 591, 592, 0, 594, 595, 0, 0, 596, 597,
	598, 600, 601, 599, 602, 0, 603, 0, 0, 604,
	605, 606, 662, 663, 664, 264, 608, 607, 609, 665,
	0, 0, 0, 0, 0, 610, 611, 666, 612, 613,
	614, 0, 270, 272, 271, 273, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 615, 0,
	0, 0, 0, 280, 281, 2922, 282, 283, 284, 285,
	286, 287, 616, 617, 0, 288, 618, 289, 619, 0,
	620, 290, 291, 292, 293, 294, 295, 0, 0, 0,
	296, 621, 622, 623, 0, 297, 298, 624, 0, 0,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 323, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 327, 328, 0, 329, 625, 626, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 627, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 628, 629, 360, 0,
	0, 0, 0, 0, 0, 0, 361, 362, 363, 630,
	0, 0, 0, 364, 0, 365, 0, 0, 0, 366,
	367, 631, 632, 368, 369, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 633, 0, 634, 378, 0, 379,
	380, 381, 382, 383, 635, 636, 637, 460, 0, 384,
	385, 0, 386, 387, 388, 389, 0, 0, 0, 0,
	390, 391, 392, 394, 0, 0, 393, 638, 639, 0,
	640, 0, 395, 396, 0, 641, 0, 397, 398, 399,
	0, 400, 0, 0, 0, 401, 402, 403, 404, 405,
	406, 0, 407, 409, 408, 0, 410, 642, 0, 411,
	412, 0, 0, 413, 0, 0, 0, 414, 415, 418,
	0, 0, 416, 417, 419, 420, 0, 421, 422, 424,
	427, 423, 425, 426, 428, 441, 429, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 443, 0,
	442, 0, 444, 445, 446, 451, 453, 454, 449, 450,
	452, 455, 456, 448, 0, 447, 0, 0, 0, 457,
	458, 0, 643, 459, 644, 461, 462, 0, 0, 463,
	0, 0, 0, 465, 466, 467, 0, 0, 468, 469,
	645, 0, 470, 0, 646, 471, 472, 464, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 0, 482, 483,
	647, 484, 485, 486, 648, 487, 488, 489, 649, 490,
	650, 491, 492, 0, 493, 494, 0, 495, 496, 497,
	498, 499, 500, 501, 651, 502, 504, 503, 505, 0,
	506, 0, 507, 508, 509, 0, 0, 0, 0, 510,
	0, 512, 513, 514, 515, 511, 516, 517, 518, 519,
	0, 520, 521, 522, 0, 523, 524, 525, 526, 652,
	527, 0, 528, 529, 535, 536, 530, 531, 537, 538,
	539, 540, 541, 0, 543, 544, 542, 545, 546, 547,
	0, 548, 549, 532, 533, 550, 551, 0, 552, 553,
	554, 555, 556, 557, 653, 0, 558, 0, 559, 560,
	561, 563, 534, 564, 569, 570, 654, 565, 566, 567,
	568, 655, 572, 573, 0, 574, 575, 0, 571, 562,
	0, 576, 577, 578, 579, 580, 581, 582, 354, 583,
	0, 584, 656, 657, 658, 659, 0, 593, 0, 585,
	586, 587, 660, 588, 661, 0, 589, 590, 591, 592,
	0, 594, 595, 0, 0, 596, 597, 598, 600, 601,
	599, 602, 0, 603, 0, 0, 604, 605, 606, 662,
	663, 664, 264, 608, 607, 609, 665, 0, 0, 0,
	0, 0, 610, 611, 666, 612, 613, 614, 0, 270,
	272, 271, 273, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 615, 0, 0, 0, 0,
	280, 281, 3571, 282, 283, 284, 285, 286, 287, 616,
	617, 0, 288, 618, 289, 619, 0, 620, 290, 291,
	292, 293, 294, 295, 0, 0, 0, 296, 621, 622,
	623, 0, 297, 298, 624, 0, 0, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 0, 321, 322, 323, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 326, 327,
	328, 0, 329, 625, 626, 0, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	340, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 627, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 628, 629, 360, 0, 0, 0, 0,
	0, 0, 0, 361, 362, 363, 630, 0, 0, 0,
	364, 0, 365, 0, 0, 0, 366, 367, 631, 632,
	368, 369, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 633, 0, 634, 378, 0, 379, 380, 381, 382,
	383, 635, 636, 637, 460, 0, 384, 385, 0, 386,
	387, 388, 389, 0, 0, 0, 0, 390, 391, 392,
	394, 0, 0, 393, 638, 639, 0, 640, 0, 395,
	396, 0, 641, 0, 397, 398, 399, 0, 400, 0,
	0, 0, 401, 402, 403, 404, 405, 406, 0, 407,
	409, 408, 0, 410, 642, 0, 411, 412, 0, 0,
	413, 0, 0, 0, 414, 415, 418, 0, 0, 416,
	417, 419, 420, 0, 421, 422, 424, 427, 423, 425,
	426, 428, 441, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 443, 0, 442, 0, 444,
	445, 446, 451, 453, 454, 449, 450, 452, 455, 456,
	448, 0, 447, 0, 0, 0, 457, 458, 0, 643,
	459, 644, 461, 462, 0, 0, 463, 0, 0, 0,
	465, 466, 467, 0, 0, 468, 469, 645, 0, 470,
	0, 646, 471, 472, 464, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 0, 482, 483, 647, 484, 485,
	486, 648, 487, 488, 489, 649, 490, 650, 491, 492,
	0, 493, 494, 0, 495, 496, 497, 498, 499, 500,
	501, 651, 502, 504, 503, 505, 0, 506, 0, 507,
	508, 509, 0, 0, 0, 0, 510, 0, 512, 513,
	514, 515, 511, 516, 517, 518, 519, 0, 520, 521,
	522, 0, 523, 524, 525, 526, 652, 527, 0, 528,
	529, 535, 536, 530, 531, 537, 538, 539, 540, 541,
	0, 543, 544, 542, 545, 546, 547, 0, 548, 549,
	532, 533, 550, 551, 0, 552, 553, 554, 555, 556,
	557, 653, 0, 558, 0, 559, 560, 561, 563, 534,
	564, 569, 570, 654, 565, 566, 567, 568, 655, 572,
	573, 0, 574, 575, 0, 571, 562, 0, 576, 577,
	578, 579, 580, 581, 582, 354, 583, 0, 584, 656,
	657, 658, 659, 0, 593, 0, 585, 586, 587, 660,
	588, 661, 0, 589, 590, 591, 592, 0, 594, 595,
	0, 0, 596, 597, 598, 600, 601, 599, 602, 0,
	603, 0, 0, 604, 605, 606, 662, 663, 664, 0,
	608, 607, 609, 665, 0, 879, 0, 786, 0, 610,
	611, 666, 612, 613, 614, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 270, 272, 271, 273, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 2235,
	615, 0, 0, 0, 0, 280, 281, 0, 282, 283,
	284, 285, 286, 287, 616, 617, 0, 288, 618, 289,
	619, 0, 620, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 621, 622, 623, 0, 297, 298, 624,
	0, 0, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 323, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 793, 328, 0, 329, 625, 626,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 627, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 628, 629,
	360, 0, 267, 0, 0, 0, 0, 0, 361, 362,
	363, 630, 0, 0, 0, 364, 0, 365, 0, 877,
	0, 366, 367, 631, 632, 368, 369, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 633, 0, 634, 378,
	0, 379, 380, 381, 382, 383, 635, 636, 637, 460,
	0, 384, 385, 0, 386, 387, 388, 389, 0, 0,
	0, 268, 390, 391, 392, 394, 0, 0, 393, 638,
	639, 0, 640, 0, 395, 396, 0, 641, 0, 397,
	398, 399, 0, 400, 0, 0, 0, 401, 402, 403,
	404, 405, 406, 0, 407, 409, 408, 0, 410, 642,
	0, 411, 412, 0, 0, 413, 0, 0, 0, 414,
	415, 418, 0, 0, 416, 417, 419, 420, 0, 421,
	422, 424, 427, 423, 425, 426, 428, 441, 429, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	443, 0, 442, 0, 444, 445, 446, 451, 453, 454,
	449, 450, 452, 455, 456, 448, 0, 447, 0, 269,
	0, 457, 458, 0, 643, 459, 644, 461, 462, 0,
	0, 463, 0, 0, 0, 465, 466, 467, 0, 0,
	468, 469, 645, 0, 470, 0, 646, 471, 472, 464,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 0,
	482, 483, 647, 484, 485, 486, 648, 487, 488, 489,
	649, 490, 650, 491, 492, 0, 493, 494, 0, 495,
	496, 497, 498, 499, 500, 501, 651, 502, 504, 503,
	505, 0, 506, 0, 507, 508, 509, 0, 0, 0,
	0, 510, 0, 512, 513, 514, 515, 511, 516, 517,
	518, 519, 0, 520, 521, 522, 0, 523, 524, 525,
	526, 652, 527, 0, 528, 529, 535, 536, 530, 531,
	537, 538, 539, 540, 541, 0, 543, 544, 542, 545,
	546, 547, 0, 548, 549, 532, 533, 550, 551, 0,
	552, 553, 554, 555, 556, 557, 653, 0, 558, 0,
	559, 560, 561, 563, 534, 564, 569, 570, 654, 565,
	566, 567, 568, 655, 572, 573, 0, 574, 575, 0,
	571, 562, 791, 576, 577, 578, 579, 580, 792, 582,
	354, 583, 0, 584, 656, 657, 658, 659, 0, 593,
	0, 585, 586, 587, 660, 588, 661, 0, 589, 590,
	591, 592, 0, 594, 595, 0, 0, 596, 597, 598,
	600, 601, 599, 602, 0, 603, 0, 0, 604, 605,
	606, 662, 663, 664, 0, 608, 607, 609, 665, 0,
	784, 0, 786, 0, 610, 611, 666, 612, 613, 614,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 270,
	272, 271, 273, 274, 275, 276, 277, 796, 278, 279,
	0, 0, 0, 0, 0, 615, 0, 0, 0, 0,
	280, 281, 0, 282, 283, 284, 285, 286, 287, 616,
	617, 0, 288, 618, 289, 619, 0, 620, 290, 291,
	292, 293, 294, 295, 0, 0, 0, 296, 621, 622,
	623, 0, 297, 298, 624, 0, 0, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 0, 321, 322, 323, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 326, 793,
	328, 0, 329, 625, 626, 0, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	340, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 627, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 628, 629, 360, 0, 267, 0, 0,
	0, 0, 0, 361, 362, 363, 630, 0, 0, 0,
	364, 0, 365, 0, 0, 0, 366, 367, 631, 632,
	368, 369, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 633, 0, 634, 378, 0, 379, 380, 381, 382,
	383, 635, 636, 637, 460, 0, 384, 385, 0, 386,
	387, 388, 389, 0, 0, 0, 268, 390, 391, 392,
	394, 0, 0, 393, 638, 639, 0, 640, 0, 395,
	396, 0, 641, 0, 397, 398, 399, 0, 400, 0,
	0, 0, 401, 402, 403, 404, 405, 406, 0, 407,
	409, 408, 0, 410, 642, 0, 411, 412, 0, 0,
	413, 0, 0, 0, 414, 415, 418, 0, 0, 416,
	417, 419, 420, 0, 421, 422, 424, 427, 423, 425,
	426, 428, 441, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 443, 0, 442, 0, 444,
	445, 446, 451, 453, 454, 449, 450, 452, 455, 456,
	448, 0, 447, 0, 269, 0, 457, 458, 0, 643,
	459, 644, 461, 462, 0, 0, 463, 0, 0, 0,
	465, 466, 467, 0, 0, 468, 469, 645, 0, 470,
	0, 646, 471, 472, 464, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 0, 482, 483, 647, 484, 485,
	486, 648, 487, 488, 489, 649, 490, 650, 491, 492,
	0, 493, 494, 0, 495, 496, 497, 498, 499, 500,
	501, 651, 502, 504, 503, 505, 0, 506, 0, 507,
	508, 509, 0, 0, 0, 0, 510, 0, 512, 513,
	514, 515, 511, 516, 517, 518, 519, 0, 520, 521,
	522, 0, 523, 524, 525, 526, 652, 527, 0, 528,
	529, 535, 536, 530, 531, 537, 538, 539, 540, 541,
	0, 543, 544, 542, 545, 546, 547, 0, 548, 549,
	532, 533, 550, 551, 0, 552, 553, 554, 555, 556,
	557, 653, 0, 558, 0, 559, 560, 561, 563, 534,
	564, 569, 570, 654, 565, 566, 567, 568, 655, 572,
	573, 0, 574, 575, 0, 571, 562, 791, 576, 577,
	578, 579, 580, 792, 582, 354, 583, 0, 584, 656,
	657, 658, 659, 0, 593, 0, 585, 586, 587, 660,
	588, 661, 0, 589, 590, 591, 592, 0, 594, 595,
	0, 0, 596, 597, 598, 600, 601, 599, 602, 0,
	603, 0, 0, 604, 605, 606, 662, 663, 664, 1957,
	608, 607, 609, 665, 0, 0, 0, 0, 0, 610,
	611, 666, 612, 613, 614, 0, 270, 272, 271, 273,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 796, 0, 0, 0, 0, 280, 281, 1155,
	282, 283, 284, 285, 286, 287, 0, 1963, 0, 288,
	1953, 289, 1969, 0, 1976, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 1979, 1980, 0, 0, 297,
	298, 0, 0, 1299, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 1156, 321, 322, 323, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 327, 328, 1138, 329,
	1967, 1966, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 1123, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 0,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	0, 0, 360, 0, 0, 0, 0, 0, 0, 0,
	361, 362, 363, 1965, 0, 0, 0, 364, 0, 365,
	0, 0, 1157, 366, 367, 1974, 1975, 368, 369, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 0, 0,
	0, 378, 0, 379, 380, 381, 382, 383, 0, 0,
	0, 460, 1159, 384, 385, 0, 386, 387, 388, 389,
	0, 0, 0, 0, 390, 391, 392, 394, 0, 1158,
	393, 1960, 1961, 0, 1956, 0, 395, 396, 1160, 0,
	1161, 397, 398, 399, 1162, 400, 0, 0, 0, 401,
	402, 403, 404, 405, 406, 0, 407, 409, 408, 0,
	410, 0, 1163, 411, 412, 1164, 0, 413, 0, 0,
	0, 414, 415, 418, 0, 0, 416, 417, 419, 420,
	0, 421, 422, 424, 427, 423, 425, 426, 428, 441,
	429, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 443, 0, 442, 1165, 444, 445, 446, 451,
	453, 454, 449, 450, 452, 455, 456, 448, 1166, 447,
	0, 0, 1167, 457, 458, 0, 0, 459, 1968, 461,
	462, 0, 0, 463, 0, 0, 0, 465, 466, 467,
	0, 0, 468, 469, 0, 1168, 470, 1169, 0, 471,
	472, 464, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 0, 482, 483, 1950, 484, 485, 486, 1951, 487,
	488, 489, 0, 490, 0, 491, 492, 0, 493, 494,
	0, 495, 496, 497, 498, 499, 500, 501, 1964, 502,
	504, 503, 505, 0, 506, 0, 507, 508, 509, 0,
	0, 0, 0, 510, 0, 512, 513, 514, 515, 511,
	516, 517, 518, 519, 0, 520, 521, 522, 1170, 523,
	524, 525, 526, 0, 527, 0, 528, 529, 535, 536,
	530, 531, 537, 538, 539, 540, 541, 0, 543, 544,
	542, 545, 546, 547, 0, 548, 549, 532, 533, 550,
	551, 1171, 552, 553, 554, 555, 556, 557, 1962, 0,
	558, 0, 559, 560, 561, 563, 534, 564, 569, 570,
	1978, 565, 566, 567, 568, 0, 572, 573, 0, 574,
	575, 0, 571, 562, 0, 576, 577, 578, 579, 580,
	581, 582, 354, 583, 0, 584, 1970, 1971, 1972, 1973,
	0, 593, 0, 585, 586, 587, 0, 588, 0, 0,
	589, 590, 591, 592, 0, 594, 595, 0, 0, 596,
	597, 598, 600, 601, 599, 602, 0, 603, 0, 0,
	604, 605, 606, 0, 1954, 1977, 0, 608, 607, 609,
	786, 0, 0, 0, 0, 0, 610, 611, 0, 612,
	613, 614, 0, 0, 0, 0, 0, 270, 272, 271,
	273, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 615, 0, 0, 0, 0, 280, 281,
	1944, 282, 283, 284, 285, 286, 287, 616, 617, 0,
	288, 618, 289, 619, 0, 620, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 621, 622, 623, 0,
	297, 298, 624, 0, 0, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 323, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 326, 793, 328, 0,
	329, 625, 626, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	627, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 628, 629, 360, 0, 267, 0, 0, 0, 0,
	0, 361, 362, 363, 630, 0, 0, 0, 364, 0,
	365, 0, 0, 0, 366, 367, 631, 632, 368, 369,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 633,
	0, 634, 378, 0, 379, 380, 381, 382, 383, 635,
	636, 637, 460, 0, 384, 385, 0, 386, 387, 388,
	389, 0, 0, 0, 268, 390, 391, 392, 394, 0,
	0, 393, 638, 639, 0, 640, 0, 395, 396, 0,
	641, 0, 397, 398, 399, 0, 400, 0, 0, 0,
	401, 402, 403, 404, 405, 406, 0, 407, 409, 408,
	0, 410, 642, 0, 411, 412, 0, 0, 413, 0,
	0, 0, 414, 415, 418, 0, 0, 416, 417, 419,
	420, 0, 421, 422, 424, 427, 423, 425, 426, 428,
	441, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 443, 0, 442, 0, 444, 445, 446,
	451, 453, 454, 449, 450, 452, 455, 456, 448, 0,
	447, 0, 269, 0, 457, 458, 0, 643, 459, 644,
	461, 462, 0, 0, 463, 0, 0, 0, 465, 466,
	467, 0, 0, 468, 469, 645, 0, 470, 0, 646,
	471, 472, 464, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 0, 482, 483, 647, 484, 485, 486, 648,
	487, 488, 489, 649, 490, 650, 491, 492, 0, 493,
	494, 0, 495, 496, 497, 498, 499, 500, 501, 651,
	502, 504, 503, 505, 0, 506, 0, 507, 508, 509,
	0, 0, 0, 0, 510, 0, 512, 513, 514, 515,
	511, 516, 517, 518, 519, 0, 520, 521, 522, 0,
	523, 524, 525, 526, 652, 527, 0, 528, 529, 535,
	536, 530, 531, 537, 538, 539, 540, 541, 0, 543,
	544, 542, 545, 546, 547, 0, 548, 549, 532, 533,
	550, 551, 0, 552, 553, 554, 555, 556, 557, 653,
	0, 558, 0, 559, 560, 561, 563, 534, 564, 569,
	570, 654, 565, 566, 567, 568, 655, 572, 573, 0,
	574, 575, 0, 571, 562, 791, 576, 577, 578, 579,
	580, 792, 582, 354, 583, 0, 584, 656, 657, 658,
	659, 0, 593, 0, 585, 586, 587, 660, 588, 661,
	0, 589, 590, 591, 592, 0, 594, 595, 0, 0,
	596, 597, 598, 600, 601, 599, 602, 0, 603, 0,
	0, 604, 605, 606, 662, 663, 664, 0, 608, 607,
	609, 665, 786, 0, 0, 0, 0, 610, 611, 666,
	612, 613, 614, 0, 0, 0, 0, 0, 0, 270,
	272, 271, 273, 274, 275, 276, 277, 0, 278, 279,
	796, 0, 0, 0, 0, 615, 0, 0, 0, 0,
	280, 281, 0, 282, 283, 284, 285, 286, 287, 616,
	617, 0, 288, 618, 289, 619, 0, 620, 290, 291,
	292, 293, 294, 295, 0, 0, 0, 296, 621, 622,
	623, 0, 297, 298, 624, 0, 0, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 0, 321, 322, 323, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 326, 793,
	328, 0, 329, 625, 626, 0, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	340, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 627, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 628, 629, 360, 0, 267, 0, 0,
	0, 0, 0, 361, 362, 363, 630, 0, 0, 0,
	364, 0, 365, 0, 0, 0, 366, 367, 631, 632,
	368, 369, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 633, 0, 634, 378, 0, 379, 380, 381, 382,
	383, 635, 636, 637, 460, 0, 384, 385, 0, 386,
	387, 388, 389, 0, 0, 0, 268, 390, 391, 392,
	394, 0, 0, 393, 638, 639, 0, 640, 0, 395,
	396, 0, 641, 0, 397, 398, 399, 0, 400, 0,
	0, 0, 401, 402, 403, 404, 405, 406, 0, 407,
	409, 408, 0, 410, 642, 0, 411, 412, 0, 0,
	413, 0, 0, 0, 414, 415, 418, 0, 0, 416,
	417, 419, 420, 0, 421, 422, 424, 427, 423, 425,
	426, 428, 441, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 443, 0, 442, 0, 444,
	445, 446, 451, 453, 454, 449, 450, 452, 455, 456,
	448, 0, 447, 0, 269, 0, 457, 458, 0, 643,
	459, 644, 461, 462, 0, 0, 463, 0, 0, 0,
	465, 466, 467, 0, 0, 468, 469, 645, 0, 470,
	0, 646, 471, 472, 464, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 0, 482, 483, 647, 484, 485,
	486, 648, 487, 488, 489, 649, 490, 650, 491, 492,
	0, 493, 494, 0, 495, 496, 497, 498, 499, 500,
	501, 651, 502, 504, 503, 505, 0, 506, 0, 507,
	508, 509, 0, 0, 0, 0, 510, 0, 512, 513,
	514, 515, 511, 516, 517, 518, 519, 0, 520, 521,
	522, 0, 2278, 524, 525, 526, 652, 527, 0, 528,
	529, 535, 536, 530, 531, 2279, 538, 539, 540, 541,
	0, 543, 544, 542, 545, 546, 547, 0, 548, 549,
	532, 533, 550, 551, 0, 552, 553, 554, 555, 556,
	557, 653, 0, 558, 0, 559, 560, 561, 563, 534,
	564, 569, 570, 654, 565, 566, 567, 568, 655, 572,
	573, 0, 574, 575, 0, 571, 562, 791, 576, 577,
	578, 579, 580, 792, 582, 354, 583, 0, 584, 656,
	657, 658, 659, 0, 593, 0, 585, 586, 587, 660,
	588, 661, 0, 589, 590, 2280, 592, 0, 594, 595,
	0, 0, 596, 597, 598, 600, 601, 599, 602, 0,
	603, 0, 0, 604, 605, 606, 662, 663, 664, 0,
	608, 607, 609, 665, 0, 2027, 0, 1294, 1994, 610,
	611, 666, 612, 613, 614, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 270, 272, 271, 273, 274, 275,
	276, 277, 796, 278, 279, 0, 0, 0, 0, 0,
	615, 0, 0, 0, 0, 280, 281, 1155, 282, 283,
	284, 285, 286, 287, 616, 617, 0, 288, 618, 289,
	619, 0, 620, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 621, 622, 623, 0, 297, 298, 624,
	0, 1299, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	1156, 321, 322, 323, 0, 0, 0, 0, 0, 0,
	1991, 324, 325, 326, 327, 328, 0, 329, 625, 626,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 627, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 628, 629,
	360, 0, 267, 0, 0, 0, 0, 0, 361, 362,
	363, 630, 0, 0, 0, 364, 0, 365, 0, 0,
	1157, 366, 367, 631, 632, 368, 369, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 633, 0, 634, 378,
	0, 379, 380, 381, 382, 383, 635, 636, 637, 460,
	1159, 384, 385, 0, 386, 387, 388, 389, 0, 0,
	0, 0, 390, 391, 392, 394, 0, 1158, 393, 638,
	639, 0, 640, 0, 395, 396, 1160, 641, 1161, 397,
	398, 399, 1162, 400, 0, 0, 0, 401, 402, 403,
	404, 405, 406, 0, 407, 409, 408, 0, 410, 642,
	1163, 411, 412, 1164, 0, 413, 0, 0, 0, 414,
	415, 418, 0, 0, 416, 417, 419, 420, 0, 421,
	422, 424, 427, 423, 425, 426, 428, 441, 429, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	443, 0, 442, 1165, 444, 445, 446, 451, 453, 454,
	449, 450, 452, 455, 456, 448, 1166, 447, 0, 0,
	1167, 457, 458, 0, 643, 459, 644, 461, 462, 0,
	0, 463, 0, 0, 0, 465, 466, 467, 0, 0,
	468, 469, 645, 1168, 470, 1169, 646, 471, 472, 464,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 0,
	482, 483, 647, 484, 485, 486, 648, 487, 488, 489,
	649, 490, 650, 491, 492, 0, 493, 494, 0, 495,
	496, 497, 498, 499, 500, 501, 651, 502, 504, 503,
	505, 0, 506, 0, 507, 508, 509, 0, 0, 0,
	0, 510, 0, 512, 513, 514, 515, 511, 516, 517,
	518, 519, 0, 520, 521, 522, 1170, 523, 524, 525,
	526, 652, 527, 0, 528, 529, 535, 536, 530, 531,
	537, 538, 539, 540, 541, 0, 543, 544, 542, 545,
	546, 547, 1992, 548, 549, 532, 533, 550, 551, 1171,
	552, 553, 554, 555, 556, 557, 653, 0, 558, 0,
	559, 560, 561, 563, 534, 564, 569, 570, 654, 565,
	566, 567, 568, 655, 572, 573, 0, 574, 575, 0,
	571, 562, 0, 576, 577, 578, 579, 580, 581, 582,
	354, 583, 0, 584, 656, 657, 658, 659, 0, 593,
	0, 585, 586, 587, 660, 588, 661, 0, 589, 590,
	591, 592, 0, 594, 595, 0, 0, 596, 597, 598,
	600, 601, 599, 602, 0, 603, 0, 0, 604, 605,
	606, 662, 663, 664, 0, 608, 607, 609, 665, 1988,
	0, 1294, 1994, 0, 610, 611, 666, 612, 613, 614,
	0, 0, 0, 0, 0, 0, 0, 0, 270, 272,
	271, 273, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 615, 0, 0, 0, 0, 280,
	281, 1155, 282, 283, 284, 285, 286, 287, 616, 617,
	0, 288, 618, 289, 619, 0, 620, 290, 291, 292,
	293, 294, 295, 0, 0, 0, 296, 621, 622, 623,
	0, 297, 298, 624, 0, 1299, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 1156, 321, 322, 323, 0, 0,
	0, 0, 0, 0, 1991, 324, 325, 326, 327, 328,
	0, 329, 625, 626, 0, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 340,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 627, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 628, 629, 360, 0, 267, 0, 0, 0,
	0, 0, 361, 362, 363, 630, 0, 0, 0, 364,
	0, 365, 0, 0, 1157, 366, 367, 631, 632, 368,
	369, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	633, 0, 634, 378, 0, 379, 380, 381, 382, 383,
	635, 636, 637, 460, 1159, 384, 385, 0, 386, 387,
	388, 389, 0, 0, 0, 0, 390, 391, 392, 394,
	0, 1158, 393, 638, 639, 0, 640, 0, 395, 396,
	1160, 641, 1161, 397, 398, 399, 1162, 400, 0, 0,
	0, 401, 402, 403, 404, 405, 406, 0, 407, 409,
	408, 0, 410, 642, 1163, 411, 412, 1164, 0, 413,
	0, 0, 0, 414, 415, 418, 0, 0, 416, 417,
	419, 420, 0, 421, 422, 424, 427, 423, 425, 426,
	428, 441, 429, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 443, 0, 442, 1165, 444, 445,
	446, 451, 453, 454, 449, 450, 452, 455, 456, 448,
	1166, 447, 0, 0, 1167, 457, 458, 0, 643, 459,
	644, 461, 462, 0, 0, 463, 0, 0, 0, 465,
	466, 467, 0, 0, 468, 469, 645, 1168, 470, 1169,
	646, 471, 472, 464, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 0, 482, 483, 647, 484, 485, 486,
	648, 487, 488, 489, 649, 490, 650, 491, 492, 0,
	493, 494, 0, 495, 496, 497, 498, 499, 500, 501,
	651, 502, 504, 503, 505, 0, 506, 0, 507, 508,
	509, 0, 0, 0, 0, 510, 0, 512, 513, 514,
	515, 511, 516, 517, 518, 519, 0, 520, 521, 522,
	1170, 523, 524, 525, 526, 652, 527, 0, 528, 529,
	535, 536, 530, 531, 537, 538, 539, 540, 541, 0,
	543, 544, 542, 545, 546, 547, 1992, 548, 549, 532,
	533, 550, 551, 1171, 552, 553, 554, 555, 556, 557,
	653, 0, 558, 0, 559, 560, 561, 563, 534, 564,
	569, 570, 654, 565, 566, 567, 568, 655, 572, 573,
	0, 574, 575, 0, 571, 562, 0, 576, 577, 578,
	579, 580, 581, 582, 354, 583, 0, 584, 656, 657,
	658, 659, 0, 593, 0, 585, 586, 587, 660, 588,
	661, 0, 589, 590, 591, 592, 0, 594, 595, 0,
	0, 596, 597, 598, 600, 601, 599, 602, 0, 603,
	0, 0, 604, 605, 606, 662, 663, 664, 786, 608,
	607, 609, 665, 0, 0, 0, 0, 0, 610, 611,
	666, 612, 613, 614, 0, 270, 272, 271, 273, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 615, 0, 0, 0, 0, 280, 281, 0, 282,
	283, 284, 285, 286, 287, 616, 617, 0, 288, 618,
	289, 619, 0, 620, 290, 291, 292, 293, 294, 295,
	0, 0, 0, 296, 621, 622, 623, 0, 297, 298,
	624, 0, 0, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 0, 321, 322, 323, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 326, 793, 328, 0, 329, 625,
	626, 0, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 340, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 627, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 628,
	629, 360, 0, 267, 0, 0, 0, 0, 0, 361,
	362, 363, 630, 0, 0, 0, 364, 0, 365, 0,
	0, 0, 366, 367, 631, 632, 368, 369, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 633, 0, 634,
	378, 0, 379, 380, 381, 382, 383, 635, 636, 637,
	460, 0, 384, 385, 0, 386, 387, 388, 389, 0,
	0, 0, 268, 390, 391, 392, 394, 0, 0, 393,
	638, 639, 0, 640, 0, 395, 396, 0, 641, 0,
	397, 398, 399, 0, 400, 0, 0, 0, 401, 402,
	403, 404, 405, 406, 0, 407, 409, 408, 0, 410,
	642, 0, 411, 412, 0, 0, 413, 0, 0, 0,
	414, 415, 418, 0, 0, 416, 417, 419, 420, 0,
	421, 422, 424, 427, 423, 425, 426, 428, 441, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 443, 0, 442, 0, 444, 445, 446, 451, 453,
	454, 449, 450, 452, 455, 456, 448, 0, 447, 0,
	269, 0, 457, 458, 0, 643, 459, 644, 461, 462,
	0, 0, 463, 0, 0, 0, 465, 466, 467, 0,
	0, 468, 469, 645, 0, 470, 0, 646, 471, 472,
	464, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	0, 482, 483, 647, 484, 485, 486, 648, 487, 488,
	489, 649, 490, 650, 491, 492, 0, 493, 494, 0,
	495, 496, 497, 498, 499, 500, 501, 651, 502, 504,
	503, 505, 0, 506, 0, 507, 508, 509, 0, 0,
	0, 0, 510, 0, 512, 513, 514, 515, 511, 516,
	517, 518, 519, 0, 520, 521, 522, 0, 523, 524,
	525, 526, 652, 527, 0, 528, 529, 535, 536, 530,
	531, 1983, 538, 539, 540, 541, 0, 1984, 544, 542,
	545, 546, 547, 0, 548, 549, 532, 533, 550, 551,
	0, 552, 553, 554, 555, 556, 557, 653, 0, 558,
	0, 559, 560, 561, 563, 534, 564, 569, 570, 654,
	565, 566, 567, 568, 655, 572, 573, 0, 574, 575,
	0, 571, 562, 791, 576, 577, 578, 579, 580, 792,
	582, 354, 583, 0, 584, 656, 657, 658, 659, 0,
	593, 0, 585, 586, 587, 660, 588, 661, 0, 589,
	590, 1982, 592, 0, 594, 595, 0, 0, 596, 597,
	598, 600, 601, 599, 602, 0, 603, 0, 0, 604,
	605, 606, 662, 663, 664, 0, 608, 607, 609, 665,
	786, 0, 0, 0, 0, 610, 611, 666, 612, 613,
	614, 0, 0, 0, 0, 0, 0, 270, 272, 271,
	273, 274, 275, 276, 277, 0, 278, 279, 796, 0,
	0, 0, 0, 615, 0, 0, 0, 0, 280, 281,
	0, 282, 283, 284, 285, 286, 287, 616, 617, 0,
	288, 618, 289, 619, 0, 620, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 621, 622, 623, 0,
	297, 298, 624, 0, 0, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 323, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 326, 793, 328, 0,
	329, 625, 626, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	627, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 628, 629, 360, 0, 267, 0, 0, 0, 0,
	0, 361, 362, 363, 630, 0, 0, 0, 364, 0,
	365, 0, 0, 0, 366, 367, 631, 632, 368, 369,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 633,
	0, 634, 378, 0, 379, 380, 381, 382, 383, 635,
	636, 637, 460, 0, 384, 385, 0, 386, 387, 388,
	389, 0, 0, 0, 268, 390, 391, 392, 394, 0,
	0, 393, 638, 639, 0, 640, 0, 395, 396, 0,
	641, 0, 397, 398, 399, 0, 400, 0, 0, 0,
	401, 402, 403, 404, 405, 406, 0, 407, 409, 408,
	0, 410, 642, 0, 411, 412, 0, 0, 413, 0,
	0, 0, 414, 415, 418, 0, 0, 416, 417, 419,
	420, 0, 421, 422, 424, 427, 423, 425, 426, 428,
	441, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 443, 0, 442, 0, 444, 445, 446,
	451, 453, 454, 449, 450, 452, 455, 456, 448, 0,
	447, 0, 269, 0, 457, 458, 0, 643, 459, 644,
	461, 462, 0, 0, 463, 0, 0, 0, 465, 466,
	467, 0, 0, 468, 469, 645, 0, 470, 0, 646,
	471, 472, 464, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 0, 482, 483, 647, 484, 485, 486, 648,
	487, 488, 489, 649, 490, 650, 491, 492, 0, 493,
	494, 0, 495, 496, 497, 498, 499, 500, 501, 651,
	502, 504, 503, 505, 0, 506, 0, 507, 508, 509,
	0, 0, 0, 0, 510, 0, 512, 513, 514, 515,
	511, 516, 517, 518, 519, 0, 520, 521, 522, 0,
	523, 524, 525, 526, 652, 527, 0, 528, 529, 535,
	536, 530, 531, 1935, 538, 539, 540, 541, 0, 1936,
	544, 542, 545, 546, 547, 0, 548, 549, 532, 533,
	550, 551, 0, 552, 553, 554, 555, 556, 557, 653,
	0, 558, 0, 559, 560, 561, 563, 534, 564, 569,
	570, 654, 565, 566, 567, 568, 655, 572, 573, 0,
	574, 575, 0, 571, 562, 791, 576, 577, 578, 579,
	580, 792, 582, 354, 583, 0, 584, 656, 657, 658,
	659, 0, 593, 0, 585, 586, 587, 660, 588, 661,
	0, 589, 590, 1934, 592, 0, 594, 595, 0, 0,
	596, 597, 598, 600, 601, 599, 602, 0, 603, 0,
	0, 604, 605, 606, 662, 663, 664, 0, 608, 607,
	609, 665, 1294, 1994, 0, 0, 0, 610, 611, 666,
	612, 613, 614, 0, 0, 0, 0, 0, 0, 270,
	272, 271, 273, 274, 275, 276, 277, 0, 278, 279,
	796, 0, 0, 0, 0, 615, 0, 0, 0, 0,
	280, 281, 1155, 282, 283, 284, 285, 286, 287, 616,
	617, 0, 288, 618, 289, 619, 0, 620, 290, 291,
	292, 293, 294, 295, 0, 0, 0, 296, 621, 622,
	623, 0, 297, 298, 624, 0, 1299, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 1156, 321, 322, 323, 0,
	0, 0, 0, 0, 0, 1991, 324, 325, 326, 327,
	328, 0, 329, 625, 626, 0, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	340, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 627, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 628, 629, 360, 0, 267, 0, 0,
	0, 0, 0, 361, 362, 363, 630, 0, 0, 0,
	364, 0, 365, 0, 0, 1157, 366, 367, 631, 632,
	368, 369, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 633, 0, 634, 378, 0, 379, 380, 381, 382,
	383, 635, 636, 637, 460, 1159, 384, 385, 0, 386,
	387, 388, 389, 0, 0, 0, 0, 390, 391, 392,
	394, 0, 1158, 393, 638, 639, 0, 640, 0, 395,
	396, 1160, 641, 1161, 397, 398, 399, 1162, 400, 0,
	0, 0, 401, 402, 403, 404, 405, 406, 0, 407,
	409, 408, 0, 410, 642, 1163, 411, 412, 1164, 0,
	413, 0, 0, 0, 414, 415, 418, 0, 0, 416,
	417, 419, 420, 0, 421, 422, 424, 427, 423, 425,
	426, 428, 441, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 443, 0, 442, 1165, 444,
	445, 446, 451, 453, 454, 449, 450, 452, 455, 456,
	448, 1166, 447, 0, 0, 1167, 457, 458, 0, 643,
	459, 644, 461, 462, 0, 0, 463, 0, 0, 0,
	465, 466, 467, 0, 0, 468, 469, 645, 1168, 470,
	1169, 646, 471, 472, 464, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 0, 482, 483, 647, 484, 485,
	486, 648, 487, 488, 489, 649, 490, 650, 491, 492,
	0, 493, 494, 0, 495, 496, 497, 498, 499, 500,
	501, 651, 502, 504, 503, 505, 0, 506, 0, 507,
	508, 509, 0, 0, 0, 0, 510, 0, 512, 513,
	514, 515, 511, 516, 517, 518, 519, 0, 520, 521,
	522, 1170, 523, 524, 525, 526, 652, 527, 0, 528,
	529, 535, 536, 530, 531, 537, 538, 539, 540, 541,
	0, 543, 544, 542, 545, 546, 547, 1992, 548, 549,
	532, 533, 550, 551, 1171, 552, 553, 554, 555, 556,
	557, 653, 0, 558, 0, 559, 560, 561, 563, 534,
	564, 569, 570, 654, 565, 566, 567, 568, 655, 572,
	573, 0, 574, 575, 0, 571, 562, 0, 576, 577,
	578, 579, 580, 581, 582, 354, 583, 0, 584, 656,
	657, 658, 659, 0, 593, 0, 585, 586, 587, 660,
	588, 661, 0, 589, 590, 591, 592, 0, 594, 595,
	0, 0, 596, 597, 598, 600, 601, 599, 602, 0,
	603, 0, 0, 604, 605, 606, 662, 663, 664, 0,
	608, 607, 609, 665, 0, 0, 0, 0, 0, 610,
	611, 666, 612, 613, 614, 1294, 1293, 0, 0, 0,
	0, 1291, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 270, 272, 271, 273, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 615, 0,
	0, 0, 0, 280, 281, 1155, 282, 283, 284, 285,
	286, 287, 616, 617, 0, 288, 618, 289, 619, 0,
	620, 290, 291, 292, 293, 294, 295, 0, 0, 0,
	296, 621, 622, 623, 0, 297, 298, 624, 0, 1299,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 1156, 321,
	322, 323, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 327, 328, 0, 329, 625, 626, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 627, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 628, 629, 360, 0,
	267, 0, 0, 0, 0, 0, 361, 362, 363, 630,
	0, 0, 0, 364, 0, 365, 0, 0, 1157, 366,
	367, 631, 632, 368, 369, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 633, 0, 634, 378, 0, 379,
	380, 381, 382, 383, 635, 636, 637, 460, 1159, 384,
	385, 0, 386, 387, 388, 389, 0, 0, 0, 0,
	390, 391, 392, 394, 0, 1158, 393, 638, 639, 0,
	640, 0, 395, 396, 1160, 641, 1161, 397, 398, 399,
	1162, 400, 0, 0, 0, 401, 402, 403, 404, 405,
	406, 0, 407, 409, 408, 0, 410, 642, 1163, 411,
	412, 1164, 0, 413, 0, 0, 0, 414, 415, 418,
	0, 0, 416, 417, 419, 420, 0, 421, 422, 424,
	427, 423, 425, 426, 428, 441, 429, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 443, 0,
	442, 1165, 444, 445, 446, 451, 453, 454, 449, 450,
	452, 455, 456, 448, 1166, 447, 0, 0, 1167, 457,
	458, 3768, 643, 459, 644, 461, 462, 0, 0, 463,
	0, 0, 0, 465, 466, 467, 0, 0, 468, 469,
	645, 1168, 470, 1169, 646, 471, 472, 464, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 0, 482, 483,
	647, 484, 485, 486, 648, 487, 488, 489, 649, 490,
	650, 491, 492, 0, 493, 494, 0, 495, 496, 497,
	498, 499, 500, 501, 651, 502, 504, 503, 505, 0,
	506, 0, 507, 508, 509, 0, 0, 0, 0, 510,
	0, 512, 513, 514, 515, 511, 516, 517, 518, 519,
	0, 520, 521, 522, 1170, 523, 524, 525, 526, 652,
	527, 0, 528, 529, 535, 536, 530, 531, 537, 538,
	539, 540, 541, 0, 543, 544, 542, 545, 546, 547,
	0, 548, 549, 532, 533, 550, 551, 1171, 552, 553,
	554, 555, 556, 557, 653, 0, 558, 0, 559, 560,
	561, 563, 534, 564, 569, 570, 654, 565, 566, 567,
	568, 655, 572, 573, 0, 574, 575, 0, 571, 562,
	0, 576, 577, 578, 579, 580, 581, 582, 354, 583,
	0, 584, 656, 657, 658, 659, 0, 593, 0, 585,
	586, 587, 660, 588, 661, 0, 589, 590, 591, 592,
	0, 594, 595, 0, 0, 596, 597, 598, 600, 601,
	599, 602, 0, 603, 0, 0, 604, 605, 606, 662,
	663, 664, 0, 608, 607, 609, 665, 0, 0, 0,
	0, 0, 610, 611, 666, 612, 613, 614, 1294, 1293,
	0, 0, 0, 0, 1291, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 270, 272, 271, 273, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 615, 0, 0, 0, 0, 280, 281, 1155, 282,
	283, 284, 285, 286, 287, 616, 617, 0, 288, 618,
	289, 619, 0, 620, 290, 291, 292, 293, 294, 295,
	0, 0, 0, 296, 621, 622, 623, 0, 297, 298,
	624, 0, 1299, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 1156, 321, 322, 323, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 326, 327, 328, 0, 329, 625,
	626, 0, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 340, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 627, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 628,
	629, 360, 0, 267, 0, 0, 0, 0, 0, 361,
	362, 363, 630, 0, 0, 0, 364, 0, 365, 0,
	0, 1157, 366, 367, 631, 632, 368, 369, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 633, 0, 634,
	378, 0, 379, 380, 381, 382, 383, 635, 636, 637,
	460, 1159, 384, 385, 0, 386, 387, 388, 389, 0,
	0, 0, 0, 390, 391, 392, 394, 0, 1158, 393,
	638, 639, 0, 640, 0, 395, 396, 1160, 641, 1161,
	397, 398, 399, 1162, 400, 0, 0, 0, 401, 402,
	403, 404, 405, 406, 0, 407, 409, 408, 0, 410,
	642, 1163, 411, 412, 1164, 0, 413, 0, 0, 0,
	414, 415, 418, 0, 0, 416, 417, 419, 420, 0,
	421, 422, 424, 427, 423, 425, 426, 428, 441, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 443, 0, 442, 1165, 444, 445, 446, 451, 453,
	454, 449, 450, 452, 455, 456, 448, 1166, 447, 0,
	0, 1167, 457, 458, 3386, 643, 459, 644, 461, 462,
	0, 0, 463, 0, 0, 0, 465, 466, 467, 0,
	0, 468, 469, 645, 1168, 470, 1169, 646, 471, 472,
	464, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	0, 482, 483, 647, 484, 485, 486, 648, 487, 488,
	489, 649, 490, 650, 491, 492, 0, 493, 494, 0,
	495, 496, 497, 498, 499, 500, 501, 651, 502, 504,
	503, 505, 0, 506, 0, 507, 508, 509, 0, 0,
	0, 0, 510, 0, 512, 513, 514, 515, 511, 516,
	517, 518, 519, 0, 520, 521, 522, 1170, 523, 524,
	525, 526, 652, 527, 0, 528, 529, 535, 536, 530,
	531, 537, 538, 539, 540, 541, 0, 543, 544, 542,
	545, 546, 547, 0, 548, 549, 532, 533, 550, 551,
	1171, 552, 553, 554, 555, 556, 557, 653, 0, 558,
	0, 559, 560, 561, 563, 534, 564, 569, 570, 654,
	565, 566, 567, 568, 655, 572, 573, 0, 574, 575,
	0, 571, 562, 0, 576, 577, 578, 579, 580, 581,
	582, 354, 583, 0, 584, 656, 657, 658, 659, 0,
	593, 0, 585, 586, 587, 660, 588, 661, 0, 589,
	590, 591, 592, 0, 594, 595, 0, 0, 596, 597,
	598, 600, 601, 599, 602, 0, 603, 0, 0, 604,
	605, 606, 662, 663, 664, 264, 608, 607, 609, 665,
	0, 0, 0, 0, 0, 610, 611, 666, 612, 613,
	614, 0, 270, 272, 271, 273, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 615, 0,
	0, 0, 0, 280, 281, 0, 282, 283, 284, 285,
	286, 287, 616, 617, 0, 288, 618, 289, 619, 0,
	620, 290, 291, 292, 293, 294, 295, 0, 0, 0,
	296, 621, 622, 623, 0, 297, 298, 624, 0, 0,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 323, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 327, 328, 0, 329, 625, 626, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 627, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 628, 629, 360, 0,
	267, 0, 0, 0, 0, 0, 361, 362, 363, 630,
	0, 0, 0, 364, 0, 365, 0, 0, 0, 366,
	367, 631, 632, 368, 369, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 633, 0, 634, 378, 0, 379,
	380, 381, 382, 383, 635, 636, 637, 460, 0, 384,
	385, 0, 386, 387, 388, 389, 0, 0, 0, 268,
	390, 391, 392, 394, 0, 0, 393, 638, 639, 0,
	640, 0, 395, 396, 0, 641, 0, 397, 398, 399,
	0, 400, 0, 0, 0, 401, 402, 403, 404, 405,
	406, 0, 407, 409, 408, 0, 410, 642, 0, 411,
	412, 0, 0, 413, 0, 0, 0, 414, 415, 418,
	0, 0, 416, 417, 419, 420, 0, 421, 422, 424,
	427, 423, 425, 426, 428, 441, 429, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 443, 0,
	442, 0, 444, 445, 446, 451, 453, 454, 449, 450,
	452, 455, 456, 448, 0, 447, 0, 269, 0, 457,
	458, 0, 643, 459, 644, 461, 462, 0, 0, 463,
	0, 0, 0, 465, 466, 467, 0, 0, 468, 469,
	645, 0, 470, 0, 646, 471, 472, 464, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 0, 482, 483,
	647, 484, 485, 486, 648, 487, 488, 489, 649, 490,
	650, 491, 492, 0, 493, 494, 0, 495, 496, 497,
	498, 499, 500, 501, 651, 502, 504, 503, 505, 0,
	506, 0, 507, 508, 509, 0, 0, 0, 0, 510,
	0, 512, 513, 514, 515, 511, 516, 517, 518, 519,
	0, 520, 521, 522, 0, 523, 524, 525, 526, 652,
	527, 0, 528, 529, 535, 536, 530, 531, 537, 538,
	539, 540, 541, 0, 543, 544, 542, 545, 546, 547,
	0, 548, 549, 532, 533, 550, 551, 0, 552, 553,
	554, 555, 556, 557, 653, 0, 558, 0, 559, 560,
	561, 563, 534, 564, 569, 570, 654, 565, 566, 567,
	568, 655, 572, 573, 0, 574, 575, 0, 571, 562,
	0, 576, 577, 578, 579, 580, 581, 582, 354, 583,
	0, 584, 656, 657, 658, 659, 0, 593, 0, 585,
	586, 587, 660, 588, 661, 0, 589, 590, 591, 592,
	0, 594, 595, 0, 0, 596, 597, 598, 600, 601,
	599, 602, 0, 603, 0, 0, 604, 605, 606, 662,
	663, 664, 0, 608, 607, 609, 665, 0, 0, 0,
	0, 0, 610, 611, 666, 612, 613, 614, 1618, 0,
	1294, 1293, 0, 0, 0, 0, 1291, 0, 0, 0,
	0, 0, 0, 0, 0, 796, 0, 270, 272, 271,
	273, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 615, 0, 0, 0, 0, 280, 281,
	1155, 282, 283, 284, 285, 286, 287, 616, 617, 0,
	288, 618, 289, 619, 0, 620, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 621, 622, 623, 0,
	297, 298, 624, 0, 1299, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 1156, 321, 322, 323, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 326, 327, 328, 0,
	329, 625, 626, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	627, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 628, 629, 360, 0, 267, 0, 0, 0, 0,
	0, 1617, 362, 363, 630, 0, 0, 0, 364, 0,
	365, 0, 0, 1157, 366, 367, 631, 632, 368, 369,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 633,
	0, 634, 378, 0, 379, 380, 381, 382, 383, 635,
	636, 637, 460, 1159, 384, 385, 0, 386, 387, 388,
	389, 0, 0, 0, 0, 390, 391, 392, 394, 0,
	1158, 393, 638, 639, 0, 640, 0, 395, 396, 1160,
	641, 1161, 397, 398, 399, 1162, 400, 0, 0, 0,
	401, 402, 403, 404, 405, 406, 0, 407, 409, 408,
	0, 410, 642, 1163, 411, 412, 1164, 0, 413, 0,
	0, 0, 414, 415, 418, 0, 0, 416, 417, 419,
	420, 0, 421, 422, 424, 427, 423, 425, 426, 428,
	441, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 443, 0, 442, 1165, 444, 445, 446,
	451, 453, 454, 449, 450, 452, 455, 456, 448, 1166,
	447, 0, 0, 1167, 457, 458, 0, 643, 459, 644,
	461, 462, 0, 0, 463, 0, 0, 0, 465, 466,
	467, 0, 0, 468, 469, 645, 1168, 470, 1169, 646,
	471, 472, 464, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 0, 482, 483, 647, 484, 485, 486, 648,
	487, 488, 489, 649, 490, 650, 491, 492, 0, 493,
	494, 0, 495, 496, 497, 498, 499, 1616, 501, 651,
	502, 504, 503, 505, 0, 506, 0, 507, 508, 509,
	0, 0, 0, 0, 510, 0, 512, 513, 514, 515,
	511, 516, 517, 518, 519, 0, 520, 521, 522, 1170,
	523, 524, 525, 526, 652, 527, 0, 528, 529, 535,
	536, 530, 531, 537, 1615, 539, 540, 541, 0, 543,
	544, 542, 545, 546, 547, 0, 548, 549, 532, 533,
	550, 551, 1171, 552, 553, 554, 555, 556, 557, 653,
	0, 558, 0, 559, 560, 561, 563, 534, 564, 569,
	570, 654, 565, 566, 567, 568, 655, 572, 573, 0,
	574, 575, 0, 571, 562, 0, 576, 577, 578, 579,
	580, 581, 582, 354, 583, 0, 584, 656, 657, 658,
	659, 0, 593, 0, 585, 586, 587, 660, 588, 661,
	0, 589, 590, 591, 592, 0, 594, 595, 0, 0,
	596, 597, 598, 600, 601, 599, 602, 0, 603, 0,
	0, 604, 605, 606, 662, 663, 664, 0, 608, 607,
	609, 665, 0, 0, 0, 0, 0, 610, 611, 666,
	612, 613, 614, 1536, 0, 1294, 1293, 0, 0, 0,
	0, 1291, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 270, 272, 271, 273, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 615, 0,
	0, 0, 0, 280, 281, 1155, 282, 283, 284, 285,
	286, 287, 616, 617, 0, 288, 618, 289, 619, 0,
	620, 290, 291, 292, 293, 294, 295, 0, 0, 0,
	296, 621, 622, 623, 0, 297, 298, 624, 0, 1299,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 1156, 321,
	322, 323, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 327, 328, 0, 329, 625, 626, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 627, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 628, 629, 360, 0,
	267, 0, 0, 0, 0, 0, 361, 362, 363, 630,
	0, 0, 0, 364, 0, 365, 0, 0, 1157, 366,
	367, 631, 632, 368, 369, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 633, 0, 634, 378, 0, 379,
	380, 381, 382, 383, 1535, 636, 637, 460, 1159, 384,
	385, 0, 386, 387, 388, 389, 0, 0, 0, 0,
	390, 391, 392, 394, 0, 1158, 393, 638, 639, 0,
	640, 0, 395, 396, 1160, 641, 1161, 397, 398, 399,
	1162, 400, 0, 0, 0, 401, 402, 403, 404, 405,
	406, 0, 407, 409, 408, 0, 410, 642, 1163, 411,
	412, 1164, 0, 413, 0, 0, 0, 414, 415, 418,
	0, 0, 416, 417, 419, 420, 0, 421, 422, 424,
	427, 423, 425, 426, 428, 441, 429, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 443, 0,
	442, 1165, 444, 445, 446, 451, 453, 454, 449, 450,
	452, 455, 456, 448, 1166, 447, 0, 0, 1167, 457,
	458, 0, 643, 459, 644, 461, 462, 0, 0, 463,
	0, 0, 0, 465, 466, 467, 0, 0, 468, 469,
	645, 1168, 470, 1169, 646, 471, 472, 464, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 0, 482, 483,
	647, 484, 485, 486, 648, 487, 488, 489, 649, 490,
	650, 491, 492, 0, 493, 494, 0, 495, 496, 497,
	498, 499, 500, 501, 651, 502, 504, 503, 505, 0,
	506, 0, 507, 508, 509, 0, 0, 0, 0, 510,
	0, 512, 513, 514, 515, 511, 516, 517, 518, 519,
	0, 520, 521, 522, 1170, 523, 524, 525, 526, 652,
	527, 0, 528, 529, 535, 536, 530, 531, 537, 538,
	539, 540, 541, 0, 543, 544, 542, 545, 546, 547,
	0, 548, 549, 532, 533, 550, 551, 1171, 552, 553,
	554, 555, 556, 557, 653, 0, 558, 0, 559, 560,
	561, 563, 534, 564, 569, 570, 654, 565, 566, 567,
	568, 655, 572, 573, 0, 574, 575, 0, 571, 562,
	0, 576, 577, 578, 579, 580, 581, 582, 354, 583,
	0, 584, 656, 657, 658, 659, 0, 593, 0, 585,
	586, 587, 660, 588, 661, 0, 589, 590, 591, 592,
	0, 594, 595, 0, 0, 596, 597, 598, 600, 601,
	599, 602, 0, 603, 0, 0, 604, 605, 606, 662,
	663, 664, 0, 608, 607, 609, 665, 0, 0, 0,
	0, 0, 610, 611, 666, 612, 613, 614, 1496, 0,
	1294, 1293, 0, 0, 0, 0, 1291, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 270, 272, 271,
	273, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 615, 0, 0, 0, 0, 280, 281,
	1155, 282, 283, 284, 285, 286, 287, 616, 617, 0,
	288, 618, 289, 619, 0, 620, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 621, 622, 623, 0,
	297, 298, 624, 0, 1299, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 1156, 321, 322, 323, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 326, 327, 328, 0,
	329, 625, 626, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	627, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 628, 629, 360, 0, 267, 0, 0, 0, 0,
	0, 361, 362, 363, 630, 0, 0, 0, 364, 0,
	365, 0, 0, 1157, 366, 367, 631, 632, 368, 369,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 633,
	0, 634, 378, 0, 379, 380, 381, 382, 383, 635,
	636, 637, 460, 1159, 384, 385, 0, 386, 387, 388,
	389, 0, 0, 0, 0, 390, 391, 392, 394, 0,
	1158, 393, 638, 639, 0, 640, 0, 395, 396, 1160,
	641, 1161, 397, 398, 399, 1162, 400, 0, 0, 0,
	401, 402, 403, 404, 405, 406, 0, 407, 409, 408,
	0, 410, 642, 1163, 411, 412, 1164, 0, 413, 0,
	0, 0, 414, 415, 418, 0, 0, 416, 417, 419,
	420, 0, 421, 422, 424, 427, 423, 425, 426, 428,
	441, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 443, 0, 442, 1165, 444, 445, 446,
	451, 453, 454, 449, 450, 452, 455, 456, 448, 1166,
	447, 0, 0, 1167, 457, 458, 0, 643, 459, 644,
	461, 462, 0, 0, 463, 0, 0, 0, 465, 466,
	467, 0, 0, 468, 469, 645, 1168, 470, 1169, 646,
	471, 472, 464, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 0, 482, 483, 647, 484, 485, 486, 648,
	487, 488, 489, 649, 490, 650, 491, 492, 0, 493,
	494, 0, 495, 496, 497, 498, 499, 500, 501, 651,
	502, 504, 503, 505, 0, 506, 0, 507, 508, 509,
	0, 0, 0, 0, 510, 0, 512, 513, 514, 515,
	511, 516, 517, 518, 519, 0, 520, 521, 522, 1170,
	523, 524, 525, 526, 652, 527, 0, 528, 529, 535,
	536, 530, 531, 537, 538, 539, 540, 541, 0, 543,
	544, 542, 545, 546, 547, 0, 548, 549, 532, 533,
	550, 551, 1171, 552, 553, 554, 555, 556, 557, 653,
	0, 558, 0, 559, 560, 561, 563, 534, 564, 569,
	570, 654, 565, 566, 567, 568, 655, 572, 573, 0,
	574, 575, 0, 571, 562, 0, 576, 577, 578, 579,
	580, 581, 582, 354, 583, 0, 584, 656, 657, 658,
	659, 0, 593, 0, 585, 586, 587, 660, 588, 661,
	0, 589, 590, 591, 592, 0, 594, 595, 0, 0,
	596, 597, 598, 600, 601, 599, 602, 0, 603, 0,
	0, 604, 605, 606, 662, 663, 664, 0, 608, 607,
	609, 665, 0, 0, 0, 0, 0, 610, 611, 666,
	612, 613, 614, 1464, 0, 1294, 1293, 0, 0, 0,
	0, 1291, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 270, 272, 271, 273, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 615, 0,
	0, 0, 0, 280, 281, 1155, 282, 283, 284, 285,
	286, 287, 616, 617, 0, 288, 618, 289, 619, 0,
	620, 290, 291, 292, 293, 294, 295, 0, 0, 0,
	296, 621, 622, 623, 0, 297, 298, 624, 0, 1299,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 1156, 321,
	322, 323, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 327, 328, 0, 329, 625, 626, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 627, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 628, 629, 360, 0,
	267, 0, 0, 0, 0, 0, 361, 362, 363, 630,
	0, 0, 0, 364, 0, 365, 0, 0, 1157, 366,
	367, 631, 632, 368, 369, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 633, 0, 634, 378, 0, 379,
	380, 381, 382, 383, 1463, 636, 637, 460, 1159, 384,
	385, 0, 386, 387, 388, 389, 0, 0, 0, 0,
	390, 391, 392, 394, 0, 1158, 393, 638, 639, 0,
	640, 0, 395, 396, 1160, 641, 1161, 397, 398, 399,
	1162, 400, 0, 0, 0, 401, 402, 403, 404, 405,
	406, 0, 407, 409, 408, 0, 410, 642, 1163, 411,
	412, 1164, 0, 413, 0, 0, 0, 414, 415, 418,
	0, 0, 416, 417, 419, 420, 0, 421, 422, 424,
	427, 423, 425, 426, 428, 441, 429, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 443, 0,
	442, 1165, 444, 445, 446, 451, 453, 454, 449, 450,
	452, 455, 456, 448, 1166, 447, 0, 0, 1167, 457,
	458, 0, 643, 459, 644, 461, 462, 0, 0, 463,
	0, 0, 0, 465, 466, 467, 0, 0, 468, 469,
	645, 1168, 470, 1169, 646, 471, 472, 464, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 0, 482, 483,
	647, 484, 485, 486, 648, 487, 488, 489, 649, 490,
	650, 491, 492, 0, 493, 494, 0, 495, 496, 497,
	498, 499, 500, 501, 651, 502, 504, 503, 505, 0,
	506, 0, 507, 508, 509, 0, 0, 0, 0, 510,
	0, 512, 513, 514, 515, 511, 516, 517, 518, 519,
	0, 520, 521, 522, 1170, 523, 524, 525, 526, 652,
	527, 0, 528, 529, 535, 536, 530, 531, 537, 538,
	539, 540, 541, 0, 543, 544, 542, 545, 546, 547,
	0, 548, 549, 532, 533, 550, 551, 1171, 552, 553,
	554, 555, 556, 557, 653, 0, 558, 0, 559, 560,
	561, 563, 534, 564, 569, 570, 654, 565, 566, 567,
	568, 655, 572, 573, 0, 574, 575, 0, 571, 562,
	0, 576, 577, 578, 579, 580, 581, 582, 354, 583,
	0, 584, 656, 657, 658, 659, 0, 593, 0, 585,
	586, 587, 660, 588, 661, 0, 589, 590, 591, 592,
	0, 594, 595, 0, 0, 596, 597, 598, 600, 601,
	599, 602, 0, 603, 0, 0, 604, 605, 606, 662,
	663, 664, 0, 608, 607, 609, 665, 0, 0, 0,
	0, 0, 610, 611, 666, 612, 613, 614, 1288, 0,
	1294, 1293, 0, 0, 0, 0, 1291, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 270, 272, 271,
	273, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 615, 0, 0, 0, 0, 280, 281,
	1155, 282, 283, 284, 285, 286, 287, 616, 617, 0,
	288, 618, 289, 619, 0, 620, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 621, 622, 623, 0,
	297, 298, 624, 0, 1299, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 1156, 321, 322, 323, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 326, 327, 328, 0,
	329, 625, 626, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	627, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 628, 629, 360, 0, 267, 0, 0, 0, 0,
	0, 361, 362, 363, 630, 0, 0, 0, 364, 0,
	365, 0, 0, 1157, 366, 367, 631, 632, 368, 369,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 633,
	0, 634, 378, 0, 379, 380, 381, 382, 383, 1287,
	636, 637, 460, 1159, 384, 385, 0, 386, 387, 388,
	389, 0, 0, 0, 0, 390, 391, 392, 394, 0,
	1158, 393, 638, 639, 0, 640, 0, 395, 396, 1160,
	641, 1161, 397, 398, 399, 1162, 400, 0, 0, 0,
	401, 402, 403, 404, 405, 406, 0, 407, 409, 408,
	0, 410, 642, 1163, 411, 412, 1164, 0, 413, 0,
	0, 0, 414, 415, 418, 0, 0, 416, 417, 419,
	420, 0, 421, 422, 424, 427, 423, 425, 426, 428,
	441, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 443, 0, 442, 1165, 444, 445, 446,
	451, 453, 454, 449, 450, 452, 455, 456, 448, 1166,
	447, 0, 0, 1167, 457, 458, 0, 643, 459, 644,
	461, 462, 0, 0, 463, 0, 0, 0, 465, 466,
	467, 0, 0, 468, 469, 645, 1168, 470, 1169, 646,
	471, 472, 464, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 0, 482, 483, 647, 484, 485, 486, 648,
	487, 488, 489, 649, 490, 650, 491, 492, 0, 493,
	494, 0, 495, 496, 497, 498, 499, 500, 501, 651,
	502, 504, 503, 505, 0, 506, 0, 507, 508, 509,
	0, 0, 0, 0, 510, 0, 512, 513, 514, 515,
	511, 516, 517, 518, 519, 0, 520, 521, 522, 1170,
	523, 524, 525, 526, 652, 527, 0, 528, 529, 535,
	536, 530, 531, 537, 538, 539, 540, 541, 0, 543,
	544, 542, 545, 546, 547, 0, 548, 549, 532, 533,
	550, 551, 1171, 552, 553, 554, 555, 556, 557, 653,
	0, 558, 0, 559, 560, 561, 563, 534, 564, 569,
	570, 654, 565, 566, 567, 568, 655, 572, 573, 0,
	574, 575, 0, 571, 562, 0, 576, 577, 578, 579,
	580, 581, 582, 354, 583, 0, 584, 656, 657, 658,
	659, 0, 593, 0, 585, 586, 587, 660, 588, 661,
	0, 589, 590, 591, 592, 0, 594, 595, 0, 0,
	596, 597, 598, 600, 601, 599, 602, 0, 603, 0,
	0, 604, 605, 606, 662, 663, 664, 0, 608, 607,
	609, 665, 0, 0, 0, 0, 0, 610, 611, 666,
	612, 613, 614, 1294, 1293, 0, 0, 0, 0, 1291,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	270, 272, 271, 273, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 615, 0, 0, 0,
	0, 280, 281, 1155, 282, 283, 284, 285, 286, 287,
	616, 617, 0, 288, 618, 289, 619, 0, 620, 290,
	291, 292, 293, 294, 295, 0, 0, 0, 296, 621,
	622, 623, 0, 297, 298, 624, 0, 1299, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 1156, 321, 322, 323,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	327, 328, 0, 329, 625, 626, 0, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 340, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 627, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 628, 629, 360, 0, 267, 0,
	0, 0, 0, 0, 361, 362, 363, 630, 0, 0,
	0, 364, 0, 365, 0, 0, 1157, 366, 367, 631,
	632, 368, 369, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 633, 0, 634, 378, 0, 379, 380, 381,
	382, 383, 635, 636, 637, 460, 1159, 384, 385, 0,
	386, 387, 388, 389, 0, 0, 0, 0, 390, 391,
	392, 394, 0, 1158, 393, 638, 639, 0, 640, 0,
	395, 396, 1160, 641, 1161, 397, 398, 399, 1162, 400,
	0, 0, 0, 401, 402, 403, 404, 405, 406, 0,
	407, 409, 408, 0, 410, 642, 1163, 411, 412, 1164,
	0, 413, 0, 0, 0, 414, 415, 418, 0, 0,
	416, 417, 419, 420, 0, 421, 422, 424, 427, 423,
	425, 426, 428, 441, 429, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 443, 0, 442, 1165,
	444, 445, 446, 451, 453, 454, 449, 450, 452, 455,
	456, 448, 1166, 447, 0, 0, 1167, 457, 458, 0,
	643, 459, 644, 461, 462, 0, 0, 463, 0, 0,
	0, 465, 466, 467, 0, 0, 468, 469, 645, 1168,
	470, 1169, 646, 471, 472, 464, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 0, 482, 483, 647, 484,
	485, 486, 648, 487, 488, 489, 649, 490, 650, 491,
	492, 0, 493, 494, 0, 495, 496, 497, 498, 499,
	500, 501, 651, 502, 504, 503, 505, 0, 506, 0,
	507, 508, 509, 0, 0, 0, 0, 510, 0, 512,
	513, 514, 515, 511, 516, 517, 518, 519, 0, 520,
	521, 522, 1170, 523, 524, 525, 526, 652, 527, 0,
	528, 529, 535, 536, 530, 531, 537, 538, 539, 540,
	541, 0, 543, 544, 542, 545, 546, 547, 0, 548,
	549, 532, 533, 550, 551, 1171, 552, 553, 554, 555,
	556, 557, 653, 0, 558, 0, 559, 560, 561, 563,
	534, 564, 569, 570, 654, 565, 566, 567, 568, 655,
	572, 573, 0, 574, 575, 0, 571, 562, 0, 576,
	577, 578, 579, 580, 581, 582, 354, 583, 0, 584,
	656, 657, 658, 659, 0, 593, 0, 585, 586, 587,
	660, 588, 661, 0, 589, 590, 591, 592, 0, 594,
	595, 0, 0, 596, 597, 598, 600, 601, 599, 602,
	0, 603, 0, 0, 604, 605, 606, 662, 663, 664,
	0, 608, 607, 609, 665, 1294, 1994, 0, 0, 0,
	610, 611, 666, 612, 613, 614, 0, 0, 0, 0,
	0, 0, 270, 272, 271, 273, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 615, 0,
	0, 0, 0, 280, 281, 1155, 282, 283, 284, 285,
	286, 287, 616, 617, 0, 288, 618, 289, 619, 0,
	620, 290, 291, 292, 293, 294, 295, 0, 0, 0,
	296, 621, 622, 623, 0, 297, 298, 624, 0, 1299,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 1156, 321,
	322, 323, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 327, 328, 0, 329, 625, 626, 2034, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 627, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 628, 629, 360, 0,
	267, 0, 0, 0, 0, 0, 361, 362, 363, 630,
	0, 0, 0, 364, 0, 365, 0, 0, 1157, 366,
	367, 631, 632, 368, 369, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 633, 0, 634, 378, 0, 379,
	380, 381, 382, 383, 635, 636, 637, 460, 1159, 384,
	385, 0, 386, 387, 388, 389, 0, 0, 0, 0,
	390, 391, 392, 394, 0, 1158, 393, 638, 639, 0,
	640, 0, 395, 396, 1160, 641, 1161, 397, 398, 399,
	1162, 400, 0, 0, 0, 401, 402, 403, 404, 405,
	406, 0, 407, 409, 408, 0, 410, 642, 1163, 411,
	412, 1164, 0, 413, 0, 0, 0, 414, 415, 418,
	0, 0, 416, 417, 419, 420, 0, 421, 422, 424,
	427, 423, 425, 426, 428, 441, 429, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 443, 0,
	442, 1165, 444, 445, 446, 451, 453, 454, 449, 450,
	452, 455, 456, 448, 1166, 447, 0, 0, 1167, 457,
	458, 0, 643, 459, 644, 461, 462, 0, 0, 463,
	0, 0, 0, 465, 466, 467, 0, 0, 468, 469,
	645, 1168, 470, 1169, 646, 471, 472, 464, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 0, 482, 483,
	647, 484, 485, 486, 648, 487, 488, 489, 649, 490,
	650, 491, 492, 0, 493, 494, 0, 495, 496, 497,
	498, 499, 500, 501, 651, 502, 504, 503, 505, 0,
	506, 0, 507, 508, 509, 0, 0, 0, 0, 510,
	0, 512, 513, 514, 515, 511, 516, 517, 518, 519,
	0, 520, 521, 522, 1170, 523, 524, 525, 526, 652,
	527, 0, 528, 529, 535, 536, 530, 531, 537, 538,
	539, 540, 541, 0, 543, 544, 542, 545, 546, 547,
	0, 548, 549, 532, 533, 550, 551, 1171, 552, 553,
	554, 555, 556, 557, 653, 0, 558, 0, 559, 560,
	561, 563, 534, 564, 569, 570, 654, 565, 566, 567,
	568, 655, 572, 573, 0, 574, 575, 0, 571, 562,
	0, 576, 577, 578, 579, 580, 581, 582, 354, 583,
	0, 584, 656, 657, 658, 659, 0, 593, 0, 585,
	586, 587, 660, 588, 661, 0, 589, 590, 591, 592,
	0, 594, 595, 0, 0, 596, 597, 598, 600, 601,
	599, 602, 0, 603, 0, 0, 604, 605, 606, 662,
	663, 664, 0, 608, 607, 609, 665, 1294, 1293, 0,
	0, 0, 610, 611, 666, 612, 613, 614, 0, 0,
	0, 0, 0, 0, 270, 272, 271, 273, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	615, 0, 0, 0, 0, 280, 281, 1155, 282, 283,
	284, 285, 286, 287, 616, 617, 0, 288, 618, 289,
	619, 0, 620, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 621, 622, 623, 0, 297, 298, 624,
	0, 1299, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	1156, 321, 322, 323, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 327, 328, 0, 329, 625, 626,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 627, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 628, 629,
	360, 0, 267, 0, 0, 0, 0, 0, 361, 362,
	363, 630, 0, 0, 0, 364, 0, 365, 0, 0,
	1157, 366, 367, 631, 632, 368, 369, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 633, 0, 634, 378,
	0, 379, 380, 381, 382, 383, 635, 636, 637, 460,
	1159, 384, 385, 0, 386, 387, 388, 389, 0, 0,
	0, 0, 390, 391, 392, 394, 0, 1158, 393, 638,
	639, 0, 640, 0, 395, 396, 1160, 641, 1161, 397,
	398, 399, 1162, 400, 0, 0, 0, 401, 402, 403,
	404, 405, 406, 0, 407, 409, 408, 0, 410, 642,
	1163, 411, 412, 1164, 0, 413, 0, 0, 0, 414,
	415, 418, 0, 0, 416, 417, 419, 420, 0, 421,
	422, 424, 427, 423, 425, 426, 428, 441, 429, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	443, 0, 442, 1165, 444, 445, 446, 451, 453, 454,
	449, 450, 452, 455, 456, 448, 1166, 447, 0, 0,
	1167, 457, 458, 0, 643, 459, 644, 461, 462, 0,
	0, 463, 0, 0, 0, 465, 466, 467, 0, 0,
	468, 469, 645, 1168, 470, 1169, 646, 471, 472, 464,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 0,
	482, 483, 647, 484, 485, 486, 648, 487, 488, 489,
	649, 490, 650, 491, 492, 0, 493, 494, 0, 495,
	496, 497, 498, 499, 500, 501, 651, 502, 504, 503,
	505, 0, 506, 0, 507, 508, 509, 0, 0, 0,
	0, 510, 0, 512, 513, 514, 515, 511, 516, 517,
	518, 519, 0, 520, 521, 522, 1170, 523, 524, 525,
	526, 652, 527, 0, 528, 529, 535, 536, 530, 531,
	537, 538, 539, 540, 541, 0, 543, 544, 542, 545,
	546, 547, 0, 548, 549, 532, 533, 550, 551, 1171,
	552, 553, 554, 555, 556, 557, 653, 0, 558, 0,
	559, 560, 561, 563, 534, 564, 569, 570, 654, 565,
	566, 567, 568, 655, 572, 573, 0, 574, 575, 0,
	571, 562, 0, 576, 577, 578, 579, 580, 581, 582,
	354, 583, 0, 584, 656, 657, 658, 659, 0, 593,
	0, 585, 586, 587, 660, 588, 661, 0, 589, 590,
	591, 592, 0, 594, 595, 0, 0, 596, 597, 598,
	600, 601, 599, 602, 0, 603, 0, 0, 604, 605,
	606, 662, 663, 664, 1294, 608, 607, 609, 665, 0,
	0, 0, 0, 0, 610, 611, 666, 612, 613, 614,
	0, 270, 272, 271, 273, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 615, 0, 0,
	0, 0, 280, 281, 1155, 282, 283, 284, 285, 286,
	287, 616, 617, 0, 288, 618, 289, 619, 0, 620,
	290, 291, 292, 293, 294, 295, 0, 0, 0, 296,
	621, 622, 623, 0, 297, 298, 624, 0, 1299, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 1156, 321, 322,
	323, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	326, 327, 328, 0, 329, 625, 626, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 340, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 627, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 628, 629, 360, 0, 267,
	0, 0, 0, 0, 0, 361, 362, 363, 630, 0,
	0, 0, 364, 0, 365, 0, 0, 1157, 366, 367,
	631, 632, 368, 369, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 633, 0, 634, 378, 0, 379, 380,
	381, 382, 383, 635, 636, 637, 460, 1159, 384, 385,
	0, 386, 387, 388, 389, 0, 0, 0, 0, 390,
	391, 392, 394, 0, 1158, 393, 638, 639, 0, 640,
	0, 395, 396, 1160, 641, 1161, 397, 398, 399, 1162,
	400, 0, 0, 0, 401, 402, 403, 404, 405, 406,
	0, 407, 409, 408, 0, 410, 642, 1163, 411, 412,
	1164, 0, 413, 0, 0, 0, 414, 415, 418, 0,
	0, 416, 417, 419, 420, 0, 421, 422, 424, 427,
	423, 425, 426, 428, 441, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 443, 0, 442,
	1165, 444, 445, 446, 451, 453, 454, 449, 450, 452,
	455, 456, 448, 1166, 447, 0, 0, 1167, 457, 458,
	0, 643, 459, 644, 461, 462, 0, 0, 463, 0,
	0, 0, 465, 466, 467, 0, 0, 468, 469, 645,
	1168, 470, 1169, 646, 471, 472, 464, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 0, 482, 483, 647,
	484, 485, 486, 648, 487, 488, 489, 649, 490, 650,
	491, 492, 0, 493, 494, 0, 495, 496, 497, 498,
	499, 500, 501, 651, 502, 504, 503, 505, 0, 506,
	0, 507, 508, 509, 0, 0, 0, 0, 510, 0,
	512, 513, 514, 515, 511, 516, 517, 518, 519, 0,
	520, 521, 522, 1170, 523, 524, 525, 526, 652, 527,
	0, 528, 529, 535, 536, 530, 531, 537, 538, 539,
	540, 541, 0, 543, 544, 542, 545, 546, 547, 0,
	548, 549, 532, 533, 550, 551, 1171, 552, 553, 554,
	555, 556, 557, 653, 0, 558, 0, 559, 560, 561,
	563, 534, 564, 569, 570, 654, 565, 566, 567, 568,
	655, 572, 573, 0, 574, 575, 0, 571, 562, 0,
	576, 577, 578, 579, 580, 581, 582, 354, 583, 0,
	584, 656, 657, 658, 659, 0, 593, 0, 585, 586,
	587, 660, 588, 661, 0, 589, 590, 591, 592, 0,
	594, 595, 0, 0, 596, 597, 598, 600, 601, 599,
	602, 0, 603, 0, 0, 604, 605, 606, 662, 663,
	664, 264, 608, 607, 609, 665, 0, 0, 0, 0,
	0, 610, 611, 666, 612, 613, 614, 0, 270, 272,
	271, 273, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 615, 0, 0, 0, 0, 280,
	281, 0, 282, 283, 284, 285, 286, 287, 616, 617,
	0, 288, 618, 289, 619, 0, 620, 290, 291, 292,
	293, 294, 295, 0, 0, 0, 296, 621, 622, 623,
	2744, 297, 298, 624, 0, 0, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 2741, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 0, 321, 322, 323, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 327, 328,
	0, 329, 625, 626, 0, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 340,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 2748,
	348, 627, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 628, 629, 360, 0, 2947, 0, 0, 0,
	0, 0, 361, 362, 363, 630, 0, 0, 0, 364,
	0, 365, 2747, 0, 0, 366, 367, 631, 632, 368,
	369, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	633, 0, 634, 378, 0, 379, 380, 381, 382, 383,
	635, 636, 637, 460, 0, 384, 385, 0, 386, 387,
	388, 389, 0, 0, 0, 2944, 390, 391, 392, 394,
	0, 0, 393, 638, 639, 0, 640, 0, 395, 2946,
	0, 641, 0, 397, 398, 399, 0, 400, 0, 0,
	0, 401, 402, 403, 404, 405, 406, 0, 407, 409,
	408, 0, 410, 642, 0, 411, 412, 2943, 0, 413,
	0, 0, 0, 414, 415, 418, 0, 0, 416, 417,
	419, 420, 0, 421, 422, 424, 427, 423, 425, 426,
	428, 441, 429, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 443, 0, 442, 0, 444, 445,
	446, 451, 453, 454, 449, 450, 452, 455, 456, 448,
	0, 447, 0, 0, 0, 457, 458, 0, 643, 459,
	644, 461, 462, 0, 0, 463, 0, 0, 0, 465,
	466, 467, 0, 0, 468, 469, 645, 0, 470, 0,
	646, 471, 472, 464, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 0, 482, 483, 647, 484, 485, 486,
	648, 487, 488, 489, 649, 490, 650, 491, 492, 2746,
	493, 494, 0, 495, 496, 497, 498, 499, 500, 501,
	651, 502, 504, 503, 505, 0, 506, 0, 507, 508,
	509, 0, 0, 0, 0, 510, 0, 512, 513, 514,
	515, 511, 516, 517, 518, 519, 0, 520, 521, 522,
	0, 523, 524, 525, 526, 652, 527, 0, 528, 529,
	535, 536, 530, 531, 537, 538, 539, 540, 541, 0,
	543, 544, 542, 545, 546, 547, 0, 548, 549, 532,
	533, 550, 551, 0, 552, 553, 554, 555, 556, 557,
	653, 0, 558, 0, 559, 560, 561, 563, 534, 564,
	569, 570, 654, 565, 566, 567, 568, 655, 572, 573,
	0, 574, 575, 0, 571, 562, 0, 576, 577, 578,
	579, 580, 581, 582, 354, 583, 0, 584, 656, 657,
	658, 659, 0, 593, 0, 585, 586, 587, 660, 588,
	661, 0, 589, 590, 591, 592, 0, 594, 595, 0,
	2945, 596, 597, 598, 600, 601, 599, 602, 0, 603,
	0, 0, 604, 605, 606, 662, 663, 664, 264, 608,
	607, 609, 665, 0, 0, 0, 0, 0, 610, 611,
	666, 612, 613, 614, 0, 270, 272, 271, 273, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 615, 0, 0, 0, 0, 280, 281, 0, 282,
	283, 284, 285, 286, 287, 616, 617, 0, 288, 618,
	289, 619, 0, 620, 290, 291, 292, 293, 294, 295,
	0, 0, 0, 296, 621, 622, 623, 2744, 297, 298,
	624, 0, 0, 2738, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 2741, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 0, 321, 322, 323, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 326, 327, 328, 0, 329, 625,
	626, 0, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 340, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 2748, 348, 627, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 628,
	629, 360, 0, 0, 0, 0, 0, 0, 0, 361,
	362, 363, 630, 0, 0, 0, 364, 0, 365, 2747,
	0, 0, 366, 367, 631, 632, 368, 369, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 633, 0, 634,
	378, 0, 379, 380, 381, 382, 383, 2737, 636, 637,
	460, 0, 384, 385, 0, 386, 387, 388, 389, 0,
	0, 0, 0, 390, 391, 392, 394, 0, 0, 393,
	638, 639, 0, 640, 0, 395, 396, 0, 641, 0,
	397, 398, 399, 0, 400, 0, 0, 0, 401, 402,
	403, 404, 405, 406, 0, 407, 409, 408, 0, 410,
	642, 0, 411, 412, 0, 0, 413, 0, 0, 0,
	414, 415, 418, 0, 0, 416, 417, 419, 420, 0,
	421, 422, 424, 427, 423, 425, 426, 428, 441, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 443, 0, 442, 0, 444, 445, 446, 451, 453,
	454, 449, 450, 452, 455, 456, 448, 0, 447, 0,
	0, 0, 457, 458, 0, 643, 459, 644, 461, 462,
	0, 0, 463, 0, 0, 0, 465, 466, 467, 0,
	0, 468, 469, 645, 0, 470, 0, 646, 471, 472,
	464, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	0, 482, 483, 647, 484, 485, 486, 648, 487, 488,
	489, 649, 490, 650, 491, 492, 2746, 493, 494, 0,
	495, 496, 497, 498, 499, 500, 501, 651, 502, 504,
	503, 505, 0, 506, 0, 507, 508, 509, 0, 0,
	0, 0, 510, 0, 512, 513, 514, 515, 511, 516,
	517, 518, 519, 0, 520, 521, 522, 0, 523, 524,
	525, 526, 652, 527, 0, 528, 529, 535, 536, 530,
	531, 537, 538, 539, 540, 541, 0, 543, 544, 542,
	545, 546, 547, 0, 548, 549, 532, 533, 550, 551,
	0, 552, 553, 554, 555, 556, 557, 653, 0, 558,
	0, 559, 560, 561, 563, 534, 564, 569, 570, 654,
	565, 566, 567, 568, 655, 572, 573, 0, 574, 575,
	0, 571, 562, 0, 576, 577, 578, 579, 580, 581,
	582, 354, 583, 0, 584, 656, 657, 658, 659, 0,
	593, 0, 585, 586, 587, 660, 588, 661, 0, 589,
	590, 591, 592, 0, 594, 595, 0, 2745, 596, 597,
	598, 600, 601, 599, 602, 0, 603, 0, 0, 604,
	605, 606, 662, 663, 664, 0, 608, 607, 609, 665,
	1689, 0, 264, 0, 0, 610, 611, 666, 612, 613,
	614, 0, 0, 0, 0, 0, 0, 0, 0, 270,
	272, 271, 273, 274, 275, 276, 277, 1688, 278, 279,
	0, 0, 0, 0, 0, 615, 0, 0, 0, 0,
	280, 281, 0, 282, 283, 284, 285, 286, 287, 616,
	617, 0, 288, 618, 289, 619, 0, 620, 290, 291,
	292, 293, 294, 295, 0, 0, 0, 296, 621, 622,
	623, 0, 297, 298, 624, 0, 0, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 0, 321, 322, 323, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 326, 327,
	328, 0, 329, 625, 626, 0, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	340, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 627, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 628, 629, 360, 0, 267, 0, 0,
	0, 0, 0, 361, 362, 363, 630, 0, 0, 0,
	364, 0, 365, 0, 0, 0, 366, 367, 631, 632,
	368, 369, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 633, 0, 634, 378, 0, 379, 380, 381, 382,
	383, 635, 636, 637, 460, 0, 384, 385, 0, 386,
	387, 388, 389, 0, 0, 0, 268, 390, 391, 392,
	394, 0, 0, 393, 638, 639, 0, 640, 0, 395,
	396, 0, 641, 0, 397, 398, 399, 0, 400, 0,
	0, 0, 401, 402, 403, 404, 405, 406, 0, 407,
	409, 408, 0, 410, 642, 0, 411, 412, 0, 0,
	413, 0, 0, 0, 414, 415, 418, 0, 0, 416,
	417, 419, 420, 0, 421, 422, 424, 427, 423, 425,
	426, 428, 441, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 443, 0, 442, 0, 444,
	445, 446, 451, 453, 454, 449, 450, 452, 455, 456,
	448, 0, 447, 0, 269, 0, 457, 458, 0, 643,
	459, 644, 461, 462, 0, 0, 463, 0, 0, 0,
	465, 466, 467, 0, 0, 468, 469, 645, 0, 470,
	0, 646, 471, 472, 464, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 0, 482, 483, 647, 484, 485,
	486, 648, 487, 488, 489, 649, 490, 650, 491, 492,
	0, 493, 494, 0, 495, 496, 497, 498, 499, 500,
	501, 651, 502, 504, 503, 505, 0, 506, 0, 507,
	508, 509, 0, 0, 0, 0, 510, 0, 512, 513,
	514, 515, 511, 516, 517, 518, 519, 0, 520, 521,
	522, 0, 523, 524, 525, 526, 652, 527, 0, 528,
	529, 535, 536, 530, 531, 537, 538, 539, 540, 541,
	0, 1692, 544, 542, 545, 546, 547, 0, 548, 549,
	532, 533, 550, 551, 0, 552, 553, 554, 555, 556,
	557, 653, 0, 558, 0, 559, 560, 561, 563, 534,
	564, 569, 570, 654, 565, 566, 567, 568, 655, 572,
	573, 0, 574, 575, 0, 571, 562, 1690, 576, 577,
	578, 579, 580, 581, 582, 354, 583, 0, 584, 656,
	657, 658, 659, 0, 593, 0, 585, 586, 587, 660,
	588, 661, 0, 589, 590, 591, 592, 0, 594, 595,
	0, 0, 596, 597, 598, 600, 601, 599, 602, 0,
	603, 0, 0, 604, 605, 606, 662, 663, 664, 0,
	1691, 607, 609, 665, 1441, 0, 264, 0, 0, 610,
	611, 666, 612, 613, 614, 0, 0, 0, 0, 0,
	0, 0, 0, 270, 272, 271, 273, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 615,
	0, 0, 0, 0, 280, 281, 0, 282, 283, 284,
	285, 286, 287, 616, 617, 0, 288, 618, 289, 619,
	0, 620, 290, 291, 292, 293, 294, 295, 0, 0,
	0, 296, 621, 622, 623, 0, 297, 298, 624, 0,
	0, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 0,
	321, 322, 323, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 326, 327, 328, 0, 329, 625, 626, 0,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 340, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 627, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 628, 629, 360,
	0, 267, 0, 0, 0, 0, 0, 361, 362, 363,
	630, 0, 0, 0, 364, 0, 365, 0, 0, 0,
	366, 367, 631, 632, 368, 369, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 633, 0, 634, 378, 0,
	379, 380, 381, 382, 383, 1443, 636, 637, 460, 0,
	384, 385, 0, 386, 387, 388, 389, 0, 0, 0,
	268, 390, 391, 392, 394, 0, 0, 393, 638, 639,
	0, 640, 0, 395, 396, 0, 641, 0, 397, 398,
	399, 0, 400, 0, 0, 0, 401, 402, 403, 404,
	405, 406, 0, 407, 409, 408, 0, 410, 642, 0,
	411, 412, 0, 0, 413, 0, 0, 0, 414, 415,
	418, 0, 0, 416, 417, 419, 420, 0, 421, 422,
	424, 427, 423, 425, 426, 428, 441, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 443,
	0, 442, 0, 444, 445, 446, 451, 453, 454, 449,
	450, 452, 455, 456, 448, 0, 447, 0, 269, 0,
	457, 458, 0, 643, 459, 644, 461, 462, 0, 0,
	463, 0, 0, 1205, 465, 466, 467, 0, 0, 468,
	469, 645, 0, 470, 0, 646, 471, 472, 464, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 0, 482,
	483, 647, 484, 485, 486, 648, 487, 488, 489, 649,
	490, 650, 491, 492, 0, 493, 494, 0, 495, 496,
	497, 498, 499, 500, 501, 651, 502, 504, 503, 505,
	0, 506, 0, 507, 508, 509, 0, 0, 0, 0,
	510, 0, 512, 513, 514, 515, 511, 516, 517, 518,
	519, 0, 520, 521, 522, 0, 523, 524, 525, 526,
	652, 527, 0, 528, 529, 535, 536, 530, 531, 537,
	538, 539, 540, 541, 0, 543, 544, 542, 545, 546,
	547, 0, 548, 549, 532, 533, 550, 551, 0, 552,
	553, 554, 555, 556, 557, 653, 0, 558, 0, 559,
	560, 561, 563, 534, 564, 569, 570, 654, 565, 566,
	567, 568, 655, 572, 573, 0, 574, 575, 0, 571,
	562, 0, 576, 577, 578, 579, 580, 581, 582, 354,
	583, 0, 584, 656, 657, 658, 659, 0, 593, 0,
	585, 586, 587, 660, 588, 661, 0, 589, 590, 591,
	592, 0, 594, 595, 0, 0, 596, 597, 598, 600,
	601, 599, 602, 0, 603, 0, 0, 604, 605, 606,
	662, 663, 664, 0, 608, 607, 609, 665, 1438, 0,
	264, 0, 0, 610, 611, 666, 612, 613, 614, 0,
	0, 0, 0, 0, 0, 0, 0, 270, 272, 271,
	273, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 615, 0, 0, 0, 0, 280, 281,
	0, 282, 283, 284, 285, 286, 287, 616, 617, 0,
	288, 618, 289, 619, 0, 620, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 621, 622, 623, 0,
	297, 298, 624, 0, 0, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 323, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 326, 327, 328, 0,
	329, 625, 626, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	627, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 628, 629, 360, 0, 267, 0, 0, 0, 0,
	0, 361, 362, 363, 630, 0, 0, 0, 364, 0,
	365, 0, 0, 0, 366, 367, 631, 632, 368, 369,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 633,
	0, 634, 378, 0, 379, 380, 381, 382, 383, 1440,
	636, 637, 460, 0, 384, 385, 0, 386, 387, 388,
	389, 0, 0, 0, 268, 390, 391, 392, 394, 0,
	0, 393, 638, 639, 0, 640, 0, 395, 396, 0,
	641, 0, 397, 398, 399, 0, 400, 0, 0, 0,
	401, 402, 403, 404, 405, 406, 0, 407, 409, 408,
	0, 410, 642, 0, 411, 412, 0, 0, 413, 0,
	0, 0, 414, 415, 418, 0, 0, 416, 417, 419,
	420, 0, 421, 422, 424, 427, 423, 425, 426, 428,
	441, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 443, 0, 442, 0, 444, 445, 446,
	451, 453, 454, 449, 450, 452, 455, 456, 448, 0,
	447, 0, 269, 0, 457, 458, 0, 643, 459, 644,
	461, 462, 0, 0, 463, 0, 0, 1205, 465, 466,
	467, 0, 0, 468, 469, 645, 0, 470, 0, 646,
	471, 472, 464, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 0, 482, 483, 647, 484, 485, 486, 648,
	487, 488, 489, 649, 490, 650, 491, 492, 0, 493,
	494, 0, 495, 496, 497, 498, 499, 500, 501, 651,
	502, 504, 503, 505, 0, 506, 0, 507, 508, 509,
	0, 0, 0, 0, 510, 0, 512, 513, 514, 515,
	511, 516, 517, 518, 519, 0, 520, 521, 522, 0,
	523, 524, 525, 526, 652, 527, 0, 528, 529, 535,
	536, 530, 531, 537, 538, 539, 540, 541, 0, 543,
	544, 542, 545, 546, 547, 0, 548, 549, 532, 533,
	550, 551, 0, 552, 553, 554, 555, 556, 557, 653,
	0, 558, 0, 559, 560, 561, 563, 534, 564, 569,
	570, 654, 565, 566, 567, 568, 655, 572, 573, 0,
	574, 575, 0, 571, 562, 0, 576, 577, 578, 579,
	580, 581, 582, 354, 583, 0, 584, 656, 657, 658,
	659, 0, 593, 0, 585, 586, 587, 660, 588, 661,
	0, 589, 590, 591, 592, 0, 594, 595, 0, 0,
	596, 597, 598, 600, 601, 599, 602, 0, 603, 0,
	0, 604, 605, 606, 662, 663, 664, 0, 608, 607,
	609, 665, 1345, 0, 264, 0, 0, 610, 611, 666,
	612, 613, 614, 0, 0, 0, 0, 0, 0, 0,
	0, 270, 272, 271, 273, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 615, 0, 0,
	0, 0, 280, 281, 0, 282, 283, 284, 285, 286,
	287, 616, 617, 0, 288, 618, 289, 619, 0, 620,
	290, 291, 292, 293, 294, 295, 0, 0, 0, 296,
	621, 622, 623, 0, 297, 298, 624, 0, 0, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 0, 321, 322,
	323, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	326, 327, 328, 0, 329, 625, 626, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 340, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 627, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 628, 629, 360, 0, 267,
	0, 0, 0, 0, 0, 361, 362, 363, 630, 0,
	0, 0, 364, 0, 365, 0, 0, 0, 366, 367,
	631, 632, 368, 369, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 633, 0, 634, 378, 0, 379, 380,
	381, 382, 383, 1347, 636, 637, 460, 0, 384, 385,
	0, 386, 387, 388, 389, 0, 0, 0, 268, 390,
	391, 392, 394, 0, 0, 393, 638, 639, 0, 640,
	0, 395, 396, 0, 641, 0, 397, 398, 399, 0,
	400, 0, 0, 0, 401, 402, 403, 404, 405, 406,
	0, 407, 409, 408, 0, 410, 642, 0, 411, 412,
	0, 0, 413, 0, 0, 0, 414, 415, 418, 0,
	0, 416, 417, 419, 420, 0, 421, 422, 424, 427,
	423, 425, 426, 428, 441, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 443, 0, 442,
	0, 444, 445, 446, 451, 453, 454, 449, 450, 452,
	455, 456, 448, 0, 447, 0, 269, 0, 457, 458,
	0, 643, 459, 644, 461, 462, 0, 0, 463, 0,
	0, 1205, 465, 466, 467, 0, 0, 468, 469, 645,
	0, 470, 0, 646, 471, 472, 464, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 0, 482, 483, 647,
	484, 485, 486, 648, 487, 488, 489, 649, 490, 650,
	491, 492, 0, 493, 494, 0, 495, 496, 497, 498,
	499, 500, 501, 651, 502, 504, 503, 505, 0, 506,
	0, 507, 508, 509, 0, 0, 0, 0, 510, 0,
	512, 513, 514, 515, 511, 516, 517, 518, 519, 0,
	520, 521, 522, 0, 523, 524, 525, 526, 652, 527,
	0, 528, 529, 535, 536, 530, 531, 537, 538, 539,
	540, 541, 0, 543, 544, 542, 545, 546, 547, 0,
	548, 549, 532, 533, 550, 551, 0, 552, 553, 554,
	555, 556, 557, 653, 0, 558, 0, 559, 560, 561,
	563, 534, 564, 569, 570, 654, 565, 566, 567, 568,
	655, 572, 573, 0, 574, 575, 0, 571, 562, 0,
	576, 577, 578, 579, 580, 581, 582, 354, 583, 0,
	584, 656, 657, 658, 659, 0, 593, 0, 585, 586,
	587, 660, 588, 661, 0, 589, 590, 591, 592, 0,
	594, 595, 0, 0, 596, 597, 598, 600, 601, 599,
	602, 0, 603, 0, 0, 604, 605, 606, 662, 663,
	664, 0, 608, 607, 609, 665, 698, 0, 264, 0,
	0, 610, 611, 666, 612, 613, 614, 0, 0, 0,
	0, 0, 0, 0, 0, 270, 272, 271, 273, 697,
	275, 276, 277, 687, 278, 279, 0, 0, 0, 0,
	0, 615, 0, 0, 0, 0, 280, 281, 0, 282,
	283, 284, 285, 286, 287, 616, 617, 0, 288, 618,
	289, 619, 0, 620, 290, 291, 292, 293, 294, 295,
	0, 0, 0, 296, 621, 622, 623, 0, 297, 298,
	624, 0, 0, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 690, 318, 319,
	320, 0, 321, 322, 323, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 326, 327, 328, 0, 329, 625,
	626, 0, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 340, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 627, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 628,
	629, 360, 0, 0, 0, 0, 0, 0, 0, 361,
	362, 363, 630, 0, 0, 0, 364, 0, 365, 0,
	0, 0, 366, 367, 631, 632, 368, 369, 370, 371,
	372, 373, 374, 375, 376, 691, 377, 633, 0, 634,
	378, 0, 379, 380, 381, 382, 383, 635, 636, 637,
	460, 0, 384, 385, 0, 386, 387, 388, 389, 0,
	0, 0, 0, 390, 391, 392, 394, 0, 0, 393,
	638, 639, 0, 640, 0, 395, 396, 0, 641, 0,
	397, 398, 399, 0, 400, 0, 0, 0, 401, 402,
	403, 404, 405, 406, 0, 407, 409, 408, 0, 410,
	642, 0, 411, 412, 0, 0, 413, 0, 0, 0,
	414, 415, 418, 0, 0, 416, 417, 419, 420, 0,
	421, 422, 424, 427, 423, 425, 426, 428, 441, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 443, 0, 442, 0, 444, 445, 446, 451, 453,
	454, 449, 450, 452, 455, 456, 448, 0, 447, 0,
	0, 0, 457, 458, 0, 643, 459, 644, 461, 462,
	0, 0, 463, 0, 0, 0, 465, 466, 467, 0,
	0, 468, 469, 645, 0, 470, 0, 646, 471, 472,
	464, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	0, 482, 483, 647, 484, 485, 486, 648, 487, 488,
	489, 649, 490, 650, 491, 492, 0, 493, 494, 0,
	495, 496, 497, 498, 499, 500, 501, 651, 502, 504,
	503, 505, 0, 506, 0, 507, 508, 509, 0, 0,
	0, 0, 510, 0, 512, 513, 514, 515, 511, 516,
	517, 518, 519, 0, 520, 521, 522, 0, 523, 524,
	525, 526, 652, 527, 0, 528, 529, 535, 536, 530,
	531, 537, 538, 539, 540, 541, 692, 543, 544, 542,
	545, 546, 547, 0, 548, 549, 532, 533, 550, 551,
	0, 552, 553, 554, 555, 556, 557, 653, 0, 558,
	0, 559, 560, 561, 563, 534, 564, 569, 570, 654,
	565, 566, 567, 568, 655, 572, 573, 0, 574, 575,
	0, 571, 562, 0, 576, 577, 578, 579, 580, 581,
	582, 354, 583, 0, 584, 656, 657, 658, 659, 0,
	593, 0, 585, 586, 587, 660, 588, 661, 0, 589,
	590, 591, 592, 0, 594, 595, 0, 0, 596, 597,
	598, 600, 601, 599, 602, 0, 603, 0, 0, 604,
	605, 606, 662, 663, 664, 0, 608, 607, 609, 665,
	686, 0, 264, 0, 0, 610, 611, 666, 612, 613,
	614, 0, 0, 0, 0, 0, 0, 0, 0, 270,
	272, 271, 273, 274, 275, 276, 277, 687, 278, 279,
	0, 0, 0, 0, 0, 615, 0, 0, 0, 0,
	280, 281, 0, 282, 283, 284, 285, 286, 287, 616,
	617, 0, 288, 618, 289, 619, 0, 620, 290, 291,
	292, 293, 294, 295, 0, 0, 0, 296, 621, 622,
	623, 0, 297, 298, 624, 0, 0, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 690, 318, 319, 320, 0, 321, 322, 323, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 326, 327,
	328, 0, 329, 625, 626, 0, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	340, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 627, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 628, 629, 360, 0, 0, 0, 0,
	0, 0, 0, 361, 362, 363, 630, 0, 0, 0,
	364, 0, 365, 0, 0, 0, 366, 367, 631, 632,
	368, 369, 370, 371, 372, 373, 374, 375, 376, 691,
	377, 633, 0, 634, 378, 0, 379, 380, 381, 382,
	383, 635, 636, 637, 460, 0, 384, 385, 0, 386,
	387, 388, 389, 0, 0, 0, 0, 390, 391, 392,
	394, 0, 0, 393, 638, 639, 0, 640, 0, 395,
	396, 0, 641, 0, 397, 398, 399, 0, 400, 0,
	0, 0, 401, 402, 403, 404, 405, 406, 0, 407,
	409, 408, 0, 410, 642, 0, 411, 412, 0, 0,
	413, 0, 0, 0, 414, 415, 418, 0, 0, 416,
	417, 419, 420, 0, 421, 422, 424, 427, 423, 425,
	426, 428, 441, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 443, 0, 442, 0, 444,
	445, 446, 451, 453, 454, 449, 450, 452, 455, 456,
	448, 0, 447, 0, 0, 0, 457, 458, 0, 643,
	459, 644, 461, 462, 0, 0, 463, 0, 0, 0,
	465, 466, 467, 0, 0, 468, 469, 645, 0, 470,
	0, 646, 471, 472, 464, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 0, 482, 483, 647, 484, 485,
	486, 648, 487, 488, 489, 649, 490, 650, 491, 492,
	0, 493, 494, 0, 495, 496, 497, 498, 499, 500,
	501, 651, 502, 504, 503, 505, 0, 506, 0, 507,
	508, 509, 0, 0, 0, 0, 510, 0, 512, 513,
	514, 515, 511, 516, 517, 518, 519, 0, 520, 521,
	522, 0, 523, 524, 525, 526, 652, 527, 0, 528,
	529, 535, 536, 530, 531, 537, 538, 539, 540, 541,
	692, 543, 544, 542, 545, 546, 547, 0, 548, 549,
	532, 533, 550, 551, 0, 552, 553, 554, 555, 556,
	557, 653, 0, 558, 0, 559, 560, 561, 563, 534,
	564, 569, 570, 654, 565, 566, 567, 568, 655, 572,
	573, 0, 574, 575, 0, 571, 562, 0, 576, 577,
	578, 579, 580, 581, 582, 354, 583, 0, 584, 656,
	657, 658, 659, 0, 593, 0, 585, 586, 587, 660,
	588, 661, 0, 589, 590, 591, 592, 0, 594, 595,
	0, 0, 596, 597, 598, 600, 601, 599, 602, 0,
	603, 0, 0, 604, 605, 606, 662, 663, 664, 264,
	608, 607, 609, 665, 0, 0, 0, 0, 0, 610,
	611, 666, 612, 613, 614, 0, 270, 272, 271, 273,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 615, 0, 0, 0, 0, 280, 281, 0,
	282, 283, 284, 285, 286, 287, 616, 617, 0, 288,
	618, 289, 619, 0, 620, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 621, 622, 623, 0, 297,
	298, 624, 0, 0, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 0, 321, 322, 323, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 327, 328, 0, 329,
	625, 626, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 627,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	628, 629, 360, 0, 267, 0, 0, 0, 0, 0,
	361, 362, 363, 630, 0, 0, 0, 364, 0, 365,
	0, 0, 0, 366, 367, 631, 632, 368, 369, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 633, 0,
	634, 378, 0, 379, 380, 381, 382, 383, 635, 636,
	637, 460, 0, 384, 385, 0, 386, 387, 388, 389,
	0, 0, 0, 268, 390, 391, 392, 394, 0, 0,
	393, 638, 639, 0, 640, 0, 395, 396, 0, 641,
	0, 397, 398, 399, 0, 400, 0, 0, 0, 401,
	402, 403, 404, 405, 406, 0, 407, 409, 408, 0,
	410, 642, 0, 411, 412, 0, 0, 413, 0, 0,
	0, 414, 415, 418, 0, 0, 416, 417, 419, 420,
	0, 421, 422, 424, 427, 423, 425, 426, 428, 441,
	429, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 443, 0, 442, 0, 444, 445, 446, 451,
	453, 454, 449, 450, 452, 455, 456, 448, 0, 447,
	0, 269, 0, 457, 458, 0, 643, 459, 644, 461,
	462, 0, 0, 463, 0, 0, 1205, 465, 466, 467,
	0, 0, 468, 469, 645, 0, 470, 0, 646, 471,
	472, 464, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 0, 482, 483, 647, 484, 485, 486, 648, 487,
	488, 489, 649, 490, 650, 491, 492, 0, 493, 494,
	0, 495, 496, 497, 498, 499, 500, 501, 651, 502,
	504, 503, 505, 0, 506, 0, 507, 508, 509, 0,
	0, 0, 0, 510, 0, 512, 513, 514, 515, 511,
	516, 517, 518, 519, 0, 520, 521, 522, 0, 523,
	524, 525, 526, 652, 527, 0, 528, 529, 535, 536,
	530, 531, 537, 538, 539, 540, 541, 0, 543, 544,
	542, 545, 546, 547, 0, 548, 549, 532, 533, 550,
	551, 0, 552, 553, 554, 555, 556, 557, 653, 0,
	558, 0, 559, 560, 561, 563, 534, 564, 569, 570,
	654, 565, 566, 567, 568, 655, 572, 573, 0, 574,
	575, 0, 571, 562, 0, 576, 577, 578, 579, 580,
	581, 582, 354, 583, 0, 584, 656, 657, 658, 659,
	0, 593, 0, 585, 586, 587, 660, 588, 661, 0,
	589, 590, 591, 592, 0, 594, 595, 0, 0, 596,
	597, 598, 600, 601, 599, 602, 0, 603, 0, 0,
	604, 605, 606, 662, 663, 664, 264, 608, 607, 609,
	665, 0, 0, 0, 0, 0, 610, 611, 666, 612,
	613, 614, 0, 270, 272, 271, 273, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 615,
	0, 0, 0, 0, 280, 281, 0, 282, 283, 284,
	285, 286, 287, 616, 617, 0, 288, 618, 289, 619,
	0, 620, 290, 291, 292, 293, 294, 295, 0, 0,
	0, 296, 621, 622, 623, 0, 297, 298, 624, 0,
	0, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 0,
	321, 322, 323, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 326, 327, 328, 0, 329, 625, 626, 0,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 340, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 627, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 628, 629, 360,
	0, 267, 0, 0, 0, 0, 0, 361, 362, 363,
	630, 0, 0, 0, 364, 0, 365, 0, 0, 0,
	366, 367, 631, 632, 368, 369, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 633, 0, 634, 378, 0,
	379, 380, 381, 382, 383, 635, 636, 637, 460, 0,
	384, 385, 0, 386, 387, 388, 389, 0, 0, 0,
	268, 390, 391, 392, 394, 0, 0, 393, 638, 639,
	0, 640, 0, 395, 396, 0, 641, 0, 397, 398,
	399, 0, 400, 0, 0, 0, 401, 402, 403, 404,
	405, 406, 0, 407, 409, 408, 0, 410, 642, 0,
	411, 412, 0, 0, 413, 0, 0, 0, 414, 415,
	418, 0, 0, 416, 417, 419, 420, 0, 421, 422,
	424, 427, 423, 425, 426, 428, 441, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 443,
	0, 442, 0, 444, 445, 446, 451, 453, 454, 449,
	450, 452, 455, 456, 448, 3338, 447, 0, 269, 0,
	457, 458, 0, 643, 459, 644, 461, 462, 0, 0,
	463, 0, 0, 0, 465, 466, 467, 0, 0, 468,
	469, 645, 0, 470, 0, 646, 471, 472, 464, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 0, 482,
	483, 647, 484, 485, 486, 648, 487, 488, 489, 649,
	490, 650, 491, 492, 0, 493, 494, 0, 495, 496,
	497, 498, 499, 500, 501, 651, 502, 504, 503, 505,
	0, 506, 0, 507, 508, 509, 0, 0, 0, 0,
	510, 0, 512, 513, 514, 515, 511, 516, 517, 518,
	519, 0, 520, 521, 522, 0, 523, 524, 525, 526,
	652, 527, 0, 528, 529, 535, 536, 530, 531, 537,
	538, 539, 540, 541, 0, 543, 544, 542, 545, 546,
	547, 0, 548, 549, 532, 533, 550, 551, 0, 552,
	553, 554, 555, 556, 557, 653, 0, 558, 0, 559,
	560, 561, 563, 534, 564, 569, 570, 654, 565, 566,
	567, 568, 655, 572, 573, 0, 574, 575, 0, 571,
	562, 0, 576, 577, 578, 579, 580, 581, 582, 354,
	583, 0, 584, 656, 657, 658, 659, 0, 593, 0,
	585, 586, 587, 660, 588, 661, 0, 589, 590, 591,
	592, 0, 594, 595, 0, 0, 596, 597, 598, 600,
	601, 599, 602, 0, 603, 0, 0, 604, 605, 606,
	662, 663, 664, 0, 608, 607, 609, 665, 2892, 0,
	264, 0, 0, 610, 611, 666, 612, 613, 614, 0,
	0, 0, 0, 0, 0, 0, 0, 270, 272, 271,
	273, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 615, 0, 0, 0, 0, 280, 281,
	0, 282, 283, 284, 285, 286, 287, 616, 617, 0,
	288, 618, 289, 619, 0, 620, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 621, 622, 623, 0,
	297, 298, 624, 0, 0, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 323, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 326, 327, 328, 0,
	329, 625, 626, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	627, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 628, 629, 360, 0, 267, 0, 0, 0, 0,
	0, 361, 362, 363, 630, 0, 0, 0, 364, 0,
	365, 0, 0, 0, 366, 367, 631, 632, 368, 369,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 633,
	0, 634, 378, 0, 379, 380, 381, 382, 383, 2891,
	636, 637, 460, 0, 384, 385, 0, 386, 387, 388,
	389, 0, 0, 0, 268, 390, 391, 392, 394, 0,
	0, 393, 638, 639, 0, 640, 0, 395, 396, 0,
	641, 0, 397, 398, 399, 0, 400, 0, 0, 0,
	401, 402, 403, 404, 405, 406, 0, 407, 409, 408,
	0, 410, 642, 0, 411, 412, 0, 0, 413, 0,
	0, 0, 414, 415, 418, 0, 0, 416, 417, 419,
	420, 0, 421, 422, 424, 427, 423, 425, 426, 428,
	441, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 443, 0, 442, 0, 444, 445, 446,
	451, 453, 454, 449, 450, 452, 455, 456, 448, 0,
	447, 0, 269, 0, 457, 458, 0, 643, 459, 644,
	461, 462, 0, 0, 463, 0, 0, 0, 465, 466,
	467, 0, 0, 468, 469, 645, 0, 470, 0, 646,
	471, 472, 464, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 0, 482, 483, 647, 484, 485, 486, 648,
	487, 488, 489, 649, 490, 650, 491, 492, 0, 493,
	494, 0, 495, 496, 497, 498, 499, 500, 501, 651,
	502, 504, 503, 505, 0, 506, 0, 507, 508, 509,
	0, 0, 0, 0, 510, 0, 512, 513, 514, 515,
	511, 516, 517, 518, 519, 0, 520, 521, 522, 0,
	523, 524, 525, 526, 652, 527, 0, 528, 529, 535,
	536, 530, 531, 537, 538, 539, 540, 541, 0, 543,
	544, 542, 545, 546, 547, 0, 548, 549, 532, 533,
	550, 551, 0, 552, 553, 554, 555, 556, 557, 653,
	0, 558, 0, 559, 560, 561, 563, 534, 564, 569,
	570, 654, 565, 566, 567, 568, 655, 572, 573, 0,
	574, 575, 0, 571, 562, 0, 576, 577, 578, 579,
	580, 581, 582, 354, 583, 0, 584, 656, 657, 658,
	659, 0, 593, 0, 585, 586, 587, 660, 588, 661,
	0, 589, 590, 591, 592, 0, 594, 595, 0, 0,
	596, 597, 598, 600, 601, 599, 602, 0, 603, 0,
	0, 604, 605, 606, 662, 663, 664, 0, 608, 607,
	609, 665, 2250, 0, 264, 0, 0, 610, 611, 666,
	612, 613, 614, 0, 0, 0, 0, 0, 0, 0,
	0, 270, 272, 271, 273, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 615, 0, 0,
	0, 0, 280, 281, 0, 282, 283, 284, 285, 286,
	287, 616, 617, 0, 288, 618, 289, 619, 0, 620,
	290, 291, 292, 293, 294, 295, 0, 0, 0, 296,
	621, 622, 623, 0, 297, 298, 624, 0, 0, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 0, 321, 322,
	323, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	326, 327, 328, 0, 329, 625, 626, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 340, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 627, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 628, 629, 360, 0, 267,
	0, 0, 0, 0, 0, 361, 362, 363, 630, 0,
	0, 0, 364, 0, 365, 0, 0, 0, 366, 367,
	631, 632, 368, 369, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 633, 0, 634, 378, 0, 379, 380,
	381, 382, 383, 635, 636, 637, 460, 0, 384, 385,
	0, 386, 387, 388, 389, 0, 0, 0, 268, 390,
	391, 392, 394, 0, 0, 393, 638, 639, 0, 640,
	0, 395, 396, 0, 641, 0, 397, 398, 399, 0,
	400, 0, 0, 0, 401, 402, 403, 404, 405, 406,
	0, 407, 409, 408, 0, 410, 642, 0, 411, 412,
	0, 0, 413, 0, 0, 0, 414, 415, 418, 0,
	0, 416, 417, 419, 420, 0, 421, 422, 424, 427,
	423, 425, 426, 428, 441, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 443, 0, 442,
	0, 444, 445, 446, 451, 453, 454, 449, 450, 452,
	455, 456, 448, 0, 447, 0, 269, 0, 457, 458,
	0, 643, 459, 644, 461, 462, 0, 0, 463, 0,
	0, 0, 465, 466, 467, 0, 0, 468, 469, 645,
	0, 470, 0, 646, 471, 472, 464, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 0, 482, 483, 647,
	484, 485, 486, 648, 487, 488, 489, 649, 490, 650,
	491, 492, 0, 493, 494, 0, 495, 496, 497, 498,
	499, 500, 501, 651, 502, 504, 503, 505, 0, 506,
	0, 507, 508, 509, 0, 0, 0, 0, 510, 0,
	512, 513, 514, 515, 511, 516, 517, 518, 519, 0,
	520, 521, 522, 0, 523, 524, 525, 526, 652, 527,
	0, 528, 529, 535, 536, 530, 531, 537, 538, 539,
	540, 541, 0, 543, 544, 542, 545, 546, 547, 0,
	548, 549, 532, 533, 550, 551, 0, 552, 553, 554,
	555, 556, 557, 653, 0, 558, 0, 559, 560, 561,
	563, 534, 564, 569, 570, 654, 565, 566, 567, 568,
	655, 572, 573, 0, 574, 575, 0, 571, 562, 0,
	576, 577, 578, 579, 580, 581, 582, 354, 583, 0,
	584, 656, 657, 658, 659, 0, 593, 0, 585, 586,
	587, 660, 588, 661, 0, 589, 590, 591, 592, 0,
	594, 595, 0, 0, 596, 597, 598, 600, 601, 599,
	602, 0, 603, 0, 0, 604, 605, 606, 662, 663,
	664, 264, 608, 607, 609, 665, 0, 0, 0, 0,
	0, 610, 611, 666, 612, 613, 614, 0, 270, 272,
	271, 273, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 615, 0, 0, 0, 0, 280,
	281, 0, 282, 283, 284, 285, 286, 287, 616, 617,
	0, 288, 618, 289, 619, 0, 620, 290, 291, 292,
	293, 294, 295, 0, 0, 0, 296, 621, 622, 623,
	0, 297, 298, 624, 0, 0, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 0, 321, 322, 323, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 327, 328,
	0, 329, 625, 626, 0, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 340,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 627, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 628, 629, 360, 0, 267, 0, 0, 0,
	0, 0, 361, 362, 363, 630, 0, 0, 0, 364,
	0, 365, 0, 0, 0, 366, 367, 631, 632, 368,
	369, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	633, 0, 634, 378, 0, 379, 380, 381, 382, 383,
	635, 636, 637, 460, 0, 384, 385, 0, 386, 387,
	388, 389, 0, 0, 0, 268, 390, 391, 392, 394,
	0, 0, 393, 638, 639, 0, 640, 0, 395, 396,
	0, 641, 0, 397, 398, 399, 0, 400, 0, 0,
	0, 401, 402, 403, 404, 405, 406, 0, 407, 409,
	408, 0, 410, 642, 0, 411, 412, 0, 0, 413,
	0, 0, 0, 414, 415, 418, 0, 0, 416, 417,
	419, 420, 0, 421, 422, 424, 427, 423, 425, 426,
	428, 441, 429, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 443, 0, 442, 0, 444, 445,
	446, 451, 453, 454, 449, 450, 452, 455, 456, 448,
	0, 447, 0, 269, 0, 457, 458, 0, 643, 459,
	644, 461, 462, 0, 0, 463, 0, 0, 0, 465,
	466, 467, 0, 0, 468, 469, 645, 0, 470, 0,
	646, 471, 472, 464, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 0, 482, 483, 647, 484, 485, 486,
	648, 487, 488, 489, 649, 490, 650, 491, 492, 0,
	493, 494, 0, 495, 496, 497, 498, 499, 500, 501,
	651, 502, 504, 503, 505, 0, 506, 0, 507, 508,
	509, 0, 0, 0, 0, 510, 0, 512, 513, 514,
	515, 511, 516, 517, 518, 519, 0, 520, 521, 522,
	0, 523, 524, 525, 526, 652, 527, 0, 528, 529,
	535, 536, 530, 531, 537, 538, 539, 540, 541, 0,
	543, 544, 542, 545, 546, 547, 0, 548, 549, 532,
	533, 550, 551, 0, 552, 553, 554, 555, 556, 557,
	653, 0, 558, 0, 559, 560, 561, 563, 534, 564,
	569, 570, 654, 565, 566, 567, 568, 655, 572, 573,
	0, 574, 575, 0, 571, 562, 2191, 576, 577, 578,
	579, 580, 581, 582, 354, 583, 0, 584, 656, 657,
	658, 659, 0, 593, 0, 585, 586, 587, 660, 588,
	661, 0, 589, 590, 591, 592, 0, 594, 595, 0,
	0, 596, 597, 598, 600, 601, 599, 602, 0, 603,
	0, 0, 604, 605, 606, 662, 663, 664, 0, 608,
	607, 609, 665, 2198, 0, 264, 0, 0, 610, 611,
	666, 612, 613, 614, 0, 0, 0, 0, 0, 0,
	0, 0, 270, 272, 271, 273, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 615, 0,
	0, 0, 0, 280, 281, 0, 282, 283, 284, 285,
	286, 287, 616, 617, 0, 288, 618, 289, 619, 0,
	620, 290, 291, 292, 293, 294, 295, 0, 0, 0,
	296, 621, 622, 623, 0, 297, 298, 624, 0, 0,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 323, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 327, 328, 0, 329, 625, 626, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 627, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 628, 629, 360, 0,
	267, 0, 0, 0, 0, 0, 361, 362, 363, 630,
	0, 0, 0, 364, 0, 365, 0, 0, 0, 366,
	367, 631, 632, 368, 369, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 633, 0, 634, 378, 0, 379,
	380, 381, 382, 383, 2197, 636, 637, 460, 0, 384,
	385, 0, 386, 387, 388, 389, 0, 0, 0, 268,
	390, 391, 392, 394, 0, 0, 393, 638, 639, 0,
	640, 0, 395, 396, 0, 641, 0, 397, 398, 399,
	0, 400, 0, 0, 0, 401, 402, 403, 404, 405,
	406, 0, 407, 409, 408, 0, 410, 642, 0, 411,
	412, 0, 0, 413, 0, 0, 0, 414, 415, 418,
	0, 0, 416, 417, 419, 420, 0, 421, 422, 424,
	427, 423, 425, 426, 428, 441, 429, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 443, 0,
	442, 0, 444, 445, 446, 451, 453, 454, 449, 450,
	452, 455, 456, 448, 0, 447, 0, 269, 0, 457,
	458, 0, 643, 459, 644, 461, 462, 0, 0, 463,
	0, 0, 0, 465, 466, 467, 0, 0, 468, 469,
	645, 0, 470, 0, 646, 471, 472, 464, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 0, 482, 483,
	647, 484, 485, 486, 648, 487, 488, 489, 649, 490,
	650, 491, 492, 0, 493, 494, 0, 495, 496, 497,
	498, 499, 500, 501, 651, 502, 504, 503, 505, 0,
	506, 0, 507, 508, 509, 0, 0, 0, 0, 510,
	0, 512, 513, 514, 515, 511, 516, 517, 518, 519,
	0, 520, 521, 522, 0, 523, 524, 525, 526, 652,
	527, 0, 528, 529, 535, 536, 530, 531, 537, 538,
	539, 540, 541, 0, 543, 544, 542, 545, 546, 547,
	0, 548, 549, 532, 533, 550, 551, 0, 552, 553,
	554, 555, 556, 557, 653, 0, 558, 0, 559, 560,
	561, 563, 534, 564, 569, 570, 654, 565, 566, 567,
	568, 655, 572, 573, 0, 574, 575, 0, 571, 562,
	0, 576, 577, 578, 579, 580, 581, 582, 354, 583,
	0, 584, 656, 657, 658, 659, 0, 593, 0, 585,
	586, 587, 660, 588, 661, 0, 589, 590, 591, 592,
	0, 594, 595, 0, 0, 596, 597, 598, 600, 601,
	599, 602, 0, 603, 0, 0, 604, 605, 606, 662,
	663, 664, 0, 608, 607, 609, 665, 2184, 0, 264,
	0, 0, 610, 611, 666, 612, 613, 614, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 272, 271, 273,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 615, 0, 0, 0, 0, 280, 281, 0,
	282, 283, 284, 285, 286, 287, 616, 617, 0, 288,
	618, 289, 619, 0, 620, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 621, 622, 623, 0, 297,
	298, 624, 0, 0, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 0, 321, 322, 323, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 327, 328, 0, 329,
	625, 626, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 627,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	628, 629, 360, 0, 267, 0, 0, 0, 0, 0,
	361, 362, 363, 630, 0, 0, 0, 364, 0, 365,
	0, 0, 0, 366, 367, 631, 632, 368, 369, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 633, 0,
	634, 378, 0, 379, 380, 381, 382, 383, 2186, 636,
	637, 460, 0, 384, 385, 0, 386, 387, 388, 389,
	0, 0, 0, 268, 390, 391, 392, 394, 0, 0,
	393, 638, 639, 0, 640, 0, 395, 396, 0, 641,
	0, 397, 398, 399, 0, 400, 0, 0, 0, 401,
	402, 403, 404, 405, 406, 0, 407, 409, 408, 0,
	410, 642, 0, 411, 412, 0, 0, 413, 0, 0,
	0, 414, 415, 418, 0, 0, 416, 417, 419, 420,
	0, 421, 422, 424, 427, 423, 425, 426, 428, 441,
	429, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 443, 0, 442, 0, 444, 445, 446, 451,
	453, 454, 449, 450, 452, 455, 456, 448, 0, 447,
	0, 269, 0, 457, 458, 0, 643, 459, 644, 461,
	462, 0, 0, 463, 0, 0, 0, 465, 466, 467,
	0, 0, 468, 469, 645, 0, 470, 0, 646, 471,
	472, 464, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 0, 482, 483, 647, 484, 485, 486, 648, 487,
	488, 489, 649, 490, 650, 491, 492, 0, 493, 494,
	0, 495, 496, 497, 498, 499, 500, 501, 651, 502,
	504, 503, 505, 0, 506, 0, 507, 508, 509, 0,
	0, 0, 0, 510, 0, 512, 513, 514, 515, 511,
	516, 517, 518, 519, 0, 520, 521, 522, 0, 523,
	524, 525, 526, 652, 527, 0, 528, 529, 535, 536,
	530, 531, 537, 538, 539, 540, 541, 0, 543, 544,
	542, 545, 546, 547, 0, 548, 549, 532, 533, 550,
	551, 0, 552, 553, 554, 555, 556, 557, 653, 0,
	558, 0, 559, 560, 561, 563, 534, 564, 569, 570,
	654, 565, 566, 567, 568, 655, 572, 573, 0, 574,
	575, 0, 571, 562, 0, 576, 577, 578, 579, 580,
	581, 582, 354, 583, 0, 584, 656, 657, 658, 659,
	0, 593, 0, 585, 586, 587, 660, 588, 661, 0,
	589, 590, 591, 592, 0, 594, 595, 0, 0, 596,
	597, 598, 600, 601, 599, 602, 0, 603, 0, 0,
	604, 605, 606, 662, 663, 664, 264, 608, 607, 609,
	665, 0, 0, 0, 0, 0, 610, 611, 666, 612,
	613, 614, 0, 270, 272, 271, 273, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 615,
	0, 0, 0, 0, 280, 281, 0, 282, 283, 284,
	285, 286, 287, 616, 617, 0, 288, 618, 289, 619,
	0, 620, 290, 291, 292, 293, 294, 295, 0, 0,
	0, 296, 621, 622, 623, 0, 297, 298, 624, 0,
	0, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 0,
	321, 322, 323, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 326, 327, 328, 0, 329, 625, 626, 0,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 340, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 627, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 628, 629, 360,
	0, 267, 0, 0, 0, 0, 0, 361, 362, 363,
	630, 0, 0, 0, 364, 0, 365, 0, 0, 0,
	366, 367, 631, 632, 368, 369, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 633, 0, 634, 378, 0,
	379, 380, 381, 382, 383, 2154, 636, 637, 460, 0,
	384, 385, 0, 386, 387, 388, 389, 0, 0, 0,
	268, 390, 391, 392, 394, 0, 0, 393, 638, 639,
	0, 640, 0, 395, 396, 0, 641, 0, 397, 398,
	399, 0, 400, 0, 0, 0, 401, 402, 403, 404,
	405, 406, 0, 407, 409, 408, 0, 410, 642, 0,
	411, 412, 0, 0, 413, 0, 0, 0, 414, 415,
	418, 0, 0, 416, 417, 419, 420, 0, 421, 422,
	424, 427, 423, 425, 426, 428, 441, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 443,
	0, 442, 0, 444, 445, 446, 451, 453, 454, 449,
	450, 452, 455, 456, 448, 0, 447, 0, 269, 0,
	457, 458, 0, 643, 459, 644, 461, 462, 0, 0,
	463, 0, 0, 1205, 465, 466, 467, 0, 0, 468,
	469, 645, 0, 470, 0, 646, 471, 472, 464, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 0, 482,
	483, 647, 484, 485, 486, 648, 487, 488, 489, 649,
	490, 650, 491, 492, 0, 493, 494, 0, 495, 496,
	497, 498, 499, 500, 501, 651, 502, 504, 503, 505,
	0, 506, 0, 507, 508, 509, 0, 0, 0, 0,
	510, 0, 512, 513, 514, 515, 511, 516, 517, 518,
	519, 0, 520, 521, 522, 0, 523, 524, 525, 526,
	652, 527, 0, 528, 529, 535, 536, 530, 531, 537,
	538, 539, 540, 541, 0, 543, 544, 542, 545, 546,
	547, 0, 548, 549, 532, 533, 550, 551, 0, 552,
	553, 554, 555, 556, 557, 653, 0, 558, 0, 559,
	560, 561, 563, 534, 564, 569, 570, 654, 565, 566,
	567, 568, 655, 572, 573, 0, 574, 575, 0, 571,
	562, 0, 576, 577, 578, 579, 580, 581, 582, 354,
	583, 0, 584, 656, 657, 658, 659, 0, 593, 0,
	585, 586, 587, 660, 588, 661, 0, 589, 590, 591,
	592, 0, 594, 595, 0, 0, 596, 597, 598, 600,
	601, 599, 602, 0, 603, 0, 0, 604, 605, 606,
	662, 663, 664, 0, 608, 607, 609, 665, 1540, 0,
	264, 0, 0, 610, 611, 666, 612, 613, 614, 0,
	0, 0, 0, 0, 0, 0, 0, 270, 272, 271,
	273, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 615, 0, 0, 0, 0, 280, 281,
	0, 282, 283, 284, 285, 286, 287, 616, 617, 0,
	288, 618, 289, 619, 0, 620, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 621, 622, 623, 0,
	297, 298, 624, 0, 0, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 323, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 326, 327, 328, 0,
	329, 625, 626, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	627, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 628, 629, 360, 0, 267, 0, 0, 0, 0,
	0, 361, 362, 363, 630, 0, 0, 0, 364, 0,
	365, 0, 0, 0, 366, 367, 631, 632, 368, 369,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 633,
	0, 634, 378, 0, 379, 380, 381, 382, 383, 1539,
	636, 637, 460, 0, 384, 385, 0, 386, 387, 388,
	389, 0, 0, 0, 268, 390, 391, 392, 394, 0,
	0, 393, 638, 639, 0, 640, 0, 395, 396, 0,
	641, 0, 397, 398, 399, 0, 400, 0, 0, 0,
	401, 402, 403, 404, 405, 406, 0, 407, 409, 408,
	0, 410, 642, 0, 411, 412, 0, 0, 413, 0,
	0, 0, 414, 415, 418, 0, 0, 416, 417, 419,
	420, 0, 421, 422, 424, 427, 423, 425, 426, 428,
	441, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 443, 0, 442, 0, 444, 445, 446,
	451, 453, 454, 449, 450, 452, 455, 456, 448, 0,
	447, 0, 269, 0, 457, 458, 0, 643, 459, 644,
	461, 462, 0, 0, 463, 0, 0, 0, 465, 466,
	467, 0, 0, 468, 469, 645, 0, 470, 0, 646,
	471, 472, 464, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 0, 482, 483, 647, 484, 485, 486, 648,
	487, 488, 489, 649, 490, 650, 491, 492, 0, 493,
	494, 0, 495, 496, 497, 498, 499, 500, 501, 651,
	502, 504, 503, 505, 0, 506, 0, 507, 508, 509,
	0, 0, 0, 0, 510, 0, 512, 513, 514, 515,
	511, 516, 517, 518, 519, 0, 520, 521, 522, 0,
	523, 524, 525, 526, 652, 527, 0, 528, 529, 535,
	536, 530, 531, 537, 538, 539, 540, 541, 0, 543,
	544, 542, 545, 546, 547, 0, 548, 549, 532, 533,
	550, 551, 0, 552, 553, 554, 555, 556, 557, 653,
	0, 558, 0, 559, 560, 561, 563, 534, 564, 569,
	570, 654, 565, 566, 567, 568, 655, 572, 573, 0,
	574, 575, 0, 571, 562, 0, 576, 577, 578, 579,
	580, 581, 582, 354, 583, 0, 584, 656, 657, 658,
	659, 0, 593, 0, 585, 586, 587, 660, 588, 661,
	0, 589, 590, 591, 592, 0, 594, 595, 0, 0,
	596, 597, 598, 600, 601, 599, 602, 0, 603, 0,
	0, 604, 605, 606, 662, 663, 664, 0, 608, 607,
	609, 665, 1458, 0, 264, 0, 0, 610, 611, 666,
	612, 613, 614, 0, 0, 0, 0, 0, 0, 0,
	0, 270, 272, 271, 273, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 615, 0, 0,
	0, 0, 280, 281, 0, 282, 283, 284, 285, 286,
	287, 616, 617, 0, 288, 618, 289, 619, 0, 620,
	290, 291, 292, 293, 294, 295, 0, 0, 0, 296,
	621, 622, 623, 0, 297, 298, 624, 0, 0, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 0, 321, 322,
	323, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	326, 327, 328, 0, 329, 625, 626, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 340, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 627, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 628, 629, 360, 0, 267,
	0, 0, 0, 0, 0, 361, 362, 363, 630, 0,
	0, 0, 364, 0, 365, 0, 0, 0, 366, 367,
	631, 632, 368, 369, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 633, 0, 634, 378, 0, 379, 380,
	381, 382, 383, 635, 636, 637, 460, 0, 384, 385,
	0, 386, 387, 388, 389, 0, 0, 0, 268, 390,
	391, 392, 394, 0, 0, 393, 638, 639, 0, 640,
	0, 395, 396, 0, 641, 0, 397, 398, 399, 0,
	400, 0, 0, 0, 401, 402, 403, 404, 405, 406,
	0, 407, 409, 408, 0, 410, 642, 0, 411, 412,
	0, 0, 413, 0, 0, 0, 414, 415, 418, 0,
	0, 416, 417, 419, 420, 0, 421, 422, 424, 427,
	423, 425, 426, 428, 441, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 443, 0, 442,
	0, 444, 445, 446, 451, 453, 454, 449, 450, 452,
	455, 456, 448, 0, 447, 0, 269, 0, 457, 458,
	0, 643, 459, 644, 461, 462, 0, 0, 463, 0,
	0, 0, 465, 466, 467, 0, 0, 468, 469, 645,
	0, 470, 0, 646, 471, 472, 464, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 0, 482, 483, 647,
	484, 485, 486, 648, 487, 488, 489, 649, 490, 650,
	491, 492, 0, 493, 494, 0, 495, 496, 497, 498,
	499, 500, 501, 651, 502, 504, 503, 505, 0, 506,
	0, 507, 508, 509, 0, 0, 0, 0, 510, 0,
	512, 513, 514, 515, 511, 516, 517, 518, 519, 0,
	520, 521, 522, 0, 523, 524, 525, 526, 652, 527,
	0, 528, 529, 535, 536, 530, 531, 537, 538, 539,
	540, 541, 0, 543, 544, 542, 545, 546, 547, 0,
	548, 549, 532, 533, 550, 551, 0, 552, 553, 554,
	555, 556, 557, 653, 0, 558, 0, 559, 560, 561,
	563, 534, 564, 569, 570, 654, 565, 566, 567, 568,
	655, 572, 573, 0, 574, 575, 0, 571, 562, 0,
	576, 577, 578, 579, 580, 581, 582, 354, 583, 0,
	584, 656, 657, 658, 659, 0, 593, 0, 585, 586,
	587, 660, 588, 661, 0, 589, 590, 591, 592, 0,
	594, 595, 0, 0, 596, 597, 598, 600, 601, 599,
	602, 0, 603, 0, 0, 604, 605, 606, 662, 663,
	664, 0, 608, 607, 609, 665, 1451, 0, 264, 0,
	0, 610, 611, 666, 612, 613, 614, 0, 0, 0,
	0, 0, 0, 0, 0, 270, 272, 271, 273, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 615, 0, 0, 0, 0, 280, 281, 0, 282,
	283, 284, 285, 286, 287, 616, 617, 0, 288, 618,
	289, 619, 0, 620, 290, 291, 292, 293, 294, 295,
	0, 0, 0, 296, 621, 622, 623, 0, 297, 298,
	624, 0, 0, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 0, 321, 322, 323, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 326, 327, 328, 0, 329, 625,
	626, 0, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 340, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 627, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 628,
	629, 360, 0, 267, 0, 0, 0, 0, 0, 361,
	362, 363, 630, 0, 0, 0, 364, 0, 365, 0,
	0, 0, 366, 367, 631, 632, 368, 369, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 633, 0, 634,
	378, 0, 379, 380, 381, 382, 383, 1453, 636, 637,
	460, 0, 384, 385, 0, 386, 387, 388, 389, 0,
	0, 0, 268, 390, 391, 392, 394, 0, 0, 393,
	638, 639, 0, 640, 0, 395, 396, 0, 641, 0,
	397, 398, 399, 0, 400, 0, 0, 0, 401, 402,
	403, 404, 405, 406, 0, 407, 409, 408, 0, 410,
	642, 0, 411, 412, 0, 0, 413, 0, 0, 0,
	414, 415, 418, 0, 0, 416, 417, 419, 420, 0,
	421, 422, 424, 427, 423, 425, 426, 428, 441, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 443, 0, 442, 0, 444, 445, 446, 451, 453,
	454, 449, 450, 452, 455, 456, 448, 0, 447, 0,
	269, 0, 457, 458, 0, 643, 459, 644, 461, 462,
	0, 0, 463, 0, 0, 0, 465, 466, 467, 0,
	0, 468, 469, 645, 0, 470, 0, 646, 471, 472,
	464, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	0, 482, 483, 647, 484, 485, 486, 648, 487, 488,
	489, 649, 490, 650, 491, 492, 0, 493, 494, 0,
	495, 496, 497, 498, 499, 500, 501, 651, 502, 504,
	503, 505, 0, 506, 0, 507, 508, 509, 0, 0,
	0, 0, 510, 0, 512, 513, 514, 515, 511, 516,
	517, 518, 519, 0, 520, 521, 522, 0, 523, 524,
	525, 526, 652, 527, 0, 528, 529, 535, 536, 530,
	531, 537, 538, 539, 540, 541, 0, 543, 544, 542,
	545, 546, 547, 0, 548, 549, 532, 533, 550, 551,
	0, 552, 553, 554, 555, 556, 557, 653, 0, 558,
	0, 559, 560, 561, 563, 534, 564, 569, 570, 654,
	565, 566, 567, 568, 655, 572, 573, 0, 574, 575,
	0, 571, 562, 0, 576, 577, 578, 579, 580, 581,
	582, 354, 583, 0, 584, 656, 657, 658, 659, 0,
	593, 0, 585, 586, 587, 660, 588, 661, 0, 589,
	590, 591, 592, 0, 594, 595, 0, 0, 596, 597,
	598, 600, 601, 599, 602, 0, 603, 0, 0, 604,
	605, 606, 662, 663, 664, 0, 608, 607, 609, 665,
	1278, 0, 264, 0, 0, 610, 611, 666, 612, 613,
	614, 0, 0, 0, 0, 0, 0, 0, 0, 270,
	272, 271, 273, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 615, 0, 0, 0, 0,
	280, 281, 0, 282, 283, 284, 285, 286, 287, 616,
	617, 0, 288, 618, 289, 619, 0, 620, 290, 291,
	292, 293, 294, 295, 0, 0, 0, 296, 621, 622,
	623, 0, 297, 298, 624, 0, 0, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 0, 321, 322, 323, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 326, 327,
	328, 0, 329, 625, 626, 0, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	340, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 627, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 628, 629, 360, 0, 267, 0, 0,
	0, 0, 0, 361, 362, 363, 630, 0, 0, 0,
	364, 0, 365, 0, 0, 0, 366, 367, 631, 632,
	368, 369, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 633, 0, 634, 378, 0, 379, 380, 381, 382,
	383, 1277, 636, 637, 460, 0, 384, 385, 0, 386,
	387, 388, 389, 0, 0, 0, 268, 390, 391, 392,
	394, 0, 0, 393, 638, 639, 0, 640, 0, 395,
	396, 0, 641, 0, 397, 398, 399, 0, 400, 0,
	0, 0, 401, 402, 403, 404, 405, 406, 0, 407,
	409, 408, 0, 410, 642, 0, 411, 412, 0, 0,
	413, 0, 0, 0, 414, 415, 418, 0, 0, 416,
	417, 419, 420, 0, 421, 422, 424, 427, 423, 425,
	426, 428, 441, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 443, 0, 442, 0, 444,
	445, 446, 451, 453, 454, 449, 450, 452, 455, 456,
	448, 0, 447, 0, 269, 0, 457, 458, 0, 643,
	459, 644, 461, 462, 0, 0, 463, 0, 0, 0,
	465, 466, 467, 0, 0, 468, 469, 645, 0, 470,
	0, 646, 471, 472, 464, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 0, 482, 483, 647, 484, 485,
	486, 648, 487, 488, 489, 649, 490, 650, 491, 492,
	0, 493, 494, 0, 495, 496, 497, 498, 499, 500,
	501, 651, 502, 504, 503, 505, 0, 506, 0, 507,
	508, 509, 0, 0, 0, 0, 510, 0, 512, 513,
	514, 515, 511, 516, 517, 518, 519, 0, 520, 521,
	522, 0, 523, 524, 525, 526, 652, 527, 0, 528,
	529, 535, 536, 530, 531, 537, 538, 539, 540, 541,
	0, 543, 544, 542, 545, 546, 547, 0, 548, 549,
	532, 533, 550, 551, 0, 552, 553, 554, 555, 556,
	557, 653, 0, 558, 0, 559, 560, 561, 563, 534,
	564, 569, 570, 654, 565, 566, 567, 568, 655, 572,
	573, 0, 574, 575, 0, 571, 562, 0, 576, 577,
	578, 579, 580, 581, 582, 354, 583, 0, 584, 656,
	657, 658, 659, 0, 593, 0, 585, 586, 587, 660,
	588, 661, 0, 589, 590, 591, 592, 0, 594, 595,
	0, 0, 596, 597, 598, 600, 601, 599, 602, 0,
	603, 0, 0, 604, 605, 606, 662, 663, 664, 0,
	608, 607, 609, 665, 1268, 0, 264, 0, 0, 610,
	611, 666, 612, 613, 614, 0, 0, 0, 0, 0,
	0, 0, 0, 270, 272, 271, 273, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 615,
	0, 0, 0, 0, 280, 281, 0, 282, 283, 284,
	285, 286, 287, 616, 617, 0, 288, 618, 289, 619,
	0, 620, 290, 291, 292, 293, 294, 295, 0, 0,
	0, 296, 621, 622, 623, 0, 297, 298, 624, 0,
	0, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 0,
	321, 322, 323, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 326, 327, 328, 0, 329, 625, 626, 0,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 340, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 627, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 628, 629, 360,
	0, 267, 0, 0, 0, 0, 0, 361, 362, 363,
	630, 0, 0, 0, 364, 0, 365, 0, 0, 0,
	366, 367, 631, 632, 368, 369, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 633, 0, 634, 378, 0,
	379, 380, 381, 382, 383, 1267, 636, 637, 460, 0,
	384, 385, 0, 386, 387, 388, 389, 0, 0, 0,
	268, 390, 391, 392, 394, 0, 0, 393, 638, 639,
	0, 640, 0, 395, 396, 0, 641, 0, 397, 398,
	399, 0, 400, 0, 0, 0, 401, 402, 403, 404,
	405, 406, 0, 407, 409, 408, 0, 410, 642, 0,
	411, 412, 0, 0, 413, 0, 0, 0, 414, 415,
	418, 0, 0, 416, 417, 419, 420, 0, 421, 422,
	424, 427, 423, 425, 426, 428, 441, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 443,
	0, 442, 0, 444, 445, 446, 451, 453, 454, 449,
	450, 452, 455, 456, 448, 0, 447, 0, 269, 0,
	457, 458, 0, 643, 459, 644, 461, 462, 0, 0,
	463, 0, 0, 0, 465, 466, 467, 0, 0, 468,
	469, 645, 0, 470, 0, 646, 471, 472, 464, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 0, 482,
	483, 647, 484, 485, 486, 648, 487, 488, 489, 649,
	490, 650, 491, 492, 0, 493, 494, 0, 495, 496,
	497, 498, 499, 500, 501, 651, 502, 504, 503, 505,
	0, 506, 0, 507, 508, 509, 0, 0, 0, 0,
	510, 0, 512, 513, 514, 515, 511, 516, 517, 518,
	519, 0, 520, 521, 522, 0, 523, 524, 525, 526,
	652, 527, 0, 528, 529, 535, 536, 530, 531, 537,
	538, 539, 540, 541, 0, 543, 544, 542, 545, 546,
	547, 0, 548, 549, 532, 533, 550, 551, 0, 552,
	553, 554, 555, 556, 557, 653, 0, 558, 0, 559,
	560, 561, 563, 534, 564, 569, 570, 654, 565, 566,
	567, 568, 655, 572, 573, 0, 574, 575, 0, 571,
	562, 0, 576, 577, 578, 579, 580, 581, 582, 354,
	583, 0, 584, 656, 657, 658, 659, 0, 593, 0,
	585, 586, 587, 660, 588, 661, 0, 589, 590, 591,
	592, 0, 594, 595, 0, 0, 596, 597, 598, 600,
	601, 599, 602, 0, 603, 0, 0, 604, 605, 606,
	662, 663, 664, 0, 608, 607, 609, 665, 1265, 0,
	264, 0, 0, 610, 611, 666, 612, 613, 614, 0,
	0, 0, 0, 0, 0, 0, 0, 270, 272, 271,
	273, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 615, 0, 0, 0, 0, 280, 281,
	0, 282, 283, 284, 285, 286, 287, 616, 617, 0,
	288, 618, 289, 619, 0, 620, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 621, 622, 623, 0,
	297, 298, 624, 0, 0, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 323, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 326, 327, 328, 0,
	329, 625, 626, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	627, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 628, 629, 360, 0, 267, 0, 0, 0, 0,
	0, 361, 362, 363, 630, 0, 0, 0, 364, 0,
	365, 0, 0, 0, 366, 367, 631, 632, 368, 369,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 633,
	0, 634, 378, 0, 379, 380, 381, 382, 383, 1264,
	636, 637, 460, 0, 384, 385, 0, 386, 387, 388,
	389, 0, 0, 0, 268, 390, 391, 392, 394, 0,
	0, 393, 638, 639, 0, 640, 0, 395, 396, 0,
	641, 0, 397, 398, 399, 0, 400, 0, 0, 0,
	401, 402, 403, 404, 405, 406, 0, 407, 409, 408,
	0, 410, 642, 0, 411, 412, 0, 0, 413, 0,
	0, 0, 414, 415, 418, 0, 0, 416, 417, 419,
	420, 0, 421, 422, 424, 427, 423, 425, 426, 428,
	441, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 443, 0, 442, 0, 444, 445, 446,
	451, 453, 454, 449, 450, 452, 455, 456, 448, 0,
	447, 0, 269, 0, 457, 458, 0, 643, 459, 644,
	461, 462, 0, 0, 463, 0, 0, 0, 465, 466,
	467, 0, 0, 468, 469, 645, 0, 470, 0, 646,
	471, 472, 464, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 0, 482, 483, 647, 484, 485, 486, 648,
	487, 488, 489, 649, 490, 650, 491, 492, 0, 493,
	494, 0, 495, 496, 497, 498, 499, 500, 501, 651,
	502, 504, 503, 505, 0, 506, 0, 507, 508, 509,
	0, 0, 0, 0, 510, 0, 512, 513, 514, 515,
	511, 516, 517, 518, 519, 0, 520, 521, 522, 0,
	523, 524, 525, 526, 652, 527, 0, 528, 529, 535,
	536, 530, 531, 537, 538, 539, 540, 541, 0, 543,
	544, 542, 545, 546, 547, 0, 548, 549, 532, 533,
	550, 551, 0, 552, 553, 554, 555, 556, 557, 653,
	0, 558, 0, 559, 560, 561, 563, 534, 564, 569,
	570, 654, 565, 566, 567, 568, 655, 572, 573, 0,
	574, 575, 0, 571, 562, 0, 576, 577, 578, 579,
	580, 581, 582, 354, 583, 0, 584, 656, 657, 658,
	659, 0, 593, 0, 585, 586, 587, 660, 588, 661,
	0, 589, 590, 591, 592, 0, 594, 595, 0, 0,
	596, 597, 598, 600, 601, 599, 602, 0, 603, 0,
	0, 604, 605, 606, 662, 663, 664, 0, 608, 607,
	609, 665, 1260, 0, 264, 0, 0, 610, 611, 666,
	612, 613, 614, 0, 0, 0, 0, 0, 0, 0,
	0, 270, 272, 271, 273, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 615, 0, 0,
	0, 0, 280, 281, 0, 282, 283, 284, 285, 286,
	287, 616, 617, 0, 288, 618, 289, 619, 0, 620,
	290, 291, 292, 293, 294, 295, 0, 0, 0, 296,
	621, 622, 623, 0, 297, 298, 624, 0, 0, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 0, 321, 322,
	323, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	326, 327, 328, 0, 329, 625, 626, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 340, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 627, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 628, 629, 360, 0, 267,
	0, 0, 0, 0, 0, 361, 362, 363, 630, 0,
	0, 0, 364, 0, 365, 0, 0, 0, 366, 367,
	631, 632, 368, 369, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 633, 0, 634, 378, 0, 379, 380,
	381, 382, 383, 1259, 636, 637, 460, 0, 384, 385,
	0, 386, 387, 388, 389, 0, 0, 0, 268, 390,
	391, 392, 394, 0, 0, 393, 638, 639, 0, 640,
	0, 395, 396, 0, 641, 0, 397, 398, 399, 0,
	400, 0, 0, 0, 401, 402, 403, 404, 405, 406,
	0, 407, 409, 408, 0, 410, 642, 0, 411, 412,
	0, 0, 413, 0, 0, 0, 414, 415, 418, 0,
	0, 416, 417, 419, 420, 0, 421, 422, 424, 427,
	423, 425, 426, 428, 441, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 443, 0, 442,
	0, 444, 445, 446, 451, 453, 454, 449, 450, 452,
	455, 456, 448, 0, 447, 0, 269, 0, 457, 458,
	0, 643, 459, 644, 461, 462, 0, 0, 463, 0,
	0, 0, 465, 466, 467, 0, 0, 468, 469, 645,
	0, 470, 0, 646, 471, 472, 464, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 0, 482, 483, 647,
	484, 485, 486, 648, 487, 488, 489, 649, 490, 650,
	491, 492, 0, 493, 494, 0, 495, 496, 497, 498,
	499, 500, 501, 651, 502, 504, 503, 505, 0, 506,
	0, 507, 508, 509, 0, 0, 0, 0, 510, 0,
	512, 513, 514, 515, 511, 516, 517, 518, 519, 0,
	520, 521, 522, 0, 523, 524, 525, 526, 652, 527,
	0, 528, 529, 535, 536, 530, 531, 537, 538, 539,
	540, 541, 0, 543, 544, 542, 545, 546, 547, 0,
	548, 549, 532, 533, 550, 551, 0, 552, 553, 554,
	555, 556, 557, 653, 0, 558, 0, 559, 560, 561,
	563, 534, 564, 569, 570, 654, 565, 566, 567, 568,
	655, 572, 573, 0, 574, 575, 0, 571, 562, 0,
	576, 577, 578, 579, 580, 581, 582, 354, 583, 0,
	584, 656, 657, 658, 659, 0, 593, 0, 585, 586,
	587, 660, 588, 661, 0, 589, 590, 591, 592, 0,
	594, 595, 0, 0, 596, 597, 598, 600, 601, 599,
	602, 0, 603, 0, 0, 604, 605, 606, 662, 663,
	664, 0, 608, 607, 609, 665, 668, 0, 264, 0,
	0, 610, 611, 666, 612, 613, 614, 0, 0, 0,
	0, 0, 0, 0, 0, 270, 272, 271, 273, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 615, 0, 0, 0, 0, 280, 281, 0, 282,
	283, 284, 285, 286, 287, 616, 617, 0, 288, 618,
	289, 619, 0, 620, 290, 291, 292, 293, 294, 295,
	0, 0, 0, 296, 621, 622, 623, 0, 297, 298,
	624, 0, 0, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 0, 321, 322, 323, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 326, 327, 328, 0, 329, 625,
	626, 0, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 340, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 627, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 628,
	629, 360, 0, 267, 0, 0, 0, 0, 0, 361,
	362, 363, 630, 0, 0, 0, 364, 0, 365, 0,
	0, 0, 366, 367, 631, 632, 368, 369, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 633, 0, 634,
	378, 0, 379, 380, 381, 382, 383, 635, 636, 637,
	460, 0, 384, 385, 0, 386, 387, 388, 389, 0,
	0, 0, 268, 390, 391, 392, 394, 0, 0, 393,
	638, 639, 0, 640, 0, 395, 396, 0, 641, 0,
	397, 398, 399, 0, 400, 0, 0, 0, 401, 402,
	403, 404, 405, 406, 0, 407, 409, 408, 0, 410,
	642, 0, 411, 412, 0, 0, 413, 0, 0, 0,
	414, 415, 418, 0, 0, 416, 417, 419, 420, 0,
	421, 422, 424, 427, 423, 425, 426, 428, 441, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 443, 0, 442, 0, 444, 445, 446, 451, 453,
	454, 449, 450, 452, 455, 456, 448, 0, 447, 0,
	269, 0, 457, 458, 0, 643, 459, 644, 461, 462,
	0, 0, 463, 0, 0, 0, 465, 466, 467, 0,
	0, 468, 469, 645, 0, 470, 0, 646, 471, 472,
	464, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	0, 482, 483, 647, 484, 485, 486, 648, 487, 488,
	489, 649, 490, 650, 491, 492, 0, 493, 494, 0,
	495, 496, 497, 498, 499, 500, 501, 651, 502, 504,
	503, 505, 0, 506, 0, 507, 508, 509, 0, 0,
	0, 0, 510, 0, 512, 513, 514, 515, 511, 516,
	517, 518, 519, 0, 520, 521, 522, 0, 523, 524,
	525, 526, 652, 527, 0, 528, 529, 535, 536, 530,
	531, 537, 538, 539, 540, 541, 0, 543, 544, 542,
	545, 546, 547, 0, 548, 549, 532, 533, 550, 551,
	0, 552, 553, 554, 555, 556, 557, 653, 0, 558,
	0, 559, 560, 561, 563, 534, 564, 569, 570, 654,
	565, 566, 567, 568, 655, 572, 573, 0, 574, 575,
	0, 571, 562, 0, 576, 577, 578, 579, 580, 581,
	582, 354, 583, 0, 584, 656, 657, 658, 659, 0,
	593, 0, 585, 586, 587, 660, 588, 661, 0, 589,
	590, 591, 592, 0, 594, 595, 0, 0, 596, 597,
	598, 600, 601, 599, 602, 0, 603, 0, 0, 604,
	605, 606, 662, 663, 664, 0, 608, 607, 609, 665,
	255, 0, 264, 0, 0, 610, 611, 666, 612, 613,
	614, 0, 0, 0, 0, 0, 0, 0, 0, 270,
	272, 271, 273, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 615, 0, 0, 0, 0,
	280, 281, 0, 282, 283, 284, 285, 286, 287, 616,
	617, 0, 288, 618, 289, 619, 0, 620, 290, 291,
	292, 293, 294, 295, 0, 0, 0, 296, 621, 622,
	623, 0, 297, 298, 624, 0, 0, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 0, 321, 322, 323, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 326, 327,
	328, 0, 329, 625, 626, 0, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	340, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 627, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 628, 629, 360, 0, 267, 0, 0,
	0, 0, 0, 361, 362, 363, 630, 0, 0, 0,
	364, 0, 365, 0, 0, 0, 366, 367, 631, 632,
	368, 369, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 633, 0, 634, 378, 0, 379, 380, 381, 382,
	383, 635, 636, 637, 460, 0, 384, 385, 0, 386,
	387, 388, 389, 0, 0, 0, 268, 390, 391, 392,
	394, 0, 0, 393, 638, 639, 0, 640, 0, 395,
	396, 0, 641, 0, 397, 398, 399, 0, 400, 0,
	0, 0, 401, 402, 403, 404, 405, 406, 0, 407,
	409, 408, 0, 410, 642, 0, 411, 412, 0, 0,
	413, 0, 0, 0, 414, 415, 418, 0, 0, 416,
	417, 419, 420, 0, 421, 422, 424, 427, 423, 425,
	426, 428, 441, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 443, 0, 442, 0, 444,
	445, 446, 451, 453, 454, 449, 450, 452, 455, 456,
	448, 0, 447, 0, 269, 0, 457, 458, 0, 643,
	459, 644, 461, 462, 0, 0, 463, 0, 0, 0,
	465, 466, 467, 0, 0, 468, 469, 645, 0, 470,
	0, 646, 471, 472, 464, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 0, 482, 483, 647, 484, 485,
	486, 648, 487, 488, 489, 649, 490, 650, 491, 492,
	0, 493, 494, 0, 495, 496, 497, 498, 499, 500,
	501, 651, 502, 504, 503, 505, 0, 506, 0, 507,
	508, 509, 0, 0, 0, 0, 510, 0, 512, 513,
	514, 515, 511, 516, 517, 518, 519, 0, 520, 521,
	522, 0, 523, 524, 525, 526, 652, 527, 0, 528,
	529, 535, 536, 530, 531, 537, 538, 539, 540, 541,
	0, 543, 544, 542, 545, 546, 547, 0, 548, 549,
	532, 533, 550, 551, 0, 552, 553, 554, 555, 556,
	557, 653, 0, 558, 0, 559, 560, 561, 563, 534,
	564, 569, 570, 654, 565, 566, 567, 568, 655, 572,
	573, 0, 574, 575, 0, 571, 562, 0, 576, 577,
	578, 579, 580, 581, 582, 354, 583, 0, 584, 656,
	657, 658, 659, 0, 593, 0, 585, 586, 587, 660,
	588, 661, 0, 589, 590, 591, 592, 0, 594, 595,
	0, 0, 596, 597, 598, 600, 601, 599, 602, 0,
	603, 0, 0, 604, 605, 606, 662, 663, 664, 264,
	608, 607, 609, 665, 0, 0, 0, 0, 0, 610,
	611, 666, 612, 613, 614, 0, 270, 272, 271, 273,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 615, 0, 0, 0, 0, 280, 281, 0,
	282, 283, 284, 285, 286, 287, 616, 617, 0, 288,
	618, 289, 619, 0, 620, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 621, 622, 623, 0, 297,
	298, 624, 0, 0, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 0, 321, 322, 323, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 327, 328, 0, 329,
	625, 626, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 627,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	628, 629, 360, 0, 267, 0, 0, 0, 0, 0,
	361, 362, 363, 630, 0, 0, 0, 364, 0, 365,
	0, 0, 0, 366, 367, 631, 632, 368, 369, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 633, 0,
	634, 378, 0, 379, 380, 381, 382, 383, 635, 636,
	637, 460, 0, 384, 385, 0, 386, 387, 388, 389,
	0, 0, 0, 268, 390, 391, 392, 394, 0, 0,
	393, 638, 639, 0, 640, 0, 395, 396, 0, 641,
	0, 397, 398, 399, 0, 400, 0, 0, 0, 401,
	402, 403, 404, 405, 406, 0, 407, 409, 408, 0,
	410, 642, 0, 411, 412, 0, 0, 413, 0, 0,
	0, 414, 415, 418, 0, 0, 416, 417, 419, 420,
	0, 421, 422, 424, 427, 423, 425, 426, 428, 441,
	429, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 443, 0, 442, 0, 444, 445, 446, 451,
	453, 454, 449, 450, 452, 455, 456, 448, 0, 447,
	0, 269, 0, 457, 458, 0, 643, 459, 644, 461,
	462, 0, 0, 463, 0, 0, 0, 465, 466, 467,
	0, 0, 468, 469, 645, 0, 470, 0, 646, 471,
	472, 464, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 0, 482, 483, 647, 484, 485, 486, 648, 487,
	488, 489, 649, 490, 650, 491, 492, 0, 493, 494,
	0, 495, 496, 497, 498, 499, 500, 501, 651, 502,
	504, 503, 505, 0, 506, 0, 507, 508, 509, 0,
	0, 0, 0, 510, 0, 512, 513, 514, 515, 511,
	516, 517, 518, 519, 0, 520, 521, 522, 0, 523,
	524, 525, 526, 652, 527, 0, 528, 529, 535, 536,
	530, 531, 537, 538, 539, 540, 541, 0, 543, 544,
	542, 545, 546, 547, 0, 548, 549, 532, 533, 550,
	551, 0, 552, 553, 554, 555, 556, 557, 653, 0,
	558, 0, 559, 560, 561, 563, 534, 564, 569, 570,
	654, 565, 566, 567, 568, 655, 572, 573, 0, 574,
	575, 0, 571, 562, 0, 576, 577, 578, 579, 580,
	581, 582, 354, 583, 0, 584, 656, 657, 658, 659,
	0, 593, 0, 585, 586, 587, 660, 588, 661, 0,
	589, 590, 591, 592, 0, 594, 595, 0, 0, 596,
	597, 598, 600, 601, 599, 602, 0, 603, 0, 0,
	604, 605, 606, 662, 663, 664, 264, 608, 607, 609,
	665, 0, 0, 0, 0, 0, 610, 611, 666, 612,
	613, 614, 0, 270, 272, 271, 273, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 615,
	0, 0, 0, 0, 3694, 281, 0, 282, 283, 284,
	285, 286, 287, 616, 617, 0, 288, 618, 289, 619,
	0, 620, 290, 291, 292, 293, 294, 295, 0, 0,
	0, 296, 621, 622, 623, 0, 297, 298, 624, 0,
	0, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 0,
	321, 322, 323, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 326, 327, 328, 0, 329, 625, 626, 0,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 340, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 627, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 628, 629, 360,
	0, 0, 0, 0, 0, 0, 0, 361, 362, 363,
	630, 0, 0, 0, 364, 0, 365, 0, 0, 0,
	366, 367, 631, 632, 368, 369, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 633, 0, 634, 378, 0,
	379, 380, 381, 382, 383, 635, 636, 637, 460, 0,
	384, 385, 0, 386, 387, 388, 389, 0, 0, 0,
	0, 390, 391, 392, 394, 0, 0, 393, 638, 639,
	0, 640, 0, 395, 396, 0, 641, 0, 397, 398,
	399, 0, 400, 0, 0, 0, 401, 402, 403, 404,
	405, 406, 0, 407, 409, 408, 0, 410, 642, 0,
	411, 412, 0, 0, 413, 0, 0, 0, 414, 415,
	418, 0, 0, 416, 417, 419, 420, 0, 421, 422,
	424, 427, 423, 425, 426, 428, 441, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 443,
	0, 442, 0, 444, 445, 446, 451, 453, 454, 449,
	450, 452, 455, 456, 448, 3695, 447, 0, 0, 0,
	457, 458, 0, 643, 459, 644, 461, 462, 0, 0,
	463, 0, 0, 0, 465, 466, 467, 0, 0, 468,
	469, 645, 0, 470, 0, 646, 471, 472, 464, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 0, 482,
	483, 647, 484, 485, 486, 648, 487, 488, 489, 649,
	490, 650, 491, 492, 3697, 493, 494, 0, 495, 496,
	497, 498, 499, 500, 501, 651, 502, 504, 503, 505,
	0, 506, 0, 507, 508, 509, 0, 0, 0, 0,
	510, 0, 512, 513, 514, 515, 511, 516, 517, 518,
	519, 0, 520, 521, 522, 0, 523, 524, 525, 526,
	3698, 527, 0, 528, 529, 535, 536, 530, 531, 537,
	538, 539, 540, 541, 0, 543, 544, 542, 545, 546,
	547, 0, 548, 549, 532, 533, 550, 551, 0, 552,
	553, 554, 555, 556, 557, 653, 0, 558, 0, 559,
	560, 561, 563, 534, 564, 569, 570, 654, 565, 566,
	567, 568, 655, 572, 573, 0, 574, 575, 0, 571,
	562, 0, 576, 577, 578, 579, 580, 581, 582, 354,
	583, 0, 584, 656, 657, 658, 659, 3693, 593, 0,
	585, 586, 587, 660, 588, 661, 0, 589, 590, 591,
	592, 0, 594, 595, 0, 0, 596, 597, 598, 600,
	601, 599, 602, 0, 603, 0, 0, 604, 605, 606,
	662, 663, 664, 264, 608, 607, 609, 665, 0, 0,
	0, 0, 0, 610, 611, 666, 612, 613, 614, 0,
	270, 272, 271, 273, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 615, 0, 0, 0,
	0, 280, 281, 0, 282, 283, 284, 285, 286, 287,
	616, 617, 0, 288, 618, 289, 619, 0, 620, 290,
	291, 292, 293, 294, 295, 0, 0, 0, 296, 621,
	622, 623, 0, 297, 298, 624, 0, 0, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 690, 318, 319, 320, 0, 321, 322, 323,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	327, 328, 0, 329, 625, 626, 0, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 340, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 627, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 628, 629, 360, 0, 0, 0,
	0, 0, 0, 0, 361, 362, 363, 630, 0, 0,
	0, 364, 0, 365, 0, 0, 0, 366, 367, 631,
	632, 368, 369, 370, 371, 372, 373, 374, 375, 376,
	691, 377, 633, 0, 634, 378, 0, 379, 380, 381,
	382, 383, 635, 636, 637, 460, 0, 384, 385, 0,
	386, 387, 388, 389, 0, 0, 0, 0, 390, 391,
	392, 394, 0, 0, 393, 638, 639, 0, 640, 0,
	395, 396, 0, 641, 0, 397, 398, 399, 0, 400,
	0, 0, 0, 401, 402, 403, 404, 405, 406, 0,
	407, 409, 408, 0, 410, 642, 0, 411, 412, 0,
	0, 413, 0, 0, 0, 414, 415, 418, 0, 0,
	416, 417, 419, 420, 0, 421, 422, 424, 427, 423,
	425, 426, 428, 441, 429, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 443, 0, 442, 0,
	444, 445, 446, 451, 453, 454, 449, 450, 452, 455,
	456, 448, 0, 447, 0, 0, 0, 457, 458, 0,
	643, 459, 644, 461, 462, 0, 0, 463, 0, 0,
	0, 465, 466, 467, 0, 0, 468, 469, 645, 0,
	470, 0, 646, 471, 472, 464, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 0, 482, 483, 647, 484,
	485, 486, 648, 487, 488, 489, 649, 490, 650, 491,
	492, 0, 493, 494, 0, 495, 496, 497, 498, 499,
	500, 501, 651, 502, 504, 503, 505, 0, 506, 0,
	507, 508, 509, 0, 0, 0, 0, 510, 0, 512,
	513, 514, 515, 511, 516, 517, 518, 519, 0, 520,
	521, 522, 0, 523, 524, 525, 526, 652, 527, 0,
	528, 529, 535, 536, 530, 531, 537, 538, 539, 540,
	541, 692, 543, 544, 542, 545, 546, 547, 0, 548,
	549, 532, 533, 550, 551, 0, 552, 553, 554, 555,
	556, 557, 653, 0, 558, 0, 559, 560, 561, 563,
	534, 564, 569, 570, 654, 565, 566, 567, 568, 655,
	572, 573, 0, 574, 575, 0, 571, 562, 0, 576,
	577, 578, 579, 580, 581, 582, 354, 583, 0, 584,
	656, 657, 658, 659, 0, 593, 0, 585, 586, 587,
	660, 588, 661, 0, 589, 590, 591, 592, 0, 594,
	595, 0, 0, 596, 597, 598, 600, 601, 599, 602,
	0, 603, 0, 0, 604, 605, 606, 662, 663, 664,
	264, 608, 607, 609, 665, 0, 0, 0, 0, 0,
	610, 611, 666, 612, 613, 614, 0, 270, 272, 271,
	273, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 615, 0, 0, 0, 0, 280, 281,
	0, 282, 283, 284, 285, 286, 287, 616, 617, 0,
	288, 618, 289, 619, 0, 620, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 621, 622, 623, 0,
	297, 298, 624, 0, 0, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 323, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 326, 2287, 328, 0,
	329, 625, 626, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	627, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 628, 629, 360, 0, 267, 0, 0, 0, 0,
	0, 361, 362, 363, 630, 0, 0, 0, 364, 0,
	365, 0, 0, 0, 366, 367, 631, 632, 368, 369,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 633,
	0, 634, 378, 0, 379, 380, 381, 382, 383, 635,
	636, 637, 460, 0, 384, 385, 0, 386, 387, 388,
	389, 0, 0, 0, 268, 390, 391, 392, 394, 0,
	0, 393, 638, 639, 0, 640, 0, 395, 396, 0,
	641, 0, 397, 398, 399, 0, 400, 0, 0, 0,
	401, 402, 403, 404, 405, 406, 0, 407, 409, 408,
	0, 410, 642, 0, 411, 412, 0, 0, 413, 0,
	0, 0, 414, 415, 418, 0, 0, 416, 417, 419,
	420, 0, 421, 422, 424, 427, 423, 425, 426, 428,
	441, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 443, 0, 442, 0, 444, 445, 446,
	451, 453, 454, 449, 450, 452, 455, 456, 448, 0,
	447, 0, 269, 0, 457, 458, 0, 643, 459, 644,
	461, 462, 0, 0, 463, 0, 0, 0, 465, 466,
	467, 0, 0, 468, 469, 645, 0, 470, 0, 646,
	471, 472, 464, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 0, 482, 483, 647, 484, 485, 486, 648,
	487, 488, 489, 649, 490, 650, 491, 492, 0, 493,
	494, 0, 495, 496, 497, 498, 499, 500, 501, 651,
	502, 504, 503, 505, 0, 506, 0, 507, 508, 509,
	0, 0, 0, 0, 510, 0, 512, 513, 514, 515,
	511, 516, 517, 518, 519, 0, 520, 521, 522, 0,
	523, 524, 525, 526, 652, 527, 0, 528, 529, 535,
	536, 530, 531, 537, 538, 539, 540, 541, 0, 543,
	544, 542, 545, 546, 547, 0, 548, 549, 532, 533,
	550, 551, 0, 552, 553, 554, 555, 556, 557, 653,
	0, 558, 0, 559, 560, 561, 563, 534, 564, 569,
	570, 654, 565, 566, 567, 568, 655, 572, 573, 0,
	574, 575, 0, 571, 562, 0, 576, 577, 578, 579,
	580, 581, 582, 354, 583, 0, 584, 656, 657, 658,
	659, 0, 593, 0, 585, 586, 587, 660, 588, 661,
	0, 589, 590, 591, 592, 0, 594, 595, 0, 0,
	596, 597, 598, 600, 601, 599, 602, 0, 603, 0,
	0, 604, 605, 606, 662, 663, 664, 264, 608, 607,
	609, 665, 0, 0, 0, 0, 0, 610, 611, 666,
	612, 613, 614, 0, 270, 272, 271, 273, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	615, 0, 0, 0, 0, 280, 281, 0, 282, 283,
	284, 285, 286, 287, 616, 617, 0, 288, 618, 289,
	619, 0, 620, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 621, 622, 623, 0, 297, 298, 624,
	0, 0, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 323, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 2285, 328, 0, 329, 625, 626,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 627, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 628, 629,
	360, 0, 267, 0, 0, 0, 0, 0, 361, 362,
	363, 630, 0, 0, 0, 364, 0, 365, 0, 0,
	0, 366, 367, 631, 632, 368, 369, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 633, 0, 634, 378,
	0, 379, 380, 381, 382, 383, 635, 636, 637, 460,
	0, 384, 385, 0, 386, 387, 388, 389, 0, 0,
	0, 268, 390, 391, 392, 394, 0, 0, 393, 638,
	639, 0, 640, 0, 395, 396, 0, 641, 0, 397,
	398, 399, 0, 400, 0, 0, 0, 401, 402, 403,
	404, 405, 406, 0, 407, 409, 408, 0, 410, 642,
	0, 411, 412, 0, 0, 413, 0, 0, 0, 414,
	415, 418, 0, 0, 416, 417, 419, 420, 0, 421,
	422, 424, 427, 423, 425, 426, 428, 441, 429, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	443, 0, 442, 0, 444, 445, 446, 451, 453, 454,
	449, 450, 452, 455, 456, 448, 0, 447, 0, 269,
	0, 457, 458, 0, 643, 459, 644, 461, 462, 0,
	0, 463, 0, 0, 0, 465, 466, 467, 0, 0,
	468, 469, 645, 0, 470, 0, 646, 471, 472, 464,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 0,
	482, 483, 647, 484, 485, 486, 648, 487, 488, 489,
	649, 490, 650, 491, 492, 0, 493, 494, 0, 495,
	496, 497, 498, 499, 500, 501, 651, 502, 504, 503,
	505, 0, 506, 0, 507, 508, 509, 0, 0, 0,
	0, 510, 0, 512, 513, 514, 515, 511, 516, 517,
	518, 519, 0, 520, 521, 522, 0, 523, 524, 525,
	526, 652, 527, 0, 528, 529, 535, 536, 530, 531,
	537, 538, 539, 540, 541, 0, 543, 544, 542, 545,
	546, 547, 0, 548, 549, 532, 533, 550, 551, 0,
	552, 553, 554, 555, 556, 557, 653, 0, 558, 0,
	559, 560, 561, 563, 534, 564, 569, 570, 654, 565,
	566, 567, 568, 655, 572, 573, 0, 574, 575, 0,
	571, 562, 0, 576, 577, 578, 579, 580, 581, 582,
	354, 583, 0, 584, 656, 657, 658, 659, 0, 593,
	0, 585, 586, 587, 660, 588, 661, 0, 589, 590,
	591, 592, 0, 594, 595, 0, 0, 596, 597, 598,
	600, 601, 599, 602, 0, 603, 0, 0, 604, 605,
	606, 662, 663, 664, 264, 608, 607, 609, 665, 0,
	0, 0, 0, 0, 610, 611, 666, 612, 613, 614,
	0, 270, 272, 271, 273, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 615, 0, 0,
	0, 0, 280, 281, 0, 282, 283, 284, 285, 286,
	287, 616, 617, 0, 288, 618, 289, 619, 0, 620,
	290, 291, 292, 293, 294, 295, 0, 0, 0, 296,
	621, 622, 623, 0, 297, 298, 624, 0, 0, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 0, 321, 322,
	323, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	326, 2283, 328, 0, 329, 625, 626, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 340, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 627, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 628, 629, 360, 0, 267,
	0, 0, 0, 0, 0, 361, 362, 363, 630, 0,
	0, 0, 364, 0, 365, 0, 0, 0, 366, 367,
	631, 632, 368, 369, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 633, 0, 634, 378, 0, 379, 380,
	381, 382, 383, 635, 636, 637, 460, 0, 384, 385,
	0, 386, 387, 388, 389, 0, 0, 0, 268, 390,
	391, 392, 394, 0, 0, 393, 638, 639, 0, 640,
	0, 395, 396, 0, 641, 0, 397, 398, 399, 0,
	400, 0, 0, 0, 401, 402, 403, 404, 405, 406,
	0, 407, 409, 408, 0, 410, 642, 0, 411, 412,
	0, 0, 413, 0, 0, 0, 414, 415, 418, 0,
	0, 416, 417, 419, 420, 0, 421, 422, 424, 427,
	423, 425, 426, 428, 441, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 443, 0, 442,
	0, 444, 445, 446, 451, 453, 454, 449, 450, 452,
	455, 456, 448, 0, 447, 0, 269, 0, 457, 458,
	0, 643, 459, 644, 461, 462, 0, 0, 463, 0,
	0, 0, 465, 466, 467, 0, 0, 468, 469, 645,
	0, 470, 0, 646, 471, 472, 464, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 0, 482, 483, 647,
	484, 485, 486, 648, 487, 488, 489, 649, 490, 650,
	491, 492, 0, 493, 494, 0, 495, 496, 497, 498,
	499, 500, 501, 651, 502, 504, 503, 505, 0, 506,
	0, 507, 508, 509, 0, 0, 0, 0, 510, 0,
	512, 513, 514, 515, 511, 516, 517, 518, 519, 0,
	520, 521, 522, 0, 523, 524, 525, 526, 652, 527,
	0, 528, 529, 535, 536, 530, 531, 537, 538, 539,
	540, 541, 0, 543, 544, 542, 545, 546, 547, 0,
	548, 549, 532, 533, 550, 551, 0, 552, 553, 554,
	555, 556, 557, 653, 0, 558, 0, 559, 560, 561,
	563, 534, 564, 569, 570, 654, 565, 566, 567, 568,
	655, 572, 573, 0, 574, 575, 0, 571, 562, 0,
	576, 577, 578, 579, 580, 581, 582, 354, 583, 0,
	584, 656, 657, 658, 659, 0, 593, 0, 585, 586,
	587, 660, 588, 661, 0, 589, 590, 591, 592, 0,
	594, 595, 0, 0, 596, 597, 598, 600, 601, 599,
	602, 0, 603, 0, 0, 604, 605, 606, 662, 663,
	664, 264, 608, 607, 609, 665, 0, 0, 0, 0,
	0, 610, 611, 666, 612, 613, 614, 0, 270, 272,
	271, 273, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 615, 0, 0, 0, 0, 280,
	281, 0, 282, 283, 284, 285, 286, 287, 616, 617,
	0, 288, 618, 289, 619, 0, 620, 290, 291, 292,
	293, 294, 295, 0, 0, 0, 296, 621, 622, 623,
	0, 297, 298, 624, 0, 0, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 0, 321, 322, 323, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 327, 328,
	0, 329, 625, 626, 0, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 340,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 627, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 628, 629, 360, 0, 267, 0, 0, 0,
	0, 0, 361, 362, 363, 630, 0, 0, 0, 364,
	0, 365, 0, 0, 0, 366, 367, 631, 632, 368,
	369, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	633, 0, 634, 378, 0, 379, 380, 381, 382, 383,
	2204, 636, 637, 460, 0, 384, 385, 0, 386, 387,
	388, 389, 0, 0, 0, 268, 390, 391, 392, 394,
	0, 0, 393, 638, 639, 0, 640, 0, 395, 396,
	0, 641, 0, 397, 398, 399, 0, 400, 0, 0,
	0, 401, 402, 403, 404, 405, 406, 0, 407, 409,
	408, 0, 410, 642, 0, 411, 412, 0, 0, 413,
	0, 0, 0, 414, 415, 418, 0, 0, 416, 417,
	419, 420, 0, 421, 422, 424, 427, 423, 425, 426,
	428, 441, 429, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 443, 0, 442, 0, 444, 445,
	446, 451, 453, 454, 449, 450, 452, 455, 456, 448,
	0, 447, 0, 269, 0, 457, 458, 0, 643, 459,
	644, 461, 462, 0, 0, 463, 0, 0, 0, 465,
	466, 467, 0, 0, 468, 469, 645, 0, 470, 0,
	646, 471, 472, 464, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 0, 482, 483, 647, 484, 485, 486,
	648, 487, 488, 489, 649, 490, 650, 491, 492, 0,
	493, 494, 0, 495, 496, 497, 498, 499, 500, 501,
	651, 502, 504, 503, 505, 0, 506, 0, 507, 508,
	509, 0, 0, 0, 0, 510, 0, 512, 513, 514,
	515, 511, 516, 517, 518, 519, 0, 520, 521, 522,
	0, 523, 524, 525, 526, 652, 527, 0, 528, 529,
	535, 536, 530, 531, 537, 538, 539, 540, 541, 0,
	543, 544, 542, 545, 546, 547, 0, 548, 549, 532,
	533, 550, 551, 0, 552, 553, 554, 555, 556, 557,
	653, 0, 558, 0, 559, 560, 561, 563, 534, 564,
	569, 570, 654, 565, 566, 567, 568, 655, 572, 573,
	0, 574, 575, 0, 571, 562, 0, 576, 577, 578,
	579, 580, 581, 582, 354, 583, 0, 584, 656, 657,
	658, 659, 0, 593, 0, 585, 586, 587, 660, 588,
	661, 0, 589, 590, 591, 592, 0, 594, 595, 0,
	0, 596, 597, 598, 600, 601, 599, 602, 0, 603,
	0, 0, 604, 605, 606, 662, 663, 664, 264, 608,
	607, 609, 665, 0, 0, 0, 0, 0, 610, 611,
	666, 612, 613, 614, 0, 270, 272, 271, 273, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 615, 0, 0, 0, 0, 280, 281, 0, 282,
	283, 284, 285, 286, 287, 616, 617, 0, 288, 618,
	289, 619, 0, 620, 290, 291, 292, 293, 294, 295,
	0, 0, 0, 296, 621, 622, 623, 0, 297, 298,
	624, 0, 0, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 0, 321, 322, 323, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 326, 327, 328, 0, 329, 625,
	626, 0, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 340, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 627, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 628,
	629, 360, 0, 267, 0, 0, 0, 0, 0, 361,
	362, 363, 630, 0, 0, 0, 364, 0, 365, 0,
	0, 0, 366, 367, 631, 632, 368, 369, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 633, 0, 634,
	378, 0, 379, 380, 381, 382, 383, 2013, 636, 637,
	460, 0, 384, 385, 0, 386, 387, 388, 389, 0,
	0, 0, 268, 390, 391, 392, 394, 0, 0, 393,
	638, 639, 0, 640, 0, 395, 396, 0, 641, 0,
	397, 398, 399, 0, 400, 0, 0, 0, 401, 402,
	403, 404, 405, 406, 0, 407, 409, 408, 0, 410,
	642, 0, 411, 412, 0, 0, 413, 0, 0, 0,
	414, 415, 418, 0, 0, 416, 417, 419, 420, 0,
	421, 422, 424, 427, 423, 425, 426, 428, 441, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 443, 0, 442, 0, 444, 445, 446, 451, 453,
	454, 449, 450, 452, 455, 456, 448, 0, 447, 0,
	269, 0, 457, 458, 0, 643, 459, 644, 461, 462,
	0, 0, 463, 0, 0, 0, 465, 466, 467, 0,
	0, 468, 469, 645, 0, 470, 0, 646, 471, 472,
	464, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	0, 482, 483, 647, 484, 485, 486, 648, 487, 488,
	489, 649, 490, 650, 491, 492, 0, 493, 494, 0,
	495, 496, 497, 498, 499, 500, 501, 651, 502, 504,
	503, 505, 0, 506, 0, 507, 508, 509, 0, 0,
	0, 0, 510, 0, 512, 513, 514, 515, 511, 516,
	517, 518, 519, 0, 520, 521, 522, 0, 523, 524,
	525, 526, 652, 527, 0, 528, 529, 535, 536, 530,
	531, 537, 538, 539, 540, 541, 0, 543, 544, 542,
	545, 546, 547, 0, 548, 549, 532, 533, 550, 551,
	0, 552, 553, 554, 555, 556, 557, 653, 0, 558,
	0, 559, 560, 561, 563, 534, 564, 569, 570, 654,
	565, 566, 567, 568, 655, 572, 573, 0, 574, 575,
	0, 571, 562, 0, 576, 577, 578, 579, 580, 581,
	582, 354, 583, 0, 584, 656, 657, 658, 659, 0,
	593, 0, 585, 586, 587, 660, 588, 661, 0, 589,
	590, 591, 592, 0, 594, 595, 0, 0, 596, 597,
	598, 600, 601, 599, 602, 0, 603, 0, 0, 604,
	605, 606, 662, 663, 664, 264, 608, 607, 609, 665,
	0, 0, 0, 0, 0, 610, 611, 666, 612, 613,
	614, 0, 270, 272, 271, 273, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 615, 0,
	0, 0, 0, 280, 281, 0, 282, 283, 284, 285,
	286, 287, 616, 617, 0, 288, 618, 289, 619, 0,
	620, 290, 291, 292, 293, 294, 295, 0, 0, 0,
	296, 621, 622, 623, 0, 297, 298, 624, 0, 0,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 323, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 327, 328, 0, 329, 625, 626, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 627, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 628, 629, 360, 0,
	267, 0, 0, 0, 0, 0, 361, 362, 363, 630,
	0, 0, 0, 364, 0, 365, 0, 0, 0, 366,
	367, 631, 632, 368, 369, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 633, 0, 634, 378, 0, 379,
	380, 381, 382, 383, 2007, 636, 637, 460, 0, 384,
	385, 0, 386, 387, 388, 389, 0, 0, 0, 268,
	390, 391, 392, 394, 0, 0, 393, 638, 639, 0,
	640, 0, 395, 396, 0, 641, 0, 397, 398, 399,
	0, 400, 0, 0, 0, 401, 402, 403, 404, 405,
	406, 0, 407, 409, 408, 0, 410, 642, 0, 411,
	412, 0, 0, 413, 0, 0, 0, 414, 415, 418,
	0, 0, 416, 417, 419, 420, 0, 421, 422, 424,
	427, 423, 425, 426, 428, 441, 429, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 443, 0,
	442, 0, 444, 445, 446, 451, 453, 454, 449, 450,
	452, 455, 456, 448, 0, 447, 0, 269, 0, 457,
	458, 0, 643, 459, 644, 461, 462, 0, 0, 463,
	0, 0, 0, 465, 466, 467, 0, 0, 468, 469,
	645, 0, 470, 0, 646, 471, 472, 464, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 0, 482, 483,
	647, 484, 485, 486, 648, 487, 488, 489, 649, 490,
	650, 491, 492, 0, 493, 494, 0, 495, 496, 497,
	498, 499, 500, 501, 651, 502, 504, 503, 505, 0,
	506, 0, 507, 508, 509, 0, 0, 0, 0, 510,
	0, 512, 513, 514, 515, 511, 516, 517, 518, 519,
	0, 520, 521, 522, 0, 523, 524, 525, 526, 652,
	527, 0, 528, 529, 535, 536, 530, 531, 537, 538,
	539, 540, 541, 0, 543, 544, 542, 545, 546, 547,
	0, 548, 549, 532, 533, 550, 551, 0, 552, 553,
	554, 555, 556, 557, 653, 0, 558, 0, 559, 560,
	561, 563, 534, 564, 569, 570, 654, 565, 566, 567,
	568, 655, 572, 573, 0, 574, 575, 0, 571, 562,
	0, 576, 577, 578, 579, 580, 581, 582, 354, 583,
	0, 584, 656, 657, 658, 659, 0, 593, 0, 585,
	586, 587, 660, 588, 661, 0, 589, 590, 591, 592,
	0, 594, 595, 0, 0, 596, 597, 598, 600, 601,
	599, 602, 0, 603, 0, 0, 604, 605, 606, 662,
	663, 664, 0, 608, 607, 609, 665, 866, 0, 264,
	0, 0, 610, 611, 666, 612, 613, 614, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 272, 271, 273,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 615, 0, 0, 0, 0, 280, 281, 0,
	282, 283, 284, 285, 286, 287, 616, 617, 0, 288,
	618, 289, 619, 0, 620, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 621, 622, 623, 0, 297,
	298, 624, 0, 0, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 0, 321, 322, 323, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 327, 328, 0, 329,
	625, 626, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 627,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	628, 629, 360, 0, 0, 0, 0, 0, 0, 0,
	361, 362, 363, 630, 0, 0, 0, 364, 0, 365,
	0, 0, 0, 366, 367, 631, 632, 368, 369, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 633, 0,
	634, 378, 0, 379, 380, 381, 382, 383, 635, 636,
	637, 460, 0, 384, 385, 0, 386, 387, 388, 389,
	0, 0, 0, 0, 390, 391, 392, 394, 0, 0,
	393, 638, 639, 0, 640, 865, 395, 396, 0, 641,
	0, 397, 398, 399, 0, 400, 0, 0, 0, 401,
	402, 403, 404, 405, 406, 0, 407, 409, 408, 0,
	410, 642, 0, 411, 412, 0, 0, 413, 0, 0,
	0, 414, 415, 418, 0, 0, 416, 417, 419, 420,
	0, 421, 422, 424, 427, 423, 425, 426, 428, 441,
	429, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 443, 0, 442, 0, 444, 445, 446, 451,
	453, 454, 449, 450, 452, 455, 456, 448, 0, 447,
	0, 0, 0, 457, 458, 0, 643, 459, 644, 461,
	462, 0, 0, 463, 0, 0, 0, 465, 466, 467,
	0, 0, 468, 469, 645, 0, 470, 0, 646, 471,
	472, 464, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 0, 482, 483, 647, 484, 485, 486, 648, 487,
	488, 489, 649, 490, 650, 491, 492, 0, 493, 494,
	0, 495, 496, 497, 498, 499, 500, 501, 651, 502,
	504, 503, 505, 0, 506, 0, 507, 508, 509, 0,
	0, 0, 0, 510, 0, 512, 513, 514, 515, 511,
	516, 517, 518, 519, 0, 520, 521, 522, 0, 523,
	524, 525, 526, 652, 527, 0, 528, 529, 535, 536,
	530, 531, 537, 538, 539, 540, 541, 0, 543, 544,
	542, 545, 546, 547, 0, 548, 549, 532, 533, 550,
	551, 0, 552, 553, 554, 555, 556, 557, 653, 0,
	558, 0, 559, 560, 561, 563, 534, 564, 569, 570,
	654, 565, 566, 567, 568, 655, 572, 573, 0, 574,
	575, 0, 571, 562, 864, 576, 577, 578, 579, 580,
	581, 582, 354, 583, 0, 584, 656, 657, 658, 659,
	0, 593, 0, 585, 586, 587, 660, 588, 661, 0,
	589, 590, 591, 592, 0, 594, 595, 0, 0, 596,
	597, 598, 600, 601, 599, 602, 0, 603, 0, 0,
	604, 605, 606, 662, 663, 664, 264, 608, 607, 609,
	665, 0, 0, 0, 0, 0, 610, 611, 666, 612,
	613, 614, 0, 270, 272, 271, 273, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 615,
	0, 0, 0, 0, 280, 281, 0, 282, 283, 284,
	285, 286, 287, 616, 617, 0, 288, 618, 289, 619,
	0, 620, 290, 291, 292, 293, 294, 295, 0, 0,
	0, 296, 621, 622, 623, 0, 297, 298, 624, 0,
	0, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 0,
	321, 322, 323, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 326, 327, 328, 0, 329, 625, 626, 0,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 340, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 627, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 628, 629, 360,
	0, 2947, 0, 0, 0, 0, 0, 361, 362, 363,
	630, 0, 0, 0, 364, 0, 365, 0, 0, 0,
	366, 367, 631, 632, 368, 369, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 633, 0, 634, 378, 0,
	379, 380, 381, 382, 383, 635, 636, 637, 460, 0,
	384, 385, 0, 386, 387, 388, 389, 0, 0, 0,
	0, 390, 391, 392, 394, 0, 0, 393, 638, 639,
	0, 640, 0, 395, 396, 0, 641, 0, 397, 398,
	399, 0, 400, 0, 0, 0, 401, 402, 403, 404,
	405, 406, 0, 407, 409, 408, 0, 410, 642, 0,
	411, 412, 0, 0, 413, 0, 0, 0, 414, 415,
	418, 0, 0, 416, 417, 419, 420, 0, 421, 422,
	424, 427, 423, 425, 426, 428, 441, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 443,
	0, 442, 0, 444, 445, 446, 451, 453, 454, 449,
	450, 452, 455, 456, 448, 0, 447, 0, 0, 0,
	457, 458, 0, 643, 459, 644, 461, 462, 0, 0,
	463, 0, 0, 0, 465, 466, 467, 0, 0, 468,
	469, 645, 0, 470, 0, 646, 471, 472, 464, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 0, 482,
	483, 647, 484, 485, 486, 648, 487, 488, 489, 649,
	490, 650, 491, 492, 4056, 493, 494, 0, 495, 496,
	497, 498, 499, 500, 501, 651, 502, 504, 503, 505,
	0, 506, 0, 507, 508, 509, 0, 0, 0, 0,
	510, 0, 512, 513, 514, 515, 511, 516, 517, 518,
	519, 0, 520, 521, 522, 0, 523, 524, 525, 526,
	652, 527, 0, 528, 529, 535, 536, 530, 531, 537,
	538, 539, 540, 541, 0, 543, 544, 542, 545, 546,
	547, 0, 548, 549, 532, 533, 550, 551, 0, 552,
	553, 554, 555, 556, 557, 653, 0, 558, 0, 559,
	560, 561, 563, 534, 564, 569, 570, 654, 565, 566,
	567, 568, 655, 572, 573, 0, 574, 575, 0, 571,
	562, 0, 576, 577, 578, 579, 580, 581, 582, 354,
	583, 0, 584, 656, 657, 658, 659, 0, 593, 0,
	585, 586, 587, 660, 588, 661, 0, 589, 590, 591,
	592, 0, 594, 595, 0, 0, 596, 597, 598, 600,
	601, 599, 602, 0, 603, 0, 0, 604, 605, 606,
	662, 663, 664, 264, 608, 607, 609, 665, 0, 0,
	0, 0, 0, 610, 611, 666, 612, 613, 614, 0,
	270, 272, 271, 273, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 615, 0, 0, 0,
	0, 280, 281, 0, 282, 283, 284, 285, 286, 287,
	616, 617, 0, 288, 618, 289, 619, 0, 620, 290,
	291, 292, 293, 294, 295, 0, 0, 0, 296, 621,
	622, 623, 0, 297, 298, 624, 0, 0, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 0, 321, 322, 323,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	327, 328, 0, 329, 625, 626, 0, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 340, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 627, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 628, 629, 360, 0, 0, 0,
	0, 0, 0, 0, 361, 362, 363, 630, 0, 0,
	0, 364, 0, 365, 0, 0, 0, 366, 367, 631,
	632, 368, 369, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 633, 0, 634, 378, 0, 379, 380, 381,
	382, 383, 635, 636, 637, 460, 0, 384, 385, 0,
	386, 387, 388, 389, 0, 0, 0, 0, 390, 391,
	392, 394, 0, 0, 393, 638, 639, 0, 640, 0,
	395, 396, 0, 641, 0, 397, 398, 399, 0, 400,
	0, 0, 0, 401, 402, 403, 404, 405, 406, 0,
	407, 409, 408, 0, 410, 642, 0, 411, 412, 0,
	0, 413, 0, 0, 0, 414, 415, 418, 0, 0,
	416, 417, 419, 420, 0, 421, 422, 424, 427, 423,
	425, 426, 428, 441, 429, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 443, 0, 442, 0,
	444, 445, 446, 451, 453, 454, 449, 450, 452, 455,
	456, 448, 3960, 447, 0, 0, 0, 457, 458, 0,
	643, 459, 644, 461, 462, 0, 0, 463, 0, 0,
	0, 465, 466, 467, 0, 0, 468, 469, 645, 0,
	470, 0, 646, 471, 472, 464, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 0, 482, 483, 647, 484,
	485, 486, 648, 487, 488, 489, 649, 490, 650, 491,
	492, 3962, 493, 494, 0, 495, 496, 497, 498, 499,
	500, 501, 651, 502, 504, 503, 505, 0, 506, 0,
	507, 508, 509, 0, 0, 0, 0, 510, 0, 512,
	513, 514, 515, 511, 516, 517, 518, 519, 0, 520,
	521, 522, 0, 523, 524, 525, 526, 652, 527, 0,
	528, 529, 535, 536, 530, 531, 537, 538, 539, 540,
	541, 0, 543, 544, 542, 545, 546, 547, 0, 548,
	549, 532, 533, 550, 551, 0, 552, 553, 554, 555,
	556, 557, 653, 0, 558, 0, 559, 560, 561, 563,
	534, 564, 569, 570, 654, 565, 566, 567, 568, 655,
	572, 573, 0, 574, 575, 0, 571, 562, 0, 576,
	577, 578, 579, 580, 581, 582, 354, 583, 0, 584,
	656, 657, 658, 659, 0, 593, 0, 585, 586, 587,
	660, 588, 661, 0, 589, 590, 591, 592, 0, 594,
	595, 0, 0, 596, 597, 598, 600, 601, 599, 602,
	0, 603, 0, 0, 604, 605, 606, 662, 663, 664,
	0, 608, 607, 609, 665, 755, 0, 264, 0, 0,
	610, 611, 666, 612, 613, 614, 0, 0, 0, 0,
	0, 0, 0, 0, 270, 272, 271, 273, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	615, 0, 0, 0, 0, 280, 281, 1315, 282, 283,
	284, 285, 286, 287, 616, 617, 0, 288, 618, 289,
	619, 0, 620, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 621, 622, 1313, 0, 297, 298, 624,
	0, 0, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 323, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 327, 328, 0, 329, 625, 626,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 627, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 628, 629,
	360, 0, 0, 0, 0, 0, 0, 0, 361, 362,
	363, 630, 0, 0, 0, 364, 0, 365, 0, 0,
	0, 366, 367, 631, 632, 368, 369, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 633, 0, 634, 378,
	0, 379, 380, 381, 382, 383, 635, 636, 637, 460,
	0, 384, 385, 0, 386, 387, 388, 389, 0, 0,
	0, 0, 390, 391, 392, 394, 0, 0, 393, 638,
	639, 0, 640, 0, 395, 396, 0, 641, 0, 397,
	398, 399, 0, 400, 0, 0, 0, 401, 402, 403,
	404, 405, 406, 0, 407, 409, 408, 0, 410, 642,
	0, 411, 412, 0, 0, 413, 0, 0, 0, 414,
	415, 418, 0, 0, 416, 417, 419, 420, 0, 421,
	422, 424, 427, 423, 425, 426, 428, 441, 429, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	443, 0, 756, 0, 444, 445, 446, 451, 453, 454,
	449, 450, 452, 455, 456, 448, 0, 447, 0, 0,
	0, 457, 458, 0, 643, 459, 644, 461, 462, 0,
	0, 463, 0, 0, 0, 465, 466, 467, 0, 0,
	468, 469, 645, 0, 470, 0, 646, 471, 472, 464,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 0,
	482, 483, 647, 484, 485, 486, 648, 487, 488, 489,
	649, 490, 650, 491, 492, 0, 493, 494, 0, 495,
	496, 497, 498, 499, 500, 501, 651, 502, 504, 503,
	505, 0, 506, 0, 507, 508, 509, 0, 0, 0,
	0, 510, 0, 512, 513, 514, 515, 511, 516, 517,
	518, 519, 0, 520, 521, 522, 0, 523, 524, 525,
	526, 652, 527, 0, 528, 529, 535, 536, 530, 531,
	752, 538, 539, 540, 541, 0, 543, 544, 542, 545,
	1316, 547, 0, 548, 549, 532, 533, 550, 551, 0,
	552, 553, 554, 555, 556, 557, 653, 0, 558, 0,
	559, 560, 561, 563, 534, 564, 569, 570, 654, 565,
	566, 567, 568, 655, 572, 573, 0, 574, 575, 0,
	571, 562, 0, 576, 577, 578, 579, 580, 581, 582,
	354, 583, 0, 584, 751, 657, 658, 659, 0, 593,
	0, 585, 586, 587, 660, 588, 661, 0, 589, 590,
	591, 592, 0, 594, 595, 0, 0, 596, 597, 598,
	600, 601, 599, 602, 0, 603, 0, 0, 604, 605,
	606, 662, 663, 664, 0, 608, 607, 609, 665, 755,
	0, 264, 0, 0, 610, 611, 666, 612, 613, 614,
	0, 0, 0, 0, 0, 0, 0, 0, 270, 272,
	271, 273, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 615, 0, 0, 0, 0, 280,
	281, 1315, 282, 283, 284, 285, 286, 287, 616, 617,
	0, 288, 618, 289, 619, 0, 620, 290, 291, 292,
	293, 294, 295, 0, 0, 0, 296, 621, 622, 1313,
	0, 297, 298, 624, 0, 0, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 0, 321, 322, 323, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 327, 328,
	0, 329, 625, 626, 0, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 340,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 627, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 628, 629, 360, 0, 0, 0, 0, 0,
	0, 0, 361, 362, 363, 630, 0, 0, 0, 364,
	0, 365, 0, 0, 0, 366, 367, 631, 632, 368,
	369, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	633, 0, 634, 378, 0, 379, 380, 381, 382, 383,
	635, 636, 637, 460, 0, 384, 385, 0, 386, 387,
	388, 389, 0, 0, 0, 0, 390, 391, 392, 394,
	0, 0, 393, 638, 639, 0, 640, 0, 395, 396,
	0, 641, 0, 397, 398, 399, 0, 400, 0, 0,
	0, 401, 402, 403, 404, 405, 406, 0, 407, 409,
	408, 0, 410, 642, 0, 411, 412, 0, 0, 413,
	0, 0, 0, 414, 415, 418, 0, 0, 416, 417,
	419, 420, 0, 421, 422, 424, 427, 423, 425, 426,
	428, 441, 429, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 443, 0, 756, 0, 444, 445,
	446, 451, 453, 454, 449, 450, 452, 455, 456, 448,
	0, 447, 0, 0, 0, 457, 458, 0, 643, 459,
	644, 461, 462, 0, 0, 463, 0, 0, 0, 465,
	466, 467, 0, 0, 468, 469, 645, 0, 470, 0,
	646, 471, 472, 464, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 0, 482, 483, 647, 484, 485, 486,
	648, 487, 488, 489, 649, 490, 650, 491, 492, 0,
	493, 494, 0, 495, 496, 497, 498, 499, 500, 501,
	651, 502, 504, 503, 505, 0, 506, 0, 507, 508,
	509, 0, 0, 0, 0, 510, 0, 512, 513, 514,
	515, 511, 516, 517, 518, 519, 0, 520, 521, 522,
	0, 523, 524, 525, 526, 652, 527, 0, 528, 529,
	535, 536, 530, 531, 752, 538, 539, 540, 541, 0,
	543, 544, 542, 545, 1316, 547, 0, 548, 549, 532,
	533, 550, 551, 0, 552, 553, 554, 555, 556, 557,
	653, 0, 558, 0, 559, 560, 561, 563, 534, 564,
	569, 570, 654, 565, 566, 567, 568, 655, 572, 573,
	0, 574, 575, 0, 571, 562, 0, 576, 577, 578,
	579, 580, 581, 582, 354, 583, 0, 584, 751, 657,
	658, 659, 0, 593, 0, 585, 1314, 587, 660, 588,
	661, 0, 589, 590, 591, 592, 0, 594, 595, 0,
	0, 596, 597, 598, 600, 601, 599, 602, 0, 603,
	0, 0, 604, 605, 606, 662, 663, 664, 0, 608,
	607, 609, 665, 677, 0, 264, 0, 0, 610, 611,
	666, 612, 613, 614, 0, 0, 0, 0, 0, 0,
	0, 0, 270, 272, 271, 273, 274, 275, 276, 277,
	676, 278, 279, 0, 0, 0, 0, 0, 615, 0,
	0, 0, 0, 280, 281, 0, 282, 283, 284, 285,
	286, 287, 616, 617, 0, 288, 618, 289, 619, 0,
	620, 290, 291, 292, 293, 294, 295, 0, 0, 0,
	296, 621, 622, 623, 0, 297, 298, 624, 0, 0,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 323, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 327, 328, 0, 329, 625, 626, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 627, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 628, 629, 360, 0,
	0, 0, 0, 0, 0, 0, 361, 362, 363, 630,
	0, 0, 0, 364, 0, 365, 0, 0, 0, 366,
	367, 631, 632, 368, 369, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 633, 0, 634, 378, 0, 379,
	380, 381, 382, 383, 635, 636, 637, 460, 0, 384,
	385, 0, 386, 387, 388, 389, 0, 0, 0, 0,
	390, 391, 392, 394, 0, 0, 393, 638, 639, 0,
	640, 0, 395, 396, 0, 641, 0, 397, 398, 399,
	0, 400, 0, 0, 0, 401, 402, 403, 404, 405,
	406, 0, 407, 409, 408, 0, 410, 642, 0, 411,
	412, 0, 0, 413, 0, 0, 0, 414, 415, 418,
	0, 0, 416, 417, 419, 420, 0, 421, 422, 424,
	427, 423, 425, 426, 428, 441, 429, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 443, 0,
	442, 0, 444, 445, 446, 451, 453, 454, 449, 450,
	452, 455, 456, 448, 0, 447, 0, 0, 0, 457,
	458, 0, 643, 459, 644, 461, 462, 0, 0, 463,
	0, 0, 0, 465, 466, 467, 0, 0, 468, 469,
	645, 0, 470, 0, 646, 471, 472, 464, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 0, 482, 483,
	647, 484, 485, 486, 648, 487, 488, 489, 649, 490,
	650, 675, 492, 0, 493, 494, 0, 495, 496, 497,
	498, 499, 500, 501, 651, 502, 504, 503, 505, 0,
	506, 0, 507, 508, 509, 0, 0, 0, 0, 510,
	0, 512, 513, 514, 515, 511, 516, 517, 518, 519,
	0, 520, 521, 522, 0, 523, 524, 525, 526, 652,
	527, 0, 528, 529, 535, 536, 530, 531, 537, 538,
	539, 540, 541, 0, 543, 544, 542, 545, 546, 547,
	0, 548, 549, 532, 533, 550, 551, 0, 552, 553,
	554, 555, 556, 557, 653, 0, 558, 0, 559, 560,
	561, 563, 534, 564, 569, 570, 654, 565, 566, 567,
	568, 655, 572, 573, 0, 574, 575, 0, 571, 562,
	0, 576, 577, 578, 579, 580, 581, 582, 354, 583,
	0, 584, 656, 657, 658, 659, 0, 593, 0, 585,
	586, 587, 660, 588, 661, 0, 589, 590, 591, 592,
	0, 594, 595, 0, 0, 596, 597, 598, 600, 601,
	599, 602, 0, 603, 0, 0, 604, 605, 606, 662,
	663, 664, 0, 608, 607, 609, 665, 264, 2934, 0,
	0, 0, 610, 611, 666, 612, 613, 614, 0, 0,
	0, 0, 0, 0, 270, 272, 271, 273, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	615, 0, 0, 0, 0, 280, 281, 0, 282, 283,
	284, 285, 286, 287, 616, 617, 0, 288, 618, 289,
	619, 0, 620, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 621, 622, 623, 0, 297, 298, 624,
	0, 0, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 323, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 327, 328, 0, 329, 625, 626,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 627, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 628, 629,
	360, 0, 0, 0, 0, 0, 0, 0, 361, 362,
	363, 630, 0, 0, 0, 364, 0, 365, 0, 0,
	0, 366, 367, 631, 632, 368, 369, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 633, 0, 634, 378,
	0, 379, 380, 381, 382, 383, 635, 636, 637, 460,
	0, 384, 385, 0, 386, 387, 388, 389, 0, 0,
	0, 0, 390, 391, 392, 394, 0, 0, 393, 638,
	639, 0, 640, 0, 395, 396, 0, 641, 0, 397,
	398, 399, 0, 400, 0, 0, 0, 401, 402, 403,
	404, 405, 406, 0, 407, 409, 408, 0, 410, 642,
	0, 411, 412, 0, 0, 413, 0, 0, 0, 414,
	415, 418, 0, 0, 416, 417, 419, 420, 0, 421,
	422, 424, 427, 423, 425, 426, 428, 441, 429, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	443, 0, 442, 0, 444, 445, 446, 451, 453, 454,
	449, 450, 452, 455, 456, 448, 0, 447, 0, 0,
	0, 457, 458, 0, 643, 459, 644, 461, 462, 0,
	0, 463, 0, 0, 0, 465, 466, 467, 0, 0,
	468, 469, 645, 0, 470, 0, 646, 471, 472, 464,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 0,
	482, 483, 647, 484, 485, 486, 648, 487, 488, 489,
	649, 490, 650, 491, 492, 0, 493, 494, 0, 495,
	496, 497, 498, 499, 500, 501, 651, 502, 504, 503,
	505, 0, 506, 0, 507, 508, 509, 0, 0, 0,
	0, 510, 0, 512, 513, 514, 515, 511, 516, 517,
	518, 519, 0, 520, 521, 522, 0, 523, 524, 525,
	526, 652, 527, 0, 528, 529, 535, 536, 530, 531,
	537, 538, 539, 540, 541, 0, 543, 544, 542, 545,
	546, 547, 0, 548, 549, 532, 533, 550, 551, 0,
	552, 553, 554, 555, 556, 557, 653, 0, 558, 0,
	559, 560, 561, 563, 534, 564, 569, 570, 654, 565,
	566, 567, 568, 655, 572, 573, 0, 574, 575, 0,
	571, 562, 0, 576, 577, 578, 579, 580, 581, 582,
	354, 583, 0, 584, 656, 657, 658, 659, 0, 593,
	0, 585, 586, 587, 660, 588, 661, 0, 589, 590,
	591, 592, 0, 594, 595, 0, 0, 596, 597, 598,
	600, 601, 599, 602, 0, 603, 0, 0, 604, 605,
	606, 662, 663, 664, 0, 608, 607, 609, 665, 264,
	4066, 0, 0, 0, 610, 611, 666, 612, 613, 614,
	0, 0, 0, 0, 0, 0, 270, 272, 271, 273,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 615, 0, 0, 0, 0, 280, 281, 0,
	282, 283, 284, 285, 286, 287, 616, 617, 0, 288,
	618, 289, 619, 0, 620, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 621, 622, 623, 0, 297,
	298, 624, 0, 0, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 0, 321, 322, 323, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 327, 328, 0, 329,
	625, 626, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 627,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	628, 629, 360, 0, 0, 0, 0, 0, 0, 0,
	361, 362, 363, 630, 0, 0, 0, 364, 0, 365,
	0, 0, 0, 366, 367, 631, 632, 368, 369, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 633, 0,
	634, 378, 0, 379, 380, 381, 382, 383, 635, 636,
	637, 460, 0, 384, 385, 0, 386, 387, 388, 389,
	0, 0, 0, 0, 390, 391, 392, 394, 0, 0,
	393, 638, 639, 0, 640, 0, 395, 396, 0, 641,
	0, 397, 398, 399, 0, 400, 0, 0, 0, 401,
	402, 403, 404, 405, 406, 0, 407, 409, 408, 0,
	410, 642, 0, 411, 412, 0, 0, 413, 0, 0,
	0, 414, 415, 418, 0, 0, 416, 417, 419, 420,
	0, 421, 422, 424, 427, 423, 425, 426, 428, 441,
	429, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 443, 0, 442, 0, 444, 445, 446, 451,
	453, 454, 449, 450, 452, 455, 456, 448, 0, 447,
	0, 0, 0, 457, 458, 0, 643, 459, 644, 461,
	462, 0, 0, 463, 0, 0, 0, 465, 466, 467,
	0, 0, 468, 469, 645, 0, 470, 0, 646, 471,
	472, 464, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 0, 482, 483, 647, 484, 485, 486, 648, 487,
	488, 489, 649, 490, 650, 491, 492, 0, 493, 494,
	0, 495, 496, 497, 498, 499, 500, 501, 651, 502,
	504, 503, 505, 0, 506, 0, 507, 508, 509, 0,
	0, 0, 0, 510, 0, 512, 513, 514, 515, 511,
	516, 517, 518, 519, 0, 520, 521, 522, 0, 523,
	524, 525, 526, 652, 527, 0, 528, 529, 535, 536,
	530, 531, 537, 538, 539, 540, 541, 0, 543, 544,
	542, 545, 546, 547, 0, 548, 549, 532, 533, 550,
	551, 0, 552, 553, 554, 555, 556, 557, 653, 0,
	558, 0, 559, 560, 561, 563, 534, 564, 569, 570,
	654, 565, 566, 567, 568, 655, 572, 573, 0, 574,
	575, 0, 571, 562, 0, 576, 577, 578, 579, 580,
	581, 582, 354, 583, 0, 584, 656, 657, 658, 659,
	0, 593, 0, 585, 586, 587, 660, 588, 661, 0,
	589, 590, 591, 592, 0, 594, 595, 0, 0, 596,
	597, 598, 600, 601, 599, 602, 0, 603, 0, 0,
	604, 605, 606, 662, 663, 664, 264, 608, 607, 609,
	665, 0, 0, 0, 0, 0, 610, 611, 666, 612,
	613, 614, 0, 270, 272, 271, 273, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 615,
	0, 0, 0, 0, 280, 281, 0, 282, 283, 284,
	285, 286, 287, 616, 617, 0, 288, 618, 289, 619,
	0, 620, 290, 291, 292, 293, 294, 295, 0, 0,
	0, 296, 621, 622, 623, 0, 297, 298, 624, 0,
	0, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 0,
	321, 322, 323, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 326, 327, 328, 0, 329, 625, 626, 0,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 340, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 627, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 628, 629, 360,
	0, 0, 0, 0, 0, 0, 0, 361, 362, 363,
	630, 0, 0, 0, 364, 0, 365, 0, 0, 0,
	366, 367, 631, 632, 368, 369, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 633, 0, 634, 378, 0,
	379, 380, 381, 382, 383, 635, 636, 637, 460, 0,
	384, 385, 0, 386, 387, 388, 389, 0, 0, 0,
	0, 390, 391, 392, 394, 0, 0, 393, 638, 639,
	0, 640, 0, 395, 396, 0, 641, 0, 397, 398,
	399, 0, 400, 0, 0, 0, 401, 402, 403, 404,
	405, 406, 0, 407, 409, 408, 0, 410, 642, 0,
	411, 412, 0, 0, 413, 0, 0, 0, 414, 415,
	418, 0, 0, 416, 417, 419, 420, 0, 421, 422,
	424, 427, 423, 425, 426, 428, 441, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 443,
	0, 442, 0, 444, 445, 446, 451, 453, 454, 449,
	450, 452, 455, 456, 448, 0, 447, 0, 0, 0,
	457, 458, 0, 643, 459, 644, 461, 462, 0, 0,
	463, 0, 0, 0, 465, 466, 467, 0, 0, 468,
	469, 645, 0, 470, 0, 646, 471, 472, 464, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 0, 482,
	483, 647, 484, 485, 486, 648, 487, 488, 489, 649,
	490, 650, 491, 492, 4337, 493, 494, 0, 495, 496,
	497, 498, 499, 500, 501, 651, 502, 504, 503, 505,
	0, 506, 0, 507, 508, 509, 0, 0, 0, 0,
	510, 0, 512, 513, 514, 515, 511, 516, 517, 518,
	519, 0, 520, 521, 522, 0, 523, 524, 525, 526,
	652, 527, 0, 528, 529, 535, 536, 530, 531, 537,
	538, 539, 540, 541, 0, 543, 544, 542, 545, 546,
	547, 0, 548, 549, 532, 533, 550, 551, 0, 552,
	553, 554, 555, 556, 557, 653, 0, 558, 0, 559,
	560, 561, 563, 534, 564, 569, 570, 654, 565, 566,
	567, 568, 655, 572, 573, 0, 574, 575, 0, 571,
	562, 0, 576, 577, 578, 579, 580, 581, 582, 354,
	583, 0, 584, 656, 657, 658, 659, 0, 593, 0,
	585, 586, 587, 660, 588, 661, 0, 589, 590, 591,
	592, 0, 594, 595, 0, 0, 596, 597, 598, 600,
	601, 599, 602, 0, 603, 0, 0, 604, 605, 606,
	662, 663, 664, 264, 608, 607, 609, 665, 0, 0,
	0, 0, 0, 610, 611, 666, 612, 613, 614, 0,
	270, 272, 271, 273, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 615, 0, 0, 0,
	0, 280, 281, 0, 282, 283, 284, 285, 286, 287,
	616, 617, 0, 288, 618, 289, 619, 0, 620, 290,
	291, 292, 293, 294, 295, 0, 0, 0, 296, 621,
	622, 623, 0, 297, 298, 624, 0, 0, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 0, 321, 322, 323,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	327, 328, 0, 329, 625, 626, 0, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 340, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 627, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 628, 629, 360, 0, 0, 0,
	0, 0, 0, 0, 361, 362, 363, 630, 0, 0,
	0, 364, 0, 365, 0, 0, 0, 366, 367, 631,
	632, 368, 369, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 633, 0, 634, 378, 0, 379, 380, 381,
	382, 383, 635, 636, 637, 460, 0, 384, 385, 0,
	386, 387, 388, 389, 0, 0, 0, 0, 390, 391,
	392, 394, 0, 0, 393, 638, 639, 0, 640, 0,
	395, 396, 0, 641, 0, 397, 398, 399, 0, 400,
	0, 0, 0, 401, 402, 403, 404, 405, 406, 0,
	407, 409, 408, 0, 410, 642, 0, 411, 412, 0,
	0, 413, 0, 0, 0, 414, 415, 418, 0, 0,
	416, 417, 419, 420, 0, 421, 422, 424, 427, 423,
	425, 426, 428, 441, 429, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 443, 0, 442, 0,
	444, 445, 446, 451, 453, 454, 449, 450, 452, 455,
	456, 448, 0, 447, 0, 0, 0, 457, 458, 0,
	643, 459, 644, 461, 462, 0, 0, 463, 0, 0,
	0, 465, 466, 467, 0, 0, 468, 469, 645, 0,
	470, 0, 646, 471, 472, 464, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 0, 482, 483, 647, 484,
	485, 486, 648, 487, 488, 489, 649, 490, 650, 491,
	492, 4332, 493, 494, 0, 495, 496, 497, 498, 499,
	500, 501, 651, 502, 504, 503, 505, 0, 506, 0,
	507, 508, 509, 0, 0, 0, 0, 510, 0, 512,
	513, 514, 515, 511, 516, 517, 518, 519, 0, 520,
	521, 522, 0, 523, 524, 525, 526, 652, 527, 0,
	528, 529, 535, 536, 530, 531, 537, 538, 539, 540,
	541, 0, 543, 544, 542, 545, 546, 547, 0, 548,
	549, 532, 533, 550, 551, 0, 552, 553, 554, 555,
	556, 557, 653, 0, 558, 0, 559, 560, 561, 563,
	534, 564, 569, 570, 654, 565, 566, 567, 568, 655,
	572, 573, 0, 574, 575, 0, 571, 562, 0, 576,
	577, 578, 579, 580, 581, 582, 354, 583, 0, 584,
	656, 657, 658, 659, 0, 593, 0, 585, 586, 587,
	660, 588, 661, 0, 589, 590, 591, 592, 0, 594,
	595, 0, 0, 596, 597, 598, 600, 601, 599, 602,
	0, 603, 0, 0, 604, 605, 606, 662, 663, 664,
	264, 608, 607, 609, 665, 0, 0, 0, 0, 0,
	610, 611, 666, 612, 613, 614, 0, 270, 272, 271,
	273, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 615, 0, 0, 0, 0, 280, 281,
	0, 282, 283, 284, 285, 286, 287, 616, 617, 0,
	288, 618, 289, 619, 0, 620, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 621, 622, 623, 0,
	297, 298, 624, 0, 0, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 323, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 326, 327, 328, 0,
	329, 625, 626, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	627, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 628, 629, 360, 0, 0, 0, 0, 0, 0,
	0, 361, 362, 363, 630, 0, 0, 0, 364, 0,
	365, 0, 0, 0, 366, 367, 631, 632, 368, 369,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 633,
	0, 634, 378, 0, 379, 380, 381, 382, 383, 635,
	636, 637, 460, 0, 384, 385, 0, 386, 387, 388,
	389, 0, 0, 0, 0, 390, 391, 392, 394, 0,
	0, 393, 638, 639, 0, 640, 0, 395, 396, 0,
	641, 0, 397, 398, 399, 0, 400, 0, 0, 0,
	401, 402, 403, 404, 405, 406, 0, 407, 409, 408,
	0, 410, 642, 0, 411, 412, 0, 0, 413, 0,
	0, 0, 414, 415, 418, 0, 0, 416, 417, 419,
	420, 0, 421, 422, 424, 427, 423, 425, 426, 428,
	441, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 443, 0, 442, 0, 444, 445, 446,
	451, 453, 454, 449, 450, 452, 455, 456, 448, 0,
	447, 0, 0, 0, 457, 458, 0, 643, 459, 644,
	461, 462, 0, 0, 463, 0, 0, 0, 465, 466,
	467, 0, 0, 468, 469, 645, 0, 470, 0, 646,
	471, 472, 464, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 0, 482, 483, 647, 484, 485, 486, 648,
	487, 488, 489, 649, 490, 650, 491, 492, 3957, 493,
	494, 0, 495, 496, 497, 498, 499, 500, 501, 651,
	502, 504, 503, 505, 0, 506, 0, 507, 508, 509,
	0, 0, 0, 0, 510, 0, 512, 513, 514, 515,
	511, 516, 517, 518, 519, 0, 520, 521, 522, 0,
	523, 524, 525, 526, 652, 527, 0, 528, 529, 535,
	536, 530, 531, 537, 538, 539, 540, 541, 0, 543,
	544, 542, 545, 546, 547, 0, 548, 549, 532, 533,
	550, 551, 0, 552, 553, 554, 555, 556, 557, 653,
	0, 558, 0, 559, 560, 561, 563, 534, 564, 569,
	570, 654, 565, 566, 567, 568, 655, 572, 573, 0,
	574, 575, 0, 571, 562, 0, 576, 577, 578, 579,
	580, 581, 582, 354, 583, 0, 584, 656, 657, 658,
	659, 0, 593, 0, 585, 586, 587, 660, 588, 661,
	0, 589, 590, 591, 592, 0, 594, 595, 0, 0,
	596, 597, 598, 600, 601, 599, 602, 0, 603, 0,
	0, 604, 605, 606, 662, 663, 664, 264, 608, 607,
	609, 665, 0, 0, 0, 0, 0, 610, 611, 666,
	612, 613, 614, 0, 270, 272, 271, 273, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	615, 0, 0, 0, 0, 280, 281, 0, 282, 283,
	284, 285, 286, 287, 616, 617, 0, 288, 618, 289,
	619, 0, 620, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 621, 622, 623, 0, 297, 298, 624,
	0, 0, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 323, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 327, 328, 0, 329, 625, 626,
	3736, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 627, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 628, 629,
	360, 0, 0, 0, 0, 0, 0, 0, 361, 362,
	363, 630, 0, 0, 0, 364, 0, 365, 0, 0,
	0, 366, 367, 631, 632, 368, 369, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 633, 0, 634, 378,
	0, 379, 380, 381, 382, 383, 635, 636, 637, 460,
	0, 384, 385, 0, 386, 387, 388, 389, 0, 0,
	0, 0, 390, 391, 392, 394, 0, 0, 393, 638,
	639, 0, 640, 0, 395, 396, 0, 641, 0, 397,
	398, 399, 0, 400, 0, 0, 0, 401, 402, 403,
	404, 405, 406, 0, 407, 409, 408, 0, 410, 642,
	0, 411, 412, 0, 0, 413, 0, 0, 0, 414,
	415, 418, 0, 0, 416, 417, 419, 420, 0, 421,
	422, 424, 427, 423, 425, 426, 428, 441, 429, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	443, 0, 442, 0, 444, 445, 446, 451, 453, 454,
	449, 450, 452, 455, 456, 448, 0, 447, 0, 0,
	0, 457, 458, 0, 643, 459, 644, 461, 462, 0,
	0, 463, 0, 0, 0, 465, 466, 467, 0, 0,
	468, 469, 645, 0, 470, 0, 646, 471, 472, 464,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 0,
	482, 483, 647, 484, 485, 486, 648, 487, 488, 489,
	649, 490, 650, 491, 492, 0, 493, 494, 0, 495,
	496, 497, 498, 499, 500, 501, 651, 502, 504, 503,
	505, 0, 506, 0, 507, 508, 509, 0, 0, 0,
	0, 510, 0, 512, 513, 514, 515, 511, 516, 517,
	518, 519, 0, 520, 521, 522, 0, 523, 524, 525,
	526, 652, 527, 0, 528, 529, 535, 536, 530, 531,
	537, 538, 539, 540, 541, 0, 543, 544, 542, 545,
	546, 547, 0, 548, 549, 532, 533, 550, 551, 0,
	552, 553, 554, 555, 556, 557, 653, 0, 558, 0,
	559, 560, 561, 563, 534, 564, 569, 570, 654, 565,
	566, 567, 568, 655, 572, 573, 0, 574, 575, 0,
	571, 562, 0, 576, 577, 578, 579, 580, 581, 582,
	354, 583, 0, 584, 656, 657, 658, 659, 0, 593,
	0, 585, 586, 587, 660, 588, 661, 0, 589, 590,
	591, 592, 0, 594, 595, 0, 0, 596, 597, 598,
	600, 601, 599, 602, 0, 603, 0, 0, 604, 605,
	606, 662, 663, 664, 264, 608, 607, 609, 665, 0,
	0, 0, 0, 0, 610, 611, 666, 612, 613, 614,
	0, 270, 272, 271, 273, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 615, 0, 2627,
	0, 0, 280, 281, 0, 282, 283, 284, 285, 286,
	287, 616, 617, 0, 288, 618, 289, 619, 0, 620,
	290, 291, 292, 293, 294, 295, 0, 0, 0, 296,
	621, 622, 623, 0, 297, 298, 624, 0, 0, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 0, 321, 322,
	323, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	326, 327, 328, 0, 329, 625, 626, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 340, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 627, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 628, 629, 360, 0, 0,
	0, 0, 0, 0, 0, 361, 362, 363, 630, 0,
	0, 0, 364, 0, 365, 0, 0, 0, 366, 367,
	631, 632, 368, 369, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 633, 0, 634, 378, 0, 379, 380,
	381, 382, 383, 635, 636, 637, 460, 0, 384, 385,
	0, 386, 387, 388, 389, 0, 0, 0, 0, 390,
	391, 392, 394, 0, 0, 393, 638, 639, 0, 640,
	0, 395, 396, 0, 641, 0, 397, 398, 399, 0,
	400, 0, 0, 0, 401, 402, 403, 404, 405, 406,
	0, 407, 409, 408, 0, 410, 642, 0, 411, 412,
	0, 0, 413, 0, 0, 0, 414, 415, 418, 0,
	0, 416, 417, 419, 420, 0, 421, 422, 424, 427,
	423, 425, 426, 428, 441, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 443, 0, 442,
	0, 444, 445, 446, 451, 453, 454, 449, 450, 452,
	455, 456, 448, 0, 447, 0, 0, 0, 457, 458,
	0, 643, 459, 644, 461, 462, 0, 0, 463, 0,
	0, 0, 465, 466, 467, 0, 0, 468, 469, 645,
	0, 470, 0, 646, 471, 472, 464, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 0, 482, 483, 647,
	484, 485, 486, 648, 487, 488, 489, 649, 490, 650,
	491, 492, 0, 493, 494, 0, 495, 496, 497, 498,
	499, 500, 501, 651, 502, 504, 503, 505, 0, 506,
	0, 507, 508, 509, 0, 0, 0, 0, 510, 0,
	512, 513, 514, 515, 511, 516, 517, 518, 519, 0,
	520, 521, 522, 0, 523, 524, 525, 526, 652, 527,
	0, 528, 529, 535, 536, 530, 531, 537, 538, 539,
	540, 541, 0, 543, 544, 542, 545, 546, 547, 0,
	548, 549, 532, 533, 550, 551, 0, 552, 553, 554,
	555, 556, 557, 653, 0, 558, 0, 559, 560, 561,
	563, 534, 564, 569, 570, 654, 565, 566, 567, 568,
	655, 572, 573, 0, 574, 575, 0, 571, 562, 0,
	576, 577, 578, 579, 580, 581, 582, 354, 583, 0,
	584, 656, 657, 658, 659, 0, 593, 0, 585, 586,
	587, 660, 588, 661, 0, 589, 590, 591, 592, 0,
	594, 595, 0, 0, 596, 597, 598, 600, 601, 599,
	602, 0, 603, 0, 0, 604, 605, 606, 662, 663,
	664, 0, 608, 607, 609, 665, 264, 2934, 0, 0,
	0, 610, 611, 666, 612, 613, 614, 0, 0, 0,
	0, 0, 0, 270, 272, 271, 273, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 615,
	0, 0, 0, 0, 280, 281, 0, 282, 283, 284,
	285, 286, 287, 616, 617, 0, 288, 618, 289, 619,
	0, 620, 290, 291, 292, 293, 294, 295, 0, 0,
	0, 296, 621, 622, 623, 0, 297, 298, 624, 0,
	0, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 0,
	321, 322, 323, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 326, 327, 328, 0, 329, 625, 626, 0,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 340, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 627, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 628, 629, 360,
	0, 0, 0, 0, 0, 0, 0, 361, 362, 363,
	630, 0, 0, 0, 364, 0, 365, 0, 0, 0,
	366, 367, 631, 632, 368, 369, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 633, 0, 634, 378, 0,
	379, 380, 381, 382, 383, 635, 636, 637, 460, 0,
	384, 385, 0, 386, 387, 388, 389, 0, 0, 0,
	0, 390, 391, 392, 394, 0, 0, 393, 638, 639,
	0, 640, 0, 395, 396, 0, 641, 0, 397, 398,
	399, 0, 400, 0, 0, 0, 401, 402, 403, 404,
	405, 406, 0, 407, 409, 408, 0, 410, 642, 0,
	411, 412, 0, 0, 413, 0, 0, 0, 414, 415,
	418, 0, 0, 416, 417, 419, 420, 0, 421, 422,
	424, 427, 423, 425, 426, 428, 441, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 443,
	0, 442, 0, 444, 445, 446, 451, 453, 454, 449,
	450, 452, 455, 456, 448, 0, 447, 0, 0, 0,
	457, 458, 0, 643, 459, 644, 461, 462, 0, 0,
	463, 0, 0, 0, 465, 466, 2931, 0, 0, 468,
	469, 645, 0, 470, 0, 646, 471, 472, 464, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 0, 482,
	483, 647, 484, 485, 486, 648, 487, 488, 489, 649,
	490, 650, 491, 492, 0, 493, 494, 0, 495, 496,
	497, 498, 499, 500, 501, 651, 502, 504, 503, 505,
	0, 506, 0, 507, 508, 509, 0, 0, 0, 0,
	510, 0, 512, 513, 514, 515, 511, 516, 517, 518,
	519, 0, 520, 521, 522, 0, 523, 524, 525, 526,
	652, 527, 0, 528, 529, 535, 536, 530, 531, 537,
	538, 539, 540, 541, 0, 543, 544, 542, 545, 546,
	547, 0, 548, 549, 532, 533, 550, 551, 0, 552,
	553, 554, 555, 556, 557, 653, 0, 558, 0, 559,
	560, 561, 563, 534, 564, 569, 570, 654, 565, 566,
	567, 568, 655, 572, 573, 0, 574, 575, 0, 571,
	562, 0, 576, 577, 578, 579, 580, 581, 582, 354,
	583, 0, 584, 656, 657, 658, 659, 0, 593, 0,
	585, 586, 587, 660, 588, 661, 0, 589, 590, 591,
	592, 0, 594, 595, 0, 0, 596, 597, 598, 600,
	601, 599, 602, 0, 603, 0, 0, 604, 605, 606,
	662, 663, 664, 264, 608, 607, 609, 665, 0, 0,
	0, 0, 0, 610, 611, 666, 612, 613, 614, 0,
	270, 272, 271, 273, 274, 275, 276, 277, 2260, 278,
	279, 0, 0, 0, 0, 0, 615, 0, 0, 0,
	0, 280, 281, 0, 282, 283, 284, 285, 286, 287,
	616, 617, 0, 288, 618, 289, 619, 0, 620, 290,
	291, 292, 293, 294, 295, 0, 0, 0, 296, 621,
	622, 623, 0, 297, 298, 624, 0, 0, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 0, 321, 322, 323,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	327, 328, 0, 329, 625, 626, 0, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 340, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 627, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 628, 629, 360, 0, 0, 0,
	0, 0, 0, 0, 361, 362, 363, 630, 0, 0,
	0, 364, 0, 365, 0, 0, 0, 366, 367, 631,
	632, 368, 369, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 633, 0, 634, 378, 0, 379, 380, 381,
	382, 383, 635, 636, 637, 460, 0, 384, 385, 0,
	386, 387, 388, 389, 0, 0, 0, 0, 390, 391,
	392, 394, 0, 0, 393, 638, 639, 0, 640, 0,
	395, 396, 0, 641, 0, 397, 398, 399, 0, 400,
	0, 0, 0, 401, 402, 403, 404, 405, 406, 0,
	407, 409, 408, 0, 410, 642, 0, 411, 412, 0,
	0, 413, 0, 0, 0, 414, 415, 418, 0, 0,
	416, 417, 419, 420, 0, 421, 422, 424, 427, 423,
	425, 426, 428, 441, 429, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 443, 0, 442, 0,
	444, 445, 446, 451, 453, 454, 449, 450, 452, 455,
	456, 448, 0, 447, 0, 0, 0, 457, 458, 0,
	643, 459, 644, 461, 462, 0, 0, 463, 0, 0,
	0, 465, 466, 467, 0, 0, 468, 469, 645, 0,
	470, 0, 646, 471, 472, 464, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 0, 482, 483, 647, 484,
	485, 486, 648, 487, 488, 489, 649, 490, 650, 491,
	492, 0, 493, 494, 0, 495, 496, 497, 498, 499,
	500, 501, 651, 502, 504, 503, 505, 0, 506, 0,
	507, 508, 509, 0, 0, 0, 0, 510, 0, 512,
	513, 514, 515, 511, 516, 517, 518, 519, 0, 520,
	521, 522, 0, 523, 524, 525, 526, 652, 527, 0,
	528, 529, 535, 536, 530, 531, 537, 538, 539, 540,
	541, 0, 543, 544, 542, 545, 546, 547, 0, 548,
	549, 532, 533, 550, 551, 0, 552, 553, 554, 555,
	556, 557, 653, 0, 558, 0, 559, 560, 561, 563,
	534, 564, 569, 570, 654, 565, 566, 567, 568, 655,
	572, 573, 0, 574, 575, 0, 571, 562, 0, 576,
	577, 578, 579, 580, 581, 582, 354, 583, 0, 584,
	656, 657, 658, 659, 0, 593, 0, 585, 586, 587,
	660, 588, 661, 0, 589, 590, 591, 592, 0, 594,
	595, 0, 0, 596, 597, 598, 600, 601, 599, 602,
	0, 603, 0, 0, 604, 605, 606, 662, 663, 664,
	0, 608, 607, 609, 665, 2248, 0, 264, 0, 0,
	610, 611, 666, 612, 613, 614, 0, 0, 0, 0,
	0, 0, 0, 0, 270, 272, 271, 273, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	615, 0, 0, 0, 0, 280, 281, 0, 282, 283,
	284, 285, 286, 287, 616, 617, 0, 288, 618, 289,
	619, 0, 620, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 621, 622, 623, 0, 297, 298, 624,
	0, 0, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 323, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 327, 328, 0, 329, 625, 626,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 627, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 628, 629,
	360, 0, 0, 0, 0, 0, 0, 0, 361, 362,
	363, 630, 0, 0, 0, 364, 0, 365, 0, 0,
	0, 366, 367, 631, 632, 368, 369, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 633, 0, 634, 378,
	0, 379, 380, 381, 382, 383, 635, 636, 637, 460,
	0, 384, 385, 0, 386, 387, 388, 389, 0, 0,
	0, 0, 390, 391, 392, 394, 0, 0, 393, 638,
	639, 0, 640, 0, 395, 396, 0, 641, 0, 397,
	398, 399, 0, 400, 0, 0, 0, 401, 402, 403,
	404, 405, 406, 0, 407, 409, 408, 0, 410, 642,
	0, 411, 412, 0, 0, 413, 0, 0, 0, 414,
	415, 418, 0, 0, 416, 417, 419, 420, 0, 421,
	422, 424, 427, 423, 425, 426, 428, 441, 429, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	443, 0, 442, 0, 444, 445, 446, 451, 453, 454,
	449, 450, 452, 455, 456, 448, 0, 447, 0, 0,
	0, 457, 458, 0, 643, 459, 644, 461, 462, 0,
	0, 463, 0, 0, 0, 465, 466, 467, 0, 0,
	468, 469, 645, 0, 470, 0, 646, 471, 472, 464,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 0,
	482, 483, 647, 484, 485, 486, 648, 487, 488, 489,
	649, 490, 650, 491, 492, 0, 493, 494, 0, 495,
	496, 497, 498, 499, 500, 501, 651, 502, 504, 503,
	505, 0, 506, 0, 507, 508, 509, 0, 0, 0,
	0, 510, 0, 512, 513, 514, 515, 511, 516, 517,
	518, 519, 0, 520, 521, 522, 0, 523, 524, 525,
	526, 652, 527, 0, 528, 529, 535, 536, 530, 531,
	537, 538, 539, 540, 541, 0, 543, 544, 542, 545,
	546, 547, 0, 548, 549, 532, 533, 550, 551, 0,
	552, 553, 554, 555, 556, 557, 653, 0, 558, 0,
	559, 560, 561, 563, 534, 564, 569, 570, 654, 565,
	566, 567, 568, 655, 572, 573, 0, 574, 575, 0,
	571, 562, 0, 576, 577, 578, 579, 580, 581, 582,
	354, 583, 0, 584, 656, 657, 658, 659, 0, 593,
	0, 585, 586, 587, 660, 588, 661, 0, 589, 590,
	591, 592, 0, 594, 595, 0, 0, 596, 597, 598,
	600, 601, 599, 602, 0, 603, 0, 0, 604, 605,
	606, 662, 663, 664, 0, 608, 607, 609, 665, 755,
	0, 264, 0, 0, 610, 611, 666, 612, 613, 614,
	0, 0, 0, 0, 0, 0, 0, 0, 270, 272,
	271, 273, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 615, 0, 0, 0, 0, 280,
	281, 0, 282, 283, 284, 285, 286, 287, 616, 617,
	0, 288, 618, 289, 619, 0, 620, 290, 291, 292,
	293, 294, 295, 0, 0, 0, 296, 621, 622, 623,
	0, 297, 745, 624, 0, 0, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 0, 321, 322, 323, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 327, 328,
	0, 329, 625, 626, 0, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 340,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 627, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 628, 629, 360, 0, 0, 0, 0, 0,
	0, 0, 361, 362, 363, 630, 0, 0, 0, 364,
	0, 365, 0, 0, 0, 366, 367, 631, 632, 368,
	369, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	633, 0, 634, 378, 0, 379, 380, 381, 382, 383,
	635, 636, 637, 460, 0, 384, 385, 0, 386, 387,
	388, 389, 0, 0, 0, 0, 390, 391, 392, 394,
	0, 0, 393, 638, 639, 0, 640, 0, 395, 396,
	0, 641, 0, 397, 398, 399, 0, 400, 0, 0,
	0, 401, 402, 403, 404, 405, 406, 0, 407, 409,
	408, 0, 410, 642, 0, 411, 412, 0, 0, 413,
	0, 0, 0, 414, 415, 418, 0, 0, 416, 417,
	419, 420, 0, 421, 422, 424, 427, 423, 425, 426,
	428, 441, 429, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 443, 0, 756, 0, 444, 445,
	446, 451, 453, 454, 449, 450, 452, 455, 456, 448,
	0, 447, 0, 0, 0, 457, 458, 0, 643, 459,
	644, 461, 462, 0, 0, 463, 0, 0, 0, 465,
	466, 467, 0, 0, 468, 469, 645, 0, 470, 0,
	646, 471, 472, 464, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 0, 482, 483, 647, 484, 485, 486,
	648, 487, 488, 489, 649, 490, 650, 491, 492, 0,
	493, 494, 0, 495, 496, 497, 498, 499, 500, 501,
	651, 502, 504, 503, 505, 0, 506, 0, 507, 508,
	509, 0, 0, 0, 0, 510, 0, 512, 513, 514,
	515, 511, 516, 517, 518, 519, 0, 520, 521, 522,
	0, 523, 524, 525, 526, 652, 527, 0, 528, 529,
	535, 536, 530, 531, 752, 538, 539, 540, 541, 0,
	543, 544, 542, 545, 1573, 547, 0, 548, 549, 532,
	533, 550, 551, 0, 552, 553, 554, 555, 556, 557,
	653, 0, 558, 0, 559, 560, 561, 563, 534, 564,
	569, 570, 654, 565, 566, 567, 568, 655, 572, 573,
	0, 574, 575, 0, 571, 562, 0, 576, 577, 578,
	579, 580, 581, 582, 354, 583, 0, 584, 751, 657,
	658, 659, 0, 593, 0, 585, 586, 587, 660, 588,
	661, 0, 589, 590, 591, 592, 0, 594, 595, 0,
	0, 596, 597, 598, 600, 601, 599, 602, 0, 603,
	0, 0, 604, 605, 606, 662, 663, 664, 0, 608,
	607, 609, 665, 1546, 0, 264, 0, 0, 610, 611,
	666, 612, 613, 614, 0, 0, 0, 0, 0, 0,
	0, 0, 270, 272, 271, 273, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 615, 0,
	0, 0, 0, 280, 281, 0, 282, 283, 284, 285,
	286, 287, 616, 617, 0, 288, 618, 289, 619, 0,
	620, 290, 291, 292, 293, 294, 295, 0, 0, 0,
	296, 621, 622, 623, 0, 297, 298, 624, 0, 0,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 323, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 327, 328, 0, 329, 625, 626, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 627, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 628, 629, 360, 0,
	0, 0, 0, 0, 0, 0, 361, 362, 363, 630,
	0, 0, 0, 364, 0, 365, 0, 0, 0, 366,
	367, 631, 632, 368, 369, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 633, 0, 634, 378, 0, 379,
	380, 381, 382, 383, 1545, 636, 637, 460, 0, 384,
	385, 0, 386, 387, 388, 389, 0, 0, 0, 0,
	390, 391, 392, 394, 0, 0, 393, 638, 639, 0,
	640, 0, 395, 396, 0, 641, 0, 397, 398, 399,
	0, 400, 0, 0, 0, 401, 402, 403, 404, 405,
	406, 0, 407, 409, 408, 0, 410, 642, 0, 411,
	412, 0, 0, 413, 0, 0, 0, 414, 415, 418,
	0, 0, 416, 417, 419, 420, 0, 421, 422, 424,
	427, 423, 425, 426, 428, 441, 429, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 443, 0,
	442, 0, 444, 445, 446, 451, 453, 454, 449, 450,
	452, 455, 456, 448, 0, 447, 0, 0, 0, 457,
	458, 0, 643, 459, 644, 461, 462, 0, 0, 463,
	0, 0, 0, 465, 466, 467, 0, 0, 468, 469,
	645, 0, 470, 0, 646, 471, 472, 464, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 0, 482, 483,
	647, 484, 485, 486, 648, 487, 488, 489, 649, 490,
	650, 491, 492, 0, 493, 494, 0, 495, 496, 497,
	498, 499, 500, 501, 651, 502, 504, 503, 505, 0,
	506, 0, 507, 508, 509, 0, 0, 0, 0, 510,
	0, 512, 513, 514, 515, 511, 516, 517, 518, 519,
	0, 520, 521, 522, 0, 523, 524, 525, 526, 652,
	527, 0, 528, 529, 535, 536, 530, 531, 537, 538,
	539, 540, 541, 0, 543, 544, 542, 545, 546, 547,
	0, 548, 549, 532, 533, 550, 551, 0, 552, 553,
	554, 555, 556, 557, 653, 0, 558, 0, 559, 560,
	561, 563, 534, 564, 569, 570, 654, 565, 566, 567,
	568, 655, 572, 573, 0, 574, 575, 0, 571, 562,
	0, 576, 577, 578, 579, 580, 581, 582, 354, 583,
	0, 584, 656, 657, 658, 659, 0, 593, 0, 585,
	586, 587, 660, 588, 661, 0, 589, 590, 591, 592,
	0, 594, 595, 0, 0, 596, 597, 598, 600, 601,
	599, 602, 0, 603, 0, 0, 604, 605, 606, 662,
	663, 664, 0, 608, 607, 609, 665, 1530, 0, 264,
	0, 0, 610, 611, 666, 612, 613, 614, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 272, 271, 273,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 615, 0, 0, 0, 0, 280, 281, 0,
	282, 283, 284, 285, 286, 287, 616, 617, 0, 288,
	618, 289, 619, 0, 620, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 621, 622, 623, 0, 297,
	298, 624, 0, 0, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 0, 321, 322, 323, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 327, 328, 0, 329,
	625, 626, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 627,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	628, 629, 360, 0, 0, 0, 0, 0, 0, 0,
	361, 362, 363, 630, 0, 0, 0, 364, 0, 365,
	0, 0, 0, 366, 367, 631, 632, 368, 369, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 633, 0,
	634, 378, 0, 379, 380, 381, 382, 383, 1528, 636,
	637, 460, 0, 384, 385, 0, 386, 387, 388, 389,
	0, 0, 0, 0, 390, 391, 392, 394, 0, 0,
	393, 638, 639, 0, 640, 0, 395, 396, 0, 641,
	0, 397, 398, 399, 0, 400, 0, 0, 0, 401,
	402, 403, 404, 405, 406, 0, 407, 409, 408, 0,
	410, 642, 0, 411, 412, 0, 0, 413, 0, 0,
	0, 414, 415, 418, 0, 0, 416, 417, 419, 420,
	0, 421, 422, 424, 427, 423, 425, 426, 428, 441,
	429, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 443, 0, 442, 0, 444, 445, 446, 451,
	453, 454, 449, 450, 452, 455, 456, 448, 0, 447,
	0, 0, 0, 457, 458, 0, 643, 459, 644, 461,
	462, 0, 0, 463, 0, 0, 0, 465, 466, 467,
	0, 0, 468, 469, 645, 0, 470, 0, 646, 471,
	472, 464, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 0, 482, 483, 647, 484, 485, 486, 648, 487,
	488, 489, 649, 490, 650, 491, 492, 0, 493, 494,
	0, 495, 496, 497, 498, 499, 500, 501, 651, 502,
	504, 503, 505, 0, 506, 0, 507, 508, 509, 0,
	0, 0, 0, 510, 0, 512, 513, 514, 515, 511,
	516, 517, 518, 519, 0, 520, 521, 522, 0, 523,
	524, 525, 526, 652, 527, 0, 528, 529, 535, 536,
	530, 531, 537, 538, 539, 540, 541, 0, 543, 544,
	542, 545, 546, 547, 0, 548, 549, 532, 533, 550,
	551, 0, 552, 553, 554, 555, 556, 557, 653, 0,
	558, 0, 559, 560, 561, 563, 534, 564, 569, 570,
	654, 565, 566, 567, 568, 655, 572, 573, 0, 574,
	575, 0, 571, 562, 0, 576, 577, 578, 579, 580,
	581, 582, 354, 583, 0, 584, 656, 657, 658, 659,
	0, 593, 0, 585, 586, 587, 660, 588, 661, 0,
	589, 590, 591, 592, 0, 594, 595, 0, 0, 596,
	597, 598, 600, 601, 599, 602, 0, 603, 0, 0,
	604, 605, 606, 662, 663, 664, 0, 608, 607, 609,
	665, 1523, 0, 264, 0, 0, 610, 611, 666, 612,
	613, 614, 0, 0, 0, 0, 0, 0, 0, 0,
	270, 272, 271, 273, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 615, 0, 0, 0,
	0, 280, 281, 0, 282, 283, 284, 285, 286, 287,
	616, 617, 0, 288, 618, 289, 619, 0, 620, 290,
	291, 292, 293, 294, 295, 0, 0, 0, 296, 621,
	622, 623, 0, 297, 298, 624, 0, 0, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 0, 321, 322, 323,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	327, 328, 0, 329, 625, 626, 0, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 340, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 627, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 628, 629, 360, 0, 0, 0,
	0, 0, 0, 0, 361, 362, 363, 630, 0, 0,
	0, 364, 0, 365, 0, 0, 0, 366, 367, 631,
	632, 368, 369, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 633, 0, 634, 378, 0, 379, 380, 381,
	382, 383, 635, 636, 637, 460, 0, 384, 385, 0,
	386, 387, 388, 389, 0, 0, 0, 0, 390, 391,
	392, 394, 0, 0, 393, 638, 639, 0, 640, 0,
	395, 396, 0, 641, 0, 397, 398, 399, 0, 400,
	0, 0, 0, 401, 402, 403, 404, 405, 406, 0,
	407, 409, 408, 0, 410, 642, 0, 411, 412, 0,
	0, 413, 0, 0, 0, 414, 415, 418, 0, 0,
	416, 417, 419, 420, 0, 421, 422, 424, 427, 423,
	425, 426, 428, 441, 429, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 443, 0, 442, 0,
	444, 445, 446, 451, 453, 454, 449, 450, 452, 455,
	456, 448, 0, 447, 0, 0, 0, 457, 458, 0,
	643, 459, 644, 461, 462, 0, 0, 463, 0, 0,
	0, 465, 466, 467, 0, 0, 468, 469, 645, 0,
	470, 0, 646, 471, 472, 464, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 0, 482, 483, 647, 484,
	485, 486, 648, 487, 488, 489, 649, 490, 650, 491,
	492, 0, 493, 494, 0, 495, 496, 497, 498, 499,
	500, 501, 651, 502, 504, 503, 505, 0, 506, 0,
	507, 508, 509, 0, 0, 0, 0, 510, 0, 512,
	513, 514, 515, 511, 516, 517, 518, 519, 0, 520,
	521, 522, 0, 523, 524, 525, 526, 652, 527, 0,
	528, 529, 535, 536, 530, 531, 537, 538, 539, 540,
	541, 0, 543, 544, 542, 545, 546, 547, 0, 548,
	549, 532, 533, 550, 551, 0, 552, 553, 554, 555,
	556, 557, 653, 0, 558, 0, 559, 560, 561, 563,
	534, 564, 569, 570, 654, 565, 566, 567, 568, 655,
	572, 573, 0, 574, 575, 0, 571, 562, 0, 576,
	577, 578, 579, 580, 581, 582, 354, 583, 0, 584,
	656, 657, 658, 659, 0, 593, 0, 585, 586, 587,
	660, 588, 661, 0, 589, 590, 591, 592, 0, 594,
	595, 0, 0, 596, 597, 598, 600, 601, 599, 602,
	0, 603, 0, 0, 604, 605, 606, 662, 663, 664,
	0, 608, 607, 609, 665, 1500, 0, 264, 0, 0,
	610, 611, 666, 612, 613, 614, 0, 0, 0, 0,
	0, 0, 0, 0, 270, 272, 271, 273, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	615, 0, 0, 0, 0, 280, 281, 0, 282, 283,
	284, 285, 286, 287, 616, 617, 0, 288, 618, 289,
	619, 0, 620, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 621, 622, 623, 0, 297, 298, 624,
	0, 0, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 323, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 327, 328, 0, 329, 625, 626,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 627, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 628, 629,
	360, 0, 0, 0, 0, 0, 0, 0, 361, 362,
	363, 630, 0, 0, 0, 364, 0, 365, 0, 0,
	0, 366, 367, 631, 632, 368, 369, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 633, 0, 634, 378,
	0, 379, 380, 381, 382, 383, 1498, 636, 637, 460,
	0, 384, 385, 0, 386, 387, 388, 389, 0, 0,
	0, 0, 390, 391, 392, 394, 0, 0, 393, 638,
	639, 0, 640, 0, 395, 396, 0, 641, 0, 397,
	398, 399, 0, 400, 0, 0, 0, 401, 402, 403,
	404, 405, 406, 0, 407, 409, 408, 0, 410, 642,
	0, 411, 412, 0, 0, 413, 0, 0, 0, 414,
	415, 418, 0, 0, 416, 417, 419, 420, 0, 421,
	422, 424, 427, 423, 425, 426, 428, 441, 429, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	443, 0, 442, 0, 444, 445, 446, 451, 453, 454,
	449, 450, 452, 455, 456, 448, 0, 447, 0, 0,
	0, 457, 458, 0, 643, 459, 644, 461, 462, 0,
	0, 463, 0, 0, 0, 465, 466, 467, 0, 0,
	468, 469, 645, 0, 470, 0, 646, 471, 472, 464,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 0,
	482, 483, 647, 484, 485, 486, 648, 487, 488, 489,
	649, 490, 650, 491, 492, 0, 493, 494, 0, 495,
	496, 497, 498, 499, 500, 501, 651, 502, 504, 503,
	505, 0, 506, 0, 507, 508, 509, 0, 0, 0,
	0, 510, 0, 512, 513, 514, 515, 511, 516, 517,
	518, 519, 0, 520, 521, 522, 0, 523, 524, 525,
	526, 652, 527, 0, 528, 529, 535, 536, 530, 531,
	537, 538, 539, 540, 541, 0, 543, 544, 542, 545,
	546, 547, 0, 548, 549, 532, 533, 550, 551, 0,
	552, 553, 554, 555, 556, 557, 653, 0, 558, 0,
	559, 560, 561, 563, 534, 564, 569, 570, 654, 565,
	566, 567, 568, 655, 572, 573, 0, 574, 575, 0,
	571, 562, 0, 576, 577, 578, 579, 580, 581, 582,
	354, 583, 0, 584, 656, 657, 658, 659, 0, 593,
	0, 585, 586, 587, 660, 588, 661, 0, 589, 590,
	591, 592, 0, 594, 595, 0, 0, 596, 597, 598,
	600, 601, 599, 602, 0, 603, 0, 0, 604, 605,
	606, 662, 663, 664, 0, 608, 607, 609, 665, 1461,
	0, 264, 0, 0, 610, 611, 666, 612, 613, 614,
	0, 0, 0, 0, 0, 0, 0, 0, 270, 272,
	271, 273, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 615, 0, 0, 0, 0, 280,
	281, 0, 282, 283, 284, 285, 286, 287, 616, 617,
	0, 288, 618, 289, 619, 0, 620, 290, 291, 292,
	293, 294, 295, 0, 0, 0, 296, 621, 622, 623,
	0, 297, 298, 624, 0, 0, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 0, 321, 322, 323, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 327, 328,
	0, 329, 625, 626, 0, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 340,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 627, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 628, 629, 360, 0, 0, 0, 0, 0,
	0, 0, 361, 362, 363, 630, 0, 0, 0, 364,
	0, 365, 0, 0, 0, 366, 367, 631, 632, 368,
	369, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	633, 0, 634, 378, 0, 379, 380, 381, 382, 383,
	635, 636, 637, 460, 0, 384, 385, 0, 386, 387,
	388, 389, 0, 0, 0, 0, 390, 391, 392, 394,
	0, 0, 393, 638, 639, 0, 640, 0, 395, 396,
	0, 641, 0, 397, 398, 399, 0, 400, 0, 0,
	0, 401, 402, 403, 404, 405, 406, 0, 407, 409,
	408, 0, 410, 642, 0, 411, 412, 0, 0, 413,
	0, 0, 0, 414, 415, 418, 0, 0, 416, 417,
	419, 420, 0, 421, 422, 424, 427, 423, 425, 426,
	428, 441, 429, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 443, 0, 442, 0, 444, 445,
	446, 451, 453, 454, 449, 450, 452, 455, 456, 448,
	0, 447, 0, 0, 0, 457, 458, 0, 643, 459,
	644, 461, 462, 0, 0, 463, 0, 0, 0, 465,
	466, 467, 0, 0, 468, 469, 645, 0, 470, 0,
	646, 471, 472, 464, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 0, 482, 483, 647, 484, 485, 486,
	648, 487, 488, 489, 649, 490, 650, 491, 492, 0,
	493, 494, 0, 495, 496, 497, 498, 499, 500, 501,
	651, 502, 504, 503, 505, 0, 506, 0, 507, 508,
	509, 0, 0, 0, 0, 510, 0, 512, 513, 514,
	515, 511, 516, 517, 518, 519, 0, 520, 521, 522,
	0, 523, 524, 525, 526, 652, 527, 0, 528, 529,
	535, 536, 530, 531, 537, 538, 539, 540, 541, 0,
	543, 544, 542, 545, 546, 547, 0, 548, 549, 532,
	533, 550, 551, 0, 552, 553, 554, 555, 556, 557,
	653, 0, 558, 0, 559, 560, 561, 563, 534, 564,
	569, 570, 654, 565, 566, 567, 568, 655, 572, 573,
	0, 574, 575, 0, 571, 562, 0, 576, 577, 578,
	579, 580, 581, 582, 354, 583, 0, 584, 656, 657,
	658, 659, 0, 593, 0, 585, 586, 587, 660, 588,
	661, 0, 589, 590, 591, 592, 0, 594, 595, 0,
	0, 596, 597, 598, 600, 601, 599, 602, 0, 603,
	0, 0, 604, 605, 606, 662, 663, 664, 0, 608,
	607, 609, 665, 1446, 0, 264, 0, 0, 610, 611,
	666, 612, 613, 614, 0, 0, 0, 0, 0, 0,
	0, 0, 270, 272, 271, 273, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 615, 0,
	0, 0, 0, 280, 281, 0, 282, 283, 284, 285,
	286, 287, 616, 617, 0, 288, 618, 289, 619, 0,
	620, 290, 291, 292, 293, 294, 295, 0, 0, 0,
	296, 621, 622, 623, 0, 297, 298, 624, 0, 0,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 323, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 327, 328, 0, 329, 625, 626, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 627, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 628, 629, 360, 0,
	0, 0, 0, 0, 0, 0, 361, 362, 363, 630,
	0, 0, 0, 364, 0, 365, 0, 0, 0, 366,
	367, 631, 632, 368, 369, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 633, 0, 634, 378, 0, 379,
	380, 381, 382, 383, 635, 636, 637, 460, 0, 384,
	385, 0, 386, 387, 388, 389, 0, 0, 0, 0,
	390, 391, 392, 394, 0, 0, 393, 638, 639, 0,
	640, 0, 395, 396, 0, 641, 0, 397, 398, 399,
	0, 400, 0, 0, 0, 401, 402, 403, 404, 405,
	406, 0, 407, 409, 408, 0, 410, 642, 0, 411,
	412, 0, 0, 413, 0, 0, 0, 414, 415, 418,
	0, 0, 416, 417, 419, 420, 0, 421, 422, 424,
	427, 423, 425, 426, 428, 441, 429, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 443, 0,
	442, 0, 444, 445, 446, 451, 453, 454, 449, 450,
	452, 455, 456, 448, 0, 447, 0, 0, 0, 457,
	458, 0, 643, 459, 644, 461, 462, 0, 0, 463,
	0, 0, 0, 465, 466, 467, 0, 0, 468, 469,
	645, 0, 470, 0, 646, 471, 472, 464, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 0, 482, 483,
	647, 484, 485, 486, 648, 487, 488, 489, 649, 490,
	650, 491, 492, 0, 493, 494, 0, 495, 496, 497,
	498, 499, 500, 501, 651, 502, 504, 503, 505, 0,
	506, 0, 507, 508, 509, 0, 0, 0, 0, 510,
	0, 512, 513, 514, 515, 511, 516, 517, 518, 519,
	0, 520, 521, 522, 0, 523, 524, 525, 526, 652,
	527, 0, 528, 529, 535, 536, 530, 531, 537, 538,
	539, 540, 541, 0, 543, 544, 542, 545, 546, 547,
	0, 548, 549, 532, 533, 550, 551, 0, 552, 553,
	554, 555, 556, 557, 653, 0, 558, 0, 559, 560,
	561, 563, 534, 564, 569, 570, 654, 565, 566, 567,
	568, 655, 572, 573, 0, 574, 575, 0, 571, 562,
	0, 576, 577, 578, 579, 580, 581, 582, 354, 583,
	0, 584, 656, 657, 658, 659, 0, 593, 0, 585,
	586, 587, 660, 588, 661, 0, 589, 590, 591, 592,
	0, 594, 595, 0, 0, 596, 597, 598, 600, 601,
	599, 602, 0, 603, 0, 0, 604, 605, 606, 662,
	663, 664, 0, 608, 607, 609, 665, 1283, 0, 264,
	0, 0, 610, 611, 666, 612, 613, 614, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 272, 271, 273,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 615, 0, 0, 0, 0, 280, 281, 0,
	282, 283, 284, 285, 286, 287, 616, 617, 0, 288,
	618, 289, 619, 0, 620, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 621, 622, 623, 0, 297,
	298, 624, 0, 0, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 0, 321, 322, 323, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 327, 328, 0, 329,
	625, 626, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 627,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	628, 629, 360, 0, 0, 0, 0, 0, 0, 0,
	361, 362, 363, 630, 0, 0, 0, 364, 0, 365,
	0, 0, 0, 366, 367, 631, 632, 368, 369, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 633, 0,
	634, 378, 0, 379, 380, 381, 382, 383, 1282, 636,
	637, 460, 0, 384, 385, 0, 386, 387, 388, 389,
	0, 0, 0, 0, 390, 391, 392, 394, 0, 0,
	393, 638, 639, 0, 640, 0, 395, 396, 0, 641,
	0, 397, 398, 399, 0, 400, 0, 0, 0, 401,
	402, 403, 404, 405, 406, 0, 407, 409, 408, 0,
	410, 642, 0, 411, 412, 0, 0, 413, 0, 0,
	0, 414, 415, 418, 0, 0, 416, 417, 419, 420,
	0, 421, 422, 424, 427, 423, 425, 426, 428, 441,
	429, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 443, 0, 442, 0, 444, 445, 446, 451,
	453, 454, 449, 450, 452, 455, 456, 448, 0, 447,
	0, 0, 0, 457, 458, 0, 643, 459, 644, 461,
	462, 0, 0, 463, 0, 0, 0, 465, 466, 467,
	0, 0, 468, 469, 645, 0, 470, 0, 646, 471,
	472, 464, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 0, 482, 483, 647, 484, 485, 486, 648, 487,
	488, 489, 649, 490, 650, 491, 492, 0, 493, 494,
	0, 495, 496, 497, 498, 499, 500, 501, 651, 502,
	504, 503, 505, 0, 506, 0, 507, 508, 509, 0,
	0, 0, 0, 510, 0, 512, 513, 514, 515, 511,
	516, 517, 518, 519, 0, 520, 521, 522, 0, 523,
	524, 525, 526, 652, 527, 0, 528, 529, 535, 536,
	530, 531, 537, 538, 539, 540, 541, 0, 543, 544,
	542, 545, 546, 547, 0, 548, 549, 532, 533, 550,
	551, 0, 552, 553, 554, 555, 556, 557, 653, 0,
	558, 0, 559, 560, 561, 563, 534, 564, 569, 570,
	654, 565, 566, 567, 568, 655, 572, 573, 0, 574,
	575, 0, 571, 562, 0, 576, 577, 578, 579, 580,
	581, 582, 354, 583, 0, 584, 656, 657, 658, 659,
	0, 593, 0, 585, 586, 587, 660, 588, 661, 0,
	589, 590, 591, 592, 0, 594, 595, 0, 0, 596,
	597, 598, 600, 601, 599, 602, 0, 603, 0, 0,
	604, 605, 606, 662, 663, 664, 0, 608, 607, 609,
	665, 1274, 0, 264, 0, 0, 610, 611, 666, 612,
	613, 614, 0, 0, 0, 0, 0, 0, 0, 0,
	270, 272, 271, 273, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 615, 0, 0, 0,
	0, 280, 281, 0, 282, 283, 284, 285, 286, 287,
	616, 617, 0, 288, 618, 289, 619, 0, 620, 290,
	291, 292, 293, 294, 295, 0, 0, 0, 296, 621,
	622, 623, 0, 297, 298, 624, 0, 0, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 0, 321, 322, 323,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	327, 328, 0, 329, 625, 626, 0, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 340, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 627, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 628, 629, 360, 0, 0, 0,
	0, 0, 0, 0, 361, 362, 363, 630, 0, 0,
	0, 364, 0, 365, 0, 0, 0, 366, 367, 631,
	632, 368, 369, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 633, 0, 634, 378, 0, 379, 380, 381,
	382, 383, 1273, 636, 637, 460, 0, 384, 385, 0,
	386, 387, 388, 389, 0, 0, 0, 0, 390, 391,
	392, 394, 0, 0, 393, 638, 639, 0, 640, 0,
	395, 396, 0, 641, 0, 397, 398, 399, 0, 400,
	0, 0, 0, 401, 402, 403, 404, 405, 406, 0,
	407, 409, 408, 0, 410, 642, 0, 411, 412, 0,
	0, 413, 0, 0, 0, 414, 415, 418, 0, 0,
	416, 417, 419, 420, 0, 421, 422, 424, 427, 423,
	425, 426, 428, 441, 429, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 443, 0, 442, 0,
	444, 445, 446, 451, 453, 454, 449, 450, 452, 455,
	456, 448, 0, 447, 0, 0, 0, 457, 458, 0,
	643, 459, 644, 461, 462, 0, 0, 463, 0, 0,
	0, 465, 466, 467, 0, 0, 468, 469, 645, 0,
	470, 0, 646, 471, 472, 464, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 0, 482, 483, 647, 484,
	485, 486, 648, 487, 488, 489, 649, 490, 650, 491,
	492, 0, 493, 494, 0, 495, 496, 497, 498, 499,
	500, 501, 651, 502, 504, 503, 505, 0, 506, 0,
	507, 508, 509, 0, 0, 0, 0, 510, 0, 512,
	513, 514, 515, 511, 516, 517, 518, 519, 0, 520,
	521, 522, 0, 523, 524, 525, 526, 652, 527, 0,
	528, 529, 535, 536, 530, 531, 537, 538, 539, 540,
	541, 0, 543, 544, 542, 545, 546, 547, 0, 548,
	549, 532, 533, 550, 551, 0, 552, 553, 554, 555,
	556, 557, 653, 0, 558, 0, 559, 560, 561, 563,
	534, 564, 569, 570, 654, 565, 566, 567, 568, 655,
	572, 573, 0, 574, 575, 0, 571, 562, 0, 576,
	577, 578, 579, 580, 581, 582, 354, 583, 0, 584,
	656, 657, 658, 659, 0, 593, 0, 585, 586, 587,
	660, 588, 661, 0, 589, 590, 591, 592, 0, 594,
	595, 0, 0, 596, 597, 598, 600, 601, 599, 602,
	0, 603, 0, 0, 604, 605, 606, 662, 663, 664,
	264, 608, 607, 609, 665, 0, 0, 0, 0, 0,
	610, 611, 666, 612, 613, 614, 0, 270, 272, 271,
	273, 274, 275, 276, 277, 1227, 278, 279, 0, 0,
	0, 0, 0, 615, 0, 0, 0, 0, 280, 281,
	0, 282, 283, 284, 285, 286, 287, 616, 617, 0,
	288, 618, 289, 619, 0, 620, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 621, 622, 623, 0,
	297, 298, 624, 0, 0, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 323, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 326, 327, 328, 0,
	329, 625, 626, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	627, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 628, 629, 360, 0, 0, 0, 0, 0, 0,
	0, 361, 362, 363, 630, 0, 0, 0, 364, 0,
	365, 0, 0, 0, 366, 367, 631, 632, 368, 369,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 633,
	0, 634, 378, 0, 379, 380, 381, 382, 383, 635,
	636, 637, 460, 0, 384, 385, 0, 386, 387, 388,
	389, 0, 0, 0, 0, 390, 391, 392, 394, 0,
	0, 393, 638, 639, 0, 640, 0, 395, 396, 0,
	641, 0, 397, 398, 399, 0, 400, 0, 0, 0,
	401, 402, 403, 404, 405, 406, 0, 407, 409, 408,
	0, 410, 642, 0, 411, 412, 0, 0, 413, 0,
	0, 0, 414, 415, 418, 0, 0, 416, 417, 419,
	420, 0, 421, 422, 424, 427, 423, 425, 426, 428,
	441, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 443, 0, 442, 0, 444, 445, 446,
	451, 453, 454, 449, 450, 452, 455, 456, 448, 0,
	447, 0, 0, 0, 457, 458, 0, 643, 459, 644,
	461, 462, 0, 0, 463, 0, 0, 0, 465, 466,
	467, 0, 0, 468, 469, 645, 0, 470, 0, 646,
	471, 472, 464, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 0, 482, 483, 647, 484, 485, 486, 648,
	487, 488, 489, 649, 490, 650, 491, 492, 0, 493,
	494, 0, 495, 496, 497, 498, 499, 500, 501, 651,
	502, 504, 503, 505, 0, 506, 0, 507, 508, 509,
	0, 0, 0, 0, 510, 0, 512, 513, 514, 515,
	511, 516, 517, 518, 519, 0, 520, 521, 522, 0,
	523, 524, 525, 526, 652, 527, 0, 528, 529, 535,
	536, 530, 531, 537, 538, 539, 540, 541, 0, 543,
	544, 542, 545, 546, 547, 0, 548, 549, 532, 533,
	550, 551, 0, 552, 553, 554, 555, 556, 557, 653,
	0, 558, 0, 559, 560, 561, 563, 534, 564, 569,
	570, 654, 565, 566, 567, 568, 655, 572, 573, 0,
	574, 575, 0, 571, 562, 0, 576, 577, 578, 579,
	580, 581, 582, 354, 583, 0, 584, 656, 657, 658,
	659, 0, 593, 0, 585, 586, 587, 660, 588, 661,
	0, 589, 590, 591, 592, 0, 594, 595, 0, 0,
	596, 597, 598, 600, 601, 599, 602, 0, 603, 0,
	0, 604, 605, 606, 662, 663, 664, 264, 608, 607,
	609, 665, 0, 0, 0, 0, 0, 610, 611, 666,
	612, 613, 614, 0, 270, 272, 271, 273, 274, 275,
	276, 277, 761, 278, 279, 0, 0, 0, 0, 0,
	615, 0, 0, 0, 0, 280, 281, 0, 282, 283,
	284, 285, 286, 287, 616, 617, 0, 288, 618, 289,
	619, 0, 620, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 621, 622, 623, 0, 297, 298, 624,
	0, 0, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 323, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 327, 328, 0, 329, 625, 626,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 627, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 628, 629,
	360, 0, 0, 0, 0, 0, 0, 0, 361, 362,
	363, 630, 0, 0, 0, 364, 0, 365, 0, 0,
	0, 366, 367, 631, 632, 368, 369, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 633, 0, 634, 378,
	0, 379, 380, 381, 382, 383, 635, 636, 637, 460,
	0, 384, 385, 0, 386, 387, 388, 389, 0, 0,
	0, 0, 390, 391, 392, 394, 0, 0, 393, 638,
	639, 0, 640, 0, 395, 396, 0, 641, 0, 397,
	398, 399, 0, 400, 0, 0, 0, 401, 402, 403,
	404, 405, 406, 0, 407, 409, 408, 0, 410, 642,
	0, 411, 412, 0, 0, 413, 0, 0, 0, 414,
	415, 418, 0, 0, 416, 417, 419, 420, 0, 421,
	422, 424, 427, 423, 425, 426, 428, 441, 429, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	443, 0, 442, 0, 444, 445, 446, 451, 453, 454,
	449, 450, 452, 455, 456, 448, 0, 447, 0, 0,
	0, 457, 458, 0, 643, 459, 644, 461, 462, 0,
	0, 463, 0, 0, 0, 465, 466, 467, 0, 0,
	468, 469, 645, 0, 470, 0, 646, 471, 472, 464,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 0,
	482, 483, 647, 484, 485, 486, 648, 487, 488, 489,
	649, 490, 650, 491, 492, 0, 493, 494, 0, 495,
	496, 497, 498, 499, 500, 501, 651, 502, 504, 503,
	505, 0, 506, 0, 507, 508, 509, 0, 0, 0,
	0, 510, 0, 512, 513, 514, 515, 511, 516, 517,
	518, 519, 0, 520, 521, 522, 0, 523, 524, 525,
	526, 652, 527, 0, 528, 529, 535, 536, 530, 531,
	537, 538, 539, 540, 541, 0, 543, 544, 542, 545,
	546, 547, 0, 548, 549, 532, 533, 550, 551, 0,
	552, 553, 554, 555, 556, 557, 653, 0, 558, 0,
	559, 560, 561, 563, 534, 564, 569, 570, 654, 565,
	566, 567, 568, 655, 572, 573, 0, 574, 575, 0,
	571, 562, 0, 576, 577, 578, 579, 580, 581, 582,
	354, 583, 0, 584, 656, 657, 658, 659, 0, 593,
	0, 585, 586, 587, 660, 588, 661, 0, 589, 590,
	591, 592, 0, 594, 595, 0, 0, 596, 597, 598,
	600, 601, 599, 602, 0, 603, 0, 0, 604, 605,
	606, 662, 663, 664, 0, 608, 607, 609, 665, 755,
	0, 264, 0, 0, 610, 611, 666, 612, 613, 614,
	0, 0, 0, 0, 0, 0, 0, 0, 270, 272,
	271, 273, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 615, 0, 0, 0, 0, 280,
	281, 0, 282, 283, 284, 285, 286, 287, 616, 617,
	0, 288, 618, 289, 619, 0, 620, 290, 291, 292,
	293, 294, 295, 0, 0, 0, 296, 621, 622, 623,
	0, 297, 745, 624, 0, 0, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 743, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 0, 321, 322, 323, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 327, 328,
	0, 329, 625, 626, 0, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 340,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 627, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 628, 629, 360, 0, 0, 0, 0, 0,
	0, 0, 361, 362, 363, 630, 0, 0, 0, 364,
	0, 365, 0, 0, 0, 366, 367, 631, 632, 368,
	369, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	633, 0, 634, 378, 0, 379, 380, 381, 382, 383,
	635, 636, 637, 460, 0, 384, 385, 0, 386, 387,
	388, 389, 0, 0, 0, 0, 390, 391, 392, 394,
	0, 0, 393, 638, 639, 0, 640, 0, 395, 396,
	0, 641, 0, 397, 398, 399, 0, 400, 0, 0,
	0, 401, 402, 403, 404, 405, 406, 0, 407, 409,
	408, 0, 410, 642, 0, 411, 412, 0, 0, 413,
	0, 0, 0, 414, 744, 418, 0, 0, 416, 417,
	419, 420, 0, 421, 422, 424, 427, 423, 425, 426,
	428, 441, 429, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 443, 0, 756, 0, 444, 445,
	446, 451, 453, 454, 449, 450, 452, 455, 456, 448,
	0, 447, 0, 0, 0, 457, 458, 0, 643, 459,
	644, 461, 462, 0, 0, 463, 0, 0, 0, 465,
	466, 467, 0, 0, 468, 469, 645, 0, 470, 0,
	646, 471, 472, 464, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 0, 482, 483, 647, 484, 485, 486,
	648, 487, 488, 489, 649, 490, 650, 491, 492, 0,
	493, 494, 0, 495, 496, 497, 498, 499, 500, 501,
	651, 502, 504, 503, 505, 0, 506, 0, 507, 508,
	509, 0, 0, 0, 0, 510, 0, 512, 513, 514,
	515, 511, 516, 517, 518, 519, 0, 520, 521, 522,
	0, 523, 524, 525, 526, 746, 527, 0, 528, 529,
	535, 536, 530, 531, 752, 538, 539, 540, 541, 0,
	543, 544, 542, 545, 747, 547, 0, 548, 549, 532,
	533, 550, 551, 0, 552, 553, 554, 555, 556, 557,
	653, 0, 558, 0, 559, 560, 561, 563, 534, 564,
	569, 570, 654, 565, 566, 567, 568, 655, 572, 573,
	0, 574, 575, 0, 571, 562, 0, 576, 577, 578,
	579, 580, 581, 582, 354, 583, 0, 584, 751, 657,
	658, 659, 0, 593, 0, 585, 749, 587, 660, 588,
	661, 0, 589, 590, 591, 592, 0, 594, 595, 0,
	0, 596, 597, 598, 600, 601, 599, 602, 0, 603,
	0, 0, 604, 605, 606, 662, 663, 664, 0, 608,
	607, 609, 665, 737, 0, 264, 0, 0, 610, 611,
	666, 612, 613, 614, 0, 0, 0, 0, 0, 0,
	0, 0, 270, 272, 271, 273, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 615, 0,
	0, 0, 0, 280, 281, 0, 282, 283, 284, 285,
	286, 287, 616, 617, 0, 288, 618, 289, 619, 0,
	620, 290, 291, 292, 293, 294, 295, 0, 0, 0,
	296, 621, 622, 623, 0, 297, 298, 624, 0, 0,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 323, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 327, 328, 0, 329, 625, 626, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 627, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 628, 629, 360, 0,
	0, 0, 0, 0, 0, 0, 361, 362, 363, 630,
	0, 0, 0, 364, 0, 365, 0, 0, 0, 366,
	367, 631, 632, 368, 369, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 633, 0, 634, 378, 0, 379,
	380, 381, 382, 383, 635, 636, 637, 460, 0, 384,
	385, 0, 386, 387, 388, 389, 0, 0, 0, 0,
	390, 391, 392, 394, 0, 0, 393, 638, 639, 0,
	640, 0, 395, 396, 0, 641, 0, 397, 398, 399,
	0, 400, 0, 0, 0, 401, 402, 403, 404, 405,
	406, 0, 407, 409, 408, 0, 410, 642, 0, 411,
	412, 0, 0, 413, 0, 0, 0, 414, 415, 418,
	0, 0, 416, 417, 419, 420, 0, 421, 422, 424,
	427, 423, 425, 426, 428, 441, 429, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 443, 0,
	442, 0, 444, 445, 446, 451, 453, 454, 449, 450,
	452, 455, 456, 448, 0, 447, 0, 0, 0, 457,
	458, 0, 643, 459, 644, 461, 462, 0, 0, 463,
	0, 0, 0, 465, 466, 467, 0, 0, 468, 469,
	645, 0, 470, 0, 646, 471, 472, 464, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 0, 482, 483,
	647, 484, 485, 486, 648, 487, 488, 489, 649, 490,
	650, 491, 492, 0, 493, 494, 0, 495, 496, 497,
	498, 499, 500, 501, 651, 502, 504, 503, 505, 0,
	506, 0, 507, 508, 509, 0, 0, 0, 0, 510,
	0, 512, 513, 514, 515, 511, 516, 517, 518, 519,
	0, 520, 521, 522, 0, 523, 524, 525, 526, 652,
	527, 0, 528, 529, 738, 536, 530, 531, 537, 538,
	539, 540, 541, 0, 543, 544, 542, 545, 546, 547,
	0, 548, 549, 532, 533, 550, 551, 0, 552, 553,
	554, 555, 556, 557, 653, 0, 558, 0, 559, 560,
	561, 563, 534, 564, 569, 570, 654, 565, 566, 567,
	568, 655, 572, 573, 0, 574, 575, 0, 571, 562,
	0, 576, 577, 578, 579, 580, 581, 582, 354, 583,
	0, 584, 656, 657, 658, 659, 0, 593, 0, 585,
	586, 587, 660, 588, 661, 0, 589, 590, 591, 592,
	0, 594, 595, 0, 0, 596, 597, 598, 600, 601,
	599, 602, 0, 603, 0, 0, 604, 605, 606, 662,
	663, 664, 0, 608, 607, 609, 665, 700, 0, 264,
	0, 0, 610, 611, 666, 612, 613, 614, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 272, 271, 273,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 615, 0, 0, 0, 0, 280, 281, 0,
	282, 283, 284, 285, 286, 287, 616, 617, 0, 288,
	618, 289, 619, 0, 620, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 621, 622, 623, 0, 297,
	298, 624, 0, 0, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 0, 321, 322, 323, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 327, 328, 0, 329,
	625, 626, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 627,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	628, 629, 360, 0, 0, 0, 0, 0, 0, 0,
	361, 362, 363, 630, 0, 0, 0, 364, 0, 365,
	0, 0, 0, 366, 367, 631, 632, 368, 369, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 633, 0,
	634, 378, 0, 379, 380, 381, 382, 383, 635, 636,
	637, 460, 0, 384, 385, 0, 386, 387, 388, 389,
	0, 0, 0, 0, 390, 391, 392, 394, 0, 0,
	393, 638, 639, 0, 640, 0, 395, 396, 0, 641,
	0, 397, 398, 399, 0, 400, 0, 0, 0, 401,
	402, 403, 404, 405, 406, 0, 407, 409, 408, 0,
	410, 642, 0, 411, 412, 0, 0, 413, 0, 0,
	0, 414, 415, 418, 0, 0, 416, 417, 419, 420,
	0, 421, 422, 424, 427, 423, 425, 426, 428, 441,
	429, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 443, 0, 442, 0, 444, 445, 446, 451,
	453, 454, 449, 450, 452, 455, 456, 448, 0, 447,
	0, 0, 0, 457, 458, 0, 643, 459, 644, 461,
	462, 0, 0, 463, 0, 0, 0, 465, 466, 467,
	0, 0, 468, 469, 645, 0, 470, 0, 646, 471,
	472, 464, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 0, 482, 483, 647, 484, 485, 486, 648, 487,
	488, 489, 649, 490, 650, 491, 492, 0, 493, 494,
	0, 495, 496, 497, 498, 499, 500, 501, 651, 502,
	504, 503, 505, 0, 506, 0, 507, 508, 509, 0,
	0, 0, 0, 510, 0, 512, 513, 514, 515, 511,
	516, 517, 518, 519, 0, 520, 521, 522, 0, 523,
	524, 525, 526, 652, 527, 0, 528, 529, 535, 536,
	530, 531, 537, 538, 539, 540, 541, 0, 543, 544,
	542, 545, 546, 547, 0, 548, 549, 532, 533, 550,
	551, 0, 552, 553, 554, 555, 556, 557, 653, 0,
	558, 0, 559, 560, 561, 563, 534, 564, 569, 570,
	654, 565, 566, 567, 568, 655, 572, 573, 0, 574,
	575, 0, 571, 562, 0, 576, 577, 578, 579, 580,
	581, 582, 354, 583, 0, 584, 656, 657, 658, 659,
	0, 593, 0, 585, 586, 587, 660, 588, 661, 0,
	589, 590, 591, 592, 0, 594, 595, 0, 0, 596,
	597, 598, 600, 601, 599, 602, 0, 603, 0, 0,
	604, 605, 606, 662, 663, 664, 0, 608, 607, 609,
	665, 694, 0, 264, 0, 0, 610, 611, 666, 612,
	613, 614, 0, 0, 0, 0, 0, 0, 0, 0,
	270, 272, 271, 273, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 615, 0, 0, 0,
	0, 280, 281, 0, 282, 283, 284, 285, 286, 287,
	616, 617, 0, 288, 618, 289, 619, 0, 620, 290,
	291, 292, 293, 294, 295, 0, 0, 0, 296, 621,
	622, 623, 0, 297, 298, 624, 0, 0, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 0, 321, 322, 323,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	327, 328, 0, 329, 625, 626, 0, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 340, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 627, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 628, 629, 360, 0, 0, 0,
	0, 0, 0, 0, 361, 362, 363, 630, 0, 0,
	0, 364, 0, 365, 0, 0, 0, 366, 367, 631,
	632, 368, 369, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 633, 0, 634, 378, 0, 379, 380, 381,
	382, 383, 635, 636, 637, 460, 0, 384, 385, 0,
	386, 387, 388, 389, 0, 0, 0, 0, 390, 391,
	392, 394, 0, 0, 393, 638, 639, 0, 640, 0,
	395, 396, 0, 641, 0, 397, 398, 399, 0, 400,
	0, 0, 0, 401, 402, 403, 404, 405, 406, 0,
	407, 409, 408, 0, 410, 642, 0, 411, 412, 0,
	0, 413, 0, 0, 0, 414, 415, 418, 0, 0,
	416, 417, 419, 420, 0, 421, 422, 424, 427, 423,
	425, 426, 428, 441, 429, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 443, 0, 442, 0,
	444, 445, 446, 451, 453, 454, 449, 450, 452, 455,
	456, 448, 0, 447, 0, 0, 0, 457, 458, 0,
	643, 459, 644, 461, 462, 0, 0, 463, 0, 0,
	0, 465, 466, 467, 0, 0, 468, 469, 645, 0,
	470, 0, 646, 471, 472, 464, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 0, 482, 483, 647, 484,
	485, 486, 648, 487, 488, 489, 649, 490, 650, 491,
	492, 0, 493, 494, 0, 495, 496, 497, 498, 499,
	500, 501, 651, 502, 504, 503, 505, 0, 506, 0,
	507, 508, 509, 0, 0, 0, 0, 510, 0, 512,
	513, 514, 515, 511, 516, 517, 518, 519, 0, 520,
	521, 522, 0, 523, 524, 525, 526, 652, 527, 0,
	528, 529, 535, 536, 530, 531, 537, 538, 539, 540,
	541, 0, 543, 544, 542, 545, 546, 547, 0, 548,
	549, 532, 533, 550, 551, 0, 552, 553, 554, 555,
	556, 557, 653, 0, 558, 0, 559, 560, 561, 563,
	534, 564, 569, 570, 654, 565, 566, 567, 568, 655,
	572, 573, 0, 574, 575, 0, 571, 562, 0, 576,
	577, 578, 579, 580, 581, 582, 354, 583, 0, 584,
	656, 657, 658, 659, 0, 593, 0, 585, 586, 587,
	660, 588, 661, 0, 589, 590, 591, 592, 0, 594,
	595, 0, 0, 596, 597, 598, 600, 601, 599, 602,
	0, 603, 0, 0, 604, 605, 606, 662, 663, 664,
	0, 608, 607, 609, 665, 672, 0, 264, 0, 0,
	610, 611, 666, 612, 613, 614, 0, 0, 0, 0,
	0, 0, 0, 0, 270, 272, 271, 273, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	615, 0, 0, 0, 0, 280, 281, 0, 282, 283,
	284, 285, 286, 287, 616, 617, 0, 288, 618, 289,
	619, 0, 620, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 621, 622, 623, 0, 297, 298, 624,
	0, 0, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 323, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 327, 328, 0, 329, 625, 626,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 627, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 628, 629,
	360, 0, 0, 0, 0, 0, 0, 0, 361, 362,
	363, 630, 0, 0, 0, 364, 0, 365, 0, 0,
	0, 366, 367, 631, 632, 368, 369, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 633, 0, 634, 378,
	0, 379, 380, 381, 382, 383, 635, 636, 637, 460,
	0, 384, 385, 0, 386, 387, 388, 389, 0, 0,
	0, 0, 390, 391, 392, 394, 0, 0, 393, 638,
	639, 0, 640, 0, 395, 396, 0, 641, 0, 397,
	398, 399, 0, 400, 0, 0, 0, 401, 402, 403,
	404, 405, 406, 0, 407, 409, 408, 0, 410, 642,
	0, 411, 412, 0, 0, 413, 0, 0, 0, 414,
	415, 418, 0, 0, 416, 417, 419, 420, 0, 421,
	422, 424, 427, 423, 425, 426, 428, 441, 429, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	443, 0, 442, 0, 444, 445, 446, 451, 453, 454,
	449, 450, 452, 455, 456, 448, 0, 447, 0, 0,
	0, 457, 458, 0, 643, 459, 644, 461, 462, 0,
	0, 463, 0, 0, 0, 465, 466, 467, 0, 0,
	468, 469, 645, 0, 470, 0, 646, 471, 472, 464,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 0,
	482, 483, 647, 484, 485, 486, 648, 487, 488, 489,
	649, 490, 650, 491, 492, 0, 493, 494, 0, 495,
	496, 497, 498, 499, 500, 501, 651, 502, 504, 503,
	505, 0, 506, 0, 507, 508, 509, 0, 0, 0,
	0, 510, 0, 512, 513, 514, 515, 511, 516, 517,
	518, 519, 0, 520, 521, 522, 0, 523, 524, 525,
	526, 652, 527, 0, 528, 529, 535, 536, 530, 531,
	537, 538, 539, 540, 541, 0, 543, 544, 542, 545,
	546, 547, 0, 548, 549, 532, 533, 550, 551, 0,
	552, 553, 554, 555, 556, 557, 653, 0, 558, 0,
	559, 560, 561, 563, 534, 564, 569, 570, 654, 565,
	566, 567, 568, 655, 572, 573, 0, 574, 575, 0,
	571, 562, 0, 576, 577, 578, 579, 580, 581, 582,
	354, 583, 0, 584, 656, 657, 658, 659, 0, 593,
	0, 585, 586, 587, 660, 588, 661, 0, 589, 590,
	591, 592, 0, 594, 595, 0, 0, 596, 597, 598,
	600, 601, 599, 602, 0, 603, 0, 0, 604, 605,
	606, 662, 663, 664, 264, 608, 607, 609, 665, 0,
	0, 0, 0, 0, 610, 611, 666, 612, 613, 614,
	0, 270, 272, 271, 273, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 615, 0, 0,
	0, 0, 280, 281, 0, 282, 283, 284, 285, 286,
	287, 616, 617, 0, 288, 618, 289, 619, 0, 620,
	290, 291, 292, 293, 294, 295, 0, 0, 0, 296,
	621, 622, 623, 0, 297, 298, 624, 0, 0, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 0, 321, 322,
	323, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	326, 327, 328, 0, 329, 625, 626, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 340, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 627, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 628, 629, 360, 0, 0,
	0, 0, 0, 0, 0, 361, 362, 363, 630, 0,
	0, 0, 364, 0, 365, 0, 0, 0, 366, 367,
	631, 632, 368, 369, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 633, 0, 634, 378, 0, 379, 380,
	381, 382, 383, 635, 636, 637, 460, 0, 384, 385,
	0, 386, 387, 388, 389, 0, 0, 0, 0, 390,
	391, 392, 394, 0, 0, 393, 638, 639, 0, 640,
	0, 395, 396, 0, 641, 0, 397, 398, 399, 0,
	400, 0, 0, 0, 401, 402, 403, 404, 405, 406,
	0, 407, 409, 408, 0, 410, 642, 0, 411, 412,
	0, 0, 413, 0, 0, 0, 414, 415, 418, 0,
	0, 416, 417, 419, 420, 0, 421, 422, 424, 427,
	423, 425, 426, 428, 441, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 443, 0, 442,
	0, 444, 445, 446, 451, 453, 454, 449, 450, 452,
	455, 456, 448, 0, 447, 0, 0, 0, 457, 458,
	0, 643, 459, 644, 461, 462, 0, 0, 463, 0,
	0, 0, 465, 466, 467, 0, 0, 468, 469, 645,
	0, 470, 0, 646, 471, 472, 464, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 0, 482, 483, 647,
	484, 485, 486, 648, 487, 488, 489, 649, 490, 650,
	491, 492, 0, 493, 494, 0, 495, 496, 497, 498,
	499, 500, 501, 651, 502, 504, 503, 505, 0, 506,
	0, 507, 508, 509, 0, 0, 0, 0, 510, 0,
	512, 513, 514, 515, 511, 516, 517, 518, 519, 0,
	520, 521, 522, 0, 523, 524, 525, 526, 652, 527,
	0, 528, 529, 535, 536, 530, 531, 537, 538, 539,
	540, 541, 0, 543, 544, 542, 545, 546, 547, 0,
	548, 549, 532, 533, 550, 551, 0, 552, 553, 554,
	555, 556, 557, 653, 0, 558, 0, 559, 560, 561,
	563, 534, 564, 569, 570, 654, 565, 566, 567, 568,
	655, 572, 573, 0, 574, 575, 0, 571, 562, 0,
	576, 577, 578, 579, 580, 581, 582, 354, 583, 0,
	584, 656, 657, 658, 659, 0, 593, 0, 585, 586,
	587, 660, 588, 661, 0, 589, 590, 591, 592, 0,
	594, 595, 0, 0, 596, 597, 598, 600, 601, 599,
	602, 0, 603, 0, 0, 604, 605, 606, 662, 663,
	664, 264, 608, 607, 609, 665, 0, 0, 0, 0,
	0, 610, 611, 666, 612, 613, 614, 0, 270, 272,
	271, 273, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 615, 0, 0, 0, 0, 280,
	281, 0, 282, 283, 284, 285, 286, 287, 616, 617,
	0, 288, 618, 289, 619, 0, 620, 290, 291, 292,
	293, 294, 295, 0, 0, 0, 296, 621, 622, 623,
	0, 297, 298, 624, 0, 0, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 0, 321, 322, 323, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 327, 328,
	0, 329, 625, 626, 0, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 340,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 627, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 628, 629, 360, 0, 0, 0, 0, 0,
	0, 0, 361, 362, 363, 630, 0, 0, 0, 364,
	0, 365, 0, 0, 0, 366, 367, 631, 632, 368,
	369, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	633, 0, 634, 378, 0, 379, 380, 381, 382, 383,
	3435, 636, 637, 460, 0, 384, 385, 0, 386, 387,
	388, 389, 0, 0, 0, 0, 390, 391, 392, 394,
	0, 0, 393, 638, 639, 0, 640, 0, 395, 396,
	0, 641, 0, 397, 398, 399, 0, 400, 0, 0,
	0, 401, 402, 403, 404, 405, 406, 0, 407, 409,
	408, 0, 410, 642, 0, 411, 412, 0, 0, 413,
	0, 0, 0, 414, 415, 418, 0, 0, 416, 417,
	419, 420, 0, 421, 422, 424, 427, 423, 425, 426,
	428, 441, 429, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 443, 0, 442, 0, 444, 445,
	446, 451, 453, 454, 449, 450, 452, 455, 456, 448,
	0, 447, 0, 0, 0, 457, 458, 0, 643, 459,
	644, 461, 462, 0, 0, 463, 0, 0, 0, 465,
	466, 467, 0, 0, 468, 469, 645, 0, 470, 0,
	646, 471, 472, 464, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 0, 482, 483, 647, 484, 485, 486,
	648, 487, 488, 489, 649, 490, 650, 491, 492, 0,
	493, 494, 0, 495, 496, 497, 498, 499, 500, 501,
	651, 502, 504, 503, 505, 0, 506, 0, 507, 508,
	509, 0, 0, 0, 0, 510, 0, 512, 513, 514,
	515, 511, 516, 517, 518, 519, 0, 520, 521, 522,
	0, 523, 524, 525, 526, 652, 527, 0, 528, 529,
	535, 536, 530, 531, 537, 538, 539, 540, 541, 0,
	543, 544, 542, 545, 546, 547, 0, 548, 549, 532,
	533, 550, 551, 0, 552, 553, 554, 555, 556, 557,
	653, 0, 558, 0, 559, 560, 561, 563, 534, 564,
	569, 570, 654, 565, 566, 567, 568, 655, 572, 573,
	0, 574, 575, 0, 571, 562, 0, 576, 577, 578,
	579, 580, 581, 582, 354, 583, 0, 584, 656, 657,
	658, 659, 0, 593, 0, 585, 586, 587, 660, 588,
	661, 0, 589, 590, 591, 592, 0, 594, 595, 0,
	0, 596, 597, 598, 600, 601, 599, 602, 0, 603,
	0, 0, 604, 605, 606, 662, 663, 664, 264, 608,
	607, 609, 665, 0, 0, 0, 0, 0, 610, 611,
	666, 612, 613, 614, 0, 270, 272, 271, 273, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 615, 0, 0, 0, 0, 280, 281, 0, 282,
	283, 284, 285, 286, 287, 616, 617, 0, 288, 618,
	289, 619, 0, 620, 290, 291, 292, 293, 294, 295,
	0, 0, 0, 296, 621, 622, 623, 0, 297, 298,
	624, 0, 0, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 0, 321, 322, 323, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 326, 327, 328, 0, 329, 625,
	626, 0, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 340, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 627, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 628,
	629, 360, 0, 0, 0, 0, 0, 0, 0, 361,
	362, 363, 630, 0, 0, 0, 364, 0, 365, 0,
	0, 0, 366, 367, 631, 632, 368, 369, 370, 371,
	372, 373, 374, 375, 376, 0, 377, 633, 0, 634,
	378, 0, 379, 380, 381, 382, 383, 3372, 636, 637,
	460, 0, 384, 385, 0, 386, 387, 388, 389, 0,
	0, 0, 0, 390, 391, 392, 394, 0, 0, 393,
	638, 639, 0, 640, 0, 395, 396, 0, 641, 0,
	397, 398, 399, 0, 400, 0, 0, 0, 401, 402,
	403, 404, 405, 406, 0, 407, 409, 408, 0, 410,
	642, 0, 411, 412, 0, 0, 413, 0, 0, 0,
	414, 415, 418, 0, 0, 416, 417, 419, 420, 0,
	421, 422, 424, 427, 423, 425, 426, 428, 441, 429,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 443, 0, 442, 0, 444, 445, 446, 451, 453,
	454, 449, 450, 452, 455, 456, 448, 0, 447, 0,
	0, 0, 457, 458, 0, 643, 459, 644, 461, 462,
	0, 0, 463, 0, 0, 0, 465, 466, 467, 0,
	0, 468, 469, 645, 0, 470, 0, 646, 471, 472,
	464, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	0, 482, 483, 647, 484, 485, 486, 648, 487, 488,
	489, 649, 490, 650, 491, 492, 0, 493, 494, 0,
	495, 496, 497, 498, 499, 500, 501, 651, 502, 504,
	503, 505, 0, 506, 0, 507, 508, 509, 0, 0,
	0, 0, 510, 0, 512, 513, 514, 515, 511, 516,
	517, 518, 519, 0, 520, 521, 522, 0, 523, 524,
	525, 526, 652, 527, 0, 528, 529, 535, 536, 530,
	531, 537, 538, 539, 540, 541, 0, 543, 544, 542,
	545, 546, 547, 0, 548, 549, 532, 533, 550, 551,
	0, 552, 553, 554, 555, 556, 557, 653, 0, 558,
	0, 559, 560, 561, 563, 534, 564, 569, 570, 654,
	565, 566, 567, 568, 655, 572, 573, 0, 574, 575,
	0, 571, 562, 0, 576, 577, 578, 579, 580, 581,
	582, 354, 583, 0, 584, 656, 657, 658, 659, 0,
	593, 0, 585, 586, 587, 660, 588, 661, 0, 589,
	590, 591, 592, 0, 594, 595, 0, 0, 596, 597,
	598, 600, 601, 599, 602, 0, 603, 0, 0, 604,
	605, 606, 662, 663, 664, 264, 608, 607, 609, 665,
	0, 0, 0, 0, 0, 610, 611, 666, 612, 613,
	614, 0, 270, 272, 271, 273, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 615, 0,
	0, 0, 0, 280, 281, 0, 282, 283, 284, 285,
	286, 287, 616, 617, 0, 288, 618, 289, 619, 0,
	620, 290, 291, 292, 293, 294, 295, 0, 0, 0,
	296, 621, 622, 623, 0, 297, 298, 624, 0, 0,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 323, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 327, 328, 0, 329, 625, 626, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 627, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 628, 629, 360, 0,
	0, 0, 0, 0, 0, 0, 361, 362, 363, 630,
	0, 0, 0, 364, 0, 365, 0, 0, 0, 366,
	367, 631, 632, 368, 369, 370, 371, 372, 373, 374,
	375, 376, 0, 377, 633, 0, 634, 378, 0, 379,
	380, 381, 382, 383, 3305, 636, 637, 460, 0, 384,
	385, 0, 386, 387, 388, 389, 0, 0, 0, 0,
	390, 391, 392, 394, 0, 0, 393, 638, 639, 0,
	640, 0, 395, 396, 0, 641, 0, 397, 398, 399,
	0, 400, 0, 0, 0, 401, 402, 403, 404, 405,
	406, 0, 407, 409, 408, 0, 410, 642, 0, 411,
	412, 0, 0, 413, 0, 0, 0, 414, 415, 418,
	0, 0, 416, 417, 419, 420, 0, 421, 422, 424,
	427, 423, 425, 426, 428, 441, 429, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 443, 0,
	442, 0, 444, 445, 446, 451, 453, 454, 449, 450,
	452, 455, 456, 448, 0, 447, 0, 0, 0, 457,
	458, 0, 643, 459, 644, 461, 462, 0, 0, 463,
	0, 0, 0, 465, 466, 467, 0, 0, 468, 469,
	645, 0, 470, 0, 646, 471, 472, 464, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 0, 482, 483,
	647, 484, 485, 486, 648, 487, 488, 489, 649, 490,
	650, 491, 492, 0, 493, 494, 0, 495, 496, 497,
	498, 499, 500, 501, 651, 502, 504, 503, 505, 0,
	506, 0, 507, 508, 509, 0, 0, 0, 0, 510,
	0, 512, 513, 514, 515, 511, 516, 517, 518, 519,
	0, 520, 521, 522, 0, 523, 524, 525, 526, 652,
	527, 0, 528, 529, 535, 536, 530, 531, 537, 538,
	539, 540, 541, 0, 543, 544, 542, 545, 546, 547,
	0, 548, 549, 532, 533, 550, 551, 0, 552, 553,
	554, 555, 556, 557, 653, 0, 558, 0, 559, 560,
	561, 563, 534, 564, 569, 570, 654, 565, 566, 567,
	568, 655, 572, 573, 0, 574, 575, 0, 571, 562,
	0, 576, 577, 578, 579, 580, 581, 582, 354, 583,
	0, 584, 656, 657, 658, 659, 0, 593, 0, 585,
	586, 587, 660, 588, 661, 0, 589, 590, 591, 592,
	0, 594, 595, 0, 0, 596, 597, 598, 600, 601,
	599, 602, 0, 603, 0, 0, 604, 605, 606, 662,
	663, 664, 264, 608, 607, 609, 665, 0, 0, 0,
	0, 0, 610, 611, 666, 612, 613, 614, 0, 270,
	272, 271, 273, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 615, 0, 0, 0, 0,
	280, 281, 0, 282, 283, 284, 285, 286, 287, 616,
	617, 0, 288, 618, 289, 619, 0, 620, 290, 291,
	292, 293, 294, 295, 0, 0, 0, 296, 621, 622,
	623, 0, 297, 298, 624, 0, 0, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 0, 321, 322, 323, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 326, 327,
	328, 0, 329, 625, 626, 0, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	340, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 627, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 628, 629, 360, 0, 0, 0, 0,
	0, 0, 0, 361, 362, 363, 630, 0, 0, 0,
	364, 0, 365, 0, 0, 0, 366, 367, 631, 632,
	368, 369, 370, 371, 372, 373, 374, 375, 376, 0,
	377, 633, 0, 634, 378, 0, 379, 380, 381, 382,
	383, 3303, 636, 637, 460, 0, 384, 385, 0, 386,
	387, 388, 389, 0, 0, 0, 0, 390, 391, 392,
	394, 0, 0, 393, 638, 639, 0, 640, 0, 395,
	396, 0, 641, 0, 397, 398, 399, 0, 400, 0,
	0, 0, 401, 402, 403, 404, 405, 406, 0, 407,
	409, 408, 0, 410, 642, 0, 411, 412, 0, 0,
	413, 0, 0, 0, 414, 415, 418, 0, 0, 416,
	417, 419, 420, 0, 421, 422, 424, 427, 423, 425,
	426, 428, 441, 429, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 443, 0, 442, 0, 444,
	445, 446, 451, 453, 454, 449, 450, 452, 455, 456,
	448, 0, 447, 0, 0, 0, 457, 458, 0, 643,
	459, 644, 461, 462, 0, 0, 463, 0, 0, 0,
	465, 466, 467, 0, 0, 468, 469, 645, 0, 470,
	0, 646, 471, 472, 464, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 0, 482, 483, 647, 484, 485,
	486, 648, 487, 488, 489, 649, 490, 650, 491, 492,
	0, 493, 494, 0, 495, 496, 497, 498, 499, 500,
	501, 651, 502, 504, 503, 505, 0, 506, 0, 507,
	508, 509, 0, 0, 0, 0, 510, 0, 512, 513,
	514, 515, 511, 516, 517, 518, 519, 0, 520, 521,
	522, 0, 523, 524, 525, 526, 652, 527, 0, 528,
	529, 535, 536, 530, 531, 537, 538, 539, 540, 541,
	0, 543, 544, 542, 545, 546, 547, 0, 548, 549,
	532, 533, 550, 551, 0, 552, 553, 554, 555, 556,
	557, 653, 0, 558, 0, 559, 560, 561, 563, 534,
	564, 569, 570, 654, 565, 566, 567, 568, 655, 572,
	573, 0, 574, 575, 0, 571, 562, 0, 576, 577,
	578, 579, 580, 581, 582, 354, 583, 0, 584, 656,
	657, 658, 659, 0, 593, 0, 585, 586, 587, 660,
	588, 661, 0, 589, 590, 591, 592, 0, 594, 595,
	0, 0, 596, 597, 598, 600, 601, 599, 602, 0,
	603, 0, 0, 604, 605, 606, 662, 663, 664, 264,
	608, 607, 609, 665, 0, 0, 0, 0, 0, 610,
	611, 666, 612, 613, 614, 0, 270, 272, 271, 273,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 615, 0, 0, 0, 0, 280, 281, 0,
	282, 283, 284, 285, 286, 287, 616, 617, 0, 288,
	618, 289, 619, 0, 620, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 621, 622, 623, 0, 297,
	298, 624, 0, 0, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 0, 321, 322, 323, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 327, 328, 0, 329,
	625, 626, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 627,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	628, 629, 360, 0, 0, 0, 0, 0, 0, 0,
	361, 362, 363, 630, 0, 0, 0, 364, 0, 365,
	0, 0, 0, 366, 367, 631, 632, 368, 369, 370,
	371, 372, 373, 374, 375, 376, 0, 377, 633, 0,
	634, 378, 0, 379, 380, 381, 382, 383, 3288, 636,
	637, 460, 0, 384, 385, 0, 386, 387, 388, 389,
	0, 0, 0, 0, 390, 391, 392, 394, 0, 0,
	393, 638, 639, 0, 640, 0, 395, 396, 0, 641,
	0, 397, 398, 399, 0, 400, 0, 0, 0, 401,
	402, 403, 404, 405, 406, 0, 407, 409, 408, 0,
	410, 642, 0, 411, 412, 0, 0, 413, 0, 0,
	0, 414, 415, 418, 0, 0, 416, 417, 419, 420,
	0, 421, 422, 424, 427, 423, 425, 426, 428, 441,
	429, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 443, 0, 442, 0, 444, 445, 446, 451,
	453, 454, 449, 450, 452, 455, 456, 448, 0, 447,
	0, 0, 0, 457, 458, 0, 643, 459, 644, 461,
	462, 0, 0, 463, 0, 0, 0, 465, 466, 467,
	0, 0, 468, 469, 645, 0, 470, 0, 646, 471,
	472, 464, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 0, 482, 483, 647, 484, 485, 486, 648, 487,
	488, 489, 649, 490, 650, 491, 492, 0, 493, 494,
	0, 495, 496, 497, 498, 499, 500, 501, 651, 502,
	504, 503, 505, 0, 506, 0, 507, 508, 509, 0,
	0, 0, 0, 510, 0, 512, 513, 514, 515, 511,
	516, 517, 518, 519, 0, 520, 521, 522, 0, 523,
	524, 525, 526, 652, 527, 0, 528, 529, 535, 536,
	530, 531, 537, 538, 539, 540, 541, 0, 543, 544,
	542, 545, 546, 547, 0, 548, 549, 532, 533, 550,
	551, 0, 552, 553, 554, 555, 556, 557, 653, 0,
	558, 0, 559, 560, 561, 563, 534, 564, 569, 570,
	654, 565, 566, 567, 568, 655, 572, 573, 0, 574,
	575, 0, 571, 562, 0, 576, 577, 578, 579, 580,
	581, 582, 354, 583, 0, 584, 656, 657, 658, 659,
	0, 593, 0, 585, 586, 587, 660, 588, 661, 0,
	589, 590, 591, 592, 0, 594, 595, 0, 0, 596,
	597, 598, 600, 601, 599, 602, 0, 603, 0, 0,
	604, 605, 606, 662, 663, 664, 264, 608, 607, 609,
	665, 0, 0, 0, 0, 0, 610, 611, 666, 612,
	613, 614, 0, 270, 272, 271, 273, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 615,
	0, 0, 0, 0, 280, 281, 0, 282, 283, 284,
	285, 286, 287, 616, 617, 0, 288, 618, 289, 619,
	0, 620, 290, 291, 292, 293, 294, 295, 0, 0,
	0, 296, 621, 622, 623, 0, 297, 298, 624, 0,
	0, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 0,
	321, 322, 323, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 326, 327, 328, 0, 329, 625, 626, 0,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 340, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 627, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 628, 629, 360,
	0, 0, 0, 0, 0, 0, 0, 361, 362, 363,
	630, 0, 0, 0, 364, 0, 365, 0, 0, 0,
	366, 367, 631, 632, 368, 369, 370, 371, 372, 373,
	374, 375, 376, 0, 377, 633, 0, 634, 378, 0,
	379, 380, 381, 382, 383, 2902, 636, 637, 460, 0,
	384, 385, 0, 386, 387, 388, 389, 0, 0, 0,
	0, 390, 391, 392, 394, 0, 0, 393, 638, 639,
	0, 640, 0, 395, 396, 0, 641, 0, 397, 398,
	399, 0, 400, 0, 0, 0, 401, 402, 403, 404,
	405, 406, 0, 407, 409, 408, 0, 410, 642, 0,
	411, 412, 0, 0, 413, 0, 0, 0, 414, 415,
	418, 0, 0, 416, 417, 419, 420, 0, 421, 422,
	424, 427, 423, 425, 426, 428, 441, 429, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 443,
	0, 442, 0, 444, 445, 446, 451, 453, 454, 449,
	450, 452, 455, 456, 448, 0, 447, 0, 0, 0,
	457, 458, 0, 643, 459, 644, 461, 462, 0, 0,
	463, 0, 0, 0, 465, 466, 467, 0, 0, 468,
	469, 645, 0, 470, 0, 646, 471, 472, 464, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 0, 482,
	483, 647, 484, 485, 486, 648, 487, 488, 489, 649,
	490, 650, 491, 492, 0, 493, 494, 0, 495, 496,
	497, 498, 499, 500, 501, 651, 502, 504, 503, 505,
	0, 506, 0, 507, 508, 509, 0, 0, 0, 0,
	510, 0, 512, 513, 514, 515, 511, 516, 517, 518,
	519, 0, 520, 521, 522, 0, 523, 524, 525, 526,
	652, 527, 0, 528, 529, 535, 536, 530, 531, 537,
	538, 539, 540, 541, 0, 543, 544, 542, 545, 546,
	547, 0, 548, 549, 532, 533, 550, 551, 0, 552,
	553, 554, 555, 556, 557, 653, 0, 558, 0, 559,
	560, 561, 563, 534, 564, 569, 570, 654, 565, 566,
	567, 568, 655, 572, 573, 0, 574, 575, 0, 571,
	562, 0, 576, 577, 578, 579, 580, 581, 582, 354,
	583, 0, 584, 656, 657, 658, 659, 0, 593, 0,
	585, 586, 587, 660, 588, 661, 0, 589, 590, 591,
	592, 0, 594, 595, 0, 0, 596, 597, 598, 600,
	601, 599, 602, 0, 603, 0, 0, 604, 605, 606,
	662, 663, 664, 264, 608, 607, 609, 665, 0, 0,
	0, 0, 0, 610, 611, 666, 612, 613, 614, 0,
	270, 272, 271, 273, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 615, 0, 0, 0,
	0, 280, 281, 0, 282, 283, 284, 285, 286, 287,
	616, 617, 0, 288, 618, 289, 619, 0, 620, 290,
	291, 292, 293, 294, 295, 0, 0, 0, 296, 621,
	622, 623, 0, 297, 298, 624, 0, 0, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 0, 321, 322, 323,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	327, 328, 0, 329, 625, 626, 0, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 340, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 627, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 628, 629, 360, 0, 0, 0,
	0, 0, 0, 0, 361, 362, 363, 630, 0, 0,
	0, 364, 0, 365, 0, 0, 0, 366, 367, 631,
	632, 368, 369, 370, 371, 372, 373, 374, 375, 376,
	0, 377, 633, 0, 634, 378, 0, 379, 380, 381,
	382, 383, 635, 636, 637, 460, 0, 384, 385, 0,
	386, 387, 388, 389, 0, 0, 0, 0, 390, 391,
	392, 394, 0, 0, 393, 638, 639, 0, 640, 0,
	395, 396, 0, 641, 0, 397, 398, 399, 0, 400,
	0, 0, 0, 401, 402, 403, 404, 405, 406, 0,
	407, 409, 408, 0, 410, 642, 0, 411, 412, 0,
	0, 413, 0, 0, 0, 414, 415, 418, 0, 0,
	416, 417, 419, 420, 0, 421, 422, 424, 427, 423,
	425, 426, 428, 441, 429, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 443, 0, 442, 0,
	444, 445, 446, 451, 453, 454, 449, 450, 452, 455,
	456, 448, 0, 447, 0, 0, 0, 457, 458, 0,
	643, 459, 644, 461, 462, 0, 0, 463, 0, 0,
	0, 465, 466, 467, 0, 0, 468, 469, 645, 0,
	470, 0, 646, 471, 472, 464, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 0, 482, 483, 647, 484,
	485, 486, 648, 487, 488, 489, 649, 490, 650, 491,
	492, 0, 493, 494, 0, 495, 496, 497, 498, 499,
	500, 501, 651, 502, 504, 503, 505, 0, 506, 0,
	507, 508, 509, 0, 0, 0, 0, 510, 0, 512,
	513, 514, 515, 511, 516, 517, 518, 519, 0, 520,
	521, 522, 0, 523, 524, 525, 526, 652, 527, 0,
	528, 529, 738, 536, 530, 531, 537, 538, 539, 540,
	541, 0, 543, 544, 542, 545, 546, 547, 0, 548,
	549, 532, 533, 550, 551, 0, 552, 553, 554, 555,
	556, 557, 653, 0, 558, 0, 559, 560, 561, 563,
	534, 564, 569, 570, 654, 565, 566, 567, 568, 655,
	572, 573, 0, 574, 575, 0, 571, 562, 0, 576,
	577, 578, 579, 580, 581, 582, 354, 583, 0, 584,
	656, 657, 658, 659, 0, 593, 0, 585, 586, 587,
	660, 588, 661, 0, 589, 590, 591, 592, 0, 594,
	595, 0, 0, 596, 597, 598, 600, 601, 599, 602,
	0, 603, 0, 0, 604, 605, 606, 662, 663, 664,
	264, 608, 607, 609, 665, 0, 0, 0, 0, 0,
	610, 611, 666, 612, 613, 614, 0, 270, 272, 271,
	273, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 615, 0, 2222, 0, 0, 280, 281,
	0, 282, 283, 284, 285, 286, 287, 616, 617, 0,
	288, 618, 289, 619, 0, 620, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 621, 622, 623, 0,
	297, 298, 624, 0, 0, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 323, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 326, 327, 328, 0,
	329, 625, 626, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	627, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 628, 629, 360, 0, 0, 0, 0, 0, 0,
	0, 361, 362, 363, 630, 0, 0, 0, 364, 0,
	365, 0, 0, 0, 366, 367, 631, 632, 368, 369,
	370, 371, 372, 373, 374, 375, 376, 0, 377, 633,
	0, 634, 378, 0, 379, 380, 381, 382, 383, 635,
	636, 637, 460, 0, 384, 385, 0, 386, 387, 388,
	389, 0, 0, 0, 0, 390, 391, 392, 394, 0,
	0, 393, 638, 639, 0, 640, 0, 395, 396, 0,
	641, 0, 397, 398, 399, 0, 400, 0, 0, 0,
	401, 402, 403, 404, 405, 406, 0, 407, 409, 408,
	0, 410, 642, 0, 411, 412, 0, 0, 413, 0,
	0, 0, 414, 415, 418, 0, 0, 416, 417, 419,
	420, 0, 421, 422, 424, 427, 423, 425, 426, 428,
	441, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 443, 0, 442, 0, 444, 445, 446,
	451, 453, 454, 449, 450, 452, 455, 456, 448, 0,
	447, 0, 0, 0, 457, 458, 0, 643, 459, 644,
	461, 462, 0, 0, 463, 0, 0, 0, 465, 466,
	467, 0, 0, 468, 469, 645, 0, 470, 0, 646,
	471, 472, 464, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 0, 482, 483, 647, 484, 485, 486, 648,
	487, 488, 489, 649, 490, 650, 491, 492, 0, 493,
	494, 0, 495, 496, 497, 498, 499, 500, 501, 651,
	502, 504, 503, 505, 0, 506, 0, 507, 508, 509,
	0, 0, 0, 0, 510, 0, 512, 513, 514, 515,
	511, 516, 517, 518, 519, 0, 520, 521, 522, 0,
	523, 524, 525, 526, 652, 527, 0, 528, 529, 535,
	536, 530, 531, 537, 538, 539, 540, 541, 0, 543,
	544, 542, 545, 546, 547, 0, 0, 549, 532, 533,
	550, 551, 0, 552, 553, 554, 555, 556, 557, 653,
	0, 558, 0, 559, 560, 561, 563, 534, 564, 569,
	570, 654, 565, 566, 567, 568, 655, 572, 573, 0,
	574, 575, 0, 571, 562, 0, 576, 577, 578, 579,
	580, 581, 582, 354, 583, 0, 584, 656, 657, 658,
	659, 0, 593, 0, 585, 586, 587, 660, 588, 661,
	0, 589, 590, 591, 592, 0, 594, 595, 0, 0,
	596, 597, 598, 600, 601, 599, 602, 0, 603, 0,
	0, 604, 605, 606, 662, 663, 664, 264, 608, 607,
	609, 665, 0, 0, 0, 0, 0, 610, 611, 666,
	612, 613, 614, 0, 270, 272, 271, 273, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	615, 0, 0, 0, 0, 280, 281, 0, 282, 283,
	284, 285, 286, 287, 616, 617, 0, 288, 618, 289,
	619, 0, 620, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 621, 622, 623, 0, 297, 298, 624,
	0, 0, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 323, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 327, 328, 0, 329, 625, 626,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 627, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 628, 629,
	360, 0, 0, 0, 0, 0, 0, 0, 361, 362,
	363, 630, 0, 0, 0, 364, 0, 365, 0, 0,
	0, 366, 367, 631, 632, 368, 369, 370, 371, 372,
	373, 374, 375, 376, 0, 377, 633, 0, 634, 378,
	0, 379, 380, 381, 382, 383, 1245, 636, 637, 460,
	0, 384, 385, 0, 386, 387, 388, 389, 0, 0,
	0, 0, 390, 391, 392, 394, 0, 0, 393, 638,
	639, 0, 640, 0, 395, 396, 0, 641, 0, 397,
	398, 399, 0, 400, 0, 0, 0, 401, 402, 403,
	404, 405, 406, 0, 407, 409, 408, 0, 410, 642,
	0, 411, 412, 0, 0, 413, 0, 0, 0, 414,
	415, 418, 0, 0, 416, 417, 419, 420, 0, 421,
	422, 424, 427, 423, 425, 426, 428, 441, 429, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	443, 0, 442, 0, 444, 445, 446, 451, 453, 454,
	449, 450, 452, 455, 456, 448, 0, 447, 0, 0,
	0, 457, 458, 0, 643, 459, 644, 461, 462, 0,
	0, 463, 0, 0, 0, 465, 466, 467, 0, 0,
	468, 469, 645, 0, 470, 0, 646, 471, 472, 464,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 0,
	482, 483, 647, 484, 485, 486, 648, 487, 488, 489,
	649, 490, 650, 491, 492, 0, 493, 494, 0, 495,
	496, 497, 498, 499, 500, 501, 651, 502, 504, 503,
	505, 0, 506, 0, 507, 508, 509, 0, 0, 0,
	0, 510, 0, 512, 513, 514, 515, 511, 516, 517,
	518, 519, 0, 520, 521, 522, 0, 523, 524, 525,
	526, 652, 527, 0, 528, 529, 535, 536, 530, 531,
	537, 538, 539, 540, 541, 0, 543, 544, 542, 545,
	546, 547, 0, 548, 549, 532, 533, 550, 551, 0,
	552, 553, 554, 555, 556, 557, 653, 0, 558, 0,
	559, 560, 561, 563, 534, 564, 569, 570, 654, 565,
	566, 567, 568, 655, 572, 573, 0, 574, 575, 0,
	571, 562, 0, 576, 577, 578, 579, 580, 581, 582,
	354, 583, 0, 584, 656, 657, 658, 659, 0, 593,
	0, 585, 586, 587, 660, 588, 661, 0, 589, 590,
	591, 592, 0, 594, 595, 0, 0, 596, 597, 598,
	600, 601, 599, 602, 0, 603, 0, 0, 604, 605,
	606, 662, 663, 664, 264, 608, 607, 609, 665, 0,
	0, 0, 0, 0, 610, 611, 666, 612, 613, 614,
	0, 270, 272, 271, 273, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 615, 0, 0,
	0, 0, 280, 281, 0, 282, 283, 284, 285, 286,
	287, 616, 617, 0, 288, 618, 289, 619, 0, 620,
	290, 291, 292, 293, 294, 295, 0, 0, 0, 296,
	621, 622, 623, 0, 297, 298, 624, 0, 0, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 0, 321, 322,
	323, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	326, 327, 328, 0, 329, 625, 626, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 340, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 627, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 628, 629, 360, 0, 0,
	0, 0, 0, 0, 0, 361, 362, 363, 630, 0,
	0, 0, 364, 0, 365, 0, 0, 0, 366, 367,
	631, 632, 368, 369, 370, 371, 372, 373, 374, 375,
	376, 0, 377, 633, 0, 634, 378, 0, 379, 380,
	381, 382, 383, 635, 636, 637, 460, 0, 384, 385,
	0, 386, 387, 388, 389, 0, 0, 0, 0, 390,
	391, 392, 394, 0, 0, 393, 638, 639, 0, 640,
	0, 395, 396, 0, 641, 0, 397, 398, 399, 0,
	400, 0, 0, 0, 401, 402, 403, 404, 405, 406,
	0, 407, 409, 408, 0, 410, 642, 0, 411, 412,
	0, 0, 413, 0, 0, 0, 414, 415, 418, 0,
	0, 416, 417, 419, 420, 0, 421, 422, 424, 427,
	423, 425, 426, 428, 441, 429, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 443, 0, 442,
	0, 444, 445, 446, 451, 453, 454, 449, 450, 452,
	455, 456, 448, 0, 447, 0, 0, 0, 457, 458,
	0, 643, 459, 644, 461, 462, 0, 0, 463, 0,
	0, 0, 465, 466, 467, 0, 0, 468, 469, 645,
	0, 470, 0, 646, 471, 472, 464, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 0, 482, 483, 647,
	484, 485, 486, 648, 487, 488, 489, 649, 490, 650,
	491, 492, 0, 493, 494, 0, 495, 496, 497, 498,
	499, 500, 501, 651, 502, 1178, 503, 505, 0, 506,
	0, 507, 508, 509, 0, 0, 0, 0, 510, 0,
	512, 513, 514, 515, 511, 516, 517, 518, 519, 0,
	520, 521, 522, 0, 523, 524, 525, 526, 652, 527,
	0, 528, 529, 535, 536, 530, 531, 537, 538, 539,
	540, 541, 0, 543, 544, 542, 545, 546, 547, 0,
	548, 549, 532, 533, 550, 551, 0, 552, 553, 554,
	555, 556, 557, 653, 0, 558, 0, 559, 560, 561,
	563, 534, 564, 569, 570, 654, 565, 566, 567, 568,
	655, 572, 573, 0, 574, 575, 0, 571, 562, 0,
	576, 577, 578, 579, 580, 581, 582, 354, 583, 0,
	584, 656, 657, 658, 659, 0, 593, 0, 585, 586,
	587, 660, 588, 661, 0, 589, 590, 591, 592, 0,
	594, 595, 0, 0, 596, 597, 598, 600, 601, 599,
	602, 0, 603, 0, 0, 604, 605, 606, 662, 663,
	664, 264, 608, 607, 609, 665, 0, 0, 0, 0,
	0, 610, 611, 666, 612, 613, 614, 0, 270, 272,
	271, 273, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 615, 0, 0, 0, 0, 280,
	281, 0, 282, 283, 284, 285, 286, 287, 616, 617,
	0, 288, 618, 289, 619, 0, 620, 290, 291, 292,
	293, 294, 295, 0, 0, 0, 296, 621, 622, 623,
	0, 297, 298, 624, 0, 0, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 0, 321, 322, 323, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 327, 328,
	0, 329, 625, 626, 0, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 340,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 627, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 628, 629, 360, 0, 0, 0, 0, 0,
	0, 0, 361, 362, 363, 630, 0, 0, 0, 364,
	0, 365, 0, 0, 0, 366, 367, 631, 632, 368,
	369, 370, 371, 372, 373, 374, 375, 376, 0, 377,
	633, 0, 634, 0, 0, 379, 380, 381, 382, 383,
	635, 636, 637, 460, 0, 384, 385, 0, 386, 387,
	388, 389, 0, 0, 0, 0, 390, 391, 392, 394,
	0, 0, 393, 638, 639, 0, 640, 0, 395, 396,
	0, 641, 0, 397, 398, 399, 0, 400, 0, 0,
	0, 401, 402, 403, 404, 405, 406, 0, 407, 409,
	408, 0, 410, 642, 0, 411, 412, 0, 0, 413,
	0, 0, 0, 414, 415, 418, 0, 0, 416, 417,
	419, 420, 0, 421, 422, 424, 427, 423, 425, 426,
	428, 441, 429, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 443, 0, 442, 0, 444, 445,
	446, 451, 453, 454, 449, 450, 452, 455, 456, 448,
	0, 447, 0, 0, 0, 457, 458, 0, 643, 459,
	644, 461, 462, 0, 0, 463, 0, 0, 0, 465,
	466, 467, 0, 0, 468, 469, 645, 0, 470, 0,
	646, 471, 472, 464, 473, 474, 0, 476, 477, 478,
	479, 480, 481, 0, 482, 483, 647, 484, 485, 486,
	648, 487, 488, 489, 649, 490, 650, 491, 492, 0,
	493, 494, 0, 495, 496, 497, 498, 0, 500, 501,
	651, 502, 504, 503, 505, 0, 506, 0, 507, 508,
	509, 0, 0, 0, 0, 510, 0, 512, 513, 514,
	515, 511, 516, 517, 518, 519, 0, 520, 521, 522,
	0, 523, 524, 525, 526, 652, 0, 0, 528, 529,
	535, 536, 530, 531, 537, 538, 539, 540, 541, 0,
	543, 544, 542, 545, 546, 547, 0, 548, 549, 532,
	533, 550, 551, 0, 552, 553, 554, 555, 556, 557,
	653, 0, 558, 0, 559, 560, 561, 563, 534, 564,
	569, 570, 654, 565, 566, 567, 568, 655, 572, 573,
	0, 574, 575, 0, 571, 562, 0, 576, 577, 578,
	579, 580, 581, 582, 354, 583, 0, 584, 656, 657,
	658, 659, 0, 593, 0, 585, 586, 587, 660, 588,
	661, 0, 589, 590, 591, 592, 0, 594, 595, 0,
	0, 596, 597, 598, 600, 601, 599, 602, 0, 603,
	0, 0, 604, 605, 606, 662, 663, 664, 0, 608,
	607, 609, 665, 0, 0, 0, 0, 0, 610, 611,
	666, 612, 613, 614, 1737, 1738, 0, 1770, 1771, 1772,
	1780, 1781, 1782, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1773, 1768, 0,
	0, 0, 0, 1737, 1738, 1740, 1770, 1771, 1772, 1780,
	1781, 1782, 0, 0, 1786, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1773, 1768, 0, 0,
	0, 0, 0, 0, 1740, 0, 0, 0, 0, 0,
	1739, 1737, 1738, 1786, 1770, 1771, 1772, 1780, 1781, 1782,
	1759, 0, 0, 0, 0, 0, 0, 0, 0, 1756,
	0, 0, 0, 0, 1773, 1768, 0, 0, 0, 1739,
	0, 0, 1740, 0, 0, 0, 0, 0, 0, 1759,
	0, 1786, 0, 0, 0, 0, 0, 0, 1756, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1739, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1759, 0, 0,
	0, 0, 0, 0, 0, 0, 1756, 0, 0, 0,
	0, 0, 0, 0, 1762, 1763, 1764, 1765, 0, 0,
	0, 0, 0, 0, 1745, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1762, 1763, 1764, 1765, 0, 0, 0,
	0, 0, 0, 1745, 0, 0, 0, 0, 0, 0,
	1777, 0, 0, 1787, 0, 0, 0, 0, 0, 1767,
	1769, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1762, 1763, 1764, 1765, 0, 1783, 0, 1784, 1777,
	0, 1745, 1787, 0, 0, 1754, 1755, 0, 1767, 1769,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1775, 0, 1783, 0, 1784, 0, 0,
	0, 0, 0, 0, 1754, 1755, 0, 1777, 1760, 0,
	1787, 0, 0, 0, 0, 0, 1767, 1769, 0, 0,
	0, 0, 1775, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1783, 0, 1784, 0, 1760, 0, 0,
	0, 0, 1754, 1755, 0, 0, 0, 0, 0, 0,
	1785, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1775, 0, 0, 0, 0, 0, 0, 0, 1774, 0,
	0, 0, 0, 0, 0, 1760, 0, 0, 0, 1785,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1774, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1785, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1766, 0, 0, 1774, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1761, 0, 0, 0, 0, 0, 0,
	0, 1766, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1778,
	0, 0, 1761, 0, 0, 0, 0, 0, 1737, 1738,
	0, 1770, 1771, 1772, 1780, 1781, 1782, 0, 0, 1766,
	0, 0, 0, 0, 0, 0, 0, 0, 1778, 0,
	0, 1773, 1768, 0, 0, 0, 0, 0, 0, 1740,
	1761, 0, 0, 0, 0, 0, 0, 0, 1786, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1778, 0, 0, 0,
	0, 0, 0, 0, 1739, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1759, 0, 0, 0, 0, 0,
	0, 0, 0, 1756, 0, 0, 0, 0, 0, 0,
	1776, 0, 0, 0, 0, 1751, 1752, 1758, 1779, 1757,
	1753, 0, 1750, 1748, 1749, 1741, 1742, 1743, 1744, 1746,
	1747, 0, 0, 0, 0, 4318, 0, 0, 0, 1776,
	0, 0, 0, 0, 1751, 1752, 1758, 1779, 1757, 1753,
	0, 1750, 1748, 1749, 1741, 1742, 1743, 1744, 1746, 1747,
	0, 0, 0, 0, 4317, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1776, 1762, 1763,
	1764, 1765, 1751, 1752, 1758, 1779, 1757, 1753, 1745, 1750,
	1748, 1749, 1741, 1742, 1743, 1744, 1746, 1747, 0, 0,
	0, 0, 4141, 0, 0, 0, 1737, 1738, 0, 1770,
	1771, 1772, 1780, 1781, 1782, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1777, 0, 0, 1787, 0, 1773,
	1768, 0, 0, 1767, 1769, 0, 0, 1740, 0, 0,
	0, 0, 0, 0, 0, 0, 1786, 0, 0, 0,
	1783, 0, 1784, 0, 0, 0, 0, 0, 0, 1754,
	1755, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1739, 0, 0, 0, 0, 1775, 0, 0,
	0, 0, 1759, 0, 0, 0, 0, 0, 0, 0,
	0, 1756, 1760, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1785, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1774, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1762, 1763, 1764, 1765,
	0, 0, 0, 0, 0, 0, 1745, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1737, 1738, 0, 1770,
	1771, 1772, 1780, 1781, 1782, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1773,
	1768, 0, 1777, 0, 0, 1787, 1766, 1740, 0, 0,
	0, 1767, 1769, 0, 0, 0, 1786, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1761, 1783, 0,
	1784, 0, 0, 0, 0, 0, 0, 1754, 1755, 0,
	0, 0, 1739, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1759, 1778, 0, 1775, 0, 0, 0, 1737,
	1738, 1756, 1770, 1771, 1772, 1780, 1781, 1782, 0, 0,
	1760, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1773, 1768, 0, 0, 0, 0, 0, 0,
	1740, 0, 0, 0, 0, 0, 0, 0, 0, 1786,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1785, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1739, 0, 0, 0, 0,
	1774, 0, 0, 0, 0, 1759, 1762, 1763, 1764, 1765,
	0, 0, 0, 0, 1756, 0, 1745, 0, 0, 0,
	0, 0, 0, 0, 1776, 0, 0, 0, 0, 1751,
	1752, 1758, 1779, 1757, 1753, 0, 1750, 1748, 1749, 1741,
	1742, 1743, 1744, 1746, 1747, 0, 0, 0, 0, 3986,
	0, 0, 1777, 0, 0, 1787, 0, 0, 0, 0,
	0, 1767, 1769, 0, 1766, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1783, 0,
	1784, 0, 0, 0, 0, 1761, 0, 1754, 1755, 1762,
	1763, 1764, 1765, 0, 0, 0, 0, 0, 0, 1745,
	0, 0, 0, 0, 0, 1775, 0, 0, 0, 1737,
	1738, 1778, 1770, 1771, 1772, 1780, 1781, 1782, 0, 0,
	1760, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1773, 1768, 0, 1777, 0, 0, 1787, 0,
	1740, 0, 0, 0, 1767, 1769, 0, 0, 0, 1786,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1783, 1785, 1784, 0, 0, 0, 0, 0, 0,
	1754, 1755, 0, 0, 0, 1739, 0, 0, 0, 0,
	1774, 0, 0, 0, 0, 1759, 0, 0, 1775, 0,
	0, 0, 0, 0, 1756, 0, 0, 0, 0, 0,
	0, 0, 0, 1760, 0, 0, 0, 0, 0, 0,
	0, 0, 1776, 0, 0, 0, 0, 1751, 1752, 1758,
	1779, 1757, 1753, 0, 1750, 1748, 1749, 1741, 1742, 1743,
	1744, 1746, 1747, 0, 0, 0, 0, 3913, 0, 0,
	0, 0, 0, 0, 1766, 1785, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1774, 0, 1761, 0, 0, 0, 1762,
	1763, 1764, 1765, 0, 0, 0, 0, 0, 0, 1745,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1778, 0, 0, 0, 0, 0, 1737, 1738, 0,
	1770, 1771, 1772, 1780, 1781, 1782, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1777, 0, 0, 1787, 0,
	1773, 1768, 0, 0, 1767, 1769, 0, 1766, 1740, 0,
	0, 0, 0, 0, 0, 0, 0, 1786, 0, 0,
	0, 1783, 0, 1784, 0, 0, 0, 0, 1761, 0,
	1754, 1755, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1739, 0, 0, 0, 0, 1775, 0,
	0, 0, 0, 1759, 1778, 0, 0, 0, 0, 0,
	0, 0, 1756, 1760, 0, 0, 0, 0, 0, 0,
	0, 0, 1776, 0, 0, 0, 0, 1751, 1752, 1758,
	1779, 1757, 1753, 0, 1750, 1748, 1749, 1741, 1742, 1743,
	1744, 1746, 1747, 0, 0, 0, 0, 3912, 0, 0,
	0, 0, 0, 0, 0, 1785, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1774, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1762, 1763, 1764,
	1765, 0, 0, 0, 0, 0, 0, 1745, 0, 0,
	0, 0, 0, 0, 0, 1776, 0, 0, 0, 0,
	1751, 1752, 1758, 1779, 1757, 1753, 0, 1750, 1748, 1749,
	1741, 1742, 1743, 1744, 1746, 1747, 0, 0, 0, 0,
	3911, 0, 0, 1777, 0, 0, 1787, 1766, 0, 0,
	0, 0, 1767, 1769, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1761, 1783,
	0, 1784, 0, 0, 0, 0, 0, 0, 1754, 1755,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1778, 0, 1775, 1737, 1738, 0,
	1770, 1771, 1772, 1780, 1781, 1782, 0, 0, 0, 0,
	0, 1760, 0, 0, 0, 0, 0, 0, 0, 0,
	1773, 1768, 0, 0, 0, 0, 0, 0, 1740, 0,
	0, 0, 0, 0, 0, 0, 0, 1786, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1785, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1739, 0, 0, 0, 0, 0, 0,
	0, 1774, 0, 1759, 0, 0, 0, 0, 0, 0,
	0, 0, 1756, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1776, 0, 0, 0, 0,
	1751, 1752, 1758, 1779, 1757, 1753, 0, 1750, 1748, 1749,
	1741, 1742, 1743, 1744, 1746, 1747, 0, 0, 0, 0,
	3576, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1766, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1761, 1762, 1763, 1764,
	1765, 0, 0, 0, 0, 0, 0, 1745, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1778, 0, 0, 1737, 1738, 0, 1770, 1771,
	1772, 1780, 1781, 1782, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1777, 0, 0, 1787, 0, 1773, 1768,
	0, 0, 1767, 1769, 0, 0, 1740, 0, 0, 0,
	0, 0, 0, 0, 0, 1786, 0, 0, 0, 1783,
	0, 1784, 0, 0, 0, 0, 0, 0, 1754, 1755,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1739, 0, 0, 0, 0, 1775, 0, 0, 0,
	0, 1759, 0, 0, 0, 0, 0, 0, 0, 0,
	1756, 1760, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1776, 0, 0, 0, 0, 1751, 1752,
	1758, 1779, 1757, 1753, 0, 1750, 1748, 1749, 1741, 1742,
	1743, 1744, 1746, 1747, 0, 0, 0, 0, 3101, 0,
	0, 0, 0, 1785, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1774, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1762, 1763, 1764, 1765, 0,
	0, 0, 0, 0, 0, 1745, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1737, 1738, 0, 1770, 1771,
	1772, 1780, 1781, 1782, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1773, 1768,
	0, 1777, 0, 0, 1787, 1766, 1740, 0, 0, 0,
	1767, 1769, 0, 0, 0, 1786, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1761, 1783, 0, 1784,
	0, 0, 0, 0, 0, 0, 1754, 1755, 0, 0,
	0, 1739, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1759, 1778, 0, 1775, 0, 0, 0, 1737, 1738,
	1756, 1770, 1771, 1772, 1780, 1781, 1782, 0, 0, 1760,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1773, 1768, 0, 0, 0, 0, 0, 0, 1740,
	0, 0, 0, 0, 0, 0, 0, 0, 1786, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1785, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1739, 0, 0, 0, 0, 1774,
	0, 0, 0, 0, 1759, 1762, 1763, 1764, 1765, 0,
	0, 0, 0, 1756, 0, 1745, 0, 0, 0, 0,
	0, 0, 0, 1776, 0, 0, 0, 0, 1751, 1752,
	1758, 1779, 1757, 1753, 0, 1750, 1748, 1749, 1741, 1742,
	1743, 1744, 1746, 1747, 0, 0, 0, 0, 3100, 0,
	0, 1777, 0, 0, 1787, 0, 0, 0, 0, 0,
	1767, 1769, 0, 1766, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1783, 0, 1784,
	0, 0, 0, 0, 1761, 0, 1754, 1755, 1762, 1763,
	1764, 1765, 0, 0, 0, 0, 0, 0, 1745, 0,
	0, 0, 0, 0, 1775, 0, 0, 0, 1737, 1738,
	1778, 1770, 1771, 1772, 1780, 1781, 1782, 0, 0, 1760,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1773, 1768, 0, 1777, 0, 0, 1787, 0, 1740,
	0, 0, 0, 1767, 1769, 0, 0, 0, 1786, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1783, 1785, 1784, 0, 0, 0, 0, 0, 0, 1754,
	1755, 0, 0, 0, 1739, 0, 0, 0, 0, 1774,
	0, 0, 0, 0, 1759, 0, 0, 1775, 0, 0,
	0, 0, 0, 1756, 0, 0, 0, 0, 0, 0,
	0, 0, 1760, 0, 0, 0, 0, 0, 0, 0,
	0, 1776, 0, 0, 0, 0, 1751, 1752, 1758, 1779,
	1757, 1753, 0, 1750, 1748, 1749, 1741, 1742, 1743, 1744,
	1746, 1747, 0, 0, 0, 0, 3099, 0, 0, 0,
	0, 0, 0, 1766, 1785, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1774, 0, 1761, 0, 0, 0, 1762, 1763,
	1764, 1765, 0, 0, 0, 0, 0, 0, 1745, 4580,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1778, 0, 0, 0, 0, 0, 1737, 1738, 0, 1770,
	1771, 1772, 1780, 1781, 1782, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1777, 0, 0, 1787, 0, 1773,
	1768, 0, 0, 1767, 1769, 0, 1766, 1740, 0, 0,
	0, 0, 0, 0, 0, 0, 1786, 0, 0, 0,
	1783, 0, 1784, 0, 0, 0, 0, 1761, 0, 1754,
	1755, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1739, 0, 0, 0, 0, 1775, 0, 0,
	0, 0, 1759, 1778, 0, 0, 0, 0, 0, 0,
	0, 1756, 1760, 0, 0, 0, 0, 0, 0, 0,
	0, 1776, 0, 0, 0, 0, 1751, 1752, 1758, 1779,
	1757, 1753, 0, 1750, 1748, 1749, 1741, 1742, 1743, 1744,
	1746, 1747, 0, 0, 0, 0, 3098, 0, 0, 0,
	0, 0, 0, 0, 1785, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1774, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1762, 1763, 1764, 1765,
	0, 0, 0, 0, 0, 0, 1745, 0, 3161, 0,
	0, 3160, 0, 0, 1776, 4579, 0, 0, 0, 1751,
	1752, 1758, 1779, 1757, 1753, 0, 1750, 1748, 1749, 1741,
	1742, 1743, 1744, 1746, 1747, 0, 0, 3065, 0, 0,
	0, 0, 1777, 0, 0, 1787, 1766, 0, 0, 0,
	0, 1767, 1769, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1761, 1783, 0,
	1784, 0, 0, 0, 0, 0, 0, 1754, 1755, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1778, 0, 1775, 1737, 1738, 0, 1770,
	1771, 1772, 1780, 1781, 1782, 0, 0, 0, 0, 0,
	1760, 0, 0, 0, 0, 0, 0, 0, 0, 1773,
	1768, 0, 0, 0, 0, 3036, 0, 1740, 0, 0,
	0, 0, 0, 0, 0, 0, 1786, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1785, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1739, 0, 0, 0, 0, 0, 0, 0,
	1774, 0, 1759, 0, 0, 0, 0, 0, 0, 0,
	0, 1756, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1776, 0, 0, 0, 0, 1751,
	1752, 1758, 1779, 1757, 1753, 0, 1750, 1748, 1749, 1741,
	1742, 1743, 1744, 1746, 1747, 0, 0, 0, 0, 0,
	3037, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1766, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1761, 1762, 1763, 1764, 1765,
	0, 0, 0, 0, 0, 0, 1745, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2600,
	0, 1778, 0, 0, 0, 0, 1737, 1738, 0, 1770,
	1771, 1772, 1780, 1781, 1782, 0, 0, 0, 0, 0,
	0, 0, 1777, 0, 0, 1787, 0, 0, 0, 1773,
	1768, 1767, 1769, 0, 2599, 0, 0, 1740, 0, 0,
	0, 0, 0, 0, 0, 0, 1786, 0, 1783, 0,
	1784, 0, 0, 0, 0, 0, 0, 1754, 1755, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1739, 0, 0, 1775, 0, 0, 0, 0,
	0, 0, 1759, 0, 0, 0, 0, 0, 0, 0,
	1760, 1756, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1776, 0, 0, 0, 0, 1751, 1752, 1758,
	1779, 1757, 1753, 0, 1750, 1748, 1749, 1741, 1742, 1743,
	1744, 1746, 1747, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1785, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1774, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1762, 1763, 1764, 1765,
	0, 0, 0, 0, 0, 0, 1745, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1737, 1738, 0, 1770,
	1771, 1772, 1780, 1781, 1782, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1773,
	1768, 0, 1777, 0, 1766, 1787, 0, 1740, 0, 0,
	0, 1767, 1769, 0, 0, 0, 1786, 0, 0, 0,
	0, 0, 0, 0, 0, 1761, 0, 0, 1783, 0,
	1784, 0, 0, 0, 0, 0, 0, 1754, 1755, 0,
	0, 0, 1739, 0, 0, 0, 0, 0, 0, 0,
	0, 1778, 1759, 0, 0, 1775, 0, 0, 0, 1737,
	1738, 1756, 1770, 1771, 1772, 1780, 1781, 1782, 0, 0,
	1760, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1773, 1768, 0, 0, 0, 0, 0, 0,
	1740, 0, 0, 0, 0, 0, 0, 0, 0, 1786,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1785, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1739, 0, 0, 0, 0,
	1774, 0, 0, 0, 0, 1759, 1762, 1763, 1764, 1765,
	0, 0, 0, 0, 1756, 0, 1745, 0, 0, 0,
	0, 0, 1776, 0, 0, 0, 0, 1751, 1752, 1758,
	1779, 1757, 1753, 0, 1750, 1748, 1749, 1741, 1742, 1743,
	1744, 1746, 1747, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1777, 0, 0, 1787, 0, 0, 0, 0,
	0, 1767, 1769, 0, 1766, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1783, 0,
	1784, 0, 0, 0, 0, 1761, 0, 1754, 1755, 1762,
	1763, 1764, 1765, 0, 0, 0, 0, 0, 0, 1745,
	0, 0, 0, 0, 0, 1775, 0, 0, 0, 1737,
	1738, 1778, 1770, 1771, 1772, 1780, 1781, 1782, 0, 0,
	1760, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1773, 1768, 0, 1777, 0, 0, 1787, 0,
	1740, 0, 0, 0, 1767, 1769, 0, 0, 0, 1786,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1783, 1785, 1784, 0, 0, 0, 0, 0, 0,
	1754, 1755, 0, 0, 0, 1739, 0, 0, 0, 0,
	1774, 1034, 0, 0, 0, 1759, 0, 0, 1775, 0,
	0, 0, 0, 0, 1756, 0, 0, 0, 0, 0,
	0, 0, 0, 1760, 0, 0, 0, 0, 0, 0,
	0, 0, 1776, 0, 0, 0, 0, 1751, 1752, 1758,
	1779, 1757, 1753, 0, 1750, 1748, 1749, 1741, 1742, 1743,
	1744, 1746, 1747, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1766, 1785, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1774, 0, 1761, 0, 0, 0, 1762,
	1763, 1764, 1765, 0, 0, 0, 0, 0, 0, 1745,
	0, 0, 0, 0, 3167, 0, 0, 0, 0, 0,
	0, 1778, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1737, 1738, 0, 1770,
	1771, 1772, 1780, 1781, 1782, 1777, 0, 0, 1787, 0,
	0, 0, 0, 0, 1767, 1769, 0, 1766, 0, 1773,
	1768, 0, 0, 0, 3162, 0, 0, 1740, 0, 0,
	0, 1783, 0, 1784, 0, 0, 1786, 0, 1761, 0,
	1754, 1755, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1775, 0,
	0, 0, 1739, 0, 1778, 0, 0, 0, 0, 0,
	0, 0, 1759, 1760, 0, 0, 0, 0, 0, 0,
	0, 1756, 1776, 0, 0, 0, 0, 1751, 1752, 1758,
	1779, 1757, 1753, 0, 1750, 1748, 1749, 1741, 1742, 1743,
	1744, 1746, 1747, 0, 0, 0, 0, 3557, 0, 0,
	0, 0, 0, 0, 0, 1785, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1774, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1762, 1763, 1764, 1765,
	0, 0, 0, 0, 0, 1776, 1745, 0, 0, 0,
	1751, 1752, 1758, 1779, 1757, 1753, 0, 1750, 1748, 1749,
	1741, 1742, 1743, 1744, 1746, 1747, 1737, 1738, 0, 1770,
	1771, 1772, 1780, 1781, 1782, 0, 0, 1766, 0, 0,
	0, 0, 1777, 0, 0, 1787, 0, 0, 0, 1773,
	1768, 1767, 1769, 0, 0, 0, 0, 1740, 1761, 0,
	0, 0, 0, 0, 0, 0, 1786, 0, 1783, 0,
	1784, 0, 0, 0, 0, 0, 0, 1754, 1755, 0,
	0, 0, 0, 0, 1778, 0, 0, 0, 0, 0,
	0, 0, 1739, 0, 0, 1775, 0, 0, 0, 0,
	0, 0, 1759, 0, 0, 0, 0, 0, 0, 0,
	1760, 1756, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1785, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1774, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1776, 1762, 1763, 1764, 1765,
	1751, 1752, 1758, 1779, 1757, 1753, 1745, 1750, 1748, 1749,
	1741, 1742, 1743, 1744, 1746, 1747, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1737, 1738, 0, 1770,
	1771, 1772, 1780, 1781, 1782, 0, 0, 0, 0, 0,
	0, 0, 1777, 0, 1766, 1787, 0, 0, 0, 1773,
	1768, 1767, 1769, 0, 3102, 0, 0, 1740, 0, 0,
	0, 0, 0, 0, 0, 1761, 1786, 0, 1783, 0,
	1784, 0, 0, 0, 0, 0, 0, 1754, 1755, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1778, 1739, 0, 0, 1775, 0, 0, 0, 0,
	0, 0, 1759, 0, 0, 0, 0, 0, 0, 0,
	1760, 1756, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1785, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1774, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1762, 1763, 1764, 1765,
	0, 3129, 1776, 0, 0, 0, 1745, 1751, 1752, 1758,
	1779, 1757, 1753, 0, 1750, 1748, 1749, 1741, 1742, 1743,
	1744, 1746, 1747, 0, 1737, 1738, 0, 1770, 1771, 1772,
	1780, 1781, 1782, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1777, 0, 1766, 1787, 0, 1773, 1768, 0,
	0, 1767, 1769, 0, 0, 1740, 0, 0, 0, 0,
	0, 0, 0, 0, 1786, 1761, 0, 0, 1783, 0,
	1784, 0, 0, 0, 0, 0, 0, 1754, 1755, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1739, 1778, 0, 0, 0, 1775, 0, 0, 0, 0,
	1759, 0, 0, 0, 0, 0, 0, 0, 0, 1756,
	1760, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1785, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1774, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1762, 1763, 1764, 1765, 0, 0,
	0, 0, 1776, 0, 1745, 0, 0, 1751, 1752, 1758,
	1779, 1757, 1753, 0, 1750, 1748, 1749, 1741, 1742, 1743,
	1744, 1746, 1747, 0, 1737, 1738, 0, 1770, 1771, 1772,
	1780, 1781, 1782, 0, 0, 0, 0, 0, 0, 0,
	1777, 0, 0, 1787, 1766, 0, 0, 0, 1768, 1767,
	1769, 0, 0, 0, 0, 1740, 0, 0, 0, 0,
	0, 0, 0, 0, 1786, 1761, 1783, 0, 1784, 0,
	0, 0, 0, 0, 0, 1754, 1755, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1739, 1778, 0, 1775, 0, 0, 0, 0, 0, 0,
	1759, 0, 0, 0, 0, 0, 0, 0, 1760, 1756,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1785, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1774, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1762, 1763, 1764, 1765, 0, 0,
	0, 0, 1776, 0, 1745, 0, 0, 1751, 1752, 1758,
	1779, 1757, 1753, 0, 1750, 1748, 1749, 1741, 1742, 1743,
	1744, 1746, 1747, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1777, 0, 1766, 1787, 0, 0, 0, 0, 0, 1767,
	1769, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1761, 0, 0, 1783, 0, 1784, 0,
	0, 0, 0, 0, 0, 1754, 1755, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1778,
	0, 0, 0, 1775, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1760, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1785, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1776, 0, 0, 0, 0, 1751, 1752, 1758, 1779, 1757,
	1753, 0, 1750, 1748, 1749, 1741, 1742, 1743, 1744, 1746,
	1747, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1766, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1761, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1778,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1776, 0, 0, 0, 0, 1751, 1752, 1758, 1779, 1757,
	1753, 0, 1750, 1748, 1749, 1741, 1742, 1743, 1744, 1746,
	1747,
}

var sqlPact = [...]int{
	7517, -1000, -1000, -1000, -1000, 175, -1000, -1000, 172, 171,
	170, 168, 165, 163, 160, 158, 155, 153, 151, -1000,
	-1000, -1000, -1000, -1000, -1000, 149, -1000, -1000, 148, -1000,
	142, 137, 135, -1000, -1000, 132, -1000, 130, -1000, -1000,
	-1000, -1000, 129, 128, 127, 88878, 88334, 89415, 2318, 111043,
	96961, 2221, 79658, 110499, 79114, 109955, 2135, 10041, 109411, 2743,
	125, -1000, 108867, 124, 123, 122, -1000, 108323, -1000, 2141,
	-1000, 120, -1000, 2200, 64398, 119, 118, 117, 2313, 116,
	-1000, 114, 109, -1000, -1000, 108, -1000, 9470, 1726, -1000,
	107, 106, -1000, 281, 94255, 105, 104, 2448, 103, 102,
	63853, 100, 99, 2365, 2955, -1000, -1000, 2106, -1000, -1000,
	98, 97, 96, 94, 89, 83, 82, 81, 80, 79,
	78, -1000, 77, 76, 75, 74, 73, -1000, 72, 71,
	70, -1000, 66, -1000, 63, 62, 59, 56, 54, 52,
	50, 48, 47, 44, 40, 38, 37, 36, 11409, -1000,
	1886, 1674, 1657, 1653, 1647, 1646, 995, 32, 31, 29,
	26, 25, 24, 23, 21, 20, 19, 16, 14, 13,
	12, 11, 9, 8, 136, 7, 6, 5, 4, 3,
	2, -1, 2130, -1000, 1570, 1092, 29984, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 116950, 111580, -2, -61, -5, -1000, 3345,
	979, 52918, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	263, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 500,
	1900, 756, -1000, -1000, -1000, 107786, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2317, -65, -1000, 2021, -1000, -1000,
	-1000, -1000, -1000, 755, -1000, 2316, 287, 2262, -1000, -1000,
	-1000, 3399, 2444, 3822, 3819, 3817, 3814, 3813, 116413, 1786,
	3812, 2557, 3810, 3809, 3808, 3807, 3806, 3805, 3803, -1000,
	87790, 1059, 87246, 86702, 3419, 107249, 86158, 106705, 73146, 45020,
	1075, 3397, -1000, -1000, -1000, -1000, -1000, -1000, 111580, -1000,
	1058, -1000, -1000, 3802, 3801, 2044, 751, 96417, -1000, 1666,
	-1000, 926, 31694, -1000, 1316, -1000, 31694, 259, -1000, -1000,
	-1000, -1000, -1000, -1000, 3800, 3797, 3796, 3795, 3794, -1000,
	-1000, 78570, 23092, 78026, 77482, 106161, 22537, 85614, 85070, 3791,
	105617, 72591, 1057, 1421, -1000, -1000, -1000, -1000, -1000, -1000,
	-31, 70371, 3593, 111580, -1000, 251, -1000, -1000, -1000, -1000,
	-1000, -1000, 44438, 692, 43856, 647, 43274, 545, -1000, -1000,
	-1000, -1000, 72036, -1000, 105073, 2442, 3789, 3783, 1135, 3782,
	3282, 1755, 3781, 1862, 1214, 3775, 3774, 3773, 3767, 3762,
	3756, 3753, 1430, 104529, 3020, 1520, 103985, 1688, 71481, 1055,
	84526, 89415, 2714, 103441, 1423, 1419, -1000, -1000, -1000, -1000,
	3092, 2953, 2933, 1331, -1000, -1000, -1000, -1000, 55636, 8075,
	6077, 10701, 102897, 58441, 89415, 89415, -1000, -1000, -1000, -1000,
	-1000, 42692, 597, 42110, 1039, -1000, -1000, 56197, 2943, -1000,
	-1000, -1000, -1000, 41528, 565, 40946, 980, 111580, -1000, 3018,
	1927, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2305, 1624, 3621,
	2778, 70926, 2026, 1401, 3348, 3086, 3081, 1538, 3067, 3752,
	2608, 3063, 3062, 3061, 3059, 3058, 1636, 2642, 286, 29402,
	2994, 1681, 40364, 1565, 1524, 3036, 3035, 3635, 2011, 1994,
	1976, 76938, 3750, 3743, 3305, 3026, 3023, 2815, 3016, -1000,
	2942, -1000, -1000, -1000, -1000, 1455, -1000, -1000, -1000, -1000,
	80195, -1000, -1000, 1769, -1000, -1000, 1769, -1000, -1000, -1000,
	-1000, -1000, 1326, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1570, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1891, -1000, 2041, -1000, -1000,
	2649, 3316, 3316, 3316, 3388, 453, 427, -1000, 136, -1000,
	-1000, 122043, -1000, -1000, 45590, 45590, 45590, 45590, 45590, 45590,
	45590, 2186, -1000, 750, -1000, -1000, 795, -1000, 749, 613,
	-1000, -1000, -1000, -1000, -1000, -1000, 738, -1000, -1000, -1000,
	-1000, -1000, -1000, 3593, -1000, 25922, -1000, -1000, -1000, 463,
	737, 45590, -1000, -1000, 3656, 3655, 1003, -1000, 245, 973,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 3009, 736, 732, -1000, 723, 722, 720, 719,
	715, -1000, -1000, -1000, 714, 711, 706, 705, 704, 702,
	701, 700, -1000, 2048, -1000, -1000, -1000, -1000, -1000, -1000,
	660, 657, 657, 657, -1000, 1044, -1000, -1000, -1000, 309,
	656, 240, 651, 650, 638, -1000, 699, 698, 694, 693,
	691, 690, 688, 687, 686, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1043, -1000, -1000, -1000, -1000, -32, 111580, -1000,
	500, -32, -1000, -1000, 682, -1000, 33986, 33986, 33986, -1000,
	-1000, 2312, 45590, -1000, 2932, -1000, -22, -22, 891, 54546,
	-1000, 51828, 891, 285, 802, 60069, -1000, 2941, -1000, -1000,
	681, 221, -1000, -1000, -1000, -1000, 23645, 2939, 111580, 111580,
	89415, 89415, 89415, 3741, 3212, 45590, -1000, -1000, 68186, 111580,
	90489, -1000, -1000, 3534, 64935, 67644, 111580, 3004, 67107, 3736,
	-1000, -1000, -1000, -1000, -1000, 3183, 3735, 3734, 3733, -1000,
	111580, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 216, 3182,
	-1000, -1000, 93711, 216, 3181, -1000, 216, 3179, -1000, 93174,
	-1000, -1000, 2222, 3178, -1000, -1000, 222, 3171, -1000, -1000,
	-1000, 220, 3170, -1000, -1000, 218, -66, 3167, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	122043, -1000, -1000, -1000, 66563, -1000, 3315, -1000, -1000, 111580,
	-1000, 45590, -1000, 3533, 1658, 74241, 3438, -45, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2527, 2481, 1138, 2333, -1000,
	3222, 1351, -1000, 31694, 3270, -1000, -1000, -1000, 214, 23645,
	-1000, -1000, -1000, -1000, -1000, -1000, 4892, 3166, 1361, -1000,
	2330, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2177,
	3165, -1000, 2001, 3140, 2161, -1000, -1000, 4533, -1000, 3302,
	-1000, -1000, 2076, 3139, -21, -1000, -1000, 2103, -1000, -1000,
	1931, -1000, 1001, 3132, -1000, 83982, 57880, 56197, 70371, -38,
	-1000, -1000, -1000, -1000, -156, -1000, 21982, 122043, -1000, -1000,
	-1000, -1000, 1777, 122043, 865, -1000, -1000, 3131, -1000, 122043,
	860, -1000, -1000, 3130, -1000, 3002, -1000, -1000, 2403, -1000,
	-1000, 3731, -1000, -1000, 3729, -1000, 3728, 3727, 3726, -1000,
	1685, 2012, 3724, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 83445, 2304, -1000, -1000, 82357, 3000, -1000, 2402, 3436,
	-1000, 82901, 1052, -1000, 1001, 2400, -1000, 92637, 989, 2399,
	-1000, 3723, 3400, 2740, 1001, 2394, -1000, -1000, -1000, -1000,
	-1000, 1016, -1000, 61691, -1000, 61691, -1000, 1585, -1000, 115876,
	-22, 89415, 3593, -1000, -64, -1000, -1000, -1000, 979, -1000,
	55091, -1000, 55091, 95873, 73699, 982, 697, 63308, 122043, -1000,
	-1000, -1000, -1000, 122043, -1000, -1000, -1000, -184, 2775, -1000,
	73699, 57319, 122043, -1000, -1000, -1000, -1000, 122043, -1000, -1000,
	-1000, 73699, 82357, -1000, 102353, 81820, -1000, -1000, 1418, 2613,
	-1000, -1000, -1000, 73699, 1301, 73699, 73699, 73699, -1000, 101809,
	-1000, -1000, 2058, 1526, 3308, 2037, 89415, -1000, 1921, -1000,
	-1000, -1000, 3333, 111580, -1000, -1000, 2997, -1000, 66018, 92100,
	-1000, 91563, -1000, 91026, -1000, 89415, -1000, 89415, -1000, 3721,
	3720, 3719, -1000, -1000, 3718, -1000, 3717, 3319, -1000, 122043,
	3318, -1000, 3716, 3428, 2994, 122043, -1000, 3158, 1680, 1677,
	111580, -1000, -1000, 111580, -1000, 111580, -1000, -1000, -1000, 1529,
	-1000, -1000, 2525, -1000, -1000, -1000, -1000, 89415, 1371, -1000,
	-1000, -1000, -1000, -1000, -1000, 3014, 3715, 1775, -1000, 1901,
	-1000, 2937, 3336, -1000, 1410, -1000, -1000, 234, -1000, -1000,
	-45, -1000, 115339, -1000, 2649, -1000, 111580, -1000, 2512, 2986,
	2993, 1704, 2324, 2602, -1000, 39782, 2566, 49010, 2329, 136,
	-1000, -1000, 136, 136, 31124, -1000, -1000, 64935, 64935, 23645,
	1353, 45590, 45590, 45590, 45590, 45590, 45590, 45590, 45590, 45590,
	45590, 45590, 45590, 45590, 45590, 45590, 45590, 45590, 45590, 45590,
	45590, 45590, 45590, 45590, 45590, 45590, 45590, 45590, 45590, 45590,
	45590, 45590, 45590, 45590, 45590, 45590, 2418, 45590, 1324, 45590,
	45590, 45590, 45590, 2005, -1000, -1000, 1951, 541, 2008, -1000,
	3606, 3606, 3606, 1309, 1309, 122233, 122233, 585, 3712, 795,
	-1000, 45590, -1000, 64, 45590, 24200, -1000, 427, 6119, 2509,
	-1000, 422, 24782, -1000, -1000, -1000, 25922, 613, 39200, 45590,
	998, 122043, -1000, -1000, 1582, 3619, 21428, 3028, 2809, 680,
	791, 789, 28820, 28238, 27656, 27074, 788, 45590, 45590, 45590,
	45590, 45590, 45590, 45590, 45590, -1000, -1000, 3628, -1000, 3619,
	-1000, -1000, -1000, -1000, 3619, 1349, 1210, 3619, -1000, 3619,
	3619, 9074, 9074, 38630, 38048, 37466, 49580, 36884, 45590, 26492,
	36302, 35720, -1000, 111580, -32, 3529, 45590, 279, -1000, 120835,
	-1000, 279, 279, 674, -75, 122043, 2724, 2724, 53461, 2406,
	2192, 2192, 2192, -1000, 891, 16967, 891, 100730, 2204, 891,
	891, 206, 299, 421, 51285, 2932, 100730, 772, 671, -7,
	-8, -14, -1000, -1000, -15, -18, -1000, -1000, 89415, 667,
	24200, 23645, 205, 1525, -78, 2680, 2678, 2671, -1000, 2658,
	-1000, 1804, -81, 1318, 89415, 111580, 3711, -94, -1000, 675,
	-87, -1000, 1323, 201, 3619, -1000, -1000, -1000, -1000, -1000,
	3709, 3706, -1000, 1040, 665, 662, 325, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 660, 657, 657, 657, -1000,
	309, 656, 240, 651, 650, 638, -1000, -1000, -1000, -1000,
	-1000, 2935, 89415, 111580, 3704, -156, 90489, -89, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 111580, -1000, -1000, -1000,
	3702, -1000, 89415, -1000, -1000, 89415, 216, 3129, -1000, 89415,
	-1000, 89415, 212, 3128, -1000, -1000, 111580, -1000, 89415, 89415,
	-1000, 111580, 111580, 111580, 73699, 73699, 224, -1000, 89415, 875,
	-92, 1145, -45, -1000, -1000, -1000, 1769, -1000, 1824, -1000,
	-1000, -1000, -1000, -1000, -1000, 1445, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1003, -1000, -1000, -1000, -1000, -1000,
	-1000, 3617, 3613, -34, -1000, -1000, 23645, -1000, -47, 1621,
	2069, 1311, -1000, 76394, 2339, 3307, 3701, 2732, 3293, 1584,
	-1000, 1528, -1000, 3398, 80195, 3468, 3480, 985, -1000, 2934,
	-1000, -1000, 919, 1760, 1770, 1305, 1298, 80195, 2001, -1000,
	64935, -1000, 2637, 3383, 1409, 1392, 1409, 1409, 1403, -1000,
	80195, 1747, 1236, 1232, 1231, 1947, 1935, -1000, -1000, 2040,
	-1000, 1229, 1227, 819, 1924, -1000, -49, 3461, 3479, 695,
	-1000, 2921, 1226, -1000, -1000, -1000, 3381, 89415, 23645, 1568,
	1566, 1563, 1710, 1222, -35, -1000, 3444, 1220, 1218, -1000,
	4850, -1000, 73699, 2099, 3127, 2774, 822, 2770, -1000, -1000,
	-1000, 822, -38, 70371, 111580, 196, -1000, 64, 45590, 45590,
	64, 45590, 64, 3427, 3126, -1000, -1000, -1000, -1000, -1000,
	3699, 1966, 2552, -1000, -1000, 635, 2391, 2916, 111580, 2659,
	-40, 89415, -1000, 65476, 3125, 68728, 2001, 2389, -1000, -1000,
	81276, -1000, 3123, 500, 2387, -1000, 637, 3698, 3117, -1000,
	114802, -1000, 3315, 1363, 3112, 1098, 568, 3527, -1000, 568,
	62234, -1000, 111580, -1000, -22, 399, 75320, -93, -100, 412,
	-1000, 101272, 111580, 1094, 75857, 111580, 3255, 997, 56197, -1000,
	56197, -101, -184, 2768, 1516, 982, 982, 822, -1000, 822,
	-1000, 89415, 2992, -1000, -1000, 73699, 982, 982, 982, -1000,
	-1000, -1000, -1000, 3697, 3696, 3695, 3693, -1000, -1000, 1000,
	89415, 111580, 89415, -1000, 193, -1000, 111580, -1000, 111580, 111580,
	89415, -1000, 1000, 111580, 1000, 111580, 1000, 111580, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 64, 45590, -1000, -1000, 3692,
	1612, -1000, 2991, -1000, 2989, -1000, 18, -1000, -1000, -1000,
	-1000, -1000, -1000, 1819, -1000, -1000, -1000, -1000, 89415, 89415,
	89415, 89415, 111580, 3237, -1000, 111580, 3234, 89415, -1000, 80195,
	-1000, 2512, 2986, -1000, -1000, -1000, -1000, -1000, -1000, 1479,
	2276, -1000, 2598, -1000, 1556, -1000, -1000, -1000, 122043, 50150,
	-1000, -1000, 122043, 1837, -1000, 48440, 47870, -1000, -1000, 1672,
	89415, 2687, -1000, 2687, -155, -1000, 120645, 2593, 89415, -1000,
	-1000, -1000, -1000, -1000, 902, 1477, 1477, 1211, 1211, 1211,
	1211, 3482, 1395, 449, 752, 5689, 5689, 4718, 4718, 4718,
	4718, 4718, 5689, 600, 1309, 1309, 600, 600, 600, 600,
	600, 1309, 1309, 1309, 5689, 5689, 5689, 122233, 9701, 8235,
	45590, 45590, 1217, 1890, 541, 7774, 45590, 9478, 9478, 9478,
	9478, -1000, 2003, -1000, -1000, -1000, -1000, 2915, 634, 49580,
	49580, -1000, -1000, -1000, -1000, 25352, 45590, -1000, -1000, -1000,
	-1000, 35138, -1000, -1000, 120017, -314, 409, -138, -6, -1000,
	45590, 45590, 45590, 408, -1000, 189, 45590, 111580, -1000, 13943,
	770, -147, -1000, -103, 1438, -1000, 45590, -1000, -1000, 1213,
	-1000, 1212, 1209, 1208, -1000, 631, 407, -1000, 188, -1000,
	2189, 630, 629, 45590, -1000, -1000, -1000, -1000, -1000, 119934,
	-1000, -1000, 119754, -1000, -1000, 119566, -1000, -1000, 119306, -1000,
	-1000, -1000, 121855, 13172, 12740, 12233, 5086, 11612, 10832, -108,
	406, -110, 402, 898, 895, 401, 386, 382, -111, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -116, 379, -1000, 2914, -138, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 377, -1000, 375, -1000, 121665, -138,
	374, 6645, -1000, 49580, 49580, 49580, -1000, 373, -1000, 120385,
	-1000, 121475, 34568, 34568, 34568, 369, 121278, 45590, -138, -119,
	-1000, -127, -1000, -1000, 602, -141, 1026, 33986, 52373, 23645,
	-1000, 1026, 1026, 45590, -1000, 45590, 2639, -1000, -1000, -1000,
	-1000, 2638, 3110, 2724, 53461, -1000, -1000, -1000, -1000, 100730,
	-1000, 3593, 2767, -1000, 100730, -1000, -1000, 111580, 500, -1000,
	100730, 100730, 23645, 891, -1000, 891, 100730, 712, -1000, -1000,
	-1000, -1000, -1000, 366, 58983, -6, 186, 23645, 1001, -1000,
	2673, 2673, 2673, 2673, -1000, -1000, 111580, 1203, -42, -128,
	-1000, 3558, -1000, 2092, -1000, 64935, -1000, 793, 1206, 23645,
	-1000, -1000, -1000, 627, -1000, 3619, 3619, -1000, 3619, 111580,
	2911, 267, -1000, 266, 68728, 68728, 3691, -1000, -1000, 216,
	-1000, 89415, 216, 216, -1000, 89415, 89415, 2222, -1000, 222,
	-1000, 220, -1000, -1000, -66, -1000, 1022, 31694, -1000, 1769,
	-1000, -1000, 1587, -1000, 2006, -1000, 1189, -1000, -1000, -1000,
	-1000, 31694, -1000, 3531, 111580, 111580, 89415, -1000, 111580, -1000,
	2132, 3555, 1897, 2523, 2519, 68728, -1000, 2385, 114265, 2380,
	64935, 111580, -1000, -1000, 623, 968, 2591, 2588, 1090, 111580,
	111580, 2586, 113728, 113191, -1000, 3690, 111580, 2111, 45590, 3379,
	2260, 3765, 64, 64, -1000, -1000, 64, 622, 1327, 89415,
	89415, 111580, 68728, 89415, 2089, -1000, -1000, -1000, -1000, -1000,
	80732, -1000, -1000, 3627, 3624, -1000, 1409, -1000, -1000, -1000,
	1409, 2001, 2054, 111580, 68728, 89415, 68728, 111580, 111580, -1000,
	1708, 111580, 1417, -1000, 819, 2101, 64, 64, -1000, -1000,
	64, 620, 23645, 1985, -1000, 2995, 111580, 3654, 112654, 3653,
	111580, 111580, 111580, 68728, 3324, 111580, 111580, 68728, 4850, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	69834, 1079, 1001, 1706, 1199, 1198, 80195, 56197, 996, 56197,
	2749, -1000, -1000, 20874, -1000, 122043, 122043, -1000, 122043, -1000,
	65476, 111580, -1000, 1046, 111580, 75857, 964, 3106, 61148, -156,
	982, 73699, 89415, -40, 2659, 111580, -1000, -1000, 2001, 3105,
	500, 2384, -1000, 73699, 3525, 3104, 618, 3688, 3685, -1000,
	89415, 2302, 2381, -1000, -1000, 112117, 3195, 819, 111580, 1026,
	53461, 1930, -1000, 59527, 1067, 111580, 1852, 265, -1000, -1000,
	-1000, 1, 111580, -1000, 801, -1000, -1000, 399, 399, 982,
	-238, 617, -1000, 883, 880, 56758, 73699, -154, -1000, -1000,
	-1000, -1000, 2380, 89415, 111580, 1294, 2737, 111580, -159, -1000,
	184, 615, -1000, 2652, -1000, -184, -1000, 997, 56197, 2906,
	2904, -1000, -1000, 1018, -1000, 1230, 982, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -25, 111580,
	-156, -156, -41, -42, -1000, 1000, -1000, 1000, -1000, 1000,
	-1000, 122043, -1000, -1000, 1610, 1608, 111580, -1000, 23645, 111580,
	89415, 23645, 89415, 2982, 2981, -1000, -1000, -1000, 111580, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1106, -1000, 1837, 2275,
	-1000, 613, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2467, -1000, -43, 31124, 866, -1000, -1000, 89415, -26,
	45590, 45590, 6886, 6471, 45590, 49580, 49580, -1000, 45590, 4778,
	-1000, -1000, -1000, -1000, -1000, 2898, 611, 45590, 64935, 6300,
	5141, -1000, 359, 8855, 600, -1000, 45590, -1000, 358, 33416,
	-1000, 121015, -62, -160, -1000, 17534, -138, -161, -1000, -1000,
	787, -1000, 3099, -1000, 45590, 121098, 2438, 2082, 1774, 1637,
	3619, 3651, 20320, -1000, 62771, 1030, 2208, 119118, -1000, -1000,
	-1000, -1000, 64935, 64935, 45590, 45590, -1000, 45590, 45590, 45590,
	-1000, -1000, -1000, 3619, 897, -1000, -1000, -1000, 897, -1000,
	-1000, 1409, -1000, 1409, -1000, 45590, -1000, -1000, 2892, 45590,
	-1000, 64935, 64935, 49580, 49580, 49580, 49580, 49580, 49580, 49580,
	49580, 49580, 49580, 49580, 49580, 49580, 49580, 49580, 49580, 49580,
	49580, 49580, 2564, 49580, 3588, 3588, 3588, -1000, 2948, 2892,
	45590, 45590, 64935, 356, 352, 349, -1000, 45590, -138, -1000,
	-1000, 399, 610, -1000, 2450, -1000, 2806, -1000, 45590, -1000,
	-152, -1000, 2932, -1000, -1000, 2806, 2806, -167, 122043, 53461,
	53461, -1000, 598, 45590, 2636, -1000, -1000, 768, -312, -1000,
	876, -1000, -1000, -1000, -1000, -1000, 500, -1000, -1000, -1000,
	182, 100730, 100730, 765, -1000, -168, -1000, -1000, -169, -1000,
	3524, 348, 23645, -1000, 1026, 2615, -1000, -1000, -1000, -1000,
	-1000, -1000, -156, 111580, 111580, 2248, 3649, -1000, 3620, 785,
	763, 178, 3619, 344, 343, 342, -156, 111580, 111580, 111580,
	-1000, -1000, -1000, -1000, 216, -1000, -1000, -1000, 212, -1000,
	-1000, -1000, -1000, 2609, -1000, -45, -1000, -1000, -1000, 45590,
	-1000, -1000, 3303, 1196, 1194, -1000, -1000, -1000, -1000, 2463,
	1883, 89952, 3551, 1877, 1874, -1000, 3100, -1000, 2374, -1000,
	1072, -1000, 1828, -1000, 45590, 587, 2735, 586, 582, 3684,
	1926, 3683, 1091, 3098, 2222, 3097, 2222, -1000, -1000, -1000,
	937, -1000, 122043, 2260, -1000, 581, 579, -1000, -47, 1618,
	1925, 1190, 1017, -1000, -1000, 45590, 45590, 100193, -1000, 447,
	3302, -27, -1000, -1000, -1000, 1701, 1188, 1186, -1000, -1000,
	-1000, -1000, 2001, 1660, 1184, 1183, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1013, -1000, 3040, 3038, 842, 111580, -1000,
	1012, -1000, -1000, 45590, -1000, -49, 1182, 3450, 2373, 89415,
	-1000, 2222, 3089, 1176, -1000, 1172, -1000, -1000, -1000, 3442,
	3440, 1185, -1000, -1000, -1000, -1000, -1000, 69281, -1000, 111580,
	68728, 89415, 1958, 822, -1000, 2455, 822, 996, 2885, -1000,
	2655, 1009, 89415, 3681, 341, -176, -51, 64935, 3523, -1000,
	2315, 584, 89415, 953, -1000, 3593, -1000, -1000, -1000, 1002,
	-1000, 3432, 89415, 3521, 3085, 1001, 64, 89415, 3633, -1000,
	-1000, 3515, 89415, 3075, 2296, 2369, 2541, 819, 74783, 1001,
	2206, -59, -1000, 1852, 32834, 3300, -177, -1000, -1000, -1000,
	1026, 62234, 53461, 45590, 3680, -179, -1000, -1000, -1000, -1000,
	-1000, 97503, 97503, 73699, 73699, 73699, 982, 111580, 111580, 75857,
	-1000, -1000, 578, 111580, 111580, 577, -1000, 111580, 111580, 3677,
	73699, -52, 574, -1000, 864, 862, 861, -1000, -1000, -1000,
	-1000, -1000, 997, -1000, -184, 56197, 64, -1000, 2238, 89415,
	-1000, 19766, -1000, -1000, -1000, -1000, -1000, -1000, 1000, -1000,
	-1000, 2142, 2325, 2142, 1839, 1833, -1000, -1000, 2268, -1000,
	-1000, -1000, -1000, 2650, 3317, 23645, 3424, 9478, 45590, 45590,
	400, 4846, 1993, 9478, 45590, 45590, 64935, 5510, -182, 45590,
	45590, -1000, 45590, 761, 122043, 3648, 45590, 338, 337, -1000,
	-1000, -1000, 3600, -1000, -1000, -1000, 122043, 45590, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 335, -1000, 177, -1000, -1000,
	-1000, 117487, -1000, 45590, 334, 3377, -1000, 329, 328, 8425,
	498, 118938, 118855, 118675, 327, -1000, -1000, 326, 320, 122043,
	2948, 122043, -1000, -1000, 1109, 1109, 1357, 1357, 1357, 1357,
	3588, 425, 859, 935, 4333, 4333, 4333, 924, 734, 734,
	4333, 4333, 4333, 2870, 2532, 573, 6764, -1000, -1000, 122043,
	122043, 316, -1000, -1000, -1000, -138, 315, 399, -1000, 2802,
	3373, 122043, -1000, 53461, 2802, 2802, -1000, -1000, 3110, 111580,
	122043, 53461, -1000, 2767, -1000, 18099, -1000, 23645, -1000, -1000,
	-1000, -1000, 3593, -1000, 58983, -1000, 571, -1000, 65, -1000,
	2615, -1000, 856, -1000, -1000, 73699, 73699, -156, -156, -1000,
	-1000, 759, 3676, 784, 23645, 313, -1000, -1000, -1000, -156,
	-156, -156, -1000, -1000, -1000, 3253, 122043, 111580, 111580, 1497,
	99656, 3514, 3513, 95329, 1830, -1000, -1000, 1919, 2501, -1000,
	3550, 3549, 111580, 3072, -1000, 2293, -1000, 1090, 118487, 54004,
	-1000, 54004, 111580, -1000, -1000, 1868, 2580, 1126, -1000, 3342,
	111580, -1000, 111580, -1000, -1000, -1000, 111580, 111580, 89415, 111580,
	-1000, 68728, 3054, -187, 122043, -55, -1000, 855, -1000, 1375,
	-1000, 19212, 111580, 68728, 89415, 111580, 68728, 89415, 2180, -1000,
	-1000, 3011, -1000, 3052, -188, 23645, -1000, 3647, 3645, 3070,
	3339, -1000, 111580, 3644, 111580, 89415, 3249, -1000, -1000, -1000,
	-1000, -1000, 1625, 1162, 1160, 996, -56, 569, -1000, 848,
	-1000, -1000, 840, 996, -1000, 73699, 56197, 3675, 500, -1000,
	2723, -1000, 94792, 2269, 64, -1000, 3674, 98045, 567, -1000,
	2237, -1000, 758, -1000, 2531, 68728, 2001, 64, 89415, -1000,
	-1000, 500, 311, -57, -1000, 3190, 1077, 23645, 89415, 3066,
	2546, 819, 74783, -1000, 1363, 2602, -1000, -58, -1000, 646,
	64, 2206, -1000, -59, 122043, -1000, 839, -1000, -189, -1000,
	-1000, 310, -1000, 3243, 3242, -1000, 2840, 54004, 562, 561,
	111580, 3241, -1000, -1000, -194, 2656, 2656, 73699, 56197, 73699,
	-1000, 997, 822, -1000, 2401, -1000, -1000, -1000, -1000, -1000,
	23645, 1700, -1000, 559, 558, -1000, -1000, -1000, -1000, 3317,
	9478, 9478, 45590, 45590, 45590, 9478, 5510, -195, -1000, 9478,
	9478, -138, -1000, -1000, 121015, -1000, -1000, -1000, 122043, -1000,
	18658, 2148, -1000, 118100, -1000, 31124, -1000, -1000, 45590, 45590,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 49580, 2867,
	557, 64935, -1000, -1000, 305, 1004, 45590, 47300, 2932, 1004,
	1004, -1000, -196, -1000, -1000, -1000, 3593, 65, -1000, -1000,
	3671, 23645, -1000, 73699, -1000, -1000, 783, -1000, 3670, -1000,
	-1000, -1000, -1000, -1000, 2761, 3512, -1000, 1910, 111580, 111580,
	-1000, -1000, 1905, 2489, -1000, 3510, 1159, 3509, -1000, 111580,
	-1000, 111580, -1000, 23645, 111580, 2842, 1255, -1000, 968, 2572,
	552, 49580, 89415, 867, -1000, 3539, 2821, -197, -1000, 111580,
	45590, 111580, -203, -204, 2351, -1000, -1000, 2350, 45590, -1000,
	64935, 551, 2222, 2222, -211, -212, -1000, -1000, -1000, 45590,
	1158, 111580, 32264, -1000, 3669, 3302, -1000, -1000, -1000, -1000,
	-1000, -1000, 111580, -1000, 45590, 1157, -1000, -1000, -1000, 3642,
	2222, 23645, 2222, -1000, 2222, 3339, 1120, 111580, 68728, 89415,
	-1000, 2226, 2226, 73699, 56197, -1000, -66, 996, -1000, 3507,
	2712, 3668, -1000, -1000, -1000, -1000, 2568, -1000, -1000, 111580,
	2567, 983, -1000, -213, -1000, 838, 837, 75857, 964, 923,
	-1000, -67, 550, -1000, 828, -1000, -1000, -1000, -1000, 500,
	3506, -1000, 3640, 548, 547, 111580, 2294, 542, 23645, 3296,
	819, 74783, -1000, 3195, 1852, -1000, 2358, 111580, 3291, -1000,
	2602, 541, -1000, 982, 538, 533, 2785, 2785, -218, 54004,
	54004, -219, 530, 982, -1000, -220, -1000, -1000, -1000, -1000,
	-1000, -88, -1000, 834, 818, -1000, -1000, 89415, 89415, 45590,
	45590, -1000, 9478, 9478, 9478, -1000, 300, -1000, -1000, 2206,
	3369, -1000, -106, 118062, 118033, 6809, 49580, 64935, -221, -1000,
	-1000, 111580, 122043, -122, -1000, 122043, 529, 528, 450, -1000,
	-1000, -1000, 499, -1000, -1000, 3667, -1000, 99119, 111580, -1000,
	-1000, -1000, -1000, 3503, 111580, 98582, 111580, -1000, 1602, -1000,
	-1000, -1000, 111580, 2362, -1000, -1000, -1000, 1086, 45590, 6764,
	527, 45590, -1000, 3499, -1000, 2700, 2873, 1914, 54004, -1000,
	3317, -1000, 15898, -1000, 1060, 1928, -1000, -1000, 122043, 3339,
	54004, -1000, -1000, 526, 521, 122043, 520, 820, 2857, -1000,
	-1000, -1000, -1000, 122043, 519, 3450, -1000, -1000, -1000, -1000,
	2222, 89415, -1000, -1000, -1000, -1000, -226, -1000, -1000, 1962,
	64, 2117, 2760, -1000, 2269, 515, -1000, -1000, 2263, 2606,
	-1000, 98045, 31694, 31694, 295, 3484, 923, -1000, 3577, -1000,
	3231, 3231, 45590, 3481, 64, -1000, 3633, 54004, -1000, 89415,
	54004, 2285, 2040, 2486, 74783, -1000, 2541, -1000, -1000, -227,
	111580, 1852, -1000, -1000, 73699, 73699, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1060, -228, -229,
	-1000, 73699, -1000, -1000, 2401, -1000, 111580, -1000, 111580, -1000,
	-1000, -235, -236, -1000, 2034, 45590, 31124, -1000, -1000, 6809,
	-237, -1000, -129, -1000, 3478, 47300, 3666, 3663, 3662, -1000,
	-1000, -1000, 1904, -1000, 111580, -1000, -1000, 1887, -1000, -1000,
	-1000, 3065, 2800, 15232, 2460, 111580, 14572, -1000, 2869, -1000,
	-1000, 2712, 511, -1000, -1000, -1000, -1000, 866, 111580, 2712,
	2798, 89415, 1082, -243, 2142, 2142, 45590, 30554, 2178, 45590,
	-1000, -1000, 3339, -1000, 2830, 3584, -1000, 964, -1000, 2171,
	111580, -1000, 3327, -1000, 3240, -1000, -1000, -1000, 2723, 64,
	-1000, -1000, -1000, -244, 122043, 64, -1000, 294, -245, 1077,
	-250, 89415, 1915, -1000, 819, -1000, 2546, 1026, -1000, -1000,
	-251, -252, 1914, 1060, 2101, -253, -1000, -259, -262, -1000,
	-1000, 274, 46730, 46730, 46730, -138, -155, -1000, 111580, 507,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 3037, 993, -1000,
	2279, 1934, 213, 1051, -1000, -1000, 2101, 111580, -1000, -1000,
	-1000, 992, 500, -1000, 45590, 1060, -264, -1000, 1066, -265,
	-1000, 1065, -267, -1000, 2848, -1000, -274, 2222, 987, 3422,
	-1000, -1000, -1000, 2263, 89415, -277, -1000, -1000, 2323, -1000,
	2712, 983, -1000, -1000, -1000, 1060, 497, 1914, 485, 1506,
	819, -1000, -1000, 1409, 3296, 3202, 982, 982, 2712, 1914,
	981, -1000, 982, -1000, -1000, -1000, 3083, -1000, 50720, 2243,
	1817, 120197, 3083, 3083, -1000, -1000, 111580, 3412, -1000, 2282,
	2280, 1505, -1000, -1000, -1000, -1000, -1000, -1000, 2821, -279,
	3407, 2460, 122043, 2712, -1000, 2142, 2757, -1000, 2142, 2847,
	-1000, 2163, -1000, -1000, -1000, 1773, 3583, 1793, 477, -1000,
	111580, 1799, 1791, 3661, 2117, 2263, 1914, 54004, 2712, 54004,
	-1000, -1000, 111580, -1000, 2040, 1320, -1000, -1000, 2101, 2712,
	1026, 472, -1000, -1000, 1798, 3485, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 817, -1000, 3219, -1000, 1105, 2071,
	2071, 1026, -1000, 815, 2279, -1000, -1000, 471, -1000, 455,
	-1000, 2236, -1000, -1000, -1000, -1000, 111580, -1000, -1000, 3660,
	-1000, 964, -1000, 2712, -280, 2101, -282, -1000, -156, 1915,
	-1000, 1583, 981, 2101, -1000, 1815, -1000, -1000, 2202, 46160,
	45590, -1000, 3561, -1000, -1000, 2549, -1000, -1000, 45590, 2821,
	45590, 45590, 60611, -285, -1000, 2263, 2101, 1060, 981, 1914,
	1506, 62234, 1026, 981, -1000, -1000, -1000, 122043, -1000, -1000,
	-1000, 122043, -1000, -288, -290, -238, 97503, 2215, 1793, 981,
	1914, 1026, 2712, -1000, -270, -1000, 1026, 2101, 1152, -291,
	-1000, -1000, -1000, -1000, 1026, 2712, -1000, 2101, -1000, -1000,
	-1000, -1000, 448, -1000, -1000, 2101, 981, 45590, 981, 1026,
	-296, 1026, -1000, 2101, -1000, -1000,
}

var sqlPgo = [...]int{
	0, 4519, 4516, 4515, 4512, 4511, 4510, 4508, 4507, 4506,
	4504, 4502, 4501, 4500, 4499, 4497, 4494, 4493, 4492, 4491,
	4490, 4489, 4487, 4486, 4484, 4483, 4480, 4479, 4478, 4476,
	4475, 4474, 4472, 4469, 4465, 4464, 4462, 4461, 4460, 4458,
	4454, 4451, 4450, 4449, 4448, 4447, 4445, 4442, 4441, 4439,
	4438, 4434, 4432, 4431, 4429, 4418, 4417, 4416, 4415, 4414,
	4412, 4411, 4410, 54, 4403, 4402, 4394, 4392, 4391, 4385,
	4384, 4383, 4380, 4379, 4378, 4376, 4375, 4369, 4365, 4364,
	4363, 4362, 4361, 4360, 64, 4358, 266, 4357, 4354, 4351,
	4346, 4342, 4341, 4336, 4327, 4325, 4324, 4314, 4309, 262,
	4308, 151, 4306, 4305, 4296, 4289, 4288, 260, 4287, 4278,
	4276, 4269, 272, 4264, 4259, 4257, 4256, 4255, 4252, 4251,
	4247, 4243, 4242, 4241, 89, 199, 4239, 4236, 212, 4235,
	4234, 4231, 4230, 4229, 4227, 4226, 4225, 4224, 4223, 237,
	4222, 258, 4221, 4220, 4219, 4218, 4217, 4214, 4213, 4210,
	4209, 4207, 4206, 4201, 4200, 4198, 4197, 4196, 4195, 4194,
	4193, 4191, 4190, 4188, 4187, 4185, 4184, 4181, 4180, 4177,
	4170, 4169, 4168, 4167, 4166, 4165, 4164, 4163, 228, 267,
	184, 4159, 4155, 257, 256, 4154, 4153, 4152, 4137, 4136,
	120, 7, 37, 4126, 4117, 113, 80, 84, 99, 100,
	97, 4116, 109, 4115, 127, 68, 4114, 10, 2, 282,
	226, 8283, 221, 4113, 4112, 4109, 233, 185, 4108, 225,
	4107, 4106, 4105, 4103, 66, 49, 167, 168, 165, 150,
	141, 4102, 153, 104, 77, 63, 45, 15, 69, 202,
	21, 4101, 246, 8, 130, 1, 36, 4100, 4098, 4097,
	4094, 3556, 138, 4091, 254, 230, 163, 4090, 4088, 4087,
	325, 4086, 4085, 60, 4084, 189, 94, 123, 27, 119,
	4082, 139, 33, 4080, 156, 105, 4075, 157, 93, 86,
	12009, 7615, 4074, 108, 71, 122, 121, 251, 160, 191,
	83, 158, 166, 214, 201, 200, 173, 188, 4073, 231,
	4070, 3471, 79, 172, 4068, 4066, 4065, 81, 186, 103,
	4064, 4063, 74, 11, 14, 4, 6, 133, 24, 20,
	16, 4062, 30, 116, 48, 28, 4058, 23, 4057, 4056,
	4055, 4054, 4053, 43, 152, 4052, 269, 4051, 98, 56,
	22, 4050, 40, 204, 4047, 236, 125, 4046, 4041, 240,
	194, 180, 4040, 73, 219, 4038, 4034, 4033, 4031, 4030,
	126, 3, 128, 4029, 4028, 142, 4027, 51, 227, 190,
	4026, 61, 4021, 4019, 169, 107, 135, 264, 198, 222,
	110, 208, 177, 217, 4017, 4016, 4015, 179, 4014, 4012,
	207, 143, 4011, 4009, 242, 273, 90, 46, 85, 224,
	78, 183, 148, 4006, 193, 4005, 4003, 270, 171, 205,
	12, 17, 91, 117, 4002, 5, 220, 147, 223, 102,
	3998, 5666, 1830, 1698, 3994, 3992, 136, 114, 76, 115,
	144, 248, 96, 3990, 3989, 164, 3988, 3987, 3986, 3984,
	176, 3979, 3978, 3976, 134, 154, 175, 3973, 118, 67,
	50, 26, 140, 244, 255, 111, 211, 170, 238, 3972,
	3971, 3970, 178, 3969, 72, 95, 155, 192, 241, 55,
	3966, 124, 3965, 137, 668, 65, 149, 3963, 213, 3962,
	3960, 3957, 3955, 3952, 3951, 3950, 280, 218, 3949, 3947,
	3945, 35, 181, 3943, 247, 252, 195, 112, 59, 3940,
	87, 3579, 3939, 159, 253, 58, 249, 1180, 250, 3938,
	1815, 53, 3937, 0, 12700, 6953, 9739, 12227, 3936, 4294,
	3935, 3934, 3933, 203, 132, 3932, 3924, 3923, 106, 3921,
	82, 3920, 3918, 70, 3917, 31, 18, 19, 34, 32,
	271, 47, 3915, 3907, 29, 129, 145, 3904, 263, 215,
	3903, 3896, 3894, 3893, 92, 3892, 44, 3888, 41, 3886,
	3882, 42, 13, 38, 3880, 3879, 209, 3878, 216, 234,
	3875, 161, 3873, 3472, 131, 3872, 3868, 3864, 62, 57,
	243, 88, 3863, 268, 3862, 3424, 3861, 3857, 25, 3854,
	3853, 229, 174, 197, 3852, 3851, 162, 3849, 3847, 3846,
	265, 3845, 3842, 3838, 39, 3836, 9, 3835, 3834, 196,
	3216, 3833, 3827, 52, 3825, 182,
}

var sqlR1 = [...]int{
	0, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 3, 3, 3, 3,
	3, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 5,
	5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 11, 11, 7, 7, 7, 7, 8, 8, 8,
	8, 8, 49, 49, 9, 9, 9, 9, 9, 9,
	9, 9, 9, 36, 31, 32, 33, 34, 34, 10,
	10, 6, 6, 6, 6, 6, 6, 6, 6, 6,
	17, 17, 37, 37, 18, 18, 39, 39, 19, 19,
	40, 40, 580, 580, 22, 42, 23, 43, 16, 581,
	581, 581, 581, 35, 24, 44, 28, 28, 28, 28,
	28, 193, 193, 193, 193, 21, 21, 38, 38, 227,
	227, 226, 226, 226, 226, 226, 226, 226, 226, 226,
	226, 226, 226, 226, 226, 226, 226, 226, 226, 226,
	226, 226, 226, 226, 226, 576, 576, 229, 229, 228,
	223, 223, 582, 582, 230, 230, 230, 232, 232, 13,
	13, 13, 13, 13, 13, 13, 13, 13, 13, 475,
	475, 475, 508, 508, 507, 507, 507, 506, 506, 595,
	595, 596, 596, 596, 596, 596, 127, 127, 373, 373,
	373, 52, 52, 52, 52, 52, 571, 571, 195, 195,
	195, 197, 197, 196, 196, 196, 196, 75, 75, 587,
	587, 588, 588, 586, 589, 589, 589, 194, 194, 194,
	123, 123, 123, 123, 123, 123, 124, 124, 125, 125,
	198, 198, 198, 200, 200, 199, 199, 199, 199, 199,
	199, 199, 199, 204, 15, 108, 108, 108, 108, 108,
	108, 108, 108, 108, 103, 103, 510, 510, 511, 511,
	189, 189, 190, 190, 190, 190, 191, 191, 192, 192,
	192, 66, 201, 201, 203, 203, 202, 202, 202, 202,
	202, 54, 54, 54, 54, 54, 54, 54, 55, 55,
	55, 55, 55, 56, 56, 56, 56, 56, 56, 57,
	57, 57, 57, 57, 57, 64, 64, 64, 64, 64,
	180, 180, 67, 67, 67, 67, 67, 67, 67, 67,
	67, 67, 67, 67, 67, 72, 72, 72, 72, 597,
	597, 597, 597, 597, 597, 597, 597, 597, 597, 597,
	597, 597, 597, 597, 597, 597, 597, 597, 598, 598,
	599, 599, 600, 600, 601, 601, 601, 601, 601, 601,
	601, 601, 601, 601, 601, 601, 601, 601, 601, 601,
	601, 601, 601, 70, 70, 70, 70, 70, 70, 70,
	70, 70, 70, 70, 70, 70, 70, 70, 70, 70,
	81, 81, 335, 335, 300, 300, 82, 82, 82, 83,
	83, 84, 84, 68, 68, 569, 569, 350, 350, 466,
	466, 69, 577, 577, 577, 579, 579, 578, 578, 86,
	86, 372, 372, 87, 87, 87, 87, 87, 87, 88,
	88, 88, 88, 88, 88, 88, 89, 89, 89, 89,
	89, 89, 89, 89, 89, 89, 89, 89, 89, 89,
	96, 96, 96, 96, 96, 97, 97, 97, 94, 94,
	94, 91, 91, 91, 90, 90, 90, 95, 95, 95,
	568, 289, 289, 93, 93, 93, 92, 92, 92, 351,
	351, 98, 98, 98, 98, 301, 99, 99, 99, 99,
	99, 99, 99, 99, 101, 101, 101, 101, 101, 101,
	101, 101, 101, 101, 101, 101, 101, 101, 101, 101,
	101, 101, 101, 101, 101, 101, 101, 101, 101, 101,
	101, 101, 101, 101, 101, 102, 102, 102, 102, 102,
	102, 102, 102, 102, 102, 102, 102, 468, 468, 100,
	100, 100, 433, 433, 104, 104, 104, 388, 388, 105,
	105, 105, 105, 105, 106, 106, 106, 106, 106, 106,
	106, 126, 126, 126, 126, 126, 126, 126, 573, 573,
	343, 343, 254, 254, 254, 254, 116, 116, 116, 116,
	117, 117, 117, 118, 118, 185, 185, 133, 133, 133,
	133, 133, 132, 132, 132, 132, 132, 132, 58, 58,
	58, 59, 59, 60, 60, 61, 61, 62, 62, 63,
	63, 63, 63, 63, 135, 135, 592, 592, 137, 134,
	134, 134, 136, 136, 136, 136, 138, 139, 139, 139,
	139, 139, 139, 139, 139, 140, 140, 500, 500, 359,
	359, 498, 498, 520, 520, 499, 499, 305, 305, 305,
	305, 305, 306, 306, 306, 509, 509, 509, 509, 509,
	509, 141, 141, 141, 141, 141, 141, 141, 141, 141,
	141, 141, 141, 141, 141, 141, 141, 141, 141, 141,
	141, 141, 141, 141, 141, 141, 141, 141, 141, 141,
	141, 141, 141, 141, 141, 141, 141, 141, 141, 141,
	141, 141, 141, 141, 141, 141, 141, 141, 141, 141,
	141, 141, 141, 141, 141, 141, 141, 141, 141, 141,
	141, 141, 141, 141, 141, 141, 141, 141, 141, 186,
	186, 187, 188, 188, 188, 188, 188, 164, 164, 164,
	179, 179, 179, 179, 179, 179, 179, 167, 167, 167,
	151, 151, 142, 142, 142, 142, 142, 142, 142, 146,
	146, 146, 146, 146, 146, 146, 146, 143, 143, 153,
	153, 153, 153, 153, 147, 147, 148, 148, 148, 148,
	174, 174, 150, 150, 152, 152, 152, 152, 152, 152,
	152, 152, 152, 144, 144, 144, 144, 155, 155, 155,
	155, 395, 395, 395, 178, 178, 154, 154, 154, 154,
	154, 154, 154, 154, 154, 154, 154, 177, 177, 177,
	177, 177, 177, 590, 590, 591, 591, 171, 171, 171,
	171, 171, 171, 447, 447, 165, 165, 165, 165, 170,
	170, 170, 170, 173, 173, 173, 173, 378, 378, 162,
	162, 162, 163, 163, 163, 168, 168, 169, 166, 166,
	172, 172, 172, 172, 145, 145, 145, 145, 602, 602,
	602, 175, 175, 161, 161, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 603, 603, 157, 157,
	157, 156, 156, 156, 156, 159, 159, 160, 160, 160,
	160, 160, 160, 158, 149, 570, 570, 566, 566, 566,
	566, 566, 566, 566, 566, 567, 567, 567, 567, 572,
	572, 109, 109, 109, 109, 109, 119, 119, 119, 119,
	119, 110, 110, 110, 110, 110, 112, 112, 111, 111,
	111, 111, 76, 76, 76, 76, 76, 14, 14, 14,
	77, 77, 245, 245, 207, 207, 207, 324, 324, 208,
	208, 313, 313, 313, 313, 205, 205, 206, 206, 78,
	78, 604, 604, 604, 583, 583, 583, 584, 584, 584,
	584, 584, 584, 307, 307, 308, 308, 413, 413, 413,
	413, 413, 311, 311, 311, 312, 312, 312, 312, 312,
	312, 312, 312, 312, 314, 314, 231, 231, 231, 322,
	323, 323, 315, 315, 321, 320, 320, 319, 319, 318,
	318, 316, 317, 317, 317, 326, 326, 325, 328, 328,
	327, 412, 529, 529, 531, 531, 531, 531, 531, 531,
	531, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 396, 396, 605, 605, 527, 527, 527,
	528, 523, 523, 524, 524, 524, 524, 524, 309, 309,
	310, 310, 310, 310, 525, 526, 341, 341, 451, 530,
	530, 532, 532, 534, 606, 606, 606, 606, 606, 606,
	607, 607, 607, 411, 411, 410, 410, 333, 333, 535,
	535, 535, 535, 536, 536, 536, 536, 536, 539, 538,
	537, 537, 537, 537, 537, 80, 80, 80, 375, 375,
	374, 374, 376, 376, 376, 376, 376, 376, 376, 376,
	376, 376, 376, 376, 376, 376, 376, 182, 182, 257,
	257, 74, 74, 74, 12, 12, 12, 585, 585, 585,
	79, 79, 79, 79, 79, 79, 256, 256, 256, 256,
	256, 256, 256, 256, 256, 256, 256, 256, 256, 256,
	256, 256, 256, 256, 256, 256, 575, 575, 574, 574,
	258, 258, 609, 609, 85, 85, 85, 85, 85, 85,
	85, 85, 469, 469, 470, 470, 73, 73, 73, 73,
	73, 397, 397, 394, 394, 393, 393, 340, 340, 449,
	449, 449, 450, 262, 262, 263, 263, 224, 224, 224,
	30, 29, 20, 20, 25, 25, 26, 26, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 27, 27, 46, 46,
	46, 46, 47, 47, 47, 47, 50, 50, 51, 51,
	45, 45, 45, 45, 48, 48, 41, 41, 593, 593,
	594, 594, 115, 115, 120, 120, 120, 120, 120, 121,
	121, 121, 121, 122, 122, 122, 122, 131, 131, 181,
	181, 181, 181, 181, 181, 181, 53, 53, 53, 53,
	65, 65, 65, 65, 129, 611, 611, 611, 130, 130,
	130, 610, 610, 255, 255, 407, 407, 408, 408, 612,
	612, 409, 409, 409, 409, 409, 248, 247, 249, 249,
	250, 250, 71, 71, 71, 240, 240, 239, 237, 237,
	512, 512, 242, 242, 242, 243, 243, 233, 233, 234,
	234, 235, 235, 236, 236, 246, 246, 613, 613, 107,
	107, 107, 184, 184, 299, 299, 299, 404, 404, 404,
	334, 334, 269, 269, 406, 406, 406, 406, 371, 371,
	371, 183, 183, 348, 348, 361, 361, 362, 362, 463,
	463, 363, 113, 113, 114, 114, 128, 128, 211, 211,
	209, 209, 209, 209, 209, 209, 209, 209, 216, 216,
	217, 217, 218, 218, 219, 220, 220, 220, 220, 352,
	352, 221, 221, 221, 210, 210, 210, 212, 212, 212,
	212, 212, 212, 212, 215, 215, 215, 215, 222, 222,
	222, 214, 214, 546, 546, 546, 548, 548, 550, 550,
	549, 549, 545, 545, 547, 547, 608, 608, 377, 377,
	377, 331, 332, 329, 329, 330, 330, 338, 338, 336,
	337, 337, 339, 339, 448, 448, 448, 225, 225, 225,
	368, 368, 368, 368, 369, 369, 400, 400, 398, 398,
	398, 398, 399, 399, 401, 401, 401, 402, 402, 403,
	403, 365, 365, 366, 366, 367, 367, 367, 367, 429,
	429, 213, 213, 213, 345, 345, 345, 346, 346, 419,
	419, 419, 419, 419, 419, 420, 420, 418, 418, 418,
	418, 452, 452, 452, 452, 452, 452, 452, 452, 452,
	453, 454, 454, 347, 347, 455, 405, 405, 564, 564,
	564, 565, 565, 446, 446, 456, 456, 456, 456, 456,
	456, 444, 444, 445, 445, 464, 465, 465, 381, 381,
	381, 381, 379, 379, 382, 382, 382, 382, 382, 380,
	380, 457, 457, 457, 457, 370, 370, 458, 458, 458,
	458, 459, 460, 460, 461, 461, 414, 415, 415, 471,
	471, 471, 471, 473, 344, 344, 344, 344, 344, 522,
	521, 521, 472, 472, 472, 472, 472, 472, 472, 472,
	472, 487, 487, 487, 487, 487, 487, 487, 487, 487,
	487, 487, 487, 487, 487, 487, 487, 487, 487, 487,
	487, 487, 487, 487, 487, 487, 487, 487, 487, 487,
	487, 487, 487, 488, 488, 488, 488, 488, 488, 488,
	474, 474, 474, 474, 474, 478, 478, 478, 477, 477,
	477, 477, 477, 477, 477, 477, 477, 477, 477, 479,
	479, 484, 484, 485, 485, 485, 480, 481, 486, 486,
	486, 486, 614, 614, 490, 490, 482, 482, 482, 482,
	482, 482, 482, 482, 482, 476, 476, 476, 483, 483,
	483, 390, 390, 390, 390, 390, 390, 390, 390, 390,
	390, 390, 390, 390, 389, 389, 391, 391, 421, 421,
	421, 421, 421, 421, 421, 421, 421, 421, 421, 421,
	421, 421, 421, 421, 421, 421, 421, 421, 421, 421,
	421, 421, 421, 421, 421, 421, 421, 421, 421, 421,
	421, 421, 421, 421, 421, 421, 421, 421, 421, 421,
	421, 421, 421, 421, 421, 421, 421, 421, 421, 421,
	421, 421, 421, 421, 421, 421, 421, 421, 421, 421,
	421, 421, 421, 421, 421, 421, 421, 421, 421, 421,
	421, 421, 421, 421, 421, 421, 421, 421, 421, 421,
	421, 421, 421, 421, 421, 421, 422, 422, 422, 422,
	422, 422, 422, 422, 422, 422, 422, 422, 422, 422,
	422, 422, 422, 422, 422, 422, 422, 422, 422, 422,
	422, 422, 422, 422, 422, 423, 423, 423, 423, 424,
	424, 424, 424, 424, 424, 424, 424, 424, 424, 424,
	424, 424, 424, 424, 424, 424, 424, 424, 424, 424,
	424, 424, 424, 424, 540, 540, 540, 540, 540, 540,
	540, 540, 425, 425, 543, 543, 544, 544, 541, 541,
	541, 541, 541, 541, 541, 541, 541, 541, 541, 541,
	541, 541, 541, 541, 541, 541, 541, 541, 541, 541,
	541, 542, 542, 542, 542, 542, 542, 542, 542, 542,
	542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
	542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
	542, 542, 542, 542, 542, 542, 542, 551, 551, 552,
	552, 554, 554, 555, 555, 556, 557, 557, 557, 558,
	559, 559, 553, 553, 560, 560, 560, 560, 561, 561,
	562, 562, 562, 562, 562, 563, 563, 563, 563, 563,
	435, 435, 436, 436, 442, 442, 442, 304, 304, 304,
	304, 304, 304, 304, 304, 304, 304, 304, 304, 304,
	304, 304, 304, 259, 259, 259, 259, 259, 357, 357,
	355, 355, 355, 358, 358, 356, 356, 354, 354, 353,
	353, 432, 432, 430, 430, 434, 434, 383, 383, 489,
	489, 489, 489, 489, 489, 489, 489, 384, 384, 384,
	392, 385, 385, 386, 386, 386, 386, 386, 426, 427,
	387, 387, 387, 428, 428, 437, 441, 441, 440, 439,
	439, 438, 438, 416, 416, 417, 417, 364, 364, 615,
	615, 360, 360, 462, 462, 462, 462, 303, 303, 349,
	349, 302, 302, 294, 294, 295, 295, 295, 295, 342,
	342, 443, 443, 491, 491, 492, 492, 493, 493, 494,
	494, 495, 496, 497, 431, 431, 279, 278, 266, 267,
	277, 276, 275, 265, 268, 272, 273, 274, 270, 271,
	285, 284, 283, 238, 241, 290, 291, 291, 293, 293,
	292, 292, 281, 282, 467, 264, 296, 296, 297, 297,
	297, 298, 298, 298, 298, 260, 260, 261, 261, 286,
	286, 287, 288, 288, 280, 280, 280, 251, 251, 251,
	252, 252, 253, 253, 505, 505, 502, 502, 502, 503,
	503, 503, 504, 504, 504, 504, 501, 501, 501, 501,
	501, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 517, 517, 517, 517,
	517, 517, 517, 517, 517, 517, 517, 517, 517, 517,
	517, 517, 517, 517, 517, 517, 517, 517, 517, 517,
	517, 517, 517, 517, 517, 517, 517, 517, 517, 517,
	517, 517, 517, 517, 517, 517, 517, 517, 517, 517,
	517, 517, 517, 517, 517, 517, 517, 517, 514, 514,
	515, 515, 515, 515, 515, 515, 515, 515, 515, 515,
	515, 515, 515, 515, 515, 515, 515, 515, 516, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	519, 519,
}

var sqlR2 = [...]int{
	0, 1, 1, 1, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 1, 1, 0, 1, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 1, 3, 1, 1, 1, 3, 1, 1, 1,
	1, 3, 4, 6, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 6, 6, 6, 4, 4, 5, 1,
	3, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	4, 6, 4, 6, 6, 9, 6, 9, 6, 5,
	6, 5, 1, 1, 5, 5, 6, 6, 4, 4,
	4, 4, 3, 4, 4, 4, 7, 7, 9, 8,
	9, 5, 3, 5, 7, 4, 12, 4, 12, 1,
	3, 5, 5, 2, 5, 3, 6, 4, 6, 5,
	6, 6, 4, 8, 3, 4, 2, 3, 10, 3,
	6, 4, 3, 1, 3, 2, 1, 1, 3, 1,
	3, 2, 2, 0, 1, 1, 0, 2, 0, 7,
	10, 6, 8, 6, 6, 6, 9, 4, 3, 2,
	2, 0, 1, 3, 1, 1, 1, 1, 1, 1,
	3, 6, 4, 6, 7, 9, 6, 2, 2, 3,
	0, 8, 6, 8, 7, 2, 0, 1, 2, 5,
	0, 1, 3, 3, 1, 1, 3, 12, 3, 1,
	0, 1, 1, 2, 3, 3, 0, 4, 6, 0,
	5, 7, 6, 8, 8, 2, 1, 3, 1, 3,
	2, 5, 0, 1, 3, 3, 3, 3, 1, 1,
	1, 1, 1, 1, 3, 6, 4, 9, 7, 12,
	12, 12, 9, 2, 7, 2, 1, 1, 1, 3,
	3, 0, 3, 1, 3, 1, 1, 3, 2, 5,
	0, 7, 2, 0, 1, 2, 3, 1, 1, 2,
	2, 1, 2, 1, 2, 1, 2, 2, 3, 3,
	3, 3, 3, 3, 5, 3, 3, 5, 3, 3,
	5, 3, 3, 5, 3, 6, 6, 6, 6, 4,
	1, 1, 1, 2, 1, 1, 2, 1, 2, 1,
	1, 1, 2, 1, 2, 6, 3, 8, 3, 4,
	3, 3, 4, 3, 4, 4, 4, 3, 5, 7,
	3, 3, 4, 3, 3, 3, 3, 3, 2, 0,
	1, 0, 1, 0, 4, 3, 3, 3, 3, 3,
	6, 4, 4, 4, 3, 5, 3, 3, 3, 3,
	3, 3, 3, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 4, 1, 2, 1, 2, 1, 2,
	7, 3, 2, 0, 1, 3, 3, 1, 0, 1,
	2, 2, 1, 6, 5, 1, 2, 1, 3, 2,
	0, 7, 2, 5, 0, 1, 3, 3, 1, 9,
	3, 2, 0, 2, 2, 2, 2, 2, 2, 1,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	4, 6, 5, 7, 3, 4, 6, 3, 4, 6,
	3, 5, 7, 3, 4, 6, 3, 4, 6, 3,
	1, 1, 3, 4, 6, 3, 3, 5, 3, 1,
	3, 2, 2, 2, 2, 1, 2, 2, 5, 3,
	3, 6, 6, 3, 1, 1, 2, 1, 1, 1,
	2, 1, 1, 2, 1, 2, 1, 2, 1, 1,
	1, 2, 1, 1, 2, 1, 1, 1, 1, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 1, 1, 2, 1, 2, 1, 3, 5,
	7, 2, 3, 0, 3, 5, 2, 3, 0, 2,
	3, 2, 3, 2, 6, 4, 7, 7, 7, 5,
	2, 6, 4, 7, 7, 7, 5, 2, 2, 1,
	1, 3, 1, 1, 1, 1, 1, 2, 1, 2,
	2, 3, 2, 4, 3, 2, 2, 1, 2, 1,
	3, 3, 1, 2, 1, 2, 1, 2, 1, 1,
	3, 5, 4, 6, 4, 3, 0, 1, 3, 2,
	4, 2, 4, 1, 6, 3, 1, 1, 5, 3,
	2, 6, 3, 3, 4, 4, 3, 1, 3, 2,
	3, 3, 1, 3, 1, 2, 1, 1, 2, 2,
	3, 1, 1, 1, 1, 1, 3, 2, 2, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 1,
	2, 1, 2, 1, 2, 1, 1, 2, 1, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 2, 1, 2,
	2, 1, 3, 3, 3, 3, 3, 2, 3, 3,
	1, 1, 1, 1, 1, 2, 2, 5, 7, 3,
	3, 3, 4, 4, 6, 5, 5, 5, 3, 4,
	4, 3, 4, 4, 3, 4, 4, 5, 3, 5,
	5, 5, 7, 3, 3, 3, 2, 6, 4, 3,
	2, 3, 4, 3, 5, 3, 6, 5, 6, 3,
	5, 6, 3, 4, 3, 4, 3, 3, 4, 4,
	5, 0, 1, 1, 1, 1, 3, 2, 4, 3,
	3, 5, 3, 4, 3, 5, 3, 3, 4, 4,
	5, 3, 3, 1, 1, 0, 2, 5, 4, 6,
	4, 6, 4, 1, 0, 3, 4, 4, 5, 7,
	5, 3, 3, 3, 4, 4, 5, 2, 0, 4,
	2, 3, 4, 2, 3, 3, 3, 4, 3, 3,
	4, 3, 3, 3, 3, 4, 4, 3, 1, 1,
	1, 2, 3, 2, 3, 6, 6, 7, 9, 7,
	9, 4, 3, 4, 4, 5, 1, 1, 10, 10,
	3, 5, 5, 5, 3, 5, 6, 4, 4, 5,
	5, 2, 3, 2, 5, 2, 0, 1, 1, 1,
	1, 3, 2, 2, 2, 2, 2, 2, 1, 2,
	0, 1, 2, 1, 2, 2, 1, 2, 1, 2,
	2, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 6, 5, 8, 3, 6, 6, 3,
	13, 16, 1, 0, 1, 2, 3, 0, 2, 0,
	4, 0, 4, 5, 4, 3, 3, 1, 3, 10,
	13, 0, 2, 3, 1, 1, 0, 1, 2, 2,
	2, 2, 1, 1, 0, 1, 3, 1, 1, 1,
	2, 3, 3, 3, 0, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 8, 0, 1, 1, 0, 2,
	1, 0, 1, 0, 1, 1, 0, 1, 4, 1,
	0, 3, 7, 7, 1, 1, 3, 7, 1, 3,
	11, 3, 2, 0, 3, 1, 2, 2, 3, 2,
	6, 2, 1, 2, 2, 2, 8, 4, 2, 5,
	5, 5, 2, 2, 0, 1, 3, 11, 12, 9,
	5, 3, 1, 5, 10, 7, 11, 3, 3, 0,
	2, 4, 3, 3, 1, 5, 1, 3, 1, 2,
	0, 1, 2, 2, 0, 1, 3, 3, 2, 2,
	1, 1, 1, 4, 0, 6, 0, 3, 0, 2,
	2, 2, 0, 1, 1, 2, 2, 0, 3, 3,
	2, 1, 1, 2, 2, 5, 8, 4, 1, 0,
	1, 2, 2, 1, 2, 3, 3, 2, 2, 3,
	2, 2, 2, 2, 2, 3, 1, 4, 2, 2,
	2, 4, 7, 3, 4, 6, 3, 1, 1, 1,
	8, 10, 11, 7, 10, 5, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 2, 0,
	3, 3, 0, 1, 8, 11, 3, 6, 6, 5,
	3, 4, 1, 0, 1, 3, 17, 20, 16, 19,
	4, 2, 0, 1, 0, 1, 0, 1, 3, 2,
	4, 2, 3, 1, 0, 2, 0, 1, 1, 0,
	9, 6, 6, 8, 6, 8, 5, 7, 2, 6,
	7, 4, 5, 2, 4, 4, 6, 3, 5, 3,
	5, 4, 4, 5, 5, 7, 3, 3, 4, 4,
	6, 3, 6, 7, 4, 6, 6, 8, 6, 7,
	8, 9, 6, 7, 8, 9, 6, 8, 6, 8,
	6, 7, 8, 9, 6, 8, 6, 8, 1, 0,
	2, 0, 2, 2, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 2, 2, 1,
	2, 1, 2, 1, 2, 1, 3, 2, 3, 2,
	2, 2, 2, 2, 2, 1, 1, 0, 2, 4,
	2, 1, 0, 2, 1, 1, 0, 1, 3, 1,
	0, 1, 1, 1, 1, 1, 2, 3, 2, 2,
	1, 2, 12, 15, 3, 1, 0, 4, 3, 0,
	1, 1, 4, 4, 5, 1, 0, 3, 0, 3,
	0, 3, 0, 3, 0, 4, 0, 1, 0, 6,
	7, 3, 6, 3, 1, 3, 1, 1, 4, 2,
	1, 3, 1, 3, 4, 8, 11, 5, 2, 2,
	0, 10, 3, 2, 0, 1, 3, 1, 1, 3,
	3, 5, 6, 4, 5, 4, 1, 1, 3, 3,
	1, 2, 4, 4, 2, 3, 5, 5, 1, 3,
	1, 0, 1, 2, 3, 2, 4, 2, 3, 0,
	2, 0, 2, 1, 2, 1, 1, 1, 2, 1,
	2, 1, 2, 1, 8, 8, 8, 2, 4, 4,
	4, 2, 2, 2, 2, 3, 1, 3, 1, 2,
	6, 7, 1, 0, 1, 0, 1, 0, 1, 1,
	0, 1, 5, 1, 0, 1, 0, 1, 0, 3,
	3, 5, 1, 3, 3, 4, 5, 2, 2, 0,
	2, 2, 1, 1, 1, 0, 1, 0, 2, 2,
	5, 4, 2, 3, 1, 1, 1, 1, 1, 1,
	1, 3, 0, 1, 3, 1, 3, 3, 3, 2,
	0, 4, 2, 5, 3, 2, 0, 1, 3, 3,
	5, 1, 1, 1, 1, 1, 3, 2, 4, 4,
	0, 4, 4, 3, 4, 1, 5, 3, 4, 5,
	5, 1, 5, 1, 3, 2, 0, 3, 0, 2,
	3, 1, 3, 2, 0, 3, 5, 6, 4, 6,
	4, 3, 2, 1, 0, 5, 1, 0, 2, 2,
	2, 1, 1, 0, 1, 1, 1, 1, 0, 4,
	2, 1, 2, 2, 4, 1, 3, 1, 2, 3,
	2, 4, 1, 0, 1, 0, 2, 1, 0, 2,
	5, 7, 2, 1, 2, 4, 3, 5, 0, 1,
	3, 5, 1, 2, 1, 1, 1, 1, 1, 2,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 4, 4, 6, 6,
	1, 1, 1, 1, 1, 3, 5, 0, 1, 1,
	1, 1, 1, 2, 2, 2, 2, 2, 1, 3,
	0, 5, 4, 1, 2, 1, 4, 1, 1, 2,
	1, 1, 1, 1, 1, 0, 1, 2, 5, 1,
	4, 2, 5, 1, 4, 3, 3, 0, 1, 2,
	4, 1, 1, 1, 1, 1, 1, 3, 3, 3,
	3, 3, 3, 3, 1, 0, 1, 4, 1, 3,
	3, 3, 5, 2, 2, 2, 2, 2, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 2, 2, 3, 5, 4, 6, 3, 5,
	4, 6, 4, 6, 5, 7, 3, 3, 3, 3,
	3, 4, 3, 2, 4, 2, 3, 3, 4, 3,
	4, 3, 4, 5, 6, 6, 7, 6, 7, 6,
	7, 3, 4, 4, 1, 3, 1, 3, 3, 2,
	2, 2, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 5, 6, 6, 7, 1, 2, 1, 2, 1,
	1, 1, 1, 1, 6, 1, 1, 1, 1, 1,
	1, 2, 1, 5, 5, 6, 3, 1, 1, 1,
	2, 2, 2, 4, 3, 5, 6, 8, 6, 5,
	4, 3, 2, 2, 4, 1, 1, 1, 5, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	6, 6, 8, 8, 6, 4, 6, 6, 6, 4,
	1, 3, 3, 3, 3, 3, 4, 3, 3, 4,
	3, 3, 4, 3, 3, 4, 3, 3, 3, 4,
	3, 4, 3, 4, 3, 4, 4, 3, 6, 5,
	5, 5, 4, 4, 3, 4, 3, 5, 0, 5,
	0, 2, 0, 1, 3, 3, 2, 2, 0, 6,
	1, 0, 3, 0, 3, 3, 3, 0, 1, 4,
	2, 2, 2, 2, 2, 3, 2, 2, 3, 0,
	4, 1, 1, 5, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 1, 2, 2, 3,
	1, 2, 3, 2, 3, 2, 3, 1, 0, 1,
	3, 1, 3, 3, 3, 1, 3, 3, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 4, 3, 1,
	2, 3, 0, 3, 3, 2, 2, 1, 2, 2,
	3, 2, 1, 1, 1, 5, 1, 2, 4, 2,
	0, 1, 0, 3, 5, 1, 0, 1, 2, 1,
	0, 1, 3, 3, 2, 1, 1, 1, 3, 1,
	3, 3, 1, 1, 1, 1, 5, 3, 1, 1,
	3, 1, 1, 1, 1, 2, 2, 1, 1, 2,
	2, 1, 1, 1, 3, 5, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 1, 3,
	1, 0, 1, 1, 1, 1, 1, 1, 3, 5,
	7, 1, 7, 5, 3, 1, 1, 1, 1, 1,
	1, 1, 3, 5, 1, 1, 1, 1, 1, 1,
	1, 0, 3, 0, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1,
}

var sqlChk = [...]int{
	-1000, -1, -2, 584, -101, -98, -66, -64, -104, -105,
	-87, -106, -100, -126, -131, -113, -114, -115, -127, -133,
	-181, -186, -187, -188, -3, -52, -54, -67, -86, -88,
	-99, -108, -107, -109, -116, -123, -119, -103, -58, -128,
	-132, -141, -182, -183, -184, 33, 32, 101, 81, 155,
	129, 138, 201, 380, 422, 433, 394, 143, 414, 399,
	-136, -137, 450, -53, -65, -130, -129, 74, 130, 408,
	-4, -12, -15, 30, 47, -55, -56, -57, 63, -74,
	-70, -81, -75, -68, -69, -72, -597, 103, -547, -89,
	-92, -122, -601, 162, 219, -110, -111, 363, -117, -118,
	416, -120, -121, 418, 163, -60, -59, 157, -209, -211,
	-134, -135, -185, -142, -143, -144, -145, -146, -147, -148,
	-174, -149, -150, -151, -152, -153, -154, -158, -177, -155,
	-156, -157, -160, -159, -161, -166, -162, -163, -164, -165,
	-167, -168, -170, -171, -172, -173, -175, -176, 455, -169,
	515, 50, 469, 83, 147, 426, 21, -5, -6, -7,
	-8, -9, -10, -11, -14, -13, -71, -73, -76, -77,
	-78, -85, -79, -80, -546, -90, -91, -94, -96, -97,
	-93, -95, 415, -212, -210, 581, 530, -17, -22, -23,
	-18, -19, -21, -24, -20, -25, -26, -27, -37, -42,
	-43, -39, -40, -38, -41, -44, -45, -46, -47, -48,
	-49, -50, -51, -29, -35, -36, -30, -31, -32, -33,
	-34, -16, -28, 550, 559, -215, -213, -214, -222, 442,
	538, 489, 584, 584, 584, 584, 584, 584, 584, 584,
	584, 584, 584, 584, 584, 584, 584, 584, 584, 584,
	584, 584, 584, 584, -301, 2, -281, -286, -287, -288,
	-280, -251, -516, -519, 4, -513, -517, 169, 228, 326,
	21, 23, 22, 24, 25, 26, 27, 28, 30, 31,
	42, 43, 45, 46, 47, 48, 49, 50, 54, 56,
	60, 61, 62, 63, 64, 65, 69, 74, 75, 80,
	81, 82, 83, 84, 85, 86, 92, 89, 90, 91,
	93, 95, 97, 98, 99, 100, 101, 102, 104, 105,
	106, 108, 109, 110, 118, 119, 120, 121, 122, 124,
	129, 130, 133, 128, 132, 134, 136, 137, 138, 141,
	142, 143, 145, 146, 148, 149, 150, 152, 153, 155,
	156, 157, 160, 158, 497, 159, 161, 162, 163, 164,
	167, 175, 176, 177, 182, 184, 188, 189, 192, 193,
	194, 195, 196, 197, 198, 199, 200, 202, 206, 208,
	209, 210, 211, 212, 218, 219, 221, 222, 223, 224,
	229, 230, 231, 235, 232, 241, 242, 246, 247, 248,
	250, 254, 255, 256, 257, 258, 259, 261, 263, 262,
	265, 268, 269, 272, 276, 277, 281, 282, 278, 283,
	284, 286, 287, 290, 288, 291, 292, 289, 293, 295,
	296, 297, 298, 299, 300, 301, 302, 303, 304, 305,
	306, 294, 309, 307, 311, 312, 313, 324, 322, 317,
	318, 314, 319, 315, 316, 320, 321, 328, 329, 332,
	216, 334, 335, 338, 356, 342, 343, 344, 347, 348,
	351, 354, 355, 357, 358, 359, 360, 361, 362, 363,
	364, 365, 367, 368, 370, 371, 372, 374, 375, 376,
	378, 380, 381, 383, 384, 386, 387, 388, 389, 390,
	391, 392, 394, 396, 395, 397, 399, 401, 402, 403,
	408, 414, 410, 411, 412, 413, 415, 416, 417, 418,
	420, 421, 422, 424, 425, 426, 427, 429, 431, 432,
	435, 436, 452, 453, 471, 433, 434, 437, 438, 439,
	440, 441, 445, 443, 444, 446, 447, 448, 450, 451,
	454, 455, 457, 458, 459, 460, 461, 462, 465, 467,
	468, 469, 488, 470, 472, 476, 477, 478, 479, 473,
	474, 487, 481, 482, 484, 485, 490, 491, 492, 493,
	494, 495, 496, 498, 500, 508, 509, 510, 512, 515,
	516, 517, 518, 506, 520, 521, 524, 525, 526, 529,
	527, 528, 530, 532, 535, 536, 537, 543, 542, 544,
	551, 552, 554, 555, 556, 37, 51, 52, 55, 57,
	59, 70, 71, 72, 76, 125, 126, 154, 165, 166,
	178, 190, 191, 203, 205, 213, 214, 215, 236, 237,
	239, 244, 266, 331, 333, 349, 353, 369, 373, 377,
	379, 393, 428, 463, 475, 480, 501, 502, 503, 504,
	511, 513, 538, 539, 540, 545, 553, -301, 2, -281,
	340, -274, 2, -251, -251, 380, 29, 2, 29, 368,
	444, 492, 494, 2, -573, -343, 2, 29, -254, -251,
	103, 201, 442, -274, 2, -573, -343, 25, 2, -251,
	2, 354, 22, 28, 67, 78, 99, 141, 164, 185,
	188, -600, 356, 387, 431, 446, 487, 498, 512, 2,
	542, 287, 443, 489, 228, 121, 517, 437, -585, 435,
	436, 354, 385, 424, 204, 531, -255, 2, 433, -251,
	287, 2, 584, 95, 277, 75, 428, 447, -139, 509,
	-138, 501, 437, -140, -500, 2, 309, -251, 584, 584,
	584, 29, -264, -251, 489, 228, 437, 121, 485, 584,
	2, 489, 359, 542, 443, 121, 390, 228, 517, 188,
	437, -585, 287, -571, 2, -566, 4, -517, -513, -295,
	-294, 489, 495, 121, -288, -280, 574, -287, 584, 584,
	584, 2, 247, 248, 389, 388, 447, 448, 584, 584,
	584, 584, 435, 2, 164, 22, 28, 67, 94, 99,
	127, 185, 188, 345, -598, 356, 387, 446, 487, 491,
	498, 512, -584, 470, 69, 413, 437, -583, -585, 287,
	517, 141, -393, 121, 277, 199, 525, 494, 492, 523,
	133, 235, 528, 527, 584, 584, -101, 2, 581, 33,
	32, 143, 450, -204, 489, 240, 2, -251, 584, 584,
	2, 247, 248, 435, 436, 584, 584, 186, -566, 2,
	584, 584, 2, 247, 248, 435, 436, 240, 2, 69,
	439, 584, 584, 584, 584, 584, 584, 584, 584, 584,
	584, 584, 584, 584, 584, 584, 584, 584, 584, 584,
	584, 584, 584, 584, 584, 584, 584, 584, 584, 584,
	584, 584, 584, 584, 584, 2, -179, 447, 470, 210,
	48, 47, 75, 29, 386, 80, 361, 122, 149, 518,
	202, 228, 229, 255, 94, 95, -395, 45, 248, 247,
	436, -590, 435, -447, 490, 438, 444, 484, 259, 433,
	509, 103, 532, 425, 556, 390, 391, 482, 403, 278,
	158, 4, 121, 309, 449, 501, 277, 432, 364, 85,
	-608, 2, 489, -610, 2, 509, 509, 2, -610, 2,
	-610, 2, -610, 2, -611, 509, 553, 584, 584, 584,
	584, 584, 584, 584, 584, 584, 584, 584, 584, 584,
	584, 584, 584, 584, -210, -212, -211, 584, 584, 584,
	584, 584, 584, 584, -179, 447, 2, 75, 29, -336,
	-338, 522, 238, 151, 346, -209, -211, 2, -546, -498,
	2, -421, -520, -423, 572, 573, 565, 486, 68, 325,
	557, -435, 127, 523, 340, -519, -424, -437, 154, 428,
	-358, 8, 9, 5, 6, 7, -260, -425, -431, 514,
	168, 330, -298, 585, 10, 581, -543, -211, -436, 38,
	205, 66, -502, -297, -261, -474, 239, -296, -280, -540,
	-541, 4, -513, -514, -503, -477, -485, -481, -482, -488,
	-251, -516, 78, 112, 113, 111, 116, 115, 280, 279,
	117, 114, 449, 531, 67, 37, 213, 214, 244, 331,
	215, 76, -542, 142, -515, 236, 237, 463, 52, 393,
	178, 126, 125, 333, 57, 55, 539, -486, 123, 501,
	502, 503, 504, 190, 191, 59, 165, 166, 353, 377,
	480, 511, 513, 203, 266, 44, 107, 187, 234, 217,
	243, 245, 249, 267, 270, 310, 323, 327, 350, 352,
	423, 456, -614, 540, 475, 70, 71, -548, 395, -549,
	-274, -548, 584, 584, 586, 584, -329, -331, -332, 2,
	29, 139, 581, 2, -452, 2, -453, -457, -211, 260,
	-456, 581, -454, 579, -281, 341, -544, 429, -540, -541,
	-260, -280, -297, 4, -513, -515, 583, -333, 581, 121,
	489, 79, 228, 164, -388, 581, -251, 29, 340, 505,
	586, -330, 384, -433, 581, 340, 186, 343, 61, 291,
	2, 2, 2, 2, 2, 213, -251, 489, 120, 2,
	258, 2, 2, 2, 2, 2, 2, 2, -351, 213,
	2, -281, 542, -351, 213, 2, -351, 213, 2, -394,
	2, 88, -265, 213, 2, -251, -289, 213, 2, -284,
	-286, -293, 213, 2, -291, -251, -511, 213, 2, -510,
	-505, 10, -504, 5, 4, -513, -517, -514, -516, 78,
	-421, 2, -128, 2, 61, -251, 542, 2, 2, 452,
	2, 581, -139, 72, 509, 44, 447, -408, 2, -409,
	-247, -248, -249, -464, -250, 246, 383, 392, 560, 131,
	325, 556, -498, -592, 186, 564, 505, -498, -359, 583,
	2, 2, 2, 2, 2, 2, -457, 213, -281, 2,
	-278, -501, 4, -513, -517, -514, -518, 29, 32, 33,
	34, 36, 38, 39, 40, 41, 58, 66, 67, 73,
	77, 79, 88, 94, 103, 111, 112, 114, 113, 115,
	116, 117, 127, 131, 135, 139, 140, 144, 147, 151,
	168, 170, 183, 185, 186, 201, 204, 207, 220, 233,
	238, 240, 260, 264, 271, 279, 280, 325, 330, 336,
	340, 341, 345, 346, 366, 382, 398, 419, 442, 449,
	466, 483, 489, 499, 505, 507, 514, 522, 523, 531,
	533, 541, 546, 547, 548, 549, 550, -519, 2, -457,
	213, 2, -283, 213, -457, -286, 2, -265, 2, -277,
	-501, 2, -302, 213, -281, -282, -286, -284, 2, 2,
	-291, 2, -510, 213, 2, 542, 240, 505, 586, -349,
	-294, -295, -497, 8, -342, -251, 583, -421, 2, -128,
	-112, 2, 183, -421, 213, 2, -128, 213, 2, -421,
	213, 2, -128, 213, 2, -587, 2, -510, 213, -251,
	2, 291, 2, 2, 512, 2, 99, 489, 120, 2,
	412, -599, 431, 516, 2, 2, 2, 2, 2, 2,
	2, 489, -270, 2, -251, 183, 473, -291, 213, -292,
	2, 443, -609, 395, -510, 213, 2, 542, -284, 213,
	2, -284, 228, 242, -265, 213, 2, 494, 492, 494,
	492, 186, 2, 240, 2, 240, 2, -458, 2, -459,
	-453, -460, 579, 341, -468, 2, -467, -504, 538, -101,
	581, -101, 581, 447, 581, -510, -281, -281, -421, 2,
	-128, -112, 2, -421, 2, -128, 2, -125, -510, -124,
	581, 186, -421, 2, -128, -112, 2, -421, 2, -128,
	2, -204, 183, 2, 121, 489, -179, 2, 183, 533,
	2, 8, 2, 220, -510, 438, 391, 175, 2, 452,
	2, 453, 75, -395, 556, 75, 186, 2, 186, 2,
	-378, 2, 550, 186, 2, 2, -570, 2, 340, 186,
	2, 186, 2, 186, 2, 186, 2, 186, 2, -178,
	448, 510, 488, 388, 248, 2, -128, 547, -112, -421,
	547, 2, -591, 183, 436, -421, 2, 508, 257, 159,
	186, -378, 2, 186, 2, 186, 2, 5, 2, 389,
	471, 2, 246, 383, 471, 2, -281, -602, 29, 2,
	489, 542, 443, 2, 2, 89, 90, 186, 2, 186,
	2, 200, 186, 2, 186, 556, 2, -370, -457, -407,
	-408, -407, 505, -336, -338, -179, 452, 2, -216, -368,
	-218, 183, -398, -399, -219, 271, 170, 336, -220, -377,
	29, 139, -377, -377, 61, 582, 582, 11, 12, 77,
	42, 572, 573, 574, 575, 181, 576, 577, 570, 571,
	569, 562, 563, 567, 252, 253, 96, 566, 564, 87,
	285, 430, 171, 172, 173, 174, 409, 226, 35, 227,
	14, 15, 16, 34, 345, 270, 557, 217, 456, 565,
	17, 18, 19, 243, 245, 327, 51, 220, -259, -304,
	-421, -421, -421, -421, -421, -421, -421, 352, 581, -364,
	-416, 579, -211, 581, 581, 581, -497, -211, -421, -435,
	582, -356, 581, -211, -435, -430, 581, 428, 579, 581,
	-438, -421, 5, 5, 5, 581, 583, -551, 551, 183,
	581, 581, 581, 581, 581, 581, 581, 581, 581, 581,
	581, 581, 581, 581, 581, 379, -479, 581, -478, 581,
	-478, -478, 543, -476, 581, 559, 552, 581, -476, 581,
	581, 581, 581, 581, 581, 581, 581, 581, 581, 581,
	581, 581, 543, 586, -548, -333, 581, -360, -462, -421,
	574, -360, -360, 340, -353, -421, 107, -381, 249, 310,
	187, 267, 423, 234, -418, 585, -418, -446, 559, -211,
	-454, -280, -211, -456, 581, -452, -446, -102, -497, -86,
	-99, -107, -128, -141, -183, -184, 574, -281, 581, 186,
	581, 583, -501, 186, -342, -265, -281, -296, -297, -302,
	2, 138, -353, -566, 517, 437, 443, -342, -254, 39,
	-432, -471, -472, -522, 585, -521, -474, -484, -480, -483,
	369, 373, -503, 55, 539, -486, 239, 4, -513, -515,
	236, 237, 463, 52, 393, 178, 126, 125, 333, 57,
	501, 502, 503, 504, 190, 191, 59, 540, 475, 70,
	71, -566, 517, 437, 443, -342, 183, -508, 2, -507,
	-506, 117, 449, -504, 5, 2, 154, 2, 2, 2,
	-251, -230, 586, 65, 417, 154, -351, 213, -230, 154,
	-230, 154, -303, 213, -302, -230, 154, -230, 586, 154,
	-230, 586, 154, 583, 586, 154, -508, 2, -394, -500,
	-353, 39, -408, 2, 127, -506, -612, 586, 269, -306,
	284, 324, 209, 341, 554, 334, 131, -509, 5, 4,
	-431, -443, 127, 277, 239, -491, -493, 8, -492, 9,
	-494, 572, 573, -499, -498, 110, 583, -501, -227, 410,
	450, 355, -226, 24, 30, 143, 230, 313, 536, 160,
	-319, 231, -316, 359, 154, 467, 526, -580, -581, 434,
	496, 497, 91, 334, 450, 355, 410, 154, -374, -376,
	39, 119, 313, 354, 62, 223, 289, 290, 469, 545,
	154, 450, 355, 410, 355, 24, 143, -242, -239, 450,
	-581, 100, 410, 481, 382, -581, -229, 467, 526, -580,
	-581, 434, 410, -228, -321, -316, 359, 154, 585, 24,
	143, 410, 450, 355, -595, -596, 30, 410, 355, -574,
	-545, 550, 154, -457, 213, -588, -124, 261, 5, 10,
	-510, -124, -349, 586, 586, -501, 574, 436, 435, 154,
	154, 154, 154, 183, 325, 2, 2, 2, 2, 2,
	188, -583, -600, 2, 2, -281, 213, -335, 340, -569,
	-350, 489, -281, 183, 325, 44, -283, 213, 2, -286,
	542, -574, 325, -285, 213, -281, 39, 581, 325, 2,
	-394, 2, 228, -545, 325, -458, -299, -281, -453, -299,
	450, -274, 39, -418, -281, 582, 586, -468, -468, -510,
	-192, 550, 186, 103, 581, 581, -204, -465, 586, -464,
	220, -511, -125, -510, 413, -510, -569, -265, 2, -281,
	2, 489, 250, -510, -192, 220, -510, -510, -510, -500,
	29, 453, 2, -178, 448, 510, 90, 453, 2, -281,
	489, 121, 228, 81, -251, -572, 183, -567, 424, 437,
	517, -566, -281, 121, -281, 121, -281, 121, -281, -281,
	2, 2, 2, 2, 2, 86, 86, 2, 47, -591,
	183, 2, 508, 2, 508, 2, -251, -251, -251, 470,
	269, -281, 490, -603, 2, 186, 183, 2, 489, 228,
	489, 228, 121, 186, 75, 121, 29, 489, -230, 586,
	-255, -216, -368, -500, -369, -368, -217, -216, -219, 183,
	392, 527, 313, 454, 254, -399, -398, 29, -421, -403,
	177, 312, -421, -401, -423, 572, 573, -492, -494, -352,
	334, -210, -210, -210, -339, -448, -421, 382, 228, -473,
	-471, -471, -279, -501, 501, -421, -421, -421, -421, -421,
	-421, -421, -421, -421, -421, -421, -421, -421, -421, -421,
	-421, -421, -421, -421, -421, -421, -421, -421, -421, -421,
	-421, -421, -421, -421, -421, -421, -421, -421, -421, -421,
	270, 217, 456, 51, 220, -421, 505, -421, -421, -421,
	-421, 307, 325, 330, 514, 168, 524, 139, 334, -615,
	483, 41, -428, -211, -357, 581, -442, 36, 466, 29,
	-435, 581, 2, -416, -421, -417, -354, -353, -353, 582,
	541, 29, 139, 574, 2, 582, 586, 39, 582, -421,
	-354, -434, -430, -353, -441, -440, 547, -389, -390, 555,
	294, 124, 211, 292, -391, 441, -495, 8, -501, 574,
	-552, 176, 204, 581, 582, 2, 582, 2, 582, -421,
	2, 582, -421, 2, 582, -421, 2, 582, -421, 2,
	582, 2, -421, -421, -421, -421, -421, -421, -421, -353,
	8, -495, -495, 501, 501, -495, -495, -495, -487, 369,
	370, 371, 372, 272, 273, 274, 275, 373, 374, 375,
	376, 299, 300, 301, 302, 295, 296, 297, 298, 303,
	304, 305, 306, 195, 196, 197, 198, 191, 192, 193,
	194, -487, -383, 2, -489, -353, 4, 555, 294, 124,
	211, 292, 441, 5, -383, 2, -384, 2, -421, -353,
	-385, -422, -423, 572, 573, 565, -435, -386, 2, -421,
	-354, -421, 58, 264, 507, -387, -421, 186, -353, -353,
	2, -353, 2, -549, 39, -353, -345, 586, 186, 39,
	4, -345, -345, 581, 582, 586, -382, 208, 288, 283,
	242, -382, -452, -381, 249, -379, 350, -379, -379, -446,
	-266, 579, 587, -501, -446, -445, -444, 39, -274, 347,
	-446, -446, 583, 582, -445, 580, -564, 581, 584, 584,
	584, 584, 584, -281, 581, -353, -501, 583, 472, 582,
	243, 243, 243, 243, 429, 582, 505, -568, -289, -293,
	2, 550, -101, 342, 582, 586, -344, 38, 579, 583,
	-495, 2, 2, -490, 543, 581, 581, -390, 581, 186,
	-568, -293, 2, -343, 586, 505, -251, 2, -281, -351,
	-230, 154, -351, -351, -230, 586, 154, -265, -284, -289,
	-291, -293, -251, -510, -511, -230, -285, -592, 582, 509,
	-409, -305, 392, 465, 411, 445, 485, 8, 9, 8,
	9, 586, -501, 586, -593, 94, 505, 79, 437, -244,
	278, 402, 313, 489, 428, 505, -412, 213, 79, -523,
	-268, 94, -524, -251, 73, 523, 382, 185, 152, -593,
	94, 382, -593, 94, 2, 230, 94, 450, 470, 29,
	61, -457, 42, 42, 29, -128, 265, 186, 556, 489,
	228, 437, 505, 505, -457, -376, -471, 119, 289, 290,
	61, -496, -491, 572, 573, -496, 61, -496, -496, -496,
	550, -283, -457, 437, 505, 505, 505, 401, 401, -239,
	505, 505, -613, 564, 401, 586, 42, 42, 29, -128,
	265, 186, 505, -302, -266, 537, 43, 537, 43, 537,
	505, 43, 437, 505, 586, 43, 505, 505, -575, -256,
	106, 319, 282, 320, 98, 316, 97, 315, 104, 317,
	105, 318, 544, 328, 64, 314, 293, 321, -257, -258,
	362, 535, -510, 450, 355, 410, 154, 220, -465, 220,
	-465, -294, -251, 583, -128, -421, -421, -128, -421, -128,
	47, 154, 2, -609, 258, 581, -309, 325, 186, -342,
	-466, 240, 586, -350, -566, 154, -507, -375, -374, 325,
	-285, 213, 2, 154, -333, 325, 148, 581, 390, 2,
	154, -267, 213, -252, -251, -394, -233, 493, 154, -372,
	533, -404, -128, 581, 127, 39, -404, -361, -362, -463,
	-363, -268, 581, -274, -418, -101, -467, 582, 582, 582,
	-191, 344, -190, -251, 5, -204, 533, -308, -413, -412,
	-527, -528, -523, 270, 228, 523, 242, 169, -334, -269,
	-268, 120, -198, 550, -124, -125, 582, -465, 220, 473,
	-192, -192, -465, -465, -281, 183, -510, -192, -192, -192,
	2, 2, 2, 2, -378, -281, -265, -302, -281, 583,
	-342, -342, -293, -289, -378, -265, -378, -265, -378, -265,
	-128, -421, 2, 447, 183, 183, 583, -378, 390, 121,
	489, 359, 228, -281, -302, -281, -302, -265, 121, -265,
	122, -281, -457, -369, -217, 341, 254, 454, -401, -402,
	-423, 428, 429, -402, 428, 429, 8, 9, 8, 9,
	-221, 458, 329, -351, 586, -224, 40, 135, 254, -281,
	556, 150, -421, -421, 505, -615, 483, -428, 150, -421,
	307, 330, 514, 168, 524, 139, 334, 186, 581, -422,
	-422, 582, -355, -421, -421, 580, 589, 582, -338, 586,
	-336, -421, -353, -353, 582, 583, -353, -342, 580, 580,
	586, 582, -439, -440, 144, -421, 505, 505, 505, 505,
	581, 582, 583, -557, 351, 581, 581, -421, 582, 582,
	582, 582, 39, 586, 586, 586, 582, 586, 586, 586,
	582, 582, 582, 586, 582, 556, 556, 582, 582, 582,
	582, 586, 582, 586, 582, 186, 582, 582, -392, 366,
	582, 11, 12, 572, 573, 574, 575, 181, 576, 577,
	570, 571, 569, 562, 563, 564, 87, 285, 430, 14,
	15, 16, 243, 220, -422, -422, -422, 582, -426, -427,
	186, 183, 39, -387, -387, -387, 582, 186, -353, 582,
	582, 581, -550, 287, 325, 582, -415, -414, 548, -462,
	-346, 2, -452, -276, -501, -415, -415, -353, -421, 249,
	249, -380, 533, 340, -382, -452, -445, -497, -420, -419,
	184, 40, 135, 322, 216, -445, -274, -333, -445, -445,
	-501, -446, -446, -444, 582, -565, -497, 582, -347, -455,
	-544, -338, 583, -501, -201, -545, -180, 5, 330, -180,
	-180, -180, -342, 505, 505, 25, 367, -471, 579, 580,
	8, -501, 581, -495, -495, -495, -342, 186, 186, 186,
	-507, -507, 2, -230, -351, -230, -230, -302, -303, -230,
	-230, -230, -373, 550, -498, -408, 521, 84, 392, 501,
	-498, -226, 410, -268, -268, -281, -290, -251, 199, 402,
	360, 26, 402, 269, 269, -507, 325, -412, 213, -232,
	325, -471, -275, -251, 581, -396, 552, 254, 254, 533,
	-268, -275, 254, 213, -268, 213, -275, 2, -275, -576,
	392, 335, -421, 61, -317, 276, 390, 326, -227, 410,
	450, 355, -128, -128, -128, 581, -592, 533, 138, -281,
	-302, -281, -290, -507, -285, 450, 355, 410, 323, -296,
	-496, -496, -374, 450, 355, 410, -290, -507, -283, -507,
	-238, -251, -238, 437, -265, 401, 556, 46, -613, -228,
	-128, -128, -128, 581, -266, -229, 410, 5, 213, -268,
	5, -268, 213, 5, -251, -268, -290, -507, -596, 24,
	143, -268, -290, -507, -256, -510, 330, 529, -574, 437,
	505, 505, -457, -124, -195, 550, -124, -189, 224, 574,
	-571, -251, 542, -251, -307, -310, -308, -268, -207, -208,
	552, 550, 154, -300, -281, 579, -192, -510, -281, -466,
	-291, -292, 154, -333, 325, -510, 39, 154, 581, 2,
	2, -284, 340, 325, -267, 213, -234, 145, -613, -265,
	-415, -346, -371, -406, 419, 340, -334, 538, -274, -371,
	-348, 586, 186, 564, 583, -334, -461, 574, -101, -101,
	-192, 586, 581, 564, 564, 581, -510, -510, 582, 586,
	-232, -281, -267, 228, 228, -273, -252, 582, 586, 583,
	581, -200, 344, -199, 146, 256, 241, 459, 460, 461,
	462, 137, -465, -198, -125, 186, 186, -61, 550, 489,
	-192, 585, -251, -378, -378, -378, 447, 447, -251, -277,
	-265, -281, -278, -302, 183, 183, -265, 527, -402, 341,
	281, -448, -225, 558, -281, 585, -421, -421, 150, 150,
	-421, -422, -422, -421, 150, 186, 581, -421, -432, 34,
	34, 582, 586, -417, -421, 582, 541, -338, -338, 582,
	574, -501, 585, 582, -430, 147, -421, 499, 294, 211,
	292, -391, 292, -391, -391, -495, 5, -501, 574, -558,
	-271, 581, -251, 548, -337, 346, 582, -473, -471, -421,
	-421, -421, -421, -421, -495, -476, -476, -491, -491, -421,
	-426, -421, -473, -471, -422, -422, -422, -422, -422, -422,
	-422, -422, -422, -422, -422, -422, -422, -422, -422, -422,
	-422, -422, -422, 139, 325, 334, -422, -427, -426, -421,
	-421, -471, 582, 582, 582, -353, -101, 581, 287, -365,
	204, -421, -465, 586, -365, -365, 582, -452, -452, 581,
	-421, 249, 580, 586, 588, 564, -333, 583, -444, -445,
	580, 582, 586, 582, 586, -405, 39, 582, -501, -415,
	-203, -202, 136, 54, 108, 134, 330, -342, -342, 343,
	5, 8, 579, 580, 583, -495, 582, 582, 582, -342,
	-342, -342, -230, -230, 120, 313, -421, 505, 505, 61,
	220, 360, 402, 505, 42, 323, -238, 382, 428, 26,
	402, 402, 154, 325, 535, -529, -524, 152, -421, 581,
	228, 581, 581, 2, -223, 143, 450, -594, 2, 533,
	154, -230, 154, -230, 554, -317, 581, 581, 505, 437,
	-244, 505, 550, -353, -421, -193, 127, -500, -581, 585,
	-581, 585, 437, 505, 505, 437, 505, 505, 550, 167,
	167, 556, -238, 550, -353, 505, -475, 49, 27, 325,
	-284, -230, 154, 505, 505, 517, 450, -510, 330, -290,
	-507, -285, 450, 355, 410, -465, -197, 344, -196, 146,
	421, 137, 256, -465, -195, 186, 240, 550, -285, 2,
	582, 582, 586, -530, 39, 338, 338, 581, -281, -82,
	550, -464, -497, -577, 550, 44, -283, 39, 154, -574,
	-128, -285, -469, -470, 5, 39, -281, 154, 340, 325,
	-235, 263, -613, -505, -545, -338, -371, -360, 326, 92,
	582, -415, -362, -346, -421, 2, 582, -190, -191, -510,
	-510, -510, -192, -204, -204, -413, -311, 581, -267, -252,
	581, -204, -269, 2, -511, 586, 581, 564, 564, 564,
	-198, -465, -124, -128, 344, -281, 574, -378, -323, -322,
	359, 334, -323, 428, 428, 341, 177, 259, -224, -266,
	-421, -421, 150, 34, 34, -421, -421, -432, 582, -421,
	-421, -353, 580, 5, -421, 582, 582, 8, -421, 582,
	583, -559, -251, -421, 582, 61, 582, 582, 586, 586,
	582, 582, 582, 582, 582, 582, 582, -427, 186, 139,
	334, 581, 582, 582, -101, -429, 207, 61, -452, -429,
	-429, -380, -342, -452, -419, -266, 579, -501, -497, -455,
	581, 583, -202, 564, -510, -510, 580, 2, 579, -501,
	582, 120, -268, -268, 489, 428, -238, 382, 39, 39,
	323, -238, 382, 428, 401, 269, 26, 26, -412, 154,
	-531, 94, -533, 77, 169, 103, 325, 330, 523, 382,
	73, 127, 398, -605, 39, 561, 582, -340, -449, -544,
	581, -251, -340, -342, 325, 478, 127, 325, 127, 120,
	517, 80, -268, -275, -342, -342, -281, -290, -507, 161,
	582, 586, 564, 2, 574, 574, -290, -507, -285, -290,
	-507, -283, 357, 167, 161, 582, -266, 5, 5, 154,
	-263, 77, -268, 5, -268, -284, 120, 437, 505, 505,
	-195, 586, 581, 564, 564, -195, -511, -124, 2, -333,
	-324, 230, -268, -528, -525, -526, 382, -532, -534, 169,
	382, -128, 2, -206, -205, -251, 5, 581, -309, 344,
	580, -579, 344, -578, 118, 137, -507, -375, -128, -285,
	-333, 582, 586, 148, -397, 533, -266, -281, 154, -236,
	262, -613, -505, -233, -400, -398, 140, 581, 340, -128,
	-338, 564, 582, 582, 120, 120, 222, 153, -340, 581,
	581, -342, 120, 582, -199, -200, -510, -124, -510, -198,
	-465, -62, -63, 228, 94, 365, -278, 489, 228, 581,
	581, -224, -421, -421, -421, 582, -338, -501, 574, -553,
	359, 582, -448, -421, -421, -422, 186, 581, -432, 582,
	-554, 549, -421, -366, -367, -421, 427, 109, 205, -554,
	-554, 582, -497, 2, -510, 579, 2, 220, 39, 401,
	-251, -251, 401, 269, 39, 505, 39, -412, -275, -279,
	-272, -251, 169, 213, 330, 546, -396, 254, 581, -422,
	-281, 581, 2, 31, -606, 131, 233, 582, 586, -450,
	-262, -251, -421, -450, 582, 582, 330, 330, -421, -471,
	581, -230, -230, 582, 582, -421, 505, -500, 101, -498,
	2, -581, -265, -421, 505, 5, -230, -279, -230, -230,
	-263, 517, -290, -507, -285, -196, -197, -510, -124, -195,
	39, -314, 232, 2, -530, 254, -272, 254, -604, 550,
	582, 586, 564, 564, -307, -207, -83, -84, 506, -464,
	586, 581, 564, -333, 39, 5, 581, 581, -251, 340,
	581, -266, -246, 93, -613, -505, -234, -371, 326, -342,
	94, -400, -428, -192, 581, 581, -312, 82, 95, 128,
	212, 189, 229, 470, 476, 29, -312, 582, -340, -340,
	582, 581, -192, 582, 586, 29, 581, 29, 581, -281,
	-302, -353, -353, 582, -338, 61, 586, 582, 582, -422,
	-432, 582, -555, -556, -271, 586, 581, 581, 451, 580,
	2, -238, 382, -251, 39, -251, -238, 382, -251, -533,
	-272, 325, 533, -421, -253, 581, -421, 39, 233, 132,
	218, -411, -607, 102, 479, 221, -449, -224, 582, -410,
	533, 398, -263, -340, 581, 581, 581, 564, 186, 581,
	-475, -230, -284, 582, -586, 396, -128, -318, -319, 220,
	581, -313, 340, 120, 313, -205, -498, -498, 582, 39,
	-84, 9, -578, -579, -421, 39, -128, -469, -340, -281,
	-340, 340, -240, -239, 271, -505, -235, 582, -275, -371,
	-511, -511, -410, 582, 582, -511, -63, -342, -342, 582,
	582, -560, 390, 429, 206, -353, -339, 582, 586, 39,
	-367, 2, 2, 2, 401, -251, 401, 154, 208, 582,
	-535, 286, -251, 582, 132, 218, -314, 581, -225, -450,
	-314, 208, -281, -582, 533, 582, -326, -325, -322, -328,
	-327, -322, -353, -498, 101, 357, -353, -263, -589, 187,
	-588, 5, 10, -207, 357, -341, -451, -268, 83, 120,
	-324, -128, 582, -128, 582, 582, -397, 582, -281, -237,
	-512, 401, 403, -613, -236, -415, 582, 582, -411, -410,
	-320, -316, 582, 582, 582, 582, -561, -562, 51, 520,
	110, -421, -561, -561, -556, -558, 169, 550, -536, -539,
	-538, 340, 457, 187, 358, 582, 478, 545, -320, -342,
	550, -333, -421, -410, 582, 586, 538, 582, 586, 538,
	582, 186, 582, -230, -194, 550, 47, -313, -281, 582,
	586, 381, 133, 143, -314, -604, -410, 581, -411, 581,
	-243, -242, -613, -491, -246, 140, -192, -192, -314, -411,
	-208, 550, -192, -563, 152, -562, 378, 182, 428, 378,
	182, -563, -563, -272, 56, -538, 340, -539, 340, 527,
	133, -606, 582, 56, -535, -314, -325, 220, -327, 186,
	357, 435, -588, 31, -245, -244, 581, -451, 429, 429,
	2, -318, -313, -411, -340, -314, -340, -241, -342, -240,
	326, 527, -320, -314, -415, 110, 204, 500, 313, 34,
	564, -537, 313, 417, 65, 450, -537, -415, 564, -536,
	581, 581, 344, -342, 2, -207, -314, 582, -320, 582,
	-237, 450, -208, -320, 428, 348, -562, -421, 23, 330,
	127, -421, -606, -353, -353, -191, 581, 582, -313, -320,
	-410, -208, -411, -243, -361, -415, -208, 582, 582, -191,
	-231, 65, 417, -245, -208, -411, -415, -314, -415, -415,
	-315, -316, 505, 582, -415, -314, -320, 581, -320, -208,
	-353, -208, -415, 582, -415, -315,
}

var sqlDef = [...]int{
	-2, -2, 1, 2, 3, 4, 6, 7, 8, 10,
	12, 14, 16, 18, 20, 22, 24, 26, 28, 30,
	31, 32, 33, 34, 524, 525, 527, 528, 529, 531,
	532, 534, 536, 538, 539, 540, 542, 543, 545, 546,
	547, 548, 549, 551, 553, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, -2, 0, 0,
	617, 619, 0, 1329, 1331, 1333, 1335, 0, 761, 0,
	36, 37, 39, 0, -2, 311, 313, 315, 0, 342,
	344, 345, 347, 349, 350, 351, 353, -2, 0, 459,
	460, 462, 464, -2, 0, 951, 953, 0, 606, 608,
	0, 956, 958, 0, 0, 628, 629, 0, 1436, -2,
	622, 624, 626, 691, 693, 695, 697, 699, 701, 703,
	705, 707, 708, 710, 712, 714, 716, 718, 719, 721,
	723, 725, 726, 728, 729, 731, 733, 735, 737, 739,
	741, 743, 745, 747, 749, 751, 753, 755, -2, 758,
	-2, -2, 0, -2, -2, -2, 1347, 41, 43, 45,
	47, 49, 51, 53, 55, 57, 403, 405, 407, 409,
	411, 414, 416, 418, 1494, 466, 468, 470, 472, 474,
	476, 478, 0, -2, 1508, 0, 0, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 101, 102,
	103, 104, 105, 106, 107, 108, 73, 74, 75, 77,
	78, 79, 80, 84, 85, 86, 87, 88, 89, 90,
	91, 99, 71, 0, 0, 1467, 1469, 1471, 1473, -2,
	0, 0, 5, 9, 11, 13, 15, 17, 19, 21,
	23, 25, 27, 29, 526, 530, 533, 535, 537, 541,
	544, 550, 552, 554, 511, 512, 515, 2172, 2189, 2190,
	2191, 2194, 2195, 2196, 2197, 2198, 2199, 2638, 2720, 2721,
	2221, 2222, 2223, 2224, 2225, 2226, 2227, 2228, 2229, 2230,
	2231, 2232, 2233, 2234, 2235, 2236, 2237, 2238, 2239, 2240,
	2241, 2242, 2243, 2244, 2245, 2246, 2247, 2248, 2249, 2250,
	2251, 2252, 2253, 2254, 2255, 2256, 2257, 2258, 2259, 2260,
	2261, 2262, 2263, 2264, 2265, 2266, 2267, 2268, 2269, 2270,
	2271, 2272, 2273, 2274, 2275, 2276, 2277, 2278, 2279, 2280,
	2281, 2282, 2283, 2284, 2285, 2286, 2287, 2288, 2289, 2290,
	2291, 2292, 2293, 2294, 2295, 2296, 2297, 2298, 2299, 2300,
	2301, 2302, 2303, 2304, 2305, 2306, 2307, 2308, 2309, 2310,
	2311, 2312, 2313, 2314, 2315, 2316, 2317, 2318, 2319, 2320,
	2321, 2322, 2323, 2324, 2325, 2326, 2327, 2328, 2329, 2330,
	2331, 2332, 2333, 2334, 2335, 2336, 2337, 2338, 2339, 2340,
	2341, 2342, 2343, 2344, 2345, 2346, 2347, 2348, 2349, 2350,
	2351, 2352, 2353, 2354, 2355, 2356, 2357, 2358, 2359, 2360,
	2361, 2362, 2363, 2364, 2365, 2366, 2367, 2368, 2369, 2370,
	2371, 2372, 2373, 2374, 2375, 2376, 2377, 2378, 2379, 2380,
	2381, 2382, 2383, 2384, 2385, 2386, 2387, 2388, 2389, 2390,
	2391, 2392, 2393, 2394, 2395, 2396, 2397, 2398, 2399, 2400,
	2401, 2402, 2403, 2404, 2405, 2406, 2407, 2408, 2409, 2410,
	2411, 2412, 2413, 2414, 2415, 2416, 2417, 2418, 2419, 2420,
	2421, 2422, 2423, 2424, 2425, 2426, 2427, 2428, 2429, 2430,
	2431, 2432, 2433, 2434, 2435, 2436, 2437, 2438, 2439, 2440,
	2441, 2442, 2443, 2444, 2445, 2446, 2447, 2448, 2449, 2450,
	2451, 2452, 2453, 2454, 2455, 2456, 2457, 2458, 2459, 2460,
	2461, 2462, 2463, 2464, 2465, 2466, 2467, 2468, 2469, 2470,
	2471, 2472, 2473, 2474, 2475, 2476, 2477, 2478, 2479, 2480,
	2481, 2482, 2483, 2484, 2485, 2486, 2487, 2488, 2489, 2490,
	2491, 2492, 2493, 2494, 2495, 2496, 2497, 2498, 2499, 2500,
	2501, 2502, 2503, 2504, 2505, 2506, 2507, 2508, 2509, 2510,
	2511, 2512, 2513, 2514, 2515, 2516, 2517, 2518, 2519, 2520,
	2521, 2522, 2523, 2524, 2525, 2526, 2527, 2528, 2529, 2530,
	2531, 2532, 2533, 2534, 2535, 2536, 2537, 2538, 2539, 2540,
	2541, 2542, 2543, 2544, 2545, 2546, 2547, 2548, 2549, 2550,
	2551, 2552, 2553, 2554, 2555, 2556, 2557, 2558, 2559, 2560,
	2561, 2562, 2563, 2564, 2565, 2566, 2567, 2568, 2569, 2570,
	2571, 2572, 2573, 2574, 2575, 2576, 2577, 2578, 2579, 2580,
	2581, 2582, 2583, 2584, 2585, 2586, 2587, 2588, 2589, 2590,
	2591, 2592, 2593, 2594, 2595, 2596, 2597, 2598, 2599, 2600,
	2601, 2602, 2603, 2604, 2605, 2606, 2607, 2608, 2609, 2610,
	2611, 2612, 2613, 2614, 2615, 2616, 2617, 513, 514, 1128,
	0, 578, 576, 2157, 579, 2442, 581, 583, 453, 454,
	455, 456, 457, 458, 0, 599, 590, 1506, 600, 602,
	603, 604, 605, 573, 571, 0, 599, 2225, 597, 1327,
	1328, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 465,
	0, 0, 0, 0, -2, 0, 0, 0, 0, 0,
	0, 0, 382, 1177, 1178, 1179, 1312, 1313, 2486, 1354,
	0, 217, 618, -2, -2, -2, 2603, -2, 650, -2,
	657, 2607, 2488, 662, 0, 664, -2, 667, 1330, 1332,
	1334, 759, 760, 2175, 0, 0, 0, 0, 0, 38,
	40, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 225, 227, -2, -2, -2, -2,
	0, 0, 2532, 2278, 2125, 2191, 2128, 2123, 312, 314,
	316, 317, 0, 0, 0, 0, 0, 0, 343, 346,
	348, 352, -2, 354, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 381, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, -2, -2, 0, 0,
	0, 0, 0, 0, 0, 0, 1012, 1004, 1005, 1235,
	0, 0, 0, -2, 461, 463, 516, 517, 0, 1495,
	1495, -2, 0, 0, 0, 0, 283, 273, 952, 954,
	955, 0, 0, 0, 0, 607, 609, 0, 0, 255,
	957, 959, 960, 0, 0, 0, 0, 0, 285, 0,
	0, 623, 625, 627, 692, 694, 696, 698, 700, 702,
	704, 706, 709, 711, 713, 715, 717, 720, 722, 724,
	727, 730, 732, 734, 736, 738, 740, 742, 744, 746,
	748, 750, 752, 754, 756, 757, 767, 0, 0, 0,
	0, 0, -2, -2, 0, 0, 0, -2, -2, -2,
	-2, 0, 0, 0, 0, 0, 0, 0, -2, 0,
	855, 0, 0, 0, -2, -2, -2, 0, 0, 0,
	0, 0, -2, -2, 0, 0, 0, 0, -2, 933,
	0, 770, 772, 773, 774, 0, 833, 853, 854, 863,
	0, 1168, 1496, 1356, 1337, 1351, 1356, 1339, 1340, 1341,
	1342, 1343, 1348, 1350, 1344, 1345, 1346, 42, 44, 46,
	48, 50, 52, 54, 56, 58, 404, 406, 408, 410,
	412, 415, 417, 419, -2, 1465, 1466, 467, 469, 471,
	473, 475, 477, 479, 610, 0, 612, 0, 771, -2,
	0, 1500, 1500, 1500, 0, 0, 1466, 1464, 0, 615,
	616, 671, 672, 1768, 0, 0, 0, 0, 0, 0,
	0, 2022, 1854, 0, 673, -2, 1885, 1887, 2578, 2603,
	2021, 1889, 1890, 1891, 1892, 1893, 0, 1895, 1896, 1897,
	1898, 1899, 1900, 0, 1902, 0, 1907, 1908, 1909, 0,
	2585, 2102, 2185, -2, 0, 0, 2591, 2181, 0, 1988,
	1925, -2, -2, 2208, 2187, 1700, 1701, 1702, 1703, 1704,
	-2, -2, 2621, 1929, 1930, 1931, 1932, 1933, 1934, 1935,
	1936, 1937, 1938, 1939, 0, 2566, 2586, 2587, 2592, 2594,
	2588, 2575, 1950, 2291, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, 1727, 1736, -2,
	-2, -2, -2, -2, -2, -2, 2579, 2580, 2597, 2600,
	2606, 2611, 2612, 2584, 2593, 2620, 2622, 2623, 2624, 2625,
	2626, 2627, 2628, 2629, 2630, 2631, 2632, 2633, 2634, 2635,
	2636, 2637, 1728, -2, -2, -2, -2, 1483, 2455, 1486,
	1128, 1484, 1468, 1470, 0, 1472, 0, 0, 0, 1477,
	1503, 1501, 0, 1552, 1481, 1482, 1570, 1570, 1594, 0,
	1575, 0, 1594, 1495, 1621, 0, 1581, 2478, 1926, 1927,
	0, 2191, 2186, -2, -2, 2618, 0, 0, 0, 0,
	0, 0, 0, 0, 574, 0, 580, 582, 0, 0,
	0, 598, 1505, 0, 0, 0, 0, 0, 0, 0,
	385, 386, 387, 388, 389, 2586, 0, 0, 0, 394,
	0, 396, 397, 398, 399, 400, 401, 402, 186, 2586,
	484, 509, 0, 186, 2586, 487, 186, 2586, 490, 0,
	493, 1233, 186, 2586, 496, 2153, 186, 2586, 499, 501,
	2161, 186, 2586, 505, 2168, 2166, 506, 2586, 508, 288,
	286, 287, 2204, 2205, 2212, 2213, 2214, 2215, 2619, 2621,
	1323, 1324, 1325, 1326, 0, 1353, 1234, 620, 621, 0,
	645, 0, 649, 2574, -2, 0, 2497, -2, 653, 1357,
	1361, 1362, 1363, 1364, 1365, 0, 0, 0, 0, 1370,
	0, 0, 659, 0, 0, 646, 647, 665, 668, 0,
	762, 763, 764, 765, 766, 70, 0, 2586, 1621, 72,
	0, 2147, 2216, 2217, 2218, 2219, 2220, 2639, 2640, 2641,
	2642, 2643, 2644, 2645, 2646, 2647, 2648, 2649, 2650, 2651,
	2652, 2653, 2654, 2655, 2656, 2657, 2658, 2659, 2660, 2661,
	2662, 2663, 2664, 2665, 2666, 2667, 2668, 2669, 2670, 2671,
	2672, 2673, 2674, 2675, 2676, 2677, 2678, 2679, 2680, 2681,
	2682, 2683, 2684, 2685, 2686, 2687, 2688, 2689, 2690, 2691,
	2692, 2693, 2694, 2695, 2696, 2697, 2698, 2699, 2700, 2701,
	2702, 2703, 2704, 2705, 2706, 2707, 2708, 2709, 2710, 2711,
	2712, 2713, 2714, 2715, 2716, 2717, 2718, 2719, 76, 0,
	2586, 81, 0, 2586, 0, -2, 92, 0, 100, 0,
	2150, 109, 0, 2586, 0, 2122, -2, 0, 198, 274,
	0, 979, -2, 2586, 1176, 0, 0, 0, 0, 942,
	2119, 2124, 943, 2143, 944, 2129, 0, 318, 319, 320,
	321, 322, 0, 323, 2586, 325, 326, 0, 328, 329,
	2586, 331, 332, 0, 334, 0, 238, 239, 2586, 356,
	358, 0, 360, 361, 0, 363, 0, 0, 0, 367,
	-2, 383, 0, 380, 370, 371, 373, 374, 375, 376,
	377, 0, 423, 421, 2158, 0, 0, -2, 2586, 0,
	976, 0, 0, 1213, -2, 2586, 1173, 0, 1220, 2586,
	1216, 0, -2, 0, 1493, 2586, 1374, 1008, 1009, 1010,
	1011, 1633, 450, 0, 1401, 0, 1403, 0, 1422, 1627,
	1570, 0, 0, 1632, 0, -2, 567, 2174, -2, 519,
	0, 520, 0, -2, 0, 300, 0, 0, 961, 962,
	963, 964, 965, 968, 969, 970, 971, 1607, 256, 258,
	0, 0, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321,
	1322, 0, 0, 630, 0, 0, 768, 769, 0, 0,
	779, 780, 781, 0, 300, 2489, 2451, 2312, 788, 0,
	791, 794, -2, 0, 0, 0, 0, 798, 0, 803,
	804, 805, 0, 0, 809, 811, 950, 813, 0, 0,
	815, 0, 819, 0, 822, 0, 824, 0, 826, -2,
	-2, -2, 834, 835, -2, 839, -2, 0, 842, 844,
	0, 846, -2, 0, 855, 851, 852, 0, 0, 0,
	0, 871, 872, 0, 881, 0, 884, 885, 886, 0,
	888, 889, 0, 891, 892, 893, 894, 0, 0, 897,
	898, -2, -2, 902, 904, 0, -2, 0, 920, 0,
	924, 0, 0, 932, 0, 775, 776, 186, 1625, 1336,
	-2, 1338, 0, -2, 0, 611, 0, 614, 1525, 1451,
	1448, 0, 1522, 1523, 1452, 0, 0, 0, 1459, 0,
	1498, 1499, 0, 0, 0, 1438, 1439, 0, 0, 0,
	0, 2027, 2028, 2029, 2030, 2031, 2032, 2035, 2036, 2033,
	2034, 2037, 2038, 0, 0, 0, 0, 0, 2039, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2040, 2041, 2042, 0, 0, 2044, 0, 2046, 0, 0,
	0, 0, 0, 0, 1833, 1835, 2110, 0, 0, 2043,
	1773, 1774, 1775, 1776, 1777, 1812, 1813, 0, 0, 1886,
	2107, 2106, 1888, 0, 2058, 0, 1901, -2, 0, 2022,
	2053, 0, 0, 1910, 1911, 1912, 0, 0, 2058, 0,
	0, 2101, 1922, 1923, 1765, 0, 0, 1990, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1714, 1713, 0, 1715, 0,
	1716, 1717, 1724, 1737, 0, 0, 0, 0, 1741, 0,
	0, 0, 0, 0, 0, 0, 2082, -2, 0, 0,
	0, 0, 1729, 0, 1485, 0, 0, 1556, 2111, 2115,
	2116, 1556, 1556, 0, 0, 2059, 1618, 1618, 0, 0,
	1613, 1613, 1613, 1611, 1594, 0, 1594, 1604, 0, 1594,
	1594, 0, -2, 1575, 0, 0, 1604, 0, 1588, 555,
	557, 559, 561, 562, 563, 565, 1622, 1623, 0, 0,
	0, 0, 2192, 0, 0, 0, 0, 0, 2177, 0,
	339, 0, 0, 0, 2542, 2488, -2, 585, 601, 1495,
	0, 2061, 1648, 1652, 0, 1654, 1655, 1656, 1657, 1658,
	0, 0, 1649, -2, 1725, 1727, 1748, 2209, 2210, 2211,
	1708, 1709, 1710, 1711, 1712, 1720, 1707, 1707, 1707, 1718,
	1747, 1739, 1747, 1743, 1693, 1694, 1695, 1730, 1731, 1732,
	1733, 0, 2542, 2488, -2, 592, 0, 0, 1433, 202,
	204, 205, 206, 207, 208, 384, 0, 391, 392, 393,
	0, 480, 0, 184, 185, 0, 186, 2586, 485, 0,
	488, 0, 186, 2586, 2117, 494, 0, 497, 0, 0,
	503, 0, 0, 0, 0, 0, 186, 1435, 0, 0,
	0, 0, -2, 655, 660, 661, 0, 1359, 0, 1366,
	682, 683, 684, 1368, 1369, 0, 1371, 658, 685, 686,
	687, 688, 689, 690, 0, 2131, 2132, 2133, 2134, 2137,
	2138, 0, 0, 656, 675, 663, 0, 669, 110, 1309,
	0, 0, 149, 0, 1309, 1309, 0, 0, 0, 0,
	173, 0, 1047, 0, 0, 0, 0, 0, 134, 145,
	122, 123, 0, 0, 0, 0, 0, 0, 82, 1150,
	0, 1153, 0, 0, 0, 0, 0, 0, 0, 1166,
	0, 0, 0, 0, 0, 0, 0, 96, 97, 0,
	133, 0, 0, 1398, 0, 128, 112, 0, 0, 0,
	135, 147, 0, 177, 179, 1044, 0, 0, 0, 0,
	0, 0, 0, 0, 197, 209, 0, 0, 0, 1174,
	0, 1492, 0, 0, 2586, 0, 1607, 2358, -2, -2,
	256, 1607, 941, 0, 0, 2192, 2127, 0, 0, 0,
	0, 0, 0, 0, 0, 359, 362, 364, 365, 366,
	0, 1212, 0, 372, 413, 1099, 2586, 0, 0, 440,
	435, 0, 437, 0, 0, 0, 1149, 2586, 1147, 2162,
	0, 1171, 0, 1128, 2586, 2160, 0, 0, 0, 1221,
	2201, 1230, 1234, 1388, 0, 452, 0, 1404, 1406, 0,
	0, 1628, 0, 1630, 1570, 1495, 0, 0, 0, 0,
	276, 0, 0, 0, 0, 0, 0, 262, 0, 1606,
	0, 0, 1607, 256, 2466, 300, 300, 1607, 632, 1607,
	634, 0, 0, 782, 783, 0, 300, 300, 300, 789,
	790, 792, 793, -2, -2, -2, -2, 795, 796, 878,
	0, 0, 0, 877, 808, 812, 0, 935, 2474, 2488,
	2542, 948, 878, 2278, 878, 2278, 878, 2278, 823, 825,
	828, 866, 874, 838, 843, 0, 0, 848, 856, -2,
	0, 858, 0, 860, 0, 862, 878, 879, 882, 887,
	890, 895, 896, 0, 911, 916, 917, 913, 0, 0,
	0, 0, 0, 0, 927, 928, 0, 0, 1167, 0,
	1349, 1525, 1451, 613, 1442, 1524, 1443, 1450, 1453, 0,
	0, 1455, 0, 1457, 0, 1520, 1521, 1528, 1529, 0,
	1539, 1540, 1532, 0, -2, 0, 0, 1535, 1536, 1461,
	0, 1478, 1479, 1480, 1509, 1512, 1249, 0, 2720, 1769,
	1643, 1770, 1771, 2146, 0, 1778, 1779, 1780, 1781, 1782,
	1783, 1784, 1785, 1786, 1787, -2, -2, -2, -2, -2,
	-2, -2, -2, 1796, 1797, 1798, 1799, 1800, 1801, 1802,
	1803, 1804, 1805, 1806, -2, -2, -2, 1810, 1811, -2,
	2045, 2047, 0, 2110, 0, -2, 0, -2, -2, -2,
	-2, 1830, 0, 1832, 1837, 1839, 1841, 0, 0, 0,
	0, 2109, 1851, 2093, 2094, 0, 0, 2024, 2025, 2026,
	1836, 0, 1855, 2108, 2105, 0, 0, 2057, 1508, 1914,
	0, 0, 0, 0, 1921, 1906, 2055, 0, 2054, 0,
	0, 0, 2065, 0, 2100, 2096, 0, 2144, 1764, 1751,
	1752, 1753, 1754, 1755, 1756, 1766, 0, 2141, 2178, 2184,
	1998, 0, 0, 0, 1951, 1952, 1953, 1954, 1955, 0,
	1957, 1958, 0, 1960, 1961, 0, 1963, 1964, 0, 1966,
	1967, 1968, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1661,
	1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671,
	1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681,
	1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691,
	1692, 0, 0, 1970, 0, 2068, -2, -2, -2, -2,
	-2, -2, -2, -2, 0, 1972, 0, 1974, 2059, 2079,
	0, 0, 1856, 0, 0, 0, 2022, 0, 1977, 2059,
	2087, 0, 0, 0, 0, 0, 2059, 0, 2092, 0,
	1984, 0, 1986, 1487, 0, 0, 1638, 0, 0, 0,
	2114, 1638, 1638, 0, 1551, 0, 0, 1614, 1615, 1616,
	1617, 0, 0, 1618, 0, 1608, 1612, 1609, 1610, 1604,
	1567, 0, 0, 2148, 1604, 1573, 1603, 0, 1128, 1593,
	1604, 1604, 0, -2, 1577, 1594, 0, 0, 556, 558,
	560, 564, 566, 0, 0, 1508, -2, 0, -2, 1127,
	0, 0, 0, 0, 575, 577, 0, 0, 500, 0,
	589, 0, 569, 0, 572, 0, 1639, 1642, 0, 0,
	1653, 1659, 1660, 0, -2, 0, 0, 1749, 0, 0,
	0, 0, 596, 0, 0, 0, 0, 395, 510, 186,
	482, 0, 186, 186, 491, 0, 0, 186, 502, 186,
	2169, 186, 2167, 289, 507, 1434, 220, 0, 648, 0,
	1358, 1367, 0, 679, 0, 681, 0, 2135, 2139, 2136,
	2140, 0, 670, 0, 0, 0, 0, 1308, 0, 1256,
	0, 0, 0, 0, 0, 0, 153, 2586, 0, 188,
	0, 0, 1092, 2154, 0, 1084, 0, 0, 2298, 0,
	0, 0, 0, 0, 166, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 119, 124, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1151, 1152, 1154, 1161, 1163,
	0, 1157, 2142, 0, 0, 1158, 0, 1160, 1162, 1164,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 98,
	0, 0, 0, 1397, 1398, 0, 0, 0, 121, 125,
	0, 0, 0, 0, 2121, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1208, 1206,
	1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195,
	1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205,
	0, 0, -2, 0, 0, 0, 0, 0, 230, 0,
	291, 2120, 2130, 0, 966, 967, 324, 327, 330, 333,
	226, 0, 368, 0, 0, 1014, 989, 0, 0, 422,
	300, 0, 0, 436, 440, 2171, 974, 1145, 1148, 0,
	1128, 2586, 1185, 0, 0, 0, 0, 0, 0, 1219,
	0, 0, 2586, 2149, 2200, 2201, 1390, 1398, 0, 1638,
	0, 1420, 1407, 0, 0, 0, 1420, 1424, 1425, 1427,
	1428, 0, 0, 1629, 1635, 518, 568, 1495, 1495, 300,
	298, 2418, 296, 293, 295, 0, 0, 0, 1015, 1017,
	1018, 1019, 188, 0, 2201, 1084, 2347, 2201, 0, 1410,
	1412, 0, 250, 0, 259, 1607, 257, 262, 0, 0,
	0, 434, 631, 636, 777, 0, 300, 785, 786, 787,
	830, 868, 876, 915, 797, 799, 800, 801, 0, 0,
	949, 945, 946, 947, 814, 878, 817, 878, 820, 878,
	841, 845, 850, 857, 0, 0, 0, 870, 0, 0,
	0, 0, 0, 0, 0, 921, 922, 923, 925, 930,
	929, 934, 1626, 1446, 1447, 1449, 0, 1458, 0, 0,
	1534, -2, -2, 1533, 1537, 1538, -2, -2, -2, -2,
	1454, 0, 1463, 1460, 0, 1519, 1247, 1248, 0, 0,
	0, 0, -2, -2, 0, 0, 0, 1852, 0, -2,
	1831, 1834, 1838, 1840, 1842, 0, 0, 0, 0, 0,
	0, 2048, 0, 2050, 1853, 2103, 2106, 2020, 0, 0,
	1507, 1508, 1508, 0, 1920, 0, 2056, 0, 2063, 2064,
	0, 1913, 0, 2097, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1924, 0, 0, 0, 0, 1956, 1959,
	1962, 1965, 0, 0, 0, 0, 1945, 0, 0, 0,
	1949, 1719, 1705, 0, 1747, 1745, 1746, 1740, 1747, 1744,
	1697, 0, 1696, 0, 1969, 0, 1971, 1973, 0, 0,
	1975, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1859, 1860, 1861, 1976, 2085, 2086,
	0, 0, 0, 0, 0, 0, 1982, 0, 2091, 1983,
	1985, 1495, 0, 1488, 0, 1553, 1542, 1637, 0, 2112,
	1607, 1555, 1557, 2113, 2151, 1542, 1542, 0, 2060, 0,
	0, 1598, 0, 0, 0, 1600, 1571, 0, 0, 1565,
	0, 1561, 1562, 1563, 1564, 1572, 1128, 1602, 1574, 1578,
	2178, 0, 1604, 0, 1589, 0, 1591, 1624, 0, 1583,
	1586, 0, 0, 2193, 1638, 0, 335, 340, 341, 336,
	337, 338, 584, 0, 0, 0, 0, 2062, 0, 1644,
	0, 1650, 0, 0, 0, 0, 591, 0, 0, 0,
	203, 1432, 390, 481, 186, 486, 489, 2118, 186, 495,
	498, 504, 216, 0, 644, -2, 677, 678, 680, 0,
	676, 150, 1309, 0, 0, 1252, 1254, 2165, 1258, 1263,
	0, 0, 0, 0, 0, 1286, 0, 155, 2586, 164,
	0, 1063, 0, 2152, 0, 0, 0, 0, 0, 0,
	1311, 0, 0, 2586, 186, 2586, 186, 167, 169, 172,
	0, 176, 174, 0, 1051, 0, 0, 1054, 111, 1309,
	0, 0, 114, 118, 126, 0, 0, 0, 132, 0,
	0, 0, 1288, 1292, 1300, 0, 0, 0, 1155, 1156,
	1159, 1165, 83, 0, 0, 0, 1296, 1298, 1304, 93,
	94, 2163, 95, 0, 1251, 0, 0, 0, 0, 178,
	116, 120, 127, 0, 1306, 113, 0, 201, 0, 0,
	191, 186, 2586, 0, 193, 0, 194, 195, 210, 0,
	0, 0, 977, 978, 1207, 1169, 1170, 0, 1175, 0,
	0, 0, 0, 1607, 222, 0, 1607, 230, 0, 2126,
	0, 355, 0, 0, 0, 0, 1013, 1110, 0, 984,
	0, 0, 0, 428, 424, 0, 433, 439, 438, 444,
	-2, 0, 0, 0, 0, -2, 0, 0, 1223, 1217,
	1218, 0, 0, 0, 0, 2586, 1392, 1398, 0, 1493,
	1508, 451, 1399, 1420, 0, 0, 0, 1409, 1405, 1402,
	1638, 0, 0, 0, 0, 0, 1631, 1634, 521, 522,
	275, 0, 0, 0, 0, 0, 300, 0, 0, 0,
	1020, 1024, 0, 2201, 2201, 0, 2156, 0, 0, 0,
	0, 260, 0, 263, 0, 0, 0, 268, 269, 270,
	271, 272, 262, 252, 1607, 0, 0, 633, 0, 0,
	784, 0, 807, 816, 818, 821, 859, 861, 878, 905,
	906, 1041, 0, 1041, 0, 0, 926, 1456, 0, 1531,
	1462, 1513, 1514, 0, 1249, 0, 1772, 1815, 0, 0,
	-2, 0, 0, 1819, 0, 0, 0, -2, 0, 0,
	0, 2049, 2051, 0, 2105, 1915, 0, 0, 0, 1919,
	1903, 1904, 0, 2023, 2066, 2095, 2099, 0, 1757, 1758,
	1759, 1760, 1761, 1762, 1763, 0, 2145, 2179, 2183, 1996,
	1997, 2001, 2159, 0, 0, 0, 1928, 0, 0, 0,
	0, 0, 0, 0, 0, 1738, 1742, 0, 0, 2067,
	2078, 2080, 1857, 1858, 1862, 1863, 1864, 1865, 1866, 1867,
	1868, 1869, 1870, 1871, -2, -2, -2, 1875, 1876, 1877,
	-2, -2, -2, 0, 0, 0, 2081, 2083, 2084, 2088,
	2089, 0, 1979, 1980, 1981, 2090, 0, 1495, 1489, 1550,
	0, 1636, 1554, 0, 1550, 1550, 1502, 1596, 0, 0,
	1620, 0, 1568, 0, 1569, 0, 1601, 0, 1576, 1579,
	1580, 1590, 0, 1582, 0, 1585, 0, 1915, -2, 301,
	302, 304, 0, 307, 308, 0, 0, 587, 588, 586,
	570, 0, 0, 1646, 0, 0, 1722, 1726, 1750, 594,
	595, 593, 483, 492, 218, 0, 1605, 0, 0, 0,
	0, 1267, 1269, 0, 2231, 1276, 1277, 0, 2603, 1281,
	0, 0, 0, 0, 187, 1061, 1091, 0, 0, 0,
	1083, 0, 0, 1097, 157, 0, 0, 0, 165, 0,
	0, 162, 0, 171, 175, 1048, 0, 0, 0, 0,
	1257, 0, 0, 0, 129, 130, 131, 0, 136, 0,
	137, 0, 0, 0, 0, 0, 0, 0, 0, 1382,
	1383, 0, 1377, 0, 0, 0, 189, 0, 0, 0,
	1246, 212, 0, 0, 0, 0, 0, 1210, 1211, 1289,
	1293, 1301, 0, 0, 0, 230, 228, 0, 231, 0,
	234, 235, 0, 230, 224, 0, 0, 0, 1128, 369,
	987, 1098, 0, 1100, 0, 985, 0, 0, 1099, 420,
	0, 427, 0, 441, 0, 0, 1149, 0, 0, 1172,
	1183, 1128, 0, 1222, 1224, 0, 1232, 0, 0, 0,
	1394, 1398, 0, 1387, 1388, 1527, 1400, 1418, -2, 0,
	0, 1508, 1426, 1423, 1429, 1430, 0, 297, 0, 292,
	294, 0, 278, 0, 0, 1016, 1021, 0, 0, 0,
	0, 0, 1411, 1413, 0, 0, 0, 0, 0, 0,
	251, 262, 1607, 284, 0, 778, 802, 869, 907, 1040,
	0, 0, 909, 0, 0, 1530, 1517, 1518, 1515, 1249,
	1817, 1821, 0, 0, 0, 1823, -2, 0, 1845, -2,
	-2, 2052, 2104, 1894, 1508, 1916, 1918, 1905, 2098, 1767,
	0, 2003, 2000, 0, 1987, 0, 1940, 1941, 0, 0,
	1944, 1946, 1947, 1948, 1706, 1699, 1698, 2077, 0, 0,
	0, 0, 1978, 1490, 0, 1992, 0, 0, 1558, 1992,
	1992, 1597, 0, 1599, 1566, 1559, 0, 2179, 1592, 1584,
	0, 0, 305, 0, 309, 310, 1640, 1645, 0, 1651,
	1721, 219, 151, 152, 1264, 1265, 1261, 0, 0, 0,
	1271, 1272, 0, 0, 1278, 1279, 0, 1284, 154, 0,
	1062, 0, 1065, 0, 0, 0, 0, 1072, 1084, 0,
	0, 0, 0, 0, 1085, 0, 1114, 0, 1237, 1244,
	0, -2, 0, 0, 0, 159, 181, 0, 0, 1310,
	0, 0, 186, 186, 0, 0, 1253, 1255, 1287, 0,
	0, 0, 0, 139, 0, 0, 1290, 1294, 1302, 1297,
	1299, 1305, 0, 1384, 0, 0, 1307, 199, 200, 0,
	186, 0, 186, 192, 186, 1246, 0, 0, 0, 0,
	221, 0, 0, 0, 0, 223, 290, 230, 357, 0,
	1035, 0, 1110, 1102, 1103, 1104, 0, 1109, 1111, 0,
	0, 1001, 986, 0, 997, 0, 0, 1014, 989, 0,
	425, 442, 0, 445, 0, 448, 975, 1146, 1180, 1128,
	0, 1214, 0, 0, 0, 0, 0, 0, 0, 1396,
	1398, 0, 1389, 1390, 1420, 1526, 0, 0, 0, 1408,
	1527, 0, 299, 300, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 300, 264, 0, 265, 266, 267, 253,
	254, 635, 637, 0, 0, 643, 1039, 0, 0, 0,
	0, 1516, 1825, -2, -2, 1846, 0, 2180, 2182, 1508,
	0, 1989, 1510, 0, 0, -2, 0, 0, 0, 1491,
	1474, 0, 1549, 1541, 1543, 1545, 2477, 2273, 2585, 1475,
	1476, 1619, 0, 1587, 306, 0, 1647, 0, 0, 1262,
	1268, 1270, 1273, 1274, 0, 0, 0, 156, 0, 1066,
	1067, 2155, 1069, 0, 1071, 1073, 1074, 1075, 0, 1078,
	2203, 0, 1082, 0, 1093, 1115, 0, 1124, 0, 1239,
	1249, 1243, 0, 1241, 1126, 0, 158, 160, 180, 1246,
	0, 161, 170, 0, 0, 115, 0, 0, 2267, 142,
	140, 138, 1250, 117, 0, 201, 211, 1245, 213, 196,
	186, 0, 1291, 1295, 1303, 232, 0, 233, 236, 0,
	0, 1050, 0, 988, 1101, 0, 1112, 1113, 991, 0,
	990, 0, 0, 0, 0, 0, 426, 429, 0, 432,
	0, 0, 0, 0, 0, 1225, 1223, 0, 1231, 0,
	0, 0, 1376, 0, 0, 1391, 1392, 449, 1414, 0,
	0, 1420, 1431, 277, 0, 0, 1022, 1025, 1026, 1027,
	1028, 1029, 1030, 1031, 1032, 1033, 1023, 1126, 0, 0,
	1090, 0, 282, 261, 0, 639, 0, 641, 0, 908,
	910, 0, 0, 1917, 2007, 0, 0, 1942, 1943, -2,
	0, 1883, 1991, 1993, 0, 0, 0, 0, 0, 1560,
	1641, 1259, 0, 1266, 0, 1280, 1282, 0, 1285, 1064,
	1068, 0, 0, 0, 1132, 0, 0, 1086, 0, 1118,
	1119, 1035, 0, 1120, 1121, 1122, 1238, 1519, 1244, 1035,
	0, 0, 183, 0, 0, 0, 0, 0, 0, 0,
	190, 214, 1246, 229, 246, 0, 1181, 989, 1049, 0,
	0, 999, 0, 1002, 0, 998, 995, 996, 987, 0,
	430, 431, 446, 0, 447, 0, 1184, 0, 0, 1232,
	0, 0, 1379, 1375, 1398, 1393, 1394, 1638, 1417, 1421,
	0, 0, 1124, 1126, 1046, 0, 638, 0, 0, 918,
	919, 0, 0, 0, 0, 2002, 1511, 1884, 0, 0,
	1544, 1546, 1547, 1548, 1260, 1275, 1283, 0, 0, 1077,
	1137, 0, 0, 0, 1116, 1117, 1046, 0, 1242, 1240,
	1095, 0, 1128, 163, 0, 1126, 0, 1055, 0, 0,
	1058, 0, 0, 143, 2267, 141, 0, 186, 249, 0,
	243, 241, 242, 991, 0, 0, 1106, 1108, 0, 1003,
	1035, 1001, 443, 1182, 1215, 1126, 0, 1124, 0, 1386,
	1398, 1380, 1381, 0, 1396, 0, 300, 300, 1035, 1124,
	989, 1045, 300, 640, 642, 1999, 2019, 2008, -2, 2545,
	2274, 0, 2019, 2019, 1994, 1995, 0, 0, 1079, 1133,
	1134, 0, 1129, 1130, 1131, 2202, 1080, 1081, 1114, 0,
	0, 1132, 182, 1035, 1052, 0, 0, 1053, 0, 0,
	146, 0, 148, 215, 237, 0, 0, 983, 0, 1105,
	0, 0, 0, 0, 1050, 991, 1124, 0, 1035, 0,
	1372, 1385, 0, 1395, 1376, 0, 279, 280, 1046, 1035,
	1638, 0, 281, 2004, 0, 0, 2010, 2011, 2012, 2013,
	2014, 2005, 2006, 1070, 0, 1135, 0, 1136, 0, 0,
	0, 1638, 1123, 0, 1137, 168, 1056, 0, 1059, 0,
	144, 0, 244, 245, 980, 982, 0, 1107, 992, 0,
	994, 989, 1000, 1035, 0, 1046, 0, 1378, 2164, 1379,
	1415, 0, 989, 1046, 1089, 0, 2016, 2017, 0, 0,
	0, 1138, 0, 1141, 1142, 0, 1139, 1094, 0, 1114,
	0, 0, 0, 0, 993, 991, 1046, 1126, 989, 1124,
	1386, 0, 1638, 989, 2015, 2018, 2009, 1076, 1140, 1143,
	1144, 1125, 1096, 0, 0, 247, 0, 1038, 983, 989,
	1124, 1638, 1035, 1373, 1638, 1087, 1638, 1043, 0, 0,
	1034, 1036, 1037, 981, 1638, 1035, 1228, 1046, 1416, 1088,
	1057, 1042, 0, 248, 1226, 1046, 989, 0, 989, 1638,
	0, 1638, 1229, 1043, 1227, 1060,
}

var sqlTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 570, 3, 576, 571, 3,
	581, 582, 574, 572, 586, 573, 583, 575, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 589, 3,
	562, 564, 563, 567, 585, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 579, 3, 580, 577, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 587, 569, 588, 565,
}

var sqlTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}

var sqlTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 475, 57818, 476, 57819, 477,
	57820, 478, 57821, 479, 57822, 480, 57823, 481, 57824, 482,
	57825, 483, 57826, 484, 57827, 485, 57828, 486, 57829, 487,
	57830, 488, 57831, 489, 57832, 490, 57833, 491, 57834, 492,
	57835, 493, 57836, 494, 57837, 495, 57838, 496, 57839, 497,
	57840, 498, 57841, 499, 57842, 500, 57843, 501, 57844, 502,
	57845, 503, 57846, 504, 57847, 505, 57848, 506, 57849, 507,
	57850, 508, 57851, 509, 57852, 510, 57853, 511, 57854, 512,
	57855, 513, 57856, 514, 57857, 515, 57858, 516, 57859, 517,
	57860, 518, 57861, 519, 57862, 520, 57863, 521, 57864, 522,
	57865, 523, 57866, 524, 57867, 525, 57868, 526, 57869, 527,
	57870, 528, 57871, 529, 57872, 530, 57873, 531, 57874, 532,
	57875, 533, 57876, 534, 57877, 535, 57878, 536, 57879, 537,
	57880, 538, 57881, 539, 57882, 540, 57883, 541, 57884, 542,
	57885, 543, 57886, 544, 57887, 545, 57888, 546, 57889, 547,
	57890, 548, 57891, 549, 57892, 550, 57893, 551, 57894, 552,
	57895, 553, 57896, 554, 57897, 555, 57898, 556, 57899, 557,
	57900, 558, 57901, 559, 57902, 560, 57903, 561, 57904, 566,
	57905, 568, 57906, 578, 57907, 584, 0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := sqlPact[state]
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && sqlChk[sqlAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || sqlExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := sqlExca[i]
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = sqlTok1[0]
		goto out
	}
	if char < len(sqlTok1) {
		token = sqlTok1[char]
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = sqlTok2[char-sqlPrivate]
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = sqlTok3[i+0]
		if token == char {
			token = sqlTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = sqlTok2[1] /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = sqlPact[sqlstate]
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = sqlAct[sqln]
	if sqlChk[sqln] == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = sqlDef[sqlstate]
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && sqlExca[xi+1] == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = sqlExca[xi+0]
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = sqlExca[xi+1]
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = sqlPact[sqlS[sqlp].yys] + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = sqlAct[sqln] /* simulate a shift of "error" */
					if sqlChk[sqlstate] == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= sqlR2[sqln]
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = sqlR1[sqln]
	sqlg := sqlPgo[sqln]
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = sqlAct[sqlg]
	} else {
		sqlstate = sqlAct[sqlj]
		if sqlChk[sqlstate] != -sqln {
			sqlstate = sqlAct[sqlg]
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1302
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1307
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1309
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 9:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1312
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 11:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1313
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 13:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1314
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 15:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1315
		{
			return helpWith(sqllex, "GRANT")
		}
	case 17:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1316
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 19:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1317
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 21:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1318
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 23:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1319
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 25:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1320
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 27:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1321
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 29:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1322
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 35:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1329
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 38:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1338
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 40:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1340
		{
			return helpWith(sqllex, "ALTER")
		}
	case 42:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1343
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 44:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1344
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 46:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1345
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 48:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1346
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 50:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1347
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 52:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1348
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 54:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1349
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 56:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1350
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 58:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1351
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 70:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1410
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 72:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1436
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 76:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1450
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 81:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1468
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 82:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1472
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 83:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1476
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 92:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1502
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 93:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1506
		{
			sqlVAL.union.val = &tree.AlterDatabaseOwner{Name: tree.Name(sqlDollar[3].str), Owner: sqlDollar[6].union.user()}
		}
	case 94:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1512
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 95:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1521
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 96:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1530
		{
			sqlVAL.union.val = &tree.AlterDatabaseSurvivalGoal{
				Name:         tree.Name(sqlDollar[3].str),
				SurvivalGoal: sqlDollar[4].union.survivalGoal(),
			}
		}
	case 97:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1539
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[4].str),
			}
		}
	case 98:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1546
		{

			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[5].str),
			}
		}
	case 100:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1571
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 109:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1603
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 110:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1607
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 111:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1611
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 112:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1617
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 113:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1621
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 114:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1627
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 115:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1636
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 116:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1647
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 117:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1651
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 118:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1657
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 119:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1665
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 120:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1675
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 121:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1679
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 124:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1689
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[5].union.slct(),
			}
		}
	case 125:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1700
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[5].union.slct()}
		}
	case 126:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1707
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:  tree.TableIndexName{Table: name},
				Rows:          sqlDollar[6].union.slct(),
				RelocateLease: true,
			}
		}
	case 127:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1719
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateLease: true}
		}
	case 128:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1726
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 129:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1734
		{

			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: sqlDollar[4].union.expr()}
		}
	case 130:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1739
		{
			sqlVAL.union.val = &tree.SetZoneConfig{Options: sqlDollar[4].union.kvOptions()}
		}
	case 131:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1743
		{

			sqlVAL.union.val = &tree.SetZoneConfig{SetDefault: true}
		}
	case 132:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1748
		{
			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: tree.DNull}
		}
	case 133:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1754
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 134:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1762
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 135:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1773
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 136:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1783
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 137:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1793
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 138:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1802
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 139:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1813
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 140:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1819
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 141:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1827
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 142:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1831
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 143:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1835
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 144:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1839
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 145:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1845
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 146:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1850
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 147:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1861
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 148:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1865
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 149:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1871
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 150:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1875
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 151:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1882
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 152:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1887
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 153:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1892
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 154:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1897
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 155:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1902
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 156:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1907
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 157:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1912
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 158:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1917
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 159:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1922
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 160:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1927
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 161:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1932
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 162:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1941
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 163:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1953
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 164:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1963
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 165:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1970
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 166:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1973
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table inherits")
		}
	case 167:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1979
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table no inherits")
		}
	case 168:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:1986
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:    sqlDollar[7].union.idxElems(),
				Sharded:    sqlDollar[9].union.shardedIndexDef(),
				Interleave: sqlDollar[10].union.interleave(),
			}
		}
	case 169:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1994
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 170:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2001
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 171:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2010
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 172:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2019
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 173:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2024
		{
			sqlVAL.union.val = &tree.AlterTablePartitionByTable{
				PartitionByTable: sqlDollar[1].union.partitionByTable(),
			}
		}
	case 174:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2031
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 175:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2039
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 176:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2040
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 177:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2044
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 178:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2048
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 179:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2054
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionByIndex: sqlDollar[1].union.partitionByIndex(),
			}
		}
	case 180:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2062
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 181:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2066
		{
			sqlVAL.union.val = nil
		}
	case 182:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2072
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 183:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2076
		{
			sqlVAL.union.val = nil
		}
	case 184:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2083
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 185:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2087
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 186:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2091
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 187:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2097
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 188:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2101
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 189:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2126
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[6].str),
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 190:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2137
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[9].str),
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 191:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2148
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeDropValue{
					Val: tree.EnumValue(sqlDollar[6].str),
				},
			}
		}
	case 192:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2157
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: tree.EnumValue(sqlDollar[6].str),
					NewVal: tree.EnumValue(sqlDollar[8].str),
				},
			}
		}
	case 193:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2167
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 194:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2176
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 195:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2185
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeOwner{
					Owner: sqlDollar[6].union.user(),
				},
			}
		}
	case 196:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2194
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 197:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2198
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 198:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2201
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 199:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2205
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 200:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2212
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 201:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2219
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 202:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2225
		{
			sqlVAL.union.val = []security.SQLUsername{sqlDollar[1].union.user()}
		}
	case 203:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2229
		{
			sqlVAL.union.val = append(sqlDollar[1].union.users(), sqlDollar[3].union.user())
		}
	case 204:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2234
		{
			sqlVAL.union.val = sqlDollar[1].union.user()
		}
	case 205:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2236
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 206:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2241
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 207:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2248
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 208:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2256
		{

			sqlVAL.union.val, _ = security.MakeSQLUsernameFromUserInput(sqlDollar[1].str, security.UsernameValidation)
		}
	case 216:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2280
		{
			sqlVAL.union.val = &tree.RefreshMaterializedView{
				Name:              sqlDollar[5].union.unresolvedObjectName(),
				Concurrently:      sqlDollar[4].union.bool(),
				RefreshDataOption: sqlDollar[6].union.refreshDataOption(),
			}
		}
	case 217:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2287
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 218:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2291
		{
			sqlVAL.union.val = tree.RefreshDataWithData
		}
	case 219:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2295
		{
			sqlVAL.union.val = tree.RefreshDataClear
		}
	case 220:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2299
		{
			sqlVAL.union.val = tree.RefreshDataDefault
		}
	case 221:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2328
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: false,
				Subdir:         sqlDollar[4].union.expr(),
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 222:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2340
		{
			sqlVAL.union.val = &tree.Backup{
				Targets: sqlDollar[2].union.targetListPtr(),
				To:      sqlDollar[4].union.stringOrPlaceholderOptList(),
				Nested:  true,
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *sqlDollar[6].union.backupOptions(),
			}
		}
	case 223:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2350
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: true,
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 224:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2361
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:         sqlDollar[2].union.targetListPtr(),
				To:              sqlDollar[4].union.stringOrPlaceholderOptList(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}
		}
	case 225:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2370
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 226:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2374
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 227:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2378
		{
			t := sqlDollar[1].union.targetList()
			sqlVAL.union.val = &t
		}
	case 228:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2386
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 229:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2390
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 230:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2394
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 231:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2401
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 232:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2405
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 233:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2414
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 234:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2418
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: true}
		}
	case 235:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2422
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: true}
		}
	case 236:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2426
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 237:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2506
		{
			sqlVAL.union.val = &tree.ScheduledBackup{
				ScheduleLabel:   sqlDollar[3].union.expr(),
				Recurrence:      sqlDollar[10].union.expr(),
				FullBackup:      sqlDollar[11].union.fullBackupClause(),
				To:              sqlDollar[8].union.stringOrPlaceholderOptList(),
				Targets:         sqlDollar[6].union.targetListPtr(),
				BackupOptions:   *(sqlDollar[9].union.backupOptions()),
				ScheduleOptions: sqlDollar[12].union.kvOptions(),
			}
		}
	case 238:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2517
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 240:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2522
		{
			sqlVAL.union.val = nil
		}
	case 241:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2530
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 242:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2534
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 243:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2544
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 244:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2552
		{
			sqlVAL.union.val = &tree.FullBackupClause{Recurrence: sqlDollar[3].union.expr()}
		}
	case 245:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2556
		{
			sqlVAL.union.val = &tree.FullBackupClause{AlwaysFull: true}
		}
	case 246:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2560
		{
			sqlVAL.union.val = (*tree.FullBackupClause)(nil)
		}
	case 247:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2566
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 248:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2570
		{
			sqlVAL.union.val = sqlDollar[5].union.kvOptions()
		}
	case 249:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2574
		{
			sqlVAL.union.val = nil
		}
	case 250:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2605
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				From:               sqlDollar[3].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[4].union.asOfClause(),
				Options:            *(sqlDollar[5].union.restoreOptions()),
			}
		}
	case 251:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2614
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				Subdir:             sqlDollar[3].union.expr(),
				From:               sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[6].union.asOfClause(),
				Options:            *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 252:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2624
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[4].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *(sqlDollar[6].union.restoreOptions()),
			}
		}
	case 253:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2633
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				Subdir:  sqlDollar[4].union.expr(),
				From:    sqlDollar[6].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[7].union.asOfClause(),
				Options: *(sqlDollar[8].union.restoreOptions()),
			}
		}
	case 254:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2643
		{
			sqlVAL.union.val = &tree.StreamIngestion{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[7].union.stringOrPlaceholderOptList(),
				AsOf:    sqlDollar[8].union.asOfClause(),
			}
		}
	case 255:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2650
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 256:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2654
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList{sqlDollar[1].union.expr()}
		}
	case 257:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2658
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList(sqlDollar[2].union.exprs())
		}
	case 258:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2664
		{
			sqlVAL.union.val = []tree.StringOrPlaceholderOptList{sqlDollar[1].union.stringOrPlaceholderOptList()}
		}
	case 259:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2668
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listOfStringOrPlaceholderOptList(), sqlDollar[3].union.stringOrPlaceholderOptList())
		}
	case 260:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2675
		{
			sqlVAL.union.val = sqlDollar[2].union.restoreOptions()
		}
	case 261:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2679
		{
			sqlVAL.union.val = sqlDollar[4].union.restoreOptions()
		}
	case 262:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2683
		{
			sqlVAL.union.val = &tree.RestoreOptions{}
		}
	case 263:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2690
		{
			sqlVAL.union.val = sqlDollar[1].union.restoreOptions()
		}
	case 264:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2694
		{
			if err := sqlDollar[1].union.restoreOptions().CombineWith(sqlDollar[3].union.restoreOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 265:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2703
		{
			sqlVAL.union.val = &tree.RestoreOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 266:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2707
		{
			sqlVAL.union.val = &tree.RestoreOptions{DecryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 267:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2711
		{
			sqlVAL.union.val = &tree.RestoreOptions{IntoDB: sqlDollar[3].union.expr()}
		}
	case 268:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2715
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingFKs: true}
		}
	case 269:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2719
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequences: true}
		}
	case 270:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2723
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequenceOwners: true}
		}
	case 271:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2727
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingViews: true}
		}
	case 272:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2731
		{
			sqlVAL.union.val = &tree.RestoreOptions{Detached: true}
		}
	case 273:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2737
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 274:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2743
		{
			return unimplemented(sqllex, "alter function")
		}
	case 275:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2781
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 276:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2786
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 277:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2790
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 278:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2796
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 279:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2801
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateFile: sqlDollar[6].union.expr(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 280:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2806
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateDefs: sqlDollar[5].union.tblDefs(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 281:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2811
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 282:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2816
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 283:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2820
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 284:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2836
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 285:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2839
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 286:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2843
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 287:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2847
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 288:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2855
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 289:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2859
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 290:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2865
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 291:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2869
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 292:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2875
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 293:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2879
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 294:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2883
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 295:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2887
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 296:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2893
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 297:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2897
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 298:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2903
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 299:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2907
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 300:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2911
		{
			sqlVAL.union.val = nil
		}
	case 301:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2923
		{

			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			if sqlDollar[7].union.expr() != nil {
				return unimplementedWithIssue(sqllex, 54580)
			}
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: *sqlDollar[6].union.copyOptions(),
			}
		}
	case 302:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2939
		{
			sqlVAL.union.val = sqlDollar[2].union.copyOptions()
		}
	case 303:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2943
		{
			sqlVAL.union.val = &tree.CopyOptions{}
		}
	case 304:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2949
		{
			sqlVAL.union.val = sqlDollar[1].union.copyOptions()
		}
	case 305:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2953
		{
			if err := sqlDollar[1].union.copyOptions().CombineWith(sqlDollar[2].union.copyOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 306:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2961
		{
			sqlVAL.union.val = &tree.CopyOptions{Destination: sqlDollar[3].union.expr()}
		}
	case 307:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2965
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatBinary}
		}
	case 308:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2969
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatCSV}
		}
	case 309:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2973
		{
			sqlVAL.union.val = &tree.CopyOptions{Delimiter: sqlDollar[2].union.expr()}
		}
	case 310:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2977
		{
			sqlVAL.union.val = &tree.CopyOptions{Null: sqlDollar[2].union.expr()}
		}
	case 312:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2985
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 314:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2986
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 316:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2987
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 317:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2988
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 318:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2998
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 319:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3006
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 320:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3008
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 321:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3012
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 322:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3015
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 323:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3025
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 324:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3034
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 325:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3042
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 326:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3044
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 327:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3048
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 328:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3051
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 329:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3061
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 330:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3070
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 331:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3078
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 332:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3080
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 333:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3084
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 334:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3087
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 335:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3091
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 336:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3095
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 337:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3099
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 338:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3112
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 339:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3115
		{
			return unimplemented(sqllex, "comment on extension")
		}
	case 340:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3119
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 341:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3124
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 343:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3136
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 346:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3138
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 348:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3139
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 352:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3142
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 353:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3143
		{
		}
	case 354:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3144
		{
			return helpWith(sqllex, "CREATE")
		}
	case 355:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3151
		{
			sqlVAL.union.val = &tree.CreateExtension{IfNotExists: true, Name: sqlDollar[6].str}
		}
	case 356:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3154
		{
			sqlVAL.union.val = &tree.CreateExtension{Name: sqlDollar[3].str}
		}
	case 357:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3157
		{
			return unimplemented(sqllex, "create extension if not exists with")
		}
	case 358:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3158
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 359:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3161
		{
			return unimplemented(sqllex, "create access method")
		}
	case 360:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3162
		{
			return unimplemented(sqllex, "create aggregate")
		}
	case 361:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3163
		{
			return unimplemented(sqllex, "create cast")
		}
	case 362:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3164
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 363:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3165
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 364:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3166
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 365:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3167
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 366:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3168
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 367:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3169
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 368:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3170
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 369:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3171
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 370:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3172
		{
			return unimplemented(sqllex, "create operator")
		}
	case 371:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3173
		{
			return unimplemented(sqllex, "create publication")
		}
	case 372:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3174
		{
			return unimplemented(sqllex, "create rule")
		}
	case 373:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3175
		{
			return unimplemented(sqllex, "create server")
		}
	case 374:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3176
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 375:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3177
		{
			return unimplementedWithIssueDetail(sqllex, 54113, "create tablespace")
		}
	case 376:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3178
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 377:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3179
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create trigger")
		}
	case 378:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3182
		{
		}
	case 379:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3183
		{
		}
	case 380:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3186
		{
		}
	case 381:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3187
		{
		}
	case 382:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3190
		{
		}
	case 383:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3191
		{
		}
	case 384:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3194
		{
			return unimplemented(sqllex, "drop access method")
		}
	case 385:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3195
		{
			return unimplemented(sqllex, "drop aggregate")
		}
	case 386:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3196
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 387:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3197
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 388:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3198
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 389:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3199
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 390:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3200
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[5].str)
		}
	case 391:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3201
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[3].str)
		}
	case 392:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3202
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 393:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3203
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 394:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3204
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 395:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3205
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 396:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3206
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 397:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3207
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 398:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3208
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 399:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3209
		{
			return unimplemented(sqllex, "drop server")
		}
	case 400:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3210
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 401:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3211
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 402:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3212
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 404:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3215
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 406:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3216
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 408:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3217
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 410:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3218
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 412:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3219
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 413:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3221
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 415:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3222
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 417:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3223
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 419:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3224
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 420:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3234
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 421:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3242
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 422:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3246
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 423:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3250
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 424:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3256
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 425:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3260
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 426:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3269
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 427:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3276
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 428:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3282
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 429:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3288
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 430:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3292
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 431:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3303
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 432:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3315
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 433:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3330
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 434:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3338
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 435:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3348
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[1].union.tablePatterns()}
		}
	case 436:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3352
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 437:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3358
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()}
		}
	case 438:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3362
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedObjectName().ToUnresolvedName())
		}
	case 439:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3369
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 440:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3373
		{

			sqlVAL.union.val = nil
		}
	case 441:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3390
		{
			sqlVAL.union.val = &tree.ReplicationStream{
				Targets: sqlDollar[5].union.targetList(),
				SinkURI: sqlDollar[6].union.expr(),
				Options: *sqlDollar[7].union.replicationOptions(),
			}
		}
	case 442:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3401
		{
			sqlVAL.union.val = sqlDollar[2].union.replicationOptions()
		}
	case 443:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3405
		{
			sqlVAL.union.val = sqlDollar[4].union.replicationOptions()
		}
	case 444:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3409
		{
			sqlVAL.union.val = &tree.ReplicationOptions{}
		}
	case 445:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3416
		{
			sqlVAL.union.val = sqlDollar[1].union.replicationOptions()
		}
	case 446:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3420
		{
			if err := sqlDollar[1].union.replicationOptions().CombineWith(sqlDollar[3].union.replicationOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 447:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3429
		{
			sqlVAL.union.val = &tree.ReplicationOptions{Cursor: sqlDollar[3].union.expr()}
		}
	case 448:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3433
		{
			sqlVAL.union.val = &tree.ReplicationOptions{Detached: true}
		}
	case 449:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3446
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 450:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3456
		{
			return helpWith(sqllex, "DELETE")
		}
	case 451:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3459
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 452:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3460
		{
		}
	case 453:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3468
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 454:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3471
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 455:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3472
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 456:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3473
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 457:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3474
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 458:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3475
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 461:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3484
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 463:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3485
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 464:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3486
		{
		}
	case 465:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3487
		{
			return helpWith(sqllex, "DROP")
		}
	case 467:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3490
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 469:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3491
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 471:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3492
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 473:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3493
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 475:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3494
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 477:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3495
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 479:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3496
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 480:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3504
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 481:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3508
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 482:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3512
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[4].union.tableNames(),
				IfExists:       false,
				DropBehavior:   sqlDollar[5].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 483:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3521
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[6].union.tableNames(),
				IfExists:       true,
				DropBehavior:   sqlDollar[7].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 484:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3529
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 485:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3537
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 486:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3541
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 487:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3544
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 488:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3552
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 489:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3556
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 490:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3559
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 491:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3567
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 492:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3576
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 493:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3584
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 494:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3592
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 495:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3600
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 496:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3607
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 497:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3614
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 498:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3622
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 499:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3629
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 500:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3633
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[1].union.unresolvedObjectNames()}
		}
	case 501:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3639
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 502:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3643
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 503:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3652
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[3].union.objectNamePrefixList(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 504:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3660
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[5].union.objectNamePrefixList(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 505:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3667
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 506:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3675
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.exprs(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 507:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3679
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.exprs(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 508:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3682
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 509:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3686
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 510:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3691
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 511:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3704
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 512:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3709
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 513:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3711
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 514:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3716
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 515:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3720
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 516:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3743
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 517:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3750
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 518:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3752
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 519:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3760
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 520:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3768
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 521:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3776
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 522:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3784
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 523:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3795
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 526:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3799
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 530:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3802
		{
			return helpWith(sqllex, "DELETE")
		}
	case 533:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3804
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 535:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3805
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 537:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3806
		{
			return helpWith(sqllex, "INSERT")
		}
	case 541:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3809
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 544:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3811
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 546:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3814
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 550:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3819
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 552:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3820
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 554:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3821
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 556:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3826
		{
			return helpWith(sqllex, "DELETE")
		}
	case 558:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3827
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 560:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3828
		{
			return helpWith(sqllex, "INSERT")
		}
	case 561:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3830
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 564:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3834
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 566:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3835
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 567:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3839
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 568:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3843
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 569:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3853
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 570:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3861
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 571:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3869
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 572:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3873
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 573:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3877
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 574:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3887
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 575:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3894
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 576:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3902
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 577:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3906
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 578:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3910
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 579:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3920
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 580:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3924
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 581:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3928
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 582:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3932
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 583:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3935
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 584:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3957
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 585:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3961
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 586:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3965
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: true}
		}
	case 587:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3969
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 588:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3973
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees: sqlDollar[7].union.nameList(),
			}
		}
	case 589:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3983
		{
			return unimplemented(sqllex, "grant privileges on sequence")
		}
	case 590:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3986
		{
			return helpWith(sqllex, "GRANT")
		}
	case 591:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4008
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 592:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4012
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 593:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4016
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.nameList(), AdminOption: true}
		}
	case 594:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4020
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 595:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4024
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees: sqlDollar[7].union.nameList(),
			}
		}
	case 596:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4034
		{
			return unimplemented(sqllex, "revoke privileges on sequence")
		}
	case 597:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4037
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 598:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4042
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 599:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4046
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 600:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4056
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 601:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4060
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 607:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4074
		{
			return helpWith(sqllex, "RESET")
		}
	case 609:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4075
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 610:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4083
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 611:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4087
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 612:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4090
		{
			return helpWith(sqllex, "RESET")
		}
	case 613:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4098
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 614:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4101
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 615:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4112
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 616:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4115
		{
			return helpWith(sqllex, "USE")
		}
	case 618:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4119
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 619:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4120
		{
		}
	case 620:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4121
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 621:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4122
		{
			return unimplementedWithIssue(sqllex, 32562)
		}
	case 623:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4126
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 625:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4127
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 627:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4128
		{
			return helpWith(sqllex, "USE")
		}
	case 630:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4144
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 631:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4159
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 632:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4162
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 633:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4180
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 634:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4188
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 635:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4192
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 636:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4196
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 637:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4202
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 638:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4206
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 639:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4212
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 640:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4216
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 641:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4220
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 642:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4224
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 643:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4228
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 644:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4239
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 645:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4242
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 648:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4252
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 649:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4268
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 650:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4272
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 651:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4277
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 652:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4296
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 653:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4299
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 654:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4301
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 655:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4304
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 656:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4308
		{

			varName := sqlDollar[1].union.strs()
			if len(varName) == 1 && varName[0] == "tracing" {
				sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[3].union.exprs()}
			} else {
				sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
			}
		}
	case 658:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4327
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 659:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4334
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 660:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4339
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 661:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4344
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 663:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4349
		{
			return unimplemented(sqllex, "set from current")
		}
	case 664:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4350
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 665:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4358
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 666:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4363
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 667:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4370
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 668:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4374
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 669:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4380
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 670:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4384
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 672:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4391
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 675:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4412
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 676:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4416
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 677:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4422
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 678:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4426
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 679:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4430
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 680:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4434
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 681:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4438
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 682:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4444
		{
			sqlVAL.union.val = tree.Low
		}
	case 683:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4448
		{
			sqlVAL.union.val = tree.Normal
		}
	case 684:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4452
		{
			sqlVAL.union.val = tree.High
		}
	case 685:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4463
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 686:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4467
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 687:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4471
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 689:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4476
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 690:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4480
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 692:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4495
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 694:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4496
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 696:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4497
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 698:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4498
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 700:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4499
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 702:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4500
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 704:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4501
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 706:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4502
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 709:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4504
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 711:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4505
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 713:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4506
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 715:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4507
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 717:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4508
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 720:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4510
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 722:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4511
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 724:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4512
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 727:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4514
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 730:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4516
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 732:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4517
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 734:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4518
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 736:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4519
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 738:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4520
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 740:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4521
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 742:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4522
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 744:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4523
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 746:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4524
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 748:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4525
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 750:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4526
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 752:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4527
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 754:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4528
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 756:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4529
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 757:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4530
		{
			return helpWith(sqllex, "SHOW")
		}
	case 759:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4536
		{
		}
	case 760:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4537
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 761:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4540
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 762:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4544
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 763:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4549
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 764:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4554
		{

			return purposelyUnimplemented(sqllex, "reindex schema", "CockroachDB does not require reindexing.")
		}
	case 765:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4559
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 766:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4564
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 767:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4574
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 768:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4575
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 769:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4576
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 773:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4587
		{
			sqlVAL.str = "client_encoding"
		}
	case 775:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4590
		{
			sqlVAL.str = "timezone"
		}
	case 776:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4591
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 777:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4605
		{
			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 778:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4609
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[7].union.unresolvedObjectName(), UsingJSON: true}
		}
	case 779:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4613
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 780:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4624
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 781:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4632
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 782:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4640
		{
			sqlVAL.union.val = &tree.ShowBackup{
				InCollection: sqlDollar[4].union.expr(),
			}
		}
	case 783:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4646
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 784:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4654
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:      tree.BackupDefaultDetails,
				Path:         sqlDollar[3].union.expr(),
				InCollection: sqlDollar[5].union.expr(),
				Options:      sqlDollar[6].union.kvOptions(),
			}
		}
	case 785:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4663
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:              tree.BackupDefaultDetails,
				ShouldIncludeSchemas: true,
				Path:                 sqlDollar[4].union.expr(),
				Options:              sqlDollar[5].union.kvOptions(),
			}
		}
	case 786:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4672
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 787:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4681
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 788:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4689
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 789:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4699
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 790:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4703
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 791:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4706
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 792:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4708
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 793:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4711
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 794:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4713
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 795:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4717
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 796:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4720
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 797:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4728
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 798:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4731
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 799:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4739
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 800:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4743
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 801:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4747
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 802:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4751
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 803:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4754
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 804:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4762
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 805:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4765
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 806:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4772
		{
			sqlVAL.union.val = &tree.ShowEnums{}
		}
	case 807:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4776
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
			}
		}
	case 808:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4786
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
			}
		}
	case 809:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4795
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 810:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4802
		{
			sqlVAL.union.val = &tree.ShowTypes{}
		}
	case 811:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4805
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 812:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4818
		{
			lst := sqlDollar[3].union.targetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.nameList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.nameList()}
			}
		}
	case 813:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4826
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 814:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4834
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 815:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4837
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 816:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4839
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 817:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4843
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 818:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4847
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 819:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4850
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 820:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4852
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 821:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4856
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 822:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4859
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 823:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4867
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 824:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4870
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 825:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4872
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 826:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4875
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 827:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4883
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 828:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4886
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 829:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4888
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 830:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4891
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 831:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4895
		{
			sqlVAL.union.val = true
		}
	case 832:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4897
		{
			sqlVAL.union.val = true
		}
	case 833:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4899
		{
			sqlVAL.union.val = false
		}
	case 836:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4916
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 837:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4920
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 838:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4923
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 839:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4924
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 840:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4926
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 841:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4930
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 842:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4934
		{
			sqlVAL.union.val = &tree.ShowJobs{Schedules: sqlDollar[3].union.slct()}
		}
	case 843:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4937
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 844:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4939
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 845:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4947
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 846:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4955
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 847:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4965
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ExecutorType:   sqlDollar[3].union.executorType(),
			}
		}
	case 848:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4971
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 849:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4973
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: sqlDollar[2].union.scheduleState(),
				ExecutorType:   sqlDollar[4].union.executorType(),
			}
		}
	case 850:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4979
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 851:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4981
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ScheduleID:     sqlDollar[3].union.expr(),
			}
		}
	case 852:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4987
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 853:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4991
		{
			sqlVAL.union.val = tree.ActiveSchedules
		}
	case 854:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4995
		{
			sqlVAL.union.val = tree.PausedSchedules
		}
	case 855:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5001
		{
			sqlVAL.union.val = tree.InvalidExecutor
		}
	case 856:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5005
		{
			sqlVAL.union.val = tree.ScheduledBackupExecutor
		}
	case 857:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5016
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 858:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5019
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 859:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5021
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 860:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5024
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 861:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5026
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 862:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5030
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 863:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5033
		{
			sqlVAL.union.val = true
		}
	case 864:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5034
		{
			sqlVAL.union.val = false
		}
	case 865:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5042
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 866:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5045
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 867:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5047
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 868:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5050
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 869:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5058
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 870:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5068
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 871:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5078
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 872:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5081
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 873:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5088
		{
			sqlVAL.union.val = &tree.ShowTransactions{Cluster: sqlDollar[2].union.bool()}
		}
	case 874:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5091
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 875:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5093
		{
			sqlVAL.union.val = &tree.ShowTransactions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 876:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5096
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 877:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5099
		{
			sqlVAL.union.val = true
		}
	case 878:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5100
		{
			sqlVAL.union.val = false
		}
	case 879:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5107
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 880:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5111
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 881:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5114
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 882:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5121
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 883:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5125
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 884:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5128
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 885:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5135
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 886:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5139
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 887:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5143
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{}
		}
	case 888:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5153
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 889:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5156
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 890:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5164
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 891:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5169
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 892:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5174
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 893:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5178
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 894:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5188
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 895:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5192
		{

			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 896:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5197
		{
			sqlVAL.union.val = &tree.ShowCreateAllTables{}
		}
	case 897:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5200
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 901:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5213
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 902:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5216
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 903:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5224
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 904:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5227
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 905:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5237
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 906:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5241
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 907:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5245
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 908:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5253
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 909:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5261
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 910:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5268
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 911:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5274
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 912:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5276
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 913:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5279
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 914:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5281
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 915:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5284
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 917:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5288
		{
		}
	case 918:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5297
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 919:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5305
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 920:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5311
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 921:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5320
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 922:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5325
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 923:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5329
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 924:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5332
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 925:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5341
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{}
		}
	case 926:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5345
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{
				DatabaseName: tree.Name(sqlDollar[6].str),
			}
		}
	case 927:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5361
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromCluster,
			}
		}
	case 928:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5367
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
			}
		}
	case 929:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5373
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromAllDatabases,
			}
		}
	case 930:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5379
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
				DatabaseName:    tree.Name(sqlDollar[5].str),
			}
		}
	case 931:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5386
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDefault,
			}
		}
	case 932:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5391
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 933:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5395
		{
			sqlVAL.union.val = &tree.ShowVar{Name: "locality"}
		}
	case 934:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5401
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 935:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5408
		{
			tmp := sqlDollar[2].union.targetList()
			sqlVAL.union.val = &tmp
		}
	case 936:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5413
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 937:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5533
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 938:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5537
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 939:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5541
		{

			sqlVAL.union.val = tree.TargetList{
				Tables:   tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 940:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5580
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}
		}
	case 941:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5584
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.TargetList{Tables: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}
		}
	case 942:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5589
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 943:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5593
		{
			tenID := uint64(sqlDollar[2].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TargetList{Tenant: roachpb.MakeTenantID(tenID)}
		}
	case 944:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5601
		{
			sqlVAL.union.val = tree.TargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 945:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5610
		{
			sqlVAL.union.val = tree.TargetList{ForRoles: true, Roles: sqlDollar[2].union.nameList()}
		}
	case 946:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5614
		{
			sqlVAL.union.val = tree.TargetList{Schemas: sqlDollar[2].union.objectNamePrefixList()}
		}
	case 947:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5618
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[2].union.unresolvedObjectNames()}
		}
	case 949:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5625
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 950:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5629
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 952:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5642
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 954:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5643
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 955:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5644
		{
			return helpWith(sqllex, "PAUSE")
		}
	case 957:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5654
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 959:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5655
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 960:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5656
		{
			return helpWith(sqllex, "RESUME")
		}
	case 961:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5666
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 962:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5674
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 963:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5676
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 964:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5680
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 965:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5683
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 966:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5688
		{
			sqlVAL.union.val = sqlDollar[3].union.slct()
		}
	case 967:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5692
		{
			sqlVAL.union.val = &tree.Select{
				Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
			}
		}
	case 968:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5707
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseSchedule,
			}
		}
	case 969:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5715
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 970:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5717
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.PauseSchedule,
			}
		}
	case 971:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5723
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 972:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5731
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
			}
		}
	case 973:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5737
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
			}
		}
	case 974:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5744
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:   sqlDollar[3].union.objectNamePrefix(),
				AuthRole: sqlDollar[5].union.user(),
			}
		}
	case 975:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5751
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
				AuthRole:    sqlDollar[8].union.user(),
			}
		}
	case 976:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5758
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 977:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5769
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 978:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5778
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaOwner{
					Owner: sqlDollar[6].union.user(),
				},
			}
		}
	case 979:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5786
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 980:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:5825
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      false,
				Interleave:       sqlDollar[9].union.interleave(),
				Defs:             sqlDollar[6].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[10].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[11].union.storageParams(),
				OnCommit:         sqlDollar[12].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[13].union.locality(),
			}
		}
	case 981:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:5841
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      true,
				Interleave:       sqlDollar[12].union.interleave(),
				Defs:             sqlDollar[9].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[13].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[14].union.storageParams(),
				OnCommit:         sqlDollar[15].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[16].union.locality(),
			}
		}
	case 982:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5859
		{
			sqlVAL.union.val = sqlDollar[1].union.locality()
		}
	case 983:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5863
		{
			sqlVAL.union.val = (*tree.Locality)(nil)
		}
	case 985:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5870
		{

			sqlVAL.union.val = nil
		}
	case 986:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5876
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 987:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5882
		{
			sqlVAL.str = ""
		}
	case 988:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5886
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "create table inherits")
		}
	case 989:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5892
		{
			sqlVAL.union.val = nil
		}
	case 990:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5896
		{
			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 991:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5901
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 992:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5905
		{
			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 993:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5909
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 994:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5913
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 995:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5919
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 996:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5923
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 997:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5929
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 998:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5933
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 999:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5939
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    nil,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1000:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:5953
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    nil,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5968
		{
		}
	case 1002:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5969
		{
		}
	case 1003:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5970
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 1004:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5988
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5989
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5990
		{
			sqlVAL.union.val = tree.PersistencePermanent
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5994
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1009:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5995
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1010:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5996
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5997
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5998
		{
			sqlVAL.union.val = tree.PersistenceUnlogged
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6003
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1015:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6009
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6013
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1017:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6019
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6025
		{
			def := sqlDollar[1].union.constraintDef()
			valBehavior := sqlDollar[2].union.validationBehavior()
			if u, ok := def.(*tree.UniqueConstraintTableDef); ok && valBehavior == tree.ValidationSkip {
				typ := "PRIMARY KEY"
				if !u.PrimaryKey {
					typ = "UNIQUE"
				}
				return purposelyUnimplemented(sqllex, "table constraint", typ+" constraints cannot be marked NOT VALID")
			}
			sqlVAL.union.val = def
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6038
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6047
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6051
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6057
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6062
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6063
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6064
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6065
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6066
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6067
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6068
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 1032:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6069
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6070
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 1034:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6075
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.InterleaveDef{
				Parent:       name,
				Fields:       sqlDollar[6].union.nameList(),
				DropBehavior: sqlDollar[8].union.dropBehavior(),
			}
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6084
		{
			sqlVAL.union.val = (*tree.InterleaveDef)(nil)
		}
	case 1036:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6091
		{

			sqlVAL.union.val = tree.DropCascade
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6096
		{

			sqlVAL.union.val = tree.DropRestrict
		}
	case 1038:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6101
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6107
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1041:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6114
		{
			sqlVAL.str = ""
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6121
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6127
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6135
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6141
		{
			sqlVAL.union.val = (*tree.PartitionByIndex)(nil)
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6147
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6153
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				All:         true,
				PartitionBy: sqlDollar[4].union.partitionBy(),
			}
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6163
		{
			sqlVAL.union.val = (*tree.PartitionByTable)(nil)
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6169
		{
			sqlVAL.union.val = sqlDollar[3].union.partitionBy()
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6175
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				List:   sqlDollar[6].union.listPartitions(),
			}
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6182
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				Range:  sqlDollar[6].union.rangePartitions(),
			}
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6189
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6195
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6199
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6205
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6215
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6219
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6225
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6239
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6250
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6254
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6260
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6264
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6268
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6272
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1068:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6276
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6280
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6284
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6302
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6306
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6310
		{
			sqlVAL.union.val = tree.HiddenConstraint{}
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6314
		{
			sqlVAL.union.val = tree.UniqueConstraint{
				WithoutIndex: sqlDollar[2].union.bool(),
			}
		}
	case 1075:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6320
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6324
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:      true,
				ShardBuckets: sqlDollar[8].union.expr(),
			}
		}
	case 1077:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6331
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 1078:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6335
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6339
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 1080:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6349
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: false}
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6353
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: true}
		}
	case 1082:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6357
		{
			sqllex.Error("use AS ( <expr> ) STORED or AS ( <expr> ) VIRTUAL")
			return 1
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6364
		{
			sqlVAL.union.val = true
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6368
		{
			sqlVAL.union.val = false
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6374
		{
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6375
		{
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6380
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[2].str),
				Columns:          sqlDollar[4].union.idxElems(),
				Sharded:          sqlDollar[6].union.shardedIndexDef(),
				Storing:          sqlDollar[7].union.nameList(),
				Interleave:       sqlDollar[8].union.interleave(),
				PartitionByIndex: sqlDollar[9].union.partitionByIndex(),
				StorageParams:    sqlDollar[10].union.storageParams(),
				Predicate:        sqlDollar[11].union.expr(),
			}
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:6393
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:             tree.Name(sqlDollar[3].str),
					Columns:          sqlDollar[5].union.idxElems(),
					Sharded:          sqlDollar[7].union.shardedIndexDef(),
					Storing:          sqlDollar[8].union.nameList(),
					Interleave:       sqlDollar[9].union.interleave(),
					PartitionByIndex: sqlDollar[10].union.partitionByIndex(),
					StorageParams:    sqlDollar[11].union.storageParams(),
					Predicate:        sqlDollar[12].union.expr(),
				},
			}
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6408
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[3].str),
				Columns:          sqlDollar[5].union.idxElems(),
				Inverted:         true,
				PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
				StorageParams:    sqlDollar[8].union.storageParams(),
				Predicate:        sqlDollar[9].union.expr(),
			}
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6421
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6433
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6438
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6444
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6451
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				WithoutIndex: sqlDollar[2].union.bool(),
				IndexTableDef: tree.IndexTableDef{
					Columns:          sqlDollar[4].union.idxElems(),
					Storing:          sqlDollar[6].union.nameList(),
					Interleave:       sqlDollar[7].union.interleave(),
					PartitionByIndex: sqlDollar[8].union.partitionByIndex(),
					Predicate:        sqlDollar[10].union.expr(),
				},
			}
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6464
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:    sqlDollar[4].union.idxElems(),
					Sharded:    sqlDollar[6].union.shardedIndexDef(),
					Interleave: sqlDollar[7].union.interleave(),
				},
				PrimaryKey: true,
			}
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6476
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6487
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6494
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6498
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6504
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6514
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6525
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6529
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6536
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6542
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns: sqlDollar[4].union.idxElems(),
				},
				PrimaryKey: true,
			}
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6553
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6557
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6563
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6569
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6573
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6579
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6583
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6589
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6594
		{
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6595
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6596
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6597
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6598
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6599
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6617
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6621
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1125:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6627
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[6].union.expr(),
			}
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6633
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6639
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1128:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6643
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6663
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6667
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6671
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6675
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6684
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6688
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 1135:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6692
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6696
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6700
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 1138:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6706
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6712
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6720
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6724
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6728
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6732
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6736
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6755
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:        name,
				Persistence: sqlDollar[2].union.persistence(),
				Options:     sqlDollar[5].union.seqOpts(),
			}
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6764
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
			}
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6772
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6776
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6779
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6780
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6783
		{
			return unimplementedWithIssueDetail(sqllex, 25110, sqlDollar[2].union.typeReference().SQLString())
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6784
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6786
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6787
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6788
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6798
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6801
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6803
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6805
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6807
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6808
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6810
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6811
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6813
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6815
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6823
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6826
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6830
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6834
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6844
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6848
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.expr(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6851
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6859
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6863
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.expr(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6866
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6872
		{
			sqlVAL.union.val = true
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6876
		{

			sqlVAL.union.val = true
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6881
		{
			sqlVAL.union.val = false
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6891
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6905
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Persistence: sqlDollar[4].union.persistence(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6917
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6929
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[5].union.nameList(),
				AsSource:     sqlDollar[7].union.slct(),
				Materialized: true,
			}
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6939
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[8].union.nameList(),
				AsSource:     sqlDollar[10].union.slct(),
				Materialized: true,
				IfNotExists:  true,
			}
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6949
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6953
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6957
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6961
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6965
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6969
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6973
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6977
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6981
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6985
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6989
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6993
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6997
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7001
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7005
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7009
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1201:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7013
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7017
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7021
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7030
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7034
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7040
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7044
		{
			sqlVAL.union.val = nil
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7050
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: sqlDollar[3].union.expr()}
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7054
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: tree.DNull}
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7059
		{
		}
	case 1213:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7060
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 1214:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7069
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.enumValueList(),
			}
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7077
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:    sqlDollar[6].union.unresolvedObjectName(),
				Variety:     tree.Enum,
				EnumLabels:  sqlDollar[10].union.enumValueList(),
				IfNotExists: true,
			}
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7085
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7087
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7089
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 1219:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7091
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7093
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7095
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7099
		{
			sqlVAL.union.val = sqlDollar[1].union.enumValueList()
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7103
		{
			sqlVAL.union.val = tree.EnumValueList(nil)
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7109
		{
			sqlVAL.union.val = tree.EnumValueList{tree.EnumValue(sqlDollar[1].str)}
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7113
		{
			sqlVAL.union.val = append(sqlDollar[1].union.enumValueList(), tree.EnumValue(sqlDollar[3].str))
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-17 : sqlpt+1]
//line sql-gen.y:7133
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[5].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Columns:          sqlDollar[10].union.idxElems(),
				Sharded:          sqlDollar[12].union.shardedIndexDef(),
				Storing:          sqlDollar[13].union.nameList(),
				Interleave:       sqlDollar[14].union.interleave(),
				PartitionByIndex: sqlDollar[15].union.partitionByIndex(),
				StorageParams:    sqlDollar[16].union.storageParams(),
				Predicate:        sqlDollar[17].union.expr(),
				Inverted:         sqlDollar[8].union.bool(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-20 : sqlpt+1]
//line sql-gen.y:7151
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[8].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Sharded:          sqlDollar[15].union.shardedIndexDef(),
				Storing:          sqlDollar[16].union.nameList(),
				Interleave:       sqlDollar[17].union.interleave(),
				PartitionByIndex: sqlDollar[18].union.partitionByIndex(),
				Inverted:         sqlDollar[11].union.bool(),
				StorageParams:    sqlDollar[19].union.storageParams(),
				Predicate:        sqlDollar[20].union.expr(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:7170
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[6].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				Columns:          sqlDollar[10].union.idxElems(),
				Storing:          sqlDollar[12].union.nameList(),
				Interleave:       sqlDollar[13].union.interleave(),
				PartitionByIndex: sqlDollar[14].union.partitionByIndex(),
				StorageParams:    sqlDollar[15].union.storageParams(),
				Predicate:        sqlDollar[16].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:7187
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[9].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Storing:          sqlDollar[15].union.nameList(),
				Interleave:       sqlDollar[16].union.interleave(),
				PartitionByIndex: sqlDollar[17].union.partitionByIndex(),
				StorageParams:    sqlDollar[18].union.storageParams(),
				Predicate:        sqlDollar[19].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7204
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7208
		{

			switch sqlDollar[2].str {
			case "gin", "gist":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7223
		{
			sqlVAL.union.val = false
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7229
		{
			sqlVAL.union.val = true
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7233
		{
			sqlVAL.union.val = false
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7239
		{
			sqlVAL.union.val = true
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7243
		{
			sqlVAL.union.val = false
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7249
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7253
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7262
		{
			e := sqlDollar[2].union.idxElem()
			e.Expr = sqlDollar[1].union.expr()
			sqlVAL.union.val = e
		}
	case 1240:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7268
		{
			e := sqlDollar[4].union.idxElem()
			e.Expr = sqlDollar[2].union.expr()
			sqlVAL.union.val = e
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7274
		{
			e := sqlDollar[2].union.idxElem()
			e.Column = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = e
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7282
		{

			opClass := sqlDollar[1].str
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			if opClass != "" {
				if opClass == "gin_trgm_ops" || opClass == "gist_trgm_ops" {
					return unimplementedWithIssueDetail(sqllex, 41285, "index using "+opClass)
				}
				return unimplementedWithIssue(sqllex, 47420)
			}

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = tree.IndexElem{Direction: dir, NullsOrder: nullsOrder}
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7306
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7307
		{
			sqlVAL.str = ""
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7310
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7311
		{
			sqlVAL.str = ""
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7315
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7319
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7323
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7329
		{
			sqlVAL.union.val = &tree.ReparentDatabase{Name: tree.Name(sqlDollar[3].str), Parent: tree.Name(sqlDollar[9].str)}
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7335
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7341
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7347
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7355
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false,
			}
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7361
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true,
			}
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7369
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Locality: sqlDollar[5].union.locality(),
				IfExists: false,
			}
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7377
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Locality: sqlDollar[7].union.locality(),
				IfExists: true,
			}
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7387
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7393
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[6].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7400
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7406
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[4].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7413
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7419
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7425
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7431
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7437
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel:       tree.LocalityLevelRow,
				RegionalByRowColumn: tree.Name(sqlDollar[6].str),
			}
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7444
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7450
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel:       tree.LocalityLevelRow,
				RegionalByRowColumn: tree.Name(sqlDollar[5].str),
			}
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7457
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7463
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel:       tree.LocalityLevelRow,
				RegionalByRowColumn: tree.Name(sqlDollar[5].str),
			}
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7470
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7476
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[4].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7483
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7489
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7495
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel:       tree.LocalityLevelRow,
				RegionalByRowColumn: tree.Name(sqlDollar[7].str),
			}
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7502
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7508
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[3].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7515
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7521
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7527
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel:       tree.LocalityLevelRow,
				RegionalByRowColumn: tree.Name(sqlDollar[6].str),
			}
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7534
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7540
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[6].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7547
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7553
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7559
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel:       tree.LocalityLevelRow,
				RegionalByRowColumn: tree.Name(sqlDollar[6].str),
			}
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7568
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.user(),
				IfExists: false,
			}
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7576
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.user(),
				IfExists: true,
			}
		}
	case 1288:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7586
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsView: true,
			}
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7592
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[7].str),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7602
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsView: true,
			}
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7608
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[9].str),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7620
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.user(),
				IfExists: false,
				IsView:   true,
			}
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7629
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Owner:          sqlDollar[7].union.user(),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7639
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.user(),
				IfExists: true,
				IsView:   true,
			}
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7648
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Owner:          sqlDollar[9].union.user(),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7660
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsSequence: true,
			}
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7666
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsSequence: true,
			}
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7674
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[3].union.unresolvedObjectName(),
				Owner:      sqlDollar[6].union.user(),
				IfExists:   false,
				IsSequence: true,
			}
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7683
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[5].union.unresolvedObjectName(),
				Owner:      sqlDollar[8].union.user(),
				IfExists:   true,
				IsSequence: true,
			}
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7694
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1301:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7700
		{
			name := sqlDollar[4].union.unresolvedObjectName()
			newName := sqlDollar[7].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7712
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7718
		{
			name := sqlDollar[6].union.unresolvedObjectName()
			newName := sqlDollar[9].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7732
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7738
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7746
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7750
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7755
		{
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7756
		{
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7759
		{
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7760
		{
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7768
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7771
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7781
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7789
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7791
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7795
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1318:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7798
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7811
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeSchedule,
			}
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7819
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7821
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.ResumeSchedule,
			}
		}
	case 1322:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7827
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1323:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7840
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.DropSchedule,
			}
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7848
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7850
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.DropSchedule,
			}
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7856
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7864
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7867
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1330:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7871
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7872
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7873
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7889
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7892
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7894
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7897
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7907
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7910
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7912
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7915
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7919
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7924
		{
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7925
		{
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7926
		{
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7936
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7940
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7943
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7946
		{
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7947
		{
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7951
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7955
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7961
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7965
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7971
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7975
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7988
		{
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7990
		{
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7994
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7999
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8003
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8007
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8011
		{
			sqlVAL.union.val = tree.TransactionModes{Deferrable: sqlDollar[1].union.deferrableMode()}
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8017
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8023
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8029
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8033
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8039
		{
			sqlVAL.union.val = tree.Deferrable
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8043
		{
			sqlVAL.union.val = tree.NotDeferrable
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:8053
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:            tree.Name(sqlDollar[3].str),
				Template:        sqlDollar[5].str,
				Encoding:        sqlDollar[6].str,
				Collate:         sqlDollar[7].str,
				CType:           sqlDollar[8].str,
				ConnectionLimit: sqlDollar[9].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[10].str),
				Regions:         sqlDollar[11].union.nameList(),
				SurvivalGoal:    sqlDollar[12].union.survivalGoal(),
			}
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:8067
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists:     true,
				Name:            tree.Name(sqlDollar[6].str),
				Template:        sqlDollar[8].str,
				Encoding:        sqlDollar[9].str,
				Collate:         sqlDollar[10].str,
				CType:           sqlDollar[11].str,
				ConnectionLimit: sqlDollar[12].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[13].str),
				Regions:         sqlDollar[14].union.nameList(),
				SurvivalGoal:    sqlDollar[15].union.survivalGoal(),
			}
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8081
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8086
		{
			sqlVAL.str = ""
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8091
		{
			sqlVAL.str = sqlDollar[4].str
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8097
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8101
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8107
		{

		}
	case 1382:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8114
		{
			sqlVAL.union.val = tree.SurvivalGoalRegionFailure
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8118
		{
			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8122
		{

			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8131
		{
			sqlVAL.union.val = tree.SurvivalGoalDefault
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8137
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8141
		{
			sqlVAL.str = ""
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8147
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8151
		{
			sqlVAL.str = ""
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8157
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8161
		{
			sqlVAL.str = ""
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8167
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8171
		{
			sqlVAL.str = ""
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8177
		{
			ret, err := sqlDollar[4].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = ret
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8185
		{
			sqlVAL.union.val = int32(-1)
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8190
		{
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8191
		{
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8206
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8213
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1401:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8220
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8231
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8238
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8242
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8251
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8256
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8262
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8266
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8270
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8276
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8280
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8300
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8304
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:   tree.NameList(nil),
				DoNothing: true,
			}
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8311
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				DoNothing:        true,
			}
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8319
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				Exprs:            sqlDollar[10].union.updateExprs(),
				Where:            tree.NewWhere(tree.AstWhere, sqlDollar[11].union.expr()),
			}
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8327
		{
			return unimplementedWithIssue(sqllex, 28161)
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8331
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8336
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8340
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8357
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8369
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8372
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8375
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8381
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8385
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8398
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8401
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8405
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8416
		{
			sqlVAL.union.val = &tree.ReassignOwnedBy{
				OldRoles: sqlDollar[4].union.users(),
				NewRole:  sqlDollar[6].union.user(),
			}
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8422
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8431
		{
			sqlVAL.union.val = &tree.DropOwnedBy{
				Roles:        sqlDollar[4].union.users(),
				DropBehavior: sqlDollar[5].union.dropBehavior(),
			}
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8437
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 1437:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8478
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8484
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1439:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8488
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8503
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8507
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8511
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8515
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8519
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8523
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8527
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8531
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8536
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8537
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8540
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8541
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8545
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8549
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8555
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8564
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8565
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8566
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8567
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8570
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1460:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8571
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8574
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1462:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8575
		{
			sqlVAL.union.val = tree.LockWaitSkip
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8576
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1464:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8581
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1468:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8616
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1470:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8617
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1472:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8618
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8640
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8653
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8667
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8679
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8683
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8692
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8701
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8716
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8723
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8735
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8739
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8744
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8750
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8754
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8760
		{
			sqlVAL.union.val = true
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8764
		{
			sqlVAL.union.val = false
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8770
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8780
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8792
		{
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8793
		{
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8797
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8801
		{
			sqlVAL.union.val = nil
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8806
		{
		}
	case 1497:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8807
		{
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8811
		{
			sqlVAL.union.val = true
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8815
		{
			sqlVAL.union.val = false
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8819
		{
			sqlVAL.union.val = false
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8825
		{
			sqlVAL.union.val = true
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8831
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8836
		{
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8837
		{
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8840
		{
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8841
		{
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8845
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8849
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8855
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8861
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8865
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8872
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8876
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8882
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8903
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8908
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8920
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8924
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1519:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8928
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8937
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1521:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8946
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1524:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8957
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1525:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8958
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8962
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8966
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8970
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8984
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8988
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8996
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9003
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9025
		{
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9026
		{
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9029
		{
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9030
		{
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9047
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9051
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9056
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9057
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9063
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9064
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "rollup")
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9065
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "cube")
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9066
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "grouping sets")
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9070
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9074
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9093
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9096
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9098
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9110
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9113
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9115
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9121
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9125
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9131
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9135
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9140
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1562:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9145
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9151
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9156
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9163
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9168
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9179
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9183
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9187
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9195
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9226
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1572:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9236
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1573:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9246
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1574:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9254
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1575:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9263
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9267
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9271
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9282
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9306
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9312
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9323
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9327
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9333
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9335
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9339
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9345
		{
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9347
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9350
		{
			sqlVAL.union.val = nil
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9351
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9352
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9356
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9360
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9366
		{
			sqlVAL.union.val = true
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9370
		{
			sqlVAL.union.val = false
		}
	case 1595:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9390
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9394
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9398
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9402
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9406
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9410
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1601:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9416
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9420
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9427
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 1605:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9433
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9440
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9446
		{
			sqlVAL.str = tree.AstFull
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9450
		{
			sqlVAL.str = tree.AstLeft
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9454
		{
			sqlVAL.str = tree.AstRight
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9458
		{
			sqlVAL.str = tree.AstInner
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9464
		{
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9465
		{
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9489
		{
			sqlVAL.str = tree.AstHash
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9493
		{
			sqlVAL.str = tree.AstMerge
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9497
		{
			sqlVAL.str = tree.AstLookup
		}
	case 1617:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9501
		{
			sqlVAL.str = tree.AstInverted
		}
	case 1618:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9505
		{
			sqlVAL.str = ""
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9518
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 1620:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9522
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9527
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9528
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9529
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9530
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9534
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9539
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9553
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9557
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 1629:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9563
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 1630:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9569
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9579
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[3].union.indexFlags(),
			}
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9589
		{
			sqlVAL.union.val = true
		}
	case 1633:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9593
		{
			sqlVAL.union.val = false
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9599
		{
			sqlVAL.union.val = true
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9603
		{
			sqlVAL.union.val = false
		}
	case 1636:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9609
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9616
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9628
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9641
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1641:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9649
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1642:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9650
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1643:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9660
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1644:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9667
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9668
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1646:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9670
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9678
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1648:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9679
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 1650:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9691
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9698
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1652:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9707
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.MakeQChar(0)
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9747
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.OIDTypeReference{OID: oid.Oid(id)}
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9752
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9759
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9760
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9763
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9764
		{
			sqlVAL.union.val = geopb.ShapeType_PointM
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9765
		{
			sqlVAL.union.val = geopb.ShapeType_PointZ
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9766
		{
			sqlVAL.union.val = geopb.ShapeType_PointZM
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9767
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9768
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringM
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9769
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZ
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9770
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZM
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9771
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9772
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonM
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9773
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZ
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9774
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZM
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9775
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 1674:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9776
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointM
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9777
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZ
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9778
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZM
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9779
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9780
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringM
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9781
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZ
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9782
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZM
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9783
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9784
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonM
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9785
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZ
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9786
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZM
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9787
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9788
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionM
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9789
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZ
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9790
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZM
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9791
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9792
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryM
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9793
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZ
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9794
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZM
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9797
		{
			sqlVAL.union.val = types.Geography
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9798
		{
			sqlVAL.union.val = types.Geometry
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9799
		{
			sqlVAL.union.val = types.Box2D
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9801
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9805
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9809
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9817
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1705:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9843
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1706:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9851
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1707:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9859
		{
			sqlVAL.union.val = nil
		}
	case 1708:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9866
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1709:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9870
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1710:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9874
		{
			sqlVAL.union.val = types.Int2
		}
	case 1711:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9878
		{
			sqlVAL.union.val = types.Int
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9882
		{
			sqlVAL.union.val = types.Float4
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9886
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9890
		{
			sqlVAL.union.val = types.Float
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9894
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9902
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9910
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1718:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9918
		{
			sqlVAL.union.val = types.Bool
		}
	case 1719:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9924
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 1720:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9937
		{
			sqlVAL.union.val = types.Float
		}
	case 1721:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9943
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1722:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9949
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1723:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9957
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 1724:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9961
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1725:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9965
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1726:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9971
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 1727:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9983
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1728:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9989
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 1729:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9993
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1730:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9997
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1731:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10001
		{
			sqlVAL.union.val = types.String
		}
	case 1734:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10010
		{
			sqlVAL.union.val = true
		}
	case 1735:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10011
		{
			sqlVAL.union.val = false
		}
	case 1736:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10016
		{
			sqlVAL.union.val = types.Date
		}
	case 1737:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10020
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 1738:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10028
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 1739:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10040
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 1740:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10042
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 1741:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10051
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 1742:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10059
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 1743:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10072
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 1744:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10076
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 1745:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10086
		{
			sqlVAL.union.val = true
		}
	case 1746:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10087
		{
			sqlVAL.union.val = false
		}
	case 1747:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10088
		{
			sqlVAL.union.val = false
		}
	case 1748:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10092
		{
			sqlVAL.union.val = types.Interval
		}
	case 1749:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10096
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 1750:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10100
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 1751:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10111
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 1752:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10119
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1753:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10127
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 1754:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10135
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1755:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10143
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1756:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10151
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 1757:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10157
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1758:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10166
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1759:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10175
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1760:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10184
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 1761:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10190
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1762:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10199
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 1763:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10205
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 1765:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10215
		{
			sqlVAL.union.val = nil
		}
	case 1766:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10221
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 1767:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10229
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 1769:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10266
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1770:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10270
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1771:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10274
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 1772:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10278
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 1773:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10289
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1774:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10294
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1775:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10298
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1776:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10302
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnarySqrt, Expr: sqlDollar[2].union.expr()}
		}
	case 1777:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10306
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryCbrt, Expr: sqlDollar[2].union.expr()}
		}
	case 1778:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10310
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1779:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10314
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1780:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10318
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1781:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10322
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1782:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10326
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1783:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10330
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1784:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10334
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1785:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10338
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1786:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10342
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1787:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10346
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1788:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10350
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1789:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10354
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1790:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10358
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1791:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10362
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONSomeExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1792:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10366
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONAllExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1793:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10370
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Contains, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1794:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10374
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ContainedBy, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1795:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10378
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1796:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10382
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1797:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10386
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1798:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10390
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1799:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10394
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchVal, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1800:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10398
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchText, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1801:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10402
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchValPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1802:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10406
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchTextPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1803:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10410
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1804:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10414
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1805:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10418
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Overlaps, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1806:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10422
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1807:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10426
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1808:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10430
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1809:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10434
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1810:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10438
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1811:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10442
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1812:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10446
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1813:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10450
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1814:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10454
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Like, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1815:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10458
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1816:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10462
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotLike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1817:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10466
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1818:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10470
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1819:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10474
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1820:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10478
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1821:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10482
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1822:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10486
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.SimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1823:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10490
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1824:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10494
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotSimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1825:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10498
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 1826:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10502
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1827:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10506
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1828:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10510
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1829:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10514
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1830:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10518
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1831:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10522
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1832:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10526
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1833:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10530
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1834:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10534
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1835:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10538
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1836:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10541
		{
			return unimplemented(sqllex, "overlaps")
		}
	case 1837:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10543
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1838:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10547
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1839:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10551
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1840:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10555
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1841:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10559
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1842:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10563
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1843:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10567
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1844:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10571
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1845:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10575
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1846:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10579
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1847:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10583
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1848:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10587
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1849:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10591
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1850:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10595
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1851:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10599
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.In, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1852:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10603
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotIn, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1853:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10607
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(tree.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 1854:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10624
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1855:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10629
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 1857:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10641
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1858:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10645
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1859:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10649
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1860:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10653
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1861:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10657
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1862:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10661
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1863:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10665
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1864:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10669
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1865:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10673
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1866:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10677
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1867:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10681
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1868:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10685
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1869:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10689
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1870:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10693
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1871:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10697
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1872:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10701
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1873:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10705
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1874:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10709
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1875:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10713
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1876:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10717
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1877:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10721
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1878:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10725
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1879:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10729
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1880:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10733
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1881:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10737
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1882:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10741
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1883:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10745
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1884:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10749
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1886:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10763
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 1888:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10771
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 1889:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10807
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1890:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10811
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1891:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10815
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 1892:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10819
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 1893:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10823
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1894:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10828
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 1895:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10830
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1896:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10834
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1897:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10838
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 1898:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10842
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 1899:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10846
		{
			sqlVAL.union.val = tree.DNull
		}
	case 1900:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10850
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 1901:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10854
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 1902:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10863
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 1903:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10870
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 1904:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10874
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: sqlDollar[5].str}
		}
	case 1905:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10878
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil || idx <= 0 {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 1906:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10884
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1908:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10889
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1909:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10893
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1910:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10897
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1911:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10901
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 1912:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10905
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1913:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10908
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 1914:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10912
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 1915:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10916
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1916:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10919
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1917:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10920
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1918:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10922
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1919:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10928
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 1920:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10932
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 1921:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10935
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 1922:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10944
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.MakeQChar(0), SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var err error
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							typ, err = name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 1923:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10997
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 1924:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11010
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 1925:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11022
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1926:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11031
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1927:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11032
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1928:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11037
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 1929:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11041
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1930:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11045
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1931:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11051
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 1932:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11055
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1933:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11059
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1934:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11063
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1935:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11067
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1936:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11071
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1937:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11077
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1938:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11081
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1939:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11085
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1940:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11089
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 1941:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11093
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 1942:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11097
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 1943:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11101
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 1944:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11105
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 1945:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11109
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 1946:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11113
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 1947:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11117
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 1948:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11121
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1949:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11125
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 1951:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11132
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1952:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11135
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1953:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11137
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1954:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11140
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1955:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11142
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1956:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11146
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1957:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11149
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1958:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11151
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1959:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11155
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1960:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11158
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1961:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11160
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1962:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11164
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1963:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11167
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1964:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11169
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1965:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11173
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1966:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11176
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1967:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11178
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1968:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11181
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1969:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11183
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1970:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11186
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1971:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11188
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1972:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11191
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1973:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11193
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1974:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11196
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1975:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11198
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1976:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11202
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1977:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11205
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1978:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11206
		{
			return unimplemented(sqllex, "treat")
		}
	case 1979:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11208
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1980:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11212
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1981:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11216
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1982:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11220
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1983:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11224
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1984:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11227
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1985:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11229
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1986:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11232
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1987:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11238
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 1988:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11242
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 1989:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11248
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 1990:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11252
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1991:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11259
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 1992:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11263
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 1993:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11269
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 1994:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11273
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 1995:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11279
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 1996:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11287
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 1997:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11291
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1998:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11295
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 1999:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11302
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 2001:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11322
		{
			sqlVAL.str = ""
		}
	case 2002:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11328
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 2003:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11332
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2004:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11338
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2005:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11346
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2006:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11354
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2007:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11362
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 2008:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11368
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == tree.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 2009:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11381
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == tree.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == tree.CurrentRow && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 2010:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11409
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedPreceding}
		}
	case 2011:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11413
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedFollowing}
		}
	case 2012:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11417
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.CurrentRow}
		}
	case 2013:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11421
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetPreceding,
			}
		}
	case 2014:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11428
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetFollowing,
			}
		}
	case 2015:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11437
		{
			sqlVAL.union.val = tree.ExcludeCurrentRow
		}
	case 2016:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11441
		{
			sqlVAL.union.val = tree.ExcludeGroup
		}
	case 2017:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11445
		{
			sqlVAL.union.val = tree.ExcludeTies
		}
	case 2018:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11449
		{

			sqlVAL.union.val = tree.NoExclusion
		}
	case 2019:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11454
		{
			sqlVAL.union.val = tree.NoExclusion
		}
	case 2020:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11467
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 2021:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11471
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2023:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11478
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 2024:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11490
		{
			sqlVAL.union.val = tree.Any
		}
	case 2025:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11494
		{
			sqlVAL.union.val = tree.Some
		}
	case 2026:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11498
		{
			sqlVAL.union.val = tree.All
		}
	case 2027:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11503
		{
			sqlVAL.union.val = tree.Plus
		}
	case 2028:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11504
		{
			sqlVAL.union.val = tree.Minus
		}
	case 2029:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11505
		{
			sqlVAL.union.val = tree.Mult
		}
	case 2030:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11506
		{
			sqlVAL.union.val = tree.Div
		}
	case 2031:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11507
		{
			sqlVAL.union.val = tree.FloorDiv
		}
	case 2032:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11508
		{
			sqlVAL.union.val = tree.Mod
		}
	case 2033:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11509
		{
			sqlVAL.union.val = tree.Bitand
		}
	case 2034:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11510
		{
			sqlVAL.union.val = tree.Bitor
		}
	case 2035:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11511
		{
			sqlVAL.union.val = tree.Pow
		}
	case 2036:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11512
		{
			sqlVAL.union.val = tree.Bitxor
		}
	case 2037:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11513
		{
			sqlVAL.union.val = tree.LT
		}
	case 2038:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11514
		{
			sqlVAL.union.val = tree.GT
		}
	case 2039:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11515
		{
			sqlVAL.union.val = tree.EQ
		}
	case 2040:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11516
		{
			sqlVAL.union.val = tree.LE
		}
	case 2041:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11517
		{
			sqlVAL.union.val = tree.GE
		}
	case 2042:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11518
		{
			sqlVAL.union.val = tree.NE
		}
	case 2044:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11522
		{
			sqlVAL.union.val = tree.Like
		}
	case 2045:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11523
		{
			sqlVAL.union.val = tree.NotLike
		}
	case 2046:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11524
		{
			sqlVAL.union.val = tree.ILike
		}
	case 2047:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11525
		{
			sqlVAL.union.val = tree.NotILike
		}
	case 2048:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11548
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2049:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11552
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2050:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11558
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2051:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11562
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2052:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11566
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2053:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11577
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2054:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11581
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2055:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11587
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2056:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11591
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2058:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11598
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2059:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11604
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2060:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11608
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2061:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11614
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 2062:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11618
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 2063:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11624
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2064:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11628
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2065:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11634
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2066:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11638
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2067:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11644
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(strings.ToLower(sqlDollar[1].str)), sqlDollar[3].union.expr()}
		}
	case 2068:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11648
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2077:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11671
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 2078:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11675
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2079:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11679
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2080:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11685
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2081:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11692
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 2082:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11696
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2083:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11713
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2084:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11717
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2085:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11721
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2086:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11725
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 2087:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11729
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2088:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11735
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2089:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11741
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2090:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11747
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 2091:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11751
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 2092:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11755
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2093:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11761
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2095:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11773
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 2096:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11780
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 2097:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11784
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 2098:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11790
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 2099:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11796
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2100:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11800
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2102:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11807
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2103:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11813
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 2104:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11817
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 2106:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11824
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2107:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11830
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 2108:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11834
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 2109:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11839
		{
		}
	case 2110:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11840
		{
		}
	case 2111:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11844
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 2112:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11848
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 2113:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11854
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 2114:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11863
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 2115:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11867
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2116:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11871
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 2117:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11879
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 2118:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11883
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 2119:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11889
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 2120:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11893
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 2121:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11912
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 2122:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11920
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 2123:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11943
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2125:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11952
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2126:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11956
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2127:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11960
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2128:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11964
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 2129:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11970
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 2130:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11974
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 2135:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11989
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2136:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11993
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2139:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12005
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2140:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12009
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2141:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12018
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2142:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12029
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2143:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12038
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2144:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12046
		{
			var err error
			var d tree.Datum
			if sqlDollar[3].union.val == nil {
				d, err = tree.ParseDInterval(sqlDollar[2].str)
			} else {
				d, err = tree.ParseDIntervalWithTypeMetadata(sqlDollar[2].str, sqlDollar[3].union.intervalTypeMetadata())
			}
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 2145:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12058
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			d, err := tree.ParseDIntervalWithTypeMetadata(sqlDollar[5].str, types.IntervalTypeMetadata{
				Precision:      prec,
				PrecisionIsSet: true,
			})
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 2164:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12139
		{
			sqlVAL.union.val = sqlDollar[1].union.nameList()
		}
	case 2166:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12147
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{SchemaName: tree.Name(sqlDollar[1].str), ExplicitSchema: true}
		}
	case 2167:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12151
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{CatalogName: tree.Name(sqlDollar[1].str), SchemaName: tree.Name(sqlDollar[3].str), ExplicitCatalog: true, ExplicitSchema: true}
		}
	case 2168:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12157
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{sqlDollar[1].union.objectNamePrefix()}
		}
	case 2169:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12161
		{
			sqlVAL.union.val = append(sqlDollar[1].union.objectNamePrefixList(), sqlDollar[3].union.objectNamePrefix())
		}
	case 2171:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12169
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{ExplicitSchema: false}
		}
	case 2176:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12194
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2178:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12201
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2179:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12205
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2180:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12209
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2182:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12223
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2183:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12227
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2184:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12231
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2185:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12244
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2187:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12253
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2191:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12271
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2192:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12284
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2193:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12291
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2201:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12316
		{
			sqlVAL.str = ""
		}
	case 2202:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12322
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 2203:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12326
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
