// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"math"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/security/username"
	"github.com/cockroachdb/cockroach/pkg/sql/lexbase"
	"github.com/cockroachdb/cockroach/pkg/sql/pgwire/pgcode"
	"github.com/cockroachdb/cockroach/pkg/sql/pgwire/pgerror"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/scanner"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree/treebin"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree/treecmp"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree/treewindow"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
	"github.com/lib/pq/oid"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}

func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

func processBinaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	lhs tree.Expr,
	rhs tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case treebin.BinaryOperator:
		op.IsExplicitOperator = true
		return &tree.BinaryExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case treecmp.ComparisonOperator:
		op.IsExplicitOperator = true
		return &tree.ComparisonExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case tree.UnaryOperator:

		switch op.Symbol {
		case tree.UnaryComplement:
			return &tree.ComparisonExpr{
				Operator: treecmp.ComparisonOperator{
					Symbol:             treecmp.RegMatch,
					IsExplicitOperator: true,
				},
				Left:  lhs,
				Right: rhs,
			}, 0
		default:
			sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
			return nil, -1
		}
	default:
		sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
		return nil, 1
	}
}

func processUnaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	e, code := processUnaryQualOpInternal(sqllex, op, expr)
	if code != 0 {
		return e, code
	}
	if e, ok := e.(*tree.UnaryExpr); ok {
		e.Operator.IsExplicitOperator = true
	}
	return e, code
}

func processUnaryQualOpInternal(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case tree.UnaryOperator:
		return &tree.UnaryExpr{Operator: op, Expr: expr}, 0
	case treebin.BinaryOperator:

		switch op.Symbol {
		case treebin.Plus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryPlus),
				Expr:     expr,
			}, 0
		case treebin.Minus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryMinus),
				Expr:     expr,
			}, 0
		}
	case treecmp.ComparisonOperator:
		switch op.Symbol {
		case treecmp.RegMatch:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryComplement),
				Expr:     expr,
			}, 0
		}
	}
	sqllex.Error(fmt.Sprintf("unknown unary operator %s", op))
	return nil, 1
}

//line sql-gen.y:170

var _ scanner.ScanSymType = &sqlSymType{}

func (s *sqlSymType) ID() int32 {
	return s.id
}

func (s *sqlSymType) SetID(id int32) {
	s.id = id
}

func (s *sqlSymType) Pos() int32 {
	return s.pos
}

func (s *sqlSymType) SetPos(pos int32) {
	s.pos = pos
}

func (s *sqlSymType) Str() string {
	return s.str
}

func (s *sqlSymType) SetStr(str string) {
	s.str = str
}

func (s *sqlSymType) UnionVal() interface{} {
	return s.union.val
}

func (s *sqlSymType) SetUnionVal(val interface{}) {
	s.union.val = val
}

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) roleSpec() tree.RoleSpec {
	return u.val.(tree.RoleSpec)
}
func (u *sqlSymUnion) roleSpecList() tree.RoleSpecList {
	return u.val.(tree.RoleSpecList)
}
func (u *sqlSymUnion) user() username.SQLUsername {
	return u.val.(username.SQLUsername)
}
func (u *sqlSymUnion) userPtr() *username.SQLUsername {
	return u.val.(*username.SQLUsername)
}
func (u *sqlSymUnion) users() []username.SQLUsername {
	return u.val.([]username.SQLUsername)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) enumValueList() tree.EnumValueList {
	return u.val.(tree.EnumValueList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) storageParamKeys() []tree.Name {
	if params, ok := u.val.([]tree.Name); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistence() tree.Persistence {
	return u.val.(tree.Persistence)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) backupTargetList() tree.BackupTargetList {
	return u.val.(tree.BackupTargetList)
}
func (u *sqlSymUnion) backupTargetListPtr() *tree.BackupTargetList {
	return u.val.(*tree.BackupTargetList)
}
func (u *sqlSymUnion) grantTargetList() tree.GrantTargetList {
	return u.val.(tree.GrantTargetList)
}
func (u *sqlSymUnion) grantTargetListPtr() *tree.GrantTargetList {
	return u.val.(*tree.GrantTargetList)
}
func (u *sqlSymUnion) changefeedTargets() tree.ChangefeedTargets {
	return u.val.(tree.ChangefeedTargets)
}
func (u *sqlSymUnion) changefeedTarget() tree.ChangefeedTarget {
	return u.val.(tree.ChangefeedTarget)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() treewindow.WindowFrameExclusion {
	return u.val.(treewindow.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterChangefeedCmd() tree.AlterChangefeedCmd {
	return u.val.(tree.AlterChangefeedCmd)
}
func (u *sqlSymUnion) alterChangefeedCmds() tree.AlterChangefeedCmds {
	return u.val.(tree.AlterChangefeedCmds)
}
func (u *sqlSymUnion) backupKMS() tree.BackupKMS {
	return u.val.(tree.BackupKMS)
}
func (u *sqlSymUnion) alterBackupCmd() tree.AlterBackupCmd {
	return u.val.(tree.AlterBackupCmd)
}
func (u *sqlSymUnion) alterBackupCmds() tree.AlterBackupCmds {
	return u.val.(tree.AlterBackupCmds)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) deferrableMode() tree.DeferrableMode {
	return u.val.(tree.DeferrableMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) partitionByTable() *tree.PartitionByTable {
	return u.val.(*tree.PartitionByTable)
}
func (u *sqlSymUnion) partitionByIndex() *tree.PartitionByIndex {
	return u.val.(*tree.PartitionByIndex)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) relocateSubject() tree.RelocateSubject {
	return u.val.(tree.RelocateSubject)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() treecmp.ComparisonOperator {
	return u.val.(treecmp.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) copyOptions() *tree.CopyOptions {
	return u.val.(*tree.CopyOptions)
}
func (u *sqlSymUnion) showBackupDetails() tree.ShowBackupDetails {
	return u.val.(tree.ShowBackupDetails)
}
func (u *sqlSymUnion) restoreOptions() *tree.RestoreOptions {
	return u.val.(*tree.RestoreOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) stringOrPlaceholderOptList() tree.StringOrPlaceholderOptList {
	return u.val.(tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) listOfStringOrPlaceholderOptList() []tree.StringOrPlaceholderOptList {
	return u.val.([]tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) fullBackupClause() *tree.FullBackupClause {
	return u.val.(*tree.FullBackupClause)
}
func (u *sqlSymUnion) scheduleLabelSpec() *tree.LabelSpec {
	return u.val.(*tree.LabelSpec)
}
func (u *sqlSymUnion) labelSpec() *tree.LabelSpec {
	return u.val.(*tree.LabelSpec)
}

func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}
func (u *sqlSymUnion) scheduleState() tree.ScheduleState {
	return u.val.(tree.ScheduleState)
}
func (u *sqlSymUnion) executorType() tree.ScheduledJobExecutorType {
	return u.val.(tree.ScheduledJobExecutorType)
}
func (u *sqlSymUnion) refreshDataOption() tree.RefreshDataOption {
	return u.val.(tree.RefreshDataOption)
}
func (u *sqlSymUnion) locality() *tree.Locality {
	return u.val.(*tree.Locality)
}
func (u *sqlSymUnion) survivalGoal() tree.SurvivalGoal {
	return u.val.(tree.SurvivalGoal)
}
func (u *sqlSymUnion) dataPlacement() tree.DataPlacement {
	return u.val.(tree.DataPlacement)
}
func (u *sqlSymUnion) objectNamePrefix() tree.ObjectNamePrefix {
	return u.val.(tree.ObjectNamePrefix)
}
func (u *sqlSymUnion) objectNamePrefixList() tree.ObjectNamePrefixList {
	return u.val.(tree.ObjectNamePrefixList)
}
func (u *sqlSymUnion) abbreviatedGrant() tree.AbbreviatedGrant {
	return u.val.(tree.AbbreviatedGrant)
}
func (u *sqlSymUnion) abbreviatedRevoke() tree.AbbreviatedRevoke {
	return u.val.(tree.AbbreviatedRevoke)
}
func (u *sqlSymUnion) targetObjectType() privilege.TargetObjectType {
	return u.val.(privilege.TargetObjectType)
}
func (u *sqlSymUnion) setVar() *tree.SetVar {
	return u.val.(*tree.SetVar)
}
func (u *sqlSymUnion) cursorSensitivity() tree.CursorSensitivity {
	return u.val.(tree.CursorSensitivity)
}
func (u *sqlSymUnion) cursorScrollOption() tree.CursorScrollOption {
	return u.val.(tree.CursorScrollOption)
}
func (u *sqlSymUnion) cursorStmt() tree.CursorStmt {
	return u.val.(tree.CursorStmt)
}
func (u *sqlSymUnion) asTenantClause() tree.TenantID {
	return u.val.(tree.TenantID)
}
func (u *sqlSymUnion) functionOptions() tree.FunctionOptions {
	return u.val.(tree.FunctionOptions)
}
func (u *sqlSymUnion) functionOption() tree.FunctionOption {
	return u.val.(tree.FunctionOption)
}
func (u *sqlSymUnion) functionArgs() tree.FuncArgs {
	return u.val.(tree.FuncArgs)
}
func (u *sqlSymUnion) functionArg() tree.FuncArg {
	return u.val.(tree.FuncArg)
}
func (u *sqlSymUnion) functionArgClass() tree.FuncArgClass {
	return u.val.(tree.FuncArgClass)
}
func (u *sqlSymUnion) stmts() tree.Statements {
	return u.val.(tree.Statements)
}
func (u *sqlSymUnion) routineBody() *tree.RoutineBody {
	return u.val.(*tree.RoutineBody)
}

//line sql-gen.y:960
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lexbase.IDENT
const SCONST = lexbase.SCONST
const BCONST = lexbase.BCONST
const BITCONST = lexbase.BITCONST
const ICONST = lexbase.ICONST
const FCONST = lexbase.FCONST
const PLACEHOLDER = lexbase.PLACEHOLDER
const TYPECAST = lexbase.TYPECAST
const TYPEANNOTATE = lexbase.TYPEANNOTATE
const DOT_DOT = lexbase.DOT_DOT
const LESS_EQUALS = lexbase.LESS_EQUALS
const GREATER_EQUALS = lexbase.GREATER_EQUALS
const NOT_EQUALS = lexbase.NOT_EQUALS
const NOT_REGMATCH = lexbase.NOT_REGMATCH
const REGIMATCH = lexbase.REGIMATCH
const NOT_REGIMATCH = lexbase.NOT_REGIMATCH
const ERROR = lexbase.ERROR
const ABORT = lexbase.ABORT
const ABSOLUTE = lexbase.ABSOLUTE
const ACCESS = lexbase.ACCESS
const ACTION = lexbase.ACTION
const ADD = lexbase.ADD
const ADMIN = lexbase.ADMIN
const AFTER = lexbase.AFTER
const AGGREGATE = lexbase.AGGREGATE
const ALL = lexbase.ALL
const ALTER = lexbase.ALTER
const ALWAYS = lexbase.ALWAYS
const ANALYSE = lexbase.ANALYSE
const ANALYZE = lexbase.ANALYZE
const AND = lexbase.AND
const AND_AND = lexbase.AND_AND
const ANY = lexbase.ANY
const ANNOTATE_TYPE = lexbase.ANNOTATE_TYPE
const ARRAY = lexbase.ARRAY
const AS = lexbase.AS
const ASC = lexbase.ASC
const ASENSITIVE = lexbase.ASENSITIVE
const ASYMMETRIC = lexbase.ASYMMETRIC
const AT = lexbase.AT
const ATOMIC = lexbase.ATOMIC
const ATTRIBUTE = lexbase.ATTRIBUTE
const AUTHORIZATION = lexbase.AUTHORIZATION
const AUTOMATIC = lexbase.AUTOMATIC
const AVAILABILITY = lexbase.AVAILABILITY
const BACKUP = lexbase.BACKUP
const BACKUPS = lexbase.BACKUPS
const BACKWARD = lexbase.BACKWARD
const BEFORE = lexbase.BEFORE
const BEGIN = lexbase.BEGIN
const BETWEEN = lexbase.BETWEEN
const BIGINT = lexbase.BIGINT
const BIGSERIAL = lexbase.BIGSERIAL
const BINARY = lexbase.BINARY
const BIT = lexbase.BIT
const BUCKET_COUNT = lexbase.BUCKET_COUNT
const BOOLEAN = lexbase.BOOLEAN
const BOTH = lexbase.BOTH
const BOX2D = lexbase.BOX2D
const BUNDLE = lexbase.BUNDLE
const BY = lexbase.BY
const CACHE = lexbase.CACHE
const CALLED = lexbase.CALLED
const CANCEL = lexbase.CANCEL
const CANCELQUERY = lexbase.CANCELQUERY
const CASCADE = lexbase.CASCADE
const CASE = lexbase.CASE
const CAST = lexbase.CAST
const CBRT = lexbase.CBRT
const CHANGEFEED = lexbase.CHANGEFEED
const CHAR = lexbase.CHAR
const CHARACTER = lexbase.CHARACTER
const CHARACTERISTICS = lexbase.CHARACTERISTICS
const CHECK = lexbase.CHECK
const CLOSE = lexbase.CLOSE
const CLUSTER = lexbase.CLUSTER
const COALESCE = lexbase.COALESCE
const COLLATE = lexbase.COLLATE
const COLLATION = lexbase.COLLATION
const COLUMN = lexbase.COLUMN
const COLUMNS = lexbase.COLUMNS
const COMMENT = lexbase.COMMENT
const COMMENTS = lexbase.COMMENTS
const COMMIT = lexbase.COMMIT
const COMMITTED = lexbase.COMMITTED
const COMPACT = lexbase.COMPACT
const COMPLETE = lexbase.COMPLETE
const COMPLETIONS = lexbase.COMPLETIONS
const CONCAT = lexbase.CONCAT
const CONCURRENTLY = lexbase.CONCURRENTLY
const CONFIGURATION = lexbase.CONFIGURATION
const CONFIGURATIONS = lexbase.CONFIGURATIONS
const CONFIGURE = lexbase.CONFIGURE
const CONFLICT = lexbase.CONFLICT
const CONNECTION = lexbase.CONNECTION
const CONSTRAINT = lexbase.CONSTRAINT
const CONSTRAINTS = lexbase.CONSTRAINTS
const CONTAINS = lexbase.CONTAINS
const CONTROLCHANGEFEED = lexbase.CONTROLCHANGEFEED
const CONTROLJOB = lexbase.CONTROLJOB
const CONVERSION = lexbase.CONVERSION
const CONVERT = lexbase.CONVERT
const COPY = lexbase.COPY
const COST = lexbase.COST
const COVERING = lexbase.COVERING
const CREATE = lexbase.CREATE
const CREATEDB = lexbase.CREATEDB
const CREATELOGIN = lexbase.CREATELOGIN
const CREATEROLE = lexbase.CREATEROLE
const CROSS = lexbase.CROSS
const CSV = lexbase.CSV
const CUBE = lexbase.CUBE
const CURRENT = lexbase.CURRENT
const CURRENT_CATALOG = lexbase.CURRENT_CATALOG
const CURRENT_DATE = lexbase.CURRENT_DATE
const CURRENT_SCHEMA = lexbase.CURRENT_SCHEMA
const CURRENT_ROLE = lexbase.CURRENT_ROLE
const CURRENT_TIME = lexbase.CURRENT_TIME
const CURRENT_TIMESTAMP = lexbase.CURRENT_TIMESTAMP
const CURRENT_USER = lexbase.CURRENT_USER
const CURSOR = lexbase.CURSOR
const CYCLE = lexbase.CYCLE
const DATA = lexbase.DATA
const DATABASE = lexbase.DATABASE
const DATABASES = lexbase.DATABASES
const DATE = lexbase.DATE
const DAY = lexbase.DAY
const DEBUG_PAUSE_ON = lexbase.DEBUG_PAUSE_ON
const DEC = lexbase.DEC
const DECIMAL = lexbase.DECIMAL
const DEFAULT = lexbase.DEFAULT
const DEFAULTS = lexbase.DEFAULTS
const DEFINER = lexbase.DEFINER
const DEALLOCATE = lexbase.DEALLOCATE
const DECLARE = lexbase.DECLARE
const DEFERRABLE = lexbase.DEFERRABLE
const DEFERRED = lexbase.DEFERRED
const DELETE = lexbase.DELETE
const DELIMITER = lexbase.DELIMITER
const DESC = lexbase.DESC
const DESTINATION = lexbase.DESTINATION
const DETACHED = lexbase.DETACHED
const DISCARD = lexbase.DISCARD
const DISTINCT = lexbase.DISTINCT
const DO = lexbase.DO
const DOMAIN = lexbase.DOMAIN
const DOUBLE = lexbase.DOUBLE
const DROP = lexbase.DROP
const ELSE = lexbase.ELSE
const ENCODING = lexbase.ENCODING
const ENCRYPTED = lexbase.ENCRYPTED
const ENCRYPTION_PASSPHRASE = lexbase.ENCRYPTION_PASSPHRASE
const END = lexbase.END
const ENUM = lexbase.ENUM
const ENUMS = lexbase.ENUMS
const ESCAPE = lexbase.ESCAPE
const EXCEPT = lexbase.EXCEPT
const EXCLUDE = lexbase.EXCLUDE
const EXCLUDING = lexbase.EXCLUDING
const EXISTS = lexbase.EXISTS
const EXECUTE = lexbase.EXECUTE
const EXECUTION = lexbase.EXECUTION
const EXPERIMENTAL = lexbase.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lexbase.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lexbase.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lexbase.EXPERIMENTAL_AUDIT
const EXPERIMENTAL_RELOCATE = lexbase.EXPERIMENTAL_RELOCATE
const EXPIRATION = lexbase.EXPIRATION
const EXPLAIN = lexbase.EXPLAIN
const EXPORT = lexbase.EXPORT
const EXTENSION = lexbase.EXTENSION
const EXTERNAL = lexbase.EXTERNAL
const EXTRACT = lexbase.EXTRACT
const EXTRACT_DURATION = lexbase.EXTRACT_DURATION
const FAILURE = lexbase.FAILURE
const FALSE = lexbase.FALSE
const FAMILY = lexbase.FAMILY
const FETCH = lexbase.FETCH
const FETCHVAL = lexbase.FETCHVAL
const FETCHTEXT = lexbase.FETCHTEXT
const FETCHVAL_PATH = lexbase.FETCHVAL_PATH
const FETCHTEXT_PATH = lexbase.FETCHTEXT_PATH
const FILES = lexbase.FILES
const FILTER = lexbase.FILTER
const FIRST = lexbase.FIRST
const FLOAT = lexbase.FLOAT
const FLOAT4 = lexbase.FLOAT4
const FLOAT8 = lexbase.FLOAT8
const FLOORDIV = lexbase.FLOORDIV
const FOLLOWING = lexbase.FOLLOWING
const FOR = lexbase.FOR
const FORCE = lexbase.FORCE
const FORCE_INDEX = lexbase.FORCE_INDEX
const FORCE_ZIGZAG = lexbase.FORCE_ZIGZAG
const FOREIGN = lexbase.FOREIGN
const FORWARD = lexbase.FORWARD
const FREEZE = lexbase.FREEZE
const FROM = lexbase.FROM
const FULL = lexbase.FULL
const FUNCTION = lexbase.FUNCTION
const FUNCTIONS = lexbase.FUNCTIONS
const GENERATED = lexbase.GENERATED
const GEOGRAPHY = lexbase.GEOGRAPHY
const GEOMETRY = lexbase.GEOMETRY
const GEOMETRYM = lexbase.GEOMETRYM
const GEOMETRYZ = lexbase.GEOMETRYZ
const GEOMETRYZM = lexbase.GEOMETRYZM
const GEOMETRYCOLLECTION = lexbase.GEOMETRYCOLLECTION
const GEOMETRYCOLLECTIONM = lexbase.GEOMETRYCOLLECTIONM
const GEOMETRYCOLLECTIONZ = lexbase.GEOMETRYCOLLECTIONZ
const GEOMETRYCOLLECTIONZM = lexbase.GEOMETRYCOLLECTIONZM
const GLOBAL = lexbase.GLOBAL
const GOAL = lexbase.GOAL
const GRANT = lexbase.GRANT
const GRANTS = lexbase.GRANTS
const GREATEST = lexbase.GREATEST
const GROUP = lexbase.GROUP
const GROUPING = lexbase.GROUPING
const GROUPS = lexbase.GROUPS
const HAVING = lexbase.HAVING
const HASH = lexbase.HASH
const HEADER = lexbase.HEADER
const HIGH = lexbase.HIGH
const HISTOGRAM = lexbase.HISTOGRAM
const HOLD = lexbase.HOLD
const HOUR = lexbase.HOUR
const IDENTITY = lexbase.IDENTITY
const IF = lexbase.IF
const IFERROR = lexbase.IFERROR
const IFNULL = lexbase.IFNULL
const IGNORE_FOREIGN_KEYS = lexbase.IGNORE_FOREIGN_KEYS
const ILIKE = lexbase.ILIKE
const IMMEDIATE = lexbase.IMMEDIATE
const IMMUTABLE = lexbase.IMMUTABLE
const IMPORT = lexbase.IMPORT
const IN = lexbase.IN
const INCLUDE = lexbase.INCLUDE
const INCLUDING = lexbase.INCLUDING
const INCREMENT = lexbase.INCREMENT
const INCREMENTAL = lexbase.INCREMENTAL
const INCREMENTAL_LOCATION = lexbase.INCREMENTAL_LOCATION
const INET = lexbase.INET
const INET_CONTAINED_BY_OR_EQUALS = lexbase.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lexbase.INET_CONTAINS_OR_EQUALS
const INDEX = lexbase.INDEX
const INDEXES = lexbase.INDEXES
const INHERITS = lexbase.INHERITS
const INJECT = lexbase.INJECT
const INITIALLY = lexbase.INITIALLY
const INNER = lexbase.INNER
const INOUT = lexbase.INOUT
const INPUT = lexbase.INPUT
const INSENSITIVE = lexbase.INSENSITIVE
const INSERT = lexbase.INSERT
const INT = lexbase.INT
const INTEGER = lexbase.INTEGER
const INTERSECT = lexbase.INTERSECT
const INTERVAL = lexbase.INTERVAL
const INTO = lexbase.INTO
const INTO_DB = lexbase.INTO_DB
const INVERTED = lexbase.INVERTED
const INVOKER = lexbase.INVOKER
const IS = lexbase.IS
const ISERROR = lexbase.ISERROR
const ISNULL = lexbase.ISNULL
const ISOLATION = lexbase.ISOLATION
const JOB = lexbase.JOB
const JOBS = lexbase.JOBS
const JOIN = lexbase.JOIN
const JSON = lexbase.JSON
const JSONB = lexbase.JSONB
const JSON_SOME_EXISTS = lexbase.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lexbase.JSON_ALL_EXISTS
const KEY = lexbase.KEY
const KEYS = lexbase.KEYS
const KMS = lexbase.KMS
const KV = lexbase.KV
const LANGUAGE = lexbase.LANGUAGE
const LAST = lexbase.LAST
const LATERAL = lexbase.LATERAL
const LATEST = lexbase.LATEST
const LC_CTYPE = lexbase.LC_CTYPE
const LC_COLLATE = lexbase.LC_COLLATE
const LEADING = lexbase.LEADING
const LEASE = lexbase.LEASE
const LEAST = lexbase.LEAST
const LEAKPROOF = lexbase.LEAKPROOF
const LEFT = lexbase.LEFT
const LESS = lexbase.LESS
const LEVEL = lexbase.LEVEL
const LIKE = lexbase.LIKE
const LIMIT = lexbase.LIMIT
const LINESTRING = lexbase.LINESTRING
const LINESTRINGM = lexbase.LINESTRINGM
const LINESTRINGZ = lexbase.LINESTRINGZ
const LINESTRINGZM = lexbase.LINESTRINGZM
const LIST = lexbase.LIST
const LOCAL = lexbase.LOCAL
const LOCALITY = lexbase.LOCALITY
const LOCALTIME = lexbase.LOCALTIME
const LOCALTIMESTAMP = lexbase.LOCALTIMESTAMP
const LOCKED = lexbase.LOCKED
const LOGIN = lexbase.LOGIN
const LOOKUP = lexbase.LOOKUP
const LOW = lexbase.LOW
const LSHIFT = lexbase.LSHIFT
const MATCH = lexbase.MATCH
const MATERIALIZED = lexbase.MATERIALIZED
const MERGE = lexbase.MERGE
const MINVALUE = lexbase.MINVALUE
const MAXVALUE = lexbase.MAXVALUE
const METHOD = lexbase.METHOD
const MINUTE = lexbase.MINUTE
const MODIFYCLUSTERSETTING = lexbase.MODIFYCLUSTERSETTING
const MONTH = lexbase.MONTH
const MOVE = lexbase.MOVE
const MULTILINESTRING = lexbase.MULTILINESTRING
const MULTILINESTRINGM = lexbase.MULTILINESTRINGM
const MULTILINESTRINGZ = lexbase.MULTILINESTRINGZ
const MULTILINESTRINGZM = lexbase.MULTILINESTRINGZM
const MULTIPOINT = lexbase.MULTIPOINT
const MULTIPOINTM = lexbase.MULTIPOINTM
const MULTIPOINTZ = lexbase.MULTIPOINTZ
const MULTIPOINTZM = lexbase.MULTIPOINTZM
const MULTIPOLYGON = lexbase.MULTIPOLYGON
const MULTIPOLYGONM = lexbase.MULTIPOLYGONM
const MULTIPOLYGONZ = lexbase.MULTIPOLYGONZ
const MULTIPOLYGONZM = lexbase.MULTIPOLYGONZM
const NAN = lexbase.NAN
const NAME = lexbase.NAME
const NAMES = lexbase.NAMES
const NATURAL = lexbase.NATURAL
const NEVER = lexbase.NEVER
const NEW_DB_NAME = lexbase.NEW_DB_NAME
const NEW_KMS = lexbase.NEW_KMS
const NEXT = lexbase.NEXT
const NO = lexbase.NO
const NOCANCELQUERY = lexbase.NOCANCELQUERY
const NOCONTROLCHANGEFEED = lexbase.NOCONTROLCHANGEFEED
const NOCONTROLJOB = lexbase.NOCONTROLJOB
const NOCREATEDB = lexbase.NOCREATEDB
const NOCREATELOGIN = lexbase.NOCREATELOGIN
const NOCREATEROLE = lexbase.NOCREATEROLE
const NOLOGIN = lexbase.NOLOGIN
const NOMODIFYCLUSTERSETTING = lexbase.NOMODIFYCLUSTERSETTING
const NOSQLLOGIN = lexbase.NOSQLLOGIN
const NO_INDEX_JOIN = lexbase.NO_INDEX_JOIN
const NO_ZIGZAG_JOIN = lexbase.NO_ZIGZAG_JOIN
const NO_FULL_SCAN = lexbase.NO_FULL_SCAN
const NONE = lexbase.NONE
const NONVOTERS = lexbase.NONVOTERS
const NORMAL = lexbase.NORMAL
const NOT = lexbase.NOT
const NOTHING = lexbase.NOTHING
const NOTNULL = lexbase.NOTNULL
const NOVIEWACTIVITY = lexbase.NOVIEWACTIVITY
const NOVIEWACTIVITYREDACTED = lexbase.NOVIEWACTIVITYREDACTED
const NOVIEWCLUSTERSETTING = lexbase.NOVIEWCLUSTERSETTING
const NOWAIT = lexbase.NOWAIT
const NULL = lexbase.NULL
const NULLIF = lexbase.NULLIF
const NULLS = lexbase.NULLS
const NUMERIC = lexbase.NUMERIC
const OF = lexbase.OF
const OFF = lexbase.OFF
const OFFSET = lexbase.OFFSET
const OID = lexbase.OID
const OIDS = lexbase.OIDS
const OIDVECTOR = lexbase.OIDVECTOR
const OLD_KMS = lexbase.OLD_KMS
const ON = lexbase.ON
const ONLY = lexbase.ONLY
const OPT = lexbase.OPT
const OPTION = lexbase.OPTION
const OPTIONS = lexbase.OPTIONS
const OR = lexbase.OR
const ORDER = lexbase.ORDER
const ORDINALITY = lexbase.ORDINALITY
const OTHERS = lexbase.OTHERS
const OUT = lexbase.OUT
const OUTER = lexbase.OUTER
const OVER = lexbase.OVER
const OVERLAPS = lexbase.OVERLAPS
const OVERLAY = lexbase.OVERLAY
const OWNED = lexbase.OWNED
const OWNER = lexbase.OWNER
const OPERATOR = lexbase.OPERATOR
const PARALLEL = lexbase.PARALLEL
const PARENT = lexbase.PARENT
const PARTIAL = lexbase.PARTIAL
const PARTITION = lexbase.PARTITION
const PARTITIONS = lexbase.PARTITIONS
const PASSWORD = lexbase.PASSWORD
const PAUSE = lexbase.PAUSE
const PAUSED = lexbase.PAUSED
const PHYSICAL = lexbase.PHYSICAL
const PLACEMENT = lexbase.PLACEMENT
const PLACING = lexbase.PLACING
const PLAN = lexbase.PLAN
const PLANS = lexbase.PLANS
const POINT = lexbase.POINT
const POINTM = lexbase.POINTM
const POINTZ = lexbase.POINTZ
const POINTZM = lexbase.POINTZM
const POLYGON = lexbase.POLYGON
const POLYGONM = lexbase.POLYGONM
const POLYGONZ = lexbase.POLYGONZ
const POLYGONZM = lexbase.POLYGONZM
const POSITION = lexbase.POSITION
const PRECEDING = lexbase.PRECEDING
const PRECISION = lexbase.PRECISION
const PREPARE = lexbase.PREPARE
const PRESERVE = lexbase.PRESERVE
const PRIMARY = lexbase.PRIMARY
const PRIOR = lexbase.PRIOR
const PRIORITY = lexbase.PRIORITY
const PRIVILEGES = lexbase.PRIVILEGES
const PROCEDURAL = lexbase.PROCEDURAL
const PUBLIC = lexbase.PUBLIC
const PUBLICATION = lexbase.PUBLICATION
const QUERIES = lexbase.QUERIES
const QUERY = lexbase.QUERY
const QUOTE = lexbase.QUOTE
const RANGE = lexbase.RANGE
const RANGES = lexbase.RANGES
const READ = lexbase.READ
const REAL = lexbase.REAL
const REASON = lexbase.REASON
const REASSIGN = lexbase.REASSIGN
const RECURSIVE = lexbase.RECURSIVE
const RECURRING = lexbase.RECURRING
const REF = lexbase.REF
const REFERENCES = lexbase.REFERENCES
const REFRESH = lexbase.REFRESH
const REGCLASS = lexbase.REGCLASS
const REGION = lexbase.REGION
const REGIONAL = lexbase.REGIONAL
const REGIONS = lexbase.REGIONS
const REGNAMESPACE = lexbase.REGNAMESPACE
const REGPROC = lexbase.REGPROC
const REGPROCEDURE = lexbase.REGPROCEDURE
const REGROLE = lexbase.REGROLE
const REGTYPE = lexbase.REGTYPE
const REINDEX = lexbase.REINDEX
const RELATIVE = lexbase.RELATIVE
const RELOCATE = lexbase.RELOCATE
const REMOVE_PATH = lexbase.REMOVE_PATH
const RENAME = lexbase.RENAME
const REPEATABLE = lexbase.REPEATABLE
const REPLACE = lexbase.REPLACE
const REPLICATION = lexbase.REPLICATION
const RELEASE = lexbase.RELEASE
const RESET = lexbase.RESET
const RESTART = lexbase.RESTART
const RESTORE = lexbase.RESTORE
const RESTRICT = lexbase.RESTRICT
const RESTRICTED = lexbase.RESTRICTED
const RESUME = lexbase.RESUME
const RETURNING = lexbase.RETURNING
const RETURN = lexbase.RETURN
const RETURNS = lexbase.RETURNS
const RETRY = lexbase.RETRY
const REVISION_HISTORY = lexbase.REVISION_HISTORY
const REVOKE = lexbase.REVOKE
const RIGHT = lexbase.RIGHT
const ROLE = lexbase.ROLE
const ROLES = lexbase.ROLES
const ROLLBACK = lexbase.ROLLBACK
const ROLLUP = lexbase.ROLLUP
const ROUTINES = lexbase.ROUTINES
const ROW = lexbase.ROW
const ROWS = lexbase.ROWS
const RSHIFT = lexbase.RSHIFT
const RULE = lexbase.RULE
const RUNNING = lexbase.RUNNING
const SAVEPOINT = lexbase.SAVEPOINT
const SCANS = lexbase.SCANS
const SCATTER = lexbase.SCATTER
const SCHEDULE = lexbase.SCHEDULE
const SCHEDULES = lexbase.SCHEDULES
const SCROLL = lexbase.SCROLL
const SCHEMA = lexbase.SCHEMA
const SCHEMAS = lexbase.SCHEMAS
const SCRUB = lexbase.SCRUB
const SEARCH = lexbase.SEARCH
const SECOND = lexbase.SECOND
const SECURITY = lexbase.SECURITY
const SELECT = lexbase.SELECT
const SEQUENCE = lexbase.SEQUENCE
const SEQUENCES = lexbase.SEQUENCES
const SERIALIZABLE = lexbase.SERIALIZABLE
const SERVER = lexbase.SERVER
const SESSION = lexbase.SESSION
const SESSIONS = lexbase.SESSIONS
const SESSION_USER = lexbase.SESSION_USER
const SET = lexbase.SET
const SETOF = lexbase.SETOF
const SETS = lexbase.SETS
const SETTING = lexbase.SETTING
const SETTINGS = lexbase.SETTINGS
const SHARE = lexbase.SHARE
const SHOW = lexbase.SHOW
const SIMILAR = lexbase.SIMILAR
const SIMPLE = lexbase.SIMPLE
const SKIP = lexbase.SKIP
const SKIP_LOCALITIES_CHECK = lexbase.SKIP_LOCALITIES_CHECK
const SKIP_MISSING_FOREIGN_KEYS = lexbase.SKIP_MISSING_FOREIGN_KEYS
const SKIP_MISSING_SEQUENCES = lexbase.SKIP_MISSING_SEQUENCES
const SKIP_MISSING_SEQUENCE_OWNERS = lexbase.SKIP_MISSING_SEQUENCE_OWNERS
const SKIP_MISSING_VIEWS = lexbase.SKIP_MISSING_VIEWS
const SMALLINT = lexbase.SMALLINT
const SMALLSERIAL = lexbase.SMALLSERIAL
const SNAPSHOT = lexbase.SNAPSHOT
const SOME = lexbase.SOME
const SPLIT = lexbase.SPLIT
const SQL = lexbase.SQL
const SQLLOGIN = lexbase.SQLLOGIN
const STABLE = lexbase.STABLE
const START = lexbase.START
const STATE = lexbase.STATE
const STATISTICS = lexbase.STATISTICS
const STATUS = lexbase.STATUS
const STDIN = lexbase.STDIN
const STREAM = lexbase.STREAM
const STRICT = lexbase.STRICT
const STRING = lexbase.STRING
const STORAGE = lexbase.STORAGE
const STORE = lexbase.STORE
const STORED = lexbase.STORED
const STORING = lexbase.STORING
const SUBSTRING = lexbase.SUBSTRING
const SUPER = lexbase.SUPER
const SUPPORT = lexbase.SUPPORT
const SURVIVE = lexbase.SURVIVE
const SURVIVAL = lexbase.SURVIVAL
const SYMMETRIC = lexbase.SYMMETRIC
const SYNTAX = lexbase.SYNTAX
const SYSTEM = lexbase.SYSTEM
const SQRT = lexbase.SQRT
const SUBSCRIPTION = lexbase.SUBSCRIPTION
const STATEMENTS = lexbase.STATEMENTS
const TABLE = lexbase.TABLE
const TABLES = lexbase.TABLES
const TABLESPACE = lexbase.TABLESPACE
const TEMP = lexbase.TEMP
const TEMPLATE = lexbase.TEMPLATE
const TEMPORARY = lexbase.TEMPORARY
const TENANT = lexbase.TENANT
const TENANTS = lexbase.TENANTS
const TESTING_RELOCATE = lexbase.TESTING_RELOCATE
const TEXT = lexbase.TEXT
const THEN = lexbase.THEN
const TIES = lexbase.TIES
const TIME = lexbase.TIME
const TIMETZ = lexbase.TIMETZ
const TIMESTAMP = lexbase.TIMESTAMP
const TIMESTAMPTZ = lexbase.TIMESTAMPTZ
const TO = lexbase.TO
const THROTTLING = lexbase.THROTTLING
const TRAILING = lexbase.TRAILING
const TRACE = lexbase.TRACE
const TRANSACTION = lexbase.TRANSACTION
const TRANSACTIONS = lexbase.TRANSACTIONS
const TRANSFER = lexbase.TRANSFER
const TRANSFORM = lexbase.TRANSFORM
const TREAT = lexbase.TREAT
const TRIGGER = lexbase.TRIGGER
const TRIM = lexbase.TRIM
const TRUE = lexbase.TRUE
const TRUNCATE = lexbase.TRUNCATE
const TRUSTED = lexbase.TRUSTED
const TYPE = lexbase.TYPE
const TYPES = lexbase.TYPES
const TRACING = lexbase.TRACING
const UNBOUNDED = lexbase.UNBOUNDED
const UNCOMMITTED = lexbase.UNCOMMITTED
const UNION = lexbase.UNION
const UNIQUE = lexbase.UNIQUE
const UNKNOWN = lexbase.UNKNOWN
const UNLOGGED = lexbase.UNLOGGED
const UNSPLIT = lexbase.UNSPLIT
const UPDATE = lexbase.UPDATE
const UPSERT = lexbase.UPSERT
const UNSET = lexbase.UNSET
const UNTIL = lexbase.UNTIL
const USE = lexbase.USE
const USER = lexbase.USER
const USERS = lexbase.USERS
const USING = lexbase.USING
const UUID = lexbase.UUID
const VALID = lexbase.VALID
const VALIDATE = lexbase.VALIDATE
const VALUE = lexbase.VALUE
const VALUES = lexbase.VALUES
const VARBIT = lexbase.VARBIT
const VARCHAR = lexbase.VARCHAR
const VARIADIC = lexbase.VARIADIC
const VIEW = lexbase.VIEW
const VARYING = lexbase.VARYING
const VIEWACTIVITY = lexbase.VIEWACTIVITY
const VIEWACTIVITYREDACTED = lexbase.VIEWACTIVITYREDACTED
const VIEWCLUSTERSETTING = lexbase.VIEWCLUSTERSETTING
const VIRTUAL = lexbase.VIRTUAL
const VISIBLE = lexbase.VISIBLE
const VOLATILE = lexbase.VOLATILE
const VOTERS = lexbase.VOTERS
const WHEN = lexbase.WHEN
const WHERE = lexbase.WHERE
const WINDOW = lexbase.WINDOW
const WITH = lexbase.WITH
const WITHIN = lexbase.WITHIN
const WITHOUT = lexbase.WITHOUT
const WORK = lexbase.WORK
const WRITE = lexbase.WRITE
const YEAR = lexbase.YEAR
const ZONE = lexbase.ZONE
const NOT_LA = lexbase.NOT_LA
const NULLS_LA = lexbase.NULLS_LA
const WITH_LA = lexbase.WITH_LA
const AS_LA = lexbase.AS_LA
const GENERATED_ALWAYS = lexbase.GENERATED_ALWAYS
const GENERATED_BY_DEFAULT = lexbase.GENERATED_BY_DEFAULT
const RESET_ALL = lexbase.RESET_ALL
const ROLE_ALL = lexbase.ROLE_ALL
const USER_ALL = lexbase.USER_ALL
const ON_LA = lexbase.ON_LA
const TENANT_ALL = lexbase.TENANT_ALL
const SET_TRACING = lexbase.SET_TRACING
const CONTAINED_BY = lexbase.CONTAINED_BY
const POSTFIXOP = lexbase.POSTFIXOP
const INTERVAL_SIMPLE = lexbase.INTERVAL_SIMPLE
const UMINUS = lexbase.UMINUS
const HELPTOKEN = lexbase.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ABSOLUTE",
	"ACCESS",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASENSITIVE",
	"ASYMMETRIC",
	"AT",
	"ATOMIC",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"AVAILABILITY",
	"BACKUP",
	"BACKUPS",
	"BACKWARD",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BINARY",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BOX2D",
	"BUNDLE",
	"BY",
	"CACHE",
	"CALLED",
	"CANCEL",
	"CANCELQUERY",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"COMPLETIONS",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONNECTION",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONTROLCHANGEFEED",
	"CONTROLJOB",
	"CONVERSION",
	"CONVERT",
	"COPY",
	"COST",
	"COVERING",
	"CREATE",
	"CREATEDB",
	"CREATELOGIN",
	"CREATEROLE",
	"CROSS",
	"CSV",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CURSOR",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEBUG_PAUSE_ON",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEFINER",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DELIMITER",
	"DESC",
	"DESTINATION",
	"DETACHED",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTED",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ENUMS",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXECUTION",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPERIMENTAL_RELOCATE",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTERNAL",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FAILURE",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE",
	"FORCE_INDEX",
	"FORCE_ZIGZAG",
	"FOREIGN",
	"FORWARD",
	"FREEZE",
	"FROM",
	"FULL",
	"FUNCTION",
	"FUNCTIONS",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYM",
	"GEOMETRYZ",
	"GEOMETRYZM",
	"GEOMETRYCOLLECTION",
	"GEOMETRYCOLLECTIONM",
	"GEOMETRYCOLLECTIONZ",
	"GEOMETRYCOLLECTIONZM",
	"GLOBAL",
	"GOAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HEADER",
	"HIGH",
	"HISTOGRAM",
	"HOLD",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMMUTABLE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDING",
	"INCREMENT",
	"INCREMENTAL",
	"INCREMENTAL_LOCATION",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INHERITS",
	"INJECT",
	"INITIALLY",
	"INNER",
	"INOUT",
	"INPUT",
	"INSENSITIVE",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INTO_DB",
	"INVERTED",
	"INVOKER",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KMS",
	"KV",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LATEST",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEAKPROOF",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LINESTRINGM",
	"LINESTRINGZ",
	"LINESTRINGZM",
	"LIST",
	"LOCAL",
	"LOCALITY",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"METHOD",
	"MINUTE",
	"MODIFYCLUSTERSETTING",
	"MONTH",
	"MOVE",
	"MULTILINESTRING",
	"MULTILINESTRINGM",
	"MULTILINESTRINGZ",
	"MULTILINESTRINGZM",
	"MULTIPOINT",
	"MULTIPOINTM",
	"MULTIPOINTZ",
	"MULTIPOINTZM",
	"MULTIPOLYGON",
	"MULTIPOLYGONM",
	"MULTIPOLYGONZ",
	"MULTIPOLYGONZM",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEVER",
	"NEW_DB_NAME",
	"NEW_KMS",
	"NEXT",
	"NO",
	"NOCANCELQUERY",
	"NOCONTROLCHANGEFEED",
	"NOCONTROLJOB",
	"NOCREATEDB",
	"NOCREATELOGIN",
	"NOCREATEROLE",
	"NOLOGIN",
	"NOMODIFYCLUSTERSETTING",
	"NOSQLLOGIN",
	"NO_INDEX_JOIN",
	"NO_ZIGZAG_JOIN",
	"NO_FULL_SCAN",
	"NONE",
	"NONVOTERS",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOVIEWACTIVITY",
	"NOVIEWACTIVITYREDACTED",
	"NOVIEWCLUSTERSETTING",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"OLD_KMS",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARALLEL",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PAUSED",
	"PHYSICAL",
	"PLACEMENT",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POINTM",
	"POINTZ",
	"POINTZM",
	"POLYGON",
	"POLYGONM",
	"POLYGONZ",
	"POLYGONZM",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIOR",
	"PRIORITY",
	"PRIVILEGES",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"QUOTE",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"REASON",
	"REASSIGN",
	"RECURSIVE",
	"RECURRING",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REGCLASS",
	"REGION",
	"REGIONAL",
	"REGIONS",
	"REGNAMESPACE",
	"REGPROC",
	"REGPROCEDURE",
	"REGROLE",
	"REGTYPE",
	"REINDEX",
	"RELATIVE",
	"RELOCATE",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"REPLICATION",
	"RELEASE",
	"RESET",
	"RESTART",
	"RESTORE",
	"RESTRICT",
	"RESTRICTED",
	"RESUME",
	"RETURNING",
	"RETURN",
	"RETURNS",
	"RETRY",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROUTINES",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"RUNNING",
	"SAVEPOINT",
	"SCANS",
	"SCATTER",
	"SCHEDULE",
	"SCHEDULES",
	"SCROLL",
	"SCHEMA",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SECURITY",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETOF",
	"SETS",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SKIP_LOCALITIES_CHECK",
	"SKIP_MISSING_FOREIGN_KEYS",
	"SKIP_MISSING_SEQUENCES",
	"SKIP_MISSING_SEQUENCE_OWNERS",
	"SKIP_MISSING_VIEWS",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"SQLLOGIN",
	"STABLE",
	"START",
	"STATE",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STREAM",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SUPER",
	"SUPPORT",
	"SURVIVE",
	"SURVIVAL",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"STATEMENTS",
	"TABLE",
	"TABLES",
	"TABLESPACE",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TENANT",
	"TENANTS",
	"TESTING_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TRANSACTIONS",
	"TRANSFER",
	"TRANSFORM",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TYPES",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNSET",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIEWACTIVITY",
	"VIEWACTIVITYREDACTED",
	"VIEWCLUSTERSETTING",
	"VIRTUAL",
	"VISIBLE",
	"VOLATILE",
	"VOTERS",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"NULLS_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"GENERATED_BY_DEFAULT",
	"RESET_ALL",
	"ROLE_ALL",
	"USER_ALL",
	"ON_LA",
	"TENANT_ALL",
	"SET_TRACING",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"INTERVAL_SIMPLE",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"';'",
	"'{'",
	"'}'",
	"':'",
}

var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:15179

//line yacctab:1
var sqlExca = [...]int16{
	-1, 0,
	1, 5,
	-2, 1827,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 63,
	281, 522,
	-2, 0,
	-1, 75,
	8, 983,
	29, 983,
	642, 983,
	643, 983,
	-2, 0,
	-1, 76,
	8, 983,
	29, 983,
	642, 983,
	643, 983,
	-2, 0,
	-1, 78,
	1, 1677,
	139, 1677,
	269, 1677,
	356, 1677,
	419, 1677,
	429, 1677,
	623, 1677,
	655, 1677,
	-2, 0,
	-1, 79,
	1, 1677,
	655, 1677,
	-2, 0,
	-1, 85,
	262, 270,
	561, 270,
	-2, 0,
	-1, 99,
	203, 444,
	248, 1554,
	264, 1554,
	281, 444,
	421, 444,
	433, 1297,
	477, 444,
	492, 1297,
	545, 1297,
	574, 444,
	601, 1297,
	-2, 0,
	-1, 106,
	141, 1827,
	257, 1827,
	585, 1827,
	586, 1827,
	-2, 0,
	-1, 124,
	160, 1798,
	181, 1798,
	194, 1798,
	260, 1798,
	295, 1798,
	369, 1798,
	380, 1798,
	580, 1798,
	-2, 1769,
	-1, 166,
	168, 1117,
	280, 1117,
	424, 1078,
	497, 1078,
	544, 1078,
	564, 1117,
	566, 1078,
	-2, 0,
	-1, 171,
	4, 1829,
	21, 1829,
	22, 1829,
	23, 1829,
	24, 1829,
	25, 1829,
	26, 1829,
	27, 1829,
	28, 1829,
	30, 1829,
	31, 1829,
	37, 1829,
	41, 1829,
	43, 1829,
	44, 1829,
	45, 1829,
	47, 1829,
	48, 1829,
	49, 1829,
	50, 1829,
	51, 1829,
	52, 1829,
	53, 1829,
	54, 1829,
	55, 1829,
	57, 1829,
	58, 1829,
	59, 1829,
	60, 1829,
	62, 1829,
	63, 1829,
	64, 1829,
	65, 1829,
	66, 1829,
	67, 1829,
	68, 1829,
	69, 1829,
	73, 1829,
	74, 1829,
	75, 1829,
	76, 1829,
	78, 1829,
	79, 1829,
	80, 1829,
	84, 1829,
	85, 1829,
	86, 1829,
	87, 1829,
	88, 1829,
	89, 1829,
	90, 1829,
	91, 1829,
	94, 1829,
	95, 1829,
	96, 1829,
	97, 1829,
	98, 1829,
	100, 1829,
	102, 1829,
	103, 1829,
	104, 1829,
	105, 1829,
	106, 1829,
	107, 1829,
	108, 1829,
	110, 1829,
	111, 1829,
	112, 1829,
	114, 1829,
	115, 1829,
	116, 1829,
	124, 1829,
	125, 1829,
	126, 1829,
	127, 1829,
	128, 1829,
	130, 1829,
	131, 1829,
	132, 1829,
	133, 1829,
	135, 1829,
	136, 1829,
	137, 1829,
	138, 1829,
	140, 1829,
	141, 1829,
	142, 1829,
	144, 1829,
	145, 1829,
	146, 1829,
	149, 1829,
	150, 1829,
	151, 1829,
	153, 1829,
	154, 1829,
	155, 1829,
	157, 1829,
	158, 1829,
	159, 1829,
	161, 1829,
	162, 1829,
	163, 1829,
	164, 1829,
	165, 1829,
	166, 1829,
	167, 1829,
	168, 1829,
	169, 1829,
	170, 1829,
	171, 1829,
	172, 1829,
	173, 1829,
	174, 1829,
	175, 1829,
	176, 1829,
	177, 1829,
	178, 1829,
	180, 1829,
	186, 1829,
	187, 1829,
	188, 1829,
	189, 1829,
	193, 1829,
	195, 1829,
	196, 1829,
	197, 1829,
	199, 1829,
	200, 1829,
	203, 1829,
	204, 1829,
	205, 1829,
	206, 1829,
	207, 1829,
	208, 1829,
	209, 1829,
	210, 1829,
	211, 1829,
	212, 1829,
	213, 1829,
	214, 1829,
	215, 1829,
	216, 1829,
	218, 1829,
	219, 1829,
	221, 1829,
	222, 1829,
	224, 1829,
	225, 1829,
	226, 1829,
	227, 1829,
	228, 1829,
	229, 1829,
	230, 1829,
	231, 1829,
	232, 1829,
	233, 1829,
	234, 1829,
	236, 1829,
	237, 1829,
	238, 1829,
	240, 1829,
	241, 1829,
	242, 1829,
	243, 1829,
	244, 1829,
	248, 1829,
	249, 1829,
	250, 1829,
	251, 1829,
	254, 1829,
	255, 1829,
	256, 1829,
	257, 1829,
	258, 1829,
	259, 1829,
	261, 1829,
	263, 1829,
	264, 1829,
	265, 1829,
	267, 1829,
	269, 1829,
	270, 1829,
	271, 1829,
	273, 1829,
	277, 1829,
	278, 1829,
	279, 1829,
	280, 1829,
	281, 1829,
	282, 1829,
	284, 1829,
	285, 1829,
	286, 1829,
	288, 1829,
	289, 1829,
	290, 1829,
	292, 1829,
	293, 1829,
	296, 1829,
	297, 1829,
	298, 1829,
	299, 1829,
	300, 1829,
	301, 1829,
	302, 1829,
	305, 1829,
	306, 1829,
	307, 1829,
	308, 1829,
	310, 1829,
	311, 1829,
	312, 1829,
	313, 1829,
	314, 1829,
	315, 1829,
	316, 1829,
	317, 1829,
	318, 1829,
	319, 1829,
	320, 1829,
	321, 1829,
	322, 1829,
	323, 1829,
	324, 1829,
	325, 1829,
	326, 1829,
	327, 1829,
	328, 1829,
	329, 1829,
	330, 1829,
	331, 1829,
	332, 1829,
	334, 1829,
	336, 1829,
	337, 1829,
	338, 1829,
	339, 1829,
	340, 1829,
	341, 1829,
	342, 1829,
	343, 1829,
	344, 1829,
	345, 1829,
	346, 1829,
	347, 1829,
	348, 1829,
	349, 1829,
	350, 1829,
	351, 1829,
	352, 1829,
	354, 1829,
	355, 1829,
	357, 1829,
	359, 1829,
	360, 1829,
	361, 1829,
	362, 1829,
	364, 1829,
	365, 1829,
	366, 1829,
	367, 1829,
	368, 1829,
	371, 1829,
	373, 1829,
	375, 1829,
	376, 1829,
	377, 1829,
	378, 1829,
	381, 1829,
	382, 1829,
	383, 1829,
	385, 1829,
	387, 1829,
	388, 1829,
	389, 1829,
	390, 1829,
	391, 1829,
	392, 1829,
	393, 1829,
	394, 1829,
	395, 1829,
	396, 1829,
	397, 1829,
	398, 1829,
	399, 1829,
	400, 1829,
	402, 1829,
	403, 1829,
	404, 1829,
	405, 1829,
	406, 1829,
	407, 1829,
	408, 1829,
	409, 1829,
	410, 1829,
	411, 1829,
	412, 1829,
	413, 1829,
	414, 1829,
	415, 1829,
	416, 1829,
	418, 1829,
	419, 1829,
	420, 1829,
	422, 1829,
	423, 1829,
	424, 1829,
	425, 1829,
	426, 1829,
	427, 1829,
	428, 1829,
	429, 1829,
	430, 1829,
	431, 1829,
	432, 1829,
	433, 1829,
	434, 1829,
	435, 1829,
	437, 1829,
	439, 1829,
	440, 1829,
	441, 1829,
	447, 1829,
	448, 1829,
	449, 1829,
	451, 1829,
	452, 1829,
	453, 1829,
	454, 1829,
	455, 1829,
	456, 1829,
	457, 1829,
	458, 1829,
	459, 1829,
	460, 1829,
	461, 1829,
	463, 1829,
	464, 1829,
	465, 1829,
	466, 1829,
	467, 1829,
	469, 1829,
	470, 1829,
	471, 1829,
	472, 1829,
	473, 1829,
	474, 1829,
	475, 1829,
	477, 1829,
	478, 1829,
	479, 1829,
	480, 1829,
	481, 1829,
	482, 1829,
	483, 1829,
	484, 1829,
	485, 1829,
	486, 1829,
	487, 1829,
	488, 1829,
	489, 1829,
	490, 1829,
	492, 1829,
	493, 1829,
	494, 1829,
	495, 1829,
	496, 1829,
	497, 1829,
	499, 1829,
	500, 1829,
	501, 1829,
	502, 1829,
	503, 1829,
	504, 1829,
	505, 1829,
	507, 1829,
	508, 1829,
	509, 1829,
	510, 1829,
	511, 1829,
	512, 1829,
	513, 1829,
	514, 1829,
	516, 1829,
	518, 1829,
	519, 1829,
	520, 1829,
	521, 1829,
	522, 1829,
	523, 1829,
	524, 1829,
	525, 1829,
	526, 1829,
	527, 1829,
	528, 1829,
	529, 1829,
	530, 1829,
	531, 1829,
	532, 1829,
	533, 1829,
	534, 1829,
	535, 1829,
	536, 1829,
	537, 1829,
	538, 1829,
	540, 1829,
	541, 1829,
	543, 1829,
	544, 1829,
	546, 1829,
	547, 1829,
	548, 1829,
	549, 1829,
	550, 1829,
	551, 1829,
	553, 1829,
	554, 1829,
	556, 1829,
	557, 1829,
	558, 1829,
	559, 1829,
	560, 1829,
	562, 1829,
	564, 1829,
	565, 1829,
	566, 1829,
	567, 1829,
	568, 1829,
	569, 1829,
	570, 1829,
	571, 1829,
	573, 1829,
	574, 1829,
	575, 1829,
	576, 1829,
	577, 1829,
	578, 1829,
	579, 1829,
	582, 1829,
	583, 1829,
	584, 1829,
	585, 1829,
	586, 1829,
	587, 1829,
	588, 1829,
	589, 1829,
	591, 1829,
	594, 1829,
	595, 1829,
	596, 1829,
	597, 1829,
	598, 1829,
	599, 1829,
	601, 1829,
	602, 1829,
	603, 1829,
	604, 1829,
	605, 1829,
	606, 1829,
	607, 1829,
	608, 1829,
	609, 1829,
	614, 1829,
	615, 1829,
	616, 1829,
	617, 1829,
	618, 1829,
	619, 1829,
	-2, 0,
	-1, 173,
	1, 1677,
	655, 1677,
	658, 1677,
	-2, 0,
	-1, 174,
	1, 1677,
	561, 1677,
	655, 1677,
	658, 1677,
	-2, 0,
	-1, 207,
	160, 1797,
	181, 1797,
	194, 1797,
	260, 1797,
	295, 1797,
	369, 1797,
	380, 1797,
	580, 1797,
	-2, 1772,
	-1, 259,
	4, 1836,
	5, 1836,
	6, 1836,
	7, 1836,
	8, 1836,
	9, 1836,
	10, 1836,
	21, 1836,
	22, 1836,
	23, 1836,
	24, 1836,
	25, 1836,
	26, 1836,
	27, 1836,
	28, 1836,
	30, 1836,
	31, 1836,
	37, 1836,
	38, 1836,
	41, 1836,
	43, 1836,
	44, 1836,
	45, 1836,
	46, 1836,
	47, 1836,
	48, 1836,
	49, 1836,
	50, 1836,
	51, 1836,
	52, 1836,
	53, 1836,
	54, 1836,
	55, 1836,
	57, 1836,
	58, 1836,
	59, 1836,
	60, 1836,
	62, 1836,
	63, 1836,
	64, 1836,
	65, 1836,
	66, 1836,
	67, 1836,
	68, 1836,
	69, 1836,
	70, 1836,
	71, 1836,
	72, 1836,
	73, 1836,
	74, 1836,
	75, 1836,
	76, 1836,
	78, 1836,
	79, 1836,
	80, 1836,
	82, 1836,
	84, 1836,
	85, 1836,
	86, 1836,
	87, 1836,
	88, 1836,
	89, 1836,
	90, 1836,
	91, 1836,
	94, 1836,
	95, 1836,
	96, 1836,
	97, 1836,
	98, 1836,
	100, 1836,
	102, 1836,
	103, 1836,
	104, 1836,
	105, 1836,
	106, 1836,
	107, 1836,
	108, 1836,
	110, 1836,
	111, 1836,
	112, 1836,
	113, 1836,
	114, 1836,
	115, 1836,
	116, 1836,
	117, 1836,
	118, 1836,
	119, 1836,
	120, 1836,
	121, 1836,
	122, 1836,
	123, 1836,
	124, 1836,
	125, 1836,
	126, 1836,
	127, 1836,
	128, 1836,
	129, 1836,
	130, 1836,
	131, 1836,
	132, 1836,
	133, 1836,
	134, 1836,
	135, 1836,
	136, 1836,
	137, 1836,
	138, 1836,
	140, 1836,
	141, 1836,
	142, 1836,
	144, 1836,
	145, 1836,
	146, 1836,
	149, 1836,
	150, 1836,
	151, 1836,
	153, 1836,
	154, 1836,
	155, 1836,
	157, 1836,
	158, 1836,
	159, 1836,
	161, 1836,
	162, 1836,
	163, 1836,
	164, 1836,
	165, 1836,
	166, 1836,
	167, 1836,
	168, 1836,
	169, 1836,
	170, 1836,
	171, 1836,
	172, 1836,
	173, 1836,
	174, 1836,
	175, 1836,
	176, 1836,
	177, 1836,
	178, 1836,
	179, 1836,
	180, 1836,
	186, 1836,
	187, 1836,
	188, 1836,
	189, 1836,
	193, 1836,
	195, 1836,
	196, 1836,
	197, 1836,
	199, 1836,
	200, 1836,
	202, 1836,
	203, 1836,
	204, 1836,
	205, 1836,
	206, 1836,
	207, 1836,
	208, 1836,
	209, 1836,
	210, 1836,
	211, 1836,
	212, 1836,
	213, 1836,
	214, 1836,
	215, 1836,
	216, 1836,
	218, 1836,
	219, 1836,
	221, 1836,
	222, 1836,
	224, 1836,
	225, 1836,
	226, 1836,
	227, 1836,
	228, 1836,
	229, 1836,
	230, 1836,
	231, 1836,
	232, 1836,
	233, 1836,
	234, 1836,
	235, 1836,
	236, 1836,
	237, 1836,
	238, 1836,
	240, 1836,
	241, 1836,
	242, 1836,
	243, 1836,
	244, 1836,
	248, 1836,
	249, 1836,
	250, 1836,
	251, 1836,
	253, 1836,
	254, 1836,
	255, 1836,
	256, 1836,
	257, 1836,
	258, 1836,
	259, 1836,
	261, 1836,
	263, 1836,
	264, 1836,
	265, 1836,
	266, 1836,
	267, 1836,
	268, 1836,
	269, 1836,
	270, 1836,
	271, 1836,
	272, 1836,
	273, 1836,
	277, 1836,
	278, 1836,
	279, 1836,
	280, 1836,
	281, 1836,
	282, 1836,
	284, 1836,
	285, 1836,
	286, 1836,
	288, 1836,
	289, 1836,
	290, 1836,
	291, 1836,
	292, 1836,
	293, 1836,
	294, 1836,
	296, 1836,
	297, 1836,
	298, 1836,
	299, 1836,
	300, 1836,
	301, 1836,
	302, 1836,
	303, 1836,
	304, 1836,
	305, 1836,
	306, 1836,
	307, 1836,
	308, 1836,
	310, 1836,
	311, 1836,
	312, 1836,
	313, 1836,
	314, 1836,
	315, 1836,
	316, 1836,
	317, 1836,
	318, 1836,
	319, 1836,
	320, 1836,
	321, 1836,
	322, 1836,
	323, 1836,
	324, 1836,
	325, 1836,
	326, 1836,
	327, 1836,
	328, 1836,
	329, 1836,
	330, 1836,
	331, 1836,
	332, 1836,
	334, 1836,
	335, 1836,
	336, 1836,
	337, 1836,
	338, 1836,
	339, 1836,
	340, 1836,
	341, 1836,
	342, 1836,
	343, 1836,
	344, 1836,
	345, 1836,
	346, 1836,
	347, 1836,
	348, 1836,
	349, 1836,
	350, 1836,
	351, 1836,
	352, 1836,
	353, 1836,
	354, 1836,
	355, 1836,
	356, 1836,
	357, 1836,
	358, 1836,
	359, 1836,
	360, 1836,
	361, 1836,
	362, 1836,
	363, 1836,
	364, 1836,
	365, 1836,
	366, 1836,
	367, 1836,
	368, 1836,
	371, 1836,
	373, 1836,
	376, 1836,
	377, 1836,
	378, 1836,
	381, 1836,
	382, 1836,
	383, 1836,
	384, 1836,
	385, 1836,
	386, 1836,
	387, 1836,
	388, 1836,
	389, 1836,
	390, 1836,
	391, 1836,
	392, 1836,
	393, 1836,
	394, 1836,
	395, 1836,
	396, 1836,
	397, 1836,
	398, 1836,
	399, 1836,
	400, 1836,
	402, 1836,
	403, 1836,
	404, 1836,
	405, 1836,
	406, 1836,
	407, 1836,
	408, 1836,
	409, 1836,
	410, 1836,
	411, 1836,
	412, 1836,
	413, 1836,
	414, 1836,
	415, 1836,
	416, 1836,
	418, 1836,
	419, 1836,
	420, 1836,
	422, 1836,
	423, 1836,
	424, 1836,
	425, 1836,
	426, 1836,
	427, 1836,
	428, 1836,
	429, 1836,
	430, 1836,
	431, 1836,
	432, 1836,
	433, 1836,
	434, 1836,
	435, 1836,
	437, 1836,
	439, 1836,
	440, 1836,
	441, 1836,
	447, 1836,
	448, 1836,
	449, 1836,
	451, 1836,
	452, 1836,
	453, 1836,
	454, 1836,
	455, 1836,
	456, 1836,
	457, 1836,
	458, 1836,
	459, 1836,
	460, 1836,
	461, 1836,
	463, 1836,
	464, 1836,
	465, 1836,
	466, 1836,
	467, 1836,
	468, 1836,
	469, 1836,
	470, 1836,
	471, 1836,
	472, 1836,
	473, 1836,
	474, 1836,
	475, 1836,
	477, 1836,
	478, 1836,
	479, 1836,
	480, 1836,
	481, 1836,
	482, 1836,
	483, 1836,
	484, 1836,
	485, 1836,
	486, 1836,
	487, 1836,
	488, 1836,
	489, 1836,
	490, 1836,
	492, 1836,
	493, 1836,
	494, 1836,
	495, 1836,
	496, 1836,
	497, 1836,
	498, 1836,
	499, 1836,
	500, 1836,
	501, 1836,
	502, 1836,
	503, 1836,
	504, 1836,
	505, 1836,
	506, 1836,
	507, 1836,
	508, 1836,
	509, 1836,
	510, 1836,
	511, 1836,
	512, 1836,
	513, 1836,
	514, 1836,
	516, 1836,
	518, 1836,
	519, 1836,
	520, 1836,
	521, 1836,
	522, 1836,
	523, 1836,
	524, 1836,
	525, 1836,
	526, 1836,
	527, 1836,
	528, 1836,
	529, 1836,
	530, 1836,
	531, 1836,
	532, 1836,
	533, 1836,
	534, 1836,
	535, 1836,
	536, 1836,
	537, 1836,
	538, 1836,
	540, 1836,
	541, 1836,
	542, 1836,
	543, 1836,
	544, 1836,
	546, 1836,
	547, 1836,
	548, 1836,
	549, 1836,
	550, 1836,
	551, 1836,
	553, 1836,
	554, 1836,
	556, 1836,
	557, 1836,
	558, 1836,
	559, 1836,
	560, 1836,
	562, 1836,
	564, 1836,
	565, 1836,
	566, 1836,
	567, 1836,
	568, 1836,
	569, 1836,
	570, 1836,
	571, 1836,
	572, 1836,
	573, 1836,
	574, 1836,
	575, 1836,
	576, 1836,
	577, 1836,
	578, 1836,
	579, 1836,
	581, 1836,
	582, 1836,
	583, 1836,
	584, 1836,
	585, 1836,
	586, 1836,
	587, 1836,
	588, 1836,
	589, 1836,
	590, 1836,
	591, 1836,
	594, 1836,
	595, 1836,
	596, 1836,
	597, 1836,
	598, 1836,
	599, 1836,
	601, 1836,
	602, 1836,
	603, 1836,
	604, 1836,
	605, 1836,
	606, 1836,
	607, 1836,
	608, 1836,
	609, 1836,
	614, 1836,
	615, 1836,
	616, 1836,
	617, 1836,
	618, 1836,
	619, 1836,
	620, 1836,
	635, 1836,
	642, 1836,
	643, 1836,
	644, 1836,
	652, 1836,
	656, 1836,
	-2, 0,
	-1, 830,
	4, 1552,
	21, 1552,
	22, 1552,
	23, 1552,
	24, 1552,
	25, 1552,
	26, 1552,
	27, 1552,
	28, 1552,
	30, 1552,
	31, 1552,
	37, 1552,
	41, 1552,
	43, 1552,
	44, 1552,
	45, 1552,
	47, 1552,
	48, 1552,
	49, 1552,
	50, 1552,
	51, 1552,
	52, 1552,
	53, 1552,
	54, 1552,
	55, 1552,
	57, 1552,
	58, 1552,
	59, 1552,
	60, 1552,
	62, 1552,
	63, 1552,
	64, 1552,
	65, 1552,
	66, 1552,
	67, 1552,
	68, 1552,
	69, 1552,
	73, 1552,
	74, 1552,
	75, 1552,
	76, 1552,
	78, 1552,
	79, 1552,
	80, 1552,
	84, 1552,
	85, 1552,
	86, 1552,
	87, 1552,
	88, 1552,
	89, 1552,
	90, 1552,
	91, 1552,
	94, 1552,
	95, 1552,
	96, 1552,
	97, 1552,
	98, 1552,
	100, 1552,
	102, 1552,
	103, 1552,
	104, 1552,
	105, 1552,
	106, 1552,
	107, 1552,
	108, 1552,
	110, 1552,
	111, 1552,
	112, 1552,
	114, 1552,
	115, 1552,
	116, 1552,
	124, 1552,
	125, 1552,
	126, 1552,
	127, 1552,
	128, 1552,
	130, 1552,
	131, 1552,
	132, 1552,
	133, 1552,
	135, 1552,
	136, 1552,
	137, 1552,
	138, 1552,
	140, 1552,
	141, 1552,
	142, 1552,
	144, 1552,
	145, 1552,
	146, 1552,
	149, 1552,
	150, 1552,
	151, 1552,
	153, 1552,
	154, 1552,
	155, 1552,
	157, 1552,
	158, 1552,
	159, 1552,
	161, 1552,
	162, 1552,
	163, 1552,
	164, 1552,
	165, 1552,
	166, 1552,
	167, 1552,
	168, 1552,
	169, 1552,
	170, 1552,
	171, 1552,
	172, 1552,
	173, 1552,
	174, 1552,
	175, 1552,
	176, 1552,
	177, 1552,
	178, 1552,
	180, 1552,
	186, 1552,
	187, 1552,
	188, 1552,
	189, 1552,
	193, 1552,
	195, 1552,
	196, 1552,
	197, 1552,
	199, 1552,
	200, 1552,
	203, 1552,
	204, 1552,
	205, 1552,
	206, 1552,
	207, 1552,
	208, 1552,
	209, 1552,
	210, 1552,
	211, 1552,
	212, 1552,
	213, 1552,
	214, 1552,
	215, 1552,
	216, 1552,
	218, 1552,
	219, 1552,
	221, 1552,
	222, 1552,
	224, 1552,
	225, 1552,
	226, 1552,
	227, 1552,
	228, 1552,
	229, 1552,
	230, 1552,
	231, 1552,
	232, 1552,
	233, 1552,
	234, 1552,
	236, 1552,
	237, 1552,
	238, 1552,
	240, 1552,
	241, 1552,
	242, 1552,
	243, 1552,
	244, 1552,
	248, 1552,
	249, 1552,
	250, 1552,
	251, 1552,
	254, 1552,
	255, 1552,
	256, 1552,
	257, 1552,
	258, 1552,
	259, 1552,
	261, 1552,
	263, 1552,
	264, 1552,
	265, 1552,
	267, 1552,
	269, 1552,
	270, 1552,
	271, 1552,
	273, 1552,
	277, 1552,
	278, 1552,
	279, 1552,
	280, 1552,
	281, 1552,
	282, 1552,
	284, 1552,
	285, 1552,
	286, 1552,
	288, 1552,
	289, 1552,
	290, 1552,
	292, 1552,
	293, 1552,
	296, 1552,
	297, 1552,
	298, 1552,
	299, 1552,
	300, 1552,
	301, 1552,
	302, 1552,
	305, 1552,
	306, 1552,
	307, 1552,
	308, 1552,
	310, 1552,
	311, 1552,
	312, 1552,
	313, 1552,
	314, 1552,
	315, 1552,
	316, 1552,
	317, 1552,
	318, 1552,
	319, 1552,
	320, 1552,
	321, 1552,
	322, 1552,
	323, 1552,
	324, 1552,
	325, 1552,
	326, 1552,
	327, 1552,
	328, 1552,
	329, 1552,
	330, 1552,
	331, 1552,
	332, 1552,
	334, 1552,
	336, 1552,
	337, 1552,
	338, 1552,
	339, 1552,
	340, 1552,
	341, 1552,
	342, 1552,
	343, 1552,
	344, 1552,
	345, 1552,
	346, 1552,
	347, 1552,
	348, 1552,
	349, 1552,
	350, 1552,
	351, 1552,
	352, 1552,
	354, 1552,
	355, 1552,
	357, 1552,
	359, 1552,
	360, 1552,
	361, 1552,
	362, 1552,
	364, 1552,
	365, 1552,
	366, 1552,
	367, 1552,
	368, 1552,
	371, 1552,
	373, 1552,
	376, 1552,
	377, 1552,
	378, 1552,
	381, 1552,
	382, 1552,
	383, 1552,
	385, 1552,
	387, 1552,
	388, 1552,
	389, 1552,
	390, 1552,
	391, 1552,
	392, 1552,
	393, 1552,
	394, 1552,
	395, 1552,
	396, 1552,
	397, 1552,
	398, 1552,
	399, 1552,
	400, 1552,
	402, 1552,
	403, 1552,
	404, 1552,
	405, 1552,
	406, 1552,
	407, 1552,
	408, 1552,
	409, 1552,
	410, 1552,
	411, 1552,
	412, 1552,
	413, 1552,
	414, 1552,
	415, 1552,
	416, 1552,
	418, 1552,
	419, 1552,
	420, 1552,
	422, 1552,
	423, 1552,
	424, 1552,
	425, 1552,
	426, 1552,
	427, 1552,
	428, 1552,
	429, 1552,
	430, 1552,
	431, 1552,
	432, 1552,
	433, 1552,
	434, 1552,
	435, 1552,
	437, 1552,
	439, 1552,
	440, 1552,
	441, 1552,
	447, 1552,
	448, 1552,
	449, 1552,
	451, 1552,
	452, 1552,
	453, 1552,
	454, 1552,
	455, 1552,
	456, 1552,
	457, 1552,
	458, 1552,
	459, 1552,
	460, 1552,
	461, 1552,
	463, 1552,
	464, 1552,
	465, 1552,
	466, 1552,
	467, 1552,
	469, 1552,
	470, 1552,
	471, 1552,
	472, 1552,
	473, 1552,
	474, 1552,
	475, 1552,
	477, 1552,
	478, 1552,
	479, 1552,
	480, 1552,
	481, 1552,
	482, 1552,
	483, 1552,
	484, 1552,
	485, 1552,
	486, 1552,
	487, 1552,
	488, 1552,
	489, 1552,
	490, 1552,
	492, 1552,
	493, 1552,
	494, 1552,
	495, 1552,
	496, 1552,
	497, 1552,
	499, 1552,
	500, 1552,
	501, 1552,
	502, 1552,
	503, 1552,
	504, 1552,
	505, 1552,
	507, 1552,
	508, 1552,
	509, 1552,
	510, 1552,
	511, 1552,
	512, 1552,
	513, 1552,
	514, 1552,
	516, 1552,
	518, 1552,
	519, 1552,
	520, 1552,
	521, 1552,
	522, 1552,
	523, 1552,
	524, 1552,
	525, 1552,
	526, 1552,
	527, 1552,
	528, 1552,
	529, 1552,
	530, 1552,
	531, 1552,
	532, 1552,
	533, 1552,
	534, 1552,
	535, 1552,
	536, 1552,
	537, 1552,
	538, 1552,
	540, 1552,
	541, 1552,
	543, 1552,
	544, 1552,
	546, 1552,
	547, 1552,
	548, 1552,
	549, 1552,
	550, 1552,
	551, 1552,
	553, 1552,
	554, 1552,
	556, 1552,
	557, 1552,
	558, 1552,
	559, 1552,
	560, 1552,
	562, 1552,
	564, 1552,
	565, 1552,
	566, 1552,
	567, 1552,
	568, 1552,
	569, 1552,
	570, 1552,
	571, 1552,
	573, 1552,
	574, 1552,
	575, 1552,
	576, 1552,
	577, 1552,
	578, 1552,
	579, 1552,
	582, 1552,
	583, 1552,
	584, 1552,
	585, 1552,
	586, 1552,
	587, 1552,
	588, 1552,
	589, 1552,
	591, 1552,
	594, 1552,
	595, 1552,
	596, 1552,
	597, 1552,
	598, 1552,
	599, 1552,
	601, 1552,
	602, 1552,
	603, 1552,
	604, 1552,
	605, 1552,
	606, 1552,
	607, 1552,
	608, 1552,
	609, 1552,
	614, 1552,
	615, 1552,
	616, 1552,
	617, 1552,
	618, 1552,
	619, 1552,
	-2, 0,
	-1, 849,
	201, 2639,
	561, 2639,
	634, 2639,
	654, 2639,
	-2, 0,
	-1, 850,
	201, 2625,
	561, 2625,
	634, 2625,
	654, 2625,
	-2, 0,
	-1, 852,
	201, 2918,
	561, 2918,
	634, 2918,
	654, 2918,
	-2, 0,
	-1, 855,
	201, 2762,
	561, 2762,
	634, 2762,
	654, 2762,
	-2, 0,
	-1, 856,
	201, 2965,
	561, 2965,
	634, 2965,
	654, 2965,
	-2, 0,
	-1, 864,
	201, 2790,
	561, 2790,
	634, 2790,
	654, 2790,
	-2, 849,
	-1, 880,
	8, 982,
	29, 982,
	642, 982,
	643, 982,
	-2, 987,
	-1, 884,
	1, 2696,
	655, 2696,
	658, 2696,
	-2, 987,
	-1, 885,
	1, 2749,
	655, 2749,
	658, 2749,
	-2, 987,
	-1, 888,
	1, 2795,
	655, 2795,
	658, 2795,
	-2, 980,
	-1, 889,
	1, 2852,
	655, 2852,
	658, 2852,
	-2, 981,
	-1, 890,
	1, 2701,
	655, 2701,
	658, 2701,
	-2, 984,
	-1, 891,
	1, 2611,
	655, 2611,
	658, 2611,
	-2, 985,
	-1, 931,
	654, 2568,
	657, 2568,
	-2, 1213,
	-1, 932,
	654, 2570,
	657, 2570,
	-2, 1214,
	-1, 933,
	654, 2569,
	657, 2569,
	-2, 1215,
	-1, 934,
	657, 2492,
	-2, 1216,
	-1, 960,
	194, 293,
	-2, 0,
	-1, 982,
	46, 2541,
	-2, 0,
	-1, 983,
	601, 1530,
	-2, 1298,
	-1, 1000,
	4, 1970,
	21, 1970,
	22, 1970,
	23, 1970,
	24, 1970,
	25, 1970,
	26, 1970,
	27, 1970,
	28, 1970,
	30, 1970,
	31, 1970,
	37, 1970,
	41, 1970,
	43, 1970,
	44, 1970,
	45, 1970,
	47, 1970,
	48, 1970,
	49, 1970,
	50, 1970,
	51, 1970,
	52, 1970,
	53, 1970,
	54, 1970,
	55, 1970,
	57, 1970,
	58, 1970,
	59, 1970,
	60, 1970,
	62, 1970,
	63, 1970,
	64, 1970,
	65, 1970,
	66, 1970,
	67, 1970,
	68, 1970,
	69, 1970,
	73, 1970,
	74, 1970,
	75, 1970,
	76, 1970,
	78, 1970,
	79, 1970,
	80, 1970,
	84, 1970,
	85, 1970,
	86, 1970,
	87, 1970,
	88, 1970,
	89, 1970,
	90, 1970,
	91, 1970,
	94, 1970,
	95, 1970,
	96, 1970,
	97, 1970,
	98, 1970,
	100, 1970,
	102, 1970,
	103, 1970,
	104, 1970,
	105, 1970,
	106, 1970,
	107, 1970,
	108, 1970,
	110, 1970,
	111, 1970,
	112, 1970,
	114, 1970,
	115, 1970,
	116, 1970,
	124, 1970,
	125, 1970,
	126, 1970,
	127, 1970,
	128, 1970,
	130, 1970,
	131, 1970,
	132, 1970,
	133, 1970,
	135, 1970,
	136, 1970,
	137, 1970,
	138, 1970,
	140, 1970,
	141, 1970,
	142, 1970,
	144, 1970,
	145, 1970,
	146, 1970,
	149, 1970,
	150, 1970,
	151, 1970,
	153, 1970,
	154, 1970,
	155, 1970,
	157, 1970,
	158, 1970,
	159, 1970,
	161, 1970,
	162, 1970,
	163, 1970,
	164, 1970,
	165, 1970,
	166, 1970,
	167, 1970,
	168, 1970,
	169, 1970,
	170, 1970,
	171, 1970,
	172, 1970,
	173, 1970,
	174, 1970,
	175, 1970,
	176, 1970,
	177, 1970,
	178, 1970,
	180, 1970,
	186, 1970,
	187, 1970,
	188, 1970,
	189, 1970,
	193, 1970,
	195, 1970,
	196, 1970,
	197, 1970,
	199, 1970,
	200, 1970,
	203, 1970,
	204, 1970,
	205, 1970,
	206, 1970,
	207, 1970,
	208, 1970,
	209, 1970,
	210, 1970,
	211, 1970,
	212, 1970,
	213, 1970,
	214, 1970,
	215, 1970,
	216, 1970,
	218, 1970,
	219, 1970,
	221, 1970,
	222, 1970,
	224, 1970,
	225, 1970,
	226, 1970,
	227, 1970,
	228, 1970,
	229, 1970,
	230, 1970,
	231, 1970,
	232, 1970,
	233, 1970,
	234, 1970,
	236, 1970,
	237, 1970,
	238, 1970,
	240, 1970,
	241, 1970,
	242, 1970,
	243, 1970,
	244, 1970,
	248, 1970,
	249, 1970,
	250, 1970,
	251, 1970,
	254, 1970,
	255, 1970,
	256, 1970,
	257, 1970,
	258, 1970,
	259, 1970,
	261, 1970,
	263, 1970,
	264, 1970,
	265, 1970,
	267, 1970,
	269, 1970,
	270, 1970,
	271, 1970,
	273, 1970,
	277, 1970,
	278, 1970,
	279, 1970,
	280, 1970,
	281, 1970,
	282, 1970,
	284, 1970,
	285, 1970,
	286, 1970,
	288, 1970,
	289, 1970,
	290, 1970,
	292, 1970,
	293, 1970,
	296, 1970,
	297, 1970,
	298, 1970,
	299, 1970,
	300, 1970,
	301, 1970,
	302, 1970,
	305, 1970,
	306, 1970,
	307, 1970,
	308, 1970,
	310, 1970,
	311, 1970,
	312, 1970,
	313, 1970,
	314, 1970,
	315, 1970,
	316, 1970,
	317, 1970,
	318, 1970,
	319, 1970,
	320, 1970,
	321, 1970,
	322, 1970,
	323, 1970,
	324, 1970,
	325, 1970,
	326, 1970,
	327, 1970,
	328, 1970,
	329, 1970,
	330, 1970,
	331, 1970,
	332, 1970,
	334, 1970,
	336, 1970,
	337, 1970,
	338, 1970,
	339, 1970,
	340, 1970,
	341, 1970,
	342, 1970,
	343, 1970,
	344, 1970,
	345, 1970,
	346, 1970,
	347, 1970,
	348, 1970,
	349, 1970,
	350, 1970,
	351, 1970,
	352, 1970,
	354, 1970,
	355, 1970,
	357, 1970,
	359, 1970,
	360, 1970,
	361, 1970,
	362, 1970,
	364, 1970,
	365, 1970,
	366, 1970,
	367, 1970,
	368, 1970,
	371, 1970,
	373, 1970,
	376, 1970,
	377, 1970,
	378, 1970,
	381, 1970,
	382, 1970,
	383, 1970,
	385, 1970,
	387, 1970,
	388, 1970,
	389, 1970,
	390, 1970,
	391, 1970,
	392, 1970,
	393, 1970,
	394, 1970,
	395, 1970,
	396, 1970,
	397, 1970,
	398, 1970,
	399, 1970,
	400, 1970,
	402, 1970,
	403, 1970,
	404, 1970,
	405, 1970,
	406, 1970,
	407, 1970,
	408, 1970,
	409, 1970,
	410, 1970,
	411, 1970,
	412, 1970,
	413, 1970,
	414, 1970,
	415, 1970,
	416, 1970,
	418, 1970,
	419, 1970,
	420, 1970,
	422, 1970,
	423, 1970,
	424, 1970,
	425, 1970,
	426, 1970,
	427, 1970,
	428, 1970,
	429, 1970,
	430, 1970,
	431, 1970,
	432, 1970,
	433, 1970,
	434, 1970,
	435, 1970,
	437, 1970,
	439, 1970,
	440, 1970,
	441, 1970,
	447, 1970,
	448, 1970,
	449, 1970,
	451, 1970,
	452, 1970,
	453, 1970,
	454, 1970,
	455, 1970,
	456, 1970,
	457, 1970,
	458, 1970,
	459, 1970,
	460, 1970,
	461, 1970,
	463, 1970,
	464, 1970,
	465, 1970,
	466, 1970,
	467, 1970,
	469, 1970,
	470, 1970,
	471, 1970,
	472, 1970,
	473, 1970,
	474, 1970,
	475, 1970,
	477, 1970,
	478, 1970,
	479, 1970,
	480, 1970,
	481, 1970,
	482, 1970,
	483, 1970,
	484, 1970,
	485, 1970,
	486, 1970,
	487, 1970,
	488, 1970,
	489, 1970,
	490, 1970,
	492, 1970,
	493, 1970,
	494, 1970,
	495, 1970,
	496, 1970,
	497, 1970,
	499, 1970,
	500, 1970,
	501, 1970,
	502, 1970,
	503, 1970,
	504, 1970,
	505, 1970,
	507, 1970,
	508, 1970,
	509, 1970,
	510, 1970,
	511, 1970,
	512, 1970,
	513, 1970,
	514, 1970,
	516, 1970,
	518, 1970,
	519, 1970,
	520, 1970,
	521, 1970,
	522, 1970,
	523, 1970,
	524, 1970,
	525, 1970,
	526, 1970,
	527, 1970,
	528, 1970,
	529, 1970,
	530, 1970,
	531, 1970,
	532, 1970,
	533, 1970,
	534, 1970,
	535, 1970,
	536, 1970,
	537, 1970,
	538, 1970,
	540, 1970,
	541, 1970,
	543, 1970,
	544, 1970,
	546, 1970,
	547, 1970,
	548, 1970,
	549, 1970,
	550, 1970,
	551, 1970,
	553, 1970,
	554, 1970,
	556, 1970,
	557, 1970,
	558, 1970,
	559, 1970,
	560, 1970,
	562, 1970,
	564, 1970,
	565, 1970,
	566, 1970,
	567, 1970,
	568, 1970,
	569, 1970,
	570, 1970,
	571, 1970,
	573, 1970,
	574, 1970,
	575, 1970,
	576, 1970,
	577, 1970,
	578, 1970,
	579, 1970,
	582, 1970,
	583, 1970,
	584, 1970,
	585, 1970,
	586, 1970,
	587, 1970,
	588, 1970,
	589, 1970,
	591, 1970,
	594, 1970,
	595, 1970,
	596, 1970,
	597, 1970,
	598, 1970,
	599, 1970,
	601, 1970,
	602, 1970,
	603, 1970,
	604, 1970,
	605, 1970,
	606, 1970,
	607, 1970,
	608, 1970,
	609, 1970,
	614, 1970,
	615, 1970,
	616, 1970,
	617, 1970,
	618, 1970,
	619, 1970,
	-2, 0,
	-1, 1011,
	281, 522,
	-2, 0,
	-1, 1089,
	201, 1026,
	-2, 0,
	-1, 1090,
	424, 1079,
	497, 1079,
	544, 1079,
	566, 1079,
	-2, 0,
	-1, 1091,
	424, 1078,
	497, 1078,
	544, 1078,
	566, 1078,
	-2, 1000,
	-1, 1095,
	1, 1131,
	651, 1131,
	653, 1131,
	655, 1131,
	658, 1131,
	-2, 0,
	-1, 1097,
	1, 1053,
	651, 1053,
	653, 1053,
	655, 1053,
	658, 1053,
	-2, 0,
	-1, 1098,
	1, 1057,
	651, 1057,
	653, 1057,
	655, 1057,
	658, 1057,
	-2, 0,
	-1, 1099,
	1, 1204,
	194, 1204,
	651, 1204,
	653, 1204,
	655, 1204,
	658, 1204,
	-2, 0,
	-1, 1107,
	1, 1084,
	651, 1084,
	653, 1084,
	655, 1084,
	658, 1084,
	-2, 0,
	-1, 1114,
	1, 1131,
	651, 1131,
	653, 1131,
	655, 1131,
	658, 1131,
	-2, 0,
	-1, 1115,
	1, 1133,
	651, 1133,
	653, 1133,
	655, 1133,
	658, 1133,
	-2, 0,
	-1, 1116,
	1, 1136,
	651, 1136,
	653, 1136,
	655, 1136,
	658, 1136,
	-2, 0,
	-1, 1124,
	1, 1167,
	651, 1167,
	653, 1167,
	655, 1167,
	658, 1167,
	-2, 0,
	-1, 1125,
	1, 1169,
	651, 1169,
	653, 1169,
	655, 1169,
	658, 1169,
	-2, 0,
	-1, 1130,
	1, 1197,
	651, 1197,
	653, 1197,
	655, 1197,
	658, 1197,
	-2, 0,
	-1, 1181,
	181, 1840,
	194, 1840,
	295, 1840,
	369, 1840,
	-2, 1776,
	-1, 1197,
	181, 1839,
	194, 1839,
	295, 1839,
	369, 1839,
	-2, 1773,
	-1, 1226,
	654, 2567,
	-2, 857,
	-1, 1255,
	5, 2559,
	652, 2557,
	-2, 2548,
	-1, 1263,
	5, 2580,
	652, 2577,
	-2, 2568,
	-1, 1264,
	5, 2581,
	652, 2578,
	-2, 2569,
	-1, 1272,
	654, 2565,
	-2, 2547,
	-1, 1273,
	652, 3075,
	-2, 2566,
	-1, 1296,
	5, 2582,
	38, 2582,
	134, 2582,
	634, 2582,
	650, 2582,
	653, 2582,
	654, 2582,
	657, 2582,
	-2, 3074,
	-1, 1297,
	5, 2045,
	-2, 3044,
	-1, 1298,
	5, 2046,
	-2, 3045,
	-1, 1299,
	5, 2047,
	-2, 3060,
	-1, 1300,
	5, 2048,
	-2, 3022,
	-1, 1301,
	5, 2049,
	-2, 3057,
	-1, 1302,
	5, 2057,
	-2, 3035,
	-1, 1303,
	5, 2044,
	-2, 3031,
	-1, 1304,
	5, 2044,
	-2, 3030,
	-1, 1305,
	5, 2044,
	-2, 3050,
	-1, 1306,
	5, 2055,
	-2, 3024,
	-1, 1307,
	5, 2060,
	-2, 3023,
	-1, 1308,
	5, 2062,
	-2, 3070,
	-1, 1311,
	5, 2084,
	-2, 3063,
	-1, 1312,
	5, 2076,
	-2, 3064,
	-1, 1313,
	5, 2084,
	-2, 3065,
	-1, 1314,
	5, 2080,
	-2, 3066,
	-1, 1315,
	5, 2030,
	-2, 3036,
	-1, 1316,
	5, 2031,
	-2, 3037,
	-1, 1317,
	5, 2032,
	-2, 3025,
	-1, 1345,
	5, 2067,
	-2, 3071,
	-1, 1346,
	5, 2068,
	-2, 3061,
	-1, 1347,
	5, 2069,
	602, 2069,
	-2, 3026,
	-1, 1348,
	5, 2070,
	602, 2070,
	-2, 3027,
	-1, 1386,
	652, 2577,
	-2, 2568,
	-1, 1387,
	652, 2578,
	-2, 2569,
	-1, 1489,
	201, 2965,
	561, 2965,
	634, 2965,
	654, 2965,
	-2, 0,
	-1, 1494,
	1, 833,
	655, 833,
	658, 833,
	-2, 1685,
	-1, 1541,
	1, 1680,
	655, 1680,
	658, 1680,
	-2, 1685,
	-1, 1643,
	389, 2542,
	451, 2542,
	499, 2542,
	644, 2542,
	-2, 2530,
	-1, 1649,
	201, 149,
	288, 149,
	354, 149,
	609, 149,
	-2, 2960,
	-1, 1650,
	201, 150,
	288, 150,
	354, 150,
	609, 150,
	-2, 2686,
	-1, 1651,
	201, 151,
	288, 151,
	354, 151,
	609, 151,
	-2, 2875,
	-1, 1657,
	656, 2542,
	-2, 2544,
	-1, 1681,
	1, 1527,
	456, 1481,
	499, 1481,
	626, 1481,
	631, 1481,
	651, 1527,
	653, 1527,
	655, 1527,
	658, 1527,
	-2, 1825,
	-1, 1687,
	217, 1624,
	239, 1624,
	467, 1624,
	-2, 0,
	-1, 1755,
	46, 2540,
	-2, 1260,
	-1, 1762,
	1, 1527,
	651, 1527,
	653, 1527,
	655, 1527,
	658, 1527,
	-2, 1825,
	-1, 1765,
	433, 1297,
	601, 1297,
	-2, 443,
	-1, 1771,
	4, 1552,
	21, 1552,
	22, 1552,
	23, 1552,
	24, 1552,
	25, 1552,
	26, 1552,
	27, 1552,
	28, 1552,
	30, 1552,
	31, 1552,
	37, 1552,
	41, 1552,
	43, 1552,
	44, 1552,
	45, 1552,
	47, 1552,
	48, 1552,
	49, 1552,
	50, 1552,
	51, 1552,
	52, 1552,
	53, 1552,
	54, 1552,
	55, 1552,
	57, 1552,
	58, 1552,
	59, 1552,
	60, 1552,
	62, 1552,
	63, 1552,
	64, 1552,
	65, 1552,
	66, 1552,
	67, 1552,
	68, 1552,
	69, 1552,
	73, 1552,
	74, 1552,
	75, 1552,
	76, 1552,
	78, 1552,
	79, 1552,
	80, 1552,
	84, 1552,
	85, 1552,
	86, 1552,
	87, 1552,
	88, 1552,
	89, 1552,
	90, 1552,
	91, 1552,
	94, 1552,
	95, 1552,
	96, 1552,
	97, 1552,
	98, 1552,
	100, 1552,
	102, 1552,
	103, 1552,
	104, 1552,
	105, 1552,
	106, 1552,
	107, 1552,
	108, 1552,
	110, 1552,
	111, 1552,
	112, 1552,
	114, 1552,
	115, 1552,
	116, 1552,
	124, 1552,
	125, 1552,
	126, 1552,
	127, 1552,
	128, 1552,
	130, 1552,
	131, 1552,
	132, 1552,
	133, 1552,
	135, 1552,
	136, 1552,
	137, 1552,
	138, 1552,
	140, 1552,
	141, 1552,
	142, 1552,
	144, 1552,
	145, 1552,
	146, 1552,
	149, 1552,
	150, 1552,
	151, 1552,
	153, 1552,
	154, 1552,
	155, 1552,
	157, 1552,
	158, 1552,
	159, 1552,
	161, 1552,
	162, 1552,
	163, 1552,
	164, 1552,
	165, 1552,
	166, 1552,
	167, 1552,
	168, 1552,
	169, 1552,
	170, 1552,
	171, 1552,
	172, 1552,
	173, 1552,
	174, 1552,
	175, 1552,
	176, 1552,
	177, 1552,
	178, 1552,
	186, 1552,
	187, 1552,
	188, 1552,
	189, 1552,
	193, 1552,
	195, 1552,
	196, 1552,
	197, 1552,
	199, 1552,
	200, 1552,
	203, 1552,
	204, 1552,
	205, 1552,
	206, 1552,
	207, 1552,
	208, 1552,
	209, 1552,
	210, 1552,
	211, 1552,
	212, 1552,
	213, 1552,
	214, 1552,
	215, 1552,
	216, 1552,
	218, 1552,
	219, 1552,
	221, 1552,
	222, 1552,
	224, 1552,
	225, 1552,
	226, 1552,
	227, 1552,
	228, 1552,
	229, 1552,
	230, 1552,
	231, 1552,
	232, 1552,
	233, 1552,
	234, 1552,
	236, 1552,
	237, 1552,
	238, 1552,
	240, 1552,
	241, 1552,
	242, 1552,
	243, 1552,
	244, 1552,
	249, 1552,
	250, 1552,
	251, 1552,
	254, 1552,
	255, 1552,
	256, 1552,
	257, 1552,
	258, 1552,
	259, 1552,
	261, 1552,
	263, 1552,
	264, 1552,
	265, 1552,
	267, 1552,
	269, 1552,
	270, 1552,
	271, 1552,
	273, 1552,
	277, 1552,
	278, 1552,
	279, 1552,
	280, 1552,
	281, 1552,
	282, 1552,
	284, 1552,
	285, 1552,
	286, 1552,
	288, 1552,
	289, 1552,
	290, 1552,
	292, 1552,
	293, 1552,
	296, 1552,
	297, 1552,
	298, 1552,
	299, 1552,
	300, 1552,
	301, 1552,
	302, 1552,
	305, 1552,
	306, 1552,
	307, 1552,
	308, 1552,
	310, 1552,
	311, 1552,
	312, 1552,
	313, 1552,
	314, 1552,
	315, 1552,
	316, 1552,
	317, 1552,
	318, 1552,
	319, 1552,
	320, 1552,
	321, 1552,
	322, 1552,
	323, 1552,
	324, 1552,
	325, 1552,
	326, 1552,
	327, 1552,
	328, 1552,
	329, 1552,
	330, 1552,
	331, 1552,
	332, 1552,
	334, 1552,
	336, 1552,
	337, 1552,
	338, 1552,
	339, 1552,
	340, 1552,
	341, 1552,
	342, 1552,
	343, 1552,
	344, 1552,
	345, 1552,
	346, 1552,
	347, 1552,
	348, 1552,
	349, 1552,
	350, 1552,
	351, 1552,
	352, 1552,
	354, 1552,
	355, 1552,
	359, 1552,
	360, 1552,
	361, 1552,
	362, 1552,
	364, 1552,
	365, 1552,
	366, 1552,
	367, 1552,
	368, 1552,
	371, 1552,
	373, 1552,
	374, 1552,
	376, 1552,
	377, 1552,
	378, 1552,
	381, 1552,
	382, 1552,
	383, 1552,
	385, 1552,
	387, 1552,
	388, 1552,
	389, 1552,
	390, 1552,
	391, 1552,
	392, 1552,
	393, 1552,
	394, 1552,
	395, 1552,
	396, 1552,
	397, 1552,
	398, 1552,
	399, 1552,
	400, 1552,
	402, 1552,
	403, 1552,
	404, 1552,
	405, 1552,
	406, 1552,
	407, 1552,
	408, 1552,
	409, 1552,
	410, 1552,
	411, 1552,
	412, 1552,
	413, 1552,
	414, 1552,
	415, 1552,
	416, 1552,
	418, 1552,
	419, 1552,
	420, 1552,
	422, 1552,
	423, 1552,
	424, 1552,
	425, 1552,
	426, 1552,
	427, 1552,
	428, 1552,
	429, 1552,
	430, 1552,
	431, 1552,
	432, 1552,
	433, 1552,
	434, 1552,
	435, 1552,
	437, 1552,
	439, 1552,
	440, 1552,
	441, 1552,
	447, 1552,
	448, 1552,
	449, 1552,
	451, 1552,
	452, 1552,
	453, 1552,
	454, 1552,
	455, 1552,
	456, 1552,
	457, 1552,
	458, 1552,
	459, 1552,
	460, 1552,
	461, 1552,
	463, 1552,
	464, 1552,
	465, 1552,
	466, 1552,
	467, 1552,
	469, 1552,
	470, 1552,
	471, 1552,
	472, 1552,
	473, 1552,
	474, 1552,
	475, 1552,
	477, 1552,
	478, 1552,
	479, 1552,
	480, 1552,
	481, 1552,
	482, 1552,
	483, 1552,
	484, 1552,
	485, 1552,
	486, 1552,
	487, 1552,
	488, 1552,
	489, 1552,
	490, 1552,
	492, 1552,
	493, 1552,
	494, 1552,
	495, 1552,
	496, 1552,
	497, 1552,
	499, 1552,
	500, 1552,
	501, 1552,
	502, 1552,
	503, 1552,
	504, 1552,
	505, 1552,
	507, 1552,
	508, 1552,
	509, 1552,
	510, 1552,
	511, 1552,
	512, 1552,
	513, 1552,
	514, 1552,
	516, 1552,
	518, 1552,
	519, 1552,
	520, 1552,
	521, 1552,
	522, 1552,
	523, 1552,
	524, 1552,
	525, 1552,
	526, 1552,
	527, 1552,
	528, 1552,
	529, 1552,
	530, 1552,
	531, 1552,
	532, 1552,
	533, 1552,
	534, 1552,
	535, 1552,
	536, 1552,
	537, 1552,
	538, 1552,
	540, 1552,
	541, 1552,
	543, 1552,
	544, 1552,
	546, 1552,
	547, 1552,
	548, 1552,
	549, 1552,
	550, 1552,
	551, 1552,
	553, 1552,
	554, 1552,
	556, 1552,
	557, 1552,
	558, 1552,
	559, 1552,
	560, 1552,
	562, 1552,
	564, 1552,
	565, 1552,
	566, 1552,
	567, 1552,
	568, 1552,
	569, 1552,
	570, 1552,
	571, 1552,
	573, 1552,
	574, 1552,
	575, 1552,
	576, 1552,
	577, 1552,
	578, 1552,
	579, 1552,
	582, 1552,
	583, 1552,
	584, 1552,
	585, 1552,
	586, 1552,
	587, 1552,
	588, 1552,
	589, 1552,
	591, 1552,
	594, 1552,
	595, 1552,
	596, 1552,
	597, 1552,
	598, 1552,
	599, 1552,
	601, 1552,
	602, 1552,
	603, 1552,
	604, 1552,
	605, 1552,
	606, 1552,
	607, 1552,
	608, 1552,
	609, 1552,
	614, 1552,
	615, 1552,
	616, 1552,
	617, 1552,
	618, 1552,
	619, 1552,
	-2, 0,
	-1, 1794,
	1, 662,
	651, 662,
	653, 662,
	655, 662,
	658, 662,
	-2, 1796,
	-1, 1797,
	4, 3069,
	11, 3069,
	12, 3069,
	14, 3069,
	15, 3069,
	16, 3069,
	17, 3069,
	18, 3069,
	19, 3069,
	21, 3069,
	22, 3069,
	23, 3069,
	24, 3069,
	25, 3069,
	26, 3069,
	27, 3069,
	28, 3069,
	30, 3069,
	31, 3069,
	34, 3069,
	35, 3069,
	37, 3069,
	39, 3069,
	41, 3069,
	43, 3069,
	44, 3069,
	45, 3069,
	47, 3069,
	48, 3069,
	49, 3069,
	50, 3069,
	51, 3069,
	52, 3069,
	53, 3069,
	54, 3069,
	55, 3069,
	57, 3069,
	58, 3069,
	59, 3069,
	60, 3069,
	62, 3069,
	63, 3069,
	64, 3069,
	65, 3069,
	66, 3069,
	67, 3069,
	68, 3069,
	69, 3069,
	72, 3069,
	73, 3069,
	74, 3069,
	75, 3069,
	76, 3069,
	78, 3069,
	79, 3069,
	80, 3069,
	81, 3069,
	84, 3069,
	85, 3069,
	86, 3069,
	87, 3069,
	88, 3069,
	89, 3069,
	90, 3069,
	91, 3069,
	92, 3069,
	94, 3069,
	95, 3069,
	96, 3069,
	97, 3069,
	98, 3069,
	100, 3069,
	101, 3069,
	102, 3069,
	103, 3069,
	104, 3069,
	105, 3069,
	106, 3069,
	107, 3069,
	108, 3069,
	110, 3069,
	111, 3069,
	112, 3069,
	113, 3069,
	114, 3069,
	115, 3069,
	116, 3069,
	124, 3069,
	125, 3069,
	126, 3069,
	127, 3069,
	128, 3069,
	130, 3069,
	131, 3069,
	132, 3069,
	133, 3069,
	135, 3069,
	136, 3069,
	137, 3069,
	138, 3069,
	140, 3069,
	141, 3069,
	142, 3069,
	144, 3069,
	145, 3069,
	146, 3069,
	149, 3069,
	150, 3069,
	151, 3069,
	153, 3069,
	154, 3069,
	155, 3069,
	157, 3069,
	158, 3069,
	159, 3069,
	161, 3069,
	162, 3069,
	163, 3069,
	164, 3069,
	165, 3069,
	166, 3069,
	167, 3069,
	168, 3069,
	169, 3069,
	170, 3069,
	171, 3069,
	172, 3069,
	173, 3069,
	174, 3069,
	175, 3069,
	176, 3069,
	177, 3069,
	178, 3069,
	182, 3069,
	183, 3069,
	184, 3069,
	185, 3069,
	186, 3069,
	187, 3069,
	188, 3069,
	189, 3069,
	192, 3069,
	193, 3069,
	195, 3069,
	196, 3069,
	197, 3069,
	199, 3069,
	200, 3069,
	202, 3069,
	203, 3069,
	204, 3069,
	205, 3069,
	206, 3069,
	207, 3069,
	208, 3069,
	209, 3069,
	210, 3069,
	211, 3069,
	212, 3069,
	213, 3069,
	214, 3069,
	215, 3069,
	216, 3069,
	218, 3069,
	219, 3069,
	221, 3069,
	222, 3069,
	224, 3069,
	225, 3069,
	226, 3069,
	227, 3069,
	228, 3069,
	229, 3069,
	230, 3069,
	231, 3069,
	232, 3069,
	233, 3069,
	234, 3069,
	235, 3069,
	236, 3069,
	237, 3069,
	238, 3069,
	239, 3069,
	240, 3069,
	241, 3069,
	242, 3069,
	243, 3069,
	244, 3069,
	246, 3069,
	247, 3069,
	249, 3069,
	250, 3069,
	251, 3069,
	253, 3069,
	254, 3069,
	255, 3069,
	256, 3069,
	257, 3069,
	258, 3069,
	259, 3069,
	261, 3069,
	263, 3069,
	264, 3069,
	265, 3069,
	266, 3069,
	267, 3069,
	268, 3069,
	269, 3069,
	270, 3069,
	271, 3069,
	272, 3069,
	273, 3069,
	275, 3069,
	276, 3069,
	277, 3069,
	278, 3069,
	279, 3069,
	280, 3069,
	281, 3069,
	282, 3069,
	284, 3069,
	285, 3069,
	286, 3069,
	288, 3069,
	289, 3069,
	290, 3069,
	291, 3069,
	292, 3069,
	293, 3069,
	294, 3069,
	296, 3069,
	297, 3069,
	298, 3069,
	299, 3069,
	300, 3069,
	301, 3069,
	302, 3069,
	305, 3069,
	306, 3069,
	307, 3069,
	308, 3069,
	309, 3069,
	310, 3069,
	311, 3069,
	312, 3069,
	313, 3069,
	314, 3069,
	315, 3069,
	316, 3069,
	317, 3069,
	318, 3069,
	319, 3069,
	320, 3069,
	321, 3069,
	322, 3069,
	323, 3069,
	324, 3069,
	325, 3069,
	326, 3069,
	327, 3069,
	328, 3069,
	329, 3069,
	330, 3069,
	331, 3069,
	332, 3069,
	334, 3069,
	335, 3069,
	336, 3069,
	337, 3069,
	338, 3069,
	339, 3069,
	340, 3069,
	341, 3069,
	342, 3069,
	343, 3069,
	344, 3069,
	345, 3069,
	346, 3069,
	347, 3069,
	348, 3069,
	349, 3069,
	350, 3069,
	351, 3069,
	352, 3069,
	354, 3069,
	355, 3069,
	358, 3069,
	359, 3069,
	360, 3069,
	361, 3069,
	362, 3069,
	364, 3069,
	365, 3069,
	366, 3069,
	367, 3069,
	368, 3069,
	371, 3069,
	373, 3069,
	376, 3069,
	377, 3069,
	378, 3069,
	379, 3069,
	381, 3069,
	382, 3069,
	383, 3069,
	385, 3069,
	387, 3069,
	388, 3069,
	389, 3069,
	390, 3069,
	391, 3069,
	392, 3069,
	393, 3069,
	394, 3069,
	395, 3069,
	396, 3069,
	397, 3069,
	398, 3069,
	399, 3069,
	400, 3069,
	402, 3069,
	403, 3069,
	404, 3069,
	405, 3069,
	406, 3069,
	407, 3069,
	408, 3069,
	409, 3069,
	410, 3069,
	411, 3069,
	412, 3069,
	413, 3069,
	414, 3069,
	415, 3069,
	416, 3069,
	418, 3069,
	419, 3069,
	420, 3069,
	422, 3069,
	423, 3069,
	424, 3069,
	425, 3069,
	426, 3069,
	427, 3069,
	428, 3069,
	429, 3069,
	430, 3069,
	431, 3069,
	432, 3069,
	433, 3069,
	434, 3069,
	435, 3069,
	437, 3069,
	439, 3069,
	440, 3069,
	441, 3069,
	447, 3069,
	448, 3069,
	449, 3069,
	450, 3069,
	451, 3069,
	452, 3069,
	453, 3069,
	454, 3069,
	455, 3069,
	456, 3069,
	457, 3069,
	458, 3069,
	459, 3069,
	460, 3069,
	461, 3069,
	463, 3069,
	464, 3069,
	465, 3069,
	466, 3069,
	467, 3069,
	468, 3069,
	469, 3069,
	470, 3069,
	471, 3069,
	472, 3069,
	473, 3069,
	474, 3069,
	475, 3069,
	476, 3069,
	477, 3069,
	478, 3069,
	479, 3069,
	480, 3069,
	481, 3069,
	482, 3069,
	483, 3069,
	484, 3069,
	485, 3069,
	486, 3069,
	487, 3069,
	488, 3069,
	489, 3069,
	490, 3069,
	492, 3069,
	493, 3069,
	494, 3069,
	495, 3069,
	496, 3069,
	497, 3069,
	499, 3069,
	500, 3069,
	501, 3069,
	502, 3069,
	503, 3069,
	504, 3069,
	505, 3069,
	506, 3069,
	507, 3069,
	508, 3069,
	509, 3069,
	510, 3069,
	511, 3069,
	512, 3069,
	513, 3069,
	514, 3069,
	516, 3069,
	518, 3069,
	519, 3069,
	520, 3069,
	521, 3069,
	522, 3069,
	523, 3069,
	524, 3069,
	525, 3069,
	526, 3069,
	527, 3069,
	528, 3069,
	529, 3069,
	530, 3069,
	531, 3069,
	532, 3069,
	533, 3069,
	534, 3069,
	535, 3069,
	536, 3069,
	537, 3069,
	538, 3069,
	540, 3069,
	541, 3069,
	542, 3069,
	543, 3069,
	544, 3069,
	546, 3069,
	547, 3069,
	548, 3069,
	549, 3069,
	550, 3069,
	551, 3069,
	553, 3069,
	554, 3069,
	556, 3069,
	557, 3069,
	558, 3069,
	559, 3069,
	560, 3069,
	562, 3069,
	564, 3069,
	565, 3069,
	566, 3069,
	567, 3069,
	568, 3069,
	569, 3069,
	570, 3069,
	571, 3069,
	573, 3069,
	574, 3069,
	575, 3069,
	576, 3069,
	577, 3069,
	578, 3069,
	579, 3069,
	582, 3069,
	583, 3069,
	584, 3069,
	585, 3069,
	586, 3069,
	587, 3069,
	588, 3069,
	589, 3069,
	591, 3069,
	594, 3069,
	595, 3069,
	596, 3069,
	597, 3069,
	598, 3069,
	599, 3069,
	601, 3069,
	602, 3069,
	603, 3069,
	604, 3069,
	605, 3069,
	606, 3069,
	607, 3069,
	608, 3069,
	609, 3069,
	614, 3069,
	615, 3069,
	616, 3069,
	617, 3069,
	618, 3069,
	619, 3069,
	620, 3069,
	622, 3069,
	632, 3069,
	633, 3069,
	634, 3069,
	635, 3069,
	636, 3069,
	637, 3069,
	639, 3069,
	640, 3069,
	641, 3069,
	642, 3069,
	643, 3069,
	644, 3069,
	645, 3069,
	646, 3069,
	647, 3069,
	650, 3069,
	653, 3069,
	654, 3069,
	656, 3069,
	657, 3069,
	-2, 0,
	-1, 1802,
	201, 2918,
	561, 2918,
	634, 2918,
	654, 2918,
	-2, 0,
	-1, 1850,
	201, 1027,
	-2, 2909,
	-1, 1851,
	201, 1028,
	-2, 2694,
	-1, 1852,
	201, 1029,
	-2, 2861,
	-1, 1857,
	424, 1079,
	497, 1079,
	544, 1079,
	566, 1079,
	-2, 0,
	-1, 1868,
	1, 1624,
	239, 1624,
	651, 1624,
	653, 1624,
	655, 1624,
	658, 1624,
	-2, 0,
	-1, 1885,
	1, 1074,
	651, 1074,
	653, 1074,
	655, 1074,
	658, 1074,
	-2, 0,
	-1, 1886,
	1, 1118,
	651, 1118,
	653, 1118,
	655, 1118,
	658, 1118,
	-2, 0,
	-1, 1887,
	1, 1126,
	651, 1126,
	653, 1126,
	655, 1126,
	658, 1126,
	-2, 0,
	-1, 1890,
	1, 1083,
	651, 1083,
	653, 1083,
	655, 1083,
	658, 1083,
	-2, 0,
	-1, 1892,
	1, 1089,
	651, 1089,
	653, 1089,
	655, 1089,
	658, 1089,
	-2, 0,
	-1, 1895,
	1, 1085,
	651, 1085,
	653, 1085,
	655, 1085,
	658, 1085,
	-2, 0,
	-1, 1900,
	1, 1099,
	651, 1099,
	653, 1099,
	655, 1099,
	658, 1099,
	-2, 0,
	-1, 1935,
	1, 2899,
	651, 2899,
	653, 2899,
	654, 2899,
	655, 2899,
	658, 2899,
	-2, 0,
	-1, 1939,
	1, 1178,
	651, 1178,
	653, 1178,
	655, 1178,
	658, 1178,
	-2, 0,
	-1, 1959,
	181, 1839,
	194, 1839,
	295, 1839,
	369, 1839,
	-2, 1777,
	-1, 2061,
	160, 1798,
	181, 1798,
	194, 1798,
	260, 1798,
	295, 1798,
	369, 1798,
	380, 1798,
	580, 1798,
	-2, 2249,
	-1, 2122,
	653, 2424,
	-2, 0,
	-1, 2158,
	160, 1798,
	181, 1798,
	194, 1798,
	260, 1798,
	295, 1798,
	369, 1798,
	380, 1798,
	580, 1798,
	-2, 1931,
	-1, 2197,
	654, 2568,
	657, 2568,
	-2, 1205,
	-1, 2198,
	654, 2570,
	657, 2570,
	-2, 1206,
	-1, 2199,
	654, 2569,
	657, 2569,
	-2, 1207,
	-1, 2200,
	657, 2492,
	-2, 1208,
	-1, 2222,
	652, 2072,
	-2, 2060,
	-1, 2254,
	201, 2915,
	654, 2915,
	657, 2915,
	-2, 0,
	-1, 2300,
	1, 835,
	655, 835,
	658, 835,
	-2, 1685,
	-1, 2477,
	239, 287,
	-2, 2576,
	-1, 2478,
	239, 288,
	-2, 351,
	-1, 2594,
	1, 1076,
	651, 1076,
	653, 1076,
	655, 1076,
	658, 1076,
	-2, 0,
	-1, 2595,
	1, 1120,
	651, 1120,
	653, 1120,
	655, 1120,
	658, 1120,
	-2, 0,
	-1, 2596,
	1, 1128,
	651, 1128,
	653, 1128,
	655, 1128,
	658, 1128,
	-2, 0,
	-1, 2597,
	1, 1180,
	651, 1180,
	653, 1180,
	655, 1180,
	658, 1180,
	-2, 0,
	-1, 2638,
	1, 1101,
	651, 1101,
	653, 1101,
	655, 1101,
	658, 1101,
	-2, 0,
	-1, 2661,
	1, 1163,
	651, 1163,
	653, 1163,
	655, 1163,
	658, 1163,
	-2, 0,
	-1, 2709,
	474, 1866,
	475, 1866,
	-2, 2105,
	-1, 2742,
	14, 0,
	15, 0,
	16, 0,
	632, 0,
	633, 0,
	634, 0,
	-2, 2125,
	-1, 2743,
	14, 0,
	15, 0,
	16, 0,
	632, 0,
	633, 0,
	634, 0,
	-2, 2126,
	-1, 2744,
	101, 0,
	275, 0,
	276, 0,
	636, 0,
	637, 0,
	-2, 2127,
	-1, 2745,
	101, 0,
	275, 0,
	276, 0,
	636, 0,
	637, 0,
	-2, 2128,
	-1, 2746,
	101, 0,
	275, 0,
	276, 0,
	636, 0,
	637, 0,
	-2, 2129,
	-1, 2747,
	101, 0,
	275, 0,
	276, 0,
	636, 0,
	637, 0,
	-2, 2130,
	-1, 2748,
	101, 0,
	275, 0,
	276, 0,
	636, 0,
	637, 0,
	-2, 2131,
	-1, 2749,
	14, 0,
	15, 0,
	16, 0,
	632, 0,
	633, 0,
	634, 0,
	-2, 2132,
	-1, 2761,
	14, 0,
	15, 0,
	16, 0,
	632, 0,
	633, 0,
	634, 0,
	-2, 2144,
	-1, 2762,
	14, 0,
	15, 0,
	16, 0,
	632, 0,
	633, 0,
	634, 0,
	-2, 2145,
	-1, 2763,
	14, 0,
	15, 0,
	16, 0,
	632, 0,
	633, 0,
	634, 0,
	-2, 2146,
	-1, 2767,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	235, 0,
	239, 0,
	294, 0,
	506, 0,
	620, 0,
	635, 0,
	-2, 2153,
	-1, 2773,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	235, 0,
	239, 0,
	294, 0,
	506, 0,
	620, 0,
	635, 0,
	-2, 2157,
	-1, 2775,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	235, 0,
	239, 0,
	294, 0,
	506, 0,
	620, 0,
	635, 0,
	-2, 2165,
	-1, 2776,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	235, 0,
	239, 0,
	294, 0,
	506, 0,
	620, 0,
	635, 0,
	-2, 2166,
	-1, 2777,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	235, 0,
	239, 0,
	294, 0,
	506, 0,
	620, 0,
	635, 0,
	-2, 2167,
	-1, 2778,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	235, 0,
	239, 0,
	294, 0,
	506, 0,
	620, 0,
	635, 0,
	-2, 2168,
	-1, 2952,
	5, 2580,
	201, 2435,
	652, 2577,
	-2, 2568,
	-1, 2953,
	201, 2436,
	-2, 3000,
	-1, 2954,
	201, 2437,
	-2, 2788,
	-1, 2955,
	201, 2438,
	-2, 2658,
	-1, 2956,
	201, 2439,
	-2, 2722,
	-1, 2957,
	201, 2440,
	-2, 2773,
	-1, 2958,
	201, 2441,
	-2, 2912,
	-1, 2959,
	201, 2442,
	-2, 2232,
	-1, 3051,
	1, 1932,
	2, 1932,
	113, 1932,
	160, 1932,
	181, 1932,
	194, 1932,
	202, 1932,
	220, 1932,
	223, 1932,
	253, 1932,
	260, 1932,
	272, 1932,
	291, 1932,
	295, 1932,
	335, 1932,
	369, 1932,
	374, 1932,
	380, 1932,
	462, 1932,
	468, 1932,
	580, 1932,
	592, 1932,
	611, 1932,
	612, 1932,
	613, 1932,
	623, 1932,
	651, 1932,
	653, 1932,
	655, 1932,
	657, 1932,
	658, 1932,
	-2, 1931,
	-1, 3064,
	652, 2549,
	-2, 2563,
	-1, 3066,
	1, 368,
	611, 368,
	658, 368,
	-2, 1825,
	-1, 3101,
	652, 2071,
	-2, 2061,
	-1, 3321,
	1, 1527,
	456, 1481,
	499, 1481,
	626, 1481,
	631, 1481,
	651, 1527,
	653, 1527,
	655, 1527,
	658, 1527,
	-2, 1825,
	-1, 3505,
	375, 1869,
	-2, 3058,
	-1, 3506,
	375, 1870,
	-2, 2896,
	-1, 3510,
	474, 2503,
	475, 2503,
	-2, 2230,
	-1, 3511,
	474, 2507,
	475, 2507,
	-2, 2231,
	-1, 3512,
	474, 2504,
	475, 2504,
	-2, 2230,
	-1, 3513,
	474, 2508,
	475, 2508,
	-2, 2231,
	-1, 3527,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	235, 0,
	239, 0,
	294, 0,
	506, 0,
	620, 0,
	635, 0,
	-2, 2155,
	-1, 3528,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	235, 0,
	239, 0,
	294, 0,
	506, 0,
	620, 0,
	635, 0,
	-2, 2159,
	-1, 3534,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	235, 0,
	239, 0,
	294, 0,
	506, 0,
	620, 0,
	635, 0,
	-2, 2161,
	-1, 3767,
	1, 830,
	651, 830,
	653, 830,
	655, 830,
	658, 830,
	-2, 1685,
	-1, 3952,
	38, 2580,
	134, 2580,
	634, 2580,
	650, 2580,
	653, 2580,
	654, 2580,
	657, 2580,
	-2, 2577,
	-1, 3953,
	38, 2581,
	134, 2581,
	634, 2581,
	650, 2581,
	653, 2581,
	654, 2581,
	657, 2581,
	-2, 2578,
	-1, 3984,
	46, 2540,
	-2, 1261,
	-1, 3989,
	1, 1527,
	651, 1527,
	653, 1527,
	655, 1527,
	658, 1527,
	-2, 1825,
	-1, 4099,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	235, 0,
	239, 0,
	294, 0,
	506, 0,
	620, 0,
	635, 0,
	-2, 2163,
	-1, 4106,
	266, 0,
	268, 0,
	358, 0,
	-2, 2182,
	-1, 4174,
	14, 0,
	15, 0,
	16, 0,
	632, 0,
	633, 0,
	634, 0,
	-2, 2211,
	-1, 4175,
	14, 0,
	15, 0,
	16, 0,
	632, 0,
	633, 0,
	634, 0,
	-2, 2212,
	-1, 4176,
	14, 0,
	15, 0,
	16, 0,
	632, 0,
	633, 0,
	634, 0,
	-2, 2213,
	-1, 4180,
	14, 0,
	15, 0,
	16, 0,
	632, 0,
	633, 0,
	634, 0,
	-2, 2217,
	-1, 4181,
	14, 0,
	15, 0,
	16, 0,
	632, 0,
	633, 0,
	634, 0,
	-2, 2218,
	-1, 4182,
	14, 0,
	15, 0,
	16, 0,
	632, 0,
	633, 0,
	634, 0,
	-2, 2219,
	-1, 4230,
	652, 2550,
	-2, 2564,
	-1, 4460,
	654, 3176,
	-2, 1751,
	-1, 4519,
	266, 0,
	268, 0,
	358, 0,
	-2, 2183,
	-1, 4522,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	235, 0,
	239, 0,
	294, 0,
	506, 0,
	620, 0,
	635, 0,
	-2, 2186,
	-1, 4523,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	235, 0,
	239, 0,
	294, 0,
	506, 0,
	620, 0,
	635, 0,
	-2, 2188,
	-1, 4648,
	654, 2565,
	-2, 1562,
	-1, 4817,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	235, 0,
	239, 0,
	294, 0,
	506, 0,
	620, 0,
	635, 0,
	-2, 2187,
	-1, 4818,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	235, 0,
	239, 0,
	294, 0,
	506, 0,
	620, 0,
	635, 0,
	-2, 2189,
	-1, 4829,
	266, 0,
	-2, 2222,
	-1, 5029,
	266, 0,
	-2, 2223,
	-1, 5275,
	54, 0,
	235, 0,
	294, 0,
	506, 0,
	620, 0,
	635, 0,
	-2, 3021,
}

const sqlPrivate = 57344

const sqlLast = 155478

var sqlAct = [...]int16{
	301, 3396, 5190, 5189, 1470, 3665, 5498, 5416, 3275, 5354,
	5322, 5080, 4, 5072, 1010, 10, 4891, 5274, 3971, 5261,
	5125, 5338, 5287, 5430, 5143, 3245, 3970, 1206, 197, 5244,
	4502, 1009, 6, 5204, 2474, 5180, 5288, 5221, 5201, 4432,
	4997, 5363, 4974, 2320, 5289, 4941, 1697, 4961, 4139, 5285,
	2517, 5033, 1526, 4775, 2360, 1667, 1390, 5273, 4764, 4770,
	3733, 4733, 2331, 4896, 3365, 4091, 3794, 2719, 2164, 4838,
	4805, 4699, 4452, 5110, 1379, 4007, 2984, 4444, 2566, 4980,
	4644, 1460, 4357, 1467, 4625, 2269, 933, 4645, 1968, 3519,
	2568, 786, 2790, 3175, 4780, 1820, 1369, 3945, 3416, 3174,
	2209, 2543, 3797, 4001, 4388, 4834, 4415, 4390, 2729, 3858,
	1462, 3800, 3955, 4034, 1198, 933, 1547, 2369, 3929, 3353,
	4036, 3380, 3960, 861, 2720, 3385, 3781, 1254, 3941, 3959,
	3783, 1640, 3922, 3260, 197, 3962, 3921, 3782, 3382, 4233,
	3078, 3688, 3648, 3711, 3447, 1818, 3411, 3671, 3680, 3718,
	4501, 1013, 798, 3397, 2133, 3669, 3943, 4558, 2463, 3944,
	2398, 2461, 3328, 2282, 3276, 2450, 2381, 5339, 3647, 293,
	1692, 2193, 4200, 3044, 1693, 2726, 2108, 5034, 2803, 3503,
	3821, 2868, 2564, 2039, 2069, 3410, 1757, 2514, 2530, 3043,
	857, 1004, 928, 2448, 2440, 1370, 1453, 2870, 3290, 2348,
	1465, 2428, 1865, 2462, 2421, 3366, 2352, 1259, 1541, 1509,
	295, 3024, 1264, 3786, 2280, 2859, 2787, 2330, 1439, 2134,
	2708, 2691, 3083, 2981, 2327, 2689, 1528, 1795, 1524, 3079,
	834, 294, 3390, 1760, 2443, 1753, 1669, 3199, 2513, 1084,
	1496, 5144, 3160, 3200, 1408, 3963, 2103, 2862, 123, 3033,
	2143, 1352, 1373, 2840, 2150, 2994, 935, 1227, 3046, 2948,
	934, 1450, 1387, 2053, 877, 1969, 207, 2914, 208, 2690,
	1970, 2692, 842, 2471, 1209, 1885, 1900, 853, 127, 1648,
	1786, 2452, 1793, 113, 5355, 935, 983, 1240, 5417, 934,
	791, 50, 49, 47, 1521, 817, 939, 1350, 2153, 38,
	36, 34, 1722, 787, 1975, 800, 1375, 1540, 1950, 3557,
	1703, 1105, 3551, 4214, 773, 923, 4215, 942, 796, 3667,
	2271, 5490, 5509, 2271, 5501, 939, 3023, 5488, 3900, 2271,
	984, 3023, 3734, 5487, 5283, 1985, 1986, 3023, 870, 873,
	4864, 5452, 2271, 2271, 2271, 4895, 942, 5450, 5384, 5340,
	5313, 4895, 2483, 5341, 3023, 4861, 5311, 5308, 5305, 2016,
	3023, 5309, 5306, 4860, 5271, 4016, 5270, 1988, 2483, 5269,
	2483, 5259, 4857, 3421, 5257, 4895, 2292, 5248, 4895, 5247,
	5199, 4895, 5165, 4895, 4895, 5158, 3092, 5157, 5148, 3023,
	5124, 3023, 2483, 5121, 2483, 5102, 2041, 4895, 5031, 4716,
	5011, 4856, 3092, 4976, 4477, 1987, 1262, 4284, 4914, 1367,
	4913, 4902, 2483, 1005, 2483, 2483, 2007, 1261, 4901, 4894,
	1505, 4757, 4895, 4895, 1985, 1986, 4845, 4819, 4790, 4758,
	2483, 3092, 3421, 3900, 4694, 4672, 4592, 4017, 3023, 3023,
	1202, 84, 4521, 1008, 1007, 1191, 3092, 4468, 2016, 4462,
	1505, 4029, 2518, 4029, 2565, 4412, 1988, 4315, 1203, 4413,
	85, 4316, 3752, 4283, 1182, 4225, 1181, 4284, 2289, 4226,
	4223, 4207, 4123, 4119, 4224, 3023, 2483, 3023, 90, 4028,
	2292, 3747, 2996, 4029, 4204, 2041, 3728, 1202, 3664, 3659,
	3116, 3658, 3023, 3023, 1987, 3023, 3358, 2289, 3609, 3607,
	3599, 3597, 3610, 3608, 3600, 3023, 2010, 2011, 2012, 2013,
	3568, 3566, 1353, 1353, 3023, 3420, 1993, 3567, 1197, 3421,
	99, 3407, 3406, 3087, 3139, 2553, 2553, 1754, 3023, 3091,
	1696, 3076, 3068, 3092, 3022, 3023, 2483, 2552, 3023, 1415,
	1405, 2553, 1356, 1891, 1357, 1830, 3900, 2483, 2292, 3518,
	3023, 5166, 1354, 5035, 5026, 259, 5014, 3421, 4204, 2995,
	4768, 4716, 1011, 2289, 4673, 4477, 4414, 2292, 4402, 3252,
	2015, 2017, 2374, 3159, 2306, 55, 2482, 122, 1985, 1986,
	3150, 2270, 2289, 106, 119, 2286, 2292, 3358, 3270, 3084,
	2129, 1406, 1690, 4333, 4094, 4063, 2151, 2433, 4018, 3060,
	1867, 3059, 2016, 3058, 3057, 1993, 1985, 1986, 3056, 261,
	1988, 1358, 1355, 1190, 1189, 1188, 1187, 1186, 4019, 1696,
	1185, 259, 1184, 1180, 1179, 1178, 1177, 1176, 1175, 1174,
	1173, 1172, 1171, 2008, 5298, 1170, 1406, 1169, 1988, 2041,
	2865, 3473, 4782, 1168, 1167, 1166, 1165, 1164, 1987, 107,
	1985, 1986, 1163, 2018, 2019, 2020, 2029, 2030, 2031, 2015,
	2017, 260, 1162, 1161, 1148, 1082, 1985, 1986, 1382, 1081,
	1080, 1079, 1078, 2022, 2016, 261, 1987, 253, 1077, 1381,
	1076, 1075, 1988, 1074, 1073, 1072, 254, 1071, 1070, 1069,
	1068, 1067, 1066, 2035, 106, 1065, 1064, 1063, 1988, 1062,
	1061, 1060, 1059, 1058, 1057, 1056, 1985, 1986, 1055, 1054,
	2272, 2041, 1053, 2272, 2038, 4576, 209, 3023, 1052, 2272,
	1987, 1051, 2008, 3618, 3619, 1050, 1049, 260, 1048, 1047,
	2016, 2007, 2272, 2272, 2272, 1705, 1987, 1705, 1988, 2866,
	2004, 1046, 1035, 1034, 1033, 1028, 1027, 1020, 1019, 1018,
	1003, 1002, 1001, 959, 958, 957, 956, 955, 946, 1993,
	945, 944, 5297, 943, 3556, 905, 904, 2041, 868, 867,
	866, 848, 289, 288, 2014, 287, 1987, 286, 285, 284,
	283, 1811, 209, 282, 281, 2897, 280, 1993, 5294, 279,
	2289, 278, 277, 3618, 3619, 276, 2289, 275, 274, 273,
	2009, 272, 271, 2038, 3633, 270, 269, 268, 111, 3662,
	267, 2289, 266, 2015, 2017, 265, 264, 5272, 263, 2289,
	262, 2010, 2011, 2012, 2013, 3393, 2867, 4533, 2864, 4258,
	4219, 1993, 4067, 4030, 3167, 1472, 1264, 3714, 2630, 3579,
	3562, 3553, 1717, 3450, 1711, 3338, 3096, 1993, 3065, 3050,
	2154, 3375, 2895, 2111, 3663, 2111, 2881, 2879, 2681, 2333,
	2110, 2291, 2110, 1264, 1264, 1264, 2040, 205, 4784, 114,
	2177, 2080, 118, 2071, 2026, 1951, 2008, 2995, 2036, 1699,
	1407, 1982, 5256, 3167, 1517, 2015, 2017, 1993, 1389, 2009,
	2114, 5017, 2109, 4016, 1417, 5129, 5023, 4886, 5015, 4833,
	1704, 4788, 259, 4767, 3624, 2032, 4600, 2033, 2292, 1550,
	1012, 3126, 4556, 1264, 2002, 2003, 166, 2270, 1406, 1264,
	1672, 1264, 3358, 5038, 1472, 1513, 1514, 1515, 1681, 4555,
	2289, 2286, 2684, 2024, 2078, 1500, 4549, 2289, 2995, 4548,
	4547, 2015, 2017, 4540, 4539, 1255, 4537, 4532, 2008, 1264,
	4529, 1264, 4528, 1264, 4411, 2040, 261, 2038, 4401, 4262,
	4261, 1672, 4260, 1998, 1996, 1997, 1989, 1990, 1991, 1992,
	1994, 1995, 4425, 1705, 3624, 4229, 4195, 3951, 1500, 4194,
	4193, 4115, 4110, 3709, 171, 1472, 3655, 3646, 1834, 1762,
	3617, 2071, 3614, 3613, 3611, 1406, 1658, 2034, 3606, 2869,
	211, 3605, 1461, 3604, 2008, 3601, 1694, 1672, 260, 3598,
	3578, 3561, 3554, 259, 1672, 3552, 3408, 4321, 2023, 3051,
	2852, 3634, 1982, 1264, 253, 1264, 2533, 166, 2490, 2038,
	1672, 1366, 259, 254, 259, 197, 197, 206, 2488, 1264,
	1981, 1264, 210, 2009, 5504, 2038, 1492, 1444, 1447, 2072,
	1238, 2070, 1998, 1996, 1997, 1989, 1990, 1991, 1992, 1994,
	1995, 5438, 1457, 1006, 5437, 1494, 3165, 261, 5353, 1767,
	1770, 1716, 5351, 1710, 2073, 1391, 4141, 1653, 5191, 4426,
	1643, 3618, 3619, 1657, 1461, 2038, 261, 5108, 261, 2014,
	1672, 3634, 1705, 5092, 5088, 5087, 5086, 1789, 1815, 5066,
	5065, 1478, 2038, 1543, 5063, 1637, 1642, 5037, 1645, 2040,
	1264, 1531, 1532, 1264, 5036, 2009, 1205, 5009, 2793, 260,
	4995, 3377, 4992, 1679, 4991, 4972, 4971, 4910, 2863, 4881,
	1486, 4831, 4331, 4814, 4813, 253, 4753, 4749, 260, 4746,
	260, 4717, 4575, 1520, 254, 2027, 4783, 939, 4554, 4478,
	3660, 1893, 4319, 4318, 253, 4299, 253, 1461, 1461, 1691,
	4298, 4296, 3105, 254, 3164, 254, 4210, 4198, 942, 2799,
	4105, 2009, 2038, 2058, 209, 1523, 4031, 3993, 1675, 1533,
	1534, 2040, 259, 1755, 3164, 3983, 84, 1773, 3635, 3880,
	3832, 3799, 3741, 209, 1835, 209, 3739, 3618, 3619, 1798,
	1800, 3583, 3582, 3577, 3543, 85, 3352, 1385, 1997, 1989,
	1990, 1991, 1992, 1994, 1995, 1264, 1264, 1264, 1264, 1264,
	1264, 1264, 1264, 90, 3350, 3192, 2117, 3618, 3619, 2116,
	2115, 1500, 2112, 3164, 3618, 3619, 261, 2040, 2104, 1991,
	1992, 1994, 1995, 1796, 2102, 3103, 3102, 5040, 1264, 3062,
	3055, 3021, 2877, 4426, 1264, 1203, 2057, 2176, 3635, 2025,
	2132, 2126, 3624, 5039, 3706, 99, 2125, 2124, 2123, 2122,
	259, 1999, 2000, 2006, 2028, 2005, 2001, 2121, 1998, 1996,
	1997, 1989, 1990, 1991, 1992, 1994, 1995, 2120, 260, 2119,
	2118, 1787, 5183, 2099, 2098, 2097, 1960, 1989, 1990, 1991,
	1992, 1994, 1995, 2096, 253, 2095, 2094, 1011, 2093, 2092,
	2091, 2090, 1383, 254, 2060, 2089, 2088, 1909, 2087, 2086,
	55, 2085, 122, 2084, 261, 1840, 2073, 259, 106, 119,
	2059, 259, 2056, 259, 1810, 1996, 1997, 1989, 1990, 1991,
	1992, 1994, 1995, 3392, 2051, 1956, 3376, 1792, 1485, 1412,
	1829, 3629, 3627, 3628, 3620, 3621, 3622, 3623, 3625, 3626,
	1264, 1264, 1264, 1401, 4756, 4596, 1264, 4525, 4257, 4222,
	4213, 3565, 3053, 1387, 4858, 1387, 260, 3094, 3624, 4598,
	4256, 261, 2072, 3737, 2054, 261, 4022, 261, 2172, 259,
	1550, 3246, 253, 4403, 107, 3835, 1512, 4675, 3618, 3619,
	5429, 254, 1264, 1858, 197, 2199, 1472, 1510, 3624, 5096,
	2131, 5089, 4787, 2227, 2199, 3624, 1472, 1983, 1894, 1472,
	1672, 3629, 3627, 3628, 3620, 3621, 3622, 3623, 3625, 3626,
	1527, 209, 1961, 260, 1985, 1986, 2896, 260, 2180, 260,
	4722, 4721, 2140, 261, 1527, 2326, 4720, 4719, 4718, 253,
	4674, 1952, 4578, 253, 4485, 253, 4484, 1527, 254, 4483,
	1957, 4482, 254, 4481, 254, 4480, 1988, 4479, 1965, 1511,
	1964, 4285, 4217, 1182, 5290, 1181, 1527, 259, 2192, 1527,
	1472, 4216, 4033, 2411, 4981, 4032, 1264, 3904, 209, 2205,
	2113, 1959, 209, 3902, 209, 260, 1203, 1525, 3901, 2256,
	2187, 5380, 2259, 2894, 1987, 1978, 1979, 2880, 2878, 5378,
	1264, 253, 1527, 4429, 5018, 2137, 2138, 2094, 1550, 1505,
	254, 5016, 2161, 1505, 5286, 3634, 3288, 2094, 2154, 2111,
	2276, 261, 3634, 2278, 4092, 3218, 2110, 3870, 1954, 2283,
	4348, 2312, 3603, 2285, 3602, 1505, 2363, 4885, 2288, 2301,
	209, 2105, 2106, 111, 3525, 3203, 1508, 4314, 1159, 3801,
	2186, 2324, 2298, 2294, 4419, 3973, 1657, 3972, 1500, 4279,
	5058, 4280, 1857, 1910, 2464, 2202, 2038, 2585, 2082, 2200,
	1866, 2079, 5059, 260, 2202, 2250, 2518, 259, 2200, 2181,
	259, 5059, 3618, 3619, 2182, 3636, 3637, 3638, 4975, 253,
	3201, 5319, 4765, 2184, 3417, 259, 2038, 2297, 254, 1160,
	1353, 3930, 205, 2038, 114, 939, 4706, 118, 1867, 2465,
	1657, 4400, 1791, 1203, 939, 2152, 4354, 2159, 2318, 2317,
	4345, 4324, 1527, 2326, 4059, 3765, 942, 2651, 209, 2534,
	45, 261, 3667, 2562, 261, 942, 2498, 259, 4835, 2130,
	4143, 2860, 3101, 2410, 4905, 1012, 2430, 3571, 2409, 261,
	4877, 166, 2274, 5295, 1792, 2127, 2420, 2107, 2171, 2170,
	2169, 5310, 3990, 3633, 2162, 4659, 2167, 2166, 2165, 2156,
	2526, 1365, 1766, 4656, 1686, 1506, 1506, 2374, 1481, 1672,
	1672, 1443, 3635, 260, 5307, 4687, 260, 2206, 2300, 3635,
	1550, 261, 4685, 3267, 4012, 3264, 4290, 3262, 5081, 253,
	4771, 260, 253, 5198, 3622, 3623, 3625, 3626, 254, 1844,
	3804, 254, 4309, 3449, 3389, 3330, 1672, 253, 1823, 171,
	3913, 5381, 4908, 4904, 2699, 5421, 254, 5296, 997, 3618,
	3619, 5382, 5360, 2296, 4883, 211, 4086, 3248, 209, 1984,
	4936, 209, 3769, 260, 1208, 1672, 4661, 1736, 2321, 3140,
	1157, 2372, 4367, 2406, 4955, 2415, 209, 1512, 1155, 253,
	1153, 2425, 1908, 3624, 2644, 5500, 903, 900, 254, 1382,
	1729, 1382, 206, 2313, 2475, 2480, 2338, 210, 2339, 1495,
	1381, 5097, 1381, 3163, 1144, 2642, 2319, 2697, 2346, 2347,
	1672, 3163, 1672, 4929, 1672, 1688, 4916, 2417, 209, 3161,
	1512, 4709, 4708, 2420, 4365, 1502, 1502, 3161, 4364, 2340,
	2341, 4356, 1672, 1672, 3177, 2368, 2344, 2345, 3620, 3621,
	3622, 3623, 3625, 3626, 4339, 1207, 1672, 4338, 4366, 3738,
	1511, 3834, 4336, 2444, 4335, 4323, 2380, 3640, 1672, 1201,
	3771, 1672, 1672, 1672, 998, 2557, 3627, 3628, 3620, 3621,
	3622, 3623, 3625, 3626, 3628, 3620, 3621, 3622, 3623, 3625,
	3626, 4282, 4281, 2420, 3919, 2199, 3918, 1789, 3872, 2545,
	3727, 2545, 2469, 1511, 3576, 2323, 2546, 2403, 2467, 2468,
	3634, 2522, 2418, 4404, 3575, 3574, 3386, 1264, 4906, 2500,
	2586, 939, 1507, 1507, 4878, 4655, 3573, 3529, 4293, 3286,
	3285, 1842, 3269, 2481, 840, 3258, 840, 3250, 3239, 3238,
	3624, 2419, 942, 4657, 2527, 2322, 1506, 2416, 3868, 2525,
	2402, 3801, 2540, 2424, 2399, 3230, 1264, 3229, 3228, 1791,
	3208, 1907, 3207, 2583, 3168, 3180, 4606, 3077, 2465, 1200,
	2774, 2518, 2865, 2207, 2454, 1958, 2910, 2454, 2560, 2453,
	2457, 2698, 2453, 5422, 2909, 1503, 1503, 2731, 2570, 2445,
	5361, 2038, 1264, 4812, 1264, 1504, 1504, 5012, 2590, 2128,
	2699, 1264, 2673, 995, 1264, 994, 2227, 2227, 1550, 3095,
	1264, 1264, 1264, 1264, 1264, 1264, 1264, 1264, 1264, 1264,
	1264, 1264, 1264, 1264, 1264, 1264, 1264, 1264, 1264, 1264,
	1264, 1264, 1264, 1264, 1264, 1264, 1264, 1264, 1264, 1264,
	1264, 1264, 1264, 1264, 1264, 1264, 2501, 1264, 2495, 1264,
	1264, 1264, 1264, 2537, 3626, 2577, 1796, 3634, 1796, 4676,
	2373, 2683, 2696, 2697, 2550, 2202, 2615, 2548, 1203, 2200,
	1203, 2866, 2529, 1906, 1731, 1264, 1502, 3635, 2701, 1264,
	1264, 2542, 3224, 5424, 1529, 1530, 4060, 1264, 2419, 1202,
	1995, 1264, 2370, 1264, 1264, 2576, 1740, 3110, 2328, 2329,
	1486, 1550, 2554, 4617, 2555, 939, 2688, 1264, 1264, 1264,
	1264, 1529, 1530, 1264, 1264, 1264, 1264, 1264, 1264, 1264,
	1264, 2656, 2657, 2672, 1689, 2785, 942, 1150, 3869, 2366,
	1529, 1530, 1859, 1529, 1530, 2860, 3147, 3222, 2038, 1264,
	1264, 1264, 1264, 1264, 1264, 1264, 1264, 1264, 2419, 1264,
	3109, 2602, 2695, 1264, 2594, 2841, 2842, 2783, 2867, 3481,
	2864, 785, 2605, 1507, 2371, 1387, 1529, 1530, 3205, 2841,
	2857, 1732, 1550, 1429, 4616, 1953, 4658, 4954, 1779, 3081,
	1778, 1387, 2670, 839, 3179, 839, 2516, 5425, 780, 1505,
	1505, 1777, 2679, 1776, 1837, 2367, 2905, 1264, 1550, 2638,
	2581, 1949, 1000, 999, 1867, 5381, 1748, 2661, 2789, 2789,
	2658, 1867, 2413, 4946, 2725, 2951, 2951, 2965, 2713, 2841,
	2712, 2724, 2985, 2987, 3635, 3237, 1503, 2698, 1472, 2993,
	3424, 5074, 3082, 3630, 3631, 3632, 1504, 1920, 3067, 3266,
	3629, 3627, 3628, 3620, 3621, 3622, 3623, 3625, 3626, 3468,
	2687, 2685, 2686, 3233, 2700, 2172, 197, 2693, 3191, 1395,
	3089, 2805, 1182, 3768, 2716, 1182, 1182, 2717, 2718, 1889,
	2659, 3086, 2603, 3063, 3265, 1397, 3263, 2856, 3261, 1472,
	3484, 2649, 3231, 3501, 1855, 1926, 2328, 2329, 2636, 1199,
	4811, 4320, 1484, 2400, 1924, 1889, 4960, 5292, 2405, 3162,
	2660, 3516, 2599, 1392, 841, 3038, 841, 5427, 2696, 2797,
	2779, 3088, 3030, 1472, 1472, 3540, 2795, 3134, 5456, 1838,
	5423, 3190, 2907, 1266, 2593, 1203, 3080, 2908, 2161, 1843,
	2911, 2869, 2912, 2913, 2780, 1203, 2801, 2446, 1385, 1203,
	1385, 2781, 2595, 901, 1963, 2786, 2854, 3538, 3178, 3234,
	1398, 901, 2547, 1152, 1550, 4306, 2643, 1905, 4072, 901,
	901, 2185, 3115, 5076, 2374, 4071, 3470, 3112, 1886, 3982,
	5331, 4132, 3052, 2407, 2869, 3029, 1761, 2641, 3232, 1399,
	3121, 4653, 4380, 3108, 1461, 4129, 3125, 5049, 3129, 1888,
	3620, 3621, 3622, 3623, 3625, 3626, 2976, 3135, 897, 2960,
	3136, 2991, 1309, 2227, 1500, 2947, 2989, 2455, 1353, 2458,
	2210, 2596, 3107, 3019, 3020, 1888, 3031, 3035, 3036, 2401,
	2671, 3132, 4707, 2771, 1396, 2447, 3483, 4337, 1257, 1203,
	1505, 3097, 939, 2159, 939, 1759, 1135, 1887, 2113, 4334,
	4266, 1461, 4265, 1383, 4381, 1383, 3085, 3515, 4251, 4250,
	2456, 4064, 3774, 942, 1550, 942, 3925, 3917, 3852, 3480,
	2863, 1195, 1044, 2434, 3866, 3204, 3843, 3143, 2441, 3037,
	1672, 3042, 4130, 3268, 3048, 3049, 1461, 1461, 1902, 2669,
	5433, 4304, 4947, 4640, 3227, 939, 3325, 1472, 5293, 3041,
	3145, 3321, 4379, 3104, 5393, 4945, 3169, 1477, 2374, 3206,
	3535, 3128, 4943, 2105, 2106, 3137, 942, 2680, 1264, 1264,
	3131, 1264, 3120, 2395, 3279, 1739, 3123, 5408, 3124, 895,
	3853, 4633, 3114, 5426, 5162, 4626, 5458, 3138, 3844, 5407,
	3154, 3536, 3146, 2487, 2486, 3541, 3075, 3130, 3166, 3508,
	3509, 5368, 1472, 4624, 2869, 3225, 3364, 3361, 3326, 4507,
	2782, 4065, 4506, 4628, 3144, 4942, 3926, 4727, 2382, 1136,
	2784, 1921, 781, 3923, 4009, 5323, 3141, 3210, 3851, 2601,
	3477, 1382, 2372, 1765, 1672, 2396, 3842, 3482, 4634, 3356,
	2377, 3195, 1381, 1643, 2386, 4944, 1672, 1382, 1672, 2435,
	2271, 3244, 1428, 2431, 1672, 3209, 3324, 5263, 1381, 5264,
	197, 4010, 5291, 4651, 2769, 1672, 1672, 3373, 2772, 3226,
	1702, 1947, 1709, 2460, 1715, 3236, 3259, 3182, 3185, 3172,
	3240, 4654, 1657, 2394, 4627, 3155, 3156, 5175, 4869, 3157,
	3158, 1472, 3865, 1472, 3280, 3216, 3217, 3219, 3220, 3221,
	3223, 3864, 2378, 3287, 2383, 2869, 3427, 3428, 3322, 3323,
	3883, 3861, 782, 3247, 5082, 1264, 5075, 2397, 3435, 3436,
	3437, 1393, 5104, 2768, 1761, 3415, 3235, 3400, 2412, 3414,
	1151, 3242, 1036, 3336, 3153, 2459, 1918, 3788, 3333, 3412,
	3249, 3418, 3256, 3335, 1809, 2414, 1814, 2146, 3816, 4009,
	2376, 3770, 3163, 838, 1868, 1687, 1410, 3272, 4743, 1037,
	1828, 3434, 1833, 3273, 3274, 3531, 2788, 783, 3183, 784,
	5346, 1922, 2414, 939, 3451, 3822, 3452, 1141, 1140, 2408,
	5347, 1394, 2100, 3331, 2411, 1264, 5367, 3735, 4807, 5160,
	3409, 1264, 1264, 3419, 942, 3368, 2412, 1839, 2149, 3425,
	3537, 3908, 2431, 2353, 3453, 4503, 1264, 2364, 2354, 3815,
	3539, 5431, 4824, 4640, 5391, 5209, 896, 3032, 2637, 4688,
	1919, 2387, 3066, 5454, 3404, 806, 1137, 2404, 1892, 3357,
	2353, 2050, 3824, 3422, 3034, 2354, 2147, 5161, 3581, 4652,
	3429, 4409, 3430, 3372, 1854, 1856, 2851, 3445, 5459, 1264,
	1264, 4633, 1483, 1657, 3047, 1264, 2431, 2796, 1202, 3395,
	4629, 3405, 4145, 2598, 1461, 2413, 1925, 4630, 1264, 1264,
	1796, 5440, 898, 3924, 1264, 1264, 894, 1923, 4635, 3444,
	1264, 3384, 2967, 3442, 4755, 2592, 3403, 2438, 3402, 4305,
	2353, 4492, 2388, 2389, 3459, 2354, 3461, 4712, 3463, 3458,
	4595, 3460, 3823, 3462, 1962, 3464, 3465, 947, 4634, 4252,
	2479, 2373, 1021, 2427, 3486, 1416, 3488, 3331, 1414, 2384,
	1657, 4632, 1657, 2455, 3457, 1264, 1264, 1264, 3474, 2355,
	5432, 1264, 4508, 4088, 954, 2770, 1045, 4806, 3499, 1026,
	4636, 1264, 1193, 2426, 1135, 3532, 4937, 2359, 1873, 2436,
	3489, 5126, 4504, 3491, 2410, 4393, 2355, 5399, 1264, 2409,
	3496, 1138, 3789, 5329, 5215, 4391, 2456, 2385, 3507, 1195,
	5434, 5142, 4586, 4994, 2359, 4711, 4393, 3243, 3564, 4587,
	2422, 4710, 4450, 3997, 3750, 3074, 4391, 2512, 2139, 3498,
	1139, 1413, 3497, 1404, 772, 4744, 4424, 2437, 4184, 1973,
	1038, 1039, 3559, 3560, 2648, 3502, 5366, 3563, 2715, 2713,
	1972, 2712, 2375, 2148, 3517, 2371, 2355, 2314, 1972, 1194,
	4552, 3911, 5464, 3524, 3719, 5443, 3912, 5119, 2356, 2361,
	5398, 1967, 5127, 5330, 2359, 5324, 2391, 3555, 4903, 4852,
	2272, 5003, 4585, 2727, 2728, 5345, 2423, 3795, 5056, 1143,
	1264, 1264, 1264, 1264, 4395, 2356, 2361, 4451, 4360, 1264,
	1264, 1264, 4340, 4291, 1264, 4289, 3998, 1136, 3530, 1142,
	3988, 2311, 3791, 3374, 3367, 4395, 1264, 1387, 1550, 3354,
	2541, 2535, 2528, 2520, 5111, 4631, 3184, 2497, 4808, 4394,
	2494, 3283, 4988, 4128, 1733, 2142, 4275, 2168, 5112, 2705,
	1420, 2390, 1264, 4199, 1264, 3674, 3675, 3025, 5181, 847,
	4394, 4089, 5145, 1387, 3167, 2356, 2361, 2650, 2357, 1972,
	2307, 4453, 1203, 5334, 1971, 4776, 4967, 4509, 4641, 4642,
	4629, 1550, 1971, 5113, 3351, 1431, 3212, 4630, 4965, 4880,
	3657, 3807, 2582, 1387, 3803, 2357, 1550, 3028, 4635, 3802,
	4212, 3522, 3500, 2309, 3570, 2574, 3618, 3619, 1472, 3636,
	3637, 3638, 3679, 3678, 1896, 1895, 2563, 3828, 2492, 1890,
	1385, 1752, 2364, 2227, 4246, 948, 949, 1550, 3676, 4517,
	1022, 1023, 3073, 3699, 2146, 2392, 1385, 1472, 3686, 3072,
	3027, 4632, 3071, 2050, 2351, 3026, 3070, 1472, 1973, 2364,
	2310, 3753, 3069, 5115, 3708, 2357, 1973, 4185, 1771, 4389,
	4636, 1785, 1040, 1041, 5400, 5332, 1783, 3712, 4186, 1264,
	1043, 4510, 1200, 4399, 1772, 1141, 1140, 5475, 5114, 3826,
	2337, 1264, 4892, 1971, 2362, 2149, 5442, 3633, 5069, 1754,
	4553, 3726, 2363, 4734, 3188, 4420, 5128, 5116, 4297, 1472,
	2706, 5463, 2539, 3790, 2144, 2227, 2349, 3933, 3713, 2364,
	3684, 2362, 4286, 5388, 2451, 4867, 4865, 4969, 3448, 3329,
	3745, 4061, 1264, 2147, 1137, 1383, 4392, 3827, 2363, 4056,
	3749, 3766, 3652, 3653, 3654, 3751, 3755, 3748, 1472, 3757,
	3758, 1383, 3840, 3772, 3761, 3668, 3762, 4392, 3763, 1500,
	3721, 3722, 3723, 3724, 2350, 3717, 4987, 3685, 3705, 1472,
	4276, 1472, 3697, 3855, 886, 3857, 3776, 2145, 3700, 3701,
	1874, 2362, 3730, 3683, 3213, 3214, 3729, 3423, 2142, 951,
	950, 1264, 1264, 3334, 3332, 2430, 2567, 3624, 2464, 1550,
	3778, 3779, 2430, 5401, 5333, 4893, 4968, 1847, 4888, 3884,
	1472, 4887, 887, 3871, 3894, 4631, 3682, 5187, 4611, 4875,
	4610, 5070, 3805, 5195, 3777, 3809, 3806, 1472, 5178, 3811,
	3759, 3906, 3813, 2358, 3792, 939, 1657, 1657, 4559, 3910,
	3742, 3743, 3720, 3744, 3698, 4201, 2876, 3731, 4253, 1944,
	2665, 1946, 1024, 1025, 4855, 5217, 942, 5392, 4641, 4642,
	2358, 952, 953, 3819, 3899, 5390, 5312, 5100, 5090, 1138,
	4876, 3640, 1472, 1672, 4863, 1672, 1943, 2146, 846, 1550,
	1941, 3756, 3760, 3862, 4830, 4603, 933, 1672, 1672, 3767,
	3703, 3953, 3704, 3909, 1914, 1912, 1192, 4287, 1139, 1884,
	3211, 3856, 3886, 1882, 3888, 2336, 3775, 3892, 1880, 3837,
	2148, 3898, 1472, 5188, 3634, 1657, 3989, 5071, 1548, 4551,
	2358, 4398, 1878, 1876, 1870, 4271, 1864, 1862, 2149, 1781,
	1387, 1784, 3881, 3649, 4005, 3825, 1782, 3841, 2449, 2525,
	1042, 4104, 4057, 1382, 4054, 3873, 3746, 2144, 3978, 3612,
	1672, 3542, 4003, 3833, 1381, 3927, 3355, 1143, 3257, 3251,
	3839, 3202, 1672, 3846, 1672, 3987, 2147, 3106, 3928, 2678,
	3931, 3850, 2674, 2584, 197, 197, 3867, 1142, 2573, 1382,
	2558, 3854, 5117, 2258, 2179, 2175, 1948, 3847, 5118, 1822,
	1381, 3848, 3958, 3849, 3876, 2038, 4949, 2640, 2875, 4025,
	4609, 3996, 3650, 2607, 3882, 3895, 2473, 4083, 4082, 1382,
	2145, 4014, 4074, 1967, 3472, 3903, 3471, 3432, 3950, 3236,
	1381, 1550, 3893, 3915, 1550, 4062, 2694, 1901, 3907, 2610,
	2493, 2257, 3412, 2255, 3681, 3885, 2083, 1836, 1349, 3905,
	5284, 3412, 2667, 3981, 4689, 4347, 3999, 4346, 4693, 2666,
	1945, 4671, 5177, 4774, 4698, 5364, 935, 3914, 4684, 1264,
	934, 4052, 4622, 3920, 4075, 3916, 1264, 1264, 4621, 4253,
	1264, 1264, 1264, 3210, 1264, 1942, 2631, 4449, 3935, 1940,
	4439, 3635, 4363, 1264, 2227, 4006, 3979, 4769, 4002, 1461,
	3985, 4342, 1264, 1913, 1911, 4312, 939, 1264, 1883, 4310,
	4288, 3992, 1881, 1550, 3984, 899, 3986, 1879, 3690, 4053,
	3974, 3387, 1264, 3379, 3371, 3363, 3348, 942, 4011, 3346,
	1550, 1877, 1875, 1869, 4004, 1863, 1861, 4020, 1780, 3327,
	2227, 2227, 1264, 1264, 3127, 1264, 1264, 1264, 4023, 4024,
	4080, 3122, 4050, 2148, 2491, 2489, 2466, 2432, 4055, 2393,
	2379, 2365, 2293, 1264, 2290, 2287, 2284, 1264, 4125, 2227,
	2227, 1264, 1264, 1264, 1264, 1264, 1264, 1264, 1264, 1264,
	1264, 1264, 1264, 1264, 1264, 1264, 1264, 1264, 1264, 1264,
	1264, 1203, 1264, 4090, 4107, 902, 2279, 2277, 4081, 2639,
	1264, 1264, 2227, 4013, 1657, 2606, 2273, 1264, 2472, 2264,
	3896, 4157, 4068, 4158, 4069, 2441, 4070, 5359, 1264, 1362,
	5268, 3691, 2191, 4117, 4118, 1976, 3520, 5382, 4078, 1387,
	1387, 2315, 4087, 1264, 5068, 2303, 2304, 4084, 197, 3492,
	4085, 2677, 4197, 1841, 3493, 1135, 1363, 3630, 3631, 3632,
	3490, 3320, 5250, 5136, 3629, 3627, 3628, 3620, 3621, 3622,
	3623, 3625, 3626, 4789, 4705, 1550, 2221, 4608, 3413, 3773,
	1195, 2332, 4231, 930, 3689, 3696, 1738, 3163, 1472, 1472,
	4112, 5005, 3189, 4196, 2597, 4998, 1725, 4114, 3163, 1154,
	1156, 2675, 4461, 3161, 2374, 1419, 2538, 1472, 1472, 1451,
	1665, 2199, 4124, 1472, 3186, 4218, 4131, 4133, 4134, 4140,
	1938, 1939, 3695, 1452, 2634, 4147, 2629, 5249, 2604, 4662,
	4700, 3284, 1264, 1985, 1986, 4135, 1194, 1860, 4155, 3521,
	1985, 1986, 4156, 5025, 4160, 1522, 3897, 4247, 875, 2676,
	4188, 1723, 4890, 1977, 4162, 2224, 1382, 3193, 4154, 4560,
	1264, 4538, 3820, 3194, 3215, 1988, 1980, 1381, 5376, 1479,
	1418, 4248, 4249, 1519, 1364, 2302, 4359, 4189, 1136, 290,
	5320, 2215, 3345, 4436, 2521, 1490, 4208, 4209, 3264, 3262,
	4263, 4264, 3194, 1264, 1264, 3271, 4272, 1452, 1030, 5396,
	1452, 4358, 4273, 1987, 1804, 3253, 4274, 4205, 4206, 3255,
	1987, 3196, 4203, 3198, 1917, 5186, 5167, 5134, 5130, 2178,
	1819, 878, 878, 3254, 5067, 892, 4989, 3197, 4986, 1213,
	4868, 4802, 769, 1264, 1264, 4447, 4438, 4220, 3692, 3693,
	3694, 1264, 4423, 4228, 3991, 3394, 3360, 3347, 2992, 2299,
	2208, 4292, 5428, 4889, 4221, 4311, 3241, 4313, 1685, 1684,
	1678, 3911, 1672, 1672, 1196, 1672, 3912, 3732, 2451, 4325,
	5462, 3618, 3619, 3911, 1672, 1985, 1986, 1696, 3912, 1472,
	1849, 2202, 4267, 4377, 5132, 2200, 4530, 5395, 2343, 3149,
	2342, 3148, 5153, 2871, 1846, 4255, 1696, 1272, 3475, 4259,
	1845, 2906, 1385, 4372, 3953, 2227, 1222, 1695, 2343, 2342,
	1916, 1696, 5327, 1915, 4330, 4332, 4446, 4355, 4329, 2227,
	4990, 939, 4930, 4702, 4697, 4696, 4588, 4584, 4361, 4583,
	4526, 4500, 4254, 4136, 4362, 3890, 1141, 1140, 1385, 3887,
	3478, 4349, 942, 1264, 2077, 2076, 3495, 2334, 2682, 297,
	297, 297, 4435, 775, 776, 4322, 792, 775, 792, 804,
	4371, 4317, 845, 5447, 1672, 5409, 865, 5254, 1385, 5171,
	1264, 872, 872, 872, 872, 4382, 4383, 3210, 1387, 1264,
	5170, 4463, 5169, 297, 5099, 1137, 5098, 1672, 4454, 5044,
	4416, 5041, 1672, 1672, 1672, 4963, 4385, 4920, 4859, 4854,
	4853, 4406, 4408, 4851, 4850, 1017, 4431, 1383, 4848, 4751,
	4726, 4397, 297, 4660, 4430, 1672, 1461, 1672, 4597, 4455,
	4582, 4581, 1672, 4473, 1550, 4368, 4467, 4410, 4308, 3280,
	3736, 3950, 4300, 3995, 3994, 3812, 3754, 4375, 4470, 3479,
	3469, 3441, 3440, 1383, 4458, 1382, 1382, 4418, 3439, 4386,
	3438, 3378, 3349, 3187, 3118, 1550, 1381, 1381, 1264, 1264,
	3099, 4407, 3098, 4405, 1264, 1264, 2227, 4422, 4378, 1264,
	1264, 4387, 1264, 1383, 4396, 2800, 3400, 1264, 4437, 2668,
	4457, 2635, 4474, 2628, 2627, 2626, 2625, 3339, 1264, 3412,
	3342, 4376, 3344, 2624, 2536, 2507, 2506, 4434, 2505, 2504,
	2503, 2502, 2267, 2266, 1264, 2265, 2263, 2190, 2189, 4486,
	4488, 4440, 3798, 1937, 4489, 1936, 2525, 4494, 1871, 1747,
	1138, 2185, 1746, 4456, 4459, 1745, 1744, 1743, 1742, 2484,
	4464, 1741, 1737, 4465, 1735, 1734, 4472, 1662, 1661, 4441,
	4471, 4443, 1660, 4511, 3391, 1539, 1538, 3391, 4524, 1139,
	1537, 775, 775, 1536, 1535, 1482, 1438, 1437, 1436, 297,
	1435, 1434, 4490, 1433, 1432, 1387, 4520, 1430, 1425, 1424,
	4497, 1423, 1422, 1387, 1421, 1344, 2305, 1550, 1550, 1158,
	1550, 1149, 5073, 4639, 4638, 4637, 197, 1387, 4512, 2664,
	4557, 2515, 4505, 105, 1730, 98, 4487, 2439, 1672, 1672,
	4307, 5321, 5441, 5471, 2499, 5226, 5220, 5219, 1143, 5105,
	2261, 3942, 3940, 3939, 5326, 4959, 964, 4565, 4801, 1550,
	1111, 5216, 5103, 1720, 979, 5197, 3814, 3289, 1142, 2609,
	3466, 1872, 1472, 4983, 2611, 3707, 4499, 3054, 4496, 5159,
	4534, 3580, 5032, 4823, 2874, 2081, 1264, 3661, 100, 2221,
	2221, 1248, 1294, 4573, 4742, 4741, 4623, 1387, 4294, 1387,
	3961, 3712, 4738, 4550, 4737, 2212, 2214, 1212, 1553, 4590,
	4591, 2998, 3000, 5262, 2316, 5453, 2325, 3100, 2950, 1271,
	1268, 2216, 2218, 1270, 1472, 1269, 2217, 2101, 4670, 1267,
	2211, 4235, 4445, 3980, 1550, 1385, 1472, 3398, 4021, 1472,
	4679, 1790, 1788, 4682, 1113, 2794, 4650, 2858, 4615, 3569,
	4568, 4570, 4561, 2074, 1264, 4607, 4567, 1550, 4564, 1228,
	4566, 4593, 4594, 4562, 4563, 4666, 4667, 1250, 2224, 2224,
	4574, 4646, 4577, 4646, 2855, 1411, 4601, 4602, 1239, 4649,
	4605, 4612, 4613, 3687, 3666, 4008, 4227, 2704, 4236, 989,
	3615, 2861, 1400, 2973, 2215, 2215, 4589, 4618, 2966, 1672,
	1672, 2962, 3764, 3953, 1264, 1264, 2227, 3388, 2227, 4604,
	4663, 4620, 1955, 4837, 2052, 4664, 4237, 3399, 4234, 1516,
	1232, 2792, 4614, 2065, 1382, 3547, 2714, 4245, 4015, 3710,
	3093, 5243, 4144, 4243, 3476, 1381, 2511, 1472, 1461, 1361,
	1383, 4759, 1360, 1409, 1359, 5203, 5200, 4665, 4704, 2429,
	1550, 4745, 4686, 3956, 3957, 1672, 2308, 2730, 3142, 2804,
	3975, 1244, 3454, 4701, 3455, 4703, 1656, 2655, 4076, 4244,
	3672, 4683, 4421, 1749, 4240, 4897, 1256, 2037, 3316, 4777,
	1672, 1672, 1672, 1672, 1672, 1672, 1672, 3315, 5062, 4724,
	4695, 1501, 1499, 1498, 1497, 4725, 5418, 3282, 4763, 4241,
	4766, 2442, 4760, 4731, 1550, 4732, 4715, 4303, 4302, 2525,
	4778, 4301, 258, 4735, 3514, 4723, 1264, 1264, 1264, 4714,
	1974, 2210, 1966, 4713, 255, 4680, 257, 256, 3818, 4232,
	3950, 4728, 3716, 1848, 1550, 4669, 1461, 5318, 4327, 1264,
	3932, 4747, 1264, 1264, 4740, 4809, 4781, 4754, 4678, 4736,
	2872, 4681, 1264, 4752, 27, 2227, 1723, 879, 880, 4748,
	1264, 1264, 881, 3152, 2335, 1518, 4278, 2727, 4148, 26,
	25, 24, 23, 128, 48, 29, 4794, 1550, 4786, 1672,
	4798, 28, 4779, 4772, 5, 2519, 4800, 22, 170, 168,
	145, 165, 4792, 164, 137, 163, 2727, 4163, 4791, 162,
	161, 160, 4815, 159, 1472, 167, 158, 157, 152, 156,
	155, 1382, 154, 153, 151, 149, 150, 144, 148, 1382,
	4810, 147, 1381, 146, 1385, 1385, 143, 1550, 4762, 4192,
	1381, 142, 141, 1382, 2556, 1264, 140, 4238, 4846, 139,
	4847, 138, 4820, 136, 1381, 4239, 169, 3064, 1264, 135,
	134, 212, 2569, 2571, 133, 4832, 132, 1264, 131, 130,
	129, 858, 2227, 4826, 859, 67, 2575, 4874, 4843, 4844,
	66, 125, 1264, 4803, 126, 1264, 21, 46, 16, 71,
	72, 2587, 2588, 2589, 20, 15, 2221, 4862, 41, 103,
	117, 1264, 116, 115, 1264, 42, 112, 40, 19, 18,
	4242, 1550, 17, 1382, 110, 1382, 109, 108, 39, 1472,
	37, 13, 4900, 4939, 1381, 1402, 1381, 11, 43, 1672,
	1264, 2163, 1672, 1672, 14, 4871, 792, 4872, 7, 1383,
	1383, 202, 4923, 201, 4924, 4873, 2363, 4919, 204, 200,
	792, 203, 102, 4879, 4870, 199, 104, 1387, 198, 4911,
	4912, 101, 1427, 35, 12, 193, 4979, 4948, 4428, 93,
	196, 195, 194, 192, 297, 2224, 297, 297, 191, 1456,
	297, 1466, 190, 94, 91, 1550, 4935, 189, 1672, 97,
	96, 4978, 1480, 4966, 188, 4931, 92, 4933, 4962, 4934,
	865, 2215, 95, 865, 4922, 4921, 4973, 4917, 33, 8,
	70, 9, 4999, 3151, 4804, 4058, 120, 121, 44, 4932,
	89, 88, 87, 86, 1264, 1264, 872, 4956, 4957, 4985,
	32, 4646, 4951, 69, 4950, 31, 185, 4970, 236, 235,
	5004, 1264, 2227, 5000, 4982, 234, 233, 3829, 3830, 5008,
	3831, 5010, 4964, 232, 4958, 297, 231, 297, 297, 1456,
	230, 297, 297, 3958, 2545, 229, 5002, 1472, 1472, 4984,
	1466, 1472, 1472, 224, 1472, 1472, 4977, 1677, 228, 226,
	225, 227, 223, 249, 297, 4781, 1698, 248, 247, 246,
	5007, 5006, 1264, 5001, 1264, 4925, 1264, 245, 239, 238,
	5021, 5022, 1718, 244, 3877, 3878, 1387, 3879, 4940, 5057,
	243, 1727, 5013, 242, 241, 240, 237, 252, 4996, 1264,
	82, 1387, 222, 221, 220, 5055, 218, 214, 1751, 217,
	1466, 4938, 219, 216, 215, 297, 297, 213, 1456, 251,
	250, 83, 5030, 183, 184, 81, 3798, 182, 5024, 181,
	5042, 5043, 180, 179, 5045, 5046, 178, 5047, 5048, 177,
	865, 176, 297, 297, 80, 187, 186, 5054, 30, 2,
	2227, 1, 0, 1385, 1816, 5053, 0, 0, 0, 0,
	4646, 0, 1387, 1387, 0, 1824, 5020, 5050, 0, 0,
	1017, 5084, 1657, 5077, 0, 4646, 5109, 5078, 5107, 5133,
	0, 5085, 0, 1387, 0, 0, 1387, 0, 0, 0,
	1672, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1672, 0, 0, 5093, 0, 0, 0, 0, 5095, 0,
	0, 5094, 0, 0, 0, 0, 1264, 1264, 0, 0,
	0, 0, 0, 0, 0, 0, 1264, 0, 0, 0,
	0, 5101, 0, 5120, 0, 0, 4646, 4646, 0, 0,
	0, 0, 5122, 5123, 0, 5146, 0, 5106, 4982, 5131,
	0, 297, 0, 5155, 0, 5156, 0, 4646, 1383, 5138,
	4646, 0, 0, 5139, 5147, 0, 5141, 0, 0, 0,
	0, 5152, 5150, 2210, 0, 5154, 0, 297, 0, 1264,
	1264, 0, 0, 1264, 5164, 0, 0, 1672, 1472, 5194,
	5151, 1472, 5163, 5172, 5173, 5168, 1461, 0, 5149, 0,
	0, 0, 0, 0, 0, 0, 0, 5202, 5205, 0,
	5176, 0, 0, 0, 0, 0, 0, 0, 5242, 0,
	5184, 5185, 0, 5246, 0, 0, 0, 0, 0, 5218,
	0, 0, 0, 5193, 5192, 0, 0, 0, 0, 0,
	1385, 0, 5207, 1382, 5267, 0, 0, 0, 1385, 0,
	5174, 1264, 1264, 1264, 1381, 5206, 0, 5211, 0, 5210,
	0, 5265, 1385, 0, 0, 0, 0, 0, 0, 0,
	0, 5213, 0, 0, 5214, 0, 0, 0, 0, 0,
	0, 5251, 5212, 0, 2063, 0, 5255, 0, 2068, 1264,
	5258, 5266, 0, 0, 0, 0, 5299, 0, 5245, 0,
	0, 5304, 0, 0, 0, 0, 5282, 0, 5281, 5279,
	5280, 0, 0, 0, 1672, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 5300, 0,
	0, 0, 1385, 0, 1385, 5301, 0, 0, 0, 0,
	0, 0, 5344, 5302, 2363, 1383, 0, 0, 5325, 5343,
	5342, 5317, 0, 1383, 0, 0, 0, 0, 0, 5350,
	0, 0, 0, 5352, 5315, 0, 1264, 1383, 0, 5328,
	3281, 5335, 5336, 0, 1472, 0, 0, 0, 5356, 775,
	2324, 2324, 0, 5365, 0, 5349, 0, 5314, 0, 5348,
	5316, 0, 1382, 0, 5375, 5383, 4962, 5358, 0, 0,
	297, 0, 297, 1381, 0, 0, 297, 1382, 5357, 0,
	5362, 5371, 5372, 5386, 5374, 1264, 5379, 0, 1381, 1698,
	1456, 1466, 297, 5377, 297, 2188, 0, 5202, 5385, 0,
	5205, 0, 297, 5389, 792, 5387, 5404, 1383, 0, 1383,
	0, 297, 1387, 0, 1387, 5394, 5414, 5405, 0, 5402,
	0, 0, 0, 5406, 5412, 0, 0, 5373, 0, 2268,
	5411, 5403, 0, 0, 0, 5410, 0, 0, 1382, 1382,
	0, 297, 0, 5420, 0, 0, 0, 0, 297, 1381,
	1381, 0, 0, 1472, 0, 0, 2221, 0, 0, 1382,
	0, 0, 1382, 5419, 3426, 0, 5435, 0, 5436, 5445,
	1381, 0, 5446, 1381, 0, 3433, 5449, 0, 0, 0,
	0, 865, 0, 5444, 0, 5457, 4646, 0, 4646, 1264,
	1264, 5448, 5413, 5451, 5415, 0, 0, 0, 1264, 1264,
	5455, 5245, 0, 0, 0, 0, 5460, 0, 0, 5469,
	5476, 0, 5474, 5465, 5473, 0, 10, 5481, 5485, 872,
	0, 872, 5480, 5486, 5477, 5484, 5482, 3673, 5479, 197,
	5478, 872, 872, 6, 0, 2224, 5439, 0, 2221, 5489,
	5483, 0, 0, 5491, 1472, 5492, 5494, 0, 5495, 0,
	5499, 5497, 5496, 0, 5493, 3618, 3619, 5502, 3636, 3637,
	3638, 2215, 0, 0, 0, 1264, 0, 0, 0, 5506,
	0, 5508, 5499, 5503, 5466, 5467, 5510, 0, 4516, 0,
	3702, 5505, 0, 3400, 0, 5468, 0, 0, 0, 0,
	0, 0, 2210, 0, 0, 3715, 0, 0, 0, 0,
	0, 0, 0, 2816, 2817, 2818, 2835, 2836, 2837, 0,
	0, 4046, 0, 0, 0, 0, 3400, 2224, 0, 0,
	0, 0, 0, 0, 2838, 4044, 3740, 0, 0, 0,
	0, 0, 0, 0, 0, 4037, 3633, 0, 0, 0,
	0, 5507, 0, 2215, 0, 0, 0, 0, 0, 0,
	3544, 3545, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2041, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2828, 0, 0, 297, 0, 0, 0, 297, 0,
	2824, 0, 4442, 0, 0, 0, 0, 3618, 3619, 4909,
	3636, 3637, 3638, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2221, 0, 0, 0, 0, 0,
	4109, 0, 0, 0, 4048, 0, 0, 297, 0, 0,
	0, 0, 0, 0, 0, 0, 3624, 0, 1985, 1986,
	0, 0, 0, 4039, 0, 0, 297, 0, 0, 0,
	0, 0, 1385, 0, 0, 0, 0, 297, 4491, 4038,
	0, 0, 2016, 0, 297, 0, 0, 0, 0, 0,
	1988, 2829, 2830, 2831, 2832, 0, 0, 0, 3633, 0,
	297, 2823, 297, 0, 2141, 0, 775, 0, 297, 0,
	0, 0, 0, 2224, 0, 0, 0, 0, 0, 2041,
	865, 0, 0, 0, 1017, 0, 0, 0, 1987, 0,
	3640, 0, 0, 0, 0, 0, 0, 4047, 1382, 2215,
	1382, 0, 0, 0, 0, 0, 0, 0, 0, 1381,
	0, 1381, 3642, 3643, 3644, 3645, 1456, 297, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 865, 3634, 0, 0, 0, 1383, 4035, 297,
	0, 0, 0, 0, 2833, 2834, 0, 2608, 3715, 2210,
	0, 0, 297, 297, 0, 297, 0, 297, 3624, 297,
	0, 297, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2826, 0,
	0, 1385, 0, 2709, 0, 0, 2645, 2221, 0, 2646,
	0, 2647, 0, 0, 0, 0, 1385, 0, 0, 1993,
	0, 0, 0, 0, 4046, 0, 297, 297, 297, 297,
	297, 0, 0, 0, 2038, 0, 0, 0, 4044, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4037, 0,
	0, 0, 3640, 2221, 2221, 0, 845, 0, 0, 0,
	865, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2015, 2017, 0, 0, 1385, 1385, 0,
	0, 0, 2221, 2221, 0, 0, 2224, 0, 0, 4045,
	4040, 4041, 4042, 4043, 0, 3634, 1211, 0, 1385, 0,
	0, 1385, 0, 0, 0, 0, 1383, 0, 0, 0,
	4077, 0, 2215, 1548, 0, 2221, 0, 0, 0, 0,
	3635, 1383, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4049, 2224, 2224, 0, 0, 2008, 4048, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2968, 0, 4691, 0, 2806, 4039, 2798, 2215, 2215,
	0, 2224, 2224, 0, 0, 2827, 0, 0, 0, 0,
	0, 0, 4038, 2063, 0, 0, 2038, 0, 0, 0,
	0, 0, 1383, 1383, 0, 0, 0, 2215, 2215, 0,
	0, 0, 4121, 0, 2224, 0, 0, 0, 0, 0,
	0, 0, 0, 1383, 0, 0, 1383, 0, 0, 4137,
	0, 0, 0, 0, 0, 0, 0, 2038, 0, 0,
	2215, 0, 0, 0, 4750, 0, 0, 775, 1677, 0,
	4047, 2040, 0, 0, 0, 1677, 0, 0, 0, 4761,
	0, 0, 297, 0, 0, 0, 0, 0, 0, 0,
	0, 775, 0, 0, 0, 0, 0, 0, 297, 0,
	775, 0, 3635, 4785, 0, 0, 0, 0, 0, 0,
	0, 0, 297, 0, 0, 0, 3630, 3631, 3632, 0,
	0, 0, 0, 3629, 3627, 3628, 3620, 3621, 3622, 3623,
	3625, 3626, 297, 1466, 0, 0, 0, 0, 0, 297,
	0, 297, 1698, 2009, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2813, 2814, 2815, 2839, 2825, 2819, 0, 2821, 2822,
	2820, 2807, 2808, 2809, 2810, 2811, 2812, 3936, 3937, 0,
	0, 0, 0, 0, 4230, 0, 0, 0, 0, 297,
	1466, 0, 297, 792, 0, 792, 0, 0, 0, 0,
	0, 0, 3117, 0, 0, 0, 0, 0, 297, 2040,
	0, 297, 0, 0, 0, 297, 0, 297, 0, 0,
	0, 0, 1456, 0, 297, 297, 0, 1466, 1466, 3133,
	0, 0, 0, 0, 297, 0, 0, 0, 0, 0,
	4027, 0, 4045, 4040, 4041, 4042, 4043, 2221, 2221, 0,
	4866, 0, 4051, 0, 0, 0, 0, 0, 3630, 3631,
	3632, 0, 2221, 0, 0, 3629, 3627, 3628, 3620, 3621,
	3622, 3623, 3625, 3626, 0, 0, 0, 0, 872, 872,
	5222, 0, 872, 872, 4049, 0, 0, 0, 0, 0,
	0, 3176, 0, 0, 0, 0, 0, 1385, 0, 1385,
	0, 0, 0, 297, 0, 0, 0, 5227, 0, 1989,
	1990, 1991, 1992, 1994, 1995, 0, 0, 297, 0, 0,
	0, 0, 0, 0, 0, 0, 2224, 2224, 0, 0,
	0, 297, 0, 4100, 4101, 0, 0, 0, 0, 0,
	0, 2224, 865, 0, 0, 0, 0, 865, 5237, 0,
	0, 0, 2215, 2215, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2215, 0, 0,
	297, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3277, 1698, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3618, 3619, 0, 3636, 3637,
	3638, 0, 1383, 0, 1383, 0, 0, 0, 0, 2221,
	0, 0, 0, 0, 0, 0, 5233, 0, 4108, 0,
	297, 3337, 0, 4164, 4165, 4166, 4167, 4168, 4169, 4170,
	4171, 4172, 4173, 4174, 4175, 4176, 4177, 4178, 4179, 4180,
	4181, 4182, 4183, 0, 4187, 0, 0, 0, 0, 0,
	1698, 0, 0, 297, 0, 0, 3277, 0, 0, 0,
	0, 0, 0, 0, 297, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3383, 3633, 0, 5230, 0,
	0, 0, 0, 0, 0, 3176, 0, 775, 2224, 0,
	0, 0, 0, 0, 0, 0, 1017, 3176, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2215, 0, 0, 0, 0, 297,
	0, 0, 5223, 0, 0, 0, 0, 0, 0, 0,
	0, 5235, 0, 0, 0, 0, 0, 0, 0, 297,
	1456, 297, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3456, 297, 0, 0, 1456, 0, 1456, 0, 1456,
	1475, 0, 0, 0, 0, 0, 0, 0, 5091, 0,
	0, 0, 0, 0, 3504, 0, 3624, 0, 0, 299,
	0, 0, 0, 0, 0, 0, 0, 1211, 1211, 1211,
	0, 0, 0, 0, 0, 0, 0, 5236, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 297, 297, 297,
	297, 1456, 0, 0, 1456, 3618, 3619, 297, 3636, 3637,
	3638, 0, 297, 0, 0, 0, 0, 5135, 0, 0,
	5137, 0, 5241, 0, 0, 0, 0, 1647, 0, 0,
	0, 0, 0, 1663, 0, 0, 0, 0, 0, 0,
	3640, 1677, 0, 297, 0, 0, 0, 2968, 2968, 0,
	0, 297, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1700, 0, 1706, 0, 1712, 0, 1219,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4572,
	0, 0, 0, 3634, 0, 0, 3633, 0, 0, 0,
	0, 0, 0, 0, 0, 5228, 2221, 0, 0, 2221,
	0, 2221, 0, 0, 0, 0, 5238, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4599, 0,
	0, 5234, 4369, 4370, 1677, 1677, 0, 0, 0, 0,
	5240, 0, 0, 0, 4373, 0, 0, 1807, 0, 1812,
	3618, 3619, 0, 3636, 3637, 3638, 0, 0, 0, 0,
	0, 0, 5231, 1826, 0, 1831, 0, 0, 0, 5229,
	0, 5252, 0, 0, 2038, 5253, 0, 5239, 0, 0,
	0, 0, 0, 0, 0, 2224, 0, 0, 2224, 1698,
	2224, 1226, 0, 0, 0, 0, 3624, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 5224,
	0, 2215, 0, 0, 2215, 0, 2215, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3633, 0, 0, 1897, 0, 0, 1903, 0, 2968,
	2968, 2968, 2968, 3641, 0, 0, 0, 0, 0, 5232,
	0, 0, 0, 5225, 0, 0, 0, 4469, 2221, 0,
	3635, 0, 2569, 4475, 4476, 0, 0, 0, 0, 0,
	3640, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3634, 0, 0, 1677, 1677, 1677, 1677,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3624, 0, 0, 297, 0, 0, 2224, 0, 2042,
	2043, 2044, 2045, 2046, 2047, 2048, 2049, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2215, 0, 2221, 0, 0, 0, 0,
	297, 0, 2062, 1548, 0, 775, 0, 0, 2075, 0,
	775, 0, 0, 775, 0, 0, 775, 775, 0, 0,
	0, 0, 775, 0, 2038, 0, 0, 0, 0, 0,
	297, 0, 0, 4821, 0, 0, 0, 0, 0, 0,
	0, 0, 297, 0, 0, 0, 3630, 3631, 3632, 0,
	0, 0, 297, 3629, 3627, 3628, 3620, 3621, 3622, 3623,
	3625, 3626, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2224, 0, 4821, 0, 3634, 0,
	0, 792, 0, 0, 0, 0, 0, 0, 0, 0,
	297, 0, 0, 0, 297, 297, 0, 0, 4579, 4580,
	2215, 3307, 0, 0, 0, 0, 0, 0, 1249, 124,
	3635, 0, 0, 0, 2135, 2135, 2135, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2730, 0, 3176, 3176,
	297, 0, 3784, 3787, 0, 3297, 3295, 0, 0, 3176,
	0, 2188, 0, 3299, 3301, 3291, 0, 0, 0, 0,
	3176, 2188, 0, 3176, 2188, 0, 0, 2188, 0, 2038,
	3784, 0, 0, 0, 0, 2221, 0, 0, 0, 0,
	0, 0, 297, 297, 3787, 0, 297, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3317, 0, 0,
	0, 0, 0, 0, 0, 3787, 0, 297, 0, 3860,
	2730, 3860, 0, 0, 0, 0, 0, 1456, 0, 0,
	0, 0, 0, 0, 0, 124, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3176, 0, 3176, 0, 3891, 3176, 3787, 0, 0, 3176,
	0, 0, 0, 0, 2224, 3635, 0, 0, 0, 0,
	0, 0, 0, 3787, 0, 0, 865, 0, 0, 2569,
	0, 0, 0, 0, 1211, 0, 3630, 3631, 3632, 0,
	2215, 0, 0, 3629, 3627, 3628, 3620, 3621, 3622, 3623,
	3625, 3626, 0, 0, 0, 0, 0, 0, 1456, 0,
	0, 0, 0, 2221, 0, 297, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1183, 0, 0, 0,
	0, 0, 0, 297, 0, 0, 3938, 0, 1204, 3954,
	3176, 0, 0, 297, 0, 0, 0, 0, 0, 0,
	0, 1466, 0, 0, 0, 0, 0, 0, 0, 3293,
	4793, 0, 4795, 4796, 4797, 0, 4799, 297, 0, 0,
	3309, 0, 3383, 0, 0, 1456, 0, 297, 0, 0,
	3176, 0, 775, 0, 0, 0, 0, 0, 0, 3176,
	1371, 0, 2224, 0, 3308, 3298, 3296, 3300, 3302, 3292,
	3294, 3310, 3312, 0, 4829, 0, 0, 0, 0, 0,
	0, 0, 3304, 3306, 3314, 0, 0, 0, 2215, 0,
	0, 3630, 3631, 3632, 0, 0, 0, 0, 3629, 3627,
	3628, 3620, 3621, 3622, 3623, 3625, 3626, 0, 4066, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3318,
	2968, 2968, 0, 0, 0, 0, 0, 0, 0, 4849,
	0, 4073, 0, 0, 0, 1698, 0, 0, 0, 1456,
	297, 0, 297, 0, 0, 0, 0, 0, 1456, 0,
	0, 1456, 0, 0, 0, 0, 0, 4882, 0, 0,
	0, 0, 1226, 1226, 1226, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	297, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1677, 1677, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1634, 0,
	2968, 2968, 2968, 2968, 2968, 2968, 2968, 2968, 2968, 2968,
	2968, 2968, 2968, 2968, 2968, 2968, 2968, 2968, 2968, 2968,
	0, 2968, 0, 0, 0, 0, 0, 0, 0, 4142,
	0, 0, 0, 3311, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4952,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1677, 1677, 1677,
	1677, 1677, 1677, 1677, 1677, 1677, 1677, 1677, 1677, 1677,
	1677, 1677, 1677, 1677, 1677, 1677, 1677, 0, 1677, 0,
	0, 0, 0, 0, 0, 0, 0, 3319, 0, 0,
	0, 0, 0, 0, 0, 0, 3303, 3305, 3313, 0,
	0, 0, 0, 0, 0, 0, 297, 297, 0, 0,
	0, 2632, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 5029, 0, 0, 0, 0, 0, 0,
	0, 775, 775, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2662, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 5061, 0, 297, 0,
	0, 0, 0, 0, 0, 0, 2703, 0, 2707, 0,
	0, 0, 0, 0, 0, 2721, 0, 0, 1211, 0,
	0, 5083, 0, 0, 2732, 2733, 2734, 2735, 2736, 2737,
	2738, 2739, 2740, 2741, 2742, 2743, 2744, 2745, 2746, 2747,
	2748, 2749, 2750, 2751, 2752, 2753, 2754, 2755, 2756, 2757,
	2758, 2759, 2760, 2761, 2762, 2763, 2764, 2765, 2766, 2767,
	0, 2773, 0, 2775, 2776, 2777, 2778, 0, 0, 0,
	0, 2943, 2944, 2945, 2946, 2939, 2940, 2941, 2942, 0,
	0, 0, 865, 0, 0, 0, 0, 0, 0, 2802,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2062, 0, 0, 0, 2853, 0, 0, 0, 4341,
	0, 0, 4343, 4344, 0, 0, 0, 0, 0, 3860,
	0, 2883, 2886, 2889, 2892, 0, 0, 2898, 2899, 2900,
	2901, 2902, 2903, 2904, 297, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3277, 0,
	2569, 0, 0, 0, 0, 2964, 0, 2975, 2977, 2982,
	2919, 2920, 2921, 2922, 0, 3787, 0, 297, 0, 0,
	0, 792, 792, 1466, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2931, 2932, 2933, 2934, 2927, 2928,
	2929, 2930, 2935, 2936, 2937, 2938, 0, 0, 0, 0,
	0, 2021, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 297, 3383, 0, 0, 3383, 2188, 0, 0,
	1985, 1986, 297, 0, 0, 124, 0, 0, 0, 4433,
	0, 3277, 0, 0, 297, 0, 0, 0, 297, 0,
	297, 0, 0, 0, 2016, 297, 0, 0, 0, 0,
	0, 0, 1988, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3176, 297, 0, 0, 2915, 2916,
	2917, 2918, 2923, 2924, 2925, 2926, 1017, 3176, 0, 1634,
	0, 2041, 0, 0, 0, 0, 0, 0, 0, 0,
	1987, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2007, 0, 0, 0, 0, 0, 0, 297, 0,
	2004, 0, 3787, 0, 0, 3133, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 124, 0,
	124, 0, 124, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4515, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4535,
	0, 2010, 2011, 2012, 2013, 1204, 124, 124, 0, 1226,
	0, 1993, 0, 0, 0, 0, 0, 1634, 0, 0,
	0, 0, 124, 0, 124, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 124, 0,
	124, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 297, 0, 0, 2015, 2017, 0, 1698, 0,
	297, 0, 0, 0, 0, 2021, 0, 0, 0, 0,
	0, 0, 0, 0, 297, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2002, 2003, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 124, 0, 1466, 1466,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1466, 1466, 0, 297, 1466, 2008, 0,
	0, 0, 3340, 3341, 0, 3343, 0, 0, 0, 3176,
	3176, 0, 3784, 0, 0, 3860, 3176, 0, 0, 0,
	0, 0, 0, 0, 4648, 0, 4648, 1698, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3176, 0,
	2188, 0, 0, 0, 3784, 0, 1698, 1698, 297, 3787,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3787, 0, 297, 3787, 0, 297, 0, 1634,
	3860, 0, 0, 0, 0, 1183, 0, 0, 0, 2038,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3176, 0, 3176, 297, 0, 0, 0, 2055, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2061, 2021, 0, 0,
	2067, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2021, 0, 0, 0, 0, 0, 2014,
	0, 3176, 3176, 0, 0, 0, 0, 3383, 3383, 3467,
	0, 0, 0, 0, 3784, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2009, 0, 297, 0, 0,
	2021, 0, 0, 0, 0, 0, 2021, 0, 297, 0,
	0, 0, 2021, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2968, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2042, 2043, 0, 0, 0,
	0, 2040, 0, 0, 0, 0, 0, 0, 0, 0,
	1211, 2155, 0, 2158, 0, 124, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2021, 0, 0,
	0, 0, 2021, 3527, 3528, 0, 0, 0, 1677, 3534,
	0, 0, 0, 0, 2968, 0, 2021, 0, 0, 0,
	0, 2021, 0, 0, 0, 0, 0, 0, 3548, 3549,
	0, 0, 0, 0, 2853, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2005, 2001, 0, 1998, 1996,
	1997, 1989, 1990, 1991, 1992, 1994, 1995, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3176,
	2188, 0, 2188, 1226, 0, 4433, 0, 1634, 0, 3558,
	0, 0, 0, 0, 297, 0, 0, 2021, 0, 0,
	0, 1677, 0, 2021, 4898, 3572, 4898, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3584, 0, 0, 0, 0, 0, 0, 0,
	0, 865, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3860, 1698, 0, 1698, 1456, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3787, 0, 297, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1634, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4433, 0, 0, 4648, 0, 0, 1698, 0, 0,
	0, 3176, 0, 0, 0, 297, 0, 0, 0, 0,
	2968, 0, 0, 2982, 2982, 2982, 0, 0, 0, 4993,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2135, 1698, 2021, 2021, 2021, 2021, 2021, 2021, 2021, 2021,
	0, 1634, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2021, 0, 0, 0, 0, 0, 3677, 297,
	297, 0, 0, 2968, 175, 2021, 0, 1634, 0, 0,
	0, 0, 0, 84, 0, 52, 51, 0, 0, 0,
	0, 0, 0, 4142, 0, 0, 0, 1677, 2968, 0,
	0, 0, 85, 0, 0, 0, 78, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	90, 2972, 0, 0, 0, 3860, 5052, 0, 0, 0,
	0, 73, 0, 4433, 0, 2021, 0, 0, 54, 0,
	173, 2021, 0, 0, 0, 0, 0, 0, 0, 0,
	1677, 0, 0, 4648, 0, 0, 0, 0, 0, 53,
	0, 0, 99, 0, 0, 0, 0, 0, 4648, 0,
	0, 0, 0, 0, 0, 1677, 0, 0, 1985, 1986,
	0, 0, 0, 1211, 0, 0, 0, 0, 0, 0,
	56, 74, 0, 0, 297, 1211, 0, 0, 1204, 57,
	1204, 0, 2016, 0, 63, 0, 0, 792, 0, 79,
	1988, 0, 0, 0, 0, 0, 0, 55, 0, 122,
	0, 0, 0, 0, 0, 106, 119, 0, 0, 4648,
	4648, 0, 0, 1634, 75, 0, 3817, 0, 0, 2041,
	0, 0, 0, 0, 0, 0, 0, 0, 1987, 0,
	4648, 0, 297, 4648, 0, 0, 0, 0, 0, 2007,
	0, 0, 0, 2188, 0, 0, 0, 0, 2004, 0,
	58, 0, 0, 0, 1698, 0, 1698, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 107, 0, 0, 124, 3874, 3875, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1466, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 5182, 0, 0, 0, 0, 4103, 0, 0, 0,
	0, 0, 0, 1634, 0, 0, 0, 4898, 0, 0,
	297, 0, 0, 0, 0, 0, 0, 0, 0, 2010,
	2011, 2012, 2013, 0, 0, 0, 0, 0, 0, 1993,
	0, 0, 0, 0, 0, 0, 3176, 0, 0, 0,
	0, 0, 76, 0, 1183, 0, 0, 1183, 1183, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	297, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2015, 2017, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4142, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2791, 0, 0, 0, 0,
	0, 0, 2002, 2003, 0, 0, 0, 0, 0, 1698,
	111, 0, 0, 0, 0, 1204, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2061, 0, 0, 59, 2061,
	0, 0, 0, 0, 0, 0, 2008, 0, 0, 0,
	0, 0, 0, 0, 0, 62, 0, 0, 0, 0,
	65, 0, 0, 0, 0, 0, 0, 5337, 0, 0,
	77, 0, 0, 0, 0, 0, 0, 0, 64, 205,
	0, 114, 0, 0, 118, 0, 0, 0, 0, 0,
	60, 0, 0, 0, 174, 0, 0, 0, 0, 0,
	0, 0, 61, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4433, 1371, 259, 0, 0, 0, 0, 0,
	0, 0, 68, 0, 0, 0, 0, 2038, 166, 2158,
	0, 0, 0, 2721, 0, 0, 0, 0, 0, 0,
	4095, 4096, 0, 0, 4099, 172, 0, 0, 4102, 0,
	0, 0, 0, 0, 0, 0, 0, 4106, 0, 0,
	0, 0, 0, 0, 0, 0, 4113, 0, 261, 3176,
	0, 3677, 0, 0, 0, 0, 0, 124, 0, 4648,
	0, 4648, 0, 0, 1698, 0, 4126, 2014, 0, 0,
	0, 0, 0, 0, 0, 1226, 171, 0, 0, 0,
	0, 0, 2021, 0, 0, 0, 4149, 4150, 0, 4151,
	4152, 4153, 211, 2009, 0, 0, 0, 0, 0, 0,
	260, 0, 0, 0, 0, 0, 0, 4159, 0, 0,
	0, 4161, 2021, 0, 0, 0, 253, 0, 0, 0,
	0, 0, 0, 0, 0, 254, 0, 0, 0, 206,
	0, 3176, 0, 0, 210, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4190, 4191, 0, 0, 3277, 0,
	0, 0, 0, 2021, 0, 209, 0, 2021, 3, 2040,
	0, 0, 4202, 0, 3176, 0, 0, 0, 0, 0,
	0, 2021, 0, 0, 0, 0, 0, 4211, 3277, 0,
	0, 0, 2021, 2021, 2021, 2021, 2021, 2021, 2021, 2021,
	2021, 2021, 2021, 2021, 2021, 2021, 2021, 2021, 2021, 2021,
	2021, 2021, 2021, 2021, 2021, 2021, 2021, 2021, 2021, 2021,
	2021, 2021, 2021, 2021, 2021, 2021, 2021, 2021, 0, 0,
	0, 0, 0, 2021, 0, 2021, 2021, 2021, 2021, 0,
	0, 0, 0, 0, 0, 0, 0, 2972, 2972, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 906, 2021, 2005, 2001, 0, 1998, 1996, 1997, 1989,
	1990, 1991, 1992, 1994, 1995, 0, 4277, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 917, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1260, 0, 0, 4295, 0, 0, 0, 919, 0,
	0, 0, 0, 2021, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 918, 0, 0, 0, 0, 0, 4326, 0,
	0, 0, 0, 2021, 0, 124, 2021, 0, 124, 2021,
	124, 0, 2021, 296, 296, 296, 0, 1634, 2021, 2021,
	2021, 2021, 2021, 2021, 2021, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4350, 4351, 0,
	0, 0, 0, 0, 0, 0, 911, 940, 0, 0,
	0, 0, 0, 927, 0, 0, 0, 0, 0, 0,
	0, 0, 124, 0, 0, 124, 0, 0, 916, 0,
	1634, 124, 0, 0, 0, 0, 940, 0, 0, 0,
	0, 0, 0, 0, 2021, 1634, 0, 3639, 0, 2972,
	2972, 2972, 2972, 0, 0, 2021, 0, 2021, 0, 0,
	0, 0, 2021, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1634, 0, 0, 0,
	0, 0, 915, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 840,
	0, 0, 0, 0, 0, 0, 0, 2135, 124, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1226, 0,
	0, 0, 0, 0, 0, 0, 0, 913, 0, 0,
	1226, 0, 0, 0, 2135, 0, 0, 0, 0, 0,
	0, 0, 0, 4466, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1384, 0, 0, 0, 0, 0, 0,
	926, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4513, 4514, 0, 0, 0, 0, 4518, 4519,
	0, 0, 0, 4522, 4523, 0, 0, 0, 1634, 0,
	0, 4527, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2791, 4531, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4536, 0,
	0, 0, 2061, 908, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 912, 0, 0, 0,
	84, 0, 0, 0, 0, 0, 0, 0, 1634, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 85,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 90, 839, 0,
	0, 0, 1985, 1986, 0, 2018, 2019, 2020, 2029, 2030,
	2031, 0, 0, 0, 922, 0, 0, 0, 0, 0,
	0, 910, 0, 0, 0, 0, 2016, 0, 0, 0,
	0, 0, 0, 0, 1988, 0, 0, 0, 0, 99,
	0, 0, 0, 0, 1296, 2035, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1211, 0, 0, 2041, 0, 0, 0, 0, 0, 0,
	2021, 2021, 1987, 2021, 907, 0, 0, 0, 0, 0,
	920, 1011, 0, 2007, 0, 0, 0, 0, 0, 0,
	0, 0, 2004, 0, 55, 0, 122, 0, 0, 0,
	0, 0, 106, 119, 914, 0, 0, 0, 0, 0,
	1634, 0, 0, 1634, 0, 0, 0, 0, 0, 841,
	0, 0, 0, 0, 0, 1371, 0, 0, 4692, 0,
	909, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 924, 925, 0, 921,
	0, 1371, 0, 0, 0, 0, 0, 0, 107, 0,
	0, 0, 0, 2010, 2011, 2012, 2013, 0, 4729, 4730,
	0, 0, 0, 1993, 0, 0, 0, 0, 0, 0,
	0, 0, 1634, 0, 0, 0, 0, 2021, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1634,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2026, 0, 0, 0,
	2036, 0, 0, 0, 0, 0, 0, 2015, 2017, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2021, 2021, 0,
	2972, 2972, 0, 0, 2021, 0, 2002, 2003, 0, 0,
	0, 0, 0, 0, 3639, 3639, 0, 0, 2021, 2021,
	0, 0, 0, 0, 0, 2024, 0, 0, 2021, 0,
	4816, 4817, 4818, 0, 0, 0, 0, 0, 0, 0,
	2008, 0, 2021, 0, 0, 0, 1388, 0, 0, 0,
	0, 0, 0, 2721, 2021, 0, 4827, 4828, 0, 0,
	0, 0, 0, 0, 0, 124, 124, 111, 124, 0,
	0, 0, 0, 0, 4836, 4839, 0, 0, 0, 0,
	0, 0, 0, 0, 1634, 0, 0, 0, 0, 0,
	2972, 2972, 2972, 2972, 2972, 2972, 2972, 2972, 2972, 2972,
	2972, 2972, 2972, 2972, 2972, 2972, 2972, 2972, 2972, 2972,
	0, 2972, 3639, 3639, 3639, 3639, 0, 0, 0, 0,
	0, 2038, 124, 124, 0, 124, 205, 0, 114, 0,
	0, 118, 0, 0, 0, 0, 0, 0, 296, 0,
	296, 296, 0, 0, 296, 0, 0, 2021, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 259, 4899, 0, 0, 0, 0, 0, 0, 1012,
	0, 4907, 0, 0, 0, 166, 0, 0, 0, 0,
	0, 2014, 0, 0, 0, 0, 4915, 0, 0, 1211,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4926, 0, 2009, 4928, 0,
	0, 0, 0, 0, 0, 261, 0, 0, 0, 296,
	0, 296, 296, 0, 0, 296, 296, 0, 0, 0,
	0, 0, 0, 0, 4953, 0, 0, 2027, 0, 0,
	0, 0, 0, 171, 0, 0, 0, 0, 940, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1371, 211,
	0, 1204, 1377, 0, 0, 0, 0, 260, 0, 0,
	0, 0, 0, 2040, 0, 124, 124, 0, 0, 1985,
	1986, 0, 0, 253, 0, 0, 0, 2021, 0, 0,
	0, 0, 254, 0, 0, 0, 206, 0, 0, 296,
	296, 210, 0, 2016, 0, 0, 0, 0, 0, 0,
	0, 1988, 0, 0, 292, 292, 771, 0, 0, 0,
	0, 0, 1801, 0, 0, 0, 296, 296, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2041, 0, 0, 0, 2021, 2021, 0, 0, 0, 1987,
	0, 2025, 0, 0, 0, 0, 0, 0, 0, 0,
	2007, 0, 0, 1999, 2000, 2006, 2028, 2005, 2001, 2004,
	1998, 1996, 1997, 1989, 1990, 1991, 1992, 1994, 1995, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 5060, 0, 0, 0,
	5064, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4098, 0, 0,
	0, 0, 0, 1634, 0, 296, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2010, 2011, 2012, 2013, 0, 0, 0, 0, 0, 0,
	1993, 296, 0, 0, 1634, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2015, 2017, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 124,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2721, 0, 2002, 2003, 0, 0, 1371, 1371, 0,
	4839, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2021, 2021, 0, 0, 2021,
	3639, 3639, 2021, 0, 0, 0, 2021, 2008, 0, 0,
	0, 0, 0, 2021, 0, 0, 1634, 1634, 0, 1634,
	0, 0, 0, 0, 0, 0, 2021, 0, 0, 0,
	0, 0, 0, 0, 1211, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2021,
	2021, 2021, 2021, 2021, 0, 0, 0, 0, 1634, 2021,
	0, 2021, 0, 0, 3639, 3639, 3639, 3639, 3639, 3639,
	3639, 3639, 3639, 3639, 3639, 3639, 3639, 3639, 3639, 3639,
	3639, 3639, 3639, 3639, 0, 1226, 0, 3639, 2038, 0,
	2021, 2021, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2021, 0, 0, 5278, 5278, 5278, 0, 0,
	0, 2021, 0, 0, 2157, 0, 1384, 0, 0, 0,
	296, 0, 0, 1388, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1634, 1388, 0, 296, 2157, 296, 0,
	0, 0, 0, 5303, 0, 0, 940, 0, 2014, 0,
	0, 0, 0, 0, 0, 940, 1634, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2009, 1388, 0, 2021, 0, 0,
	0, 0, 0, 0, 0, 296, 0, 0, 0, 0,
	0, 0, 296, 0, 0, 2021, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1985, 1986, 0, 2018, 2019, 2020, 2029, 2030, 2031,
	5278, 1388, 0, 0, 0, 0, 2021, 0, 1388, 84,
	0, 0, 0, 0, 2022, 2016, 0, 0, 0, 0,
	2040, 0, 0, 1988, 1388, 0, 0, 0, 85, 1634,
	2021, 2021, 0, 0, 2035, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 90, 0, 0, 5397,
	0, 0, 2041, 0, 0, 0, 0, 0, 0, 0,
	0, 1987, 0, 0, 0, 0, 0, 0, 0, 0,
	124, 0, 2007, 0, 0, 0, 0, 0, 0, 0,
	0, 2004, 0, 1634, 1388, 0, 0, 0, 99, 0,
	0, 0, 0, 0, 0, 0, 1371, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1634, 2005, 2001, 0, 1998, 1996, 1997,
	1989, 1990, 1991, 1992, 1994, 1995, 0, 0, 0, 0,
	1011, 0, 0, 0, 0, 0, 124, 0, 0, 0,
	0, 0, 0, 0, 0, 122, 2021, 0, 0, 0,
	0, 106, 119, 5278, 5461, 0, 1634, 0, 0, 0,
	0, 0, 2010, 2011, 2012, 2013, 0, 0, 0, 0,
	0, 0, 1993, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2021, 2021, 0, 0, 0, 2021, 2021,
	0, 0, 2021, 2021, 0, 0, 1634, 2021, 296, 0,
	0, 2021, 940, 0, 0, 2026, 2021, 107, 0, 2036,
	0, 0, 0, 0, 0, 0, 2015, 2017, 0, 0,
	0, 2972, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2032, 0, 2033, 0,
	0, 296, 0, 0, 1226, 2002, 2003, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	296, 0, 0, 0, 2024, 0, 0, 124, 0, 0,
	1634, 296, 0, 1371, 0, 0, 0, 0, 296, 2008,
	0, 1371, 0, 0, 0, 0, 0, 0, 0, 1442,
	0, 1442, 1442, 0, 296, 0, 296, 0, 0, 0,
	0, 0, 296, 0, 2972, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2034, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1634, 3090, 0, 0, 0, 2023,
	0, 296, 0, 0, 0, 0, 0, 1388, 0, 1388,
	2038, 0, 2021, 0, 0, 0, 111, 0, 0, 0,
	1545, 0, 0, 296, 1388, 0, 1655, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 940, 296, 0, 296,
	0, 296, 0, 296, 0, 296, 0, 2228, 0, 2021,
	2021, 0, 0, 0, 1388, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2014, 124, 0, 0, 0, 205, 0, 114, 0, 0,
	118, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	296, 296, 296, 296, 296, 0, 2009, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	259, 0, 0, 0, 0, 0, 0, 0, 1012, 0,
	0, 0, 0, 0, 166, 0, 2027, 1805, 1806, 0,
	0, 0, 0, 0, 0, 0, 2021, 2021, 2021, 0,
	0, 0, 124, 0, 0, 0, 0, 2021, 2021, 3639,
	2972, 0, 1388, 0, 0, 0, 2021, 124, 0, 2021,
	0, 0, 2040, 0, 261, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 124, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 171, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3639, 2972, 0, 0, 0, 0, 211, 0,
	0, 0, 0, 0, 0, 0, 260, 0, 0, 2021,
	0, 0, 0, 0, 0, 0, 0, 2021, 2972, 0,
	0, 0, 253, 0, 0, 2021, 1927, 0, 0, 0,
	2025, 254, 0, 0, 0, 206, 2021, 0, 2021, 825,
	210, 0, 1999, 2000, 2006, 2028, 2005, 2001, 0, 1998,
	1996, 1997, 1989, 1990, 1991, 1992, 1994, 1995, 0, 0,
	808, 209, 0, 2021, 0, 809, 0, 4541, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1384, 1985, 1986, 1226,
	2018, 2019, 2020, 2029, 2030, 2031, 0, 0, 810, 0,
	0, 0, 1384, 1388, 1388, 0, 0, 0, 124, 811,
	2022, 2016, 0, 0, 1388, 0, 296, 0, 0, 1988,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3639,
	2035, 812, 0, 0, 0, 0, 296, 0, 0, 0,
	1388, 0, 0, 940, 0, 940, 0, 0, 2041, 0,
	0, 0, 0, 0, 831, 0, 0, 1987, 0, 0,
	2021, 3639, 0, 0, 2021, 0, 0, 0, 2007, 1388,
	0, 0, 0, 0, 0, 0, 813, 2004, 0, 0,
	0, 0, 0, 3639, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 296, 0, 0, 940, 0, 0, 0,
	0, 814, 807, 0, 0, 0, 0, 0, 0, 1985,
	1986, 0, 296, 0, 1388, 296, 1388, 0, 1388, 296,
	0, 296, 0, 0, 0, 815, 0, 0, 296, 296,
	816, 0, 0, 2016, 0, 0, 1388, 1388, 296, 0,
	0, 1988, 0, 0, 0, 0, 0, 840, 0, 0,
	1388, 0, 0, 0, 0, 0, 0, 0, 2010, 2011,
	2012, 2013, 1388, 0, 0, 1388, 1388, 1388, 1993, 0,
	2041, 2173, 0, 0, 0, 830, 0, 0, 0, 1987,
	0, 0, 0, 0, 0, 0, 2791, 2183, 0, 1655,
	2007, 0, 0, 0, 0, 0, 0, 0, 0, 2004,
	0, 0, 0, 0, 0, 0, 0, 296, 0, 0,
	0, 2026, 0, 0, 0, 2036, 0, 0, 0, 0,
	0, 296, 2015, 2017, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 296, 1442, 0, 827, 0,
	0, 0, 2032, 1655, 2033, 0, 0, 0, 0, 0,
	0, 2002, 2003, 0, 0, 0, 0, 4097, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2024, 0, 0, 0, 296, 0, 0, 0, 2021, 0,
	2010, 2011, 2012, 2013, 0, 2008, 0, 0, 0, 0,
	1993, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2228, 2228, 1388, 2021, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 837, 0, 818, 0, 0,
	0, 0, 0, 0, 940, 0, 124, 0, 0, 0,
	0, 0, 0, 0, 2034, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2015, 2017, 0, 0, 838, 0,
	819, 0, 0, 0, 0, 2023, 0, 296, 0, 0,
	0, 0, 0, 0, 0, 0, 2038, 0, 296, 0,
	0, 0, 0, 2002, 2003, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 124, 0, 0, 124, 0,
	0, 0, 0, 0, 0, 1388, 839, 2021, 0, 0,
	0, 0, 0, 0, 820, 0, 0, 2008, 0, 835,
	836, 0, 833, 0, 0, 0, 0, 0, 0, 828,
	0, 0, 821, 296, 0, 0, 2014, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 296, 0, 296, 0, 0, 0, 0,
	0, 0, 2009, 0, 0, 0, 296, 0, 0, 1388,
	0, 2021, 0, 0, 0, 0, 1388, 0, 0, 0,
	822, 0, 829, 0, 0, 1388, 0, 0, 0, 0,
	0, 823, 2027, 0, 0, 0, 0, 0, 2038, 0,
	0, 0, 1388, 0, 0, 0, 0, 824, 0, 0,
	0, 0, 832, 0, 0, 0, 0, 0, 0, 0,
	0, 296, 296, 296, 296, 0, 0, 841, 2040, 0,
	0, 296, 0, 0, 0, 0, 296, 0, 826, 124,
	0, 0, 0, 124, 0, 0, 0, 0, 0, 0,
	0, 2509, 0, 0, 0, 0, 0, 0, 2014, 0,
	0, 0, 0, 0, 0, 0, 0, 296, 0, 2532,
	0, 0, 0, 0, 0, 296, 0, 0, 0, 0,
	0, 0, 0, 0, 2009, 2544, 0, 2544, 0, 0,
	0, 0, 0, 2551, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2025, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1999, 2000,
	2006, 2028, 2005, 2001, 0, 1998, 1996, 1997, 1989, 1990,
	1991, 1992, 1994, 1995, 0, 0, 0, 0, 0, 4543,
	0, 0, 2579, 4542, 0, 0, 0, 0, 0, 0,
	2040, 0, 0, 0, 0, 0, 0, 0, 1388, 0,
	0, 0, 0, 0, 2600, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2616, 0,
	2618, 0, 2620, 0, 2622, 0, 2623, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2228, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1273, 0, 0,
	0, 0, 0, 84, 0, 0, 0, 0, 0, 0,
	0, 2652, 2653, 2654, 0, 0, 0, 0, 0, 0,
	0, 0, 85, 0, 2005, 2001, 0, 1998, 1996, 1997,
	1989, 1990, 1991, 1992, 1994, 1995, 0, 0, 1388, 0,
	90, 0, 0, 0, 0, 0, 0, 0, 0, 298,
	298, 298, 0, 0, 1388, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 99, 298, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 298, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1011, 0, 0, 0, 1384, 0,
	124, 0, 0, 0, 0, 0, 0, 55, 0, 122,
	0, 0, 0, 0, 0, 106, 119, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1388, 0,
	0, 0, 0, 0, 1384, 0, 0, 0, 0, 0,
	1388, 0, 1388, 0, 0, 0, 0, 0, 1388, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1388,
	1388, 0, 0, 0, 2157, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 296, 0, 0, 0,
	0, 107, 0, 0, 0, 0, 940, 0, 1985, 1986,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2016, 0, 0, 0, 0, 0, 0, 0,
	1988, 0, 0, 0, 296, 0, 0, 3061, 296, 296,
	0, 2999, 0, 0, 0, 0, 0, 0, 1985, 1986,
	0, 2018, 2019, 2020, 2029, 2030, 2031, 0, 0, 2041,
	0, 0, 0, 0, 0, 0, 0, 0, 1987, 0,
	0, 2022, 2016, 0, 296, 0, 2997, 0, 0, 2007,
	1988, 3001, 0, 0, 0, 0, 0, 0, 2004, 0,
	0, 2035, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3002, 0, 0, 0, 0, 0, 2041,
	0, 0, 0, 0, 0, 0, 296, 296, 1987, 0,
	296, 0, 0, 0, 0, 0, 0, 2157, 0, 2007,
	0, 0, 0, 3119, 0, 0, 1442, 0, 2004, 0,
	1442, 296, 1442, 0, 3003, 0, 3533, 0, 0, 0,
	111, 0, 0, 0, 0, 0, 0, 0, 0, 2532,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2010,
	2011, 2012, 2013, 3004, 0, 0, 0, 0, 0, 1993,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 205,
	0, 114, 3005, 0, 118, 0, 0, 0, 0, 2010,
	2011, 2012, 2013, 0, 0, 0, 0, 0, 0, 1993,
	0, 0, 0, 2015, 2017, 0, 0, 0, 0, 296,
	0, 0, 0, 0, 259, 0, 0, 0, 0, 0,
	0, 0, 1012, 0, 0, 0, 0, 940, 166, 0,
	0, 0, 2002, 2003, 0, 0, 0, 296, 0, 0,
	0, 0, 2026, 0, 3006, 0, 2036, 0, 0, 0,
	0, 0, 0, 2015, 2017, 0, 1985, 1986, 0, 0,
	0, 296, 3007, 0, 0, 1655, 2008, 0, 261, 0,
	0, 1384, 3008, 2032, 0, 2033, 0, 0, 0, 0,
	2016, 0, 2002, 2003, 0, 0, 0, 0, 1988, 0,
	0, 0, 0, 0, 0, 0, 171, 3009, 0, 0,
	0, 2024, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 211, 0, 0, 0, 2008, 2041, 0, 0,
	260, 0, 0, 0, 0, 0, 1987, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 253, 2007, 0, 0,
	0, 0, 0, 0, 0, 254, 2004, 2038, 3359, 206,
	0, 1388, 1388, 0, 210, 0, 0, 0, 0, 2532,
	0, 0, 0, 0, 296, 2034, 296, 0, 0, 0,
	0, 0, 0, 0, 0, 1799, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2023, 1388, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2038, 3010, 0,
	0, 0, 0, 0, 296, 1388, 0, 2014, 0, 0,
	0, 0, 0, 0, 3431, 0, 0, 1388, 0, 0,
	1388, 0, 0, 0, 0, 0, 0, 2010, 2011, 2012,
	2013, 0, 0, 2009, 3443, 0, 3446, 1993, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2228, 0, 0,
	0, 1388, 0, 0, 0, 0, 0, 2014, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3011, 3012, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2009, 0, 0, 0, 0, 0, 0,
	0, 2015, 2017, 0, 0, 0, 0, 3013, 0, 2040,
	0, 0, 3485, 1655, 3487, 1655, 0, 3018, 0, 0,
	0, 0, 3494, 2027, 0, 0, 0, 0, 0, 0,
	2002, 2003, 0, 0, 0, 0, 0, 0, 3014, 2228,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3015, 0, 0, 0, 0, 1442, 2040,
	0, 0, 0, 0, 2008, 0, 3523, 0, 0, 0,
	1384, 1384, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 298, 3016, 298, 298, 0, 0,
	298, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2005, 2001, 0, 1998, 1996, 1997, 1989,
	1990, 1991, 1992, 1994, 1995, 0, 0, 0, 0, 0,
	0, 0, 0, 1388, 0, 3017, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2025, 0, 0,
	0, 0, 940, 0, 0, 2038, 0, 0, 0, 1999,
	2000, 2006, 2028, 2005, 2001, 0, 1998, 1996, 1997, 1989,
	1990, 1991, 1992, 1994, 1995, 298, 1554, 298, 298, 0,
	0, 298, 298, 0, 0, 0, 0, 1554, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 298, 0, 0, 1388, 0, 1388,
	0, 0, 0, 1388, 0, 2014, 0, 0, 302, 0,
	0, 1388, 1388, 0, 0, 0, 0, 0, 1554, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2009, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 298, 298, 0, 0, 0,
	0, 0, 0, 0, 1388, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1554, 0, 0, 0, 0, 0,
	0, 1554, 298, 298, 1388, 0, 0, 0, 296, 0,
	0, 0, 0, 0, 0, 0, 1388, 1554, 1388, 0,
	0, 0, 0, 0, 932, 0, 0, 2040, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 296, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 932, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1388, 0, 1554, 1388, 0,
	0, 0, 0, 0, 0, 0, 296, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 296, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1265, 0, 296, 0,
	0, 298, 296, 0, 296, 0, 0, 0, 0, 296,
	0, 2005, 2001, 0, 1998, 1996, 1997, 1989, 1990, 1991,
	1992, 1994, 1995, 0, 0, 0, 0, 298, 2228, 1384,
	0, 0, 0, 0, 0, 0, 0, 3725, 0, 84,
	825, 0, 0, 0, 0, 0, 0, 1388, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 85, 0,
	0, 808, 0, 0, 1388, 0, 809, 0, 0, 0,
	0, 0, 296, 0, 2228, 2228, 90, 0, 0, 0,
	0, 0, 0, 0, 0, 1442, 0, 0, 0, 1655,
	1655, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2228, 2228, 0, 0, 0, 0, 810,
	0, 0, 0, 0, 0, 0, 0, 0, 99, 0,
	811, 0, 0, 0, 0, 3780, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2228, 0, 0, 0,
	0, 0, 812, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1011, 0, 0, 1388, 1388, 831, 0, 3836, 3838, 0,
	0, 2532, 0, 0, 0, 122, 0, 0, 0, 0,
	0, 106, 119, 0, 0, 0, 0, 813, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1388,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 814, 807, 0, 0, 1384, 0, 0, 0,
	0, 0, 0, 0, 1384, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 815, 0, 2157, 0,
	0, 816, 0, 0, 0, 1985, 1986, 107, 0, 0,
	0, 2029, 2030, 2031, 0, 0, 298, 0, 840, 0,
	0, 0, 0, 0, 0, 0, 0, 1554, 0, 2016,
	0, 0, 298, 298, 298, 0, 0, 1988, 0, 0,
	296, 0, 298, 0, 0, 0, 830, 0, 2035, 0,
	0, 298, 0, 0, 0, 0, 0, 1554, 0, 0,
	0, 0, 0, 0, 0, 0, 2041, 0, 2157, 0,
	2157, 0, 0, 0, 0, 1987, 0, 0, 3976, 0,
	0, 298, 0, 0, 0, 0, 2007, 0, 298, 0,
	0, 0, 296, 0, 0, 2004, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 296, 827,
	0, 296, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 296, 0,
	0, 0, 0, 0, 0, 0, 1388, 1388, 0, 1388,
	0, 0, 0, 0, 0, 1554, 0, 0, 1388, 0,
	0, 0, 0, 0, 0, 0, 111, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2010, 2011, 2012, 2013,
	0, 0, 0, 0, 0, 0, 1993, 0, 818, 2228,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2228, 0, 4079, 0, 1655, 0, 0,
	0, 296, 0, 0, 0, 0, 0, 0, 0, 838,
	0, 819, 296, 0, 0, 205, 0, 114, 0, 2026,
	118, 0, 0, 2036, 0, 0, 0, 0, 0, 0,
	2015, 2017, 0, 0, 0, 4093, 0, 0, 1388, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	259, 0, 1388, 0, 0, 0, 0, 839, 1012, 2002,
	2003, 1388, 0, 0, 166, 820, 1388, 1388, 1388, 0,
	835, 836, 0, 833, 0, 0, 0, 0, 2024, 0,
	828, 0, 0, 821, 0, 0, 0, 0, 0, 1388,
	0, 1388, 0, 2008, 0, 0, 1388, 0, 1388, 0,
	0, 0, 0, 0, 261, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 298, 0, 1554, 1554, 298, 0,
	0, 0, 0, 0, 0, 0, 0, 1554, 0, 1388,
	0, 822, 171, 829, 0, 0, 0, 0, 0, 0,
	2228, 0, 823, 0, 0, 0, 0, 0, 211, 0,
	0, 0, 0, 1554, 0, 0, 260, 298, 824, 0,
	0, 0, 0, 832, 0, 0, 0, 0, 0, 0,
	0, 0, 253, 0, 2038, 0, 298, 0, 841, 0,
	0, 254, 1554, 0, 0, 206, 0, 298, 0, 826,
	210, 0, 0, 0, 298, 0, 0, 0, 296, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	298, 209, 298, 0, 0, 0, 0, 0, 298, 0,
	0, 0, 0, 0, 0, 0, 0, 1554, 0, 1554,
	0, 1554, 0, 0, 2014, 0, 0, 0, 0, 1388,
	0, 0, 0, 0, 0, 0, 0, 1388, 0, 1554,
	1554, 1388, 1388, 0, 1388, 0, 0, 0, 0, 0,
	2009, 1388, 0, 1554, 0, 0, 0, 298, 0, 0,
	0, 296, 1388, 1388, 0, 1554, 0, 0, 1554, 1554,
	1554, 0, 0, 0, 0, 0, 0, 1551, 0, 298,
	2027, 0, 0, 1388, 0, 0, 0, 0, 1673, 0,
	0, 0, 298, 298, 0, 298, 0, 298, 2157, 298,
	0, 298, 0, 0, 0, 0, 0, 0, 0, 296,
	0, 0, 0, 0, 0, 0, 2040, 0, 0, 0,
	0, 1388, 0, 1388, 0, 0, 0, 0, 0, 1673,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 298, 298, 298, 298,
	298, 0, 0, 0, 0, 0, 0, 0, 1388, 0,
	0, 0, 0, 296, 296, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1673, 0, 0, 0, 0,
	0, 1388, 1673, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2025, 0, 0, 0, 1673, 0,
	0, 0, 0, 0, 0, 1554, 0, 0, 0, 2028,
	2005, 2001, 0, 1998, 1996, 1997, 1989, 1990, 1991, 1992,
	1994, 1995, 2532, 1388, 1388, 0, 0, 0, 0, 0,
	2228, 0, 2228, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1552, 0, 2157, 0, 0,
	0, 0, 0, 0, 0, 0, 1674, 0, 1673, 0,
	0, 0, 2157, 0, 0, 0, 0, 4417, 0, 0,
	0, 0, 0, 0, 1388, 0, 0, 4427, 0, 1388,
	0, 0, 0, 0, 0, 0, 0, 0, 296, 0,
	0, 0, 0, 2532, 0, 2532, 0, 1674, 1554, 0,
	4448, 0, 0, 0, 1388, 1388, 1388, 1388, 1388, 1388,
	1388, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2157, 2157, 0, 0, 0, 1388, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1674, 2157, 0, 296, 2157, 0, 0,
	1674, 0, 0, 0, 0, 0, 0, 0, 1388, 0,
	0, 0, 0, 4493, 0, 0, 1674, 0, 0, 1554,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2228,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 298, 0, 0, 1554, 0, 0, 0, 0,
	0, 1388, 0, 1388, 0, 0, 0, 0, 0, 0,
	0, 0, 298, 0, 0, 0, 0, 0, 0, 298,
	0, 298, 0, 0, 0, 0, 1674, 0, 0, 0,
	0, 0, 0, 0, 296, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1388, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 298,
	0, 0, 298, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2228, 0, 298, 0,
	0, 298, 0, 0, 296, 298, 0, 298, 0, 0,
	0, 0, 0, 0, 298, 298, 0, 0, 0, 0,
	0, 0, 0, 0, 298, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1388, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1388, 0, 0, 1388, 1388, 0, 0,
	0, 1554, 0, 0, 0, 0, 0, 0, 1551, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1388, 0, 2198, 1985, 1986, 0, 0, 0, 0,
	0, 0, 2198, 298, 0, 0, 0, 0, 1673, 0,
	0, 0, 0, 0, 0, 0, 0, 298, 2016, 1388,
	0, 0, 1388, 0, 0, 0, 1988, 0, 0, 0,
	0, 298, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4668, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2041, 0, 0, 0, 2532,
	0, 0, 0, 0, 1987, 0, 0, 0, 0, 0,
	298, 1554, 0, 0, 0, 2007, 2228, 0, 0, 0,
	0, 0, 0, 0, 2004, 0, 0, 1554, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1551, 0, 0, 0,
	962, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	298, 0, 0, 2157, 0, 2157, 0, 0, 0, 0,
	0, 965, 0, 0, 0, 0, 966, 0, 0, 0,
	1388, 0, 3526, 0, 0, 0, 1552, 0, 0, 0,
	0, 0, 0, 298, 0, 1388, 0, 0, 0, 0,
	0, 0, 2532, 0, 298, 2010, 2011, 2012, 2013, 0,
	0, 0, 0, 4773, 0, 1993, 1674, 0, 0, 967,
	0, 981, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1554, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1554, 2228, 1554, 0, 968, 0, 0,
	0, 1554, 969, 0, 0, 0, 1388, 1388, 0, 298,
	0, 0, 1554, 1554, 0, 0, 0, 0, 0, 2015,
	2017, 0, 0, 0, 0, 990, 0, 1388, 0, 298,
	1388, 298, 970, 0, 1388, 0, 0, 0, 0, 0,
	0, 0, 298, 0, 1388, 0, 0, 988, 2002, 2003,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1552, 0, 0, 1673, 1673, 0,
	0, 0, 963, 961, 0, 0, 0, 0, 1551, 0,
	0, 0, 2008, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 971, 298, 298, 298,
	298, 0, 0, 0, 1673, 0, 0, 298, 0, 0,
	0, 0, 298, 992, 0, 0, 0, 0, 840, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1388, 0, 1673, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 298, 0, 0, 0, 0, 0, 4884,
	0, 298, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2038, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1673, 0,
	1673, 0, 1673, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 991,
	1673, 1673, 0, 0, 0, 0, 0, 0, 0, 986,
	0, 0, 0, 0, 1673, 0, 0, 0, 0, 0,
	0, 0, 2532, 2014, 0, 0, 1673, 0, 0, 1673,
	1673, 1673, 0, 0, 0, 1674, 1674, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1552, 0, 0, 2009,
	0, 0, 0, 2198, 0, 0, 0, 0, 1388, 0,
	0, 1985, 1986, 0, 2018, 2019, 2020, 2029, 2030, 2031,
	2544, 0, 1674, 0, 0, 0, 0, 985, 0, 0,
	0, 0, 0, 0, 2022, 2016, 0, 0, 972, 0,
	0, 0, 0, 1988, 0, 0, 0, 0, 0, 0,
	0, 1674, 0, 0, 2035, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2040, 0, 0, 0, 0,
	0, 973, 2041, 0, 5019, 1655, 0, 0, 0, 0,
	0, 1987, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2007, 0, 0, 0, 1674, 0, 1674, 0,
	1674, 2004, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1551, 839, 1674, 1674,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	960, 0, 1674, 982, 0, 0, 1388, 0, 1388, 0,
	0, 0, 0, 974, 1674, 0, 0, 1674, 1674, 1674,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2005,
	2001, 0, 1998, 1996, 1997, 1989, 1990, 1991, 1992, 1994,
	1995, 0, 980, 0, 0, 1554, 0, 0, 0, 0,
	0, 0, 2010, 2011, 2012, 2013, 0, 0, 0, 0,
	0, 975, 1993, 0, 0, 976, 995, 0, 994, 0,
	0, 0, 977, 0, 0, 0, 0, 0, 0, 1551,
	0, 0, 0, 0, 0, 0, 0, 0, 978, 0,
	0, 0, 0, 987, 0, 0, 0, 0, 1554, 996,
	0, 993, 0, 0, 0, 2026, 0, 0, 841, 2036,
	0, 0, 0, 1554, 0, 0, 2015, 2017, 0, 0,
	0, 0, 298, 0, 0, 0, 0, 5140, 0, 0,
	0, 0, 298, 0, 0, 0, 2032, 0, 2033, 0,
	0, 0, 0, 0, 1554, 2002, 2003, 0, 0, 0,
	1551, 0, 0, 0, 1552, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2024, 0, 0, 0, 0, 0,
	298, 0, 0, 0, 298, 298, 1551, 0, 0, 2008,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	298, 0, 0, 0, 0, 5196, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2034, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1552, 0, 2023,
	0, 0, 298, 298, 0, 0, 298, 0, 0, 0,
	2038, 0, 0, 298, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 5260, 0, 298, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1554, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1552, 0,
	2014, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1551, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1552, 0, 2009, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 298, 2027, 0, 0, 0,
	1554, 0, 1554, 0, 0, 0, 1554, 0, 0, 0,
	0, 0, 0, 298, 1554, 1554, 0, 0, 1554, 0,
	0, 0, 0, 298, 0, 0, 0, 0, 0, 0,
	0, 0, 2040, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 298, 0, 0,
	0, 0, 1551, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1673, 0,
	0, 0, 0, 0, 0, 0, 0, 1554, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1554,
	0, 1554, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2025, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1552, 0, 1999, 2000, 2006, 2028, 2005, 2001, 0, 1998,
	1996, 1997, 1989, 1990, 1991, 1992, 1994, 1995, 0, 0,
	0, 0, 0, 3593, 0, 0, 0, 3594, 1554, 0,
	298, 1554, 298, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1673, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1673, 0, 1673, 0, 0, 0,
	298, 0, 1673, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1673, 1673, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1552, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1554, 0, 0, 0, 0, 0, 1674, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1554, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1985, 1986,
	0, 2018, 2019, 2020, 2029, 2030, 2031, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2022, 2016, 0, 0, 0, 0, 0, 0, 0,
	1988, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2035, 0, 0, 0, 0, 0, 0, 0, 0,
	1674, 0, 0, 0, 0, 0, 0, 0, 0, 2041,
	0, 0, 1674, 0, 1674, 0, 0, 0, 1987, 0,
	1674, 0, 0, 0, 0, 0, 0, 0, 0, 2007,
	0, 1674, 1674, 0, 0, 0, 0, 0, 2004, 0,
	0, 0, 1554, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 298, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2010,
	2011, 2012, 2013, 0, 0, 0, 0, 0, 0, 1993,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2026, 0, 0, 0, 2036, 0, 0, 0,
	0, 0, 0, 2015, 2017, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2032, 0, 2033, 0, 0, 0, 0,
	0, 0, 2002, 2003, 298, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1554,
	1554, 2024, 1554, 0, 0, 0, 0, 0, 0, 0,
	0, 1554, 0, 0, 0, 0, 2008, 298, 0, 0,
	0, 0, 0, 0, 0, 0, 1985, 1986, 0, 2018,
	2019, 2020, 2029, 2030, 2031, 0, 0, 0, 0, 0,
	0, 1554, 0, 0, 0, 0, 1551, 0, 0, 2022,
	2016, 0, 0, 0, 0, 0, 0, 0, 1988, 0,
	0, 0, 298, 0, 0, 2034, 0, 0, 0, 2035,
	0, 0, 298, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 298, 0, 2023, 2041, 298, 0,
	298, 0, 0, 0, 0, 298, 1987, 2038, 0, 1551,
	0, 1554, 0, 0, 0, 0, 0, 2007, 0, 0,
	0, 0, 0, 0, 1551, 0, 2004, 0, 0, 0,
	0, 0, 0, 0, 1554, 0, 0, 0, 0, 1554,
	1554, 1554, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1551, 0, 0, 0, 0,
	0, 0, 1554, 0, 1554, 0, 0, 2014, 298, 1554,
	0, 1554, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2009, 0, 0, 0, 0, 0, 0,
	0, 0, 1554, 0, 0, 0, 0, 2010, 2011, 2012,
	2013, 0, 0, 0, 0, 0, 0, 1993, 0, 0,
	0, 0, 0, 2027, 1552, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2040,
	2026, 0, 0, 0, 2036, 0, 0, 0, 0, 0,
	0, 2015, 2017, 0, 0, 0, 0, 1552, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2032, 1552, 2033, 0, 0, 0, 0, 0, 0,
	2002, 2003, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1551, 0, 2024,
	0, 0, 0, 1552, 1554, 1554, 0, 1554, 0, 0,
	0, 0, 0, 0, 2008, 0, 0, 2025, 0, 0,
	0, 0, 0, 0, 0, 1554, 1554, 0, 0, 1999,
	2000, 2006, 2028, 2005, 2001, 0, 1998, 1996, 1997, 1989,
	1990, 1991, 1992, 1994, 1995, 0, 1554, 0, 0, 0,
	2849, 0, 0, 0, 2850, 0, 298, 0, 0, 0,
	0, 0, 0, 2034, 0, 0, 0, 0, 0, 0,
	0, 1673, 0, 1673, 0, 0, 0, 1551, 0, 0,
	0, 0, 0, 0, 932, 1673, 1673, 0, 0, 0,
	0, 0, 0, 0, 0, 2038, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 298, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1554, 0, 0, 298, 0, 0, 298, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1554, 0, 0, 0, 1673, 0,
	0, 0, 0, 0, 298, 2014, 0, 0, 0, 0,
	1673, 0, 1673, 0, 0, 1552, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2009, 0, 0, 0, 0, 1554, 1554, 0, 0,
	1554, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2027, 0, 0, 0, 0, 0, 0, 0, 1551,
	0, 0, 1551, 0, 0, 0, 0, 298, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1554, 298, 1674,
	0, 1674, 1554, 0, 0, 1552, 0, 2040, 0, 0,
	0, 0, 0, 1674, 1674, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1554, 1554, 1554,
	1554, 1554, 1554, 1554, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1554, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1551, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1674, 0, 1551, 0,
	0, 1554, 0, 0, 0, 2025, 0, 0, 1674, 0,
	1674, 0, 0, 0, 0, 0, 0, 1999, 2000, 2006,
	2028, 2005, 2001, 0, 1998, 1996, 1997, 1989, 1990, 1991,
	1992, 1994, 1995, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1554, 0, 1554, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1552, 0, 0,
	1552, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1554, 0, 0, 0, 0, 0,
	0, 0, 1985, 1986, 298, 2018, 2019, 2020, 2029, 2030,
	2031, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2022, 2016, 0, 0, 0,
	0, 0, 0, 1551, 1988, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2035, 0, 0, 0, 1552,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2041, 0, 0, 1552, 0, 1554, 2198,
	0, 0, 1987, 0, 0, 0, 0, 298, 0, 0,
	0, 0, 0, 2007, 0, 0, 1554, 0, 0, 1554,
	1554, 0, 2004, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 298, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1554, 0, 0, 1554, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2010, 2011, 2012, 2013, 0, 0, 298,
	298, 0, 0, 1993, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1552, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1673, 1673, 0, 1673, 0, 0, 2026, 0, 0, 0,
	2036, 0, 1673, 0, 0, 0, 0, 2015, 2017, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2032, 0, 2033,
	0, 0, 0, 0, 0, 0, 2002, 2003, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2024, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2008, 0, 0, 0, 298, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1673, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1673, 0, 0, 0, 2034,
	1673, 1673, 1673, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 298, 0, 0, 0, 0, 1554, 0, 0,
	2023, 0, 0, 1673, 0, 1673, 0, 1554, 0, 0,
	1673, 2038, 1551, 0, 0, 0, 0, 0, 1674, 1674,
	0, 1674, 0, 0, 0, 0, 0, 0, 0, 0,
	1674, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1551, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2014, 0, 0, 0, 0, 0, 0, 0, 0,
	298, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1554, 0, 0, 2009, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1674, 0, 0, 0, 0, 0, 0, 2027, 0, 1985,
	1986, 0, 2018, 2019, 2020, 2029, 2030, 2031, 0, 0,
	298, 0, 0, 1674, 0, 0, 0, 0, 1674, 1674,
	1674, 0, 2022, 2016, 0, 0, 0, 0, 0, 0,
	0, 1988, 0, 2040, 0, 1551, 1551, 0, 1551, 0,
	0, 1674, 2035, 1674, 0, 0, 0, 0, 1674, 0,
	1552, 0, 0, 0, 0, 0, 1673, 1673, 0, 0,
	2041, 0, 0, 0, 0, 0, 0, 0, 0, 1987,
	0, 0, 0, 0, 0, 0, 0, 1551, 0, 0,
	2007, 1552, 0, 0, 0, 0, 0, 0, 0, 2004,
	0, 1554, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2025, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1999, 2000, 2006, 2028, 2005, 2001, 0,
	1998, 1996, 1997, 1989, 1990, 1991, 1992, 1994, 1995, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4111, 0,
	0, 0, 1551, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2010, 2011, 2012, 2013, 0, 1551, 0, 0, 0, 0,
	1993, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1552, 1552, 0, 1552, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1673, 1673, 0,
	0, 0, 0, 2026, 1674, 1674, 0, 2036, 0, 0,
	0, 0, 0, 0, 2015, 2017, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1552, 0, 0, 0, 0,
	0, 0, 0, 0, 2032, 0, 2033, 0, 0, 0,
	0, 0, 0, 2002, 2003, 0, 0, 0, 1551, 0,
	0, 0, 0, 1673, 0, 0, 0, 0, 0, 0,
	0, 0, 2024, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2008, 1673, 1673,
	1673, 1673, 1673, 1673, 1673, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1552, 0, 1551, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1552, 0, 0, 2034, 0, 0, 0,
	0, 0, 1551, 0, 0, 0, 0, 0, 0, 0,
	0, 175, 0, 0, 0, 0, 0, 2023, 0, 0,
	84, 0, 52, 51, 0, 0, 0, 0, 2038, 0,
	0, 0, 0, 0, 0, 1674, 1674, 0, 0, 85,
	0, 0, 0, 0, 0, 1551, 0, 1673, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 90, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 73, 0,
	0, 0, 0, 0, 0, 54, 0, 173, 0, 0,
	0, 0, 0, 0, 0, 0, 1552, 0, 2014, 0,
	0, 1674, 0, 0, 0, 1551, 53, 0, 0, 99,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2009, 0, 1674, 1674, 1674, 1674,
	1674, 1674, 1674, 0, 0, 0, 0, 56, 74, 0,
	0, 0, 0, 0, 0, 0, 57, 0, 0, 0,
	1552, 63, 0, 0, 2027, 0, 5472, 0, 0, 0,
	0, 0, 0, 0, 55, 0, 122, 0, 0, 0,
	0, 0, 106, 119, 0, 0, 0, 0, 0, 1551,
	1552, 75, 0, 0, 0, 0, 0, 0, 0, 0,
	2040, 0, 0, 0, 0, 0, 0, 1673, 0, 0,
	1673, 1673, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 58, 0, 0,
	0, 0, 0, 1552, 0, 1674, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 107, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1551, 0, 0, 1673, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2025, 0,
	0, 0, 0, 1552, 0, 0, 0, 0, 0, 0,
	1999, 2000, 2006, 2028, 2005, 2001, 0, 1998, 1996, 1997,
	1989, 1990, 1991, 1992, 1994, 1995, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3596, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 76,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1552, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1674, 0, 0, 1674, 1674,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 111, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 59, 0, 0, 0, 0,
	0, 1552, 0, 0, 1674, 0, 0, 0, 0, 0,
	0, 0, 62, 0, 0, 0, 0, 65, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 77, 0, 0,
	0, 0, 0, 0, 0, 64, 205, 0, 114, 0,
	0, 118, 0, 5324, 0, 0, 0, 60, 0, 0,
	0, 174, 0, 0, 0, 0, 0, 0, 1673, 61,
	0, 0, 0, 0, 0, 0, 0, 0, 1673, 0,
	0, 259, 0, 0, 0, 0, 0, 0, 0, 68,
	0, 0, 0, 0, 0, 166, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 172, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 261, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 171, 0, 1673, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 211,
	0, 0, 0, 0, 0, 0, 0, 260, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 253, 0, 0, 0, 0, 0, 0,
	0, 0, 254, 0, 0, 0, 206, 0, 0, 0,
	0, 210, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1674, 0, 0, 0,
	0, 0, 209, 0, 0, 0, 1674, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1549, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1673, 0, 0, 0, 0, 0, 306, 307,
	309, 308, 310, 311, 312, 313, 1555, 314, 315, 1556,
	1557, 1558, 0, 1559, 715, 1560, 1561, 1562, 316, 1563,
	317, 318, 319, 1327, 320, 321, 322, 323, 324, 325,
	326, 716, 717, 1674, 327, 718, 328, 719, 1564, 720,
	329, 330, 331, 332, 333, 334, 335, 1565, 1566, 0,
	336, 721, 722, 723, 1567, 337, 338, 724, 1568, 1635,
	1569, 339, 340, 341, 342, 343, 344, 345, 346, 0,
	1570, 348, 349, 350, 347, 351, 1571, 352, 0, 353,
	354, 355, 356, 357, 358, 359, 1572, 360, 361, 362,
	1328, 363, 364, 365, 1573, 1574, 1576, 1575, 1577, 1578,
	1579, 366, 367, 368, 369, 370, 0, 371, 373, 725,
	726, 1580, 376, 378, 372, 374, 1581, 377, 375, 379,
	1582, 380, 381, 382, 1583, 1584, 383, 384, 385, 1585,
	386, 387, 388, 1586, 389, 390, 391, 1587, 392, 393,
	727, 394, 395, 396, 398, 400, 397, 399, 401, 402,
	403, 404, 405, 728, 729, 406, 1588, 303, 1589, 0,
	1674, 0, 0, 407, 408, 409, 730, 0, 0, 0,
	410, 1590, 411, 412, 413, 1591, 414, 415, 1592, 1329,
	416, 417, 418, 731, 732, 419, 420, 421, 422, 423,
	424, 425, 426, 427, 1593, 428, 733, 1594, 734, 429,
	1595, 430, 431, 432, 433, 434, 435, 436, 735, 736,
	737, 529, 1331, 437, 438, 439, 1596, 440, 441, 442,
	443, 444, 0, 0, 0, 304, 445, 446, 447, 1597,
	1330, 738, 448, 530, 449, 739, 740, 1598, 741, 1599,
	450, 451, 453, 1332, 742, 1333, 452, 454, 455, 1334,
	456, 0, 0, 0, 457, 458, 459, 460, 461, 462,
	1600, 463, 465, 464, 1601, 467, 743, 466, 1335, 468,
	469, 1336, 1602, 470, 471, 472, 473, 474, 475, 478,
	1603, 1604, 476, 477, 479, 480, 0, 481, 482, 484,
	487, 483, 485, 486, 488, 501, 502, 489, 490, 491,
	492, 493, 494, 495, 496, 497, 498, 499, 500, 504,
	0, 503, 1337, 505, 506, 507, 508, 509, 516, 518,
	519, 514, 515, 517, 520, 521, 523, 511, 512, 513,
	1338, 522, 510, 1605, 305, 1339, 524, 525, 526, 527,
	1606, 744, 528, 745, 531, 532, 1607, 0, 533, 0,
	534, 1608, 1609, 536, 537, 538, 1610, 1611, 539, 540,
	746, 1340, 541, 1341, 747, 542, 543, 535, 544, 545,
	546, 547, 548, 549, 550, 551, 552, 553, 1612, 554,
	555, 748, 556, 557, 558, 749, 559, 560, 561, 750,
	562, 751, 563, 564, 1613, 565, 566, 567, 0, 568,
	569, 570, 571, 572, 573, 574, 575, 752, 576, 577,
	579, 578, 580, 1614, 581, 0, 582, 583, 584, 0,
	0, 0, 0, 0, 585, 586, 588, 0, 589, 590,
	591, 592, 587, 593, 594, 595, 596, 597, 598, 1615,
	600, 601, 599, 602, 603, 1342, 604, 605, 606, 607,
	608, 753, 609, 0, 610, 611, 618, 619, 620, 612,
	613, 614, 621, 622, 623, 624, 625, 626, 1616, 628,
	629, 627, 630, 631, 632, 1617, 633, 754, 634, 615,
	616, 635, 636, 1343, 637, 638, 639, 640, 641, 642,
	643, 755, 0, 644, 1618, 645, 646, 647, 648, 649,
	650, 652, 617, 653, 658, 659, 756, 654, 655, 656,
	657, 757, 661, 662, 663, 664, 1619, 665, 666, 0,
	660, 651, 1620, 667, 668, 669, 670, 671, 672, 0,
	673, 674, 1621, 675, 758, 759, 760, 761, 1622, 687,
	1623, 676, 678, 679, 680, 681, 762, 682, 763, 1624,
	683, 684, 685, 686, 677, 688, 689, 1625, 1626, 690,
	691, 693, 695, 696, 692, 694, 697, 1627, 698, 1628,
	0, 699, 700, 701, 764, 765, 766, 1629, 703, 702,
	704, 705, 706, 767, 707, 708, 709, 1630, 1631, 1632,
	1633, 710, 711, 768, 712, 713, 714, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1549, 0, 0, 0, 0, 0, 0, 3039, 0, 0,
	0, 0, 0, 0, 0, 0, 3040, 306, 307, 309,
	308, 310, 311, 312, 313, 1555, 314, 315, 1556, 1557,
	1558, 0, 1559, 715, 1560, 1561, 1562, 316, 1563, 317,
	318, 319, 1327, 320, 321, 322, 323, 324, 325, 326,
	716, 717, 0, 327, 718, 328, 719, 1564, 720, 329,
	330, 331, 332, 333, 334, 335, 1565, 1566, 0, 336,
	721, 722, 723, 1567, 337, 338, 724, 1568, 1635, 1569,
	339, 340, 341, 342, 343, 344, 345, 346, 0, 1570,
	348, 349, 350, 347, 351, 1571, 352, 0, 353, 354,
	355, 356, 357, 358, 359, 1572, 360, 361, 362, 1328,
	363, 364, 365, 1573, 1574, 1576, 1575, 1577, 1578, 1579,
	366, 367, 368, 369, 370, 0, 371, 373, 725, 726,
	1580, 376, 378, 372, 374, 1581, 377, 375, 379, 1582,
	380, 381, 382, 1583, 1584, 383, 384, 385, 1585, 386,
	387, 388, 1586, 389, 390, 391, 1587, 392, 393, 727,
	394, 395, 396, 398, 400, 397, 399, 401, 402, 403,
	404, 405, 728, 729, 406, 1588, 303, 1589, 0, 0,
	0, 0, 407, 408, 409, 730, 0, 0, 0, 410,
	1590, 411, 412, 413, 1591, 414, 415, 1592, 1329, 416,
	417, 418, 731, 732, 419, 420, 421, 422, 423, 424,
	425, 426, 427, 1593, 428, 733, 1594, 734, 429, 1595,
	430, 431, 432, 433, 434, 435, 436, 735, 736, 737,
	529, 1331, 437, 438, 439, 1596, 440, 441, 442, 443,
	444, 0, 0, 0, 304, 445, 446, 447, 1597, 1330,
	738, 448, 530, 449, 739, 740, 1598, 741, 1599, 450,
	451, 453, 1332, 742, 1333, 452, 454, 455, 1334, 456,
	0, 0, 0, 457, 458, 459, 460, 461, 462, 1600,
	463, 465, 464, 1601, 467, 743, 466, 1335, 468, 469,
	1336, 1602, 470, 471, 472, 473, 474, 475, 478, 1603,
	1604, 476, 477, 479, 480, 0, 481, 482, 484, 487,
	483, 485, 486, 488, 501, 502, 489, 490, 491, 492,
	493, 494, 495, 496, 497, 498, 499, 500, 504, 0,
	503, 1337, 505, 506, 507, 508, 509, 516, 518, 519,
	514, 515, 517, 520, 521, 523, 511, 512, 513, 1338,
	522, 510, 1605, 305, 1339, 524, 525, 526, 527, 1606,
	744, 528, 745, 531, 532, 1607, 0, 533, 0, 534,
	1608, 1609, 536, 537, 538, 1610, 1611, 539, 540, 746,
	1340, 541, 1341, 747, 542, 543, 535, 544, 545, 546,
	547, 548, 549, 550, 551, 552, 553, 1612, 554, 555,
	748, 556, 557, 558, 749, 559, 560, 561, 750, 562,
	751, 563, 564, 1613, 565, 566, 567, 0, 568, 569,
	570, 571, 572, 573, 574, 575, 752, 576, 577, 579,
	578, 580, 1614, 581, 0, 582, 583, 584, 0, 0,
	0, 0, 0, 585, 586, 588, 0, 589, 590, 591,
	592, 587, 593, 594, 595, 596, 597, 598, 1615, 600,
	601, 599, 602, 603, 1342, 604, 605, 606, 607, 608,
	753, 609, 0, 610, 611, 618, 619, 620, 612, 613,
	614, 621, 622, 623, 624, 625, 626, 1616, 628, 629,
	627, 630, 631, 632, 1617, 633, 754, 634, 615, 616,
	635, 636, 1343, 637, 638, 639, 640, 641, 642, 643,
	755, 0, 644, 1618, 645, 646, 647, 648, 649, 650,
	652, 617, 653, 658, 659, 756, 654, 655, 656, 657,
	757, 661, 662, 663, 664, 1619, 665, 666, 0, 660,
	651, 1620, 667, 668, 669, 670, 671, 672, 0, 673,
	674, 1621, 675, 758, 759, 760, 761, 1622, 687, 1623,
	676, 678, 679, 680, 681, 762, 682, 763, 1624, 683,
	684, 685, 686, 677, 688, 689, 1625, 1626, 690, 691,
	693, 695, 696, 692, 694, 697, 1627, 698, 1628, 0,
	699, 700, 701, 764, 765, 766, 1629, 703, 702, 704,
	705, 706, 767, 707, 708, 709, 1630, 1631, 1632, 1633,
	710, 711, 768, 712, 713, 714, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1549, 0, 0, 0,
	4120, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4122, 306, 307, 309, 308, 310, 311, 312,
	313, 1555, 314, 315, 1556, 1557, 1558, 0, 1559, 715,
	1560, 1561, 1562, 316, 1563, 317, 318, 319, 1327, 320,
	321, 322, 323, 324, 325, 326, 716, 717, 0, 327,
	718, 328, 719, 1564, 720, 329, 330, 331, 332, 333,
	334, 335, 1565, 1566, 0, 336, 721, 722, 723, 1567,
	337, 338, 724, 1568, 1635, 1569, 339, 340, 341, 342,
	343, 344, 345, 346, 0, 1570, 348, 349, 350, 347,
	351, 1571, 352, 0, 353, 354, 355, 356, 357, 358,
	359, 1572, 360, 361, 362, 1328, 363, 364, 365, 1573,
	1574, 1576, 1575, 1577, 1578, 1579, 366, 367, 368, 369,
	370, 0, 371, 373, 725, 726, 1580, 376, 378, 372,
	374, 1581, 377, 375, 379, 1582, 380, 381, 382, 1583,
	1584, 383, 384, 385, 1585, 386, 387, 388, 1586, 389,
	390, 391, 1587, 392, 393, 727, 394, 395, 396, 398,
	400, 397, 399, 401, 402, 403, 404, 405, 728, 729,
	406, 1588, 303, 1589, 0, 0, 0, 0, 407, 408,
	409, 730, 0, 0, 0, 410, 1590, 411, 412, 413,
	1591, 414, 415, 1592, 1329, 416, 417, 418, 731, 732,
	419, 420, 421, 422, 423, 424, 425, 426, 427, 1593,
	428, 733, 1594, 734, 429, 1595, 430, 431, 432, 433,
	434, 435, 436, 735, 736, 737, 529, 1331, 437, 438,
	439, 1596, 440, 441, 442, 443, 444, 0, 0, 0,
	304, 445, 446, 447, 1597, 1330, 738, 448, 530, 449,
	739, 740, 1598, 741, 1599, 450, 451, 453, 1332, 742,
	1333, 452, 454, 455, 1334, 456, 0, 0, 0, 457,
	458, 459, 460, 461, 462, 1600, 463, 465, 464, 1601,
	467, 743, 466, 1335, 468, 469, 1336, 1602, 470, 471,
	472, 473, 474, 475, 478, 1603, 1604, 476, 477, 479,
	480, 0, 481, 482, 484, 487, 483, 485, 486, 488,
	501, 502, 489, 490, 491, 492, 493, 494, 495, 496,
	497, 498, 499, 500, 504, 0, 503, 1337, 505, 506,
	507, 508, 509, 516, 518, 519, 514, 515, 517, 520,
	521, 523, 511, 512, 513, 1338, 522, 510, 1605, 305,
	1339, 524, 525, 526, 527, 1606, 744, 528, 745, 531,
	532, 1607, 0, 533, 0, 534, 1608, 1609, 536, 537,
	538, 1610, 1611, 539, 540, 746, 1340, 541, 1341, 747,
	542, 543, 535, 544, 545, 546, 547, 548, 549, 550,
	551, 552, 553, 1612, 554, 555, 748, 556, 557, 558,
	749, 559, 560, 561, 750, 562, 751, 563, 564, 1613,
	565, 566, 567, 0, 568, 569, 570, 571, 572, 573,
	574, 575, 752, 576, 577, 579, 578, 580, 1614, 581,
	0, 582, 583, 584, 0, 0, 0, 0, 0, 585,
	586, 588, 0, 589, 590, 591, 592, 587, 593, 594,
	595, 596, 597, 598, 1615, 600, 601, 599, 602, 603,
	1342, 604, 605, 606, 607, 608, 753, 609, 0, 610,
	611, 618, 619, 620, 612, 613, 614, 621, 622, 623,
	624, 625, 626, 1616, 628, 629, 627, 630, 631, 632,
	1617, 633, 754, 634, 615, 616, 635, 636, 1343, 637,
	638, 639, 640, 641, 642, 643, 755, 0, 644, 1618,
	645, 646, 647, 648, 649, 650, 652, 617, 653, 658,
	659, 756, 654, 655, 656, 657, 757, 661, 662, 663,
	664, 1619, 665, 666, 0, 660, 651, 1620, 667, 668,
	669, 670, 671, 672, 0, 673, 674, 1621, 675, 758,
	759, 760, 761, 1622, 687, 1623, 676, 678, 679, 680,
	681, 762, 682, 763, 1624, 683, 684, 685, 686, 677,
	688, 689, 1625, 1626, 690, 691, 693, 695, 696, 692,
	694, 697, 1627, 698, 1628, 0, 699, 700, 701, 764,
	765, 766, 1629, 703, 702, 704, 705, 706, 767, 707,
	708, 709, 1630, 1631, 1632, 1633, 710, 711, 768, 712,
	713, 714, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1549, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4571, 306, 307, 309, 308, 310, 311, 312,
	313, 1555, 314, 315, 1556, 1557, 1558, 0, 1559, 715,
	1560, 1561, 1562, 316, 1563, 317, 318, 319, 1327, 320,
	321, 322, 323, 324, 325, 326, 716, 717, 0, 327,
	718, 328, 719, 1564, 720, 329, 330, 331, 332, 333,
	334, 335, 1565, 1566, 0, 336, 721, 722, 723, 1567,
	337, 338, 724, 1568, 1635, 1569, 339, 340, 341, 342,
	343, 344, 345, 346, 0, 1570, 348, 349, 350, 347,
	351, 1571, 352, 0, 353, 354, 355, 356, 357, 358,
	359, 1572, 360, 361, 362, 1328, 363, 364, 365, 1573,
	1574, 1576, 1575, 1577, 1578, 1579, 366, 367, 368, 369,
	370, 0, 371, 373, 725, 726, 1580, 376, 378, 372,
	374, 1581, 377, 375, 379, 1582, 380, 381, 382, 1583,
	1584, 383, 384, 385, 1585, 386, 387, 388, 1586, 389,
	390, 391, 1587, 392, 393, 727, 394, 395, 396, 398,
	400, 397, 399, 401, 402, 403, 404, 405, 728, 729,
	406, 1588, 303, 1589, 0, 0, 0, 0, 407, 408,
	409, 730, 0, 0, 0, 410, 1590, 411, 412, 413,
	1591, 414, 415, 1592, 1329, 416, 417, 418, 731, 732,
	419, 420, 421, 422, 423, 424, 425, 426, 427, 1593,
	428, 733, 1594, 734, 429, 1595, 430, 431, 432, 433,
	434, 435, 436, 735, 736, 737, 529, 1331, 437, 438,
	439, 1596, 440, 441, 442, 443, 444, 0, 0, 0,
	304, 445, 446, 447, 1597, 1330, 738, 448, 530, 449,
	739, 740, 1598, 741, 1599, 450, 451, 453, 1332, 742,
	1333, 452, 454, 455, 1334, 456, 0, 0, 0, 457,
	458, 459, 460, 461, 462, 1600, 463, 465, 464, 1601,
	467, 743, 466, 1335, 468, 469, 1336, 1602, 470, 471,
	472, 473, 474, 475, 478, 1603, 1604, 476, 477, 479,
	480, 0, 481, 482, 484, 487, 483, 485, 486, 488,
	501, 502, 489, 490, 491, 492, 493, 494, 495, 496,
	497, 498, 499, 500, 504, 0, 503, 1337, 505, 506,
	507, 508, 509, 516, 518, 519, 514, 515, 517, 520,
	521, 523, 511, 512, 513, 1338, 522, 510, 1605, 305,
	1339, 524, 525, 526, 527, 1606, 744, 528, 745, 531,
	532, 1607, 0, 533, 0, 534, 1608, 1609, 536, 537,
	538, 1610, 1611, 539, 540, 746, 1340, 541, 1341, 747,
	542, 543, 535, 544, 545, 546, 547, 548, 549, 550,
	551, 552, 553, 1612, 554, 555, 748, 556, 557, 558,
	749, 559, 560, 561, 750, 562, 751, 563, 564, 1613,
	565, 566, 567, 0, 568, 569, 570, 571, 572, 573,
	574, 575, 752, 576, 577, 579, 578, 580, 1614, 581,
	0, 582, 583, 584, 0, 0, 0, 0, 0, 585,
	586, 588, 0, 589, 590, 591, 592, 587, 593, 594,
	595, 596, 597, 598, 1615, 600, 601, 599, 602, 603,
	1342, 604, 605, 606, 607, 608, 753, 609, 0, 610,
	611, 618, 619, 620, 612, 613, 614, 621, 622, 623,
	624, 625, 626, 1616, 628, 629, 627, 630, 631, 632,
	1617, 633, 754, 634, 615, 616, 635, 636, 1343, 637,
	638, 639, 640, 641, 642, 643, 755, 0, 644, 1618,
	645, 646, 647, 648, 649, 650, 652, 617, 653, 658,
	659, 756, 654, 655, 656, 657, 757, 661, 662, 663,
	664, 1619, 665, 666, 0, 660, 651, 1620, 667, 668,
	669, 670, 671, 672, 0, 673, 674, 1621, 675, 758,
	759, 760, 761, 1622, 687, 1623, 676, 678, 679, 680,
	681, 762, 682, 763, 1624, 683, 684, 685, 686, 677,
	688, 689, 1625, 1626, 690, 691, 693, 695, 696, 692,
	694, 697, 1627, 698, 1628, 0, 699, 700, 701, 764,
	765, 766, 1629, 703, 702, 704, 705, 706, 767, 707,
	708, 709, 1630, 1631, 1632, 1633, 710, 711, 768, 712,
	713, 714, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1549, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4569, 306, 307, 309, 308, 310, 311, 312,
	313, 1555, 314, 315, 1556, 1557, 1558, 0, 1559, 715,
	1560, 1561, 1562, 316, 1563, 317, 318, 319, 1327, 320,
	321, 322, 323, 324, 325, 326, 716, 717, 0, 327,
	718, 328, 719, 1564, 720, 329, 330, 331, 332, 333,
	334, 335, 1565, 1566, 0, 336, 721, 722, 723, 1567,
	337, 338, 724, 1568, 1635, 1569, 339, 340, 341, 342,
	343, 344, 345, 346, 0, 1570, 348, 349, 350, 347,
	351, 1571, 352, 0, 353, 354, 355, 356, 357, 358,
	359, 1572, 360, 361, 362, 1328, 363, 364, 365, 1573,
	1574, 1576, 1575, 1577, 1578, 1579, 366, 367, 368, 369,
	370, 0, 371, 373, 725, 726, 1580, 376, 378, 372,
	374, 1581, 377, 375, 379, 1582, 380, 381, 382, 1583,
	1584, 383, 384, 385, 1585, 386, 387, 388, 1586, 389,
	390, 391, 1587, 392, 393, 727, 394, 395, 396, 398,
	400, 397, 399, 401, 402, 403, 404, 405, 728, 729,
	406, 1588, 303, 1589, 0, 0, 0, 0, 407, 408,
	409, 730, 0, 0, 0, 410, 1590, 411, 412, 413,
	1591, 414, 415, 1592, 1329, 416, 417, 418, 731, 732,
	419, 420, 421, 422, 423, 424, 425, 426, 427, 1593,
	428, 733, 1594, 734, 429, 1595, 430, 431, 432, 433,
	434, 435, 436, 735, 736, 737, 529, 1331, 437, 438,
	439, 1596, 440, 441, 442, 443, 444, 0, 0, 0,
	304, 445, 446, 447, 1597, 1330, 738, 448, 530, 449,
	739, 740, 1598, 741, 1599, 450, 451, 453, 1332, 742,
	1333, 452, 454, 455, 1334, 456, 0, 0, 0, 457,
	458, 459, 460, 461, 462, 1600, 463, 465, 464, 1601,
	467, 743, 466, 1335, 468, 469, 1336, 1602, 470, 471,
	472, 473, 474, 475, 478, 1603, 1604, 476, 477, 479,
	480, 0, 481, 482, 484, 487, 483, 485, 486, 488,
	501, 502, 489, 490, 491, 492, 493, 494, 495, 496,
	497, 498, 499, 500, 504, 0, 503, 1337, 505, 506,
	507, 508, 509, 516, 518, 519, 514, 515, 517, 520,
	521, 523, 511, 512, 513, 1338, 522, 510, 1605, 305,
	1339, 524, 525, 526, 527, 1606, 744, 528, 745, 531,
	532, 1607, 0, 533, 0, 534, 1608, 1609, 536, 537,
	538, 1610, 1611, 539, 540, 746, 1340, 541, 1341, 747,
	542, 543, 535, 544, 545, 546, 547, 548, 549, 550,
	551, 552, 553, 1612, 554, 555, 748, 556, 557, 558,
	749, 559, 560, 561, 750, 562, 751, 563, 564, 1613,
	565, 566, 567, 0, 568, 569, 570, 571, 572, 573,
	574, 575, 752, 576, 577, 579, 578, 580, 1614, 581,
	0, 582, 583, 584, 0, 0, 0, 0, 0, 585,
	586, 588, 0, 589, 590, 591, 592, 587, 593, 594,
	595, 596, 597, 598, 1615, 600, 601, 599, 602, 603,
	1342, 604, 605, 606, 607, 608, 753, 609, 0, 610,
	611, 618, 619, 620, 612, 613, 614, 621, 622, 623,
	624, 625, 626, 1616, 628, 629, 627, 630, 631, 632,
	1617, 633, 754, 634, 615, 616, 635, 636, 1343, 637,
	638, 639, 640, 641, 642, 643, 755, 0, 644, 1618,
	645, 646, 647, 648, 649, 650, 652, 617, 653, 658,
	659, 756, 654, 655, 656, 657, 757, 661, 662, 663,
	664, 1619, 665, 666, 0, 660, 651, 1620, 667, 668,
	669, 670, 671, 672, 0, 673, 674, 1621, 675, 758,
	759, 760, 761, 1622, 687, 1623, 676, 678, 679, 680,
	681, 762, 682, 763, 1624, 683, 684, 685, 686, 677,
	688, 689, 1625, 1626, 690, 691, 693, 695, 696, 692,
	694, 697, 1627, 698, 1628, 0, 699, 700, 701, 764,
	765, 766, 1629, 703, 702, 704, 705, 706, 767, 707,
	708, 709, 1630, 1631, 1632, 1633, 710, 711, 768, 712,
	713, 714, 0, 0, 0, 0, 0, 0, 0, 0,
	1549, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4822, 306, 307, 309,
	308, 310, 311, 312, 313, 1555, 314, 315, 1556, 1557,
	1558, 0, 1559, 715, 1560, 1561, 1562, 316, 1563, 317,
	318, 319, 1327, 320, 321, 322, 323, 324, 325, 326,
	716, 717, 0, 327, 718, 328, 719, 1564, 720, 329,
	330, 331, 332, 333, 334, 335, 1565, 1566, 0, 336,
	721, 722, 723, 1567, 337, 338, 724, 1568, 1635, 1569,
	339, 340, 341, 342, 343, 344, 345, 346, 0, 1570,
	348, 349, 350, 347, 351, 1571, 352, 0, 353, 354,
	355, 356, 357, 358, 359, 1572, 360, 361, 362, 1328,
	363, 364, 365, 1573, 1574, 1576, 1575, 1577, 1578, 1579,
	366, 367, 368, 369, 370, 0, 371, 373, 725, 726,
	1580, 376, 378, 372, 374, 1581, 377, 375, 379, 1582,
	380, 381, 382, 1583, 1584, 383, 384, 385, 1585, 386,
	387, 388, 1586, 389, 390, 391, 1587, 392, 393, 727,
	394, 395, 396, 398, 400, 397, 399, 401, 402, 403,
	404, 405, 728, 729, 406, 1588, 303, 1589, 0, 0,
	0, 0, 407, 408, 409, 730, 0, 0, 0, 410,
	1590, 411, 412, 413, 1591, 414, 415, 1592, 1329, 416,
	417, 418, 731, 732, 419, 420, 421, 422, 423, 424,
	425, 426, 427, 1593, 428, 733, 1594, 734, 429, 1595,
	430, 431, 432, 433, 434, 435, 436, 735, 736, 737,
	529, 1331, 437, 438, 439, 1596, 440, 441, 442, 443,
	444, 0, 0, 0, 304, 445, 446, 447, 1597, 1330,
	738, 448, 530, 449, 739, 740, 1598, 741, 1599, 450,
	451, 453, 1332, 742, 1333, 452, 454, 455, 1334, 456,
	0, 0, 0, 457, 458, 459, 460, 461, 462, 1600,
	463, 465, 464, 1601, 467, 743, 466, 1335, 468, 469,
	1336, 1602, 470, 471, 472, 473, 474, 475, 478, 1603,
	1604, 476, 477, 479, 480, 0, 481, 482, 484, 487,
	483, 485, 486, 488, 501, 502, 489, 490, 491, 492,
	493, 494, 495, 496, 497, 498, 499, 500, 504, 0,
	503, 1337, 505, 506, 507, 508, 509, 516, 518, 519,
	514, 515, 517, 520, 521, 523, 511, 512, 513, 1338,
	522, 510, 1605, 305, 1339, 524, 525, 526, 527, 1606,
	744, 528, 745, 531, 532, 1607, 0, 533, 0, 534,
	1608, 1609, 536, 537, 538, 1610, 1611, 539, 540, 746,
	1340, 541, 1341, 747, 542, 543, 535, 544, 545, 546,
	547, 548, 549, 550, 551, 552, 553, 1612, 554, 555,
	748, 556, 557, 558, 749, 559, 560, 561, 750, 562,
	751, 563, 564, 1613, 565, 566, 567, 0, 568, 569,
	570, 571, 572, 573, 574, 575, 752, 576, 577, 579,
	578, 580, 1614, 581, 0, 582, 583, 584, 0, 0,
	0, 0, 0, 585, 586, 588, 0, 589, 590, 591,
	592, 587, 593, 594, 595, 596, 597, 598, 1615, 600,
	601, 599, 602, 603, 1342, 604, 605, 606, 607, 608,
	753, 609, 0, 610, 611, 618, 619, 620, 612, 613,
	614, 621, 622, 623, 624, 625, 626, 1616, 628, 629,
	627, 630, 631, 632, 1617, 633, 754, 634, 615, 616,
	635, 636, 1343, 637, 638, 639, 640, 641, 642, 643,
	755, 0, 644, 1618, 645, 646, 647, 648, 649, 650,
	652, 617, 653, 658, 659, 756, 654, 655, 656, 657,
	757, 661, 662, 663, 664, 1619, 665, 666, 0, 660,
	651, 1620, 667, 668, 669, 670, 671, 672, 0, 673,
	674, 1621, 675, 758, 759, 760, 761, 1622, 687, 1623,
	676, 678, 679, 680, 681, 762, 682, 763, 1624, 683,
	684, 685, 686, 677, 688, 689, 1625, 1626, 690, 691,
	693, 695, 696, 692, 694, 697, 1627, 698, 1628, 0,
	699, 700, 701, 764, 765, 766, 1629, 703, 702, 704,
	705, 706, 767, 707, 708, 709, 1630, 1631, 1632, 1633,
	710, 711, 768, 712, 713, 714, 0, 0, 0, 0,
	0, 0, 0, 0, 1549, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4677, 306, 307, 309, 308, 310, 311, 312, 313, 1555,
	314, 315, 1556, 1557, 1558, 0, 1559, 715, 1560, 1561,
	1562, 316, 1563, 317, 318, 319, 1327, 320, 321, 322,
	323, 324, 325, 326, 716, 717, 0, 327, 718, 328,
	719, 1564, 720, 329, 330, 331, 332, 333, 334, 335,
	1565, 1566, 0, 336, 721, 722, 723, 1567, 337, 338,
	724, 1568, 1635, 1569, 339, 340, 341, 342, 343, 344,
	345, 346, 0, 1570, 348, 349, 350, 347, 351, 1571,
	352, 0, 353, 354, 355, 356, 357, 358, 359, 1572,
	360, 361, 362, 1328, 363, 364, 365, 1573, 1574, 1576,
	1575, 1577, 1578, 1579, 366, 367, 368, 369, 370, 0,
	371, 373, 725, 726, 1580, 376, 378, 372, 374, 1581,
	377, 375, 379, 1582, 380, 381, 382, 1583, 1584, 383,
	384, 385, 1585, 386, 387, 388, 1586, 389, 390, 391,
	1587, 392, 393, 727, 394, 395, 396, 398, 400, 397,
	399, 401, 402, 403, 404, 405, 728, 729, 406, 1588,
	303, 1589, 0, 0, 0, 0, 407, 408, 409, 730,
	0, 0, 0, 410, 1590, 411, 412, 413, 1591, 414,
	415, 1592, 1329, 416, 417, 418, 731, 732, 419, 420,
	421, 422, 423, 424, 425, 426, 427, 1593, 428, 733,
	1594, 734, 429, 1595, 430, 431, 432, 433, 434, 435,
	436, 735, 736, 737, 529, 1331, 437, 438, 439, 1596,
	440, 441, 442, 443, 444, 0, 0, 0, 304, 445,
	446, 447, 1597, 1330, 738, 448, 530, 449, 739, 740,
	1598, 741, 1599, 450, 451, 453, 1332, 742, 1333, 452,
	454, 455, 1334, 456, 0, 0, 0, 457, 458, 459,
	460, 461, 462, 1600, 463, 465, 464, 1601, 467, 743,
	466, 1335, 468, 469, 1336, 1602, 470, 471, 472, 473,
	474, 475, 478, 1603, 1604, 476, 477, 479, 480, 0,
	481, 482, 484, 487, 483, 485, 486, 488, 501, 502,
	489, 490, 491, 492, 493, 494, 495, 496, 497, 498,
	499, 500, 504, 0, 503, 1337, 505, 506, 507, 508,
	509, 516, 518, 519, 514, 515, 517, 520, 521, 523,
	511, 512, 513, 1338, 522, 510, 1605, 305, 1339, 524,
	525, 526, 527, 1606, 744, 528, 745, 531, 532, 1607,
	0, 533, 0, 534, 1608, 1609, 536, 537, 538, 1610,
	1611, 539, 540, 746, 1340, 541, 1341, 747, 542, 543,
	535, 544, 545, 546, 547, 548, 549, 550, 551, 552,
	553, 1612, 554, 555, 748, 556, 557, 558, 749, 559,
	560, 561, 750, 562, 751, 563, 564, 1613, 565, 566,
	567, 0, 568, 569, 570, 571, 572, 573, 574, 575,
	752, 576, 577, 579, 578, 580, 1614, 581, 0, 582,
	583, 584, 0, 0, 0, 0, 0, 585, 586, 588,
	0, 589, 590, 591, 592, 587, 593, 594, 595, 596,
	597, 598, 1615, 600, 601, 599, 602, 603, 1342, 604,
	605, 606, 607, 608, 753, 609, 0, 610, 611, 618,
	619, 620, 612, 613, 614, 621, 622, 623, 624, 625,
	626, 1616, 628, 629, 627, 630, 631, 632, 1617, 633,
	754, 634, 615, 616, 635, 636, 1343, 637, 638, 639,
	640, 641, 642, 643, 755, 0, 644, 1618, 645, 646,
	647, 648, 649, 650, 652, 617, 653, 658, 659, 756,
	654, 655, 656, 657, 757, 661, 662, 663, 664, 1619,
	665, 666, 0, 660, 651, 1620, 667, 668, 669, 670,
	671, 672, 0, 673, 674, 1621, 675, 758, 759, 760,
	761, 1622, 687, 1623, 676, 678, 679, 680, 681, 762,
	682, 763, 1624, 683, 684, 685, 686, 677, 688, 689,
	1625, 1626, 690, 691, 693, 695, 696, 692, 694, 697,
	1627, 698, 1628, 0, 699, 700, 701, 764, 765, 766,
	1629, 703, 702, 704, 705, 706, 767, 707, 708, 709,
	1630, 1631, 1632, 1633, 710, 711, 768, 712, 713, 714,
	0, 0, 0, 0, 0, 0, 0, 0, 1549, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4495, 306, 307, 309, 308, 310,
	311, 312, 313, 1555, 314, 315, 1556, 1557, 1558, 0,
	1559, 715, 1560, 1561, 1562, 316, 1563, 317, 318, 319,
	1327, 320, 321, 322, 323, 324, 325, 326, 716, 717,
	0, 327, 718, 328, 719, 1564, 720, 329, 330, 331,
	332, 333, 334, 335, 1565, 1566, 0, 336, 721, 722,
	723, 1567, 337, 338, 724, 1568, 1635, 1569, 339, 340,
	341, 342, 343, 344, 345, 346, 0, 1570, 348, 349,
	350, 347, 351, 1571, 352, 0, 353, 354, 355, 356,
	357, 358, 359, 1572, 360, 361, 362, 1328, 363, 364,
	365, 1573, 1574, 1576, 1575, 1577, 1578, 1579, 366, 367,
	368, 369, 370, 0, 371, 373, 725, 726, 1580, 376,
	378, 372, 374, 1581, 377, 375, 379, 1582, 380, 381,
	382, 1583, 1584, 383, 384, 385, 1585, 386, 387, 388,
	1586, 389, 390, 391, 1587, 392, 393, 727, 394, 395,
	396, 398, 400, 397, 399, 401, 402, 403, 404, 405,
	728, 729, 406, 1588, 303, 1589, 0, 0, 0, 0,
	407, 408, 409, 730, 0, 0, 0, 410, 1590, 411,
	412, 413, 1591, 414, 415, 1592, 1329, 416, 417, 418,
	731, 732, 419, 420, 421, 422, 423, 424, 425, 426,
	427, 1593, 428, 733, 1594, 734, 429, 1595, 430, 431,
	432, 433, 434, 435, 436, 735, 736, 737, 529, 1331,
	437, 438, 439, 1596, 440, 441, 442, 443, 444, 0,
	0, 0, 304, 445, 446, 447, 1597, 1330, 738, 448,
	530, 449, 739, 740, 1598, 741, 1599, 450, 451, 453,
	1332, 742, 1333, 452, 454, 455, 1334, 456, 0, 0,
	0, 457, 458, 459, 460, 461, 462, 1600, 463, 465,
	464, 1601, 467, 743, 466, 1335, 468, 469, 1336, 1602,
	470, 471, 472, 473, 474, 475, 478, 1603, 1604, 476,
	477, 479, 480, 0, 481, 482, 484, 487, 483, 485,
	486, 488, 501, 502, 489, 490, 491, 492, 493, 494,
	495, 496, 497, 498, 499, 500, 504, 0, 503, 1337,
	505, 506, 507, 508, 509, 516, 518, 519, 514, 515,
	517, 520, 521, 523, 511, 512, 513, 1338, 522, 510,
	1605, 305, 1339, 524, 525, 526, 527, 1606, 744, 528,
	745, 531, 532, 1607, 0, 533, 0, 534, 1608, 1609,
	536, 537, 538, 1610, 1611, 539, 540, 746, 1340, 541,
	1341, 747, 542, 543, 535, 544, 545, 546, 547, 548,
	549, 550, 551, 552, 553, 1612, 554, 555, 748, 556,
	557, 558, 749, 559, 560, 561, 750, 562, 751, 563,
	564, 1613, 565, 566, 567, 0, 568, 569, 570, 571,
	572, 573, 574, 575, 752, 576, 577, 579, 578, 580,
	1614, 581, 0, 582, 583, 584, 0, 0, 0, 0,
	0, 585, 586, 588, 0, 589, 590, 591, 592, 587,
	593, 594, 595, 596, 597, 598, 1615, 600, 601, 599,
	602, 603, 1342, 604, 605, 606, 607, 608, 753, 609,
	0, 610, 611, 618, 619, 620, 612, 613, 614, 621,
	622, 623, 624, 625, 626, 1616, 628, 629, 627, 630,
	631, 632, 1617, 633, 754, 634, 615, 616, 635, 636,
	1343, 637, 638, 639, 640, 641, 642, 643, 755, 0,
	644, 1618, 645, 646, 647, 648, 649, 650, 652, 617,
	653, 658, 659, 756, 654, 655, 656, 657, 757, 661,
	662, 663, 664, 1619, 665, 666, 0, 660, 651, 1620,
	667, 668, 669, 670, 671, 672, 0, 673, 674, 1621,
	675, 758, 759, 760, 761, 1622, 687, 1623, 676, 678,
	679, 680, 681, 762, 682, 763, 1624, 683, 684, 685,
	686, 677, 688, 689, 1625, 1626, 690, 691, 693, 695,
	696, 692, 694, 697, 1627, 698, 1628, 0, 699, 700,
	701, 764, 765, 766, 1629, 703, 702, 704, 705, 706,
	767, 707, 708, 709, 1630, 1631, 1632, 1633, 710, 711,
	768, 712, 713, 714, 0, 0, 0, 0, 0, 0,
	0, 0, 1549, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4138, 306,
	307, 309, 308, 310, 311, 312, 313, 1555, 314, 315,
	1556, 1557, 1558, 0, 1559, 715, 1560, 1561, 1562, 316,
	1563, 317, 318, 319, 1327, 320, 321, 322, 323, 324,
	325, 326, 716, 717, 0, 327, 718, 328, 719, 1564,
	720, 329, 330, 331, 332, 333, 334, 335, 1565, 1566,
	0, 336, 721, 722, 723, 1567, 337, 338, 724, 1568,
	1635, 1569, 339, 340, 341, 342, 343, 344, 345, 346,
	0, 1570, 348, 349, 350, 347, 351, 1571, 352, 0,
	353, 354, 355, 356, 357, 358, 359, 1572, 360, 361,
	362, 1328, 363, 364, 365, 1573, 1574, 1576, 1575, 1577,
	1578, 1579, 366, 367, 368, 369, 370, 0, 371, 373,
	725, 726, 1580, 376, 378, 372, 374, 1581, 377, 375,
	379, 1582, 380, 381, 382, 1583, 1584, 383, 384, 385,
	1585, 386, 387, 388, 1586, 389, 390, 391, 1587, 392,
	393, 727, 394, 395, 396, 398, 400, 397, 399, 401,
	402, 403, 404, 405, 728, 729, 406, 1588, 303, 1589,
	0, 0, 0, 0, 407, 408, 409, 730, 0, 0,
	0, 410, 1590, 411, 412, 413, 1591, 414, 415, 1592,
	1329, 416, 417, 418, 731, 732, 419, 420, 421, 422,
	423, 424, 425, 426, 427, 1593, 428, 733, 1594, 734,
	429, 1595, 430, 431, 432, 433, 434, 435, 436, 735,
	736, 737, 529, 1331, 437, 438, 439, 1596, 440, 441,
	442, 443, 444, 0, 0, 0, 304, 445, 446, 447,
	1597, 1330, 738, 448, 530, 449, 739, 740, 1598, 741,
	1599, 450, 451, 453, 1332, 742, 1333, 452, 454, 455,
	1334, 456, 0, 0, 0, 457, 458, 459, 460, 461,
	462, 1600, 463, 465, 464, 1601, 467, 743, 466, 1335,
	468, 469, 1336, 1602, 470, 471, 472, 473, 474, 475,
	478, 1603, 1604, 476, 477, 479, 480, 0, 481, 482,
	484, 487, 483, 485, 486, 488, 501, 502, 489, 490,
	491, 492, 493, 494, 495, 496, 497, 498, 499, 500,
	504, 0, 503, 1337, 505, 506, 507, 508, 509, 516,
	518, 519, 514, 515, 517, 520, 521, 523, 511, 512,
	513, 1338, 522, 510, 1605, 305, 1339, 524, 525, 526,
	527, 1606, 744, 528, 745, 531, 532, 1607, 0, 533,
	0, 534, 1608, 1609, 536, 537, 538, 1610, 1611, 539,
	540, 746, 1340, 541, 1341, 747, 542, 543, 535, 544,
	545, 546, 547, 548, 549, 550, 551, 552, 553, 1612,
	554, 555, 748, 556, 557, 558, 749, 559, 560, 561,
	750, 562, 751, 563, 564, 1613, 565, 566, 567, 0,
	568, 569, 570, 571, 572, 573, 574, 575, 752, 576,
	577, 579, 578, 580, 1614, 581, 0, 582, 583, 584,
	0, 0, 0, 0, 0, 585, 586, 588, 0, 589,
	590, 591, 592, 587, 593, 594, 595, 596, 597, 598,
	1615, 600, 601, 599, 602, 603, 1342, 604, 605, 606,
	607, 608, 753, 609, 0, 610, 611, 618, 619, 620,
	612, 613, 614, 621, 622, 623, 624, 625, 626, 1616,
	628, 629, 627, 630, 631, 632, 1617, 633, 754, 634,
	615, 616, 635, 636, 1343, 637, 638, 639, 640, 641,
	642, 643, 755, 0, 644, 1618, 645, 646, 647, 648,
	649, 650, 652, 617, 653, 658, 659, 756, 654, 655,
	656, 657, 757, 661, 662, 663, 664, 1619, 665, 666,
	0, 660, 651, 1620, 667, 668, 669, 670, 671, 672,
	0, 673, 674, 1621, 675, 758, 759, 760, 761, 1622,
	687, 1623, 676, 678, 679, 680, 681, 762, 682, 763,
	1624, 683, 684, 685, 686, 677, 688, 689, 1625, 1626,
	690, 691, 693, 695, 696, 692, 694, 697, 1627, 698,
	1628, 0, 699, 700, 701, 764, 765, 766, 1629, 703,
	702, 704, 705, 706, 767, 707, 708, 709, 1630, 1631,
	1632, 1633, 710, 711, 768, 712, 713, 714, 0, 0,
	0, 0, 0, 0, 0, 0, 1549, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3934, 306, 307, 309, 308, 310, 311, 312,
	313, 1555, 314, 315, 1556, 1557, 1558, 0, 1559, 715,
	1560, 1561, 1562, 316, 1563, 317, 318, 319, 1327, 320,
	321, 322, 323, 324, 325, 326, 716, 717, 0, 327,
	718, 328, 719, 1564, 720, 329, 330, 331, 332, 333,
	334, 335, 1565, 1566, 0, 336, 721, 722, 723, 1567,
	337, 338, 724, 1568, 1635, 1569, 339, 340, 341, 342,
	343, 344, 345, 346, 0, 1570, 348, 349, 350, 347,
	351, 1571, 352, 0, 353, 354, 355, 356, 357, 358,
	359, 1572, 360, 361, 362, 1328, 363, 364, 365, 1573,
	1574, 1576, 1575, 1577, 1578, 1579, 366, 367, 368, 369,
	370, 0, 371, 373, 725, 726, 1580, 376, 378, 372,
	374, 1581, 377, 375, 379, 1582, 380, 381, 382, 1583,
	1584, 383, 384, 385, 1585, 386, 387, 388, 1586, 389,
	390, 391, 1587, 392, 393, 727, 394, 395, 396, 398,
	400, 397, 399, 401, 402, 403, 404, 405, 728, 729,
	406, 1588, 303, 1589, 0, 0, 0, 0, 407, 408,
	409, 730, 0, 0, 0, 410, 1590, 411, 412, 413,
	1591, 414, 415, 1592, 1329, 416, 417, 418, 731, 732,
	419, 420, 421, 422, 423, 424, 425, 426, 427, 1593,
	428, 733, 1594, 734, 429, 1595, 430, 431, 432, 433,
	434, 435, 436, 735, 736, 737, 529, 1331, 437, 438,
	439, 1596, 440, 441, 442, 443, 444, 0, 0, 0,
	304, 445, 446, 447, 1597, 1330, 738, 448, 530, 449,
	739, 740, 1598, 741, 1599, 450, 451, 453, 1332, 742,
	1333, 452, 454, 455, 1334, 456, 0, 0, 0, 457,
	458, 459, 460, 461, 462, 1600, 463, 465, 464, 1601,
	467, 743, 466, 1335, 468, 469, 1336, 1602, 470, 471,
	472, 473, 474, 475, 478, 1603, 1604, 476, 477, 479,
	480, 0, 481, 482, 484, 487, 483, 485, 486, 488,
	501, 502, 489, 490, 491, 492, 493, 494, 495, 496,
	497, 498, 499, 500, 504, 0, 503, 1337, 505, 506,
	507, 508, 509, 516, 518, 519, 514, 515, 517, 520,
	521, 523, 511, 512, 513, 1338, 522, 510, 1605, 305,
	1339, 524, 525, 526, 527, 1606, 744, 528, 745, 531,
	532, 1607, 0, 533, 0, 534, 1608, 1609, 536, 537,
	538, 1610, 1611, 539, 540, 746, 1340, 541, 1341, 747,
	542, 543, 535, 544, 545, 546, 547, 548, 549, 550,
	551, 552, 553, 1612, 554, 555, 748, 556, 557, 558,
	749, 559, 560, 561, 750, 562, 751, 563, 564, 1613,
	565, 566, 567, 0, 568, 569, 570, 571, 572, 573,
	574, 575, 752, 576, 577, 579, 578, 580, 1614, 581,
	0, 582, 583, 584, 0, 0, 0, 0, 0, 585,
	586, 588, 0, 589, 590, 591, 592, 587, 593, 594,
	595, 596, 597, 598, 1615, 600, 601, 599, 602, 603,
	1342, 604, 605, 606, 607, 608, 753, 609, 0, 610,
	611, 618, 619, 620, 612, 613, 614, 621, 622, 623,
	624, 625, 626, 1616, 628, 629, 627, 630, 631, 632,
	1617, 633, 754, 634, 615, 616, 635, 636, 1343, 637,
	638, 639, 640, 641, 642, 643, 755, 0, 644, 1618,
	645, 646, 647, 648, 649, 650, 652, 617, 653, 658,
	659, 756, 654, 655, 656, 657, 757, 661, 662, 663,
	664, 1619, 665, 666, 0, 660, 651, 1620, 667, 668,
	669, 670, 671, 672, 0, 673, 674, 1621, 675, 758,
	759, 760, 761, 1622, 687, 1623, 676, 678, 679, 680,
	681, 762, 682, 763, 1624, 683, 684, 685, 686, 677,
	688, 689, 1625, 1626, 690, 691, 693, 695, 696, 692,
	694, 697, 1627, 698, 1628, 0, 699, 700, 701, 764,
	765, 766, 1629, 703, 702, 704, 705, 706, 767, 707,
	708, 709, 1630, 1631, 1632, 1633, 710, 711, 768, 712,
	713, 714, 0, 0, 0, 0, 0, 0, 0, 0,
	1549, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2873, 306, 307, 309,
	308, 310, 311, 312, 313, 1555, 314, 315, 1556, 1557,
	1558, 0, 1559, 715, 1560, 1561, 1562, 316, 1563, 317,
	318, 319, 1327, 320, 321, 322, 323, 324, 325, 326,
	716, 717, 0, 327, 718, 328, 719, 1564, 720, 329,
	330, 331, 332, 333, 334, 335, 1565, 1566, 0, 336,
	721, 722, 723, 1567, 337, 338, 724, 1568, 1635, 1569,
	339, 340, 341, 342, 343, 344, 345, 346, 0, 1570,
	348, 349, 350, 347, 351, 1571, 352, 0, 353, 354,
	355, 356, 357, 358, 359, 1572, 360, 361, 362, 1328,
	363, 364, 365, 1573, 1574, 1576, 1575, 1577, 1578, 1579,
	366, 367, 368, 369, 370, 0, 371, 373, 725, 726,
	1580, 376, 378, 372, 374, 1581, 377, 375, 379, 1582,
	380, 381, 382, 1583, 1584, 383, 384, 385, 1585, 386,
	387, 388, 1586, 389, 390, 391, 1587, 392, 393, 727,
	394, 395, 396, 398, 400, 397, 399, 401, 402, 403,
	404, 405, 728, 729, 406, 1588, 303, 1589, 0, 0,
	0, 0, 407, 408, 409, 730, 0, 0, 0, 410,
	1590, 411, 412, 413, 1591, 414, 415, 1592, 1329, 416,
	417, 418, 731, 732, 419, 420, 421, 422, 423, 424,
	425, 426, 427, 1593, 428, 733, 1594, 734, 429, 1595,
	430, 431, 432, 433, 434, 435, 436, 735, 736, 737,
	529, 1331, 437, 438, 439, 1596, 440, 441, 442, 443,
	444, 0, 0, 0, 304, 445, 446, 447, 1597, 1330,
	738, 448, 530, 449, 739, 740, 1598, 741, 1599, 450,
	451, 453, 1332, 742, 1333, 452, 454, 455, 1334, 456,
	0, 0, 0, 457, 458, 459, 460, 461, 462, 1600,
	463, 465, 464, 1601, 467, 743, 466, 1335, 468, 469,
	1336, 1602, 470, 471, 472, 473, 474, 475, 478, 1603,
	1604, 476, 477, 479, 480, 0, 481, 482, 484, 487,
	483, 485, 486, 488, 501, 502, 489, 490, 491, 492,
	493, 494, 495, 496, 497, 498, 499, 500, 504, 0,
	503, 1337, 505, 506, 507, 508, 509, 516, 518, 519,
	514, 515, 517, 520, 521, 523, 511, 512, 513, 1338,
	522, 510, 1605, 305, 1339, 524, 525, 526, 527, 1606,
	744, 528, 745, 531, 532, 1607, 0, 533, 0, 534,
	1608, 1609, 536, 537, 538, 1610, 1611, 539, 540, 746,
	1340, 541, 1341, 747, 542, 543, 535, 544, 545, 546,
	547, 548, 549, 550, 551, 552, 553, 1612, 554, 555,
	748, 556, 557, 558, 749, 559, 560, 561, 750, 562,
	751, 563, 564, 1613, 565, 566, 567, 0, 568, 569,
	570, 571, 572, 573, 574, 575, 752, 576, 577, 579,
	578, 580, 1614, 581, 0, 582, 583, 584, 0, 0,
	0, 0, 0, 585, 586, 588, 0, 589, 590, 591,
	592, 587, 593, 594, 595, 596, 597, 598, 1615, 600,
	601, 599, 602, 603, 1342, 604, 605, 606, 607, 608,
	753, 609, 0, 610, 611, 618, 619, 620, 612, 613,
	614, 621, 622, 623, 624, 625, 626, 1616, 628, 629,
	627, 630, 631, 632, 1617, 633, 754, 634, 615, 616,
	635, 636, 1343, 637, 638, 639, 640, 641, 642, 643,
	755, 0, 644, 1618, 645, 646, 647, 648, 649, 650,
	652, 617, 653, 658, 659, 756, 654, 655, 656, 657,
	757, 661, 662, 663, 664, 1619, 665, 666, 0, 660,
	651, 1620, 667, 668, 669, 670, 671, 672, 0, 673,
	674, 1621, 675, 758, 759, 760, 761, 1622, 687, 1623,
	676, 678, 679, 680, 681, 762, 682, 763, 1624, 683,
	684, 685, 686, 677, 688, 689, 1625, 1626, 690, 691,
	693, 695, 696, 692, 694, 697, 1627, 698, 1628, 0,
	699, 700, 701, 764, 765, 766, 1629, 703, 702, 704,
	705, 706, 767, 707, 708, 709, 1630, 1631, 1632, 1633,
	710, 711, 768, 712, 713, 714, 0, 0, 0, 0,
	0, 0, 1546, 0, 1549, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2485, 306, 307, 309, 308, 310, 311, 312, 313, 1555,
	314, 315, 1556, 1557, 1558, 0, 1559, 715, 1560, 1561,
	1562, 316, 1563, 317, 318, 319, 1327, 320, 321, 322,
	323, 324, 325, 326, 716, 717, 0, 327, 718, 328,
	719, 1564, 720, 329, 330, 331, 332, 333, 334, 335,
	1565, 1566, 0, 336, 721, 722, 723, 1567, 337, 338,
	724, 1568, 1635, 1569, 339, 340, 341, 342, 343, 344,
	345, 346, 0, 1570, 348, 349, 350, 347, 351, 1571,
	352, 0, 353, 354, 355, 356, 357, 358, 359, 1572,
	360, 361, 362, 1328, 363, 364, 365, 1573, 1574, 1576,
	1575, 1577, 1578, 1579, 366, 367, 368, 369, 370, 0,
	371, 373, 725, 726, 1580, 376, 378, 372, 374, 1581,
	377, 375, 379, 1582, 380, 381, 382, 1583, 1584, 383,
	384, 385, 1585, 386, 387, 388, 1586, 389, 390, 391,
	1587, 392, 393, 727, 394, 395, 396, 398, 400, 397,
	399, 401, 402, 403, 404, 405, 728, 729, 406, 1588,
	303, 1589, 0, 0, 0, 0, 407, 408, 409, 730,
	0, 0, 0, 410, 1590, 411, 412, 413, 1591, 414,
	415, 1592, 1329, 416, 417, 418, 731, 732, 419, 420,
	421, 422, 423, 424, 425, 426, 427, 1593, 428, 733,
	1594, 734, 429, 1595, 430, 431, 432, 433, 434, 435,
	436, 735, 736, 737, 529, 1331, 437, 438, 439, 1596,
	440, 441, 442, 443, 444, 0, 0, 0, 304, 445,
	446, 447, 1597, 1330, 738, 448, 530, 449, 739, 740,
	1598, 741, 1599, 450, 451, 453, 1332, 742, 1333, 452,
	454, 455, 1334, 456, 0, 0, 0, 457, 458, 459,
	460, 461, 462, 1600, 463, 465, 464, 1601, 467, 743,
	466, 1335, 468, 469, 1336, 1602, 470, 471, 472, 473,
	474, 475, 478, 1603, 1604, 476, 477, 479, 480, 0,
	481, 482, 484, 487, 483, 485, 486, 488, 501, 502,
	489, 490, 491, 492, 493, 494, 495, 496, 497, 498,
	499, 500, 504, 0, 503, 1337, 505, 506, 507, 508,
	509, 516, 518, 519, 514, 515, 517, 520, 521, 523,
	511, 512, 513, 1338, 522, 510, 1605, 305, 1339, 524,
	525, 526, 527, 1606, 744, 528, 745, 531, 532, 1607,
	0, 533, 0, 534, 1608, 1609, 536, 537, 538, 1610,
	1611, 539, 540, 746, 1340, 541, 1341, 747, 542, 543,
	535, 544, 545, 546, 547, 548, 549, 550, 551, 552,
	553, 1612, 554, 555, 748, 556, 557, 558, 749, 559,
	560, 561, 750, 562, 751, 563, 564, 1613, 565, 566,
	567, 0, 568, 569, 570, 571, 572, 573, 574, 575,
	752, 576, 577, 579, 578, 580, 1614, 581, 0, 582,
	583, 584, 0, 0, 0, 0, 0, 585, 586, 588,
	0, 589, 590, 591, 592, 587, 593, 594, 595, 596,
	597, 598, 1615, 600, 601, 599, 602, 603, 1342, 604,
	605, 606, 607, 608, 753, 609, 0, 610, 611, 618,
	619, 620, 612, 613, 614, 621, 622, 623, 624, 625,
	626, 1616, 628, 629, 627, 630, 631, 632, 1617, 633,
	754, 634, 615, 616, 635, 636, 1343, 637, 638, 639,
	640, 641, 642, 643, 755, 0, 644, 1618, 645, 646,
	647, 648, 649, 650, 652, 617, 653, 658, 659, 756,
	654, 655, 656, 657, 757, 661, 662, 663, 664, 1619,
	665, 666, 0, 660, 651, 1620, 667, 668, 669, 670,
	671, 672, 0, 673, 674, 1621, 675, 758, 759, 760,
	761, 1622, 687, 1623, 676, 678, 679, 680, 681, 762,
	682, 763, 1624, 683, 684, 685, 686, 677, 688, 689,
	1625, 1626, 690, 691, 693, 695, 696, 692, 694, 697,
	1627, 698, 1628, 0, 699, 700, 701, 764, 765, 766,
	1629, 703, 702, 704, 705, 706, 767, 707, 708, 709,
	1630, 1631, 1632, 1633, 710, 711, 768, 712, 713, 714,
	1549, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 306, 307, 309,
	308, 310, 311, 312, 313, 1555, 314, 315, 1556, 1557,
	1558, 0, 1559, 715, 1560, 1561, 1562, 316, 1563, 317,
	318, 319, 1327, 320, 321, 322, 323, 324, 325, 326,
	716, 717, 0, 327, 718, 328, 719, 1564, 720, 329,
	330, 331, 332, 333, 334, 335, 1565, 1566, 0, 336,
	721, 722, 723, 1567, 337, 338, 724, 1568, 1635, 1569,
	339, 340, 341, 342, 343, 344, 345, 346, 0, 1570,
	348, 349, 350, 347, 351, 1571, 352, 0, 353, 354,
	355, 356, 357, 358, 359, 1572, 360, 361, 362, 1328,
	363, 364, 365, 1573, 1574, 1576, 1575, 1577, 1578, 1579,
	366, 367, 368, 369, 370, 0, 371, 373, 725, 726,
	1580, 376, 378, 372, 374, 1581, 377, 375, 379, 1582,
	380, 381, 382, 1583, 1584, 383, 384, 385, 1585, 386,
	387, 388, 1586, 389, 390, 391, 1587, 392, 393, 727,
	394, 395, 396, 398, 400, 397, 399, 401, 402, 403,
	404, 405, 728, 729, 406, 1588, 303, 1589, 0, 0,
	0, 0, 407, 408, 409, 730, 0, 0, 0, 410,
	1590, 411, 412, 413, 1591, 414, 415, 1592, 1329, 416,
	417, 418, 731, 732, 419, 420, 421, 422, 423, 424,
	425, 426, 427, 1593, 428, 733, 1594, 734, 429, 1595,
	430, 431, 432, 433, 434, 435, 436, 735, 736, 737,
	529, 1331, 437, 438, 439, 1596, 440, 441, 442, 443,
	444, 0, 0, 0, 304, 445, 446, 447, 1597, 1330,
	738, 448, 530, 449, 739, 740, 1598, 741, 1599, 450,
	451, 453, 1332, 742, 1333, 452, 454, 455, 1334, 456,
	0, 0, 0, 457, 458, 459, 460, 461, 462, 1600,
	463, 465, 464, 1601, 467, 743, 466, 1335, 468, 469,
	1336, 1602, 470, 471, 472, 473, 474, 475, 478, 1603,
	1604, 476, 477, 479, 480, 0, 481, 482, 484, 487,
	483, 485, 486, 488, 501, 502, 489, 490, 491, 492,
	493, 494, 495, 496, 497, 498, 499, 500, 504, 0,
	503, 1337, 505, 506, 507, 508, 509, 516, 518, 519,
	514, 515, 517, 520, 521, 523, 511, 512, 513, 1338,
	522, 510, 1605, 305, 1339, 524, 525, 526, 527, 1606,
	744, 528, 745, 531, 532, 1607, 0, 533, 0, 534,
	1608, 1609, 536, 537, 538, 1610, 1611, 539, 540, 746,
	1340, 541, 1341, 747, 542, 543, 535, 544, 545, 546,
	547, 548, 549, 550, 551, 552, 553, 1612, 554, 555,
	748, 556, 557, 558, 749, 559, 560, 561, 750, 562,
	751, 563, 564, 1613, 565, 566, 567, 0, 568, 569,
	570, 571, 572, 573, 574, 575, 752, 576, 577, 579,
	578, 580, 1614, 581, 0, 582, 583, 584, 0, 0,
	0, 0, 0, 585, 586, 588, 0, 589, 590, 591,
	592, 587, 593, 594, 595, 596, 597, 598, 1615, 600,
	601, 599, 602, 603, 1342, 604, 605, 606, 607, 608,
	753, 609, 0, 610, 611, 618, 619, 620, 612, 613,
	614, 621, 622, 623, 624, 625, 626, 1616, 628, 629,
	627, 630, 631, 632, 1617, 633, 754, 634, 615, 616,
	635, 636, 1343, 637, 638, 639, 640, 641, 642, 643,
	755, 0, 644, 1618, 645, 646, 647, 648, 649, 650,
	652, 617, 653, 658, 659, 756, 654, 655, 656, 657,
	757, 661, 662, 663, 664, 1619, 665, 666, 0, 660,
	651, 1620, 667, 668, 669, 670, 671, 672, 0, 673,
	674, 1621, 675, 758, 759, 760, 761, 1622, 687, 1623,
	676, 678, 679, 680, 681, 762, 682, 763, 1624, 683,
	684, 685, 686, 677, 688, 689, 1625, 1626, 690, 691,
	693, 695, 696, 692, 694, 697, 1627, 698, 1628, 0,
	699, 700, 701, 764, 765, 766, 1629, 703, 702, 704,
	705, 706, 767, 707, 708, 709, 1630, 1631, 1632, 1633,
	710, 711, 768, 712, 713, 714, 2848, 0, 1263, 1235,
	1236, 1237, 1233, 1234, 1246, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 306, 307, 309, 308, 310,
	311, 312, 313, 2845, 314, 315, 0, 0, 0, 0,
	0, 1287, 1251, 0, 0, 316, 0, 317, 318, 319,
	1327, 320, 321, 322, 323, 324, 325, 326, 716, 1300,
	0, 327, 1307, 328, 1306, 0, 1317, 329, 330, 331,
	332, 333, 334, 335, 1253, 1286, 1218, 336, 1347, 1348,
	723, 0, 337, 338, 1293, 0, 1274, 0, 339, 340,
	341, 342, 343, 344, 345, 346, 0, 0, 348, 349,
	350, 347, 351, 0, 352, 0, 353, 354, 355, 356,
	357, 358, 359, 0, 360, 361, 362, 1328, 363, 364,
	365, 1277, 1275, 1276, 1283, 1279, 1278, 1282, 366, 367,
	368, 369, 370, 1310, 371, 373, 1304, 1303, 1223, 376,
	378, 372, 374, 0, 377, 375, 379, 0, 380, 381,
	382, 2846, 0, 383, 1295, 385, 0, 386, 387, 388,
	0, 389, 390, 391, 0, 392, 393, 1229, 394, 395,
	396, 398, 400, 397, 399, 401, 402, 403, 404, 405,
	1318, 1319, 406, 1242, 303, 0, 0, 0, 0, 0,
	407, 408, 409, 1302, 0, 0, 0, 410, 0, 411,
	412, 413, 0, 414, 415, 0, 1329, 416, 417, 418,
	1315, 1316, 419, 420, 421, 422, 423, 424, 425, 426,
	427, 0, 428, 1325, 0, 1252, 429, 0, 430, 431,
	432, 433, 434, 435, 436, 1288, 1289, 1292, 529, 1331,
	437, 438, 439, 0, 440, 441, 442, 443, 444, 0,
	0, 0, 304, 445, 446, 447, 0, 1330, 738, 448,
	530, 449, 1297, 1298, 0, 1258, 0, 450, 451, 453,
	1332, 1290, 1333, 452, 454, 455, 1334, 456, 0, 0,
	0, 457, 458, 459, 460, 461, 462, 0, 463, 465,
	464, 0, 467, 1326, 466, 1335, 468, 469, 1336, 0,
	470, 471, 472, 473, 474, 475, 478, 1281, 1280, 476,
	477, 479, 480, 0, 481, 482, 484, 487, 483, 485,
	486, 488, 501, 502, 489, 490, 491, 492, 493, 494,
	495, 496, 497, 498, 499, 500, 504, 0, 503, 1337,
	505, 506, 507, 508, 509, 516, 518, 519, 514, 515,
	517, 520, 521, 523, 511, 512, 513, 1338, 522, 510,
	1220, 305, 1339, 524, 525, 526, 527, 1243, 1291, 528,
	1305, 531, 532, 0, 0, 533, 0, 534, 0, 0,
	536, 537, 538, 0, 0, 539, 540, 746, 1340, 541,
	1341, 1320, 542, 543, 1230, 544, 545, 546, 547, 548,
	549, 550, 551, 552, 553, 0, 554, 555, 748, 556,
	557, 558, 749, 559, 560, 561, 1321, 562, 751, 563,
	564, 0, 565, 566, 567, 0, 568, 569, 570, 571,
	572, 573, 574, 575, 1301, 576, 577, 579, 578, 580,
	0, 581, 0, 582, 583, 584, 0, 0, 0, 0,
	0, 585, 586, 588, 0, 589, 590, 591, 592, 587,
	593, 594, 595, 596, 597, 598, 0, 600, 601, 599,
	602, 603, 1342, 604, 605, 606, 607, 608, 1231, 609,
	0, 610, 611, 618, 619, 620, 612, 613, 614, 621,
	622, 623, 624, 625, 626, 0, 628, 629, 627, 630,
	631, 632, 1284, 633, 754, 634, 615, 616, 635, 636,
	1343, 637, 638, 639, 640, 641, 642, 643, 1299, 0,
	644, 0, 645, 646, 647, 648, 649, 650, 652, 617,
	653, 658, 659, 1346, 654, 655, 656, 657, 1322, 661,
	662, 663, 664, 0, 665, 666, 1217, 660, 651, 0,
	667, 668, 669, 670, 671, 672, 0, 673, 674, 0,
	675, 1311, 1312, 1313, 1314, 0, 687, 0, 676, 678,
	679, 680, 681, 1323, 682, 1324, 1241, 683, 684, 685,
	686, 677, 688, 689, 0, 1224, 690, 691, 693, 695,
	696, 692, 694, 697, 1285, 698, 0, 0, 699, 700,
	701, 764, 1308, 1345, 2844, 703, 702, 704, 705, 706,
	767, 707, 708, 709, 0, 0, 0, 0, 710, 711,
	768, 712, 713, 714, 1221, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1216,
	0, 0, 0, 0, 0, 0, 1214, 1215, 2847, 0,
	0, 0, 0, 0, 0, 0, 1247, 2843, 0, 1205,
	1245, 1263, 1235, 1236, 1237, 1233, 1234, 1246, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 306, 307,
	309, 308, 310, 311, 312, 313, 0, 314, 315, 0,
	0, 0, 0, 0, 1287, 1251, 0, 0, 316, 0,
	317, 318, 319, 1327, 320, 321, 322, 323, 324, 325,
	326, 716, 1300, 0, 327, 1307, 328, 1306, 0, 1317,
	329, 330, 331, 332, 333, 334, 335, 1253, 1286, 1218,
	336, 1347, 1348, 723, 0, 337, 338, 1293, 0, 1274,
	0, 339, 340, 341, 342, 343, 344, 345, 346, 0,
	0, 348, 349, 350, 347, 351, 0, 352, 0, 353,
	354, 355, 356, 357, 358, 359, 0, 360, 361, 362,
	1328, 363, 364, 365, 1277, 1275, 1276, 1283, 1279, 1278,
	1282, 366, 367, 368, 369, 370, 1310, 371, 373, 1304,
	1303, 1223, 376, 378, 372, 374, 0, 377, 375, 379,
	0, 380, 381, 382, 0, 0, 383, 1295, 385, 0,
	386, 387, 388, 0, 389, 390, 391, 0, 392, 393,
	1229, 394, 395, 396, 398, 400, 397, 399, 401, 402,
	403, 404, 405, 1318, 1319, 406, 1242, 303, 0, 0,
	0, 0, 0, 407, 408, 409, 1302, 0, 0, 0,
	410, 0, 411, 412, 413, 0, 414, 415, 0, 1329,
	416, 417, 418, 1315, 1316, 419, 420, 421, 422, 423,
	424, 425, 426, 427, 0, 428, 1325, 0, 1252, 429,
	0, 430, 431, 432, 433, 434, 435, 436, 1288, 1289,
	1292, 529, 1331, 437, 438, 439, 0, 440, 441, 442,
	443, 444, 0, 0, 0, 304, 445, 446, 447, 0,
	1330, 738, 448, 530, 449, 1297, 1298, 0, 1258, 0,
	450, 451, 453, 1332, 1290, 1333, 452, 454, 455, 1334,
	456, 0, 0, 0, 457, 458, 459, 460, 461, 462,
	0, 463, 465, 464, 0, 467, 1326, 466, 1335, 468,
	469, 1336, 0, 470, 471, 472, 473, 474, 475, 478,
	1281, 1280, 476, 477, 479, 480, 0, 481, 482, 484,
	487, 483, 485, 486, 488, 501, 502, 489, 490, 491,
	492, 493, 494, 495, 496, 497, 498, 499, 500, 504,
	0, 503, 1337, 505, 506, 507, 508, 509, 516, 518,
	519, 514, 515, 517, 520, 521, 523, 511, 512, 513,
	1338, 522, 510, 1220, 305, 1339, 524, 525, 526, 527,
	1243, 1291, 528, 1305, 531, 532, 0, 0, 533, 0,
	534, 0, 0, 536, 537, 538, 0, 0, 539, 540,
	746, 1340, 541, 1341, 1320, 542, 543, 1230, 544, 545,
	546, 547, 548, 549, 550, 551, 552, 553, 0, 554,
	555, 748, 556, 557, 558, 749, 559, 560, 561, 1321,
	562, 751, 563, 564, 0, 565, 566, 567, 0, 568,
	569, 570, 571, 572, 573, 574, 575, 1301, 576, 577,
	579, 578, 580, 0, 581, 0, 582, 583, 584, 0,
	0, 0, 0, 0, 585, 586, 588, 0, 589, 590,
	591, 592, 587, 593, 594, 595, 596, 597, 598, 0,
	600, 601, 599, 602, 603, 1342, 604, 605, 606, 607,
	608, 1231, 609, 0, 610, 611, 618, 619, 620, 612,
	613, 614, 621, 622, 623, 624, 625, 626, 259, 628,
	629, 627, 630, 631, 632, 1284, 633, 754, 634, 615,
	616, 635, 636, 1343, 637, 638, 639, 640, 641, 642,
	643, 1299, 0, 644, 0, 645, 646, 647, 648, 649,
	650, 652, 617, 653, 658, 659, 1346, 654, 655, 656,
	657, 1322, 661, 662, 663, 664, 0, 665, 666, 1217,
	660, 651, 261, 667, 668, 669, 670, 671, 672, 0,
	673, 674, 0, 675, 1311, 1312, 1313, 1314, 0, 687,
	0, 676, 678, 679, 680, 681, 1323, 682, 1324, 1241,
	683, 684, 685, 686, 677, 688, 689, 0, 1224, 690,
	691, 693, 695, 696, 692, 694, 697, 1285, 698, 0,
	0, 699, 700, 701, 1797, 1308, 1345, 0, 703, 702,
	704, 705, 706, 767, 707, 708, 709, 0, 0, 0,
	253, 710, 711, 768, 712, 713, 714, 1221, 0, 254,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1216, 0, 0, 0, 0, 0, 0, 1214,
	1215, 1263, 1235, 1236, 1237, 1233, 1234, 1246, 0, 2066,
	2064, 0, 0, 1245, 0, 0, 0, 0, 306, 307,
	309, 308, 310, 311, 312, 313, 0, 314, 315, 0,
	0, 0, 0, 0, 1287, 1251, 0, 0, 316, 0,
	317, 318, 319, 1327, 320, 321, 322, 323, 324, 325,
	326, 716, 1300, 0, 327, 1307, 328, 1306, 0, 1317,
	329, 330, 331, 332, 333, 334, 335, 1253, 1286, 1218,
	336, 1347, 1348, 723, 0, 337, 338, 1293, 0, 1274,
	0, 339, 340, 341, 342, 343, 344, 345, 346, 0,
	0, 348, 349, 350, 347, 351, 0, 352, 0, 353,
	354, 355, 356, 357, 358, 359, 0, 360, 361, 362,
	1328, 363, 364, 365, 1277, 1275, 1276, 1283, 1279, 1278,
	1282, 366, 367, 368, 369, 370, 1310, 371, 373, 1304,
	1303, 1223, 376, 378, 372, 374, 0, 377, 375, 379,
	0, 380, 381, 382, 0, 0, 383, 1295, 385, 0,
	386, 387, 388, 0, 389, 390, 391, 0, 392, 393,
	1229, 394, 395, 396, 398, 400, 397, 399, 401, 402,
	403, 404, 405, 1318, 1319, 406, 1242, 303, 0, 0,
	0, 0, 0, 407, 408, 409, 1302, 0, 0, 0,
	410, 0, 411, 412, 413, 0, 414, 415, 0, 1329,
	416, 417, 418, 1315, 1316, 419, 420, 421, 422, 423,
	424, 425, 426, 427, 0, 428, 1325, 0, 1252, 429,
	0, 430, 431, 432, 433, 434, 435, 436, 1288, 1289,
	1292, 529, 1331, 437, 438, 439, 0, 440, 441, 442,
	443, 444, 0, 0, 0, 304, 445, 446, 447, 0,
	1330, 738, 448, 530, 449, 1297, 1298, 0, 1258, 0,
	450, 451, 453, 1332, 1290, 1333, 452, 454, 455, 1334,
	456, 0, 0, 0, 457, 458, 459, 460, 461, 462,
	0, 463, 465, 464, 0, 467, 1326, 466, 1335, 468,
	469, 1336, 0, 470, 471, 472, 473, 474, 475, 478,
	1281, 1280, 476, 477, 479, 480, 0, 481, 482, 484,
	487, 483, 485, 486, 488, 501, 502, 489, 490, 491,
	492, 493, 494, 495, 496, 497, 498, 499, 500, 504,
	0, 503, 1337, 505, 506, 507, 508, 509, 516, 518,
	519, 514, 515, 517, 520, 521, 523, 511, 512, 513,
	1338, 522, 510, 1220, 305, 1339, 524, 525, 526, 527,
	1243, 1291, 528, 1305, 531, 532, 0, 0, 533, 0,
	534, 0, 0, 536, 537, 538, 0, 0, 539, 540,
	746, 1340, 541, 1341, 1320, 542, 543, 1230, 544, 545,
	546, 547, 548, 549, 550, 551, 552, 553, 0, 554,
	555, 748, 556, 557, 558, 749, 559, 560, 561, 1321,
	562, 751, 563, 564, 0, 565, 566, 567, 0, 568,
	569, 570, 571, 572, 573, 574, 575, 1301, 576, 577,
	579, 578, 580, 0, 581, 0, 582, 583, 584, 0,
	0, 0, 0, 0, 585, 586, 588, 0, 589, 590,
	591, 592, 587, 593, 594, 595, 596, 597, 598, 0,
	600, 601, 599, 602, 603, 1342, 604, 605, 606, 607,
	608, 1231, 609, 0, 610, 611, 618, 619, 620, 612,
	613, 614, 621, 622, 623, 624, 625, 626, 259, 628,
	629, 627, 630, 631, 632, 1284, 633, 754, 634, 615,
	616, 635, 636, 1343, 637, 638, 639, 640, 641, 642,
	643, 1299, 0, 644, 0, 645, 646, 647, 648, 649,
	650, 652, 617, 653, 658, 659, 1346, 654, 655, 656,
	657, 1322, 661, 662, 663, 664, 0, 665, 666, 1217,
	660, 651, 261, 667, 668, 669, 670, 671, 672, 0,
	673, 674, 0, 675, 1311, 1312, 1313, 1314, 0, 687,
	0, 676, 678, 679, 680, 681, 1323, 682, 1324, 1241,
	683, 684, 685, 686, 677, 688, 689, 0, 1224, 690,
	691, 693, 695, 696, 692, 694, 697, 1285, 698, 0,
	0, 699, 700, 701, 1797, 1308, 1345, 0, 703, 702,
	704, 705, 706, 767, 707, 708, 709, 0, 0, 0,
	253, 710, 711, 768, 712, 713, 714, 1221, 0, 254,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1216, 0, 0, 0, 0, 0, 0, 1214,
	1215, 1263, 1235, 1236, 1237, 1233, 1234, 1246, 0, 2066,
	3546, 0, 0, 1245, 0, 0, 0, 0, 306, 307,
	309, 308, 310, 311, 312, 313, 0, 314, 315, 0,
	0, 0, 0, 0, 1287, 1251, 0, 0, 316, 0,
	317, 318, 319, 1327, 320, 321, 322, 323, 324, 325,
	326, 716, 1300, 0, 327, 1307, 328, 1306, 0, 1317,
	329, 330, 331, 332, 333, 334, 335, 1253, 1286, 1218,
	336, 1347, 1348, 723, 0, 337, 338, 1293, 0, 1274,
	0, 339, 340, 341, 342, 343, 344, 345, 346, 0,
	0, 348, 349, 350, 347, 351, 0, 352, 0, 353,
	354, 355, 356, 357, 358, 359, 0, 360, 361, 362,
	1328, 363, 364, 365, 1277, 1275, 1276, 1283, 1279, 1278,
	1282, 366, 367, 368, 369, 370, 1310, 371, 373, 1304,
	1303, 1223, 376, 378, 372, 374, 0, 377, 375, 379,
	0, 380, 381, 382, 0, 0, 383, 1295, 385, 0,
	386, 387, 388, 0, 389, 390, 391, 0, 392, 393,
	1229, 394, 395, 396, 398, 400, 397, 399, 401, 402,
	403, 404, 405, 1318, 1319, 406, 1242, 303, 0, 0,
	0, 0, 0, 407, 408, 409, 1302, 0, 0, 0,
	410, 0, 411, 412, 413, 0, 414, 415, 0, 1329,
	416, 417, 418, 1315, 1316, 419, 420, 421, 422, 423,
	424, 425, 426, 427, 0, 428, 1325, 0, 1252, 429,
	0, 430, 431, 432, 433, 434, 435, 436, 1288, 1289,
	1292, 529, 1331, 437, 438, 439, 0, 440, 441, 442,
	443, 444, 0, 0, 0, 304, 445, 446, 447, 0,
	1330, 738, 448, 530, 449, 1297, 1298, 0, 1258, 0,
	450, 451, 453, 1332, 1290, 1333, 452, 454, 455, 1334,
	456, 0, 0, 0, 457, 458, 459, 460, 461, 462,
	0, 463, 465, 464, 0, 467, 1326, 466, 1335, 468,
	469, 1336, 0, 470, 471, 472, 473, 474, 475, 478,
	1281, 1280, 476, 477, 479, 480, 0, 481, 482, 484,
	487, 483, 485, 486, 488, 501, 502, 489, 490, 491,
	492, 493, 494, 495, 496, 497, 498, 499, 500, 504,
	0, 503, 1337, 505, 506, 507, 508, 509, 516, 518,
	519, 514, 515, 517, 520, 521, 523, 511, 512, 513,
	1338, 522, 510, 1220, 305, 1339, 524, 525, 526, 527,
	1243, 1291, 528, 1305, 531, 532, 0, 0, 533, 0,
	534, 0, 0, 536, 537, 538, 0, 0, 539, 540,
	746, 1340, 541, 1341, 1320, 542, 543, 1230, 544, 545,
	546, 547, 548, 549, 550, 551, 552, 553, 0, 554,
	555, 748, 556, 557, 558, 749, 559, 560, 561, 1321,
	562, 751, 563, 564, 0, 565, 566, 567, 0, 568,
	569, 570, 571, 572, 573, 574, 575, 1301, 576, 577,
	579, 578, 580, 0, 581, 0, 582, 583, 584, 0,
	0, 0, 0, 0, 585, 586, 588, 0, 589, 590,
	591, 592, 587, 593, 594, 595, 596, 597, 598, 0,
	600, 601, 599, 602, 603, 1342, 604, 605, 606, 607,
	608, 1231, 609, 0, 610, 611, 618, 619, 620, 612,
	613, 614, 621, 622, 623, 624, 625, 626, 259, 628,
	629, 627, 630, 631, 632, 1284, 633, 754, 634, 615,
	616, 635, 636, 1343, 637, 638, 639, 640, 641, 642,
	643, 1299, 0, 644, 0, 645, 646, 647, 648, 649,
	650, 652, 617, 653, 658, 659, 1346, 654, 655, 656,
	657, 1322, 661, 662, 663, 664, 0, 665, 666, 1217,
	660, 651, 261, 667, 668, 669, 670, 671, 672, 0,
	673, 674, 0, 675, 1311, 1312, 1313, 1314, 0, 687,
	0, 676, 678, 679, 680, 681, 1323, 682, 1324, 1241,
	683, 684, 685, 686, 677, 688, 689, 0, 1224, 690,
	691, 693, 695, 696, 692, 694, 697, 1285, 698, 0,
	0, 699, 700, 701, 1797, 1308, 1345, 0, 703, 702,
	704, 705, 706, 767, 707, 708, 709, 0, 0, 0,
	253, 710, 711, 768, 712, 713, 714, 1221, 0, 254,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1216, 0, 0, 0, 0, 0, 0, 1214,
	1215, 1263, 1235, 1236, 1237, 1233, 1234, 1246, 0, 2066,
	2064, 0, 0, 1245, 0, 0, 0, 0, 306, 307,
	309, 308, 310, 311, 312, 313, 0, 314, 315, 0,
	0, 0, 0, 0, 1287, 1251, 0, 0, 316, 0,
	317, 318, 319, 1327, 320, 321, 322, 323, 324, 325,
	326, 716, 1300, 0, 327, 1307, 328, 1306, 2978, 1317,
	329, 330, 331, 332, 333, 334, 335, 1253, 1286, 1218,
	336, 1347, 1348, 723, 0, 337, 338, 1293, 0, 1274,
	0, 339, 340, 341, 342, 343, 344, 345, 346, 0,
	0, 348, 349, 350, 347, 351, 0, 352, 0, 353,
	354, 355, 356, 357, 358, 359, 0, 360, 361, 362,
	1328, 363, 364, 365, 1277, 1275, 1276, 1283, 1279, 1278,
	1282, 366, 367, 368, 369, 370, 1310, 371, 373, 1304,
	1303, 1223, 376, 378, 372, 374, 0, 377, 375, 379,
	0, 380, 381, 382, 0, 0, 383, 1295, 385, 0,
	386, 387, 388, 0, 389, 390, 391, 0, 392, 393,
	1229, 394, 395, 396, 398, 400, 397, 399, 401, 402,
	403, 404, 405, 1318, 1319, 406, 1242, 303, 0, 0,
	0, 0, 0, 407, 408, 409, 1302, 0, 0, 0,
	410, 0, 411, 412, 413, 0, 414, 415, 2983, 1329,
	416, 417, 418, 1315, 1316, 419, 420, 421, 422, 423,
	424, 425, 426, 427, 0, 428, 1325, 0, 1252, 429,
	0, 430, 431, 432, 433, 434, 435, 436, 1288, 1289,
	1292, 529, 1331, 437, 438, 439, 0, 440, 441, 442,
	443, 444, 0, 0, 0, 304, 445, 446, 447, 0,
	1330, 738, 448, 530, 449, 1297, 1298, 0, 1258, 0,
	450, 451, 453, 1332, 1290, 1333, 452, 454, 455, 1334,
	456, 0, 0, 0, 457, 458, 459, 460, 461, 462,
	0, 463, 465, 464, 2979, 467, 1326, 466, 1335, 468,
	469, 1336, 0, 470, 471, 472, 473, 474, 475, 478,
	1281, 1280, 476, 477, 479, 480, 0, 481, 482, 484,
	487, 483, 485, 486, 488, 501, 502, 489, 490, 491,
	492, 493, 494, 495, 496, 497, 498, 499, 500, 504,
	0, 503, 1337, 505, 506, 507, 508, 509, 516, 518,
	519, 514, 515, 517, 520, 521, 523, 511, 512, 513,
	1338, 522, 510, 1220, 305, 1339, 524, 525, 526, 527,
	1243, 1291, 528, 1305, 531, 532, 0, 0, 533, 0,
	534, 0, 0, 536, 537, 538, 0, 0, 539, 540,
	746, 1340, 541, 1341, 1320, 542, 543, 1230, 544, 545,
	546, 547, 548, 549, 550, 551, 552, 553, 0, 554,
	555, 748, 556, 557, 558, 749, 559, 560, 561, 1321,
	562, 751, 563, 564, 0, 565, 566, 567, 0, 568,
	569, 570, 571, 572, 573, 574, 575, 1301, 576, 577,
	579, 578, 580, 0, 581, 0, 582, 583, 584, 0,
	0, 0, 0, 0, 585, 586, 588, 0, 589, 590,
	591, 592, 587, 593, 594, 595, 596, 597, 598, 0,
	600, 601, 599, 602, 603, 1342, 604, 605, 606, 607,
	608, 1231, 609, 0, 610, 611, 618, 619, 620, 612,
	613, 614, 621, 622, 623, 624, 625, 626, 0, 628,
	629, 627, 630, 631, 632, 1284, 633, 754, 634, 615,
	616, 635, 636, 1343, 637, 638, 639, 640, 641, 642,
	643, 1299, 0, 644, 0, 645, 646, 647, 648, 649,
	650, 652, 617, 653, 658, 659, 1346, 654, 655, 656,
	657, 1322, 661, 662, 663, 664, 0, 665, 666, 1217,
	660, 651, 0, 667, 668, 669, 670, 671, 672, 0,
	673, 674, 0, 675, 1311, 1312, 1313, 1314, 0, 687,
	2980, 676, 678, 679, 680, 681, 1323, 682, 1324, 1241,
	683, 684, 685, 686, 677, 688, 689, 0, 1224, 690,
	691, 693, 695, 696, 692, 694, 697, 1285, 698, 0,
	0, 699, 700, 701, 764, 1308, 1345, 0, 703, 702,
	704, 705, 706, 767, 707, 708, 709, 0, 0, 0,
	0, 710, 711, 768, 712, 713, 714, 1221, 0, 0,
	0, 0, 2893, 0, 1263, 1235, 1236, 1237, 1233, 1234,
	1246, 0, 1216, 0, 0, 0, 0, 0, 0, 1214,
	1215, 306, 307, 309, 308, 310, 311, 312, 313, 1247,
	314, 315, 0, 1245, 0, 0, 0, 1287, 1251, 0,
	0, 316, 0, 317, 318, 319, 1327, 320, 321, 322,
	323, 324, 325, 326, 716, 1300, 0, 327, 1307, 328,
	1306, 0, 1317, 329, 330, 331, 332, 333, 334, 335,
	1253, 1286, 1218, 336, 1347, 1348, 723, 0, 337, 338,
	1293, 0, 1274, 0, 339, 340, 341, 342, 343, 344,
	345, 346, 0, 0, 348, 349, 350, 347, 351, 0,
	352, 0, 353, 354, 355, 356, 357, 358, 359, 0,
	360, 361, 362, 1328, 363, 364, 365, 1277, 1275, 1276,
	1283, 1279, 1278, 1282, 366, 367, 368, 369, 370, 1310,
	371, 373, 1304, 1303, 1223, 376, 378, 372, 374, 0,
	377, 375, 379, 0, 380, 381, 382, 0, 0, 383,
	1295, 385, 0, 386, 387, 388, 0, 389, 390, 391,
	0, 392, 393, 1229, 394, 395, 396, 398, 400, 397,
	399, 401, 402, 403, 404, 405, 1318, 1319, 406, 1242,
	303, 0, 0, 0, 0, 0, 407, 408, 409, 1302,
	0, 0, 0, 410, 0, 411, 412, 413, 0, 414,
	415, 0, 1329, 416, 417, 418, 1315, 1316, 419, 420,
	421, 422, 423, 424, 425, 426, 427, 0, 428, 1325,
	0, 1252, 429, 0, 430, 431, 432, 433, 434, 435,
	436, 1288, 1289, 1292, 529, 1331, 437, 438, 439, 0,
	440, 441, 442, 443, 444, 0, 0, 0, 304, 445,
	446, 447, 0, 1330, 738, 448, 530, 449, 1297, 1298,
	0, 1258, 0, 450, 451, 453, 1332, 1290, 1333, 452,
	454, 455, 1334, 456, 0, 0, 0, 457, 458, 459,
	460, 461, 462, 0, 463, 465, 464, 0, 467, 1326,
	466, 1335, 468, 469, 1336, 0, 470, 471, 472, 473,
	474, 475, 478, 1281, 1280, 476, 477, 479, 480, 0,
	481, 482, 484, 487, 483, 485, 486, 488, 501, 502,
	489, 490, 491, 492, 493, 494, 495, 496, 497, 498,
	499, 500, 504, 0, 503, 1337, 505, 506, 507, 508,
	509, 516, 518, 519, 514, 515, 517, 520, 521, 523,
	511, 512, 513, 1338, 522, 510, 1220, 305, 1339, 524,
	525, 526, 527, 1243, 1291, 528, 1305, 531, 532, 0,
	0, 533, 0, 534, 0, 0, 536, 537, 538, 0,
	0, 539, 540, 746, 1340, 541, 1341, 1320, 542, 543,
	1230, 544, 545, 546, 547, 548, 549, 550, 551, 552,
	553, 0, 554, 555, 748, 556, 557, 558, 749, 559,
	560, 561, 1321, 562, 751, 563, 564, 0, 565, 566,
	567, 0, 568, 569, 570, 571, 572, 573, 574, 575,
	1301, 576, 577, 579, 578, 580, 0, 581, 0, 582,
	583, 584, 0, 0, 0, 0, 0, 585, 586, 588,
	0, 589, 590, 591, 592, 587, 593, 594, 595, 596,
	597, 598, 0, 600, 601, 599, 602, 603, 1342, 604,
	605, 606, 607, 608, 1231, 609, 0, 610, 611, 618,
	619, 620, 612, 613, 614, 621, 622, 623, 624, 625,
	626, 0, 628, 629, 627, 630, 631, 632, 1284, 633,
	754, 634, 615, 616, 635, 636, 1343, 637, 638, 639,
	640, 641, 642, 643, 1299, 0, 644, 0, 645, 646,
	647, 648, 649, 650, 652, 617, 653, 658, 659, 1346,
	654, 655, 656, 657, 1322, 661, 662, 663, 664, 0,
	665, 666, 1217, 660, 651, 0, 667, 668, 669, 670,
	671, 672, 0, 673, 674, 0, 675, 1311, 1312, 1313,
	1314, 0, 687, 0, 676, 678, 679, 680, 681, 1323,
	682, 1324, 1241, 683, 684, 685, 686, 677, 688, 689,
	0, 1224, 690, 691, 693, 695, 696, 692, 694, 697,
	1285, 698, 0, 0, 699, 700, 701, 764, 1308, 1345,
	0, 703, 702, 704, 705, 706, 767, 707, 708, 709,
	0, 0, 0, 0, 710, 711, 768, 712, 713, 714,
	1221, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1216, 0, 0, 0, 0,
	0, 0, 1214, 1215, 0, 0, 0, 0, 0, 0,
	0, 0, 1247, 2891, 0, 2890, 1245, 1263, 1235, 1236,
	1237, 1233, 1234, 1246, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 306, 307, 309, 308, 310, 311,
	312, 313, 0, 314, 315, 0, 0, 0, 0, 0,
	1287, 1251, 0, 0, 316, 0, 317, 318, 319, 1327,
	320, 321, 322, 323, 324, 325, 326, 716, 1300, 0,
	327, 1307, 328, 1306, 0, 1317, 329, 330, 331, 332,
	333, 334, 335, 1253, 1286, 1218, 336, 1347, 1348, 723,
	0, 337, 338, 1293, 0, 1274, 0, 339, 340, 341,
	342, 343, 344, 345, 346, 0, 0, 348, 349, 350,
	347, 351, 0, 352, 0, 353, 354, 355, 356, 357,
	358, 359, 0, 360, 361, 362, 1328, 363, 364, 365,
	1277, 1275, 1276, 1283, 1279, 1278, 1282, 366, 367, 368,
	369, 370, 1310, 371, 373, 1304, 1303, 1223, 376, 378,
	372, 374, 0, 377, 375, 379, 0, 380, 381, 382,
	0, 0, 383, 1295, 385, 0, 386, 387, 388, 0,
	389, 390, 391, 0, 392, 393, 1229, 394, 395, 396,
	398, 400, 397, 399, 401, 402, 403, 404, 405, 1318,
	1319, 406, 1242, 303, 0, 0, 0, 0, 0, 407,
	408, 409, 1302, 0, 0, 0, 410, 0, 411, 412,
	413, 0, 414, 415, 0, 1329, 416, 417, 418, 1315,
	1316, 419, 420, 421, 422, 423, 424, 425, 426, 427,
	0, 428, 1325, 0, 1252, 429, 0, 430, 431, 432,
	433, 434, 435, 436, 1288, 1289, 1292, 529, 1331, 437,
	438, 439, 0, 440, 441, 442, 443, 444, 0, 0,
	0, 304, 445, 446, 447, 0, 1330, 738, 448, 530,
	449, 1297, 1298, 0, 1258, 0, 450, 451, 453, 1332,
	1290, 1333, 452, 454, 455, 1334, 456, 0, 0, 0,
	457, 458, 459, 460, 461, 462, 0, 463, 465, 464,
	0, 467, 1326, 466, 1335, 468, 469, 1336, 0, 470,
	471, 472, 473, 474, 475, 478, 1281, 1280, 476, 477,
	479, 480, 0, 481, 482, 484, 487, 483, 485, 486,
	488, 501, 502, 489, 490, 491, 492, 493, 494, 495,
	496, 497, 498, 499, 500, 504, 0, 503, 1337, 505,
	506, 507, 508, 509, 516, 518, 519, 514, 515, 517,
	520, 521, 523, 511, 512, 513, 1338, 522, 510, 1220,
	305, 1339, 524, 525, 526, 527, 1243, 1291, 528, 1305,
	531, 532, 0, 0, 533, 0, 534, 0, 0, 536,
	537, 538, 0, 0, 539, 540, 746, 1340, 541, 1341,
	1320, 542, 543, 1230, 544, 545, 546, 547, 548, 549,
	550, 551, 552, 553, 0, 554, 555, 748, 556, 557,
	558, 749, 559, 560, 561, 1321, 562, 751, 563, 564,
	0, 565, 566, 567, 0, 568, 569, 570, 571, 572,
	573, 574, 575, 1301, 576, 577, 579, 578, 580, 0,
	581, 0, 582, 583, 584, 0, 0, 0, 0, 0,
	585, 586, 588, 0, 589, 590, 591, 592, 587, 593,
	594, 595, 596, 597, 598, 0, 600, 601, 599, 602,
	603, 1342, 604, 605, 606, 607, 608, 1231, 609, 0,
	610, 611, 618, 619, 620, 612, 613, 614, 621, 622,
	623, 624, 625, 626, 0, 628, 629, 627, 630, 631,
	632, 1284, 633, 754, 634, 615, 616, 635, 636, 1343,
	637, 638, 639, 640, 641, 642, 643, 1299, 0, 644,
	0, 645, 646, 647, 648, 649, 650, 652, 617, 653,
	658, 659, 1346, 654, 655, 656, 657, 1322, 661, 662,
	663, 664, 0, 665, 666, 1217, 660, 651, 0, 667,
	668, 669, 670, 671, 672, 0, 673, 674, 0, 675,
	1311, 1312, 1313, 1314, 0, 687, 0, 676, 678, 679,
	680, 681, 1323, 682, 1324, 1241, 683, 684, 685, 686,
	677, 688, 689, 0, 1224, 690, 691, 693, 695, 696,
	692, 694, 697, 1285, 698, 0, 0, 699, 700, 701,
	764, 1308, 1345, 0, 703, 702, 704, 705, 706, 767,
	707, 708, 709, 0, 0, 0, 0, 710, 711, 768,
	712, 713, 714, 1221, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1216, 0,
	0, 0, 0, 0, 0, 1214, 1215, 0, 0, 0,
	0, 0, 0, 0, 0, 1247, 2888, 0, 2887, 1245,
	1263, 1235, 1236, 1237, 1233, 1234, 1246, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 306, 307, 309,
	308, 310, 311, 312, 313, 0, 314, 315, 0, 0,
	0, 0, 0, 1287, 1251, 0, 0, 316, 0, 317,
	318, 319, 1327, 320, 321, 322, 323, 324, 325, 326,
	716, 1300, 0, 327, 1307, 328, 1306, 0, 1317, 329,
	330, 331, 332, 333, 334, 335, 1253, 1286, 1218, 336,
	1347, 1348, 723, 0, 337, 338, 1293, 0, 1274, 0,
	339, 340, 341, 342, 343, 344, 345, 346, 0, 0,
	348, 349, 350, 347, 351, 0, 352, 0, 353, 354,
	355, 356, 357, 358, 359, 0, 360, 361, 362, 1328,
	363, 364, 365, 1277, 1275, 1276, 1283, 1279, 1278, 1282,
	366, 367, 368, 369, 370, 1310, 371, 373, 1304, 1303,
	1223, 376, 378, 372, 374, 0, 377, 375, 379, 0,
	380, 381, 382, 0, 0, 383, 1295, 385, 0, 386,
	387, 388, 0, 389, 390, 391, 0, 392, 393, 1229,
	394, 395, 396, 398, 400, 397, 399, 401, 402, 403,
	404, 405, 1318, 1319, 406, 1242, 303, 0, 0, 0,
	0, 0, 407, 408, 409, 1302, 0, 0, 0, 410,
	0, 411, 412, 413, 0, 414, 415, 0, 1329, 416,
	417, 418, 1315, 1316, 419, 420, 421, 422, 423, 424,
	425, 426, 427, 0, 428, 1325, 0, 1252, 429, 0,
	430, 431, 432, 433, 434, 435, 436, 1288, 1289, 1292,
	529, 1331, 437, 438, 439, 0, 440, 441, 442, 443,
	444, 0, 0, 0, 304, 445, 446, 447, 0, 1330,
	738, 448, 530, 449, 1297, 1298, 0, 1258, 0, 450,
	451, 453, 1332, 1290, 1333, 452, 454, 455, 1334, 456,
	0, 0, 0, 457, 458, 459, 460, 461, 462, 0,
	463, 465, 464, 0, 467, 1326, 466, 1335, 468, 469,
	1336, 0, 470, 471, 472, 473, 474, 475, 478, 1281,
	1280, 476, 477, 479, 480, 0, 481, 482, 484, 487,
	483, 485, 486, 488, 501, 502, 489, 490, 491, 492,
	493, 494, 495, 496, 497, 498, 499, 500, 504, 0,
	503, 1337, 505, 506, 507, 508, 509, 516, 518, 519,
	514, 515, 517, 520, 521, 523, 511, 512, 513, 1338,
	522, 510, 1220, 305, 1339, 524, 525, 526, 527, 1243,
	1291, 528, 1305, 531, 532, 0, 0, 533, 0, 534,
	0, 0, 536, 537, 538, 0, 0, 539, 540, 746,
	1340, 541, 1341, 1320, 542, 543, 1230, 544, 545, 546,
	547, 548, 549, 550, 551, 552, 553, 0, 554, 555,
	748, 556, 557, 558, 749, 559, 560, 561, 1321, 562,
	751, 563, 564, 0, 565, 566, 567, 0, 568, 569,
	570, 571, 572, 573, 574, 575, 1301, 576, 577, 579,
	578, 580, 0, 581, 0, 582, 583, 584, 0, 0,
	0, 0, 0, 585, 586, 588, 0, 589, 590, 591,
	592, 587, 593, 594, 595, 596, 597, 598, 0, 600,
	601, 599, 602, 603, 1342, 604, 605, 606, 607, 608,
	1231, 609, 0, 610, 611, 618, 619, 620, 612, 613,
	614, 621, 622, 623, 624, 625, 626, 0, 628, 629,
	627, 630, 631, 632, 1284, 633, 754, 634, 615, 616,
	635, 636, 1343, 637, 638, 639, 640, 641, 642, 643,
	1299, 0, 644, 0, 645, 646, 647, 648, 649, 650,
	652, 617, 653, 658, 659, 1346, 654, 655, 656, 657,
	1322, 661, 662, 663, 664, 0, 665, 666, 1217, 660,
	651, 0, 667, 668, 669, 670, 671, 672, 0, 673,
	674, 0, 675, 1311, 1312, 1313, 1314, 0, 687, 0,
	676, 678, 679, 680, 681, 1323, 682, 1324, 1241, 683,
	684, 685, 686, 677, 688, 689, 0, 1224, 690, 691,
	693, 695, 696, 692, 694, 697, 1285, 698, 0, 0,
	699, 700, 701, 764, 1308, 1345, 0, 703, 702, 704,
	705, 706, 767, 707, 708, 709, 0, 0, 0, 0,
	710, 711, 768, 712, 713, 714, 1221, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1216, 0, 0, 0, 0, 0, 0, 1214, 1215,
	0, 0, 0, 0, 0, 0, 0, 0, 1247, 2885,
	0, 2884, 1245, 1263, 1235, 1236, 1237, 1233, 1234, 1246,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	306, 307, 309, 308, 310, 311, 312, 313, 0, 314,
	315, 0, 0, 0, 0, 0, 1287, 1251, 0, 0,
	316, 0, 317, 318, 319, 1327, 320, 321, 322, 323,
	324, 325, 326, 716, 1300, 0, 327, 1307, 328, 1306,
	0, 1317, 329, 330, 331, 332, 333, 334, 335, 1253,
	1286, 1218, 336, 1347, 1348, 723, 0, 337, 338, 1293,
	0, 1274, 0, 339, 340, 341, 342, 343, 344, 345,
	346, 0, 0, 348, 349, 350, 347, 351, 0, 352,
	0, 353, 354, 355, 356, 357, 358, 359, 0, 360,
	361, 362, 1328, 363, 364, 365, 1277, 1275, 1276, 1283,
	1279, 1278, 1282, 366, 367, 368, 369, 370, 1310, 371,
	373, 1304, 1303, 1223, 376, 378, 372, 374, 0, 377,
	375, 379, 0, 380, 381, 382, 0, 0, 383, 1295,
	385, 0, 386, 387, 388, 0, 389, 390, 391, 0,
	392, 393, 1229, 394, 395, 396, 398, 400, 397, 399,
	401, 402, 403, 404, 405, 1318, 1319, 406, 1242, 303,
	0, 0, 0, 0, 0, 407, 408, 409, 1302, 0,
	0, 0, 410, 0, 411, 412, 413, 0, 414, 415,
	0, 1329, 416, 417, 418, 1315, 1316, 419, 420, 421,
	422, 423, 424, 425, 426, 427, 0, 428, 1325, 0,
	1252, 429, 0, 430, 431, 432, 433, 434, 435, 436,
	1288, 1289, 1292, 529, 1331, 437, 438, 439, 0, 440,
	441, 442, 443, 444, 0, 0, 0, 304, 445, 446,
	447, 0, 1330, 738, 448, 530, 449, 1297, 1298, 0,
	1258, 0, 450, 451, 453, 1332, 1290, 1333, 452, 454,
	455, 1334, 456, 0, 0, 0, 457, 458, 459, 460,
	461, 462, 0, 463, 465, 464, 0, 467, 1326, 466,
	1335, 468, 469, 1336, 0, 470, 471, 472, 473, 474,
	475, 478, 1281, 1280, 476, 477, 479, 480, 0, 481,
	482, 484, 487, 483, 485, 486, 488, 501, 502, 489,
	490, 491, 492, 493, 494, 495, 496, 497, 498, 499,
	500, 504, 0, 503, 1337, 505, 506, 507, 508, 509,
	516, 518, 519, 514, 515, 517, 520, 521, 523, 511,
	512, 513, 1338, 522, 510, 1220, 305, 1339, 524, 525,
	526, 527, 1243, 1291, 528, 1305, 531, 532, 0, 0,
	533, 0, 534, 0, 0, 536, 537, 538, 0, 0,
	539, 540, 746, 1340, 541, 1341, 1320, 542, 543, 1230,
	544, 545, 546, 547, 548, 549, 550, 551, 552, 553,
	0, 554, 555, 748, 556, 557, 558, 749, 559, 560,
	561, 1321, 562, 751, 563, 564, 0, 565, 566, 567,
	0, 568, 569, 570, 571, 572, 573, 574, 575, 1301,
	576, 577, 579, 578, 580, 0, 581, 0, 582, 583,
	584, 0, 0, 0, 0, 0, 585, 586, 588, 0,
	589, 590, 591, 592, 587, 593, 594, 595, 596, 597,
	598, 0, 600, 601, 599, 602, 603, 1342, 604, 605,
	606, 607, 608, 1231, 609, 0, 610, 611, 618, 619,
	620, 612, 613, 614, 621, 622, 623, 624, 625, 626,
	0, 628, 629, 627, 630, 631, 632, 1284, 633, 754,
	634, 615, 616, 635, 636, 1343, 637, 638, 639, 640,
	641, 642, 643, 1299, 0, 644, 0, 645, 646, 647,
	648, 649, 650, 652, 617, 653, 658, 659, 1346, 654,
	655, 656, 657, 1322, 661, 662, 663, 664, 0, 665,
	666, 1217, 660, 651, 0, 667, 668, 669, 670, 671,
	672, 0, 673, 674, 0, 675, 1311, 1312, 1313, 1314,
	0, 687, 0, 676, 678, 679, 680, 681, 1323, 682,
	1324, 1241, 683, 684, 685, 686, 677, 688, 689, 0,
	1224, 690, 691, 693, 695, 696, 692, 694, 697, 1285,
	698, 0, 0, 699, 700, 701, 764, 1308, 1345, 0,
	703, 702, 704, 705, 706, 767, 707, 708, 709, 0,
	0, 0, 0, 710, 711, 768, 712, 713, 714, 1221,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1216, 0, 0, 0, 0, 0,
	0, 1214, 1215, 0, 0, 0, 0, 0, 0, 0,
	0, 1247, 2882, 0, 1899, 1245, 1263, 1235, 1236, 1237,
	1233, 1234, 1246, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 306, 307, 309, 308, 310, 311, 312,
	313, 0, 314, 315, 0, 0, 0, 0, 0, 1287,
	1251, 0, 0, 316, 0, 317, 318, 319, 1327, 320,
	321, 322, 323, 324, 325, 326, 716, 1300, 0, 327,
	1307, 328, 1306, 0, 1317, 329, 330, 331, 332, 333,
	334, 335, 1253, 1286, 1218, 336, 1347, 1348, 723, 0,
	337, 338, 1293, 0, 1274, 0, 339, 340, 341, 342,
	343, 344, 345, 346, 0, 0, 348, 349, 350, 347,
	351, 0, 352, 0, 353, 354, 355, 356, 357, 358,
	359, 0, 360, 361, 362, 1328, 363, 364, 365, 1277,
	1275, 1276, 1283, 1279, 1278, 1282, 366, 367, 368, 369,
	370, 1310, 371, 373, 1304, 1303, 1223, 376, 378, 372,
	374, 0, 377, 375, 379, 0, 380, 381, 382, 0,
	0, 383, 1295, 385, 0, 386, 387, 388, 0, 389,
	390, 391, 0, 392, 393, 1229, 394, 395, 396, 398,
	400, 397, 399, 401, 402, 403, 404, 405, 1318, 1319,
	406, 1242, 303, 0, 0, 0, 0, 0, 407, 408,
	409, 1302, 0, 0, 0, 410, 0, 411, 412, 413,
	0, 414, 415, 0, 1329, 416, 417, 418, 1315, 1316,
	419, 420, 421, 422, 423, 424, 425, 426, 427, 0,
	428, 1325, 0, 1252, 429, 0, 430, 431, 432, 433,
	434, 435, 436, 1288, 1289, 1292, 529, 1331, 437, 438,
	439, 0, 440, 441, 442, 443, 444, 0, 0, 0,
	304, 445, 446, 447, 0, 1330, 738, 448, 530, 449,
	1297, 1298, 0, 1258, 0, 450, 451, 453, 1332, 1290,
	1333, 452, 454, 455, 1334, 456, 0, 0, 0, 457,
	458, 459, 460, 461, 462, 0, 463, 465, 464, 0,
	467, 1326, 466, 1335, 468, 469, 1336, 0, 470, 471,
	472, 473, 474, 475, 478, 1281, 1280, 476, 477, 479,
	480, 0, 481, 482, 484, 487, 483, 485, 486, 488,
	501, 502, 489, 490, 491, 492, 493, 494, 495, 496,
	497, 498, 499, 500, 504, 0, 503, 1337, 505, 506,
	507, 508, 509, 516, 518, 519, 514, 515, 517, 520,
	521, 523, 511, 512, 513, 1338, 522, 510, 1220, 305,
	1339, 524, 525, 526, 527, 1243, 1291, 528, 1305, 531,
	532, 0, 0, 533, 0, 534, 0, 0, 536, 537,
	538, 0, 0, 539, 540, 746, 1340, 541, 1341, 1320,
	542, 543, 1230, 544, 545, 546, 547, 548, 549, 550,
	551, 552, 553, 0, 554, 555, 748, 556, 557, 558,
	749, 559, 560, 561, 1321, 562, 751, 563, 564, 0,
	565, 566, 567, 0, 568, 569, 570, 571, 572, 573,
	574, 575, 1301, 576, 577, 579, 578, 580, 0, 581,
	0, 582, 583, 584, 0, 0, 0, 0, 0, 585,
	586, 588, 0, 589, 590, 591, 592, 587, 593, 594,
	595, 596, 597, 598, 0, 600, 601, 599, 602, 603,
	1342, 604, 605, 606, 607, 608, 1231, 609, 0, 610,
	611, 618, 619, 620, 612, 613, 614, 621, 622, 623,
	624, 625, 626, 0, 628, 629, 627, 630, 631, 632,
	1284, 633, 754, 634, 615, 616, 635, 636, 1343, 637,
	638, 639, 640, 641, 642, 643, 1299, 0, 644, 0,
	645, 646, 647, 648, 649, 650, 652, 617, 653, 658,
	659, 1346, 654, 655, 656, 657, 1322, 661, 662, 663,
	664, 0, 665, 666, 1217, 660, 651, 0, 667, 668,
	669, 670, 671, 672, 0, 673, 674, 0, 675, 1311,
	1312, 1313, 1314, 0, 687, 0, 676, 678, 679, 680,
	681, 1323, 682, 1324, 1241, 683, 684, 685, 686, 677,
	688, 689, 0, 1224, 690, 691, 693, 695, 696, 692,
	694, 697, 1285, 698, 0, 0, 699, 700, 701, 764,
	1308, 1345, 0, 703, 702, 704, 705, 706, 767, 707,
	708, 709, 1898, 0, 0, 0, 710, 711, 768, 712,
	713, 714, 1221, 0, 0, 0, 0, 1210, 0, 1263,
	1235, 1236, 1237, 1233, 1234, 1246, 0, 1216, 0, 0,
	0, 0, 0, 0, 1214, 1215, 306, 307, 309, 308,
	310, 311, 312, 313, 1247, 314, 315, 0, 1245, 0,
	0, 0, 1287, 1251, 0, 0, 316, 0, 317, 318,
	319, 1327, 320, 321, 322, 323, 324, 325, 326, 716,
	1300, 0, 327, 1307, 328, 1306, 0, 1317, 329, 330,
	331, 332, 333, 334, 335, 1253, 1286, 1218, 336, 1347,
	1348, 723, 0, 337, 338, 1293, 0, 1274, 0, 339,
	340, 341, 342, 343, 344, 345, 346, 0, 0, 348,
	349, 350, 347, 351, 0, 352, 0, 353, 354, 355,
	356, 357, 358, 359, 0, 360, 361, 362, 1328, 363,
	364, 365, 1277, 1275, 1276, 1283, 1279, 1278, 1282, 366,
	367, 368, 369, 370, 1310, 371, 373, 1304, 1303, 1223,
	376, 378, 372, 374, 0, 377, 375, 379, 0, 380,
	381, 382, 0, 0, 383, 1295, 385, 0, 386, 387,
	388, 0, 389, 390, 391, 0, 392, 393, 1229, 394,
	395, 396, 398, 400, 397, 399, 401, 402, 403, 404,
	405, 1318, 1319, 406, 1242, 303, 0, 0, 0, 0,
	0, 407, 408, 409, 1302, 0, 0, 0, 410, 0,
	411, 412, 413, 0, 414, 415, 0, 1329, 416, 417,
	418, 1315, 1316, 419, 420, 421, 422, 423, 424, 425,
	426, 427, 0, 428, 1325, 0, 1252, 429, 0, 430,
	431, 432, 433, 434, 435, 436, 1288, 1289, 1292, 529,
	1331, 437, 438, 439, 0, 440, 441, 442, 443, 444,
	0, 0, 0, 304, 445, 446, 447, 0, 1330, 738,
	448, 530, 449, 1297, 1298, 0, 1258, 0, 450, 451,
	453, 1332, 1290, 1333, 452, 454, 455, 1334, 456, 0,
	0, 0, 457, 458, 459, 460, 461, 462, 0, 463,
	465, 464, 0, 467, 1326, 466, 1335, 468, 469, 1336,
	0, 470, 471, 472, 473, 474, 475, 478, 1281, 1280,
	476, 477, 479, 480, 0, 481, 482, 484, 487, 483,
	485, 486, 488, 501, 502, 489, 490, 491, 492, 493,
	494, 495, 496, 497, 498, 499, 500, 504, 0, 503,
	1337, 505, 506, 507, 508, 509, 516, 518, 519, 514,
	515, 517, 520, 521, 523, 511, 512, 513, 1338, 522,
	510, 1220, 305, 1339, 524, 525, 526, 527, 1243, 1291,
	528, 1305, 531, 532, 0, 0, 533, 0, 534, 1225,
	0, 536, 537, 538, 0, 0, 539, 540, 746, 1340,
	541, 1341, 1320, 542, 543, 1230, 544, 545, 546, 547,
	548, 549, 550, 551, 552, 553, 0, 554, 555, 748,
	556, 557, 558, 749, 559, 560, 561, 1321, 562, 751,
	563, 564, 0, 565, 566, 567, 0, 568, 569, 570,
	571, 572, 573, 574, 575, 1301, 576, 577, 579, 578,
	580, 0, 581, 0, 582, 583, 584, 0, 0, 0,
	0, 0, 585, 586, 588, 0, 589, 590, 591, 592,
	587, 593, 594, 595, 596, 597, 598, 0, 600, 601,
	599, 602, 603, 1342, 604, 605, 606, 607, 608, 1231,
	609, 0, 610, 611, 618, 619, 620, 612, 613, 614,
	621, 622, 623, 624, 625, 626, 0, 628, 629, 627,
	630, 631, 632, 1284, 633, 754, 634, 615, 616, 635,
	636, 1343, 637, 638, 639, 640, 641, 642, 643, 1299,
	0, 644, 0, 645, 646, 647, 648, 649, 650, 652,
	617, 653, 658, 659, 1346, 654, 655, 656, 657, 1322,
	661, 662, 663, 664, 0, 665, 666, 1217, 660, 651,
	0, 667, 668, 669, 670, 671, 672, 0, 673, 674,
	0, 675, 1311, 1312, 1313, 1314, 0, 687, 0, 676,
	678, 679, 680, 681, 1323, 682, 1324, 1241, 683, 684,
	685, 686, 677, 688, 689, 0, 1224, 690, 691, 693,
	695, 696, 692, 694, 697, 1285, 698, 0, 0, 699,
	700, 701, 764, 1308, 1345, 0, 703, 702, 704, 705,
	706, 767, 707, 708, 709, 0, 0, 0, 0, 710,
	711, 768, 712, 713, 714, 1221, 0, 0, 0, 0,
	0, 0, 1263, 1235, 1236, 1237, 1233, 1234, 1246, 0,
	1216, 0, 0, 0, 0, 0, 0, 1214, 1215, 306,
	307, 309, 308, 310, 311, 312, 313, 1247, 314, 315,
	0, 1245, 0, 0, 0, 1287, 1251, 0, 0, 316,
	0, 317, 318, 319, 1327, 320, 321, 322, 323, 324,
	325, 326, 716, 1300, 0, 327, 1307, 328, 1306, 0,
	1317, 329, 330, 331, 332, 333, 334, 335, 1253, 1286,
	1218, 336, 1347, 1348, 723, 0, 337, 338, 1293, 0,
	1274, 0, 339, 340, 341, 342, 343, 344, 345, 346,
	0, 0, 348, 349, 350, 347, 351, 0, 352, 0,
	353, 354, 355, 356, 5208, 358, 359, 0, 360, 361,
	362, 1328, 363, 364, 365, 1277, 1275, 1276, 1283, 1279,
	1278, 1282, 366, 367, 368, 369, 370, 1310, 371, 373,
	1304, 1303, 1223, 376, 378, 372, 374, 0, 377, 375,
	379, 0, 380, 381, 382, 0, 0, 383, 1295, 385,
	0, 386, 387, 388, 0, 389, 390, 391, 0, 392,
	393, 1229, 394, 395, 396, 398, 400, 397, 399, 401,
	402, 403, 404, 405, 1318, 1319, 406, 1242, 303, 0,
	0, 0, 0, 0, 407, 408, 409, 1302, 0, 0,
	0, 410, 0, 411, 412, 413, 0, 414, 415, 0,
	1329, 416, 417, 418, 1315, 1316, 419, 420, 421, 422,
	423, 424, 425, 426, 427, 0, 428, 1325, 0, 1252,
	429, 0, 430, 431, 432, 433, 434, 435, 436, 1288,
	1289, 1292, 529, 1331, 437, 438, 439, 0, 440, 441,
	442, 443, 444, 0, 0, 0, 304, 445, 446, 447,
	0, 1330, 738, 448, 530, 449, 1297, 1298, 0, 1258,
	0, 450, 451, 453, 1332, 1290, 1333, 452, 454, 455,
	1334, 456, 0, 0, 0, 457, 458, 459, 460, 461,
	462, 0, 463, 465, 464, 0, 467, 1326, 466, 1335,
	468, 469, 1336, 0, 470, 471, 472, 473, 474, 475,
	478, 1281, 1280, 476, 477, 479, 480, 0, 481, 482,
	484, 487, 483, 485, 486, 488, 501, 502, 489, 490,
	491, 492, 493, 494, 495, 496, 497, 498, 499, 500,
	504, 0, 503, 1337, 505, 506, 507, 508, 509, 516,
	518, 519, 514, 515, 517, 520, 521, 523, 511, 512,
	513, 1338, 522, 510, 1220, 305, 1339, 524, 525, 526,
	527, 1243, 1291, 528, 1305, 531, 532, 0, 0, 533,
	0, 534, 1225, 0, 536, 537, 538, 0, 0, 539,
	540, 746, 1340, 541, 1341, 1320, 542, 543, 1230, 544,
	545, 546, 547, 548, 549, 550, 551, 552, 553, 0,
	554, 555, 748, 556, 557, 558, 749, 559, 560, 561,
	1321, 562, 751, 563, 564, 0, 565, 566, 567, 0,
	568, 569, 570, 571, 572, 573, 574, 575, 1301, 576,
	577, 579, 578, 580, 0, 581, 0, 582, 583, 584,
	0, 0, 0, 0, 0, 585, 586, 588, 0, 589,
	590, 591, 592, 587, 593, 594, 595, 596, 597, 598,
	0, 600, 601, 599, 602, 603, 1342, 604, 605, 606,
	607, 608, 1231, 609, 0, 610, 611, 618, 619, 620,
	612, 613, 614, 621, 622, 623, 624, 625, 626, 0,
	628, 629, 627, 630, 631, 632, 1284, 633, 754, 634,
	615, 616, 635, 636, 1343, 637, 638, 639, 640, 641,
	642, 643, 1299, 0, 644, 0, 645, 646, 647, 648,
	649, 650, 652, 617, 653, 658, 659, 1346, 654, 655,
	656, 657, 1322, 661, 662, 663, 664, 0, 665, 666,
	1217, 660, 651, 0, 667, 668, 669, 670, 671, 672,
	0, 673, 674, 0, 675, 1311, 1312, 1313, 1314, 0,
	687, 0, 676, 678, 679, 680, 681, 1323, 682, 1324,
	1241, 683, 684, 685, 686, 677, 688, 689, 0, 1224,
	690, 691, 693, 695, 696, 692, 694, 697, 1285, 698,
	0, 0, 699, 700, 701, 764, 1308, 1345, 0, 703,
	702, 704, 705, 706, 767, 707, 708, 709, 0, 0,
	0, 0, 710, 711, 768, 712, 713, 714, 1221, 0,
	0, 0, 0, 0, 0, 1263, 1235, 1236, 1237, 1233,
	1234, 1246, 0, 1216, 0, 0, 0, 0, 0, 0,
	1214, 1215, 306, 307, 309, 308, 310, 311, 312, 313,
	1247, 314, 315, 0, 1245, 0, 0, 0, 1287, 1251,
	0, 0, 316, 0, 317, 318, 319, 1327, 320, 321,
	322, 323, 324, 325, 326, 716, 1300, 0, 327, 1307,
	328, 1306, 0, 1317, 329, 330, 331, 332, 333, 334,
	335, 1253, 1286, 1218, 336, 1347, 1348, 723, 0, 337,
	338, 1293, 0, 1274, 0, 339, 340, 341, 342, 343,
	344, 345, 346, 0, 0, 348, 349, 350, 347, 351,
	0, 352, 0, 353, 354, 355, 356, 357, 358, 359,
	0, 360, 361, 362, 1328, 363, 364, 365, 1277, 1275,
	1276, 1283, 1279, 1278, 1282, 366, 367, 368, 369, 370,
	1310, 371, 373, 1304, 1303, 1223, 376, 378, 372, 374,
	0, 377, 375, 379, 0, 380, 381, 382, 0, 0,
	383, 1295, 385, 0, 386, 387, 388, 0, 389, 390,
	391, 0, 392, 393, 1229, 394, 395, 396, 398, 400,
	397, 399, 401, 402, 403, 404, 405, 1318, 1319, 406,
	1242, 303, 0, 0, 0, 0, 0, 407, 408, 409,
	1302, 0, 0, 0, 410, 0, 411, 412, 413, 0,
	414, 415, 0, 1329, 416, 417, 418, 1315, 1316, 419,
	420, 421, 422, 423, 424, 425, 426, 427, 0, 428,
	1325, 0, 1252, 429, 0, 430, 431, 432, 433, 434,
	435, 436, 1288, 1289, 1292, 529, 1331, 437, 438, 439,
	0, 440, 441, 442, 443, 444, 0, 0, 0, 2723,
	445, 446, 447, 0, 1330, 738, 448, 530, 449, 1297,
	1298, 0, 1258, 0, 450, 451, 453, 1332, 1290, 1333,
	452, 454, 455, 1334, 456, 0, 0, 0, 457, 458,
	459, 460, 461, 462, 0, 463, 465, 464, 0, 467,
	1326, 466, 1335, 468, 469, 1336, 0, 470, 471, 472,
	473, 474, 475, 478, 1281, 1280, 476, 477, 479, 480,
	0, 481, 482, 484, 487, 483, 485, 486, 488, 501,
	502, 489, 490, 491, 492, 493, 494, 495, 496, 497,
	498, 499, 500, 504, 0, 503, 1337, 505, 506, 507,
	508, 509, 516, 518, 519, 514, 515, 517, 520, 521,
	523, 511, 512, 513, 1338, 522, 510, 1220, 305, 1339,
	524, 525, 526, 527, 1243, 1291, 528, 1305, 531, 532,
	0, 0, 533, 0, 534, 0, 0, 536, 537, 538,
	0, 0, 539, 540, 746, 1340, 541, 1341, 1320, 542,
	543, 1230, 544, 545, 546, 547, 548, 549, 550, 551,
	552, 553, 0, 554, 555, 748, 556, 557, 558, 749,
	559, 560, 561, 1321, 562, 751, 563, 564, 2722, 565,
	566, 567, 0, 568, 569, 570, 571, 572, 573, 574,
	575, 1301, 576, 577, 579, 578, 580, 0, 581, 0,
	582, 583, 584, 0, 0, 0, 0, 0, 585, 586,
	588, 0, 589, 590, 591, 592, 587, 593, 594, 595,
	596, 597, 598, 0, 600, 601, 599, 602, 603, 1342,
	604, 605, 606, 607, 608, 1231, 609, 0, 610, 611,
	618, 619, 620, 612, 613, 614, 621, 622, 623, 624,
	625, 626, 0, 628, 629, 627, 630, 631, 632, 1284,
	633, 754, 634, 615, 616, 635, 636, 1343, 637, 638,
	639, 640, 641, 642, 643, 1299, 0, 644, 0, 645,
	646, 647, 648, 649, 650, 652, 617, 653, 658, 659,
	1346, 654, 655, 656, 657, 1322, 661, 662, 663, 664,
	0, 665, 666, 1217, 660, 651, 0, 667, 668, 669,
	670, 671, 672, 0, 673, 674, 0, 675, 1311, 1312,
	1313, 1314, 0, 687, 0, 676, 678, 679, 680, 681,
	1323, 682, 1324, 1241, 683, 684, 685, 686, 677, 688,
	689, 0, 1224, 690, 691, 693, 695, 696, 692, 694,
	697, 1285, 698, 0, 0, 699, 700, 701, 764, 1308,
	1345, 0, 703, 702, 704, 705, 706, 767, 707, 708,
	709, 0, 0, 0, 0, 710, 711, 768, 712, 713,
	714, 1221, 0, 0, 0, 0, 0, 0, 1263, 1235,
	1236, 1237, 1233, 1234, 1246, 0, 1216, 0, 0, 0,
	0, 0, 0, 1214, 1215, 306, 307, 309, 308, 310,
	311, 312, 313, 1247, 314, 315, 0, 1245, 0, 0,
	0, 1287, 1251, 0, 0, 316, 0, 317, 318, 319,
	1327, 320, 321, 322, 323, 324, 325, 326, 716, 1300,
	0, 327, 1307, 328, 1306, 0, 1317, 329, 330, 331,
	332, 333, 334, 335, 1253, 1286, 1218, 336, 1347, 1348,
	723, 0, 337, 338, 1293, 0, 1274, 0, 339, 340,
	341, 342, 343, 344, 345, 346, 0, 0, 348, 349,
	350, 347, 351, 0, 352, 0, 353, 354, 355, 356,
	4918, 358, 359, 0, 360, 361, 362, 1328, 363, 364,
	365, 1277, 1275, 1276, 1283, 1279, 1278, 1282, 366, 367,
	368, 369, 370, 1310, 371, 373, 1304, 1303, 1223, 376,
	378, 372, 374, 0, 377, 375, 379, 0, 380, 381,
	382, 0, 0, 383, 1295, 385, 0, 386, 387, 388,
	0, 389, 390, 391, 0, 392, 393, 1229, 394, 395,
	396, 398, 400, 397, 399, 401, 402, 403, 404, 405,
	1318, 1319, 406, 1242, 303, 0, 0, 0, 0, 0,
	407, 408, 409, 1302, 0, 0, 0, 410, 0, 411,
	412, 413, 0, 414, 415, 0, 1329, 416, 417, 418,
	1315, 1316, 419, 420, 421, 422, 423, 424, 425, 426,
	427, 0, 428, 1325, 0, 1252, 429, 0, 430, 431,
	432, 433, 434, 435, 436, 1288, 1289, 1292, 529, 1331,
	437, 438, 439, 0, 440, 441, 442, 443, 444, 0,
	0, 0, 304, 445, 446, 447, 0, 1330, 738, 448,
	530, 449, 1297, 1298, 0, 1258, 0, 450, 451, 453,
	1332, 1290, 1333, 452, 454, 455, 1334, 456, 0, 0,
	0, 457, 458, 459, 460, 461, 462, 0, 463, 465,
	464, 0, 467, 1326, 466, 1335, 468, 469, 1336, 0,
	470, 471, 472, 473, 474, 475, 478, 1281, 1280, 476,
	477, 479, 480, 0, 481, 482, 484, 487, 483, 485,
	486, 488, 501, 502, 489, 490, 491, 492, 493, 494,
	495, 496, 497, 498, 499, 500, 504, 0, 503, 1337,
	505, 506, 507, 508, 509, 516, 518, 519, 514, 515,
	517, 520, 521, 523, 511, 512, 513, 1338, 522, 510,
	1220, 305, 1339, 524, 525, 526, 527, 1243, 1291, 528,
	1305, 531, 532, 0, 0, 533, 0, 534, 1225, 0,
	536, 537, 538, 0, 0, 539, 540, 746, 1340, 541,
	1341, 1320, 542, 543, 1230, 544, 545, 546, 547, 548,
	549, 550, 551, 552, 553, 0, 554, 555, 748, 556,
	557, 558, 749, 559, 560, 561, 1321, 562, 751, 563,
	564, 0, 565, 566, 567, 0, 568, 569, 570, 571,
	572, 573, 574, 575, 1301, 576, 577, 579, 578, 580,
	0, 581, 0, 582, 583, 584, 0, 0, 0, 0,
	0, 585, 586, 588, 0, 589, 590, 591, 592, 587,
	593, 594, 595, 596, 597, 598, 0, 600, 601, 599,
	602, 603, 1342, 604, 605, 606, 607, 608, 1231, 609,
	0, 610, 611, 618, 619, 620, 612, 613, 614, 621,
	622, 623, 624, 625, 626, 0, 628, 629, 627, 630,
	631, 632, 1284, 633, 754, 634, 615, 616, 635, 636,
	1343, 637, 638, 639, 640, 641, 642, 643, 1299, 0,
	644, 0, 645, 646, 647, 648, 649, 650, 652, 617,
	653, 658, 659, 1346, 654, 655, 656, 657, 1322, 661,
	662, 663, 664, 0, 665, 666, 1217, 660, 651, 0,
	667, 668, 669, 670, 671, 672, 0, 673, 674, 0,
	675, 1311, 1312, 1313, 1314, 0, 687, 0, 676, 678,
	679, 680, 681, 1323, 682, 1324, 1241, 683, 684, 685,
	686, 677, 688, 689, 0, 1224, 690, 691, 693, 695,
	696, 692, 694, 697, 1285, 698, 0, 0, 699, 700,
	701, 764, 1308, 1345, 0, 703, 702, 704, 705, 706,
	767, 707, 708, 709, 0, 0, 0, 0, 710, 711,
	768, 712, 713, 714, 1221, 0, 0, 0, 0, 0,
	0, 1263, 1235, 1236, 1237, 1233, 1234, 1246, 0, 1216,
	0, 0, 0, 0, 0, 0, 1214, 1215, 306, 307,
	309, 308, 310, 311, 312, 313, 1247, 314, 315, 0,
	1245, 0, 0, 0, 1287, 1251, 0, 0, 316, 0,
	317, 318, 319, 1327, 320, 321, 322, 323, 324, 325,
	326, 716, 1300, 0, 327, 1307, 328, 1306, 0, 1317,
	329, 330, 331, 332, 333, 334, 335, 1253, 1286, 1218,
	336, 1347, 1348, 723, 0, 337, 338, 1293, 0, 1274,
	0, 339, 340, 341, 342, 343, 344, 345, 346, 0,
	0, 348, 349, 350, 347, 351, 0, 352, 0, 353,
	354, 355, 356, 357, 358, 359, 0, 360, 361, 362,
	1328, 363, 364, 365, 1277, 1275, 1276, 1283, 1279, 1278,
	1282, 366, 367, 368, 369, 370, 1310, 371, 373, 1304,
	1303, 1223, 376, 378, 372, 374, 0, 377, 375, 379,
	0, 380, 381, 382, 0, 0, 383, 1295, 385, 0,
	386, 387, 388, 0, 389, 390, 391, 0, 392, 393,
	1229, 394, 395, 396, 398, 400, 397, 399, 401, 402,
	403, 404, 405, 1318, 1319, 406, 1242, 303, 0, 0,
	0, 0, 0, 407, 408, 409, 1302, 0, 0, 0,
	410, 0, 411, 412, 413, 0, 414, 415, 0, 1329,
	416, 417, 418, 1315, 1316, 419, 420, 421, 422, 423,
	424, 425, 426, 427, 0, 428, 1325, 0, 1252, 429,
	0, 430, 431, 432, 433, 434, 435, 436, 1288, 1289,
	1292, 529, 1331, 437, 438, 439, 0, 440, 441, 442,
	443, 444, 0, 0, 0, 304, 445, 446, 447, 0,
	1330, 738, 448, 530, 449, 1297, 1298, 0, 1258, 0,
	450, 451, 453, 1332, 1290, 1333, 452, 454, 455, 1334,
	456, 0, 0, 0, 457, 458, 459, 460, 461, 462,
	0, 463, 465, 464, 0, 467, 1326, 466, 1335, 468,
	469, 1336, 0, 470, 471, 472, 473, 474, 475, 478,
	1281, 1280, 476, 477, 479, 480, 0, 481, 482, 484,
	487, 483, 485, 486, 488, 501, 502, 489, 490, 491,
	492, 493, 494, 495, 496, 497, 498, 499, 500, 504,
	0, 503, 1337, 505, 506, 507, 508, 509, 516, 518,
	519, 514, 515, 517, 520, 521, 523, 511, 512, 513,
	1338, 522, 510, 1220, 305, 1339, 524, 525, 526, 527,
	1243, 1291, 528, 1305, 531, 532, 0, 0, 533, 0,
	534, 1225, 0, 536, 537, 538, 0, 0, 539, 540,
	746, 1340, 541, 1341, 1320, 542, 543, 1230, 544, 545,
	546, 547, 548, 549, 550, 551, 552, 553, 0, 554,
	555, 748, 556, 557, 558, 749, 559, 560, 561, 1321,
	562, 751, 563, 564, 0, 565, 566, 567, 0, 568,
	569, 570, 571, 572, 573, 574, 575, 1301, 576, 577,
	579, 578, 580, 0, 581, 0, 582, 583, 584, 0,
	0, 0, 0, 0, 585, 586, 588, 0, 589, 590,
	591, 592, 587, 593, 594, 595, 596, 597, 598, 0,
	600, 601, 599, 602, 603, 1342, 604, 605, 606, 607,
	608, 1231, 609, 0, 610, 611, 618, 619, 620, 612,
	613, 614, 621, 622, 623, 624, 625, 626, 0, 628,
	629, 627, 630, 631, 632, 1284, 633, 754, 634, 615,
	616, 635, 636, 1343, 637, 638, 639, 640, 641, 642,
	643, 1299, 0, 644, 0, 645, 646, 647, 648, 649,
	650, 652, 617, 653, 658, 659, 1346, 654, 655, 656,
	657, 1322, 661, 662, 663, 664, 0, 665, 666, 1217,
	660, 651, 0, 667, 668, 669, 670, 671, 672, 0,
	673, 674, 0, 675, 1311, 1312, 1313, 1314, 0, 687,
	0, 676, 678, 679, 680, 681, 1323, 682, 1324, 1241,
	683, 684, 685, 686, 677, 688, 689, 0, 1224, 690,
	691, 693, 695, 696, 692, 694, 697, 1285, 698, 0,
	0, 699, 700, 701, 764, 1308, 1345, 0, 703, 702,
	704, 705, 706, 767, 707, 708, 709, 0, 0, 0,
	0, 710, 711, 768, 712, 713, 714, 1221, 0, 0,
	0, 0, 0, 0, 1263, 1235, 1236, 1237, 1233, 1234,
	1246, 0, 1216, 0, 0, 0, 0, 0, 0, 1214,
	1215, 306, 307, 309, 308, 310, 311, 312, 313, 1247,
	314, 315, 0, 1245, 0, 0, 0, 1287, 1251, 0,
	0, 316, 0, 317, 318, 319, 1327, 320, 321, 322,
	323, 324, 325, 326, 716, 1300, 0, 327, 1307, 328,
	1306, 0, 1317, 329, 330, 331, 332, 333, 334, 335,
	1253, 1286, 1218, 336, 1347, 1348, 723, 0, 337, 338,
	1293, 0, 1274, 0, 339, 340, 341, 342, 343, 344,
	345, 346, 0, 0, 348, 349, 350, 347, 351, 0,
	352, 0, 353, 354, 355, 356, 357, 358, 359, 0,
	360, 361, 362, 1328, 363, 364, 365, 1277, 1275, 1276,
	1283, 1279, 1278, 1282, 366, 367, 368, 369, 370, 1310,
	371, 373, 1304, 1303, 1223, 376, 378, 372, 374, 0,
	377, 375, 379, 0, 380, 381, 382, 0, 0, 383,
	1295, 385, 0, 386, 387, 388, 0, 389, 390, 391,
	0, 392, 393, 1229, 394, 395, 396, 398, 400, 397,
	399, 401, 402, 403, 404, 405, 1318, 1319, 406, 1242,
	303, 0, 0, 0, 0, 0, 407, 408, 409, 1302,
	0, 0, 0, 410, 0, 411, 412, 413, 0, 414,
	415, 0, 1329, 416, 417, 418, 1315, 1316, 419, 420,
	421, 422, 423, 424, 425, 426, 427, 0, 428, 1325,
	0, 1252, 429, 0, 430, 431, 432, 433, 434, 435,
	436, 1288, 1289, 1292, 529, 1331, 437, 438, 439, 0,
	440, 441, 442, 443, 444, 0, 0, 0, 304, 445,
	446, 447, 0, 1330, 738, 448, 530, 449, 1297, 1298,
	0, 1258, 0, 450, 451, 453, 1332, 1290, 1333, 452,
	454, 455, 1334, 456, 0, 0, 0, 457, 458, 459,
	460, 461, 462, 0, 463, 465, 464, 0, 467, 1326,
	466, 1335, 468, 469, 1336, 0, 470, 471, 472, 473,
	474, 475, 478, 1281, 1280, 476, 477, 479, 480, 0,
	481, 482, 484, 487, 483, 485, 486, 488, 501, 502,
	489, 490, 491, 492, 493, 494, 495, 496, 497, 498,
	499, 500, 504, 0, 503, 1337, 505, 506, 507, 508,
	509, 516, 518, 519, 514, 515, 517, 520, 521, 523,
	511, 512, 513, 1338, 522, 510, 1220, 4460, 1339, 524,
	525, 526, 527, 1243, 1291, 528, 1305, 531, 532, 0,
	0, 533, 0, 534, 0, 0, 536, 537, 538, 0,
	0, 539, 540, 746, 1340, 541, 1341, 1320, 542, 543,
	1230, 544, 545, 546, 547, 548, 549, 550, 551, 552,
	553, 0, 554, 555, 748, 556, 557, 558, 749, 559,
	560, 561, 1321, 562, 751, 563, 564, 0, 565, 566,
	567, 0, 568, 569, 570, 571, 572, 573, 574, 575,
	1301, 576, 577, 579, 578, 580, 0, 581, 0, 582,
	583, 584, 0, 0, 0, 0, 0, 585, 586, 588,
	0, 589, 590, 591, 592, 587, 593, 594, 595, 596,
	597, 598, 0, 600, 601, 599, 602, 603, 1342, 604,
	605, 606, 607, 608, 1231, 609, 0, 610, 611, 618,
	619, 620, 612, 613, 614, 621, 622, 623, 624, 625,
	626, 0, 628, 629, 627, 630, 631, 632, 1284, 633,
	754, 634, 615, 616, 635, 636, 1343, 637, 638, 639,
	640, 641, 642, 643, 1299, 0, 644, 0, 645, 646,
	647, 648, 649, 650, 652, 617, 653, 658, 659, 1346,
	654, 655, 656, 657, 1322, 661, 662, 663, 664, 0,
	665, 666, 1217, 660, 651, 0, 667, 668, 669, 670,
	671, 672, 0, 673, 674, 0, 675, 1311, 1312, 1313,
	1314, 0, 687, 0, 676, 678, 679, 680, 681, 1323,
	682, 1324, 1241, 683, 684, 685, 686, 677, 688, 689,
	0, 1224, 690, 691, 693, 695, 696, 692, 694, 697,
	1285, 698, 0, 0, 699, 700, 701, 764, 1308, 1345,
	0, 703, 702, 704, 705, 706, 767, 707, 708, 709,
	0, 0, 0, 0, 710, 711, 768, 712, 713, 714,
	1221, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1216, 0, 0, 0, 0,
	0, 0, 1214, 1215, 2136, 1263, 1235, 1236, 1237, 1233,
	1234, 1246, 1247, 0, 0, 0, 1245, 0, 0, 0,
	0, 0, 306, 307, 309, 308, 310, 311, 312, 313,
	0, 314, 315, 0, 0, 0, 0, 0, 1287, 1251,
	0, 0, 316, 0, 317, 318, 319, 1327, 320, 321,
	322, 323, 324, 325, 326, 716, 1300, 0, 327, 1307,
	328, 1306, 0, 1317, 329, 330, 331, 332, 333, 334,
	335, 1253, 1286, 1218, 336, 1347, 1348, 723, 0, 337,
	338, 1293, 0, 1274, 0, 339, 340, 341, 342, 343,
	344, 345, 346, 0, 0, 348, 349, 350, 347, 351,
	0, 352, 0, 353, 354, 355, 356, 357, 358, 359,
	0, 360, 361, 362, 1328, 363, 364, 365, 1277, 1275,
	1276, 1283, 1279, 1278, 1282, 366, 367, 368, 369, 370,
	1310, 371, 373, 1304, 1303, 1223, 376, 378, 372, 374,
	0, 377, 375, 379, 0, 380, 381, 382, 0, 0,
	383, 1295, 385, 0, 386, 387, 388, 0, 389, 390,
	391, 0, 392, 393, 1229, 394, 395, 396, 398, 400,
	397, 399, 401, 402, 403, 404, 405, 1318, 1319, 406,
	1242, 303, 0, 0, 0, 0, 0, 407, 408, 409,
	1302, 0, 0, 0, 410, 0, 411, 412, 413, 0,
	414, 415, 0, 1329, 416, 417, 418, 1315, 1316, 419,
	420, 421, 422, 423, 424, 425, 426, 427, 0, 428,
	1325, 0, 1252, 429, 0, 430, 431, 432, 433, 434,
	435, 436, 1288, 1289, 1292, 529, 1331, 437, 438, 439,
	0, 440, 441, 442, 443, 444, 0, 0, 0, 304,
	445, 446, 447, 0, 1330, 738, 448, 530, 449, 1297,
	1298, 0, 1258, 0, 450, 451, 453, 1332, 1290, 1333,
	452, 454, 455, 1334, 456, 0, 0, 0, 457, 458,
	459, 460, 461, 462, 0, 463, 465, 464, 0, 467,
	1326, 466, 1335, 468, 469, 1336, 0, 470, 471, 472,
	473, 474, 475, 478, 1281, 1280, 476, 477, 479, 480,
	0, 481, 482, 484, 487, 483, 485, 486, 488, 501,
	502, 489, 490, 491, 492, 493, 494, 495, 496, 497,
	498, 499, 500, 504, 0, 503, 1337, 505, 506, 507,
	508, 509, 516, 518, 519, 514, 515, 517, 520, 521,
	523, 511, 512, 513, 1338, 522, 510, 1220, 305, 1339,
	524, 525, 526, 527, 1243, 1291, 528, 1305, 531, 532,
	0, 0, 533, 0, 534, 0, 0, 536, 537, 538,
	0, 0, 539, 540, 746, 1340, 541, 1341, 1320, 542,
	543, 1230, 544, 545, 546, 547, 548, 549, 550, 551,
	552, 553, 0, 554, 555, 748, 556, 557, 558, 749,
	559, 560, 561, 1321, 562, 751, 563, 564, 0, 565,
	566, 567, 0, 568, 569, 570, 571, 572, 573, 574,
	575, 1301, 576, 577, 579, 578, 580, 0, 581, 0,
	582, 583, 584, 0, 0, 0, 0, 0, 585, 586,
	588, 0, 589, 590, 591, 592, 587, 593, 594, 595,
	596, 597, 598, 0, 600, 601, 599, 602, 603, 1342,
	604, 605, 606, 607, 608, 1231, 609, 0, 610, 611,
	618, 619, 620, 612, 613, 614, 621, 622, 623, 624,
	625, 626, 0, 628, 629, 627, 630, 631, 632, 1284,
	633, 754, 634, 615, 616, 635, 636, 1343, 637, 638,
	639, 640, 641, 642, 643, 1299, 0, 644, 0, 645,
	646, 647, 648, 649, 650, 652, 617, 653, 658, 659,
	1346, 654, 655, 656, 657, 1322, 661, 662, 663, 664,
	0, 665, 666, 1217, 660, 651, 0, 667, 668, 669,
	670, 671, 672, 0, 673, 674, 0, 675, 1311, 1312,
	1313, 1314, 0, 687, 0, 676, 678, 679, 680, 681,
	1323, 682, 1324, 1241, 683, 684, 685, 686, 677, 688,
	689, 0, 1224, 690, 691, 693, 695, 696, 692, 694,
	697, 1285, 698, 0, 0, 699, 700, 701, 764, 1308,
	1345, 0, 703, 702, 704, 705, 706, 767, 707, 708,
	709, 0, 0, 0, 0, 710, 711, 768, 712, 713,
	714, 1221, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1216, 0, 0, 0,
	0, 0, 0, 1214, 1215, 2136, 1263, 1235, 1236, 1237,
	1233, 1234, 1246, 1247, 0, 0, 0, 1245, 0, 0,
	0, 0, 0, 306, 307, 309, 308, 310, 311, 312,
	313, 0, 314, 315, 0, 0, 0, 0, 0, 1287,
	1251, 0, 0, 316, 0, 317, 318, 319, 1327, 320,
	321, 322, 323, 324, 325, 326, 716, 1300, 0, 327,
	1307, 328, 1306, 0, 1317, 329, 330, 331, 332, 333,
	334, 335, 1253, 1286, 1218, 336, 1347, 1348, 723, 0,
	337, 338, 1293, 0, 1274, 0, 339, 340, 341, 342,
	343, 344, 345, 346, 0, 0, 348, 349, 350, 347,
	351, 0, 352, 0, 353, 354, 355, 356, 357, 358,
	359, 0, 360, 361, 362, 1328, 363, 364, 365, 1277,
	1275, 1276, 1283, 1279, 1278, 1282, 366, 367, 368, 369,
	370, 1310, 371, 373, 1304, 1303, 1223, 376, 378, 372,
	374, 0, 377, 375, 379, 0, 380, 381, 382, 0,
	0, 383, 1295, 385, 0, 386, 387, 388, 0, 389,
	390, 391, 0, 392, 393, 1229, 394, 395, 396, 398,
	400, 397, 399, 401, 402, 403, 404, 405, 1318, 1319,
	406, 1242, 303, 0, 0, 0, 0, 0, 407, 408,
	409, 1302, 0, 0, 0, 410, 0, 411, 412, 413,
	0, 414, 415, 0, 1329, 416, 417, 418, 1315, 1316,
	419, 420, 421, 422, 423, 424, 425, 426, 427, 0,
	428, 1325, 0, 1252, 429, 0, 430, 431, 432, 433,
	434, 435, 436, 1288, 1289, 1292, 529, 1331, 437, 438,
	439, 0, 440, 441, 442, 443, 444, 0, 0, 0,
	304, 445, 446, 447, 0, 1330, 738, 448, 530, 449,
	1297, 1298, 0, 1258, 0, 450, 451, 453, 1332, 1290,
	1333, 452, 454, 455, 1334, 456, 0, 0, 0, 457,
	458, 459, 460, 461, 462, 0, 463, 465, 464, 0,
	467, 1326, 466, 1335, 468, 469, 1336, 0, 470, 471,
	472, 473, 474, 475, 478, 1281, 1280, 476, 477, 479,
	480, 0, 481, 482, 484, 487, 483, 485, 486, 488,
	501, 502, 489, 490, 491, 492, 493, 494, 495, 496,
	497, 498, 499, 500, 504, 0, 503, 1337, 505, 506,
	507, 508, 509, 516, 518, 519, 514, 515, 517, 520,
	521, 523, 511, 512, 513, 1338, 522, 510, 1220, 305,
	1339, 524, 525, 526, 527, 1243, 1291, 528, 1305, 531,
	532, 0, 0, 533, 0, 534, 0, 0, 536, 537,
	538, 0, 0, 539, 540, 746, 1340, 541, 1341, 1320,
	542, 543, 1230, 544, 545, 546, 547, 548, 549, 550,
	551, 552, 553, 0, 554, 555, 748, 556, 557, 558,
	749, 559, 560, 561, 1321, 562, 751, 563, 564, 0,
	565, 566, 567, 0, 568, 569, 570, 571, 572, 573,
	574, 575, 1301, 576, 577, 579, 578, 580, 0, 581,
	0, 582, 583, 584, 0, 0, 0, 0, 0, 585,
	586, 588, 0, 589, 590, 591, 592, 587, 593, 594,
	595, 596, 597, 598, 0, 600, 601, 599, 602, 603,
	1342, 604, 605, 606, 607, 608, 1231, 609, 0, 610,
	611, 618, 619, 620, 612, 613, 614, 621, 622, 623,
	624, 625, 626, 0, 628, 629, 627, 630, 631, 632,
	1284, 633, 754, 634, 615, 616, 635, 636, 1343, 637,
	638, 639, 640, 641, 642, 643, 1299, 0, 644, 0,
	645, 646, 647, 648, 649, 650, 652, 617, 653, 658,
	659, 1346, 654, 655, 656, 657, 1322, 661, 662, 663,
	664, 0, 665, 666, 1217, 660, 651, 0, 667, 668,
	669, 670, 671, 672, 0, 673, 674, 0, 675, 1311,
	1312, 1313, 1314, 0, 687, 0, 676, 678, 679, 680,
	681, 1323, 682, 1324, 1241, 683, 684, 685, 686, 677,
	688, 689, 0, 1224, 690, 691, 693, 695, 696, 692,
	694, 697, 1285, 698, 0, 0, 699, 700, 701, 764,
	1308, 1345, 4116, 703, 702, 704, 705, 706, 767, 707,
	708, 709, 0, 0, 0, 0, 710, 711, 768, 712,
	713, 714, 1221, 0, 0, 0, 0, 0, 0, 1263,
	1235, 1236, 1237, 1233, 1234, 1246, 0, 1216, 0, 0,
	0, 0, 0, 0, 1214, 1215, 306, 307, 309, 308,
	310, 311, 312, 313, 1247, 314, 315, 0, 1245, 0,
	0, 0, 1287, 1251, 0, 0, 316, 0, 317, 318,
	319, 1327, 320, 321, 322, 323, 324, 325, 326, 716,
	1300, 0, 327, 1307, 328, 1306, 0, 1317, 329, 330,
	331, 332, 333, 334, 335, 1253, 1286, 1218, 336, 1347,
	1348, 723, 0, 337, 338, 1293, 0, 1274, 0, 339,
	340, 341, 342, 343, 344, 345, 346, 0, 0, 348,
	349, 350, 347, 351, 0, 352, 0, 353, 354, 355,
	356, 357, 358, 359, 0, 360, 361, 362, 1328, 363,
	364, 365, 1277, 1275, 1276, 1283, 1279, 1278, 1282, 366,
	367, 368, 369, 370, 1310, 371, 373, 1304, 1303, 1223,
	376, 378, 372, 374, 0, 377, 375, 379, 0, 380,
	381, 382, 0, 0, 383, 1295, 385, 0, 386, 387,
	388, 0, 389, 390, 391, 0, 392, 393, 1229, 394,
	395, 396, 398, 400, 397, 399, 401, 402, 403, 404,
	405, 1318, 1319, 406, 1242, 303, 0, 0, 0, 0,
	0, 407, 408, 409, 1302, 0, 0, 0, 410, 0,
	411, 412, 413, 0, 414, 415, 2983, 1329, 416, 417,
	418, 1315, 1316, 419, 420, 421, 422, 423, 424, 425,
	426, 427, 0, 428, 1325, 0, 1252, 429, 0, 430,
	431, 432, 433, 434, 435, 436, 1288, 1289, 1292, 529,
	1331, 437, 438, 439, 0, 440, 441, 442, 443, 444,
	0, 0, 0, 304, 445, 446, 447, 0, 1330, 738,
	448, 530, 449, 1297, 1298, 0, 1258, 0, 450, 451,
	453, 1332, 1290, 1333, 452, 454, 455, 1334, 456, 0,
	0, 0, 457, 458, 459, 460, 461, 462, 0, 463,
	465, 464, 0, 467, 1326, 466, 1335, 468, 469, 1336,
	0, 470, 471, 472, 473, 474, 475, 478, 1281, 1280,
	476, 477, 479, 480, 0, 481, 482, 484, 487, 483,
	485, 486, 488, 501, 502, 489, 490, 491, 492, 493,
	494, 495, 496, 497, 498, 499, 500, 504, 0, 503,
	1337, 505, 506, 507, 508, 509, 516, 518, 519, 514,
	515, 517, 520, 521, 523, 511, 512, 513, 1338, 522,
	510, 1220, 305, 1339, 524, 525, 526, 527, 1243, 1291,
	528, 1305, 531, 532, 0, 0, 533, 0, 534, 0,
	0, 536, 537, 538, 0, 0, 539, 540, 746, 1340,
	541, 1341, 1320, 542, 543, 1230, 544, 545, 546, 547,
	548, 549, 550, 551, 552, 553, 0, 554, 555, 748,
	556, 557, 558, 749, 559, 560, 561, 1321, 562, 751,
	563, 564, 0, 565, 566, 567, 0, 568, 569, 570,
	571, 572, 573, 574, 575, 1301, 576, 577, 579, 578,
	580, 0, 581, 0, 582, 583, 584, 0, 0, 0,
	0, 0, 585, 586, 588, 0, 589, 590, 591, 592,
	587, 593, 594, 595, 596, 597, 598, 0, 600, 601,
	599, 602, 603, 1342, 604, 605, 606, 607, 608, 1231,
	609, 0, 610, 611, 618, 619, 620, 612, 613, 614,
	621, 622, 623, 624, 625, 626, 0, 628, 629, 627,
	630, 631, 632, 1284, 633, 754, 634, 615, 616, 635,
	636, 1343, 637, 638, 639, 640, 641, 642, 643, 1299,
	0, 644, 0, 645, 646, 647, 648, 649, 650, 652,
	617, 653, 658, 659, 1346, 654, 655, 656, 657, 1322,
	661, 662, 663, 664, 0, 665, 666, 1217, 660, 651,
	0, 667, 668, 669, 670, 671, 672, 0, 673, 674,
	0, 675, 1311, 1312, 1313, 1314, 0, 687, 0, 676,
	678, 679, 680, 681, 1323, 682, 1324, 1241, 683, 684,
	685, 686, 677, 688, 689, 0, 1224, 690, 691, 693,
	695, 696, 692, 694, 697, 1285, 698, 0, 0, 699,
	700, 701, 764, 1308, 1345, 0, 703, 702, 704, 705,
	706, 767, 707, 708, 709, 0, 0, 0, 0, 710,
	711, 768, 712, 713, 714, 1221, 0, 0, 0, 0,
	0, 0, 1263, 1235, 1236, 1237, 1233, 1234, 1246, 0,
	1216, 0, 0, 0, 0, 0, 0, 1214, 1215, 306,
	307, 309, 308, 310, 311, 312, 313, 1247, 314, 315,
	0, 1245, 0, 0, 0, 1287, 1251, 0, 0, 316,
	0, 317, 318, 319, 1327, 320, 321, 322, 323, 324,
	325, 326, 716, 1300, 0, 327, 1307, 328, 1306, 0,
	1317, 329, 330, 331, 332, 333, 334, 335, 1253, 1286,
	1218, 336, 1347, 1348, 723, 0, 337, 338, 1293, 0,
	1274, 0, 339, 340, 341, 342, 343, 344, 345, 346,
	0, 0, 348, 349, 350, 347, 351, 0, 352, 0,
	353, 354, 355, 356, 357, 358, 359, 0, 360, 361,
	362, 1328, 363, 364, 365, 1277, 1275, 1276, 1283, 1279,
	1278, 1282, 366, 367, 368, 369, 370, 1310, 371, 373,
	1304, 1303, 1223, 376, 378, 372, 374, 0, 377, 375,
	379, 0, 380, 381, 382, 0, 0, 383, 1295, 385,
	0, 386, 387, 388, 0, 389, 390, 391, 0, 392,
	393, 1229, 394, 395, 396, 398, 400, 397, 399, 401,
	402, 403, 404, 405, 1318, 1319, 406, 1242, 303, 0,
	0, 0, 0, 0, 407, 408, 409, 1302, 0, 0,
	0, 410, 0, 411, 412, 413, 0, 414, 415, 0,
	1329, 416, 417, 418, 1315, 1316, 419, 420, 421, 422,
	423, 424, 425, 426, 427, 0, 428, 1325, 0, 1252,
	429, 0, 430, 431, 432, 433, 434, 435, 436, 1288,
	1289, 1292, 529, 1331, 437, 438, 439, 0, 440, 441,
	442, 443, 444, 0, 0, 0, 304, 445, 446, 447,
	0, 1330, 738, 448, 530, 449, 1297, 1298, 0, 1258,
	0, 450, 451, 453, 1332, 1290, 1333, 452, 454, 455,
	1334, 456, 0, 0, 0, 457, 458, 459, 460, 461,
	462, 0, 463, 465, 464, 0, 467, 1326, 466, 1335,
	468, 469, 1336, 0, 470, 471, 472, 473, 474, 475,
	478, 1281, 1280, 476, 477, 479, 480, 0, 481, 482,
	484, 487, 483, 485, 486, 488, 501, 502, 489, 490,
	491, 492, 493, 494, 495, 496, 497, 498, 499, 500,
	504, 0, 503, 1337, 505, 506, 507, 508, 509, 516,
	518, 519, 514, 515, 517, 520, 521, 523, 511, 512,
	513, 1338, 522, 510, 1220, 305, 1339, 524, 525, 526,
	527, 1243, 1291, 528, 1305, 531, 532, 0, 0, 533,
	0, 534, 0, 0, 536, 537, 538, 0, 0, 539,
	540, 746, 1340, 541, 1341, 1320, 542, 543, 1230, 544,
	545, 546, 547, 548, 549, 550, 551, 552, 553, 0,
	554, 555, 748, 556, 557, 558, 749, 559, 560, 561,
	1321, 562, 751, 563, 564, 0, 565, 566, 567, 0,
	568, 569, 570, 571, 572, 573, 574, 575, 1301, 576,
	577, 579, 578, 580, 0, 581, 0, 582, 583, 584,
	0, 0, 0, 0, 0, 585, 586, 588, 0, 589,
	590, 591, 592, 587, 593, 594, 595, 596, 597, 598,
	0, 600, 601, 599, 602, 603, 1342, 604, 605, 606,
	607, 608, 1231, 609, 0, 610, 611, 618, 619, 620,
	612, 613, 614, 621, 622, 623, 624, 625, 626, 0,
	628, 629, 627, 630, 631, 632, 1284, 633, 754, 634,
	615, 616, 635, 636, 1343, 637, 638, 639, 640, 641,
	642, 643, 1299, 0, 644, 0, 645, 646, 647, 648,
	649, 650, 652, 617, 653, 658, 659, 1346, 654, 655,
	656, 657, 1322, 661, 662, 663, 664, 0, 665, 666,
	1217, 660, 651, 0, 667, 668, 669, 670, 671, 672,
	0, 673, 674, 0, 675, 1311, 1312, 1313, 1314, 0,
	687, 0, 676, 678, 679, 680, 681, 1323, 682, 1324,
	1241, 683, 684, 685, 686, 677, 688, 689, 0, 1224,
	690, 691, 693, 695, 696, 692, 694, 697, 1285, 698,
	0, 0, 699, 700, 701, 764, 1308, 1345, 0, 703,
	702, 704, 705, 706, 767, 707, 708, 709, 0, 0,
	0, 0, 710, 711, 768, 712, 713, 714, 1221, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1216, 0, 0, 0, 0, 0, 0,
	1214, 1215, 0, 0, 0, 0, 0, 0, 0, 0,
	1247, 2064, 0, 2988, 1245, 1263, 1235, 1236, 1237, 1233,
	1234, 1246, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 306, 307, 309, 308, 310, 311, 312, 313,
	0, 314, 315, 0, 0, 0, 0, 0, 1287, 1251,
	0, 0, 316, 0, 317, 318, 319, 1327, 320, 321,
	322, 323, 324, 325, 326, 716, 1300, 0, 327, 1307,
	328, 1306, 0, 1317, 329, 330, 331, 332, 333, 334,
	335, 1253, 1286, 1218, 336, 1347, 1348, 723, 0, 337,
	338, 1293, 0, 1274, 0, 339, 340, 341, 342, 343,
	344, 345, 346, 0, 0, 348, 349, 350, 347, 351,
	0, 352, 0, 353, 354, 355, 356, 357, 358, 359,
	0, 360, 361, 362, 1328, 363, 364, 365, 1277, 1275,
	1276, 1283, 1279, 1278, 1282, 366, 367, 368, 369, 370,
	1310, 371, 373, 1304, 1303, 1223, 376, 378, 372, 374,
	0, 377, 375, 379, 0, 380, 381, 382, 0, 0,
	383, 1295, 385, 0, 386, 387, 388, 0, 389, 390,
	391, 0, 392, 393, 1229, 394, 395, 396, 398, 400,
	397, 399, 401, 402, 403, 404, 405, 1318, 1319, 406,
	1242, 303, 0, 0, 0, 0, 0, 407, 408, 409,
	1302, 0, 0, 0, 410, 0, 411, 412, 413, 0,
	414, 415, 0, 1329, 416, 417, 418, 1315, 1316, 419,
	420, 421, 422, 423, 424, 425, 426, 427, 0, 428,
	1325, 0, 1252, 429, 0, 430, 431, 432, 433, 434,
	435, 436, 1288, 1289, 1292, 529, 1331, 437, 438, 439,
	0, 440, 441, 442, 443, 444, 0, 0, 0, 304,
	445, 446, 447, 0, 1330, 738, 448, 530, 449, 1297,
	1298, 0, 1258, 0, 450, 451, 453, 1332, 1290, 1333,
	452, 454, 455, 1334, 456, 0, 0, 0, 457, 458,
	459, 460, 461, 462, 0, 463, 465, 464, 0, 467,
	1326, 466, 1335, 468, 469, 1336, 0, 470, 471, 472,
	473, 474, 475, 478, 1281, 1280, 476, 477, 479, 480,
	0, 481, 482, 484, 487, 483, 485, 486, 488, 501,
	502, 489, 490, 491, 492, 493, 494, 495, 496, 497,
	498, 499, 500, 504, 0, 503, 1337, 505, 506, 507,
	508, 509, 516, 518, 519, 514, 515, 517, 520, 521,
	523, 511, 512, 513, 1338, 522, 510, 1220, 305, 1339,
	524, 525, 526, 527, 1243, 1291, 528, 1305, 531, 532,
	0, 0, 533, 0, 534, 0, 0, 536, 537, 538,
	0, 0, 539, 540, 746, 1340, 541, 1341, 1320, 542,
	543, 1230, 544, 545, 546, 547, 548, 549, 550, 551,
	552, 553, 0, 554, 555, 748, 556, 557, 558, 749,
	559, 560, 561, 1321, 562, 751, 563, 564, 0, 565,
	566, 567, 0, 568, 569, 570, 571, 572, 573, 574,
	575, 1301, 576, 577, 579, 578, 580, 0, 581, 0,
	582, 583, 584, 0, 0, 0, 0, 0, 585, 586,
	588, 0, 589, 590, 591, 592, 587, 593, 594, 595,
	596, 597, 598, 0, 600, 601, 599, 602, 603, 1342,
	604, 605, 606, 607, 608, 1231, 609, 0, 610, 611,
	618, 619, 620, 612, 613, 614, 621, 622, 623, 624,
	625, 626, 0, 628, 629, 627, 630, 631, 632, 1284,
	633, 754, 634, 615, 616, 635, 636, 1343, 637, 638,
	639, 640, 641, 642, 643, 1299, 0, 644, 0, 645,
	646, 647, 648, 649, 650, 652, 617, 653, 658, 659,
	1346, 654, 655, 656, 657, 1322, 661, 662, 663, 664,
	0, 665, 666, 1217, 660, 651, 0, 667, 668, 669,
	670, 671, 672, 0, 673, 674, 0, 675, 1311, 1312,
	1313, 1314, 0, 687, 0, 676, 678, 679, 680, 681,
	1323, 682, 1324, 1241, 683, 684, 685, 686, 677, 688,
	689, 0, 1224, 690, 691, 693, 695, 696, 692, 694,
	697, 1285, 698, 0, 0, 699, 700, 701, 764, 1308,
	1345, 0, 703, 702, 704, 705, 706, 767, 707, 708,
	709, 0, 0, 0, 0, 710, 711, 768, 712, 713,
	714, 1221, 0, 0, 0, 0, 2986, 0, 1263, 1235,
	1236, 1237, 1233, 1234, 1246, 0, 1216, 0, 0, 0,
	0, 0, 0, 1214, 1215, 306, 307, 309, 308, 310,
	311, 312, 313, 1247, 314, 315, 0, 1245, 0, 0,
	0, 1287, 1251, 0, 0, 316, 0, 317, 318, 319,
	1327, 320, 321, 322, 323, 324, 325, 326, 716, 1300,
	0, 327, 1307, 328, 1306, 0, 1317, 329, 330, 331,
	332, 333, 334, 335, 1253, 1286, 1218, 336, 1347, 1348,
	723, 0, 337, 338, 1293, 0, 1274, 0, 339, 340,
	341, 342, 343, 344, 345, 346, 0, 0, 348, 349,
	350, 347, 351, 0, 352, 0, 353, 354, 355, 356,
	357, 358, 359, 0, 360, 361, 362, 1328, 363, 364,
	365, 1277, 1275, 1276, 1283, 1279, 1278, 1282, 366, 367,
	368, 369, 370, 1310, 371, 373, 1304, 1303, 1223, 376,
	378, 372, 374, 0, 377, 375, 379, 0, 380, 381,
	382, 0, 0, 383, 1295, 385, 0, 386, 387, 388,
	0, 389, 390, 391, 0, 392, 393, 1229, 394, 395,
	396, 398, 400, 397, 399, 401, 402, 403, 404, 405,
	1318, 1319, 406, 1242, 303, 0, 0, 0, 0, 0,
	407, 408, 409, 1302, 0, 0, 0, 410, 0, 411,
	412, 413, 0, 414, 415, 0, 1329, 416, 417, 418,
	1315, 1316, 419, 420, 421, 422, 423, 424, 425, 426,
	427, 0, 428, 1325, 0, 1252, 429, 0, 430, 431,
	432, 433, 434, 435, 436, 1288, 1289, 1292, 529, 1331,
	437, 438, 439, 0, 440, 441, 442, 443, 444, 0,
	0, 0, 304, 445, 446, 447, 0, 1330, 738, 448,
	530, 449, 1297, 1298, 0, 1258, 0, 450, 451, 453,
	1332, 1290, 1333, 452, 454, 455, 1334, 456, 0, 0,
	0, 457, 458, 459, 460, 461, 462, 0, 463, 465,
	464, 0, 467, 1326, 466, 1335, 468, 469, 1336, 0,
	470, 471, 472, 473, 474, 475, 478, 1281, 1280, 476,
	477, 479, 480, 0, 481, 482, 484, 487, 483, 485,
	486, 488, 501, 502, 489, 490, 491, 492, 493, 494,
	495, 496, 497, 498, 499, 500, 504, 0, 503, 1337,
	505, 506, 507, 508, 509, 516, 518, 519, 514, 515,
	517, 520, 521, 523, 511, 512, 513, 1338, 522, 510,
	1220, 305, 1339, 524, 525, 526, 527, 1243, 1291, 528,
	1305, 531, 532, 0, 0, 533, 0, 534, 0, 0,
	536, 537, 538, 0, 0, 539, 540, 746, 1340, 541,
	1341, 1320, 542, 543, 1230, 544, 545, 546, 547, 548,
	549, 550, 551, 552, 553, 0, 554, 555, 748, 556,
	557, 558, 749, 559, 560, 561, 1321, 562, 751, 563,
	564, 0, 565, 566, 567, 0, 568, 569, 570, 571,
	572, 573, 574, 575, 1301, 576, 577, 579, 578, 580,
	0, 581, 0, 582, 583, 584, 0, 0, 0, 0,
	0, 585, 586, 588, 0, 589, 590, 591, 592, 587,
	593, 594, 595, 596, 597, 598, 0, 600, 601, 599,
	602, 603, 1342, 604, 605, 606, 607, 608, 1231, 609,
	0, 610, 611, 618, 619, 620, 612, 613, 614, 621,
	622, 623, 624, 625, 626, 0, 628, 629, 627, 630,
	631, 632, 1284, 633, 754, 634, 615, 616, 635, 636,
	1343, 637, 638, 639, 640, 641, 642, 643, 1299, 0,
	644, 0, 645, 646, 647, 648, 649, 650, 652, 617,
	653, 658, 659, 1346, 654, 655, 656, 657, 1322, 661,
	662, 663, 664, 0, 665, 666, 1217, 660, 651, 0,
	667, 668, 669, 670, 671, 672, 0, 673, 674, 0,
	675, 1311, 1312, 1313, 1314, 0, 687, 0, 676, 678,
	679, 680, 681, 1323, 682, 1324, 1241, 683, 684, 685,
	686, 677, 688, 689, 0, 1224, 690, 691, 693, 695,
	696, 692, 694, 697, 1285, 698, 0, 0, 699, 700,
	701, 764, 1308, 1345, 0, 703, 702, 704, 705, 706,
	767, 707, 708, 709, 0, 0, 0, 0, 710, 711,
	768, 712, 713, 714, 1221, 0, 0, 0, 0, 2974,
	0, 1263, 1235, 1236, 1237, 1233, 1234, 1246, 0, 1216,
	0, 0, 0, 0, 0, 0, 1214, 1215, 306, 307,
	309, 308, 310, 311, 312, 313, 1247, 314, 315, 0,
	1245, 0, 0, 0, 1287, 1251, 0, 0, 316, 0,
	317, 318, 319, 1327, 320, 321, 322, 323, 324, 325,
	326, 716, 1300, 0, 327, 1307, 328, 1306, 0, 1317,
	329, 330, 331, 332, 333, 334, 335, 1253, 1286, 1218,
	336, 1347, 1348, 723, 0, 337, 338, 1293, 0, 1274,
	0, 339, 340, 341, 342, 343, 344, 345, 346, 0,
	0, 348, 349, 350, 347, 351, 0, 352, 0, 353,
	354, 355, 356, 357, 358, 359, 0, 360, 361, 362,
	1328, 363, 364, 365, 1277, 1275, 1276, 1283, 1279, 1278,
	1282, 366, 367, 368, 369, 370, 1310, 371, 373, 1304,
	1303, 1223, 376, 378, 372, 374, 0, 377, 375, 379,
	0, 380, 381, 382, 0, 0, 383, 1295, 385, 0,
	386, 387, 388, 0, 389, 390, 391, 0, 392, 393,
	1229, 394, 395, 396, 398, 400, 397, 399, 401, 402,
	403, 404, 405, 1318, 1319, 406, 1242, 303, 0, 0,
	0, 0, 0, 407, 408, 409, 1302, 0, 0, 0,
	410, 0, 411, 412, 413, 0, 414, 415, 0, 1329,
	416, 417, 418, 1315, 1316, 419, 420, 421, 422, 423,
	424, 425, 426, 427, 0, 428, 1325, 0, 1252, 429,
	0, 430, 431, 432, 433, 434, 435, 436, 1288, 1289,
	1292, 529, 1331, 437, 438, 439, 0, 440, 441, 442,
	443, 444, 0, 0, 0, 304, 445, 446, 447, 0,
	1330, 738, 448, 530, 449, 1297, 1298, 0, 1258, 0,
	450, 451, 453, 1332, 1290, 1333, 452, 454, 455, 1334,
	456, 0, 0, 0, 457, 458, 459, 460, 461, 462,
	0, 463, 465, 464, 0, 467, 1326, 466, 1335, 468,
	469, 1336, 0, 470, 471, 472, 473, 474, 475, 478,
	1281, 1280, 476, 477, 479, 480, 0, 481, 482, 484,
	487, 483, 485, 486, 488, 501, 502, 489, 490, 491,
	492, 493, 494, 495, 496, 497, 498, 499, 500, 504,
	0, 503, 1337, 505, 506, 507, 508, 509, 516, 518,
	519, 514, 515, 517, 520, 521, 523, 511, 512, 513,
	1338, 522, 510, 1220, 305, 1339, 524, 525, 526, 527,
	1243, 1291, 528, 1305, 531, 532, 0, 0, 533, 0,
	534, 0, 0, 536, 537, 538, 0, 0, 539, 540,
	746, 1340, 541, 1341, 1320, 542, 543, 1230, 544, 545,
	546, 547, 548, 549, 550, 551, 552, 553, 0, 554,
	555, 748, 556, 557, 558, 749, 559, 560, 561, 1321,
	562, 751, 563, 564, 0, 565, 566, 567, 0, 568,
	569, 570, 571, 572, 573, 574, 575, 1301, 576, 577,
	579, 578, 580, 0, 581, 0, 582, 583, 584, 0,
	0, 0, 0, 0, 585, 586, 588, 0, 589, 590,
	591, 592, 587, 593, 594, 595, 596, 597, 598, 0,
	600, 601, 599, 602, 603, 1342, 604, 605, 606, 607,
	608, 1231, 609, 0, 610, 611, 618, 619, 620, 612,
	613, 614, 621, 622, 623, 624, 625, 626, 0, 628,
	629, 627, 630, 631, 632, 1284, 633, 754, 634, 615,
	616, 635, 636, 1343, 637, 638, 639, 640, 641, 642,
	643, 1299, 0, 644, 0, 645, 646, 647, 648, 649,
	650, 652, 617, 653, 658, 659, 1346, 654, 655, 656,
	657, 1322, 661, 662, 663, 664, 0, 665, 666, 1217,
	660, 651, 0, 667, 668, 669, 670, 671, 672, 0,
	673, 674, 0, 675, 1311, 1312, 1313, 1314, 0, 687,
	0, 676, 678, 679, 680, 681, 1323, 682, 1324, 1241,
	683, 684, 685, 686, 677, 688, 689, 0, 1224, 690,
	691, 693, 695, 696, 692, 694, 697, 1285, 698, 0,
	0, 699, 700, 701, 764, 1308, 1345, 0, 703, 702,
	704, 705, 706, 767, 707, 708, 709, 0, 0, 0,
	0, 710, 711, 768, 712, 713, 714, 1221, 0, 0,
	0, 0, 2963, 0, 1263, 1235, 1236, 1237, 1233, 1234,
	1246, 0, 1216, 0, 0, 0, 0, 0, 0, 1214,
	1215, 306, 307, 309, 308, 310, 311, 312, 313, 1247,
	314, 315, 0, 1245, 0, 0, 0, 1287, 1251, 0,
	0, 316, 0, 317, 318, 319, 1327, 320, 321, 322,
	323, 324, 325, 326, 716, 1300, 0, 327, 1307, 328,
	1306, 0, 1317, 329, 330, 331, 332, 333, 334, 335,
	1253, 1286, 1218, 336, 1347, 1348, 723, 0, 337, 338,
	1293, 0, 1274, 0, 339, 340, 341, 342, 343, 344,
	345, 346, 0, 0, 348, 349, 350, 347, 351, 0,
	352, 0, 353, 354, 355, 356, 357, 358, 359, 0,
	360, 361, 362, 1328, 363, 364, 365, 1277, 1275, 1276,
	1283, 1279, 1278, 1282, 366, 367, 368, 369, 370, 1310,
	371, 373, 1304, 1303, 1223, 376, 378, 372, 374, 0,
	377, 375, 379, 0, 380, 381, 382, 0, 0, 383,
	1295, 385, 0, 386, 387, 388, 0, 389, 390, 391,
	0, 392, 393, 1229, 394, 395, 396, 398, 400, 397,
	399, 401, 402, 403, 404, 405, 1318, 1319, 406, 1242,
	303, 0, 0, 0, 0, 0, 407, 408, 409, 1302,
	0, 0, 0, 410, 0, 411, 412, 413, 0, 414,
	415, 0, 1329, 416, 417, 418, 1315, 1316, 419, 420,
	421, 422, 423, 424, 425, 426, 427, 0, 428, 1325,
	0, 1252, 429, 0, 430, 431, 432, 433, 434, 435,
	436, 1288, 1289, 1292, 529, 1331, 437, 438, 439, 0,
	440, 441, 442, 443, 444, 0, 0, 0, 304, 445,
	446, 447, 0, 1330, 738, 448, 530, 449, 1297, 1298,
	0, 1258, 0, 450, 451, 453, 1332, 1290, 1333, 452,
	454, 455, 1334, 456, 0, 0, 0, 457, 458, 459,
	460, 461, 462, 0, 463, 465, 464, 0, 467, 1326,
	466, 1335, 468, 469, 1336, 0, 470, 471, 472, 473,
	474, 475, 478, 1281, 1280, 476, 477, 479, 480, 0,
	481, 482, 484, 487, 483, 485, 486, 488, 501, 502,
	489, 490, 491, 492, 493, 494, 495, 496, 497, 498,
	499, 500, 504, 0, 503, 1337, 505, 506, 507, 508,
	509, 516, 518, 519, 514, 515, 517, 520, 521, 523,
	511, 512, 513, 1338, 522, 510, 1220, 305, 1339, 524,
	525, 526, 527, 1243, 1291, 528, 1305, 531, 532, 0,
	0, 533, 0, 534, 0, 0, 536, 537, 538, 0,
	0, 539, 540, 746, 1340, 541, 1341, 1320, 542, 543,
	1230, 544, 545, 546, 547, 548, 549, 550, 551, 552,
	553, 0, 554, 555, 748, 556, 557, 558, 749, 559,
	560, 561, 1321, 562, 751, 563, 564, 0, 565, 566,
	567, 0, 568, 569, 570, 571, 572, 573, 574, 575,
	1301, 576, 577, 579, 578, 580, 0, 581, 0, 582,
	583, 584, 0, 0, 0, 0, 0, 585, 586, 588,
	0, 589, 590, 591, 592, 587, 593, 594, 595, 596,
	597, 598, 0, 600, 601, 599, 602, 603, 1342, 604,
	605, 606, 607, 608, 1231, 609, 0, 610, 611, 618,
	619, 620, 612, 613, 614, 621, 622, 623, 624, 625,
	626, 0, 628, 629, 627, 630, 631, 632, 1284, 633,
	754, 634, 615, 616, 635, 636, 1343, 637, 638, 639,
	640, 641, 642, 643, 1299, 0, 644, 0, 645, 646,
	647, 648, 649, 650, 652, 617, 653, 658, 659, 1346,
	654, 655, 656, 657, 1322, 661, 662, 663, 664, 0,
	665, 666, 1217, 660, 651, 0, 667, 668, 669, 670,
	671, 672, 0, 673, 674, 0, 675, 1311, 1312, 1313,
	1314, 0, 687, 0, 676, 678, 679, 680, 681, 1323,
	682, 1324, 1241, 683, 684, 685, 686, 677, 688, 689,
	0, 1224, 690, 691, 693, 695, 696, 692, 694, 697,
	1285, 698, 0, 0, 699, 700, 701, 764, 1308, 1345,
	0, 703, 702, 704, 705, 706, 767, 707, 708, 709,
	0, 0, 0, 0, 710, 711, 768, 712, 713, 714,
	1221, 0, 0, 0, 0, 2961, 0, 2952, 2959, 1236,
	1237, 1233, 1234, 1246, 0, 1216, 0, 0, 0, 0,
	0, 0, 1214, 1215, 306, 307, 309, 308, 310, 311,
	312, 313, 1247, 314, 315, 0, 1245, 0, 0, 0,
	1287, 1251, 0, 0, 316, 0, 317, 318, 319, 1327,
	320, 321, 322, 323, 324, 325, 326, 716, 1300, 0,
	327, 1307, 328, 1306, 0, 1317, 329, 330, 331, 332,
	333, 334, 335, 1253, 1286, 1218, 336, 1347, 1348, 723,
	0, 337, 338, 1293, 0, 1274, 0, 339, 340, 341,
	342, 343, 344, 345, 346, 0, 0, 348, 349, 350,
	347, 351, 0, 352, 0, 353, 354, 355, 356, 357,
	358, 359, 0, 360, 361, 362, 1328, 363, 364, 365,
	1277, 1275, 1276, 1283, 1279, 1278, 1282, 366, 367, 368,
	369, 370, 1310, 2955, 373, 1304, 1303, 1223, 376, 378,
	372, 374, 0, 377, 375, 379, 0, 380, 381, 382,
	0, 0, 383, 1295, 385, 0, 386, 387, 388, 0,
	389, 390, 391, 0, 392, 393, 1229, 394, 395, 396,
	398, 400, 397, 399, 401, 402, 403, 404, 405, 1318,
	1319, 406, 1242, 303, 0, 0, 0, 0, 0, 407,
	408, 409, 1302, 0, 0, 0, 410, 0, 411, 412,
	413, 0, 414, 415, 0, 1329, 416, 417, 418, 1315,
	1316, 419, 420, 421, 422, 423, 424, 425, 426, 427,
	0, 428, 1325, 0, 1252, 429, 0, 430, 431, 432,
	433, 434, 2956, 436, 1288, 1289, 1292, 529, 1331, 437,
	438, 439, 0, 440, 441, 442, 443, 444, 0, 0,
	0, 304, 445, 446, 447, 0, 1330, 738, 448, 530,
	449, 1297, 1298, 0, 1258, 0, 450, 451, 453, 1332,
	1290, 1333, 452, 454, 455, 1334, 456, 0, 0, 0,
	457, 458, 459, 460, 461, 462, 0, 463, 465, 464,
	0, 467, 1326, 466, 1335, 468, 469, 1336, 0, 470,
	471, 472, 473, 474, 475, 478, 1281, 1280, 476, 477,
	479, 480, 0, 481, 482, 484, 487, 483, 485, 2957,
	488, 2954, 502, 489, 490, 491, 492, 493, 494, 495,
	496, 497, 498, 499, 500, 504, 0, 503, 1337, 505,
	506, 507, 508, 509, 516, 518, 519, 514, 515, 517,
	520, 521, 523, 511, 512, 513, 1338, 522, 510, 1220,
	305, 1339, 524, 525, 526, 527, 1243, 1291, 528, 1305,
	531, 532, 0, 0, 533, 0, 534, 0, 0, 536,
	537, 538, 0, 0, 539, 540, 746, 1340, 541, 1341,
	1320, 542, 543, 1230, 544, 545, 546, 547, 548, 549,
	550, 551, 552, 553, 0, 554, 555, 748, 556, 557,
	558, 749, 559, 560, 561, 1321, 562, 751, 563, 564,
	0, 565, 566, 567, 0, 568, 569, 570, 571, 572,
	573, 574, 575, 1301, 576, 577, 579, 578, 580, 0,
	581, 0, 582, 583, 584, 0, 0, 0, 0, 0,
	585, 586, 588, 0, 589, 590, 591, 592, 587, 593,
	594, 595, 596, 597, 598, 0, 600, 601, 599, 602,
	603, 1342, 604, 605, 606, 607, 608, 1231, 609, 0,
	610, 611, 618, 619, 620, 612, 613, 614, 621, 622,
	623, 624, 2958, 626, 0, 628, 629, 627, 630, 631,
	632, 1284, 633, 754, 634, 615, 616, 635, 636, 1343,
	637, 638, 639, 640, 641, 642, 643, 1299, 0, 644,
	0, 645, 646, 647, 648, 649, 650, 652, 617, 653,
	658, 659, 1346, 654, 655, 656, 657, 1322, 661, 662,
	663, 664, 0, 665, 666, 1217, 660, 651, 0, 667,
	668, 669, 670, 671, 672, 0, 673, 674, 0, 675,
	1311, 1312, 1313, 1314, 0, 687, 0, 676, 678, 679,
	680, 681, 1323, 682, 1324, 1241, 683, 684, 685, 686,
	677, 688, 689, 0, 1224, 690, 691, 693, 695, 696,
	692, 694, 697, 1285, 698, 0, 0, 699, 700, 701,
	764, 1308, 1345, 0, 703, 702, 704, 705, 706, 767,
	707, 708, 709, 0, 0, 0, 0, 710, 711, 768,
	712, 2953, 714, 1221, 0, 0, 0, 0, 2949, 0,
	2952, 2959, 1236, 1237, 1233, 1234, 1246, 0, 1216, 0,
	0, 0, 0, 0, 0, 1214, 1215, 306, 307, 309,
	308, 310, 311, 312, 313, 1247, 314, 315, 0, 1245,
	0, 0, 0, 1287, 1251, 0, 0, 316, 0, 317,
	318, 319, 1327, 320, 321, 322, 323, 324, 325, 326,
	716, 1300, 0, 327, 1307, 328, 1306, 0, 1317, 329,
	330, 331, 332, 333, 334, 335, 1253, 1286, 1218, 336,
	1347, 1348, 723, 0, 337, 338, 1293, 0, 1274, 0,
	339, 340, 341, 342, 343, 344, 345, 346, 0, 0,
	348, 349, 350, 347, 351, 0, 352, 0, 353, 354,
	355, 356, 357, 358, 359, 0, 360, 361, 362, 1328,
	363, 364, 365, 1277, 1275, 1276, 1283, 1279, 1278, 1282,
	366, 367, 368, 369, 370, 1310, 2955, 373, 1304, 1303,
	1223, 376, 378, 372, 374, 0, 377, 375, 379, 0,
	380, 381, 382, 0, 0, 383, 1295, 385, 0, 386,
	387, 388, 0, 389, 390, 391, 0, 392, 393, 1229,
	394, 395, 396, 398, 400, 397, 399, 401, 402, 403,
	404, 405, 1318, 1319, 406, 1242, 303, 0, 0, 0,
	0, 0, 407, 408, 409, 1302, 0, 0, 0, 410,
	0, 411, 412, 413, 0, 414, 415, 0, 1329, 416,
	417, 418, 1315, 1316, 419, 420, 421, 422, 423, 424,
	425, 426, 427, 0, 428, 1325, 0, 1252, 429, 0,
	430, 431, 432, 433, 434, 2956, 436, 1288, 1289, 1292,
	529, 1331, 437, 438, 439, 0, 440, 441, 442, 443,
	444, 0, 0, 0, 304, 445, 446, 447, 0, 1330,
	738, 448, 530, 449, 1297, 1298, 0, 1258, 0, 450,
	451, 453, 1332, 1290, 1333, 452, 454, 455, 1334, 456,
	0, 0, 0, 457, 458, 459, 460, 461, 462, 0,
	463, 465, 464, 0, 467, 1326, 466, 1335, 468, 469,
	1336, 0, 470, 471, 472, 473, 474, 475, 478, 1281,
	1280, 476, 477, 479, 480, 0, 481, 482, 484, 487,
	483, 485, 2957, 488, 2954, 502, 489, 490, 491, 492,
	493, 494, 495, 496, 497, 498, 499, 500, 504, 0,
	503, 1337, 505, 506, 507, 508, 509, 516, 518, 519,
	514, 515, 517, 520, 521, 523, 511, 512, 513, 1338,
	522, 510, 1220, 305, 1339, 524, 525, 526, 527, 1243,
	1291, 528, 1305, 531, 532, 0, 0, 533, 0, 534,
	0, 0, 536, 537, 538, 0, 0, 539, 540, 746,
	1340, 541, 1341, 1320, 542, 543, 1230, 544, 545, 546,
	547, 548, 549, 550, 551, 552, 553, 0, 554, 555,
	748, 556, 557, 558, 749, 559, 560, 561, 1321, 562,
	751, 563, 564, 0, 565, 566, 567, 0, 568, 569,
	570, 571, 572, 573, 574, 575, 1301, 576, 577, 579,
	578, 580, 0, 581, 0, 582, 583, 584, 0, 0,
	0, 0, 0, 585, 586, 588, 0, 589, 590, 591,
	592, 587, 593, 594, 595, 596, 597, 598, 0, 600,
	601, 599, 602, 603, 1342, 604, 605, 606, 607, 608,
	1231, 609, 0, 610, 611, 618, 619, 620, 612, 613,
	614, 621, 622, 623, 624, 2958, 626, 0, 628, 629,
	627, 630, 631, 632, 1284, 633, 754, 634, 615, 616,
	635, 636, 1343, 637, 638, 639, 640, 641, 642, 643,
	1299, 0, 644, 0, 645, 646, 647, 648, 649, 650,
	652, 617, 653, 658, 659, 1346, 654, 655, 656, 657,
	1322, 661, 662, 663, 664, 0, 665, 666, 1217, 660,
	651, 0, 667, 668, 669, 670, 671, 672, 0, 673,
	674, 0, 675, 1311, 1312, 1313, 1314, 0, 687, 0,
	676, 678, 679, 680, 681, 1323, 682, 1324, 1241, 683,
	684, 685, 686, 677, 688, 689, 0, 1224, 690, 691,
	693, 695, 696, 692, 694, 697, 1285, 698, 0, 0,
	699, 700, 701, 764, 1308, 1345, 0, 703, 702, 704,
	705, 706, 767, 707, 708, 709, 0, 0, 0, 0,
	710, 711, 768, 712, 2953, 714, 1221, 0, 0, 0,
	0, 0, 0, 1263, 1235, 1236, 1237, 1233, 1234, 1246,
	0, 1216, 0, 0, 0, 0, 0, 0, 1214, 1215,
	306, 307, 309, 308, 310, 311, 312, 313, 1247, 314,
	315, 0, 1245, 0, 0, 0, 1287, 1251, 0, 0,
	316, 0, 317, 318, 319, 1327, 320, 321, 322, 323,
	324, 325, 326, 716, 1300, 0, 327, 1307, 328, 1306,
	0, 1317, 329, 330, 331, 332, 333, 334, 335, 1253,
	1286, 1218, 336, 1347, 1348, 723, 0, 337, 338, 1293,
	0, 1274, 0, 339, 340, 341, 342, 343, 344, 345,
	346, 0, 0, 348, 349, 350, 347, 351, 0, 352,
	0, 353, 354, 355, 356, 357, 358, 359, 0, 360,
	361, 362, 1328, 363, 364, 365, 1277, 1275, 1276, 1283,
	1279, 1278, 1282, 366, 367, 368, 369, 370, 1310, 371,
	373, 1304, 1303, 1223, 376, 378, 372, 374, 0, 377,
	375, 379, 0, 380, 381, 382, 0, 0, 383, 1295,
	385, 0, 386, 387, 388, 0, 389, 390, 391, 0,
	392, 393, 1229, 394, 395, 396, 398, 400, 397, 399,
	401, 402, 403, 404, 405, 1318, 1319, 406, 1242, 303,
	0, 0, 0, 0, 0, 407, 408, 409, 1302, 0,
	0, 0, 410, 0, 411, 412, 413, 0, 414, 415,
	0, 1329, 416, 417, 418, 1315, 1316, 419, 420, 421,
	422, 423, 424, 425, 426, 427, 0, 428, 1325, 0,
	1252, 429, 0, 430, 431, 432, 433, 434, 435, 436,
	1288, 1289, 1292, 529, 1331, 437, 438, 439, 0, 440,
	441, 442, 443, 444, 0, 0, 0, 304, 445, 446,
	447, 0, 1330, 738, 448, 530, 449, 1297, 1298, 0,
	1258, 0, 450, 451, 453, 1332, 1290, 1333, 452, 454,
	455, 1334, 456, 0, 0, 0, 457, 458, 459, 460,
	461, 462, 0, 463, 465, 464, 0, 467, 1326, 466,
	1335, 468, 469, 1336, 0, 470, 471, 472, 473, 474,
	475, 478, 1281, 1280, 476, 477, 479, 480, 0, 481,
	482, 484, 487, 483, 485, 486, 488, 501, 502, 489,
	490, 491, 492, 493, 494, 495, 496, 497, 498, 499,
	500, 504, 0, 503, 1337, 505, 506, 507, 508, 509,
	516, 518, 519, 514, 515, 517, 520, 521, 523, 511,
	512, 513, 1338, 522, 510, 1220, 305, 1339, 524, 525,
	526, 527, 1243, 1291, 528, 1305, 531, 532, 0, 0,
	533, 0, 534, 0, 0, 536, 537, 538, 0, 0,
	539, 540, 746, 1340, 541, 1341, 1320, 542, 543, 1230,
	544, 545, 546, 547, 548, 549, 550, 551, 552, 553,
	0, 554, 555, 748, 556, 557, 558, 749, 559, 560,
	561, 1321, 562, 751, 563, 564, 0, 565, 566, 567,
	0, 568, 569, 570, 571, 572, 573, 574, 575, 1301,
	576, 577, 579, 578, 580, 0, 581, 0, 582, 583,
	584, 0, 0, 0, 0, 0, 585, 586, 588, 0,
	589, 590, 591, 592, 587, 593, 594, 595, 596, 597,
	598, 0, 600, 601, 599, 602, 603, 1342, 604, 605,
	606, 607, 608, 1231, 609, 0, 610, 611, 618, 619,
	620, 612, 613, 614, 621, 622, 623, 624, 625, 626,
	0, 628, 629, 627, 630, 631, 632, 1284, 633, 754,
	634, 615, 616, 635, 636, 1343, 637, 638, 639, 640,
	641, 642, 643, 1299, 0, 644, 0, 645, 646, 647,
	648, 649, 650, 652, 617, 653, 658, 659, 1346, 654,
	655, 656, 657, 1322, 661, 662, 663, 664, 0, 665,
	666, 1217, 660, 651, 0, 667, 668, 669, 670, 671,
	672, 0, 673, 674, 0, 675, 1311, 1312, 1313, 1314,
	0, 687, 0, 676, 678, 679, 680, 681, 1323, 682,
	1324, 1241, 683, 684, 685, 686, 677, 688, 689, 0,
	1224, 690, 691, 693, 695, 696, 692, 694, 697, 1285,
	698, 0, 0, 699, 700, 701, 764, 1308, 1345, 0,
	703, 702, 704, 705, 706, 767, 707, 708, 709, 0,
	0, 0, 0, 710, 711, 768, 712, 713, 714, 1221,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1216, 0, 0, 0, 0, 0,
	0, 1214, 1215, 0, 0, 0, 0, 0, 0, 2072,
	0, 1247, 0, 0, 0, 1245, 1263, 1235, 1236, 1237,
	1233, 1234, 1246, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 306, 307, 309, 308, 310, 311, 312,
	313, 2702, 314, 315, 0, 0, 0, 0, 0, 1287,
	1251, 0, 0, 316, 0, 317, 318, 319, 1327, 320,
	321, 322, 323, 324, 325, 326, 716, 1300, 0, 327,
	1307, 328, 1306, 0, 1317, 329, 330, 331, 332, 333,
	334, 335, 1253, 1286, 1218, 336, 1347, 1348, 723, 0,
	337, 338, 1293, 0, 1274, 0, 339, 340, 341, 342,
	343, 344, 345, 346, 0, 0, 348, 349, 350, 347,
	351, 0, 352, 0, 353, 354, 355, 356, 357, 358,
	359, 0, 360, 361, 362, 1328, 363, 364, 365, 1277,
	1275, 1276, 1283, 1279, 1278, 1282, 366, 367, 368, 369,
	370, 1310, 371, 373, 1304, 1303, 1223, 376, 378, 372,
	374, 0, 377, 375, 379, 0, 380, 381, 382, 0,
	0, 383, 1295, 385, 0, 386, 387, 388, 0, 389,
	390, 391, 0, 392, 393, 1229, 394, 395, 396, 398,
	400, 397, 399, 401, 402, 403, 404, 405, 1318, 1319,
	406, 1242, 303, 0, 0, 0, 0, 0, 407, 408,
	409, 1302, 0, 0, 0, 410, 0, 411, 412, 413,
	0, 414, 415, 0, 1329, 416, 417, 418, 1315, 1316,
	419, 420, 421, 422, 423, 424, 425, 426, 427, 0,
	428, 1325, 0, 1252, 429, 0, 430, 431, 432, 433,
	434, 435, 436, 1288, 1289, 1292, 529, 1331, 437, 438,
	439, 0, 440, 441, 442, 443, 444, 0, 0, 0,
	304, 445, 446, 447, 0, 1330, 738, 448, 530, 449,
	1297, 1298, 0, 1258, 0, 450, 451, 453, 1332, 1290,
	1333, 452, 454, 455, 1334, 456, 0, 0, 0, 457,
	458, 459, 460, 461, 462, 0, 463, 465, 464, 0,
	467, 1326, 466, 1335, 468, 469, 1336, 0, 470, 471,
	472, 473, 474, 475, 478, 1281, 1280, 476, 477, 479,
	480, 0, 481, 482, 484, 487, 483, 485, 486, 488,
	501, 502, 489, 490, 491, 492, 493, 494, 495, 496,
	497, 498, 499, 500, 504, 0, 503, 1337, 505, 506,
	507, 508, 509, 516, 518, 519, 514, 515, 517, 520,
	521, 523, 511, 512, 513, 1338, 522, 510, 1220, 305,
	1339, 524, 525, 526, 527, 1243, 1291, 528, 1305, 531,
	532, 0, 0, 533, 0, 534, 0, 0, 536, 537,
	538, 0, 0, 539, 540, 746, 1340, 541, 1341, 1320,
	542, 543, 1230, 544, 545, 546, 547, 548, 549, 550,
	551, 552, 553, 0, 554, 555, 748, 556, 557, 558,
	749, 559, 560, 561, 1321, 562, 751, 563, 564, 0,
	565, 566, 567, 0, 568, 569, 570, 571, 572, 573,
	574, 575, 1301, 576, 577, 579, 578, 580, 0, 581,
	0, 582, 583, 584, 0, 0, 0, 0, 0, 585,
	586, 588, 0, 589, 590, 591, 592, 587, 593, 594,
	595, 596, 597, 598, 0, 600, 601, 599, 602, 603,
	1342, 604, 605, 606, 607, 608, 1231, 609, 0, 610,
	611, 618, 619, 620, 612, 613, 614, 621, 622, 623,
	624, 625, 626, 0, 628, 629, 627, 630, 631, 632,
	1284, 633, 754, 634, 615, 616, 635, 636, 1343, 637,
	638, 639, 640, 641, 642, 643, 1299, 0, 644, 0,
	645, 646, 647, 648, 649, 650, 652, 617, 653, 658,
	659, 1346, 654, 655, 656, 657, 1322, 661, 662, 663,
	664, 0, 665, 666, 1217, 660, 651, 0, 667, 668,
	669, 670, 671, 672, 0, 673, 674, 0, 675, 1311,
	1312, 1313, 1314, 0, 687, 0, 676, 678, 679, 680,
	681, 1323, 682, 1324, 1241, 683, 684, 685, 686, 677,
	688, 689, 0, 1224, 690, 691, 693, 695, 696, 692,
	694, 697, 1285, 698, 0, 0, 699, 700, 701, 764,
	1308, 1345, 0, 703, 702, 704, 705, 706, 767, 707,
	708, 709, 0, 0, 0, 0, 710, 711, 768, 712,
	713, 714, 1221, 0, 0, 0, 0, 2663, 0, 1263,
	1235, 1236, 1237, 1233, 1234, 1246, 0, 1216, 0, 0,
	0, 0, 0, 0, 1214, 1215, 306, 307, 309, 308,
	310, 311, 312, 313, 1247, 314, 315, 0, 1245, 0,
	0, 0, 1287, 1251, 0, 0, 316, 0, 317, 318,
	319, 1327, 320, 321, 322, 323, 324, 325, 326, 716,
	1300, 0, 327, 1307, 328, 1306, 0, 1317, 329, 330,
	331, 332, 333, 334, 335, 1253, 1286, 1218, 336, 1347,
	1348, 723, 0, 337, 338, 1293, 0, 1274, 0, 339,
	340, 341, 342, 343, 344, 345, 346, 0, 0, 348,
	349, 350, 347, 351, 0, 352, 0, 353, 354, 355,
	356, 357, 358, 359, 0, 360, 361, 362, 1328, 363,
	364, 365, 1277, 1275, 1276, 1283, 1279, 1278, 1282, 366,
	367, 368, 369, 370, 1310, 371, 373, 1304, 1303, 1223,
	376, 378, 372, 374, 0, 377, 375, 379, 0, 380,
	381, 382, 0, 0, 383, 1295, 385, 0, 386, 387,
	388, 0, 389, 390, 391, 0, 392, 393, 1229, 394,
	395, 396, 398, 400, 397, 399, 401, 402, 403, 404,
	405, 1318, 1319, 406, 1242, 303, 0, 0, 0, 0,
	0, 407, 408, 409, 1302, 0, 0, 0, 410, 0,
	411, 412, 413, 0, 414, 415, 0, 1329, 416, 417,
	418, 1315, 1316, 419, 420, 421, 422, 423, 424, 425,
	426, 427, 0, 428, 1325, 0, 1252, 429, 0, 430,
	431, 432, 433, 434, 435, 436, 1288, 1289, 1292, 529,
	1331, 437, 438, 439, 0, 440, 441, 442, 443, 444,
	0, 0, 0, 304, 445, 446, 447, 0, 1330, 738,
	448, 530, 449, 1297, 1298, 0, 1258, 0, 450, 451,
	453, 1332, 1290, 1333, 452, 454, 455, 1334, 456, 0,
	0, 0, 457, 458, 459, 460, 461, 462, 0, 463,
	465, 464, 0, 467, 1326, 466, 1335, 468, 469, 1336,
	0, 470, 471, 472, 473, 474, 475, 478, 1281, 1280,
	476, 477, 479, 480, 0, 481, 482, 484, 487, 483,
	485, 486, 488, 501, 502, 489, 490, 491, 492, 493,
	494, 495, 496, 497, 498, 499, 500, 504, 0, 503,
	1337, 505, 506, 507, 508, 509, 516, 518, 519, 514,
	515, 517, 520, 521, 523, 511, 512, 513, 1338, 522,
	510, 1220, 305, 1339, 524, 525, 526, 527, 1243, 1291,
	528, 1305, 531, 532, 0, 0, 533, 0, 534, 0,
	0, 536, 537, 538, 0, 0, 539, 540, 746, 1340,
	541, 1341, 1320, 542, 543, 1230, 544, 545, 546, 547,
	548, 549, 550, 551, 552, 553, 0, 554, 555, 748,
	556, 557, 558, 749, 559, 560, 561, 1321, 562, 751,
	563, 564, 0, 565, 566, 567, 0, 568, 569, 570,
	571, 572, 573, 574, 575, 1301, 576, 577, 579, 578,
	580, 0, 581, 0, 582, 583, 584, 0, 0, 0,
	0, 0, 585, 586, 588, 0, 589, 590, 591, 592,
	587, 593, 594, 595, 596, 597, 598, 0, 600, 601,
	599, 602, 603, 1342, 604, 605, 606, 607, 608, 1231,
	609, 0, 610, 611, 618, 619, 620, 612, 613, 614,
	621, 622, 623, 624, 625, 626, 0, 628, 629, 627,
	630, 631, 632, 1284, 633, 754, 634, 615, 616, 635,
	636, 1343, 637, 638, 639, 640, 641, 642, 643, 1299,
	0, 644, 0, 645, 646, 647, 648, 649, 650, 652,
	617, 653, 658, 659, 1346, 654, 655, 656, 657, 1322,
	661, 662, 663, 664, 0, 665, 666, 1217, 660, 651,
	0, 667, 668, 669, 670, 671, 672, 0, 673, 674,
	0, 675, 1311, 1312, 1313, 1314, 0, 687, 0, 676,
	678, 679, 680, 681, 1323, 682, 1324, 1241, 683, 684,
	685, 686, 677, 688, 689, 0, 1224, 690, 691, 693,
	695, 696, 692, 694, 697, 1285, 698, 0, 0, 699,
	700, 701, 764, 1308, 1345, 0, 703, 702, 704, 705,
	706, 767, 707, 708, 709, 0, 0, 0, 0, 710,
	711, 768, 712, 713, 714, 1221, 0, 0, 0, 0,
	2633, 0, 1263, 1235, 1236, 1237, 1233, 1234, 1246, 0,
	1216, 0, 0, 0, 0, 0, 0, 1214, 1215, 306,
	307, 309, 308, 310, 311, 312, 313, 1247, 314, 315,
	0, 1245, 0, 0, 0, 1287, 1251, 0, 0, 316,
	0, 317, 318, 319, 1327, 320, 321, 322, 323, 324,
	325, 326, 716, 1300, 0, 327, 1307, 328, 1306, 0,
	1317, 329, 330, 331, 332, 333, 334, 335, 1253, 1286,
	1218, 336, 1347, 1348, 723, 0, 337, 338, 1293, 0,
	1274, 0, 339, 340, 341, 342, 343, 344, 345, 346,
	0, 0, 348, 349, 350, 347, 351, 0, 352, 0,
	353, 354, 355, 356, 357, 358, 359, 0, 360, 361,
	362, 1328, 363, 364, 365, 1277, 1275, 1276, 1283, 1279,
	1278, 1282, 366, 367, 368, 369, 370, 1310, 371, 373,
	1304, 1303, 1223, 376, 378, 372, 374, 0, 377, 375,
	379, 0, 380, 381, 382, 0, 0, 383, 1295, 385,
	0, 386, 387, 388, 0, 389, 390, 391, 0, 392,
	393, 1229, 394, 395, 396, 398, 400, 397, 399, 401,
	402, 403, 404, 405, 1318, 1319, 406, 1242, 303, 0,
	0, 0, 0, 0, 407, 408, 409, 1302, 0, 0,
	0, 410, 0, 411, 412, 413, 0, 414, 415, 0,
	1329, 416, 417, 418, 1315, 1316, 419, 420, 421, 422,
	423, 424, 425, 426, 427, 0, 428, 1325, 0, 1252,
	429, 0, 430, 431, 432, 433, 434, 435, 436, 1288,
	1289, 1292, 529, 1331, 437, 438, 439, 0, 440, 441,
	442, 443, 444, 0, 0, 0, 304, 445, 446, 447,
	0, 1330, 738, 448, 530, 449, 1297, 1298, 0, 1258,
	0, 450, 451, 453, 1332, 1290, 1333, 452, 454, 455,
	1334, 456, 0, 0, 0, 457, 458, 459, 460, 461,
	462, 0, 463, 465, 464, 0, 467, 1326, 466, 1335,
	468, 469, 1336, 0, 470, 471, 472, 473, 474, 475,
	478, 1281, 1280, 476, 477, 479, 480, 0, 481, 482,
	484, 487, 483, 485, 486, 488, 501, 502, 489, 490,
	491, 492, 493, 494, 495, 496, 497, 498, 499, 500,
	504, 0, 503, 1337, 505, 506, 507, 508, 509, 516,
	518, 519, 514, 515, 517, 520, 521, 523, 511, 512,
	513, 1338, 522, 510, 1220, 305, 1339, 524, 525, 526,
	527, 1243, 1291, 528, 1305, 531, 532, 0, 0, 533,
	0, 534, 0, 0, 536, 537, 538, 0, 0, 539,
	540, 746, 1340, 541, 1341, 1320, 542, 543, 1230, 544,
	545, 546, 547, 548, 549, 550, 551, 552, 553, 0,
	554, 555, 748, 556, 557, 558, 749, 559, 560, 561,
	1321, 562, 751, 563, 564, 0, 565, 566, 567, 0,
	568, 569, 570, 571, 572, 573, 574, 575, 1301, 576,
	577, 579, 578, 580, 0, 581, 0, 582, 583, 584,
	0, 0, 0, 0, 0, 585, 586, 588, 0, 589,
	590, 591, 592, 587, 593, 594, 595, 596, 597, 598,
	0, 600, 601, 599, 602, 603, 1342, 604, 605, 606,
	607, 608, 1231, 609, 0, 610, 611, 618, 619, 620,
	612, 613, 614, 621, 622, 623, 624, 625, 626, 0,
	628, 629, 627, 630, 631, 632, 1284, 633, 754, 634,
	615, 616, 635, 636, 1343, 637, 638, 639, 640, 641,
	642, 643, 1299, 0, 644, 0, 645, 646, 647, 648,
	649, 650, 652, 617, 653, 658, 659, 1346, 654, 655,
	656, 657, 1322, 661, 662, 663, 664, 0, 665, 666,
	1217, 660, 651, 0, 667, 668, 669, 670, 671, 672,
	0, 673, 674, 0, 675, 1311, 1312, 1313, 1314, 0,
	687, 0, 676, 678, 679, 680, 681, 1323, 682, 1324,
	1241, 683, 684, 685, 686, 677, 688, 689, 0, 1224,
	690, 691, 693, 695, 696, 692, 694, 697, 1285, 698,
	0, 0, 699, 700, 701, 764, 1308, 1345, 0, 703,
	702, 704, 705, 706, 767, 707, 708, 709, 0, 0,
	0, 0, 710, 711, 768, 712, 713, 714, 1221, 0,
	0, 0, 0, 1904, 0, 1263, 1235, 1236, 1237, 1233,
	1234, 1246, 0, 1216, 0, 0, 0, 0, 0, 0,
	1214, 1215, 306, 307, 309, 308, 310, 311, 312, 313,
	1247, 314, 315, 0, 1245, 0, 0, 0, 1287, 1251,
	0, 0, 316, 0, 317, 318, 319, 1327, 320, 321,
	322, 323, 324, 325, 326, 716, 1300, 0, 327, 1307,
	328, 1306, 0, 1317, 329, 330, 331, 332, 333, 334,
	335, 1253, 1286, 1218, 336, 1347, 1348, 723, 0, 337,
	338, 1293, 0, 1274, 0, 339, 340, 341, 342, 343,
	344, 345, 346, 0, 0, 348, 349, 350, 347, 351,
	0, 352, 0, 353, 354, 355, 356, 357, 358, 359,
	0, 360, 361, 362, 1328, 363, 364, 365, 1277, 1275,
	1276, 1283, 1279, 1278, 1282, 366, 367, 368, 369, 370,
	1310, 371, 373, 1304, 1303, 1223, 376, 378, 372, 374,
	0, 377, 375, 379, 0, 380, 381, 382, 0, 0,
	383, 1295, 385, 0, 386, 387, 388, 0, 389, 390,
	391, 0, 392, 393, 1229, 394, 395, 396, 398, 400,
	397, 399, 401, 402, 403, 404, 405, 1318, 1319, 406,
	1242, 303, 0, 0, 0, 0, 0, 407, 408, 409,
	1302, 0, 0, 0, 410, 0, 411, 412, 413, 0,
	414, 415, 0, 1329, 416, 417, 418, 1315, 1316, 419,
	420, 421, 422, 423, 424, 425, 426, 427, 0, 428,
	1325, 0, 1252, 429, 0, 430, 431, 432, 433, 434,
	435, 436, 1288, 1289, 1292, 529, 1331, 437, 438, 439,
	0, 440, 441, 442, 443, 444, 0, 0, 0, 304,
	445, 446, 447, 0, 1330, 738, 448, 530, 449, 1297,
	1298, 0, 1258, 0, 450, 451, 453, 1332, 1290, 1333,
	452, 454, 455, 1334, 456, 0, 0, 0, 457, 458,
	459, 460, 461, 462, 0, 463, 465, 464, 0, 467,
	1326, 466, 1335, 468, 469, 1336, 0, 470, 471, 472,
	473, 474, 475, 478, 1281, 1280, 476, 477, 479, 480,
	0, 481, 482, 484, 487, 483, 485, 486, 488, 501,
	502, 489, 490, 491, 492, 493, 494, 495, 496, 497,
	498, 499, 500, 504, 0, 503, 1337, 505, 506, 507,
	508, 509, 516, 518, 519, 514, 515, 517, 520, 521,
	523, 511, 512, 513, 1338, 522, 510, 1220, 305, 1339,
	524, 525, 526, 527, 1243, 1291, 528, 1305, 531, 532,
	0, 0, 533, 0, 534, 0, 0, 536, 537, 538,
	0, 0, 539, 540, 746, 1340, 541, 1341, 1320, 542,
	543, 1230, 544, 545, 546, 547, 548, 549, 550, 551,
	552, 553, 0, 554, 555, 748, 556, 557, 558, 749,
	559, 560, 561, 1321, 562, 751, 563, 564, 0, 565,
	566, 567, 0, 568, 569, 570, 571, 572, 573, 574,
	575, 1301, 576, 577, 579, 578, 580, 0, 581, 0,
	582, 583, 584, 0, 0, 0, 0, 0, 585, 586,
	588, 0, 589, 590, 591, 592, 587, 593, 594, 595,
	596, 597, 598, 0, 600, 601, 599, 602, 603, 1342,
	604, 605, 606, 607, 608, 1231, 609, 0, 610, 611,
	618, 619, 620, 612, 613, 614, 621, 622, 623, 624,
	625, 626, 0, 628, 629, 627, 630, 631, 632, 1284,
	633, 754, 634, 615, 616, 635, 636, 1343, 637, 638,
	639, 640, 641, 642, 643, 1299, 0, 644, 0, 645,
	646, 647, 648, 649, 650, 652, 617, 653, 658, 659,
	1346, 654, 655, 656, 657, 1322, 661, 662, 663, 664,
	0, 665, 666, 1217, 660, 651, 0, 667, 668, 669,
	670, 671, 672, 0, 673, 674, 0, 675, 1311, 1312,
	1313, 1314, 0, 687, 0, 676, 678, 679, 680, 681,
	1323, 682, 1324, 1241, 683, 684, 685, 686, 677, 688,
	689, 0, 1224, 690, 691, 693, 695, 696, 692, 694,
	697, 1285, 698, 0, 0, 699, 700, 701, 764, 1308,
	1345, 0, 703, 702, 704, 705, 706, 767, 707, 708,
	709, 0, 0, 0, 0, 710, 711, 768, 712, 713,
	714, 1221, 0, 0, 0, 0, 1832, 0, 1263, 1235,
	1236, 1237, 1233, 1234, 1246, 0, 1216, 0, 0, 0,
	0, 0, 0, 1214, 1215, 306, 307, 309, 308, 310,
	311, 312, 313, 1247, 314, 315, 0, 1245, 0, 0,
	0, 1287, 1251, 0, 0, 316, 0, 317, 318, 319,
	1327, 320, 321, 322, 323, 324, 325, 326, 716, 1300,
	0, 327, 1307, 328, 1306, 0, 1317, 329, 330, 331,
	332, 333, 334, 335, 1253, 1286, 1218, 336, 1347, 1348,
	723, 0, 337, 338, 1293, 0, 1274, 0, 339, 340,
	341, 342, 343, 344, 345, 346, 0, 0, 348, 349,
	350, 347, 351, 0, 352, 0, 353, 354, 355, 356,
	357, 358, 359, 0, 360, 361, 362, 1328, 363, 364,
	365, 1277, 1275, 1276, 1283, 1279, 1278, 1282, 366, 367,
	368, 369, 370, 1310, 371, 373, 1304, 1303, 1223, 376,
	378, 372, 374, 0, 377, 375, 379, 0, 380, 381,
	382, 0, 0, 383, 1295, 385, 0, 386, 387, 388,
	0, 389, 390, 391, 0, 392, 393, 1229, 394, 395,
	396, 398, 400, 397, 399, 401, 402, 403, 404, 405,
	1318, 1319, 406, 1242, 303, 0, 0, 0, 0, 0,
	407, 408, 409, 1302, 0, 0, 0, 410, 0, 411,
	412, 413, 0, 414, 415, 0, 1329, 416, 417, 418,
	1315, 1316, 419, 420, 421, 422, 423, 424, 425, 426,
	427, 0, 428, 1325, 0, 1252, 429, 0, 430, 431,
	432, 433, 434, 435, 436, 1288, 1289, 1292, 529, 1331,
	437, 438, 439, 0, 440, 441, 442, 443, 444, 0,
	0, 0, 304, 445, 446, 447, 0, 1330, 738, 448,
	530, 449, 1297, 1298, 0, 1258, 0, 450, 451, 453,
	1332, 1290, 1333, 452, 454, 455, 1334, 456, 0, 0,
	0, 457, 458, 459, 460, 461, 462, 0, 463, 465,
	464, 0, 467, 1326, 466, 1335, 468, 469, 1336, 0,
	470, 471, 472, 473, 474, 475, 478, 1281, 1280, 476,
	477, 479, 480, 0, 481, 482, 484, 487, 483, 485,
	486, 488, 501, 502, 489, 490, 491, 492, 493, 494,
	495, 496, 497, 498, 499, 500, 504, 0, 503, 1337,
	505, 506, 507, 508, 509, 516, 518, 519, 514, 515,
	517, 520, 521, 523, 511, 512, 513, 1338, 522, 510,
	1220, 305, 1339, 524, 525, 526, 527, 1243, 1291, 528,
	1305, 531, 532, 0, 0, 533, 0, 534, 0, 0,
	536, 537, 538, 0, 0, 539, 540, 746, 1340, 541,
	1341, 1320, 542, 543, 1230, 544, 545, 546, 547, 548,
	549, 550, 551, 552, 553, 0, 554, 555, 748, 556,
	557, 558, 749, 559, 560, 561, 1321, 562, 751, 563,
	564, 0, 565, 566, 567, 0, 568, 569, 570, 571,
	572, 573, 574, 575, 1301, 576, 577, 579, 578, 580,
	0, 581, 0, 582, 583, 584, 0, 0, 0, 0,
	0, 585, 586, 588, 0, 589, 590, 591, 592, 587,
	593, 594, 595, 596, 597, 598, 0, 600, 601, 599,
	602, 603, 1342, 604, 605, 606, 607, 608, 1231, 609,
	0, 610, 611, 618, 619, 620, 612, 613, 614, 621,
	622, 623, 624, 625, 626, 0, 628, 629, 627, 630,
	631, 632, 1284, 633, 754, 634, 615, 616, 635, 636,
	1343, 637, 638, 639, 640, 641, 642, 643, 1299, 0,
	644, 0, 645, 646, 647, 648, 649, 650, 652, 617,
	653, 658, 659, 1346, 654, 655, 656, 657, 1322, 661,
	662, 663, 664, 0, 665, 666, 1217, 660, 651, 0,
	667, 668, 669, 670, 671, 672, 0, 673, 674, 0,
	675, 1311, 1312, 1313, 1314, 0, 687, 0, 676, 678,
	679, 680, 681, 1323, 682, 1324, 1241, 683, 684, 685,
	686, 677, 688, 689, 0, 1224, 690, 691, 693, 695,
	696, 692, 694, 697, 1285, 698, 0, 0, 699, 700,
	701, 764, 1308, 1345, 0, 703, 702, 704, 705, 706,
	767, 707, 708, 709, 0, 0, 0, 0, 710, 711,
	768, 712, 713, 714, 1221, 0, 0, 0, 0, 1827,
	0, 1263, 1235, 1236, 1237, 1233, 1234, 1246, 0, 1216,
	0, 0, 0, 0, 0, 0, 1214, 1215, 306, 307,
	309, 308, 310, 311, 312, 313, 1247, 314, 315, 0,
	1245, 0, 0, 0, 1287, 1251, 0, 0, 316, 0,
	317, 318, 319, 1327, 320, 321, 322, 323, 324, 325,
	326, 716, 1300, 0, 327, 1307, 328, 1306, 0, 1317,
	329, 330, 331, 332, 333, 334, 335, 1253, 1286, 1218,
	336, 1347, 1348, 723, 0, 337, 338, 1293, 0, 1274,
	0, 339, 340, 341, 342, 343, 344, 345, 346, 0,
	0, 348, 349, 350, 347, 351, 0, 352, 0, 353,
	354, 355, 356, 357, 358, 359, 0, 360, 361, 362,
	1328, 363, 364, 365, 1277, 1275, 1276, 1283, 1279, 1278,
	1282, 366, 367, 368, 369, 370, 1310, 371, 373, 1304,
	1303, 1223, 376, 378, 372, 374, 0, 377, 375, 379,
	0, 380, 381, 382, 0, 0, 383, 1295, 385, 0,
	386, 387, 388, 0, 389, 390, 391, 0, 392, 393,
	1229, 394, 395, 396, 398, 400, 397, 399, 401, 402,
	403, 404, 405, 1318, 1319, 406, 1242, 303, 0, 0,
	0, 0, 0, 407, 408, 409, 1302, 0, 0, 0,
	410, 0, 411, 412, 413, 0, 414, 415, 0, 1329,
	416, 417, 418, 1315, 1316, 419, 420, 421, 422, 423,
	424, 425, 426, 427, 0, 428, 1325, 0, 1252, 429,
	0, 430, 431, 432, 433, 434, 435, 436, 1288, 1289,
	1292, 529, 1331, 437, 438, 439, 0, 440, 441, 442,
	443, 444, 0, 0, 0, 304, 445, 446, 447, 0,
	1330, 738, 448, 530, 449, 1297, 1298, 0, 1258, 0,
	450, 451, 453, 1332, 1290, 1333, 452, 454, 455, 1334,
	456, 0, 0, 0, 457, 458, 459, 460, 461, 462,
	0, 463, 465, 464, 0, 467, 1326, 466, 1335, 468,
	469, 1336, 0, 470, 471, 472, 473, 474, 475, 478,
	1281, 1280, 476, 477, 479, 480, 0, 481, 482, 484,
	487, 483, 485, 486, 488, 501, 502, 489, 490, 491,
	492, 493, 494, 495, 496, 497, 498, 499, 500, 504,
	0, 503, 1337, 505, 506, 507, 508, 509, 516, 518,
	519, 514, 515, 517, 520, 521, 523, 511, 512, 513,
	1338, 522, 510, 1220, 305, 1339, 524, 525, 526, 527,
	1243, 1291, 528, 1305, 531, 532, 0, 0, 533, 0,
	534, 0, 0, 536, 537, 538, 0, 0, 539, 540,
	746, 1340, 541, 1341, 1320, 542, 543, 1230, 544, 545,
	546, 547, 548, 549, 550, 551, 552, 553, 0, 554,
	555, 748, 556, 557, 558, 749, 559, 560, 561, 1321,
	562, 751, 563, 564, 0, 565, 566, 567, 0, 568,
	569, 570, 571, 572, 573, 574, 575, 1301, 576, 577,
	579, 578, 580, 0, 581, 0, 582, 583, 584, 0,
	0, 0, 0, 0, 585, 586, 588, 0, 589, 590,
	591, 592, 587, 593, 594, 595, 596, 597, 598, 0,
	600, 601, 599, 602, 603, 1342, 604, 605, 606, 607,
	608, 1231, 609, 0, 610, 611, 618, 619, 620, 612,
	613, 614, 621, 622, 623, 624, 625, 626, 0, 628,
	629, 627, 630, 631, 632, 1284, 633, 754, 634, 615,
	616, 635, 636, 1343, 637, 638, 639, 640, 641, 642,
	643, 1299, 0, 644, 0, 645, 646, 647, 648, 649,
	650, 652, 617, 653, 658, 659, 1346, 654, 655, 656,
	657, 1322, 661, 662, 663, 664, 0, 665, 666, 1217,
	660, 651, 0, 667, 668, 669, 670, 671, 672, 0,
	673, 674, 0, 675, 1311, 1312, 1313, 1314, 0, 687,
	0, 676, 678, 679, 680, 681, 1323, 682, 1324, 1241,
	683, 684, 685, 686, 677, 688, 689, 0, 1224, 690,
	691, 693, 695, 696, 692, 694, 697, 1285, 698, 0,
	0, 699, 700, 701, 764, 1308, 1345, 0, 703, 702,
	704, 705, 706, 767, 707, 708, 709, 0, 0, 0,
	0, 710, 711, 768, 712, 713, 714, 1221, 0, 0,
	0, 0, 1813, 0, 1263, 1235, 1236, 1237, 1233, 1234,
	1246, 0, 1216, 0, 0, 0, 0, 0, 0, 1214,
	1215, 306, 307, 309, 308, 310, 311, 312, 313, 1247,
	314, 315, 0, 1245, 0, 0, 0, 1287, 1251, 0,
	0, 316, 0, 317, 318, 319, 1327, 320, 321, 322,
	323, 324, 325, 326, 716, 1300, 0, 327, 1307, 328,
	1306, 0, 1317, 329, 330, 331, 332, 333, 334, 335,
	1253, 1286, 1218, 336, 1347, 1348, 723, 0, 337, 338,
	1293, 0, 1274, 0, 339, 340, 341, 342, 343, 344,
	345, 346, 0, 0, 348, 349, 350, 347, 351, 0,
	352, 0, 353, 354, 355, 356, 357, 358, 359, 0,
	360, 361, 362, 1328, 363, 364, 365, 1277, 1275, 1276,
	1283, 1279, 1278, 1282, 366, 367, 368, 369, 370, 1310,
	371, 373, 1304, 1303, 1223, 376, 378, 372, 374, 0,
	377, 375, 379, 0, 380, 381, 382, 0, 0, 383,
	1295, 385, 0, 386, 387, 388, 0, 389, 390, 391,
	0, 392, 393, 1229, 394, 395, 396, 398, 400, 397,
	399, 401, 402, 403, 404, 405, 1318, 1319, 406, 1242,
	303, 0, 0, 0, 0, 0, 407, 408, 409, 1302,
	0, 0, 0, 410, 0, 411, 412, 413, 0, 414,
	415, 0, 1329, 416, 417, 418, 1315, 1316, 419, 420,
	421, 422, 423, 424, 425, 426, 427, 0, 428, 1325,
	0, 1252, 429, 0, 430, 431, 432, 433, 434, 435,
	436, 1288, 1289, 1292, 529, 1331, 437, 438, 439, 0,
	440, 441, 442, 443, 444, 0, 0, 0, 304, 445,
	446, 447, 0, 1330, 738, 448, 530, 449, 1297, 1298,
	0, 1258, 0, 450, 451, 453, 1332, 1290, 1333, 452,
	454, 455, 1334, 456, 0, 0, 0, 457, 458, 459,
	460, 461, 462, 0, 463, 465, 464, 0, 467, 1326,
	466, 1335, 468, 469, 1336, 0, 470, 471, 472, 473,
	474, 475, 478, 1281, 1280, 476, 477, 479, 480, 0,
	481, 482, 484, 487, 483, 485, 486, 488, 501, 502,
	489, 490, 491, 492, 493, 494, 495, 496, 497, 498,
	499, 500, 504, 0, 503, 1337, 505, 506, 507, 508,
	509, 516, 518, 519, 514, 515, 517, 520, 521, 523,
	511, 512, 513, 1338, 522, 510, 1220, 305, 1339, 524,
	525, 526, 527, 1243, 1291, 528, 1305, 531, 532, 0,
	0, 533, 0, 534, 0, 0, 536, 537, 538, 0,
	0, 539, 540, 746, 1340, 541, 1341, 1320, 542, 543,
	1230, 544, 545, 546, 547, 548, 549, 550, 551, 552,
	553, 0, 554, 555, 748, 556, 557, 558, 749, 559,
	560, 561, 1321, 562, 751, 563, 564, 0, 565, 566,
	567, 0, 568, 569, 570, 571, 572, 573, 574, 575,
	1301, 576, 577, 579, 578, 580, 0, 581, 0, 582,
	583, 584, 0, 0, 0, 0, 0, 585, 586, 588,
	0, 589, 590, 591, 592, 587, 593, 594, 595, 596,
	597, 598, 0, 600, 601, 599, 602, 603, 1342, 604,
	605, 606, 607, 608, 1231, 609, 0, 610, 611, 618,
	619, 620, 612, 613, 614, 621, 622, 623, 624, 625,
	626, 0, 628, 629, 627, 630, 631, 632, 1284, 633,
	754, 634, 615, 616, 635, 636, 1343, 637, 638, 639,
	640, 641, 642, 643, 1299, 0, 644, 0, 645, 646,
	647, 648, 649, 650, 652, 617, 653, 658, 659, 1346,
	654, 655, 656, 657, 1322, 661, 662, 663, 664, 0,
	665, 666, 1217, 660, 651, 0, 667, 668, 669, 670,
	671, 672, 0, 673, 674, 0, 675, 1311, 1312, 1313,
	1314, 0, 687, 0, 676, 678, 679, 680, 681, 1323,
	682, 1324, 1241, 683, 684, 685, 686, 677, 688, 689,
	0, 1224, 690, 691, 693, 695, 696, 692, 694, 697,
	1285, 698, 0, 0, 699, 700, 701, 764, 1308, 1345,
	0, 703, 702, 704, 705, 706, 767, 707, 708, 709,
	0, 0, 0, 0, 710, 711, 768, 712, 713, 714,
	1221, 0, 0, 0, 0, 1808, 0, 1263, 1235, 1236,
	1237, 1233, 1234, 1246, 0, 1216, 0, 0, 0, 0,
	0, 0, 1214, 1215, 306, 307, 309, 308, 310, 311,
	312, 313, 1247, 314, 315, 0, 1245, 0, 0, 0,
	1287, 1251, 0, 0, 316, 0, 317, 318, 319, 1327,
	320, 321, 322, 323, 324, 325, 326, 716, 1300, 0,
	327, 1307, 328, 1306, 0, 1317, 329, 330, 331, 332,
	333, 334, 335, 1253, 1286, 1218, 336, 1347, 1348, 723,
	0, 337, 338, 1293, 0, 1274, 0, 339, 340, 341,
	342, 343, 344, 345, 346, 0, 0, 348, 349, 350,
	347, 351, 0, 352, 0, 353, 354, 355, 356, 357,
	358, 359, 0, 360, 361, 362, 1328, 363, 364, 365,
	1277, 1275, 1276, 1283, 1279, 1278, 1282, 366, 367, 368,
	369, 370, 1310, 371, 373, 1304, 1303, 1223, 376, 378,
	372, 374, 0, 377, 375, 379, 0, 380, 381, 382,
	0, 0, 383, 1295, 385, 0, 386, 387, 388, 0,
	389, 390, 391, 0, 392, 393, 1229, 394, 395, 396,
	398, 400, 397, 399, 401, 402, 403, 404, 405, 1318,
	1319, 406, 1242, 303, 0, 0, 0, 0, 0, 407,
	408, 409, 1302, 0, 0, 0, 410, 0, 411, 412,
	413, 0, 414, 415, 0, 1329, 416, 417, 418, 1315,
	1316, 419, 420, 421, 422, 423, 424, 425, 426, 427,
	0, 428, 1325, 0, 1252, 429, 0, 430, 431, 432,
	433, 434, 435, 436, 1288, 1289, 1292, 529, 1331, 437,
	438, 439, 0, 440, 441, 442, 443, 444, 0, 0,
	0, 304, 445, 446, 447, 0, 1330, 738, 448, 530,
	449, 1297, 1298, 0, 1258, 0, 450, 451, 453, 1332,
	1290, 1333, 452, 454, 455, 1334, 456, 0, 0, 0,
	457, 458, 459, 460, 461, 462, 0, 463, 465, 464,
	0, 467, 1326, 466, 1335, 468, 469, 1336, 0, 470,
	471, 472, 473, 474, 475, 478, 1281, 1280, 476, 477,
	479, 480, 0, 481, 482, 484, 487, 483, 485, 486,
	488, 501, 502, 489, 490, 491, 492, 493, 494, 495,
	496, 497, 498, 499, 500, 504, 0, 503, 1337, 505,
	506, 507, 508, 509, 516, 518, 519, 514, 515, 517,
	520, 521, 523, 511, 512, 513, 1338, 522, 510, 1220,
	305, 1339, 524, 525, 526, 527, 1243, 1291, 528, 1305,
	531, 532, 0, 0, 533, 0, 534, 0, 0, 536,
	537, 538, 0, 0, 539, 540, 746, 1340, 541, 1341,
	1320, 542, 543, 1230, 544, 545, 546, 547, 548, 549,
	550, 551, 552, 553, 0, 554, 555, 748, 556, 557,
	558, 749, 559, 560, 561, 1321, 562, 751, 563, 564,
	0, 565, 566, 567, 0, 568, 569, 570, 571, 572,
	573, 574, 575, 1301, 576, 577, 579, 578, 580, 0,
	581, 0, 582, 583, 584, 0, 0, 0, 0, 0,
	585, 586, 588, 0, 589, 590, 591, 592, 587, 593,
	594, 595, 596, 597, 598, 0, 600, 601, 599, 602,
	603, 1342, 604, 605, 606, 607, 608, 1231, 609, 0,
	610, 611, 618, 619, 620, 612, 613, 614, 621, 622,
	623, 624, 625, 626, 0, 628, 629, 627, 630, 631,
	632, 1284, 633, 754, 634, 615, 616, 635, 636, 1343,
	637, 638, 639, 640, 641, 642, 643, 1299, 0, 644,
	0, 645, 646, 647, 648, 649, 650, 652, 617, 653,
	658, 659, 1346, 654, 655, 656, 657, 1322, 661, 662,
	663, 664, 0, 665, 666, 1217, 660, 651, 0, 667,
	668, 669, 670, 671, 672, 0, 673, 674, 0, 675,
	1311, 1312, 1313, 1314, 0, 687, 0, 676, 678, 679,
	680, 681, 1323, 682, 1324, 1241, 683, 684, 685, 686,
	677, 688, 689, 0, 1224, 690, 691, 693, 695, 696,
	692, 694, 697, 1285, 698, 0, 0, 699, 700, 701,
	764, 1308, 1345, 0, 703, 702, 704, 705, 706, 767,
	707, 708, 709, 0, 0, 0, 0, 710, 711, 768,
	712, 713, 714, 1221, 0, 0, 0, 0, 1714, 0,
	1263, 1235, 1236, 1237, 1233, 1234, 1246, 0, 1216, 0,
	0, 0, 0, 0, 0, 1214, 1215, 306, 307, 309,
	308, 310, 311, 312, 313, 1247, 314, 315, 0, 1245,
	0, 0, 0, 1287, 1251, 0, 0, 316, 0, 317,
	318, 319, 1327, 320, 321, 322, 323, 324, 325, 326,
	716, 1300, 0, 327, 1307, 328, 1306, 0, 1317, 329,
	330, 331, 332, 333, 334, 335, 1253, 1286, 1218, 336,
	1347, 1348, 723, 0, 337, 338, 1293, 0, 1274, 0,
	339, 340, 341, 342, 343, 344, 345, 346, 0, 0,
	348, 349, 350, 347, 351, 0, 352, 0, 353, 354,
	355, 356, 357, 358, 359, 0, 360, 361, 362, 1328,
	363, 364, 365, 1277, 1275, 1276, 1283, 1279, 1278, 1282,
	366, 367, 368, 369, 370, 1310, 371, 373, 1304, 1303,
	1223, 376, 378, 372, 374, 0, 377, 375, 379, 0,
	380, 381, 382, 0, 0, 383, 1295, 385, 0, 386,
	387, 388, 0, 389, 390, 391, 0, 392, 393, 1229,
	394, 395, 396, 398, 400, 397, 399, 401, 402, 403,
	404, 405, 1318, 1319, 406, 1242, 303, 0, 0, 0,
	0, 0, 407, 408, 409, 1302, 0, 0, 0, 410,
	0, 411, 412, 413, 0, 414, 415, 0, 1329, 416,
	417, 418, 1315, 1316, 419, 420, 421, 422, 423, 424,
	425, 426, 427, 0, 428, 1325, 0, 1252, 429, 0,
	430, 431, 432, 433, 434, 435, 436, 1713, 1289, 1292,
	529, 1331, 437, 438, 439, 0, 440, 441, 442, 443,
	444, 0, 0, 0, 304, 445, 446, 447, 0, 1330,
	738, 448, 530, 449, 1297, 1298, 0, 1258, 0, 450,
	451, 453, 1332, 1290, 1333, 452, 454, 455, 1334, 456,
	0, 0, 0, 457, 458, 459, 460, 461, 462, 0,
	463, 465, 464, 0, 467, 1326, 466, 1335, 468, 469,
	1336, 0, 470, 471, 472, 473, 474, 475, 478, 1281,
	1280, 476, 477, 479, 480, 0, 481, 482, 484, 487,
	483, 485, 486, 488, 501, 502, 489, 490, 491, 492,
	493, 494, 495, 496, 497, 498, 499, 500, 504, 0,
	503, 1337, 505, 506, 507, 508, 509, 516, 518, 519,
	514, 515, 517, 520, 521, 523, 511, 512, 513, 1338,
	522, 510, 1220, 305, 1339, 524, 525, 526, 527, 1243,
	1291, 528, 1305, 531, 532, 0, 0, 533, 0, 534,
	0, 0, 536, 537, 538, 0, 0, 539, 540, 746,
	1340, 541, 1341, 1320, 542, 543, 1230, 544, 545, 546,
	547, 548, 549, 550, 551, 552, 553, 0, 554, 555,
	748, 556, 557, 558, 749, 559, 560, 561, 1321, 562,
	751, 563, 564, 0, 565, 566, 567, 0, 568, 569,
	570, 571, 572, 573, 574, 575, 1301, 576, 577, 579,
	578, 580, 0, 581, 0, 582, 583, 584, 0, 0,
	0, 0, 0, 585, 586, 588, 0, 589, 590, 591,
	592, 587, 593, 594, 595, 596, 597, 598, 0, 600,
	601, 599, 602, 603, 1342, 604, 605, 606, 607, 608,
	1231, 609, 0, 610, 611, 618, 619, 620, 612, 613,
	614, 621, 622, 623, 624, 625, 626, 0, 628, 629,
	627, 630, 631, 632, 1284, 633, 754, 634, 615, 616,
	635, 636, 1343, 637, 638, 639, 640, 641, 642, 643,
	1299, 0, 644, 0, 645, 646, 647, 648, 649, 650,
	652, 617, 653, 658, 659, 1346, 654, 655, 656, 657,
	1322, 661, 662, 663, 664, 0, 665, 666, 1217, 660,
	651, 0, 667, 668, 669, 670, 671, 672, 0, 673,
	674, 0, 675, 1311, 1312, 1313, 1314, 0, 687, 0,
	676, 678, 679, 680, 681, 1323, 682, 1324, 1241, 683,
	684, 685, 686, 677, 688, 689, 0, 1224, 690, 691,
	693, 695, 696, 692, 694, 697, 1285, 698, 0, 0,
	699, 700, 701, 764, 1308, 1345, 0, 703, 702, 704,
	705, 706, 767, 707, 708, 709, 0, 0, 0, 0,
	710, 711, 768, 712, 713, 714, 1221, 0, 0, 0,
	0, 1708, 0, 1263, 1235, 1236, 1237, 1233, 1234, 1246,
	0, 1216, 0, 0, 0, 0, 0, 0, 1214, 1215,
	306, 307, 309, 308, 310, 311, 312, 313, 1247, 314,
	315, 0, 1245, 0, 0, 0, 1287, 1251, 0, 0,
	316, 0, 317, 318, 319, 1327, 320, 321, 322, 323,
	324, 325, 326, 716, 1300, 0, 327, 1307, 328, 1306,
	0, 1317, 329, 330, 331, 332, 333, 334, 335, 1253,
	1286, 1218, 336, 1347, 1348, 723, 0, 337, 338, 1293,
	0, 1274, 0, 339, 340, 341, 342, 343, 344, 345,
	346, 0, 0, 348, 349, 350, 347, 351, 0, 352,
	0, 353, 354, 355, 356, 357, 358, 359, 0, 360,
	361, 362, 1328, 363, 364, 365, 1277, 1275, 1276, 1283,
	1279, 1278, 1282, 366, 367, 368, 369, 370, 1310, 371,
	373, 1304, 1303, 1223, 376, 378, 372, 374, 0, 377,
	375, 379, 0, 380, 381, 382, 0, 0, 383, 1295,
	385, 0, 386, 387, 388, 0, 389, 390, 391, 0,
	392, 393, 1229, 394, 395, 396, 398, 400, 397, 399,
	401, 402, 403, 404, 405, 1318, 1319, 406, 1242, 303,
	0, 0, 0, 0, 0, 407, 408, 409, 1302, 0,
	0, 0, 410, 0, 411, 412, 413, 0, 414, 415,
	0, 1329, 416, 417, 418, 1315, 1316, 419, 420, 421,
	422, 423, 424, 425, 426, 427, 0, 428, 1325, 0,
	1252, 429, 0, 430, 431, 432, 433, 434, 435, 436,
	1707, 1289, 1292, 529, 1331, 437, 438, 439, 0, 440,
	441, 442, 443, 444, 0, 0, 0, 304, 445, 446,
	447, 0, 1330, 738, 448, 530, 449, 1297, 1298, 0,
	1258, 0, 450, 451, 453, 1332, 1290, 1333, 452, 454,
	455, 1334, 456, 0, 0, 0, 457, 458, 459, 460,
	461, 462, 0, 463, 465, 464, 0, 467, 1326, 466,
	1335, 468, 469, 1336, 0, 470, 471, 472, 473, 474,
	475, 478, 1281, 1280, 476, 477, 479, 480, 0, 481,
	482, 484, 487, 483, 485, 486, 488, 501, 502, 489,
	490, 491, 492, 493, 494, 495, 496, 497, 498, 499,
	500, 504, 0, 503, 1337, 505, 506, 507, 508, 509,
	516, 518, 519, 514, 515, 517, 520, 521, 523, 511,
	512, 513, 1338, 522, 510, 1220, 305, 1339, 524, 525,
	526, 527, 1243, 1291, 528, 1305, 531, 532, 0, 0,
	533, 0, 534, 0, 0, 536, 537, 538, 0, 0,
	539, 540, 746, 1340, 541, 1341, 1320, 542, 543, 1230,
	544, 545, 546, 547, 548, 549, 550, 551, 552, 553,
	0, 554, 555, 748, 556, 557, 558, 749, 559, 560,
	561, 1321, 562, 751, 563, 564, 0, 565, 566, 567,
	0, 568, 569, 570, 571, 572, 573, 574, 575, 1301,
	576, 577, 579, 578, 580, 0, 581, 0, 582, 583,
	584, 0, 0, 0, 0, 0, 585, 586, 588, 0,
	589, 590, 591, 592, 587, 593, 594, 595, 596, 597,
	598, 0, 600, 601, 599, 602, 603, 1342, 604, 605,
	606, 607, 608, 1231, 609, 0, 610, 611, 618, 619,
	620, 612, 613, 614, 621, 622, 623, 624, 625, 626,
	0, 628, 629, 627, 630, 631, 632, 1284, 633, 754,
	634, 615, 616, 635, 636, 1343, 637, 638, 639, 640,
	641, 642, 643, 1299, 0, 644, 0, 645, 646, 647,
	648, 649, 650, 652, 617, 653, 658, 659, 1346, 654,
	655, 656, 657, 1322, 661, 662, 663, 664, 0, 665,
	666, 1217, 660, 651, 0, 667, 668, 669, 670, 671,
	672, 0, 673, 674, 0, 675, 1311, 1312, 1313, 1314,
	0, 687, 0, 676, 678, 679, 680, 681, 1323, 682,
	1324, 1241, 683, 684, 685, 686, 677, 688, 689, 0,
	1224, 690, 691, 693, 695, 696, 692, 694, 697, 1285,
	698, 0, 0, 699, 700, 701, 764, 1308, 1345, 0,
	703, 702, 704, 705, 706, 767, 707, 708, 709, 0,
	0, 0, 0, 710, 711, 768, 712, 713, 714, 1221,
	0, 0, 0, 0, 1701, 0, 1263, 1235, 1236, 1237,
	1233, 1234, 1246, 0, 1216, 0, 0, 0, 0, 0,
	0, 1214, 1215, 306, 307, 309, 308, 310, 311, 312,
	313, 1247, 314, 315, 0, 1245, 0, 0, 0, 1287,
	1251, 0, 0, 316, 0, 317, 318, 319, 1327, 320,
	321, 322, 323, 324, 325, 326, 716, 1300, 0, 327,
	1307, 328, 1306, 0, 1317, 329, 330, 331, 332, 333,
	334, 335, 1253, 1286, 1218, 336, 1347, 1348, 723, 0,
	337, 338, 1293, 0, 1274, 0, 339, 340, 341, 342,
	343, 344, 345, 346, 0, 0, 348, 349, 350, 347,
	351, 0, 352, 0, 353, 354, 355, 356, 357, 358,
	359, 0, 360, 361, 362, 1328, 363, 364, 365, 1277,
	1275, 1276, 1283, 1279, 1278, 1282, 366, 367, 368, 369,
	370, 1310, 371, 373, 1304, 1303, 1223, 376, 378, 372,
	374, 0, 377, 375, 379, 0, 380, 381, 382, 0,
	0, 383, 1295, 385, 0, 386, 387, 388, 0, 389,
	390, 391, 0, 392, 393, 1229, 394, 395, 396, 398,
	400, 397, 399, 401, 402, 403, 404, 405, 1318, 1319,
	406, 1242, 303, 0, 0, 0, 0, 0, 407, 408,
	409, 1302, 0, 0, 0, 410, 0, 411, 412, 413,
	0, 414, 415, 0, 1329, 416, 417, 418, 1315, 1316,
	419, 420, 421, 422, 423, 424, 425, 426, 427, 0,
	428, 1325, 0, 1252, 429, 0, 430, 431, 432, 433,
	434, 435, 436, 1288, 1289, 1292, 529, 1331, 437, 438,
	439, 0, 440, 441, 442, 443, 444, 0, 0, 0,
	304, 445, 446, 447, 0, 1330, 738, 448, 530, 449,
	1297, 1298, 0, 1258, 0, 450, 451, 453, 1332, 1290,
	1333, 452, 454, 455, 1334, 456, 0, 0, 0, 457,
	458, 459, 460, 461, 462, 0, 463, 465, 464, 0,
	467, 1326, 466, 1335, 468, 469, 1336, 0, 470, 471,
	472, 473, 474, 475, 478, 1281, 1280, 476, 477, 479,
	480, 0, 481, 482, 484, 487, 483, 485, 486, 488,
	501, 502, 489, 490, 491, 492, 493, 494, 495, 496,
	497, 498, 499, 500, 504, 0, 503, 1337, 505, 506,
	507, 508, 509, 516, 518, 519, 514, 515, 517, 520,
	521, 523, 511, 512, 513, 1338, 522, 510, 1220, 305,
	1339, 524, 525, 526, 527, 1243, 1291, 528, 1305, 531,
	532, 0, 0, 533, 0, 534, 0, 0, 536, 537,
	538, 0, 0, 539, 540, 746, 1340, 541, 1341, 1320,
	542, 543, 1230, 544, 545, 546, 547, 548, 549, 550,
	551, 552, 553, 0, 554, 555, 748, 556, 557, 558,
	749, 559, 560, 561, 1321, 562, 751, 563, 564, 0,
	565, 566, 567, 0, 568, 569, 570, 571, 572, 573,
	574, 575, 1301, 576, 577, 579, 578, 580, 0, 581,
	0, 582, 583, 584, 0, 0, 0, 0, 0, 585,
	586, 588, 0, 589, 590, 591, 592, 587, 593, 594,
	595, 596, 597, 598, 0, 600, 601, 599, 602, 603,
	1342, 604, 605, 606, 607, 608, 1231, 609, 0, 610,
	611, 618, 619, 620, 612, 613, 614, 621, 622, 623,
	624, 625, 626, 0, 628, 629, 627, 630, 631, 632,
	1284, 633, 754, 634, 615, 616, 635, 636, 1343, 637,
	638, 639, 640, 641, 642, 643, 1299, 0, 644, 0,
	645, 646, 647, 648, 649, 650, 652, 617, 653, 658,
	659, 1346, 654, 655, 656, 657, 1322, 661, 662, 663,
	664, 0, 665, 666, 1217, 660, 651, 0, 667, 668,
	669, 670, 671, 672, 0, 673, 674, 0, 675, 1311,
	1312, 1313, 1314, 0, 687, 0, 676, 678, 679, 680,
	681, 1323, 682, 1324, 1241, 683, 684, 685, 686, 677,
	688, 689, 0, 1224, 690, 691, 693, 695, 696, 692,
	694, 697, 1285, 698, 0, 0, 699, 700, 701, 764,
	1308, 1345, 0, 703, 702, 704, 705, 706, 767, 707,
	708, 709, 0, 0, 0, 0, 710, 711, 768, 712,
	713, 714, 1221, 0, 0, 0, 0, 1664, 0, 1263,
	1235, 1236, 1237, 1233, 1234, 1246, 0, 1216, 0, 0,
	0, 0, 0, 0, 1214, 1215, 306, 307, 309, 308,
	310, 311, 312, 313, 1247, 314, 315, 0, 1245, 0,
	0, 0, 1287, 1251, 0, 0, 316, 0, 317, 318,
	319, 1327, 320, 321, 322, 323, 324, 325, 326, 716,
	1300, 0, 327, 1307, 328, 1306, 0, 1317, 329, 330,
	331, 332, 333, 334, 335, 1253, 1286, 1218, 336, 1347,
	1348, 723, 0, 337, 338, 1293, 0, 1274, 0, 339,
	340, 341, 342, 343, 344, 345, 346, 0, 0, 348,
	349, 350, 347, 351, 0, 352, 0, 353, 354, 355,
	356, 357, 358, 359, 0, 360, 361, 362, 1328, 363,
	364, 365, 1277, 1275, 1276, 1283, 1279, 1278, 1282, 366,
	367, 368, 369, 370, 1310, 371, 373, 1304, 1303, 1223,
	376, 378, 372, 374, 0, 377, 375, 379, 0, 380,
	381, 382, 0, 0, 383, 1295, 385, 0, 386, 387,
	388, 0, 389, 390, 391, 0, 392, 393, 1229, 394,
	395, 396, 398, 400, 397, 399, 401, 402, 403, 404,
	405, 1318, 1319, 406, 1242, 303, 0, 0, 0, 0,
	0, 407, 408, 409, 1302, 0, 0, 0, 410, 0,
	411, 412, 413, 0, 414, 415, 0, 1329, 416, 417,
	418, 1315, 1316, 419, 420, 421, 422, 423, 424, 425,
	426, 427, 0, 428, 1325, 0, 1252, 429, 0, 430,
	431, 432, 433, 434, 435, 436, 1288, 1289, 1292, 529,
	1331, 437, 438, 439, 0, 440, 441, 442, 443, 444,
	0, 0, 0, 304, 445, 446, 447, 0, 1330, 738,
	448, 530, 449, 1297, 1298, 0, 1258, 0, 450, 451,
	453, 1332, 1290, 1333, 452, 454, 455, 1334, 456, 0,
	0, 0, 457, 458, 459, 460, 461, 462, 0, 463,
	465, 464, 0, 467, 1326, 466, 1335, 468, 469, 1336,
	0, 470, 471, 472, 473, 474, 475, 478, 1281, 1280,
	476, 477, 479, 480, 0, 481, 482, 484, 487, 483,
	485, 486, 488, 501, 502, 489, 490, 491, 492, 493,
	494, 495, 496, 497, 498, 499, 500, 504, 0, 503,
	1337, 505, 506, 507, 508, 509, 516, 518, 519, 514,
	515, 517, 520, 521, 523, 511, 512, 513, 1338, 522,
	510, 1220, 305, 1339, 524, 525, 526, 527, 1243, 1291,
	528, 1305, 531, 532, 0, 0, 533, 0, 534, 0,
	0, 536, 537, 538, 0, 0, 539, 540, 746, 1340,
	541, 1341, 1320, 542, 543, 1230, 544, 545, 546, 547,
	548, 549, 550, 551, 552, 553, 0, 554, 555, 748,
	556, 557, 558, 749, 559, 560, 561, 1321, 562, 751,
	563, 564, 0, 565, 566, 567, 0, 568, 569, 570,
	571, 572, 573, 574, 575, 1301, 576, 577, 579, 578,
	580, 0, 581, 0, 582, 583, 584, 0, 0, 0,
	0, 0, 585, 586, 588, 0, 589, 590, 591, 592,
	587, 593, 594, 595, 596, 597, 598, 0, 600, 601,
	599, 602, 603, 1342, 604, 605, 606, 607, 608, 1231,
	609, 0, 610, 611, 618, 619, 620, 612, 613, 614,
	621, 622, 623, 624, 625, 626, 0, 628, 629, 627,
	630, 631, 632, 1284, 633, 754, 634, 615, 616, 635,
	636, 1343, 637, 638, 639, 640, 641, 642, 643, 1299,
	0, 644, 0, 645, 646, 647, 648, 649, 650, 652,
	617, 653, 658, 659, 1346, 654, 655, 656, 657, 1322,
	661, 662, 663, 664, 0, 665, 666, 1217, 660, 651,
	0, 667, 668, 669, 670, 671, 672, 0, 673, 674,
	0, 675, 1311, 1312, 1313, 1314, 0, 687, 0, 676,
	678, 679, 680, 681, 1323, 682, 1324, 1241, 683, 684,
	685, 686, 677, 688, 689, 0, 1224, 690, 691, 693,
	695, 696, 692, 694, 697, 1285, 698, 0, 0, 699,
	700, 701, 764, 1308, 1345, 0, 703, 702, 704, 705,
	706, 767, 707, 708, 709, 0, 0, 0, 0, 710,
	711, 768, 712, 713, 714, 1221, 0, 0, 0, 0,
	1646, 0, 1263, 1235, 1236, 1237, 1233, 1234, 1246, 0,
	1216, 0, 0, 0, 0, 0, 0, 1214, 1215, 306,
	307, 309, 308, 310, 311, 312, 313, 1247, 314, 315,
	0, 1245, 0, 0, 0, 1287, 1251, 0, 0, 316,
	0, 317, 318, 319, 1327, 320, 321, 322, 323, 324,
	325, 326, 716, 1300, 0, 327, 1307, 328, 1306, 0,
	1317, 329, 330, 331, 332, 333, 334, 335, 1253, 1286,
	1218, 336, 1347, 1348, 723, 0, 337, 338, 1293, 0,
	1274, 0, 339, 340, 341, 342, 343, 344, 345, 346,
	0, 0, 348, 349, 350, 347, 351, 0, 352, 0,
	353, 354, 355, 356, 357, 358, 359, 0, 360, 361,
	362, 1328, 363, 364, 365, 1277, 1275, 1276, 1283, 1279,
	1278, 1282, 366, 367, 368, 369, 370, 1310, 371, 373,
	1304, 1303, 1223, 376, 378, 372, 374, 0, 377, 375,
	379, 0, 380, 381, 382, 0, 0, 383, 1295, 385,
	0, 386, 387, 388, 0, 389, 390, 391, 0, 392,
	393, 1229, 394, 395, 396, 398, 400, 397, 1650, 401,
	402, 403, 404, 405, 1318, 1319, 406, 1242, 303, 0,
	0, 0, 0, 0, 407, 408, 409, 1302, 0, 0,
	0, 410, 0, 411, 412, 413, 0, 414, 415, 0,
	1329, 416, 417, 418, 1315, 1316, 419, 420, 421, 422,
	423, 424, 425, 426, 427, 0, 428, 1325, 0, 1252,
	429, 0, 430, 431, 432, 433, 434, 435, 436, 1288,
	1289, 1292, 529, 1331, 437, 438, 439, 0, 440, 441,
	442, 443, 444, 0, 0, 0, 304, 445, 446, 447,
	0, 1330, 738, 448, 530, 449, 1297, 1298, 0, 1258,
	0, 450, 451, 453, 1332, 1290, 1333, 452, 454, 455,
	1334, 456, 0, 0, 0, 457, 458, 459, 460, 461,
	462, 0, 463, 465, 464, 0, 467, 1326, 466, 1335,
	468, 469, 1336, 0, 470, 471, 472, 473, 474, 475,
	478, 1281, 1280, 476, 477, 479, 480, 0, 481, 482,
	484, 487, 483, 485, 486, 488, 501, 502, 489, 490,
	491, 492, 493, 494, 495, 496, 497, 498, 499, 500,
	504, 0, 503, 1337, 505, 506, 507, 508, 509, 516,
	518, 519, 514, 515, 517, 520, 521, 523, 511, 512,
	513, 1338, 522, 510, 1220, 305, 1339, 524, 525, 526,
	527, 1243, 1291, 528, 1305, 531, 532, 0, 0, 533,
	0, 534, 0, 0, 536, 537, 538, 0, 0, 539,
	540, 746, 1340, 541, 1341, 1320, 542, 543, 1230, 544,
	545, 546, 547, 548, 549, 550, 551, 552, 553, 0,
	554, 555, 748, 556, 557, 558, 749, 559, 560, 561,
	1321, 562, 751, 563, 564, 0, 565, 566, 567, 0,
	568, 569, 570, 571, 572, 573, 574, 575, 1301, 576,
	577, 579, 578, 580, 0, 581, 0, 582, 583, 584,
	0, 0, 0, 0, 0, 585, 586, 1651, 0, 589,
	590, 591, 592, 587, 593, 594, 595, 596, 597, 598,
	0, 600, 601, 599, 602, 603, 1342, 604, 605, 606,
	607, 608, 1231, 609, 0, 610, 611, 618, 619, 620,
	612, 613, 614, 621, 622, 623, 624, 625, 626, 0,
	628, 629, 627, 630, 631, 632, 1284, 633, 754, 634,
	615, 616, 635, 636, 1343, 637, 638, 639, 640, 641,
	642, 643, 1299, 0, 644, 0, 645, 646, 647, 648,
	649, 650, 652, 617, 653, 658, 659, 1346, 654, 655,
	656, 657, 1322, 661, 662, 663, 664, 0, 665, 666,
	1217, 660, 651, 0, 667, 668, 669, 670, 671, 672,
	0, 1649, 674, 0, 675, 1311, 1312, 1313, 1314, 0,
	687, 0, 676, 678, 679, 680, 681, 1323, 682, 1324,
	1241, 683, 684, 685, 686, 677, 688, 689, 0, 1224,
	690, 691, 693, 695, 696, 692, 694, 697, 1285, 698,
	0, 0, 699, 700, 701, 764, 1308, 1345, 0, 703,
	702, 704, 705, 706, 767, 707, 708, 709, 0, 0,
	0, 0, 710, 711, 768, 712, 713, 714, 1221, 0,
	0, 0, 0, 1476, 0, 1263, 1235, 1236, 1237, 1233,
	1234, 1246, 0, 1216, 0, 0, 0, 0, 0, 0,
	1214, 1215, 306, 307, 309, 308, 310, 311, 312, 313,
	1247, 314, 315, 0, 1245, 0, 0, 0, 1287, 1251,
	0, 0, 316, 0, 317, 318, 319, 1327, 320, 321,
	322, 323, 324, 325, 326, 716, 1300, 0, 327, 1307,
	328, 1306, 0, 1317, 329, 330, 331, 332, 333, 334,
	335, 1253, 1286, 1218, 336, 1347, 1348, 723, 0, 337,
	338, 1293, 0, 1274, 0, 339, 340, 341, 342, 343,
	344, 345, 346, 0, 0, 348, 349, 350, 347, 351,
	0, 352, 0, 353, 354, 355, 356, 357, 358, 359,
	0, 360, 361, 362, 1328, 363, 364, 365, 1277, 1275,
	1276, 1283, 1279, 1278, 1282, 366, 367, 368, 369, 370,
	1310, 371, 373, 1304, 1303, 1223, 376, 378, 372, 374,
	0, 377, 375, 379, 0, 380, 381, 382, 0, 0,
	383, 1295, 385, 0, 386, 387, 388, 0, 389, 390,
	391, 0, 392, 393, 1229, 394, 395, 396, 398, 400,
	397, 399, 401, 402, 403, 404, 405, 1318, 1319, 406,
	1242, 303, 0, 0, 0, 0, 0, 407, 408, 409,
	1302, 0, 0, 0, 410, 0, 411, 412, 413, 0,
	414, 415, 0, 1329, 416, 417, 418, 1315, 1316, 419,
	420, 421, 422, 423, 424, 425, 426, 427, 0, 428,
	1325, 0, 1252, 429, 0, 430, 431, 432, 433, 434,
	435, 436, 1288, 1289, 1292, 529, 1331, 437, 438, 439,
	0, 440, 441, 442, 443, 444, 0, 0, 0, 304,
	445, 446, 447, 0, 1330, 738, 448, 530, 449, 1297,
	1298, 0, 1258, 0, 450, 451, 453, 1332, 1290, 1333,
	452, 454, 455, 1334, 456, 0, 0, 0, 457, 458,
	459, 460, 461, 462, 0, 463, 465, 464, 0, 467,
	1326, 466, 1335, 468, 469, 1336, 0, 470, 471, 472,
	473, 474, 475, 478, 1281, 1280, 476, 477, 479, 480,
	0, 481, 482, 484, 487, 483, 485, 486, 488, 501,
	502, 489, 490, 491, 492, 493, 494, 495, 496, 497,
	498, 499, 500, 504, 0, 503, 1337, 505, 506, 507,
	508, 509, 516, 518, 519, 514, 515, 517, 520, 521,
	523, 511, 512, 513, 1338, 522, 510, 1220, 305, 1339,
	524, 525, 526, 527, 1243, 1291, 528, 1305, 531, 532,
	0, 0, 533, 0, 534, 0, 0, 536, 537, 538,
	0, 0, 539, 540, 746, 1340, 541, 1341, 1320, 542,
	543, 1230, 544, 545, 546, 547, 548, 549, 550, 551,
	552, 553, 0, 554, 555, 748, 556, 557, 558, 749,
	559, 560, 561, 1321, 562, 751, 563, 564, 0, 565,
	566, 567, 0, 568, 569, 570, 571, 572, 573, 574,
	575, 1301, 576, 577, 579, 578, 580, 0, 581, 0,
	582, 583, 584, 0, 0, 0, 0, 0, 585, 586,
	588, 0, 589, 590, 591, 592, 587, 593, 594, 595,
	596, 597, 598, 0, 600, 601, 599, 602, 603, 1342,
	604, 605, 606, 607, 608, 1231, 609, 0, 610, 611,
	618, 619, 620, 612, 613, 614, 621, 622, 623, 624,
	625, 626, 0, 628, 629, 627, 630, 631, 632, 1284,
	633, 754, 634, 615, 616, 635, 636, 1343, 637, 638,
	639, 640, 641, 642, 643, 1299, 0, 644, 0, 645,
	646, 647, 648, 649, 650, 652, 617, 653, 658, 659,
	1346, 654, 655, 656, 657, 1322, 661, 662, 663, 664,
	0, 665, 666, 1217, 660, 651, 0, 667, 668, 669,
	670, 671, 672, 0, 673, 674, 0, 675, 1311, 1312,
	1313, 1314, 0, 687, 0, 676, 678, 679, 680, 681,
	1323, 682, 1324, 1241, 683, 684, 685, 686, 677, 688,
	689, 0, 1224, 690, 691, 693, 695, 696, 692, 694,
	697, 1285, 698, 0, 0, 699, 700, 701, 764, 1308,
	1345, 0, 703, 702, 704, 705, 706, 767, 707, 708,
	709, 0, 0, 0, 0, 710, 711, 768, 712, 713,
	714, 1221, 0, 0, 0, 0, 0, 0, 1263, 1235,
	1236, 1237, 1233, 1234, 1246, 0, 1216, 0, 0, 0,
	0, 0, 0, 1214, 1215, 306, 307, 309, 308, 310,
	311, 312, 313, 1247, 314, 315, 0, 1245, 0, 0,
	0, 1287, 1251, 0, 0, 316, 0, 317, 318, 319,
	1327, 320, 321, 322, 323, 324, 325, 326, 716, 1300,
	0, 327, 1307, 328, 1306, 0, 1317, 329, 330, 331,
	332, 333, 334, 335, 1253, 1286, 1218, 336, 1347, 1348,
	723, 0, 337, 338, 1293, 0, 1274, 0, 339, 340,
	341, 342, 343, 344, 345, 346, 0, 0, 348, 349,
	350, 347, 351, 0, 352, 0, 353, 354, 355, 356,
	357, 358, 359, 0, 360, 361, 362, 1328, 363, 364,
	365, 1277, 1275, 1276, 1283, 1279, 1278, 1282, 366, 367,
	368, 369, 370, 1310, 371, 373, 1304, 1303, 1223, 376,
	378, 372, 374, 0, 377, 375, 379, 0, 380, 381,
	382, 0, 0, 383, 1295, 385, 0, 386, 387, 388,
	0, 389, 390, 391, 0, 392, 393, 1229, 394, 395,
	396, 398, 400, 397, 399, 401, 402, 403, 404, 405,
	1318, 1319, 406, 1242, 303, 0, 0, 0, 0, 0,
	407, 408, 409, 1302, 0, 0, 0, 410, 0, 411,
	412, 413, 0, 414, 415, 0, 1329, 416, 417, 418,
	1315, 1316, 419, 420, 421, 422, 423, 424, 425, 426,
	427, 0, 428, 1325, 0, 1252, 429, 0, 430, 431,
	432, 433, 434, 435, 436, 1288, 1289, 1292, 529, 1331,
	437, 438, 439, 0, 440, 441, 442, 443, 444, 0,
	0, 0, 304, 445, 446, 447, 0, 1330, 738, 448,
	530, 449, 1297, 1298, 0, 1258, 0, 450, 451, 453,
	1332, 1290, 1333, 452, 454, 455, 1334, 456, 0, 0,
	0, 457, 458, 459, 460, 461, 462, 0, 463, 465,
	464, 0, 467, 1326, 466, 1335, 468, 469, 1336, 0,
	470, 471, 472, 473, 474, 475, 478, 1281, 1280, 476,
	477, 479, 480, 0, 481, 482, 484, 487, 483, 485,
	486, 488, 501, 502, 489, 490, 491, 492, 493, 494,
	495, 496, 497, 498, 499, 500, 504, 0, 503, 1337,
	505, 506, 507, 508, 509, 516, 518, 519, 514, 515,
	517, 520, 521, 523, 511, 512, 513, 1338, 522, 510,
	1220, 305, 1339, 524, 525, 526, 527, 1243, 1291, 528,
	1305, 531, 532, 0, 0, 533, 0, 534, 0, 0,
	536, 537, 538, 0, 0, 539, 540, 746, 1340, 541,
	1341, 1320, 542, 543, 1230, 544, 545, 546, 547, 548,
	549, 550, 551, 552, 553, 0, 554, 555, 748, 556,
	557, 558, 749, 559, 560, 561, 1321, 562, 751, 563,
	564, 0, 565, 566, 567, 0, 568, 569, 570, 571,
	572, 573, 574, 575, 1301, 576, 577, 579, 578, 580,
	0, 581, 0, 582, 583, 584, 0, 0, 0, 0,
	0, 585, 586, 588, 0, 589, 590, 591, 592, 587,
	593, 594, 595, 596, 597, 598, 0, 600, 601, 599,
	602, 603, 1342, 604, 605, 606, 607, 608, 1231, 609,
	0, 610, 611, 618, 619, 620, 612, 613, 614, 621,
	622, 623, 624, 625, 626, 0, 628, 629, 627, 630,
	631, 632, 1284, 633, 754, 634, 615, 616, 635, 636,
	1343, 637, 638, 639, 640, 641, 642, 643, 1299, 0,
	644, 0, 645, 646, 647, 648, 649, 650, 652, 617,
	653, 658, 659, 1346, 654, 655, 656, 657, 1322, 661,
	662, 663, 664, 0, 665, 666, 1217, 660, 651, 0,
	667, 668, 669, 670, 671, 672, 0, 673, 674, 0,
	675, 1311, 1312, 1313, 1314, 0, 687, 0, 676, 678,
	679, 680, 681, 1323, 682, 1324, 1241, 683, 684, 685,
	686, 677, 688, 689, 0, 1224, 690, 691, 693, 695,
	696, 692, 694, 697, 1285, 698, 0, 0, 699, 700,
	701, 764, 1308, 1345, 0, 703, 702, 704, 705, 706,
	767, 707, 708, 709, 0, 0, 0, 0, 710, 711,
	768, 712, 713, 714, 1221, 0, 0, 0, 0, 0,
	0, 1263, 1235, 1236, 1237, 1233, 1234, 1246, 0, 1216,
	0, 0, 0, 0, 0, 0, 1214, 1215, 306, 307,
	309, 308, 310, 311, 312, 313, 1247, 314, 315, 0,
	1245, 0, 0, 0, 1287, 1251, 0, 0, 316, 0,
	317, 318, 319, 1327, 320, 321, 322, 323, 324, 325,
	326, 716, 1300, 0, 327, 1307, 328, 1306, 0, 1317,
	329, 330, 331, 332, 333, 334, 335, 1253, 1286, 1218,
	336, 1347, 1348, 723, 0, 337, 338, 1293, 0, 1274,
	0, 339, 340, 341, 342, 343, 344, 345, 346, 0,
	0, 348, 349, 350, 347, 351, 0, 352, 0, 353,
	354, 355, 356, 357, 358, 359, 0, 360, 361, 362,
	1328, 363, 364, 5277, 1277, 1275, 1276, 1283, 1279, 1278,
	1282, 366, 367, 368, 369, 370, 1310, 371, 373, 1304,
	1303, 1223, 376, 378, 372, 374, 0, 377, 375, 379,
	0, 380, 381, 382, 0, 0, 383, 1295, 385, 0,
	386, 387, 388, 0, 389, 390, 391, 0, 392, 393,
	1229, 394, 395, 396, 398, 400, 397, 399, 401, 402,
	403, 404, 405, 1318, 1319, 406, 1242, 303, 0, 0,
	0, 0, 0, 407, 408, 409, 1302, 0, 0, 0,
	410, 0, 411, 412, 413, 0, 414, 415, 0, 1329,
	416, 417, 418, 1315, 1316, 419, 420, 421, 422, 423,
	424, 425, 426, 427, 0, 428, 1325, 0, 1252, 429,
	0, 430, 431, 432, 433, 434, 435, 436, 1288, 1289,
	1292, 529, 1331, 437, 438, 439, 0, 440, 441, 442,
	443, 444, 0, 0, 0, 304, 445, 446, 447, 0,
	1330, 738, 448, 530, 449, 1297, 1298, 0, 1258, 0,
	450, 451, 453, 1332, 1290, 1333, 452, 454, 455, 1334,
	456, 0, 0, 0, 457, 458, 459, 460, 461, 462,
	0, 463, 465, 464, 0, 467, 1326, 466, 1335, 468,
	469, 1336, 0, 470, 471, 472, 473, 474, 475, 478,
	1281, 1280, 476, 477, 479, 480, 0, 481, 482, 484,
	487, 483, 485, 486, 488, 501, 502, 489, 490, 491,
	492, 493, 494, 495, 496, 497, 498, 499, 500, 504,
	0, 503, 1337, 505, 506, 507, 508, 509, 516, 518,
	519, 514, 515, 517, 520, 521, 523, 511, 512, 513,
	1338, 522, 510, 1220, 305, 1339, 524, 525, 526, 527,
	1243, 1291, 528, 1305, 531, 532, 0, 0, 533, 0,
	534, 0, 0, 536, 537, 538, 0, 0, 539, 540,
	746, 1340, 541, 1341, 1320, 542, 543, 1230, 544, 545,
	546, 547, 548, 549, 550, 551, 552, 553, 0, 554,
	555, 748, 556, 557, 558, 749, 559, 560, 561, 1321,
	562, 751, 563, 564, 0, 565, 566, 567, 0, 568,
	569, 570, 571, 572, 573, 574, 575, 1301, 576, 577,
	579, 578, 580, 0, 581, 0, 582, 583, 584, 0,
	0, 0, 0, 0, 585, 586, 588, 0, 589, 590,
	591, 592, 587, 593, 594, 595, 596, 597, 598, 0,
	600, 601, 599, 602, 603, 1342, 604, 605, 606, 607,
	608, 1231, 609, 0, 610, 611, 618, 619, 620, 612,
	613, 614, 621, 622, 623, 624, 625, 626, 0, 628,
	629, 627, 630, 631, 632, 1284, 633, 754, 634, 615,
	616, 635, 636, 1343, 637, 638, 639, 640, 641, 642,
	643, 1299, 0, 644, 0, 645, 646, 647, 648, 649,
	650, 652, 617, 653, 658, 659, 1346, 654, 655, 656,
	657, 1322, 661, 662, 663, 664, 0, 665, 666, 1217,
	660, 651, 0, 667, 668, 669, 670, 671, 672, 0,
	673, 674, 0, 675, 1311, 1312, 1313, 1314, 0, 687,
	0, 676, 678, 679, 680, 681, 1323, 682, 1324, 1241,
	683, 684, 685, 686, 677, 5276, 689, 0, 1224, 690,
	691, 693, 695, 696, 692, 694, 697, 1285, 698, 0,
	0, 699, 700, 701, 764, 1308, 1345, 0, 703, 702,
	704, 705, 706, 767, 707, 708, 709, 0, 0, 0,
	0, 710, 711, 768, 712, 713, 714, 1221, 0, 0,
	0, 0, 0, 0, 1263, 1235, 1236, 1237, 1233, 1234,
	1246, 0, 1216, 0, 0, 0, 0, 0, 0, 1214,
	1215, 306, 307, 309, 308, 310, 311, 312, 313, 1247,
	314, 315, 0, 1245, 0, 0, 0, 1287, 1251, 0,
	0, 316, 0, 317, 318, 319, 1327, 320, 321, 322,
	323, 324, 325, 326, 5275, 1300, 0, 327, 1307, 328,
	1306, 0, 1317, 329, 330, 331, 332, 333, 334, 335,
	1253, 1286, 1218, 336, 1347, 1348, 723, 0, 337, 338,
	1293, 0, 1274, 0, 339, 340, 341, 342, 343, 344,
	345, 346, 0, 0, 348, 349, 350, 347, 351, 0,
	352, 0, 353, 354, 355, 356, 357, 358, 359, 0,
	360, 361, 362, 1328, 363, 364, 5277, 1277, 1275, 1276,
	1283, 1279, 1278, 1282, 366, 367, 368, 369, 370, 1310,
	371, 373, 1304, 1303, 1223, 376, 378, 372, 374, 0,
	377, 375, 379, 0, 380, 381, 382, 0, 0, 383,
	1295, 385, 0, 386, 387, 388, 0, 389, 390, 391,
	0, 392, 393, 1229, 394, 395, 396, 398, 400, 397,
	399, 401, 402, 403, 404, 405, 1318, 1319, 406, 1242,
	303, 0, 0, 0, 0, 0, 407, 408, 409, 1302,
	0, 0, 0, 410, 0, 411, 412, 413, 0, 414,
	415, 0, 1329, 416, 417, 418, 1315, 1316, 419, 420,
	421, 422, 423, 424, 425, 426, 427, 0, 428, 1325,
	0, 1252, 429, 0, 430, 431, 432, 433, 434, 435,
	436, 1288, 1289, 1292, 529, 1331, 437, 438, 439, 0,
	440, 441, 442, 443, 444, 0, 0, 0, 304, 445,
	446, 447, 0, 1330, 738, 448, 530, 449, 1297, 1298,
	0, 1258, 0, 450, 451, 453, 1332, 1290, 1333, 452,
	454, 455, 1334, 456, 0, 0, 0, 457, 458, 459,
	460, 461, 462, 0, 463, 465, 464, 0, 467, 1326,
	466, 1335, 468, 469, 1336, 0, 470, 471, 472, 473,
	474, 475, 478, 1281, 1280, 476, 477, 479, 480, 0,
	481, 482, 484, 487, 483, 485, 486, 488, 501, 502,
	489, 490, 491, 492, 493, 494, 495, 496, 497, 498,
	499, 500, 504, 0, 503, 1337, 505, 506, 507, 508,
	509, 516, 518, 519, 514, 515, 517, 520, 521, 523,
	511, 512, 513, 1338, 522, 510, 1220, 305, 1339, 524,
	525, 526, 527, 1243, 1291, 528, 1305, 531, 532, 0,
	0, 533, 0, 534, 0, 0, 536, 537, 538, 0,
	0, 539, 540, 746, 1340, 541, 1341, 1320, 542, 543,
	1230, 544, 545, 546, 547, 548, 549, 550, 551, 552,
	553, 0, 554, 555, 748, 556, 557, 558, 749, 559,
	560, 561, 1321, 562, 751, 563, 564, 0, 565, 566,
	567, 0, 568, 569, 570, 571, 572, 573, 574, 575,
	1301, 576, 577, 579, 578, 580, 0, 581, 0, 582,
	583, 584, 0, 0, 0, 0, 0, 585, 586, 588,
	0, 589, 590, 591, 592, 587, 593, 594, 595, 596,
	597, 598, 0, 600, 601, 599, 602, 603, 1342, 604,
	605, 606, 607, 608, 1231, 609, 0, 610, 611, 618,
	619, 620, 612, 613, 614, 621, 622, 623, 624, 625,
	626, 0, 628, 629, 627, 630, 631, 632, 1284, 633,
	754, 634, 615, 616, 635, 636, 1343, 637, 638, 639,
	640, 641, 642, 643, 1299, 0, 644, 0, 645, 646,
	647, 648, 649, 650, 652, 617, 653, 658, 659, 1346,
	654, 655, 656, 657, 1322, 661, 662, 663, 664, 0,
	665, 666, 1217, 660, 651, 0, 667, 668, 669, 670,
	671, 672, 0, 673, 674, 0, 675, 1311, 1312, 1313,
	1314, 0, 687, 0, 676, 678, 679, 680, 681, 1323,
	682, 1324, 1241, 683, 684, 685, 686, 677, 5276, 689,
	0, 1224, 690, 691, 693, 695, 696, 692, 694, 697,
	1285, 698, 0, 0, 699, 700, 701, 764, 1308, 1345,
	0, 703, 702, 704, 705, 706, 767, 707, 708, 709,
	0, 0, 0, 0, 710, 711, 768, 712, 713, 714,
	1221, 0, 0, 0, 0, 0, 0, 1263, 1235, 1236,
	1237, 1233, 1234, 1246, 0, 1216, 0, 0, 0, 0,
	0, 0, 1214, 1215, 306, 307, 309, 308, 310, 311,
	312, 313, 1247, 314, 315, 0, 1245, 0, 0, 0,
	1287, 1251, 0, 0, 316, 0, 317, 318, 319, 1327,
	320, 321, 322, 323, 324, 325, 326, 716, 1300, 0,
	327, 1307, 328, 1306, 0, 1317, 329, 330, 331, 332,
	333, 334, 335, 1253, 1286, 1218, 336, 1347, 1348, 723,
	0, 337, 338, 1293, 0, 1274, 0, 339, 340, 341,
	342, 343, 344, 345, 346, 0, 0, 348, 349, 350,
	347, 351, 0, 352, 0, 353, 354, 355, 356, 357,
	358, 359, 0, 360, 361, 362, 1328, 363, 4841, 365,
	1277, 1275, 1276, 1283, 1279, 1278, 1282, 366, 367, 368,
	369, 370, 1310, 371, 373, 1304, 1303, 1223, 376, 378,
	372, 374, 0, 377, 375, 379, 0, 380, 381, 382,
	0, 0, 383, 1295, 385, 0, 386, 387, 388, 0,
	389, 390, 391, 0, 392, 393, 1229, 394, 395, 396,
	398, 400, 397, 399, 401, 402, 403, 404, 405, 1318,
	1319, 406, 1242, 303, 0, 0, 0, 0, 0, 407,
	408, 409, 1302, 0, 0, 0, 410, 0, 411, 412,
	413, 0, 414, 415, 0, 1329, 416, 417, 418, 1315,
	1316, 419, 420, 421, 422, 423, 424, 425, 426, 427,
	0, 428, 1325, 0, 4842, 429, 0, 430, 431, 432,
	433, 434, 435, 436, 1288, 1289, 1292, 529, 1331, 437,
	438, 439, 0, 440, 441, 442, 443, 444, 0, 0,
	0, 304, 445, 446, 447, 0, 1330, 738, 448, 530,
	449, 1297, 1298, 0, 1258, 0, 450, 451, 453, 1332,
	1290, 1333, 452, 454, 455, 1334, 456, 0, 0, 0,
	457, 458, 459, 460, 461, 462, 0, 463, 465, 464,
	0, 467, 1326, 466, 1335, 468, 469, 1336, 0, 470,
	471, 472, 473, 474, 475, 478, 1281, 1280, 476, 477,
	479, 480, 0, 481, 482, 484, 487, 483, 485, 486,
	488, 501, 502, 489, 490, 491, 492, 493, 494, 495,
	496, 497, 498, 499, 500, 504, 0, 503, 1337, 505,
	506, 507, 508, 509, 516, 518, 519, 514, 515, 517,
	520, 521, 523, 511, 512, 513, 1338, 522, 510, 1220,
	305, 1339, 524, 525, 526, 527, 1243, 1291, 528, 1305,
	531, 532, 0, 0, 533, 0, 534, 0, 0, 536,
	537, 538, 0, 0, 539, 540, 746, 1340, 541, 1341,
	1320, 542, 543, 1230, 544, 545, 546, 547, 548, 549,
	550, 551, 552, 553, 0, 554, 555, 748, 556, 557,
	558, 749, 559, 560, 561, 1321, 562, 751, 563, 564,
	0, 565, 566, 567, 0, 568, 569, 570, 571, 572,
	573, 574, 575, 1301, 576, 577, 579, 578, 580, 0,
	581, 0, 582, 583, 584, 0, 0, 0, 0, 0,
	585, 586, 588, 0, 589, 590, 591, 592, 587, 593,
	594, 595, 596, 597, 598, 0, 600, 601, 599, 602,
	603, 1342, 604, 605, 606, 4840, 608, 1231, 609, 0,
	610, 611, 618, 619, 620, 612, 613, 614, 621, 622,
	623, 624, 625, 626, 0, 628, 629, 627, 630, 631,
	632, 1284, 633, 754, 634, 615, 616, 635, 636, 1343,
	637, 638, 639, 640, 641, 642, 643, 1299, 0, 644,
	0, 645, 646, 647, 648, 649, 650, 652, 617, 653,
	658, 659, 1346, 654, 655, 656, 657, 1322, 661, 662,
	663, 664, 0, 665, 666, 1217, 660, 651, 0, 667,
	668, 669, 670, 671, 672, 0, 673, 674, 0, 675,
	1311, 1312, 1313, 1314, 0, 687, 0, 676, 678, 679,
	680, 681, 1323, 682, 1324, 1241, 683, 684, 685, 686,
	677, 688, 689, 0, 1224, 690, 691, 693, 695, 696,
	692, 694, 697, 1285, 698, 0, 0, 699, 700, 701,
	764, 1308, 1345, 0, 703, 702, 704, 705, 706, 767,
	707, 708, 709, 0, 0, 0, 0, 710, 711, 768,
	712, 713, 714, 1221, 0, 0, 0, 0, 0, 0,
	1263, 1235, 1236, 1237, 3512, 3513, 1246, 0, 1216, 0,
	0, 0, 0, 0, 0, 1214, 1215, 306, 307, 309,
	308, 310, 311, 312, 313, 1247, 314, 315, 0, 1245,
	0, 0, 0, 1287, 1251, 0, 0, 316, 0, 317,
	318, 319, 1327, 320, 321, 322, 323, 324, 325, 326,
	716, 1300, 0, 327, 1307, 328, 1306, 0, 1317, 329,
	330, 331, 332, 333, 334, 335, 1253, 1286, 1218, 336,
	1347, 1348, 723, 0, 337, 338, 1293, 0, 1274, 0,
	339, 340, 341, 342, 343, 344, 345, 346, 0, 0,
	348, 349, 350, 347, 351, 0, 352, 0, 353, 354,
	355, 356, 357, 358, 359, 0, 360, 361, 362, 1328,
	363, 364, 365, 1277, 1275, 1276, 1283, 1279, 1278, 1282,
	366, 367, 368, 369, 370, 1310, 371, 373, 1304, 1303,
	1223, 376, 378, 372, 374, 0, 377, 375, 379, 0,
	380, 381, 382, 0, 0, 383, 1295, 385, 0, 386,
	387, 388, 0, 389, 390, 391, 0, 392, 393, 1229,
	394, 395, 396, 398, 400, 397, 399, 401, 402, 403,
	404, 405, 1318, 1319, 406, 1242, 303, 0, 0, 0,
	0, 0, 407, 408, 409, 1302, 0, 0, 0, 410,
	0, 411, 412, 413, 0, 414, 415, 0, 1329, 416,
	417, 418, 1315, 1316, 419, 420, 421, 422, 423, 424,
	425, 426, 427, 0, 428, 1325, 0, 1252, 429, 0,
	430, 431, 432, 433, 434, 435, 436, 1288, 1289, 1292,
	529, 1331, 437, 438, 439, 0, 440, 441, 442, 443,
	444, 0, 0, 0, 304, 445, 446, 447, 0, 1330,
	738, 448, 530, 449, 1297, 1298, 0, 1258, 0, 450,
	451, 453, 1332, 1290, 1333, 452, 454, 455, 1334, 456,
	0, 0, 0, 457, 458, 459, 460, 461, 462, 0,
	463, 465, 464, 0, 467, 1326, 466, 1335, 468, 469,
	1336, 0, 470, 471, 472, 473, 474, 475, 478, 1281,
	1280, 476, 477, 479, 480, 0, 481, 482, 484, 487,
	483, 485, 486, 488, 501, 502, 489, 490, 491, 492,
	493, 494, 495, 496, 497, 498, 499, 500, 504, 0,
	503, 1337, 505, 506, 507, 508, 509, 516, 518, 519,
	514, 515, 517, 520, 521, 523, 511, 512, 513, 1338,
	522, 510, 1220, 305, 1339, 524, 525, 526, 527, 1243,
	1291, 528, 1305, 531, 532, 0, 0, 533, 0, 534,
	0, 0, 536, 537, 538, 0, 0, 539, 540, 746,
	1340, 541, 1341, 1320, 542, 543, 1230, 544, 545, 546,
	547, 548, 549, 550, 551, 552, 553, 0, 554, 555,
	748, 556, 557, 558, 749, 559, 560, 561, 1321, 562,
	751, 563, 564, 0, 565, 566, 567, 0, 568, 569,
	570, 571, 572, 573, 574, 575, 1301, 576, 577, 579,
	578, 580, 0, 581, 0, 582, 583, 584, 0, 0,
	0, 0, 0, 585, 586, 588, 0, 589, 590, 591,
	592, 587, 593, 594, 595, 596, 597, 598, 0, 600,
	601, 599, 602, 603, 1342, 604, 605, 606, 607, 608,
	1231, 609, 0, 610, 611, 618, 619, 620, 612, 613,
	614, 621, 622, 623, 624, 625, 626, 0, 628, 629,
	627, 630, 631, 632, 1284, 633, 754, 634, 615, 616,
	635, 636, 1343, 637, 638, 639, 640, 641, 642, 643,
	1299, 0, 644, 0, 645, 646, 647, 648, 649, 650,
	652, 617, 653, 658, 659, 1346, 654, 655, 656, 657,
	1322, 661, 662, 663, 664, 0, 665, 666, 1217, 660,
	651, 0, 667, 668, 669, 670, 671, 672, 0, 673,
	674, 0, 675, 1311, 1312, 1313, 1314, 0, 687, 0,
	676, 678, 679, 680, 681, 1323, 682, 1324, 1241, 683,
	684, 685, 686, 677, 688, 689, 0, 1224, 690, 691,
	693, 695, 696, 692, 694, 697, 1285, 698, 0, 0,
	699, 700, 701, 764, 1308, 1345, 0, 703, 702, 704,
	705, 706, 767, 707, 708, 709, 0, 0, 0, 0,
	710, 711, 768, 712, 713, 714, 1221, 0, 0, 0,
	0, 0, 0, 1263, 1235, 1236, 1237, 3510, 3511, 1246,
	0, 1216, 0, 0, 0, 0, 0, 0, 1214, 1215,
	306, 307, 309, 308, 310, 311, 312, 313, 1247, 314,
	315, 0, 1245, 0, 0, 0, 1287, 1251, 0, 0,
	316, 0, 317, 318, 319, 1327, 320, 321, 322, 323,
	324, 325, 326, 716, 1300, 0, 327, 1307, 328, 1306,
	0, 1317, 329, 330, 331, 332, 333, 334, 335, 1253,
	1286, 1218, 336, 1347, 1348, 723, 0, 337, 338, 1293,
	0, 1274, 0, 339, 340, 341, 342, 343, 344, 345,
	346, 0, 0, 348, 349, 350, 347, 351, 0, 352,
	0, 353, 354, 355, 356, 357, 358, 359, 0, 360,
	361, 362, 1328, 363, 364, 365, 1277, 1275, 1276, 1283,
	1279, 1278, 1282, 366, 367, 368, 369, 370, 1310, 371,
	373, 1304, 1303, 1223, 376, 378, 372, 374, 0, 377,
	375, 379, 0, 380, 381, 382, 0, 0, 383, 1295,
	385, 0, 386, 387, 388, 0, 389, 390, 391, 0,
	392, 393, 1229, 394, 395, 396, 398, 400, 397, 399,
	401, 402, 403, 404, 405, 1318, 1319, 406, 1242, 303,
	0, 0, 0, 0, 0, 407, 408, 409, 1302, 0,
	0, 0, 410, 0, 411, 412, 413, 0, 414, 415,
	0, 1329, 416, 417, 418, 1315, 1316, 419, 420, 421,
	422, 423, 424, 425, 426, 427, 0, 428, 1325, 0,
	1252, 429, 0, 430, 431, 432, 433, 434, 435, 436,
	1288, 1289, 1292, 529, 1331, 437, 438, 439, 0, 440,
	441, 442, 443, 444, 0, 0, 0, 304, 445, 446,
	447, 0, 1330, 738, 448, 530, 449, 1297, 1298, 0,
	1258, 0, 450, 451, 453, 1332, 1290, 1333, 452, 454,
	455, 1334, 456, 0, 0, 0, 457, 458, 459, 460,
	461, 462, 0, 463, 465, 464, 0, 467, 1326, 466,
	1335, 468, 469, 1336, 0, 470, 471, 472, 473, 474,
	475, 478, 1281, 1280, 476, 477, 479, 480, 0, 481,
	482, 484, 487, 483, 485, 486, 488, 501, 502, 489,
	490, 491, 492, 493, 494, 495, 496, 497, 498, 499,
	500, 504, 0, 503, 1337, 505, 506, 507, 508, 509,
	516, 518, 519, 514, 515, 517, 520, 521, 523, 511,
	512, 513, 1338, 522, 510, 1220, 305, 1339, 524, 525,
	526, 527, 1243, 1291, 528, 1305, 531, 532, 0, 0,
	533, 0, 534, 0, 0, 536, 537, 538, 0, 0,
	539, 540, 746, 1340, 541, 1341, 1320, 542, 543, 1230,
	544, 545, 546, 547, 548, 549, 550, 551, 552, 553,
	0, 554, 555, 748, 556, 557, 558, 749, 559, 560,
	561, 1321, 562, 751, 563, 564, 0, 565, 566, 567,
	0, 568, 569, 570, 571, 572, 573, 574, 575, 1301,
	576, 577, 579, 578, 580, 0, 581, 0, 582, 583,
	584, 0, 0, 0, 0, 0, 585, 586, 588, 0,
	589, 590, 591, 592, 587, 593, 594, 595, 596, 597,
	598, 0, 600, 601, 599, 602, 603, 1342, 604, 605,
	606, 607, 608, 1231, 609, 0, 610, 611, 618, 619,
	620, 612, 613, 614, 621, 622, 623, 624, 625, 626,
	0, 628, 629, 627, 630, 631, 632, 1284, 633, 754,
	634, 615, 616, 635, 636, 1343, 637, 638, 639, 640,
	641, 642, 643, 1299, 0, 644, 0, 645, 646, 647,
	648, 649, 650, 652, 617, 653, 658, 659, 1346, 654,
	655, 656, 657, 1322, 661, 662, 663, 664, 0, 665,
	666, 1217, 660, 651, 0, 667, 668, 669, 670, 671,
	672, 0, 673, 674, 0, 675, 1311, 1312, 1313, 1314,
	0, 687, 0, 676, 678, 679, 680, 681, 1323, 682,
	1324, 1241, 683, 684, 685, 686, 677, 688, 689, 0,
	1224, 690, 691, 693, 695, 696, 692, 694, 697, 1285,
	698, 0, 0, 699, 700, 701, 764, 1308, 1345, 0,
	703, 702, 704, 705, 706, 767, 707, 708, 709, 0,
	0, 0, 0, 710, 711, 768, 712, 713, 714, 1221,
	0, 0, 0, 0, 0, 0, 1263, 1235, 1236, 1237,
	1233, 1234, 1246, 0, 1216, 0, 0, 0, 0, 0,
	0, 1214, 1215, 306, 307, 309, 308, 310, 311, 312,
	313, 1247, 314, 315, 0, 1245, 0, 0, 0, 1287,
	1251, 0, 0, 316, 0, 317, 318, 319, 1327, 320,
	321, 322, 323, 324, 325, 326, 716, 1300, 0, 327,
	1307, 328, 1306, 0, 1317, 329, 330, 331, 332, 333,
	334, 335, 1253, 1286, 1218, 336, 1347, 1348, 723, 0,
	337, 338, 1293, 0, 1274, 0, 339, 340, 341, 342,
	343, 344, 345, 346, 0, 0, 348, 349, 350, 347,
	351, 0, 352, 0, 353, 354, 355, 356, 357, 358,
	359, 0, 360, 361, 362, 1328, 363, 364, 365, 1277,
	1275, 1276, 1283, 1279, 1278, 1282, 366, 367, 368, 369,
	370, 1310, 371, 373, 1304, 1303, 1223, 376, 378, 372,
	374, 0, 377, 375, 379, 0, 380, 381, 382, 0,
	0, 383, 1295, 385, 0, 386, 387, 388, 0, 389,
	390, 391, 0, 392, 393, 1229, 394, 395, 396, 398,
	400, 397, 399, 401, 402, 403, 404, 405, 1318, 1319,
	406, 1242, 303, 0, 0, 0, 0, 0, 407, 408,
	409, 1302, 0, 0, 0, 410, 0, 411, 412, 413,
	0, 414, 415, 0, 1329, 416, 417, 418, 1315, 1316,
	419, 420, 421, 422, 423, 424, 425, 426, 427, 0,
	428, 1325, 0, 1252, 429, 0, 430, 431, 432, 433,
	434, 435, 436, 1288, 1289, 1292, 529, 1331, 437, 438,
	439, 0, 440, 441, 442, 443, 444, 0, 0, 0,
	304, 445, 446, 447, 0, 1330, 738, 448, 530, 449,
	1297, 1298, 0, 1258, 0, 450, 451, 453, 1332, 1290,
	1333, 452, 454, 455, 1334, 456, 0, 0, 0, 457,
	458, 459, 460, 461, 462, 0, 463, 465, 464, 0,
	467, 1326, 466, 1335, 468, 469, 1336, 0, 470, 471,
	472, 473, 474, 475, 478, 1281, 1280, 476, 477, 479,
	480, 0, 481, 482, 484, 487, 483, 485, 486, 488,
	501, 502, 489, 490, 491, 492, 493, 494, 495, 496,
	497, 498, 499, 500, 504, 0, 503, 1337, 505, 506,
	507, 508, 509, 516, 518, 519, 514, 515, 517, 520,
	521, 523, 511, 512, 513, 1338, 522, 510, 1220, 305,
	1339, 524, 525, 526, 527, 1243, 1291, 528, 1305, 531,
	532, 0, 0, 533, 0, 534, 0, 0, 536, 537,
	538, 0, 0, 539, 540, 746, 1340, 541, 1341, 1320,
	542, 543, 1230, 544, 545, 546, 547, 548, 549, 550,
	551, 552, 553, 0, 554, 555, 748, 556, 557, 558,
	749, 559, 560, 561, 1321, 562, 751, 563, 564, 0,
	565, 566, 567, 0, 568, 569, 570, 571, 572, 573,
	574, 575, 1301, 576, 577, 579, 578, 580, 0, 581,
	0, 582, 583, 584, 0, 0, 0, 0, 0, 585,
	586, 588, 0, 589, 590, 591, 592, 587, 593, 594,
	595, 596, 597, 598, 0, 600, 601, 599, 602, 603,
	1342, 604, 605, 606, 607, 608, 1231, 609, 0, 610,
	611, 618, 619, 620, 612, 613, 614, 621, 622, 623,
	624, 625, 626, 0, 628, 629, 627, 630, 631, 632,
	1284, 633, 754, 634, 615, 616, 635, 636, 1343, 637,
	638, 639, 640, 641, 642, 643, 1299, 0, 644, 0,
	645, 646, 647, 648, 649, 650, 652, 617, 653, 658,
	659, 1346, 654, 655, 656, 657, 1322, 661, 662, 663,
	664, 0, 665, 666, 1217, 660, 651, 0, 667, 668,
	669, 670, 671, 672, 0, 673, 674, 0, 675, 1311,
	1312, 1313, 1314, 0, 687, 0, 676, 678, 679, 680,
	681, 1323, 682, 1324, 1241, 683, 684, 685, 686, 677,
	688, 689, 0, 1224, 690, 691, 693, 695, 696, 692,
	694, 697, 1285, 698, 0, 0, 699, 700, 701, 764,
	1308, 1345, 0, 703, 702, 704, 705, 706, 767, 707,
	708, 709, 0, 0, 0, 0, 710, 711, 768, 712,
	713, 714, 1221, 0, 0, 0, 0, 0, 0, 1263,
	1235, 1236, 1237, 1233, 1234, 1246, 0, 1216, 0, 0,
	0, 0, 0, 0, 2710, 2711, 306, 307, 309, 308,
	310, 311, 312, 313, 1247, 314, 315, 0, 1245, 0,
	0, 0, 1287, 1251, 0, 0, 316, 0, 317, 318,
	319, 1327, 320, 321, 322, 323, 324, 325, 326, 716,
	1300, 0, 327, 1307, 328, 1306, 0, 1317, 329, 330,
	331, 332, 333, 334, 335, 1253, 1286, 0, 336, 1347,
	1348, 723, 0, 337, 338, 1293, 0, 1274, 0, 339,
	340, 341, 342, 343, 344, 345, 346, 0, 0, 348,
	349, 350, 347, 351, 0, 352, 0, 353, 354, 355,
	356, 357, 358, 359, 0, 360, 361, 362, 1328, 363,
	364, 365, 1277, 1275, 1276, 1283, 1279, 1278, 1282, 366,
	367, 368, 369, 370, 1310, 371, 373, 1304, 1303, 0,
	376, 378, 372, 374, 0, 377, 375, 379, 0, 380,
	381, 382, 0, 0, 383, 1295, 385, 0, 386, 387,
	388, 0, 389, 390, 391, 0, 392, 393, 1229, 394,
	395, 396, 398, 400, 397, 399, 401, 402, 403, 404,
	405, 1318, 1319, 406, 1242, 303, 0, 0, 0, 0,
	0, 407, 408, 409, 1302, 0, 0, 0, 410, 0,
	411, 412, 413, 0, 414, 415, 0, 1329, 416, 417,
	418, 1315, 1316, 419, 420, 421, 422, 423, 424, 425,
	426, 427, 0, 428, 1325, 0, 1252, 429, 0, 430,
	431, 432, 433, 434, 435, 436, 1288, 1289, 1292, 529,
	1331, 437, 438, 439, 0, 440, 441, 442, 443, 444,
	0, 0, 0, 304, 445, 446, 447, 0, 1330, 738,
	448, 530, 449, 1297, 1298, 0, 1258, 0, 450, 451,
	453, 1332, 1290, 1333, 452, 454, 455, 1334, 456, 0,
	0, 0, 457, 458, 459, 460, 461, 462, 0, 463,
	465, 464, 0, 467, 1326, 466, 1335, 468, 469, 1336,
	0, 470, 471, 472, 473, 474, 475, 478, 1281, 1280,
	476, 477, 479, 480, 0, 481, 482, 484, 487, 483,
	485, 486, 488, 501, 502, 489, 490, 491, 492, 493,
	494, 495, 496, 497, 498, 499, 500, 504, 0, 503,
	1337, 505, 506, 507, 508, 509, 516, 518, 519, 514,
	515, 517, 520, 521, 523, 511, 512, 513, 1338, 522,
	510, 0, 305, 1339, 524, 525, 526, 527, 1243, 1291,
	528, 1305, 531, 532, 0, 0, 533, 0, 534, 0,
	0, 536, 537, 538, 0, 0, 539, 540, 746, 1340,
	541, 1341, 1320, 542, 543, 1230, 544, 545, 546, 547,
	548, 549, 550, 551, 552, 553, 0, 554, 555, 748,
	556, 557, 558, 749, 559, 560, 561, 1321, 562, 751,
	563, 564, 0, 565, 566, 567, 0, 568, 569, 570,
	571, 572, 573, 574, 575, 1301, 576, 577, 579, 578,
	580, 0, 581, 0, 582, 583, 584, 0, 0, 0,
	0, 0, 585, 586, 588, 0, 589, 590, 591, 592,
	587, 593, 594, 595, 596, 597, 598, 0, 600, 601,
	599, 602, 603, 1342, 604, 605, 606, 607, 608, 1231,
	609, 0, 610, 611, 618, 619, 620, 612, 613, 614,
	621, 622, 623, 624, 625, 626, 0, 628, 629, 627,
	630, 631, 632, 1284, 633, 754, 634, 615, 616, 635,
	636, 1343, 637, 638, 639, 640, 641, 642, 643, 1299,
	0, 644, 0, 645, 646, 647, 648, 649, 650, 652,
	617, 653, 658, 659, 1346, 654, 655, 656, 657, 1322,
	661, 662, 663, 664, 0, 665, 666, 0, 660, 651,
	0, 667, 668, 669, 670, 671, 672, 0, 673, 674,
	0, 675, 1311, 1312, 1313, 1314, 0, 687, 0, 676,
	678, 679, 680, 681, 1323, 682, 1324, 1241, 683, 684,
	685, 686, 677, 688, 689, 0, 0, 690, 691, 693,
	695, 696, 692, 694, 697, 1285, 698, 0, 0, 699,
	700, 701, 764, 1308, 1345, 0, 703, 702, 704, 705,
	706, 767, 707, 708, 709, 0, 0, 0, 0, 710,
	711, 768, 712, 713, 714, 0, 0, 0, 0, 0,
	0, 0, 1263, 1235, 1236, 1237, 1233, 1234, 1246, 0,
	2971, 0, 0, 0, 0, 0, 0, 2969, 2970, 306,
	307, 309, 308, 310, 311, 312, 313, 1247, 314, 315,
	0, 1245, 0, 0, 0, 1287, 1251, 0, 0, 316,
	0, 317, 318, 319, 1327, 320, 321, 322, 323, 324,
	325, 326, 716, 1300, 0, 327, 1307, 328, 1306, 0,
	1317, 329, 330, 331, 332, 333, 334, 335, 1253, 1286,
	0, 336, 1347, 1348, 723, 0, 337, 338, 1293, 0,
	1274, 0, 339, 340, 341, 342, 343, 344, 345, 346,
	0, 0, 348, 349, 350, 347, 351, 0, 352, 0,
	353, 354, 355, 356, 357, 358, 359, 0, 360, 361,
	362, 1328, 363, 364, 365, 1277, 1275, 1276, 1283, 1279,
	1278, 1282, 366, 367, 368, 369, 370, 1310, 371, 373,
	1304, 1303, 0, 376, 378, 372, 374, 0, 377, 375,
	379, 0, 380, 381, 382, 0, 0, 383, 1295, 385,
	0, 386, 387, 388, 0, 389, 390, 391, 0, 392,
	393, 1229, 394, 395, 396, 398, 400, 397, 399, 401,
	402, 403, 404, 405, 1318, 1319, 406, 1242, 303, 0,
	0, 0, 0, 0, 407, 408, 409, 1302, 0, 0,
	0, 410, 0, 411, 412, 413, 0, 414, 415, 0,
	1329, 416, 417, 418, 1315, 1316, 419, 420, 421, 422,
	423, 424, 425, 426, 427, 0, 428, 1325, 0, 1252,
	429, 0, 430, 431, 432, 433, 434, 435, 436, 1288,
	1289, 1292, 529, 1331, 437, 438, 439, 0, 440, 441,
	442, 443, 444, 0, 0, 0, 304, 445, 446, 447,
	0, 1330, 738, 448, 530, 449, 1297, 1298, 0, 1258,
	0, 450, 451, 453, 1332, 1290, 1333, 452, 454, 455,
	1334, 456, 0, 0, 0, 457, 458, 459, 460, 461,
	462, 0, 463, 465, 464, 0, 467, 1326, 466, 1335,
	468, 469, 1336, 0, 470, 471, 472, 473, 474, 475,
	478, 1281, 1280, 476, 477, 479, 480, 0, 481, 482,
	484, 487, 483, 485, 486, 488, 501, 502, 489, 490,
	491, 492, 493, 494, 495, 496, 497, 498, 499, 500,
	504, 0, 503, 1337, 505, 506, 507, 508, 509, 516,
	518, 519, 514, 515, 517, 520, 521, 523, 511, 512,
	513, 1338, 522, 510, 0, 305, 1339, 524, 525, 526,
	527, 1243, 1291, 528, 1305, 531, 532, 0, 0, 533,
	0, 534, 0, 0, 536, 537, 538, 0, 0, 539,
	540, 746, 1340, 541, 1341, 1320, 542, 543, 535, 544,
	545, 546, 547, 548, 549, 550, 551, 552, 553, 0,
	554, 555, 748, 556, 557, 558, 749, 559, 560, 561,
	1321, 562, 751, 563, 564, 0, 565, 566, 567, 0,
	568, 569, 570, 571, 572, 573, 574, 575, 1301, 576,
	577, 579, 578, 580, 0, 581, 0, 582, 583, 584,
	0, 0, 0, 0, 0, 585, 586, 588, 0, 589,
	590, 591, 592, 587, 593, 594, 595, 596, 597, 598,
	0, 600, 601, 599, 602, 603, 1342, 604, 605, 606,
	607, 608, 3505, 3506, 0, 610, 611, 618, 619, 620,
	612, 613, 614, 621, 622, 623, 624, 625, 626, 0,
	628, 629, 627, 630, 631, 632, 1284, 633, 754, 634,
	615, 616, 635, 636, 1343, 637, 638, 639, 640, 641,
	642, 643, 1299, 0, 644, 0, 645, 646, 647, 648,
	649, 650, 652, 617, 653, 658, 659, 1346, 654, 655,
	656, 657, 1322, 661, 662, 663, 664, 0, 665, 666,
	0, 660, 651, 0, 667, 668, 669, 670, 671, 672,
	0, 673, 674, 0, 675, 1311, 1312, 1313, 1314, 0,
	687, 0, 676, 678, 679, 680, 681, 1323, 682, 1324,
	1241, 683, 684, 685, 686, 677, 688, 689, 0, 0,
	690, 691, 693, 695, 696, 692, 694, 697, 1285, 698,
	0, 0, 699, 700, 701, 764, 1308, 1345, 0, 703,
	702, 704, 705, 706, 767, 707, 708, 709, 0, 0,
	0, 0, 710, 711, 768, 712, 713, 714, 0, 0,
	0, 0, 0, 0, 0, 1263, 1235, 1236, 1237, 1233,
	1234, 1246, 0, 0, 0, 0, 0, 0, 0, 0,
	2328, 2329, 306, 307, 309, 308, 310, 311, 312, 313,
	1247, 314, 315, 0, 1245, 0, 0, 0, 1287, 1251,
	0, 0, 316, 0, 317, 318, 319, 1327, 320, 321,
	322, 323, 324, 325, 326, 0, 1300, 0, 327, 1307,
	328, 1306, 0, 1317, 329, 330, 331, 332, 333, 334,
	335, 1253, 1286, 1218, 336, 1347, 1348, 723, 0, 337,
	338, 1293, 0, 1274, 0, 339, 340, 341, 342, 343,
	344, 345, 346, 0, 0, 348, 349, 350, 347, 351,
	0, 352, 0, 353, 354, 355, 356, 357, 358, 359,
	0, 360, 361, 362, 1328, 363, 364, 5277, 1277, 1275,
	1276, 1283, 1279, 1278, 1282, 366, 367, 368, 369, 370,
	1310, 371, 373, 1304, 1303, 1223, 376, 378, 372, 374,
	0, 377, 375, 379, 0, 380, 381, 382, 0, 0,
	383, 1295, 385, 0, 386, 387, 388, 0, 389, 390,
	391, 0, 392, 393, 1229, 394, 395, 396, 398, 400,
	397, 399, 401, 402, 403, 404, 405, 1318, 1319, 406,
	1242, 303, 0, 0, 0, 0, 0, 407, 408, 409,
	1302, 0, 0, 0, 410, 0, 411, 412, 413, 0,
	414, 415, 0, 1329, 416, 417, 418, 1315, 1316, 419,
	420, 421, 422, 423, 424, 425, 426, 427, 0, 428,
	1325, 0, 1252, 429, 0, 430, 431, 432, 433, 434,
	435, 436, 1288, 1289, 1292, 529, 0, 437, 438, 439,
	0, 440, 441, 442, 443, 444, 0, 0, 0, 304,
	445, 446, 447, 0, 1330, 738, 448, 530, 449, 1297,
	1298, 0, 1258, 0, 450, 451, 453, 0, 1290, 0,
	452, 454, 455, 1334, 456, 0, 0, 0, 457, 458,
	459, 460, 461, 462, 0, 463, 465, 464, 0, 467,
	1326, 466, 1335, 468, 469, 0, 0, 470, 471, 472,
	473, 474, 475, 478, 1281, 1280, 476, 477, 479, 480,
	0, 481, 482, 484, 487, 483, 485, 486, 488, 501,
	502, 489, 490, 491, 492, 493, 494, 495, 496, 497,
	498, 499, 500, 504, 0, 503, 1337, 505, 506, 507,
	508, 509, 516, 518, 519, 514, 515, 517, 520, 521,
	523, 511, 512, 513, 1338, 522, 510, 1220, 305, 0,
	524, 525, 526, 527, 1243, 1291, 528, 1305, 531, 532,
	0, 0, 533, 0, 534, 0, 0, 536, 537, 538,
	0, 0, 539, 540, 746, 1340, 541, 1341, 1320, 542,
	543, 1230, 544, 545, 546, 547, 548, 549, 550, 551,
	552, 553, 0, 554, 555, 748, 556, 557, 558, 749,
	559, 560, 561, 1321, 562, 751, 563, 564, 0, 565,
	566, 567, 0, 568, 569, 570, 571, 572, 573, 574,
	575, 1301, 576, 577, 579, 578, 580, 0, 581, 0,
	582, 583, 584, 0, 0, 0, 0, 0, 585, 586,
	588, 0, 589, 590, 591, 592, 587, 593, 594, 595,
	596, 597, 598, 0, 600, 601, 599, 602, 603, 1342,
	604, 605, 606, 607, 608, 1231, 609, 0, 610, 611,
	618, 619, 620, 612, 613, 614, 621, 622, 623, 624,
	625, 626, 0, 628, 629, 627, 630, 631, 632, 1284,
	633, 754, 634, 615, 616, 635, 636, 0, 637, 638,
	639, 640, 641, 642, 643, 1299, 0, 644, 0, 645,
	646, 647, 648, 649, 650, 652, 617, 653, 658, 659,
	1346, 654, 655, 656, 657, 1322, 661, 662, 663, 664,
	0, 665, 666, 1217, 660, 651, 0, 667, 668, 669,
	670, 671, 672, 0, 673, 674, 0, 675, 1311, 1312,
	1313, 1314, 0, 687, 0, 676, 678, 679, 680, 681,
	1323, 682, 1324, 1241, 683, 684, 685, 686, 677, 5276,
	689, 0, 1224, 690, 691, 693, 695, 696, 692, 694,
	697, 1285, 698, 0, 0, 699, 700, 701, 764, 1308,
	1345, 0, 703, 702, 704, 705, 706, 767, 707, 708,
	709, 0, 0, 0, 0, 710, 711, 768, 712, 713,
	714, 0, 0, 0, 0, 0, 2990, 0, 1263, 1235,
	1236, 1237, 1233, 1234, 1246, 0, 0, 0, 0, 0,
	0, 0, 0, 1214, 1215, 306, 307, 309, 308, 310,
	311, 312, 313, 1247, 314, 315, 0, 1245, 0, 0,
	0, 1287, 1251, 0, 0, 316, 0, 317, 318, 319,
	1327, 320, 321, 322, 323, 324, 325, 326, 716, 1300,
	0, 327, 1307, 328, 1306, 0, 1317, 329, 330, 331,
	332, 333, 334, 335, 0, 1286, 0, 336, 1347, 1348,
	723, 0, 337, 338, 1293, 0, 1274, 0, 339, 340,
	341, 342, 343, 344, 345, 346, 0, 0, 348, 349,
	350, 347, 351, 0, 352, 0, 353, 354, 355, 356,
	357, 358, 359, 0, 360, 361, 362, 1328, 363, 364,
	365, 1277, 1275, 1276, 1283, 1279, 1278, 1282, 366, 367,
	368, 369, 370, 1310, 371, 373, 1304, 1303, 0, 376,
	378, 372, 374, 0, 377, 375, 379, 0, 380, 381,
	382, 0, 0, 383, 1295, 385, 0, 386, 387, 388,
	0, 389, 390, 391, 0, 392, 393, 727, 394, 395,
	396, 398, 400, 397, 399, 401, 402, 403, 404, 405,
	1318, 1319, 406, 1242, 303, 0, 0, 0, 0, 0,
	407, 408, 409, 1302, 0, 0, 0, 410, 0, 411,
	412, 413, 0, 414, 415, 0, 1329, 416, 417, 418,
	1315, 1316, 419, 420, 421, 422, 423, 424, 425, 426,
	427, 0, 428, 1325, 0, 1252, 429, 0, 430, 431,
	432, 433, 434, 435, 436, 1288, 1289, 1292, 529, 1331,
	437, 438, 439, 0, 440, 441, 442, 443, 444, 0,
	0, 0, 304, 445, 446, 447, 0, 1330, 738, 448,
	530, 449, 1297, 1298, 0, 1258, 0, 450, 451, 453,
	1332, 1290, 1333, 452, 454, 455, 1334, 456, 0, 0,
	0, 457, 458, 459, 460, 461, 462, 0, 463, 465,
	464, 0, 467, 1326, 466, 1335, 468, 469, 1336, 0,
	470, 471, 472, 473, 474, 475, 478, 1281, 1280, 476,
	477, 479, 480, 0, 481, 482, 484, 487, 483, 485,
	486, 488, 501, 502, 489, 490, 491, 492, 493, 494,
	495, 496, 497, 498, 499, 500, 504, 0, 503, 1337,
	505, 506, 507, 508, 509, 516, 518, 519, 514, 515,
	517, 520, 521, 523, 511, 512, 513, 1338, 522, 510,
	0, 305, 1339, 524, 525, 526, 527, 1243, 1291, 528,
	1305, 531, 532, 0, 0, 533, 0, 534, 0, 0,
	536, 537, 538, 0, 0, 539, 540, 746, 1340, 541,
	1341, 1320, 542, 543, 535, 544, 545, 546, 547, 548,
	549, 550, 551, 552, 553, 0, 554, 555, 748, 556,
	557, 558, 749, 559, 560, 561, 1321, 562, 751, 563,
	564, 0, 565, 566, 567, 0, 568, 569, 570, 571,
	572, 573, 574, 575, 1301, 576, 577, 579, 578, 580,
	0, 581, 0, 582, 583, 584, 0, 0, 0, 0,
	0, 585, 586, 588, 0, 589, 590, 591, 592, 587,
	593, 594, 595, 596, 597, 598, 0, 600, 601, 599,
	602, 603, 1342, 604, 605, 606, 607, 608, 1231, 609,
	0, 610, 611, 618, 619, 620, 612, 613, 614, 621,
	622, 623, 624, 625, 626, 0, 628, 629, 627, 630,
	631, 632, 1284, 633, 754, 634, 615, 616, 635, 636,
	1343, 637, 638, 639, 640, 641, 642, 643, 1299, 0,
	644, 0, 645, 646, 647, 648, 649, 650, 652, 617,
	653, 658, 659, 1346, 654, 655, 656, 657, 1322, 661,
	662, 663, 664, 0, 665, 666, 0, 660, 651, 0,
	667, 668, 669, 670, 671, 672, 0, 673, 674, 0,
	675, 1311, 1312, 1313, 1314, 0, 687, 0, 676, 678,
	679, 680, 681, 1323, 682, 1324, 1241, 683, 684, 685,
	686, 677, 688, 689, 0, 0, 690, 691, 693, 695,
	696, 692, 694, 697, 1285, 698, 0, 0, 699, 700,
	701, 764, 1308, 1345, 0, 703, 702, 704, 705, 706,
	767, 707, 708, 709, 0, 0, 0, 0, 710, 711,
	768, 712, 713, 714, 0, 0, 1676, 0, 1263, 1235,
	1236, 1237, 1233, 1234, 1246, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 306, 307, 309, 308, 310,
	311, 312, 313, 0, 314, 315, 1247, 0, 0, 0,
	1245, 1287, 1251, 0, 0, 316, 0, 317, 318, 319,
	1327, 320, 321, 322, 323, 324, 325, 326, 716, 1300,
	0, 327, 1307, 328, 1306, 0, 1317, 329, 330, 331,
	332, 333, 334, 335, 0, 1286, 0, 336, 1347, 1348,
	723, 0, 337, 338, 1293, 0, 1274, 0, 339, 340,
	341, 342, 343, 344, 345, 346, 0, 0, 348, 349,
	350, 347, 351, 0, 352, 0, 353, 354, 355, 356,
	357, 358, 359, 0, 360, 361, 362, 1328, 363, 364,
	365, 1277, 1275, 1276, 1283, 1279, 1278, 1282, 366, 367,
	368, 369, 370, 1310, 371, 373, 1304, 1303, 0, 376,
	378, 372, 374, 0, 377, 375, 379, 0, 380, 381,
	382, 0, 0, 383, 1295, 385, 0, 386, 387, 388,
	0, 389, 390, 391, 0, 392, 393, 727, 394, 395,
	396, 398, 400, 397, 399, 401, 402, 403, 404, 405,
	1318, 1319, 406, 1242, 303, 0, 0, 0, 0, 0,
	407, 408, 409, 1302, 0, 0, 0, 410, 0, 411,
	412, 413, 0, 414, 415, 0, 1329, 416, 417, 418,
	1315, 1316, 419, 420, 421, 422, 423, 424, 425, 426,
	427, 0, 428, 1325, 0, 1252, 429, 0, 430, 431,
	432, 433, 434, 435, 436, 1288, 1289, 1292, 529, 1331,
	437, 438, 439, 0, 440, 441, 442, 443, 444, 0,
	0, 0, 304, 445, 446, 447, 0, 1330, 738, 448,
	530, 449, 1297, 1298, 0, 1258, 0, 450, 451, 453,
	1332, 1290, 1333, 452, 454, 455, 1334, 456, 0, 0,
	0, 457, 458, 459, 460, 461, 462, 0, 463, 465,
	464, 0, 467, 1326, 466, 1335, 468, 469, 1336, 0,
	470, 471, 472, 473, 474, 475, 478, 1281, 1280, 476,
	477, 479, 480, 0, 481, 482, 484, 487, 483, 485,
	486, 488, 501, 502, 489, 490, 491, 492, 493, 494,
	495, 496, 497, 498, 499, 500, 504, 0, 503, 1337,
	505, 506, 507, 508, 509, 516, 518, 519, 514, 515,
	517, 520, 521, 523, 511, 512, 513, 1338, 522, 510,
	0, 305, 1339, 524, 525, 526, 527, 1243, 1291, 528,
	1305, 531, 532, 0, 0, 533, 0, 534, 0, 0,
	536, 537, 538, 0, 0, 539, 540, 746, 1340, 541,
	1341, 1320, 542, 543, 535, 544, 545, 546, 547, 548,
	549, 550, 551, 552, 553, 0, 554, 555, 748, 556,
	557, 558, 749, 559, 560, 561, 1321, 562, 751, 563,
	564, 0, 565, 566, 567, 0, 568, 569, 570, 571,
	572, 573, 574, 575, 1301, 576, 577, 579, 578, 580,
	0, 581, 0, 582, 583, 584, 0, 0, 0, 0,
	0, 585, 586, 588, 0, 589, 590, 591, 592, 587,
	593, 594, 595, 596, 597, 598, 0, 600, 601, 599,
	602, 603, 1342, 604, 605, 606, 607, 608, 1231, 609,
	0, 610, 611, 618, 619, 620, 612, 613, 614, 621,
	622, 623, 624, 625, 626, 0, 628, 629, 627, 630,
	631, 632, 1284, 633, 754, 634, 615, 616, 635, 636,
	1343, 637, 638, 639, 640, 641, 642, 643, 1299, 0,
	644, 0, 645, 646, 647, 648, 649, 650, 652, 617,
	653, 658, 659, 1346, 654, 655, 656, 657, 1322, 661,
	662, 663, 664, 0, 665, 666, 0, 660, 651, 0,
	667, 668, 669, 670, 671, 672, 0, 673, 674, 0,
	675, 1311, 1312, 1313, 1314, 0, 687, 0, 676, 678,
	679, 680, 681, 1323, 682, 1324, 1241, 683, 684, 685,
	686, 677, 688, 689, 0, 0, 690, 691, 693, 695,
	696, 692, 694, 697, 1285, 698, 0, 0, 699, 700,
	701, 764, 1308, 1345, 0, 703, 702, 704, 705, 706,
	767, 707, 708, 709, 0, 0, 0, 0, 710, 711,
	768, 712, 713, 714, 1205, 0, 1386, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 306, 307, 309, 308, 310, 311, 312,
	313, 0, 314, 315, 0, 0, 1247, 0, 0, 1287,
	1245, 0, 0, 316, 0, 317, 318, 319, 1327, 320,
	321, 322, 323, 324, 325, 326, 716, 717, 0, 327,
	718, 328, 719, 0, 720, 329, 330, 331, 332, 333,
	334, 335, 0, 1286, 0, 336, 721, 722, 723, 0,
	337, 338, 1293, 0, 1274, 0, 339, 340, 341, 342,
	343, 344, 345, 346, 0, 0, 348, 349, 350, 347,
	351, 0, 352, 0, 353, 354, 355, 356, 357, 358,
	359, 0, 360, 361, 362, 1328, 363, 364, 365, 1277,
	1275, 1276, 1283, 1279, 1278, 1282, 366, 367, 368, 369,
	370, 0, 371, 373, 725, 726, 0, 376, 378, 372,
	374, 0, 377, 375, 379, 0, 380, 381, 382, 0,
	0, 383, 384, 385, 0, 386, 387, 388, 0, 389,
	390, 391, 0, 392, 393, 727, 394, 395, 396, 398,
	400, 397, 399, 401, 402, 403, 404, 405, 1318, 1319,
	406, 0, 303, 0, 0, 0, 0, 0, 407, 408,
	409, 730, 0, 0, 0, 410, 0, 411, 412, 413,
	0, 414, 415, 0, 1329, 416, 417, 418, 731, 732,
	419, 420, 421, 422, 423, 424, 425, 426, 427, 0,
	428, 1325, 0, 734, 429, 0, 430, 431, 432, 433,
	434, 435, 436, 1288, 1289, 1292, 529, 1331, 437, 438,
	439, 0, 440, 441, 442, 443, 444, 0, 0, 0,
	304, 445, 446, 447, 0, 1330, 738, 448, 530, 449,
	739, 740, 0, 741, 0, 450, 451, 453, 1332, 1290,
	1333, 452, 454, 455, 1334, 456, 0, 0, 0, 457,
	458, 459, 460, 461, 462, 1372, 463, 465, 464, 0,
	467, 1326, 466, 1335, 468, 469, 1336, 0, 470, 471,
	472, 473, 474, 475, 478, 1281, 1280, 476, 477, 479,
	480, 0, 481, 482, 484, 487, 483, 485, 486, 488,
	501, 502, 489, 490, 491, 492, 493, 494, 495, 496,
	497, 498, 499, 500, 504, 0, 503, 1337, 505, 506,
	507, 508, 509, 516, 518, 519, 514, 515, 517, 520,
	521, 523, 511, 512, 513, 1338, 522, 510, 0, 305,
	1339, 524, 525, 526, 527, 0, 1291, 528, 745, 531,
	532, 0, 0, 533, 0, 534, 0, 1378, 536, 537,
	538, 0, 0, 539, 540, 746, 1340, 541, 1341, 1320,
	542, 543, 535, 544, 545, 546, 547, 548, 549, 550,
	551, 552, 553, 0, 554, 555, 748, 556, 557, 558,
	749, 559, 560, 561, 1321, 562, 751, 563, 564, 0,
	565, 566, 567, 0, 568, 569, 570, 571, 572, 573,
	574, 575, 752, 576, 577, 579, 578, 580, 0, 581,
	0, 582, 583, 584, 0, 0, 0, 0, 0, 585,
	586, 588, 0, 589, 590, 591, 592, 587, 593, 594,
	595, 596, 597, 598, 0, 600, 601, 599, 602, 603,
	1342, 604, 605, 606, 607, 608, 753, 1380, 0, 610,
	611, 618, 619, 620, 612, 613, 614, 621, 622, 623,
	624, 625, 626, 259, 628, 629, 627, 630, 631, 632,
	1284, 633, 754, 634, 615, 616, 635, 636, 1343, 637,
	638, 639, 640, 641, 642, 643, 755, 0, 644, 0,
	645, 646, 647, 648, 649, 650, 652, 617, 653, 658,
	659, 756, 654, 655, 656, 657, 1322, 661, 662, 663,
	664, 0, 665, 666, 0, 660, 651, 261, 667, 668,
	669, 670, 671, 672, 0, 673, 674, 0, 675, 758,
	759, 760, 761, 0, 687, 0, 676, 678, 679, 680,
	681, 1323, 682, 1324, 0, 683, 684, 685, 686, 677,
	688, 689, 0, 0, 690, 691, 693, 695, 696, 692,
	694, 697, 1285, 698, 0, 0, 699, 700, 701, 1797,
	765, 766, 0, 703, 702, 704, 705, 706, 767, 707,
	708, 709, 0, 0, 0, 253, 710, 711, 768, 712,
	713, 714, 1386, 0, 254, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 306,
	307, 309, 308, 310, 311, 312, 313, 0, 314, 315,
	0, 0, 1376, 0, 2160, 1287, 0, 0, 0, 316,
	0, 317, 318, 319, 1327, 320, 321, 322, 323, 324,
	325, 326, 716, 717, 0, 327, 718, 328, 719, 0,
	720, 329, 330, 331, 332, 333, 334, 335, 0, 1286,
	0, 336, 721, 722, 723, 0, 337, 338, 1293, 0,
	1274, 0, 339, 340, 341, 342, 343, 344, 345, 346,
	0, 0, 348, 349, 350, 347, 351, 0, 352, 0,
	353, 354, 355, 356, 357, 358, 359, 0, 360, 361,
	362, 1328, 363, 364, 365, 1277, 1275, 1276, 1283, 1279,
	1278, 1282, 366, 367, 368, 369, 370, 0, 371, 373,
	725, 726, 0, 376, 378, 372, 374, 0, 377, 375,
	379, 0, 380, 381, 382, 0, 0, 383, 384, 385,
	0, 386, 387, 388, 0, 389, 390, 391, 0, 392,
	393, 727, 394, 395, 396, 398, 400, 397, 399, 401,
	402, 403, 404, 405, 1318, 1319, 406, 0, 303, 0,
	0, 0, 0, 0, 407, 408, 409, 730, 0, 0,
	0, 410, 0, 411, 412, 413, 0, 414, 415, 0,
	1329, 416, 417, 418, 731, 732, 419, 420, 421, 422,
	423, 424, 425, 426, 427, 0, 428, 1325, 0, 734,
	429, 0, 430, 431, 432, 433, 434, 435, 436, 1288,
	1289, 1292, 529, 1331, 437, 438, 439, 0, 440, 441,
	442, 443, 444, 0, 0, 0, 304, 445, 446, 447,
	0, 1330, 738, 448, 530, 449, 739, 740, 0, 741,
	0, 450, 451, 453, 1332, 1290, 1333, 452, 454, 455,
	1334, 456, 0, 0, 0, 457, 458, 459, 460, 461,
	462, 1372, 463, 465, 464, 0, 467, 1326, 466, 1335,
	468, 469, 1336, 0, 470, 471, 472, 473, 474, 475,
	478, 1281, 1280, 476, 477, 479, 480, 0, 481, 482,
	484, 487, 483, 485, 486, 488, 501, 502, 489, 490,
	491, 492, 493, 494, 495, 496, 497, 498, 499, 500,
	504, 0, 503, 1337, 505, 506, 507, 508, 509, 516,
	518, 519, 514, 515, 517, 520, 521, 523, 511, 512,
	513, 1338, 522, 510, 0, 305, 1339, 524, 525, 526,
	527, 0, 1291, 528, 745, 531, 532, 0, 0, 533,
	0, 534, 0, 1378, 536, 537, 538, 0, 0, 539,
	540, 746, 1340, 541, 1341, 1320, 542, 543, 535, 544,
	545, 546, 547, 548, 549, 550, 551, 552, 553, 0,
	554, 555, 748, 556, 557, 558, 749, 559, 560, 561,
	1321, 562, 751, 563, 564, 0, 565, 566, 567, 0,
	568, 569, 570, 571, 572, 573, 574, 575, 752, 576,
	577, 579, 578, 580, 0, 581, 0, 582, 583, 584,
	0, 0, 0, 0, 0, 585, 586, 588, 0, 589,
	590, 591, 592, 587, 593, 594, 595, 596, 597, 598,
	0, 600, 601, 599, 602, 603, 1342, 604, 605, 606,
	607, 608, 753, 1380, 0, 610, 611, 618, 619, 620,
	612, 613, 614, 621, 622, 623, 624, 625, 626, 259,
	628, 629, 627, 630, 631, 632, 1284, 633, 754, 634,
	615, 616, 635, 636, 1343, 637, 638, 639, 640, 641,
	642, 643, 755, 0, 644, 0, 645, 646, 647, 648,
	649, 650, 652, 617, 653, 658, 659, 756, 654, 655,
	656, 657, 1322, 661, 662, 663, 664, 0, 665, 666,
	0, 660, 651, 261, 667, 668, 669, 670, 671, 672,
	0, 673, 674, 0, 675, 758, 759, 760, 761, 0,
	687, 0, 676, 678, 679, 680, 681, 1323, 682, 1324,
	0, 683, 684, 685, 686, 677, 688, 689, 0, 0,
	690, 691, 693, 695, 696, 692, 694, 697, 1285, 698,
	0, 0, 699, 700, 701, 1797, 765, 766, 0, 703,
	702, 704, 705, 706, 767, 707, 708, 709, 0, 0,
	0, 253, 710, 711, 768, 712, 713, 714, 0, 0,
	254, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3670, 0, 1386, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1376, 0,
	2160, 306, 307, 309, 308, 310, 311, 312, 313, 0,
	314, 315, 0, 0, 0, 0, 0, 1287, 0, 0,
	0, 316, 0, 317, 318, 319, 1327, 320, 321, 322,
	323, 324, 325, 326, 716, 717, 0, 327, 718, 328,
	719, 0, 720, 329, 330, 331, 332, 333, 334, 335,
	0, 1286, 0, 336, 721, 722, 723, 0, 337, 338,
	1293, 0, 1274, 0, 339, 340, 341, 342, 343, 344,
	345, 346, 0, 0, 348, 349, 350, 347, 351, 0,
	352, 0, 353, 354, 355, 356, 357, 358, 359, 0,
	360, 361, 362, 1328, 363, 364, 365, 1277, 1275, 1276,
	1283, 1279, 1278, 1282, 366, 367, 368, 369, 370, 0,
	371, 373, 725, 726, 0, 376, 378, 372, 374, 0,
	377, 375, 379, 0, 380, 381, 382, 0, 0, 383,
	384, 385, 0, 386, 387, 388, 0, 389, 390, 391,
	0, 392, 393, 727, 394, 395, 396, 398, 400, 397,
	399, 401, 402, 403, 404, 405, 1318, 1319, 406, 0,
	303, 0, 0, 0, 0, 0, 407, 408, 409, 730,
	0, 0, 0, 410, 0, 411, 412, 413, 0, 414,
	415, 0, 1329, 416, 417, 418, 731, 732, 419, 420,
	421, 422, 423, 424, 425, 426, 427, 0, 428, 1325,
	0, 734, 429, 0, 430, 431, 432, 433, 434, 435,
	436, 1288, 1289, 1292, 529, 1331, 437, 438, 439, 0,
	440, 441, 442, 443, 444, 0, 0, 0, 304, 445,
	446, 447, 0, 1330, 738, 448, 530, 449, 739, 740,
	0, 741, 0, 450, 451, 453, 1332, 1290, 1333, 452,
	454, 455, 1334, 456, 0, 0, 0, 457, 458, 459,
	460, 461, 462, 1372, 463, 465, 464, 0, 467, 1326,
	466, 1335, 468, 469, 1336, 0, 470, 471, 472, 473,
	474, 475, 478, 1281, 1280, 476, 477, 479, 480, 0,
	481, 482, 484, 487, 483, 485, 486, 488, 501, 502,
	489, 490, 491, 492, 493, 494, 495, 496, 497, 498,
	499, 500, 504, 0, 503, 1337, 505, 506, 507, 508,
	509, 516, 518, 519, 514, 515, 517, 520, 521, 523,
	511, 512, 513, 1338, 522, 510, 0, 305, 1339, 524,
	525, 526, 527, 0, 1291, 528, 745, 531, 532, 0,
	0, 533, 0, 534, 0, 1378, 536, 537, 538, 0,
	0, 539, 540, 746, 1340, 541, 1341, 1320, 542, 543,
	535, 544, 545, 546, 547, 548, 549, 550, 551, 552,
	553, 0, 554, 555, 748, 556, 557, 558, 749, 559,
	560, 561, 1321, 562, 751, 563, 564, 0, 565, 566,
	567, 0, 568, 569, 570, 571, 572, 573, 574, 575,
	752, 576, 577, 579, 578, 580, 0, 581, 0, 582,
	583, 584, 0, 0, 0, 0, 0, 585, 586, 588,
	0, 589, 590, 591, 592, 587, 593, 594, 595, 596,
	597, 598, 0, 600, 601, 599, 602, 603, 1342, 604,
	605, 606, 607, 608, 753, 1380, 0, 610, 611, 618,
	619, 620, 612, 613, 614, 621, 622, 623, 624, 625,
	626, 0, 628, 629, 627, 630, 631, 632, 1284, 633,
	754, 634, 615, 616, 635, 636, 1343, 637, 638, 639,
	640, 641, 642, 643, 755, 0, 644, 0, 645, 646,
	647, 648, 649, 650, 652, 617, 653, 658, 659, 756,
	654, 655, 656, 657, 1322, 661, 662, 663, 664, 0,
	665, 666, 0, 660, 651, 0, 667, 668, 669, 670,
	671, 672, 0, 673, 674, 0, 675, 758, 759, 760,
	761, 0, 687, 0, 676, 678, 679, 680, 681, 1323,
	682, 1324, 0, 683, 684, 685, 686, 677, 688, 689,
	0, 0, 690, 691, 693, 695, 696, 692, 694, 697,
	1285, 698, 0, 0, 699, 700, 701, 764, 765, 766,
	0, 703, 702, 704, 705, 706, 767, 707, 708, 709,
	0, 0, 0, 0, 710, 711, 768, 712, 713, 714,
	1368, 0, 1386, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 306,
	307, 309, 308, 310, 311, 312, 313, 0, 314, 315,
	1376, 0, 1374, 0, 0, 1287, 0, 0, 0, 316,
	0, 317, 318, 319, 1327, 320, 321, 322, 323, 324,
	325, 326, 716, 717, 0, 327, 718, 328, 719, 0,
	720, 329, 330, 331, 332, 333, 334, 335, 0, 1286,
	0, 336, 721, 722, 723, 0, 337, 338, 1293, 0,
	1274, 0, 339, 340, 341, 342, 343, 344, 345, 346,
	0, 0, 348, 349, 350, 347, 351, 0, 352, 0,
	353, 354, 355, 356, 357, 358, 359, 0, 360, 361,
	362, 1328, 363, 364, 365, 1277, 1275, 1276, 1283, 1279,
	1278, 1282, 366, 367, 368, 369, 370, 0, 371, 373,
	725, 726, 0, 376, 378, 372, 374, 0, 377, 375,
	379, 0, 380, 381, 382, 0, 0, 383, 384, 385,
	0, 386, 387, 388, 0, 389, 390, 391, 0, 392,
	393, 727, 394, 395, 396, 398, 400, 397, 399, 401,
	402, 403, 404, 405, 1318, 1319, 406, 0, 303, 0,
	0, 0, 0, 0, 407, 408, 409, 730, 0, 0,
	0, 410, 0, 411, 412, 413, 0, 414, 415, 0,
	1329, 416, 417, 418, 731, 732, 419, 420, 421, 422,
	423, 424, 425, 426, 427, 0, 428, 1325, 0, 734,
	429, 0, 430, 431, 432, 433, 434, 435, 436, 1288,
	1289, 1292, 529, 1331, 437, 438, 439, 0, 440, 441,
	442, 443, 444, 0, 0, 0, 304, 445, 446, 447,
	0, 1330, 738, 448, 530, 449, 739, 740, 0, 741,
	0, 450, 451, 453, 1332, 1290, 1333, 452, 454, 455,
	1334, 456, 0, 0, 0, 457, 458, 459, 460, 461,
	462, 1372, 463, 465, 464, 0, 467, 1326, 466, 1335,
	468, 469, 1336, 0, 470, 471, 472, 473, 474, 475,
	478, 1281, 1280, 476, 477, 479, 480, 0, 481, 482,
	484, 487, 483, 485, 486, 488, 501, 502, 489, 490,
	491, 492, 493, 494, 495, 496, 497, 498, 499, 500,
	504, 0, 503, 1337, 505, 506, 507, 508, 509, 516,
	518, 519, 514, 515, 517, 520, 521, 523, 511, 512,
	513, 1338, 522, 510, 0, 305, 1339, 524, 525, 526,
	527, 0, 1291, 528, 745, 531, 532, 0, 0, 533,
	0, 534, 0, 1378, 536, 537, 538, 0, 0, 539,
	540, 746, 1340, 541, 1341, 1320, 542, 543, 535, 544,
	545, 546, 547, 548, 549, 550, 551, 552, 553, 0,
	554, 555, 748, 556, 557, 558, 749, 559, 560, 561,
	1321, 562, 751, 563, 564, 0, 565, 566, 567, 0,
	568, 569, 570, 571, 572, 573, 574, 575, 752, 576,
	577, 579, 578, 580, 0, 581, 0, 582, 583, 584,
	0, 0, 0, 0, 0, 585, 586, 588, 0, 589,
	590, 591, 592, 587, 593, 594, 595, 596, 597, 598,
	0, 600, 601, 599, 602, 603, 1342, 604, 605, 606,
	607, 608, 753, 1380, 0, 610, 611, 618, 619, 620,
	612, 613, 614, 621, 622, 623, 624, 625, 626, 0,
	628, 629, 627, 630, 631, 632, 1284, 633, 754, 634,
	615, 616, 635, 636, 1343, 637, 638, 639, 640, 641,
	642, 643, 755, 0, 644, 0, 645, 646, 647, 648,
	649, 650, 652, 617, 653, 658, 659, 756, 654, 655,
	656, 657, 1322, 661, 662, 663, 664, 0, 665, 666,
	0, 660, 651, 0, 667, 668, 669, 670, 671, 672,
	0, 673, 674, 0, 675, 758, 759, 760, 761, 0,
	687, 0, 676, 678, 679, 680, 681, 1323, 682, 1324,
	0, 683, 684, 685, 686, 677, 688, 689, 0, 0,
	690, 691, 693, 695, 696, 692, 694, 697, 1285, 698,
	0, 0, 699, 700, 701, 764, 765, 766, 0, 703,
	702, 704, 705, 706, 767, 707, 708, 709, 0, 0,
	0, 0, 710, 711, 768, 712, 713, 714, 1386, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 306, 307, 309, 308, 310,
	311, 312, 313, 0, 314, 315, 0, 0, 1376, 0,
	1374, 1287, 0, 0, 0, 316, 0, 317, 318, 319,
	1327, 320, 321, 322, 323, 324, 325, 326, 716, 717,
	0, 327, 718, 328, 719, 0, 720, 329, 330, 331,
	332, 333, 334, 335, 0, 1286, 0, 336, 721, 722,
	723, 0, 337, 338, 1293, 0, 1274, 0, 339, 340,
	341, 342, 343, 344, 345, 346, 0, 0, 348, 349,
	350, 347, 351, 0, 352, 0, 353, 354, 355, 356,
	357, 358, 359, 0, 360, 361, 362, 1328, 363, 364,
	365, 1277, 1275, 1276, 1283, 1279, 1278, 1282, 366, 367,
	368, 369, 370, 0, 371, 373, 725, 726, 0, 376,
	378, 372, 374, 0, 377, 375, 379, 0, 380, 381,
	382, 0, 0, 383, 384, 385, 0, 386, 387, 388,
	0, 389, 390, 391, 0, 392, 393, 727, 394, 395,
	396, 398, 400, 397, 399, 401, 402, 403, 404, 405,
	1318, 1319, 406, 0, 303, 0, 0, 0, 0, 0,
	407, 408, 409, 730, 0, 0, 0, 410, 0, 411,
	412, 413, 0, 414, 415, 0, 1329, 416, 417, 418,
	731, 732, 419, 420, 421, 422, 423, 424, 425, 426,
	427, 0, 428, 1325, 0, 734, 429, 0, 430, 431,
	432, 433, 434, 435, 436, 1288, 1289, 1292, 529, 1331,
	437, 438, 439, 0, 440, 441, 442, 443, 444, 0,
	0, 0, 304, 445, 446, 447, 0, 1330, 738, 448,
	530, 449, 739, 740, 0, 741, 0, 450, 451, 453,
	1332, 1290, 1333, 452, 454, 455, 1334, 456, 0, 0,
	0, 457, 458, 459, 460, 461, 462, 1372, 463, 465,
	464, 0, 467, 1326, 466, 1335, 468, 469, 1336, 0,
	470, 471, 472, 473, 474, 475, 478, 1281, 1280, 476,
	477, 479, 480, 0, 481, 482, 484, 487, 483, 485,
	486, 488, 501, 502, 489, 490, 491, 492, 493, 494,
	495, 496, 497, 498, 499, 500, 504, 0, 503, 1337,
	505, 506, 507, 508, 509, 516, 518, 519, 514, 515,
	517, 520, 521, 523, 511, 512, 513, 1338, 522, 510,
	0, 305, 1339, 524, 525, 526, 527, 0, 1291, 528,
	745, 531, 532, 0, 0, 533, 0, 534, 0, 1378,
	536, 537, 538, 0, 0, 539, 540, 746, 1340, 541,
	1341, 1320, 542, 543, 535, 544, 545, 546, 547, 548,
	549, 550, 551, 552, 553, 0, 554, 555, 748, 556,
	557, 558, 749, 559, 560, 561, 1321, 562, 751, 563,
	564, 0, 565, 566, 567, 0, 568, 569, 570, 571,
	572, 573, 574, 575, 752, 576, 577, 579, 578, 580,
	0, 581, 0, 582, 583, 584, 0, 0, 0, 0,
	0, 585, 586, 588, 0, 589, 590, 591, 592, 587,
	593, 594, 595, 596, 597, 598, 0, 600, 601, 599,
	602, 603, 1342, 604, 605, 606, 607, 608, 753, 1380,
	0, 610, 611, 618, 619, 620, 612, 613, 614, 621,
	622, 623, 624, 625, 626, 0, 628, 629, 627, 630,
	631, 632, 1284, 633, 754, 634, 615, 616, 635, 636,
	1343, 637, 638, 639, 640, 641, 642, 643, 755, 0,
	644, 0, 645, 646, 647, 648, 649, 650, 652, 617,
	653, 658, 659, 756, 654, 655, 656, 657, 1322, 661,
	662, 663, 664, 0, 665, 666, 0, 660, 651, 0,
	667, 668, 669, 670, 671, 672, 0, 673, 674, 0,
	675, 758, 759, 760, 761, 0, 687, 0, 676, 678,
	679, 680, 681, 1323, 682, 1324, 0, 683, 684, 685,
	686, 677, 688, 689, 0, 0, 690, 691, 693, 695,
	696, 692, 694, 697, 1285, 698, 0, 0, 699, 700,
	701, 764, 765, 766, 0, 703, 702, 704, 705, 706,
	767, 707, 708, 709, 0, 0, 0, 0, 710, 711,
	768, 712, 713, 714, 1386, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 306, 307, 309, 308, 310, 311, 312, 313, 0,
	314, 315, 0, 0, 1376, 0, 1374, 1287, 0, 0,
	0, 316, 0, 317, 318, 319, 1327, 320, 321, 322,
	323, 324, 325, 326, 716, 717, 0, 327, 718, 328,
	719, 0, 720, 329, 330, 331, 332, 333, 334, 335,
	0, 1286, 0, 336, 721, 722, 723, 0, 337, 338,
	1293, 0, 1274, 0, 339, 340, 341, 342, 343, 344,
	345, 346, 0, 0, 348, 349, 350, 347, 351, 0,
	352, 0, 353, 354, 355, 356, 357, 358, 359, 0,
	360, 361, 362, 1328, 363, 364, 365, 1277, 1275, 1276,
	1283, 1279, 1278, 1282, 366, 367, 368, 369, 370, 0,
	371, 373, 725, 726, 0, 376, 378, 372, 374, 0,
	377, 375, 379, 0, 380, 381, 382, 0, 0, 383,
	384, 385, 0, 386, 387, 388, 0, 389, 390, 391,
	0, 392, 393, 727, 394, 395, 396, 398, 400, 397,
	399, 401, 402, 403, 404, 405, 1318, 1319, 406, 0,
	303, 0, 0, 0, 0, 0, 407, 408, 409, 730,
	0, 0, 0, 410, 0, 411, 412, 413, 0, 414,
	415, 0, 1329, 416, 417, 418, 731, 732, 419, 420,
	421, 422, 423, 424, 425, 426, 427, 0, 428, 1325,
	0, 734, 429, 0, 430, 431, 432, 433, 434, 435,
	436, 1288, 1289, 1292, 529, 1331, 437, 438, 439, 0,
	440, 441, 442, 443, 444, 0, 0, 0, 304, 445,
	446, 447, 0, 1330, 738, 448, 530, 449, 739, 740,
	0, 741, 0, 450, 451, 453, 1332, 1290, 1333, 452,
	454, 455, 1334, 456, 0, 0, 0, 457, 458, 459,
	460, 461, 462, 0, 463, 465, 464, 0, 467, 1326,
	466, 1335, 468, 469, 1336, 0, 470, 471, 472, 473,
	474, 475, 478, 1281, 1280, 476, 477, 479, 480, 0,
	481, 482, 484, 487, 483, 485, 486, 488, 501, 502,
	489, 490, 491, 492, 493, 494, 495, 496, 497, 498,
	499, 500, 504, 0, 503, 1337, 505, 506, 507, 508,
	509, 516, 518, 519, 514, 515, 517, 520, 521, 523,
	511, 512, 513, 1338, 522, 510, 0, 305, 1339, 524,
	525, 526, 527, 0, 1291, 528, 745, 531, 532, 0,
	0, 533, 0, 534, 0, 0, 536, 537, 538, 0,
	0, 539, 540, 746, 1340, 541, 1341, 1320, 542, 543,
	535, 544, 545, 546, 547, 548, 549, 550, 551, 552,
	553, 0, 554, 555, 748, 556, 557, 558, 749, 559,
	560, 561, 1321, 562, 751, 563, 564, 0, 565, 566,
	567, 0, 568, 569, 570, 571, 572, 573, 574, 575,
	752, 576, 577, 579, 578, 580, 0, 581, 0, 582,
	583, 584, 0, 0, 0, 0, 0, 585, 586, 588,
	0, 589, 590, 591, 592, 587, 593, 594, 595, 596,
	597, 598, 0, 600, 601, 599, 602, 603, 1342, 604,
	605, 606, 607, 608, 753, 609, 0, 610, 611, 618,
	619, 620, 612, 613, 614, 621, 622, 623, 624, 625,
	626, 0, 628, 629, 627, 630, 631, 632, 1284, 633,
	754, 634, 615, 616, 635, 636, 1343, 637, 638, 639,
	640, 641, 642, 643, 755, 0, 644, 0, 645, 646,
	647, 648, 649, 650, 652, 617, 653, 658, 659, 756,
	654, 655, 656, 657, 1322, 661, 662, 663, 664, 0,
	665, 666, 0, 660, 651, 0, 667, 668, 669, 670,
	671, 672, 0, 673, 674, 0, 675, 758, 759, 760,
	761, 0, 687, 0, 676, 678, 679, 680, 681, 1323,
	682, 1324, 0, 683, 684, 685, 686, 677, 688, 689,
	0, 0, 690, 691, 693, 695, 696, 692, 694, 697,
	1285, 698, 0, 0, 699, 700, 701, 764, 765, 766,
	0, 703, 702, 704, 705, 706, 767, 707, 708, 709,
	0, 0, 0, 0, 710, 711, 768, 712, 713, 714,
	1386, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 306, 307, 309,
	308, 310, 311, 312, 313, 0, 314, 315, 0, 0,
	0, 0, 4647, 1287, 0, 0, 0, 316, 0, 317,
	318, 319, 1327, 320, 321, 322, 323, 324, 325, 326,
	716, 717, 0, 327, 718, 328, 719, 0, 720, 329,
	330, 331, 332, 333, 334, 335, 0, 1286, 0, 336,
	721, 722, 723, 0, 337, 338, 1293, 0, 1274, 0,
	339, 340, 341, 342, 343, 344, 345, 346, 0, 0,
	348, 349, 350, 347, 351, 0, 352, 0, 353, 354,
	355, 356, 357, 358, 359, 0, 360, 361, 362, 1328,
	363, 364, 365, 1277, 1275, 1276, 1283, 1279, 1278, 1282,
	366, 367, 368, 369, 370, 0, 371, 373, 725, 726,
	0, 376, 378, 372, 374, 0, 377, 375, 379, 0,
	380, 381, 382, 0, 0, 383, 384, 385, 0, 386,
	387, 388, 0, 389, 390, 391, 0, 392, 393, 727,
	394, 395, 396, 398, 400, 397, 399, 401, 402, 403,
	404, 405, 1318, 1319, 406, 0, 303, 0, 0, 0,
	0, 0, 407, 408, 409, 730, 0, 0, 0, 410,
	0, 411, 412, 413, 0, 414, 415, 0, 1329, 416,
	417, 418, 731, 732, 419, 420, 421, 422, 423, 424,
	425, 426, 427, 0, 428, 1325, 0, 734, 429, 0,
	430, 431, 432, 433, 434, 435, 436, 1288, 1289, 1292,
	529, 1331, 437, 438, 439, 0, 440, 441, 442, 443,
	444, 0, 0, 0, 304, 445, 446, 447, 0, 1330,
	738, 448, 530, 449, 739, 740, 0, 741, 0, 450,
	451, 453, 1332, 1290, 1333, 452, 454, 455, 1334, 456,
	0, 0, 0, 457, 458, 459, 460, 461, 462, 0,
	463, 465, 464, 0, 467, 1326, 466, 1335, 468, 469,
	1336, 0, 470, 471, 472, 473, 474, 475, 478, 1281,
	1280, 476, 477, 479, 480, 0, 481, 482, 484, 487,
	483, 485, 486, 488, 501, 502, 489, 490, 491, 492,
	493, 494, 495, 496, 497, 498, 499, 500, 504, 0,
	503, 1337, 505, 506, 507, 508, 509, 516, 518, 519,
	514, 515, 517, 520, 521, 523, 511, 512, 513, 1338,
	522, 510, 0, 305, 1339, 524, 525, 526, 527, 0,
	1291, 528, 745, 531, 532, 0, 0, 533, 0, 534,
	0, 0, 536, 537, 538, 0, 0, 539, 540, 746,
	1340, 541, 1341, 1320, 542, 543, 535, 544, 545, 546,
	547, 548, 549, 550, 551, 552, 553, 0, 554, 555,
	748, 556, 557, 558, 749, 559, 560, 561, 1321, 562,
	751, 563, 564, 0, 565, 566, 567, 0, 568, 569,
	570, 571, 572, 573, 574, 575, 752, 576, 577, 579,
	578, 580, 0, 581, 0, 582, 583, 584, 0, 0,
	0, 0, 0, 585, 586, 588, 0, 589, 590, 591,
	592, 587, 593, 594, 595, 596, 597, 598, 0, 600,
	601, 599, 602, 603, 1342, 604, 605, 606, 607, 608,
	753, 1380, 0, 610, 611, 618, 619, 620, 612, 613,
	614, 621, 622, 623, 624, 625, 626, 0, 628, 629,
	627, 630, 631, 632, 1284, 633, 754, 634, 615, 616,
	635, 636, 1343, 637, 638, 639, 640, 641, 642, 643,
	755, 0, 644, 0, 645, 646, 647, 648, 649, 650,
	652, 617, 653, 658, 659, 756, 654, 655, 656, 657,
	1322, 661, 662, 663, 664, 0, 665, 666, 0, 660,
	651, 0, 667, 668, 669, 670, 671, 672, 0, 673,
	674, 0, 675, 758, 759, 760, 761, 0, 687, 0,
	676, 678, 679, 680, 681, 1323, 682, 1324, 0, 683,
	684, 685, 686, 677, 688, 689, 0, 0, 690, 691,
	693, 695, 696, 692, 694, 697, 1285, 698, 0, 0,
	699, 700, 701, 764, 765, 766, 0, 703, 702, 704,
	705, 706, 767, 707, 708, 709, 300, 0, 0, 0,
	710, 711, 768, 712, 713, 714, 2816, 2817, 2818, 2835,
	2836, 2837, 0, 306, 307, 309, 308, 310, 311, 312,
	313, 0, 314, 315, 0, 0, 0, 2838, 0, 715,
	0, 0, 0, 316, 0, 317, 318, 319, 2056, 320,
	321, 322, 323, 324, 325, 326, 716, 717, 0, 327,
	718, 328, 719, 0, 720, 329, 330, 331, 332, 333,
	334, 335, 0, 0, 2041, 336, 721, 722, 723, 0,
	337, 338, 724, 0, 0, 0, 339, 340, 341, 342,
	343, 344, 345, 346, 2828, 0, 348, 349, 350, 347,
	351, 0, 352, 2824, 353, 354, 355, 356, 357, 358,
	359, 0, 360, 361, 362, 0, 363, 364, 365, 0,
	0, 0, 0, 0, 0, 0, 366, 367, 368, 369,
	370, 0, 371, 373, 725, 726, 0, 376, 378, 372,
	374, 0, 377, 375, 379, 0, 380, 381, 382, 0,
	0, 383, 384, 385, 0, 386, 387, 388, 0, 389,
	390, 391, 0, 392, 393, 727, 394, 395, 396, 398,
	400, 397, 399, 401, 402, 403, 404, 405, 728, 729,
	406, 0, 0, 0, 2829, 2830, 2831, 2832, 407, 408,
	409, 730, 0, 0, 2823, 410, 0, 411, 412, 413,
	0, 414, 415, 0, 0, 416, 417, 418, 731, 732,
	419, 420, 421, 422, 423, 424, 425, 426, 427, 0,
	428, 733, 0, 734, 429, 0, 430, 431, 432, 433,
	434, 435, 436, 735, 736, 737, 529, 0, 437, 438,
	439, 0, 440, 441, 442, 443, 444, 0, 0, 0,
	0, 445, 446, 447, 0, 0, 738, 448, 530, 449,
	739, 740, 0, 741, 0, 450, 451, 453, 0, 742,
	0, 452, 454, 455, 0, 456, 0, 2833, 2834, 457,
	458, 459, 460, 461, 462, 0, 463, 465, 464, 0,
	467, 743, 466, 0, 468, 469, 0, 0, 470, 471,
	472, 473, 474, 475, 478, 0, 0, 476, 477, 479,
	480, 2826, 481, 482, 484, 487, 483, 485, 486, 488,
	501, 502, 489, 490, 491, 492, 493, 494, 495, 496,
	497, 498, 499, 500, 504, 0, 503, 0, 505, 506,
	507, 508, 509, 516, 518, 519, 514, 515, 517, 520,
	521, 523, 511, 512, 513, 0, 522, 510, 0, 0,
	0, 524, 525, 526, 527, 0, 744, 528, 745, 531,
	532, 0, 0, 533, 0, 534, 0, 0, 536, 537,
	538, 0, 0, 539, 540, 746, 0, 541, 0, 747,
	542, 543, 535, 544, 545, 546, 547, 548, 549, 550,
	551, 552, 553, 0, 554, 555, 748, 556, 557, 558,
	749, 559, 560, 561, 750, 562, 751, 563, 564, 0,
	565, 566, 567, 0, 568, 569, 570, 571, 572, 573,
	574, 575, 752, 576, 577, 579, 578, 580, 0, 581,
	0, 582, 583, 584, 0, 0, 0, 0, 0, 585,
	586, 588, 0, 589, 590, 591, 592, 587, 593, 594,
	595, 596, 597, 598, 0, 600, 601, 599, 602, 603,
	0, 604, 605, 606, 607, 608, 753, 609, 2827, 610,
	611, 618, 619, 620, 612, 613, 614, 621, 622, 623,
	624, 625, 626, 0, 628, 629, 627, 630, 631, 632,
	0, 633, 754, 634, 615, 616, 635, 636, 0, 637,
	638, 639, 640, 641, 642, 643, 755, 0, 644, 0,
	645, 646, 647, 648, 649, 650, 652, 617, 653, 658,
	659, 756, 654, 655, 656, 657, 757, 661, 662, 663,
	664, 0, 665, 666, 2040, 660, 651, 0, 667, 668,
	669, 670, 671, 672, 0, 673, 674, 0, 675, 758,
	759, 760, 761, 0, 687, 0, 676, 678, 679, 680,
	681, 762, 682, 763, 0, 683, 684, 685, 686, 677,
	688, 689, 0, 0, 690, 691, 693, 695, 696, 692,
	694, 697, 0, 698, 0, 0, 699, 700, 701, 764,
	765, 766, 0, 703, 702, 704, 705, 706, 767, 707,
	708, 709, 0, 0, 0, 0, 710, 711, 768, 712,
	713, 714, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1205, 0, 1671, 2813, 2814, 2815, 2839, 2825, 2819,
	0, 2821, 2822, 2820, 2807, 2808, 2809, 2810, 2811, 2812,
	306, 307, 309, 308, 310, 311, 312, 313, 0, 314,
	315, 0, 0, 0, 0, 0, 715, 0, 0, 0,
	316, 0, 317, 318, 319, 1327, 320, 321, 322, 323,
	324, 325, 326, 716, 717, 0, 327, 718, 328, 719,
	0, 720, 329, 330, 331, 332, 333, 334, 335, 0,
	0, 0, 336, 721, 722, 723, 0, 337, 338, 724,
	0, 1635, 0, 339, 340, 341, 342, 343, 344, 345,
	346, 0, 0, 348, 349, 350, 347, 351, 0, 352,
	0, 353, 354, 355, 356, 357, 358, 359, 0, 360,
	361, 362, 1328, 363, 364, 365, 0, 0, 0, 0,
	0, 0, 0, 366, 367, 368, 369, 370, 0, 371,
	373, 725, 726, 0, 376, 378, 372, 374, 0, 377,
	375, 379, 0, 380, 381, 382, 0, 0, 383, 384,
	385, 0, 386, 387, 388, 0, 389, 390, 391, 0,
	392, 393, 727, 394, 395, 396, 398, 400, 397, 399,
	401, 402, 403, 404, 405, 728, 729, 406, 0, 303,
	0, 0, 0, 0, 0, 407, 408, 409, 730, 0,
	0, 0, 410, 0, 411, 412, 413, 0, 414, 415,
	0, 1329, 416, 417, 418, 731, 732, 419, 420, 421,
	422, 423, 424, 425, 426, 427, 0, 428, 733, 0,
	734, 429, 0, 430, 431, 432, 433, 434, 435, 436,
	735, 736, 737, 529, 1331, 437, 438, 439, 0, 440,
	441, 442, 443, 444, 0, 0, 0, 0, 445, 446,
	447, 0, 1330, 738, 448, 530, 449, 739, 740, 0,
	741, 0, 450, 451, 453, 1332, 742, 1333, 452, 454,
	455, 1334, 456, 0, 0, 0, 457, 458, 459, 460,
	461, 462, 0, 463, 465, 464, 0, 467, 743, 466,
	1335, 468, 469, 1336, 0, 470, 471, 472, 473, 474,
	475, 478, 0, 0, 476, 477, 479, 480, 0, 481,
	482, 484, 487, 483, 485, 486, 488, 501, 502, 489,
	490, 491, 492, 493, 494, 495, 496, 497, 498, 499,
	500, 504, 0, 503, 1337, 505, 506, 507, 508, 509,
	516, 518, 519, 514, 515, 517, 520, 521, 523, 511,
	512, 513, 1338, 522, 510, 0, 0, 1339, 524, 525,
	526, 527, 0, 744, 528, 745, 531, 532, 0, 0,
	533, 0, 534, 0, 0, 536, 537, 538, 0, 0,
	539, 540, 746, 1340, 541, 1341, 747, 542, 543, 535,
	544, 545, 546, 547, 548, 549, 550, 551, 552, 553,
	0, 554, 555, 748, 556, 557, 558, 749, 559, 560,
	561, 750, 562, 751, 563, 564, 0, 565, 566, 567,
	0, 568, 569, 570, 571, 572, 573, 574, 575, 752,
	576, 577, 579, 578, 580, 0, 581, 0, 582, 583,
	584, 0, 0, 0, 0, 0, 585, 586, 588, 0,
	589, 590, 591, 592, 587, 593, 594, 595, 596, 597,
	598, 0, 600, 601, 599, 602, 603, 1342, 604, 605,
	606, 607, 608, 753, 609, 0, 610, 611, 618, 619,
	620, 612, 613, 614, 621, 622, 623, 624, 625, 626,
	259, 628, 629, 627, 630, 631, 632, 0, 633, 754,
	634, 615, 616, 635, 636, 1343, 637, 638, 639, 640,
	641, 642, 643, 755, 0, 644, 0, 645, 646, 647,
	648, 649, 650, 652, 617, 653, 658, 659, 756, 654,
	655, 656, 657, 757, 661, 662, 663, 664, 0, 665,
	666, 0, 660, 651, 261, 667, 668, 669, 670, 671,
	672, 0, 673, 674, 0, 675, 758, 759, 760, 761,
	0, 687, 0, 676, 678, 679, 680, 681, 762, 682,
	763, 0, 683, 684, 685, 686, 677, 688, 689, 0,
	0, 690, 691, 693, 695, 696, 692, 694, 697, 0,
	698, 0, 0, 699, 700, 701, 1797, 765, 766, 0,
	703, 702, 704, 705, 706, 767, 707, 708, 709, 0,
	0, 0, 253, 710, 711, 768, 712, 713, 714, 0,
	1794, 254, 1671, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 306,
	307, 309, 308, 310, 311, 312, 313, 0, 314, 315,
	0, 209, 0, 0, 0, 715, 0, 0, 0, 316,
	0, 317, 318, 319, 1327, 320, 321, 322, 323, 324,
	325, 326, 716, 717, 0, 327, 718, 328, 719, 0,
	720, 329, 330, 331, 332, 333, 334, 335, 0, 0,
	0, 336, 721, 722, 723, 0, 337, 338, 724, 0,
	1635, 0, 339, 340, 341, 342, 343, 344, 345, 346,
	0, 0, 348, 349, 350, 347, 351, 0, 352, 0,
	353, 354, 355, 356, 357, 358, 359, 0, 360, 361,
	362, 1328, 363, 364, 365, 0, 0, 0, 0, 0,
	0, 0, 366, 367, 368, 369, 370, 0, 371, 373,
	725, 726, 0, 376, 378, 372, 374, 0, 377, 375,
	379, 0, 380, 381, 382, 0, 0, 383, 384, 385,
	0, 386, 387, 388, 0, 389, 390, 391, 0, 392,
	393, 727, 394, 395, 396, 398, 400, 397, 399, 401,
	402, 403, 404, 405, 728, 729, 406, 0, 303, 0,
	0, 0, 0, 0, 407, 408, 409, 730, 0, 0,
	0, 410, 0, 411, 412, 413, 0, 414, 415, 0,
	1329, 416, 417, 418, 731, 732, 419, 420, 421, 422,
	423, 424, 425, 426, 427, 0, 428, 733, 0, 734,
	429, 0, 430, 431, 432, 433, 434, 435, 436, 735,
	736, 737, 529, 1331, 437, 438, 439, 0, 440, 441,
	442, 443, 444, 0, 0, 0, 0, 445, 446, 447,
	0, 1330, 738, 448, 530, 449, 739, 740, 0, 741,
	0, 450, 451, 453, 1332, 742, 1333, 452, 454, 455,
	1334, 456, 0, 0, 0, 457, 458, 459, 460, 461,
	462, 0, 463, 465, 464, 0, 467, 743, 466, 1335,
	468, 469, 1336, 0, 470, 471, 472, 473, 474, 475,
	478, 0, 0, 476, 477, 479, 480, 0, 481, 482,
	484, 487, 483, 485, 486, 488, 501, 502, 489, 490,
	491, 492, 493, 494, 495, 496, 497, 498, 499, 500,
	504, 0, 503, 1337, 505, 506, 507, 508, 509, 516,
	518, 519, 514, 515, 517, 520, 521, 523, 511, 512,
	513, 1338, 522, 510, 0, 0, 1339, 524, 525, 526,
	527, 0, 744, 528, 745, 531, 532, 0, 0, 533,
	0, 534, 0, 0, 536, 537, 538, 0, 0, 539,
	540, 746, 1340, 541, 1341, 747, 542, 543, 535, 544,
	545, 546, 547, 548, 549, 550, 551, 552, 553, 0,
	554, 555, 748, 556, 557, 558, 749, 559, 560, 561,
	750, 562, 751, 563, 564, 0, 565, 566, 567, 0,
	568, 569, 570, 571, 572, 573, 574, 575, 752, 576,
	577, 579, 578, 580, 0, 581, 0, 582, 583, 584,
	0, 0, 0, 0, 0, 585, 586, 588, 0, 589,
	590, 591, 592, 587, 593, 594, 595, 596, 597, 598,
	0, 600, 601, 599, 602, 603, 1342, 604, 605, 606,
	607, 608, 753, 609, 0, 610, 611, 618, 619, 620,
	612, 613, 614, 621, 622, 623, 624, 625, 626, 259,
	628, 629, 627, 630, 631, 632, 0, 633, 754, 634,
	615, 616, 635, 636, 1343, 637, 638, 639, 640, 641,
	642, 643, 755, 0, 644, 0, 645, 646, 647, 648,
	649, 650, 652, 617, 653, 658, 659, 756, 654, 655,
	656, 657, 757, 661, 662, 663, 664, 0, 665, 666,
	0, 660, 651, 261, 667, 668, 669, 670, 671, 672,
	0, 673, 674, 0, 675, 758, 759, 760, 761, 0,
	687, 0, 676, 678, 679, 680, 681, 762, 682, 763,
	0, 683, 684, 685, 686, 677, 688, 689, 0, 0,
	690, 691, 693, 695, 696, 692, 694, 697, 0, 698,
	0, 0, 699, 700, 701, 1797, 765, 766, 0, 703,
	702, 704, 705, 706, 767, 707, 708, 709, 0, 0,
	0, 253, 710, 711, 768, 712, 713, 714, 1671, 1670,
	254, 0, 0, 0, 1668, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 306, 307, 309, 308, 310,
	311, 312, 313, 0, 314, 315, 0, 0, 0, 0,
	209, 715, 0, 0, 0, 316, 0, 317, 318, 319,
	1327, 320, 321, 322, 323, 324, 325, 326, 716, 717,
	0, 327, 718, 328, 719, 0, 720, 329, 330, 331,
	332, 333, 334, 335, 0, 0, 0, 336, 721, 722,
	723, 0, 337, 338, 724, 0, 1635, 0, 339, 340,
	341, 342, 343, 344, 345, 346, 0, 0, 348, 349,
	350, 347, 351, 0, 352, 0, 353, 354, 355, 356,
	357, 358, 359, 0, 360, 361, 362, 1328, 363, 364,
	365, 0, 0, 0, 0, 0, 0, 0, 366, 367,
	368, 369, 370, 0, 371, 373, 725, 726, 0, 376,
	378, 372, 374, 0, 377, 375, 379, 0, 380, 381,
	382, 0, 0, 383, 384, 385, 0, 386, 387, 388,
	0, 389, 390, 391, 0, 392, 393, 727, 394, 395,
	396, 398, 400, 397, 399, 401, 402, 403, 404, 405,
	728, 729, 406, 0, 303, 0, 0, 0, 0, 0,
	407, 408, 409, 730, 0, 0, 0, 410, 0, 411,
	412, 413, 0, 414, 415, 0, 1329, 416, 417, 418,
	731, 732, 419, 420, 421, 422, 423, 424, 425, 426,
	427, 0, 428, 733, 0, 734, 429, 0, 430, 431,
	432, 433, 434, 435, 436, 735, 736, 737, 529, 1331,
	437, 438, 439, 0, 440, 441, 442, 443, 444, 0,
	0, 0, 0, 445, 446, 447, 0, 1330, 738, 448,
	530, 449, 739, 740, 0, 741, 0, 450, 451, 453,
	1332, 742, 1333, 452, 454, 455, 1334, 456, 0, 0,
	0, 457, 458, 459, 460, 461, 462, 0, 463, 465,
	464, 0, 467, 743, 466, 1335, 468, 469, 1336, 0,
	470, 471, 472, 473, 474, 475, 478, 0, 0, 476,
	477, 479, 480, 0, 481, 482, 484, 487, 483, 485,
	486, 488, 501, 502, 489, 490, 491, 492, 493, 494,
	495, 496, 497, 498, 499, 500, 504, 0, 503, 1337,
	505, 506, 507, 508, 509, 516, 518, 519, 514, 515,
	517, 520, 521, 523, 511, 512, 513, 1338, 522, 510,
	0, 0, 1339, 524, 525, 526, 527, 0, 744, 528,
	745, 531, 532, 0, 0, 533, 0, 534, 0, 0,
	536, 537, 538, 0, 0, 539, 540, 746, 1340, 541,
	1341, 747, 542, 543, 535, 544, 545, 546, 547, 548,
	549, 550, 551, 552, 553, 0, 554, 555, 748, 556,
	557, 558, 749, 559, 560, 561, 750, 562, 751, 563,
	564, 0, 565, 566, 567, 0, 568, 569, 570, 571,
	572, 573, 574, 575, 752, 576, 577, 579, 578, 580,
	0, 581, 0, 582, 583, 584, 0, 0, 0, 0,
	0, 585, 586, 588, 0, 589, 590, 591, 592, 587,
	593, 594, 595, 596, 597, 598, 0, 600, 601, 599,
	602, 603, 1342, 604, 605, 606, 607, 608, 753, 609,
	0, 610, 611, 618, 619, 620, 612, 613, 614, 621,
	622, 623, 624, 625, 626, 0, 628, 629, 627, 630,
	631, 632, 0, 633, 754, 634, 615, 616, 635, 636,
	1343, 637, 638, 639, 640, 641, 642, 643, 755, 0,
	644, 0, 645, 646, 647, 648, 649, 650, 652, 617,
	653, 658, 659, 756, 654, 655, 656, 657, 757, 661,
	662, 663, 664, 0, 665, 666, 0, 660, 651, 0,
	667, 668, 669, 670, 671, 672, 0, 673, 674, 0,
	675, 758, 759, 760, 761, 0, 687, 0, 676, 678,
	679, 680, 681, 762, 682, 763, 0, 683, 684, 685,
	686, 677, 688, 689, 0, 0, 690, 691, 693, 695,
	696, 692, 694, 697, 0, 698, 0, 0, 699, 700,
	701, 764, 765, 766, 0, 703, 702, 704, 705, 706,
	767, 707, 708, 709, 0, 0, 0, 0, 710, 711,
	768, 712, 713, 714, 1671, 1670, 0, 0, 0, 0,
	1668, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 306, 307, 309, 308, 310, 311, 312, 313, 0,
	314, 315, 0, 0, 0, 0, 1821, 715, 0, 0,
	0, 316, 0, 317, 318, 319, 1327, 320, 321, 322,
	323, 324, 325, 326, 716, 717, 0, 327, 718, 328,
	719, 0, 720, 329, 330, 331, 332, 333, 334, 335,
	0, 0, 0, 336, 721, 722, 723, 0, 337, 338,
	724, 0, 1635, 0, 339, 340, 341, 342, 343, 344,
	345, 346, 0, 0, 348, 349, 350, 347, 351, 0,
	352, 0, 353, 354, 355, 356, 357, 358, 359, 0,
	360, 361, 362, 1328, 363, 364, 365, 0, 0, 0,
	0, 0, 0, 0, 366, 367, 368, 369, 370, 0,
	371, 373, 725, 726, 0, 376, 378, 372, 374, 0,
	377, 375, 379, 0, 380, 381, 382, 0, 0, 383,
	384, 385, 0, 386, 387, 388, 0, 389, 390, 391,
	0, 392, 393, 727, 394, 395, 396, 398, 400, 397,
	399, 401, 402, 403, 404, 405, 728, 729, 406, 0,
	303, 0, 0, 0, 0, 0, 407, 408, 409, 730,
	0, 0, 0, 410, 0, 411, 412, 413, 0, 414,
	415, 0, 1329, 416, 417, 418, 731, 732, 419, 420,
	421, 422, 423, 424, 425, 426, 427, 0, 428, 733,
	0, 734, 429, 0, 430, 431, 432, 433, 434, 435,
	436, 735, 736, 737, 529, 1331, 437, 438, 439, 0,
	440, 441, 442, 443, 444, 0, 0, 0, 0, 445,
	446, 447, 0, 1330, 738, 448, 530, 449, 739, 740,
	0, 741, 0, 450, 451, 453, 1332, 742, 1333, 452,
	454, 455, 1334, 456, 0, 0, 0, 457, 458, 459,
	460, 461, 462, 0, 463, 465, 464, 0, 467, 743,
	466, 1335, 468, 469, 1336, 0, 470, 471, 472, 473,
	474, 475, 478, 0, 0, 476, 477, 479, 480, 0,
	481, 482, 484, 487, 483, 485, 486, 488, 501, 502,
	489, 490, 491, 492, 493, 494, 495, 496, 497, 498,
	499, 500, 504, 0, 503, 1337, 505, 506, 507, 508,
	509, 516, 518, 519, 514, 515, 517, 520, 521, 523,
	511, 512, 513, 1338, 522, 510, 0, 0, 1339, 524,
	525, 526, 527, 0, 744, 528, 745, 531, 532, 0,
	0, 533, 0, 534, 0, 0, 536, 537, 538, 0,
	0, 539, 540, 746, 1340, 541, 1341, 747, 542, 543,
	535, 544, 545, 546, 547, 548, 549, 550, 551, 552,
	553, 0, 554, 555, 748, 556, 557, 558, 749, 559,
	560, 561, 750, 562, 751, 563, 564, 0, 565, 566,
	567, 0, 568, 569, 570, 571, 572, 573, 574, 575,
	752, 576, 577, 579, 578, 580, 0, 581, 0, 582,
	583, 584, 0, 0, 0, 0, 0, 585, 586, 588,
	0, 589, 590, 591, 592, 587, 593, 594, 595, 596,
	597, 598, 0, 600, 601, 599, 602, 603, 1342, 604,
	605, 606, 607, 608, 753, 609, 0, 610, 611, 618,
	619, 620, 612, 613, 614, 621, 622, 623, 624, 625,
	626, 0, 628, 629, 627, 630, 631, 632, 0, 633,
	754, 634, 615, 616, 635, 636, 1343, 637, 638, 639,
	640, 641, 642, 643, 755, 0, 644, 0, 645, 646,
	647, 648, 649, 650, 652, 617, 653, 658, 659, 756,
	654, 655, 656, 657, 757, 661, 662, 663, 664, 0,
	665, 666, 0, 660, 651, 0, 667, 668, 669, 670,
	671, 672, 0, 673, 674, 0, 675, 758, 759, 760,
	761, 0, 687, 0, 676, 678, 679, 680, 681, 762,
	682, 763, 0, 683, 684, 685, 686, 677, 688, 689,
	0, 0, 690, 691, 693, 695, 696, 692, 694, 697,
	0, 698, 0, 0, 699, 700, 701, 764, 765, 766,
	0, 703, 702, 704, 705, 706, 767, 707, 708, 709,
	0, 0, 0, 0, 710, 711, 768, 712, 713, 714,
	1671, 1670, 0, 0, 0, 0, 1668, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 306, 307, 309,
	308, 310, 311, 312, 313, 0, 314, 315, 0, 0,
	0, 0, 4026, 715, 0, 0, 0, 316, 0, 317,
	318, 319, 1327, 320, 321, 322, 323, 324, 325, 326,
	716, 717, 0, 327, 718, 328, 719, 0, 720, 329,
	330, 331, 332, 333, 334, 335, 0, 0, 0, 336,
	721, 722, 723, 0, 337, 338, 724, 0, 1635, 0,
	339, 340, 341, 342, 343, 344, 345, 346, 0, 0,
	348, 349, 350, 347, 351, 0, 352, 0, 353, 354,
	355, 356, 357, 358, 359, 0, 360, 361, 362, 1328,
	363, 364, 365, 0, 0, 0, 0, 0, 0, 0,
	366, 367, 368, 369, 370, 0, 371, 373, 725, 726,
	0, 376, 378, 372, 374, 0, 377, 375, 379, 0,
	380, 381, 382, 0, 0, 383, 384, 385, 0, 386,
	387, 388, 0, 389, 390, 391, 0, 392, 393, 727,
	394, 395, 396, 398, 400, 397, 399, 401, 402, 403,
	404, 405, 728, 729, 406, 0, 303, 0, 0, 0,
	0, 0, 407, 408, 409, 730, 0, 0, 0, 410,
	0, 411, 412, 413, 0, 414, 415, 0, 1329, 416,
	417, 418, 731, 732, 419, 420, 421, 422, 423, 424,
	425, 426, 427, 0, 428, 733, 0, 734, 429, 0,
	430, 431, 432, 433, 434, 435, 436, 735, 736, 737,
	529, 1331, 437, 438, 439, 0, 440, 441, 442, 443,
	444, 0, 0, 0, 0, 445, 446, 447, 0, 1330,
	738, 448, 530, 449, 739, 740, 0, 741, 0, 450,
	451, 453, 1332, 742, 1333, 452, 454, 455, 1334, 456,
	0, 0, 0, 457, 458, 459, 460, 461, 462, 0,
	463, 465, 464, 0, 467, 743, 466, 1335, 468, 469,
	1336, 0, 470, 471, 472, 473, 474, 475, 478, 0,
	0, 476, 477, 479, 480, 0, 481, 482, 484, 487,
	483, 485, 486, 488, 501, 502, 489, 490, 491, 492,
	493, 494, 495, 496, 497, 498, 499, 500, 504, 0,
	503, 1337, 505, 506, 507, 508, 509, 516, 518, 519,
	514, 515, 517, 520, 521, 523, 511, 512, 513, 1338,
	522, 510, 0, 0, 1339, 524, 525, 526, 527, 0,
	744, 528, 745, 531, 532, 0, 0, 533, 0, 534,
	0, 0, 536, 537, 538, 0, 0, 539, 540, 746,
	1340, 541, 1341, 747, 542, 543, 535, 544, 545, 546,
	547, 548, 549, 550, 551, 552, 553, 0, 554, 555,
	748, 556, 557, 558, 749, 559, 560, 561, 750, 562,
	751, 563, 564, 0, 565, 566, 567, 0, 568, 569,
	570, 571, 572, 573, 574, 575, 752, 576, 577, 579,
	578, 580, 0, 581, 0, 582, 583, 584, 0, 0,
	0, 0, 0, 585, 586, 588, 0, 589, 590, 591,
	2572, 587, 593, 594, 595, 596, 597, 598, 0, 600,
	601, 599, 602, 603, 1342, 604, 605, 606, 607, 608,
	753, 609, 0, 610, 611, 618, 619, 620, 612, 613,
	614, 621, 622, 623, 624, 625, 626, 0, 628, 629,
	627, 630, 631, 632, 0, 633, 754, 634, 615, 616,
	635, 636, 1343, 637, 638, 639, 640, 641, 642, 643,
	755, 0, 644, 0, 645, 646, 647, 648, 649, 650,
	652, 617, 653, 658, 659, 756, 654, 655, 656, 657,
	757, 661, 662, 663, 664, 0, 665, 666, 0, 660,
	651, 0, 667, 668, 669, 670, 671, 672, 0, 673,
	674, 0, 675, 758, 759, 760, 761, 0, 687, 0,
	676, 678, 679, 680, 681, 762, 682, 763, 0, 683,
	684, 685, 686, 677, 688, 689, 0, 0, 690, 691,
	693, 695, 696, 692, 694, 697, 0, 698, 0, 0,
	699, 700, 701, 764, 765, 766, 0, 703, 702, 704,
	705, 706, 767, 707, 708, 709, 0, 0, 0, 0,
	710, 711, 768, 712, 713, 714, 1671, 2477, 0, 0,
	0, 0, 2478, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 306, 307, 309, 308, 310, 311, 312,
	313, 0, 314, 315, 0, 0, 0, 0, 1821, 715,
	0, 0, 0, 316, 0, 317, 318, 319, 1327, 320,
	321, 322, 323, 324, 325, 326, 716, 717, 0, 327,
	718, 328, 719, 0, 720, 329, 330, 331, 332, 333,
	334, 335, 0, 0, 0, 336, 721, 722, 723, 0,
	337, 338, 724, 0, 1635, 0, 339, 340, 341, 342,
	343, 344, 345, 346, 0, 0, 348, 349, 350, 347,
	351, 0, 352, 0, 353, 354, 355, 356, 357, 358,
	359, 0, 360, 361, 362, 1328, 363, 364, 365, 0,
	0, 0, 0, 0, 0, 0, 366, 367, 368, 369,
	370, 0, 371, 373, 725, 726, 0, 376, 378, 372,
	374, 0, 377, 375, 379, 0, 380, 381, 382, 0,
	0, 383, 384, 385, 0, 386, 387, 388, 0, 389,
	390, 391, 0, 392, 393, 727, 394, 395, 396, 398,
	400, 397, 399, 401, 402, 403, 404, 405, 728, 729,
	406, 0, 303, 0, 0, 0, 0, 0, 407, 408,
	409, 730, 0, 0, 0, 410, 0, 411, 412, 413,
	0, 414, 415, 0, 1329, 416, 417, 418, 731, 732,
	419, 420, 421, 422, 423, 424, 425, 426, 427, 0,
	428, 733, 0, 734, 429, 0, 430, 431, 432, 433,
	434, 435, 436, 735, 736, 737, 529, 1331, 437, 438,
	439, 0, 440, 441, 442, 443, 444, 0, 0, 0,
	0, 445, 446, 447, 0, 1330, 738, 448, 530, 449,
	739, 740, 0, 741, 0, 450, 451, 453, 1332, 742,
	1333, 452, 454, 455, 1334, 456, 0, 0, 0, 457,
	458, 459, 460, 461, 462, 0, 2476, 465, 464, 0,
	467, 743, 466, 1335, 468, 469, 1336, 0, 470, 471,
	472, 473, 474, 475, 478, 0, 0, 476, 477, 479,
	480, 0, 481, 482, 484, 487, 483, 485, 486, 488,
	501, 502, 489, 490, 491, 492, 493, 494, 495, 496,
	497, 498, 499, 500, 504, 0, 503, 1337, 505, 506,
	507, 508, 509, 516, 518, 519, 514, 515, 517, 520,
	521, 523, 511, 512, 513, 1338, 522, 510, 0, 0,
	1339, 524, 525, 526, 527, 0, 744, 528, 745, 531,
	532, 0, 0, 533, 0, 534, 0, 0, 536, 537,
	538, 0, 0, 539, 540, 746, 1340, 541, 1341, 747,
	542, 543, 535, 544, 545, 546, 547, 548, 549, 550,
	551, 552, 553, 0, 554, 555, 748, 556, 557, 558,
	749, 559, 560, 561, 750, 562, 751, 563, 564, 0,
	565, 566, 567, 0, 568, 569, 570, 571, 572, 573,
	574, 575, 752, 576, 577, 579, 578, 580, 0, 581,
	0, 582, 583, 584, 0, 0, 0, 0, 0, 585,
	586, 588, 0, 589, 590, 591, 592, 587, 593, 594,
	595, 596, 597, 598, 0, 600, 601, 599, 602, 603,
	1342, 604, 605, 606, 607, 608, 753, 609, 0, 610,
	611, 618, 619, 620, 612, 613, 614, 621, 622, 623,
	624, 625, 626, 0, 628, 629, 627, 630, 631, 632,
	0, 633, 754, 634, 615, 616, 635, 636, 1343, 637,
	638, 639, 640, 641, 642, 643, 755, 0, 644, 0,
	645, 646, 647, 648, 649, 650, 652, 617, 653, 658,
	659, 756, 654, 655, 656, 657, 757, 661, 662, 663,
	664, 0, 665, 666, 0, 660, 651, 0, 667, 668,
	669, 670, 671, 672, 0, 673, 674, 0, 675, 758,
	759, 760, 761, 0, 687, 0, 676, 678, 679, 680,
	681, 762, 682, 763, 0, 683, 684, 685, 686, 677,
	688, 689, 0, 0, 690, 691, 693, 695, 696, 692,
	694, 697, 0, 698, 0, 0, 699, 700, 701, 764,
	765, 766, 0, 703, 702, 704, 705, 706, 767, 707,
	708, 709, 0, 0, 0, 0, 710, 711, 768, 712,
	713, 714, 1671, 1670, 0, 0, 0, 0, 1668, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 306,
	307, 309, 308, 310, 311, 312, 313, 0, 314, 315,
	0, 0, 0, 0, 1821, 715, 0, 0, 0, 316,
	0, 317, 318, 319, 1327, 320, 321, 322, 323, 324,
	325, 326, 716, 717, 0, 327, 718, 328, 719, 0,
	720, 329, 330, 331, 332, 333, 334, 335, 0, 0,
	0, 336, 721, 722, 723, 0, 337, 338, 724, 0,
	1635, 0, 339, 340, 341, 342, 343, 344, 345, 346,
	0, 0, 348, 349, 350, 347, 351, 0, 352, 0,
	353, 354, 355, 356, 357, 358, 359, 0, 360, 361,
	362, 1328, 363, 364, 365, 0, 0, 0, 0, 0,
	0, 0, 366, 367, 368, 369, 370, 0, 371, 373,
	725, 726, 0, 376, 378, 372, 374, 0, 377, 375,
	379, 0, 380, 381, 382, 0, 0, 383, 384, 385,
	0, 386, 387, 388, 0, 389, 390, 391, 0, 392,
	393, 727, 394, 395, 396, 398, 400, 397, 399, 401,
	402, 403, 404, 405, 728, 729, 406, 0, 303, 0,
	0, 0, 0, 0, 407, 408, 409, 730, 0, 0,
	0, 410, 0, 411, 412, 413, 0, 414, 415, 0,
	1329, 416, 417, 418, 731, 732, 419, 420, 421, 422,
	423, 424, 425, 426, 427, 0, 428, 733, 0, 734,
	429, 0, 430, 431, 432, 433, 434, 435, 436, 735,
	736, 737, 529, 1331, 437, 438, 439, 0, 440, 441,
	442, 443, 444, 0, 0, 0, 0, 445, 446, 447,
	0, 1330, 738, 448, 530, 449, 739, 740, 0, 741,
	0, 450, 451, 453, 1332, 742, 1333, 452, 454, 455,
	1334, 456, 0, 0, 0, 457, 458, 459, 460, 461,
	462, 0, 463, 465, 464, 0, 467, 743, 466, 1335,
	468, 469, 1336, 0, 470, 471, 472, 473, 474, 475,
	478, 0, 0, 476, 477, 479, 480, 0, 481, 482,
	484, 487, 483, 485, 486, 488, 501, 502, 489, 490,
	491, 492, 493, 494, 495, 496, 497, 498, 499, 500,
	504, 0, 503, 1337, 505, 506, 507, 508, 509, 516,
	518, 519, 514, 515, 517, 520, 521, 523, 511, 512,
	513, 1338, 522, 510, 0, 0, 1339, 524, 525, 526,
	527, 0, 744, 528, 745, 531, 532, 0, 0, 533,
	0, 534, 0, 0, 536, 537, 538, 0, 0, 539,
	540, 746, 1340, 541, 1341, 747, 542, 543, 535, 544,
	545, 546, 547, 548, 549, 550, 551, 552, 553, 0,
	554, 555, 748, 556, 557, 558, 749, 559, 560, 561,
	750, 562, 751, 563, 564, 0, 565, 566, 567, 0,
	568, 569, 570, 571, 572, 573, 574, 575, 752, 576,
	577, 579, 578, 580, 0, 581, 0, 582, 583, 584,
	0, 0, 0, 0, 0, 585, 586, 588, 0, 589,
	590, 591, 592, 587, 593, 594, 595, 596, 597, 598,
	0, 600, 601, 599, 602, 603, 1342, 604, 605, 606,
	607, 608, 753, 609, 0, 610, 611, 618, 619, 620,
	612, 613, 614, 621, 622, 623, 624, 625, 626, 0,
	628, 629, 627, 630, 631, 632, 0, 633, 754, 634,
	615, 616, 635, 636, 1343, 637, 638, 639, 640, 641,
	642, 643, 755, 0, 644, 0, 645, 646, 647, 648,
	649, 650, 652, 617, 653, 658, 659, 756, 654, 655,
	656, 657, 757, 661, 662, 663, 664, 0, 665, 666,
	0, 660, 651, 0, 667, 668, 669, 670, 671, 672,
	0, 673, 674, 0, 675, 758, 759, 760, 761, 0,
	687, 0, 676, 678, 679, 680, 681, 762, 682, 763,
	0, 683, 684, 685, 686, 677, 688, 689, 0, 0,
	690, 691, 693, 695, 696, 692, 694, 697, 0, 698,
	0, 0, 699, 700, 701, 764, 765, 766, 0, 703,
	702, 704, 705, 706, 767, 707, 708, 709, 0, 0,
	0, 0, 710, 711, 768, 712, 713, 714, 1205, 0,
	300, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 306, 307, 309,
	308, 310, 311, 312, 313, 0, 314, 315, 0, 0,
	1803, 0, 0, 715, 0, 0, 0, 316, 0, 317,
	318, 319, 0, 320, 321, 322, 323, 324, 325, 326,
	716, 717, 0, 327, 718, 328, 719, 0, 720, 329,
	330, 331, 332, 333, 334, 335, 0, 0, 0, 336,
	721, 722, 723, 0, 337, 338, 724, 0, 0, 0,
	339, 340, 341, 342, 343, 344, 345, 346, 0, 0,
	348, 349, 350, 347, 351, 0, 352, 0, 353, 354,
	355, 356, 357, 358, 359, 0, 360, 361, 362, 0,
	363, 364, 365, 0, 0, 0, 0, 0, 0, 0,
	366, 367, 368, 369, 370, 0, 371, 373, 725, 726,
	0, 376, 378, 372, 374, 0, 377, 375, 379, 0,
	380, 381, 382, 0, 0, 383, 384, 385, 0, 386,
	387, 388, 0, 389, 390, 391, 0, 392, 393, 727,
	394, 395, 396, 398, 400, 397, 399, 401, 402, 403,
	404, 405, 728, 729, 406, 0, 0, 0, 0, 0,
	0, 0, 407, 408, 409, 730, 0, 0, 0, 410,
	0, 411, 412, 413, 0, 414, 415, 0, 0, 416,
	417, 418, 731, 732, 419, 420, 421, 422, 423, 424,
	425, 426, 427, 0, 428, 733, 0, 734, 429, 0,
	430, 431, 432, 433, 434, 435, 436, 735, 736, 737,
	529, 0, 437, 438, 439, 0, 440, 441, 442, 443,
	444, 0, 0, 0, 0, 445, 446, 447, 0, 0,
	738, 448, 530, 449, 739, 740, 0, 741, 0, 450,
	451, 453, 0, 742, 0, 452, 454, 455, 0, 456,
	0, 0, 0, 457, 458, 459, 460, 461, 462, 0,
	463, 465, 464, 0, 467, 743, 466, 0, 468, 469,
	0, 0, 470, 471, 472, 473, 474, 475, 478, 0,
	0, 476, 477, 479, 480, 0, 481, 482, 484, 487,
	483, 485, 486, 488, 501, 502, 489, 490, 491, 492,
	493, 494, 495, 496, 497, 498, 499, 500, 504, 0,
	503, 0, 505, 506, 507, 508, 509, 516, 518, 519,
	514, 515, 517, 520, 521, 523, 511, 512, 513, 0,
	522, 510, 0, 0, 0, 524, 525, 526, 527, 0,
	744, 528, 745, 531, 532, 0, 0, 533, 0, 534,
	0, 0, 536, 537, 538, 0, 0, 539, 540, 746,
	0, 541, 0, 747, 542, 543, 535, 544, 545, 546,
	547, 548, 549, 550, 551, 552, 553, 0, 554, 555,
	748, 556, 557, 558, 749, 559, 560, 561, 750, 562,
	751, 563, 564, 0, 565, 566, 567, 0, 568, 569,
	570, 571, 572, 573, 574, 575, 752, 576, 577, 579,
	578, 580, 0, 581, 0, 582, 583, 584, 0, 0,
	0, 0, 0, 585, 586, 588, 0, 589, 590, 591,
	592, 587, 593, 594, 595, 596, 597, 598, 0, 600,
	601, 599, 602, 603, 0, 604, 605, 606, 607, 608,
	753, 609, 0, 610, 611, 618, 619, 620, 612, 613,
	614, 621, 622, 623, 624, 625, 626, 259, 628, 629,
	627, 630, 631, 632, 0, 633, 754, 634, 615, 616,
	635, 636, 0, 637, 638, 639, 640, 641, 642, 643,
	755, 0, 644, 0, 645, 646, 647, 648, 649, 650,
	652, 617, 653, 658, 659, 756, 654, 655, 656, 657,
	757, 661, 662, 663, 664, 0, 665, 666, 0, 660,
	651, 261, 667, 668, 669, 670, 671, 672, 0, 673,
	674, 0, 675, 758, 759, 760, 761, 0, 687, 0,
	676, 678, 679, 680, 681, 762, 682, 763, 0, 683,
	684, 685, 686, 677, 688, 689, 0, 0, 690, 691,
	693, 695, 696, 692, 694, 697, 0, 698, 0, 0,
	699, 700, 701, 1797, 765, 766, 0, 703, 702, 704,
	705, 706, 767, 707, 708, 709, 300, 0, 0, 253,
	710, 711, 768, 712, 713, 714, 0, 0, 254, 0,
	0, 0, 0, 306, 307, 309, 308, 310, 311, 312,
	313, 0, 314, 315, 0, 0, 0, 0, 0, 715,
	0, 0, 0, 316, 0, 317, 318, 319, 209, 320,
	321, 322, 323, 324, 325, 326, 716, 717, 0, 327,
	718, 328, 719, 0, 720, 329, 330, 331, 332, 333,
	334, 335, 0, 0, 0, 336, 721, 722, 723, 0,
	337, 338, 724, 0, 0, 0, 339, 340, 341, 342,
	343, 344, 345, 346, 0, 0, 348, 349, 350, 347,
	351, 0, 352, 0, 353, 354, 355, 356, 357, 358,
	359, 0, 360, 361, 362, 0, 363, 364, 365, 0,
	0, 0, 0, 0, 0, 0, 366, 367, 368, 369,
	370, 0, 371, 373, 725, 726, 0, 376, 378, 372,
	374, 0, 377, 375, 379, 0, 380, 381, 382, 0,
	0, 383, 384, 385, 0, 386, 387, 388, 0, 389,
	390, 391, 0, 392, 393, 727, 394, 395, 396, 398,
	400, 397, 399, 401, 402, 403, 404, 405, 728, 729,
	406, 0, 303, 0, 0, 0, 0, 0, 407, 408,
	409, 730, 0, 0, 0, 410, 0, 411, 412, 413,
	0, 414, 415, 0, 0, 416, 417, 418, 731, 732,
	419, 420, 421, 422, 423, 424, 425, 426, 427, 0,
	428, 733, 0, 734, 429, 0, 430, 431, 432, 433,
	434, 435, 436, 735, 736, 737, 529, 0, 437, 438,
	439, 0, 440, 441, 442, 443, 444, 0, 0, 0,
	304, 445, 446, 447, 0, 0, 738, 448, 530, 449,
	739, 740, 0, 741, 0, 450, 451, 453, 0, 742,
	0, 452, 454, 455, 0, 456, 0, 0, 0, 457,
	458, 459, 460, 461, 462, 0, 463, 465, 464, 0,
	467, 743, 466, 0, 468, 469, 0, 0, 470, 471,
	472, 473, 474, 475, 478, 0, 0, 476, 477, 479,
	480, 0, 481, 482, 484, 487, 483, 485, 486, 488,
	501, 502, 489, 490, 491, 492, 493, 494, 495, 496,
	497, 498, 499, 500, 504, 0, 503, 0, 505, 506,
	507, 508, 509, 516, 518, 519, 514, 515, 517, 520,
	521, 523, 511, 512, 513, 0, 522, 510, 0, 305,
	0, 524, 525, 526, 527, 0, 744, 528, 745, 531,
	532, 0, 0, 533, 0, 534, 0, 0, 536, 537,
	538, 0, 0, 539, 540, 746, 0, 541, 0, 747,
	542, 543, 535, 544, 545, 546, 547, 548, 549, 550,
	551, 552, 553, 0, 554, 555, 748, 556, 557, 558,
	749, 559, 560, 561, 750, 562, 751, 563, 564, 0,
	565, 566, 567, 0, 568, 569, 570, 571, 572, 573,
	574, 575, 752, 576, 577, 579, 578, 580, 0, 581,
	0, 582, 583, 584, 0, 0, 0, 0, 0, 585,
	586, 588, 0, 589, 590, 591, 592, 587, 593, 594,
	595, 596, 597, 598, 0, 600, 601, 599, 602, 603,
	0, 604, 605, 606, 607, 608, 753, 609, 0, 610,
	611, 618, 619, 620, 612, 613, 614, 621, 622, 623,
	624, 625, 626, 0, 628, 629, 627, 630, 631, 632,
	0, 633, 754, 634, 615, 616, 635, 636, 0, 637,
	638, 639, 640, 641, 642, 643, 755, 0, 644, 0,
	645, 646, 647, 648, 649, 650, 652, 617, 653, 658,
	659, 756, 654, 655, 656, 657, 757, 661, 662, 663,
	664, 0, 665, 666, 0, 660, 651, 0, 667, 668,
	669, 670, 671, 672, 0, 673, 674, 0, 675, 758,
	759, 760, 761, 0, 687, 0, 676, 678, 679, 680,
	681, 762, 682, 763, 0, 683, 684, 685, 686, 677,
	688, 689, 0, 0, 690, 691, 693, 695, 696, 692,
	694, 697, 0, 698, 0, 0, 699, 700, 701, 764,
	765, 766, 0, 703, 702, 704, 705, 706, 767, 707,
	708, 709, 300, 3278, 0, 0, 710, 711, 768, 712,
	713, 714, 0, 0, 0, 0, 0, 0, 0, 306,
	307, 309, 308, 310, 311, 312, 313, 0, 314, 315,
	0, 0, 0, 0, 0, 715, 0, 0, 0, 316,
	0, 317, 318, 319, 2174, 320, 321, 322, 323, 324,
	325, 326, 716, 717, 0, 327, 718, 328, 719, 0,
	720, 329, 330, 331, 332, 333, 334, 335, 0, 0,
	0, 336, 721, 722, 723, 0, 337, 338, 724, 0,
	0, 0, 339, 340, 341, 342, 343, 344, 345, 346,
	0, 0, 348, 349, 350, 347, 351, 0, 352, 0,
	353, 354, 355, 356, 357, 358, 359, 0, 360, 361,
	362, 0, 363, 364, 365, 0, 0, 0, 0, 0,
	0, 0, 366, 367, 368, 369, 370, 0, 371, 373,
	725, 726, 0, 376, 378, 372, 374, 0, 377, 375,
	379, 0, 380, 381, 382, 0, 0, 383, 384, 385,
	0, 386, 387, 388, 0, 389, 390, 391, 0, 392,
	393, 727, 394, 395, 396, 398, 400, 397, 399, 401,
	402, 403, 404, 405, 728, 729, 406, 0, 0, 0,
	0, 0, 0, 0, 407, 408, 409, 730, 0, 0,
	0, 410, 0, 411, 412, 413, 0, 414, 415, 0,
	0, 416, 417, 418, 731, 732, 419, 420, 421, 422,
	423, 424, 425, 426, 427, 0, 428, 733, 0, 734,
	429, 0, 430, 431, 432, 433, 434, 435, 436, 735,
	736, 737, 529, 0, 437, 438, 439, 0, 440, 441,
	442, 443, 444, 0, 0, 0, 0, 445, 446, 447,
	0, 0, 738, 448, 530, 449, 739, 740, 0, 741,
	0, 450, 451, 453, 0, 742, 0, 452, 454, 455,
	0, 456, 0, 0, 0, 457, 458, 459, 460, 461,
	462, 0, 463, 465, 464, 0, 467, 743, 466, 0,
	468, 469, 0, 0, 470, 471, 472, 473, 474, 475,
	478, 0, 0, 476, 477, 479, 480, 0, 481, 482,
	484, 487, 483, 485, 486, 488, 501, 502, 489, 490,
	491, 492, 493, 494, 495, 496, 497, 498, 499, 500,
	504, 0, 503, 0, 505, 506, 507, 508, 509, 516,
	518, 519, 514, 515, 517, 520, 521, 523, 511, 512,
	513, 0, 522, 510, 0, 0, 0, 524, 525, 526,
	527, 0, 744, 528, 745, 531, 532, 0, 0, 533,
	0, 534, 0, 0, 536, 537, 538, 0, 0, 539,
	540, 746, 0, 541, 0, 747, 542, 543, 535, 544,
	545, 546, 547, 548, 549, 550, 551, 552, 553, 0,
	554, 555, 748, 556, 557, 558, 749, 559, 560, 561,
	750, 562, 751, 563, 564, 0, 565, 566, 567, 0,
	568, 569, 570, 571, 572, 573, 574, 575, 752, 576,
	577, 579, 578, 580, 0, 581, 0, 582, 583, 584,
	0, 0, 0, 0, 0, 585, 586, 588, 0, 589,
	590, 591, 592, 587, 593, 594, 595, 596, 597, 598,
	0, 600, 601, 599, 602, 603, 0, 604, 605, 606,
	607, 608, 753, 609, 0, 610, 611, 618, 619, 620,
	612, 613, 614, 621, 622, 623, 624, 625, 626, 0,
	628, 629, 627, 630, 631, 632, 0, 633, 754, 634,
	615, 616, 635, 636, 0, 637, 638, 639, 640, 641,
	642, 643, 755, 0, 644, 0, 645, 646, 647, 648,
	649, 650, 652, 617, 653, 658, 659, 756, 654, 655,
	656, 657, 757, 661, 662, 663, 664, 0, 665, 666,
	0, 660, 651, 0, 667, 668, 669, 670, 671, 672,
	0, 673, 674, 0, 675, 758, 759, 760, 761, 0,
	687, 0, 676, 678, 679, 680, 681, 762, 682, 763,
	0, 683, 684, 685, 686, 677, 688, 689, 0, 0,
	690, 691, 693, 695, 696, 692, 694, 697, 0, 698,
	0, 0, 699, 700, 701, 764, 765, 766, 0, 703,
	702, 704, 705, 706, 767, 707, 708, 709, 300, 0,
	0, 0, 710, 711, 768, 712, 713, 714, 0, 0,
	0, 0, 0, 0, 0, 306, 307, 309, 308, 310,
	311, 312, 313, 0, 314, 315, 0, 0, 0, 0,
	0, 715, 0, 0, 0, 316, 0, 317, 318, 319,
	5470, 320, 321, 322, 323, 324, 325, 326, 716, 717,
	0, 327, 718, 328, 719, 0, 720, 329, 330, 331,
	332, 333, 334, 335, 0, 0, 0, 336, 721, 722,
	723, 0, 337, 338, 724, 0, 0, 0, 339, 340,
	341, 342, 343, 344, 345, 346, 0, 0, 348, 349,
	350, 347, 351, 0, 352, 0, 353, 354, 355, 356,
	357, 358, 359, 0, 360, 361, 362, 0, 363, 364,
	365, 0, 0, 0, 0, 0, 0, 0, 366, 367,
	368, 369, 370, 0, 371, 373, 725, 726, 0, 376,
	378, 372, 374, 0, 377, 375, 379, 0, 380, 381,
	382, 0, 0, 383, 384, 385, 0, 386, 387, 388,
	0, 389, 390, 391, 0, 392, 393, 727, 394, 395,
	396, 398, 400, 397, 399, 401, 402, 403, 404, 405,
	728, 729, 406, 0, 303, 0, 0, 0, 0, 0,
	407, 408, 409, 730, 0, 0, 0, 410, 0, 411,
	412, 413, 0, 414, 415, 0, 0, 416, 417, 418,
	731, 732, 419, 420, 421, 422, 423, 424, 425, 426,
	427, 0, 428, 733, 0, 734, 429, 0, 430, 431,
	432, 433, 434, 435, 436, 735, 736, 737, 529, 0,
	437, 438, 439, 0, 440, 441, 442, 443, 444, 0,
	0, 0, 304, 445, 446, 447, 0, 0, 738, 448,
	530, 449, 739, 740, 0, 741, 0, 450, 451, 453,
	0, 742, 0, 452, 454, 455, 0, 456, 0, 0,
	0, 457, 458, 459, 460, 461, 462, 0, 463, 465,
	464, 0, 467, 743, 466, 0, 468, 469, 0, 0,
	470, 471, 472, 473, 474, 475, 478, 0, 0, 476,
	477, 479, 480, 0, 481, 482, 484, 487, 483, 485,
	486, 488, 501, 502, 489, 490, 491, 492, 493, 494,
	495, 496, 497, 498, 499, 500, 504, 0, 503, 0,
	505, 506, 507, 508, 509, 516, 518, 519, 514, 515,
	517, 520, 521, 523, 511, 512, 513, 0, 522, 510,
	0, 305, 0, 524, 525, 526, 527, 0, 744, 528,
	745, 531, 532, 0, 0, 533, 0, 534, 0, 0,
	536, 537, 538, 0, 0, 539, 540, 746, 0, 541,
	0, 747, 542, 543, 535, 544, 545, 546, 547, 548,
	549, 550, 551, 552, 553, 0, 554, 555, 748, 556,
	557, 558, 749, 559, 560, 561, 750, 562, 751, 563,
	564, 0, 565, 566, 567, 0, 568, 569, 570, 571,
	572, 573, 574, 575, 752, 576, 577, 579, 578, 580,
	0, 581, 0, 582, 583, 584, 0, 0, 0, 0,
	0, 585, 586, 588, 0, 589, 590, 591, 592, 587,
	593, 594, 595, 596, 597, 598, 0, 600, 601, 599,
	602, 603, 0, 604, 605, 606, 607, 608, 753, 609,
	0, 610, 611, 618, 619, 620, 612, 613, 614, 621,
	622, 623, 624, 625, 626, 0, 628, 629, 627, 630,
	631, 632, 0, 633, 754, 634, 615, 616, 635, 636,
	0, 637, 638, 639, 640, 641, 642, 643, 755, 0,
	644, 0, 645, 646, 647, 648, 649, 650, 652, 617,
	653, 658, 659, 756, 654, 655, 656, 657, 757, 661,
	662, 663, 664, 0, 665, 666, 0, 660, 651, 0,
	667, 668, 669, 670, 671, 672, 0, 673, 674, 0,
	675, 758, 759, 760, 761, 0, 687, 0, 676, 678,
	679, 680, 681, 762, 682, 763, 0, 683, 684, 685,
	686, 677, 688, 689, 0, 0, 690, 691, 693, 695,
	696, 692, 694, 697, 0, 698, 0, 0, 699, 700,
	701, 764, 765, 766, 0, 703, 702, 704, 705, 706,
	767, 707, 708, 709, 0, 0, 300, 0, 710, 711,
	768, 712, 713, 714, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 306, 307, 309, 308, 310, 311, 312,
	313, 0, 314, 315, 0, 0, 0, 0, 0, 715,
	0, 0, 0, 316, 1791, 317, 318, 319, 0, 320,
	321, 322, 323, 324, 325, 326, 716, 717, 0, 327,
	718, 328, 719, 0, 720, 329, 330, 331, 332, 333,
	334, 335, 0, 0, 0, 336, 721, 722, 723, 0,
	337, 338, 724, 0, 0, 0, 339, 340, 341, 342,
	343, 344, 345, 346, 0, 0, 348, 349, 350, 347,
	351, 0, 352, 0, 353, 354, 355, 356, 357, 358,
	359, 0, 360, 361, 362, 0, 363, 364, 365, 0,
	0, 0, 0, 0, 0, 0, 366, 367, 368, 369,
	370, 0, 371, 373, 725, 726, 0, 376, 378, 372,
	374, 0, 377, 375, 379, 0, 380, 381, 382, 0,
	0, 383, 384, 385, 0, 386, 387, 388, 0, 389,
	390, 391, 0, 392, 393, 727, 394, 395, 396, 398,
	400, 397, 399, 401, 402, 403, 404, 405, 728, 729,
	406, 0, 303, 0, 0, 0, 0, 0, 407, 408,
	409, 730, 0, 0, 0, 410, 0, 411, 412, 413,
	0, 414, 415, 0, 0, 416, 417, 418, 731, 732,
	419, 420, 421, 422, 423, 424, 425, 426, 427, 0,
	428, 733, 0, 734, 429, 0, 430, 431, 432, 433,
	434, 435, 436, 735, 736, 737, 529, 0, 437, 438,
	439, 0, 440, 441, 442, 443, 444, 0, 0, 0,
	304, 445, 446, 447, 0, 0, 738, 448, 530, 449,
	739, 740, 0, 741, 0, 450, 451, 453, 0, 742,
	0, 452, 454, 455, 0, 456, 0, 0, 0, 457,
	458, 459, 460, 461, 462, 0, 463, 465, 464, 0,
	467, 743, 466, 0, 468, 469, 0, 0, 470, 471,
	472, 473, 474, 475, 478, 0, 0, 476, 477, 479,
	480, 0, 481, 482, 484, 487, 483, 485, 486, 488,
	501, 502, 489, 490, 491, 492, 493, 494, 495, 496,
	497, 498, 499, 500, 504, 0, 503, 0, 505, 506,
	507, 508, 509, 516, 518, 519, 514, 515, 517, 520,
	521, 523, 511, 512, 513, 0, 522, 510, 0, 305,
	0, 524, 525, 526, 527, 0, 744, 528, 745, 531,
	532, 0, 0, 533, 0, 534, 0, 0, 536, 537,
	538, 0, 0, 539, 540, 746, 0, 541, 0, 747,
	542, 543, 535, 544, 545, 546, 547, 548, 549, 550,
	551, 552, 553, 0, 554, 555, 748, 556, 557, 558,
	749, 559, 560, 561, 750, 562, 751, 563, 564, 0,
	565, 566, 567, 0, 568, 569, 570, 571, 572, 573,
	574, 575, 752, 576, 577, 579, 578, 580, 0, 581,
	0, 582, 583, 584, 0, 0, 0, 0, 0, 585,
	586, 588, 0, 589, 590, 591, 592, 587, 593, 594,
	595, 596, 597, 598, 0, 600, 601, 599, 602, 603,
	0, 604, 605, 606, 607, 608, 753, 609, 0, 610,
	611, 618, 619, 620, 612, 613, 614, 621, 622, 623,
	624, 625, 626, 0, 628, 629, 627, 630, 631, 632,
	0, 633, 754, 634, 615, 616, 635, 636, 0, 637,
	638, 639, 640, 641, 642, 643, 755, 0, 644, 0,
	645, 646, 647, 648, 649, 650, 652, 617, 653, 658,
	659, 756, 654, 655, 656, 657, 757, 661, 662, 663,
	664, 0, 665, 666, 0, 660, 651, 0, 667, 668,
	669, 670, 671, 672, 0, 673, 674, 0, 675, 758,
	759, 760, 761, 0, 687, 0, 676, 678, 679, 680,
	681, 762, 682, 763, 0, 683, 684, 685, 686, 677,
	688, 689, 0, 0, 690, 691, 693, 695, 696, 692,
	694, 697, 0, 698, 0, 0, 699, 700, 701, 764,
	765, 766, 0, 703, 702, 704, 705, 706, 767, 707,
	708, 709, 0, 0, 300, 0, 710, 711, 768, 712,
	713, 714, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 306, 307, 309, 308, 310, 311, 312, 313, 0,
	314, 315, 0, 0, 0, 0, 0, 715, 0, 0,
	0, 316, 3977, 317, 318, 319, 0, 320, 321, 322,
	323, 324, 325, 326, 716, 717, 0, 327, 718, 328,
	719, 0, 720, 329, 330, 331, 332, 333, 334, 335,
	0, 0, 0, 336, 721, 722, 723, 0, 337, 338,
	724, 0, 0, 0, 339, 340, 341, 342, 343, 344,
	345, 346, 0, 0, 348, 349, 350, 347, 351, 0,
	352, 0, 353, 354, 355, 356, 357, 358, 359, 0,
	360, 361, 362, 0, 363, 364, 365, 0, 0, 0,
	0, 0, 0, 0, 366, 367, 368, 369, 370, 0,
	371, 373, 725, 726, 0, 376, 378, 372, 374, 0,
	377, 375, 379, 0, 380, 381, 382, 0, 0, 383,
	384, 385, 0, 386, 387, 388, 0, 389, 390, 391,
	0, 392, 393, 727, 394, 395, 396, 398, 400, 397,
	399, 401, 402, 403, 404, 405, 728, 729, 406, 0,
	0, 0, 0, 0, 0, 0, 407, 408, 409, 730,
	0, 0, 0, 410, 0, 411, 412, 413, 0, 414,
	415, 0, 0, 416, 417, 418, 731, 732, 419, 420,
	421, 422, 423, 424, 425, 426, 427, 0, 428, 733,
	0, 734, 429, 0, 430, 431, 432, 433, 434, 435,
	436, 735, 736, 737, 529, 0, 437, 438, 439, 0,
	440, 441, 442, 443, 444, 0, 0, 0, 0, 445,
	446, 447, 0, 0, 738, 448, 530, 449, 739, 740,
	0, 741, 0, 450, 451, 453, 0, 742, 0, 452,
	454, 455, 0, 456, 0, 0, 0, 457, 458, 459,
	460, 461, 462, 0, 463, 465, 464, 0, 467, 743,
	466, 0, 468, 469, 0, 0, 470, 471, 472, 473,
	474, 475, 478, 0, 0, 476, 477, 479, 480, 0,
	481, 482, 484, 487, 483, 485, 486, 488, 501, 502,
	489, 490, 491, 492, 493, 494, 495, 496, 497, 498,
	499, 500, 504, 0, 503, 0, 505, 506, 507, 508,
	509, 516, 518, 519, 514, 515, 517, 520, 521, 523,
	511, 512, 513, 0, 522, 510, 0, 0, 0, 524,
	525, 526, 527, 0, 744, 528, 745, 531, 532, 0,
	0, 533, 0, 534, 0, 0, 536, 537, 538, 0,
	0, 539, 540, 746, 0, 541, 0, 747, 542, 543,
	535, 544, 545, 546, 547, 548, 549, 550, 551, 552,
	553, 0, 554, 555, 748, 556, 557, 558, 749, 559,
	560, 561, 750, 562, 751, 563, 564, 0, 565, 566,
	567, 0, 568, 569, 570, 571, 572, 573, 574, 575,
	752, 576, 577, 579, 578, 580, 0, 581, 0, 582,
	583, 584, 0, 0, 0, 0, 0, 585, 586, 588,
	0, 589, 590, 591, 592, 587, 593, 594, 595, 596,
	597, 598, 0, 600, 601, 599, 602, 603, 0, 604,
	605, 606, 607, 608, 753, 609, 0, 610, 611, 618,
	619, 620, 612, 613, 614, 621, 622, 623, 624, 625,
	626, 0, 628, 629, 627, 630, 631, 632, 0, 633,
	754, 634, 615, 616, 635, 636, 0, 637, 638, 639,
	640, 641, 642, 643, 755, 0, 644, 0, 645, 646,
	647, 648, 649, 650, 652, 617, 653, 658, 659, 756,
	654, 655, 656, 657, 757, 661, 662, 663, 664, 0,
	665, 666, 0, 660, 651, 0, 667, 668, 669, 670,
	671, 672, 0, 673, 674, 0, 675, 758, 759, 760,
	761, 0, 687, 0, 676, 678, 679, 680, 681, 762,
	682, 763, 0, 683, 684, 685, 686, 677, 688, 689,
	0, 0, 690, 691, 693, 695, 696, 692, 694, 697,
	0, 698, 0, 0, 699, 700, 701, 764, 765, 766,
	0, 703, 702, 704, 705, 706, 767, 707, 708, 709,
	0, 0, 0, 0, 710, 711, 768, 712, 713, 714,
	3952, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 306, 307, 309,
	308, 310, 311, 312, 313, 0, 314, 315, 0, 0,
	0, 0, 3401, 0, 0, 0, 0, 316, 0, 317,
	318, 319, 1327, 320, 321, 322, 323, 324, 325, 326,
	0, 2232, 0, 327, 2222, 328, 2238, 0, 2245, 329,
	330, 331, 332, 333, 334, 335, 0, 0, 0, 336,
	2248, 2249, 0, 0, 337, 338, 0, 0, 1635, 0,
	339, 340, 341, 342, 343, 344, 345, 346, 0, 0,
	348, 349, 350, 347, 351, 0, 352, 0, 353, 354,
	355, 356, 357, 358, 359, 0, 360, 361, 362, 1328,
	363, 364, 365, 0, 0, 0, 0, 0, 0, 0,
	366, 367, 368, 369, 370, 1310, 371, 373, 2236, 2235,
	0, 376, 378, 372, 374, 0, 377, 375, 379, 0,
	380, 381, 382, 0, 0, 383, 1295, 385, 0, 386,
	387, 388, 0, 389, 390, 391, 0, 392, 393, 0,
	394, 395, 396, 398, 400, 397, 399, 401, 402, 403,
	404, 405, 0, 0, 406, 0, 303, 0, 0, 0,
	0, 0, 407, 408, 409, 2234, 0, 0, 0, 410,
	0, 411, 412, 413, 0, 414, 415, 0, 1329, 416,
	417, 418, 2243, 2244, 419, 420, 421, 422, 423, 424,
	425, 426, 427, 0, 428, 0, 0, 0, 429, 0,
	430, 431, 432, 433, 434, 435, 436, 0, 0, 0,
	529, 1331, 437, 438, 439, 3946, 440, 441, 442, 443,
	444, 0, 0, 0, 0, 445, 446, 447, 0, 1330,
	3948, 448, 530, 449, 2229, 2230, 0, 2225, 0, 450,
	451, 453, 1332, 0, 1333, 452, 454, 455, 1334, 456,
	0, 0, 0, 457, 458, 459, 460, 461, 462, 0,
	463, 465, 464, 0, 467, 0, 466, 1335, 468, 469,
	1336, 0, 470, 471, 472, 473, 474, 475, 478, 0,
	0, 476, 477, 479, 480, 0, 481, 482, 484, 487,
	483, 485, 486, 488, 501, 502, 489, 490, 491, 492,
	493, 494, 495, 496, 497, 498, 499, 500, 504, 0,
	503, 1337, 505, 506, 507, 508, 509, 516, 518, 519,
	514, 515, 517, 520, 521, 523, 511, 512, 513, 1338,
	522, 510, 0, 0, 1339, 524, 525, 526, 527, 0,
	0, 528, 2237, 531, 532, 0, 0, 533, 0, 534,
	0, 0, 536, 537, 538, 0, 0, 539, 540, 3947,
	1340, 541, 1341, 0, 542, 543, 535, 544, 545, 546,
	547, 548, 549, 550, 551, 552, 553, 0, 554, 555,
	2219, 556, 557, 558, 2220, 559, 560, 561, 0, 562,
	0, 563, 564, 0, 565, 566, 567, 0, 568, 569,
	570, 571, 572, 573, 574, 575, 2233, 576, 577, 579,
	578, 580, 0, 581, 0, 582, 583, 584, 0, 0,
	0, 0, 0, 585, 586, 588, 0, 589, 590, 591,
	592, 587, 593, 594, 595, 596, 597, 598, 0, 600,
	601, 599, 602, 603, 1342, 604, 605, 606, 607, 608,
	0, 609, 0, 610, 611, 618, 619, 620, 612, 613,
	614, 621, 622, 623, 624, 625, 626, 0, 628, 629,
	627, 630, 631, 632, 0, 633, 0, 634, 615, 616,
	635, 636, 1343, 637, 638, 639, 640, 641, 642, 643,
	2231, 0, 644, 0, 645, 646, 647, 648, 649, 650,
	652, 617, 653, 658, 659, 2247, 654, 655, 656, 657,
	0, 661, 662, 663, 664, 0, 665, 666, 0, 660,
	651, 0, 667, 668, 669, 670, 671, 672, 0, 673,
	674, 0, 675, 2239, 2240, 2241, 2242, 0, 687, 0,
	676, 678, 679, 680, 681, 0, 682, 0, 0, 683,
	684, 685, 686, 677, 688, 689, 0, 0, 690, 691,
	693, 695, 696, 692, 694, 697, 0, 698, 0, 0,
	699, 700, 701, 0, 2223, 2246, 3949, 703, 702, 704,
	705, 706, 0, 707, 708, 709, 0, 0, 0, 0,
	710, 711, 0, 712, 713, 714, 300, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 306, 307, 309, 308, 310, 311, 312,
	313, 0, 314, 315, 0, 0, 0, 0, 0, 715,
	0, 0, 2213, 316, 0, 317, 318, 319, 0, 320,
	321, 322, 323, 324, 325, 326, 716, 717, 0, 327,
	718, 328, 719, 0, 720, 329, 330, 331, 332, 333,
	334, 335, 0, 0, 0, 336, 721, 722, 723, 0,
	337, 338, 724, 0, 0, 0, 339, 340, 341, 342,
	343, 344, 345, 346, 0, 0, 348, 349, 350, 347,
	351, 0, 352, 0, 353, 354, 355, 356, 357, 358,
	359, 0, 360, 361, 362, 0, 363, 364, 365, 0,
	0, 0, 0, 0, 0, 0, 366, 367, 368, 369,
	370, 0, 371, 373, 725, 726, 0, 376, 378, 372,
	374, 0, 377, 375, 379, 0, 380, 381, 382, 0,
	0, 383, 384, 385, 0, 386, 387, 388, 0, 389,
	390, 391, 0, 392, 393, 727, 394, 395, 396, 398,
	400, 397, 399, 401, 402, 403, 404, 405, 728, 729,
	406, 0, 0, 0, 0, 0, 0, 0, 407, 408,
	409, 730, 0, 0, 0, 410, 0, 411, 412, 413,
	0, 414, 415, 0, 0, 416, 417, 418, 731, 732,
	419, 420, 421, 422, 423, 424, 425, 426, 427, 0,
	428, 733, 0, 734, 429, 0, 430, 431, 432, 433,
	434, 435, 436, 735, 736, 737, 529, 0, 437, 438,
	439, 0, 440, 441, 442, 443, 444, 0, 0, 0,
	0, 445, 446, 447, 0, 0, 738, 448, 530, 449,
	739, 740, 0, 741, 0, 450, 451, 453, 0, 742,
	0, 452, 454, 455, 0, 456, 0, 0, 0, 457,
	458, 459, 460, 461, 462, 0, 463, 465, 464, 0,
	467, 743, 466, 0, 468, 469, 0, 0, 470, 471,
	472, 473, 474, 475, 478, 0, 0, 476, 477, 479,
	480, 0, 481, 482, 484, 487, 483, 485, 486, 488,
	501, 502, 489, 490, 491, 492, 493, 494, 495, 496,
	497, 498, 499, 500, 504, 0, 503, 0, 505, 506,
	507, 508, 509, 516, 518, 519, 514, 515, 517, 520,
	521, 523, 511, 512, 513, 0, 522, 510, 0, 0,
	0, 524, 525, 526, 527, 0, 744, 528, 745, 531,
	532, 0, 0, 533, 0, 534, 0, 0, 536, 537,
	538, 0, 0, 539, 540, 746, 0, 541, 0, 747,
	542, 543, 535, 544, 545, 546, 547, 548, 549, 550,
	551, 552, 553, 0, 554, 555, 748, 556, 557, 558,
	749, 559, 560, 561, 750, 562, 751, 563, 564, 0,
	565, 566, 567, 0, 568, 569, 570, 571, 572, 573,
	574, 575, 752, 576, 577, 579, 578, 580, 0, 581,
	0, 582, 583, 584, 0, 0, 0, 0, 0, 585,
	586, 588, 0, 589, 590, 591, 592, 587, 593, 594,
	595, 596, 597, 598, 0, 600, 601, 599, 602, 603,
	0, 604, 605, 606, 607, 608, 753, 609, 0, 610,
	611, 618, 619, 620, 612, 613, 614, 621, 622, 623,
	624, 625, 626, 0, 628, 629, 627, 630, 631, 632,
	0, 633, 754, 634, 615, 616, 635, 636, 0, 637,
	638, 639, 640, 641, 642, 643, 755, 0, 644, 0,
	645, 646, 647, 648, 649, 650, 652, 617, 653, 658,
	659, 756, 654, 655, 656, 657, 757, 661, 662, 663,
	664, 0, 665, 666, 0, 660, 651, 0, 667, 668,
	669, 670, 671, 672, 0, 673, 674, 0, 675, 758,
	759, 760, 761, 0, 687, 0, 676, 678, 679, 680,
	681, 762, 682, 763, 0, 683, 684, 685, 686, 677,
	688, 689, 0, 0, 690, 691, 693, 695, 696, 692,
	694, 697, 0, 698, 0, 0, 699, 700, 701, 764,
	765, 766, 0, 703, 702, 704, 705, 706, 767, 707,
	708, 709, 300, 0, 0, 0, 710, 711, 768, 712,
	713, 714, 0, 0, 0, 0, 0, 0, 0, 306,
	307, 309, 308, 310, 311, 312, 313, 0, 314, 315,
	0, 0, 0, 0, 0, 715, 0, 0, 0, 316,
	0, 317, 318, 319, 4141, 320, 321, 322, 323, 324,
	325, 326, 716, 717, 0, 327, 718, 328, 719, 0,
	720, 329, 330, 331, 332, 333, 334, 335, 0, 0,
	0, 336, 721, 722, 723, 0, 337, 338, 724, 0,
	0, 0, 339, 340, 341, 342, 343, 344, 345, 346,
	0, 0, 348, 349, 350, 347, 351, 0, 352, 0,
	353, 354, 355, 356, 357, 358, 359, 0, 360, 361,
	362, 0, 363, 364, 365, 0, 0, 0, 0, 0,
	0, 0, 366, 367, 368, 369, 370, 0, 371, 373,
	725, 726, 0, 376, 378, 372, 374, 0, 377, 375,
	379, 0, 380, 381, 382, 0, 0, 383, 384, 385,
	0, 386, 387, 388, 0, 389, 390, 391, 0, 392,
	393, 727, 394, 395, 396, 398, 400, 397, 399, 401,
	402, 403, 404, 405, 728, 729, 406, 0, 0, 0,
	0, 0, 0, 0, 407, 408, 409, 730, 0, 0,
	0, 410, 0, 411, 412, 413, 0, 414, 415, 0,
	0, 416, 417, 418, 731, 732, 419, 420, 421, 422,
	423, 424, 425, 426, 427, 0, 428, 733, 0, 734,
	429, 0, 430, 431, 432, 433, 434, 435, 436, 735,
	736, 737, 529, 0, 437, 438, 439, 0, 440, 441,
	442, 443, 444, 0, 0, 0, 0, 445, 446, 447,
	0, 0, 738, 448, 530, 449, 739, 740, 0, 741,
	0, 450, 451, 453, 0, 742, 0, 452, 454, 455,
	0, 456, 0, 0, 0, 457, 458, 459, 460, 461,
	462, 0, 463, 465, 464, 0, 467, 743, 466, 0,
	468, 469, 0, 0, 470, 471, 472, 473, 474, 475,
	478, 0, 0, 476, 477, 479, 480, 0, 481, 482,
	484, 487, 483, 485, 486, 488, 501, 502, 489, 490,
	491, 492, 493, 494, 495, 496, 497, 498, 499, 500,
	504, 0, 503, 0, 505, 506, 507, 508, 509, 516,
	518, 519, 514, 515, 517, 520, 521, 523, 511, 512,
	513, 0, 522, 510, 0, 0, 0, 524, 525, 526,
	527, 0, 744, 528, 745, 531, 532, 0, 0, 533,
	0, 534, 0, 0, 536, 537, 538, 0, 0, 539,
	540, 746, 0, 541, 0, 747, 542, 543, 535, 544,
	545, 546, 547, 548, 549, 550, 551, 552, 553, 0,
	554, 555, 748, 556, 557, 558, 749, 559, 560, 561,
	750, 562, 751, 563, 564, 0, 565, 566, 567, 0,
	568, 569, 570, 571, 572, 573, 574, 575, 752, 576,
	577, 579, 578, 580, 0, 581, 0, 582, 583, 584,
	0, 0, 0, 0, 0, 585, 586, 588, 0, 589,
	590, 591, 592, 587, 593, 594, 595, 596, 597, 598,
	0, 600, 601, 599, 602, 603, 0, 604, 605, 606,
	607, 608, 753, 609, 0, 610, 611, 618, 619, 620,
	612, 613, 614, 621, 622, 623, 624, 625, 626, 0,
	628, 629, 627, 630, 631, 632, 0, 633, 754, 634,
	615, 616, 635, 636, 0, 637, 638, 639, 640, 641,
	642, 643, 755, 0, 644, 0, 645, 646, 647, 648,
	649, 650, 652, 617, 653, 658, 659, 756, 654, 655,
	656, 657, 757, 661, 662, 663, 664, 0, 665, 666,
	0, 660, 651, 0, 667, 668, 669, 670, 671, 672,
	0, 673, 674, 0, 675, 758, 759, 760, 761, 0,
	687, 0, 676, 678, 679, 680, 681, 762, 682, 763,
	0, 683, 684, 685, 686, 677, 688, 689, 0, 0,
	690, 691, 693, 695, 696, 692, 694, 697, 0, 698,
	0, 0, 699, 700, 701, 764, 765, 766, 0, 703,
	702, 704, 705, 706, 767, 707, 708, 709, 0, 0,
	0, 0, 710, 711, 768, 712, 713, 714, 1386, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 306, 307, 309, 308, 310,
	311, 312, 313, 0, 314, 315, 0, 0, 0, 0,
	2559, 1287, 0, 0, 0, 316, 0, 317, 318, 319,
	1327, 320, 321, 322, 323, 324, 325, 326, 716, 717,
	0, 327, 718, 328, 719, 0, 720, 329, 330, 331,
	332, 333, 334, 335, 0, 1286, 0, 336, 721, 722,
	723, 0, 337, 338, 1293, 0, 1274, 0, 339, 340,
	341, 342, 343, 344, 345, 346, 0, 0, 348, 349,
	350, 347, 351, 0, 352, 0, 353, 354, 355, 356,
	357, 358, 359, 0, 360, 361, 362, 1328, 363, 364,
	365, 1277, 1275, 1276, 1283, 1279, 1278, 1282, 366, 367,
	368, 369, 370, 0, 371, 373, 725, 726, 0, 376,
	378, 372, 374, 0, 377, 375, 379, 0, 380, 381,
	382, 0, 0, 383, 384, 385, 0, 386, 387, 388,
	0, 389, 390, 391, 0, 392, 393, 727, 394, 395,
	396, 398, 400, 397, 399, 401, 402, 403, 404, 405,
	1318, 1319, 406, 0, 303, 0, 0, 0, 0, 0,
	407, 408, 409, 730, 0, 0, 0, 410, 0, 411,
	412, 413, 0, 414, 415, 0, 1329, 416, 417, 418,
	731, 732, 419, 420, 421, 422, 423, 424, 425, 426,
	427, 0, 428, 1325, 0, 734, 429, 0, 430, 431,
	432, 433, 434, 435, 436, 1288, 1289, 1292, 529, 1331,
	437, 438, 439, 0, 440, 441, 442, 443, 444, 0,
	0, 0, 304, 445, 446, 447, 0, 1330, 738, 448,
	530, 449, 739, 740, 0, 741, 0, 450, 451, 453,
	1332, 1290, 1333, 452, 454, 455, 1334, 456, 0, 0,
	0, 457, 458, 459, 460, 461, 462, 0, 463, 465,
	464, 0, 467, 1326, 466, 1335, 468, 469, 1336, 0,
	470, 471, 472, 473, 474, 475, 478, 1281, 1280, 476,
	477, 479, 480, 0, 481, 482, 484, 487, 483, 485,
	486, 488, 501, 502, 489, 490, 491, 492, 493, 494,
	495, 496, 497, 498, 499, 500, 504, 0, 503, 1337,
	505, 506, 507, 508, 509, 516, 518, 519, 514, 515,
	517, 520, 521, 523, 511, 512, 513, 1338, 522, 510,
	0, 305, 1339, 524, 525, 526, 527, 0, 1291, 528,
	745, 531, 532, 0, 0, 533, 0, 534, 0, 0,
	536, 537, 538, 0, 0, 539, 540, 746, 1340, 541,
	1341, 1320, 542, 543, 535, 544, 545, 546, 547, 548,
	549, 550, 551, 552, 553, 0, 554, 555, 748, 556,
	557, 558, 749, 559, 560, 561, 1321, 562, 751, 563,
	564, 0, 565, 566, 567, 0, 568, 569, 570, 571,
	572, 573, 574, 575, 752, 576, 577, 579, 578, 580,
	0, 581, 0, 582, 583, 584, 0, 0, 0, 0,
	0, 585, 586, 588, 0, 589, 590, 591, 592, 587,
	593, 594, 595, 596, 597, 598, 0, 600, 601, 599,
	602, 603, 1342, 604, 605, 606, 607, 608, 753, 609,
	0, 610, 611, 618, 619, 620, 612, 613, 614, 621,
	622, 623, 624, 625, 626, 0, 628, 629, 627, 630,
	631, 632, 1284, 633, 754, 634, 615, 616, 635, 636,
	1343, 637, 638, 639, 640, 641, 642, 643, 755, 0,
	644, 0, 645, 646, 647, 648, 649, 650, 652, 617,
	653, 658, 659, 756, 654, 655, 656, 657, 1322, 661,
	662, 663, 664, 0, 665, 666, 0, 660, 651, 0,
	667, 668, 669, 670, 671, 672, 0, 673, 674, 0,
	675, 758, 759, 760, 761, 0, 687, 0, 676, 678,
	679, 680, 681, 1323, 682, 1324, 0, 683, 684, 685,
	686, 677, 688, 689, 0, 0, 690, 691, 693, 695,
	696, 692, 694, 697, 1285, 698, 0, 0, 699, 700,
	701, 764, 765, 766, 0, 703, 702, 704, 705, 706,
	767, 707, 708, 709, 2226, 0, 0, 0, 710, 711,
	768, 712, 713, 714, 0, 0, 0, 0, 0, 0,
	0, 306, 307, 309, 308, 310, 311, 312, 313, 0,
	314, 315, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 316, 0, 317, 318, 319, 1327, 320, 321, 322,
	323, 324, 325, 326, 0, 2232, 0, 327, 2222, 328,
	2238, 0, 2245, 329, 330, 331, 332, 333, 334, 335,
	0, 0, 0, 336, 2248, 2249, 0, 0, 337, 338,
	0, 0, 1635, 0, 339, 340, 341, 342, 343, 344,
	345, 346, 0, 0, 348, 349, 350, 347, 351, 0,
	352, 0, 353, 354, 355, 356, 357, 358, 359, 0,
	360, 361, 362, 1328, 363, 364, 365, 0, 0, 0,
	0, 0, 0, 0, 366, 367, 368, 369, 370, 1310,
	371, 373, 2236, 2235, 0, 376, 378, 372, 374, 0,
	377, 375, 379, 0, 380, 381, 382, 0, 0, 383,
	1295, 385, 0, 386, 387, 388, 0, 389, 390, 391,
	0, 392, 393, 0, 394, 395, 396, 398, 400, 397,
	399, 401, 402, 403, 404, 405, 0, 0, 406, 0,
	0, 0, 0, 0, 0, 0, 407, 408, 409, 2234,
	0, 0, 0, 410, 0, 411, 412, 413, 0, 414,
	415, 0, 1329, 416, 417, 418, 2243, 2244, 419, 420,
	421, 422, 423, 424, 425, 426, 427, 0, 428, 0,
	0, 0, 429, 0, 430, 431, 432, 433, 434, 435,
	436, 0, 0, 0, 529, 1331, 437, 438, 439, 3946,
	440, 441, 442, 443, 444, 0, 0, 0, 0, 445,
	446, 447, 0, 1330, 3948, 448, 530, 449, 2229, 2230,
	0, 2225, 0, 450, 451, 453, 1332, 0, 1333, 452,
	454, 455, 1334, 456, 0, 0, 0, 457, 458, 459,
	460, 461, 462, 0, 463, 465, 464, 0, 467, 0,
	466, 1335, 468, 469, 1336, 0, 470, 471, 472, 473,
	474, 475, 478, 0, 0, 476, 477, 479, 480, 0,
	481, 482, 484, 487, 483, 485, 486, 488, 501, 502,
	489, 490, 491, 492, 493, 494, 495, 496, 497, 498,
	499, 500, 504, 0, 503, 1337, 505, 506, 507, 508,
	509, 516, 518, 519, 514, 515, 517, 520, 521, 523,
	511, 512, 513, 1338, 522, 510, 0, 0, 1339, 524,
	525, 526, 527, 0, 0, 528, 2237, 531, 532, 0,
	0, 533, 0, 534, 0, 0, 536, 537, 538, 0,
	0, 539, 540, 3947, 1340, 541, 1341, 0, 542, 543,
	535, 544, 545, 546, 547, 548, 549, 550, 551, 552,
	553, 0, 554, 555, 2219, 556, 557, 558, 2220, 559,
	560, 561, 0, 562, 0, 563, 564, 0, 565, 566,
	567, 0, 568, 569, 570, 571, 572, 573, 574, 575,
	2233, 576, 577, 579, 578, 580, 0, 581, 0, 582,
	583, 584, 0, 0, 0, 0, 0, 585, 586, 588,
	0, 589, 590, 591, 592, 587, 593, 594, 595, 596,
	597, 598, 0, 600, 601, 599, 602, 603, 1342, 604,
	605, 606, 607, 608, 0, 609, 0, 610, 611, 618,
	619, 620, 612, 613, 614, 621, 622, 623, 624, 625,
	626, 0, 628, 629, 627, 630, 631, 632, 0, 633,
	0, 634, 615, 616, 635, 636, 1343, 637, 638, 639,
	640, 641, 642, 643, 2231, 0, 644, 0, 645, 646,
	647, 648, 649, 650, 652, 617, 653, 658, 659, 2247,
	654, 655, 656, 657, 0, 661, 662, 663, 664, 0,
	665, 666, 0, 660, 651, 0, 667, 668, 669, 670,
	671, 672, 0, 673, 674, 0, 675, 2239, 2240, 2241,
	2242, 0, 687, 0, 676, 678, 679, 680, 681, 0,
	682, 0, 0, 683, 684, 685, 686, 677, 688, 689,
	0, 0, 690, 691, 693, 695, 696, 692, 694, 697,
	0, 698, 0, 0, 699, 700, 701, 0, 2223, 2246,
	3949, 703, 702, 704, 705, 706, 0, 707, 708, 709,
	0, 0, 0, 0, 710, 711, 0, 712, 713, 714,
	1032, 0, 931, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 306,
	307, 309, 308, 310, 311, 312, 313, 0, 314, 315,
	0, 0, 0, 0, 0, 715, 2213, 0, 0, 316,
	0, 317, 318, 319, 0, 320, 321, 322, 323, 324,
	325, 326, 716, 717, 0, 327, 718, 328, 719, 0,
	720, 329, 330, 331, 332, 333, 334, 335, 0, 0,
	0, 336, 721, 722, 723, 0, 337, 338, 724, 0,
	0, 0, 339, 340, 341, 342, 343, 344, 345, 346,
	0, 0, 348, 349, 350, 347, 351, 0, 352, 0,
	353, 354, 355, 356, 357, 358, 359, 0, 360, 361,
	362, 0, 363, 364, 365, 0, 0, 0, 0, 0,
	0, 0, 366, 367, 368, 938, 370, 0, 371, 373,
	725, 726, 0, 376, 378, 372, 374, 0, 377, 375,
	379, 0, 380, 381, 382, 0, 0, 383, 384, 385,
	0, 386, 387, 388, 0, 389, 390, 391, 0, 392,
	393, 727, 394, 395, 396, 398, 400, 397, 399, 401,
	402, 403, 404, 405, 728, 729, 406, 0, 303, 0,
	0, 0, 0, 0, 407, 408, 409, 730, 0, 0,
	0, 410, 0, 411, 412, 413, 0, 414, 415, 1029,
	0, 416, 417, 418, 731, 732, 419, 420, 421, 422,
	423, 424, 425, 426, 427, 0, 428, 733, 0, 734,
	429, 0, 430, 431, 432, 433, 434, 435, 436, 735,
	736, 737, 529, 0, 437, 438, 439, 0, 440, 441,
	442, 443, 444, 0, 0, 0, 304, 445, 446, 447,
	0, 0, 738, 448, 530, 449, 739, 740, 0, 741,
	0, 450, 451, 453, 0, 742, 0, 452, 454, 455,
	0, 456, 0, 0, 0, 457, 458, 459, 460, 461,
	462, 0, 463, 465, 464, 0, 467, 743, 466, 0,
	468, 469, 0, 0, 470, 471, 472, 473, 474, 475,
	478, 0, 0, 476, 477, 479, 480, 0, 481, 482,
	484, 487, 483, 485, 486, 488, 501, 502, 489, 490,
	491, 492, 493, 494, 495, 496, 497, 498, 499, 500,
	504, 0, 503, 0, 505, 506, 507, 508, 509, 516,
	518, 519, 514, 515, 517, 520, 521, 523, 511, 512,
	513, 0, 522, 510, 0, 305, 0, 524, 525, 526,
	527, 0, 744, 528, 745, 531, 532, 0, 0, 533,
	0, 534, 0, 0, 536, 537, 538, 0, 0, 539,
	540, 746, 0, 541, 0, 747, 542, 543, 535, 544,
	545, 546, 547, 548, 549, 550, 551, 552, 553, 0,
	554, 555, 748, 556, 557, 558, 749, 559, 560, 561,
	750, 562, 751, 563, 564, 0, 565, 566, 567, 0,
	568, 569, 570, 571, 572, 573, 574, 575, 752, 576,
	577, 579, 578, 580, 0, 581, 0, 582, 583, 584,
	0, 0, 0, 0, 0, 585, 586, 588, 0, 589,
	590, 591, 592, 587, 593, 594, 595, 596, 597, 598,
	0, 600, 601, 599, 602, 603, 0, 604, 605, 606,
	607, 608, 753, 609, 0, 610, 611, 618, 619, 620,
	612, 613, 614, 621, 622, 623, 624, 625, 626, 0,
	628, 629, 627, 630, 631, 632, 0, 633, 754, 634,
	615, 616, 635, 636, 0, 637, 638, 639, 640, 641,
	642, 643, 755, 0, 644, 0, 645, 646, 647, 648,
	649, 650, 652, 617, 653, 658, 659, 756, 654, 655,
	656, 657, 757, 661, 662, 663, 664, 0, 665, 1031,
	0, 660, 651, 936, 667, 668, 669, 670, 671, 937,
	0, 673, 674, 0, 675, 758, 759, 760, 761, 0,
	687, 0, 676, 678, 679, 680, 681, 762, 682, 763,
	0, 683, 684, 685, 686, 677, 688, 689, 0, 0,
	690, 691, 693, 695, 696, 692, 694, 697, 0, 698,
	0, 0, 699, 700, 701, 764, 765, 766, 0, 703,
	702, 704, 705, 706, 767, 707, 708, 709, 2197, 0,
	0, 0, 710, 711, 768, 712, 713, 714, 0, 0,
	0, 0, 0, 0, 0, 306, 307, 309, 308, 310,
	311, 312, 313, 4270, 314, 315, 0, 0, 0, 0,
	0, 715, 941, 0, 0, 316, 0, 317, 318, 319,
	0, 320, 321, 322, 323, 324, 325, 326, 716, 717,
	0, 327, 718, 328, 719, 0, 720, 329, 330, 331,
	332, 333, 334, 335, 0, 0, 0, 336, 721, 722,
	723, 0, 337, 338, 724, 0, 0, 0, 339, 340,
	341, 342, 343, 344, 345, 346, 0, 0, 348, 349,
	350, 347, 351, 0, 352, 0, 353, 354, 355, 356,
	357, 358, 359, 0, 360, 361, 362, 0, 363, 364,
	365, 0, 0, 0, 0, 0, 0, 0, 366, 367,
	368, 2204, 370, 0, 371, 373, 725, 726, 0, 376,
	378, 372, 374, 0, 377, 375, 379, 0, 380, 381,
	382, 0, 0, 383, 384, 385, 0, 386, 387, 388,
	0, 389, 390, 391, 0, 392, 393, 727, 394, 395,
	396, 398, 400, 397, 399, 401, 402, 403, 404, 405,
	728, 729, 406, 0, 303, 0, 0, 0, 0, 0,
	407, 408, 409, 730, 0, 0, 0, 410, 0, 411,
	412, 413, 0, 414, 415, 0, 0, 416, 417, 418,
	731, 732, 419, 420, 421, 422, 423, 424, 425, 426,
	427, 0, 428, 733, 0, 734, 429, 0, 430, 431,
	432, 433, 434, 435, 436, 735, 736, 737, 529, 0,
	437, 438, 439, 0, 440, 441, 442, 443, 444, 0,
	0, 0, 304, 445, 446, 447, 0, 0, 738, 448,
	530, 449, 739, 740, 0, 741, 0, 450, 451, 453,
	0, 742, 0, 452, 454, 455, 0, 456, 0, 0,
	0, 457, 458, 459, 460, 461, 462, 0, 463, 465,
	464, 0, 467, 743, 466, 0, 468, 469, 0, 0,
	470, 471, 472, 473, 474, 475, 478, 0, 0, 476,
	477, 479, 480, 0, 481, 482, 484, 487, 483, 485,
	486, 488, 501, 502, 489, 490, 491, 492, 493, 494,
	495, 496, 497, 498, 499, 500, 504, 0, 503, 0,
	505, 506, 507, 508, 509, 516, 518, 519, 514, 515,
	517, 520, 521, 523, 511, 512, 513, 0, 522, 510,
	0, 305, 0, 524, 525, 526, 527, 0, 744, 528,
	745, 531, 532, 0, 0, 533, 0, 534, 0, 0,
	536, 537, 538, 0, 0, 539, 540, 746, 0, 541,
	0, 747, 542, 543, 535, 544, 545, 546, 547, 548,
	549, 550, 551, 552, 553, 0, 554, 555, 748, 556,
	557, 558, 749, 559, 560, 561, 750, 562, 751, 563,
	564, 0, 565, 566, 567, 0, 568, 569, 570, 571,
	572, 573, 574, 575, 752, 576, 577, 579, 578, 580,
	0, 581, 0, 582, 583, 584, 0, 0, 0, 0,
	0, 585, 586, 588, 0, 589, 590, 591, 592, 587,
	593, 594, 595, 596, 597, 598, 0, 600, 601, 599,
	602, 603, 0, 604, 605, 606, 607, 608, 753, 609,
	0, 610, 611, 618, 619, 620, 612, 613, 614, 4269,
	622, 623, 624, 625, 626, 0, 2201, 629, 627, 630,
	631, 632, 0, 633, 754, 634, 615, 616, 635, 636,
	0, 637, 638, 639, 640, 641, 642, 643, 755, 0,
	644, 0, 645, 646, 647, 648, 649, 650, 652, 617,
	653, 658, 659, 756, 654, 655, 656, 657, 757, 661,
	662, 663, 664, 0, 665, 666, 0, 660, 651, 2203,
	667, 668, 669, 670, 671, 672, 0, 673, 674, 0,
	675, 758, 759, 760, 761, 0, 687, 0, 676, 678,
	679, 680, 681, 762, 682, 763, 0, 683, 684, 4268,
	686, 677, 688, 689, 0, 0, 690, 691, 693, 695,
	696, 692, 694, 697, 0, 698, 0, 0, 699, 700,
	701, 764, 765, 766, 0, 703, 702, 704, 705, 706,
	767, 707, 708, 709, 2197, 0, 0, 0, 710, 711,
	768, 712, 713, 714, 0, 0, 0, 0, 0, 0,
	0, 306, 307, 309, 308, 310, 311, 312, 313, 2253,
	314, 315, 0, 0, 0, 0, 0, 715, 941, 0,
	0, 316, 0, 317, 318, 319, 0, 320, 321, 322,
	323, 324, 325, 326, 716, 717, 0, 327, 718, 328,
	719, 0, 720, 329, 330, 331, 332, 333, 334, 335,
	0, 0, 0, 336, 721, 722, 723, 0, 337, 338,
	724, 0, 0, 0, 339, 340, 341, 342, 343, 344,
	345, 346, 0, 0, 348, 349, 350, 347, 351, 0,
	352, 0, 353, 354, 355, 356, 357, 358, 359, 0,
	360, 361, 362, 0, 363, 364, 365, 0, 0, 0,
	0, 0, 0, 0, 366, 367, 368, 2204, 370, 0,
	371, 373, 725, 726, 0, 376, 378, 372, 374, 0,
	377, 375, 379, 0, 380, 381, 382, 0, 0, 383,
	384, 385, 0, 386, 387, 388, 0, 389, 390, 391,
	0, 392, 393, 727, 394, 395, 396, 398, 400, 397,
	399, 401, 402, 403, 404, 405, 728, 729, 406, 0,
	303, 0, 0, 0, 0, 0, 407, 408, 409, 730,
	0, 0, 0, 410, 0, 411, 412, 413, 0, 414,
	415, 0, 0, 416, 417, 418, 731, 732, 419, 420,
	421, 422, 423, 424, 425, 426, 427, 0, 428, 733,
	0, 734, 429, 0, 430, 431, 432, 433, 434, 435,
	436, 735, 736, 737, 529, 0, 437, 438, 439, 0,
	440, 441, 442, 443, 444, 0, 0, 0, 304, 445,
	446, 447, 0, 0, 738, 448, 530, 449, 739, 740,
	0, 741, 0, 450, 451, 453, 0, 742, 0, 452,
	454, 455, 0, 456, 0, 0, 0, 457, 458, 459,
	460, 461, 462, 0, 463, 465, 464, 0, 467, 743,
	466, 0, 468, 469, 0, 0, 470, 471, 472, 473,
	474, 475, 478, 0, 0, 476, 477, 479, 480, 0,
	481, 482, 484, 487, 483, 485, 486, 488, 501, 502,
	489, 490, 491, 492, 493, 494, 495, 496, 497, 498,
	499, 500, 504, 0, 503, 0, 505, 506, 507, 508,
	509, 516, 518, 519, 514, 515, 517, 520, 521, 523,
	511, 512, 513, 0, 522, 510, 0, 305, 0, 524,
	525, 526, 527, 0, 744, 528, 745, 531, 532, 0,
	0, 533, 0, 534, 0, 0, 536, 537, 538, 0,
	0, 539, 540, 746, 0, 541, 0, 747, 542, 543,
	535, 544, 545, 546, 547, 548, 549, 550, 551, 552,
	553, 0, 554, 555, 748, 556, 557, 558, 749, 559,
	560, 561, 750, 562, 751, 563, 564, 0, 565, 566,
	567, 0, 568, 569, 570, 571, 572, 573, 574, 575,
	752, 576, 577, 579, 578, 580, 0, 581, 0, 582,
	583, 584, 0, 0, 0, 0, 0, 585, 586, 588,
	0, 589, 590, 591, 592, 587, 593, 594, 595, 596,
	597, 598, 0, 600, 601, 599, 602, 603, 0, 604,
	605, 606, 607, 608, 753, 609, 0, 610, 611, 618,
	619, 620, 612, 613, 614, 2252, 622, 623, 624, 625,
	626, 0, 2254, 629, 627, 630, 631, 632, 0, 633,
	754, 634, 615, 616, 635, 636, 0, 637, 638, 639,
	640, 641, 642, 643, 755, 0, 644, 0, 645, 646,
	647, 648, 649, 650, 652, 617, 653, 658, 659, 756,
	654, 655, 656, 657, 757, 661, 662, 663, 664, 0,
	665, 666, 0, 660, 651, 2203, 667, 668, 669, 670,
	671, 672, 0, 673, 674, 0, 675, 758, 759, 760,
	761, 0, 687, 0, 676, 678, 679, 680, 681, 762,
	682, 763, 0, 683, 684, 2251, 686, 677, 688, 689,
	0, 0, 690, 691, 693, 695, 696, 692, 694, 697,
	0, 698, 0, 0, 699, 700, 701, 764, 765, 766,
	0, 703, 702, 704, 705, 706, 767, 707, 708, 709,
	2197, 0, 0, 0, 710, 711, 768, 712, 713, 714,
	0, 0, 0, 0, 0, 0, 0, 306, 307, 309,
	308, 310, 311, 312, 313, 2196, 314, 315, 0, 0,
	0, 0, 0, 715, 941, 0, 0, 316, 0, 317,
	318, 319, 0, 320, 321, 322, 323, 324, 325, 326,
	716, 717, 0, 327, 718, 328, 719, 0, 720, 329,
	330, 331, 332, 333, 334, 335, 0, 0, 0, 336,
	721, 722, 723, 0, 337, 338, 724, 0, 0, 0,
	339, 340, 341, 342, 343, 344, 345, 346, 0, 0,
	348, 349, 350, 347, 351, 0, 352, 0, 353, 354,
	355, 356, 357, 358, 359, 0, 360, 361, 362, 0,
	363, 364, 365, 0, 0, 0, 0, 0, 0, 0,
	366, 367, 368, 2204, 370, 0, 371, 373, 725, 726,
	0, 376, 378, 372, 374, 0, 377, 375, 379, 0,
	380, 381, 382, 0, 0, 383, 384, 385, 0, 386,
	387, 388, 0, 389, 390, 391, 0, 392, 393, 727,
	394, 395, 396, 398, 400, 397, 399, 401, 402, 403,
	404, 405, 728, 729, 406, 0, 303, 0, 0, 0,
	0, 0, 407, 408, 409, 730, 0, 0, 0, 410,
	0, 411, 412, 413, 0, 414, 415, 0, 0, 416,
	417, 418, 731, 732, 419, 420, 421, 422, 423, 424,
	425, 426, 427, 0, 428, 733, 0, 734, 429, 0,
	430, 431, 432, 433, 434, 435, 436, 735, 736, 737,
	529, 0, 437, 438, 439, 0, 440, 441, 442, 443,
	444, 0, 0, 0, 304, 445, 446, 447, 0, 0,
	738, 448, 530, 449, 739, 740, 0, 741, 0, 450,
	451, 453, 0, 742, 0, 452, 454, 455, 0, 456,
	0, 0, 0, 457, 458, 459, 460, 461, 462, 0,
	463, 465, 464, 0, 467, 743, 466, 0, 468, 469,
	0, 0, 470, 471, 472, 473, 474, 475, 478, 0,
	0, 476, 477, 479, 480, 0, 481, 482, 484, 487,
	483, 485, 486, 488, 501, 502, 489, 490, 491, 492,
	493, 494, 495, 496, 497, 498, 499, 500, 504, 0,
	503, 0, 505, 506, 507, 508, 509, 516, 518, 519,
	514, 515, 517, 520, 521, 523, 511, 512, 513, 0,
	522, 510, 0, 305, 0, 524, 525, 526, 527, 0,
	744, 528, 745, 531, 532, 0, 0, 533, 0, 534,
	0, 0, 536, 537, 538, 0, 0, 539, 540, 746,
	0, 541, 0, 747, 542, 543, 535, 544, 545, 546,
	547, 548, 549, 550, 551, 552, 553, 0, 554, 555,
	748, 556, 557, 558, 749, 559, 560, 561, 750, 562,
	751, 563, 564, 0, 565, 566, 567, 0, 568, 569,
	570, 571, 572, 573, 574, 575, 752, 576, 577, 579,
	578, 580, 0, 581, 0, 582, 583, 584, 0, 0,
	0, 0, 0, 585, 586, 588, 0, 589, 590, 591,
	592, 587, 593, 594, 595, 596, 597, 598, 0, 600,
	601, 599, 602, 603, 0, 604, 605, 606, 607, 608,
	753, 609, 0, 610, 611, 618, 619, 620, 612, 613,
	614, 2195, 622, 623, 624, 625, 626, 0, 2201, 629,
	627, 630, 631, 632, 0, 633, 754, 634, 615, 616,
	635, 636, 0, 637, 638, 639, 640, 641, 642, 643,
	755, 0, 644, 0, 645, 646, 647, 648, 649, 650,
	652, 617, 653, 658, 659, 756, 654, 655, 656, 657,
	757, 661, 662, 663, 664, 0, 665, 666, 0, 660,
	651, 2203, 667, 668, 669, 670, 671, 672, 0, 673,
	674, 0, 675, 758, 759, 760, 761, 0, 687, 0,
	676, 678, 679, 680, 681, 762, 682, 763, 0, 683,
	684, 2194, 686, 677, 688, 689, 0, 0, 690, 691,
	693, 695, 696, 692, 694, 697, 0, 698, 0, 0,
	699, 700, 701, 764, 765, 766, 0, 703, 702, 704,
	705, 706, 767, 707, 708, 709, 929, 0, 931, 0,
	710, 711, 768, 712, 713, 714, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 306, 307, 309, 308, 310,
	311, 312, 313, 0, 314, 315, 0, 0, 0, 0,
	941, 715, 0, 0, 0, 316, 0, 317, 318, 319,
	0, 320, 321, 322, 323, 324, 325, 326, 716, 717,
	0, 327, 718, 328, 719, 0, 720, 329, 330, 331,
	332, 333, 334, 335, 0, 0, 0, 336, 721, 722,
	723, 0, 337, 338, 724, 0, 0, 0, 339, 340,
	341, 342, 343, 344, 345, 346, 0, 0, 348, 349,
	350, 347, 351, 0, 352, 0, 353, 354, 355, 356,
	357, 358, 359, 0, 360, 361, 362, 0, 363, 364,
	365, 0, 0, 0, 0, 0, 0, 0, 366, 367,
	368, 938, 370, 0, 371, 373, 725, 726, 0, 376,
	378, 372, 374, 0, 377, 375, 379, 0, 380, 381,
	382, 0, 0, 383, 384, 385, 0, 386, 387, 388,
	0, 389, 390, 391, 0, 392, 393, 727, 394, 395,
	396, 398, 400, 397, 399, 401, 402, 403, 404, 405,
	728, 729, 406, 0, 303, 0, 0, 0, 0, 0,
	407, 408, 409, 730, 0, 0, 0, 410, 0, 411,
	412, 413, 0, 414, 415, 0, 0, 416, 417, 418,
	731, 732, 419, 420, 421, 422, 423, 424, 425, 426,
	427, 0, 428, 733, 0, 734, 429, 0, 430, 431,
	432, 433, 434, 435, 436, 735, 736, 737, 529, 0,
	437, 438, 439, 0, 440, 441, 442, 443, 444, 0,
	0, 0, 304, 445, 446, 447, 0, 0, 738, 448,
	530, 449, 739, 740, 0, 741, 0, 450, 451, 453,
	0, 742, 0, 452, 454, 455, 0, 456, 0, 0,
	0, 457, 458, 459, 460, 461, 462, 0, 463, 465,
	464, 0, 467, 743, 466, 0, 468, 469, 0, 0,
	470, 471, 472, 473, 474, 475, 478, 0, 0, 476,
	477, 479, 480, 0, 481, 482, 484, 487, 483, 485,
	486, 488, 501, 502, 489, 490, 491, 492, 493, 494,
	495, 496, 497, 498, 499, 500, 504, 0, 503, 0,
	505, 506, 507, 508, 509, 516, 518, 519, 514, 515,
	517, 520, 521, 523, 511, 512, 513, 0, 522, 510,
	0, 305, 0, 524, 525, 526, 527, 0, 744, 528,
	745, 531, 532, 0, 0, 533, 0, 534, 0, 0,
	536, 537, 538, 0, 0, 539, 540, 746, 0, 541,
	0, 747, 542, 543, 535, 544, 545, 546, 547, 548,
	549, 550, 551, 552, 553, 0, 554, 555, 748, 556,
	557, 558, 749, 559, 560, 561, 750, 562, 751, 563,
	564, 0, 565, 566, 567, 0, 568, 569, 570, 571,
	572, 573, 574, 575, 752, 576, 577, 579, 578, 580,
	0, 581, 0, 582, 583, 584, 0, 0, 0, 0,
	0, 585, 586, 588, 0, 589, 590, 591, 592, 587,
	593, 594, 595, 596, 597, 598, 0, 600, 601, 599,
	602, 603, 0, 604, 605, 606, 607, 608, 753, 609,
	0, 610, 611, 618, 619, 620, 612, 613, 614, 621,
	622, 623, 624, 625, 626, 0, 628, 629, 627, 630,
	631, 632, 0, 633, 754, 634, 615, 616, 635, 636,
	0, 637, 638, 639, 640, 641, 642, 643, 755, 0,
	644, 0, 645, 646, 647, 648, 649, 650, 652, 617,
	653, 658, 659, 756, 654, 655, 656, 657, 757, 661,
	662, 663, 664, 0, 665, 666, 0, 660, 651, 936,
	667, 668, 669, 670, 671, 937, 0, 673, 674, 0,
	675, 758, 759, 760, 761, 0, 687, 0, 676, 678,
	679, 680, 681, 762, 682, 763, 0, 683, 684, 685,
	686, 677, 688, 689, 0, 0, 690, 691, 693, 695,
	696, 692, 694, 697, 0, 698, 0, 0, 699, 700,
	701, 764, 765, 766, 0, 703, 702, 704, 705, 706,
	767, 707, 708, 709, 3952, 0, 0, 0, 710, 711,
	768, 712, 713, 714, 0, 0, 0, 0, 0, 0,
	0, 306, 307, 309, 308, 310, 311, 312, 313, 0,
	314, 315, 0, 0, 0, 0, 0, 0, 941, 0,
	0, 316, 0, 317, 318, 319, 1327, 320, 321, 322,
	323, 324, 325, 326, 0, 2232, 0, 327, 2222, 328,
	2238, 0, 2245, 329, 330, 331, 332, 333, 334, 335,
	0, 0, 0, 336, 2248, 2249, 0, 0, 337, 338,
	0, 0, 1635, 0, 339, 340, 341, 342, 343, 344,
	345, 346, 0, 0, 348, 349, 350, 347, 351, 0,
	352, 0, 353, 354, 355, 356, 357, 358, 359, 0,
	360, 361, 362, 1328, 363, 364, 365, 0, 0, 0,
	0, 0, 0, 0, 366, 367, 368, 369, 370, 1310,
	371, 373, 2236, 2235, 0, 376, 378, 372, 374, 0,
	377, 375, 379, 0, 380, 381, 382, 0, 0, 383,
	1295, 385, 0, 386, 387, 388, 0, 389, 390, 391,
	0, 392, 393, 0, 394, 395, 396, 398, 400, 397,
	399, 401, 402, 403, 404, 405, 0, 0, 406, 0,
	303, 0, 0, 0, 0, 0, 407, 408, 409, 2234,
	0, 0, 0, 410, 0, 411, 412, 413, 0, 414,
	415, 0, 1329, 416, 417, 418, 2243, 2244, 419, 420,
	421, 422, 423, 424, 425, 426, 427, 0, 428, 0,
	0, 0, 429, 0, 430, 431, 432, 433, 434, 435,
	436, 0, 0, 0, 529, 1331, 437, 438, 439, 0,
	440, 441, 442, 443, 444, 0, 0, 0, 0, 445,
	446, 447, 0, 1330, 0, 448, 530, 449, 2229, 2230,
	0, 2225, 0, 450, 451, 453, 1332, 0, 1333, 452,
	454, 455, 1334, 456, 0, 0, 0, 457, 458, 459,
	460, 461, 462, 0, 463, 465, 464, 0, 467, 0,
	466, 1335, 468, 469, 1336, 0, 470, 471, 472, 473,
	474, 475, 478, 0, 0, 476, 477, 479, 480, 0,
	481, 482, 484, 487, 483, 485, 486, 488, 501, 502,
	489, 490, 491, 492, 493, 494, 495, 496, 497, 498,
	499, 500, 504, 0, 503, 1337, 505, 506, 507, 508,
	509, 516, 518, 519, 514, 515, 517, 520, 521, 523,
	511, 512, 513, 1338, 522, 510, 0, 0, 1339, 524,
	525, 526, 527, 0, 0, 528, 2237, 531, 532, 0,
	0, 533, 0, 534, 0, 0, 536, 537, 538, 0,
	0, 539, 540, 0, 1340, 541, 1341, 0, 542, 543,
	535, 544, 545, 546, 547, 548, 549, 550, 551, 552,
	553, 0, 554, 555, 2219, 556, 557, 558, 2220, 559,
	560, 561, 0, 562, 0, 563, 564, 0, 565, 566,
	567, 0, 568, 569, 570, 571, 572, 573, 574, 575,
	2233, 576, 577, 579, 578, 580, 0, 581, 0, 582,
	583, 584, 0, 0, 0, 0, 0, 585, 586, 588,
	0, 589, 590, 591, 592, 587, 593, 594, 595, 596,
	597, 598, 0, 600, 601, 599, 602, 603, 1342, 604,
	605, 606, 607, 608, 0, 609, 0, 610, 611, 618,
	619, 620, 612, 613, 614, 621, 622, 623, 624, 625,
	626, 0, 628, 629, 627, 630, 631, 632, 0, 633,
	0, 634, 615, 616, 635, 636, 1343, 637, 638, 639,
	640, 641, 642, 643, 2231, 0, 644, 0, 645, 646,
	647, 648, 649, 650, 652, 617, 653, 658, 659, 2247,
	654, 655, 656, 657, 0, 661, 662, 663, 664, 0,
	665, 666, 0, 660, 651, 0, 667, 668, 669, 670,
	671, 672, 0, 673, 674, 0, 675, 2239, 2240, 2241,
	2242, 0, 687, 0, 676, 678, 679, 680, 681, 0,
	682, 0, 0, 683, 684, 685, 686, 677, 688, 689,
	0, 0, 690, 691, 693, 695, 696, 692, 694, 697,
	0, 698, 0, 0, 699, 700, 701, 0, 2223, 2246,
	0, 703, 702, 704, 705, 706, 0, 707, 708, 709,
	0, 0, 0, 0, 710, 711, 0, 712, 713, 714,
	931, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 306, 307, 309,
	308, 310, 311, 312, 313, 0, 314, 315, 0, 0,
	0, 0, 0, 715, 0, 0, 2213, 316, 0, 317,
	318, 319, 0, 320, 321, 322, 323, 324, 325, 326,
	716, 717, 0, 327, 718, 328, 719, 0, 720, 329,
	330, 331, 332, 333, 334, 335, 0, 0, 0, 336,
	721, 722, 723, 0, 337, 338, 724, 0, 0, 0,
	339, 340, 341, 342, 343, 344, 345, 346, 0, 0,
	348, 349, 350, 347, 351, 0, 352, 0, 353, 354,
	355, 356, 357, 358, 359, 0, 360, 361, 362, 0,
	363, 364, 365, 0, 0, 0, 0, 0, 0, 0,
	366, 367, 368, 938, 370, 0, 371, 373, 725, 726,
	0, 376, 378, 372, 374, 0, 377, 375, 379, 0,
	380, 381, 382, 0, 0, 383, 384, 385, 0, 386,
	387, 388, 0, 389, 390, 391, 0, 392, 393, 727,
	394, 395, 396, 398, 400, 397, 399, 401, 402, 403,
	404, 405, 728, 729, 406, 0, 303, 0, 0, 0,
	0, 0, 407, 408, 409, 730, 0, 0, 0, 410,
	0, 411, 412, 413, 0, 414, 415, 0, 0, 416,
	417, 418, 731, 732, 419, 420, 421, 422, 423, 424,
	425, 426, 427, 0, 428, 733, 0, 734, 429, 0,
	430, 431, 432, 433, 434, 435, 436, 735, 736, 737,
	529, 0, 437, 438, 439, 0, 440, 441, 442, 443,
	444, 0, 0, 0, 304, 445, 446, 447, 0, 0,
	738, 448, 530, 449, 739, 740, 0, 741, 0, 450,
	451, 453, 0, 742, 0, 452, 454, 455, 0, 456,
	0, 0, 0, 457, 458, 459, 460, 461, 462, 0,
	463, 465, 464, 0, 467, 743, 466, 0, 468, 469,
	0, 0, 470, 471, 472, 473, 474, 475, 478, 0,
	0, 476, 477, 479, 480, 0, 481, 482, 484, 487,
	483, 485, 486, 488, 501, 502, 489, 490, 491, 492,
	493, 494, 495, 496, 497, 498, 499, 500, 504, 0,
	503, 0, 505, 506, 507, 508, 509, 516, 518, 519,
	514, 515, 517, 520, 521, 523, 511, 512, 513, 0,
	522, 510, 0, 305, 0, 524, 525, 526, 527, 0,
	744, 528, 745, 531, 532, 0, 0, 533, 0, 534,
	0, 0, 536, 537, 538, 0, 0, 539, 540, 746,
	0, 541, 0, 747, 542, 543, 535, 544, 545, 546,
	547, 548, 549, 550, 551, 552, 553, 0, 554, 555,
	748, 556, 557, 558, 749, 559, 560, 561, 750, 562,
	751, 563, 564, 0, 565, 566, 567, 0, 568, 569,
	570, 571, 572, 573, 574, 575, 752, 576, 577, 579,
	578, 580, 0, 581, 0, 582, 583, 584, 0, 0,
	0, 0, 0, 585, 586, 588, 0, 589, 590, 591,
	592, 587, 593, 594, 595, 596, 597, 598, 0, 600,
	601, 599, 602, 603, 0, 604, 605, 606, 607, 608,
	753, 609, 0, 610, 611, 618, 619, 620, 612, 613,
	614, 621, 622, 623, 624, 625, 626, 0, 628, 629,
	627, 630, 631, 632, 0, 633, 754, 634, 615, 616,
	635, 636, 0, 637, 638, 639, 640, 641, 642, 643,
	755, 0, 644, 0, 645, 646, 647, 648, 649, 650,
	652, 617, 653, 658, 659, 756, 654, 655, 656, 657,
	757, 661, 662, 663, 664, 0, 665, 666, 0, 660,
	651, 936, 667, 668, 669, 670, 671, 937, 0, 673,
	674, 0, 675, 758, 759, 760, 761, 0, 687, 0,
	676, 678, 679, 680, 681, 762, 682, 763, 0, 683,
	684, 685, 686, 677, 688, 689, 0, 0, 690, 691,
	693, 695, 696, 692, 694, 697, 0, 698, 0, 0,
	699, 700, 701, 764, 765, 766, 0, 703, 702, 704,
	705, 706, 767, 707, 708, 709, 3111, 0, 300, 0,
	710, 711, 768, 712, 713, 714, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 306, 307, 309, 308, 310,
	311, 312, 313, 0, 314, 315, 0, 0, 0, 0,
	941, 715, 0, 0, 0, 316, 0, 317, 318, 319,
	0, 320, 321, 322, 323, 324, 325, 326, 716, 717,
	0, 327, 718, 328, 719, 0, 720, 329, 330, 331,
	332, 333, 334, 335, 0, 0, 0, 336, 721, 722,
	723, 0, 337, 338, 724, 0, 0, 0, 339, 340,
	341, 342, 343, 344, 345, 346, 0, 0, 348, 349,
	350, 347, 351, 0, 352, 0, 353, 354, 355, 356,
	357, 358, 359, 0, 360, 361, 362, 0, 363, 364,
	365, 0, 0, 0, 0, 0, 0, 0, 366, 367,
	368, 369, 370, 0, 371, 373, 725, 726, 0, 376,
	378, 372, 374, 0, 377, 375, 379, 0, 380, 381,
	382, 0, 0, 383, 384, 385, 0, 386, 387, 388,
	0, 389, 390, 391, 0, 392, 393, 727, 394, 395,
	396, 398, 400, 397, 399, 401, 402, 403, 404, 405,
	728, 729, 406, 0, 303, 0, 0, 0, 0, 0,
	407, 408, 409, 730, 0, 0, 0, 410, 0, 411,
	412, 413, 0, 414, 415, 0, 0, 416, 417, 418,
	731, 732, 419, 420, 421, 422, 423, 424, 425, 426,
	427, 0, 428, 733, 0, 734, 429, 0, 430, 431,
	432, 433, 434, 435, 436, 735, 736, 737, 529, 0,
	437, 438, 439, 0, 440, 441, 442, 443, 444, 0,
	0, 0, 304, 445, 446, 447, 0, 0, 738, 448,
	530, 449, 739, 740, 0, 741, 0, 450, 451, 453,
	0, 742, 0, 452, 454, 455, 0, 456, 0, 0,
	0, 457, 458, 459, 460, 461, 462, 0, 463, 465,
	464, 0, 467, 743, 466, 0, 468, 469, 0, 0,
	470, 471, 472, 473, 474, 475, 478, 0, 0, 476,
	477, 479, 480, 0, 481, 482, 484, 487, 483, 485,
	486, 488, 501, 502, 489, 490, 491, 492, 493, 494,
	495, 496, 497, 498, 499, 500, 504, 0, 503, 0,
	505, 506, 507, 508, 509, 516, 518, 519, 514, 515,
	517, 520, 521, 523, 511, 512, 513, 0, 522, 510,
	0, 305, 0, 524, 525, 526, 527, 0, 744, 528,
	745, 531, 532, 0, 0, 533, 0, 534, 0, 0,
	536, 537, 538, 0, 0, 539, 540, 746, 0, 541,
	0, 747, 542, 543, 535, 544, 545, 546, 547, 548,
	549, 550, 551, 552, 553, 0, 554, 555, 748, 556,
	557, 558, 749, 559, 560, 561, 750, 562, 751, 563,
	564, 0, 565, 566, 567, 0, 568, 569, 570, 571,
	572, 573, 574, 575, 752, 576, 577, 579, 578, 580,
	0, 581, 0, 582, 583, 584, 0, 0, 0, 0,
	0, 585, 586, 588, 0, 589, 590, 591, 592, 587,
	593, 594, 595, 596, 597, 598, 0, 600, 601, 599,
	602, 603, 0, 604, 605, 606, 607, 608, 753, 609,
	0, 610, 611, 618, 619, 620, 612, 613, 614, 621,
	622, 623, 624, 625, 626, 0, 628, 629, 627, 630,
	631, 632, 0, 633, 754, 634, 615, 616, 635, 636,
	0, 637, 638, 639, 640, 641, 642, 643, 755, 0,
	644, 0, 645, 646, 647, 648, 649, 650, 652, 617,
	653, 658, 659, 756, 654, 655, 656, 657, 757, 661,
	662, 663, 664, 0, 665, 666, 0, 660, 651, 0,
	667, 668, 669, 670, 671, 672, 0, 673, 674, 0,
	675, 758, 759, 760, 761, 0, 687, 0, 676, 678,
	679, 680, 681, 762, 682, 763, 0, 683, 684, 685,
	686, 677, 688, 689, 0, 0, 690, 691, 693, 695,
	696, 692, 694, 697, 0, 698, 0, 0, 699, 700,
	701, 764, 765, 766, 0, 703, 702, 704, 705, 706,
	767, 707, 708, 709, 2197, 0, 0, 0, 710, 711,
	768, 712, 713, 714, 0, 0, 0, 0, 0, 0,
	0, 306, 307, 309, 308, 310, 311, 312, 313, 0,
	314, 315, 0, 0, 0, 0, 0, 715, 941, 0,
	0, 316, 0, 317, 318, 319, 0, 320, 321, 322,
	323, 324, 325, 326, 716, 717, 0, 327, 718, 328,
	719, 0, 720, 329, 330, 331, 332, 333, 334, 335,
	0, 0, 0, 336, 721, 722, 723, 0, 337, 338,
	724, 0, 0, 0, 339, 340, 341, 342, 343, 344,
	345, 346, 0, 0, 348, 349, 350, 347, 351, 0,
	352, 0, 353, 354, 355, 356, 357, 358, 359, 0,
	360, 361, 362, 0, 363, 364, 365, 0, 0, 0,
	0, 0, 0, 0, 366, 367, 368, 2204, 370, 0,
	371, 373, 725, 726, 0, 376, 378, 372, 374, 0,
	377, 375, 379, 0, 380, 381, 382, 0, 0, 383,
	384, 385, 0, 386, 387, 388, 0, 389, 390, 391,
	0, 392, 393, 727, 394, 395, 396, 398, 400, 397,
	399, 401, 402, 403, 404, 405, 728, 729, 406, 0,
	303, 0, 0, 0, 0, 0, 407, 408, 409, 730,
	0, 0, 0, 410, 0, 411, 412, 413, 0, 414,
	415, 0, 0, 416, 417, 418, 731, 732, 419, 420,
	421, 422, 423, 424, 425, 426, 427, 0, 428, 733,
	0, 734, 429, 0, 430, 431, 432, 433, 434, 435,
	436, 735, 736, 737, 529, 0, 437, 438, 439, 0,
	440, 441, 442, 443, 444, 0, 0, 0, 304, 445,
	446, 447, 0, 0, 738, 448, 530, 449, 739, 740,
	0, 741, 0, 450, 451, 453, 0, 742, 0, 452,
	454, 455, 0, 456, 0, 0, 0, 457, 458, 459,
	460, 461, 462, 0, 463, 465, 464, 0, 467, 743,
	466, 0, 468, 469, 0, 0, 470, 471, 472, 473,
	474, 475, 478, 0, 0, 476, 477, 479, 480, 0,
	481, 482, 484, 487, 483, 485, 486, 488, 501, 502,
	489, 490, 491, 492, 493, 494, 495, 496, 497, 498,
	499, 500, 504, 0, 503, 0, 505, 506, 507, 508,
	509, 516, 518, 519, 514, 515, 517, 520, 521, 523,
	511, 512, 513, 0, 522, 510, 0, 305, 0, 524,
	525, 526, 527, 0, 744, 528, 745, 531, 532, 0,
	0, 533, 0, 534, 0, 0, 536, 537, 538, 0,
	0, 539, 540, 746, 0, 541, 0, 747, 542, 543,
	535, 544, 545, 546, 547, 548, 549, 550, 551, 552,
	553, 0, 554, 555, 748, 556, 557, 558, 749, 559,
	560, 561, 750, 562, 751, 563, 564, 0, 565, 566,
	567, 0, 568, 569, 570, 571, 572, 573, 574, 575,
	752, 576, 577, 579, 578, 580, 0, 581, 0, 582,
	583, 584, 0, 0, 0, 0, 0, 585, 586, 588,
	0, 589, 590, 591, 592, 587, 593, 594, 595, 596,
	597, 598, 0, 600, 601, 599, 602, 603, 0, 2612,
	605, 606, 607, 608, 753, 609, 0, 610, 611, 618,
	619, 620, 612, 613, 614, 2613, 622, 623, 624, 625,
	626, 0, 2201, 629, 627, 630, 631, 632, 0, 633,
	754, 634, 615, 616, 635, 636, 0, 637, 638, 639,
	640, 641, 642, 643, 755, 0, 644, 0, 645, 646,
	647, 648, 649, 650, 652, 617, 653, 658, 659, 756,
	654, 655, 656, 657, 757, 661, 662, 663, 664, 0,
	665, 666, 0, 660, 651, 2203, 667, 668, 669, 670,
	671, 672, 0, 673, 674, 0, 675, 758, 759, 760,
	761, 0, 687, 0, 676, 678, 679, 680, 681, 762,
	682, 763, 0, 683, 684, 2614, 686, 677, 688, 689,
	0, 0, 690, 691, 693, 695, 696, 692, 694, 697,
	0, 698, 0, 0, 699, 700, 701, 764, 765, 766,
	0, 703, 702, 704, 705, 706, 767, 707, 708, 709,
	2226, 0, 0, 0, 710, 711, 768, 712, 713, 714,
	0, 0, 0, 0, 0, 0, 0, 306, 307, 309,
	308, 310, 311, 312, 313, 0, 314, 315, 0, 0,
	0, 0, 0, 0, 941, 0, 0, 316, 0, 317,
	318, 319, 1327, 320, 321, 322, 323, 324, 325, 326,
	0, 2232, 0, 327, 2222, 328, 2238, 0, 2245, 329,
	330, 331, 332, 333, 334, 335, 0, 0, 0, 336,
	2248, 2249, 0, 0, 337, 338, 0, 0, 1635, 0,
	339, 340, 341, 342, 343, 344, 345, 346, 0, 0,
	348, 349, 350, 347, 351, 0, 352, 0, 353, 354,
	355, 356, 357, 358, 359, 0, 360, 361, 362, 1328,
	363, 364, 365, 0, 0, 0, 0, 0, 0, 0,
	366, 367, 368, 369, 370, 1310, 371, 373, 2236, 2235,
	0, 376, 378, 372, 374, 0, 377, 375, 379, 0,
	380, 381, 382, 0, 0, 383, 1295, 385, 0, 386,
	387, 388, 0, 389, 390, 391, 0, 392, 393, 0,
	394, 395, 396, 398, 400, 397, 399, 401, 402, 403,
	404, 405, 0, 0, 406, 0, 0, 0, 0, 0,
	0, 0, 407, 408, 409, 2234, 0, 0, 0, 410,
	0, 411, 412, 413, 0, 414, 415, 0, 1329, 416,
	417, 418, 2243, 2244, 419, 420, 421, 422, 423, 424,
	425, 426, 427, 0, 428, 0, 0, 0, 429, 0,
	430, 431, 432, 433, 434, 435, 436, 0, 0, 0,
	529, 1331, 437, 438, 439, 0, 440, 441, 442, 443,
	444, 0, 0, 0, 0, 445, 446, 447, 0, 1330,
	0, 448, 530, 449, 2229, 2230, 0, 2225, 0, 450,
	451, 453, 1332, 0, 1333, 452, 454, 455, 1334, 456,
	0, 0, 0, 457, 458, 459, 460, 461, 462, 0,
	463, 465, 464, 0, 467, 0, 466, 1335, 468, 469,
	1336, 0, 470, 471, 472, 473, 474, 475, 478, 0,
	0, 476, 477, 479, 480, 0, 481, 482, 484, 487,
	483, 485, 486, 488, 501, 502, 489, 490, 491, 492,
	493, 494, 495, 496, 497, 498, 499, 500, 504, 0,
	503, 1337, 505, 506, 507, 508, 509, 516, 518, 519,
	514, 515, 517, 520, 521, 523, 511, 512, 513, 1338,
	522, 510, 0, 0, 1339, 524, 525, 526, 527, 0,
	0, 528, 2237, 531, 532, 0, 0, 533, 0, 534,
	0, 0, 536, 537, 538, 0, 0, 539, 540, 0,
	1340, 541, 1341, 0, 542, 543, 535, 544, 545, 546,
	547, 548, 549, 550, 551, 552, 553, 0, 554, 555,
	2219, 556, 557, 558, 2220, 559, 560, 561, 0, 562,
	0, 563, 564, 0, 565, 566, 567, 0, 568, 569,
	570, 571, 572, 573, 574, 575, 2233, 576, 577, 579,
	578, 580, 0, 581, 0, 582, 583, 584, 0, 0,
	0, 0, 0, 585, 586, 588, 0, 589, 590, 591,
	592, 587, 593, 594, 595, 596, 597, 598, 0, 600,
	601, 599, 602, 603, 1342, 604, 605, 606, 607, 608,
	0, 609, 0, 610, 611, 618, 619, 620, 612, 613,
	614, 621, 622, 623, 624, 625, 626, 0, 628, 629,
	627, 630, 631, 632, 0, 633, 0, 634, 615, 616,
	635, 636, 1343, 637, 638, 639, 640, 641, 642, 643,
	2231, 0, 644, 0, 645, 646, 647, 648, 649, 650,
	652, 617, 653, 658, 659, 2247, 654, 655, 656, 657,
	0, 661, 662, 663, 664, 0, 665, 666, 0, 660,
	651, 0, 667, 668, 669, 670, 671, 672, 0, 673,
	674, 0, 675, 2239, 2240, 2241, 2242, 0, 687, 0,
	676, 678, 679, 680, 681, 0, 682, 0, 0, 683,
	684, 685, 686, 677, 688, 689, 0, 0, 690, 691,
	693, 695, 696, 692, 694, 697, 0, 698, 0, 0,
	699, 700, 701, 0, 2223, 2246, 0, 703, 702, 704,
	705, 706, 0, 707, 708, 709, 0, 0, 0, 0,
	710, 711, 0, 712, 713, 714, 300, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 306, 307, 309, 308, 310, 311, 312,
	313, 0, 314, 315, 0, 0, 0, 0, 0, 715,
	0, 0, 2213, 316, 0, 317, 318, 319, 0, 320,
	321, 322, 323, 324, 325, 326, 716, 717, 0, 327,
	718, 328, 719, 0, 720, 329, 330, 331, 332, 333,
	334, 335, 0, 0, 0, 336, 721, 722, 723, 0,
	337, 338, 724, 0, 0, 0, 339, 340, 341, 342,
	343, 344, 345, 346, 0, 0, 348, 349, 350, 347,
	351, 0, 352, 0, 353, 354, 355, 356, 357, 358,
	359, 0, 360, 361, 362, 0, 363, 364, 365, 0,
	0, 0, 0, 0, 0, 0, 366, 367, 368, 369,
	370, 0, 371, 373, 725, 726, 0, 376, 378, 372,
	374, 0, 377, 375, 379, 0, 380, 381, 382, 0,
	0, 383, 384, 385, 0, 386, 387, 388, 0, 389,
	390, 391, 0, 392, 393, 727, 394, 395, 396, 398,
	400, 397, 399, 401, 402, 403, 404, 405, 728, 729,
	406, 0, 303, 0, 0, 0, 0, 0, 407, 408,
	409, 730, 0, 0, 0, 410, 0, 411, 412, 413,
	0, 414, 415, 0, 0, 416, 417, 418, 731, 732,
	419, 420, 421, 422, 423, 424, 425, 426, 427, 0,
	428, 733, 0, 734, 429, 0, 430, 431, 432, 433,
	434, 435, 436, 735, 736, 737, 529, 0, 437, 438,
	439, 0, 440, 441, 442, 443, 444, 0, 0, 0,
	304, 445, 446, 447, 0, 0, 738, 448, 530, 449,
	739, 740, 0, 741, 0, 450, 451, 453, 0, 742,
	0, 452, 454, 455, 0, 456, 0, 0, 0, 457,
	458, 459, 460, 461, 462, 0, 463, 465, 464, 0,
	467, 743, 466, 0, 468, 469, 0, 0, 470, 471,
	472, 473, 474, 475, 478, 0, 0, 476, 477, 479,
	480, 0, 481, 482, 484, 487, 483, 485, 486, 488,
	501, 502, 489, 490, 491, 492, 493, 494, 495, 496,
	497, 498, 499, 500, 504, 0, 503, 0, 505, 506,
	507, 508, 509, 516, 518, 519, 514, 515, 517, 520,
	521, 523, 511, 512, 513, 0, 522, 510, 0, 305,
	0, 524, 525, 526, 527, 0, 744, 528, 745, 531,
	532, 0, 0, 533, 0, 534, 0, 0, 536, 537,
	538, 0, 0, 539, 540, 746, 0, 541, 0, 747,
	542, 543, 535, 544, 545, 546, 547, 548, 549, 550,
	551, 552, 553, 0, 554, 555, 748, 556, 557, 558,
	749, 559, 560, 561, 750, 562, 751, 563, 564, 0,
	565, 566, 567, 0, 568, 569, 570, 571, 572, 573,
	574, 575, 752, 576, 577, 579, 578, 580, 0, 581,
	0, 582, 583, 584, 0, 0, 0, 0, 0, 585,
	586, 588, 0, 589, 590, 591, 592, 587, 593, 594,
	595, 596, 597, 598, 0, 600, 601, 599, 602, 603,
	0, 604, 605, 606, 607, 608, 753, 609, 0, 610,
	611, 618, 619, 620, 612, 613, 614, 621, 622, 623,
	624, 625, 626, 0, 628, 629, 627, 630, 631, 632,
	0, 633, 754, 634, 615, 616, 635, 636, 0, 637,
	638, 639, 640, 641, 642, 643, 755, 0, 644, 0,
	645, 646, 647, 648, 649, 650, 652, 617, 653, 658,
	659, 756, 654, 655, 656, 657, 757, 661, 662, 663,
	664, 0, 665, 666, 0, 660, 651, 0, 667, 668,
	669, 670, 671, 672, 0, 673, 674, 0, 675, 758,
	759, 760, 761, 0, 687, 0, 676, 678, 679, 680,
	681, 762, 682, 763, 0, 683, 684, 685, 686, 677,
	688, 689, 0, 0, 690, 691, 693, 695, 696, 692,
	694, 697, 0, 698, 0, 0, 699, 700, 701, 764,
	765, 766, 0, 703, 702, 704, 705, 706, 767, 707,
	708, 709, 300, 0, 0, 0, 710, 711, 768, 712,
	713, 714, 0, 0, 0, 0, 0, 0, 0, 306,
	307, 309, 308, 310, 311, 312, 313, 0, 314, 315,
	0, 0, 0, 0, 0, 715, 941, 0, 0, 316,
	0, 317, 318, 319, 0, 320, 321, 322, 323, 324,
	325, 326, 716, 717, 0, 327, 718, 328, 719, 0,
	720, 329, 330, 331, 332, 333, 334, 335, 0, 0,
	0, 336, 721, 722, 723, 0, 337, 338, 724, 0,
	0, 0, 339, 340, 341, 342, 343, 344, 345, 346,
	0, 0, 348, 349, 350, 347, 351, 0, 352, 0,
	353, 354, 355, 356, 357, 358, 359, 0, 360, 361,
	362, 0, 363, 364, 365, 0, 0, 0, 0, 0,
	0, 0, 366, 367, 368, 369, 370, 0, 371, 373,
	725, 726, 0, 376, 378, 372, 374, 0, 377, 375,
	379, 0, 380, 381, 382, 0, 0, 383, 384, 385,
	0, 386, 387, 388, 0, 389, 390, 391, 0, 392,
	393, 727, 394, 395, 396, 398, 400, 397, 399, 401,
	402, 403, 404, 405, 728, 729, 406, 0, 0, 0,
	0, 0, 0, 0, 407, 408, 409, 730, 0, 0,
	0, 410, 0, 411, 412, 413, 0, 414, 415, 0,
	0, 416, 417, 418, 731, 732, 419, 420, 421, 422,
	423, 424, 425, 426, 427, 0, 428, 733, 0, 734,
	429, 0, 430, 431, 432, 433, 434, 435, 436, 735,
	736, 737, 529, 0, 437, 438, 439, 0, 440, 441,
	442, 443, 444, 0, 0, 0, 0, 445, 446, 447,
	0, 0, 738, 448, 530, 449, 739, 740, 0, 741,
	0, 450, 451, 453, 0, 742, 0, 452, 454, 455,
	0, 456, 0, 0, 0, 457, 458, 459, 460, 461,
	462, 0, 463, 465, 464, 0, 467, 743, 466, 0,
	468, 469, 0, 0, 470, 471, 472, 473, 474, 475,
	478, 0, 0, 476, 477, 479, 480, 0, 481, 482,
	484, 487, 483, 485, 486, 488, 501, 502, 489, 490,
	491, 492, 493, 494, 495, 496, 497, 498, 499, 500,
	504, 0, 503, 0, 505, 506, 507, 508, 509, 516,
	518, 519, 514, 515, 517, 520, 521, 523, 511, 512,
	513, 0, 522, 510, 0, 0, 0, 524, 525, 526,
	527, 0, 744, 528, 745, 531, 532, 0, 0, 533,
	0, 534, 0, 0, 536, 537, 538, 0, 0, 539,
	540, 746, 0, 541, 0, 747, 542, 543, 535, 544,
	545, 546, 547, 548, 549, 550, 551, 552, 553, 0,
	554, 555, 748, 556, 557, 558, 749, 559, 560, 561,
	750, 562, 751, 563, 564, 0, 565, 566, 567, 0,
	568, 569, 570, 571, 572, 573, 574, 575, 752, 576,
	577, 579, 578, 580, 0, 581, 0, 582, 583, 584,
	0, 0, 0, 0, 0, 585, 586, 588, 0, 589,
	590, 591, 592, 587, 593, 594, 595, 596, 597, 598,
	0, 600, 601, 599, 602, 603, 0, 604, 605, 606,
	607, 608, 753, 609, 0, 610, 611, 618, 619, 620,
	612, 613, 614, 621, 622, 623, 624, 625, 626, 0,
	628, 629, 627, 630, 631, 632, 0, 633, 754, 634,
	615, 616, 635, 636, 0, 637, 638, 639, 640, 641,
	642, 643, 755, 0, 644, 0, 645, 646, 647, 648,
	649, 650, 652, 617, 653, 658, 659, 756, 654, 655,
	656, 657, 757, 661, 662, 663, 664, 0, 665, 666,
	0, 660, 651, 0, 667, 668, 669, 670, 671, 672,
	0, 673, 674, 0, 675, 758, 759, 760, 761, 0,
	687, 0, 676, 678, 679, 680, 681, 762, 682, 763,
	0, 683, 684, 685, 686, 677, 688, 689, 0, 0,
	690, 691, 693, 695, 696, 692, 694, 697, 0, 698,
	0, 0, 699, 700, 701, 764, 765, 766, 0, 703,
	702, 704, 705, 706, 767, 707, 708, 709, 0, 0,
	0, 0, 710, 711, 768, 712, 713, 714, 0, 0,
	0, 0, 0, 0, 0, 0, 1671, 1670, 0, 0,
	0, 0, 1668, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4498, 306, 307, 309, 308, 310, 311, 312,
	313, 0, 314, 315, 0, 0, 0, 0, 0, 715,
	0, 0, 0, 316, 0, 317, 318, 319, 1327, 320,
	321, 322, 323, 324, 325, 326, 716, 717, 0, 327,
	718, 328, 719, 0, 720, 329, 330, 331, 332, 333,
	334, 335, 0, 0, 0, 336, 721, 722, 723, 0,
	337, 338, 724, 0, 1635, 0, 339, 340, 341, 342,
	343, 344, 345, 346, 0, 0, 348, 349, 350, 347,
	351, 0, 352, 0, 353, 354, 355, 356, 357, 358,
	359, 0, 360, 361, 362, 1328, 363, 364, 365, 0,
	0, 0, 0, 0, 0, 0, 366, 367, 368, 369,
	370, 0, 371, 373, 725, 726, 0, 376, 378, 372,
	374, 0, 377, 375, 379, 0, 380, 381, 382, 0,
	0, 383, 384, 385, 0, 386, 387, 388, 0, 389,
	390, 391, 0, 392, 393, 727, 394, 395, 396, 398,
	400, 397, 399, 401, 402, 403, 404, 405, 728, 729,
	406, 0, 303, 0, 0, 0, 0, 0, 407, 408,
	409, 730, 0, 0, 0, 410, 0, 411, 412, 413,
	0, 414, 415, 0, 1329, 416, 417, 418, 731, 732,
	419, 420, 421, 422, 423, 424, 425, 426, 427, 0,
	428, 733, 0, 734, 429, 0, 430, 431, 432, 433,
	434, 435, 436, 735, 736, 737, 529, 1331, 437, 438,
	439, 0, 440, 441, 442, 443, 444, 0, 0, 0,
	0, 445, 446, 447, 0, 1330, 738, 448, 530, 449,
	739, 740, 0, 741, 0, 450, 451, 453, 1332, 742,
	1333, 452, 454, 455, 1334, 456, 0, 0, 0, 457,
	458, 459, 460, 461, 462, 0, 463, 465, 464, 0,
	467, 743, 466, 1335, 468, 469, 1336, 0, 470, 471,
	472, 473, 474, 475, 478, 0, 0, 476, 477, 479,
	480, 0, 481, 482, 484, 487, 483, 485, 486, 488,
	501, 502, 489, 490, 491, 492, 493, 494, 495, 496,
	497, 498, 499, 500, 504, 0, 503, 1337, 505, 506,
	507, 508, 509, 516, 518, 519, 514, 515, 517, 520,
	521, 523, 511, 512, 513, 1338, 522, 510, 0, 0,
	1339, 524, 525, 526, 527, 4374, 744, 528, 745, 531,
	532, 0, 0, 533, 0, 534, 0, 0, 536, 537,
	538, 0, 0, 539, 540, 746, 1340, 541, 1341, 747,
	542, 543, 535, 544, 545, 546, 547, 548, 549, 550,
	551, 552, 553, 0, 554, 555, 748, 556, 557, 558,
	749, 559, 560, 561, 750, 562, 751, 563, 564, 0,
	565, 566, 567, 0, 568, 569, 570, 571, 572, 573,
	574, 575, 752, 576, 577, 579, 578, 580, 0, 581,
	0, 582, 583, 584, 0, 0, 0, 0, 0, 585,
	586, 588, 0, 589, 590, 591, 592, 587, 593, 594,
	595, 596, 597, 598, 0, 600, 601, 599, 602, 603,
	1342, 604, 605, 606, 607, 608, 753, 609, 0, 610,
	611, 618, 619, 620, 612, 613, 614, 621, 622, 623,
	624, 625, 626, 0, 628, 629, 627, 630, 631, 632,
	0, 633, 754, 634, 615, 616, 635, 636, 1343, 637,
	638, 639, 640, 641, 642, 643, 755, 0, 644, 0,
	645, 646, 647, 648, 649, 650, 652, 617, 653, 658,
	659, 756, 654, 655, 656, 657, 757, 661, 662, 663,
	664, 0, 665, 666, 0, 660, 651, 0, 667, 668,
	669, 670, 671, 672, 0, 673, 674, 0, 675, 758,
	759, 760, 761, 0, 687, 0, 676, 678, 679, 680,
	681, 762, 682, 763, 0, 683, 684, 685, 686, 677,
	688, 689, 0, 0, 690, 691, 693, 695, 696, 692,
	694, 697, 0, 698, 0, 0, 699, 700, 701, 764,
	765, 766, 0, 703, 702, 704, 705, 706, 767, 707,
	708, 709, 0, 0, 0, 0, 710, 711, 768, 712,
	713, 714, 2496, 0, 1671, 1670, 0, 0, 0, 0,
	1668, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 306, 307, 309, 308, 310, 311, 312, 313, 0,
	314, 315, 0, 0, 0, 0, 0, 715, 0, 0,
	0, 316, 0, 317, 318, 319, 1327, 320, 321, 322,
	323, 324, 325, 326, 716, 717, 0, 327, 718, 328,
	719, 0, 720, 329, 330, 331, 332, 333, 334, 335,
	0, 0, 0, 336, 721, 722, 723, 0, 337, 338,
	724, 0, 1635, 0, 339, 340, 341, 342, 343, 344,
	345, 346, 0, 0, 348, 349, 350, 347, 351, 0,
	352, 0, 353, 354, 355, 356, 357, 358, 359, 0,
	360, 361, 362, 1328, 363, 364, 365, 0, 0, 0,
	0, 0, 0, 0, 366, 367, 368, 369, 370, 0,
	371, 373, 725, 726, 0, 376, 378, 372, 374, 0,
	377, 375, 379, 0, 380, 381, 382, 0, 0, 383,
	384, 385, 0, 386, 387, 388, 0, 389, 390, 391,
	0, 392, 393, 727, 394, 395, 396, 398, 400, 397,
	399, 401, 402, 403, 404, 405, 728, 729, 406, 0,
	303, 0, 0, 0, 0, 0, 407, 408, 409, 730,
	0, 0, 0, 410, 0, 411, 412, 413, 0, 414,
	415, 0, 1329, 416, 417, 418, 731, 732, 419, 420,
	421, 422, 423, 424, 425, 426, 427, 0, 428, 733,
	0, 734, 429, 0, 430, 431, 432, 433, 434, 435,
	436, 1724, 736, 737, 529, 1331, 437, 438, 439, 0,
	440, 441, 442, 443, 444, 0, 0, 0, 0, 445,
	446, 447, 0, 1330, 738, 448, 530, 449, 739, 740,
	0, 741, 0, 450, 451, 453, 1332, 742, 1333, 452,
	454, 455, 1334, 456, 0, 0, 0, 457, 458, 459,
	460, 461, 462, 0, 463, 465, 464, 0, 467, 743,
	466, 1335, 468, 469, 1336, 0, 470, 471, 472, 473,
	474, 475, 478, 0, 0, 476, 477, 479, 480, 0,
	481, 482, 484, 487, 483, 485, 486, 488, 501, 502,
	489, 490, 491, 492, 493, 494, 495, 496, 497, 498,
	499, 500, 504, 0, 503, 1337, 505, 506, 507, 508,
	509, 516, 518, 519, 514, 515, 517, 520, 521, 523,
	511, 512, 513, 1338, 522, 510, 0, 0, 1339, 524,
	525, 526, 527, 0, 744, 528, 745, 531, 532, 0,
	0, 533, 0, 534, 0, 0, 536, 537, 538, 0,
	0, 539, 540, 746, 1340, 541, 1341, 747, 542, 543,
	535, 544, 545, 546, 547, 548, 549, 550, 551, 552,
	553, 0, 554, 555, 748, 556, 557, 558, 749, 559,
	560, 561, 750, 562, 751, 563, 564, 0, 565, 566,
	567, 0, 568, 569, 570, 571, 572, 573, 574, 575,
	752, 576, 577, 579, 578, 580, 0, 581, 0, 582,
	583, 584, 0, 0, 0, 0, 0, 585, 586, 588,
	0, 589, 590, 591, 592, 587, 593, 594, 595, 596,
	597, 598, 0, 600, 601, 599, 602, 603, 1342, 604,
	605, 606, 607, 608, 753, 609, 0, 610, 611, 618,
	619, 620, 612, 613, 614, 621, 622, 623, 624, 625,
	626, 0, 628, 629, 627, 630, 631, 632, 0, 633,
	754, 634, 615, 616, 635, 636, 1343, 637, 638, 639,
	640, 641, 642, 643, 755, 0, 644, 0, 645, 646,
	647, 648, 649, 650, 652, 617, 653, 658, 659, 756,
	654, 655, 656, 657, 757, 661, 662, 663, 664, 0,
	665, 666, 0, 660, 651, 0, 667, 668, 669, 670,
	671, 672, 0, 673, 674, 0, 675, 758, 759, 760,
	761, 0, 687, 0, 676, 678, 679, 680, 681, 762,
	682, 763, 0, 683, 684, 685, 686, 677, 688, 689,
	0, 0, 690, 691, 693, 695, 696, 692, 694, 697,
	0, 698, 0, 0, 699, 700, 701, 764, 765, 766,
	0, 703, 702, 704, 705, 706, 767, 707, 708, 709,
	0, 0, 0, 0, 710, 711, 768, 712, 713, 714,
	2262, 0, 1671, 1670, 0, 0, 0, 0, 1668, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 306,
	307, 309, 308, 310, 311, 312, 313, 0, 314, 315,
	0, 0, 0, 0, 0, 715, 0, 0, 0, 316,
	0, 317, 318, 319, 1327, 320, 321, 322, 323, 324,
	325, 326, 716, 717, 0, 327, 718, 328, 719, 0,
	720, 329, 330, 331, 332, 333, 334, 335, 0, 0,
	0, 336, 721, 722, 723, 0, 337, 338, 724, 0,
	1635, 0, 339, 340, 341, 342, 343, 344, 345, 346,
	0, 0, 348, 349, 350, 347, 351, 0, 352, 0,
	353, 354, 355, 356, 357, 358, 359, 0, 360, 361,
	362, 1328, 363, 364, 365, 0, 0, 0, 0, 0,
	0, 0, 366, 367, 368, 369, 370, 0, 371, 373,
	725, 726, 0, 376, 378, 372, 374, 0, 377, 375,
	379, 0, 380, 381, 382, 0, 0, 383, 384, 385,
	0, 386, 387, 388, 0, 389, 390, 391, 0, 392,
	393, 727, 394, 395, 396, 398, 400, 397, 399, 401,
	402, 403, 404, 405, 728, 729, 406, 0, 303, 0,
	0, 0, 0, 0, 407, 408, 409, 730, 0, 0,
	0, 410, 0, 411, 412, 413, 0, 414, 415, 0,
	1329, 416, 417, 418, 731, 732, 419, 420, 421, 422,
	423, 424, 425, 426, 427, 0, 428, 733, 0, 734,
	429, 0, 430, 431, 432, 433, 434, 435, 436, 735,
	736, 737, 529, 1331, 437, 438, 439, 0, 440, 441,
	442, 443, 444, 0, 0, 0, 0, 445, 446, 447,
	0, 1330, 738, 448, 530, 449, 739, 740, 0, 741,
	0, 450, 451, 453, 1332, 742, 1333, 452, 454, 455,
	1334, 456, 0, 0, 0, 457, 458, 459, 460, 461,
	462, 0, 463, 465, 464, 0, 467, 743, 466, 1335,
	468, 469, 1336, 0, 470, 471, 472, 473, 474, 475,
	478, 0, 0, 476, 477, 479, 480, 0, 481, 482,
	484, 487, 483, 485, 486, 488, 501, 502, 489, 490,
	491, 492, 493, 494, 495, 496, 497, 498, 499, 500,
	504, 0, 503, 1337, 505, 506, 507, 508, 509, 516,
	518, 519, 514, 515, 517, 520, 521, 523, 511, 512,
	513, 1338, 522, 510, 0, 0, 1339, 524, 525, 526,
	527, 0, 744, 528, 745, 531, 532, 0, 0, 533,
	0, 534, 0, 0, 536, 537, 538, 0, 0, 539,
	540, 746, 1340, 541, 1341, 747, 542, 543, 535, 544,
	545, 546, 547, 548, 549, 550, 551, 552, 553, 0,
	554, 555, 748, 556, 557, 558, 749, 559, 560, 561,
	750, 562, 751, 563, 564, 0, 565, 566, 567, 0,
	568, 569, 570, 571, 572, 573, 574, 575, 752, 576,
	577, 579, 578, 580, 0, 581, 0, 582, 583, 584,
	0, 0, 0, 0, 0, 585, 586, 588, 0, 589,
	590, 591, 592, 587, 593, 594, 595, 596, 597, 598,
	0, 600, 601, 599, 602, 603, 1342, 604, 605, 606,
	607, 608, 753, 609, 0, 610, 611, 618, 619, 620,
	612, 613, 614, 621, 622, 623, 624, 625, 626, 0,
	628, 629, 627, 630, 631, 632, 0, 633, 754, 634,
	615, 616, 635, 636, 1343, 637, 638, 639, 640, 641,
	642, 643, 755, 0, 644, 0, 645, 646, 647, 648,
	649, 650, 652, 617, 653, 658, 659, 756, 654, 655,
	656, 657, 757, 661, 662, 663, 664, 0, 665, 666,
	0, 660, 651, 0, 667, 668, 669, 670, 671, 672,
	0, 673, 674, 0, 675, 758, 759, 760, 761, 0,
	687, 0, 676, 678, 679, 680, 681, 762, 682, 763,
	0, 683, 684, 685, 686, 677, 688, 689, 0, 0,
	690, 691, 693, 695, 696, 692, 694, 697, 0, 698,
	0, 0, 699, 700, 701, 764, 765, 766, 0, 703,
	702, 704, 705, 706, 767, 707, 708, 709, 0, 0,
	0, 0, 710, 711, 768, 712, 713, 714, 1853, 0,
	1671, 1670, 0, 0, 0, 0, 1668, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 306, 307, 309,
	308, 310, 311, 312, 313, 0, 314, 315, 0, 0,
	0, 0, 0, 715, 0, 0, 0, 316, 0, 317,
	318, 319, 1327, 320, 321, 322, 323, 324, 325, 326,
	716, 717, 0, 327, 718, 328, 719, 0, 720, 329,
	330, 331, 332, 333, 334, 335, 0, 0, 0, 336,
	721, 722, 723, 0, 337, 338, 724, 0, 1635, 0,
	339, 340, 341, 342, 343, 344, 345, 346, 0, 0,
	348, 349, 350, 347, 351, 0, 352, 0, 353, 354,
	355, 356, 357, 358, 359, 0, 360, 361, 362, 1328,
	363, 364, 365, 0, 0, 0, 0, 0, 0, 0,
	366, 367, 368, 369, 370, 0, 371, 373, 725, 726,
	0, 376, 378, 372, 374, 0, 377, 375, 379, 0,
	380, 381, 382, 0, 0, 383, 384, 385, 0, 386,
	387, 388, 0, 389, 390, 391, 0, 392, 393, 727,
	394, 395, 396, 398, 400, 397, 399, 401, 402, 403,
	404, 405, 728, 729, 406, 0, 303, 0, 0, 0,
	0, 0, 1851, 408, 409, 730, 0, 0, 0, 410,
	0, 411, 412, 413, 0, 414, 415, 0, 1329, 416,
	417, 418, 731, 732, 419, 420, 421, 422, 423, 424,
	425, 426, 427, 0, 428, 733, 0, 734, 429, 0,
	430, 431, 432, 433, 434, 435, 436, 735, 736, 737,
	529, 1331, 437, 438, 439, 0, 440, 441, 442, 443,
	444, 0, 0, 0, 0, 445, 446, 447, 0, 1330,
	738, 448, 530, 449, 739, 740, 0, 741, 0, 450,
	451, 453, 1332, 742, 1333, 452, 454, 455, 1334, 456,
	0, 0, 0, 457, 458, 459, 460, 461, 462, 0,
	463, 465, 464, 0, 467, 743, 466, 1335, 468, 469,
	1336, 0, 470, 471, 472, 473, 474, 475, 478, 0,
	0, 476, 477, 479, 480, 0, 481, 482, 484, 487,
	483, 485, 486, 488, 501, 502, 489, 490, 491, 492,
	493, 494, 495, 496, 497, 498, 499, 500, 504, 0,
	503, 1337, 505, 506, 507, 508, 509, 516, 518, 519,
	514, 515, 517, 520, 521, 523, 511, 512, 513, 1338,
	522, 510, 0, 0, 1339, 524, 525, 526, 527, 0,
	744, 528, 745, 531, 532, 0, 0, 533, 0, 534,
	0, 0, 536, 537, 538, 0, 0, 539, 540, 746,
	1340, 541, 1341, 747, 542, 543, 535, 544, 545, 546,
	547, 548, 549, 550, 551, 552, 553, 0, 554, 555,
	748, 556, 557, 558, 749, 559, 560, 561, 750, 562,
	751, 563, 564, 0, 565, 566, 567, 0, 568, 569,
	570, 571, 572, 573, 1852, 575, 752, 576, 577, 579,
	578, 580, 0, 581, 0, 582, 583, 584, 0, 0,
	0, 0, 0, 585, 586, 588, 0, 589, 590, 591,
	592, 587, 593, 594, 595, 596, 597, 598, 0, 600,
	601, 599, 602, 603, 1342, 604, 605, 606, 607, 608,
	753, 609, 0, 610, 611, 618, 619, 620, 612, 613,
	614, 621, 1850, 623, 624, 625, 626, 0, 628, 629,
	627, 630, 631, 632, 0, 633, 754, 634, 615, 616,
	635, 636, 1343, 637, 638, 639, 640, 641, 642, 643,
	755, 0, 644, 0, 645, 646, 647, 648, 649, 650,
	652, 617, 653, 658, 659, 756, 654, 655, 656, 657,
	757, 661, 662, 663, 664, 0, 665, 666, 0, 660,
	651, 0, 667, 668, 669, 670, 671, 672, 0, 673,
	674, 0, 675, 758, 759, 760, 761, 0, 687, 0,
	676, 678, 679, 680, 681, 762, 682, 763, 0, 683,
	684, 685, 686, 677, 688, 689, 0, 0, 690, 691,
	693, 695, 696, 692, 694, 697, 0, 698, 0, 0,
	699, 700, 701, 764, 765, 766, 0, 703, 702, 704,
	705, 706, 767, 707, 708, 709, 0, 0, 0, 0,
	710, 711, 768, 712, 713, 714, 1721, 0, 1671, 1670,
	0, 0, 0, 0, 1668, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 306, 307, 309, 308, 310,
	311, 312, 313, 0, 314, 315, 0, 0, 0, 0,
	0, 715, 0, 0, 0, 316, 0, 317, 318, 319,
	1327, 320, 321, 322, 323, 324, 325, 326, 716, 717,
	0, 327, 718, 328, 719, 0, 720, 329, 330, 331,
	332, 333, 334, 335, 0, 0, 0, 336, 721, 722,
	723, 0, 337, 338, 724, 0, 1635, 0, 339, 340,
	341, 342, 343, 344, 345, 346, 0, 0, 348, 349,
	350, 347, 351, 0, 352, 0, 353, 354, 355, 356,
	357, 358, 359, 0, 360, 361, 362, 1328, 363, 364,
	365, 0, 0, 0, 0, 0, 0, 0, 366, 367,
	368, 369, 370, 0, 371, 373, 725, 726, 0, 376,
	378, 372, 374, 0, 377, 375, 379, 0, 380, 381,
	382, 0, 0, 383, 384, 385, 0, 386, 387, 388,
	0, 389, 390, 391, 0, 392, 393, 727, 394, 395,
	396, 398, 400, 397, 399, 401, 402, 403, 404, 405,
	728, 729, 406, 0, 303, 0, 0, 0, 0, 0,
	407, 408, 409, 730, 0, 0, 0, 410, 0, 411,
	412, 413, 0, 414, 415, 0, 1329, 416, 417, 418,
	731, 732, 419, 420, 421, 422, 423, 424, 425, 426,
	427, 0, 428, 733, 0, 734, 429, 0, 430, 431,
	432, 433, 434, 435, 436, 1724, 736, 737, 529, 1331,
	437, 438, 439, 0, 440, 441, 442, 443, 444, 0,
	0, 0, 0, 445, 446, 447, 0, 1330, 738, 448,
	530, 449, 739, 740, 0, 741, 0, 450, 451, 453,
	1332, 742, 1333, 452, 454, 455, 1334, 456, 0, 0,
	0, 457, 458, 459, 460, 461, 462, 0, 463, 465,
	464, 0, 467, 743, 466, 1335, 468, 469, 1336, 0,
	470, 471, 472, 473, 474, 475, 478, 0, 0, 476,
	477, 479, 480, 0, 481, 482, 484, 487, 483, 485,
	486, 488, 501, 502, 489, 490, 491, 492, 493, 494,
	495, 496, 497, 498, 499, 500, 504, 0, 503, 1337,
	505, 506, 507, 508, 509, 516, 518, 519, 514, 515,
	517, 520, 521, 523, 511, 512, 513, 1338, 522, 510,
	0, 0, 1339, 524, 525, 526, 527, 0, 744, 528,
	745, 531, 532, 0, 0, 533, 0, 534, 0, 0,
	536, 537, 538, 0, 0, 539, 540, 746, 1340, 541,
	1341, 747, 542, 543, 535, 544, 545, 546, 547, 548,
	549, 550, 551, 552, 553, 0, 554, 555, 748, 556,
	557, 558, 749, 559, 560, 561, 750, 562, 751, 563,
	564, 0, 565, 566, 567, 0, 568, 569, 570, 571,
	572, 573, 574, 575, 752, 576, 577, 579, 578, 580,
	0, 581, 0, 582, 583, 584, 0, 0, 0, 0,
	0, 585, 586, 588, 0, 589, 590, 591, 592, 587,
	593, 594, 595, 596, 597, 598, 0, 600, 601, 599,
	602, 603, 1342, 604, 605, 606, 607, 608, 753, 609,
	0, 610, 611, 618, 619, 620, 612, 613, 614, 621,
	622, 623, 624, 625, 626, 0, 628, 629, 627, 630,
	631, 632, 0, 633, 754, 634, 615, 616, 635, 636,
	1343, 637, 638, 639, 640, 641, 642, 643, 755, 0,
	644, 0, 645, 646, 647, 648, 649, 650, 652, 617,
	653, 658, 659, 756, 654, 655, 656, 657, 757, 661,
	662, 663, 664, 0, 665, 666, 0, 660, 651, 0,
	667, 668, 669, 670, 671, 672, 0, 673, 674, 0,
	675, 758, 759, 760, 761, 0, 687, 0, 676, 678,
	679, 680, 681, 762, 682, 763, 0, 683, 684, 685,
	686, 677, 688, 689, 0, 0, 690, 691, 693, 695,
	696, 692, 694, 697, 0, 698, 0, 0, 699, 700,
	701, 764, 765, 766, 0, 703, 702, 704, 705, 706,
	767, 707, 708, 709, 0, 0, 0, 0, 710, 711,
	768, 712, 713, 714, 1666, 0, 1671, 1670, 0, 0,
	0, 0, 1668, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 306, 307, 309, 308, 310, 311, 312,
	313, 0, 314, 315, 0, 0, 0, 0, 0, 715,
	0, 0, 0, 316, 0, 317, 318, 319, 1327, 320,
	321, 322, 323, 324, 325, 326, 716, 717, 0, 327,
	718, 328, 719, 0, 720, 329, 330, 331, 332, 333,
	334, 335, 0, 0, 0, 336, 721, 722, 723, 0,
	337, 338, 724, 0, 1635, 0, 339, 340, 341, 342,
	343, 344, 345, 346, 0, 0, 348, 349, 350, 347,
	351, 0, 352, 0, 353, 354, 355, 356, 357, 358,
	359, 0, 360, 361, 362, 1328, 363, 364, 365, 0,
	0, 0, 0, 0, 0, 0, 366, 367, 368, 369,
	370, 0, 371, 373, 725, 726, 0, 376, 378, 372,
	374, 0, 377, 375, 379, 0, 380, 381, 382, 0,
	0, 383, 384, 385, 0, 386, 387, 388, 0, 389,
	390, 391, 0, 392, 393, 727, 394, 395, 396, 398,
	400, 397, 399, 401, 402, 403, 404, 405, 728, 729,
	406, 0, 303, 0, 0, 0, 0, 0, 407, 408,
	409, 730, 0, 0, 0, 410, 0, 411, 412, 413,
	0, 414, 415, 0, 1329, 416, 417, 418, 731, 732,
	419, 420, 421, 422, 423, 424, 425, 426, 427, 0,
	428, 733, 0, 734, 429, 0, 430, 431, 432, 433,
	434, 435, 436, 735, 736, 737, 529, 1331, 437, 438,
	439, 0, 440, 441, 442, 443, 444, 0, 0, 0,
	0, 445, 446, 447, 0, 1330, 738, 448, 530, 449,
	739, 740, 0, 741, 0, 450, 451, 453, 1332, 742,
	1333, 452, 454, 455, 1334, 456, 0, 0, 0, 457,
	458, 459, 460, 461, 462, 0, 463, 465, 464, 0,
	467, 743, 466, 1335, 468, 469, 1336, 0, 470, 471,
	472, 473, 474, 475, 478, 0, 0, 476, 477, 479,
	480, 0, 481, 482, 484, 487, 483, 485, 486, 488,
	501, 502, 489, 490, 491, 492, 493, 494, 495, 496,
	497, 498, 499, 500, 504, 0, 503, 1337, 505, 506,
	507, 508, 509, 516, 518, 519, 514, 515, 517, 520,
	521, 523, 511, 512, 513, 1338, 522, 510, 0, 0,
	1339, 524, 525, 526, 527, 0, 744, 528, 745, 531,
	532, 0, 0, 533, 0, 534, 0, 0, 536, 537,
	538, 0, 0, 539, 540, 746, 1340, 541, 1341, 747,
	542, 543, 535, 544, 545, 546, 547, 548, 549, 550,
	551, 552, 553, 0, 554, 555, 748, 556, 557, 558,
	749, 559, 560, 561, 750, 562, 751, 563, 564, 0,
	565, 566, 567, 0, 568, 569, 570, 571, 572, 573,
	574, 575, 752, 576, 577, 579, 578, 580, 0, 581,
	0, 582, 583, 584, 0, 0, 0, 0, 0, 585,
	586, 588, 0, 589, 590, 591, 592, 587, 593, 594,
	595, 596, 597, 598, 0, 600, 601, 599, 602, 603,
	1342, 604, 605, 606, 607, 608, 753, 609, 0, 610,
	611, 618, 619, 620, 612, 613, 614, 621, 622, 623,
	624, 625, 626, 0, 628, 629, 627, 630, 631, 632,
	0, 633, 754, 634, 615, 616, 635, 636, 1343, 637,
	638, 639, 640, 641, 642, 643, 755, 0, 644, 0,
	645, 646, 647, 648, 649, 650, 652, 617, 653, 658,
	659, 756, 654, 655, 656, 657, 757, 661, 662, 663,
	664, 0, 665, 666, 0, 660, 651, 0, 667, 668,
	669, 670, 671, 672, 0, 673, 674, 0, 675, 758,
	759, 760, 761, 0, 687, 0, 676, 678, 679, 680,
	681, 762, 682, 763, 0, 683, 684, 685, 686, 677,
	688, 689, 0, 0, 690, 691, 693, 695, 696, 692,
	694, 697, 0, 698, 0, 0, 699, 700, 701, 764,
	765, 766, 0, 703, 702, 704, 705, 706, 767, 707,
	708, 709, 0, 0, 0, 0, 710, 711, 768, 712,
	713, 714, 1671, 1670, 0, 0, 0, 0, 1668, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 306,
	307, 309, 308, 310, 311, 312, 313, 0, 314, 315,
	0, 0, 0, 0, 0, 715, 0, 0, 0, 316,
	0, 317, 318, 319, 1327, 320, 321, 322, 323, 324,
	325, 326, 716, 717, 0, 327, 718, 328, 719, 0,
	720, 329, 330, 331, 332, 333, 334, 335, 0, 0,
	0, 336, 721, 722, 723, 0, 337, 338, 724, 0,
	1635, 0, 339, 340, 341, 342, 343, 344, 345, 346,
	0, 0, 348, 349, 350, 347, 351, 0, 352, 0,
	353, 354, 355, 356, 357, 358, 359, 0, 360, 361,
	362, 1328, 363, 364, 365, 0, 0, 0, 0, 0,
	0, 0, 366, 367, 368, 369, 370, 0, 371, 373,
	725, 726, 0, 376, 378, 372, 374, 0, 377, 375,
	379, 0, 380, 381, 382, 0, 0, 383, 384, 385,
	0, 386, 387, 388, 0, 389, 390, 391, 0, 392,
	393, 727, 394, 395, 396, 398, 400, 397, 399, 401,
	402, 403, 404, 405, 728, 729, 406, 0, 303, 0,
	0, 0, 0, 0, 407, 408, 409, 730, 0, 0,
	0, 410, 0, 411, 412, 413, 0, 414, 415, 0,
	1329, 416, 417, 418, 731, 732, 419, 420, 421, 422,
	423, 424, 425, 426, 427, 0, 428, 733, 0, 734,
	429, 0, 430, 431, 432, 433, 434, 435, 436, 735,
	736, 737, 529, 1331, 437, 438, 439, 0, 440, 441,
	442, 443, 444, 0, 0, 0, 0, 445, 446, 447,
	0, 1330, 738, 448, 530, 449, 739, 740, 0, 741,
	0, 450, 451, 453, 1332, 742, 1333, 452, 454, 455,
	1334, 456, 0, 0, 0, 457, 458, 459, 460, 461,
	462, 0, 463, 465, 464, 0, 467, 743, 466, 1335,
	468, 469, 1336, 0, 470, 471, 472, 473, 474, 475,
	478, 0, 0, 476, 477, 479, 480, 0, 481, 482,
	484, 487, 483, 485, 486, 488, 501, 502, 489, 490,
	491, 492, 493, 494, 495, 496, 497, 498, 499, 500,
	504, 0, 503, 1337, 505, 506, 507, 508, 509, 516,
	518, 519, 514, 515, 517, 520, 521, 523, 511, 512,
	513, 1338, 522, 510, 0, 0, 1339, 524, 525, 526,
	527, 0, 744, 528, 745, 531, 532, 0, 0, 533,
	0, 534, 0, 0, 536, 537, 538, 0, 0, 539,
	540, 746, 1340, 541, 1341, 747, 542, 543, 535, 544,
	545, 546, 547, 548, 549, 550, 551, 552, 553, 0,
	554, 555, 748, 556, 557, 558, 749, 559, 560, 561,
	750, 562, 751, 563, 564, 0, 565, 566, 567, 0,
	568, 569, 570, 571, 572, 573, 574, 575, 752, 576,
	577, 579, 578, 580, 0, 581, 0, 582, 583, 584,
	0, 0, 0, 0, 0, 585, 586, 588, 0, 589,
	590, 591, 592, 587, 593, 594, 595, 596, 597, 598,
	0, 600, 601, 599, 602, 603, 1342, 604, 605, 606,
	607, 608, 753, 609, 0, 610, 611, 618, 619, 620,
	612, 613, 614, 621, 622, 623, 624, 625, 626, 0,
	628, 629, 627, 630, 631, 632, 0, 633, 754, 634,
	615, 616, 635, 636, 1343, 637, 638, 639, 640, 641,
	642, 643, 755, 0, 644, 0, 645, 646, 647, 648,
	649, 650, 652, 617, 653, 658, 659, 756, 654, 655,
	656, 657, 757, 661, 662, 663, 664, 0, 665, 666,
	0, 660, 651, 0, 667, 668, 669, 670, 671, 672,
	0, 673, 674, 0, 675, 758, 759, 760, 761, 0,
	687, 0, 676, 678, 679, 680, 681, 762, 682, 763,
	0, 683, 684, 685, 686, 677, 688, 689, 0, 0,
	690, 691, 693, 695, 696, 692, 694, 697, 0, 698,
	0, 0, 699, 700, 701, 764, 765, 766, 0, 703,
	702, 704, 705, 706, 767, 707, 708, 709, 1671, 1670,
	0, 0, 710, 711, 768, 712, 713, 714, 0, 0,
	0, 0, 0, 0, 0, 306, 307, 309, 308, 310,
	311, 312, 313, 0, 314, 315, 0, 0, 0, 0,
	0, 715, 0, 0, 0, 316, 0, 317, 318, 319,
	1327, 320, 321, 322, 323, 324, 325, 326, 716, 717,
	0, 327, 718, 328, 719, 0, 720, 329, 330, 331,
	332, 333, 334, 335, 0, 0, 0, 336, 721, 722,
	723, 0, 337, 338, 724, 0, 1635, 0, 339, 340,
	341, 342, 343, 344, 345, 346, 0, 0, 348, 349,
	350, 347, 351, 0, 352, 0, 353, 354, 355, 356,
	357, 358, 359, 0, 360, 361, 362, 1328, 363, 364,
	365, 0, 0, 0, 0, 0, 0, 0, 366, 367,
	368, 369, 370, 0, 371, 373, 725, 726, 0, 376,
	378, 372, 374, 0, 377, 375, 379, 0, 380, 381,
	382, 0, 0, 383, 384, 385, 0, 386, 387, 388,
	0, 389, 390, 391, 0, 392, 393, 727, 394, 395,
	396, 398, 400, 397, 399, 401, 402, 403, 404, 405,
	728, 729, 406, 0, 303, 0, 0, 0, 0, 0,
	407, 408, 409, 730, 0, 0, 0, 410, 0, 411,
	412, 413, 0, 414, 415, 0, 1329, 416, 417, 418,
	731, 732, 419, 420, 421, 422, 423, 424, 425, 426,
	427, 0, 428, 733, 0, 734, 429, 0, 430, 431,
	432, 433, 434, 435, 436, 735, 736, 737, 529, 1331,
	437, 438, 439, 0, 440, 441, 442, 443, 444, 0,
	0, 0, 0, 445, 446, 447, 0, 1330, 738, 448,
	530, 449, 739, 740, 0, 741, 0, 450, 451, 453,
	1332, 742, 1333, 452, 454, 455, 1334, 456, 0, 0,
	0, 457, 458, 459, 460, 461, 462, 0, 463, 465,
	464, 0, 467, 743, 466, 1335, 468, 469, 1336, 0,
	470, 471, 472, 473, 474, 475, 478, 0, 0, 476,
	477, 479, 480, 0, 481, 482, 484, 487, 483, 485,
	486, 488, 501, 502, 489, 490, 491, 492, 493, 494,
	495, 496, 497, 498, 499, 500, 504, 0, 503, 1337,
	505, 506, 507, 508, 509, 516, 518, 519, 514, 515,
	517, 520, 521, 523, 511, 512, 513, 1338, 522, 510,
	0, 0, 1339, 524, 525, 526, 527, 0, 744, 528,
	745, 531, 532, 0, 0, 533, 0, 534, 0, 0,
	536, 537, 538, 0, 0, 539, 540, 746, 1340, 541,
	1341, 747, 542, 543, 535, 544, 545, 546, 547, 548,
	549, 550, 551, 552, 553, 0, 554, 555, 748, 556,
	557, 558, 749, 559, 560, 561, 750, 562, 751, 563,
	564, 0, 565, 566, 567, 0, 568, 569, 570, 571,
	572, 573, 574, 575, 752, 576, 577, 579, 578, 580,
	0, 581, 0, 582, 583, 584, 0, 0, 0, 0,
	0, 585, 586, 588, 0, 589, 590, 591, 592, 587,
	593, 594, 595, 596, 597, 598, 0, 600, 601, 599,
	602, 603, 1342, 604, 605, 606, 607, 608, 753, 609,
	0, 610, 611, 618, 619, 620, 612, 613, 614, 621,
	622, 623, 624, 625, 626, 0, 628, 629, 627, 630,
	631, 632, 0, 633, 754, 634, 615, 616, 635, 636,
	1343, 637, 638, 639, 640, 641, 642, 643, 755, 0,
	644, 0, 645, 646, 647, 648, 649, 650, 652, 617,
	653, 658, 659, 756, 654, 655, 656, 657, 757, 661,
	662, 663, 664, 0, 665, 666, 0, 660, 651, 0,
	667, 668, 669, 670, 671, 672, 0, 673, 674, 0,
	675, 758, 759, 760, 761, 0, 687, 0, 676, 678,
	679, 680, 681, 762, 682, 763, 0, 683, 684, 685,
	686, 677, 688, 689, 0, 0, 690, 691, 693, 695,
	696, 692, 694, 697, 0, 698, 0, 0, 699, 700,
	701, 764, 765, 766, 0, 703, 702, 704, 705, 706,
	767, 707, 708, 709, 1671, 0, 0, 0, 710, 711,
	768, 712, 713, 714, 0, 0, 0, 0, 0, 0,
	0, 306, 307, 309, 308, 310, 311, 312, 313, 0,
	314, 315, 0, 0, 0, 0, 0, 715, 0, 0,
	0, 316, 0, 317, 318, 319, 1327, 320, 321, 322,
	323, 324, 325, 326, 716, 717, 0, 327, 718, 328,
	719, 0, 720, 329, 330, 331, 332, 333, 334, 335,
	0, 0, 0, 336, 721, 722, 723, 0, 337, 338,
	724, 0, 1635, 0, 339, 340, 341, 342, 343, 344,
	345, 346, 0, 0, 348, 349, 350, 347, 351, 0,
	352, 0, 353, 354, 355, 356, 357, 358, 359, 0,
	360, 361, 362, 1328, 363, 364, 365, 0, 0, 0,
	0, 0, 0, 0, 366, 367, 368, 369, 370, 0,
	371, 373, 725, 726, 0, 376, 378, 372, 374, 0,
	377, 375, 379, 0, 380, 381, 382, 0, 0, 383,
	384, 385, 0, 386, 387, 388, 0, 389, 390, 391,
	0, 392, 393, 727, 394, 395, 396, 398, 400, 397,
	399, 401, 402, 403, 404, 405, 728, 729, 406, 0,
	303, 0, 0, 0, 0, 0, 407, 408, 409, 730,
	0, 0, 0, 410, 0, 411, 412, 413, 0, 414,
	415, 0, 1329, 416, 417, 418, 731, 732, 419, 420,
	421, 422, 423, 424, 425, 426, 427, 0, 428, 733,
	0, 734, 429, 0, 430, 431, 432, 433, 434, 435,
	436, 735, 736, 737, 529, 1331, 437, 438, 439, 0,
	440, 441, 442, 443, 444, 0, 0, 0, 0, 445,
	446, 447, 0, 1330, 738, 448, 530, 449, 739, 740,
	0, 741, 0, 450, 451, 453, 1332, 742, 1333, 452,
	454, 455, 1334, 456, 0, 0, 0, 457, 458, 459,
	460, 461, 462, 0, 463, 465, 464, 0, 467, 743,
	466, 1335, 468, 469, 1336, 0, 470, 471, 472, 473,
	474, 475, 478, 0, 0, 476, 477, 479, 480, 0,
	481, 482, 484, 487, 483, 485, 486, 488, 501, 502,
	489, 490, 491, 492, 493, 494, 495, 496, 497, 498,
	499, 500, 504, 0, 503, 1337, 505, 506, 507, 508,
	509, 516, 518, 519, 514, 515, 517, 520, 521, 523,
	511, 512, 513, 1338, 522, 510, 0, 0, 1339, 524,
	525, 526, 527, 0, 744, 528, 745, 531, 532, 0,
	0, 533, 0, 534, 0, 0, 536, 537, 538, 0,
	0, 539, 540, 746, 1340, 541, 1341, 747, 542, 543,
	535, 544, 545, 546, 547, 548, 549, 550, 551, 552,
	553, 0, 554, 555, 748, 556, 557, 558, 749, 559,
	560, 561, 750, 562, 751, 563, 564, 0, 565, 566,
	567, 0, 568, 569, 570, 571, 572, 573, 574, 575,
	752, 576, 577, 579, 578, 580, 0, 581, 0, 582,
	583, 584, 0, 0, 0, 0, 0, 585, 586, 588,
	0, 589, 590, 591, 592, 587, 593, 594, 595, 596,
	597, 598, 0, 600, 601, 599, 602, 603, 1342, 604,
	605, 606, 607, 608, 753, 609, 0, 610, 611, 618,
	619, 620, 612, 613, 614, 621, 622, 623, 624, 625,
	626, 0, 628, 629, 627, 630, 631, 632, 0, 633,
	754, 634, 615, 616, 635, 636, 1343, 637, 638, 639,
	640, 641, 642, 643, 755, 0, 644, 0, 645, 646,
	647, 648, 649, 650, 652, 617, 653, 658, 659, 756,
	654, 655, 656, 657, 757, 661, 662, 663, 664, 0,
	665, 666, 0, 660, 651, 0, 667, 668, 669, 670,
	671, 672, 0, 673, 674, 0, 675, 758, 759, 760,
	761, 0, 687, 0, 676, 678, 679, 680, 681, 762,
	682, 763, 0, 683, 684, 685, 686, 677, 688, 689,
	0, 0, 690, 691, 693, 695, 696, 692, 694, 697,
	0, 698, 0, 0, 699, 700, 701, 764, 765, 766,
	0, 703, 702, 704, 705, 706, 767, 707, 708, 709,
	300, 0, 0, 0, 710, 711, 768, 712, 713, 714,
	0, 0, 0, 0, 0, 0, 0, 306, 307, 309,
	308, 310, 311, 312, 313, 0, 314, 315, 0, 0,
	0, 0, 0, 715, 0, 0, 0, 316, 0, 317,
	318, 319, 0, 320, 321, 322, 323, 324, 325, 326,
	716, 717, 0, 327, 718, 328, 719, 0, 720, 329,
	330, 331, 332, 333, 334, 335, 0, 0, 0, 336,
	721, 722, 723, 3177, 337, 338, 724, 0, 0, 0,
	339, 340, 341, 342, 343, 344, 345, 346, 0, 0,
	348, 349, 350, 347, 351, 3969, 352, 0, 353, 354,
	355, 356, 357, 358, 359, 0, 360, 361, 362, 0,
	363, 364, 365, 0, 0, 0, 0, 0, 0, 0,
	366, 367, 368, 369, 370, 0, 371, 373, 725, 726,
	0, 376, 378, 372, 374, 0, 377, 375, 379, 0,
	380, 381, 382, 0, 0, 383, 384, 385, 0, 386,
	387, 388, 0, 389, 390, 391, 0, 3181, 393, 727,
	394, 395, 396, 398, 400, 397, 399, 401, 402, 403,
	404, 405, 728, 729, 406, 0, 3968, 0, 0, 0,
	0, 0, 407, 408, 409, 730, 0, 0, 0, 410,
	0, 411, 412, 413, 3180, 414, 415, 0, 0, 416,
	417, 418, 731, 732, 419, 420, 421, 422, 423, 424,
	425, 426, 427, 0, 428, 733, 0, 734, 429, 0,
	430, 431, 432, 433, 434, 435, 436, 735, 736, 737,
	529, 0, 437, 438, 439, 0, 440, 441, 442, 443,
	444, 0, 0, 0, 3965, 445, 446, 447, 0, 0,
	738, 448, 530, 449, 739, 740, 0, 741, 0, 450,
	3967, 453, 0, 742, 0, 452, 454, 455, 0, 456,
	0, 0, 0, 457, 458, 459, 460, 461, 462, 0,
	463, 465, 464, 0, 467, 743, 466, 0, 468, 469,
	3964, 0, 470, 471, 472, 473, 474, 475, 478, 0,
	0, 476, 477, 479, 480, 0, 481, 482, 484, 487,
	483, 485, 486, 488, 501, 502, 489, 490, 491, 492,
	493, 494, 495, 496, 497, 498, 499, 500, 504, 0,
	503, 0, 505, 506, 507, 508, 509, 516, 518, 519,
	514, 515, 517, 520, 521, 523, 511, 512, 513, 0,
	522, 510, 0, 0, 0, 524, 525, 526, 527, 0,
	744, 528, 745, 531, 532, 0, 0, 533, 0, 534,
	0, 0, 536, 537, 538, 0, 0, 539, 540, 746,
	0, 541, 0, 747, 542, 543, 535, 544, 545, 546,
	547, 548, 549, 550, 551, 552, 553, 0, 554, 555,
	748, 556, 557, 558, 749, 559, 560, 561, 750, 562,
	751, 563, 564, 3179, 565, 566, 567, 0, 568, 569,
	570, 571, 572, 573, 574, 575, 752, 576, 577, 579,
	578, 580, 0, 581, 0, 582, 583, 584, 0, 0,
	0, 0, 0, 585, 586, 588, 0, 589, 590, 591,
	592, 587, 593, 594, 595, 596, 597, 598, 0, 600,
	601, 599, 602, 603, 0, 604, 605, 606, 607, 608,
	753, 609, 0, 610, 611, 618, 619, 620, 612, 613,
	614, 621, 622, 623, 624, 625, 626, 0, 628, 629,
	627, 630, 631, 632, 0, 633, 754, 634, 615, 616,
	635, 636, 0, 637, 638, 639, 640, 641, 642, 643,
	755, 0, 644, 0, 645, 646, 647, 648, 649, 650,
	652, 617, 653, 658, 659, 756, 654, 655, 656, 657,
	757, 661, 662, 663, 664, 0, 665, 666, 0, 660,
	651, 0, 667, 668, 669, 670, 671, 672, 0, 673,
	674, 0, 675, 758, 759, 760, 761, 0, 687, 0,
	676, 678, 679, 680, 681, 762, 682, 763, 0, 683,
	684, 685, 686, 677, 688, 689, 0, 3966, 690, 691,
	693, 695, 696, 692, 694, 697, 0, 698, 0, 0,
	699, 700, 701, 764, 765, 766, 0, 703, 702, 704,
	705, 706, 767, 707, 708, 709, 300, 0, 0, 0,
	710, 711, 768, 712, 713, 714, 0, 0, 0, 0,
	0, 0, 0, 306, 307, 309, 308, 310, 311, 312,
	313, 0, 314, 315, 0, 0, 0, 0, 0, 715,
	0, 0, 0, 316, 0, 317, 318, 319, 0, 320,
	321, 322, 323, 324, 325, 326, 716, 717, 0, 327,
	718, 328, 719, 0, 720, 329, 330, 331, 332, 333,
	334, 335, 0, 0, 0, 336, 721, 722, 723, 3177,
	337, 338, 724, 0, 0, 3171, 339, 340, 341, 342,
	343, 344, 345, 346, 0, 0, 348, 349, 350, 347,
	351, 3173, 352, 0, 353, 354, 355, 356, 357, 358,
	359, 0, 360, 361, 362, 0, 363, 364, 365, 0,
	0, 0, 0, 0, 0, 0, 366, 367, 368, 369,
	370, 0, 371, 373, 725, 726, 0, 376, 378, 372,
	374, 0, 377, 375, 379, 0, 380, 381, 382, 0,
	0, 383, 384, 385, 0, 386, 387, 388, 0, 389,
	390, 391, 0, 3181, 393, 727, 394, 395, 396, 398,
	400, 397, 399, 401, 402, 403, 404, 405, 728, 729,
	406, 0, 0, 0, 0, 0, 0, 0, 407, 408,
	409, 730, 0, 0, 0, 410, 0, 411, 412, 413,
	3180, 414, 415, 0, 0, 416, 417, 418, 731, 732,
	419, 420, 421, 422, 423, 424, 425, 426, 427, 0,
	428, 733, 0, 734, 429, 0, 430, 431, 432, 433,
	434, 435, 436, 3170, 736, 737, 529, 0, 437, 438,
	439, 0, 440, 441, 442, 443, 444, 0, 0, 0,
	0, 445, 446, 447, 0, 0, 738, 448, 530, 449,
	739, 740, 0, 741, 0, 450, 451, 453, 0, 742,
	0, 452, 454, 455, 0, 456, 0, 0, 0, 457,
	458, 459, 460, 461, 462, 0, 463, 465, 464, 0,
	467, 743, 466, 0, 468, 469, 0, 0, 470, 471,
	472, 473, 474, 475, 478, 0, 0, 476, 477, 479,
	480, 0, 481, 482, 484, 487, 483, 485, 486, 488,
	501, 502, 489, 490, 491, 492, 493, 494, 495, 496,
	497, 498, 499, 500, 504, 0, 503, 0, 505, 506,
	507, 508, 509, 516, 518, 519, 514, 515, 517, 520,
	521, 523, 511, 512, 513, 0, 522, 510, 0, 0,
	0, 524, 525, 526, 527, 0, 744, 528, 745, 531,
	532, 0, 0, 533, 0, 534, 0, 0, 536, 537,
	538, 0, 0, 539, 540, 746, 0, 541, 0, 747,
	542, 543, 535, 544, 545, 546, 547, 548, 549, 550,
	551, 552, 553, 0, 554, 555, 748, 556, 557, 558,
	749, 559, 560, 561, 750, 562, 751, 563, 564, 3179,
	565, 566, 567, 0, 568, 569, 570, 571, 572, 573,
	574, 575, 752, 576, 577, 579, 578, 580, 0, 581,
	0, 582, 583, 584, 0, 0, 0, 0, 0, 585,
	586, 588, 0, 589, 590, 591, 592, 587, 593, 594,
	595, 596, 597, 598, 0, 600, 601, 599, 602, 603,
	0, 604, 605, 606, 607, 608, 753, 609, 0, 610,
	611, 618, 619, 620, 612, 613, 614, 621, 622, 623,
	624, 625, 626, 0, 628, 629, 627, 630, 631, 632,
	0, 633, 754, 634, 615, 616, 635, 636, 0, 637,
	638, 639, 640, 641, 642, 643, 755, 0, 644, 0,
	645, 646, 647, 648, 649, 650, 652, 617, 653, 658,
	659, 756, 654, 655, 656, 657, 757, 661, 662, 663,
	664, 0, 665, 666, 0, 660, 651, 0, 667, 668,
	669, 670, 671, 672, 0, 673, 674, 0, 675, 758,
	759, 760, 761, 0, 687, 0, 676, 678, 679, 680,
	681, 762, 682, 763, 0, 683, 684, 685, 686, 677,
	688, 689, 0, 3178, 690, 691, 693, 695, 696, 692,
	694, 697, 0, 698, 0, 0, 699, 700, 701, 764,
	765, 766, 0, 703, 702, 704, 705, 706, 767, 707,
	708, 709, 1934, 0, 300, 0, 710, 711, 768, 712,
	713, 714, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 306, 307, 309, 308, 310, 311, 312, 313, 1933,
	314, 315, 0, 0, 0, 0, 0, 715, 0, 0,
	0, 316, 0, 317, 318, 319, 0, 320, 321, 322,
	323, 324, 325, 326, 716, 717, 0, 327, 718, 328,
	719, 0, 720, 329, 330, 331, 332, 333, 334, 335,
	0, 0, 0, 336, 721, 722, 723, 0, 337, 338,
	724, 0, 0, 0, 339, 340, 341, 342, 343, 344,
	345, 346, 0, 0, 348, 349, 350, 347, 351, 0,
	352, 0, 353, 354, 355, 356, 357, 358, 359, 0,
	360, 361, 362, 0, 363, 364, 365, 0, 0, 0,
	0, 0, 0, 0, 366, 367, 368, 1931, 370, 0,
	371, 373, 725, 726, 0, 376, 378, 372, 374, 0,
	377, 375, 379, 0, 380, 381, 382, 0, 0, 383,
	384, 385, 0, 386, 387, 388, 0, 389, 390, 391,
	0, 392, 393, 727, 394, 395, 396, 398, 400, 397,
	399, 401, 402, 403, 404, 405, 728, 729, 406, 0,
	303, 0, 0, 0, 0, 0, 407, 408, 409, 730,
	0, 0, 0, 410, 0, 411, 412, 413, 0, 414,
	415, 0, 0, 1932, 417, 418, 731, 732, 419, 420,
	421, 422, 423, 424, 425, 426, 427, 0, 428, 733,
	0, 734, 429, 0, 430, 431, 432, 433, 434, 435,
	436, 735, 736, 737, 529, 0, 437, 438, 439, 0,
	440, 441, 442, 443, 444, 0, 0, 0, 304, 445,
	446, 447, 0, 0, 738, 448, 530, 449, 739, 740,
	0, 741, 0, 450, 451, 453, 0, 742, 0, 452,
	454, 455, 0, 456, 0, 0, 0, 457, 458, 459,
	460, 461, 462, 0, 463, 465, 464, 0, 467, 743,
	466, 0, 468, 469, 0, 0, 470, 471, 472, 473,
	474, 475, 478, 0, 0, 476, 477, 479, 480, 0,
	481, 482, 484, 487, 483, 485, 486, 488, 501, 502,
	489, 490, 491, 492, 493, 494, 495, 496, 497, 498,
	499, 500, 504, 0, 503, 0, 505, 506, 507, 508,
	509, 516, 518, 519, 514, 515, 517, 520, 521, 523,
	511, 512, 513, 0, 522, 510, 0, 305, 0, 524,
	525, 526, 527, 0, 744, 528, 745, 531, 532, 0,
	0, 533, 0, 534, 0, 0, 536, 537, 538, 0,
	0, 539, 540, 746, 0, 541, 0, 747, 542, 543,
	535, 544, 545, 546, 547, 548, 549, 550, 551, 552,
	553, 0, 554, 555, 748, 556, 557, 558, 749, 559,
	560, 561, 750, 562, 751, 563, 564, 0, 565, 566,
	567, 0, 568, 569, 570, 571, 572, 573, 574, 575,
	752, 576, 577, 579, 578, 580, 0, 581, 0, 582,
	583, 584, 0, 0, 0, 0, 0, 585, 586, 588,
	0, 589, 590, 591, 592, 587, 593, 594, 595, 596,
	597, 598, 0, 600, 601, 599, 602, 603, 0, 604,
	605, 606, 607, 608, 753, 609, 0, 610, 611, 618,
	619, 620, 1935, 613, 614, 621, 622, 623, 624, 625,
	626, 0, 1930, 629, 627, 630, 631, 632, 0, 633,
	754, 634, 615, 616, 635, 636, 0, 637, 638, 639,
	640, 641, 642, 643, 755, 0, 644, 0, 645, 646,
	647, 648, 649, 650, 652, 617, 653, 658, 659, 756,
	654, 655, 656, 657, 757, 661, 662, 663, 664, 0,
	665, 666, 0, 660, 651, 1928, 667, 668, 669, 670,
	671, 672, 0, 673, 674, 0, 675, 758, 759, 760,
	761, 0, 687, 0, 676, 678, 679, 680, 681, 762,
	682, 763, 0, 683, 684, 685, 686, 677, 688, 689,
	0, 0, 690, 691, 693, 695, 696, 692, 694, 697,
	0, 698, 0, 0, 699, 700, 701, 764, 765, 766,
	0, 1929, 702, 704, 705, 706, 767, 707, 708, 709,
	1639, 0, 300, 0, 710, 711, 768, 712, 713, 714,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 306,
	307, 309, 308, 310, 311, 312, 313, 0, 314, 315,
	0, 0, 0, 0, 0, 715, 0, 0, 0, 316,
	0, 317, 318, 319, 0, 320, 321, 322, 323, 324,
	325, 326, 716, 717, 0, 327, 718, 328, 719, 0,
	720, 329, 330, 331, 332, 333, 334, 335, 0, 0,
	0, 336, 721, 722, 723, 0, 337, 338, 724, 0,
	0, 0, 339, 340, 341, 342, 343, 344, 345, 346,
	0, 0, 348, 349, 350, 347, 351, 0, 352, 0,
	353, 354, 355, 356, 357, 358, 359, 0, 360, 361,
	362, 0, 363, 364, 365, 0, 0, 0, 0, 0,
	0, 0, 366, 367, 368, 369, 370, 0, 371, 373,
	725, 726, 0, 376, 378, 372, 374, 0, 377, 375,
	379, 0, 380, 381, 382, 0, 0, 383, 384, 385,
	0, 386, 387, 388, 0, 389, 390, 391, 0, 392,
	393, 727, 394, 395, 396, 398, 400, 397, 399, 401,
	402, 403, 404, 405, 728, 729, 406, 0, 303, 0,
	0, 0, 0, 0, 407, 408, 409, 730, 0, 0,
	0, 410, 0, 411, 412, 413, 0, 414, 415, 0,
	0, 416, 417, 418, 731, 732, 419, 420, 421, 422,
	423, 424, 425, 426, 427, 0, 428, 733, 0, 734,
	429, 0, 430, 431, 432, 433, 434, 435, 436, 1641,
	736, 737, 529, 0, 437, 438, 439, 0, 440, 441,
	442, 443, 444, 0, 0, 0, 304, 445, 446, 447,
	0, 0, 738, 448, 530, 449, 739, 740, 0, 741,
	0, 450, 451, 453, 0, 742, 0, 452, 454, 455,
	0, 456, 0, 0, 0, 457, 458, 459, 460, 461,
	462, 0, 463, 465, 464, 0, 467, 743, 466, 0,
	468, 469, 0, 0, 470, 471, 472, 473, 474, 475,
	478, 0, 0, 476, 477, 479, 480, 0, 481, 482,
	484, 487, 483, 485, 486, 488, 501, 502, 489, 490,
	491, 492, 493, 494, 495, 496, 497, 498, 499, 500,
	504, 0, 503, 0, 505, 506, 507, 508, 509, 516,
	518, 519, 514, 515, 517, 520, 521, 523, 511, 512,
	513, 0, 522, 510, 0, 305, 0, 524, 525, 526,
	527, 0, 744, 528, 745, 531, 532, 0, 0, 533,
	0, 534, 0, 1378, 536, 537, 538, 0, 0, 539,
	540, 746, 0, 541, 0, 747, 542, 543, 535, 544,
	545, 546, 547, 548, 549, 550, 551, 552, 553, 0,
	554, 555, 748, 556, 557, 558, 749, 559, 560, 561,
	750, 562, 751, 563, 564, 0, 565, 566, 567, 0,
	568, 569, 570, 571, 572, 573, 574, 575, 752, 576,
	577, 579, 578, 580, 0, 581, 0, 582, 583, 584,
	0, 0, 0, 0, 0, 585, 586, 588, 0, 589,
	590, 591, 592, 587, 593, 594, 595, 596, 597, 598,
	0, 600, 601, 599, 602, 603, 0, 604, 605, 606,
	607, 608, 753, 609, 0, 610, 611, 618, 619, 620,
	612, 613, 614, 621, 622, 623, 624, 625, 626, 0,
	628, 629, 627, 630, 631, 632, 0, 633, 754, 634,
	615, 616, 635, 636, 0, 637, 638, 639, 640, 641,
	642, 643, 755, 0, 644, 0, 645, 646, 647, 648,
	649, 650, 652, 617, 653, 658, 659, 756, 654, 655,
	656, 657, 757, 661, 662, 663, 664, 0, 665, 666,
	0, 660, 651, 0, 667, 668, 669, 670, 671, 672,
	0, 673, 674, 0, 675, 758, 759, 760, 761, 0,
	687, 0, 676, 678, 679, 680, 681, 762, 682, 763,
	0, 683, 684, 685, 686, 677, 688, 689, 0, 0,
	690, 691, 693, 695, 696, 692, 694, 697, 0, 698,
	0, 0, 699, 700, 701, 764, 765, 766, 0, 703,
	702, 704, 705, 706, 767, 707, 708, 709, 1636, 0,
	300, 0, 710, 711, 768, 712, 713, 714, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 306, 307, 309,
	308, 310, 311, 312, 313, 0, 314, 315, 0, 0,
	0, 0, 0, 715, 0, 0, 0, 316, 0, 317,
	318, 319, 0, 320, 321, 322, 323, 324, 325, 326,
	716, 717, 0, 327, 718, 328, 719, 0, 720, 329,
	330, 331, 332, 333, 334, 335, 0, 0, 0, 336,
	721, 722, 723, 0, 337, 338, 724, 0, 0, 0,
	339, 340, 341, 342, 343, 344, 345, 346, 0, 0,
	348, 349, 350, 347, 351, 0, 352, 0, 353, 354,
	355, 356, 357, 358, 359, 0, 360, 361, 362, 0,
	363, 364, 365, 0, 0, 0, 0, 0, 0, 0,
	366, 367, 368, 369, 370, 0, 371, 373, 725, 726,
	0, 376, 378, 372, 374, 0, 377, 375, 379, 0,
	380, 381, 382, 0, 0, 383, 384, 385, 0, 386,
	387, 388, 0, 389, 390, 391, 0, 392, 393, 727,
	394, 395, 396, 398, 400, 397, 399, 401, 402, 403,
	404, 405, 728, 729, 406, 0, 303, 0, 0, 0,
	0, 0, 407, 408, 409, 730, 0, 0, 0, 410,
	0, 411, 412, 413, 0, 414, 415, 0, 0, 416,
	417, 418, 731, 732, 419, 420, 421, 422, 423, 424,
	425, 426, 427, 0, 428, 733, 0, 734, 429, 0,
	430, 431, 432, 433, 434, 435, 436, 1638, 736, 737,
	529, 0, 437, 438, 439, 0, 440, 441, 442, 443,
	444, 0, 0, 0, 304, 445, 446, 447, 0, 0,
	738, 448, 530, 449, 739, 740, 0, 741, 0, 450,
	451, 453, 0, 742, 0, 452, 454, 455, 0, 456,
	0, 0, 0, 457, 458, 459, 460, 461, 462, 0,
	463, 465, 464, 0, 467, 743, 466, 0, 468, 469,
	0, 0, 470, 471, 472, 473, 474, 475, 478, 0,
	0, 476, 477, 479, 480, 0, 481, 482, 484, 487,
	483, 485, 486, 488, 501, 502, 489, 490, 491, 492,
	493, 494, 495, 496, 497, 498, 499, 500, 504, 0,
	503, 0, 505, 506, 507, 508, 509, 516, 518, 519,
	514, 515, 517, 520, 521, 523, 511, 512, 513, 0,
	522, 510, 0, 305, 0, 524, 525, 526, 527, 0,
	744, 528, 745, 531, 532, 0, 0, 533, 0, 534,
	0, 1378, 536, 537, 538, 0, 0, 539, 540, 746,
	0, 541, 0, 747, 542, 543, 535, 544, 545, 546,
	547, 548, 549, 550, 551, 552, 553, 0, 554, 555,
	748, 556, 557, 558, 749, 559, 560, 561, 750, 562,
	751, 563, 564, 0, 565, 566, 567, 0, 568, 569,
	570, 571, 572, 573, 574, 575, 752, 576, 577, 579,
	578, 580, 0, 581, 0, 582, 583, 584, 0, 0,
	0, 0, 0, 585, 586, 588, 0, 589, 590, 591,
	592, 587, 593, 594, 595, 596, 597, 598, 0, 600,
	601, 599, 602, 603, 0, 604, 605, 606, 607, 608,
	753, 609, 0, 610, 611, 618, 619, 620, 612, 613,
	614, 621, 622, 623, 624, 625, 626, 0, 628, 629,
	627, 630, 631, 632, 0, 633, 754, 634, 615, 616,
	635, 636, 0, 637, 638, 639, 640, 641, 642, 643,
	755, 0, 644, 0, 645, 646, 647, 648, 649, 650,
	652, 617, 653, 658, 659, 756, 654, 655, 656, 657,
	757, 661, 662, 663, 664, 0, 665, 666, 0, 660,
	651, 0, 667, 668, 669, 670, 671, 672, 0, 673,
	674, 0, 675, 758, 759, 760, 761, 0, 687, 0,
	676, 678, 679, 680, 681, 762, 682, 763, 0, 683,
	684, 685, 686, 677, 688, 689, 0, 0, 690, 691,
	693, 695, 696, 692, 694, 697, 0, 698, 0, 0,
	699, 700, 701, 764, 765, 766, 0, 703, 702, 704,
	705, 706, 767, 707, 708, 709, 1542, 0, 300, 0,
	710, 711, 768, 712, 713, 714, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 306, 307, 309, 308, 310,
	311, 312, 313, 0, 314, 315, 0, 0, 0, 0,
	0, 715, 0, 0, 0, 316, 0, 317, 318, 319,
	0, 320, 321, 322, 323, 324, 325, 326, 716, 717,
	0, 327, 718, 328, 719, 0, 720, 329, 330, 331,
	332, 333, 334, 335, 0, 0, 0, 336, 721, 722,
	723, 0, 337, 338, 724, 0, 0, 0, 339, 340,
	341, 342, 343, 344, 345, 346, 0, 0, 348, 349,
	350, 347, 351, 0, 352, 0, 353, 354, 355, 356,
	357, 358, 359, 0, 360, 361, 362, 0, 363, 364,
	365, 0, 0, 0, 0, 0, 0, 0, 366, 367,
	368, 369, 370, 0, 371, 373, 725, 726, 0, 376,
	378, 372, 374, 0, 377, 375, 379, 0, 380, 381,
	382, 0, 0, 383, 384, 385, 0, 386, 387, 388,
	0, 389, 390, 391, 0, 392, 393, 727, 394, 395,
	396, 398, 400, 397, 399, 401, 402, 403, 404, 405,
	728, 729, 406, 0, 303, 0, 0, 0, 0, 0,
	407, 408, 409, 730, 0, 0, 0, 410, 0, 411,
	412, 413, 0, 414, 415, 0, 0, 416, 417, 418,
	731, 732, 419, 420, 421, 422, 423, 424, 425, 426,
	427, 0, 428, 733, 0, 734, 429, 0, 430, 431,
	432, 433, 434, 435, 436, 1544, 736, 737, 529, 0,
	437, 438, 439, 0, 440, 441, 442, 443, 444, 0,
	0, 0, 304, 445, 446, 447, 0, 0, 738, 448,
	530, 449, 739, 740, 0, 741, 0, 450, 451, 453,
	0, 742, 0, 452, 454, 455, 0, 456, 0, 0,
	0, 457, 458, 459, 460, 461, 462, 0, 463, 465,
	464, 0, 467, 743, 466, 0, 468, 469, 0, 0,
	470, 471, 472, 473, 474, 475, 478, 0, 0, 476,
	477, 479, 480, 0, 481, 482, 484, 487, 483, 485,
	486, 488, 501, 502, 489, 490, 491, 492, 493, 494,
	495, 496, 497, 498, 499, 500, 504, 0, 503, 0,
	505, 506, 507, 508, 509, 516, 518, 519, 514, 515,
	517, 520, 521, 523, 511, 512, 513, 0, 522, 510,
	0, 305, 0, 524, 525, 526, 527, 0, 744, 528,
	745, 531, 532, 0, 0, 533, 0, 534, 0, 1378,
	536, 537, 538, 0, 0, 539, 540, 746, 0, 541,
	0, 747, 542, 543, 535, 544, 545, 546, 547, 548,
	549, 550, 551, 552, 553, 0, 554, 555, 748, 556,
	557, 558, 749, 559, 560, 561, 750, 562, 751, 563,
	564, 0, 565, 566, 567, 0, 568, 569, 570, 571,
	572, 573, 574, 575, 752, 576, 577, 579, 578, 580,
	0, 581, 0, 582, 583, 584, 0, 0, 0, 0,
	0, 585, 586, 588, 0, 589, 590, 591, 592, 587,
	593, 594, 595, 596, 597, 598, 0, 600, 601, 599,
	602, 603, 0, 604, 605, 606, 607, 608, 753, 609,
	0, 610, 611, 618, 619, 620, 612, 613, 614, 621,
	622, 623, 624, 625, 626, 0, 628, 629, 627, 630,
	631, 632, 0, 633, 754, 634, 615, 616, 635, 636,
	0, 637, 638, 639, 640, 641, 642, 643, 755, 0,
	644, 0, 645, 646, 647, 648, 649, 650, 652, 617,
	653, 658, 659, 756, 654, 655, 656, 657, 757, 661,
	662, 663, 664, 0, 665, 666, 0, 660, 651, 0,
	667, 668, 669, 670, 671, 672, 0, 673, 674, 0,
	675, 758, 759, 760, 761, 0, 687, 0, 676, 678,
	679, 680, 681, 762, 682, 763, 0, 683, 684, 685,
	686, 677, 688, 689, 0, 0, 690, 691, 693, 695,
	696, 692, 694, 697, 0, 698, 0, 0, 699, 700,
	701, 764, 765, 766, 0, 703, 702, 704, 705, 706,
	767, 707, 708, 709, 803, 0, 300, 0, 710, 711,
	768, 712, 713, 714, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 306, 307, 309, 308, 310, 801, 312,
	313, 790, 314, 315, 0, 0, 0, 0, 0, 715,
	0, 0, 0, 316, 0, 317, 318, 319, 0, 320,
	321, 322, 323, 324, 325, 326, 716, 717, 0, 327,
	718, 328, 719, 0, 720, 329, 330, 331, 332, 333,
	334, 335, 0, 0, 0, 336, 721, 722, 723, 0,
	337, 338, 724, 0, 0, 0, 339, 340, 341, 342,
	343, 344, 345, 346, 0, 0, 348, 349, 350, 347,
	351, 0, 352, 0, 353, 354, 355, 356, 357, 358,
	359, 793, 360, 361, 362, 0, 363, 364, 365, 0,
	0, 0, 0, 0, 0, 0, 366, 367, 368, 369,
	370, 0, 371, 373, 725, 726, 0, 376, 378, 372,
	374, 0, 377, 375, 379, 0, 380, 381, 382, 0,
	0, 383, 384, 385, 0, 386, 387, 388, 0, 389,
	390, 391, 0, 392, 393, 727, 394, 395, 396, 398,
	400, 397, 399, 401, 402, 403, 404, 405, 728, 729,
	406, 0, 0, 0, 0, 0, 0, 0, 407, 408,
	409, 730, 0, 0, 0, 410, 0, 411, 412, 413,
	0, 414, 415, 0, 0, 416, 417, 418, 731, 732,
	419, 420, 421, 422, 423, 424, 425, 426, 427, 799,
	428, 733, 0, 734, 429, 0, 430, 431, 432, 433,
	434, 435, 436, 735, 736, 737, 529, 0, 437, 438,
	439, 0, 440, 441, 442, 443, 444, 0, 0, 0,
	0, 445, 446, 447, 0, 0, 738, 448, 530, 449,
	739, 740, 0, 741, 0, 450, 451, 453, 0, 742,
	0, 452, 454, 455, 0, 456, 0, 0, 0, 457,
	458, 459, 460, 461, 462, 0, 463, 465, 464, 0,
	467, 743, 466, 0, 468, 469, 0, 0, 470, 471,
	472, 473, 474, 475, 478, 0, 0, 476, 477, 479,
	480, 0, 481, 482, 484, 487, 483, 485, 486, 488,
	501, 502, 489, 490, 491, 492, 493, 494, 495, 496,
	497, 498, 499, 500, 504, 0, 503, 0, 505, 506,
	507, 508, 509, 516, 518, 519, 514, 515, 517, 520,
	521, 523, 511, 512, 513, 0, 522, 510, 0, 0,
	0, 524, 525, 526, 527, 0, 744, 528, 745, 531,
	532, 0, 0, 533, 0, 534, 0, 0, 536, 537,
	538, 0, 0, 539, 540, 746, 0, 541, 0, 747,
	542, 543, 535, 544, 545, 546, 547, 548, 549, 550,
	551, 552, 553, 0, 554, 555, 748, 556, 557, 558,
	749, 559, 560, 561, 750, 562, 751, 563, 564, 0,
	565, 566, 567, 0, 568, 569, 570, 571, 572, 573,
	574, 575, 752, 576, 577, 579, 578, 580, 0, 581,
	0, 582, 583, 584, 0, 0, 0, 0, 0, 585,
	586, 588, 0, 589, 590, 591, 592, 587, 593, 594,
	595, 596, 597, 598, 0, 600, 601, 599, 602, 603,
	0, 604, 605, 606, 607, 608, 753, 609, 0, 610,
	611, 618, 619, 620, 612, 613, 614, 621, 622, 623,
	624, 625, 626, 795, 628, 629, 627, 630, 631, 632,
	0, 633, 754, 634, 615, 616, 635, 636, 0, 637,
	638, 639, 640, 641, 642, 643, 755, 0, 644, 0,
	645, 646, 647, 648, 649, 650, 652, 617, 653, 658,
	659, 756, 654, 655, 656, 657, 757, 661, 662, 663,
	664, 0, 665, 802, 0, 660, 651, 0, 667, 668,
	669, 670, 671, 672, 0, 673, 674, 0, 675, 758,
	759, 760, 761, 0, 687, 0, 676, 678, 679, 680,
	681, 762, 682, 763, 0, 683, 684, 685, 686, 677,
	688, 689, 0, 0, 690, 691, 693, 695, 696, 692,
	694, 697, 0, 698, 0, 0, 699, 700, 701, 764,
	765, 766, 0, 703, 702, 704, 705, 706, 767, 707,
	708, 709, 789, 0, 300, 0, 710, 711, 768, 712,
	713, 714, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 306, 307, 309, 308, 310, 311, 312, 313, 790,
	314, 315, 0, 0, 0, 0, 0, 715, 0, 0,
	0, 316, 0, 317, 318, 319, 0, 320, 321, 322,
	323, 324, 325, 326, 716, 717, 0, 327, 718, 328,
	719, 0, 720, 329, 330, 331, 332, 333, 334, 335,
	0, 0, 0, 336, 721, 722, 723, 0, 337, 338,
	724, 0, 0, 0, 339, 340, 341, 342, 343, 344,
	345, 346, 0, 0, 348, 349, 350, 347, 351, 0,
	352, 0, 353, 354, 355, 356, 357, 358, 359, 793,
	360, 361, 362, 0, 363, 364, 365, 0, 0, 0,
	0, 0, 0, 0, 366, 367, 368, 369, 370, 0,
	371, 373, 725, 726, 0, 376, 378, 372, 374, 0,
	377, 375, 379, 0, 380, 381, 382, 0, 0, 383,
	384, 385, 0, 386, 387, 388, 0, 389, 390, 391,
	0, 392, 393, 727, 394, 395, 396, 398, 400, 397,
	399, 401, 402, 403, 404, 405, 728, 729, 406, 0,
	0, 0, 0, 0, 0, 0, 407, 408, 409, 730,
	0, 0, 0, 410, 0, 411, 412, 413, 0, 414,
	415, 0, 0, 416, 417, 418, 731, 732, 419, 420,
	421, 422, 423, 424, 425, 426, 427, 794, 428, 733,
	0, 734, 429, 0, 430, 431, 432, 433, 434, 435,
	436, 735, 736, 737, 529, 0, 437, 438, 439, 0,
	440, 441, 442, 443, 444, 0, 0, 0, 0, 445,
	446, 447, 0, 0, 738, 448, 530, 449, 739, 740,
	0, 741, 0, 450, 451, 453, 0, 742, 0, 452,
	454, 455, 0, 456, 0, 0, 0, 457, 458, 459,
	460, 461, 462, 0, 463, 465, 464, 0, 467, 743,
	466, 0, 468, 469, 0, 0, 470, 471, 472, 473,
	474, 475, 478, 0, 0, 476, 477, 479, 480, 0,
	481, 482, 484, 487, 483, 485, 486, 488, 501, 502,
	489, 490, 491, 492, 493, 494, 495, 496, 497, 498,
	499, 500, 504, 0, 503, 0, 505, 506, 507, 508,
	509, 516, 518, 519, 514, 515, 517, 520, 521, 523,
	511, 512, 513, 0, 522, 510, 0, 0, 0, 524,
	525, 526, 527, 0, 744, 528, 745, 531, 532, 0,
	0, 533, 0, 534, 0, 0, 536, 537, 538, 0,
	0, 539, 540, 746, 0, 541, 0, 747, 542, 543,
	535, 544, 545, 546, 547, 548, 549, 550, 551, 552,
	553, 0, 554, 555, 748, 556, 557, 558, 749, 559,
	560, 561, 750, 562, 751, 563, 564, 0, 565, 566,
	567, 0, 568, 569, 570, 571, 572, 573, 574, 575,
	752, 576, 577, 579, 578, 580, 0, 581, 0, 582,
	583, 584, 0, 0, 0, 0, 0, 585, 586, 588,
	0, 589, 590, 591, 592, 587, 593, 594, 595, 596,
	597, 598, 0, 600, 601, 599, 602, 603, 0, 604,
	605, 606, 607, 608, 753, 609, 0, 610, 611, 618,
	619, 620, 612, 613, 614, 621, 622, 623, 624, 625,
	626, 795, 628, 629, 627, 630, 631, 632, 0, 633,
	754, 634, 615, 616, 635, 636, 0, 637, 638, 639,
	640, 641, 642, 643, 755, 0, 644, 0, 645, 646,
	647, 648, 649, 650, 652, 617, 653, 658, 659, 756,
	654, 655, 656, 657, 757, 661, 662, 663, 664, 0,
	665, 788, 0, 660, 651, 0, 667, 668, 669, 670,
	671, 672, 0, 673, 674, 0, 675, 758, 759, 760,
	761, 0, 687, 0, 676, 678, 679, 680, 681, 762,
	682, 763, 0, 683, 684, 685, 686, 677, 688, 689,
	0, 0, 690, 691, 693, 695, 696, 692, 694, 697,
	0, 698, 0, 0, 699, 700, 701, 764, 765, 766,
	0, 703, 702, 704, 705, 706, 767, 707, 708, 709,
	300, 0, 0, 0, 710, 711, 768, 712, 713, 714,
	0, 0, 0, 0, 0, 0, 0, 306, 307, 309,
	308, 310, 311, 312, 313, 790, 314, 315, 0, 0,
	0, 0, 0, 715, 0, 0, 0, 316, 0, 317,
	318, 319, 0, 320, 321, 322, 323, 324, 325, 326,
	716, 717, 0, 327, 718, 328, 719, 0, 720, 329,
	330, 331, 332, 333, 334, 335, 0, 0, 0, 336,
	721, 722, 723, 0, 337, 338, 724, 0, 0, 0,
	339, 340, 341, 342, 343, 344, 345, 346, 0, 0,
	348, 349, 350, 347, 351, 0, 352, 0, 353, 354,
	355, 356, 357, 358, 359, 793, 360, 361, 362, 0,
	363, 364, 365, 0, 0, 0, 0, 0, 0, 0,
	366, 367, 368, 369, 370, 0, 371, 373, 725, 726,
	0, 376, 378, 372, 374, 0, 377, 375, 379, 0,
	380, 381, 382, 0, 0, 383, 384, 385, 0, 386,
	387, 388, 0, 389, 390, 391, 0, 392, 393, 727,
	394, 395, 396, 398, 400, 397, 399, 401, 402, 403,
	404, 405, 728, 729, 406, 0, 0, 0, 0, 0,
	0, 0, 407, 408, 409, 730, 0, 0, 0, 410,
	0, 411, 412, 413, 0, 414, 415, 0, 0, 416,
	417, 418, 731, 732, 419, 420, 421, 422, 423, 424,
	425, 426, 427, 794, 428, 733, 0, 734, 429, 0,
	430, 431, 432, 433, 434, 435, 436, 735, 736, 737,
	529, 0, 437, 438, 439, 0, 440, 441, 442, 443,
	444, 0, 0, 0, 0, 445, 446, 447, 0, 0,
	738, 448, 530, 449, 739, 740, 0, 741, 0, 450,
	451, 453, 0, 742, 0, 452, 454, 455, 0, 456,
	0, 0, 0, 457, 458, 459, 460, 461, 462, 0,
	463, 465, 464, 0, 467, 743, 466, 0, 468, 469,
	0, 0, 470, 471, 472, 473, 474, 475, 478, 0,
	0, 476, 477, 479, 480, 0, 481, 482, 484, 487,
	483, 485, 486, 488, 501, 502, 489, 490, 491, 492,
	493, 494, 495, 496, 497, 498, 499, 500, 504, 0,
	503, 0, 505, 506, 507, 508, 509, 516, 518, 519,
	514, 515, 517, 520, 521, 523, 511, 512, 513, 0,
	522, 510, 0, 0, 0, 524, 525, 526, 527, 0,
	744, 528, 745, 531, 532, 0, 0, 533, 0, 534,
	0, 0, 536, 537, 538, 0, 0, 539, 540, 746,
	0, 541, 0, 747, 542, 543, 535, 544, 545, 546,
	547, 548, 549, 550, 551, 552, 553, 0, 554, 555,
	748, 556, 557, 558, 749, 559, 560, 561, 750, 562,
	751, 563, 564, 0, 565, 566, 567, 0, 568, 569,
	570, 571, 572, 573, 574, 575, 752, 576, 577, 579,
	578, 580, 0, 581, 0, 582, 583, 584, 0, 0,
	0, 0, 0, 585, 586, 588, 0, 589, 590, 591,
	592, 587, 593, 594, 595, 596, 597, 598, 0, 600,
	601, 599, 602, 603, 0, 604, 605, 606, 607, 608,
	753, 609, 0, 610, 611, 618, 619, 620, 612, 613,
	614, 621, 622, 623, 624, 625, 626, 795, 628, 629,
	627, 630, 631, 632, 0, 633, 754, 634, 615, 616,
	635, 636, 0, 637, 638, 639, 640, 641, 642, 643,
	755, 0, 644, 0, 645, 646, 647, 648, 649, 650,
	652, 617, 653, 658, 659, 756, 654, 655, 656, 657,
	757, 661, 662, 663, 664, 0, 665, 666, 0, 660,
	651, 0, 667, 668, 669, 670, 671, 672, 0, 673,
	674, 0, 675, 758, 759, 760, 761, 0, 687, 0,
	676, 678, 679, 680, 681, 762, 682, 763, 0, 683,
	684, 685, 686, 677, 688, 689, 0, 0, 690, 691,
	693, 695, 696, 692, 694, 697, 0, 698, 0, 0,
	699, 700, 701, 764, 765, 766, 0, 703, 702, 704,
	705, 706, 767, 707, 708, 709, 300, 0, 0, 0,
	710, 711, 768, 712, 713, 714, 0, 0, 0, 0,
	0, 0, 0, 306, 307, 309, 308, 310, 311, 312,
	313, 790, 314, 315, 0, 0, 0, 0, 0, 715,
	0, 0, 0, 316, 0, 317, 318, 319, 0, 320,
	321, 322, 323, 324, 325, 326, 716, 717, 0, 327,
	718, 328, 719, 0, 720, 329, 330, 331, 332, 333,
	334, 335, 0, 0, 0, 336, 721, 722, 723, 0,
	337, 338, 724, 0, 0, 0, 339, 340, 341, 342,
	343, 344, 345, 346, 0, 0, 348, 349, 350, 347,
	351, 0, 352, 0, 353, 354, 355, 356, 357, 358,
	359, 793, 360, 361, 362, 0, 363, 364, 365, 0,
	0, 0, 0, 0, 0, 0, 366, 367, 368, 369,
	370, 0, 371, 373, 725, 726, 0, 376, 378, 372,
	374, 0, 377, 375, 379, 0, 380, 381, 382, 0,
	0, 383, 384, 385, 0, 386, 387, 388, 0, 389,
	390, 391, 0, 392, 393, 727, 394, 395, 396, 398,
	400, 397, 399, 401, 402, 403, 404, 405, 728, 729,
	406, 0, 0, 0, 0, 0, 0, 0, 407, 408,
	409, 730, 0, 0, 0, 410, 0, 411, 412, 413,
	0, 414, 415, 0, 0, 416, 417, 418, 731, 732,
	419, 420, 421, 422, 423, 424, 425, 426, 427, 4384,
	428, 733, 0, 734, 429, 0, 430, 431, 432, 433,
	434, 435, 436, 735, 736, 737, 529, 0, 437, 438,
	439, 0, 440, 441, 442, 443, 444, 0, 0, 0,
	0, 445, 446, 447, 0, 0, 738, 448, 530, 449,
	739, 740, 0, 741, 0, 450, 451, 453, 0, 742,
	0, 452, 454, 455, 0, 456, 0, 0, 0, 457,
	458, 459, 460, 461, 462, 0, 463, 465, 464, 0,
	467, 743, 466, 0, 468, 469, 0, 0, 470, 471,
	472, 473, 474, 475, 478, 0, 0, 476, 477, 479,
	480, 0, 481, 482, 484, 487, 483, 485, 486, 488,
	501, 502, 489, 490, 491, 492, 493, 494, 495, 496,
	497, 498, 499, 500, 504, 0, 503, 0, 505, 506,
	507, 508, 509, 516, 518, 519, 514, 515, 517, 520,
	521, 523, 511, 512, 513, 0, 522, 510, 0, 0,
	0, 524, 525, 526, 527, 0, 744, 528, 745, 531,
	532, 0, 0, 533, 0, 534, 0, 0, 536, 537,
	538, 0, 0, 539, 540, 746, 0, 541, 0, 747,
	542, 543, 535, 544, 545, 546, 547, 548, 549, 550,
	551, 552, 553, 0, 554, 555, 748, 556, 557, 558,
	749, 559, 560, 561, 750, 562, 751, 563, 564, 0,
	565, 566, 567, 0, 568, 569, 570, 571, 572, 573,
	574, 575, 752, 576, 577, 579, 578, 580, 0, 581,
	0, 582, 583, 584, 0, 0, 0, 0, 0, 585,
	586, 588, 0, 589, 590, 591, 592, 587, 593, 594,
	595, 596, 597, 598, 0, 600, 601, 599, 602, 603,
	0, 604, 605, 606, 607, 608, 753, 609, 0, 610,
	611, 618, 619, 620, 612, 613, 614, 621, 622, 623,
	624, 625, 626, 795, 628, 629, 627, 630, 631, 632,
	0, 633, 754, 634, 615, 616, 635, 636, 0, 637,
	638, 639, 640, 641, 642, 643, 755, 0, 644, 0,
	645, 646, 647, 648, 649, 650, 652, 617, 653, 658,
	659, 756, 654, 655, 656, 657, 757, 661, 662, 663,
	664, 0, 665, 666, 0, 660, 651, 0, 667, 668,
	669, 670, 671, 672, 0, 673, 674, 0, 675, 758,
	759, 760, 761, 0, 687, 0, 676, 678, 679, 680,
	681, 762, 682, 763, 0, 683, 684, 685, 686, 677,
	688, 689, 0, 0, 690, 691, 693, 695, 696, 692,
	694, 697, 0, 698, 0, 0, 699, 700, 701, 764,
	765, 766, 0, 703, 702, 704, 705, 706, 767, 707,
	708, 709, 300, 0, 0, 0, 710, 711, 768, 712,
	713, 714, 0, 0, 0, 0, 0, 0, 0, 306,
	307, 309, 308, 310, 311, 312, 313, 0, 314, 315,
	0, 0, 0, 0, 0, 715, 0, 0, 0, 316,
	0, 317, 318, 319, 0, 320, 321, 322, 323, 324,
	325, 326, 716, 717, 0, 327, 718, 328, 719, 0,
	720, 329, 330, 331, 332, 333, 334, 335, 0, 0,
	0, 336, 721, 722, 723, 0, 337, 338, 724, 0,
	0, 0, 339, 340, 341, 342, 343, 344, 345, 346,
	0, 0, 348, 349, 350, 347, 351, 0, 352, 0,
	353, 354, 355, 356, 357, 358, 359, 0, 360, 361,
	362, 0, 363, 364, 365, 0, 0, 0, 0, 0,
	0, 0, 366, 367, 368, 369, 370, 0, 371, 373,
	725, 726, 0, 376, 378, 372, 374, 0, 377, 375,
	379, 0, 380, 381, 382, 0, 0, 383, 384, 385,
	0, 386, 387, 388, 0, 389, 390, 391, 0, 392,
	393, 727, 394, 395, 396, 398, 400, 397, 399, 401,
	402, 403, 404, 405, 728, 729, 406, 0, 303, 0,
	0, 0, 0, 0, 407, 408, 409, 730, 0, 0,
	0, 410, 0, 411, 412, 413, 0, 414, 415, 0,
	0, 416, 417, 418, 731, 732, 419, 420, 421, 422,
	423, 424, 425, 426, 427, 0, 428, 733, 0, 734,
	429, 0, 430, 431, 432, 433, 434, 435, 436, 735,
	736, 737, 529, 0, 437, 438, 439, 0, 440, 441,
	442, 443, 444, 0, 0, 0, 304, 445, 446, 447,
	0, 0, 738, 448, 530, 449, 739, 740, 0, 741,
	0, 450, 451, 453, 0, 742, 0, 452, 454, 455,
	0, 456, 0, 0, 0, 457, 458, 459, 460, 461,
	462, 0, 463, 465, 464, 0, 467, 743, 466, 0,
	468, 469, 0, 0, 470, 471, 472, 473, 474, 475,
	478, 0, 0, 476, 477, 479, 480, 0, 481, 482,
	484, 487, 483, 485, 486, 488, 501, 502, 489, 490,
	491, 492, 493, 494, 495, 496, 497, 498, 499, 500,
	504, 0, 503, 0, 505, 506, 507, 508, 509, 516,
	518, 519, 514, 515, 517, 520, 521, 523, 511, 512,
	513, 0, 522, 510, 0, 305, 0, 524, 525, 526,
	527, 0, 744, 528, 745, 531, 532, 0, 0, 533,
	0, 534, 0, 1378, 536, 537, 538, 0, 0, 539,
	540, 746, 0, 541, 0, 747, 542, 543, 535, 544,
	545, 546, 547, 548, 549, 550, 551, 552, 553, 0,
	554, 555, 748, 556, 557, 558, 749, 559, 560, 561,
	750, 562, 751, 563, 564, 0, 565, 566, 567, 0,
	568, 569, 570, 571, 572, 573, 574, 575, 752, 576,
	577, 579, 578, 580, 0, 581, 0, 582, 583, 584,
	0, 0, 0, 0, 0, 585, 586, 588, 0, 589,
	590, 591, 592, 587, 593, 594, 595, 596, 597, 598,
	0, 600, 601, 599, 602, 603, 0, 604, 605, 606,
	607, 608, 753, 609, 0, 610, 611, 618, 619, 620,
	612, 613, 614, 621, 622, 623, 624, 625, 626, 0,
	628, 629, 627, 630, 631, 632, 0, 633, 754, 634,
	615, 616, 635, 636, 0, 637, 638, 639, 640, 641,
	642, 643, 755, 0, 644, 0, 645, 646, 647, 648,
	649, 650, 652, 617, 653, 658, 659, 756, 654, 655,
	656, 657, 757, 661, 662, 663, 664, 0, 665, 666,
	0, 660, 651, 0, 667, 668, 669, 670, 671, 672,
	0, 673, 674, 0, 675, 758, 759, 760, 761, 0,
	687, 0, 676, 678, 679, 680, 681, 762, 682, 763,
	0, 683, 684, 685, 686, 677, 688, 689, 0, 0,
	690, 691, 693, 695, 696, 692, 694, 697, 0, 698,
	0, 0, 699, 700, 701, 764, 765, 766, 0, 703,
	702, 704, 705, 706, 767, 707, 708, 709, 300, 0,
	0, 0, 710, 711, 768, 712, 713, 714, 0, 0,
	0, 0, 0, 0, 0, 306, 307, 309, 308, 310,
	311, 312, 313, 0, 314, 315, 0, 0, 0, 0,
	0, 715, 0, 0, 0, 316, 0, 317, 318, 319,
	0, 320, 321, 322, 323, 324, 325, 326, 716, 717,
	0, 327, 718, 328, 719, 0, 720, 329, 330, 331,
	332, 333, 334, 335, 0, 0, 0, 336, 721, 722,
	723, 0, 337, 338, 724, 0, 0, 0, 339, 340,
	341, 342, 343, 344, 345, 346, 0, 0, 348, 349,
	350, 347, 351, 0, 352, 0, 353, 354, 355, 356,
	357, 358, 359, 0, 360, 361, 362, 0, 363, 364,
	365, 0, 0, 0, 0, 0, 0, 0, 366, 367,
	368, 369, 370, 0, 371, 373, 725, 726, 0, 376,
	378, 372, 374, 0, 377, 375, 379, 0, 380, 381,
	382, 0, 0, 383, 384, 385, 0, 386, 387, 388,
	0, 389, 390, 391, 0, 392, 393, 727, 394, 395,
	396, 398, 400, 397, 399, 401, 402, 403, 404, 405,
	728, 729, 406, 0, 303, 0, 0, 0, 0, 0,
	407, 408, 409, 730, 0, 0, 0, 410, 0, 411,
	412, 413, 0, 414, 415, 0, 0, 416, 417, 418,
	731, 732, 419, 420, 421, 422, 423, 424, 425, 426,
	427, 0, 428, 733, 0, 734, 429, 0, 430, 431,
	432, 433, 434, 435, 436, 735, 736, 737, 529, 0,
	437, 438, 439, 0, 440, 441, 442, 443, 444, 0,
	0, 0, 304, 445, 446, 447, 0, 0, 738, 448,
	530, 449, 739, 740, 0, 741, 0, 450, 451, 453,
	0, 742, 0, 452, 454, 455, 0, 456, 0, 0,
	0, 457, 458, 459, 460, 461, 462, 0, 463, 465,
	464, 0, 467, 743, 466, 0, 468, 469, 0, 0,
	470, 471, 472, 473, 474, 475, 478, 0, 0, 476,
	477, 479, 480, 0, 481, 482, 484, 487, 483, 485,
	486, 488, 501, 502, 489, 490, 491, 492, 493, 494,
	495, 496, 497, 498, 499, 500, 504, 0, 503, 0,
	505, 506, 507, 508, 509, 516, 518, 519, 514, 515,
	517, 520, 521, 523, 511, 512, 513, 3845, 522, 510,
	0, 305, 0, 524, 525, 526, 527, 0, 744, 528,
	745, 531, 532, 0, 0, 533, 0, 534, 0, 0,
	536, 537, 538, 0, 0, 539, 540, 746, 0, 541,
	0, 747, 542, 543, 535, 544, 545, 546, 547, 548,
	549, 550, 551, 552, 553, 0, 554, 555, 748, 556,
	557, 558, 749, 559, 560, 561, 750, 562, 751, 563,
	564, 0, 565, 566, 567, 0, 568, 569, 570, 571,
	572, 573, 574, 575, 752, 576, 577, 579, 578, 580,
	0, 581, 0, 582, 583, 584, 0, 0, 0, 0,
	0, 585, 586, 588, 0, 589, 590, 591, 592, 587,
	593, 594, 595, 596, 597, 598, 0, 600, 601, 599,
	602, 603, 0, 604, 605, 606, 607, 608, 753, 609,
	0, 610, 611, 618, 619, 620, 612, 613, 614, 621,
	622, 623, 624, 625, 626, 0, 628, 629, 627, 630,
	631, 632, 0, 633, 754, 634, 615, 616, 635, 636,
	0, 637, 638, 639, 640, 641, 642, 643, 755, 0,
	644, 0, 645, 646, 647, 648, 649, 650, 652, 617,
	653, 658, 659, 756, 654, 655, 656, 657, 757, 661,
	662, 663, 664, 0, 665, 666, 0, 660, 651, 0,
	667, 668, 669, 670, 671, 672, 0, 673, 674, 0,
	675, 758, 759, 760, 761, 0, 687, 0, 676, 678,
	679, 680, 681, 762, 682, 763, 0, 683, 684, 685,
	686, 677, 688, 689, 0, 0, 690, 691, 693, 695,
	696, 692, 694, 697, 0, 698, 0, 0, 699, 700,
	701, 764, 765, 766, 0, 703, 702, 704, 705, 706,
	767, 707, 708, 709, 3370, 0, 300, 0, 710, 711,
	768, 712, 713, 714, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 306, 307, 309, 308, 310, 311, 312,
	313, 0, 314, 315, 0, 0, 0, 0, 0, 715,
	0, 0, 0, 316, 0, 317, 318, 319, 0, 320,
	321, 322, 323, 324, 325, 326, 716, 717, 0, 327,
	718, 328, 719, 0, 720, 329, 330, 331, 332, 333,
	334, 335, 0, 0, 0, 336, 721, 722, 723, 0,
	337, 338, 724, 0, 0, 0, 339, 340, 341, 342,
	343, 344, 345, 346, 0, 0, 348, 349, 350, 347,
	351, 0, 352, 0, 353, 354, 355, 356, 357, 358,
	359, 0, 360, 361, 362, 0, 363, 364, 365, 0,
	0, 0, 0, 0, 0, 0, 366, 367, 368, 369,
	370, 0, 371, 373, 725, 726, 0, 376, 378, 372,
	374, 0, 377, 375, 379, 0, 380, 381, 382, 0,
	0, 383, 384, 385, 0, 386, 387, 388, 0, 389,
	390, 391, 0, 392, 393, 727, 394, 395, 396, 398,
	400, 397, 399, 401, 402, 403, 404, 405, 728, 729,
	406, 0, 303, 0, 0, 0, 0, 0, 407, 408,
	409, 730, 0, 0, 0, 410, 0, 411, 412, 413,
	0, 414, 415, 0, 0, 416, 417, 418, 731, 732,
	419, 420, 421, 422, 423, 424, 425, 426, 427, 0,
	428, 733, 0, 734, 429, 0, 430, 431, 432, 433,
	434, 435, 436, 3369, 736, 737, 529, 0, 437, 438,
	439, 0, 440, 441, 442, 443, 444, 0, 0, 0,
	304, 445, 446, 447, 0, 0, 738, 448, 530, 449,
	739, 740, 0, 741, 0, 450, 451, 453, 0, 742,
	0, 452, 454, 455, 0, 456, 0, 0, 0, 457,
	458, 459, 460, 461, 462, 0, 463, 465, 464, 0,
	467, 743, 466, 0, 468, 469, 0, 0, 470, 471,
	472, 473, 474, 475, 478, 0, 0, 476, 477, 479,
	480, 0, 481, 482, 484, 487, 483, 485, 486, 488,
	501, 502, 489, 490, 491, 492, 493, 494, 495, 496,
	497, 498, 499, 500, 504, 0, 503, 0, 505, 506,
	507, 508, 509, 516, 518, 519, 514, 515, 517, 520,
	521, 523, 511, 512, 513, 0, 522, 510, 0, 305,
	0, 524, 525, 526, 527, 0, 744, 528, 745, 531,
	532, 0, 0, 533, 0, 534, 0, 0, 536, 537,
	538, 0, 0, 539, 540, 746, 0, 541, 0, 747,
	542, 543, 535, 544, 545, 546, 547, 548, 549, 550,
	551, 552, 553, 0, 554, 555, 748, 556, 557, 558,
	749, 559, 560, 561, 750, 562, 751, 563, 564, 0,
	565, 566, 567, 0, 568, 569, 570, 571, 572, 573,
	574, 575, 752, 576, 577, 579, 578, 580, 0, 581,
	0, 582, 583, 584, 0, 0, 0, 0, 0, 585,
	586, 588, 0, 589, 590, 591, 592, 587, 593, 594,
	595, 596, 597, 598, 0, 600, 601, 599, 602, 603,
	0, 604, 605, 606, 607, 608, 753, 609, 0, 610,
	611, 618, 619, 620, 612, 613, 614, 621, 622, 623,
	624, 625, 626, 0, 628, 629, 627, 630, 631, 632,
	0, 633, 754, 634, 615, 616, 635, 636, 0, 637,
	638, 639, 640, 641, 642, 643, 755, 0, 644, 0,
	645, 646, 647, 648, 649, 650, 652, 617, 653, 658,
	659, 756, 654, 655, 656, 657, 757, 661, 662, 663,
	664, 0, 665, 666, 0, 660, 651, 0, 667, 668,
	669, 670, 671, 672, 0, 673, 674, 0, 675, 758,
	759, 760, 761, 0, 687, 0, 676, 678, 679, 680,
	681, 762, 682, 763, 0, 683, 684, 685, 686, 677,
	688, 689, 0, 0, 690, 691, 693, 695, 696, 692,
	694, 697, 0, 698, 0, 0, 699, 700, 701, 764,
	765, 766, 0, 703, 702, 704, 705, 706, 767, 707,
	708, 709, 300, 0, 0, 0, 710, 711, 768, 712,
	713, 714, 0, 0, 0, 0, 0, 0, 0, 306,
	307, 309, 308, 310, 311, 312, 313, 790, 314, 315,
	0, 0, 0, 0, 0, 715, 0, 0, 0, 316,
	0, 317, 318, 319, 0, 320, 321, 322, 323, 324,
	325, 326, 716, 717, 0, 327, 718, 328, 719, 0,
	720, 329, 330, 331, 332, 333, 334, 335, 0, 0,
	0, 336, 721, 722, 723, 0, 337, 338, 724, 0,
	0, 0, 339, 340, 341, 342, 343, 344, 345, 346,
	0, 0, 348, 349, 350, 347, 351, 0, 352, 0,
	353, 354, 355, 356, 357, 358, 359, 793, 360, 361,
	362, 0, 363, 364, 365, 0, 0, 0, 0, 0,
	0, 0, 366, 367, 368, 369, 370, 0, 371, 373,
	725, 726, 0, 376, 378, 372, 374, 0, 377, 375,
	379, 0, 380, 381, 382, 0, 0, 383, 384, 385,
	0, 386, 387, 388, 0, 389, 390, 391, 0, 392,
	393, 727, 394, 395, 396, 398, 400, 397, 399, 401,
	402, 403, 404, 405, 728, 729, 406, 0, 0, 0,
	0, 0, 0, 0, 407, 408, 409, 730, 0, 0,
	0, 410, 0, 411, 412, 413, 0, 414, 415, 0,
	0, 416, 417, 418, 731, 732, 419, 420, 421, 422,
	423, 424, 425, 426, 427, 794, 428, 733, 0, 734,
	429, 0, 430, 431, 432, 433, 434, 435, 436, 735,
	736, 737, 529, 0, 437, 438, 439, 0, 440, 441,
	442, 443, 444, 0, 0, 0, 0, 445, 446, 447,
	0, 0, 738, 448, 530, 449, 739, 740, 0, 741,
	0, 450, 451, 453, 0, 742, 0, 452, 454, 455,
	0, 456, 0, 0, 0, 457, 458, 459, 460, 461,
	462, 0, 463, 465, 464, 0, 467, 743, 466, 0,
	468, 469, 0, 0, 470, 471, 472, 473, 474, 475,
	478, 0, 0, 476, 477, 479, 480, 0, 481, 482,
	484, 487, 483, 485, 486, 488, 501, 502, 489, 490,
	491, 492, 493, 494, 495, 496, 497, 498, 499, 500,
	504, 0, 503, 0, 505, 506, 507, 508, 509, 516,
	518, 519, 514, 515, 517, 520, 521, 523, 511, 512,
	513, 0, 522, 510, 0, 0, 0, 524, 525, 526,
	527, 0, 744, 528, 745, 531, 532, 0, 0, 533,
	0, 534, 0, 0, 536, 537, 538, 0, 0, 539,
	540, 746, 0, 541, 0, 747, 542, 543, 535, 544,
	545, 546, 547, 548, 549, 550, 551, 552, 553, 0,
	554, 555, 748, 556, 557, 558, 749, 559, 560, 561,
	750, 562, 751, 563, 564, 0, 565, 566, 567, 0,
	568, 569, 570, 571, 572, 573, 574, 575, 752, 576,
	577, 579, 578, 580, 0, 581, 0, 582, 583, 584,
	0, 0, 0, 0, 0, 585, 586, 588, 0, 589,
	590, 591, 592, 587, 593, 594, 595, 596, 597, 598,
	0, 600, 601, 599, 602, 603, 0, 604, 605, 606,
	607, 608, 753, 609, 0, 610, 611, 618, 619, 620,
	612, 613, 614, 621, 622, 623, 624, 625, 626, 795,
	628, 629, 627, 630, 631, 632, 0, 633, 754, 634,
	615, 616, 635, 636, 0, 637, 638, 639, 640, 641,
	642, 643, 755, 0, 644, 0, 645, 646, 647, 648,
	649, 650, 652, 617, 653, 658, 659, 756, 654, 655,
	656, 657, 757, 661, 662, 663, 664, 0, 665, 3113,
	0, 660, 651, 0, 667, 668, 669, 670, 671, 672,
	0, 673, 674, 0, 675, 758, 759, 760, 761, 0,
	687, 0, 676, 678, 679, 680, 681, 762, 682, 763,
	0, 683, 684, 685, 686, 677, 688, 689, 0, 0,
	690, 691, 693, 695, 696, 692, 694, 697, 0, 698,
	0, 0, 699, 700, 701, 764, 765, 766, 0, 703,
	702, 704, 705, 706, 767, 707, 708, 709, 2580, 0,
	300, 0, 710, 711, 768, 712, 713, 714, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 306, 307, 309,
	308, 310, 311, 312, 313, 0, 314, 315, 0, 0,
	0, 0, 0, 715, 0, 0, 0, 316, 0, 317,
	318, 319, 0, 320, 321, 322, 323, 324, 325, 326,
	716, 717, 0, 327, 718, 328, 719, 0, 720, 329,
	330, 331, 332, 333, 334, 335, 0, 0, 0, 336,
	721, 722, 723, 0, 337, 338, 724, 0, 0, 0,
	339, 340, 341, 342, 343, 344, 345, 346, 0, 0,
	348, 349, 350, 347, 351, 0, 352, 0, 353, 354,
	355, 356, 357, 358, 359, 0, 360, 361, 362, 0,
	363, 364, 365, 0, 0, 0, 0, 0, 0, 0,
	366, 367, 368, 369, 370, 0, 371, 373, 725, 726,
	0, 376, 378, 372, 374, 0, 377, 375, 379, 0,
	380, 381, 382, 0, 0, 383, 384, 385, 0, 386,
	387, 388, 0, 389, 390, 391, 0, 392, 393, 727,
	394, 395, 396, 398, 400, 397, 399, 401, 402, 403,
	404, 405, 728, 729, 406, 0, 303, 0, 0, 0,
	0, 0, 407, 408, 409, 730, 0, 0, 0, 410,
	0, 411, 412, 413, 0, 414, 415, 0, 0, 416,
	417, 418, 731, 732, 419, 420, 421, 422, 423, 424,
	425, 426, 427, 0, 428, 733, 0, 734, 429, 0,
	430, 431, 432, 433, 434, 435, 436, 735, 736, 737,
	529, 0, 437, 438, 439, 0, 440, 441, 442, 443,
	444, 0, 0, 0, 304, 445, 446, 447, 0, 0,
	738, 448, 530, 449, 739, 740, 0, 741, 0, 450,
	451, 453, 0, 742, 0, 452, 454, 455, 0, 456,
	0, 0, 0, 457, 458, 459, 460, 461, 462, 0,
	463, 465, 464, 0, 467, 743, 466, 0, 468, 469,
	0, 0, 470, 471, 472, 473, 474, 475, 478, 0,
	0, 476, 477, 479, 480, 0, 481, 482, 484, 487,
	483, 485, 486, 488, 501, 502, 489, 490, 491, 492,
	493, 494, 495, 496, 497, 498, 499, 500, 504, 0,
	503, 0, 505, 506, 507, 508, 509, 516, 518, 519,
	514, 515, 517, 520, 521, 523, 511, 512, 513, 0,
	522, 510, 0, 305, 0, 524, 525, 526, 527, 0,
	744, 528, 745, 531, 532, 0, 0, 533, 0, 534,
	0, 0, 536, 537, 538, 0, 0, 539, 540, 746,
	0, 541, 0, 747, 542, 543, 535, 544, 545, 546,
	547, 548, 549, 550, 551, 552, 553, 0, 554, 555,
	748, 556, 557, 558, 749, 559, 560, 561, 750, 562,
	751, 563, 564, 0, 565, 566, 567, 0, 568, 569,
	570, 571, 572, 573, 574, 575, 752, 576, 577, 579,
	578, 580, 0, 581, 0, 582, 583, 584, 0, 0,
	0, 0, 0, 585, 586, 588, 0, 589, 590, 591,
	592, 587, 593, 594, 595, 596, 597, 598, 0, 600,
	601, 599, 602, 603, 0, 604, 605, 606, 607, 608,
	753, 609, 0, 610, 611, 618, 619, 620, 612, 613,
	614, 621, 622, 623, 624, 625, 626, 0, 628, 629,
	627, 630, 631, 632, 0, 633, 754, 634, 615, 616,
	635, 636, 0, 637, 638, 639, 640, 641, 642, 643,
	755, 0, 644, 0, 645, 646, 647, 648, 649, 650,
	652, 617, 653, 658, 659, 756, 654, 655, 656, 657,
	757, 661, 662, 663, 664, 0, 665, 666, 0, 660,
	651, 0, 667, 668, 669, 670, 671, 672, 0, 673,
	674, 0, 675, 758, 759, 760, 761, 0, 687, 0,
	676, 678, 679, 680, 681, 762, 682, 763, 0, 683,
	684, 685, 686, 677, 688, 689, 0, 0, 690, 691,
	693, 695, 696, 692, 694, 697, 0, 698, 0, 0,
	699, 700, 701, 764, 765, 766, 0, 703, 702, 704,
	705, 706, 767, 707, 708, 709, 2524, 0, 300, 0,
	710, 711, 768, 712, 713, 714, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 306, 307, 309, 308, 310,
	311, 312, 313, 0, 314, 315, 0, 0, 0, 0,
	0, 715, 0, 0, 0, 316, 0, 317, 318, 319,
	0, 320, 321, 322, 323, 324, 325, 326, 716, 717,
	0, 327, 718, 328, 719, 0, 720, 329, 330, 331,
	332, 333, 334, 335, 0, 0, 0, 336, 721, 722,
	723, 0, 337, 338, 724, 0, 0, 0, 339, 340,
	341, 342, 343, 344, 345, 346, 0, 0, 348, 349,
	350, 347, 351, 0, 352, 0, 353, 354, 355, 356,
	357, 358, 359, 0, 360, 361, 362, 0, 363, 364,
	365, 0, 0, 0, 0, 0, 0, 0, 366, 367,
	368, 369, 370, 0, 371, 373, 725, 726, 0, 376,
	378, 372, 374, 0, 377, 375, 379, 0, 380, 381,
	382, 0, 0, 383, 384, 385, 0, 386, 387, 388,
	0, 389, 390, 391, 0, 392, 393, 727, 394, 395,
	396, 398, 400, 397, 399, 401, 402, 403, 404, 405,
	728, 729, 406, 0, 303, 0, 0, 0, 0, 0,
	407, 408, 409, 730, 0, 0, 0, 410, 0, 411,
	412, 413, 0, 414, 415, 0, 0, 416, 417, 418,
	731, 732, 419, 420, 421, 422, 423, 424, 425, 426,
	427, 0, 428, 733, 0, 734, 429, 0, 430, 431,
	432, 433, 434, 435, 436, 2523, 736, 737, 529, 0,
	437, 438, 439, 0, 440, 441, 442, 443, 444, 0,
	0, 0, 304, 445, 446, 447, 0, 0, 738, 448,
	530, 449, 739, 740, 0, 741, 0, 450, 451, 453,
	0, 742, 0, 452, 454, 455, 0, 456, 0, 0,
	0, 457, 458, 459, 460, 461, 462, 0, 463, 465,
	464, 0, 467, 743, 466, 0, 468, 469, 0, 0,
	470, 471, 472, 473, 474, 475, 478, 0, 0, 476,
	477, 479, 480, 0, 481, 482, 484, 487, 483, 485,
	486, 488, 501, 502, 489, 490, 491, 492, 493, 494,
	495, 496, 497, 498, 499, 500, 504, 0, 503, 0,
	505, 506, 507, 508, 509, 516, 518, 519, 514, 515,
	517, 520, 521, 523, 511, 512, 513, 0, 522, 510,
	0, 305, 0, 524, 525, 526, 527, 0, 744, 528,
	745, 531, 532, 0, 0, 533, 0, 534, 0, 0,
	536, 537, 538, 0, 0, 539, 540, 746, 0, 541,
	0, 747, 542, 543, 535, 544, 545, 546, 547, 548,
	549, 550, 551, 552, 553, 0, 554, 555, 748, 556,
	557, 558, 749, 559, 560, 561, 750, 562, 751, 563,
	564, 0, 565, 566, 567, 0, 568, 569, 570, 571,
	572, 573, 574, 575, 752, 576, 577, 579, 578, 580,
	0, 581, 0, 582, 583, 584, 0, 0, 0, 0,
	0, 585, 586, 588, 0, 589, 590, 591, 592, 587,
	593, 594, 595, 596, 597, 598, 0, 600, 601, 599,
	602, 603, 0, 604, 605, 606, 607, 608, 753, 609,
	0, 610, 611, 618, 619, 620, 612, 613, 614, 621,
	622, 623, 624, 625, 626, 0, 628, 629, 627, 630,
	631, 632, 0, 633, 754, 634, 615, 616, 635, 636,
	0, 637, 638, 639, 640, 641, 642, 643, 755, 0,
	644, 0, 645, 646, 647, 648, 649, 650, 652, 617,
	653, 658, 659, 756, 654, 655, 656, 657, 757, 661,
	662, 663, 664, 0, 665, 666, 0, 660, 651, 0,
	667, 668, 669, 670, 671, 672, 0, 673, 674, 0,
	675, 758, 759, 760, 761, 0, 687, 0, 676, 678,
	679, 680, 681, 762, 682, 763, 0, 683, 684, 685,
	686, 677, 688, 689, 0, 0, 690, 691, 693, 695,
	696, 692, 694, 697, 0, 698, 0, 0, 699, 700,
	701, 764, 765, 766, 0, 703, 702, 704, 705, 706,
	767, 707, 708, 709, 2508, 0, 300, 0, 710, 711,
	768, 712, 713, 714, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 306, 307, 309, 308, 310, 311, 312,
	313, 0, 314, 315, 0, 0, 0, 0, 0, 715,
	0, 0, 0, 316, 0, 317, 318, 319, 0, 320,
	321, 322, 323, 324, 325, 326, 716, 717, 0, 327,
	718, 328, 719, 0, 720, 329, 330, 331, 332, 333,
	334, 335, 0, 0, 0, 336, 721, 722, 723, 0,
	337, 338, 724, 0, 0, 0, 339, 340, 341, 342,
	343, 344, 345, 346, 0, 0, 348, 349, 350, 347,
	351, 0, 352, 0, 353, 354, 355, 356, 357, 358,
	359, 0, 360, 361, 362, 0, 363, 364, 365, 0,
	0, 0, 0, 0, 0, 0, 366, 367, 368, 369,
	370, 0, 371, 373, 725, 726, 0, 376, 378, 372,
	374, 0, 377, 375, 379, 0, 380, 381, 382, 0,
	0, 383, 384, 385, 0, 386, 387, 388, 0, 389,
	390, 391, 0, 392, 393, 727, 394, 395, 396, 398,
	400, 397, 399, 401, 402, 403, 404, 405, 728, 729,
	406, 0, 303, 0, 0, 0, 0, 0, 407, 408,
	409, 730, 0, 0, 0, 410, 0, 411, 412, 413,
	0, 414, 415, 0, 0, 416, 417, 418, 731, 732,
	419, 420, 421, 422, 423, 424, 425, 426, 427, 0,
	428, 733, 0, 734, 429, 0, 430, 431, 432, 433,
	434, 435, 436, 2510, 736, 737, 529, 0, 437, 438,
	439, 0, 440, 441, 442, 443, 444, 0, 0, 0,
	304, 445, 446, 447, 0, 0, 738, 448, 530, 449,
	739, 740, 0, 741, 0, 450, 451, 453, 0, 742,
	0, 452, 454, 455, 0, 456, 0, 0, 0, 457,
	458, 459, 460, 461, 462, 0, 463, 465, 464, 0,
	467, 743, 466, 0, 468, 469, 0, 0, 470, 471,
	472, 473, 474, 475, 478, 0, 0, 476, 477, 479,
	480, 0, 481, 482, 484, 487, 483, 485, 486, 488,
	501, 502, 489, 490, 491, 492, 493, 494, 495, 496,
	497, 498, 499, 500, 504, 0, 503, 0, 505, 506,
	507, 508, 509, 516, 518, 519, 514, 515, 517, 520,
	521, 523, 511, 512, 513, 0, 522, 510, 0, 305,
	0, 524, 525, 526, 527, 0, 744, 528, 745, 531,
	532, 0, 0, 533, 0, 534, 0, 0, 536, 537,
	538, 0, 0, 539, 540, 746, 0, 541, 0, 747,
	542, 543, 535, 544, 545, 546, 547, 548, 549, 550,
	551, 552, 553, 0, 554, 555, 748, 556, 557, 558,
	749, 559, 560, 561, 750, 562, 751, 563, 564, 0,
	565, 566, 567, 0, 568, 569, 570, 571, 572, 573,
	574, 575, 752, 576, 577, 579, 578, 580, 0, 581,
	0, 582, 583, 584, 0, 0, 0, 0, 0, 585,
	586, 588, 0, 589, 590, 591, 592, 587, 593, 594,
	595, 596, 597, 598, 0, 600, 601, 599, 602, 603,
	0, 604, 605, 606, 607, 608, 753, 609, 0, 610,
	611, 618, 619, 620, 612, 613, 614, 621, 622, 623,
	624, 625, 626, 0, 628, 629, 627, 630, 631, 632,
	0, 633, 754, 634, 615, 616, 635, 636, 0, 637,
	638, 639, 640, 641, 642, 643, 755, 0, 644, 0,
	645, 646, 647, 648, 649, 650, 652, 617, 653, 658,
	659, 756, 654, 655, 656, 657, 757, 661, 662, 663,
	664, 0, 665, 666, 0, 660, 651, 0, 667, 668,
	669, 670, 671, 672, 0, 673, 674, 0, 675, 758,
	759, 760, 761, 0, 687, 0, 676, 678, 679, 680,
	681, 762, 682, 763, 0, 683, 684, 685, 686, 677,
	688, 689, 0, 0, 690, 691, 693, 695, 696, 692,
	694, 697, 0, 698, 0, 0, 699, 700, 701, 764,
	765, 766, 0, 703, 702, 704, 705, 706, 767, 707,
	708, 709, 300, 0, 0, 0, 710, 711, 768, 712,
	713, 714, 0, 0, 0, 0, 0, 0, 0, 306,
	307, 309, 308, 310, 311, 312, 313, 0, 314, 315,
	0, 0, 0, 0, 0, 715, 0, 0, 0, 316,
	0, 317, 318, 319, 0, 320, 321, 322, 323, 324,
	325, 326, 716, 717, 0, 327, 718, 328, 719, 0,
	720, 329, 330, 331, 332, 333, 334, 335, 0, 0,
	0, 336, 721, 722, 723, 0, 337, 338, 724, 0,
	0, 0, 339, 340, 341, 342, 343, 344, 345, 346,
	0, 0, 348, 349, 350, 347, 351, 0, 352, 0,
	353, 354, 355, 356, 357, 358, 359, 0, 360, 361,
	362, 0, 363, 364, 365, 0, 0, 0, 0, 0,
	0, 0, 366, 367, 368, 369, 370, 0, 371, 373,
	725, 726, 0, 376, 378, 372, 374, 0, 377, 375,
	379, 0, 380, 381, 382, 0, 0, 383, 384, 385,
	0, 386, 387, 388, 0, 389, 390, 391, 0, 392,
	393, 727, 394, 395, 396, 398, 400, 397, 399, 401,
	402, 403, 404, 405, 728, 729, 406, 0, 303, 0,
	0, 0, 0, 0, 407, 408, 409, 730, 0, 0,
	0, 410, 0, 411, 412, 413, 0, 414, 415, 0,
	0, 416, 417, 418, 731, 732, 419, 420, 421, 422,
	423, 424, 425, 426, 427, 0, 428, 733, 0, 734,
	429, 0, 430, 431, 432, 433, 434, 435, 436, 2470,
	736, 737, 529, 0, 437, 438, 439, 0, 440, 441,
	442, 443, 444, 0, 0, 0, 304, 445, 446, 447,
	0, 0, 738, 448, 530, 449, 739, 740, 0, 741,
	0, 450, 451, 453, 0, 742, 0, 452, 454, 455,
	0, 456, 0, 0, 0, 457, 458, 459, 460, 461,
	462, 0, 463, 465, 464, 0, 467, 743, 466, 0,
	468, 469, 0, 0, 470, 471, 472, 473, 474, 475,
	478, 0, 0, 476, 477, 479, 480, 0, 481, 482,
	484, 487, 483, 485, 486, 488, 501, 502, 489, 490,
	491, 492, 493, 494, 495, 496, 497, 498, 499, 500,
	504, 0, 503, 0, 505, 506, 507, 508, 509, 516,
	518, 519, 514, 515, 517, 520, 521, 523, 511, 512,
	513, 0, 522, 510, 0, 305, 0, 524, 525, 526,
	527, 0, 744, 528, 745, 531, 532, 0, 0, 533,
	0, 534, 0, 1378, 536, 537, 538, 0, 0, 539,
	540, 746, 0, 541, 0, 747, 542, 543, 535, 544,
	545, 546, 547, 548, 549, 550, 551, 552, 553, 0,
	554, 555, 748, 556, 557, 558, 749, 559, 560, 561,
	750, 562, 751, 563, 564, 0, 565, 566, 567, 0,
	568, 569, 570, 571, 572, 573, 574, 575, 752, 576,
	577, 579, 578, 580, 0, 581, 0, 582, 583, 584,
	0, 0, 0, 0, 0, 585, 586, 588, 0, 589,
	590, 591, 592, 587, 593, 594, 595, 596, 597, 598,
	0, 600, 601, 599, 602, 603, 0, 604, 605, 606,
	607, 608, 753, 609, 0, 610, 611, 618, 619, 620,
	612, 613, 614, 621, 622, 623, 624, 625, 626, 0,
	628, 629, 627, 630, 631, 632, 0, 633, 754, 634,
	615, 616, 635, 636, 0, 637, 638, 639, 640, 641,
	642, 643, 755, 0, 644, 0, 645, 646, 647, 648,
	649, 650, 652, 617, 653, 658, 659, 756, 654, 655,
	656, 657, 757, 661, 662, 663, 664, 0, 665, 666,
	0, 660, 651, 0, 667, 668, 669, 670, 671, 672,
	0, 673, 674, 0, 675, 758, 759, 760, 761, 0,
	687, 0, 676, 678, 679, 680, 681, 762, 682, 763,
	0, 683, 684, 685, 686, 677, 688, 689, 0, 0,
	690, 691, 693, 695, 696, 692, 694, 697, 0, 698,
	0, 0, 699, 700, 701, 764, 765, 766, 0, 703,
	702, 704, 705, 706, 767, 707, 708, 709, 1769, 0,
	300, 0, 710, 711, 768, 712, 713, 714, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 306, 307, 309,
	308, 310, 311, 312, 313, 0, 314, 315, 0, 0,
	0, 0, 0, 715, 0, 0, 0, 316, 0, 317,
	318, 319, 0, 320, 321, 322, 323, 324, 325, 326,
	716, 717, 0, 327, 718, 328, 719, 0, 720, 329,
	330, 331, 332, 333, 334, 335, 0, 0, 0, 336,
	721, 722, 723, 0, 337, 338, 724, 0, 0, 0,
	339, 340, 341, 342, 343, 344, 345, 346, 0, 0,
	348, 349, 350, 347, 351, 0, 352, 0, 353, 354,
	355, 356, 357, 358, 359, 0, 360, 361, 362, 0,
	363, 364, 365, 0, 0, 0, 0, 0, 0, 0,
	366, 367, 368, 369, 370, 0, 371, 373, 725, 726,
	0, 376, 378, 372, 374, 0, 377, 375, 379, 0,
	380, 381, 382, 0, 0, 383, 384, 385, 0, 386,
	387, 388, 0, 389, 390, 391, 0, 392, 393, 727,
	394, 395, 396, 398, 400, 397, 399, 401, 402, 403,
	404, 405, 728, 729, 406, 0, 303, 0, 0, 0,
	0, 0, 407, 408, 409, 730, 0, 0, 0, 410,
	0, 411, 412, 413, 0, 414, 415, 0, 0, 416,
	417, 418, 731, 732, 419, 420, 421, 422, 423, 424,
	425, 426, 427, 0, 428, 733, 0, 734, 429, 0,
	430, 431, 432, 433, 434, 435, 436, 1768, 736, 737,
	529, 0, 437, 438, 439, 0, 440, 441, 442, 443,
	444, 0, 0, 0, 304, 445, 446, 447, 0, 0,
	738, 448, 530, 449, 739, 740, 0, 741, 0, 450,
	451, 453, 0, 742, 0, 452, 454, 455, 0, 456,
	0, 0, 0, 457, 458, 459, 460, 461, 462, 0,
	463, 465, 464, 0, 467, 743, 466, 0, 468, 469,
	0, 0, 470, 471, 472, 473, 474, 475, 478, 0,
	0, 476, 477, 479, 480, 0, 481, 482, 484, 487,
	483, 485, 486, 488, 501, 502, 489, 490, 491, 492,
	493, 494, 495, 496, 497, 498, 499, 500, 504, 0,
	503, 0, 505, 506, 507, 508, 509, 516, 518, 519,
	514, 515, 517, 520, 521, 523, 511, 512, 513, 0,
	522, 510, 0, 305, 0, 524, 525, 526, 527, 0,
	744, 528, 745, 531, 532, 0, 0, 533, 0, 534,
	0, 0, 536, 537, 538, 0, 0, 539, 540, 746,
	0, 541, 0, 747, 542, 543, 535, 544, 545, 546,
	547, 548, 549, 550, 551, 552, 553, 0, 554, 555,
	748, 556, 557, 558, 749, 559, 560, 561, 750, 562,
	751, 563, 564, 0, 565, 566, 567, 0, 568, 569,
	570, 571, 572, 573, 574, 575, 752, 576, 577, 579,
	578, 580, 0, 581, 0, 582, 583, 584, 0, 0,
	0, 0, 0, 585, 586, 588, 0, 589, 590, 591,
	592, 587, 593, 594, 595, 596, 597, 598, 0, 600,
	601, 599, 602, 603, 0, 604, 605, 606, 607, 608,
	753, 609, 0, 610, 611, 618, 619, 620, 612, 613,
	614, 621, 622, 623, 624, 625, 626, 0, 628, 629,
	627, 630, 631, 632, 0, 633, 754, 634, 615, 616,
	635, 636, 0, 637, 638, 639, 640, 641, 642, 643,
	755, 0, 644, 0, 645, 646, 647, 648, 649, 650,
	652, 617, 653, 658, 659, 756, 654, 655, 656, 657,
	757, 661, 662, 663, 664, 0, 665, 666, 0, 660,
	651, 0, 667, 668, 669, 670, 671, 672, 0, 673,
	674, 0, 675, 758, 759, 760, 761, 0, 687, 0,
	676, 678, 679, 680, 681, 762, 682, 763, 0, 683,
	684, 685, 686, 677, 688, 689, 0, 0, 690, 691,
	693, 695, 696, 692, 694, 697, 0, 698, 0, 0,
	699, 700, 701, 764, 765, 766, 0, 703, 702, 704,
	705, 706, 767, 707, 708, 709, 1659, 0, 300, 0,
	710, 711, 768, 712, 713, 714, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 306, 307, 309, 308, 310,
	311, 312, 313, 0, 314, 315, 0, 0, 0, 0,
	0, 715, 0, 0, 0, 316, 0, 317, 318, 319,
	0, 320, 321, 322, 323, 324, 325, 326, 716, 717,
	0, 327, 718, 328, 719, 0, 720, 329, 330, 331,
	332, 333, 334, 335, 0, 0, 0, 336, 721, 722,
	723, 0, 337, 338, 724, 0, 0, 0, 339, 340,
	341, 342, 343, 344, 345, 346, 0, 0, 348, 349,
	350, 347, 351, 0, 352, 0, 353, 354, 355, 356,
	357, 358, 359, 0, 360, 361, 362, 0, 363, 364,
	365, 0, 0, 0, 0, 0, 0, 0, 366, 367,
	368, 369, 370, 0, 371, 373, 725, 726, 0, 376,
	378, 372, 374, 0, 377, 375, 379, 0, 380, 381,
	382, 0, 0, 383, 384, 385, 0, 386, 387, 388,
	0, 389, 390, 391, 0, 392, 393, 727, 394, 395,
	396, 398, 400, 397, 399, 401, 402, 403, 404, 405,
	728, 729, 406, 0, 303, 0, 0, 0, 0, 0,
	407, 408, 409, 730, 0, 0, 0, 410, 0, 411,
	412, 413, 0, 414, 415, 0, 0, 416, 417, 418,
	731, 732, 419, 420, 421, 422, 423, 424, 425, 426,
	427, 0, 428, 733, 0, 734, 429, 0, 430, 431,
	432, 433, 434, 435, 436, 735, 736, 737, 529, 0,
	437, 438, 439, 0, 440, 441, 442, 443, 444, 0,
	0, 0, 304, 445, 446, 447, 0, 0, 738, 448,
	530, 449, 739, 740, 0, 741, 0, 450, 451, 453,
	0, 742, 0, 452, 454, 455, 0, 456, 0, 0,
	0, 457, 458, 459, 460, 461, 462, 0, 463, 465,
	464, 0, 467, 743, 466, 0, 468, 469, 0, 0,
	470, 471, 472, 473, 474, 475, 478, 0, 0, 476,
	477, 479, 480, 0, 481, 482, 484, 487, 483, 485,
	486, 488, 501, 502, 489, 490, 491, 492, 493, 494,
	495, 496, 497, 498, 499, 500, 504, 0, 503, 0,
	505, 506, 507, 508, 509, 516, 518, 519, 514, 515,
	517, 520, 521, 523, 511, 512, 513, 0, 522, 510,
	0, 305, 0, 524, 525, 526, 527, 0, 744, 528,
	745, 531, 532, 0, 0, 533, 0, 534, 0, 0,
	536, 537, 538, 0, 0, 539, 540, 746, 0, 541,
	0, 747, 542, 543, 535, 544, 545, 546, 547, 548,
	549, 550, 551, 552, 553, 0, 554, 555, 748, 556,
	557, 558, 749, 559, 560, 561, 750, 562, 751, 563,
	564, 0, 565, 566, 567, 0, 568, 569, 570, 571,
	572, 573, 574, 575, 752, 576, 577, 579, 578, 580,
	0, 581, 0, 582, 583, 584, 0, 0, 0, 0,
	0, 585, 586, 588, 0, 589, 590, 591, 592, 587,
	593, 594, 595, 596, 597, 598, 0, 600, 601, 599,
	602, 603, 0, 604, 605, 606, 607, 608, 753, 609,
	0, 610, 611, 618, 619, 620, 612, 613, 614, 621,
	622, 623, 624, 625, 626, 0, 628, 629, 627, 630,
	631, 632, 0, 633, 754, 634, 615, 616, 635, 636,
	0, 637, 638, 639, 640, 641, 642, 643, 755, 0,
	644, 0, 645, 646, 647, 648, 649, 650, 652, 617,
	653, 658, 659, 756, 654, 655, 656, 657, 757, 661,
	662, 663, 664, 0, 665, 666, 0, 660, 651, 0,
	667, 668, 669, 670, 671, 672, 0, 673, 674, 0,
	675, 758, 759, 760, 761, 0, 687, 0, 676, 678,
	679, 680, 681, 762, 682, 763, 0, 683, 684, 685,
	686, 677, 688, 689, 0, 0, 690, 691, 693, 695,
	696, 692, 694, 697, 0, 698, 0, 0, 699, 700,
	701, 764, 765, 766, 0, 703, 702, 704, 705, 706,
	767, 707, 708, 709, 1652, 0, 300, 0, 710, 711,
	768, 712, 713, 714, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 306, 307, 309, 308, 310, 311, 312,
	313, 0, 314, 315, 0, 0, 0, 0, 0, 715,
	0, 0, 0, 316, 0, 317, 318, 319, 0, 320,
	321, 322, 323, 324, 325, 326, 716, 717, 0, 327,
	718, 328, 719, 0, 720, 329, 330, 331, 332, 333,
	334, 335, 0, 0, 0, 336, 721, 722, 723, 0,
	337, 338, 724, 0, 0, 0, 339, 340, 341, 342,
	343, 344, 345, 346, 0, 0, 348, 349, 350, 347,
	351, 0, 352, 0, 353, 354, 355, 356, 357, 358,
	359, 0, 360, 361, 362, 0, 363, 364, 365, 0,
	0, 0, 0, 0, 0, 0, 366, 367, 368, 369,
	370, 0, 371, 373, 725, 726, 0, 376, 378, 372,
	374, 0, 377, 375, 379, 0, 380, 381, 382, 0,
	0, 383, 384, 385, 0, 386, 387, 388, 0, 389,
	390, 391, 0, 392, 393, 727, 394, 395, 396, 398,
	400, 397, 399, 401, 402, 403, 404, 405, 728, 729,
	406, 0, 303, 0, 0, 0, 0, 0, 407, 408,
	409, 730, 0, 0, 0, 410, 0, 411, 412, 413,
	0, 414, 415, 0, 0, 416, 417, 418, 731, 732,
	419, 420, 421, 422, 423, 424, 425, 426, 427, 0,
	428, 733, 0, 734, 429, 0, 430, 431, 432, 433,
	434, 435, 436, 1654, 736, 737, 529, 0, 437, 438,
	439, 0, 440, 441, 442, 443, 444, 0, 0, 0,
	304, 445, 446, 447, 0, 0, 738, 448, 530, 449,
	739, 740, 0, 741, 0, 450, 451, 453, 0, 742,
	0, 452, 454, 455, 0, 456, 0, 0, 0, 457,
	458, 459, 460, 461, 462, 0, 463, 465, 464, 0,
	467, 743, 466, 0, 468, 469, 0, 0, 470, 471,
	472, 473, 474, 475, 478, 0, 0, 476, 477, 479,
	480, 0, 481, 482, 484, 487, 483, 485, 486, 488,
	501, 502, 489, 490, 491, 492, 493, 494, 495, 496,
	497, 498, 499, 500, 504, 0, 503, 0, 505, 506,
	507, 508, 509, 516, 518, 519, 514, 515, 517, 520,
	521, 523, 511, 512, 513, 0, 522, 510, 0, 305,
	0, 524, 525, 526, 527, 0, 744, 528, 745, 531,
	532, 0, 0, 533, 0, 534, 0, 0, 536, 537,
	538, 0, 0, 539, 540, 746, 0, 541, 0, 747,
	542, 543, 535, 544, 545, 546, 547, 548, 549, 550,
	551, 552, 553, 0, 554, 555, 748, 556, 557, 558,
	749, 559, 560, 561, 750, 562, 751, 563, 564, 0,
	565, 566, 567, 0, 568, 569, 570, 571, 572, 573,
	574, 575, 752, 576, 577, 579, 578, 580, 0, 581,
	0, 582, 583, 584, 0, 0, 0, 0, 0, 585,
	586, 588, 0, 589, 590, 591, 592, 587, 593, 594,
	595, 596, 597, 598, 0, 600, 601, 599, 602, 603,
	0, 604, 605, 606, 607, 608, 753, 609, 0, 610,
	611, 618, 619, 620, 612, 613, 614, 621, 622, 623,
	624, 625, 626, 0, 628, 629, 627, 630, 631, 632,
	0, 633, 754, 634, 615, 616, 635, 636, 0, 637,
	638, 639, 640, 641, 642, 643, 755, 0, 644, 0,
	645, 646, 647, 648, 649, 650, 652, 617, 653, 658,
	659, 756, 654, 655, 656, 657, 757, 661, 662, 663,
	664, 0, 665, 666, 0, 660, 651, 0, 667, 668,
	669, 670, 671, 672, 0, 673, 674, 0, 675, 758,
	759, 760, 761, 0, 687, 0, 676, 678, 679, 680,
	681, 762, 682, 763, 0, 683, 684, 685, 686, 677,
	688, 689, 0, 0, 690, 691, 693, 695, 696, 692,
	694, 697, 0, 698, 0, 0, 699, 700, 701, 764,
	765, 766, 0, 703, 702, 704, 705, 706, 767, 707,
	708, 709, 1459, 0, 300, 0, 710, 711, 768, 712,
	713, 714, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 306, 307, 309, 308, 310, 311, 312, 313, 0,
	314, 315, 0, 0, 0, 0, 0, 715, 0, 0,
	0, 316, 0, 317, 318, 319, 0, 320, 321, 322,
	323, 324, 325, 326, 716, 717, 0, 327, 718, 328,
	719, 0, 720, 329, 330, 331, 332, 333, 334, 335,
	0, 0, 0, 336, 721, 722, 723, 0, 337, 338,
	724, 0, 0, 0, 339, 340, 341, 342, 343, 344,
	345, 346, 0, 0, 348, 349, 350, 347, 351, 0,
	352, 0, 353, 354, 355, 356, 357, 358, 359, 0,
	360, 361, 362, 0, 363, 364, 365, 0, 0, 0,
	0, 0, 0, 0, 366, 367, 368, 369, 370, 0,
	371, 373, 725, 726, 0, 376, 378, 372, 374, 0,
	377, 375, 379, 0, 380, 381, 382, 0, 0, 383,
	384, 385, 0, 386, 387, 388, 0, 389, 390, 391,
	0, 392, 393, 727, 394, 395, 396, 398, 400, 397,
	399, 401, 402, 403, 404, 405, 728, 729, 406, 0,
	303, 0, 0, 0, 0, 0, 407, 408, 409, 730,
	0, 0, 0, 410, 0, 411, 412, 413, 0, 414,
	415, 0, 0, 416, 417, 418, 731, 732, 419, 420,
	421, 422, 423, 424, 425, 426, 427, 0, 428, 733,
	0, 734, 429, 0, 430, 431, 432, 433, 434, 435,
	436, 1458, 736, 737, 529, 0, 437, 438, 439, 0,
	440, 441, 442, 443, 444, 0, 0, 0, 304, 445,
	446, 447, 0, 0, 738, 448, 530, 449, 739, 740,
	0, 741, 0, 450, 451, 453, 0, 742, 0, 452,
	454, 455, 0, 456, 0, 0, 0, 457, 458, 459,
	460, 461, 462, 0, 463, 465, 464, 0, 467, 743,
	466, 0, 468, 469, 0, 0, 470, 471, 472, 473,
	474, 475, 478, 0, 0, 476, 477, 479, 480, 0,
	481, 482, 484, 487, 483, 485, 486, 488, 501, 502,
	489, 490, 491, 492, 493, 494, 495, 496, 497, 498,
	499, 500, 504, 0, 503, 0, 505, 506, 507, 508,
	509, 516, 518, 519, 514, 515, 517, 520, 521, 523,
	511, 512, 513, 0, 522, 510, 0, 305, 0, 524,
	525, 526, 527, 0, 744, 528, 745, 531, 532, 0,
	0, 533, 0, 534, 0, 0, 536, 537, 538, 0,
	0, 539, 540, 746, 0, 541, 0, 747, 542, 543,
	535, 544, 545, 546, 547, 548, 549, 550, 551, 552,
	553, 0, 554, 555, 748, 556, 557, 558, 749, 559,
	560, 561, 750, 562, 751, 563, 564, 0, 565, 566,
	567, 0, 568, 569, 570, 571, 572, 573, 574, 575,
	752, 576, 577, 579, 578, 580, 0, 581, 0, 582,
	583, 584, 0, 0, 0, 0, 0, 585, 586, 588,
	0, 589, 590, 591, 592, 587, 593, 594, 595, 596,
	597, 598, 0, 600, 601, 599, 602, 603, 0, 604,
	605, 606, 607, 608, 753, 609, 0, 610, 611, 618,
	619, 620, 612, 613, 614, 621, 622, 623, 624, 625,
	626, 0, 628, 629, 627, 630, 631, 632, 0, 633,
	754, 634, 615, 616, 635, 636, 0, 637, 638, 639,
	640, 641, 642, 643, 755, 0, 644, 0, 645, 646,
	647, 648, 649, 650, 652, 617, 653, 658, 659, 756,
	654, 655, 656, 657, 757, 661, 662, 663, 664, 0,
	665, 666, 0, 660, 651, 0, 667, 668, 669, 670,
	671, 672, 0, 673, 674, 0, 675, 758, 759, 760,
	761, 0, 687, 0, 676, 678, 679, 680, 681, 762,
	682, 763, 0, 683, 684, 685, 686, 677, 688, 689,
	0, 0, 690, 691, 693, 695, 696, 692, 694, 697,
	0, 698, 0, 0, 699, 700, 701, 764, 765, 766,
	0, 703, 702, 704, 705, 706, 767, 707, 708, 709,
	1449, 0, 300, 0, 710, 711, 768, 712, 713, 714,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 306,
	307, 309, 308, 310, 311, 312, 313, 0, 314, 315,
	0, 0, 0, 0, 0, 715, 0, 0, 0, 316,
	0, 317, 318, 319, 0, 320, 321, 322, 323, 324,
	325, 326, 716, 717, 0, 327, 718, 328, 719, 0,
	720, 329, 330, 331, 332, 333, 334, 335, 0, 0,
	0, 336, 721, 722, 723, 0, 337, 338, 724, 0,
	0, 0, 339, 340, 341, 342, 343, 344, 345, 346,
	0, 0, 348, 349, 350, 347, 351, 0, 352, 0,
	353, 354, 355, 356, 357, 358, 359, 0, 360, 361,
	362, 0, 363, 364, 365, 0, 0, 0, 0, 0,
	0, 0, 366, 367, 368, 369, 370, 0, 371, 373,
	725, 726, 0, 376, 378, 372, 374, 0, 377, 375,
	379, 0, 380, 381, 382, 0, 0, 383, 384, 385,
	0, 386, 387, 388, 0, 389, 390, 391, 0, 392,
	393, 727, 394, 395, 396, 398, 400, 397, 399, 401,
	402, 403, 404, 405, 728, 729, 406, 0, 303, 0,
	0, 0, 0, 0, 407, 408, 409, 730, 0, 0,
	0, 410, 0, 411, 412, 413, 0, 414, 415, 0,
	0, 416, 417, 418, 731, 732, 419, 420, 421, 422,
	423, 424, 425, 426, 427, 0, 428, 733, 0, 734,
	429, 0, 430, 431, 432, 433, 434, 435, 436, 1448,
	736, 737, 529, 0, 437, 438, 439, 0, 440, 441,
	442, 443, 444, 0, 0, 0, 304, 445, 446, 447,
	0, 0, 738, 448, 530, 449, 739, 740, 0, 741,
	0, 450, 451, 453, 0, 742, 0, 452, 454, 455,
	0, 456, 0, 0, 0, 457, 458, 459, 460, 461,
	462, 0, 463, 465, 464, 0, 467, 743, 466, 0,
	468, 469, 0, 0, 470, 471, 472, 473, 474, 475,
	478, 0, 0, 476, 477, 479, 480, 0, 481, 482,
	484, 487, 483, 485, 486, 488, 501, 502, 489, 490,
	491, 492, 493, 494, 495, 496, 497, 498, 499, 500,
	504, 0, 503, 0, 505, 506, 507, 508, 509, 516,
	518, 519, 514, 515, 517, 520, 521, 523, 511, 512,
	513, 0, 522, 510, 0, 305, 0, 524, 525, 526,
	527, 0, 744, 528, 745, 531, 532, 0, 0, 533,
	0, 534, 0, 0, 536, 537, 538, 0, 0, 539,
	540, 746, 0, 541, 0, 747, 542, 543, 535, 544,
	545, 546, 547, 548, 549, 550, 551, 552, 553, 0,
	554, 555, 748, 556, 557, 558, 749, 559, 560, 561,
	750, 562, 751, 563, 564, 0, 565, 566, 567, 0,
	568, 569, 570, 571, 572, 573, 574, 575, 752, 576,
	577, 579, 578, 580, 0, 581, 0, 582, 583, 584,
	0, 0, 0, 0, 0, 585, 586, 588, 0, 589,
	590, 591, 592, 587, 593, 594, 595, 596, 597, 598,
	0, 600, 601, 599, 602, 603, 0, 604, 605, 606,
	607, 608, 753, 609, 0, 610, 611, 618, 619, 620,
	612, 613, 614, 621, 622, 623, 624, 625, 626, 0,
	628, 629, 627, 630, 631, 632, 0, 633, 754, 634,
	615, 616, 635, 636, 0, 637, 638, 639, 640, 641,
	642, 643, 755, 0, 644, 0, 645, 646, 647, 648,
	649, 650, 652, 617, 653, 658, 659, 756, 654, 655,
	656, 657, 757, 661, 662, 663, 664, 0, 665, 666,
	0, 660, 651, 0, 667, 668, 669, 670, 671, 672,
	0, 673, 674, 0, 675, 758, 759, 760, 761, 0,
	687, 0, 676, 678, 679, 680, 681, 762, 682, 763,
	0, 683, 684, 685, 686, 677, 688, 689, 0, 0,
	690, 691, 693, 695, 696, 692, 694, 697, 0, 698,
	0, 0, 699, 700, 701, 764, 765, 766, 0, 703,
	702, 704, 705, 706, 767, 707, 708, 709, 1446, 0,
	300, 0, 710, 711, 768, 712, 713, 714, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 306, 307, 309,
	308, 310, 311, 312, 313, 0, 314, 315, 0, 0,
	0, 0, 0, 715, 0, 0, 0, 316, 0, 317,
	318, 319, 0, 320, 321, 322, 323, 324, 325, 326,
	716, 717, 0, 327, 718, 328, 719, 0, 720, 329,
	330, 331, 332, 333, 334, 335, 0, 0, 0, 336,
	721, 722, 723, 0, 337, 338, 724, 0, 0, 0,
	339, 340, 341, 342, 343, 344, 345, 346, 0, 0,
	348, 349, 350, 347, 351, 0, 352, 0, 353, 354,
	355, 356, 357, 358, 359, 0, 360, 361, 362, 0,
	363, 364, 365, 0, 0, 0, 0, 0, 0, 0,
	366, 367, 368, 369, 370, 0, 371, 373, 725, 726,
	0, 376, 378, 372, 374, 0, 377, 375, 379, 0,
	380, 381, 382, 0, 0, 383, 384, 385, 0, 386,
	387, 388, 0, 389, 390, 391, 0, 392, 393, 727,
	394, 395, 396, 398, 400, 397, 399, 401, 402, 403,
	404, 405, 728, 729, 406, 0, 303, 0, 0, 0,
	0, 0, 407, 408, 409, 730, 0, 0, 0, 410,
	0, 411, 412, 413, 0, 414, 415, 0, 0, 416,
	417, 418, 731, 732, 419, 420, 421, 422, 423, 424,
	425, 426, 427, 0, 428, 733, 0, 734, 429, 0,
	430, 431, 432, 433, 434, 435, 436, 1445, 736, 737,
	529, 0, 437, 438, 439, 0, 440, 441, 442, 443,
	444, 0, 0, 0, 304, 445, 446, 447, 0, 0,
	738, 448, 530, 449, 739, 740, 0, 741, 0, 450,
	451, 453, 0, 742, 0, 452, 454, 455, 0, 456,
	0, 0, 0, 457, 458, 459, 460, 461, 462, 0,
	463, 465, 464, 0, 467, 743, 466, 0, 468, 469,
	0, 0, 470, 471, 472, 473, 474, 475, 478, 0,
	0, 476, 477, 479, 480, 0, 481, 482, 484, 487,
	483, 485, 486, 488, 501, 502, 489, 490, 491, 492,
	493, 494, 495, 496, 497, 498, 499, 500, 504, 0,
	503, 0, 505, 506, 507, 508, 509, 516, 518, 519,
	514, 515, 517, 520, 521, 523, 511, 512, 513, 0,
	522, 510, 0, 305, 0, 524, 525, 526, 527, 0,
	744, 528, 745, 531, 532, 0, 0, 533, 0, 534,
	0, 0, 536, 537, 538, 0, 0, 539, 540, 746,
	0, 541, 0, 747, 542, 543, 535, 544, 545, 546,
	547, 548, 549, 550, 551, 552, 553, 0, 554, 555,
	748, 556, 557, 558, 749, 559, 560, 561, 750, 562,
	751, 563, 564, 0, 565, 566, 567, 0, 568, 569,
	570, 571, 572, 573, 574, 575, 752, 576, 577, 579,
	578, 580, 0, 581, 0, 582, 583, 584, 0, 0,
	0, 0, 0, 585, 586, 588, 0, 589, 590, 591,
	592, 587, 593, 594, 595, 596, 597, 598, 0, 600,
	601, 599, 602, 603, 0, 604, 605, 606, 607, 608,
	753, 609, 0, 610, 611, 618, 619, 620, 612, 613,
	614, 621, 622, 623, 624, 625, 626, 0, 628, 629,
	627, 630, 631, 632, 0, 633, 754, 634, 615, 616,
	635, 636, 0, 637, 638, 639, 640, 641, 642, 643,
	755, 0, 644, 0, 645, 646, 647, 648, 649, 650,
	652, 617, 653, 658, 659, 756, 654, 655, 656, 657,
	757, 661, 662, 663, 664, 0, 665, 666, 0, 660,
	651, 0, 667, 668, 669, 670, 671, 672, 0, 673,
	674, 0, 675, 758, 759, 760, 761, 0, 687, 0,
	676, 678, 679, 680, 681, 762, 682, 763, 0, 683,
	684, 685, 686, 677, 688, 689, 0, 0, 690, 691,
	693, 695, 696, 692, 694, 697, 0, 698, 0, 0,
	699, 700, 701, 764, 765, 766, 0, 703, 702, 704,
	705, 706, 767, 707, 708, 709, 1441, 0, 300, 0,
	710, 711, 768, 712, 713, 714, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 306, 307, 309, 308, 310,
	311, 312, 313, 0, 314, 315, 0, 0, 0, 0,
	0, 715, 0, 0, 0, 316, 0, 317, 318, 319,
	0, 320, 321, 322, 323, 324, 325, 326, 716, 717,
	0, 327, 718, 328, 719, 0, 720, 329, 330, 331,
	332, 333, 334, 335, 0, 0, 0, 336, 721, 722,
	723, 0, 337, 338, 724, 0, 0, 0, 339, 340,
	341, 342, 343, 344, 345, 346, 0, 0, 348, 349,
	350, 347, 351, 0, 352, 0, 353, 354, 355, 356,
	357, 358, 359, 0, 360, 361, 362, 0, 363, 364,
	365, 0, 0, 0, 0, 0, 0, 0, 366, 367,
	368, 369, 370, 0, 371, 373, 725, 726, 0, 376,
	378, 372, 374, 0, 377, 375, 379, 0, 380, 381,
	382, 0, 0, 383, 384, 385, 0, 386, 387, 388,
	0, 389, 390, 391, 0, 392, 393, 727, 394, 395,
	396, 398, 400, 397, 399, 401, 402, 403, 404, 405,
	728, 729, 406, 0, 303, 0, 0, 0, 0, 0,
	407, 408, 409, 730, 0, 0, 0, 410, 0, 411,
	412, 413, 0, 414, 415, 0, 0, 416, 417, 418,
	731, 732, 419, 420, 421, 422, 423, 424, 425, 426,
	427, 0, 428, 733, 0, 734, 429, 0, 430, 431,
	432, 433, 434, 435, 436, 1440, 736, 737, 529, 0,
	437, 438, 439, 0, 440, 441, 442, 443, 444, 0,
	0, 0, 304, 445, 446, 447, 0, 0, 738, 448,
	530, 449, 739, 740, 0, 741, 0, 450, 451, 453,
	0, 742, 0, 452, 454, 455, 0, 456, 0, 0,
	0, 457, 458, 459, 460, 461, 462, 0, 463, 465,
	464, 0, 467, 743, 466, 0, 468, 469, 0, 0,
	470, 471, 472, 473, 474, 475, 478, 0, 0, 476,
	477, 479, 480, 0, 481, 482, 484, 487, 483, 485,
	486, 488, 501, 502, 489, 490, 491, 492, 493, 494,
	495, 496, 497, 498, 499, 500, 504, 0, 503, 0,
	505, 506, 507, 508, 509, 516, 518, 519, 514, 515,
	517, 520, 521, 523, 511, 512, 513, 0, 522, 510,
	0, 305, 0, 524, 525, 526, 527, 0, 744, 528,
	745, 531, 532, 0, 0, 533, 0, 534, 0, 0,
	536, 537, 538, 0, 0, 539, 540, 746, 0, 541,
	0, 747, 542, 543, 535, 544, 545, 546, 547, 548,
	549, 550, 551, 552, 553, 0, 554, 555, 748, 556,
	557, 558, 749, 559, 560, 561, 750, 562, 751, 563,
	564, 0, 565, 566, 567, 0, 568, 569, 570, 571,
	572, 573, 574, 575, 752, 576, 577, 579, 578, 580,
	0, 581, 0, 582, 583, 584, 0, 0, 0, 0,
	0, 585, 586, 588, 0, 589, 590, 591, 592, 587,
	593, 594, 595, 596, 597, 598, 0, 600, 601, 599,
	602, 603, 0, 604, 605, 606, 607, 608, 753, 609,
	0, 610, 611, 618, 619, 620, 612, 613, 614, 621,
	622, 623, 624, 625, 626, 0, 628, 629, 627, 630,
	631, 632, 0, 633, 754, 634, 615, 616, 635, 636,
	0, 637, 638, 639, 640, 641, 642, 643, 755, 0,
	644, 0, 645, 646, 647, 648, 649, 650, 652, 617,
	653, 658, 659, 756, 654, 655, 656, 657, 757, 661,
	662, 663, 664, 0, 665, 666, 0, 660, 651, 0,
	667, 668, 669, 670, 671, 672, 0, 673, 674, 0,
	675, 758, 759, 760, 761, 0, 687, 0, 676, 678,
	679, 680, 681, 762, 682, 763, 0, 683, 684, 685,
	686, 677, 688, 689, 0, 0, 690, 691, 693, 695,
	696, 692, 694, 697, 0, 698, 0, 0, 699, 700,
	701, 764, 765, 766, 0, 703, 702, 704, 705, 706,
	767, 707, 708, 709, 770, 0, 300, 0, 710, 711,
	768, 712, 713, 714, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 306, 307, 309, 308, 310, 311, 312,
	313, 0, 314, 315, 0, 0, 0, 0, 0, 715,
	0, 0, 0, 316, 0, 317, 318, 319, 0, 320,
	321, 322, 323, 324, 325, 326, 716, 717, 0, 327,
	718, 328, 719, 0, 720, 329, 330, 331, 332, 333,
	334, 335, 0, 0, 0, 336, 721, 722, 723, 0,
	337, 338, 724, 0, 0, 0, 339, 340, 341, 342,
	343, 344, 345, 346, 0, 0, 348, 349, 350, 347,
	351, 0, 352, 0, 353, 354, 355, 356, 357, 358,
	359, 0, 360, 361, 362, 0, 363, 364, 365, 0,
	0, 0, 0, 0, 0, 0, 366, 367, 368, 369,
	370, 0, 371, 373, 725, 726, 0, 376, 378, 372,
	374, 0, 377, 375, 379, 0, 380, 381, 382, 0,
	0, 383, 384, 385, 0, 386, 387, 388, 0, 389,
	390, 391, 0, 392, 393, 727, 394, 395, 396, 398,
	400, 397, 399, 401, 402, 403, 404, 405, 728, 729,
	406, 0, 303, 0, 0, 0, 0, 0, 407, 408,
	409, 730, 0, 0, 0, 410, 0, 411, 412, 413,
	0, 414, 415, 0, 0, 416, 417, 418, 731, 732,
	419, 420, 421, 422, 423, 424, 425, 426, 427, 0,
	428, 733, 0, 734, 429, 0, 430, 431, 432, 433,
	434, 435, 436, 735, 736, 737, 529, 0, 437, 438,
	439, 0, 440, 441, 442, 443, 444, 0, 0, 0,
	304, 445, 446, 447, 0, 0, 738, 448, 530, 449,
	739, 740, 0, 741, 0, 450, 451, 453, 0, 742,
	0, 452, 454, 455, 0, 456, 0, 0, 0, 457,
	458, 459, 460, 461, 462, 0, 463, 465, 464, 0,
	467, 743, 466, 0, 468, 469, 0, 0, 470, 471,
	472, 473, 474, 475, 478, 0, 0, 476, 477, 479,
	480, 0, 481, 482, 484, 487, 483, 485, 486, 488,
	501, 502, 489, 490, 491, 492, 493, 494, 495, 496,
	497, 498, 499, 500, 504, 0, 503, 0, 505, 506,
	507, 508, 509, 516, 518, 519, 514, 515, 517, 520,
	521, 523, 511, 512, 513, 0, 522, 510, 0, 305,
	0, 524, 525, 526, 527, 0, 744, 528, 745, 531,
	532, 0, 0, 533, 0, 534, 0, 0, 536, 537,
	538, 0, 0, 539, 540, 746, 0, 541, 0, 747,
	542, 543, 535, 544, 545, 546, 547, 548, 549, 550,
	551, 552, 553, 0, 554, 555, 748, 556, 557, 558,
	749, 559, 560, 561, 750, 562, 751, 563, 564, 0,
	565, 566, 567, 0, 568, 569, 570, 571, 572, 573,
	574, 575, 752, 576, 577, 579, 578, 580, 0, 581,
	0, 582, 583, 584, 0, 0, 0, 0, 0, 585,
	586, 588, 0, 589, 590, 591, 592, 587, 593, 594,
	595, 596, 597, 598, 0, 600, 601, 599, 602, 603,
	0, 604, 605, 606, 607, 608, 753, 609, 0, 610,
	611, 618, 619, 620, 612, 613, 614, 621, 622, 623,
	624, 625, 626, 0, 628, 629, 627, 630, 631, 632,
	0, 633, 754, 634, 615, 616, 635, 636, 0, 637,
	638, 639, 640, 641, 642, 643, 755, 0, 644, 0,
	645, 646, 647, 648, 649, 650, 652, 617, 653, 658,
	659, 756, 654, 655, 656, 657, 757, 661, 662, 663,
	664, 0, 665, 666, 0, 660, 651, 0, 667, 668,
	669, 670, 671, 672, 0, 673, 674, 0, 675, 758,
	759, 760, 761, 0, 687, 0, 676, 678, 679, 680,
	681, 762, 682, 763, 0, 683, 684, 685, 686, 677,
	688, 689, 0, 0, 690, 691, 693, 695, 696, 692,
	694, 697, 0, 698, 0, 0, 699, 700, 701, 764,
	765, 766, 0, 703, 702, 704, 705, 706, 767, 707,
	708, 709, 291, 0, 300, 0, 710, 711, 768, 712,
	713, 714, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 306, 307, 309, 308, 310, 311, 312, 313, 0,
	314, 315, 0, 0, 0, 0, 0, 715, 0, 0,
	0, 316, 0, 317, 318, 319, 0, 320, 321, 322,
	323, 324, 325, 326, 716, 717, 0, 327, 718, 328,
	719, 0, 720, 329, 330, 331, 332, 333, 334, 335,
	0, 0, 0, 336, 721, 722, 723, 0, 337, 338,
	724, 0, 0, 0, 339, 340, 341, 342, 343, 344,
	345, 346, 0, 0, 348, 349, 350, 347, 351, 0,
	352, 0, 353, 354, 355, 356, 357, 358, 359, 0,
	360, 361, 362, 0, 363, 364, 365, 0, 0, 0,
	0, 0, 0, 0, 366, 367, 368, 369, 370, 0,
	371, 373, 725, 726, 0, 376, 378, 372, 374, 0,
	377, 375, 379, 0, 380, 381, 382, 0, 0, 383,
	384, 385, 0, 386, 387, 388, 0, 389, 390, 391,
	0, 392, 393, 727, 394, 395, 396, 398, 400, 397,
	399, 401, 402, 403, 404, 405, 728, 729, 406, 0,
	303, 0, 0, 0, 0, 0, 407, 408, 409, 730,
	0, 0, 0, 410, 0, 411, 412, 413, 0, 414,
	415, 0, 0, 416, 417, 418, 731, 732, 419, 420,
	421, 422, 423, 424, 425, 426, 427, 0, 428, 733,
	0, 734, 429, 0, 430, 431, 432, 433, 434, 435,
	436, 735, 736, 737, 529, 0, 437, 438, 439, 0,
	440, 441, 442, 443, 444, 0, 0, 0, 304, 445,
	446, 447, 0, 0, 738, 448, 530, 449, 739, 740,
	0, 741, 0, 450, 451, 453, 0, 742, 0, 452,
	454, 455, 0, 456, 0, 0, 0, 457, 458, 459,
	460, 461, 462, 0, 463, 465, 464, 0, 467, 743,
	466, 0, 468, 469, 0, 0, 470, 471, 472, 473,
	474, 475, 478, 0, 0, 476, 477, 479, 480, 0,
	481, 482, 484, 487, 483, 485, 486, 488, 501, 502,
	489, 490, 491, 492, 493, 494, 495, 496, 497, 498,
	499, 500, 504, 0, 503, 0, 505, 506, 507, 508,
	509, 516, 518, 519, 514, 515, 517, 520, 521, 523,
	511, 512, 513, 0, 522, 510, 0, 305, 0, 524,
	525, 526, 527, 0, 744, 528, 745, 531, 532, 0,
	0, 533, 0, 534, 0, 0, 536, 537, 538, 0,
	0, 539, 540, 746, 0, 541, 0, 747, 542, 543,
	535, 544, 545, 546, 547, 548, 549, 550, 551, 552,
	553, 0, 554, 555, 748, 556, 557, 558, 749, 559,
	560, 561, 750, 562, 751, 563, 564, 0, 565, 566,
	567, 0, 568, 569, 570, 571, 572, 573, 574, 575,
	752, 576, 577, 579, 578, 580, 0, 581, 0, 582,
	583, 584, 0, 0, 0, 0, 0, 585, 586, 588,
	0, 589, 590, 591, 592, 587, 593, 594, 595, 596,
	597, 598, 0, 600, 601, 599, 602, 603, 0, 604,
	605, 606, 607, 608, 753, 609, 0, 610, 611, 618,
	619, 620, 612, 613, 614, 621, 622, 623, 624, 625,
	626, 0, 628, 629, 627, 630, 631, 632, 0, 633,
	754, 634, 615, 616, 635, 636, 0, 637, 638, 639,
	640, 641, 642, 643, 755, 0, 644, 0, 645, 646,
	647, 648, 649, 650, 652, 617, 653, 658, 659, 756,
	654, 655, 656, 657, 757, 661, 662, 663, 664, 0,
	665, 666, 0, 660, 651, 0, 667, 668, 669, 670,
	671, 672, 0, 673, 674, 0, 675, 758, 759, 760,
	761, 0, 687, 0, 676, 678, 679, 680, 681, 762,
	682, 763, 0, 683, 684, 685, 686, 677, 688, 689,
	0, 0, 690, 691, 693, 695, 696, 692, 694, 697,
	0, 698, 0, 0, 699, 700, 701, 764, 765, 766,
	0, 703, 702, 704, 705, 706, 767, 707, 708, 709,
	300, 0, 0, 0, 710, 711, 768, 712, 713, 714,
	0, 0, 0, 0, 0, 0, 0, 306, 307, 309,
	308, 310, 311, 312, 313, 0, 314, 315, 0, 0,
	0, 0, 0, 715, 0, 0, 0, 316, 0, 317,
	318, 319, 0, 320, 321, 322, 323, 324, 325, 326,
	716, 717, 0, 327, 718, 328, 719, 0, 720, 329,
	330, 331, 332, 333, 334, 335, 0, 0, 0, 336,
	721, 722, 723, 0, 337, 338, 724, 0, 0, 0,
	339, 340, 341, 342, 343, 344, 345, 346, 0, 0,
	348, 349, 350, 347, 351, 0, 352, 0, 353, 354,
	355, 356, 357, 358, 359, 0, 360, 361, 362, 0,
	363, 364, 365, 0, 0, 0, 0, 0, 0, 0,
	366, 367, 368, 369, 370, 0, 371, 373, 725, 726,
	0, 376, 378, 372, 374, 0, 377, 375, 379, 0,
	380, 381, 382, 0, 0, 383, 384, 385, 0, 386,
	387, 388, 0, 389, 390, 391, 0, 392, 393, 727,
	394, 395, 396, 398, 400, 397, 399, 401, 402, 403,
	404, 405, 728, 729, 406, 0, 303, 0, 0, 0,
	0, 0, 407, 408, 409, 730, 0, 0, 0, 410,
	0, 411, 412, 413, 0, 414, 415, 0, 0, 416,
	417, 418, 731, 732, 419, 420, 421, 422, 423, 424,
	425, 426, 427, 0, 428, 733, 0, 734, 429, 0,
	430, 431, 432, 433, 434, 435, 436, 735, 736, 737,
	529, 0, 437, 438, 439, 0, 440, 441, 442, 443,
	444, 0, 0, 0, 304, 445, 446, 447, 0, 0,
	738, 448, 530, 449, 739, 740, 0, 741, 0, 450,
	451, 453, 0, 742, 0, 452, 454, 455, 0, 456,
	0, 0, 0, 457, 458, 459, 460, 461, 462, 0,
	463, 465, 464, 0, 467, 743, 466, 0, 468, 469,
	0, 0, 470, 471, 472, 473, 474, 475, 478, 0,
	0, 476, 477, 479, 480, 0, 481, 482, 484, 487,
	483, 485, 486, 488, 501, 502, 489, 490, 491, 492,
	493, 494, 495, 496, 497, 498, 499, 500, 504, 0,
	503, 0, 505, 506, 507, 508, 509, 516, 518, 519,
	514, 515, 517, 520, 521, 523, 511, 512, 513, 0,
	522, 510, 0, 305, 0, 524, 525, 526, 527, 0,
	744, 528, 745, 531, 532, 0, 0, 533, 0, 534,
	0, 0, 536, 537, 538, 0, 0, 539, 540, 746,
	0, 541, 0, 747, 542, 543, 535, 544, 545, 546,
	547, 548, 549, 550, 551, 552, 553, 0, 554, 555,
	748, 556, 557, 558, 749, 559, 560, 561, 750, 562,
	751, 563, 564, 0, 565, 566, 567, 0, 568, 569,
	570, 571, 572, 573, 574, 575, 752, 576, 577, 579,
	578, 580, 0, 581, 0, 582, 583, 584, 0, 0,
	0, 0, 0, 585, 586, 588, 0, 589, 590, 591,
	592, 587, 593, 594, 595, 596, 597, 598, 0, 600,
	601, 599, 602, 603, 0, 604, 605, 606, 607, 608,
	753, 609, 0, 610, 611, 618, 619, 620, 612, 613,
	614, 621, 622, 623, 624, 625, 626, 0, 628, 629,
	627, 630, 631, 632, 0, 633, 754, 634, 615, 616,
	635, 636, 0, 637, 638, 639, 640, 641, 642, 643,
	755, 0, 644, 0, 645, 646, 647, 648, 649, 650,
	652, 617, 653, 658, 659, 756, 654, 655, 656, 657,
	757, 661, 662, 663, 664, 0, 665, 666, 0, 660,
	651, 0, 667, 668, 669, 670, 671, 672, 0, 673,
	674, 0, 675, 758, 759, 760, 761, 0, 687, 0,
	676, 678, 679, 680, 681, 762, 682, 763, 0, 683,
	684, 685, 686, 677, 688, 689, 0, 0, 690, 691,
	693, 695, 696, 692, 694, 697, 0, 698, 0, 0,
	699, 700, 701, 764, 765, 766, 0, 703, 702, 704,
	705, 706, 767, 707, 708, 709, 300, 0, 0, 0,
	710, 711, 768, 712, 713, 714, 0, 0, 0, 0,
	0, 0, 0, 306, 307, 309, 308, 310, 311, 312,
	313, 0, 314, 315, 0, 0, 0, 0, 0, 715,
	0, 0, 0, 316, 0, 317, 318, 319, 0, 320,
	321, 322, 323, 324, 325, 326, 716, 717, 0, 327,
	718, 328, 719, 0, 720, 329, 330, 331, 332, 333,
	334, 335, 0, 0, 0, 336, 721, 722, 723, 0,
	337, 338, 724, 0, 0, 0, 339, 340, 341, 342,
	343, 344, 345, 346, 0, 0, 348, 349, 350, 347,
	351, 0, 352, 0, 353, 354, 355, 356, 357, 358,
	359, 793, 360, 361, 362, 0, 363, 364, 365, 0,
	0, 0, 0, 0, 0, 0, 366, 367, 368, 369,
	370, 0, 371, 373, 725, 726, 0, 376, 378, 372,
	374, 0, 377, 375, 379, 0, 380, 381, 382, 0,
	0, 383, 384, 385, 0, 386, 387, 388, 0, 389,
	390, 391, 0, 392, 393, 727, 394, 395, 396, 398,
	400, 397, 399, 401, 402, 403, 404, 405, 728, 729,
	406, 0, 0, 0, 0, 0, 0, 0, 407, 408,
	409, 730, 0, 0, 0, 410, 0, 411, 412, 413,
	0, 414, 415, 0, 0, 416, 417, 418, 731, 732,
	419, 420, 421, 422, 423, 424, 425, 426, 427, 794,
	428, 733, 0, 734, 429, 0, 430, 431, 432, 433,
	434, 435, 436, 735, 736, 737, 529, 0, 437, 438,
	439, 0, 440, 441, 442, 443, 444, 0, 0, 0,
	0, 445, 446, 447, 0, 0, 738, 448, 530, 449,
	739, 740, 0, 741, 0, 450, 451, 453, 0, 742,
	0, 452, 454, 455, 0, 456, 0, 0, 0, 457,
	458, 459, 460, 461, 462, 0, 463, 465, 464, 0,
	467, 743, 466, 0, 468, 469, 0, 0, 470, 471,
	472, 473, 474, 475, 478, 0, 0, 476, 477, 479,
	480, 0, 481, 482, 484, 487, 483, 485, 486, 488,
	501, 502, 489, 490, 491, 492, 493, 494, 495, 496,
	497, 498, 499, 500, 504, 0, 503, 0, 505, 506,
	507, 508, 509, 516, 518, 519, 514, 515, 517, 520,
	521, 523, 511, 512, 513, 0, 522, 510, 0, 0,
	0, 524, 525, 526, 527, 0, 744, 528, 745, 531,
	532, 0, 0, 533, 0, 534, 0, 0, 536, 537,
	538, 0, 0, 539, 540, 746, 0, 541, 0, 747,
	542, 543, 535, 544, 545, 546, 547, 548, 549, 550,
	551, 552, 553, 0, 554, 555, 748, 556, 557, 558,
	749, 559, 560, 561, 750, 562, 751, 563, 564, 0,
	565, 566, 567, 0, 568, 569, 570, 571, 572, 573,
	574, 575, 752, 576, 577, 579, 578, 580, 0, 581,
	0, 582, 583, 584, 0, 0, 0, 0, 0, 585,
	586, 588, 0, 589, 590, 591, 592, 587, 593, 594,
	595, 596, 597, 598, 0, 600, 601, 599, 602, 603,
	0, 604, 605, 606, 607, 608, 753, 609, 0, 610,
	611, 618, 619, 620, 612, 613, 614, 621, 622, 623,
	624, 625, 626, 795, 628, 629, 627, 630, 631, 632,
	0, 633, 754, 634, 615, 616, 635, 636, 0, 637,
	638, 639, 640, 641, 642, 643, 755, 0, 644, 0,
	645, 646, 647, 648, 649, 650, 652, 617, 653, 658,
	659, 756, 654, 655, 656, 657, 757, 661, 662, 663,
	664, 0, 665, 666, 0, 660, 651, 0, 667, 668,
	669, 670, 671, 672, 0, 673, 674, 0, 675, 758,
	759, 760, 761, 0, 687, 0, 676, 678, 679, 680,
	681, 762, 682, 763, 0, 683, 684, 685, 686, 677,
	688, 689, 0, 0, 690, 691, 693, 695, 696, 692,
	694, 697, 0, 698, 0, 0, 699, 700, 701, 764,
	765, 766, 0, 703, 702, 704, 705, 706, 767, 707,
	708, 709, 300, 0, 0, 0, 710, 711, 768, 712,
	713, 714, 0, 0, 0, 0, 0, 0, 0, 306,
	307, 309, 308, 310, 311, 312, 313, 0, 314, 315,
	0, 0, 0, 0, 0, 715, 0, 0, 0, 316,
	0, 317, 318, 319, 0, 320, 321, 322, 323, 324,
	325, 326, 716, 717, 0, 327, 718, 328, 719, 0,
	720, 329, 330, 331, 332, 333, 334, 335, 0, 0,
	0, 336, 721, 722, 723, 0, 337, 338, 724, 0,
	0, 0, 339, 340, 341, 342, 343, 344, 345, 346,
	0, 0, 348, 349, 350, 347, 351, 0, 352, 0,
	353, 354, 355, 356, 357, 358, 359, 0, 360, 361,
	362, 0, 363, 364, 365, 0, 0, 0, 0, 0,
	0, 0, 366, 367, 368, 2621, 370, 0, 371, 373,
	725, 726, 0, 376, 378, 372, 374, 0, 377, 375,
	379, 0, 380, 381, 382, 0, 0, 383, 384, 385,
	0, 386, 387, 388, 0, 389, 390, 391, 0, 392,
	393, 727, 394, 395, 396, 398, 400, 397, 399, 401,
	402, 403, 404, 405, 728, 729, 406, 0, 303, 0,
	0, 0, 0, 0, 407, 408, 409, 730, 0, 0,
	0, 410, 0, 411, 412, 413, 0, 414, 415, 0,
	0, 416, 417, 418, 731, 732, 419, 420, 421, 422,
	423, 424, 425, 426, 427, 0, 428, 733, 0, 734,
	429, 0, 430, 431, 432, 433, 434, 435, 436, 735,
	736, 737, 529, 0, 437, 438, 439, 0, 440, 441,
	442, 443, 444, 0, 0, 0, 304, 445, 446, 447,
	0, 0, 738, 448, 530, 449, 739, 740, 0, 741,
	0, 450, 451, 453, 0, 742, 0, 452, 454, 455,
	0, 456, 0, 0, 0, 457, 458, 459, 460, 461,
	462, 0, 463, 465, 464, 0, 467, 743, 466, 0,
	468, 469, 0, 0, 470, 471, 472, 473, 474, 475,
	478, 0, 0, 476, 477, 479, 480, 0, 481, 482,
	484, 487, 483, 485, 486, 488, 501, 502, 489, 490,
	491, 492, 493, 494, 495, 496, 497, 498, 499, 500,
	504, 0, 503, 0, 505, 506, 507, 508, 509, 516,
	518, 519, 514, 515, 517, 520, 521, 523, 511, 512,
	513, 0, 522, 510, 0, 305, 0, 524, 525, 526,
	527, 0, 744, 528, 745, 531, 532, 0, 0, 533,
	0, 534, 0, 0, 536, 537, 538, 0, 0, 539,
	540, 746, 0, 541, 0, 747, 542, 543, 535, 544,
	545, 546, 547, 548, 549, 550, 551, 552, 553, 0,
	554, 555, 748, 556, 557, 558, 749, 559, 560, 561,
	750, 562, 751, 563, 564, 0, 565, 566, 567, 0,
	568, 569, 570, 571, 572, 573, 574, 575, 752, 576,
	577, 579, 578, 580, 0, 581, 0, 582, 583, 584,
	0, 0, 0, 0, 0, 585, 586, 588, 0, 589,
	590, 591, 592, 587, 593, 594, 595, 596, 597, 598,
	0, 600, 601, 599, 602, 603, 0, 604, 605, 606,
	607, 608, 753, 609, 0, 610, 611, 618, 619, 620,
	612, 613, 614, 621, 622, 623, 624, 625, 626, 0,
	628, 629, 627, 630, 631, 632, 0, 633, 754, 634,
	615, 616, 635, 636, 0, 637, 638, 639, 640, 641,
	642, 643, 755, 0, 644, 0, 645, 646, 647, 648,
	649, 650, 652, 617, 653, 658, 659, 756, 654, 655,
	656, 657, 757, 661, 662, 663, 664, 0, 665, 666,
	0, 660, 651, 0, 667, 668, 669, 670, 671, 672,
	0, 673, 674, 0, 675, 758, 759, 760, 761, 0,
	687, 0, 676, 678, 679, 680, 681, 762, 682, 763,
	0, 683, 684, 685, 686, 677, 688, 689, 0, 0,
	690, 691, 693, 695, 696, 692, 694, 697, 0, 698,
	0, 0, 699, 700, 701, 764, 765, 766, 0, 703,
	702, 704, 705, 706, 767, 707, 708, 709, 300, 0,
	0, 0, 710, 711, 768, 712, 713, 714, 0, 0,
	0, 0, 0, 0, 0, 306, 307, 309, 308, 310,
	311, 312, 313, 0, 314, 315, 0, 0, 0, 0,
	0, 715, 0, 0, 0, 316, 0, 317, 318, 319,
	0, 320, 321, 322, 323, 324, 325, 326, 716, 717,
	0, 327, 718, 328, 719, 0, 720, 329, 330, 331,
	332, 333, 334, 335, 0, 0, 0, 336, 721, 722,
	723, 0, 337, 338, 724, 0, 0, 0, 339, 340,
	341, 342, 343, 344, 345, 346, 0, 0, 348, 349,
	350, 347, 351, 0, 352, 0, 353, 354, 355, 356,
	357, 358, 359, 0, 360, 361, 362, 0, 363, 364,
	365, 0, 0, 0, 0, 0, 0, 0, 366, 367,
	368, 2619, 370, 0, 371, 373, 725, 726, 0, 376,
	378, 372, 374, 0, 377, 375, 379, 0, 380, 381,
	382, 0, 0, 383, 384, 385, 0, 386, 387, 388,
	0, 389, 390, 391, 0, 392, 393, 727, 394, 395,
	396, 398, 400, 397, 399, 401, 402, 403, 404, 405,
	728, 729, 406, 0, 303, 0, 0, 0, 0, 0,
	407, 408, 409, 730, 0, 0, 0, 410, 0, 411,
	412, 413, 0, 414, 415, 0, 0, 416, 417, 418,
	731, 732, 419, 420, 421, 422, 423, 424, 425, 426,
	427, 0, 428, 733, 0, 734, 429, 0, 430, 431,
	432, 433, 434, 435, 436, 735, 736, 737, 529, 0,
	437, 438, 439, 0, 440, 441, 442, 443, 444, 0,
	0, 0, 304, 445, 446, 447, 0, 0, 738, 448,
	530, 449, 739, 740, 0, 741, 0, 450, 451, 453,
	0, 742, 0, 452, 454, 455, 0, 456, 0, 0,
	0, 457, 458, 459, 460, 461, 462, 0, 463, 465,
	464, 0, 467, 743, 466, 0, 468, 469, 0, 0,
	470, 471, 472, 473, 474, 475, 478, 0, 0, 476,
	477, 479, 480, 0, 481, 482, 484, 487, 483, 485,
	486, 488, 501, 502, 489, 490, 491, 492, 493, 494,
	495, 496, 497, 498, 499, 500, 504, 0, 503, 0,
	505, 506, 507, 508, 509, 516, 518, 519, 514, 515,
	517, 520, 521, 523, 511, 512, 513, 0, 522, 510,
	0, 305, 0, 524, 525, 526, 527, 0, 744, 528,
	745, 531, 532, 0, 0, 533, 0, 534, 0, 0,
	536, 537, 538, 0, 0, 539, 540, 746, 0, 541,
	0, 747, 542, 543, 535, 544, 545, 546, 547, 548,
	549, 550, 551, 552, 553, 0, 554, 555, 748, 556,
	557, 558, 749, 559, 560, 561, 750, 562, 751, 563,
	564, 0, 565, 566, 567, 0, 568, 569, 570, 571,
	572, 573, 574, 575, 752, 576, 577, 579, 578, 580,
	0, 581, 0, 582, 583, 584, 0, 0, 0, 0,
	0, 585, 586, 588, 0, 589, 590, 591, 592, 587,
	593, 594, 595, 596, 597, 598, 0, 600, 601, 599,
	602, 603, 0, 604, 605, 606, 607, 608, 753, 609,
	0, 610, 611, 618, 619, 620, 612, 613, 614, 621,
	622, 623, 624, 625, 626, 0, 628, 629, 627, 630,
	631, 632, 0, 633, 754, 634, 615, 616, 635, 636,
	0, 637, 638, 639, 640, 641, 642, 643, 755, 0,
	644, 0, 645, 646, 647, 648, 649, 650, 652, 617,
	653, 658, 659, 756, 654, 655, 656, 657, 757, 661,
	662, 663, 664, 0, 665, 666, 0, 660, 651, 0,
	667, 668, 669, 670, 671, 672, 0, 673, 674, 0,
	675, 758, 759, 760, 761, 0, 687, 0, 676, 678,
	679, 680, 681, 762, 682, 763, 0, 683, 684, 685,
	686, 677, 688, 689, 0, 0, 690, 691, 693, 695,
	696, 692, 694, 697, 0, 698, 0, 0, 699, 700,
	701, 764, 765, 766, 0, 703, 702, 704, 705, 706,
	767, 707, 708, 709, 300, 0, 0, 0, 710, 711,
	768, 712, 713, 714, 0, 0, 0, 0, 0, 0,
	0, 306, 307, 309, 308, 310, 311, 312, 313, 0,
	314, 315, 0, 0, 0, 0, 0, 715, 0, 0,
	0, 316, 0, 317, 318, 319, 0, 320, 321, 322,
	323, 324, 325, 326, 716, 717, 0, 327, 718, 328,
	719, 0, 720, 329, 330, 331, 332, 333, 334, 335,
	0, 0, 0, 336, 721, 722, 723, 0, 337, 338,
	724, 0, 0, 0, 339, 340, 341, 342, 343, 344,
	345, 346, 0, 0, 348, 349, 350, 347, 351, 0,
	352, 0, 353, 354, 355, 356, 357, 358, 359, 0,
	360, 361, 362, 0, 363, 364, 365, 0, 0, 0,
	0, 0, 0, 0, 366, 367, 368, 2617, 370, 0,
	371, 373, 725, 726, 0, 376, 378, 372, 374, 0,
	377, 375, 379, 0, 380, 381, 382, 0, 0, 383,
	384, 385, 0, 386, 387, 388, 0, 389, 390, 391,
	0, 392, 393, 727, 394, 395, 396, 398, 400, 397,
	399, 401, 402, 403, 404, 405, 728, 729, 406, 0,
	303, 0, 0, 0, 0, 0, 407, 408, 409, 730,
	0, 0, 0, 410, 0, 411, 412, 413, 0, 414,
	415, 0, 0, 416, 417, 418, 731, 732, 419, 420,
	421, 422, 423, 424, 425, 426, 427, 0, 428, 733,
	0, 734, 429, 0, 430, 431, 432, 433, 434, 435,
	436, 735, 736, 737, 529, 0, 437, 438, 439, 0,
	440, 441, 442, 443, 444, 0, 0, 0, 304, 445,
	446, 447, 0, 0, 738, 448, 530, 449, 739, 740,
	0, 741, 0, 450, 451, 453, 0, 742, 0, 452,
	454, 455, 0, 456, 0, 0, 0, 457, 458, 459,
	460, 461, 462, 0, 463, 465, 464, 0, 467, 743,
	466, 0, 468, 469, 0, 0, 470, 471, 472, 473,
	474, 475, 478, 0, 0, 476, 477, 479, 480, 0,
	481, 482, 484, 487, 483, 485, 486, 488, 501, 502,
	489, 490, 491, 492, 493, 494, 495, 496, 497, 498,
	499, 500, 504, 0, 503, 0, 505, 506, 507, 508,
	509, 516, 518, 519, 514, 515, 517, 520, 521, 523,
	511, 512, 513, 0, 522, 510, 0, 305, 0, 524,
	525, 526, 527, 0, 744, 528, 745, 531, 532, 0,
	0, 533, 0, 534, 0, 0, 536, 537, 538, 0,
	0, 539, 540, 746, 0, 541, 0, 747, 542, 543,
	535, 544, 545, 546, 547, 548, 549, 550, 551, 552,
	553, 0, 554, 555, 748, 556, 557, 558, 749, 559,
	560, 561, 750, 562, 751, 563, 564, 0, 565, 566,
	567, 0, 568, 569, 570, 571, 572, 573, 574, 575,
	752, 576, 577, 579, 578, 580, 0, 581, 0, 582,
	583, 584, 0, 0, 0, 0, 0, 585, 586, 588,
	0, 589, 590, 591, 592, 587, 593, 594, 595, 596,
	597, 598, 0, 600, 601, 599, 602, 603, 0, 604,
	605, 606, 607, 608, 753, 609, 0, 610, 611, 618,
	619, 620, 612, 613, 614, 621, 622, 623, 624, 625,
	626, 0, 628, 629, 627, 630, 631, 632, 0, 633,
	754, 634, 615, 616, 635, 636, 0, 637, 638, 639,
	640, 641, 642, 643, 755, 0, 644, 0, 645, 646,
	647, 648, 649, 650, 652, 617, 653, 658, 659, 756,
	654, 655, 656, 657, 757, 661, 662, 663, 664, 0,
	665, 666, 0, 660, 651, 0, 667, 668, 669, 670,
	671, 672, 0, 673, 674, 0, 675, 758, 759, 760,
	761, 0, 687, 0, 676, 678, 679, 680, 681, 762,
	682, 763, 0, 683, 684, 685, 686, 677, 688, 689,
	0, 0, 690, 691, 693, 695, 696, 692, 694, 697,
	0, 698, 0, 0, 699, 700, 701, 764, 765, 766,
	0, 703, 702, 704, 705, 706, 767, 707, 708, 709,
	300, 0, 0, 0, 710, 711, 768, 712, 713, 714,
	0, 0, 0, 0, 0, 0, 0, 306, 307, 309,
	308, 310, 311, 312, 313, 0, 314, 315, 0, 0,
	0, 0, 0, 715, 0, 0, 0, 316, 0, 317,
	318, 319, 0, 320, 321, 322, 323, 324, 325, 326,
	716, 717, 0, 327, 718, 328, 719, 0, 720, 329,
	330, 331, 332, 333, 334, 335, 0, 0, 0, 336,
	721, 722, 723, 0, 337, 338, 724, 0, 0, 0,
	339, 340, 341, 342, 343, 344, 345, 346, 0, 0,
	348, 349, 350, 347, 351, 0, 352, 0, 353, 354,
	355, 356, 357, 358, 359, 0, 360, 361, 362, 0,
	363, 364, 365, 0, 0, 0, 0, 0, 0, 0,
	366, 367, 368, 369, 370, 0, 371, 373, 725, 726,
	0, 376, 378, 372, 374, 0, 377, 375, 379, 0,
	380, 381, 382, 0, 0, 383, 384, 385, 0, 386,
	387, 388, 0, 389, 390, 391, 0, 392, 393, 727,
	394, 395, 396, 398, 400, 397, 399, 401, 402, 403,
	404, 405, 728, 729, 406, 0, 303, 0, 0, 0,
	0, 0, 407, 408, 409, 730, 0, 0, 0, 410,
	0, 411, 412, 413, 0, 414, 415, 0, 0, 416,
	417, 418, 731, 732, 419, 420, 421, 422, 423, 424,
	425, 426, 427, 0, 428, 733, 0, 734, 429, 0,
	430, 431, 432, 433, 434, 435, 436, 2531, 736, 737,
	529, 0, 437, 438, 439, 0, 440, 441, 442, 443,
	444, 0, 0, 0, 304, 445, 446, 447, 0, 0,
	738, 448, 530, 449, 739, 740, 0, 741, 0, 450,
	451, 453, 0, 742, 0, 452, 454, 455, 0, 456,
	0, 0, 0, 457, 458, 459, 460, 461, 462, 0,
	463, 465, 464, 0, 467, 743, 466, 0, 468, 469,
	0, 0, 470, 471, 472, 473, 474, 475, 478, 0,
	0, 476, 477, 479, 480, 0, 481, 482, 484, 487,
	483, 485, 486, 488, 501, 502, 489, 490, 491, 492,
	493, 494, 495, 496, 497, 498, 499, 500, 504, 0,
	503, 0, 505, 506, 507, 508, 509, 516, 518, 519,
	514, 515, 517, 520, 521, 523, 511, 512, 513, 0,
	522, 510, 0, 305, 0, 524, 525, 526, 527, 0,
	744, 528, 745, 531, 532, 0, 0, 533, 0, 534,
	0, 0, 536, 537, 538, 0, 0, 539, 540, 746,
	0, 541, 0, 747, 542, 543, 535, 544, 545, 546,
	547, 548, 549, 550, 551, 552, 553, 0, 554, 555,
	748, 556, 557, 558, 749, 559, 560, 561, 750, 562,
	751, 563, 564, 0, 565, 566, 567, 0, 568, 569,
	570, 571, 572, 573, 574, 575, 752, 576, 577, 579,
	578, 580, 0, 581, 0, 582, 583, 584, 0, 0,
	0, 0, 0, 585, 586, 588, 0, 589, 590, 591,
	592, 587, 593, 594, 595, 596, 597, 598, 0, 600,
	601, 599, 602, 603, 0, 604, 605, 606, 607, 608,
	753, 609, 0, 610, 611, 618, 619, 620, 612, 613,
	614, 621, 622, 623, 624, 625, 626, 0, 628, 629,
	627, 630, 631, 632, 0, 633, 754, 634, 615, 616,
	635, 636, 0, 637, 638, 639, 640, 641, 642, 643,
	755, 0, 644, 0, 645, 646, 647, 648, 649, 650,
	652, 617, 653, 658, 659, 756, 654, 655, 656, 657,
	757, 661, 662, 663, 664, 0, 665, 666, 0, 660,
	651, 0, 667, 668, 669, 670, 671, 672, 0, 673,
	674, 0, 675, 758, 759, 760, 761, 0, 687, 0,
	676, 678, 679, 680, 681, 762, 682, 763, 0, 683,
	684, 685, 686, 677, 688, 689, 0, 0, 690, 691,
	693, 695, 696, 692, 694, 697, 0, 698, 0, 0,
	699, 700, 701, 764, 765, 766, 0, 703, 702, 704,
	705, 706, 767, 707, 708, 709, 300, 0, 0, 0,
	710, 711, 768, 712, 713, 714, 0, 0, 0, 0,
	0, 0, 0, 306, 307, 309, 308, 310, 311, 312,
	313, 0, 314, 315, 0, 0, 0, 0, 0, 715,
	0, 0, 0, 316, 0, 317, 318, 319, 0, 320,
	321, 322, 323, 324, 325, 326, 716, 717, 0, 327,
	718, 328, 719, 0, 720, 329, 330, 331, 332, 333,
	334, 335, 0, 0, 0, 336, 721, 722, 723, 0,
	337, 338, 724, 0, 0, 0, 339, 340, 341, 342,
	343, 344, 345, 346, 0, 0, 348, 349, 350, 347,
	351, 0, 352, 0, 353, 354, 355, 356, 357, 358,
	359, 0, 360, 361, 362, 0, 363, 364, 365, 0,
	0, 0, 0, 0, 0, 0, 366, 367, 368, 369,
	370, 0, 371, 373, 725, 726, 0, 376, 378, 372,
	374, 0, 377, 375, 379, 0, 380, 381, 382, 0,
	0, 383, 384, 385, 0, 386, 387, 388, 0, 389,
	390, 391, 0, 392, 393, 727, 394, 395, 396, 398,
	400, 397, 399, 401, 402, 403, 404, 405, 728, 729,
	406, 0, 303, 0, 0, 0, 0, 0, 407, 408,
	409, 730, 0, 0, 0, 410, 0, 411, 412, 413,
	0, 414, 415, 0, 0, 416, 417, 418, 731, 732,
	419, 420, 421, 422, 423, 424, 425, 426, 427, 0,
	428, 733, 0, 734, 429, 0, 430, 431, 432, 433,
	434, 435, 436, 2281, 736, 737, 529, 0, 437, 438,
	439, 0, 440, 441, 442, 443, 444, 0, 0, 0,
	304, 445, 446, 447, 0, 0, 738, 448, 530, 449,
	739, 740, 0, 741, 0, 450, 451, 453, 0, 742,
	0, 452, 454, 455, 0, 456, 0, 0, 0, 457,
	458, 459, 460, 461, 462, 0, 463, 465, 464, 0,
	467, 743, 466, 0, 468, 469, 0, 0, 470, 471,
	472, 473, 474, 475, 478, 0, 0, 476, 477, 479,
	480, 0, 481, 482, 484, 487, 483, 485, 486, 488,
	501, 502, 489, 490, 491, 492, 493, 494, 495, 496,
	497, 498, 499, 500, 504, 0, 503, 0, 505, 506,
	507, 508, 509, 516, 518, 519, 514, 515, 517, 520,
	521, 523, 511, 512, 513, 0, 522, 510, 0, 305,
	0, 524, 525, 526, 527, 0, 744, 528, 745, 531,
	532, 0, 0, 533, 0, 534, 0, 0, 536, 537,
	538, 0, 0, 539, 540, 746, 0, 541, 0, 747,
	542, 543, 535, 544, 545, 546, 547, 548, 549, 550,
	551, 552, 553, 0, 554, 555, 748, 556, 557, 558,
	749, 559, 560, 561, 750, 562, 751, 563, 564, 0,
	565, 566, 567, 0, 568, 569, 570, 571, 572, 573,
	574, 575, 752, 576, 577, 579, 578, 580, 0, 581,
	0, 582, 583, 584, 0, 0, 0, 0, 0, 585,
	586, 588, 0, 589, 590, 591, 592, 587, 593, 594,
	595, 596, 597, 598, 0, 600, 601, 599, 602, 603,
	0, 604, 605, 606, 607, 608, 753, 609, 0, 610,
	611, 618, 619, 620, 612, 613, 614, 621, 622, 623,
	624, 625, 626, 0, 628, 629, 627, 630, 631, 632,
	0, 633, 754, 634, 615, 616, 635, 636, 0, 637,
	638, 639, 640, 641, 642, 643, 755, 0, 644, 0,
	645, 646, 647, 648, 649, 650, 652, 617, 653, 658,
	659, 756, 654, 655, 656, 657, 757, 661, 662, 663,
	664, 0, 665, 666, 0, 660, 651, 0, 667, 668,
	669, 670, 671, 672, 0, 673, 674, 0, 675, 758,
	759, 760, 761, 0, 687, 0, 676, 678, 679, 680,
	681, 762, 682, 763, 0, 683, 684, 685, 686, 677,
	688, 689, 0, 0, 690, 691, 693, 695, 696, 692,
	694, 697, 0, 698, 0, 0, 699, 700, 701, 764,
	765, 766, 0, 703, 702, 704, 705, 706, 767, 707,
	708, 709, 300, 0, 0, 0, 710, 711, 768, 712,
	713, 714, 0, 0, 0, 0, 0, 0, 0, 306,
	307, 309, 308, 310, 311, 312, 313, 0, 314, 315,
	0, 0, 0, 0, 0, 715, 0, 0, 0, 316,
	0, 317, 318, 319, 0, 320, 321, 322, 323, 324,
	325, 326, 716, 717, 0, 327, 718, 328, 719, 0,
	720, 329, 330, 331, 332, 333, 334, 335, 0, 0,
	0, 336, 721, 722, 723, 0, 337, 338, 724, 0,
	0, 0, 339, 340, 341, 342, 343, 344, 345, 346,
	0, 0, 348, 349, 350, 347, 351, 0, 352, 0,
	353, 354, 355, 356, 357, 358, 359, 0, 360, 361,
	362, 0, 363, 364, 365, 0, 0, 0, 0, 0,
	0, 0, 366, 367, 368, 369, 370, 0, 371, 373,
	725, 726, 0, 376, 378, 372, 374, 0, 377, 375,
	379, 0, 380, 381, 382, 0, 0, 383, 384, 385,
	0, 386, 387, 388, 0, 389, 390, 391, 0, 392,
	393, 727, 394, 395, 396, 398, 400, 397, 399, 401,
	402, 403, 404, 405, 728, 729, 406, 0, 303, 0,
	0, 0, 0, 0, 407, 408, 409, 730, 0, 0,
	0, 410, 0, 411, 412, 413, 0, 414, 415, 0,
	0, 416, 417, 418, 731, 732, 419, 420, 421, 422,
	423, 424, 425, 426, 427, 0, 428, 733, 0, 734,
	429, 0, 430, 431, 432, 433, 434, 435, 436, 2275,
	736, 737, 529, 0, 437, 438, 439, 0, 440, 441,
	442, 443, 444, 0, 0, 0, 304, 445, 446, 447,
	0, 0, 738, 448, 530, 449, 739, 740, 0, 741,
	0, 450, 451, 453, 0, 742, 0, 452, 454, 455,
	0, 456, 0, 0, 0, 457, 458, 459, 460, 461,
	462, 0, 463, 465, 464, 0, 467, 743, 466, 0,
	468, 469, 0, 0, 470, 471, 472, 473, 474, 475,
	478, 0, 0, 476, 477, 479, 480, 0, 481, 482,
	484, 487, 483, 485, 486, 488, 501, 502, 489, 490,
	491, 492, 493, 494, 495, 496, 497, 498, 499, 500,
	504, 0, 503, 0, 505, 506, 507, 508, 509, 516,
	518, 519, 514, 515, 517, 520, 521, 523, 511, 512,
	513, 0, 522, 510, 0, 305, 0, 524, 525, 526,
	527, 0, 744, 528, 745, 531, 532, 0, 0, 533,
	0, 534, 0, 0, 536, 537, 538, 0, 0, 539,
	540, 746, 0, 541, 0, 747, 542, 543, 535, 544,
	545, 546, 547, 548, 549, 550, 551, 552, 553, 0,
	554, 555, 748, 556, 557, 558, 749, 559, 560, 561,
	750, 562, 751, 563, 564, 0, 565, 566, 567, 0,
	568, 569, 570, 571, 572, 573, 574, 575, 752, 576,
	577, 579, 578, 580, 0, 581, 0, 582, 583, 584,
	0, 0, 0, 0, 0, 585, 586, 588, 0, 589,
	590, 591, 592, 587, 593, 594, 595, 596, 597, 598,
	0, 600, 601, 599, 602, 603, 0, 604, 605, 606,
	607, 608, 753, 609, 0, 610, 611, 618, 619, 620,
	612, 613, 614, 621, 622, 623, 624, 625, 626, 0,
	628, 629, 627, 630, 631, 632, 0, 633, 754, 634,
	615, 616, 635, 636, 0, 637, 638, 639, 640, 641,
	642, 643, 755, 0, 644, 0, 645, 646, 647, 648,
	649, 650, 652, 617, 653, 658, 659, 756, 654, 655,
	656, 657, 757, 661, 662, 663, 664, 0, 665, 666,
	0, 660, 651, 0, 667, 668, 669, 670, 671, 672,
	0, 673, 674, 0, 675, 758, 759, 760, 761, 0,
	687, 0, 676, 678, 679, 680, 681, 762, 682, 763,
	0, 683, 684, 685, 686, 677, 688, 689, 0, 0,
	690, 691, 693, 695, 696, 692, 694, 697, 0, 698,
	0, 0, 699, 700, 701, 764, 765, 766, 0, 703,
	702, 704, 705, 706, 767, 707, 708, 709, 1016, 0,
	300, 0, 710, 711, 768, 712, 713, 714, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 306, 307, 309,
	308, 310, 311, 312, 313, 0, 314, 315, 0, 0,
	0, 0, 0, 715, 0, 0, 0, 316, 0, 317,
	318, 319, 0, 320, 321, 322, 323, 324, 325, 326,
	716, 717, 0, 327, 718, 328, 719, 0, 720, 329,
	330, 331, 332, 333, 334, 335, 0, 0, 0, 336,
	721, 722, 723, 0, 337, 338, 724, 0, 0, 0,
	339, 340, 341, 342, 343, 344, 345, 346, 0, 0,
	348, 349, 350, 347, 351, 0, 352, 0, 353, 354,
	355, 356, 357, 358, 359, 0, 360, 361, 362, 0,
	363, 364, 365, 0, 0, 0, 0, 0, 0, 0,
	366, 367, 368, 369, 370, 0, 371, 373, 725, 726,
	0, 376, 378, 372, 374, 0, 377, 375, 379, 0,
	380, 381, 382, 0, 0, 383, 384, 385, 0, 386,
	387, 388, 0, 389, 390, 391, 0, 392, 393, 727,
	394, 395, 396, 398, 400, 397, 399, 401, 402, 403,
	404, 405, 728, 729, 406, 0, 0, 0, 0, 0,
	0, 0, 407, 408, 409, 730, 0, 0, 0, 410,
	0, 411, 412, 413, 0, 414, 415, 0, 0, 416,
	417, 418, 731, 732, 419, 420, 421, 422, 423, 424,
	425, 426, 427, 0, 428, 733, 0, 734, 429, 0,
	430, 431, 432, 433, 434, 435, 436, 735, 736, 737,
	529, 0, 437, 438, 439, 0, 440, 441, 442, 443,
	444, 0, 0, 0, 0, 445, 446, 447, 0, 0,
	738, 448, 530, 449, 739, 740, 0, 741, 1015, 450,
	451, 453, 0, 742, 0, 452, 454, 455, 0, 456,
	0, 0, 0, 457, 458, 459, 460, 461, 462, 0,
	463, 465, 464, 0, 467, 743, 466, 0, 468, 469,
	0, 0, 470, 471, 472, 473, 474, 475, 478, 0,
	0, 476, 477, 479, 480, 0, 481, 482, 484, 487,
	483, 485, 486, 488, 501, 502, 489, 490, 491, 492,
	493, 494, 495, 496, 497, 498, 499, 500, 504, 0,
	503, 0, 505, 506, 507, 508, 509, 516, 518, 519,
	514, 515, 517, 520, 521, 523, 511, 512, 513, 0,
	522, 510, 0, 0, 0, 524, 525, 526, 527, 0,
	744, 528, 745, 531, 532, 0, 0, 533, 0, 534,
	0, 0, 536, 537, 538, 0, 0, 539, 540, 746,
	0, 541, 0, 747, 542, 543, 535, 544, 545, 546,
	547, 548, 549, 550, 551, 552, 553, 0, 554, 555,
	748, 556, 557, 558, 749, 559, 560, 561, 750, 562,
	751, 563, 564, 0, 565, 566, 567, 0, 568, 569,
	570, 571, 572, 573, 574, 575, 752, 576, 577, 579,
	578, 580, 0, 581, 0, 582, 583, 584, 0, 0,
	0, 0, 0, 585, 586, 588, 0, 589, 590, 591,
	592, 587, 593, 594, 595, 596, 597, 598, 0, 600,
	601, 599, 602, 603, 0, 604, 605, 606, 607, 608,
	753, 609, 0, 610, 611, 618, 619, 620, 612, 613,
	614, 621, 622, 623, 624, 625, 626, 0, 628, 629,
	627, 630, 631, 632, 0, 633, 754, 634, 615, 616,
	635, 636, 0, 637, 638, 639, 640, 641, 642, 643,
	755, 0, 644, 0, 645, 646, 647, 648, 649, 650,
	652, 617, 653, 658, 659, 756, 654, 655, 656, 657,
	757, 661, 662, 663, 664, 0, 665, 666, 0, 660,
	651, 1014, 667, 668, 669, 670, 671, 672, 0, 673,
	674, 0, 675, 758, 759, 760, 761, 0, 687, 0,
	676, 678, 679, 680, 681, 762, 682, 763, 0, 683,
	684, 685, 686, 677, 688, 689, 0, 0, 690, 691,
	693, 695, 696, 692, 694, 697, 0, 698, 0, 0,
	699, 700, 701, 764, 765, 766, 0, 703, 702, 704,
	705, 706, 767, 707, 708, 709, 893, 0, 300, 0,
	710, 711, 768, 712, 713, 714, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 306, 882, 309, 308, 310,
	311, 312, 313, 0, 314, 315, 0, 0, 0, 0,
	0, 715, 0, 0, 0, 316, 0, 317, 318, 319,
	0, 320, 321, 322, 323, 891, 325, 326, 716, 717,
	0, 327, 718, 328, 719, 0, 720, 329, 330, 331,
	332, 333, 334, 335, 0, 0, 0, 336, 721, 722,
	723, 0, 337, 338, 724, 0, 0, 0, 339, 340,
	341, 342, 343, 344, 345, 346, 0, 0, 348, 349,
	350, 347, 351, 0, 352, 0, 353, 354, 355, 356,
	357, 358, 359, 0, 360, 361, 362, 0, 363, 364,
	365, 0, 0, 0, 0, 0, 0, 0, 366, 367,
	368, 369, 370, 0, 371, 373, 725, 726, 0, 376,
	378, 372, 374, 0, 377, 375, 379, 0, 380, 381,
	382, 0, 0, 383, 384, 385, 0, 386, 387, 388,
	0, 389, 390, 391, 0, 392, 393, 727, 394, 395,
	396, 398, 400, 397, 399, 401, 402, 403, 404, 405,
	728, 729, 406, 0, 0, 0, 0, 0, 0, 0,
	407, 408, 884, 730, 0, 0, 0, 410, 0, 411,
	412, 413, 0, 890, 415, 886, 0, 416, 417, 418,
	731, 732, 419, 420, 421, 422, 423, 424, 425, 426,
	427, 0, 428, 733, 0, 734, 429, 0, 430, 431,
	432, 433, 434, 435, 436, 735, 736, 737, 529, 0,
	437, 438, 439, 887, 440, 441, 442, 443, 444, 0,
	0, 0, 0, 445, 446, 447, 0, 0, 738, 448,
	530, 449, 739, 740, 0, 741, 0, 450, 451, 453,
	0, 742, 0, 452, 454, 455, 0, 456, 0, 0,
	0, 457, 458, 459, 460, 461, 885, 0, 463, 465,
	464, 0, 467, 743, 466, 0, 468, 469, 0, 0,
	470, 471, 472, 473, 474, 475, 478, 0, 0, 476,
	477, 479, 480, 0, 481, 482, 484, 487, 483, 485,
	486, 488, 501, 502, 489, 490, 491, 492, 493, 494,
	495, 496, 497, 498, 499, 500, 504, 0, 503, 0,
	505, 506, 507, 888, 509, 516, 518, 519, 514, 515,
	517, 520, 521, 523, 511, 512, 513, 0, 522, 510,
	0, 0, 0, 524, 525, 526, 527, 0, 744, 528,
	745, 531, 532, 0, 0, 533, 0, 534, 0, 0,
	536, 537, 538, 0, 0, 539, 540, 746, 0, 541,
	0, 747, 542, 543, 535, 544, 545, 546, 547, 548,
	549, 550, 551, 552, 553, 0, 554, 555, 748, 556,
	557, 558, 749, 559, 560, 561, 750, 562, 751, 563,
	564, 0, 889, 566, 567, 0, 568, 569, 570, 571,
	572, 573, 574, 575, 752, 576, 577, 579, 578, 580,
	0, 581, 0, 582, 583, 584, 0, 0, 0, 0,
	0, 585, 883, 588, 0, 589, 590, 591, 592, 587,
	593, 594, 595, 596, 597, 598, 0, 600, 601, 599,
	602, 603, 0, 604, 605, 606, 607, 608, 753, 609,
	0, 610, 611, 618, 619, 620, 612, 613, 614, 621,
	622, 623, 624, 625, 626, 0, 628, 629, 627, 630,
	631, 632, 0, 633, 754, 634, 615, 616, 635, 636,
	0, 637, 638, 639, 640, 641, 642, 643, 755, 0,
	644, 0, 645, 646, 647, 648, 649, 650, 652, 617,
	653, 658, 659, 756, 654, 655, 656, 657, 757, 661,
	662, 663, 664, 0, 665, 666, 0, 660, 651, 0,
	667, 668, 669, 670, 671, 672, 0, 673, 674, 0,
	675, 758, 759, 760, 761, 0, 687, 0, 676, 678,
	679, 680, 681, 762, 682, 763, 0, 683, 684, 685,
	686, 677, 688, 689, 0, 0, 690, 691, 693, 695,
	696, 692, 694, 697, 0, 698, 0, 0, 699, 700,
	701, 764, 765, 766, 0, 703, 702, 704, 705, 706,
	767, 707, 708, 709, 876, 0, 300, 0, 710, 711,
	768, 712, 713, 714, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 306, 882, 309, 308, 310, 311, 312,
	313, 0, 314, 315, 0, 0, 0, 0, 0, 715,
	0, 0, 0, 316, 0, 317, 318, 319, 0, 320,
	321, 322, 323, 891, 325, 326, 716, 717, 0, 327,
	718, 328, 719, 0, 720, 329, 330, 331, 332, 333,
	334, 335, 0, 0, 0, 336, 721, 722, 723, 0,
	337, 338, 724, 0, 0, 0, 339, 340, 341, 342,
	343, 344, 345, 346, 0, 0, 348, 349, 350, 347,
	351, 0, 352, 0, 353, 354, 355, 356, 357, 358,
	359, 0, 360, 361, 362, 0, 363, 364, 365, 0,
	0, 0, 0, 0, 0, 0, 366, 367, 368, 369,
	370, 0, 371, 373, 725, 726, 0, 376, 378, 372,
	374, 0, 377, 375, 379, 0, 380, 381, 382, 0,
	0, 383, 384, 385, 0, 386, 387, 388, 0, 389,
	390, 391, 0, 392, 393, 727, 394, 395, 396, 398,
	400, 397, 399, 401, 402, 403, 404, 405, 728, 729,
	406, 0, 0, 0, 0, 0, 0, 0, 407, 408,
	884, 730, 0, 0, 0, 410, 0, 411, 412, 413,
	0, 890, 415, 886, 0, 416, 417, 418, 731, 732,
	419, 420, 421, 422, 423, 424, 425, 426, 427, 0,
	428, 733, 0, 734, 429, 0, 430, 431, 432, 433,
	434, 435, 436, 735, 736, 737, 529, 0, 437, 438,
	439, 887, 440, 441, 442, 443, 444, 0, 0, 0,
	0, 445, 446, 447, 0, 0, 738, 448, 530, 449,
	739, 740, 0, 741, 0, 450, 451, 453, 0, 742,
	0, 452, 454, 455, 0, 456, 0, 0, 0, 457,
	458, 459, 460, 461, 885, 0, 463, 465, 464, 0,
	467, 743, 466, 0, 468, 469, 0, 0, 470, 471,
	472, 473, 474, 475, 478, 0, 0, 476, 477, 479,
	480, 0, 481, 482, 484, 487, 483, 485, 486, 488,
	501, 502, 489, 490, 491, 492, 493, 494, 495, 496,
	497, 498, 499, 500, 504, 0, 503, 0, 505, 506,
	507, 888, 509, 516, 518, 519, 514, 515, 517, 520,
	521, 523, 511, 512, 513, 0, 522, 510, 0, 0,
	0, 524, 525, 526, 527, 0, 744, 528, 745, 531,
	532, 0, 0, 533, 0, 534, 0, 0, 536, 537,
	538, 0, 0, 539, 540, 746, 0, 541, 0, 747,
	542, 543, 535, 544, 545, 546, 547, 548, 549, 550,
	551, 552, 553, 0, 554, 555, 748, 556, 557, 558,
	749, 559, 560, 561, 750, 562, 751, 563, 564, 0,
	889, 566, 567, 0, 568, 569, 570, 571, 572, 573,
	574, 575, 752, 576, 577, 579, 578, 580, 0, 581,
	0, 582, 583, 584, 0, 0, 0, 0, 0, 585,
	883, 588, 0, 589, 590, 591, 592, 587, 593, 594,
	595, 596, 597, 598, 0, 600, 601, 599, 602, 603,
	0, 604, 605, 606, 607, 608, 753, 609, 0, 610,
	611, 618, 619, 620, 612, 613, 614, 621, 622, 623,
	624, 625, 626, 0, 628, 629, 627, 630, 631, 632,
	0, 633, 754, 634, 615, 616, 635, 636, 0, 637,
	638, 639, 640, 641, 642, 643, 755, 0, 644, 0,
	645, 646, 647, 648, 649, 650, 652, 617, 653, 658,
	659, 756, 654, 655, 656, 657, 757, 661, 662, 663,
	664, 0, 665, 666, 0, 660, 651, 0, 667, 668,
	669, 670, 671, 672, 0, 673, 674, 0, 675, 758,
	759, 760, 761, 0, 687, 0, 676, 678, 679, 680,
	681, 762, 682, 763, 0, 683, 684, 685, 686, 677,
	688, 689, 0, 0, 690, 691, 693, 695, 696, 692,
	694, 697, 0, 698, 0, 0, 699, 700, 701, 764,
	765, 766, 0, 703, 702, 704, 705, 706, 767, 707,
	708, 709, 300, 0, 0, 0, 710, 711, 768, 712,
	713, 714, 0, 0, 0, 0, 0, 0, 0, 306,
	307, 309, 308, 310, 311, 312, 313, 0, 314, 315,
	0, 0, 0, 0, 0, 715, 0, 0, 0, 316,
	0, 317, 318, 319, 0, 320, 321, 322, 323, 324,
	325, 326, 716, 717, 0, 327, 718, 328, 719, 0,
	720, 329, 330, 331, 332, 333, 334, 335, 0, 0,
	0, 336, 721, 722, 723, 0, 337, 338, 724, 0,
	0, 0, 339, 340, 341, 342, 343, 344, 345, 346,
	0, 0, 348, 349, 350, 347, 351, 0, 352, 0,
	353, 354, 355, 356, 357, 358, 359, 0, 360, 361,
	362, 0, 363, 364, 365, 0, 0, 0, 0, 0,
	0, 0, 366, 367, 368, 369, 370, 0, 371, 373,
	725, 726, 0, 376, 378, 372, 374, 0, 377, 375,
	379, 0, 380, 381, 382, 0, 0, 383, 384, 385,
	0, 386, 387, 388, 0, 389, 390, 391, 0, 392,
	393, 727, 394, 395, 396, 398, 400, 397, 399, 401,
	402, 403, 404, 405, 728, 729, 406, 0, 3968, 0,
	0, 0, 0, 0, 407, 408, 409, 730, 0, 0,
	0, 410, 0, 411, 412, 413, 0, 414, 415, 0,
	0, 416, 417, 418, 731, 732, 419, 420, 421, 422,
	423, 424, 425, 426, 427, 0, 428, 733, 0, 734,
	429, 0, 430, 431, 432, 433, 434, 435, 436, 735,
	736, 737, 529, 0, 437, 438, 439, 0, 440, 441,
	442, 443, 444, 0, 0, 0, 0, 445, 446, 447,
	0, 0, 738, 448, 530, 449, 739, 740, 0, 741,
	0, 450, 451, 453, 0, 742, 0, 452, 454, 455,
	0, 456, 0, 0, 0, 457, 458, 459, 460, 461,
	462, 0, 463, 465, 464, 0, 467, 743, 466, 0,
	468, 469, 0, 0, 470, 471, 472, 473, 474, 475,
	478, 0, 0, 476, 477, 479, 480, 0, 481, 482,
	484, 487, 483, 485, 486, 488, 501, 502, 489, 490,
	491, 492, 493, 494, 495, 496, 497, 498, 499, 500,
	504, 0, 503, 0, 505, 506, 507, 508, 509, 516,
	518, 519, 514, 515, 517, 520, 521, 523, 511, 512,
	513, 0, 522, 510, 0, 0, 0, 524, 525, 526,
	527, 0, 744, 528, 745, 531, 532, 0, 0, 533,
	0, 534, 0, 0, 536, 537, 538, 0, 0, 539,
	540, 746, 0, 541, 0, 747, 542, 543, 535, 544,
	545, 546, 547, 548, 549, 550, 551, 552, 553, 0,
	554, 555, 748, 556, 557, 558, 749, 559, 560, 561,
	750, 562, 751, 563, 564, 4739, 565, 566, 567, 0,
	568, 569, 570, 571, 572, 573, 574, 575, 752, 576,
	577, 579, 578, 580, 0, 581, 0, 582, 583, 584,
	0, 0, 0, 0, 0, 585, 586, 588, 0, 589,
	590, 591, 592, 587, 593, 594, 595, 596, 597, 598,
	0, 600, 601, 599, 602, 603, 0, 604, 605, 606,
	607, 608, 753, 609, 0, 610, 611, 618, 619, 620,
	612, 613, 614, 621, 622, 623, 624, 625, 626, 0,
	628, 629, 627, 630, 631, 632, 0, 633, 754, 634,
	615, 616, 635, 636, 0, 637, 638, 639, 640, 641,
	642, 643, 755, 0, 644, 0, 645, 646, 647, 648,
	649, 650, 652, 617, 653, 658, 659, 756, 654, 655,
	656, 657, 757, 661, 662, 663, 664, 0, 665, 666,
	0, 660, 651, 0, 667, 668, 669, 670, 671, 672,
	0, 673, 674, 0, 675, 758, 759, 760, 761, 0,
	687, 0, 676, 678, 679, 680, 681, 762, 682, 763,
	0, 683, 684, 685, 686, 677, 688, 689, 0, 0,
	690, 691, 693, 695, 696, 692, 694, 697, 0, 698,
	0, 0, 699, 700, 701, 764, 765, 766, 0, 703,
	702, 704, 705, 706, 767, 707, 708, 709, 1487, 0,
	300, 0, 710, 711, 768, 712, 713, 714, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 306, 307, 309,
	308, 310, 311, 312, 313, 0, 314, 315, 0, 0,
	0, 0, 0, 715, 0, 0, 0, 316, 0, 317,
	318, 319, 1490, 320, 321, 322, 323, 324, 325, 326,
	716, 717, 0, 327, 718, 328, 719, 0, 720, 329,
	330, 331, 332, 333, 334, 335, 0, 0, 0, 336,
	721, 722, 1488, 0, 337, 338, 724, 0, 0, 0,
	339, 340, 341, 342, 343, 344, 345, 346, 0, 0,
	348, 349, 350, 347, 351, 0, 352, 0, 353, 354,
	355, 356, 357, 358, 359, 0, 360, 361, 362, 0,
	363, 364, 365, 0, 0, 0, 0, 0, 0, 0,
	366, 367, 368, 369, 370, 0, 371, 373, 725, 726,
	0, 376, 378, 372, 374, 0, 377, 375, 379, 0,
	380, 381, 382, 0, 0, 383, 384, 385, 0, 386,
	387, 388, 0, 389, 390, 391, 0, 392, 393, 727,
	394, 395, 396, 398, 400, 397, 399, 401, 402, 403,
	404, 405, 728, 729, 406, 0, 0, 0, 0, 0,
	0, 0, 407, 408, 409, 730, 0, 0, 0, 410,
	0, 411, 412, 413, 0, 414, 415, 0, 0, 416,
	417, 418, 731, 732, 419, 420, 421, 422, 423, 424,
	425, 426, 427, 0, 428, 733, 0, 734, 429, 0,
	430, 431, 432, 433, 434, 435, 436, 735, 736, 737,
	529, 0, 437, 438, 439, 0, 440, 441, 442, 443,
	444, 0, 0, 0, 0, 445, 446, 447, 0, 0,
	738, 448, 530, 449, 739, 740, 0, 741, 0, 450,
	451, 453, 0, 742, 0, 452, 454, 455, 0, 456,
	0, 0, 0, 457, 458, 459, 460, 461, 462, 0,
	463, 465, 464, 0, 467, 743, 466, 0, 468, 469,
	0, 0, 470, 471, 472, 473, 474, 475, 478, 0,
	0, 476, 477, 479, 480, 0, 481, 482, 484, 487,
	483, 485, 486, 488, 501, 502, 489, 490, 491, 492,
	493, 494, 495, 496, 497, 498, 499, 500, 504, 0,
	864, 0, 505, 506, 507, 508, 509, 516, 518, 519,
	514, 515, 517, 520, 521, 523, 511, 512, 513, 0,
	522, 510, 0, 0, 0, 524, 525, 526, 527, 0,
	744, 528, 745, 531, 532, 0, 0, 533, 0, 534,
	0, 0, 536, 537, 538, 0, 0, 539, 540, 746,
	0, 541, 0, 747, 542, 543, 535, 544, 545, 546,
	547, 548, 549, 550, 551, 552, 553, 0, 554, 555,
	748, 556, 557, 558, 749, 559, 560, 561, 750, 562,
	751, 563, 564, 0, 565, 566, 567, 0, 568, 569,
	570, 571, 572, 573, 574, 575, 752, 576, 577, 579,
	578, 580, 0, 581, 0, 582, 583, 584, 0, 0,
	0, 0, 0, 585, 586, 588, 0, 589, 590, 591,
	592, 587, 593, 594, 595, 596, 597, 598, 0, 600,
	601, 599, 602, 603, 0, 863, 605, 606, 607, 608,
	753, 609, 0, 610, 611, 618, 619, 620, 612, 613,
	614, 862, 622, 623, 624, 625, 626, 0, 628, 629,
	627, 630, 1491, 632, 0, 633, 754, 634, 615, 616,
	635, 636, 0, 637, 638, 639, 640, 641, 642, 643,
	755, 0, 644, 0, 645, 646, 647, 648, 649, 650,
	652, 617, 653, 658, 659, 756, 654, 655, 656, 657,
	757, 661, 662, 663, 664, 0, 665, 666, 0, 660,
	651, 0, 667, 668, 669, 670, 671, 672, 0, 673,
	674, 0, 675, 860, 759, 760, 761, 0, 687, 0,
	676, 678, 679, 680, 681, 762, 682, 763, 0, 683,
	684, 685, 686, 677, 688, 689, 0, 0, 690, 691,
	693, 695, 696, 692, 694, 697, 0, 698, 0, 0,
	699, 700, 701, 764, 765, 766, 0, 703, 702, 704,
	705, 706, 767, 707, 708, 709, 1487, 0, 300, 0,
	710, 711, 768, 712, 713, 714, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 306, 307, 309, 308, 310,
	311, 312, 313, 0, 314, 315, 0, 0, 0, 0,
	0, 715, 0, 0, 0, 316, 0, 317, 318, 319,
	1490, 320, 321, 322, 323, 324, 325, 326, 716, 717,
	0, 327, 718, 328, 719, 0, 720, 329, 330, 331,
	332, 333, 334, 335, 0, 0, 0, 336, 721, 722,
	1488, 0, 337, 338, 724, 0, 0, 0, 339, 340,
	341, 342, 343, 344, 345, 346, 0, 0, 348, 349,
	350, 347, 351, 0, 352, 0, 353, 354, 355, 356,
	357, 358, 359, 0, 360, 361, 362, 0, 363, 364,
	365, 0, 0, 0, 0, 0, 0, 0, 366, 367,
	368, 369, 370, 0, 371, 373, 725, 726, 0, 376,
	378, 372, 374, 0, 377, 375, 379, 0, 380, 381,
	382, 0, 0, 383, 384, 385, 0, 386, 387, 388,
	0, 389, 390, 391, 0, 392, 393, 727, 394, 395,
	396, 398, 400, 397, 399, 401, 402, 403, 404, 405,
	728, 729, 406, 0, 0, 0, 0, 0, 0, 0,
	407, 408, 409, 730, 0, 0, 0, 410, 0, 411,
	412, 413, 0, 414, 415, 0, 0, 416, 417, 418,
	731, 732, 419, 420, 421, 422, 423, 424, 425, 426,
	427, 0, 428, 733, 0, 734, 429, 0, 430, 431,
	432, 433, 434, 435, 436, 735, 736, 737, 529, 0,
	437, 438, 439, 0, 440, 441, 442, 443, 444, 0,
	0, 0, 0, 445, 446, 447, 0, 0, 738, 448,
	530, 449, 739, 740, 0, 741, 0, 450, 451, 453,
	0, 742, 0, 452, 454, 455, 0, 456, 0, 0,
	0, 457, 458, 459, 460, 461, 462, 0, 463, 465,
	464, 0, 467, 743, 466, 0, 468, 469, 0, 0,
	470, 471, 472, 473, 474, 475, 478, 0, 0, 476,
	477, 479, 480, 0, 481, 482, 484, 487, 483, 485,
	486, 488, 501, 502, 489, 490, 491, 492, 493, 494,
	495, 496, 497, 498, 499, 500, 504, 0, 864, 0,
	505, 506, 507, 508, 509, 516, 518, 519, 514, 515,
	517, 520, 521, 523, 511, 512, 513, 0, 522, 510,
	0, 0, 0, 524, 525, 526, 527, 0, 744, 528,
	745, 531, 532, 0, 0, 533, 0, 534, 0, 0,
	536, 537, 538, 0, 0, 539, 540, 746, 0, 541,
	0, 747, 542, 543, 535, 544, 545, 546, 547, 548,
	549, 550, 551, 552, 553, 0, 554, 555, 748, 556,
	557, 558, 749, 559, 560, 561, 750, 562, 751, 563,
	564, 0, 565, 566, 567, 0, 568, 569, 570, 571,
	572, 573, 574, 575, 752, 576, 577, 579, 578, 580,
	0, 581, 0, 582, 583, 584, 0, 0, 0, 0,
	0, 585, 586, 588, 0, 589, 590, 591, 592, 587,
	593, 594, 595, 596, 597, 598, 0, 600, 601, 599,
	602, 603, 0, 863, 605, 606, 607, 608, 753, 609,
	0, 610, 611, 618, 619, 620, 612, 613, 614, 862,
	622, 623, 624, 625, 626, 0, 628, 629, 627, 630,
	1491, 632, 0, 633, 754, 634, 615, 616, 635, 636,
	0, 637, 638, 639, 640, 641, 642, 643, 755, 0,
	644, 0, 645, 646, 647, 648, 649, 650, 652, 617,
	653, 658, 659, 756, 654, 655, 656, 657, 757, 661,
	662, 663, 664, 0, 665, 666, 0, 660, 651, 0,
	667, 668, 669, 670, 671, 672, 0, 673, 674, 0,
	675, 860, 759, 760, 761, 0, 687, 0, 676, 1489,
	679, 680, 681, 762, 682, 763, 0, 683, 684, 685,
	686, 677, 688, 689, 0, 0, 690, 691, 693, 695,
	696, 692, 694, 697, 0, 698, 0, 0, 699, 700,
	701, 764, 765, 766, 0, 703, 702, 704, 705, 706,
	767, 707, 708, 709, 871, 0, 300, 0, 710, 711,
	768, 712, 713, 714, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 306, 307, 309, 308, 310, 311, 312,
	313, 869, 314, 315, 0, 0, 0, 0, 0, 715,
	0, 0, 0, 316, 0, 317, 318, 319, 0, 320,
	321, 322, 323, 324, 325, 326, 716, 717, 0, 327,
	718, 328, 719, 0, 720, 329, 330, 331, 332, 333,
	334, 335, 0, 0, 0, 336, 721, 722, 723, 0,
	337, 338, 724, 0, 0, 0, 339, 340, 341, 342,
	343, 344, 345, 346, 0, 0, 348, 349, 350, 347,
	351, 0, 352, 0, 353, 354, 355, 356, 357, 358,
	359, 0, 360, 361, 362, 0, 363, 364, 365, 0,
	0, 0, 0, 0, 0, 0, 366, 367, 368, 369,
	370, 0, 371, 373, 725, 726, 0, 376, 378, 372,
	374, 0, 377, 375, 379, 0, 380, 381, 382, 0,
	0, 383, 384, 385, 0, 386, 387, 388, 0, 389,
	390, 391, 0, 392, 393, 727, 394, 395, 396, 398,
	400, 397, 399, 401, 402, 403, 404, 405, 728, 729,
	406, 0, 0, 0, 0, 0, 0, 0, 407, 408,
	409, 730, 0, 0, 0, 410, 0, 411, 412, 413,
	0, 414, 415, 0, 0, 416, 417, 418, 731, 732,
	419, 420, 421, 422, 423, 424, 425, 426, 427, 0,
	428, 733, 0, 734, 429, 0, 430, 431, 432, 433,
	434, 435, 436, 735, 736, 737, 529, 0, 437, 438,
	439, 0, 440, 441, 442, 443, 444, 0, 0, 0,
	0, 445, 446, 447, 0, 0, 738, 448, 530, 449,
	739, 740, 0, 741, 0, 450, 451, 453, 0, 742,
	0, 452, 454, 455, 0, 456, 0, 0, 0, 457,
	458, 459, 460, 461, 462, 0, 463, 465, 464, 0,
	467, 743, 466, 0, 468, 469, 0, 0, 470, 471,
	472, 473, 474, 475, 478, 0, 0, 476, 477, 479,
	480, 0, 481, 482, 484, 487, 483, 485, 486, 488,
	501, 502, 489, 490, 491, 492, 493, 494, 495, 496,
	497, 498, 499, 500, 504, 0, 503, 0, 505, 506,
	507, 508, 509, 516, 518, 519, 514, 515, 517, 520,
	521, 523, 511, 512, 513, 0, 522, 510, 0, 0,
	0, 524, 525, 526, 527, 0, 744, 528, 745, 531,
	532, 0, 0, 533, 0, 534, 0, 0, 536, 537,
	538, 0, 0, 539, 540, 746, 0, 541, 0, 747,
	542, 543, 535, 544, 545, 546, 547, 548, 549, 550,
	551, 552, 553, 0, 554, 555, 748, 556, 557, 558,
	749, 559, 560, 561, 750, 562, 751, 563, 564, 0,
	565, 566, 567, 0, 568, 569, 570, 571, 572, 573,
	574, 575, 752, 576, 577, 579, 578, 580, 0, 581,
	0, 582, 583, 584, 0, 0, 0, 0, 0, 585,
	586, 588, 0, 589, 590, 591, 592, 587, 593, 594,
	595, 596, 597, 598, 0, 600, 601, 599, 602, 603,
	0, 604, 605, 606, 607, 608, 753, 609, 0, 610,
	611, 618, 619, 620, 612, 613, 614, 621, 622, 623,
	624, 625, 626, 0, 628, 629, 627, 630, 631, 632,
	0, 633, 754, 634, 615, 616, 635, 636, 0, 637,
	638, 639, 640, 641, 642, 643, 755, 0, 644, 0,
	645, 646, 647, 648, 649, 650, 652, 617, 653, 658,
	659, 756, 654, 655, 656, 657, 757, 661, 662, 663,
	664, 0, 665, 666, 0, 660, 651, 0, 667, 668,
	669, 670, 671, 672, 0, 673, 674, 0, 675, 758,
	759, 760, 761, 0, 687, 0, 676, 678, 679, 680,
	681, 762, 682, 763, 0, 683, 684, 685, 686, 677,
	688, 689, 0, 0, 690, 691, 693, 695, 696, 692,
	694, 697, 0, 698, 0, 0, 699, 700, 701, 764,
	765, 766, 0, 703, 702, 704, 705, 706, 767, 707,
	708, 709, 779, 0, 300, 0, 710, 711, 768, 712,
	713, 714, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 306, 307, 309, 308, 310, 311, 312, 313, 778,
	314, 315, 0, 0, 0, 0, 0, 715, 0, 0,
	0, 316, 0, 317, 318, 319, 0, 320, 321, 322,
	323, 324, 325, 326, 716, 717, 0, 327, 718, 328,
	719, 0, 720, 329, 330, 331, 332, 333, 334, 335,
	0, 0, 0, 336, 721, 722, 723, 0, 337, 338,
	724, 0, 0, 0, 339, 340, 341, 342, 343, 344,
	345, 346, 0, 0, 348, 349, 350, 347, 351, 0,
	352, 0, 353, 354, 355, 356, 357, 358, 359, 0,
	360, 361, 362, 0, 363, 364, 365, 0, 0, 0,
	0, 0, 0, 0, 366, 367, 368, 369, 370, 0,
	371, 373, 725, 726, 0, 376, 378, 372, 374, 0,
	377, 375, 379, 0, 380, 381, 382, 0, 0, 383,
	384, 385, 0, 386, 387, 388, 0, 389, 390, 391,
	0, 392, 393, 727, 394, 395, 396, 398, 400, 397,
	399, 401, 402, 403, 404, 405, 728, 729, 406, 0,
	0, 0, 0, 0, 0, 0, 407, 408, 409, 730,
	0, 0, 0, 410, 0, 411, 412, 413, 0, 414,
	415, 0, 0, 416, 417, 418, 731, 732, 419, 420,
	421, 422, 423, 424, 425, 426, 427, 0, 428, 733,
	0, 734, 429, 0, 430, 431, 432, 433, 434, 435,
	436, 735, 736, 737, 529, 0, 437, 438, 439, 0,
	440, 441, 442, 443, 444, 0, 0, 0, 0, 445,
	446, 447, 0, 0, 738, 448, 530, 449, 739, 740,
	0, 741, 0, 450, 451, 453, 0, 742, 0, 452,
	454, 455, 0, 456, 0, 0, 0, 457, 458, 459,
	460, 461, 462, 0, 463, 465, 464, 0, 467, 743,
	466, 0, 468, 469, 0, 0, 470, 471, 472, 473,
	474, 475, 478, 0, 0, 476, 477, 479, 480, 0,
	481, 482, 484, 487, 483, 485, 486, 488, 501, 502,
	489, 490, 491, 492, 493, 494, 495, 496, 497, 498,
	499, 500, 504, 0, 503, 0, 505, 506, 507, 508,
	509, 516, 518, 519, 514, 515, 517, 520, 521, 523,
	511, 512, 513, 0, 522, 510, 0, 0, 0, 524,
	525, 526, 527, 0, 744, 528, 745, 531, 532, 0,
	0, 533, 0, 534, 0, 0, 536, 537, 538, 0,
	0, 539, 540, 746, 0, 541, 0, 747, 542, 543,
	535, 544, 545, 546, 547, 548, 549, 550, 551, 552,
	553, 0, 554, 555, 748, 556, 557, 558, 749, 559,
	560, 561, 750, 562, 751, 777, 564, 0, 565, 566,
	567, 0, 568, 569, 570, 571, 572, 573, 574, 575,
	752, 576, 577, 579, 578, 580, 0, 581, 0, 582,
	583, 584, 0, 0, 0, 0, 0, 585, 586, 588,
	0, 589, 590, 591, 592, 587, 593, 594, 595, 596,
	597, 598, 0, 600, 601, 599, 602, 603, 0, 604,
	605, 606, 607, 608, 753, 609, 0, 610, 611, 618,
	619, 620, 612, 613, 614, 621, 622, 623, 624, 625,
	626, 0, 628, 629, 627, 630, 631, 632, 0, 633,
	754, 634, 615, 616, 635, 636, 0, 637, 638, 639,
	640, 641, 642, 643, 755, 0, 644, 0, 645, 646,
	647, 648, 649, 650, 652, 617, 653, 658, 659, 756,
	654, 655, 656, 657, 757, 661, 662, 663, 664, 0,
	665, 666, 0, 660, 651, 0, 667, 668, 669, 670,
	671, 672, 0, 673, 674, 0, 675, 758, 759, 760,
	761, 0, 687, 0, 676, 678, 679, 680, 681, 762,
	682, 763, 0, 683, 684, 685, 686, 677, 688, 689,
	0, 0, 690, 691, 693, 695, 696, 692, 694, 697,
	0, 698, 0, 0, 699, 700, 701, 764, 765, 766,
	0, 703, 702, 704, 705, 706, 767, 707, 708, 709,
	300, 3278, 0, 0, 710, 711, 768, 712, 713, 714,
	0, 0, 0, 0, 0, 0, 0, 306, 307, 309,
	308, 310, 311, 312, 313, 0, 314, 315, 0, 0,
	0, 0, 0, 715, 0, 0, 0, 316, 0, 317,
	318, 319, 0, 320, 321, 322, 323, 324, 325, 326,
	716, 717, 0, 327, 718, 328, 719, 0, 720, 329,
	330, 331, 332, 333, 334, 335, 0, 0, 0, 336,
	721, 722, 723, 0, 337, 338, 724, 0, 0, 0,
	339, 340, 341, 342, 343, 344, 345, 346, 0, 0,
	348, 349, 350, 347, 351, 0, 352, 0, 353, 354,
	355, 356, 357, 358, 359, 0, 360, 361, 362, 0,
	363, 364, 365, 0, 0, 0, 0, 0, 0, 0,
	366, 367, 368, 369, 370, 0, 371, 373, 725, 726,
	0, 376, 378, 372, 374, 0, 377, 375, 379, 0,
	380, 381, 382, 0, 0, 383, 384, 385, 0, 386,
	387, 388, 0, 389, 390, 391, 0, 392, 393, 727,
	394, 395, 396, 398, 400, 397, 399, 401, 402, 403,
	404, 405, 728, 729, 406, 0, 0, 0, 0, 0,
	0, 0, 407, 408, 409, 730, 0, 0, 0, 410,
	0, 411, 412, 413, 0, 414, 415, 0, 0, 416,
	417, 418, 731, 732, 419, 420, 421, 422, 423, 424,
	425, 426, 427, 0, 428, 733, 0, 734, 429, 0,
	430, 431, 432, 433, 434, 435, 436, 735, 736, 737,
	529, 0, 437, 438, 439, 0, 440, 441, 442, 443,
	444, 0, 0, 0, 0, 445, 446, 447, 0, 0,
	738, 448, 530, 449, 739, 740, 0, 741, 0, 450,
	451, 453, 0, 742, 0, 452, 454, 455, 0, 456,
	0, 0, 0, 457, 458, 459, 460, 461, 462, 0,
	463, 465, 464, 0, 467, 743, 466, 0, 468, 469,
	0, 0, 470, 471, 472, 473, 474, 475, 478, 0,
	0, 476, 477, 479, 480, 0, 481, 482, 484, 487,
	483, 485, 486, 488, 501, 502, 489, 490, 491, 492,
	493, 494, 495, 496, 497, 498, 499, 500, 504, 0,
	503, 0, 505, 506, 507, 508, 509, 516, 518, 519,
	514, 515, 517, 520, 521, 523, 511, 512, 513, 0,
	522, 510, 0, 0, 0, 524, 525, 526, 527, 0,
	744, 528, 745, 531, 532, 0, 0, 533, 0, 534,
	0, 0, 536, 537, 538, 0, 0, 539, 540, 746,
	0, 541, 0, 747, 542, 543, 535, 544, 545, 546,
	547, 548, 549, 550, 551, 552, 553, 0, 554, 555,
	748, 556, 557, 558, 749, 559, 560, 561, 750, 562,
	751, 563, 564, 0, 565, 566, 567, 0, 568, 569,
	570, 571, 572, 573, 574, 575, 752, 576, 577, 579,
	578, 580, 0, 581, 0, 582, 583, 584, 0, 0,
	0, 0, 0, 585, 586, 588, 0, 589, 590, 591,
	592, 587, 593, 594, 595, 596, 597, 598, 0, 600,
	601, 599, 602, 603, 0, 604, 605, 606, 607, 608,
	753, 609, 0, 610, 611, 618, 619, 620, 612, 613,
	614, 621, 622, 623, 624, 625, 626, 0, 628, 629,
	627, 630, 631, 632, 0, 633, 754, 634, 615, 616,
	635, 636, 0, 637, 638, 639, 640, 641, 642, 643,
	755, 0, 644, 0, 645, 646, 647, 648, 649, 650,
	652, 617, 653, 658, 659, 756, 654, 655, 656, 657,
	757, 661, 662, 663, 664, 0, 665, 666, 0, 660,
	651, 0, 667, 668, 669, 670, 671, 672, 0, 673,
	674, 0, 675, 758, 759, 760, 761, 0, 687, 0,
	676, 678, 679, 680, 681, 762, 682, 763, 0, 683,
	684, 685, 686, 677, 688, 689, 0, 0, 690, 691,
	693, 695, 696, 692, 694, 697, 0, 698, 0, 0,
	699, 700, 701, 764, 765, 766, 0, 703, 702, 704,
	705, 706, 767, 707, 708, 709, 300, 0, 0, 0,
	710, 711, 768, 712, 713, 714, 0, 0, 0, 0,
	0, 0, 0, 306, 307, 309, 308, 310, 311, 312,
	313, 0, 314, 315, 0, 0, 0, 0, 0, 715,
	0, 0, 0, 316, 0, 317, 318, 319, 0, 320,
	321, 322, 323, 324, 325, 326, 716, 717, 0, 327,
	718, 328, 719, 0, 720, 329, 330, 331, 332, 333,
	334, 335, 0, 0, 0, 336, 721, 722, 723, 0,
	337, 338, 724, 0, 0, 0, 339, 340, 341, 342,
	343, 344, 345, 346, 0, 0, 348, 349, 350, 347,
	351, 0, 352, 0, 353, 354, 355, 356, 357, 358,
	359, 0, 360, 361, 362, 0, 363, 364, 365, 0,
	0, 0, 0, 0, 0, 0, 366, 367, 368, 369,
	370, 0, 371, 373, 725, 726, 0, 376, 378, 372,
	374, 0, 377, 375, 379, 0, 380, 381, 382, 0,
	0, 383, 384, 385, 0, 386, 387, 388, 0, 389,
	390, 391, 0, 392, 393, 727, 394, 395, 396, 398,
	400, 397, 399, 401, 402, 403, 404, 405, 728, 729,
	406, 0, 0, 0, 0, 0, 0, 0, 407, 408,
	409, 730, 0, 0, 0, 410, 0, 411, 412, 413,
	0, 414, 415, 0, 0, 416, 417, 418, 731, 732,
	419, 420, 421, 422, 423, 424, 425, 426, 427, 0,
	428, 733, 0, 734, 429, 0, 430, 431, 432, 433,
	434, 435, 436, 735, 736, 737, 529, 0, 437, 438,
	439, 0, 440, 441, 442, 443, 444, 0, 0, 0,
	0, 445, 446, 447, 0, 0, 738, 448, 530, 449,
	739, 740, 0, 741, 0, 450, 451, 453, 0, 742,
	0, 452, 454, 455, 0, 456, 0, 0, 0, 457,
	458, 459, 460, 461, 462, 0, 463, 465, 464, 0,
	467, 743, 466, 0, 468, 469, 0, 0, 470, 471,
	472, 473, 474, 475, 478, 0, 0, 476, 477, 479,
	480, 0, 481, 482, 484, 487, 483, 485, 486, 488,
	501, 502, 489, 490, 491, 492, 493, 494, 495, 496,
	497, 498, 499, 500, 504, 0, 503, 0, 505, 506,
	507, 508, 509, 516, 518, 519, 514, 515, 517, 520,
	521, 523, 511, 512, 513, 0, 522, 510, 0, 0,
	0, 524, 525, 526, 527, 0, 744, 528, 745, 531,
	532, 0, 0, 533, 0, 534, 0, 0, 536, 537,
	538, 0, 0, 539, 540, 746, 0, 541, 0, 747,
	542, 543, 535, 544, 545, 546, 547, 548, 549, 550,
	551, 552, 553, 0, 554, 555, 748, 556, 557, 558,
	749, 559, 560, 561, 750, 562, 751, 563, 564, 5051,
	565, 566, 567, 0, 568, 569, 570, 571, 572, 573,
	574, 575, 752, 576, 577, 579, 578, 580, 0, 581,
	0, 582, 583, 584, 0, 0, 0, 0, 0, 585,
	586, 588, 0, 589, 590, 591, 592, 587, 593, 594,
	595, 596, 597, 598, 0, 600, 601, 599, 602, 603,
	0, 604, 605, 606, 607, 608, 753, 609, 0, 610,
	611, 618, 619, 620, 612, 613, 614, 621, 622, 623,
	624, 625, 626, 0, 628, 629, 627, 630, 631, 632,
	0, 633, 754, 634, 615, 616, 635, 636, 0, 637,
	638, 639, 640, 641, 642, 643, 755, 0, 644, 0,
	645, 646, 647, 648, 649, 650, 652, 617, 653, 658,
	659, 756, 654, 655, 656, 657, 757, 661, 662, 663,
	664, 0, 665, 666, 0, 660, 651, 0, 667, 668,
	669, 670, 671, 672, 0, 673, 674, 0, 675, 758,
	759, 760, 761, 0, 687, 0, 676, 678, 679, 680,
	681, 762, 682, 763, 0, 683, 684, 685, 686, 677,
	688, 689, 0, 0, 690, 691, 693, 695, 696, 692,
	694, 697, 0, 698, 0, 0, 699, 700, 701, 764,
	765, 766, 0, 703, 702, 704, 705, 706, 767, 707,
	708, 709, 300, 3785, 0, 0, 710, 711, 768, 712,
	713, 714, 0, 0, 0, 0, 0, 0, 0, 306,
	307, 309, 308, 310, 311, 312, 313, 0, 314, 315,
	0, 0, 0, 0, 0, 715, 0, 0, 0, 316,
	0, 317, 318, 319, 0, 320, 321, 322, 323, 324,
	325, 326, 716, 717, 0, 327, 718, 328, 719, 0,
	720, 329, 330, 331, 332, 333, 334, 335, 0, 0,
	0, 336, 721, 722, 723, 0, 337, 338, 724, 0,
	0, 0, 339, 340, 341, 342, 343, 344, 345, 346,
	0, 0, 348, 349, 350, 347, 351, 0, 352, 0,
	353, 354, 355, 356, 357, 358, 359, 0, 360, 361,
	362, 0, 363, 364, 365, 0, 0, 0, 0, 0,
	0, 0, 366, 367, 368, 369, 370, 0, 371, 373,
	725, 726, 0, 376, 378, 372, 374, 0, 377, 375,
	379, 0, 380, 381, 382, 0, 0, 383, 384, 385,
	0, 386, 387, 388, 0, 389, 390, 391, 0, 392,
	393, 727, 394, 395, 396, 398, 400, 397, 399, 401,
	402, 403, 404, 405, 728, 729, 406, 0, 0, 0,
	0, 0, 0, 0, 407, 408, 409, 730, 0, 0,
	0, 410, 0, 411, 412, 413, 0, 414, 415, 0,
	0, 416, 417, 418, 731, 732, 419, 420, 421, 422,
	423, 424, 425, 426, 427, 0, 428, 733, 0, 734,
	429, 0, 430, 431, 432, 433, 434, 435, 436, 735,
	736, 737, 529, 0, 437, 438, 439, 0, 440, 441,
	442, 443, 444, 0, 0, 0, 0, 445, 446, 447,
	0, 0, 738, 448, 530, 449, 739, 740, 0, 741,
	0, 450, 451, 453, 0, 742, 0, 452, 454, 455,
	0, 456, 0, 0, 0, 457, 458, 459, 460, 461,
	462, 0, 463, 465, 464, 0, 467, 743, 466, 0,
	468, 469, 0, 0, 470, 471, 472, 473, 474, 475,
	478, 0, 0, 476, 477, 479, 480, 0, 481, 482,
	484, 487, 483, 485, 486, 488, 501, 502, 489, 490,
	491, 492, 493, 494, 495, 496, 497, 498, 499, 500,
	504, 0, 503, 0, 505, 506, 507, 508, 509, 516,
	518, 519, 514, 515, 517, 520, 521, 523, 511, 512,
	513, 0, 522, 510, 0, 0, 0, 524, 525, 526,
	527, 0, 744, 528, 745, 531, 532, 0, 0, 533,
	0, 534, 0, 0, 536, 537, 538, 0, 0, 539,
	540, 746, 0, 541, 0, 747, 542, 543, 535, 544,
	545, 546, 547, 548, 549, 550, 551, 552, 553, 0,
	554, 555, 748, 556, 557, 558, 749, 559, 560, 561,
	750, 562, 751, 563, 564, 0, 565, 566, 567, 0,
	568, 569, 570, 571, 572, 573, 574, 575, 752, 576,
	577, 579, 578, 580, 0, 581, 0, 582, 583, 584,
	0, 0, 0, 0, 0, 585, 586, 588, 0, 589,
	590, 591, 592, 587, 593, 594, 595, 596, 597, 598,
	0, 600, 601, 599, 602, 603, 0, 604, 605, 606,
	607, 608, 753, 609, 0, 610, 611, 618, 619, 620,
	612, 613, 614, 621, 622, 623, 624, 625, 626, 0,
	628, 629, 627, 630, 631, 632, 0, 633, 754, 634,
	615, 616, 635, 636, 0, 637, 638, 639, 640, 641,
	642, 643, 755, 0, 644, 0, 645, 646, 647, 648,
	649, 650, 652, 617, 653, 658, 659, 756, 654, 655,
	656, 657, 757, 661, 662, 663, 664, 0, 665, 666,
	0, 660, 651, 0, 667, 668, 669, 670, 671, 672,
	0, 673, 674, 0, 675, 758, 759, 760, 761, 0,
	687, 0, 676, 678, 679, 680, 681, 762, 682, 763,
	0, 683, 684, 685, 686, 677, 688, 689, 0, 0,
	690, 691, 693, 695, 696, 692, 694, 697, 0, 698,
	0, 0, 699, 700, 701, 764, 765, 766, 0, 703,
	702, 704, 705, 706, 767, 707, 708, 709, 300, 0,
	0, 0, 710, 711, 768, 712, 713, 714, 0, 0,
	0, 0, 0, 0, 0, 306, 307, 309, 308, 310,
	311, 312, 313, 0, 314, 315, 0, 0, 0, 0,
	0, 715, 0, 0, 0, 316, 0, 317, 318, 319,
	0, 320, 321, 322, 323, 324, 325, 326, 716, 717,
	0, 327, 718, 328, 719, 0, 720, 329, 330, 331,
	332, 333, 334, 335, 0, 0, 0, 336, 721, 722,
	723, 0, 337, 338, 724, 0, 0, 0, 339, 340,
	341, 342, 343, 344, 345, 346, 0, 0, 348, 349,
	350, 347, 351, 0, 352, 0, 353, 354, 355, 356,
	357, 358, 359, 0, 360, 361, 362, 0, 363, 364,
	365, 0, 0, 0, 0, 0, 0, 0, 366, 367,
	368, 369, 370, 0, 371, 373, 725, 726, 0, 376,
	378, 372, 374, 0, 377, 375, 379, 0, 380, 381,
	382, 0, 0, 383, 384, 385, 0, 386, 387, 388,
	0, 389, 390, 391, 0, 392, 393, 727, 394, 395,
	396, 398, 400, 397, 399, 401, 402, 403, 404, 405,
	728, 729, 406, 0, 0, 0, 0, 0, 0, 0,
	407, 408, 409, 730, 0, 0, 0, 410, 0, 411,
	412, 413, 0, 414, 415, 0, 0, 416, 417, 418,
	731, 732, 419, 420, 421, 422, 423, 424, 425, 426,
	427, 0, 428, 733, 0, 734, 429, 0, 430, 431,
	432, 433, 434, 435, 436, 735, 736, 737, 529, 0,
	437, 438, 439, 0, 440, 441, 442, 443, 444, 0,
	0, 0, 0, 445, 446, 447, 0, 0, 738, 448,
	530, 449, 739, 740, 0, 741, 0, 450, 451, 453,
	0, 742, 0, 452, 454, 455, 0, 456, 0, 0,
	0, 457, 458, 459, 460, 461, 462, 0, 463, 465,
	464, 0, 467, 743, 466, 0, 468, 469, 0, 0,
	470, 471, 472, 473, 474, 475, 478, 0, 0, 476,
	477, 479, 480, 0, 481, 482, 484, 487, 483, 485,
	486, 488, 501, 502, 489, 490, 491, 492, 493, 494,
	495, 496, 497, 498, 499, 500, 504, 0, 503, 0,
	505, 506, 507, 508, 509, 516, 518, 519, 514, 515,
	517, 520, 521, 523, 511, 512, 513, 0, 522, 510,
	0, 0, 0, 524, 525, 526, 527, 0, 744, 528,
	745, 531, 532, 0, 0, 533, 0, 534, 0, 0,
	536, 537, 538, 0, 0, 539, 540, 746, 0, 541,
	0, 747, 542, 543, 535, 544, 545, 546, 547, 548,
	549, 550, 551, 552, 553, 0, 554, 555, 748, 556,
	557, 558, 749, 559, 560, 561, 750, 562, 751, 563,
	564, 4619, 565, 566, 567, 0, 568, 569, 570, 571,
	572, 573, 574, 575, 752, 576, 577, 579, 578, 580,
	0, 581, 0, 582, 583, 584, 0, 0, 0, 0,
	0, 585, 586, 588, 0, 589, 590, 591, 592, 587,
	593, 594, 595, 596, 597, 598, 0, 600, 601, 599,
	602, 603, 0, 604, 605, 606, 607, 608, 753, 609,
	0, 610, 611, 618, 619, 620, 612, 613, 614, 621,
	622, 623, 624, 625, 626, 0, 628, 629, 627, 630,
	631, 632, 0, 633, 754, 634, 615, 616, 635, 636,
	0, 637, 638, 639, 640, 641, 642, 643, 755, 0,
	644, 0, 645, 646, 647, 648, 649, 650, 652, 617,
	653, 658, 659, 756, 654, 655, 656, 657, 757, 661,
	662, 663, 664, 0, 665, 666, 0, 660, 651, 0,
	667, 668, 669, 670, 671, 672, 0, 673, 674, 0,
	675, 758, 759, 760, 761, 0, 687, 0, 676, 678,
	679, 680, 681, 762, 682, 763, 0, 683, 684, 685,
	686, 677, 688, 689, 0, 0, 690, 691, 693, 695,
	696, 692, 694, 697, 0, 698, 0, 0, 699, 700,
	701, 764, 765, 766, 0, 703, 702, 704, 705, 706,
	767, 707, 708, 709, 300, 0, 0, 0, 710, 711,
	768, 712, 713, 714, 0, 0, 0, 0, 0, 0,
	0, 306, 307, 309, 308, 310, 311, 312, 313, 0,
	314, 315, 0, 0, 0, 0, 0, 715, 0, 0,
	0, 316, 0, 317, 318, 319, 0, 320, 321, 322,
	323, 324, 325, 326, 716, 717, 0, 327, 718, 328,
	719, 0, 720, 329, 330, 331, 332, 333, 334, 335,
	0, 0, 0, 336, 721, 722, 723, 0, 337, 338,
	724, 0, 0, 0, 339, 340, 341, 342, 343, 344,
	345, 346, 0, 0, 348, 349, 350, 347, 351, 0,
	352, 0, 353, 354, 355, 356, 357, 358, 359, 0,
	360, 361, 362, 0, 363, 364, 365, 0, 0, 0,
	0, 0, 0, 0, 366, 367, 368, 369, 370, 0,
	371, 373, 725, 726, 4328, 376, 378, 372, 374, 0,
	377, 375, 379, 0, 380, 381, 382, 0, 0, 383,
	384, 385, 0, 386, 387, 388, 0, 389, 390, 391,
	0, 392, 393, 727, 394, 395, 396, 398, 400, 397,
	399, 401, 402, 403, 404, 405, 728, 729, 406, 0,
	0, 0, 0, 0, 0, 0, 407, 408, 409, 730,
	0, 0, 0, 410, 0, 411, 412, 413, 0, 414,
	415, 0, 0, 416, 417, 418, 731, 732, 419, 420,
	421, 422, 423, 424, 425, 426, 427, 0, 428, 733,
	0, 734, 429, 0, 430, 431, 432, 433, 434, 435,
	436, 735, 736, 737, 529, 0, 437, 438, 439, 0,
	440, 441, 442, 443, 444, 0, 0, 0, 0, 445,
	446, 447, 0, 0, 738, 448, 530, 449, 739, 740,
	0, 741, 0, 450, 451, 453, 0, 742, 0, 452,
	454, 455, 0, 456, 0, 0, 0, 457, 458, 459,
	460, 461, 462, 0, 463, 465, 464, 0, 467, 743,
	466, 0, 468, 469, 0, 0, 470, 471, 472, 473,
	474, 475, 478, 0, 0, 476, 477, 479, 480, 0,
	481, 482, 484, 487, 483, 485, 486, 488, 501, 502,
	489, 490, 491, 492, 493, 494, 495, 496, 497, 498,
	499, 500, 504, 0, 503, 0, 505, 506, 507, 508,
	509, 516, 518, 519, 514, 515, 517, 520, 521, 523,
	511, 512, 513, 0, 522, 510, 0, 0, 0, 524,
	525, 526, 527, 0, 744, 528, 745, 531, 532, 0,
	0, 533, 0, 534, 0, 0, 536, 537, 538, 0,
	0, 539, 540, 746, 0, 541, 0, 747, 542, 543,
	535, 544, 545, 546, 547, 548, 549, 550, 551, 552,
	553, 0, 554, 555, 748, 556, 557, 558, 749, 559,
	560, 561, 750, 562, 751, 563, 564, 0, 565, 566,
	567, 0, 568, 569, 570, 571, 572, 573, 574, 575,
	752, 576, 577, 579, 578, 580, 0, 581, 0, 582,
	583, 584, 0, 0, 0, 0, 0, 585, 586, 588,
	0, 589, 590, 591, 592, 587, 593, 594, 595, 596,
	597, 598, 0, 600, 601, 599, 602, 603, 0, 604,
	605, 606, 607, 608, 753, 609, 0, 610, 611, 618,
	619, 620, 612, 613, 614, 621, 622, 623, 624, 625,
	626, 0, 628, 629, 627, 630, 631, 632, 0, 633,
	754, 634, 615, 616, 635, 636, 0, 637, 638, 639,
	640, 641, 642, 643, 755, 0, 644, 0, 645, 646,
	647, 648, 649, 650, 652, 617, 653, 658, 659, 756,
	654, 655, 656, 657, 757, 661, 662, 663, 664, 0,
	665, 666, 0, 660, 651, 0, 667, 668, 669, 670,
	671, 672, 0, 673, 674, 0, 675, 758, 759, 760,
	761, 0, 687, 0, 676, 678, 679, 680, 681, 762,
	682, 763, 0, 683, 684, 685, 686, 677, 688, 689,
	0, 0, 690, 691, 693, 695, 696, 692, 694, 697,
	0, 698, 0, 0, 699, 700, 701, 764, 765, 766,
	0, 703, 702, 704, 705, 706, 767, 707, 708, 709,
	300, 0, 0, 0, 710, 711, 768, 712, 713, 714,
	0, 0, 0, 0, 0, 0, 0, 306, 307, 309,
	308, 310, 311, 312, 313, 0, 314, 315, 0, 0,
	0, 0, 0, 715, 0, 3045, 0, 316, 0, 317,
	318, 319, 0, 320, 321, 322, 323, 324, 325, 326,
	716, 717, 0, 327, 718, 328, 719, 0, 720, 329,
	330, 331, 332, 333, 334, 335, 0, 0, 0, 336,
	721, 722, 723, 0, 337, 338, 724, 0, 0, 0,
	339, 340, 341, 342, 343, 344, 345, 346, 0, 0,
	348, 349, 350, 347, 351, 0, 352, 0, 353, 354,
	355, 356, 357, 358, 359, 0, 360, 361, 362, 0,
	363, 364, 365, 0, 0, 0, 0, 0, 0, 0,
	366, 367, 368, 369, 370, 0, 371, 373, 725, 726,
	0, 376, 378, 372, 374, 0, 377, 375, 379, 0,
	380, 381, 382, 0, 0, 383, 384, 385, 0, 386,
	387, 388, 0, 389, 390, 391, 0, 392, 393, 727,
	394, 395, 396, 398, 400, 397, 399, 401, 402, 403,
	404, 405, 728, 729, 406, 0, 0, 0, 0, 0,
	0, 0, 407, 408, 409, 730, 0, 0, 0, 410,
	0, 411, 412, 413, 0, 414, 415, 0, 0, 416,
	417, 418, 731, 732, 419, 420, 421, 422, 423, 424,
	425, 426, 427, 0, 428, 733, 0, 734, 429, 0,
	430, 431, 432, 433, 434, 435, 436, 735, 736, 737,
	529, 0, 437, 438, 439, 0, 440, 441, 442, 443,
	444, 0, 0, 0, 0, 445, 446, 447, 0, 0,
	738, 448, 530, 449, 739, 740, 0, 741, 0, 450,
	451, 453, 0, 742, 0, 452, 454, 455, 0, 456,
	0, 0, 0, 457, 458, 459, 460, 461, 462, 0,
	463, 465, 464, 0, 467, 743, 466, 0, 468, 469,
	0, 0, 470, 471, 472, 473, 474, 475, 478, 0,
	0, 476, 477, 479, 480, 0, 481, 482, 484, 487,
	483, 485, 486, 488, 501, 502, 489, 490, 491, 492,
	493, 494, 495, 496, 497, 498, 499, 500, 504, 0,
	503, 0, 505, 506, 507, 508, 509, 516, 518, 519,
	514, 515, 517, 520, 521, 523, 511, 512, 513, 0,
	522, 510, 0, 0, 0, 524, 525, 526, 527, 0,
	744, 528, 745, 531, 532, 0, 0, 533, 0, 534,
	0, 0, 536, 537, 538, 0, 0, 539, 540, 746,
	0, 541, 0, 747, 542, 543, 535, 544, 545, 546,
	547, 548, 549, 550, 551, 552, 553, 0, 554, 555,
	748, 556, 557, 558, 749, 559, 560, 561, 750, 562,
	751, 563, 564, 0, 565, 566, 567, 0, 568, 569,
	570, 571, 572, 573, 574, 575, 752, 576, 577, 579,
	578, 580, 0, 581, 0, 582, 583, 584, 0, 0,
	0, 0, 0, 585, 586, 588, 0, 589, 590, 591,
	592, 587, 593, 594, 595, 596, 597, 598, 0, 600,
	601, 599, 602, 603, 0, 604, 605, 606, 607, 608,
	753, 609, 0, 610, 611, 618, 619, 620, 612, 613,
	614, 621, 622, 623, 624, 625, 626, 0, 628, 629,
	627, 630, 631, 632, 0, 633, 754, 634, 615, 616,
	635, 636, 0, 637, 638, 639, 640, 641, 642, 643,
	755, 0, 644, 0, 645, 646, 647, 648, 649, 650,
	652, 617, 653, 658, 659, 756, 654, 655, 656, 657,
	757, 661, 662, 663, 664, 0, 665, 666, 0, 660,
	651, 0, 667, 668, 669, 670, 671, 672, 0, 673,
	674, 0, 675, 758, 759, 760, 761, 0, 687, 0,
	676, 678, 679, 680, 681, 762, 682, 763, 0, 683,
	684, 685, 686, 677, 688, 689, 0, 0, 690, 691,
	693, 695, 696, 692, 694, 697, 0, 698, 0, 0,
	699, 700, 701, 764, 765, 766, 0, 703, 702, 704,
	705, 706, 767, 707, 708, 709, 300, 3278, 0, 0,
	710, 711, 768, 712, 713, 714, 0, 0, 0, 0,
	0, 0, 0, 306, 307, 309, 308, 310, 311, 312,
	313, 0, 314, 315, 0, 0, 0, 0, 0, 715,
	0, 0, 0, 316, 0, 317, 318, 319, 0, 320,
	321, 322, 323, 324, 325, 326, 716, 717, 0, 327,
	718, 328, 719, 0, 720, 329, 330, 331, 332, 333,
	334, 335, 0, 0, 0, 336, 721, 722, 723, 0,
	337, 338, 724, 0, 0, 0, 339, 340, 341, 342,
	343, 344, 345, 346, 0, 0, 348, 349, 350, 347,
	351, 0, 352, 0, 353, 354, 355, 356, 357, 358,
	359, 0, 360, 361, 362, 0, 363, 364, 365, 0,
	0, 0, 0, 0, 0, 0, 366, 367, 368, 369,
	370, 0, 371, 373, 725, 726, 0, 376, 378, 372,
	374, 0, 377, 375, 379, 0, 380, 381, 382, 0,
	0, 383, 384, 385, 0, 386, 387, 388, 0, 389,
	390, 391, 0, 392, 393, 727, 394, 395, 396, 398,
	400, 397, 399, 401, 402, 403, 404, 405, 728, 729,
	406, 0, 0, 0, 0, 0, 0, 0, 407, 408,
	409, 730, 0, 0, 0, 410, 0, 411, 412, 413,
	0, 414, 415, 0, 0, 416, 417, 418, 731, 732,
	419, 420, 421, 422, 423, 424, 425, 426, 427, 0,
	428, 733, 0, 734, 429, 0, 430, 431, 432, 433,
	434, 435, 436, 735, 736, 737, 529, 0, 437, 438,
	439, 0, 440, 441, 442, 443, 444, 0, 0, 0,
	0, 445, 446, 447, 0, 0, 738, 448, 530, 449,
	739, 740, 0, 741, 0, 450, 451, 453, 0, 742,
	0, 452, 454, 455, 0, 456, 0, 0, 0, 457,
	458, 459, 460, 461, 462, 0, 463, 465, 464, 0,
	467, 743, 466, 0, 468, 469, 0, 0, 470, 471,
	472, 473, 474, 475, 478, 0, 0, 476, 477, 479,
	480, 0, 481, 482, 484, 487, 483, 485, 486, 488,
	501, 502, 489, 490, 491, 492, 493, 494, 495, 496,
	497, 498, 499, 500, 504, 0, 503, 0, 505, 506,
	507, 508, 509, 516, 518, 519, 514, 515, 517, 520,
	521, 523, 511, 512, 513, 0, 522, 510, 0, 0,
	0, 524, 525, 526, 527, 0, 744, 528, 745, 531,
	532, 0, 0, 533, 0, 534, 0, 0, 536, 537,
	3362, 0, 0, 539, 540, 746, 0, 541, 0, 747,
	542, 543, 535, 544, 545, 546, 547, 548, 549, 550,
	551, 552, 553, 0, 554, 555, 748, 556, 557, 558,
	749, 559, 560, 561, 750, 562, 751, 563, 564, 0,
	565, 566, 567, 0, 568, 569, 570, 571, 572, 573,
	574, 575, 752, 576, 577, 579, 578, 580, 0, 581,
	0, 582, 583, 584, 0, 0, 0, 0, 0, 585,
	586, 588, 0, 589, 590, 591, 592, 587, 593, 594,
	595, 596, 597, 598, 0, 600, 601, 599, 602, 603,
	0, 604, 605, 606, 607, 608, 753, 609, 0, 610,
	611, 618, 619, 620, 612, 613, 614, 621, 622, 623,
	624, 625, 626, 0, 628, 629, 627, 630, 631, 632,
	0, 633, 754, 634, 615, 616, 635, 636, 0, 637,
	638, 639, 640, 641, 642, 643, 755, 0, 644, 0,
	645, 646, 647, 648, 649, 650, 652, 617, 653, 658,
	659, 756, 654, 655, 656, 657, 757, 661, 662, 663,
	664, 0, 665, 666, 0, 660, 651, 0, 667, 668,
	669, 670, 671, 672, 0, 673, 674, 0, 675, 758,
	759, 760, 761, 0, 687, 0, 676, 678, 679, 680,
	681, 762, 682, 763, 0, 683, 684, 685, 686, 677,
	688, 689, 0, 0, 690, 691, 693, 695, 696, 692,
	694, 697, 0, 698, 0, 0, 699, 700, 701, 764,
	765, 766, 0, 703, 702, 704, 705, 706, 767, 707,
	708, 709, 300, 0, 0, 0, 710, 711, 768, 712,
	713, 714, 0, 0, 0, 0, 0, 0, 0, 306,
	307, 309, 308, 310, 311, 312, 313, 0, 314, 315,
	0, 0, 0, 0, 0, 715, 0, 0, 0, 316,
	0, 317, 318, 319, 0, 320, 321, 322, 323, 324,
	325, 326, 716, 717, 0, 327, 718, 328, 719, 0,
	720, 329, 330, 331, 332, 333, 334, 335, 0, 0,
	0, 336, 721, 722, 723, 0, 337, 338, 724, 0,
	0, 0, 339, 340, 341, 342, 343, 344, 345, 346,
	0, 0, 348, 349, 350, 347, 351, 0, 352, 0,
	353, 354, 355, 356, 357, 358, 359, 0, 360, 361,
	362, 0, 363, 364, 365, 0, 0, 0, 0, 0,
	0, 0, 366, 367, 368, 369, 370, 0, 371, 373,
	725, 726, 0, 376, 378, 372, 374, 0, 377, 375,
	379, 0, 380, 381, 382, 0, 0, 383, 384, 385,
	0, 386, 387, 388, 0, 389, 390, 391, 0, 392,
	393, 727, 394, 395, 396, 398, 400, 397, 399, 401,
	402, 403, 404, 405, 728, 729, 406, 0, 0, 0,
	0, 0, 0, 0, 407, 408, 409, 730, 0, 0,
	0, 410, 0, 411, 412, 413, 0, 414, 415, 0,
	0, 416, 417, 418, 731, 732, 419, 420, 421, 422,
	423, 424, 425, 426, 427, 0, 428, 733, 0, 734,
	429, 0, 430, 431, 432, 433, 434, 435, 436, 735,
	736, 737, 529, 0, 437, 438, 439, 0, 440, 441,
	442, 443, 444, 0, 0, 0, 0, 445, 446, 447,
	0, 0, 738, 448, 530, 449, 739, 740, 0, 741,
	0, 450, 451, 453, 0, 742, 0, 452, 454, 455,
	0, 456, 0, 0, 0, 457, 458, 459, 460, 461,
	462, 0, 463, 465, 464, 0, 467, 743, 466, 0,
	468, 469, 0, 0, 470, 471, 472, 473, 474, 475,
	478, 0, 0, 476, 477, 479, 480, 0, 481, 482,
	484, 487, 483, 485, 486, 488, 501, 502, 489, 490,
	491, 492, 493, 494, 495, 496, 497, 498, 499, 500,
	504, 0, 503, 0, 505, 506, 507, 508, 509, 516,
	518, 519, 514, 515, 517, 520, 521, 523, 511, 512,
	513, 0, 522, 510, 0, 0, 0, 524, 525, 526,
	527, 0, 744, 528, 745, 531, 532, 0, 0, 533,
	0, 534, 0, 0, 536, 537, 538, 0, 0, 539,
	540, 746, 0, 541, 0, 747, 542, 543, 535, 544,
	545, 546, 547, 548, 549, 550, 551, 552, 553, 0,
	554, 555, 748, 556, 557, 558, 749, 559, 560, 561,
	750, 562, 751, 563, 564, 2414, 565, 566, 567, 0,
	568, 569, 570, 571, 572, 573, 574, 575, 752, 576,
	577, 579, 578, 580, 0, 581, 0, 582, 583, 584,
	0, 0, 0, 0, 0, 585, 586, 588, 0, 589,
	590, 591, 592, 587, 593, 594, 595, 596, 597, 598,
	0, 600, 601, 599, 602, 603, 0, 863, 605, 606,
	607, 608, 753, 609, 0, 610, 611, 618, 619, 620,
	612, 613, 614, 862, 622, 623, 624, 625, 626, 0,
	628, 629, 627, 630, 631, 632, 0, 633, 754, 634,
	615, 616, 635, 636, 0, 637, 638, 639, 640, 641,
	642, 643, 755, 0, 644, 0, 645, 646, 647, 648,
	649, 650, 652, 617, 653, 658, 659, 756, 654, 655,
	656, 657, 757, 661, 662, 663, 664, 0, 665, 666,
	0, 660, 651, 0, 667, 668, 669, 670, 671, 672,
	0, 673, 674, 0, 675, 860, 759, 760, 761, 0,
	687, 0, 676, 678, 679, 680, 681, 762, 682, 763,
	0, 683, 684, 685, 686, 677, 688, 689, 0, 0,
	690, 691, 693, 695, 696, 692, 694, 697, 0, 698,
	0, 0, 699, 700, 701, 764, 765, 766, 0, 703,
	702, 704, 705, 706, 767, 707, 708, 709, 300, 0,
	0, 0, 710, 711, 768, 712, 713, 714, 0, 0,
	0, 0, 0, 0, 0, 306, 307, 309, 308, 310,
	311, 312, 313, 2591, 314, 315, 0, 0, 0, 0,
	0, 715, 0, 0, 0, 316, 0, 317, 318, 319,
	0, 320, 321, 322, 323, 324, 325, 326, 716, 717,
	0, 327, 718, 328, 719, 0, 720, 329, 330, 331,
	332, 333, 334, 335, 0, 0, 0, 336, 721, 722,
	723, 0, 337, 338, 724, 0, 0, 0, 339, 340,
	341, 342, 343, 344, 345, 346, 0, 0, 348, 349,
	350, 347, 351, 0, 352, 0, 353, 354, 355, 356,
	357, 358, 359, 0, 360, 361, 362, 0, 363, 364,
	365, 0, 0, 0, 0, 0, 0, 0, 366, 367,
	368, 369, 370, 0, 371, 373, 725, 726, 0, 376,
	378, 372, 374, 0, 377, 375, 379, 0, 380, 381,
	382, 0, 0, 383, 384, 385, 0, 386, 387, 388,
	0, 389, 390, 391, 0, 392, 393, 727, 394, 395,
	396, 398, 400, 397, 399, 401, 402, 403, 404, 405,
	728, 729, 406, 0, 0, 0, 0, 0, 0, 0,
	407, 408, 409, 730, 0, 0, 0, 410, 0, 411,
	412, 413, 0, 414, 415, 0, 0, 416, 417, 418,
	731, 732, 419, 420, 421, 422, 423, 424, 425, 426,
	427, 0, 428, 733, 0, 734, 429, 0, 430, 431,
	432, 433, 434, 435, 436, 735, 736, 737, 529, 0,
	437, 438, 439, 0, 440, 441, 442, 443, 444, 0,
	0, 0, 0, 445, 446, 447, 0, 0, 738, 448,
	530, 449, 739, 740, 0, 741, 0, 450, 451, 453,
	0, 742, 0, 452, 454, 455, 0, 456, 0, 0,
	0, 457, 458, 459, 460, 461, 462, 0, 463, 465,
	464, 0, 467, 743, 466, 0, 468, 469, 0, 0,
	470, 471, 472, 473, 474, 475, 478, 0, 0, 476,
	477, 479, 480, 0, 481, 482, 484, 487, 483, 485,
	486, 488, 501, 502, 489, 490, 491, 492, 493, 494,
	495, 496, 497, 498, 499, 500, 504, 0, 503, 0,
	505, 506, 507, 508, 509, 516, 518, 519, 514, 515,
	517, 520, 521, 523, 511, 512, 513, 0, 522, 510,
	0, 0, 0, 524, 525, 526, 527, 0, 744, 528,
	745, 531, 532, 0, 0, 533, 0, 534, 0, 0,
	536, 537, 538, 0, 0, 539, 540, 746, 0, 541,
	0, 747, 542, 543, 535, 544, 545, 546, 547, 548,
	549, 550, 551, 552, 553, 0, 554, 555, 748, 556,
	557, 558, 749, 559, 560, 561, 750, 562, 751, 563,
	564, 0, 565, 566, 567, 0, 568, 569, 570, 571,
	572, 573, 574, 575, 752, 576, 577, 579, 578, 580,
	0, 581, 0, 582, 583, 584, 0, 0, 0, 0,
	0, 585, 586, 588, 0, 589, 590, 591, 592, 587,
	593, 594, 595, 596, 597, 598, 0, 600, 601, 599,
	602, 603, 0, 604, 605, 606, 607, 608, 753, 609,
	0, 610, 611, 618, 619, 620, 612, 613, 614, 621,
	622, 623, 624, 625, 626, 0, 628, 629, 627, 630,
	631, 632, 0, 633, 754, 634, 615, 616, 635, 636,
	0, 637, 638, 639, 640, 641, 642, 643, 755, 0,
	644, 0, 645, 646, 647, 648, 649, 650, 652, 617,
	653, 658, 659, 756, 654, 655, 656, 657, 757, 661,
	662, 663, 664, 0, 665, 666, 0, 660, 651, 0,
	667, 668, 669, 670, 671, 672, 0, 673, 674, 0,
	675, 758, 759, 760, 761, 0, 687, 0, 676, 678,
	679, 680, 681, 762, 682, 763, 0, 683, 684, 685,
	686, 677, 688, 689, 0, 0, 690, 691, 693, 695,
	696, 692, 694, 697, 0, 698, 0, 0, 699, 700,
	701, 764, 765, 766, 0, 703, 702, 704, 705, 706,
	767, 707, 708, 709, 2578, 0, 300, 0, 710, 711,
	768, 712, 713, 714, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 306, 307, 309, 308, 310, 311, 312,
	313, 0, 314, 315, 0, 0, 0, 0, 0, 715,
	0, 0, 0, 316, 0, 317, 318, 319, 0, 320,
	321, 322, 323, 324, 325, 326, 716, 717, 0, 327,
	718, 328, 719, 0, 720, 329, 330, 331, 332, 333,
	334, 335, 0, 0, 0, 336, 721, 722, 723, 0,
	337, 338, 724, 0, 0, 0, 339, 340, 341, 342,
	343, 344, 345, 346, 0, 0, 348, 349, 350, 347,
	351, 0, 352, 0, 353, 354, 355, 356, 357, 358,
	359, 0, 360, 361, 362, 0, 363, 364, 365, 0,
	0, 0, 0, 0, 0, 0, 366, 367, 368, 369,
	370, 0, 371, 373, 725, 726, 0, 376, 378, 372,
	374, 0, 377, 375, 379, 0, 380, 381, 382, 0,
	0, 383, 384, 385, 0, 386, 387, 388, 0, 389,
	390, 391, 0, 392, 393, 727, 394, 395, 396, 398,
	400, 397, 399, 401, 402, 403, 404, 405, 728, 729,
	406, 0, 0, 0, 0, 0, 0, 0, 407, 408,
	409, 730, 0, 0, 0, 410, 0, 411, 412, 413,
	0, 414, 415, 0, 0, 416, 417, 418, 731, 732,
	419, 420, 421, 422, 423, 424, 425, 426, 427, 0,
	428, 733, 0, 734, 429, 0, 430, 431, 432, 433,
	434, 435, 436, 735, 736, 737, 529, 0, 437, 438,
	439, 0, 440, 441, 442, 443, 444, 0, 0, 0,
	0, 445, 446, 447, 0, 0, 738, 448, 530, 449,
	739, 740, 0, 741, 0, 450, 451, 453, 0, 742,
	0, 452, 454, 455, 0, 456, 0, 0, 0, 457,
	458, 459, 460, 461, 462, 0, 463, 465, 464, 0,
	467, 743, 466, 0, 468, 469, 0, 0, 470, 471,
	472, 473, 474, 475, 478, 0, 0, 476, 477, 479,
	480, 0, 481, 482, 484, 487, 483, 485, 486, 488,
	501, 502, 489, 490, 491, 492, 493, 494, 495, 496,
	497, 498, 499, 500, 504, 0, 503, 0, 505, 506,
	507, 508, 509, 516, 518, 519, 514, 515, 517, 520,
	521, 523, 511, 512, 513, 0, 522, 510, 0, 0,
	0, 524, 525, 526, 527, 0, 744, 528, 745, 531,
	532, 0, 0, 533, 0, 534, 0, 0, 536, 537,
	538, 0, 0, 539, 540, 746, 0, 541, 0, 747,
	542, 543, 535, 544, 545, 546, 547, 548, 549, 550,
	551, 552, 553, 0, 554, 555, 748, 556, 557, 558,
	749, 559, 560, 561, 750, 562, 751, 563, 564, 0,
	565, 566, 567, 0, 568, 569, 570, 571, 572, 573,
	574, 575, 752, 576, 577, 579, 578, 580, 0, 581,
	0, 582, 583, 584, 0, 0, 0, 0, 0, 585,
	586, 588, 0, 589, 590, 591, 592, 587, 593, 594,
	595, 596, 597, 598, 0, 600, 601, 599, 602, 603,
	0, 604, 605, 606, 607, 608, 753, 609, 0, 610,
	611, 618, 619, 620, 612, 613, 614, 621, 622, 623,
	624, 625, 626, 0, 628, 629, 627, 630, 631, 632,
	0, 633, 754, 634, 615, 616, 635, 636, 0, 637,
	638, 639, 640, 641, 642, 643, 755, 0, 644, 0,
	645, 646, 647, 648, 649, 650, 652, 617, 653, 658,
	659, 756, 654, 655, 656, 657, 757, 661, 662, 663,
	664, 0, 665, 666, 0, 660, 651, 0, 667, 668,
	669, 670, 671, 672, 0, 673, 674, 0, 675, 758,
	759, 760, 761, 0, 687, 0, 676, 678, 679, 680,
	681, 762, 682, 763, 0, 683, 684, 685, 686, 677,
	688, 689, 0, 0, 690, 691, 693, 695, 696, 692,
	694, 697, 0, 698, 0, 0, 699, 700, 701, 764,
	765, 766, 0, 703, 702, 704, 705, 706, 767, 707,
	708, 709, 1825, 0, 300, 0, 710, 711, 768, 712,
	713, 714, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 306, 307, 309, 308, 310, 311, 312, 313, 0,
	314, 315, 0, 0, 0, 0, 0, 715, 0, 0,
	0, 316, 0, 317, 318, 319, 0, 320, 321, 322,
	323, 324, 325, 326, 716, 717, 0, 327, 718, 328,
	719, 0, 720, 329, 330, 331, 332, 333, 334, 335,
	0, 0, 0, 336, 721, 722, 723, 0, 337, 338,
	724, 0, 0, 0, 339, 340, 341, 342, 343, 344,
	345, 346, 0, 0, 348, 349, 350, 347, 351, 0,
	352, 0, 353, 354, 355, 356, 357, 358, 359, 0,
	360, 361, 362, 0, 363, 364, 365, 0, 0, 0,
	0, 0, 0, 0, 366, 367, 368, 369, 370, 0,
	371, 373, 725, 726, 0, 376, 378, 372, 374, 0,
	377, 375, 379, 0, 380, 381, 382, 0, 0, 383,
	384, 385, 0, 386, 387, 388, 0, 389, 390, 391,
	0, 392, 393, 727, 394, 395, 396, 398, 400, 397,
	399, 401, 402, 403, 404, 405, 728, 729, 406, 0,
	0, 0, 0, 0, 0, 0, 407, 408, 409, 730,
	0, 0, 0, 410, 0, 411, 412, 413, 0, 414,
	415, 0, 0, 416, 417, 418, 731, 732, 419, 420,
	421, 422, 423, 424, 425, 426, 427, 0, 428, 733,
	0, 734, 429, 0, 430, 431, 432, 433, 434, 435,
	436, 735, 736, 737, 529, 0, 437, 438, 439, 0,
	440, 441, 442, 443, 444, 0, 0, 0, 0, 445,
	446, 447, 0, 0, 738, 448, 530, 449, 739, 740,
	0, 741, 0, 450, 451, 453, 0, 742, 0, 452,
	454, 455, 0, 456, 0, 0, 0, 457, 458, 459,
	460, 461, 462, 0, 463, 465, 464, 0, 467, 743,
	466, 0, 468, 469, 0, 0, 470, 471, 472, 473,
	474, 475, 478, 0, 0, 476, 477, 479, 480, 0,
	481, 482, 484, 487, 483, 485, 486, 488, 501, 502,
	489, 490, 491, 492, 493, 494, 495, 496, 497, 498,
	499, 500, 504, 0, 503, 0, 505, 506, 507, 508,
	509, 516, 518, 519, 514, 515, 517, 520, 521, 523,
	511, 512, 513, 0, 522, 510, 0, 0, 0, 524,
	525, 526, 527, 0, 744, 528, 745, 531, 532, 0,
	0, 533, 0, 534, 0, 0, 536, 537, 538, 0,
	0, 539, 540, 746, 0, 541, 0, 747, 542, 543,
	535, 544, 545, 546, 547, 548, 549, 550, 551, 552,
	553, 0, 554, 555, 748, 556, 557, 558, 749, 559,
	560, 561, 750, 562, 751, 563, 564, 0, 565, 566,
	567, 0, 568, 569, 570, 571, 572, 573, 574, 575,
	752, 576, 577, 579, 578, 580, 0, 581, 0, 582,
	583, 584, 0, 0, 0, 0, 0, 585, 586, 588,
	0, 589, 590, 591, 592, 587, 593, 594, 595, 596,
	597, 598, 0, 600, 601, 599, 602, 603, 0, 604,
	605, 606, 607, 608, 753, 609, 0, 610, 611, 618,
	619, 620, 612, 613, 614, 621, 622, 623, 624, 625,
	626, 0, 628, 629, 627, 630, 631, 632, 0, 633,
	754, 634, 615, 616, 635, 636, 0, 637, 638, 639,
	640, 641, 642, 643, 755, 0, 644, 0, 645, 646,
	647, 648, 649, 650, 652, 617, 653, 658, 659, 756,
	654, 655, 656, 657, 757, 661, 662, 663, 664, 0,
	665, 666, 0, 660, 651, 0, 667, 668, 669, 670,
	671, 672, 0, 673, 674, 0, 675, 758, 759, 760,
	761, 0, 687, 0, 676, 678, 679, 680, 681, 762,
	682, 763, 0, 683, 684, 685, 686, 677, 688, 689,
	0, 0, 690, 691, 693, 695, 696, 692, 694, 697,
	0, 698, 0, 0, 699, 700, 701, 764, 765, 766,
	0, 703, 702, 704, 705, 706, 767, 707, 708, 709,
	1817, 0, 300, 0, 710, 711, 768, 712, 713, 714,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 306,
	307, 309, 308, 310, 311, 312, 313, 0, 314, 315,
	0, 0, 0, 0, 0, 715, 0, 0, 0, 316,
	0, 317, 318, 319, 0, 320, 321, 322, 323, 324,
	325, 326, 716, 717, 0, 327, 718, 328, 719, 0,
	720, 329, 330, 331, 332, 333, 334, 335, 0, 0,
	0, 336, 721, 722, 723, 0, 337, 338, 724, 0,
	0, 0, 339, 340, 341, 342, 343, 344, 345, 346,
	0, 0, 348, 349, 350, 347, 351, 0, 352, 0,
	353, 354, 355, 356, 357, 358, 359, 0, 360, 361,
	362, 0, 363, 364, 365, 0, 0, 0, 0, 0,
	0, 0, 366, 367, 368, 369, 370, 0, 371, 373,
	725, 726, 0, 376, 378, 372, 374, 0, 377, 375,
	379, 0, 380, 381, 382, 0, 0, 383, 384, 385,
	0, 386, 387, 388, 0, 389, 390, 391, 0, 392,
	393, 727, 394, 395, 396, 398, 400, 397, 399, 401,
	402, 403, 404, 405, 728, 729, 406, 0, 0, 0,
	0, 0, 0, 0, 407, 408, 409, 730, 0, 0,
	0, 410, 0, 411, 412, 413, 0, 414, 415, 0,
	0, 416, 417, 418, 731, 732, 419, 420, 421, 422,
	423, 424, 425, 426, 427, 0, 428, 733, 0, 734,
	429, 0, 430, 431, 432, 433, 434, 435, 436, 735,
	736, 737, 529, 0, 437, 438, 439, 0, 440, 441,
	442, 443, 444, 0, 0, 0, 0, 445, 446, 447,
	0, 0, 738, 448, 530, 449, 739, 740, 0, 741,
	0, 450, 451, 453, 0, 742, 0, 452, 454, 455,
	0, 456, 0, 0, 0, 457, 458, 459, 460, 461,
	462, 0, 463, 465, 464, 0, 467, 743, 466, 0,
	468, 469, 0, 0, 470, 471, 472, 473, 474, 475,
	478, 0, 0, 476, 477, 479, 480, 0, 481, 482,
	484, 487, 483, 485, 486, 488, 501, 502, 489, 490,
	491, 492, 493, 494, 495, 496, 497, 498, 499, 500,
	504, 0, 503, 0, 505, 506, 507, 508, 509, 516,
	518, 519, 514, 515, 517, 520, 521, 523, 511, 512,
	513, 0, 522, 510, 0, 0, 0, 524, 525, 526,
	527, 0, 744, 528, 745, 531, 532, 0, 0, 533,
	0, 534, 0, 0, 536, 537, 538, 0, 0, 539,
	540, 746, 0, 541, 0, 747, 542, 543, 535, 544,
	545, 546, 547, 548, 549, 550, 551, 552, 553, 0,
	554, 555, 748, 556, 557, 558, 749, 559, 560, 561,
	750, 562, 751, 563, 564, 0, 565, 566, 567, 0,
	568, 569, 570, 571, 572, 573, 574, 575, 752, 576,
	577, 579, 578, 580, 0, 581, 0, 582, 583, 584,
	0, 0, 0, 0, 0, 585, 586, 588, 0, 589,
	590, 591, 592, 587, 593, 594, 595, 596, 597, 598,
	0, 600, 601, 599, 602, 603, 0, 604, 605, 606,
	607, 608, 753, 609, 0, 610, 611, 618, 619, 620,
	612, 613, 614, 621, 622, 623, 624, 625, 626, 0,
	628, 629, 627, 630, 631, 632, 0, 633, 754, 634,
	615, 616, 635, 636, 0, 637, 638, 639, 640, 641,
	642, 643, 755, 0, 644, 0, 645, 646, 647, 648,
	649, 650, 652, 617, 653, 658, 659, 756, 654, 655,
	656, 657, 757, 661, 662, 663, 664, 0, 665, 666,
	0, 660, 651, 0, 667, 668, 669, 670, 671, 672,
	0, 673, 674, 0, 675, 758, 759, 760, 761, 0,
	687, 0, 676, 678, 679, 680, 681, 762, 682, 763,
	0, 683, 684, 685, 686, 677, 688, 689, 0, 0,
	690, 691, 693, 695, 696, 692, 694, 697, 0, 698,
	0, 0, 699, 700, 701, 764, 765, 766, 0, 703,
	702, 704, 705, 706, 767, 707, 708, 709, 854, 0,
	300, 0, 710, 711, 768, 712, 713, 714, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 306, 307, 309,
	308, 310, 311, 312, 313, 0, 314, 315, 0, 0,
	0, 0, 0, 715, 0, 0, 0, 316, 0, 317,
	318, 319, 0, 320, 321, 322, 323, 324, 325, 326,
	716, 717, 0, 327, 718, 328, 719, 0, 720, 329,
	330, 331, 332, 333, 334, 335, 0, 0, 0, 336,
	721, 722, 723, 0, 337, 850, 724, 0, 0, 0,
	339, 340, 341, 342, 343, 344, 345, 346, 0, 0,
	348, 349, 350, 347, 351, 0, 352, 0, 353, 354,
	355, 356, 357, 358, 359, 0, 360, 361, 362, 0,
	363, 364, 365, 0, 0, 0, 0, 0, 0, 0,
	366, 367, 368, 369, 370, 0, 371, 373, 725, 726,
	0, 376, 378, 372, 374, 0, 377, 375, 379, 0,
	380, 381, 382, 0, 0, 383, 384, 385, 0, 386,
	387, 388, 0, 389, 390, 391, 0, 392, 393, 727,
	394, 395, 396, 398, 400, 397, 399, 401, 402, 403,
	404, 405, 728, 729, 406, 0, 0, 0, 0, 0,
	0, 0, 407, 408, 409, 730, 0, 0, 0, 410,
	0, 411, 412, 413, 0, 414, 415, 0, 0, 416,
	417, 418, 731, 732, 419, 420, 421, 422, 423, 424,
	425, 426, 427, 0, 428, 733, 0, 734, 429, 0,
	430, 431, 432, 433, 434, 435, 436, 735, 736, 737,
	529, 0, 437, 438, 439, 0, 440, 441, 442, 443,
	444, 0, 0, 0, 0, 445, 446, 447, 0, 0,
	738, 448, 530, 449, 739, 740, 0, 741, 0, 450,
	451, 453, 0, 742, 0, 452, 454, 455, 0, 456,
	0, 0, 0, 457, 458, 459, 460, 461, 462, 0,
	463, 465, 464, 0, 467, 743, 466, 0, 468, 469,
	0, 0, 470, 471, 472, 473, 474, 855, 478, 0,
	0, 476, 477, 479, 480, 0, 481, 482, 484, 487,
	483, 485, 486, 488, 501, 502, 489, 490, 491, 492,
	493, 494, 495, 496, 497, 498, 499, 500, 504, 0,
	864, 0, 505, 506, 507, 508, 509, 516, 518, 519,
	514, 515, 517, 520, 521, 523, 511, 512, 513, 0,
	522, 510, 0, 0, 0, 524, 525, 526, 527, 0,
	744, 528, 745, 531, 532, 0, 0, 533, 0, 534,
	0, 0, 536, 537, 538, 0, 0, 539, 540, 746,
	0, 541, 0, 747, 542, 543, 535, 544, 545, 546,
	547, 548, 549, 550, 551, 552, 553, 0, 554, 555,
	748, 556, 557, 558, 749, 559, 560, 561, 750, 562,
	751, 563, 564, 0, 565, 566, 567, 0, 568, 569,
	570, 571, 572, 573, 574, 575, 752, 576, 577, 579,
	578, 580, 0, 581, 0, 582, 583, 584, 0, 0,
	0, 0, 0, 585, 586, 588, 0, 589, 590, 591,
	592, 587, 593, 594, 595, 596, 597, 598, 0, 600,
	601, 599, 602, 603, 0, 863, 605, 606, 607, 608,
	753, 609, 0, 610, 611, 618, 619, 620, 612, 613,
	614, 862, 622, 623, 624, 625, 626, 0, 628, 629,
	627, 630, 1802, 632, 0, 633, 754, 634, 615, 616,
	635, 636, 0, 637, 638, 639, 640, 641, 642, 643,
	755, 0, 644, 0, 645, 646, 647, 648, 649, 650,
	652, 617, 653, 658, 659, 756, 654, 655, 656, 657,
	757, 661, 662, 663, 664, 0, 665, 666, 0, 660,
	651, 0, 667, 668, 669, 670, 671, 672, 0, 673,
	674, 0, 675, 860, 759, 760, 761, 0, 687, 0,
	676, 678, 679, 680, 681, 762, 682, 763, 0, 683,
	684, 685, 686, 677, 688, 689, 0, 0, 690, 691,
	693, 695, 696, 692, 694, 697, 0, 698, 0, 0,
	699, 700, 701, 764, 765, 766, 0, 703, 702, 704,
	705, 706, 767, 707, 708, 709, 1775, 0, 300, 0,
	710, 711, 768, 712, 713, 714, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 306, 307, 309, 308, 310,
	311, 312, 313, 0, 314, 315, 0, 0, 0, 0,
	0, 715, 0, 0, 0, 316, 0, 317, 318, 319,
	0, 320, 321, 322, 323, 324, 325, 326, 716, 717,
	0, 327, 718, 328, 719, 0, 720, 329, 330, 331,
	332, 333, 334, 335, 0, 0, 0, 336, 721, 722,
	723, 0, 337, 338, 724, 0, 0, 0, 339, 340,
	341, 342, 343, 344, 345, 346, 0, 0, 348, 349,
	350, 347, 351, 0, 352, 0, 353, 354, 355, 356,
	357, 358, 359, 0, 360, 361, 362, 0, 363, 364,
	365, 0, 0, 0, 0, 0, 0, 0, 366, 367,
	368, 369, 370, 0, 371, 373, 725, 726, 0, 376,
	378, 372, 374, 0, 377, 375, 379, 0, 380, 381,
	382, 0, 0, 383, 384, 385, 0, 386, 387, 388,
	0, 389, 390, 391, 0, 392, 393, 727, 394, 395,
	396, 398, 400, 397, 399, 401, 402, 403, 404, 405,
	728, 729, 406, 0, 0, 0, 0, 0, 0, 0,
	407, 408, 409, 730, 0, 0, 0, 410, 0, 411,
	412, 413, 0, 414, 415, 0, 0, 416, 417, 418,
	731, 732, 419, 420, 421, 422, 423, 424, 425, 426,
	427, 0, 428, 733, 0, 734, 429, 0, 430, 431,
	432, 433, 434, 435, 436, 1774, 736, 737, 529, 0,
	437, 438, 439, 0, 440, 441, 442, 443, 444, 0,
	0, 0, 0, 445, 446, 447, 0, 0, 738, 448,
	530, 449, 739, 740, 0, 741, 0, 450, 451, 453,
	0, 742, 0, 452, 454, 455, 0, 456, 0, 0,
	0, 457, 458, 459, 460, 461, 462, 0, 463, 465,
	464, 0, 467, 743, 466, 0, 468, 469, 0, 0,
	470, 471, 472, 473, 474, 475, 478, 0, 0, 476,
	477, 479, 480, 0, 481, 482, 484, 487, 483, 485,
	486, 488, 501, 502, 489, 490, 491, 492, 493, 494,
	495, 496, 497, 498, 499, 500, 504, 0, 503, 0,
	505, 506, 507, 508, 509, 516, 518, 519, 514, 515,
	517, 520, 521, 523, 511, 512, 513, 0, 522, 510,
	0, 0, 0, 524, 525, 526, 527, 0, 744, 528,
	745, 531, 532, 0, 0, 533, 0, 534, 0, 0,
	536, 537, 538, 0, 0, 539, 540, 746, 0, 541,
	0, 747, 542, 543, 535, 544, 545, 546, 547, 548,
	549, 550, 551, 552, 553, 0, 554, 555, 748, 556,
	557, 558, 749, 559, 560, 561, 750, 562, 751, 563,
	564, 0, 565, 566, 567, 0, 568, 569, 570, 571,
	572, 573, 574, 575, 752, 576, 577, 579, 578, 580,
	0, 581, 0, 582, 583, 584, 0, 0, 0, 0,
	0, 585, 586, 588, 0, 589, 590, 591, 592, 587,
	593, 594, 595, 596, 597, 598, 0, 600, 601, 599,
	602, 603, 0, 604, 605, 606, 607, 608, 753, 609,
	0, 610, 611, 618, 619, 620, 612, 613, 614, 621,
	622, 623, 624, 625, 626, 0, 628, 629, 627, 630,
	631, 632, 0, 633, 754, 634, 615, 616, 635, 636,
	0, 637, 638, 639, 640, 641, 642, 643, 755, 0,
	644, 0, 645, 646, 647, 648, 649, 650, 652, 617,
	653, 658, 659, 756, 654, 655, 656, 657, 757, 661,
	662, 663, 664, 0, 665, 666, 0, 660, 651, 0,
	667, 668, 669, 670, 671, 672, 0, 673, 674, 0,
	675, 758, 759, 760, 761, 0, 687, 0, 676, 678,
	679, 680, 681, 762, 682, 763, 0, 683, 684, 685,
	686, 677, 688, 689, 0, 0, 690, 691, 693, 695,
	696, 692, 694, 697, 0, 698, 0, 0, 699, 700,
	701, 764, 765, 766, 0, 703, 702, 704, 705, 706,
	767, 707, 708, 709, 1758, 0, 300, 0, 710, 711,
	768, 712, 713, 714, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 306, 307, 309, 308, 310, 311, 312,
	313, 0, 314, 315, 0, 0, 0, 0, 0, 715,
	0, 0, 0, 316, 0, 317, 318, 319, 0, 320,
	321, 322, 323, 324, 325, 326, 716, 717, 0, 327,
	718, 328, 719, 0, 720, 329, 330, 331, 332, 333,
	334, 335, 0, 0, 0, 336, 721, 722, 723, 0,
	337, 338, 724, 0, 0, 0, 339, 340, 341, 342,
	343, 344, 345, 346, 0, 0, 348, 349, 350, 347,
	351, 0, 352, 0, 353, 354, 355, 356, 357, 358,
	359, 0, 360, 361, 362, 0, 363, 364, 365, 0,
	0, 0, 0, 0, 0, 0, 366, 367, 368, 369,
	370, 0, 371, 373, 725, 726, 0, 376, 378, 372,
	374, 0, 377, 375, 379, 0, 380, 381, 382, 0,
	0, 383, 384, 385, 0, 386, 387, 388, 0, 389,
	390, 391, 0, 392, 393, 727, 394, 395, 396, 398,
	400, 397, 399, 401, 402, 403, 404, 405, 728, 729,
	406, 0, 0, 0, 0, 0, 0, 0, 407, 408,
	409, 730, 0, 0, 0, 410, 0, 411, 412, 413,
	0, 414, 415, 0, 0, 416, 417, 418, 731, 732,
	419, 420, 421, 422, 423, 424, 425, 426, 427, 0,
	428, 733, 0, 734, 429, 0, 430, 431, 432, 433,
	434, 435, 436, 1756, 736, 737, 529, 0, 437, 438,
	439, 0, 440, 441, 442, 443, 444, 0, 0, 0,
	0, 445, 446, 447, 0, 0, 738, 448, 530, 449,
	739, 740, 0, 741, 0, 450, 451, 453, 0, 742,
	0, 452, 454, 455, 0, 456, 0, 0, 0, 457,
	458, 459, 460, 461, 462, 0, 463, 465, 464, 0,
	467, 743, 466, 0, 468, 469, 0, 0, 470, 471,
	472, 473, 474, 475, 478, 0, 0, 476, 477, 479,
	480, 0, 481, 482, 484, 487, 483, 485, 486, 488,
	501, 502, 489, 490, 491, 492, 493, 494, 495, 496,
	497, 498, 499, 500, 504, 0, 503, 0, 505, 506,
	507, 508, 509, 516, 518, 519, 514, 515, 517, 520,
	521, 523, 511, 512, 513, 0, 522, 510, 0, 0,
	0, 524, 525, 526, 527, 0, 744, 528, 745, 531,
	532, 0, 0, 533, 0, 534, 0, 0, 536, 537,
	538, 0, 0, 539, 540, 746, 0, 541, 0, 747,
	542, 543, 535, 544, 545, 546, 547, 548, 549, 550,
	551, 552, 553, 0, 554, 555, 748, 556, 557, 558,
	749, 559, 560, 561, 750, 562, 751, 563, 564, 0,
	565, 566, 567, 0, 568, 569, 570, 571, 572, 573,
	574, 575, 752, 576, 577, 579, 578, 580, 0, 581,
	0, 582, 583, 584, 0, 0, 0, 0, 0, 585,
	586, 588, 0, 589, 590, 591, 592, 587, 593, 594,
	595, 596, 597, 598, 0, 600, 601, 599, 602, 603,
	0, 604, 605, 606, 607, 608, 753, 609, 0, 610,
	611, 618, 619, 620, 612, 613, 614, 621, 622, 623,
	624, 625, 626, 0, 628, 629, 627, 630, 631, 632,
	0, 633, 754, 634, 615, 616, 635, 636, 0, 637,
	638, 639, 640, 641, 642, 643, 755, 0, 644, 0,
	645, 646, 647, 648, 649, 650, 652, 617, 653, 658,
	659, 756, 654, 655, 656, 657, 757, 661, 662, 663,
	664, 0, 665, 666, 0, 660, 651, 0, 667, 668,
	669, 670, 671, 672, 0, 673, 674, 0, 675, 758,
	759, 760, 761, 0, 687, 0, 676, 678, 679, 680,
	681, 762, 682, 763, 0, 683, 684, 685, 686, 677,
	688, 689, 0, 0, 690, 691, 693, 695, 696, 692,
	694, 697, 0, 698, 0, 0, 699, 700, 701, 764,
	765, 766, 0, 703, 702, 704, 705, 706, 767, 707,
	708, 709, 1750, 0, 300, 0, 710, 711, 768, 712,
	713, 714, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 306, 307, 309, 308, 310, 311, 312, 313, 0,
	314, 315, 0, 0, 0, 0, 0, 715, 0, 0,
	0, 316, 0, 317, 318, 319, 0, 320, 321, 322,
	323, 324, 325, 326, 716, 717, 0, 327, 718, 328,
	719, 0, 720, 329, 330, 331, 332, 333, 334, 335,
	0, 0, 0, 336, 721, 722, 723, 0, 337, 338,
	724, 0, 0, 0, 339, 340, 341, 342, 343, 344,
	345, 346, 0, 0, 348, 349, 350, 347, 351, 0,
	352, 0, 353, 354, 355, 356, 357, 358, 359, 0,
	360, 361, 362, 0, 363, 364, 365, 0, 0, 0,
	0, 0, 0, 0, 366, 367, 368, 369, 370, 0,
	371, 373, 725, 726, 0, 376, 378, 372, 374, 0,
	377, 375, 379, 0, 380, 381, 382, 0, 0, 383,
	384, 385, 0, 386, 387, 388, 0, 389, 390, 391,
	0, 392, 393, 727, 394, 395, 396, 398, 400, 397,
	399, 401, 402, 403, 404, 405, 728, 729, 406, 0,
	0, 0, 0, 0, 0, 0, 407, 408, 409, 730,
	0, 0, 0, 410, 0, 411, 412, 413, 0, 414,
	415, 0, 0, 416, 417, 418, 731, 732, 419, 420,
	421, 422, 423, 424, 425, 426, 427, 0, 428, 733,
	0, 734, 429, 0, 430, 431, 432, 433, 434, 435,
	436, 735, 736, 737, 529, 0, 437, 438, 439, 0,
	440, 441, 442, 443, 444, 0, 0, 0, 0, 445,
	446, 447, 0, 0, 738, 448, 530, 449, 739, 740,
	0, 741, 0, 450, 451, 453, 0, 742, 0, 452,
	454, 455, 0, 456, 0, 0, 0, 457, 458, 459,
	460, 461, 462, 0, 463, 465, 464, 0, 467, 743,
	466, 0, 468, 469, 0, 0, 470, 471, 472, 473,
	474, 475, 478, 0, 0, 476, 477, 479, 480, 0,
	481, 482, 484, 487, 483, 485, 486, 488, 501, 502,
	489, 490, 491, 492, 493, 494, 495, 496, 497, 498,
	499, 500, 504, 0, 503, 0, 505, 506, 507, 508,
	509, 516, 518, 519, 514, 515, 517, 520, 521, 523,
	511, 512, 513, 0, 522, 510, 0, 0, 0, 524,
	525, 526, 527, 0, 744, 528, 745, 531, 532, 0,
	0, 533, 0, 534, 0, 0, 536, 537, 538, 0,
	0, 539, 540, 746, 0, 541, 0, 747, 542, 543,
	535, 544, 545, 546, 547, 548, 549, 550, 551, 552,
	553, 0, 554, 555, 748, 556, 557, 558, 749, 559,
	560, 561, 750, 562, 751, 563, 564, 0, 565, 566,
	567, 0, 568, 569, 570, 571, 572, 573, 574, 575,
	752, 576, 577, 579, 578, 580, 0, 581, 0, 582,
	583, 584, 0, 0, 0, 0, 0, 585, 586, 588,
	0, 589, 590, 591, 592, 587, 593, 594, 595, 596,
	597, 598, 0, 600, 601, 599, 602, 603, 0, 604,
	605, 606, 607, 608, 753, 609, 0, 610, 611, 618,
	619, 620, 612, 613, 614, 621, 622, 623, 624, 625,
	626, 0, 628, 629, 627, 630, 631, 632, 0, 633,
	754, 634, 615, 616, 635, 636, 0, 637, 638, 639,
	640, 641, 642, 643, 755, 0, 644, 0, 645, 646,
	647, 648, 649, 650, 652, 617, 653, 658, 659, 756,
	654, 655, 656, 657, 757, 661, 662, 663, 664, 0,
	665, 666, 0, 660, 651, 0, 667, 668, 669, 670,
	671, 672, 0, 673, 674, 0, 675, 758, 759, 760,
	761, 0, 687, 0, 676, 678, 679, 680, 681, 762,
	682, 763, 0, 683, 684, 685, 686, 677, 688, 689,
	0, 0, 690, 691, 693, 695, 696, 692, 694, 697,
	0, 698, 0, 0, 699, 700, 701, 764, 765, 766,
	0, 703, 702, 704, 705, 706, 767, 707, 708, 709,
	1728, 0, 300, 0, 710, 711, 768, 712, 713, 714,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 306,
	307, 309, 308, 310, 311, 312, 313, 0, 314, 315,
	0, 0, 0, 0, 0, 715, 0, 0, 0, 316,
	0, 317, 318, 319, 0, 320, 321, 322, 323, 324,
	325, 326, 716, 717, 0, 327, 718, 328, 719, 0,
	720, 329, 330, 331, 332, 333, 334, 335, 0, 0,
	0, 336, 721, 722, 723, 0, 337, 338, 724, 0,
	0, 0, 339, 340, 341, 342, 343, 344, 345, 346,
	0, 0, 348, 349, 350, 347, 351, 0, 352, 0,
	353, 354, 355, 356, 357, 358, 359, 0, 360, 361,
	362, 0, 363, 364, 365, 0, 0, 0, 0, 0,
	0, 0, 366, 367, 368, 369, 370, 0, 371, 373,
	725, 726, 0, 376, 378, 372, 374, 0, 377, 375,
	379, 0, 380, 381, 382, 0, 0, 383, 384, 385,
	0, 386, 387, 388, 0, 389, 390, 391, 0, 392,
	393, 727, 394, 395, 396, 398, 400, 397, 399, 401,
	402, 403, 404, 405, 728, 729, 406, 0, 0, 0,
	0, 0, 0, 0, 407, 408, 409, 730, 0, 0,
	0, 410, 0, 411, 412, 413, 0, 414, 415, 0,
	0, 416, 417, 418, 731, 732, 419, 420, 421, 422,
	423, 424, 425, 426, 427, 0, 428, 733, 0, 734,
	429, 0, 430, 431, 432, 433, 434, 435, 436, 1726,
	736, 737, 529, 0, 437, 438, 439, 0, 440, 441,
	442, 443, 444, 0, 0, 0, 0, 445, 446, 447,
	0, 0, 738, 448, 530, 449, 739, 740, 0, 741,
	0, 450, 451, 453, 0, 742, 0, 452, 454, 455,
	0, 456, 0, 0, 0, 457, 458, 459, 460, 461,
	462, 0, 463, 465, 464, 0, 467, 743, 466, 0,
	468, 469, 0, 0, 470, 471, 472, 473, 474, 475,
	478, 0, 0, 476, 477, 479, 480, 0, 481, 482,
	484, 487, 483, 485, 486, 488, 501, 502, 489, 490,
	491, 492, 493, 494, 495, 496, 497, 498, 499, 500,
	504, 0, 503, 0, 505, 506, 507, 508, 509, 516,
	518, 519, 514, 515, 517, 520, 521, 523, 511, 512,
	513, 0, 522, 510, 0, 0, 0, 524, 525, 526,
	527, 0, 744, 528, 745, 531, 532, 0, 0, 533,
	0, 534, 0, 0, 536, 537, 538, 0, 0, 539,
	540, 746, 0, 541, 0, 747, 542, 543, 535, 544,
	545, 546, 547, 548, 549, 550, 551, 552, 553, 0,
	554, 555, 748, 556, 557, 558, 749, 559, 560, 561,
	750, 562, 751, 563, 564, 0, 565, 566, 567, 0,
	568, 569, 570, 571, 572, 573, 574, 575, 752, 576,
	577, 579, 578, 580, 0, 581, 0, 582, 583, 584,
	0, 0, 0, 0, 0, 585, 586, 588, 0, 589,
	590, 591, 592, 587, 593, 594, 595, 596, 597, 598,
	0, 600, 601, 599, 602, 603, 0, 604, 605, 606,
	607, 608, 753, 609, 0, 610, 611, 618, 619, 620,
	612, 613, 614, 621, 622, 623, 624, 625, 626, 0,
	628, 629, 627, 630, 631, 632, 0, 633, 754, 634,
	615, 616, 635, 636, 0, 637, 638, 639, 640, 641,
	642, 643, 755, 0, 644, 0, 645, 646, 647, 648,
	649, 650, 652, 617, 653, 658, 659, 756, 654, 655,
	656, 657, 757, 661, 662, 663, 664, 0, 665, 666,
	0, 660, 651, 0, 667, 668, 669, 670, 671, 672,
	0, 673, 674, 0, 675, 758, 759, 760, 761, 0,
	687, 0, 676, 678, 679, 680, 681, 762, 682, 763,
	0, 683, 684, 685, 686, 677, 688, 689, 0, 0,
	690, 691, 693, 695, 696, 692, 694, 697, 0, 698,
	0, 0, 699, 700, 701, 764, 765, 766, 0, 703,
	702, 704, 705, 706, 767, 707, 708, 709, 1719, 0,
	300, 0, 710, 711, 768, 712, 713, 714, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 306, 307, 309,
	308, 310, 311, 312, 313, 0, 314, 315, 0, 0,
	0, 0, 0, 715, 0, 0, 0, 316, 0, 317,
	318, 319, 0, 320, 321, 322, 323, 324, 325, 326,
	716, 717, 0, 327, 718, 328, 719, 0, 720, 329,
	330, 331, 332, 333, 334, 335, 0, 0, 0, 336,
	721, 722, 723, 0, 337, 338, 724, 0, 0, 0,
	339, 340, 341, 342, 343, 344, 345, 346, 0, 0,
	348, 349, 350, 347, 351, 0, 352, 0, 353, 354,
	355, 356, 357, 358, 359, 0, 360, 361, 362, 0,
	363, 364, 365, 0, 0, 0, 0, 0, 0, 0,
	366, 367, 368, 369, 370, 0, 371, 373, 725, 726,
	0, 376, 378, 372, 374, 0, 377, 375, 379, 0,
	380, 381, 382, 0, 0, 383, 384, 385, 0, 386,
	387, 388, 0, 389, 390, 391, 0, 392, 393, 727,
	394, 395, 396, 398, 400, 397, 399, 401, 402, 403,
	404, 405, 728, 729, 406, 0, 0, 0, 0, 0,
	0, 0, 407, 408, 409, 730, 0, 0, 0, 410,
	0, 411, 412, 413, 0, 414, 415, 0, 0, 416,
	417, 418, 731, 732, 419, 420, 421, 422, 423, 424,
	425, 426, 427, 0, 428, 733, 0, 734, 429, 0,
	430, 431, 432, 433, 434, 435, 436, 735, 736, 737,
	529, 0, 437, 438, 439, 0, 440, 441, 442, 443,
	444, 0, 0, 0, 0, 445, 446, 447, 0, 0,
	738, 448, 530, 449, 739, 740, 0, 741, 0, 450,
	451, 453, 0, 742, 0, 452, 454, 455, 0, 456,
	0, 0, 0, 457, 458, 459, 460, 461, 462, 0,
	463, 465, 464, 0, 467, 743, 466, 0, 468, 469,
	0, 0, 470, 471, 472, 473, 474, 475, 478, 0,
	0, 476, 477, 479, 480, 0, 481, 482, 484, 487,
	483, 485, 486, 488, 501, 502, 489, 490, 491, 492,
	493, 494, 495, 496, 497, 498, 499, 500, 504, 0,
	503, 0, 505, 506, 507, 508, 509, 516, 518, 519,
	514, 515, 517, 520, 521, 523, 511, 512, 513, 0,
	522, 510, 0, 0, 0, 524, 525, 526, 527, 0,
	744, 528, 745, 531, 532, 0, 0, 533, 0, 534,
	0, 0, 536, 537, 538, 0, 0, 539, 540, 746,
	0, 541, 0, 747, 542, 543, 535, 544, 545, 546,
	547, 548, 549, 550, 551, 552, 553, 0, 554, 555,
	748, 556, 557, 558, 749, 559, 560, 561, 750, 562,
	751, 563, 564, 0, 565, 566, 567, 0, 568, 569,
	570, 571, 572, 573, 574, 575, 752, 576, 577, 579,
	578, 580, 0, 581, 0, 582, 583, 584, 0, 0,
	0, 0, 0, 585, 586, 588, 0, 589, 590, 591,
	592, 587, 593, 594, 595, 596, 597, 598, 0, 600,
	601, 599, 602, 603, 0, 604, 605, 606, 607, 608,
	753, 609, 0, 610, 611, 618, 619, 620, 612, 613,
	614, 621, 622, 623, 624, 625, 626, 0, 628, 629,
	627, 630, 631, 632, 0, 633, 754, 634, 615, 616,
	635, 636, 0, 637, 638, 639, 640, 641, 642, 643,
	755, 0, 644, 0, 645, 646, 647, 648, 649, 650,
	652, 617, 653, 658, 659, 756, 654, 655, 656, 657,
	757, 661, 662, 663, 664, 0, 665, 666, 0, 660,
	651, 0, 667, 668, 669, 670, 671, 672, 0, 673,
	674, 0, 675, 758, 759, 760, 761, 0, 687, 0,
	676, 678, 679, 680, 681, 762, 682, 763, 0, 683,
	684, 685, 686, 677, 688, 689, 0, 0, 690, 691,
	693, 695, 696, 692, 694, 697, 0, 698, 0, 0,
	699, 700, 701, 764, 765, 766, 0, 703, 702, 704,
	705, 706, 767, 707, 708, 709, 1680, 0, 300, 0,
	710, 711, 768, 712, 713, 714, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 306, 307, 309, 308, 310,
	311, 312, 313, 0, 314, 315, 0, 0, 0, 0,
	0, 715, 0, 0, 0, 316, 0, 317, 318, 319,
	0, 320, 321, 322, 323, 324, 325, 326, 716, 717,
	0, 327, 718, 328, 719, 0, 720, 329, 330, 331,
	332, 333, 334, 335, 0, 0, 0, 336, 721, 722,
	723, 0, 337, 338, 724, 0, 0, 0, 339, 340,
	341, 342, 343, 344, 345, 346, 0, 0, 348, 349,
	350, 347, 351, 0, 352, 0, 353, 354, 355, 356,
	357, 358, 359, 0, 360, 361, 362, 0, 363, 364,
	365, 0, 0, 0, 0, 0, 0, 0, 366, 367,
	368, 369, 370, 0, 371, 373, 725, 726, 0, 376,
	378, 372, 374, 0, 377, 375, 379, 0, 380, 381,
	382, 0, 0, 383, 384, 385, 0, 386, 387, 388,
	0, 389, 390, 391, 0, 392, 393, 727, 394, 395,
	396, 398, 400, 397, 399, 401, 402, 403, 404, 405,
	728, 729, 406, 0, 0, 0, 0, 0, 0, 0,
	407, 408, 409, 730, 0, 0, 0, 410, 0, 411,
	412, 413, 0, 414, 415, 0, 0, 416, 417, 418,
	731, 732, 419, 420, 421, 422, 423, 424, 425, 426,
	427, 0, 428, 733, 0, 734, 429, 0, 430, 431,
	432, 433, 434, 435, 436, 735, 736, 737, 529, 0,
	437, 438, 439, 0, 440, 441, 442, 443, 444, 0,
	0, 0, 0, 445, 446, 447, 0, 0, 738, 448,
	530, 449, 739, 740, 0, 741, 0, 450, 451, 453,
	0, 742, 0, 452, 454, 455, 0, 456, 0, 0,
	0, 457, 458, 459, 460, 461, 462, 0, 463, 465,
	464, 0, 467, 743, 466, 0, 468, 469, 0, 0,
	470, 471, 472, 473, 474, 475, 478, 0, 0, 476,
	477, 479, 480, 0, 481, 482, 484, 487, 483, 485,
	486, 488, 501, 502, 489, 490, 491, 492, 493, 494,
	495, 496, 497, 498, 499, 500, 504, 0, 503, 0,
	505, 506, 507, 508, 509, 516, 518, 519, 514, 515,
	517, 520, 521, 523, 511, 512, 513, 0, 522, 510,
	0, 0, 0, 524, 525, 526, 527, 0, 744, 528,
	745, 531, 532, 0, 0, 533, 0, 534, 0, 0,
	536, 537, 538, 0, 0, 539, 540, 746, 0, 541,
	0, 747, 542, 543, 535, 544, 545, 546, 547, 548,
	549, 550, 551, 552, 553, 0, 554, 555, 748, 556,
	557, 558, 749, 559, 560, 561, 750, 562, 751, 563,
	564, 0, 565, 566, 567, 0, 568, 569, 570, 571,
	572, 573, 574, 575, 752, 576, 577, 579, 578, 580,
	0, 581, 0, 582, 583, 584, 0, 0, 0, 0,
	0, 585, 586, 588, 0, 589, 590, 591, 592, 587,
	593, 594, 595, 596, 597, 598, 0, 600, 601, 599,
	602, 603, 0, 604, 605, 606, 607, 608, 753, 609,
	0, 610, 611, 618, 619, 620, 612, 613, 614, 621,
	622, 623, 624, 625, 626, 0, 628, 629, 627, 630,
	631, 632, 0, 633, 754, 634, 615, 616, 635, 636,
	0, 637, 638, 639, 640, 641, 642, 643, 755, 0,
	644, 0, 645, 646, 647, 648, 649, 650, 652, 617,
	653, 658, 659, 756, 654, 655, 656, 657, 757, 661,
	662, 663, 664, 0, 665, 666, 0, 660, 651, 0,
	667, 668, 669, 670, 671, 672, 0, 673, 674, 0,
	675, 758, 759, 760, 761, 0, 687, 0, 676, 678,
	679, 680, 681, 762, 682, 763, 0, 683, 684, 685,
	686, 677, 688, 689, 0, 0, 690, 691, 693, 695,
	696, 692, 694, 697, 0, 698, 0, 0, 699, 700,
	701, 764, 765, 766, 0, 703, 702, 704, 705, 706,
	767, 707, 708, 709, 1644, 0, 300, 0, 710, 711,
	768, 712, 713, 714, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 306, 307, 309, 308, 310, 311, 312,
	313, 0, 314, 315, 0, 0, 0, 0, 0, 715,
	0, 0, 0, 316, 0, 317, 318, 319, 0, 320,
	321, 322, 323, 324, 325, 326, 716, 717, 0, 327,
	718, 328, 719, 0, 720, 329, 330, 331, 332, 333,
	334, 335, 0, 0, 0, 336, 721, 722, 723, 0,
	337, 338, 724, 0, 0, 0, 339, 340, 341, 342,
	343, 344, 345, 346, 0, 0, 348, 349, 350, 347,
	351, 0, 352, 0, 353, 354, 355, 356, 357, 358,
	359, 0, 360, 361, 362, 0, 363, 364, 365, 0,
	0, 0, 0, 0, 0, 0, 366, 367, 368, 369,
	370, 0, 371, 373, 725, 726, 0, 376, 378, 372,
	374, 0, 377, 375, 379, 0, 380, 381, 382, 0,
	0, 383, 384, 385, 0, 386, 387, 388, 0, 389,
	390, 391, 0, 392, 393, 727, 394, 395, 396, 398,
	400, 397, 399, 401, 402, 403, 404, 405, 728, 729,
	406, 0, 0, 0, 0, 0, 0, 0, 407, 408,
	409, 730, 0, 0, 0, 410, 0, 411, 412, 413,
	0, 414, 415, 0, 0, 416, 417, 418, 731, 732,
	419, 420, 421, 422, 423, 424, 425, 426, 427, 0,
	428, 733, 0, 734, 429, 0, 430, 431, 432, 433,
	434, 435, 436, 735, 736, 737, 529, 0, 437, 438,
	439, 0, 440, 441, 442, 443, 444, 0, 0, 0,
	0, 445, 446, 447, 0, 0, 738, 448, 530, 449,
	739, 740, 0, 741, 0, 450, 451, 453, 0, 742,
	0, 452, 454, 455, 0, 456, 0, 0, 0, 457,
	458, 459, 460, 461, 462, 0, 463, 465, 464, 0,
	467, 743, 466, 0, 468, 469, 0, 0, 470, 471,
	472, 473, 474, 475, 478, 0, 0, 476, 477, 479,
	480, 0, 481, 482, 484, 487, 483, 485, 486, 488,
	501, 502, 489, 490, 491, 492, 493, 494, 495, 496,
	497, 498, 499, 500, 504, 0, 503, 0, 505, 506,
	507, 508, 509, 516, 518, 519, 514, 515, 517, 520,
	521, 523, 511, 512, 513, 0, 522, 510, 0, 0,
	0, 524, 525, 526, 527, 0, 744, 528, 745, 531,
	532, 0, 0, 533, 0, 534, 0, 0, 536, 537,
	538, 0, 0, 539, 540, 746, 0, 541, 0, 747,
	542, 543, 535, 544, 545, 546, 547, 548, 549, 550,
	551, 552, 553, 0, 554, 555, 748, 556, 557, 558,
	749, 559, 560, 561, 750, 562, 751, 563, 564, 0,
	565, 566, 567, 0, 568, 569, 570, 571, 572, 573,
	574, 575, 752, 576, 577, 579, 578, 580, 0, 581,
	0, 582, 583, 584, 0, 0, 0, 0, 0, 585,
	586, 588, 0, 589, 590, 591, 592, 587, 593, 594,
	595, 596, 597, 598, 0, 600, 601, 599, 602, 603,
	0, 604, 605, 606, 607, 608, 753, 609, 0, 610,
	611, 618, 619, 620, 612, 613, 614, 621, 622, 623,
	624, 625, 626, 0, 628, 629, 627, 630, 631, 632,
	0, 633, 754, 634, 615, 616, 635, 636, 0, 637,
	638, 639, 640, 641, 642, 643, 755, 0, 644, 0,
	645, 646, 647, 648, 649, 650, 652, 617, 653, 658,
	659, 756, 654, 655, 656, 657, 757, 661, 662, 663,
	664, 0, 665, 666, 0, 660, 651, 0, 667, 668,
	669, 670, 671, 672, 0, 673, 674, 0, 675, 758,
	759, 760, 761, 0, 687, 0, 676, 678, 679, 680,
	681, 762, 682, 763, 0, 683, 684, 685, 686, 677,
	688, 689, 0, 0, 690, 691, 693, 695, 696, 692,
	694, 697, 0, 698, 0, 0, 699, 700, 701, 764,
	765, 766, 0, 703, 702, 704, 705, 706, 767, 707,
	708, 709, 1493, 0, 300, 0, 710, 711, 768, 712,
	713, 714, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 306, 307, 309, 308, 310, 311, 312, 313, 0,
	314, 315, 0, 0, 0, 0, 0, 715, 0, 0,
	0, 316, 0, 317, 318, 319, 0, 320, 321, 322,
	323, 324, 325, 326, 716, 717, 0, 327, 718, 328,
	719, 0, 720, 329, 330, 331, 332, 333, 334, 335,
	0, 0, 0, 336, 721, 722, 723, 0, 337, 338,
	724, 0, 0, 0, 339, 340, 341, 342, 343, 344,
	345, 346, 0, 0, 348, 349, 350, 347, 351, 0,
	352, 0, 353, 354, 355, 356, 357, 358, 359, 0,
	360, 361, 362, 0, 363, 364, 365, 0, 0, 0,
	0, 0, 0, 0, 366, 367, 368, 369, 370, 0,
	371, 373, 725, 726, 0, 376, 378, 372, 374, 0,
	377, 375, 379, 0, 380, 381, 382, 0, 0, 383,
	384, 385, 0, 386, 387, 388, 0, 389, 390, 391,
	0, 392, 393, 727, 394, 395, 396, 398, 400, 397,
	399, 401, 402, 403, 404, 405, 728, 729, 406, 0,
	0, 0, 0, 0, 0, 0, 407, 408, 409, 730,
	0, 0, 0, 410, 0, 411, 412, 413, 0, 414,
	415, 0, 0, 416, 417, 418, 731, 732, 419, 420,
	421, 422, 423, 424, 425, 426, 427, 0, 428, 733,
	0, 734, 429, 0, 430, 431, 432, 433, 434, 435,
	436, 735, 736, 737, 529, 0, 437, 438, 439, 0,
	440, 441, 442, 443, 444, 0, 0, 0, 0, 445,
	446, 447, 0, 0, 738, 448, 530, 449, 739, 740,
	0, 741, 0, 450, 451, 453, 0, 742, 0, 452,
	454, 455, 0, 456, 0, 0, 0, 457, 458, 459,
	460, 461, 462, 0, 463, 465, 464, 0, 467, 743,
	466, 0, 468, 469, 0, 0, 470, 471, 472, 473,
	474, 475, 478, 0, 0, 476, 477, 479, 480, 0,
	481, 482, 484, 487, 483, 485, 486, 488, 501, 502,
	489, 490, 491, 492, 493, 494, 495, 496, 497, 498,
	499, 500, 504, 0, 503, 0, 505, 506, 507, 508,
	509, 516, 518, 519, 514, 515, 517, 520, 521, 523,
	511, 512, 513, 0, 522, 510, 0, 0, 0, 524,
	525, 526, 527, 0, 744, 528, 745, 531, 532, 0,
	0, 533, 0, 534, 0, 0, 536, 537, 538, 0,
	0, 539, 540, 746, 0, 541, 0, 747, 542, 543,
	535, 544, 545, 546, 547, 548, 549, 550, 551, 552,
	553, 0, 554, 555, 748, 556, 557, 558, 749, 559,
	560, 561, 750, 562, 751, 563, 564, 0, 565, 566,
	567, 0, 568, 569, 570, 571, 572, 573, 574, 575,
	752, 576, 577, 579, 578, 580, 0, 581, 0, 582,
	583, 584, 0, 0, 0, 0, 0, 585, 586, 588,
	0, 589, 590, 591, 592, 587, 593, 594, 595, 596,
	597, 598, 0, 600, 601, 599, 602, 603, 0, 863,
	605, 606, 607, 608, 753, 609, 0, 610, 611, 618,
	619, 620, 612, 613, 614, 862, 622, 623, 624, 625,
	626, 0, 628, 629, 627, 630, 631, 632, 0, 633,
	754, 634, 615, 616, 635, 636, 0, 637, 638, 639,
	640, 641, 642, 643, 755, 0, 644, 0, 645, 646,
	647, 648, 649, 650, 652, 617, 653, 658, 659, 756,
	654, 655, 656, 657, 757, 661, 662, 663, 664, 0,
	665, 666, 0, 660, 651, 0, 667, 668, 669, 670,
	671, 672, 0, 673, 674, 0, 675, 860, 759, 760,
	761, 0, 687, 0, 676, 678, 679, 680, 681, 762,
	682, 763, 0, 683, 684, 685, 686, 677, 688, 689,
	0, 0, 690, 691, 693, 695, 696, 692, 694, 697,
	0, 698, 0, 0, 699, 700, 701, 764, 765, 766,
	0, 703, 702, 704, 705, 706, 767, 707, 708, 709,
	1464, 0, 300, 0, 710, 711, 768, 712, 713, 714,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 306,
	307, 309, 308, 310, 311, 312, 313, 0, 314, 315,
	0, 0, 0, 0, 0, 715, 0, 0, 0, 316,
	0, 317, 318, 319, 0, 320, 321, 322, 323, 324,
	325, 326, 716, 717, 0, 327, 718, 328, 719, 0,
	720, 329, 330, 331, 332, 333, 334, 335, 0, 0,
	0, 336, 721, 722, 723, 0, 337, 338, 724, 0,
	0, 0, 339, 340, 341, 342, 343, 344, 345, 346,
	0, 0, 348, 349, 350, 347, 351, 0, 352, 0,
	353, 354, 355, 356, 357, 358, 359, 0, 360, 361,
	362, 0, 363, 364, 365, 0, 0, 0, 0, 0,
	0, 0, 366, 367, 368, 369, 370, 0, 371, 373,
	725, 726, 0, 376, 378, 372, 374, 0, 377, 375,
	379, 0, 380, 381, 382, 0, 0, 383, 384, 385,
	0, 386, 387, 388, 0, 389, 390, 391, 0, 392,
	393, 727, 394, 395, 396, 398, 400, 397, 399, 401,
	402, 403, 404, 405, 728, 729, 406, 0, 0, 0,
	0, 0, 0, 0, 407, 408, 409, 730, 0, 0,
	0, 410, 0, 411, 412, 413, 0, 414, 415, 0,
	0, 416, 417, 418, 731, 732, 419, 420, 421, 422,
	423, 424, 425, 426, 427, 0, 428, 733, 0, 734,
	429, 0, 430, 431, 432, 433, 434, 435, 436, 1463,
	736, 737, 529, 0, 437, 438, 439, 0, 440, 441,
	442, 443, 444, 0, 0, 0, 0, 445, 446, 447,
	0, 0, 738, 448, 530, 449, 739, 740, 0, 741,
	0, 450, 451, 453, 0, 742, 0, 452, 454, 455,
	0, 456, 0, 0, 0, 457, 458, 459, 460, 461,
	462, 0, 463, 465, 464, 0, 467, 743, 466, 0,
	468, 469, 0, 0, 470, 471, 472, 473, 474, 475,
	478, 0, 0, 476, 477, 479, 480, 0, 481, 482,
	484, 487, 483, 485, 486, 488, 501, 502, 489, 490,
	491, 492, 493, 494, 495, 496, 497, 498, 499, 500,
	504, 0, 503, 0, 505, 506, 507, 508, 509, 516,
	518, 519, 514, 515, 517, 520, 521, 523, 511, 512,
	513, 0, 522, 510, 0, 0, 0, 524, 525, 526,
	527, 0, 744, 528, 745, 531, 532, 0, 0, 533,
	0, 534, 0, 0, 536, 537, 538, 0, 0, 539,
	540, 746, 0, 541, 0, 747, 542, 543, 535, 544,
	545, 546, 547, 548, 549, 550, 551, 552, 553, 0,
	554, 555, 748, 556, 557, 558, 749, 559, 560, 561,
	750, 562, 751, 563, 564, 0, 565, 566, 567, 0,
	568, 569, 570, 571, 572, 573, 574, 575, 752, 576,
	577, 579, 578, 580, 0, 581, 0, 582, 583, 584,
	0, 0, 0, 0, 0, 585, 586, 588, 0, 589,
	590, 591, 592, 587, 593, 594, 595, 596, 597, 598,
	0, 600, 601, 599, 602, 603, 0, 604, 605, 606,
	607, 608, 753, 609, 0, 610, 611, 618, 619, 620,
	612, 613, 614, 621, 622, 623, 624, 625, 626, 0,
	628, 629, 627, 630, 631, 632, 0, 633, 754, 634,
	615, 616, 635, 636, 0, 637, 638, 639, 640, 641,
	642, 643, 755, 0, 644, 0, 645, 646, 647, 648,
	649, 650, 652, 617, 653, 658, 659, 756, 654, 655,
	656, 657, 757, 661, 662, 663, 664, 0, 665, 666,
	0, 660, 651, 0, 667, 668, 669, 670, 671, 672,
	0, 673, 674, 0, 675, 758, 759, 760, 761, 0,
	687, 0, 676, 678, 679, 680, 681, 762, 682, 763,
	0, 683, 684, 685, 686, 677, 688, 689, 0, 0,
	690, 691, 693, 695, 696, 692, 694, 697, 0, 698,
	0, 0, 699, 700, 701, 764, 765, 766, 0, 703,
	702, 704, 705, 706, 767, 707, 708, 709, 1455, 0,
	300, 0, 710, 711, 768, 712, 713, 714, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 306, 307, 309,
	308, 310, 311, 312, 313, 0, 314, 315, 0, 0,
	0, 0, 0, 715, 0, 0, 0, 316, 0, 317,
	318, 319, 0, 320, 321, 322, 323, 324, 325, 326,
	716, 717, 0, 327, 718, 328, 719, 0, 720, 329,
	330, 331, 332, 333, 334, 335, 0, 0, 0, 336,
	721, 722, 723, 0, 337, 338, 724, 0, 0, 0,
	339, 340, 341, 342, 343, 344, 345, 346, 0, 0,
	348, 349, 350, 347, 351, 0, 352, 0, 353, 354,
	355, 356, 357, 358, 359, 0, 360, 361, 362, 0,
	363, 364, 365, 0, 0, 0, 0, 0, 0, 0,
	366, 367, 368, 369, 370, 0, 371, 373, 725, 726,
	0, 376, 378, 372, 374, 0, 377, 375, 379, 0,
	380, 381, 382, 0, 0, 383, 384, 385, 0, 386,
	387, 388, 0, 389, 390, 391, 0, 392, 393, 727,
	394, 395, 396, 398, 400, 397, 399, 401, 402, 403,
	404, 405, 728, 729, 406, 0, 0, 0, 0, 0,
	0, 0, 407, 408, 409, 730, 0, 0, 0, 410,
	0, 411, 412, 413, 0, 414, 415, 0, 0, 416,
	417, 418, 731, 732, 419, 420, 421, 422, 423, 424,
	425, 426, 427, 0, 428, 733, 0, 734, 429, 0,
	430, 431, 432, 433, 434, 435, 436, 1454, 736, 737,
	529, 0, 437, 438, 439, 0, 440, 441, 442, 443,
	444, 0, 0, 0, 0, 445, 446, 447, 0, 0,
	738, 448, 530, 449, 739, 740, 0, 741, 0, 450,
	451, 453, 0, 742, 0, 452, 454, 455, 0, 456,
	0, 0, 0, 457, 458, 459, 460, 461, 462, 0,
	463, 465, 464, 0, 467, 743, 466, 0, 468, 469,
	0, 0, 470, 471, 472, 473, 474, 475, 478, 0,
	0, 476, 477, 479, 480, 0, 481, 482, 484, 487,
	483, 485, 486, 488, 501, 502, 489, 490, 491, 492,
	493, 494, 495, 496, 497, 498, 499, 500, 504, 0,
	503, 0, 505, 506, 507, 508, 509, 516, 518, 519,
	514, 515, 517, 520, 521, 523, 511, 512, 513, 0,
	522, 510, 0, 0, 0, 524, 525, 526, 527, 0,
	744, 528, 745, 531, 532, 0, 0, 533, 0, 534,
	0, 0, 536, 537, 538, 0, 0, 539, 540, 746,
	0, 541, 0, 747, 542, 543, 535, 544, 545, 546,
	547, 548, 549, 550, 551, 552, 553, 0, 554, 555,
	748, 556, 557, 558, 749, 559, 560, 561, 750, 562,
	751, 563, 564, 0, 565, 566, 567, 0, 568, 569,
	570, 571, 572, 573, 574, 575, 752, 576, 577, 579,
	578, 580, 0, 581, 0, 582, 583, 584, 0, 0,
	0, 0, 0, 585, 586, 588, 0, 589, 590, 591,
	592, 587, 593, 594, 595, 596, 597, 598, 0, 600,
	601, 599, 602, 603, 0, 604, 605, 606, 607, 608,
	753, 609, 0, 610, 611, 618, 619, 620, 612, 613,
	614, 621, 622, 623, 624, 625, 626, 0, 628, 629,
	627, 630, 631, 632, 0, 633, 754, 634, 615, 616,
	635, 636, 0, 637, 638, 639, 640, 641, 642, 643,
	755, 0, 644, 0, 645, 646, 647, 648, 649, 650,
	652, 617, 653, 658, 659, 756, 654, 655, 656, 657,
	757, 661, 662, 663, 664, 0, 665, 666, 0, 660,
	651, 0, 667, 668, 669, 670, 671, 672, 0, 673,
	674, 0, 675, 758, 759, 760, 761, 0, 687, 0,
	676, 678, 679, 680, 681, 762, 682, 763, 0, 683,
	684, 685, 686, 677, 688, 689, 0, 0, 690, 691,
	693, 695, 696, 692, 694, 697, 0, 698, 0, 0,
	699, 700, 701, 764, 765, 766, 0, 703, 702, 704,
	705, 706, 767, 707, 708, 709, 300, 0, 0, 0,
	710, 711, 768, 712, 713, 714, 0, 0, 0, 0,
	0, 0, 0, 306, 307, 309, 308, 310, 311, 312,
	313, 1403, 314, 315, 0, 0, 0, 0, 0, 715,
	0, 0, 0, 316, 0, 317, 318, 319, 0, 320,
	321, 322, 323, 324, 325, 326, 716, 717, 0, 327,
	718, 328, 719, 0, 720, 329, 330, 331, 332, 333,
	334, 335, 0, 0, 0, 336, 721, 722, 723, 0,
	337, 338, 724, 0, 0, 0, 339, 340, 341, 342,
	343, 344, 345, 346, 0, 0, 348, 349, 350, 347,
	351, 0, 352, 0, 353, 354, 355, 356, 357, 358,
	359, 0, 360, 361, 362, 0, 363, 364, 365, 0,
	0, 0, 0, 0, 0, 0, 366, 367, 368, 369,
	370, 0, 371, 373, 725, 726, 0, 376, 378, 372,
	374, 0, 377, 375, 379, 0, 380, 381, 382, 0,
	0, 383, 384, 385, 0, 386, 387, 388, 0, 389,
	390, 391, 0, 392, 393, 727, 394, 395, 396, 398,
	400, 397, 399, 401, 402, 403, 404, 405, 728, 729,
	406, 0, 0, 0, 0, 0, 0, 0, 407, 408,
	409, 730, 0, 0, 0, 410, 0, 411, 412, 413,
	0, 414, 415, 0, 0, 416, 417, 418, 731, 732,
	419, 420, 421, 422, 423, 424, 425, 426, 427, 0,
	428, 733, 0, 734, 429, 0, 430, 431, 432, 433,
	434, 435, 436, 735, 736, 737, 529, 0, 437, 438,
	439, 0, 440, 441, 442, 443, 444, 0, 0, 0,
	0, 445, 446, 447, 0, 0, 738, 448, 530, 449,
	739, 740, 0, 741, 0, 450, 451, 453, 0, 742,
	0, 452, 454, 455, 0, 456, 0, 0, 0, 457,
	458, 459, 460, 461, 462, 0, 463, 465, 464, 0,
	467, 743, 466, 0, 468, 469, 0, 0, 470, 471,
	472, 473, 474, 475, 478, 0, 0, 476, 477, 479,
	480, 0, 481, 482, 484, 487, 483, 485, 486, 488,
	501, 502, 489, 490, 491, 492, 493, 494, 495, 496,
	497, 498, 499, 500, 504, 0, 503, 0, 505, 506,
	507, 508, 509, 516, 518, 519, 514, 515, 517, 520,
	521, 523, 511, 512, 513, 0, 522, 510, 0, 0,
	0, 524, 525, 526, 527, 0, 744, 528, 745, 531,
	532, 0, 0, 533, 0, 534, 0, 0, 536, 537,
	538, 0, 0, 539, 540, 746, 0, 541, 0, 747,
	542, 543, 535, 544, 545, 546, 547, 548, 549, 550,
	551, 552, 553, 0, 554, 555, 748, 556, 557, 558,
	749, 559, 560, 561, 750, 562, 751, 563, 564, 0,
	565, 566, 567, 0, 568, 569, 570, 571, 572, 573,
	574, 575, 752, 576, 577, 579, 578, 580, 0, 581,
	0, 582, 583, 584, 0, 0, 0, 0, 0, 585,
	586, 588, 0, 589, 590, 591, 592, 587, 593, 594,
	595, 596, 597, 598, 0, 600, 601, 599, 602, 603,
	0, 604, 605, 606, 607, 608, 753, 609, 0, 610,
	611, 618, 619, 620, 612, 613, 614, 621, 622, 623,
	624, 625, 626, 0, 628, 629, 627, 630, 631, 632,
	0, 633, 754, 634, 615, 616, 635, 636, 0, 637,
	638, 639, 640, 641, 642, 643, 755, 0, 644, 0,
	645, 646, 647, 648, 649, 650, 652, 617, 653, 658,
	659, 756, 654, 655, 656, 657, 757, 661, 662, 663,
	664, 0, 665, 666, 0, 660, 651, 0, 667, 668,
	669, 670, 671, 672, 0, 673, 674, 0, 675, 758,
	759, 760, 761, 0, 687, 0, 676, 678, 679, 680,
	681, 762, 682, 763, 0, 683, 684, 685, 686, 677,
	688, 689, 0, 0, 690, 691, 693, 695, 696, 692,
	694, 697, 0, 698, 0, 0, 699, 700, 701, 764,
	765, 766, 0, 703, 702, 704, 705, 706, 767, 707,
	708, 709, 874, 0, 300, 0, 710, 711, 768, 712,
	713, 714, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 306, 307, 309, 308, 310, 311, 312, 313, 0,
	314, 315, 0, 0, 0, 0, 0, 715, 0, 0,
	0, 316, 0, 317, 318, 319, 0, 320, 321, 322,
	323, 324, 325, 326, 716, 717, 0, 327, 718, 328,
	719, 0, 720, 329, 330, 331, 332, 333, 334, 335,
	0, 0, 0, 336, 721, 722, 723, 0, 337, 338,
	724, 0, 0, 0, 339, 340, 341, 342, 343, 344,
	345, 346, 0, 0, 348, 349, 350, 347, 351, 0,
	352, 0, 353, 354, 355, 356, 357, 358, 359, 0,
	360, 361, 362, 0, 363, 364, 365, 0, 0, 0,
	0, 0, 0, 0, 366, 367, 368, 369, 370, 0,
	371, 373, 725, 726, 0, 376, 378, 372, 374, 0,
	377, 375, 379, 0, 380, 381, 382, 0, 0, 383,
	384, 385, 0, 386, 387, 388, 0, 389, 390, 391,
	0, 392, 393, 727, 394, 395, 396, 398, 400, 397,
	399, 401, 402, 403, 404, 405, 728, 729, 406, 0,
	0, 0, 0, 0, 0, 0, 407, 408, 409, 730,
	0, 0, 0, 410, 0, 411, 412, 413, 0, 414,
	415, 0, 0, 416, 417, 418, 731, 732, 419, 420,
	421, 422, 423, 424, 425, 426, 427, 0, 428, 733,
	0, 734, 429, 0, 430, 431, 432, 433, 434, 435,
	436, 735, 736, 737, 529, 0, 437, 438, 439, 0,
	440, 441, 442, 443, 444, 0, 0, 0, 0, 445,
	446, 447, 0, 0, 738, 448, 530, 449, 739, 740,
	0, 741, 0, 450, 451, 453, 0, 742, 0, 452,
	454, 455, 0, 456, 0, 0, 0, 457, 458, 459,
	460, 461, 462, 0, 463, 465, 464, 0, 467, 743,
	466, 0, 468, 469, 0, 0, 470, 471, 472, 473,
	474, 475, 478, 0, 0, 476, 477, 479, 480, 0,
	481, 482, 484, 487, 483, 485, 486, 488, 501, 502,
	489, 490, 491, 492, 493, 494, 495, 496, 497, 498,
	499, 500, 504, 0, 503, 0, 505, 506, 507, 508,
	509, 516, 518, 519, 514, 515, 517, 520, 521, 523,
	511, 512, 513, 0, 522, 510, 0, 0, 0, 524,
	525, 526, 527, 0, 744, 528, 745, 531, 532, 0,
	0, 533, 0, 534, 0, 0, 536, 537, 538, 0,
	0, 539, 540, 746, 0, 541, 0, 747, 542, 543,
	535, 544, 545, 546, 547, 548, 549, 550, 551, 552,
	553, 0, 554, 555, 748, 556, 557, 558, 749, 559,
	560, 561, 750, 562, 751, 563, 564, 0, 565, 566,
	567, 0, 568, 569, 570, 571, 572, 573, 574, 575,
	752, 576, 577, 579, 578, 580, 0, 581, 0, 582,
	583, 584, 0, 0, 0, 0, 0, 585, 586, 588,
	0, 589, 590, 591, 592, 587, 593, 594, 595, 596,
	597, 598, 0, 600, 601, 599, 602, 603, 0, 604,
	605, 606, 607, 608, 753, 609, 0, 610, 611, 618,
	619, 620, 612, 613, 614, 621, 622, 623, 624, 625,
	626, 0, 628, 629, 627, 630, 631, 632, 0, 633,
	754, 634, 615, 616, 635, 636, 0, 637, 638, 639,
	640, 641, 642, 643, 755, 0, 644, 0, 645, 646,
	647, 648, 649, 650, 652, 617, 653, 658, 659, 756,
	654, 655, 656, 657, 757, 661, 662, 663, 664, 0,
	665, 666, 0, 660, 651, 0, 667, 668, 669, 670,
	671, 672, 0, 673, 674, 0, 675, 758, 759, 760,
	761, 0, 687, 0, 676, 678, 679, 680, 681, 762,
	682, 763, 0, 683, 684, 685, 686, 677, 688, 689,
	0, 0, 690, 691, 693, 695, 696, 692, 694, 697,
	0, 698, 0, 0, 699, 700, 701, 764, 765, 766,
	0, 703, 702, 704, 705, 706, 767, 707, 708, 709,
	854, 0, 300, 0, 710, 711, 768, 712, 713, 714,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 306,
	307, 309, 308, 310, 311, 312, 313, 0, 314, 315,
	0, 0, 0, 0, 0, 715, 0, 0, 0, 316,
	0, 317, 318, 319, 0, 320, 321, 322, 323, 324,
	325, 326, 716, 717, 0, 327, 718, 328, 719, 0,
	720, 329, 330, 331, 332, 333, 334, 335, 0, 0,
	0, 336, 721, 722, 723, 0, 337, 850, 724, 0,
	0, 0, 339, 340, 341, 342, 343, 344, 345, 346,
	0, 0, 348, 349, 350, 347, 351, 0, 849, 0,
	353, 354, 355, 356, 357, 358, 359, 0, 360, 361,
	362, 0, 363, 364, 365, 0, 0, 0, 0, 0,
	0, 0, 366, 367, 368, 369, 370, 0, 371, 373,
	725, 726, 0, 376, 378, 372, 374, 0, 377, 375,
	379, 0, 380, 381, 382, 0, 0, 383, 384, 385,
	0, 386, 387, 388, 0, 389, 390, 391, 0, 392,
	393, 727, 394, 395, 396, 398, 400, 397, 399, 401,
	402, 403, 404, 405, 728, 729, 406, 0, 0, 0,
	0, 0, 0, 0, 407, 408, 409, 730, 0, 0,
	0, 410, 0, 411, 412, 413, 0, 414, 415, 0,
	0, 416, 417, 418, 731, 732, 419, 420, 421, 422,
	423, 424, 425, 426, 427, 0, 428, 733, 0, 734,
	429, 0, 430, 431, 432, 433, 434, 435, 436, 735,
	736, 737, 529, 0, 437, 438, 439, 0, 440, 441,
	442, 443, 444, 0, 0, 0, 0, 445, 446, 447,
	0, 0, 738, 448, 530, 449, 739, 740, 0, 741,
	0, 450, 451, 453, 0, 742, 0, 452, 454, 455,
	0, 456, 0, 0, 0, 457, 458, 459, 460, 461,
	462, 0, 463, 465, 464, 0, 467, 743, 466, 0,
	468, 469, 0, 0, 470, 471, 472, 473, 474, 855,
	478, 0, 0, 476, 477, 479, 480, 0, 481, 482,
	484, 487, 483, 485, 486, 488, 501, 502, 489, 490,
	491, 492, 493, 494, 495, 496, 497, 498, 499, 500,
	504, 0, 864, 0, 505, 506, 507, 508, 509, 516,
	518, 519, 514, 515, 517, 520, 521, 523, 511, 512,
	513, 0, 522, 510, 0, 0, 0, 524, 525, 526,
	527, 0, 744, 528, 745, 531, 532, 0, 0, 533,
	0, 534, 0, 0, 536, 537, 538, 0, 0, 539,
	540, 746, 0, 541, 0, 747, 542, 543, 535, 544,
	545, 546, 547, 548, 549, 550, 551, 552, 553, 0,
	554, 555, 748, 556, 557, 558, 749, 559, 560, 561,
	750, 562, 751, 563, 564, 0, 565, 566, 567, 0,
	568, 569, 570, 571, 572, 573, 574, 575, 752, 576,
	577, 579, 578, 580, 0, 581, 0, 582, 583, 584,
	0, 0, 0, 0, 0, 585, 586, 588, 0, 589,
	590, 591, 592, 587, 593, 594, 595, 596, 597, 598,
	0, 600, 601, 599, 602, 603, 0, 863, 605, 606,
	607, 608, 851, 609, 0, 610, 611, 618, 619, 620,
	612, 613, 614, 862, 622, 623, 624, 625, 626, 0,
	628, 629, 627, 630, 852, 632, 0, 633, 754, 634,
	615, 616, 635, 636, 0, 637, 638, 639, 640, 641,
	642, 643, 755, 0, 644, 0, 645, 646, 647, 648,
	649, 650, 652, 617, 653, 658, 659, 756, 654, 655,
	656, 657, 757, 661, 662, 663, 664, 0, 665, 666,
	0, 660, 651, 0, 667, 668, 669, 670, 671, 672,
	0, 673, 674, 0, 675, 860, 759, 760, 761, 0,
	687, 0, 676, 856, 679, 680, 681, 762, 682, 763,
	0, 683, 684, 685, 686, 677, 688, 689, 0, 0,
	690, 691, 693, 695, 696, 692, 694, 697, 0, 698,
	0, 0, 699, 700, 701, 764, 765, 766, 0, 703,
	702, 704, 705, 706, 767, 707, 708, 709, 843, 0,
	300, 0, 710, 711, 768, 712, 713, 714, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 306, 307, 309,
	308, 310, 311, 312, 313, 0, 314, 315, 0, 0,
	0, 0, 0, 715, 0, 0, 0, 316, 0, 317,
	318, 319, 0, 320, 321, 322, 323, 324, 325, 326,
	716, 717, 0, 327, 718, 328, 719, 0, 720, 329,
	330, 331, 332, 333, 334, 335, 0, 0, 0, 336,
	721, 722, 723, 0, 337, 338, 724, 0, 0, 0,
	339, 340, 341, 342, 343, 344, 345, 346, 0, 0,
	348, 349, 350, 347, 351, 0, 352, 0, 353, 354,
	355, 356, 357, 358, 359, 0, 360, 361, 362, 0,
	363, 364, 365, 0, 0, 0, 0, 0, 0, 0,
	366, 367, 368, 369, 370, 0, 371, 373, 725, 726,
	0, 376, 378, 372, 374, 0, 377, 375, 379, 0,
	380, 381, 382, 0, 0, 383, 384, 385, 0, 386,
	387, 388, 0, 389, 390, 391, 0, 392, 393, 727,
	394, 395, 396, 398, 400, 397, 399, 401, 402, 403,
	404, 405, 728, 729, 406, 0, 0, 0, 0, 0,
	0, 0, 407, 408, 409, 730, 0, 0, 0, 410,
	0, 411, 412, 413, 0, 414, 415, 0, 0, 416,
	417, 418, 731, 732, 419, 420, 421, 422, 423, 424,
	425, 426, 427, 0, 428, 733, 0, 734, 429, 0,
	430, 431, 432, 433, 434, 435, 436, 735, 736, 737,
	529, 0, 437, 438, 439, 0, 440, 441, 442, 443,
	444, 0, 0, 0, 0, 445, 446, 447, 0, 0,
	738, 448, 530, 449, 739, 740, 0, 741, 0, 450,
	451, 453, 0, 742, 0, 452, 454, 455, 0, 456,
	0, 0, 0, 457, 458, 459, 460, 461, 462, 0,
	463, 465, 464, 0, 467, 743, 466, 0, 468, 469,
	0, 0, 470, 471, 472, 473, 474, 475, 478, 0,
	0, 476, 477, 479, 480, 0, 481, 482, 484, 487,
	483, 485, 486, 488, 501, 502, 489, 490, 491, 492,
	493, 494, 495, 496, 497, 498, 499, 500, 504, 0,
	503, 0, 505, 506, 507, 508, 509, 516, 518, 519,
	514, 515, 517, 520, 521, 523, 511, 512, 513, 0,
	522, 510, 0, 0, 0, 524, 525, 526, 527, 0,
	744, 528, 745, 531, 532, 0, 0, 533, 0, 534,
	0, 0, 536, 537, 538, 0, 0, 539, 540, 746,
	0, 541, 0, 747, 542, 543, 535, 544, 545, 546,
	547, 548, 549, 550, 551, 552, 553, 0, 554, 555,
	748, 556, 557, 558, 749, 559, 560, 561, 750, 562,
	751, 563, 564, 0, 565, 566, 567, 0, 568, 569,
	570, 571, 572, 573, 574, 575, 752, 576, 577, 579,
	578, 580, 0, 581, 0, 582, 583, 584, 0, 0,
	0, 0, 0, 585, 586, 588, 0, 589, 590, 591,
	592, 587, 593, 594, 595, 596, 597, 598, 0, 600,
	601, 599, 602, 603, 0, 604, 605, 606, 607, 608,
	753, 609, 0, 610, 611, 844, 619, 620, 612, 613,
	614, 621, 622, 623, 624, 625, 626, 0, 628, 629,
	627, 630, 631, 632, 0, 633, 754, 634, 615, 616,
	635, 636, 0, 637, 638, 639, 640, 641, 642, 643,
	755, 0, 644, 0, 645, 646, 647, 648, 649, 650,
	652, 617, 653, 658, 659, 756, 654, 655, 656, 657,
	757, 661, 662, 663, 664, 0, 665, 666, 0, 660,
	651, 0, 667, 668, 669, 670, 671, 672, 0, 673,
	674, 0, 675, 758, 759, 760, 761, 0, 687, 0,
	676, 678, 679, 680, 681, 762, 682, 763, 0, 683,
	684, 685, 686, 677, 688, 689, 0, 0, 690, 691,
	693, 695, 696, 692, 694, 697, 0, 698, 0, 0,
	699, 700, 701, 764, 765, 766, 0, 703, 702, 704,
	705, 706, 767, 707, 708, 709, 805, 0, 300, 0,
	710, 711, 768, 712, 713, 714, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 306, 307, 309, 308, 310,
	311, 312, 313, 0, 314, 315, 0, 0, 0, 0,
	0, 715, 0, 0, 0, 316, 0, 317, 318, 319,
	0, 320, 321, 322, 323, 324, 325, 326, 716, 717,
	0, 327, 718, 328, 719, 0, 720, 329, 330, 331,
	332, 333, 334, 335, 0, 0, 0, 336, 721, 722,
	723, 0, 337, 338, 724, 0, 0, 0, 339, 340,
	341, 342, 343, 344, 345, 346, 0, 0, 348, 349,
	350, 347, 351, 0, 352, 0, 353, 354, 355, 356,
	357, 358, 359, 0, 360, 361, 362, 0, 363, 364,
	365, 0, 0, 0, 0, 0, 0, 0, 366, 367,
	368, 369, 370, 0, 371, 373, 725, 726, 0, 376,
	378, 372, 374, 0, 377, 375, 379, 0, 380, 381,
	382, 0, 0, 383, 384, 385, 0, 386, 387, 388,
	0, 389, 390, 391, 0, 392, 393, 727, 394, 395,
	396, 398, 400, 397, 399, 401, 402, 403, 404, 405,
	728, 729, 406, 0, 0, 0, 0, 0, 0, 0,
	407, 408, 409, 730, 0, 0, 0, 410, 0, 411,
	412, 413, 0, 414, 415, 0, 0, 416, 417, 418,
	731, 732, 419, 420, 421, 422, 423, 424, 425, 426,
	427, 0, 428, 733, 0, 734, 429, 0, 430, 431,
	432, 433, 434, 435, 436, 735, 736, 737, 529, 0,
	437, 438, 439, 0, 440, 441, 442, 443, 444, 0,
	0, 0, 0, 445, 446, 447, 0, 0, 738, 448,
	530, 449, 739, 740, 0, 741, 0, 450, 451, 453,
	0, 742, 0, 452, 454, 455, 0, 456, 0, 0,
	0, 457, 458, 459, 460, 461, 462, 0, 463, 465,
	464, 0, 467, 743, 466, 0, 468, 469, 0, 0,
	470, 471, 472, 473, 474, 475, 478, 0, 0, 476,
	477, 479, 480, 0, 481, 482, 484, 487, 483, 485,
	486, 488, 501, 502, 489, 490, 491, 492, 493, 494,
	495, 496, 497, 498, 499, 500, 504, 0, 503, 0,
	505, 506, 507, 508, 509, 516, 518, 519, 514, 515,
	517, 520, 521, 523, 511, 512, 513, 0, 522, 510,
	0, 0, 0, 524, 525, 526, 527, 0, 744, 528,
	745, 531, 532, 0, 0, 533, 0, 534, 0, 0,
	536, 537, 538, 0, 0, 539, 540, 746, 0, 541,
	0, 747, 542, 543, 535, 544, 545, 546, 547, 548,
	549, 550, 551, 552, 553, 0, 554, 555, 748, 556,
	557, 558, 749, 559, 560, 561, 750, 562, 751, 563,
	564, 0, 565, 566, 567, 0, 568, 569, 570, 571,
	572, 573, 574, 575, 752, 576, 577, 579, 578, 580,
	0, 581, 0, 582, 583, 584, 0, 0, 0, 0,
	0, 585, 586, 588, 0, 589, 590, 591, 592, 587,
	593, 594, 595, 596, 597, 598, 0, 600, 601, 599,
	602, 603, 0, 604, 605, 606, 607, 608, 753, 609,
	0, 610, 611, 618, 619, 620, 612, 613, 614, 621,
	622, 623, 624, 625, 626, 0, 628, 629, 627, 630,
	631, 632, 0, 633, 754, 634, 615, 616, 635, 636,
	0, 637, 638, 639, 640, 641, 642, 643, 755, 0,
	644, 0, 645, 646, 647, 648, 649, 650, 652, 617,
	653, 658, 659, 756, 654, 655, 656, 657, 757, 661,
	662, 663, 664, 0, 665, 666, 0, 660, 651, 0,
	667, 668, 669, 670, 671, 672, 0, 673, 674, 0,
	675, 758, 759, 760, 761, 0, 687, 0, 676, 678,
	679, 680, 681, 762, 682, 763, 0, 683, 684, 685,
	686, 677, 688, 689, 0, 0, 690, 691, 693, 695,
	696, 692, 694, 697, 0, 698, 0, 0, 699, 700,
	701, 764, 765, 766, 0, 703, 702, 704, 705, 706,
	767, 707, 708, 709, 797, 0, 300, 0, 710, 711,
	768, 712, 713, 714, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 306, 307, 309, 308, 310, 311, 312,
	313, 0, 314, 315, 0, 0, 0, 0, 0, 715,
	0, 0, 0, 316, 0, 317, 318, 319, 0, 320,
	321, 322, 323, 324, 325, 326, 716, 717, 0, 327,
	718, 328, 719, 0, 720, 329, 330, 331, 332, 333,
	334, 335, 0, 0, 0, 336, 721, 722, 723, 0,
	337, 338, 724, 0, 0, 0, 339, 340, 341, 342,
	343, 344, 345, 346, 0, 0, 348, 349, 350, 347,
	351, 0, 352, 0, 353, 354, 355, 356, 357, 358,
	359, 0, 360, 361, 362, 0, 363, 364, 365, 0,
	0, 0, 0, 0, 0, 0, 366, 367, 368, 369,
	370, 0, 371, 373, 725, 726, 0, 376, 378, 372,
	374, 0, 377, 375, 379, 0, 380, 381, 382, 0,
	0, 383, 384, 385, 0, 386, 387, 388, 0, 389,
	390, 391, 0, 392, 393, 727, 394, 395, 396, 398,
	400, 397, 399, 401, 402, 403, 404, 405, 728, 729,
	406, 0, 0, 0, 0, 0, 0, 0, 407, 408,
	409, 730, 0, 0, 0, 410, 0, 411, 412, 413,
	0, 414, 415, 0, 0, 416, 417, 418, 731, 732,
	419, 420, 421, 422, 423, 424, 425, 426, 427, 0,
	428, 733, 0, 734, 429, 0, 430, 431, 432, 433,
	434, 435, 436, 735, 736, 737, 529, 0, 437, 438,
	439, 0, 440, 441, 442, 443, 444, 0, 0, 0,
	0, 445, 446, 447, 0, 0, 738, 448, 530, 449,
	739, 740, 0, 741, 0, 450, 451, 453, 0, 742,
	0, 452, 454, 455, 0, 456, 0, 0, 0, 457,
	458, 459, 460, 461, 462, 0, 463, 465, 464, 0,
	467, 743, 466, 0, 468, 469, 0, 0, 470, 471,
	472, 473, 474, 475, 478, 0, 0, 476, 477, 479,
	480, 0, 481, 482, 484, 487, 483, 485, 486, 488,
	501, 502, 489, 490, 491, 492, 493, 494, 495, 496,
	497, 498, 499, 500, 504, 0, 503, 0, 505, 506,
	507, 508, 509, 516, 518, 519, 514, 515, 517, 520,
	521, 523, 511, 512, 513, 0, 522, 510, 0, 0,
	0, 524, 525, 526, 527, 0, 744, 528, 745, 531,
	532, 0, 0, 533, 0, 534, 0, 0, 536, 537,
	538, 0, 0, 539, 540, 746, 0, 541, 0, 747,
	542, 543, 535, 544, 545, 546, 547, 548, 549, 550,
	551, 552, 553, 0, 554, 555, 748, 556, 557, 558,
	749, 559, 560, 561, 750, 562, 751, 563, 564, 0,
	565, 566, 567, 0, 568, 569, 570, 571, 572, 573,
	574, 575, 752, 576, 577, 579, 578, 580, 0, 581,
	0, 582, 583, 584, 0, 0, 0, 0, 0, 585,
	586, 588, 0, 589, 590, 591, 592, 587, 593, 594,
	595, 596, 597, 598, 0, 600, 601, 599, 602, 603,
	0, 604, 605, 606, 607, 608, 753, 609, 0, 610,
	611, 618, 619, 620, 612, 613, 614, 621, 622, 623,
	624, 625, 626, 0, 628, 629, 627, 630, 631, 632,
	0, 633, 754, 634, 615, 616, 635, 636, 0, 637,
	638, 639, 640, 641, 642, 643, 755, 0, 644, 0,
	645, 646, 647, 648, 649, 650, 652, 617, 653, 658,
	659, 756, 654, 655, 656, 657, 757, 661, 662, 663,
	664, 0, 665, 666, 0, 660, 651, 0, 667, 668,
	669, 670, 671, 672, 0, 673, 674, 0, 675, 758,
	759, 760, 761, 0, 687, 0, 676, 678, 679, 680,
	681, 762, 682, 763, 0, 683, 684, 685, 686, 677,
	688, 689, 0, 0, 690, 691, 693, 695, 696, 692,
	694, 697, 0, 698, 0, 0, 699, 700, 701, 764,
	765, 766, 0, 703, 702, 704, 705, 706, 767, 707,
	708, 709, 774, 0, 300, 0, 710, 711, 768, 712,
	713, 714, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 306, 307, 309, 308, 310, 311, 312, 313, 0,
	314, 315, 0, 0, 0, 0, 0, 715, 0, 0,
	0, 316, 0, 317, 318, 319, 0, 320, 321, 322,
	323, 324, 325, 326, 716, 717, 0, 327, 718, 328,
	719, 0, 720, 329, 330, 331, 332, 333, 334, 335,
	0, 0, 0, 336, 721, 722, 723, 0, 337, 338,
	724, 0, 0, 0, 339, 340, 341, 342, 343, 344,
	345, 346, 0, 0, 348, 349, 350, 347, 351, 0,
	352, 0, 353, 354, 355, 356, 357, 358, 359, 0,
	360, 361, 362, 0, 363, 364, 365, 0, 0, 0,
	0, 0, 0, 0, 366, 367, 368, 369, 370, 0,
	371, 373, 725, 726, 0, 376, 378, 372, 374, 0,
	377, 375, 379, 0, 380, 381, 382, 0, 0, 383,
	384, 385, 0, 386, 387, 388, 0, 389, 390, 391,
	0, 392, 393, 727, 394, 395, 396, 398, 400, 397,
	399, 401, 402, 403, 404, 405, 728, 729, 406, 0,
	0, 0, 0, 0, 0, 0, 407, 408, 409, 730,
	0, 0, 0, 410, 0, 411, 412, 413, 0, 414,
	415, 0, 0, 416, 417, 418, 731, 732, 419, 420,
	421, 422, 423, 424, 425, 426, 427, 0, 428, 733,
	0, 734, 429, 0, 430, 431, 432, 433, 434, 435,
	436, 735, 736, 737, 529, 0, 437, 438, 439, 0,
	440, 441, 442, 443, 444, 0, 0, 0, 0, 445,
	446, 447, 0, 0, 738, 448, 530, 449, 739, 740,
	0, 741, 0, 450, 451, 453, 0, 742, 0, 452,
	454, 455, 0, 456, 0, 0, 0, 457, 458, 459,
	460, 461, 462, 0, 463, 465, 464, 0, 467, 743,
	466, 0, 468, 469, 0, 0, 470, 471, 472, 473,
	474, 475, 478, 0, 0, 476, 477, 479, 480, 0,
	481, 482, 484, 487, 483, 485, 486, 488, 501, 502,
	489, 490, 491, 492, 493, 494, 495, 496, 497, 498,
	499, 500, 504, 0, 503, 0, 505, 506, 507, 508,
	509, 516, 518, 519, 514, 515, 517, 520, 521, 523,
	511, 512, 513, 0, 522, 510, 0, 0, 0, 524,
	525, 526, 527, 0, 744, 528, 745, 531, 532, 0,
	0, 533, 0, 534, 0, 0, 536, 537, 538, 0,
	0, 539, 540, 746, 0, 541, 0, 747, 542, 543,
	535, 544, 545, 546, 547, 548, 549, 550, 551, 552,
	553, 0, 554, 555, 748, 556, 557, 558, 749, 559,
	560, 561, 750, 562, 751, 563, 564, 0, 565, 566,
	567, 0, 568, 569, 570, 571, 572, 573, 574, 575,
	752, 576, 577, 579, 578, 580, 0, 581, 0, 582,
	583, 584, 0, 0, 0, 0, 0, 585, 586, 588,
	0, 589, 590, 591, 592, 587, 593, 594, 595, 596,
	597, 598, 0, 600, 601, 599, 602, 603, 0, 604,
	605, 606, 607, 608, 753, 609, 0, 610, 611, 618,
	619, 620, 612, 613, 614, 621, 622, 623, 624, 625,
	626, 0, 628, 629, 627, 630, 631, 632, 0, 633,
	754, 634, 615, 616, 635, 636, 0, 637, 638, 639,
	640, 641, 642, 643, 755, 0, 644, 0, 645, 646,
	647, 648, 649, 650, 652, 617, 653, 658, 659, 756,
	654, 655, 656, 657, 757, 661, 662, 663, 664, 0,
	665, 666, 0, 660, 651, 0, 667, 668, 669, 670,
	671, 672, 0, 673, 674, 0, 675, 758, 759, 760,
	761, 0, 687, 0, 676, 678, 679, 680, 681, 762,
	682, 763, 0, 683, 684, 685, 686, 677, 688, 689,
	0, 0, 690, 691, 693, 695, 696, 692, 694, 697,
	0, 698, 0, 0, 699, 700, 701, 764, 765, 766,
	0, 703, 702, 704, 705, 706, 767, 707, 708, 709,
	300, 0, 0, 0, 710, 711, 768, 712, 713, 714,
	0, 0, 0, 0, 0, 0, 0, 306, 307, 309,
	308, 310, 311, 312, 313, 0, 314, 315, 0, 0,
	0, 0, 0, 715, 0, 0, 0, 316, 0, 317,
	318, 319, 0, 320, 321, 322, 323, 324, 325, 326,
	716, 717, 0, 327, 718, 328, 719, 0, 720, 329,
	330, 331, 332, 333, 334, 335, 0, 0, 0, 336,
	721, 722, 723, 0, 337, 338, 724, 0, 0, 0,
	339, 340, 341, 342, 343, 344, 345, 346, 0, 0,
	348, 349, 350, 347, 351, 0, 352, 0, 353, 354,
	355, 356, 357, 358, 359, 0, 360, 361, 362, 0,
	363, 364, 365, 0, 0, 0, 0, 0, 0, 0,
	366, 367, 368, 369, 370, 0, 371, 373, 725, 726,
	0, 376, 378, 372, 374, 0, 377, 375, 379, 0,
	380, 381, 382, 0, 0, 383, 384, 385, 0, 386,
	387, 388, 0, 389, 390, 391, 0, 392, 393, 727,
	394, 395, 396, 398, 400, 397, 399, 401, 402, 403,
	404, 405, 728, 729, 406, 0, 0, 0, 0, 0,
	0, 0, 407, 408, 409, 730, 0, 0, 0, 410,
	0, 411, 412, 413, 0, 414, 415, 0, 0, 416,
	417, 418, 731, 732, 419, 420, 421, 422, 423, 424,
	425, 426, 427, 0, 428, 733, 0, 734, 429, 0,
	430, 431, 432, 433, 434, 435, 436, 735, 736, 737,
	529, 0, 437, 438, 439, 0, 440, 441, 442, 443,
	444, 0, 0, 0, 0, 445, 446, 447, 0, 0,
	738, 448, 530, 449, 739, 740, 0, 741, 0, 450,
	451, 453, 0, 742, 0, 452, 454, 455, 0, 456,
	0, 0, 0, 457, 458, 459, 460, 461, 462, 0,
	463, 465, 464, 0, 467, 743, 466, 0, 468, 469,
	0, 0, 470, 471, 472, 473, 474, 475, 478, 0,
	0, 476, 477, 479, 480, 0, 481, 482, 484, 487,
	483, 485, 486, 488, 501, 502, 489, 490, 491, 492,
	493, 494, 495, 496, 497, 498, 499, 500, 504, 0,
	503, 0, 505, 506, 507, 508, 509, 516, 518, 519,
	514, 515, 517, 520, 521, 523, 511, 512, 513, 0,
	522, 510, 0, 0, 0, 524, 525, 526, 527, 0,
	744, 528, 745, 531, 532, 0, 0, 533, 0, 534,
	0, 0, 536, 537, 538, 0, 0, 539, 540, 746,
	0, 541, 0, 747, 542, 543, 535, 544, 545, 546,
	547, 548, 549, 550, 551, 552, 553, 0, 554, 555,
	748, 556, 557, 558, 749, 559, 560, 561, 750, 562,
	751, 563, 564, 0, 565, 566, 567, 0, 568, 569,
	570, 571, 572, 573, 574, 575, 752, 576, 577, 579,
	578, 580, 0, 581, 0, 582, 583, 584, 0, 0,
	0, 0, 0, 585, 586, 588, 0, 589, 590, 591,
	592, 587, 593, 594, 595, 596, 597, 598, 0, 600,
	601, 599, 602, 603, 0, 604, 605, 606, 607, 608,
	753, 609, 0, 610, 611, 618, 619, 620, 612, 613,
	614, 621, 622, 623, 624, 625, 626, 0, 628, 629,
	627, 630, 631, 632, 0, 633, 754, 634, 615, 616,
	635, 636, 0, 637, 638, 639, 640, 641, 642, 643,
	755, 0, 644, 0, 645, 646, 647, 648, 649, 650,
	652, 617, 653, 658, 659, 756, 654, 655, 656, 657,
	757, 661, 662, 663, 664, 0, 665, 666, 0, 660,
	651, 0, 667, 668, 669, 670, 671, 672, 0, 673,
	674, 0, 675, 758, 759, 760, 761, 0, 687, 0,
	676, 678, 679, 680, 681, 762, 682, 763, 0, 683,
	684, 685, 686, 677, 688, 689, 0, 0, 690, 691,
	693, 695, 696, 692, 694, 697, 0, 698, 0, 0,
	699, 700, 701, 764, 765, 766, 0, 703, 702, 704,
	705, 706, 767, 707, 708, 709, 300, 0, 0, 0,
	710, 711, 768, 712, 713, 714, 0, 0, 0, 0,
	0, 0, 0, 306, 307, 309, 308, 310, 311, 312,
	313, 0, 314, 315, 0, 0, 0, 0, 0, 715,
	0, 0, 0, 316, 0, 317, 318, 319, 0, 320,
	321, 322, 323, 324, 325, 326, 716, 717, 0, 327,
	718, 328, 719, 0, 720, 329, 330, 331, 332, 333,
	334, 335, 0, 0, 0, 336, 721, 722, 723, 0,
	337, 338, 724, 0, 0, 0, 339, 340, 341, 342,
	343, 344, 345, 346, 0, 0, 348, 349, 350, 347,
	351, 0, 352, 0, 353, 354, 355, 356, 357, 358,
	359, 0, 360, 361, 362, 0, 363, 364, 365, 0,
	0, 0, 0, 0, 0, 0, 366, 367, 368, 369,
	370, 0, 371, 373, 725, 726, 0, 376, 378, 372,
	374, 0, 377, 375, 379, 0, 380, 381, 382, 0,
	0, 383, 384, 385, 0, 386, 387, 388, 0, 389,
	390, 391, 0, 392, 393, 727, 394, 395, 396, 398,
	400, 397, 399, 401, 402, 403, 404, 405, 728, 729,
	406, 0, 0, 0, 0, 0, 0, 0, 407, 408,
	409, 730, 0, 0, 0, 410, 0, 411, 412, 413,
	0, 414, 415, 0, 0, 416, 417, 418, 731, 732,
	419, 420, 421, 422, 423, 424, 425, 426, 427, 0,
	428, 733, 0, 734, 429, 0, 430, 431, 432, 433,
	434, 435, 436, 4000, 736, 737, 529, 0, 437, 438,
	439, 0, 440, 441, 442, 443, 444, 0, 0, 0,
	0, 445, 446, 447, 0, 0, 738, 448, 530, 449,
	739, 740, 0, 741, 0, 450, 451, 453, 0, 742,
	0, 452, 454, 455, 0, 456, 0, 0, 0, 457,
	458, 459, 460, 461, 462, 0, 463, 465, 464, 0,
	467, 743, 466, 0, 468, 469, 0, 0, 470, 471,
	472, 473, 474, 475, 478, 0, 0, 476, 477, 479,
	480, 0, 481, 482, 484, 487, 483, 485, 486, 488,
	501, 502, 489, 490, 491, 492, 493, 494, 495, 496,
	497, 498, 499, 500, 504, 0, 503, 0, 505, 506,
	507, 508, 509, 516, 518, 519, 514, 515, 517, 520,
	521, 523, 511, 512, 513, 0, 522, 510, 0, 0,
	0, 524, 525, 526, 527, 0, 744, 528, 745, 531,
	532, 0, 0, 533, 0, 534, 0, 0, 536, 537,
	538, 0, 0, 539, 540, 746, 0, 541, 0, 747,
	542, 543, 535, 544, 545, 546, 547, 548, 549, 550,
	551, 552, 553, 0, 554, 555, 748, 556, 557, 558,
	749, 559, 560, 561, 750, 562, 751, 563, 564, 0,
	565, 566, 567, 0, 568, 569, 570, 571, 572, 573,
	574, 575, 752, 576, 577, 579, 578, 580, 0, 581,
	0, 582, 583, 584, 0, 0, 0, 0, 0, 585,
	586, 588, 0, 589, 590, 591, 592, 587, 593, 594,
	595, 596, 597, 598, 0, 600, 601, 599, 602, 603,
	0, 604, 605, 606, 607, 608, 753, 609, 0, 610,
	611, 618, 619, 620, 612, 613, 614, 621, 622, 623,
	624, 625, 626, 0, 628, 629, 627, 630, 631, 632,
	0, 633, 754, 634, 615, 616, 635, 636, 0, 637,
	638, 639, 640, 641, 642, 643, 755, 0, 644, 0,
	645, 646, 647, 648, 649, 650, 652, 617, 653, 658,
	659, 756, 654, 655, 656, 657, 757, 661, 662, 663,
	664, 0, 665, 666, 0, 660, 651, 0, 667, 668,
	669, 670, 671, 672, 0, 673, 674, 0, 675, 758,
	759, 760, 761, 0, 687, 0, 676, 678, 679, 680,
	681, 762, 682, 763, 0, 683, 684, 685, 686, 677,
	688, 689, 0, 0, 690, 691, 693, 695, 696, 692,
	694, 697, 0, 698, 0, 0, 699, 700, 701, 764,
	765, 766, 0, 703, 702, 704, 705, 706, 767, 707,
	708, 709, 300, 0, 0, 0, 710, 711, 768, 712,
	713, 714, 0, 0, 0, 0, 0, 0, 0, 306,
	307, 309, 308, 310, 311, 312, 313, 0, 314, 315,
	0, 0, 0, 0, 0, 715, 0, 0, 0, 316,
	0, 317, 318, 319, 0, 320, 321, 322, 323, 324,
	325, 326, 716, 717, 0, 327, 718, 328, 719, 0,
	720, 329, 330, 331, 332, 333, 334, 335, 0, 0,
	0, 336, 721, 722, 723, 0, 337, 338, 724, 0,
	0, 0, 339, 340, 341, 342, 343, 344, 345, 346,
	0, 0, 348, 349, 350, 347, 351, 0, 352, 0,
	353, 354, 355, 356, 357, 358, 359, 0, 360, 361,
	362, 0, 363, 364, 365, 0, 0, 0, 0, 0,
	0, 0, 366, 367, 368, 369, 370, 0, 371, 373,
	725, 726, 0, 376, 378, 372, 374, 0, 377, 375,
	379, 0, 380, 381, 382, 0, 0, 383, 384, 385,
	0, 386, 387, 388, 0, 389, 390, 391, 0, 392,
	393, 727, 394, 395, 396, 398, 400, 397, 399, 401,
	402, 403, 404, 405, 728, 729, 406, 0, 0, 0,
	0, 0, 0, 0, 407, 408, 409, 730, 0, 0,
	0, 410, 0, 411, 412, 413, 0, 414, 415, 0,
	0, 416, 417, 418, 731, 732, 419, 420, 421, 422,
	423, 424, 425, 426, 427, 0, 428, 733, 0, 734,
	429, 0, 430, 431, 432, 433, 434, 435, 436, 735,
	736, 737, 529, 0, 437, 438, 439, 0, 440, 441,
	442, 443, 444, 0, 0, 0, 0, 445, 446, 447,
	0, 0, 738, 448, 530, 449, 739, 740, 0, 741,
	0, 450, 451, 453, 0, 742, 0, 452, 454, 455,
	0, 456, 0, 0, 0, 457, 458, 459, 460, 461,
	462, 0, 463, 465, 464, 0, 467, 743, 466, 0,
	468, 469, 0, 0, 470, 471, 472, 473, 474, 475,
	478, 0, 0, 476, 477, 479, 480, 0, 481, 482,
	484, 487, 483, 485, 486, 488, 501, 502, 489, 490,
	491, 492, 493, 494, 495, 496, 497, 498, 499, 500,
	504, 0, 503, 0, 505, 506, 507, 508, 509, 516,
	518, 519, 514, 515, 517, 520, 521, 523, 511, 512,
	513, 0, 522, 510, 0, 0, 0, 524, 525, 526,
	527, 0, 744, 528, 745, 531, 532, 0, 0, 533,
	0, 534, 0, 0, 536, 537, 538, 0, 0, 539,
	540, 746, 0, 541, 0, 747, 542, 543, 535, 544,
	545, 546, 547, 548, 549, 550, 551, 552, 553, 0,
	554, 555, 748, 556, 557, 558, 749, 559, 560, 561,
	750, 562, 751, 563, 564, 0, 565, 566, 567, 0,
	568, 569, 570, 571, 572, 573, 574, 575, 752, 576,
	577, 579, 578, 580, 0, 581, 0, 582, 583, 584,
	0, 0, 0, 0, 0, 585, 586, 588, 0, 589,
	590, 591, 592, 587, 593, 594, 595, 596, 597, 598,
	0, 600, 601, 599, 602, 603, 0, 863, 605, 606,
	607, 608, 753, 609, 0, 610, 611, 618, 619, 620,
	612, 613, 614, 862, 622, 623, 624, 625, 626, 0,
	628, 629, 627, 630, 631, 632, 0, 633, 754, 634,
	615, 616, 635, 636, 0, 637, 638, 639, 640, 641,
	642, 643, 755, 0, 644, 0, 645, 646, 647, 648,
	649, 650, 652, 617, 653, 658, 659, 756, 654, 655,
	656, 657, 757, 661, 662, 663, 664, 0, 665, 666,
	0, 660, 651, 0, 667, 668, 669, 670, 671, 672,
	0, 673, 674, 0, 675, 860, 759, 760, 761, 0,
	687, 0, 676, 678, 679, 680, 681, 762, 682, 763,
	0, 683, 684, 685, 686, 677, 688, 689, 0, 0,
	690, 691, 693, 695, 696, 692, 694, 697, 0, 698,
	0, 0, 699, 700, 701, 764, 765, 766, 0, 703,
	702, 704, 705, 706, 767, 707, 708, 709, 300, 0,
	0, 0, 710, 711, 768, 712, 713, 714, 0, 0,
	0, 0, 0, 0, 0, 306, 307, 309, 308, 310,
	311, 312, 313, 0, 314, 315, 0, 0, 0, 0,
	0, 715, 0, 0, 0, 316, 0, 317, 318, 319,
	0, 320, 321, 322, 323, 324, 325, 326, 716, 717,
	0, 327, 718, 328, 719, 0, 720, 329, 330, 331,
	332, 333, 334, 335, 0, 0, 0, 336, 721, 722,
	723, 0, 337, 338, 724, 0, 0, 0, 339, 340,
	341, 342, 343, 344, 345, 346, 0, 0, 348, 349,
	350, 347, 351, 0, 352, 0, 353, 354, 355, 356,
	357, 358, 359, 0, 360, 361, 362, 0, 363, 364,
	365, 0, 0, 0, 0, 0, 0, 0, 366, 367,
	368, 369, 370, 0, 371, 373, 725, 726, 0, 376,
	378, 372, 374, 0, 377, 375, 379, 0, 380, 381,
	382, 0, 0, 383, 384, 385, 0, 386, 387, 388,
	0, 389, 390, 391, 0, 392, 393, 727, 394, 395,
	396, 398, 400, 397, 399, 401, 402, 403, 404, 405,
	728, 729, 406, 0, 0, 0, 0, 0, 0, 0,
	407, 408, 409, 730, 0, 0, 0, 410, 0, 411,
	412, 413, 0, 414, 415, 0, 0, 416, 417, 418,
	731, 732, 419, 420, 421, 422, 423, 424, 425, 426,
	427, 0, 428, 733, 0, 734, 429, 0, 430, 431,
	432, 433, 434, 435, 436, 3889, 736, 737, 529, 0,
	437, 438, 439, 0, 440, 441, 442, 443, 444, 0,
	0, 0, 0, 445, 446, 447, 0, 0, 738, 448,
	530, 449, 739, 740, 0, 741, 0, 450, 451, 453,
	0, 742, 0, 452, 454, 455, 0, 456, 0, 0,
	0, 457, 458, 459, 460, 461, 462, 0, 463, 465,
	464, 0, 467, 743, 466, 0, 468, 469, 0, 0,
	470, 471, 472, 473, 474, 475, 478, 0, 0, 476,
	477, 479, 480, 0, 481, 482, 484, 487, 483, 485,
	486, 488, 501, 502, 489, 490, 491, 492, 493, 494,
	495, 496, 497, 498, 499, 500, 504, 0, 503, 0,
	505, 506, 507, 508, 509, 516, 518, 519, 514, 515,
	517, 520, 521, 523, 511, 512, 513, 0, 522, 510,
	0, 0, 0, 524, 525, 526, 527, 0, 744, 528,
	745, 531, 532, 0, 0, 533, 0, 534, 0, 0,
	536, 537, 538, 0, 0, 539, 540, 746, 0, 541,
	0, 747, 542, 543, 535, 544, 545, 546, 547, 548,
	549, 550, 551, 552, 553, 0, 554, 555, 748, 556,
	557, 558, 749, 559, 560, 561, 750, 562, 751, 563,
	564, 0, 565, 566, 567, 0, 568, 569, 570, 571,
	572, 573, 574, 575, 752, 576, 577, 579, 578, 580,
	0, 581, 0, 582, 583, 584, 0, 0, 0, 0,
	0, 585, 586, 588, 0, 589, 590, 591, 592, 587,
	593, 594, 595, 596, 597, 598, 0, 600, 601, 599,
	602, 603, 0, 604, 605, 606, 607, 608, 753, 609,
	0, 610, 611, 618, 619, 620, 612, 613, 614, 621,
	622, 623, 624, 625, 626, 0, 628, 629, 627, 630,
	631, 632, 0, 633, 754, 634, 615, 616, 635, 636,
	0, 637, 638, 639, 640, 641, 642, 643, 755, 0,
	644, 0, 645, 646, 647, 648, 649, 650, 652, 617,
	653, 658, 659, 756, 654, 655, 656, 657, 757, 661,
	662, 663, 664, 0, 665, 666, 0, 660, 651, 0,
	667, 668, 669, 670, 671, 672, 0, 673, 674, 0,
	675, 758, 759, 760, 761, 0, 687, 0, 676, 678,
	679, 680, 681, 762, 682, 763, 0, 683, 684, 685,
	686, 677, 688, 689, 0, 0, 690, 691, 693, 695,
	696, 692, 694, 697, 0, 698, 0, 0, 699, 700,
	701, 764, 765, 766, 0, 703, 702, 704, 705, 706,
	767, 707, 708, 709, 300, 0, 0, 0, 710, 711,
	768, 712, 713, 714, 0, 0, 0, 0, 0, 0,
	0, 306, 307, 309, 308, 310, 311, 312, 313, 0,
	314, 315, 0, 0, 0, 0, 0, 715, 0, 0,
	0, 316, 0, 317, 318, 319, 0, 320, 321, 322,
	323, 324, 325, 326, 716, 717, 0, 327, 718, 328,
	719, 0, 720, 329, 330, 331, 332, 333, 334, 335,
	0, 0, 0, 336, 721, 722, 723, 0, 337, 338,
	724, 0, 0, 0, 339, 340, 341, 342, 343, 344,
	345, 346, 0, 0, 348, 349, 350, 347, 351, 0,
	352, 0, 353, 354, 355, 356, 357, 358, 359, 0,
	360, 361, 362, 0, 363, 364, 365, 0, 0, 0,
	0, 0, 0, 0, 366, 367, 368, 369, 370, 0,
	371, 373, 725, 726, 0, 376, 378, 372, 374, 0,
	377, 375, 379, 0, 380, 381, 382, 0, 0, 383,
	384, 385, 0, 386, 387, 388, 0, 389, 390, 391,
	0, 392, 393, 727, 394, 395, 396, 398, 400, 397,
	399, 401, 402, 403, 404, 405, 728, 729, 406, 0,
	0, 0, 0, 0, 0, 0, 407, 408, 409, 730,
	0, 0, 0, 410, 0, 411, 412, 413, 0, 414,
	415, 0, 0, 416, 417, 418, 731, 732, 419, 420,
	421, 422, 423, 424, 425, 426, 427, 0, 428, 733,
	0, 734, 429, 0, 430, 431, 432, 433, 434, 435,
	436, 3863, 736, 737, 529, 0, 437, 438, 439, 0,
	440, 441, 442, 443, 444, 0, 0, 0, 0, 445,
	446, 447, 0, 0, 738, 448, 530, 449, 739, 740,
	0, 741, 0, 450, 451, 453, 0, 742, 0, 452,
	454, 455, 0, 456, 0, 0, 0, 457, 458, 459,
	460, 461, 462, 0, 463, 465, 464, 0, 467, 743,
	466, 0, 468, 469, 0, 0, 470, 471, 472, 473,
	474, 475, 478, 0, 0, 476, 477, 479, 480, 0,
	481, 482, 484, 487, 483, 485, 486, 488, 501, 502,
	489, 490, 491, 492, 493, 494, 495, 496, 497, 498,
	499, 500, 504, 0, 503, 0, 505, 506, 507, 508,
	509, 516, 518, 519, 514, 515, 517, 520, 521, 523,
	511, 512, 513, 0, 522, 510, 0, 0, 0, 524,
	525, 526, 527, 0, 744, 528, 745, 531, 532, 0,
	0, 533, 0, 534, 0, 0, 536, 537, 538, 0,
	0, 539, 540, 746, 0, 541, 0, 747, 542, 543,
	535, 544, 545, 546, 547, 548, 549, 550, 551, 552,
	553, 0, 554, 555, 748, 556, 557, 558, 749, 559,
	560, 561, 750, 562, 751, 563, 564, 0, 565, 566,
	567, 0, 568, 569, 570, 571, 572, 573, 574, 575,
	752, 576, 577, 579, 578, 580, 0, 581, 0, 582,
	583, 584, 0, 0, 0, 0, 0, 585, 586, 588,
	0, 589, 590, 591, 592, 587, 593, 594, 595, 596,
	597, 598, 0, 600, 601, 599, 602, 603, 0, 604,
	605, 606, 607, 608, 753, 609, 0, 610, 611, 618,
	619, 620, 612, 613, 614, 621, 622, 623, 624, 625,
	626, 0, 628, 629, 627, 630, 631, 632, 0, 633,
	754, 634, 615, 616, 635, 636, 0, 637, 638, 639,
	640, 641, 642, 643, 755, 0, 644, 0, 645, 646,
	647, 648, 649, 650, 652, 617, 653, 658, 659, 756,
	654, 655, 656, 657, 757, 661, 662, 663, 664, 0,
	665, 666, 0, 660, 651, 0, 667, 668, 669, 670,
	671, 672, 0, 673, 674, 0, 675, 758, 759, 760,
	761, 0, 687, 0, 676, 678, 679, 680, 681, 762,
	682, 763, 0, 683, 684, 685, 686, 677, 688, 689,
	0, 0, 690, 691, 693, 695, 696, 692, 694, 697,
	0, 698, 0, 0, 699, 700, 701, 764, 765, 766,
	0, 703, 702, 704, 705, 706, 767, 707, 708, 709,
	300, 0, 0, 0, 710, 711, 768, 712, 713, 714,
	0, 0, 0, 0, 0, 0, 0, 306, 307, 309,
	308, 310, 311, 312, 313, 0, 314, 315, 0, 0,
	0, 0, 0, 715, 0, 0, 0, 316, 0, 317,
	318, 319, 0, 320, 321, 322, 323, 324, 325, 326,
	716, 717, 0, 327, 718, 328, 719, 0, 720, 329,
	330, 331, 332, 333, 334, 335, 0, 0, 0, 336,
	721, 722, 723, 0, 337, 338, 724, 0, 0, 0,
	339, 340, 341, 342, 343, 344, 345, 346, 0, 0,
	348, 349, 350, 347, 351, 0, 352, 0, 353, 354,
	355, 356, 357, 358, 359, 0, 360, 361, 362, 0,
	363, 364, 365, 0, 0, 0, 0, 0, 0, 0,
	366, 367, 368, 369, 370, 0, 371, 373, 725, 726,
	0, 376, 378, 372, 374, 0, 377, 375, 379, 0,
	380, 381, 382, 0, 0, 383, 384, 385, 0, 386,
	387, 388, 0, 389, 390, 391, 0, 392, 393, 727,
	394, 395, 396, 398, 400, 397, 399, 401, 402, 403,
	404, 405, 728, 729, 406, 0, 0, 0, 0, 0,
	0, 0, 407, 408, 409, 730, 0, 0, 0, 410,
	0, 411, 412, 413, 0, 414, 415, 0, 0, 416,
	417, 418, 731, 732, 419, 420, 421, 422, 423, 424,
	425, 426, 427, 0, 428, 733, 0, 734, 429, 0,
	430, 431, 432, 433, 434, 435, 436, 3859, 736, 737,
	529, 0, 437, 438, 439, 0, 440, 441, 442, 443,
	444, 0, 0, 0, 0, 445, 446, 447, 0, 0,
	738, 448, 530, 449, 739, 740, 0, 741, 0, 450,
	451, 453, 0, 742, 0, 452, 454, 455, 0, 456,
	0, 0, 0, 457, 458, 459, 460, 461, 462, 0,
	463, 465, 464, 0, 467, 743, 466, 0, 468, 469,
	0, 0, 470, 471, 472, 473, 474, 475, 478, 0,
	0, 476, 477, 479, 480, 0, 481, 482, 484, 487,
	483, 485, 486, 488, 501, 502, 489, 490, 491, 492,
	493, 494, 495, 496, 497, 498, 499, 500, 504, 0,
	503, 0, 505, 506, 507, 508, 509, 516, 518, 519,
	514, 515, 517, 520, 521, 523, 511, 512, 513, 0,
	522, 510, 0, 0, 0, 524, 525, 526, 527, 0,
	744, 528, 745, 531, 532, 0, 0, 533, 0, 534,
	0, 0, 536, 537, 538, 0, 0, 539, 540, 746,
	0, 541, 0, 747, 542, 543, 535, 544, 545, 546,
	547, 548, 549, 550, 551, 552, 553, 0, 554, 555,
	748, 556, 557, 558, 749, 559, 560, 561, 750, 562,
	751, 563, 564, 0, 565, 566, 567, 0, 568, 569,
	570, 571, 572, 573, 574, 575, 752, 576, 577, 579,
	578, 580, 0, 581, 0, 582, 583, 584, 0, 0,
	0, 0, 0, 585, 586, 588, 0, 589, 590, 591,
	592, 587, 593, 594, 595, 596, 597, 598, 0, 600,
	601, 599, 602, 603, 0, 604, 605, 606, 607, 608,
	753, 609, 0, 610, 611, 618, 619, 620, 612, 613,
	614, 621, 622, 623, 624, 625, 626, 0, 628, 629,
	627, 630, 631, 632, 0, 633, 754, 634, 615, 616,
	635, 636, 0, 637, 638, 639, 640, 641, 642, 643,
	755, 0, 644, 0, 645, 646, 647, 648, 649, 650,
	652, 617, 653, 658, 659, 756, 654, 655, 656, 657,
	757, 661, 662, 663, 664, 0, 665, 666, 0, 660,
	651, 0, 667, 668, 669, 670, 671, 672, 0, 673,
	674, 0, 675, 758, 759, 760, 761, 0, 687, 0,
	676, 678, 679, 680, 681, 762, 682, 763, 0, 683,
	684, 685, 686, 677, 688, 689, 0, 0, 690, 691,
	693, 695, 696, 692, 694, 697, 0, 698, 0, 0,
	699, 700, 701, 764, 765, 766, 0, 703, 702, 704,
	705, 706, 767, 707, 708, 709, 300, 0, 0, 0,
	710, 711, 768, 712, 713, 714, 0, 0, 0, 0,
	0, 0, 0, 306, 307, 309, 308, 310, 311, 312,
	313, 0, 314, 315, 0, 0, 0, 0, 0, 715,
	0, 0, 0, 316, 0, 317, 318, 319, 0, 320,
	321, 322, 323, 324, 325, 326, 716, 717, 0, 327,
	718, 328, 719, 0, 720, 329, 330, 331, 332, 333,
	334, 335, 0, 0, 0, 336, 721, 722, 723, 0,
	337, 338, 724, 0, 0, 0, 339, 340, 341, 342,
	343, 344, 345, 346, 0, 0, 348, 349, 350, 347,
	351, 0, 352, 0, 353, 354, 355, 356, 357, 358,
	359, 0, 360, 361, 362, 0, 363, 364, 365, 0,
	0, 0, 0, 0, 0, 0, 366, 367, 368, 369,
	370, 0, 371, 373, 725, 726, 0, 376, 378, 372,
	374, 0, 377, 375, 379, 0, 380, 381, 382, 0,
	0, 383, 384, 385, 0, 386, 387, 388, 0, 389,
	390, 391, 0, 392, 393, 727, 394, 395, 396, 398,
	400, 397, 399, 401, 402, 403, 404, 405, 728, 729,
	406, 0, 0, 0, 0, 0, 0, 0, 407, 408,
	409, 730, 0, 0, 0, 410, 0, 411, 412, 413,
	0, 414, 415, 0, 0, 416, 417, 418, 731, 732,
	419, 420, 421, 422, 423, 424, 425, 426, 427, 0,
	428, 733, 0, 734, 429, 0, 430, 431, 432, 433,
	434, 435, 436, 3810, 736, 737, 529, 0, 437, 438,
	439, 0, 440, 441, 442, 443, 444, 0, 0, 0,
	0, 445, 446, 447, 0, 0, 738, 448, 530, 449,
	739, 740, 0, 741, 0, 450, 451, 453, 0, 742,
	0, 452, 454, 455, 0, 456, 0, 0, 0, 457,
	458, 459, 460, 461, 462, 0, 463, 465, 464, 0,
	467, 743, 466, 0, 468, 469, 0, 0, 470, 471,
	472, 473, 474, 475, 478, 0, 0, 476, 477, 479,
	480, 0, 481, 482, 484, 487, 483, 485, 486, 488,
	501, 502, 489, 490, 491, 492, 493, 494, 495, 496,
	497, 498, 499, 500, 504, 0, 503, 0, 505, 506,
	507, 508, 509, 516, 518, 519, 514, 515, 517, 520,
	521, 523, 511, 512, 513, 0, 522, 510, 0, 0,
	0, 524, 525, 526, 527, 0, 744, 528, 745, 531,
	532, 0, 0, 533, 0, 534, 0, 0, 536, 537,
	538, 0, 0, 539, 540, 746, 0, 541, 0, 747,
	542, 543, 535, 544, 545, 546, 547, 548, 549, 550,
	551, 552, 553, 0, 554, 555, 748, 556, 557, 558,
	749, 559, 560, 561, 750, 562, 751, 563, 564, 0,
	565, 566, 567, 0, 568, 569, 570, 571, 572, 573,
	574, 575, 752, 576, 577, 579, 578, 580, 0, 581,
	0, 582, 583, 584, 0, 0, 0, 0, 0, 585,
	586, 588, 0, 589, 590, 591, 592, 587, 593, 594,
	595, 596, 597, 598, 0, 600, 601, 599, 602, 603,
	0, 604, 605, 606, 607, 608, 753, 609, 0, 610,
	611, 618, 619, 620, 612, 613, 614, 621, 622, 623,
	624, 625, 626, 0, 628, 629, 627, 630, 631, 632,
	0, 633, 754, 634, 615, 616, 635, 636, 0, 637,
	638, 639, 640, 641, 642, 643, 755, 0, 644, 0,
	645, 646, 647, 648, 649, 650, 652, 617, 653, 658,
	659, 756, 654, 655, 656, 657, 757, 661, 662, 663,
	664, 0, 665, 666, 0, 660, 651, 0, 667, 668,
	669, 670, 671, 672, 0, 673, 674, 0, 675, 758,
	759, 760, 761, 0, 687, 0, 676, 678, 679, 680,
	681, 762, 682, 763, 0, 683, 684, 685, 686, 677,
	688, 689, 0, 0, 690, 691, 693, 695, 696, 692,
	694, 697, 0, 698, 0, 0, 699, 700, 701, 764,
	765, 766, 0, 703, 702, 704, 705, 706, 767, 707,
	708, 709, 300, 0, 0, 0, 710, 711, 768, 712,
	713, 714, 0, 0, 0, 0, 0, 0, 0, 306,
	307, 309, 308, 310, 311, 312, 313, 0, 314, 315,
	0, 0, 0, 0, 0, 715, 0, 0, 0, 316,
	0, 317, 318, 319, 0, 320, 321, 322, 323, 324,
	325, 326, 716, 717, 0, 327, 718, 328, 719, 0,
	720, 329, 330, 331, 332, 333, 334, 335, 0, 0,
	0, 336, 721, 722, 723, 0, 337, 338, 724, 0,
	0, 0, 339, 340, 341, 342, 343, 344, 345, 346,
	0, 0, 348, 349, 350, 347, 351, 0, 352, 0,
	353, 354, 355, 356, 357, 358, 359, 0, 360, 361,
	362, 0, 363, 364, 365, 0, 0, 0, 0, 0,
	0, 0, 366, 367, 368, 369, 370, 0, 371, 373,
	725, 726, 0, 376, 378, 372, 374, 0, 377, 375,
	379, 0, 380, 381, 382, 0, 0, 383, 384, 385,
	0, 386, 387, 388, 0, 389, 390, 391, 0, 392,
	393, 727, 394, 395, 396, 398, 400, 397, 399, 401,
	402, 403, 404, 405, 728, 729, 406, 0, 0, 0,
	0, 0, 0, 0, 407, 408, 409, 730, 0, 0,
	0, 410, 0, 411, 412, 413, 0, 414, 415, 0,
	0, 416, 417, 418, 731, 732, 419, 420, 421, 422,
	423, 424, 425, 426, 427, 0, 428, 733, 0, 734,
	429, 0, 430, 431, 432, 433, 434, 435, 436, 3808,
	736, 737, 529, 0, 437, 438, 439, 0, 440, 441,
	442, 443, 444, 0, 0, 0, 0, 445, 446, 447,
	0, 0, 738, 448, 530, 449, 739, 740, 0, 741,
	0, 450, 451, 453, 0, 742, 0, 452, 454, 455,
	0, 456, 0, 0, 0, 457, 458, 459, 460, 461,
	462, 0, 463, 465, 464, 0, 467, 743, 466, 0,
	468, 469, 0, 0, 470, 471, 472, 473, 474, 475,
	478, 0, 0, 476, 477, 479, 480, 0, 481, 482,
	484, 487, 483, 485, 486, 488, 501, 502, 489, 490,
	491, 492, 493, 494, 495, 496, 497, 498, 499, 500,
	504, 0, 503, 0, 505, 506, 507, 508, 509, 516,
	518, 519, 514, 515, 517, 520, 521, 523, 511, 512,
	513, 0, 522, 510, 0, 0, 0, 524, 525, 526,
	527, 0, 744, 528, 745, 531, 532, 0, 0, 533,
	0, 534, 0, 0, 536, 537, 538, 0, 0, 539,
	540, 746, 0, 541, 0, 747, 542, 543, 535, 544,
	545, 546, 547, 548, 549, 550, 551, 552, 553, 0,
	554, 555, 748, 556, 557, 558, 749, 559, 560, 561,
	750, 562, 751, 563, 564, 0, 565, 566, 567, 0,
	568, 569, 570, 571, 572, 573, 574, 575, 752, 576,
	577, 579, 578, 580, 0, 581, 0, 582, 583, 584,
	0, 0, 0, 0, 0, 585, 586, 588, 0, 589,
	590, 591, 592, 587, 593, 594, 595, 596, 597, 598,
	0, 600, 601, 599, 602, 603, 0, 604, 605, 606,
	607, 608, 753, 609, 0, 610, 611, 618, 619, 620,
	612, 613, 614, 621, 622, 623, 624, 625, 626, 0,
	628, 629, 627, 630, 631, 632, 0, 633, 754, 634,
	615, 616, 635, 636, 0, 637, 638, 639, 640, 641,
	642, 643, 755, 0, 644, 0, 645, 646, 647, 648,
	649, 650, 652, 617, 653, 658, 659, 756, 654, 655,
	656, 657, 757, 661, 662, 663, 664, 0, 665, 666,
	0, 660, 651, 0, 667, 668, 669, 670, 671, 672,
	0, 673, 674, 0, 675, 758, 759, 760, 761, 0,
	687, 0, 676, 678, 679, 680, 681, 762, 682, 763,
	0, 683, 684, 685, 686, 677, 688, 689, 0, 0,
	690, 691, 693, 695, 696, 692, 694, 697, 0, 698,
	0, 0, 699, 700, 701, 764, 765, 766, 0, 703,
	702, 704, 705, 706, 767, 707, 708, 709, 300, 0,
	0, 0, 710, 711, 768, 712, 713, 714, 0, 0,
	0, 0, 0, 0, 0, 306, 307, 309, 308, 310,
	311, 312, 313, 0, 314, 315, 0, 0, 0, 0,
	0, 715, 0, 0, 0, 316, 0, 317, 318, 319,
	0, 320, 321, 322, 323, 324, 325, 326, 716, 717,
	0, 327, 718, 328, 719, 0, 720, 329, 330, 331,
	332, 333, 334, 335, 0, 0, 0, 336, 721, 722,
	723, 0, 337, 338, 724, 0, 0, 0, 339, 340,
	341, 342, 343, 344, 345, 346, 0, 0, 348, 349,
	350, 347, 351, 0, 352, 0, 353, 354, 355, 356,
	357, 358, 359, 0, 360, 361, 362, 0, 363, 364,
	365, 0, 0, 0, 0, 0, 0, 0, 366, 367,
	368, 369, 370, 0, 371, 373, 725, 726, 0, 376,
	378, 372, 374, 0, 377, 375, 379, 0, 380, 381,
	382, 0, 0, 383, 384, 385, 0, 386, 387, 388,
	0, 389, 390, 391, 0, 392, 393, 727, 394, 395,
	396, 398, 400, 397, 399, 401, 402, 403, 404, 405,
	728, 729, 406, 0, 0, 0, 0, 0, 0, 0,
	407, 408, 409, 730, 0, 0, 0, 410, 0, 411,
	412, 413, 0, 414, 415, 0, 0, 416, 417, 418,
	731, 732, 419, 420, 421, 422, 423, 424, 425, 426,
	427, 0, 428, 733, 0, 734, 429, 0, 430, 431,
	432, 433, 434, 435, 436, 3796, 736, 737, 529, 0,
	437, 438, 439, 0, 440, 441, 442, 443, 444, 0,
	0, 0, 0, 445, 446, 447, 0, 0, 738, 448,
	530, 449, 739, 740, 0, 741, 0, 450, 451, 453,
	0, 742, 0, 452, 454, 455, 0, 456, 0, 0,
	0, 457, 458, 459, 460, 461, 462, 0, 463, 465,
	464, 0, 467, 743, 466, 0, 468, 469, 0, 0,
	470, 471, 472, 473, 474, 475, 478, 0, 0, 476,
	477, 479, 480, 0, 481, 482, 484, 487, 483, 485,
	486, 488, 501, 502, 489, 490, 491, 492, 493, 494,
	495, 496, 497, 498, 499, 500, 504, 0, 503, 0,
	505, 506, 507, 508, 509, 516, 518, 519, 514, 515,
	517, 520, 521, 523, 511, 512, 513, 0, 522, 510,
	0, 0, 0, 524, 525, 526, 527, 0, 744, 528,
	745, 531, 532, 0, 0, 533, 0, 534, 0, 0,
	536, 537, 538, 0, 0, 539, 540, 746, 0, 541,
	0, 747, 542, 543, 535, 544, 545, 546, 547, 548,
	549, 550, 551, 552, 553, 0, 554, 555, 748, 556,
	557, 558, 749, 559, 560, 561, 750, 562, 751, 563,
	564, 0, 565, 566, 567, 0, 568, 569, 570, 571,
	572, 573, 574, 575, 752, 576, 577, 579, 578, 580,
	0, 581, 0, 582, 583, 584, 0, 0, 0, 0,
	0, 585, 586, 588, 0, 589, 590, 591, 592, 587,
	593, 594, 595, 596, 597, 598, 0, 600, 601, 599,
	602, 603, 0, 604, 605, 606, 607, 608, 753, 609,
	0, 610, 611, 618, 619, 620, 612, 613, 614, 621,
	622, 623, 624, 625, 626, 0, 628, 629, 627, 630,
	631, 632, 0, 633, 754, 634, 615, 616, 635, 636,
	0, 637, 638, 639, 640, 641, 642, 643, 755, 0,
	644, 0, 645, 646, 647, 648, 649, 650, 652, 617,
	653, 658, 659, 756, 654, 655, 656, 657, 757, 661,
	662, 663, 664, 0, 665, 666, 0, 660, 651, 0,
	667, 668, 669, 670, 671, 672, 0, 673, 674, 0,
	675, 758, 759, 760, 761, 0, 687, 0, 676, 678,
	679, 680, 681, 762, 682, 763, 0, 683, 684, 685,
	686, 677, 688, 689, 0, 0, 690, 691, 693, 695,
	696, 692, 694, 697, 0, 698, 0, 0, 699, 700,
	701, 764, 765, 766, 0, 703, 702, 704, 705, 706,
	767, 707, 708, 709, 300, 0, 0, 0, 710, 711,
	768, 712, 713, 714, 0, 0, 0, 0, 0, 0,
	0, 306, 307, 309, 308, 310, 311, 312, 313, 0,
	314, 315, 0, 0, 0, 0, 0, 715, 0, 0,
	0, 316, 0, 317, 318, 319, 0, 320, 321, 322,
	323, 324, 325, 326, 716, 717, 0, 327, 718, 328,
	719, 0, 720, 329, 330, 331, 332, 333, 334, 335,
	0, 0, 0, 336, 721, 722, 723, 0, 337, 338,
	724, 0, 0, 0, 339, 340, 341, 342, 343, 344,
	345, 346, 0, 0, 348, 349, 350, 347, 351, 0,
	352, 0, 353, 354, 355, 356, 357, 358, 359, 0,
	360, 361, 362, 0, 363, 364, 365, 0, 0, 0,
	0, 0, 0, 0, 366, 367, 368, 369, 370, 0,
	371, 373, 725, 726, 0, 376, 378, 372, 374, 0,
	377, 375, 379, 0, 380, 381, 382, 0, 0, 383,
	384, 385, 0, 386, 387, 388, 0, 389, 390, 391,
	0, 392, 393, 727, 394, 395, 396, 398, 400, 397,
	399, 401, 402, 403, 404, 405, 728, 729, 406, 0,
	0, 0, 0, 0, 0, 0, 407, 408, 409, 730,
	0, 0, 0, 410, 0, 411, 412, 413, 0, 414,
	415, 0, 0, 416, 417, 418, 731, 732, 419, 420,
	421, 422, 423, 424, 425, 426, 427, 0, 428, 733,
	0, 734, 429, 0, 430, 431, 432, 433, 434, 435,
	436, 3793, 736, 737, 529, 0, 437, 438, 439, 0,
	440, 441, 442, 443, 444, 0, 0, 0, 0, 445,
	446, 447, 0, 0, 738, 448, 530, 449, 739, 740,
	0, 741, 0, 450, 451, 453, 0, 742, 0, 452,
	454, 455, 0, 456, 0, 0, 0, 457, 458, 459,
	460, 461, 462, 0, 463, 465, 464, 0, 467, 743,
	466, 0, 468, 469, 0, 0, 470, 471, 472, 473,
	474, 475, 478, 0, 0, 476, 477, 479, 480, 0,
	481, 482, 484, 487, 483, 485, 486, 488, 501, 502,
	489, 490, 491, 492, 493, 494, 495, 496, 497, 498,
	499, 500, 504, 0, 503, 0, 505, 506, 507, 508,
	509, 516, 518, 519, 514, 515, 517, 520, 521, 523,
	511, 512, 513, 0, 522, 510, 0, 0, 0, 524,
	525, 526, 527, 0, 744, 528, 745, 531, 532, 0,
	0, 533, 0, 534, 0, 0, 536, 537, 538, 0,
	0, 539, 540, 746, 0, 541, 0, 747, 542, 543,
	535, 544, 545, 546, 547, 548, 549, 550, 551, 552,
	553, 0, 554, 555, 748, 556, 557, 558, 749, 559,
	560, 561, 750, 562, 751, 563, 564, 0, 565, 566,
	567, 0, 568, 569, 570, 571, 572, 573, 574, 575,
	752, 576, 577, 579, 578, 580, 0, 581, 0, 582,
	583, 584, 0, 0, 0, 0, 0, 585, 586, 588,
	0, 589, 590, 591, 592, 587, 593, 594, 595, 596,
	597, 598, 0, 600, 601, 599, 602, 603, 0, 604,
	605, 606, 607, 608, 753, 609, 0, 610, 611, 618,
	619, 620, 612, 613, 614, 621, 622, 623, 624, 625,
	626, 0, 628, 629, 627, 630, 631, 632, 0, 633,
	754, 634, 615, 616, 635, 636, 0, 637, 638, 639,
	640, 641, 642, 643, 755, 0, 644, 0, 645, 646,
	647, 648, 649, 650, 652, 617, 653, 658, 659, 756,
	654, 655, 656, 657, 757, 661, 662, 663, 664, 0,
	665, 666, 0, 660, 651, 0, 667, 668, 669, 670,
	671, 672, 0, 673, 674, 0, 675, 758, 759, 760,
	761, 0, 687, 0, 676, 678, 679, 680, 681, 762,
	682, 763, 0, 683, 684, 685, 686, 677, 688, 689,
	0, 0, 690, 691, 693, 695, 696, 692, 694, 697,
	0, 698, 0, 0, 699, 700, 701, 764, 765, 766,
	0, 703, 702, 704, 705, 706, 767, 707, 708, 709,
	300, 0, 0, 0, 710, 711, 768, 712, 713, 714,
	0, 0, 0, 0, 0, 0, 0, 306, 307, 309,
	308, 310, 311, 312, 313, 0, 314, 315, 0, 0,
	0, 0, 0, 715, 0, 0, 0, 316, 0, 317,
	318, 319, 0, 320, 321, 322, 323, 324, 325, 326,
	716, 717, 0, 327, 718, 328, 719, 0, 720, 329,
	330, 331, 332, 333, 334, 335, 0, 0, 0, 336,
	721, 722, 723, 0, 337, 338, 724, 0, 0, 0,
	339, 340, 341, 342, 343, 344, 345, 346, 0, 0,
	348, 349, 350, 347, 351, 0, 352, 0, 353, 354,
	355, 356, 357, 358, 359, 0, 360, 361, 362, 0,
	363, 364, 365, 0, 0, 0, 0, 0, 0, 0,
	366, 367, 368, 369, 370, 0, 371, 373, 725, 726,
	0, 376, 378, 372, 374, 0, 377, 375, 379, 0,
	380, 381, 382, 0, 0, 383, 384, 385, 0, 386,
	387, 388, 0, 389, 390, 391, 0, 392, 393, 727,
	394, 395, 396, 398, 400, 397, 399, 401, 402, 403,
	404, 405, 728, 729, 406, 0, 0, 0, 0, 0,
	0, 0, 407, 408, 409, 730, 0, 0, 0, 410,
	0, 411, 412, 413, 0, 414, 415, 0, 0, 416,
	417, 418, 731, 732, 419, 420, 421, 422, 423, 424,
	425, 426, 427, 0, 428, 733, 0, 734, 429, 0,
	430, 431, 432, 433, 434, 435, 436, 3381, 736, 737,
	529, 0, 437, 438, 439, 0, 440, 441, 442, 443,
	444, 0, 0, 0, 0, 445, 446, 447, 0, 0,
	738, 448, 530, 449, 739, 740, 0, 741, 0, 450,
	451, 453, 0, 742, 0, 452, 454, 455, 0, 456,
	0, 0, 0, 457, 458, 459, 460, 461, 462, 0,
	463, 465, 464, 0, 467, 743, 466, 0, 468, 469,
	0, 0, 470, 471, 472, 473, 474, 475, 478, 0,
	0, 476, 477, 479, 480, 0, 481, 482, 484, 487,
	483, 485, 486, 488, 501, 502, 489, 490, 491, 492,
	493, 494, 495, 496, 497, 498, 499, 500, 504, 0,
	503, 0, 505, 506, 507, 508, 509, 516, 518, 519,
	514, 515, 517, 520, 521, 523, 511, 512, 513, 0,
	522, 510, 0, 0, 0, 524, 525, 526, 527, 0,
	744, 528, 745, 531, 532, 0, 0, 533, 0, 534,
	0, 0, 536, 537, 538, 0, 0, 539, 540, 746,
	0, 541, 0, 747, 542, 543, 535, 544, 545, 546,
	547, 548, 549, 550, 551, 552, 553, 0, 554, 555,
	748, 556, 557, 558, 749, 559, 560, 561, 750, 562,
	751, 563, 564, 0, 565, 566, 567, 0, 568, 569,
	570, 571, 572, 573, 574, 575, 752, 576, 577, 579,
	578, 580, 0, 581, 0, 582, 583, 584, 0, 0,
	0, 0, 0, 585, 586, 588, 0, 589, 590, 591,
	592, 587, 593, 594, 595, 596, 597, 598, 0, 600,
	601, 599, 602, 603, 0, 604, 605, 606, 607, 608,
	753, 609, 0, 610, 611, 618, 619, 620, 612, 613,
	614, 621, 622, 623, 624, 625, 626, 0, 628, 629,
	627, 630, 631, 632, 0, 633, 754, 634, 615, 616,
	635, 636, 0, 637, 638, 639, 640, 641, 642, 643,
	755, 0, 644, 0, 645, 646, 647, 648, 649, 650,
	652, 617, 653, 658, 659, 756, 654, 655, 656, 657,
	757, 661, 662, 663, 664, 0, 665, 666, 0, 660,
	651, 0, 667, 668, 669, 670, 671, 672, 0, 673,
	674, 0, 675, 758, 759, 760, 761, 0, 687, 0,
	676, 678, 679, 680, 681, 762, 682, 763, 0, 683,
	684, 685, 686, 677, 688, 689, 0, 0, 690, 691,
	693, 695, 696, 692, 694, 697, 0, 698, 0, 0,
	699, 700, 701, 764, 765, 766, 0, 703, 702, 704,
	705, 706, 767, 707, 708, 709, 300, 0, 0, 0,
	710, 711, 768, 712, 713, 714, 0, 0, 0, 0,
	0, 0, 0, 306, 307, 309, 308, 310, 311, 312,
	313, 0, 314, 315, 0, 0, 0, 0, 0, 715,
	0, 0, 0, 316, 0, 317, 318, 319, 0, 320,
	321, 322, 323, 324, 325, 326, 716, 717, 0, 327,
	718, 328, 719, 0, 720, 329, 330, 331, 332, 333,
	334, 335, 0, 0, 0, 336, 721, 722, 723, 0,
	337, 338, 724, 0, 0, 0, 339, 340, 341, 342,
	343, 344, 345, 346, 0, 0, 348, 349, 350, 347,
	351, 0, 352, 0, 353, 354, 355, 356, 357, 358,
	359, 0, 360, 361, 362, 0, 363, 364, 365, 0,
	0, 0, 0, 0, 0, 0, 366, 367, 368, 369,
	370, 0, 371, 373, 725, 726, 0, 376, 378, 372,
	374, 0, 377, 375, 379, 0, 380, 381, 382, 0,
	0, 383, 384, 385, 0, 386, 387, 388, 0, 389,
	390, 391, 0, 392, 393, 727, 394, 395, 396, 398,
	400, 397, 399, 401, 402, 403, 404, 405, 728, 729,
	406, 0, 0, 0, 0, 0, 0, 0, 407, 408,
	409, 730, 0, 0, 0, 410, 0, 411, 412, 413,
	0, 414, 415, 0, 0, 416, 417, 418, 731, 732,
	419, 420, 421, 422, 423, 424, 425, 426, 427, 0,
	428, 733, 0, 734, 429, 0, 430, 431, 432, 433,
	434, 435, 436, 735, 736, 737, 529, 0, 437, 438,
	439, 0, 440, 441, 442, 443, 444, 0, 0, 0,
	0, 445, 446, 447, 0, 0, 738, 448, 530, 449,
	739, 740, 0, 741, 0, 450, 451, 453, 0, 742,
	0, 452, 454, 455, 0, 456, 0, 0, 0, 457,
	458, 459, 460, 461, 462, 0, 463, 465, 464, 0,
	467, 743, 466, 0, 468, 469, 0, 0, 470, 471,
	472, 473, 474, 475, 478, 0, 0, 476, 477, 479,
	480, 0, 481, 482, 484, 487, 483, 485, 486, 488,
	501, 502, 489, 490, 491, 492, 493, 494, 495, 496,
	497, 498, 499, 500, 504, 0, 503, 0, 505, 506,
	507, 508, 509, 516, 518, 519, 514, 515, 517, 520,
	521, 523, 511, 512, 513, 0, 522, 510, 0, 0,
	0, 524, 525, 526, 527, 0, 744, 528, 745, 531,
	532, 0, 0, 533, 0, 534, 0, 0, 536, 537,
	538, 0, 0, 539, 540, 746, 0, 541, 0, 747,
	542, 543, 535, 544, 545, 546, 547, 548, 549, 550,
	551, 552, 553, 0, 554, 555, 748, 556, 557, 558,
	749, 559, 560, 561, 750, 562, 751, 563, 564, 0,
	565, 566, 567, 0, 568, 569, 570, 571, 572, 573,
	574, 575, 752, 576, 577, 579, 578, 580, 0, 581,
	0, 582, 583, 584, 0, 0, 0, 0, 0, 585,
	586, 588, 0, 589, 590, 591, 592, 587, 593, 594,
	595, 596, 597, 598, 0, 600, 601, 599, 602, 603,
	0, 604, 605, 606, 607, 608, 753, 609, 0, 610,
	611, 844, 619, 620, 612, 613, 614, 621, 622, 623,
	624, 625, 626, 0, 628, 629, 627, 630, 631, 632,
	0, 633, 754, 634, 615, 616, 635, 636, 0, 637,
	638, 639, 640, 641, 642, 643, 755, 0, 644, 0,
	645, 646, 647, 648, 649, 650, 652, 617, 653, 658,
	659, 756, 654, 655, 656, 657, 757, 661, 662, 663,
	664, 0, 665, 666, 0, 660, 651, 0, 667, 668,
	669, 670, 671, 672, 0, 673, 674, 0, 675, 758,
	759, 760, 761, 0, 687, 0, 676, 678, 679, 680,
	681, 762, 682, 763, 0, 683, 684, 685, 686, 677,
	688, 689, 0, 0, 690, 691, 693, 695, 696, 692,
	694, 697, 0, 698, 0, 0, 699, 700, 701, 764,
	765, 766, 0, 703, 702, 704, 705, 706, 767, 707,
	708, 709, 300, 0, 0, 0, 710, 711, 768, 712,
	713, 714, 0, 0, 0, 0, 0, 0, 0, 306,
	307, 309, 308, 310, 311, 312, 313, 0, 314, 315,
	0, 0, 0, 0, 0, 715, 0, 2549, 0, 316,
	0, 317, 318, 319, 0, 320, 321, 322, 323, 324,
	325, 326, 716, 717, 0, 327, 718, 328, 719, 0,
	720, 329, 330, 331, 332, 333, 334, 335, 0, 0,
	0, 336, 721, 722, 723, 0, 337, 338, 724, 0,
	0, 0, 339, 340, 341, 342, 343, 344, 345, 346,
	0, 0, 348, 349, 350, 347, 351, 0, 352, 0,
	353, 354, 355, 356, 357, 358, 359, 0, 360, 361,
	362, 0, 363, 364, 365, 0, 0, 0, 0, 0,
	0, 0, 366, 367, 368, 369, 370, 0, 371, 373,
	725, 726, 0, 376, 378, 372, 374, 0, 377, 375,
	379, 0, 380, 381, 382, 0, 0, 383, 384, 385,
	0, 386, 387, 388, 0, 389, 390, 391, 0, 392,
	393, 727, 394, 395, 396, 398, 400, 397, 399, 401,
	402, 403, 404, 405, 728, 729, 406, 0, 0, 0,
	0, 0, 0, 0, 407, 408, 409, 730, 0, 0,
	0, 410, 0, 411, 412, 413, 0, 414, 415, 0,
	0, 416, 417, 418, 731, 732, 419, 420, 421, 422,
	423, 424, 425, 426, 427, 0, 428, 733, 0, 734,
	429, 0, 430, 431, 432, 433, 434, 435, 436, 735,
	736, 737, 529, 0, 437, 438, 439, 0, 440, 441,
	442, 443, 444, 0, 0, 0, 0, 445, 446, 447,
	0, 0, 738, 448, 530, 449, 739, 740, 0, 741,
	0, 450, 451, 453, 0, 742, 0, 452, 454, 455,
	0, 456, 0, 0, 0, 457, 458, 459, 460, 461,
	462, 0, 463, 465, 464, 0, 467, 743, 466, 0,
	468, 469, 0, 0, 470, 471, 472, 473, 474, 475,
	478, 0, 0, 476, 477, 479, 480, 0, 481, 482,
	484, 487, 483, 485, 486, 488, 501, 502, 489, 490,
	491, 492, 493, 494, 495, 496, 497, 498, 499, 500,
	504, 0, 503, 0, 505, 506, 507, 508, 509, 516,
	518, 519, 514, 515, 517, 520, 521, 523, 511, 512,
	513, 0, 522, 510, 0, 0, 0, 524, 525, 526,
	527, 0, 744, 528, 745, 531, 532, 0, 0, 533,
	0, 534, 0, 0, 536, 537, 538, 0, 0, 539,
	540, 746, 0, 541, 0, 747, 542, 543, 535, 544,
	545, 546, 547, 548, 549, 550, 551, 552, 553, 0,
	554, 555, 748, 556, 557, 558, 749, 559, 560, 561,
	750, 562, 751, 563, 564, 0, 565, 566, 567, 0,
	568, 569, 570, 571, 572, 573, 574, 575, 752, 576,
	577, 579, 578, 580, 0, 581, 0, 582, 583, 584,
	0, 0, 0, 0, 0, 585, 586, 588, 0, 589,
	590, 591, 592, 587, 593, 594, 595, 596, 597, 598,
	0, 600, 601, 599, 602, 603, 0, 604, 605, 606,
	607, 608, 753, 609, 0, 610, 611, 618, 619, 620,
	612, 613, 614, 621, 622, 623, 624, 625, 626, 0,
	628, 629, 627, 630, 631, 632, 0, 0, 754, 634,
	615, 616, 635, 636, 0, 637, 638, 639, 640, 641,
	642, 643, 755, 0, 644, 0, 645, 646, 647, 648,
	649, 650, 652, 617, 653, 658, 659, 756, 654, 655,
	656, 657, 757, 661, 662, 663, 664, 0, 665, 666,
	0, 660, 651, 0, 667, 668, 669, 670, 671, 672,
	0, 673, 674, 0, 675, 758, 759, 760, 761, 0,
	687, 0, 676, 678, 679, 680, 681, 762, 682, 763,
	0, 683, 684, 685, 686, 677, 688, 689, 0, 0,
	690, 691, 693, 695, 696, 692, 694, 697, 0, 698,
	0, 0, 699, 700, 701, 764, 765, 766, 0, 703,
	702, 704, 705, 706, 767, 707, 708, 709, 300, 0,
	0, 0, 710, 711, 768, 712, 713, 714, 0, 0,
	0, 0, 0, 0, 0, 306, 307, 309, 308, 310,
	311, 312, 313, 0, 314, 315, 0, 0, 0, 0,
	0, 715, 0, 0, 0, 316, 0, 317, 318, 319,
	0, 320, 321, 322, 323, 324, 325, 326, 716, 717,
	0, 327, 718, 328, 719, 0, 720, 329, 330, 331,
	332, 333, 334, 335, 0, 0, 0, 336, 721, 722,
	723, 0, 337, 338, 724, 0, 0, 0, 339, 340,
	341, 342, 343, 344, 345, 346, 0, 0, 348, 349,
	350, 347, 351, 0, 352, 0, 353, 354, 355, 356,
	357, 358, 359, 0, 360, 361, 362, 0, 363, 364,
	365, 0, 0, 0, 0, 0, 0, 0, 366, 367,
	368, 369, 370, 0, 371, 373, 725, 726, 0, 376,
	378, 372, 374, 0, 377, 375, 379, 0, 380, 381,
	382, 0, 0, 383, 384, 385, 0, 386, 387, 388,
	0, 389, 390, 391, 0, 392, 393, 727, 394, 395,
	396, 398, 400, 397, 399, 401, 402, 403, 404, 405,
	728, 729, 406, 0, 0, 0, 0, 0, 0, 0,
	407, 408, 409, 730, 0, 0, 0, 410, 0, 411,
	412, 413, 0, 414, 415, 0, 0, 416, 417, 418,
	731, 732, 419, 420, 421, 422, 423, 424, 425, 426,
	427, 0, 428, 733, 0, 734, 429, 0, 430, 431,
	432, 433, 434, 435, 436, 1426, 736, 737, 529, 0,
	437, 438, 439, 0, 440, 441, 442, 443, 444, 0,
	0, 0, 0, 445, 446, 447, 0, 0, 738, 448,
	530, 449, 739, 740, 0, 741, 0, 450, 451, 453,
	0, 742, 0, 452, 454, 455, 0, 456, 0, 0,
	0, 457, 458, 459, 460, 461, 462, 0, 463, 465,
	464, 0, 467, 743, 466, 0, 468, 469, 0, 0,
	470, 471, 472, 473, 474, 475, 478, 0, 0, 476,
	477, 479, 480, 0, 481, 482, 484, 487, 483, 485,
	486, 488, 501, 502, 489, 490, 491, 492, 493, 494,
	495, 496, 497, 498, 499, 500, 504, 0, 503, 0,
	505, 506, 507, 508, 509, 516, 518, 519, 514, 515,
	517, 520, 521, 523, 511, 512, 513, 0, 522, 510,
	0, 0, 0, 524, 525, 526, 527, 0, 744, 528,
	745, 531, 532, 0, 0, 533, 0, 534, 0, 0,
	536, 537, 538, 0, 0, 539, 540, 746, 0, 541,
	0, 747, 542, 543, 535, 544, 545, 546, 547, 548,
	549, 550, 551, 552, 553, 0, 554, 555, 748, 556,
	557, 558, 749, 559, 560, 561, 750, 562, 751, 563,
	564, 0, 565, 566, 567, 0, 568, 569, 570, 571,
	572, 573, 574, 575, 752, 576, 577, 579, 578, 580,
	0, 581, 0, 582, 583, 584, 0, 0, 0, 0,
	0, 585, 586, 588, 0, 589, 590, 591, 592, 587,
	593, 594, 595, 596, 597, 598, 0, 600, 601, 599,
	602, 603, 0, 604, 605, 606, 607, 608, 753, 609,
	0, 610, 611, 618, 619, 620, 612, 613, 614, 621,
	622, 623, 624, 625, 626, 0, 628, 629, 627, 630,
	631, 632, 0, 633, 754, 634, 615, 616, 635, 636,
	0, 637, 638, 639, 640, 641, 642, 643, 755, 0,
	644, 0, 645, 646, 647, 648, 649, 650, 652, 617,
	653, 658, 659, 756, 654, 655, 656, 657, 757, 661,
	662, 663, 664, 0, 665, 666, 0, 660, 651, 0,
	667, 668, 669, 670, 671, 672, 0, 673, 674, 0,
	675, 758, 759, 760, 761, 0, 687, 0, 676, 678,
	679, 680, 681, 762, 682, 763, 0, 683, 684, 685,
	686, 677, 688, 689, 0, 0, 690, 691, 693, 695,
	696, 692, 694, 697, 0, 698, 0, 0, 699, 700,
	701, 764, 765, 766, 0, 703, 702, 704, 705, 706,
	767, 707, 708, 709, 300, 0, 0, 0, 710, 711,
	768, 712, 713, 714, 0, 0, 0, 0, 0, 0,
	0, 306, 307, 309, 308, 310, 311, 312, 313, 0,
	314, 315, 0, 0, 0, 0, 0, 715, 0, 0,
	0, 316, 0, 317, 318, 319, 0, 320, 321, 322,
	323, 324, 325, 326, 716, 717, 0, 327, 718, 328,
	719, 0, 720, 329, 330, 331, 332, 333, 334, 335,
	0, 0, 0, 336, 721, 722, 723, 0, 337, 338,
	724, 0, 0, 0, 339, 340, 341, 342, 343, 344,
	345, 346, 0, 0, 348, 349, 350, 347, 351, 0,
	352, 0, 353, 354, 355, 356, 357, 358, 359, 0,
	360, 361, 362, 0, 363, 364, 365, 0, 0, 0,
	0, 0, 0, 0, 366, 367, 368, 369, 370, 0,
	371, 373, 725, 726, 0, 376, 378, 372, 374, 0,
	377, 375, 379, 0, 380, 381, 382, 0, 0, 383,
	384, 385, 0, 386, 387, 388, 0, 389, 390, 391,
	0, 392, 393, 727, 394, 395, 396, 398, 400, 397,
	399, 401, 402, 403, 404, 405, 728, 729, 406, 0,
	0, 0, 0, 0, 0, 0, 407, 408, 409, 730,
	0, 0, 0, 410, 0, 411, 412, 413, 0, 414,
	415, 0, 0, 416, 417, 418, 731, 732, 419, 420,
	421, 422, 423, 424, 425, 426, 427, 0, 428, 733,
	0, 734, 429, 0, 430, 431, 432, 433, 434, 435,
	436, 735, 736, 737, 529, 0, 437, 438, 439, 0,
	440, 441, 442, 443, 444, 0, 0, 0, 0, 445,
	446, 447, 0, 0, 738, 448, 530, 449, 739, 740,
	0, 741, 0, 450, 451, 453, 0, 742, 0, 452,
	454, 455, 0, 456, 0, 0, 0, 457, 458, 459,
	460, 461, 462, 0, 463, 465, 464, 0, 467, 743,
	466, 0, 468, 469, 0, 0, 470, 471, 472, 473,
	474, 475, 478, 0, 0, 476, 477, 479, 480, 0,
	481, 482, 484, 487, 483, 485, 486, 488, 501, 502,
	489, 490, 491, 492, 493, 494, 495, 496, 497, 498,
	499, 500, 504, 0, 503, 0, 505, 506, 507, 508,
	509, 516, 518, 519, 514, 515, 517, 520, 521, 523,
	511, 512, 513, 0, 522, 510, 0, 0, 0, 524,
	525, 526, 527, 0, 744, 528, 745, 531, 532, 0,
	0, 533, 0, 534, 0, 0, 536, 537, 538, 0,
	0, 539, 540, 746, 0, 541, 0, 747, 542, 543,
	535, 544, 545, 546, 547, 548, 549, 550, 551, 552,
	553, 0, 554, 555, 748, 556, 557, 558, 749, 559,
	560, 561, 750, 562, 751, 563, 564, 0, 565, 566,
	567, 0, 568, 569, 570, 571, 572, 573, 574, 575,
	752, 576, 577, 1351, 578, 580, 0, 581, 0, 582,
	583, 584, 0, 0, 0, 0, 0, 585, 586, 588,
	0, 589, 590, 591, 592, 587, 593, 594, 595, 596,
	597, 598, 0, 600, 601, 599, 602, 603, 0, 604,
	605, 606, 607, 608, 753, 609, 0, 610, 611, 618,
	619, 620, 612, 613, 614, 621, 622, 623, 624, 625,
	626, 0, 628, 629, 627, 630, 631, 632, 0, 633,
	754, 634, 615, 616, 635, 636, 0, 637, 638, 639,
	640, 641, 642, 643, 755, 0, 644, 0, 645, 646,
	647, 648, 649, 650, 652, 617, 653, 658, 659, 756,
	654, 655, 656, 657, 757, 661, 662, 663, 664, 0,
	665, 666, 0, 660, 651, 0, 667, 668, 669, 670,
	671, 672, 0, 673, 674, 0, 675, 758, 759, 760,
	761, 0, 687, 0, 676, 678, 679, 680, 681, 762,
	682, 763, 0, 683, 684, 685, 686, 677, 688, 689,
	0, 0, 690, 691, 693, 695, 696, 692, 694, 697,
	0, 698, 0, 0, 699, 700, 701, 764, 765, 766,
	0, 703, 702, 704, 705, 706, 767, 707, 708, 709,
	300, 0, 0, 0, 710, 711, 768, 712, 713, 714,
	0, 0, 0, 0, 0, 0, 0, 306, 307, 309,
	308, 310, 311, 312, 313, 0, 314, 315, 0, 0,
	0, 0, 0, 715, 0, 0, 0, 316, 0, 317,
	318, 319, 0, 320, 321, 322, 323, 324, 325, 326,
	716, 717, 0, 327, 718, 328, 719, 0, 720, 329,
	330, 331, 332, 333, 334, 335, 0, 0, 0, 336,
	721, 722, 723, 0, 337, 338, 724, 0, 0, 0,
	339, 340, 341, 342, 343, 344, 345, 346, 0, 0,
	348, 349, 350, 347, 351, 0, 352, 0, 353, 354,
	355, 356, 357, 358, 359, 0, 360, 361, 362, 0,
	363, 364, 365, 0, 0, 0, 0, 0, 0, 0,
	366, 367, 368, 369, 370, 0, 371, 373, 725, 726,
	0, 376, 378, 372, 374, 0, 377, 375, 379, 0,
	380, 381, 382, 0, 0, 383, 384, 385, 0, 386,
	387, 388, 0, 389, 390, 391, 0, 392, 393, 727,
	394, 395, 396, 398, 400, 397, 399, 401, 402, 403,
	404, 405, 728, 729, 406, 0, 0, 0, 0, 0,
	0, 0, 407, 408, 409, 730, 0, 0, 0, 410,
	0, 411, 412, 413, 0, 414, 415, 0, 0, 416,
	417, 418, 731, 732, 419, 420, 421, 422, 423, 424,
	425, 426, 427, 0, 428, 733, 0, 734, 0, 0,
	430, 431, 432, 433, 434, 435, 436, 735, 736, 737,
	529, 0, 437, 438, 439, 0, 440, 441, 442, 443,
	444, 0, 0, 0, 0, 445, 446, 447, 0, 0,
	738, 448, 530, 449, 739, 740, 0, 741, 0, 450,
	451, 453, 0, 742, 0, 452, 454, 455, 0, 456,
	0, 0, 0, 457, 458, 459, 460, 461, 462, 0,
	463, 465, 464, 0, 467, 743, 466, 0, 468, 469,
	0, 0, 470, 471, 472, 473, 474, 475, 478, 0,
	0, 476, 477, 479, 480, 0, 481, 482, 484, 487,
	483, 485, 486, 488, 501, 502, 489, 490, 491, 492,
	493, 494, 495, 496, 497, 498, 499, 500, 504, 0,
	503, 0, 505, 506, 507, 508, 509, 516, 518, 519,
	514, 515, 517, 520, 521, 523, 511, 512, 513, 0,
	522, 510, 0, 0, 0, 524, 525, 526, 527, 0,
	744, 528, 745, 531, 532, 0, 0, 533, 0, 534,
	0, 0, 536, 537, 538, 0, 0, 539, 540, 746,
	0, 541, 0, 747, 542, 543, 535, 544, 545, 546,
	0, 548, 549, 550, 551, 552, 553, 0, 554, 555,
	748, 556, 557, 558, 749, 559, 560, 561, 750, 562,
	751, 563, 564, 0, 565, 566, 567, 0, 568, 569,
	570, 571, 572, 0, 574, 575, 752, 576, 577, 579,
	578, 580, 0, 581, 0, 582, 583, 584, 0, 0,
	0, 0, 0, 585, 586, 588, 0, 589, 590, 591,
	592, 587, 593, 594, 595, 596, 597, 598, 0, 600,
	601, 599, 602, 603, 0, 604, 605, 606, 607, 608,
	753, 0, 0, 610, 611, 618, 619, 620, 612, 613,
	614, 621, 622, 623, 624, 625, 626, 0, 628, 629,
	627, 630, 631, 632, 0, 633, 754, 634, 615, 616,
	635, 636, 0, 637, 638, 639, 640, 641, 642, 643,
	755, 0, 644, 0, 645, 646, 647, 648, 649, 650,
	652, 617, 653, 658, 659, 756, 654, 655, 656, 657,
	757, 661, 662, 663, 664, 0, 665, 666, 0, 660,
	651, 0, 667, 668, 669, 670, 671, 672, 0, 673,
	674, 0, 675, 758, 759, 760, 761, 0, 687, 0,
	676, 678, 679, 680, 681, 762, 682, 763, 0, 683,
	684, 685, 686, 677, 688, 689, 0, 0, 690, 691,
	693, 695, 696, 692, 694, 697, 0, 698, 0, 0,
	699, 700, 701, 764, 765, 766, 0, 703, 702, 704,
	705, 706, 767, 707, 708, 709, 1764, 0, 1471, 0,
	710, 711, 768, 712, 713, 714, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 306, 307, 309, 308, 310,
	311, 312, 313, 0, 314, 315, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 316, 0, 317, 318, 319,
	0, 320, 321, 322, 323, 324, 325, 326, 0, 0,
	0, 327, 0, 328, 0, 0, 0, 329, 330, 331,
	332, 333, 334, 335, 0, 0, 0, 336, 0, 0,
	0, 0, 337, 338, 0, 0, 0, 0, 339, 340,
	341, 342, 343, 344, 345, 346, 0, 0, 348, 349,
	350, 347, 351, 0, 352, 0, 353, 354, 355, 356,
	357, 358, 359, 0, 360, 361, 362, 0, 363, 364,
	365, 0, 0, 0, 0, 0, 0, 1473, 366, 367,
	368, 369, 370, 0, 371, 373, 0, 0, 0, 376,
	378, 372, 374, 0, 377, 375, 379, 0, 380, 381,
	382, 0, 0, 383, 384, 385, 0, 386, 387, 388,
	0, 389, 390, 391, 0, 392, 393, 0, 394, 395,
	396, 398, 400, 397, 399, 401, 402, 403, 404, 405,
	0, 0, 406, 0, 0, 0, 0, 0, 0, 0,
	407, 408, 409, 0, 0, 0, 0, 410, 0, 411,
	412, 413, 0, 414, 415, 0, 0, 416, 417, 418,
	0, 0, 419, 420, 421, 422, 423, 424, 425, 426,
	427, 0, 428, 0, 0, 0, 429, 0, 430, 431,
	432, 433, 434, 435, 436, 1763, 0, 0, 529, 0,
	437, 438, 439, 0, 440, 441, 442, 443, 444, 0,
	0, 0, 0, 445, 446, 447, 0, 0, 0, 448,
	530, 449, 0, 0, 0, 0, 0, 450, 451, 453,
	0, 0, 0, 452, 454, 455, 0, 456, 0, 0,
	0, 457, 458, 459, 460, 461, 462, 0, 463, 465,
	464, 0, 467, 0, 466, 0, 468, 469, 0, 0,
	470, 471, 472, 473, 474, 475, 478, 0, 0, 476,
	477, 479, 480, 0, 481, 482, 484, 487, 483, 485,
	486, 488, 501, 502, 489, 490, 491, 492, 493, 494,
	495, 496, 497, 498, 499, 500, 504, 0, 503, 0,
	505, 506, 507, 508, 509, 516, 518, 519, 514, 515,
	517, 520, 521, 523, 511, 512, 513, 0, 522, 510,
	0, 0, 0, 524, 525, 526, 527, 0, 0, 528,
	0, 531, 532, 0, 0, 533, 0, 534, 0, 0,
	536, 537, 538, 0, 0, 539, 540, 0, 0, 541,
	0, 0, 542, 543, 535, 544, 545, 546, 547, 548,
	549, 550, 551, 552, 553, 0, 554, 555, 0, 556,
	557, 558, 0, 559, 560, 561, 0, 562, 0, 563,
	564, 0, 565, 566, 567, 0, 568, 569, 570, 571,
	572, 573, 574, 575, 0, 576, 577, 579, 578, 580,
	0, 581, 0, 582, 583, 584, 0, 0, 0, 0,
	0, 585, 586, 588, 0, 589, 590, 591, 592, 587,
	593, 594, 595, 596, 597, 598, 0, 600, 601, 599,
	602, 603, 0, 604, 605, 606, 607, 608, 0, 609,
	0, 610, 611, 618, 619, 620, 612, 613, 614, 621,
	622, 623, 624, 625, 626, 0, 628, 629, 627, 630,
	631, 632, 1474, 633, 0, 634, 615, 616, 635, 636,
	0, 637, 638, 639, 640, 641, 642, 643, 0, 0,
	644, 0, 645, 646, 647, 648, 649, 650, 652, 617,
	653, 658, 659, 0, 654, 655, 656, 657, 0, 661,
	662, 663, 664, 0, 665, 666, 0, 660, 651, 0,
	667, 668, 669, 670, 671, 672, 0, 673, 674, 0,
	675, 0, 0, 0, 0, 0, 687, 0, 676, 678,
	679, 680, 681, 0, 682, 0, 0, 683, 684, 685,
	686, 677, 688, 689, 0, 0, 690, 691, 693, 695,
	696, 692, 694, 697, 0, 698, 0, 0, 699, 700,
	701, 0, 0, 0, 0, 703, 702, 704, 705, 706,
	0, 707, 708, 709, 1683, 0, 1471, 0, 710, 711,
	0, 712, 713, 714, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 306, 307, 309, 308, 310, 311, 312,
	313, 0, 314, 315, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 316, 0, 317, 318, 319, 0, 320,
	321, 322, 323, 324, 325, 326, 0, 0, 0, 327,
	0, 328, 0, 0, 0, 329, 330, 331, 332, 333,
	334, 335, 0, 0, 0, 336, 0, 0, 0, 0,
	337, 338, 0, 0, 0, 0, 339, 340, 341, 342,
	343, 344, 345, 346, 0, 0, 348, 349, 350, 347,
	351, 0, 352, 0, 353, 354, 355, 356, 357, 358,
	359, 0, 360, 361, 362, 0, 363, 364, 365, 0,
	0, 0, 0, 0, 0, 1473, 366, 367, 368, 369,
	370, 0, 371, 373, 0, 0, 0, 376, 378, 372,
	374, 0, 377, 375, 379, 0, 380, 381, 382, 0,
	0, 383, 384, 385, 0, 386, 387, 388, 0, 389,
	390, 391, 0, 392, 393, 0, 394, 395, 396, 398,
	400, 397, 399, 401, 402, 403, 404, 405, 0, 0,
	406, 0, 0, 0, 0, 0, 0, 0, 407, 408,
	409, 0, 0, 0, 0, 410, 0, 411, 412, 413,
	0, 414, 415, 0, 0, 416, 417, 418, 0, 0,
	419, 420, 421, 422, 423, 424, 425, 426, 427, 0,
	428, 0, 0, 0, 429, 0, 430, 431, 432, 433,
	434, 435, 436, 1682, 0, 0, 529, 0, 437, 438,
	439, 0, 440, 441, 442, 443, 444, 0, 0, 0,
	0, 445, 446, 447, 0, 0, 0, 448, 530, 449,
	0, 0, 0, 0, 0, 450, 451, 453, 0, 0,
	0, 452, 454, 455, 0, 456, 0, 0, 0, 457,
	458, 459, 460, 461, 462, 0, 463, 465, 464, 0,
	467, 0, 466, 0, 468, 469, 0, 0, 470, 471,
	472, 473, 474, 475, 478, 0, 0, 476, 477, 479,
	480, 0, 481, 482, 484, 487, 483, 485, 486, 488,
	501, 502, 489, 490, 491, 492, 493, 494, 495, 496,
	497, 498, 499, 500, 504, 0, 503, 0, 505, 506,
	507, 508, 509, 516, 518, 519, 514, 515, 517, 520,
	521, 523, 511, 512, 513, 0, 522, 510, 0, 0,
	0, 524, 525, 526, 527, 0, 0, 528, 0, 531,
	532, 0, 0, 533, 0, 534, 0, 0, 536, 537,
	538, 0, 0, 539, 540, 0, 0, 541, 0, 0,
	542, 543, 535, 544, 545, 546, 547, 548, 549, 550,
	551, 552, 553, 0, 554, 555, 0, 556, 557, 558,
	0, 559, 560, 561, 0, 562, 0, 563, 564, 0,
	565, 566, 567, 0, 568, 569, 570, 571, 572, 573,
	574, 575, 0, 576, 577, 579, 578, 580, 0, 581,
	0, 582, 583, 584, 0, 0, 0, 0, 0, 585,
	586, 588, 0, 589, 590, 591, 592, 587, 593, 594,
	595, 596, 597, 598, 0, 600, 601, 599, 602, 603,
	0, 604, 605, 606, 607, 608, 0, 609, 0, 610,
	611, 618, 619, 620, 612, 613, 614, 621, 622, 623,
	624, 625, 626, 0, 628, 629, 627, 630, 631, 632,
	1474, 633, 0, 634, 615, 616, 635, 636, 0, 637,
	638, 639, 640, 641, 642, 643, 0, 0, 644, 0,
	645, 646, 647, 648, 649, 650, 652, 617, 653, 658,
	659, 0, 654, 655, 656, 657, 0, 661, 662, 663,
	664, 0, 665, 666, 0, 660, 651, 0, 667, 668,
	669, 670, 671, 672, 0, 673, 674, 0, 675, 0,
	0, 0, 0, 0, 687, 0, 676, 678, 679, 680,
	681, 0, 682, 0, 0, 683, 684, 685, 686, 677,
	688, 689, 0, 0, 690, 691, 693, 695, 696, 692,
	694, 697, 0, 698, 0, 0, 699, 700, 701, 0,
	0, 0, 0, 703, 702, 704, 705, 706, 0, 707,
	708, 709, 1469, 0, 1471, 0, 710, 711, 0, 712,
	713, 714, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 306, 307, 309, 308, 310, 311, 312, 313, 0,
	314, 315, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 316, 0, 317, 318, 319, 0, 320, 321, 322,
	323, 324, 325, 326, 0, 0, 0, 327, 0, 328,
	0, 0, 0, 329, 330, 331, 332, 333, 334, 335,
	0, 0, 0, 336, 0, 0, 0, 0, 337, 338,
	0, 0, 0, 0, 339, 340, 341, 342, 343, 344,
	345, 346, 0, 0, 348, 349, 350, 347, 351, 0,
	352, 0, 353, 354, 355, 356, 357, 358, 359, 0,
	360, 361, 362, 0, 363, 364, 365, 0, 0, 0,
	0, 0, 0, 1473, 366, 367, 368, 369, 370, 0,
	371, 373, 0, 0, 0, 376, 378, 372, 374, 0,
	377, 375, 379, 0, 380, 381, 382, 0, 0, 383,
	384, 385, 0, 386, 387, 388, 0, 389, 390, 391,
	0, 392, 393, 0, 394, 395, 396, 398, 400, 397,
	399, 401, 402, 403, 404, 405, 0, 0, 406, 0,
	0, 0, 0, 0, 0, 0, 407, 408, 409, 0,
	0, 0, 0, 410, 0, 411, 412, 413, 0, 414,
	415, 0, 0, 416, 417, 418, 0, 0, 419, 420,
	421, 422, 423, 424, 425, 426, 427, 0, 428, 0,
	0, 0, 429, 0, 430, 431, 432, 433, 434, 435,
	436, 1468, 0, 0, 529, 0, 437, 438, 439, 0,
	440, 441, 442, 443, 444, 0, 0, 0, 0, 445,
	446, 447, 0, 0, 0, 448, 530, 449, 0, 0,
	0, 0, 0, 450, 451, 453, 0, 0, 0, 452,
	454, 455, 0, 456, 0, 0, 0, 457, 458, 459,
	460, 461, 462, 0, 463, 465, 464, 0, 467, 0,
	466, 0, 468, 469, 0, 0, 470, 471, 472, 473,
	474, 475, 478, 0, 0, 476, 477, 479, 480, 0,
	481, 482, 484, 487, 483, 485, 486, 488, 501, 502,
	489, 490, 491, 492, 493, 494, 495, 496, 497, 498,
	499, 500, 504, 0, 503, 0, 505, 506, 507, 508,
	509, 516, 518, 519, 514, 515, 517, 520, 521, 523,
	511, 512, 513, 0, 522, 510, 0, 0, 0, 524,
	525, 526, 527, 0, 0, 528, 0, 531, 532, 0,
	0, 533, 0, 534, 0, 0, 536, 537, 538, 0,
	0, 539, 540, 0, 0, 541, 0, 0, 542, 543,
	535, 544, 545, 546, 547, 548, 549, 550, 551, 552,
	553, 0, 554, 555, 0, 556, 557, 558, 0, 559,
	560, 561, 0, 562, 0, 563, 564, 0, 565, 566,
	567, 0, 568, 569, 570, 571, 572, 573, 574, 575,
	0, 576, 577, 579, 578, 580, 0, 581, 0, 582,
	583, 584, 0, 0, 0, 0, 0, 585, 586, 588,
	0, 589, 590, 591, 592, 587, 593, 594, 595, 596,
	597, 598, 0, 600, 601, 599, 602, 603, 0, 604,
	605, 606, 607, 608, 0, 609, 0, 610, 611, 618,
	619, 620, 612, 613, 614, 621, 622, 623, 624, 625,
	626, 0, 628, 629, 627, 630, 631, 632, 1474, 633,
	0, 634, 615, 616, 635, 636, 0, 637, 638, 639,
	640, 641, 642, 643, 0, 0, 644, 0, 645, 646,
	647, 648, 649, 650, 652, 617, 653, 658, 659, 0,
	654, 655, 656, 657, 0, 661, 662, 663, 664, 0,
	665, 666, 0, 660, 651, 0, 667, 668, 669, 670,
	671, 672, 0, 673, 674, 0, 675, 0, 0, 0,
	0, 0, 687, 0, 676, 678, 679, 680, 681, 0,
	682, 0, 0, 683, 684, 685, 686, 677, 688, 689,
	0, 0, 690, 691, 693, 695, 696, 692, 694, 697,
	0, 698, 0, 0, 699, 700, 701, 0, 0, 0,
	0, 703, 702, 704, 705, 706, 0, 707, 708, 709,
	2295, 0, 1471, 0, 710, 711, 0, 712, 713, 714,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 306,
	307, 309, 308, 310, 311, 312, 313, 0, 314, 315,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 316,
	0, 317, 318, 319, 0, 320, 321, 322, 323, 324,
	325, 326, 0, 0, 0, 327, 0, 328, 0, 0,
	0, 329, 330, 331, 332, 333, 334, 335, 0, 0,
	0, 336, 0, 0, 0, 0, 337, 338, 0, 0,
	0, 0, 339, 340, 341, 342, 343, 344, 345, 346,
	0, 0, 348, 349, 350, 347, 351, 0, 352, 0,
	353, 354, 355, 356, 357, 358, 359, 0, 360, 361,
	362, 0, 363, 364, 365, 0, 0, 0, 0, 0,
	0, 1473, 366, 367, 368, 369, 370, 0, 371, 373,
	0, 0, 0, 376, 378, 372, 374, 0, 377, 375,
	379, 0, 380, 381, 382, 0, 0, 383, 384, 385,
	0, 386, 387, 388, 0, 389, 390, 391, 0, 392,
	393, 0, 394, 395, 396, 398, 400, 397, 399, 401,
	402, 403, 404, 405, 0, 0, 406, 0, 0, 0,
	0, 0, 0, 0, 407, 408, 409, 0, 0, 0,
	0, 410, 0, 411, 412, 413, 0, 414, 415, 0,
	0, 416, 417, 418, 0, 0, 419, 420, 421, 422,
	423, 424, 425, 426, 427, 0, 428, 0, 0, 0,
	429, 0, 430, 431, 432, 433, 434, 435, 436, 0,
	0, 0, 529, 0, 437, 438, 439, 0, 440, 441,
	442, 443, 444, 0, 0, 0, 0, 445, 446, 447,
	0, 0, 0, 448, 530, 449, 0, 0, 0, 0,
	0, 450, 451, 453, 0, 0, 0, 452, 454, 455,
	0, 456, 0, 0, 0, 457, 458, 459, 460, 461,
	462, 0, 463, 465, 464, 0, 467, 0, 466, 0,
	468, 469, 0, 0, 470, 471, 472, 473, 474, 475,
	478, 0, 0, 476, 477, 479, 480, 0, 481, 482,
	484, 487, 483, 485, 486, 488, 501, 502, 489, 490,
	491, 492, 493, 494, 495, 496, 497, 498, 499, 500,
	504, 0, 503, 0, 505, 506, 507, 508, 509, 516,
	518, 519, 514, 515, 517, 520, 521, 523, 511, 512,
	513, 0, 522, 510, 0, 0, 0, 524, 525, 526,
	527, 0, 0, 528, 0, 531, 532, 0, 0, 533,
	0, 534, 0, 0, 536, 537, 538, 0, 0, 539,
	540, 0, 0, 541, 0, 0, 542, 543, 535, 544,
	545, 546, 547, 548, 549, 550, 551, 552, 553, 0,
	554, 555, 0, 556, 557, 558, 0, 559, 560, 561,
	0, 562, 0, 563, 564, 0, 565, 566, 567, 0,
	568, 569, 570, 571, 572, 573, 574, 575, 0, 576,
	577, 579, 578, 580, 0, 581, 0, 582, 583, 584,
	0, 0, 0, 0, 0, 585, 586, 588, 0, 589,
	590, 591, 592, 587, 593, 594, 595, 596, 597, 598,
	0, 600, 601, 599, 602, 603, 0, 604, 605, 606,
	607, 608, 0, 609, 0, 610, 611, 618, 619, 620,
	612, 613, 614, 621, 622, 623, 624, 625, 626, 0,
	628, 629, 627, 630, 631, 632, 1474, 633, 0, 634,
	615, 616, 635, 636, 0, 637, 638, 639, 640, 641,
	642, 643, 0, 0, 644, 0, 645, 646, 647, 648,
	649, 650, 652, 617, 653, 658, 659, 0, 654, 655,
	656, 657, 0, 661, 662, 663, 664, 0, 665, 666,
	0, 660, 651, 0, 667, 668, 669, 670, 671, 672,
	0, 673, 674, 0, 675, 0, 0, 0, 0, 0,
	687, 0, 676, 678, 679, 680, 681, 0, 682, 0,
	0, 683, 684, 685, 686, 677, 688, 689, 0, 0,
	690, 691, 693, 695, 696, 692, 694, 697, 0, 698,
	0, 0, 699, 700, 701, 0, 0, 0, 0, 703,
	702, 704, 705, 706, 0, 707, 708, 709, 2260, 0,
	1471, 0, 710, 711, 0, 712, 713, 714, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 306, 307, 309,
	308, 310, 311, 312, 313, 0, 314, 315, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 316, 0, 317,
	318, 319, 0, 320, 321, 322, 323, 324, 325, 326,
	0, 0, 0, 327, 0, 328, 0, 0, 0, 329,
	330, 331, 332, 333, 334, 335, 0, 0, 0, 336,
	0, 0, 0, 0, 337, 338, 0, 0, 0, 0,
	339, 340, 341, 342, 343, 344, 345, 346, 0, 0,
	348, 349, 350, 347, 351, 0, 352, 0, 353, 354,
	355, 356, 357, 358, 359, 0, 360, 361, 362, 0,
	363, 364, 365, 0, 0, 0, 0, 0, 0, 1473,
	366, 367, 368, 369, 370, 0, 371, 373, 0, 0,
	0, 376, 378, 372, 374, 0, 377, 375, 379, 0,
	380, 381, 382, 0, 0, 383, 384, 385, 0, 386,
	387, 388, 0, 389, 390, 391, 0, 392, 393, 0,
	394, 395, 396, 398, 400, 397, 399, 401, 402, 403,
	404, 405, 0, 0, 406, 0, 0, 0, 0, 0,
	0, 0, 407, 408, 409, 0, 0, 0, 0, 410,
	0, 411, 412, 413, 0, 414, 415, 0, 0, 416,
	417, 418, 0, 0, 419, 420, 421, 422, 423, 424,
	425, 426, 427, 0, 428, 0, 0, 0, 429, 0,
	430, 431, 432, 433, 434, 435, 436, 0, 0, 0,
	529, 0, 437, 438, 439, 0, 440, 441, 442, 443,
	444, 0, 0, 0, 0, 445, 446, 447, 0, 0,
	0, 448, 530, 449, 0, 0, 0, 0, 0, 450,
	451, 453, 0, 0, 0, 452, 454, 455, 0, 456,
	0, 0, 0, 457, 458, 459, 460, 461, 462, 0,
	463, 465, 464, 0, 467, 0, 466, 0, 468, 469,
	0, 0, 470, 471, 472, 473, 474, 475, 478, 0,
	0, 476, 477, 479, 480, 0, 481, 482, 484, 487,
	483, 485, 486, 488, 501, 502, 489, 490, 491, 492,
	493, 494, 495, 496, 497, 498, 499, 500, 504, 0,
	503, 0, 505, 506, 507, 508, 509, 516, 518, 519,
	514, 515, 517, 520, 521, 523, 511, 512, 513, 0,
	522, 510, 0, 0, 0, 524, 525, 526, 527, 0,
	0, 528, 0, 531, 532, 0, 0, 533, 0, 534,
	0, 0, 536, 537, 538, 0, 0, 539, 540, 0,
	0, 541, 0, 0, 542, 543, 535, 544, 545, 546,
	547, 548, 549, 550, 551, 552, 553, 0, 554, 555,
	0, 556, 557, 558, 0, 559, 560, 561, 0, 562,
	0, 563, 564, 0, 565, 566, 567, 0, 568, 569,
	570, 571, 572, 573, 574, 575, 0, 576, 577, 579,
	578, 580, 0, 581, 0, 582, 583, 584, 0, 0,
	0, 0, 0, 585, 586, 588, 0, 589, 590, 591,
	592, 587, 593, 594, 595, 596, 597, 598, 0, 600,
	601, 599, 602, 603, 0, 604, 605, 606, 607, 608,
	0, 609, 0, 610, 611, 618, 619, 620, 612, 613,
	614, 621, 622, 623, 624, 625, 626, 0, 628, 629,
	627, 630, 631, 632, 1474, 633, 0, 634, 615, 616,
	635, 636, 0, 637, 638, 639, 640, 641, 642, 643,
	0, 0, 644, 0, 645, 646, 647, 648, 649, 650,
	652, 617, 653, 658, 659, 0, 654, 655, 656, 657,
	0, 661, 662, 663, 664, 0, 665, 666, 0, 660,
	651, 0, 667, 668, 669, 670, 671, 672, 0, 673,
	674, 0, 675, 0, 0, 0, 0, 0, 687, 0,
	676, 678, 679, 680, 681, 0, 682, 0, 0, 683,
	684, 685, 686, 677, 688, 689, 0, 0, 690, 691,
	693, 695, 696, 692, 694, 697, 0, 698, 0, 0,
	699, 700, 701, 0, 0, 0, 0, 703, 702, 704,
	705, 706, 1471, 707, 708, 709, 0, 0, 0, 0,
	710, 711, 0, 712, 713, 714, 0, 0, 0, 306,
	307, 309, 308, 310, 311, 312, 313, 0, 314, 315,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 316,
	0, 317, 318, 319, 0, 320, 321, 322, 323, 324,
	325, 326, 0, 0, 0, 327, 0, 328, 0, 0,
	0, 329, 330, 331, 332, 333, 334, 335, 0, 0,
	0, 336, 0, 0, 0, 0, 337, 338, 0, 0,
	0, 0, 339, 340, 341, 342, 343, 344, 345, 346,
	0, 0, 348, 349, 350, 347, 351, 0, 352, 0,
	353, 354, 355, 356, 357, 358, 359, 0, 360, 361,
	362, 0, 363, 364, 365, 0, 0, 0, 0, 0,
	0, 1473, 366, 367, 368, 369, 370, 0, 371, 373,
	0, 0, 0, 376, 378, 372, 374, 0, 377, 375,
	379, 0, 380, 381, 382, 0, 0, 383, 384, 385,
	0, 386, 387, 388, 0, 389, 390, 391, 0, 392,
	393, 0, 394, 395, 396, 398, 400, 397, 399, 401,
	402, 403, 404, 405, 0, 0, 406, 0, 0, 0,
	0, 0, 0, 0, 407, 408, 409, 0, 0, 0,
	0, 410, 0, 411, 412, 413, 0, 414, 415, 0,
	0, 416, 417, 418, 0, 0, 419, 420, 421, 422,
	423, 424, 425, 426, 427, 0, 428, 0, 0, 0,
	429, 0, 430, 431, 432, 433, 434, 435, 436, 0,
	0, 0, 529, 0, 437, 438, 439, 0, 440, 441,
	442, 443, 444, 0, 0, 0, 0, 445, 446, 447,
	0, 0, 0, 448, 530, 449, 0, 0, 0, 0,
	0, 450, 451, 453, 0, 0, 0, 452, 454, 455,
	0, 456, 0, 0, 0, 457, 458, 459, 460, 461,
	462, 0, 463, 465, 464, 0, 467, 0, 466, 0,
	468, 469, 0, 0, 470, 471, 472, 473, 474, 475,
	478, 0, 0, 476, 477, 479, 480, 0, 481, 482,
	484, 487, 483, 485, 486, 488, 501, 502, 489, 490,
	491, 492, 493, 494, 495, 496, 497, 498, 499, 500,
	504, 0, 503, 0, 505, 506, 507, 508, 509, 516,
	518, 519, 514, 515, 517, 520, 521, 523, 511, 512,
	513, 0, 522, 510, 0, 0, 0, 524, 525, 526,
	527, 0, 0, 528, 0, 531, 532, 0, 0, 533,
	0, 534, 0, 0, 536, 537, 538, 0, 0, 539,
	540, 0, 0, 541, 0, 0, 542, 543, 535, 544,
	545, 546, 547, 548, 549, 550, 551, 552, 553, 0,
	554, 555, 0, 556, 557, 558, 0, 559, 560, 561,
	0, 562, 0, 563, 564, 0, 565, 566, 567, 0,
	568, 569, 570, 571, 572, 573, 574, 575, 0, 576,
	577, 579, 578, 580, 0, 581, 0, 582, 583, 584,
	0, 0, 0, 0, 0, 585, 586, 588, 0, 589,
	590, 591, 592, 587, 593, 594, 595, 596, 597, 598,
	0, 600, 601, 599, 602, 603, 0, 604, 605, 606,
	607, 608, 0, 609, 0, 610, 611, 618, 619, 620,
	612, 613, 614, 621, 622, 623, 624, 625, 626, 0,
	628, 629, 627, 630, 631, 632, 1474, 633, 0, 634,
	615, 616, 635, 636, 0, 637, 638, 639, 640, 641,
	642, 643, 0, 0, 644, 0, 645, 646, 647, 648,
	649, 650, 652, 617, 653, 658, 659, 0, 654, 655,
	656, 657, 0, 661, 662, 663, 664, 0, 665, 666,
	0, 660, 651, 0, 667, 668, 669, 670, 671, 672,
	0, 673, 674, 0, 675, 0, 0, 0, 0, 0,
	687, 0, 676, 678, 679, 680, 681, 0, 682, 0,
	0, 683, 684, 685, 686, 677, 688, 689, 0, 0,
	690, 691, 693, 695, 696, 692, 694, 697, 0, 698,
	0, 0, 699, 700, 701, 0, 0, 0, 0, 703,
	702, 704, 705, 706, 0, 707, 708, 709, 0, 0,
	0, 0, 710, 711, 0, 712, 713, 714, 1985, 1986,
	0, 2018, 2019, 2020, 2029, 2030, 2031, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2022, 2016, 0, 0, 0, 0, 0, 0, 0,
	1988, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2035, 1985, 1986, 0, 2018, 2019, 2020, 2029, 2030,
	2031, 0, 0, 0, 0, 0, 0, 0, 0, 2041,
	0, 0, 0, 0, 0, 2022, 2016, 0, 1987, 0,
	0, 0, 0, 0, 1988, 0, 0, 0, 0, 2007,
	0, 0, 0, 0, 0, 2035, 1985, 1986, 2004, 2018,
	2019, 2020, 2029, 2030, 2031, 0, 0, 0, 0, 0,
	0, 0, 0, 2041, 0, 0, 0, 0, 0, 2022,
	2016, 0, 1987, 0, 0, 0, 0, 0, 1988, 0,
	0, 0, 0, 2007, 0, 0, 0, 0, 0, 2035,
	0, 0, 2004, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2041, 0, 0,
	0, 0, 0, 0, 0, 0, 1987, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2007, 0, 2010,
	2011, 2012, 2013, 0, 0, 0, 2004, 0, 0, 1993,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2010, 2011, 2012, 2013, 0, 0, 0,
	0, 0, 2026, 1993, 0, 0, 2036, 0, 0, 0,
	0, 0, 0, 2015, 2017, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2032, 0, 2033, 0, 2010, 2011, 2012,
	2013, 0, 2002, 2003, 0, 0, 2026, 1993, 0, 0,
	2036, 0, 0, 0, 0, 0, 0, 2015, 2017, 0,
	0, 2024, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2008, 2032, 0, 2033,
	0, 0, 0, 0, 0, 0, 2002, 2003, 0, 0,
	2026, 0, 0, 0, 2036, 0, 0, 0, 0, 0,
	0, 2015, 2017, 0, 0, 2024, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2008, 2032, 0, 2033, 0, 2034, 0, 0, 0, 0,
	2002, 2003, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2023, 0, 0, 2024,
	0, 0, 0, 0, 0, 0, 0, 2038, 0, 0,
	0, 0, 0, 0, 2008, 0, 0, 0, 0, 2034,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2023, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2038, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2034, 0, 0, 0, 2014, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2023, 0, 0, 0, 0, 0,
	0, 0, 0, 2009, 0, 2038, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2014, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2027, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2009, 0, 1985,
	1986, 0, 2018, 2019, 2020, 2029, 2030, 2031, 0, 0,
	0, 0, 0, 0, 0, 2014, 0, 0, 0, 2040,
	0, 0, 2022, 2016, 0, 0, 0, 2027, 0, 0,
	0, 1988, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2009, 2035, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2041, 0, 0, 2040, 0, 0, 0, 0, 0, 1987,
	0, 2027, 0, 0, 0, 0, 0, 0, 0, 0,
	2007, 0, 0, 0, 0, 0, 0, 0, 0, 2004,
	0, 0, 0, 0, 0, 0, 0, 2025, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2040, 0, 1999,
	2000, 2006, 2028, 2005, 2001, 0, 1998, 1996, 1997, 1989,
	1990, 1991, 1992, 1994, 1995, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3595, 0, 0, 0, 0, 0,
	0, 2025, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1999, 2000, 2006, 2028, 2005, 2001, 0,
	1998, 1996, 1997, 1989, 1990, 1991, 1992, 1994, 1995, 0,
	2010, 2011, 2012, 2013, 0, 0, 0, 0, 3592, 0,
	1993, 0, 0, 0, 0, 2025, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1999, 2000, 2006,
	2028, 2005, 2001, 0, 1998, 1996, 1997, 1989, 1990, 1991,
	1992, 1994, 1995, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3591, 2026, 0, 1985, 1986, 2036, 2018, 2019,
	2020, 2029, 2030, 2031, 2015, 2017, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2022, 2016,
	0, 0, 0, 0, 2032, 0, 2033, 1988, 0, 0,
	0, 0, 0, 2002, 2003, 0, 0, 0, 2035, 1985,
	1986, 0, 2018, 2019, 2020, 2029, 2030, 2031, 0, 0,
	0, 0, 2024, 0, 0, 0, 2041, 0, 0, 0,
	0, 0, 2022, 2016, 0, 1987, 0, 2008, 0, 0,
	0, 1988, 0, 0, 0, 0, 2007, 0, 0, 0,
	0, 0, 2035, 0, 0, 2004, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2041, 0, 0, 0, 0, 0, 0, 0, 0, 1987,
	0, 0, 0, 0, 0, 0, 2034, 0, 0, 0,
	2007, 0, 0, 0, 0, 0, 0, 0, 0, 2004,
	0, 0, 0, 0, 0, 0, 0, 2023, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2038, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2010, 2011, 2012, 2013,
	0, 0, 0, 0, 0, 0, 1993, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2014, 0,
	2010, 2011, 2012, 2013, 0, 0, 0, 0, 0, 2026,
	1993, 0, 0, 2036, 0, 0, 0, 0, 0, 0,
	2015, 2017, 0, 0, 2009, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2032, 0, 2033, 0, 0, 0, 0, 0, 0, 2002,
	2003, 0, 0, 2026, 2027, 1985, 1986, 2036, 2018, 2019,
	2020, 2029, 2030, 2031, 2015, 2017, 0, 0, 2024, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2022, 2016,
	0, 0, 0, 2008, 2032, 0, 2033, 1988, 0, 0,
	2040, 0, 0, 2002, 2003, 0, 0, 0, 2035, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2024, 0, 0, 0, 2041, 0, 0, 0,
	0, 0, 0, 0, 0, 1987, 0, 2008, 0, 0,
	0, 0, 2034, 0, 0, 0, 2007, 0, 0, 0,
	0, 0, 0, 0, 0, 2004, 0, 0, 0, 0,
	0, 0, 0, 2023, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2038, 0, 0, 0, 2025, 0,
	0, 0, 0, 0, 0, 0, 2034, 0, 0, 0,
	1999, 2000, 2006, 2028, 2005, 2001, 0, 1998, 1996, 1997,
	1989, 1990, 1991, 1992, 1994, 1995, 0, 2023, 0, 0,
	0, 0, 0, 0, 0, 3590, 0, 0, 2038, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2014, 0, 2010, 2011, 2012, 2013,
	0, 0, 0, 0, 0, 0, 1993, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2009, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2014, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2026,
	2027, 0, 0, 2036, 0, 0, 0, 0, 0, 0,
	2015, 2017, 0, 0, 2009, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2032, 0, 2033, 0, 0, 0, 2040, 0, 0, 2002,
	2003, 0, 0, 0, 2027, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2024, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2008, 0, 0, 0, 0, 0, 0,
	2040, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2025, 0, 0, 0, 0, 0,
	0, 0, 2034, 0, 0, 0, 1999, 2000, 2006, 2028,
	2005, 2001, 0, 1998, 1996, 1997, 1989, 1990, 1991, 1992,
	1994, 1995, 0, 2023, 0, 0, 0, 0, 0, 0,
	0, 2850, 0, 0, 2038, 0, 0, 0, 2025, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1999, 2000, 2006, 2028, 2005, 2001, 0, 1998, 1996, 1997,
	1989, 1990, 1991, 1992, 1994, 1995, 0, 0, 0, 0,
	0, 5179, 1985, 1986, 0, 2018, 2019, 2020, 2029, 2030,
	2031, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2014, 2022, 2016, 0, 0, 0,
	0, 0, 0, 0, 1988, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2035, 0, 0, 0, 0,
	2009, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2041, 0, 0, 0, 0, 0, 0,
	1985, 1986, 1987, 2018, 2019, 2020, 2029, 2030, 2031, 0,
	2027, 0, 0, 2007, 0, 0, 0, 0, 0, 0,
	0, 0, 2004, 2022, 2016, 0, 0, 0, 0, 0,
	0, 0, 1988, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2035, 0, 0, 2040, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2041, 0, 0, 0, 0, 0, 0, 0, 0,
	1987, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2007, 0, 0, 0, 0, 0, 0, 0, 0,
	2004, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2010, 2011, 2012, 2013, 0, 0, 0,
	0, 0, 0, 1993, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2025, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1999, 2000, 2006, 2028,
	2005, 2001, 0, 1998, 1996, 1997, 1989, 1990, 1991, 1992,
	1994, 1995, 0, 0, 0, 0, 2026, 5079, 0, 0,
	2036, 0, 0, 0, 0, 0, 0, 2015, 2017, 0,
	0, 2010, 2011, 2012, 2013, 0, 0, 0, 0, 0,
	0, 1993, 0, 0, 0, 0, 0, 2032, 0, 2033,
	0, 0, 0, 0, 0, 0, 2002, 2003, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2024, 0, 0, 0, 0,
	0, 0, 0, 0, 2026, 0, 0, 0, 2036, 0,
	2008, 0, 0, 0, 0, 2015, 2017, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2032, 0, 2033, 0, 0,
	0, 0, 0, 0, 2002, 2003, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2034,
	0, 0, 0, 2024, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2008, 0,
	2023, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2038, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2034, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2023, 0,
	0, 2014, 0, 0, 0, 0, 0, 0, 0, 2038,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2009, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1985, 1986, 0, 2018, 2019, 2020, 2029,
	2030, 2031, 0, 0, 0, 0, 0, 2027, 0, 0,
	0, 0, 0, 0, 0, 0, 2022, 2016, 0, 2014,
	0, 0, 0, 0, 0, 1988, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2035, 0, 0, 0,
	0, 0, 0, 2040, 0, 2009, 0, 0, 0, 0,
	0, 0, 0, 0, 2041, 0, 0, 0, 0, 0,
	0, 0, 0, 1987, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2007, 2027, 0, 0, 0, 0,
	0, 0, 0, 2004, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2040, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2025, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1999, 2000, 2006, 2028, 2005, 2001, 0,
	1998, 1996, 1997, 1989, 1990, 1991, 1992, 1994, 1995, 0,
	0, 0, 0, 0, 5028, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2010, 2011, 2012, 2013, 0, 0,
	0, 0, 0, 0, 1993, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2025,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1999, 2000, 2006, 2028, 2005, 2001, 0, 1998, 1996,
	1997, 1989, 1990, 1991, 1992, 1994, 1995, 2026, 0, 0,
	0, 2036, 5027, 0, 0, 0, 0, 0, 2015, 2017,
	0, 0, 1985, 1986, 0, 2018, 2019, 2020, 2029, 2030,
	2031, 0, 0, 0, 0, 0, 0, 0, 2032, 0,
	2033, 0, 0, 0, 0, 2022, 2016, 2002, 2003, 0,
	0, 0, 0, 0, 1988, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2035, 2024, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2008, 0, 2041, 0, 0, 0, 0, 0, 0,
	0, 0, 1987, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2007, 0, 0, 0, 0, 0, 0,
	0, 0, 2004, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2034, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2023, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2038, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2010, 2011, 2012, 2013, 0, 0, 0,
	0, 0, 0, 1993, 0, 0, 0, 0, 0, 0,
	1985, 1986, 0, 2018, 2019, 2020, 2029, 2030, 2031, 0,
	0, 0, 2014, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2022, 2016, 0, 0, 0, 0, 0,
	0, 0, 1988, 0, 0, 0, 2026, 0, 2009, 0,
	2036, 0, 0, 2035, 0, 0, 0, 2015, 2017, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2041, 0, 0, 0, 0, 0, 2032, 2027, 2033,
	1987, 0, 0, 0, 0, 0, 2002, 2003, 0, 0,
	0, 2007, 0, 0, 0, 0, 0, 0, 0, 0,
	2004, 0, 0, 0, 0, 2024, 0, 0, 0, 0,
	0, 0, 0, 0, 2040, 0, 0, 0, 0, 0,
	2008, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2034,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2010, 2011, 2012, 2013, 0, 0, 0, 0, 0,
	2023, 1993, 2025, 0, 0, 0, 0, 0, 0, 0,
	0, 2038, 0, 0, 1999, 2000, 2006, 2028, 2005, 2001,
	0, 1998, 1996, 1997, 1989, 1990, 1991, 1992, 1994, 1995,
	0, 0, 0, 0, 0, 4825, 0, 0, 0, 0,
	0, 0, 0, 0, 2026, 0, 0, 0, 2036, 0,
	0, 0, 0, 0, 0, 2015, 2017, 0, 0, 1985,
	1986, 0, 2018, 2019, 2020, 2029, 2030, 2031, 0, 0,
	0, 2014, 0, 0, 0, 2032, 0, 2033, 0, 0,
	0, 0, 2022, 2016, 2002, 2003, 0, 0, 0, 0,
	0, 1988, 0, 0, 0, 0, 0, 2009, 0, 0,
	0, 0, 2035, 2024, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2008, 0,
	2041, 0, 0, 0, 0, 0, 0, 2027, 0, 1987,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2007, 0, 0, 0, 0, 0, 0, 0, 0, 2004,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2040, 0, 0, 0, 2034, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2023, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2038,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2010, 2011, 2012, 2013, 0, 0, 0, 0, 0, 0,
	1993, 2025, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1999, 2000, 2006, 2028, 2005, 2001, 2014,
	1998, 1996, 1997, 1989, 1990, 1991, 1992, 1994, 1995, 0,
	0, 0, 0, 0, 4643, 0, 0, 0, 0, 0,
	0, 0, 0, 2026, 0, 2009, 0, 2036, 0, 0,
	0, 0, 0, 0, 2015, 2017, 0, 0, 1985, 1986,
	0, 2018, 2019, 2020, 2029, 2030, 2031, 0, 0, 0,
	0, 0, 0, 0, 2032, 2027, 2033, 0, 0, 0,
	0, 2022, 2016, 2002, 2003, 0, 0, 0, 0, 0,
	1988, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2035, 2024, 0, 0, 0, 0, 0, 0, 0,
	0, 2040, 0, 0, 0, 0, 0, 2008, 0, 2041,
	0, 0, 0, 0, 0, 0, 0, 0, 1987, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2007,
	0, 0, 0, 0, 0, 0, 0, 0, 2004, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2034, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2023, 0, 2025,
	0, 0, 0, 0, 0, 0, 0, 0, 2038, 0,
	0, 1999, 2000, 2006, 2028, 2005, 2001, 0, 1998, 1996,
	1997, 1989, 1990, 1991, 1992, 1994, 1995, 0, 0, 0,
	0, 0, 4546, 0, 0, 0, 0, 0, 0, 2010,
	2011, 2012, 2013, 0, 0, 0, 0, 0, 0, 1993,
	0, 0, 0, 0, 0, 0, 1985, 1986, 0, 2018,
	2019, 2020, 2029, 2030, 2031, 0, 0, 0, 2014, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2022,
	2016, 0, 0, 0, 0, 0, 0, 0, 1988, 0,
	0, 0, 2026, 0, 2009, 0, 2036, 0, 0, 2035,
	0, 0, 0, 2015, 2017, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2041, 0, 0,
	0, 0, 0, 2032, 2027, 2033, 1987, 0, 0, 0,
	0, 0, 2002, 2003, 0, 0, 0, 2007, 0, 0,
	0, 0, 0, 0, 0, 0, 2004, 0, 0, 0,
	0, 2024, 0, 0, 0, 0, 0, 0, 0, 0,
	2040, 0, 0, 0, 0, 0, 2008, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2034, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2010, 2011, 2012,
	2013, 0, 0, 0, 0, 0, 2023, 1993, 2025, 0,
	0, 0, 0, 0, 0, 0, 0, 2038, 0, 0,
	1999, 2000, 2006, 2028, 2005, 2001, 0, 1998, 1996, 1997,
	1989, 1990, 1991, 1992, 1994, 1995, 0, 0, 0, 0,
	0, 4545, 0, 0, 0, 0, 0, 0, 0, 0,
	2026, 0, 0, 0, 2036, 0, 0, 0, 0, 0,
	0, 2015, 2017, 0, 0, 1985, 1986, 0, 2018, 2019,
	2020, 2029, 2030, 2031, 0, 0, 0, 2014, 0, 0,
	0, 2032, 0, 2033, 0, 0, 0, 0, 2022, 2016,
	2002, 2003, 0, 0, 0, 0, 0, 1988, 0, 0,
	0, 0, 0, 2009, 0, 0, 0, 0, 2035, 2024,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2008, 0, 2041, 0, 0, 0,
	0, 0, 0, 2027, 0, 1987, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2007, 0, 0, 0,
	0, 0, 0, 0, 0, 2004, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2040,
	0, 0, 0, 2034, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2023, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2038, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2010, 2011, 2012, 2013,
	0, 0, 0, 0, 0, 0, 1993, 2025, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1999,
	2000, 2006, 2028, 2005, 2001, 2014, 1998, 1996, 1997, 1989,
	1990, 1991, 1992, 1994, 1995, 0, 0, 0, 0, 0,
	4544, 0, 0, 0, 0, 0, 0, 0, 0, 2026,
	0, 2009, 0, 2036, 0, 0, 0, 0, 0, 0,
	2015, 2017, 0, 0, 1985, 1986, 0, 2018, 2019, 2020,
	2029, 2030, 2031, 0, 0, 0, 0, 0, 0, 0,
	2032, 2027, 2033, 0, 0, 0, 0, 2022, 2016, 2002,
	2003, 0, 0, 0, 0, 0, 1988, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2035, 2024, 0,
	0, 0, 0, 0, 0, 0, 0, 2040, 0, 0,
	0, 0, 0, 2008, 0, 2041, 0, 0, 0, 0,
	0, 0, 0, 0, 1987, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2007, 0, 0, 0, 0,
	0, 0, 0, 0, 2004, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2034, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2023, 0, 2025, 0, 0, 0, 0,
	0, 0, 0, 0, 2038, 0, 0, 1999, 2000, 2006,
	2028, 2005, 2001, 0, 1998, 1996, 1997, 1989, 1990, 1991,
	1992, 1994, 1995, 0, 0, 0, 0, 0, 4146, 0,
	0, 0, 0, 0, 0, 2010, 2011, 2012, 2013, 0,
	0, 0, 0, 0, 0, 1993, 0, 0, 0, 0,
	0, 0, 1985, 1986, 0, 2018, 2019, 2020, 2029, 2030,
	2031, 0, 0, 0, 2014, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2022, 2016, 0, 0, 0,
	0, 0, 0, 0, 1988, 0, 0, 0, 2026, 0,
	2009, 0, 2036, 0, 0, 2035, 0, 0, 0, 2015,
	2017, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2041, 0, 0, 0, 0, 0, 2032,
	2027, 2033, 1987, 0, 0, 0, 0, 0, 2002, 2003,
	0, 0, 0, 2007, 0, 0, 0, 0, 0, 0,
	0, 0, 2004, 0, 0, 0, 0, 2024, 0, 0,
	0, 0, 0, 0, 0, 0, 2040, 0, 0, 0,
	0, 0, 2008, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2034, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2010, 2011, 2012, 2013, 0, 0, 0,
	0, 0, 2023, 1993, 2025, 0, 0, 0, 0, 0,
	0, 0, 0, 2038, 0, 0, 1999, 2000, 2006, 2028,
	2005, 2001, 0, 1998, 1996, 1997, 1989, 1990, 1991, 1992,
	1994, 1995, 0, 0, 0, 0, 0, 3588, 0, 0,
	0, 0, 0, 0, 0, 0, 2026, 0, 0, 0,
	2036, 0, 0, 0, 0, 0, 0, 2015, 2017, 0,
	0, 1985, 1986, 0, 2018, 2019, 2020, 2029, 2030, 2031,
	0, 0, 0, 2014, 0, 0, 0, 2032, 0, 2033,
	0, 0, 0, 0, 2022, 2016, 2002, 2003, 0, 0,
	0, 0, 0, 1988, 0, 0, 0, 0, 0, 2009,
	0, 0, 0, 0, 2035, 2024, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2008, 0, 2041, 0, 0, 0, 0, 0, 0, 2027,
	0, 1987, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2007, 0, 0, 0, 0, 0, 0, 0,
	0, 2004, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2040, 0, 0, 0, 2034,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2023, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2038, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2010, 2011, 2012, 2013, 0, 0, 0, 0,
	0, 0, 1993, 2025, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1999, 2000, 2006, 2028, 2005,
	2001, 2014, 1998, 1996, 1997, 1989, 1990, 1991, 1992, 1994,
	1995, 0, 0, 0, 0, 0, 3587, 0, 0, 0,
	0, 0, 0, 0, 0, 2026, 0, 2009, 0, 2036,
	0, 0, 0, 0, 0, 0, 2015, 2017, 0, 0,
	1985, 1986, 0, 2018, 2019, 2020, 2029, 2030, 2031, 0,
	0, 0, 0, 0, 0, 0, 2032, 2027, 2033, 0,
	0, 0, 0, 2022, 2016, 2002, 2003, 0, 0, 0,
	0, 0, 1988, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2035, 2024, 0, 0, 0, 0, 0,
	0, 0, 0, 2040, 0, 0, 0, 0, 0, 2008,
	0, 2041, 0, 0, 0, 0, 0, 0, 0, 0,
	1987, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2007, 0, 0, 0, 0, 0, 0, 0, 0,
	2004, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2034, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2023,
	0, 2025, 0, 0, 0, 0, 0, 0, 0, 0,
	2038, 0, 0, 1999, 2000, 2006, 2028, 2005, 2001, 0,
	1998, 1996, 1997, 1989, 1990, 1991, 1992, 1994, 1995, 0,
	0, 0, 0, 0, 3586, 0, 0, 0, 0, 0,
	0, 2010, 2011, 2012, 2013, 0, 0, 0, 0, 0,
	0, 1993, 0, 0, 0, 0, 0, 0, 1985, 1986,
	0, 2018, 2019, 2020, 2029, 2030, 2031, 0, 0, 0,
	2014, 0, 2444, 0, 0, 0, 0, 0, 0, 0,
	0, 2022, 2016, 0, 0, 0, 0, 0, 0, 0,
	1988, 0, 0, 0, 2026, 0, 2009, 0, 2036, 0,
	0, 2035, 0, 0, 0, 2015, 2017, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2041,
	0, 0, 0, 0, 0, 2032, 2027, 2033, 1987, 0,
	0, 0, 0, 0, 2002, 2003, 0, 0, 0, 2007,
	0, 0, 0, 0, 0, 0, 0, 0, 2004, 0,
	0, 0, 0, 2024, 0, 0, 0, 0, 0, 0,
	0, 0, 2040, 0, 0, 0, 0, 0, 2008, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2445, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2034, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2010,
	2011, 2012, 2013, 0, 0, 0, 0, 0, 2023, 1993,
	2025, 0, 0, 0, 0, 0, 0, 0, 0, 2038,
	0, 0, 1999, 2000, 2006, 2028, 2005, 2001, 0, 1998,
	1996, 1997, 1989, 1990, 1991, 1992, 1994, 1995, 0, 0,
	0, 0, 0, 3585, 0, 0, 0, 0, 0, 0,
	0, 0, 2026, 0, 0, 0, 2036, 0, 0, 0,
	0, 0, 0, 2015, 2017, 0, 0, 1985, 1986, 0,
	2018, 2019, 2020, 2029, 2030, 2031, 0, 0, 0, 2014,
	0, 0, 0, 2032, 0, 2033, 0, 0, 0, 0,
	2022, 2016, 2002, 2003, 0, 0, 0, 0, 0, 1988,
	0, 0, 0, 0, 0, 2009, 0, 0, 0, 0,
	2035, 2024, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2008, 0, 2041, 0,
	0, 0, 0, 0, 0, 2027, 0, 1987, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2007, 0,
	0, 0, 2374, 0, 0, 0, 0, 2004, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2040, 0, 0, 0, 2034, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2023, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2038, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2372, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2010, 2011,
	2012, 2013, 0, 0, 0, 0, 0, 0, 1993, 2025,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1999, 2000, 2006, 2028, 2005, 2001, 2014, 1998, 1996,
	1997, 1989, 1990, 1991, 1992, 1994, 1995, 0, 0, 0,
	3550, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2026, 0, 2009, 0, 2036, 0, 0, 0, 0,
	0, 0, 2015, 2017, 0, 0, 1985, 1986, 0, 2018,
	2019, 2020, 2029, 2030, 2031, 0, 2446, 0, 0, 0,
	0, 0, 2032, 2027, 2033, 0, 0, 0, 0, 2022,
	2016, 2002, 2003, 0, 0, 0, 0, 0, 1988, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2035,
	2024, 0, 0, 0, 0, 0, 0, 0, 0, 2040,
	0, 0, 0, 0, 0, 2008, 0, 2041, 0, 0,
	0, 0, 0, 0, 0, 0, 1987, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2007, 0, 0,
	0, 0, 0, 0, 0, 0, 2004, 0, 0, 0,
	0, 0, 0, 0, 2447, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2034, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2023, 0, 2025, 0, 0,
	0, 0, 0, 0, 0, 0, 2038, 0, 0, 1999,
	2000, 2006, 2028, 2005, 2001, 0, 1998, 1996, 1997, 1989,
	1990, 1991, 1992, 1994, 1995, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2010, 2011, 2012,
	2013, 0, 0, 0, 0, 0, 0, 1993, 5370, 0,
	0, 0, 0, 0, 1985, 1986, 0, 2018, 2019, 2020,
	2029, 2030, 2031, 0, 0, 2373, 2014, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2022, 2016, 0,
	0, 0, 0, 0, 0, 0, 1988, 0, 0, 0,
	2026, 0, 2009, 0, 2036, 0, 0, 2035, 0, 0,
	0, 2015, 2017, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2041, 0, 0, 0, 0,
	0, 2032, 2027, 2033, 1987, 0, 0, 0, 0, 0,
	2002, 2003, 0, 0, 0, 2007, 0, 0, 0, 0,
	0, 0, 0, 0, 2004, 0, 0, 0, 0, 2024,
	0, 0, 0, 0, 0, 0, 0, 0, 2040, 0,
	0, 0, 0, 0, 2008, 0, 0, 0, 0, 2371,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2034, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2010, 2011, 2012, 2013, 0,
	0, 0, 0, 0, 2023, 1993, 2025, 3650, 0, 0,
	0, 0, 0, 0, 3649, 2038, 0, 0, 1999, 2000,
	2006, 2028, 2005, 2001, 0, 1998, 1996, 1997, 1989, 1990,
	1991, 1992, 1994, 1995, 0, 0, 0, 0, 5369, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2026, 0,
	0, 0, 2036, 0, 0, 0, 0, 0, 0, 2015,
	2017, 0, 0, 1985, 1986, 0, 2018, 2019, 2020, 2029,
	2030, 2031, 0, 0, 0, 2014, 0, 0, 0, 2032,
	0, 2033, 0, 0, 0, 0, 2022, 2016, 2002, 2003,
	0, 0, 3520, 0, 0, 1988, 0, 0, 0, 0,
	0, 2009, 0, 0, 0, 0, 2035, 2024, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2008, 0, 2041, 0, 0, 0, 0, 0,
	0, 2027, 0, 1987, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2007, 0, 0, 0, 0, 0,
	0, 0, 0, 2004, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2040, 0, 0,
	0, 2034, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2023, 0, 0, 3521, 0, 0, 0, 0,
	0, 0, 0, 2038, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2010, 2011, 2012, 2013, 0, 0,
	0, 0, 0, 0, 1993, 2025, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1999, 2000, 2006,
	2028, 2005, 2001, 2014, 1998, 1996, 1997, 1989, 1990, 1991,
	1992, 1994, 1995, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2026, 0, 2009,
	0, 2036, 0, 0, 0, 0, 0, 0, 2015, 2017,
	0, 0, 1985, 1986, 0, 2018, 2019, 2020, 2029, 2030,
	2031, 0, 0, 0, 0, 0, 0, 0, 2032, 2027,
	2033, 0, 0, 0, 0, 2022, 2016, 2002, 2003, 0,
	0, 0, 0, 0, 1988, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2035, 2024, 0, 0, 0,
	0, 0, 0, 0, 0, 2040, 0, 0, 0, 0,
	0, 2008, 0, 2041, 0, 0, 0, 0, 0, 0,
	0, 0, 1987, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2007, 0, 0, 0, 0, 0, 0,
	0, 0, 2004, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2034, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2023, 0, 2025, 0, 0, 0, 0, 0, 0,
	0, 0, 2038, 0, 0, 1999, 2000, 2006, 2028, 2005,
	2001, 0, 1998, 1996, 1997, 1989, 1990, 1991, 1992, 1994,
	1995, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2010, 2011, 2012, 2013, 0, 0, 0,
	0, 0, 0, 1993, 0, 4927, 0, 0, 0, 0,
	1985, 1986, 0, 2018, 2019, 2020, 2029, 2030, 2031, 0,
	0, 0, 2014, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2022, 2016, 0, 0, 0, 0, 0,
	0, 0, 1988, 0, 0, 0, 2026, 0, 2009, 0,
	2036, 0, 0, 2035, 0, 0, 0, 2015, 2017, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2041, 0, 0, 0, 0, 0, 2032, 2027, 2033,
	1987, 0, 0, 0, 0, 0, 2002, 2003, 0, 0,
	0, 2007, 0, 0, 0, 0, 0, 0, 0, 0,
	2004, 0, 0, 0, 0, 2024, 0, 0, 0, 0,
	0, 0, 0, 0, 2040, 0, 0, 0, 0, 0,
	2008, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2034,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2010, 2011, 2012, 2013, 0, 0, 0, 0, 0,
	2023, 1993, 2025, 0, 0, 0, 0, 0, 0, 0,
	0, 2038, 0, 0, 1999, 2000, 2006, 2028, 2005, 2001,
	0, 1998, 1996, 1997, 1989, 1990, 1991, 1992, 1994, 1995,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2026, 0, 0, 0, 2036, 0,
	0, 0, 0, 0, 0, 2015, 2017, 0, 0, 1985,
	1986, 0, 2018, 2019, 2020, 2029, 2030, 2031, 0, 0,
	0, 2014, 0, 0, 0, 2032, 0, 2033, 0, 0,
	0, 0, 2022, 2016, 2002, 2003, 0, 0, 0, 0,
	0, 1988, 0, 0, 0, 0, 0, 2009, 0, 0,
	0, 0, 2035, 2024, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2008, 0,
	2041, 0, 0, 0, 0, 0, 0, 2027, 0, 1987,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2007, 0, 0, 0, 0, 0, 0, 0, 0, 2004,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2040, 0, 0, 0, 2034, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2023, 1202,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2038,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2010, 2011, 2012, 2013, 0, 0, 0, 0, 0, 0,
	1993, 2025, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1999, 2000, 2006, 2028, 2005, 2001, 2014,
	1998, 1996, 1997, 1989, 1990, 1991, 1992, 1994, 1995, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2026, 0, 2009, 0, 2036, 0, 0,
	0, 0, 0, 0, 2015, 2017, 0, 0, 1985, 1986,
	0, 2018, 2019, 2020, 2029, 2030, 2031, 0, 0, 0,
	0, 0, 0, 0, 2032, 2027, 2033, 0, 0, 0,
	0, 2022, 2016, 2002, 2003, 0, 0, 0, 0, 0,
	1988, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2035, 2024, 0, 0, 0, 0, 0, 0, 0,
	0, 2040, 0, 0, 0, 0, 0, 2008, 0, 2041,
	0, 0, 0, 0, 0, 0, 0, 0, 1987, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2007,
	0, 0, 0, 0, 0, 0, 0, 0, 2004, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2034, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2023, 0, 2025,
	0, 0, 0, 0, 0, 0, 0, 0, 2038, 0,
	0, 1999, 2000, 2006, 2028, 2005, 2001, 0, 1998, 1996,
	1997, 1989, 1990, 1991, 1992, 1994, 1995, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2010,
	2011, 2012, 2013, 0, 0, 0, 0, 1985, 1986, 1993,
	2018, 2019, 2020, 2029, 2030, 2031, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2014, 0,
	2022, 2016, 0, 0, 0, 0, 0, 0, 0, 1988,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2035, 0, 2026, 0, 2009, 0, 2036, 0, 0, 0,
	0, 0, 0, 2015, 2017, 0, 0, 0, 2041, 0,
	0, 0, 0, 0, 0, 0, 0, 1987, 0, 0,
	0, 0, 0, 2032, 2027, 2033, 0, 0, 2007, 0,
	0, 0, 2002, 2003, 0, 0, 0, 2004, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2024, 0, 0, 0, 0, 0, 0, 0, 0,
	2040, 0, 0, 0, 0, 0, 2008, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4690,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2034, 0, 0, 2010, 2011,
	2012, 2013, 0, 0, 0, 0, 0, 0, 1993, 0,
	4352, 0, 0, 0, 0, 0, 2023, 0, 2025, 0,
	0, 0, 0, 0, 0, 0, 0, 2038, 0, 0,
	1999, 2000, 2006, 2028, 2005, 2001, 0, 1998, 1996, 1997,
	1989, 1990, 1991, 1992, 1994, 1995, 0, 0, 0, 0,
	0, 2026, 0, 0, 0, 2036, 0, 0, 0, 0,
	0, 0, 2015, 2017, 0, 0, 1985, 1986, 0, 2018,
	2019, 2020, 2029, 2030, 2031, 0, 0, 0, 0, 0,
	0, 0, 2032, 0, 2033, 0, 0, 2014, 0, 2022,
	2016, 2002, 2003, 0, 0, 0, 0, 0, 1988, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2035,
	2024, 0, 0, 2009, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2008, 0, 2041, 0, 0,
	0, 0, 0, 0, 0, 0, 1987, 0, 0, 0,
	0, 0, 0, 2027, 0, 0, 0, 2007, 0, 0,
	0, 0, 0, 0, 0, 0, 2004, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2034, 0, 0, 0, 0, 2040,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2023, 0, 0, 4353, 0,
	0, 0, 0, 0, 0, 0, 2038, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2010, 2011, 2012,
	2013, 0, 0, 0, 0, 0, 0, 1993, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2025, 0, 0,
	0, 0, 0, 0, 0, 0, 2014, 0, 0, 1999,
	2000, 2006, 2028, 2005, 2001, 0, 1998, 1996, 1997, 1989,
	1990, 1991, 1992, 1994, 1995, 0, 0, 0, 0, 0,
	2026, 0, 2009, 0, 2036, 0, 0, 0, 0, 0,
	0, 2015, 2017, 0, 0, 1985, 1986, 0, 2018, 2019,
	2020, 2029, 2030, 2031, 0, 0, 0, 0, 0, 0,
	0, 2032, 2027, 2033, 0, 0, 0, 0, 2022, 2016,
	2002, 2003, 0, 0, 0, 0, 0, 1988, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2035, 2024,
	0, 0, 0, 0, 0, 0, 0, 0, 2040, 0,
	0, 0, 0, 0, 2008, 0, 2041, 0, 0, 0,
	0, 0, 0, 0, 0, 1987, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2007, 0, 0, 0,
	0, 0, 0, 0, 0, 2004, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2034, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2023, 0, 2025, 0, 0, 0,
	0, 0, 0, 0, 0, 2038, 0, 0, 1999, 2000,
	2006, 2028, 2005, 2001, 0, 1998, 1996, 1997, 1989, 1990,
	1991, 1992, 1994, 1995, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2010, 2011, 2012, 2013,
	0, 0, 0, 0, 1985, 1986, 1993, 2018, 2019, 2020,
	2029, 2030, 2031, 0, 0, 3656, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2014, 0, 2022, 2016, 0,
	0, 0, 3651, 0, 0, 0, 1988, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2035, 0, 2026,
	0, 2009, 0, 2036, 0, 0, 0, 0, 0, 0,
	2015, 2017, 0, 0, 0, 2041, 0, 0, 0, 0,
	0, 0, 0, 0, 1987, 0, 0, 0, 0, 0,
	2032, 2027, 2033, 0, 0, 2007, 0, 0, 0, 2002,
	2003, 0, 0, 0, 2004, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2024, 0,
	0, 0, 0, 0, 0, 0, 0, 2040, 0, 0,
	0, 0, 0, 2008, 0, 0, 0, 0, 0, 0,
	4127, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2034, 0, 0, 2010, 2011, 2012, 2013, 0,
	0, 0, 0, 0, 0, 1993, 0, 0, 0, 0,
	0, 0, 0, 2023, 0, 2025, 0, 0, 0, 0,
	0, 0, 0, 0, 2038, 0, 0, 1999, 2000, 2006,
	2028, 2005, 2001, 0, 1998, 1996, 1997, 1989, 1990, 1991,
	1992, 1994, 1995, 0, 0, 0, 0, 0, 2026, 0,
	0, 0, 2036, 0, 0, 0, 0, 0, 0, 2015,
	2017, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2032,
	0, 2033, 0, 0, 2014, 0, 0, 0, 2002, 2003,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2024, 0, 0,
	2009, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2008, 1985, 1986, 0, 2018, 2019, 2020, 2029,
	2030, 2031, 0, 0, 0, 0, 0, 0, 0, 0,
	2027, 0, 0, 0, 0, 0, 2022, 2016, 0, 0,
	0, 0, 0, 0, 0, 1988, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2035, 0, 0, 0,
	0, 2034, 0, 0, 0, 0, 2040, 0, 0, 0,
	0, 0, 0, 0, 2041, 0, 0, 0, 0, 0,
	0, 0, 2023, 1987, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2038, 2007, 0, 0, 0, 0, 0,
	0, 0, 0, 2004, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2025, 0, 0, 0, 0, 0,
	0, 0, 0, 2014, 0, 0, 1999, 2000, 2006, 2028,
	2005, 2001, 0, 1998, 1996, 1997, 1989, 1990, 1991, 1992,
	1994, 1995, 0, 0, 0, 0, 0, 0, 0, 2009,
	0, 0, 0, 0, 2010, 2011, 2012, 2013, 0, 0,
	0, 0, 1985, 1986, 1993, 2018, 2019, 2020, 2029, 2030,
	2031, 0, 0, 0, 0, 0, 0, 0, 0, 2027,
	0, 0, 0, 0, 0, 2022, 2016, 0, 0, 0,
	3589, 0, 0, 0, 1988, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2035, 0, 2026, 0, 0,
	0, 2036, 0, 0, 0, 2040, 0, 0, 2015, 2017,
	0, 0, 0, 2041, 0, 0, 0, 0, 0, 0,
	0, 0, 1987, 0, 0, 0, 0, 0, 2032, 0,
	2033, 0, 0, 2007, 0, 0, 0, 2002, 2003, 0,
	0, 0, 2004, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2024, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2008, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2025, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1999, 2000, 2006, 2028, 2005,
	2001, 0, 1998, 1996, 1997, 1989, 1990, 1991, 1992, 1994,
	1995, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2034, 0, 0, 2010, 2011, 2012, 2013, 0, 0, 0,
	0, 0, 0, 1993, 0, 0, 0, 0, 0, 0,
	0, 2023, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2038, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3616, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2026, 0, 0, 0,
	2036, 0, 0, 0, 0, 0, 0, 2015, 2017, 0,
	0, 1985, 1986, 0, 2018, 2019, 2020, 2029, 2030, 2031,
	0, 0, 0, 0, 0, 0, 0, 2032, 0, 2033,
	0, 0, 2014, 0, 2022, 2016, 2002, 2003, 0, 0,
	0, 0, 0, 1988, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2035, 2024, 0, 0, 2009, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2008, 0, 2041, 0, 0, 0, 0, 0, 0, 0,
	0, 1987, 0, 0, 0, 0, 0, 0, 2027, 0,
	0, 0, 2007, 0, 0, 0, 0, 0, 0, 0,
	0, 2004, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2034,
	0, 0, 0, 0, 2040, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2023, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2038, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2010, 2011, 2012, 2013, 0, 0, 0, 0,
	0, 0, 1993, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2025, 0, 0, 0, 0, 0, 0, 0,
	0, 2014, 0, 0, 1999, 2000, 2006, 2028, 2005, 2001,
	0, 1998, 1996, 1997, 1989, 1990, 1991, 1992, 1994, 1995,
	0, 0, 0, 0, 0, 2026, 0, 2009, 0, 2036,
	0, 0, 0, 0, 0, 0, 2015, 2017, 0, 0,
	1985, 1986, 0, 2018, 2019, 2020, 2029, 2030, 2031, 0,
	0, 0, 0, 0, 0, 0, 2032, 2027, 2033, 0,
	0, 0, 0, 2022, 2016, 2002, 2003, 0, 0, 0,
	0, 0, 1988, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2035, 2024, 0, 0, 0, 0, 0,
	0, 0, 0, 2040, 0, 0, 0, 0, 0, 2008,
	0, 2041, 0, 0, 0, 0, 0, 0, 0, 0,
	1987, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2007, 0, 0, 0, 0, 0, 0, 0, 0,
	2004, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2034, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2023,
	0, 2025, 0, 0, 0, 0, 0, 0, 0, 0,
	2038, 0, 0, 1999, 2000, 2006, 2028, 2005, 2001, 0,
	1998, 1996, 1997, 1989, 1990, 1991, 1992, 1994, 1995, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2010, 2011, 2012, 2013, 0, 0, 0, 0, 1985,
	1986, 1993, 2018, 2019, 2020, 2029, 2030, 2031, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2014, 0, 0, 2016, 0, 0, 0, 0, 0, 0,
	0, 1988, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2035, 0, 2026, 0, 2009, 0, 2036, 0,
	0, 0, 0, 0, 0, 2015, 2017, 0, 0, 0,
	2041, 0, 0, 0, 0, 0, 0, 0, 0, 1987,
	0, 0, 0, 0, 0, 2032, 2027, 2033, 0, 0,
	2007, 0, 0, 0, 2002, 2003, 0, 0, 0, 2004,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2024, 0, 0, 0, 0, 0, 0,
	0, 0, 2040, 0, 0, 0, 0, 0, 2008, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2034, 0, 0,
	2010, 2011, 2012, 2013, 0, 0, 0, 0, 0, 0,
	1993, 0, 0, 2561, 0, 0, 0, 0, 2023, 0,
	2025, 0, 0, 0, 0, 0, 0, 0, 0, 2038,
	0, 0, 1999, 2000, 2006, 2028, 2005, 2001, 0, 1998,
	1996, 1997, 1989, 1990, 1991, 1992, 1994, 1995, 0, 0,
	0, 0, 0, 2026, 0, 0, 0, 2036, 0, 0,
	0, 0, 0, 0, 2015, 2017, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2032, 0, 2033, 0, 0, 2014,
	1083, 0, 1135, 2002, 2003, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2024, 0, 0, 2009, 0, 1091, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2008, 0, 0,
	0, 0, 0, 0, 0, 1106, 0, 1089, 1088, 0,
	0, 0, 0, 0, 0, 2027, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1108, 0, 0, 0, 0, 0, 1090, 0, 0,
	0, 0, 1093, 0, 0, 0, 2034, 1147, 0, 1118,
	0, 2040, 0, 0, 0, 0, 0, 1103, 1104, 0,
	0, 0, 0, 0, 0, 0, 0, 1123, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2038, 0,
	0, 0, 0, 0, 0, 1136, 1095, 0, 0, 0,
	0, 0, 1096, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1097, 0, 0, 0,
	0, 0, 0, 0, 0, 1133, 0, 0, 0, 2025,
	0, 0, 0, 0, 0, 0, 0, 0, 2014, 0,
	0, 1999, 2000, 2006, 2028, 2005, 2001, 0, 1998, 1996,
	1997, 1989, 1990, 1991, 1992, 1994, 1995, 0, 0, 0,
	1134, 0, 0, 0, 2009, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1099, 0, 0, 0,
	0, 0, 0, 0, 0, 1087, 0, 0, 0, 0,
	0, 0, 0, 0, 2027, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1100, 1101, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1109, 1107,
	2040, 0, 0, 0, 0, 0, 1102, 0, 0, 0,
	1119, 0, 0, 1141, 1140, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1144,
	1132, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1137, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2025, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1999, 2000, 2006, 2028, 2005, 2001, 0, 1998, 1996, 1997,
	1989, 1990, 1991, 1992, 1994, 1995, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1094, 0, 0, 1146, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1092, 0, 0, 0, 0, 1127, 1128, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1130,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1138, 1125, 0,
	0, 0, 0, 0, 0, 0, 1145, 1120, 0, 0,
	1112, 1110, 0, 0, 1115, 0, 0, 0, 0, 0,
	0, 1116, 0, 0, 1085, 0, 1139, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1086, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1131, 0, 0, 1129, 0, 1117, 0,
	0, 0, 0, 0, 1114, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1143, 0, 0, 0, 0,
	0, 0, 0, 1121, 0, 1122, 0, 0, 0, 0,
	0, 0, 0, 0, 1098, 1142, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1124,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1126,
}

var sqlPact = [...]int32{
	8733, -1000, -1000, -1000, -1000, -1000, -1000, 165, -1000, -1000,
	163, 161, 160, 157, 155, 152, 151, 150, 147, 146,
	144, -1000, -1000, 143, 142, 140, 137, -1000, 136, 134,
	-1000, 131, -1000, -1000, 129, -1000, 128, 125, 124, -1000,
	-1000, 123, -1000, 122, -1000, -1000, -1000, -1000, 120, 118,
	117, 104600, 103992, 105206, 2540, 132530, 114310, 2139, 93060, 131922,
	92452, 131314, 2357, 11607, 130706, 3027, 116, -1000, 130098, 115,
	114, 113, -1000, 113702, 129490, 111272, 110664, 2251, 1775, 1774,
	-1000, 111, 110, -1000, 9479, 78394, 108, 106, 105, 103,
	2825, 102, -1000, 101, 100, -1000, 99, 98, -1000, 14858,
	1597, -1000, 97, 96, 95, -1000, 411, 110056, 94, 93,
	92, 2830, 91, 90, 75968, 89, 88, 87, 2650, 3138,
	-1000, -1000, 2369, -1000, -1000, 86, 74, 73, 71, 70,
	66, 63, 57, 54, 53, 50, 49, 48, -1000, 47,
	46, 45, 44, 42, -1000, 41, 40, 37, -1000, 36,
	-1000, 35, 34, 33, 32, 30, 29, 28, 26, 25,
	23, 17, 16, 15, 14, 10, 154858, -1000, -1000, 9,
	-1000, 2105, 1768, 1766, 1758, 993, 8, 7, -3, -8,
	-9, -10, -11, -12, -18, -20, -23, -24, -25, -26,
	-27, -28, -29, -30, -31, -32, -1000, 130, -33, -35,
	-38, -39, -40, -41, -42, 2860, 3875, -1000, 1689, 1114,
	1258, 33115, 3304, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 141620, 133136, -43, -113, -44, -1000, 3667,
	1029, 61858, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 234, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 423, 2156, 711, -1000, -1000, -1000, 128882, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2539, -21, 93666, -1000,
	2256, -1000, -1000, -1000, -1000, -1000, 697, -1000, 2537, 2461,
	338, 2458, 93666, -1000, -1000, -1000, 3746, 3647, 2705, 4212,
	4210, 4209, 4207, 4206, 141014, 2027, 4205, 2774, 4202, 4201,
	4199, 4198, 4196, 4195, 4194, -1000, 103384, 1090, 102776, 102168,
	3747, 128276, 101560, 127668, 144050, 51901, 1099, 3745, -1000, -1000,
	-1000, -1000, -1000, -1000, 133136, -1000, 1087, -1000, -1000, 4193,
	2270, 696, 113094, -1000, -1000, 127060, 1787, -1000, -1000, -1000,
	937, 1206, 35607, 35607, 35607, 230, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 3756, -1000, -1000, -1000, -1000, 133136, 3033,
	3033, 1468, 1422, 1422, 3033, 3033, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 4192, 4191, 4188, 4184, 4183, 1546,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 91844, 25450, 91236,
	90628, 126452, 51278, 100952, 100344, 4180, 4176, 4175, 50655, 86372,
	59374, 3871, 125844, 143442, 3870, 3869, 1083, 2255, 1543, -1000,
	-1000, -1000, -1000, -1000, -1000, -65, 82052, 3943, 133136, -1000,
	225, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 50032, 898,
	49409, 842, 48786, 840, 125236, -1000, -1000, -1000, -1000, -1000,
	85754, 3638, -1000, 124628, 1577, 2699, 4173, 4172, 1187, 4170,
	3622, 1950, 4169, 4166, 4165, 4164, 4163, 4160, 4157, 1641,
	124020, 2897, 123412, 1923, 142834, 2100, 1081, 99736, 105206, 2880,
	122804, 1623, 1610, -1000, -1000, -1000, -1000, 3387, 3134, 3129,
	1289, -1000, -1000, -1000, -1000, -1000, 65558, 12363, 9880, -1000,
	-1000, 13548, 122196, 68638, 105206, 105206, -1000, -1000, -1000, -1000,
	-1000, -1000, 48163, 779, 47540, 1096, 121588, -1000, -1000, 66174,
	3248, 1137, -1000, -1000, -1000, -1000, -1000, 120980, 46917, 543,
	46294, 986, 133136, -1000, 3303, 2172, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 3691, 1717, 3932, 3028, 85136,
	2262, 1493, 3698, 3385, 3384, 1578, 2254, 3382, 4156, 2866,
	3381, 3380, 3366, 3361, 3357, 1851, 2818, 541, 2814, 32492,
	3293, 1975, 45671, 1773, 1571, 3353, 3352, 3948, 3811, 2231,
	2215, 2272, 2263, 90020, 4153, 4151, 3666, 3338, 3334, 3093,
	3309, 2150, -1000, 3245, 1636, 221, -1000, -1000, -1000, -1000,
	-1000, -1000, 221, 1536, -1000, -1000, -1000, -1000, -1000, 94878,
	-1000, -1000, 1546, -1000, -1000, -1000, 1394, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1689, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2412, -1000, 2322, -1000, -1000, -1000, 2757, 3646,
	3646, 3646, 3742, 387, 369, -1000, 130, 835, 1172, -1000,
	-1000, 154409, -1000, -1000, 52524, 52524, 52524, 52524, 52524, 52524,
	52524, 52524, 2365, -1000, 692, -1000, -1000, 734, -1000, 680,
	604, 521, -1000, -1000, -1000, -1000, -1000, -1000, 678, -1000,
	-1000, -1000, -1000, -1000, -1000, 3909, -1000, 28617, -1000, -1000,
	-1000, 399, 674, 52524, -1000, -1000, 3980, 3979, 929, -1000,
	217, 964, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 3302, 671, 669, -1000, 667, 666,
	664, 663, 659, -1000, 658, -1000, 657, 656, 654, 653,
	651, 643, 642, 641, -1000, 2288, -1000, -1000, -1000, -1000,
	-1000, -1000, 592, 586, 586, 586, -1000, 1065, -1000, -1000,
	-1000, 240, 580, 238, 578, 577, 574, -1000, 638, 637,
	635, 625, 617, 616, 615, 614, 609, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1063, -1000, -1000, -1000, -1000, 1428,
	-67, 133136, -1000, 423, -67, -1000, -1000, 608, -1000, 36871,
	36871, 36871, -1000, -1000, 2534, 52524, -1000, 3135, -1000, -60,
	-60, 906, 63706, -1000, 60608, 906, 522, 744, 69862, -1000,
	3244, -1000, -1000, 605, 216, -1000, -1000, -1000, -1000, 26066,
	3243, 133136, 133136, 133136, 105206, 105206, 105206, 133136, 4146, 4145,
	3526, 52524, -1000, -1000, 77786, 145868, 105812, 1392, -66, -1000,
	-1000, 3851, 81436, 77180, 3299, 145868, 3297, 3242, 145266, 84518,
	4144, -1000, -1000, -1000, -1000, -1000, 3496, 4143, 4141, 4140,
	-1000, 133136, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 260,
	3493, -1000, -1000, 109448, 260, 3484, -1000, 260, 3483, -1000,
	108842, -1000, -1000, 2501, 3453, -1000, -1000, 274, 3452, -1000,
	-1000, -1000, 273, 3451, -1000, -1000, 207, -109, 3449, -1000,
	-1000, -1000, -1000, -1000, -1000, 154409, -1000, -1000, -1000, 144658,
	-1000, 3670, -1000, 133136, -1000, 52524, -1000, -1000, 3850, 1547,
	3681, 3779, -1000, -1000, -83, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2747, 2765, 1166, 2570, -1000, 3542, 1624, 35607,
	3605, -1000, -1000, -1000, -1000, -1000, 205, 26066, 3109, -1000,
	-1000, 133136, -1000, 133136, 3033, 3033, -1000, -1000, -1000, 3941,
	3940, 3033, 3033, 133136, 133136, -1000, -1000, -1000, -1000, -1000,
	-1000, -83, -1000, 2725, 3448, 1591, -1000, 2565, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2171, 3447, -1000,
	2499, 3446, 2104, -1000, -1000, 2248, -1000, 151046, 1519, -1000,
	-1000, -1000, -1000, 2382, 3444, -59, -1000, -1000, 2418, -1000,
	-1000, -1000, -1000, 150807, -1000, 3159, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1931, -1000, -1000, 2387, 2204,
	-1000, 1335, 3443, -1000, 3019, 3019, 99128, 3464, 68022, 66174,
	82052, -81, -1000, -1000, -1000, -1000, -1000, -110, -1000, 24826,
	154409, -1000, -1000, -1000, -1000, 2031, 154409, 875, -1000, -1000,
	3442, -1000, 154409, 865, -1000, -1000, 3441, -1000, 2817, -1000,
	3296, -1000, -1000, -1000, 2654, 83900, 2651, 1033, -1000, 105206,
	2252, 4139, -1000, 4138, -1000, -1000, 4137, -1000, 4136, 4134,
	4133, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 98522, 2533,
	-1000, -1000, 1621, 973, 86988, -1000, 2647, 3778, -1000, 97914,
	1079, -1000, 1006, 2646, -1000, 1435, 108236, 987, 2645, -1000,
	4132, 3744, 2924, 1006, 2644, -1000, -1000, -1000, -1000, -1000,
	972, -1000, 71074, -1000, 71074, -1000, 1833, -1000, 140408, -60,
	105206, 3909, -1000, -116, -1000, -1000, -1000, 1029, -1000, 64939,
	-1000, 64939, 112486, 86988, 973, 3239, 74128, 154170, -1000, 1030,
	-1000, -1000, 154409, -1000, -1000, -1000, 2815, -1000, -203, 3017,
	-1000, 86988, 67406, 3237, 2804, -1000, 154409, -1000, -1000, -1000,
	-1000, 154409, -1000, -1000, -1000, 86988, 1621, -1000, 120372, 97306,
	-1000, -1000, 1635, 2789, -1000, -1000, -1000, 66174, 3232, 1338,
	86988, 86988, 86988, -1000, 119764, -1000, -1000, 2302, 1825, 3639,
	2280, 105206, -1000, 2004, -1000, -1000, -1000, 3683, 3461, 133136,
	-1000, -1000, 3295, -1000, 80830, 107630, -1000, 107024, -1000, 106418,
	-1000, 105206, -1000, 105206, -1000, 4131, 4124, 4123, -1000, -1000,
	4122, -1000, 4121, 3676, -1000, 836, 45048, 154409, 3674, -1000,
	4119, 2219, 3293, 154409, -1000, 3455, 1793, 1772, 133136, -1000,
	-1000, 133136, -1000, 133136, -1000, -1000, -1000, 2555, 1737, -1000,
	-1000, 2744, -1000, -1000, -1000, 1024, -1000, -1000, 105206, 105206,
	105206, 105206, 105206, 1704, -1000, 44425, -1000, -1000, 3308, 4117,
	1914, -1000, 1855, -1000, 3231, 3662, -1000, 3228, 1627, 2007,
	204, 3984, 204, -1000, -1000, 275, -1000, -1000, 139802, -1000,
	2757, -1000, 133136, -1000, 2749, 3279, 3292, 1703, 2550, 2858,
	-1000, 43802, 2831, 56262, 2561, 130, -1000, -1000, 130, 130,
	34361, -1000, -1000, 35607, 835, 81436, 81436, 26066, 1410, 52524,
	52524, 52524, 52524, 52524, 52524, 52524, 52524, 52524, 52524, 52524,
	52524, 52524, 52524, 52524, 52524, 52524, 52524, 52524, 52524, 52524,
	52524, 52524, 52524, 52524, 52524, 52524, 52524, 52524, 52524, 52524,
	52524, 52524, 52524, 52524, 52524, 2349, 52524, 1389, 52524, 52524,
	52524, 52524, 1958, -1000, -1000, 2147, 466, 2260, 604, -1000,
	-1000, -1000, 3904, 3904, 3904, 655, 655, 655, 154588, 154588,
	517, 4113, 734, -1000, 52524, -1000, 64, 64312, 52524, 26684,
	-1000, 369, 15997, 2727, -1000, 367, 27337, -1000, -1000, -1000,
	28617, 521, 43149, 52524, 1041, 154409, -1000, -1000, 1822, 3925,
	24202, 3271, 3086, 600, 855, 854, 31839, 31186, 30533, 29880,
	850, 783, 52524, 52524, 52524, 52524, 52524, 52524, 52524, 52524,
	-1000, -1000, 3933, -1000, 3925, -1000, -1000, -1000, -1000, 3925,
	1407, 1399, 3925, -1000, 3925, 3925, 7554, 7554, 42526, 41903,
	41280, 56885, 40657, 52524, 29257, 40034, 39411, -1000, 58754, 133136,
	-67, 3849, 52524, 281, -1000, 12647, -1000, 281, 281, 599,
	-119, 154409, 2803, 2803, 62474, 2465, 2370, 2370, 2370, -1000,
	906, 18547, 906, 117946, 2393, 906, 906, 195, 228, 366,
	59992, 3135, 117946, 721, 598, -47, -51, -52, -1000, -1000,
	-54, -56, -1000, -1000, 105206, 597, 26684, 26066, 194, 2216,
	-121, 2856, 2850, 2846, 2843, -1000, 2836, 2531, -1000, -1000,
	-1000, 2041, -122, 1386, 105206, 133136, 1666, -1000, -1000, -1000,
	-1000, 82052, -68, 82052, 133136, -90, -1000, 145868, 10979, -124,
	-1000, 1339, 192, 3925, -1000, -1000, -1000, -1000, -1000, 4100,
	4098, -1000, 1050, 594, 593, 510, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 592, 586, 586, 586, -1000, 240,
	580, 238, 578, 577, 574, -1000, -1000, -1000, -1000, -1000,
	3226, 105206, 133136, 1584, 80224, 96698, -109, 105812, 145868, -71,
	-1000, -1000, -1000, -1000, 133136, -1000, -1000, -1000, 4092, -1000,
	105206, -1000, -1000, 105206, 260, 3438, -1000, 105206, -1000, 105206,
	254, 3431, -1000, -1000, 133136, -1000, 105206, 105206, -1000, 133136,
	133136, 133136, 145868, 145868, 251, -1000, 105206, 835, -129, 1194,
	-83, -1000, -1000, -1000, -1000, 1546, -1000, 2018, -1000, -1000,
	-1000, -1000, -1000, -1000, 1575, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 929, -1000, -1000, -1000, -1000, 3922, 3920,
	-77, -1000, -1000, 26066, -1000, 2170, -1000, -1000, -1000, -1000,
	133136, 133136, -1000, -1000, 133136, 133136, -1000, -1000, -84, 1718,
	581, 1383, -1000, 89412, 2589, 3655, 4091, 2914, 3633, 1802,
	-1000, 1714, 573, -1000, 3768, 94878, 3808, 3824, 1312, -1000,
	3220, -1000, -1000, -1000, 936, 1900, 1994, 1381, 1379, 94878,
	2499, -1000, 81436, -1000, 2931, 3740, 1422, 1471, 1422, 1422,
	1504, 1449, -1000, 94878, 1979, 1377, 1376, 1374, -1000, -1000,
	1823, 1794, -1000, -1000, 119158, 1670, -1000, 1358, 1357, 134348,
	3867, 2412, 2437, 757, 2194, -1000, 1459, 1356, 3218, -1000,
	-1000, -88, 3802, 3820, 1312, -1000, 3217, 1354, -1000, -1000,
	-1000, 3739, 105206, 26066, 1662, 1660, 1658, 1968, 1351, -69,
	-1000, 3790, 1818, -1000, 1621, 1621, 114916, 133136, 3883, 86988,
	-1000, 2673, -1000, -1000, -1000, 3697, 3692, -1000, -1000, 1349,
	1348, -1000, 1027, 7003, 3574, -1000, 145868, 1027, 1027, 2077,
	3426, 2950, 1696, -1000, 3015, 896, 3014, -1000, -1000, -1000,
	896, -81, 82052, 133136, 191, -1000, 64, 52524, 52524, 64,
	52524, 64, -1000, 3773, 3416, 3848, -1000, 3413, 4090, 572,
	-1000, 2773, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 554,
	2643, 3215, 133136, 265, -1000, 105206, -1000, 3847, 118552, -1000,
	3412, 145868, 2499, 2638, -1000, -1000, 96092, -1000, 3411, 2211,
	423, 2637, -1000, 694, 4089, 3410, -1000, 139196, -1000, 3670,
	1347, 3408, 1132, 691, 3846, -1000, 691, 72290, -1000, 133136,
	-1000, -60, 1156, 88200, -131, -132, 363, -1000, 133136, 133136,
	3592, 2218, 2214, -1000, 991, 66174, -1000, 66174, -138, -1000,
	-203, 3008, 1683, 66174, -1000, 973, -161, 896, -1000, 896,
	-1000, 105206, 3283, -1000, 86988, 66174, -1000, 973, 973, 973,
	-1000, -1000, -1000, -1000, 4088, 4086, 4080, 4079, -1000, -1000,
	1005, 105206, 133136, 105206, -1000, 2949, 1694, -1000, 189, -1000,
	145868, -1000, 145868, 133136, 105206, -1000, 1005, 133136, 1005, 133136,
	1005, 133136, 1005, 1005, -1000, -1000, -1000, -1000, -1000, 64,
	-1000, -1000, 154409, -1000, 52524, -1000, -1000, 1705, 4078, 1850,
	-1000, 3282, -1000, 3280, -1000, -13, -1000, -1000, 3930, 2088,
	-1000, 3975, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 4077, 154409, -1000, 2012, -1000, -1000, -1000, -1000, 105206,
	105206, 105206, 105206, 133136, 3573, -1000, 133136, 3561, 3567, 105206,
	-1000, 3982, -1000, -1000, 94878, -1000, 2749, 3279, -1000, -1000,
	-1000, -1000, -1000, -1000, 1457, 2483, -1000, 2795, -1000, 1759,
	-1000, -1000, -1000, 154409, 57508, -1000, -1000, 154409, 2045, -1000,
	55639, 55016, -1000, -1000, 1919, 105206, 2882, -1000, 2882, -108,
	-1000, 151712, 2794, 105206, -77, 35607, -1000, -1000, -1000, -1000,
	-1000, 935, 595, 595, 1423, 1423, 1423, 1423, 3762, 567,
	5667, 695, 13744, 13744, 324, 324, 324, 324, 324, 13744,
	413, 655, 655, 413, 413, 413, 413, 413, 655, 655,
	655, 13744, 13744, 13744, 655, 154588, 16305, 14733, 52524, 52524,
	1346, 2146, 466, 12597, 52524, 12885, 12885, 12885, 12885, -1000,
	2148, -1000, -1000, -1000, -1000, 3210, 552, 56885, 56885, -1000,
	-1000, -1000, -1000, 27977, 52524, -1000, -1000, -1000, -1000, 38758,
	-1000, -1000, 150619, -349, 362, -1000, 187, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	359, -107, 107, -1000, 52524, 52524, 52524, 358, -1000, 186,
	52524, 133136, -1000, 147214, 720, -140, -1000, -143, 1505, -1000,
	52524, -1000, -1000, 1345, -1000, 1334, 1333, 1323, -1000, 551,
	357, -1000, 185, -1000, 2373, 550, 549, 52524, -1000, -1000,
	-1000, -1000, -1000, 150380, -1000, -1000, 150141, -1000, -1000, 149953,
	-1000, -1000, 149714, -1000, -1000, -1000, -1000, -1000, 153931, 146988,
	146565, 146521, 15210, 146477, 17508, -152, 356, -153, 352, 925,
	923, 350, 348, 345, -154, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -155, 341, -1000,
	3208, -107, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	340, -1000, 339, -1000, 153752, -107, 337, 6604, -1000, 56885,
	56885, 56885, 56885, 334, -1000, 151473, -1000, 153453, 38135, 38135,
	38135, 333, 153274, 52524, -107, -162, -1000, -164, -1000, -1000,
	-1000, -1000, 498, -165, 1031, 36871, 61240, 26066, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1031,
	1031, 52524, -1000, 52524, 2811, -1000, -1000, -1000, -1000, 2810,
	2902, 2803, 62474, -1000, -1000, -1000, -1000, 117946, -1000, 3909,
	3528, -1000, 117946, -1000, -1000, 133136, 423, -1000, 117946, 117946,
	26066, 906, -1000, 906, 117946, 611, -1000, -1000, -1000, -1000,
	-1000, 330, 74744, 107, 183, 26066, 1006, -1000, -1000, 2939,
	2939, 2939, 2939, 2939, 105206, -1000, -1000, 145868, 1319, -72,
	-75, 3007, 3003, -81, 82052, -81, -110, 3881, -281, -1000,
	2305, -1000, 81436, -1000, 733, 1188, 26066, -1000, -1000, -1000,
	540, -1000, 3925, 3925, -1000, 3925, 145868, 3205, 280, 2968,
	2961, -1000, 2530, 93666, 261, -109, 145868, 4074, -1000, -1000,
	260, -1000, 105206, 260, 260, -1000, 105206, 105206, 2501, -1000,
	274, -1000, 273, -1000, -1000, -109, -1000, 1022, 35607, -1000,
	1546, -1000, -1000, 1664, -1000, 2242, -1000, 1293, -1000, -1000,
	35607, -1000, 3595, -1000, 1948, -1000, -1000, -1000, -1000, 2785,
	133136, 133136, 105206, -1000, 116128, 133136, -1000, 2442, 145868, -1000,
	2636, 138590, 2611, 137984, 81436, -1000, -1000, 539, 944, 2792,
	2787, 1128, 133136, 133136, 2784, 137378, 136772, -1000, 4073, 133136,
	2300, 52524, 116128, 3738, 2395, 2698, 64, 64, -1000, 64,
	-1000, -1000, 538, 1249, 105206, 105206, 133136, 145868, 105206, 2057,
	-1000, -1000, -1000, -1000, -1000, 95484, -1000, -1000, 1422, -1000,
	-1000, -1000, 1422, -1000, 1422, 2499, 2049, 133136, 145868, 105206,
	145868, 136166, 2192, 135560, 2182, -1000, -1000, 2173, 1959, 133136,
	-1000, -1000, -1000, -1000, -1000, 1489, -1000, 757, 1317, 3204,
	52524, 52524, 2328, 64, 64, -1000, 64, 537, 26066, 2179,
	-1000, 3264, 133136, 3974, 134954, 3970, 133136, 133136, 133136, 145868,
	3635, 133136, -1000, -161, -70, -111, -1000, 864, 859, -110,
	-1000, 3883, -1000, 853, 2270, 133136, 145868, -1000, 134348, 7003,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2325, 2936, 1142,
	133136, 1335, -1000, -1000, 1952, 1315, 1313, 94878, 2326, 1951,
	2066, 145868, 66174, 998, 66174, 2934, -1000, -1000, 23578, -1000,
	154409, 154409, -1000, 154409, -1000, 79616, 86988, 86988, 133136, -1000,
	72906, 133136, 88806, 952, 3407, 71682, -110, 973, 1621, 3323,
	1858, -111, 533, 133136, -1000, -1000, 2499, 3403, 423, 2634,
	-1000, 145868, 1071, 3845, 3398, 525, 4072, 4071, -1000, 105206,
	2529, 2630, -1000, -1000, 133742, 3395, 757, 133136, 1031, 62474,
	2207, -1000, 69256, 1107, 133136, 2082, 236, -1000, -1000, -1000,
	-36, 133136, -1000, 742, -1000, -1000, 1156, 1156, 973, 66790,
	-174, -1000, 179, 524, 851, 848, -1000, 5420, -1000, -203,
	-1000, 86988, 991, 66174, 3203, -203, 2960, 3201, -1000, -1000,
	1021, -1000, 1521, 2952, 973, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -61, -1000, 1946, 2061,
	133136, -109, -109, -94, -1000, -1000, 178, -72, -1000, 1005,
	-1000, 1005, -1000, 1005, -1000, -1000, -1000, 154409, -1000, -1000,
	-1000, 1849, 1842, 133136, -1000, 3278, -1000, 133136, -1000, -1000,
	26066, 133136, 105206, 26066, 105206, 3274, 3273, -1000, -1000, -1000,
	133136, -1000, -1000, 133136, -1000, -1000, -1000, -1000, -1000, -1000,
	1161, -1000, 2045, 2478, -1000, 521, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2726, -1000, -76, 34361, 913,
	-1000, -1000, 105206, -62, -77, 52524, 52524, 11778, 10478, 52524,
	56885, 56885, -1000, 52524, 8847, -1000, -1000, -1000, -1000, -1000,
	3200, 518, 52524, 81436, 6384, 5626, -1000, 329, 17011, 413,
	-1000, 52524, -1000, 5529, -1000, 328, 37512, -1000, 152139, 60,
	-180, -1000, 19186, -107, -181, -1000, -1000, 732, -1000, 3462,
	-1000, 52524, 153035, 2695, 2136, 2035, 1865, 3925, 3968, 22954,
	-1000, 73522, 1039, 2402, 149475, -1000, -1000, -1000, -1000, 81436,
	81436, 52524, 52524, -1000, 52524, 52524, 52524, -1000, -1000, -1000,
	3925, 914, -1000, -1000, -1000, 914, -1000, -1000, 1422, -1000,
	1422, -1000, 52524, -1000, -1000, 3192, 52524, -1000, 81436, 81436,
	56885, 56885, 56885, 56885, 56885, 56885, 56885, 56885, 56885, 56885,
	56885, 56885, 56885, 56885, 56885, 56885, 56885, 56885, 56885, 56885,
	2771, 56885, 3900, 3900, 3900, 1186, -1000, 3268, 3192, 52524,
	52524, 81436, 327, 326, 323, -1000, 52524, -107, -1000, -1000,
	13519, 515, -1000, 2712, -1000, 3085, -1000, 52524, -1000, -173,
	-1000, 3135, -1000, -1000, 3085, 3085, -182, 154409, 62474, 62474,
	-1000, 514, 52524, 2798, -1000, -1000, 719, -344, -1000, 847,
	-1000, -1000, -1000, -1000, -1000, -1000, 838, -1000, 423, -1000,
	-1000, -1000, 176, 117946, 117946, 718, -1000, -183, -1000, -1000,
	-188, -1000, 3844, 322, 26066, -1000, 1031, 4274, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2828, -281, 145868, 145868, 1944,
	1943, -81, 2452, -1000, 3091, 3967, -1000, 3927, 730, 717,
	175, 3925, 309, 307, 306, -109, 145868, 145868, 1937, 1935,
	76574, 3184, 145868, -1000, -1000, -1000, 260, -1000, -1000, -1000,
	254, -1000, -1000, -1000, -1000, 2890, -1000, -83, -1000, -1000,
	-1000, 52524, -1000, 956, -1000, -1000, 3644, 512, 1311, 1310,
	-1000, -190, -1000, 837, -1000, -1000, -1000, -1000, -1000, 3118,
	-1000, 3397, -1000, 2629, -1000, 1112, 2627, 1747, -1000, 52524,
	509, 2920, 508, 503, 4070, 2310, 4066, 1130, 3396, 2501,
	3392, 2501, -1000, -1000, -1000, 940, -1000, 154409, -196, -1000,
	2395, -1000, 501, 500, -1000, -84, 1710, 532, 1284, 1018,
	-1000, -1000, 52524, 52524, 117340, -1000, 476, 3648, -63, -1000,
	-1000, -1000, 1934, 1283, 1281, -1000, -1000, -1000, -1000, -1000,
	2499, 1922, 1276, 1273, -1000, -1000, -1000, -1000, -1000, 2626,
	-1000, 133136, -1000, 3388, 133136, 133136, 1017, -1000, 3329, 3327,
	921, 133136, 52524, 52524, 152796, 152617, -1000, 1013, -1000, -1000,
	52524, -1000, -88, 1260, 3789, 2622, 105206, -1000, 2501, 3379,
	1257, -1000, 1253, -1000, -1000, -1000, 3784, 3783, 1263, -1000,
	114916, 86988, 86988, 3883, 66174, -1000, -1000, -1000, 3908, -1000,
	-1000, -1000, -1000, 83282, -1000, -1000, 1027, 133136, 145868, 105206,
	1973, -1000, -1000, 93666, 94272, 133136, 2950, -109, 896, -1000,
	2751, 896, 998, 3180, -1000, 2881, -1000, -1000, 1008, 305,
	-89, -1000, 1259, 79000, 75350, -1000, 2378, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 4065, 301, -198, -91, 81436, -1000,
	-1000, -1000, -1000, 2611, 105206, 133136, 1316, 2917, 133136, 133136,
	3843, -1000, 2545, 601, 105206, 900, -1000, 3909, -1000, -1000,
	-1000, 133136, 36871, 114916, -1000, 3777, 105206, 3837, 3377, 1006,
	105206, 64, 105206, 3951, -1000, -1000, 3836, 105206, 3374, 2528,
	2621, 2755, 757, 87594, 1006, 2398, -99, -1000, 2082, 36230,
	3645, -204, -1000, -1000, -1000, 1031, 72290, 62474, 52524, 4064,
	-206, -1000, -1000, -1000, -1000, -1000, 86988, 973, 133136, 133136,
	4061, 86988, 86988, 86988, -92, 497, -1000, 833, 831, 829,
	-1000, -1000, -1000, -1000, -1000, -1000, 827, 825, 822, 820,
	991, -1000, -1000, -203, 66174, 991, 66174, 64, -1000, 2433,
	105206, 66174, -1000, 22330, 133136, 2949, -1000, 82658, -1000, -1000,
	-1000, -1000, -1000, 1005, 3966, -110, -1000, -1000, -1000, 2331,
	2505, 2331, 2058, 2055, -1000, -1000, -1000, 2477, -1000, -1000,
	-1000, -1000, 2859, 3636, 26066, 3769, 12885, 52524, 52524, 7899,
	5484, 3065, 12885, 52524, 52524, 81436, 9941, -211, 52524, 52524,
	-1000, 52524, 716, 154409, -1000, 3965, 52524, 299, 297, -1000,
	-1000, -1000, 3918, -1000, -1000, -1000, 154409, 52524, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 294, -1000, 173, -1000, -1000,
	-1000, 142226, -1000, 52524, 293, 3737, -1000, 291, 290, 10980,
	11656, 149287, 149048, 148809, 287, -1000, -1000, 286, 283, 154409,
	3268, 154409, -1000, -1000, 1070, 1070, 1387, 1387, 1387, 1387,
	3900, 1223, 1728, 1216, 712, 712, 712, 782, 1186, 1186,
	712, 712, 712, 1186, 3178, 2793, 496, 1581, -1000, -1000,
	154409, 154409, 276, -1000, -1000, -1000, -107, 259, 13519, -1000,
	3075, 3735, 154409, -1000, 62474, 3075, 3075, -1000, -1000, 2902,
	133136, 154409, 62474, -1000, 3528, -1000, 20452, 19822, -1000, 26066,
	-1000, -1000, -1000, -1000, 3909, -1000, 74744, -1000, 490, -1000,
	61, -1000, 4274, -1000, 818, -1000, -1000, 86988, 86988, 4059,
	4058, -1000, 3964, 3962, 2536, 3961, 2939, -1000, -281, -177,
	133136, 133136, -1000, 2443, -1000, 714, 4056, 729, 26066, 253,
	-1000, -1000, -1000, -109, -109, 133136, 133136, 3144, 105206, 133136,
	1400, 145868, -109, -1000, -1000, -1000, 3591, 154409, 3266, 3052,
	3050, 133136, 133136, -1000, 116128, 35607, 1609, 116734, 133136, 3365,
	-1000, 3359, -1000, 1128, 2424, 148621, 63090, -1000, 63090, 133136,
	-1000, -1000, -1000, -1000, 2227, 1549, 4051, 1181, -1000, 3685,
	133136, -1000, 133136, -1000, -1000, -1000, 116128, -1000, 133136, 133136,
	105206, 133136, -1000, 145868, 3340, -218, 154409, -93, -1000, 816,
	-1000, 1395, -1000, 21706, 133136, 145868, 105206, 133136, 145868, 105206,
	3355, 1105, 133136, -1000, 1098, 2347, -1000, -1000, 3326, -1000,
	154409, 152378, 64, 52524, 3337, -219, 26066, -1000, 3960, 3959,
	3351, 3689, -1000, 133136, 3958, 133136, 105206, 3588, -1000, -1000,
	-1000, 1003, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1917,
	1251, 1250, 2527, 2521, 2440, -94, 2326, 998, -96, 489,
	-1000, 814, 813, 812, 807, 806, 998, -1000, 86988, 66174,
	4048, 2073, 72906, 52524, 52524, 81436, -1000, 81436, -1000, -1000,
	-1000, 2913, -1000, 111878, 88806, 2498, -1000, -1000, 487, 133136,
	133136, 485, -1000, 64, -1000, 4047, 116128, 484, -1000, 2426,
	-1000, 713, -1000, -1000, 220, -224, 145868, 2499, 64, 105206,
	-1000, 423, 989, 423, 250, -97, -1000, 3390, 1118, 26066,
	105206, 3350, 2760, 757, 87594, -1000, 1347, 2858, -1000, -98,
	-1000, 494, 64, 2398, -1000, -99, 154409, -1000, 778, 248,
	-1000, 3587, -1000, -1000, -225, -1000, -1000, 5733, 5733, 86988,
	66174, 86988, 86988, 86988, 66174, 86988, -1000, 991, 3832, -1000,
	-203, -1000, 2609, -1000, 973, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 26066, 1725, -1000, 482, 481, -1000, -1000,
	-1000, -1000, 3636, 12885, 12885, 52524, 52524, 52524, 12885, 9941,
	-226, -1000, 12885, 12885, -107, -1000, -1000, 152139, -1000, -1000,
	-1000, 154409, -1000, 21082, 2338, -1000, 148382, -1000, 34361, -1000,
	-1000, 52524, 52524, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 56885, 3143, 479, 81436, -1000, -1000, 246, 1036, 52524,
	54393, 3135, 1036, 1036, -1000, -227, -1000, -1000, -1000, 3909,
	-1000, 3909, 61, -1000, -1000, 4046, 26066, -1000, 86988, -1000,
	-1000, -1000, -1000, -1000, 4042, 4041, 2596, 4038, 4037, -1000,
	-1000, -1000, 3312, -160, -189, -1000, 724, -1000, 4036, -1000,
	-1000, 162, 154, 145868, 3133, 139, 2947, -109, -1000, 64,
	-1000, -1000, -1000, -1000, -1000, -1000, 2946, 3831, -1000, 2169,
	-1000, 133136, 133136, -1000, 133136, -1000, 26066, 133136, 3099, 1297,
	-1000, 944, 2782, 477, 56885, 1159, 105206, 895, 3041, 3038,
	-1000, 3862, 3728, 3013, -234, -1000, 133136, 52524, 133136, -235,
	-242, 2595, -1000, -1000, 1148, 1291, 52524, 1147, -1000, -1000,
	-1000, 81436, 475, 2501, 2501, -1000, -243, -245, -1000, -1000,
	-1000, 52524, 1245, 133136, 34984, -1000, 4035, 3648, -1000, -1000,
	-1000, -1000, -1000, -1000, 133136, 133136, -1000, 133136, 133136, -1000,
	52524, -1000, 151951, 52524, 1242, -1000, -1000, -1000, 3957, 2501,
	26066, 2501, -1000, 2501, 3689, 1175, 2493, 133136, 145868, 105206,
	1989, 1989, 3262, -1000, -1000, -1000, 2730, 2730, 86988, 52524,
	1585, 66174, 66174, -1000, -100, 998, -1000, 1776, -1000, 154409,
	154409, -1000, -1000, 2333, 4033, -1000, -1000, -1000, -1000, 2781,
	-1000, -1000, -1000, 133136, 2769, 3025, 63090, 474, 473, 133136,
	985, -1000, -250, 88806, 952, 922, -1000, 71074, -1000, -1000,
	-1000, -1000, 423, 3829, -1000, 2886, 3827, -1000, 3955, 472,
	470, 133136, 2519, 468, 26066, 3637, 757, 87594, -1000, 3395,
	2082, -1000, 2604, 133136, 3632, -1000, 2858, 466, 973, 465,
	973, -1000, -253, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1426, 991, -101, -1000, 869, 862, -1000, -1000,
	-1000, 105206, 105206, 52524, 52524, -1000, 12885, 12885, 12885, -1000,
	243, -1000, -1000, 2398, 3719, -1000, -103, 147969, 147901, 6739,
	56885, 81436, -255, -1000, -1000, 133136, 154409, -104, -1000, 154409,
	462, 455, 422, -1000, -1000, -1000, 612, 596, -1000, -1000,
	-1000, -1000, 4029, -1000, -1000, -1000, 145868, 145868, 4027, -1000,
	145868, 145868, -109, 145868, 145868, 1882, -1000, 115522, 133136, -1000,
	-1000, 1747, 2694, -1000, -1000, 133136, 2612, -1000, -1000, -1000,
	978, 52524, 1581, 56885, 452, 52524, -1000, 448, 447, 3825,
	3550, -1000, 2906, 3141, 2103, 63090, -1000, 3636, -1000, 147484,
	-1000, 1116, 2198, -1000, -1000, -1000, -1000, 154409, 56885, 3689,
	63090, -1000, -1000, 444, 443, 154409, 442, 777, 3127, -1000,
	-1000, -1000, -1000, -110, -110, -1000, 154409, 64, 154409, 441,
	3789, -1000, -1000, -1000, -1000, 2501, 105206, 775, -1000, -1000,
	-1000, 1230, -1000, -1000, -1000, -1000, 4024, 4022, 3126, 93666,
	-1000, -258, -1000, 154409, -1000, -1000, -1000, -1000, 2208, 81436,
	-1000, 952, -1000, -1000, 2498, 435, -1000, 969, 2918, 2918,
	-260, 63090, 63090, -263, 2497, 2826, -1000, 242, 3819, 922,
	-1000, 3915, -1000, 1031, -1000, 3818, 64, 3577, -1000, 64,
	-1000, 3951, 63090, -1000, 105206, 63090, 2517, 2275, 2737, 87594,
	-1000, 2755, -1000, -1000, -265, 133136, 2082, -1000, -1000, 86988,
	-1000, -1000, 3928, -1000, 2609, -1000, 133136, -1000, 133136, -1000,
	-1000, -266, -268, -1000, 2282, 52524, 34361, -1000, -1000, 6739,
	-271, -1000, -106, -1000, 3817, 54393, 4020, 4018, 4007, -1000,
	-1000, -1000, -281, -281, -1000, -109, -109, -109, -109, 133136,
	-1000, 2168, -1000, 2611, -1000, -1000, 3349, -1000, 3064, 427,
	147258, 1581, 2718, 133136, 639, 2499, 2499, -1000, 3816, 3137,
	-1000, -1000, 2328, 426, -1000, -1000, -1000, -1000, 913, 133136,
	969, 3059, 105206, 1581, 1121, -273, 2331, 2331, 52524, 33738,
	2343, -1000, 52524, -1000, -1000, 3689, 66174, 145868, -1000, -1000,
	145868, 2510, -1000, 3113, 3908, 6241, -1000, 2497, 133136, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1116, -274, -276, -1000, -1000, 3680, -1000, 3576, 2913,
	64, -1000, -1000, -1000, 64, -1000, 4005, 989, 229, -279,
	1118, -282, 105206, 2138, -1000, 757, -1000, 2760, 1031, 3522,
	-1000, -284, -1000, -1000, -1000, -287, -289, -1000, -1000, 164,
	53770, 53770, 53770, -107, -108, -1000, 133136, 424, -1000, -1000,
	-1000, -1000, -1000, -1000, 133, -1000, -1000, 3320, 902, -1000,
	845, 2075, 135, 1131, 109, -19, -1000, -1000, -1000, 3013,
	-1000, 133136, -1000, -1000, -1000, 902, 423, -1000, 52524, 1116,
	-295, -1000, 1097, -296, -1000, 1074, -297, -1000, 3125, -1000,
	-303, 2501, -1000, -281, 251, 1989, 988, 3771, -1000, 2492,
	6241, -1000, 3947, 87594, -1000, -1000, -1000, 2509, 2590, -1000,
	-1000, -1000, -1000, 1860, 2999, -1000, 2753, 1436, 1436, 133136,
	-1000, -1000, 2732, -304, -1000, -1000, 2103, 1116, 2328, 2549,
	-1000, 2333, 985, -1000, -1000, -1000, -1000, 1116, 420, 2103,
	416, 1655, 757, -1000, -1000, 1422, 3637, 3519, 1385, 973,
	-1000, -1000, -1000, 3354, -1000, 58131, 2513, 2047, 151285, 3354,
	3354, -1000, -1000, 145868, 133136, 969, 3749, -1000, 880, 872,
	1600, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1031,
	-305, -1000, 2718, 154409, 969, -1000, 2331, 2944, -1000, 2331,
	3124, -1000, 2342, -1000, -1000, -1000, -1000, 3116, -1000, 1992,
	3896, -1000, -1000, 3795, 52524, -1000, -1000, -1000, -1000, 2587,
	2503, 2998, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	969, 133136, 2328, 2103, 969, 2034, 2022, 4003, 952, 2497,
	2103, 63090, 2328, 63090, 2316, -1000, 133136, -1000, 2275, 1378,
	-1000, 1801, -1000, -1000, 1947, 3858, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -109, -1000, -1000, 766, -1000, 3536, -1000,
	1146, 2391, 2391, -1000, -1000, 845, -1000, -1000, 412, -1000,
	409, -1000, 145868, 2413, -1000, -1000, -1000, 154409, 2901, 2582,
	-1000, -1000, -1000, -1000, 969, 2328, 1031, -1000, 4001, -1000,
	2497, -1000, 2328, -306, 969, -312, 2354, -1000, -1000, -110,
	2138, -1000, 1799, 72290, 2032, -1000, -1000, 2386, 53147, 52524,
	-1000, 3886, -1000, -1000, 2808, -1000, 3013, 52524, 52524, 251,
	70468, 17860, -1000, 2892, 1031, 969, -1000, -1000, 2732, 969,
	1116, 1031, 2103, -1000, 757, 1655, 72290, -292, -1000, -1000,
	-1000, 154409, -1000, -1000, -1000, -1000, -320, -326, -1000, -111,
	114916, -337, -1000, -1000, -1000, -1000, -1000, 1031, -1000, 1031,
	2103, -1000, 2328, 145868, 2316, -292, -1000, 2328, 1214, -329,
	-1000, -1000, -1000, 2328, 969, -1000, -1000, -1000, -1000, -1000,
	392, -1000, 969, 1031, 52524, 1031, -1000, -331, -1000, 2328,
	-1000,
}

var sqlPgo = [...]int16{
	0, 4961, 4959, 12, 4958, 4956, 4955, 4954, 4951, 4949,
	4946, 4943, 4942, 4939, 4937, 4935, 160, 4934, 4933, 4931,
	4930, 4929, 4927, 4924, 4923, 4922, 4919, 4917, 4916, 4914,
	4913, 4912, 4910, 4907, 4906, 4905, 4904, 4903, 4900, 4893,
	4889, 4888, 4887, 4879, 4878, 4877, 4873, 4872, 4871, 4870,
	4869, 4868, 4863, 4855, 4850, 4846, 4843, 4836, 4835, 4829,
	4828, 4826, 4825, 4823, 4820, 4813, 4812, 4811, 4810, 4808,
	4807, 4806, 4805, 4804, 70, 4801, 4800, 4799, 4798, 4792,
	4786, 4784, 4780, 4779, 4777, 4774, 4773, 4772, 4768, 4763,
	4762, 4761, 4760, 4759, 4758, 4756, 79, 4755, 301, 4754,
	4753, 4751, 4748, 4746, 4745, 4742, 4741, 4739, 4738, 4733,
	4731, 4728, 300, 4724, 31, 191, 4721, 4718, 14, 4717,
	4711, 299, 4710, 4708, 4707, 4706, 4704, 310, 4702, 4699,
	4698, 4697, 4696, 283, 4695, 4693, 4692, 4690, 4689, 4688,
	95, 145, 4685, 4684, 1640, 4680, 4679, 4678, 4677, 4676,
	4674, 4671, 278, 281, 4670, 4665, 4664, 277, 190, 4661,
	293, 4660, 4659, 4658, 4656, 4654, 4651, 4650, 4649, 4646,
	4643, 4641, 4639, 4636, 4632, 4631, 4626, 4623, 4621, 4618,
	4617, 4616, 4615, 4614, 4613, 4612, 4610, 4609, 4608, 4607,
	4606, 4605, 4603, 4601, 4600, 4599, 4595, 4594, 4593, 4591,
	4590, 4589, 4588, 275, 239, 149, 4587, 4584, 4581, 4575,
	4574, 292, 291, 4573, 4572, 4571, 4570, 4569, 3788, 4566,
	4565, 4564, 4563, 4562, 4558, 4557, 4554, 4540, 164, 8,
	50, 4538, 4537, 118, 107, 104, 98, 120, 113, 4533,
	4532, 139, 4529, 151, 130, 4528, 137, 126, 26, 18,
	248, 268, 7078, 266, 4527, 4526, 4524, 271, 221, 4522,
	270, 4520, 4514, 4512, 4511, 4508, 4507, 89, 65, 234,
	4501, 4497, 165, 193, 206, 199, 201, 204, 85, 66,
	125, 103, 72, 53, 19, 109, 241, 24, 7, 288,
	4496, 284, 9, 167, 21, 40, 4494, 4493, 4492, 4491,
	3937, 138, 4488, 290, 272, 198, 4487, 4478, 4477, 1050,
	4476, 4475, 71, 264, 196, 133, 121, 99, 146, 4473,
	177, 203, 39, 4472, 258, 102, 4470, 4468, 116, 108,
	9521, 10472, 4467, 4466, 131, 81, 188, 169, 231, 210,
	229, 213, 144, 200, 186, 4464, 110, 4462, 170, 174,
	207, 945, 4461, 101, 4460, 3819, 163, 214, 183, 6679,
	4459, 4458, 4456, 112, 4454, 119, 4453, 4451, 73, 20,
	6, 2, 180, 47, 54, 3, 4449, 30, 150, 61,
	38, 4446, 33, 4445, 4444, 4443, 4442, 58, 4439, 56,
	185, 4436, 4434, 309, 4432, 114, 67, 80, 4431, 46,
	244, 4430, 255, 155, 4429, 4428, 222, 218, 4426, 76,
	253, 4425, 4423, 4421, 4420, 4419, 308, 154, 1, 153,
	4417, 4414, 172, 4413, 69, 269, 225, 4412, 75, 4407,
	4402, 205, 64, 166, 304, 202, 249, 148, 250, 211,
	259, 4401, 4398, 4393, 223, 4392, 4391, 247, 181, 4390,
	4389, 261, 311, 111, 59, 88, 265, 94, 220, 179,
	4387, 232, 4386, 4385, 307, 208, 240, 49, 11, 13,
	122, 129, 4384, 5, 263, 178, 254, 141, 4383, 5724,
	2802, 3869, 257, 4378, 168, 142, 92, 157, 184, 287,
	100, 4375, 4374, 3946, 4367, 4359, 4353, 4349, 215, 4347,
	4345, 43, 173, 189, 298, 4344, 124, 87, 63, 29,
	147, 96, 306, 143, 252, 195, 280, 4342, 4341, 4338,
	219, 4337, 78, 182, 235, 4333, 227, 282, 77, 4332,
	977, 4330, 175, 2408, 82, 176, 4329, 246, 4327, 4326,
	4325, 4323, 4322, 4321, 4320, 2382, 267, 4319, 4318, 4317,
	52, 226, 4316, 224, 197, 228, 68, 62, 217, 123,
	2469, 127, 2303, 236, 55, 4, 4315, 83, 4314, 2830,
	90, 4313, 0, 13506, 9994, 12387, 4312, 4311, 13338, 4308,
	6579, 4307, 4306, 4305, 245, 93, 4304, 4302, 4300, 135,
	4298, 106, 4296, 4295, 84, 4294, 35, 22, 23, 44,
	36, 417, 406, 4292, 4291, 74, 158, 27, 4288, 297,
	251, 4287, 4285, 4284, 4283, 105, 4282, 51, 4281, 48,
	4280, 4279, 57, 17, 41, 4277, 4275, 238, 187, 3723,
	192, 171, 4274, 140, 4273, 4271, 4269, 91, 161, 4267,
	4266, 279, 237, 243, 117, 4265, 286, 4264, 230, 4263,
	4262, 34, 4261, 4260, 276, 136, 132, 60, 273, 162,
	45, 4258, 4256, 4255, 159, 4254, 4253, 4252, 128, 4251,
	4249, 97, 4247, 4246, 37, 4245, 156, 4244, 10, 4243,
	4242, 4241, 302, 209, 242, 4240, 4237, 194, 4235, 4234,
	295, 4233, 4231, 3785, 294, 4229, 42, 4225, 4224, 4223,
	16, 4222, 4221, 233, 3565, 4219, 4216, 25, 4215, 216,
}

var sqlR1 = [...]int16{
	0, 1, 2, 2, 2, 2, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 4, 4, 4, 4, 4, 4,
	4, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 8, 8, 8, 8, 8,
	8, 8, 8, 8, 8, 8, 14, 14, 10, 10,
	10, 10, 11, 11, 11, 11, 11, 58, 58, 12,
	12, 12, 12, 12, 12, 12, 12, 12, 12, 12,
	12, 12, 12, 41, 43, 42, 36, 36, 37, 37,
	38, 39, 39, 44, 46, 45, 13, 13, 13, 9,
	9, 9, 9, 9, 9, 9, 9, 22, 22, 47,
	47, 23, 23, 49, 49, 24, 24, 50, 50, 641,
	641, 641, 642, 642, 643, 643, 643, 27, 52, 20,
	21, 21, 21, 21, 644, 644, 644, 644, 40, 28,
	53, 33, 33, 33, 33, 33, 231, 231, 231, 231,
	26, 26, 48, 48, 275, 275, 274, 274, 274, 274,
	274, 274, 274, 274, 274, 274, 274, 274, 274, 274,
	274, 274, 274, 274, 274, 274, 274, 274, 274, 274,
	274, 274, 274, 274, 274, 274, 640, 640, 277, 277,
	276, 264, 264, 265, 265, 266, 266, 645, 645, 278,
	278, 278, 279, 279, 17, 17, 17, 17, 17, 17,
	17, 17, 17, 17, 534, 534, 534, 565, 565, 565,
	565, 567, 567, 686, 686, 687, 687, 687, 687, 687,
	143, 143, 430, 430, 430, 62, 62, 62, 62, 62,
	630, 630, 233, 233, 233, 235, 235, 234, 234, 234,
	234, 234, 234, 234, 234, 86, 86, 651, 651, 650,
	682, 682, 649, 649, 652, 652, 652, 232, 232, 232,
	83, 83, 103, 103, 139, 139, 139, 139, 139, 139,
	139, 139, 140, 140, 141, 141, 661, 661, 661, 236,
	236, 236, 238, 238, 237, 237, 237, 237, 237, 237,
	237, 237, 237, 237, 237, 237, 237, 243, 19, 19,
	19, 122, 122, 122, 122, 122, 122, 122, 117, 117,
	569, 569, 570, 570, 227, 227, 228, 228, 228, 228,
	229, 229, 230, 230, 230, 77, 77, 240, 240, 242,
	242, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 64, 64, 64, 64, 64,
	64, 64, 64, 64, 65, 65, 65, 65, 65, 66,
	66, 66, 66, 66, 66, 67, 67, 67, 67, 67,
	67, 68, 68, 75, 75, 75, 75, 75, 75, 75,
	75, 205, 205, 78, 78, 78, 78, 78, 78, 78,
	78, 78, 78, 78, 78, 78, 78, 82, 82, 82,
	82, 82, 92, 662, 662, 663, 663, 677, 666, 666,
	667, 667, 668, 668, 668, 669, 669, 669, 669, 669,
	676, 676, 676, 676, 676, 671, 670, 672, 672, 673,
	673, 674, 674, 674, 674, 674, 675, 675, 675, 675,
	675, 675, 675, 675, 675, 675, 675, 675, 675, 675,
	675, 675, 675, 665, 678, 679, 679, 680, 680, 681,
	681, 681, 688, 688, 688, 688, 688, 688, 688, 688,
	688, 688, 688, 688, 688, 688, 688, 688, 688, 689,
	689, 690, 690, 691, 691, 691, 691, 691, 691, 691,
	691, 691, 691, 691, 691, 691, 691, 691, 691, 691,
	691, 691, 80, 80, 80, 80, 80, 80, 80, 80,
	80, 80, 80, 80, 80, 80, 80, 80, 80, 80,
	93, 93, 391, 391, 354, 354, 94, 94, 94, 95,
	95, 96, 96, 79, 79, 79, 627, 627, 628, 634,
	692, 692, 525, 525, 524, 524, 98, 98, 429, 429,
	99, 99, 99, 99, 99, 99, 100, 100, 100, 100,
	100, 100, 100, 100, 100, 101, 101, 101, 101, 101,
	101, 101, 101, 101, 101, 101, 101, 101, 101, 109,
	109, 109, 109, 109, 110, 110, 110, 107, 107, 107,
	104, 104, 104, 102, 102, 102, 108, 108, 108, 633,
	340, 340, 106, 106, 106, 105, 105, 105, 407, 407,
	111, 111, 111, 111, 355, 112, 112, 112, 112, 112,
	112, 112, 112, 115, 115, 114, 114, 114, 114, 114,
	114, 114, 114, 114, 114, 114, 114, 114, 114, 114,
	114, 114, 114, 114, 114, 114, 114, 114, 114, 114,
	114, 114, 114, 114, 114, 114, 116, 116, 116, 116,
	116, 116, 116, 116, 116, 116, 116, 116, 527, 527,
	5, 5, 270, 270, 269, 269, 269, 269, 6, 6,
	6, 273, 273, 272, 271, 113, 113, 113, 491, 491,
	118, 118, 118, 445, 445, 119, 119, 119, 119, 119,
	120, 120, 120, 120, 120, 120, 120, 120, 120, 120,
	142, 142, 142, 142, 142, 142, 142, 142, 142, 142,
	142, 142, 142, 142, 142, 637, 637, 400, 400, 303,
	303, 303, 303, 131, 131, 131, 131, 132, 132, 132,
	132, 133, 133, 213, 213, 149, 149, 149, 149, 148,
	148, 148, 148, 148, 148, 148, 148, 69, 69, 69,
	70, 70, 71, 71, 72, 72, 73, 73, 74, 74,
	74, 74, 74, 152, 152, 32, 32, 32, 32, 153,
	153, 683, 683, 155, 151, 151, 151, 151, 151, 151,
	151, 150, 150, 154, 154, 154, 154, 156, 158, 158,
	158, 158, 158, 157, 157, 157, 157, 157, 159, 159,
	559, 559, 415, 415, 557, 557, 581, 581, 558, 558,
	361, 361, 361, 361, 361, 362, 362, 362, 568, 568,
	568, 568, 568, 568, 160, 160, 160, 160, 160, 160,
	160, 160, 160, 160, 160, 160, 160, 160, 160, 160,
	160, 160, 160, 160, 160, 160, 160, 160, 160, 160,
	160, 160, 160, 160, 160, 160, 160, 160, 160, 160,
	160, 160, 160, 160, 160, 160, 160, 160, 160, 160,
	160, 160, 160, 160, 160, 160, 160, 160, 160, 160,
	160, 160, 160, 160, 160, 160, 160, 160, 160, 160,
	160, 160, 160, 160, 160, 160, 160, 160, 160, 160,
	214, 214, 214, 215, 215, 220, 220, 221, 221, 221,
	222, 222, 222, 219, 219, 219, 216, 216, 217, 217,
	218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
	225, 225, 223, 223, 224, 224, 694, 694, 693, 693,
	226, 226, 226, 226, 226, 186, 186, 186, 204, 204,
	204, 204, 204, 204, 204, 204, 204, 204, 204, 204,
	204, 416, 416, 189, 189, 189, 173, 173, 161, 161,
	161, 161, 161, 161, 161, 161, 239, 239, 239, 239,
	166, 166, 166, 166, 166, 166, 166, 166, 167, 167,
	167, 162, 162, 175, 175, 175, 175, 175, 168, 168,
	169, 169, 169, 170, 170, 170, 170, 197, 197, 172,
	172, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	163, 163, 163, 163, 177, 177, 177, 177, 452, 452,
	452, 203, 203, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 200,
	200, 200, 200, 200, 200, 653, 653, 654, 654, 654,
	193, 193, 193, 193, 193, 193, 505, 505, 187, 187,
	187, 187, 192, 192, 192, 192, 195, 195, 195, 195,
	435, 435, 184, 184, 184, 185, 185, 185, 190, 190,
	202, 191, 392, 392, 188, 188, 194, 194, 194, 194,
	196, 196, 196, 164, 164, 164, 164, 164, 164, 164,
	164, 164, 164, 165, 165, 165, 165, 198, 198, 183,
	183, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 695, 695, 179, 179, 179, 178, 178, 178,
	178, 181, 181, 182, 182, 182, 182, 182, 182, 182,
	180, 171, 201, 635, 635, 631, 631, 631, 631, 631,
	631, 631, 631, 629, 629, 629, 629, 629, 629, 629,
	629, 629, 632, 632, 632, 632, 632, 636, 636, 123,
	123, 123, 123, 123, 123, 123, 134, 134, 134, 134,
	134, 134, 134, 137, 137, 124, 124, 124, 124, 124,
	124, 124, 127, 127, 125, 125, 125, 125, 126, 126,
	87, 87, 87, 87, 87, 18, 18, 18, 88, 88,
	294, 294, 248, 248, 248, 379, 379, 249, 249, 369,
	369, 369, 369, 244, 244, 245, 245, 246, 247, 247,
	89, 89, 696, 696, 696, 646, 646, 646, 647, 647,
	647, 647, 647, 647, 363, 363, 364, 364, 471, 471,
	471, 471, 471, 367, 367, 367, 368, 368, 368, 368,
	368, 368, 368, 368, 368, 377, 378, 378, 370, 370,
	376, 375, 375, 374, 374, 373, 373, 371, 372, 372,
	372, 381, 381, 380, 383, 383, 382, 470, 590, 590,
	592, 592, 592, 592, 592, 592, 592, 594, 594, 594,
	594, 594, 594, 594, 594, 594, 594, 594, 594, 594,
	594, 594, 594, 594, 453, 453, 697, 697, 698, 699,
	588, 588, 588, 589, 584, 584, 585, 585, 585, 585,
	585, 365, 365, 366, 366, 366, 366, 586, 587, 398,
	398, 509, 591, 591, 593, 593, 595, 700, 700, 700,
	700, 700, 700, 701, 701, 701, 469, 469, 468, 468,
	467, 467, 389, 389, 596, 596, 596, 596, 597, 597,
	597, 597, 597, 600, 599, 598, 598, 598, 598, 598,
	91, 91, 91, 432, 432, 431, 431, 433, 433, 433,
	433, 433, 433, 433, 433, 433, 433, 433, 433, 433,
	433, 433, 433, 433, 433, 210, 210, 306, 306, 306,
	85, 85, 85, 15, 15, 15, 15, 15, 15, 15,
	321, 321, 16, 16, 16, 16, 648, 648, 648, 90,
	90, 90, 90, 90, 90, 387, 387, 387, 305, 305,
	305, 305, 305, 305, 305, 305, 305, 305, 305, 305,
	305, 305, 305, 305, 305, 305, 305, 305, 305, 305,
	305, 305, 305, 305, 639, 639, 638, 638, 307, 307,
	703, 703, 97, 97, 97, 97, 97, 97, 97, 97,
	528, 528, 529, 529, 84, 84, 84, 84, 84, 454,
	454, 451, 451, 450, 450, 397, 397, 507, 507, 507,
	508, 311, 311, 312, 312, 267, 267, 267, 35, 34,
	25, 25, 29, 29, 30, 30, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 31, 31, 55, 55, 55,
	55, 56, 56, 56, 56, 59, 59, 60, 60, 54,
	54, 54, 54, 57, 57, 51, 51, 61, 61, 61,
	61, 61, 655, 657, 657, 656, 656, 660, 660, 660,
	660, 660, 660, 658, 658, 342, 342, 659, 659, 684,
	684, 685, 685, 130, 130, 135, 135, 135, 135, 135,
	136, 136, 136, 136, 138, 138, 138, 138, 147, 147,
	206, 206, 206, 206, 206, 206, 206, 63, 63, 76,
	76, 145, 705, 705, 705, 146, 146, 146, 207, 207,
	207, 207, 208, 208, 209, 209, 704, 704, 304, 304,
	464, 464, 465, 465, 706, 706, 466, 466, 466, 466,
	466, 297, 296, 298, 298, 299, 299, 81, 81, 81,
	287, 287, 286, 288, 288, 289, 289, 284, 284, 571,
	571, 291, 291, 291, 292, 292, 280, 280, 281, 281,
	282, 282, 283, 283, 295, 295, 566, 566, 707, 707,
	121, 121, 121, 212, 212, 353, 353, 353, 461, 461,
	461, 390, 390, 318, 318, 463, 463, 463, 463, 463,
	428, 428, 428, 211, 211, 405, 405, 418, 418, 419,
	419, 521, 521, 420, 128, 128, 129, 129, 144, 144,
	252, 252, 250, 250, 250, 250, 250, 250, 250, 250,
	257, 257, 258, 258, 259, 259, 260, 261, 261, 261,
	261, 408, 408, 262, 262, 262, 251, 251, 251, 253,
	253, 253, 253, 253, 253, 253, 256, 256, 256, 256,
	263, 263, 263, 255, 255, 607, 607, 607, 609, 609,
	611, 611, 610, 610, 606, 606, 608, 608, 702, 702,
	434, 434, 434, 386, 388, 384, 384, 385, 385, 395,
	395, 393, 394, 394, 396, 396, 506, 506, 506, 268,
	268, 268, 425, 425, 425, 425, 426, 426, 457, 457,
	455, 455, 455, 455, 456, 456, 458, 458, 458, 459,
	459, 460, 460, 422, 422, 423, 423, 424, 424, 424,
	424, 487, 487, 254, 254, 254, 402, 402, 402, 403,
	403, 477, 477, 477, 477, 477, 477, 477, 477, 477,
	477, 477, 478, 478, 476, 476, 476, 476, 510, 510,
	510, 510, 510, 510, 510, 510, 510, 511, 512, 512,
	404, 404, 513, 462, 462, 625, 625, 625, 626, 626,
	504, 504, 514, 514, 514, 514, 514, 514, 502, 502,
	503, 503, 522, 523, 523, 438, 438, 438, 438, 436,
	436, 439, 439, 439, 439, 439, 437, 437, 515, 515,
	515, 515, 427, 427, 516, 516, 516, 516, 517, 518,
	518, 519, 519, 472, 473, 473, 530, 530, 530, 530,
	532, 401, 401, 401, 401, 401, 583, 582, 582, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 546, 546,
	546, 546, 546, 546, 546, 546, 546, 546, 546, 546,
	546, 546, 546, 546, 546, 546, 546, 546, 546, 546,
	546, 546, 546, 546, 546, 546, 546, 546, 546, 546,
	547, 547, 547, 547, 547, 547, 547, 533, 533, 533,
	533, 533, 537, 537, 537, 536, 536, 536, 536, 536,
	536, 536, 536, 536, 536, 536, 538, 538, 543, 543,
	544, 544, 544, 539, 540, 545, 545, 545, 545, 708,
	708, 549, 549, 541, 541, 541, 541, 541, 541, 541,
	541, 541, 535, 535, 535, 542, 542, 542, 447, 447,
	447, 447, 447, 447, 447, 447, 447, 447, 447, 447,
	447, 446, 446, 448, 448, 479, 479, 479, 479, 479,
	479, 479, 479, 479, 479, 479, 479, 479, 479, 479,
	479, 479, 479, 479, 479, 479, 479, 479, 479, 479,
	479, 479, 479, 479, 479, 479, 479, 479, 479, 479,
	479, 479, 479, 479, 479, 479, 479, 479, 479, 479,
	479, 479, 479, 479, 479, 479, 479, 479, 479, 479,
	479, 479, 479, 479, 479, 479, 479, 479, 479, 479,
	479, 479, 479, 479, 479, 479, 479, 479, 479, 479,
	479, 479, 479, 479, 479, 479, 479, 479, 479, 479,
	479, 479, 479, 479, 479, 480, 480, 480, 480, 480,
	480, 480, 480, 480, 480, 480, 480, 480, 480, 480,
	480, 480, 480, 480, 480, 480, 480, 480, 480, 480,
	480, 480, 480, 480, 480, 480, 481, 481, 481, 481,
	482, 482, 482, 482, 482, 482, 482, 482, 482, 482,
	482, 482, 482, 482, 482, 482, 482, 482, 482, 482,
	482, 482, 482, 482, 482, 601, 601, 601, 601, 601,
	601, 601, 601, 483, 483, 604, 604, 605, 605, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 602, 602, 602, 602, 602, 602, 602, 602,
	602, 602, 603, 603, 603, 603, 603, 603, 603, 603,
	603, 603, 603, 603, 603, 603, 603, 603, 603, 603,
	603, 603, 603, 603, 603, 603, 603, 603, 603, 603,
	603, 603, 603, 603, 603, 603, 603, 603, 603, 603,
	612, 612, 613, 613, 615, 615, 616, 616, 617, 618,
	618, 618, 619, 620, 620, 614, 614, 621, 621, 621,
	621, 622, 622, 623, 623, 623, 623, 623, 624, 624,
	624, 624, 624, 493, 493, 494, 494, 500, 500, 500,
	358, 358, 358, 358, 358, 358, 358, 358, 358, 358,
	358, 358, 358, 358, 358, 358, 358, 358, 358, 358,
	358, 358, 358, 358, 358, 358, 358, 358, 358, 358,
	358, 358, 358, 358, 358, 360, 360, 359, 308, 308,
	308, 308, 308, 308, 413, 413, 411, 411, 411, 414,
	414, 412, 412, 410, 410, 409, 409, 490, 490, 488,
	488, 492, 492, 440, 440, 548, 548, 548, 548, 548,
	548, 548, 548, 441, 441, 441, 449, 442, 442, 443,
	443, 443, 443, 443, 484, 485, 444, 444, 444, 486,
	486, 495, 499, 499, 498, 497, 497, 496, 496, 474,
	474, 475, 475, 421, 421, 709, 709, 417, 417, 520,
	520, 520, 520, 577, 577, 357, 357, 406, 406, 356,
	356, 348, 348, 349, 349, 349, 349, 399, 399, 501,
	501, 550, 550, 551, 551, 552, 552, 553, 553, 554,
	555, 556, 489, 489, 329, 328, 315, 316, 327, 326,
	325, 314, 317, 322, 323, 324, 319, 320, 336, 335,
	334, 285, 290, 341, 343, 343, 346, 346, 347, 345,
	344, 344, 331, 332, 333, 526, 313, 350, 350, 351,
	351, 351, 352, 352, 352, 352, 309, 309, 310, 310,
	337, 337, 338, 339, 339, 330, 330, 330, 300, 300,
	300, 301, 301, 302, 302, 564, 564, 561, 561, 561,
	562, 562, 562, 664, 563, 563, 563, 563, 560, 560,
	560, 560, 560, 572, 572, 572, 572, 572, 572, 572,
	572, 572, 572, 572, 572, 572, 572, 572, 572, 572,
	572, 572, 572, 572, 572, 572, 572, 572, 572, 572,
	572, 572, 572, 572, 572, 572, 572, 572, 572, 572,
	572, 572, 572, 572, 572, 572, 572, 572, 572, 572,
	572, 572, 572, 572, 572, 572, 572, 572, 572, 572,
	572, 572, 572, 572, 572, 572, 572, 572, 572, 572,
	572, 572, 572, 572, 572, 572, 572, 572, 572, 572,
	572, 572, 572, 572, 572, 572, 572, 572, 572, 572,
	572, 572, 572, 572, 572, 572, 572, 572, 572, 572,
	572, 572, 572, 572, 572, 572, 572, 572, 572, 572,
	572, 572, 572, 572, 572, 572, 572, 572, 572, 572,
	572, 572, 572, 572, 572, 572, 572, 572, 572, 572,
	572, 572, 572, 572, 572, 572, 572, 572, 572, 572,
	572, 572, 572, 572, 572, 572, 572, 572, 572, 572,
	572, 572, 572, 572, 572, 572, 572, 572, 572, 572,
	572, 572, 572, 572, 572, 572, 572, 572, 572, 572,
	572, 572, 572, 572, 572, 572, 572, 572, 572, 572,
	572, 572, 572, 572, 572, 572, 572, 572, 572, 572,
	572, 572, 572, 572, 572, 572, 572, 572, 572, 572,
	572, 572, 572, 572, 572, 572, 572, 572, 572, 572,
	572, 572, 572, 572, 572, 572, 572, 572, 572, 572,
	572, 572, 572, 572, 572, 572, 572, 572, 572, 572,
	572, 572, 572, 572, 572, 572, 572, 572, 572, 572,
	572, 572, 572, 572, 572, 572, 572, 572, 572, 572,
	572, 572, 572, 572, 572, 572, 572, 572, 572, 572,
	572, 572, 572, 572, 572, 572, 572, 572, 572, 572,
	572, 572, 572, 572, 572, 572, 572, 572, 572, 572,
	572, 572, 572, 572, 572, 572, 572, 572, 572, 572,
	572, 572, 572, 572, 572, 572, 572, 572, 572, 572,
	572, 572, 572, 572, 572, 572, 572, 572, 572, 572,
	572, 572, 572, 572, 572, 572, 572, 572, 572, 572,
	572, 572, 572, 572, 572, 572, 572, 572, 572, 572,
	572, 572, 572, 572, 572, 572, 572, 572, 572, 572,
	572, 572, 572, 572, 572, 572, 572, 572, 572, 572,
	572, 572, 572, 572, 572, 572, 572, 572, 572, 572,
	572, 572, 572, 572, 572, 572, 572, 572, 572, 572,
	572, 572, 572, 572, 572, 572, 572, 572, 572, 572,
	572, 572, 572, 572, 572, 572, 572, 572, 572, 572,
	572, 572, 572, 572, 572, 572, 572, 572, 572, 572,
	572, 572, 572, 572, 572, 572, 572, 572, 572, 572,
	572, 572, 576, 576, 576, 576, 576, 576, 576, 576,
	576, 576, 576, 576, 576, 576, 576, 576, 576, 576,
	578, 578, 578, 578, 578, 578, 578, 578, 578, 578,
	578, 578, 578, 578, 578, 578, 578, 578, 578, 578,
	578, 578, 578, 578, 578, 578, 578, 578, 578, 578,
	578, 578, 578, 578, 578, 578, 578, 578, 578, 578,
	578, 578, 578, 578, 578, 578, 578, 578, 578, 578,
	578, 578, 578, 578, 573, 573, 574, 574, 574, 574,
	574, 574, 574, 574, 574, 574, 574, 574, 574, 574,
	574, 574, 574, 574, 575, 579, 579, 579, 579, 579,
	579, 579, 579, 579, 579, 579, 579, 579, 579, 579,
	579, 579, 579, 579, 579, 579, 579, 579, 579, 579,
	579, 579, 579, 579, 579, 579, 579, 579, 579, 579,
	579, 579, 579, 579, 579, 579, 579, 579, 579, 579,
	579, 579, 579, 579, 579, 579, 579, 579, 579, 579,
	579, 579, 579, 579, 579, 579, 579, 579, 579, 579,
	579, 579, 579, 579, 579, 579, 579, 579, 579, 579,
	579, 579, 579, 579, 579, 580, 580,
}

var sqlR2 = [...]int8{
	0, 1, 1, 1, 1, 0, 1, 1, 2, 1,
	1, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 1, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 1, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 1, 3, 1, 1,
	1, 3, 1, 1, 1, 1, 3, 4, 6, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 6, 4, 4, 6, 9, 6, 8,
	4, 4, 5, 9, 7, 9, 1, 1, 3, 1,
	1, 1, 1, 1, 1, 1, 3, 4, 6, 4,
	6, 6, 9, 6, 9, 6, 5, 6, 5, 1,
	1, 1, 1, 1, 1, 0, 1, 6, 6, 4,
	8, 7, 10, 9, 4, 4, 4, 3, 4, 4,
	4, 7, 7, 9, 8, 9, 5, 3, 5, 7,
	4, 12, 4, 12, 1, 3, 5, 5, 2, 5,
	3, 6, 4, 4, 4, 6, 5, 6, 5, 6,
	4, 8, 3, 8, 4, 2, 3, 10, 3, 6,
	4, 3, 1, 3, 4, 4, 2, 1, 1, 3,
	1, 3, 2, 4, 3, 2, 3, 2, 0, 1,
	1, 0, 2, 0, 7, 10, 6, 8, 6, 6,
	6, 9, 4, 3, 2, 2, 0, 1, 1, 1,
	1, 1, 3, 1, 3, 6, 4, 6, 7, 9,
	6, 2, 2, 3, 0, 8, 6, 8, 7, 2,
	0, 1, 2, 5, 0, 1, 3, 3, 1, 3,
	1, 3, 3, 3, 3, 12, 3, 1, 1, 2,
	1, 4, 1, 0, 3, 3, 0, 4, 6, 0,
	6, 4, 4, 4, 5, 7, 6, 8, 7, 9,
	8, 2, 1, 3, 1, 3, 3, 3, 0, 2,
	5, 0, 1, 3, 3, 3, 3, 1, 1, 1,
	1, 1, 1, 3, 3, 3, 3, 1, 3, 3,
	3, 6, 4, 9, 7, 12, 9, 2, 7, 2,
	1, 1, 1, 3, 3, 0, 3, 1, 3, 1,
	1, 3, 2, 5, 0, 7, 5, 2, 0, 1,
	2, 3, 1, 1, 2, 2, 2, 2, 1, 2,
	3, 3, 4, 3, 3, 1, 2, 1, 2, 1,
	2, 1, 2, 2, 3, 3, 3, 3, 3, 3,
	5, 3, 3, 5, 3, 3, 5, 3, 3, 5,
	3, 4, 3, 6, 6, 6, 6, 6, 8, 4,
	4, 1, 1, 1, 2, 1, 1, 2, 1, 2,
	1, 1, 2, 1, 2, 1, 2, 6, 3, 8,
	5, 3, 12, 2, 0, 1, 0, 1, 1, 0,
	1, 3, 1, 3, 3, 3, 3, 2, 2, 1,
	1, 1, 1, 2, 1, 1, 1, 1, 0, 1,
	2, 2, 2, 1, 1, 1, 4, 5, 1, 1,
	1, 1, 3, 3, 2, 2, 1, 2, 2, 2,
	2, 1, 1, 1, 2, 1, 1, 3, 0, 1,
	4, 0, 4, 3, 3, 4, 3, 4, 4, 4,
	7, 3, 3, 4, 3, 3, 3, 3, 3, 1,
	0, 1, 0, 4, 3, 3, 3, 3, 3, 6,
	4, 4, 4, 3, 5, 3, 3, 3, 3, 3,
	3, 3, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 4, 1, 2, 1, 2, 1, 2, 1,
	7, 3, 2, 0, 1, 3, 3, 1, 0, 1,
	2, 2, 1, 6, 10, 5, 1, 3, 3, 1,
	1, 0, 2, 0, 2, 0, 9, 3, 2, 0,
	2, 2, 2, 2, 2, 2, 1, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 4,
	6, 5, 7, 3, 4, 6, 3, 4, 6, 3,
	5, 7, 3, 4, 6, 3, 4, 6, 3, 1,
	1, 3, 4, 6, 3, 3, 5, 3, 1, 3,
	2, 2, 2, 2, 1, 2, 2, 5, 3, 3,
	6, 6, 3, 1, 1, 1, 1, 2, 1, 1,
	1, 2, 1, 1, 2, 1, 2, 1, 2, 1,
	1, 1, 2, 1, 1, 2, 1, 1, 1, 1,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 1, 1, 2, 1, 2, 1, 3,
	4, 3, 1, 2, 3, 2, 2, 2, 4, 6,
	3, 1, 2, 2, 7, 5, 7, 2, 3, 0,
	3, 5, 2, 3, 0, 2, 3, 2, 3, 2,
	7, 4, 7, 8, 8, 9, 11, 11, 6, 2,
	6, 9, 4, 7, 7, 10, 7, 10, 10, 10,
	13, 5, 8, 5, 2, 2, 1, 1, 3, 1,
	1, 1, 1, 1, 2, 1, 2, 2, 3, 2,
	2, 4, 3, 2, 2, 1, 2, 1, 3, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 1, 3,
	5, 4, 6, 4, 3, 0, 1, 3, 2, 4,
	2, 4, 1, 6, 3, 4, 4, 3, 4, 1,
	1, 1, 1, 5, 4, 5, 3, 3, 2, 2,
	6, 3, 3, 3, 3, 4, 4, 3, 1, 3,
	3, 2, 2, 1, 3, 3, 3, 1, 2, 1,
	1, 2, 2, 3, 1, 1, 1, 1, 1, 3,
	2, 2, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 1, 2, 1, 2, 1, 2,
	1, 1, 2, 1, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 2, 1, 1, 1, 2, 1,
	2, 2, 2, 9, 2, 1, 0, 1, 1, 0,
	1, 2, 0, 2, 2, 0, 2, 2, 2, 2,
	1, 2, 3, 3, 4, 4, 4, 4, 3, 3,
	1, 1, 1, 0, 1, 1, 1, 0, 1, 1,
	3, 3, 3, 3, 3, 2, 3, 3, 1, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 2, 2,
	2, 2, 3, 5, 7, 3, 3, 3, 4, 8,
	6, 4, 5, 5, 5, 3, 0, 1, 1, 1,
	4, 4, 3, 4, 4, 3, 4, 4, 1, 4,
	4, 5, 3, 5, 5, 5, 7, 3, 3, 3,
	5, 7, 4, 2, 6, 4, 3, 2, 3, 4,
	3, 5, 3, 6, 5, 6, 3, 5, 6, 3,
	5, 3, 5, 3, 3, 4, 4, 5, 0, 1,
	1, 1, 1, 3, 2, 3, 4, 3, 4, 3,
	5, 3, 4, 4, 3, 4, 5, 3, 4, 3,
	4, 4, 5, 3, 3, 1, 1, 0, 2, 3,
	5, 4, 6, 4, 6, 4, 1, 0, 3, 4,
	4, 5, 7, 5, 3, 3, 3, 4, 4, 5,
	2, 0, 4, 2, 3, 4, 2, 3, 3, 3,
	7, 5, 2, 0, 3, 3, 4, 3, 3, 3,
	5, 3, 3, 3, 4, 4, 4, 4, 4, 4,
	4, 4, 3, 4, 5, 4, 4, 2, 3, 2,
	3, 6, 6, 7, 9, 7, 9, 4, 3, 4,
	4, 5, 1, 1, 10, 10, 3, 5, 5, 5,
	3, 5, 6, 4, 4, 5, 5, 2, 6, 3,
	2, 5, 4, 2, 0, 1, 1, 1, 1, 2,
	3, 2, 2, 1, 1, 1, 1, 3, 2, 2,
	2, 2, 2, 2, 2, 2, 1, 2, 0, 1,
	2, 1, 2, 1, 2, 2, 1, 2, 1, 2,
	1, 2, 2, 4, 3, 3, 7, 3, 3, 7,
	3, 3, 3, 3, 3, 3, 3, 3, 4, 3,
	3, 6, 5, 8, 3, 6, 6, 3, 12, 15,
	1, 0, 1, 2, 3, 0, 2, 0, 4, 0,
	4, 5, 4, 1, 1, 1, 3, 3, 1, 3,
	10, 13, 0, 2, 3, 1, 1, 0, 1, 2,
	2, 2, 2, 1, 1, 0, 1, 3, 1, 1,
	1, 2, 3, 3, 3, 0, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 1, 0, 1, 0,
	1, 1, 0, 1, 4, 1, 0, 3, 7, 7,
	1, 1, 3, 7, 1, 3, 11, 3, 2, 0,
	3, 1, 2, 2, 3, 2, 6, 2, 1, 2,
	2, 3, 6, 4, 2, 3, 5, 5, 5, 2,
	5, 5, 2, 2, 2, 0, 1, 1, 3, 4,
	10, 11, 9, 5, 3, 1, 5, 9, 7, 11,
	3, 3, 0, 2, 4, 3, 3, 1, 6, 1,
	3, 1, 2, 0, 1, 2, 3, 0, 1, 3,
	3, 2, 2, 1, 1, 1, 4, 0, 3, 0,
	4, 0, 3, 0, 2, 2, 2, 0, 1, 1,
	2, 2, 0, 3, 3, 2, 1, 1, 2, 2,
	5, 8, 4, 1, 0, 1, 2, 2, 1, 2,
	3, 3, 2, 2, 3, 2, 2, 2, 2, 2,
	3, 1, 2, 3, 1, 4, 2, 3, 2, 2,
	4, 7, 3, 4, 6, 5, 7, 5, 5, 3,
	3, 0, 2, 2, 2, 2, 1, 1, 1, 8,
	10, 11, 8, 11, 5, 4, 2, 0, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 2, 0, 3, 3,
	0, 1, 8, 11, 3, 6, 6, 5, 3, 4,
	1, 0, 1, 3, 16, 19, 15, 18, 4, 2,
	0, 1, 0, 1, 0, 1, 3, 2, 4, 2,
	3, 1, 0, 2, 0, 1, 1, 0, 9, 6,
	6, 8, 6, 8, 5, 7, 2, 6, 7, 4,
	4, 5, 2, 4, 6, 6, 8, 6, 7, 8,
	9, 6, 7, 8, 9, 6, 8, 6, 8, 6,
	7, 8, 9, 6, 8, 6, 8, 6, 6, 8,
	8, 4, 7, 3, 0, 7, 10, 1, 1, 1,
	1, 2, 2, 3, 0, 3, 0, 3, 0, 1,
	0, 2, 0, 2, 2, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 2, 2,
	1, 2, 1, 2, 1, 2, 1, 3, 2, 2,
	2, 2, 1, 1, 0, 2, 4, 2, 1, 2,
	1, 2, 3, 2, 2, 2, 1, 0, 2, 1,
	1, 0, 1, 3, 1, 0, 1, 1, 1, 1,
	1, 2, 3, 2, 2, 1, 2, 14, 16, 3,
	1, 0, 4, 1, 0, 2, 2, 3, 0, 1,
	1, 4, 4, 5, 1, 0, 3, 0, 3, 0,
	3, 0, 3, 0, 4, 0, 3, 0, 1, 0,
	6, 7, 3, 6, 3, 1, 3, 1, 1, 4,
	2, 1, 3, 1, 3, 4, 8, 11, 7, 10,
	2, 2, 0, 10, 3, 2, 0, 1, 3, 1,
	1, 3, 3, 5, 6, 4, 5, 4, 1, 1,
	3, 3, 1, 2, 4, 4, 2, 3, 5, 5,
	1, 3, 1, 0, 1, 2, 3, 2, 4, 2,
	3, 0, 2, 0, 2, 1, 2, 1, 1, 1,
	2, 1, 2, 1, 2, 1, 8, 8, 8, 2,
	4, 4, 4, 2, 2, 2, 2, 3, 1, 3,
	1, 2, 6, 7, 1, 0, 1, 0, 1, 0,
	1, 1, 0, 1, 5, 1, 0, 1, 0, 1,
	0, 3, 3, 5, 1, 3, 3, 4, 5, 2,
	2, 0, 2, 2, 1, 1, 1, 0, 1, 0,
	2, 2, 5, 4, 2, 3, 1, 1, 1, 1,
	1, 1, 1, 3, 0, 1, 3, 1, 3, 3,
	3, 2, 0, 4, 2, 5, 3, 2, 0, 1,
	3, 3, 5, 1, 1, 1, 1, 1, 1, 1,
	3, 5, 1, 3, 2, 4, 4, 0, 4, 4,
	3, 4, 1, 5, 3, 4, 5, 5, 1, 5,
	1, 3, 2, 0, 3, 0, 2, 3, 1, 3,
	2, 0, 3, 5, 6, 4, 6, 4, 3, 2,
	1, 0, 5, 1, 0, 2, 2, 2, 1, 1,
	0, 1, 1, 1, 1, 0, 4, 2, 1, 2,
	2, 4, 1, 3, 1, 2, 3, 2, 4, 1,
	0, 1, 0, 2, 1, 0, 2, 5, 7, 2,
	1, 2, 4, 3, 5, 0, 1, 3, 5, 1,
	2, 1, 1, 1, 1, 1, 2, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 4, 4, 6, 6, 1, 1, 1,
	1, 1, 3, 5, 0, 1, 1, 1, 1, 1,
	2, 2, 2, 2, 2, 1, 3, 0, 5, 4,
	1, 2, 1, 4, 1, 1, 2, 1, 1, 1,
	1, 1, 0, 1, 2, 5, 1, 4, 2, 5,
	1, 4, 3, 3, 0, 1, 2, 4, 1, 1,
	1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
	3, 1, 0, 1, 4, 1, 3, 3, 3, 5,
	2, 2, 2, 2, 2, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 2, 3, 3,
	3, 2, 2, 3, 5, 4, 6, 3, 5, 4,
	6, 4, 6, 5, 7, 3, 3, 3, 3, 3,
	4, 3, 2, 4, 2, 3, 3, 4, 3, 4,
	3, 4, 5, 6, 6, 7, 6, 7, 6, 7,
	3, 4, 4, 1, 3, 1, 3, 3, 2, 2,
	2, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	2, 3, 5, 6, 6, 7, 1, 2, 1, 2,
	1, 1, 1, 1, 1, 6, 1, 1, 1, 1,
	1, 1, 2, 1, 5, 5, 6, 3, 1, 1,
	1, 2, 2, 2, 4, 3, 5, 6, 8, 6,
	5, 4, 3, 2, 2, 4, 1, 1, 1, 5,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 6, 6, 8, 8, 6, 4, 6, 6, 6,
	4, 1, 3, 3, 3, 3, 3, 4, 3, 3,
	4, 3, 3, 4, 3, 3, 4, 3, 3, 3,
	3, 3, 4, 3, 4, 3, 4, 3, 4, 4,
	3, 6, 5, 5, 5, 4, 4, 3, 4, 3,
	5, 0, 5, 0, 2, 0, 1, 3, 3, 2,
	2, 0, 6, 1, 0, 3, 0, 3, 3, 3,
	0, 1, 4, 2, 2, 2, 2, 2, 3, 2,
	2, 3, 0, 4, 1, 1, 5, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 4, 1, 1,
	1, 2, 1, 2, 2, 3, 1, 2, 3, 2,
	3, 2, 3, 1, 0, 1, 3, 1, 3, 3,
	3, 1, 3, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 4, 3, 1, 2, 3, 0, 3,
	3, 2, 2, 1, 2, 2, 3, 2, 1, 1,
	1, 5, 1, 2, 4, 2, 0, 1, 0, 3,
	5, 1, 0, 1, 2, 1, 0, 1, 3, 3,
	2, 1, 1, 1, 1, 1, 3, 1, 3, 3,
	1, 1, 1, 1, 5, 3, 1, 1, 3, 1,
	1, 1, 1, 2, 2, 1, 1, 2, 2, 1,
	1, 1, 3, 5, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 1, 3, 1, 3,
	1, 0, 1, 1, 1, 1, 1, 1, 1, 3,
	5, 7, 1, 7, 5, 3, 1, 1, 1, 1,
	1, 1, 1, 3, 5, 1, 1, 1, 1, 1,
	1, 1, 0, 3, 0, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1,
}

var sqlChk = [...]int16{
	-1000, -1, -2, 655, -3, -207, -114, -111, -77, -75,
	-118, -119, -99, -120, -113, -142, -147, -128, -129, -130,
	-143, -149, -206, -214, -215, -216, -217, -226, -208, -209,
	-4, -62, -64, -78, -98, -100, -112, -122, -121, -123,
	-131, -139, -134, -117, -69, -144, -148, -160, -210, -211,
	-212, 33, 32, 106, 85, 164, 137, 146, 217, 415,
	467, 479, 432, 151, 455, 437, -154, -155, 499, -63,
	-76, -146, -145, 78, 138, 181, 319, 447, 53, 156,
	-7, -15, -32, -19, 30, 49, -65, -66, -67, -68,
	67, -85, -80, -93, -86, -79, -82, -83, -688, 109,
	-608, -101, -105, -138, -103, -691, 172, 238, -124, -125,
	-126, 397, -132, -133, 458, -135, -136, -137, 461, 173,
	-71, -70, 166, -250, -252, -151, -150, -152, -213, -161,
	-162, -163, -164, -165, -167, -168, -170, -197, -171, -172,
	-173, -174, -175, -176, -180, -200, -177, -178, -179, -182,
	-181, -183, -188, -184, -185, -186, -187, -189, -190, -192,
	-193, -194, -195, -196, -198, -199, 505, -191, -201, -169,
	-202, 573, 522, 87, 471, 21, -8, -9, -10, -11,
	-12, -13, -14, -18, -17, -61, -5, -6, -81, -84,
	-87, -88, -89, -97, -90, -91, -92, -607, -102, -104,
	-107, -109, -110, -106, -108, 456, 626, -253, -251, 652,
	631, 589, -166, -22, -27, -23, -24, -26, -28, -25,
	-29, -30, -31, -47, -52, -49, -50, -48, -51, -53,
	-54, -55, -56, -57, -58, -59, -60, -34, -40, -41,
	-35, -36, -37, -38, -39, -42, -43, -44, -45, -46,
	-20, -21, -33, 613, 622, -256, -254, -255, -263, 491,
	597, 545, 655, 655, 655, 655, 655, 655, 655, 655,
	655, 655, 655, 655, 655, 655, 655, 655, 655, 655,
	655, 655, 655, 655, 655, 655, 655, 655, 655, 655,
	-355, 2, -331, -337, -338, -339, -330, -300, -575, -580,
	4, -572, -578, 180, 248, 357, 21, 22, 24, 23,
	25, 26, 27, 28, 30, 31, 41, 43, 44, 45,
	47, 48, 49, 50, 51, 52, 53, 57, 59, 63,
	64, 65, 66, 67, 68, 69, 73, 78, 79, 84,
	85, 86, 87, 88, 89, 90, 91, 97, 94, 95,
	96, 98, 100, 102, 103, 104, 105, 106, 107, 108,
	110, 111, 112, 114, 115, 116, 124, 125, 126, 127,
	128, 130, 137, 131, 138, 141, 135, 140, 136, 142,
	144, 145, 146, 149, 150, 151, 153, 154, 155, 157,
	158, 159, 161, 162, 164, 165, 166, 169, 167, 170,
	168, 171, 172, 173, 174, 175, 178, 186, 187, 188,
	193, 195, 196, 197, 199, 200, 203, 204, 205, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 218, 222,
	224, 225, 226, 227, 228, 229, 230, 236, 237, 238,
	240, 241, 242, 243, 244, 249, 250, 251, 255, 257,
	263, 264, 269, 265, 270, 271, 273, 277, 278, 279,
	280, 281, 282, 284, 286, 285, 290, 288, 292, 293,
	296, 297, 298, 299, 300, 301, 305, 306, 302, 307,
	308, 310, 311, 314, 312, 315, 316, 313, 317, 320,
	321, 322, 323, 324, 325, 326, 327, 328, 329, 330,
	331, 318, 319, 334, 332, 336, 337, 338, 339, 340,
	355, 350, 351, 352, 344, 345, 341, 346, 342, 343,
	347, 348, 354, 349, 359, 360, 361, 362, 365, 234,
	256, 367, 368, 371, 373, 390, 376, 377, 378, 381,
	382, 385, 388, 389, 391, 392, 393, 394, 395, 396,
	397, 398, 399, 400, 402, 403, 405, 406, 407, 409,
	410, 411, 413, 415, 416, 418, 419, 420, 422, 423,
	424, 425, 426, 427, 428, 429, 431, 432, 434, 433,
	435, 437, 439, 440, 441, 447, 448, 455, 449, 451,
	452, 453, 454, 456, 457, 458, 459, 460, 461, 465,
	463, 464, 466, 467, 469, 470, 471, 472, 473, 475,
	477, 478, 482, 483, 484, 502, 503, 525, 479, 480,
	481, 485, 486, 487, 488, 489, 490, 494, 492, 493,
	495, 496, 497, 499, 501, 504, 505, 507, 508, 509,
	510, 511, 512, 513, 516, 518, 519, 520, 521, 522,
	523, 544, 524, 526, 530, 531, 532, 533, 527, 528,
	543, 535, 536, 537, 538, 540, 541, 546, 547, 548,
	549, 550, 551, 553, 554, 556, 564, 577, 565, 566,
	567, 568, 570, 573, 574, 575, 576, 562, 578, 579,
	582, 583, 587, 584, 588, 585, 586, 589, 591, 594,
	595, 596, 602, 601, 603, 604, 605, 607, 608, 609,
	614, 615, 617, 618, 619, 37, 54, 55, 58, 60,
	62, 74, 75, 76, 80, 132, 133, 163, 176, 177,
	189, 206, 207, 219, 221, 231, 232, 233, 254, 258,
	259, 261, 267, 289, 364, 366, 383, 387, 404, 408,
	412, 414, 430, 474, 500, 514, 529, 534, 557, 558,
	559, 560, 569, 571, 597, 598, 599, 606, 616, -355,
	2, -331, 374, -324, 2, -300, -300, 415, 29, 2,
	29, 403, 493, 548, 550, 2, -637, -400, 541, 2,
	29, -303, -300, 109, 217, 491, -324, 2, -637, 217,
	-400, 26, 541, 2, -300, 2, 388, 175, 23, 28,
	71, 82, 104, 149, 174, 198, 203, -690, 390, 423,
	477, 495, 543, 554, 570, 2, 601, 311, 492, 545,
	248, 127, 575, 485, -648, 482, 483, 388, 421, 469,
	220, 590, -304, 2, 479, -300, 311, 2, 655, 100,
	79, 474, 496, -157, 2, 301, 565, -158, -159, -156,
	557, -559, 485, 469, 334, -300, 655, 655, 655, 29,
	-313, 2, -300, -313, 2, -218, 2, -313, -693, -225,
	-224, -223, 22, 448, 188, 282, 201, 239, 339, 418,
	199, 51, -218, 2, 545, 248, 485, 127, 541, -704,
	2, 565, -704, 2, 655, 655, 2, 545, 394, 601,
	492, 127, 427, 248, 575, 203, 149, 28, 73, 49,
	551, 630, 485, -648, 627, 628, 311, 134, -630, 2,
	-629, 4, -578, -572, -349, -348, 545, 551, 127, -339,
	-330, 644, -338, 655, 655, 655, 655, 2, 270, 271,
	425, 424, 496, 497, 29, 655, 655, 655, 655, 655,
	482, 175, 2, 174, -662, 23, 28, 71, 99, 104,
	134, 198, 390, 423, 495, 543, 547, 554, 570, -647,
	524, 73, 485, -646, -648, 379, 311, 575, 149, -450,
	127, 301, 215, 583, 550, 548, 581, 141, 257, 586,
	585, 655, 655, 655, -115, 2, 652, 33, 32, -114,
	-118, 151, 499, -243, 545, 262, 2, -300, 655, 655,
	655, 2, 270, 271, 482, 483, 29, 655, 655, 201,
	-629, 541, 2, 655, 655, 655, 2, 29, 270, 271,
	482, 483, 262, 2, 73, 487, 655, 655, 655, 655,
	655, 655, 655, 655, 655, 655, 655, 655, 655, 655,
	655, 655, 655, 655, 655, 655, 655, 655, 655, 655,
	655, 655, 655, 655, 655, 655, 655, 655, 655, 655,
	655, 655, 655, 2, -204, 496, 524, 227, 50, 49,
	79, 29, 422, 84, 395, 128, 134, 158, 576, 218,
	248, 249, 278, 99, 100, -452, 47, 271, 73, 270,
	483, -653, 482, -505, 546, 486, 493, 540, 91, 282,
	479, 565, 567, 109, 591, 470, 619, 427, 428, 538,
	441, 535, 302, 167, 202, 4, 127, 334, 469, 498,
	286, 285, 577, 557, 301, 478, 398, 89, 655, -702,
	2, 545, 565, 2, -704, 2, -704, 2, -705, 565,
	616, 655, 655, 655, 655, 655, 655, 655, 655, 655,
	655, 655, 655, 655, 655, 655, 655, 655, 655, 655,
	655, -251, -253, -252, 655, 655, 655, 655, 655, 655,
	655, -204, 496, 2, 79, 29, 29, -393, -395, 580,
	260, 160, 380, -250, -252, 2, -607, 577, 496, -557,
	2, -479, -581, -481, 642, 643, 635, 542, 72, -359,
	356, 620, -493, 134, 581, 374, -580, -482, -495, 163,
	390, 474, -414, 8, 9, 5, 6, 7, -309, -483,
	-489, 572, 179, 363, -352, 656, 10, 652, -604, -252,
	-494, 38, 221, 70, -561, -351, -310, -533, 261, -350,
	-330, -601, -602, 4, -572, -573, -562, -536, -544, -540,
	-541, -547, -300, -575, 82, 118, 119, 117, 122, 121,
	304, 303, 123, 120, 498, 590, 71, 37, 231, 232,
	267, 364, 233, 80, -603, 150, -574, 258, 259, 514,
	55, 430, 189, 133, 132, 366, 60, 58, 598, -545,
	129, 557, 558, 559, 560, 206, 207, 62, 176, 177,
	387, 412, 534, 569, 571, 219, 289, 46, 113, 202,
	253, 235, 266, 268, 272, 291, 294, 335, 353, 358,
	384, 386, 468, 506, -708, 599, 529, 74, 75, 194,
	-609, 433, -610, -324, -609, 655, 655, 657, 655, -384,
	-386, -388, 2, 29, 147, 652, 2, -510, 2, -511,
	-515, -252, 283, -514, 652, -512, 650, -331, 375, -605,
	475, -601, -602, -309, -330, -351, 4, -572, -574, 654,
	-389, 652, 127, 485, 545, 83, 248, 99, 174, 203,
	-445, 652, -300, 29, 374, 561, 657, -637, -400, -385,
	420, -491, 652, 374, 377, 201, 377, -637, 64, 98,
	315, 2, 2, 2, 2, 2, 231, -300, 545, 126,
	2, 281, 2, 2, 2, 2, 2, 2, 2, -407,
	231, 2, -331, 601, -407, 231, 2, -407, 231, 2,
	-451, 2, 93, -314, 231, 2, -300, -340, 231, 2,
	-335, -337, -346, 231, 2, -343, -300, -567, 231, 2,
	-565, 4, -572, 123, 498, -479, 2, -144, 2, 64,
	-300, 601, 2, 502, 2, 652, -157, 2, 76, 565,
	46, 496, -158, 2, -465, 2, -466, -296, -297, -298,
	-522, -299, 269, 419, 429, 623, 139, 356, 619, -683,
	201, 634, 561, -557, -557, -557, -415, 654, -220, 57,
	-313, -694, -693, -694, -555, 29, -550, 8, -551, 642,
	643, -555, -555, -694, -694, 2, 2, 2, 2, 2,
	-464, -465, 2, -515, 231, -331, 2, -328, -560, 4,
	-572, -578, -573, -579, -575, 29, 32, 33, 34, 36,
	38, 39, 40, 42, 61, 70, 71, 77, 81, 83,
	93, 99, 109, 117, 118, 120, 119, 121, 122, 123,
	134, 139, 143, 147, 148, 152, 156, 160, 179, 181,
	194, 198, 201, 217, 220, 223, 239, 252, 260, 262,
	283, 287, 295, 303, 304, 356, 363, 369, 374, 375,
	379, 380, 401, 417, 436, 462, 491, 498, 517, 539,
	545, 555, 561, 563, 572, 580, 581, 590, 592, 600,
	610, 611, 612, 613, -580, 82, 2, -515, 231, 2,
	-334, 231, -515, -337, 2, -314, 2, -479, -641, 553,
	170, 449, 2, -356, 231, -331, -333, -337, -335, 2,
	2, 2, 2, -479, 2, -569, 2, -564, 10, -563,
	5, 4, -572, -578, -573, -482, 2, -493, 29, -343,
	2, -565, 231, 2, 29, 29, 601, 420, 262, 561,
	657, -406, -348, -349, -556, 4, 8, -399, -300, 654,
	-479, 2, -144, -127, 2, 194, -479, 231, 2, -144,
	231, 2, -479, 231, 2, -144, 231, 2, -300, 2,
	-649, 2, -682, -569, 231, 98, 231, -300, 2, 203,
	-689, 477, 574, 315, 2, 2, 570, 2, 104, 545,
	126, 2, 2, 2, 2, 2, 2, 2, 545, -319,
	2, -300, 194, -524, 262, -343, 231, -344, 2, 492,
	-703, 433, -565, 231, 2, 453, 601, -335, 231, 2,
	-335, 248, 264, -314, 231, 2, 550, 548, 550, 548,
	201, 2, 262, 2, 262, 2, -516, 2, -517, -511,
	-518, 650, 375, -527, 2, -526, -563, 597, -115, 652,
	-115, 652, 496, 652, -569, -331, -331, -479, 2, -144,
	-127, 2, -479, 2, -144, 2, -300, 2, -141, -569,
	-140, 652, 201, 591, -300, 2, -479, 2, -144, -127,
	2, -479, 2, -144, 2, -243, 194, 2, 127, 545,
	-204, 2, 194, 592, 2, 8, 2, 239, -239, -569,
	486, 186, 428, 2, 502, 2, 503, 79, -452, 619,
	79, 201, 2, 201, 2, -435, 2, 613, 420, 201,
	2, 2, -635, 2, 374, 201, 2, 201, 2, 201,
	2, 201, 2, 201, 2, -203, 497, 566, 544, 424,
	271, 2, -144, 610, -127, 271, 270, -479, 610, 2,
	-654, 194, 483, -479, 2, 564, 280, 168, 201, -435,
	2, 201, 2, 201, 2, 5, 2, 43, 425, 525,
	2, 269, 419, 525, 2, 523, 2, -331, 545, 601,
	492, 127, 203, 29, 2, 482, 2, 2, 94, 95,
	201, 2, 201, 2, 216, 201, 2, 441, 201, 545,
	-416, 654, -416, 619, 2, -427, -515, -464, 561, -393,
	-395, -204, 502, 2, -257, -425, -259, 194, -455, -456,
	-260, 295, 181, 369, -261, -434, 29, 147, -434, -434,
	64, 653, 653, -683, 577, 11, 12, 81, 43, 642,
	643, 644, 645, 192, 646, 647, 640, 641, 639, 632,
	633, 637, 275, 276, 101, 636, 634, 92, 309, 476,
	182, 183, 184, 185, 450, 246, 35, 247, 14, 15,
	16, -359, 34, 379, 294, 620, 235, 506, 635, 17,
	18, 19, 266, 268, 358, 54, 239, -308, 390, -358,
	542, 72, -479, -479, -479, -479, -479, -479, -479, -479,
	386, 652, -421, -474, 650, -252, 652, 652, 652, 652,
	-556, -252, -479, -493, 653, -412, 652, -252, -493, -488,
	652, 474, 650, 652, -496, -479, 5, 5, 5, 652,
	654, -612, 614, 194, 652, 652, 652, 652, 652, 652,
	652, 652, 652, 652, 652, 652, 652, 652, 652, 652,
	414, -538, 652, -537, 652, -537, -537, 602, -535, 652,
	622, 615, 652, -535, 652, 652, 652, 652, 652, 652,
	652, 652, 652, 652, 652, 652, 652, 602, 551, 657,
	-609, -389, 652, -417, -520, -479, 644, -417, -417, 374,
	-409, -479, 113, -438, 272, 335, 202, 291, 468, 253,
	-476, 656, -476, -504, 622, -252, -512, -330, -252, -514,
	652, -510, -504, -116, -556, -98, -112, -121, -144, -160,
	-211, -212, 644, -331, 652, 201, 652, 654, -560, 201,
	-399, -314, -343, -331, -350, -351, -356, -325, -300, 2,
	2, 146, -409, -631, 575, 485, 29, 4, -578, -572,
	-349, 492, -348, 545, 127, -567, -303, 561, 39, -490,
	-530, -531, -583, 656, -582, -533, -543, -539, -542, 404,
	408, -562, 58, 598, -545, 261, 4, -572, -574, 258,
	259, 514, 55, 430, 189, 133, 132, 366, 60, 557,
	558, 559, 560, 206, 207, 62, 599, 529, 74, 75,
	-631, 575, 485, 29, 492, 194, -567, 194, 201, -567,
	2, -569, 2, 2, 163, 2, 2, 2, -300, -278,
	657, 69, 459, 163, -407, 231, -278, 163, -278, 163,
	-357, 231, -356, -278, 163, -278, 657, 163, -278, 657,
	163, 654, 657, 163, -567, 2, -451, -559, -409, 39,
	-465, 2, 134, 4, 5, -706, 657, 293, -362, 308,
	355, 226, 375, 617, 367, 139, -568, 5, 4, -489,
	-501, 134, 301, 261, -550, -552, 9, -553, 642, 643,
	-558, -557, 116, 654, -560, -221, 256, 41, -313, -313,
	-694, -694, 8, 8, -694, -694, -313, -313, -275, 451,
	499, 389, -274, 25, 30, 151, 250, 340, 595, 169,
	-374, 251, 456, -371, 394, 163, 518, 584, -641, -644,
	481, 553, 170, 449, 96, 367, 499, 389, 451, 163,
	-431, -433, 39, 125, 340, 388, 65, 242, 313, 314,
	522, 457, 606, 163, 499, 389, 451, 389, -16, -289,
	25, 151, -291, -286, 499, 30, -644, 105, 451, 631,
	626, 456, 400, 537, 417, -644, -641, 288, -643, 609,
	354, -277, 518, 584, -641, -644, 481, 451, -276, -376,
	-371, 394, 163, 656, 25, 151, 451, 499, 389, -686,
	-687, 30, -270, -269, 25, 151, 499, 587, -273, 239,
	-272, 25, -153, -133, -152, 456, 499, -153, 2, 451,
	389, -638, -321, -606, 239, 613, 163, -321, -321, -515,
	231, -658, 194, 2, -651, -140, 284, 5, 10, -569,
	-140, -406, 657, 657, -560, 644, 483, 482, 163, 163,
	163, 163, 271, 194, 356, -682, 2, 356, 613, -677,
	-337, -690, 2, 2, 2, 2, 2, 2, 2, -331,
	231, -391, 374, -627, -628, -692, 545, -230, 613, -569,
	356, 46, -334, 231, 2, -337, 601, -638, 356, -646,
	-336, 231, -331, 39, 652, 356, 2, -451, 2, 248,
	-606, 356, -516, -353, -331, -511, -353, 499, -324, 39,
	-476, -331, 653, 657, -527, -527, -569, -230, 201, 652,
	-243, 613, 613, 271, -523, 657, -522, 239, -570, -569,
	-141, -569, 454, 201, 271, -569, -627, -314, 2, -331,
	2, 545, 273, -140, 201, 239, -230, -569, -569, -569,
	-559, 29, 503, 2, -203, 497, 566, 95, 503, 2,
	-331, 545, 127, 248, 85, -658, 194, 2, -300, -636,
	194, -632, 469, 485, 575, -631, -331, 127, -331, 127,
	-331, 127, -331, -331, 2, 2, 2, 2, 2, 90,
	2, -144, -479, 2, 90, 2, 49, 519, -654, 194,
	2, 564, 2, 564, 2, -300, -300, -300, 369, 524,
	293, 613, -331, -331, -331, -332, -337, -337, 486, 546,
	576, 483, -479, 2, -695, 2, 201, 194, 2, 545,
	248, 545, 248, 127, 201, 79, 127, 29, 201, 545,
	480, 654, 4, -278, 657, -304, -257, -425, -559, -426,
	-425, -258, -257, -260, 194, 429, 585, 340, 504, 277,
	-456, -455, 29, -479, -460, 188, 339, -479, -458, -481,
	642, 643, -551, -553, -408, 367, -251, -251, -251, -396,
	-506, -479, 417, 248, -558, -683, -532, -530, -530, -329,
	-560, 557, -479, -479, -479, -479, -479, -479, -479, -479,
	-479, -479, -479, -479, -479, -479, -479, -479, -479, -479,
	-479, -479, -479, -479, -479, -479, -479, -479, -479, -479,
	-479, -479, -479, -479, -479, -479, -479, -479, 294, 235,
	506, 54, 239, -479, 561, -479, -479, -479, -479, 332,
	356, 363, 572, 179, 582, 147, 367, -709, 539, 42,
	-486, -252, -413, 652, -500, 36, 517, 29, -493, 652,
	2, -474, -479, -475, -360, -358, -300, 642, 643, 644,
	645, 646, 647, 632, 633, 634, 14, 15, 16, 637,
	641, 639, 640, 192, 101, 636, 309, 476, 92, 182,
	183, 184, 185, 275, 276, 17, 18, 19, 35, 635,
	-410, -409, -409, 653, 600, 29, 147, 644, 2, 653,
	657, 39, 653, -479, -410, -492, -488, -409, -499, -498,
	610, -446, -447, 618, 318, 130, 229, 316, -448, 489,
	-554, 8, -560, 644, -613, 187, 220, 652, 653, 2,
	653, 2, 653, -479, 2, 653, -479, 2, 653, -479,
	2, 653, -479, 2, 653, 2, 653, 2, -479, -479,
	-479, -479, -479, -479, -479, -409, 8, -554, -554, 557,
	557, -554, -554, -554, -546, 404, 405, 406, 407, 296,
	297, 298, 299, 408, 409, 410, 411, 324, 325, 326,
	327, 320, 321, 322, 323, 328, 329, 330, 331, 211,
	212, 213, 214, 207, 208, 209, 210, -546, -440, 2,
	-548, -409, 4, 618, 318, 130, 229, 316, 489, 5,
	-440, 2, -441, 2, -479, -409, -442, -480, -481, 642,
	643, 635, -359, -443, 2, -479, -410, -479, 61, 287,
	563, -444, -479, 201, -409, -409, 2, -409, 2, -482,
	2, -610, 39, -409, -402, 657, 201, 39, -577, 4,
	-576, 44, 66, 107, 136, 175, 237, 255, 265, 290,
	391, 463, 464, 490, 521, 536, 568, 608, 500, -402,
	-402, 652, 653, 657, -439, 224, 312, 307, 264, -439,
	-510, -438, 272, -436, 384, -436, -436, -504, -315, 650,
	659, -560, -504, -503, -502, 39, -324, 381, -504, -504,
	654, 653, -503, 651, -625, 652, 655, 655, 655, 655,
	655, -331, 652, -409, -560, 654, 526, 2, 653, 266,
	266, 266, 266, 266, 374, 475, 653, 561, -633, -340,
	-346, 493, 546, -406, 657, -406, -399, 613, -567, -114,
	376, 653, 657, -401, 38, 650, 654, -554, 2, 2,
	-549, 602, 652, 652, -447, 652, 201, -633, -346, 546,
	493, 2, -637, 541, -400, -567, 561, -300, 2, -331,
	-407, -278, 163, -407, -407, -278, 657, 163, -314, -335,
	-340, -343, -346, -300, -565, -567, -278, -336, -683, 653,
	565, -466, -361, 429, 516, 452, 494, 541, 9, 9,
	657, -560, -222, 484, 340, -313, -313, -313, -313, 657,
	-684, 99, 561, 83, 652, 485, -293, 302, 561, -470,
	231, 83, -584, 99, -317, -585, -300, 77, 581, 417,
	198, 161, -684, 99, 417, -684, 99, 2, 250, 99,
	499, 524, 652, 29, 64, -515, 43, 43, 29, -642,
	-643, 288, 201, 619, 545, 248, 485, 561, 561, -515,
	-433, -530, 125, 313, 314, 64, -555, -555, 64, -555,
	-555, -555, 613, -555, 613, -334, -515, 485, 561, 561,
	561, 439, 535, 439, 535, -286, -158, 535, 561, 561,
	-158, 29, -204, 460, 134, -707, 634, 439, 288, -643,
	561, 201, 657, 43, 43, 29, -642, 201, 561, -356,
	-315, 596, 45, 596, 45, 596, 561, 45, 485, 561,
	657, 45, -269, -627, -627, -229, -228, -300, 5, -399,
	-272, -569, -271, 338, 79, 561, 561, -16, 499, -639,
	-305, 112, 346, 306, 347, 103, 343, 102, 342, 110,
	344, 111, 345, 603, 359, 604, 360, 68, 341, 317,
	348, 520, 349, 605, 361, -306, -307, 154, 396, 594,
	127, -565, -16, -16, 499, 389, 451, 163, -659, 239,
	29, -648, 239, -523, 239, -523, -348, -300, 654, -144,
	-479, -479, -144, -479, -144, 49, 163, 39, 163, 2,
	652, 281, 652, -365, 356, 201, -399, -524, 657, -331,
	39, -229, 378, 163, -565, -432, -431, 356, -336, 231,
	2, 163, -703, -389, 356, 157, 652, 427, 2, 163,
	-316, 231, -301, -300, -451, -280, 549, 163, -429, 592,
	-461, -144, 652, 134, 39, -461, -418, -419, -521, -420,
	-317, 652, -324, -476, -115, -526, 653, 653, 653, -243,
	-390, -318, -317, 126, 431, 431, -236, 613, -140, -141,
	653, 657, -523, 239, 527, -141, -569, -230, -230, -523,
	-523, -331, 194, -569, -140, -230, -230, -230, 2, 2,
	2, 2, -435, -331, -314, -356, -331, -342, 239, 29,
	654, -567, -567, -346, -347, -345, -300, -340, -435, -314,
	-435, -314, -435, -314, -435, -435, -144, -479, 524, 2,
	496, 194, 194, 654, -435, 8, -392, 462, 5, 2,
	427, 127, 545, 394, 248, -331, -356, -331, -356, -314,
	127, -314, 128, 127, -331, 4, -515, -426, -258, 375,
	277, 504, -458, -459, -481, 474, 475, -459, 474, 475,
	8, 9, 8, 9, -262, 508, 362, -407, 657, -267,
	40, 143, 277, -331, -558, 619, 159, -479, -479, 561,
	-709, 539, -486, 159, -479, 332, 363, 572, 179, 582,
	147, 367, 201, 652, -480, -480, 653, -411, -479, -479,
	651, 661, 653, 654, 653, -395, 657, -393, -479, -409,
	-409, 653, 654, -409, -399, 651, 651, 657, 653, -497,
	-498, 152, -479, 561, 561, 561, 561, 652, 653, 654,
	-618, 385, 652, 652, -479, 653, 653, 653, 653, 39,
	657, 657, 657, 653, 657, 657, 657, 653, 653, 653,
	657, 653, 619, 619, 653, 653, 653, 653, 657, 653,
	657, 653, 201, 653, 653, -449, 401, 653, 11, 12,
	642, 643, 644, 645, 192, 646, 647, 640, 641, 639,
	632, 633, 634, 92, 309, 476, 14, 15, 16, -359,
	266, 239, -480, -480, -480, -480, 653, -484, -485, 201,
	194, 39, -444, -444, -444, 653, 201, -409, 653, 653,
	652, -611, 311, 356, 653, -473, -472, 611, -520, -403,
	2, -510, -326, -560, -473, -473, -409, -479, 272, 272,
	-437, 592, 374, -439, -510, -503, -556, -478, -477, 196,
	40, 143, 350, 351, 352, 234, 197, -503, -324, -389,
	-503, -503, -560, -504, -504, -502, 653, -626, -556, 653,
	-404, -513, -605, -395, 654, -560, -240, -606, -205, 5,
	363, -205, -205, -205, -205, -331, -567, 561, 561, 239,
	239, -406, 26, -657, 613, 402, -530, 650, 651, 8,
	-560, 652, -554, -554, -554, -567, 201, 201, 239, 239,
	374, -637, 201, -565, 2, -278, -407, -278, -278, -356,
	-357, -278, -278, -278, -430, 613, -557, -465, 579, 88,
	429, 557, -557, 124, 484, -274, 451, 499, -317, -317,
	-331, -247, -246, -244, -300, 5, -341, -300, 215, 440,
	-565, 356, -470, 231, -279, 356, 231, -325, -530, 652,
	-453, 615, 277, 277, 592, -317, -325, 277, 231, -317,
	231, -325, 2, -325, -640, 429, 368, -479, -245, -244,
	64, -372, 300, 427, 357, -275, 451, 499, 389, -144,
	-144, -144, 652, -683, 592, 146, -331, -356, -331, -341,
	-565, -336, 499, 389, 451, 353, -350, -555, -555, -555,
	-431, 499, 389, 451, -341, -565, -334, -565, -285, 231,
	-300, 439, -285, 231, 439, 439, 485, -314, 439, 619,
	48, -707, 561, 201, -479, -479, -276, -144, -144, -144,
	652, -315, -277, 451, 5, 231, -317, 5, -317, 231,
	5, -300, -317, -341, -565, -687, 25, 151, -317, -230,
	657, 634, 634, -273, 634, -341, -565, -305, 396, -651,
	363, 5, 10, 588, -314, -638, -321, 485, 561, 561,
	-515, -655, -656, 217, 467, 485, 470, -567, -140, -233,
	613, -140, -227, 243, 644, -630, -569, -569, -300, -666,
	-667, -668, -669, -676, -664, -671, 239, 383, 254, 600,
	-561, -530, 4, -572, -300, -363, -366, -364, -317, -471,
	-470, -588, -589, -584, 294, 248, 581, 264, 180, 99,
	-248, -249, 615, 613, 163, -354, -331, 650, -230, -628,
	-525, 180, 491, 652, -343, -344, 163, -389, 356, -565,
	601, 39, 163, 652, 2, 2, -335, 374, 356, -316,
	231, -281, 153, -707, -314, -473, -403, -428, -463, 462,
	374, -390, 597, -324, -428, -405, 657, 201, 634, 654,
	-390, -519, 644, -115, -115, -230, 652, -569, 653, 657,
	654, 652, 634, 634, -238, 378, -237, 155, 279, 263,
	510, 511, 512, 513, 145, 509, 131, 337, 244, 551,
	-523, -569, -236, -141, 201, -523, 239, 201, -72, 613,
	545, 239, -230, 656, 485, 470, -300, 654, -435, -435,
	-435, 496, 496, -300, 194, -399, -327, -560, -314, -331,
	-328, -356, 194, 194, -314, -314, 585, -459, 375, 305,
	-506, -268, 621, -331, 656, -479, -479, 159, 159, -479,
	-480, -480, -479, 159, 201, 652, -479, -490, 34, 34,
	653, 657, -475, -479, -358, 653, 600, -395, -395, 653,
	644, -560, 656, 653, -488, 156, -479, 555, 318, 229,
	316, -448, 316, -448, -448, -554, 5, -560, 644, -619,
	-320, 652, -300, 611, -394, 380, 653, -532, -530, -479,
	-479, -479, -479, -479, -554, -535, -535, -550, -550, -479,
	-484, -479, -532, -530, -480, -480, -480, -480, -480, -480,
	-480, -480, -480, -480, -480, -480, -480, -480, -480, -480,
	-480, -480, -480, -480, 147, 356, 367, -480, -485, -484,
	-479, -479, -530, 653, 653, 653, -409, -114, 652, 311,
	-422, 220, -479, -523, 657, -422, -422, 653, -510, -510,
	652, -479, 272, 651, 657, 660, 634, 634, -389, 654,
	-502, -503, 651, 653, 657, 653, 657, -462, 39, 653,
	-560, -473, -242, -241, 144, 57, 114, 142, 363, 371,
	200, 225, 426, 159, 195, 153, 266, -657, -567, -567,
	485, 485, 377, 217, 5, 8, 650, 651, 654, -554,
	653, 653, 653, -567, -567, 485, 485, -631, 575, 485,
	29, 201, -567, -278, -278, 126, 340, -479, -219, 613,
	615, 561, 561, 653, 657, 634, 64, 239, 163, 356,
	594, 356, -585, 161, -590, -479, 652, 248, 652, 652,
	2, -264, -265, -266, 151, 499, 25, -685, 2, 592,
	163, -278, 163, -278, 617, 653, 657, -372, 652, 652,
	561, 485, -293, 561, 613, -409, -479, -231, 134, -559,
	-644, 656, -644, 656, 485, 561, 561, 485, 561, 561,
	356, -300, 163, -300, -300, 613, 178, 178, 619, -285,
	-479, -479, 194, 561, 613, -409, 561, -534, 52, 27,
	356, -335, -278, 163, 561, 561, 575, 499, -228, -569,
	-569, -140, -651, -569, 363, -16, -341, -565, -336, 499,
	389, 451, -637, -637, 217, -346, -659, -523, -235, 378,
	-234, 155, 466, 145, 279, 244, -523, -233, 201, 262,
	613, 653, 657, 134, 634, -664, -671, -676, -671, 383,
	2, 653, 653, 657, 657, -591, -279, -331, -316, 248,
	248, -323, -301, 39, 371, 371, 652, -331, -94, 613,
	-522, -556, -322, -300, -417, -229, 46, -334, 39, 163,
	-638, -336, -144, -336, -528, -529, 5, 39, -331, 163,
	374, 356, -282, 286, -707, -564, -606, -395, -428, -417,
	357, 97, 653, -473, -419, -403, -479, 2, 653, -569,
	-230, -243, -318, 2, -570, -569, -569, 657, 652, 634,
	634, 634, 634, 634, 634, 634, -236, -523, -140, -236,
	-141, -144, 378, -331, -140, 644, -341, -342, 644, -435,
	5, -378, -377, 394, 367, -378, 474, 474, 375, 188,
	282, -267, -315, -479, -479, 159, 34, 34, -479, -479,
	-490, 653, -479, -479, -409, 651, 5, -479, 653, 653,
	8, -479, 653, 654, -620, -300, -479, 653, 64, 653,
	653, 657, 657, 653, 653, 653, 653, 653, 653, 653,
	-485, 201, 147, 367, 652, 653, 653, -114, -487, 223,
	64, -510, -487, -487, -437, -399, -510, -477, -315, 650,
	-315, 650, -560, -556, -513, 652, 654, -241, 634, -569,
	-569, 2, 2, 5, 5, 426, 356, 363, 5, -205,
	-657, -657, 613, -346, -346, 377, 651, 2, 650, -560,
	653, -346, -346, 201, -633, -346, 546, -567, 126, 194,
	228, 228, -317, -317, -246, -557, 545, 474, -285, 417,
	-470, 163, 163, -592, 99, -594, 81, 180, 109, 356,
	363, 581, 417, 77, 134, 374, 436, -697, -698, -699,
	39, 624, 625, 653, -397, -507, -605, 652, -300, -397,
	-399, 356, 532, 134, 374, 356, 134, 374, 607, 126,
	2, 575, 84, -317, -325, -244, -399, -399, -331, -341,
	-565, 171, 653, 657, 634, 2, 644, 644, -341, -565,
	-336, -341, -565, -334, 163, 597, -285, 597, 392, 178,
	561, -144, -479, 171, 653, -315, 5, 5, 163, -312,
	81, -317, 5, -317, -335, 126, 613, 485, 561, 561,
	374, 374, 377, -655, -656, -233, 657, 652, 634, 634,
	634, 634, 634, -233, -570, -140, 2, 464, -668, -479,
	-479, -671, -671, -379, 250, -317, -589, -586, -587, 417,
	-471, -593, -595, 180, 417, -367, 652, -316, -301, 652,
	-144, 2, -247, 652, -365, 378, 651, 201, 653, -565,
	-432, -144, -336, -389, -387, 613, -389, 653, 657, 157,
	-454, 592, -315, -331, 163, -283, 285, -707, -564, -280,
	-457, -455, 148, 652, 374, -144, -395, 634, 653, 126,
	653, -237, -238, -569, -140, -569, -569, -569, -140, -569,
	-236, -661, 39, -523, -73, -74, 248, 99, 399, -230,
	-328, 545, 248, 652, 652, -267, -479, -479, -479, 653,
	-395, -560, 644, -614, 394, 653, -506, -479, -479, -480,
	201, 652, -490, 653, -615, 612, -479, -423, -424, -479,
	472, 115, 221, -615, -615, 653, -556, -556, 2, -569,
	2, 2, 363, 2, 2, 2, 561, 561, 650, 2,
	201, 201, -567, 201, 201, 239, -144, 239, 39, 439,
	-470, -325, -325, -329, -322, 180, 231, 363, 607, -453,
	277, 652, -480, 585, -331, 652, 2, 230, 230, 31,
	64, -700, 139, 252, 653, 657, -508, -311, -300, -479,
	-508, 653, 653, 363, 585, 363, 607, -479, 585, -530,
	652, -278, -278, 653, 653, -479, 561, -559, 106, -557,
	2, -644, -285, -399, -399, -314, -479, 194, -479, 561,
	5, -278, -329, -278, -278, -312, 575, 373, -341, -565,
	-336, -660, 546, 493, 576, 486, 204, 473, -660, 194,
	-234, -235, -569, -479, 572, 179, -140, -140, -233, -663,
	500, -373, -374, 2, -591, 277, -322, 277, 241, 162,
	-397, 652, 652, -399, -696, 613, 653, -363, -248, -95,
	-96, 562, -522, -634, -353, -389, 39, 340, 126, 39,
	5, 652, 652, -300, 374, 652, -315, -295, 98, -707,
	-564, -281, -428, 357, -399, 99, -457, -486, -230, 652,
	-230, 653, 551, -236, 657, 29, 652, 29, 652, -331,
	-356, -409, -409, 653, -395, 64, 657, 653, 653, -480,
	-490, 653, -616, -617, -320, 657, 652, 652, 501, 651,
	651, 2, -567, -567, 2, -567, -567, -567, -567, 485,
	-285, 417, -300, -585, -594, -322, 356, -249, 592, 613,
	-479, -480, -302, 652, -479, 652, 652, 39, 134, 252,
	140, 236, -469, -701, 108, 533, 240, -507, -267, 653,
	-468, 592, 436, -480, -312, -397, 652, 652, 652, 634,
	201, -144, 652, -534, -278, -335, 634, 561, 2, 2,
	201, -637, 653, -650, 434, -670, -671, -248, 652, -249,
	-368, 86, 100, 135, 230, 205, 249, 524, 530, 29,
	-368, 653, -397, -397, 653, -369, 374, 126, 340, 653,
	39, -96, 9, -473, 39, -144, 126, -144, -528, -397,
	-331, -397, 374, -287, -286, 295, -564, -282, 653, -325,
	-428, -570, -556, 4, -74, -399, -399, 653, 653, -621,
	427, 475, 222, -409, -396, 653, 657, 39, -424, 2,
	2, 2, -657, -657, -346, 439, -279, 163, 224, 653,
	-596, 310, -300, 653, -432, -432, 39, 140, 236, -375,
	-371, 652, -268, -508, -249, 224, -331, -645, 592, 653,
	-381, -380, -377, -383, -382, -377, -409, -557, 106, 392,
	-409, -312, -140, -567, -567, 374, -652, 202, -651, -672,
	-673, -674, 39, 281, 568, 612, -675, 66, 464, 528,
	237, 521, 608, 175, 490, 290, 356, 107, 475, 536,
	499, 391, -369, -398, -509, -317, -468, 653, 653, 87,
	126, -379, -144, -144, 2, -387, 653, 653, -454, 653,
	-331, -284, -571, 439, 441, -707, -283, -473, 148, 653,
	653, 653, 653, -622, -623, 54, 578, 116, -479, -622,
	-622, -617, -619, 201, 180, -467, 622, -597, -600, -599,
	629, 507, 202, 393, 653, 532, 606, 653, 653, -700,
	-399, -467, -389, -479, -468, 653, 657, 597, 653, 657,
	597, 653, 201, 653, -278, -657, -278, -660, -232, 613,
	49, -681, -678, 53, 463, -674, -665, 5, -564, 374,
	363, 490, 136, 265, 290, -501, -501, -300, -294, -293,
	653, 657, -469, -468, -375, 416, 141, 151, -373, -696,
	-468, 652, -469, 652, -292, -291, -707, -550, -295, 148,
	357, 585, -230, -624, 161, -623, 413, 193, 474, 413,
	193, -624, -624, -567, -322, -249, 59, -599, 629, -600,
	629, 585, 141, -473, 653, -596, -249, -380, 239, -382,
	201, 392, 201, 482, -651, 31, 44, -479, 363, 374,
	136, 265, -249, -509, -375, -469, -249, 475, 475, 2,
	-248, -369, -469, -397, -375, -397, -288, -289, -290, -399,
	-287, 357, 585, 499, 116, 220, 556, 340, 34, 634,
	-598, 340, 459, 69, 499, -598, -597, 652, 652, -567,
	378, -680, 255, 363, -249, -375, -473, 2, -369, -375,
	653, -249, 653, -566, 389, -284, 499, -418, 474, 382,
	-623, -479, 24, 363, 134, -700, -409, -409, -278, -229,
	652, -679, 156, -3, -678, 255, -473, -249, -294, -249,
	-468, -473, -469, -707, -292, -418, -473, 653, 653, -229,
	658, -473, -473, -469, -375, -565, -288, -473, -370, -371,
	561, 653, -375, -249, 652, -249, -473, -409, -473, 653,
	-370,
}

var sqlDef = [...]int16{
	-2, -2, 1, 2, 3, 4, 6, 7, 9, 10,
	11, 13, 15, 17, 19, 21, 23, 25, 27, 29,
	31, 33, 34, 35, 37, 39, 41, 43, 1668, 1670,
	665, 666, 668, 669, 670, 672, 673, 675, 677, 679,
	680, 681, 683, 684, 686, 687, 688, 689, 690, 692,
	694, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, -2, 0, 0, 785, 787, 0, 1650,
	1652, 1654, 1656, 0, 0, -2, -2, 0, -2, -2,
	44, 45, 47, 49, 0, -2, 385, 387, 389, 391,
	0, 423, 425, 426, 428, 430, 431, 433, 435, -2,
	0, 596, 597, 599, 601, 603, -2, 0, 1229, 1231,
	1233, 0, 773, 775, 0, 1236, 1238, 1240, 0, 0,
	797, 798, 0, 1768, -2, 789, 791, 793, 795, 874,
	876, 878, 880, 882, 884, 886, 888, 890, 892, 893,
	895, 897, 899, 901, 903, 904, 906, 908, 910, 911,
	913, 914, 916, 918, 920, 922, 924, 926, 928, 930,
	932, 934, 936, 938, 940, 942, -2, 945, 946, 947,
	949, -2, 0, -2, -2, 1664, 51, 53, 55, 57,
	59, 61, 63, 65, 67, 69, 71, 73, 542, 544,
	546, 548, 550, 553, 555, 557, 559, 1826, 605, 607,
	609, 611, 613, 615, 617, 0, 0, -2, 1840, 0,
	0, 0, 1038, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 129, 130, 131, 132, 133, 134, 135,
	88, 89, 90, 92, 93, 94, 95, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	126, 127, 86, 0, 0, 1799, 1801, 1803, 1805, -2,
	0, 0, 8, 12, 14, 16, 18, 20, 22, 24,
	26, 28, 30, 32, 36, 38, 40, 42, 1669, 1671,
	667, 671, 674, 676, 678, 682, 685, 691, 693, 695,
	650, 651, 654, 2542, 2560, 2561, 2562, 2565, 2566, 2567,
	2568, 2569, 2570, 3094, 3175, 3176, 2593, 2594, 2595, 2596,
	2597, 2598, 2599, 2600, 2601, 2602, 2603, 2604, 2605, 2606,
	2607, 2608, 2609, 2610, 2611, 2612, 2613, 2614, 2615, 2616,
	2617, 2618, 2619, 2620, 2621, 2622, 2623, 2624, 2625, 2626,
	2627, 2628, 2629, 2630, 2631, 2632, 2633, 2634, 2635, 2636,
	2637, 2638, 2639, 2640, 2641, 2642, 2643, 2644, 2645, 2646,
	2647, 2648, 2649, 2650, 2651, 2652, 2653, 2654, 2655, 2656,
	2657, 2658, 2659, 2660, 2661, 2662, 2663, 2664, 2665, 2666,
	2667, 2668, 2669, 2670, 2671, 2672, 2673, 2674, 2675, 2676,
	2677, 2678, 2679, 2680, 2681, 2682, 2683, 2684, 2685, 2686,
	2687, 2688, 2689, 2690, 2691, 2692, 2693, 2694, 2695, 2696,
	2697, 2698, 2699, 2700, 2701, 2702, 2703, 2704, 2705, 2706,
	2707, 2708, 2709, 2710, 2711, 2712, 2713, 2714, 2715, 2716,
	2717, 2718, 2719, 2720, 2721, 2722, 2723, 2724, 2725, 2726,
	2727, 2728, 2729, 2730, 2731, 2732, 2733, 2734, 2735, 2736,
	2737, 2738, 2739, 2740, 2741, 2742, 2743, 2744, 2745, 2746,
	2747, 2748, 2749, 2750, 2751, 2752, 2753, 2754, 2755, 2756,
	2757, 2758, 2759, 2760, 2761, 2762, 2763, 2764, 2765, 2766,
	2767, 2768, 2769, 2770, 2771, 2772, 2773, 2774, 2775, 2776,
	2777, 2778, 2779, 2780, 2781, 2782, 2783, 2784, 2785, 2786,
	2787, 2788, 2789, 2790, 2791, 2792, 2793, 2794, 2795, 2796,
	2797, 2798, 2799, 2800, 2801, 2802, 2803, 2804, 2805, 2806,
	2807, 2808, 2809, 2810, 2811, 2812, 2813, 2814, 2815, 2816,
	2817, 2818, 2819, 2820, 2821, 2822, 2823, 2824, 2825, 2826,
	2827, 2828, 2829, 2830, 2831, 2832, 2833, 2834, 2835, 2836,
	2837, 2838, 2839, 2840, 2841, 2842, 2843, 2844, 2845, 2846,
	2847, 2848, 2849, 2850, 2851, 2852, 2853, 2854, 2855, 2856,
	2857, 2858, 2859, 2860, 2861, 2862, 2863, 2864, 2865, 2866,
	2867, 2868, 2869, 2870, 2871, 2872, 2873, 2874, 2875, 2876,
	2877, 2878, 2879, 2880, 2881, 2882, 2883, 2884, 2885, 2886,
	2887, 2888, 2889, 2890, 2891, 2892, 2893, 2894, 2895, 2896,
	2897, 2898, 2899, 2900, 2901, 2902, 2903, 2904, 2905, 2906,
	2907, 2908, 2909, 2910, 2911, 2912, 2913, 2914, 2915, 2916,
	2917, 2918, 2919, 2920, 2921, 2922, 2923, 2924, 2925, 2926,
	2927, 2928, 2929, 2930, 2931, 2932, 2933, 2934, 2935, 2936,
	2937, 2938, 2939, 2940, 2941, 2942, 2943, 2944, 2945, 2946,
	2947, 2948, 2949, 2950, 2951, 2952, 2953, 2954, 2955, 2956,
	2957, 2958, 2959, 2960, 2961, 2962, 2963, 2964, 2965, 2966,
	2967, 2968, 2969, 2970, 2971, 2972, 2973, 2974, 2975, 2976,
	2977, 2978, 2979, 2980, 2981, 2982, 2983, 2984, 2985, 2986,
	2987, 2988, 2989, 2990, 2991, 2992, 2993, 2994, 2995, 2996,
	2997, 2998, 2999, 3000, 3001, 3020, 3021, 3022, 3023, 3024,
	3025, 3026, 3027, 3028, 3029, 3030, 3031, 3032, 3033, 3034,
	3035, 3036, 3037, 3038, 3039, 3040, 3041, 3042, 3043, 3044,
	3045, 3046, 3047, 3048, 3049, 3050, 3051, 3052, 3053, 3054,
	3055, 3056, 3057, 3058, 3059, 3060, 3061, 3062, 3063, 3064,
	3065, 3066, 3067, 3068, 3069, 3070, 3071, 3072, 3073, 652,
	653, 1423, 0, 734, 732, 2525, 735, 2850, 737, 739,
	590, 591, 592, 593, 594, 595, 0, 766, 2953, 749,
	1838, 767, 769, 770, 771, 772, 729, 727, 0, 771,
	766, 2598, 2953, 764, 1648, 1649, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 604, 0, 0, 0, 0,
	-2, 0, 0, 0, 0, 0, 0, 0, 521, 1486,
	1487, 1488, 1633, 1634, 2905, 1679, 0, 261, 786, -2,
	-2, 3058, -2, 828, 829, -2, -2, 843, 847, 838,
	3063, 0, 2908, 2891, -2, 850, 1651, 1653, 1655, 950,
	951, 952, 2546, 956, 954, 966, 967, 970, 0, 987,
	-2, 0, 2594, 2873, -2, -2, 988, 989, -2, -2,
	-2, -2, 968, 969, 0, 0, 0, 0, 0, 1681,
	1673, 1676, 1674, 1675, 46, 48, 50, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 269,
	271, -2, -2, -2, -2, 0, 0, 2959, 2656, 2493,
	2562, 2496, 2491, 386, 388, 390, 392, 393, 0, 0,
	0, 0, 0, 0, 0, 424, 427, 429, 432, 434,
	-2, 0, 436, 0, 520, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 585, -2, -2, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1303, 1295, 1296, 1553, 0, 0, 0,
	-2, 598, 600, 602, 655, 656, 0, 1827, 1827, 663,
	664, -2, 0, 0, 0, 0, 347, 337, 1230, 1232,
	1234, 1235, 0, 0, 0, 0, 0, 774, 776, 0,
	0, 2953, 311, 1237, 1239, 1241, 1242, 0, 0, 0,
	0, 0, 0, 349, 0, 0, 790, 792, 794, 796,
	875, 877, 879, 881, 883, 885, 887, 889, 891, 894,
	896, 898, 900, 902, 905, 907, 909, 912, 915, 917,
	919, 921, 923, 925, 927, 929, 931, 933, 935, 937,
	939, 941, 943, 944, 995, 0, 0, 0, 0, -2,
	-2, -2, 0, 0, 0, -2, 0, -2, -2, -2,
	0, 0, 0, 0, 0, 0, 0, -2, 0, 0,
	1107, 0, 0, 0, -2, -2, -2, 0, 0, 0,
	0, 0, 0, 0, -2, -2, 0, 0, 0, 0,
	-2, 0, 1200, 0, 0, 998, 1001, 1002, 1003, 1004,
	1005, 1006, 1007, 0, 1080, 1105, 1106, 1116, 948, 0,
	1466, 1828, 1681, 1658, 1659, 1660, 1665, 1667, 1661, 1662,
	1663, 52, 54, 56, 58, 60, 62, 64, 66, 68,
	70, 72, 74, 543, 545, 547, 549, 551, 554, 556,
	558, -2, 1797, 1798, 606, 608, 610, 612, 614, 616,
	618, 777, 0, 780, 0, 1000, 779, -2, 0, 1832,
	1832, 1832, 0, 0, 1798, 1796, 0, 0, 0, 783,
	784, 854, 855, 2105, 0, 0, 0, 0, 0, 0,
	0, 0, 2365, 2193, 0, 856, -2, 2226, 2228, 3032,
	2822, 3058, 2364, 2230, 2231, 2232, 2233, 2234, 0, 2236,
	2237, 2238, 2239, 2240, 2241, 0, 2243, 0, 2248, 2249,
	2250, 0, 3039, 2468, 2556, -2, 0, 0, 3046, 2552,
	0, 2331, 2266, -2, -2, 2579, 2558, 2037, 2038, 2039,
	2040, 2041, -2, -2, 3077, 2270, 2271, 2272, 2273, 2274,
	2275, 2276, 2277, 2278, 2279, 2280, 0, 3020, 3040, 3041,
	3047, 3049, 3042, 3029, 2291, 2671, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, 2064,
	2073, -2, -2, -2, -2, -2, -2, -2, 3033, 3034,
	3052, 3055, 3062, 3067, 3068, 3038, 3048, 3076, 3078, 3079,
	3080, 3081, 3082, 3083, 3084, 3085, 3086, 3087, 3088, 3089,
	3090, 3091, 3092, 3093, 2065, -2, -2, -2, -2, 0,
	1815, 2866, 1818, 1423, 1816, 1800, 1802, 0, 1804, 0,
	0, 0, 1809, 1835, 1833, 0, 1884, 1813, 1814, 1907,
	1907, 1931, 0, 1912, 0, 1931, 1827, 1958, 0, 1918,
	2896, 2267, 2268, 0, 2562, 2557, -2, -2, 3074, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	730, 0, 736, 738, 0, 0, 0, 0, 766, 765,
	1837, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 524, 525, 526, 527, 528, 3040, 0, 0, 0,
	533, 0, 535, 536, 537, 538, 539, 540, 541, 231,
	3040, 623, 648, 0, 231, 3040, 626, 231, 3040, 629,
	0, 632, 1551, 231, 3040, 635, 2521, 231, 3040, 638,
	640, 2529, 231, 3040, 644, 2536, 2534, 645, 0, 647,
	251, 247, 248, 249, 250, 1644, 1645, 1646, 1647, 0,
	1678, 1552, 788, 0, 814, 0, 826, 827, 3028, -2,
	0, 2918, 831, 832, -2, 834, 1682, 1686, 1687, 1688,
	1689, 1690, 0, 0, 0, 0, 1695, 0, 0, 0,
	0, 821, 822, 841, 842, 848, 851, 0, 959, 955,
	971, 0, 986, 0, 987, 987, 2510, 2501, 2502, 0,
	0, 987, 987, 0, 0, 990, 991, 992, 993, 994,
	1672, -2, 85, 0, 3040, 1958, 87, 0, 2515, 2588,
	2589, 2590, 2591, 2592, 3075, 3095, 3096, 3097, 3098, 3099,
	3100, 3101, 3102, 3103, 3104, 3105, 3106, 3107, 3108, 3109,
	3110, 3111, 3112, 3113, 3114, 3115, 3116, 3117, 3118, 3119,
	3120, 3121, 3122, 3123, 3124, 3125, 3126, 3127, 3128, 3129,
	3130, 3131, 3132, 3133, 3134, 3135, 3136, 3137, 3138, 3139,
	3140, 3141, 3142, 3143, 3144, 3145, 3146, 3147, 3148, 3149,
	3150, 3151, 3152, 3153, 3154, 3155, 3156, 3157, 3158, 3159,
	3160, 3161, 3162, 3163, 3164, 3165, 3166, 3167, 3168, 3169,
	3170, 3171, 3172, 3173, 3174, 3077, 91, 0, 3040, 96,
	0, 3040, 0, -2, 112, 0, 128, 0, 155, -2,
	-2, -2, 136, 0, 3040, 0, 2490, -2, 0, 243,
	338, 339, 340, 0, 711, 0, 720, 350, 351, 2575,
	2576, 2584, 2585, 2586, 2587, 0, 817, 2365, 0, 0,
	1267, -2, 0, 1479, 1481, 1481, 0, -2, 0, 0,
	0, 1218, 2487, 2492, 1219, 1220, 2511, 1221, 2497, 0,
	394, 395, 396, 397, 398, 0, 399, 3040, 401, 402,
	0, 404, 405, 3040, 407, 408, 0, 410, 0, 412,
	0, 286, 292, 290, 3040, 0, 3040, 438, 441, 0,
	522, 0, 519, 0, 503, 504, 0, 506, 0, 0,
	0, 511, 512, 514, 515, 516, 517, 518, 0, 563,
	561, 2526, 581, 364, 0, -2, 3040, 0, 1264, 0,
	0, 1531, -2, 0, 1472, -2, 0, 1538, 3040, 1534,
	0, -2, 0, 1825, 3040, 1699, 1299, 1300, 1301, 1302,
	1970, 587, 0, 1732, 0, 1734, 0, 1754, 1964, 1907,
	0, 0, 1969, 0, -2, 708, 2545, -2, 658, 0,
	659, 0, -2, 0, 364, 0, 0, 1245, 1247, 1248,
	1250, 1251, 1254, 1255, 1256, 1257, 0, 1259, 1944, 312,
	314, 0, 0, 0, 0, 1244, 1635, 1636, 1637, 1638,
	1639, 1640, 1641, 1642, 1643, 0, 581, 799, 0, 0,
	996, 997, 0, 0, 1015, 1016, 1017, 0, 0, 364,
	-2, -2, -2, 1025, 0, 1032, 1035, -2, 0, 0,
	0, 0, 1042, 0, 1047, 1048, 1049, 0, -2, 0,
	1056, 1058, 1228, 1060, 0, 0, 1062, 0, 1066, 0,
	1069, 0, 1071, 0, 1073, -2, -2, -2, 1081, 1082,
	-2, 1087, -2, 0, 1091, -2, 0, 1094, 0, 1097,
	-2, 0, 1107, 1103, 1104, 0, 0, 0, 0, 1124,
	1125, 0, 1134, 0, 1137, 1138, 1139, 0, 0, 1144,
	1145, 0, 1147, 1148, 1149, 1151, 1152, 1153, 0, 2990,
	2915, 2656, 2703, 0, 1162, -2, 1168, 1170, 0, -2,
	0, 1186, 0, 1190, 0, 0, 1199, 0, 0, 0,
	999, 0, 1008, 1009, 1010, 231, 1962, 1657, 0, -2,
	0, 778, 0, 782, 1857, 1783, 1780, 0, 1854, 1855,
	1784, 0, 0, 0, 1791, 0, 1830, 1831, 0, 0,
	0, 1770, 1771, 0, 0, 0, 0, 0, 0, 2370,
	2371, 2372, 2373, 2386, 2374, 2375, 2385, 2383, 2384, 2376,
	2377, 2382, 2396, 2397, 2387, 2388, 2378, 2391, 2389, 2390,
	2392, 2393, 2394, 2395, 0, 0, 2401, 0, 2379, 2380,
	2381, 2409, 0, 0, 2410, 0, 2412, 0, 2402, 2398,
	2399, 2400, 0, 2172, 2174, 2476, 0, 0, 0, 2408,
	2403, 2404, 2110, 2111, 2112, 2113, 2114, 2147, 2151, 2152,
	0, 0, 2227, 2473, 2472, 2229, 0, 0, 2424, 0,
	2242, -2, 0, 2365, 2419, 0, 0, 2251, 2252, 2253,
	0, 0, 2424, 0, 0, 2467, 2263, 2264, 2102, 0,
	0, 2333, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2051, 2050, 0, 2052, 0, 2053, 2054, 2061, 2074, 0,
	0, 0, 0, 2078, 0, 0, 0, 0, 0, 0,
	0, 2448, -2, 0, 0, 0, 0, 2066, 0, 0,
	1817, 0, 0, 1888, 2477, 2481, 2482, 1888, 1888, 0,
	0, 2425, 1955, 1955, 0, 0, 1950, 1950, 1950, 1948,
	1931, 0, 1931, 1941, 0, 1931, 1931, 0, -2, 1912,
	0, 0, 1941, 0, 1925, 696, 698, 700, 702, 703,
	704, 706, 1959, 1960, 0, 0, 0, 0, 2563, 0,
	0, 0, 0, 0, 0, 2548, 0, 0, 2520, 419,
	420, 0, 0, 0, 2972, 2908, 0, -2, -2, -2,
	-2, 2915, 0, 0, 2656, 741, 768, 0, 1827, 0,
	2427, 1985, 1989, 0, 1991, 1992, 1993, 1994, 1995, 0,
	0, 1986, -2, 2062, 2064, 2085, 2580, 2581, 2582, 2045,
	2046, 2047, 2048, 2049, 2057, 2044, 2044, 2044, 2055, 2084,
	2076, 2084, 2080, 2030, 2031, 2032, 2067, 2068, 2069, 2070,
	0, 2972, 2908, 0, -2, 0, 752, 0, 0, 0,
	1765, 302, 303, 523, 0, 530, 531, 532, 0, 619,
	0, 229, 230, 0, 231, 3040, 624, 0, 627, 0,
	231, 3040, 2485, 633, 0, 636, 0, 0, 642, 0,
	0, 0, 0, 0, 231, 1767, 0, 0, 0, 0,
	-2, 836, 844, 845, 846, 0, 1684, 0, 1691, 865,
	866, 867, 1693, 1694, 0, 1696, 839, 868, 869, 870,
	871, 872, 873, 0, 2499, 2500, 2505, 2506, 0, 0,
	837, 858, 840, 0, 852, 962, 957, 958, 972, 973,
	0, 0, 2503, 2504, 0, 0, 978, 979, 137, 1630,
	0, 0, 184, 0, 1630, 1630, 0, 0, 0, 0,
	212, 0, 0, 1333, 0, 0, 0, 0, 155, 169,
	180, 149, 150, 151, 0, 0, 0, 0, 0, 0,
	97, 1445, 0, 1448, 0, 0, 0, 0, 0, 0,
	0, 1461, 1464, 0, 0, 0, 0, 0, 114, 115,
	0, 0, 120, 121, 0, 0, 168, 0, 0, 0,
	0, 0, 0, 1729, 0, 159, 155, 0, 0, 154,
	156, 139, 0, 0, 155, 170, 182, 0, 218, 220,
	1330, 0, 0, 0, 0, 0, 0, 0, 0, 242,
	253, 0, 710, 712, 581, 581, 0, 0, 718, 0,
	721, 0, 815, 819, 820, 0, 0, 816, 818, 0,
	0, 1473, 0, 0, 0, 1824, 0, 0, 0, 0,
	3040, 1628, 0, 1611, 0, 1944, 2750, -2, -2, 312,
	1944, 1217, 0, 0, 2563, 2495, 0, 0, 0, 0,
	0, 0, 411, 0, 0, 0, 301, 0, 0, 0,
	447, 0, 513, 502, 505, 507, 508, 509, 552, 1392,
	3040, 0, 0, 585, 576, 0, 580, 0, 0, 584,
	0, 0, 1444, 3040, 1442, 2530, 0, 1470, 0, 1530,
	1423, 3040, 2528, 0, 0, 0, 1539, 2572, 1548, 1552,
	1717, 0, 589, 0, 1735, 1737, 0, 0, 1965, 0,
	1967, 1907, 1827, 0, 0, 0, 0, 342, 0, 0,
	0, 0, 0, 1258, 321, 0, 1943, 0, 0, 352,
	1944, 312, 2879, 0, 1243, 364, 364, 1944, 801, 1944,
	803, 0, 0, 1018, 0, 0, 1021, 364, 364, 364,
	1030, 1031, 1033, 1034, -2, -2, -2, -2, 1036, 1037,
	1131, 0, 0, 0, 1130, 1626, 0, 1052, 1055, 1059,
	0, 1203, 2891, 2908, 2972, 1226, 1131, 2656, 1131, 2656,
	1131, 2656, 1131, 1131, 1075, 1119, 1127, 1086, 1093, 0,
	1088, 1092, 1095, 1098, 0, 1100, 1108, 0, -2, 0,
	1111, 0, 1113, 0, 1115, 1131, 1132, 1135, 0, 1143,
	1146, 0, 1154, 1155, 1156, 1157, 2543, 1158, 1159, 1160,
	1161, -2, 1165, 1166, 0, 1177, 1182, 1183, 1179, 0,
	0, 0, 0, 0, 0, 1193, 1194, 0, 0, 0,
	1202, 0, 1011, 1465, 0, 1666, 1857, 1783, 781, 1774,
	1856, 1775, 1782, 1785, 0, 0, 1787, 0, 1789, 0,
	1852, 1853, 1860, 1861, 0, 1871, 1872, 1864, 0, -2,
	0, 0, 1867, 1868, 1793, 0, 1810, 1811, 1812, 1841,
	1844, 1567, 0, 3175, 824, 0, 2106, 1980, 2107, 2108,
	2514, 0, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122,
	2123, 2124, -2, -2, -2, -2, -2, -2, -2, -2,
	2133, 2134, 2135, 2136, 2137, 2138, 2139, 2140, 2141, 2142,
	2143, -2, -2, -2, 2148, 2149, 2150, -2, 2411, 2413,
	0, 2476, 0, -2, 0, -2, -2, -2, -2, 2169,
	0, 2171, 2176, 2178, 2180, 0, 0, 0, 0, 2475,
	2190, 2459, 2460, 0, 0, 2367, 2368, 2369, 2175, 0,
	2194, 2474, 2471, 0, 0, 2405, 0, 2370, 2371, 2372,
	2373, 2374, 2375, 2376, 2377, 2378, 2379, 2380, 2381, 2382,
	2383, 2384, 2385, 2386, 2387, 2388, 2389, 2390, 2391, 2392,
	2393, 2394, 2395, 2396, 2397, 2398, 2399, 2400, 2401, 2402,
	0, 2423, 1840, 2255, 0, 0, 0, 0, 2262, 2247,
	2421, 0, 2420, 0, 0, 0, 2431, 0, 2466, 2462,
	0, 2512, 2101, 2088, 2089, 2090, 2091, 2092, 2093, 2103,
	0, 2509, 2549, 2555, 2341, 0, 0, 0, 2292, 2293,
	2294, 2295, 2296, 0, 2298, 2299, 0, 2301, 2302, 0,
	2304, 2305, 0, 2307, 2308, 2309, 2310, 2311, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1998, 1999, 2000, 2001, 2002,
	2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012,
	2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022,
	2023, 2024, 2025, 2026, 2027, 2028, 2029, 0, 0, 2313,
	0, 2434, -2, -2, -2, -2, -2, -2, -2, -2,
	0, 2315, 0, 2317, 2425, 2445, 0, 0, 2195, 0,
	0, 0, 0, 0, 2320, 2425, 2453, 0, 0, 0,
	0, 0, 2425, 0, 2458, 0, 2327, 0, 2329, 1039,
	1040, 1819, 0, 0, 1975, 0, 0, 0, 2480, 2483,
	2484, 3002, 3003, 3004, 3005, 3006, 3007, 3008, 3009, 3010,
	3011, 3012, 3013, 3014, 3015, 3016, 3017, 3018, 3019, 1975,
	1975, 0, 1883, 0, 0, 1951, 1952, 1953, 1954, 0,
	0, 1955, 0, 1945, 1949, 1946, 1947, 1941, 1904, 0,
	0, 2516, 1941, 1910, 1940, 0, 1423, 1930, 1941, 1941,
	0, -2, 1914, 1931, 0, 0, 697, 699, 701, 705,
	707, 0, 0, 1840, -2, 0, -2, 366, 1422, 0,
	0, 0, 0, 0, 0, 731, 733, 0, 0, 639,
	0, 0, 0, 1209, 0, 1211, 1212, 0, 1614, 725,
	0, 728, 0, 1976, 1979, 0, 0, 1990, 1996, 1997,
	0, -2, 0, 0, 2086, 0, 0, 0, 0, 0,
	0, 763, 0, 2953, 0, 761, 0, 0, 534, 649,
	231, 621, 0, 231, 231, 630, 0, 0, 231, 641,
	231, 2537, 231, 2535, 252, 646, 1766, 264, 0, 823,
	0, 1683, 1692, 0, 862, 0, 864, 0, 2507, 2508,
	0, 853, 0, 960, 0, 974, 975, 976, 977, 0,
	0, 0, 0, 1629, 0, 0, 1574, 0, 0, 188,
	3040, 0, 233, 0, 0, 1385, 2522, 0, 1375, 0,
	0, 2679, 0, 0, 0, 0, 0, 205, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 146, 0,
	152, 153, 0, 0, 0, 0, 0, 0, 0, 0,
	1446, 1447, 1449, 1456, 1458, 0, 1452, 1453, 0, 1455,
	1457, 1459, 0, 1462, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 122, 1482, 0, 0, 0,
	1483, 1484, 1485, 1705, 1706, 0, 1728, 1729, 0, 0,
	0, 0, 0, 0, 0, 148, 0, 0, 0, 0,
	2489, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 713, 364, 715, 716, 360, 357, 359, 717,
	722, 0, 723, 0, 0, 0, 0, 1475, 0, 1526,
	1524, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506,
	1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516,
	1517, 1518, 1519, 1520, 1521, 1522, 1523, 0, 0, 0,
	0, -2, 1477, 1478, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 274, 0, 355, 2488, 2498, 0, 1252,
	1253, 400, 403, 406, 409, 270, 0, 0, 0, 440,
	449, 0, 1305, 1277, 0, 0, 562, 364, 581, 583,
	0, 362, 2825, 2541, 1262, 1440, 1443, 0, 1423, 3040,
	1494, 0, 0, 0, 0, 0, 0, 0, 1537, 0,
	0, 3040, 2517, 2571, 2572, 1719, 1729, 0, 1975, 0,
	1752, 1738, 0, 0, 0, 1752, 1756, 1757, 1759, 1760,
	0, 0, 1966, 1972, 657, 709, 1827, 1827, 364, 0,
	0, 1741, 1743, 0, 0, 0, 304, 0, 315, 1944,
	313, 0, 321, 0, 0, 1944, 312, 0, 575, 800,
	805, 1013, 0, 0, 364, 1022, 1023, 1024, 1077, 1121,
	1129, 1181, 1041, 1043, 1044, 1045, 0, 1050, 0, 0,
	0, 1227, 1222, 1223, 1224, 2538, 2534, 1225, 1061, 1131,
	1064, 1131, 1067, 1131, 1070, 1072, 1090, 1096, 1109, 1102,
	1110, 0, 0, 0, 1123, 0, 1141, 0, 1150, 1164,
	0, 0, 0, 0, 0, 0, 0, 1187, 1188, 1189,
	1191, 1196, 1195, 0, 1201, 1012, 1963, 1778, 1779, 1781,
	0, 1790, 0, 0, 1866, -2, -2, 1865, 1869, 1870,
	-2, -2, -2, -2, 1786, 0, 1795, 1792, 0, 1851,
	1565, 1566, 0, 0, 825, 0, 0, -2, -2, 0,
	0, 0, 2191, 0, -2, 2170, 2173, 2177, 2179, 2181,
	0, 0, 0, 0, 0, 0, 2414, 0, 2416, 2192,
	2469, 2472, 2407, 0, 2363, 0, 0, 1839, 1840, 1840,
	0, 2261, 0, 2422, 0, 2429, 2430, 0, 2254, 0,
	2463, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2265, 0, 0, 0, 0, 2297, 2300, 2303, 2306, 0,
	0, 0, 0, 2286, 0, 0, 0, 2290, 2056, 2042,
	0, 2084, 2082, 2083, 2077, 2084, 2081, 2034, 0, 2033,
	0, 2312, 0, 2314, 2316, 0, 0, 2318, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2198, 2199, 2200, 2220, 2319, 2451, 2452, 0,
	0, 0, 0, 0, 0, 2325, 0, 2457, 2326, 2328,
	1827, 0, 1820, 0, 1885, 1874, 1974, 0, 2478, 1944,
	1887, 1889, 2479, 2519, 1874, 1874, 0, 2426, 0, 0,
	1935, 0, 0, 0, 1937, 1908, 0, 0, 1902, 0,
	1893, 1894, 1895, 1896, 1897, 1898, 1899, 1909, 1423, 1939,
	1911, 1915, 2549, 0, 1941, 0, 1926, 0, 1928, 1961,
	0, 1920, 1923, 0, 0, 2564, 1975, 0, 413, 421,
	422, 414, 415, 416, 417, 0, 1614, 0, 0, 0,
	0, 1210, 0, 748, 0, 0, 2428, 0, 1981, 0,
	1987, 0, 0, 0, 0, 750, 0, 0, 0, 0,
	0, 0, 0, 1764, 529, 620, 231, 625, 628, 2486,
	231, 634, 637, 643, 260, 0, 813, -2, 860, 861,
	863, 0, 859, 965, 961, 185, 1630, 0, 0, 0,
	1570, 0, 1288, 0, 1283, 1284, 1572, 2533, 1576, 1582,
	1585, 0, 190, 3040, 202, 0, 3040, 0, 1349, 0,
	0, 0, 0, 0, 0, 1632, 0, 0, 3040, 231,
	3040, 231, 206, 208, 211, 0, 217, 213, 0, 1285,
	0, 1337, 0, 0, 1340, 138, 1630, 0, 0, 141,
	145, 157, 0, 0, 0, 167, 0, 0, 0, 1587,
	1591, 1599, 0, 0, 0, 1450, 1451, 1454, 1460, 1463,
	98, 0, 0, 0, 1595, 1597, 1603, 113, 116, 3040,
	2531, 0, 118, 3040, 0, 0, 0, 1569, 0, 0,
	0, 0, 0, 0, 0, 0, 219, 143, 147, 158,
	0, 1605, 140, 0, 246, 0, 0, 236, 231, 3040,
	0, 238, 0, 239, 240, 254, 0, 0, 0, 714,
	0, 0, 0, 719, 0, 1265, 1266, 1525, 0, 1468,
	1469, 287, 288, 0, 1480, 1474, 0, 0, 0, 0,
	0, 1607, 1608, 0, 0, 0, 1628, 1623, 1944, 266,
	0, 1944, 274, 0, 2494, 0, 291, 300, 437, 0,
	448, 450, 452, 0, 0, 459, 460, 461, 462, 464,
	2583, 465, -2, -2, 0, 0, 0, 1304, 1403, 1306,
	1308, 1309, 1310, 233, 0, 2572, 1375, 2738, 2572, 0,
	0, 1272, 0, 0, 0, 568, 564, 0, 573, 577,
	578, 0, 0, 0, -2, 0, 0, 0, 0, -2,
	0, 0, 0, 1541, 1535, 1536, 0, 0, 0, 0,
	3040, 1721, 1729, 0, 1825, 1840, 588, 1730, 1752, 0,
	0, 0, 1740, 1736, 1733, 1975, 0, 0, 0, 0,
	0, 1968, 1971, 660, 661, 341, 0, 364, 0, 0,
	0, 0, 0, 0, 319, 0, 322, 0, 0, 0,
	327, 328, 329, 330, 331, 332, 0, 0, 0, 0,
	321, 353, 306, 1944, 0, 321, 0, 0, 802, 0,
	0, 0, 1020, 0, 0, 1626, 1054, 0, 1063, 1065,
	1068, 1112, 1114, 1131, 0, 1142, 1171, 2518, 1172, 1327,
	0, 1327, 0, 0, 1192, 1198, 1788, 0, 1863, 1794,
	1845, 1846, 0, 1567, 0, 2109, 2154, 0, 0, -2,
	0, 0, 2158, 0, 0, 0, -2, 0, 0, 0,
	2415, 2417, 0, 2471, 2406, 2256, 0, 0, 0, 2260,
	2244, 2245, 0, 2366, 2432, 2461, 2465, 0, 2094, 2095,
	2096, 2097, 2098, 2099, 2100, 0, 2513, 2550, 2554, 2339,
	2340, 2344, 2527, 0, 0, 0, 2269, 0, 0, 0,
	0, 0, 0, 0, 0, 2075, 2079, 0, 0, 2433,
	2444, 2446, 2196, 2197, 2201, 2202, 2203, 2204, 2205, 2206,
	2207, 2208, 2209, 2210, -2, -2, -2, 2214, 2215, 2216,
	-2, -2, -2, 2221, 0, 0, 0, 2447, 2449, 2450,
	2454, 2455, 0, 2322, 2323, 2324, 2456, 0, 1827, 1821,
	1882, 0, 1973, 1886, 0, 1882, 1882, 1834, 1933, 0,
	0, 1957, 0, 1905, 0, 1906, 0, 0, 1938, 0,
	1913, 1916, 1917, 1927, 0, 1919, 0, 1922, 0, 2256,
	-2, 365, 367, 369, 0, 372, 373, 0, 0, 0,
	0, 378, 0, 0, 0, 0, 0, 740, 1614, 1614,
	0, 0, 742, 0, 726, 0, 0, 1983, 0, 0,
	2059, 2063, 2087, 754, 756, 0, 0, 0, 2972, 2908,
	0, 0, 753, 622, 631, 262, 0, 1942, 0, 0,
	0, 0, 0, 214, 0, 0, 0, 0, 0, 0,
	232, 0, 1384, 0, 1347, 0, 0, 1374, 0, 0,
	1390, 192, 193, 194, 0, 0, 0, 0, 204, 0,
	0, 200, 0, 210, 216, 215, 0, 1334, 0, 0,
	0, 0, 1575, 0, 0, 0, 164, 165, 166, 0,
	171, 0, 172, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 124, 0, 0, 1711, 1712, 0, 1702,
	161, 0, 0, 0, 0, 0, 0, 234, 0, 0,
	0, 1564, 256, 0, 0, 0, 0, 0, 361, 356,
	358, 0, 1467, 1528, 1529, 1476, 1588, 1592, 1600, 0,
	0, 0, 0, 0, 771, 1627, 0, 274, 272, 0,
	275, 0, 278, 280, 0, 0, 274, 268, 0, 0,
	0, 0, 0, 0, 0, 0, 458, 0, 457, 463,
	510, 1275, 1391, 0, 0, 1393, 1311, 1315, 0, 2572,
	2572, 0, 2524, 0, 1273, 0, 0, 1392, 560, 0,
	567, 0, 582, 2523, 0, 0, 0, 1444, 0, 0,
	1471, 1423, 1497, 1423, 0, 1540, 1542, 0, 1550, 0,
	0, 0, 1723, 1729, 0, 1716, 1717, 1859, 1731, 1750,
	-2, 0, 0, 1840, 1758, 1755, 1761, 1762, 0, 0,
	344, 0, 1742, 1744, 0, 1246, 1249, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 305, 321, 318, 308,
	1944, 348, 0, 1014, 364, 1046, 1625, 1051, 2539, 1122,
	1140, 1173, 1326, 0, 0, 1175, 0, 0, 1862, 1849,
	1850, 1847, 1567, 2156, 2160, 0, 0, 0, 2162, -2,
	0, 2184, -2, -2, 2418, 2470, 2235, 1840, 2257, 2259,
	2246, 2464, 2104, 0, 2346, 2343, 0, 2330, 0, 2281,
	2282, 0, 0, 2285, 2287, 2288, 2289, 2043, 2036, 2035,
	2443, 0, 0, 0, 0, 2321, 1822, 0, 2335, 0,
	0, 1890, 2335, 2335, 1934, 0, 1936, 1903, 1891, 0,
	1900, 0, 2550, 1929, 1921, 0, 0, 370, 0, 374,
	375, 376, 377, 379, 0, 0, 0, 0, 0, 418,
	743, 744, 0, 0, 0, 1613, 1977, 1982, 0, 1988,
	2058, 0, 0, 0, 0, 0, 0, 762, 263, 0,
	963, 964, 186, 187, 1289, 1287, 1579, 1583, 1580, 0,
	189, 0, 0, 1348, 0, 1351, 0, 0, 0, 0,
	1358, 1375, 0, 0, 0, 0, 0, 0, 1377, 0,
	1376, 0, 0, 1407, 0, 1555, 1562, 0, -2, 0,
	0, 0, 196, 222, 0, 0, 0, 0, 225, 1631,
	198, 0, 0, 231, 231, 1286, 0, 0, 1571, 1573,
	1586, 0, 0, 0, 0, 174, 0, 0, 1589, 1593,
	1601, 1596, 1598, 1604, 0, 0, 119, 0, 0, 1713,
	0, 160, 0, 0, 0, 1606, 244, 245, 0, 231,
	0, 231, 237, 231, 1564, 0, 0, 0, 0, 0,
	0, 0, 0, 1609, 1610, 265, 0, 0, 0, 0,
	0, 0, 0, 267, 354, 274, 439, 446, 451, 453,
	454, 455, 456, 1336, 0, 1403, 1395, 1396, 1397, 0,
	1307, 1402, 1404, 0, 0, 1312, 0, 0, 0, 0,
	1292, 1274, 0, 1305, 1277, 0, 565, 0, 363, 1263,
	1441, 1489, 1423, 0, 1492, 0, 0, 1532, 0, 0,
	0, 0, 0, 0, 0, 1725, 1729, 0, 1718, 1719,
	1752, 1858, 0, 0, 0, 1739, 1859, 0, 364, 0,
	364, 323, 0, 324, 325, 326, 333, 334, 335, 336,
	307, 310, 0, 321, 804, 806, 0, 0, 812, 1019,
	1325, 0, 0, 0, 0, 1848, 2164, -2, -2, 2185,
	0, 2551, 2553, 1840, 0, 2332, 1842, 0, 0, -2,
	0, 0, 0, 1823, 1806, 0, 1881, 1873, 1875, 1877,
	2894, 2651, 3039, 1807, 1808, 1956, 0, 0, 1924, 371,
	380, 381, 0, 383, 384, 745, 0, 0, 0, 1984,
	0, 0, 751, 0, 0, 0, 953, 0, 0, 1581,
	191, 0, 0, 1352, 1353, 1355, 0, 1357, 1359, 1360,
	1277, 0, 1364, 0, 2574, 0, 1369, 1372, 1373, 0,
	0, 1386, 1408, 0, 1417, 0, 1557, 1567, 1561, 0,
	1559, 1419, 0, 195, 224, 197, 226, 221, 0, 1564,
	0, 199, 209, 0, 0, 142, 0, 0, 2644, 177,
	175, 173, 117, 123, 125, 1568, 163, 0, 144, 0,
	246, 255, 1563, 257, 241, 231, 0, 0, 1590, 1594,
	1602, 0, 1617, 1618, 1619, 1620, 0, 0, 0, 0,
	276, 0, 277, 279, 281, 282, 283, 284, 0, 0,
	445, 1277, 1335, 1276, 1394, 0, 1405, 1277, 0, 0,
	0, 0, 0, 0, 1279, 0, 1278, 0, 0, 566,
	569, 0, 572, 1975, 579, 0, 0, 0, 1496, 0,
	1543, 1541, 0, 1549, 0, 0, 0, 1701, 0, 0,
	1720, 1721, 586, 1745, 0, 0, 1752, 1763, 343, 0,
	346, 320, 0, 309, 0, 808, 0, 810, 0, 1174,
	1176, 0, 0, 2258, 2350, 0, 0, 2283, 2284, -2,
	0, 2224, 2334, 2336, 0, 0, 0, 0, 0, 1892,
	1901, 382, 1614, 1614, 1978, 758, 759, 755, 757, 0,
	1577, 0, 1584, 233, 1350, 1354, 0, 1361, 0, 0,
	0, 1365, 1427, 0, 0, 1444, 1444, 1378, 0, 0,
	1411, 1412, 1332, 0, 1413, 1414, 1415, 1556, 1851, 1562,
	1277, 0, 0, 223, 228, 0, 0, 0, 0, 0,
	0, 162, 0, 235, 258, 1564, 0, 0, 1621, 1622,
	0, 0, 273, 296, 0, 468, 466, 1279, 0, 1406,
	1313, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324,
	1314, 1419, 0, 0, 1383, 1290, 0, 1293, 0, 1275,
	0, 570, 571, 574, 0, 1490, 0, 1497, 0, 0,
	1550, 0, 0, 1708, 1700, 1729, 1722, 1723, 1975, 0,
	1753, 0, 316, 317, 807, 0, 0, 1184, 1185, 0,
	0, 0, 0, 2345, 1843, 2225, 0, 0, 1876, 1878,
	1879, 1880, 746, 747, 0, 1578, 203, 0, 1421, 1363,
	1432, 0, 0, 0, 0, 0, 1379, 1409, 1410, 1407,
	1331, 0, 1560, 1558, 1388, 1421, 1423, 201, 0, 1419,
	0, 1341, 0, 0, 1344, 0, 0, 178, 2644, 176,
	0, 231, 724, 1614, 231, 0, 299, 0, 289, 501,
	467, 469, 0, 0, 473, 474, 475, 0, 0, 478,
	479, 480, 481, 0, 0, 486, 0, 0, 0, 0,
	491, 492, 1271, 0, 1399, 1401, 1417, 1419, 1332, 0,
	1294, 1336, 1292, 1491, 1495, 1493, 1533, 1419, 0, 1417,
	0, 1715, 1729, 1709, 1710, 0, 1725, 0, 0, 364,
	809, 811, 2342, 2362, 2351, -2, 2975, 2652, 0, 2362,
	2362, 2337, 2338, 0, 0, 1277, 0, 1366, 1428, 1429,
	0, 1424, 1425, 1426, 2573, 1367, 1368, 1370, 1371, 1975,
	0, 1418, 1427, 227, 1277, 1338, 0, 0, 1339, 0,
	0, 181, 0, 183, 259, 1612, 1615, 0, 285, 0,
	0, 442, 499, 0, 0, 470, 471, 493, 472, 0,
	0, 0, 484, 485, 487, 488, 489, 490, 1268, 1270,
	1277, 0, 1332, 1417, 1277, 0, 0, 0, 1277, 1279,
	1417, 0, 1332, 0, 1704, 1714, 0, 1724, 1701, 0,
	1748, 0, 345, 2347, 0, 0, 2353, 2354, 2355, 2356,
	2357, 2348, 2349, 760, 1356, 1362, 0, 1430, 0, 1431,
	0, 0, 0, 1387, 1416, 1432, 207, 1342, 0, 1345,
	0, 179, 0, 0, 294, 295, 498, 494, 0, 0,
	482, 483, 1398, 1400, 1277, 1332, 1975, 1280, 0, 1282,
	1279, 1291, 1332, 0, 1277, 0, 1727, 1703, 1707, 2532,
	1708, 1746, 0, 0, 0, 2359, 2360, 0, 0, 0,
	1433, 0, 1436, 1437, 0, 1434, 1407, 0, 0, 231,
	0, 1827, 476, 0, 1975, 1277, 1382, 1281, 1271, 1277,
	1419, 1975, 1417, 1697, 1729, 1715, 0, 1975, 2358, 2361,
	2352, 1420, 1435, 1438, 1439, 1389, 0, 0, 1616, 297,
	0, 0, 500, 495, 496, 477, 1380, 1975, 1269, 1975,
	1417, 1546, 1332, 0, 1704, 1975, 1749, 1329, 0, 0,
	497, 1381, 1544, 1332, 1277, 1726, 1698, 1747, 1343, 1328,
	0, 298, 1277, 1975, 0, 1975, 1547, 0, 1545, 1329,
	1346,
}

var sqlTok1 = [...]int16{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 640, 3, 646, 641, 3,
	652, 653, 644, 642, 657, 643, 654, 645, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 661, 658,
	632, 634, 633, 637, 656, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 650, 3, 651, 647, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 659, 639, 660, 635,
}

var sqlTok2 = [...]int16{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}

var sqlTok3 = [...]uint16{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 475, 57818, 476, 57819, 477,
	57820, 478, 57821, 479, 57822, 480, 57823, 481, 57824, 482,
	57825, 483, 57826, 484, 57827, 485, 57828, 486, 57829, 487,
	57830, 488, 57831, 489, 57832, 490, 57833, 491, 57834, 492,
	57835, 493, 57836, 494, 57837, 495, 57838, 496, 57839, 497,
	57840, 498, 57841, 499, 57842, 500, 57843, 501, 57844, 502,
	57845, 503, 57846, 504, 57847, 505, 57848, 506, 57849, 507,
	57850, 508, 57851, 509, 57852, 510, 57853, 511, 57854, 512,
	57855, 513, 57856, 514, 57857, 515, 57858, 516, 57859, 517,
	57860, 518, 57861, 519, 57862, 520, 57863, 521, 57864, 522,
	57865, 523, 57866, 524, 57867, 525, 57868, 526, 57869, 527,
	57870, 528, 57871, 529, 57872, 530, 57873, 531, 57874, 532,
	57875, 533, 57876, 534, 57877, 535, 57878, 536, 57879, 537,
	57880, 538, 57881, 539, 57882, 540, 57883, 541, 57884, 542,
	57885, 543, 57886, 544, 57887, 545, 57888, 546, 57889, 547,
	57890, 548, 57891, 549, 57892, 550, 57893, 551, 57894, 552,
	57895, 553, 57896, 554, 57897, 555, 57898, 556, 57899, 557,
	57900, 558, 57901, 559, 57902, 560, 57903, 561, 57904, 562,
	57905, 563, 57906, 564, 57907, 565, 57908, 566, 57909, 567,
	57910, 568, 57911, 569, 57912, 570, 57913, 571, 57914, 572,
	57915, 573, 57916, 574, 57917, 575, 57918, 576, 57919, 577,
	57920, 578, 57921, 579, 57922, 580, 57923, 581, 57924, 582,
	57925, 583, 57926, 584, 57927, 585, 57928, 586, 57929, 587,
	57930, 588, 57931, 589, 57932, 590, 57933, 591, 57934, 592,
	57935, 593, 57936, 594, 57937, 595, 57938, 596, 57939, 597,
	57940, 598, 57941, 599, 57942, 600, 57943, 601, 57944, 602,
	57945, 603, 57946, 604, 57947, 605, 57948, 606, 57949, 607,
	57950, 608, 57951, 609, 57952, 610, 57953, 611, 57954, 612,
	57955, 613, 57956, 614, 57957, 615, 57958, 616, 57959, 617,
	57960, 618, 57961, 619, 57962, 620, 57963, 621, 57964, 622,
	57965, 623, 57966, 624, 57967, 625, 57968, 626, 57969, 627,
	57970, 628, 57971, 629, 57972, 630, 57973, 631, 57974, 636,
	57975, 638, 57976, 648, 57977, 649, 57978, 655, 0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := int(sqlPact[state])
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && int(sqlChk[int(sqlAct[n])]) == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || int(sqlExca[i+1]) != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := int(sqlExca[i])
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = int(sqlTok1[0])
		goto out
	}
	if char < len(sqlTok1) {
		token = int(sqlTok1[char])
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = int(sqlTok2[char-sqlPrivate])
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = int(sqlTok3[i+0])
		if token == char {
			token = int(sqlTok3[i+1])
			goto out
		}
	}

out:
	if token == 0 {
		token = int(sqlTok2[1]) /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = int(sqlPact[sqlstate])
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = int(sqlAct[sqln])
	if int(sqlChk[sqln]) == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = int(sqlDef[sqlstate])
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && int(sqlExca[xi+1]) == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = int(sqlExca[xi+0])
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = int(sqlExca[xi+1])
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = int(sqlPact[sqlS[sqlp].yys]) + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = int(sqlAct[sqln]) /* simulate a shift of "error" */
					if int(sqlChk[sqlstate]) == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= int(sqlR2[sqln])
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = int(sqlR1[sqln])
	sqlg := int(sqlPgo[sqln])
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = int(sqlAct[sqlg])
	} else {
		sqlstate = int(sqlAct[sqlj])
		if int(sqlChk[sqlstate]) != -sqln {
			sqlstate = int(sqlAct[sqlg])
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1620
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1625
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1629
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 8:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1635
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 12:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1638
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 14:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1639
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 16:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1640
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 18:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1641
		{
			return helpWith(sqllex, "GRANT")
		}
	case 20:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1642
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 22:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1643
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 24:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1644
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 26:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1645
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 28:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1646
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 30:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1647
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 32:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1648
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 36:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1651
		{
			return helpWith(sqllex, "CLOSE")
		}
	case 38:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1652
		{
			return helpWith(sqllex, "DECLARE")
		}
	case 40:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1653
		{
			return helpWith(sqllex, "FETCH")
		}
	case 42:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1654
		{
			return helpWith(sqllex, "MOVE")
		}
	case 46:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1662
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 48:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1663
		{
			return helpWith(sqllex, "ALTER TENANT")
		}
	case 50:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1665
		{
			return helpWith(sqllex, "ALTER")
		}
	case 52:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1668
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 54:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1669
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 56:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1670
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 58:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1671
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 60:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1672
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 62:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1673
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 64:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1674
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 66:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1675
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 68:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1676
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 70:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1677
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 72:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1678
		{
			return helpWith(sqllex, "ALTER CHANGEFEED")
		}
	case 74:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1679
		{
			return helpWith(sqllex, "ALTER BACKUP")
		}
	case 85:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1740
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 87:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1766
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 91:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1780
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 96:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1800
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 97:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1804
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 98:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1808
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 112:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1844
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 113:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1848
		{
			sqlVAL.union.val = &tree.AlterDatabaseOwner{Name: tree.Name(sqlDollar[3].str), Owner: sqlDollar[6].union.roleSpec()}
		}
	case 114:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1855
		{

			sqlVAL.union.val = &tree.AlterRoleSet{
				AllRoles:     true,
				DatabaseName: tree.Name(sqlDollar[3].str),
				IsRole:       true,
				SetOrReset:   sqlDollar[4].union.setVar(),
			}
		}
	case 115:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1867
		{

			sqlVAL.union.val = &tree.AlterDatabasePlacement{
				Name:      tree.Name(sqlDollar[3].str),
				Placement: sqlDollar[4].union.dataPlacement(),
			}
		}
	case 116:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1877
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 117:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1884
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:        tree.Name(sqlDollar[3].str),
				Region:      tree.Name(sqlDollar[9].str),
				IfNotExists: true,
			}
		}
	case 118:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1894
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 119:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1901
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:     tree.Name(sqlDollar[3].str),
				Region:   tree.Name(sqlDollar[8].str),
				IfExists: true,
			}
		}
	case 120:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1911
		{
			sqlVAL.union.val = &tree.AlterDatabaseSurvivalGoal{
				Name:         tree.Name(sqlDollar[3].str),
				SurvivalGoal: sqlDollar[4].union.survivalGoal(),
			}
		}
	case 121:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1920
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[4].str),
			}
		}
	case 122:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1927
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[5].str),
			}
		}
	case 123:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1936
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddSuperRegion{
				DatabaseName:    tree.Name(sqlDollar[3].str),
				SuperRegionName: tree.Name(sqlDollar[7].str),
				Regions:         sqlDollar[9].union.nameList(),
			}
		}
	case 124:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1946
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropSuperRegion{
				DatabaseName:    tree.Name(sqlDollar[3].str),
				SuperRegionName: tree.Name(sqlDollar[7].str),
			}
		}
	case 125:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1955
		{
			sqlVAL.union.val = &tree.AlterDatabaseAlterSuperRegion{
				DatabaseName:    tree.Name(sqlDollar[3].str),
				SuperRegionName: tree.Name(sqlDollar[7].str),
				Regions:         sqlDollar[9].union.nameList(),
			}
		}
	case 128:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1985
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 136:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2017
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 137:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2021
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 138:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2025
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 139:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2031
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 140:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2035
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 141:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2041
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 142:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2050
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 143:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2061
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 144:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2065
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 145:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2071
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 146:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2079
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 147:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2089
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 148:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2093
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 153:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2105
		{
			sqlVAL.union.val = tree.RelocateLease
		}
	case 154:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2111
		{
			sqlVAL.union.val = tree.RelocateVoters
		}
	case 155:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2115
		{

			sqlVAL.union.val = tree.RelocateVoters
		}
	case 156:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2120
		{
			sqlVAL.union.val = tree.RelocateNonVoters
		}
	case 157:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2126
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:    tree.TableIndexName{Table: name},
				Rows:            sqlDollar[6].union.slct(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 158:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2138
		{

			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:    sqlDollar[3].union.tableIndexName(),
				Rows:            sqlDollar[6].union.slct(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 159:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2159
		{
			var zoneName string
			switch e := sqlDollar[3].union.expr().(type) {
			case *tree.UnresolvedName:
				if e.NumParts != 1 {
					return setErr(sqllex, errors.New("only simple names are supported in ALTER RANGE ... CONFIGURE ZONE"))
				}
				zoneName = e.Parts[0]
			case tree.DefaultVal:
				zoneName = "default"
			default:
				return setErr(sqllex, errors.New("only simple names are supported in ALTER RANGE ... CONFIGURE ZONE"))
			}
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(zoneName)}
			sqlVAL.union.val = s
		}
	case 160:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2179
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows:            sqlDollar[8].union.slct(),
				FromStoreID:     tree.DNull,
				ToStoreID:       sqlDollar[6].union.expr(),
				SubjectReplicas: tree.RelocateLease,
			}
		}
	case 161:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2188
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				FromStoreID:     tree.DNull,
				ToStoreID:       sqlDollar[7].union.expr(),
				SubjectReplicas: tree.RelocateLease,
			}
		}
	case 162:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2199
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows:            sqlDollar[10].union.slct(),
				FromStoreID:     sqlDollar[6].union.expr(),
				ToStoreID:       sqlDollar[8].union.expr(),
				SubjectReplicas: sqlDollar[4].union.relocateSubject(),
			}
		}
	case 163:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2208
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				FromStoreID:     sqlDollar[7].union.expr(),
				ToStoreID:       sqlDollar[9].union.expr(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 164:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2221
		{

			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: sqlDollar[4].union.expr()}
		}
	case 165:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2226
		{
			sqlVAL.union.val = &tree.SetZoneConfig{Options: sqlDollar[4].union.kvOptions()}
		}
	case 166:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2230
		{

			sqlVAL.union.val = &tree.SetZoneConfig{SetDefault: true}
		}
	case 167:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2235
		{
			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: tree.DNull}
		}
	case 168:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2241
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 169:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2249
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 170:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2260
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 171:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2270
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 172:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2280
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 173:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2289
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 174:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2300
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 175:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2306
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 176:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2314
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 177:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2318
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 178:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2322
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 179:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2326
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 180:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2332
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 181:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2337
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 182:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2348
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 183:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2352
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 184:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2358
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 185:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2362
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 186:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2369
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 187:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2374
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 188:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2379
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 189:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2384
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 190:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2389
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 191:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2394
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 192:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2399
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 193:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2404
		{
			sqlVAL.union.val = &tree.AlterTableSetOnUpdate{Column: tree.Name(sqlDollar[3].str), Expr: sqlDollar[4].union.expr()}
		}
	case 194:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2409
		{
			sqlVAL.union.val = &tree.AlterTableSetVisible{Column: tree.Name(sqlDollar[3].str), Visible: sqlDollar[4].union.bool()}
		}
	case 195:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2414
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 196:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2419
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 197:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2424
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 198:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2428
		{
			return unimplemented(sqllex, "alter table alter column add")
		}
	case 199:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2433
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 200:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2442
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 201:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2454
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 202:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2464
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 203:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2472
		{
			def := sqlDollar[7].union.constraintDef()
			def.SetName(tree.Name(sqlDollar[6].str))
			def.SetIfNotExists()
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      def,
				ValidationBehavior: sqlDollar[8].union.validationBehavior(),
			}
		}
	case 204:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2482
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 205:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2485
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table inherits")
		}
	case 206:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2491
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table no inherits")
		}
	case 207:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2498
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:       sqlDollar[7].union.idxElems(),
				Sharded:       sqlDollar[9].union.shardedIndexDef(),
				StorageParams: sqlDollar[10].union.storageParams(),
			}
		}
	case 208:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2506
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 209:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2513
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 210:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2522
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 211:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2531
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 212:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2536
		{
			sqlVAL.union.val = &tree.AlterTablePartitionByTable{
				PartitionByTable: sqlDollar[1].union.partitionByTable(),
			}
		}
	case 213:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2543
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 214:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2550
		{
			sqlVAL.union.val = &tree.AlterTableSetStorageParams{
				StorageParams: sqlDollar[3].union.storageParams(),
			}
		}
	case 215:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2556
		{
			sqlVAL.union.val = &tree.AlterTableResetStorageParams{
				Params: sqlDollar[3].union.storageParamKeys(),
			}
		}
	case 216:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2563
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 217:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2564
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 218:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2568
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 219:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2572
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 220:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2578
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionByIndex: sqlDollar[1].union.partitionByIndex(),
			}
		}
	case 221:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2586
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 222:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2590
		{
			sqlVAL.union.val = nil
		}
	case 223:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2596
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 224:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2600
		{
			sqlVAL.union.val = nil
		}
	case 225:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2606
		{
			sqlVAL.union.val = true
		}
	case 226:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2610
		{
			sqlVAL.union.val = false
		}
	case 227:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2616
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 228:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2620
		{
			sqlVAL.union.val = nil
		}
	case 229:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2627
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 230:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2631
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 231:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2635
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 232:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2641
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 233:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2645
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 234:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2670
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[6].str),
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 235:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2681
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[9].str),
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 236:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2692
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeDropValue{
					Val: tree.EnumValue(sqlDollar[6].str),
				},
			}
		}
	case 237:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2701
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: tree.EnumValue(sqlDollar[6].str),
					NewVal: tree.EnumValue(sqlDollar[8].str),
				},
			}
		}
	case 238:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2711
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 239:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2720
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 240:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2729
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeOwner{
					Owner: sqlDollar[6].union.roleSpec(),
				},
			}
		}
	case 241:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2738
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 242:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2742
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 243:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2745
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 244:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2749
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 245:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2756
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 246:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2763
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 247:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2769
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.RoleName,
				Name:         sqlDollar[1].str,
			}
		}
	case 248:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2776
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.RoleName,
				Name:         sqlDollar[1].str,
			}
		}
	case 249:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2783
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.CurrentUser,
			}
		}
	case 250:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2789
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.SessionUser,
			}
		}
	case 251:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2797
		{
			sqlVAL.union.val = tree.RoleSpecList{sqlDollar[1].union.roleSpec()}
		}
	case 252:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2801
		{
			sqlVAL.union.val = append(sqlDollar[1].union.roleSpecList(), sqlDollar[3].union.roleSpec())
		}
	case 260:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2822
		{
			sqlVAL.union.val = &tree.RefreshMaterializedView{
				Name:              sqlDollar[5].union.unresolvedObjectName(),
				Concurrently:      sqlDollar[4].union.bool(),
				RefreshDataOption: sqlDollar[6].union.refreshDataOption(),
			}
		}
	case 261:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2829
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 262:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2833
		{
			sqlVAL.union.val = tree.RefreshDataWithData
		}
	case 263:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2837
		{
			sqlVAL.union.val = tree.RefreshDataClear
		}
	case 264:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2841
		{
			sqlVAL.union.val = tree.RefreshDataDefault
		}
	case 265:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2884
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.backupTargetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: false,
				Subdir:         sqlDollar[4].union.expr(),
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 266:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2896
		{
			sqlVAL.union.val = &tree.Backup{
				Targets: sqlDollar[2].union.backupTargetListPtr(),
				To:      sqlDollar[4].union.stringOrPlaceholderOptList(),
				Nested:  true,
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *sqlDollar[6].union.backupOptions(),
			}
		}
	case 267:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2906
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.backupTargetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: true,
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 268:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2917
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:         sqlDollar[2].union.backupTargetListPtr(),
				To:              sqlDollar[4].union.stringOrPlaceholderOptList(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}
		}
	case 269:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2926
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 270:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2930
		{
			sqlVAL.union.val = (*tree.BackupTargetList)(nil)
		}
	case 271:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2934
		{
			t := sqlDollar[1].union.backupTargetList()
			sqlVAL.union.val = &t
		}
	case 272:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2942
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 273:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2946
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 274:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2950
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 275:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2957
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 276:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2961
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 277:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2970
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 278:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2974
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: tree.MakeDBool(true)}
		}
	case 279:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2978
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: sqlDollar[3].union.expr()}
		}
	case 280:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2982
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: tree.MakeDBool(true)}
		}
	case 281:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2986
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: tree.MakeDBool(true)}
		}
	case 282:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2990
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: tree.MakeDBool(false)}
		}
	case 283:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2994
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 284:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2998
		{
			sqlVAL.union.val = &tree.BackupOptions{IncrementalStorage: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 285:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3080
		{
			sqlVAL.union.val = &tree.ScheduledBackup{
				ScheduleLabelSpec: *(sqlDollar[3].union.scheduleLabelSpec()),
				Recurrence:        sqlDollar[10].union.expr(),
				FullBackup:        sqlDollar[11].union.fullBackupClause(),
				To:                sqlDollar[8].union.stringOrPlaceholderOptList(),
				Targets:           sqlDollar[6].union.backupTargetListPtr(),
				BackupOptions:     *(sqlDollar[9].union.backupOptions()),
				ScheduleOptions:   sqlDollar[12].union.kvOptions(),
			}
		}
	case 286:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3091
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 287:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3096
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 288:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3100
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 289:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3110
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 290:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3116
		{
			sqlVAL.union.val = &tree.LabelSpec{Label: sqlDollar[1].union.expr(), IfNotExists: false}
		}
	case 291:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3120
		{
			sqlVAL.union.val = &tree.LabelSpec{Label: sqlDollar[4].union.expr(), IfNotExists: true}
		}
	case 292:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3126
		{
			sqlVAL.union.val = sqlDollar[1].union.labelSpec()
		}
	case 293:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3130
		{
			sqlVAL.union.val = &tree.LabelSpec{IfNotExists: false}
		}
	case 294:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3139
		{
			sqlVAL.union.val = &tree.FullBackupClause{Recurrence: sqlDollar[3].union.expr()}
		}
	case 295:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3143
		{
			sqlVAL.union.val = &tree.FullBackupClause{AlwaysFull: true}
		}
	case 296:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3147
		{
			sqlVAL.union.val = (*tree.FullBackupClause)(nil)
		}
	case 297:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3153
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 298:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3157
		{
			sqlVAL.union.val = sqlDollar[5].union.kvOptions()
		}
	case 299:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3161
		{
			sqlVAL.union.val = nil
		}
	case 300:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3178
		{
			sqlVAL.union.val = &tree.CreateExternalConnection{
				ConnectionLabelSpec: *(sqlDollar[4].union.labelSpec()),
				As:                  sqlDollar[6].union.expr(),
			}
		}
	case 301:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3184
		{
			return helpWith(sqllex, "CREATE EXTERNAL CONNECTION")
		}
	case 302:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3195
		{
			sqlVAL.union.val = &tree.DropExternalConnection{
				ConnectionLabel: sqlDollar[4].union.expr(),
			}
		}
	case 303:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3200
		{
			return helpWith(sqllex, "DROP EXTERNAL CONNECTION")
		}
	case 304:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3235
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				From:               sqlDollar[3].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[4].union.asOfClause(),
				Options:            *(sqlDollar[5].union.restoreOptions()),
			}
		}
	case 305:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3244
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				Subdir:             sqlDollar[3].union.expr(),
				From:               sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[6].union.asOfClause(),
				Options:            *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 306:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3254
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.backupTargetList(),
				From:    sqlDollar[4].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *(sqlDollar[6].union.restoreOptions()),
			}
		}
	case 307:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3263
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.backupTargetList(),
				Subdir:  sqlDollar[4].union.expr(),
				From:    sqlDollar[6].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[7].union.asOfClause(),
				Options: *(sqlDollar[8].union.restoreOptions()),
			}
		}
	case 308:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3273
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.SystemUsers,
				From:               sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[6].union.asOfClause(),
				Options:            *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 309:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3282
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.SystemUsers,
				Subdir:             sqlDollar[5].union.expr(),
				From:               sqlDollar[7].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[8].union.asOfClause(),
				Options:            *(sqlDollar[9].union.restoreOptions()),
			}
		}
	case 310:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3292
		{
			sqlVAL.union.val = &tree.StreamIngestion{
				Targets:  sqlDollar[2].union.backupTargetList(),
				From:     sqlDollar[7].union.stringOrPlaceholderOptList(),
				AsTenant: sqlDollar[8].union.asTenantClause(),
			}
		}
	case 311:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3299
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 312:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3303
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList{sqlDollar[1].union.expr()}
		}
	case 313:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3307
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList(sqlDollar[2].union.exprs())
		}
	case 314:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3313
		{
			sqlVAL.union.val = []tree.StringOrPlaceholderOptList{sqlDollar[1].union.stringOrPlaceholderOptList()}
		}
	case 315:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3317
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listOfStringOrPlaceholderOptList(), sqlDollar[3].union.stringOrPlaceholderOptList())
		}
	case 316:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3324
		{
			tenID := uint64(sqlDollar[3].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TenantID{Specified: true, ID: tenID}
		}
	case 317:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3332
		{
			if sqlDollar[3].str != "_" {
				return setErr(sqllex, errors.New("invalid syntax"))
			}
			sqlVAL.union.val = tree.TenantID{Specified: true}
		}
	case 318:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3339
		{
			sqlVAL.union.val = tree.TenantID{Specified: false}
		}
	case 319:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3346
		{
			sqlVAL.union.val = sqlDollar[2].union.restoreOptions()
		}
	case 320:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3350
		{
			sqlVAL.union.val = sqlDollar[4].union.restoreOptions()
		}
	case 321:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3354
		{
			sqlVAL.union.val = &tree.RestoreOptions{}
		}
	case 322:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3361
		{
			sqlVAL.union.val = sqlDollar[1].union.restoreOptions()
		}
	case 323:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3365
		{
			if err := sqlDollar[1].union.restoreOptions().CombineWith(sqlDollar[3].union.restoreOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 324:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3374
		{
			sqlVAL.union.val = &tree.RestoreOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 325:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3378
		{
			sqlVAL.union.val = &tree.RestoreOptions{DecryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 326:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3382
		{
			sqlVAL.union.val = &tree.RestoreOptions{IntoDB: sqlDollar[3].union.expr()}
		}
	case 327:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3386
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingFKs: true}
		}
	case 328:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3390
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequences: true}
		}
	case 329:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3394
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequenceOwners: true}
		}
	case 330:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3398
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingViews: true}
		}
	case 331:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3402
		{
			sqlVAL.union.val = &tree.RestoreOptions{Detached: true}
		}
	case 332:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3406
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipLocalitiesCheck: true}
		}
	case 333:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3410
		{
			sqlVAL.union.val = &tree.RestoreOptions{DebugPauseOn: sqlDollar[3].union.expr()}
		}
	case 334:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3414
		{
			sqlVAL.union.val = &tree.RestoreOptions{NewDBName: sqlDollar[3].union.expr()}
		}
	case 335:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3418
		{
			sqlVAL.union.val = &tree.RestoreOptions{IncrementalStorage: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 336:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3422
		{
			sqlVAL.union.val = &tree.RestoreOptions{AsTenant: sqlDollar[3].union.expr()}
		}
	case 337:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3428
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 338:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3434
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "alter function")
		}
	case 339:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3438
		{
			return unimplemented(sqllex, "alter domain")
		}
	case 340:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3442
		{
			return unimplementedWithIssueDetail(sqllex, 74775, "alter aggregate")
		}
	case 341:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3469
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 342:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3474
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 343:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3478
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 344:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3484
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 345:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3489
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 346:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3494
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 347:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3498
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 348:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3515
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 349:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3518
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 350:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3522
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 351:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3526
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 352:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3534
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 353:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3538
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 354:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3544
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 355:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3548
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 356:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3554
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 357:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3558
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 358:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3562
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 359:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3566
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 360:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3572
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 361:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3576
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 362:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3582
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 363:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3586
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 364:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3590
		{
			sqlVAL.union.val = nil
		}
	case 365:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3602
		{

			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			if sqlDollar[7].union.expr() != nil {
				return unimplementedWithIssue(sqllex, 54580)
			}
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: *sqlDollar[6].union.copyOptions(),
			}
		}
	case 366:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3616
		{
			return unimplemented(sqllex, "copy from unsupported format")
		}
	case 367:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3622
		{
			sqlVAL.union.val = sqlDollar[2].union.copyOptions()
		}
	case 368:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3626
		{
			sqlVAL.union.val = &tree.CopyOptions{}
		}
	case 369:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3632
		{
			sqlVAL.union.val = sqlDollar[1].union.copyOptions()
		}
	case 370:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3636
		{
			if err := sqlDollar[1].union.copyOptions().CombineWith(sqlDollar[2].union.copyOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 371:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3644
		{
			sqlVAL.union.val = &tree.CopyOptions{Destination: sqlDollar[3].union.expr()}
		}
	case 372:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3648
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatBinary}
		}
	case 373:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3652
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatCSV}
		}
	case 374:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3656
		{
			sqlVAL.union.val = &tree.CopyOptions{Delimiter: sqlDollar[2].union.expr()}
		}
	case 375:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3660
		{
			sqlVAL.union.val = &tree.CopyOptions{Null: sqlDollar[2].union.expr()}
		}
	case 376:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3664
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "oids")
		}
	case 377:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3668
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "freeze")
		}
	case 378:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3672
		{
			sqlVAL.union.val = &tree.CopyOptions{Header: true}
		}
	case 379:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3676
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "quote")
		}
	case 380:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3680
		{
			sqlVAL.union.val = &tree.CopyOptions{Escape: tree.NewStrVal(sqlDollar[2].str)}
		}
	case 381:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3684
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "force quote")
		}
	case 382:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3688
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "force not null")
		}
	case 383:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3692
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "force null")
		}
	case 384:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3696
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "encoding")
		}
	case 386:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3704
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 388:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3705
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 390:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3706
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 392:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3707
		{
			return helpWith(sqllex, "CANCEL ALL JOBS")
		}
	case 393:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3708
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 394:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3718
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 395:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3726
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 396:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3728
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 397:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3732
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 398:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3735
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 399:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3745
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 400:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3754
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 401:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3762
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 402:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3764
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 403:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3768
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 404:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3771
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 405:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3781
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 406:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3790
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 407:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3798
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 408:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3800
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 409:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3804
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 410:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3807
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 411:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3815
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.CancelJob}
		}
	case 412:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3818
		{
			return helpWith(sqllex, "CANCEL ALL JOBS")
		}
	case 413:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3822
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 414:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3826
		{
			sqlVAL.union.val = &tree.CommentOnSchema{Name: sqlDollar[4].union.objectNamePrefix(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 415:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3830
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 416:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3834
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 417:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3847
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 418:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3852
		{
			sqlVAL.union.val = &tree.CommentOnConstraint{Constraint: tree.Name(sqlDollar[4].str), Table: sqlDollar[6].union.unresolvedObjectName(), Comment: sqlDollar[8].union.strPtr()}
		}
	case 419:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3855
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "comment on extension")
		}
	case 420:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3856
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "comment on function")
		}
	case 421:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3860
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 422:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3865
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 424:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3877
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 427:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3879
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 429:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3880
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 432:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3882
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 434:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3883
		{
			return helpWith(sqllex, "CREATE EXTERNAL CONNECTION")
		}
	case 435:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3884
		{
		}
	case 436:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3885
		{
			return helpWith(sqllex, "CREATE")
		}
	case 437:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3892
		{
			sqlVAL.union.val = &tree.CreateExtension{IfNotExists: true, Name: sqlDollar[6].str}
		}
	case 438:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3895
		{
			sqlVAL.union.val = &tree.CreateExtension{Name: sqlDollar[3].str}
		}
	case 439:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3899
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "create extension if not exists with")
		}
	case 440:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3902
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "create extension with")
		}
	case 441:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3905
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 442:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3910
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToFunctionName()
			sqlVAL.union.val = &tree.CreateFunction{
				IsProcedure: false,
				Replace:     sqlDollar[2].union.bool(),
				FuncName:    name,
				Args:        sqlDollar[6].union.functionArgs(),
				ReturnType: tree.FuncReturnType{
					Type:  sqlDollar[10].union.typeReference(),
					IsSet: sqlDollar[9].union.bool(),
				},
				Options:     sqlDollar[11].union.functionOptions(),
				RoutineBody: sqlDollar[12].union.routineBody(),
			}
		}
	case 443:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3927
		{
			sqlVAL.union.val = true
		}
	case 444:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3928
		{
			sqlVAL.union.val = false
		}
	case 445:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3931
		{
			sqlVAL.union.val = true
		}
	case 446:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3932
		{
			sqlVAL.union.val = false
		}
	case 448:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3938
		{
			sqlVAL.union.val = sqlDollar[1].union.functionArgs()
		}
	case 449:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3939
		{
			sqlVAL.union.val = tree.FuncArgs{}
		}
	case 450:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3942
		{
			sqlVAL.union.val = tree.FuncArgs{sqlDollar[1].union.functionArg()}
		}
	case 451:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3944
		{
			sqlVAL.union.val = append(sqlDollar[1].union.functionArgs(), sqlDollar[3].union.functionArg())
		}
	case 453:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3951
		{
			arg := sqlDollar[1].union.functionArg()
			arg.DefaultVal = sqlDollar[3].union.expr()
			sqlVAL.union.val = arg
		}
	case 454:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3957
		{
			arg := sqlDollar[1].union.functionArg()
			arg.DefaultVal = sqlDollar[3].union.expr()
			sqlVAL.union.val = arg
		}
	case 455:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3965
		{
			sqlVAL.union.val = tree.FuncArg{
				Name:  tree.Name(sqlDollar[2].str),
				Type:  sqlDollar[3].union.typeReference(),
				Class: sqlDollar[1].union.functionArgClass(),
			}
		}
	case 456:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3973
		{
			sqlVAL.union.val = tree.FuncArg{
				Name:  tree.Name(sqlDollar[1].str),
				Type:  sqlDollar[3].union.typeReference(),
				Class: sqlDollar[2].union.functionArgClass(),
			}
		}
	case 457:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3981
		{
			sqlVAL.union.val = tree.FuncArg{
				Name:  tree.Name(sqlDollar[1].str),
				Type:  sqlDollar[2].union.typeReference(),
				Class: tree.FunctionArgIn,
			}
		}
	case 458:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3989
		{
			sqlVAL.union.val = tree.FuncArg{
				Type:  sqlDollar[2].union.typeReference(),
				Class: sqlDollar[1].union.functionArgClass(),
			}
		}
	case 459:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3996
		{
			sqlVAL.union.val = tree.FuncArg{
				Type:  sqlDollar[1].union.typeReference(),
				Class: tree.FunctionArgIn,
			}
		}
	case 460:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4004
		{
			sqlVAL.union.val = tree.FunctionArgIn
		}
	case 461:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4005
		{
			return unimplemented(sqllex, "create function with 'OUT' argument class")
		}
	case 462:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4006
		{
			return unimplemented(sqllex, "create function with 'INOUT' argument class")
		}
	case 463:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4007
		{
			return unimplemented(sqllex, "create function with 'IN OUT' argument class")
		}
	case 464:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4008
		{
			return unimplemented(sqllex, "create function with 'VARIADIC' argument class")
		}
	case 467:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4017
		{
			sqlVAL.union.val = sqlDollar[1].union.functionOptions()
		}
	case 468:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4018
		{
			sqlVAL.union.val = tree.FunctionOptions{}
		}
	case 469:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4021
		{
			sqlVAL.union.val = tree.FunctionOptions{sqlDollar[1].union.functionOption()}
		}
	case 470:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4023
		{
			sqlVAL.union.val = append(sqlDollar[1].union.functionOptions(), sqlDollar[2].union.functionOption())
		}
	case 471:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4029
		{
			sqlVAL.union.val = tree.FunctionBodyStr(sqlDollar[2].str)
		}
	case 472:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4033
		{
			lang, err := tree.AsFunctionLanguage(sqlDollar[2].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = lang
		}
	case 473:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4040
		{
			return unimplemented(sqllex, "create transform function")
		}
	case 474:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4041
		{
			return unimplemented(sqllex, "create window function")
		}
	case 475:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4043
		{
			sqlVAL.union.val = sqlDollar[1].union.functionOption()
		}
	case 476:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4049
		{
			sqlVAL.union.val = tree.FunctionCalledOnNullInput
		}
	case 477:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4053
		{
			sqlVAL.union.val = tree.FunctionReturnsNullOnNullInput
		}
	case 478:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4057
		{
			sqlVAL.union.val = tree.FunctionStrict
		}
	case 479:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4061
		{
			sqlVAL.union.val = tree.FunctionImmutable
		}
	case 480:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4065
		{
			sqlVAL.union.val = tree.FunctionStable
		}
	case 481:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4069
		{
			sqlVAL.union.val = tree.FunctionVolatile
		}
	case 482:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4073
		{
			return unimplemented(sqllex, "create function...security")
		}
	case 483:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4077
		{
			return unimplemented(sqllex, "create function...security")
		}
	case 484:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4081
		{
			return unimplemented(sqllex, "create function...security")
		}
	case 485:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4085
		{
			return unimplemented(sqllex, "create function...security")
		}
	case 486:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4089
		{
			sqlVAL.union.val = tree.FunctionLeakproof(true)
		}
	case 487:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4093
		{
			sqlVAL.union.val = tree.FunctionLeakproof(false)
		}
	case 488:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4097
		{
			return unimplemented(sqllex, "create function...cost")
		}
	case 489:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4101
		{
			return unimplemented(sqllex, "create function...rows")
		}
	case 490:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4105
		{
			return unimplemented(sqllex, "create function...support")
		}
	case 491:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4111
		{
			return unimplemented(sqllex, "create function...set")
		}
	case 492:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4112
		{
			return unimplemented(sqllex, "create function...parallel")
		}
	case 494:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4119
		{
			sqlVAL.union.val = &tree.RoutineReturn{
				ReturnVal: sqlDollar[2].union.expr(),
			}
		}
	case 497:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4131
		{
			sqlVAL.union.val = append(sqlDollar[1].union.stmts(), sqlDollar[2].union.stmt())
		}
	case 498:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4135
		{
			sqlVAL.union.val = tree.Statements{}
		}
	case 499:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4141
		{
			sqlVAL.union.val = &tree.RoutineBody{
				Stmts: tree.Statements{sqlDollar[1].union.stmt()},
			}
		}
	case 500:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4147
		{
			sqlVAL.union.val = &tree.RoutineBody{
				Stmts: sqlDollar[3].union.stmts(),
			}
		}
	case 501:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4153
		{
			sqlVAL.union.val = (*tree.RoutineBody)(nil)
		}
	case 502:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4158
		{
			return unimplemented(sqllex, "create access method")
		}
	case 503:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4159
		{
			return unimplementedWithIssueDetail(sqllex, 74775, "create aggregate")
		}
	case 504:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4160
		{
			return unimplemented(sqllex, "create cast")
		}
	case 505:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4161
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 506:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4162
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 507:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4163
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 508:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4164
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 509:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4165
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 510:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4166
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 511:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4167
		{
			return unimplementedWithIssue(sqllex, 65017)
		}
	case 512:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4168
		{
			return unimplemented(sqllex, "create publication")
		}
	case 513:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4169
		{
			return unimplemented(sqllex, "create rule")
		}
	case 514:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4170
		{
			return unimplemented(sqllex, "create server")
		}
	case 515:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4171
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 516:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4172
		{
			return unimplementedWithIssueDetail(sqllex, 54113, "create tablespace")
		}
	case 517:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4173
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 518:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4174
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create trigger")
		}
	case 519:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4177
		{
		}
	case 520:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4178
		{
		}
	case 521:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4181
		{
		}
	case 522:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4182
		{
		}
	case 523:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4185
		{
			return unimplemented(sqllex, "drop access method")
		}
	case 524:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4186
		{
			return unimplementedWithIssueDetail(sqllex, 74775, "drop aggregate")
		}
	case 525:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4187
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 526:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4188
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 527:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4189
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 528:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4190
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 529:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4191
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "drop extension if exists")
		}
	case 530:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4192
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "drop extension")
		}
	case 531:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4193
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 532:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4194
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 533:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4195
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 534:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4196
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 535:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4197
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 536:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4198
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 537:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4199
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 538:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4200
		{
			return unimplemented(sqllex, "drop server")
		}
	case 539:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4201
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 540:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4202
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 541:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4203
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 543:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4206
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 545:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4207
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 547:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4208
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 549:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4209
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 551:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4210
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 552:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4212
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 554:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4213
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 556:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4214
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 558:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4215
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 560:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4226
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 561:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4234
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 562:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4238
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 563:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4242
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 564:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4248
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 565:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4252
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 566:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4261
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 567:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4268
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 568:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4274
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 569:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4280
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 570:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4284
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 571:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4295
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 572:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4307
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 573:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4322
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.changefeedTargets(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 574:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4331
		{
			target, err := tree.ChangefeedTargetFromTableExpr(sqlDollar[9].union.tblExpr())
			if err != nil {
				return setErr(sqllex, err)
			}

			sqlVAL.union.val = &tree.CreateChangefeed{
				SinkURI: sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
				Targets: tree.ChangefeedTargets{target},
				Select: &tree.SelectClause{
					Exprs: sqlDollar[7].union.selExprs(),
					From:  tree.From{Tables: tree.TableExprs{sqlDollar[9].union.tblExpr()}},
					Where: tree.NewWhere(tree.AstWhere, sqlDollar[10].union.expr()),
				},
			}
		}
	case 575:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4349
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.changefeedTargets(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 576:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4359
		{
			sqlVAL.union.val = tree.ChangefeedTargets{sqlDollar[1].union.changefeedTarget()}
		}
	case 577:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4363
		{
			sqlVAL.union.val = append(sqlDollar[1].union.changefeedTargets(), sqlDollar[3].union.changefeedTarget())
		}
	case 578:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4369
		{
			sqlVAL.union.val = tree.ChangefeedTarget{
				TableName:  sqlDollar[2].union.unresolvedObjectName().ToUnresolvedName(),
				FamilyName: tree.Name(sqlDollar[3].str),
			}
		}
	case 580:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4380
		{
		}
	case 581:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4382
		{
		}
	case 582:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4386
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 583:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4390
		{
			sqlVAL.str = ""
		}
	case 584:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4396
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 585:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4400
		{

			sqlVAL.union.val = nil
		}
	case 586:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4414
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 587:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4424
		{
			return helpWith(sqllex, "DELETE")
		}
	case 588:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4427
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 589:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4428
		{
		}
	case 590:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4436
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 591:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4439
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 592:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4440
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 593:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4441
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 594:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4442
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 595:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4443
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 598:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4452
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 600:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4453
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 602:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4454
		{
			return helpWith(sqllex, "DROP EXTERNAL CONNECTION")
		}
	case 603:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4455
		{
		}
	case 604:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4456
		{
			return helpWith(sqllex, "DROP")
		}
	case 606:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4459
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 608:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4460
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 610:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4461
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 612:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4462
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 614:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4463
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 616:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4464
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 618:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4465
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 619:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4473
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 620:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4477
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 621:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4481
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[4].union.tableNames(),
				IfExists:       false,
				DropBehavior:   sqlDollar[5].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 622:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4490
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[6].union.tableNames(),
				IfExists:       true,
				DropBehavior:   sqlDollar[7].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 623:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4498
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 624:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4506
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 625:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4510
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 626:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4513
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 627:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4521
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 628:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4525
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 629:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4528
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 630:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4536
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 631:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4545
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 632:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4553
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 633:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4561
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 634:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4569
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 635:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4576
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 636:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4583
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 637:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4591
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 638:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4598
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 639:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4602
		{
			sqlVAL.union.val = tree.GrantTargetList{Types: sqlDollar[1].union.unresolvedObjectNames()}
		}
	case 640:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4608
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 641:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4612
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 642:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4621
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[3].union.objectNamePrefixList(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 643:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4629
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[5].union.objectNamePrefixList(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 644:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4636
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 645:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4644
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.roleSpecList(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 646:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4648
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.roleSpecList(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 647:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4651
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 648:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4655
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 649:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4660
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 650:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4673
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 651:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4678
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 652:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4680
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 653:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4685
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 654:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4689
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 655:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4712
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 656:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4719
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 657:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4721
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 658:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4729
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 659:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4737
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 660:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4745
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 661:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4753
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 662:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4764
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 667:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4772
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 671:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4775
		{
			return helpWith(sqllex, "DELETE")
		}
	case 674:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4777
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 676:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4778
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 678:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4779
		{
			return helpWith(sqllex, "INSERT")
		}
	case 682:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4782
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 685:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4784
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 687:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4787
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 691:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4792
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 693:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4793
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 695:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4794
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 697:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4799
		{
			return helpWith(sqllex, "DELETE")
		}
	case 699:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4800
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 701:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4801
		{
			return helpWith(sqllex, "INSERT")
		}
	case 702:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4803
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 705:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4807
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 707:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4808
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 708:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4812
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 709:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4816
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 710:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4826
		{
			sqlVAL.union.val = &tree.AlterChangefeed{
				Jobs: sqlDollar[3].union.expr(),
				Cmds: sqlDollar[4].union.alterChangefeedCmds(),
			}
		}
	case 711:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4832
		{
			return helpWith(sqllex, "ALTER CHANGEFEED")
		}
	case 712:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4836
		{
			sqlVAL.union.val = tree.AlterChangefeedCmds{sqlDollar[1].union.alterChangefeedCmd()}
		}
	case 713:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4840
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterChangefeedCmds(), sqlDollar[2].union.alterChangefeedCmd())
		}
	case 714:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4847
		{
			sqlVAL.union.val = &tree.AlterChangefeedAddTarget{
				Targets: sqlDollar[2].union.changefeedTargets(),
				Options: sqlDollar[3].union.kvOptions(),
			}
		}
	case 715:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4855
		{
			sqlVAL.union.val = &tree.AlterChangefeedDropTarget{
				Targets: sqlDollar[2].union.changefeedTargets(),
			}
		}
	case 716:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4861
		{
			sqlVAL.union.val = &tree.AlterChangefeedSetOptions{
				Options: sqlDollar[2].union.kvOptions(),
			}
		}
	case 717:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4867
		{
			sqlVAL.union.val = &tree.AlterChangefeedUnsetOptions{
				Options: sqlDollar[2].union.nameList(),
			}
		}
	case 718:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4886
		{
			sqlVAL.union.val = &tree.AlterBackup{
				Backup: sqlDollar[3].union.expr(),
				Cmds:   sqlDollar[4].union.alterBackupCmds(),
			}
		}
	case 719:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4893
		{
			sqlVAL.union.val = &tree.AlterBackup{
				Subdir: sqlDollar[3].union.expr(),
				Backup: sqlDollar[5].union.expr(),
				Cmds:   sqlDollar[6].union.alterBackupCmds(),
			}
		}
	case 720:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4900
		{
			return helpWith(sqllex, "ALTER BACKUP")
		}
	case 721:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4904
		{
			sqlVAL.union.val = tree.AlterBackupCmds{sqlDollar[1].union.alterBackupCmd()}
		}
	case 722:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4908
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterBackupCmds(), sqlDollar[2].union.alterBackupCmd())
		}
	case 723:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4914
		{
			sqlVAL.union.val = &tree.AlterBackupKMS{
				KMSInfo: sqlDollar[2].union.backupKMS(),
			}
		}
	case 724:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4922
		{
			sqlVAL.union.val = tree.BackupKMS{
				NewKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList(),
				OldKMSURI: sqlDollar[7].union.stringOrPlaceholderOptList(),
			}
		}
	case 725:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4935
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 726:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4943
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 727:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4951
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 728:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4955
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 729:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4959
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 730:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4969
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 731:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4976
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 732:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4984
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 733:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4988
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 734:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4992
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 735:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5002
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 736:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5006
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 737:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5010
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 738:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5014
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 739:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5017
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 740:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5040
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.roleSpecList(), Targets: sqlDollar[4].union.grantTargetList(), WithGrantOption: sqlDollar[7].union.bool()}
		}
	case 741:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5044
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: false}
		}
	case 742:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5048
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: true}
		}
	case 743:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5052
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.grantTargetList(), Grantees: sqlDollar[7].union.roleSpecList(), WithGrantOption: sqlDollar[8].union.bool()}
		}
	case 744:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5056
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees:        sqlDollar[7].union.roleSpecList(),
				WithGrantOption: sqlDollar[8].union.bool(),
			}
		}
	case 745:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5067
		{
			return unimplemented(sqllex, "grant privileges on schema with")
		}
	case 746:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5071
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:              sqlDollar[8].union.objectNamePrefixList(),
					AllSequencesInSchema: true,
				},
				Grantees:        sqlDollar[10].union.roleSpecList(),
				WithGrantOption: sqlDollar[11].union.bool(),
			}
		}
	case 747:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5083
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:        sqlDollar[10].union.roleSpecList(),
				WithGrantOption: sqlDollar[11].union.bool(),
			}
		}
	case 748:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5095
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[3].union.privilegeList(),
				Targets: tree.GrantTargetList{
					System: true,
				},
				Grantees:        sqlDollar[5].union.roleSpecList(),
				WithGrantOption: sqlDollar[6].union.bool(),
			}
		}
	case 749:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5105
		{
			return helpWith(sqllex, "GRANT")
		}
	case 750:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5128
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.roleSpecList(), Targets: sqlDollar[4].union.grantTargetList(), GrantOptionFor: false}
		}
	case 751:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5132
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[5].union.privilegeList(), Grantees: sqlDollar[9].union.roleSpecList(), Targets: sqlDollar[7].union.grantTargetList(), GrantOptionFor: true}
		}
	case 752:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5136
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: false}
		}
	case 753:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5140
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.roleSpecList(), AdminOption: true}
		}
	case 754:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5144
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.grantTargetList(), Grantees: sqlDollar[7].union.roleSpecList(), GrantOptionFor: false}
		}
	case 755:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5148
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[5].union.privilegeList(), Targets: sqlDollar[8].union.grantTargetList(), Grantees: sqlDollar[10].union.roleSpecList(), GrantOptionFor: true}
		}
	case 756:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5152
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees:       sqlDollar[7].union.roleSpecList(),
				GrantOptionFor: false,
			}
		}
	case 757:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5163
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[5].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas: sqlDollar[8].union.objectNamePrefixList(),
				},
				Grantees:       sqlDollar[10].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 758:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5174
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:       sqlDollar[10].union.roleSpecList(),
				GrantOptionFor: false,
			}
		}
	case 759:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5186
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:              sqlDollar[8].union.objectNamePrefixList(),
					AllSequencesInSchema: true,
				},
				Grantees:       sqlDollar[10].union.roleSpecList(),
				GrantOptionFor: false,
			}
		}
	case 760:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:5198
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[5].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:           sqlDollar[11].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:       sqlDollar[13].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 761:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5210
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[3].union.privilegeList(),
				Targets: tree.GrantTargetList{
					System: true,
				},
				Grantees: sqlDollar[5].union.roleSpecList(),
			}
		}
	case 762:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5220
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[6].union.privilegeList(),
				Targets: tree.GrantTargetList{
					System: true,
				},
				Grantees:       sqlDollar[8].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 763:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5231
		{
			return unimplemented(sqllex, "revoke privileges on sequence")
		}
	case 764:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5234
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 765:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5240
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 766:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5244
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 767:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5254
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 768:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5258
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 774:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5272
		{
			return helpWith(sqllex, "RESET")
		}
	case 776:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5273
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 777:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5281
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}, Reset: true}
		}
	case 778:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5285
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}, Reset: true}
		}
	case 779:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5289
		{
			sqlVAL.union.val = &tree.SetVar{ResetAll: true, Reset: true}
		}
	case 780:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5292
		{
			return helpWith(sqllex, "RESET")
		}
	case 781:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5300
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 782:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5303
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 783:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5314
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 784:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5317
		{
			return helpWith(sqllex, "USE")
		}
	case 786:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5321
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 787:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5322
		{
		}
	case 788:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5323
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 790:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5327
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 792:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5328
		{
			return helpWith(sqllex, "SET LOCAL")
		}
	case 794:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5329
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 796:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5330
		{
			return helpWith(sqllex, "USE")
		}
	case 799:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5346
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 800:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5361
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 801:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5364
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 802:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5382
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 803:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5390
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 804:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5394
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 805:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5398
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 806:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5404
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 807:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5408
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 808:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5414
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 809:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5418
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 810:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5422
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 811:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5426
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 812:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5430
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 813:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5441
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 814:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5444
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 815:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5454
		{
			csettingStmt := sqlDollar[4].union.stmt().(*tree.SetClusterSetting)
			sqlVAL.union.val = &tree.AlterTenantSetClusterSetting{
				SetClusterSetting: *csettingStmt,
				TenantID:          sqlDollar[3].union.expr(),
			}
		}
	case 816:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5462
		{
			csettingStmt := sqlDollar[4].union.stmt().(*tree.SetClusterSetting)
			sqlVAL.union.val = &tree.AlterTenantSetClusterSetting{
				SetClusterSetting: *csettingStmt,
				TenantAll:         true,
			}
		}
	case 817:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5469
		{
			return helpWith(sqllex, "ALTER TENANT")
		}
	case 818:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5470
		{
			return helpWith(sqllex, "ALTER TENANT")
		}
	case 823:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5484
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 824:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5500
		{

			sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[4].union.exprs()}
		}
	case 825:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5506
		{

			sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[5].union.exprs()}
		}
	case 826:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5512
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 827:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5515
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 828:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5517
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 829:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5520
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 830:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5523
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 831:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5537
		{
			ret := sqlDollar[3].union.setVar()
			ret.Local = true
			sqlVAL.union.val = ret
		}
	case 832:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5542
		{
			return helpWith(sqllex, "SET LOCAL")
		}
	case 833:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5559
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 834:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5562
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 835:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5564
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 836:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5567
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 837:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5571
		{
			sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
		}
	case 839:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5583
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 840:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5587
		{
			return unimplemented(sqllex, "set from current")
		}
	case 841:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5591
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 842:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5596
		{

			sqlVAL.union.val = &tree.SetVar{Name: "role", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 844:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5605
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 845:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5610
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 846:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5614
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 848:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5626
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 849:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5631
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 850:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5638
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 851:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5642
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 852:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5648
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 853:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5652
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 855:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5659
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 858:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5680
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 859:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5684
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 860:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5690
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 861:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5694
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 862:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5698
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 863:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5702
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 864:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5706
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 865:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5712
		{
			sqlVAL.union.val = tree.Low
		}
	case 866:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5716
		{
			sqlVAL.union.val = tree.Normal
		}
	case 867:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5720
		{
			sqlVAL.union.val = tree.High
		}
	case 868:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5731
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 869:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5735
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 870:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5739
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 872:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5744
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 873:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5748
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 875:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5764
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 877:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5765
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 879:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5766
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 881:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5767
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 883:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5768
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 885:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5769
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 887:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5770
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 889:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5771
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 891:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5772
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 894:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5774
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 896:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5775
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 898:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5776
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 900:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5777
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 902:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5778
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 905:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5780
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 907:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5781
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 909:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5782
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 912:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5784
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 915:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5786
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 917:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5787
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 919:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5788
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 921:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5789
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 923:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5790
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 925:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5791
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 927:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5792
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 929:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5793
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 931:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5794
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 933:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5795
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 935:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5796
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 937:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5797
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 939:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5798
		{
			return helpWith(sqllex, "SHOW TRANSFER")
		}
	case 941:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5799
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 943:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5800
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 944:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5801
		{
			return helpWith(sqllex, "SHOW")
		}
	case 948:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5804
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 950:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5813
		{
			sqlVAL.union.val = &tree.CloseCursor{
				All: true,
			}
		}
	case 951:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5819
		{
			sqlVAL.union.val = &tree.CloseCursor{
				Name: tree.Name(sqlDollar[2].str),
			}
		}
	case 952:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5824
		{
			return helpWith(sqllex, "CLOSE")
		}
	case 953:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5834
		{
			sqlVAL.union.val = &tree.DeclareCursor{
				Binary:      sqlDollar[3].union.bool(),
				Name:        tree.Name(sqlDollar[2].str),
				Sensitivity: sqlDollar[4].union.cursorSensitivity(),
				Scroll:      sqlDollar[5].union.cursorScrollOption(),
				Hold:        sqlDollar[7].union.bool(),
				Select:      sqlDollar[9].union.slct(),
			}
		}
	case 954:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5844
		{
			return helpWith(sqllex, "DECLARE")
		}
	case 955:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5848
		{
			sqlVAL.union.val = true
		}
	case 956:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5852
		{
			sqlVAL.union.val = false
		}
	case 957:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5858
		{
			sqlVAL.union.val = tree.Insensitive
		}
	case 958:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5862
		{
			sqlVAL.union.val = tree.Asensitive
		}
	case 959:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5866
		{
			sqlVAL.union.val = tree.UnspecifiedSensitivity
		}
	case 960:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5872
		{
			sqlVAL.union.val = tree.Scroll
		}
	case 961:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5876
		{
			sqlVAL.union.val = tree.NoScroll
		}
	case 962:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5880
		{
			sqlVAL.union.val = tree.UnspecifiedScroll
		}
	case 963:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5886
		{
			sqlVAL.union.val = true
		}
	case 964:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5890
		{
			sqlVAL.union.val = false
		}
	case 965:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5894
		{
			sqlVAL.union.val = false
		}
	case 966:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5904
		{
			sqlVAL.union.val = &tree.FetchCursor{
				CursorStmt: sqlDollar[2].union.cursorStmt(),
			}
		}
	case 967:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5909
		{
			return helpWith(sqllex, "FETCH")
		}
	case 968:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5917
		{
			sqlVAL.union.val = &tree.MoveCursor{
				CursorStmt: sqlDollar[2].union.cursorStmt(),
			}
		}
	case 969:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5922
		{
			return helpWith(sqllex, "MOVE")
		}
	case 970:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5926
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[1].str),
				Count: 1,
			}
		}
	case 971:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5933
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[2].str),
				Count: 1,
			}
		}
	case 972:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5940
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[3].str),
				Count: sqlDollar[1].union.int64(),
			}
		}
	case 973:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5947
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[3].str),
				Count: sqlDollar[1].union.int64(),
			}
		}
	case 974:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5954
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[4].str),
				Count: sqlDollar[2].union.int64() * sqlDollar[1].union.int64(),
			}
		}
	case 975:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5961
		{
			fetchType := tree.FetchAll
			count := sqlDollar[1].union.int64()
			if count < 0 {
				fetchType = tree.FetchBackwardAll
			}
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[4].str),
				FetchType: fetchType,
			}
		}
	case 976:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5973
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[4].str),
				FetchType: tree.FetchAbsolute,
				Count:     sqlDollar[2].union.int64(),
			}
		}
	case 977:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5981
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[4].str),
				FetchType: tree.FetchRelative,
				Count:     sqlDollar[2].union.int64(),
			}
		}
	case 978:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5989
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[3].str),
				FetchType: tree.FetchFirst,
			}
		}
	case 979:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5996
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[3].str),
				FetchType: tree.FetchLast,
			}
		}
	case 980:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6004
		{
			sqlVAL.union.val = int64(1)
		}
	case 981:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6005
		{
			sqlVAL.union.val = int64(-1)
		}
	case 982:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6008
		{
			sqlVAL.union.val = sqlDollar[1].union.int64()
		}
	case 983:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6009
		{
			sqlVAL.union.val = int64(1)
		}
	case 984:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6012
		{
			sqlVAL.union.val = int64(1)
		}
	case 985:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6013
		{
			sqlVAL.union.val = int64(-1)
		}
	case 986:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6016
		{
		}
	case 987:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6017
		{
		}
	case 988:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6020
		{
		}
	case 989:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6021
		{
		}
	case 990:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6025
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 991:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6030
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 992:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6035
		{

			return purposelyUnimplemented(sqllex, "reindex schema", "CockroachDB does not require reindexing.")
		}
	case 993:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6040
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 994:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6045
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 995:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6055
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 996:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6056
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 997:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6057
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 999:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6062
		{
			sqlVAL.str = sqlDollar[1].str + "." + strings.Join(sqlDollar[2].union.strs(), ".")
		}
	case 1002:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6072
		{
			sqlVAL.str = "client_encoding"
		}
	case 1007:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6077
		{
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6079
		{

			sqlVAL.str = sqlDollar[1].str + "." + strings.Join(sqlDollar[2].union.strs(), ".")
		}
	case 1009:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6084
		{
			sqlVAL.str = "timezone"
		}
	case 1010:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6085
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6089
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6093
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 1013:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6109
		{
			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6113
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[7].union.unresolvedObjectName(), UsingJSON: true}
		}
	case 1015:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6117
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6128
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 1017:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6136
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 1018:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6144
		{
			sqlVAL.union.val = &tree.ShowBackup{
				InCollection: sqlDollar[4].union.stringOrPlaceholderOptList(),
			}
		}
	case 1019:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6150
		{
			sqlVAL.union.val = &tree.ShowBackup{
				From:         true,
				Details:      sqlDollar[3].union.showBackupDetails(),
				Path:         sqlDollar[5].union.expr(),
				InCollection: sqlDollar[7].union.stringOrPlaceholderOptList(),
				Options:      sqlDollar[8].union.kvOptions(),
			}
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6160
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:      tree.BackupDefaultDetails,
				Path:         sqlDollar[3].union.expr(),
				InCollection: sqlDollar[5].union.stringOrPlaceholderOptList(),
				Options:      sqlDollar[6].union.kvOptions(),
			}
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6169
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6177
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupSchemaDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6185
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6193
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6200
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6204
		{
			sqlVAL.union.val = tree.BackupDefaultDetails
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6208
		{
			sqlVAL.union.val = tree.BackupSchemaDetails
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6212
		{
			sqlVAL.union.val = tree.BackupFileDetails
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6216
		{
			sqlVAL.union.val = tree.BackupRangeDetails
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6228
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6232
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 1032:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6235
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6237
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 1034:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6240
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6242
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 1036:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6246
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6249
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 1038:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6253
		{
			sqlVAL.union.val = sqlDollar[1].union.stmt()
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6255
		{
			switch t := sqlDollar[1].union.stmt().(type) {
			case *tree.ShowClusterSetting:
				sqlVAL.union.val = &tree.ShowTenantClusterSetting{
					ShowClusterSetting: t,
					TenantID:           sqlDollar[4].union.expr(),
				}
			case *tree.ShowClusterSettingList:
				sqlVAL.union.val = &tree.ShowTenantClusterSettingList{
					ShowClusterSettingList: t,
					TenantID:               sqlDollar[4].union.expr(),
				}
			}
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6269
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 1041:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6277
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 1042:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6280
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6288
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6292
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6296
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6300
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6303
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6311
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6314
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6320
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				Roles:  sqlDollar[4].union.roleSpecList(),
				Schema: tree.Name(sqlDollar[5].str),
			}
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6326
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				ForAllRoles: true,
				Schema:      tree.Name(sqlDollar[7].str),
			}
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6332
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6339
		{
			sqlVAL.union.val = &tree.ShowEnums{}
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6343
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
			}
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6353
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
			}
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6362
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6369
		{
			sqlVAL.union.val = &tree.ShowTypes{}
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6372
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6385
		{
			lst := sqlDollar[3].union.grantTargetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.roleSpecList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.roleSpecList()}
			}
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6393
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6401
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6404
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6406
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6410
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6414
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6417
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6419
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 1068:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6423
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6426
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6434
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6437
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6439
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6442
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6450
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 1075:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6453
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6455
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 1077:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6458
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 1078:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6462
		{
			sqlVAL.union.val = true
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6464
		{
			sqlVAL.union.val = true
		}
	case 1080:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6466
		{
			sqlVAL.union.val = false
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6483
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6487
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6491
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{}
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6494
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6495
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6496
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6498
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6502
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6506
		{
			sqlVAL.union.val = &tree.ShowJobs{Schedules: sqlDollar[3].union.slct()}
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6510
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{Jobs: sqlDollar[4].union.slct()}
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6513
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6515
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6523
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[4].union.expr()}}},
				},
			}
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6531
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6539
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6540
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6550
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ExecutorType:   sqlDollar[3].union.executorType(),
			}
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6556
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6558
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: sqlDollar[2].union.scheduleState(),
				ExecutorType:   sqlDollar[4].union.executorType(),
			}
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6564
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6566
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ScheduleID:     sqlDollar[3].union.expr(),
			}
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6572
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6576
		{
			sqlVAL.union.val = tree.ActiveSchedules
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6580
		{
			sqlVAL.union.val = tree.PausedSchedules
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6586
		{
			sqlVAL.union.val = tree.InvalidExecutor
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6590
		{
			sqlVAL.union.val = tree.ScheduledBackupExecutor
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6594
		{
			sqlVAL.union.val = tree.ScheduledSQLStatsCompactionExecutor
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6605
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6608
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6610
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6613
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6615
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6619
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6622
		{
			sqlVAL.union.val = true
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6623
		{
			sqlVAL.union.val = false
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6631
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6634
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6636
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6639
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6647
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6657
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6667
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 1125:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6670
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6677
		{
			sqlVAL.union.val = &tree.ShowTransactions{Cluster: sqlDollar[2].union.bool()}
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6680
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 1128:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6682
		{
			sqlVAL.union.val = &tree.ShowTransactions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6685
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6688
		{
			sqlVAL.union.val = true
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6689
		{
			sqlVAL.union.val = false
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6696
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6700
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6703
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 1135:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6710
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6714
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6717
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 1138:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6724
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6728
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6732
		{

			sqlVAL.union.val = &tree.ShowCompletions{
				Statement: tree.NewStrVal(sqlDollar[7].str),
				Offset:    sqlDollar[5].union.numVal(),
			}
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6742
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{Columns: sqlDollar[5].union.nameList()}
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6749
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6753
		{

			sqlVAL.union.val = tree.ShowLastQueryStatisticsDefaultColumns
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6764
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6767
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6775
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6780
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6785
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6789
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6796
		{
			sqlVAL.union.val = &tree.ShowTransferState{TransferKey: tree.NewStrVal(sqlDollar[5].str)}
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6800
		{
			sqlVAL.union.val = &tree.ShowTransferState{}
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6803
		{
			return helpWith(sqllex, "SHOW TRANSFER")
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6815
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6819
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeTable, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6824
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeView, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6829
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeSequence, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6834
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeDatabase, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6839
		{

			sqlVAL.union.val = &tree.ShowCreateFunction{
				Name: tree.ResolvableFunctionReference{
					FunctionReference: sqlDollar[4].union.unresolvedObjectName().ToUnresolvedName(),
				},
			}
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6848
		{
			sqlVAL.union.val = &tree.ShowCreateAllSchemas{}
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6852
		{
			sqlVAL.union.val = &tree.ShowCreateAllTables{}
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6856
		{
			sqlVAL.union.val = &tree.ShowCreateAllTypes{}
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6859
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6869
		{
			sqlVAL.union.val = &tree.ShowCreateSchedules{}
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6872
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6874
		{
			sqlVAL.union.val = &tree.ShowCreateSchedules{ScheduleID: sqlDollar[4].union.expr()}
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6877
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6885
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6888
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6896
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6899
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6909
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6913
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6917
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6925
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6933
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6940
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6946
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6948
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6951
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6953
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6956
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6960
		{
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6969
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6977
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6983
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6992
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6997
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7001
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7004
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7013
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{}
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7017
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{
				DatabaseName: tree.Name(sqlDollar[6].str),
			}
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7033
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromCluster,
			}
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7039
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
			}
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7045
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromAllDatabases,
			}
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7051
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
				DatabaseName:    tree.Name(sqlDollar[5].str),
			}
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7058
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDefault,
			}
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7064
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowSuperRegionsFromDatabase,
				DatabaseName:    tree.Name(sqlDollar[6].str),
			}
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7070
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7074
		{
			sqlVAL.union.val = &tree.ShowVar{Name: "locality"}
		}
	case 1201:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7080
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7087
		{
			sqlVAL.union.val = &tree.ShowFullTableScans{}
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7093
		{
			tmp := sqlDollar[2].union.grantTargetList()
			sqlVAL.union.val = &tmp
		}
	case 1204:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7098
		{
			sqlVAL.union.val = (*tree.GrantTargetList)(nil)
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7220
		{
			sqlVAL.union.val = tree.GrantTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}}
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7224
		{
			sqlVAL.union.val = tree.GrantTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}}
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7228
		{

			sqlVAL.union.val = tree.GrantTargetList{
				Tables:   tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7267
		{
			sqlVAL.union.val = tree.GrantTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}}
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7271
		{
			sqlVAL.union.val = tree.GrantTargetList{Tables: tree.TableAttrs{SequenceOnly: true, TablePatterns: sqlDollar[2].union.tablePatterns()}}
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7275
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.GrantTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}}
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7280
		{
			sqlVAL.union.val = tree.GrantTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: sqlDollar[2].union.tablePatterns()}}
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7284
		{
			sqlVAL.union.val = tree.GrantTargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 1213:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7294
		{
			sqlVAL.union.val = tree.BackupTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}}
		}
	case 1214:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7298
		{
			sqlVAL.union.val = tree.BackupTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}}
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7302
		{
			sqlVAL.union.val = tree.BackupTargetList{
				Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}},
			}
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7308
		{
			sqlVAL.union.val = tree.BackupTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}}
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7312
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.BackupTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}}
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7317
		{
			sqlVAL.union.val = tree.BackupTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: sqlDollar[2].union.tablePatterns()}}
		}
	case 1219:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7323
		{
			tenID := uint64(sqlDollar[2].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.BackupTargetList{TenantID: tree.TenantID{Specified: true, ID: tenID}}
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7331
		{

			if sqlDollar[2].str != "_" {
				return setErr(sqllex, errors.New("invalid syntax"))
			}
			sqlVAL.union.val = tree.BackupTargetList{TenantID: tree.TenantID{Specified: true}}
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7340
		{
			sqlVAL.union.val = tree.BackupTargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7349
		{
			sqlVAL.union.val = tree.GrantTargetList{ForRoles: true, Roles: sqlDollar[2].union.roleSpecList()}
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7353
		{
			sqlVAL.union.val = tree.GrantTargetList{Schemas: sqlDollar[2].union.objectNamePrefixList()}
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7357
		{
			sqlVAL.union.val = tree.GrantTargetList{Schemas: sqlDollar[2].union.objectNamePrefixList()}
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7361
		{
			sqlVAL.union.val = tree.GrantTargetList{Types: sqlDollar[2].union.unresolvedObjectNames()}
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7369
		{
			sqlVAL.union.val = sqlDollar[2].union.roleSpecList()
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7373
		{
			sqlVAL.union.val = tree.RoleSpecList(nil)
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7386
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7387
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7388
		{
			return helpWith(sqllex, "PAUSE ALL JOBS")
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7389
		{
			return helpWith(sqllex, "PAUSE")
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7399
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7400
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7401
		{
			return helpWith(sqllex, "RESUME ALL JOBS")
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7402
		{
			return helpWith(sqllex, "RESUME")
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7410
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.ResumeJob}
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7413
		{
			return helpWith(sqllex, "RESUME ALL JOBS")
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7423
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7432
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
				Reason:  sqlDollar[7].union.expr(),
			}
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7441
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7443
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7447
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob, Reason: sqlDollar[7].union.expr()}
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7451
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7454
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7459
		{
			sqlVAL.union.val = sqlDollar[3].union.slct()
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7463
		{
			sqlVAL.union.val = &tree.Select{
				Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
			}
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7478
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseSchedule,
			}
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7486
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7488
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.PauseSchedule,
			}
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7494
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7502
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.PauseJob}
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7505
		{
			return helpWith(sqllex, "PAUSE ALL JOBS")
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7514
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
			}
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7520
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
			}
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7527
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:   sqlDollar[3].union.objectNamePrefix(),
				AuthRole: sqlDollar[5].union.roleSpec(),
			}
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7534
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
				AuthRole:    sqlDollar[8].union.roleSpec(),
			}
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7541
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7552
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7561
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaOwner{
					Owner: sqlDollar[6].union.roleSpec(),
				},
			}
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7569
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:7605
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      false,
				Defs:             sqlDollar[6].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[9].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[10].union.storageParams(),
				OnCommit:         sqlDollar[11].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[12].union.locality(),
			}
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:7620
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      true,
				Defs:             sqlDollar[9].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[12].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[13].union.storageParams(),
				OnCommit:         sqlDollar[14].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[15].union.locality(),
			}
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7637
		{
			sqlVAL.union.val = sqlDollar[1].union.locality()
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7641
		{
			sqlVAL.union.val = (*tree.Locality)(nil)
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7648
		{

			sqlVAL.union.val = nil
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7654
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7660
		{
			sqlVAL.str = ""
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7664
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "create table inherits")
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7670
		{
			sqlVAL.union.val = nil
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7674
		{
			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7679
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7683
		{
			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7687
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7691
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7701
		{
			sqlVAL.union.val = []tree.Name{tree.Name(sqlDollar[1].str)}
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7705
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParamKeys(), tree.Name(sqlDollar[3].str))
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7711
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 1288:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7717
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7721
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7727
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:7740
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7754
		{
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7755
		{
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7756
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7774
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7775
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7776
		{
			sqlVAL.union.val = tree.PersistencePermanent
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7780
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7781
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1301:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7782
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7783
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7784
		{
			sqlVAL.union.val = tree.PersistenceUnlogged
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7789
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7795
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7799
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7805
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7811
		{
			def := sqlDollar[1].union.constraintDef()
			valBehavior := sqlDollar[2].union.validationBehavior()
			if u, ok := def.(*tree.UniqueConstraintTableDef); ok && valBehavior == tree.ValidationSkip {
				typ := "PRIMARY KEY"
				if !u.PrimaryKey {
					typ = "UNIQUE"
				}
				return purposelyUnimplemented(sqllex, "table constraint", typ+" constraints cannot be marked NOT VALID")
			}
			sqlVAL.union.val = def
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7824
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7833
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7837
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7843
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7848
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7849
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 1318:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7850
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7851
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7852
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7853
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 1322:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7854
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 1323:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7855
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7856
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7861
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7868
		{
			sqlVAL.str = ""
		}
	case 1329:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7875
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1330:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7881
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1331:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7889
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7895
		{
			sqlVAL.union.val = (*tree.PartitionByIndex)(nil)
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7901
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7907
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				All:         true,
				PartitionBy: sqlDollar[4].union.partitionBy(),
			}
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7917
		{
			sqlVAL.union.val = (*tree.PartitionByTable)(nil)
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7923
		{
			sqlVAL.union.val = sqlDollar[3].union.partitionBy()
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7929
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				List:   sqlDollar[6].union.listPartitions(),
			}
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7936
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				Range:  sqlDollar[6].union.rangePartitions(),
			}
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7943
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7949
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7953
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7959
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7969
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7973
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7979
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7993
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8004
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8008
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8014
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8018
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8022
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8026
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8030
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8034
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8038
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8056
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8060
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8064
		{
			sqlVAL.union.val = tree.HiddenConstraint{}
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8068
		{
			sqlVAL.union.val = tree.UniqueConstraint{
				WithoutIndex: sqlDollar[2].union.bool(),
			}
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8074
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{
				StorageParams: sqlDollar[3].union.storageParams(),
			}
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8080
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:       true,
				ShardBuckets:  sqlDollar[5].union.expr(),
				StorageParams: sqlDollar[6].union.storageParams(),
			}
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8088
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8092
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8096
		{
			sqlVAL.union.val = &tree.ColumnOnUpdate{Expr: sqlDollar[3].union.expr()}
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8100
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8110
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: false}
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8114
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: true}
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8118
		{
			sqllex.Error("use AS ( <expr> ) STORED or AS ( <expr> ) VIRTUAL")
			return 1
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8123
		{
			sqlVAL.union.val = &tree.GeneratedAlwaysAsIdentity{
				SeqOptions: sqlDollar[4].union.seqOpts(),
			}
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8129
		{
			sqlVAL.union.val = &tree.GeneratedByDefAsIdentity{
				SeqOptions: sqlDollar[4].union.seqOpts(),
			}
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8135
		{
			sqlVAL.union.val = &tree.GeneratedAlwaysAsIdentity{}
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8139
		{
			sqlVAL.union.val = &tree.GeneratedByDefAsIdentity{}
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8145
		{

			sqlVAL.union.val = true
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8150
		{
			sqlVAL.union.val = false
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8155
		{
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8159
		{
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8162
		{
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8166
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[2].str),
				Columns:          sqlDollar[4].union.idxElems(),
				Sharded:          sqlDollar[6].union.shardedIndexDef(),
				Storing:          sqlDollar[7].union.nameList(),
				PartitionByIndex: sqlDollar[8].union.partitionByIndex(),
				StorageParams:    sqlDollar[9].union.storageParams(),
				Predicate:        sqlDollar[10].union.expr(),
			}
		}
	case 1381:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8178
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:             tree.Name(sqlDollar[3].str),
					Columns:          sqlDollar[5].union.idxElems(),
					Sharded:          sqlDollar[7].union.shardedIndexDef(),
					Storing:          sqlDollar[8].union.nameList(),
					PartitionByIndex: sqlDollar[9].union.partitionByIndex(),
					StorageParams:    sqlDollar[10].union.storageParams(),
					Predicate:        sqlDollar[11].union.expr(),
				},
			}
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8192
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[3].str),
				Columns:          sqlDollar[5].union.idxElems(),
				Inverted:         true,
				PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
				StorageParams:    sqlDollar[8].union.storageParams(),
				Predicate:        sqlDollar[9].union.expr(),
			}
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8205
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8217
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 1385:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8222
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8228
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8235
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				WithoutIndex: sqlDollar[2].union.bool(),
				IndexTableDef: tree.IndexTableDef{
					Columns:          sqlDollar[4].union.idxElems(),
					Storing:          sqlDollar[6].union.nameList(),
					PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
					Predicate:        sqlDollar[9].union.expr(),
				},
			}
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8247
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:       sqlDollar[4].union.idxElems(),
					Sharded:       sqlDollar[6].union.shardedIndexDef(),
					StorageParams: sqlDollar[7].union.storageParams(),
				},
				PrimaryKey: true,
			}
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8259
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8270
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8277
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8281
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8287
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8297
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8308
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8312
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8319
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8325
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:       sqlDollar[4].union.idxElems(),
					StorageParams: sqlDollar[6].union.storageParams(),
				},
				PrimaryKey: true,
			}
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8337
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8341
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1401:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8347
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8353
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8357
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8363
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8367
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8373
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{
				StorageParams: sqlDollar[3].union.storageParams(),
			}
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8380
		{
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8381
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8382
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8383
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8384
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8385
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8403
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8407
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8413
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[3].union.expr(),
			}
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8419
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8425
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8429
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8435
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8439
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8459
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8463
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8467
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 1427:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8471
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8480
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8484
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8488
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8492
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8496
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8502
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8508
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8516
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8520
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 1437:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8524
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8528
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 1439:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8532
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8552
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:        name,
				Persistence: sqlDollar[2].union.persistence(),
				Options:     sqlDollar[5].union.seqOpts(),
			}
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8561
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
			}
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8569
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8573
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8576
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8577
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8580
		{

			parsedType := sqlDollar[2].union.colType()
			if parsedType == nil {
				sqllex.(*lexer).lastError = pgerror.Newf(pgcode.UndefinedObject, "type %q does not exist", sqlDollar[2].union.val)
				sqllex.(*lexer).populateErrorDetails()
				return 1
			}
			if parsedType.Family() != types.IntFamily {
				sqllex.Error(fmt.Sprintf("invalid integer type: %s", parsedType.SQLString()))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptAs, AsIntegerType: parsedType}
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8594
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8596
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8597
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8598
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8608
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8610
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8612
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8614
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8616
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8617
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8619
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8620
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 1460:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8622
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8624
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptRestart}
		}
	case 1462:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8625
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptRestart, IntVal: &x}
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8627
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptRestart, IntVal: &x, OptionalWord: true}
		}
	case 1464:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8630
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8638
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 1466:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8641
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 1467:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8645
		{

			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[2].str), Value: sqlDollar[3].union.expr()}
		}
	case 1468:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8651
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 1469:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8655
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 1470:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8665
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.roleSpec(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8669
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.roleSpec(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1472:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8672
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 1473:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8683
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.roleSpec(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8687
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.roleSpec(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8691
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[3].union.roleSpec(), DatabaseName: tree.Name(sqlDollar[4].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8695
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[5].union.roleSpec(), IfExists: true, DatabaseName: tree.Name(sqlDollar[6].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[7].union.setVar()}
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8699
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: true, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8703
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: false, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8706
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8710
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8714
		{
			sqlVAL.str = ""
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8722
		{
			sqlVAL.union.val = sqlDollar[2].union.setVar()
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8726
		{

			sqlVAL.union.val = sqlDollar[2].union.setVar()
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8733
		{
			sqlVAL.union.val = &tree.SetVar{ResetAll: true}
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8737
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8745
		{
			sqlVAL.union.val = true
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8749
		{

			sqlVAL.union.val = true
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8754
		{
			sqlVAL.union.val = false
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8766
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8780
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Persistence: sqlDollar[4].union.persistence(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8792
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8804
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[5].union.nameList(),
				AsSource:     sqlDollar[7].union.slct(),
				Materialized: true,
				WithData:     sqlDollar[8].union.bool(),
			}
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8815
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[8].union.nameList(),
				AsSource:     sqlDollar[10].union.slct(),
				Materialized: true,
				IfNotExists:  true,
				WithData:     sqlDollar[11].union.bool(),
			}
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8826
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8830
		{
			sqlVAL.union.val = false
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8834
		{
			sqlVAL.union.val = true
		}
	case 1497:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8838
		{
			sqlVAL.union.val = true
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8844
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8848
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8852
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8856
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8860
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8864
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8868
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8872
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8876
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8880
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8884
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8888
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8892
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8896
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8900
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8904
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8908
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8912
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8916
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8920
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8924
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1519:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8928
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8932
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1521:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8936
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1524:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8944
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 1525:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8948
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8954
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8958
		{
			sqlVAL.union.val = nil
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8964
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name("valid until"), Value: sqlDollar[3].union.expr()}
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8968
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name("valid until"), Value: tree.DNull}
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8973
		{
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8974
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8983
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.enumValueList(),
			}
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8991
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:    sqlDollar[6].union.unresolvedObjectName(),
				Variety:     tree.Enum,
				EnumLabels:  sqlDollar[10].union.enumValueList(),
				IfNotExists: true,
			}
		}
	case 1534:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8999
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 1535:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9001
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9003
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9005
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9007
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9009
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9013
		{
			sqlVAL.union.val = sqlDollar[1].union.enumValueList()
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9017
		{
			sqlVAL.union.val = tree.EnumValueList(nil)
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9023
		{
			sqlVAL.union.val = tree.EnumValueList{tree.EnumValue(sqlDollar[1].str)}
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9027
		{
			sqlVAL.union.val = append(sqlDollar[1].union.enumValueList(), tree.EnumValue(sqlDollar[3].str))
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:9044
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[5].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Columns:          sqlDollar[10].union.idxElems(),
				Sharded:          sqlDollar[12].union.shardedIndexDef(),
				Storing:          sqlDollar[13].union.nameList(),
				PartitionByIndex: sqlDollar[14].union.partitionByIndex(),
				StorageParams:    sqlDollar[15].union.storageParams(),
				Predicate:        sqlDollar[16].union.expr(),
				Inverted:         sqlDollar[8].union.bool(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:9061
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[8].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Sharded:          sqlDollar[15].union.shardedIndexDef(),
				Storing:          sqlDollar[16].union.nameList(),
				PartitionByIndex: sqlDollar[17].union.partitionByIndex(),
				Inverted:         sqlDollar[11].union.bool(),
				StorageParams:    sqlDollar[18].union.storageParams(),
				Predicate:        sqlDollar[19].union.expr(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:9079
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[6].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				Columns:          sqlDollar[10].union.idxElems(),
				Storing:          sqlDollar[12].union.nameList(),
				PartitionByIndex: sqlDollar[13].union.partitionByIndex(),
				StorageParams:    sqlDollar[14].union.storageParams(),
				Predicate:        sqlDollar[15].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-18 : sqlpt+1]
//line sql-gen.y:9095
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[9].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Storing:          sqlDollar[15].union.nameList(),
				PartitionByIndex: sqlDollar[16].union.partitionByIndex(),
				StorageParams:    sqlDollar[17].union.storageParams(),
				Predicate:        sqlDollar[18].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9111
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9115
		{

			switch sqlDollar[2].str {
			case "gin", "gist":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9130
		{
			sqlVAL.union.val = false
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9136
		{
			sqlVAL.union.val = true
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9140
		{
			sqlVAL.union.val = false
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9146
		{
			sqlVAL.union.val = true
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9150
		{
			sqlVAL.union.val = false
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9156
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9160
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9169
		{
			e := sqlDollar[2].union.idxElem()
			e.Expr = sqlDollar[1].union.expr()
			sqlVAL.union.val = e
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9175
		{
			e := sqlDollar[4].union.idxElem()
			e.Expr = sqlDollar[2].union.expr()
			sqlVAL.union.val = e
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9181
		{
			e := sqlDollar[2].union.idxElem()
			e.Column = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = e
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9189
		{

			opClass := sqlDollar[1].str
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = tree.IndexElem{Direction: dir, NullsOrder: nullsOrder, OpClass: tree.Name(opClass)}
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9207
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1562:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9208
		{
			sqlVAL.str = ""
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9211
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9212
		{
			sqlVAL.str = ""
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9216
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9220
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9224
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:9230
		{
			sqlVAL.union.val = &tree.ReparentDatabase{Name: tree.Name(sqlDollar[3].str), Parent: tree.Name(sqlDollar[9].str)}
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9236
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9242
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9248
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1572:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9256
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false,
			}
		}
	case 1573:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9262
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true,
			}
		}
	case 1574:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9270
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Locality: sqlDollar[5].union.locality(),
				IfExists: false,
			}
		}
	case 1575:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9278
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Locality: sqlDollar[7].union.locality(),
				IfExists: true,
			}
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9288
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9294
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[6].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9301
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9307
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9313
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[4].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9320
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9326
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9332
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9338
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel:       tree.LocalityLevelRow,
				RegionalByRowColumn: tree.Name(sqlDollar[6].str),
			}
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9347
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.roleSpec(),
				IfExists: false,
			}
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9355
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.roleSpec(),
				IfExists: true,
			}
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9365
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsView: true,
			}
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9371
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[7].str),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9381
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsView: true,
			}
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:9387
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[9].str),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9399
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.roleSpec(),
				IfExists: false,
				IsView:   true,
			}
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9408
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Owner:          sqlDollar[7].union.roleSpec(),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9418
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.roleSpec(),
				IfExists: true,
				IsView:   true,
			}
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:9427
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Owner:          sqlDollar[9].union.roleSpec(),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1595:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9439
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsSequence: true,
			}
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9445
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsSequence: true,
			}
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9453
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[3].union.unresolvedObjectName(),
				Owner:      sqlDollar[6].union.roleSpec(),
				IfExists:   false,
				IsSequence: true,
			}
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9462
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[5].union.unresolvedObjectName(),
				Owner:      sqlDollar[8].union.roleSpec(),
				IfExists:   true,
				IsSequence: true,
			}
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9473
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9479
		{
			name := sqlDollar[4].union.unresolvedObjectName()
			newName := sqlDollar[7].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1601:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9491
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:9497
		{
			name := sqlDollar[6].union.unresolvedObjectName()
			newName := sqlDollar[9].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9511
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9517
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1605:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9525
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9529
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9541
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.roleSpecList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Grant:   sqlDollar[6].union.abbreviatedGrant(),
				IsGrant: true,
			}
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9550
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.roleSpecList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Revoke:  sqlDollar[6].union.abbreviatedRevoke(),
				IsGrant: false,
			}
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9559
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Grant:       sqlDollar[8].union.abbreviatedGrant(),
				IsGrant:     true,
			}
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9568
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Revoke:      sqlDollar[8].union.abbreviatedRevoke(),
				IsGrant:     false,
			}
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9576
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9580
		{
			sqlVAL.union.val = tree.AbbreviatedGrant{
				Privileges:      sqlDollar[2].union.privilegeList(),
				Target:          sqlDollar[4].union.targetObjectType(),
				Grantees:        sqlDollar[6].union.roleSpecList(),
				WithGrantOption: sqlDollar[7].union.bool(),
			}
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9591
		{
			sqlVAL.union.val = true
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9595
		{
			sqlVAL.union.val = false
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9601
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Target:     sqlDollar[4].union.targetObjectType(),
				Grantees:   sqlDollar[6].union.roleSpecList(),
			}
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:9609
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges:     sqlDollar[5].union.privilegeList(),
				Target:         sqlDollar[7].union.targetObjectType(),
				Grantees:       sqlDollar[9].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 1617:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9620
		{
			sqlVAL.union.val = privilege.Tables
		}
	case 1618:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9624
		{
			sqlVAL.union.val = privilege.Sequences
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9628
		{
			sqlVAL.union.val = privilege.Types
		}
	case 1620:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9632
		{
			sqlVAL.union.val = privilege.Schemas
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9636
		{
			sqlVAL.union.val = privilege.Functions
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9640
		{
			return unimplemented(sqllex, "ALTER DEFAULT PRIVILEGES ... ON ROUTINES ...")
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9646
		{
			sqlVAL.union.val = sqlDollar[3].union.roleSpecList()
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9649
		{
			sqlVAL.union.val = tree.RoleSpecList(nil)
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9655
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9659
		{
			sqlVAL.str = ""
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9666
		{
			sqlVAL.union.val = sqlDollar[3].union.objectNamePrefixList()
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9670
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{}
		}
	case 1629:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9675
		{
		}
	case 1630:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9676
		{
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9679
		{
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9680
		{
		}
	case 1633:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9688
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9691
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9701
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1636:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9709
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1637:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9711
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9715
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9718
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9731
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeSchedule,
			}
		}
	case 1641:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9739
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1642:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9741
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.ResumeSchedule,
			}
		}
	case 1643:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9747
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1644:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9760
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.DropSchedule,
			}
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9768
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1646:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9770
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.DropSchedule,
			}
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9776
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1648:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9784
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1649:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9787
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9791
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9792
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1655:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9793
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1657:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9809
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1658:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9812
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9822
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9825
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9829
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9834
		{
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9835
		{
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9836
		{
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9846
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9850
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9853
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9859
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9860
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9864
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9867
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1674:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9871
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9874
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9878
		{
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9879
		{
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9883
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9887
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9893
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9897
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9903
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9907
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9920
		{
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9922
		{
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9926
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9931
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9935
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9939
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9943
		{
			sqlVAL.union.val = tree.TransactionModes{Deferrable: sqlDollar[1].union.deferrableMode()}
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9949
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9955
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9961
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9965
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9971
		{
			sqlVAL.union.val = tree.Deferrable
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9975
		{
			sqlVAL.union.val = tree.NotDeferrable
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-14 : sqlpt+1]
//line sql-gen.y:9985
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:            tree.Name(sqlDollar[3].str),
				Template:        sqlDollar[5].str,
				Encoding:        sqlDollar[6].str,
				Collate:         sqlDollar[7].str,
				CType:           sqlDollar[8].str,
				ConnectionLimit: sqlDollar[9].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[10].str),
				Regions:         sqlDollar[11].union.nameList(),
				SurvivalGoal:    sqlDollar[12].union.survivalGoal(),
				Placement:       sqlDollar[13].union.dataPlacement(),
				Owner:           sqlDollar[14].union.roleSpec(),
			}
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:10001
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists:     true,
				Name:            tree.Name(sqlDollar[6].str),
				Template:        sqlDollar[8].str,
				Encoding:        sqlDollar[9].str,
				Collate:         sqlDollar[10].str,
				CType:           sqlDollar[11].str,
				ConnectionLimit: sqlDollar[12].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[13].str),
				Regions:         sqlDollar[14].union.nameList(),
				SurvivalGoal:    sqlDollar[15].union.survivalGoal(),
				Placement:       sqlDollar[16].union.dataPlacement(),
			}
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10016
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1701:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10021
		{
			sqlVAL.str = ""
		}
	case 1702:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10026
		{
			sqlVAL.str = sqlDollar[4].str
		}
	case 1704:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10033
		{
			sqlVAL.union.val = tree.DataPlacementUnspecified
		}
	case 1705:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10039
		{

			sqlVAL.union.val = tree.DataPlacementRestricted
		}
	case 1706:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10044
		{

			sqlVAL.union.val = tree.DataPlacementDefault
		}
	case 1707:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10051
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1708:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10055
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1709:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10061
		{

		}
	case 1711:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10068
		{
			sqlVAL.union.val = tree.SurvivalGoalRegionFailure
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10072
		{
			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10076
		{

			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10085
		{
			sqlVAL.union.val = tree.SurvivalGoalDefault
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10091
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10095
		{
			sqlVAL.str = ""
		}
	case 1718:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10101
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1719:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10105
		{
			sqlVAL.str = ""
		}
	case 1720:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10111
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1721:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10115
		{
			sqlVAL.str = ""
		}
	case 1722:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10121
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1723:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10125
		{
			sqlVAL.str = ""
		}
	case 1724:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10131
		{
			ret, err := sqlDollar[4].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = ret
		}
	case 1725:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10139
		{
			sqlVAL.union.val = int32(-1)
		}
	case 1726:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10145
		{
			sqlVAL.union = sqlDollar[3].union
		}
	case 1727:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10149
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.CurrentUser,
			}
		}
	case 1728:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10156
		{
		}
	case 1729:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10157
		{
		}
	case 1730:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10172
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1731:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10179
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1732:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10186
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1733:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10197
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1734:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10204
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1735:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10208
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1736:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10217
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1737:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10222
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1738:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10228
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1739:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10232
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1740:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10236
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1741:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10242
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1742:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10246
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1744:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10266
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1745:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10270
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:   tree.NameList(nil),
				DoNothing: true,
			}
		}
	case 1746:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10277
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				DoNothing:        true,
			}
		}
	case 1747:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:10285
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				Exprs:            sqlDollar[10].union.updateExprs(),
				Where:            tree.NewWhere(tree.AstWhere, sqlDollar[11].union.expr()),
			}
		}
	case 1748:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10294
		{
			sqlVAL.union.val = &tree.OnConflict{
				Constraint: tree.Name(sqlDollar[5].str),
				DoNothing:  true,
			}
		}
	case 1749:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:10301
		{
			sqlVAL.union.val = &tree.OnConflict{
				Constraint: tree.Name(sqlDollar[5].str),
				Exprs:      sqlDollar[9].union.updateExprs(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[10].union.expr()),
			}
		}
	case 1750:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10311
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1751:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10316
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1752:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10320
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1753:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:10337
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1754:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10349
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1755:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10352
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1756:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10355
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1757:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10361
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1758:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10365
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1761:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10378
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1762:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10381
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1763:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10385
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1764:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10396
		{
			sqlVAL.union.val = &tree.ReassignOwnedBy{
				OldRoles: sqlDollar[4].union.roleSpecList(),
				NewRole:  sqlDollar[6].union.roleSpec(),
			}
		}
	case 1765:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10402
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 1766:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10411
		{
			sqlVAL.union.val = &tree.DropOwnedBy{
				Roles:        sqlDollar[4].union.roleSpecList(),
				DropBehavior: sqlDollar[5].union.dropBehavior(),
			}
		}
	case 1767:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10417
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 1769:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10458
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1770:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10464
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1771:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10468
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1772:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10483
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1773:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10487
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1774:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10491
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1775:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10495
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1776:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10499
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1777:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10503
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1778:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10507
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1779:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10511
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1780:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10516
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1781:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10517
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1782:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10520
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1783:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10521
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1784:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10525
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1785:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10529
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1786:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10535
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1787:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10544
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1788:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10545
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1789:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10546
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1790:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10547
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1791:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10550
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1792:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10551
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1793:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10554
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1794:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10555
		{
			sqlVAL.union.val = tree.LockWaitSkipLocked
		}
	case 1795:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10556
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1796:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10561
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1800:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10596
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1802:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10597
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1804:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10598
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1806:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10620
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1807:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10633
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1808:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10647
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1809:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10659
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1810:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10663
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1811:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10672
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1812:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10681
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1813:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10696
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1814:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10703
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1815:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10715
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1816:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10719
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1817:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10724
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1818:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10730
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1819:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10734
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1820:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10740
		{
			sqlVAL.union.val = true
		}
	case 1821:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10744
		{
			sqlVAL.union.val = false
		}
	case 1822:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10750
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1823:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10760
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1824:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10772
		{
		}
	case 1825:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10773
		{
		}
	case 1826:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10777
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1827:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10781
		{
			sqlVAL.union.val = nil
		}
	case 1828:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10786
		{
		}
	case 1829:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10787
		{
		}
	case 1830:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10791
		{
			sqlVAL.union.val = true
		}
	case 1831:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10795
		{
			sqlVAL.union.val = false
		}
	case 1832:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10799
		{
			sqlVAL.union.val = false
		}
	case 1833:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10805
		{
			sqlVAL.union.val = true
		}
	case 1834:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10811
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1835:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10816
		{
		}
	case 1836:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10817
		{
		}
	case 1837:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10820
		{
		}
	case 1838:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10821
		{
		}
	case 1839:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10825
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1840:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10829
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1841:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10835
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1842:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10841
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1843:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10845
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1844:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10852
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1845:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10856
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1846:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10862
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1847:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10874
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1848:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10879
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1849:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10891
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1850:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10895
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1851:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10899
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1852:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10905
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1853:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10914
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1856:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10925
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1857:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10926
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1859:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10930
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1860:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10934
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1861:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10938
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1862:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10952
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1863:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10956
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1864:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10964
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1865:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10971
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1869:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10993
		{
		}
	case 1870:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10994
		{
		}
	case 1871:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10997
		{
		}
	case 1872:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10998
		{
		}
	case 1873:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11015
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1874:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11019
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1875:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11024
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1876:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11025
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1877:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11031
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1878:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11032
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "rollup")
		}
	case 1879:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11033
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "cube")
		}
	case 1880:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11034
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "grouping sets")
		}
	case 1881:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11038
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1882:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11042
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1883:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11061
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1884:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11064
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1885:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11066
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1886:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11078
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1887:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11081
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1888:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11083
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1889:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11089
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1890:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11093
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1891:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11099
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1892:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11103
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1893:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11108
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1894:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11113
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1895:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11119
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1896:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11124
		{
			sqlVAL.union.val = &tree.IndexFlags{NoZigzagJoin: true}
		}
	case 1897:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11129
		{
			sqlVAL.union.val = &tree.IndexFlags{NoFullScan: true}
		}
	case 1898:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11134
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1899:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11140
		{
			sqlVAL.union.val = &tree.IndexFlags{ForceZigzag: true}
		}
	case 1900:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11145
		{
			sqlVAL.union.val = &tree.IndexFlags{ZigzagIndexes: []tree.UnrestrictedName{tree.UnrestrictedName(sqlDollar[3].str)}}
		}
	case 1901:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11150
		{

			sqlVAL.union.val = &tree.IndexFlags{ZigzagIndexIDs: []tree.IndexID{tree.IndexID(sqlDollar[4].union.int64())}}
		}
	case 1902:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11157
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1903:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11162
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1904:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11173
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1905:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11177
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1906:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11181
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1907:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11189
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1908:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11223
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1909:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11233
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1910:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11243
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1911:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11251
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1912:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11260
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1913:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11264
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1914:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11268
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1915:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11279
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1916:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11303
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1917:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11309
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1918:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11320
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1919:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11324
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1920:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11330
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1921:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11332
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1922:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11336
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1923:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11342
		{
		}
	case 1924:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11344
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1925:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11347
		{
			sqlVAL.union.val = nil
		}
	case 1926:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11348
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1927:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11349
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1928:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11353
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1929:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11357
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1930:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11363
		{
			sqlVAL.union.val = true
		}
	case 1931:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11367
		{
			sqlVAL.union.val = false
		}
	case 1932:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11387
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1933:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11391
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 1934:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11395
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 1935:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11399
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 1936:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11403
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 1937:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11407
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1938:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11413
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 1939:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11417
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 1941:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11424
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 1942:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11430
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 1944:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11437
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 1945:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11443
		{
			sqlVAL.str = tree.AstFull
		}
	case 1946:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11447
		{
			sqlVAL.str = tree.AstLeft
		}
	case 1947:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11451
		{
			sqlVAL.str = tree.AstRight
		}
	case 1948:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11455
		{
			sqlVAL.str = tree.AstInner
		}
	case 1949:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11461
		{
		}
	case 1950:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11462
		{
		}
	case 1951:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11486
		{
			sqlVAL.str = tree.AstHash
		}
	case 1952:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11490
		{
			sqlVAL.str = tree.AstMerge
		}
	case 1953:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11494
		{
			sqlVAL.str = tree.AstLookup
		}
	case 1954:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11498
		{
			sqlVAL.str = tree.AstInverted
		}
	case 1955:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11502
		{
			sqlVAL.str = ""
		}
	case 1956:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11515
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 1957:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11519
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 1958:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11524
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1959:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11525
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1960:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11526
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 1961:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11527
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 1962:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11531
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 1963:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11536
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 1964:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11550
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1965:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11554
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 1966:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11560
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 1967:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11566
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1968:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11576
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[3].union.indexFlags(),
			}
		}
	case 1969:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11586
		{
			sqlVAL.union.val = true
		}
	case 1970:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11590
		{
			sqlVAL.union.val = false
		}
	case 1971:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11596
		{
			sqlVAL.union.val = true
		}
	case 1972:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11600
		{
			sqlVAL.union.val = false
		}
	case 1973:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11606
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1975:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11613
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1976:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11625
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 1977:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11638
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1978:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11646
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1979:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11647
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1980:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11657
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1981:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11664
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 1982:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11665
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1983:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11667
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 1984:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11675
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1985:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11676
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 1987:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11688
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1988:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11695
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1989:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11704
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.QChar
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 1990:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11744
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.OIDTypeReference{OID: oid.Oid(id)}
		}
	case 1991:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11749
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1996:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11756
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 1997:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11757
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 1998:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11760
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 1999:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11761
		{
			sqlVAL.union.val = geopb.ShapeType_PointM
		}
	case 2000:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11762
		{
			sqlVAL.union.val = geopb.ShapeType_PointZ
		}
	case 2001:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11763
		{
			sqlVAL.union.val = geopb.ShapeType_PointZM
		}
	case 2002:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11764
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 2003:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11765
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringM
		}
	case 2004:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11766
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZ
		}
	case 2005:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11767
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZM
		}
	case 2006:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11768
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 2007:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11769
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonM
		}
	case 2008:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11770
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZ
		}
	case 2009:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11771
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZM
		}
	case 2010:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11772
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 2011:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11773
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointM
		}
	case 2012:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11774
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZ
		}
	case 2013:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11775
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZM
		}
	case 2014:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11776
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 2015:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11777
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringM
		}
	case 2016:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11778
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZ
		}
	case 2017:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11779
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZM
		}
	case 2018:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11780
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 2019:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11781
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonM
		}
	case 2020:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11782
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZ
		}
	case 2021:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11783
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZM
		}
	case 2022:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11784
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 2023:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11785
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionM
		}
	case 2024:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11786
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZ
		}
	case 2025:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11787
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZM
		}
	case 2026:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11788
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 2027:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11789
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryM
		}
	case 2028:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11790
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZ
		}
	case 2029:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11791
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZM
		}
	case 2030:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11794
		{
			sqlVAL.union.val = types.Geography
		}
	case 2031:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11795
		{
			sqlVAL.union.val = types.Geometry
		}
	case 2032:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11796
		{
			sqlVAL.union.val = types.Box2D
		}
	case 2033:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11798
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 2034:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11802
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 2035:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11806
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 2036:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11814
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 2042:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11840
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 2043:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11848
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 2044:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11856
		{
			sqlVAL.union.val = nil
		}
	case 2045:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11863
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 2046:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11867
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 2047:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11871
		{
			sqlVAL.union.val = types.Int2
		}
	case 2048:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11875
		{
			sqlVAL.union.val = types.Int
		}
	case 2049:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11879
		{
			sqlVAL.union.val = types.Float4
		}
	case 2050:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11883
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 2051:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11887
		{
			sqlVAL.union.val = types.Float
		}
	case 2052:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11891
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 2053:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11899
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 2054:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11907
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 2055:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11915
		{
			sqlVAL.union.val = types.Bool
		}
	case 2056:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11921
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 2057:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11934
		{
			sqlVAL.union.val = types.Float
		}
	case 2058:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11940
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 2059:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11946
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 2060:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11954
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 2061:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11958
		{
			sqlVAL.union.val = types.VarBit
		}
	case 2062:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11962
		{
			sqlVAL.union.val = types.VarBit
		}
	case 2063:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11968
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 2064:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11980
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 2065:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11986
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 2066:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11990
		{
			sqlVAL.union.val = types.VarChar
		}
	case 2067:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11994
		{
			sqlVAL.union.val = types.VarChar
		}
	case 2068:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11998
		{
			sqlVAL.union.val = types.String
		}
	case 2071:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12007
		{
			sqlVAL.union.val = true
		}
	case 2072:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12008
		{
			sqlVAL.union.val = false
		}
	case 2073:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12013
		{
			sqlVAL.union.val = types.Date
		}
	case 2074:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12017
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 2075:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12025
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 2076:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12037
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 2077:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12039
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 2078:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12048
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 2079:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12056
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 2080:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12069
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 2081:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12073
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 2082:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12083
		{
			sqlVAL.union.val = true
		}
	case 2083:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12084
		{
			sqlVAL.union.val = false
		}
	case 2084:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12085
		{
			sqlVAL.union.val = false
		}
	case 2085:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12089
		{
			sqlVAL.union.val = types.Interval
		}
	case 2086:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12093
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 2087:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12097
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 2088:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12108
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 2089:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12116
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 2090:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12124
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 2091:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12132
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 2092:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12140
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 2093:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12148
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 2094:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12154
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 2095:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12163
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 2096:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12172
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 2097:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12181
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 2098:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12187
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 2099:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12196
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 2100:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12202
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 2102:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12212
		{
			sqlVAL.union.val = nil
		}
	case 2103:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12218
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 2104:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12226
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 2106:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12263
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 2107:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12267
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 2108:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12271
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 2109:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12275
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 2110:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12286
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2111:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12291
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 2112:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12295
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 2113:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12299
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnarySqrt), Expr: sqlDollar[2].union.expr()}
		}
	case 2114:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12303
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryCbrt), Expr: sqlDollar[2].union.expr()}
		}
	case 2115:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12307
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2116:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12311
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2117:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12315
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2118:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12319
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2119:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12323
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2120:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12327
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2121:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12331
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2122:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12335
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2123:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12339
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2124:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12343
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2125:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12347
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2126:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12351
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2127:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12355
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.JSONExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2128:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12359
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.JSONSomeExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2129:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12363
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.JSONAllExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2130:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12367
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.Contains), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2131:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12371
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.ContainedBy), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2132:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12375
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2133:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12379
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2134:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12383
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2135:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12387
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2136:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12391
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchVal), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2137:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12395
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchText), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2138:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12399
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchValPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2139:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12403
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchTextPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2140:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12407
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 2141:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12411
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 2142:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12415
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.Overlaps), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2143:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12419
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 2144:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12423
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2145:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12427
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2146:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12431
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2147:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12435
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 2148:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12443
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 2149:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12453
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2150:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12457
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2151:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12461
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 2152:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12465
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 2153:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12469
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.Like), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2154:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12473
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2155:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12477
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotLike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2156:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12481
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 2157:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12485
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.ILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2158:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12489
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2159:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12493
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2160:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12497
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 2161:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12501
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.SimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2162:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12505
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 2163:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12509
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotSimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 2164:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12513
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 2165:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12517
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.RegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2166:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12521
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotRegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2167:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12525
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.RegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2168:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12529
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotRegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2169:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12533
		{
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator: treecmp.MakeComparisonOperator(treecmp.EQ),
				Left:     sqlDollar[1].union.expr(),
				Right:    tree.NewNumVal(constant.MakeFloat64(math.NaN()), "NaN", false),
			}
		}
	case 2170:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12541
		{
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator: treecmp.MakeComparisonOperator(treecmp.NE),
				Left:     sqlDollar[1].union.expr(),
				Right:    tree.NewNumVal(constant.MakeFloat64(math.NaN()), "NaN", false),
			}
		}
	case 2171:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12549
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2172:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12553
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2173:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12557
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2174:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12561
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2175:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12565
		{
			t1, t2 := sqlDollar[1].union.tuple(), sqlDollar[3].union.tuple()
			if len(t1.Exprs) != 2 {
				sqllex.Error("wrong number of parameters on left side of OVERLAPS expression")
				return 1
			}
			if len(t2.Exprs) != 2 {
				sqllex.Error("wrong number of parameters on right side of OVERLAPS expression")
				return 1
			}
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("overlaps"), Exprs: tree.Exprs{t1.Exprs[0], t1.Exprs[1], t2.Exprs[0], t2.Exprs[1]}}
		}
	case 2176:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12578
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 2177:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12582
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 2178:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12586
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 2179:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12590
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 2180:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12594
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 2181:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12598
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 2182:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12602
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 2183:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12606
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 2184:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12610
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 2185:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12614
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 2186:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12618
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 2187:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12622
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 2188:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12626
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 2189:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12630
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 2190:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12634
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.In), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2191:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12638
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotIn), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2192:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12642
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(treecmp.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 2193:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12659
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 2194:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12664
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 2196:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12676
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 2197:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12680
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 2198:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12684
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2199:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12688
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 2200:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12692
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 2201:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12696
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2202:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12700
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2203:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12704
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2204:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12708
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2205:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12712
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2206:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12716
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2207:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12720
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2208:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12724
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2209:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12728
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2210:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12732
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2211:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12736
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2212:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12740
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2213:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12744
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2214:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12748
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2215:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12752
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2216:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12756
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2217:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12760
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2218:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12764
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2219:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12768
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2220:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12772
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 2221:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12780
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 2222:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12790
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 2223:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12794
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 2224:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12798
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 2225:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12802
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 2227:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12816
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 2229:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12824
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 2230:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12860
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 2231:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12864
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 2232:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12868
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 2233:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12872
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 2234:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12876
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 2235:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12881
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 2236:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12883
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2237:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12887
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2238:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12891
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 2239:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12895
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 2240:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12899
		{
			sqlVAL.union.val = tree.DNull
		}
	case 2241:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12903
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 2242:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12907
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 2243:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12916
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 2244:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12923
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 2245:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12927
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: tree.Name(sqlDollar[5].str)}
		}
	case 2246:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12931
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			if idx <= 0 {
				err := errors.New("invalid numeric tuple index: indexes must be > 0")
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 2247:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12941
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 2249:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12946
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2250:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12950
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2251:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12954
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 2252:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12958
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 2253:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12962
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2254:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12965
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 2255:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12969
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 2256:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12973
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 2257:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12976
		{
			return unimplemented(sqllex, "variadic")
		}
	case 2258:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:12977
		{
			return unimplemented(sqllex, "variadic")
		}
	case 2259:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12979
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 2260:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12985
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 2261:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12989
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 2262:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12992
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 2263:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13001
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.QChar, SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var err error
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							typ, err = name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 2264:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13054
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 2265:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13067
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 2266:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13079
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2267:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13088
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2268:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13089
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2269:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13094
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 2270:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13098
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2271:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13102
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2272:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13108
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 2273:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13112
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2274:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13116
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2275:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13120
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2276:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13124
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2277:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13128
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2278:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13134
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2279:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13138
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("session_user")}
		}
	case 2280:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13142
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2281:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13146
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 2282:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13150
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 2283:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:13154
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 2284:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:13158
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 2285:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13162
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 2286:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13166
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 2287:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13170
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 2288:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13174
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 2289:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13178
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2290:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13182
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 2292:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13189
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2293:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13192
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2294:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13194
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2295:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13197
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2296:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13199
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2297:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13203
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2298:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13206
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2299:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13208
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2300:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13212
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2301:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13215
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2302:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13217
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2303:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13221
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2304:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13224
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2305:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13226
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2306:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13230
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2307:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13233
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2308:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13235
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2309:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13238
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2310:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13240
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2311:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13243
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2312:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13245
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2313:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13248
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2314:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13250
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2315:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13253
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2316:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13255
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2317:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13258
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2318:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13260
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2319:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13264
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2320:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13267
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2321:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13268
		{
			return unimplemented(sqllex, "treat")
		}
	case 2322:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13270
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2323:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13274
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2324:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13278
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2325:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13282
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2326:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13286
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2327:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13289
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2328:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13291
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2329:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13294
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2330:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13300
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 2331:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13304
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 2332:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13310
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 2333:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13314
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2334:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13321
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 2335:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13325
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 2336:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13331
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 2337:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13335
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 2338:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13341
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 2339:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13349
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 2340:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13353
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 2341:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13357
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 2342:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13364
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 2344:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13384
		{
			sqlVAL.str = ""
		}
	case 2345:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13390
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 2346:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13394
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2347:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13400
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      treewindow.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2348:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13408
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      treewindow.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2349:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13416
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      treewindow.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2350:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13424
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 2351:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13430
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == treewindow.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == treewindow.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 2352:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13443
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == treewindow.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == treewindow.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == treewindow.CurrentRow && endBound.BoundType == treewindow.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == treewindow.OffsetFollowing && endBound.BoundType == treewindow.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == treewindow.OffsetFollowing && endBound.BoundType == treewindow.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 2353:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13471
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: treewindow.UnboundedPreceding}
		}
	case 2354:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13475
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: treewindow.UnboundedFollowing}
		}
	case 2355:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13479
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: treewindow.CurrentRow}
		}
	case 2356:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13483
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  treewindow.OffsetPreceding,
			}
		}
	case 2357:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13490
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  treewindow.OffsetFollowing,
			}
		}
	case 2358:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13499
		{
			sqlVAL.union.val = treewindow.ExcludeCurrentRow
		}
	case 2359:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13503
		{
			sqlVAL.union.val = treewindow.ExcludeGroup
		}
	case 2360:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13507
		{
			sqlVAL.union.val = treewindow.ExcludeTies
		}
	case 2361:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13511
		{

			sqlVAL.union.val = treewindow.NoExclusion
		}
	case 2362:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13516
		{
			sqlVAL.union.val = treewindow.NoExclusion
		}
	case 2363:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13529
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 2364:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13533
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2366:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13540
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 2367:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13552
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Any)
		}
	case 2368:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13556
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Some)
		}
	case 2369:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13560
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.All)
		}
	case 2370:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13576
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Plus)
		}
	case 2371:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13577
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Minus)
		}
	case 2372:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13578
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Mult)
		}
	case 2373:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13579
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Div)
		}
	case 2374:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13580
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Mod)
		}
	case 2375:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13581
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Pow)
		}
	case 2376:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13582
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.LT)
		}
	case 2377:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13583
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.GT)
		}
	case 2378:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13584
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.EQ)
		}
	case 2379:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13585
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.LE)
		}
	case 2380:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13586
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.GE)
		}
	case 2381:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13587
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NE)
		}
	case 2382:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13589
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.JSONExists)
		}
	case 2383:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13590
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Bitand)
		}
	case 2384:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13591
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Bitor)
		}
	case 2385:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13592
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Bitxor)
		}
	case 2386:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13593
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.FloorDiv)
		}
	case 2387:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13594
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Contains)
		}
	case 2388:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13595
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.ContainedBy)
		}
	case 2389:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13596
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.LShift)
		}
	case 2390:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13597
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.RShift)
		}
	case 2391:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13598
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Concat)
		}
	case 2392:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13599
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchVal)
		}
	case 2393:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13600
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchText)
		}
	case 2394:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13601
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchValPath)
		}
	case 2395:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13602
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchTextPath)
		}
	case 2396:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13603
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.JSONSomeExists)
		}
	case 2397:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13604
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.JSONAllExists)
		}
	case 2398:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13605
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotRegMatch)
		}
	case 2399:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13606
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.RegIMatch)
		}
	case 2400:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13607
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotRegIMatch)
		}
	case 2401:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13608
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Overlaps)
		}
	case 2402:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13609
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryComplement)
		}
	case 2403:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13610
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnarySqrt)
		}
	case 2404:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13611
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryCbrt)
		}
	case 2406:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13616
		{

			if sqlDollar[1].str != "pg_catalog" {
				return unimplementedWithIssue(sqllex, 65017)
			}
			sqlVAL.union = sqlDollar[3].union
		}
	case 2407:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13632
		{
			sqlVAL.union = sqlDollar[3].union
		}
	case 2410:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13639
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Like)
		}
	case 2411:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13640
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotLike)
		}
	case 2412:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13641
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.ILike)
		}
	case 2413:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13642
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotILike)
		}
	case 2414:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13665
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2415:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13669
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2416:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13675
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2417:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13679
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2418:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13683
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2419:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13694
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2420:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13698
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2421:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13704
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2422:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13708
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2424:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13715
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2425:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13721
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2426:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13725
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2427:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13731
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 2428:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13735
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 2429:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13741
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2430:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13745
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2431:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13751
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2432:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13755
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2433:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13761
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(strings.ToLower(sqlDollar[1].str)), sqlDollar[3].union.expr()}
		}
	case 2434:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13765
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2443:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13788
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 2444:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13792
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2445:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13796
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2446:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13802
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2447:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13809
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 2448:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13813
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2449:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13830
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2450:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13834
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2451:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13838
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2452:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13842
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 2453:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13846
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2454:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13852
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2455:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13858
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2456:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13864
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 2457:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13868
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 2458:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13872
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2459:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13878
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2461:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13890
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 2462:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13897
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 2463:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13901
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 2464:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13907
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 2465:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13913
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2466:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13917
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2468:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13924
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2469:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13930
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 2470:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13934
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 2472:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13941
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2473:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13947
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 2474:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13951
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 2475:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13956
		{
		}
	case 2476:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13957
		{
		}
	case 2477:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13961
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 2478:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13965
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 2479:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13971
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 2480:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13980
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 2481:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13984
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2482:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13988
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 2485:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14000
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 2486:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14004
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 2487:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14010
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 2488:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14014
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 2489:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14033
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 2490:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14041
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 2491:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14064
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2493:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14073
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2494:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:14077
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2495:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14081
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2496:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14085
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 2497:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14091
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 2498:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14095
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 2503:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14110
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2504:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14114
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2507:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14126
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2508:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14130
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2509:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14139
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2510:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14150
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2511:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14159
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2512:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14167
		{
			var t *types.T
			if sqlDollar[3].union.val == nil {
				t = types.Interval
			} else {
				t = types.MakeInterval(sqlDollar[3].union.intervalTypeMetadata())
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[2].str),
				Type: t,

				SyntaxMode: tree.CastShort,
			}
		}
	case 2513:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:14184
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[5].str),
				Type: types.MakeInterval(
					types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true},
				),

				SyntaxMode: tree.CastShort,
			}
		}
	case 2532:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14269
		{
			sqlVAL.union.val = sqlDollar[1].union.nameList()
		}
	case 2534:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14277
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{SchemaName: tree.Name(sqlDollar[1].str), ExplicitSchema: true}
		}
	case 2535:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14281
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{CatalogName: tree.Name(sqlDollar[1].str), SchemaName: tree.Name(sqlDollar[3].str), ExplicitCatalog: true, ExplicitSchema: true}
		}
	case 2536:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14287
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{sqlDollar[1].union.objectNamePrefix()}
		}
	case 2537:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14291
		{
			sqlVAL.union.val = append(sqlDollar[1].union.objectNamePrefixList(), sqlDollar[3].union.objectNamePrefix())
		}
	case 2538:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14297
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{sqlDollar[1].union.objectNamePrefix()}
		}
	case 2539:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14303
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{CatalogName: tree.Name(sqlDollar[1].str), SchemaName: tree.Name('*'), ExplicitCatalog: true, ExplicitSchema: true}
		}
	case 2541:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14310
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{ExplicitSchema: false}
		}
	case 2547:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14337
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2549:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14344
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2550:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:14348
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2551:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:14352
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2553:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:14366
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2554:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:14370
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2555:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14374
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2556:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14387
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2558:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14396
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2562:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14414
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2563:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14427
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2564:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:14434
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2572:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14459
		{
			sqlVAL.str = ""
		}
	case 2573:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14465
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 2574:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14469
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
