// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/roachpb"
	"github.com/cockroachdb/cockroach/pkg/sql/lex"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
	"github.com/lib/pq/oid"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}
func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

//line sql-gen.y:74

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) functionReference() tree.FunctionReference {
	return u.val.(tree.FunctionReference)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistence() tree.Persistence {
	return u.val.(tree.Persistence)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) targetList() tree.TargetList {
	return u.val.(tree.TargetList)
}
func (u *sqlSymUnion) targetListPtr() *tree.TargetList {
	return u.val.(*tree.TargetList)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() tree.WindowFrameExclusion {
	return u.val.(tree.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) deferrableMode() tree.DeferrableMode {
	return u.val.(tree.DeferrableMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) interleave() *tree.InterleaveDef {
	return u.val.(*tree.InterleaveDef)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() tree.ComparisonOperator {
	return u.val.(tree.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) copyOptions() *tree.CopyOptions {
	return u.val.(*tree.CopyOptions)
}
func (u *sqlSymUnion) restoreOptions() *tree.RestoreOptions {
	return u.val.(*tree.RestoreOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) stringOrPlaceholderOptList() tree.StringOrPlaceholderOptList {
	return u.val.(tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) listOfStringOrPlaceholderOptList() []tree.StringOrPlaceholderOptList {
	return u.val.([]tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) fullBackupClause() *tree.FullBackupClause {
	return u.val.(*tree.FullBackupClause)
}
func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}
func (u *sqlSymUnion) scheduleState() tree.ScheduleState {
	return u.val.(tree.ScheduleState)
}
func (u *sqlSymUnion) executorType() tree.ScheduledJobExecutorType {
	return u.val.(tree.ScheduledJobExecutorType)
}
func (u *sqlSymUnion) refreshDataOption() tree.RefreshDataOption {
	return u.val.(tree.RefreshDataOption)
}

//line sql-gen.y:690
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lex.IDENT
const SCONST = lex.SCONST
const BCONST = lex.BCONST
const BITCONST = lex.BITCONST
const ICONST = lex.ICONST
const FCONST = lex.FCONST
const PLACEHOLDER = lex.PLACEHOLDER
const TYPECAST = lex.TYPECAST
const TYPEANNOTATE = lex.TYPEANNOTATE
const DOT_DOT = lex.DOT_DOT
const LESS_EQUALS = lex.LESS_EQUALS
const GREATER_EQUALS = lex.GREATER_EQUALS
const NOT_EQUALS = lex.NOT_EQUALS
const NOT_REGMATCH = lex.NOT_REGMATCH
const REGIMATCH = lex.REGIMATCH
const NOT_REGIMATCH = lex.NOT_REGIMATCH
const ERROR = lex.ERROR
const ABORT = lex.ABORT
const ACTION = lex.ACTION
const ADD = lex.ADD
const ADMIN = lex.ADMIN
const AFTER = lex.AFTER
const AGGREGATE = lex.AGGREGATE
const ALL = lex.ALL
const ALTER = lex.ALTER
const ALWAYS = lex.ALWAYS
const ANALYSE = lex.ANALYSE
const ANALYZE = lex.ANALYZE
const AND = lex.AND
const AND_AND = lex.AND_AND
const ANY = lex.ANY
const ANNOTATE_TYPE = lex.ANNOTATE_TYPE
const ARRAY = lex.ARRAY
const AS = lex.AS
const ASC = lex.ASC
const ASYMMETRIC = lex.ASYMMETRIC
const AT = lex.AT
const ATTRIBUTE = lex.ATTRIBUTE
const AUTHORIZATION = lex.AUTHORIZATION
const AUTOMATIC = lex.AUTOMATIC
const BACKUP = lex.BACKUP
const BACKUPS = lex.BACKUPS
const BEFORE = lex.BEFORE
const BEGIN = lex.BEGIN
const BETWEEN = lex.BETWEEN
const BIGINT = lex.BIGINT
const BIGSERIAL = lex.BIGSERIAL
const BINARY = lex.BINARY
const BIT = lex.BIT
const BUCKET_COUNT = lex.BUCKET_COUNT
const BOOLEAN = lex.BOOLEAN
const BOTH = lex.BOTH
const BOX2D = lex.BOX2D
const BUNDLE = lex.BUNDLE
const BY = lex.BY
const CACHE = lex.CACHE
const CANCEL = lex.CANCEL
const CANCELQUERY = lex.CANCELQUERY
const CASCADE = lex.CASCADE
const CASE = lex.CASE
const CAST = lex.CAST
const CBRT = lex.CBRT
const CHANGEFEED = lex.CHANGEFEED
const CHAR = lex.CHAR
const CHARACTER = lex.CHARACTER
const CHARACTERISTICS = lex.CHARACTERISTICS
const CHECK = lex.CHECK
const CLOSE = lex.CLOSE
const CLUSTER = lex.CLUSTER
const COALESCE = lex.COALESCE
const COLLATE = lex.COLLATE
const COLLATION = lex.COLLATION
const COLUMN = lex.COLUMN
const COLUMNS = lex.COLUMNS
const COMMENT = lex.COMMENT
const COMMENTS = lex.COMMENTS
const COMMIT = lex.COMMIT
const COMMITTED = lex.COMMITTED
const COMPACT = lex.COMPACT
const COMPLETE = lex.COMPLETE
const CONCAT = lex.CONCAT
const CONCURRENTLY = lex.CONCURRENTLY
const CONFIGURATION = lex.CONFIGURATION
const CONFIGURATIONS = lex.CONFIGURATIONS
const CONFIGURE = lex.CONFIGURE
const CONFLICT = lex.CONFLICT
const CONNECTION = lex.CONNECTION
const CONSTRAINT = lex.CONSTRAINT
const CONSTRAINTS = lex.CONSTRAINTS
const CONTAINS = lex.CONTAINS
const CONTROLCHANGEFEED = lex.CONTROLCHANGEFEED
const CONTROLJOB = lex.CONTROLJOB
const CONVERSION = lex.CONVERSION
const CONVERT = lex.CONVERT
const COPY = lex.COPY
const COVERING = lex.COVERING
const CREATE = lex.CREATE
const CREATEDB = lex.CREATEDB
const CREATELOGIN = lex.CREATELOGIN
const CREATEROLE = lex.CREATEROLE
const CROSS = lex.CROSS
const CUBE = lex.CUBE
const CURRENT = lex.CURRENT
const CURRENT_CATALOG = lex.CURRENT_CATALOG
const CURRENT_DATE = lex.CURRENT_DATE
const CURRENT_SCHEMA = lex.CURRENT_SCHEMA
const CURRENT_ROLE = lex.CURRENT_ROLE
const CURRENT_TIME = lex.CURRENT_TIME
const CURRENT_TIMESTAMP = lex.CURRENT_TIMESTAMP
const CURRENT_USER = lex.CURRENT_USER
const CYCLE = lex.CYCLE
const DATA = lex.DATA
const DATABASE = lex.DATABASE
const DATABASES = lex.DATABASES
const DATE = lex.DATE
const DAY = lex.DAY
const DEC = lex.DEC
const DECIMAL = lex.DECIMAL
const DEFAULT = lex.DEFAULT
const DEFAULTS = lex.DEFAULTS
const DEALLOCATE = lex.DEALLOCATE
const DECLARE = lex.DECLARE
const DEFERRABLE = lex.DEFERRABLE
const DEFERRED = lex.DEFERRED
const DELETE = lex.DELETE
const DESC = lex.DESC
const DESTINATION = lex.DESTINATION
const DETACHED = lex.DETACHED
const DISCARD = lex.DISCARD
const DISTINCT = lex.DISTINCT
const DO = lex.DO
const DOMAIN = lex.DOMAIN
const DOUBLE = lex.DOUBLE
const DROP = lex.DROP
const ELSE = lex.ELSE
const ENCODING = lex.ENCODING
const ENCRYPTION_PASSPHRASE = lex.ENCRYPTION_PASSPHRASE
const END = lex.END
const ENUM = lex.ENUM
const ENUMS = lex.ENUMS
const ESCAPE = lex.ESCAPE
const EXCEPT = lex.EXCEPT
const EXCLUDE = lex.EXCLUDE
const EXCLUDING = lex.EXCLUDING
const EXISTS = lex.EXISTS
const EXECUTE = lex.EXECUTE
const EXECUTION = lex.EXECUTION
const EXPERIMENTAL = lex.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lex.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lex.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lex.EXPERIMENTAL_AUDIT
const EXPIRATION = lex.EXPIRATION
const EXPLAIN = lex.EXPLAIN
const EXPORT = lex.EXPORT
const EXTENSION = lex.EXTENSION
const EXTRACT = lex.EXTRACT
const EXTRACT_DURATION = lex.EXTRACT_DURATION
const FALSE = lex.FALSE
const FAMILY = lex.FAMILY
const FETCH = lex.FETCH
const FETCHVAL = lex.FETCHVAL
const FETCHTEXT = lex.FETCHTEXT
const FETCHVAL_PATH = lex.FETCHVAL_PATH
const FETCHTEXT_PATH = lex.FETCHTEXT_PATH
const FILES = lex.FILES
const FILTER = lex.FILTER
const FIRST = lex.FIRST
const FLOAT = lex.FLOAT
const FLOAT4 = lex.FLOAT4
const FLOAT8 = lex.FLOAT8
const FLOORDIV = lex.FLOORDIV
const FOLLOWING = lex.FOLLOWING
const FOR = lex.FOR
const FORCE_INDEX = lex.FORCE_INDEX
const FOREIGN = lex.FOREIGN
const FROM = lex.FROM
const FULL = lex.FULL
const FUNCTION = lex.FUNCTION
const GENERATED = lex.GENERATED
const GEOGRAPHY = lex.GEOGRAPHY
const GEOMETRY = lex.GEOMETRY
const GEOMETRYM = lex.GEOMETRYM
const GEOMETRYZ = lex.GEOMETRYZ
const GEOMETRYZM = lex.GEOMETRYZM
const GEOMETRYCOLLECTION = lex.GEOMETRYCOLLECTION
const GEOMETRYCOLLECTIONM = lex.GEOMETRYCOLLECTIONM
const GEOMETRYCOLLECTIONZ = lex.GEOMETRYCOLLECTIONZ
const GEOMETRYCOLLECTIONZM = lex.GEOMETRYCOLLECTIONZM
const GLOBAL = lex.GLOBAL
const GRANT = lex.GRANT
const GRANTS = lex.GRANTS
const GREATEST = lex.GREATEST
const GROUP = lex.GROUP
const GROUPING = lex.GROUPING
const GROUPS = lex.GROUPS
const HAVING = lex.HAVING
const HASH = lex.HASH
const HIGH = lex.HIGH
const HISTOGRAM = lex.HISTOGRAM
const HOUR = lex.HOUR
const IDENTITY = lex.IDENTITY
const IF = lex.IF
const IFERROR = lex.IFERROR
const IFNULL = lex.IFNULL
const IGNORE_FOREIGN_KEYS = lex.IGNORE_FOREIGN_KEYS
const ILIKE = lex.ILIKE
const IMMEDIATE = lex.IMMEDIATE
const IMPORT = lex.IMPORT
const IN = lex.IN
const INCLUDE = lex.INCLUDE
const INCLUDING = lex.INCLUDING
const INCREMENT = lex.INCREMENT
const INCREMENTAL = lex.INCREMENTAL
const INET = lex.INET
const INET_CONTAINED_BY_OR_EQUALS = lex.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lex.INET_CONTAINS_OR_EQUALS
const INDEX = lex.INDEX
const INDEXES = lex.INDEXES
const INJECT = lex.INJECT
const INTERLEAVE = lex.INTERLEAVE
const INITIALLY = lex.INITIALLY
const INNER = lex.INNER
const INSERT = lex.INSERT
const INT = lex.INT
const INTEGER = lex.INTEGER
const INTERSECT = lex.INTERSECT
const INTERVAL = lex.INTERVAL
const INTO = lex.INTO
const INTO_DB = lex.INTO_DB
const INVERTED = lex.INVERTED
const IS = lex.IS
const ISERROR = lex.ISERROR
const ISNULL = lex.ISNULL
const ISOLATION = lex.ISOLATION
const JOB = lex.JOB
const JOBS = lex.JOBS
const JOIN = lex.JOIN
const JSON = lex.JSON
const JSONB = lex.JSONB
const JSON_SOME_EXISTS = lex.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lex.JSON_ALL_EXISTS
const KEY = lex.KEY
const KEYS = lex.KEYS
const KMS = lex.KMS
const KV = lex.KV
const LANGUAGE = lex.LANGUAGE
const LAST = lex.LAST
const LATERAL = lex.LATERAL
const LATEST = lex.LATEST
const LC_CTYPE = lex.LC_CTYPE
const LC_COLLATE = lex.LC_COLLATE
const LEADING = lex.LEADING
const LEASE = lex.LEASE
const LEAST = lex.LEAST
const LEFT = lex.LEFT
const LESS = lex.LESS
const LEVEL = lex.LEVEL
const LIKE = lex.LIKE
const LIMIT = lex.LIMIT
const LINESTRING = lex.LINESTRING
const LINESTRINGM = lex.LINESTRINGM
const LINESTRINGZ = lex.LINESTRINGZ
const LINESTRINGZM = lex.LINESTRINGZM
const LIST = lex.LIST
const LOCAL = lex.LOCAL
const LOCALTIME = lex.LOCALTIME
const LOCALTIMESTAMP = lex.LOCALTIMESTAMP
const LOCKED = lex.LOCKED
const LOGIN = lex.LOGIN
const LOOKUP = lex.LOOKUP
const LOW = lex.LOW
const LSHIFT = lex.LSHIFT
const MATCH = lex.MATCH
const MATERIALIZED = lex.MATERIALIZED
const MERGE = lex.MERGE
const MINVALUE = lex.MINVALUE
const MAXVALUE = lex.MAXVALUE
const MINUTE = lex.MINUTE
const MODIFYCLUSTERSETTING = lex.MODIFYCLUSTERSETTING
const MONTH = lex.MONTH
const MULTILINESTRING = lex.MULTILINESTRING
const MULTILINESTRINGM = lex.MULTILINESTRINGM
const MULTILINESTRINGZ = lex.MULTILINESTRINGZ
const MULTILINESTRINGZM = lex.MULTILINESTRINGZM
const MULTIPOINT = lex.MULTIPOINT
const MULTIPOINTM = lex.MULTIPOINTM
const MULTIPOINTZ = lex.MULTIPOINTZ
const MULTIPOINTZM = lex.MULTIPOINTZM
const MULTIPOLYGON = lex.MULTIPOLYGON
const MULTIPOLYGONM = lex.MULTIPOLYGONM
const MULTIPOLYGONZ = lex.MULTIPOLYGONZ
const MULTIPOLYGONZM = lex.MULTIPOLYGONZM
const NAN = lex.NAN
const NAME = lex.NAME
const NAMES = lex.NAMES
const NATURAL = lex.NATURAL
const NEVER = lex.NEVER
const NEXT = lex.NEXT
const NO = lex.NO
const NOCANCELQUERY = lex.NOCANCELQUERY
const NOCONTROLCHANGEFEED = lex.NOCONTROLCHANGEFEED
const NOCONTROLJOB = lex.NOCONTROLJOB
const NOCREATEDB = lex.NOCREATEDB
const NOCREATELOGIN = lex.NOCREATELOGIN
const NOCREATEROLE = lex.NOCREATEROLE
const NOLOGIN = lex.NOLOGIN
const NOMODIFYCLUSTERSETTING = lex.NOMODIFYCLUSTERSETTING
const NO_INDEX_JOIN = lex.NO_INDEX_JOIN
const NONE = lex.NONE
const NORMAL = lex.NORMAL
const NOT = lex.NOT
const NOTHING = lex.NOTHING
const NOTNULL = lex.NOTNULL
const NOVIEWACTIVITY = lex.NOVIEWACTIVITY
const NOWAIT = lex.NOWAIT
const NULL = lex.NULL
const NULLIF = lex.NULLIF
const NULLS = lex.NULLS
const NUMERIC = lex.NUMERIC
const OF = lex.OF
const OFF = lex.OFF
const OFFSET = lex.OFFSET
const OID = lex.OID
const OIDS = lex.OIDS
const OIDVECTOR = lex.OIDVECTOR
const ON = lex.ON
const ONLY = lex.ONLY
const OPT = lex.OPT
const OPTION = lex.OPTION
const OPTIONS = lex.OPTIONS
const OR = lex.OR
const ORDER = lex.ORDER
const ORDINALITY = lex.ORDINALITY
const OTHERS = lex.OTHERS
const OUT = lex.OUT
const OUTER = lex.OUTER
const OVER = lex.OVER
const OVERLAPS = lex.OVERLAPS
const OVERLAY = lex.OVERLAY
const OWNED = lex.OWNED
const OWNER = lex.OWNER
const OPERATOR = lex.OPERATOR
const PARENT = lex.PARENT
const PARTIAL = lex.PARTIAL
const PARTITION = lex.PARTITION
const PARTITIONS = lex.PARTITIONS
const PASSWORD = lex.PASSWORD
const PAUSE = lex.PAUSE
const PAUSED = lex.PAUSED
const PHYSICAL = lex.PHYSICAL
const PLACING = lex.PLACING
const PLAN = lex.PLAN
const PLANS = lex.PLANS
const POINT = lex.POINT
const POINTM = lex.POINTM
const POINTZ = lex.POINTZ
const POINTZM = lex.POINTZM
const POLYGON = lex.POLYGON
const POLYGONM = lex.POLYGONM
const POLYGONZ = lex.POLYGONZ
const POLYGONZM = lex.POLYGONZM
const POSITION = lex.POSITION
const PRECEDING = lex.PRECEDING
const PRECISION = lex.PRECISION
const PREPARE = lex.PREPARE
const PRESERVE = lex.PRESERVE
const PRIMARY = lex.PRIMARY
const PRIORITY = lex.PRIORITY
const PROCEDURAL = lex.PROCEDURAL
const PUBLIC = lex.PUBLIC
const PUBLICATION = lex.PUBLICATION
const QUERIES = lex.QUERIES
const QUERY = lex.QUERY
const RANGE = lex.RANGE
const RANGES = lex.RANGES
const READ = lex.READ
const REAL = lex.REAL
const REASSIGN = lex.REASSIGN
const RECURSIVE = lex.RECURSIVE
const RECURRING = lex.RECURRING
const REF = lex.REF
const REFERENCES = lex.REFERENCES
const REFRESH = lex.REFRESH
const REGCLASS = lex.REGCLASS
const REGPROC = lex.REGPROC
const REGPROCEDURE = lex.REGPROCEDURE
const REGNAMESPACE = lex.REGNAMESPACE
const REGTYPE = lex.REGTYPE
const REINDEX = lex.REINDEX
const REMOVE_PATH = lex.REMOVE_PATH
const RENAME = lex.RENAME
const REPEATABLE = lex.REPEATABLE
const REPLACE = lex.REPLACE
const RELEASE = lex.RELEASE
const RESET = lex.RESET
const RESTORE = lex.RESTORE
const RESTRICT = lex.RESTRICT
const RESUME = lex.RESUME
const RETURNING = lex.RETURNING
const RETRY = lex.RETRY
const REVISION_HISTORY = lex.REVISION_HISTORY
const REVOKE = lex.REVOKE
const RIGHT = lex.RIGHT
const ROLE = lex.ROLE
const ROLES = lex.ROLES
const ROLLBACK = lex.ROLLBACK
const ROLLUP = lex.ROLLUP
const ROW = lex.ROW
const ROWS = lex.ROWS
const RSHIFT = lex.RSHIFT
const RULE = lex.RULE
const RUNNING = lex.RUNNING
const SAVEPOINT = lex.SAVEPOINT
const SCATTER = lex.SCATTER
const SCHEDULE = lex.SCHEDULE
const SCHEDULES = lex.SCHEDULES
const SCHEMA = lex.SCHEMA
const SCHEMAS = lex.SCHEMAS
const SCRUB = lex.SCRUB
const SEARCH = lex.SEARCH
const SECOND = lex.SECOND
const SELECT = lex.SELECT
const SEQUENCE = lex.SEQUENCE
const SEQUENCES = lex.SEQUENCES
const SERIALIZABLE = lex.SERIALIZABLE
const SERVER = lex.SERVER
const SESSION = lex.SESSION
const SESSIONS = lex.SESSIONS
const SESSION_USER = lex.SESSION_USER
const SET = lex.SET
const SETTING = lex.SETTING
const SETTINGS = lex.SETTINGS
const SHARE = lex.SHARE
const SHOW = lex.SHOW
const SIMILAR = lex.SIMILAR
const SIMPLE = lex.SIMPLE
const SKIP = lex.SKIP
const SKIP_MISSING_FOREIGN_KEYS = lex.SKIP_MISSING_FOREIGN_KEYS
const SKIP_MISSING_SEQUENCES = lex.SKIP_MISSING_SEQUENCES
const SKIP_MISSING_SEQUENCE_OWNERS = lex.SKIP_MISSING_SEQUENCE_OWNERS
const SKIP_MISSING_VIEWS = lex.SKIP_MISSING_VIEWS
const SMALLINT = lex.SMALLINT
const SMALLSERIAL = lex.SMALLSERIAL
const SNAPSHOT = lex.SNAPSHOT
const SOME = lex.SOME
const SPLIT = lex.SPLIT
const SQL = lex.SQL
const START = lex.START
const STATISTICS = lex.STATISTICS
const STATUS = lex.STATUS
const STDIN = lex.STDIN
const STRICT = lex.STRICT
const STRING = lex.STRING
const STORAGE = lex.STORAGE
const STORE = lex.STORE
const STORED = lex.STORED
const STORING = lex.STORING
const SUBSTRING = lex.SUBSTRING
const SYMMETRIC = lex.SYMMETRIC
const SYNTAX = lex.SYNTAX
const SYSTEM = lex.SYSTEM
const SQRT = lex.SQRT
const SUBSCRIPTION = lex.SUBSCRIPTION
const TABLE = lex.TABLE
const TABLES = lex.TABLES
const TEMP = lex.TEMP
const TEMPLATE = lex.TEMPLATE
const TEMPORARY = lex.TEMPORARY
const TENANT = lex.TENANT
const TESTING_RELOCATE = lex.TESTING_RELOCATE
const EXPERIMENTAL_RELOCATE = lex.EXPERIMENTAL_RELOCATE
const TEXT = lex.TEXT
const THEN = lex.THEN
const TIES = lex.TIES
const TIME = lex.TIME
const TIMETZ = lex.TIMETZ
const TIMESTAMP = lex.TIMESTAMP
const TIMESTAMPTZ = lex.TIMESTAMPTZ
const TO = lex.TO
const THROTTLING = lex.THROTTLING
const TRAILING = lex.TRAILING
const TRACE = lex.TRACE
const TRANSACTION = lex.TRANSACTION
const TRANSACTIONS = lex.TRANSACTIONS
const TREAT = lex.TREAT
const TRIGGER = lex.TRIGGER
const TRIM = lex.TRIM
const TRUE = lex.TRUE
const TRUNCATE = lex.TRUNCATE
const TRUSTED = lex.TRUSTED
const TYPE = lex.TYPE
const TYPES = lex.TYPES
const TRACING = lex.TRACING
const UNBOUNDED = lex.UNBOUNDED
const UNCOMMITTED = lex.UNCOMMITTED
const UNION = lex.UNION
const UNIQUE = lex.UNIQUE
const UNKNOWN = lex.UNKNOWN
const UNLOGGED = lex.UNLOGGED
const UNSPLIT = lex.UNSPLIT
const UPDATE = lex.UPDATE
const UPSERT = lex.UPSERT
const UNTIL = lex.UNTIL
const USE = lex.USE
const USER = lex.USER
const USERS = lex.USERS
const USING = lex.USING
const UUID = lex.UUID
const VALID = lex.VALID
const VALIDATE = lex.VALIDATE
const VALUE = lex.VALUE
const VALUES = lex.VALUES
const VARBIT = lex.VARBIT
const VARCHAR = lex.VARCHAR
const VARIADIC = lex.VARIADIC
const VIEW = lex.VIEW
const VARYING = lex.VARYING
const VIEWACTIVITY = lex.VIEWACTIVITY
const VIRTUAL = lex.VIRTUAL
const WHEN = lex.WHEN
const WHERE = lex.WHERE
const WINDOW = lex.WINDOW
const WITH = lex.WITH
const WITHIN = lex.WITHIN
const WITHOUT = lex.WITHOUT
const WORK = lex.WORK
const WRITE = lex.WRITE
const YEAR = lex.YEAR
const ZONE = lex.ZONE
const NOT_LA = lex.NOT_LA
const WITH_LA = lex.WITH_LA
const AS_LA = lex.AS_LA
const GENERATED_ALWAYS = lex.GENERATED_ALWAYS
const CONTAINED_BY = lex.CONTAINED_BY
const POSTFIXOP = lex.POSTFIXOP
const UMINUS = lex.UMINUS
const HELPTOKEN = lex.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASYMMETRIC",
	"AT",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"BACKUP",
	"BACKUPS",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BINARY",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BOX2D",
	"BUNDLE",
	"BY",
	"CACHE",
	"CANCEL",
	"CANCELQUERY",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONNECTION",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONTROLCHANGEFEED",
	"CONTROLJOB",
	"CONVERSION",
	"CONVERT",
	"COPY",
	"COVERING",
	"CREATE",
	"CREATEDB",
	"CREATELOGIN",
	"CREATEROLE",
	"CROSS",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DESC",
	"DESTINATION",
	"DETACHED",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ENUMS",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXECUTION",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE_INDEX",
	"FOREIGN",
	"FROM",
	"FULL",
	"FUNCTION",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYM",
	"GEOMETRYZ",
	"GEOMETRYZM",
	"GEOMETRYCOLLECTION",
	"GEOMETRYCOLLECTIONM",
	"GEOMETRYCOLLECTIONZ",
	"GEOMETRYCOLLECTIONZM",
	"GLOBAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HIGH",
	"HISTOGRAM",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDING",
	"INCREMENT",
	"INCREMENTAL",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INJECT",
	"INTERLEAVE",
	"INITIALLY",
	"INNER",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INTO_DB",
	"INVERTED",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KMS",
	"KV",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LATEST",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LINESTRINGM",
	"LINESTRINGZ",
	"LINESTRINGZM",
	"LIST",
	"LOCAL",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"MINUTE",
	"MODIFYCLUSTERSETTING",
	"MONTH",
	"MULTILINESTRING",
	"MULTILINESTRINGM",
	"MULTILINESTRINGZ",
	"MULTILINESTRINGZM",
	"MULTIPOINT",
	"MULTIPOINTM",
	"MULTIPOINTZ",
	"MULTIPOINTZM",
	"MULTIPOLYGON",
	"MULTIPOLYGONM",
	"MULTIPOLYGONZ",
	"MULTIPOLYGONZM",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEVER",
	"NEXT",
	"NO",
	"NOCANCELQUERY",
	"NOCONTROLCHANGEFEED",
	"NOCONTROLJOB",
	"NOCREATEDB",
	"NOCREATELOGIN",
	"NOCREATEROLE",
	"NOLOGIN",
	"NOMODIFYCLUSTERSETTING",
	"NO_INDEX_JOIN",
	"NONE",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOVIEWACTIVITY",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PAUSED",
	"PHYSICAL",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POINTM",
	"POINTZ",
	"POINTZM",
	"POLYGON",
	"POLYGONM",
	"POLYGONZ",
	"POLYGONZM",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIORITY",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"REASSIGN",
	"RECURSIVE",
	"RECURRING",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REGCLASS",
	"REGPROC",
	"REGPROCEDURE",
	"REGNAMESPACE",
	"REGTYPE",
	"REINDEX",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"RELEASE",
	"RESET",
	"RESTORE",
	"RESTRICT",
	"RESUME",
	"RETURNING",
	"RETRY",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"RUNNING",
	"SAVEPOINT",
	"SCATTER",
	"SCHEDULE",
	"SCHEDULES",
	"SCHEMA",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SKIP_MISSING_FOREIGN_KEYS",
	"SKIP_MISSING_SEQUENCES",
	"SKIP_MISSING_SEQUENCE_OWNERS",
	"SKIP_MISSING_VIEWS",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"START",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"TABLE",
	"TABLES",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TENANT",
	"TESTING_RELOCATE",
	"EXPERIMENTAL_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TRANSACTIONS",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TYPES",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIEWACTIVITY",
	"VIRTUAL",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"'{'",
	"'}'",
	"':'",
}
var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:11964

//line yacctab:1
var sqlExca = [...]int{
	-1, 0,
	1, 33,
	-2, 1354,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 71,
	231, 206,
	482, 206,
	-2, 0,
	-1, 81,
	220, 1152,
	233, 1152,
	249, 344,
	372, 344,
	382, 934,
	414, 344,
	426, 934,
	467, 934,
	493, 344,
	519, 934,
	-2, 0,
	-1, 87,
	249, 348,
	-2, 0,
	-1, 88,
	128, 1354,
	226, 1354,
	504, 1354,
	505, 1354,
	-2, 0,
	-1, 104,
	145, 1325,
	163, 1325,
	176, 1325,
	229, 1325,
	262, 1325,
	325, 1325,
	335, 1325,
	499, 1325,
	-2, 1296,
	-1, 140,
	153, 812,
	248, 812,
	375, 781,
	431, 781,
	485, 812,
	487, 781,
	-2, 0,
	-1, 142,
	4, 1356,
	21, 1356,
	22, 1356,
	23, 1356,
	24, 1356,
	25, 1356,
	26, 1356,
	28, 1356,
	29, 1356,
	35, 1356,
	40, 1356,
	41, 1356,
	43, 1356,
	44, 1356,
	45, 1356,
	46, 1356,
	47, 1356,
	48, 1356,
	49, 1356,
	51, 1356,
	52, 1356,
	53, 1356,
	54, 1356,
	56, 1356,
	57, 1356,
	58, 1356,
	59, 1356,
	60, 1356,
	61, 1356,
	62, 1356,
	66, 1356,
	67, 1356,
	68, 1356,
	69, 1356,
	71, 1356,
	72, 1356,
	73, 1356,
	77, 1356,
	78, 1356,
	79, 1356,
	80, 1356,
	81, 1356,
	82, 1356,
	83, 1356,
	86, 1356,
	87, 1356,
	88, 1356,
	89, 1356,
	90, 1356,
	92, 1356,
	94, 1356,
	95, 1356,
	96, 1356,
	97, 1356,
	98, 1356,
	99, 1356,
	101, 1356,
	102, 1356,
	103, 1356,
	105, 1356,
	106, 1356,
	114, 1356,
	115, 1356,
	116, 1356,
	117, 1356,
	119, 1356,
	120, 1356,
	121, 1356,
	123, 1356,
	124, 1356,
	125, 1356,
	127, 1356,
	128, 1356,
	130, 1356,
	131, 1356,
	132, 1356,
	135, 1356,
	136, 1356,
	137, 1356,
	139, 1356,
	140, 1356,
	142, 1356,
	143, 1356,
	144, 1356,
	146, 1356,
	147, 1356,
	148, 1356,
	149, 1356,
	150, 1356,
	151, 1356,
	152, 1356,
	153, 1356,
	154, 1356,
	155, 1356,
	156, 1356,
	157, 1356,
	158, 1356,
	159, 1356,
	160, 1356,
	162, 1356,
	168, 1356,
	169, 1356,
	170, 1356,
	171, 1356,
	175, 1356,
	177, 1356,
	181, 1356,
	182, 1356,
	183, 1356,
	184, 1356,
	185, 1356,
	186, 1356,
	187, 1356,
	188, 1356,
	189, 1356,
	190, 1356,
	191, 1356,
	192, 1356,
	194, 1356,
	195, 1356,
	197, 1356,
	198, 1356,
	200, 1356,
	201, 1356,
	202, 1356,
	203, 1356,
	204, 1356,
	205, 1356,
	206, 1356,
	207, 1356,
	208, 1356,
	210, 1356,
	211, 1356,
	213, 1356,
	214, 1356,
	215, 1356,
	216, 1356,
	220, 1356,
	221, 1356,
	222, 1356,
	223, 1356,
	226, 1356,
	227, 1356,
	228, 1356,
	230, 1356,
	232, 1356,
	233, 1356,
	235, 1356,
	237, 1356,
	238, 1356,
	239, 1356,
	241, 1356,
	245, 1356,
	246, 1356,
	247, 1356,
	248, 1356,
	249, 1356,
	250, 1356,
	252, 1356,
	253, 1356,
	254, 1356,
	256, 1356,
	257, 1356,
	259, 1356,
	260, 1356,
	263, 1356,
	267, 1356,
	268, 1356,
	271, 1356,
	272, 1356,
	273, 1356,
	274, 1356,
	276, 1356,
	277, 1356,
	278, 1356,
	279, 1356,
	280, 1356,
	281, 1356,
	282, 1356,
	283, 1356,
	284, 1356,
	285, 1356,
	286, 1356,
	287, 1356,
	288, 1356,
	289, 1356,
	290, 1356,
	291, 1356,
	292, 1356,
	293, 1356,
	294, 1356,
	295, 1356,
	296, 1356,
	298, 1356,
	300, 1356,
	301, 1356,
	302, 1356,
	303, 1356,
	304, 1356,
	305, 1356,
	306, 1356,
	307, 1356,
	308, 1356,
	309, 1356,
	310, 1356,
	311, 1356,
	313, 1356,
	315, 1356,
	317, 1356,
	318, 1356,
	320, 1356,
	321, 1356,
	322, 1356,
	323, 1356,
	324, 1356,
	327, 1356,
	330, 1356,
	331, 1356,
	332, 1356,
	333, 1356,
	336, 1356,
	337, 1356,
	338, 1356,
	340, 1356,
	342, 1356,
	343, 1356,
	344, 1356,
	345, 1356,
	346, 1356,
	347, 1356,
	348, 1356,
	349, 1356,
	350, 1356,
	351, 1356,
	352, 1356,
	353, 1356,
	355, 1356,
	356, 1356,
	357, 1356,
	358, 1356,
	359, 1356,
	360, 1356,
	361, 1356,
	362, 1356,
	363, 1356,
	364, 1356,
	365, 1356,
	366, 1356,
	367, 1356,
	368, 1356,
	369, 1356,
	371, 1356,
	373, 1356,
	374, 1356,
	375, 1356,
	376, 1356,
	377, 1356,
	378, 1356,
	379, 1356,
	380, 1356,
	381, 1356,
	382, 1356,
	383, 1356,
	384, 1356,
	386, 1356,
	392, 1356,
	394, 1356,
	395, 1356,
	396, 1356,
	397, 1356,
	398, 1356,
	399, 1356,
	400, 1356,
	401, 1356,
	403, 1356,
	404, 1356,
	405, 1356,
	407, 1356,
	408, 1356,
	409, 1356,
	410, 1356,
	411, 1356,
	412, 1356,
	414, 1356,
	415, 1356,
	416, 1356,
	417, 1356,
	418, 1356,
	419, 1356,
	420, 1356,
	421, 1356,
	422, 1356,
	423, 1356,
	424, 1356,
	426, 1356,
	427, 1356,
	428, 1356,
	429, 1356,
	430, 1356,
	431, 1356,
	433, 1356,
	434, 1356,
	435, 1356,
	436, 1356,
	437, 1356,
	439, 1356,
	440, 1356,
	441, 1356,
	442, 1356,
	443, 1356,
	444, 1356,
	445, 1356,
	447, 1356,
	449, 1356,
	450, 1356,
	451, 1356,
	452, 1356,
	453, 1356,
	454, 1356,
	455, 1356,
	456, 1356,
	457, 1356,
	458, 1356,
	459, 1356,
	460, 1356,
	461, 1356,
	463, 1356,
	464, 1356,
	466, 1356,
	468, 1356,
	469, 1356,
	470, 1356,
	471, 1356,
	472, 1356,
	473, 1356,
	474, 1356,
	475, 1356,
	477, 1356,
	478, 1356,
	479, 1356,
	480, 1356,
	481, 1356,
	483, 1356,
	485, 1356,
	486, 1356,
	487, 1356,
	488, 1356,
	489, 1356,
	490, 1356,
	492, 1356,
	493, 1356,
	494, 1356,
	495, 1356,
	497, 1356,
	498, 1356,
	501, 1356,
	502, 1356,
	503, 1356,
	504, 1356,
	505, 1356,
	506, 1356,
	507, 1356,
	509, 1356,
	512, 1356,
	513, 1356,
	514, 1356,
	515, 1356,
	516, 1356,
	517, 1356,
	519, 1356,
	520, 1356,
	521, 1356,
	522, 1356,
	527, 1356,
	528, 1356,
	529, 1356,
	530, 1356,
	531, 1356,
	532, 1356,
	-2, 0,
	-1, 143,
	1, 1225,
	126, 1225,
	237, 1225,
	314, 1225,
	371, 1225,
	379, 1225,
	535, 1225,
	559, 1225,
	-2, 0,
	-1, 145,
	1, 1225,
	559, 1225,
	-2, 0,
	-1, 146,
	1, 1225,
	559, 1225,
	-2, 0,
	-1, 147,
	1, 1225,
	482, 1225,
	559, 1225,
	-2, 0,
	-1, 176,
	145, 1324,
	163, 1324,
	176, 1324,
	229, 1324,
	262, 1324,
	325, 1324,
	335, 1324,
	499, 1324,
	-2, 1299,
	-1, 214,
	4, 1363,
	5, 1363,
	6, 1363,
	7, 1363,
	8, 1363,
	9, 1363,
	10, 1363,
	21, 1363,
	22, 1363,
	23, 1363,
	24, 1363,
	25, 1363,
	26, 1363,
	28, 1363,
	29, 1363,
	35, 1363,
	36, 1363,
	40, 1363,
	41, 1363,
	42, 1363,
	43, 1363,
	44, 1363,
	45, 1363,
	46, 1363,
	47, 1363,
	48, 1363,
	49, 1363,
	51, 1363,
	52, 1363,
	53, 1363,
	54, 1363,
	56, 1363,
	57, 1363,
	58, 1363,
	59, 1363,
	60, 1363,
	61, 1363,
	62, 1363,
	63, 1363,
	64, 1363,
	65, 1363,
	66, 1363,
	67, 1363,
	68, 1363,
	69, 1363,
	71, 1363,
	72, 1363,
	73, 1363,
	75, 1363,
	77, 1363,
	78, 1363,
	79, 1363,
	80, 1363,
	81, 1363,
	82, 1363,
	83, 1363,
	86, 1363,
	87, 1363,
	88, 1363,
	89, 1363,
	90, 1363,
	92, 1363,
	94, 1363,
	95, 1363,
	96, 1363,
	97, 1363,
	98, 1363,
	99, 1363,
	101, 1363,
	102, 1363,
	103, 1363,
	104, 1363,
	105, 1363,
	106, 1363,
	107, 1363,
	108, 1363,
	109, 1363,
	110, 1363,
	111, 1363,
	112, 1363,
	113, 1363,
	114, 1363,
	115, 1363,
	116, 1363,
	117, 1363,
	118, 1363,
	119, 1363,
	120, 1363,
	121, 1363,
	122, 1363,
	123, 1363,
	124, 1363,
	125, 1363,
	127, 1363,
	128, 1363,
	130, 1363,
	131, 1363,
	132, 1363,
	135, 1363,
	136, 1363,
	137, 1363,
	139, 1363,
	140, 1363,
	142, 1363,
	143, 1363,
	144, 1363,
	146, 1363,
	147, 1363,
	148, 1363,
	149, 1363,
	150, 1363,
	151, 1363,
	152, 1363,
	153, 1363,
	154, 1363,
	155, 1363,
	156, 1363,
	157, 1363,
	158, 1363,
	159, 1363,
	160, 1363,
	161, 1363,
	162, 1363,
	168, 1363,
	169, 1363,
	170, 1363,
	171, 1363,
	175, 1363,
	177, 1363,
	180, 1363,
	181, 1363,
	182, 1363,
	183, 1363,
	184, 1363,
	185, 1363,
	186, 1363,
	187, 1363,
	188, 1363,
	189, 1363,
	190, 1363,
	191, 1363,
	192, 1363,
	194, 1363,
	195, 1363,
	197, 1363,
	198, 1363,
	200, 1363,
	201, 1363,
	202, 1363,
	203, 1363,
	204, 1363,
	205, 1363,
	206, 1363,
	207, 1363,
	208, 1363,
	209, 1363,
	210, 1363,
	211, 1363,
	213, 1363,
	214, 1363,
	215, 1363,
	216, 1363,
	220, 1363,
	221, 1363,
	222, 1363,
	223, 1363,
	225, 1363,
	226, 1363,
	227, 1363,
	228, 1363,
	230, 1363,
	232, 1363,
	233, 1363,
	234, 1363,
	235, 1363,
	236, 1363,
	237, 1363,
	238, 1363,
	239, 1363,
	240, 1363,
	241, 1363,
	245, 1363,
	246, 1363,
	247, 1363,
	248, 1363,
	249, 1363,
	250, 1363,
	252, 1363,
	253, 1363,
	254, 1363,
	256, 1363,
	257, 1363,
	258, 1363,
	259, 1363,
	260, 1363,
	261, 1363,
	263, 1363,
	267, 1363,
	268, 1363,
	269, 1363,
	270, 1363,
	271, 1363,
	272, 1363,
	273, 1363,
	274, 1363,
	276, 1363,
	277, 1363,
	278, 1363,
	279, 1363,
	280, 1363,
	281, 1363,
	282, 1363,
	283, 1363,
	284, 1363,
	285, 1363,
	286, 1363,
	287, 1363,
	288, 1363,
	289, 1363,
	290, 1363,
	291, 1363,
	292, 1363,
	293, 1363,
	294, 1363,
	295, 1363,
	296, 1363,
	298, 1363,
	299, 1363,
	300, 1363,
	301, 1363,
	302, 1363,
	303, 1363,
	304, 1363,
	305, 1363,
	306, 1363,
	307, 1363,
	308, 1363,
	309, 1363,
	310, 1363,
	311, 1363,
	312, 1363,
	313, 1363,
	314, 1363,
	315, 1363,
	316, 1363,
	317, 1363,
	318, 1363,
	319, 1363,
	320, 1363,
	321, 1363,
	322, 1363,
	323, 1363,
	324, 1363,
	327, 1363,
	331, 1363,
	332, 1363,
	333, 1363,
	336, 1363,
	337, 1363,
	338, 1363,
	339, 1363,
	340, 1363,
	341, 1363,
	342, 1363,
	343, 1363,
	344, 1363,
	345, 1363,
	346, 1363,
	347, 1363,
	348, 1363,
	349, 1363,
	350, 1363,
	351, 1363,
	352, 1363,
	353, 1363,
	355, 1363,
	356, 1363,
	357, 1363,
	358, 1363,
	359, 1363,
	360, 1363,
	361, 1363,
	362, 1363,
	363, 1363,
	364, 1363,
	365, 1363,
	366, 1363,
	367, 1363,
	368, 1363,
	369, 1363,
	371, 1363,
	373, 1363,
	374, 1363,
	375, 1363,
	376, 1363,
	377, 1363,
	378, 1363,
	379, 1363,
	380, 1363,
	381, 1363,
	382, 1363,
	383, 1363,
	384, 1363,
	386, 1363,
	392, 1363,
	394, 1363,
	395, 1363,
	396, 1363,
	397, 1363,
	398, 1363,
	399, 1363,
	400, 1363,
	401, 1363,
	403, 1363,
	404, 1363,
	405, 1363,
	406, 1363,
	407, 1363,
	408, 1363,
	409, 1363,
	410, 1363,
	411, 1363,
	412, 1363,
	414, 1363,
	415, 1363,
	416, 1363,
	417, 1363,
	418, 1363,
	419, 1363,
	420, 1363,
	421, 1363,
	422, 1363,
	423, 1363,
	424, 1363,
	426, 1363,
	427, 1363,
	428, 1363,
	429, 1363,
	430, 1363,
	431, 1363,
	432, 1363,
	433, 1363,
	434, 1363,
	435, 1363,
	436, 1363,
	437, 1363,
	438, 1363,
	439, 1363,
	440, 1363,
	441, 1363,
	442, 1363,
	443, 1363,
	444, 1363,
	445, 1363,
	447, 1363,
	449, 1363,
	450, 1363,
	451, 1363,
	452, 1363,
	453, 1363,
	454, 1363,
	455, 1363,
	456, 1363,
	457, 1363,
	458, 1363,
	459, 1363,
	460, 1363,
	461, 1363,
	463, 1363,
	464, 1363,
	465, 1363,
	466, 1363,
	468, 1363,
	469, 1363,
	470, 1363,
	471, 1363,
	472, 1363,
	473, 1363,
	474, 1363,
	475, 1363,
	477, 1363,
	478, 1363,
	479, 1363,
	480, 1363,
	481, 1363,
	483, 1363,
	485, 1363,
	486, 1363,
	487, 1363,
	488, 1363,
	489, 1363,
	490, 1363,
	491, 1363,
	492, 1363,
	493, 1363,
	494, 1363,
	495, 1363,
	497, 1363,
	498, 1363,
	500, 1363,
	501, 1363,
	502, 1363,
	503, 1363,
	504, 1363,
	505, 1363,
	506, 1363,
	507, 1363,
	508, 1363,
	509, 1363,
	512, 1363,
	513, 1363,
	514, 1363,
	515, 1363,
	516, 1363,
	517, 1363,
	519, 1363,
	520, 1363,
	521, 1363,
	522, 1363,
	527, 1363,
	528, 1363,
	529, 1363,
	530, 1363,
	531, 1363,
	532, 1363,
	533, 1363,
	540, 1363,
	547, 1363,
	548, 1363,
	549, 1363,
	556, 1363,
	560, 1363,
	-2, 0,
	-1, 670,
	179, 2102,
	482, 2102,
	539, 2102,
	558, 2102,
	-2, 0,
	-1, 671,
	179, 2200,
	482, 2200,
	539, 2200,
	558, 2200,
	-2, 0,
	-1, 672,
	179, 2089,
	482, 2089,
	539, 2089,
	558, 2089,
	-2, 0,
	-1, 674,
	179, 2323,
	482, 2323,
	539, 2323,
	558, 2323,
	-2, 0,
	-1, 676,
	179, 2357,
	482, 2357,
	539, 2357,
	558, 2357,
	-2, 0,
	-1, 683,
	179, 2225,
	482, 2225,
	539, 2225,
	558, 2225,
	-2, 623,
	-1, 714,
	558, 2040,
	561, 2040,
	-2, 870,
	-1, 715,
	558, 2042,
	561, 2042,
	-2, 871,
	-1, 716,
	558, 2041,
	561, 2041,
	-2, 872,
	-1, 717,
	561, 1974,
	-2, 873,
	-1, 739,
	176, 220,
	-2, 0,
	-1, 760,
	42, 2044,
	-2, 0,
	-1, 761,
	519, 1129,
	-2, 935,
	-1, 777,
	4, 1483,
	21, 1483,
	22, 1483,
	23, 1483,
	24, 1483,
	25, 1483,
	26, 1483,
	28, 1483,
	29, 1483,
	35, 1483,
	40, 1483,
	41, 1483,
	43, 1483,
	44, 1483,
	45, 1483,
	46, 1483,
	47, 1483,
	48, 1483,
	49, 1483,
	51, 1483,
	52, 1483,
	53, 1483,
	54, 1483,
	56, 1483,
	57, 1483,
	58, 1483,
	59, 1483,
	60, 1483,
	61, 1483,
	62, 1483,
	66, 1483,
	67, 1483,
	68, 1483,
	69, 1483,
	71, 1483,
	72, 1483,
	73, 1483,
	77, 1483,
	78, 1483,
	79, 1483,
	80, 1483,
	81, 1483,
	82, 1483,
	83, 1483,
	86, 1483,
	87, 1483,
	88, 1483,
	89, 1483,
	90, 1483,
	92, 1483,
	94, 1483,
	95, 1483,
	96, 1483,
	97, 1483,
	98, 1483,
	99, 1483,
	101, 1483,
	102, 1483,
	103, 1483,
	105, 1483,
	106, 1483,
	114, 1483,
	115, 1483,
	116, 1483,
	117, 1483,
	119, 1483,
	120, 1483,
	121, 1483,
	123, 1483,
	124, 1483,
	125, 1483,
	127, 1483,
	128, 1483,
	130, 1483,
	131, 1483,
	132, 1483,
	135, 1483,
	136, 1483,
	137, 1483,
	139, 1483,
	140, 1483,
	142, 1483,
	143, 1483,
	144, 1483,
	146, 1483,
	147, 1483,
	148, 1483,
	149, 1483,
	150, 1483,
	151, 1483,
	152, 1483,
	153, 1483,
	154, 1483,
	155, 1483,
	156, 1483,
	157, 1483,
	158, 1483,
	159, 1483,
	160, 1483,
	162, 1483,
	168, 1483,
	169, 1483,
	170, 1483,
	171, 1483,
	175, 1483,
	177, 1483,
	181, 1483,
	182, 1483,
	183, 1483,
	184, 1483,
	185, 1483,
	186, 1483,
	187, 1483,
	188, 1483,
	189, 1483,
	190, 1483,
	191, 1483,
	192, 1483,
	194, 1483,
	195, 1483,
	197, 1483,
	198, 1483,
	200, 1483,
	201, 1483,
	202, 1483,
	203, 1483,
	204, 1483,
	205, 1483,
	206, 1483,
	207, 1483,
	208, 1483,
	210, 1483,
	211, 1483,
	213, 1483,
	214, 1483,
	215, 1483,
	216, 1483,
	220, 1483,
	221, 1483,
	222, 1483,
	223, 1483,
	226, 1483,
	227, 1483,
	228, 1483,
	230, 1483,
	232, 1483,
	233, 1483,
	235, 1483,
	237, 1483,
	238, 1483,
	239, 1483,
	241, 1483,
	245, 1483,
	246, 1483,
	247, 1483,
	248, 1483,
	249, 1483,
	250, 1483,
	252, 1483,
	253, 1483,
	254, 1483,
	256, 1483,
	257, 1483,
	259, 1483,
	260, 1483,
	263, 1483,
	267, 1483,
	268, 1483,
	271, 1483,
	272, 1483,
	273, 1483,
	274, 1483,
	276, 1483,
	277, 1483,
	278, 1483,
	279, 1483,
	280, 1483,
	281, 1483,
	282, 1483,
	283, 1483,
	284, 1483,
	285, 1483,
	286, 1483,
	287, 1483,
	288, 1483,
	289, 1483,
	290, 1483,
	291, 1483,
	292, 1483,
	293, 1483,
	294, 1483,
	295, 1483,
	296, 1483,
	298, 1483,
	300, 1483,
	301, 1483,
	302, 1483,
	303, 1483,
	304, 1483,
	305, 1483,
	306, 1483,
	307, 1483,
	308, 1483,
	309, 1483,
	310, 1483,
	311, 1483,
	313, 1483,
	315, 1483,
	317, 1483,
	318, 1483,
	320, 1483,
	321, 1483,
	322, 1483,
	323, 1483,
	324, 1483,
	327, 1483,
	331, 1483,
	332, 1483,
	333, 1483,
	336, 1483,
	337, 1483,
	338, 1483,
	340, 1483,
	342, 1483,
	343, 1483,
	344, 1483,
	345, 1483,
	346, 1483,
	347, 1483,
	348, 1483,
	349, 1483,
	350, 1483,
	351, 1483,
	352, 1483,
	353, 1483,
	355, 1483,
	356, 1483,
	357, 1483,
	358, 1483,
	359, 1483,
	360, 1483,
	361, 1483,
	362, 1483,
	363, 1483,
	364, 1483,
	365, 1483,
	366, 1483,
	367, 1483,
	368, 1483,
	369, 1483,
	371, 1483,
	373, 1483,
	374, 1483,
	375, 1483,
	376, 1483,
	377, 1483,
	378, 1483,
	379, 1483,
	380, 1483,
	381, 1483,
	382, 1483,
	383, 1483,
	384, 1483,
	386, 1483,
	392, 1483,
	394, 1483,
	395, 1483,
	396, 1483,
	397, 1483,
	398, 1483,
	399, 1483,
	400, 1483,
	401, 1483,
	403, 1483,
	404, 1483,
	405, 1483,
	407, 1483,
	408, 1483,
	409, 1483,
	410, 1483,
	411, 1483,
	412, 1483,
	414, 1483,
	415, 1483,
	416, 1483,
	417, 1483,
	418, 1483,
	419, 1483,
	420, 1483,
	421, 1483,
	422, 1483,
	423, 1483,
	424, 1483,
	426, 1483,
	427, 1483,
	428, 1483,
	429, 1483,
	430, 1483,
	431, 1483,
	433, 1483,
	434, 1483,
	435, 1483,
	436, 1483,
	437, 1483,
	439, 1483,
	440, 1483,
	441, 1483,
	442, 1483,
	443, 1483,
	444, 1483,
	445, 1483,
	447, 1483,
	449, 1483,
	450, 1483,
	451, 1483,
	452, 1483,
	453, 1483,
	454, 1483,
	455, 1483,
	456, 1483,
	457, 1483,
	458, 1483,
	459, 1483,
	460, 1483,
	461, 1483,
	463, 1483,
	464, 1483,
	466, 1483,
	468, 1483,
	469, 1483,
	470, 1483,
	471, 1483,
	472, 1483,
	473, 1483,
	474, 1483,
	475, 1483,
	477, 1483,
	478, 1483,
	479, 1483,
	480, 1483,
	481, 1483,
	483, 1483,
	485, 1483,
	486, 1483,
	487, 1483,
	488, 1483,
	489, 1483,
	490, 1483,
	492, 1483,
	493, 1483,
	494, 1483,
	495, 1483,
	497, 1483,
	498, 1483,
	501, 1483,
	502, 1483,
	503, 1483,
	504, 1483,
	505, 1483,
	506, 1483,
	507, 1483,
	509, 1483,
	512, 1483,
	513, 1483,
	514, 1483,
	515, 1483,
	516, 1483,
	517, 1483,
	519, 1483,
	520, 1483,
	521, 1483,
	522, 1483,
	527, 1483,
	528, 1483,
	529, 1483,
	530, 1483,
	531, 1483,
	532, 1483,
	-2, 0,
	-1, 801,
	4, 1150,
	21, 1150,
	22, 1150,
	23, 1150,
	24, 1150,
	25, 1150,
	26, 1150,
	28, 1150,
	29, 1150,
	35, 1150,
	40, 1150,
	41, 1150,
	43, 1150,
	44, 1150,
	45, 1150,
	46, 1150,
	47, 1150,
	48, 1150,
	49, 1150,
	51, 1150,
	52, 1150,
	53, 1150,
	54, 1150,
	56, 1150,
	57, 1150,
	58, 1150,
	59, 1150,
	60, 1150,
	61, 1150,
	62, 1150,
	66, 1150,
	67, 1150,
	68, 1150,
	69, 1150,
	71, 1150,
	72, 1150,
	73, 1150,
	77, 1150,
	78, 1150,
	79, 1150,
	80, 1150,
	81, 1150,
	82, 1150,
	83, 1150,
	86, 1150,
	87, 1150,
	88, 1150,
	89, 1150,
	90, 1150,
	92, 1150,
	94, 1150,
	95, 1150,
	96, 1150,
	97, 1150,
	98, 1150,
	99, 1150,
	101, 1150,
	102, 1150,
	103, 1150,
	105, 1150,
	106, 1150,
	114, 1150,
	115, 1150,
	116, 1150,
	117, 1150,
	119, 1150,
	120, 1150,
	121, 1150,
	123, 1150,
	124, 1150,
	125, 1150,
	127, 1150,
	128, 1150,
	130, 1150,
	131, 1150,
	132, 1150,
	135, 1150,
	136, 1150,
	137, 1150,
	139, 1150,
	140, 1150,
	142, 1150,
	143, 1150,
	144, 1150,
	146, 1150,
	147, 1150,
	148, 1150,
	149, 1150,
	150, 1150,
	151, 1150,
	152, 1150,
	153, 1150,
	154, 1150,
	155, 1150,
	156, 1150,
	157, 1150,
	158, 1150,
	159, 1150,
	160, 1150,
	162, 1150,
	168, 1150,
	169, 1150,
	170, 1150,
	171, 1150,
	175, 1150,
	177, 1150,
	181, 1150,
	182, 1150,
	183, 1150,
	184, 1150,
	185, 1150,
	186, 1150,
	187, 1150,
	188, 1150,
	189, 1150,
	190, 1150,
	191, 1150,
	192, 1150,
	194, 1150,
	195, 1150,
	197, 1150,
	198, 1150,
	200, 1150,
	201, 1150,
	202, 1150,
	203, 1150,
	204, 1150,
	205, 1150,
	206, 1150,
	207, 1150,
	208, 1150,
	210, 1150,
	211, 1150,
	213, 1150,
	214, 1150,
	215, 1150,
	216, 1150,
	220, 1150,
	221, 1150,
	222, 1150,
	223, 1150,
	226, 1150,
	227, 1150,
	228, 1150,
	230, 1150,
	232, 1150,
	233, 1150,
	235, 1150,
	237, 1150,
	238, 1150,
	239, 1150,
	241, 1150,
	245, 1150,
	246, 1150,
	247, 1150,
	248, 1150,
	249, 1150,
	250, 1150,
	252, 1150,
	253, 1150,
	254, 1150,
	256, 1150,
	257, 1150,
	259, 1150,
	260, 1150,
	263, 1150,
	267, 1150,
	268, 1150,
	271, 1150,
	272, 1150,
	273, 1150,
	274, 1150,
	276, 1150,
	277, 1150,
	278, 1150,
	279, 1150,
	280, 1150,
	281, 1150,
	282, 1150,
	283, 1150,
	284, 1150,
	285, 1150,
	286, 1150,
	287, 1150,
	288, 1150,
	289, 1150,
	290, 1150,
	291, 1150,
	292, 1150,
	293, 1150,
	294, 1150,
	295, 1150,
	296, 1150,
	298, 1150,
	300, 1150,
	301, 1150,
	302, 1150,
	303, 1150,
	304, 1150,
	305, 1150,
	306, 1150,
	307, 1150,
	308, 1150,
	309, 1150,
	310, 1150,
	311, 1150,
	313, 1150,
	315, 1150,
	317, 1150,
	318, 1150,
	320, 1150,
	321, 1150,
	322, 1150,
	323, 1150,
	324, 1150,
	327, 1150,
	331, 1150,
	332, 1150,
	333, 1150,
	336, 1150,
	337, 1150,
	338, 1150,
	340, 1150,
	342, 1150,
	343, 1150,
	344, 1150,
	345, 1150,
	346, 1150,
	347, 1150,
	348, 1150,
	349, 1150,
	350, 1150,
	351, 1150,
	352, 1150,
	353, 1150,
	355, 1150,
	356, 1150,
	357, 1150,
	358, 1150,
	359, 1150,
	360, 1150,
	361, 1150,
	362, 1150,
	363, 1150,
	364, 1150,
	365, 1150,
	366, 1150,
	367, 1150,
	368, 1150,
	369, 1150,
	371, 1150,
	373, 1150,
	374, 1150,
	375, 1150,
	376, 1150,
	377, 1150,
	378, 1150,
	379, 1150,
	380, 1150,
	381, 1150,
	382, 1150,
	383, 1150,
	384, 1150,
	386, 1150,
	392, 1150,
	394, 1150,
	395, 1150,
	396, 1150,
	397, 1150,
	398, 1150,
	399, 1150,
	400, 1150,
	401, 1150,
	403, 1150,
	404, 1150,
	405, 1150,
	407, 1150,
	408, 1150,
	409, 1150,
	410, 1150,
	411, 1150,
	412, 1150,
	414, 1150,
	415, 1150,
	416, 1150,
	417, 1150,
	418, 1150,
	419, 1150,
	420, 1150,
	421, 1150,
	422, 1150,
	423, 1150,
	424, 1150,
	426, 1150,
	427, 1150,
	428, 1150,
	429, 1150,
	430, 1150,
	431, 1150,
	433, 1150,
	434, 1150,
	435, 1150,
	436, 1150,
	437, 1150,
	439, 1150,
	440, 1150,
	441, 1150,
	442, 1150,
	443, 1150,
	444, 1150,
	445, 1150,
	447, 1150,
	449, 1150,
	450, 1150,
	451, 1150,
	452, 1150,
	453, 1150,
	454, 1150,
	455, 1150,
	456, 1150,
	457, 1150,
	458, 1150,
	459, 1150,
	460, 1150,
	461, 1150,
	463, 1150,
	464, 1150,
	466, 1150,
	468, 1150,
	469, 1150,
	470, 1150,
	471, 1150,
	472, 1150,
	473, 1150,
	474, 1150,
	475, 1150,
	477, 1150,
	478, 1150,
	479, 1150,
	480, 1150,
	481, 1150,
	483, 1150,
	485, 1150,
	486, 1150,
	487, 1150,
	488, 1150,
	489, 1150,
	490, 1150,
	492, 1150,
	493, 1150,
	494, 1150,
	495, 1150,
	497, 1150,
	498, 1150,
	501, 1150,
	502, 1150,
	503, 1150,
	504, 1150,
	505, 1150,
	506, 1150,
	507, 1150,
	509, 1150,
	512, 1150,
	513, 1150,
	514, 1150,
	515, 1150,
	516, 1150,
	517, 1150,
	519, 1150,
	520, 1150,
	521, 1150,
	522, 1150,
	527, 1150,
	528, 1150,
	529, 1150,
	530, 1150,
	531, 1150,
	532, 1150,
	-2, 0,
	-1, 882,
	375, 782,
	431, 782,
	487, 782,
	-2, 0,
	-1, 883,
	375, 781,
	431, 781,
	487, 781,
	-2, 723,
	-1, 887,
	1, 826,
	555, 826,
	557, 826,
	559, 826,
	-2, 0,
	-1, 888,
	1, 758,
	555, 758,
	557, 758,
	559, 758,
	-2, 0,
	-1, 889,
	1, 760,
	555, 760,
	557, 760,
	559, 760,
	-2, 0,
	-1, 890,
	1, 869,
	176, 869,
	555, 869,
	557, 869,
	559, 869,
	-2, 0,
	-1, 898,
	1, 785,
	555, 785,
	557, 785,
	559, 785,
	-2, 0,
	-1, 904,
	1, 826,
	555, 826,
	557, 826,
	559, 826,
	-2, 0,
	-1, 905,
	1, 828,
	555, 828,
	557, 828,
	559, 828,
	-2, 0,
	-1, 906,
	1, 831,
	555, 831,
	557, 831,
	559, 831,
	-2, 0,
	-1, 912,
	1, 848,
	555, 848,
	557, 848,
	559, 848,
	-2, 0,
	-1, 913,
	1, 850,
	555, 850,
	557, 850,
	559, 850,
	-2, 0,
	-1, 962,
	163, 1365,
	176, 1365,
	262, 1365,
	325, 1365,
	-2, 1303,
	-1, 977,
	163, 1364,
	176, 1364,
	262, 1364,
	325, 1364,
	-2, 1300,
	-1, 1003,
	558, 2039,
	-2, 631,
	-1, 1031,
	5, 2031,
	556, 2029,
	-2, 2020,
	-1, 1039,
	5, 2052,
	556, 2049,
	-2, 2040,
	-1, 1040,
	5, 2053,
	556, 2050,
	-2, 2041,
	-1, 1048,
	558, 2037,
	-2, 2019,
	-1, 1049,
	556, 2439,
	-2, 2038,
	-1, 1072,
	556, 2438,
	-2, 2054,
	-1, 1073,
	5, 1558,
	-2, 2409,
	-1, 1074,
	5, 1559,
	-2, 2410,
	-1, 1075,
	5, 1560,
	-2, 2424,
	-1, 1076,
	5, 1561,
	-2, 2388,
	-1, 1077,
	5, 1562,
	-2, 2422,
	-1, 1078,
	5, 1570,
	-2, 2401,
	-1, 1079,
	5, 1557,
	-2, 2397,
	-1, 1080,
	5, 1557,
	-2, 2396,
	-1, 1081,
	5, 1557,
	-2, 2415,
	-1, 1082,
	5, 1568,
	-2, 2390,
	-1, 1083,
	5, 1573,
	-2, 2389,
	-1, 1084,
	5, 1575,
	-2, 2434,
	-1, 1087,
	5, 1597,
	-2, 2427,
	-1, 1088,
	5, 1589,
	-2, 2428,
	-1, 1089,
	5, 1597,
	-2, 2429,
	-1, 1090,
	5, 1593,
	-2, 2430,
	-1, 1091,
	5, 1543,
	-2, 2402,
	-1, 1092,
	5, 1544,
	-2, 2403,
	-1, 1093,
	5, 1545,
	-2, 2391,
	-1, 1121,
	5, 1580,
	-2, 2435,
	-1, 1122,
	5, 1581,
	-2, 2425,
	-1, 1123,
	5, 1582,
	520, 1582,
	-2, 2392,
	-1, 1124,
	5, 1583,
	520, 1583,
	-2, 2393,
	-1, 1161,
	556, 2049,
	-2, 2040,
	-1, 1162,
	556, 2050,
	-2, 2041,
	-1, 1193,
	179, 2357,
	482, 2357,
	539, 2357,
	558, 2357,
	-2, 0,
	-1, 1196,
	1, 609,
	559, 609,
	-2, 1233,
	-1, 1324,
	394, 2015,
	433, 2015,
	549, 2015,
	-2, 2012,
	-1, 1336,
	560, 2015,
	-2, 2016,
	-1, 1343,
	1, 1126,
	555, 1126,
	557, 1126,
	559, 1126,
	-2, 1352,
	-1, 1397,
	382, 934,
	519, 934,
	-2, 343,
	-1, 1416,
	42, 2043,
	-2, 2013,
	-1, 1421,
	1, 1126,
	555, 1126,
	557, 1126,
	559, 1126,
	-2, 1352,
	-1, 1428,
	4, 1150,
	21, 1150,
	22, 1150,
	23, 1150,
	24, 1150,
	25, 1150,
	26, 1150,
	28, 1150,
	29, 1150,
	35, 1150,
	40, 1150,
	41, 1150,
	43, 1150,
	44, 1150,
	45, 1150,
	46, 1150,
	47, 1150,
	48, 1150,
	49, 1150,
	51, 1150,
	52, 1150,
	53, 1150,
	54, 1150,
	56, 1150,
	57, 1150,
	58, 1150,
	59, 1150,
	60, 1150,
	61, 1150,
	62, 1150,
	66, 1150,
	67, 1150,
	68, 1150,
	69, 1150,
	71, 1150,
	72, 1150,
	73, 1150,
	77, 1150,
	78, 1150,
	79, 1150,
	80, 1150,
	81, 1150,
	82, 1150,
	83, 1150,
	86, 1150,
	87, 1150,
	88, 1150,
	89, 1150,
	90, 1150,
	92, 1150,
	94, 1150,
	95, 1150,
	96, 1150,
	97, 1150,
	98, 1150,
	99, 1150,
	101, 1150,
	102, 1150,
	103, 1150,
	105, 1150,
	106, 1150,
	114, 1150,
	115, 1150,
	116, 1150,
	117, 1150,
	119, 1150,
	120, 1150,
	121, 1150,
	123, 1150,
	124, 1150,
	125, 1150,
	127, 1150,
	128, 1150,
	130, 1150,
	131, 1150,
	132, 1150,
	135, 1150,
	136, 1150,
	137, 1150,
	139, 1150,
	140, 1150,
	142, 1150,
	143, 1150,
	144, 1150,
	146, 1150,
	147, 1150,
	148, 1150,
	149, 1150,
	150, 1150,
	151, 1150,
	152, 1150,
	153, 1150,
	154, 1150,
	155, 1150,
	156, 1150,
	157, 1150,
	158, 1150,
	159, 1150,
	160, 1150,
	168, 1150,
	169, 1150,
	170, 1150,
	171, 1150,
	175, 1150,
	177, 1150,
	181, 1150,
	182, 1150,
	183, 1150,
	184, 1150,
	185, 1150,
	186, 1150,
	187, 1150,
	188, 1150,
	189, 1150,
	190, 1150,
	191, 1150,
	192, 1150,
	194, 1150,
	195, 1150,
	197, 1150,
	198, 1150,
	200, 1150,
	201, 1150,
	202, 1150,
	203, 1150,
	204, 1150,
	205, 1150,
	206, 1150,
	207, 1150,
	208, 1150,
	210, 1150,
	211, 1150,
	213, 1150,
	214, 1150,
	215, 1150,
	216, 1150,
	221, 1150,
	222, 1150,
	223, 1150,
	226, 1150,
	227, 1150,
	228, 1150,
	230, 1150,
	232, 1150,
	233, 1150,
	235, 1150,
	237, 1150,
	238, 1150,
	239, 1150,
	241, 1150,
	245, 1150,
	246, 1150,
	247, 1150,
	248, 1150,
	249, 1150,
	250, 1150,
	252, 1150,
	253, 1150,
	254, 1150,
	256, 1150,
	257, 1150,
	259, 1150,
	260, 1150,
	263, 1150,
	267, 1150,
	268, 1150,
	271, 1150,
	272, 1150,
	273, 1150,
	274, 1150,
	276, 1150,
	277, 1150,
	278, 1150,
	279, 1150,
	280, 1150,
	281, 1150,
	282, 1150,
	283, 1150,
	284, 1150,
	285, 1150,
	286, 1150,
	287, 1150,
	288, 1150,
	289, 1150,
	290, 1150,
	291, 1150,
	292, 1150,
	293, 1150,
	294, 1150,
	295, 1150,
	296, 1150,
	298, 1150,
	300, 1150,
	301, 1150,
	302, 1150,
	303, 1150,
	304, 1150,
	305, 1150,
	306, 1150,
	307, 1150,
	308, 1150,
	309, 1150,
	310, 1150,
	311, 1150,
	313, 1150,
	317, 1150,
	318, 1150,
	320, 1150,
	321, 1150,
	322, 1150,
	323, 1150,
	324, 1150,
	327, 1150,
	329, 1150,
	331, 1150,
	332, 1150,
	333, 1150,
	336, 1150,
	337, 1150,
	338, 1150,
	340, 1150,
	342, 1150,
	343, 1150,
	344, 1150,
	345, 1150,
	346, 1150,
	347, 1150,
	348, 1150,
	349, 1150,
	350, 1150,
	351, 1150,
	352, 1150,
	353, 1150,
	355, 1150,
	356, 1150,
	357, 1150,
	358, 1150,
	359, 1150,
	360, 1150,
	361, 1150,
	362, 1150,
	363, 1150,
	364, 1150,
	365, 1150,
	366, 1150,
	367, 1150,
	368, 1150,
	369, 1150,
	371, 1150,
	373, 1150,
	374, 1150,
	375, 1150,
	376, 1150,
	377, 1150,
	378, 1150,
	379, 1150,
	380, 1150,
	381, 1150,
	382, 1150,
	383, 1150,
	384, 1150,
	386, 1150,
	392, 1150,
	394, 1150,
	395, 1150,
	396, 1150,
	397, 1150,
	398, 1150,
	399, 1150,
	400, 1150,
	401, 1150,
	403, 1150,
	404, 1150,
	405, 1150,
	407, 1150,
	408, 1150,
	409, 1150,
	410, 1150,
	411, 1150,
	412, 1150,
	414, 1150,
	415, 1150,
	416, 1150,
	417, 1150,
	418, 1150,
	419, 1150,
	420, 1150,
	421, 1150,
	422, 1150,
	423, 1150,
	424, 1150,
	426, 1150,
	427, 1150,
	428, 1150,
	429, 1150,
	430, 1150,
	431, 1150,
	433, 1150,
	434, 1150,
	435, 1150,
	436, 1150,
	437, 1150,
	439, 1150,
	440, 1150,
	441, 1150,
	442, 1150,
	443, 1150,
	444, 1150,
	445, 1150,
	447, 1150,
	449, 1150,
	450, 1150,
	451, 1150,
	452, 1150,
	453, 1150,
	454, 1150,
	455, 1150,
	456, 1150,
	457, 1150,
	458, 1150,
	459, 1150,
	460, 1150,
	461, 1150,
	463, 1150,
	464, 1150,
	466, 1150,
	468, 1150,
	469, 1150,
	470, 1150,
	471, 1150,
	472, 1150,
	473, 1150,
	474, 1150,
	475, 1150,
	477, 1150,
	478, 1150,
	479, 1150,
	480, 1150,
	481, 1150,
	483, 1150,
	485, 1150,
	486, 1150,
	487, 1150,
	488, 1150,
	489, 1150,
	490, 1150,
	492, 1150,
	493, 1150,
	494, 1150,
	495, 1150,
	497, 1150,
	498, 1150,
	501, 1150,
	502, 1150,
	503, 1150,
	504, 1150,
	505, 1150,
	506, 1150,
	507, 1150,
	509, 1150,
	512, 1150,
	513, 1150,
	514, 1150,
	515, 1150,
	516, 1150,
	517, 1150,
	519, 1150,
	520, 1150,
	521, 1150,
	522, 1150,
	527, 1150,
	528, 1150,
	529, 1150,
	530, 1150,
	531, 1150,
	532, 1150,
	-2, 0,
	-1, 1502,
	1, 482,
	555, 482,
	557, 482,
	559, 482,
	-2, 1323,
	-1, 1505,
	4, 2433,
	11, 2433,
	12, 2433,
	14, 2433,
	15, 2433,
	16, 2433,
	17, 2433,
	18, 2433,
	19, 2433,
	21, 2433,
	22, 2433,
	23, 2433,
	24, 2433,
	25, 2433,
	26, 2433,
	28, 2433,
	29, 2433,
	32, 2433,
	33, 2433,
	35, 2433,
	37, 2433,
	40, 2433,
	41, 2433,
	43, 2433,
	44, 2433,
	45, 2433,
	46, 2433,
	47, 2433,
	48, 2433,
	49, 2433,
	51, 2433,
	52, 2433,
	53, 2433,
	54, 2433,
	56, 2433,
	57, 2433,
	58, 2433,
	59, 2433,
	60, 2433,
	61, 2433,
	62, 2433,
	66, 2433,
	67, 2433,
	68, 2433,
	69, 2433,
	71, 2433,
	72, 2433,
	73, 2433,
	74, 2433,
	77, 2433,
	78, 2433,
	79, 2433,
	80, 2433,
	81, 2433,
	82, 2433,
	83, 2433,
	84, 2433,
	86, 2433,
	87, 2433,
	88, 2433,
	89, 2433,
	90, 2433,
	92, 2433,
	93, 2433,
	94, 2433,
	95, 2433,
	96, 2433,
	97, 2433,
	98, 2433,
	99, 2433,
	101, 2433,
	102, 2433,
	103, 2433,
	104, 2433,
	105, 2433,
	106, 2433,
	114, 2433,
	115, 2433,
	116, 2433,
	117, 2433,
	119, 2433,
	120, 2433,
	121, 2433,
	123, 2433,
	124, 2433,
	125, 2433,
	127, 2433,
	128, 2433,
	130, 2433,
	131, 2433,
	132, 2433,
	135, 2433,
	136, 2433,
	137, 2433,
	139, 2433,
	140, 2433,
	142, 2433,
	143, 2433,
	144, 2433,
	146, 2433,
	147, 2433,
	148, 2433,
	149, 2433,
	150, 2433,
	151, 2433,
	152, 2433,
	153, 2433,
	154, 2433,
	155, 2433,
	156, 2433,
	157, 2433,
	158, 2433,
	159, 2433,
	160, 2433,
	164, 2433,
	165, 2433,
	166, 2433,
	167, 2433,
	168, 2433,
	169, 2433,
	170, 2433,
	171, 2433,
	174, 2433,
	175, 2433,
	177, 2433,
	180, 2433,
	181, 2433,
	182, 2433,
	183, 2433,
	184, 2433,
	185, 2433,
	186, 2433,
	187, 2433,
	188, 2433,
	189, 2433,
	190, 2433,
	191, 2433,
	192, 2433,
	194, 2433,
	195, 2433,
	197, 2433,
	198, 2433,
	200, 2433,
	201, 2433,
	202, 2433,
	203, 2433,
	204, 2433,
	205, 2433,
	206, 2433,
	207, 2433,
	208, 2433,
	209, 2433,
	210, 2433,
	211, 2433,
	212, 2433,
	213, 2433,
	214, 2433,
	215, 2433,
	216, 2433,
	218, 2433,
	219, 2433,
	221, 2433,
	222, 2433,
	223, 2433,
	225, 2433,
	226, 2433,
	227, 2433,
	228, 2433,
	230, 2433,
	232, 2433,
	233, 2433,
	234, 2433,
	235, 2433,
	236, 2433,
	237, 2433,
	238, 2433,
	239, 2433,
	240, 2433,
	241, 2433,
	243, 2433,
	244, 2433,
	245, 2433,
	246, 2433,
	247, 2433,
	248, 2433,
	249, 2433,
	250, 2433,
	252, 2433,
	253, 2433,
	254, 2433,
	256, 2433,
	257, 2433,
	258, 2433,
	259, 2433,
	260, 2433,
	261, 2433,
	263, 2433,
	267, 2433,
	268, 2433,
	271, 2433,
	272, 2433,
	273, 2433,
	274, 2433,
	275, 2433,
	276, 2433,
	277, 2433,
	278, 2433,
	279, 2433,
	280, 2433,
	281, 2433,
	282, 2433,
	283, 2433,
	284, 2433,
	285, 2433,
	286, 2433,
	287, 2433,
	288, 2433,
	289, 2433,
	290, 2433,
	291, 2433,
	292, 2433,
	293, 2433,
	294, 2433,
	295, 2433,
	296, 2433,
	298, 2433,
	299, 2433,
	300, 2433,
	301, 2433,
	302, 2433,
	303, 2433,
	304, 2433,
	305, 2433,
	306, 2433,
	307, 2433,
	308, 2433,
	309, 2433,
	310, 2433,
	311, 2433,
	313, 2433,
	316, 2433,
	317, 2433,
	318, 2433,
	320, 2433,
	321, 2433,
	322, 2433,
	323, 2433,
	324, 2433,
	327, 2433,
	331, 2433,
	332, 2433,
	333, 2433,
	334, 2433,
	336, 2433,
	337, 2433,
	338, 2433,
	340, 2433,
	342, 2433,
	343, 2433,
	344, 2433,
	345, 2433,
	346, 2433,
	347, 2433,
	348, 2433,
	349, 2433,
	350, 2433,
	351, 2433,
	352, 2433,
	353, 2433,
	355, 2433,
	356, 2433,
	357, 2433,
	358, 2433,
	359, 2433,
	360, 2433,
	361, 2433,
	362, 2433,
	363, 2433,
	364, 2433,
	365, 2433,
	366, 2433,
	367, 2433,
	368, 2433,
	369, 2433,
	371, 2433,
	373, 2433,
	374, 2433,
	375, 2433,
	376, 2433,
	377, 2433,
	378, 2433,
	379, 2433,
	380, 2433,
	381, 2433,
	382, 2433,
	383, 2433,
	384, 2433,
	386, 2433,
	392, 2433,
	393, 2433,
	394, 2433,
	395, 2433,
	396, 2433,
	397, 2433,
	398, 2433,
	399, 2433,
	400, 2433,
	401, 2433,
	403, 2433,
	404, 2433,
	405, 2433,
	406, 2433,
	407, 2433,
	408, 2433,
	409, 2433,
	410, 2433,
	411, 2433,
	412, 2433,
	413, 2433,
	414, 2433,
	415, 2433,
	416, 2433,
	417, 2433,
	418, 2433,
	419, 2433,
	420, 2433,
	421, 2433,
	422, 2433,
	423, 2433,
	424, 2433,
	426, 2433,
	427, 2433,
	428, 2433,
	429, 2433,
	430, 2433,
	431, 2433,
	433, 2433,
	434, 2433,
	435, 2433,
	436, 2433,
	437, 2433,
	438, 2433,
	439, 2433,
	440, 2433,
	441, 2433,
	442, 2433,
	443, 2433,
	444, 2433,
	445, 2433,
	447, 2433,
	449, 2433,
	450, 2433,
	451, 2433,
	452, 2433,
	453, 2433,
	454, 2433,
	455, 2433,
	456, 2433,
	457, 2433,
	458, 2433,
	459, 2433,
	460, 2433,
	461, 2433,
	463, 2433,
	464, 2433,
	466, 2433,
	468, 2433,
	469, 2433,
	470, 2433,
	471, 2433,
	472, 2433,
	473, 2433,
	474, 2433,
	475, 2433,
	477, 2433,
	478, 2433,
	479, 2433,
	480, 2433,
	481, 2433,
	483, 2433,
	485, 2433,
	486, 2433,
	487, 2433,
	488, 2433,
	489, 2433,
	490, 2433,
	492, 2433,
	493, 2433,
	494, 2433,
	495, 2433,
	497, 2433,
	498, 2433,
	501, 2433,
	502, 2433,
	503, 2433,
	504, 2433,
	505, 2433,
	506, 2433,
	507, 2433,
	509, 2433,
	512, 2433,
	513, 2433,
	514, 2433,
	515, 2433,
	516, 2433,
	517, 2433,
	519, 2433,
	520, 2433,
	521, 2433,
	522, 2433,
	527, 2433,
	528, 2433,
	529, 2433,
	530, 2433,
	531, 2433,
	532, 2433,
	533, 2433,
	534, 2433,
	537, 2433,
	538, 2433,
	539, 2433,
	540, 2433,
	541, 2433,
	542, 2433,
	544, 2433,
	545, 2433,
	546, 2433,
	547, 2433,
	548, 2433,
	549, 2433,
	550, 2433,
	551, 2433,
	552, 2433,
	554, 2433,
	557, 2433,
	558, 2433,
	560, 2433,
	561, 2433,
	-2, 0,
	-1, 1510,
	179, 2323,
	482, 2323,
	539, 2323,
	558, 2323,
	-2, 0,
	-1, 1559,
	375, 782,
	431, 782,
	487, 782,
	-2, 0,
	-1, 1585,
	1, 777,
	555, 777,
	557, 777,
	559, 777,
	-2, 0,
	-1, 1586,
	1, 813,
	555, 813,
	557, 813,
	559, 813,
	-2, 0,
	-1, 1587,
	1, 821,
	555, 821,
	557, 821,
	559, 821,
	-2, 0,
	-1, 1588,
	1, 784,
	555, 784,
	557, 784,
	559, 784,
	-2, 0,
	-1, 1590,
	1, 788,
	555, 788,
	557, 788,
	559, 788,
	-2, 0,
	-1, 1596,
	1, 795,
	555, 795,
	557, 795,
	559, 795,
	-2, 0,
	-1, 1624,
	1, 2379,
	555, 2379,
	557, 2379,
	558, 2379,
	559, 2379,
	-2, 846,
	-1, 1625,
	1, 2320,
	555, 2320,
	557, 2320,
	558, 2320,
	559, 2320,
	-2, 847,
	-1, 1640,
	1, 1228,
	559, 1228,
	-2, 1233,
	-1, 1643,
	163, 1364,
	176, 1364,
	262, 1364,
	325, 1364,
	-2, 1304,
	-1, 1737,
	145, 1325,
	163, 1325,
	176, 1325,
	229, 1325,
	262, 1325,
	325, 1325,
	335, 1325,
	499, 1325,
	-2, 1758,
	-1, 1797,
	557, 1908,
	-2, 0,
	-1, 1832,
	145, 1325,
	163, 1325,
	176, 1325,
	229, 1325,
	262, 1325,
	325, 1325,
	335, 1325,
	499, 1325,
	-2, 1445,
	-1, 1881,
	556, 1585,
	-2, 1573,
	-1, 1924,
	1, 611,
	559, 611,
	-2, 1233,
	-1, 2036,
	212, 221,
	-2, 2048,
	-1, 2037,
	212, 222,
	-2, 264,
	-1, 2165,
	1, 779,
	555, 779,
	557, 779,
	559, 779,
	-2, 0,
	-1, 2166,
	1, 815,
	555, 815,
	557, 815,
	559, 815,
	-2, 0,
	-1, 2167,
	1, 823,
	555, 823,
	557, 823,
	559, 823,
	-2, 0,
	-1, 2199,
	1, 797,
	555, 797,
	557, 797,
	559, 797,
	-2, 0,
	-1, 2245,
	411, 1391,
	412, 1391,
	-2, 1618,
	-1, 2276,
	14, 0,
	15, 0,
	16, 0,
	537, 0,
	538, 0,
	539, 0,
	-2, 1638,
	-1, 2277,
	14, 0,
	15, 0,
	16, 0,
	537, 0,
	538, 0,
	539, 0,
	-2, 1639,
	-1, 2278,
	93, 0,
	243, 0,
	244, 0,
	541, 0,
	542, 0,
	-2, 1640,
	-1, 2279,
	93, 0,
	243, 0,
	244, 0,
	541, 0,
	542, 0,
	-2, 1641,
	-1, 2280,
	93, 0,
	243, 0,
	244, 0,
	541, 0,
	542, 0,
	-2, 1642,
	-1, 2281,
	93, 0,
	243, 0,
	244, 0,
	541, 0,
	542, 0,
	-2, 1643,
	-1, 2282,
	93, 0,
	243, 0,
	244, 0,
	541, 0,
	542, 0,
	-2, 1644,
	-1, 2283,
	14, 0,
	15, 0,
	16, 0,
	537, 0,
	538, 0,
	539, 0,
	-2, 1645,
	-1, 2295,
	14, 0,
	15, 0,
	16, 0,
	537, 0,
	538, 0,
	539, 0,
	-2, 1657,
	-1, 2296,
	14, 0,
	15, 0,
	16, 0,
	537, 0,
	538, 0,
	539, 0,
	-2, 1658,
	-1, 2297,
	14, 0,
	15, 0,
	16, 0,
	537, 0,
	538, 0,
	539, 0,
	-2, 1659,
	-1, 2300,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	209, 0,
	212, 0,
	261, 0,
	438, 0,
	533, 0,
	540, 0,
	-2, 1664,
	-1, 2306,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	209, 0,
	212, 0,
	261, 0,
	438, 0,
	533, 0,
	540, 0,
	-2, 1668,
	-1, 2308,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	209, 0,
	212, 0,
	261, 0,
	438, 0,
	533, 0,
	540, 0,
	-2, 1676,
	-1, 2309,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	209, 0,
	212, 0,
	261, 0,
	438, 0,
	533, 0,
	540, 0,
	-2, 1677,
	-1, 2310,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	209, 0,
	212, 0,
	261, 0,
	438, 0,
	533, 0,
	540, 0,
	-2, 1678,
	-1, 2311,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	209, 0,
	212, 0,
	261, 0,
	438, 0,
	533, 0,
	540, 0,
	-2, 1679,
	-1, 2447,
	5, 2052,
	179, 1919,
	556, 2049,
	-2, 2040,
	-1, 2448,
	179, 1920,
	-2, 2384,
	-1, 2449,
	179, 1921,
	-2, 2224,
	-1, 2450,
	179, 1922,
	-2, 2118,
	-1, 2451,
	179, 1923,
	-2, 2168,
	-1, 2452,
	179, 1924,
	-2, 2209,
	-1, 2453,
	179, 1925,
	-2, 2318,
	-1, 2454,
	179, 1926,
	-2, 1741,
	-1, 2523,
	1, 1446,
	2, 1446,
	104, 1446,
	145, 1446,
	163, 1446,
	176, 1446,
	180, 1446,
	196, 1446,
	199, 1446,
	225, 1446,
	229, 1446,
	240, 1446,
	258, 1446,
	262, 1446,
	299, 1446,
	325, 1446,
	329, 1446,
	335, 1446,
	402, 1446,
	406, 1446,
	499, 1446,
	510, 1446,
	524, 1446,
	525, 1446,
	526, 1446,
	535, 1446,
	555, 1446,
	557, 1446,
	559, 1446,
	561, 1446,
	-2, 1445,
	-1, 2536,
	556, 2021,
	-2, 2035,
	-1, 2538,
	1, 280,
	-2, 1352,
	-1, 2563,
	556, 1584,
	-2, 1574,
	-1, 2702,
	1, 1126,
	555, 1126,
	557, 1126,
	559, 1126,
	-2, 1352,
	-1, 2878,
	330, 1394,
	-2, 2423,
	-1, 2879,
	330, 1395,
	-2, 2304,
	-1, 2883,
	411, 1985,
	412, 1985,
	-2, 1739,
	-1, 2884,
	411, 1989,
	412, 1989,
	-2, 1740,
	-1, 2885,
	411, 1986,
	412, 1986,
	-2, 1739,
	-1, 2886,
	411, 1990,
	412, 1990,
	-2, 1740,
	-1, 2899,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	209, 0,
	212, 0,
	261, 0,
	438, 0,
	533, 0,
	540, 0,
	-2, 1666,
	-1, 2900,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	209, 0,
	212, 0,
	261, 0,
	438, 0,
	533, 0,
	540, 0,
	-2, 1670,
	-1, 2906,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	209, 0,
	212, 0,
	261, 0,
	438, 0,
	533, 0,
	540, 0,
	-2, 1672,
	-1, 3136,
	1, 608,
	555, 608,
	557, 608,
	559, 608,
	-2, 1233,
	-1, 3268,
	1, 1126,
	555, 1126,
	557, 1126,
	559, 1126,
	-2, 1352,
	-1, 3378,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	209, 0,
	212, 0,
	261, 0,
	438, 0,
	533, 0,
	540, 0,
	-2, 1674,
	-1, 3385,
	234, 0,
	236, 0,
	316, 0,
	-2, 1693,
	-1, 3452,
	14, 0,
	15, 0,
	16, 0,
	537, 0,
	538, 0,
	539, 0,
	-2, 1722,
	-1, 3453,
	14, 0,
	15, 0,
	16, 0,
	537, 0,
	538, 0,
	539, 0,
	-2, 1723,
	-1, 3454,
	14, 0,
	15, 0,
	16, 0,
	537, 0,
	538, 0,
	539, 0,
	-2, 1724,
	-1, 3458,
	14, 0,
	15, 0,
	16, 0,
	537, 0,
	538, 0,
	539, 0,
	-2, 1728,
	-1, 3459,
	14, 0,
	15, 0,
	16, 0,
	537, 0,
	538, 0,
	539, 0,
	-2, 1729,
	-1, 3460,
	14, 0,
	15, 0,
	16, 0,
	537, 0,
	538, 0,
	539, 0,
	-2, 1730,
	-1, 3506,
	556, 2022,
	-2, 2036,
	-1, 3644,
	558, 2540,
	-2, 1280,
	-1, 3702,
	234, 0,
	236, 0,
	316, 0,
	-2, 1694,
	-1, 3705,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	209, 0,
	212, 0,
	261, 0,
	438, 0,
	533, 0,
	540, 0,
	-2, 1697,
	-1, 3706,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	209, 0,
	212, 0,
	261, 0,
	438, 0,
	533, 0,
	540, 0,
	-2, 1699,
	-1, 3918,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	209, 0,
	212, 0,
	261, 0,
	438, 0,
	533, 0,
	540, 0,
	-2, 1698,
	-1, 3919,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	209, 0,
	212, 0,
	261, 0,
	438, 0,
	533, 0,
	540, 0,
	-2, 1700,
	-1, 3930,
	234, 0,
	-2, 1731,
	-1, 4082,
	234, 0,
	-2, 1732,
	-1, 4231,
	48, 0,
	209, 0,
	261, 0,
	438, 0,
	533, 0,
	540, 0,
	-2, 2387,
}

const sqlPrivate = 57344

const sqlLast = 112652

var sqlAct = [...]int{

	249, 2764, 3253, 3962, 2795, 3057, 4241, 4008, 4342, 4230,
	4205, 3685, 4104, 2601, 4189, 3965, 3252, 4171, 4125, 2033,
	4186, 4242, 3950, 4243, 4291, 3538, 3417, 3842, 4015, 2640,
	2134, 4086, 3870, 4229, 4035, 1363, 2255, 3875, 3824, 1493,
	987, 1165, 3636, 3907, 4024, 3154, 38, 3280, 2143, 3772,
	3285, 3856, 4049, 3577, 1868, 2118, 2323, 3278, 978, 3612,
	2665, 3880, 1525, 1488, 3597, 2263, 1652, 3248, 3370, 3595,
	681, 3539, 716, 1977, 3935, 2804, 2256, 2892, 1228, 3333,
	1838, 3335, 2753, 2817, 2725, 2735, 2806, 3508, 3080, 3072,
	1321, 3741, 1346, 3238, 3684, 3040, 716, 1154, 2479, 1326,
	2105, 3100, 2814, 2803, 2797, 1567, 1038, 4, 815, 2750,
	2141, 1807, 2765, 1916, 2028, 3477, 2748, 2516, 2027, 3061,
	3063, 2515, 2603, 2260, 1987, 4087, 2367, 986, 167, 2336,
	3039, 1783, 1329, 2365, 2876, 1745, 2116, 1414, 711, 2679,
	2006, 2022, 4009, 243, 1963, 2736, 242, 2813, 1145, 1808,
	1035, 2013, 1960, 1212, 3107, 1640, 2356, 2320, 2497, 2476,
	1950, 2244, 2227, 1503, 2225, 1468, 3250, 2548, 1489, 1824,
	1419, 2758, 2807, 1042, 2067, 1492, 1198, 2079, 1524, 646,
	1040, 2547, 2518, 2359, 717, 1085, 1479, 1778, 1827, 2592,
	718, 1148, 1869, 2487, 1817, 2337, 809, 1127, 2505, 2639,
	1730, 2443, 176, 1653, 2409, 1596, 1348, 177, 1654, 1033,
	713, 2066, 663, 2226, 675, 722, 167, 1162, 725, 103,
	1501, 2091, 1144, 1443, 2228, 788, 1358, 761, 1976, 2249,
	1016, 632, 649, 657, 1150, 654, 43, 1125, 42, 722,
	40, 31, 725, 29, 27, 2927, 1659, 1639, 876, 896,
	1369, 3491, 2923, 3492, 4407, 3059, 2107, 4397, 2496, 1667,
	1668, 3314, 1700, 1701, 1702, 1710, 1711, 1712, 2107, 982,
	2107, 2107, 4387, 2107, 4386, 4359, 2496, 3295, 2496, 3788,
	1703, 1698, 4357, 4353, 3314, 3130, 3788, 2041, 1670, 1589,
	4271, 4265, 3294, 3129, 4272, 2496, 1716, 1362, 4263, 4260,
	4257, 4252, 2496, 4261, 4258, 2041, 830, 4227, 4226, 4225,
	4220, 2041, 2041, 2127, 2127, 4219, 2489, 2891, 1181, 2127,
	1667, 1668, 1669, 1157, 4214, 4212, 4184, 4165, 3788, 3788,
	3788, 2554, 1689, 1131, 4158, 1132, 982, 1142, 2496, 3012,
	3013, 1686, 1698, 4157, 4152, 2496, 4151, 2496, 3788, 1670,
	3788, 4145, 4118, 4084, 4066, 2041, 3834, 2554, 3673, 4063,
	4060, 4017, 3982, 2041, 3788, 4018, 2041, 3981, 3973, 3972,
	963, 2041, 2041, 3788, 3941, 962, 3920, 3899, 2041, 1207,
	2554, 2127, 3888, 1669, 3819, 3115, 3314, 4166, 2496, 1667,
	1668, 1128, 1128, 3807, 4079, 3787, 3704, 2496, 983, 3788,
	2554, 1207, 3652, 3646, 3610, 2142, 3330, 3330, 3611, 2661,
	2573, 1698, 1692, 1693, 1694, 1695, 3501, 3499, 1670, 4067,
	3502, 3500, 1675, 977, 972, 3484, 3401, 3481, 3397, 2496,
	2041, 3329, 2496, 3321, 2127, 3330, 3056, 3322, 3012, 3013,
	2496, 3481, 3051, 1176, 3050, 88, 2496, 1129, 2496, 1667,
	1668, 3003, 1669, 2936, 2977, 3004, 2488, 1707, 2978, 2937,
	1717, 2969, 1689, 1371, 2125, 2970, 1697, 1699, 2967, 2938,
	2820, 1698, 2496, 2496, 2127, 2793, 2792, 2576, 1670, 2130,
	2130, 2496, 1713, 1675, 1714, 2550, 2553, 3869, 3834, 2572,
	2554, 1684, 1685, 2545, 2539, 2496, 2495, 2496, 2041, 2129,
	2496, 3808, 3018, 2130, 2041, 3673, 3322, 2656, 2591, 1705,
	1667, 1668, 1669, 1700, 1701, 1702, 1710, 1711, 1712, 1981,
	2041, 1929, 1177, 1690, 214, 2106, 2362, 1697, 1699, 2731,
	2122, 2040, 1698, 2673, 2589, 1803, 1357, 3568, 3373, 1670,
	3351, 1825, 1692, 1693, 1694, 1695, 2016, 1716, 3296, 1533,
	2532, 2531, 1675, 1569, 2530, 2529, 3012, 3013, 2528, 3030,
	3031, 3032, 2926, 1133, 1715, 1130, 216, 3297, 2392, 971,
	970, 969, 968, 1669, 967, 966, 965, 3700, 214, 961,
	960, 959, 1704, 1689, 1690, 2856, 4248, 958, 1519, 1667,
	1668, 957, 1686, 956, 2108, 955, 1697, 1699, 954, 953,
	1383, 3018, 952, 3028, 951, 214, 2108, 950, 2108, 2108,
	2363, 2108, 1675, 949, 215, 948, 947, 946, 1670, 945,
	216, 927, 874, 873, 872, 208, 871, 870, 869, 3027,
	868, 867, 866, 209, 865, 864, 863, 862, 861, 860,
	859, 1696, 858, 857, 856, 855, 854, 216, 853, 852,
	851, 850, 1669, 1690, 849, 178, 1697, 1699, 3757, 3294,
	848, 1691, 847, 1692, 1693, 1694, 1695, 1177, 215, 846,
	845, 844, 843, 1675, 833, 2125, 832, 828, 827, 208,
	1040, 821, 820, 779, 1040, 778, 1708, 209, 2364, 738,
	2361, 1370, 737, 736, 728, 215, 4070, 727, 2488, 1231,
	1177, 726, 3028, 1231, 695, 687, 686, 1351, 1707, 178,
	1526, 1717, 214, 1690, 214, 685, 669, 1697, 1699, 3018,
	1211, 237, 1691, 1371, 1216, 1202, 140, 236, 1377, 235,
	234, 1040, 233, 1040, 232, 1040, 178, 1031, 231, 3882,
	1351, 3029, 1684, 1685, 230, 229, 228, 227, 226, 225,
	224, 223, 1675, 3716, 216, 2781, 216, 222, 221, 1332,
	1705, 220, 1371, 1351, 219, 4068, 218, 2106, 1337, 2125,
	2122, 1696, 2220, 2761, 1690, 217, 3518, 3495, 1368, 3033,
	1375, 1706, 1381, 3331, 3103, 1681, 1682, 1688, 1709, 1687,
	1683, 1691, 1680, 1678, 1679, 1671, 1672, 1673, 1674, 1676,
	1677, 1361, 215, 1382, 215, 3726, 1351, 1040, 1537, 3725,
	1591, 1362, 1351, 208, 2949, 208, 1351, 2932, 2712, 2744,
	3028, 209, 2558, 209, 1040, 3054, 1040, 2537, 1425, 1427,
	1351, 2366, 1196, 2522, 1958, 2137, 1040, 1851, 1040, 2378,
	3029, 1786, 2376, 178, 1786, 178, 1224, 1785, 1318, 1323,
	1785, 1691, 1756, 1365, 1499, 1679, 1671, 1672, 1673, 1674,
	1676, 1677, 3055, 722, 1828, 1371, 725, 1430, 1218, 1789,
	1417, 1517, 1784, 1522, 3022, 3014, 3015, 3016, 3017, 3019,
	3020, 1340, 1351, 1531, 1747, 1536, 4228, 1666, 4132, 1191,
	1164, 4076, 1696, 3934, 3012, 3013, 3889, 3030, 3031, 3032,
	1040, 3960, 1482, 1040, 1360, 3868, 1667, 1668, 3764, 3739,
	1359, 3738, 1691, 3732, 2136, 3699, 3731, 3730, 3723, 3722,
	1506, 1508, 1680, 1678, 1679, 1671, 1672, 1673, 1674, 1676,
	1677, 1376, 3720, 3715, 3884, 1670, 1412, 1708, 2360, 3712,
	167, 167, 3711, 3012, 3013, 1590, 3609, 3522, 1538, 3615,
	3521, 3520, 3012, 3013, 1160, 3030, 3031, 3032, 3029, 3505,
	3472, 3471, 3470, 2567, 3325, 1473, 1476, 3027, 3393, 1669,
	3389, 1485, 214, 3388, 3014, 3015, 3016, 3017, 3019, 3020,
	1202, 3098, 3047, 1202, 1754, 1671, 1672, 1673, 1674, 1676,
	1677, 3566, 3038, 1040, 1040, 1040, 1040, 1040, 1040, 1040,
	1446, 3011, 3008, 3007, 3005, 2976, 2975, 2974, 2971, 2968,
	1605, 214, 2948, 2931, 216, 2924, 2794, 2523, 1504, 2349,
	1666, 1644, 1747, 214, 1040, 3027, 1141, 1748, 2048, 1746,
	1040, 983, 1706, 1523, 1500, 1665, 1681, 1682, 1688, 1709,
	1687, 1683, 4401, 1680, 1678, 1679, 1671, 1672, 1673, 1674,
	1676, 1677, 2082, 216, 2746, 2625, 2046, 3018, 4351, 4350,
	3616, 4281, 215, 4279, 4270, 216, 1166, 3012, 3013, 1675,
	3030, 3031, 3032, 208, 3419, 1518, 214, 1638, 4124, 4114,
	4111, 209, 3024, 3025, 3026, 4110, 4109, 1532, 3387, 3023,
	3021, 3022, 3014, 3015, 3016, 3017, 3019, 3020, 985, 4103,
	4096, 215, 1736, 178, 3052, 4064, 3018, 4048, 4047, 1667,
	1668, 2326, 208, 215, 214, 3018, 4033, 3033, 216, 4030,
	209, 3978, 4088, 2391, 208, 3956, 1543, 1673, 1674, 1676,
	1677, 1698, 209, 1560, 3862, 1040, 1040, 1040, 1670, 3932,
	3027, 1040, 178, 3915, 3914, 3896, 3895, 3859, 1162, 1592,
	1162, 214, 3835, 3756, 178, 3737, 216, 3674, 3028, 3668,
	3665, 3883, 3556, 3555, 3542, 1231, 215, 2332, 3541, 3487,
	1805, 3475, 1669, 1040, 3384, 3033, 716, 208, 3616, 1734,
	1886, 716, 1641, 3332, 1351, 209, 3315, 3271, 3210, 963,
	3183, 1040, 1649, 216, 962, 1351, 3157, 3156, 1842, 3123,
	2953, 3121, 1854, 1648, 215, 2952, 2947, 2760, 1643, 2915,
	2724, 1792, 1865, 1040, 1791, 208, 3028, 1912, 1790, 1231,
	1787, 1788, 1645, 209, 214, 4071, 1859, 1662, 1663, 1779,
	3018, 214, 1777, 2745, 2565, 1667, 1668, 2564, 2534, 1814,
	1947, 215, 1202, 983, 2527, 178, 2494, 1811, 1812, 2374,
	3012, 3013, 208, 1956, 1157, 1850, 1157, 1806, 1801, 1921,
	209, 1800, 1799, 1798, 1670, 1797, 216, 1855, 1780, 1781,
	1835, 1861, 1675, 216, 1796, 1795, 1917, 1794, 1793, 167,
	1941, 1940, 178, 1774, 1949, 1951, 1773, 1927, 1772, 1922,
	3033, 2138, 1771, 1770, 4069, 1769, 3029, 1768, 1669, 1767,
	3157, 1766, 1765, 1764, 1763, 1762, 1761, 1760, 1749, 1128,
	1735, 1733, 1728, 1190, 215, 1826, 1697, 1699, 1179, 722,
	1857, 215, 725, 1444, 722, 208, 1172, 725, 3760, 3708,
	3517, 3028, 208, 209, 3498, 3490, 2935, 2525, 1449, 1836,
	209, 1833, 3945, 3762, 3516, 2556, 1748, 3012, 3013, 1924,
	3119, 1731, 1215, 1880, 3029, 178, 1351, 1351, 1949, 3300,
	3095, 3810, 178, 1949, 1804, 1883, 1231, 1969, 1846, 983,
	4348, 4341, 1920, 1690, 3186, 3281, 1559, 4112, 4020, 1636,
	4019, 3887, 1830, 3837, 3836, 3809, 1862, 1949, 1845, 1874,
	1844, 1909, 1843, 1841, 2377, 1840, 1839, 2375, 1944, 3759,
	2002, 3677, 3676, 2005, 3675, 3493, 2010, 3317, 3316, 1214,
	1866, 4025, 1207, 3018, 1935, 3619, 1828, 1343, 2034, 2038,
	3024, 3025, 3026, 1213, 1207, 2973, 2972, 3023, 3021, 3022,
	3014, 3015, 3016, 3017, 3019, 3020, 1769, 2644, 2897, 2627,
	1952, 1942, 1671, 1672, 1673, 1674, 1676, 1677, 1786, 1210,
	1386, 3554, 943, 1758, 1785, 3959, 214, 214, 1606, 3255,
	1568, 3254, 4224, 1207, 1769, 2157, 2135, 1986, 4016, 3029,
	4268, 4253, 4240, 1421, 3239, 2014, 2818, 1569, 3024, 3025,
	3026, 3016, 3017, 3019, 3020, 3023, 3021, 3022, 3014, 3015,
	3016, 3017, 3019, 3020, 2029, 944, 3574, 3573, 216, 216,
	3559, 722, 3348, 2031, 725, 1925, 1946, 3134, 1351, 2072,
	1351, 1691, 1351, 3936, 3059, 3421, 1496, 2357, 4249, 2941,
	2563, 214, 1802, 1782, 3246, 2076, 1512, 2670, 1351, 1351,
	1472, 1424, 1354, 1185, 4262, 1755, 4259, 3290, 2667, 1351,
	2077, 3533, 1360, 4105, 1945, 2088, 215, 215, 1359, 3871,
	4183, 1351, 4093, 1351, 1351, 1351, 3160, 208, 208, 1547,
	3549, 2009, 1448, 216, 2801, 209, 209, 2144, 2757, 774,
	3232, 2083, 923, 4332, 2112, 716, 4308, 2114, 4307, 3365,
	1140, 4250, 2156, 2119, 2039, 3999, 2121, 178, 178, 3798,
	2124, 3138, 1551, 3024, 3025, 3026, 3587, 1389, 941, 2577,
	3023, 3021, 3022, 3014, 3015, 3016, 3017, 3019, 3020, 4396,
	2165, 215, 2205, 939, 1936, 2085, 2098, 2203, 937, 935,
	932, 1355, 208, 2140, 2059, 2058, 3992, 2161, 2096, 1208,
	209, 3984, 3832, 3583, 3582, 1604, 1399, 3576, 2110, 2595,
	3572, 2149, 1680, 1678, 1679, 1671, 1672, 1673, 1674, 1676,
	1677, 1449, 178, 981, 2593, 3570, 1040, 3586, 1040, 3530,
	1446, 2090, 2093, 2094, 2093, 1040, 2166, 775, 1886, 1886,
	1231, 3529, 1040, 1040, 1040, 1040, 1040, 1040, 1040, 1040,
	1040, 1040, 1040, 1040, 1040, 1040, 1040, 1040, 1040, 1040,
	1040, 1040, 1040, 1040, 1040, 1040, 1040, 1040, 1040, 1040,
	1040, 1040, 1040, 1040, 1040, 1040, 1040, 2145, 1040, 3235,
	1040, 1040, 1040, 1040, 1504, 1400, 1504, 2224, 722, 1603,
	2237, 725, 2167, 3114, 1215, 1191, 1215, 983, 2131, 983,
	2132, 2946, 1040, 1545, 2945, 1040, 1040, 980, 2219, 2944,
	1204, 2943, 2901, 1040, 2595, 2677, 2676, 1040, 3120, 1040,
	1040, 2148, 3185, 2672, 2663, 2655, 2654, 1231, 3140, 2593,
	2362, 2653, 4333, 1040, 1040, 1040, 1040, 1197, 1040, 1040,
	1040, 1040, 1040, 1040, 1040, 1040, 1677, 2652, 2631, 2135,
	2235, 1214, 2618, 1214, 2546, 2181, 3014, 3015, 3016, 3017,
	3019, 3020, 2307, 2318, 1040, 1040, 1040, 1040, 1040, 1040,
	1040, 1040, 1040, 2405, 2199, 1642, 2404, 1040, 1585, 2265,
	1208, 1436, 3913, 1435, 1602, 2754, 3349, 1209, 2248, 1162,
	2057, 2316, 2538, 1953, 1954, 999, 1231, 1434, 1458, 1433,
	2218, 2153, 929, 2338, 2339, 1162, 1561, 2233, 1981, 4336,
	2629, 1880, 1880, 982, 2363, 1407, 2584, 2338, 2354, 2617,
	2217, 1040, 1231, 1883, 1883, 2221, 2236, 2173, 2223, 2229,
	2261, 2262, 963, 2557, 1586, 963, 963, 2252, 2214, 2222,
	2253, 2254, 1356, 2400, 1205, 1448, 2648, 1874, 1874, 1615,
	1540, 247, 1206, 1395, 2353, 1160, 2510, 1160, 3020, 2209,
	2322, 1208, 2446, 2446, 2460, 2874, 2338, 2641, 2642, 2480,
	2482, 2322, 2641, 2642, 2357, 2486, 2402, 1858, 3811, 1635,
	4246, 2403, 2889, 3545, 2406, 1647, 2407, 2408, 1667, 1668,
	1587, 1204, 2364, 3967, 2361, 1157, 2641, 2642, 2330, 4337,
	2334, 3794, 991, 4360, 2605, 2328, 3356, 2170, 1619, 2502,
	1698, 1157, 644, 2164, 2351, 777, 776, 1670, 1544, 2535,
	918, 1189, 4307, 983, 2216, 1835, 2312, 2616, 2524, 1231,
	2095, 2174, 983, 1169, 3355, 2366, 983, 639, 2669, 2853,
	841, 2234, 2859, 976, 2313, 2551, 2501, 1202, 2462, 2314,
	1981, 1669, 1569, 2319, 1569, 3593, 1128, 3410, 1557, 1886,
	3831, 3012, 3013, 2471, 1541, 167, 2455, 2442, 1209, 2559,
	2668, 2484, 1204, 1167, 918, 2492, 2493, 979, 3137, 693,
	3536, 2666, 2235, 2509, 2503, 2514, 1420, 1231, 2520, 2521,
	2507, 2508, 3571, 2624, 3592, 3569, 1833, 976, 3558, 3234,
	4318, 1351, 1788, 2549, 2888, 4339, 4363, 3969, 1207, 2232,
	2597, 3204, 2608, 2671, 2651, 3557, 1040, 1040, 2630, 1040,
	2580, 1601, 1964, 2596, 983, 1205, 2660, 1965, 4324, 3912,
	1418, 1003, 919, 1206, 3027, 2366, 2582, 1546, 2566, 2233,
	1598, 2664, 1351, 2045, 2044, 2575, 2862, 4247, 4345, 1209,
	2570, 1675, 933, 1780, 1781, 3200, 3784, 2628, 3193, 2649,
	4323, 2713, 2569, 2571, 2716, 2204, 2718, 933, 2574, 2583,
	2202, 2728, 933, 934, 933, 2578, 4296, 1170, 772, 2768,
	771, 2633, 2017, 692, 3407, 2213, 919, 2024, 2581, 3780,
	2704, 2742, 2620, 3792, 3199, 1697, 1699, 3192, 1351, 1351,
	2366, 1351, 2881, 2882, 2632, 729, 1205, 2600, 2759, 2544,
	3690, 2759, 1037, 1351, 1206, 2707, 2231, 2650, 2912, 2709,
	2594, 2315, 1397, 2815, 3018, 2610, 2613, 3689, 1351, 2703,
	4162, 2317, 1880, 2000, 1917, 3287, 1966, 1978, 2789, 4245,
	834, 3781, 2360, 1616, 1883, 1984, 2910, 3288, 2823, 2824,
	1457, 2634, 1690, 1968, 722, 2734, 2784, 725, 4106, 2830,
	2831, 2832, 3408, 2643, 2645, 2646, 2647, 1040, 1874, 1974,
	1972, 2215, 1999, 2234, 2861, 2819, 4377, 1420, 2172, 3546,
	4338, 2776, 2107, 2841, 1983, 2842, 2843, 2780, 1014, 1207,
	2783, 4120, 2133, 1979, 1980, 1360, 2023, 2304, 2026, 2722,
	2839, 2710, 822, 2858, 2607, 1394, 3139, 2790, 1496, 2146,
	1972, 1040, 2850, 2732, 920, 2800, 3213, 1040, 1040, 2147,
	3287, 1970, 1613, 1975, 2738, 3028, 2821, 167, 808, 4295,
	2825, 2155, 2826, 2158, 2159, 2160, 2763, 1775, 3793, 2771,
	2864, 2232, 2866, 2838, 2752, 2775, 1816, 2836, 2025, 2778,
	2770, 2779, 3117, 2845, 3968, 2847, 2012, 2849, 2844, 2595,
	2846, 2785, 2848, 1972, 2791, 2787, 640, 930, 920, 1846,
	1207, 2786, 1040, 1040, 2611, 2802, 3600, 1617, 1040, 2011,
	4274, 2907, 2857, 2903, 3686, 3598, 3925, 2867, 4343, 4275,
	1691, 1040, 1040, 2860, 2321, 3171, 842, 1040, 1040, 3851,
	1614, 4317, 662, 1040, 2908, 2366, 1820, 1504, 2913, 4160,
	4194, 2007, 1040, 1040, 1040, 1542, 1964, 1646, 1040, 2329,
	4123, 1965, 1820, 3817, 1168, 2348, 2506, 694, 1040, 1156,
	691, 1727, 2904, 3776, 2606, 1979, 1980, 641, 3777, 2869,
	2169, 730, 731, 1971, 4161, 1040, 2163, 1972, 921, 2880,
	3170, 1823, 2951, 1188, 2934, 3909, 2871, 2870, 2302, 1618,
	4364, 2305, 2519, 3029, 982, 2008, 2504, 1823, 2925, 3423,
	4352, 2248, 2875, 3174, 3861, 3680, 835, 836, 3513, 642,
	1182, 643, 1818, 3691, 1821, 3367, 4344, 2890, 2872, 3779,
	1556, 1558, 3601, 3143, 922, 1573, 4126, 4244, 4306, 4304,
	1821, 4141, 921, 2020, 3782, 1158, 4032, 3634, 3012, 3013,
	2301, 2929, 2930, 3274, 2065, 1813, 2933, 1180, 1175, 4346,
	4294, 3176, 1678, 1679, 1671, 1672, 1673, 1674, 1676, 1677,
	1966, 631, 2902, 1657, 3614, 1040, 1040, 1040, 823, 824,
	3687, 1819, 3600, 1981, 1040, 1040, 1040, 1968, 922, 1040,
	3735, 3598, 2003, 2018, 2251, 1982, 1937, 3371, 3975, 1040,
	1162, 1231, 3974, 4369, 4092, 1040, 1656, 1040, 3066, 3067,
	3954, 3074, 3108, 4041, 3635, 1162, 2909, 3580, 733, 732,
	3532, 3797, 2940, 3175, 3908, 3275, 2911, 3267, 3796, 3152,
	3148, 2513, 2019, 1231, 3023, 3021, 3022, 3014, 3015, 3016,
	3017, 3019, 3020, 2743, 2737, 1162, 2726, 3852, 1231, 1934,
	3461, 1656, 1967, 2089, 4378, 1970, 983, 2078, 2070, 3778,
	2108, 4273, 2053, 3406, 1651, 1886, 1160, 4127, 668, 1231,
	3088, 1003, 1822, 734, 735, 1003, 241, 3526, 2241, 3476,
	3368, 4172, 1160, 1351, 1351, 4142, 1040, 3049, 1822, 3599,
	1315, 2210, 3113, 2612, 1315, 3785, 837, 838, 3601, 1930,
	1040, 3637, 3078, 3068, 3102, 1655, 1157, 3876, 2723, 3692,
	1460, 3018, 1886, 4014, 3127, 4012, 3144, 3145, 3097, 3955,
	3163, 1157, 1932, 3159, 3158, 2895, 3135, 2303, 1040, 1351,
	1656, 2873, 2154, 3489, 3161, 3076, 1202, 3165, 3071, 3070,
	3141, 3077, 3101, 3044, 3045, 3046, 3086, 2543, 3060, 1588,
	1655, 1157, 3089, 3090, 3094, 2498, 2542, 3910, 825, 826,
	2541, 1933, 2540, 3106, 1351, 3605, 1442, 3162, 1657, 1727,
	3167, 3168, 3075, 1428, 1231, 1917, 1917, 1971, 3180, 3181,
	3736, 1972, 3182, 1351, 3596, 3149, 1429, 2730, 1351, 3693,
	2635, 3216, 3073, 1440, 3219, 3188, 3131, 3132, 3224, 3226,
	4368, 3124, 3125, 980, 3126, 3963, 3110, 3111, 3112, 2242,
	3087, 1351, 3028, 1657, 3207, 3208, 840, 1351, 3209, 1351,
	3795, 1917, 3092, 1231, 3093, 4099, 3843, 3178, 2500, 1655,
	716, 3462, 3326, 2499, 3211, 2087, 3242, 4314, 1880, 2001,
	3463, 1351, 3173, 3136, 1969, 4010, 3142, 3893, 3251, 2822,
	1883, 2702, 1351, 3202, 4128, 3599, 1917, 3118, 2708, 2706,
	1550, 4175, 1574, 1816, 3527, 3205, 3179, 3952, 1162, 4180,
	3260, 4169, 3283, 1969, 1874, 1917, 3742, 3203, 4100, 3237,
	1917, 3240, 3147, 3177, 2815, 1880, 3478, 2373, 4198, 2004,
	3266, 3184, 3214, 2815, 3082, 4316, 3221, 1883, 4264, 3195,
	4113, 3228, 1633, 3964, 3153, 3198, 3931, 3734, 3604, 2014,
	3953, 1351, 1351, 3042, 3892, 3212, 3190, 2014, 3206, 3191,
	3041, 1874, 1631, 3383, 3292, 3222, 3109, 1610, 3229, 1608,
	1988, 3233, 3346, 1351, 3128, 3313, 1584, 3201, 1582, 1820,
	3006, 2914, 1580, 667, 4176, 1578, 1967, 3306, 2788, 1496,
	3029, 2727, 1992, 1417, 3196, 2636, 2637, 3220, 3197, 1739,
	2662, 4101, 3227, 1744, 3236, 3282, 2626, 2568, 3244, 1231,
	3350, 2633, 1231, 722, 1157, 1853, 725, 1849, 2829, 3276,
	1576, 3264, 1634, 1566, 1823, 3083, 3302, 3284, 1528, 3304,
	3305, 1564, 1438, 3364, 3308, 1441, 3309, 2201, 3310, 1818,
	3363, 1651, 1040, 2855, 2854, 2828, 2230, 1989, 1040, 1040,
	3311, 3312, 1040, 1040, 1040, 3344, 1040, 1821, 3289, 3263,
	2212, 1597, 1439, 2177, 2050, 1040, 1886, 3298, 3362, 3307,
	167, 167, 3328, 3081, 1040, 1913, 3324, 1040, 1759, 1539,
	1411, 2372, 4239, 1231, 3818, 839, 3012, 3013, 4292, 3806,
	3361, 4168, 1040, 3303, 3874, 3291, 3823, 3769, 1819, 3633,
	1231, 3352, 3625, 3353, 3085, 3354, 3585, 3552, 3279, 3359,
	1886, 1886, 1040, 1040, 3550, 1040, 1040, 1040, 3369, 1632,
	3386, 3023, 3021, 3022, 3014, 3015, 3016, 3017, 3019, 3020,
	983, 3403, 3215, 3531, 3270, 3265, 3256, 3395, 3396, 1630,
	3343, 3358, 2782, 2777, 1609, 2755, 1607, 2741, 1993, 3336,
	2733, 3345, 2720, 1583, 2705, 1581, 2128, 1040, 3435, 1579,
	3366, 1040, 1577, 1886, 1886, 1040, 1040, 1040, 1040, 1040,
	1040, 1040, 1040, 1040, 1040, 1040, 1040, 1040, 1040, 1040,
	1040, 1040, 1040, 1040, 3436, 1040, 2126, 2123, 2120, 2115,
	2113, 2109, 1040, 1040, 1886, 2100, 1315, 1575, 931, 1040,
	1565, 2049, 2047, 3391, 2030, 1822, 2015, 3084, 1563, 1437,
	1040, 2200, 1994, 1995, 1998, 1985, 1048, 1973, 4284, 1660,
	1137, 1162, 1162, 3402, 3413, 1040, 3223, 3418, 3409, 3411,
	3412, 2024, 1860, 3425, 3510, 1990, 4308, 1938, 2893, 1880,
	4208, 3338, 3898, 3891, 1003, 1138, 3890, 3432, 3830, 3018,
	1315, 1883, 3765, 3433, 1231, 2816, 3337, 3434, 1957, 1391,
	4043, 245, 245, 245, 2615, 634, 635, 4036, 650, 634,
	650, 660, 2595, 666, 2595, 1874, 1991, 684, 3645, 3494,
	706, 1981, 690, 1880, 1880, 3465, 3440, 2593, 245, 2614,
	3438, 1040, 1628, 1629, 1481, 1883, 1883, 3473, 2168, 2086,
	3511, 3512, 2261, 3426, 1480, 2196, 819, 1040, 1040, 2195,
	3474, 4207, 245, 3509, 3523, 3524, 3525, 2175, 3799, 1874,
	1874, 3466, 3480, 3825, 1562, 1661, 4078, 1157, 1157, 2894,
	167, 3743, 3482, 3483, 1040, 1040, 1880, 1880, 3343, 3721,
	2023, 3485, 3486, 2638, 936, 938, 940, 3336, 1883, 1883,
	3028, 1139, 1667, 1668, 2619, 2261, 3441, 1664, 1183, 645,
	3496, 1040, 762, 4310, 4302, 3497, 4269, 1880, 805, 3579,
	1229, 2719, 1874, 1874, 1330, 2198, 4058, 1160, 238, 1883,
	3622, 1670, 1481, 1351, 1996, 2071, 3469, 1481, 1194, 2667,
	3578, 2675, 1160, 2674, 974, 2659, 918, 1315, 1667, 1668,
	3519, 2623, 1886, 1874, 2657, 2621, 3564, 4167, 2658, 4136,
	4133, 3565, 3567, 656, 2622, 1669, 3551, 1324, 3553, 976,
	1336, 1339, 1160, 4098, 628, 634, 634, 3535, 4050, 3961,
	3581, 1351, 3560, 245, 4028, 4007, 3624, 696, 1040, 3338,
	1156, 4051, 1156, 3613, 3504, 3269, 1162, 1040, 2762, 3647,
	3339, 3340, 3341, 3342, 3337, 1997, 3620, 2485, 2768, 3575,
	1923, 1669, 1867, 4340, 975, 3116, 3627, 1351, 1351, 1351,
	3656, 4200, 4052, 2633, 4367, 3584, 4201, 3638, 3012, 3013,
	4135, 1339, 1339, 1351, 4200, 3603, 1362, 3642, 3029, 4201,
	3621, 3713, 3641, 1549, 2815, 4320, 1667, 1668, 3594, 1548,
	3660, 3602, 1231, 2587, 2588, 2368, 3623, 3515, 919, 2585,
	2586, 2587, 2585, 2401, 1612, 4029, 1158, 1611, 1158, 3993,
	1339, 3826, 3672, 3639, 1231, 3822, 1858, 1040, 1040, 3821,
	3709, 4054, 3631, 1040, 1040, 1886, 3514, 3626, 1040, 1040,
	3334, 1040, 3414, 3679, 3217, 1040, 1753, 3640, 1752, 3643,
	4354, 701, 1157, 4053, 3653, 4325, 1040, 3648, 3654, 4089,
	3590, 3230, 3988, 3591, 3946, 3649, 3943, 3854, 3761, 3655,
	4055, 3671, 1040, 3651, 3607, 1880, 3663, 3608, 3606, 3661,
	3662, 3548, 3543, 3670, 3695, 3301, 3667, 1883, 3669, 3703,
	3273, 3261, 3666, 3272, 3153, 3002, 3001, 3000, 3628, 2999,
	3694, 2998, 3268, 2997, 2996, 2995, 3678, 3688, 2994, 2993,
	2992, 1874, 2991, 3683, 2990, 2989, 2988, 2987, 2986, 2985,
	3021, 3022, 3014, 3015, 3016, 3017, 3019, 3020, 2984, 2983,
	2982, 709, 1162, 2981, 2980, 2979, 2852, 2835, 2834, 3707,
	1162, 2833, 2773, 2747, 1231, 1160, 1231, 2721, 3339, 3340,
	3341, 3342, 2561, 1162, 2560, 703, 2333, 2197, 2194, 2193,
	2192, 3319, 3320, 2191, 2190, 2103, 2102, 2101, 2084, 1231,
	2060, 2056, 2055, 3748, 2054, 2052, 2051, 1627, 1626, 1571,
	1570, 1467, 1466, 1465, 3733, 1464, 1463, 1462, 1461, 1459,
	920, 1454, 1040, 3766, 3767, 1453, 1452, 1451, 1450, 1406,
	1405, 1315, 1404, 2331, 3751, 1403, 1402, 1401, 1880, 1396,
	1390, 1388, 707, 1387, 3800, 1222, 1221, 3790, 1739, 1231,
	1883, 1220, 1219, 1187, 3745, 3746, 3747, 1231, 3791, 1186,
	3750, 3754, 1120, 3740, 1928, 942, 928, 3966, 1157, 3783,
	2245, 3802, 3803, 1621, 1874, 3758, 1157, 3827, 3801, 3828,
	3101, 86, 3744, 167, 3755, 1351, 1351, 3768, 1398, 1157,
	3749, 750, 80, 2021, 3547, 901, 4197, 1384, 3789, 4119,
	757, 4182, 2467, 1351, 3169, 3844, 2678, 2176, 1572, 2178,
	3096, 2526, 4159, 698, 1231, 3717, 2950, 3820, 1315, 1351,
	4085, 3924, 2371, 1757, 3839, 3053, 82, 1024, 1070, 3841,
	3829, 4056, 3850, 3849, 3770, 3534, 4057, 2805, 3847, 3846,
	3853, 1871, 702, 3816, 1873, 990, 1040, 1234, 3840, 1939,
	3867, 3865, 973, 1914, 921, 1030, 1351, 1351, 1351, 1955,
	1948, 2562, 2445, 1047, 1044, 3877, 1852, 1231, 3833, 1875,
	1877, 3894, 708, 3885, 3872, 1046, 3838, 1045, 3845, 1040,
	1040, 1040, 3860, 1173, 3897, 705, 3886, 1315, 3881, 3864,
	1876, 700, 1776, 1043, 1870, 1917, 3630, 1231, 3629, 2729,
	922, 2766, 1040, 3879, 3299, 1040, 1040, 1447, 1445, 2463,
	903, 3878, 1184, 1315, 3805, 1040, 3863, 1336, 1886, 3903,
	1959, 684, 1943, 1040, 1040, 3813, 2327, 3815, 3814, 2355,
	2939, 1750, 697, 1005, 3901, 3900, 1026, 2352, 1231, 1178,
	1351, 1015, 3905, 1004, 245, 3911, 245, 245, 1327, 3921,
	245, 245, 1342, 3916, 1231, 3079, 3058, 3286, 3503, 704,
	2240, 766, 1040, 3009, 2358, 1171, 245, 2468, 1364, 1040,
	2461, 2457, 3933, 710, 3133, 2756, 1637, 1040, 3927, 1886,
	1729, 2767, 1217, 3866, 699, 1008, 2325, 1040, 1160, 1160,
	1040, 1741, 2919, 1393, 2250, 3293, 3099, 3948, 2555, 1040,
	3939, 3940, 4204, 3422, 2064, 1410, 1231, 1416, 1136, 1135,
	1134, 245, 245, 3942, 1327, 4188, 4185, 1351, 1351, 3949,
	1315, 3664, 3938, 3249, 1931, 3947, 2579, 1719, 3257, 1020,
	3987, 1335, 1456, 3064, 3327, 1408, 689, 1032, 3971, 1718,
	3970, 2699, 2698, 4095, 245, 1203, 245, 245, 3998, 1327,
	245, 1342, 1201, 3251, 4013, 1231, 1200, 4022, 1351, 3985,
	1199, 684, 3151, 245, 245, 4376, 3989, 2042, 3544, 213,
	2887, 3995, 1658, 1650, 210, 212, 1040, 1040, 1315, 4002,
	4005, 3979, 3980, 211, 4011, 4003, 819, 3855, 4027, 3507,
	4026, 1880, 3105, 4267, 3562, 1040, 1040, 3990, 3241, 4042,
	4046, 4061, 4062, 1883, 4037, 3994, 22, 4021, 3996, 3997,
	4065, 4040, 1040, 1886, 4006, 4034, 21, 4039, 20, 107,
	41, 19, 122, 3588, 4045, 139, 4059, 1874, 4044, 138,
	115, 137, 136, 3881, 135, 134, 141, 1040, 133, 132,
	1040, 1156, 127, 131, 130, 129, 128, 126, 125, 4073,
	4038, 124, 1880, 123, 121, 4091, 120, 1156, 245, 1040,
	119, 118, 117, 4077, 1883, 2075, 116, 4083, 114, 113,
	112, 3977, 111, 4102, 110, 245, 109, 108, 4090, 680,
	677, 59, 58, 106, 4108, 105, 1964, 4000, 1874, 18,
	4001, 1965, 39, 4074, 4075, 14, 4107, 63, 64, 17,
	1040, 1040, 13, 34, 85, 4122, 97, 3657, 3658, 3659,
	96, 1040, 35, 1160, 1040, 94, 93, 1158, 1351, 33,
	16, 15, 91, 1496, 90, 32, 1336, 4115, 1351, 1351,
	30, 11, 9, 1158, 4121, 8, 4138, 36, 1837, 4140,
	4130, 4131, 12, 4117, 5, 1351, 2467, 172, 4134, 171,
	4129, 174, 4026, 4150, 170, 4137, 173, 84, 169, 1040,
	1040, 168, 4144, 83, 28, 10, 164, 4148, 4149, 4146,
	4023, 3618, 78, 166, 165, 4147, 163, 162, 161, 4116,
	79, 76, 160, 159, 4153, 4155, 1880, 4156, 77, 158,
	4177, 4154, 1040, 1040, 26, 1040, 4164, 6, 1883, 62,
	1966, 4187, 4190, 7, 3906, 3347, 100, 101, 37, 74,
	4143, 73, 4179, 72, 25, 61, 24, 1968, 4206, 4178,
	4199, 4202, 1874, 201, 200, 199, 2467, 2467, 198, 197,
	196, 4218, 191, 4192, 190, 4223, 4196, 195, 193, 192,
	4209, 1040, 1040, 1040, 4222, 194, 4221, 189, 204, 203,
	205, 202, 4213, 2877, 207, 188, 186, 4163, 182, 181,
	4210, 4251, 4217, 4211, 1040, 185, 187, 184, 183, 180,
	4216, 2264, 206, 634, 4238, 4235, 4236, 4256, 4237, 156,
	157, 69, 155, 154, 153, 1970, 152, 151, 150, 149,
	4191, 68, 23, 4195, 245, 2, 245, 4276, 1, 1160,
	245, 0, 0, 4254, 0, 4278, 0, 1160, 0, 4289,
	4280, 0, 1040, 1364, 1327, 245, 0, 245, 4288, 4277,
	1160, 4293, 245, 1364, 650, 0, 4282, 245, 1364, 4287,
	4285, 4286, 4283, 2463, 2463, 684, 4290, 4309, 0, 0,
	4299, 4300, 4301, 0, 0, 4305, 4303, 0, 0, 0,
	4187, 0, 4311, 4190, 0, 0, 4315, 0, 2369, 4313,
	1040, 0, 1040, 4322, 4312, 0, 4206, 0, 0, 4319,
	2467, 2467, 2467, 4326, 4328, 4334, 4327, 4266, 0, 2916,
	2917, 0, 0, 0, 0, 4329, 4321, 4331, 4330, 0,
	0, 0, 0, 0, 0, 1496, 4335, 4347, 4349, 0,
	0, 0, 0, 0, 0, 0, 0, 1971, 0, 0,
	0, 1972, 0, 0, 0, 0, 0, 4361, 4358, 0,
	0, 1040, 1040, 4362, 0, 4355, 0, 0, 0, 1040,
	4365, 1040, 1040, 4371, 0, 0, 4356, 4374, 0, 0,
	0, 4381, 4383, 0, 4379, 4385, 0, 4384, 0, 0,
	4380, 0, 1315, 2536, 2768, 4382, 0, 1961, 0, 0,
	4388, 0, 4389, 0, 0, 0, 3902, 4391, 3904, 4393,
	0, 4394, 0, 0, 4395, 4398, 4390, 2463, 2463, 2463,
	4400, 0, 1040, 4403, 1315, 4405, 0, 4402, 0, 4406,
	4392, 4408, 0, 2694, 0, 4409, 1962, 0, 4399, 1315,
	0, 245, 0, 0, 245, 0, 0, 0, 0, 0,
	1339, 0, 0, 0, 0, 0, 0, 0, 0, 3784,
	1315, 0, 0, 3035, 3036, 3037, 2686, 2684, 0, 4372,
	4373, 0, 0, 2688, 2690, 2680, 0, 1003, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3944, 1003, 3780, 0, 245, 0, 3773, 1339, 245, 0,
	2590, 0, 0, 0, 0, 245, 0, 0, 0, 0,
	0, 245, 0, 3771, 0, 0, 1967, 0, 0, 0,
	4404, 0, 3775, 0, 0, 0, 245, 0, 245, 0,
	0, 0, 634, 0, 245, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3781, 0, 0, 2104, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 245,
	0, 0, 0, 0, 0, 1315, 245, 4004, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3774, 1324, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 684, 0, 0,
	0, 819, 1336, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1315, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 245, 0, 1327, 245,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 684, 2682, 0, 0, 0, 0, 0,
	245, 0, 1156, 0, 2696, 0, 0, 0, 0, 0,
	0, 245, 245, 0, 245, 0, 245, 1156, 245, 0,
	245, 0, 0, 0, 0, 2695, 2687, 2685, 2689, 2691,
	2681, 2683, 2697, 0, 0, 0, 0, 0, 0, 2693,
	0, 2206, 0, 0, 2207, 0, 2208, 1156, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 245, 1339,
	1339, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2700, 0, 0, 0, 0, 0, 1158, 666,
	0, 0, 0, 684, 0, 0, 3776, 0, 0, 0,
	0, 3777, 0, 1158, 0, 0, 0, 0, 2467, 2467,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1315, 1336, 0, 1315, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1158, 0, 0, 0, 0, 1496, 1496,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3779, 0, 0, 1496, 0, 0, 0, 0,
	0, 1336, 0, 1336, 0, 0, 0, 3782, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1315, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3012, 3013, 0, 3030, 3031,
	3032, 1315, 0, 0, 0, 2463, 2463, 0, 0, 0,
	2467, 2467, 2467, 2467, 2467, 2467, 2467, 2467, 2467, 2467,
	2467, 2467, 2467, 2467, 2467, 2467, 2467, 2467, 2467, 0,
	2467, 0, 0, 0, 2701, 0, 0, 0, 0, 0,
	634, 0, 0, 2692, 0, 0, 0, 0, 0, 0,
	0, 3379, 3380, 0, 0, 245, 0, 0, 0, 0,
	0, 0, 0, 0, 634, 0, 0, 0, 3027, 0,
	1156, 245, 3778, 634, 0, 0, 3012, 3013, 0, 3030,
	3031, 3032, 0, 0, 0, 245, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	245, 1342, 0, 0, 0, 0, 0, 0, 3785, 0,
	0, 0, 0, 0, 0, 0, 0, 2463, 2463, 2463,
	2463, 2463, 2463, 2463, 2463, 2463, 2463, 2463, 2463, 2463,
	2463, 2463, 2463, 2463, 2463, 2463, 0, 2463, 0, 0,
	0, 0, 0, 0, 0, 0, 1158, 245, 1342, 3027,
	650, 0, 0, 0, 0, 1315, 0, 245, 3018, 0,
	0, 0, 0, 3442, 3443, 3444, 3445, 3446, 3447, 3448,
	3449, 3450, 3451, 3452, 3453, 3454, 3455, 3456, 3457, 3458,
	3459, 3460, 3065, 3464, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3034, 0, 0, 0,
	0, 2604, 0, 0, 0, 0, 0, 0, 0, 0,
	245, 0, 0, 0, 3091, 0, 0, 0, 3033, 0,
	0, 0, 245, 0, 0, 0, 0, 0, 0, 3104,
	0, 0, 0, 0, 0, 245, 0, 0, 0, 3018,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3122, 0, 245, 0, 0, 0, 0, 0, 0, 3028,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 245, 2711, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3033,
	0, 0, 1364, 0, 0, 245, 0, 0, 0, 0,
	0, 0, 0, 245, 0, 0, 0, 0, 0, 0,
	0, 0, 2751, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2604, 0, 634, 0, 0, 2772, 0, 0,
	3028, 0, 0, 245, 0, 0, 245, 0, 0, 0,
	245, 0, 245, 0, 0, 0, 0, 1327, 0, 245,
	245, 0, 1342, 1342, 0, 0, 1336, 0, 0, 0,
	0, 0, 2798, 819, 0, 2604, 2604, 0, 0, 0,
	0, 0, 0, 1156, 1156, 0, 0, 0, 0, 2075,
	245, 0, 0, 0, 0, 0, 0, 3029, 0, 0,
	0, 0, 0, 1315, 3104, 0, 0, 0, 0, 245,
	1327, 245, 0, 0, 1364, 0, 1364, 1364, 0, 0,
	1327, 0, 1327, 0, 1327, 1315, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1667, 1668, 0, 0, 0, 0, 0, 0,
	245, 245, 245, 245, 1327, 245, 0, 245, 0, 1158,
	1158, 0, 0, 0, 1698, 0, 0, 0, 0, 0,
	0, 1670, 0, 0, 0, 0, 0, 0, 3029, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 245, 0,
	0, 0, 0, 0, 0, 0, 245, 0, 0, 0,
	0, 0, 0, 0, 0, 1669, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1689, 0, 0, 1336, 1336,
	0, 3024, 3025, 3026, 1686, 0, 0, 0, 3023, 3021,
	3022, 3014, 3015, 3016, 3017, 3019, 3020, 0, 0, 0,
	0, 0, 0, 0, 0, 1315, 0, 1315, 0, 0,
	1330, 0, 0, 1229, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1315, 0, 0, 0, 0, 3698, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1364, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1692, 1693, 1694, 1695, 1336,
	0, 0, 3024, 3025, 3026, 1675, 0, 0, 1156, 3023,
	3021, 3022, 3014, 3015, 3016, 3017, 3019, 3020, 0, 0,
	1315, 0, 0, 0, 3399, 0, 0, 0, 1315, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3415, 0, 0, 148, 0, 0, 0, 0, 1697,
	1699, 70, 0, 45, 44, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 71, 0, 0,
	143, 0, 0, 0, 1684, 1685, 0, 0, 0, 0,
	0, 0, 0, 75, 1158, 1315, 0, 0, 0, 0,
	0, 0, 0, 0, 65, 0, 0, 0, 0, 0,
	0, 47, 0, 145, 0, 0, 1690, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 46, 0, 81, 3012, 3013, 245, 3030, 3031, 3032,
	2467, 0, 0, 0, 0, 0, 0, 0, 1315, 0,
	0, 245, 0, 0, 0, 0, 634, 49, 66, 0,
	0, 634, 0, 0, 634, 50, 0, 634, 634, 0,
	87, 1815, 0, 634, 146, 0, 0, 0, 1315, 0,
	0, 245, 48, 0, 102, 0, 0, 2467, 0, 88,
	99, 0, 0, 1364, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1156, 3506, 0, 3027, 0, 0,
	0, 0, 1156, 0, 0, 1364, 0, 0, 0, 1315,
	0, 0, 0, 0, 0, 1156, 51, 0, 0, 0,
	0, 0, 0, 0, 1696, 1315, 0, 0, 0, 2604,
	2604, 245, 0, 1342, 89, 0, 2604, 2463, 0, 3155,
	0, 0, 0, 0, 1691, 0, 0, 2604, 3155, 0,
	2604, 3155, 3155, 0, 0, 0, 0, 0, 0, 0,
	0, 1003, 0, 0, 0, 245, 245, 1342, 245, 0,
	1158, 0, 0, 0, 0, 0, 0, 1315, 1158, 0,
	0, 0, 0, 3930, 2463, 0, 0, 3018, 1342, 245,
	0, 1158, 1327, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2604, 0, 3218, 2604, 1342, 0,
	0, 2604, 2604, 1342, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1315, 2467, 0, 0,
	3957, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 989, 245, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1339, 0, 0, 245, 3245, 0, 0,
	3247, 2604, 0, 0, 245, 0, 0, 0, 245, 0,
	1416, 0, 1687, 1683, 92, 1680, 1678, 1679, 1671, 1672,
	1673, 1674, 1676, 1677, 0, 0, 0, 0, 3028, 2751,
	0, 52, 1327, 0, 245, 0, 0, 2604, 0, 634,
	0, 0, 2075, 0, 55, 0, 2604, 0, 0, 57,
	0, 0, 0, 0, 245, 67, 0, 0, 245, 245,
	56, 175, 95, 0, 98, 0, 0, 0, 53, 0,
	0, 0, 147, 0, 2463, 0, 0, 0, 0, 54,
	0, 1667, 1668, 0, 0, 245, 2751, 0, 214, 2751,
	0, 0, 0, 0, 0, 0, 60, 0, 0, 0,
	140, 0, 0, 1698, 0, 0, 0, 0, 0, 0,
	1670, 1003, 1003, 0, 144, 0, 0, 0, 1667, 1668,
	4082, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	216, 0, 0, 3357, 0, 0, 1327, 245, 0, 245,
	1698, 0, 0, 0, 1669, 0, 0, 1670, 0, 0,
	0, 0, 0, 0, 1689, 142, 0, 0, 0, 0,
	0, 0, 0, 1686, 0, 0, 3029, 0, 0, 0,
	179, 0, 245, 0, 0, 0, 0, 0, 215, 0,
	0, 1669, 0, 0, 0, 0, 0, 0, 0, 208,
	0, 1689, 0, 0, 0, 0, 0, 209, 0, 0,
	1686, 0, 1667, 1668, 1003, 1700, 1701, 1702, 1710, 1711,
	1712, 0, 0, 0, 3382, 0, 0, 0, 0, 178,
	0, 0, 3, 1703, 1698, 0, 0, 3753, 3420, 0,
	0, 1670, 0, 0, 1692, 1693, 1694, 1695, 0, 1716,
	0, 0, 0, 0, 1675, 0, 0, 0, 0, 0,
	3763, 3377, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1669, 0, 0, 0, 0,
	0, 1692, 1693, 1694, 1695, 1689, 0, 0, 0, 0,
	0, 1675, 0, 0, 1686, 0, 0, 0, 1697, 1699,
	3024, 3025, 3026, 0, 0, 0, 0, 3023, 3021, 3022,
	3014, 3015, 3016, 3017, 3019, 3020, 0, 0, 0, 0,
	0, 0, 0, 1684, 1685, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1697, 1699, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1690, 0, 245, 245, 2075,
	1684, 1685, 0, 0, 0, 1692, 1693, 1694, 1695, 0,
	0, 0, 0, 1339, 0, 1675, 0, 0, 0, 634,
	634, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1690, 0, 0, 0, 0, 0, 0, 0,
	0, 1364, 1364, 0, 0, 0, 0, 0, 0, 0,
	1707, 0, 0, 1717, 0, 1364, 1364, 1364, 0, 1697,
	1699, 0, 0, 0, 0, 0, 0, 0, 1229, 0,
	0, 0, 0, 0, 0, 1713, 0, 1714, 0, 0,
	0, 0, 0, 0, 1684, 1685, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 70, 0, 0, 3922, 0,
	0, 0, 1705, 0, 0, 0, 0, 0, 0, 0,
	0, 71, 684, 1696, 0, 0, 1690, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 75, 0, 0,
	0, 989, 0, 1691, 0, 989, 0, 0, 0, 3922,
	0, 0, 0, 245, 0, 0, 0, 0, 0, 0,
	1696, 0, 0, 0, 0, 2264, 0, 1715, 0, 0,
	0, 1342, 245, 0, 0, 0, 0, 81, 0, 0,
	1691, 0, 0, 245, 0, 1704, 0, 0, 0, 0,
	0, 0, 1366, 245, 1372, 0, 1378, 0, 0, 0,
	0, 0, 245, 0, 0, 0, 0, 245, 0, 0,
	0, 245, 0, 0, 87, 0, 0, 2264, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 102, 0,
	0, 2604, 245, 88, 99, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1696, 0, 0, 0, 0, 0,
	0, 2798, 2798, 0, 0, 0, 0, 819, 819, 2604,
	0, 0, 2751, 2751, 1691, 0, 819, 2604, 1497, 0,
	0, 1687, 1683, 0, 1680, 1678, 1679, 1671, 1672, 1673,
	1674, 1676, 1677, 0, 0, 1515, 245, 1520, 89, 1708,
	0, 0, 0, 0, 0, 0, 0, 1529, 0, 1534,
	0, 0, 0, 0, 0, 0, 0, 0, 1687, 1683,
	0, 1680, 1678, 1679, 1671, 1672, 1673, 1674, 1676, 1677,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1336, 0, 0, 0, 0, 0, 3718, 0, 0, 0,
	0, 1593, 0, 0, 1599, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1706, 0, 0, 0, 1681, 1682,
	1688, 1709, 1687, 1683, 0, 1680, 1678, 1679, 1671, 1672,
	1673, 1674, 1676, 1677, 0, 0, 0, 0, 2963, 0,
	0, 0, 2964, 0, 0, 0, 0, 0, 245, 0,
	0, 0, 0, 0, 1364, 0, 245, 0, 92, 0,
	0, 0, 0, 0, 0, 0, 1339, 0, 0, 245,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1720, 1721, 1722, 1723, 1724, 1725,
	1726, 1667, 1668, 0, 0, 0, 2604, 2604, 2604, 0,
	0, 0, 0, 0, 0, 175, 95, 0, 98, 1364,
	0, 0, 0, 1698, 0, 1738, 0, 2604, 0, 3155,
	1670, 1751, 1364, 1364, 245, 1342, 0, 0, 0, 0,
	0, 0, 214, 0, 0, 0, 1342, 245, 1342, 245,
	814, 0, 0, 0, 140, 0, 0, 0, 0, 0,
	2604, 0, 2604, 245, 1669, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1689, 0, 0, 0, 0, 0,
	0, 0, 0, 1686, 216, 0, 0, 0, 2604, 0,
	0, 0, 0, 3857, 0, 0, 0, 0, 0, 1667,
	1668, 0, 245, 0, 0, 0, 0, 0, 0, 142,
	0, 245, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1698, 0, 0, 179, 0, 0, 0, 1670, 0,
	0, 0, 215, 0, 3376, 0, 1809, 1809, 1809, 0,
	0, 0, 0, 208, 0, 1364, 0, 0, 0, 0,
	0, 209, 0, 0, 1692, 1693, 1694, 1695, 0, 0,
	0, 0, 1669, 0, 1675, 0, 0, 0, 0, 0,
	0, 0, 1689, 178, 0, 0, 0, 0, 0, 0,
	0, 1686, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1697, 1699,
	0, 0, 0, 0, 989, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1049, 0,
	0, 0, 2905, 1684, 1685, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2604, 0, 3155, 0,
	0, 3951, 1692, 1693, 1694, 1695, 0, 0, 0, 245,
	0, 0, 1675, 0, 0, 1690, 0, 0, 0, 0,
	0, 0, 0, 246, 246, 246, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 684, 0, 0, 0, 0,
	0, 0, 0, 0, 1327, 0, 0, 0, 0, 0,
	246, 0, 0, 0, 0, 0, 1697, 1699, 1342, 245,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 246, 0, 0, 0, 3951, 0,
	0, 1684, 1685, 0, 0, 0, 2604, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4031, 1667,
	1668, 0, 1700, 1701, 1702, 1710, 1711, 1712, 0, 0,
	1364, 0, 0, 1690, 0, 0, 0, 0, 0, 0,
	1703, 1698, 0, 0, 0, 0, 0, 0, 1670, 0,
	0, 0, 0, 1696, 0, 0, 1716, 0, 0, 245,
	245, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1691, 0, 0, 0, 0, 0, 0,
	0, 0, 1669, 3420, 0, 0, 0, 0, 0, 0,
	0, 0, 1689, 0, 0, 0, 0, 0, 0, 3951,
	0, 1686, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 245, 0, 0, 0,
	0, 1696, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3857, 0, 0, 0, 0,
	0, 1691, 1692, 1693, 1694, 1695, 0, 0, 0, 245,
	0, 0, 1675, 0, 0, 0, 0, 0, 0, 0,
	3155, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1687, 1683, 0, 1680, 1678, 1679, 1671, 1672, 1673,
	1674, 1676, 1677, 0, 0, 0, 1364, 1707, 1364, 0,
	1717, 0, 0, 0, 0, 0, 1697, 1699, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1713, 4173, 1714, 0, 0, 0, 0, 0,
	1364, 1684, 1685, 245, 0, 0, 0, 1667, 1668, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1705,
	245, 2604, 0, 0, 0, 0, 0, 0, 0, 1698,
	0, 0, 0, 1690, 0, 0, 1670, 0, 245, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1687,
	1683, 0, 1680, 1678, 1679, 1671, 1672, 1673, 1674, 1676,
	1677, 0, 0, 3420, 0, 0, 0, 0, 0, 0,
	1669, 0, 0, 0, 1715, 0, 0, 2239, 0, 2243,
	1689, 0, 0, 0, 0, 0, 2257, 0, 0, 1686,
	0, 0, 1704, 2266, 2267, 2268, 2269, 2270, 2271, 2272,
	2273, 2274, 2275, 2276, 2277, 2278, 2279, 2280, 2281, 2282,
	2283, 2284, 2285, 2286, 2287, 2288, 2289, 2290, 2291, 2292,
	2293, 2294, 2295, 2296, 2297, 2298, 2299, 2300, 0, 2306,
	0, 2308, 2309, 2310, 2311, 0, 3951, 0, 0, 0,
	2898, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1696, 0, 2335, 0, 0, 0, 0, 0, 0,
	1692, 1693, 1694, 1695, 1738, 0, 0, 1364, 2350, 2604,
	1675, 1691, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2380, 2383, 2386, 2389, 0, 2393,
	2394, 2395, 2396, 2397, 2398, 2399, 1708, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1697, 1699, 0, 2459, 0, 2470,
	2472, 2477, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1684,
	1685, 0, 0, 0, 0, 0, 0, 0, 0, 2798,
	0, 0, 0, 0, 0, 0, 0, 2604, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1690, 2798, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1706, 0, 0, 0, 1681, 1682, 1688, 1709, 1687,
	1683, 0, 1680, 1678, 1679, 1671, 1672, 1673, 1674, 1676,
	1677, 0, 0, 0, 0, 2346, 0, 0, 0, 2347,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 246, 1235, 246, 246,
	0, 1235, 246, 246, 0, 1235, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 246, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1235, 1696,
	0, 0, 0, 0, 0, 0, 0, 0, 1667, 1668,
	0, 1700, 1701, 1702, 1710, 1711, 1712, 0, 0, 1691,
	0, 1235, 0, 246, 246, 0, 0, 0, 0, 1703,
	1698, 0, 0, 0, 0, 0, 0, 1670, 1667, 1668,
	0, 0, 0, 0, 0, 1716, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 246, 0, 246, 246,
	1698, 0, 246, 0, 1235, 0, 0, 1670, 0, 0,
	1235, 1669, 0, 0, 1235, 246, 246, 2714, 2715, 0,
	2717, 1689, 0, 0, 0, 0, 0, 0, 1235, 0,
	1686, 0, 0, 0, 0, 0, 1667, 1668, 0, 0,
	0, 1669, 1710, 1711, 1712, 0, 0, 0, 0, 0,
	0, 1689, 0, 0, 0, 0, 0, 0, 1698, 0,
	1686, 0, 0, 0, 0, 1670, 0, 0, 0, 0,
	0, 0, 0, 1716, 0, 0, 0, 0, 0, 0,
	1235, 0, 0, 0, 0, 0, 0, 1687, 1683, 0,
	1680, 1678, 1679, 1671, 1672, 1673, 1674, 1676, 1677, 1669,
	0, 1692, 1693, 1694, 1695, 0, 0, 0, 0, 1689,
	246, 1675, 0, 0, 0, 0, 0, 0, 1686, 0,
	0, 0, 0, 0, 0, 0, 0, 246, 0, 70,
	0, 1692, 1693, 1694, 1695, 0, 0, 0, 0, 0,
	0, 1675, 0, 0, 0, 71, 1707, 0, 0, 1717,
	0, 0, 0, 0, 0, 1697, 1699, 0, 0, 0,
	0, 75, 0, 0, 0, 0, 0, 0, 2851, 0,
	0, 1713, 0, 1714, 0, 0, 0, 0, 0, 0,
	1684, 1685, 0, 0, 0, 1697, 1699, 0, 0, 1692,
	1693, 1694, 1695, 0, 0, 0, 0, 0, 1705, 1675,
	0, 81, 0, 0, 0, 0, 0, 0, 0, 0,
	1684, 1685, 1690, 0, 0, 0, 0, 0, 1720, 1721,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1707, 810, 0, 1717, 87, 0,
	0, 0, 1690, 1697, 1699, 0, 0, 0, 0, 0,
	0, 0, 102, 1715, 0, 0, 0, 88, 99, 0,
	0, 70, 0, 813, 812, 0, 0, 0, 1684, 1685,
	0, 1704, 0, 2899, 2900, 0, 0, 71, 0, 2906,
	0, 0, 0, 0, 0, 0, 1705, 0, 0, 0,
	0, 0, 0, 75, 0, 0, 0, 0, 2920, 2921,
	1690, 0, 0, 0, 2350, 0, 0, 0, 0, 0,
	0, 0, 89, 2928, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2942,
	1696, 0, 0, 81, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2954, 0, 0, 0,
	1691, 0, 246, 0, 0, 0, 0, 0, 0, 0,
	1696, 0, 0, 1235, 0, 0, 0, 246, 246, 246,
	87, 0, 0, 0, 246, 1708, 0, 0, 0, 246,
	1691, 0, 1235, 0, 102, 0, 0, 0, 0, 88,
	99, 0, 0, 1235, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1235, 1696, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2552, 0, 0, 0, 0, 0, 1691, 0,
	0, 0, 0, 0, 89, 2477, 2477, 2477, 0, 0,
	0, 0, 92, 0, 0, 0, 0, 0, 0, 0,
	1809, 0, 0, 1708, 0, 0, 0, 0, 3069, 0,
	1706, 0, 0, 0, 1681, 1682, 1688, 1709, 1687, 1683,
	0, 1680, 1678, 1679, 1671, 1672, 1673, 1674, 1676, 1677,
	0, 0, 0, 0, 0, 0, 0, 0, 3724, 175,
	95, 0, 98, 0, 0, 0, 0, 0, 1687, 1683,
	0, 1680, 1678, 1679, 1671, 1672, 1673, 1674, 1676, 1677,
	0, 0, 0, 0, 0, 0, 214, 0, 0, 0,
	0, 0, 0, 0, 814, 0, 0, 0, 140, 0,
	0, 0, 0, 0, 0, 0, 0, 989, 0, 0,
	0, 0, 0, 246, 1235, 1235, 246, 0, 1706, 0,
	0, 989, 0, 0, 1235, 1709, 1687, 1683, 216, 1680,
	1678, 1679, 1671, 1672, 1673, 1674, 1676, 1677, 0, 0,
	0, 0, 0, 0, 92, 0, 0, 0, 0, 3172,
	0, 0, 0, 142, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 246, 0, 179, 0,
	246, 0, 0, 0, 0, 0, 215, 246, 0, 0,
	0, 0, 0, 246, 0, 0, 0, 208, 0, 0,
	0, 175, 95, 0, 98, 209, 0, 0, 246, 0,
	246, 0, 0, 0, 0, 0, 246, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 178, 214, 0,
	0, 0, 0, 0, 0, 0, 814, 0, 0, 0,
	140, 246, 0, 0, 0, 0, 0, 0, 246, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 70, 0,
	216, 0, 0, 0, 0, 0, 1235, 0, 1235, 0,
	1235, 0, 0, 0, 71, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 142, 1235, 1235, 0, 0,
	75, 0, 0, 0, 0, 0, 0, 1235, 246, 0,
	179, 246, 0, 0, 0, 0, 0, 0, 215, 1235,
	0, 1235, 1235, 1235, 0, 0, 0, 0, 0, 208,
	0, 0, 246, 0, 0, 0, 0, 209, 0, 0,
	81, 0, 0, 246, 246, 0, 246, 0, 246, 0,
	246, 0, 246, 0, 0, 0, 0, 0, 0, 811,
	0, 0, 0, 0, 1036, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 87, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	246, 102, 0, 0, 0, 0, 88, 99, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	244, 244, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2257, 0, 0, 723, 0, 1235, 3374,
	3375, 0, 0, 3378, 0, 0, 0, 3381, 0, 0,
	0, 89, 0, 0, 0, 0, 3385, 0, 0, 0,
	723, 0, 0, 0, 0, 3392, 0, 0, 3069, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3404, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3427, 3428, 0, 3429, 3430, 3431, 0,
	0, 0, 0, 1667, 1668, 796, 1700, 1701, 1702, 1710,
	1711, 1712, 0, 0, 0, 1235, 0, 0, 0, 0,
	0, 0, 0, 0, 1703, 1698, 0, 0, 0, 780,
	0, 0, 1670, 0, 0, 0, 0, 0, 3437, 0,
	1716, 0, 3439, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1669, 781, 0, 0,
	0, 1159, 0, 3467, 3468, 0, 1689, 0, 782, 0,
	0, 92, 0, 0, 1235, 1686, 0, 0, 0, 0,
	0, 3479, 0, 0, 0, 0, 0, 0, 0, 783,
	0, 1152, 0, 0, 0, 0, 3488, 246, 0, 0,
	1235, 70, 0, 0, 0, 0, 0, 0, 0, 802,
	0, 0, 246, 0, 0, 0, 0, 71, 175, 95,
	0, 98, 0, 0, 0, 0, 0, 0, 784, 0,
	0, 0, 0, 75, 0, 0, 240, 240, 630, 0,
	0, 0, 0, 0, 0, 214, 1692, 1693, 1694, 1695,
	0, 785, 0, 814, 0, 0, 1675, 140, 0, 246,
	0, 0, 3528, 0, 0, 0, 0, 0, 0, 246,
	0, 786, 0, 81, 787, 0, 0, 0, 3537, 3540,
	0, 0, 0, 0, 0, 0, 0, 216, 0, 709,
	0, 1707, 0, 0, 1717, 0, 0, 0, 0, 0,
	1697, 1699, 0, 0, 0, 0, 3561, 1235, 0, 0,
	87, 0, 142, 801, 0, 0, 1713, 0, 1714, 0,
	0, 0, 246, 0, 102, 1684, 1685, 179, 0, 88,
	99, 0, 0, 0, 246, 215, 0, 0, 0, 0,
	0, 0, 0, 1705, 0, 0, 208, 246, 0, 0,
	0, 0, 0, 0, 209, 0, 0, 1690, 0, 0,
	0, 0, 0, 0, 246, 1235, 0, 0, 0, 0,
	798, 0, 0, 0, 0, 0, 1509, 0, 0, 1235,
	0, 0, 0, 0, 89, 0, 0, 0, 0, 246,
	0, 0, 0, 0, 0, 0, 0, 0, 1715, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1809,
	0, 0, 0, 0, 0, 0, 1704, 246, 3650, 0,
	1235, 0, 0, 0, 0, 246, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 789, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 246, 0, 0, 246, 0,
	0, 0, 246, 0, 246, 808, 0, 790, 0, 0,
	0, 246, 246, 0, 0, 1696, 1235, 1235, 0, 1235,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1235, 0, 0, 0, 1691, 0, 0, 3696, 3697,
	708, 0, 246, 0, 3701, 3702, 1235, 791, 0, 3705,
	3706, 806, 807, 804, 0, 0, 3710, 0, 0, 799,
	1708, 246, 792, 246, 92, 0, 0, 3714, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3719, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 793,
	800, 0, 246, 246, 246, 246, 0, 246, 794, 246,
	0, 175, 95, 0, 98, 0, 0, 0, 0, 0,
	0, 0, 795, 0, 0, 0, 0, 803, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 214, 0,
	246, 710, 0, 0, 0, 0, 814, 0, 246, 0,
	140, 0, 797, 0, 0, 1706, 0, 0, 0, 1681,
	1682, 1688, 1709, 1687, 1683, 0, 1680, 1678, 1679, 1671,
	1672, 1673, 1674, 1676, 1677, 0, 0, 0, 0, 0,
	216, 0, 244, 3390, 244, 244, 0, 0, 244, 244,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3540, 723, 142, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	179, 0, 0, 0, 0, 0, 0, 0, 215, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 208,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 244,
	244, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1507,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 244, 0, 244, 244, 0, 0, 244, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 244, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3540, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3917, 3918, 3919, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1235,
	0, 0, 0, 2257, 0, 0, 3928, 3929, 0, 0,
	0, 0, 0, 0, 0, 0, 244, 0, 0, 0,
	0, 0, 0, 0, 3937, 0, 1025, 104, 0, 0,
	0, 1235, 0, 244, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1235, 0, 0, 1226,
	0, 0, 0, 0, 0, 1334, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1235, 0, 0,
	3540, 0, 0, 0, 0, 0, 0, 0, 3976, 0,
	0, 1235, 1235, 0, 0, 0, 0, 0, 3983, 0,
	0, 989, 0, 0, 0, 0, 0, 0, 0, 0,
	3991, 0, 0, 246, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 104, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1235, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 246, 246, 0,
	246, 0, 0, 0, 0, 0, 0, 246, 0, 1471,
	0, 1471, 1471, 0, 0, 0, 0, 0, 0, 0,
	0, 246, 1235, 0, 0, 0, 0, 0, 1513, 1514,
	0, 0, 1235, 250, 0, 0, 0, 3540, 3540, 0,
	0, 1235, 0, 0, 0, 0, 1235, 0, 0, 0,
	0, 0, 0, 0, 964, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 984, 0, 0, 0, 1235,
	0, 0, 0, 0, 246, 1235, 0, 1235, 0, 0,
	0, 1235, 0, 0, 0, 0, 0, 0, 246, 0,
	0, 0, 0, 0, 0, 0, 246, 0, 4094, 1235,
	246, 4097, 0, 1146, 0, 715, 0, 0, 0, 0,
	1235, 0, 1831, 0, 1159, 0, 0, 0, 244, 0,
	3540, 0, 0, 1620, 0, 0, 0, 0, 0, 715,
	0, 0, 0, 244, 1831, 244, 0, 0, 0, 0,
	723, 0, 0, 0, 0, 723, 246, 0, 0, 0,
	246, 246, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 989, 989, 0, 0, 0, 0, 0, 0, 1235,
	1235, 0, 3540, 0, 0, 3540, 0, 246, 2438, 2439,
	2440, 2441, 2434, 2435, 2436, 2437, 0, 0, 0, 0,
	0, 1235, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2257, 0, 0, 0, 0, 0, 1235, 0, 246,
	1235, 246, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 989, 0, 0, 2414, 2415, 2416,
	2417, 0, 0, 0, 246, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2426, 2427,
	2428, 2429, 2422, 2423, 2424, 2425, 2430, 2431, 2432, 2433,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1235, 4234, 4234, 4234, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1235, 244,
	0, 0, 723, 0, 0, 4255, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2410, 2411, 2412, 2413, 2418, 2419, 2420, 2421, 0,
	0, 0, 0, 0, 0, 1847, 0, 0, 0, 0,
	0, 0, 244, 4234, 0, 0, 244, 0, 0, 0,
	1856, 0, 1334, 244, 0, 0, 0, 0, 0, 244,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 244, 740, 244, 0, 0, 0,
	0, 0, 244, 0, 0, 0, 0, 0, 0, 0,
	0, 3540, 0, 3540, 0, 0, 0, 0, 0, 741,
	0, 0, 0, 0, 0, 0, 0, 244, 0, 0,
	0, 0, 0, 0, 244, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 742, 0, 759,
	0, 0, 1235, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4234, 4366, 0, 0, 0, 0, 0, 0,
	4370, 0, 0, 0, 743, 0, 0, 0, 0, 744,
	0, 0, 0, 0, 244, 0, 0, 244, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 767,
	0, 0, 0, 0, 0, 745, 0, 0, 244, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 765, 723,
	244, 0, 244, 0, 244, 0, 244, 0, 244, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 746, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 747, 0, 0, 748, 246, 244, 0, 0, 0,
	0, 0, 0, 0, 0, 769, 0, 0, 0, 709,
	0, 1235, 0, 0, 246, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 246, 0, 0, 104, 2062,
	104, 0, 104, 2069, 0, 246, 0, 0, 0, 1072,
	0, 0, 0, 0, 246, 0, 2081, 0, 0, 246,
	0, 0, 0, 246, 0, 0, 0, 0, 0, 1235,
	0, 2092, 0, 2092, 0, 0, 0, 0, 0, 2099,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 768, 0, 0, 0, 0, 0, 0, 0, 0,
	763, 0, 0, 0, 1471, 1235, 1235, 1235, 0, 0,
	0, 1334, 0, 0, 104, 0, 0, 0, 984, 104,
	104, 1235, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 104, 0, 104, 0, 0, 0, 0, 246, 0,
	1235, 0, 0, 104, 0, 104, 0, 0, 0, 0,
	0, 0, 1232, 0, 0, 0, 1232, 749, 0, 0,
	1352, 0, 1235, 0, 0, 0, 0, 0, 751, 0,
	0, 2069, 0, 0, 2151, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1352, 0, 2171, 0, 752, 0, 0,
	0, 0, 0, 1159, 0, 104, 0, 2182, 0, 2184,
	0, 2186, 0, 2188, 0, 2189, 1352, 0, 0, 1159,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	708, 0, 0, 244, 0, 0, 0, 0, 0, 0,
	0, 739, 0, 760, 0, 0, 0, 0, 244, 0,
	0, 0, 753, 2211, 0, 0, 0, 0, 0, 1352,
	0, 0, 0, 0, 0, 1352, 1163, 0, 0, 1352,
	0, 0, 0, 0, 0, 758, 0, 0, 0, 0,
	0, 0, 1235, 1352, 1235, 0, 0, 0, 0, 754,
	0, 0, 772, 964, 771, 244, 0, 0, 755, 0,
	0, 0, 0, 0, 0, 244, 0, 1235, 0, 0,
	0, 0, 756, 1732, 0, 0, 0, 764, 0, 0,
	0, 0, 0, 773, 0, 770, 0, 0, 0, 0,
	1737, 710, 0, 0, 1743, 1352, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 246, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1235, 244, 246,
	0, 246, 0, 0, 0, 1235, 0, 0, 0, 0,
	244, 0, 0, 0, 0, 246, 0, 0, 0, 0,
	0, 0, 0, 244, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1235, 1235, 0, 0, 0, 0, 0,
	244, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1235, 0, 0, 246, 0, 0, 0, 0, 0,
	0, 0, 1235, 246, 0, 723, 0, 1235, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 1829, 0, 1832, 0, 104, 0,
	0, 244, 0, 0, 1235, 1235, 1235, 0, 0, 0,
	0, 0, 0, 0, 0, 1235, 0, 0, 0, 0,
	2533, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 0, 0, 244, 0, 0, 0, 244, 0,
	244, 0, 0, 0, 0, 1235, 0, 244, 244, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 244, 0,
	0, 0, 0, 0, 0, 0, 1235, 0, 1235, 0,
	0, 0, 2081, 0, 0, 0, 0, 244, 0, 244,
	0, 0, 1235, 0, 0, 0, 0, 0, 0, 0,
	0, 246, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 244, 244,
	244, 244, 0, 244, 0, 244, 0, 0, 0, 0,
	0, 0, 0, 0, 1235, 0, 0, 0, 1232, 0,
	0, 246, 0, 0, 0, 1235, 1235, 0, 0, 715,
	0, 0, 0, 0, 715, 0, 244, 1352, 0, 0,
	0, 0, 0, 0, 244, 0, 0, 1334, 1352, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1235, 0, 0, 1235, 0, 0, 0,
	0, 0, 1232, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2069, 246, 246, 0, 0, 0, 0, 0, 2081, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2774, 0,
	0, 1471, 0, 0, 0, 1471, 0, 1471, 1163, 0,
	0, 0, 1163, 0, 0, 0, 1163, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2827, 0, 0, 246, 1163,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2837, 0, 2840, 0, 0, 1352,
	1352, 0, 1163, 0, 984, 0, 984, 0, 0, 1232,
	0, 246, 0, 0, 0, 0, 1235, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1235, 1235, 0, 0,
	0, 0, 0, 0, 0, 2863, 1334, 2865, 1334, 0,
	2868, 0, 0, 1235, 0, 1163, 0, 0, 0, 0,
	0, 1163, 0, 0, 0, 1163, 0, 0, 0, 0,
	0, 0, 0, 0, 1159, 0, 0, 0, 0, 1163,
	0, 0, 0, 1471, 0, 0, 0, 0, 0, 1159,
	0, 2896, 0, 0, 0, 246, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 246, 0, 0, 0, 0, 0, 0, 1831,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	246, 1163, 0, 0, 0, 0, 0, 0, 1667, 1668,
	0, 1700, 1701, 1702, 1710, 1711, 1712, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1703,
	1698, 1352, 0, 1352, 0, 1352, 964, 1670, 0, 964,
	964, 0, 0, 0, 0, 1716, 0, 0, 0, 244,
	0, 1352, 1352, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1352, 0, 0, 0, 0, 0, 0, 0,
	0, 1669, 0, 0, 1352, 0, 1352, 1352, 1352, 0,
	0, 1689, 0, 244, 244, 0, 244, 0, 0, 0,
	1686, 0, 0, 1831, 2324, 0, 0, 0, 715, 0,
	0, 0, 0, 0, 0, 0, 0, 244, 0, 0,
	984, 0, 0, 0, 0, 0, 0, 0, 0, 1737,
	0, 0, 0, 1737, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1041, 0, 0,
	244, 1692, 1693, 1694, 1695, 0, 0, 0, 0, 0,
	0, 1675, 0, 0, 723, 0, 0, 0, 0, 0,
	0, 0, 244, 0, 0, 0, 244, 0, 0, 0,
	0, 0, 0, 1232, 0, 1146, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1707, 0, 0, 1717,
	0, 1832, 1159, 0, 0, 1697, 1699, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1713, 244, 1714, 0, 0, 244, 244, 0, 0,
	1684, 1685, 0, 0, 104, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1705, 0,
	0, 0, 0, 244, 0, 0, 0, 1163, 0, 1163,
	0, 0, 1690, 0, 0, 0, 0, 0, 0, 0,
	1232, 0, 0, 0, 1163, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3146, 0, 0, 1887,
	0, 0, 0, 1163, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1715, 1163, 244, 0, 244, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3187, 3189, 0, 2081, 0, 0, 0, 0, 1163, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1232,
	244, 0, 0, 104, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1232, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 104, 0, 0, 0,
	1696, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1691, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 104, 0, 0, 104, 0, 104, 0, 0, 3258,
	0, 0, 0, 3262, 0, 1708, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 104, 0,
	0, 104, 0, 0, 0, 1163, 1163, 0, 0, 1471,
	0, 0, 1232, 1334, 1334, 1163, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 104, 0, 0, 0,
	3323, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1159, 1159, 0, 0, 0,
	1706, 0, 0, 0, 1681, 1682, 1688, 1709, 1687, 1683,
	1232, 1680, 1678, 1679, 1671, 1672, 1673, 1674, 1676, 1677,
	0, 0, 0, 0, 1352, 0, 0, 0, 0, 0,
	0, 0, 3360, 0, 1334, 0, 0, 0, 0, 0,
	0, 0, 104, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1667, 1668, 0, 1700, 1701, 1702, 1710,
	1711, 1712, 0, 0, 0, 1352, 0, 3372, 0, 0,
	0, 0, 0, 0, 1703, 1698, 0, 0, 0, 0,
	0, 0, 1670, 0, 0, 0, 0, 0, 0, 0,
	1716, 0, 0, 0, 0, 0, 0, 1163, 0, 1163,
	0, 1163, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1669, 1163, 1163, 0,
	0, 1352, 1352, 0, 1352, 0, 1689, 0, 1163, 0,
	0, 0, 0, 0, 0, 1686, 1352, 0, 0, 0,
	1163, 244, 1163, 1163, 1163, 0, 0, 0, 0, 0,
	0, 1352, 2324, 0, 0, 0, 0, 0, 0, 0,
	244, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 0, 1737, 0, 0, 0, 0, 0, 0,
	0, 244, 0, 0, 0, 0, 0, 0, 0, 0,
	244, 0, 0, 0, 0, 244, 0, 0, 0, 244,
	0, 0, 0, 0, 0, 0, 1692, 1693, 1694, 1695,
	0, 0, 0, 0, 0, 0, 1675, 0, 0, 0,
	1159, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1707, 0, 0, 1717, 0, 0, 1887, 1887, 1163,
	1697, 1699, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 244, 0, 1713, 0, 1714, 0,
	0, 0, 0, 0, 0, 1684, 1685, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1705, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1690, 0, 0,
	0, 0, 0, 0, 0, 0, 1233, 0, 0, 0,
	1233, 0, 0, 0, 1353, 0, 1146, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1163, 0, 0, 0,
	0, 1146, 0, 0, 0, 0, 0, 0, 1715, 0,
	0, 0, 0, 0, 0, 0, 0, 1353, 0, 0,
	0, 0, 0, 0, 0, 0, 1704, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1353, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1159, 2081, 1163, 0,
	0, 0, 0, 0, 1159, 1163, 0, 0, 2081, 0,
	0, 0, 0, 0, 1163, 0, 0, 1831, 3617, 0,
	0, 0, 0, 1353, 0, 1696, 0, 0, 0, 1353,
	0, 1163, 2081, 1353, 0, 0, 3632, 0, 0, 0,
	0, 0, 0, 0, 0, 1691, 0, 1353, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 104, 104,
	0, 0, 104, 0, 0, 0, 0, 0, 0, 0,
	1708, 0, 244, 0, 1232, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 0, 244, 0, 0,
	0, 0, 0, 0, 104, 104, 0, 0, 104, 1353,
	0, 244, 0, 0, 0, 0, 1232, 0, 0, 0,
	0, 3681, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1232, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1163, 0,
	244, 0, 1232, 0, 0, 0, 0, 0, 0, 244,
	0, 0, 0, 0, 0, 0, 1352, 1352, 0, 0,
	0, 0, 0, 0, 0, 1706, 0, 0, 1887, 1681,
	1682, 1688, 1709, 1687, 1683, 0, 1680, 1678, 1679, 1671,
	1672, 1673, 1674, 1676, 1677, 0, 0, 0, 0, 0,
	0, 0, 0, 2966, 1146, 0, 1163, 984, 0, 0,
	0, 0, 1352, 0, 0, 0, 0, 0, 0, 0,
	1163, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 104,
	104, 0, 0, 0, 0, 0, 0, 1352, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1232, 0, 0,
	0, 1163, 0, 0, 0, 0, 1352, 0, 0, 0,
	0, 1352, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1352, 0, 0, 0, 0, 0,
	1352, 0, 1352, 0, 0, 0, 1232, 244, 0, 0,
	0, 0, 0, 715, 0, 0, 0, 1163, 1163, 0,
	1163, 0, 0, 0, 1352, 0, 0, 0, 0, 3804,
	0, 0, 1163, 0, 0, 1352, 0, 0, 0, 0,
	0, 0, 2081, 0, 0, 0, 0, 1163, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 244, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1233, 0, 1352, 1352, 0, 2081, 0, 0,
	0, 0, 0, 0, 0, 0, 3873, 0, 0, 0,
	0, 1353, 0, 0, 0, 0, 1352, 0, 0, 0,
	0, 0, 1353, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 244, 244, 0,
	0, 0, 0, 0, 0, 0, 1233, 0, 0, 0,
	0, 0, 1232, 0, 0, 1232, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1667, 1668, 0,
	1700, 1701, 1702, 1710, 1711, 1712, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1703, 1698,
	0, 0, 0, 0, 0, 0, 1670, 0, 0, 104,
	0, 0, 0, 0, 1716, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1146, 1146, 0,
	0, 0, 0, 0, 244, 0, 1232, 0, 0, 0,
	1669, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1689, 0, 0, 1232, 0, 0, 0, 0, 0, 1686,
	0, 0, 0, 0, 3958, 0, 0, 244, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1353, 1353, 0, 0, 0, 0, 0,
	0, 0, 0, 1233, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2081, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1692, 1693, 1694, 1695, 0, 0, 0, 0, 0, 0,
	1675, 244, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 244, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1707, 244, 0, 1717, 0,
	0, 0, 0, 0, 1697, 1699, 0, 0, 0, 1163,
	1163, 0, 0, 0, 4072, 1334, 0, 0, 0, 0,
	1713, 0, 1714, 0, 1163, 0, 0, 1232, 0, 1684,
	1685, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1163, 0, 0, 0, 104, 1705, 0, 0,
	0, 0, 0, 0, 1163, 0, 0, 1163, 0, 0,
	0, 1690, 0, 0, 0, 1353, 0, 1353, 0, 1353,
	0, 0, 1146, 0, 1887, 0, 0, 0, 1163, 0,
	0, 0, 0, 0, 0, 1353, 1353, 0, 0, 0,
	0, 0, 1163, 1163, 0, 0, 1353, 0, 0, 0,
	0, 0, 1715, 0, 0, 0, 0, 0, 1353, 0,
	1353, 1353, 1353, 0, 0, 0, 0, 0, 0, 0,
	1704, 1887, 0, 104, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4139, 0, 0, 0, 1163, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1352, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1163, 0, 0, 0, 0, 0, 1696,
	0, 0, 0, 1163, 0, 0, 0, 0, 0, 0,
	0, 0, 1163, 0, 0, 0, 0, 1163, 0, 1691,
	0, 0, 0, 0, 1352, 0, 0, 0, 4181, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1163, 0, 0, 0, 1708, 4203, 1163, 1233, 1163, 0,
	0, 0, 1163, 0, 0, 0, 0, 0, 0, 0,
	1352, 1352, 1352, 4215, 0, 0, 0, 0, 0, 0,
	1163, 0, 104, 0, 0, 0, 1352, 0, 1146, 0,
	0, 1163, 0, 0, 0, 0, 1146, 0, 0, 0,
	0, 0, 0, 0, 0, 1232, 0, 1163, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1232, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1233, 0, 0, 0, 0, 1706,
	1163, 1163, 0, 1681, 1682, 1688, 1709, 1687, 1683, 0,
	1680, 1678, 1679, 1671, 1672, 1673, 1674, 1676, 1677, 0,
	0, 0, 1163, 0, 0, 0, 0, 2965, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1163, 0,
	0, 1163, 0, 1233, 0, 0, 0, 0, 0, 0,
	104, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 104, 0, 0, 0, 0, 0, 0, 0, 1233,
	0, 0, 0, 0, 0, 0, 0, 1232, 0, 1232,
	0, 0, 0, 104, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1887, 0, 0, 0, 0,
	0, 0, 1232, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1163, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1163,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1887,
	1887, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1232, 0, 0, 0, 0, 0, 0, 0,
	1232, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1233, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1352, 1352,
	0, 0, 1887, 1887, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1352, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1232, 0, 0,
	0, 0, 1352, 1887, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1233, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1353, 0,
	1163, 1163, 0, 0, 0, 0, 0, 0, 0, 1352,
	1352, 1352, 0, 0, 0, 0, 0, 0, 0, 0,
	1232, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1163, 0, 0, 0, 0, 0, 1353,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1232, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2324, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1232, 0, 1352, 0, 1353, 1353, 0, 1353, 0,
	0, 0, 0, 0, 0, 0, 0, 1232, 0, 0,
	1353, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1353, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1232,
	0, 0, 1163, 0, 0, 0, 0, 0, 0, 0,
	1352, 1352, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1887, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 104, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1232, 0,
	1163, 1352, 0, 0, 0, 104, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1163, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1163, 1163, 1163, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1163, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1163, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1163, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1887, 0, 0, 0, 0, 0,
	104, 0, 0, 104, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1667, 1668, 0,
	1700, 1701, 1702, 1710, 1711, 1712, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1703, 1698,
	0, 1352, 0, 0, 0, 0, 1670, 0, 0, 0,
	0, 1352, 1352, 0, 1716, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1352, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1669, 1163, 0, 0, 0, 0, 0, 0, 0, 1163,
	1689, 0, 0, 1163, 0, 1163, 0, 0, 0, 1686,
	0, 0, 1163, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1163, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1233, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1233, 0, 0, 0, 0, 0, 0, 0, 1163, 0,
	1692, 1693, 1694, 1695, 0, 1233, 1163, 0, 0, 0,
	1675, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1233, 0, 0, 0,
	0, 0, 0, 0, 1163, 1163, 0, 0, 0, 0,
	1353, 1353, 0, 0, 0, 1707, 0, 0, 1717, 0,
	0, 0, 1163, 0, 1697, 1699, 0, 0, 0, 0,
	0, 0, 0, 1163, 0, 0, 0, 0, 1163, 0,
	1713, 0, 1714, 0, 0, 0, 0, 0, 0, 1684,
	1685, 0, 0, 0, 0, 0, 1353, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1705, 0, 0,
	0, 0, 0, 0, 0, 1163, 1163, 1163, 0, 0,
	0, 1690, 0, 0, 0, 0, 1163, 0, 0, 0,
	0, 1353, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1233, 0, 0, 0, 0, 0, 0, 0, 0,
	1353, 0, 0, 0, 0, 1353, 1163, 0, 0, 0,
	0, 0, 1715, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1887, 1353, 0,
	1704, 0, 0, 0, 1353, 0, 1353, 0, 0, 0,
	1233, 0, 0, 0, 0, 0, 0, 1163, 0, 1163,
	0, 0, 0, 0, 0, 0, 0, 0, 1353, 0,
	0, 0, 0, 1163, 0, 0, 0, 0, 0, 1353,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1887, 1696,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1691,
	0, 0, 0, 0, 0, 1163, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1163, 1163, 1353, 1353,
	0, 0, 0, 0, 1708, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1353, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1163, 0, 0, 1163, 0, 0,
	0, 0, 0, 0, 0, 0, 1667, 1668, 0, 1700,
	1701, 1702, 1710, 1711, 1712, 0, 1233, 0, 0, 1233,
	0, 0, 0, 0, 0, 0, 0, 1703, 1698, 0,
	0, 0, 0, 0, 0, 1670, 0, 0, 0, 0,
	0, 0, 0, 1716, 0, 0, 0, 0, 0, 0,
	0, 0, 1887, 0, 0, 0, 0, 0, 0, 1706,
	0, 0, 0, 1681, 1682, 1688, 1709, 1687, 1683, 1669,
	1680, 1678, 1679, 1671, 1672, 1673, 1674, 1676, 1677, 1689,
	0, 0, 0, 0, 0, 0, 0, 2962, 1686, 0,
	1233, 1667, 1668, 0, 1700, 1701, 1702, 1710, 1711, 1712,
	0, 0, 0, 0, 0, 0, 0, 1233, 0, 0,
	0, 0, 1703, 1698, 0, 0, 0, 0, 0, 0,
	1670, 0, 0, 0, 0, 0, 0, 0, 1716, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1669, 0, 0, 1163, 0, 1692,
	1693, 1694, 1695, 0, 1689, 0, 0, 1163, 1163, 1675,
	0, 0, 0, 1686, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1163, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1707, 0, 0, 1717, 0, 0,
	0, 0, 0, 1697, 1699, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1713,
	0, 1714, 0, 0, 0, 0, 0, 0, 1684, 1685,
	0, 0, 0, 0, 1692, 1693, 1694, 1695, 0, 0,
	0, 0, 0, 0, 1675, 0, 1705, 0, 0, 0,
	0, 1233, 0, 0, 0, 0, 0, 0, 0, 0,
	1690, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1707,
	0, 0, 1717, 0, 0, 0, 0, 0, 1697, 1699,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1715, 0, 0, 1713, 0, 1714, 0, 0, 0,
	0, 0, 0, 1684, 1685, 0, 0, 0, 0, 1704,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1705, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1690, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1696, 0,
	1353, 0, 0, 0, 0, 0, 1715, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1691, 0,
	0, 0, 0, 0, 1704, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1708, 0, 0, 0, 0, 1353, 0,
	0, 1667, 1668, 0, 1700, 1701, 1702, 1710, 1711, 1712,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1703, 1698, 0, 0, 0, 0, 0, 0,
	1670, 0, 0, 1696, 1353, 1353, 1353, 0, 1716, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1353, 0, 0, 1691, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1669, 0, 0, 0, 0, 1233,
	0, 0, 0, 0, 1689, 0, 0, 0, 1708, 0,
	0, 0, 0, 1686, 0, 0, 0, 0, 1706, 0,
	0, 1233, 1681, 1682, 1688, 1709, 1687, 1683, 0, 1680,
	1678, 1679, 1671, 1672, 1673, 1674, 1676, 1677, 0, 0,
	0, 0, 0, 0, 0, 0, 2961, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1692, 1693, 1694, 1695, 0, 0,
	0, 0, 0, 0, 1675, 0, 0, 0, 0, 0,
	0, 0, 0, 1706, 0, 0, 0, 1681, 1682, 1688,
	1709, 1687, 1683, 0, 1680, 1678, 1679, 1671, 1672, 1673,
	1674, 1676, 1677, 0, 0, 0, 0, 0, 0, 1707,
	0, 2960, 1717, 0, 0, 0, 0, 0, 1697, 1699,
	0, 1233, 0, 1233, 0, 0, 0, 0, 875, 0,
	918, 0, 0, 0, 1713, 0, 1714, 0, 0, 0,
	0, 0, 0, 1684, 1685, 0, 1233, 0, 0, 0,
	0, 0, 0, 883, 0, 0, 0, 0, 0, 0,
	0, 1705, 0, 0, 0, 0, 0, 0, 0, 897,
	881, 880, 0, 0, 0, 1690, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1233, 0, 882, 0,
	0, 0, 0, 885, 1233, 0, 0, 0, 926, 0,
	0, 0, 0, 0, 0, 0, 1715, 894, 895, 0,
	0, 0, 0, 0, 0, 0, 911, 0, 0, 0,
	0, 0, 1353, 1353, 1704, 0, 0, 0, 0, 0,
	0, 0, 919, 887, 0, 0, 0, 0, 0, 0,
	1353, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1233, 0, 0, 0, 0, 1353, 0, 0, 888,
	0, 0, 0, 0, 0, 0, 0, 0, 917, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1696, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1353, 1353, 1353, 0, 0, 0, 0,
	0, 0, 0, 1691, 1233, 0, 0, 0, 0, 0,
	890, 0, 0, 0, 0, 0, 0, 0, 879, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1708, 0,
	0, 0, 0, 0, 1233, 0, 891, 892, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 899, 898, 0, 0, 0, 0,
	0, 0, 893, 0, 0, 0, 908, 0, 0, 0,
	0, 0, 0, 0, 0, 1233, 0, 1353, 0, 0,
	0, 0, 0, 0, 923, 0, 0, 0, 0, 0,
	0, 1233, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 920, 0, 0, 0, 0, 0,
	0, 0, 0, 1706, 0, 0, 0, 1681, 1682, 1688,
	1709, 1687, 1683, 0, 1680, 1678, 1679, 1671, 1672, 1673,
	1674, 1676, 1677, 1233, 0, 0, 0, 0, 0, 0,
	0, 2347, 0, 0, 1353, 1353, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 886, 0, 0, 925, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 884,
	0, 0, 1233, 915, 916, 1353, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 913, 0, 0, 0, 0, 0,
	0, 924, 909, 0, 902, 900, 0, 905, 0, 0,
	0, 0, 0, 906, 0, 0, 877, 0, 921, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 878, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 907,
	0, 0, 0, 0, 904, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 922, 0, 0, 0, 0, 0,
	0, 0, 910, 0, 0, 0, 0, 0, 0, 0,
	0, 889, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 912, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 914, 0,
	0, 0, 0, 1230, 0, 1353, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1353, 1353, 0, 0, 0,
	254, 255, 256, 257, 258, 259, 1236, 260, 261, 1237,
	1238, 1239, 1353, 1240, 576, 1241, 1242, 1243, 1244, 262,
	263, 1103, 264, 265, 266, 267, 268, 577, 578, 0,
	269, 579, 270, 580, 1245, 581, 271, 272, 273, 274,
	275, 276, 1246, 1247, 0, 277, 582, 583, 584, 1248,
	278, 279, 585, 1249, 1316, 1250, 280, 281, 282, 283,
	284, 285, 286, 0, 1251, 288, 289, 290, 287, 291,
	1252, 292, 0, 293, 294, 295, 296, 297, 298, 1253,
	299, 300, 301, 1104, 302, 303, 1254, 1255, 1257, 1256,
	1258, 1259, 1260, 304, 305, 306, 307, 0, 308, 586,
	587, 1261, 312, 309, 310, 1262, 313, 311, 1263, 314,
	315, 316, 1264, 1265, 317, 318, 319, 1266, 320, 321,
	1267, 322, 323, 324, 1268, 325, 326, 588, 327, 328,
	329, 331, 333, 330, 334, 335, 336, 337, 589, 590,
	1269, 251, 1270, 0, 0, 0, 0, 338, 339, 340,
	591, 0, 0, 0, 341, 1271, 342, 1272, 1273, 1105,
	343, 344, 592, 593, 345, 346, 347, 348, 349, 350,
	351, 352, 1274, 353, 594, 1275, 595, 354, 1276, 355,
	356, 357, 358, 359, 596, 597, 598, 433, 1107, 360,
	361, 1277, 362, 363, 364, 365, 0, 0, 0, 252,
	366, 367, 369, 1278, 1106, 368, 599, 600, 1279, 601,
	1280, 370, 371, 1108, 602, 1109, 372, 373, 374, 1110,
	375, 0, 0, 0, 376, 377, 378, 379, 380, 381,
	1281, 382, 384, 383, 1282, 385, 603, 1111, 386, 387,
	1112, 1283, 388, 0, 0, 0, 389, 390, 1284, 1285,
	391, 392, 393, 394, 0, 395, 396, 398, 400, 397,
	399, 401, 414, 402, 403, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 416, 0, 415, 1113, 417,
	418, 419, 424, 426, 427, 422, 423, 425, 428, 429,
	421, 1114, 420, 1286, 253, 1115, 430, 431, 1287, 604,
	432, 605, 434, 435, 1288, 0, 436, 0, 1289, 1290,
	438, 439, 440, 1291, 1292, 441, 442, 606, 1116, 443,
	1117, 607, 444, 445, 437, 446, 447, 448, 449, 450,
	451, 452, 453, 1293, 454, 455, 608, 456, 457, 458,
	609, 459, 460, 461, 610, 462, 611, 463, 464, 1294,
	465, 0, 466, 467, 468, 469, 470, 471, 472, 612,
	473, 475, 474, 476, 1295, 477, 0, 0, 0, 0,
	0, 478, 0, 480, 481, 482, 479, 483, 484, 485,
	486, 1296, 487, 488, 489, 1118, 490, 491, 492, 493,
	613, 494, 0, 495, 496, 502, 503, 497, 498, 504,
	505, 506, 507, 508, 1297, 510, 511, 509, 512, 513,
	514, 1298, 515, 499, 500, 516, 517, 1119, 518, 519,
	520, 521, 522, 523, 614, 0, 524, 1299, 525, 526,
	527, 528, 501, 529, 534, 615, 530, 531, 532, 533,
	616, 1300, 536, 537, 0, 535, 1301, 538, 539, 540,
	541, 542, 543, 332, 544, 1302, 545, 617, 618, 619,
	620, 1303, 554, 1304, 546, 547, 548, 621, 549, 622,
	1305, 550, 551, 552, 553, 0, 555, 556, 1306, 1307,
	557, 558, 559, 561, 562, 560, 563, 1308, 564, 1309,
	0, 565, 566, 567, 623, 624, 625, 1310, 569, 568,
	570, 626, 1311, 1312, 1313, 1314, 571, 572, 627, 573,
	574, 575, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1230, 0, 0, 0, 0,
	0, 0, 0, 2511, 0, 0, 0, 0, 0, 0,
	0, 2512, 254, 255, 256, 257, 258, 259, 1236, 260,
	261, 1237, 1238, 1239, 0, 1240, 576, 1241, 1242, 1243,
	1244, 262, 263, 1103, 264, 265, 266, 267, 268, 577,
	578, 0, 269, 579, 270, 580, 1245, 581, 271, 272,
	273, 274, 275, 276, 1246, 1247, 0, 277, 582, 583,
	584, 1248, 278, 279, 585, 1249, 1316, 1250, 280, 281,
	282, 283, 284, 285, 286, 0, 1251, 288, 289, 290,
	287, 291, 1252, 292, 0, 293, 294, 295, 296, 297,
	298, 1253, 299, 300, 301, 1104, 302, 303, 1254, 1255,
	1257, 1256, 1258, 1259, 1260, 304, 305, 306, 307, 0,
	308, 586, 587, 1261, 312, 309, 310, 1262, 313, 311,
	1263, 314, 315, 316, 1264, 1265, 317, 318, 319, 1266,
	320, 321, 1267, 322, 323, 324, 1268, 325, 326, 588,
	327, 328, 329, 331, 333, 330, 334, 335, 336, 337,
	589, 590, 1269, 251, 1270, 0, 0, 0, 0, 338,
	339, 340, 591, 0, 0, 0, 341, 1271, 342, 1272,
	1273, 1105, 343, 344, 592, 593, 345, 346, 347, 348,
	349, 350, 351, 352, 1274, 353, 594, 1275, 595, 354,
	1276, 355, 356, 357, 358, 359, 596, 597, 598, 433,
	1107, 360, 361, 1277, 362, 363, 364, 365, 0, 0,
	0, 252, 366, 367, 369, 1278, 1106, 368, 599, 600,
	1279, 601, 1280, 370, 371, 1108, 602, 1109, 372, 373,
	374, 1110, 375, 0, 0, 0, 376, 377, 378, 379,
	380, 381, 1281, 382, 384, 383, 1282, 385, 603, 1111,
	386, 387, 1112, 1283, 388, 0, 0, 0, 389, 390,
	1284, 1285, 391, 392, 393, 394, 0, 395, 396, 398,
	400, 397, 399, 401, 414, 402, 403, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 416, 0, 415,
	1113, 417, 418, 419, 424, 426, 427, 422, 423, 425,
	428, 429, 421, 1114, 420, 1286, 253, 1115, 430, 431,
	1287, 604, 432, 605, 434, 435, 1288, 0, 436, 0,
	1289, 1290, 438, 439, 440, 1291, 1292, 441, 442, 606,
	1116, 443, 1117, 607, 444, 445, 437, 446, 447, 448,
	449, 450, 451, 452, 453, 1293, 454, 455, 608, 456,
	457, 458, 609, 459, 460, 461, 610, 462, 611, 463,
	464, 1294, 465, 0, 466, 467, 468, 469, 470, 471,
	472, 612, 473, 475, 474, 476, 1295, 477, 0, 0,
	0, 0, 0, 478, 0, 480, 481, 482, 479, 483,
	484, 485, 486, 1296, 487, 488, 489, 1118, 490, 491,
	492, 493, 613, 494, 0, 495, 496, 502, 503, 497,
	498, 504, 505, 506, 507, 508, 1297, 510, 511, 509,
	512, 513, 514, 1298, 515, 499, 500, 516, 517, 1119,
	518, 519, 520, 521, 522, 523, 614, 0, 524, 1299,
	525, 526, 527, 528, 501, 529, 534, 615, 530, 531,
	532, 533, 616, 1300, 536, 537, 0, 535, 1301, 538,
	539, 540, 541, 542, 543, 332, 544, 1302, 545, 617,
	618, 619, 620, 1303, 554, 1304, 546, 547, 548, 621,
	549, 622, 1305, 550, 551, 552, 553, 0, 555, 556,
	1306, 1307, 557, 558, 559, 561, 562, 560, 563, 1308,
	564, 1309, 0, 565, 566, 567, 623, 624, 625, 1310,
	569, 568, 570, 626, 1311, 1312, 1313, 1314, 571, 572,
	627, 573, 574, 575, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1230, 0, 0, 0, 0,
	3398, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3400, 254, 255, 256, 257, 258, 259, 1236, 260,
	261, 1237, 1238, 1239, 0, 1240, 576, 1241, 1242, 1243,
	1244, 262, 263, 1103, 264, 265, 266, 267, 268, 577,
	578, 0, 269, 579, 270, 580, 1245, 581, 271, 272,
	273, 274, 275, 276, 1246, 1247, 0, 277, 582, 583,
	584, 1248, 278, 279, 585, 1249, 1316, 1250, 280, 281,
	282, 283, 284, 285, 286, 0, 1251, 288, 289, 290,
	287, 291, 1252, 292, 0, 293, 294, 295, 296, 297,
	298, 1253, 299, 300, 301, 1104, 302, 303, 1254, 1255,
	1257, 1256, 1258, 1259, 1260, 304, 305, 306, 307, 0,
	308, 586, 587, 1261, 312, 309, 310, 1262, 313, 311,
	1263, 314, 315, 316, 1264, 1265, 317, 318, 319, 1266,
	320, 321, 1267, 322, 323, 324, 1268, 325, 326, 588,
	327, 328, 329, 331, 333, 330, 334, 335, 336, 337,
	589, 590, 1269, 251, 1270, 0, 0, 0, 0, 338,
	339, 340, 591, 0, 0, 0, 341, 1271, 342, 1272,
	1273, 1105, 343, 344, 592, 593, 345, 346, 347, 348,
	349, 350, 351, 352, 1274, 353, 594, 1275, 595, 354,
	1276, 355, 356, 357, 358, 359, 596, 597, 598, 433,
	1107, 360, 361, 1277, 362, 363, 364, 365, 0, 0,
	0, 252, 366, 367, 369, 1278, 1106, 368, 599, 600,
	1279, 601, 1280, 370, 371, 1108, 602, 1109, 372, 373,
	374, 1110, 375, 0, 0, 0, 376, 377, 378, 379,
	380, 381, 1281, 382, 384, 383, 1282, 385, 603, 1111,
	386, 387, 1112, 1283, 388, 0, 0, 0, 389, 390,
	1284, 1285, 391, 392, 393, 394, 0, 395, 396, 398,
	400, 397, 399, 401, 414, 402, 403, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 416, 0, 415,
	1113, 417, 418, 419, 424, 426, 427, 422, 423, 425,
	428, 429, 421, 1114, 420, 1286, 253, 1115, 430, 431,
	1287, 604, 432, 605, 434, 435, 1288, 0, 436, 0,
	1289, 1290, 438, 439, 440, 1291, 1292, 441, 442, 606,
	1116, 443, 1117, 607, 444, 445, 437, 446, 447, 448,
	449, 450, 451, 452, 453, 1293, 454, 455, 608, 456,
	457, 458, 609, 459, 460, 461, 610, 462, 611, 463,
	464, 1294, 465, 0, 466, 467, 468, 469, 470, 471,
	472, 612, 473, 475, 474, 476, 1295, 477, 0, 0,
	0, 0, 0, 478, 0, 480, 481, 482, 479, 483,
	484, 485, 486, 1296, 487, 488, 489, 1118, 490, 491,
	492, 493, 613, 494, 0, 495, 496, 502, 503, 497,
	498, 504, 505, 506, 507, 508, 1297, 510, 511, 509,
	512, 513, 514, 1298, 515, 499, 500, 516, 517, 1119,
	518, 519, 520, 521, 522, 523, 614, 0, 524, 1299,
	525, 526, 527, 528, 501, 529, 534, 615, 530, 531,
	532, 533, 616, 1300, 536, 537, 0, 535, 1301, 538,
	539, 540, 541, 542, 543, 332, 544, 1302, 545, 617,
	618, 619, 620, 1303, 554, 1304, 546, 547, 548, 621,
	549, 622, 1305, 550, 551, 552, 553, 0, 555, 556,
	1306, 1307, 557, 558, 559, 561, 562, 560, 563, 1308,
	564, 1309, 0, 565, 566, 567, 623, 624, 625, 1310,
	569, 568, 570, 626, 1311, 1312, 1313, 1314, 571, 572,
	627, 573, 574, 575, 0, 0, 0, 0, 0, 1230,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3752, 254, 255, 256, 257,
	258, 259, 1236, 260, 261, 1237, 1238, 1239, 0, 1240,
	576, 1241, 1242, 1243, 1244, 262, 263, 1103, 264, 265,
	266, 267, 268, 577, 578, 0, 269, 579, 270, 580,
	1245, 581, 271, 272, 273, 274, 275, 276, 1246, 1247,
	0, 277, 582, 583, 584, 1248, 278, 279, 585, 1249,
	1316, 1250, 280, 281, 282, 283, 284, 285, 286, 0,
	1251, 288, 289, 290, 287, 291, 1252, 292, 0, 293,
	294, 295, 296, 297, 298, 1253, 299, 300, 301, 1104,
	302, 303, 1254, 1255, 1257, 1256, 1258, 1259, 1260, 304,
	305, 306, 307, 0, 308, 586, 587, 1261, 312, 309,
	310, 1262, 313, 311, 1263, 314, 315, 316, 1264, 1265,
	317, 318, 319, 1266, 320, 321, 1267, 322, 323, 324,
	1268, 325, 326, 588, 327, 328, 329, 331, 333, 330,
	334, 335, 336, 337, 589, 590, 1269, 251, 1270, 0,
	0, 0, 0, 338, 339, 340, 591, 0, 0, 0,
	341, 1271, 342, 1272, 1273, 1105, 343, 344, 592, 593,
	345, 346, 347, 348, 349, 350, 351, 352, 1274, 353,
	594, 1275, 595, 354, 1276, 355, 356, 357, 358, 359,
	596, 597, 598, 433, 1107, 360, 361, 1277, 362, 363,
	364, 365, 0, 0, 0, 252, 366, 367, 369, 1278,
	1106, 368, 599, 600, 1279, 601, 1280, 370, 371, 1108,
	602, 1109, 372, 373, 374, 1110, 375, 0, 0, 0,
	376, 377, 378, 379, 380, 381, 1281, 382, 384, 383,
	1282, 385, 603, 1111, 386, 387, 1112, 1283, 388, 0,
	0, 0, 389, 390, 1284, 1285, 391, 392, 393, 394,
	0, 395, 396, 398, 400, 397, 399, 401, 414, 402,
	403, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 416, 0, 415, 1113, 417, 418, 419, 424, 426,
	427, 422, 423, 425, 428, 429, 421, 1114, 420, 1286,
	253, 1115, 430, 431, 1287, 604, 432, 605, 434, 435,
	1288, 0, 436, 0, 1289, 1290, 438, 439, 440, 1291,
	1292, 441, 442, 606, 1116, 443, 1117, 607, 444, 445,
	437, 446, 447, 448, 449, 450, 451, 452, 453, 1293,
	454, 455, 608, 456, 457, 458, 609, 459, 460, 461,
	610, 462, 611, 463, 464, 1294, 465, 0, 466, 467,
	468, 469, 470, 471, 472, 612, 473, 475, 474, 476,
	1295, 477, 0, 0, 0, 0, 0, 478, 0, 480,
	481, 482, 479, 483, 484, 485, 486, 1296, 487, 488,
	489, 1118, 490, 491, 492, 493, 613, 494, 0, 495,
	496, 502, 503, 497, 498, 504, 505, 506, 507, 508,
	1297, 510, 511, 509, 512, 513, 514, 1298, 515, 499,
	500, 516, 517, 1119, 518, 519, 520, 521, 522, 523,
	614, 0, 524, 1299, 525, 526, 527, 528, 501, 529,
	534, 615, 530, 531, 532, 533, 616, 1300, 536, 537,
	0, 535, 1301, 538, 539, 540, 541, 542, 543, 332,
	544, 1302, 545, 617, 618, 619, 620, 1303, 554, 1304,
	546, 547, 548, 621, 549, 622, 1305, 550, 551, 552,
	553, 0, 555, 556, 1306, 1307, 557, 558, 559, 561,
	562, 560, 563, 1308, 564, 1309, 0, 565, 566, 567,
	623, 624, 625, 1310, 569, 568, 570, 626, 1311, 1312,
	1313, 1314, 571, 572, 627, 573, 574, 575, 1230, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3923, 254, 255, 256, 257, 258,
	259, 1236, 260, 261, 1237, 1238, 1239, 0, 1240, 576,
	1241, 1242, 1243, 1244, 262, 263, 1103, 264, 265, 266,
	267, 268, 577, 578, 0, 269, 579, 270, 580, 1245,
	581, 271, 272, 273, 274, 275, 276, 1246, 1247, 0,
	277, 582, 583, 584, 1248, 278, 279, 585, 1249, 1316,
	1250, 280, 281, 282, 283, 284, 285, 286, 0, 1251,
	288, 289, 290, 287, 291, 1252, 292, 0, 293, 294,
	295, 296, 297, 298, 1253, 299, 300, 301, 1104, 302,
	303, 1254, 1255, 1257, 1256, 1258, 1259, 1260, 304, 305,
	306, 307, 0, 308, 586, 587, 1261, 312, 309, 310,
	1262, 313, 311, 1263, 314, 315, 316, 1264, 1265, 317,
	318, 319, 1266, 320, 321, 1267, 322, 323, 324, 1268,
	325, 326, 588, 327, 328, 329, 331, 333, 330, 334,
	335, 336, 337, 589, 590, 1269, 251, 1270, 0, 0,
	0, 0, 338, 339, 340, 591, 0, 0, 0, 341,
	1271, 342, 1272, 1273, 1105, 343, 344, 592, 593, 345,
	346, 347, 348, 349, 350, 351, 352, 1274, 353, 594,
	1275, 595, 354, 1276, 355, 356, 357, 358, 359, 596,
	597, 598, 433, 1107, 360, 361, 1277, 362, 363, 364,
	365, 0, 0, 0, 252, 366, 367, 369, 1278, 1106,
	368, 599, 600, 1279, 601, 1280, 370, 371, 1108, 602,
	1109, 372, 373, 374, 1110, 375, 0, 0, 0, 376,
	377, 378, 379, 380, 381, 1281, 382, 384, 383, 1282,
	385, 603, 1111, 386, 387, 1112, 1283, 388, 0, 0,
	0, 389, 390, 1284, 1285, 391, 392, 393, 394, 0,
	395, 396, 398, 400, 397, 399, 401, 414, 402, 403,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	416, 0, 415, 1113, 417, 418, 419, 424, 426, 427,
	422, 423, 425, 428, 429, 421, 1114, 420, 1286, 253,
	1115, 430, 431, 1287, 604, 432, 605, 434, 435, 1288,
	0, 436, 0, 1289, 1290, 438, 439, 440, 1291, 1292,
	441, 442, 606, 1116, 443, 1117, 607, 444, 445, 437,
	446, 447, 448, 449, 450, 451, 452, 453, 1293, 454,
	455, 608, 456, 457, 458, 609, 459, 460, 461, 610,
	462, 611, 463, 464, 1294, 465, 0, 466, 467, 468,
	469, 470, 471, 472, 612, 473, 475, 474, 476, 1295,
	477, 0, 0, 0, 0, 0, 478, 0, 480, 481,
	482, 479, 483, 484, 485, 486, 1296, 487, 488, 489,
	1118, 490, 491, 492, 493, 613, 494, 0, 495, 496,
	502, 503, 497, 498, 504, 505, 506, 507, 508, 1297,
	510, 511, 509, 512, 513, 514, 1298, 515, 499, 500,
	516, 517, 1119, 518, 519, 520, 521, 522, 523, 614,
	0, 524, 1299, 525, 526, 527, 528, 501, 529, 534,
	615, 530, 531, 532, 533, 616, 1300, 536, 537, 0,
	535, 1301, 538, 539, 540, 541, 542, 543, 332, 544,
	1302, 545, 617, 618, 619, 620, 1303, 554, 1304, 546,
	547, 548, 621, 549, 622, 1305, 550, 551, 552, 553,
	0, 555, 556, 1306, 1307, 557, 558, 559, 561, 562,
	560, 563, 1308, 564, 1309, 0, 565, 566, 567, 623,
	624, 625, 1310, 569, 568, 570, 626, 1311, 1312, 1313,
	1314, 571, 572, 627, 573, 574, 575, 1230, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3812, 254, 255, 256, 257, 258, 259,
	1236, 260, 261, 1237, 1238, 1239, 0, 1240, 576, 1241,
	1242, 1243, 1244, 262, 263, 1103, 264, 265, 266, 267,
	268, 577, 578, 0, 269, 579, 270, 580, 1245, 581,
	271, 272, 273, 274, 275, 276, 1246, 1247, 0, 277,
	582, 583, 584, 1248, 278, 279, 585, 1249, 1316, 1250,
	280, 281, 282, 283, 284, 285, 286, 0, 1251, 288,
	289, 290, 287, 291, 1252, 292, 0, 293, 294, 295,
	296, 297, 298, 1253, 299, 300, 301, 1104, 302, 303,
	1254, 1255, 1257, 1256, 1258, 1259, 1260, 304, 305, 306,
	307, 0, 308, 586, 587, 1261, 312, 309, 310, 1262,
	313, 311, 1263, 314, 315, 316, 1264, 1265, 317, 318,
	319, 1266, 320, 321, 1267, 322, 323, 324, 1268, 325,
	326, 588, 327, 328, 329, 331, 333, 330, 334, 335,
	336, 337, 589, 590, 1269, 251, 1270, 0, 0, 0,
	0, 338, 339, 340, 591, 0, 0, 0, 341, 1271,
	342, 1272, 1273, 1105, 343, 344, 592, 593, 345, 346,
	347, 348, 349, 350, 351, 352, 1274, 353, 594, 1275,
	595, 354, 1276, 355, 356, 357, 358, 359, 596, 597,
	598, 433, 1107, 360, 361, 1277, 362, 363, 364, 365,
	0, 0, 0, 252, 366, 367, 369, 1278, 1106, 368,
	599, 600, 1279, 601, 1280, 370, 371, 1108, 602, 1109,
	372, 373, 374, 1110, 375, 0, 0, 0, 376, 377,
	378, 379, 380, 381, 1281, 382, 384, 383, 1282, 385,
	603, 1111, 386, 387, 1112, 1283, 388, 0, 0, 0,
	389, 390, 1284, 1285, 391, 392, 393, 394, 0, 395,
	396, 398, 400, 397, 399, 401, 414, 402, 403, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 416,
	0, 415, 1113, 417, 418, 419, 424, 426, 427, 422,
	423, 425, 428, 429, 421, 1114, 420, 1286, 253, 1115,
	430, 431, 1287, 604, 432, 605, 434, 435, 1288, 0,
	436, 0, 1289, 1290, 438, 439, 440, 1291, 1292, 441,
	442, 606, 1116, 443, 1117, 607, 444, 445, 437, 446,
	447, 448, 449, 450, 451, 452, 453, 1293, 454, 455,
	608, 456, 457, 458, 609, 459, 460, 461, 610, 462,
	611, 463, 464, 1294, 465, 0, 466, 467, 468, 469,
	470, 471, 472, 612, 473, 475, 474, 476, 1295, 477,
	0, 0, 0, 0, 0, 478, 0, 480, 481, 482,
	479, 483, 484, 485, 486, 1296, 487, 488, 489, 1118,
	490, 491, 492, 493, 613, 494, 0, 495, 496, 502,
	503, 497, 498, 504, 505, 506, 507, 508, 1297, 510,
	511, 509, 512, 513, 514, 1298, 515, 499, 500, 516,
	517, 1119, 518, 519, 520, 521, 522, 523, 614, 0,
	524, 1299, 525, 526, 527, 528, 501, 529, 534, 615,
	530, 531, 532, 533, 616, 1300, 536, 537, 0, 535,
	1301, 538, 539, 540, 541, 542, 543, 332, 544, 1302,
	545, 617, 618, 619, 620, 1303, 554, 1304, 546, 547,
	548, 621, 549, 622, 1305, 550, 551, 552, 553, 0,
	555, 556, 1306, 1307, 557, 558, 559, 561, 562, 560,
	563, 1308, 564, 1309, 0, 565, 566, 567, 623, 624,
	625, 1310, 569, 568, 570, 626, 1311, 1312, 1313, 1314,
	571, 572, 627, 573, 574, 575, 1230, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3682, 254, 255, 256, 257, 258, 259, 1236,
	260, 261, 1237, 1238, 1239, 0, 1240, 576, 1241, 1242,
	1243, 1244, 262, 263, 1103, 264, 265, 266, 267, 268,
	577, 578, 0, 269, 579, 270, 580, 1245, 581, 271,
	272, 273, 274, 275, 276, 1246, 1247, 0, 277, 582,
	583, 584, 1248, 278, 279, 585, 1249, 1316, 1250, 280,
	281, 282, 283, 284, 285, 286, 0, 1251, 288, 289,
	290, 287, 291, 1252, 292, 0, 293, 294, 295, 296,
	297, 298, 1253, 299, 300, 301, 1104, 302, 303, 1254,
	1255, 1257, 1256, 1258, 1259, 1260, 304, 305, 306, 307,
	0, 308, 586, 587, 1261, 312, 309, 310, 1262, 313,
	311, 1263, 314, 315, 316, 1264, 1265, 317, 318, 319,
	1266, 320, 321, 1267, 322, 323, 324, 1268, 325, 326,
	588, 327, 328, 329, 331, 333, 330, 334, 335, 336,
	337, 589, 590, 1269, 251, 1270, 0, 0, 0, 0,
	338, 339, 340, 591, 0, 0, 0, 341, 1271, 342,
	1272, 1273, 1105, 343, 344, 592, 593, 345, 346, 347,
	348, 349, 350, 351, 352, 1274, 353, 594, 1275, 595,
	354, 1276, 355, 356, 357, 358, 359, 596, 597, 598,
	433, 1107, 360, 361, 1277, 362, 363, 364, 365, 0,
	0, 0, 252, 366, 367, 369, 1278, 1106, 368, 599,
	600, 1279, 601, 1280, 370, 371, 1108, 602, 1109, 372,
	373, 374, 1110, 375, 0, 0, 0, 376, 377, 378,
	379, 380, 381, 1281, 382, 384, 383, 1282, 385, 603,
	1111, 386, 387, 1112, 1283, 388, 0, 0, 0, 389,
	390, 1284, 1285, 391, 392, 393, 394, 0, 395, 396,
	398, 400, 397, 399, 401, 414, 402, 403, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 416, 0,
	415, 1113, 417, 418, 419, 424, 426, 427, 422, 423,
	425, 428, 429, 421, 1114, 420, 1286, 253, 1115, 430,
	431, 1287, 604, 432, 605, 434, 435, 1288, 0, 436,
	0, 1289, 1290, 438, 439, 440, 1291, 1292, 441, 442,
	606, 1116, 443, 1117, 607, 444, 445, 437, 446, 447,
	448, 449, 450, 451, 452, 453, 1293, 454, 455, 608,
	456, 457, 458, 609, 459, 460, 461, 610, 462, 611,
	463, 464, 1294, 465, 0, 466, 467, 468, 469, 470,
	471, 472, 612, 473, 475, 474, 476, 1295, 477, 0,
	0, 0, 0, 0, 478, 0, 480, 481, 482, 479,
	483, 484, 485, 486, 1296, 487, 488, 489, 1118, 490,
	491, 492, 493, 613, 494, 0, 495, 496, 502, 503,
	497, 498, 504, 505, 506, 507, 508, 1297, 510, 511,
	509, 512, 513, 514, 1298, 515, 499, 500, 516, 517,
	1119, 518, 519, 520, 521, 522, 523, 614, 0, 524,
	1299, 525, 526, 527, 528, 501, 529, 534, 615, 530,
	531, 532, 533, 616, 1300, 536, 537, 0, 535, 1301,
	538, 539, 540, 541, 542, 543, 332, 544, 1302, 545,
	617, 618, 619, 620, 1303, 554, 1304, 546, 547, 548,
	621, 549, 622, 1305, 550, 551, 552, 553, 0, 555,
	556, 1306, 1307, 557, 558, 559, 561, 562, 560, 563,
	1308, 564, 1309, 0, 565, 566, 567, 623, 624, 625,
	1310, 569, 568, 570, 626, 1311, 1312, 1313, 1314, 571,
	572, 627, 573, 574, 575, 1230, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3416, 254, 255, 256, 257, 258, 259, 1236, 260,
	261, 1237, 1238, 1239, 0, 1240, 576, 1241, 1242, 1243,
	1244, 262, 263, 1103, 264, 265, 266, 267, 268, 577,
	578, 0, 269, 579, 270, 580, 1245, 581, 271, 272,
	273, 274, 275, 276, 1246, 1247, 0, 277, 582, 583,
	584, 1248, 278, 279, 585, 1249, 1316, 1250, 280, 281,
	282, 283, 284, 285, 286, 0, 1251, 288, 289, 290,
	287, 291, 1252, 292, 0, 293, 294, 295, 296, 297,
	298, 1253, 299, 300, 301, 1104, 302, 303, 1254, 1255,
	1257, 1256, 1258, 1259, 1260, 304, 305, 306, 307, 0,
	308, 586, 587, 1261, 312, 309, 310, 1262, 313, 311,
	1263, 314, 315, 316, 1264, 1265, 317, 318, 319, 1266,
	320, 321, 1267, 322, 323, 324, 1268, 325, 326, 588,
	327, 328, 329, 331, 333, 330, 334, 335, 336, 337,
	589, 590, 1269, 251, 1270, 0, 0, 0, 0, 338,
	339, 340, 591, 0, 0, 0, 341, 1271, 342, 1272,
	1273, 1105, 343, 344, 592, 593, 345, 346, 347, 348,
	349, 350, 351, 352, 1274, 353, 594, 1275, 595, 354,
	1276, 355, 356, 357, 358, 359, 596, 597, 598, 433,
	1107, 360, 361, 1277, 362, 363, 364, 365, 0, 0,
	0, 252, 366, 367, 369, 1278, 1106, 368, 599, 600,
	1279, 601, 1280, 370, 371, 1108, 602, 1109, 372, 373,
	374, 1110, 375, 0, 0, 0, 376, 377, 378, 379,
	380, 381, 1281, 382, 384, 383, 1282, 385, 603, 1111,
	386, 387, 1112, 1283, 388, 0, 0, 0, 389, 390,
	1284, 1285, 391, 392, 393, 394, 0, 395, 396, 398,
	400, 397, 399, 401, 414, 402, 403, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 416, 0, 415,
	1113, 417, 418, 419, 424, 426, 427, 422, 423, 425,
	428, 429, 421, 1114, 420, 1286, 253, 1115, 430, 431,
	1287, 604, 432, 605, 434, 435, 1288, 0, 436, 0,
	1289, 1290, 438, 439, 440, 1291, 1292, 441, 442, 606,
	1116, 443, 1117, 607, 444, 445, 437, 446, 447, 448,
	449, 450, 451, 452, 453, 1293, 454, 455, 608, 456,
	457, 458, 609, 459, 460, 461, 610, 462, 611, 463,
	464, 1294, 465, 0, 466, 467, 468, 469, 470, 471,
	472, 612, 473, 475, 474, 476, 1295, 477, 0, 0,
	0, 0, 0, 478, 0, 480, 481, 482, 479, 483,
	484, 485, 486, 1296, 487, 488, 489, 1118, 490, 491,
	492, 493, 613, 494, 0, 495, 496, 502, 503, 497,
	498, 504, 505, 506, 507, 508, 1297, 510, 511, 509,
	512, 513, 514, 1298, 515, 499, 500, 516, 517, 1119,
	518, 519, 520, 521, 522, 523, 614, 0, 524, 1299,
	525, 526, 527, 528, 501, 529, 534, 615, 530, 531,
	532, 533, 616, 1300, 536, 537, 0, 535, 1301, 538,
	539, 540, 541, 542, 543, 332, 544, 1302, 545, 617,
	618, 619, 620, 1303, 554, 1304, 546, 547, 548, 621,
	549, 622, 1305, 550, 551, 552, 553, 0, 555, 556,
	1306, 1307, 557, 558, 559, 561, 562, 560, 563, 1308,
	564, 1309, 0, 565, 566, 567, 623, 624, 625, 1310,
	569, 568, 570, 626, 1311, 1312, 1313, 1314, 571, 572,
	627, 573, 574, 575, 1230, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3243, 254, 255, 256, 257, 258, 259, 1236, 260, 261,
	1237, 1238, 1239, 0, 1240, 576, 1241, 1242, 1243, 1244,
	262, 263, 1103, 264, 265, 266, 267, 268, 577, 578,
	0, 269, 579, 270, 580, 1245, 581, 271, 272, 273,
	274, 275, 276, 1246, 1247, 0, 277, 582, 583, 584,
	1248, 278, 279, 585, 1249, 1316, 1250, 280, 281, 282,
	283, 284, 285, 286, 0, 1251, 288, 289, 290, 287,
	291, 1252, 292, 0, 293, 294, 295, 296, 297, 298,
	1253, 299, 300, 301, 1104, 302, 303, 1254, 1255, 1257,
	1256, 1258, 1259, 1260, 304, 305, 306, 307, 0, 308,
	586, 587, 1261, 312, 309, 310, 1262, 313, 311, 1263,
	314, 315, 316, 1264, 1265, 317, 318, 319, 1266, 320,
	321, 1267, 322, 323, 324, 1268, 325, 326, 588, 327,
	328, 329, 331, 333, 330, 334, 335, 336, 337, 589,
	590, 1269, 251, 1270, 0, 0, 0, 0, 338, 339,
	340, 591, 0, 0, 0, 341, 1271, 342, 1272, 1273,
	1105, 343, 344, 592, 593, 345, 346, 347, 348, 349,
	350, 351, 352, 1274, 353, 594, 1275, 595, 354, 1276,
	355, 356, 357, 358, 359, 596, 597, 598, 433, 1107,
	360, 361, 1277, 362, 363, 364, 365, 0, 0, 0,
	252, 366, 367, 369, 1278, 1106, 368, 599, 600, 1279,
	601, 1280, 370, 371, 1108, 602, 1109, 372, 373, 374,
	1110, 375, 0, 0, 0, 376, 377, 378, 379, 380,
	381, 1281, 382, 384, 383, 1282, 385, 603, 1111, 386,
	387, 1112, 1283, 388, 0, 0, 0, 389, 390, 1284,
	1285, 391, 392, 393, 394, 0, 395, 396, 398, 400,
	397, 399, 401, 414, 402, 403, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 416, 0, 415, 1113,
	417, 418, 419, 424, 426, 427, 422, 423, 425, 428,
	429, 421, 1114, 420, 1286, 253, 1115, 430, 431, 1287,
	604, 432, 605, 434, 435, 1288, 0, 436, 0, 1289,
	1290, 438, 439, 440, 1291, 1292, 441, 442, 606, 1116,
	443, 1117, 607, 444, 445, 437, 446, 447, 448, 449,
	450, 451, 452, 453, 1293, 454, 455, 608, 456, 457,
	458, 609, 459, 460, 461, 610, 462, 611, 463, 464,
	1294, 465, 0, 466, 467, 468, 469, 470, 471, 472,
	612, 473, 475, 474, 476, 1295, 477, 0, 0, 0,
	0, 0, 478, 0, 480, 481, 482, 479, 483, 484,
	485, 486, 1296, 487, 488, 489, 1118, 490, 491, 492,
	493, 613, 494, 0, 495, 496, 502, 503, 497, 498,
	504, 505, 506, 507, 508, 1297, 510, 511, 509, 512,
	513, 514, 1298, 515, 499, 500, 516, 517, 1119, 518,
	519, 520, 521, 522, 523, 614, 0, 524, 1299, 525,
	526, 527, 528, 501, 529, 534, 615, 530, 531, 532,
	533, 616, 1300, 536, 537, 0, 535, 1301, 538, 539,
	540, 541, 542, 543, 332, 544, 1302, 545, 617, 618,
	619, 620, 1303, 554, 1304, 546, 547, 548, 621, 549,
	622, 1305, 550, 551, 552, 553, 0, 555, 556, 1306,
	1307, 557, 558, 559, 561, 562, 560, 563, 1308, 564,
	1309, 0, 565, 566, 567, 623, 624, 625, 1310, 569,
	568, 570, 626, 1311, 1312, 1313, 1314, 571, 572, 627,
	573, 574, 575, 1230, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2370,
	254, 255, 256, 257, 258, 259, 1236, 260, 261, 1237,
	1238, 1239, 0, 1240, 576, 1241, 1242, 1243, 1244, 262,
	263, 1103, 264, 265, 266, 267, 268, 577, 578, 0,
	269, 579, 270, 580, 1245, 581, 271, 272, 273, 274,
	275, 276, 1246, 1247, 0, 277, 582, 583, 584, 1248,
	278, 279, 585, 1249, 1316, 1250, 280, 281, 282, 283,
	284, 285, 286, 0, 1251, 288, 289, 290, 287, 291,
	1252, 292, 0, 293, 294, 295, 296, 297, 298, 1253,
	299, 300, 301, 1104, 302, 303, 1254, 1255, 1257, 1256,
	1258, 1259, 1260, 304, 305, 306, 307, 0, 308, 586,
	587, 1261, 312, 309, 310, 1262, 313, 311, 1263, 314,
	315, 316, 1264, 1265, 317, 318, 319, 1266, 320, 321,
	1267, 322, 323, 324, 1268, 325, 326, 588, 327, 328,
	329, 331, 333, 330, 334, 335, 336, 337, 589, 590,
	1269, 251, 1270, 0, 0, 0, 0, 338, 339, 340,
	591, 0, 0, 0, 341, 1271, 342, 1272, 1273, 1105,
	343, 344, 592, 593, 345, 346, 347, 348, 349, 350,
	351, 352, 1274, 353, 594, 1275, 595, 354, 1276, 355,
	356, 357, 358, 359, 596, 597, 598, 433, 1107, 360,
	361, 1277, 362, 363, 364, 365, 0, 0, 0, 252,
	366, 367, 369, 1278, 1106, 368, 599, 600, 1279, 601,
	1280, 370, 371, 1108, 602, 1109, 372, 373, 374, 1110,
	375, 0, 0, 0, 376, 377, 378, 379, 380, 381,
	1281, 382, 384, 383, 1282, 385, 603, 1111, 386, 387,
	1112, 1283, 388, 0, 0, 0, 389, 390, 1284, 1285,
	391, 392, 393, 394, 0, 395, 396, 398, 400, 397,
	399, 401, 414, 402, 403, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 416, 0, 415, 1113, 417,
	418, 419, 424, 426, 427, 422, 423, 425, 428, 429,
	421, 1114, 420, 1286, 253, 1115, 430, 431, 1287, 604,
	432, 605, 434, 435, 1288, 0, 436, 0, 1289, 1290,
	438, 439, 440, 1291, 1292, 441, 442, 606, 1116, 443,
	1117, 607, 444, 445, 437, 446, 447, 448, 449, 450,
	451, 452, 453, 1293, 454, 455, 608, 456, 457, 458,
	609, 459, 460, 461, 610, 462, 611, 463, 464, 1294,
	465, 0, 466, 467, 468, 469, 470, 471, 472, 612,
	473, 475, 474, 476, 1295, 477, 0, 0, 0, 0,
	0, 478, 0, 480, 481, 482, 479, 483, 484, 485,
	486, 1296, 487, 488, 489, 1118, 490, 491, 492, 493,
	613, 494, 0, 495, 496, 502, 503, 497, 498, 504,
	505, 506, 507, 508, 1297, 510, 511, 509, 512, 513,
	514, 1298, 515, 499, 500, 516, 517, 1119, 518, 519,
	520, 521, 522, 523, 614, 0, 524, 1299, 525, 526,
	527, 528, 501, 529, 534, 615, 530, 531, 532, 533,
	616, 1300, 536, 537, 0, 535, 1301, 538, 539, 540,
	541, 542, 543, 332, 544, 1302, 545, 617, 618, 619,
	620, 1303, 554, 1304, 546, 547, 548, 621, 549, 622,
	1305, 550, 551, 552, 553, 0, 555, 556, 1306, 1307,
	557, 558, 559, 561, 562, 560, 563, 1308, 564, 1309,
	0, 565, 566, 567, 623, 624, 625, 1310, 569, 568,
	570, 626, 1311, 1312, 1313, 1314, 571, 572, 627, 573,
	574, 575, 1328, 0, 1230, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2043, 0,
	0, 254, 255, 256, 257, 258, 259, 1236, 260, 261,
	1237, 1238, 1239, 0, 1240, 576, 1241, 1242, 1243, 1244,
	262, 263, 1103, 264, 265, 266, 267, 268, 577, 578,
	0, 269, 579, 270, 580, 1245, 581, 271, 272, 273,
	274, 275, 276, 1246, 1247, 0, 277, 582, 583, 584,
	1248, 278, 279, 585, 1249, 1316, 1250, 280, 281, 282,
	283, 284, 285, 286, 0, 1251, 288, 289, 290, 287,
	291, 1252, 292, 0, 293, 294, 295, 296, 297, 298,
	1253, 299, 300, 301, 1104, 302, 303, 1254, 1255, 1257,
	1256, 1258, 1259, 1260, 304, 305, 306, 307, 0, 308,
	586, 587, 1261, 312, 309, 310, 1262, 313, 311, 1263,
	314, 315, 316, 1264, 1265, 317, 318, 319, 1266, 320,
	321, 1267, 322, 323, 324, 1268, 325, 326, 588, 327,
	328, 329, 331, 333, 330, 334, 335, 336, 337, 589,
	590, 1269, 251, 1270, 0, 0, 0, 0, 338, 339,
	340, 591, 0, 0, 0, 341, 1271, 342, 1272, 1273,
	1105, 343, 344, 592, 593, 345, 346, 347, 348, 349,
	350, 351, 352, 1274, 353, 594, 1275, 595, 354, 1276,
	355, 356, 357, 358, 359, 596, 597, 598, 433, 1107,
	360, 361, 1277, 362, 363, 364, 365, 0, 0, 0,
	252, 366, 367, 369, 1278, 1106, 368, 599, 600, 1279,
	601, 1280, 370, 371, 1108, 602, 1109, 372, 373, 374,
	1110, 375, 0, 0, 0, 376, 377, 378, 379, 380,
	381, 1281, 382, 384, 383, 1282, 385, 603, 1111, 386,
	387, 1112, 1283, 388, 0, 0, 0, 389, 390, 1284,
	1285, 391, 392, 393, 394, 0, 395, 396, 398, 400,
	397, 399, 401, 414, 402, 403, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 416, 0, 415, 1113,
	417, 418, 419, 424, 426, 427, 422, 423, 425, 428,
	429, 421, 1114, 420, 1286, 253, 1115, 430, 431, 1287,
	604, 432, 605, 434, 435, 1288, 0, 436, 0, 1289,
	1290, 438, 439, 440, 1291, 1292, 441, 442, 606, 1116,
	443, 1117, 607, 444, 445, 437, 446, 447, 448, 449,
	450, 451, 452, 453, 1293, 454, 455, 608, 456, 457,
	458, 609, 459, 460, 461, 610, 462, 611, 463, 464,
	1294, 465, 0, 466, 467, 468, 469, 470, 471, 472,
	612, 473, 475, 474, 476, 1295, 477, 0, 0, 0,
	0, 0, 478, 0, 480, 481, 482, 479, 483, 484,
	485, 486, 1296, 487, 488, 489, 1118, 490, 491, 492,
	493, 613, 494, 0, 495, 496, 502, 503, 497, 498,
	504, 505, 506, 507, 508, 1297, 510, 511, 509, 512,
	513, 514, 1298, 515, 499, 500, 516, 517, 1119, 518,
	519, 520, 521, 522, 523, 614, 0, 524, 1299, 525,
	526, 527, 528, 501, 529, 534, 615, 530, 531, 532,
	533, 616, 1300, 536, 537, 0, 535, 1301, 538, 539,
	540, 541, 542, 543, 332, 544, 1302, 545, 617, 618,
	619, 620, 1303, 554, 1304, 546, 547, 548, 621, 549,
	622, 1305, 550, 551, 552, 553, 0, 555, 556, 1306,
	1307, 557, 558, 559, 561, 562, 560, 563, 1308, 564,
	1309, 0, 565, 566, 567, 623, 624, 625, 1310, 569,
	568, 570, 626, 1311, 1312, 1313, 1314, 571, 572, 627,
	573, 574, 575, 1227, 0, 1230, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 254, 255, 256, 257, 258, 259, 1236, 260,
	261, 1237, 1238, 1239, 0, 1240, 576, 1241, 1242, 1243,
	1244, 262, 263, 1103, 264, 265, 266, 267, 268, 577,
	578, 0, 269, 579, 270, 580, 1245, 581, 271, 272,
	273, 274, 275, 276, 1246, 1247, 0, 277, 582, 583,
	584, 1248, 278, 279, 585, 1249, 1316, 1250, 280, 281,
	282, 283, 284, 285, 286, 0, 1251, 288, 289, 290,
	287, 291, 1252, 292, 0, 293, 294, 295, 296, 297,
	298, 1253, 299, 300, 301, 1104, 302, 303, 1254, 1255,
	1257, 1256, 1258, 1259, 1260, 304, 305, 306, 307, 0,
	308, 586, 587, 1261, 312, 309, 310, 1262, 313, 311,
	1263, 314, 315, 316, 1264, 1265, 317, 318, 319, 1266,
	320, 321, 1267, 322, 323, 324, 1268, 325, 326, 588,
	327, 328, 329, 331, 333, 330, 334, 335, 336, 337,
	589, 590, 1269, 251, 1270, 0, 0, 0, 0, 338,
	339, 340, 591, 0, 0, 0, 341, 1271, 342, 1272,
	1273, 1105, 343, 344, 592, 593, 345, 346, 347, 348,
	349, 350, 351, 352, 1274, 353, 594, 1275, 595, 354,
	1276, 355, 356, 357, 358, 359, 596, 597, 598, 433,
	1107, 360, 361, 1277, 362, 363, 364, 365, 0, 0,
	0, 252, 366, 367, 369, 1278, 1106, 368, 599, 600,
	1279, 601, 1280, 370, 371, 1108, 602, 1109, 372, 373,
	374, 1110, 375, 0, 0, 0, 376, 377, 378, 379,
	380, 381, 1281, 382, 384, 383, 1282, 385, 603, 1111,
	386, 387, 1112, 1283, 388, 0, 0, 0, 389, 390,
	1284, 1285, 391, 392, 393, 394, 0, 395, 396, 398,
	400, 397, 399, 401, 414, 402, 403, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 416, 0, 415,
	1113, 417, 418, 419, 424, 426, 427, 422, 423, 425,
	428, 429, 421, 1114, 420, 1286, 253, 1115, 430, 431,
	1287, 604, 432, 605, 434, 435, 1288, 0, 436, 0,
	1289, 1290, 438, 439, 440, 1291, 1292, 441, 442, 606,
	1116, 443, 1117, 607, 444, 445, 437, 446, 447, 448,
	449, 450, 451, 452, 453, 1293, 454, 455, 608, 456,
	457, 458, 609, 459, 460, 461, 610, 462, 611, 463,
	464, 1294, 465, 0, 466, 467, 468, 469, 470, 471,
	472, 612, 473, 475, 474, 476, 1295, 477, 0, 0,
	0, 0, 0, 478, 0, 480, 481, 482, 479, 483,
	484, 485, 486, 1296, 487, 488, 489, 1118, 490, 491,
	492, 493, 613, 494, 0, 495, 496, 502, 503, 497,
	498, 504, 505, 506, 507, 508, 1297, 510, 511, 509,
	512, 513, 514, 1298, 515, 499, 500, 516, 517, 1119,
	518, 519, 520, 521, 522, 523, 614, 0, 524, 1299,
	525, 526, 527, 528, 501, 529, 534, 615, 530, 531,
	532, 533, 616, 1300, 536, 537, 0, 535, 1301, 538,
	539, 540, 541, 542, 543, 332, 544, 1302, 545, 617,
	618, 619, 620, 1303, 554, 1304, 546, 547, 548, 621,
	549, 622, 1305, 550, 551, 552, 553, 0, 555, 556,
	1306, 1307, 557, 558, 559, 561, 562, 560, 563, 1308,
	564, 1309, 0, 565, 566, 567, 623, 624, 625, 1310,
	569, 568, 570, 626, 1311, 1312, 1313, 1314, 571, 572,
	627, 573, 574, 575, 1230, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 254, 255, 256, 257, 258, 259, 1236, 260, 261,
	1237, 1238, 1239, 0, 1240, 576, 1241, 1242, 1243, 1244,
	262, 263, 1103, 264, 265, 266, 267, 268, 577, 578,
	0, 269, 579, 270, 580, 1245, 581, 271, 272, 273,
	274, 275, 276, 1246, 1247, 0, 277, 582, 583, 584,
	1248, 278, 279, 585, 1249, 1316, 1250, 280, 281, 282,
	283, 284, 285, 286, 0, 1251, 288, 289, 290, 287,
	291, 1252, 292, 0, 293, 294, 295, 296, 297, 298,
	1253, 299, 300, 301, 1104, 302, 303, 1254, 1255, 1257,
	1256, 1258, 1259, 1260, 304, 305, 306, 307, 0, 308,
	586, 587, 1261, 312, 309, 310, 1262, 313, 311, 1263,
	314, 315, 316, 1264, 1265, 317, 318, 319, 1266, 320,
	321, 1267, 322, 323, 324, 1268, 325, 326, 588, 327,
	328, 329, 331, 333, 330, 334, 335, 336, 337, 589,
	590, 1269, 251, 1270, 0, 0, 0, 0, 338, 339,
	340, 591, 0, 0, 0, 341, 1271, 342, 1272, 1273,
	1105, 343, 344, 592, 593, 345, 346, 347, 348, 349,
	350, 351, 352, 1274, 353, 594, 1275, 595, 354, 1276,
	355, 356, 357, 358, 359, 596, 597, 598, 433, 1107,
	360, 361, 1277, 362, 363, 364, 365, 0, 0, 0,
	252, 366, 367, 369, 1278, 1106, 368, 599, 600, 1279,
	601, 1280, 370, 371, 1108, 602, 1109, 372, 373, 374,
	1110, 375, 0, 0, 0, 376, 377, 378, 379, 380,
	381, 1281, 382, 384, 383, 1282, 385, 603, 1111, 386,
	387, 1112, 1283, 388, 0, 0, 0, 389, 390, 1284,
	1285, 391, 392, 393, 394, 0, 395, 396, 398, 400,
	397, 399, 401, 414, 402, 403, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 416, 0, 415, 1113,
	417, 418, 419, 424, 426, 427, 422, 423, 425, 428,
	429, 421, 1114, 420, 1286, 253, 1115, 430, 431, 1287,
	604, 432, 605, 434, 435, 1288, 0, 436, 0, 1289,
	1290, 438, 439, 440, 1291, 1292, 441, 442, 606, 1116,
	443, 1117, 607, 444, 445, 437, 446, 447, 448, 449,
	450, 451, 452, 453, 1293, 454, 455, 608, 456, 457,
	458, 609, 459, 460, 461, 610, 462, 611, 463, 464,
	1294, 465, 0, 466, 467, 468, 469, 470, 471, 472,
	612, 473, 475, 474, 476, 1295, 477, 0, 0, 0,
	0, 0, 478, 0, 480, 481, 482, 479, 483, 484,
	485, 486, 1296, 487, 488, 489, 1118, 490, 491, 492,
	493, 613, 494, 0, 495, 496, 502, 503, 497, 498,
	504, 505, 506, 507, 508, 1297, 510, 511, 509, 512,
	513, 514, 1298, 515, 499, 500, 516, 517, 1119, 518,
	519, 520, 521, 522, 523, 614, 0, 524, 1299, 525,
	526, 527, 528, 501, 529, 534, 615, 530, 531, 532,
	533, 616, 1300, 536, 537, 0, 535, 1301, 538, 539,
	540, 541, 542, 543, 332, 544, 1302, 545, 617, 618,
	619, 620, 1303, 554, 1304, 546, 547, 548, 621, 549,
	622, 1305, 550, 551, 552, 553, 0, 555, 556, 1306,
	1307, 557, 558, 559, 561, 562, 560, 563, 1308, 564,
	1309, 0, 565, 566, 567, 623, 624, 625, 1310, 569,
	568, 570, 626, 1311, 1312, 1313, 1314, 571, 572, 627,
	573, 574, 575, 2345, 0, 1039, 1011, 1012, 1013, 1009,
	1010, 1022, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 254, 255, 256, 257, 258, 259, 2342, 260,
	261, 0, 0, 0, 0, 0, 1063, 1027, 0, 0,
	0, 262, 263, 1103, 264, 265, 266, 267, 268, 577,
	1076, 0, 269, 1083, 270, 1082, 0, 1093, 271, 272,
	273, 274, 275, 276, 1029, 1062, 996, 277, 1123, 1124,
	584, 0, 278, 279, 1069, 0, 1050, 0, 280, 281,
	282, 283, 284, 285, 286, 0, 0, 288, 289, 290,
	287, 291, 0, 292, 0, 293, 294, 295, 296, 297,
	298, 0, 299, 300, 301, 1104, 302, 303, 1053, 1051,
	1052, 1059, 1055, 1054, 1058, 304, 305, 306, 307, 1086,
	308, 1080, 1079, 1000, 312, 309, 310, 0, 313, 311,
	0, 314, 315, 316, 2343, 0, 317, 1071, 319, 0,
	320, 321, 0, 322, 323, 324, 0, 325, 326, 1006,
	327, 328, 329, 331, 333, 330, 334, 335, 336, 337,
	1094, 1095, 1018, 251, 0, 0, 0, 0, 0, 338,
	339, 340, 1078, 0, 0, 0, 341, 0, 342, 0,
	0, 1105, 343, 344, 1091, 1092, 345, 346, 347, 348,
	349, 350, 351, 352, 0, 353, 1101, 0, 1028, 354,
	0, 355, 356, 357, 358, 359, 1064, 1065, 1068, 433,
	1107, 360, 361, 0, 362, 363, 364, 365, 0, 0,
	0, 252, 366, 367, 369, 0, 1106, 368, 1073, 1074,
	0, 1034, 0, 370, 371, 1108, 1066, 1109, 372, 373,
	374, 1110, 375, 0, 0, 0, 376, 377, 378, 379,
	380, 381, 0, 382, 384, 383, 0, 385, 1102, 1111,
	386, 387, 1112, 0, 388, 0, 0, 0, 389, 390,
	1057, 1056, 391, 392, 393, 394, 0, 395, 396, 398,
	400, 397, 399, 401, 414, 402, 403, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 416, 0, 415,
	1113, 417, 418, 419, 424, 426, 427, 422, 423, 425,
	428, 429, 421, 1114, 420, 997, 253, 1115, 430, 431,
	1019, 1067, 432, 1081, 434, 435, 0, 0, 436, 0,
	0, 0, 438, 439, 440, 0, 0, 441, 442, 606,
	1116, 443, 1117, 1096, 444, 445, 437, 446, 447, 448,
	449, 450, 451, 452, 453, 0, 454, 455, 608, 456,
	457, 458, 609, 459, 460, 461, 1097, 462, 611, 463,
	464, 0, 465, 0, 466, 467, 468, 469, 470, 471,
	472, 1077, 473, 475, 474, 476, 0, 477, 0, 0,
	0, 0, 0, 478, 0, 480, 481, 482, 479, 483,
	484, 485, 486, 0, 487, 488, 489, 1118, 490, 491,
	492, 493, 1007, 494, 0, 495, 496, 502, 503, 497,
	498, 504, 505, 506, 507, 508, 0, 510, 511, 509,
	512, 513, 514, 1060, 515, 499, 500, 516, 517, 1119,
	518, 519, 520, 521, 522, 523, 1075, 0, 524, 0,
	525, 526, 527, 528, 501, 529, 534, 1122, 530, 531,
	532, 533, 1098, 0, 536, 537, 995, 535, 0, 538,
	539, 540, 541, 542, 543, 332, 544, 0, 545, 1087,
	1088, 1089, 1090, 0, 554, 0, 546, 547, 548, 1099,
	549, 1100, 1017, 550, 551, 552, 553, 0, 555, 556,
	0, 1001, 557, 558, 559, 561, 562, 560, 563, 1061,
	564, 0, 0, 565, 566, 567, 623, 1084, 1121, 2341,
	569, 568, 570, 626, 0, 0, 0, 0, 571, 572,
	627, 573, 574, 575, 998, 0, 0, 0, 0, 0,
	0, 994, 0, 0, 0, 0, 0, 0, 992, 993,
	2344, 0, 0, 0, 0, 0, 0, 1023, 2340, 0,
	985, 1021, 1039, 1011, 1012, 1013, 1009, 1010, 1022, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 254,
	255, 256, 257, 258, 259, 0, 260, 261, 0, 0,
	0, 0, 0, 1063, 1027, 0, 0, 0, 262, 263,
	1103, 264, 265, 266, 267, 268, 577, 1076, 0, 269,
	1083, 270, 1082, 0, 1093, 271, 272, 273, 274, 275,
	276, 1029, 1062, 996, 277, 1123, 1124, 584, 0, 278,
	279, 1069, 0, 1050, 0, 280, 281, 282, 283, 284,
	285, 286, 0, 0, 288, 289, 290, 287, 291, 0,
	292, 0, 293, 294, 295, 296, 297, 298, 0, 299,
	300, 301, 1104, 302, 303, 1053, 1051, 1052, 1059, 1055,
	1054, 1058, 304, 305, 306, 307, 1086, 308, 1080, 1079,
	1000, 312, 309, 310, 0, 313, 311, 0, 314, 315,
	316, 0, 0, 317, 1071, 319, 0, 320, 321, 0,
	322, 323, 324, 0, 325, 326, 1006, 327, 328, 329,
	331, 333, 330, 334, 335, 336, 337, 1094, 1095, 1018,
	251, 0, 0, 0, 0, 0, 338, 339, 340, 1078,
	0, 0, 0, 341, 0, 342, 0, 0, 1105, 343,
	344, 1091, 1092, 345, 346, 347, 348, 349, 350, 351,
	352, 0, 353, 1101, 0, 1028, 354, 0, 355, 356,
	357, 358, 359, 1064, 1065, 1068, 433, 1107, 360, 361,
	0, 362, 363, 364, 365, 0, 0, 0, 252, 366,
	367, 369, 0, 1106, 368, 1073, 1074, 0, 1034, 0,
	370, 371, 1108, 1066, 1109, 372, 373, 374, 1110, 375,
	0, 0, 0, 376, 377, 378, 379, 380, 381, 0,
	382, 384, 383, 0, 385, 1102, 1111, 386, 387, 1112,
	0, 388, 0, 0, 0, 389, 390, 1057, 1056, 391,
	392, 393, 394, 0, 395, 396, 398, 400, 397, 399,
	401, 414, 402, 403, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 416, 0, 415, 1113, 417, 418,
	419, 424, 426, 427, 422, 423, 425, 428, 429, 421,
	1114, 420, 997, 253, 1115, 430, 431, 1019, 1067, 432,
	1081, 434, 435, 0, 0, 436, 0, 0, 0, 438,
	439, 440, 0, 0, 441, 442, 606, 1116, 443, 1117,
	1096, 444, 445, 437, 446, 447, 448, 449, 450, 451,
	452, 453, 0, 454, 455, 608, 456, 457, 458, 609,
	459, 460, 461, 1097, 462, 611, 463, 464, 0, 465,
	0, 466, 467, 468, 469, 470, 471, 472, 1077, 473,
	475, 474, 476, 0, 477, 0, 0, 0, 0, 0,
	478, 0, 480, 481, 482, 479, 483, 484, 485, 486,
	0, 487, 488, 489, 1118, 490, 491, 492, 493, 1007,
	494, 0, 495, 496, 502, 503, 497, 498, 504, 505,
	506, 507, 508, 214, 510, 511, 509, 512, 513, 514,
	1060, 515, 499, 500, 516, 517, 1119, 518, 519, 520,
	521, 522, 523, 1075, 0, 524, 0, 525, 526, 527,
	528, 501, 529, 534, 1122, 530, 531, 532, 533, 1098,
	0, 536, 537, 995, 535, 216, 538, 539, 540, 541,
	542, 543, 332, 544, 0, 545, 1087, 1088, 1089, 1090,
	0, 554, 0, 546, 547, 548, 1099, 549, 1100, 1017,
	550, 551, 552, 553, 0, 555, 556, 0, 1001, 557,
	558, 559, 561, 562, 560, 563, 1061, 564, 0, 0,
	565, 566, 567, 1505, 1084, 1121, 0, 569, 568, 570,
	626, 0, 0, 0, 208, 571, 572, 627, 573, 574,
	575, 998, 209, 0, 0, 0, 0, 0, 994, 0,
	0, 0, 0, 0, 0, 992, 993, 1039, 1011, 1012,
	1013, 1009, 1010, 1022, 1742, 1740, 0, 0, 1021, 0,
	0, 0, 0, 0, 254, 255, 256, 257, 258, 259,
	0, 260, 261, 0, 0, 0, 0, 0, 1063, 1027,
	0, 0, 0, 262, 263, 1103, 264, 265, 266, 267,
	268, 577, 1076, 0, 269, 1083, 270, 1082, 0, 1093,
	271, 272, 273, 274, 275, 276, 1029, 1062, 996, 277,
	1123, 1124, 584, 0, 278, 279, 1069, 0, 1050, 0,
	280, 281, 282, 283, 284, 285, 286, 0, 0, 288,
	289, 290, 287, 291, 0, 292, 0, 293, 294, 295,
	296, 297, 298, 0, 299, 300, 301, 1104, 302, 303,
	1053, 1051, 1052, 1059, 1055, 1054, 1058, 304, 305, 306,
	307, 1086, 308, 1080, 1079, 1000, 312, 309, 310, 0,
	313, 311, 0, 314, 315, 316, 0, 0, 317, 1071,
	319, 0, 320, 321, 0, 322, 323, 324, 0, 325,
	326, 1006, 327, 328, 329, 331, 333, 330, 334, 335,
	336, 337, 1094, 1095, 1018, 251, 0, 0, 0, 0,
	0, 338, 339, 340, 1078, 0, 0, 0, 341, 0,
	342, 0, 0, 1105, 343, 344, 1091, 1092, 345, 346,
	347, 348, 349, 350, 351, 352, 0, 353, 1101, 0,
	1028, 354, 0, 355, 356, 357, 358, 359, 1064, 1065,
	1068, 433, 1107, 360, 361, 0, 362, 363, 364, 365,
	0, 0, 0, 252, 366, 367, 369, 0, 1106, 368,
	1073, 1074, 0, 1034, 0, 370, 371, 1108, 1066, 1109,
	372, 373, 374, 1110, 375, 0, 0, 0, 376, 377,
	378, 379, 380, 381, 0, 382, 384, 383, 0, 385,
	1102, 1111, 386, 387, 1112, 0, 388, 0, 0, 0,
	389, 390, 1057, 1056, 391, 392, 393, 394, 0, 395,
	396, 398, 400, 397, 399, 401, 414, 402, 403, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 416,
	0, 415, 1113, 417, 418, 419, 424, 426, 427, 422,
	423, 425, 428, 429, 421, 1114, 420, 997, 253, 1115,
	430, 431, 1019, 1067, 432, 1081, 434, 435, 0, 0,
	436, 0, 0, 0, 438, 439, 440, 0, 0, 441,
	442, 606, 1116, 443, 1117, 1096, 444, 445, 437, 446,
	447, 448, 449, 450, 451, 452, 453, 0, 454, 455,
	608, 456, 457, 458, 609, 459, 460, 461, 1097, 462,
	611, 463, 464, 0, 465, 0, 466, 467, 468, 469,
	470, 471, 472, 1077, 473, 475, 474, 476, 0, 477,
	0, 0, 0, 0, 0, 478, 0, 480, 481, 482,
	479, 483, 484, 485, 486, 0, 487, 488, 489, 1118,
	490, 491, 492, 493, 1007, 494, 0, 495, 496, 502,
	503, 497, 498, 504, 505, 506, 507, 508, 214, 510,
	511, 509, 512, 513, 514, 1060, 515, 499, 500, 516,
	517, 1119, 518, 519, 520, 521, 522, 523, 1075, 0,
	524, 0, 525, 526, 527, 528, 501, 529, 534, 1122,
	530, 531, 532, 533, 1098, 0, 536, 537, 995, 535,
	216, 538, 539, 540, 541, 542, 543, 332, 544, 0,
	545, 1087, 1088, 1089, 1090, 0, 554, 0, 546, 547,
	548, 1099, 549, 1100, 1017, 550, 551, 552, 553, 0,
	555, 556, 0, 1001, 557, 558, 559, 561, 562, 560,
	563, 1061, 564, 0, 0, 565, 566, 567, 1505, 1084,
	1121, 0, 569, 568, 570, 626, 0, 0, 0, 208,
	571, 572, 627, 573, 574, 575, 998, 209, 0, 0,
	0, 0, 0, 994, 0, 0, 0, 0, 0, 0,
	992, 993, 1039, 1011, 1012, 1013, 1009, 1010, 1022, 1742,
	2918, 0, 0, 1021, 0, 0, 0, 0, 0, 254,
	255, 256, 257, 258, 259, 0, 260, 261, 0, 0,
	0, 0, 0, 1063, 1027, 0, 0, 0, 262, 263,
	1103, 264, 265, 266, 267, 268, 577, 1076, 0, 269,
	1083, 270, 1082, 0, 1093, 271, 272, 273, 274, 275,
	276, 1029, 1062, 996, 277, 1123, 1124, 584, 0, 278,
	279, 1069, 0, 1050, 0, 280, 281, 282, 283, 284,
	285, 286, 0, 0, 288, 289, 290, 287, 291, 0,
	292, 0, 293, 294, 295, 296, 297, 298, 0, 299,
	300, 301, 1104, 302, 303, 1053, 1051, 1052, 1059, 1055,
	1054, 1058, 304, 305, 306, 307, 1086, 308, 1080, 1079,
	1000, 312, 309, 310, 0, 313, 311, 0, 314, 315,
	316, 0, 0, 317, 1071, 319, 0, 320, 321, 0,
	322, 323, 324, 0, 325, 326, 1006, 327, 328, 329,
	331, 333, 330, 334, 335, 336, 337, 1094, 1095, 1018,
	251, 0, 0, 0, 0, 0, 338, 339, 340, 1078,
	0, 0, 0, 341, 0, 342, 0, 0, 1105, 343,
	344, 1091, 1092, 345, 346, 347, 348, 349, 350, 351,
	352, 0, 353, 1101, 0, 1028, 354, 0, 355, 356,
	357, 358, 359, 1064, 1065, 1068, 433, 1107, 360, 361,
	0, 362, 363, 364, 365, 0, 0, 0, 252, 366,
	367, 369, 0, 1106, 368, 1073, 1074, 0, 1034, 0,
	370, 371, 1108, 1066, 1109, 372, 373, 374, 1110, 375,
	0, 0, 0, 376, 377, 378, 379, 380, 381, 0,
	382, 384, 383, 0, 385, 1102, 1111, 386, 387, 1112,
	0, 388, 0, 0, 0, 389, 390, 1057, 1056, 391,
	392, 393, 394, 0, 395, 396, 398, 400, 397, 399,
	401, 414, 402, 403, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 416, 0, 415, 1113, 417, 418,
	419, 424, 426, 427, 422, 423, 425, 428, 429, 421,
	1114, 420, 997, 253, 1115, 430, 431, 1019, 1067, 432,
	1081, 434, 435, 0, 0, 436, 0, 0, 0, 438,
	439, 440, 0, 0, 441, 442, 606, 1116, 443, 1117,
	1096, 444, 445, 437, 446, 447, 448, 449, 450, 451,
	452, 453, 0, 454, 455, 608, 456, 457, 458, 609,
	459, 460, 461, 1097, 462, 611, 463, 464, 0, 465,
	0, 466, 467, 468, 469, 470, 471, 472, 1077, 473,
	475, 474, 476, 0, 477, 0, 0, 0, 0, 0,
	478, 0, 480, 481, 482, 479, 483, 484, 485, 486,
	0, 487, 488, 489, 1118, 490, 491, 492, 493, 1007,
	494, 0, 495, 496, 502, 503, 497, 498, 504, 505,
	506, 507, 508, 214, 510, 511, 509, 512, 513, 514,
	1060, 515, 499, 500, 516, 517, 1119, 518, 519, 520,
	521, 522, 523, 1075, 0, 524, 0, 525, 526, 527,
	528, 501, 529, 534, 1122, 530, 531, 532, 533, 1098,
	0, 536, 537, 995, 535, 216, 538, 539, 540, 541,
	542, 543, 332, 544, 0, 545, 1087, 1088, 1089, 1090,
	0, 554, 0, 546, 547, 548, 1099, 549, 1100, 1017,
	550, 551, 552, 553, 0, 555, 556, 0, 1001, 557,
	558, 559, 561, 562, 560, 563, 1061, 564, 0, 0,
	565, 566, 567, 1505, 1084, 1121, 0, 569, 568, 570,
	626, 0, 0, 0, 208, 571, 572, 627, 573, 574,
	575, 998, 209, 0, 0, 0, 0, 0, 994, 0,
	0, 0, 0, 0, 0, 992, 993, 1039, 1011, 1012,
	1013, 1009, 1010, 1022, 1742, 1740, 0, 0, 1021, 0,
	0, 0, 0, 0, 254, 255, 256, 257, 258, 259,
	0, 260, 261, 0, 0, 0, 0, 0, 1063, 1027,
	0, 0, 0, 262, 263, 1103, 264, 265, 266, 267,
	268, 577, 1076, 0, 269, 1083, 270, 1082, 2473, 1093,
	271, 272, 273, 274, 275, 276, 1029, 1062, 996, 277,
	1123, 1124, 584, 0, 278, 279, 1069, 0, 1050, 0,
	280, 281, 282, 283, 284, 285, 286, 0, 0, 288,
	289, 290, 287, 291, 0, 292, 0, 293, 294, 295,
	296, 297, 298, 0, 299, 300, 301, 1104, 302, 303,
	1053, 1051, 1052, 1059, 1055, 1054, 1058, 304, 305, 306,
	307, 1086, 308, 1080, 1079, 1000, 312, 309, 310, 0,
	313, 311, 0, 314, 315, 316, 0, 0, 317, 1071,
	319, 0, 320, 321, 0, 322, 323, 324, 0, 325,
	326, 1006, 327, 328, 329, 331, 333, 330, 334, 335,
	336, 337, 1094, 1095, 1018, 251, 0, 0, 0, 0,
	0, 338, 339, 340, 1078, 0, 0, 0, 341, 0,
	342, 0, 2478, 1105, 343, 344, 1091, 1092, 345, 346,
	347, 348, 349, 350, 351, 352, 0, 353, 1101, 0,
	1028, 354, 0, 355, 356, 357, 358, 359, 1064, 1065,
	1068, 433, 1107, 360, 361, 0, 362, 363, 364, 365,
	0, 0, 0, 252, 366, 367, 369, 0, 1106, 368,
	1073, 1074, 0, 1034, 0, 370, 371, 1108, 1066, 1109,
	372, 373, 374, 1110, 375, 0, 0, 0, 376, 377,
	378, 379, 380, 381, 0, 382, 384, 383, 2474, 385,
	1102, 1111, 386, 387, 1112, 0, 388, 0, 0, 0,
	389, 390, 1057, 1056, 391, 392, 393, 394, 0, 395,
	396, 398, 400, 397, 399, 401, 414, 402, 403, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 416,
	0, 415, 1113, 417, 418, 419, 424, 426, 427, 422,
	423, 425, 428, 429, 421, 1114, 420, 997, 253, 1115,
	430, 431, 1019, 1067, 432, 1081, 434, 435, 0, 0,
	436, 0, 0, 0, 438, 439, 440, 0, 0, 441,
	442, 606, 1116, 443, 1117, 1096, 444, 445, 437, 446,
	447, 448, 449, 450, 451, 452, 453, 0, 454, 455,
	608, 456, 457, 458, 609, 459, 460, 461, 1097, 462,
	611, 463, 464, 0, 465, 0, 466, 467, 468, 469,
	470, 471, 472, 1077, 473, 475, 474, 476, 0, 477,
	0, 0, 0, 0, 0, 478, 0, 480, 481, 482,
	479, 483, 484, 485, 486, 0, 487, 488, 489, 1118,
	490, 491, 492, 493, 1007, 494, 0, 495, 496, 502,
	503, 497, 498, 504, 505, 506, 507, 508, 0, 510,
	511, 509, 512, 513, 514, 1060, 515, 499, 500, 516,
	517, 1119, 518, 519, 520, 521, 522, 523, 1075, 0,
	524, 0, 525, 526, 527, 528, 501, 529, 534, 1122,
	530, 531, 532, 533, 1098, 0, 536, 537, 995, 535,
	0, 538, 539, 540, 541, 542, 543, 332, 544, 0,
	545, 1087, 1088, 1089, 1090, 0, 554, 2475, 546, 547,
	548, 1099, 549, 1100, 1017, 550, 551, 552, 553, 0,
	555, 556, 0, 1001, 557, 558, 559, 561, 562, 560,
	563, 1061, 564, 0, 0, 565, 566, 567, 623, 1084,
	1121, 0, 569, 568, 570, 626, 0, 0, 0, 0,
	571, 572, 627, 573, 574, 575, 998, 0, 0, 0,
	0, 0, 0, 994, 0, 0, 0, 0, 0, 0,
	992, 993, 0, 0, 0, 0, 0, 0, 0, 1023,
	0, 0, 2390, 1021, 1039, 1011, 1012, 1013, 1009, 1010,
	1022, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 254, 255, 256, 257, 258, 259, 0, 260, 261,
	0, 0, 0, 0, 0, 1063, 1027, 0, 0, 0,
	262, 263, 1103, 264, 265, 266, 267, 268, 577, 1076,
	0, 269, 1083, 270, 1082, 0, 1093, 271, 272, 273,
	274, 275, 276, 1029, 1062, 996, 277, 1123, 1124, 584,
	0, 278, 279, 1069, 0, 1050, 0, 280, 281, 282,
	283, 284, 285, 286, 0, 0, 288, 289, 290, 287,
	291, 0, 292, 0, 293, 294, 295, 296, 297, 298,
	0, 299, 300, 301, 1104, 302, 303, 1053, 1051, 1052,
	1059, 1055, 1054, 1058, 304, 305, 306, 307, 1086, 308,
	1080, 1079, 1000, 312, 309, 310, 0, 313, 311, 0,
	314, 315, 316, 0, 0, 317, 1071, 319, 0, 320,
	321, 0, 322, 323, 324, 0, 325, 326, 1006, 327,
	328, 329, 331, 333, 330, 334, 335, 336, 337, 1094,
	1095, 1018, 251, 0, 0, 0, 0, 0, 338, 339,
	340, 1078, 0, 0, 0, 341, 0, 342, 0, 0,
	1105, 343, 344, 1091, 1092, 345, 346, 347, 348, 349,
	350, 351, 352, 0, 353, 1101, 0, 1028, 354, 0,
	355, 356, 357, 358, 359, 1064, 1065, 1068, 433, 1107,
	360, 361, 0, 362, 363, 364, 365, 0, 0, 0,
	252, 366, 367, 369, 0, 1106, 368, 1073, 1074, 0,
	1034, 0, 370, 371, 1108, 1066, 1109, 372, 373, 374,
	1110, 375, 0, 0, 0, 376, 377, 378, 379, 380,
	381, 0, 382, 384, 383, 0, 385, 1102, 1111, 386,
	387, 1112, 0, 388, 0, 0, 0, 389, 390, 1057,
	1056, 391, 392, 393, 394, 0, 395, 396, 398, 400,
	397, 399, 401, 414, 402, 403, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 416, 0, 415, 1113,
	417, 418, 419, 424, 426, 427, 422, 423, 425, 428,
	429, 421, 1114, 420, 997, 253, 1115, 430, 431, 1019,
	1067, 432, 1081, 434, 435, 0, 0, 436, 0, 0,
	0, 438, 439, 440, 0, 0, 441, 442, 606, 1116,
	443, 1117, 1096, 444, 445, 437, 446, 447, 448, 449,
	450, 451, 452, 453, 0, 454, 455, 608, 456, 457,
	458, 609, 459, 460, 461, 1097, 462, 611, 463, 464,
	0, 465, 0, 466, 467, 468, 469, 470, 471, 472,
	1077, 473, 475, 474, 476, 0, 477, 0, 0, 0,
	0, 0, 478, 0, 480, 481, 482, 479, 483, 484,
	485, 486, 0, 487, 488, 489, 1118, 490, 491, 492,
	493, 1007, 494, 0, 495, 496, 502, 503, 497, 498,
	504, 505, 506, 507, 508, 0, 510, 511, 509, 512,
	513, 514, 1060, 515, 499, 500, 516, 517, 1119, 518,
	519, 520, 521, 522, 523, 1075, 0, 524, 0, 525,
	526, 527, 528, 501, 529, 534, 1122, 530, 531, 532,
	533, 1098, 0, 536, 537, 995, 535, 0, 538, 539,
	540, 541, 542, 543, 332, 544, 0, 545, 1087, 1088,
	1089, 1090, 0, 554, 0, 546, 547, 548, 1099, 549,
	1100, 1017, 550, 551, 552, 553, 0, 555, 556, 0,
	1001, 557, 558, 559, 561, 562, 560, 563, 1061, 564,
	0, 0, 565, 566, 567, 623, 1084, 1121, 0, 569,
	568, 570, 626, 0, 0, 0, 0, 571, 572, 627,
	573, 574, 575, 998, 0, 0, 0, 0, 0, 0,
	994, 0, 0, 0, 0, 0, 0, 992, 993, 0,
	0, 0, 0, 0, 0, 0, 1023, 2388, 0, 2387,
	1021, 1039, 1011, 1012, 1013, 1009, 1010, 1022, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 254, 255,
	256, 257, 258, 259, 0, 260, 261, 0, 0, 0,
	0, 0, 1063, 1027, 0, 0, 0, 262, 263, 1103,
	264, 265, 266, 267, 268, 577, 1076, 0, 269, 1083,
	270, 1082, 0, 1093, 271, 272, 273, 274, 275, 276,
	1029, 1062, 996, 277, 1123, 1124, 584, 0, 278, 279,
	1069, 0, 1050, 0, 280, 281, 282, 283, 284, 285,
	286, 0, 0, 288, 289, 290, 287, 291, 0, 292,
	0, 293, 294, 295, 296, 297, 298, 0, 299, 300,
	301, 1104, 302, 303, 1053, 1051, 1052, 1059, 1055, 1054,
	1058, 304, 305, 306, 307, 1086, 308, 1080, 1079, 1000,
	312, 309, 310, 0, 313, 311, 0, 314, 315, 316,
	0, 0, 317, 1071, 319, 0, 320, 321, 0, 322,
	323, 324, 0, 325, 326, 1006, 327, 328, 329, 331,
	333, 330, 334, 335, 336, 337, 1094, 1095, 1018, 251,
	0, 0, 0, 0, 0, 338, 339, 340, 1078, 0,
	0, 0, 341, 0, 342, 0, 0, 1105, 343, 344,
	1091, 1092, 345, 346, 347, 348, 349, 350, 351, 352,
	0, 353, 1101, 0, 1028, 354, 0, 355, 356, 357,
	358, 359, 1064, 1065, 1068, 433, 1107, 360, 361, 0,
	362, 363, 364, 365, 0, 0, 0, 252, 366, 367,
	369, 0, 1106, 368, 1073, 1074, 0, 1034, 0, 370,
	371, 1108, 1066, 1109, 372, 373, 374, 1110, 375, 0,
	0, 0, 376, 377, 378, 379, 380, 381, 0, 382,
	384, 383, 0, 385, 1102, 1111, 386, 387, 1112, 0,
	388, 0, 0, 0, 389, 390, 1057, 1056, 391, 392,
	393, 394, 0, 395, 396, 398, 400, 397, 399, 401,
	414, 402, 403, 404, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 416, 0, 415, 1113, 417, 418, 419,
	424, 426, 427, 422, 423, 425, 428, 429, 421, 1114,
	420, 997, 253, 1115, 430, 431, 1019, 1067, 432, 1081,
	434, 435, 0, 0, 436, 0, 0, 0, 438, 439,
	440, 0, 0, 441, 442, 606, 1116, 443, 1117, 1096,
	444, 445, 437, 446, 447, 448, 449, 450, 451, 452,
	453, 0, 454, 455, 608, 456, 457, 458, 609, 459,
	460, 461, 1097, 462, 611, 463, 464, 0, 465, 0,
	466, 467, 468, 469, 470, 471, 472, 1077, 473, 475,
	474, 476, 0, 477, 0, 0, 0, 0, 0, 478,
	0, 480, 481, 482, 479, 483, 484, 485, 486, 0,
	487, 488, 489, 1118, 490, 491, 492, 493, 1007, 494,
	0, 495, 496, 502, 503, 497, 498, 504, 505, 506,
	507, 508, 0, 510, 511, 509, 512, 513, 514, 1060,
	515, 499, 500, 516, 517, 1119, 518, 519, 520, 521,
	522, 523, 1075, 0, 524, 0, 525, 526, 527, 528,
	501, 529, 534, 1122, 530, 531, 532, 533, 1098, 0,
	536, 537, 995, 535, 0, 538, 539, 540, 541, 542,
	543, 332, 544, 0, 545, 1087, 1088, 1089, 1090, 0,
	554, 0, 546, 547, 548, 1099, 549, 1100, 1017, 550,
	551, 552, 553, 0, 555, 556, 0, 1001, 557, 558,
	559, 561, 562, 560, 563, 1061, 564, 0, 0, 565,
	566, 567, 623, 1084, 1121, 0, 569, 568, 570, 626,
	0, 0, 0, 0, 571, 572, 627, 573, 574, 575,
	998, 0, 0, 0, 0, 0, 0, 994, 0, 0,
	0, 0, 0, 0, 992, 993, 0, 0, 0, 0,
	0, 0, 0, 1023, 2385, 0, 2384, 1021, 1039, 1011,
	1012, 1013, 1009, 1010, 1022, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 254, 255, 256, 257, 258,
	259, 0, 260, 261, 0, 0, 0, 0, 0, 1063,
	1027, 0, 0, 0, 262, 263, 1103, 264, 265, 266,
	267, 268, 577, 1076, 0, 269, 1083, 270, 1082, 0,
	1093, 271, 272, 273, 274, 275, 276, 1029, 1062, 996,
	277, 1123, 1124, 584, 0, 278, 279, 1069, 0, 1050,
	0, 280, 281, 282, 283, 284, 285, 286, 0, 0,
	288, 289, 290, 287, 291, 0, 292, 0, 293, 294,
	295, 296, 297, 298, 0, 299, 300, 301, 1104, 302,
	303, 1053, 1051, 1052, 1059, 1055, 1054, 1058, 304, 305,
	306, 307, 1086, 308, 1080, 1079, 1000, 312, 309, 310,
	0, 313, 311, 0, 314, 315, 316, 0, 0, 317,
	1071, 319, 0, 320, 321, 0, 322, 323, 324, 0,
	325, 326, 1006, 327, 328, 329, 331, 333, 330, 334,
	335, 336, 337, 1094, 1095, 1018, 251, 0, 0, 0,
	0, 0, 338, 339, 340, 1078, 0, 0, 0, 341,
	0, 342, 0, 0, 1105, 343, 344, 1091, 1092, 345,
	346, 347, 348, 349, 350, 351, 352, 0, 353, 1101,
	0, 1028, 354, 0, 355, 356, 357, 358, 359, 1064,
	1065, 1068, 433, 1107, 360, 361, 0, 362, 363, 364,
	365, 0, 0, 0, 252, 366, 367, 369, 0, 1106,
	368, 1073, 1074, 0, 1034, 0, 370, 371, 1108, 1066,
	1109, 372, 373, 374, 1110, 375, 0, 0, 0, 376,
	377, 378, 379, 380, 381, 0, 382, 384, 383, 0,
	385, 1102, 1111, 386, 387, 1112, 0, 388, 0, 0,
	0, 389, 390, 1057, 1056, 391, 392, 393, 394, 0,
	395, 396, 398, 400, 397, 399, 401, 414, 402, 403,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	416, 0, 415, 1113, 417, 418, 419, 424, 426, 427,
	422, 423, 425, 428, 429, 421, 1114, 420, 997, 253,
	1115, 430, 431, 1019, 1067, 432, 1081, 434, 435, 0,
	0, 436, 0, 0, 0, 438, 439, 440, 0, 0,
	441, 442, 606, 1116, 443, 1117, 1096, 444, 445, 437,
	446, 447, 448, 449, 450, 451, 452, 453, 0, 454,
	455, 608, 456, 457, 458, 609, 459, 460, 461, 1097,
	462, 611, 463, 464, 0, 465, 0, 466, 467, 468,
	469, 470, 471, 472, 1077, 473, 475, 474, 476, 0,
	477, 0, 0, 0, 0, 0, 478, 0, 480, 481,
	482, 479, 483, 484, 485, 486, 0, 487, 488, 489,
	1118, 490, 491, 492, 493, 1007, 494, 0, 495, 496,
	502, 503, 497, 498, 504, 505, 506, 507, 508, 0,
	510, 511, 509, 512, 513, 514, 1060, 515, 499, 500,
	516, 517, 1119, 518, 519, 520, 521, 522, 523, 1075,
	0, 524, 0, 525, 526, 527, 528, 501, 529, 534,
	1122, 530, 531, 532, 533, 1098, 0, 536, 537, 995,
	535, 0, 538, 539, 540, 541, 542, 543, 332, 544,
	0, 545, 1087, 1088, 1089, 1090, 0, 554, 0, 546,
	547, 548, 1099, 549, 1100, 1017, 550, 551, 552, 553,
	0, 555, 556, 0, 1001, 557, 558, 559, 561, 562,
	560, 563, 1061, 564, 0, 0, 565, 566, 567, 623,
	1084, 1121, 0, 569, 568, 570, 626, 0, 0, 0,
	0, 571, 572, 627, 573, 574, 575, 998, 0, 0,
	0, 0, 0, 0, 994, 0, 0, 0, 0, 0,
	0, 992, 993, 0, 0, 0, 0, 0, 0, 0,
	1023, 2382, 0, 2381, 1021, 1039, 1011, 1012, 1013, 1009,
	1010, 1022, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 254, 255, 256, 257, 258, 259, 0, 260,
	261, 0, 0, 0, 0, 0, 1063, 1027, 0, 0,
	0, 262, 263, 1103, 264, 265, 266, 267, 268, 577,
	1076, 0, 269, 1083, 270, 1082, 0, 1093, 271, 272,
	273, 274, 275, 276, 1029, 1062, 996, 277, 1123, 1124,
	584, 0, 278, 279, 1069, 0, 1050, 0, 280, 281,
	282, 283, 284, 285, 286, 0, 0, 288, 289, 290,
	287, 291, 0, 292, 0, 293, 294, 295, 296, 297,
	298, 0, 299, 300, 301, 1104, 302, 303, 1053, 1051,
	1052, 1059, 1055, 1054, 1058, 304, 305, 306, 307, 1086,
	308, 1080, 1079, 1000, 312, 309, 310, 0, 313, 311,
	0, 314, 315, 316, 0, 0, 317, 1071, 319, 0,
	320, 321, 0, 322, 323, 324, 0, 325, 326, 1006,
	327, 328, 329, 331, 333, 330, 334, 335, 336, 337,
	1094, 1095, 1018, 251, 0, 0, 0, 0, 0, 338,
	339, 340, 1078, 0, 0, 0, 341, 0, 342, 0,
	0, 1105, 343, 344, 1091, 1092, 345, 346, 347, 348,
	349, 350, 351, 352, 0, 353, 1101, 0, 1028, 354,
	0, 355, 356, 357, 358, 359, 1064, 1065, 1068, 433,
	1107, 360, 361, 0, 362, 363, 364, 365, 0, 0,
	0, 252, 366, 367, 369, 0, 1106, 368, 1073, 1074,
	0, 1034, 0, 370, 371, 1108, 1066, 1109, 372, 373,
	374, 1110, 375, 0, 0, 0, 376, 377, 378, 379,
	380, 381, 0, 382, 384, 383, 0, 385, 1102, 1111,
	386, 387, 1112, 0, 388, 0, 0, 0, 389, 390,
	1057, 1056, 391, 392, 393, 394, 0, 395, 396, 398,
	400, 397, 399, 401, 414, 402, 403, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 416, 0, 415,
	1113, 417, 418, 419, 424, 426, 427, 422, 423, 425,
	428, 429, 421, 1114, 420, 997, 253, 1115, 430, 431,
	1019, 1067, 432, 1081, 434, 435, 0, 0, 436, 0,
	0, 0, 438, 439, 440, 0, 0, 441, 442, 606,
	1116, 443, 1117, 1096, 444, 445, 437, 446, 447, 448,
	449, 450, 451, 452, 453, 0, 454, 455, 608, 456,
	457, 458, 609, 459, 460, 461, 1097, 462, 611, 463,
	464, 0, 465, 0, 466, 467, 468, 469, 470, 471,
	472, 1077, 473, 475, 474, 476, 0, 477, 0, 0,
	0, 0, 0, 478, 0, 480, 481, 482, 479, 483,
	484, 485, 486, 0, 487, 488, 489, 1118, 490, 491,
	492, 493, 1007, 494, 0, 495, 496, 502, 503, 497,
	498, 504, 505, 506, 507, 508, 0, 510, 511, 509,
	512, 513, 514, 1060, 515, 499, 500, 516, 517, 1119,
	518, 519, 520, 521, 522, 523, 1075, 0, 524, 0,
	525, 526, 527, 528, 501, 529, 534, 1122, 530, 531,
	532, 533, 1098, 0, 536, 537, 995, 535, 0, 538,
	539, 540, 541, 542, 543, 332, 544, 0, 545, 1087,
	1088, 1089, 1090, 0, 554, 0, 546, 547, 548, 1099,
	549, 1100, 1017, 550, 551, 552, 553, 0, 555, 556,
	0, 1001, 557, 558, 559, 561, 562, 560, 563, 1061,
	564, 0, 0, 565, 566, 567, 623, 1084, 1121, 0,
	569, 568, 570, 626, 0, 0, 0, 0, 571, 572,
	627, 573, 574, 575, 998, 0, 0, 0, 0, 0,
	0, 994, 0, 0, 0, 0, 0, 0, 992, 993,
	0, 0, 0, 0, 0, 0, 0, 1023, 2379, 0,
	1595, 1021, 1039, 1011, 1012, 1013, 1009, 1010, 1022, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 254,
	255, 256, 257, 258, 259, 0, 260, 261, 0, 0,
	0, 0, 0, 1063, 1027, 0, 0, 0, 262, 263,
	1103, 264, 265, 266, 267, 268, 577, 1076, 0, 269,
	1083, 270, 1082, 0, 1093, 271, 272, 273, 274, 275,
	276, 1029, 1062, 996, 277, 1123, 1124, 584, 0, 278,
	279, 1069, 0, 1050, 0, 280, 281, 282, 283, 284,
	285, 286, 0, 0, 288, 289, 290, 287, 291, 0,
	292, 0, 293, 294, 295, 296, 297, 298, 0, 299,
	300, 301, 1104, 302, 303, 1053, 1051, 1052, 1059, 1055,
	1054, 1058, 304, 305, 306, 307, 1086, 308, 1080, 1079,
	1000, 312, 309, 310, 0, 313, 311, 0, 314, 315,
	316, 0, 0, 317, 1071, 319, 0, 320, 321, 0,
	322, 323, 324, 0, 325, 326, 1006, 327, 328, 329,
	331, 333, 330, 334, 335, 336, 337, 1094, 1095, 1018,
	251, 0, 0, 0, 0, 0, 338, 339, 340, 1078,
	0, 0, 0, 341, 0, 342, 0, 0, 1105, 343,
	344, 1091, 1092, 345, 346, 347, 348, 349, 350, 351,
	352, 0, 353, 1101, 0, 1028, 354, 0, 355, 356,
	357, 358, 359, 1064, 1065, 1068, 433, 1107, 360, 361,
	0, 362, 363, 364, 365, 0, 0, 0, 252, 366,
	367, 369, 0, 1106, 368, 1073, 1074, 0, 1034, 0,
	370, 371, 1108, 1066, 1109, 372, 373, 374, 1110, 375,
	0, 0, 0, 376, 377, 378, 379, 380, 381, 0,
	382, 384, 383, 0, 385, 1102, 1111, 386, 387, 1112,
	0, 388, 0, 0, 0, 389, 390, 1057, 1056, 391,
	392, 393, 394, 0, 395, 396, 398, 400, 397, 399,
	401, 414, 402, 403, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 416, 0, 415, 1113, 417, 418,
	419, 424, 426, 427, 422, 423, 425, 428, 429, 421,
	1114, 420, 997, 253, 1115, 430, 431, 1019, 1067, 432,
	1081, 434, 435, 0, 0, 436, 0, 0, 0, 438,
	439, 440, 0, 0, 441, 442, 606, 1116, 443, 1117,
	1096, 444, 445, 437, 446, 447, 448, 449, 450, 451,
	452, 453, 0, 454, 455, 608, 456, 457, 458, 609,
	459, 460, 461, 1097, 462, 611, 463, 464, 0, 465,
	0, 466, 467, 468, 469, 470, 471, 472, 1077, 473,
	475, 474, 476, 0, 477, 0, 0, 0, 0, 0,
	478, 0, 480, 481, 482, 479, 483, 484, 485, 486,
	0, 487, 488, 489, 1118, 490, 491, 492, 493, 1007,
	494, 0, 495, 496, 502, 503, 497, 498, 504, 505,
	506, 507, 508, 0, 510, 511, 509, 512, 513, 514,
	1060, 515, 499, 500, 516, 517, 1119, 518, 519, 520,
	521, 522, 523, 1075, 0, 524, 0, 525, 526, 527,
	528, 501, 529, 534, 1122, 530, 531, 532, 533, 1098,
	0, 536, 537, 995, 535, 0, 538, 539, 540, 541,
	542, 543, 332, 544, 0, 545, 1087, 1088, 1089, 1090,
	0, 554, 0, 546, 547, 548, 1099, 549, 1100, 1017,
	550, 551, 552, 553, 0, 555, 556, 0, 1001, 557,
	558, 559, 561, 562, 560, 563, 1061, 564, 0, 0,
	565, 566, 567, 623, 1084, 1121, 0, 569, 568, 570,
	626, 1594, 0, 0, 0, 571, 572, 627, 573, 574,
	575, 998, 0, 0, 0, 0, 0, 0, 994, 0,
	0, 0, 0, 0, 0, 992, 993, 0, 0, 0,
	0, 0, 0, 0, 1023, 0, 0, 988, 1021, 1039,
	1011, 1012, 1013, 1009, 1010, 1022, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 254, 255, 256, 257,
	258, 259, 0, 260, 261, 0, 0, 0, 0, 0,
	1063, 1027, 0, 0, 0, 262, 263, 1103, 264, 265,
	266, 267, 268, 577, 1076, 0, 269, 1083, 270, 1082,
	0, 1093, 271, 272, 273, 274, 275, 276, 1029, 1062,
	996, 277, 1123, 1124, 584, 0, 278, 279, 1069, 0,
	1050, 0, 280, 281, 282, 283, 284, 285, 286, 0,
	0, 288, 289, 290, 287, 291, 0, 292, 0, 293,
	294, 295, 296, 297, 298, 0, 299, 300, 301, 1104,
	302, 303, 1053, 1051, 1052, 1059, 1055, 1054, 1058, 304,
	305, 306, 307, 1086, 308, 1080, 1079, 1000, 312, 309,
	310, 0, 313, 311, 0, 314, 315, 316, 0, 0,
	317, 1071, 319, 0, 320, 321, 0, 322, 323, 324,
	0, 325, 326, 1006, 327, 328, 329, 331, 333, 330,
	334, 335, 336, 337, 1094, 1095, 1018, 251, 0, 0,
	0, 0, 0, 338, 339, 340, 1078, 0, 0, 0,
	341, 0, 342, 0, 0, 1105, 343, 344, 1091, 1092,
	345, 346, 347, 348, 349, 350, 351, 352, 0, 353,
	1101, 0, 1028, 354, 0, 355, 356, 357, 358, 359,
	1064, 1065, 1068, 433, 1107, 360, 361, 0, 362, 363,
	364, 365, 0, 0, 0, 252, 366, 367, 369, 0,
	1106, 368, 1073, 1074, 0, 1034, 0, 370, 371, 1108,
	1066, 1109, 372, 373, 374, 1110, 375, 0, 0, 0,
	376, 377, 378, 379, 380, 381, 0, 382, 384, 383,
	0, 385, 1102, 1111, 386, 387, 1112, 0, 388, 0,
	0, 0, 389, 390, 1057, 1056, 391, 392, 393, 394,
	0, 395, 396, 398, 400, 397, 399, 401, 414, 402,
	403, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 416, 0, 415, 1113, 417, 418, 419, 424, 426,
	427, 422, 423, 425, 428, 429, 421, 1114, 420, 997,
	253, 1115, 430, 431, 1019, 1067, 432, 1081, 434, 435,
	0, 0, 436, 0, 1002, 0, 438, 439, 440, 0,
	0, 441, 442, 606, 1116, 443, 1117, 1096, 444, 445,
	437, 446, 447, 448, 449, 450, 451, 452, 453, 0,
	454, 455, 608, 456, 457, 458, 609, 459, 460, 461,
	1097, 462, 611, 463, 464, 0, 465, 0, 466, 467,
	468, 469, 470, 471, 472, 1077, 473, 475, 474, 476,
	0, 477, 0, 0, 0, 0, 0, 478, 0, 480,
	481, 482, 479, 483, 484, 485, 486, 0, 487, 488,
	489, 1118, 490, 491, 492, 493, 1007, 494, 0, 495,
	496, 502, 503, 497, 498, 504, 505, 506, 507, 508,
	0, 510, 511, 509, 512, 513, 514, 1060, 515, 499,
	500, 516, 517, 1119, 518, 519, 520, 521, 522, 523,
	1075, 0, 524, 0, 525, 526, 527, 528, 501, 529,
	534, 1122, 530, 531, 532, 533, 1098, 0, 536, 537,
	995, 535, 0, 538, 539, 540, 541, 542, 543, 332,
	544, 0, 545, 1087, 1088, 1089, 1090, 0, 554, 0,
	546, 547, 548, 1099, 549, 1100, 1017, 550, 551, 552,
	553, 0, 555, 556, 0, 1001, 557, 558, 559, 561,
	562, 560, 563, 1061, 564, 0, 0, 565, 566, 567,
	623, 1084, 1121, 0, 569, 568, 570, 626, 0, 0,
	0, 0, 571, 572, 627, 573, 574, 575, 998, 0,
	0, 0, 0, 0, 0, 994, 0, 0, 0, 0,
	0, 0, 992, 993, 1039, 1011, 1012, 1013, 1009, 1010,
	1022, 1023, 0, 0, 0, 1021, 0, 0, 0, 0,
	0, 254, 255, 256, 257, 258, 259, 0, 260, 261,
	0, 0, 0, 0, 0, 1063, 1027, 0, 0, 0,
	262, 263, 1103, 264, 265, 266, 267, 268, 577, 1076,
	0, 269, 1083, 270, 1082, 0, 1093, 271, 272, 273,
	274, 275, 276, 1029, 1062, 996, 277, 1123, 1124, 584,
	0, 278, 279, 1069, 0, 1050, 0, 280, 281, 282,
	283, 284, 285, 286, 0, 0, 288, 289, 290, 287,
	291, 0, 292, 0, 293, 294, 295, 296, 4193, 298,
	0, 299, 300, 301, 1104, 302, 303, 1053, 1051, 1052,
	1059, 1055, 1054, 1058, 304, 305, 306, 307, 1086, 308,
	1080, 1079, 1000, 312, 309, 310, 0, 313, 311, 0,
	314, 315, 316, 0, 0, 317, 1071, 319, 0, 320,
	321, 0, 322, 323, 324, 0, 325, 326, 1006, 327,
	328, 329, 331, 333, 330, 334, 335, 336, 337, 1094,
	1095, 1018, 251, 0, 0, 0, 0, 0, 338, 339,
	340, 1078, 0, 0, 0, 341, 0, 342, 0, 0,
	1105, 343, 344, 1091, 1092, 345, 346, 347, 348, 349,
	350, 351, 352, 0, 353, 1101, 0, 1028, 354, 0,
	355, 356, 357, 358, 359, 1064, 1065, 1068, 433, 1107,
	360, 361, 0, 362, 363, 364, 365, 0, 0, 0,
	252, 366, 367, 369, 0, 1106, 368, 1073, 1074, 0,
	1034, 0, 370, 371, 1108, 1066, 1109, 372, 373, 374,
	1110, 375, 0, 0, 0, 376, 377, 378, 379, 380,
	381, 0, 382, 384, 383, 0, 385, 1102, 1111, 386,
	387, 1112, 0, 388, 0, 0, 0, 389, 390, 1057,
	1056, 391, 392, 393, 394, 0, 395, 396, 398, 400,
	397, 399, 401, 414, 402, 403, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 416, 0, 415, 1113,
	417, 418, 419, 424, 426, 427, 422, 423, 425, 428,
	429, 421, 1114, 420, 997, 253, 1115, 430, 431, 1019,
	1067, 432, 1081, 434, 435, 0, 0, 436, 0, 1002,
	0, 438, 439, 440, 0, 0, 441, 442, 606, 1116,
	443, 1117, 1096, 444, 445, 437, 446, 447, 448, 449,
	450, 451, 452, 453, 0, 454, 455, 608, 456, 457,
	458, 609, 459, 460, 461, 1097, 462, 611, 463, 464,
	0, 465, 0, 466, 467, 468, 469, 470, 471, 472,
	1077, 473, 475, 474, 476, 0, 477, 0, 0, 0,
	0, 0, 478, 0, 480, 481, 482, 479, 483, 484,
	485, 486, 0, 487, 488, 489, 1118, 490, 491, 492,
	493, 1007, 494, 0, 495, 496, 502, 503, 497, 498,
	504, 505, 506, 507, 508, 0, 510, 511, 509, 512,
	513, 514, 1060, 515, 499, 500, 516, 517, 1119, 518,
	519, 520, 521, 522, 523, 1075, 0, 524, 0, 525,
	526, 527, 528, 501, 529, 534, 1122, 530, 531, 532,
	533, 1098, 0, 536, 537, 995, 535, 0, 538, 539,
	540, 541, 542, 543, 332, 544, 0, 545, 1087, 1088,
	1089, 1090, 0, 554, 0, 546, 547, 548, 1099, 549,
	1100, 1017, 550, 551, 552, 553, 0, 555, 556, 0,
	1001, 557, 558, 559, 561, 562, 560, 563, 1061, 564,
	0, 0, 565, 566, 567, 623, 1084, 1121, 0, 569,
	568, 570, 626, 0, 0, 0, 0, 571, 572, 627,
	573, 574, 575, 998, 0, 0, 0, 0, 0, 0,
	994, 0, 0, 0, 0, 0, 0, 992, 993, 1039,
	1011, 1012, 1013, 1009, 1010, 1022, 1023, 0, 0, 0,
	1021, 0, 0, 0, 0, 0, 254, 255, 256, 257,
	258, 259, 0, 260, 261, 0, 0, 0, 0, 0,
	1063, 1027, 0, 0, 0, 262, 263, 1103, 264, 265,
	266, 267, 268, 577, 1076, 0, 269, 1083, 270, 1082,
	0, 1093, 271, 272, 273, 274, 275, 276, 1029, 1062,
	996, 277, 1123, 1124, 584, 0, 278, 279, 1069, 0,
	1050, 0, 280, 281, 282, 283, 284, 285, 286, 0,
	0, 288, 289, 290, 287, 291, 0, 292, 0, 293,
	294, 295, 296, 297, 298, 0, 299, 300, 301, 1104,
	302, 303, 1053, 1051, 1052, 1059, 1055, 1054, 1058, 304,
	305, 306, 307, 1086, 308, 1080, 1079, 1000, 312, 309,
	310, 0, 313, 311, 0, 314, 315, 316, 0, 0,
	317, 1071, 319, 0, 320, 321, 0, 322, 323, 324,
	0, 325, 326, 1006, 327, 328, 329, 331, 333, 330,
	334, 335, 336, 337, 1094, 1095, 1018, 251, 0, 0,
	0, 0, 0, 338, 339, 340, 1078, 0, 0, 0,
	341, 0, 342, 0, 0, 1105, 343, 344, 1091, 1092,
	345, 346, 347, 348, 349, 350, 351, 352, 0, 353,
	1101, 0, 1028, 354, 0, 355, 356, 357, 358, 359,
	1064, 1065, 1068, 433, 1107, 360, 361, 0, 362, 363,
	364, 365, 0, 0, 0, 2259, 366, 367, 369, 0,
	1106, 368, 1073, 1074, 0, 1034, 0, 370, 371, 1108,
	1066, 1109, 372, 373, 374, 1110, 375, 0, 0, 0,
	376, 377, 378, 379, 380, 381, 0, 382, 384, 383,
	0, 385, 1102, 1111, 386, 387, 1112, 0, 388, 0,
	0, 0, 389, 390, 1057, 1056, 391, 392, 393, 394,
	0, 395, 396, 398, 400, 397, 399, 401, 414, 402,
	403, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 416, 0, 415, 1113, 417, 418, 419, 424, 426,
	427, 422, 423, 425, 428, 429, 421, 1114, 420, 997,
	253, 1115, 430, 431, 1019, 1067, 432, 1081, 434, 435,
	0, 0, 436, 0, 0, 0, 438, 439, 440, 0,
	0, 441, 442, 606, 1116, 443, 1117, 1096, 444, 445,
	437, 446, 447, 448, 449, 450, 451, 452, 453, 0,
	454, 455, 608, 456, 457, 458, 609, 459, 460, 461,
	1097, 462, 611, 463, 464, 2258, 465, 0, 466, 467,
	468, 469, 470, 471, 472, 1077, 473, 475, 474, 476,
	0, 477, 0, 0, 0, 0, 0, 478, 0, 480,
	481, 482, 479, 483, 484, 485, 486, 0, 487, 488,
	489, 1118, 490, 491, 492, 493, 1007, 494, 0, 495,
	496, 502, 503, 497, 498, 504, 505, 506, 507, 508,
	0, 510, 511, 509, 512, 513, 514, 1060, 515, 499,
	500, 516, 517, 1119, 518, 519, 520, 521, 522, 523,
	1075, 0, 524, 0, 525, 526, 527, 528, 501, 529,
	534, 1122, 530, 531, 532, 533, 1098, 0, 536, 537,
	995, 535, 0, 538, 539, 540, 541, 542, 543, 332,
	544, 0, 545, 1087, 1088, 1089, 1090, 0, 554, 0,
	546, 547, 548, 1099, 549, 1100, 1017, 550, 551, 552,
	553, 0, 555, 556, 0, 1001, 557, 558, 559, 561,
	562, 560, 563, 1061, 564, 0, 0, 565, 566, 567,
	623, 1084, 1121, 0, 569, 568, 570, 626, 0, 0,
	0, 0, 571, 572, 627, 573, 574, 575, 998, 0,
	0, 0, 0, 0, 0, 994, 0, 0, 0, 0,
	0, 0, 992, 993, 1039, 1011, 1012, 1013, 1009, 1010,
	1022, 1023, 0, 0, 0, 1021, 0, 0, 0, 0,
	0, 254, 255, 256, 257, 258, 259, 0, 260, 261,
	0, 0, 0, 0, 0, 1063, 1027, 0, 0, 0,
	262, 263, 1103, 264, 265, 266, 267, 268, 577, 1076,
	0, 269, 1083, 270, 1082, 0, 1093, 271, 272, 273,
	274, 275, 276, 1029, 1062, 996, 277, 1123, 1124, 584,
	0, 278, 279, 1069, 0, 1050, 0, 280, 281, 282,
	283, 284, 285, 286, 0, 0, 288, 289, 290, 287,
	291, 0, 292, 0, 293, 294, 295, 296, 297, 298,
	0, 299, 300, 301, 1104, 302, 303, 1053, 1051, 1052,
	1059, 1055, 1054, 1058, 304, 305, 306, 307, 1086, 308,
	1080, 1079, 1000, 312, 309, 310, 0, 313, 311, 0,
	314, 315, 316, 0, 0, 317, 1071, 319, 0, 320,
	321, 0, 322, 323, 324, 0, 325, 326, 1006, 327,
	328, 329, 331, 333, 330, 334, 335, 336, 337, 1094,
	1095, 1018, 251, 0, 0, 0, 0, 0, 338, 339,
	340, 1078, 0, 0, 0, 341, 0, 342, 0, 0,
	1105, 343, 344, 1091, 1092, 345, 346, 347, 348, 349,
	350, 351, 352, 0, 353, 1101, 0, 1028, 354, 0,
	355, 356, 357, 358, 359, 1064, 1065, 1068, 433, 1107,
	360, 361, 0, 362, 363, 364, 365, 0, 0, 0,
	252, 366, 367, 369, 0, 1106, 368, 1073, 1074, 0,
	1034, 0, 370, 371, 1108, 1066, 1109, 372, 373, 374,
	1110, 375, 0, 0, 0, 376, 377, 378, 379, 380,
	381, 0, 382, 384, 383, 0, 385, 1102, 1111, 386,
	387, 1112, 0, 388, 0, 0, 0, 389, 390, 1057,
	1056, 391, 392, 393, 394, 0, 395, 396, 398, 400,
	397, 399, 401, 414, 402, 403, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 416, 0, 415, 1113,
	417, 418, 419, 424, 426, 427, 422, 423, 425, 428,
	429, 421, 1114, 420, 997, 253, 1115, 430, 431, 1019,
	1067, 432, 1081, 434, 435, 0, 0, 436, 0, 1002,
	0, 438, 439, 440, 0, 0, 441, 442, 606, 1116,
	443, 1117, 1096, 444, 445, 437, 446, 447, 448, 449,
	450, 451, 452, 453, 0, 454, 455, 608, 456, 457,
	458, 609, 459, 460, 461, 1097, 462, 611, 463, 464,
	0, 465, 0, 466, 467, 468, 469, 470, 471, 472,
	1077, 473, 475, 474, 476, 0, 477, 0, 0, 0,
	0, 0, 478, 0, 480, 481, 482, 479, 483, 484,
	485, 486, 0, 487, 488, 489, 1118, 490, 491, 492,
	493, 1007, 494, 0, 495, 496, 502, 503, 497, 498,
	504, 505, 506, 507, 508, 0, 510, 511, 509, 512,
	513, 514, 1060, 515, 499, 500, 516, 517, 1119, 518,
	519, 520, 521, 522, 523, 1075, 0, 524, 0, 525,
	526, 527, 528, 501, 529, 534, 1122, 530, 531, 532,
	533, 1098, 0, 536, 537, 995, 535, 0, 538, 539,
	540, 541, 542, 543, 332, 544, 0, 545, 1087, 1088,
	1089, 1090, 0, 554, 0, 546, 547, 548, 1099, 549,
	1100, 1017, 550, 551, 552, 553, 0, 555, 556, 0,
	1001, 557, 558, 559, 561, 562, 560, 563, 1061, 564,
	0, 0, 565, 566, 567, 623, 1084, 1121, 0, 569,
	568, 570, 626, 0, 0, 0, 0, 571, 572, 627,
	573, 574, 575, 998, 0, 0, 0, 0, 0, 0,
	994, 0, 0, 0, 0, 0, 0, 992, 993, 1039,
	1011, 1012, 1013, 1009, 1010, 1022, 1023, 0, 0, 0,
	1021, 0, 0, 0, 0, 0, 254, 255, 256, 257,
	258, 259, 0, 260, 261, 0, 0, 0, 0, 0,
	1063, 1027, 0, 0, 0, 262, 263, 1103, 264, 265,
	266, 267, 268, 577, 1076, 0, 269, 1083, 270, 1082,
	0, 1093, 271, 272, 273, 274, 275, 276, 1029, 1062,
	996, 277, 1123, 1124, 584, 0, 278, 279, 1069, 0,
	1050, 0, 280, 281, 282, 283, 284, 285, 286, 0,
	0, 288, 289, 290, 287, 291, 0, 292, 0, 293,
	294, 295, 296, 3986, 298, 0, 299, 300, 301, 1104,
	302, 303, 1053, 1051, 1052, 1059, 1055, 1054, 1058, 304,
	305, 306, 307, 1086, 308, 1080, 1079, 1000, 312, 309,
	310, 0, 313, 311, 0, 314, 315, 316, 0, 0,
	317, 1071, 319, 0, 320, 321, 0, 322, 323, 324,
	0, 325, 326, 1006, 327, 328, 329, 331, 333, 330,
	334, 335, 336, 337, 1094, 1095, 1018, 251, 0, 0,
	0, 0, 0, 338, 339, 340, 1078, 0, 0, 0,
	341, 0, 342, 0, 0, 1105, 343, 344, 1091, 1092,
	345, 346, 347, 348, 349, 350, 351, 352, 0, 353,
	1101, 0, 1028, 354, 0, 355, 356, 357, 358, 359,
	1064, 1065, 1068, 433, 1107, 360, 361, 0, 362, 363,
	364, 365, 0, 0, 0, 252, 366, 367, 369, 0,
	1106, 368, 1073, 1074, 0, 1034, 0, 370, 371, 1108,
	1066, 1109, 372, 373, 374, 1110, 375, 0, 0, 0,
	376, 377, 378, 379, 380, 381, 0, 382, 384, 383,
	0, 385, 1102, 1111, 386, 387, 1112, 0, 388, 0,
	0, 0, 389, 390, 1057, 1056, 391, 392, 393, 394,
	0, 395, 396, 398, 400, 397, 399, 401, 414, 402,
	403, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 416, 0, 415, 1113, 417, 418, 419, 424, 426,
	427, 422, 423, 425, 428, 429, 421, 1114, 420, 997,
	253, 1115, 430, 431, 1019, 1067, 432, 1081, 434, 435,
	0, 0, 436, 0, 1002, 0, 438, 439, 440, 0,
	0, 441, 442, 606, 1116, 443, 1117, 1096, 444, 445,
	437, 446, 447, 448, 449, 450, 451, 452, 453, 0,
	454, 455, 608, 456, 457, 458, 609, 459, 460, 461,
	1097, 462, 611, 463, 464, 0, 465, 0, 466, 467,
	468, 469, 470, 471, 472, 1077, 473, 475, 474, 476,
	0, 477, 0, 0, 0, 0, 0, 478, 0, 480,
	481, 482, 479, 483, 484, 485, 486, 0, 487, 488,
	489, 1118, 490, 491, 492, 493, 1007, 494, 0, 495,
	496, 502, 503, 497, 498, 504, 505, 506, 507, 508,
	0, 510, 511, 509, 512, 513, 514, 1060, 515, 499,
	500, 516, 517, 1119, 518, 519, 520, 521, 522, 523,
	1075, 0, 524, 0, 525, 526, 527, 528, 501, 529,
	534, 1122, 530, 531, 532, 533, 1098, 0, 536, 537,
	995, 535, 0, 538, 539, 540, 541, 542, 543, 332,
	544, 0, 545, 1087, 1088, 1089, 1090, 0, 554, 0,
	546, 547, 548, 1099, 549, 1100, 1017, 550, 551, 552,
	553, 0, 555, 556, 0, 1001, 557, 558, 559, 561,
	562, 560, 563, 1061, 564, 0, 0, 565, 566, 567,
	623, 1084, 1121, 0, 569, 568, 570, 626, 0, 0,
	0, 0, 571, 572, 627, 573, 574, 575, 998, 0,
	0, 0, 0, 0, 0, 994, 0, 0, 0, 0,
	0, 0, 992, 993, 1039, 1011, 1012, 1013, 1009, 1010,
	1022, 1023, 0, 0, 0, 1021, 0, 0, 0, 0,
	0, 254, 255, 256, 257, 258, 259, 0, 260, 261,
	0, 0, 0, 0, 0, 1063, 1027, 0, 0, 0,
	262, 263, 1103, 264, 265, 266, 267, 268, 577, 1076,
	0, 269, 1083, 270, 1082, 0, 1093, 271, 272, 273,
	274, 275, 276, 1029, 1062, 996, 277, 1123, 1124, 584,
	0, 278, 279, 1069, 0, 1050, 0, 280, 281, 282,
	283, 284, 285, 286, 0, 0, 288, 289, 290, 287,
	291, 0, 292, 0, 293, 294, 295, 296, 297, 298,
	0, 299, 300, 301, 1104, 302, 303, 1053, 1051, 1052,
	1059, 1055, 1054, 1058, 304, 305, 306, 307, 1086, 308,
	1080, 1079, 1000, 312, 309, 310, 0, 313, 311, 0,
	314, 315, 316, 0, 0, 317, 1071, 319, 0, 320,
	321, 0, 322, 323, 324, 0, 325, 326, 1006, 327,
	328, 329, 331, 333, 330, 334, 335, 336, 337, 1094,
	1095, 1018, 251, 0, 0, 0, 0, 0, 338, 339,
	340, 1078, 0, 0, 0, 341, 0, 342, 0, 0,
	1105, 343, 344, 1091, 1092, 345, 346, 347, 348, 349,
	350, 351, 352, 0, 353, 1101, 0, 1028, 354, 0,
	355, 356, 357, 358, 359, 1064, 1065, 1068, 433, 1107,
	360, 361, 0, 362, 363, 364, 365, 0, 0, 0,
	252, 366, 367, 369, 0, 1106, 368, 1073, 1074, 0,
	1034, 0, 370, 371, 1108, 1066, 1109, 372, 373, 374,
	1110, 375, 0, 0, 0, 376, 377, 378, 379, 380,
	381, 0, 382, 384, 383, 0, 385, 1102, 1111, 386,
	387, 1112, 0, 388, 0, 0, 0, 389, 390, 1057,
	1056, 391, 392, 393, 394, 0, 395, 396, 398, 400,
	397, 399, 401, 414, 402, 403, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 416, 0, 415, 1113,
	417, 418, 419, 424, 426, 427, 422, 423, 425, 428,
	429, 421, 1114, 420, 997, 3644, 1115, 430, 431, 1019,
	1067, 432, 1081, 434, 435, 0, 0, 436, 0, 0,
	0, 438, 439, 440, 0, 0, 441, 442, 606, 1116,
	443, 1117, 1096, 444, 445, 437, 446, 447, 448, 449,
	450, 451, 452, 453, 0, 454, 455, 608, 456, 457,
	458, 609, 459, 460, 461, 1097, 462, 611, 463, 464,
	0, 465, 0, 466, 467, 468, 469, 470, 471, 472,
	1077, 473, 475, 474, 476, 0, 477, 0, 0, 0,
	0, 0, 478, 0, 480, 481, 482, 479, 483, 484,
	485, 486, 0, 487, 488, 489, 1118, 490, 491, 492,
	493, 1007, 494, 0, 495, 496, 502, 503, 497, 498,
	504, 505, 506, 507, 508, 0, 510, 511, 509, 512,
	513, 514, 1060, 515, 499, 500, 516, 517, 1119, 518,
	519, 520, 521, 522, 523, 1075, 0, 524, 0, 525,
	526, 527, 528, 501, 529, 534, 1122, 530, 531, 532,
	533, 1098, 0, 536, 537, 995, 535, 0, 538, 539,
	540, 541, 542, 543, 332, 544, 0, 545, 1087, 1088,
	1089, 1090, 0, 554, 0, 546, 547, 548, 1099, 549,
	1100, 1017, 550, 551, 552, 553, 0, 555, 556, 0,
	1001, 557, 558, 559, 561, 562, 560, 563, 1061, 564,
	0, 0, 565, 566, 567, 623, 1084, 1121, 0, 569,
	568, 570, 626, 0, 0, 0, 0, 571, 572, 627,
	573, 574, 575, 998, 0, 0, 0, 0, 0, 0,
	994, 0, 0, 0, 0, 0, 0, 992, 993, 1810,
	0, 0, 0, 0, 0, 0, 1023, 0, 0, 0,
	1021, 1039, 1011, 1012, 1013, 1009, 1010, 1022, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 254, 255,
	256, 257, 258, 259, 0, 260, 261, 0, 0, 0,
	0, 0, 1063, 1027, 0, 0, 0, 262, 263, 1103,
	264, 265, 266, 267, 268, 577, 1076, 0, 269, 1083,
	270, 1082, 0, 1093, 271, 272, 273, 274, 275, 276,
	1029, 1062, 996, 277, 1123, 1124, 584, 0, 278, 279,
	1069, 0, 1050, 0, 280, 281, 282, 283, 284, 285,
	286, 0, 0, 288, 289, 290, 287, 291, 0, 292,
	0, 293, 294, 295, 296, 297, 298, 0, 299, 300,
	301, 1104, 302, 303, 1053, 1051, 1052, 1059, 1055, 1054,
	1058, 304, 305, 306, 307, 1086, 308, 1080, 1079, 1000,
	312, 309, 310, 0, 313, 311, 0, 314, 315, 316,
	0, 0, 317, 1071, 319, 0, 320, 321, 0, 322,
	323, 324, 0, 325, 326, 1006, 327, 328, 329, 331,
	333, 330, 334, 335, 336, 337, 1094, 1095, 1018, 251,
	0, 0, 0, 0, 0, 338, 339, 340, 1078, 0,
	0, 0, 341, 0, 342, 0, 0, 1105, 343, 344,
	1091, 1092, 345, 346, 347, 348, 349, 350, 351, 352,
	0, 353, 1101, 0, 1028, 354, 0, 355, 356, 357,
	358, 359, 1064, 1065, 1068, 433, 1107, 360, 361, 0,
	362, 363, 364, 365, 0, 0, 0, 252, 366, 367,
	369, 0, 1106, 368, 1073, 1074, 0, 1034, 0, 370,
	371, 1108, 1066, 1109, 372, 373, 374, 1110, 375, 0,
	0, 0, 376, 377, 378, 379, 380, 381, 0, 382,
	384, 383, 0, 385, 1102, 1111, 386, 387, 1112, 0,
	388, 0, 0, 0, 389, 390, 1057, 1056, 391, 392,
	393, 394, 0, 395, 396, 398, 400, 397, 399, 401,
	414, 402, 403, 404, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 416, 0, 415, 1113, 417, 418, 419,
	424, 426, 427, 422, 423, 425, 428, 429, 421, 1114,
	420, 997, 253, 1115, 430, 431, 1019, 1067, 432, 1081,
	434, 435, 0, 0, 436, 0, 0, 0, 438, 439,
	440, 0, 0, 441, 442, 606, 1116, 443, 1117, 1096,
	444, 445, 437, 446, 447, 448, 449, 450, 451, 452,
	453, 0, 454, 455, 608, 456, 457, 458, 609, 459,
	460, 461, 1097, 462, 611, 463, 464, 0, 465, 0,
	466, 467, 468, 469, 470, 471, 472, 1077, 473, 475,
	474, 476, 0, 477, 0, 0, 0, 0, 0, 478,
	0, 480, 481, 482, 479, 483, 484, 485, 486, 0,
	487, 488, 489, 1118, 490, 491, 492, 493, 1007, 494,
	0, 495, 496, 502, 503, 497, 498, 504, 505, 506,
	507, 508, 0, 510, 511, 509, 512, 513, 514, 1060,
	515, 499, 500, 516, 517, 1119, 518, 519, 520, 521,
	522, 523, 1075, 0, 524, 0, 525, 526, 527, 528,
	501, 529, 534, 1122, 530, 531, 532, 533, 1098, 0,
	536, 537, 995, 535, 0, 538, 539, 540, 541, 542,
	543, 332, 544, 0, 545, 1087, 1088, 1089, 1090, 0,
	554, 0, 546, 547, 548, 1099, 549, 1100, 1017, 550,
	551, 552, 553, 0, 555, 556, 0, 1001, 557, 558,
	559, 561, 562, 560, 563, 1061, 564, 0, 0, 565,
	566, 567, 623, 1084, 1121, 3394, 569, 568, 570, 626,
	0, 0, 0, 0, 571, 572, 627, 573, 574, 575,
	998, 0, 0, 0, 0, 0, 0, 994, 0, 0,
	0, 0, 0, 0, 992, 993, 1039, 1011, 1012, 1013,
	1009, 1010, 1022, 1023, 0, 0, 0, 1021, 0, 0,
	0, 0, 0, 254, 255, 256, 257, 258, 259, 0,
	260, 261, 0, 0, 0, 0, 0, 1063, 1027, 0,
	0, 0, 262, 263, 1103, 264, 265, 266, 267, 268,
	577, 1076, 0, 269, 1083, 270, 1082, 0, 1093, 271,
	272, 273, 274, 275, 276, 1029, 1062, 996, 277, 1123,
	1124, 584, 0, 278, 279, 1069, 0, 1050, 0, 280,
	281, 282, 283, 284, 285, 286, 0, 0, 288, 289,
	290, 287, 291, 0, 292, 0, 293, 294, 295, 296,
	297, 298, 0, 299, 300, 301, 1104, 302, 303, 1053,
	1051, 1052, 1059, 1055, 1054, 1058, 304, 305, 306, 307,
	1086, 308, 1080, 1079, 1000, 312, 309, 310, 0, 313,
	311, 0, 314, 315, 316, 0, 0, 317, 1071, 319,
	0, 320, 321, 0, 322, 323, 324, 0, 325, 326,
	1006, 327, 328, 329, 331, 333, 330, 334, 335, 336,
	337, 1094, 1095, 1018, 251, 0, 0, 0, 0, 0,
	338, 339, 340, 1078, 0, 0, 0, 341, 0, 342,
	0, 0, 1105, 343, 344, 1091, 1092, 345, 346, 347,
	348, 349, 350, 351, 352, 0, 353, 1101, 0, 1028,
	354, 0, 355, 356, 357, 358, 359, 1064, 1065, 1068,
	433, 1107, 360, 361, 0, 362, 363, 364, 365, 0,
	0, 0, 252, 366, 367, 369, 0, 1106, 368, 1073,
	1074, 0, 1034, 0, 370, 371, 1108, 1066, 1109, 372,
	373, 374, 1110, 375, 0, 0, 0, 376, 377, 378,
	379, 380, 381, 0, 382, 384, 383, 0, 385, 1102,
	1111, 386, 387, 1112, 0, 388, 0, 0, 0, 389,
	390, 1057, 1056, 391, 392, 393, 394, 0, 395, 396,
	398, 400, 397, 399, 401, 414, 402, 403, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 416, 0,
	415, 1113, 417, 418, 419, 424, 426, 427, 422, 423,
	425, 428, 429, 421, 1114, 420, 997, 253, 1115, 430,
	431, 1019, 1067, 432, 1081, 434, 435, 0, 0, 436,
	0, 0, 0, 438, 439, 440, 0, 0, 441, 442,
	606, 1116, 443, 1117, 1096, 444, 445, 437, 446, 447,
	448, 449, 450, 451, 452, 453, 0, 454, 455, 608,
	456, 457, 458, 609, 459, 460, 461, 1097, 462, 611,
	463, 464, 0, 465, 0, 466, 467, 468, 469, 470,
	471, 472, 1077, 473, 475, 474, 476, 0, 477, 0,
	0, 0, 0, 0, 478, 0, 480, 481, 482, 479,
	483, 484, 485, 486, 0, 487, 488, 489, 1118, 490,
	491, 492, 493, 1007, 494, 0, 495, 496, 502, 503,
	497, 498, 504, 505, 506, 507, 508, 0, 510, 511,
	509, 512, 513, 514, 1060, 515, 499, 500, 516, 517,
	1119, 518, 519, 520, 521, 522, 523, 1075, 0, 524,
	0, 525, 526, 527, 528, 501, 529, 534, 1122, 530,
	531, 532, 533, 1098, 0, 536, 537, 995, 535, 0,
	538, 539, 540, 541, 542, 543, 332, 544, 0, 545,
	1087, 1088, 1089, 1090, 0, 554, 0, 546, 547, 548,
	1099, 549, 1100, 1017, 550, 551, 552, 553, 0, 555,
	556, 0, 1001, 557, 558, 559, 561, 562, 560, 563,
	1061, 564, 0, 0, 565, 566, 567, 623, 1084, 1121,
	0, 569, 568, 570, 626, 0, 0, 0, 0, 571,
	572, 627, 573, 574, 575, 998, 0, 0, 0, 0,
	0, 0, 994, 0, 0, 0, 0, 0, 0, 992,
	993, 1810, 0, 0, 0, 0, 0, 0, 1023, 0,
	0, 0, 1021, 1039, 1011, 1012, 1013, 1009, 1010, 1022,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	254, 255, 256, 257, 258, 259, 0, 260, 261, 0,
	0, 0, 0, 0, 1063, 1027, 0, 0, 0, 262,
	263, 1103, 264, 265, 266, 267, 268, 577, 1076, 0,
	269, 1083, 270, 1082, 0, 1093, 271, 272, 273, 274,
	275, 276, 1029, 1062, 996, 277, 1123, 1124, 584, 0,
	278, 279, 1069, 0, 1050, 0, 280, 281, 282, 283,
	284, 285, 286, 0, 0, 288, 289, 290, 287, 291,
	0, 292, 0, 293, 294, 295, 296, 297, 298, 0,
	299, 300, 301, 1104, 302, 303, 1053, 1051, 1052, 1059,
	1055, 1054, 1058, 304, 305, 306, 307, 1086, 308, 1080,
	1079, 1000, 312, 309, 310, 0, 313, 311, 0, 314,
	315, 316, 0, 0, 317, 1071, 319, 0, 320, 321,
	0, 322, 323, 324, 0, 325, 326, 1006, 327, 328,
	329, 331, 333, 330, 334, 335, 336, 337, 1094, 1095,
	1018, 251, 0, 0, 0, 0, 0, 338, 339, 340,
	1078, 0, 0, 0, 341, 0, 342, 0, 2478, 1105,
	343, 344, 1091, 1092, 345, 346, 347, 348, 349, 350,
	351, 352, 0, 353, 1101, 0, 1028, 354, 0, 355,
	356, 357, 358, 359, 1064, 1065, 1068, 433, 1107, 360,
	361, 0, 362, 363, 364, 365, 0, 0, 0, 252,
	366, 367, 369, 0, 1106, 368, 1073, 1074, 0, 1034,
	0, 370, 371, 1108, 1066, 1109, 372, 373, 374, 1110,
	375, 0, 0, 0, 376, 377, 378, 379, 380, 381,
	0, 382, 384, 383, 0, 385, 1102, 1111, 386, 387,
	1112, 0, 388, 0, 0, 0, 389, 390, 1057, 1056,
	391, 392, 393, 394, 0, 395, 396, 398, 400, 397,
	399, 401, 414, 402, 403, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 416, 0, 415, 1113, 417,
	418, 419, 424, 426, 427, 422, 423, 425, 428, 429,
	421, 1114, 420, 997, 253, 1115, 430, 431, 1019, 1067,
	432, 1081, 434, 435, 0, 0, 436, 0, 0, 0,
	438, 439, 440, 0, 0, 441, 442, 606, 1116, 443,
	1117, 1096, 444, 445, 437, 446, 447, 448, 449, 450,
	451, 452, 453, 0, 454, 455, 608, 456, 457, 458,
	609, 459, 460, 461, 1097, 462, 611, 463, 464, 0,
	465, 0, 466, 467, 468, 469, 470, 471, 472, 1077,
	473, 475, 474, 476, 0, 477, 0, 0, 0, 0,
	0, 478, 0, 480, 481, 482, 479, 483, 484, 485,
	486, 0, 487, 488, 489, 1118, 490, 491, 492, 493,
	1007, 494, 0, 495, 496, 502, 503, 497, 498, 504,
	505, 506, 507, 508, 0, 510, 511, 509, 512, 513,
	514, 1060, 515, 499, 500, 516, 517, 1119, 518, 519,
	520, 521, 522, 523, 1075, 0, 524, 0, 525, 526,
	527, 528, 501, 529, 534, 1122, 530, 531, 532, 533,
	1098, 0, 536, 537, 995, 535, 0, 538, 539, 540,
	541, 542, 543, 332, 544, 0, 545, 1087, 1088, 1089,
	1090, 0, 554, 0, 546, 547, 548, 1099, 549, 1100,
	1017, 550, 551, 552, 553, 0, 555, 556, 0, 1001,
	557, 558, 559, 561, 562, 560, 563, 1061, 564, 0,
	0, 565, 566, 567, 623, 1084, 1121, 0, 569, 568,
	570, 626, 0, 0, 0, 0, 571, 572, 627, 573,
	574, 575, 998, 0, 0, 0, 0, 0, 0, 994,
	0, 0, 0, 0, 0, 0, 992, 993, 1039, 1011,
	1012, 1013, 1009, 1010, 1022, 1023, 0, 0, 0, 1021,
	0, 0, 0, 0, 0, 254, 255, 256, 257, 258,
	259, 0, 260, 261, 0, 0, 0, 0, 0, 1063,
	1027, 0, 0, 0, 262, 263, 1103, 264, 265, 266,
	267, 268, 577, 1076, 0, 269, 1083, 270, 1082, 0,
	1093, 271, 272, 273, 274, 275, 276, 1029, 1062, 996,
	277, 1123, 1124, 584, 0, 278, 279, 1069, 0, 1050,
	0, 280, 281, 282, 283, 284, 285, 286, 0, 0,
	288, 289, 290, 287, 291, 0, 292, 0, 293, 294,
	295, 296, 297, 298, 0, 299, 300, 301, 1104, 302,
	303, 1053, 1051, 1052, 1059, 1055, 1054, 1058, 304, 305,
	306, 307, 1086, 308, 1080, 1079, 1000, 312, 309, 310,
	0, 313, 311, 0, 314, 315, 316, 0, 0, 317,
	1071, 319, 0, 320, 321, 0, 322, 323, 324, 0,
	325, 326, 1006, 327, 328, 329, 331, 333, 330, 334,
	335, 336, 337, 1094, 1095, 1018, 251, 0, 0, 0,
	0, 0, 338, 339, 340, 1078, 0, 0, 0, 341,
	0, 342, 0, 0, 1105, 343, 344, 1091, 1092, 345,
	346, 347, 348, 349, 350, 351, 352, 0, 353, 1101,
	0, 1028, 354, 0, 355, 356, 357, 358, 359, 1064,
	1065, 1068, 433, 1107, 360, 361, 0, 362, 363, 364,
	365, 0, 0, 0, 252, 366, 367, 369, 0, 1106,
	368, 1073, 1074, 0, 1034, 0, 370, 371, 1108, 1066,
	1109, 372, 373, 374, 1110, 375, 0, 0, 0, 376,
	377, 378, 379, 380, 381, 0, 382, 384, 383, 0,
	385, 1102, 1111, 386, 387, 1112, 0, 388, 0, 0,
	0, 389, 390, 1057, 1056, 391, 392, 393, 394, 0,
	395, 396, 398, 400, 397, 399, 401, 414, 402, 403,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	416, 0, 415, 1113, 417, 418, 419, 424, 426, 427,
	422, 423, 425, 428, 429, 421, 1114, 420, 997, 253,
	1115, 430, 431, 1019, 1067, 432, 1081, 434, 435, 0,
	0, 436, 0, 0, 0, 438, 439, 440, 0, 0,
	441, 442, 606, 1116, 443, 1117, 1096, 444, 445, 437,
	446, 447, 448, 449, 450, 451, 452, 453, 0, 454,
	455, 608, 456, 457, 458, 609, 459, 460, 461, 1097,
	462, 611, 463, 464, 0, 465, 0, 466, 467, 468,
	469, 470, 471, 472, 1077, 473, 475, 474, 476, 0,
	477, 0, 0, 0, 0, 0, 478, 0, 480, 481,
	482, 479, 483, 484, 485, 486, 0, 487, 488, 489,
	1118, 490, 491, 492, 493, 1007, 494, 0, 495, 496,
	502, 503, 497, 498, 504, 505, 506, 507, 508, 0,
	510, 511, 509, 512, 513, 514, 1060, 515, 499, 500,
	516, 517, 1119, 518, 519, 520, 521, 522, 523, 1075,
	0, 524, 0, 525, 526, 527, 528, 501, 529, 534,
	1122, 530, 531, 532, 533, 1098, 0, 536, 537, 995,
	535, 0, 538, 539, 540, 541, 542, 543, 332, 544,
	0, 545, 1087, 1088, 1089, 1090, 0, 554, 0, 546,
	547, 548, 1099, 549, 1100, 1017, 550, 551, 552, 553,
	0, 555, 556, 0, 1001, 557, 558, 559, 561, 562,
	560, 563, 1061, 564, 0, 0, 565, 566, 567, 623,
	1084, 1121, 0, 569, 568, 570, 626, 0, 0, 0,
	0, 571, 572, 627, 573, 574, 575, 998, 0, 0,
	0, 0, 0, 0, 994, 0, 0, 0, 0, 0,
	0, 992, 993, 0, 0, 0, 0, 0, 0, 0,
	1023, 1740, 0, 2483, 1021, 1039, 1011, 1012, 1013, 1009,
	1010, 1022, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 254, 255, 256, 257, 258, 259, 0, 260,
	261, 0, 0, 0, 0, 0, 1063, 1027, 0, 0,
	0, 262, 263, 1103, 264, 265, 266, 267, 268, 577,
	1076, 0, 269, 1083, 270, 1082, 0, 1093, 271, 272,
	273, 274, 275, 276, 1029, 1062, 996, 277, 1123, 1124,
	584, 0, 278, 279, 1069, 0, 1050, 0, 280, 281,
	282, 283, 284, 285, 286, 0, 0, 288, 289, 290,
	287, 291, 0, 292, 0, 293, 294, 295, 296, 297,
	298, 0, 299, 300, 301, 1104, 302, 303, 1053, 1051,
	1052, 1059, 1055, 1054, 1058, 304, 305, 306, 307, 1086,
	308, 1080, 1079, 1000, 312, 309, 310, 0, 313, 311,
	0, 314, 315, 316, 0, 0, 317, 1071, 319, 0,
	320, 321, 0, 322, 323, 324, 0, 325, 326, 1006,
	327, 328, 329, 331, 333, 330, 334, 335, 336, 337,
	1094, 1095, 1018, 251, 0, 0, 0, 0, 0, 338,
	339, 340, 1078, 0, 0, 0, 341, 0, 342, 0,
	0, 1105, 343, 344, 1091, 1092, 345, 346, 347, 348,
	349, 350, 351, 352, 0, 353, 1101, 0, 1028, 354,
	0, 355, 356, 357, 358, 359, 1064, 1065, 1068, 433,
	1107, 360, 361, 0, 362, 363, 364, 365, 0, 0,
	0, 252, 366, 367, 369, 0, 1106, 368, 1073, 1074,
	0, 1034, 0, 370, 371, 1108, 1066, 1109, 372, 373,
	374, 1110, 375, 0, 0, 0, 376, 377, 378, 379,
	380, 381, 0, 382, 384, 383, 0, 385, 1102, 1111,
	386, 387, 1112, 0, 388, 0, 0, 0, 389, 390,
	1057, 1056, 391, 392, 393, 394, 0, 395, 396, 398,
	400, 397, 399, 401, 414, 402, 403, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 416, 0, 415,
	1113, 417, 418, 419, 424, 426, 427, 422, 423, 425,
	428, 429, 421, 1114, 420, 997, 253, 1115, 430, 431,
	1019, 1067, 432, 1081, 434, 435, 0, 0, 436, 0,
	0, 0, 438, 439, 440, 0, 0, 441, 442, 606,
	1116, 443, 1117, 1096, 444, 445, 437, 446, 447, 448,
	449, 450, 451, 452, 453, 0, 454, 455, 608, 456,
	457, 458, 609, 459, 460, 461, 1097, 462, 611, 463,
	464, 0, 465, 0, 466, 467, 468, 469, 470, 471,
	472, 1077, 473, 475, 474, 476, 0, 477, 0, 0,
	0, 0, 0, 478, 0, 480, 481, 482, 479, 483,
	484, 485, 486, 0, 487, 488, 489, 1118, 490, 491,
	492, 493, 1007, 494, 0, 495, 496, 502, 503, 497,
	498, 504, 505, 506, 507, 508, 0, 510, 511, 509,
	512, 513, 514, 1060, 515, 499, 500, 516, 517, 1119,
	518, 519, 520, 521, 522, 523, 1075, 0, 524, 0,
	525, 526, 527, 528, 501, 529, 534, 1122, 530, 531,
	532, 533, 1098, 0, 536, 537, 995, 535, 0, 538,
	539, 540, 541, 542, 543, 332, 544, 0, 545, 1087,
	1088, 1089, 1090, 0, 554, 0, 546, 547, 548, 1099,
	549, 1100, 1017, 550, 551, 552, 553, 0, 555, 556,
	0, 1001, 557, 558, 559, 561, 562, 560, 563, 1061,
	564, 0, 0, 565, 566, 567, 623, 1084, 1121, 0,
	569, 568, 570, 626, 0, 0, 0, 0, 571, 572,
	627, 573, 574, 575, 998, 0, 0, 0, 0, 0,
	0, 994, 0, 0, 0, 0, 0, 0, 992, 993,
	0, 0, 0, 0, 0, 0, 0, 1023, 0, 0,
	2481, 1021, 1039, 1011, 1012, 1013, 1009, 1010, 1022, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 254,
	255, 256, 257, 258, 259, 0, 260, 261, 0, 0,
	0, 0, 0, 1063, 1027, 0, 0, 0, 262, 263,
	1103, 264, 265, 266, 267, 268, 577, 1076, 0, 269,
	1083, 270, 1082, 0, 1093, 271, 272, 273, 274, 275,
	276, 1029, 1062, 996, 277, 1123, 1124, 584, 0, 278,
	279, 1069, 0, 1050, 0, 280, 281, 282, 283, 284,
	285, 286, 0, 0, 288, 289, 290, 287, 291, 0,
	292, 0, 293, 294, 295, 296, 297, 298, 0, 299,
	300, 301, 1104, 302, 303, 1053, 1051, 1052, 1059, 1055,
	1054, 1058, 304, 305, 306, 307, 1086, 308, 1080, 1079,
	1000, 312, 309, 310, 0, 313, 311, 0, 314, 315,
	316, 0, 0, 317, 1071, 319, 0, 320, 321, 0,
	322, 323, 324, 0, 325, 326, 1006, 327, 328, 329,
	331, 333, 330, 334, 335, 336, 337, 1094, 1095, 1018,
	251, 0, 0, 0, 0, 0, 338, 339, 340, 1078,
	0, 0, 0, 341, 0, 342, 0, 0, 1105, 343,
	344, 1091, 1092, 345, 346, 347, 348, 349, 350, 351,
	352, 0, 353, 1101, 0, 1028, 354, 0, 355, 356,
	357, 358, 359, 1064, 1065, 1068, 433, 1107, 360, 361,
	0, 362, 363, 364, 365, 0, 0, 0, 252, 366,
	367, 369, 0, 1106, 368, 1073, 1074, 0, 1034, 0,
	370, 371, 1108, 1066, 1109, 372, 373, 374, 1110, 375,
	0, 0, 0, 376, 377, 378, 379, 380, 381, 0,
	382, 384, 383, 0, 385, 1102, 1111, 386, 387, 1112,
	0, 388, 0, 0, 0, 389, 390, 1057, 1056, 391,
	392, 393, 394, 0, 395, 396, 398, 400, 397, 399,
	401, 414, 402, 403, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 416, 0, 415, 1113, 417, 418,
	419, 424, 426, 427, 422, 423, 425, 428, 429, 421,
	1114, 420, 997, 253, 1115, 430, 431, 1019, 1067, 432,
	1081, 434, 435, 0, 0, 436, 0, 0, 0, 438,
	439, 440, 0, 0, 441, 442, 606, 1116, 443, 1117,
	1096, 444, 445, 437, 446, 447, 448, 449, 450, 451,
	452, 453, 0, 454, 455, 608, 456, 457, 458, 609,
	459, 460, 461, 1097, 462, 611, 463, 464, 0, 465,
	0, 466, 467, 468, 469, 470, 471, 472, 1077, 473,
	475, 474, 476, 0, 477, 0, 0, 0, 0, 0,
	478, 0, 480, 481, 482, 479, 483, 484, 485, 486,
	0, 487, 488, 489, 1118, 490, 491, 492, 493, 1007,
	494, 0, 495, 496, 502, 503, 497, 498, 504, 505,
	506, 507, 508, 0, 510, 511, 509, 512, 513, 514,
	1060, 515, 499, 500, 516, 517, 1119, 518, 519, 520,
	521, 522, 523, 1075, 0, 524, 0, 525, 526, 527,
	528, 501, 529, 534, 1122, 530, 531, 532, 533, 1098,
	0, 536, 537, 995, 535, 0, 538, 539, 540, 541,
	542, 543, 332, 544, 0, 545, 1087, 1088, 1089, 1090,
	0, 554, 0, 546, 547, 548, 1099, 549, 1100, 1017,
	550, 551, 552, 553, 0, 555, 556, 0, 1001, 557,
	558, 559, 561, 562, 560, 563, 1061, 564, 0, 0,
	565, 566, 567, 623, 1084, 1121, 0, 569, 568, 570,
	626, 0, 0, 0, 0, 571, 572, 627, 573, 574,
	575, 998, 0, 0, 0, 0, 0, 0, 994, 0,
	0, 0, 0, 0, 0, 992, 993, 0, 0, 0,
	0, 0, 0, 0, 1023, 0, 0, 2469, 1021, 1039,
	1011, 1012, 1013, 1009, 1010, 1022, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 254, 255, 256, 257,
	258, 259, 0, 260, 261, 0, 0, 0, 0, 0,
	1063, 1027, 0, 0, 0, 262, 263, 1103, 264, 265,
	266, 267, 268, 577, 1076, 0, 269, 1083, 270, 1082,
	0, 1093, 271, 272, 273, 274, 275, 276, 1029, 1062,
	996, 277, 1123, 1124, 584, 0, 278, 279, 1069, 0,
	1050, 0, 280, 281, 282, 283, 284, 285, 286, 0,
	0, 288, 289, 290, 287, 291, 0, 292, 0, 293,
	294, 295, 296, 297, 298, 0, 299, 300, 301, 1104,
	302, 303, 1053, 1051, 1052, 1059, 1055, 1054, 1058, 304,
	305, 306, 307, 1086, 308, 1080, 1079, 1000, 312, 309,
	310, 0, 313, 311, 0, 314, 315, 316, 0, 0,
	317, 1071, 319, 0, 320, 321, 0, 322, 323, 324,
	0, 325, 326, 1006, 327, 328, 329, 331, 333, 330,
	334, 335, 336, 337, 1094, 1095, 1018, 251, 0, 0,
	0, 0, 0, 338, 339, 340, 1078, 0, 0, 0,
	341, 0, 342, 0, 0, 1105, 343, 344, 1091, 1092,
	345, 346, 347, 348, 349, 350, 351, 352, 0, 353,
	1101, 0, 1028, 354, 0, 355, 356, 357, 358, 359,
	1064, 1065, 1068, 433, 1107, 360, 361, 0, 362, 363,
	364, 365, 0, 0, 0, 252, 366, 367, 369, 0,
	1106, 368, 1073, 1074, 0, 1034, 0, 370, 371, 1108,
	1066, 1109, 372, 373, 374, 1110, 375, 0, 0, 0,
	376, 377, 378, 379, 380, 381, 0, 382, 384, 383,
	0, 385, 1102, 1111, 386, 387, 1112, 0, 388, 0,
	0, 0, 389, 390, 1057, 1056, 391, 392, 393, 394,
	0, 395, 396, 398, 400, 397, 399, 401, 414, 402,
	403, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 416, 0, 415, 1113, 417, 418, 419, 424, 426,
	427, 422, 423, 425, 428, 429, 421, 1114, 420, 997,
	253, 1115, 430, 431, 1019, 1067, 432, 1081, 434, 435,
	0, 0, 436, 0, 0, 0, 438, 439, 440, 0,
	0, 441, 442, 606, 1116, 443, 1117, 1096, 444, 445,
	437, 446, 447, 448, 449, 450, 451, 452, 453, 0,
	454, 455, 608, 456, 457, 458, 609, 459, 460, 461,
	1097, 462, 611, 463, 464, 0, 465, 0, 466, 467,
	468, 469, 470, 471, 472, 1077, 473, 475, 474, 476,
	0, 477, 0, 0, 0, 0, 0, 478, 0, 480,
	481, 482, 479, 483, 484, 485, 486, 0, 487, 488,
	489, 1118, 490, 491, 492, 493, 1007, 494, 0, 495,
	496, 502, 503, 497, 498, 504, 505, 506, 507, 508,
	0, 510, 511, 509, 512, 513, 514, 1060, 515, 499,
	500, 516, 517, 1119, 518, 519, 520, 521, 522, 523,
	1075, 0, 524, 0, 525, 526, 527, 528, 501, 529,
	534, 1122, 530, 531, 532, 533, 1098, 0, 536, 537,
	995, 535, 0, 538, 539, 540, 541, 542, 543, 332,
	544, 0, 545, 1087, 1088, 1089, 1090, 0, 554, 0,
	546, 547, 548, 1099, 549, 1100, 1017, 550, 551, 552,
	553, 0, 555, 556, 0, 1001, 557, 558, 559, 561,
	562, 560, 563, 1061, 564, 0, 0, 565, 566, 567,
	623, 1084, 1121, 0, 569, 568, 570, 626, 0, 0,
	0, 0, 571, 572, 627, 573, 574, 575, 998, 0,
	0, 0, 0, 0, 0, 994, 0, 0, 0, 0,
	0, 0, 992, 993, 0, 0, 0, 0, 0, 0,
	0, 1023, 0, 0, 2458, 1021, 1039, 1011, 1012, 1013,
	1009, 1010, 1022, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 254, 255, 256, 257, 258, 259, 0,
	260, 261, 0, 0, 0, 0, 0, 1063, 1027, 0,
	0, 0, 262, 263, 1103, 264, 265, 266, 267, 268,
	577, 1076, 0, 269, 1083, 270, 1082, 0, 1093, 271,
	272, 273, 274, 275, 276, 1029, 1062, 996, 277, 1123,
	1124, 584, 0, 278, 279, 1069, 0, 1050, 0, 280,
	281, 282, 283, 284, 285, 286, 0, 0, 288, 289,
	290, 287, 291, 0, 292, 0, 293, 294, 295, 296,
	297, 298, 0, 299, 300, 301, 1104, 302, 303, 1053,
	1051, 1052, 1059, 1055, 1054, 1058, 304, 305, 306, 307,
	1086, 308, 1080, 1079, 1000, 312, 309, 310, 0, 313,
	311, 0, 314, 315, 316, 0, 0, 317, 1071, 319,
	0, 320, 321, 0, 322, 323, 324, 0, 325, 326,
	1006, 327, 328, 329, 331, 333, 330, 334, 335, 336,
	337, 1094, 1095, 1018, 251, 0, 0, 0, 0, 0,
	338, 339, 340, 1078, 0, 0, 0, 341, 0, 342,
	0, 0, 1105, 343, 344, 1091, 1092, 345, 346, 347,
	348, 349, 350, 351, 352, 0, 353, 1101, 0, 1028,
	354, 0, 355, 356, 357, 358, 359, 1064, 1065, 1068,
	433, 1107, 360, 361, 0, 362, 363, 364, 365, 0,
	0, 0, 252, 366, 367, 369, 0, 1106, 368, 1073,
	1074, 0, 1034, 0, 370, 371, 1108, 1066, 1109, 372,
	373, 374, 1110, 375, 0, 0, 0, 376, 377, 378,
	379, 380, 381, 0, 382, 384, 383, 0, 385, 1102,
	1111, 386, 387, 1112, 0, 388, 0, 0, 0, 389,
	390, 1057, 1056, 391, 392, 393, 394, 0, 395, 396,
	398, 400, 397, 399, 401, 414, 402, 403, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 416, 0,
	415, 1113, 417, 418, 419, 424, 426, 427, 422, 423,
	425, 428, 429, 421, 1114, 420, 997, 253, 1115, 430,
	431, 1019, 1067, 432, 1081, 434, 435, 0, 0, 436,
	0, 0, 0, 438, 439, 440, 0, 0, 441, 442,
	606, 1116, 443, 1117, 1096, 444, 445, 437, 446, 447,
	448, 449, 450, 451, 452, 453, 0, 454, 455, 608,
	456, 457, 458, 609, 459, 460, 461, 1097, 462, 611,
	463, 464, 0, 465, 0, 466, 467, 468, 469, 470,
	471, 472, 1077, 473, 475, 474, 476, 0, 477, 0,
	0, 0, 0, 0, 478, 0, 480, 481, 482, 479,
	483, 484, 485, 486, 0, 487, 488, 489, 1118, 490,
	491, 492, 493, 1007, 494, 0, 495, 496, 502, 503,
	497, 498, 504, 505, 506, 507, 508, 0, 510, 511,
	509, 512, 513, 514, 1060, 515, 499, 500, 516, 517,
	1119, 518, 519, 520, 521, 522, 523, 1075, 0, 524,
	0, 525, 526, 527, 528, 501, 529, 534, 1122, 530,
	531, 532, 533, 1098, 0, 536, 537, 995, 535, 0,
	538, 539, 540, 541, 542, 543, 332, 544, 0, 545,
	1087, 1088, 1089, 1090, 0, 554, 0, 546, 547, 548,
	1099, 549, 1100, 1017, 550, 551, 552, 553, 0, 555,
	556, 0, 1001, 557, 558, 559, 561, 562, 560, 563,
	1061, 564, 0, 0, 565, 566, 567, 623, 1084, 1121,
	0, 569, 568, 570, 626, 0, 0, 0, 0, 571,
	572, 627, 573, 574, 575, 998, 0, 0, 0, 0,
	0, 0, 994, 0, 0, 0, 0, 0, 0, 992,
	993, 0, 0, 0, 0, 0, 0, 0, 1023, 0,
	0, 2456, 1021, 2447, 2454, 1012, 1013, 1009, 1010, 1022,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	254, 255, 256, 257, 258, 259, 0, 260, 261, 0,
	0, 0, 0, 0, 1063, 1027, 0, 0, 0, 262,
	263, 1103, 264, 265, 266, 267, 268, 577, 1076, 0,
	269, 1083, 270, 1082, 0, 1093, 271, 272, 273, 274,
	275, 276, 1029, 1062, 996, 277, 1123, 1124, 584, 0,
	278, 279, 1069, 0, 1050, 0, 280, 281, 282, 283,
	284, 285, 286, 0, 0, 288, 289, 290, 287, 291,
	0, 292, 0, 293, 294, 295, 296, 297, 298, 0,
	299, 300, 301, 1104, 302, 303, 1053, 1051, 1052, 1059,
	1055, 1054, 1058, 304, 305, 306, 307, 1086, 2450, 1080,
	1079, 1000, 312, 309, 310, 0, 313, 311, 0, 314,
	315, 316, 0, 0, 317, 1071, 319, 0, 320, 321,
	0, 322, 323, 324, 0, 325, 326, 1006, 327, 328,
	329, 331, 333, 330, 334, 335, 336, 337, 1094, 1095,
	1018, 251, 0, 0, 0, 0, 0, 338, 339, 340,
	1078, 0, 0, 0, 341, 0, 342, 0, 0, 1105,
	343, 344, 1091, 1092, 345, 346, 347, 348, 349, 350,
	351, 352, 0, 353, 1101, 0, 1028, 354, 0, 355,
	356, 357, 2451, 359, 1064, 1065, 1068, 433, 1107, 360,
	361, 0, 362, 363, 364, 365, 0, 0, 0, 252,
	366, 367, 369, 0, 1106, 368, 1073, 1074, 0, 1034,
	0, 370, 371, 1108, 1066, 1109, 372, 373, 374, 1110,
	375, 0, 0, 0, 376, 377, 378, 379, 380, 381,
	0, 382, 384, 383, 0, 385, 1102, 1111, 386, 387,
	1112, 0, 388, 0, 0, 0, 389, 390, 1057, 1056,
	391, 392, 393, 394, 0, 395, 396, 398, 400, 397,
	2452, 401, 2449, 402, 403, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 416, 0, 415, 1113, 417,
	418, 419, 424, 426, 427, 422, 423, 425, 428, 429,
	421, 1114, 420, 997, 253, 1115, 430, 431, 1019, 1067,
	432, 1081, 434, 435, 0, 0, 436, 0, 0, 0,
	438, 439, 440, 0, 0, 441, 442, 606, 1116, 443,
	1117, 1096, 444, 445, 437, 446, 447, 448, 449, 450,
	451, 452, 453, 0, 454, 455, 608, 456, 457, 458,
	609, 459, 460, 461, 1097, 462, 611, 463, 464, 0,
	465, 0, 466, 467, 468, 469, 470, 471, 472, 1077,
	473, 475, 474, 476, 0, 477, 0, 0, 0, 0,
	0, 478, 0, 480, 481, 482, 479, 483, 484, 485,
	486, 0, 487, 488, 489, 1118, 490, 491, 492, 493,
	1007, 494, 0, 495, 496, 502, 503, 497, 498, 504,
	505, 506, 507, 2453, 0, 510, 511, 509, 512, 513,
	514, 1060, 515, 499, 500, 516, 517, 1119, 518, 519,
	520, 521, 522, 523, 1075, 0, 524, 0, 525, 526,
	527, 528, 501, 529, 534, 1122, 530, 531, 532, 533,
	1098, 0, 536, 537, 995, 535, 0, 538, 539, 540,
	541, 542, 543, 332, 544, 0, 545, 1087, 1088, 1089,
	1090, 0, 554, 0, 546, 547, 548, 1099, 549, 1100,
	1017, 550, 551, 552, 553, 0, 555, 556, 0, 1001,
	557, 558, 559, 561, 562, 560, 563, 1061, 564, 0,
	0, 565, 566, 567, 623, 1084, 1121, 0, 569, 568,
	570, 626, 0, 0, 0, 0, 571, 572, 627, 573,
	2448, 575, 998, 0, 0, 0, 0, 0, 0, 994,
	0, 0, 0, 0, 0, 0, 992, 993, 0, 0,
	0, 0, 0, 0, 0, 1023, 0, 0, 2444, 1021,
	2447, 2454, 1012, 1013, 1009, 1010, 1022, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 254, 255, 256,
	257, 258, 259, 0, 260, 261, 0, 0, 0, 0,
	0, 1063, 1027, 0, 0, 0, 262, 263, 1103, 264,
	265, 266, 267, 268, 577, 1076, 0, 269, 1083, 270,
	1082, 0, 1093, 271, 272, 273, 274, 275, 276, 1029,
	1062, 996, 277, 1123, 1124, 584, 0, 278, 279, 1069,
	0, 1050, 0, 280, 281, 282, 283, 284, 285, 286,
	0, 0, 288, 289, 290, 287, 291, 0, 292, 0,
	293, 294, 295, 296, 297, 298, 0, 299, 300, 301,
	1104, 302, 303, 1053, 1051, 1052, 1059, 1055, 1054, 1058,
	304, 305, 306, 307, 1086, 2450, 1080, 1079, 1000, 312,
	309, 310, 0, 313, 311, 0, 314, 315, 316, 0,
	0, 317, 1071, 319, 0, 320, 321, 0, 322, 323,
	324, 0, 325, 326, 1006, 327, 328, 329, 331, 333,
	330, 334, 335, 336, 337, 1094, 1095, 1018, 251, 0,
	0, 0, 0, 0, 338, 339, 340, 1078, 0, 0,
	0, 341, 0, 342, 0, 0, 1105, 343, 344, 1091,
	1092, 345, 346, 347, 348, 349, 350, 351, 352, 0,
	353, 1101, 0, 1028, 354, 0, 355, 356, 357, 2451,
	359, 1064, 1065, 1068, 433, 1107, 360, 361, 0, 362,
	363, 364, 365, 0, 0, 0, 252, 366, 367, 369,
	0, 1106, 368, 1073, 1074, 0, 1034, 0, 370, 371,
	1108, 1066, 1109, 372, 373, 374, 1110, 375, 0, 0,
	0, 376, 377, 378, 379, 380, 381, 0, 382, 384,
	383, 0, 385, 1102, 1111, 386, 387, 1112, 0, 388,
	0, 0, 0, 389, 390, 1057, 1056, 391, 392, 393,
	394, 0, 395, 396, 398, 400, 397, 2452, 401, 2449,
	402, 403, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 416, 0, 415, 1113, 417, 418, 419, 424,
	426, 427, 422, 423, 425, 428, 429, 421, 1114, 420,
	997, 253, 1115, 430, 431, 1019, 1067, 432, 1081, 434,
	435, 0, 0, 436, 0, 0, 0, 438, 439, 440,
	0, 0, 441, 442, 606, 1116, 443, 1117, 1096, 444,
	445, 437, 446, 447, 448, 449, 450, 451, 452, 453,
	0, 454, 455, 608, 456, 457, 458, 609, 459, 460,
	461, 1097, 462, 611, 463, 464, 0, 465, 0, 466,
	467, 468, 469, 470, 471, 472, 1077, 473, 475, 474,
	476, 0, 477, 0, 0, 0, 0, 0, 478, 0,
	480, 481, 482, 479, 483, 484, 485, 486, 0, 487,
	488, 489, 1118, 490, 491, 492, 493, 1007, 494, 0,
	495, 496, 502, 503, 497, 498, 504, 505, 506, 507,
	2453, 0, 510, 511, 509, 512, 513, 514, 1060, 515,
	499, 500, 516, 517, 1119, 518, 519, 520, 521, 522,
	523, 1075, 0, 524, 0, 525, 526, 527, 528, 501,
	529, 534, 1122, 530, 531, 532, 533, 1098, 0, 536,
	537, 995, 535, 0, 538, 539, 540, 541, 542, 543,
	332, 544, 0, 545, 1087, 1088, 1089, 1090, 0, 554,
	0, 546, 547, 548, 1099, 549, 1100, 1017, 550, 551,
	552, 553, 0, 555, 556, 0, 1001, 557, 558, 559,
	561, 562, 560, 563, 1061, 564, 0, 0, 565, 566,
	567, 623, 1084, 1121, 0, 569, 568, 570, 626, 0,
	0, 0, 0, 571, 572, 627, 573, 2448, 575, 998,
	0, 0, 0, 0, 0, 0, 994, 0, 0, 0,
	0, 0, 0, 992, 993, 1039, 1011, 1012, 1013, 1009,
	1010, 1022, 1023, 0, 0, 0, 1021, 0, 0, 0,
	0, 0, 254, 255, 256, 257, 258, 259, 0, 260,
	261, 0, 0, 0, 0, 0, 1063, 1027, 0, 0,
	0, 262, 263, 1103, 264, 265, 266, 267, 268, 577,
	1076, 0, 269, 1083, 270, 1082, 0, 1093, 271, 272,
	273, 274, 275, 276, 1029, 1062, 996, 277, 1123, 1124,
	584, 0, 278, 279, 1069, 0, 1050, 0, 280, 281,
	282, 283, 284, 285, 286, 0, 0, 288, 289, 290,
	287, 291, 0, 292, 0, 293, 294, 295, 296, 297,
	298, 0, 299, 300, 301, 1104, 302, 303, 1053, 1051,
	1052, 1059, 1055, 1054, 1058, 304, 305, 306, 307, 1086,
	308, 1080, 1079, 1000, 312, 309, 310, 0, 313, 311,
	0, 314, 315, 316, 0, 0, 317, 1071, 319, 0,
	320, 321, 0, 322, 323, 324, 0, 325, 326, 1006,
	327, 328, 329, 331, 333, 330, 334, 335, 336, 337,
	1094, 1095, 1018, 251, 0, 0, 0, 0, 0, 338,
	339, 340, 1078, 0, 0, 0, 341, 0, 342, 0,
	0, 1105, 343, 344, 1091, 1092, 345, 346, 347, 348,
	349, 350, 351, 352, 0, 353, 1101, 0, 1028, 354,
	0, 355, 356, 357, 358, 359, 1064, 1065, 1068, 433,
	1107, 360, 361, 0, 362, 363, 364, 365, 0, 0,
	0, 252, 366, 367, 369, 0, 1106, 368, 1073, 1074,
	0, 1034, 0, 370, 371, 1108, 1066, 1109, 372, 373,
	374, 1110, 375, 0, 0, 0, 376, 377, 378, 379,
	380, 381, 0, 382, 384, 383, 0, 385, 1102, 1111,
	386, 387, 1112, 0, 388, 0, 0, 0, 389, 390,
	1057, 1056, 391, 392, 393, 394, 0, 395, 396, 398,
	400, 397, 399, 401, 414, 402, 403, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 416, 0, 415,
	1113, 417, 418, 419, 424, 426, 427, 422, 423, 425,
	428, 429, 421, 1114, 420, 997, 253, 1115, 430, 431,
	1019, 1067, 432, 1081, 434, 435, 0, 0, 436, 0,
	0, 0, 438, 439, 440, 0, 0, 441, 442, 606,
	1116, 443, 1117, 1096, 444, 445, 437, 446, 447, 448,
	449, 450, 451, 452, 453, 0, 454, 455, 608, 456,
	457, 458, 609, 459, 460, 461, 1097, 462, 611, 463,
	464, 0, 465, 0, 466, 467, 468, 469, 470, 471,
	472, 1077, 473, 475, 474, 476, 0, 477, 0, 0,
	0, 0, 0, 478, 0, 480, 481, 482, 479, 483,
	484, 485, 486, 0, 487, 488, 489, 1118, 490, 491,
	492, 493, 1007, 494, 0, 495, 496, 502, 503, 497,
	498, 504, 505, 506, 507, 508, 0, 510, 511, 509,
	512, 513, 514, 1060, 515, 499, 500, 516, 517, 1119,
	518, 519, 520, 521, 522, 523, 1075, 0, 524, 0,
	525, 526, 527, 528, 501, 529, 534, 1122, 530, 531,
	532, 533, 1098, 0, 536, 537, 995, 535, 0, 538,
	539, 540, 541, 542, 543, 332, 544, 0, 545, 1087,
	1088, 1089, 1090, 0, 554, 0, 546, 547, 548, 1099,
	549, 1100, 1017, 550, 551, 552, 553, 0, 555, 556,
	0, 1001, 557, 558, 559, 561, 562, 560, 563, 1061,
	564, 0, 0, 565, 566, 567, 623, 1084, 1121, 0,
	569, 568, 570, 626, 0, 0, 0, 0, 571, 572,
	627, 573, 574, 575, 998, 0, 0, 0, 0, 0,
	0, 994, 0, 0, 0, 0, 0, 0, 992, 993,
	0, 0, 0, 0, 0, 1748, 0, 1023, 0, 0,
	0, 1021, 1039, 1011, 1012, 1013, 1009, 1010, 1022, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 254,
	255, 256, 257, 258, 259, 2238, 260, 261, 0, 0,
	0, 0, 0, 1063, 1027, 0, 0, 0, 262, 263,
	1103, 264, 265, 266, 267, 268, 577, 1076, 0, 269,
	1083, 270, 1082, 0, 1093, 271, 272, 273, 274, 275,
	276, 1029, 1062, 996, 277, 1123, 1124, 584, 0, 278,
	279, 1069, 0, 1050, 0, 280, 281, 282, 283, 284,
	285, 286, 0, 0, 288, 289, 290, 287, 291, 0,
	292, 0, 293, 294, 295, 296, 297, 298, 0, 299,
	300, 301, 1104, 302, 303, 1053, 1051, 1052, 1059, 1055,
	1054, 1058, 304, 305, 306, 307, 1086, 308, 1080, 1079,
	1000, 312, 309, 310, 0, 313, 311, 0, 314, 315,
	316, 0, 0, 317, 1071, 319, 0, 320, 321, 0,
	322, 323, 324, 0, 325, 326, 1006, 327, 328, 329,
	331, 333, 330, 334, 335, 336, 337, 1094, 1095, 1018,
	251, 0, 0, 0, 0, 0, 338, 339, 340, 1078,
	0, 0, 0, 341, 0, 342, 0, 0, 1105, 343,
	344, 1091, 1092, 345, 346, 347, 348, 349, 350, 351,
	352, 0, 353, 1101, 0, 1028, 354, 0, 355, 356,
	357, 358, 359, 1064, 1065, 1068, 433, 1107, 360, 361,
	0, 362, 363, 364, 365, 0, 0, 0, 252, 366,
	367, 369, 0, 1106, 368, 1073, 1074, 0, 1034, 0,
	370, 371, 1108, 1066, 1109, 372, 373, 374, 1110, 375,
	0, 0, 0, 376, 377, 378, 379, 380, 381, 0,
	382, 384, 383, 0, 385, 1102, 1111, 386, 387, 1112,
	0, 388, 0, 0, 0, 389, 390, 1057, 1056, 391,
	392, 393, 394, 0, 395, 396, 398, 400, 397, 399,
	401, 414, 402, 403, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 416, 0, 415, 1113, 417, 418,
	419, 424, 426, 427, 422, 423, 425, 428, 429, 421,
	1114, 420, 997, 253, 1115, 430, 431, 1019, 1067, 432,
	1081, 434, 435, 0, 0, 436, 0, 0, 0, 438,
	439, 440, 0, 0, 441, 442, 606, 1116, 443, 1117,
	1096, 444, 445, 437, 446, 447, 448, 449, 450, 451,
	452, 453, 0, 454, 455, 608, 456, 457, 458, 609,
	459, 460, 461, 1097, 462, 611, 463, 464, 0, 465,
	0, 466, 467, 468, 469, 470, 471, 472, 1077, 473,
	475, 474, 476, 0, 477, 0, 0, 0, 0, 0,
	478, 0, 480, 481, 482, 479, 483, 484, 485, 486,
	0, 487, 488, 489, 1118, 490, 491, 492, 493, 1007,
	494, 0, 495, 496, 502, 503, 497, 498, 504, 505,
	506, 507, 508, 0, 510, 511, 509, 512, 513, 514,
	1060, 515, 499, 500, 516, 517, 1119, 518, 519, 520,
	521, 522, 523, 1075, 0, 524, 0, 525, 526, 527,
	528, 501, 529, 534, 1122, 530, 531, 532, 533, 1098,
	0, 536, 537, 995, 535, 0, 538, 539, 540, 541,
	542, 543, 332, 544, 0, 545, 1087, 1088, 1089, 1090,
	0, 554, 0, 546, 547, 548, 1099, 549, 1100, 1017,
	550, 551, 552, 553, 0, 555, 556, 0, 1001, 557,
	558, 559, 561, 562, 560, 563, 1061, 564, 0, 0,
	565, 566, 567, 623, 1084, 1121, 0, 569, 568, 570,
	626, 0, 0, 0, 0, 571, 572, 627, 573, 574,
	575, 998, 0, 0, 0, 0, 0, 0, 994, 0,
	0, 0, 0, 0, 0, 992, 993, 0, 0, 0,
	0, 0, 0, 0, 1023, 0, 0, 1600, 1021, 1039,
	1011, 1012, 1013, 1009, 1010, 1022, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 254, 255, 256, 257,
	258, 259, 0, 260, 261, 0, 0, 0, 0, 0,
	1063, 1027, 0, 0, 0, 262, 263, 1103, 264, 265,
	266, 267, 268, 577, 1076, 0, 269, 1083, 270, 1082,
	0, 1093, 271, 272, 273, 274, 275, 276, 1029, 1062,
	996, 277, 1123, 1124, 584, 0, 278, 279, 1069, 0,
	1050, 0, 280, 281, 282, 283, 284, 285, 286, 0,
	0, 288, 289, 290, 287, 291, 0, 292, 0, 293,
	294, 295, 296, 297, 298, 0, 299, 300, 301, 1104,
	302, 303, 1053, 1051, 1052, 1059, 1055, 1054, 1058, 304,
	305, 306, 307, 1086, 308, 1080, 1079, 1000, 312, 309,
	310, 0, 313, 311, 0, 314, 315, 316, 0, 0,
	317, 1071, 319, 0, 320, 321, 0, 322, 323, 324,
	0, 325, 326, 1006, 327, 328, 329, 331, 333, 330,
	334, 335, 336, 337, 1094, 1095, 1018, 251, 0, 0,
	0, 0, 0, 338, 339, 340, 1078, 0, 0, 0,
	341, 0, 342, 0, 0, 1105, 343, 344, 1091, 1092,
	345, 346, 347, 348, 349, 350, 351, 352, 0, 353,
	1101, 0, 1028, 354, 0, 355, 356, 357, 358, 359,
	1064, 1065, 1068, 433, 1107, 360, 361, 0, 362, 363,
	364, 365, 0, 0, 0, 252, 366, 367, 369, 0,
	1106, 368, 1073, 1074, 0, 1034, 0, 370, 371, 1108,
	1066, 1109, 372, 373, 374, 1110, 375, 0, 0, 0,
	376, 377, 378, 379, 380, 381, 0, 382, 384, 383,
	0, 385, 1102, 1111, 386, 387, 1112, 0, 388, 0,
	0, 0, 389, 390, 1057, 1056, 391, 392, 393, 394,
	0, 395, 396, 398, 400, 397, 399, 401, 414, 402,
	403, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 416, 0, 415, 1113, 417, 418, 419, 424, 426,
	427, 422, 423, 425, 428, 429, 421, 1114, 420, 997,
	253, 1115, 430, 431, 1019, 1067, 432, 1081, 434, 435,
	0, 0, 436, 0, 0, 0, 438, 439, 440, 0,
	0, 441, 442, 606, 1116, 443, 1117, 1096, 444, 445,
	437, 446, 447, 448, 449, 450, 451, 452, 453, 0,
	454, 455, 608, 456, 457, 458, 609, 459, 460, 461,
	1097, 462, 611, 463, 464, 0, 465, 0, 466, 467,
	468, 469, 470, 471, 472, 1077, 473, 475, 474, 476,
	0, 477, 0, 0, 0, 0, 0, 478, 0, 480,
	481, 482, 479, 483, 484, 485, 486, 0, 487, 488,
	489, 1118, 490, 491, 492, 493, 1007, 494, 0, 495,
	496, 502, 503, 497, 498, 504, 505, 506, 507, 508,
	0, 510, 511, 509, 512, 513, 514, 1060, 515, 499,
	500, 516, 517, 1119, 518, 519, 520, 521, 522, 523,
	1075, 0, 524, 0, 525, 526, 527, 528, 501, 529,
	534, 1122, 530, 531, 532, 533, 1098, 0, 536, 537,
	995, 535, 0, 538, 539, 540, 541, 542, 543, 332,
	544, 0, 545, 1087, 1088, 1089, 1090, 0, 554, 0,
	546, 547, 548, 1099, 549, 1100, 1017, 550, 551, 552,
	553, 0, 555, 556, 0, 1001, 557, 558, 559, 561,
	562, 560, 563, 1061, 564, 0, 0, 565, 566, 567,
	623, 1084, 1121, 0, 569, 568, 570, 626, 0, 0,
	0, 0, 571, 572, 627, 573, 574, 575, 998, 0,
	0, 0, 0, 0, 0, 994, 0, 0, 0, 0,
	0, 0, 992, 993, 0, 0, 0, 0, 0, 0,
	0, 1023, 0, 0, 1535, 1021, 1039, 1011, 1012, 1013,
	1009, 1010, 1022, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 254, 255, 256, 257, 258, 259, 0,
	260, 261, 0, 0, 0, 0, 0, 1063, 1027, 0,
	0, 0, 262, 263, 1103, 264, 265, 266, 267, 268,
	577, 1076, 0, 269, 1083, 270, 1082, 0, 1093, 271,
	272, 273, 274, 275, 276, 1029, 1062, 996, 277, 1123,
	1124, 584, 0, 278, 279, 1069, 0, 1050, 0, 280,
	281, 282, 283, 284, 285, 286, 0, 0, 288, 289,
	290, 287, 291, 0, 292, 0, 293, 294, 295, 296,
	297, 298, 0, 299, 300, 301, 1104, 302, 303, 1053,
	1051, 1052, 1059, 1055, 1054, 1058, 304, 305, 306, 307,
	1086, 308, 1080, 1079, 1000, 312, 309, 310, 0, 313,
	311, 0, 314, 315, 316, 0, 0, 317, 1071, 319,
	0, 320, 321, 0, 322, 323, 324, 0, 325, 326,
	1006, 327, 328, 329, 331, 333, 330, 334, 335, 336,
	337, 1094, 1095, 1018, 251, 0, 0, 0, 0, 0,
	338, 339, 340, 1078, 0, 0, 0, 341, 0, 342,
	0, 0, 1105, 343, 344, 1091, 1092, 345, 346, 347,
	348, 349, 350, 351, 352, 0, 353, 1101, 0, 1028,
	354, 0, 355, 356, 357, 358, 359, 1064, 1065, 1068,
	433, 1107, 360, 361, 0, 362, 363, 364, 365, 0,
	0, 0, 252, 366, 367, 369, 0, 1106, 368, 1073,
	1074, 0, 1034, 0, 370, 371, 1108, 1066, 1109, 372,
	373, 374, 1110, 375, 0, 0, 0, 376, 377, 378,
	379, 380, 381, 0, 382, 384, 383, 0, 385, 1102,
	1111, 386, 387, 1112, 0, 388, 0, 0, 0, 389,
	390, 1057, 1056, 391, 392, 393, 394, 0, 395, 396,
	398, 400, 397, 399, 401, 414, 402, 403, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 416, 0,
	415, 1113, 417, 418, 419, 424, 426, 427, 422, 423,
	425, 428, 429, 421, 1114, 420, 997, 253, 1115, 430,
	431, 1019, 1067, 432, 1081, 434, 435, 0, 0, 436,
	0, 0, 0, 438, 439, 440, 0, 0, 441, 442,
	606, 1116, 443, 1117, 1096, 444, 445, 437, 446, 447,
	448, 449, 450, 451, 452, 453, 0, 454, 455, 608,
	456, 457, 458, 609, 459, 460, 461, 1097, 462, 611,
	463, 464, 0, 465, 0, 466, 467, 468, 469, 470,
	471, 472, 1077, 473, 475, 474, 476, 0, 477, 0,
	0, 0, 0, 0, 478, 0, 480, 481, 482, 479,
	483, 484, 485, 486, 0, 487, 488, 489, 1118, 490,
	491, 492, 493, 1007, 494, 0, 495, 496, 502, 503,
	497, 498, 504, 505, 506, 507, 508, 0, 510, 511,
	509, 512, 513, 514, 1060, 515, 499, 500, 516, 517,
	1119, 518, 519, 520, 521, 522, 523, 1075, 0, 524,
	0, 525, 526, 527, 528, 501, 529, 534, 1122, 530,
	531, 532, 533, 1098, 0, 536, 537, 995, 535, 0,
	538, 539, 540, 541, 542, 543, 332, 544, 0, 545,
	1087, 1088, 1089, 1090, 0, 554, 0, 546, 547, 548,
	1099, 549, 1100, 1017, 550, 551, 552, 553, 0, 555,
	556, 0, 1001, 557, 558, 559, 561, 562, 560, 563,
	1061, 564, 0, 0, 565, 566, 567, 623, 1084, 1121,
	0, 569, 568, 570, 626, 0, 0, 0, 0, 571,
	572, 627, 573, 574, 575, 998, 0, 0, 0, 0,
	0, 0, 994, 0, 0, 0, 0, 0, 0, 992,
	993, 0, 0, 0, 0, 0, 0, 0, 1023, 0,
	0, 1530, 1021, 1039, 1011, 1012, 1013, 1009, 1010, 1022,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	254, 255, 256, 257, 258, 259, 0, 260, 261, 0,
	0, 0, 0, 0, 1063, 1027, 0, 0, 0, 262,
	263, 1103, 264, 265, 266, 267, 268, 577, 1076, 0,
	269, 1083, 270, 1082, 0, 1093, 271, 272, 273, 274,
	275, 276, 1029, 1062, 996, 277, 1123, 1124, 584, 0,
	278, 279, 1069, 0, 1050, 0, 280, 281, 282, 283,
	284, 285, 286, 0, 0, 288, 289, 290, 287, 291,
	0, 292, 0, 293, 294, 295, 296, 297, 298, 0,
	299, 300, 301, 1104, 302, 303, 1053, 1051, 1052, 1059,
	1055, 1054, 1058, 304, 305, 306, 307, 1086, 308, 1080,
	1079, 1000, 312, 309, 310, 0, 313, 311, 0, 314,
	315, 316, 0, 0, 317, 1071, 319, 0, 320, 321,
	0, 322, 323, 324, 0, 325, 326, 1006, 327, 328,
	329, 331, 333, 330, 334, 335, 336, 337, 1094, 1095,
	1018, 251, 0, 0, 0, 0, 0, 338, 339, 340,
	1078, 0, 0, 0, 341, 0, 342, 0, 0, 1105,
	343, 344, 1091, 1092, 345, 346, 347, 348, 349, 350,
	351, 352, 0, 353, 1101, 0, 1028, 354, 0, 355,
	356, 357, 358, 359, 1064, 1065, 1068, 433, 1107, 360,
	361, 0, 362, 363, 364, 365, 0, 0, 0, 252,
	366, 367, 369, 0, 1106, 368, 1073, 1074, 0, 1034,
	0, 370, 371, 1108, 1066, 1109, 372, 373, 374, 1110,
	375, 0, 0, 0, 376, 377, 378, 379, 380, 381,
	0, 382, 384, 383, 0, 385, 1102, 1111, 386, 387,
	1112, 0, 388, 0, 0, 0, 389, 390, 1057, 1056,
	391, 392, 393, 394, 0, 395, 396, 398, 400, 397,
	399, 401, 414, 402, 403, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 416, 0, 415, 1113, 417,
	418, 419, 424, 426, 427, 422, 423, 425, 428, 429,
	421, 1114, 420, 997, 253, 1115, 430, 431, 1019, 1067,
	432, 1081, 434, 435, 0, 0, 436, 0, 0, 0,
	438, 439, 440, 0, 0, 441, 442, 606, 1116, 443,
	1117, 1096, 444, 445, 437, 446, 447, 448, 449, 450,
	451, 452, 453, 0, 454, 455, 608, 456, 457, 458,
	609, 459, 460, 461, 1097, 462, 611, 463, 464, 0,
	465, 0, 466, 467, 468, 469, 470, 471, 472, 1077,
	473, 475, 474, 476, 0, 477, 0, 0, 0, 0,
	0, 478, 0, 480, 481, 482, 479, 483, 484, 485,
	486, 0, 487, 488, 489, 1118, 490, 491, 492, 493,
	1007, 494, 0, 495, 496, 502, 503, 497, 498, 504,
	505, 506, 507, 508, 0, 510, 511, 509, 512, 513,
	514, 1060, 515, 499, 500, 516, 517, 1119, 518, 519,
	520, 521, 522, 523, 1075, 0, 524, 0, 525, 526,
	527, 528, 501, 529, 534, 1122, 530, 531, 532, 533,
	1098, 0, 536, 537, 995, 535, 0, 538, 539, 540,
	541, 542, 543, 332, 544, 0, 545, 1087, 1088, 1089,
	1090, 0, 554, 0, 546, 547, 548, 1099, 549, 1100,
	1017, 550, 551, 552, 553, 0, 555, 556, 0, 1001,
	557, 558, 559, 561, 562, 560, 563, 1061, 564, 0,
	0, 565, 566, 567, 623, 1084, 1121, 0, 569, 568,
	570, 626, 0, 0, 0, 0, 571, 572, 627, 573,
	574, 575, 998, 0, 0, 0, 0, 0, 0, 994,
	0, 0, 0, 0, 0, 0, 992, 993, 0, 0,
	0, 0, 0, 0, 0, 1023, 0, 0, 1521, 1021,
	1039, 1011, 1012, 1013, 1009, 1010, 1022, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 254, 255, 256,
	257, 258, 259, 0, 260, 261, 0, 0, 0, 0,
	0, 1063, 1027, 0, 0, 0, 262, 263, 1103, 264,
	265, 266, 267, 268, 577, 1076, 0, 269, 1083, 270,
	1082, 0, 1093, 271, 272, 273, 274, 275, 276, 1029,
	1062, 996, 277, 1123, 1124, 584, 0, 278, 279, 1069,
	0, 1050, 0, 280, 281, 282, 283, 284, 285, 286,
	0, 0, 288, 289, 290, 287, 291, 0, 292, 0,
	293, 294, 295, 296, 297, 298, 0, 299, 300, 301,
	1104, 302, 303, 1053, 1051, 1052, 1059, 1055, 1054, 1058,
	304, 305, 306, 307, 1086, 308, 1080, 1079, 1000, 312,
	309, 310, 0, 313, 311, 0, 314, 315, 316, 0,
	0, 317, 1071, 319, 0, 320, 321, 0, 322, 323,
	324, 0, 325, 326, 1006, 327, 328, 329, 331, 333,
	330, 334, 335, 336, 337, 1094, 1095, 1018, 251, 0,
	0, 0, 0, 0, 338, 339, 340, 1078, 0, 0,
	0, 341, 0, 342, 0, 0, 1105, 343, 344, 1091,
	1092, 345, 346, 347, 348, 349, 350, 351, 352, 0,
	353, 1101, 0, 1028, 354, 0, 355, 356, 357, 358,
	359, 1064, 1065, 1068, 433, 1107, 360, 361, 0, 362,
	363, 364, 365, 0, 0, 0, 252, 366, 367, 369,
	0, 1106, 368, 1073, 1074, 0, 1034, 0, 370, 371,
	1108, 1066, 1109, 372, 373, 374, 1110, 375, 0, 0,
	0, 376, 377, 378, 379, 380, 381, 0, 382, 384,
	383, 0, 385, 1102, 1111, 386, 387, 1112, 0, 388,
	0, 0, 0, 389, 390, 1057, 1056, 391, 392, 393,
	394, 0, 395, 396, 398, 400, 397, 399, 401, 414,
	402, 403, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 416, 0, 415, 1113, 417, 418, 419, 424,
	426, 427, 422, 423, 425, 428, 429, 421, 1114, 420,
	997, 253, 1115, 430, 431, 1019, 1067, 432, 1081, 434,
	435, 0, 0, 436, 0, 0, 0, 438, 439, 440,
	0, 0, 441, 442, 606, 1116, 443, 1117, 1096, 444,
	445, 437, 446, 447, 448, 449, 450, 451, 452, 453,
	0, 454, 455, 608, 456, 457, 458, 609, 459, 460,
	461, 1097, 462, 611, 463, 464, 0, 465, 0, 466,
	467, 468, 469, 470, 471, 472, 1077, 473, 475, 474,
	476, 0, 477, 0, 0, 0, 0, 0, 478, 0,
	480, 481, 482, 479, 483, 484, 485, 486, 0, 487,
	488, 489, 1118, 490, 491, 492, 493, 1007, 494, 0,
	495, 496, 502, 503, 497, 498, 504, 505, 506, 507,
	508, 0, 510, 511, 509, 512, 513, 514, 1060, 515,
	499, 500, 516, 517, 1119, 518, 519, 520, 521, 522,
	523, 1075, 0, 524, 0, 525, 526, 527, 528, 501,
	529, 534, 1122, 530, 531, 532, 533, 1098, 0, 536,
	537, 995, 535, 0, 538, 539, 540, 541, 542, 543,
	332, 544, 0, 545, 1087, 1088, 1089, 1090, 0, 554,
	0, 546, 547, 548, 1099, 549, 1100, 1017, 550, 551,
	552, 553, 0, 555, 556, 0, 1001, 557, 558, 559,
	561, 562, 560, 563, 1061, 564, 0, 0, 565, 566,
	567, 623, 1084, 1121, 0, 569, 568, 570, 626, 0,
	0, 0, 0, 571, 572, 627, 573, 574, 575, 998,
	0, 0, 0, 0, 0, 0, 994, 0, 0, 0,
	0, 0, 0, 992, 993, 0, 0, 0, 0, 0,
	0, 0, 1023, 0, 0, 1516, 1021, 1039, 1011, 1012,
	1013, 1009, 1010, 1022, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 254, 255, 256, 257, 258, 259,
	0, 260, 261, 0, 0, 0, 0, 0, 1063, 1027,
	0, 0, 0, 262, 263, 1103, 264, 265, 266, 267,
	268, 577, 1076, 0, 269, 1083, 270, 1082, 0, 1093,
	271, 272, 273, 274, 275, 276, 1029, 1062, 996, 277,
	1123, 1124, 584, 0, 278, 279, 1069, 0, 1050, 0,
	280, 281, 282, 283, 284, 285, 286, 0, 0, 288,
	289, 290, 287, 291, 0, 292, 0, 293, 294, 295,
	296, 297, 298, 0, 299, 300, 301, 1104, 302, 303,
	1053, 1051, 1052, 1059, 1055, 1054, 1058, 304, 305, 306,
	307, 1086, 308, 1080, 1079, 1000, 312, 309, 310, 0,
	313, 311, 0, 314, 315, 316, 0, 0, 317, 1071,
	319, 0, 320, 321, 0, 322, 323, 324, 0, 325,
	326, 1006, 327, 328, 329, 331, 333, 330, 334, 335,
	336, 337, 1094, 1095, 1018, 251, 0, 0, 0, 0,
	0, 338, 339, 340, 1078, 0, 0, 0, 341, 0,
	342, 0, 0, 1105, 343, 344, 1091, 1092, 345, 346,
	347, 348, 349, 350, 351, 352, 0, 353, 1101, 0,
	1028, 354, 0, 355, 356, 357, 358, 359, 1064, 1065,
	1068, 433, 1107, 360, 361, 0, 362, 363, 364, 365,
	0, 0, 0, 252, 366, 367, 369, 0, 1106, 368,
	1073, 1074, 0, 1034, 0, 370, 371, 1108, 1066, 1109,
	372, 373, 374, 1110, 375, 0, 0, 0, 376, 377,
	378, 379, 380, 381, 0, 382, 384, 383, 0, 385,
	1102, 1111, 386, 387, 1112, 0, 388, 0, 0, 0,
	389, 390, 1057, 1056, 391, 392, 393, 394, 0, 395,
	396, 398, 400, 397, 399, 401, 414, 402, 403, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 416,
	0, 415, 1113, 417, 418, 419, 424, 426, 427, 422,
	423, 425, 428, 429, 421, 1114, 420, 997, 253, 1115,
	430, 431, 1019, 1067, 432, 1081, 434, 435, 0, 0,
	436, 0, 0, 0, 438, 439, 440, 0, 0, 441,
	442, 606, 1116, 443, 1117, 1096, 444, 445, 437, 446,
	447, 448, 449, 450, 451, 452, 453, 0, 454, 455,
	608, 456, 457, 458, 609, 459, 460, 461, 1097, 462,
	611, 463, 464, 0, 465, 0, 466, 467, 468, 469,
	470, 471, 472, 1077, 473, 475, 474, 476, 0, 477,
	0, 0, 0, 0, 0, 478, 0, 480, 481, 482,
	479, 483, 484, 485, 486, 0, 487, 488, 489, 1118,
	490, 491, 492, 493, 1007, 494, 0, 495, 496, 502,
	503, 497, 498, 504, 505, 506, 507, 508, 0, 510,
	511, 509, 512, 513, 514, 1060, 515, 499, 500, 516,
	517, 1119, 518, 519, 520, 521, 522, 523, 1075, 0,
	524, 0, 525, 526, 527, 528, 501, 529, 534, 1122,
	530, 531, 532, 533, 1098, 0, 536, 537, 995, 535,
	0, 538, 539, 540, 541, 542, 543, 332, 544, 0,
	545, 1087, 1088, 1089, 1090, 0, 554, 0, 546, 547,
	548, 1099, 549, 1100, 1017, 550, 551, 552, 553, 0,
	555, 556, 0, 1001, 557, 558, 559, 561, 562, 560,
	563, 1061, 564, 0, 0, 565, 566, 567, 623, 1084,
	1121, 0, 569, 568, 570, 626, 0, 0, 0, 0,
	571, 572, 627, 573, 574, 575, 998, 0, 0, 0,
	0, 0, 0, 994, 0, 0, 0, 0, 0, 0,
	992, 993, 0, 0, 0, 0, 0, 0, 0, 1023,
	0, 0, 1498, 1021, 1039, 1011, 1012, 1013, 1009, 1010,
	1022, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 254, 255, 256, 257, 258, 259, 0, 260, 261,
	0, 0, 0, 0, 0, 1063, 1027, 0, 0, 0,
	262, 263, 1103, 264, 265, 266, 267, 268, 577, 1076,
	0, 269, 1083, 270, 1082, 0, 1093, 271, 272, 273,
	274, 275, 276, 1029, 1062, 996, 277, 1123, 1124, 584,
	0, 278, 279, 1069, 0, 1050, 0, 280, 281, 282,
	283, 284, 285, 286, 0, 0, 288, 289, 290, 287,
	291, 0, 292, 0, 293, 294, 295, 296, 297, 298,
	0, 299, 300, 301, 1104, 302, 303, 1053, 1051, 1052,
	1059, 1055, 1054, 1058, 304, 305, 306, 307, 1086, 308,
	1080, 1079, 1000, 312, 309, 310, 0, 313, 311, 0,
	314, 315, 316, 0, 0, 317, 1071, 319, 0, 320,
	321, 0, 322, 323, 324, 0, 325, 326, 1006, 327,
	328, 329, 331, 333, 330, 334, 335, 336, 337, 1094,
	1095, 1018, 251, 0, 0, 0, 0, 0, 338, 339,
	340, 1078, 0, 0, 0, 341, 0, 342, 0, 0,
	1105, 343, 344, 1091, 1092, 345, 346, 347, 348, 349,
	350, 351, 352, 0, 353, 1101, 0, 1028, 354, 0,
	355, 356, 357, 358, 359, 1064, 1065, 1068, 433, 1107,
	360, 361, 0, 362, 363, 364, 365, 0, 0, 0,
	252, 366, 367, 369, 0, 1106, 368, 1073, 1074, 0,
	1034, 0, 370, 371, 1108, 1066, 1109, 372, 373, 374,
	1110, 375, 0, 0, 0, 376, 377, 378, 379, 380,
	381, 0, 382, 384, 383, 0, 385, 1102, 1111, 386,
	387, 1112, 0, 388, 0, 0, 0, 389, 390, 1057,
	1056, 391, 392, 393, 394, 0, 395, 396, 398, 400,
	397, 399, 401, 414, 402, 403, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 416, 0, 415, 1113,
	417, 418, 419, 424, 426, 427, 422, 423, 425, 428,
	429, 421, 1114, 420, 997, 253, 1115, 430, 431, 1019,
	1067, 432, 1081, 434, 435, 0, 0, 436, 0, 0,
	0, 438, 439, 440, 0, 0, 441, 442, 606, 1116,
	443, 1117, 1096, 444, 445, 437, 446, 447, 448, 449,
	450, 451, 452, 453, 0, 454, 455, 608, 456, 457,
	458, 609, 459, 460, 461, 1097, 462, 611, 463, 464,
	0, 465, 0, 466, 467, 468, 469, 470, 471, 472,
	1077, 473, 475, 474, 476, 0, 477, 0, 0, 0,
	0, 0, 478, 0, 480, 481, 482, 479, 483, 484,
	485, 486, 0, 487, 488, 489, 1118, 490, 491, 492,
	493, 1007, 494, 0, 495, 496, 502, 503, 497, 498,
	504, 505, 506, 507, 508, 0, 510, 511, 509, 512,
	513, 514, 1060, 515, 499, 500, 516, 517, 1119, 518,
	519, 520, 521, 522, 523, 1075, 0, 524, 0, 525,
	526, 527, 528, 501, 529, 534, 1122, 530, 531, 532,
	533, 1098, 0, 536, 537, 995, 535, 0, 538, 539,
	540, 541, 542, 543, 332, 544, 0, 545, 1087, 1088,
	1089, 1090, 0, 554, 0, 546, 547, 548, 1099, 549,
	1100, 1017, 550, 551, 552, 553, 0, 555, 556, 0,
	1001, 557, 558, 559, 561, 562, 560, 563, 1061, 564,
	0, 0, 565, 566, 567, 623, 1084, 1121, 0, 569,
	568, 570, 626, 0, 0, 0, 0, 571, 572, 627,
	573, 574, 575, 998, 0, 0, 0, 0, 0, 0,
	994, 0, 0, 0, 0, 0, 0, 992, 993, 0,
	0, 0, 0, 0, 0, 0, 1023, 0, 0, 1380,
	1021, 1039, 1011, 1012, 1013, 1009, 1010, 1022, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 254, 255,
	256, 257, 258, 259, 0, 260, 261, 0, 0, 0,
	0, 0, 1063, 1027, 0, 0, 0, 262, 263, 1103,
	264, 265, 266, 267, 268, 577, 1076, 0, 269, 1083,
	270, 1082, 0, 1093, 271, 272, 273, 274, 275, 276,
	1029, 1062, 996, 277, 1123, 1124, 584, 0, 278, 279,
	1069, 0, 1050, 0, 280, 281, 282, 283, 284, 285,
	286, 0, 0, 288, 289, 290, 287, 291, 0, 292,
	0, 293, 294, 295, 296, 297, 298, 0, 299, 300,
	301, 1104, 302, 303, 1053, 1051, 1052, 1059, 1055, 1054,
	1058, 304, 305, 306, 307, 1086, 308, 1080, 1079, 1000,
	312, 309, 310, 0, 313, 311, 0, 314, 315, 316,
	0, 0, 317, 1071, 319, 0, 320, 321, 0, 322,
	323, 324, 0, 325, 326, 1006, 327, 328, 329, 331,
	333, 330, 334, 335, 336, 337, 1094, 1095, 1018, 251,
	0, 0, 0, 0, 0, 338, 339, 340, 1078, 0,
	0, 0, 341, 0, 342, 0, 0, 1105, 343, 344,
	1091, 1092, 345, 346, 347, 348, 349, 350, 351, 352,
	0, 353, 1101, 0, 1028, 354, 0, 355, 356, 357,
	358, 359, 1379, 1065, 1068, 433, 1107, 360, 361, 0,
	362, 363, 364, 365, 0, 0, 0, 252, 366, 367,
	369, 0, 1106, 368, 1073, 1074, 0, 1034, 0, 370,
	371, 1108, 1066, 1109, 372, 373, 374, 1110, 375, 0,
	0, 0, 376, 377, 378, 379, 380, 381, 0, 382,
	384, 383, 0, 385, 1102, 1111, 386, 387, 1112, 0,
	388, 0, 0, 0, 389, 390, 1057, 1056, 391, 392,
	393, 394, 0, 395, 396, 398, 400, 397, 399, 401,
	414, 402, 403, 404, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 416, 0, 415, 1113, 417, 418, 419,
	424, 426, 427, 422, 423, 425, 428, 429, 421, 1114,
	420, 997, 253, 1115, 430, 431, 1019, 1067, 432, 1081,
	434, 435, 0, 0, 436, 0, 0, 0, 438, 439,
	440, 0, 0, 441, 442, 606, 1116, 443, 1117, 1096,
	444, 445, 437, 446, 447, 448, 449, 450, 451, 452,
	453, 0, 454, 455, 608, 456, 457, 458, 609, 459,
	460, 461, 1097, 462, 611, 463, 464, 0, 465, 0,
	466, 467, 468, 469, 470, 471, 472, 1077, 473, 475,
	474, 476, 0, 477, 0, 0, 0, 0, 0, 478,
	0, 480, 481, 482, 479, 483, 484, 485, 486, 0,
	487, 488, 489, 1118, 490, 491, 492, 493, 1007, 494,
	0, 495, 496, 502, 503, 497, 498, 504, 505, 506,
	507, 508, 0, 510, 511, 509, 512, 513, 514, 1060,
	515, 499, 500, 516, 517, 1119, 518, 519, 520, 521,
	522, 523, 1075, 0, 524, 0, 525, 526, 527, 528,
	501, 529, 534, 1122, 530, 531, 532, 533, 1098, 0,
	536, 537, 995, 535, 0, 538, 539, 540, 541, 542,
	543, 332, 544, 0, 545, 1087, 1088, 1089, 1090, 0,
	554, 0, 546, 547, 548, 1099, 549, 1100, 1017, 550,
	551, 552, 553, 0, 555, 556, 0, 1001, 557, 558,
	559, 561, 562, 560, 563, 1061, 564, 0, 0, 565,
	566, 567, 623, 1084, 1121, 0, 569, 568, 570, 626,
	0, 0, 0, 0, 571, 572, 627, 573, 574, 575,
	998, 0, 0, 0, 0, 0, 0, 994, 0, 0,
	0, 0, 0, 0, 992, 993, 0, 0, 0, 0,
	0, 0, 0, 1023, 0, 0, 1374, 1021, 1039, 1011,
	1012, 1013, 1009, 1010, 1022, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 254, 255, 256, 257, 258,
	259, 0, 260, 261, 0, 0, 0, 0, 0, 1063,
	1027, 0, 0, 0, 262, 263, 1103, 264, 265, 266,
	267, 268, 577, 1076, 0, 269, 1083, 270, 1082, 0,
	1093, 271, 272, 273, 274, 275, 276, 1029, 1062, 996,
	277, 1123, 1124, 584, 0, 278, 279, 1069, 0, 1050,
	0, 280, 281, 282, 283, 284, 285, 286, 0, 0,
	288, 289, 290, 287, 291, 0, 292, 0, 293, 294,
	295, 296, 297, 298, 0, 299, 300, 301, 1104, 302,
	303, 1053, 1051, 1052, 1059, 1055, 1054, 1058, 304, 305,
	306, 307, 1086, 308, 1080, 1079, 1000, 312, 309, 310,
	0, 313, 311, 0, 314, 315, 316, 0, 0, 317,
	1071, 319, 0, 320, 321, 0, 322, 323, 324, 0,
	325, 326, 1006, 327, 328, 329, 331, 333, 330, 334,
	335, 336, 337, 1094, 1095, 1018, 251, 0, 0, 0,
	0, 0, 338, 339, 340, 1078, 0, 0, 0, 341,
	0, 342, 0, 0, 1105, 343, 344, 1091, 1092, 345,
	346, 347, 348, 349, 350, 351, 352, 0, 353, 1101,
	0, 1028, 354, 0, 355, 356, 357, 358, 359, 1373,
	1065, 1068, 433, 1107, 360, 361, 0, 362, 363, 364,
	365, 0, 0, 0, 252, 366, 367, 369, 0, 1106,
	368, 1073, 1074, 0, 1034, 0, 370, 371, 1108, 1066,
	1109, 372, 373, 374, 1110, 375, 0, 0, 0, 376,
	377, 378, 379, 380, 381, 0, 382, 384, 383, 0,
	385, 1102, 1111, 386, 387, 1112, 0, 388, 0, 0,
	0, 389, 390, 1057, 1056, 391, 392, 393, 394, 0,
	395, 396, 398, 400, 397, 399, 401, 414, 402, 403,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	416, 0, 415, 1113, 417, 418, 419, 424, 426, 427,
	422, 423, 425, 428, 429, 421, 1114, 420, 997, 253,
	1115, 430, 431, 1019, 1067, 432, 1081, 434, 435, 0,
	0, 436, 0, 0, 0, 438, 439, 440, 0, 0,
	441, 442, 606, 1116, 443, 1117, 1096, 444, 445, 437,
	446, 447, 448, 449, 450, 451, 452, 453, 0, 454,
	455, 608, 456, 457, 458, 609, 459, 460, 461, 1097,
	462, 611, 463, 464, 0, 465, 0, 466, 467, 468,
	469, 470, 471, 472, 1077, 473, 475, 474, 476, 0,
	477, 0, 0, 0, 0, 0, 478, 0, 480, 481,
	482, 479, 483, 484, 485, 486, 0, 487, 488, 489,
	1118, 490, 491, 492, 493, 1007, 494, 0, 495, 496,
	502, 503, 497, 498, 504, 505, 506, 507, 508, 0,
	510, 511, 509, 512, 513, 514, 1060, 515, 499, 500,
	516, 517, 1119, 518, 519, 520, 521, 522, 523, 1075,
	0, 524, 0, 525, 526, 527, 528, 501, 529, 534,
	1122, 530, 531, 532, 533, 1098, 0, 536, 537, 995,
	535, 0, 538, 539, 540, 541, 542, 543, 332, 544,
	0, 545, 1087, 1088, 1089, 1090, 0, 554, 0, 546,
	547, 548, 1099, 549, 1100, 1017, 550, 551, 552, 553,
	0, 555, 556, 0, 1001, 557, 558, 559, 561, 562,
	560, 563, 1061, 564, 0, 0, 565, 566, 567, 623,
	1084, 1121, 0, 569, 568, 570, 626, 0, 0, 0,
	0, 571, 572, 627, 573, 574, 575, 998, 0, 0,
	0, 0, 0, 0, 994, 0, 0, 0, 0, 0,
	0, 992, 993, 0, 0, 0, 0, 0, 0, 0,
	1023, 0, 0, 1367, 1021, 1039, 1011, 1012, 1013, 1009,
	1010, 1022, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 254, 255, 256, 257, 258, 259, 0, 260,
	261, 0, 0, 0, 0, 0, 1063, 1027, 0, 0,
	0, 262, 263, 1103, 264, 265, 266, 267, 268, 577,
	1076, 0, 269, 1083, 270, 1082, 0, 1093, 271, 272,
	273, 274, 275, 276, 1029, 1062, 996, 277, 1123, 1124,
	584, 0, 278, 279, 1069, 0, 1050, 0, 280, 281,
	282, 283, 284, 285, 286, 0, 0, 288, 289, 290,
	287, 291, 0, 292, 0, 293, 294, 295, 296, 297,
	298, 0, 299, 300, 301, 1104, 302, 303, 1053, 1051,
	1052, 1059, 1055, 1054, 1058, 304, 305, 306, 307, 1086,
	308, 1080, 1079, 1000, 312, 309, 310, 0, 313, 311,
	0, 314, 315, 316, 0, 0, 317, 1071, 319, 0,
	320, 321, 0, 322, 323, 324, 0, 325, 326, 1006,
	327, 328, 329, 331, 333, 330, 334, 335, 336, 337,
	1094, 1095, 1018, 251, 0, 0, 0, 0, 0, 338,
	339, 340, 1078, 0, 0, 0, 341, 0, 342, 0,
	0, 1105, 343, 344, 1091, 1092, 345, 346, 347, 348,
	349, 350, 351, 352, 0, 353, 1101, 0, 1028, 354,
	0, 355, 356, 357, 358, 359, 1064, 1065, 1068, 433,
	1107, 360, 361, 0, 362, 363, 364, 365, 0, 0,
	0, 252, 366, 367, 369, 0, 1106, 368, 1073, 1074,
	0, 1034, 0, 370, 371, 1108, 1066, 1109, 372, 373,
	374, 1110, 375, 0, 0, 0, 376, 377, 378, 379,
	380, 381, 0, 382, 384, 383, 0, 385, 1102, 1111,
	386, 387, 1112, 0, 388, 0, 0, 0, 389, 390,
	1057, 1056, 391, 392, 393, 394, 0, 395, 396, 398,
	400, 397, 399, 401, 414, 402, 403, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 416, 0, 415,
	1113, 417, 418, 419, 424, 426, 427, 422, 423, 425,
	428, 429, 421, 1114, 420, 997, 253, 1115, 430, 431,
	1019, 1067, 432, 1081, 434, 435, 0, 0, 436, 0,
	0, 0, 438, 439, 440, 0, 0, 441, 442, 606,
	1116, 443, 1117, 1096, 444, 445, 437, 446, 447, 448,
	449, 450, 451, 452, 453, 0, 454, 455, 608, 456,
	457, 458, 609, 459, 460, 461, 1097, 462, 611, 463,
	464, 0, 465, 0, 466, 467, 468, 469, 470, 471,
	472, 1077, 473, 475, 474, 476, 0, 477, 0, 0,
	0, 0, 0, 478, 0, 480, 481, 482, 479, 483,
	484, 485, 486, 0, 487, 488, 489, 1118, 490, 491,
	492, 493, 1007, 494, 0, 495, 496, 502, 503, 497,
	498, 504, 505, 506, 507, 508, 0, 510, 511, 509,
	512, 513, 514, 1060, 515, 499, 500, 516, 517, 1119,
	518, 519, 520, 521, 522, 523, 1075, 0, 524, 0,
	525, 526, 527, 528, 501, 529, 534, 1122, 530, 531,
	532, 533, 1098, 0, 536, 537, 995, 535, 0, 538,
	539, 540, 541, 542, 543, 332, 544, 0, 545, 1087,
	1088, 1089, 1090, 0, 554, 0, 546, 547, 548, 1099,
	549, 1100, 1017, 550, 551, 552, 553, 0, 555, 556,
	0, 1001, 557, 558, 559, 561, 562, 560, 563, 1061,
	564, 0, 0, 565, 566, 567, 623, 1084, 1121, 0,
	569, 568, 570, 626, 0, 0, 0, 0, 571, 572,
	627, 573, 574, 575, 998, 0, 0, 0, 0, 0,
	0, 994, 0, 0, 0, 0, 0, 0, 992, 993,
	1039, 1011, 1012, 1013, 1009, 1010, 1022, 1023, 0, 0,
	0, 1021, 0, 0, 0, 0, 0, 254, 255, 256,
	257, 258, 259, 0, 260, 261, 0, 0, 0, 0,
	0, 1063, 1027, 0, 0, 0, 262, 263, 1103, 264,
	265, 266, 267, 268, 577, 1076, 0, 269, 1083, 270,
	1082, 0, 1093, 271, 272, 273, 274, 275, 276, 1029,
	1062, 996, 277, 1123, 1124, 584, 0, 278, 279, 1069,
	0, 1050, 0, 280, 281, 282, 283, 284, 285, 286,
	0, 0, 288, 289, 290, 287, 291, 0, 292, 0,
	293, 294, 295, 296, 297, 298, 0, 299, 300, 301,
	1104, 302, 303, 1053, 1051, 1052, 1059, 1055, 1054, 1058,
	304, 305, 306, 307, 1086, 308, 1080, 1079, 1000, 312,
	309, 310, 0, 313, 311, 0, 314, 315, 316, 0,
	0, 317, 1071, 319, 0, 320, 321, 0, 322, 323,
	324, 0, 325, 326, 1006, 327, 328, 329, 331, 333,
	330, 334, 335, 336, 337, 1094, 1095, 1018, 251, 0,
	0, 0, 0, 0, 338, 339, 340, 1078, 0, 0,
	0, 341, 0, 342, 0, 0, 1105, 343, 344, 1091,
	1092, 345, 346, 347, 348, 349, 350, 351, 352, 0,
	353, 1101, 0, 1028, 354, 0, 355, 356, 357, 358,
	359, 1064, 1065, 1068, 433, 1107, 360, 361, 0, 362,
	363, 364, 365, 0, 0, 0, 252, 366, 367, 369,
	0, 1106, 368, 1073, 1074, 0, 1034, 0, 370, 371,
	1108, 1066, 1109, 372, 373, 374, 1110, 375, 0, 0,
	0, 376, 377, 378, 379, 380, 381, 0, 382, 384,
	383, 0, 385, 1102, 1111, 386, 387, 1112, 0, 388,
	0, 0, 0, 389, 390, 1057, 1056, 391, 392, 393,
	394, 0, 395, 396, 398, 400, 397, 399, 401, 414,
	402, 403, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 416, 0, 415, 1113, 417, 418, 419, 424,
	426, 427, 422, 423, 425, 428, 429, 421, 1114, 420,
	997, 253, 1115, 430, 431, 1019, 1067, 432, 1081, 434,
	435, 0, 0, 436, 0, 0, 0, 438, 439, 440,
	0, 0, 441, 442, 606, 1116, 443, 1117, 1096, 444,
	445, 437, 446, 447, 448, 449, 450, 451, 452, 453,
	0, 454, 455, 608, 456, 457, 458, 609, 459, 460,
	461, 1097, 462, 611, 463, 464, 0, 465, 0, 466,
	467, 468, 469, 470, 471, 472, 1077, 473, 475, 474,
	476, 0, 477, 0, 0, 0, 0, 0, 478, 0,
	480, 481, 482, 479, 483, 484, 485, 486, 0, 487,
	488, 489, 1118, 490, 491, 492, 493, 1007, 494, 0,
	495, 496, 502, 503, 497, 498, 504, 505, 506, 507,
	508, 0, 510, 511, 509, 512, 513, 514, 1060, 515,
	499, 500, 516, 517, 1119, 518, 519, 520, 521, 522,
	523, 1075, 0, 524, 0, 525, 526, 527, 528, 501,
	529, 534, 1122, 530, 531, 532, 533, 1098, 0, 536,
	537, 995, 535, 0, 538, 539, 540, 541, 542, 543,
	332, 544, 0, 545, 1087, 1088, 1089, 1090, 0, 554,
	0, 546, 547, 548, 1099, 549, 1100, 1017, 550, 551,
	552, 553, 0, 555, 556, 0, 1001, 557, 558, 559,
	561, 562, 560, 563, 1061, 564, 0, 0, 565, 566,
	567, 623, 1084, 1121, 0, 569, 568, 570, 626, 0,
	0, 0, 0, 571, 572, 627, 573, 574, 575, 998,
	0, 0, 0, 0, 0, 0, 994, 0, 0, 0,
	0, 0, 0, 992, 993, 1039, 1011, 1012, 1013, 1009,
	1010, 1022, 1023, 0, 0, 0, 1021, 0, 0, 0,
	0, 0, 254, 255, 256, 257, 258, 259, 0, 260,
	261, 0, 0, 0, 0, 0, 1063, 1027, 0, 0,
	0, 262, 263, 1103, 264, 265, 266, 267, 268, 577,
	1076, 0, 269, 1083, 270, 1082, 0, 1093, 271, 272,
	273, 274, 275, 276, 1029, 1062, 996, 277, 1123, 1124,
	584, 0, 278, 279, 1069, 0, 1050, 0, 280, 281,
	282, 283, 284, 285, 286, 0, 0, 288, 289, 290,
	287, 291, 0, 292, 0, 293, 294, 295, 296, 297,
	298, 0, 299, 300, 301, 1104, 302, 4233, 1053, 1051,
	1052, 1059, 1055, 1054, 1058, 304, 305, 306, 307, 1086,
	308, 1080, 1079, 1000, 312, 309, 310, 0, 313, 311,
	0, 314, 315, 316, 0, 0, 317, 1071, 319, 0,
	320, 321, 0, 322, 323, 324, 0, 325, 326, 1006,
	327, 328, 329, 331, 333, 330, 334, 335, 336, 337,
	1094, 1095, 1018, 251, 0, 0, 0, 0, 0, 338,
	339, 340, 1078, 0, 0, 0, 341, 0, 342, 0,
	0, 1105, 343, 344, 1091, 1092, 345, 346, 347, 348,
	349, 350, 351, 352, 0, 353, 1101, 0, 1028, 354,
	0, 355, 356, 357, 358, 359, 1064, 1065, 1068, 433,
	1107, 360, 361, 0, 362, 363, 364, 365, 0, 0,
	0, 252, 366, 367, 369, 0, 1106, 368, 1073, 1074,
	0, 1034, 0, 370, 371, 1108, 1066, 1109, 372, 373,
	374, 1110, 375, 0, 0, 0, 376, 377, 378, 379,
	380, 381, 0, 382, 384, 383, 0, 385, 1102, 1111,
	386, 387, 1112, 0, 388, 0, 0, 0, 389, 390,
	1057, 1056, 391, 392, 393, 394, 0, 395, 396, 398,
	400, 397, 399, 401, 414, 402, 403, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 416, 0, 415,
	1113, 417, 418, 419, 424, 426, 427, 422, 423, 425,
	428, 429, 421, 1114, 420, 997, 253, 1115, 430, 431,
	1019, 1067, 432, 1081, 434, 435, 0, 0, 436, 0,
	0, 0, 438, 439, 440, 0, 0, 441, 442, 606,
	1116, 443, 1117, 1096, 444, 445, 437, 446, 447, 448,
	449, 450, 451, 452, 453, 0, 454, 455, 608, 456,
	457, 458, 609, 459, 460, 461, 1097, 462, 611, 463,
	464, 0, 465, 0, 466, 467, 468, 469, 470, 471,
	472, 1077, 473, 475, 474, 476, 0, 477, 0, 0,
	0, 0, 0, 478, 0, 480, 481, 482, 479, 483,
	484, 485, 486, 0, 487, 488, 489, 1118, 490, 491,
	492, 493, 1007, 494, 0, 495, 496, 502, 503, 497,
	498, 504, 505, 506, 507, 508, 0, 510, 511, 509,
	512, 513, 514, 1060, 515, 499, 500, 516, 517, 1119,
	518, 519, 520, 521, 522, 523, 1075, 0, 524, 0,
	525, 526, 527, 528, 501, 529, 534, 1122, 530, 531,
	532, 533, 1098, 0, 536, 537, 995, 535, 0, 538,
	539, 540, 541, 542, 543, 332, 544, 0, 545, 1087,
	1088, 1089, 1090, 0, 554, 0, 546, 547, 548, 1099,
	549, 1100, 1017, 550, 551, 552, 553, 0, 4232, 556,
	0, 1001, 557, 558, 559, 561, 562, 560, 563, 1061,
	564, 0, 0, 565, 566, 567, 623, 1084, 1121, 0,
	569, 568, 570, 626, 0, 0, 0, 0, 571, 572,
	627, 573, 574, 575, 998, 0, 0, 0, 0, 0,
	0, 994, 0, 0, 0, 0, 0, 0, 992, 993,
	1039, 1011, 1012, 1013, 1009, 1010, 1022, 1023, 0, 0,
	0, 1021, 0, 0, 0, 0, 0, 254, 255, 256,
	257, 258, 259, 0, 260, 261, 0, 0, 0, 0,
	0, 1063, 1027, 0, 0, 0, 262, 263, 1103, 264,
	265, 266, 267, 268, 4231, 1076, 0, 269, 1083, 270,
	1082, 0, 1093, 271, 272, 273, 274, 275, 276, 1029,
	1062, 996, 277, 1123, 1124, 584, 0, 278, 279, 1069,
	0, 1050, 0, 280, 281, 282, 283, 284, 285, 286,
	0, 0, 288, 289, 290, 287, 291, 0, 292, 0,
	293, 294, 295, 296, 297, 298, 0, 299, 300, 301,
	1104, 302, 4233, 1053, 1051, 1052, 1059, 1055, 1054, 1058,
	304, 305, 306, 307, 1086, 308, 1080, 1079, 1000, 312,
	309, 310, 0, 313, 311, 0, 314, 315, 316, 0,
	0, 317, 1071, 319, 0, 320, 321, 0, 322, 323,
	324, 0, 325, 326, 1006, 327, 328, 329, 331, 333,
	330, 334, 335, 336, 337, 1094, 1095, 1018, 251, 0,
	0, 0, 0, 0, 338, 339, 340, 1078, 0, 0,
	0, 341, 0, 342, 0, 0, 1105, 343, 344, 1091,
	1092, 345, 346, 347, 348, 349, 350, 351, 352, 0,
	353, 1101, 0, 1028, 354, 0, 355, 356, 357, 358,
	359, 1064, 1065, 1068, 433, 1107, 360, 361, 0, 362,
	363, 364, 365, 0, 0, 0, 252, 366, 367, 369,
	0, 1106, 368, 1073, 1074, 0, 1034, 0, 370, 371,
	1108, 1066, 1109, 372, 373, 374, 1110, 375, 0, 0,
	0, 376, 377, 378, 379, 380, 381, 0, 382, 384,
	383, 0, 385, 1102, 1111, 386, 387, 1112, 0, 388,
	0, 0, 0, 389, 390, 1057, 1056, 391, 392, 393,
	394, 0, 395, 396, 398, 400, 397, 399, 401, 414,
	402, 403, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 416, 0, 415, 1113, 417, 418, 419, 424,
	426, 427, 422, 423, 425, 428, 429, 421, 1114, 420,
	997, 253, 1115, 430, 431, 1019, 1067, 432, 1081, 434,
	435, 0, 0, 436, 0, 0, 0, 438, 439, 440,
	0, 0, 441, 442, 606, 1116, 443, 1117, 1096, 444,
	445, 437, 446, 447, 448, 449, 450, 451, 452, 453,
	0, 454, 455, 608, 456, 457, 458, 609, 459, 460,
	461, 1097, 462, 611, 463, 464, 0, 465, 0, 466,
	467, 468, 469, 470, 471, 472, 1077, 473, 475, 474,
	476, 0, 477, 0, 0, 0, 0, 0, 478, 0,
	480, 481, 482, 479, 483, 484, 485, 486, 0, 487,
	488, 489, 1118, 490, 491, 492, 493, 1007, 494, 0,
	495, 496, 502, 503, 497, 498, 504, 505, 506, 507,
	508, 0, 510, 511, 509, 512, 513, 514, 1060, 515,
	499, 500, 516, 517, 1119, 518, 519, 520, 521, 522,
	523, 1075, 0, 524, 0, 525, 526, 527, 528, 501,
	529, 534, 1122, 530, 531, 532, 533, 1098, 0, 536,
	537, 995, 535, 0, 538, 539, 540, 541, 542, 543,
	332, 544, 0, 545, 1087, 1088, 1089, 1090, 0, 554,
	0, 546, 547, 548, 1099, 549, 1100, 1017, 550, 551,
	552, 553, 0, 4232, 556, 0, 1001, 557, 558, 559,
	561, 562, 560, 563, 1061, 564, 0, 0, 565, 566,
	567, 623, 1084, 1121, 0, 569, 568, 570, 626, 0,
	0, 0, 0, 571, 572, 627, 573, 574, 575, 998,
	0, 0, 0, 0, 0, 0, 994, 0, 0, 0,
	0, 0, 0, 992, 993, 1039, 1011, 1012, 1013, 2885,
	2886, 1022, 1023, 0, 0, 0, 1021, 0, 0, 0,
	0, 0, 254, 255, 256, 257, 258, 259, 0, 260,
	261, 0, 0, 0, 0, 0, 1063, 1027, 0, 0,
	0, 262, 263, 1103, 264, 265, 266, 267, 268, 577,
	1076, 0, 269, 1083, 270, 1082, 0, 1093, 271, 272,
	273, 274, 275, 276, 1029, 1062, 996, 277, 1123, 1124,
	584, 0, 278, 279, 1069, 0, 1050, 0, 280, 281,
	282, 283, 284, 285, 286, 0, 0, 288, 289, 290,
	287, 291, 0, 292, 0, 293, 294, 295, 296, 297,
	298, 0, 299, 300, 301, 1104, 302, 303, 1053, 1051,
	1052, 1059, 1055, 1054, 1058, 304, 305, 306, 307, 1086,
	308, 1080, 1079, 1000, 312, 309, 310, 0, 313, 311,
	0, 314, 315, 316, 0, 0, 317, 1071, 319, 0,
	320, 321, 0, 322, 323, 324, 0, 325, 326, 1006,
	327, 328, 329, 331, 333, 330, 334, 335, 336, 337,
	1094, 1095, 1018, 251, 0, 0, 0, 0, 0, 338,
	339, 340, 1078, 0, 0, 0, 341, 0, 342, 0,
	0, 1105, 343, 344, 1091, 1092, 345, 346, 347, 348,
	349, 350, 351, 352, 0, 353, 1101, 0, 1028, 354,
	0, 355, 356, 357, 358, 359, 1064, 1065, 1068, 433,
	1107, 360, 361, 0, 362, 363, 364, 365, 0, 0,
	0, 252, 366, 367, 369, 0, 1106, 368, 1073, 1074,
	0, 1034, 0, 370, 371, 1108, 1066, 1109, 372, 373,
	374, 1110, 375, 0, 0, 0, 376, 377, 378, 379,
	380, 381, 0, 382, 384, 383, 0, 385, 1102, 1111,
	386, 387, 1112, 0, 388, 0, 0, 0, 389, 390,
	1057, 1056, 391, 392, 393, 394, 0, 395, 396, 398,
	400, 397, 399, 401, 414, 402, 403, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 416, 0, 415,
	1113, 417, 418, 419, 424, 426, 427, 422, 423, 425,
	428, 429, 421, 1114, 420, 997, 253, 1115, 430, 431,
	1019, 1067, 432, 1081, 434, 435, 0, 0, 436, 0,
	0, 0, 438, 439, 440, 0, 0, 441, 442, 606,
	1116, 443, 1117, 1096, 444, 445, 437, 446, 447, 448,
	449, 450, 451, 452, 453, 0, 454, 455, 608, 456,
	457, 458, 609, 459, 460, 461, 1097, 462, 611, 463,
	464, 0, 465, 0, 466, 467, 468, 469, 470, 471,
	472, 1077, 473, 475, 474, 476, 0, 477, 0, 0,
	0, 0, 0, 478, 0, 480, 481, 482, 479, 483,
	484, 485, 486, 0, 487, 488, 489, 1118, 490, 491,
	492, 493, 1007, 494, 0, 495, 496, 502, 503, 497,
	498, 504, 505, 506, 507, 508, 0, 510, 511, 509,
	512, 513, 514, 1060, 515, 499, 500, 516, 517, 1119,
	518, 519, 520, 521, 522, 523, 1075, 0, 524, 0,
	525, 526, 527, 528, 501, 529, 534, 1122, 530, 531,
	532, 533, 1098, 0, 536, 537, 995, 535, 0, 538,
	539, 540, 541, 542, 543, 332, 544, 0, 545, 1087,
	1088, 1089, 1090, 0, 554, 0, 546, 547, 548, 1099,
	549, 1100, 1017, 550, 551, 552, 553, 0, 555, 556,
	0, 1001, 557, 558, 559, 561, 562, 560, 563, 1061,
	564, 0, 0, 565, 566, 567, 623, 1084, 1121, 0,
	569, 568, 570, 626, 0, 0, 0, 0, 571, 572,
	627, 573, 574, 575, 998, 0, 0, 0, 0, 0,
	0, 994, 0, 0, 0, 0, 0, 0, 992, 993,
	1039, 1011, 1012, 1013, 2883, 2884, 1022, 1023, 0, 0,
	0, 1021, 0, 0, 0, 0, 0, 254, 255, 256,
	257, 258, 259, 0, 260, 261, 0, 0, 0, 0,
	0, 1063, 1027, 0, 0, 0, 262, 263, 1103, 264,
	265, 266, 267, 268, 577, 1076, 0, 269, 1083, 270,
	1082, 0, 1093, 271, 272, 273, 274, 275, 276, 1029,
	1062, 996, 277, 1123, 1124, 584, 0, 278, 279, 1069,
	0, 1050, 0, 280, 281, 282, 283, 284, 285, 286,
	0, 0, 288, 289, 290, 287, 291, 0, 292, 0,
	293, 294, 295, 296, 297, 298, 0, 299, 300, 301,
	1104, 302, 303, 1053, 1051, 1052, 1059, 1055, 1054, 1058,
	304, 305, 306, 307, 1086, 308, 1080, 1079, 1000, 312,
	309, 310, 0, 313, 311, 0, 314, 315, 316, 0,
	0, 317, 1071, 319, 0, 320, 321, 0, 322, 323,
	324, 0, 325, 326, 1006, 327, 328, 329, 331, 333,
	330, 334, 335, 336, 337, 1094, 1095, 1018, 251, 0,
	0, 0, 0, 0, 338, 339, 340, 1078, 0, 0,
	0, 341, 0, 342, 0, 0, 1105, 343, 344, 1091,
	1092, 345, 346, 347, 348, 349, 350, 351, 352, 0,
	353, 1101, 0, 1028, 354, 0, 355, 356, 357, 358,
	359, 1064, 1065, 1068, 433, 1107, 360, 361, 0, 362,
	363, 364, 365, 0, 0, 0, 252, 366, 367, 369,
	0, 1106, 368, 1073, 1074, 0, 1034, 0, 370, 371,
	1108, 1066, 1109, 372, 373, 374, 1110, 375, 0, 0,
	0, 376, 377, 378, 379, 380, 381, 0, 382, 384,
	383, 0, 385, 1102, 1111, 386, 387, 1112, 0, 388,
	0, 0, 0, 389, 390, 1057, 1056, 391, 392, 393,
	394, 0, 395, 396, 398, 400, 397, 399, 401, 414,
	402, 403, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 416, 0, 415, 1113, 417, 418, 419, 424,
	426, 427, 422, 423, 425, 428, 429, 421, 1114, 420,
	997, 253, 1115, 430, 431, 1019, 1067, 432, 1081, 434,
	435, 0, 0, 436, 0, 0, 0, 438, 439, 440,
	0, 0, 441, 442, 606, 1116, 443, 1117, 1096, 444,
	445, 437, 446, 447, 448, 449, 450, 451, 452, 453,
	0, 454, 455, 608, 456, 457, 458, 609, 459, 460,
	461, 1097, 462, 611, 463, 464, 0, 465, 0, 466,
	467, 468, 469, 470, 471, 472, 1077, 473, 475, 474,
	476, 0, 477, 0, 0, 0, 0, 0, 478, 0,
	480, 481, 482, 479, 483, 484, 485, 486, 0, 487,
	488, 489, 1118, 490, 491, 492, 493, 1007, 494, 0,
	495, 496, 502, 503, 497, 498, 504, 505, 506, 507,
	508, 0, 510, 511, 509, 512, 513, 514, 1060, 515,
	499, 500, 516, 517, 1119, 518, 519, 520, 521, 522,
	523, 1075, 0, 524, 0, 525, 526, 527, 528, 501,
	529, 534, 1122, 530, 531, 532, 533, 1098, 0, 536,
	537, 995, 535, 0, 538, 539, 540, 541, 542, 543,
	332, 544, 0, 545, 1087, 1088, 1089, 1090, 0, 554,
	0, 546, 547, 548, 1099, 549, 1100, 1017, 550, 551,
	552, 553, 0, 555, 556, 0, 1001, 557, 558, 559,
	561, 562, 560, 563, 1061, 564, 0, 0, 565, 566,
	567, 623, 1084, 1121, 0, 569, 568, 570, 626, 0,
	0, 0, 0, 571, 572, 627, 573, 574, 575, 998,
	0, 0, 0, 0, 0, 0, 994, 0, 0, 0,
	0, 0, 0, 992, 993, 1039, 1011, 1012, 1013, 1009,
	1010, 1022, 1023, 0, 0, 0, 1021, 0, 0, 0,
	0, 0, 254, 255, 256, 257, 258, 259, 0, 260,
	261, 0, 0, 0, 0, 0, 1063, 1027, 0, 0,
	0, 262, 263, 1103, 264, 265, 266, 267, 268, 577,
	1076, 0, 269, 1083, 270, 1082, 0, 1093, 271, 272,
	273, 274, 275, 276, 1029, 1062, 996, 277, 1123, 1124,
	584, 0, 278, 279, 1069, 0, 1050, 0, 280, 281,
	282, 283, 284, 285, 286, 0, 0, 288, 289, 290,
	287, 291, 0, 292, 0, 293, 294, 295, 296, 297,
	298, 0, 299, 300, 301, 1104, 302, 303, 1053, 1051,
	1052, 1059, 1055, 1054, 1058, 304, 305, 306, 307, 1086,
	308, 1080, 1079, 1000, 312, 309, 310, 0, 313, 311,
	0, 314, 315, 316, 0, 0, 317, 1071, 319, 0,
	320, 321, 0, 322, 323, 324, 0, 325, 326, 1006,
	327, 328, 329, 331, 333, 330, 334, 335, 336, 337,
	1094, 1095, 1018, 251, 0, 0, 0, 0, 0, 338,
	339, 340, 1078, 0, 0, 0, 341, 0, 342, 0,
	0, 1105, 343, 344, 1091, 1092, 345, 346, 347, 348,
	349, 350, 351, 352, 0, 353, 1101, 0, 1028, 354,
	0, 355, 356, 357, 358, 359, 1064, 1065, 1068, 433,
	1107, 360, 361, 0, 362, 363, 364, 365, 0, 0,
	0, 252, 366, 367, 369, 0, 1106, 368, 1073, 1074,
	0, 1034, 0, 370, 371, 1108, 1066, 1109, 372, 373,
	374, 1110, 375, 0, 0, 0, 376, 377, 378, 379,
	380, 381, 0, 382, 384, 383, 0, 385, 1102, 1111,
	386, 387, 1112, 0, 388, 0, 0, 0, 389, 390,
	1057, 1056, 391, 392, 393, 394, 0, 395, 396, 398,
	400, 397, 399, 401, 414, 402, 403, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 416, 0, 415,
	1113, 417, 418, 419, 424, 426, 427, 422, 423, 425,
	428, 429, 421, 1114, 420, 997, 253, 1115, 430, 431,
	1019, 1067, 432, 1081, 434, 435, 0, 0, 436, 0,
	0, 0, 438, 439, 440, 0, 0, 441, 442, 606,
	1116, 443, 1117, 1096, 444, 445, 437, 446, 447, 448,
	449, 450, 451, 452, 453, 0, 454, 455, 608, 456,
	457, 458, 609, 459, 460, 461, 1097, 462, 611, 463,
	464, 0, 465, 0, 466, 467, 468, 469, 470, 471,
	472, 1077, 473, 475, 474, 476, 0, 477, 0, 0,
	0, 0, 0, 478, 0, 480, 481, 482, 479, 483,
	484, 485, 486, 0, 487, 488, 489, 1118, 490, 491,
	492, 493, 1007, 494, 0, 495, 496, 502, 503, 497,
	498, 504, 505, 506, 507, 508, 0, 510, 511, 509,
	512, 513, 514, 1060, 515, 499, 500, 516, 517, 1119,
	518, 519, 520, 521, 522, 523, 1075, 0, 524, 0,
	525, 526, 527, 528, 501, 529, 534, 1122, 530, 531,
	532, 533, 1098, 0, 536, 537, 995, 535, 0, 538,
	539, 540, 541, 542, 543, 332, 544, 0, 545, 1087,
	1088, 1089, 1090, 0, 554, 0, 546, 547, 548, 1099,
	549, 1100, 1017, 550, 551, 552, 553, 0, 555, 556,
	0, 1001, 557, 558, 559, 561, 562, 560, 563, 1061,
	564, 0, 0, 565, 566, 567, 623, 1084, 1121, 0,
	569, 568, 570, 626, 0, 0, 0, 0, 571, 572,
	627, 573, 574, 575, 998, 0, 0, 0, 0, 0,
	0, 994, 0, 0, 0, 0, 0, 0, 2246, 2247,
	1039, 1011, 1012, 1013, 1009, 1010, 1022, 1023, 0, 0,
	0, 1021, 0, 0, 0, 0, 0, 254, 255, 256,
	257, 258, 259, 0, 260, 261, 0, 0, 0, 0,
	0, 1063, 1027, 0, 0, 0, 262, 263, 1103, 264,
	265, 266, 267, 268, 577, 1076, 0, 269, 1083, 270,
	1082, 0, 1093, 271, 272, 273, 274, 275, 276, 1029,
	1062, 0, 277, 1123, 1124, 584, 0, 278, 279, 1069,
	0, 1050, 0, 280, 281, 282, 283, 284, 285, 286,
	0, 0, 288, 289, 290, 287, 291, 0, 292, 0,
	293, 294, 295, 296, 297, 298, 0, 299, 300, 301,
	1104, 302, 303, 1053, 1051, 1052, 1059, 1055, 1054, 1058,
	304, 305, 306, 307, 1086, 308, 1080, 1079, 0, 312,
	309, 310, 0, 313, 311, 0, 314, 315, 316, 0,
	0, 317, 1071, 319, 0, 320, 321, 0, 322, 323,
	324, 0, 325, 326, 1006, 327, 328, 329, 331, 333,
	330, 334, 335, 336, 337, 1094, 1095, 1018, 251, 0,
	0, 0, 0, 0, 338, 339, 340, 1078, 0, 0,
	0, 341, 0, 342, 0, 0, 1105, 343, 344, 1091,
	1092, 345, 346, 347, 348, 349, 350, 351, 352, 0,
	353, 1101, 0, 1028, 354, 0, 355, 356, 357, 358,
	359, 1064, 1065, 1068, 433, 1107, 360, 361, 0, 362,
	363, 364, 365, 0, 0, 0, 252, 366, 367, 369,
	0, 1106, 368, 1073, 1074, 0, 1034, 0, 370, 371,
	1108, 1066, 1109, 372, 373, 374, 1110, 375, 0, 0,
	0, 376, 377, 378, 379, 380, 381, 0, 382, 384,
	383, 0, 385, 1102, 1111, 386, 387, 1112, 0, 388,
	0, 0, 0, 389, 390, 1057, 1056, 391, 392, 393,
	394, 0, 395, 396, 398, 400, 397, 399, 401, 414,
	402, 403, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 416, 0, 415, 1113, 417, 418, 419, 424,
	426, 427, 422, 423, 425, 428, 429, 421, 1114, 420,
	0, 253, 1115, 430, 431, 1019, 1067, 432, 1081, 434,
	435, 0, 0, 436, 0, 0, 0, 438, 439, 440,
	0, 0, 441, 442, 606, 1116, 443, 1117, 1096, 444,
	445, 437, 446, 447, 448, 449, 450, 451, 452, 453,
	0, 454, 455, 608, 456, 457, 458, 609, 459, 460,
	461, 1097, 462, 611, 463, 464, 0, 465, 0, 466,
	467, 468, 469, 470, 471, 472, 1077, 473, 475, 474,
	476, 0, 477, 0, 0, 0, 0, 0, 478, 0,
	480, 481, 482, 479, 483, 484, 485, 486, 0, 487,
	488, 489, 1118, 490, 491, 492, 493, 1007, 494, 0,
	495, 496, 502, 503, 497, 498, 504, 505, 506, 507,
	508, 0, 510, 511, 509, 512, 513, 514, 1060, 515,
	499, 500, 516, 517, 1119, 518, 519, 520, 521, 522,
	523, 1075, 0, 524, 0, 525, 526, 527, 528, 501,
	529, 534, 1122, 530, 531, 532, 533, 1098, 0, 536,
	537, 0, 535, 0, 538, 539, 540, 541, 542, 543,
	332, 544, 0, 545, 1087, 1088, 1089, 1090, 0, 554,
	0, 546, 547, 548, 1099, 549, 1100, 1017, 550, 551,
	552, 553, 0, 555, 556, 0, 0, 557, 558, 559,
	561, 562, 560, 563, 1061, 564, 0, 0, 565, 566,
	567, 623, 1084, 1121, 0, 569, 568, 570, 626, 0,
	0, 0, 0, 571, 572, 627, 573, 574, 575, 1039,
	1011, 1012, 1013, 1009, 1010, 1022, 2466, 0, 0, 0,
	0, 0, 0, 2464, 2465, 0, 254, 255, 256, 257,
	258, 259, 1023, 260, 261, 0, 1021, 0, 0, 0,
	1063, 1027, 0, 0, 0, 262, 263, 1103, 264, 265,
	266, 267, 268, 577, 1076, 0, 269, 1083, 270, 1082,
	0, 1093, 271, 272, 273, 274, 275, 276, 1029, 1062,
	0, 277, 1123, 1124, 584, 0, 278, 279, 1069, 0,
	1050, 0, 280, 281, 282, 283, 284, 285, 286, 0,
	0, 288, 289, 290, 287, 291, 0, 292, 0, 293,
	294, 295, 296, 297, 298, 0, 299, 300, 301, 1104,
	302, 303, 1053, 1051, 1052, 1059, 1055, 1054, 1058, 304,
	305, 306, 307, 1086, 308, 1080, 1079, 0, 312, 309,
	310, 0, 313, 311, 0, 314, 315, 316, 0, 0,
	317, 1071, 319, 0, 320, 321, 0, 322, 323, 324,
	0, 325, 326, 1006, 327, 328, 329, 331, 333, 330,
	334, 335, 336, 337, 1094, 1095, 1018, 251, 0, 0,
	0, 0, 0, 338, 339, 340, 1078, 0, 0, 0,
	341, 0, 342, 0, 0, 1105, 343, 344, 1091, 1092,
	345, 346, 347, 348, 349, 350, 351, 352, 0, 353,
	1101, 0, 1028, 354, 0, 355, 356, 357, 358, 359,
	1064, 1065, 1068, 433, 1107, 360, 361, 0, 362, 363,
	364, 365, 0, 0, 0, 252, 366, 367, 369, 0,
	1106, 368, 1073, 1074, 0, 1034, 0, 370, 371, 1108,
	1066, 1109, 372, 373, 374, 1110, 375, 0, 0, 0,
	376, 377, 378, 379, 380, 381, 0, 382, 384, 383,
	0, 385, 1102, 1111, 386, 387, 1112, 0, 388, 0,
	0, 0, 389, 390, 1057, 1056, 391, 392, 393, 394,
	0, 395, 396, 398, 400, 397, 399, 401, 414, 402,
	403, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 416, 0, 415, 1113, 417, 418, 419, 424, 426,
	427, 422, 423, 425, 428, 429, 421, 1114, 420, 0,
	253, 1115, 430, 431, 1019, 1067, 432, 1081, 434, 435,
	0, 0, 436, 0, 0, 0, 438, 439, 440, 0,
	0, 441, 442, 606, 1116, 443, 1117, 1096, 444, 445,
	437, 446, 447, 448, 449, 450, 451, 452, 453, 0,
	454, 455, 608, 456, 457, 458, 609, 459, 460, 461,
	1097, 462, 611, 463, 464, 0, 465, 0, 466, 467,
	468, 469, 470, 471, 472, 1077, 473, 475, 474, 476,
	0, 477, 0, 0, 0, 0, 0, 478, 0, 480,
	481, 482, 479, 483, 484, 485, 486, 0, 487, 488,
	489, 1118, 490, 491, 492, 493, 2878, 2879, 0, 495,
	496, 502, 503, 497, 498, 504, 505, 506, 507, 508,
	0, 510, 511, 509, 512, 513, 514, 1060, 515, 499,
	500, 516, 517, 1119, 518, 519, 520, 521, 522, 523,
	1075, 0, 524, 0, 525, 526, 527, 528, 501, 529,
	534, 1122, 530, 531, 532, 533, 1098, 0, 536, 537,
	0, 535, 0, 538, 539, 540, 541, 542, 543, 332,
	544, 0, 545, 1087, 1088, 1089, 1090, 0, 554, 0,
	546, 547, 548, 1099, 549, 1100, 1017, 550, 551, 552,
	553, 0, 555, 556, 0, 0, 557, 558, 559, 561,
	562, 560, 563, 1061, 564, 0, 0, 565, 566, 567,
	623, 1084, 1121, 0, 569, 568, 570, 626, 0, 0,
	0, 0, 571, 572, 627, 573, 574, 575, 1039, 1011,
	1012, 1013, 1009, 1010, 1022, 0, 0, 0, 0, 0,
	0, 0, 1953, 1954, 0, 254, 255, 256, 257, 258,
	259, 1023, 260, 261, 0, 1021, 0, 0, 0, 1063,
	1027, 0, 0, 0, 262, 263, 1103, 264, 265, 266,
	267, 268, 0, 1076, 0, 269, 1083, 270, 1082, 0,
	1093, 271, 272, 273, 274, 275, 276, 1029, 1062, 996,
	277, 1123, 1124, 584, 0, 278, 279, 1069, 0, 1050,
	0, 280, 281, 282, 283, 284, 285, 286, 0, 0,
	288, 289, 290, 287, 291, 0, 292, 0, 293, 294,
	295, 296, 297, 298, 0, 299, 300, 301, 1104, 302,
	4233, 1053, 1051, 1052, 1059, 1055, 1054, 1058, 304, 305,
	306, 307, 1086, 308, 1080, 1079, 1000, 312, 309, 310,
	0, 313, 311, 0, 314, 315, 316, 0, 0, 317,
	1071, 319, 0, 320, 321, 0, 322, 323, 324, 0,
	325, 326, 1006, 327, 328, 329, 331, 333, 330, 334,
	335, 336, 337, 1094, 1095, 1018, 251, 0, 0, 0,
	0, 0, 338, 339, 340, 1078, 0, 0, 0, 341,
	0, 342, 0, 0, 1105, 343, 344, 1091, 1092, 345,
	346, 347, 348, 349, 350, 351, 352, 0, 353, 1101,
	0, 1028, 354, 0, 355, 356, 357, 358, 359, 1064,
	1065, 1068, 433, 0, 360, 361, 0, 362, 363, 364,
	365, 0, 0, 0, 252, 366, 367, 369, 0, 1106,
	368, 1073, 1074, 0, 1034, 0, 370, 371, 0, 1066,
	0, 372, 373, 374, 1110, 375, 0, 0, 0, 376,
	377, 378, 379, 380, 381, 0, 382, 384, 383, 0,
	385, 1102, 1111, 386, 387, 0, 0, 388, 0, 0,
	0, 389, 390, 1057, 1056, 391, 392, 393, 394, 0,
	395, 396, 398, 400, 397, 399, 401, 414, 402, 403,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	416, 0, 415, 1113, 417, 418, 419, 424, 426, 427,
	422, 423, 425, 428, 429, 421, 1114, 420, 997, 253,
	0, 430, 431, 1019, 1067, 432, 1081, 434, 435, 0,
	0, 436, 0, 0, 0, 438, 439, 440, 0, 0,
	441, 442, 606, 1116, 443, 1117, 1096, 444, 445, 437,
	446, 447, 448, 449, 450, 451, 452, 453, 0, 454,
	455, 608, 456, 457, 458, 609, 459, 460, 461, 1097,
	462, 611, 463, 464, 0, 465, 0, 466, 467, 468,
	469, 470, 471, 472, 1077, 473, 475, 474, 476, 0,
	477, 0, 0, 0, 0, 0, 478, 0, 480, 481,
	482, 479, 483, 484, 485, 486, 0, 487, 488, 489,
	1118, 490, 491, 492, 493, 1007, 494, 0, 495, 496,
	502, 503, 497, 498, 504, 505, 506, 507, 508, 0,
	510, 511, 509, 512, 513, 514, 1060, 515, 499, 500,
	516, 517, 0, 518, 519, 520, 521, 522, 523, 1075,
	0, 524, 0, 525, 526, 527, 528, 501, 529, 534,
	1122, 530, 531, 532, 533, 1098, 0, 536, 537, 995,
	535, 0, 538, 539, 540, 541, 542, 543, 332, 544,
	0, 545, 1087, 1088, 1089, 1090, 0, 554, 0, 546,
	547, 548, 1099, 549, 1100, 1017, 550, 551, 552, 553,
	0, 4232, 556, 0, 1001, 557, 558, 559, 561, 562,
	560, 563, 1061, 564, 0, 0, 565, 566, 567, 623,
	1084, 1121, 0, 569, 568, 570, 626, 0, 0, 0,
	0, 571, 572, 627, 573, 574, 575, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 985, 0, 1161, 0,
	0, 992, 993, 0, 0, 0, 0, 0, 0, 0,
	1023, 0, 0, 0, 1021, 254, 255, 256, 257, 258,
	259, 0, 260, 261, 0, 0, 0, 0, 0, 1063,
	0, 0, 0, 0, 262, 263, 1103, 264, 265, 266,
	267, 268, 577, 578, 0, 269, 579, 270, 580, 0,
	581, 271, 272, 273, 274, 275, 276, 0, 1062, 0,
	277, 582, 583, 584, 0, 278, 279, 1069, 0, 1050,
	0, 280, 281, 282, 283, 284, 285, 286, 0, 0,
	288, 289, 290, 287, 291, 0, 292, 0, 293, 294,
	295, 296, 297, 298, 0, 299, 300, 301, 1104, 302,
	303, 1053, 1051, 1052, 1059, 1055, 1054, 1058, 304, 305,
	306, 307, 0, 308, 586, 587, 0, 312, 309, 310,
	0, 313, 311, 0, 314, 315, 316, 0, 0, 317,
	318, 319, 0, 320, 321, 0, 322, 323, 324, 0,
	325, 326, 588, 327, 328, 329, 331, 333, 330, 334,
	335, 336, 337, 1094, 1095, 0, 251, 0, 0, 0,
	0, 0, 338, 339, 340, 591, 0, 0, 0, 341,
	0, 342, 0, 0, 1105, 343, 344, 592, 593, 345,
	346, 347, 348, 349, 350, 351, 352, 0, 353, 1101,
	0, 595, 354, 0, 355, 356, 357, 358, 359, 1064,
	1065, 1068, 433, 1107, 360, 361, 0, 362, 363, 364,
	365, 0, 0, 0, 252, 366, 367, 369, 0, 1106,
	368, 599, 600, 0, 601, 0, 370, 371, 1108, 1066,
	1109, 372, 373, 374, 1110, 375, 0, 0, 0, 376,
	377, 378, 379, 380, 381, 1147, 382, 384, 383, 0,
	385, 1102, 1111, 386, 387, 1112, 0, 388, 0, 0,
	0, 389, 390, 1057, 1056, 391, 392, 393, 394, 0,
	395, 396, 398, 400, 397, 399, 401, 414, 402, 403,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	416, 0, 415, 1113, 417, 418, 419, 424, 426, 427,
	422, 423, 425, 428, 429, 421, 1114, 420, 0, 253,
	1115, 430, 431, 0, 1067, 432, 605, 434, 435, 0,
	0, 436, 0, 0, 1153, 438, 439, 440, 0, 0,
	441, 442, 606, 1116, 443, 1117, 1096, 444, 445, 437,
	446, 447, 448, 449, 450, 451, 452, 453, 0, 454,
	455, 608, 456, 457, 458, 609, 459, 460, 461, 1097,
	462, 611, 463, 464, 0, 465, 0, 466, 467, 468,
	469, 470, 471, 472, 612, 473, 475, 474, 476, 0,
	477, 0, 0, 0, 0, 0, 478, 0, 480, 481,
	482, 479, 483, 484, 485, 486, 0, 487, 488, 489,
	1118, 490, 491, 492, 493, 613, 1155, 0, 495, 496,
	502, 503, 497, 498, 504, 505, 506, 507, 508, 214,
	510, 511, 509, 512, 513, 514, 1060, 515, 499, 500,
	516, 517, 1119, 518, 519, 520, 521, 522, 523, 614,
	0, 524, 0, 525, 526, 527, 528, 501, 529, 534,
	615, 530, 531, 532, 533, 1098, 0, 536, 537, 0,
	535, 216, 538, 539, 540, 541, 542, 543, 332, 544,
	0, 545, 617, 618, 619, 620, 0, 554, 0, 546,
	547, 548, 1099, 549, 1100, 0, 550, 551, 552, 553,
	0, 555, 556, 0, 0, 557, 558, 559, 561, 562,
	560, 563, 1061, 564, 0, 0, 565, 566, 567, 1505,
	624, 625, 0, 569, 568, 570, 626, 0, 1161, 0,
	208, 571, 572, 627, 573, 574, 575, 0, 209, 0,
	0, 0, 0, 0, 0, 254, 255, 256, 257, 258,
	259, 0, 260, 261, 0, 0, 0, 0, 1151, 1063,
	1834, 0, 0, 0, 262, 263, 1103, 264, 265, 266,
	267, 268, 577, 578, 0, 269, 579, 270, 580, 0,
	581, 271, 272, 273, 274, 275, 276, 0, 1062, 0,
	277, 582, 583, 584, 0, 278, 279, 1069, 0, 1050,
	0, 280, 281, 282, 283, 284, 285, 286, 0, 0,
	288, 289, 290, 287, 291, 0, 292, 0, 293, 294,
	295, 296, 297, 298, 0, 299, 300, 301, 1104, 302,
	303, 1053, 1051, 1052, 1059, 1055, 1054, 1058, 304, 305,
	306, 307, 0, 308, 586, 587, 0, 312, 309, 310,
	0, 313, 311, 0, 314, 315, 316, 0, 0, 317,
	318, 319, 0, 320, 321, 0, 322, 323, 324, 0,
	325, 326, 588, 327, 328, 329, 331, 333, 330, 334,
	335, 336, 337, 1094, 1095, 0, 251, 0, 0, 0,
	0, 0, 338, 339, 340, 591, 0, 0, 0, 341,
	0, 342, 0, 0, 1105, 343, 344, 592, 593, 345,
	346, 347, 348, 349, 350, 351, 352, 0, 353, 1101,
	0, 595, 354, 0, 355, 356, 357, 358, 359, 1064,
	1065, 1068, 433, 1107, 360, 361, 0, 362, 363, 364,
	365, 0, 0, 0, 252, 366, 367, 369, 0, 1106,
	368, 599, 600, 0, 601, 0, 370, 371, 1108, 1066,
	1109, 372, 373, 374, 1110, 375, 0, 0, 0, 376,
	377, 378, 379, 380, 381, 1147, 382, 384, 383, 0,
	385, 1102, 1111, 386, 387, 1112, 0, 388, 0, 0,
	0, 389, 390, 1057, 1056, 391, 392, 393, 394, 0,
	395, 396, 398, 400, 397, 399, 401, 414, 402, 403,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	416, 0, 415, 1113, 417, 418, 419, 424, 426, 427,
	422, 423, 425, 428, 429, 421, 1114, 420, 0, 253,
	1115, 430, 431, 0, 1067, 432, 605, 434, 435, 0,
	0, 436, 0, 0, 1153, 438, 439, 440, 0, 0,
	441, 442, 606, 1116, 443, 1117, 1096, 444, 445, 437,
	446, 447, 448, 449, 450, 451, 452, 453, 0, 454,
	455, 608, 456, 457, 458, 609, 459, 460, 461, 1097,
	462, 611, 463, 464, 0, 465, 0, 466, 467, 468,
	469, 470, 471, 472, 612, 473, 475, 474, 476, 0,
	477, 0, 0, 0, 0, 0, 478, 0, 480, 481,
	482, 479, 483, 484, 485, 486, 0, 487, 488, 489,
	1118, 490, 491, 492, 493, 613, 1155, 0, 495, 496,
	502, 503, 497, 498, 504, 505, 506, 507, 508, 214,
	510, 511, 509, 512, 513, 514, 1060, 515, 499, 500,
	516, 517, 1119, 518, 519, 520, 521, 522, 523, 614,
	0, 524, 0, 525, 526, 527, 528, 501, 529, 534,
	615, 530, 531, 532, 533, 1098, 0, 536, 537, 0,
	535, 216, 538, 539, 540, 541, 542, 543, 332, 544,
	0, 545, 617, 618, 619, 620, 0, 554, 0, 546,
	547, 548, 1099, 549, 1100, 0, 550, 551, 552, 553,
	0, 555, 556, 0, 0, 557, 558, 559, 561, 562,
	560, 563, 1061, 564, 0, 0, 565, 566, 567, 1505,
	624, 625, 0, 569, 568, 570, 626, 0, 0, 0,
	208, 571, 572, 627, 573, 574, 575, 0, 209, 0,
	0, 0, 3062, 0, 1161, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1151, 0,
	1834, 254, 255, 256, 257, 258, 259, 0, 260, 261,
	0, 0, 0, 0, 0, 1063, 0, 0, 0, 0,
	262, 263, 1103, 264, 265, 266, 267, 268, 577, 578,
	0, 269, 579, 270, 580, 0, 581, 271, 272, 273,
	274, 275, 276, 0, 1062, 0, 277, 582, 583, 584,
	0, 278, 279, 1069, 0, 1050, 0, 280, 281, 282,
	283, 284, 285, 286, 0, 0, 288, 289, 290, 287,
	291, 0, 292, 0, 293, 294, 295, 296, 297, 298,
	0, 299, 300, 301, 1104, 302, 303, 1053, 1051, 1052,
	1059, 1055, 1054, 1058, 304, 305, 306, 307, 0, 308,
	586, 587, 0, 312, 309, 310, 0, 313, 311, 0,
	314, 315, 316, 0, 0, 317, 318, 319, 0, 320,
	321, 0, 322, 323, 324, 0, 325, 326, 588, 327,
	328, 329, 331, 333, 330, 334, 335, 336, 337, 1094,
	1095, 0, 251, 0, 0, 0, 0, 0, 338, 339,
	340, 591, 0, 0, 0, 341, 0, 342, 0, 0,
	1105, 343, 344, 592, 593, 345, 346, 347, 348, 349,
	350, 351, 352, 0, 353, 1101, 0, 595, 354, 0,
	355, 356, 357, 358, 359, 1064, 1065, 1068, 433, 1107,
	360, 361, 0, 362, 363, 364, 365, 0, 0, 0,
	252, 366, 367, 369, 0, 1106, 368, 599, 600, 0,
	601, 0, 370, 371, 1108, 1066, 1109, 372, 373, 374,
	1110, 375, 0, 0, 0, 376, 377, 378, 379, 380,
	381, 1147, 382, 384, 383, 0, 385, 1102, 1111, 386,
	387, 1112, 0, 388, 0, 0, 0, 389, 390, 1057,
	1056, 391, 392, 393, 394, 0, 395, 396, 398, 400,
	397, 399, 401, 414, 402, 403, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 416, 0, 415, 1113,
	417, 418, 419, 424, 426, 427, 422, 423, 425, 428,
	429, 421, 1114, 420, 0, 253, 1115, 430, 431, 0,
	1067, 432, 605, 434, 435, 0, 0, 436, 0, 0,
	1153, 438, 439, 440, 0, 0, 441, 442, 606, 1116,
	443, 1117, 1096, 444, 445, 437, 446, 447, 448, 449,
	450, 451, 452, 453, 0, 454, 455, 608, 456, 457,
	458, 609, 459, 460, 461, 1097, 462, 611, 463, 464,
	0, 465, 0, 466, 467, 468, 469, 470, 471, 472,
	612, 473, 475, 474, 476, 0, 477, 0, 0, 0,
	0, 0, 478, 0, 480, 481, 482, 479, 483, 484,
	485, 486, 0, 487, 488, 489, 1118, 490, 491, 492,
	493, 613, 1155, 0, 495, 496, 502, 503, 497, 498,
	504, 505, 506, 507, 508, 0, 510, 511, 509, 512,
	513, 514, 1060, 515, 499, 500, 516, 517, 1119, 518,
	519, 520, 521, 522, 523, 614, 0, 524, 0, 525,
	526, 527, 528, 501, 529, 534, 615, 530, 531, 532,
	533, 1098, 0, 536, 537, 0, 535, 0, 538, 539,
	540, 541, 542, 543, 332, 544, 0, 545, 617, 618,
	619, 620, 0, 554, 0, 546, 547, 548, 1099, 549,
	1100, 0, 550, 551, 552, 553, 0, 555, 556, 0,
	0, 557, 558, 559, 561, 562, 560, 563, 1061, 564,
	0, 0, 565, 566, 567, 623, 624, 625, 0, 569,
	568, 570, 626, 0, 1143, 0, 1161, 571, 572, 627,
	573, 574, 575, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 254, 255, 256, 257, 258, 259, 0,
	260, 261, 0, 0, 1151, 0, 1149, 1063, 0, 0,
	0, 0, 262, 263, 1103, 264, 265, 266, 267, 268,
	577, 578, 0, 269, 579, 270, 580, 0, 581, 271,
	272, 273, 274, 275, 276, 0, 1062, 0, 277, 582,
	583, 584, 0, 278, 279, 1069, 0, 1050, 0, 280,
	281, 282, 283, 284, 285, 286, 0, 0, 288, 289,
	290, 287, 291, 0, 292, 0, 293, 294, 295, 296,
	297, 298, 0, 299, 300, 301, 1104, 302, 303, 1053,
	1051, 1052, 1059, 1055, 1054, 1058, 304, 305, 306, 307,
	0, 308, 586, 587, 0, 312, 309, 310, 0, 313,
	311, 0, 314, 315, 316, 0, 0, 317, 318, 319,
	0, 320, 321, 0, 322, 323, 324, 0, 325, 326,
	588, 327, 328, 329, 331, 333, 330, 334, 335, 336,
	337, 1094, 1095, 0, 251, 0, 0, 0, 0, 0,
	338, 339, 340, 591, 0, 0, 0, 341, 0, 342,
	0, 0, 1105, 343, 344, 592, 593, 345, 346, 347,
	348, 349, 350, 351, 352, 0, 353, 1101, 0, 595,
	354, 0, 355, 356, 357, 358, 359, 1064, 1065, 1068,
	433, 1107, 360, 361, 0, 362, 363, 364, 365, 0,
	0, 0, 252, 366, 367, 369, 0, 1106, 368, 599,
	600, 0, 601, 0, 370, 371, 1108, 1066, 1109, 372,
	373, 374, 1110, 375, 0, 0, 0, 376, 377, 378,
	379, 380, 381, 1147, 382, 384, 383, 0, 385, 1102,
	1111, 386, 387, 1112, 0, 388, 0, 0, 0, 389,
	390, 1057, 1056, 391, 392, 393, 394, 0, 395, 396,
	398, 400, 397, 399, 401, 414, 402, 403, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 416, 0,
	415, 1113, 417, 418, 419, 424, 426, 427, 422, 423,
	425, 428, 429, 421, 1114, 420, 0, 253, 1115, 430,
	431, 0, 1067, 432, 605, 434, 435, 0, 0, 436,
	0, 0, 1153, 438, 439, 440, 0, 0, 441, 442,
	606, 1116, 443, 1117, 1096, 444, 445, 437, 446, 447,
	448, 449, 450, 451, 452, 453, 0, 454, 455, 608,
	456, 457, 458, 609, 459, 460, 461, 1097, 462, 611,
	463, 464, 0, 465, 0, 466, 467, 468, 469, 470,
	471, 472, 612, 473, 475, 474, 476, 0, 477, 0,
	0, 0, 0, 0, 478, 0, 480, 481, 482, 479,
	483, 484, 485, 486, 0, 487, 488, 489, 1118, 490,
	491, 492, 493, 613, 1155, 0, 495, 496, 502, 503,
	497, 498, 504, 505, 506, 507, 508, 0, 510, 511,
	509, 512, 513, 514, 1060, 515, 499, 500, 516, 517,
	1119, 518, 519, 520, 521, 522, 523, 614, 0, 524,
	0, 525, 526, 527, 528, 501, 529, 534, 615, 530,
	531, 532, 533, 1098, 0, 536, 537, 0, 535, 0,
	538, 539, 540, 541, 542, 543, 332, 544, 0, 545,
	617, 618, 619, 620, 0, 554, 0, 546, 547, 548,
	1099, 549, 1100, 0, 550, 551, 552, 553, 0, 555,
	556, 0, 0, 557, 558, 559, 561, 562, 560, 563,
	1061, 564, 0, 0, 565, 566, 567, 623, 624, 625,
	0, 569, 568, 570, 626, 0, 1161, 0, 0, 571,
	572, 627, 573, 574, 575, 0, 0, 0, 0, 0,
	0, 0, 0, 254, 255, 256, 257, 258, 259, 0,
	260, 261, 0, 0, 0, 0, 1151, 1063, 1149, 0,
	0, 0, 262, 263, 1103, 264, 265, 266, 267, 268,
	577, 578, 0, 269, 579, 270, 580, 0, 581, 271,
	272, 273, 274, 275, 276, 0, 1062, 0, 277, 582,
	583, 584, 0, 278, 279, 1069, 0, 1050, 0, 280,
	281, 282, 283, 284, 285, 286, 0, 0, 288, 289,
	290, 287, 291, 0, 292, 0, 293, 294, 295, 296,
	297, 298, 0, 299, 300, 301, 1104, 302, 303, 1053,
	1051, 1052, 1059, 1055, 1054, 1058, 304, 305, 306, 307,
	0, 308, 586, 587, 0, 312, 309, 310, 0, 313,
	311, 0, 314, 315, 316, 0, 0, 317, 318, 319,
	0, 320, 321, 0, 322, 323, 324, 0, 325, 326,
	588, 327, 328, 329, 331, 333, 330, 334, 335, 336,
	337, 1094, 1095, 0, 251, 0, 0, 0, 0, 0,
	338, 339, 340, 591, 0, 0, 0, 341, 0, 342,
	0, 0, 1105, 343, 344, 592, 593, 345, 346, 347,
	348, 349, 350, 351, 352, 0, 353, 1101, 0, 595,
	354, 0, 355, 356, 357, 358, 359, 1064, 1065, 1068,
	433, 1107, 360, 361, 0, 362, 363, 364, 365, 0,
	0, 0, 252, 366, 367, 369, 0, 1106, 368, 599,
	600, 0, 601, 0, 370, 371, 1108, 1066, 1109, 372,
	373, 374, 1110, 375, 0, 0, 0, 376, 377, 378,
	379, 380, 381, 1147, 382, 384, 383, 0, 385, 1102,
	1111, 386, 387, 1112, 0, 388, 0, 0, 0, 389,
	390, 1057, 1056, 391, 392, 393, 394, 0, 395, 396,
	398, 400, 397, 399, 401, 414, 402, 403, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 416, 0,
	415, 1113, 417, 418, 419, 424, 426, 427, 422, 423,
	425, 428, 429, 421, 1114, 420, 0, 253, 1115, 430,
	431, 0, 1067, 432, 605, 434, 435, 0, 0, 436,
	0, 0, 1153, 438, 439, 440, 0, 0, 441, 442,
	606, 1116, 443, 1117, 1096, 444, 445, 437, 446, 447,
	448, 449, 450, 451, 452, 453, 0, 454, 455, 608,
	456, 457, 458, 609, 459, 460, 461, 1097, 462, 611,
	463, 464, 0, 465, 0, 466, 467, 468, 469, 470,
	471, 472, 612, 473, 475, 474, 476, 0, 477, 0,
	0, 0, 0, 0, 478, 0, 480, 481, 482, 479,
	483, 484, 485, 486, 0, 487, 488, 489, 1118, 490,
	491, 492, 493, 613, 1155, 0, 495, 496, 502, 503,
	497, 498, 504, 505, 506, 507, 508, 0, 510, 511,
	509, 512, 513, 514, 1060, 515, 499, 500, 516, 517,
	1119, 518, 519, 520, 521, 522, 523, 614, 0, 524,
	0, 525, 526, 527, 528, 501, 529, 534, 615, 530,
	531, 532, 533, 1098, 0, 536, 537, 0, 535, 0,
	538, 539, 540, 541, 542, 543, 332, 544, 0, 545,
	617, 618, 619, 620, 0, 554, 0, 546, 547, 548,
	1099, 549, 1100, 0, 550, 551, 552, 553, 0, 555,
	556, 0, 0, 557, 558, 559, 561, 562, 560, 563,
	1061, 564, 0, 0, 565, 566, 567, 623, 624, 625,
	0, 569, 568, 570, 626, 0, 1161, 0, 0, 571,
	572, 627, 573, 574, 575, 0, 0, 0, 0, 0,
	0, 0, 0, 254, 255, 256, 257, 258, 259, 0,
	260, 261, 0, 0, 0, 0, 1151, 1063, 1149, 0,
	0, 0, 262, 263, 1103, 264, 265, 266, 267, 268,
	577, 578, 0, 269, 579, 270, 580, 0, 581, 271,
	272, 273, 274, 275, 276, 0, 1062, 0, 277, 582,
	583, 584, 0, 278, 279, 1069, 0, 1050, 0, 280,
	281, 282, 283, 284, 285, 286, 0, 0, 288, 289,
	290, 287, 291, 0, 292, 0, 293, 294, 295, 296,
	297, 298, 0, 299, 300, 301, 1104, 302, 303, 1053,
	1051, 1052, 1059, 1055, 1054, 1058, 304, 305, 306, 307,
	0, 308, 586, 587, 0, 312, 309, 310, 0, 313,
	311, 0, 314, 315, 316, 0, 0, 317, 318, 319,
	0, 320, 321, 0, 322, 323, 324, 0, 325, 326,
	588, 327, 328, 329, 331, 333, 330, 334, 335, 336,
	337, 1094, 1095, 0, 251, 0, 0, 0, 0, 0,
	338, 339, 340, 591, 0, 0, 0, 341, 0, 342,
	0, 0, 1105, 343, 344, 592, 593, 345, 346, 347,
	348, 349, 350, 351, 352, 0, 353, 1101, 0, 595,
	354, 0, 355, 356, 357, 358, 359, 1064, 1065, 1068,
	433, 1107, 360, 361, 0, 362, 363, 364, 365, 0,
	0, 0, 252, 366, 367, 369, 0, 1106, 368, 599,
	600, 0, 601, 0, 370, 371, 1108, 1066, 1109, 372,
	373, 374, 1110, 375, 0, 0, 0, 376, 377, 378,
	379, 380, 381, 0, 382, 384, 383, 0, 385, 1102,
	1111, 386, 387, 1112, 0, 388, 0, 0, 0, 389,
	390, 1057, 1056, 391, 392, 393, 394, 0, 395, 396,
	398, 400, 397, 399, 401, 414, 402, 403, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 416, 0,
	415, 1113, 417, 418, 419, 424, 426, 427, 422, 423,
	425, 428, 429, 421, 1114, 420, 0, 253, 1115, 430,
	431, 0, 1067, 432, 605, 434, 435, 0, 0, 436,
	0, 0, 0, 438, 439, 440, 0, 0, 441, 442,
	606, 1116, 443, 1117, 1096, 444, 445, 437, 446, 447,
	448, 449, 450, 451, 452, 453, 0, 454, 455, 608,
	456, 457, 458, 609, 459, 460, 461, 1097, 462, 611,
	463, 464, 0, 465, 0, 466, 467, 468, 469, 470,
	471, 472, 612, 473, 475, 474, 476, 0, 477, 0,
	0, 0, 0, 0, 478, 0, 480, 481, 482, 479,
	483, 484, 485, 486, 0, 487, 488, 489, 1118, 490,
	491, 492, 493, 613, 1155, 0, 495, 496, 502, 503,
	497, 498, 504, 505, 506, 507, 508, 0, 510, 511,
	509, 512, 513, 514, 1060, 515, 499, 500, 516, 517,
	1119, 518, 519, 520, 521, 522, 523, 614, 0, 524,
	0, 525, 526, 527, 528, 501, 529, 534, 615, 530,
	531, 532, 533, 1098, 0, 536, 537, 0, 535, 0,
	538, 539, 540, 541, 542, 543, 332, 544, 0, 545,
	617, 618, 619, 620, 0, 554, 0, 546, 547, 548,
	1099, 549, 1100, 0, 550, 551, 552, 553, 0, 555,
	556, 0, 0, 557, 558, 559, 561, 562, 560, 563,
	1061, 564, 0, 0, 565, 566, 567, 623, 624, 625,
	0, 569, 568, 570, 626, 0, 985, 0, 1350, 571,
	572, 627, 573, 574, 575, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 254, 255, 256, 257, 258,
	259, 0, 260, 261, 0, 0, 0, 0, 1733, 576,
	0, 0, 0, 0, 262, 263, 1103, 264, 265, 266,
	267, 268, 577, 578, 0, 269, 579, 270, 580, 0,
	581, 271, 272, 273, 274, 275, 276, 0, 0, 0,
	277, 582, 583, 584, 0, 278, 279, 585, 0, 1316,
	0, 280, 281, 282, 283, 284, 285, 286, 0, 0,
	288, 289, 290, 287, 291, 0, 292, 0, 293, 294,
	295, 296, 297, 298, 0, 299, 300, 301, 1104, 302,
	303, 0, 0, 0, 0, 0, 0, 0, 304, 305,
	306, 307, 0, 308, 586, 587, 0, 312, 309, 310,
	0, 313, 311, 0, 314, 315, 316, 0, 0, 317,
	318, 319, 0, 320, 321, 0, 322, 323, 324, 0,
	325, 326, 588, 327, 328, 329, 331, 333, 330, 334,
	335, 336, 337, 589, 590, 0, 251, 0, 0, 0,
	0, 0, 338, 339, 340, 591, 0, 0, 0, 341,
	0, 342, 0, 0, 1105, 343, 344, 592, 593, 345,
	346, 347, 348, 349, 350, 351, 352, 0, 353, 594,
	0, 595, 354, 0, 355, 356, 357, 358, 359, 596,
	597, 598, 433, 1107, 360, 361, 0, 362, 363, 364,
	365, 0, 0, 0, 0, 366, 367, 369, 0, 1106,
	368, 599, 600, 0, 601, 0, 370, 371, 1108, 602,
	1109, 372, 373, 374, 1110, 375, 0, 0, 0, 376,
	377, 378, 379, 380, 381, 0, 382, 384, 383, 0,
	385, 603, 1111, 386, 387, 1112, 0, 388, 0, 0,
	0, 389, 390, 0, 0, 391, 392, 393, 394, 0,
	395, 396, 398, 400, 397, 399, 401, 414, 402, 403,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	416, 0, 415, 1113, 417, 418, 419, 424, 426, 427,
	422, 423, 425, 428, 429, 421, 1114, 420, 0, 0,
	1115, 430, 431, 0, 604, 432, 605, 434, 435, 0,
	0, 436, 0, 0, 0, 438, 439, 440, 0, 0,
	441, 442, 606, 1116, 443, 1117, 607, 444, 445, 437,
	446, 447, 448, 449, 450, 451, 452, 453, 0, 454,
	455, 608, 456, 457, 458, 609, 459, 460, 461, 610,
	462, 611, 463, 464, 0, 465, 0, 466, 467, 468,
	469, 470, 471, 472, 612, 473, 475, 474, 476, 0,
	477, 0, 0, 0, 0, 0, 478, 0, 480, 481,
	482, 479, 483, 484, 485, 486, 0, 487, 488, 489,
	1118, 490, 491, 492, 493, 613, 494, 0, 495, 496,
	502, 503, 497, 498, 504, 505, 506, 507, 508, 214,
	510, 511, 509, 512, 513, 514, 0, 515, 499, 500,
	516, 517, 1119, 518, 519, 520, 521, 522, 523, 614,
	0, 524, 0, 525, 526, 527, 528, 501, 529, 534,
	615, 530, 531, 532, 533, 616, 0, 536, 537, 0,
	535, 216, 538, 539, 540, 541, 542, 543, 332, 544,
	0, 545, 617, 618, 619, 620, 0, 554, 0, 546,
	547, 548, 621, 549, 622, 0, 550, 551, 552, 553,
	0, 555, 556, 0, 0, 557, 558, 559, 561, 562,
	560, 563, 0, 564, 0, 0, 565, 566, 567, 1505,
	624, 625, 0, 569, 568, 570, 626, 0, 0, 0,
	208, 571, 572, 627, 573, 574, 575, 0, 209, 0,
	0, 0, 1502, 0, 1350, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	178, 254, 255, 256, 257, 258, 259, 0, 260, 261,
	0, 0, 0, 0, 0, 576, 0, 0, 0, 0,
	262, 263, 1103, 264, 265, 266, 267, 268, 577, 578,
	0, 269, 579, 270, 580, 0, 581, 271, 272, 273,
	274, 275, 276, 0, 0, 0, 277, 582, 583, 584,
	0, 278, 279, 585, 0, 1316, 0, 280, 281, 282,
	283, 284, 285, 286, 0, 0, 288, 289, 290, 287,
	291, 0, 292, 0, 293, 294, 295, 296, 297, 298,
	0, 299, 300, 301, 1104, 302, 303, 0, 0, 0,
	0, 0, 0, 0, 304, 305, 306, 307, 0, 308,
	586, 587, 0, 312, 309, 310, 0, 313, 311, 0,
	314, 315, 316, 0, 0, 317, 318, 319, 0, 320,
	321, 0, 322, 323, 324, 0, 325, 326, 588, 327,
	328, 329, 331, 333, 330, 334, 335, 336, 337, 589,
	590, 0, 251, 0, 0, 0, 0, 0, 338, 339,
	340, 591, 0, 0, 0, 341, 0, 342, 0, 0,
	1105, 343, 344, 592, 593, 345, 346, 347, 348, 349,
	350, 351, 352, 0, 353, 594, 0, 595, 354, 0,
	355, 356, 357, 358, 359, 596, 597, 598, 433, 1107,
	360, 361, 0, 362, 363, 364, 365, 0, 0, 0,
	0, 366, 367, 369, 0, 1106, 368, 599, 600, 0,
	601, 0, 370, 371, 1108, 602, 1109, 372, 373, 374,
	1110, 375, 0, 0, 0, 376, 377, 378, 379, 380,
	381, 0, 382, 384, 383, 0, 385, 603, 1111, 386,
	387, 1112, 0, 388, 0, 0, 0, 389, 390, 0,
	0, 391, 392, 393, 394, 0, 395, 396, 398, 400,
	397, 399, 401, 414, 402, 403, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 416, 0, 415, 1113,
	417, 418, 419, 424, 426, 427, 422, 423, 425, 428,
	429, 421, 1114, 420, 0, 0, 1115, 430, 431, 0,
	604, 432, 605, 434, 435, 0, 0, 436, 0, 0,
	0, 438, 439, 440, 0, 0, 441, 442, 606, 1116,
	443, 1117, 607, 444, 445, 437, 446, 447, 448, 449,
	450, 451, 452, 453, 0, 454, 455, 608, 456, 457,
	458, 609, 459, 460, 461, 610, 462, 611, 463, 464,
	0, 465, 0, 466, 467, 468, 469, 470, 471, 472,
	612, 473, 475, 474, 476, 0, 477, 0, 0, 0,
	0, 0, 478, 0, 480, 481, 482, 479, 483, 484,
	485, 486, 0, 487, 488, 489, 1118, 490, 491, 492,
	493, 613, 494, 0, 495, 496, 502, 503, 497, 498,
	504, 505, 506, 507, 508, 214, 510, 511, 509, 512,
	513, 514, 0, 515, 499, 500, 516, 517, 1119, 518,
	519, 520, 521, 522, 523, 614, 0, 524, 0, 525,
	526, 527, 528, 501, 529, 534, 615, 530, 531, 532,
	533, 616, 0, 536, 537, 0, 535, 216, 538, 539,
	540, 541, 542, 543, 332, 544, 0, 545, 617, 618,
	619, 620, 0, 554, 0, 546, 547, 548, 621, 549,
	622, 0, 550, 551, 552, 553, 0, 555, 556, 0,
	0, 557, 558, 559, 561, 562, 560, 563, 0, 564,
	0, 0, 565, 566, 567, 1505, 624, 625, 0, 569,
	568, 570, 626, 0, 0, 0, 208, 571, 572, 627,
	573, 574, 575, 0, 209, 0, 0, 0, 0, 0,
	1350, 1349, 0, 0, 0, 0, 1347, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 178, 254, 255, 256,
	257, 258, 259, 0, 260, 261, 0, 0, 0, 0,
	0, 576, 0, 0, 0, 0, 262, 263, 1103, 264,
	265, 266, 267, 268, 577, 578, 0, 269, 579, 270,
	580, 0, 581, 271, 272, 273, 274, 275, 276, 0,
	0, 0, 277, 582, 583, 584, 0, 278, 279, 585,
	0, 1316, 0, 280, 281, 282, 283, 284, 285, 286,
	0, 0, 288, 289, 290, 287, 291, 0, 292, 0,
	293, 294, 295, 296, 297, 298, 0, 299, 300, 301,
	1104, 302, 303, 0, 0, 0, 0, 0, 0, 0,
	304, 305, 306, 307, 0, 308, 586, 587, 0, 312,
	309, 310, 0, 313, 311, 0, 314, 315, 316, 0,
	0, 317, 318, 319, 0, 320, 321, 0, 322, 323,
	324, 0, 325, 326, 588, 327, 328, 329, 331, 333,
	330, 334, 335, 336, 337, 589, 590, 0, 251, 0,
	0, 0, 0, 0, 338, 339, 340, 591, 0, 0,
	0, 341, 0, 342, 0, 0, 1105, 343, 344, 592,
	593, 345, 346, 347, 348, 349, 350, 351, 352, 0,
	353, 594, 0, 595, 354, 0, 355, 356, 357, 358,
	359, 596, 597, 598, 433, 1107, 360, 361, 0, 362,
	363, 364, 365, 0, 0, 0, 0, 366, 367, 369,
	0, 1106, 368, 599, 600, 0, 601, 0, 370, 371,
	1108, 602, 1109, 372, 373, 374, 1110, 375, 0, 0,
	0, 376, 377, 378, 379, 380, 381, 0, 382, 384,
	383, 0, 385, 603, 1111, 386, 387, 1112, 0, 388,
	0, 0, 0, 389, 390, 0, 0, 391, 392, 393,
	394, 0, 395, 396, 398, 400, 397, 399, 401, 414,
	402, 403, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 416, 0, 415, 1113, 417, 418, 419, 424,
	426, 427, 422, 423, 425, 428, 429, 421, 1114, 420,
	0, 0, 1115, 430, 431, 0, 604, 432, 605, 434,
	435, 0, 0, 436, 0, 0, 0, 438, 439, 440,
	0, 0, 441, 442, 606, 1116, 443, 1117, 607, 444,
	445, 437, 446, 447, 448, 449, 450, 451, 452, 453,
	0, 454, 455, 608, 456, 457, 458, 609, 459, 460,
	461, 610, 462, 611, 463, 464, 0, 465, 0, 466,
	467, 468, 469, 470, 471, 472, 612, 473, 475, 474,
	476, 0, 477, 0, 0, 0, 0, 0, 478, 0,
	480, 481, 482, 479, 483, 484, 485, 486, 0, 487,
	488, 489, 1118, 490, 491, 492, 493, 613, 494, 0,
	495, 496, 502, 503, 497, 498, 504, 505, 506, 507,
	508, 0, 510, 511, 509, 512, 513, 514, 0, 515,
	499, 500, 516, 517, 1119, 518, 519, 520, 521, 522,
	523, 614, 0, 524, 0, 525, 526, 527, 528, 501,
	529, 534, 615, 530, 531, 532, 533, 616, 0, 536,
	537, 0, 535, 0, 538, 539, 540, 541, 542, 543,
	332, 544, 0, 545, 617, 618, 619, 620, 0, 554,
	0, 546, 547, 548, 621, 549, 622, 0, 550, 551,
	552, 553, 0, 555, 556, 0, 0, 557, 558, 559,
	561, 562, 560, 563, 0, 564, 0, 0, 565, 566,
	567, 623, 624, 625, 0, 569, 568, 570, 626, 0,
	0, 0, 0, 571, 572, 627, 573, 574, 575, 1350,
	1349, 0, 0, 0, 0, 1347, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 254, 255, 256, 257,
	258, 259, 1527, 260, 261, 0, 0, 0, 0, 0,
	576, 0, 0, 0, 0, 262, 263, 1103, 264, 265,
	266, 267, 268, 577, 578, 0, 269, 579, 270, 580,
	0, 581, 271, 272, 273, 274, 275, 276, 0, 0,
	0, 277, 582, 583, 584, 0, 278, 279, 585, 0,
	1316, 0, 280, 281, 282, 283, 284, 285, 286, 0,
	0, 288, 289, 290, 287, 291, 0, 292, 0, 293,
	294, 295, 296, 297, 298, 0, 299, 300, 301, 1104,
	302, 303, 0, 0, 0, 0, 0, 0, 0, 304,
	305, 306, 307, 0, 308, 586, 587, 0, 312, 309,
	310, 0, 313, 311, 0, 314, 315, 316, 0, 0,
	317, 318, 319, 0, 320, 321, 0, 322, 323, 324,
	0, 325, 326, 588, 327, 328, 329, 331, 333, 330,
	334, 335, 336, 337, 589, 590, 0, 251, 0, 0,
	0, 0, 0, 338, 339, 340, 591, 0, 0, 0,
	341, 0, 342, 0, 0, 1105, 343, 344, 592, 593,
	345, 346, 347, 348, 349, 350, 351, 352, 0, 353,
	594, 0, 595, 354, 0, 355, 356, 357, 358, 359,
	596, 597, 598, 433, 1107, 360, 361, 0, 362, 363,
	364, 365, 0, 0, 0, 0, 366, 367, 369, 0,
	1106, 368, 599, 600, 0, 601, 0, 370, 371, 1108,
	602, 1109, 372, 373, 374, 1110, 375, 0, 0, 0,
	376, 377, 378, 379, 380, 381, 0, 382, 384, 383,
	0, 385, 603, 1111, 386, 387, 1112, 0, 388, 0,
	0, 0, 389, 390, 0, 0, 391, 392, 393, 394,
	0, 395, 396, 398, 400, 397, 399, 401, 414, 402,
	403, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 416, 0, 415, 1113, 417, 418, 419, 424, 426,
	427, 422, 423, 425, 428, 429, 421, 1114, 420, 0,
	0, 1115, 430, 431, 0, 604, 432, 605, 434, 435,
	0, 0, 436, 0, 0, 0, 438, 439, 440, 0,
	0, 441, 442, 606, 1116, 443, 1117, 607, 444, 445,
	437, 446, 447, 448, 449, 450, 451, 452, 453, 0,
	454, 455, 608, 456, 457, 458, 609, 459, 460, 461,
	610, 462, 611, 463, 464, 0, 465, 0, 466, 467,
	468, 469, 470, 471, 472, 612, 473, 475, 474, 476,
	0, 477, 0, 0, 0, 0, 0, 478, 0, 480,
	481, 482, 479, 483, 484, 485, 486, 0, 487, 488,
	489, 1118, 490, 491, 492, 493, 613, 494, 0, 495,
	496, 502, 503, 497, 498, 504, 505, 506, 507, 508,
	0, 510, 511, 509, 512, 513, 514, 0, 515, 499,
	500, 516, 517, 1119, 518, 519, 520, 521, 522, 523,
	614, 0, 524, 0, 525, 526, 527, 528, 501, 529,
	534, 615, 530, 531, 532, 533, 616, 0, 536, 537,
	0, 535, 0, 538, 539, 540, 541, 542, 543, 332,
	544, 0, 545, 617, 618, 619, 620, 0, 554, 0,
	546, 547, 548, 621, 549, 622, 0, 550, 551, 552,
	553, 0, 555, 556, 0, 0, 557, 558, 559, 561,
	562, 560, 563, 0, 564, 0, 0, 565, 566, 567,
	623, 624, 625, 0, 569, 568, 570, 626, 0, 0,
	0, 0, 571, 572, 627, 573, 574, 575, 1350, 2036,
	0, 0, 0, 0, 2037, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 254, 255, 256, 257, 258,
	259, 3318, 260, 261, 0, 0, 0, 0, 0, 576,
	0, 0, 0, 0, 262, 263, 1103, 264, 265, 266,
	267, 268, 577, 578, 0, 269, 579, 270, 580, 0,
	581, 271, 272, 273, 274, 275, 276, 0, 0, 0,
	277, 582, 583, 584, 0, 278, 279, 585, 0, 1316,
	0, 280, 281, 282, 283, 284, 285, 286, 0, 0,
	288, 289, 290, 287, 291, 0, 292, 0, 293, 294,
	295, 296, 297, 298, 0, 299, 300, 301, 1104, 302,
	303, 0, 0, 0, 0, 0, 0, 0, 304, 305,
	306, 307, 0, 308, 586, 587, 0, 312, 309, 310,
	0, 313, 311, 0, 314, 315, 316, 0, 0, 317,
	318, 319, 0, 320, 321, 0, 322, 323, 324, 0,
	325, 326, 588, 327, 328, 329, 331, 333, 330, 334,
	335, 336, 337, 589, 590, 0, 251, 0, 0, 0,
	0, 0, 338, 339, 340, 591, 0, 0, 0, 341,
	0, 342, 0, 0, 1105, 343, 344, 592, 593, 345,
	346, 347, 348, 349, 350, 351, 352, 0, 353, 594,
	0, 595, 354, 0, 355, 356, 357, 358, 359, 596,
	597, 598, 433, 1107, 360, 361, 0, 362, 363, 364,
	365, 0, 0, 0, 0, 366, 367, 369, 0, 1106,
	368, 599, 600, 0, 601, 0, 370, 371, 1108, 602,
	1109, 372, 373, 374, 1110, 375, 0, 0, 0, 376,
	377, 378, 379, 380, 381, 0, 2035, 384, 383, 0,
	385, 603, 1111, 386, 387, 1112, 0, 388, 0, 0,
	0, 389, 390, 0, 0, 391, 392, 393, 394, 0,
	395, 396, 398, 400, 397, 399, 401, 414, 402, 403,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	416, 0, 415, 1113, 417, 418, 419, 424, 426, 427,
	422, 423, 425, 428, 429, 421, 1114, 420, 0, 0,
	1115, 430, 431, 0, 604, 432, 605, 434, 435, 0,
	0, 436, 0, 0, 0, 438, 439, 440, 0, 0,
	441, 442, 606, 1116, 443, 1117, 607, 444, 445, 437,
	446, 447, 448, 449, 450, 451, 452, 453, 0, 454,
	455, 608, 456, 457, 458, 609, 459, 460, 461, 610,
	462, 611, 463, 464, 0, 465, 0, 466, 467, 468,
	469, 470, 471, 472, 612, 473, 475, 474, 476, 0,
	477, 0, 0, 0, 0, 0, 478, 0, 480, 481,
	482, 479, 483, 484, 485, 486, 0, 487, 488, 489,
	1118, 490, 491, 492, 493, 613, 494, 0, 495, 496,
	502, 503, 497, 498, 504, 505, 506, 507, 508, 0,
	510, 511, 509, 512, 513, 514, 0, 515, 499, 500,
	516, 517, 1119, 518, 519, 520, 521, 522, 523, 614,
	0, 524, 0, 525, 526, 527, 528, 501, 529, 534,
	615, 530, 531, 532, 533, 616, 0, 536, 537, 0,
	535, 0, 538, 539, 540, 541, 542, 543, 332, 544,
	0, 545, 617, 618, 619, 620, 0, 554, 0, 546,
	547, 548, 621, 549, 622, 0, 550, 551, 552, 553,
	0, 555, 556, 0, 0, 557, 558, 559, 561, 562,
	560, 563, 0, 564, 0, 0, 565, 566, 567, 623,
	624, 625, 0, 569, 568, 570, 626, 0, 0, 0,
	0, 571, 572, 627, 573, 574, 575, 1350, 1349, 0,
	0, 0, 0, 1347, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 254, 255, 256, 257, 258, 259,
	1527, 260, 261, 0, 0, 0, 0, 0, 576, 0,
	0, 0, 0, 262, 263, 1103, 264, 265, 266, 267,
	268, 577, 578, 0, 269, 579, 270, 580, 0, 581,
	271, 272, 273, 274, 275, 276, 0, 0, 0, 277,
	582, 583, 584, 0, 278, 279, 585, 0, 1316, 0,
	280, 281, 282, 283, 284, 285, 286, 0, 0, 288,
	289, 290, 287, 291, 0, 292, 0, 293, 294, 295,
	296, 297, 298, 0, 299, 300, 301, 1104, 302, 303,
	0, 0, 0, 0, 0, 0, 0, 304, 305, 306,
	307, 0, 308, 586, 587, 0, 312, 309, 310, 0,
	313, 311, 0, 314, 315, 316, 0, 0, 317, 318,
	319, 0, 320, 321, 0, 322, 323, 324, 0, 325,
	326, 588, 327, 328, 329, 331, 333, 330, 334, 335,
	336, 337, 589, 590, 0, 251, 0, 0, 0, 0,
	0, 338, 339, 340, 591, 0, 0, 0, 341, 0,
	342, 0, 0, 1105, 343, 344, 592, 593, 345, 346,
	347, 348, 349, 350, 351, 352, 0, 353, 594, 0,
	595, 354, 0, 355, 356, 357, 358, 359, 596, 597,
	598, 433, 1107, 360, 361, 0, 362, 363, 364, 365,
	0, 0, 0, 0, 366, 367, 369, 0, 1106, 368,
	599, 600, 0, 601, 0, 370, 371, 1108, 602, 1109,
	372, 373, 374, 1110, 375, 0, 0, 0, 376, 377,
	378, 379, 380, 381, 0, 382, 384, 383, 0, 385,
	603, 1111, 386, 387, 1112, 0, 388, 0, 0, 0,
	389, 390, 0, 0, 391, 392, 393, 394, 0, 395,
	396, 398, 400, 397, 399, 401, 414, 402, 403, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 416,
	0, 415, 1113, 417, 418, 419, 424, 426, 427, 422,
	423, 425, 428, 429, 421, 1114, 420, 0, 0, 1115,
	430, 431, 0, 604, 432, 605, 434, 435, 0, 0,
	436, 0, 0, 0, 438, 439, 440, 0, 0, 441,
	442, 606, 1116, 443, 1117, 607, 444, 445, 437, 446,
	447, 448, 449, 450, 451, 452, 453, 0, 454, 455,
	608, 456, 457, 458, 609, 459, 460, 461, 610, 462,
	611, 463, 464, 0, 465, 0, 466, 467, 468, 469,
	470, 471, 472, 612, 473, 475, 474, 476, 0, 477,
	0, 0, 0, 0, 0, 478, 0, 480, 481, 482,
	479, 483, 484, 485, 486, 0, 487, 488, 489, 1118,
	490, 491, 492, 493, 613, 494, 0, 495, 496, 502,
	503, 497, 498, 504, 505, 506, 507, 508, 0, 510,
	511, 509, 512, 513, 514, 0, 515, 499, 500, 516,
	517, 1119, 518, 519, 520, 521, 522, 523, 614, 0,
	524, 0, 525, 526, 527, 528, 501, 529, 534, 615,
	530, 531, 532, 533, 616, 0, 536, 537, 0, 535,
	0, 538, 539, 540, 541, 542, 543, 332, 544, 0,
	545, 617, 618, 619, 620, 0, 554, 0, 546, 547,
	548, 621, 549, 622, 0, 550, 551, 552, 553, 0,
	555, 556, 0, 0, 557, 558, 559, 561, 562, 560,
	563, 0, 564, 0, 0, 565, 566, 567, 623, 624,
	625, 0, 569, 568, 570, 626, 1161, 0, 0, 0,
	571, 572, 627, 573, 574, 575, 0, 0, 0, 0,
	0, 0, 0, 254, 255, 256, 257, 258, 259, 0,
	260, 261, 0, 0, 0, 0, 0, 1063, 0, 1511,
	0, 0, 262, 263, 1103, 264, 265, 266, 267, 268,
	577, 578, 0, 269, 579, 270, 580, 0, 581, 271,
	272, 273, 274, 275, 276, 0, 1062, 0, 277, 582,
	583, 584, 0, 278, 279, 1069, 0, 1050, 0, 280,
	281, 282, 283, 284, 285, 286, 0, 0, 288, 289,
	290, 287, 291, 0, 292, 0, 293, 294, 295, 296,
	297, 298, 0, 299, 300, 301, 1104, 302, 303, 1053,
	1051, 1052, 1059, 1055, 1054, 1058, 304, 305, 306, 307,
	0, 308, 586, 587, 0, 312, 309, 310, 0, 313,
	311, 0, 314, 315, 316, 0, 0, 317, 318, 319,
	0, 320, 321, 0, 322, 323, 324, 0, 325, 326,
	588, 327, 328, 329, 331, 333, 330, 334, 335, 336,
	337, 1094, 1095, 0, 251, 0, 0, 0, 0, 0,
	338, 339, 340, 591, 0, 0, 0, 341, 0, 342,
	0, 0, 1105, 343, 344, 592, 593, 345, 346, 347,
	348, 349, 350, 351, 352, 0, 353, 1101, 0, 595,
	354, 0, 355, 356, 357, 358, 359, 1064, 1065, 1068,
	433, 1107, 360, 361, 0, 362, 363, 364, 365, 0,
	0, 0, 252, 366, 367, 369, 0, 1106, 368, 599,
	600, 0, 601, 0, 370, 371, 1108, 1066, 1109, 372,
	373, 374, 1110, 375, 0, 0, 0, 376, 377, 378,
	379, 380, 381, 0, 382, 384, 383, 0, 385, 1102,
	1111, 386, 387, 1112, 0, 388, 0, 0, 0, 389,
	390, 1057, 1056, 391, 392, 393, 394, 0, 395, 396,
	398, 400, 397, 399, 401, 414, 402, 403, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 416, 0,
	415, 1113, 417, 418, 419, 424, 426, 427, 422, 423,
	425, 428, 429, 421, 1114, 420, 0, 253, 1115, 430,
	431, 0, 1067, 432, 605, 434, 435, 0, 0, 436,
	0, 0, 0, 438, 439, 440, 0, 0, 441, 442,
	606, 1116, 443, 1117, 1096, 444, 445, 437, 446, 447,
	448, 449, 450, 451, 452, 453, 0, 454, 455, 608,
	456, 457, 458, 609, 459, 460, 461, 1097, 462, 611,
	463, 464, 0, 465, 0, 466, 467, 468, 469, 470,
	471, 472, 612, 473, 475, 474, 476, 0, 477, 0,
	0, 0, 0, 0, 478, 0, 480, 481, 482, 479,
	483, 484, 485, 486, 0, 487, 488, 489, 1118, 490,
	491, 492, 493, 613, 494, 0, 495, 496, 502, 503,
	497, 498, 504, 505, 506, 507, 508, 0, 510, 511,
	509, 512, 513, 514, 1060, 515, 499, 500, 516, 517,
	1119, 518, 519, 520, 521, 522, 523, 614, 0, 524,
	0, 525, 526, 527, 528, 501, 529, 534, 615, 530,
	531, 532, 533, 1098, 0, 536, 537, 0, 535, 0,
	538, 539, 540, 541, 542, 543, 332, 544, 0, 545,
	617, 618, 619, 620, 0, 554, 0, 546, 547, 548,
	1099, 549, 1100, 0, 550, 551, 552, 553, 0, 555,
	556, 0, 0, 557, 558, 559, 561, 562, 560, 563,
	1061, 564, 0, 0, 565, 566, 567, 623, 624, 625,
	0, 569, 568, 570, 626, 985, 0, 248, 0, 571,
	572, 627, 573, 574, 575, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 254, 255, 256, 257, 258, 259,
	0, 260, 261, 0, 0, 0, 0, 0, 576, 0,
	0, 0, 0, 262, 263, 0, 264, 265, 266, 267,
	268, 577, 578, 0, 269, 579, 270, 580, 0, 581,
	271, 272, 273, 274, 275, 276, 0, 0, 0, 277,
	582, 583, 584, 0, 278, 279, 585, 0, 0, 0,
	280, 281, 282, 283, 284, 285, 286, 0, 0, 288,
	289, 290, 287, 291, 0, 292, 0, 293, 294, 295,
	296, 297, 298, 0, 299, 300, 301, 0, 302, 303,
	0, 0, 0, 0, 0, 0, 0, 304, 305, 306,
	307, 0, 308, 586, 587, 0, 312, 309, 310, 0,
	313, 311, 0, 314, 315, 316, 0, 0, 317, 318,
	319, 0, 320, 321, 0, 322, 323, 324, 0, 325,
	326, 588, 327, 328, 329, 331, 333, 330, 334, 335,
	336, 337, 589, 590, 0, 0, 0, 0, 0, 0,
	0, 338, 339, 340, 591, 0, 0, 0, 341, 0,
	342, 0, 0, 0, 343, 344, 592, 593, 345, 346,
	347, 348, 349, 350, 351, 352, 0, 353, 594, 0,
	595, 354, 0, 355, 356, 357, 358, 359, 596, 597,
	598, 433, 0, 360, 361, 0, 362, 363, 364, 365,
	0, 0, 0, 0, 366, 367, 369, 0, 0, 368,
	599, 600, 0, 601, 0, 370, 371, 0, 602, 0,
	372, 373, 374, 0, 375, 0, 0, 0, 376, 377,
	378, 379, 380, 381, 0, 382, 384, 383, 0, 385,
	603, 0, 386, 387, 0, 0, 388, 0, 0, 0,
	389, 390, 0, 0, 391, 392, 393, 394, 0, 395,
	396, 398, 400, 397, 399, 401, 414, 402, 403, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 416,
	0, 415, 0, 417, 418, 419, 424, 426, 427, 422,
	423, 425, 428, 429, 421, 0, 420, 0, 0, 0,
	430, 431, 0, 604, 432, 605, 434, 435, 0, 0,
	436, 0, 0, 0, 438, 439, 440, 0, 0, 441,
	442, 606, 0, 443, 0, 607, 444, 445, 437, 446,
	447, 448, 449, 450, 451, 452, 453, 0, 454, 455,
	608, 456, 457, 458, 609, 459, 460, 461, 610, 462,
	611, 463, 464, 0, 465, 0, 466, 467, 468, 469,
	470, 471, 472, 612, 473, 475, 474, 476, 0, 477,
	0, 0, 0, 0, 0, 478, 0, 480, 481, 482,
	479, 483, 484, 485, 486, 0, 487, 488, 489, 0,
	490, 491, 492, 493, 613, 494, 0, 495, 496, 502,
	503, 497, 498, 504, 505, 506, 507, 508, 214, 510,
	511, 509, 512, 513, 514, 0, 515, 499, 500, 516,
	517, 0, 518, 519, 520, 521, 522, 523, 614, 0,
	524, 0, 525, 526, 527, 528, 501, 529, 534, 615,
	530, 531, 532, 533, 616, 0, 536, 537, 0, 535,
	216, 538, 539, 540, 541, 542, 543, 332, 544, 0,
	545, 617, 618, 619, 620, 0, 554, 0, 546, 547,
	548, 621, 549, 622, 0, 550, 551, 552, 553, 0,
	555, 556, 0, 0, 557, 558, 559, 561, 562, 560,
	563, 0, 564, 0, 0, 565, 566, 567, 1505, 624,
	625, 248, 569, 568, 570, 626, 0, 0, 0, 208,
	571, 572, 627, 573, 574, 575, 0, 209, 254, 255,
	256, 257, 258, 259, 0, 260, 261, 0, 0, 0,
	0, 0, 576, 0, 0, 0, 0, 262, 263, 178,
	264, 265, 266, 267, 268, 577, 578, 0, 269, 579,
	270, 580, 0, 581, 271, 272, 273, 274, 275, 276,
	0, 0, 0, 277, 582, 583, 584, 0, 278, 279,
	585, 0, 0, 0, 280, 281, 282, 283, 284, 285,
	286, 0, 0, 288, 289, 290, 287, 291, 0, 292,
	0, 293, 294, 295, 296, 297, 298, 0, 299, 300,
	301, 0, 302, 303, 0, 0, 0, 0, 0, 0,
	0, 304, 305, 306, 307, 0, 308, 586, 587, 0,
	312, 309, 310, 0, 313, 311, 0, 314, 315, 316,
	0, 0, 317, 318, 319, 0, 320, 321, 0, 322,
	323, 324, 0, 325, 326, 588, 327, 328, 329, 331,
	333, 330, 334, 335, 336, 337, 589, 590, 0, 251,
	0, 0, 0, 0, 0, 338, 339, 340, 591, 0,
	0, 0, 341, 0, 342, 0, 0, 0, 343, 344,
	592, 593, 345, 346, 347, 348, 349, 350, 351, 352,
	0, 353, 594, 0, 595, 354, 0, 355, 356, 357,
	358, 359, 596, 597, 598, 433, 0, 360, 361, 0,
	362, 363, 364, 365, 0, 0, 0, 252, 366, 367,
	369, 0, 0, 368, 599, 600, 0, 601, 0, 370,
	371, 0, 602, 0, 372, 373, 374, 0, 375, 0,
	0, 0, 376, 377, 378, 379, 380, 381, 0, 382,
	384, 383, 0, 385, 603, 0, 386, 387, 0, 0,
	388, 0, 0, 0, 389, 390, 0, 0, 391, 392,
	393, 394, 0, 395, 396, 398, 400, 397, 399, 401,
	414, 402, 403, 404, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 416, 0, 415, 0, 417, 418, 419,
	424, 426, 427, 422, 423, 425, 428, 429, 421, 0,
	420, 0, 253, 0, 430, 431, 0, 604, 432, 605,
	434, 435, 0, 0, 436, 0, 0, 0, 438, 439,
	440, 0, 0, 441, 442, 606, 0, 443, 0, 607,
	444, 445, 437, 446, 447, 448, 449, 450, 451, 452,
	453, 0, 454, 455, 608, 456, 457, 458, 609, 459,
	460, 461, 610, 462, 611, 463, 464, 0, 465, 0,
	466, 467, 468, 469, 470, 471, 472, 612, 473, 475,
	474, 476, 0, 477, 0, 0, 0, 0, 0, 478,
	0, 480, 481, 482, 479, 483, 484, 485, 486, 0,
	487, 488, 489, 0, 490, 491, 492, 493, 613, 494,
	0, 495, 496, 502, 503, 497, 498, 504, 505, 506,
	507, 508, 0, 510, 511, 509, 512, 513, 514, 0,
	515, 499, 500, 516, 517, 0, 518, 519, 520, 521,
	522, 523, 614, 0, 524, 0, 525, 526, 527, 528,
	501, 529, 534, 615, 530, 531, 532, 533, 616, 0,
	536, 537, 0, 535, 0, 538, 539, 540, 541, 542,
	543, 332, 544, 0, 545, 617, 618, 619, 620, 0,
	554, 0, 546, 547, 548, 621, 549, 622, 0, 550,
	551, 552, 553, 0, 555, 556, 0, 0, 557, 558,
	559, 561, 562, 560, 563, 0, 564, 0, 0, 565,
	566, 567, 623, 624, 625, 0, 569, 568, 570, 626,
	248, 2799, 0, 0, 571, 572, 627, 573, 574, 575,
	0, 0, 0, 0, 0, 0, 0, 254, 255, 256,
	257, 258, 259, 0, 260, 261, 0, 0, 0, 0,
	0, 576, 0, 1848, 0, 0, 262, 263, 0, 264,
	265, 266, 267, 268, 577, 578, 0, 269, 579, 270,
	580, 0, 581, 271, 272, 273, 274, 275, 276, 0,
	0, 0, 277, 582, 583, 584, 0, 278, 279, 585,
	0, 0, 0, 280, 281, 282, 283, 284, 285, 286,
	0, 0, 288, 289, 290, 287, 291, 0, 292, 0,
	293, 294, 295, 296, 297, 298, 0, 299, 300, 301,
	0, 302, 303, 0, 0, 0, 0, 0, 0, 0,
	304, 305, 306, 307, 0, 308, 586, 587, 0, 312,
	309, 310, 0, 313, 311, 0, 314, 315, 316, 0,
	0, 317, 318, 319, 0, 320, 321, 0, 322, 323,
	324, 0, 325, 326, 588, 327, 328, 329, 331, 333,
	330, 334, 335, 336, 337, 589, 590, 0, 0, 0,
	0, 0, 0, 0, 338, 339, 340, 591, 0, 0,
	0, 341, 0, 342, 0, 0, 0, 343, 344, 592,
	593, 345, 346, 347, 348, 349, 350, 351, 352, 0,
	353, 594, 0, 595, 354, 0, 355, 356, 357, 358,
	359, 596, 597, 598, 433, 0, 360, 361, 0, 362,
	363, 364, 365, 0, 0, 0, 0, 366, 367, 369,
	0, 0, 368, 599, 600, 0, 601, 0, 370, 371,
	0, 602, 0, 372, 373, 374, 0, 375, 0, 0,
	0, 376, 377, 378, 379, 380, 381, 0, 382, 384,
	383, 0, 385, 603, 0, 386, 387, 0, 0, 388,
	0, 0, 0, 389, 390, 0, 0, 391, 392, 393,
	394, 0, 395, 396, 398, 400, 397, 399, 401, 414,
	402, 403, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 416, 0, 415, 0, 417, 418, 419, 424,
	426, 427, 422, 423, 425, 428, 429, 421, 0, 420,
	0, 0, 0, 430, 431, 0, 604, 432, 605, 434,
	435, 0, 0, 436, 0, 0, 0, 438, 439, 440,
	0, 0, 441, 442, 606, 0, 443, 0, 607, 444,
	445, 437, 446, 447, 448, 449, 450, 451, 452, 453,
	0, 454, 455, 608, 456, 457, 458, 609, 459, 460,
	461, 610, 462, 611, 463, 464, 0, 465, 0, 466,
	467, 468, 469, 470, 471, 472, 612, 473, 475, 474,
	476, 0, 477, 0, 0, 0, 0, 0, 478, 0,
	480, 481, 482, 479, 483, 484, 485, 486, 0, 487,
	488, 489, 0, 490, 491, 492, 493, 613, 494, 0,
	495, 496, 502, 503, 497, 498, 504, 505, 506, 507,
	508, 0, 510, 511, 509, 512, 513, 514, 0, 515,
	499, 500, 516, 517, 0, 518, 519, 520, 521, 522,
	523, 614, 0, 524, 0, 525, 526, 527, 528, 501,
	529, 534, 615, 530, 531, 532, 533, 616, 0, 536,
	537, 0, 535, 0, 538, 539, 540, 541, 542, 543,
	332, 544, 0, 545, 617, 618, 619, 620, 0, 554,
	0, 546, 547, 548, 621, 549, 622, 0, 550, 551,
	552, 553, 0, 555, 556, 0, 0, 557, 558, 559,
	561, 562, 560, 563, 0, 564, 0, 0, 565, 566,
	567, 623, 624, 625, 248, 569, 568, 570, 626, 0,
	0, 0, 0, 571, 572, 627, 573, 574, 575, 0,
	0, 254, 255, 256, 257, 258, 259, 0, 260, 261,
	0, 0, 0, 0, 0, 576, 0, 0, 0, 0,
	262, 263, 4375, 264, 265, 266, 267, 268, 577, 578,
	0, 269, 579, 270, 580, 0, 581, 271, 272, 273,
	274, 275, 276, 0, 0, 0, 277, 582, 583, 584,
	0, 278, 279, 585, 0, 0, 0, 280, 281, 282,
	283, 284, 285, 286, 0, 0, 288, 289, 290, 287,
	291, 0, 292, 0, 293, 294, 295, 296, 297, 298,
	0, 299, 300, 301, 0, 302, 303, 0, 0, 0,
	0, 0, 0, 0, 304, 305, 306, 307, 0, 308,
	586, 587, 0, 312, 309, 310, 0, 313, 311, 0,
	314, 315, 316, 0, 0, 317, 318, 319, 0, 320,
	321, 0, 322, 323, 324, 0, 325, 326, 588, 327,
	328, 329, 331, 333, 330, 334, 335, 336, 337, 589,
	590, 0, 251, 0, 0, 0, 0, 0, 338, 339,
	340, 591, 0, 0, 0, 341, 0, 342, 0, 0,
	0, 343, 344, 592, 593, 345, 346, 347, 348, 349,
	350, 351, 352, 0, 353, 594, 0, 595, 354, 0,
	355, 356, 357, 358, 359, 596, 597, 598, 433, 0,
	360, 361, 0, 362, 363, 364, 365, 0, 0, 0,
	252, 366, 367, 369, 0, 0, 368, 599, 600, 0,
	601, 0, 370, 371, 0, 602, 0, 372, 373, 374,
	0, 375, 0, 0, 0, 376, 377, 378, 379, 380,
	381, 0, 382, 384, 383, 0, 385, 603, 0, 386,
	387, 0, 0, 388, 0, 0, 0, 389, 390, 0,
	0, 391, 392, 393, 394, 0, 395, 396, 398, 400,
	397, 399, 401, 414, 402, 403, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 416, 0, 415, 0,
	417, 418, 419, 424, 426, 427, 422, 423, 425, 428,
	429, 421, 0, 420, 0, 253, 0, 430, 431, 0,
	604, 432, 605, 434, 435, 0, 0, 436, 0, 0,
	0, 438, 439, 440, 0, 0, 441, 442, 606, 0,
	443, 0, 607, 444, 445, 437, 446, 447, 448, 449,
	450, 451, 452, 453, 0, 454, 455, 608, 456, 457,
	458, 609, 459, 460, 461, 610, 462, 611, 463, 464,
	0, 465, 0, 466, 467, 468, 469, 470, 471, 472,
	612, 473, 475, 474, 476, 0, 477, 0, 0, 0,
	0, 0, 478, 0, 480, 481, 482, 479, 483, 484,
	485, 486, 0, 487, 488, 489, 0, 490, 491, 492,
	493, 613, 494, 0, 495, 496, 502, 503, 497, 498,
	504, 505, 506, 507, 508, 0, 510, 511, 509, 512,
	513, 514, 0, 515, 499, 500, 516, 517, 0, 518,
	519, 520, 521, 522, 523, 614, 0, 524, 0, 525,
	526, 527, 528, 501, 529, 534, 615, 530, 531, 532,
	533, 616, 0, 536, 537, 0, 535, 0, 538, 539,
	540, 541, 542, 543, 332, 544, 0, 545, 617, 618,
	619, 620, 0, 554, 0, 546, 547, 548, 621, 549,
	622, 0, 550, 551, 552, 553, 0, 555, 556, 0,
	0, 557, 558, 559, 561, 562, 560, 563, 0, 564,
	0, 0, 565, 566, 567, 623, 624, 625, 0, 569,
	568, 570, 626, 0, 248, 0, 0, 571, 572, 627,
	573, 574, 575, 0, 0, 0, 0, 0, 0, 0,
	0, 254, 255, 256, 257, 258, 259, 0, 260, 261,
	0, 0, 0, 0, 3259, 576, 0, 0, 0, 0,
	262, 263, 0, 264, 265, 266, 267, 268, 577, 578,
	0, 269, 579, 270, 580, 0, 581, 271, 272, 273,
	274, 275, 276, 0, 0, 0, 277, 582, 583, 584,
	0, 278, 279, 585, 0, 0, 0, 280, 281, 282,
	283, 284, 285, 286, 0, 0, 288, 289, 290, 287,
	291, 0, 292, 0, 293, 294, 295, 296, 297, 298,
	0, 299, 300, 301, 0, 302, 303, 0, 0, 0,
	0, 0, 0, 0, 304, 305, 306, 307, 0, 308,
	586, 587, 0, 312, 309, 310, 0, 313, 311, 0,
	314, 315, 316, 0, 0, 317, 318, 319, 0, 320,
	321, 0, 322, 323, 324, 0, 325, 326, 588, 327,
	328, 329, 331, 333, 330, 334, 335, 336, 337, 589,
	590, 0, 251, 0, 0, 0, 0, 0, 338, 339,
	340, 591, 0, 0, 0, 341, 0, 342, 0, 0,
	0, 343, 344, 592, 593, 345, 346, 347, 348, 349,
	350, 351, 352, 0, 353, 594, 0, 595, 354, 0,
	355, 356, 357, 358, 359, 596, 597, 598, 433, 0,
	360, 361, 0, 362, 363, 364, 365, 0, 0, 0,
	252, 366, 367, 369, 0, 0, 368, 599, 600, 0,
	601, 0, 370, 371, 0, 602, 0, 372, 373, 374,
	0, 375, 0, 0, 0, 376, 377, 378, 379, 380,
	381, 0, 382, 384, 383, 0, 385, 603, 0, 386,
	387, 0, 0, 388, 0, 0, 0, 389, 390, 0,
	0, 391, 392, 393, 394, 0, 395, 396, 398, 400,
	397, 399, 401, 414, 402, 403, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 416, 0, 415, 0,
	417, 418, 419, 424, 426, 427, 422, 423, 425, 428,
	429, 421, 0, 420, 0, 253, 0, 430, 431, 0,
	604, 432, 605, 434, 435, 0, 0, 436, 0, 0,
	0, 438, 439, 440, 0, 0, 441, 442, 606, 0,
	443, 0, 607, 444, 445, 437, 446, 447, 448, 449,
	450, 451, 452, 453, 0, 454, 455, 608, 456, 457,
	458, 609, 459, 460, 461, 610, 462, 611, 463, 464,
	0, 465, 0, 466, 467, 468, 469, 470, 471, 472,
	612, 473, 475, 474, 476, 0, 477, 0, 0, 0,
	0, 0, 478, 0, 480, 481, 482, 479, 483, 484,
	485, 486, 0, 487, 488, 489, 0, 490, 491, 492,
	493, 613, 494, 0, 495, 496, 502, 503, 497, 498,
	504, 505, 506, 507, 508, 0, 510, 511, 509, 512,
	513, 514, 0, 515, 499, 500, 516, 517, 0, 518,
	519, 520, 521, 522, 523, 614, 0, 524, 0, 525,
	526, 527, 528, 501, 529, 534, 615, 530, 531, 532,
	533, 616, 0, 536, 537, 0, 535, 0, 538, 539,
	540, 541, 542, 543, 332, 544, 0, 545, 617, 618,
	619, 620, 0, 554, 0, 546, 547, 548, 621, 549,
	622, 0, 550, 551, 552, 553, 0, 555, 556, 0,
	0, 557, 558, 559, 561, 562, 560, 563, 0, 564,
	0, 0, 565, 566, 567, 623, 624, 625, 0, 569,
	568, 570, 626, 0, 248, 0, 0, 571, 572, 627,
	573, 574, 575, 0, 0, 0, 0, 0, 0, 0,
	0, 254, 255, 256, 257, 258, 259, 0, 260, 261,
	0, 0, 0, 0, 1448, 576, 0, 0, 0, 0,
	262, 263, 0, 264, 265, 266, 267, 268, 577, 578,
	0, 269, 579, 270, 580, 0, 581, 271, 272, 273,
	274, 275, 276, 0, 0, 0, 277, 582, 583, 584,
	0, 278, 279, 585, 0, 0, 0, 280, 281, 282,
	283, 284, 285, 286, 0, 0, 288, 289, 290, 287,
	291, 0, 292, 0, 293, 294, 295, 296, 297, 298,
	0, 299, 300, 301, 0, 302, 303, 0, 0, 0,
	0, 0, 0, 0, 304, 305, 306, 307, 0, 308,
	586, 587, 0, 312, 309, 310, 0, 313, 311, 0,
	314, 315, 316, 0, 0, 317, 318, 319, 0, 320,
	321, 0, 322, 323, 324, 0, 325, 326, 588, 327,
	328, 329, 331, 333, 330, 334, 335, 336, 337, 589,
	590, 0, 0, 0, 0, 0, 0, 0, 338, 339,
	340, 591, 0, 0, 0, 341, 0, 342, 0, 0,
	0, 343, 344, 592, 593, 345, 346, 347, 348, 349,
	350, 351, 352, 0, 353, 594, 0, 595, 354, 0,
	355, 356, 357, 358, 359, 596, 597, 598, 433, 0,
	360, 361, 0, 362, 363, 364, 365, 0, 0, 0,
	0, 366, 367, 369, 0, 0, 368, 599, 600, 0,
	601, 0, 370, 371, 0, 602, 0, 372, 373, 374,
	0, 375, 0, 0, 0, 376, 377, 378, 379, 380,
	381, 0, 382, 384, 383, 0, 385, 603, 0, 386,
	387, 0, 0, 388, 0, 0, 0, 389, 390, 0,
	0, 391, 392, 393, 394, 0, 395, 396, 398, 400,
	397, 399, 401, 414, 402, 403, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 416, 0, 415, 0,
	417, 418, 419, 424, 426, 427, 422, 423, 425, 428,
	429, 421, 0, 420, 0, 0, 0, 430, 431, 0,
	604, 432, 605, 434, 435, 0, 0, 436, 0, 0,
	0, 438, 439, 440, 0, 0, 441, 442, 606, 0,
	443, 0, 607, 444, 445, 437, 446, 447, 448, 449,
	450, 451, 452, 453, 0, 454, 455, 608, 456, 457,
	458, 609, 459, 460, 461, 610, 462, 611, 463, 464,
	0, 465, 0, 466, 467, 468, 469, 470, 471, 472,
	612, 473, 475, 474, 476, 0, 477, 0, 0, 0,
	0, 0, 478, 0, 480, 481, 482, 479, 483, 484,
	485, 486, 0, 487, 488, 489, 0, 490, 491, 492,
	493, 613, 494, 0, 495, 496, 502, 503, 497, 498,
	504, 505, 506, 507, 508, 0, 510, 511, 509, 512,
	513, 514, 0, 515, 499, 500, 516, 517, 0, 518,
	519, 520, 521, 522, 523, 614, 0, 524, 0, 525,
	526, 527, 528, 501, 529, 534, 615, 530, 531, 532,
	533, 616, 0, 536, 537, 0, 535, 0, 538, 539,
	540, 541, 542, 543, 332, 544, 0, 545, 617, 618,
	619, 620, 0, 554, 0, 546, 547, 548, 621, 549,
	622, 0, 550, 551, 552, 553, 0, 555, 556, 0,
	0, 557, 558, 559, 561, 562, 560, 563, 0, 564,
	0, 0, 565, 566, 567, 623, 624, 625, 248, 569,
	568, 570, 626, 0, 0, 0, 0, 571, 572, 627,
	573, 574, 575, 0, 0, 254, 255, 256, 257, 258,
	259, 0, 260, 261, 0, 0, 0, 0, 0, 576,
	0, 0, 0, 0, 262, 263, 2769, 264, 265, 266,
	267, 268, 577, 578, 0, 269, 579, 270, 580, 0,
	581, 271, 272, 273, 274, 275, 276, 0, 0, 0,
	277, 582, 583, 584, 0, 278, 279, 585, 0, 0,
	0, 280, 281, 282, 283, 284, 285, 286, 0, 0,
	288, 289, 290, 287, 291, 0, 292, 0, 293, 294,
	295, 296, 297, 298, 0, 299, 300, 301, 0, 302,
	303, 0, 0, 0, 0, 0, 0, 0, 304, 305,
	306, 307, 0, 308, 586, 587, 0, 312, 309, 310,
	0, 313, 311, 0, 314, 315, 316, 0, 0, 317,
	318, 319, 0, 320, 321, 0, 322, 323, 324, 0,
	325, 326, 588, 327, 328, 329, 331, 333, 330, 334,
	335, 336, 337, 589, 590, 0, 0, 0, 0, 0,
	0, 0, 338, 339, 340, 591, 0, 0, 0, 341,
	0, 342, 0, 0, 0, 343, 344, 592, 593, 345,
	346, 347, 348, 349, 350, 351, 352, 0, 353, 594,
	0, 595, 354, 0, 355, 356, 357, 358, 359, 596,
	597, 598, 433, 0, 360, 361, 0, 362, 363, 364,
	365, 0, 0, 0, 0, 366, 367, 369, 0, 0,
	368, 599, 600, 0, 601, 0, 370, 371, 0, 602,
	0, 372, 373, 374, 0, 375, 0, 0, 0, 376,
	377, 378, 379, 380, 381, 0, 382, 384, 383, 0,
	385, 603, 0, 386, 387, 0, 0, 388, 0, 0,
	0, 389, 390, 0, 0, 391, 392, 393, 394, 0,
	395, 396, 398, 400, 397, 399, 401, 414, 402, 403,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	416, 0, 415, 0, 417, 418, 419, 424, 426, 427,
	422, 423, 425, 428, 429, 421, 0, 420, 0, 0,
	0, 430, 431, 0, 604, 432, 605, 434, 435, 0,
	0, 436, 0, 0, 0, 438, 439, 440, 0, 0,
	441, 442, 606, 0, 443, 0, 607, 444, 445, 437,
	446, 447, 448, 449, 450, 451, 452, 453, 0, 454,
	455, 608, 456, 457, 458, 609, 459, 460, 461, 610,
	462, 611, 463, 464, 0, 465, 0, 466, 467, 468,
	469, 470, 471, 472, 612, 473, 475, 474, 476, 0,
	477, 0, 0, 0, 0, 0, 478, 0, 480, 481,
	482, 479, 483, 484, 485, 486, 0, 487, 488, 489,
	0, 490, 491, 492, 493, 613, 494, 0, 495, 496,
	502, 503, 497, 498, 504, 505, 506, 507, 508, 0,
	510, 511, 509, 512, 513, 514, 0, 515, 499, 500,
	516, 517, 0, 518, 519, 520, 521, 522, 523, 614,
	0, 524, 0, 525, 526, 527, 528, 501, 529, 534,
	615, 530, 531, 532, 533, 616, 0, 536, 537, 0,
	535, 0, 538, 539, 540, 541, 542, 543, 332, 544,
	0, 545, 617, 618, 619, 620, 0, 554, 0, 546,
	547, 548, 621, 549, 622, 0, 550, 551, 552, 553,
	0, 555, 556, 0, 0, 557, 558, 559, 561, 562,
	560, 563, 0, 564, 0, 0, 565, 566, 567, 623,
	624, 625, 248, 569, 568, 570, 626, 0, 0, 0,
	0, 571, 572, 627, 573, 574, 575, 0, 0, 254,
	255, 256, 257, 258, 259, 0, 260, 261, 0, 0,
	0, 0, 0, 576, 0, 0, 0, 0, 262, 263,
	3419, 264, 265, 266, 267, 268, 577, 578, 0, 269,
	579, 270, 580, 0, 581, 271, 272, 273, 274, 275,
	276, 0, 0, 0, 277, 582, 583, 584, 0, 278,
	279, 585, 0, 0, 0, 280, 281, 282, 283, 284,
	285, 286, 0, 0, 288, 289, 290, 287, 291, 0,
	292, 0, 293, 294, 295, 296, 297, 298, 0, 299,
	300, 301, 0, 302, 303, 0, 0, 0, 0, 0,
	0, 0, 304, 305, 306, 307, 0, 308, 586, 587,
	0, 312, 309, 310, 0, 313, 311, 0, 314, 315,
	316, 0, 0, 317, 318, 319, 0, 320, 321, 0,
	322, 323, 324, 0, 325, 326, 588, 327, 328, 329,
	331, 333, 330, 334, 335, 336, 337, 589, 590, 0,
	0, 0, 0, 0, 0, 0, 338, 339, 340, 591,
	0, 0, 0, 341, 0, 342, 0, 0, 0, 343,
	344, 592, 593, 345, 346, 347, 348, 349, 350, 351,
	352, 0, 353, 594, 0, 595, 354, 0, 355, 356,
	357, 358, 359, 596, 597, 598, 433, 0, 360, 361,
	0, 362, 363, 364, 365, 0, 0, 0, 0, 366,
	367, 369, 0, 0, 368, 599, 600, 0, 601, 0,
	370, 371, 0, 602, 0, 372, 373, 374, 0, 375,
	0, 0, 0, 376, 377, 378, 379, 380, 381, 0,
	382, 384, 383, 0, 385, 603, 0, 386, 387, 0,
	0, 388, 0, 0, 0, 389, 390, 0, 0, 391,
	392, 393, 394, 0, 395, 396, 398, 400, 397, 399,
	401, 414, 402, 403, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 416, 0, 415, 0, 417, 418,
	419, 424, 426, 427, 422, 423, 425, 428, 429, 421,
	0, 420, 0, 0, 0, 430, 431, 0, 604, 432,
	605, 434, 435, 0, 0, 436, 0, 0, 0, 438,
	439, 440, 0, 0, 441, 442, 606, 0, 443, 0,
	607, 444, 445, 437, 446, 447, 448, 449, 450, 451,
	452, 453, 0, 454, 455, 608, 456, 457, 458, 609,
	459, 460, 461, 610, 462, 611, 463, 464, 0, 465,
	0, 466, 467, 468, 469, 470, 471, 472, 612, 473,
	475, 474, 476, 0, 477, 0, 0, 0, 0, 0,
	478, 0, 480, 481, 482, 479, 483, 484, 485, 486,
	0, 487, 488, 489, 0, 490, 491, 492, 493, 613,
	494, 0, 495, 496, 502, 503, 497, 498, 504, 505,
	506, 507, 508, 0, 510, 511, 509, 512, 513, 514,
	0, 515, 499, 500, 516, 517, 0, 518, 519, 520,
	521, 522, 523, 614, 0, 524, 0, 525, 526, 527,
	528, 501, 529, 534, 615, 530, 531, 532, 533, 616,
	0, 536, 537, 0, 535, 0, 538, 539, 540, 541,
	542, 543, 332, 544, 0, 545, 617, 618, 619, 620,
	0, 554, 0, 546, 547, 548, 621, 549, 622, 0,
	550, 551, 552, 553, 0, 555, 556, 0, 0, 557,
	558, 559, 561, 562, 560, 563, 0, 564, 0, 0,
	565, 566, 567, 623, 624, 625, 0, 569, 568, 570,
	626, 0, 831, 0, 714, 571, 572, 627, 573, 574,
	575, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 254, 255, 256, 257, 258, 259, 0, 260, 261,
	0, 0, 0, 0, 2139, 576, 0, 0, 0, 0,
	262, 263, 0, 264, 265, 266, 267, 268, 577, 578,
	0, 269, 579, 270, 580, 0, 581, 271, 272, 273,
	274, 275, 276, 0, 0, 0, 277, 582, 583, 584,
	0, 278, 279, 585, 0, 0, 0, 280, 281, 282,
	283, 284, 285, 286, 0, 0, 288, 289, 290, 287,
	291, 0, 292, 0, 293, 294, 295, 296, 297, 298,
	0, 299, 300, 301, 0, 302, 303, 0, 0, 0,
	0, 0, 0, 0, 304, 305, 721, 307, 0, 308,
	586, 587, 0, 312, 309, 310, 0, 313, 311, 0,
	314, 315, 316, 0, 0, 317, 318, 319, 0, 320,
	321, 0, 322, 323, 324, 0, 325, 326, 588, 327,
	328, 329, 331, 333, 330, 334, 335, 336, 337, 589,
	590, 0, 251, 0, 0, 0, 0, 0, 338, 339,
	340, 591, 0, 0, 0, 341, 0, 342, 0, 829,
	0, 343, 344, 592, 593, 345, 346, 347, 348, 349,
	350, 351, 352, 0, 353, 594, 0, 595, 354, 0,
	355, 356, 357, 358, 359, 596, 597, 598, 433, 0,
	360, 361, 0, 362, 363, 364, 365, 0, 0, 0,
	252, 366, 367, 369, 0, 0, 368, 599, 600, 0,
	601, 0, 370, 371, 0, 602, 0, 372, 373, 374,
	0, 375, 0, 0, 0, 376, 377, 378, 379, 380,
	381, 0, 382, 384, 383, 0, 385, 603, 0, 386,
	387, 0, 0, 388, 0, 0, 0, 389, 390, 0,
	0, 391, 392, 393, 394, 0, 395, 396, 398, 400,
	397, 399, 401, 414, 402, 403, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 416, 0, 415, 0,
	417, 418, 419, 424, 426, 427, 422, 423, 425, 428,
	429, 421, 0, 420, 0, 253, 0, 430, 431, 0,
	604, 432, 605, 434, 435, 0, 0, 436, 0, 0,
	0, 438, 439, 440, 0, 0, 441, 442, 606, 0,
	443, 0, 607, 444, 445, 437, 446, 447, 448, 449,
	450, 451, 452, 453, 0, 454, 455, 608, 456, 457,
	458, 609, 459, 460, 461, 610, 462, 611, 463, 464,
	0, 465, 0, 466, 467, 468, 469, 470, 471, 472,
	612, 473, 475, 474, 476, 0, 477, 0, 0, 0,
	0, 0, 478, 0, 480, 481, 482, 479, 483, 484,
	485, 486, 0, 487, 488, 489, 0, 490, 491, 492,
	493, 613, 494, 0, 495, 496, 502, 503, 497, 498,
	504, 505, 506, 507, 508, 0, 510, 511, 509, 512,
	513, 514, 0, 515, 499, 500, 516, 517, 0, 518,
	519, 520, 521, 522, 523, 614, 0, 524, 0, 525,
	526, 527, 528, 501, 529, 534, 615, 530, 531, 532,
	533, 616, 0, 536, 537, 0, 535, 719, 538, 539,
	540, 541, 720, 543, 332, 544, 0, 545, 617, 618,
	619, 620, 0, 554, 0, 546, 547, 548, 621, 549,
	622, 0, 550, 551, 552, 553, 0, 555, 556, 0,
	0, 557, 558, 559, 561, 562, 560, 563, 0, 564,
	0, 0, 565, 566, 567, 623, 624, 625, 0, 569,
	568, 570, 626, 0, 0, 0, 0, 571, 572, 627,
	573, 574, 575, 1915, 0, 1350, 1349, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 724,
	0, 0, 254, 255, 256, 257, 258, 259, 0, 260,
	261, 0, 0, 0, 0, 0, 576, 0, 0, 0,
	0, 262, 263, 1103, 264, 265, 266, 267, 268, 577,
	578, 0, 269, 579, 270, 580, 0, 581, 271, 272,
	273, 274, 275, 276, 0, 0, 0, 277, 582, 583,
	584, 0, 278, 279, 585, 0, 1316, 0, 280, 281,
	282, 283, 284, 285, 286, 0, 0, 288, 289, 290,
	287, 291, 0, 292, 0, 293, 294, 295, 296, 297,
	298, 0, 299, 300, 301, 1104, 302, 303, 0, 0,
	0, 0, 0, 0, 1918, 304, 305, 306, 307, 0,
	308, 586, 587, 0, 312, 309, 310, 0, 313, 311,
	0, 314, 315, 316, 0, 0, 317, 318, 319, 0,
	320, 321, 0, 322, 323, 324, 0, 325, 326, 588,
	327, 328, 329, 331, 333, 330, 334, 335, 336, 337,
	589, 590, 0, 251, 0, 0, 0, 0, 0, 338,
	339, 340, 591, 0, 0, 0, 341, 0, 342, 0,
	0, 1105, 343, 344, 592, 593, 345, 346, 347, 348,
	349, 350, 351, 352, 0, 353, 594, 0, 595, 354,
	0, 355, 356, 357, 358, 359, 596, 597, 598, 433,
	1107, 360, 361, 0, 362, 363, 364, 365, 0, 0,
	0, 0, 366, 367, 369, 0, 1106, 368, 599, 600,
	0, 601, 0, 370, 371, 1108, 602, 1109, 372, 373,
	374, 1110, 375, 0, 0, 0, 376, 377, 378, 379,
	380, 381, 0, 382, 384, 383, 0, 385, 603, 1111,
	386, 387, 1112, 0, 388, 0, 0, 0, 389, 390,
	0, 0, 391, 392, 393, 394, 0, 395, 396, 398,
	400, 397, 399, 401, 414, 402, 403, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 416, 0, 415,
	1113, 417, 418, 419, 424, 426, 427, 422, 423, 425,
	428, 429, 421, 1114, 420, 0, 0, 1115, 430, 431,
	0, 604, 432, 605, 434, 435, 0, 0, 436, 0,
	0, 0, 438, 439, 440, 0, 0, 441, 442, 606,
	1116, 443, 1117, 607, 444, 445, 437, 446, 447, 448,
	449, 450, 451, 452, 453, 0, 454, 455, 608, 456,
	457, 458, 609, 459, 460, 461, 610, 462, 611, 463,
	464, 0, 465, 0, 466, 467, 468, 469, 470, 471,
	472, 612, 473, 475, 474, 476, 0, 477, 0, 0,
	0, 0, 0, 478, 0, 480, 481, 482, 479, 483,
	484, 485, 486, 0, 487, 488, 489, 1118, 490, 491,
	492, 493, 613, 494, 0, 495, 496, 502, 503, 497,
	498, 504, 505, 506, 507, 508, 0, 510, 511, 509,
	512, 513, 514, 1919, 515, 499, 500, 516, 517, 1119,
	518, 519, 520, 521, 522, 523, 614, 0, 524, 0,
	525, 526, 527, 528, 501, 529, 534, 615, 530, 531,
	532, 533, 616, 0, 536, 537, 0, 535, 0, 538,
	539, 540, 541, 542, 543, 332, 544, 0, 545, 617,
	618, 619, 620, 0, 554, 0, 546, 547, 548, 621,
	549, 622, 0, 550, 551, 552, 553, 0, 555, 556,
	0, 0, 557, 558, 559, 561, 562, 560, 563, 0,
	564, 0, 0, 565, 566, 567, 623, 624, 625, 0,
	569, 568, 570, 626, 712, 0, 714, 0, 571, 572,
	627, 573, 574, 575, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 254, 255, 256, 257, 258, 259, 0,
	260, 261, 0, 0, 0, 0, 0, 576, 0, 0,
	0, 0, 262, 263, 0, 264, 265, 266, 267, 268,
	577, 578, 0, 269, 579, 270, 580, 0, 581, 271,
	272, 273, 274, 275, 276, 0, 0, 0, 277, 582,
	583, 584, 0, 278, 279, 585, 0, 0, 0, 280,
	281, 282, 283, 284, 285, 286, 0, 0, 288, 289,
	290, 287, 291, 0, 292, 0, 293, 294, 295, 296,
	297, 298, 0, 299, 300, 301, 0, 302, 303, 0,
	0, 0, 0, 0, 0, 0, 304, 305, 721, 307,
	0, 308, 586, 587, 0, 312, 309, 310, 0, 313,
	311, 0, 314, 315, 316, 0, 0, 317, 318, 319,
	0, 320, 321, 0, 322, 323, 324, 0, 325, 326,
	588, 327, 328, 329, 331, 333, 330, 334, 335, 336,
	337, 589, 590, 0, 251, 0, 0, 0, 0, 0,
	338, 339, 340, 591, 0, 0, 0, 341, 0, 342,
	0, 0, 0, 343, 344, 592, 593, 345, 346, 347,
	348, 349, 350, 351, 352, 0, 353, 594, 0, 595,
	354, 0, 355, 356, 357, 358, 359, 596, 597, 598,
	433, 0, 360, 361, 0, 362, 363, 364, 365, 0,
	0, 0, 252, 366, 367, 369, 0, 0, 368, 599,
	600, 0, 601, 0, 370, 371, 0, 602, 0, 372,
	373, 374, 0, 375, 0, 0, 0, 376, 377, 378,
	379, 380, 381, 0, 382, 384, 383, 0, 385, 603,
	0, 386, 387, 0, 0, 388, 0, 0, 0, 389,
	390, 0, 0, 391, 392, 393, 394, 0, 395, 396,
	398, 400, 397, 399, 401, 414, 402, 403, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 416, 0,
	415, 0, 417, 418, 419, 424, 426, 427, 422, 423,
	425, 428, 429, 421, 0, 420, 0, 253, 0, 430,
	431, 0, 604, 432, 605, 434, 435, 0, 0, 436,
	0, 0, 0, 438, 439, 440, 0, 0, 441, 442,
	606, 0, 443, 0, 607, 444, 445, 437, 446, 447,
	448, 449, 450, 451, 452, 453, 0, 454, 455, 608,
	456, 457, 458, 609, 459, 460, 461, 610, 462, 611,
	463, 464, 0, 465, 0, 466, 467, 468, 469, 470,
	471, 472, 612, 473, 475, 474, 476, 0, 477, 0,
	0, 0, 0, 0, 478, 0, 480, 481, 482, 479,
	483, 484, 485, 486, 0, 487, 488, 489, 0, 490,
	491, 492, 493, 613, 494, 0, 495, 496, 502, 503,
	497, 498, 504, 505, 506, 507, 508, 0, 510, 511,
	509, 512, 513, 514, 0, 515, 499, 500, 516, 517,
	0, 518, 519, 520, 521, 522, 523, 614, 0, 524,
	0, 525, 526, 527, 528, 501, 529, 534, 615, 530,
	531, 532, 533, 616, 0, 536, 537, 0, 535, 719,
	538, 539, 540, 541, 720, 543, 332, 544, 0, 545,
	617, 618, 619, 620, 0, 554, 0, 546, 547, 548,
	621, 549, 622, 0, 550, 551, 552, 553, 0, 555,
	556, 0, 0, 557, 558, 559, 561, 562, 560, 563,
	0, 564, 0, 0, 565, 566, 567, 623, 624, 625,
	1885, 569, 568, 570, 626, 0, 0, 0, 0, 571,
	572, 627, 573, 574, 575, 0, 0, 254, 255, 256,
	257, 258, 259, 0, 260, 261, 0, 0, 0, 0,
	0, 724, 0, 0, 0, 0, 262, 263, 1103, 264,
	265, 266, 267, 268, 0, 1891, 0, 269, 1881, 270,
	1897, 0, 1904, 271, 272, 273, 274, 275, 276, 0,
	0, 0, 277, 1907, 1908, 0, 0, 278, 279, 0,
	0, 1316, 0, 280, 281, 282, 283, 284, 285, 286,
	0, 0, 288, 289, 290, 287, 291, 0, 292, 0,
	293, 294, 295, 296, 297, 298, 0, 299, 300, 301,
	1104, 302, 303, 0, 0, 0, 0, 0, 0, 0,
	304, 305, 306, 307, 1086, 308, 1895, 1894, 0, 312,
	309, 310, 0, 313, 311, 0, 314, 315, 316, 0,
	0, 317, 1071, 319, 0, 320, 321, 0, 322, 323,
	324, 0, 325, 326, 0, 327, 328, 329, 331, 333,
	330, 334, 335, 336, 337, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 338, 339, 340, 1893, 0, 0,
	0, 341, 0, 342, 0, 0, 1105, 343, 344, 1902,
	1903, 345, 346, 347, 348, 349, 350, 351, 352, 0,
	353, 0, 0, 0, 354, 0, 355, 356, 357, 358,
	359, 0, 0, 0, 433, 1107, 360, 361, 0, 362,
	363, 364, 365, 0, 0, 0, 0, 366, 367, 369,
	0, 1106, 368, 1888, 1889, 0, 1884, 0, 370, 371,
	1108, 0, 1109, 372, 373, 374, 1110, 375, 0, 0,
	0, 376, 377, 378, 379, 380, 381, 0, 382, 384,
	383, 0, 385, 0, 1111, 386, 387, 1112, 0, 388,
	0, 0, 0, 389, 390, 0, 0, 391, 392, 393,
	394, 0, 395, 396, 398, 400, 397, 399, 401, 414,
	402, 403, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 416, 0, 415, 1113, 417, 418, 419, 424,
	426, 427, 422, 423, 425, 428, 429, 421, 1114, 420,
	0, 0, 1115, 430, 431, 0, 0, 432, 1896, 434,
	435, 0, 0, 436, 0, 0, 0, 438, 439, 440,
	0, 0, 441, 442, 0, 1116, 443, 1117, 0, 444,
	445, 437, 446, 447, 448, 449, 450, 451, 452, 453,
	0, 454, 455, 1878, 456, 457, 458, 1879, 459, 460,
	461, 0, 462, 0, 463, 464, 0, 465, 0, 466,
	467, 468, 469, 470, 471, 472, 1892, 473, 475, 474,
	476, 0, 477, 0, 0, 0, 0, 0, 478, 0,
	480, 481, 482, 479, 483, 484, 485, 486, 0, 487,
	488, 489, 1118, 490, 491, 492, 493, 0, 494, 0,
	495, 496, 502, 503, 497, 498, 504, 505, 506, 507,
	508, 0, 510, 511, 509, 512, 513, 514, 0, 515,
	499, 500, 516, 517, 1119, 518, 519, 520, 521, 522,
	523, 1890, 0, 524, 0, 525, 526, 527, 528, 501,
	529, 534, 1906, 530, 531, 532, 533, 0, 0, 536,
	537, 0, 535, 0, 538, 539, 540, 541, 542, 543,
	332, 544, 0, 545, 1898, 1899, 1900, 1901, 0, 554,
	0, 546, 547, 548, 0, 549, 0, 0, 550, 551,
	552, 553, 0, 555, 556, 0, 0, 557, 558, 559,
	561, 562, 560, 563, 0, 564, 0, 0, 565, 566,
	567, 0, 1882, 1905, 0, 569, 568, 570, 0, 0,
	0, 1350, 1349, 571, 572, 0, 573, 574, 575, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 254, 255,
	256, 257, 258, 259, 0, 260, 261, 0, 0, 0,
	0, 0, 576, 0, 0, 0, 1872, 262, 263, 1103,
	264, 265, 266, 267, 268, 577, 578, 0, 269, 579,
	270, 580, 0, 581, 271, 272, 273, 274, 275, 276,
	0, 0, 0, 277, 582, 583, 584, 0, 278, 279,
	585, 0, 1316, 0, 280, 281, 282, 283, 284, 285,
	286, 0, 0, 288, 289, 290, 287, 291, 0, 292,
	0, 293, 294, 295, 296, 297, 298, 0, 299, 300,
	301, 1104, 302, 303, 0, 0, 0, 0, 0, 0,
	1918, 304, 305, 306, 307, 0, 308, 586, 587, 0,
	312, 309, 310, 0, 313, 311, 0, 314, 315, 316,
	0, 0, 317, 318, 319, 0, 320, 321, 0, 322,
	323, 324, 0, 325, 326, 588, 327, 328, 329, 331,
	333, 330, 334, 335, 336, 337, 589, 590, 0, 251,
	0, 0, 0, 0, 0, 338, 339, 340, 591, 0,
	0, 0, 341, 0, 342, 0, 0, 1105, 343, 344,
	592, 593, 345, 346, 347, 348, 349, 350, 351, 352,
	0, 353, 594, 0, 595, 354, 0, 355, 356, 357,
	358, 359, 596, 597, 598, 433, 1107, 360, 361, 0,
	362, 363, 364, 365, 0, 0, 0, 0, 366, 367,
	369, 0, 1106, 368, 599, 600, 0, 601, 0, 370,
	371, 1108, 602, 1109, 372, 373, 374, 1110, 375, 0,
	0, 0, 376, 377, 378, 379, 380, 381, 0, 382,
	384, 383, 0, 385, 603, 1111, 386, 387, 1112, 0,
	388, 0, 0, 0, 389, 390, 0, 0, 391, 392,
	393, 394, 0, 395, 396, 398, 400, 397, 399, 401,
	414, 402, 403, 404, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 416, 0, 415, 1113, 417, 418, 419,
	424, 426, 427, 422, 423, 425, 428, 429, 421, 1114,
	420, 0, 0, 1115, 430, 431, 0, 604, 432, 605,
	434, 435, 0, 0, 436, 0, 0, 0, 438, 439,
	440, 0, 0, 441, 442, 606, 1116, 443, 1117, 607,
	444, 445, 437, 446, 447, 448, 449, 450, 451, 452,
	453, 0, 454, 455, 608, 456, 457, 458, 609, 459,
	460, 461, 610, 462, 611, 463, 464, 0, 465, 0,
	466, 467, 468, 469, 470, 471, 472, 612, 473, 475,
	474, 476, 0, 477, 0, 0, 0, 0, 0, 478,
	0, 480, 481, 482, 479, 483, 484, 485, 486, 0,
	487, 488, 489, 1118, 490, 491, 492, 493, 613, 494,
	0, 495, 496, 502, 503, 497, 498, 504, 505, 506,
	507, 508, 0, 510, 511, 509, 512, 513, 514, 1919,
	515, 499, 500, 516, 517, 1119, 518, 519, 520, 521,
	522, 523, 614, 0, 524, 0, 525, 526, 527, 528,
	501, 529, 534, 615, 530, 531, 532, 533, 616, 0,
	536, 537, 0, 535, 0, 538, 539, 540, 541, 542,
	543, 332, 544, 0, 545, 617, 618, 619, 620, 0,
	554, 0, 546, 547, 548, 621, 549, 622, 0, 550,
	551, 552, 553, 0, 555, 556, 0, 0, 557, 558,
	559, 561, 562, 560, 563, 0, 564, 0, 0, 565,
	566, 567, 623, 624, 625, 0, 569, 568, 570, 626,
	0, 0, 0, 0, 571, 572, 627, 573, 574, 575,
	1350, 1349, 0, 0, 0, 0, 1347, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 254, 255, 256,
	257, 258, 259, 0, 260, 261, 0, 0, 0, 0,
	0, 576, 0, 0, 0, 0, 262, 263, 1103, 264,
	265, 266, 267, 268, 577, 578, 0, 269, 579, 270,
	580, 0, 581, 271, 272, 273, 274, 275, 276, 0,
	0, 0, 277, 582, 583, 584, 0, 278, 279, 585,
	0, 1316, 0, 280, 281, 282, 283, 284, 285, 286,
	0, 0, 288, 289, 290, 287, 291, 0, 292, 0,
	293, 294, 295, 296, 297, 298, 0, 299, 300, 301,
	1104, 302, 303, 0, 0, 0, 0, 0, 0, 0,
	304, 305, 306, 307, 0, 308, 586, 587, 0, 312,
	309, 310, 0, 313, 311, 0, 314, 315, 316, 0,
	0, 317, 318, 319, 0, 320, 321, 0, 322, 323,
	324, 0, 325, 326, 588, 327, 328, 329, 331, 333,
	330, 334, 335, 336, 337, 589, 590, 0, 251, 0,
	0, 0, 0, 0, 338, 339, 340, 591, 0, 0,
	0, 341, 0, 342, 0, 0, 1105, 343, 344, 592,
	593, 345, 346, 347, 348, 349, 350, 351, 352, 0,
	353, 594, 0, 595, 354, 0, 355, 356, 357, 358,
	359, 596, 597, 598, 433, 1107, 360, 361, 0, 362,
	363, 364, 365, 0, 0, 0, 0, 366, 367, 369,
	0, 1106, 368, 599, 600, 0, 601, 0, 370, 371,
	1108, 602, 1109, 372, 373, 374, 1110, 375, 0, 0,
	0, 376, 377, 378, 379, 380, 381, 0, 382, 384,
	383, 0, 385, 603, 1111, 386, 387, 1112, 0, 388,
	0, 0, 0, 389, 390, 0, 0, 391, 392, 393,
	394, 0, 395, 396, 398, 400, 397, 399, 401, 414,
	402, 403, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 416, 0, 415, 1113, 417, 418, 419, 424,
	426, 427, 422, 423, 425, 428, 429, 421, 1114, 420,
	0, 0, 1115, 430, 431, 3589, 604, 432, 605, 434,
	435, 0, 0, 436, 0, 0, 0, 438, 439, 440,
	0, 0, 441, 442, 606, 1116, 443, 1117, 607, 444,
	445, 437, 446, 447, 448, 449, 450, 451, 452, 453,
	0, 454, 455, 608, 456, 457, 458, 609, 459, 460,
	461, 610, 462, 611, 463, 464, 0, 465, 0, 466,
	467, 468, 469, 470, 471, 472, 612, 473, 475, 474,
	476, 0, 477, 0, 0, 0, 0, 0, 478, 0,
	480, 481, 482, 479, 483, 484, 485, 486, 0, 487,
	488, 489, 1118, 490, 491, 492, 493, 613, 494, 0,
	495, 496, 502, 503, 497, 498, 504, 505, 506, 507,
	508, 0, 510, 511, 509, 512, 513, 514, 0, 515,
	499, 500, 516, 517, 1119, 518, 519, 520, 521, 522,
	523, 614, 0, 524, 0, 525, 526, 527, 528, 501,
	529, 534, 615, 530, 531, 532, 533, 616, 0, 536,
	537, 0, 535, 0, 538, 539, 540, 541, 542, 543,
	332, 544, 0, 545, 617, 618, 619, 620, 0, 554,
	0, 546, 547, 548, 621, 549, 622, 0, 550, 551,
	552, 553, 0, 555, 556, 0, 0, 557, 558, 559,
	561, 562, 560, 563, 0, 564, 0, 0, 565, 566,
	567, 623, 624, 625, 714, 569, 568, 570, 626, 0,
	0, 0, 0, 571, 572, 627, 573, 574, 575, 0,
	0, 254, 255, 256, 257, 258, 259, 0, 260, 261,
	0, 0, 0, 0, 0, 576, 0, 0, 0, 0,
	262, 263, 0, 264, 265, 266, 267, 268, 577, 578,
	0, 269, 579, 270, 580, 0, 581, 271, 272, 273,
	274, 275, 276, 0, 0, 0, 277, 582, 583, 584,
	0, 278, 279, 585, 0, 0, 0, 280, 281, 282,
	283, 284, 285, 286, 0, 0, 288, 289, 290, 287,
	291, 0, 292, 0, 293, 294, 295, 296, 297, 298,
	0, 299, 300, 301, 0, 302, 303, 0, 0, 0,
	0, 0, 0, 0, 304, 305, 721, 307, 0, 308,
	586, 587, 0, 312, 309, 310, 0, 313, 311, 0,
	314, 315, 316, 0, 0, 317, 318, 319, 0, 320,
	321, 0, 322, 323, 324, 0, 325, 326, 588, 327,
	328, 329, 331, 333, 330, 334, 335, 336, 337, 589,
	590, 0, 251, 0, 0, 0, 0, 0, 338, 339,
	340, 591, 0, 0, 0, 341, 0, 342, 0, 0,
	0, 343, 344, 592, 593, 345, 346, 347, 348, 349,
	350, 351, 352, 0, 353, 594, 0, 595, 354, 0,
	355, 356, 357, 358, 359, 596, 597, 598, 433, 0,
	360, 361, 0, 362, 363, 364, 365, 0, 0, 0,
	252, 366, 367, 369, 0, 0, 368, 599, 600, 0,
	601, 0, 370, 371, 0, 602, 0, 372, 373, 374,
	0, 375, 0, 0, 0, 376, 377, 378, 379, 380,
	381, 0, 382, 384, 383, 0, 385, 603, 0, 386,
	387, 0, 0, 388, 0, 0, 0, 389, 390, 0,
	0, 391, 392, 393, 394, 0, 395, 396, 398, 400,
	397, 399, 401, 414, 402, 403, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 416, 0, 415, 0,
	417, 418, 419, 424, 426, 427, 422, 423, 425, 428,
	429, 421, 0, 420, 0, 253, 0, 430, 431, 0,
	604, 432, 605, 434, 435, 0, 0, 436, 0, 0,
	0, 438, 439, 440, 0, 0, 441, 442, 606, 0,
	443, 0, 607, 444, 445, 437, 446, 447, 448, 449,
	450, 451, 452, 453, 0, 454, 455, 608, 456, 457,
	458, 609, 459, 460, 461, 610, 462, 611, 463, 464,
	0, 465, 0, 466, 467, 468, 469, 470, 471, 472,
	612, 473, 475, 474, 476, 0, 477, 0, 0, 0,
	0, 0, 478, 0, 480, 481, 482, 479, 483, 484,
	485, 486, 0, 487, 488, 489, 0, 490, 491, 492,
	493, 613, 494, 0, 495, 496, 502, 503, 497, 498,
	504, 505, 506, 507, 508, 0, 510, 511, 509, 512,
	513, 514, 0, 515, 499, 500, 516, 517, 0, 518,
	519, 520, 521, 522, 523, 614, 0, 524, 0, 525,
	526, 527, 528, 501, 529, 534, 615, 530, 531, 532,
	533, 616, 0, 536, 537, 0, 535, 719, 538, 539,
	540, 541, 720, 543, 332, 544, 0, 545, 617, 618,
	619, 620, 0, 554, 0, 546, 547, 548, 621, 549,
	622, 0, 550, 551, 552, 553, 0, 555, 556, 0,
	0, 557, 558, 559, 561, 562, 560, 563, 0, 564,
	0, 0, 565, 566, 567, 623, 624, 625, 0, 569,
	568, 570, 626, 0, 0, 0, 0, 571, 572, 627,
	573, 574, 575, 1350, 1349, 0, 0, 0, 0, 1347,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 724,
	254, 255, 256, 257, 258, 259, 0, 260, 261, 0,
	0, 0, 0, 0, 576, 0, 0, 0, 0, 262,
	263, 1103, 264, 265, 266, 267, 268, 577, 578, 0,
	269, 579, 270, 580, 0, 581, 271, 272, 273, 274,
	275, 276, 0, 0, 0, 277, 582, 583, 584, 0,
	278, 279, 585, 0, 1316, 0, 280, 281, 282, 283,
	284, 285, 286, 0, 0, 288, 289, 290, 287, 291,
	0, 292, 0, 293, 294, 295, 296, 297, 298, 0,
	299, 300, 301, 1104, 302, 303, 0, 0, 0, 0,
	0, 0, 0, 304, 305, 306, 307, 0, 308, 586,
	587, 0, 312, 309, 310, 0, 313, 311, 0, 314,
	315, 316, 0, 0, 317, 318, 319, 0, 320, 321,
	0, 322, 323, 324, 0, 325, 326, 588, 327, 328,
	329, 331, 333, 330, 334, 335, 336, 337, 589, 590,
	0, 251, 0, 0, 0, 0, 0, 338, 339, 340,
	591, 0, 0, 0, 341, 0, 342, 0, 0, 1105,
	343, 344, 592, 593, 345, 346, 347, 348, 349, 350,
	351, 352, 0, 353, 594, 0, 595, 354, 0, 355,
	356, 357, 358, 359, 596, 597, 598, 433, 1107, 360,
	361, 0, 362, 363, 364, 365, 0, 0, 0, 0,
	366, 367, 369, 0, 1106, 368, 599, 600, 0, 601,
	0, 370, 371, 1108, 602, 1109, 372, 373, 374, 1110,
	375, 0, 0, 0, 376, 377, 378, 379, 380, 381,
	0, 382, 384, 383, 0, 385, 603, 1111, 386, 387,
	1112, 0, 388, 0, 0, 0, 389, 390, 0, 0,
	391, 392, 393, 394, 0, 395, 396, 398, 400, 397,
	399, 401, 414, 402, 403, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 416, 0, 415, 1113, 417,
	418, 419, 424, 426, 427, 422, 423, 425, 428, 429,
	421, 1114, 420, 0, 0, 1115, 430, 431, 3231, 604,
	432, 605, 434, 435, 0, 0, 436, 0, 0, 0,
	438, 439, 440, 0, 0, 441, 442, 606, 1116, 443,
	1117, 607, 444, 445, 437, 446, 447, 448, 449, 450,
	451, 452, 453, 0, 454, 455, 608, 456, 457, 458,
	609, 459, 460, 461, 610, 462, 611, 463, 464, 0,
	465, 0, 466, 467, 468, 469, 470, 471, 472, 612,
	473, 475, 474, 476, 0, 477, 0, 0, 0, 0,
	0, 478, 0, 480, 481, 482, 479, 483, 484, 485,
	486, 0, 487, 488, 489, 1118, 490, 491, 492, 493,
	613, 494, 0, 495, 496, 502, 503, 497, 498, 504,
	505, 506, 507, 508, 0, 510, 511, 509, 512, 513,
	514, 0, 515, 499, 500, 516, 517, 1119, 518, 519,
	520, 521, 522, 523, 614, 0, 524, 0, 525, 526,
	527, 528, 501, 529, 534, 615, 530, 531, 532, 533,
	616, 0, 536, 537, 0, 535, 0, 538, 539, 540,
	541, 542, 543, 332, 544, 0, 545, 617, 618, 619,
	620, 0, 554, 0, 546, 547, 548, 621, 549, 622,
	0, 550, 551, 552, 553, 0, 555, 556, 0, 0,
	557, 558, 559, 561, 562, 560, 563, 0, 564, 0,
	0, 565, 566, 567, 623, 624, 625, 714, 569, 568,
	570, 626, 0, 0, 0, 0, 571, 572, 627, 573,
	574, 575, 0, 0, 254, 255, 256, 257, 258, 259,
	0, 260, 261, 0, 0, 0, 0, 0, 576, 0,
	0, 0, 0, 262, 263, 0, 264, 265, 266, 267,
	268, 577, 578, 0, 269, 579, 270, 580, 0, 581,
	271, 272, 273, 274, 275, 276, 0, 0, 0, 277,
	582, 583, 584, 0, 278, 279, 585, 0, 0, 0,
	280, 281, 282, 283, 284, 285, 286, 0, 0, 288,
	289, 290, 287, 291, 0, 292, 0, 293, 294, 295,
	296, 297, 298, 0, 299, 300, 301, 0, 302, 303,
	0, 0, 0, 0, 0, 0, 0, 304, 305, 721,
	307, 0, 308, 586, 587, 0, 312, 309, 310, 0,
	313, 311, 0, 314, 315, 316, 0, 0, 317, 318,
	319, 0, 320, 321, 0, 322, 323, 324, 0, 325,
	326, 588, 327, 328, 329, 331, 333, 330, 334, 335,
	336, 337, 589, 590, 0, 251, 0, 0, 0, 0,
	0, 338, 339, 340, 591, 0, 0, 0, 341, 0,
	342, 0, 0, 0, 343, 344, 592, 593, 345, 346,
	347, 348, 349, 350, 351, 352, 0, 353, 594, 0,
	595, 354, 0, 355, 356, 357, 358, 359, 596, 597,
	598, 433, 0, 360, 361, 0, 362, 363, 364, 365,
	0, 0, 0, 252, 366, 367, 369, 0, 0, 368,
	599, 600, 0, 601, 0, 370, 371, 0, 602, 0,
	372, 373, 374, 0, 375, 0, 0, 0, 376, 377,
	378, 379, 380, 381, 0, 382, 384, 383, 0, 385,
	603, 0, 386, 387, 0, 0, 388, 0, 0, 0,
	389, 390, 0, 0, 391, 392, 393, 394, 0, 395,
	396, 398, 400, 397, 399, 401, 414, 402, 403, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 416,
	0, 415, 0, 417, 418, 419, 424, 426, 427, 422,
	423, 425, 428, 429, 421, 0, 420, 0, 253, 0,
	430, 431, 0, 604, 432, 605, 434, 435, 0, 0,
	436, 0, 0, 0, 438, 439, 440, 0, 0, 441,
	442, 606, 0, 443, 0, 607, 444, 445, 437, 446,
	447, 448, 449, 450, 451, 452, 453, 0, 454, 455,
	608, 456, 457, 458, 609, 459, 460, 461, 610, 462,
	611, 463, 464, 0, 465, 0, 466, 467, 468, 469,
	470, 471, 472, 612, 473, 475, 474, 476, 0, 477,
	0, 0, 0, 0, 0, 478, 0, 480, 481, 482,
	479, 483, 484, 485, 486, 0, 487, 488, 489, 0,
	2179, 491, 492, 493, 613, 494, 0, 495, 496, 502,
	503, 497, 498, 2180, 505, 506, 507, 508, 0, 510,
	511, 509, 512, 513, 514, 0, 515, 499, 500, 516,
	517, 0, 518, 519, 520, 521, 522, 523, 614, 0,
	524, 0, 525, 526, 527, 528, 501, 529, 534, 615,
	530, 531, 532, 533, 616, 0, 536, 537, 0, 535,
	719, 538, 539, 540, 541, 720, 543, 332, 544, 0,
	545, 617, 618, 619, 620, 0, 554, 0, 546, 547,
	548, 621, 549, 622, 0, 550, 551, 552, 553, 0,
	555, 556, 0, 0, 557, 558, 559, 561, 562, 560,
	563, 0, 564, 0, 0, 565, 566, 567, 623, 624,
	625, 0, 569, 568, 570, 626, 714, 0, 0, 0,
	571, 572, 627, 573, 574, 575, 0, 0, 0, 0,
	0, 0, 0, 254, 255, 256, 257, 258, 259, 0,
	260, 261, 724, 0, 0, 0, 0, 576, 0, 0,
	0, 0, 262, 263, 0, 264, 265, 266, 267, 268,
	577, 578, 0, 269, 579, 270, 580, 0, 581, 271,
	272, 273, 274, 275, 276, 0, 0, 0, 277, 582,
	583, 584, 0, 278, 279, 585, 0, 0, 0, 280,
	281, 282, 283, 284, 285, 286, 0, 0, 288, 289,
	290, 287, 291, 0, 292, 0, 293, 294, 295, 296,
	297, 298, 0, 299, 300, 301, 0, 302, 303, 0,
	0, 0, 0, 0, 0, 0, 304, 305, 721, 307,
	0, 308, 586, 587, 0, 312, 309, 310, 0, 313,
	311, 0, 314, 315, 316, 0, 0, 317, 318, 319,
	0, 320, 321, 0, 322, 323, 324, 0, 325, 326,
	588, 327, 328, 329, 331, 333, 330, 334, 335, 336,
	337, 589, 590, 0, 251, 0, 0, 0, 0, 0,
	338, 339, 340, 591, 0, 0, 0, 341, 0, 342,
	0, 0, 0, 343, 344, 592, 593, 345, 346, 347,
	348, 349, 350, 351, 352, 0, 353, 594, 0, 595,
	354, 0, 355, 356, 357, 358, 359, 596, 597, 598,
	433, 0, 360, 361, 0, 362, 363, 364, 365, 0,
	0, 0, 252, 366, 367, 369, 0, 0, 368, 599,
	600, 0, 601, 0, 370, 371, 0, 602, 0, 372,
	373, 374, 0, 375, 0, 0, 0, 376, 377, 378,
	379, 380, 381, 0, 382, 384, 383, 0, 385, 603,
	0, 386, 387, 0, 0, 388, 0, 0, 0, 389,
	390, 0, 0, 391, 392, 393, 394, 0, 395, 396,
	398, 400, 397, 399, 401, 414, 402, 403, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 416, 0,
	415, 0, 417, 418, 419, 424, 426, 427, 422, 423,
	425, 428, 429, 421, 0, 420, 0, 253, 0, 430,
	431, 0, 604, 432, 605, 434, 435, 0, 0, 436,
	0, 0, 0, 438, 439, 440, 0, 0, 441, 442,
	606, 0, 443, 0, 607, 444, 445, 437, 446, 447,
	448, 449, 450, 451, 452, 453, 0, 454, 455, 608,
	456, 457, 458, 609, 459, 460, 461, 610, 462, 611,
	463, 464, 0, 465, 0, 466, 467, 468, 469, 470,
	471, 472, 612, 473, 475, 474, 476, 0, 477, 0,
	0, 0, 0, 0, 478, 0, 480, 481, 482, 479,
	483, 484, 485, 486, 0, 487, 488, 489, 0, 490,
	491, 492, 493, 613, 494, 0, 495, 496, 502, 503,
	497, 498, 1911, 505, 506, 507, 508, 0, 510, 511,
	509, 512, 513, 514, 0, 515, 499, 500, 516, 517,
	0, 518, 519, 520, 521, 522, 523, 614, 0, 524,
	0, 525, 526, 527, 528, 501, 529, 534, 615, 530,
	531, 532, 533, 616, 0, 536, 537, 0, 535, 719,
	538, 539, 540, 541, 720, 543, 332, 544, 0, 545,
	617, 618, 619, 620, 0, 554, 0, 546, 547, 548,
	621, 549, 622, 0, 550, 551, 1910, 553, 0, 555,
	556, 0, 0, 557, 558, 559, 561, 562, 560, 563,
	0, 564, 0, 0, 565, 566, 567, 623, 624, 625,
	0, 569, 568, 570, 626, 714, 0, 0, 0, 571,
	572, 627, 573, 574, 575, 0, 0, 0, 0, 0,
	0, 0, 254, 255, 256, 257, 258, 259, 0, 260,
	261, 724, 0, 0, 0, 0, 576, 0, 0, 0,
	0, 262, 263, 0, 264, 265, 266, 267, 268, 577,
	578, 0, 269, 579, 270, 580, 0, 581, 271, 272,
	273, 274, 275, 276, 0, 0, 0, 277, 582, 583,
	584, 0, 278, 279, 585, 0, 0, 0, 280, 281,
	282, 283, 284, 285, 286, 0, 0, 288, 289, 290,
	287, 291, 0, 292, 0, 293, 294, 295, 296, 297,
	298, 0, 299, 300, 301, 0, 302, 303, 0, 0,
	0, 0, 0, 0, 0, 304, 305, 721, 307, 0,
	308, 586, 587, 0, 312, 309, 310, 0, 313, 311,
	0, 314, 315, 316, 0, 0, 317, 318, 319, 0,
	320, 321, 0, 322, 323, 324, 0, 325, 326, 588,
	327, 328, 329, 331, 333, 330, 334, 335, 336, 337,
	589, 590, 0, 251, 0, 0, 0, 0, 0, 338,
	339, 340, 591, 0, 0, 0, 341, 0, 342, 0,
	0, 0, 343, 344, 592, 593, 345, 346, 347, 348,
	349, 350, 351, 352, 0, 353, 594, 0, 595, 354,
	0, 355, 356, 357, 358, 359, 596, 597, 598, 433,
	0, 360, 361, 0, 362, 363, 364, 365, 0, 0,
	0, 252, 366, 367, 369, 0, 0, 368, 599, 600,
	0, 601, 0, 370, 371, 0, 602, 0, 372, 373,
	374, 0, 375, 0, 0, 0, 376, 377, 378, 379,
	380, 381, 0, 382, 384, 383, 0, 385, 603, 0,
	386, 387, 0, 0, 388, 0, 0, 0, 389, 390,
	0, 0, 391, 392, 393, 394, 0, 395, 396, 398,
	400, 397, 399, 401, 414, 402, 403, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 416, 0, 415,
	0, 417, 418, 419, 424, 426, 427, 422, 423, 425,
	428, 429, 421, 0, 420, 0, 253, 0, 430, 431,
	0, 604, 432, 605, 434, 435, 0, 0, 436, 0,
	0, 0, 438, 439, 440, 0, 0, 441, 442, 606,
	0, 443, 0, 607, 444, 445, 437, 446, 447, 448,
	449, 450, 451, 452, 453, 0, 454, 455, 608, 456,
	457, 458, 609, 459, 460, 461, 610, 462, 611, 463,
	464, 0, 465, 0, 466, 467, 468, 469, 470, 471,
	472, 612, 473, 475, 474, 476, 0, 477, 0, 0,
	0, 0, 0, 478, 0, 480, 481, 482, 479, 483,
	484, 485, 486, 0, 487, 488, 489, 0, 490, 491,
	492, 493, 613, 494, 0, 495, 496, 502, 503, 497,
	498, 1864, 505, 506, 507, 508, 0, 510, 511, 509,
	512, 513, 514, 0, 515, 499, 500, 516, 517, 0,
	518, 519, 520, 521, 522, 523, 614, 0, 524, 0,
	525, 526, 527, 528, 501, 529, 534, 615, 530, 531,
	532, 533, 616, 0, 536, 537, 0, 535, 719, 538,
	539, 540, 541, 720, 543, 332, 544, 0, 545, 617,
	618, 619, 620, 0, 554, 0, 546, 547, 548, 621,
	549, 622, 0, 550, 551, 1863, 553, 0, 555, 556,
	0, 0, 557, 558, 559, 561, 562, 560, 563, 0,
	564, 0, 0, 565, 566, 567, 623, 624, 625, 0,
	569, 568, 570, 626, 0, 0, 0, 0, 571, 572,
	627, 573, 574, 575, 1555, 0, 1350, 1349, 0, 0,
	0, 0, 1347, 0, 0, 0, 0, 0, 0, 0,
	724, 0, 0, 254, 255, 256, 257, 258, 259, 0,
	260, 261, 0, 0, 0, 0, 0, 576, 0, 0,
	0, 0, 262, 263, 1103, 264, 265, 266, 267, 268,
	577, 578, 0, 269, 579, 270, 580, 0, 581, 271,
	272, 273, 274, 275, 276, 0, 0, 0, 277, 582,
	583, 584, 0, 278, 279, 585, 0, 1316, 0, 280,
	281, 282, 283, 284, 285, 286, 0, 0, 288, 289,
	290, 287, 291, 0, 292, 0, 293, 294, 295, 296,
	297, 298, 0, 299, 300, 301, 1104, 302, 303, 0,
	0, 0, 0, 0, 0, 0, 304, 305, 306, 307,
	0, 308, 586, 587, 0, 312, 309, 310, 0, 313,
	311, 0, 314, 315, 316, 0, 0, 317, 318, 319,
	0, 320, 321, 0, 322, 323, 324, 0, 325, 326,
	588, 327, 328, 329, 331, 333, 330, 334, 335, 336,
	337, 589, 590, 0, 251, 0, 0, 0, 0, 0,
	1554, 339, 340, 591, 0, 0, 0, 341, 0, 342,
	0, 0, 1105, 343, 344, 592, 593, 345, 346, 347,
	348, 349, 350, 351, 352, 0, 353, 594, 0, 595,
	354, 0, 355, 356, 357, 358, 359, 596, 597, 598,
	433, 1107, 360, 361, 0, 362, 363, 364, 365, 0,
	0, 0, 0, 366, 367, 369, 0, 1106, 368, 599,
	600, 0, 601, 0, 370, 371, 1108, 602, 1109, 372,
	373, 374, 1110, 375, 0, 0, 0, 376, 377, 378,
	379, 380, 381, 0, 382, 384, 383, 0, 385, 603,
	1111, 386, 387, 1112, 0, 388, 0, 0, 0, 389,
	390, 0, 0, 391, 392, 393, 394, 0, 395, 396,
	398, 400, 397, 399, 401, 414, 402, 403, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 416, 0,
	415, 1113, 417, 418, 419, 424, 426, 427, 422, 423,
	425, 428, 429, 421, 1114, 420, 0, 0, 1115, 430,
	431, 0, 604, 432, 605, 434, 435, 0, 0, 436,
	0, 0, 0, 438, 439, 440, 0, 0, 441, 442,
	606, 1116, 443, 1117, 607, 444, 445, 437, 446, 447,
	448, 449, 450, 451, 452, 453, 0, 454, 455, 608,
	456, 457, 458, 609, 459, 460, 461, 610, 462, 611,
	463, 464, 0, 465, 0, 466, 467, 468, 469, 470,
	1553, 472, 612, 473, 475, 474, 476, 0, 477, 0,
	0, 0, 0, 0, 478, 0, 480, 481, 482, 479,
	483, 484, 485, 486, 0, 487, 488, 489, 1118, 490,
	491, 492, 493, 613, 494, 0, 495, 496, 502, 503,
	497, 498, 504, 1552, 506, 507, 508, 0, 510, 511,
	509, 512, 513, 514, 0, 515, 499, 500, 516, 517,
	1119, 518, 519, 520, 521, 522, 523, 614, 0, 524,
	0, 525, 526, 527, 528, 501, 529, 534, 615, 530,
	531, 532, 533, 616, 0, 536, 537, 0, 535, 0,
	538, 539, 540, 541, 542, 543, 332, 544, 0, 545,
	617, 618, 619, 620, 0, 554, 0, 546, 547, 548,
	621, 549, 622, 0, 550, 551, 552, 553, 0, 555,
	556, 0, 0, 557, 558, 559, 561, 562, 560, 563,
	0, 564, 0, 0, 565, 566, 567, 623, 624, 625,
	0, 569, 568, 570, 626, 0, 0, 0, 0, 571,
	572, 627, 573, 574, 575, 1495, 0, 1350, 1349, 0,
	0, 0, 0, 1347, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 254, 255, 256, 257, 258, 259,
	0, 260, 261, 0, 0, 0, 0, 0, 576, 0,
	0, 0, 0, 262, 263, 1103, 264, 265, 266, 267,
	268, 577, 578, 0, 269, 579, 270, 580, 0, 581,
	271, 272, 273, 274, 275, 276, 0, 0, 0, 277,
	582, 583, 584, 0, 278, 279, 585, 0, 1316, 0,
	280, 281, 282, 283, 284, 285, 286, 0, 0, 288,
	289, 290, 287, 291, 0, 292, 0, 293, 294, 295,
	296, 297, 298, 0, 299, 300, 301, 1104, 302, 303,
	0, 0, 0, 0, 0, 0, 0, 304, 305, 306,
	307, 0, 308, 586, 587, 0, 312, 309, 310, 0,
	313, 311, 0, 314, 315, 316, 0, 0, 317, 318,
	319, 0, 320, 321, 0, 322, 323, 324, 0, 325,
	326, 588, 327, 328, 329, 331, 333, 330, 334, 335,
	336, 337, 589, 590, 0, 251, 0, 0, 0, 0,
	0, 338, 339, 340, 591, 0, 0, 0, 341, 0,
	342, 0, 0, 1105, 343, 344, 592, 593, 345, 346,
	347, 348, 349, 350, 351, 352, 0, 353, 594, 0,
	595, 354, 0, 355, 356, 357, 358, 359, 1494, 597,
	598, 433, 1107, 360, 361, 0, 362, 363, 364, 365,
	0, 0, 0, 0, 366, 367, 369, 0, 1106, 368,
	599, 600, 0, 601, 0, 370, 371, 1108, 602, 1109,
	372, 373, 374, 1110, 375, 0, 0, 0, 376, 377,
	378, 379, 380, 381, 0, 382, 384, 383, 0, 385,
	603, 1111, 386, 387, 1112, 0, 388, 0, 0, 0,
	389, 390, 0, 0, 391, 392, 393, 394, 0, 395,
	396, 398, 400, 397, 399, 401, 414, 402, 403, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 416,
	0, 415, 1113, 417, 418, 419, 424, 426, 427, 422,
	423, 425, 428, 429, 421, 1114, 420, 0, 0, 1115,
	430, 431, 0, 604, 432, 605, 434, 435, 0, 0,
	436, 0, 0, 0, 438, 439, 440, 0, 0, 441,
	442, 606, 1116, 443, 1117, 607, 444, 445, 437, 446,
	447, 448, 449, 450, 451, 452, 453, 0, 454, 455,
	608, 456, 457, 458, 609, 459, 460, 461, 610, 462,
	611, 463, 464, 0, 465, 0, 466, 467, 468, 469,
	470, 471, 472, 612, 473, 475, 474, 476, 0, 477,
	0, 0, 0, 0, 0, 478, 0, 480, 481, 482,
	479, 483, 484, 485, 486, 0, 487, 488, 489, 1118,
	490, 491, 492, 493, 613, 494, 0, 495, 496, 502,
	503, 497, 498, 504, 505, 506, 507, 508, 0, 510,
	511, 509, 512, 513, 514, 0, 515, 499, 500, 516,
	517, 1119, 518, 519, 520, 521, 522, 523, 614, 0,
	524, 0, 525, 526, 527, 528, 501, 529, 534, 615,
	530, 531, 532, 533, 616, 0, 536, 537, 0, 535,
	0, 538, 539, 540, 541, 542, 543, 332, 544, 0,
	545, 617, 618, 619, 620, 0, 554, 0, 546, 547,
	548, 621, 549, 622, 0, 550, 551, 552, 553, 0,
	555, 556, 0, 0, 557, 558, 559, 561, 562, 560,
	563, 0, 564, 0, 0, 565, 566, 567, 623, 624,
	625, 0, 569, 568, 570, 626, 0, 0, 0, 0,
	571, 572, 627, 573, 574, 575, 1423, 0, 1350, 1349,
	0, 0, 0, 0, 1347, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 254, 255, 256, 257, 258,
	259, 0, 260, 261, 0, 0, 0, 0, 0, 576,
	0, 0, 0, 0, 262, 263, 1103, 264, 265, 266,
	267, 268, 577, 578, 0, 269, 579, 270, 580, 0,
	581, 271, 272, 273, 274, 275, 276, 0, 0, 0,
	277, 582, 583, 584, 0, 278, 279, 585, 0, 1316,
	0, 280, 281, 282, 283, 284, 285, 286, 0, 0,
	288, 289, 290, 287, 291, 0, 292, 0, 293, 294,
	295, 296, 297, 298, 0, 299, 300, 301, 1104, 302,
	303, 0, 0, 0, 0, 0, 0, 0, 304, 305,
	306, 307, 0, 308, 586, 587, 0, 312, 309, 310,
	0, 313, 311, 0, 314, 315, 316, 0, 0, 317,
	318, 319, 0, 320, 321, 0, 322, 323, 324, 0,
	325, 326, 588, 327, 328, 329, 331, 333, 330, 334,
	335, 336, 337, 589, 590, 0, 251, 0, 0, 0,
	0, 0, 338, 339, 340, 591, 0, 0, 0, 341,
	0, 342, 0, 0, 1105, 343, 344, 592, 593, 345,
	346, 347, 348, 349, 350, 351, 352, 0, 353, 594,
	0, 595, 354, 0, 355, 356, 357, 358, 359, 1422,
	597, 598, 433, 1107, 360, 361, 0, 362, 363, 364,
	365, 0, 0, 0, 0, 366, 367, 369, 0, 1106,
	368, 599, 600, 0, 601, 0, 370, 371, 1108, 602,
	1109, 372, 373, 374, 1110, 375, 0, 0, 0, 376,
	377, 378, 379, 380, 381, 0, 382, 384, 383, 0,
	385, 603, 1111, 386, 387, 1112, 0, 388, 0, 0,
	0, 389, 390, 0, 0, 391, 392, 393, 394, 0,
	395, 396, 398, 400, 397, 399, 401, 414, 402, 403,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	416, 0, 415, 1113, 417, 418, 419, 424, 426, 427,
	422, 423, 425, 428, 429, 421, 1114, 420, 0, 0,
	1115, 430, 431, 0, 604, 432, 605, 434, 435, 0,
	0, 436, 0, 0, 0, 438, 439, 440, 0, 0,
	441, 442, 606, 1116, 443, 1117, 607, 444, 445, 437,
	446, 447, 448, 449, 450, 451, 452, 453, 0, 454,
	455, 608, 456, 457, 458, 609, 459, 460, 461, 610,
	462, 611, 463, 464, 0, 465, 0, 466, 467, 468,
	469, 470, 471, 472, 612, 473, 475, 474, 476, 0,
	477, 0, 0, 0, 0, 0, 478, 0, 480, 481,
	482, 479, 483, 484, 485, 486, 0, 487, 488, 489,
	1118, 490, 491, 492, 493, 613, 494, 0, 495, 496,
	502, 503, 497, 498, 504, 505, 506, 507, 508, 0,
	510, 511, 509, 512, 513, 514, 0, 515, 499, 500,
	516, 517, 1119, 518, 519, 520, 521, 522, 523, 614,
	0, 524, 0, 525, 526, 527, 528, 501, 529, 534,
	615, 530, 531, 532, 533, 616, 0, 536, 537, 0,
	535, 0, 538, 539, 540, 541, 542, 543, 332, 544,
	0, 545, 617, 618, 619, 620, 0, 554, 0, 546,
	547, 548, 621, 549, 622, 0, 550, 551, 552, 553,
	0, 555, 556, 0, 0, 557, 558, 559, 561, 562,
	560, 563, 0, 564, 0, 0, 565, 566, 567, 623,
	624, 625, 0, 569, 568, 570, 626, 0, 0, 0,
	0, 571, 572, 627, 573, 574, 575, 1385, 0, 1350,
	1349, 0, 0, 0, 0, 1347, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 254, 255, 256, 257,
	258, 259, 0, 260, 261, 0, 0, 0, 0, 0,
	576, 0, 0, 0, 0, 262, 263, 1103, 264, 265,
	266, 267, 268, 577, 578, 0, 269, 579, 270, 580,
	0, 581, 271, 272, 273, 274, 275, 276, 0, 0,
	0, 277, 582, 583, 584, 0, 278, 279, 585, 0,
	1316, 0, 280, 281, 282, 283, 284, 285, 286, 0,
	0, 288, 289, 290, 287, 291, 0, 292, 0, 293,
	294, 295, 296, 297, 298, 0, 299, 300, 301, 1104,
	302, 303, 0, 0, 0, 0, 0, 0, 0, 304,
	305, 306, 307, 0, 308, 586, 587, 0, 312, 309,
	310, 0, 313, 311, 0, 314, 315, 316, 0, 0,
	317, 318, 319, 0, 320, 321, 0, 322, 323, 324,
	0, 325, 326, 588, 327, 328, 329, 331, 333, 330,
	334, 335, 336, 337, 589, 590, 0, 251, 0, 0,
	0, 0, 0, 338, 339, 340, 591, 0, 0, 0,
	341, 0, 342, 0, 0, 1105, 343, 344, 592, 593,
	345, 346, 347, 348, 349, 350, 351, 352, 0, 353,
	594, 0, 595, 354, 0, 355, 356, 357, 358, 359,
	596, 597, 598, 433, 1107, 360, 361, 0, 362, 363,
	364, 365, 0, 0, 0, 0, 366, 367, 369, 0,
	1106, 368, 599, 600, 0, 601, 0, 370, 371, 1108,
	602, 1109, 372, 373, 374, 1110, 375, 0, 0, 0,
	376, 377, 378, 379, 380, 381, 0, 382, 384, 383,
	0, 385, 603, 1111, 386, 387, 1112, 0, 388, 0,
	0, 0, 389, 390, 0, 0, 391, 392, 393, 394,
	0, 395, 396, 398, 400, 397, 399, 401, 414, 402,
	403, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 416, 0, 415, 1113, 417, 418, 419, 424, 426,
	427, 422, 423, 425, 428, 429, 421, 1114, 420, 0,
	0, 1115, 430, 431, 0, 604, 432, 605, 434, 435,
	0, 0, 436, 0, 0, 0, 438, 439, 440, 0,
	0, 441, 442, 606, 1116, 443, 1117, 607, 444, 445,
	437, 446, 447, 448, 449, 450, 451, 452, 453, 0,
	454, 455, 608, 456, 457, 458, 609, 459, 460, 461,
	610, 462, 611, 463, 464, 0, 465, 0, 466, 467,
	468, 469, 470, 471, 472, 612, 473, 475, 474, 476,
	0, 477, 0, 0, 0, 0, 0, 478, 0, 480,
	481, 482, 479, 483, 484, 485, 486, 0, 487, 488,
	489, 1118, 490, 491, 492, 493, 613, 494, 0, 495,
	496, 502, 503, 497, 498, 504, 505, 506, 507, 508,
	0, 510, 511, 509, 512, 513, 514, 0, 515, 499,
	500, 516, 517, 1119, 518, 519, 520, 521, 522, 523,
	614, 0, 524, 0, 525, 526, 527, 528, 501, 529,
	534, 615, 530, 531, 532, 533, 616, 0, 536, 537,
	0, 535, 0, 538, 539, 540, 541, 542, 543, 332,
	544, 0, 545, 617, 618, 619, 620, 0, 554, 0,
	546, 547, 548, 621, 549, 622, 0, 550, 551, 552,
	553, 0, 555, 556, 0, 0, 557, 558, 559, 561,
	562, 560, 563, 0, 564, 0, 0, 565, 566, 567,
	623, 624, 625, 0, 569, 568, 570, 626, 0, 0,
	0, 0, 571, 572, 627, 573, 574, 575, 1345, 0,
	1350, 1349, 0, 0, 0, 0, 1347, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 254, 255, 256,
	257, 258, 259, 0, 260, 261, 0, 0, 0, 0,
	0, 576, 0, 0, 0, 0, 262, 263, 1103, 264,
	265, 266, 267, 268, 577, 578, 0, 269, 579, 270,
	580, 0, 581, 271, 272, 273, 274, 275, 276, 0,
	0, 0, 277, 582, 583, 584, 0, 278, 279, 585,
	0, 1316, 0, 280, 281, 282, 283, 284, 285, 286,
	0, 0, 288, 289, 290, 287, 291, 0, 292, 0,
	293, 294, 295, 296, 297, 298, 0, 299, 300, 301,
	1104, 302, 303, 0, 0, 0, 0, 0, 0, 0,
	304, 305, 306, 307, 0, 308, 586, 587, 0, 312,
	309, 310, 0, 313, 311, 0, 314, 315, 316, 0,
	0, 317, 318, 319, 0, 320, 321, 0, 322, 323,
	324, 0, 325, 326, 588, 327, 328, 329, 331, 333,
	330, 334, 335, 336, 337, 589, 590, 0, 251, 0,
	0, 0, 0, 0, 338, 339, 340, 591, 0, 0,
	0, 341, 0, 342, 0, 0, 1105, 343, 344, 592,
	593, 345, 346, 347, 348, 349, 350, 351, 352, 0,
	353, 594, 0, 595, 354, 0, 355, 356, 357, 358,
	359, 1344, 597, 598, 433, 1107, 360, 361, 0, 362,
	363, 364, 365, 0, 0, 0, 0, 366, 367, 369,
	0, 1106, 368, 599, 600, 0, 601, 0, 370, 371,
	1108, 602, 1109, 372, 373, 374, 1110, 375, 0, 0,
	0, 376, 377, 378, 379, 380, 381, 0, 382, 384,
	383, 0, 385, 603, 1111, 386, 387, 1112, 0, 388,
	0, 0, 0, 389, 390, 0, 0, 391, 392, 393,
	394, 0, 395, 396, 398, 400, 397, 399, 401, 414,
	402, 403, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 416, 0, 415, 1113, 417, 418, 419, 424,
	426, 427, 422, 423, 425, 428, 429, 421, 1114, 420,
	0, 0, 1115, 430, 431, 0, 604, 432, 605, 434,
	435, 0, 0, 436, 0, 0, 0, 438, 439, 440,
	0, 0, 441, 442, 606, 1116, 443, 1117, 607, 444,
	445, 437, 446, 447, 448, 449, 450, 451, 452, 453,
	0, 454, 455, 608, 456, 457, 458, 609, 459, 460,
	461, 610, 462, 611, 463, 464, 0, 465, 0, 466,
	467, 468, 469, 470, 471, 472, 612, 473, 475, 474,
	476, 0, 477, 0, 0, 0, 0, 0, 478, 0,
	480, 481, 482, 479, 483, 484, 485, 486, 0, 487,
	488, 489, 1118, 490, 491, 492, 493, 613, 494, 0,
	495, 496, 502, 503, 497, 498, 504, 505, 506, 507,
	508, 0, 510, 511, 509, 512, 513, 514, 0, 515,
	499, 500, 516, 517, 1119, 518, 519, 520, 521, 522,
	523, 614, 0, 524, 0, 525, 526, 527, 528, 501,
	529, 534, 615, 530, 531, 532, 533, 616, 0, 536,
	537, 0, 535, 0, 538, 539, 540, 541, 542, 543,
	332, 544, 0, 545, 617, 618, 619, 620, 0, 554,
	0, 546, 547, 548, 621, 549, 622, 0, 550, 551,
	552, 553, 0, 555, 556, 0, 0, 557, 558, 559,
	561, 562, 560, 563, 0, 564, 0, 0, 565, 566,
	567, 623, 624, 625, 0, 569, 568, 570, 626, 0,
	0, 0, 0, 571, 572, 627, 573, 574, 575, 1350,
	1349, 0, 0, 0, 0, 1347, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 254, 255, 256, 257,
	258, 259, 0, 260, 261, 0, 0, 0, 0, 0,
	576, 0, 0, 0, 0, 262, 263, 1103, 264, 265,
	266, 267, 268, 577, 578, 0, 269, 579, 270, 580,
	0, 581, 271, 272, 273, 274, 275, 276, 0, 0,
	0, 277, 582, 583, 584, 0, 278, 279, 585, 0,
	1316, 0, 280, 281, 282, 283, 284, 285, 286, 0,
	0, 288, 289, 290, 287, 291, 0, 292, 0, 293,
	294, 295, 296, 297, 298, 0, 299, 300, 301, 1104,
	302, 303, 0, 0, 0, 0, 0, 0, 0, 304,
	305, 306, 307, 0, 308, 586, 587, 0, 312, 309,
	310, 0, 313, 311, 0, 314, 315, 316, 0, 0,
	317, 318, 319, 0, 320, 321, 0, 322, 323, 324,
	0, 325, 326, 588, 327, 328, 329, 331, 333, 330,
	334, 335, 336, 337, 589, 590, 0, 251, 0, 0,
	0, 0, 0, 338, 339, 340, 591, 0, 0, 0,
	341, 0, 342, 0, 0, 1105, 343, 344, 592, 593,
	345, 346, 347, 348, 349, 350, 351, 352, 0, 353,
	594, 0, 595, 354, 0, 355, 356, 357, 358, 359,
	596, 597, 598, 433, 1107, 360, 361, 0, 362, 363,
	364, 365, 0, 0, 0, 0, 366, 367, 369, 0,
	1106, 368, 599, 600, 0, 601, 0, 370, 371, 1108,
	602, 1109, 372, 373, 374, 1110, 375, 0, 0, 0,
	376, 377, 378, 379, 380, 381, 0, 382, 384, 383,
	0, 385, 603, 1111, 386, 387, 1112, 0, 388, 0,
	0, 0, 389, 390, 0, 0, 391, 392, 393, 394,
	0, 395, 396, 398, 400, 397, 399, 401, 414, 402,
	403, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 416, 0, 415, 1113, 417, 418, 419, 424, 426,
	427, 422, 423, 425, 428, 429, 421, 1114, 420, 0,
	0, 1115, 430, 431, 0, 604, 432, 605, 434, 435,
	0, 0, 436, 0, 0, 0, 438, 439, 440, 0,
	0, 441, 442, 606, 1116, 443, 1117, 607, 444, 445,
	437, 446, 447, 448, 449, 450, 451, 452, 453, 0,
	454, 455, 608, 456, 457, 458, 609, 459, 460, 461,
	610, 462, 611, 463, 464, 0, 465, 0, 466, 467,
	468, 469, 470, 471, 472, 612, 473, 475, 474, 476,
	0, 477, 0, 0, 0, 0, 0, 478, 0, 480,
	481, 482, 479, 483, 484, 485, 486, 0, 487, 488,
	489, 1118, 490, 491, 492, 493, 613, 494, 0, 495,
	496, 502, 503, 497, 498, 504, 505, 506, 507, 508,
	0, 510, 511, 509, 512, 513, 514, 0, 515, 499,
	500, 516, 517, 1119, 518, 519, 520, 521, 522, 523,
	614, 0, 524, 0, 525, 526, 527, 528, 501, 529,
	534, 615, 530, 531, 532, 533, 616, 0, 536, 537,
	0, 535, 0, 538, 539, 540, 541, 542, 543, 332,
	544, 0, 545, 617, 618, 619, 620, 0, 554, 0,
	546, 547, 548, 621, 549, 622, 0, 550, 551, 552,
	553, 0, 555, 556, 0, 0, 557, 558, 559, 561,
	562, 560, 563, 0, 564, 0, 0, 565, 566, 567,
	623, 624, 625, 248, 569, 568, 570, 626, 0, 0,
	0, 0, 571, 572, 627, 573, 574, 575, 0, 0,
	254, 255, 256, 257, 258, 259, 0, 260, 261, 0,
	0, 0, 0, 0, 576, 0, 0, 0, 0, 262,
	263, 0, 264, 265, 266, 267, 268, 577, 578, 0,
	269, 579, 270, 580, 0, 581, 271, 272, 273, 274,
	275, 276, 0, 0, 0, 277, 582, 583, 584, 0,
	278, 279, 585, 0, 0, 0, 280, 281, 282, 283,
	284, 285, 286, 0, 0, 288, 289, 290, 287, 291,
	0, 292, 0, 293, 294, 295, 296, 297, 298, 0,
	299, 300, 301, 0, 302, 303, 0, 0, 0, 0,
	0, 0, 0, 304, 305, 306, 307, 0, 308, 586,
	587, 0, 312, 309, 310, 0, 313, 311, 0, 314,
	315, 316, 0, 0, 317, 318, 319, 0, 320, 321,
	0, 322, 323, 324, 0, 325, 326, 588, 327, 328,
	329, 331, 333, 330, 334, 335, 336, 337, 589, 590,
	0, 251, 0, 0, 0, 0, 0, 338, 339, 340,
	591, 0, 0, 0, 341, 0, 342, 0, 0, 0,
	343, 344, 592, 593, 345, 346, 347, 348, 349, 350,
	351, 352, 0, 353, 594, 0, 595, 354, 0, 355,
	356, 357, 358, 359, 596, 597, 598, 433, 0, 360,
	361, 0, 362, 363, 364, 365, 0, 0, 0, 252,
	366, 367, 369, 0, 0, 368, 599, 600, 0, 601,
	0, 370, 371, 0, 602, 0, 372, 373, 374, 0,
	375, 0, 0, 0, 376, 377, 378, 379, 380, 381,
	0, 382, 384, 383, 0, 385, 603, 0, 386, 387,
	0, 0, 388, 0, 0, 0, 389, 390, 0, 0,
	391, 392, 393, 394, 0, 395, 396, 398, 400, 397,
	399, 401, 414, 402, 403, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 416, 0, 415, 0, 417,
	418, 419, 424, 426, 427, 422, 423, 425, 428, 429,
	421, 0, 420, 0, 253, 0, 430, 431, 0, 604,
	432, 605, 434, 435, 0, 0, 436, 0, 0, 0,
	438, 439, 440, 0, 0, 441, 442, 606, 0, 443,
	0, 607, 444, 445, 437, 446, 447, 448, 449, 450,
	451, 452, 453, 0, 454, 455, 608, 456, 457, 458,
	609, 459, 460, 461, 610, 462, 611, 463, 464, 0,
	465, 0, 466, 467, 468, 469, 470, 471, 472, 612,
	473, 475, 474, 476, 0, 477, 0, 0, 0, 0,
	0, 478, 0, 480, 481, 482, 479, 483, 484, 485,
	486, 0, 487, 488, 489, 0, 490, 491, 492, 493,
	613, 494, 0, 495, 496, 502, 503, 497, 498, 504,
	505, 506, 507, 508, 0, 510, 511, 509, 512, 513,
	514, 0, 515, 499, 500, 516, 517, 0, 518, 519,
	520, 521, 522, 523, 614, 0, 524, 0, 525, 526,
	527, 528, 501, 529, 534, 615, 530, 531, 532, 533,
	616, 0, 536, 537, 0, 535, 0, 538, 539, 540,
	541, 542, 543, 332, 544, 0, 545, 617, 618, 619,
	620, 0, 554, 0, 546, 547, 548, 621, 549, 622,
	0, 550, 551, 552, 553, 0, 555, 556, 0, 0,
	557, 558, 559, 561, 562, 560, 563, 0, 564, 0,
	0, 565, 566, 567, 623, 624, 625, 0, 569, 568,
	570, 626, 1350, 1349, 0, 0, 571, 572, 627, 573,
	574, 575, 0, 0, 0, 0, 0, 0, 0, 254,
	255, 256, 257, 258, 259, 0, 260, 261, 724, 0,
	0, 0, 0, 576, 0, 0, 0, 0, 262, 263,
	1103, 264, 265, 266, 267, 268, 577, 578, 0, 269,
	579, 270, 580, 0, 581, 271, 272, 273, 274, 275,
	276, 0, 0, 0, 277, 582, 583, 584, 0, 278,
	279, 585, 0, 1316, 0, 280, 281, 282, 283, 284,
	285, 286, 0, 0, 288, 289, 290, 287, 291, 0,
	292, 0, 293, 294, 295, 296, 297, 298, 0, 299,
	300, 301, 1104, 302, 303, 0, 0, 0, 0, 0,
	0, 0, 304, 305, 306, 307, 0, 308, 586, 587,
	1926, 312, 309, 310, 0, 313, 311, 0, 314, 315,
	316, 0, 0, 317, 318, 319, 0, 320, 321, 0,
	322, 323, 324, 0, 325, 326, 588, 327, 328, 329,
	331, 333, 330, 334, 335, 336, 337, 589, 590, 0,
	251, 0, 0, 0, 0, 0, 338, 339, 340, 591,
	0, 0, 0, 341, 0, 342, 0, 0, 1105, 343,
	344, 592, 593, 345, 346, 347, 348, 349, 350, 351,
	352, 0, 353, 594, 0, 595, 354, 0, 355, 356,
	357, 358, 359, 596, 597, 598, 433, 1107, 360, 361,
	0, 362, 363, 364, 365, 0, 0, 0, 0, 366,
	367, 369, 0, 1106, 368, 599, 600, 0, 601, 0,
	370, 371, 1108, 602, 1109, 372, 373, 374, 1110, 375,
	0, 0, 0, 376, 377, 378, 379, 380, 381, 0,
	382, 384, 383, 0, 385, 603, 1111, 386, 387, 1112,
	0, 388, 0, 0, 0, 389, 390, 0, 0, 391,
	392, 393, 394, 0, 395, 396, 398, 400, 397, 399,
	401, 414, 402, 403, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 416, 0, 415, 1113, 417, 418,
	419, 424, 426, 427, 422, 423, 425, 428, 429, 421,
	1114, 420, 0, 0, 1115, 430, 431, 0, 604, 432,
	605, 434, 435, 0, 0, 436, 0, 0, 0, 438,
	439, 440, 0, 0, 441, 442, 606, 1116, 443, 1117,
	607, 444, 445, 437, 446, 447, 448, 449, 450, 451,
	452, 453, 0, 454, 455, 608, 456, 457, 458, 609,
	459, 460, 461, 610, 462, 611, 463, 464, 0, 465,
	0, 466, 467, 468, 469, 470, 471, 472, 612, 473,
	475, 474, 476, 0, 477, 0, 0, 0, 0, 0,
	478, 0, 480, 481, 482, 479, 483, 484, 485, 486,
	0, 487, 488, 489, 1118, 490, 491, 492, 493, 613,
	494, 0, 495, 496, 502, 503, 497, 498, 504, 505,
	506, 507, 508, 0, 510, 511, 509, 512, 513, 514,
	0, 515, 499, 500, 516, 517, 1119, 518, 519, 520,
	521, 522, 523, 614, 0, 524, 0, 525, 526, 527,
	528, 501, 529, 534, 615, 530, 531, 532, 533, 616,
	0, 536, 537, 0, 535, 0, 538, 539, 540, 541,
	542, 543, 332, 544, 0, 545, 617, 618, 619, 620,
	0, 554, 0, 546, 547, 548, 621, 549, 622, 0,
	550, 551, 552, 553, 0, 555, 556, 0, 0, 557,
	558, 559, 561, 562, 560, 563, 0, 564, 0, 0,
	565, 566, 567, 623, 624, 625, 0, 569, 568, 570,
	626, 1350, 1349, 0, 0, 571, 572, 627, 573, 574,
	575, 0, 0, 0, 0, 0, 0, 0, 254, 255,
	256, 257, 258, 259, 0, 260, 261, 0, 0, 0,
	0, 0, 576, 0, 0, 0, 0, 262, 263, 1103,
	264, 265, 266, 267, 268, 577, 578, 0, 269, 579,
	270, 580, 0, 581, 271, 272, 273, 274, 275, 276,
	0, 0, 0, 277, 582, 583, 584, 0, 278, 279,
	585, 0, 1316, 0, 280, 281, 282, 283, 284, 285,
	286, 0, 0, 288, 289, 290, 287, 291, 0, 292,
	0, 293, 294, 295, 296, 297, 298, 0, 299, 300,
	301, 1104, 302, 303, 0, 0, 0, 0, 0, 0,
	0, 304, 305, 306, 307, 0, 308, 586, 587, 0,
	312, 309, 310, 0, 313, 311, 0, 314, 315, 316,
	0, 0, 317, 318, 319, 0, 320, 321, 0, 322,
	323, 324, 0, 325, 326, 588, 327, 328, 329, 331,
	333, 330, 334, 335, 336, 337, 589, 590, 0, 251,
	0, 0, 0, 0, 0, 338, 339, 340, 591, 0,
	0, 0, 341, 0, 342, 0, 0, 1105, 343, 344,
	592, 593, 345, 346, 347, 348, 349, 350, 351, 352,
	0, 353, 594, 0, 595, 354, 0, 355, 356, 357,
	358, 359, 596, 597, 598, 433, 1107, 360, 361, 0,
	362, 363, 364, 365, 0, 0, 0, 0, 366, 367,
	369, 0, 1106, 368, 599, 600, 0, 601, 0, 370,
	371, 1108, 602, 1109, 372, 373, 374, 1110, 375, 0,
	0, 0, 376, 377, 378, 379, 380, 381, 0, 382,
	384, 383, 0, 385, 603, 1111, 386, 387, 1112, 0,
	388, 0, 0, 0, 389, 390, 0, 0, 391, 392,
	393, 394, 0, 395, 396, 398, 400, 397, 399, 401,
	414, 402, 403, 404, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 416, 0, 415, 1113, 417, 418, 419,
	424, 426, 427, 422, 423, 425, 428, 429, 421, 1114,
	420, 0, 0, 1115, 430, 431, 0, 604, 432, 605,
	434, 435, 0, 0, 436, 0, 0, 0, 438, 439,
	440, 0, 0, 441, 442, 606, 1116, 443, 1117, 607,
	444, 445, 437, 446, 447, 448, 449, 450, 451, 452,
	453, 0, 454, 455, 608, 456, 457, 458, 609, 459,
	460, 461, 610, 462, 611, 463, 464, 0, 465, 0,
	466, 467, 468, 469, 470, 471, 472, 612, 473, 475,
	474, 476, 0, 477, 0, 0, 0, 0, 0, 478,
	0, 480, 481, 482, 479, 483, 484, 485, 486, 0,
	487, 488, 489, 1118, 490, 491, 492, 493, 613, 494,
	0, 495, 496, 502, 503, 497, 498, 504, 505, 506,
	507, 508, 0, 510, 511, 509, 512, 513, 514, 0,
	515, 499, 500, 516, 517, 1119, 518, 519, 520, 521,
	522, 523, 614, 0, 524, 0, 525, 526, 527, 528,
	501, 529, 534, 615, 530, 531, 532, 533, 616, 0,
	536, 537, 0, 535, 0, 538, 539, 540, 541, 542,
	543, 332, 544, 0, 545, 617, 618, 619, 620, 0,
	554, 0, 546, 547, 548, 621, 549, 622, 0, 550,
	551, 552, 553, 0, 555, 556, 0, 0, 557, 558,
	559, 561, 562, 560, 563, 0, 564, 0, 0, 565,
	566, 567, 623, 624, 625, 1350, 569, 568, 570, 626,
	0, 0, 0, 0, 571, 572, 627, 573, 574, 575,
	0, 0, 254, 255, 256, 257, 258, 259, 0, 260,
	261, 0, 0, 0, 0, 0, 576, 0, 0, 0,
	0, 262, 263, 1103, 264, 265, 266, 267, 268, 577,
	578, 0, 269, 579, 270, 580, 0, 581, 271, 272,
	273, 274, 275, 276, 0, 0, 0, 277, 582, 583,
	584, 0, 278, 279, 585, 0, 1316, 0, 280, 281,
	282, 283, 284, 285, 286, 0, 0, 288, 289, 290,
	287, 291, 0, 292, 0, 293, 294, 295, 296, 297,
	298, 0, 299, 300, 301, 1104, 302, 303, 0, 0,
	0, 0, 0, 0, 0, 304, 305, 306, 307, 0,
	308, 586, 587, 0, 312, 309, 310, 0, 313, 311,
	0, 314, 315, 316, 0, 0, 317, 318, 319, 0,
	320, 321, 0, 322, 323, 324, 0, 325, 326, 588,
	327, 328, 329, 331, 333, 330, 334, 335, 336, 337,
	589, 590, 0, 251, 0, 0, 0, 0, 0, 338,
	339, 340, 591, 0, 0, 0, 341, 0, 342, 0,
	0, 1105, 343, 344, 592, 593, 345, 346, 347, 348,
	349, 350, 351, 352, 0, 353, 594, 0, 595, 354,
	0, 355, 356, 357, 358, 359, 596, 597, 598, 433,
	1107, 360, 361, 0, 362, 363, 364, 365, 0, 0,
	0, 0, 366, 367, 369, 0, 1106, 368, 599, 600,
	0, 601, 0, 370, 371, 1108, 602, 1109, 372, 373,
	374, 1110, 375, 0, 0, 0, 376, 377, 378, 379,
	380, 381, 0, 382, 384, 383, 0, 385, 603, 1111,
	386, 387, 1112, 0, 388, 0, 0, 0, 389, 390,
	0, 0, 391, 392, 393, 394, 0, 395, 396, 398,
	400, 397, 399, 401, 414, 402, 403, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 416, 0, 415,
	1113, 417, 418, 419, 424, 426, 427, 422, 423, 425,
	428, 429, 421, 1114, 420, 0, 0, 1115, 430, 431,
	0, 604, 432, 605, 434, 435, 0, 0, 436, 0,
	0, 0, 438, 439, 440, 0, 0, 441, 442, 606,
	1116, 443, 1117, 607, 444, 445, 437, 446, 447, 448,
	449, 450, 451, 452, 453, 0, 454, 455, 608, 456,
	457, 458, 609, 459, 460, 461, 610, 462, 611, 463,
	464, 0, 465, 0, 466, 467, 468, 469, 470, 471,
	472, 612, 473, 475, 474, 476, 0, 477, 0, 0,
	0, 0, 0, 478, 0, 480, 481, 482, 479, 483,
	484, 485, 486, 0, 487, 488, 489, 1118, 490, 491,
	492, 493, 613, 494, 0, 495, 496, 502, 503, 497,
	498, 504, 505, 506, 507, 508, 0, 510, 511, 509,
	512, 513, 514, 0, 515, 499, 500, 516, 517, 1119,
	518, 519, 520, 521, 522, 523, 614, 0, 524, 0,
	525, 526, 527, 528, 501, 529, 534, 615, 530, 531,
	532, 533, 616, 0, 536, 537, 0, 535, 0, 538,
	539, 540, 541, 542, 543, 332, 544, 0, 545, 617,
	618, 619, 620, 0, 554, 0, 546, 547, 548, 621,
	549, 622, 0, 550, 551, 552, 553, 0, 555, 556,
	0, 0, 557, 558, 559, 561, 562, 560, 563, 0,
	564, 0, 0, 565, 566, 567, 623, 624, 625, 248,
	569, 568, 570, 626, 0, 0, 0, 0, 571, 572,
	627, 573, 574, 575, 0, 0, 254, 255, 256, 257,
	258, 259, 0, 260, 261, 0, 0, 0, 0, 0,
	576, 0, 0, 0, 0, 262, 263, 0, 264, 265,
	266, 267, 268, 577, 578, 0, 269, 579, 270, 580,
	0, 581, 271, 272, 273, 274, 275, 276, 0, 0,
	0, 277, 582, 583, 584, 2605, 278, 279, 585, 0,
	0, 0, 280, 281, 282, 283, 284, 285, 286, 0,
	0, 288, 289, 290, 287, 291, 2602, 292, 0, 293,
	294, 295, 296, 297, 298, 0, 299, 300, 301, 0,
	302, 303, 0, 0, 0, 0, 0, 0, 0, 304,
	305, 306, 307, 0, 308, 586, 587, 0, 312, 309,
	310, 0, 313, 311, 0, 314, 315, 316, 0, 0,
	317, 318, 319, 0, 320, 321, 0, 322, 323, 324,
	0, 2609, 326, 588, 327, 328, 329, 331, 333, 330,
	334, 335, 336, 337, 589, 590, 0, 2812, 0, 0,
	0, 0, 0, 338, 339, 340, 591, 0, 0, 0,
	341, 0, 342, 2608, 0, 0, 343, 344, 592, 593,
	345, 346, 347, 348, 349, 350, 351, 352, 0, 353,
	594, 0, 595, 354, 0, 355, 356, 357, 358, 359,
	596, 597, 598, 433, 0, 360, 361, 0, 362, 363,
	364, 365, 0, 0, 0, 2809, 366, 367, 369, 0,
	0, 368, 599, 600, 0, 601, 0, 370, 2811, 0,
	602, 0, 372, 373, 374, 0, 375, 0, 0, 0,
	376, 377, 378, 379, 380, 381, 0, 382, 384, 383,
	0, 385, 603, 0, 386, 387, 2808, 0, 388, 0,
	0, 0, 389, 390, 0, 0, 391, 392, 393, 394,
	0, 395, 396, 398, 400, 397, 399, 401, 414, 402,
	403, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 416, 0, 415, 0, 417, 418, 419, 424, 426,
	427, 422, 423, 425, 428, 429, 421, 0, 420, 0,
	0, 0, 430, 431, 0, 604, 432, 605, 434, 435,
	0, 0, 436, 0, 0, 0, 438, 439, 440, 0,
	0, 441, 442, 606, 0, 443, 0, 607, 444, 445,
	437, 446, 447, 448, 449, 450, 451, 452, 453, 0,
	454, 455, 608, 456, 457, 458, 609, 459, 460, 461,
	610, 462, 611, 463, 464, 2607, 465, 0, 466, 467,
	468, 469, 470, 471, 472, 612, 473, 475, 474, 476,
	0, 477, 0, 0, 0, 0, 0, 478, 0, 480,
	481, 482, 479, 483, 484, 485, 486, 0, 487, 488,
	489, 0, 490, 491, 492, 493, 613, 494, 0, 495,
	496, 502, 503, 497, 498, 504, 505, 506, 507, 508,
	0, 510, 511, 509, 512, 513, 514, 0, 515, 499,
	500, 516, 517, 0, 518, 519, 520, 521, 522, 523,
	614, 0, 524, 0, 525, 526, 527, 528, 501, 529,
	534, 615, 530, 531, 532, 533, 616, 0, 536, 537,
	0, 535, 0, 538, 539, 540, 541, 542, 543, 332,
	544, 0, 545, 617, 618, 619, 620, 0, 554, 0,
	546, 547, 548, 621, 549, 622, 0, 550, 551, 552,
	553, 0, 555, 556, 0, 2810, 557, 558, 559, 561,
	562, 560, 563, 0, 564, 0, 0, 565, 566, 567,
	623, 624, 625, 248, 569, 568, 570, 626, 0, 0,
	0, 0, 571, 572, 627, 573, 574, 575, 0, 0,
	254, 255, 256, 257, 258, 259, 0, 260, 261, 0,
	0, 0, 0, 0, 576, 0, 0, 0, 0, 262,
	263, 0, 264, 265, 266, 267, 268, 577, 578, 0,
	269, 579, 270, 580, 0, 581, 271, 272, 273, 274,
	275, 276, 0, 0, 0, 277, 582, 583, 584, 2605,
	278, 279, 585, 0, 0, 2599, 280, 281, 282, 283,
	284, 285, 286, 0, 0, 288, 289, 290, 287, 291,
	2602, 292, 0, 293, 294, 295, 296, 297, 298, 0,
	299, 300, 301, 0, 302, 303, 0, 0, 0, 0,
	0, 0, 0, 304, 305, 306, 307, 0, 308, 586,
	587, 0, 312, 309, 310, 0, 313, 311, 0, 314,
	315, 316, 0, 0, 317, 318, 319, 0, 320, 321,
	0, 322, 323, 324, 0, 2609, 326, 588, 327, 328,
	329, 331, 333, 330, 334, 335, 336, 337, 589, 590,
	0, 0, 0, 0, 0, 0, 0, 338, 339, 340,
	591, 0, 0, 0, 341, 0, 342, 2608, 0, 0,
	343, 344, 592, 593, 345, 346, 347, 348, 349, 350,
	351, 352, 0, 353, 594, 0, 595, 354, 0, 355,
	356, 357, 358, 359, 2598, 597, 598, 433, 0, 360,
	361, 0, 362, 363, 364, 365, 0, 0, 0, 0,
	366, 367, 369, 0, 0, 368, 599, 600, 0, 601,
	0, 370, 371, 0, 602, 0, 372, 373, 374, 0,
	375, 0, 0, 0, 376, 377, 378, 379, 380, 381,
	0, 382, 384, 383, 0, 385, 603, 0, 386, 387,
	0, 0, 388, 0, 0, 0, 389, 390, 0, 0,
	391, 392, 393, 394, 0, 395, 396, 398, 400, 397,
	399, 401, 414, 402, 403, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 416, 0, 415, 0, 417,
	418, 419, 424, 426, 427, 422, 423, 425, 428, 429,
	421, 0, 420, 0, 0, 0, 430, 431, 0, 604,
	432, 605, 434, 435, 0, 0, 436, 0, 0, 0,
	438, 439, 440, 0, 0, 441, 442, 606, 0, 443,
	0, 607, 444, 445, 437, 446, 447, 448, 449, 450,
	451, 452, 453, 0, 454, 455, 608, 456, 457, 458,
	609, 459, 460, 461, 610, 462, 611, 463, 464, 2607,
	465, 0, 466, 467, 468, 469, 470, 471, 472, 612,
	473, 475, 474, 476, 0, 477, 0, 0, 0, 0,
	0, 478, 0, 480, 481, 482, 479, 483, 484, 485,
	486, 0, 487, 488, 489, 0, 490, 491, 492, 493,
	613, 494, 0, 495, 496, 502, 503, 497, 498, 504,
	505, 506, 507, 508, 0, 510, 511, 509, 512, 513,
	514, 0, 515, 499, 500, 516, 517, 0, 518, 519,
	520, 521, 522, 523, 614, 0, 524, 0, 525, 526,
	527, 528, 501, 529, 534, 615, 530, 531, 532, 533,
	616, 0, 536, 537, 0, 535, 0, 538, 539, 540,
	541, 542, 543, 332, 544, 0, 545, 617, 618, 619,
	620, 0, 554, 0, 546, 547, 548, 621, 549, 622,
	0, 550, 551, 552, 553, 0, 555, 556, 0, 2606,
	557, 558, 559, 561, 562, 560, 563, 0, 564, 0,
	0, 565, 566, 567, 623, 624, 625, 0, 569, 568,
	570, 626, 1622, 0, 248, 0, 571, 572, 627, 573,
	574, 575, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 254, 255, 256, 257, 258, 259, 0, 260, 261,
	0, 0, 0, 0, 0, 576, 0, 0, 0, 0,
	262, 263, 0, 264, 265, 266, 267, 268, 577, 578,
	0, 269, 579, 270, 580, 0, 581, 271, 272, 273,
	274, 275, 276, 0, 0, 0, 277, 582, 583, 584,
	0, 278, 279, 585, 0, 0, 0, 280, 281, 282,
	283, 284, 285, 286, 0, 0, 288, 289, 290, 287,
	291, 0, 292, 0, 293, 294, 295, 296, 297, 298,
	0, 299, 300, 301, 0, 302, 303, 0, 0, 0,
	0, 0, 0, 0, 304, 305, 306, 307, 0, 308,
	586, 587, 0, 312, 309, 310, 0, 313, 311, 0,
	314, 315, 316, 0, 0, 317, 318, 319, 0, 320,
	321, 0, 322, 323, 324, 0, 325, 326, 588, 327,
	328, 329, 331, 333, 330, 334, 335, 336, 337, 589,
	590, 0, 251, 0, 0, 0, 0, 0, 338, 339,
	340, 591, 0, 0, 0, 341, 0, 342, 0, 0,
	0, 343, 344, 592, 593, 345, 346, 347, 348, 349,
	350, 351, 352, 0, 353, 594, 0, 595, 354, 0,
	355, 356, 357, 358, 359, 596, 597, 598, 433, 0,
	360, 361, 0, 362, 363, 364, 365, 0, 0, 0,
	252, 366, 367, 369, 0, 0, 368, 599, 600, 0,
	601, 0, 370, 371, 0, 602, 0, 372, 373, 374,
	0, 375, 0, 0, 0, 376, 377, 378, 379, 380,
	381, 0, 382, 384, 383, 0, 385, 603, 0, 386,
	387, 0, 0, 388, 0, 0, 0, 389, 390, 0,
	0, 391, 392, 393, 394, 0, 395, 396, 398, 400,
	397, 399, 401, 414, 402, 403, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 416, 0, 415, 0,
	417, 418, 419, 424, 426, 427, 422, 423, 425, 428,
	429, 421, 0, 420, 0, 253, 0, 430, 431, 0,
	604, 432, 605, 434, 435, 0, 0, 436, 0, 0,
	0, 438, 439, 440, 0, 0, 441, 442, 606, 0,
	443, 0, 607, 444, 445, 437, 446, 447, 448, 449,
	450, 451, 452, 453, 0, 454, 455, 608, 456, 457,
	458, 609, 459, 460, 461, 610, 462, 611, 463, 464,
	0, 465, 0, 466, 467, 468, 469, 470, 471, 472,
	612, 473, 475, 474, 476, 0, 477, 0, 0, 0,
	0, 0, 478, 0, 480, 481, 482, 479, 483, 484,
	485, 486, 0, 487, 488, 489, 0, 490, 491, 492,
	493, 613, 494, 0, 495, 496, 502, 503, 497, 498,
	504, 505, 506, 507, 508, 0, 1625, 511, 509, 512,
	513, 514, 0, 515, 499, 500, 516, 517, 0, 518,
	519, 520, 521, 522, 523, 614, 0, 524, 0, 525,
	526, 527, 528, 501, 529, 534, 615, 530, 531, 532,
	533, 616, 0, 536, 537, 0, 535, 1623, 538, 539,
	540, 541, 542, 543, 332, 544, 0, 545, 617, 618,
	619, 620, 0, 554, 0, 546, 547, 548, 621, 549,
	622, 0, 550, 551, 552, 553, 0, 555, 556, 0,
	0, 557, 558, 559, 561, 562, 560, 563, 0, 564,
	0, 0, 565, 566, 567, 623, 624, 625, 0, 1624,
	568, 570, 626, 1320, 0, 248, 0, 571, 572, 627,
	573, 574, 575, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 254, 255, 256, 257, 258, 259, 0, 260,
	261, 0, 0, 0, 0, 0, 576, 0, 0, 0,
	0, 262, 263, 0, 264, 265, 266, 267, 268, 577,
	578, 0, 269, 579, 270, 580, 0, 581, 271, 272,
	273, 274, 275, 276, 0, 0, 0, 277, 582, 583,
	584, 0, 278, 279, 585, 0, 0, 0, 280, 281,
	282, 283, 284, 285, 286, 0, 0, 288, 289, 290,
	287, 291, 0, 292, 0, 293, 294, 295, 296, 297,
	298, 0, 299, 300, 301, 0, 302, 303, 0, 0,
	0, 0, 0, 0, 0, 304, 305, 306, 307, 0,
	308, 586, 587, 0, 312, 309, 310, 0, 313, 311,
	0, 314, 315, 316, 0, 0, 317, 318, 319, 0,
	320, 321, 0, 322, 323, 324, 0, 325, 326, 588,
	327, 328, 329, 331, 333, 330, 334, 335, 336, 337,
	589, 590, 0, 251, 0, 0, 0, 0, 0, 338,
	339, 340, 591, 0, 0, 0, 341, 0, 342, 0,
	0, 0, 343, 344, 592, 593, 345, 346, 347, 348,
	349, 350, 351, 352, 0, 353, 594, 0, 595, 354,
	0, 355, 356, 357, 358, 359, 1322, 597, 598, 433,
	0, 360, 361, 0, 362, 363, 364, 365, 0, 0,
	0, 252, 366, 367, 369, 0, 0, 368, 599, 600,
	0, 601, 0, 370, 371, 0, 602, 0, 372, 373,
	374, 0, 375, 0, 0, 0, 376, 377, 378, 379,
	380, 381, 0, 382, 384, 383, 0, 385, 603, 0,
	386, 387, 0, 0, 388, 0, 0, 0, 389, 390,
	0, 0, 391, 392, 393, 394, 0, 395, 396, 398,
	400, 397, 399, 401, 414, 402, 403, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 416, 0, 415,
	0, 417, 418, 419, 424, 426, 427, 422, 423, 425,
	428, 429, 421, 0, 420, 0, 253, 0, 430, 431,
	0, 604, 432, 605, 434, 435, 0, 0, 436, 0,
	0, 1153, 438, 439, 440, 0, 0, 441, 442, 606,
	0, 443, 0, 607, 444, 445, 437, 446, 447, 448,
	449, 450, 451, 452, 453, 0, 454, 455, 608, 456,
	457, 458, 609, 459, 460, 461, 610, 462, 611, 463,
	464, 0, 465, 0, 466, 467, 468, 469, 470, 471,
	472, 612, 473, 475, 474, 476, 0, 477, 0, 0,
	0, 0, 0, 478, 0, 480, 481, 482, 479, 483,
	484, 485, 486, 0, 487, 488, 489, 0, 490, 491,
	492, 493, 613, 494, 0, 495, 496, 502, 503, 497,
	498, 504, 505, 506, 507, 508, 0, 510, 511, 509,
	512, 513, 514, 0, 515, 499, 500, 516, 517, 0,
	518, 519, 520, 521, 522, 523, 614, 0, 524, 0,
	525, 526, 527, 528, 501, 529, 534, 615, 530, 531,
	532, 533, 616, 0, 536, 537, 0, 535, 0, 538,
	539, 540, 541, 542, 543, 332, 544, 0, 545, 617,
	618, 619, 620, 0, 554, 0, 546, 547, 548, 621,
	549, 622, 0, 550, 551, 552, 553, 0, 555, 556,
	0, 0, 557, 558, 559, 561, 562, 560, 563, 0,
	564, 0, 0, 565, 566, 567, 623, 624, 625, 0,
	569, 568, 570, 626, 1317, 0, 248, 0, 571, 572,
	627, 573, 574, 575, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 254, 255, 256, 257, 258, 259, 0,
	260, 261, 0, 0, 0, 0, 0, 576, 0, 0,
	0, 0, 262, 263, 0, 264, 265, 266, 267, 268,
	577, 578, 0, 269, 579, 270, 580, 0, 581, 271,
	272, 273, 274, 275, 276, 0, 0, 0, 277, 582,
	583, 584, 0, 278, 279, 585, 0, 0, 0, 280,
	281, 282, 283, 284, 285, 286, 0, 0, 288, 289,
	290, 287, 291, 0, 292, 0, 293, 294, 295, 296,
	297, 298, 0, 299, 300, 301, 0, 302, 303, 0,
	0, 0, 0, 0, 0, 0, 304, 305, 306, 307,
	0, 308, 586, 587, 0, 312, 309, 310, 0, 313,
	311, 0, 314, 315, 316, 0, 0, 317, 318, 319,
	0, 320, 321, 0, 322, 323, 324, 0, 325, 326,
	588, 327, 328, 329, 331, 333, 330, 334, 335, 336,
	337, 589, 590, 0, 251, 0, 0, 0, 0, 0,
	338, 339, 340, 591, 0, 0, 0, 341, 0, 342,
	0, 0, 0, 343, 344, 592, 593, 345, 346, 347,
	348, 349, 350, 351, 352, 0, 353, 594, 0, 595,
	354, 0, 355, 356, 357, 358, 359, 1319, 597, 598,
	433, 0, 360, 361, 0, 362, 363, 364, 365, 0,
	0, 0, 252, 366, 367, 369, 0, 0, 368, 599,
	600, 0, 601, 0, 370, 371, 0, 602, 0, 372,
	373, 374, 0, 375, 0, 0, 0, 376, 377, 378,
	379, 380, 381, 0, 382, 384, 383, 0, 385, 603,
	0, 386, 387, 0, 0, 388, 0, 0, 0, 389,
	390, 0, 0, 391, 392, 393, 394, 0, 395, 396,
	398, 400, 397, 399, 401, 414, 402, 403, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 416, 0,
	415, 0, 417, 418, 419, 424, 426, 427, 422, 423,
	425, 428, 429, 421, 0, 420, 0, 253, 0, 430,
	431, 0, 604, 432, 605, 434, 435, 0, 0, 436,
	0, 0, 1153, 438, 439, 440, 0, 0, 441, 442,
	606, 0, 443, 0, 607, 444, 445, 437, 446, 447,
	448, 449, 450, 451, 452, 453, 0, 454, 455, 608,
	456, 457, 458, 609, 459, 460, 461, 610, 462, 611,
	463, 464, 0, 465, 0, 466, 467, 468, 469, 470,
	471, 472, 612, 473, 475, 474, 476, 0, 477, 0,
	0, 0, 0, 0, 478, 0, 480, 481, 482, 479,
	483, 484, 485, 486, 0, 487, 488, 489, 0, 490,
	491, 492, 493, 613, 494, 0, 495, 496, 502, 503,
	497, 498, 504, 505, 506, 507, 508, 0, 510, 511,
	509, 512, 513, 514, 0, 515, 499, 500, 516, 517,
	0, 518, 519, 520, 521, 522, 523, 614, 0, 524,
	0, 525, 526, 527, 528, 501, 529, 534, 615, 530,
	531, 532, 533, 616, 0, 536, 537, 0, 535, 0,
	538, 539, 540, 541, 542, 543, 332, 544, 0, 545,
	617, 618, 619, 620, 0, 554, 0, 546, 547, 548,
	621, 549, 622, 0, 550, 551, 552, 553, 0, 555,
	556, 0, 0, 557, 558, 559, 561, 562, 560, 563,
	0, 564, 0, 0, 565, 566, 567, 623, 624, 625,
	0, 569, 568, 570, 626, 1223, 0, 248, 0, 571,
	572, 627, 573, 574, 575, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 254, 255, 256, 257, 258, 259,
	0, 260, 261, 0, 0, 0, 0, 0, 576, 0,
	0, 0, 0, 262, 263, 0, 264, 265, 266, 267,
	268, 577, 578, 0, 269, 579, 270, 580, 0, 581,
	271, 272, 273, 274, 275, 276, 0, 0, 0, 277,
	582, 583, 584, 0, 278, 279, 585, 0, 0, 0,
	280, 281, 282, 283, 284, 285, 286, 0, 0, 288,
	289, 290, 287, 291, 0, 292, 0, 293, 294, 295,
	296, 297, 298, 0, 299, 300, 301, 0, 302, 303,
	0, 0, 0, 0, 0, 0, 0, 304, 305, 306,
	307, 0, 308, 586, 587, 0, 312, 309, 310, 0,
	313, 311, 0, 314, 315, 316, 0, 0, 317, 318,
	319, 0, 320, 321, 0, 322, 323, 324, 0, 325,
	326, 588, 327, 328, 329, 331, 333, 330, 334, 335,
	336, 337, 589, 590, 0, 251, 0, 0, 0, 0,
	0, 338, 339, 340, 591, 0, 0, 0, 341, 0,
	342, 0, 0, 0, 343, 344, 592, 593, 345, 346,
	347, 348, 349, 350, 351, 352, 0, 353, 594, 0,
	595, 354, 0, 355, 356, 357, 358, 359, 1225, 597,
	598, 433, 0, 360, 361, 0, 362, 363, 364, 365,
	0, 0, 0, 252, 366, 367, 369, 0, 0, 368,
	599, 600, 0, 601, 0, 370, 371, 0, 602, 0,
	372, 373, 374, 0, 375, 0, 0, 0, 376, 377,
	378, 379, 380, 381, 0, 382, 384, 383, 0, 385,
	603, 0, 386, 387, 0, 0, 388, 0, 0, 0,
	389, 390, 0, 0, 391, 392, 393, 394, 0, 395,
	396, 398, 400, 397, 399, 401, 414, 402, 403, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 416,
	0, 415, 0, 417, 418, 419, 424, 426, 427, 422,
	423, 425, 428, 429, 421, 0, 420, 0, 253, 0,
	430, 431, 0, 604, 432, 605, 434, 435, 0, 0,
	436, 0, 0, 1153, 438, 439, 440, 0, 0, 441,
	442, 606, 0, 443, 0, 607, 444, 445, 437, 446,
	447, 448, 449, 450, 451, 452, 453, 0, 454, 455,
	608, 456, 457, 458, 609, 459, 460, 461, 610, 462,
	611, 463, 464, 0, 465, 0, 466, 467, 468, 469,
	470, 471, 472, 612, 473, 475, 474, 476, 0, 477,
	0, 0, 0, 0, 0, 478, 0, 480, 481, 482,
	479, 483, 484, 485, 486, 0, 487, 488, 489, 0,
	490, 491, 492, 493, 613, 494, 0, 495, 496, 502,
	503, 497, 498, 504, 505, 506, 507, 508, 0, 510,
	511, 509, 512, 513, 514, 0, 515, 499, 500, 516,
	517, 0, 518, 519, 520, 521, 522, 523, 614, 0,
	524, 0, 525, 526, 527, 528, 501, 529, 534, 615,
	530, 531, 532, 533, 616, 0, 536, 537, 0, 535,
	0, 538, 539, 540, 541, 542, 543, 332, 544, 0,
	545, 617, 618, 619, 620, 0, 554, 0, 546, 547,
	548, 621, 549, 622, 0, 550, 551, 552, 553, 0,
	555, 556, 0, 0, 557, 558, 559, 561, 562, 560,
	563, 0, 564, 0, 0, 565, 566, 567, 623, 624,
	625, 0, 569, 568, 570, 626, 659, 0, 248, 0,
	571, 572, 627, 573, 574, 575, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 254, 255, 256, 658, 258,
	259, 648, 260, 261, 0, 0, 0, 0, 0, 576,
	0, 0, 0, 0, 262, 263, 0, 264, 265, 266,
	267, 268, 577, 578, 0, 269, 579, 270, 580, 0,
	581, 271, 272, 273, 274, 275, 276, 0, 0, 0,
	277, 582, 583, 584, 0, 278, 279, 585, 0, 0,
	0, 280, 281, 282, 283, 284, 285, 286, 0, 0,
	288, 289, 290, 287, 291, 0, 292, 0, 293, 294,
	295, 296, 297, 298, 651, 299, 300, 301, 0, 302,
	303, 0, 0, 0, 0, 0, 0, 0, 304, 305,
	306, 307, 0, 308, 586, 587, 0, 312, 309, 310,
	0, 313, 311, 0, 314, 315, 316, 0, 0, 317,
	318, 319, 0, 320, 321, 0, 322, 323, 324, 0,
	325, 326, 588, 327, 328, 329, 331, 333, 330, 334,
	335, 336, 337, 589, 590, 0, 0, 0, 0, 0,
	0, 0, 338, 339, 340, 591, 0, 0, 0, 341,
	0, 342, 0, 0, 0, 343, 344, 592, 593, 345,
	346, 347, 348, 349, 350, 351, 352, 652, 353, 594,
	0, 595, 354, 0, 355, 356, 357, 358, 359, 596,
	597, 598, 433, 0, 360, 361, 0, 362, 363, 364,
	365, 0, 0, 0, 0, 366, 367, 369, 0, 0,
	368, 599, 600, 0, 601, 0, 370, 371, 0, 602,
	0, 372, 373, 374, 0, 375, 0, 0, 0, 376,
	377, 378, 379, 380, 381, 0, 382, 384, 383, 0,
	385, 603, 0, 386, 387, 0, 0, 388, 0, 0,
	0, 389, 390, 0, 0, 391, 392, 393, 394, 0,
	395, 396, 398, 400, 397, 399, 401, 414, 402, 403,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	416, 0, 415, 0, 417, 418, 419, 424, 426, 427,
	422, 423, 425, 428, 429, 421, 0, 420, 0, 0,
	0, 430, 431, 0, 604, 432, 605, 434, 435, 0,
	0, 436, 0, 0, 0, 438, 439, 440, 0, 0,
	441, 442, 606, 0, 443, 0, 607, 444, 445, 437,
	446, 447, 448, 449, 450, 451, 452, 453, 0, 454,
	455, 608, 456, 457, 458, 609, 459, 460, 461, 610,
	462, 611, 463, 464, 0, 465, 0, 466, 467, 468,
	469, 470, 471, 472, 612, 473, 475, 474, 476, 0,
	477, 0, 0, 0, 0, 0, 478, 0, 480, 481,
	482, 479, 483, 484, 485, 486, 0, 487, 488, 489,
	0, 490, 491, 492, 493, 613, 494, 0, 495, 496,
	502, 503, 497, 498, 504, 505, 506, 507, 508, 653,
	510, 511, 509, 512, 513, 514, 0, 515, 499, 500,
	516, 517, 0, 518, 519, 520, 521, 522, 523, 614,
	0, 524, 0, 525, 526, 527, 528, 501, 529, 534,
	615, 530, 531, 532, 533, 616, 0, 536, 537, 0,
	535, 0, 538, 539, 540, 541, 542, 543, 332, 544,
	0, 545, 617, 618, 619, 620, 0, 554, 0, 546,
	547, 548, 621, 549, 622, 0, 550, 551, 552, 553,
	0, 555, 556, 0, 0, 557, 558, 559, 561, 562,
	560, 563, 0, 564, 0, 0, 565, 566, 567, 623,
	624, 625, 0, 569, 568, 570, 626, 647, 0, 248,
	0, 571, 572, 627, 573, 574, 575, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 254, 255, 256, 257,
	258, 259, 648, 260, 261, 0, 0, 0, 0, 0,
	576, 0, 0, 0, 0, 262, 263, 0, 264, 265,
	266, 267, 268, 577, 578, 0, 269, 579, 270, 580,
	0, 581, 271, 272, 273, 274, 275, 276, 0, 0,
	0, 277, 582, 583, 584, 0, 278, 279, 585, 0,
	0, 0, 280, 281, 282, 283, 284, 285, 286, 0,
	0, 288, 289, 290, 287, 291, 0, 292, 0, 293,
	294, 295, 296, 297, 298, 651, 299, 300, 301, 0,
	302, 303, 0, 0, 0, 0, 0, 0, 0, 304,
	305, 306, 307, 0, 308, 586, 587, 0, 312, 309,
	310, 0, 313, 311, 0, 314, 315, 316, 0, 0,
	317, 318, 319, 0, 320, 321, 0, 322, 323, 324,
	0, 325, 326, 588, 327, 328, 329, 331, 333, 330,
	334, 335, 336, 337, 589, 590, 0, 0, 0, 0,
	0, 0, 0, 338, 339, 340, 591, 0, 0, 0,
	341, 0, 342, 0, 0, 0, 343, 344, 592, 593,
	345, 346, 347, 348, 349, 350, 351, 352, 652, 353,
	594, 0, 595, 354, 0, 355, 356, 357, 358, 359,
	596, 597, 598, 433, 0, 360, 361, 0, 362, 363,
	364, 365, 0, 0, 0, 0, 366, 367, 369, 0,
	0, 368, 599, 600, 0, 601, 0, 370, 371, 0,
	602, 0, 372, 373, 374, 0, 375, 0, 0, 0,
	376, 377, 378, 379, 380, 381, 0, 382, 384, 383,
	0, 385, 603, 0, 386, 387, 0, 0, 388, 0,
	0, 0, 389, 390, 0, 0, 391, 392, 393, 394,
	0, 395, 396, 398, 400, 397, 399, 401, 414, 402,
	403, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 416, 0, 415, 0, 417, 418, 419, 424, 426,
	427, 422, 423, 425, 428, 429, 421, 0, 420, 0,
	0, 0, 430, 431, 0, 604, 432, 605, 434, 435,
	0, 0, 436, 0, 0, 0, 438, 439, 440, 0,
	0, 441, 442, 606, 0, 443, 0, 607, 444, 445,
	437, 446, 447, 448, 449, 450, 451, 452, 453, 0,
	454, 455, 608, 456, 457, 458, 609, 459, 460, 461,
	610, 462, 611, 463, 464, 0, 465, 0, 466, 467,
	468, 469, 470, 471, 472, 612, 473, 475, 474, 476,
	0, 477, 0, 0, 0, 0, 0, 478, 0, 480,
	481, 482, 479, 483, 484, 485, 486, 0, 487, 488,
	489, 0, 490, 491, 492, 493, 613, 494, 0, 495,
	496, 502, 503, 497, 498, 504, 505, 506, 507, 508,
	653, 510, 511, 509, 512, 513, 514, 0, 515, 499,
	500, 516, 517, 0, 518, 519, 520, 521, 522, 523,
	614, 0, 524, 0, 525, 526, 527, 528, 501, 529,
	534, 615, 530, 531, 532, 533, 616, 0, 536, 537,
	0, 535, 0, 538, 539, 540, 541, 542, 543, 332,
	544, 0, 545, 617, 618, 619, 620, 0, 554, 0,
	546, 547, 548, 621, 549, 622, 0, 550, 551, 552,
	553, 0, 555, 556, 0, 0, 557, 558, 559, 561,
	562, 560, 563, 0, 564, 0, 0, 565, 566, 567,
	623, 624, 625, 248, 569, 568, 570, 626, 0, 0,
	0, 0, 571, 572, 627, 573, 574, 575, 0, 0,
	254, 255, 256, 257, 258, 259, 0, 260, 261, 0,
	0, 0, 0, 0, 576, 0, 0, 0, 0, 262,
	263, 0, 264, 265, 266, 267, 268, 577, 578, 0,
	269, 579, 270, 580, 0, 581, 271, 272, 273, 274,
	275, 276, 0, 0, 0, 277, 582, 583, 584, 0,
	278, 279, 585, 0, 0, 0, 280, 281, 282, 283,
	284, 285, 286, 0, 0, 288, 289, 290, 287, 291,
	0, 292, 0, 293, 294, 295, 296, 297, 298, 0,
	299, 300, 301, 0, 302, 303, 0, 0, 0, 0,
	0, 0, 0, 304, 305, 306, 307, 0, 308, 586,
	587, 0, 312, 309, 310, 0, 313, 311, 0, 314,
	315, 316, 0, 0, 317, 318, 319, 0, 320, 321,
	0, 322, 323, 324, 0, 325, 326, 588, 327, 328,
	329, 331, 333, 330, 334, 335, 336, 337, 589, 590,
	0, 251, 0, 0, 0, 0, 0, 338, 339, 340,
	591, 0, 0, 0, 341, 0, 342, 0, 0, 0,
	343, 344, 592, 593, 345, 346, 347, 348, 349, 350,
	351, 352, 0, 353, 594, 0, 595, 354, 0, 355,
	356, 357, 358, 359, 596, 597, 598, 433, 0, 360,
	361, 0, 362, 363, 364, 365, 0, 0, 0, 252,
	366, 367, 369, 0, 0, 368, 599, 600, 0, 601,
	0, 370, 371, 0, 602, 0, 372, 373, 374, 0,
	375, 0, 0, 0, 376, 377, 378, 379, 380, 381,
	0, 382, 384, 383, 0, 385, 603, 0, 386, 387,
	0, 0, 388, 0, 0, 0, 389, 390, 0, 0,
	391, 392, 393, 394, 0, 395, 396, 398, 400, 397,
	399, 401, 414, 402, 403, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 416, 0, 415, 0, 417,
	418, 419, 424, 426, 427, 422, 423, 425, 428, 429,
	421, 0, 420, 0, 253, 0, 430, 431, 0, 604,
	432, 605, 434, 435, 0, 0, 436, 0, 0, 1153,
	438, 439, 440, 0, 0, 441, 442, 606, 0, 443,
	0, 607, 444, 445, 437, 446, 447, 448, 449, 450,
	451, 452, 453, 0, 454, 455, 608, 456, 457, 458,
	609, 459, 460, 461, 610, 462, 611, 463, 464, 0,
	465, 0, 466, 467, 468, 469, 470, 471, 472, 612,
	473, 475, 474, 476, 0, 477, 0, 0, 0, 0,
	0, 478, 0, 480, 481, 482, 479, 483, 484, 485,
	486, 0, 487, 488, 489, 0, 490, 491, 492, 493,
	613, 494, 0, 495, 496, 502, 503, 497, 498, 504,
	505, 506, 507, 508, 0, 510, 511, 509, 512, 513,
	514, 0, 515, 499, 500, 516, 517, 0, 518, 519,
	520, 521, 522, 523, 614, 0, 524, 0, 525, 526,
	527, 528, 501, 529, 534, 615, 530, 531, 532, 533,
	616, 0, 536, 537, 0, 535, 0, 538, 539, 540,
	541, 542, 543, 332, 544, 0, 545, 617, 618, 619,
	620, 0, 554, 0, 546, 547, 548, 621, 549, 622,
	0, 550, 551, 552, 553, 0, 555, 556, 0, 0,
	557, 558, 559, 561, 562, 560, 563, 0, 564, 0,
	0, 565, 566, 567, 623, 624, 625, 248, 569, 568,
	570, 626, 0, 0, 0, 0, 571, 572, 627, 573,
	574, 575, 0, 0, 254, 255, 256, 257, 258, 259,
	0, 260, 261, 0, 0, 0, 0, 0, 576, 0,
	0, 0, 0, 262, 263, 0, 264, 265, 266, 267,
	268, 577, 578, 0, 269, 579, 270, 580, 0, 581,
	271, 272, 273, 274, 275, 276, 0, 0, 0, 277,
	582, 583, 584, 0, 278, 279, 585, 0, 0, 0,
	280, 281, 282, 283, 284, 285, 286, 0, 0, 288,
	289, 290, 287, 291, 0, 292, 0, 293, 294, 295,
	296, 297, 298, 0, 299, 300, 301, 0, 302, 303,
	0, 0, 0, 0, 0, 0, 0, 304, 305, 306,
	307, 0, 308, 586, 587, 0, 312, 309, 310, 0,
	313, 311, 0, 314, 315, 316, 0, 0, 317, 318,
	319, 0, 320, 321, 0, 322, 323, 324, 0, 325,
	326, 588, 327, 328, 329, 331, 333, 330, 334, 335,
	336, 337, 589, 590, 0, 251, 0, 0, 0, 0,
	0, 338, 339, 340, 591, 0, 0, 0, 341, 0,
	342, 0, 0, 0, 343, 344, 592, 593, 345, 346,
	347, 348, 349, 350, 351, 352, 0, 353, 594, 0,
	595, 354, 0, 355, 356, 357, 358, 359, 596, 597,
	598, 433, 0, 360, 361, 0, 362, 363, 364, 365,
	0, 0, 0, 252, 366, 367, 369, 0, 0, 368,
	599, 600, 0, 601, 0, 370, 371, 0, 602, 0,
	372, 373, 374, 0, 375, 0, 0, 0, 376, 377,
	378, 379, 380, 381, 0, 382, 384, 383, 0, 385,
	603, 0, 386, 387, 0, 0, 388, 0, 0, 0,
	389, 390, 0, 0, 391, 392, 393, 394, 0, 395,
	396, 398, 400, 397, 399, 401, 414, 402, 403, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 416,
	0, 415, 0, 417, 418, 419, 424, 426, 427, 422,
	423, 425, 428, 429, 421, 3194, 420, 0, 253, 0,
	430, 431, 0, 604, 432, 605, 434, 435, 0, 0,
	436, 0, 0, 0, 438, 439, 440, 0, 0, 441,
	442, 606, 0, 443, 0, 607, 444, 445, 437, 446,
	447, 448, 449, 450, 451, 452, 453, 0, 454, 455,
	608, 456, 457, 458, 609, 459, 460, 461, 610, 462,
	611, 463, 464, 0, 465, 0, 466, 467, 468, 469,
	470, 471, 472, 612, 473, 475, 474, 476, 0, 477,
	0, 0, 0, 0, 0, 478, 0, 480, 481, 482,
	479, 483, 484, 485, 486, 0, 487, 488, 489, 0,
	490, 491, 492, 493, 613, 494, 0, 495, 496, 502,
	503, 497, 498, 504, 505, 506, 507, 508, 0, 510,
	511, 509, 512, 513, 514, 0, 515, 499, 500, 516,
	517, 0, 518, 519, 520, 521, 522, 523, 614, 0,
	524, 0, 525, 526, 527, 528, 501, 529, 534, 615,
	530, 531, 532, 533, 616, 0, 536, 537, 0, 535,
	0, 538, 539, 540, 541, 542, 543, 332, 544, 0,
	545, 617, 618, 619, 620, 0, 554, 0, 546, 547,
	548, 621, 549, 622, 0, 550, 551, 552, 553, 0,
	555, 556, 0, 0, 557, 558, 559, 561, 562, 560,
	563, 0, 564, 0, 0, 565, 566, 567, 623, 624,
	625, 0, 569, 568, 570, 626, 2740, 0, 248, 0,
	571, 572, 627, 573, 574, 575, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 254, 255, 256, 257, 258,
	259, 0, 260, 261, 0, 0, 0, 0, 0, 576,
	0, 0, 0, 0, 262, 263, 0, 264, 265, 266,
	267, 268, 577, 578, 0, 269, 579, 270, 580, 0,
	581, 271, 272, 273, 274, 275, 276, 0, 0, 0,
	277, 582, 583, 584, 0, 278, 279, 585, 0, 0,
	0, 280, 281, 282, 283, 284, 285, 286, 0, 0,
	288, 289, 290, 287, 291, 0, 292, 0, 293, 294,
	295, 296, 297, 298, 0, 299, 300, 301, 0, 302,
	303, 0, 0, 0, 0, 0, 0, 0, 304, 305,
	306, 307, 0, 308, 586, 587, 0, 312, 309, 310,
	0, 313, 311, 0, 314, 315, 316, 0, 0, 317,
	318, 319, 0, 320, 321, 0, 322, 323, 324, 0,
	325, 326, 588, 327, 328, 329, 331, 333, 330, 334,
	335, 336, 337, 589, 590, 0, 251, 0, 0, 0,
	0, 0, 338, 339, 340, 591, 0, 0, 0, 341,
	0, 342, 0, 0, 0, 343, 344, 592, 593, 345,
	346, 347, 348, 349, 350, 351, 352, 0, 353, 594,
	0, 595, 354, 0, 355, 356, 357, 358, 359, 2739,
	597, 598, 433, 0, 360, 361, 0, 362, 363, 364,
	365, 0, 0, 0, 252, 366, 367, 369, 0, 0,
	368, 599, 600, 0, 601, 0, 370, 371, 0, 602,
	0, 372, 373, 374, 0, 375, 0, 0, 0, 376,
	377, 378, 379, 380, 381, 0, 382, 384, 383, 0,
	385, 603, 0, 386, 387, 0, 0, 388, 0, 0,
	0, 389, 390, 0, 0, 391, 392, 393, 394, 0,
	395, 396, 398, 400, 397, 399, 401, 414, 402, 403,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	416, 0, 415, 0, 417, 418, 419, 424, 426, 427,
	422, 423, 425, 428, 429, 421, 0, 420, 0, 253,
	0, 430, 431, 0, 604, 432, 605, 434, 435, 0,
	0, 436, 0, 0, 0, 438, 439, 440, 0, 0,
	441, 442, 606, 0, 443, 0, 607, 444, 445, 437,
	446, 447, 448, 449, 450, 451, 452, 453, 0, 454,
	455, 608, 456, 457, 458, 609, 459, 460, 461, 610,
	462, 611, 463, 464, 0, 465, 0, 466, 467, 468,
	469, 470, 471, 472, 612, 473, 475, 474, 476, 0,
	477, 0, 0, 0, 0, 0, 478, 0, 480, 481,
	482, 479, 483, 484, 485, 486, 0, 487, 488, 489,
	0, 490, 491, 492, 493, 613, 494, 0, 495, 496,
	502, 503, 497, 498, 504, 505, 506, 507, 508, 0,
	510, 511, 509, 512, 513, 514, 0, 515, 499, 500,
	516, 517, 0, 518, 519, 520, 521, 522, 523, 614,
	0, 524, 0, 525, 526, 527, 528, 501, 529, 534,
	615, 530, 531, 532, 533, 616, 0, 536, 537, 0,
	535, 0, 538, 539, 540, 541, 542, 543, 332, 544,
	0, 545, 617, 618, 619, 620, 0, 554, 0, 546,
	547, 548, 621, 549, 622, 0, 550, 551, 552, 553,
	0, 555, 556, 0, 0, 557, 558, 559, 561, 562,
	560, 563, 0, 564, 0, 0, 565, 566, 567, 623,
	624, 625, 0, 569, 568, 570, 626, 2152, 0, 248,
	0, 571, 572, 627, 573, 574, 575, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 254, 255, 256, 257,
	258, 259, 0, 260, 261, 0, 0, 0, 0, 0,
	576, 0, 0, 0, 0, 262, 263, 0, 264, 265,
	266, 267, 268, 577, 578, 0, 269, 579, 270, 580,
	0, 581, 271, 272, 273, 274, 275, 276, 0, 0,
	0, 277, 582, 583, 584, 0, 278, 279, 585, 0,
	0, 0, 280, 281, 282, 283, 284, 285, 286, 0,
	0, 288, 289, 290, 287, 291, 0, 292, 0, 293,
	294, 295, 296, 297, 298, 0, 299, 300, 301, 0,
	302, 303, 0, 0, 0, 0, 0, 0, 0, 304,
	305, 306, 307, 0, 308, 586, 587, 0, 312, 309,
	310, 0, 313, 311, 0, 314, 315, 316, 0, 0,
	317, 318, 319, 0, 320, 321, 0, 322, 323, 324,
	0, 325, 326, 588, 327, 328, 329, 331, 333, 330,
	334, 335, 336, 337, 589, 590, 0, 251, 0, 0,
	0, 0, 0, 338, 339, 340, 591, 0, 0, 0,
	341, 0, 342, 0, 0, 0, 343, 344, 592, 593,
	345, 346, 347, 348, 349, 350, 351, 352, 0, 353,
	594, 0, 595, 354, 0, 355, 356, 357, 358, 359,
	596, 597, 598, 433, 0, 360, 361, 0, 362, 363,
	364, 365, 0, 0, 0, 252, 366, 367, 369, 0,
	0, 368, 599, 600, 0, 601, 0, 370, 371, 0,
	602, 0, 372, 373, 374, 0, 375, 0, 0, 0,
	376, 377, 378, 379, 380, 381, 0, 382, 384, 383,
	0, 385, 603, 0, 386, 387, 0, 0, 388, 0,
	0, 0, 389, 390, 0, 0, 391, 392, 393, 394,
	0, 395, 396, 398, 400, 397, 399, 401, 414, 402,
	403, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 416, 0, 415, 0, 417, 418, 419, 424, 426,
	427, 422, 423, 425, 428, 429, 421, 0, 420, 0,
	253, 0, 430, 431, 0, 604, 432, 605, 434, 435,
	0, 0, 436, 0, 0, 0, 438, 439, 440, 0,
	0, 441, 442, 606, 0, 443, 0, 607, 444, 445,
	437, 446, 447, 448, 449, 450, 451, 452, 453, 0,
	454, 455, 608, 456, 457, 458, 609, 459, 460, 461,
	610, 462, 611, 463, 464, 0, 465, 0, 466, 467,
	468, 469, 470, 471, 472, 612, 473, 475, 474, 476,
	0, 477, 0, 0, 0, 0, 0, 478, 0, 480,
	481, 482, 479, 483, 484, 485, 486, 0, 487, 488,
	489, 0, 490, 491, 492, 493, 613, 494, 0, 495,
	496, 502, 503, 497, 498, 504, 505, 506, 507, 508,
	0, 510, 511, 509, 512, 513, 514, 0, 515, 499,
	500, 516, 517, 0, 518, 519, 520, 521, 522, 523,
	614, 0, 524, 0, 525, 526, 527, 528, 501, 529,
	534, 615, 530, 531, 532, 533, 616, 0, 536, 537,
	0, 535, 0, 538, 539, 540, 541, 542, 543, 332,
	544, 0, 545, 617, 618, 619, 620, 0, 554, 0,
	546, 547, 548, 621, 549, 622, 0, 550, 551, 552,
	553, 0, 555, 556, 0, 0, 557, 558, 559, 561,
	562, 560, 563, 0, 564, 0, 0, 565, 566, 567,
	623, 624, 625, 248, 569, 568, 570, 626, 0, 0,
	0, 0, 571, 572, 627, 573, 574, 575, 0, 0,
	254, 255, 256, 257, 258, 259, 0, 260, 261, 0,
	0, 0, 0, 0, 576, 0, 0, 0, 0, 262,
	263, 0, 264, 265, 266, 267, 268, 577, 578, 0,
	269, 579, 270, 580, 0, 581, 271, 272, 273, 274,
	275, 276, 0, 0, 0, 277, 582, 583, 584, 0,
	278, 279, 585, 0, 0, 0, 280, 281, 282, 283,
	284, 285, 286, 0, 0, 288, 289, 290, 287, 291,
	0, 292, 0, 293, 294, 295, 296, 297, 298, 0,
	299, 300, 301, 0, 302, 303, 0, 0, 0, 0,
	0, 0, 0, 304, 305, 306, 307, 0, 308, 586,
	587, 0, 312, 309, 310, 0, 313, 311, 0, 314,
	315, 316, 0, 0, 317, 318, 319, 0, 320, 321,
	0, 322, 323, 324, 0, 325, 326, 588, 327, 328,
	329, 331, 333, 330, 334, 335, 336, 337, 589, 590,
	0, 251, 0, 0, 0, 0, 0, 338, 339, 340,
	591, 0, 0, 0, 341, 0, 342, 0, 0, 0,
	343, 344, 592, 593, 345, 346, 347, 348, 349, 350,
	351, 352, 0, 353, 594, 0, 595, 354, 0, 355,
	356, 357, 358, 359, 596, 597, 598, 433, 0, 360,
	361, 0, 362, 363, 364, 365, 0, 0, 0, 252,
	366, 367, 369, 0, 0, 368, 599, 600, 0, 601,
	0, 370, 371, 0, 602, 0, 372, 373, 374, 0,
	375, 0, 0, 0, 376, 377, 378, 379, 380, 381,
	0, 382, 384, 383, 0, 385, 603, 0, 386, 387,
	0, 0, 388, 0, 0, 0, 389, 390, 0, 0,
	391, 392, 393, 394, 0, 395, 396, 398, 400, 397,
	399, 401, 414, 402, 403, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 416, 0, 415, 0, 417,
	418, 419, 424, 426, 427, 422, 423, 425, 428, 429,
	421, 0, 420, 0, 253, 0, 430, 431, 0, 604,
	432, 605, 434, 435, 0, 0, 436, 0, 0, 0,
	438, 439, 440, 0, 0, 441, 442, 606, 0, 443,
	0, 607, 444, 445, 437, 446, 447, 448, 449, 450,
	451, 452, 453, 0, 454, 455, 608, 456, 457, 458,
	609, 459, 460, 461, 610, 462, 611, 463, 464, 0,
	465, 0, 466, 467, 468, 469, 470, 471, 472, 612,
	473, 475, 474, 476, 0, 477, 0, 0, 0, 0,
	0, 478, 0, 480, 481, 482, 479, 483, 484, 485,
	486, 0, 487, 488, 489, 0, 490, 491, 492, 493,
	613, 494, 0, 495, 496, 502, 503, 497, 498, 504,
	505, 506, 507, 508, 0, 510, 511, 509, 512, 513,
	514, 0, 515, 499, 500, 516, 517, 0, 518, 519,
	520, 521, 522, 523, 614, 0, 524, 0, 525, 526,
	527, 528, 501, 529, 534, 615, 530, 531, 532, 533,
	616, 0, 536, 537, 0, 535, 2068, 538, 539, 540,
	541, 542, 543, 332, 544, 0, 545, 617, 618, 619,
	620, 0, 554, 0, 546, 547, 548, 621, 549, 622,
	0, 550, 551, 552, 553, 0, 555, 556, 0, 0,
	557, 558, 559, 561, 562, 560, 563, 0, 564, 0,
	0, 565, 566, 567, 623, 624, 625, 0, 569, 568,
	570, 626, 2074, 0, 248, 0, 571, 572, 627, 573,
	574, 575, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 254, 255, 256, 257, 258, 259, 0, 260, 261,
	0, 0, 0, 0, 0, 576, 0, 0, 0, 0,
	262, 263, 0, 264, 265, 266, 267, 268, 577, 578,
	0, 269, 579, 270, 580, 0, 581, 271, 272, 273,
	274, 275, 276, 0, 0, 0, 277, 582, 583, 584,
	0, 278, 279, 585, 0, 0, 0, 280, 281, 282,
	283, 284, 285, 286, 0, 0, 288, 289, 290, 287,
	291, 0, 292, 0, 293, 294, 295, 296, 297, 298,
	0, 299, 300, 301, 0, 302, 303, 0, 0, 0,
	0, 0, 0, 0, 304, 305, 306, 307, 0, 308,
	586, 587, 0, 312, 309, 310, 0, 313, 311, 0,
	314, 315, 316, 0, 0, 317, 318, 319, 0, 320,
	321, 0, 322, 323, 324, 0, 325, 326, 588, 327,
	328, 329, 331, 333, 330, 334, 335, 336, 337, 589,
	590, 0, 251, 0, 0, 0, 0, 0, 338, 339,
	340, 591, 0, 0, 0, 341, 0, 342, 0, 0,
	0, 343, 344, 592, 593, 345, 346, 347, 348, 349,
	350, 351, 352, 0, 353, 594, 0, 595, 354, 0,
	355, 356, 357, 358, 359, 2073, 597, 598, 433, 0,
	360, 361, 0, 362, 363, 364, 365, 0, 0, 0,
	252, 366, 367, 369, 0, 0, 368, 599, 600, 0,
	601, 0, 370, 371, 0, 602, 0, 372, 373, 374,
	0, 375, 0, 0, 0, 376, 377, 378, 379, 380,
	381, 0, 382, 384, 383, 0, 385, 603, 0, 386,
	387, 0, 0, 388, 0, 0, 0, 389, 390, 0,
	0, 391, 392, 393, 394, 0, 395, 396, 398, 400,
	397, 399, 401, 414, 402, 403, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 416, 0, 415, 0,
	417, 418, 419, 424, 426, 427, 422, 423, 425, 428,
	429, 421, 0, 420, 0, 253, 0, 430, 431, 0,
	604, 432, 605, 434, 435, 0, 0, 436, 0, 0,
	0, 438, 439, 440, 0, 0, 441, 442, 606, 0,
	443, 0, 607, 444, 445, 437, 446, 447, 448, 449,
	450, 451, 452, 453, 0, 454, 455, 608, 456, 457,
	458, 609, 459, 460, 461, 610, 462, 611, 463, 464,
	0, 465, 0, 466, 467, 468, 469, 470, 471, 472,
	612, 473, 475, 474, 476, 0, 477, 0, 0, 0,
	0, 0, 478, 0, 480, 481, 482, 479, 483, 484,
	485, 486, 0, 487, 488, 489, 0, 490, 491, 492,
	493, 613, 494, 0, 495, 496, 502, 503, 497, 498,
	504, 505, 506, 507, 508, 0, 510, 511, 509, 512,
	513, 514, 0, 515, 499, 500, 516, 517, 0, 518,
	519, 520, 521, 522, 523, 614, 0, 524, 0, 525,
	526, 527, 528, 501, 529, 534, 615, 530, 531, 532,
	533, 616, 0, 536, 537, 0, 535, 0, 538, 539,
	540, 541, 542, 543, 332, 544, 0, 545, 617, 618,
	619, 620, 0, 554, 0, 546, 547, 548, 621, 549,
	622, 0, 550, 551, 552, 553, 0, 555, 556, 0,
	0, 557, 558, 559, 561, 562, 560, 563, 0, 564,
	0, 0, 565, 566, 567, 623, 624, 625, 0, 569,
	568, 570, 626, 2061, 0, 248, 0, 571, 572, 627,
	573, 574, 575, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 254, 255, 256, 257, 258, 259, 0, 260,
	261, 0, 0, 0, 0, 0, 576, 0, 0, 0,
	0, 262, 263, 0, 264, 265, 266, 267, 268, 577,
	578, 0, 269, 579, 270, 580, 0, 581, 271, 272,
	273, 274, 275, 276, 0, 0, 0, 277, 582, 583,
	584, 0, 278, 279, 585, 0, 0, 0, 280, 281,
	282, 283, 284, 285, 286, 0, 0, 288, 289, 290,
	287, 291, 0, 292, 0, 293, 294, 295, 296, 297,
	298, 0, 299, 300, 301, 0, 302, 303, 0, 0,
	0, 0, 0, 0, 0, 304, 305, 306, 307, 0,
	308, 586, 587, 0, 312, 309, 310, 0, 313, 311,
	0, 314, 315, 316, 0, 0, 317, 318, 319, 0,
	320, 321, 0, 322, 323, 324, 0, 325, 326, 588,
	327, 328, 329, 331, 333, 330, 334, 335, 336, 337,
	589, 590, 0, 251, 0, 0, 0, 0, 0, 338,
	339, 340, 591, 0, 0, 0, 341, 0, 342, 0,
	0, 0, 343, 344, 592, 593, 345, 346, 347, 348,
	349, 350, 351, 352, 0, 353, 594, 0, 595, 354,
	0, 355, 356, 357, 358, 359, 2063, 597, 598, 433,
	0, 360, 361, 0, 362, 363, 364, 365, 0, 0,
	0, 252, 366, 367, 369, 0, 0, 368, 599, 600,
	0, 601, 0, 370, 371, 0, 602, 0, 372, 373,
	374, 0, 375, 0, 0, 0, 376, 377, 378, 379,
	380, 381, 0, 382, 384, 383, 0, 385, 603, 0,
	386, 387, 0, 0, 388, 0, 0, 0, 389, 390,
	0, 0, 391, 392, 393, 394, 0, 395, 396, 398,
	400, 397, 399, 401, 414, 402, 403, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 416, 0, 415,
	0, 417, 418, 419, 424, 426, 427, 422, 423, 425,
	428, 429, 421, 0, 420, 0, 253, 0, 430, 431,
	0, 604, 432, 605, 434, 435, 0, 0, 436, 0,
	0, 0, 438, 439, 440, 0, 0, 441, 442, 606,
	0, 443, 0, 607, 444, 445, 437, 446, 447, 448,
	449, 450, 451, 452, 453, 0, 454, 455, 608, 456,
	457, 458, 609, 459, 460, 461, 610, 462, 611, 463,
	464, 0, 465, 0, 466, 467, 468, 469, 470, 471,
	472, 612, 473, 475, 474, 476, 0, 477, 0, 0,
	0, 0, 0, 478, 0, 480, 481, 482, 479, 483,
	484, 485, 486, 0, 487, 488, 489, 0, 490, 491,
	492, 493, 613, 494, 0, 495, 496, 502, 503, 497,
	498, 504, 505, 506, 507, 508, 0, 510, 511, 509,
	512, 513, 514, 0, 515, 499, 500, 516, 517, 0,
	518, 519, 520, 521, 522, 523, 614, 0, 524, 0,
	525, 526, 527, 528, 501, 529, 534, 615, 530, 531,
	532, 533, 616, 0, 536, 537, 0, 535, 0, 538,
	539, 540, 541, 542, 543, 332, 544, 0, 545, 617,
	618, 619, 620, 0, 554, 0, 546, 547, 548, 621,
	549, 622, 0, 550, 551, 552, 553, 0, 555, 556,
	0, 0, 557, 558, 559, 561, 562, 560, 563, 0,
	564, 0, 0, 565, 566, 567, 623, 624, 625, 248,
	569, 568, 570, 626, 0, 0, 0, 0, 571, 572,
	627, 573, 574, 575, 0, 0, 254, 255, 256, 257,
	258, 259, 0, 260, 261, 0, 0, 0, 0, 0,
	576, 0, 0, 0, 0, 262, 263, 0, 264, 265,
	266, 267, 268, 577, 578, 0, 269, 579, 270, 580,
	0, 581, 271, 272, 273, 274, 275, 276, 0, 0,
	0, 277, 582, 583, 584, 0, 278, 279, 585, 0,
	0, 0, 280, 281, 282, 283, 284, 285, 286, 0,
	0, 288, 289, 290, 287, 291, 0, 292, 0, 293,
	294, 295, 296, 297, 298, 0, 299, 300, 301, 0,
	302, 303, 0, 0, 0, 0, 0, 0, 0, 304,
	305, 306, 307, 0, 308, 586, 587, 0, 312, 309,
	310, 0, 313, 311, 0, 314, 315, 316, 0, 0,
	317, 318, 319, 0, 320, 321, 0, 322, 323, 324,
	0, 325, 326, 588, 327, 328, 329, 331, 333, 330,
	334, 335, 336, 337, 589, 590, 0, 251, 0, 0,
	0, 0, 0, 338, 339, 340, 591, 0, 0, 0,
	341, 0, 342, 0, 0, 0, 343, 344, 592, 593,
	345, 346, 347, 348, 349, 350, 351, 352, 0, 353,
	594, 0, 595, 354, 0, 355, 356, 357, 358, 359,
	2032, 597, 598, 433, 0, 360, 361, 0, 362, 363,
	364, 365, 0, 0, 0, 252, 366, 367, 369, 0,
	0, 368, 599, 600, 0, 601, 0, 370, 371, 0,
	602, 0, 372, 373, 374, 0, 375, 0, 0, 0,
	376, 377, 378, 379, 380, 381, 0, 382, 384, 383,
	0, 385, 603, 0, 386, 387, 0, 0, 388, 0,
	0, 0, 389, 390, 0, 0, 391, 392, 393, 394,
	0, 395, 396, 398, 400, 397, 399, 401, 414, 402,
	403, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 416, 0, 415, 0, 417, 418, 419, 424, 426,
	427, 422, 423, 425, 428, 429, 421, 0, 420, 0,
	253, 0, 430, 431, 0, 604, 432, 605, 434, 435,
	0, 0, 436, 0, 0, 1153, 438, 439, 440, 0,
	0, 441, 442, 606, 0, 443, 0, 607, 444, 445,
	437, 446, 447, 448, 449, 450, 451, 452, 453, 0,
	454, 455, 608, 456, 457, 458, 609, 459, 460, 461,
	610, 462, 611, 463, 464, 0, 465, 0, 466, 467,
	468, 469, 470, 471, 472, 612, 473, 475, 474, 476,
	0, 477, 0, 0, 0, 0, 0, 478, 0, 480,
	481, 482, 479, 483, 484, 485, 486, 0, 487, 488,
	489, 0, 490, 491, 492, 493, 613, 494, 0, 495,
	496, 502, 503, 497, 498, 504, 505, 506, 507, 508,
	0, 510, 511, 509, 512, 513, 514, 0, 515, 499,
	500, 516, 517, 0, 518, 519, 520, 521, 522, 523,
	614, 0, 524, 0, 525, 526, 527, 528, 501, 529,
	534, 615, 530, 531, 532, 533, 616, 0, 536, 537,
	0, 535, 0, 538, 539, 540, 541, 542, 543, 332,
	544, 0, 545, 617, 618, 619, 620, 0, 554, 0,
	546, 547, 548, 621, 549, 622, 0, 550, 551, 552,
	553, 0, 555, 556, 0, 0, 557, 558, 559, 561,
	562, 560, 563, 0, 564, 0, 0, 565, 566, 567,
	623, 624, 625, 0, 569, 568, 570, 626, 1487, 0,
	248, 0, 571, 572, 627, 573, 574, 575, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 254, 255, 256,
	257, 258, 259, 0, 260, 261, 0, 0, 0, 0,
	0, 576, 0, 0, 0, 0, 262, 263, 0, 264,
	265, 266, 267, 268, 577, 578, 0, 269, 579, 270,
	580, 0, 581, 271, 272, 273, 274, 275, 276, 0,
	0, 0, 277, 582, 583, 584, 0, 278, 279, 585,
	0, 0, 0, 280, 281, 282, 283, 284, 285, 286,
	0, 0, 288, 289, 290, 287, 291, 0, 292, 0,
	293, 294, 295, 296, 297, 298, 0, 299, 300, 301,
	0, 302, 303, 0, 0, 0, 0, 0, 0, 0,
	304, 305, 306, 307, 0, 308, 586, 587, 0, 312,
	309, 310, 0, 313, 311, 0, 314, 315, 316, 0,
	0, 317, 318, 319, 0, 320, 321, 0, 322, 323,
	324, 0, 325, 326, 588, 327, 328, 329, 331, 333,
	330, 334, 335, 336, 337, 589, 590, 0, 251, 0,
	0, 0, 0, 0, 338, 339, 340, 591, 0, 0,
	0, 341, 0, 342, 0, 0, 0, 343, 344, 592,
	593, 345, 346, 347, 348, 349, 350, 351, 352, 0,
	353, 594, 0, 595, 354, 0, 355, 356, 357, 358,
	359, 1486, 597, 598, 433, 0, 360, 361, 0, 362,
	363, 364, 365, 0, 0, 0, 252, 366, 367, 369,
	0, 0, 368, 599, 600, 0, 601, 0, 370, 371,
	0, 602, 0, 372, 373, 374, 0, 375, 0, 0,
	0, 376, 377, 378, 379, 380, 381, 0, 382, 384,
	383, 0, 385, 603, 0, 386, 387, 0, 0, 388,
	0, 0, 0, 389, 390, 0, 0, 391, 392, 393,
	394, 0, 395, 396, 398, 400, 397, 399, 401, 414,
	402, 403, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 416, 0, 415, 0, 417, 418, 419, 424,
	426, 427, 422, 423, 425, 428, 429, 421, 0, 420,
	0, 253, 0, 430, 431, 0, 604, 432, 605, 434,
	435, 0, 0, 436, 0, 0, 0, 438, 439, 440,
	0, 0, 441, 442, 606, 0, 443, 0, 607, 444,
	445, 437, 446, 447, 448, 449, 450, 451, 452, 453,
	0, 454, 455, 608, 456, 457, 458, 609, 459, 460,
	461, 610, 462, 611, 463, 464, 0, 465, 0, 466,
	467, 468, 469, 470, 471, 472, 612, 473, 475, 474,
	476, 0, 477, 0, 0, 0, 0, 0, 478, 0,
	480, 481, 482, 479, 483, 484, 485, 486, 0, 487,
	488, 489, 0, 490, 491, 492, 493, 613, 494, 0,
	495, 496, 502, 503, 497, 498, 504, 505, 506, 507,
	508, 0, 510, 511, 509, 512, 513, 514, 0, 515,
	499, 500, 516, 517, 0, 518, 519, 520, 521, 522,
	523, 614, 0, 524, 0, 525, 526, 527, 528, 501,
	529, 534, 615, 530, 531, 532, 533, 616, 0, 536,
	537, 0, 535, 0, 538, 539, 540, 541, 542, 543,
	332, 544, 0, 545, 617, 618, 619, 620, 0, 554,
	0, 546, 547, 548, 621, 549, 622, 0, 550, 551,
	552, 553, 0, 555, 556, 0, 0, 557, 558, 559,
	561, 562, 560, 563, 0, 564, 0, 0, 565, 566,
	567, 623, 624, 625, 0, 569, 568, 570, 626, 1478,
	0, 248, 0, 571, 572, 627, 573, 574, 575, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 254, 255,
	256, 257, 258, 259, 0, 260, 261, 0, 0, 0,
	0, 0, 576, 0, 0, 0, 0, 262, 263, 0,
	264, 265, 266, 267, 268, 577, 578, 0, 269, 579,
	270, 580, 0, 581, 271, 272, 273, 274, 275, 276,
	0, 0, 0, 277, 582, 583, 584, 0, 278, 279,
	585, 0, 0, 0, 280, 281, 282, 283, 284, 285,
	286, 0, 0, 288, 289, 290, 287, 291, 0, 292,
	0, 293, 294, 295, 296, 297, 298, 0, 299, 300,
	301, 0, 302, 303, 0, 0, 0, 0, 0, 0,
	0, 304, 305, 306, 307, 0, 308, 586, 587, 0,
	312, 309, 310, 0, 313, 311, 0, 314, 315, 316,
	0, 0, 317, 318, 319, 0, 320, 321, 0, 322,
	323, 324, 0, 325, 326, 588, 327, 328, 329, 331,
	333, 330, 334, 335, 336, 337, 589, 590, 0, 251,
	0, 0, 0, 0, 0, 338, 339, 340, 591, 0,
	0, 0, 341, 0, 342, 0, 0, 0, 343, 344,
	592, 593, 345, 346, 347, 348, 349, 350, 351, 352,
	0, 353, 594, 0, 595, 354, 0, 355, 356, 357,
	358, 359, 1477, 597, 598, 433, 0, 360, 361, 0,
	362, 363, 364, 365, 0, 0, 0, 252, 366, 367,
	369, 0, 0, 368, 599, 600, 0, 601, 0, 370,
	371, 0, 602, 0, 372, 373, 374, 0, 375, 0,
	0, 0, 376, 377, 378, 379, 380, 381, 0, 382,
	384, 383, 0, 385, 603, 0, 386, 387, 0, 0,
	388, 0, 0, 0, 389, 390, 0, 0, 391, 392,
	393, 394, 0, 395, 396, 398, 400, 397, 399, 401,
	414, 402, 403, 404, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 416, 0, 415, 0, 417, 418, 419,
	424, 426, 427, 422, 423, 425, 428, 429, 421, 0,
	420, 0, 253, 0, 430, 431, 0, 604, 432, 605,
	434, 435, 0, 0, 436, 0, 0, 0, 438, 439,
	440, 0, 0, 441, 442, 606, 0, 443, 0, 607,
	444, 445, 437, 446, 447, 448, 449, 450, 451, 452,
	453, 0, 454, 455, 608, 456, 457, 458, 609, 459,
	460, 461, 610, 462, 611, 463, 464, 0, 465, 0,
	466, 467, 468, 469, 470, 471, 472, 612, 473, 475,
	474, 476, 0, 477, 0, 0, 0, 0, 0, 478,
	0, 480, 481, 482, 479, 483, 484, 485, 486, 0,
	487, 488, 489, 0, 490, 491, 492, 493, 613, 494,
	0, 495, 496, 502, 503, 497, 498, 504, 505, 506,
	507, 508, 0, 510, 511, 509, 512, 513, 514, 0,
	515, 499, 500, 516, 517, 0, 518, 519, 520, 521,
	522, 523, 614, 0, 524, 0, 525, 526, 527, 528,
	501, 529, 534, 615, 530, 531, 532, 533, 616, 0,
	536, 537, 0, 535, 0, 538, 539, 540, 541, 542,
	543, 332, 544, 0, 545, 617, 618, 619, 620, 0,
	554, 0, 546, 547, 548, 621, 549, 622, 0, 550,
	551, 552, 553, 0, 555, 556, 0, 0, 557, 558,
	559, 561, 562, 560, 563, 0, 564, 0, 0, 565,
	566, 567, 623, 624, 625, 0, 569, 568, 570, 626,
	1475, 0, 248, 0, 571, 572, 627, 573, 574, 575,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 254,
	255, 256, 257, 258, 259, 0, 260, 261, 0, 0,
	0, 0, 0, 576, 0, 0, 0, 0, 262, 263,
	0, 264, 265, 266, 267, 268, 577, 578, 0, 269,
	579, 270, 580, 0, 581, 271, 272, 273, 274, 275,
	276, 0, 0, 0, 277, 582, 583, 584, 0, 278,
	279, 585, 0, 0, 0, 280, 281, 282, 283, 284,
	285, 286, 0, 0, 288, 289, 290, 287, 291, 0,
	292, 0, 293, 294, 295, 296, 297, 298, 0, 299,
	300, 301, 0, 302, 303, 0, 0, 0, 0, 0,
	0, 0, 304, 305, 306, 307, 0, 308, 586, 587,
	0, 312, 309, 310, 0, 313, 311, 0, 314, 315,
	316, 0, 0, 317, 318, 319, 0, 320, 321, 0,
	322, 323, 324, 0, 325, 326, 588, 327, 328, 329,
	331, 333, 330, 334, 335, 336, 337, 589, 590, 0,
	251, 0, 0, 0, 0, 0, 338, 339, 340, 591,
	0, 0, 0, 341, 0, 342, 0, 0, 0, 343,
	344, 592, 593, 345, 346, 347, 348, 349, 350, 351,
	352, 0, 353, 594, 0, 595, 354, 0, 355, 356,
	357, 358, 359, 1474, 597, 598, 433, 0, 360, 361,
	0, 362, 363, 364, 365, 0, 0, 0, 252, 366,
	367, 369, 0, 0, 368, 599, 600, 0, 601, 0,
	370, 371, 0, 602, 0, 372, 373, 374, 0, 375,
	0, 0, 0, 376, 377, 378, 379, 380, 381, 0,
	382, 384, 383, 0, 385, 603, 0, 386, 387, 0,
	0, 388, 0, 0, 0, 389, 390, 0, 0, 391,
	392, 393, 394, 0, 395, 396, 398, 400, 397, 399,
	401, 414, 402, 403, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 416, 0, 415, 0, 417, 418,
	419, 424, 426, 427, 422, 423, 425, 428, 429, 421,
	0, 420, 0, 253, 0, 430, 431, 0, 604, 432,
	605, 434, 435, 0, 0, 436, 0, 0, 0, 438,
	439, 440, 0, 0, 441, 442, 606, 0, 443, 0,
	607, 444, 445, 437, 446, 447, 448, 449, 450, 451,
	452, 453, 0, 454, 455, 608, 456, 457, 458, 609,
	459, 460, 461, 610, 462, 611, 463, 464, 0, 465,
	0, 466, 467, 468, 469, 470, 471, 472, 612, 473,
	475, 474, 476, 0, 477, 0, 0, 0, 0, 0,
	478, 0, 480, 481, 482, 479, 483, 484, 485, 486,
	0, 487, 488, 489, 0, 490, 491, 492, 493, 613,
	494, 0, 495, 496, 502, 503, 497, 498, 504, 505,
	506, 507, 508, 0, 510, 511, 509, 512, 513, 514,
	0, 515, 499, 500, 516, 517, 0, 518, 519, 520,
	521, 522, 523, 614, 0, 524, 0, 525, 526, 527,
	528, 501, 529, 534, 615, 530, 531, 532, 533, 616,
	0, 536, 537, 0, 535, 0, 538, 539, 540, 541,
	542, 543, 332, 544, 0, 545, 617, 618, 619, 620,
	0, 554, 0, 546, 547, 548, 621, 549, 622, 0,
	550, 551, 552, 553, 0, 555, 556, 0, 0, 557,
	558, 559, 561, 562, 560, 563, 0, 564, 0, 0,
	565, 566, 567, 623, 624, 625, 0, 569, 568, 570,
	626, 1470, 0, 248, 0, 571, 572, 627, 573, 574,
	575, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	254, 255, 256, 257, 258, 259, 0, 260, 261, 0,
	0, 0, 0, 0, 576, 0, 0, 0, 0, 262,
	263, 0, 264, 265, 266, 267, 268, 577, 578, 0,
	269, 579, 270, 580, 0, 581, 271, 272, 273, 274,
	275, 276, 0, 0, 0, 277, 582, 583, 584, 0,
	278, 279, 585, 0, 0, 0, 280, 281, 282, 283,
	284, 285, 286, 0, 0, 288, 289, 290, 287, 291,
	0, 292, 0, 293, 294, 295, 296, 297, 298, 0,
	299, 300, 301, 0, 302, 303, 0, 0, 0, 0,
	0, 0, 0, 304, 305, 306, 307, 0, 308, 586,
	587, 0, 312, 309, 310, 0, 313, 311, 0, 314,
	315, 316, 0, 0, 317, 318, 319, 0, 320, 321,
	0, 322, 323, 324, 0, 325, 326, 588, 327, 328,
	329, 331, 333, 330, 334, 335, 336, 337, 589, 590,
	0, 251, 0, 0, 0, 0, 0, 338, 339, 340,
	591, 0, 0, 0, 341, 0, 342, 0, 0, 0,
	343, 344, 592, 593, 345, 346, 347, 348, 349, 350,
	351, 352, 0, 353, 594, 0, 595, 354, 0, 355,
	356, 357, 358, 359, 1469, 597, 598, 433, 0, 360,
	361, 0, 362, 363, 364, 365, 0, 0, 0, 252,
	366, 367, 369, 0, 0, 368, 599, 600, 0, 601,
	0, 370, 371, 0, 602, 0, 372, 373, 374, 0,
	375, 0, 0, 0, 376, 377, 378, 379, 380, 381,
	0, 382, 384, 383, 0, 385, 603, 0, 386, 387,
	0, 0, 388, 0, 0, 0, 389, 390, 0, 0,
	391, 392, 393, 394, 0, 395, 396, 398, 400, 397,
	399, 401, 414, 402, 403, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 416, 0, 415, 0, 417,
	418, 419, 424, 426, 427, 422, 423, 425, 428, 429,
	421, 0, 420, 0, 253, 0, 430, 431, 0, 604,
	432, 605, 434, 435, 0, 0, 436, 0, 0, 0,
	438, 439, 440, 0, 0, 441, 442, 606, 0, 443,
	0, 607, 444, 445, 437, 446, 447, 448, 449, 450,
	451, 452, 453, 0, 454, 455, 608, 456, 457, 458,
	609, 459, 460, 461, 610, 462, 611, 463, 464, 0,
	465, 0, 466, 467, 468, 469, 470, 471, 472, 612,
	473, 475, 474, 476, 0, 477, 0, 0, 0, 0,
	0, 478, 0, 480, 481, 482, 479, 483, 484, 485,
	486, 0, 487, 488, 489, 0, 490, 491, 492, 493,
	613, 494, 0, 495, 496, 502, 503, 497, 498, 504,
	505, 506, 507, 508, 0, 510, 511, 509, 512, 513,
	514, 0, 515, 499, 500, 516, 517, 0, 518, 519,
	520, 521, 522, 523, 614, 0, 524, 0, 525, 526,
	527, 528, 501, 529, 534, 615, 530, 531, 532, 533,
	616, 0, 536, 537, 0, 535, 0, 538, 539, 540,
	541, 542, 543, 332, 544, 0, 545, 617, 618, 619,
	620, 0, 554, 0, 546, 547, 548, 621, 549, 622,
	0, 550, 551, 552, 553, 0, 555, 556, 0, 0,
	557, 558, 559, 561, 562, 560, 563, 0, 564, 0,
	0, 565, 566, 567, 623, 624, 625, 0, 569, 568,
	570, 626, 1426, 0, 248, 0, 571, 572, 627, 573,
	574, 575, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 254, 255, 256, 257, 258, 259, 0, 260, 261,
	0, 0, 0, 0, 0, 576, 0, 0, 0, 0,
	262, 263, 0, 264, 265, 266, 267, 268, 577, 578,
	0, 269, 579, 270, 580, 0, 581, 271, 272, 273,
	274, 275, 276, 0, 0, 0, 277, 582, 583, 584,
	0, 278, 279, 585, 0, 0, 0, 280, 281, 282,
	283, 284, 285, 286, 0, 0, 288, 289, 290, 287,
	291, 0, 292, 0, 293, 294, 295, 296, 297, 298,
	0, 299, 300, 301, 0, 302, 303, 0, 0, 0,
	0, 0, 0, 0, 304, 305, 306, 307, 0, 308,
	586, 587, 0, 312, 309, 310, 0, 313, 311, 0,
	314, 315, 316, 0, 0, 317, 318, 319, 0, 320,
	321, 0, 322, 323, 324, 0, 325, 326, 588, 327,
	328, 329, 331, 333, 330, 334, 335, 336, 337, 589,
	590, 0, 251, 0, 0, 0, 0, 0, 338, 339,
	340, 591, 0, 0, 0, 341, 0, 342, 0, 0,
	0, 343, 344, 592, 593, 345, 346, 347, 348, 349,
	350, 351, 352, 0, 353, 594, 0, 595, 354, 0,
	355, 356, 357, 358, 359, 596, 597, 598, 433, 0,
	360, 361, 0, 362, 363, 364, 365, 0, 0, 0,
	252, 366, 367, 369, 0, 0, 368, 599, 600, 0,
	601, 0, 370, 371, 0, 602, 0, 372, 373, 374,
	0, 375, 0, 0, 0, 376, 377, 378, 379, 380,
	381, 0, 382, 384, 383, 0, 385, 603, 0, 386,
	387, 0, 0, 388, 0, 0, 0, 389, 390, 0,
	0, 391, 392, 393, 394, 0, 395, 396, 398, 400,
	397, 399, 401, 414, 402, 403, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 416, 0, 415, 0,
	417, 418, 419, 424, 426, 427, 422, 423, 425, 428,
	429, 421, 0, 420, 0, 253, 0, 430, 431, 0,
	604, 432, 605, 434, 435, 0, 0, 436, 0, 0,
	0, 438, 439, 440, 0, 0, 441, 442, 606, 0,
	443, 0, 607, 444, 445, 437, 446, 447, 448, 449,
	450, 451, 452, 453, 0, 454, 455, 608, 456, 457,
	458, 609, 459, 460, 461, 610, 462, 611, 463, 464,
	0, 465, 0, 466, 467, 468, 469, 470, 471, 472,
	612, 473, 475, 474, 476, 0, 477, 0, 0, 0,
	0, 0, 478, 0, 480, 481, 482, 479, 483, 484,
	485, 486, 0, 487, 488, 489, 0, 490, 491, 492,
	493, 613, 494, 0, 495, 496, 502, 503, 497, 498,
	504, 505, 506, 507, 508, 0, 510, 511, 509, 512,
	513, 514, 0, 515, 499, 500, 516, 517, 0, 518,
	519, 520, 521, 522, 523, 614, 0, 524, 0, 525,
	526, 527, 528, 501, 529, 534, 615, 530, 531, 532,
	533, 616, 0, 536, 537, 0, 535, 0, 538, 539,
	540, 541, 542, 543, 332, 544, 0, 545, 617, 618,
	619, 620, 0, 554, 0, 546, 547, 548, 621, 549,
	622, 0, 550, 551, 552, 553, 0, 555, 556, 0,
	0, 557, 558, 559, 561, 562, 560, 563, 0, 564,
	0, 0, 565, 566, 567, 623, 624, 625, 0, 569,
	568, 570, 626, 1338, 0, 248, 0, 571, 572, 627,
	573, 574, 575, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 254, 255, 256, 257, 258, 259, 0, 260,
	261, 0, 0, 0, 0, 0, 576, 0, 0, 0,
	0, 262, 263, 0, 264, 265, 266, 267, 268, 577,
	578, 0, 269, 579, 270, 580, 0, 581, 271, 272,
	273, 274, 275, 276, 0, 0, 0, 277, 582, 583,
	584, 0, 278, 279, 585, 0, 0, 0, 280, 281,
	282, 283, 284, 285, 286, 0, 0, 288, 289, 290,
	287, 291, 0, 292, 0, 293, 294, 295, 296, 297,
	298, 0, 299, 300, 301, 0, 302, 303, 0, 0,
	0, 0, 0, 0, 0, 304, 305, 306, 307, 0,
	308, 586, 587, 0, 312, 309, 310, 0, 313, 311,
	0, 314, 315, 316, 0, 0, 317, 318, 319, 0,
	320, 321, 0, 322, 323, 324, 0, 325, 326, 588,
	327, 328, 329, 331, 333, 330, 334, 335, 336, 337,
	589, 590, 0, 251, 0, 0, 0, 0, 0, 338,
	339, 340, 591, 0, 0, 0, 341, 0, 342, 0,
	0, 0, 343, 344, 592, 593, 345, 346, 347, 348,
	349, 350, 351, 352, 0, 353, 594, 0, 595, 354,
	0, 355, 356, 357, 358, 359, 596, 597, 598, 433,
	0, 360, 361, 0, 362, 363, 364, 365, 0, 0,
	0, 252, 366, 367, 369, 0, 0, 368, 599, 600,
	0, 601, 0, 370, 371, 0, 602, 0, 372, 373,
	374, 0, 375, 0, 0, 0, 376, 377, 378, 379,
	380, 381, 0, 382, 384, 383, 0, 385, 603, 0,
	386, 387, 0, 0, 388, 0, 0, 0, 389, 390,
	0, 0, 391, 392, 393, 394, 0, 395, 396, 398,
	400, 397, 399, 401, 414, 402, 403, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 416, 0, 415,
	0, 417, 418, 419, 424, 426, 427, 422, 423, 425,
	428, 429, 421, 0, 420, 0, 253, 0, 430, 431,
	0, 604, 432, 605, 434, 435, 0, 0, 436, 0,
	0, 0, 438, 439, 440, 0, 0, 441, 442, 606,
	0, 443, 0, 607, 444, 445, 437, 446, 447, 448,
	449, 450, 451, 452, 453, 0, 454, 455, 608, 456,
	457, 458, 609, 459, 460, 461, 610, 462, 611, 463,
	464, 0, 465, 0, 466, 467, 468, 469, 470, 471,
	472, 612, 473, 475, 474, 476, 0, 477, 0, 0,
	0, 0, 0, 478, 0, 480, 481, 482, 479, 483,
	484, 485, 486, 0, 487, 488, 489, 0, 490, 491,
	492, 493, 613, 494, 0, 495, 496, 502, 503, 497,
	498, 504, 505, 506, 507, 508, 0, 510, 511, 509,
	512, 513, 514, 0, 515, 499, 500, 516, 517, 0,
	518, 519, 520, 521, 522, 523, 614, 0, 524, 0,
	525, 526, 527, 528, 501, 529, 534, 615, 530, 531,
	532, 533, 616, 0, 536, 537, 0, 535, 0, 538,
	539, 540, 541, 542, 543, 332, 544, 0, 545, 617,
	618, 619, 620, 0, 554, 0, 546, 547, 548, 621,
	549, 622, 0, 550, 551, 552, 553, 0, 555, 556,
	0, 0, 557, 558, 559, 561, 562, 560, 563, 0,
	564, 0, 0, 565, 566, 567, 623, 624, 625, 0,
	569, 568, 570, 626, 1331, 0, 248, 0, 571, 572,
	627, 573, 574, 575, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 254, 255, 256, 257, 258, 259, 0,
	260, 261, 0, 0, 0, 0, 0, 576, 0, 0,
	0, 0, 262, 263, 0, 264, 265, 266, 267, 268,
	577, 578, 0, 269, 579, 270, 580, 0, 581, 271,
	272, 273, 274, 275, 276, 0, 0, 0, 277, 582,
	583, 584, 0, 278, 279, 585, 0, 0, 0, 280,
	281, 282, 283, 284, 285, 286, 0, 0, 288, 289,
	290, 287, 291, 0, 292, 0, 293, 294, 295, 296,
	297, 298, 0, 299, 300, 301, 0, 302, 303, 0,
	0, 0, 0, 0, 0, 0, 304, 305, 306, 307,
	0, 308, 586, 587, 0, 312, 309, 310, 0, 313,
	311, 0, 314, 315, 316, 0, 0, 317, 318, 319,
	0, 320, 321, 0, 322, 323, 324, 0, 325, 326,
	588, 327, 328, 329, 331, 333, 330, 334, 335, 336,
	337, 589, 590, 0, 251, 0, 0, 0, 0, 0,
	338, 339, 340, 591, 0, 0, 0, 341, 0, 342,
	0, 0, 0, 343, 344, 592, 593, 345, 346, 347,
	348, 349, 350, 351, 352, 0, 353, 594, 0, 595,
	354, 0, 355, 356, 357, 358, 359, 1333, 597, 598,
	433, 0, 360, 361, 0, 362, 363, 364, 365, 0,
	0, 0, 252, 366, 367, 369, 0, 0, 368, 599,
	600, 0, 601, 0, 370, 371, 0, 602, 0, 372,
	373, 374, 0, 375, 0, 0, 0, 376, 377, 378,
	379, 380, 381, 0, 382, 384, 383, 0, 385, 603,
	0, 386, 387, 0, 0, 388, 0, 0, 0, 389,
	390, 0, 0, 391, 392, 393, 394, 0, 395, 396,
	398, 400, 397, 399, 401, 414, 402, 403, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 416, 0,
	415, 0, 417, 418, 419, 424, 426, 427, 422, 423,
	425, 428, 429, 421, 0, 420, 0, 253, 0, 430,
	431, 0, 604, 432, 605, 434, 435, 0, 0, 436,
	0, 0, 0, 438, 439, 440, 0, 0, 441, 442,
	606, 0, 443, 0, 607, 444, 445, 437, 446, 447,
	448, 449, 450, 451, 452, 453, 0, 454, 455, 608,
	456, 457, 458, 609, 459, 460, 461, 610, 462, 611,
	463, 464, 0, 465, 0, 466, 467, 468, 469, 470,
	471, 472, 612, 473, 475, 474, 476, 0, 477, 0,
	0, 0, 0, 0, 478, 0, 480, 481, 482, 479,
	483, 484, 485, 486, 0, 487, 488, 489, 0, 490,
	491, 492, 493, 613, 494, 0, 495, 496, 502, 503,
	497, 498, 504, 505, 506, 507, 508, 0, 510, 511,
	509, 512, 513, 514, 0, 515, 499, 500, 516, 517,
	0, 518, 519, 520, 521, 522, 523, 614, 0, 524,
	0, 525, 526, 527, 528, 501, 529, 534, 615, 530,
	531, 532, 533, 616, 0, 536, 537, 0, 535, 0,
	538, 539, 540, 541, 542, 543, 332, 544, 0, 545,
	617, 618, 619, 620, 0, 554, 0, 546, 547, 548,
	621, 549, 622, 0, 550, 551, 552, 553, 0, 555,
	556, 0, 0, 557, 558, 559, 561, 562, 560, 563,
	0, 564, 0, 0, 565, 566, 567, 623, 624, 625,
	0, 569, 568, 570, 626, 629, 0, 248, 0, 571,
	572, 627, 573, 574, 575, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 254, 255, 256, 257, 258, 259,
	0, 260, 261, 0, 0, 0, 0, 0, 576, 0,
	0, 0, 0, 262, 263, 0, 264, 265, 266, 267,
	268, 577, 578, 0, 269, 579, 270, 580, 0, 581,
	271, 272, 273, 274, 275, 276, 0, 0, 0, 277,
	582, 583, 584, 0, 278, 279, 585, 0, 0, 0,
	280, 281, 282, 283, 284, 285, 286, 0, 0, 288,
	289, 290, 287, 291, 0, 292, 0, 293, 294, 295,
	296, 297, 298, 0, 299, 300, 301, 0, 302, 303,
	0, 0, 0, 0, 0, 0, 0, 304, 305, 306,
	307, 0, 308, 586, 587, 0, 312, 309, 310, 0,
	313, 311, 0, 314, 315, 316, 0, 0, 317, 318,
	319, 0, 320, 321, 0, 322, 323, 324, 0, 325,
	326, 588, 327, 328, 329, 331, 333, 330, 334, 335,
	336, 337, 589, 590, 0, 251, 0, 0, 0, 0,
	0, 338, 339, 340, 591, 0, 0, 0, 341, 0,
	342, 0, 0, 0, 343, 344, 592, 593, 345, 346,
	347, 348, 349, 350, 351, 352, 0, 353, 594, 0,
	595, 354, 0, 355, 356, 357, 358, 359, 596, 597,
	598, 433, 0, 360, 361, 0, 362, 363, 364, 365,
	0, 0, 0, 252, 366, 367, 369, 0, 0, 368,
	599, 600, 0, 601, 0, 370, 371, 0, 602, 0,
	372, 373, 374, 0, 375, 0, 0, 0, 376, 377,
	378, 379, 380, 381, 0, 382, 384, 383, 0, 385,
	603, 0, 386, 387, 0, 0, 388, 0, 0, 0,
	389, 390, 0, 0, 391, 392, 393, 394, 0, 395,
	396, 398, 400, 397, 399, 401, 414, 402, 403, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 416,
	0, 415, 0, 417, 418, 419, 424, 426, 427, 422,
	423, 425, 428, 429, 421, 0, 420, 0, 253, 0,
	430, 431, 0, 604, 432, 605, 434, 435, 0, 0,
	436, 0, 0, 0, 438, 439, 440, 0, 0, 441,
	442, 606, 0, 443, 0, 607, 444, 445, 437, 446,
	447, 448, 449, 450, 451, 452, 453, 0, 454, 455,
	608, 456, 457, 458, 609, 459, 460, 461, 610, 462,
	611, 463, 464, 0, 465, 0, 466, 467, 468, 469,
	470, 471, 472, 612, 473, 475, 474, 476, 0, 477,
	0, 0, 0, 0, 0, 478, 0, 480, 481, 482,
	479, 483, 484, 485, 486, 0, 487, 488, 489, 0,
	490, 491, 492, 493, 613, 494, 0, 495, 496, 502,
	503, 497, 498, 504, 505, 506, 507, 508, 0, 510,
	511, 509, 512, 513, 514, 0, 515, 499, 500, 516,
	517, 0, 518, 519, 520, 521, 522, 523, 614, 0,
	524, 0, 525, 526, 527, 528, 501, 529, 534, 615,
	530, 531, 532, 533, 616, 0, 536, 537, 0, 535,
	0, 538, 539, 540, 541, 542, 543, 332, 544, 0,
	545, 617, 618, 619, 620, 0, 554, 0, 546, 547,
	548, 621, 549, 622, 0, 550, 551, 552, 553, 0,
	555, 556, 0, 0, 557, 558, 559, 561, 562, 560,
	563, 0, 564, 0, 0, 565, 566, 567, 623, 624,
	625, 0, 569, 568, 570, 626, 239, 0, 248, 0,
	571, 572, 627, 573, 574, 575, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 254, 255, 256, 257, 258,
	259, 0, 260, 261, 0, 0, 0, 0, 0, 576,
	0, 0, 0, 0, 262, 263, 0, 264, 265, 266,
	267, 268, 577, 578, 0, 269, 579, 270, 580, 0,
	581, 271, 272, 273, 274, 275, 276, 0, 0, 0,
	277, 582, 583, 584, 0, 278, 279, 585, 0, 0,
	0, 280, 281, 282, 283, 284, 285, 286, 0, 0,
	288, 289, 290, 287, 291, 0, 292, 0, 293, 294,
	295, 296, 297, 298, 0, 299, 300, 301, 0, 302,
	303, 0, 0, 0, 0, 0, 0, 0, 304, 305,
	306, 307, 0, 308, 586, 587, 0, 312, 309, 310,
	0, 313, 311, 0, 314, 315, 316, 0, 0, 317,
	318, 319, 0, 320, 321, 0, 322, 323, 324, 0,
	325, 326, 588, 327, 328, 329, 331, 333, 330, 334,
	335, 336, 337, 589, 590, 0, 251, 0, 0, 0,
	0, 0, 338, 339, 340, 591, 0, 0, 0, 341,
	0, 342, 0, 0, 0, 343, 344, 592, 593, 345,
	346, 347, 348, 349, 350, 351, 352, 0, 353, 594,
	0, 595, 354, 0, 355, 356, 357, 358, 359, 596,
	597, 598, 433, 0, 360, 361, 0, 362, 363, 364,
	365, 0, 0, 0, 252, 366, 367, 369, 0, 0,
	368, 599, 600, 0, 601, 0, 370, 371, 0, 602,
	0, 372, 373, 374, 0, 375, 0, 0, 0, 376,
	377, 378, 379, 380, 381, 0, 382, 384, 383, 0,
	385, 603, 0, 386, 387, 0, 0, 388, 0, 0,
	0, 389, 390, 0, 0, 391, 392, 393, 394, 0,
	395, 396, 398, 400, 397, 399, 401, 414, 402, 403,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	416, 0, 415, 0, 417, 418, 419, 424, 426, 427,
	422, 423, 425, 428, 429, 421, 0, 420, 0, 253,
	0, 430, 431, 0, 604, 432, 605, 434, 435, 0,
	0, 436, 0, 0, 0, 438, 439, 440, 0, 0,
	441, 442, 606, 0, 443, 0, 607, 444, 445, 437,
	446, 447, 448, 449, 450, 451, 452, 453, 0, 454,
	455, 608, 456, 457, 458, 609, 459, 460, 461, 610,
	462, 611, 463, 464, 0, 465, 0, 466, 467, 468,
	469, 470, 471, 472, 612, 473, 475, 474, 476, 0,
	477, 0, 0, 0, 0, 0, 478, 0, 480, 481,
	482, 479, 483, 484, 485, 486, 0, 487, 488, 489,
	0, 490, 491, 492, 493, 613, 494, 0, 495, 496,
	502, 503, 497, 498, 504, 505, 506, 507, 508, 0,
	510, 511, 509, 512, 513, 514, 0, 515, 499, 500,
	516, 517, 0, 518, 519, 520, 521, 522, 523, 614,
	0, 524, 0, 525, 526, 527, 528, 501, 529, 534,
	615, 530, 531, 532, 533, 616, 0, 536, 537, 0,
	535, 0, 538, 539, 540, 541, 542, 543, 332, 544,
	0, 545, 617, 618, 619, 620, 0, 554, 0, 546,
	547, 548, 621, 549, 622, 0, 550, 551, 552, 553,
	0, 555, 556, 0, 0, 557, 558, 559, 561, 562,
	560, 563, 0, 564, 0, 0, 565, 566, 567, 623,
	624, 625, 248, 569, 568, 570, 626, 0, 0, 0,
	0, 571, 572, 627, 573, 574, 575, 0, 0, 254,
	255, 256, 257, 258, 259, 0, 260, 261, 0, 0,
	0, 0, 0, 576, 0, 0, 0, 0, 262, 263,
	0, 264, 265, 266, 267, 268, 577, 578, 0, 269,
	579, 270, 580, 0, 581, 271, 272, 273, 274, 275,
	276, 0, 0, 0, 277, 582, 583, 584, 0, 278,
	279, 585, 0, 0, 0, 280, 281, 282, 283, 284,
	285, 286, 0, 0, 288, 289, 290, 287, 291, 0,
	292, 0, 293, 294, 295, 296, 297, 298, 0, 299,
	300, 301, 0, 302, 303, 0, 0, 0, 0, 0,
	0, 0, 304, 305, 306, 307, 0, 308, 586, 587,
	0, 312, 309, 310, 0, 313, 311, 0, 314, 315,
	316, 0, 0, 317, 318, 319, 0, 320, 321, 0,
	322, 323, 324, 0, 325, 326, 588, 327, 328, 329,
	331, 333, 330, 334, 335, 336, 337, 589, 590, 0,
	251, 0, 0, 0, 0, 0, 338, 339, 340, 591,
	0, 0, 0, 341, 0, 342, 0, 0, 0, 343,
	344, 592, 593, 345, 346, 347, 348, 349, 350, 351,
	352, 0, 353, 594, 0, 595, 354, 0, 355, 356,
	357, 358, 359, 596, 597, 598, 433, 0, 360, 361,
	0, 362, 363, 364, 365, 0, 0, 0, 252, 366,
	367, 369, 0, 0, 368, 599, 600, 0, 601, 0,
	370, 371, 0, 602, 0, 372, 373, 374, 0, 375,
	0, 0, 0, 376, 377, 378, 379, 380, 381, 0,
	382, 384, 383, 0, 385, 603, 0, 386, 387, 0,
	0, 388, 0, 0, 0, 389, 390, 0, 0, 391,
	392, 393, 394, 0, 395, 396, 398, 400, 397, 399,
	401, 414, 402, 403, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 416, 0, 415, 0, 417, 418,
	419, 424, 426, 427, 422, 423, 425, 428, 429, 421,
	0, 420, 0, 253, 0, 430, 431, 0, 604, 432,
	605, 434, 435, 0, 0, 436, 0, 0, 0, 438,
	439, 440, 0, 0, 441, 442, 606, 0, 443, 0,
	607, 444, 445, 437, 446, 447, 448, 449, 450, 451,
	452, 453, 0, 454, 455, 608, 456, 457, 458, 609,
	459, 460, 461, 610, 462, 611, 463, 464, 0, 465,
	0, 466, 467, 468, 469, 470, 471, 472, 612, 473,
	475, 474, 476, 0, 477, 0, 0, 0, 0, 0,
	478, 0, 480, 481, 482, 479, 483, 484, 485, 486,
	0, 487, 488, 489, 0, 490, 491, 492, 493, 613,
	494, 0, 495, 496, 502, 503, 497, 498, 504, 505,
	506, 507, 508, 0, 510, 511, 509, 512, 513, 514,
	0, 515, 499, 500, 516, 517, 0, 518, 519, 520,
	521, 522, 523, 614, 0, 524, 0, 525, 526, 527,
	528, 501, 529, 534, 615, 530, 531, 532, 533, 616,
	0, 536, 537, 0, 535, 0, 538, 539, 540, 541,
	542, 543, 332, 544, 0, 545, 617, 618, 619, 620,
	0, 554, 0, 546, 547, 548, 621, 549, 622, 0,
	550, 551, 552, 553, 0, 555, 556, 0, 0, 557,
	558, 559, 561, 562, 560, 563, 0, 564, 0, 0,
	565, 566, 567, 623, 624, 625, 248, 569, 568, 570,
	626, 0, 0, 0, 0, 571, 572, 627, 573, 574,
	575, 0, 0, 254, 255, 256, 257, 258, 259, 0,
	260, 261, 0, 0, 0, 0, 0, 576, 0, 0,
	0, 0, 262, 263, 0, 264, 265, 266, 267, 268,
	577, 578, 0, 269, 579, 270, 580, 0, 581, 271,
	272, 273, 274, 275, 276, 0, 0, 0, 277, 582,
	583, 584, 0, 278, 279, 585, 0, 0, 0, 280,
	281, 282, 283, 284, 285, 286, 0, 0, 288, 289,
	290, 287, 291, 0, 292, 0, 293, 294, 295, 296,
	297, 298, 651, 299, 300, 301, 0, 302, 303, 0,
	0, 0, 0, 0, 0, 0, 304, 305, 306, 307,
	0, 308, 586, 587, 0, 312, 309, 310, 0, 313,
	311, 0, 314, 315, 316, 0, 0, 317, 318, 319,
	0, 320, 321, 0, 322, 323, 324, 0, 325, 326,
	588, 327, 328, 329, 331, 333, 330, 334, 335, 336,
	337, 589, 590, 0, 0, 0, 0, 0, 0, 0,
	338, 339, 340, 591, 0, 0, 0, 341, 0, 342,
	0, 0, 0, 343, 344, 592, 593, 345, 346, 347,
	348, 349, 350, 351, 352, 652, 353, 594, 0, 595,
	354, 0, 355, 356, 357, 358, 359, 596, 597, 598,
	433, 0, 360, 361, 0, 362, 363, 364, 365, 0,
	0, 0, 0, 366, 367, 369, 0, 0, 368, 599,
	600, 0, 601, 0, 370, 371, 0, 602, 0, 372,
	373, 374, 0, 375, 0, 0, 0, 376, 377, 378,
	379, 380, 381, 0, 382, 384, 383, 0, 385, 603,
	0, 386, 387, 0, 0, 388, 0, 0, 0, 389,
	390, 0, 0, 391, 392, 393, 394, 0, 395, 396,
	398, 400, 397, 399, 401, 414, 402, 403, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 416, 0,
	415, 0, 417, 418, 419, 424, 426, 427, 422, 423,
	425, 428, 429, 421, 0, 420, 0, 0, 0, 430,
	431, 0, 604, 432, 605, 434, 435, 0, 0, 436,
	0, 0, 0, 438, 439, 440, 0, 0, 441, 442,
	606, 0, 443, 0, 607, 444, 445, 437, 446, 447,
	448, 449, 450, 451, 452, 453, 0, 454, 455, 608,
	456, 457, 458, 609, 459, 460, 461, 610, 462, 611,
	463, 464, 0, 465, 0, 466, 467, 468, 469, 470,
	471, 472, 612, 473, 475, 474, 476, 0, 477, 0,
	0, 0, 0, 0, 478, 0, 480, 481, 482, 479,
	483, 484, 485, 486, 0, 487, 488, 489, 0, 490,
	491, 492, 493, 613, 494, 0, 495, 496, 502, 503,
	497, 498, 504, 505, 506, 507, 508, 653, 510, 511,
	509, 512, 513, 514, 0, 515, 499, 500, 516, 517,
	0, 518, 519, 520, 521, 522, 523, 614, 0, 524,
	0, 525, 526, 527, 528, 501, 529, 534, 615, 530,
	531, 532, 533, 616, 0, 536, 537, 0, 535, 0,
	538, 539, 540, 541, 542, 543, 332, 544, 0, 545,
	617, 618, 619, 620, 0, 554, 0, 546, 547, 548,
	621, 549, 622, 0, 550, 551, 552, 553, 0, 555,
	556, 0, 0, 557, 558, 559, 561, 562, 560, 563,
	0, 564, 0, 0, 565, 566, 567, 623, 624, 625,
	248, 569, 568, 570, 626, 0, 0, 0, 0, 571,
	572, 627, 573, 574, 575, 0, 0, 254, 255, 256,
	257, 258, 259, 0, 260, 261, 0, 0, 0, 0,
	0, 576, 0, 0, 0, 0, 262, 263, 0, 264,
	265, 266, 267, 268, 577, 578, 0, 269, 579, 270,
	580, 0, 581, 271, 272, 273, 274, 275, 276, 0,
	0, 0, 277, 582, 583, 584, 0, 278, 279, 585,
	0, 0, 0, 280, 281, 282, 283, 284, 285, 286,
	0, 0, 288, 289, 290, 287, 291, 0, 292, 0,
	293, 294, 295, 296, 297, 298, 0, 299, 300, 301,
	0, 302, 303, 0, 0, 0, 0, 0, 0, 0,
	304, 305, 2187, 307, 0, 308, 586, 587, 0, 312,
	309, 310, 0, 313, 311, 0, 314, 315, 316, 0,
	0, 317, 318, 319, 0, 320, 321, 0, 322, 323,
	324, 0, 325, 326, 588, 327, 328, 329, 331, 333,
	330, 334, 335, 336, 337, 589, 590, 0, 251, 0,
	0, 0, 0, 0, 338, 339, 340, 591, 0, 0,
	0, 341, 0, 342, 0, 0, 0, 343, 344, 592,
	593, 345, 346, 347, 348, 349, 350, 351, 352, 0,
	353, 594, 0, 595, 354, 0, 355, 356, 357, 358,
	359, 596, 597, 598, 433, 0, 360, 361, 0, 362,
	363, 364, 365, 0, 0, 0, 252, 366, 367, 369,
	0, 0, 368, 599, 600, 0, 601, 0, 370, 371,
	0, 602, 0, 372, 373, 374, 0, 375, 0, 0,
	0, 376, 377, 378, 379, 380, 381, 0, 382, 384,
	383, 0, 385, 603, 0, 386, 387, 0, 0, 388,
	0, 0, 0, 389, 390, 0, 0, 391, 392, 393,
	394, 0, 395, 396, 398, 400, 397, 399, 401, 414,
	402, 403, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 416, 0, 415, 0, 417, 418, 419, 424,
	426, 427, 422, 423, 425, 428, 429, 421, 0, 420,
	0, 253, 0, 430, 431, 0, 604, 432, 605, 434,
	435, 0, 0, 436, 0, 0, 0, 438, 439, 440,
	0, 0, 441, 442, 606, 0, 443, 0, 607, 444,
	445, 437, 446, 447, 448, 449, 450, 451, 452, 453,
	0, 454, 455, 608, 456, 457, 458, 609, 459, 460,
	461, 610, 462, 611, 463, 464, 0, 465, 0, 466,
	467, 468, 469, 470, 471, 472, 612, 473, 475, 474,
	476, 0, 477, 0, 0, 0, 0, 0, 478, 0,
	480, 481, 482, 479, 483, 484, 485, 486, 0, 487,
	488, 489, 0, 490, 491, 492, 493, 613, 494, 0,
	495, 496, 502, 503, 497, 498, 504, 505, 506, 507,
	508, 0, 510, 511, 509, 512, 513, 514, 0, 515,
	499, 500, 516, 517, 0, 518, 519, 520, 521, 522,
	523, 614, 0, 524, 0, 525, 526, 527, 528, 501,
	529, 534, 615, 530, 531, 532, 533, 616, 0, 536,
	537, 0, 535, 0, 538, 539, 540, 541, 542, 543,
	332, 544, 0, 545, 617, 618, 619, 620, 0, 554,
	0, 546, 547, 548, 621, 549, 622, 0, 550, 551,
	552, 553, 0, 555, 556, 0, 0, 557, 558, 559,
	561, 562, 560, 563, 0, 564, 0, 0, 565, 566,
	567, 623, 624, 625, 248, 569, 568, 570, 626, 0,
	0, 0, 0, 571, 572, 627, 573, 574, 575, 0,
	0, 254, 255, 256, 257, 258, 259, 0, 260, 261,
	0, 0, 0, 0, 0, 576, 0, 0, 0, 0,
	262, 263, 0, 264, 265, 266, 267, 268, 577, 578,
	0, 269, 579, 270, 580, 0, 581, 271, 272, 273,
	274, 275, 276, 0, 0, 0, 277, 582, 583, 584,
	0, 278, 279, 585, 0, 0, 0, 280, 281, 282,
	283, 284, 285, 286, 0, 0, 288, 289, 290, 287,
	291, 0, 292, 0, 293, 294, 295, 296, 297, 298,
	0, 299, 300, 301, 0, 302, 303, 0, 0, 0,
	0, 0, 0, 0, 304, 305, 2185, 307, 0, 308,
	586, 587, 0, 312, 309, 310, 0, 313, 311, 0,
	314, 315, 316, 0, 0, 317, 318, 319, 0, 320,
	321, 0, 322, 323, 324, 0, 325, 326, 588, 327,
	328, 329, 331, 333, 330, 334, 335, 336, 337, 589,
	590, 0, 251, 0, 0, 0, 0, 0, 338, 339,
	340, 591, 0, 0, 0, 341, 0, 342, 0, 0,
	0, 343, 344, 592, 593, 345, 346, 347, 348, 349,
	350, 351, 352, 0, 353, 594, 0, 595, 354, 0,
	355, 356, 357, 358, 359, 596, 597, 598, 433, 0,
	360, 361, 0, 362, 363, 364, 365, 0, 0, 0,
	252, 366, 367, 369, 0, 0, 368, 599, 600, 0,
	601, 0, 370, 371, 0, 602, 0, 372, 373, 374,
	0, 375, 0, 0, 0, 376, 377, 378, 379, 380,
	381, 0, 382, 384, 383, 0, 385, 603, 0, 386,
	387, 0, 0, 388, 0, 0, 0, 389, 390, 0,
	0, 391, 392, 393, 394, 0, 395, 396, 398, 400,
	397, 399, 401, 414, 402, 403, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 416, 0, 415, 0,
	417, 418, 419, 424, 426, 427, 422, 423, 425, 428,
	429, 421, 0, 420, 0, 253, 0, 430, 431, 0,
	604, 432, 605, 434, 435, 0, 0, 436, 0, 0,
	0, 438, 439, 440, 0, 0, 441, 442, 606, 0,
	443, 0, 607, 444, 445, 437, 446, 447, 448, 449,
	450, 451, 452, 453, 0, 454, 455, 608, 456, 457,
	458, 609, 459, 460, 461, 610, 462, 611, 463, 464,
	0, 465, 0, 466, 467, 468, 469, 470, 471, 472,
	612, 473, 475, 474, 476, 0, 477, 0, 0, 0,
	0, 0, 478, 0, 480, 481, 482, 479, 483, 484,
	485, 486, 0, 487, 488, 489, 0, 490, 491, 492,
	493, 613, 494, 0, 495, 496, 502, 503, 497, 498,
	504, 505, 506, 507, 508, 0, 510, 511, 509, 512,
	513, 514, 0, 515, 499, 500, 516, 517, 0, 518,
	519, 520, 521, 522, 523, 614, 0, 524, 0, 525,
	526, 527, 528, 501, 529, 534, 615, 530, 531, 532,
	533, 616, 0, 536, 537, 0, 535, 0, 538, 539,
	540, 541, 542, 543, 332, 544, 0, 545, 617, 618,
	619, 620, 0, 554, 0, 546, 547, 548, 621, 549,
	622, 0, 550, 551, 552, 553, 0, 555, 556, 0,
	0, 557, 558, 559, 561, 562, 560, 563, 0, 564,
	0, 0, 565, 566, 567, 623, 624, 625, 248, 569,
	568, 570, 626, 0, 0, 0, 0, 571, 572, 627,
	573, 574, 575, 0, 0, 254, 255, 256, 257, 258,
	259, 0, 260, 261, 0, 0, 0, 0, 0, 576,
	0, 0, 0, 0, 262, 263, 0, 264, 265, 266,
	267, 268, 577, 578, 0, 269, 579, 270, 580, 0,
	581, 271, 272, 273, 274, 275, 276, 0, 0, 0,
	277, 582, 583, 584, 0, 278, 279, 585, 0, 0,
	0, 280, 281, 282, 283, 284, 285, 286, 0, 0,
	288, 289, 290, 287, 291, 0, 292, 0, 293, 294,
	295, 296, 297, 298, 0, 299, 300, 301, 0, 302,
	303, 0, 0, 0, 0, 0, 0, 0, 304, 305,
	2183, 307, 0, 308, 586, 587, 0, 312, 309, 310,
	0, 313, 311, 0, 314, 315, 316, 0, 0, 317,
	318, 319, 0, 320, 321, 0, 322, 323, 324, 0,
	325, 326, 588, 327, 328, 329, 331, 333, 330, 334,
	335, 336, 337, 589, 590, 0, 251, 0, 0, 0,
	0, 0, 338, 339, 340, 591, 0, 0, 0, 341,
	0, 342, 0, 0, 0, 343, 344, 592, 593, 345,
	346, 347, 348, 349, 350, 351, 352, 0, 353, 594,
	0, 595, 354, 0, 355, 356, 357, 358, 359, 596,
	597, 598, 433, 0, 360, 361, 0, 362, 363, 364,
	365, 0, 0, 0, 252, 366, 367, 369, 0, 0,
	368, 599, 600, 0, 601, 0, 370, 371, 0, 602,
	0, 372, 373, 374, 0, 375, 0, 0, 0, 376,
	377, 378, 379, 380, 381, 0, 382, 384, 383, 0,
	385, 603, 0, 386, 387, 0, 0, 388, 0, 0,
	0, 389, 390, 0, 0, 391, 392, 393, 394, 0,
	395, 396, 398, 400, 397, 399, 401, 414, 402, 403,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	416, 0, 415, 0, 417, 418, 419, 424, 426, 427,
	422, 423, 425, 428, 429, 421, 0, 420, 0, 253,
	0, 430, 431, 0, 604, 432, 605, 434, 435, 0,
	0, 436, 0, 0, 0, 438, 439, 440, 0, 0,
	441, 442, 606, 0, 443, 0, 607, 444, 445, 437,
	446, 447, 448, 449, 450, 451, 452, 453, 0, 454,
	455, 608, 456, 457, 458, 609, 459, 460, 461, 610,
	462, 611, 463, 464, 0, 465, 0, 466, 467, 468,
	469, 470, 471, 472, 612, 473, 475, 474, 476, 0,
	477, 0, 0, 0, 0, 0, 478, 0, 480, 481,
	482, 479, 483, 484, 485, 486, 0, 487, 488, 489,
	0, 490, 491, 492, 493, 613, 494, 0, 495, 496,
	502, 503, 497, 498, 504, 505, 506, 507, 508, 0,
	510, 511, 509, 512, 513, 514, 0, 515, 499, 500,
	516, 517, 0, 518, 519, 520, 521, 522, 523, 614,
	0, 524, 0, 525, 526, 527, 528, 501, 529, 534,
	615, 530, 531, 532, 533, 616, 0, 536, 537, 0,
	535, 0, 538, 539, 540, 541, 542, 543, 332, 544,
	0, 545, 617, 618, 619, 620, 0, 554, 0, 546,
	547, 548, 621, 549, 622, 0, 550, 551, 552, 553,
	0, 555, 556, 0, 0, 557, 558, 559, 561, 562,
	560, 563, 0, 564, 0, 0, 565, 566, 567, 623,
	624, 625, 248, 569, 568, 570, 626, 0, 0, 0,
	0, 571, 572, 627, 573, 574, 575, 0, 0, 254,
	255, 256, 257, 258, 259, 0, 260, 261, 0, 0,
	0, 0, 0, 576, 0, 0, 0, 0, 262, 263,
	0, 264, 265, 266, 267, 268, 577, 578, 0, 269,
	579, 270, 580, 0, 581, 271, 272, 273, 274, 275,
	276, 0, 0, 0, 277, 582, 583, 584, 0, 278,
	279, 585, 0, 0, 0, 280, 281, 282, 283, 284,
	285, 286, 0, 0, 288, 289, 290, 287, 291, 0,
	292, 0, 293, 294, 295, 296, 297, 298, 0, 299,
	300, 301, 0, 302, 303, 0, 0, 0, 0, 0,
	0, 0, 304, 305, 306, 307, 0, 308, 586, 587,
	0, 312, 309, 310, 0, 313, 311, 0, 314, 315,
	316, 0, 0, 317, 318, 319, 0, 320, 321, 0,
	322, 323, 324, 0, 325, 326, 588, 327, 328, 329,
	331, 333, 330, 334, 335, 336, 337, 589, 590, 0,
	251, 0, 0, 0, 0, 0, 338, 339, 340, 591,
	0, 0, 0, 341, 0, 342, 0, 0, 0, 343,
	344, 592, 593, 345, 346, 347, 348, 349, 350, 351,
	352, 0, 353, 594, 0, 595, 354, 0, 355, 356,
	357, 358, 359, 2117, 597, 598, 433, 0, 360, 361,
	0, 362, 363, 364, 365, 0, 0, 0, 252, 366,
	367, 369, 0, 0, 368, 599, 600, 0, 601, 0,
	370, 371, 0, 602, 0, 372, 373, 374, 0, 375,
	0, 0, 0, 376, 377, 378, 379, 380, 381, 0,
	382, 384, 383, 0, 385, 603, 0, 386, 387, 0,
	0, 388, 0, 0, 0, 389, 390, 0, 0, 391,
	392, 393, 394, 0, 395, 396, 398, 400, 397, 399,
	401, 414, 402, 403, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 416, 0, 415, 0, 417, 418,
	419, 424, 426, 427, 422, 423, 425, 428, 429, 421,
	0, 420, 0, 253, 0, 430, 431, 0, 604, 432,
	605, 434, 435, 0, 0, 436, 0, 0, 0, 438,
	439, 440, 0, 0, 441, 442, 606, 0, 443, 0,
	607, 444, 445, 437, 446, 447, 448, 449, 450, 451,
	452, 453, 0, 454, 455, 608, 456, 457, 458, 609,
	459, 460, 461, 610, 462, 611, 463, 464, 0, 465,
	0, 466, 467, 468, 469, 470, 471, 472, 612, 473,
	475, 474, 476, 0, 477, 0, 0, 0, 0, 0,
	478, 0, 480, 481, 482, 479, 483, 484, 485, 486,
	0, 487, 488, 489, 0, 490, 491, 492, 493, 613,
	494, 0, 495, 496, 502, 503, 497, 498, 504, 505,
	506, 507, 508, 0, 510, 511, 509, 512, 513, 514,
	0, 515, 499, 500, 516, 517, 0, 518, 519, 520,
	521, 522, 523, 614, 0, 524, 0, 525, 526, 527,
	528, 501, 529, 534, 615, 530, 531, 532, 533, 616,
	0, 536, 537, 0, 535, 0, 538, 539, 540, 541,
	542, 543, 332, 544, 0, 545, 617, 618, 619, 620,
	0, 554, 0, 546, 547, 548, 621, 549, 622, 0,
	550, 551, 552, 553, 0, 555, 556, 0, 0, 557,
	558, 559, 561, 562, 560, 563, 0, 564, 0, 0,
	565, 566, 567, 623, 624, 625, 248, 569, 568, 570,
	626, 0, 0, 0, 0, 571, 572, 627, 573, 574,
	575, 0, 0, 254, 255, 256, 257, 258, 259, 0,
	260, 261, 0, 0, 0, 0, 0, 576, 0, 0,
	0, 0, 262, 263, 0, 264, 265, 266, 267, 268,
	577, 578, 0, 269, 579, 270, 580, 0, 581, 271,
	272, 273, 274, 275, 276, 0, 0, 0, 277, 582,
	583, 584, 0, 278, 279, 585, 0, 0, 0, 280,
	281, 282, 283, 284, 285, 286, 0, 0, 288, 289,
	290, 287, 291, 0, 292, 0, 293, 294, 295, 296,
	297, 298, 0, 299, 300, 301, 0, 302, 303, 0,
	0, 0, 0, 0, 0, 0, 304, 305, 306, 307,
	0, 308, 586, 587, 0, 312, 309, 310, 0, 313,
	311, 0, 314, 315, 316, 0, 0, 317, 318, 319,
	0, 320, 321, 0, 322, 323, 324, 0, 325, 326,
	588, 327, 328, 329, 331, 333, 330, 334, 335, 336,
	337, 589, 590, 0, 251, 0, 0, 0, 0, 0,
	338, 339, 340, 591, 0, 0, 0, 341, 0, 342,
	0, 0, 0, 343, 344, 592, 593, 345, 346, 347,
	348, 349, 350, 351, 352, 0, 353, 594, 0, 595,
	354, 0, 355, 356, 357, 358, 359, 2111, 597, 598,
	433, 0, 360, 361, 0, 362, 363, 364, 365, 0,
	0, 0, 252, 366, 367, 369, 0, 0, 368, 599,
	600, 0, 601, 0, 370, 371, 0, 602, 0, 372,
	373, 374, 0, 375, 0, 0, 0, 376, 377, 378,
	379, 380, 381, 0, 382, 384, 383, 0, 385, 603,
	0, 386, 387, 0, 0, 388, 0, 0, 0, 389,
	390, 0, 0, 391, 392, 393, 394, 0, 395, 396,
	398, 400, 397, 399, 401, 414, 402, 403, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 416, 0,
	415, 0, 417, 418, 419, 424, 426, 427, 422, 423,
	425, 428, 429, 421, 0, 420, 0, 253, 0, 430,
	431, 0, 604, 432, 605, 434, 435, 0, 0, 436,
	0, 0, 0, 438, 439, 440, 0, 0, 441, 442,
	606, 0, 443, 0, 607, 444, 445, 437, 446, 447,
	448, 449, 450, 451, 452, 453, 0, 454, 455, 608,
	456, 457, 458, 609, 459, 460, 461, 610, 462, 611,
	463, 464, 0, 465, 0, 466, 467, 468, 469, 470,
	471, 472, 612, 473, 475, 474, 476, 0, 477, 0,
	0, 0, 0, 0, 478, 0, 480, 481, 482, 479,
	483, 484, 485, 486, 0, 487, 488, 489, 0, 490,
	491, 492, 493, 613, 494, 0, 495, 496, 502, 503,
	497, 498, 504, 505, 506, 507, 508, 0, 510, 511,
	509, 512, 513, 514, 0, 515, 499, 500, 516, 517,
	0, 518, 519, 520, 521, 522, 523, 614, 0, 524,
	0, 525, 526, 527, 528, 501, 529, 534, 615, 530,
	531, 532, 533, 616, 0, 536, 537, 0, 535, 0,
	538, 539, 540, 541, 542, 543, 332, 544, 0, 545,
	617, 618, 619, 620, 0, 554, 0, 546, 547, 548,
	621, 549, 622, 0, 550, 551, 552, 553, 0, 555,
	556, 0, 0, 557, 558, 559, 561, 562, 560, 563,
	0, 564, 0, 0, 565, 566, 567, 623, 624, 625,
	248, 569, 568, 570, 626, 0, 0, 0, 0, 571,
	572, 627, 573, 574, 575, 0, 0, 254, 255, 256,
	257, 258, 259, 0, 260, 261, 0, 0, 0, 0,
	0, 576, 0, 0, 0, 0, 262, 263, 0, 264,
	265, 266, 267, 268, 577, 578, 0, 269, 579, 270,
	580, 0, 581, 271, 272, 273, 274, 275, 276, 0,
	0, 0, 277, 582, 583, 584, 0, 278, 279, 585,
	0, 0, 0, 280, 281, 282, 283, 284, 285, 286,
	0, 0, 288, 289, 290, 287, 291, 0, 292, 0,
	293, 294, 295, 296, 297, 298, 0, 299, 300, 301,
	0, 302, 303, 0, 0, 0, 0, 0, 0, 0,
	304, 305, 306, 307, 0, 308, 586, 587, 0, 312,
	309, 310, 0, 313, 311, 0, 314, 315, 316, 0,
	0, 317, 318, 319, 0, 320, 321, 0, 322, 323,
	324, 0, 325, 326, 588, 327, 328, 329, 331, 333,
	330, 334, 335, 336, 337, 589, 590, 0, 251, 0,
	0, 0, 0, 0, 338, 339, 340, 591, 0, 0,
	0, 341, 0, 342, 0, 0, 0, 343, 344, 592,
	593, 345, 346, 347, 348, 349, 350, 351, 352, 0,
	353, 594, 0, 595, 354, 0, 355, 356, 357, 358,
	359, 2080, 597, 598, 433, 0, 360, 361, 0, 362,
	363, 364, 365, 0, 0, 0, 252, 366, 367, 369,
	0, 0, 368, 599, 600, 0, 601, 0, 370, 371,
	0, 602, 0, 372, 373, 374, 0, 375, 0, 0,
	0, 376, 377, 378, 379, 380, 381, 0, 382, 384,
	383, 0, 385, 603, 0, 386, 387, 0, 0, 388,
	0, 0, 0, 389, 390, 0, 0, 391, 392, 393,
	394, 0, 395, 396, 398, 400, 397, 399, 401, 414,
	402, 403, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 416, 0, 415, 0, 417, 418, 419, 424,
	426, 427, 422, 423, 425, 428, 429, 421, 0, 420,
	0, 253, 0, 430, 431, 0, 604, 432, 605, 434,
	435, 0, 0, 436, 0, 0, 0, 438, 439, 440,
	0, 0, 441, 442, 606, 0, 443, 0, 607, 444,
	445, 437, 446, 447, 448, 449, 450, 451, 452, 453,
	0, 454, 455, 608, 456, 457, 458, 609, 459, 460,
	461, 610, 462, 611, 463, 464, 0, 465, 0, 466,
	467, 468, 469, 470, 471, 472, 612, 473, 475, 474,
	476, 0, 477, 0, 0, 0, 0, 0, 478, 0,
	480, 481, 482, 479, 483, 484, 485, 486, 0, 487,
	488, 489, 0, 490, 491, 492, 493, 613, 494, 0,
	495, 496, 502, 503, 497, 498, 504, 505, 506, 507,
	508, 0, 510, 511, 509, 512, 513, 514, 0, 515,
	499, 500, 516, 517, 0, 518, 519, 520, 521, 522,
	523, 614, 0, 524, 0, 525, 526, 527, 528, 501,
	529, 534, 615, 530, 531, 532, 533, 616, 0, 536,
	537, 0, 535, 0, 538, 539, 540, 541, 542, 543,
	332, 544, 0, 545, 617, 618, 619, 620, 0, 554,
	0, 546, 547, 548, 621, 549, 622, 0, 550, 551,
	552, 553, 0, 555, 556, 0, 0, 557, 558, 559,
	561, 562, 560, 563, 0, 564, 0, 0, 565, 566,
	567, 623, 624, 625, 0, 569, 568, 570, 626, 818,
	0, 248, 0, 571, 572, 627, 573, 574, 575, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 254, 255,
	256, 257, 258, 259, 0, 260, 261, 0, 0, 0,
	0, 0, 576, 0, 0, 0, 0, 262, 263, 0,
	264, 265, 266, 267, 268, 577, 578, 0, 269, 579,
	270, 580, 0, 581, 271, 272, 273, 274, 275, 276,
	0, 0, 0, 277, 582, 583, 584, 0, 278, 279,
	585, 0, 0, 0, 280, 281, 282, 283, 284, 285,
	286, 0, 0, 288, 289, 290, 287, 291, 0, 292,
	0, 293, 294, 295, 296, 297, 298, 0, 299, 300,
	301, 0, 302, 303, 0, 0, 0, 0, 0, 0,
	0, 304, 305, 306, 307, 0, 308, 586, 587, 0,
	312, 309, 310, 0, 313, 311, 0, 314, 315, 316,
	0, 0, 317, 318, 319, 0, 320, 321, 0, 322,
	323, 324, 0, 325, 326, 588, 327, 328, 329, 331,
	333, 330, 334, 335, 336, 337, 589, 590, 0, 0,
	0, 0, 0, 0, 0, 338, 339, 340, 591, 0,
	0, 0, 341, 0, 342, 0, 0, 0, 343, 344,
	592, 593, 345, 346, 347, 348, 349, 350, 351, 352,
	0, 353, 594, 0, 595, 354, 0, 355, 356, 357,
	358, 359, 596, 597, 598, 433, 0, 360, 361, 0,
	362, 363, 364, 365, 0, 0, 0, 0, 366, 367,
	369, 0, 0, 368, 599, 600, 0, 601, 817, 370,
	371, 0, 602, 0, 372, 373, 374, 0, 375, 0,
	0, 0, 376, 377, 378, 379, 380, 381, 0, 382,
	384, 383, 0, 385, 603, 0, 386, 387, 0, 0,
	388, 0, 0, 0, 389, 390, 0, 0, 391, 392,
	393, 394, 0, 395, 396, 398, 400, 397, 399, 401,
	414, 402, 403, 404, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 416, 0, 415, 0, 417, 418, 419,
	424, 426, 427, 422, 423, 425, 428, 429, 421, 0,
	420, 0, 0, 0, 430, 431, 0, 604, 432, 605,
	434, 435, 0, 0, 436, 0, 0, 0, 438, 439,
	440, 0, 0, 441, 442, 606, 0, 443, 0, 607,
	444, 445, 437, 446, 447, 448, 449, 450, 451, 452,
	453, 0, 454, 455, 608, 456, 457, 458, 609, 459,
	460, 461, 610, 462, 611, 463, 464, 0, 465, 0,
	466, 467, 468, 469, 470, 471, 472, 612, 473, 475,
	474, 476, 0, 477, 0, 0, 0, 0, 0, 478,
	0, 480, 481, 482, 479, 483, 484, 485, 486, 0,
	487, 488, 489, 0, 490, 491, 492, 493, 613, 494,
	0, 495, 496, 502, 503, 497, 498, 504, 505, 506,
	507, 508, 0, 510, 511, 509, 512, 513, 514, 0,
	515, 499, 500, 516, 517, 0, 518, 519, 520, 521,
	522, 523, 614, 0, 524, 0, 525, 526, 527, 528,
	501, 529, 534, 615, 530, 531, 532, 533, 616, 0,
	536, 537, 0, 535, 816, 538, 539, 540, 541, 542,
	543, 332, 544, 0, 545, 617, 618, 619, 620, 0,
	554, 0, 546, 547, 548, 621, 549, 622, 0, 550,
	551, 552, 553, 0, 555, 556, 0, 0, 557, 558,
	559, 561, 562, 560, 563, 0, 564, 0, 0, 565,
	566, 567, 623, 624, 625, 248, 569, 568, 570, 626,
	0, 0, 0, 0, 571, 572, 627, 573, 574, 575,
	0, 0, 254, 255, 256, 257, 258, 259, 0, 260,
	261, 0, 0, 0, 0, 0, 576, 0, 0, 0,
	0, 262, 263, 0, 264, 265, 266, 267, 268, 577,
	578, 0, 269, 579, 270, 580, 0, 581, 271, 272,
	273, 274, 275, 276, 0, 0, 0, 277, 582, 583,
	584, 0, 278, 279, 585, 0, 0, 0, 280, 281,
	282, 283, 284, 285, 286, 0, 0, 288, 289, 290,
	287, 291, 0, 292, 0, 293, 294, 295, 296, 297,
	298, 0, 299, 300, 301, 0, 302, 303, 0, 0,
	0, 0, 0, 0, 0, 304, 305, 306, 307, 0,
	308, 586, 587, 0, 312, 309, 310, 0, 313, 311,
	0, 314, 315, 316, 0, 0, 317, 318, 319, 0,
	320, 321, 0, 322, 323, 324, 0, 325, 326, 588,
	327, 328, 329, 331, 333, 330, 334, 335, 336, 337,
	589, 590, 0, 2812, 0, 0, 0, 0, 0, 338,
	339, 340, 591, 0, 0, 0, 341, 0, 342, 0,
	0, 0, 343, 344, 592, 593, 345, 346, 347, 348,
	349, 350, 351, 352, 0, 353, 594, 0, 595, 354,
	0, 355, 356, 357, 358, 359, 596, 597, 598, 433,
	0, 360, 361, 0, 362, 363, 364, 365, 0, 0,
	0, 0, 366, 367, 369, 0, 0, 368, 599, 600,
	0, 601, 0, 370, 371, 0, 602, 0, 372, 373,
	374, 0, 375, 0, 0, 0, 376, 377, 378, 379,
	380, 381, 0, 382, 384, 383, 0, 385, 603, 0,
	386, 387, 0, 0, 388, 0, 0, 0, 389, 390,
	0, 0, 391, 392, 393, 394, 0, 395, 396, 398,
	400, 397, 399, 401, 414, 402, 403, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 416, 0, 415,
	0, 417, 418, 419, 424, 426, 427, 422, 423, 425,
	428, 429, 421, 0, 420, 0, 0, 0, 430, 431,
	0, 604, 432, 605, 434, 435, 0, 0, 436, 0,
	0, 0, 438, 439, 440, 0, 0, 441, 442, 606,
	0, 443, 0, 607, 444, 445, 437, 446, 447, 448,
	449, 450, 451, 452, 453, 0, 454, 455, 608, 456,
	457, 458, 609, 459, 460, 461, 610, 462, 611, 463,
	464, 3848, 465, 0, 466, 467, 468, 469, 470, 471,
	472, 612, 473, 475, 474, 476, 0, 477, 0, 0,
	0, 0, 0, 478, 0, 480, 481, 482, 479, 483,
	484, 485, 486, 0, 487, 488, 489, 0, 490, 491,
	492, 493, 613, 494, 0, 495, 496, 502, 503, 497,
	498, 504, 505, 506, 507, 508, 0, 510, 511, 509,
	512, 513, 514, 0, 515, 499, 500, 516, 517, 0,
	518, 519, 520, 521, 522, 523, 614, 0, 524, 0,
	525, 526, 527, 528, 501, 529, 534, 615, 530, 531,
	532, 533, 616, 0, 536, 537, 0, 535, 0, 538,
	539, 540, 541, 542, 543, 332, 544, 0, 545, 617,
	618, 619, 620, 0, 554, 0, 546, 547, 548, 621,
	549, 622, 0, 550, 551, 552, 553, 0, 555, 556,
	0, 0, 557, 558, 559, 561, 562, 560, 563, 0,
	564, 0, 0, 565, 566, 567, 623, 624, 625, 0,
	569, 568, 570, 626, 682, 0, 248, 0, 571, 572,
	627, 573, 574, 575, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 254, 255, 256, 257, 258, 259, 0,
	260, 261, 0, 0, 0, 0, 0, 576, 0, 0,
	0, 0, 262, 263, 1194, 264, 265, 266, 267, 268,
	577, 578, 0, 269, 579, 270, 580, 0, 581, 271,
	272, 273, 274, 275, 276, 0, 0, 0, 277, 582,
	583, 1192, 0, 278, 279, 585, 0, 0, 0, 280,
	281, 282, 283, 284, 285, 286, 0, 0, 288, 289,
	290, 287, 291, 0, 292, 0, 293, 294, 295, 296,
	297, 298, 0, 299, 300, 301, 0, 302, 303, 0,
	0, 0, 0, 0, 0, 0, 304, 305, 306, 307,
	0, 308, 586, 587, 0, 312, 309, 310, 0, 313,
	311, 0, 314, 315, 316, 0, 0, 317, 318, 319,
	0, 320, 321, 0, 322, 323, 324, 0, 325, 326,
	588, 327, 328, 329, 331, 333, 330, 334, 335, 336,
	337, 589, 590, 0, 0, 0, 0, 0, 0, 0,
	338, 339, 340, 591, 0, 0, 0, 341, 0, 342,
	0, 0, 0, 343, 344, 592, 593, 345, 346, 347,
	348, 349, 350, 351, 352, 0, 353, 594, 0, 595,
	354, 0, 355, 356, 357, 358, 359, 596, 597, 598,
	433, 0, 360, 361, 0, 362, 363, 364, 365, 0,
	0, 0, 0, 366, 367, 369, 0, 0, 368, 599,
	600, 0, 601, 0, 370, 371, 0, 602, 0, 372,
	373, 374, 0, 375, 0, 0, 0, 376, 377, 378,
	379, 380, 381, 0, 382, 384, 383, 0, 385, 603,
	0, 386, 387, 0, 0, 388, 0, 0, 0, 389,
	390, 0, 0, 391, 392, 393, 394, 0, 395, 396,
	398, 400, 397, 399, 401, 414, 402, 403, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 416, 0,
	683, 0, 417, 418, 419, 424, 426, 427, 422, 423,
	425, 428, 429, 421, 0, 420, 0, 0, 0, 430,
	431, 0, 604, 432, 605, 434, 435, 0, 0, 436,
	0, 0, 0, 438, 439, 440, 0, 0, 441, 442,
	606, 0, 443, 0, 607, 444, 445, 437, 446, 447,
	448, 449, 450, 451, 452, 453, 0, 454, 455, 608,
	456, 457, 458, 609, 459, 460, 461, 610, 462, 611,
	463, 464, 0, 465, 0, 466, 467, 468, 469, 470,
	471, 472, 612, 473, 475, 474, 476, 0, 477, 0,
	0, 0, 0, 0, 478, 0, 480, 481, 482, 479,
	483, 484, 485, 486, 0, 487, 488, 489, 0, 490,
	491, 492, 493, 613, 494, 0, 495, 496, 502, 503,
	497, 498, 679, 505, 506, 507, 508, 0, 510, 511,
	509, 512, 1195, 514, 0, 515, 499, 500, 516, 517,
	0, 518, 519, 520, 521, 522, 523, 614, 0, 524,
	0, 525, 526, 527, 528, 501, 529, 534, 615, 530,
	531, 532, 533, 616, 0, 536, 537, 0, 535, 0,
	538, 539, 540, 541, 542, 543, 332, 544, 0, 545,
	678, 618, 619, 620, 0, 554, 0, 546, 547, 548,
	621, 549, 622, 0, 550, 551, 552, 553, 0, 555,
	556, 0, 0, 557, 558, 559, 561, 562, 560, 563,
	0, 564, 0, 0, 565, 566, 567, 623, 624, 625,
	0, 569, 568, 570, 626, 682, 0, 248, 0, 571,
	572, 627, 573, 574, 575, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 254, 255, 256, 257, 258, 259,
	0, 260, 261, 0, 0, 0, 0, 0, 576, 0,
	0, 0, 0, 262, 263, 1194, 264, 265, 266, 267,
	268, 577, 578, 0, 269, 579, 270, 580, 0, 581,
	271, 272, 273, 274, 275, 276, 0, 0, 0, 277,
	582, 583, 1192, 0, 278, 279, 585, 0, 0, 0,
	280, 281, 282, 283, 284, 285, 286, 0, 0, 288,
	289, 290, 287, 291, 0, 292, 0, 293, 294, 295,
	296, 297, 298, 0, 299, 300, 301, 0, 302, 303,
	0, 0, 0, 0, 0, 0, 0, 304, 305, 306,
	307, 0, 308, 586, 587, 0, 312, 309, 310, 0,
	313, 311, 0, 314, 315, 316, 0, 0, 317, 318,
	319, 0, 320, 321, 0, 322, 323, 324, 0, 325,
	326, 588, 327, 328, 329, 331, 333, 330, 334, 335,
	336, 337, 589, 590, 0, 0, 0, 0, 0, 0,
	0, 338, 339, 340, 591, 0, 0, 0, 341, 0,
	342, 0, 0, 0, 343, 344, 592, 593, 345, 346,
	347, 348, 349, 350, 351, 352, 0, 353, 594, 0,
	595, 354, 0, 355, 356, 357, 358, 359, 596, 597,
	598, 433, 0, 360, 361, 0, 362, 363, 364, 365,
	0, 0, 0, 0, 366, 367, 369, 0, 0, 368,
	599, 600, 0, 601, 0, 370, 371, 0, 602, 0,
	372, 373, 374, 0, 375, 0, 0, 0, 376, 377,
	378, 379, 380, 381, 0, 382, 384, 383, 0, 385,
	603, 0, 386, 387, 0, 0, 388, 0, 0, 0,
	389, 390, 0, 0, 391, 392, 393, 394, 0, 395,
	396, 398, 400, 397, 399, 401, 414, 402, 403, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 416,
	0, 683, 0, 417, 418, 419, 424, 426, 427, 422,
	423, 425, 428, 429, 421, 0, 420, 0, 0, 0,
	430, 431, 0, 604, 432, 605, 434, 435, 0, 0,
	436, 0, 0, 0, 438, 439, 440, 0, 0, 441,
	442, 606, 0, 443, 0, 607, 444, 445, 437, 446,
	447, 448, 449, 450, 451, 452, 453, 0, 454, 455,
	608, 456, 457, 458, 609, 459, 460, 461, 610, 462,
	611, 463, 464, 0, 465, 0, 466, 467, 468, 469,
	470, 471, 472, 612, 473, 475, 474, 476, 0, 477,
	0, 0, 0, 0, 0, 478, 0, 480, 481, 482,
	479, 483, 484, 485, 486, 0, 487, 488, 489, 0,
	490, 491, 492, 493, 613, 494, 0, 495, 496, 502,
	503, 497, 498, 679, 505, 506, 507, 508, 0, 510,
	511, 509, 512, 1195, 514, 0, 515, 499, 500, 516,
	517, 0, 518, 519, 520, 521, 522, 523, 614, 0,
	524, 0, 525, 526, 527, 528, 501, 529, 534, 615,
	530, 531, 532, 533, 616, 0, 536, 537, 0, 535,
	0, 538, 539, 540, 541, 542, 543, 332, 544, 0,
	545, 678, 618, 619, 620, 0, 554, 0, 546, 1193,
	548, 621, 549, 622, 0, 550, 551, 552, 553, 0,
	555, 556, 0, 0, 557, 558, 559, 561, 562, 560,
	563, 0, 564, 0, 0, 565, 566, 567, 623, 624,
	625, 0, 569, 568, 570, 626, 638, 0, 248, 0,
	571, 572, 627, 573, 574, 575, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 254, 255, 256, 257, 258,
	259, 637, 260, 261, 0, 0, 0, 0, 0, 576,
	0, 0, 0, 0, 262, 263, 0, 264, 265, 266,
	267, 268, 577, 578, 0, 269, 579, 270, 580, 0,
	581, 271, 272, 273, 274, 275, 276, 0, 0, 0,
	277, 582, 583, 584, 0, 278, 279, 585, 0, 0,
	0, 280, 281, 282, 283, 284, 285, 286, 0, 0,
	288, 289, 290, 287, 291, 0, 292, 0, 293, 294,
	295, 296, 297, 298, 0, 299, 300, 301, 0, 302,
	303, 0, 0, 0, 0, 0, 0, 0, 304, 305,
	306, 307, 0, 308, 586, 587, 0, 312, 309, 310,
	0, 313, 311, 0, 314, 315, 316, 0, 0, 317,
	318, 319, 0, 320, 321, 0, 322, 323, 324, 0,
	325, 326, 588, 327, 328, 329, 331, 333, 330, 334,
	335, 336, 337, 589, 590, 0, 0, 0, 0, 0,
	0, 0, 338, 339, 340, 591, 0, 0, 0, 341,
	0, 342, 0, 0, 0, 343, 344, 592, 593, 345,
	346, 347, 348, 349, 350, 351, 352, 0, 353, 594,
	0, 595, 354, 0, 355, 356, 357, 358, 359, 596,
	597, 598, 433, 0, 360, 361, 0, 362, 363, 364,
	365, 0, 0, 0, 0, 366, 367, 369, 0, 0,
	368, 599, 600, 0, 601, 0, 370, 371, 0, 602,
	0, 372, 373, 374, 0, 375, 0, 0, 0, 376,
	377, 378, 379, 380, 381, 0, 382, 384, 383, 0,
	385, 603, 0, 386, 387, 0, 0, 388, 0, 0,
	0, 389, 390, 0, 0, 391, 392, 393, 394, 0,
	395, 396, 398, 400, 397, 399, 401, 414, 402, 403,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	416, 0, 415, 0, 417, 418, 419, 424, 426, 427,
	422, 423, 425, 428, 429, 421, 0, 420, 0, 0,
	0, 430, 431, 0, 604, 432, 605, 434, 435, 0,
	0, 436, 0, 0, 0, 438, 439, 440, 0, 0,
	441, 442, 606, 0, 443, 0, 607, 444, 445, 437,
	446, 447, 448, 449, 450, 451, 452, 453, 0, 454,
	455, 608, 456, 457, 458, 609, 459, 460, 461, 610,
	462, 611, 636, 464, 0, 465, 0, 466, 467, 468,
	469, 470, 471, 472, 612, 473, 475, 474, 476, 0,
	477, 0, 0, 0, 0, 0, 478, 0, 480, 481,
	482, 479, 483, 484, 485, 486, 0, 487, 488, 489,
	0, 490, 491, 492, 493, 613, 494, 0, 495, 496,
	502, 503, 497, 498, 504, 505, 506, 507, 508, 0,
	510, 511, 509, 512, 513, 514, 0, 515, 499, 500,
	516, 517, 0, 518, 519, 520, 521, 522, 523, 614,
	0, 524, 0, 525, 526, 527, 528, 501, 529, 534,
	615, 530, 531, 532, 533, 616, 0, 536, 537, 0,
	535, 0, 538, 539, 540, 541, 542, 543, 332, 544,
	0, 545, 617, 618, 619, 620, 0, 554, 0, 546,
	547, 548, 621, 549, 622, 0, 550, 551, 552, 553,
	0, 555, 556, 0, 0, 557, 558, 559, 561, 562,
	560, 563, 0, 564, 0, 0, 565, 566, 567, 623,
	624, 625, 0, 569, 568, 570, 626, 248, 2799, 0,
	0, 571, 572, 627, 573, 574, 575, 0, 0, 0,
	0, 0, 0, 0, 254, 255, 256, 257, 258, 259,
	0, 260, 261, 0, 0, 0, 0, 0, 576, 0,
	0, 0, 0, 262, 263, 0, 264, 265, 266, 267,
	268, 577, 578, 0, 269, 579, 270, 580, 0, 581,
	271, 272, 273, 274, 275, 276, 0, 0, 0, 277,
	582, 583, 584, 0, 278, 279, 585, 0, 0, 0,
	280, 281, 282, 283, 284, 285, 286, 0, 0, 288,
	289, 290, 287, 291, 0, 292, 0, 293, 294, 295,
	296, 297, 298, 0, 299, 300, 301, 0, 302, 303,
	0, 0, 0, 0, 0, 0, 0, 304, 305, 306,
	307, 0, 308, 586, 587, 0, 312, 309, 310, 0,
	313, 311, 0, 314, 315, 316, 0, 0, 317, 318,
	319, 0, 320, 321, 0, 322, 323, 324, 0, 325,
	326, 588, 327, 328, 329, 331, 333, 330, 334, 335,
	336, 337, 589, 590, 0, 0, 0, 0, 0, 0,
	0, 338, 339, 340, 591, 0, 0, 0, 341, 0,
	342, 0, 0, 0, 343, 344, 592, 593, 345, 346,
	347, 348, 349, 350, 351, 352, 0, 353, 594, 0,
	595, 354, 0, 355, 356, 357, 358, 359, 596, 597,
	598, 433, 0, 360, 361, 0, 362, 363, 364, 365,
	0, 0, 0, 0, 366, 367, 369, 0, 0, 368,
	599, 600, 0, 601, 0, 370, 371, 0, 602, 0,
	372, 373, 374, 0, 375, 0, 0, 0, 376, 377,
	378, 379, 380, 381, 0, 382, 384, 383, 0, 385,
	603, 0, 386, 387, 0, 0, 388, 0, 0, 0,
	389, 390, 0, 0, 391, 392, 393, 394, 0, 395,
	396, 398, 400, 397, 399, 401, 414, 402, 403, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 416,
	0, 415, 0, 417, 418, 419, 424, 426, 427, 422,
	423, 425, 428, 429, 421, 0, 420, 0, 0, 0,
	430, 431, 0, 604, 432, 605, 434, 435, 0, 0,
	436, 0, 0, 0, 438, 439, 440, 0, 0, 441,
	442, 606, 0, 443, 0, 607, 444, 445, 437, 446,
	447, 448, 449, 450, 451, 452, 453, 0, 454, 455,
	608, 456, 457, 458, 609, 459, 460, 461, 610, 462,
	611, 463, 464, 0, 465, 0, 466, 467, 468, 469,
	470, 471, 472, 612, 473, 475, 474, 476, 0, 477,
	0, 0, 0, 0, 0, 478, 0, 480, 481, 482,
	479, 483, 484, 485, 486, 0, 487, 488, 489, 0,
	490, 491, 492, 493, 613, 494, 0, 495, 496, 502,
	503, 497, 498, 504, 505, 506, 507, 508, 0, 510,
	511, 509, 512, 513, 514, 0, 515, 499, 500, 516,
	517, 0, 518, 519, 520, 521, 522, 523, 614, 0,
	524, 0, 525, 526, 527, 528, 501, 529, 534, 615,
	530, 531, 532, 533, 616, 0, 536, 537, 0, 535,
	0, 538, 539, 540, 541, 542, 543, 332, 544, 0,
	545, 617, 618, 619, 620, 0, 554, 0, 546, 547,
	548, 621, 549, 622, 0, 550, 551, 552, 553, 0,
	555, 556, 0, 0, 557, 558, 559, 561, 562, 560,
	563, 0, 564, 0, 0, 565, 566, 567, 623, 624,
	625, 0, 569, 568, 570, 626, 248, 3858, 0, 0,
	571, 572, 627, 573, 574, 575, 0, 0, 0, 0,
	0, 0, 0, 254, 255, 256, 257, 258, 259, 0,
	260, 261, 0, 0, 0, 0, 0, 576, 0, 0,
	0, 0, 262, 263, 0, 264, 265, 266, 267, 268,
	577, 578, 0, 269, 579, 270, 580, 0, 581, 271,
	272, 273, 274, 275, 276, 0, 0, 0, 277, 582,
	583, 584, 0, 278, 279, 585, 0, 0, 0, 280,
	281, 282, 283, 284, 285, 286, 0, 0, 288, 289,
	290, 287, 291, 0, 292, 0, 293, 294, 295, 296,
	297, 298, 0, 299, 300, 301, 0, 302, 303, 0,
	0, 0, 0, 0, 0, 0, 304, 305, 306, 307,
	0, 308, 586, 587, 0, 312, 309, 310, 0, 313,
	311, 0, 314, 315, 316, 0, 0, 317, 318, 319,
	0, 320, 321, 0, 322, 323, 324, 0, 325, 326,
	588, 327, 328, 329, 331, 333, 330, 334, 335, 336,
	337, 589, 590, 0, 0, 0, 0, 0, 0, 0,
	338, 339, 340, 591, 0, 0, 0, 341, 0, 342,
	0, 0, 0, 343, 344, 592, 593, 345, 346, 347,
	348, 349, 350, 351, 352, 0, 353, 594, 0, 595,
	354, 0, 355, 356, 357, 358, 359, 596, 597, 598,
	433, 0, 360, 361, 0, 362, 363, 364, 365, 0,
	0, 0, 0, 366, 367, 369, 0, 0, 368, 599,
	600, 0, 601, 0, 370, 371, 0, 602, 0, 372,
	373, 374, 0, 375, 0, 0, 0, 376, 377, 378,
	379, 380, 381, 0, 382, 384, 383, 0, 385, 603,
	0, 386, 387, 0, 0, 388, 0, 0, 0, 389,
	390, 0, 0, 391, 392, 393, 394, 0, 395, 396,
	398, 400, 397, 399, 401, 414, 402, 403, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 416, 0,
	415, 0, 417, 418, 419, 424, 426, 427, 422, 423,
	425, 428, 429, 421, 0, 420, 0, 0, 0, 430,
	431, 0, 604, 432, 605, 434, 435, 0, 0, 436,
	0, 0, 0, 438, 439, 440, 0, 0, 441, 442,
	606, 0, 443, 0, 607, 444, 445, 437, 446, 447,
	448, 449, 450, 451, 452, 453, 0, 454, 455, 608,
	456, 457, 458, 609, 459, 460, 461, 610, 462, 611,
	463, 464, 0, 465, 0, 466, 467, 468, 469, 470,
	471, 472, 612, 473, 475, 474, 476, 0, 477, 0,
	0, 0, 0, 0, 478, 0, 480, 481, 482, 479,
	483, 484, 485, 486, 0, 487, 488, 489, 0, 490,
	491, 492, 493, 613, 494, 0, 495, 496, 502, 503,
	497, 498, 504, 505, 506, 507, 508, 0, 510, 511,
	509, 512, 513, 514, 0, 515, 499, 500, 516, 517,
	0, 518, 519, 520, 521, 522, 523, 614, 0, 524,
	0, 525, 526, 527, 528, 501, 529, 534, 615, 530,
	531, 532, 533, 616, 0, 536, 537, 0, 535, 0,
	538, 539, 540, 541, 542, 543, 332, 544, 0, 545,
	617, 618, 619, 620, 0, 554, 0, 546, 547, 548,
	621, 549, 622, 0, 550, 551, 552, 553, 0, 555,
	556, 0, 0, 557, 558, 559, 561, 562, 560, 563,
	0, 564, 0, 0, 565, 566, 567, 623, 624, 625,
	248, 569, 568, 570, 626, 0, 0, 0, 0, 571,
	572, 627, 573, 574, 575, 0, 0, 254, 255, 256,
	257, 258, 259, 0, 260, 261, 0, 0, 0, 0,
	0, 576, 0, 0, 0, 0, 262, 263, 0, 264,
	265, 266, 267, 268, 577, 578, 0, 269, 579, 270,
	580, 0, 581, 271, 272, 273, 274, 275, 276, 0,
	0, 0, 277, 582, 583, 584, 0, 278, 279, 585,
	0, 0, 0, 280, 281, 282, 283, 284, 285, 286,
	0, 0, 288, 289, 290, 287, 291, 0, 292, 0,
	293, 294, 295, 296, 297, 298, 0, 299, 300, 301,
	0, 302, 303, 0, 0, 0, 0, 0, 0, 0,
	304, 305, 306, 307, 0, 308, 586, 587, 3563, 312,
	309, 310, 0, 313, 311, 0, 314, 315, 316, 0,
	0, 317, 318, 319, 0, 320, 321, 0, 322, 323,
	324, 0, 325, 326, 588, 327, 328, 329, 331, 333,
	330, 334, 335, 336, 337, 589, 590, 0, 0, 0,
	0, 0, 0, 0, 338, 339, 340, 591, 0, 0,
	0, 341, 0, 342, 0, 0, 0, 343, 344, 592,
	593, 345, 346, 347, 348, 349, 350, 351, 352, 0,
	353, 594, 0, 595, 354, 0, 355, 356, 357, 358,
	359, 596, 597, 598, 433, 0, 360, 361, 0, 362,
	363, 364, 365, 0, 0, 0, 0, 366, 367, 369,
	0, 0, 368, 599, 600, 0, 601, 0, 370, 371,
	0, 602, 0, 372, 373, 374, 0, 375, 0, 0,
	0, 376, 377, 378, 379, 380, 381, 0, 382, 384,
	383, 0, 385, 603, 0, 386, 387, 0, 0, 388,
	0, 0, 0, 389, 390, 0, 0, 391, 392, 393,
	394, 0, 395, 396, 398, 400, 397, 399, 401, 414,
	402, 403, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 416, 0, 415, 0, 417, 418, 419, 424,
	426, 427, 422, 423, 425, 428, 429, 421, 0, 420,
	0, 0, 0, 430, 431, 0, 604, 432, 605, 434,
	435, 0, 0, 436, 0, 0, 0, 438, 439, 440,
	0, 0, 441, 442, 606, 0, 443, 0, 607, 444,
	445, 437, 446, 447, 448, 449, 450, 451, 452, 453,
	0, 454, 455, 608, 456, 457, 458, 609, 459, 460,
	461, 610, 462, 611, 463, 464, 0, 465, 0, 466,
	467, 468, 469, 470, 471, 472, 612, 473, 475, 474,
	476, 0, 477, 0, 0, 0, 0, 0, 478, 0,
	480, 481, 482, 479, 483, 484, 485, 486, 0, 487,
	488, 489, 0, 490, 491, 492, 493, 613, 494, 0,
	495, 496, 502, 503, 497, 498, 504, 505, 506, 507,
	508, 0, 510, 511, 509, 512, 513, 514, 0, 515,
	499, 500, 516, 517, 0, 518, 519, 520, 521, 522,
	523, 614, 0, 524, 0, 525, 526, 527, 528, 501,
	529, 534, 615, 530, 531, 532, 533, 616, 0, 536,
	537, 0, 535, 0, 538, 539, 540, 541, 542, 543,
	332, 544, 0, 545, 617, 618, 619, 620, 0, 554,
	0, 546, 547, 548, 621, 549, 622, 0, 550, 551,
	552, 553, 0, 555, 556, 0, 0, 557, 558, 559,
	561, 562, 560, 563, 0, 564, 0, 0, 565, 566,
	567, 623, 624, 625, 248, 569, 568, 570, 626, 0,
	0, 0, 0, 571, 572, 627, 573, 574, 575, 0,
	0, 254, 255, 256, 257, 258, 259, 0, 260, 261,
	0, 0, 0, 0, 0, 576, 0, 2517, 0, 0,
	262, 263, 0, 264, 265, 266, 267, 268, 577, 578,
	0, 269, 579, 270, 580, 0, 581, 271, 272, 273,
	274, 275, 276, 0, 0, 0, 277, 582, 583, 584,
	0, 278, 279, 585, 0, 0, 0, 280, 281, 282,
	283, 284, 285, 286, 0, 0, 288, 289, 290, 287,
	291, 0, 292, 0, 293, 294, 295, 296, 297, 298,
	0, 299, 300, 301, 0, 302, 303, 0, 0, 0,
	0, 0, 0, 0, 304, 305, 306, 307, 0, 308,
	586, 587, 0, 312, 309, 310, 0, 313, 311, 0,
	314, 315, 316, 0, 0, 317, 318, 319, 0, 320,
	321, 0, 322, 323, 324, 0, 325, 326, 588, 327,
	328, 329, 331, 333, 330, 334, 335, 336, 337, 589,
	590, 0, 0, 0, 0, 0, 0, 0, 338, 339,
	340, 591, 0, 0, 0, 341, 0, 342, 0, 0,
	0, 343, 344, 592, 593, 345, 346, 347, 348, 349,
	350, 351, 352, 0, 353, 594, 0, 595, 354, 0,
	355, 356, 357, 358, 359, 596, 597, 598, 433, 0,
	360, 361, 0, 362, 363, 364, 365, 0, 0, 0,
	0, 366, 367, 369, 0, 0, 368, 599, 600, 0,
	601, 0, 370, 371, 0, 602, 0, 372, 373, 374,
	0, 375, 0, 0, 0, 376, 377, 378, 379, 380,
	381, 0, 382, 384, 383, 0, 385, 603, 0, 386,
	387, 0, 0, 388, 0, 0, 0, 389, 390, 0,
	0, 391, 392, 393, 394, 0, 395, 396, 398, 400,
	397, 399, 401, 414, 402, 403, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 416, 0, 415, 0,
	417, 418, 419, 424, 426, 427, 422, 423, 425, 428,
	429, 421, 0, 420, 0, 0, 0, 430, 431, 0,
	604, 432, 605, 434, 435, 0, 0, 436, 0, 0,
	0, 438, 439, 440, 0, 0, 441, 442, 606, 0,
	443, 0, 607, 444, 445, 437, 446, 447, 448, 449,
	450, 451, 452, 453, 0, 454, 455, 608, 456, 457,
	458, 609, 459, 460, 461, 610, 462, 611, 463, 464,
	0, 465, 0, 466, 467, 468, 469, 470, 471, 472,
	612, 473, 475, 474, 476, 0, 477, 0, 0, 0,
	0, 0, 478, 0, 480, 481, 482, 479, 483, 484,
	485, 486, 0, 487, 488, 489, 0, 490, 491, 492,
	493, 613, 494, 0, 495, 496, 502, 503, 497, 498,
	504, 505, 506, 507, 508, 0, 510, 511, 509, 512,
	513, 514, 0, 515, 499, 500, 516, 517, 0, 518,
	519, 520, 521, 522, 523, 614, 0, 524, 0, 525,
	526, 527, 528, 501, 529, 534, 615, 530, 531, 532,
	533, 616, 0, 536, 537, 0, 535, 0, 538, 539,
	540, 541, 542, 543, 332, 544, 0, 545, 617, 618,
	619, 620, 0, 554, 0, 546, 547, 548, 621, 549,
	622, 0, 550, 551, 552, 553, 0, 555, 556, 0,
	0, 557, 558, 559, 561, 562, 560, 563, 0, 564,
	0, 0, 565, 566, 567, 623, 624, 625, 0, 569,
	568, 570, 626, 248, 2799, 0, 0, 571, 572, 627,
	573, 574, 575, 0, 0, 0, 0, 0, 0, 0,
	254, 255, 256, 257, 258, 259, 0, 260, 261, 0,
	0, 0, 0, 0, 576, 0, 0, 0, 0, 262,
	263, 0, 264, 265, 266, 267, 268, 577, 578, 0,
	269, 579, 270, 580, 0, 581, 271, 272, 273, 274,
	275, 276, 0, 0, 0, 277, 582, 583, 584, 0,
	278, 279, 585, 0, 0, 0, 280, 281, 282, 283,
	284, 285, 286, 0, 0, 288, 289, 290, 287, 291,
	0, 292, 0, 293, 294, 295, 296, 297, 298, 0,
	299, 300, 301, 0, 302, 303, 0, 0, 0, 0,
	0, 0, 0, 304, 305, 306, 307, 0, 308, 586,
	587, 0, 312, 309, 310, 0, 313, 311, 0, 314,
	315, 316, 0, 0, 317, 318, 319, 0, 320, 321,
	0, 322, 323, 324, 0, 325, 326, 588, 327, 328,
	329, 331, 333, 330, 334, 335, 336, 337, 589, 590,
	0, 0, 0, 0, 0, 0, 0, 338, 339, 340,
	591, 0, 0, 0, 341, 0, 342, 0, 0, 0,
	343, 344, 592, 593, 345, 346, 347, 348, 349, 350,
	351, 352, 0, 353, 594, 0, 595, 354, 0, 355,
	356, 357, 358, 359, 596, 597, 598, 433, 0, 360,
	361, 0, 362, 363, 364, 365, 0, 0, 0, 0,
	366, 367, 369, 0, 0, 368, 599, 600, 0, 601,
	0, 370, 371, 0, 602, 0, 372, 373, 374, 0,
	375, 0, 0, 0, 376, 377, 378, 379, 380, 381,
	0, 382, 384, 383, 0, 385, 603, 0, 386, 387,
	0, 0, 388, 0, 0, 0, 389, 390, 0, 0,
	391, 392, 393, 394, 0, 395, 396, 398, 400, 397,
	399, 401, 414, 402, 403, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 416, 0, 415, 0, 417,
	418, 419, 424, 426, 427, 422, 423, 425, 428, 429,
	421, 0, 420, 0, 0, 0, 430, 431, 0, 604,
	432, 605, 434, 435, 0, 0, 436, 0, 0, 0,
	438, 439, 2796, 0, 0, 441, 442, 606, 0, 443,
	0, 607, 444, 445, 437, 446, 447, 448, 449, 450,
	451, 452, 453, 0, 454, 455, 608, 456, 457, 458,
	609, 459, 460, 461, 610, 462, 611, 463, 464, 0,
	465, 0, 466, 467, 468, 469, 470, 471, 472, 612,
	473, 475, 474, 476, 0, 477, 0, 0, 0, 0,
	0, 478, 0, 480, 481, 482, 479, 483, 484, 485,
	486, 0, 487, 488, 489, 0, 490, 491, 492, 493,
	613, 494, 0, 495, 496, 502, 503, 497, 498, 504,
	505, 506, 507, 508, 0, 510, 511, 509, 512, 513,
	514, 0, 515, 499, 500, 516, 517, 0, 518, 519,
	520, 521, 522, 523, 614, 0, 524, 0, 525, 526,
	527, 528, 501, 529, 534, 615, 530, 531, 532, 533,
	616, 0, 536, 537, 0, 535, 0, 538, 539, 540,
	541, 542, 543, 332, 544, 0, 545, 617, 618, 619,
	620, 0, 554, 0, 546, 547, 548, 621, 549, 622,
	0, 550, 551, 552, 553, 0, 555, 556, 0, 0,
	557, 558, 559, 561, 562, 560, 563, 0, 564, 0,
	0, 565, 566, 567, 623, 624, 625, 248, 569, 568,
	570, 626, 0, 0, 0, 0, 571, 572, 627, 573,
	574, 575, 0, 0, 254, 255, 256, 257, 258, 259,
	2162, 260, 261, 0, 0, 0, 0, 0, 576, 0,
	0, 0, 0, 262, 263, 0, 264, 265, 266, 267,
	268, 577, 578, 0, 269, 579, 270, 580, 0, 581,
	271, 272, 273, 274, 275, 276, 0, 0, 0, 277,
	582, 583, 584, 0, 278, 279, 585, 0, 0, 0,
	280, 281, 282, 283, 284, 285, 286, 0, 0, 288,
	289, 290, 287, 291, 0, 292, 0, 293, 294, 295,
	296, 297, 298, 0, 299, 300, 301, 0, 302, 303,
	0, 0, 0, 0, 0, 0, 0, 304, 305, 306,
	307, 0, 308, 586, 587, 0, 312, 309, 310, 0,
	313, 311, 0, 314, 315, 316, 0, 0, 317, 318,
	319, 0, 320, 321, 0, 322, 323, 324, 0, 325,
	326, 588, 327, 328, 329, 331, 333, 330, 334, 335,
	336, 337, 589, 590, 0, 0, 0, 0, 0, 0,
	0, 338, 339, 340, 591, 0, 0, 0, 341, 0,
	342, 0, 0, 0, 343, 344, 592, 593, 345, 346,
	347, 348, 349, 350, 351, 352, 0, 353, 594, 0,
	595, 354, 0, 355, 356, 357, 358, 359, 596, 597,
	598, 433, 0, 360, 361, 0, 362, 363, 364, 365,
	0, 0, 0, 0, 366, 367, 369, 0, 0, 368,
	599, 600, 0, 601, 0, 370, 371, 0, 602, 0,
	372, 373, 374, 0, 375, 0, 0, 0, 376, 377,
	378, 379, 380, 381, 0, 382, 384, 383, 0, 385,
	603, 0, 386, 387, 0, 0, 388, 0, 0, 0,
	389, 390, 0, 0, 391, 392, 393, 394, 0, 395,
	396, 398, 400, 397, 399, 401, 414, 402, 403, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 416,
	0, 415, 0, 417, 418, 419, 424, 426, 427, 422,
	423, 425, 428, 429, 421, 0, 420, 0, 0, 0,
	430, 431, 0, 604, 432, 605, 434, 435, 0, 0,
	436, 0, 0, 0, 438, 439, 440, 0, 0, 441,
	442, 606, 0, 443, 0, 607, 444, 445, 437, 446,
	447, 448, 449, 450, 451, 452, 453, 0, 454, 455,
	608, 456, 457, 458, 609, 459, 460, 461, 610, 462,
	611, 463, 464, 0, 465, 0, 466, 467, 468, 469,
	470, 471, 472, 612, 473, 475, 474, 476, 0, 477,
	0, 0, 0, 0, 0, 478, 0, 480, 481, 482,
	479, 483, 484, 485, 486, 0, 487, 488, 489, 0,
	490, 491, 492, 493, 613, 494, 0, 495, 496, 502,
	503, 497, 498, 504, 505, 506, 507, 508, 0, 510,
	511, 509, 512, 513, 514, 0, 515, 499, 500, 516,
	517, 0, 518, 519, 520, 521, 522, 523, 614, 0,
	524, 0, 525, 526, 527, 528, 501, 529, 534, 615,
	530, 531, 532, 533, 616, 0, 536, 537, 0, 535,
	0, 538, 539, 540, 541, 542, 543, 332, 544, 0,
	545, 617, 618, 619, 620, 0, 554, 0, 546, 547,
	548, 621, 549, 622, 0, 550, 551, 552, 553, 0,
	555, 556, 0, 0, 557, 558, 559, 561, 562, 560,
	563, 0, 564, 0, 0, 565, 566, 567, 623, 624,
	625, 0, 569, 568, 570, 626, 2150, 0, 248, 0,
	571, 572, 627, 573, 574, 575, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 254, 255, 256, 257, 258,
	259, 0, 260, 261, 0, 0, 0, 0, 0, 576,
	0, 0, 0, 0, 262, 263, 0, 264, 265, 266,
	267, 268, 577, 578, 0, 269, 579, 270, 580, 0,
	581, 271, 272, 273, 274, 275, 276, 0, 0, 0,
	277, 582, 583, 584, 0, 278, 279, 585, 0, 0,
	0, 280, 281, 282, 283, 284, 285, 286, 0, 0,
	288, 289, 290, 287, 291, 0, 292, 0, 293, 294,
	295, 296, 297, 298, 0, 299, 300, 301, 0, 302,
	303, 0, 0, 0, 0, 0, 0, 0, 304, 305,
	306, 307, 0, 308, 586, 587, 0, 312, 309, 310,
	0, 313, 311, 0, 314, 315, 316, 0, 0, 317,
	318, 319, 0, 320, 321, 0, 322, 323, 324, 0,
	325, 326, 588, 327, 328, 329, 331, 333, 330, 334,
	335, 336, 337, 589, 590, 0, 0, 0, 0, 0,
	0, 0, 338, 339, 340, 591, 0, 0, 0, 341,
	0, 342, 0, 0, 0, 343, 344, 592, 593, 345,
	346, 347, 348, 349, 350, 351, 352, 0, 353, 594,
	0, 595, 354, 0, 355, 356, 357, 358, 359, 596,
	597, 598, 433, 0, 360, 361, 0, 362, 363, 364,
	365, 0, 0, 0, 0, 366, 367, 369, 0, 0,
	368, 599, 600, 0, 601, 0, 370, 371, 0, 602,
	0, 372, 373, 374, 0, 375, 0, 0, 0, 376,
	377, 378, 379, 380, 381, 0, 382, 384, 383, 0,
	385, 603, 0, 386, 387, 0, 0, 388, 0, 0,
	0, 389, 390, 0, 0, 391, 392, 393, 394, 0,
	395, 396, 398, 400, 397, 399, 401, 414, 402, 403,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	416, 0, 415, 0, 417, 418, 419, 424, 426, 427,
	422, 423, 425, 428, 429, 421, 0, 420, 0, 0,
	0, 430, 431, 0, 604, 432, 605, 434, 435, 0,
	0, 436, 0, 0, 0, 438, 439, 440, 0, 0,
	441, 442, 606, 0, 443, 0, 607, 444, 445, 437,
	446, 447, 448, 449, 450, 451, 452, 453, 0, 454,
	455, 608, 456, 457, 458, 609, 459, 460, 461, 610,
	462, 611, 463, 464, 0, 465, 0, 466, 467, 468,
	469, 470, 471, 472, 612, 473, 475, 474, 476, 0,
	477, 0, 0, 0, 0, 0, 478, 0, 480, 481,
	482, 479, 483, 484, 485, 486, 0, 487, 488, 489,
	0, 490, 491, 492, 493, 613, 494, 0, 495, 496,
	502, 503, 497, 498, 504, 505, 506, 507, 508, 0,
	510, 511, 509, 512, 513, 514, 0, 515, 499, 500,
	516, 517, 0, 518, 519, 520, 521, 522, 523, 614,
	0, 524, 0, 525, 526, 527, 528, 501, 529, 534,
	615, 530, 531, 532, 533, 616, 0, 536, 537, 0,
	535, 0, 538, 539, 540, 541, 542, 543, 332, 544,
	0, 545, 617, 618, 619, 620, 0, 554, 0, 546,
	547, 548, 621, 549, 622, 0, 550, 551, 552, 553,
	0, 555, 556, 0, 0, 557, 558, 559, 561, 562,
	560, 563, 0, 564, 0, 0, 565, 566, 567, 623,
	624, 625, 0, 569, 568, 570, 626, 682, 0, 248,
	0, 571, 572, 627, 573, 574, 575, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 254, 255, 256, 257,
	258, 259, 0, 260, 261, 0, 0, 0, 0, 0,
	576, 0, 0, 0, 0, 262, 263, 0, 264, 265,
	266, 267, 268, 577, 578, 0, 269, 579, 270, 580,
	0, 581, 271, 272, 273, 274, 275, 276, 0, 0,
	0, 277, 582, 583, 584, 0, 278, 672, 585, 0,
	0, 0, 280, 281, 282, 283, 284, 285, 286, 0,
	0, 288, 289, 290, 287, 291, 0, 292, 0, 293,
	294, 295, 296, 297, 298, 0, 299, 300, 301, 0,
	302, 303, 0, 0, 0, 0, 0, 0, 0, 304,
	305, 306, 307, 0, 308, 586, 587, 0, 312, 309,
	310, 0, 313, 311, 0, 314, 315, 316, 0, 0,
	317, 318, 319, 0, 320, 321, 0, 322, 323, 324,
	0, 325, 326, 588, 327, 328, 329, 331, 333, 330,
	334, 335, 336, 337, 589, 590, 0, 0, 0, 0,
	0, 0, 0, 338, 339, 340, 591, 0, 0, 0,
	341, 0, 342, 0, 0, 0, 343, 344, 592, 593,
	345, 346, 347, 348, 349, 350, 351, 352, 0, 353,
	594, 0, 595, 354, 0, 355, 356, 357, 358, 359,
	596, 597, 598, 433, 0, 360, 361, 0, 362, 363,
	364, 365, 0, 0, 0, 0, 366, 367, 369, 0,
	0, 368, 599, 600, 0, 601, 0, 370, 371, 0,
	602, 0, 372, 373, 374, 0, 375, 0, 0, 0,
	376, 377, 378, 379, 380, 381, 0, 382, 384, 383,
	0, 385, 603, 0, 386, 387, 0, 0, 388, 0,
	0, 0, 389, 390, 0, 0, 391, 392, 393, 394,
	0, 395, 396, 398, 400, 397, 399, 401, 414, 402,
	403, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 416, 0, 683, 0, 417, 418, 419, 424, 426,
	427, 422, 423, 425, 428, 429, 421, 0, 420, 0,
	0, 0, 430, 431, 0, 604, 432, 605, 434, 435,
	0, 0, 436, 0, 0, 0, 438, 439, 440, 0,
	0, 441, 442, 606, 0, 443, 0, 607, 444, 445,
	437, 446, 447, 448, 449, 450, 451, 452, 453, 0,
	454, 455, 608, 456, 457, 458, 609, 459, 460, 461,
	610, 462, 611, 463, 464, 0, 465, 0, 466, 467,
	468, 469, 470, 471, 472, 612, 473, 475, 474, 476,
	0, 477, 0, 0, 0, 0, 0, 478, 0, 480,
	481, 482, 479, 483, 484, 485, 486, 0, 487, 488,
	489, 0, 490, 491, 492, 493, 613, 494, 0, 495,
	496, 502, 503, 497, 498, 679, 505, 506, 507, 508,
	0, 510, 511, 509, 512, 1510, 514, 0, 515, 499,
	500, 516, 517, 0, 518, 519, 520, 521, 522, 523,
	614, 0, 524, 0, 525, 526, 527, 528, 501, 529,
	534, 615, 530, 531, 532, 533, 616, 0, 536, 537,
	0, 535, 0, 538, 539, 540, 541, 542, 543, 332,
	544, 0, 545, 678, 618, 619, 620, 0, 554, 0,
	546, 547, 548, 621, 549, 622, 0, 550, 551, 552,
	553, 0, 555, 556, 0, 0, 557, 558, 559, 561,
	562, 560, 563, 0, 564, 0, 0, 565, 566, 567,
	623, 624, 625, 0, 569, 568, 570, 626, 1491, 0,
	248, 0, 571, 572, 627, 573, 574, 575, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 254, 255, 256,
	257, 258, 259, 0, 260, 261, 0, 0, 0, 0,
	0, 576, 0, 0, 0, 0, 262, 263, 0, 264,
	265, 266, 267, 268, 577, 578, 0, 269, 579, 270,
	580, 0, 581, 271, 272, 273, 274, 275, 276, 0,
	0, 0, 277, 582, 583, 584, 0, 278, 279, 585,
	0, 0, 0, 280, 281, 282, 283, 284, 285, 286,
	0, 0, 288, 289, 290, 287, 291, 0, 292, 0,
	293, 294, 295, 296, 297, 298, 0, 299, 300, 301,
	0, 302, 303, 0, 0, 0, 0, 0, 0, 0,
	304, 305, 306, 307, 0, 308, 586, 587, 0, 312,
	309, 310, 0, 313, 311, 0, 314, 315, 316, 0,
	0, 317, 318, 319, 0, 320, 321, 0, 322, 323,
	324, 0, 325, 326, 588, 327, 328, 329, 331, 333,
	330, 334, 335, 336, 337, 589, 590, 0, 0, 0,
	0, 0, 0, 0, 338, 339, 340, 591, 0, 0,
	0, 341, 0, 342, 0, 0, 0, 343, 344, 592,
	593, 345, 346, 347, 348, 349, 350, 351, 352, 0,
	353, 594, 0, 595, 354, 0, 355, 356, 357, 358,
	359, 1490, 597, 598, 433, 0, 360, 361, 0, 362,
	363, 364, 365, 0, 0, 0, 0, 366, 367, 369,
	0, 0, 368, 599, 600, 0, 601, 0, 370, 371,
	0, 602, 0, 372, 373, 374, 0, 375, 0, 0,
	0, 376, 377, 378, 379, 380, 381, 0, 382, 384,
	383, 0, 385, 603, 0, 386, 387, 0, 0, 388,
	0, 0, 0, 389, 390, 0, 0, 391, 392, 393,
	394, 0, 395, 396, 398, 400, 397, 399, 401, 414,
	402, 403, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 416, 0, 415, 0, 417, 418, 419, 424,
	426, 427, 422, 423, 425, 428, 429, 421, 0, 420,
	0, 0, 0, 430, 431, 0, 604, 432, 605, 434,
	435, 0, 0, 436, 0, 0, 0, 438, 439, 440,
	0, 0, 441, 442, 606, 0, 443, 0, 607, 444,
	445, 437, 446, 447, 448, 449, 450, 451, 452, 453,
	0, 454, 455, 608, 456, 457, 458, 609, 459, 460,
	461, 610, 462, 611, 463, 464, 0, 465, 0, 466,
	467, 468, 469, 470, 471, 472, 612, 473, 475, 474,
	476, 0, 477, 0, 0, 0, 0, 0, 478, 0,
	480, 481, 482, 479, 483, 484, 485, 486, 0, 487,
	488, 489, 0, 490, 491, 492, 493, 613, 494, 0,
	495, 496, 502, 503, 497, 498, 504, 505, 506, 507,
	508, 0, 510, 511, 509, 512, 513, 514, 0, 515,
	499, 500, 516, 517, 0, 518, 519, 520, 521, 522,
	523, 614, 0, 524, 0, 525, 526, 527, 528, 501,
	529, 534, 615, 530, 531, 532, 533, 616, 0, 536,
	537, 0, 535, 0, 538, 539, 540, 541, 542, 543,
	332, 544, 0, 545, 617, 618, 619, 620, 0, 554,
	0, 546, 547, 548, 621, 549, 622, 0, 550, 551,
	552, 553, 0, 555, 556, 0, 0, 557, 558, 559,
	561, 562, 560, 563, 0, 564, 0, 0, 565, 566,
	567, 623, 624, 625, 0, 569, 568, 570, 626, 1484,
	0, 248, 0, 571, 572, 627, 573, 574, 575, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 254, 255,
	256, 257, 258, 259, 0, 260, 261, 0, 0, 0,
	0, 0, 576, 0, 0, 0, 0, 262, 263, 0,
	264, 265, 266, 267, 268, 577, 578, 0, 269, 579,
	270, 580, 0, 581, 271, 272, 273, 274, 275, 276,
	0, 0, 0, 277, 582, 583, 584, 0, 278, 279,
	585, 0, 0, 0, 280, 281, 282, 283, 284, 285,
	286, 0, 0, 288, 289, 290, 287, 291, 0, 292,
	0, 293, 294, 295, 296, 297, 298, 0, 299, 300,
	301, 0, 302, 303, 0, 0, 0, 0, 0, 0,
	0, 304, 305, 306, 307, 0, 308, 586, 587, 0,
	312, 309, 310, 0, 313, 311, 0, 314, 315, 316,
	0, 0, 317, 318, 319, 0, 320, 321, 0, 322,
	323, 324, 0, 325, 326, 588, 327, 328, 329, 331,
	333, 330, 334, 335, 336, 337, 589, 590, 0, 0,
	0, 0, 0, 0, 0, 338, 339, 340, 591, 0,
	0, 0, 341, 0, 342, 0, 0, 0, 343, 344,
	592, 593, 345, 346, 347, 348, 349, 350, 351, 352,
	0, 353, 594, 0, 595, 354, 0, 355, 356, 357,
	358, 359, 1483, 597, 598, 433, 0, 360, 361, 0,
	362, 363, 364, 365, 0, 0, 0, 0, 366, 367,
	369, 0, 0, 368, 599, 600, 0, 601, 0, 370,
	371, 0, 602, 0, 372, 373, 374, 0, 375, 0,
	0, 0, 376, 377, 378, 379, 380, 381, 0, 382,
	384, 383, 0, 385, 603, 0, 386, 387, 0, 0,
	388, 0, 0, 0, 389, 390, 0, 0, 391, 392,
	393, 394, 0, 395, 396, 398, 400, 397, 399, 401,
	414, 402, 403, 404, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 416, 0, 415, 0, 417, 418, 419,
	424, 426, 427, 422, 423, 425, 428, 429, 421, 0,
	420, 0, 0, 0, 430, 431, 0, 604, 432, 605,
	434, 435, 0, 0, 436, 0, 0, 0, 438, 439,
	440, 0, 0, 441, 442, 606, 0, 443, 0, 607,
	444, 445, 437, 446, 447, 448, 449, 450, 451, 452,
	453, 0, 454, 455, 608, 456, 457, 458, 609, 459,
	460, 461, 610, 462, 611, 463, 464, 0, 465, 0,
	466, 467, 468, 469, 470, 471, 472, 612, 473, 475,
	474, 476, 0, 477, 0, 0, 0, 0, 0, 478,
	0, 480, 481, 482, 479, 483, 484, 485, 486, 0,
	487, 488, 489, 0, 490, 491, 492, 493, 613, 494,
	0, 495, 496, 502, 503, 497, 498, 504, 505, 506,
	507, 508, 0, 510, 511, 509, 512, 513, 514, 0,
	515, 499, 500, 516, 517, 0, 518, 519, 520, 521,
	522, 523, 614, 0, 524, 0, 525, 526, 527, 528,
	501, 529, 534, 615, 530, 531, 532, 533, 616, 0,
	536, 537, 0, 535, 0, 538, 539, 540, 541, 542,
	543, 332, 544, 0, 545, 617, 618, 619, 620, 0,
	554, 0, 546, 547, 548, 621, 549, 622, 0, 550,
	551, 552, 553, 0, 555, 556, 0, 0, 557, 558,
	559, 561, 562, 560, 563, 0, 564, 0, 0, 565,
	566, 567, 623, 624, 625, 0, 569, 568, 570, 626,
	1432, 0, 248, 0, 571, 572, 627, 573, 574, 575,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 254,
	255, 256, 257, 258, 259, 0, 260, 261, 0, 0,
	0, 0, 0, 576, 0, 0, 0, 0, 262, 263,
	0, 264, 265, 266, 267, 268, 577, 578, 0, 269,
	579, 270, 580, 0, 581, 271, 272, 273, 274, 275,
	276, 0, 0, 0, 277, 582, 583, 584, 0, 278,
	279, 585, 0, 0, 0, 280, 281, 282, 283, 284,
	285, 286, 0, 0, 288, 289, 290, 287, 291, 0,
	292, 0, 293, 294, 295, 296, 297, 298, 0, 299,
	300, 301, 0, 302, 303, 0, 0, 0, 0, 0,
	0, 0, 304, 305, 306, 307, 0, 308, 586, 587,
	0, 312, 309, 310, 0, 313, 311, 0, 314, 315,
	316, 0, 0, 317, 318, 319, 0, 320, 321, 0,
	322, 323, 324, 0, 325, 326, 588, 327, 328, 329,
	331, 333, 330, 334, 335, 336, 337, 589, 590, 0,
	0, 0, 0, 0, 0, 0, 338, 339, 340, 591,
	0, 0, 0, 341, 0, 342, 0, 0, 0, 343,
	344, 592, 593, 345, 346, 347, 348, 349, 350, 351,
	352, 0, 353, 594, 0, 595, 354, 0, 355, 356,
	357, 358, 359, 1431, 597, 598, 433, 0, 360, 361,
	0, 362, 363, 364, 365, 0, 0, 0, 0, 366,
	367, 369, 0, 0, 368, 599, 600, 0, 601, 0,
	370, 371, 0, 602, 0, 372, 373, 374, 0, 375,
	0, 0, 0, 376, 377, 378, 379, 380, 381, 0,
	382, 384, 383, 0, 385, 603, 0, 386, 387, 0,
	0, 388, 0, 0, 0, 389, 390, 0, 0, 391,
	392, 393, 394, 0, 395, 396, 398, 400, 397, 399,
	401, 414, 402, 403, 404, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 416, 0, 415, 0, 417, 418,
	419, 424, 426, 427, 422, 423, 425, 428, 429, 421,
	0, 420, 0, 0, 0, 430, 431, 0, 604, 432,
	605, 434, 435, 0, 0, 436, 0, 0, 0, 438,
	439, 440, 0, 0, 441, 442, 606, 0, 443, 0,
	607, 444, 445, 437, 446, 447, 448, 449, 450, 451,
	452, 453, 0, 454, 455, 608, 456, 457, 458, 609,
	459, 460, 461, 610, 462, 611, 463, 464, 0, 465,
	0, 466, 467, 468, 469, 470, 471, 472, 612, 473,
	475, 474, 476, 0, 477, 0, 0, 0, 0, 0,
	478, 0, 480, 481, 482, 479, 483, 484, 485, 486,
	0, 487, 488, 489, 0, 490, 491, 492, 493, 613,
	494, 0, 495, 496, 502, 503, 497, 498, 504, 505,
	506, 507, 508, 0, 510, 511, 509, 512, 513, 514,
	0, 515, 499, 500, 516, 517, 0, 518, 519, 520,
	521, 522, 523, 614, 0, 524, 0, 525, 526, 527,
	528, 501, 529, 534, 615, 530, 531, 532, 533, 616,
	0, 536, 537, 0, 535, 0, 538, 539, 540, 541,
	542, 543, 332, 544, 0, 545, 617, 618, 619, 620,
	0, 554, 0, 546, 547, 548, 621, 549, 622, 0,
	550, 551, 552, 553, 0, 555, 556, 0, 0, 557,
	558, 559, 561, 562, 560, 563, 0, 564, 0, 0,
	565, 566, 567, 623, 624, 625, 0, 569, 568, 570,
	626, 1415, 0, 248, 0, 571, 572, 627, 573, 574,
	575, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	254, 255, 256, 257, 258, 259, 0, 260, 261, 0,
	0, 0, 0, 0, 576, 0, 0, 0, 0, 262,
	263, 0, 264, 265, 266, 267, 268, 577, 578, 0,
	269, 579, 270, 580, 0, 581, 271, 272, 273, 274,
	275, 276, 0, 0, 0, 277, 582, 583, 584, 0,
	278, 279, 585, 0, 0, 0, 280, 281, 282, 283,
	284, 285, 286, 0, 0, 288, 289, 290, 287, 291,
	0, 292, 0, 293, 294, 295, 296, 297, 298, 0,
	299, 300, 301, 0, 302, 303, 0, 0, 0, 0,
	0, 0, 0, 304, 305, 306, 307, 0, 308, 586,
	587, 0, 312, 309, 310, 0, 313, 311, 0, 314,
	315, 316, 0, 0, 317, 318, 319, 0, 320, 321,
	0, 322, 323, 324, 0, 325, 326, 588, 327, 328,
	329, 331, 333, 330, 334, 335, 336, 337, 589, 590,
	0, 0, 0, 0, 0, 0, 0, 338, 339, 340,
	591, 0, 0, 0, 341, 0, 342, 0, 0, 0,
	343, 344, 592, 593, 345, 346, 347, 348, 349, 350,
	351, 352, 0, 353, 594, 0, 595, 354, 0, 355,
	356, 357, 358, 359, 1413, 597, 598, 433, 0, 360,
	361, 0, 362, 363, 364, 365, 0, 0, 0, 0,
	366, 367, 369, 0, 0, 368, 599, 600, 0, 601,
	0, 370, 371, 0, 602, 0, 372, 373, 374, 0,
	375, 0, 0, 0, 376, 377, 378, 379, 380, 381,
	0, 382, 384, 383, 0, 385, 603, 0, 386, 387,
	0, 0, 388, 0, 0, 0, 389, 390, 0, 0,
	391, 392, 393, 394, 0, 395, 396, 398, 400, 397,
	399, 401, 414, 402, 403, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 416, 0, 415, 0, 417,
	418, 419, 424, 426, 427, 422, 423, 425, 428, 429,
	421, 0, 420, 0, 0, 0, 430, 431, 0, 604,
	432, 605, 434, 435, 0, 0, 436, 0, 0, 0,
	438, 439, 440, 0, 0, 441, 442, 606, 0, 443,
	0, 607, 444, 445, 437, 446, 447, 448, 449, 450,
	451, 452, 453, 0, 454, 455, 608, 456, 457, 458,
	609, 459, 460, 461, 610, 462, 611, 463, 464, 0,
	465, 0, 466, 467, 468, 469, 470, 471, 472, 612,
	473, 475, 474, 476, 0, 477, 0, 0, 0, 0,
	0, 478, 0, 480, 481, 482, 479, 483, 484, 485,
	486, 0, 487, 488, 489, 0, 490, 491, 492, 493,
	613, 494, 0, 495, 496, 502, 503, 497, 498, 504,
	505, 506, 507, 508, 0, 510, 511, 509, 512, 513,
	514, 0, 515, 499, 500, 516, 517, 0, 518, 519,
	520, 521, 522, 523, 614, 0, 524, 0, 525, 526,
	527, 528, 501, 529, 534, 615, 530, 531, 532, 533,
	616, 0, 536, 537, 0, 535, 0, 538, 539, 540,
	541, 542, 543, 332, 544, 0, 545, 617, 618, 619,
	620, 0, 554, 0, 546, 547, 548, 621, 549, 622,
	0, 550, 551, 552, 553, 0, 555, 556, 0, 0,
	557, 558, 559, 561, 562, 560, 563, 0, 564, 0,
	0, 565, 566, 567, 623, 624, 625, 0, 569, 568,
	570, 626, 1409, 0, 248, 0, 571, 572, 627, 573,
	574, 575, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 254, 255, 256, 257, 258, 259, 0, 260, 261,
	0, 0, 0, 0, 0, 576, 0, 0, 0, 0,
	262, 263, 0, 264, 265, 266, 267, 268, 577, 578,
	0, 269, 579, 270, 580, 0, 581, 271, 272, 273,
	274, 275, 276, 0, 0, 0, 277, 582, 583, 584,
	0, 278, 279, 585, 0, 0, 0, 280, 281, 282,
	283, 284, 285, 286, 0, 0, 288, 289, 290, 287,
	291, 0, 292, 0, 293, 294, 295, 296, 297, 298,
	0, 299, 300, 301, 0, 302, 303, 0, 0, 0,
	0, 0, 0, 0, 304, 305, 306, 307, 0, 308,
	586, 587, 0, 312, 309, 310, 0, 313, 311, 0,
	314, 315, 316, 0, 0, 317, 318, 319, 0, 320,
	321, 0, 322, 323, 324, 0, 325, 326, 588, 327,
	328, 329, 331, 333, 330, 334, 335, 336, 337, 589,
	590, 0, 0, 0, 0, 0, 0, 0, 338, 339,
	340, 591, 0, 0, 0, 341, 0, 342, 0, 0,
	0, 343, 344, 592, 593, 345, 346, 347, 348, 349,
	350, 351, 352, 0, 353, 594, 0, 595, 354, 0,
	355, 356, 357, 358, 359, 596, 597, 598, 433, 0,
	360, 361, 0, 362, 363, 364, 365, 0, 0, 0,
	0, 366, 367, 369, 0, 0, 368, 599, 600, 0,
	601, 0, 370, 371, 0, 602, 0, 372, 373, 374,
	0, 375, 0, 0, 0, 376, 377, 378, 379, 380,
	381, 0, 382, 384, 383, 0, 385, 603, 0, 386,
	387, 0, 0, 388, 0, 0, 0, 389, 390, 0,
	0, 391, 392, 393, 394, 0, 395, 396, 398, 400,
	397, 399, 401, 414, 402, 403, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 416, 0, 415, 0,
	417, 418, 419, 424, 426, 427, 422, 423, 425, 428,
	429, 421, 0, 420, 0, 0, 0, 430, 431, 0,
	604, 432, 605, 434, 435, 0, 0, 436, 0, 0,
	0, 438, 439, 440, 0, 0, 441, 442, 606, 0,
	443, 0, 607, 444, 445, 437, 446, 447, 448, 449,
	450, 451, 452, 453, 0, 454, 455, 608, 456, 457,
	458, 609, 459, 460, 461, 610, 462, 611, 463, 464,
	0, 465, 0, 466, 467, 468, 469, 470, 471, 472,
	612, 473, 475, 474, 476, 0, 477, 0, 0, 0,
	0, 0, 478, 0, 480, 481, 482, 479, 483, 484,
	485, 486, 0, 487, 488, 489, 0, 490, 491, 492,
	493, 613, 494, 0, 495, 496, 502, 503, 497, 498,
	504, 505, 506, 507, 508, 0, 510, 511, 509, 512,
	513, 514, 0, 515, 499, 500, 516, 517, 0, 518,
	519, 520, 521, 522, 523, 614, 0, 524, 0, 525,
	526, 527, 528, 501, 529, 534, 615, 530, 531, 532,
	533, 616, 0, 536, 537, 0, 535, 0, 538, 539,
	540, 541, 542, 543, 332, 544, 0, 545, 617, 618,
	619, 620, 0, 554, 0, 546, 547, 548, 621, 549,
	622, 0, 550, 551, 552, 553, 0, 555, 556, 0,
	0, 557, 558, 559, 561, 562, 560, 563, 0, 564,
	0, 0, 565, 566, 567, 623, 624, 625, 0, 569,
	568, 570, 626, 1341, 0, 248, 0, 571, 572, 627,
	573, 574, 575, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 254, 255, 256, 257, 258, 259, 0, 260,
	261, 0, 0, 0, 0, 0, 576, 0, 0, 0,
	0, 262, 263, 0, 264, 265, 266, 267, 268, 577,
	578, 0, 269, 579, 270, 580, 0, 581, 271, 272,
	273, 274, 275, 276, 0, 0, 0, 277, 582, 583,
	584, 0, 278, 279, 585, 0, 0, 0, 280, 281,
	282, 283, 284, 285, 286, 0, 0, 288, 289, 290,
	287, 291, 0, 292, 0, 293, 294, 295, 296, 297,
	298, 0, 299, 300, 301, 0, 302, 303, 0, 0,
	0, 0, 0, 0, 0, 304, 305, 306, 307, 0,
	308, 586, 587, 0, 312, 309, 310, 0, 313, 311,
	0, 314, 315, 316, 0, 0, 317, 318, 319, 0,
	320, 321, 0, 322, 323, 324, 0, 325, 326, 588,
	327, 328, 329, 331, 333, 330, 334, 335, 336, 337,
	589, 590, 0, 0, 0, 0, 0, 0, 0, 338,
	339, 340, 591, 0, 0, 0, 341, 0, 342, 0,
	0, 0, 343, 344, 592, 593, 345, 346, 347, 348,
	349, 350, 351, 352, 0, 353, 594, 0, 595, 354,
	0, 355, 356, 357, 358, 359, 596, 597, 598, 433,
	0, 360, 361, 0, 362, 363, 364, 365, 0, 0,
	0, 0, 366, 367, 369, 0, 0, 368, 599, 600,
	0, 601, 0, 370, 371, 0, 602, 0, 372, 373,
	374, 0, 375, 0, 0, 0, 376, 377, 378, 379,
	380, 381, 0, 382, 384, 383, 0, 385, 603, 0,
	386, 387, 0, 0, 388, 0, 0, 0, 389, 390,
	0, 0, 391, 392, 393, 394, 0, 395, 396, 398,
	400, 397, 399, 401, 414, 402, 403, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 416, 0, 415,
	0, 417, 418, 419, 424, 426, 427, 422, 423, 425,
	428, 429, 421, 0, 420, 0, 0, 0, 430, 431,
	0, 604, 432, 605, 434, 435, 0, 0, 436, 0,
	0, 0, 438, 439, 440, 0, 0, 441, 442, 606,
	0, 443, 0, 607, 444, 445, 437, 446, 447, 448,
	449, 450, 451, 452, 453, 0, 454, 455, 608, 456,
	457, 458, 609, 459, 460, 461, 610, 462, 611, 463,
	464, 0, 465, 0, 466, 467, 468, 469, 470, 471,
	472, 612, 473, 475, 474, 476, 0, 477, 0, 0,
	0, 0, 0, 478, 0, 480, 481, 482, 479, 483,
	484, 485, 486, 0, 487, 488, 489, 0, 490, 491,
	492, 493, 613, 494, 0, 495, 496, 502, 503, 497,
	498, 504, 505, 506, 507, 508, 0, 510, 511, 509,
	512, 513, 514, 0, 515, 499, 500, 516, 517, 0,
	518, 519, 520, 521, 522, 523, 614, 0, 524, 0,
	525, 526, 527, 528, 501, 529, 534, 615, 530, 531,
	532, 533, 616, 0, 536, 537, 0, 535, 0, 538,
	539, 540, 541, 542, 543, 332, 544, 0, 545, 617,
	618, 619, 620, 0, 554, 0, 546, 547, 548, 621,
	549, 622, 0, 550, 551, 552, 553, 0, 555, 556,
	0, 0, 557, 558, 559, 561, 562, 560, 563, 0,
	564, 0, 0, 565, 566, 567, 623, 624, 625, 0,
	569, 568, 570, 626, 1325, 0, 248, 0, 571, 572,
	627, 573, 574, 575, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 254, 255, 256, 257, 258, 259, 0,
	260, 261, 0, 0, 0, 0, 0, 576, 0, 0,
	0, 0, 262, 263, 0, 264, 265, 266, 267, 268,
	577, 578, 0, 269, 579, 270, 580, 0, 581, 271,
	272, 273, 274, 275, 276, 0, 0, 0, 277, 582,
	583, 584, 0, 278, 279, 585, 0, 0, 0, 280,
	281, 282, 283, 284, 285, 286, 0, 0, 288, 289,
	290, 287, 291, 0, 292, 0, 293, 294, 295, 296,
	297, 298, 0, 299, 300, 301, 0, 302, 303, 0,
	0, 0, 0, 0, 0, 0, 304, 305, 306, 307,
	0, 308, 586, 587, 0, 312, 309, 310, 0, 313,
	311, 0, 314, 315, 316, 0, 0, 317, 318, 319,
	0, 320, 321, 0, 322, 323, 324, 0, 325, 326,
	588, 327, 328, 329, 331, 333, 330, 334, 335, 336,
	337, 589, 590, 0, 0, 0, 0, 0, 0, 0,
	338, 339, 340, 591, 0, 0, 0, 341, 0, 342,
	0, 0, 0, 343, 344, 592, 593, 345, 346, 347,
	348, 349, 350, 351, 352, 0, 353, 594, 0, 595,
	354, 0, 355, 356, 357, 358, 359, 596, 597, 598,
	433, 0, 360, 361, 0, 362, 363, 364, 365, 0,
	0, 0, 0, 366, 367, 369, 0, 0, 368, 599,
	600, 0, 601, 0, 370, 371, 0, 602, 0, 372,
	373, 374, 0, 375, 0, 0, 0, 376, 377, 378,
	379, 380, 381, 0, 382, 384, 383, 0, 385, 603,
	0, 386, 387, 0, 0, 388, 0, 0, 0, 389,
	390, 0, 0, 391, 392, 393, 394, 0, 395, 396,
	398, 400, 397, 399, 401, 414, 402, 403, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 416, 0,
	415, 0, 417, 418, 419, 424, 426, 427, 422, 423,
	425, 428, 429, 421, 0, 420, 0, 0, 0, 430,
	431, 0, 604, 432, 605, 434, 435, 0, 0, 436,
	0, 0, 0, 438, 439, 440, 0, 0, 441, 442,
	606, 0, 443, 0, 607, 444, 445, 437, 446, 447,
	448, 449, 450, 451, 452, 453, 0, 454, 455, 608,
	456, 457, 458, 609, 459, 460, 461, 610, 462, 611,
	463, 464, 0, 465, 0, 466, 467, 468, 469, 470,
	471, 472, 612, 473, 475, 474, 476, 0, 477, 0,
	0, 0, 0, 0, 478, 0, 480, 481, 482, 479,
	483, 484, 485, 486, 0, 487, 488, 489, 0, 490,
	491, 492, 493, 613, 494, 0, 495, 496, 502, 503,
	497, 498, 504, 505, 506, 507, 508, 0, 510, 511,
	509, 512, 513, 514, 0, 515, 499, 500, 516, 517,
	0, 518, 519, 520, 521, 522, 523, 614, 0, 524,
	0, 525, 526, 527, 528, 501, 529, 534, 615, 530,
	531, 532, 533, 616, 0, 536, 537, 0, 535, 0,
	538, 539, 540, 541, 542, 543, 332, 544, 0, 545,
	617, 618, 619, 620, 0, 554, 0, 546, 547, 548,
	621, 549, 622, 0, 550, 551, 552, 553, 0, 555,
	556, 0, 0, 557, 558, 559, 561, 562, 560, 563,
	0, 564, 0, 0, 565, 566, 567, 623, 624, 625,
	248, 569, 568, 570, 626, 0, 0, 0, 0, 571,
	572, 627, 573, 574, 575, 0, 0, 254, 255, 256,
	257, 258, 259, 1174, 260, 261, 0, 0, 0, 0,
	0, 576, 0, 0, 0, 0, 262, 263, 0, 264,
	265, 266, 267, 268, 577, 578, 0, 269, 579, 270,
	580, 0, 581, 271, 272, 273, 274, 275, 276, 0,
	0, 0, 277, 582, 583, 584, 0, 278, 279, 585,
	0, 0, 0, 280, 281, 282, 283, 284, 285, 286,
	0, 0, 288, 289, 290, 287, 291, 0, 292, 0,
	293, 294, 295, 296, 297, 298, 0, 299, 300, 301,
	0, 302, 303, 0, 0, 0, 0, 0, 0, 0,
	304, 305, 306, 307, 0, 308, 586, 587, 0, 312,
	309, 310, 0, 313, 311, 0, 314, 315, 316, 0,
	0, 317, 318, 319, 0, 320, 321, 0, 322, 323,
	324, 0, 325, 326, 588, 327, 328, 329, 331, 333,
	330, 334, 335, 336, 337, 589, 590, 0, 0, 0,
	0, 0, 0, 0, 338, 339, 340, 591, 0, 0,
	0, 341, 0, 342, 0, 0, 0, 343, 344, 592,
	593, 345, 346, 347, 348, 349, 350, 351, 352, 0,
	353, 594, 0, 595, 354, 0, 355, 356, 357, 358,
	359, 596, 597, 598, 433, 0, 360, 361, 0, 362,
	363, 364, 365, 0, 0, 0, 0, 366, 367, 369,
	0, 0, 368, 599, 600, 0, 601, 0, 370, 371,
	0, 602, 0, 372, 373, 374, 0, 375, 0, 0,
	0, 376, 377, 378, 379, 380, 381, 0, 382, 384,
	383, 0, 385, 603, 0, 386, 387, 0, 0, 388,
	0, 0, 0, 389, 390, 0, 0, 391, 392, 393,
	394, 0, 395, 396, 398, 400, 397, 399, 401, 414,
	402, 403, 404, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 416, 0, 415, 0, 417, 418, 419, 424,
	426, 427, 422, 423, 425, 428, 429, 421, 0, 420,
	0, 0, 0, 430, 431, 0, 604, 432, 605, 434,
	435, 0, 0, 436, 0, 0, 0, 438, 439, 440,
	0, 0, 441, 442, 606, 0, 443, 0, 607, 444,
	445, 437, 446, 447, 448, 449, 450, 451, 452, 453,
	0, 454, 455, 608, 456, 457, 458, 609, 459, 460,
	461, 610, 462, 611, 463, 464, 0, 465, 0, 466,
	467, 468, 469, 470, 471, 472, 612, 473, 475, 474,
	476, 0, 477, 0, 0, 0, 0, 0, 478, 0,
	480, 481, 482, 479, 483, 484, 485, 486, 0, 487,
	488, 489, 0, 490, 491, 492, 493, 613, 494, 0,
	495, 496, 502, 503, 497, 498, 504, 505, 506, 507,
	508, 0, 510, 511, 509, 512, 513, 514, 0, 515,
	499, 500, 516, 517, 0, 518, 519, 520, 521, 522,
	523, 614, 0, 524, 0, 525, 526, 527, 528, 501,
	529, 534, 615, 530, 531, 532, 533, 616, 0, 536,
	537, 0, 535, 0, 538, 539, 540, 541, 542, 543,
	332, 544, 0, 545, 617, 618, 619, 620, 0, 554,
	0, 546, 547, 548, 621, 549, 622, 0, 550, 551,
	552, 553, 0, 555, 556, 0, 0, 557, 558, 559,
	561, 562, 560, 563, 0, 564, 0, 0, 565, 566,
	567, 623, 624, 625, 248, 569, 568, 570, 626, 0,
	0, 0, 0, 571, 572, 627, 573, 574, 575, 0,
	0, 254, 255, 256, 257, 258, 259, 688, 260, 261,
	0, 0, 0, 0, 0, 576, 0, 0, 0, 0,
	262, 263, 0, 264, 265, 266, 267, 268, 577, 578,
	0, 269, 579, 270, 580, 0, 581, 271, 272, 273,
	274, 275, 276, 0, 0, 0, 277, 582, 583, 584,
	0, 278, 279, 585, 0, 0, 0, 280, 281, 282,
	283, 284, 285, 286, 0, 0, 288, 289, 290, 287,
	291, 0, 292, 0, 293, 294, 295, 296, 297, 298,
	0, 299, 300, 301, 0, 302, 303, 0, 0, 0,
	0, 0, 0, 0, 304, 305, 306, 307, 0, 308,
	586, 587, 0, 312, 309, 310, 0, 313, 311, 0,
	314, 315, 316, 0, 0, 317, 318, 319, 0, 320,
	321, 0, 322, 323, 324, 0, 325, 326, 588, 327,
	328, 329, 331, 333, 330, 334, 335, 336, 337, 589,
	590, 0, 0, 0, 0, 0, 0, 0, 338, 339,
	340, 591, 0, 0, 0, 341, 0, 342, 0, 0,
	0, 343, 344, 592, 593, 345, 346, 347, 348, 349,
	350, 351, 352, 0, 353, 594, 0, 595, 354, 0,
	355, 356, 357, 358, 359, 596, 597, 598, 433, 0,
	360, 361, 0, 362, 363, 364, 365, 0, 0, 0,
	0, 366, 367, 369, 0, 0, 368, 599, 600, 0,
	601, 0, 370, 371, 0, 602, 0, 372, 373, 374,
	0, 375, 0, 0, 0, 376, 377, 378, 379, 380,
	381, 0, 382, 384, 383, 0, 385, 603, 0, 386,
	387, 0, 0, 388, 0, 0, 0, 389, 390, 0,
	0, 391, 392, 393, 394, 0, 395, 396, 398, 400,
	397, 399, 401, 414, 402, 403, 404, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 416, 0, 415, 0,
	417, 418, 419, 424, 426, 427, 422, 423, 425, 428,
	429, 421, 0, 420, 0, 0, 0, 430, 431, 0,
	604, 432, 605, 434, 435, 0, 0, 436, 0, 0,
	0, 438, 439, 440, 0, 0, 441, 442, 606, 0,
	443, 0, 607, 444, 445, 437, 446, 447, 448, 449,
	450, 451, 452, 453, 0, 454, 455, 608, 456, 457,
	458, 609, 459, 460, 461, 610, 462, 611, 463, 464,
	0, 465, 0, 466, 467, 468, 469, 470, 471, 472,
	612, 473, 475, 474, 476, 0, 477, 0, 0, 0,
	0, 0, 478, 0, 480, 481, 482, 479, 483, 484,
	485, 486, 0, 487, 488, 489, 0, 490, 491, 492,
	493, 613, 494, 0, 495, 496, 502, 503, 497, 498,
	504, 505, 506, 507, 508, 0, 510, 511, 509, 512,
	513, 514, 0, 515, 499, 500, 516, 517, 0, 518,
	519, 520, 521, 522, 523, 614, 0, 524, 0, 525,
	526, 527, 528, 501, 529, 534, 615, 530, 531, 532,
	533, 616, 0, 536, 537, 0, 535, 0, 538, 539,
	540, 541, 542, 543, 332, 544, 0, 545, 617, 618,
	619, 620, 0, 554, 0, 546, 547, 548, 621, 549,
	622, 0, 550, 551, 552, 553, 0, 555, 556, 0,
	0, 557, 558, 559, 561, 562, 560, 563, 0, 564,
	0, 0, 565, 566, 567, 623, 624, 625, 0, 569,
	568, 570, 626, 682, 0, 248, 0, 571, 572, 627,
	573, 574, 575, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 254, 255, 256, 257, 258, 259, 0, 260,
	261, 0, 0, 0, 0, 0, 576, 0, 0, 0,
	0, 262, 263, 0, 264, 265, 266, 267, 268, 577,
	578, 0, 269, 579, 270, 580, 0, 581, 271, 272,
	273, 274, 275, 276, 0, 0, 0, 277, 582, 583,
	584, 0, 278, 672, 585, 0, 0, 0, 280, 281,
	282, 283, 284, 285, 286, 0, 0, 288, 289, 290,
	287, 291, 0, 670, 0, 293, 294, 295, 296, 297,
	298, 0, 299, 300, 301, 0, 302, 303, 0, 0,
	0, 0, 0, 0, 0, 304, 305, 306, 307, 0,
	308, 586, 587, 0, 312, 309, 310, 0, 313, 311,
	0, 314, 315, 316, 0, 0, 317, 318, 319, 0,
	320, 321, 0, 322, 323, 324, 0, 325, 326, 588,
	327, 328, 329, 331, 333, 330, 334, 335, 336, 337,
	589, 590, 0, 0, 0, 0, 0, 0, 0, 338,
	339, 340, 591, 0, 0, 0, 341, 0, 342, 0,
	0, 0, 343, 344, 592, 593, 345, 346, 347, 348,
	349, 350, 351, 352, 0, 353, 594, 0, 595, 354,
	0, 355, 356, 357, 358, 359, 596, 597, 598, 433,
	0, 360, 361, 0, 362, 363, 364, 365, 0, 0,
	0, 0, 366, 367, 369, 0, 0, 368, 599, 600,
	0, 601, 0, 370, 371, 0, 602, 0, 372, 373,
	374, 0, 375, 0, 0, 0, 376, 377, 378, 379,
	380, 381, 0, 382, 384, 383, 0, 385, 603, 0,
	386, 387, 0, 0, 388, 0, 0, 0, 389, 671,
	0, 0, 391, 392, 393, 394, 0, 395, 396, 398,
	400, 397, 399, 401, 414, 402, 403, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 416, 0, 683,
	0, 417, 418, 419, 424, 426, 427, 422, 423, 425,
	428, 429, 421, 0, 420, 0, 0, 0, 430, 431,
	0, 604, 432, 605, 434, 435, 0, 0, 436, 0,
	0, 0, 438, 439, 440, 0, 0, 441, 442, 606,
	0, 443, 0, 607, 444, 445, 437, 446, 447, 448,
	449, 450, 451, 452, 453, 0, 454, 455, 608, 456,
	457, 458, 609, 459, 460, 461, 610, 462, 611, 463,
	464, 0, 465, 0, 466, 467, 468, 469, 470, 471,
	472, 612, 473, 475, 474, 476, 0, 477, 0, 0,
	0, 0, 0, 478, 0, 480, 481, 482, 479, 483,
	484, 485, 486, 0, 487, 488, 489, 0, 490, 491,
	492, 493, 673, 494, 0, 495, 496, 502, 503, 497,
	498, 679, 505, 506, 507, 508, 0, 510, 511, 509,
	512, 674, 514, 0, 515, 499, 500, 516, 517, 0,
	518, 519, 520, 521, 522, 523, 614, 0, 524, 0,
	525, 526, 527, 528, 501, 529, 534, 615, 530, 531,
	532, 533, 616, 0, 536, 537, 0, 535, 0, 538,
	539, 540, 541, 542, 543, 332, 544, 0, 545, 678,
	618, 619, 620, 0, 554, 0, 546, 676, 548, 621,
	549, 622, 0, 550, 551, 552, 553, 0, 555, 556,
	0, 0, 557, 558, 559, 561, 562, 560, 563, 0,
	564, 0, 0, 565, 566, 567, 623, 624, 625, 0,
	569, 568, 570, 626, 664, 0, 248, 0, 571, 572,
	627, 573, 574, 575, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 254, 255, 256, 257, 258, 259, 0,
	260, 261, 0, 0, 0, 0, 0, 576, 0, 0,
	0, 0, 262, 263, 0, 264, 265, 266, 267, 268,
	577, 578, 0, 269, 579, 270, 580, 0, 581, 271,
	272, 273, 274, 275, 276, 0, 0, 0, 277, 582,
	583, 584, 0, 278, 279, 585, 0, 0, 0, 280,
	281, 282, 283, 284, 285, 286, 0, 0, 288, 289,
	290, 287, 291, 0, 292, 0, 293, 294, 295, 296,
	297, 298, 0, 299, 300, 301, 0, 302, 303, 0,
	0, 0, 0, 0, 0, 0, 304, 305, 306, 307,
	0, 308, 586, 587, 0, 312, 309, 310, 0, 313,
	311, 0, 314, 315, 316, 0, 0, 317, 318, 319,
	0, 320, 321, 0, 322, 323, 324, 0, 325, 326,
	588, 327, 328, 329, 331, 333, 330, 334, 335, 336,
	337, 589, 590, 0, 0, 0, 0, 0, 0, 0,
	338, 339, 340, 591, 0, 0, 0, 341, 0, 342,
	0, 0, 0, 343, 344, 592, 593, 345, 346, 347,
	348, 349, 350, 351, 352, 0, 353, 594, 0, 595,
	354, 0, 355, 356, 357, 358, 359, 596, 597, 598,
	433, 0, 360, 361, 0, 362, 363, 364, 365, 0,
	0, 0, 0, 366, 367, 369, 0, 0, 368, 599,
	600, 0, 601, 0, 370, 371, 0, 602, 0, 372,
	373, 374, 0, 375, 0, 0, 0, 376, 377, 378,
	379, 380, 381, 0, 382, 384, 383, 0, 385, 603,
	0, 386, 387, 0, 0, 388, 0, 0, 0, 389,
	390, 0, 0, 391, 392, 393, 394, 0, 395, 396,
	398, 400, 397, 399, 401, 414, 402, 403, 404, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 416, 0,
	415, 0, 417, 418, 419, 424, 426, 427, 422, 423,
	425, 428, 429, 421, 0, 420, 0, 0, 0, 430,
	431, 0, 604, 432, 605, 434, 435, 0, 0, 436,
	0, 0, 0, 438, 439, 440, 0, 0, 441, 442,
	606, 0, 443, 0, 607, 444, 445, 437, 446, 447,
	448, 449, 450, 451, 452, 453, 0, 454, 455, 608,
	456, 457, 458, 609, 459, 460, 461, 610, 462, 611,
	463, 464, 0, 465, 0, 466, 467, 468, 469, 470,
	471, 472, 612, 473, 475, 474, 476, 0, 477, 0,
	0, 0, 0, 0, 478, 0, 480, 481, 482, 479,
	483, 484, 485, 486, 0, 487, 488, 489, 0, 490,
	491, 492, 493, 613, 494, 0, 495, 496, 665, 503,
	497, 498, 504, 505, 506, 507, 508, 0, 510, 511,
	509, 512, 513, 514, 0, 515, 499, 500, 516, 517,
	0, 518, 519, 520, 521, 522, 523, 614, 0, 524,
	0, 525, 526, 527, 528, 501, 529, 534, 615, 530,
	531, 532, 533, 616, 0, 536, 537, 0, 535, 0,
	538, 539, 540, 541, 542, 543, 332, 544, 0, 545,
	617, 618, 619, 620, 0, 554, 0, 546, 547, 548,
	621, 549, 622, 0, 550, 551, 552, 553, 0, 555,
	556, 0, 0, 557, 558, 559, 561, 562, 560, 563,
	0, 564, 0, 0, 565, 566, 567, 623, 624, 625,
	0, 569, 568, 570, 626, 661, 0, 248, 0, 571,
	572, 627, 573, 574, 575, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 254, 255, 256, 257, 258, 259,
	0, 260, 261, 0, 0, 0, 0, 0, 576, 0,
	0, 0, 0, 262, 263, 0, 264, 265, 266, 267,
	268, 577, 578, 0, 269, 579, 270, 580, 0, 581,
	271, 272, 273, 274, 275, 276, 0, 0, 0, 277,
	582, 583, 584, 0, 278, 279, 585, 0, 0, 0,
	280, 281, 282, 283, 284, 285, 286, 0, 0, 288,
	289, 290, 287, 291, 0, 292, 0, 293, 294, 295,
	296, 297, 298, 0, 299, 300, 301, 0, 302, 303,
	0, 0, 0, 0, 0, 0, 0, 304, 305, 306,
	307, 0, 308, 586, 587, 0, 312, 309, 310, 0,
	313, 311, 0, 314, 315, 316, 0, 0, 317, 318,
	319, 0, 320, 321, 0, 322, 323, 324, 0, 325,
	326, 588, 327, 328, 329, 331, 333, 330, 334, 335,
	336, 337, 589, 590, 0, 0, 0, 0, 0, 0,
	0, 338, 339, 340, 591, 0, 0, 0, 341, 0,
	342, 0, 0, 0, 343, 344, 592, 593, 345, 346,
	347, 348, 349, 350, 351, 352, 0, 353, 594, 0,
	595, 354, 0, 355, 356, 357, 358, 359, 596, 597,
	598, 433, 0, 360, 361, 0, 362, 363, 364, 365,
	0, 0, 0, 0, 366, 367, 369, 0, 0, 368,
	599, 600, 0, 601, 0, 370, 371, 0, 602, 0,
	372, 373, 374, 0, 375, 0, 0, 0, 376, 377,
	378, 379, 380, 381, 0, 382, 384, 383, 0, 385,
	603, 0, 386, 387, 0, 0, 388, 0, 0, 0,
	389, 390, 0, 0, 391, 392, 393, 394, 0, 395,
	396, 398, 400, 397, 399, 401, 414, 402, 403, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 416,
	0, 415, 0, 417, 418, 419, 424, 426, 427, 422,
	423, 425, 428, 429, 421, 0, 420, 0, 0, 0,
	430, 431, 0, 604, 432, 605, 434, 435, 0, 0,
	436, 0, 0, 0, 438, 439, 440, 0, 0, 441,
	442, 606, 0, 443, 0, 607, 444, 445, 437, 446,
	447, 448, 449, 450, 451, 452, 453, 0, 454, 455,
	608, 456, 457, 458, 609, 459, 460, 461, 610, 462,
	611, 463, 464, 0, 465, 0, 466, 467, 468, 469,
	470, 471, 472, 612, 473, 475, 474, 476, 0, 477,
	0, 0, 0, 0, 0, 478, 0, 480, 481, 482,
	479, 483, 484, 485, 486, 0, 487, 488, 489, 0,
	490, 491, 492, 493, 613, 494, 0, 495, 496, 502,
	503, 497, 498, 504, 505, 506, 507, 508, 0, 510,
	511, 509, 512, 513, 514, 0, 515, 499, 500, 516,
	517, 0, 518, 519, 520, 521, 522, 523, 614, 0,
	524, 0, 525, 526, 527, 528, 501, 529, 534, 615,
	530, 531, 532, 533, 616, 0, 536, 537, 0, 535,
	0, 538, 539, 540, 541, 542, 543, 332, 544, 0,
	545, 617, 618, 619, 620, 0, 554, 0, 546, 547,
	548, 621, 549, 622, 0, 550, 551, 552, 553, 0,
	555, 556, 0, 0, 557, 558, 559, 561, 562, 560,
	563, 0, 564, 0, 0, 565, 566, 567, 623, 624,
	625, 0, 569, 568, 570, 626, 655, 0, 248, 0,
	571, 572, 627, 573, 574, 575, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 254, 255, 256, 257, 258,
	259, 0, 260, 261, 0, 0, 0, 0, 0, 576,
	0, 0, 0, 0, 262, 263, 0, 264, 265, 266,
	267, 268, 577, 578, 0, 269, 579, 270, 580, 0,
	581, 271, 272, 273, 274, 275, 276, 0, 0, 0,
	277, 582, 583, 584, 0, 278, 279, 585, 0, 0,
	0, 280, 281, 282, 283, 284, 285, 286, 0, 0,
	288, 289, 290, 287, 291, 0, 292, 0, 293, 294,
	295, 296, 297, 298, 0, 299, 300, 301, 0, 302,
	303, 0, 0, 0, 0, 0, 0, 0, 304, 305,
	306, 307, 0, 308, 586, 587, 0, 312, 309, 310,
	0, 313, 311, 0, 314, 315, 316, 0, 0, 317,
	318, 319, 0, 320, 321, 0, 322, 323, 324, 0,
	325, 326, 588, 327, 328, 329, 331, 333, 330, 334,
	335, 336, 337, 589, 590, 0, 0, 0, 0, 0,
	0, 0, 338, 339, 340, 591, 0, 0, 0, 341,
	0, 342, 0, 0, 0, 343, 344, 592, 593, 345,
	346, 347, 348, 349, 350, 351, 352, 0, 353, 594,
	0, 595, 354, 0, 355, 356, 357, 358, 359, 596,
	597, 598, 433, 0, 360, 361, 0, 362, 363, 364,
	365, 0, 0, 0, 0, 366, 367, 369, 0, 0,
	368, 599, 600, 0, 601, 0, 370, 371, 0, 602,
	0, 372, 373, 374, 0, 375, 0, 0, 0, 376,
	377, 378, 379, 380, 381, 0, 382, 384, 383, 0,
	385, 603, 0, 386, 387, 0, 0, 388, 0, 0,
	0, 389, 390, 0, 0, 391, 392, 393, 394, 0,
	395, 396, 398, 400, 397, 399, 401, 414, 402, 403,
	404, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	416, 0, 415, 0, 417, 418, 419, 424, 426, 427,
	422, 423, 425, 428, 429, 421, 0, 420, 0, 0,
	0, 430, 431, 0, 604, 432, 605, 434, 435, 0,
	0, 436, 0, 0, 0, 438, 439, 440, 0, 0,
	441, 442, 606, 0, 443, 0, 607, 444, 445, 437,
	446, 447, 448, 449, 450, 451, 452, 453, 0, 454,
	455, 608, 456, 457, 458, 609, 459, 460, 461, 610,
	462, 611, 463, 464, 0, 465, 0, 466, 467, 468,
	469, 470, 471, 472, 612, 473, 475, 474, 476, 0,
	477, 0, 0, 0, 0, 0, 478, 0, 480, 481,
	482, 479, 483, 484, 485, 486, 0, 487, 488, 489,
	0, 490, 491, 492, 493, 613, 494, 0, 495, 496,
	502, 503, 497, 498, 504, 505, 506, 507, 508, 0,
	510, 511, 509, 512, 513, 514, 0, 515, 499, 500,
	516, 517, 0, 518, 519, 520, 521, 522, 523, 614,
	0, 524, 0, 525, 526, 527, 528, 501, 529, 534,
	615, 530, 531, 532, 533, 616, 0, 536, 537, 0,
	535, 0, 538, 539, 540, 541, 542, 543, 332, 544,
	0, 545, 617, 618, 619, 620, 0, 554, 0, 546,
	547, 548, 621, 549, 622, 0, 550, 551, 552, 553,
	0, 555, 556, 0, 0, 557, 558, 559, 561, 562,
	560, 563, 0, 564, 0, 0, 565, 566, 567, 623,
	624, 625, 0, 569, 568, 570, 626, 633, 0, 248,
	0, 571, 572, 627, 573, 574, 575, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 254, 255, 256, 257,
	258, 259, 0, 260, 261, 0, 0, 0, 0, 0,
	576, 0, 0, 0, 0, 262, 263, 0, 264, 265,
	266, 267, 268, 577, 578, 0, 269, 579, 270, 580,
	0, 581, 271, 272, 273, 274, 275, 276, 0, 0,
	0, 277, 582, 583, 584, 0, 278, 279, 585, 0,
	0, 0, 280, 281, 282, 283, 284, 285, 286, 0,
	0, 288, 289, 290, 287, 291, 0, 292, 0, 293,
	294, 295, 296, 297, 298, 0, 299, 300, 301, 0,
	302, 303, 0, 0, 0, 0, 0, 0, 0, 304,
	305, 306, 307, 0, 308, 586, 587, 0, 312, 309,
	310, 0, 313, 311, 0, 314, 315, 316, 0, 0,
	317, 318, 319, 0, 320, 321, 0, 322, 323, 324,
	0, 325, 326, 588, 327, 328, 329, 331, 333, 330,
	334, 335, 336, 337, 589, 590, 0, 0, 0, 0,
	0, 0, 0, 338, 339, 340, 591, 0, 0, 0,
	341, 0, 342, 0, 0, 0, 343, 344, 592, 593,
	345, 346, 347, 348, 349, 350, 351, 352, 0, 353,
	594, 0, 595, 354, 0, 355, 356, 357, 358, 359,
	596, 597, 598, 433, 0, 360, 361, 0, 362, 363,
	364, 365, 0, 0, 0, 0, 366, 367, 369, 0,
	0, 368, 599, 600, 0, 601, 0, 370, 371, 0,
	602, 0, 372, 373, 374, 0, 375, 0, 0, 0,
	376, 377, 378, 379, 380, 381, 0, 382, 384, 383,
	0, 385, 603, 0, 386, 387, 0, 0, 388, 0,
	0, 0, 389, 390, 0, 0, 391, 392, 393, 394,
	0, 395, 396, 398, 400, 397, 399, 401, 414, 402,
	403, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 416, 0, 415, 0, 417, 418, 419, 424, 426,
	427, 422, 423, 425, 428, 429, 421, 0, 420, 0,
	0, 0, 430, 431, 0, 604, 432, 605, 434, 435,
	0, 0, 436, 0, 0, 0, 438, 439, 440, 0,
	0, 441, 442, 606, 0, 443, 0, 607, 444, 445,
	437, 446, 447, 448, 449, 450, 451, 452, 453, 0,
	454, 455, 608, 456, 457, 458, 609, 459, 460, 461,
	610, 462, 611, 463, 464, 0, 465, 0, 466, 467,
	468, 469, 470, 471, 472, 612, 473, 475, 474, 476,
	0, 477, 0, 0, 0, 0, 0, 478, 0, 480,
	481, 482, 479, 483, 484, 485, 486, 0, 487, 488,
	489, 0, 490, 491, 492, 493, 613, 494, 0, 495,
	496, 502, 503, 497, 498, 504, 505, 506, 507, 508,
	0, 510, 511, 509, 512, 513, 514, 0, 515, 499,
	500, 516, 517, 0, 518, 519, 520, 521, 522, 523,
	614, 0, 524, 0, 525, 526, 527, 528, 501, 529,
	534, 615, 530, 531, 532, 533, 616, 0, 536, 537,
	0, 535, 0, 538, 539, 540, 541, 542, 543, 332,
	544, 0, 545, 617, 618, 619, 620, 0, 554, 0,
	546, 547, 548, 621, 549, 622, 0, 550, 551, 552,
	553, 0, 555, 556, 0, 0, 557, 558, 559, 561,
	562, 560, 563, 0, 564, 0, 0, 565, 566, 567,
	623, 624, 625, 248, 569, 568, 570, 626, 0, 0,
	0, 0, 571, 572, 627, 573, 574, 575, 0, 0,
	254, 255, 256, 257, 258, 259, 0, 260, 261, 0,
	0, 0, 0, 0, 576, 0, 0, 0, 0, 262,
	263, 0, 264, 265, 266, 267, 268, 577, 578, 0,
	269, 579, 270, 580, 0, 581, 271, 272, 273, 274,
	275, 276, 0, 0, 0, 277, 582, 583, 584, 0,
	278, 279, 585, 0, 0, 0, 280, 281, 282, 283,
	284, 285, 286, 0, 0, 288, 289, 290, 287, 291,
	0, 292, 0, 293, 294, 295, 296, 297, 298, 0,
	299, 300, 301, 0, 302, 303, 0, 0, 0, 0,
	0, 0, 0, 304, 305, 306, 307, 0, 308, 586,
	587, 0, 312, 309, 310, 0, 313, 311, 0, 314,
	315, 316, 0, 0, 317, 318, 319, 0, 320, 321,
	0, 322, 323, 324, 0, 325, 326, 588, 327, 328,
	329, 331, 333, 330, 334, 335, 336, 337, 589, 590,
	0, 0, 0, 0, 0, 0, 0, 338, 339, 340,
	591, 0, 0, 0, 341, 0, 342, 0, 0, 0,
	343, 344, 592, 593, 345, 346, 347, 348, 349, 350,
	351, 352, 0, 353, 594, 0, 595, 354, 0, 355,
	356, 357, 358, 359, 596, 597, 598, 433, 0, 360,
	361, 0, 362, 363, 364, 365, 0, 0, 0, 0,
	366, 367, 369, 0, 0, 368, 599, 600, 0, 601,
	0, 370, 371, 0, 602, 0, 372, 373, 374, 0,
	375, 0, 0, 0, 376, 377, 378, 379, 380, 381,
	0, 382, 384, 383, 0, 385, 603, 0, 386, 387,
	0, 0, 388, 0, 0, 0, 389, 390, 0, 0,
	391, 392, 393, 394, 0, 395, 396, 398, 400, 397,
	399, 401, 414, 402, 403, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 416, 0, 415, 0, 417,
	418, 419, 424, 426, 427, 422, 423, 425, 428, 429,
	421, 0, 420, 0, 0, 0, 430, 431, 0, 604,
	432, 605, 434, 435, 0, 0, 436, 0, 0, 0,
	438, 439, 440, 0, 0, 441, 442, 606, 0, 443,
	0, 607, 444, 445, 437, 446, 447, 448, 449, 450,
	451, 452, 453, 0, 454, 455, 608, 456, 457, 458,
	609, 459, 460, 461, 610, 462, 611, 463, 464, 0,
	465, 0, 466, 467, 468, 469, 470, 471, 472, 612,
	473, 475, 474, 476, 0, 477, 0, 0, 0, 0,
	0, 478, 0, 480, 481, 482, 479, 483, 484, 485,
	486, 0, 487, 488, 489, 0, 490, 491, 492, 493,
	613, 494, 0, 495, 496, 502, 503, 497, 498, 504,
	505, 506, 507, 508, 0, 510, 511, 509, 512, 513,
	514, 0, 515, 499, 500, 516, 517, 0, 518, 519,
	520, 521, 522, 523, 614, 0, 524, 0, 525, 526,
	527, 528, 501, 529, 534, 615, 530, 531, 532, 533,
	616, 0, 536, 537, 0, 535, 0, 538, 539, 540,
	541, 542, 543, 332, 544, 0, 545, 617, 618, 619,
	620, 0, 554, 0, 546, 547, 548, 621, 549, 622,
	0, 550, 551, 552, 553, 0, 555, 556, 0, 0,
	557, 558, 559, 561, 562, 560, 563, 0, 564, 0,
	0, 565, 566, 567, 623, 624, 625, 248, 569, 568,
	570, 626, 0, 0, 0, 0, 571, 572, 627, 573,
	574, 575, 0, 0, 254, 255, 256, 257, 258, 259,
	0, 260, 261, 0, 0, 0, 0, 0, 576, 0,
	0, 0, 0, 262, 263, 0, 264, 265, 266, 267,
	268, 577, 578, 0, 269, 579, 270, 580, 0, 581,
	271, 272, 273, 274, 275, 276, 0, 0, 0, 277,
	582, 583, 584, 0, 278, 279, 585, 0, 0, 0,
	280, 281, 282, 283, 284, 285, 286, 0, 0, 288,
	289, 290, 287, 291, 0, 292, 0, 293, 294, 295,
	296, 297, 298, 0, 299, 300, 301, 0, 302, 303,
	0, 0, 0, 0, 0, 0, 0, 304, 305, 306,
	307, 0, 308, 586, 587, 0, 312, 309, 310, 0,
	313, 311, 0, 314, 315, 316, 0, 0, 317, 318,
	319, 0, 320, 321, 0, 322, 323, 324, 0, 325,
	326, 588, 327, 328, 329, 331, 333, 330, 334, 335,
	336, 337, 589, 590, 0, 0, 0, 0, 0, 0,
	0, 338, 339, 340, 591, 0, 0, 0, 341, 0,
	342, 0, 0, 0, 343, 344, 592, 593, 345, 346,
	347, 348, 349, 350, 351, 352, 0, 353, 594, 0,
	595, 354, 0, 355, 356, 357, 358, 359, 3277, 597,
	598, 433, 0, 360, 361, 0, 362, 363, 364, 365,
	0, 0, 0, 0, 366, 367, 369, 0, 0, 368,
	599, 600, 0, 601, 0, 370, 371, 0, 602, 0,
	372, 373, 374, 0, 375, 0, 0, 0, 376, 377,
	378, 379, 380, 381, 0, 382, 384, 383, 0, 385,
	603, 0, 386, 387, 0, 0, 388, 0, 0, 0,
	389, 390, 0, 0, 391, 392, 393, 394, 0, 395,
	396, 398, 400, 397, 399, 401, 414, 402, 403, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 416,
	0, 415, 0, 417, 418, 419, 424, 426, 427, 422,
	423, 425, 428, 429, 421, 0, 420, 0, 0, 0,
	430, 431, 0, 604, 432, 605, 434, 435, 0, 0,
	436, 0, 0, 0, 438, 439, 440, 0, 0, 441,
	442, 606, 0, 443, 0, 607, 444, 445, 437, 446,
	447, 448, 449, 450, 451, 452, 453, 0, 454, 455,
	608, 456, 457, 458, 609, 459, 460, 461, 610, 462,
	611, 463, 464, 0, 465, 0, 466, 467, 468, 469,
	470, 471, 472, 612, 473, 475, 474, 476, 0, 477,
	0, 0, 0, 0, 0, 478, 0, 480, 481, 482,
	479, 483, 484, 485, 486, 0, 487, 488, 489, 0,
	490, 491, 492, 493, 613, 494, 0, 495, 496, 502,
	503, 497, 498, 504, 505, 506, 507, 508, 0, 510,
	511, 509, 512, 513, 514, 0, 515, 499, 500, 516,
	517, 0, 518, 519, 520, 521, 522, 523, 614, 0,
	524, 0, 525, 526, 527, 528, 501, 529, 534, 615,
	530, 531, 532, 533, 616, 0, 536, 537, 0, 535,
	0, 538, 539, 540, 541, 542, 543, 332, 544, 0,
	545, 617, 618, 619, 620, 0, 554, 0, 546, 547,
	548, 621, 549, 622, 0, 550, 551, 552, 553, 0,
	555, 556, 0, 0, 557, 558, 559, 561, 562, 560,
	563, 0, 564, 0, 0, 565, 566, 567, 623, 624,
	625, 248, 569, 568, 570, 626, 0, 0, 0, 0,
	571, 572, 627, 573, 574, 575, 0, 0, 254, 255,
	256, 257, 258, 259, 0, 260, 261, 0, 0, 0,
	0, 0, 576, 0, 0, 0, 0, 262, 263, 0,
	264, 265, 266, 267, 268, 577, 578, 0, 269, 579,
	270, 580, 0, 581, 271, 272, 273, 274, 275, 276,
	0, 0, 0, 277, 582, 583, 584, 0, 278, 279,
	585, 0, 0, 0, 280, 281, 282, 283, 284, 285,
	286, 0, 0, 288, 289, 290, 287, 291, 0, 292,
	0, 293, 294, 295, 296, 297, 298, 0, 299, 300,
	301, 0, 302, 303, 0, 0, 0, 0, 0, 0,
	0, 304, 305, 306, 307, 0, 308, 586, 587, 0,
	312, 309, 310, 0, 313, 311, 0, 314, 315, 316,
	0, 0, 317, 318, 319, 0, 320, 321, 0, 322,
	323, 324, 0, 325, 326, 588, 327, 328, 329, 331,
	333, 330, 334, 335, 336, 337, 589, 590, 0, 0,
	0, 0, 0, 0, 0, 338, 339, 340, 591, 0,
	0, 0, 341, 0, 342, 0, 0, 0, 343, 344,
	592, 593, 345, 346, 347, 348, 349, 350, 351, 352,
	0, 353, 594, 0, 595, 354, 0, 355, 356, 357,
	358, 359, 3225, 597, 598, 433, 0, 360, 361, 0,
	362, 363, 364, 365, 0, 0, 0, 0, 366, 367,
	369, 0, 0, 368, 599, 600, 0, 601, 0, 370,
	371, 0, 602, 0, 372, 373, 374, 0, 375, 0,
	0, 0, 376, 377, 378, 379, 380, 381, 0, 382,
	384, 383, 0, 385, 603, 0, 386, 387, 0, 0,
	388, 0, 0, 0, 389, 390, 0, 0, 391, 392,
	393, 394, 0, 395, 396, 398, 400, 397, 399, 401,
	414, 402, 403, 404, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 416, 0, 415, 0, 417, 418, 419,
	424, 426, 427, 422, 423, 425, 428, 429, 421, 0,
	420, 0, 0, 0, 430, 431, 0, 604, 432, 605,
	434, 435, 0, 0, 436, 0, 0, 0, 438, 439,
	440, 0, 0, 441, 442, 606, 0, 443, 0, 607,
	444, 445, 437, 446, 447, 448, 449, 450, 451, 452,
	453, 0, 454, 455, 608, 456, 457, 458, 609, 459,
	460, 461, 610, 462, 611, 463, 464, 0, 465, 0,
	466, 467, 468, 469, 470, 471, 472, 612, 473, 475,
	474, 476, 0, 477, 0, 0, 0, 0, 0, 478,
	0, 480, 481, 482, 479, 483, 484, 485, 486, 0,
	487, 488, 489, 0, 490, 491, 492, 493, 613, 494,
	0, 495, 496, 502, 503, 497, 498, 504, 505, 506,
	507, 508, 0, 510, 511, 509, 512, 513, 514, 0,
	515, 499, 500, 516, 517, 0, 518, 519, 520, 521,
	522, 523, 614, 0, 524, 0, 525, 526, 527, 528,
	501, 529, 534, 615, 530, 531, 532, 533, 616, 0,
	536, 537, 0, 535, 0, 538, 539, 540, 541, 542,
	543, 332, 544, 0, 545, 617, 618, 619, 620, 0,
	554, 0, 546, 547, 548, 621, 549, 622, 0, 550,
	551, 552, 553, 0, 555, 556, 0, 0, 557, 558,
	559, 561, 562, 560, 563, 0, 564, 0, 0, 565,
	566, 567, 623, 624, 625, 248, 569, 568, 570, 626,
	0, 0, 0, 0, 571, 572, 627, 573, 574, 575,
	0, 0, 254, 255, 256, 257, 258, 259, 0, 260,
	261, 0, 0, 0, 0, 0, 576, 0, 0, 0,
	0, 262, 263, 0, 264, 265, 266, 267, 268, 577,
	578, 0, 269, 579, 270, 580, 0, 581, 271, 272,
	273, 274, 275, 276, 0, 0, 0, 277, 582, 583,
	584, 0, 278, 279, 585, 0, 0, 0, 280, 281,
	282, 283, 284, 285, 286, 0, 0, 288, 289, 290,
	287, 291, 0, 292, 0, 293, 294, 295, 296, 297,
	298, 0, 299, 300, 301, 0, 302, 303, 0, 0,
	0, 0, 0, 0, 0, 304, 305, 306, 307, 0,
	308, 586, 587, 0, 312, 309, 310, 0, 313, 311,
	0, 314, 315, 316, 0, 0, 317, 318, 319, 0,
	320, 321, 0, 322, 323, 324, 0, 325, 326, 588,
	327, 328, 329, 331, 333, 330, 334, 335, 336, 337,
	589, 590, 0, 0, 0, 0, 0, 0, 0, 338,
	339, 340, 591, 0, 0, 0, 341, 0, 342, 0,
	0, 0, 343, 344, 592, 593, 345, 346, 347, 348,
	349, 350, 351, 352, 0, 353, 594, 0, 595, 354,
	0, 355, 356, 357, 358, 359, 3166, 597, 598, 433,
	0, 360, 361, 0, 362, 363, 364, 365, 0, 0,
	0, 0, 366, 367, 369, 0, 0, 368, 599, 600,
	0, 601, 0, 370, 371, 0, 602, 0, 372, 373,
	374, 0, 375, 0, 0, 0, 376, 377, 378, 379,
	380, 381, 0, 382, 384, 383, 0, 385, 603, 0,
	386, 387, 0, 0, 388, 0, 0, 0, 389, 390,
	0, 0, 391, 392, 393, 394, 0, 395, 396, 398,
	400, 397, 399, 401, 414, 402, 403, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 416, 0, 415,
	0, 417, 418, 419, 424, 426, 427, 422, 423, 425,
	428, 429, 421, 0, 420, 0, 0, 0, 430, 431,
	0, 604, 432, 605, 434, 435, 0, 0, 436, 0,
	0, 0, 438, 439, 440, 0, 0, 441, 442, 606,
	0, 443, 0, 607, 444, 445, 437, 446, 447, 448,
	449, 450, 451, 452, 453, 0, 454, 455, 608, 456,
	457, 458, 609, 459, 460, 461, 610, 462, 611, 463,
	464, 0, 465, 0, 466, 467, 468, 469, 470, 471,
	472, 612, 473, 475, 474, 476, 0, 477, 0, 0,
	0, 0, 0, 478, 0, 480, 481, 482, 479, 483,
	484, 485, 486, 0, 487, 488, 489, 0, 490, 491,
	492, 493, 613, 494, 0, 495, 496, 502, 503, 497,
	498, 504, 505, 506, 507, 508, 0, 510, 511, 509,
	512, 513, 514, 0, 515, 499, 500, 516, 517, 0,
	518, 519, 520, 521, 522, 523, 614, 0, 524, 0,
	525, 526, 527, 528, 501, 529, 534, 615, 530, 531,
	532, 533, 616, 0, 536, 537, 0, 535, 0, 538,
	539, 540, 541, 542, 543, 332, 544, 0, 545, 617,
	618, 619, 620, 0, 554, 0, 546, 547, 548, 621,
	549, 622, 0, 550, 551, 552, 553, 0, 555, 556,
	0, 0, 557, 558, 559, 561, 562, 560, 563, 0,
	564, 0, 0, 565, 566, 567, 623, 624, 625, 248,
	569, 568, 570, 626, 0, 0, 0, 0, 571, 572,
	627, 573, 574, 575, 0, 0, 254, 255, 256, 257,
	258, 259, 0, 260, 261, 0, 0, 0, 0, 0,
	576, 0, 0, 0, 0, 262, 263, 0, 264, 265,
	266, 267, 268, 577, 578, 0, 269, 579, 270, 580,
	0, 581, 271, 272, 273, 274, 275, 276, 0, 0,
	0, 277, 582, 583, 584, 0, 278, 279, 585, 0,
	0, 0, 280, 281, 282, 283, 284, 285, 286, 0,
	0, 288, 289, 290, 287, 291, 0, 292, 0, 293,
	294, 295, 296, 297, 298, 0, 299, 300, 301, 0,
	302, 303, 0, 0, 0, 0, 0, 0, 0, 304,
	305, 306, 307, 0, 308, 586, 587, 0, 312, 309,
	310, 0, 313, 311, 0, 314, 315, 316, 0, 0,
	317, 318, 319, 0, 320, 321, 0, 322, 323, 324,
	0, 325, 326, 588, 327, 328, 329, 331, 333, 330,
	334, 335, 336, 337, 589, 590, 0, 0, 0, 0,
	0, 0, 0, 338, 339, 340, 591, 0, 0, 0,
	341, 0, 342, 0, 0, 0, 343, 344, 592, 593,
	345, 346, 347, 348, 349, 350, 351, 352, 0, 353,
	594, 0, 595, 354, 0, 355, 356, 357, 358, 359,
	3164, 597, 598, 433, 0, 360, 361, 0, 362, 363,
	364, 365, 0, 0, 0, 0, 366, 367, 369, 0,
	0, 368, 599, 600, 0, 601, 0, 370, 371, 0,
	602, 0, 372, 373, 374, 0, 375, 0, 0, 0,
	376, 377, 378, 379, 380, 381, 0, 382, 384, 383,
	0, 385, 603, 0, 386, 387, 0, 0, 388, 0,
	0, 0, 389, 390, 0, 0, 391, 392, 393, 394,
	0, 395, 396, 398, 400, 397, 399, 401, 414, 402,
	403, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 416, 0, 415, 0, 417, 418, 419, 424, 426,
	427, 422, 423, 425, 428, 429, 421, 0, 420, 0,
	0, 0, 430, 431, 0, 604, 432, 605, 434, 435,
	0, 0, 436, 0, 0, 0, 438, 439, 440, 0,
	0, 441, 442, 606, 0, 443, 0, 607, 444, 445,
	437, 446, 447, 448, 449, 450, 451, 452, 453, 0,
	454, 455, 608, 456, 457, 458, 609, 459, 460, 461,
	610, 462, 611, 463, 464, 0, 465, 0, 466, 467,
	468, 469, 470, 471, 472, 612, 473, 475, 474, 476,
	0, 477, 0, 0, 0, 0, 0, 478, 0, 480,
	481, 482, 479, 483, 484, 485, 486, 0, 487, 488,
	489, 0, 490, 491, 492, 493, 613, 494, 0, 495,
	496, 502, 503, 497, 498, 504, 505, 506, 507, 508,
	0, 510, 511, 509, 512, 513, 514, 0, 515, 499,
	500, 516, 517, 0, 518, 519, 520, 521, 522, 523,
	614, 0, 524, 0, 525, 526, 527, 528, 501, 529,
	534, 615, 530, 531, 532, 533, 616, 0, 536, 537,
	0, 535, 0, 538, 539, 540, 541, 542, 543, 332,
	544, 0, 545, 617, 618, 619, 620, 0, 554, 0,
	546, 547, 548, 621, 549, 622, 0, 550, 551, 552,
	553, 0, 555, 556, 0, 0, 557, 558, 559, 561,
	562, 560, 563, 0, 564, 0, 0, 565, 566, 567,
	623, 624, 625, 248, 569, 568, 570, 626, 0, 0,
	0, 0, 571, 572, 627, 573, 574, 575, 0, 0,
	254, 255, 256, 257, 258, 259, 0, 260, 261, 0,
	0, 0, 0, 0, 576, 0, 0, 0, 0, 262,
	263, 0, 264, 265, 266, 267, 268, 577, 578, 0,
	269, 579, 270, 580, 0, 581, 271, 272, 273, 274,
	275, 276, 0, 0, 0, 277, 582, 583, 584, 0,
	278, 279, 585, 0, 0, 0, 280, 281, 282, 283,
	284, 285, 286, 0, 0, 288, 289, 290, 287, 291,
	0, 292, 0, 293, 294, 295, 296, 297, 298, 0,
	299, 300, 301, 0, 302, 303, 0, 0, 0, 0,
	0, 0, 0, 304, 305, 306, 307, 0, 308, 586,
	587, 0, 312, 309, 310, 0, 313, 311, 0, 314,
	315, 316, 0, 0, 317, 318, 319, 0, 320, 321,
	0, 322, 323, 324, 0, 325, 326, 588, 327, 328,
	329, 331, 333, 330, 334, 335, 336, 337, 589, 590,
	0, 0, 0, 0, 0, 0, 0, 338, 339, 340,
	591, 0, 0, 0, 341, 0, 342, 0, 0, 0,
	343, 344, 592, 593, 345, 346, 347, 348, 349, 350,
	351, 352, 0, 353, 594, 0, 595, 354, 0, 355,
	356, 357, 358, 359, 3150, 597, 598, 433, 0, 360,
	361, 0, 362, 363, 364, 365, 0, 0, 0, 0,
	366, 367, 369, 0, 0, 368, 599, 600, 0, 601,
	0, 370, 371, 0, 602, 0, 372, 373, 374, 0,
	375, 0, 0, 0, 376, 377, 378, 379, 380, 381,
	0, 382, 384, 383, 0, 385, 603, 0, 386, 387,
	0, 0, 388, 0, 0, 0, 389, 390, 0, 0,
	391, 392, 393, 394, 0, 395, 396, 398, 400, 397,
	399, 401, 414, 402, 403, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 416, 0, 415, 0, 417,
	418, 419, 424, 426, 427, 422, 423, 425, 428, 429,
	421, 0, 420, 0, 0, 0, 430, 431, 0, 604,
	432, 605, 434, 435, 0, 0, 436, 0, 0, 0,
	438, 439, 440, 0, 0, 441, 442, 606, 0, 443,
	0, 607, 444, 445, 437, 446, 447, 448, 449, 450,
	451, 452, 453, 0, 454, 455, 608, 456, 457, 458,
	609, 459, 460, 461, 610, 462, 611, 463, 464, 0,
	465, 0, 466, 467, 468, 469, 470, 471, 472, 612,
	473, 475, 474, 476, 0, 477, 0, 0, 0, 0,
	0, 478, 0, 480, 481, 482, 479, 483, 484, 485,
	486, 0, 487, 488, 489, 0, 490, 491, 492, 493,
	613, 494, 0, 495, 496, 502, 503, 497, 498, 504,
	505, 506, 507, 508, 0, 510, 511, 509, 512, 513,
	514, 0, 515, 499, 500, 516, 517, 0, 518, 519,
	520, 521, 522, 523, 614, 0, 524, 0, 525, 526,
	527, 528, 501, 529, 534, 615, 530, 531, 532, 533,
	616, 0, 536, 537, 0, 535, 0, 538, 539, 540,
	541, 542, 543, 332, 544, 0, 545, 617, 618, 619,
	620, 0, 554, 0, 546, 547, 548, 621, 549, 622,
	0, 550, 551, 552, 553, 0, 555, 556, 0, 0,
	557, 558, 559, 561, 562, 560, 563, 0, 564, 0,
	0, 565, 566, 567, 623, 624, 625, 248, 569, 568,
	570, 626, 0, 0, 0, 0, 571, 572, 627, 573,
	574, 575, 0, 0, 254, 255, 256, 257, 258, 259,
	0, 260, 261, 0, 0, 0, 0, 0, 576, 0,
	0, 0, 0, 262, 263, 0, 264, 265, 266, 267,
	268, 577, 578, 0, 269, 579, 270, 580, 0, 581,
	271, 272, 273, 274, 275, 276, 0, 0, 0, 277,
	582, 583, 584, 0, 278, 279, 585, 0, 0, 0,
	280, 281, 282, 283, 284, 285, 286, 0, 0, 288,
	289, 290, 287, 291, 0, 292, 0, 293, 294, 295,
	296, 297, 298, 0, 299, 300, 301, 0, 302, 303,
	0, 0, 0, 0, 0, 0, 0, 304, 305, 306,
	307, 0, 308, 586, 587, 0, 312, 309, 310, 0,
	313, 311, 0, 314, 315, 316, 0, 0, 317, 318,
	319, 0, 320, 321, 0, 322, 323, 324, 0, 325,
	326, 588, 327, 328, 329, 331, 333, 330, 334, 335,
	336, 337, 589, 590, 0, 0, 0, 0, 0, 0,
	0, 338, 339, 340, 591, 0, 0, 0, 341, 0,
	342, 0, 0, 0, 343, 344, 592, 593, 345, 346,
	347, 348, 349, 350, 351, 352, 0, 353, 594, 0,
	595, 354, 0, 355, 356, 357, 358, 359, 2749, 597,
	598, 433, 0, 360, 361, 0, 362, 363, 364, 365,
	0, 0, 0, 0, 366, 367, 369, 0, 0, 368,
	599, 600, 0, 601, 0, 370, 371, 0, 602, 0,
	372, 373, 374, 0, 375, 0, 0, 0, 376, 377,
	378, 379, 380, 381, 0, 382, 384, 383, 0, 385,
	603, 0, 386, 387, 0, 0, 388, 0, 0, 0,
	389, 390, 0, 0, 391, 392, 393, 394, 0, 395,
	396, 398, 400, 397, 399, 401, 414, 402, 403, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 416,
	0, 415, 0, 417, 418, 419, 424, 426, 427, 422,
	423, 425, 428, 429, 421, 0, 420, 0, 0, 0,
	430, 431, 0, 604, 432, 605, 434, 435, 0, 0,
	436, 0, 0, 0, 438, 439, 440, 0, 0, 441,
	442, 606, 0, 443, 0, 607, 444, 445, 437, 446,
	447, 448, 449, 450, 451, 452, 453, 0, 454, 455,
	608, 456, 457, 458, 609, 459, 460, 461, 610, 462,
	611, 463, 464, 0, 465, 0, 466, 467, 468, 469,
	470, 471, 472, 612, 473, 475, 474, 476, 0, 477,
	0, 0, 0, 0, 0, 478, 0, 480, 481, 482,
	479, 483, 484, 485, 486, 0, 487, 488, 489, 0,
	490, 491, 492, 493, 613, 494, 0, 495, 496, 502,
	503, 497, 498, 504, 505, 506, 507, 508, 0, 510,
	511, 509, 512, 513, 514, 0, 515, 499, 500, 516,
	517, 0, 518, 519, 520, 521, 522, 523, 614, 0,
	524, 0, 525, 526, 527, 528, 501, 529, 534, 615,
	530, 531, 532, 533, 616, 0, 536, 537, 0, 535,
	0, 538, 539, 540, 541, 542, 543, 332, 544, 0,
	545, 617, 618, 619, 620, 0, 554, 0, 546, 547,
	548, 621, 549, 622, 0, 550, 551, 552, 553, 0,
	555, 556, 0, 0, 557, 558, 559, 561, 562, 560,
	563, 0, 564, 0, 0, 565, 566, 567, 623, 624,
	625, 248, 569, 568, 570, 626, 0, 0, 0, 0,
	571, 572, 627, 573, 574, 575, 0, 0, 254, 255,
	256, 257, 258, 259, 0, 260, 261, 0, 0, 0,
	0, 0, 576, 0, 0, 0, 0, 262, 263, 0,
	264, 265, 266, 267, 268, 577, 578, 0, 269, 579,
	270, 580, 0, 581, 271, 272, 273, 274, 275, 276,
	0, 0, 0, 277, 582, 583, 584, 0, 278, 279,
	585, 0, 0, 0, 280, 281, 282, 283, 284, 285,
	286, 0, 0, 288, 289, 290, 287, 291, 0, 292,
	0, 293, 294, 295, 296, 297, 298, 0, 299, 300,
	301, 0, 302, 303, 0, 0, 0, 0, 0, 0,
	0, 304, 305, 306, 307, 0, 308, 586, 587, 0,
	312, 309, 310, 0, 313, 311, 0, 314, 315, 316,
	0, 0, 317, 318, 319, 0, 320, 321, 0, 322,
	323, 324, 0, 325, 326, 588, 327, 328, 329, 331,
	333, 330, 334, 335, 336, 337, 589, 590, 0, 0,
	0, 0, 0, 0, 0, 338, 339, 340, 591, 0,
	0, 0, 341, 0, 342, 0, 0, 0, 343, 344,
	592, 593, 345, 346, 347, 348, 349, 350, 351, 352,
	0, 353, 594, 0, 595, 354, 0, 355, 356, 357,
	358, 359, 596, 597, 598, 433, 0, 360, 361, 0,
	362, 363, 364, 365, 0, 0, 0, 0, 366, 367,
	369, 0, 0, 368, 599, 600, 0, 601, 0, 370,
	371, 0, 602, 0, 372, 373, 374, 0, 375, 0,
	0, 0, 376, 377, 378, 379, 380, 381, 0, 382,
	384, 383, 0, 385, 603, 0, 386, 387, 0, 0,
	388, 0, 0, 0, 389, 390, 0, 0, 391, 392,
	393, 394, 0, 395, 396, 398, 400, 397, 399, 401,
	414, 402, 403, 404, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 416, 0, 415, 0, 417, 418, 419,
	424, 426, 427, 422, 423, 425, 428, 429, 421, 0,
	420, 0, 0, 0, 430, 431, 0, 604, 432, 605,
	434, 435, 0, 0, 436, 0, 0, 0, 438, 439,
	440, 0, 0, 441, 442, 606, 0, 443, 0, 607,
	444, 445, 437, 446, 447, 448, 449, 450, 451, 452,
	453, 0, 454, 455, 608, 456, 457, 458, 609, 459,
	460, 461, 610, 462, 611, 463, 464, 0, 465, 0,
	466, 467, 468, 469, 470, 471, 472, 612, 473, 475,
	474, 476, 0, 477, 0, 0, 0, 0, 0, 478,
	0, 480, 481, 482, 479, 483, 484, 485, 486, 0,
	487, 488, 489, 0, 490, 491, 492, 493, 613, 494,
	0, 495, 496, 665, 503, 497, 498, 504, 505, 506,
	507, 508, 0, 510, 511, 509, 512, 513, 514, 0,
	515, 499, 500, 516, 517, 0, 518, 519, 520, 521,
	522, 523, 614, 0, 524, 0, 525, 526, 527, 528,
	501, 529, 534, 615, 530, 531, 532, 533, 616, 0,
	536, 537, 0, 535, 0, 538, 539, 540, 541, 542,
	543, 332, 544, 0, 545, 617, 618, 619, 620, 0,
	554, 0, 546, 547, 548, 621, 549, 622, 0, 550,
	551, 552, 553, 0, 555, 556, 0, 0, 557, 558,
	559, 561, 562, 560, 563, 0, 564, 0, 0, 565,
	566, 567, 623, 624, 625, 248, 569, 568, 570, 626,
	0, 0, 0, 0, 571, 572, 627, 573, 574, 575,
	0, 0, 254, 255, 256, 257, 258, 259, 0, 260,
	261, 0, 0, 0, 0, 0, 576, 0, 2097, 0,
	0, 262, 263, 0, 264, 265, 266, 267, 268, 577,
	578, 0, 269, 579, 270, 580, 0, 581, 271, 272,
	273, 274, 275, 276, 0, 0, 0, 277, 582, 583,
	584, 0, 278, 279, 585, 0, 0, 0, 280, 281,
	282, 283, 284, 285, 286, 0, 0, 288, 289, 290,
	287, 291, 0, 292, 0, 293, 294, 295, 296, 297,
	298, 0, 299, 300, 301, 0, 302, 303, 0, 0,
	0, 0, 0, 0, 0, 304, 305, 306, 307, 0,
	308, 586, 587, 0, 312, 309, 310, 0, 313, 311,
	0, 314, 315, 316, 0, 0, 317, 318, 319, 0,
	320, 321, 0, 322, 323, 324, 0, 325, 326, 588,
	327, 328, 329, 331, 333, 330, 334, 335, 336, 337,
	589, 590, 0, 0, 0, 0, 0, 0, 0, 338,
	339, 340, 591, 0, 0, 0, 341, 0, 342, 0,
	0, 0, 343, 344, 592, 593, 345, 346, 347, 348,
	349, 350, 351, 352, 0, 353, 594, 0, 595, 354,
	0, 355, 356, 357, 358, 359, 596, 597, 598, 433,
	0, 360, 361, 0, 362, 363, 364, 365, 0, 0,
	0, 0, 366, 367, 369, 0, 0, 368, 599, 600,
	0, 601, 0, 370, 371, 0, 602, 0, 372, 373,
	374, 0, 375, 0, 0, 0, 376, 377, 378, 379,
	380, 381, 0, 382, 384, 383, 0, 385, 603, 0,
	386, 387, 0, 0, 388, 0, 0, 0, 389, 390,
	0, 0, 391, 392, 393, 394, 0, 395, 396, 398,
	400, 397, 399, 401, 414, 402, 403, 404, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 416, 0, 415,
	0, 417, 418, 419, 424, 426, 427, 422, 423, 425,
	428, 429, 421, 0, 420, 0, 0, 0, 430, 431,
	0, 604, 432, 605, 434, 435, 0, 0, 436, 0,
	0, 0, 438, 439, 440, 0, 0, 441, 442, 606,
	0, 443, 0, 607, 444, 445, 437, 446, 447, 448,
	449, 450, 451, 452, 453, 0, 454, 455, 608, 456,
	457, 458, 609, 459, 460, 461, 610, 462, 611, 463,
	464, 0, 465, 0, 466, 467, 468, 469, 470, 471,
	472, 612, 473, 475, 474, 476, 0, 477, 0, 0,
	0, 0, 0, 478, 0, 480, 481, 482, 479, 483,
	484, 485, 486, 0, 487, 488, 489, 0, 490, 491,
	492, 493, 613, 494, 0, 495, 496, 502, 503, 497,
	498, 504, 505, 506, 507, 508, 0, 510, 511, 509,
	512, 513, 514, 0, 0, 499, 500, 516, 517, 0,
	518, 519, 520, 521, 522, 523, 614, 0, 524, 0,
	525, 526, 527, 528, 501, 529, 534, 615, 530, 531,
	532, 533, 616, 0, 536, 537, 0, 535, 0, 538,
	539, 540, 541, 542, 543, 332, 544, 0, 545, 617,
	618, 619, 620, 0, 554, 0, 546, 547, 548, 621,
	549, 622, 0, 550, 551, 552, 553, 0, 555, 556,
	0, 0, 557, 558, 559, 561, 562, 560, 563, 0,
	564, 0, 0, 565, 566, 567, 623, 624, 625, 248,
	569, 568, 570, 626, 0, 0, 0, 0, 571, 572,
	627, 573, 574, 575, 0, 0, 254, 255, 256, 257,
	258, 259, 0, 260, 261, 0, 0, 0, 0, 0,
	576, 0, 0, 0, 0, 262, 263, 0, 264, 265,
	266, 267, 268, 577, 578, 0, 269, 579, 270, 580,
	0, 581, 271, 272, 273, 274, 275, 276, 0, 0,
	0, 277, 582, 583, 584, 0, 278, 279, 585, 0,
	0, 0, 280, 281, 282, 283, 284, 285, 286, 0,
	0, 288, 289, 290, 287, 291, 0, 292, 0, 293,
	294, 295, 296, 297, 298, 0, 299, 300, 301, 0,
	302, 303, 0, 0, 0, 0, 0, 0, 0, 304,
	305, 306, 307, 0, 308, 586, 587, 0, 312, 309,
	310, 0, 313, 311, 0, 314, 315, 316, 0, 0,
	317, 318, 319, 0, 320, 321, 0, 322, 323, 324,
	0, 325, 326, 588, 327, 328, 329, 331, 333, 330,
	334, 335, 336, 337, 589, 590, 0, 0, 0, 0,
	0, 0, 0, 338, 339, 340, 591, 0, 0, 0,
	341, 0, 342, 0, 0, 0, 343, 344, 592, 593,
	345, 346, 347, 348, 349, 350, 351, 352, 0, 353,
	594, 0, 595, 354, 0, 355, 356, 357, 358, 359,
	1455, 597, 598, 433, 0, 360, 361, 0, 362, 363,
	364, 365, 0, 0, 0, 0, 366, 367, 369, 0,
	0, 368, 599, 600, 0, 601, 0, 370, 371, 0,
	602, 0, 372, 373, 374, 0, 375, 0, 0, 0,
	376, 377, 378, 379, 380, 381, 0, 382, 384, 383,
	0, 385, 603, 0, 386, 387, 0, 0, 388, 0,
	0, 0, 389, 390, 0, 0, 391, 392, 393, 394,
	0, 395, 396, 398, 400, 397, 399, 401, 414, 402,
	403, 404, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 416, 0, 415, 0, 417, 418, 419, 424, 426,
	427, 422, 423, 425, 428, 429, 421, 0, 420, 0,
	0, 0, 430, 431, 0, 604, 432, 605, 434, 435,
	0, 0, 436, 0, 0, 0, 438, 439, 440, 0,
	0, 441, 442, 606, 0, 443, 0, 607, 444, 445,
	437, 446, 447, 448, 449, 450, 451, 452, 453, 0,
	454, 455, 608, 456, 457, 458, 609, 459, 460, 461,
	610, 462, 611, 463, 464, 0, 465, 0, 466, 467,
	468, 469, 470, 471, 472, 612, 473, 475, 474, 476,
	0, 477, 0, 0, 0, 0, 0, 478, 0, 480,
	481, 482, 479, 483, 484, 485, 486, 0, 487, 488,
	489, 0, 490, 491, 492, 493, 613, 494, 0, 495,
	496, 502, 503, 497, 498, 504, 505, 506, 507, 508,
	0, 510, 511, 509, 512, 513, 514, 0, 515, 499,
	500, 516, 517, 0, 518, 519, 520, 521, 522, 523,
	614, 0, 524, 0, 525, 526, 527, 528, 501, 529,
	534, 615, 530, 531, 532, 533, 616, 0, 536, 537,
	0, 535, 0, 538, 539, 540, 541, 542, 543, 332,
	544, 0, 545, 617, 618, 619, 620, 0, 554, 0,
	546, 547, 548, 621, 549, 622, 0, 550, 551, 552,
	553, 0, 555, 556, 0, 0, 557, 558, 559, 561,
	562, 560, 563, 0, 564, 0, 0, 565, 566, 567,
	623, 624, 625, 248, 569, 568, 570, 626, 0, 0,
	0, 0, 571, 572, 627, 573, 574, 575, 0, 0,
	254, 255, 256, 257, 258, 259, 0, 260, 261, 0,
	0, 0, 0, 0, 576, 0, 0, 0, 0, 262,
	263, 0, 264, 265, 266, 267, 268, 577, 578, 0,
	269, 579, 270, 580, 0, 581, 271, 272, 273, 274,
	275, 276, 0, 0, 0, 277, 582, 583, 584, 0,
	278, 279, 585, 0, 0, 0, 280, 281, 282, 283,
	284, 285, 286, 0, 0, 288, 289, 290, 287, 291,
	0, 292, 0, 293, 294, 295, 296, 297, 298, 0,
	299, 300, 301, 0, 302, 303, 0, 0, 0, 0,
	0, 0, 0, 304, 305, 306, 307, 0, 308, 586,
	587, 0, 312, 309, 310, 0, 313, 311, 0, 314,
	315, 316, 0, 0, 317, 318, 319, 0, 320, 321,
	0, 322, 323, 324, 0, 325, 326, 588, 327, 328,
	329, 331, 333, 330, 334, 335, 336, 337, 589, 590,
	0, 0, 0, 0, 0, 0, 0, 338, 339, 340,
	591, 0, 0, 0, 341, 0, 342, 0, 0, 0,
	343, 344, 592, 593, 345, 346, 347, 348, 349, 350,
	351, 352, 0, 353, 594, 0, 595, 354, 0, 355,
	356, 357, 358, 359, 1392, 597, 598, 433, 0, 360,
	361, 0, 362, 363, 364, 365, 0, 0, 0, 0,
	366, 367, 369, 0, 0, 368, 599, 600, 0, 601,
	0, 370, 371, 0, 602, 0, 372, 373, 374, 0,
	375, 0, 0, 0, 376, 377, 378, 379, 380, 381,
	0, 382, 384, 383, 0, 385, 603, 0, 386, 387,
	0, 0, 388, 0, 0, 0, 389, 390, 0, 0,
	391, 392, 393, 394, 0, 395, 396, 398, 400, 397,
	399, 401, 414, 402, 403, 404, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 416, 0, 415, 0, 417,
	418, 419, 424, 426, 427, 422, 423, 425, 428, 429,
	421, 0, 420, 0, 0, 0, 430, 431, 0, 604,
	432, 605, 434, 435, 0, 0, 436, 0, 0, 0,
	438, 439, 440, 0, 0, 441, 442, 606, 0, 443,
	0, 607, 444, 445, 437, 446, 447, 448, 449, 450,
	451, 452, 453, 0, 454, 455, 608, 456, 457, 458,
	609, 459, 460, 461, 610, 462, 611, 463, 464, 0,
	465, 0, 466, 467, 468, 469, 470, 471, 472, 612,
	473, 475, 474, 476, 0, 477, 0, 0, 0, 0,
	0, 478, 0, 480, 481, 482, 479, 483, 484, 485,
	486, 0, 487, 488, 489, 0, 490, 491, 492, 493,
	613, 494, 0, 495, 496, 502, 503, 497, 498, 504,
	505, 506, 507, 508, 0, 510, 511, 509, 512, 513,
	514, 0, 515, 499, 500, 516, 517, 0, 518, 519,
	520, 521, 522, 523, 614, 0, 524, 0, 525, 526,
	527, 528, 501, 529, 534, 615, 530, 531, 532, 533,
	616, 0, 536, 537, 0, 535, 0, 538, 539, 540,
	541, 542, 543, 332, 544, 0, 545, 617, 618, 619,
	620, 0, 554, 0, 546, 547, 548, 621, 549, 622,
	0, 550, 551, 552, 553, 0, 555, 556, 0, 0,
	557, 558, 559, 561, 562, 560, 563, 0, 564, 0,
	0, 565, 566, 567, 623, 624, 625, 248, 569, 568,
	570, 626, 0, 0, 0, 0, 571, 572, 627, 573,
	574, 575, 0, 0, 254, 255, 256, 257, 258, 259,
	0, 260, 261, 0, 0, 0, 0, 0, 576, 0,
	0, 0, 0, 262, 263, 0, 264, 265, 266, 267,
	268, 577, 578, 0, 269, 579, 270, 580, 0, 581,
	271, 272, 273, 274, 275, 276, 0, 0, 0, 277,
	582, 583, 584, 0, 278, 279, 585, 0, 0, 0,
	280, 281, 282, 283, 284, 285, 286, 0, 0, 288,
	289, 290, 287, 291, 0, 292, 0, 293, 294, 295,
	296, 297, 298, 0, 299, 300, 301, 0, 302, 303,
	0, 0, 0, 0, 0, 0, 0, 304, 305, 306,
	307, 0, 308, 586, 587, 0, 312, 309, 310, 0,
	313, 311, 0, 314, 315, 316, 0, 0, 317, 318,
	319, 0, 320, 321, 0, 322, 323, 324, 0, 325,
	326, 588, 327, 328, 329, 331, 333, 330, 334, 335,
	336, 337, 589, 590, 0, 0, 0, 0, 0, 0,
	0, 338, 339, 340, 591, 0, 0, 0, 341, 0,
	342, 0, 0, 0, 343, 344, 592, 593, 345, 346,
	347, 348, 349, 350, 351, 352, 0, 353, 594, 0,
	595, 354, 0, 355, 356, 357, 358, 359, 596, 597,
	598, 433, 0, 360, 361, 0, 362, 363, 364, 365,
	0, 0, 0, 0, 366, 367, 369, 0, 0, 368,
	599, 600, 0, 601, 0, 370, 371, 0, 602, 0,
	372, 373, 374, 0, 375, 0, 0, 0, 376, 377,
	378, 379, 380, 381, 0, 382, 384, 383, 0, 385,
	603, 0, 386, 387, 0, 0, 388, 0, 0, 0,
	389, 390, 0, 0, 391, 392, 393, 394, 0, 395,
	396, 398, 400, 397, 399, 401, 414, 402, 403, 404,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 416,
	0, 415, 0, 417, 418, 419, 424, 426, 427, 422,
	423, 425, 428, 429, 421, 0, 420, 0, 0, 0,
	430, 431, 0, 604, 432, 605, 434, 435, 0, 0,
	436, 0, 0, 0, 438, 439, 440, 0, 0, 441,
	442, 606, 0, 443, 0, 607, 444, 445, 437, 446,
	447, 448, 449, 450, 451, 452, 453, 0, 454, 455,
	608, 456, 457, 458, 609, 459, 460, 461, 610, 462,
	611, 463, 464, 0, 465, 0, 466, 467, 468, 469,
	470, 471, 472, 612, 473, 1126, 474, 476, 0, 477,
	0, 0, 0, 0, 0, 478, 0, 480, 481, 482,
	479, 483, 484, 485, 486, 0, 487, 488, 489, 0,
	490, 491, 492, 493, 613, 494, 0, 495, 496, 502,
	503, 497, 498, 504, 505, 506, 507, 508, 0, 510,
	511, 509, 512, 513, 514, 0, 515, 499, 500, 516,
	517, 0, 518, 519, 520, 521, 522, 523, 614, 0,
	524, 0, 525, 526, 527, 528, 501, 529, 534, 615,
	530, 531, 532, 533, 616, 0, 536, 537, 0, 535,
	0, 538, 539, 540, 541, 542, 543, 332, 544, 0,
	545, 617, 618, 619, 620, 0, 554, 0, 546, 547,
	548, 621, 549, 622, 0, 550, 551, 552, 553, 0,
	555, 556, 0, 0, 557, 558, 559, 561, 562, 560,
	563, 0, 564, 0, 0, 565, 566, 567, 623, 624,
	625, 248, 569, 568, 570, 626, 0, 0, 0, 0,
	571, 572, 627, 573, 574, 575, 0, 0, 254, 255,
	256, 257, 258, 259, 0, 260, 261, 0, 0, 0,
	0, 0, 576, 0, 0, 0, 0, 262, 263, 0,
	264, 265, 266, 267, 268, 577, 578, 0, 269, 579,
	270, 580, 0, 581, 271, 272, 273, 274, 275, 276,
	0, 0, 0, 277, 582, 583, 584, 0, 278, 279,
	585, 0, 0, 0, 280, 281, 282, 283, 284, 285,
	286, 0, 0, 288, 289, 290, 287, 291, 0, 292,
	0, 293, 294, 295, 296, 297, 298, 0, 299, 300,
	301, 0, 302, 303, 0, 0, 0, 0, 0, 0,
	0, 304, 305, 306, 307, 0, 308, 586, 587, 0,
	312, 309, 310, 0, 313, 311, 0, 314, 315, 316,
	0, 0, 317, 318, 319, 0, 320, 321, 0, 322,
	323, 324, 0, 325, 326, 588, 327, 328, 329, 331,
	333, 330, 334, 335, 336, 337, 589, 590, 0, 0,
	0, 0, 0, 0, 0, 338, 339, 340, 591, 0,
	0, 0, 341, 0, 342, 0, 0, 0, 343, 344,
	592, 593, 345, 346, 347, 348, 349, 350, 351, 352,
	0, 353, 594, 0, 595, 0, 0, 355, 356, 357,
	358, 359, 596, 597, 598, 433, 0, 360, 361, 0,
	362, 363, 364, 365, 0, 0, 0, 0, 366, 367,
	369, 0, 0, 368, 599, 600, 0, 601, 0, 370,
	371, 0, 602, 0, 372, 373, 374, 0, 375, 0,
	0, 0, 376, 377, 378, 379, 380, 381, 0, 382,
	384, 383, 0, 385, 603, 0, 386, 387, 0, 0,
	388, 0, 0, 0, 389, 390, 0, 0, 391, 392,
	393, 394, 0, 395, 396, 398, 400, 397, 399, 401,
	414, 402, 403, 404, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 416, 0, 415, 0, 417, 418, 419,
	424, 426, 427, 422, 423, 425, 428, 429, 421, 0,
	420, 0, 0, 0, 430, 431, 0, 604, 432, 605,
	434, 435, 0, 0, 436, 0, 0, 0, 438, 439,
	440, 0, 0, 441, 442, 606, 0, 443, 0, 607,
	444, 445, 437, 446, 447, 0, 449, 450, 451, 452,
	453, 0, 454, 455, 608, 456, 457, 458, 609, 459,
	460, 461, 610, 462, 611, 463, 464, 0, 465, 0,
	466, 467, 468, 469, 0, 471, 472, 612, 473, 475,
	474, 476, 0, 477, 0, 0, 0, 0, 0, 478,
	0, 480, 481, 482, 479, 483, 484, 485, 486, 0,
	487, 488, 489, 0, 490, 491, 492, 493, 613, 0,
	0, 495, 496, 502, 503, 497, 498, 504, 505, 506,
	507, 508, 0, 510, 511, 509, 512, 513, 514, 0,
	515, 499, 500, 516, 517, 0, 518, 519, 520, 521,
	522, 523, 614, 0, 524, 0, 525, 526, 527, 528,
	501, 529, 534, 615, 530, 531, 532, 533, 616, 0,
	536, 537, 0, 535, 0, 538, 539, 540, 541, 542,
	543, 332, 544, 0, 545, 617, 618, 619, 620, 0,
	554, 0, 546, 547, 548, 621, 549, 622, 0, 550,
	551, 552, 553, 0, 555, 556, 0, 0, 557, 558,
	559, 561, 562, 560, 563, 0, 564, 0, 0, 565,
	566, 567, 623, 624, 625, 0, 569, 568, 570, 626,
	0, 0, 0, 0, 571, 572, 627, 573, 574, 575,
	1667, 1668, 0, 1700, 1701, 1702, 1710, 1711, 1712, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1703, 1698, 0, 0, 0, 0, 0, 0, 1670,
	0, 0, 0, 0, 0, 0, 0, 1716, 0, 0,
	1667, 1668, 0, 1700, 1701, 1702, 1710, 1711, 1712, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1703, 1698, 1669, 0, 0, 0, 0, 0, 1670,
	0, 0, 0, 1689, 0, 0, 0, 1716, 0, 0,
	0, 0, 1686, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1669, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1689, 0, 0, 0, 0, 0, 0,
	0, 0, 1686, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1692, 1693, 1694, 1695, 0, 0, 0,
	0, 0, 0, 1675, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1692, 1693, 1694, 1695, 0, 1707, 0,
	0, 1717, 0, 1675, 0, 0, 0, 1697, 1699, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1713, 0, 1714, 0, 0, 0, 0,
	0, 0, 1684, 1685, 0, 0, 0, 0, 1707, 0,
	0, 1717, 0, 0, 0, 0, 0, 1697, 1699, 0,
	1705, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1713, 1690, 1714, 0, 0, 0, 0,
	0, 0, 1684, 1685, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1705, 0, 1667, 1668, 0, 1700, 1701, 1702, 1710, 1711,
	1712, 0, 0, 0, 1690, 1715, 0, 0, 0, 0,
	0, 0, 0, 1703, 1698, 0, 0, 0, 0, 0,
	0, 1670, 0, 1704, 0, 0, 0, 0, 0, 1716,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1715, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1669, 0, 0, 0, 0,
	0, 0, 0, 1704, 0, 1689, 0, 0, 0, 0,
	0, 0, 0, 0, 1686, 0, 0, 0, 0, 0,
	0, 0, 1696, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1691, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1696, 0, 0, 0, 0, 1708, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1691, 0, 0, 1692, 1693, 1694, 1695, 0,
	0, 0, 0, 0, 0, 1675, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1708, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1667, 1668, 0, 1700, 1701, 1702, 1710, 1711, 1712,
	1707, 0, 0, 1717, 0, 0, 0, 0, 0, 1697,
	1699, 0, 1703, 1698, 0, 0, 0, 0, 0, 0,
	1670, 0, 0, 0, 0, 1713, 0, 1714, 1716, 0,
	0, 0, 1706, 0, 1684, 1685, 1681, 1682, 1688, 1709,
	1687, 1683, 0, 1680, 1678, 1679, 1671, 1672, 1673, 1674,
	1676, 1677, 1705, 0, 1669, 0, 4174, 0, 0, 0,
	0, 0, 0, 0, 1689, 0, 1690, 0, 0, 0,
	0, 0, 1706, 1686, 0, 0, 1681, 1682, 1688, 1709,
	1687, 1683, 0, 1680, 1678, 1679, 1671, 1672, 1673, 1674,
	1676, 1677, 0, 0, 0, 0, 4170, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1715, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1704, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1692, 1693, 1694, 1695, 0, 0,
	0, 0, 0, 0, 1675, 0, 0, 1667, 1668, 0,
	1700, 1701, 1702, 1710, 1711, 1712, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1703, 1698,
	0, 0, 0, 0, 1696, 0, 1670, 0, 0, 1707,
	0, 0, 1717, 0, 1716, 0, 0, 0, 1697, 1699,
	0, 0, 0, 0, 1691, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1713, 0, 1714, 0, 0, 0,
	1669, 0, 0, 1684, 1685, 0, 0, 0, 0, 1708,
	1689, 0, 0, 0, 0, 0, 0, 0, 0, 1686,
	0, 1705, 0, 1667, 1668, 0, 1700, 1701, 1702, 1710,
	1711, 1712, 0, 0, 0, 1690, 0, 0, 0, 0,
	0, 0, 0, 0, 1703, 1698, 0, 0, 0, 0,
	0, 0, 1670, 0, 0, 0, 0, 0, 0, 0,
	1716, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1715, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1669, 0, 0, 0,
	1692, 1693, 1694, 1695, 1704, 0, 1689, 0, 0, 0,
	1675, 0, 0, 0, 1706, 1686, 0, 0, 1681, 1682,
	1688, 1709, 1687, 1683, 0, 1680, 1678, 1679, 1671, 1672,
	1673, 1674, 1676, 1677, 0, 0, 0, 0, 4081, 0,
	0, 0, 0, 0, 0, 1707, 0, 0, 1717, 0,
	0, 0, 0, 0, 1697, 1699, 0, 0, 0, 0,
	0, 0, 0, 1696, 0, 0, 0, 0, 0, 0,
	1713, 0, 1714, 0, 0, 0, 0, 0, 0, 1684,
	1685, 0, 0, 1691, 0, 0, 1692, 1693, 1694, 1695,
	0, 0, 0, 0, 0, 0, 1675, 1705, 1667, 1668,
	0, 1700, 1701, 1702, 1710, 1711, 1712, 0, 1708, 0,
	0, 1690, 0, 0, 0, 0, 0, 0, 0, 1703,
	1698, 0, 0, 0, 0, 0, 0, 1670, 0, 0,
	0, 1707, 0, 0, 1717, 1716, 0, 0, 0, 0,
	1697, 1699, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1715, 0, 0, 0, 1713, 0, 1714, 0,
	0, 1669, 0, 0, 0, 1684, 1685, 0, 0, 0,
	1704, 1689, 0, 0, 0, 0, 0, 0, 0, 0,
	1686, 0, 0, 1705, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1690, 0, 0,
	0, 0, 0, 1706, 0, 0, 0, 1681, 1682, 1688,
	1709, 1687, 1683, 0, 1680, 1678, 1679, 1671, 1672, 1673,
	1674, 1676, 1677, 0, 0, 0, 0, 4080, 0, 1696,
	0, 0, 0, 0, 0, 0, 0, 0, 1715, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1691,
	0, 1692, 1693, 1694, 1695, 0, 1704, 0, 0, 0,
	0, 1675, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1708, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1707, 0, 0, 1717,
	0, 0, 0, 0, 0, 1697, 1699, 0, 0, 0,
	0, 0, 0, 0, 0, 1696, 0, 0, 0, 0,
	0, 1713, 0, 1714, 0, 0, 0, 0, 0, 0,
	1684, 1685, 0, 0, 0, 1691, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1705, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1708, 0, 1690, 0, 0, 0, 0, 0, 0, 1706,
	0, 0, 0, 1681, 1682, 1688, 1709, 1687, 1683, 0,
	1680, 1678, 1679, 1671, 1672, 1673, 1674, 1676, 1677, 0,
	0, 0, 0, 3926, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1715, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1704, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1706, 0, 0, 0, 1681,
	1682, 1688, 1709, 1687, 1683, 0, 1680, 1678, 1679, 1671,
	1672, 1673, 1674, 1676, 1677, 0, 0, 0, 0, 3786,
	1696, 0, 0, 0, 0, 0, 0, 1667, 1668, 0,
	1700, 1701, 1702, 1710, 1711, 1712, 0, 0, 0, 0,
	1691, 0, 0, 0, 0, 0, 0, 0, 1703, 1698,
	0, 0, 0, 0, 0, 0, 1670, 0, 0, 0,
	0, 0, 0, 0, 1716, 1708, 0, 1667, 1668, 0,
	1700, 1701, 1702, 1710, 1711, 1712, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1703, 1698,
	1669, 0, 0, 0, 0, 0, 1670, 0, 0, 0,
	1689, 0, 0, 0, 1716, 0, 0, 0, 0, 1686,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1669, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1689, 0, 0, 0, 0, 0, 0, 0, 0, 1686,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1706, 0, 0, 0, 1681, 1682, 1688, 1709, 1687, 1683,
	0, 1680, 1678, 1679, 1671, 1672, 1673, 1674, 1676, 1677,
	1692, 1693, 1694, 1695, 3729, 0, 0, 0, 0, 0,
	1675, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1692, 1693, 1694, 1695, 0, 1707, 0, 0, 1717, 0,
	1675, 0, 0, 0, 1697, 1699, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1713, 0, 1714, 0, 0, 0, 0, 0, 0, 1684,
	1685, 0, 0, 0, 0, 1707, 0, 0, 1717, 0,
	0, 0, 0, 0, 1697, 1699, 0, 1705, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1713, 1690, 1714, 0, 0, 0, 0, 0, 0, 1684,
	1685, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1705, 0, 1667,
	1668, 0, 1700, 1701, 1702, 1710, 1711, 1712, 0, 0,
	0, 1690, 1715, 0, 0, 0, 0, 0, 0, 0,
	1703, 1698, 0, 0, 0, 0, 0, 0, 1670, 0,
	1704, 0, 0, 0, 0, 0, 1716, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1715, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1669, 0, 0, 0, 0, 0, 0, 0,
	1704, 0, 1689, 0, 0, 0, 0, 0, 0, 0,
	0, 1686, 0, 0, 0, 0, 0, 0, 0, 1696,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1691,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1696,
	0, 0, 0, 0, 1708, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1691,
	0, 0, 1692, 1693, 1694, 1695, 0, 0, 0, 0,
	0, 0, 1675, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1708, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1667, 1668,
	0, 1700, 1701, 1702, 1710, 1711, 1712, 1707, 0, 0,
	1717, 0, 0, 0, 0, 0, 1697, 1699, 0, 1703,
	1698, 0, 0, 0, 0, 0, 0, 1670, 0, 0,
	0, 0, 1713, 0, 1714, 1716, 0, 0, 0, 1706,
	0, 1684, 1685, 1681, 1682, 1688, 1709, 1687, 1683, 0,
	1680, 1678, 1679, 1671, 1672, 1673, 1674, 1676, 1677, 1705,
	0, 1669, 0, 3728, 0, 0, 0, 0, 0, 0,
	0, 1689, 0, 1690, 0, 0, 0, 0, 0, 1706,
	1686, 0, 0, 1681, 1682, 1688, 1709, 1687, 1683, 0,
	1680, 1678, 1679, 1671, 1672, 1673, 1674, 1676, 1677, 0,
	0, 0, 0, 3727, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1715, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1704, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1692, 1693, 1694, 1695, 0, 0, 0, 0, 0,
	0, 1675, 0, 0, 1667, 1668, 0, 1700, 1701, 1702,
	1710, 1711, 1712, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1703, 1698, 0, 0, 0,
	0, 1696, 0, 1670, 0, 0, 1707, 0, 0, 1717,
	0, 1716, 0, 0, 0, 1697, 1699, 0, 0, 0,
	0, 1691, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1713, 0, 1714, 0, 0, 0, 1669, 0, 0,
	1684, 1685, 0, 0, 0, 0, 1708, 1689, 0, 0,
	0, 0, 0, 0, 0, 0, 1686, 0, 1705, 0,
	1667, 1668, 0, 1700, 1701, 1702, 1710, 1711, 1712, 0,
	0, 0, 1690, 0, 0, 0, 0, 0, 0, 0,
	0, 1703, 1698, 0, 0, 0, 0, 0, 0, 1670,
	0, 0, 0, 0, 0, 0, 0, 1716, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1715, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1669, 0, 0, 0, 1692, 1693, 1694,
	1695, 1704, 0, 1689, 0, 0, 0, 1675, 0, 0,
	0, 1706, 1686, 0, 0, 1681, 1682, 1688, 1709, 1687,
	1683, 0, 1680, 1678, 1679, 1671, 1672, 1673, 1674, 1676,
	1677, 0, 0, 0, 0, 3424, 0, 0, 0, 0,
	0, 0, 1707, 0, 0, 1717, 0, 0, 0, 0,
	0, 1697, 1699, 0, 0, 0, 0, 0, 0, 0,
	1696, 0, 0, 0, 0, 0, 0, 1713, 0, 1714,
	0, 0, 0, 0, 0, 0, 1684, 1685, 0, 0,
	1691, 0, 0, 1692, 1693, 1694, 1695, 0, 0, 0,
	0, 0, 0, 1675, 1705, 1667, 1668, 0, 1700, 1701,
	1702, 1710, 1711, 1712, 0, 1708, 0, 0, 1690, 0,
	0, 0, 0, 0, 0, 0, 1703, 1698, 0, 0,
	0, 0, 0, 0, 1670, 0, 0, 0, 1707, 0,
	0, 1717, 1716, 0, 0, 0, 0, 1697, 1699, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1715,
	0, 0, 0, 1713, 0, 1714, 0, 0, 1669, 0,
	0, 0, 1684, 1685, 0, 0, 0, 1704, 1689, 0,
	0, 0, 0, 0, 0, 0, 0, 1686, 0, 0,
	1705, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1690, 0, 0, 0, 0, 0,
	1706, 0, 0, 0, 1681, 1682, 1688, 1709, 1687, 1683,
	0, 1680, 1678, 1679, 1671, 1672, 1673, 1674, 1676, 1677,
	0, 0, 0, 0, 2958, 0, 1696, 0, 0, 0,
	0, 0, 0, 0, 0, 1715, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1691, 0, 1692, 1693,
	1694, 1695, 0, 1704, 0, 0, 0, 0, 1675, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1708, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1707, 0, 0, 1717, 0, 0, 0,
	0, 0, 1697, 1699, 0, 0, 0, 0, 0, 0,
	0, 0, 1696, 0, 0, 0, 0, 0, 1713, 0,
	1714, 0, 0, 0, 0, 0, 0, 1684, 1685, 0,
	0, 0, 1691, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1705, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1708, 0, 1690,
	0, 0, 0, 0, 0, 0, 1706, 0, 0, 0,
	1681, 1682, 1688, 1709, 1687, 1683, 0, 1680, 1678, 1679,
	1671, 1672, 1673, 1674, 1676, 1677, 0, 0, 0, 0,
	2957, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1715, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1704, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1706, 0, 0, 0, 1681, 1682, 1688, 1709,
	1687, 1683, 0, 1680, 1678, 1679, 1671, 1672, 1673, 1674,
	1676, 1677, 0, 0, 0, 0, 2956, 1696, 0, 0,
	0, 0, 0, 0, 1667, 1668, 0, 1700, 1701, 1702,
	1710, 1711, 1712, 0, 0, 0, 0, 1691, 0, 0,
	0, 0, 0, 0, 0, 1703, 1698, 0, 0, 0,
	0, 0, 0, 1670, 0, 0, 0, 0, 0, 0,
	0, 1716, 1708, 0, 1667, 1668, 0, 1700, 1701, 1702,
	1710, 1711, 1712, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1703, 1698, 1669, 0, 0,
	0, 0, 0, 1670, 0, 0, 0, 1689, 0, 0,
	0, 1716, 0, 0, 0, 0, 1686, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1669, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1689, 0, 0,
	0, 0, 0, 0, 0, 0, 1686, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1706, 0, 0,
	0, 1681, 1682, 1688, 1709, 1687, 1683, 0, 1680, 1678,
	1679, 1671, 1672, 1673, 1674, 1676, 1677, 1692, 1693, 1694,
	1695, 2955, 0, 0, 0, 0, 0, 1675, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1692, 1693, 1694,
	1695, 0, 1707, 0, 0, 1717, 0, 1675, 4298, 0,
	0, 1697, 1699, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1713, 0, 1714,
	0, 0, 0, 0, 0, 0, 1684, 1685, 0, 0,
	0, 0, 1707, 0, 0, 1717, 0, 0, 0, 0,
	0, 1697, 1699, 0, 1705, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1713, 1690, 1714,
	0, 0, 0, 0, 0, 0, 1684, 1685, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1705, 0, 1667, 1668, 0, 1700,
	1701, 1702, 1710, 1711, 1712, 0, 0, 0, 1690, 1715,
	0, 0, 0, 0, 0, 0, 0, 1703, 1698, 0,
	0, 0, 0, 2893, 0, 1670, 0, 1704, 0, 0,
	0, 0, 0, 1716, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1715,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1669,
	0, 0, 0, 0, 0, 0, 0, 1704, 0, 1689,
	0, 0, 0, 0, 0, 0, 0, 0, 1686, 0,
	0, 0, 0, 0, 0, 0, 1696, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4297,
	0, 0, 0, 0, 0, 0, 1691, 0, 0, 0,
	0, 0, 0, 0, 2894, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1696, 0, 0, 0,
	0, 1708, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1691, 0, 0, 1692,
	1693, 1694, 1695, 0, 0, 0, 0, 0, 0, 1675,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1708, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1707, 0, 0, 1717, 0, 0,
	0, 0, 0, 1697, 1699, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1713,
	0, 1714, 0, 0, 0, 0, 1706, 0, 1684, 1685,
	1681, 1682, 1688, 1709, 1687, 1683, 0, 1680, 1678, 1679,
	1671, 1672, 1673, 1674, 1676, 1677, 1705, 0, 2922, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1690, 0, 0, 0, 0, 0, 1706, 0, 0, 0,
	1681, 1682, 1688, 1709, 1687, 1683, 0, 1680, 1678, 1679,
	1671, 1672, 1673, 1674, 1676, 1677, 0, 0, 1667, 1668,
	0, 1700, 1701, 1702, 1710, 1711, 1712, 0, 0, 0,
	0, 1715, 0, 0, 0, 0, 0, 0, 0, 1703,
	1698, 0, 0, 0, 0, 0, 0, 1670, 0, 1704,
	0, 0, 0, 0, 0, 1716, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1669, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1689, 0, 0, 0, 0, 0, 0, 0, 0,
	1686, 0, 0, 0, 0, 0, 0, 0, 1696, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1691, 0,
	0, 0, 2491, 0, 0, 0, 0, 0, 0, 1667,
	1668, 0, 1700, 1701, 1702, 1710, 1711, 1712, 0, 0,
	0, 0, 0, 1708, 0, 0, 0, 0, 0, 0,
	1703, 1698, 0, 0, 0, 2490, 0, 0, 1670, 0,
	0, 1692, 1693, 1694, 1695, 0, 1716, 0, 0, 0,
	0, 1675, 0, 3042, 0, 0, 3041, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1669, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1689, 0, 0, 0, 1707, 0, 0, 1717,
	0, 1686, 0, 0, 0, 1697, 1699, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1713, 0, 1714, 0, 0, 0, 0, 1706, 0,
	1684, 1685, 1681, 1682, 1688, 1709, 1687, 1683, 0, 1680,
	1678, 1679, 1671, 1672, 1673, 1674, 1676, 1677, 1705, 1667,
	1668, 0, 1700, 1701, 1702, 1710, 1711, 1712, 0, 0,
	0, 0, 1690, 0, 0, 0, 0, 0, 0, 0,
	1703, 1698, 1692, 1693, 1694, 1695, 0, 0, 1670, 0,
	0, 0, 1675, 0, 0, 0, 1716, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1715, 0, 0, 0, 0, 0, 0,
	0, 0, 1669, 0, 0, 0, 0, 1707, 0, 0,
	1717, 1704, 1689, 0, 0, 0, 1697, 1699, 0, 0,
	0, 1686, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1713, 0, 1714, 0, 0, 0, 0, 0,
	0, 1684, 1685, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1705,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1696, 0, 0, 1690, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1691, 0, 1692, 1693, 1694, 1695, 0, 0, 0, 0,
	0, 0, 1675, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1715, 1708, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1704, 0, 0, 0, 0, 1707, 0, 0,
	1717, 0, 0, 0, 0, 0, 1697, 1699, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1713, 0, 1714, 0, 0, 0, 0, 0,
	0, 1684, 1685, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1705,
	0, 1696, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1690, 0, 0, 0, 0, 0, 0,
	1706, 1691, 0, 0, 1681, 1682, 1688, 1709, 1687, 1683,
	0, 1680, 1678, 1679, 1671, 1672, 1673, 1674, 1676, 1677,
	0, 0, 0, 0, 0, 0, 1708, 0, 0, 0,
	0, 0, 0, 0, 1715, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1704, 982, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1667, 1668,
	0, 1700, 1701, 1702, 1710, 1711, 1712, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1703,
	1698, 0, 0, 0, 0, 0, 0, 1670, 0, 0,
	0, 1696, 0, 0, 0, 1716, 0, 0, 0, 0,
	0, 1706, 0, 0, 0, 1681, 1682, 1688, 1709, 1687,
	1683, 1691, 1680, 1678, 1679, 1671, 1672, 1673, 1674, 1676,
	1677, 1669, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1689, 0, 0, 0, 0, 1708, 0, 0, 0,
	1686, 0, 1667, 1668, 0, 1700, 1701, 1702, 1710, 1711,
	1712, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1703, 1698, 0, 0, 0, 0, 0,
	0, 1670, 0, 0, 0, 0, 0, 0, 0, 1716,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1669, 0, 0, 0, 0,
	0, 1692, 1693, 1694, 1695, 1689, 0, 0, 0, 0,
	0, 1675, 0, 0, 1686, 0, 0, 0, 0, 0,
	0, 1706, 0, 0, 0, 1681, 1682, 1688, 1709, 1687,
	1683, 0, 1680, 1678, 1679, 1671, 1672, 1673, 1674, 1676,
	1677, 0, 0, 0, 0, 0, 1707, 0, 0, 1717,
	0, 0, 0, 0, 0, 1697, 1699, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1713, 0, 1714, 0, 0, 0, 0, 0, 0,
	1684, 1685, 0, 0, 0, 1692, 1693, 1694, 1695, 0,
	0, 0, 0, 0, 0, 1675, 0, 0, 1705, 0,
	3048, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1690, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1707, 0, 0, 1717, 0, 0, 0, 0, 0, 1697,
	1699, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1715, 0, 1713, 0, 1714, 0, 0,
	0, 0, 0, 0, 1684, 1685, 0, 0, 0, 0,
	0, 1704, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1705, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1690, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1696, 0, 0, 0, 0, 0, 0, 1715, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1691, 0, 0, 0, 0, 1704, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1708, 0, 0, 1667, 1668,
	0, 1700, 1701, 1702, 1710, 1711, 1712, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1703,
	1698, 0, 0, 0, 3043, 0, 0, 1670, 0, 0,
	0, 0, 0, 3405, 1696, 1716, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1691, 0, 0, 0, 0, 0,
	0, 1669, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1689, 0, 0, 0, 0, 0, 0, 0, 1708,
	1686, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1706, 0, 0, 0, 1681, 1682, 1688, 1709, 1687, 1683,
	0, 1680, 1678, 1679, 1671, 1672, 1673, 1674, 1676, 1677,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1667, 1668, 0, 1700, 1701, 1702, 1710, 1711, 1712,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1703, 1698, 0, 0, 0, 0, 0, 0,
	1670, 1692, 1693, 1694, 1695, 0, 0, 0, 1716, 0,
	0, 1675, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1706, 0, 0, 0, 1681, 1682,
	1688, 1709, 1687, 1683, 1669, 1680, 1678, 1679, 1671, 1672,
	1673, 1674, 1676, 1677, 1689, 0, 1707, 0, 0, 1717,
	0, 0, 0, 1686, 0, 1697, 1699, 1667, 1668, 0,
	1700, 1701, 1702, 1710, 1711, 1712, 0, 0, 0, 0,
	0, 1713, 0, 1714, 0, 0, 0, 0, 1703, 1698,
	1684, 1685, 0, 2959, 0, 0, 1670, 0, 0, 0,
	0, 0, 0, 0, 1716, 0, 0, 0, 1705, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1690, 0, 0, 0, 0, 0, 0, 0,
	1669, 0, 0, 0, 1692, 1693, 1694, 1695, 0, 0,
	1689, 0, 0, 0, 1675, 0, 0, 0, 0, 1686,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1715, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1707,
	0, 1704, 1717, 0, 0, 0, 0, 0, 1697, 1699,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1713, 0, 1714, 0, 0, 0,
	0, 0, 0, 1684, 1685, 0, 0, 0, 0, 0,
	1692, 1693, 1694, 1695, 0, 0, 0, 0, 0, 0,
	1675, 1705, 0, 0, 0, 0, 0, 0, 0, 0,
	1696, 0, 0, 0, 0, 1690, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1691, 0, 0, 0, 0, 1707, 0, 0, 1717, 0,
	0, 0, 0, 0, 1697, 1699, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1708, 1715, 0, 0, 0,
	1713, 0, 1714, 0, 0, 0, 0, 0, 0, 1684,
	1685, 0, 0, 0, 1704, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1705, 0, 0,
	0, 0, 0, 0, 3010, 0, 0, 0, 0, 0,
	0, 1690, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1696, 0, 0, 0, 0, 0, 0,
	0, 0, 1715, 0, 0, 0, 0, 0, 0, 0,
	1706, 0, 0, 1691, 1681, 1682, 1688, 1709, 1687, 1683,
	1704, 1680, 1678, 1679, 1671, 1672, 1673, 1674, 1676, 1677,
	0, 0, 0, 0, 0, 0, 0, 0, 1708, 0,
	0, 1667, 1668, 0, 1700, 1701, 1702, 1710, 1711, 1712,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1703, 1698, 0, 0, 0, 0, 0, 0,
	1670, 0, 0, 0, 0, 0, 0, 0, 1716, 1696,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1691,
	0, 0, 0, 0, 1669, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1689, 0, 0, 0, 0, 0,
	0, 0, 0, 1686, 1708, 0, 0, 0, 0, 0,
	0, 0, 0, 1706, 0, 0, 0, 1681, 1682, 1688,
	1709, 1687, 1683, 0, 1680, 1678, 1679, 1671, 1672, 1673,
	1674, 1676, 1677, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1692, 1693, 1694, 1695, 0, 0,
	0, 0, 0, 0, 1675, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1706,
	0, 0, 0, 1681, 1682, 1688, 1709, 1687, 1683, 0,
	1680, 1678, 1679, 1671, 1672, 1673, 1674, 1676, 1677, 1707,
	0, 0, 1717, 0, 0, 0, 0, 0, 1697, 1699,
	1667, 1668, 0, 1700, 1701, 1702, 1710, 1711, 1712, 0,
	0, 0, 0, 0, 1713, 0, 1714, 0, 0, 0,
	0, 0, 1698, 1684, 1685, 0, 0, 0, 0, 1670,
	0, 0, 0, 0, 0, 0, 0, 1716, 0, 0,
	0, 1705, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1690, 0, 0, 0, 0,
	0, 0, 0, 1669, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1689, 0, 0, 0, 0, 0, 0,
	0, 0, 1686, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1715, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1704, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1692, 1693, 1694, 1695, 0, 0, 0,
	0, 0, 0, 1675, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1696, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1691, 0, 0, 0, 0, 1707, 0,
	0, 1717, 0, 0, 0, 0, 0, 1697, 1699, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1708, 0,
	0, 0, 0, 1713, 0, 1714, 0, 0, 0, 0,
	0, 0, 1684, 1685, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1705, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1690, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1715, 0, 0, 0, 0,
	0, 0, 0, 1706, 0, 0, 0, 1681, 1682, 1688,
	1709, 1687, 1683, 0, 1680, 1678, 1679, 1671, 1672, 1673,
	1674, 1676, 1677, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1696, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1691, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1708, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1706, 0, 0, 0, 1681, 1682, 1688, 1709,
	1687, 1683, 0, 1680, 1678, 1679, 1671, 1672, 1673, 1674,
	1676, 1677,
}
var sqlPact = [...]int{

	5453, -1000, -1000, -1000, -1000, 216, -1000, -1000, 207, 205,
	202, 199, 198, 192, 191, 190, 189, 188, -1000, -1000,
	-1000, -1000, -1000, -1000, 187, -1000, -1000, 186, -1000, 185,
	179, 175, -1000, -1000, 173, -1000, 171, -1000, -1000, -1000,
	-1000, 170, 168, 162, 81814, 81293, 82328, 2132, 99945, 88524,
	1940, 72985, 99424, 72464, 98903, 1989, 98382, 2556, 157, -1000,
	97861, 156, 147, 146, -1000, 97340, -1000, 1893, -1000, 145,
	3285, 59422, 142, 138, 135, 2133, 134, -1000, 133, 130,
	-1000, 9853, 1441, -1000, 126, 124, -1000, 8563, 7853, 86447,
	123, 122, 2230, 119, 118, 58370, 117, 115, 2168, 2704,
	-1000, -1000, 1904, -1000, -1000, 113, 112, 111, 110, 103,
	101, 95, 92, 91, 90, 89, -1000, 87, 86, 85,
	84, 83, 81, 80, 79, -1000, 78, 77, 76, 75,
	73, 72, 71, 69, 68, 67, 65, 64, 63, -1000,
	14616, 62, 1830, 1618, 1617, 1616, 1611, 1596, 966, 60,
	58, 57, 56, 54, 48, 45, 43, 40, -1000, 39,
	36, 34, 32, 28, 22, 21, 20, 180, 17, 16,
	15, 13, 12, 11, 10, 3242, -1000, 1508, 1096, 27595,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 106113, 100459,
	6, -226, 4, -1000, 3068, 1024, 48972, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 332, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	510, 1887, 770, -1000, -1000, -1000, 96826, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2119, -39, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 762, -1000, 2118, 139, 2078, -1000,
	-1000, -1000, 3150, -1000, -1000, 100459, -1000, 1014, -1000, -1000,
	3577, 3571, 1949, 757, 88003, -1000, 1765, -1000, 917, 29230,
	-1000, 1244, -1000, 29230, 310, -1000, -1000, -1000, -1000, -1000,
	-1000, 3570, 3569, 3564, 3563, -1000, -1000, 71943, 21001, 71422,
	70901, 96312, 20470, 80772, 80251, 95791, 66236, 1013, -1000, -1000,
	-1000, 1390, -1000, -1000, -1000, -1000, -1000, -1000, -25, 67279,
	3328, 100459, -1000, 295, -1000, -1000, -1000, -1000, -1000, -1000,
	41981, 689, 41424, 726, 40867, 598, -1000, -1000, -1000, 65705,
	-1000, 3561, 3559, 1108, 3558, 3013, 105599, 1768, 3557, 1756,
	1222, 3555, 3554, 3553, 3550, 3548, 3547, 1378, 95270, 2754,
	94749, 1634, 65174, 1012, 79730, 82328, 2443, 94228, 1358, 1342,
	-1000, -1000, -1000, -1000, 2880, 2681, 2654, 1321, -1000, -1000,
	3546, 3545, 3544, 3543, 3539, 105085, 1713, 3537, 2351, 3536,
	3535, 3534, 3533, 3531, 3530, 3529, -1000, 79209, 1011, 78688,
	78167, 3152, 93707, 77646, 93186, 64643, 40310, 1032, -1000, -1000,
	-1000, 51070, 8643, 8290, 92665, 53193, 82328, 82328, -1000, -1000,
	-1000, -1000, -1000, 39753, 586, 39196, 1031, -1000, -1000, 51606,
	2699, -1000, -1000, -1000, -1000, 38639, 547, 38082, 806, 100459,
	-1000, 2753, 1878, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1946, 1557, 3341,
	2538, 64112, 1986, 1304, 3102, 2879, 2871, 1458, 3528, 3527,
	2423, 2868, 2833, 2830, 2826, 2824, 1433, 2400, 287, 27038,
	2735, 1651, 37525, 1566, 1456, 2817, 2815, 3362, 1876, 1877,
	1936, 70380, 3526, 3525, 3056, 2810, 2790, 2693, -1000, -1000,
	-1000, -1000, 1377, -1000, -1000, -1000, -1000, -1000, 73499, -1000,
	-1000, 1684, -1000, -1000, 1684, -1000, -1000, -1000, -1000, -1000,
	1323, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1508, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2000, -1000, 1913, -1000, -1000, 2378, 3042,
	3042, 3042, 3149, 478, 463, -1000, 180, -1000, -1000, 111890,
	-1000, -1000, 42526, 42526, 42526, 42526, 42526, 42526, 42526, 2020,
	-1000, 756, -1000, -1000, 797, -1000, 755, 623, -1000, -1000,
	-1000, -1000, -1000, -1000, 754, -1000, -1000, -1000, -1000, -1000,
	-1000, 3328, -1000, 23708, -1000, -1000, -1000, 473, 752, 42526,
	-1000, -1000, 3393, 3391, 979, -1000, 294, 926, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2752, 751, 750, -1000, 749, 748, 747, 746, 745, -1000,
	-1000, -1000, 743, 741, 739, 737, 736, 732, 730, 727,
	-1000, 1900, -1000, -1000, -1000, -1000, -1000, -1000, 676, 673,
	673, 673, -1000, 1003, -1000, -1000, -1000, 316, 664, 313,
	662, 658, 655, -1000, 722, 721, 719, 718, 709, 707,
	706, 705, 702, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1002, -1000, -1000, -1000, -1000, -26, 100459, -1000, 510, -26,
	-1000, -1000, 701, -1000, 31422, 31422, 31422, -1000, -1000, 2116,
	42526, -1000, 2649, -1000, -19, -19, 882, 50012, -1000, 47914,
	882, 289, 819, 54747, -1000, 2688, -1000, -1000, 699, 279,
	-1000, -1000, -1000, -1000, 21530, 2686, 100459, 100459, 82328, 82328,
	82328, 2950, 42526, -1000, -1000, 63581, 100459, 82842, 3275, 59936,
	63062, 100459, 2749, 58901, -1000, 3059, -1000, -1000, 100459, -1000,
	42526, -1000, 3273, 1503, 67798, 3196, -40, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2329, 2338, 1084, 2163, -1000, 2961,
	1276, -1000, 29230, 3002, -1000, -1000, -1000, 276, 21530, -1000,
	-1000, -1000, -1000, -1000, 3983, 2919, 1750, -1000, 2162, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1781, 2917,
	-1000, 2783, 2916, 1769, -1000, -1000, 2385, -1000, -1000, 3043,
	-1000, -1000, 1892, 2908, -14, -1000, -1000, 2089, -1000, -1000,
	1884, -1000, -1000, 968, 2906, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 77125, 52664, 51606, 67279, -30, -1000,
	-1000, -1000, -1000, -57, -1000, 19939, 111890, -1000, -1000, -1000,
	-1000, 1655, 111890, 908, -1000, -1000, 2904, -1000, 111890, 880,
	-1000, -1000, 2903, -1000, 2738, -1000, -1000, -1000, -1000, 3524,
	-1000, 3523, 2238, 3522, 3520, 3519, -1000, 1639, 1886, 3518,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 76611, 2115, -1000,
	-1000, 75569, -1000, 2234, 3193, -1000, -1000, -1000, 76090, 1006,
	-1000, 968, 2233, -1000, 85926, 1015, -1000, 3516, 3147, 2505,
	968, 2229, -1000, -1000, -1000, -1000, -1000, 1008, -1000, 56300,
	-1000, 56300, -1000, 1527, -1000, 104571, -19, 82328, 3328, -1000,
	-1000, -1000, -1000, -1000, -1000, 2897, 3515, 3514, 3513, -1000,
	100459, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 206, 2893,
	-1000, -1000, 85412, 206, 2892, -1000, 206, 2891, -1000, 84898,
	-1000, -1000, 2150, 2890, -1000, 209, 2889, -1000, -1000, 208,
	2888, -1000, -1000, -127, 2858, -1000, -1000, 111890, -1000, -1000,
	-1000, -58, -1000, -1000, -1000, 1024, -1000, 50534, -1000, 50534,
	87482, 66765, 940, 735, 57848, 111890, -1000, -1000, -1000, -1000,
	111890, -1000, -1000, -1000, -156, -1000, -1000, 66765, 51606, 111890,
	-1000, -1000, -1000, -1000, 111890, -1000, -1000, -1000, 66765, 75569,
	-1000, 92144, 75055, -1000, -1000, 1364, 2381, -1000, -1000, -1000,
	66765, 1253, 66765, 66765, 66765, -1000, 91623, -1000, -1000, 1941,
	1235, 3061, 1935, 82328, -1000, 1741, -1000, -1000, -1000, 3089,
	-1000, -1000, 2737, -1000, 62543, 84384, -1000, 83870, -1000, 83356,
	-1000, 82328, -1000, 82328, -1000, 3512, 3511, 3508, 3507, -1000,
	3506, 3076, -1000, 111890, 3072, -1000, 3505, 3181, 2735, 111890,
	-1000, 2885, 1615, 1610, 100459, -1000, -1000, 100459, -1000, 100459,
	-1000, -1000, -1000, 1437, -1000, -1000, 2321, -1000, -1000, -1000,
	-1000, 82328, -1000, -1000, -1000, -1000, -1000, -1000, 2734, -1000,
	1648, -1000, 1734, -1000, 1363, -1000, -1000, 211, -1000, -1000,
	-40, -1000, 104057, -1000, 2378, -1000, 100459, -1000, 2333, 2715,
	2720, 1767, 2138, 2457, -1000, 36968, 2398, 45251, 2161, 180,
	-1000, -1000, 180, 180, 28685, -1000, -1000, 59936, 59936, 21530,
	1331, 42526, 42526, 42526, 42526, 42526, 42526, 42526, 42526, 42526,
	42526, 42526, 42526, 42526, 42526, 42526, 42526, 42526, 42526, 42526,
	42526, 42526, 42526, 42526, 42526, 42526, 42526, 42526, 42526, 42526,
	42526, 42526, 42526, 42526, 42526, 42526, 2179, 42526, 1310, 42526,
	42526, 42526, 42526, 1660, -1000, -1000, 1862, 555, 1901, -1000,
	3335, 3335, 3335, 895, 895, 112099, 112099, 611, 3504, 797,
	-1000, 42526, -1000, 99, 42526, 22061, -1000, 463, 6928, 2318,
	-1000, 462, 22618, -1000, -1000, -1000, 23708, 623, 36411, 42526,
	994, 111890, -1000, -1000, 1641, 3347, 19410, 2762, 2581, 693,
	840, 837, 26481, 25924, 25367, 24810, 566, 42526, 42526, 42526,
	42526, 42526, 42526, 42526, 42526, -1000, -1000, 3355, -1000, 3347,
	-1000, -1000, -1000, -1000, 3347, 1328, 1325, 3347, -1000, 3347,
	3347, 9444, 9444, 35866, 35309, 34752, 45796, 34195, 42526, 24253,
	33638, 33081, -1000, 100459, -26, 3270, 42526, 137, -1000, 110428,
	-1000, 137, 137, 690, -61, 111890, 2445, 2445, 49492, 2156,
	2017, 2017, 2017, -1000, 882, 15149, 882, 90590, 2056, 882,
	882, 275, 330, 460, 47394, 2649, 90590, 782, 688, -1,
	-4, -5, -1000, -1000, -8, -9, -1000, -1000, 82328, 682,
	22061, 21530, 269, 1368, -63, 2418, 2416, 2412, -1000, 2403,
	1727, -64, 1302, 82328, 100459, -41, -1000, 7721, -71, -1000,
	1309, 264, 3347, -1000, -1000, -1000, -1000, -1000, 3502, 3500,
	-1000, 1000, 681, 678, 407, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 676, 673, 673, 673, -1000, 316, 664,
	313, 662, 658, 655, -1000, -1000, -1000, -1000, -1000, 2678,
	82328, 100459, -57, 82842, -72, -1000, -1000, -1000, -1000, -1000,
	82328, 870, -80, 1113, -40, -1000, -1000, -1000, 1684, -1000,
	1671, -1000, -1000, -1000, -1000, -1000, -1000, 1382, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 979, -1000, -1000, -1000,
	-1000, -1000, -1000, 3351, 3345, -27, -1000, -1000, 21530, -1000,
	-53, 1668, 1633, -1000, 69859, 2213, 3048, 3023, 1524, -1000,
	1397, 1300, 3146, 73499, 3215, 3224, 799, -1000, 2677, -1000,
	-1000, 907, 1620, 1628, 1296, 73499, 2783, -1000, 59936, -1000,
	2566, 3135, 1355, 1379, 1355, 1355, 1350, -1000, 73499, 1624,
	1295, 1279, -1000, 1274, 1273, -1000, -54, 3214, 3218, 153,
	-1000, 2671, 1272, -1000, -1000, 82328, 21530, 1497, 1486, 1623,
	1271, -28, -1000, 3202, 3200, 1264, 1263, -1000, 4352, -1000,
	66765, 1726, 2856, 2537, 877, 2536, -1000, -1000, 877, -30,
	67279, 100459, 260, -1000, 99, 42526, 42526, 99, 42526, 99,
	3177, -1000, -1000, 2854, -1000, -1000, -1000, 3495, 1825, 2349,
	-1000, -1000, 654, 2222, 2662, 100459, 2446, -32, 82328, -1000,
	2852, 60457, 2783, 2220, -1000, -1000, 74534, -1000, 2849, 510,
	2219, -1000, 677, 3491, -1000, 103543, -1000, 3059, 1345, 2847,
	1058, 651, 3261, -1000, 651, 56820, -1000, 100459, -1000, -19,
	100459, -1000, -1000, -1000, 3490, -1000, 82328, -1000, -1000, 82328,
	206, 2845, -1000, 82328, -1000, 82328, 194, 2844, -1000, -1000,
	100459, -1000, 82328, 82328, -1000, 100459, 100459, 66765, 66765, 6207,
	68831, -81, -82, 459, -1000, 91109, 100459, 1054, 69345, 100459,
	2990, 950, 51606, -1000, -87, -156, 2527, 940, 940, 877,
	-1000, 877, -1000, 82328, 2719, -1000, -1000, 66765, 940, 940,
	940, -1000, -1000, -1000, -1000, 3489, 3486, 3485, -1000, -1000,
	-1000, 951, 82328, 100459, 82328, -1000, -1000, 100459, -1000, 100459,
	100459, -1000, 951, 100459, 951, 100459, 951, 100459, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 99, 42526, -1000, -1000, 3484,
	1539, -1000, 2718, -1000, 2717, -1000, 27, -1000, -1000, -1000,
	-1000, -1000, 1856, 82328, 82328, 82328, 82328, 100459, 82328, -1000,
	73499, -1000, 2333, 2715, -1000, -1000, -1000, -1000, -1000, -1000,
	1535, 2088, -1000, 2376, -1000, 1459, -1000, -1000, -1000, 111890,
	46325, -1000, -1000, 111890, 1721, -1000, 44706, 44161, -1000, -1000,
	1594, 82328, 2464, -1000, 2464, -244, -1000, 110015, 2370, 82328,
	-1000, -1000, -1000, -1000, -1000, 906, 578, 578, 1224, 1224,
	1224, 1224, 3191, 309, 438, 1907, 7645, 7645, 378, 378,
	378, 378, 378, 7645, 1098, 895, 895, 1098, 1098, 1098,
	1098, 1098, 895, 895, 895, 7645, 7645, 7645, 112099, 10957,
	7166, 42526, 42526, 1260, 1851, 555, 6678, 42526, 7587, 7587,
	7587, 7587, -1000, 2015, -1000, -1000, -1000, -1000, 2652, 653,
	45796, 45796, -1000, -1000, -1000, -1000, 23163, 42526, -1000, -1000,
	-1000, -1000, 32524, -1000, -1000, 109723, -312, 458, -216, 1,
	-1000, 42526, 42526, 42526, 456, -1000, 259, 42526, 100459, -1000,
	14390, 781, -102, -1000, -88, 1381, -1000, 42526, -1000, -1000,
	1259, -1000, 1257, 1252, 1249, -1000, 650, 455, -1000, 256,
	-1000, 2042, 649, 644, 42526, -1000, -1000, -1000, -1000, -1000,
	109334, -1000, -1000, 109169, -1000, -1000, 109083, -1000, -1000, 108917,
	-1000, -1000, -1000, 111546, 14040, 13955, 13486, 5981, 12346, 11532,
	-89, 452, -96, 451, 894, 893, 450, 449, 448, -103,
	-1000, 3483, 3482, 3481, -1000, 3478, 3477, 3476, -1000, 3467,
	3466, 3465, -1000, 3464, 3463, 3462, -1000, 3460, 3458, 3457,
	-1000, 3456, 3453, 3452, -1000, 3451, 3449, 3447, -1000, 3445,
	3444, 3443, -106, 447, -1000, 2651, -216, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 446, -1000, 445, -1000, 111460,
	-216, 444, 4814, -1000, 45796, 45796, 45796, -1000, 435, -1000,
	110307, -1000, 111337, 31979, 31979, 31979, 425, 110991, 42526, -216,
	-113, -1000, -115, -1000, -1000, 548, -121, 990, 31422, 48450,
	21530, -1000, 990, 990, 42526, -1000, 42526, 2389, -1000, -1000,
	-1000, 2388, 2172, 2445, 49492, -1000, -1000, -1000, -1000, 90590,
	-1000, 3328, 2746, -1000, 90590, -1000, -1000, 100459, 510, -1000,
	90590, 90590, 21530, 882, -1000, 882, 90590, 803, -1000, -1000,
	-1000, -1000, -1000, 424, 53712, 1, 226, 21530, 968, -1000,
	2497, 2497, 2497, 2497, -1000, -1000, 100459, 1241, -31, -97,
	3291, -1000, 1927, -1000, 59936, -1000, 796, 1193, 21530, -1000,
	-1000, -1000, 643, -1000, 3347, 3347, -1000, 3347, 100459, 2645,
	114, 106, 60457, 60457, 981, 29230, -1000, 1684, -1000, -1000,
	1510, -1000, 1857, -1000, 1280, -1000, -1000, -1000, -1000, 29230,
	-1000, 2029, 100459, 100459, 82328, -1000, 100459, -1000, 2206, 103029,
	2205, 59936, 100459, -1000, -1000, 641, 640, 2369, 2368, 1046,
	100459, 100459, 2365, 102515, 102001, 100459, 2001, 42526, 60457, 2136,
	2323, 99, 99, -1000, -1000, 99, 634, 1242, 82328, 82328,
	100459, 82328, 1694, -1000, -1000, -1000, -1000, -1000, 74013, -1000,
	-1000, 3354, 3353, -1000, 1355, -1000, -1000, -1000, 1355, 2783,
	1691, 100459, 82328, 60457, 1621, 100459, 1945, 99, 99, -1000,
	-1000, 99, 632, 21530, 1852, -1000, 2777, 100459, 3389, 100459,
	100459, 100459, 60457, 3053, 101487, 100459, 100459, 60457, 4352, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	62029, 1064, 968, 1609, 1227, 73499, 51606, 948, 51606, 2510,
	-1000, -1000, 18881, -1000, 111890, 111890, -1000, 111890, -1000, 61500,
	100459, -1000, 1005, 100459, 69345, 933, 2838, 55780, -57, 940,
	66765, 82328, -32, 100459, -1000, -1000, 2783, 2837, 510, 2203,
	-1000, 66765, 3258, 2836, 631, 3441, 3438, -1000, 2114, 2201,
	-1000, -1000, 100973, 2819, 836, 100459, 990, 49492, 1848, -1000,
	54233, 1022, 100459, 1763, 98, -1000, -1000, -1000, 9, 100459,
	-1000, 810, 3433, -1000, -1000, 206, -1000, 82328, 206, 206,
	-1000, 82328, 82328, 2150, -1000, 209, -1000, 208, -1000, -127,
	-1000, -1000, 6207, 6207, 940, -277, 630, -1000, 869, 868,
	52135, 66765, -124, -1000, -1000, -1000, -1000, -1000, 82328, 100459,
	744, 2502, 100459, -126, -1000, 225, 627, -1000, 3057, -1000,
	-1000, 950, 51606, 2643, -1000, -1000, 976, -1000, 1349, 940,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-20, -57, -57, -57, -1000, 951, -1000, 951, -1000, 951,
	-1000, 111890, -1000, -1000, 1534, 1506, 100459, -1000, 21530, 100459,
	82328, 21530, 82328, 2714, 2707, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1075, -1000, 1721, 2085, -1000, 623, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2299, -1000,
	-36, 28685, 2166, -1000, -1000, 82328, -22, 42526, 42526, 6580,
	5897, 42526, 45796, 45796, -1000, 42526, 5860, -1000, -1000, -1000,
	-1000, -1000, 2634, 618, 42526, 59936, 1056, 941, -1000, 413,
	8552, 1098, -1000, 42526, -1000, 411, 30877, -1000, 110558, -66,
	-129, -1000, 15691, -216, -131, -1000, -1000, 792, -1000, 2840,
	-1000, 42526, 110907, 2270, 1911, 1706, 1541, 3347, 3387, 18352,
	-1000, 57334, 991, 2064, 108728, -1000, -1000, -1000, -1000, 59936,
	59936, 42526, 42526, -1000, 42526, 42526, 42526, -1000, -1000, -1000,
	3347, 920, -1000, -1000, -1000, 920, -1000, -1000, 1355, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1355, -1000, 42526, -1000, -1000, 2631,
	42526, -1000, 59936, 59936, 45796, 45796, 45796, 45796, 45796, 45796,
	45796, 45796, 45796, 45796, 45796, 45796, 45796, 45796, 45796, 45796,
	45796, 45796, 45796, 2407, 45796, 3317, 3317, 3317, -1000, 2627,
	2631, 42526, 42526, 59936, 405, 404, 403, -1000, 42526, -216,
	-1000, -1000, 6207, 615, -1000, 2292, -1000, 2580, -1000, 42526,
	-1000, -134, -1000, 2649, -1000, -1000, 2580, 2580, -132, 111890,
	49492, 49492, -1000, 613, 42526, 2383, -1000, -1000, 780, -310,
	-1000, 866, -1000, -1000, -1000, -1000, -1000, 510, -1000, -1000,
	-1000, 219, 90590, 90590, 779, -1000, -140, -1000, -1000, -141,
	-1000, 3257, 402, 21530, -1000, -1000, 3033, -1000, -1000, -1000,
	-1000, -1000, -1000, -57, 100459, 100459, 2076, 3381, -1000, 3349,
	790, 775, 218, 3347, 394, 393, 390, -57, 100459, 100459,
	100459, -1000, -1000, -1000, 2452, -1000, -40, -1000, -1000, -1000,
	42526, -1000, -1000, 3046, 1189, 1177, -1000, -1000, 2835, -1000,
	2196, -1000, 1029, -1000, 1864, -1000, 42526, 42526, 612, 608,
	3430, 1776, 3429, 1050, 2816, 2150, 2809, 2150, -1000, -1000,
	921, -1000, 111890, -1000, 607, 606, -1000, -53, 1563, 1608,
	974, -1000, -1000, 42526, 42526, 90076, -1000, 431, 3043, -23,
	-1000, -1000, 1605, 1173, -1000, -1000, -1000, -1000, 2783, 1602,
	1158, -1000, -1000, -1000, 971, -1000, -1000, 970, -1000, -1000,
	42526, -1000, -54, 1155, 3194, 2193, 82328, 1152, -1000, 1151,
	-1000, -1000, -1000, 3198, 2150, 2808, 1163, -1000, -1000, -1000,
	-1000, -1000, 60986, -1000, 100459, 82328, 1591, 877, -1000, 2341,
	877, 948, 2619, -1000, 2424, 3426, 82328, 3425, 389, -153,
	-55, 59936, 3256, -1000, 2137, 622, 82328, 889, -1000, 3328,
	-1000, -1000, -1000, -1000, 3188, 82328, 3249, 2804, 968, 99,
	82328, 3377, -1000, -1000, 82328, 2801, 2108, 2190, 2337, 836,
	68317, -1000, 968, 2059, -120, -1000, 1763, 30320, 3039, -154,
	-1000, -1000, -1000, 990, 56820, 49492, 42526, 3421, -155, -1000,
	-1000, -1000, -1000, 206, -1000, -1000, -1000, 194, -1000, -1000,
	-1000, -1000, -1000, -1000, 89043, 89043, 66765, 66765, 66765, 940,
	100459, 100459, 69345, -1000, 604, 100459, 100459, 603, -1000, 100459,
	100459, 3419, 66765, -56, 601, -1000, 865, 863, 862, -1000,
	-1000, -1000, -1000, -1000, -1000, -156, 99, -1000, 2072, 82328,
	-1000, 17823, -1000, -1000, -1000, -1000, -1000, 951, -1000, -1000,
	1966, 2147, 1966, 1746, 1729, -1000, 2083, -1000, -1000, -1000,
	-1000, 2429, 3050, 21530, 3237, 7587, 42526, 42526, 5261, 883,
	545, 7587, 42526, 42526, 59936, 499, -161, 42526, 42526, -1000,
	42526, 774, 111890, 3375, 42526, 385, 382, -1000, -1000, -1000,
	3333, -1000, -1000, -1000, 111890, 42526, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 376, -1000, 195, -1000, -1000, -1000, 106627,
	-1000, 42526, 375, 3131, -1000, 362, 361, 7557, 248, 108476,
	108436, 108047, 360, -1000, -1000, 359, 356, 111890, 2627, 111890,
	-1000, -1000, 932, 932, 1336, 1336, 1336, 1336, 3317, 328,
	427, 2925, 1980, 1980, 1980, 2427, 1239, 1239, 1980, 1980,
	1980, 2618, 2347, 599, 4895, -1000, -1000, 111890, 111890, 354,
	-1000, -1000, -1000, -216, 352, 6207, -1000, 2567, 3123, 111890,
	-1000, 49492, 2567, 2567, -1000, -1000, 2172, 100459, 111890, 49492,
	-1000, 2746, -1000, 16231, -1000, 21530, -1000, -1000, -1000, -1000,
	3328, -1000, 53712, -1000, 597, -1000, 100, 3033, -1000, 860,
	-1000, -57, -57, -1000, -1000, 773, 3416, 789, 21530, 351,
	-1000, -1000, -1000, -57, -57, -57, -1000, 2987, 111890, 100459,
	100459, 100459, 2799, -1000, 4402, -1000, 1046, 107882, -162, -1000,
	110015, 42526, 100459, -1000, -1000, 1809, 2396, 1095, -1000, 3091,
	100459, -1000, 100459, -1000, -1000, 100459, 100459, 82328, 100459, 2784,
	-164, 111890, -60, -1000, 846, -1000, 1359, -1000, 17294, 100459,
	82328, 100459, 82328, 2007, 2779, -173, 21530, -1000, 3374, 3370,
	2798, 3099, 3366, 100459, -1000, 100459, 82328, 2983, -1000, -1000,
	-1000, -1000, 1570, 1150, 948, -73, 596, -1000, 845, -1000,
	-1000, 844, 948, -1000, 66765, 51606, -1000, 510, -1000, 2493,
	-1000, 86961, 2167, 99, -1000, 3415, 89562, 591, -1000, 2071,
	-1000, 579, 60457, 2783, 99, 82328, -1000, -1000, 510, 348,
	-74, -1000, 1039, 21530, 82328, 2796, 2344, 836, 68317, -1000,
	1345, 2457, -1000, -105, -1000, 605, 99, 2059, -1000, -120,
	111890, -1000, 842, -1000, -1000, -1000, -175, -1000, -1000, 339,
	-1000, 2981, 2978, -1000, 2590, 42526, 590, 589, 100459, 2977,
	-1000, -1000, -180, 2859, 2859, 66765, 51606, 66765, 950, -1000,
	2294, -1000, -1000, -1000, -1000, -1000, 21530, 1592, -1000, 588,
	587, -1000, -1000, -1000, -1000, 3050, 7587, 7587, 42526, 42526,
	42526, 7587, 499, -181, -1000, 7587, 7587, -216, -1000, -1000,
	110558, -1000, -1000, -1000, 111890, -1000, 16765, 1968, -1000, 107796,
	-1000, 28685, -1000, -1000, 42526, 42526, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 45796, 2617, 583, 59936, -1000, -1000,
	336, 988, 42526, 42526, 2649, 988, 988, -1000, -183, -1000,
	-1000, -1000, 3328, 100, -1000, -1000, 3414, 21530, -1000, 66765,
	788, -1000, 3412, -1000, -1000, -1000, -1000, -1000, -1000, 100459,
	-1000, 100459, -1000, 21530, 100459, 2595, 2181, -1000, -1000, 2364,
	569, 45796, 82328, 899, -1000, 3250, 2569, 1824, 42526, 2166,
	-188, -189, 2173, -1000, -1000, 2169, 42526, -1000, 59936, 565,
	2150, 2150, -190, -195, -1000, -1000, 42526, 1149, 100459, 29775,
	-1000, 3410, 3043, -1000, -1000, -1000, -1000, 100459, 42526, 1144,
	-1000, -1000, -1000, 3364, 2150, 21530, -1000, 2150, 2150, 3099,
	1091, 100459, 82328, -1000, 2175, 2175, 66765, 51606, -1000, -127,
	948, 3248, 1945, 2523, -1000, -1000, -1000, -1000, 2360, -1000,
	-1000, 100459, 2358, 942, -1000, -196, -1000, 841, 839, 69345,
	933, 928, -1000, -1000, -1000, -1000, 510, 3247, -1000, 3360,
	563, 100459, 2107, 560, 21530, 3027, 836, 68317, -1000, 2819,
	1763, -1000, 2188, 100459, 3019, -1000, 2457, 555, -1000, 940,
	552, 551, 3199, 3199, -197, 42526, 42526, -198, 549, 940,
	-1000, -203, -1000, -1000, -1000, -1000, -142, -1000, 738, 669,
	-1000, -1000, 82328, 82328, 42526, 42526, -1000, 7587, 7587, 7587,
	-1000, 334, -1000, -1000, 2059, 3118, -1000, -167, 107630, 107441,
	5543, 45796, 59936, -204, -1000, -1000, 100459, 111890, -216, -1000,
	-1000, -1000, 567, -1000, -1000, 3407, -1000, -1000, 2049, -1000,
	-1000, -1000, 100459, 2180, -1000, 1042, 42526, 4895, 544, 42526,
	-1000, 3236, -1000, 2491, 2641, 2493, 543, -1000, -1000, -1000,
	-1000, -1000, 1033, 1803, -1000, -1000, 111890, 3099, 42526, -1000,
	-1000, 530, 529, 111890, 524, 838, 2611, -1000, -1000, -1000,
	-1000, 111890, 523, 3194, -1000, -1000, -1000, -1000, 2150, 82328,
	-1000, -1000, -1000, -205, -1000, -1000, 1838, 99, 933, -1000,
	2004, 2167, 522, -1000, -1000, 2097, 2442, -1000, 89562, 29230,
	29230, 331, 3223, 928, -1000, 3321, -1000, 3222, 99, -1000,
	42526, -1000, 82328, 42526, 2102, -1000, 2313, 68317, -1000, 2337,
	-1000, -1000, -206, 100459, 1763, -1000, -1000, 66765, 66765, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1033, -211, -213, -1000, 66765, -1000, -1000, 2294, -1000, 100459,
	-1000, 100459, -1000, -1000, -214, -223, -1000, 1962, 42526, 28685,
	-1000, -1000, 5543, -230, -1000, -174, -1000, 3220, -1000, -1000,
	-1000, -1000, 2793, 2561, 107189, 2295, 100459, 107149, -1000, 2624,
	-1000, -1000, 1945, 100459, 2493, 2559, 82328, 1040, -231, 1966,
	1966, 42526, 28140, 1994, 42526, -1000, -1000, 3099, -1000, 2598,
	3329, -1000, 2097, 82328, 100459, -1000, 3081, -1000, 2975, -1000,
	-1000, -1000, 2493, 99, -1000, -1000, 99, -1000, -232, 1039,
	-233, 82328, 836, -1000, 2344, 990, -1000, -1000, -242, -247,
	1824, 1033, 936, -248, -1000, -249, -250, -1000, -1000, 329,
	43616, 43616, 43616, -216, -244, -1000, 100459, 518, 2770, 946,
	-1000, 2098, 1730, 29, 1059, -1000, -1000, 2569, -256, -1000,
	945, 510, -1000, 42526, 1033, -257, -1000, 1021, -258, -1000,
	1019, -259, -1000, 2609, -1000, -266, 2150, 944, 3172, -1000,
	-1000, -1000, -1000, 508, -267, -1000, -1000, 2182, -1000, 1945,
	942, -1000, 1033, 507, 1824, 505, 1355, 3027, 2934, 940,
	940, 2493, 1824, 990, 504, 940, -1000, -1000, -1000, 2792,
	-1000, 46854, 2084, 1695, 109763, 2792, 2792, -1000, -1000, 100459,
	3161, -1000, 2100, 2099, 1448, -1000, -1000, -1000, -1000, -1000,
	-1000, 990, -1000, 3160, 2295, 111890, 2493, -1000, 1966, 2515,
	-1000, 1966, 2606, -1000, 1985, -1000, -1000, -1000, 1612, 3316,
	100459, -1000, 100459, 1678, 1646, 3403, 933, 2097, 1824, 42526,
	2493, 42526, -1000, -1000, 1258, -1000, -1000, 1945, 2493, -1000,
	-1000, -1000, 1733, 3281, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 832, -1000, 2958, -1000, 1074, 2016, 2016, -1000,
	831, 2098, -1000, -1000, 503, -1000, 502, -1000, 2067, -1000,
	-1000, -274, -1000, -1000, 3398, -1000, 2097, -1000, 2493, -275,
	1945, -282, -1000, 1500, 936, 1945, 1625, -1000, -1000, 2053,
	43071, 42526, -1000, 3302, -1000, -1000, 2371, -1000, 42526, 2569,
	42526, 42526, 55266, 2144, -1000, -1000, 1945, 1033, 936, 1824,
	56820, 990, 936, -1000, -1000, -1000, 111890, -1000, -1000, -1000,
	111890, -1000, -283, -285, -277, 89043, -1000, -1000, -1000, 936,
	1824, 990, 2493, -269, -1000, 990, 1945, 1127, -300, 990,
	2493, -1000, 1945, -1000, -1000, -1000, 486, -1000, -1000, 1945,
	936, 42526, 936, 990, -303, 990, -1000, 1945, -1000, -1000,
}
var sqlPgo = [...]int{

	0, 4218, 4215, 4212, 4211, 4209, 4208, 4207, 4206, 4204,
	4203, 4202, 4201, 4200, 4199, 4192, 4189, 4188, 4187, 4186,
	4185, 4179, 4178, 4176, 4175, 4174, 4171, 4170, 4169, 4168,
	4167, 4165, 4159, 4158, 4157, 4154, 4152, 4150, 4149, 4148,
	4145, 4144, 4143, 4136, 4135, 4134, 4133, 4131, 4129, 4128,
	4127, 4126, 4125, 4124, 43, 4123, 4119, 4117, 4114, 4109,
	4108, 4103, 4102, 4101, 4100, 4098, 4097, 4096, 4094, 4093,
	4092, 4091, 4090, 44, 4086, 244, 4085, 4084, 4083, 4081,
	4078, 4077, 4076, 4074, 4071, 4069, 4067, 4064, 243, 4062,
	107, 4058, 4057, 4055, 4052, 4051, 241, 4050, 4045, 4044,
	4042, 250, 4041, 4040, 4039, 4036, 4035, 4032, 4030, 4026,
	4024, 4023, 62, 178, 4022, 4019, 46, 4018, 4017, 4015,
	4012, 4009, 4005, 4003, 4002, 4001, 4000, 214, 3999, 240,
	3997, 3996, 3994, 3992, 3990, 3989, 3988, 3986, 3982, 3981,
	3980, 3976, 3974, 3973, 3971, 3968, 3967, 3966, 3965, 3964,
	3963, 3962, 3959, 3958, 3956, 3955, 3954, 3952, 3951, 3950,
	3949, 3945, 3942, 248, 154, 3941, 3940, 238, 236, 3939,
	3938, 3936, 3926, 3918, 104, 4, 30, 3914, 3913, 93,
	64, 69, 83, 81, 79, 3912, 87, 3909, 108, 51,
	3907, 16, 2, 219, 207, 9336, 202, 3903, 3895, 3894,
	224, 162, 3893, 208, 3892, 3890, 3889, 3888, 77, 68,
	144, 152, 151, 140, 100, 3885, 3882, 82, 57, 42,
	37, 34, 3880, 3876, 3872, 3865, 3066, 109, 3863, 232,
	212, 139, 3862, 3861, 3859, 2218, 3857, 38, 3856, 99,
	60, 116, 13, 102, 3855, 125, 22, 3854, 182, 45,
	3853, 132, 78, 65, 8414, 8661, 3851, 90, 63, 177,
	2566, 146, 143, 167, 175, 137, 168, 190, 184, 150,
	737, 3849, 221, 3848, 3228, 55, 136, 3847, 3846, 3844,
	67, 166, 84, 3843, 3841, 52, 18, 27, 7, 142,
	11, 94, 20, 3836, 14, 3835, 3830, 3829, 3828, 41,
	147, 3824, 245, 3823, 58, 36, 25, 3822, 35, 179,
	3818, 193, 119, 3816, 3815, 226, 174, 165, 3814, 98,
	195, 3812, 3811, 3806, 3805, 3802, 111, 1, 112, 3801,
	3800, 115, 213, 164, 3796, 50, 3795, 3794, 145, 85,
	124, 246, 105, 198, 89, 194, 158, 201, 3791, 3790,
	3787, 159, 3785, 3784, 183, 133, 3783, 3781, 186, 249,
	32, 66, 203, 61, 161, 134, 3780, 171, 3778, 3777,
	247, 155, 176, 12, 15, 75, 103, 3776, 5, 200,
	129, 169, 88, 3775, 5591, 1978, 1932, 3763, 3761, 130,
	95, 56, 91, 135, 230, 54, 3759, 3757, 1825, 3756,
	3753, 3751, 3750, 156, 3749, 3746, 3742, 117, 121, 188,
	3730, 76, 71, 10, 120, 222, 234, 101, 191, 148,
	223, 3728, 3727, 3724, 149, 3721, 48, 110, 3719, 163,
	220, 3718, 3716, 192, 3714, 123, 209, 53, 131, 3713,
	187, 3712, 3710, 3697, 3695, 3690, 3689, 3684, 185, 204,
	3683, 3682, 3681, 29, 160, 3680, 229, 126, 199, 80,
	40, 3679, 70, 2521, 3675, 173, 206, 92, 113, 3673,
	3669, 710, 39, 0, 11117, 10079, 6818, 9483, 3667, 1881,
	3665, 3664, 3661, 172, 122, 3659, 3658, 3657, 86, 3655,
	59, 3654, 3653, 49, 3652, 17, 6, 8, 23, 21,
	2142, 106, 3648, 3647, 97, 114, 127, 3646, 237, 197,
	3645, 3643, 3642, 3641, 74, 3640, 31, 3636, 26, 3635,
	3632, 33, 9, 24, 3631, 3630, 210, 3629, 181, 211,
	3628, 138, 3627, 3209, 118, 3626, 3624, 228, 73, 3621,
	227, 3620, 3130, 3619, 3617, 19, 3616, 3615, 205, 153,
	189, 3614, 3613, 141, 3612, 3611, 3608, 225, 3601, 3593,
	28, 3589, 3, 3587, 3586, 170, 3048, 3585, 3584, 47,
	3582, 157,
}
var sqlR1 = [...]int{

	0, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 3, 3, 3, 3, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 5, 11, 11, 7, 7,
	7, 8, 8, 8, 8, 41, 41, 9, 9, 9,
	9, 9, 29, 10, 10, 6, 6, 6, 6, 6,
	6, 6, 6, 6, 16, 16, 30, 30, 17, 17,
	32, 32, 18, 18, 33, 33, 537, 537, 21, 35,
	22, 36, 15, 538, 538, 538, 538, 28, 23, 37,
	25, 25, 25, 25, 25, 177, 177, 177, 177, 20,
	20, 31, 31, 211, 211, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 536, 536,
	213, 213, 212, 207, 207, 539, 539, 214, 214, 214,
	216, 216, 13, 13, 13, 13, 13, 13, 13, 13,
	13, 437, 437, 437, 469, 469, 468, 468, 468, 552,
	552, 553, 553, 553, 553, 553, 115, 115, 337, 337,
	337, 43, 43, 43, 43, 43, 531, 531, 179, 179,
	179, 181, 181, 180, 180, 180, 180, 64, 64, 544,
	544, 545, 545, 543, 546, 546, 546, 178, 178, 178,
	111, 111, 111, 111, 112, 112, 113, 113, 182, 182,
	182, 184, 184, 183, 183, 183, 183, 183, 183, 183,
	183, 188, 97, 97, 97, 97, 97, 97, 97, 97,
	97, 92, 92, 471, 471, 472, 472, 173, 173, 174,
	174, 174, 174, 175, 175, 176, 176, 176, 57, 185,
	185, 187, 187, 186, 186, 45, 45, 45, 45, 45,
	45, 45, 46, 46, 46, 46, 46, 47, 47, 47,
	47, 47, 47, 48, 48, 48, 48, 48, 48, 55,
	55, 55, 55, 164, 164, 58, 58, 58, 58, 58,
	58, 58, 58, 58, 554, 554, 554, 554, 554, 554,
	554, 554, 554, 554, 554, 554, 554, 554, 554, 554,
	554, 554, 554, 555, 555, 556, 556, 557, 557, 558,
	558, 558, 558, 558, 558, 558, 558, 558, 558, 558,
	558, 558, 558, 558, 558, 558, 558, 60, 60, 60,
	60, 60, 60, 60, 60, 60, 60, 60, 60, 60,
	60, 60, 60, 60, 60, 70, 70, 301, 301, 273,
	273, 71, 71, 71, 72, 72, 73, 73, 59, 59,
	529, 529, 316, 316, 428, 428, 75, 75, 336, 336,
	76, 76, 76, 76, 76, 76, 77, 77, 77, 77,
	77, 77, 77, 78, 78, 78, 78, 78, 78, 78,
	78, 78, 78, 78, 78, 78, 78, 85, 85, 85,
	85, 85, 86, 86, 86, 83, 83, 83, 80, 80,
	80, 79, 79, 79, 84, 84, 84, 528, 263, 263,
	82, 82, 82, 266, 266, 81, 81, 81, 317, 317,
	87, 87, 87, 87, 274, 88, 88, 88, 88, 88,
	88, 88, 88, 90, 90, 90, 90, 90, 90, 90,
	90, 90, 90, 90, 90, 90, 90, 90, 90, 90,
	90, 90, 90, 90, 90, 90, 90, 90, 90, 90,
	90, 90, 90, 90, 91, 91, 91, 91, 91, 91,
	91, 91, 91, 91, 91, 91, 430, 430, 89, 89,
	89, 396, 396, 93, 93, 93, 352, 352, 94, 94,
	94, 94, 94, 95, 95, 95, 95, 95, 95, 114,
	114, 114, 114, 114, 114, 533, 533, 309, 309, 229,
	229, 229, 229, 104, 104, 104, 104, 105, 105, 105,
	106, 106, 169, 169, 121, 121, 121, 121, 121, 120,
	120, 120, 120, 120, 120, 49, 49, 49, 50, 50,
	51, 51, 52, 52, 53, 53, 54, 54, 54, 54,
	54, 123, 123, 549, 549, 125, 122, 122, 122, 124,
	124, 124, 124, 126, 127, 127, 127, 127, 127, 127,
	127, 127, 128, 128, 462, 462, 325, 325, 460, 460,
	480, 480, 461, 461, 278, 278, 278, 278, 278, 279,
	279, 279, 470, 470, 470, 470, 470, 470, 129, 129,
	129, 129, 129, 129, 129, 129, 129, 129, 129, 129,
	129, 129, 129, 129, 129, 129, 129, 129, 129, 129,
	129, 129, 129, 129, 129, 129, 129, 129, 129, 129,
	129, 129, 129, 129, 129, 129, 129, 129, 129, 129,
	129, 129, 129, 129, 129, 129, 129, 129, 129, 129,
	129, 129, 129, 129, 129, 129, 129, 129, 129, 129,
	129, 129, 170, 170, 171, 172, 172, 172, 172, 149,
	149, 149, 163, 163, 163, 163, 163, 163, 163, 152,
	152, 152, 139, 139, 130, 130, 130, 130, 130, 130,
	130, 134, 134, 134, 134, 134, 134, 134, 134, 131,
	131, 141, 141, 141, 141, 141, 135, 135, 136, 136,
	159, 159, 138, 138, 140, 140, 140, 140, 140, 140,
	140, 140, 140, 132, 132, 132, 132, 143, 143, 143,
	143, 359, 359, 359, 142, 142, 142, 142, 142, 142,
	142, 142, 142, 142, 142, 162, 162, 162, 162, 162,
	162, 547, 547, 548, 548, 156, 156, 156, 156, 156,
	156, 410, 410, 150, 150, 150, 150, 155, 155, 155,
	155, 158, 158, 158, 158, 342, 342, 147, 147, 147,
	148, 148, 148, 153, 153, 154, 151, 151, 157, 157,
	157, 157, 133, 133, 133, 559, 559, 559, 160, 160,
	146, 146, 161, 161, 161, 161, 161, 161, 161, 161,
	145, 145, 145, 144, 144, 144, 144, 137, 530, 530,
	526, 526, 526, 526, 526, 526, 526, 526, 527, 527,
	527, 532, 532, 98, 98, 98, 98, 98, 107, 107,
	107, 107, 107, 99, 99, 99, 99, 99, 101, 101,
	100, 100, 100, 100, 65, 65, 65, 65, 65, 14,
	14, 14, 66, 66, 191, 191, 191, 192, 192, 286,
	286, 286, 286, 189, 189, 190, 190, 67, 67, 560,
	560, 560, 540, 540, 540, 541, 541, 541, 541, 541,
	541, 280, 280, 281, 281, 376, 376, 376, 376, 376,
	284, 284, 284, 285, 285, 285, 285, 285, 285, 285,
	285, 285, 287, 287, 215, 215, 215, 290, 291, 291,
	288, 288, 289, 289, 289, 293, 293, 292, 295, 295,
	294, 375, 489, 489, 491, 491, 491, 491, 491, 491,
	491, 493, 493, 493, 493, 493, 493, 493, 493, 493,
	493, 493, 561, 561, 487, 487, 487, 488, 483, 483,
	484, 484, 484, 484, 484, 282, 282, 283, 283, 283,
	283, 485, 486, 307, 307, 413, 490, 490, 492, 492,
	494, 562, 562, 562, 562, 562, 562, 563, 563, 563,
	374, 374, 373, 373, 299, 299, 495, 495, 495, 495,
	496, 496, 496, 496, 496, 499, 498, 497, 497, 497,
	497, 497, 69, 69, 69, 339, 339, 338, 338, 340,
	340, 340, 340, 340, 340, 340, 340, 340, 340, 340,
	340, 340, 340, 340, 166, 166, 232, 232, 63, 63,
	63, 12, 12, 12, 542, 542, 542, 68, 68, 68,
	68, 68, 68, 231, 231, 231, 231, 231, 231, 231,
	231, 231, 231, 231, 231, 231, 231, 231, 231, 231,
	231, 231, 231, 535, 535, 534, 534, 233, 233, 565,
	565, 74, 74, 74, 74, 74, 74, 74, 431, 431,
	432, 432, 62, 62, 62, 62, 62, 360, 360, 358,
	358, 357, 357, 306, 306, 412, 237, 237, 208, 208,
	208, 27, 26, 19, 19, 24, 24, 39, 39, 39,
	39, 42, 42, 38, 38, 38, 38, 40, 40, 34,
	34, 550, 550, 551, 551, 103, 103, 108, 108, 108,
	108, 108, 109, 109, 109, 109, 110, 110, 110, 110,
	119, 119, 165, 165, 165, 165, 165, 165, 165, 44,
	44, 44, 44, 56, 56, 56, 56, 117, 567, 567,
	567, 118, 118, 118, 566, 566, 230, 230, 370, 370,
	371, 371, 568, 568, 372, 372, 372, 372, 372, 223,
	222, 224, 224, 225, 225, 61, 61, 61, 217, 217,
	218, 218, 219, 219, 220, 220, 221, 221, 569, 569,
	96, 96, 96, 168, 168, 272, 272, 272, 367, 367,
	367, 300, 300, 243, 243, 369, 369, 369, 369, 335,
	335, 335, 167, 167, 314, 314, 327, 327, 328, 328,
	425, 425, 329, 102, 102, 116, 116, 195, 195, 193,
	193, 193, 193, 193, 193, 193, 193, 200, 200, 201,
	201, 202, 202, 203, 204, 204, 204, 204, 318, 318,
	205, 205, 205, 194, 194, 194, 196, 196, 196, 196,
	196, 196, 196, 199, 199, 199, 199, 206, 206, 206,
	198, 198, 506, 506, 506, 508, 508, 510, 510, 509,
	509, 505, 505, 507, 507, 564, 564, 341, 341, 341,
	297, 298, 296, 296, 304, 304, 302, 303, 303, 305,
	305, 411, 411, 411, 209, 209, 209, 332, 332, 332,
	332, 333, 333, 363, 363, 361, 361, 361, 361, 362,
	362, 364, 364, 364, 365, 365, 366, 366, 331, 331,
	392, 392, 197, 197, 197, 311, 311, 311, 312, 312,
	382, 382, 382, 382, 382, 382, 383, 383, 381, 381,
	381, 381, 414, 414, 414, 414, 414, 414, 414, 414,
	414, 415, 416, 416, 313, 313, 417, 368, 368, 524,
	524, 524, 525, 525, 409, 409, 418, 418, 418, 418,
	418, 418, 407, 407, 408, 408, 426, 427, 427, 345,
	345, 345, 345, 343, 343, 346, 346, 346, 346, 344,
	344, 419, 419, 419, 419, 334, 334, 420, 420, 420,
	420, 421, 422, 422, 423, 423, 377, 378, 378, 433,
	433, 433, 433, 435, 310, 310, 310, 310, 310, 482,
	481, 481, 434, 434, 434, 434, 434, 434, 434, 434,
	434, 449, 449, 449, 449, 449, 449, 449, 449, 449,
	449, 449, 449, 449, 449, 449, 449, 449, 449, 449,
	449, 449, 449, 449, 449, 449, 449, 449, 449, 449,
	449, 449, 449, 450, 450, 450, 450, 450, 450, 450,
	436, 436, 436, 436, 436, 440, 440, 440, 439, 439,
	439, 439, 439, 439, 439, 439, 439, 439, 439, 441,
	441, 446, 446, 447, 447, 447, 442, 443, 448, 448,
	448, 448, 570, 570, 452, 452, 444, 444, 444, 444,
	444, 444, 444, 444, 444, 438, 438, 438, 445, 445,
	445, 354, 354, 354, 354, 354, 354, 354, 354, 354,
	354, 354, 354, 354, 353, 353, 355, 355, 384, 384,
	384, 384, 384, 384, 384, 384, 384, 384, 384, 384,
	384, 384, 384, 384, 384, 384, 384, 384, 384, 384,
	384, 384, 384, 384, 384, 384, 384, 384, 384, 384,
	384, 384, 384, 384, 384, 384, 384, 384, 384, 384,
	384, 384, 384, 384, 384, 384, 384, 384, 384, 384,
	384, 384, 384, 384, 384, 384, 384, 384, 384, 384,
	384, 384, 384, 384, 384, 384, 384, 384, 384, 384,
	384, 384, 384, 384, 384, 384, 384, 384, 384, 384,
	384, 384, 384, 384, 384, 384, 385, 385, 385, 385,
	385, 385, 385, 385, 385, 385, 385, 385, 385, 385,
	385, 385, 385, 385, 385, 385, 385, 385, 385, 385,
	385, 385, 385, 385, 385, 386, 386, 386, 386, 387,
	387, 387, 387, 387, 387, 387, 387, 387, 387, 387,
	387, 387, 387, 387, 387, 387, 387, 387, 387, 387,
	387, 387, 387, 387, 500, 500, 500, 500, 500, 500,
	500, 500, 388, 388, 503, 503, 504, 504, 501, 501,
	501, 501, 501, 501, 501, 501, 501, 501, 501, 501,
	501, 501, 501, 501, 501, 501, 501, 501, 501, 501,
	501, 502, 502, 502, 502, 502, 502, 502, 502, 502,
	502, 502, 502, 502, 502, 502, 502, 502, 502, 502,
	502, 502, 502, 502, 502, 502, 502, 502, 502, 502,
	502, 502, 502, 502, 502, 502, 502, 511, 511, 512,
	512, 514, 514, 515, 515, 516, 517, 517, 517, 518,
	519, 519, 513, 513, 520, 520, 520, 520, 521, 521,
	522, 522, 522, 522, 522, 523, 523, 523, 523, 523,
	398, 398, 399, 399, 405, 405, 405, 277, 277, 277,
	277, 277, 277, 277, 277, 277, 277, 277, 277, 277,
	277, 277, 277, 234, 234, 234, 234, 234, 323, 323,
	321, 321, 321, 324, 324, 322, 322, 320, 320, 319,
	319, 395, 395, 393, 393, 397, 397, 347, 347, 451,
	451, 451, 451, 451, 451, 451, 451, 348, 348, 348,
	356, 349, 349, 350, 350, 350, 350, 350, 389, 390,
	351, 351, 351, 391, 391, 400, 404, 404, 403, 402,
	402, 401, 401, 379, 379, 380, 380, 330, 330, 571,
	571, 326, 326, 424, 424, 424, 424, 276, 276, 315,
	315, 275, 275, 267, 267, 268, 268, 268, 268, 308,
	308, 406, 406, 453, 453, 454, 454, 455, 455, 456,
	456, 457, 458, 459, 394, 394, 253, 252, 240, 241,
	251, 250, 249, 239, 242, 246, 247, 248, 244, 245,
	259, 258, 257, 264, 265, 255, 256, 429, 238, 269,
	269, 270, 270, 270, 271, 271, 271, 271, 235, 235,
	236, 236, 260, 260, 261, 262, 262, 254, 254, 254,
	226, 226, 226, 227, 227, 228, 228, 467, 467, 464,
	464, 464, 465, 465, 465, 466, 466, 466, 466, 463,
	463, 463, 463, 463, 473, 473, 473, 473, 473, 473,
	473, 473, 473, 473, 473, 473, 473, 473, 473, 473,
	473, 473, 473, 473, 473, 473, 473, 473, 473, 473,
	473, 473, 473, 473, 473, 473, 473, 473, 473, 473,
	473, 473, 473, 473, 473, 473, 473, 473, 473, 473,
	473, 473, 473, 473, 473, 473, 473, 473, 473, 473,
	473, 473, 473, 473, 473, 473, 473, 473, 473, 473,
	473, 473, 473, 473, 473, 473, 473, 473, 473, 473,
	473, 473, 473, 473, 473, 473, 473, 473, 473, 473,
	473, 473, 473, 473, 473, 473, 473, 473, 473, 473,
	473, 473, 473, 473, 473, 473, 473, 473, 473, 473,
	473, 473, 473, 473, 473, 473, 473, 473, 473, 473,
	473, 473, 473, 473, 473, 473, 473, 473, 473, 473,
	473, 473, 473, 473, 473, 473, 473, 473, 473, 473,
	473, 473, 473, 473, 473, 473, 473, 473, 473, 473,
	473, 473, 473, 473, 473, 473, 473, 473, 473, 473,
	473, 473, 473, 473, 473, 473, 473, 473, 473, 473,
	473, 473, 473, 473, 473, 473, 473, 473, 473, 473,
	473, 473, 473, 473, 473, 473, 473, 473, 473, 473,
	473, 473, 473, 473, 473, 473, 473, 473, 473, 473,
	473, 473, 473, 473, 473, 473, 473, 473, 473, 473,
	473, 473, 473, 473, 473, 473, 473, 473, 473, 473,
	473, 473, 473, 473, 473, 473, 473, 473, 473, 473,
	473, 473, 473, 473, 473, 473, 473, 473, 473, 473,
	473, 473, 473, 473, 473, 473, 473, 473, 473, 473,
	473, 473, 473, 473, 473, 473, 473, 473, 473, 473,
	473, 473, 473, 473, 473, 473, 473, 473, 473, 473,
	473, 473, 473, 473, 473, 473, 473, 473, 473, 473,
	473, 473, 473, 473, 473, 473, 473, 473, 473, 473,
	473, 473, 473, 473, 473, 473, 473, 473, 473, 473,
	473, 473, 473, 473, 473, 473, 473, 473, 473, 473,
	473, 473, 473, 473, 473, 473, 473, 473, 473, 473,
	473, 473, 473, 473, 473, 473, 477, 477, 477, 477,
	477, 477, 477, 477, 477, 477, 477, 477, 477, 477,
	477, 477, 477, 477, 477, 477, 477, 477, 477, 477,
	477, 477, 477, 477, 477, 477, 477, 477, 477, 477,
	477, 477, 477, 477, 477, 477, 477, 477, 477, 477,
	477, 477, 477, 477, 477, 477, 477, 477, 474, 474,
	475, 475, 475, 475, 475, 475, 475, 475, 475, 475,
	475, 475, 475, 475, 475, 475, 475, 475, 476, 478,
	478, 478, 478, 478, 478, 478, 478, 478, 478, 478,
	478, 478, 478, 478, 478, 478, 478, 478, 478, 478,
	478, 478, 478, 478, 478, 478, 478, 478, 478, 478,
	478, 478, 478, 478, 478, 478, 478, 478, 478, 478,
	478, 478, 478, 478, 478, 478, 478, 478, 478, 478,
	478, 478, 478, 478, 478, 478, 478, 478, 478, 478,
	478, 478, 478, 478, 478, 478, 478, 478, 478, 478,
	478, 478, 478, 478, 478, 478, 478, 478, 478, 479,
	479,
}
var sqlR2 = [...]int{

	0, 1, 1, 1, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 1,
	1, 1, 1, 0, 1, 1, 2, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 1, 3, 1, 1,
	3, 1, 1, 1, 3, 4, 6, 1, 1, 1,
	1, 3, 6, 1, 3, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 4, 6, 4, 6, 6, 9,
	6, 9, 6, 5, 6, 5, 1, 1, 5, 5,
	6, 6, 4, 4, 4, 4, 3, 4, 4, 4,
	7, 7, 9, 8, 9, 5, 3, 5, 7, 4,
	12, 4, 12, 1, 3, 5, 5, 2, 5, 3,
	6, 4, 6, 5, 6, 6, 4, 8, 3, 4,
	10, 3, 6, 4, 3, 1, 3, 3, 2, 1,
	1, 3, 1, 3, 2, 2, 0, 1, 1, 0,
	2, 0, 7, 10, 8, 6, 6, 6, 9, 4,
	3, 2, 2, 0, 1, 3, 1, 1, 1, 1,
	3, 6, 4, 6, 7, 9, 6, 2, 2, 3,
	0, 8, 6, 8, 7, 2, 0, 1, 2, 5,
	0, 1, 3, 3, 1, 1, 3, 12, 3, 1,
	0, 1, 1, 2, 3, 3, 0, 4, 6, 0,
	5, 6, 8, 2, 1, 3, 1, 3, 2, 5,
	0, 1, 3, 3, 3, 3, 1, 1, 1, 1,
	1, 1, 6, 4, 9, 7, 12, 12, 12, 9,
	2, 7, 2, 1, 1, 1, 3, 3, 0, 3,
	1, 3, 1, 1, 3, 2, 5, 0, 6, 2,
	0, 1, 2, 3, 1, 1, 2, 1, 2, 1,
	2, 2, 3, 3, 3, 3, 3, 3, 5, 3,
	3, 5, 3, 3, 5, 3, 3, 5, 3, 6,
	6, 6, 6, 1, 1, 1, 2, 1, 1, 2,
	1, 2, 1, 2, 3, 3, 4, 3, 4, 7,
	4, 4, 4, 3, 5, 7, 3, 3, 4, 3,
	3, 3, 3, 2, 0, 1, 0, 1, 0, 3,
	3, 3, 3, 3, 6, 4, 4, 4, 3, 5,
	3, 3, 3, 3, 3, 3, 3, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 4, 1,
	2, 1, 2, 1, 2, 7, 3, 2, 0, 1,
	3, 3, 1, 0, 1, 2, 2, 1, 6, 5,
	1, 2, 1, 3, 2, 0, 9, 3, 2, 0,
	2, 2, 2, 2, 2, 2, 1, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 4, 6, 5,
	7, 3, 4, 6, 3, 4, 6, 3, 5, 7,
	3, 4, 6, 3, 4, 6, 3, 1, 1, 3,
	4, 6, 3, 1, 3, 3, 5, 3, 1, 3,
	2, 2, 2, 2, 1, 2, 2, 5, 3, 3,
	6, 6, 3, 1, 1, 2, 1, 1, 1, 2,
	1, 1, 2, 1, 2, 1, 2, 1, 1, 1,
	2, 1, 1, 2, 1, 1, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 2, 1, 2, 1, 3, 5, 7,
	2, 3, 0, 3, 5, 2, 3, 0, 2, 3,
	2, 3, 2, 6, 4, 7, 7, 7, 2, 6,
	4, 7, 7, 7, 2, 1, 1, 1, 3, 1,
	1, 1, 1, 1, 2, 1, 2, 2, 3, 2,
	4, 3, 2, 2, 1, 2, 1, 3, 3, 1,
	2, 1, 2, 1, 2, 1, 1, 3, 5, 4,
	6, 4, 3, 0, 1, 3, 2, 4, 2, 4,
	1, 6, 3, 1, 1, 5, 3, 2, 6, 3,
	3, 4, 4, 3, 1, 3, 2, 3, 3, 1,
	3, 1, 2, 1, 1, 2, 2, 3, 1, 1,
	1, 1, 1, 3, 2, 2, 1, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 2, 2, 1, 3, 3, 3, 3, 2,
	3, 3, 1, 1, 1, 1, 1, 2, 2, 5,
	7, 3, 3, 3, 4, 4, 6, 5, 5, 5,
	3, 4, 4, 3, 4, 4, 3, 4, 4, 5,
	3, 5, 5, 5, 7, 3, 3, 3, 2, 3,
	2, 3, 4, 3, 5, 3, 6, 5, 6, 3,
	5, 6, 3, 4, 3, 4, 3, 3, 4, 4,
	5, 0, 1, 1, 3, 2, 4, 3, 3, 5,
	3, 4, 3, 5, 3, 3, 4, 4, 5, 3,
	3, 1, 1, 0, 2, 5, 4, 6, 4, 6,
	4, 1, 0, 3, 4, 4, 5, 7, 5, 3,
	3, 3, 4, 4, 5, 2, 0, 4, 2, 3,
	4, 2, 3, 3, 3, 4, 3, 3, 4, 3,
	3, 3, 3, 4, 3, 1, 1, 1, 2, 3,
	2, 3, 6, 6, 7, 9, 7, 9, 3, 4,
	10, 10, 3, 5, 5, 5, 3, 5, 2, 0,
	1, 1, 1, 1, 3, 2, 2, 2, 2, 2,
	1, 2, 0, 1, 2, 1, 2, 2, 1, 2,
	1, 2, 2, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 6, 5, 8, 3, 6,
	6, 3, 11, 14, 1, 2, 3, 0, 4, 0,
	4, 5, 4, 3, 3, 1, 3, 10, 13, 0,
	2, 3, 1, 1, 0, 1, 2, 2, 2, 2,
	1, 1, 0, 1, 3, 1, 1, 1, 1, 3,
	3, 3, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 8, 0, 1, 1, 0, 2, 1, 0,
	1, 0, 9, 9, 3, 1, 3, 7, 1, 3,
	11, 3, 2, 0, 3, 1, 2, 2, 3, 2,
	6, 2, 1, 1, 2, 8, 4, 2, 5, 5,
	5, 2, 1, 3, 11, 12, 8, 5, 3, 1,
	5, 9, 7, 11, 3, 3, 0, 2, 4, 3,
	3, 1, 5, 1, 3, 1, 2, 0, 1, 2,
	2, 0, 1, 3, 3, 2, 2, 1, 1, 1,
	4, 0, 6, 0, 3, 0, 2, 2, 2, 0,
	1, 1, 2, 2, 0, 3, 3, 2, 1, 1,
	2, 2, 5, 8, 4, 1, 0, 1, 2, 2,
	1, 2, 3, 3, 2, 2, 3, 2, 2, 2,
	2, 2, 3, 1, 4, 2, 2, 2, 4, 7,
	3, 4, 6, 3, 1, 1, 1, 8, 10, 11,
	7, 10, 5, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 2, 0, 3, 3, 0,
	1, 8, 3, 6, 6, 5, 3, 4, 1, 0,
	1, 3, 17, 20, 16, 19, 4, 2, 0, 1,
	0, 1, 0, 1, 3, 3, 2, 0, 1, 1,
	0, 9, 6, 6, 8, 6, 8, 6, 7, 8,
	9, 6, 8, 6, 7, 8, 9, 6, 8, 6,
	8, 1, 0, 2, 0, 2, 2, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	2, 2, 1, 2, 1, 2, 1, 2, 1, 3,
	2, 3, 2, 2, 2, 2, 2, 2, 1, 1,
	0, 2, 4, 2, 1, 0, 2, 1, 1, 0,
	1, 3, 1, 0, 1, 1, 1, 1, 1, 2,
	3, 2, 2, 1, 2, 9, 12, 3, 3, 0,
	3, 0, 3, 0, 3, 0, 4, 0, 1, 0,
	6, 7, 3, 6, 3, 1, 3, 1, 1, 4,
	2, 1, 3, 1, 3, 4, 8, 11, 5, 2,
	2, 0, 10, 3, 2, 0, 1, 3, 1, 1,
	3, 3, 5, 6, 4, 1, 1, 3, 3, 1,
	2, 4, 4, 2, 3, 5, 5, 1, 3, 1,
	0, 1, 2, 3, 2, 4, 2, 3, 0, 2,
	0, 2, 1, 2, 1, 1, 1, 2, 1, 2,
	1, 2, 1, 8, 8, 8, 2, 4, 4, 4,
	2, 2, 2, 2, 3, 1, 3, 1, 2, 6,
	7, 1, 0, 1, 0, 1, 0, 1, 1, 0,
	1, 5, 1, 0, 1, 0, 3, 3, 5, 1,
	3, 3, 4, 5, 2, 2, 0, 2, 2, 1,
	1, 1, 0, 1, 0, 2, 2, 5, 4, 2,
	3, 1, 1, 1, 1, 1, 1, 1, 3, 0,
	2, 0, 4, 2, 5, 3, 2, 0, 1, 3,
	3, 5, 1, 1, 1, 1, 1, 3, 2, 4,
	4, 0, 4, 4, 3, 4, 1, 5, 3, 4,
	5, 5, 1, 5, 1, 3, 2, 0, 3, 0,
	2, 3, 1, 3, 2, 0, 3, 5, 6, 4,
	6, 4, 3, 2, 1, 0, 5, 1, 0, 2,
	2, 2, 1, 1, 0, 1, 1, 1, 0, 4,
	2, 1, 2, 2, 4, 1, 3, 1, 2, 3,
	2, 4, 1, 0, 1, 0, 2, 1, 0, 2,
	5, 7, 2, 1, 2, 4, 3, 5, 0, 1,
	3, 5, 1, 2, 1, 1, 1, 1, 1, 2,
	2, 1, 2, 2, 2, 1, 2, 2, 2, 1,
	2, 2, 2, 1, 2, 2, 2, 1, 2, 2,
	2, 1, 2, 2, 2, 1, 2, 2, 2, 1,
	2, 2, 2, 1, 1, 1, 4, 4, 6, 6,
	1, 1, 1, 1, 1, 3, 5, 0, 1, 1,
	1, 1, 1, 2, 2, 2, 2, 2, 1, 3,
	0, 5, 4, 1, 2, 1, 4, 1, 1, 2,
	1, 1, 1, 1, 1, 0, 1, 2, 5, 1,
	4, 2, 5, 1, 4, 3, 3, 0, 1, 2,
	4, 1, 1, 1, 1, 1, 1, 3, 3, 3,
	3, 3, 3, 3, 1, 0, 1, 4, 1, 3,
	3, 3, 5, 2, 2, 2, 2, 2, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 2, 2, 3, 5, 4, 6, 3, 5,
	4, 6, 4, 6, 5, 7, 3, 3, 3, 3,
	3, 4, 3, 2, 4, 2, 3, 3, 4, 3,
	4, 3, 4, 5, 6, 6, 7, 6, 7, 6,
	7, 3, 4, 4, 1, 3, 1, 3, 3, 2,
	2, 2, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 5, 6, 6, 7, 1, 2, 1, 2, 1,
	1, 1, 1, 1, 6, 1, 1, 1, 1, 1,
	1, 2, 1, 5, 5, 6, 3, 1, 1, 1,
	2, 2, 2, 4, 3, 5, 6, 8, 6, 5,
	4, 3, 2, 2, 4, 1, 1, 1, 5, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	6, 6, 8, 8, 6, 4, 6, 6, 6, 4,
	1, 3, 3, 3, 3, 3, 4, 3, 3, 4,
	3, 3, 4, 3, 3, 4, 3, 3, 3, 4,
	3, 4, 3, 4, 3, 4, 4, 3, 6, 5,
	5, 5, 4, 4, 3, 4, 3, 5, 0, 5,
	0, 2, 0, 1, 3, 3, 2, 2, 0, 6,
	1, 0, 3, 0, 3, 3, 3, 0, 1, 4,
	2, 2, 2, 2, 2, 3, 2, 2, 3, 0,
	4, 1, 1, 5, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 1, 2, 2, 3,
	1, 2, 3, 2, 3, 2, 3, 1, 0, 1,
	3, 1, 3, 3, 3, 1, 3, 3, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 4, 3, 1,
	2, 3, 0, 3, 3, 2, 2, 1, 2, 2,
	3, 2, 1, 1, 1, 5, 1, 2, 4, 2,
	0, 1, 0, 3, 5, 1, 0, 1, 2, 1,
	0, 1, 3, 3, 2, 1, 1, 1, 3, 1,
	3, 3, 1, 1, 1, 1, 5, 3, 1, 1,
	3, 1, 1, 1, 1, 2, 2, 1, 1, 2,
	2, 1, 1, 1, 3, 5, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 5, 7, 1, 7, 5, 3, 1, 1,
	1, 1, 1, 1, 1, 3, 5, 1, 1, 1,
	1, 1, 1, 1, 0, 3, 0, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1,
}
var sqlChk = [...]int{

	-1000, -1, -2, 559, -90, -87, -57, -55, -93, -94,
	-76, -95, -89, -114, -119, -102, -103, -115, -121, -165,
	-170, -171, -172, -3, -43, -45, -58, -75, -77, -88,
	-97, -96, -98, -104, -111, -107, -92, -49, -116, -120,
	-129, -166, -167, -168, 31, 30, 98, 78, 149, 124,
	132, 193, 368, 405, 416, 381, 397, 386, -124, -125,
	433, -44, -56, -118, -117, 71, 125, 392, -4, -12,
	28, 44, -46, -47, -48, 60, -63, -60, -70, -64,
	-554, 100, -507, -78, -81, -110, -558, 137, 156, 211,
	-99, -100, 351, -105, -106, 399, -108, -109, 401, 157,
	-51, -50, 151, -193, -195, -122, -123, -169, -130, -131,
	-132, -133, -134, -135, -136, -159, -137, -138, -139, -140,
	-141, -142, -162, -143, -144, -145, -146, -151, -147, -148,
	-149, -150, -152, -153, -155, -156, -157, -158, -160, -161,
	437, -154, 492, 47, 451, 80, 141, 409, 21, -5,
	-6, -7, -8, -9, -10, -11, -14, -13, -59, -61,
	-62, -65, -66, -67, -74, -68, -69, -506, -79, -80,
	-83, -85, -86, -82, -84, 398, -196, -194, 556, 507,
	-16, -21, -22, -17, -18, -20, -23, -19, -24, -30,
	-35, -36, -32, -33, -31, -34, -37, -38, -39, -40,
	-41, -42, -26, -28, -29, -27, -15, -25, 526, 534,
	-199, -197, -198, -206, 425, 515, 467, 559, 559, 559,
	559, 559, 559, 559, 559, 559, 559, 559, 559, 559,
	559, 559, 559, 559, 559, 559, 559, 559, -274, 2,
	-255, -260, -261, -262, -254, -226, -476, -479, 4, -473,
	-477, 162, 220, 315, 21, 22, 23, 24, 25, 26,
	28, 29, 40, 41, 43, 44, 45, 46, 47, 51,
	53, 57, 58, 59, 60, 61, 62, 66, 71, 72,
	77, 78, 79, 80, 81, 82, 83, 89, 86, 87,
	88, 90, 92, 94, 95, 96, 97, 98, 99, 101,
	102, 103, 105, 106, 114, 115, 116, 117, 119, 124,
	125, 128, 123, 127, 130, 131, 132, 135, 136, 137,
	139, 140, 142, 143, 144, 146, 147, 149, 150, 151,
	154, 152, 474, 153, 155, 156, 157, 158, 168, 169,
	170, 175, 177, 181, 182, 185, 186, 187, 188, 189,
	190, 191, 192, 194, 198, 200, 201, 202, 203, 204,
	210, 211, 213, 214, 215, 216, 221, 222, 226, 223,
	232, 233, 237, 238, 239, 241, 245, 246, 247, 248,
	249, 250, 252, 254, 253, 256, 259, 260, 263, 267,
	268, 271, 272, 273, 274, 276, 277, 280, 278, 281,
	279, 282, 284, 285, 286, 287, 288, 289, 290, 291,
	292, 293, 294, 295, 283, 298, 296, 300, 301, 302,
	313, 311, 306, 307, 303, 308, 304, 305, 309, 310,
	317, 318, 321, 208, 323, 324, 327, 345, 331, 332,
	333, 336, 337, 340, 343, 344, 346, 347, 348, 349,
	350, 351, 352, 353, 355, 356, 358, 359, 360, 362,
	363, 364, 366, 368, 369, 371, 373, 374, 375, 376,
	377, 378, 379, 381, 383, 382, 384, 386, 392, 397,
	394, 395, 396, 398, 399, 400, 401, 403, 404, 405,
	407, 408, 409, 410, 412, 414, 415, 418, 419, 434,
	435, 453, 416, 417, 420, 421, 422, 423, 424, 428,
	426, 427, 429, 430, 431, 433, 436, 437, 439, 440,
	441, 442, 443, 444, 447, 449, 450, 451, 452, 454,
	457, 458, 459, 460, 455, 466, 463, 464, 468, 469,
	470, 471, 472, 473, 475, 477, 485, 486, 487, 489,
	492, 493, 494, 495, 483, 497, 498, 501, 502, 503,
	506, 504, 505, 507, 509, 512, 513, 514, 520, 519,
	521, 527, 528, 530, 531, 532, 35, 48, 49, 52,
	54, 56, 67, 68, 69, 73, 120, 121, 148, 159,
	160, 171, 183, 184, 195, 197, 205, 206, 207, 227,
	228, 230, 235, 257, 320, 322, 338, 342, 357, 361,
	365, 367, 380, 411, 445, 456, 461, 478, 479, 480,
	481, 488, 490, 515, 516, 517, 522, 529, -274, 2,
	-255, 329, -248, 2, -226, -226, 368, 27, 2, 27,
	356, 427, 469, 471, 2, -533, -309, 2, 27, -229,
	-226, 100, 193, 425, -248, 2, -533, -309, 24, 2,
	-226, 2, 343, -230, 2, 416, -226, 277, 2, 559,
	92, 268, 72, 411, 430, -127, 486, -126, 478, 420,
	-128, -462, 2, 298, -226, 559, 559, 559, 27, -238,
	-226, 467, 220, 116, 464, 559, 2, 467, 348, 519,
	426, 116, 377, 220, 494, 420, -542, 277, 407, 196,
	508, -531, 2, -526, 4, -477, -473, -268, -267, 467,
	472, 116, -262, -254, 549, -261, 559, 559, 559, 2,
	238, 239, 376, 375, 430, 431, 559, 559, 559, 418,
	2, 26, 64, 91, 96, 122, 158, 178, 181, 334,
	-555, 345, 374, 429, 466, 475, 489, -541, 452, 66,
	420, -540, -542, 277, 494, 135, -357, 116, 268, 192,
	502, 471, 469, 500, 128, 226, 505, 504, 559, 559,
	26, 64, 75, 96, 135, 158, 178, 181, -557, 345,
	374, 414, 429, 466, 475, 489, 2, 519, 277, 426,
	467, 220, 116, 494, 420, -542, 418, 419, 372, -90,
	2, 556, 31, 30, 433, -188, 467, 231, 2, -226,
	559, 559, 2, 238, 239, 418, 419, 559, 559, 179,
	-526, 2, 559, 559, 2, 238, 239, 418, 419, 231,
	2, 66, 422, 559, 559, 559, 559, 559, 559, 559,
	559, 559, 559, 559, 559, 559, 559, 559, 559, 559,
	559, 559, 559, 559, 559, 559, 559, 559, 559, 559,
	559, 559, 559, 559, 559, 2, -163, 430, 452, 202,
	45, 44, 72, 27, 373, 77, 349, 117, 143, 495,
	194, 220, 221, 246, 91, 92, -359, 43, 239, 238,
	419, -547, 418, -410, 468, 421, 427, 463, 250, 416,
	486, 100, 509, 408, 532, 377, 378, 152, 4, 116,
	298, 432, 478, 268, 415, 352, 82, 559, -564, 2,
	467, -566, 2, 486, 486, 2, -566, 2, -566, 2,
	-566, 2, -567, 486, 529, 559, 559, 559, 559, 559,
	559, 559, 559, 559, 559, 559, 559, 559, 559, 559,
	559, 559, -194, -196, -195, 559, 559, 559, 559, 559,
	559, 559, -163, 430, 2, 72, 27, -302, -304, 499,
	229, 145, 335, -193, -195, 2, -506, -460, 2, -384,
	-480, -386, 547, 548, 540, 465, 65, 314, 533, -398,
	122, 500, 329, -479, -387, -400, 148, 411, -324, 8,
	9, 5, 6, 7, -235, -388, -394, 491, 161, 319,
	-271, 560, 10, 556, -503, -195, -399, 36, 197, 63,
	-464, -270, -236, -436, 230, -269, -254, -500, -501, 4,
	-473, -474, -465, -439, -447, -443, -444, -450, -226, -476,
	75, 108, 109, 107, 112, 111, 270, 269, 113, 110,
	432, 508, 64, 35, 205, 206, 235, 320, 207, 73,
	-502, 136, -475, 227, 228, 445, 49, 380, 171, 121,
	120, 322, 54, 52, 516, -448, 118, 478, 479, 480,
	481, 183, 184, 56, 159, 160, 342, 365, 461, 488,
	490, 195, 257, 42, 104, 180, 225, 209, 234, 236,
	240, 258, 261, 299, 312, 316, 339, 341, 406, 438,
	-570, 517, 456, 67, 68, -508, 382, -509, -248, -508,
	559, 559, 561, 559, -296, -297, -298, 2, 27, 133,
	556, 2, -414, 2, -415, -419, -195, 251, -418, 556,
	-416, 554, -255, 330, -504, 412, -500, -501, -235, -254,
	-270, 4, -473, -475, 558, -299, 556, 116, 467, 76,
	220, -352, 556, -226, 27, 329, 482, 561, -396, 556,
	329, 179, 332, 58, -226, 519, 2, 2, 434, 2,
	556, -127, 69, 486, 42, 430, -371, 2, -372, -222,
	-223, -224, -426, -225, 237, 371, 379, 535, 126, 314,
	532, -460, -549, 179, 539, 482, -460, -325, 558, 2,
	2, 2, 2, 2, -419, 205, -255, 2, -252, -463,
	4, -473, -477, -474, -478, -476, 27, 30, 31, 32,
	34, 36, 37, 38, 39, 55, 63, 64, 70, 74,
	76, 85, 91, 100, 107, 108, 110, 109, 111, 112,
	113, 122, 126, 129, 133, 134, 138, 141, 145, 161,
	163, 176, 178, 179, 193, 196, 199, 212, 224, 229,
	231, 251, 255, 262, 269, 270, 314, 319, 325, 329,
	330, 334, 335, 354, 370, 385, 402, 425, 432, 448,
	462, 467, 476, 482, 484, 491, 499, 500, 508, 510,
	518, 523, 524, 525, 526, -479, 75, 2, -419, 205,
	2, -257, 205, -419, -260, 2, -239, -226, 2, -251,
	-463, 2, -275, 205, -255, -256, -260, -258, 2, -260,
	-264, 2, -226, -471, 205, 2, -467, 10, -466, 5,
	4, -473, -477, -474, 519, 231, 482, 561, -315, -267,
	-268, -459, 8, -308, -226, 558, -384, 2, -116, -101,
	2, 176, -384, 205, 2, -116, 205, 2, -384, 205,
	2, -116, 205, 2, -544, 2, -471, 2, 2, 489,
	2, 96, 205, -226, 467, 115, 2, 396, -556, 414,
	493, 2, 2, 2, 2, 2, 2, 467, -244, 2,
	-226, 176, -264, 205, -265, 2, -226, -227, 426, -565,
	382, -471, 205, 2, 519, -258, 2, -258, 220, 233,
	-239, 205, 2, 471, 469, 471, 469, 179, 2, 231,
	2, 231, 2, -420, 2, -421, -415, -422, 554, 330,
	2, 2, 2, 2, 2, 205, -226, 467, 115, 2,
	249, 2, 2, 2, 2, 2, 2, 2, -317, 205,
	2, -255, 519, -317, 205, 2, -317, 205, 2, -358,
	2, 85, -239, 205, 2, -263, 205, 2, -258, -266,
	205, 2, -264, -472, 205, 2, -471, -384, 2, -116,
	2, -430, 2, -429, -466, 515, -90, 556, -90, 556,
	430, 556, -471, -255, -255, -384, 2, -116, -101, 2,
	-384, 2, -116, 2, -113, -112, -471, 556, 179, -384,
	2, -116, -101, 2, -384, 2, -116, 2, -188, 176,
	2, 116, 467, -163, 2, 176, 510, 2, 8, 2,
	212, -471, 421, 378, 168, 2, 434, 2, 435, 72,
	-359, 532, 72, 179, 2, 179, 2, -342, 2, 526,
	2, 2, -530, 2, 329, 179, 2, 179, 2, 179,
	2, 179, 2, 179, 2, 375, 431, 487, 239, 2,
	-116, 523, -101, -384, 523, 2, -548, 176, 419, -384,
	2, 485, 248, 153, 179, -342, 2, 179, 2, 179,
	2, 5, 2, 376, 453, 2, 237, 371, 453, 2,
	-255, -559, 2, 467, 519, 426, 2, 2, 86, 87,
	179, 2, 179, 2, 179, 532, 2, -334, -419, -370,
	-371, -370, 482, -302, -304, -163, 434, 2, -200, -332,
	-202, 176, -361, -362, -203, 262, 163, 325, -204, -341,
	27, 133, -341, -341, 58, 557, 557, 11, 12, 74,
	40, 547, 548, 549, 550, 174, 551, 552, 545, 546,
	544, 537, 538, 542, 243, 244, 93, 541, 539, 84,
	275, 413, 164, 165, 166, 167, 393, 218, 33, 219,
	14, 15, 16, 32, 334, 261, 533, 209, 438, 540,
	17, 18, 19, 234, 236, 316, 48, 212, -234, -277,
	-384, -384, -384, -384, -384, -384, -384, 341, 556, -330,
	-379, 554, -195, 556, 556, 556, -459, -195, -384, -398,
	557, -322, 556, -195, -398, -393, 556, 411, 554, 556,
	-401, -384, 5, 5, 5, 556, 558, -511, 527, 176,
	556, 556, 556, 556, 556, 556, 556, 556, 556, 556,
	556, 556, 556, 556, 556, 367, -441, 556, -440, 556,
	-440, -440, 520, -438, 556, 534, 528, 556, -438, 556,
	556, 556, 556, 556, 556, 556, 556, 556, 556, 556,
	556, 556, 520, 561, -508, -299, 556, -326, -424, -384,
	549, -326, -326, 329, -319, -384, 104, -345, 240, 299,
	180, 258, 406, 225, -381, 560, -381, -409, 534, -195,
	-416, -254, -195, -418, 556, -414, -409, -91, -459, -75,
	-88, -96, -116, -129, -167, -168, 549, -255, 556, 179,
	556, 558, -463, 179, -308, -239, -255, -269, -270, -275,
	132, -319, -526, 494, 420, -308, -229, 37, -395, -433,
	-434, -482, 560, -481, -436, -446, -442, -445, 357, 361,
	-465, 52, 516, -448, 230, 4, -473, -475, 227, 228,
	445, 49, 380, 171, 121, 120, 322, 54, 478, 479,
	480, 481, 183, 184, 56, 517, 456, 67, 68, -526,
	494, 420, -308, 176, -469, 2, -468, -467, 113, 432,
	-358, -462, -319, 37, -371, 2, 122, -467, -568, 561,
	260, -279, 274, 313, 201, 330, 530, 323, 126, -470,
	5, 4, -394, -406, 122, 268, 230, -453, -455, 8,
	-454, 9, -456, 547, 548, -461, -460, 106, 558, -463,
	-211, 394, 433, -210, 23, 28, 137, 513, 154, -289,
	222, 344, 348, 148, 449, 503, -537, -538, 417, 473,
	474, 88, 323, 433, 394, 148, -338, -340, 37, 114,
	302, 343, 59, 215, 279, 280, 451, 522, 148, 433,
	394, 344, -538, 97, 394, -538, -213, 449, 503, -537,
	-538, 417, 394, -212, -289, 148, 560, 23, 394, 433,
	344, -552, -553, 137, 28, 394, 344, -534, -505, 526,
	148, -419, 205, -545, -112, 252, 5, 10, -112, -315,
	561, 561, -463, 549, 419, 418, 148, 148, 148, 148,
	176, 2, 2, 314, 2, 2, 2, 181, -540, -557,
	2, 2, -255, 205, -301, 329, -529, -316, 467, -255,
	314, 42, -257, 205, 2, -260, 519, -534, 314, -259,
	205, -255, 37, 556, 2, -358, 2, 220, -505, 314,
	-420, -272, -255, -415, -272, 433, -248, 37, -381, -255,
	148, 2, 2, 2, -226, -214, 561, 62, 400, 148,
	-317, 205, -214, 148, -214, 148, -276, 205, -275, -214,
	148, -214, 561, 148, -214, 561, 148, 561, 148, 557,
	561, -430, -430, -471, -176, 526, 179, 100, 556, 556,
	-188, -427, 561, -426, -472, -113, -471, -471, -529, -239,
	2, -255, 2, 467, 241, -471, -176, 212, -471, -471,
	-471, -462, 27, 435, 2, 375, 431, 487, 87, 435,
	2, -255, 467, 116, 220, 78, -532, 176, -527, 407,
	420, -526, -255, 116, -255, 116, -255, 116, -255, -255,
	2, 2, 2, 2, 2, 83, 83, 2, 44, -548,
	176, 2, 485, 2, 485, 2, -226, -226, -226, 452,
	260, -255, 176, 467, 220, 467, 220, 116, 467, -214,
	561, -230, -200, -332, -462, -333, -332, -201, -200, -203,
	176, 379, 504, 302, 436, 245, -362, -361, 27, -384,
	-366, 170, 301, -384, -364, -386, 547, 548, -454, -456,
	-318, 323, -194, -194, -194, -305, -411, -384, 370, 220,
	-435, -433, -433, -253, -463, 478, -384, -384, -384, -384,
	-384, -384, -384, -384, -384, -384, -384, -384, -384, -384,
	-384, -384, -384, -384, -384, -384, -384, -384, -384, -384,
	-384, -384, -384, -384, -384, -384, -384, -384, -384, -384,
	-384, 261, 209, 438, 48, 212, -384, 482, -384, -384,
	-384, -384, 296, 314, 319, 491, 161, 501, 133, 323,
	-571, 462, 39, -391, -195, -323, 556, -405, 34, 448,
	27, -398, 556, 2, -379, -384, -380, -320, -319, -319,
	557, 518, 27, 133, 549, 2, 557, 561, 37, 557,
	-384, -320, -397, -393, -319, -404, -403, 523, -353, -354,
	531, 283, 119, 203, 281, -355, 424, -457, 8, -463,
	549, -512, 169, 196, 556, 557, 2, 557, 2, 557,
	-384, 2, 557, -384, 2, 557, -384, 2, 557, -384,
	2, 557, 2, -384, -384, -384, -384, -384, -384, -384,
	-319, 8, -457, -457, 478, 478, -457, -457, -457, -449,
	357, 358, 359, 360, 263, 264, 265, 266, 361, 362,
	363, 364, 288, 289, 290, 291, 284, 285, 286, 287,
	292, 293, 294, 295, 188, 189, 190, 191, 184, 185,
	186, 187, -449, -347, 2, -451, -319, 4, 531, 283,
	119, 203, 281, 424, 5, -347, 2, -348, 2, -384,
	-319, -349, -385, -386, 547, 548, 540, -398, -350, 2,
	-384, -320, -384, 55, 255, 484, -351, -384, 179, -319,
	-319, 2, -319, 2, -509, 37, -319, -311, 561, 179,
	37, 4, -311, -311, 556, 557, 561, -346, 200, 278,
	273, -346, -414, -345, 240, -343, 339, -343, -343, -409,
	-240, 554, 562, -463, -409, -408, -407, 37, -248, 336,
	-409, -409, 558, 557, -408, 555, -524, 556, 559, 559,
	559, 559, 559, -255, 556, -319, -463, 558, 454, 557,
	234, 234, 234, 234, 412, 557, 482, -528, -263, -266,
	526, -90, 331, 557, 561, -310, 36, 554, 558, -457,
	2, 2, -452, 520, 556, 556, -354, 556, 179, -528,
	-266, -309, 561, 482, -259, -549, 557, 486, -372, -278,
	379, 447, 395, 428, 464, 8, 9, 8, 9, 561,
	-463, 561, -550, 91, 482, 76, 420, -375, 205, 76,
	-483, -242, 91, -484, -226, 70, 500, 370, 178, 146,
	-550, 91, 370, -550, 91, 91, 433, 452, 482, 58,
	-419, 40, 40, 27, -116, 256, 179, 532, 467, 220,
	420, 482, -419, -340, -433, 114, 279, 280, 58, -458,
	-453, 547, 548, -458, 58, -458, -458, -458, 526, -257,
	-419, 420, 482, 482, 482, 482, 561, 40, 40, 27,
	-116, 256, 179, 482, -275, -240, 514, 41, 514, 482,
	41, 420, 482, 561, 41, 41, 482, 482, -535, -231,
	103, 308, 272, 309, 95, 305, 94, 304, 101, 306,
	102, 307, 521, 317, 61, 303, 282, 310, -232, -233,
	350, 512, -471, 433, 394, 148, 212, -427, 212, -427,
	-267, -226, 558, -116, -384, -384, -116, -384, -116, 44,
	148, 2, -565, 249, 556, -282, 314, 179, -308, -428,
	231, 561, -316, 148, -468, -339, -338, 314, -259, 205,
	2, 148, -299, 314, 142, 556, 377, 2, -241, 205,
	-227, -226, -358, -217, 470, 148, -336, 510, -367, -116,
	556, 122, 37, -367, -327, -328, -425, -329, -242, 556,
	-248, -381, -226, 2, -255, -317, -214, 148, -317, -317,
	-214, 561, 148, -239, -258, -263, -264, -266, -471, -472,
	-90, -429, 557, 557, 557, -175, 333, -174, -226, 5,
	-188, 510, -281, -376, -375, -487, -488, -483, 261, 220,
	500, 233, 162, -300, -243, -242, 115, -182, 526, -112,
	557, -427, 212, -176, -176, -427, -427, -255, 176, -471,
	-176, -176, -176, 2, 2, 2, -342, -255, -239, -275,
	-255, -308, -308, -308, -342, -239, -342, -239, -342, -239,
	-116, -384, 2, 430, 176, 176, 558, -342, 377, 116,
	467, 348, 220, -255, -275, -255, -275, -239, -255, -419,
	-333, -201, 330, 245, 436, -364, -365, -386, 411, 412,
	-365, 411, 412, 8, 9, 8, 9, -205, 440, 318,
	-317, 561, -208, 38, 129, 245, -255, 532, 144, -384,
	-384, 482, -571, 462, -391, 144, -384, 296, 319, 491,
	161, 501, 133, 323, 179, 556, -385, -385, 557, -321,
	-384, -384, 555, 564, 557, -304, 561, -302, -384, -319,
	-319, 557, 558, -319, -308, 555, 555, 561, 557, -402,
	-403, 138, -384, 482, 482, 482, 482, 556, 557, 558,
	-517, 340, 556, 556, -384, 557, 557, 557, 557, 37,
	561, 561, 561, 557, 561, 561, 561, 557, 557, 557,
	561, 557, 532, 532, 557, 557, 557, 557, 561, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 557, 561, 557, 179, 557, 557, -356,
	354, 557, 11, 12, 547, 548, 549, 550, 174, 551,
	552, 545, 546, 544, 537, 538, 539, 84, 275, 413,
	14, 15, 16, 234, 212, -385, -385, -385, 557, -389,
	-390, 179, 176, 37, -351, -351, -351, 557, 179, -319,
	557, 557, 556, -510, 277, 314, 557, -378, -377, 524,
	-424, -312, 2, -414, -250, -463, -378, -378, -319, -384,
	240, 240, -344, 510, 329, -346, -414, -408, -459, -383,
	-382, 177, 38, 129, 311, 208, -408, -248, -299, -408,
	-408, -463, -409, -409, -407, 557, -525, -459, 557, -313,
	-417, -504, -304, 558, -463, -185, -505, -164, 5, 319,
	-164, -164, -164, -308, 482, 482, 24, 355, -433, 554,
	555, 8, -463, 556, -457, -457, -457, -308, 179, 179,
	179, -468, -468, -337, 526, -460, -371, 498, 81, 379,
	478, -460, -210, 394, -242, -242, -255, -264, 314, -375,
	205, -216, 314, -433, -249, -226, 556, 556, 245, 245,
	510, -242, -249, 245, 205, -242, 205, -249, -249, -536,
	379, 324, -384, -468, 267, 377, 315, -211, 394, 433,
	-116, -116, -116, 556, -549, 510, 132, -255, -275, -255,
	-264, -259, 433, 394, 312, -269, -458, -458, -338, 433,
	394, -264, -257, -468, 420, -239, -212, -116, -116, -116,
	556, -240, -213, 394, 5, 205, -242, 5, -226, -242,
	-264, -468, -553, 23, -242, 205, -242, -264, -468, -231,
	-471, 319, 506, -534, 420, 482, -419, -112, -179, 526,
	-112, -173, 216, 549, -531, -226, 519, -226, -280, -283,
	-281, -242, -191, -192, 528, 526, 148, -273, -255, 554,
	-176, -471, -255, -264, -265, 148, -299, 314, -471, 37,
	148, 556, 2, 2, 329, 314, -241, 205, -218, 139,
	-569, 539, -239, -378, -312, -335, -369, 402, 329, -300,
	515, -248, -335, -314, 561, 179, 539, 558, -300, -423,
	549, 2, -214, -317, -214, -214, -275, -276, -214, -214,
	-214, -90, -90, -176, 561, 556, 539, 539, 556, -471,
	-471, 557, 561, -255, -241, 220, 220, -247, -227, 557,
	561, 558, 556, -184, 333, -183, 140, 247, 232, 441,
	442, 443, 444, 131, -182, -113, 179, -52, 526, 467,
	-176, 560, -342, -342, -342, 430, 430, -226, -251, -239,
	-255, -252, -275, 176, 176, 504, -365, 330, 271, -411,
	-209, 321, -255, 560, -384, -384, 144, 144, -384, -385,
	-385, -384, 144, 179, 556, -384, -395, 32, 32, 557,
	561, -380, -384, 557, 518, -304, -304, 557, 549, -463,
	560, 557, -393, 141, -384, 476, 283, 203, 281, -355,
	281, -355, -355, -457, 5, -463, 549, -518, -245, 556,
	-226, 524, -303, 335, 557, -435, -433, -384, -384, -384,
	-384, -384, -457, -438, -438, -453, -453, -384, -389, -384,
	-435, -433, -385, -385, -385, -385, -385, -385, -385, -385,
	-385, -385, -385, -385, -385, -385, -385, -385, -385, -385,
	-385, 133, 314, 323, -385, -390, -389, -384, -384, -433,
	557, 557, 557, -319, -90, 556, 277, -331, 196, -384,
	-427, 561, -331, -331, 557, -414, -414, 556, -384, 240,
	555, 561, 563, 539, -299, 558, -407, -408, 555, 557,
	561, 557, 561, -368, 37, 557, -463, -187, -186, 130,
	51, -308, -308, 332, 5, 8, 554, 555, 558, -457,
	557, 557, 557, -308, -308, -308, 115, 302, -384, 482,
	482, 148, 314, 512, -489, -484, 146, -384, -306, -412,
	-384, 556, 556, 2, -207, 137, 433, -551, 2, 510,
	148, -214, 148, -214, 530, 556, 556, 482, 420, 526,
	-319, -384, -177, 122, -462, -538, 560, -538, 560, 420,
	482, 420, 482, 526, 526, -319, 482, -437, 46, 25,
	314, -258, 482, 482, -214, 148, 494, 433, -471, 319,
	-264, -259, 433, 394, -427, -181, 333, -180, 140, 404,
	131, 247, -427, -179, 179, 231, 2, -259, 2, 557,
	557, 561, -490, 37, 327, 327, 556, -255, -71, 526,
	-426, -459, 42, -257, 37, 148, -534, -116, -259, -431,
	-432, 5, -255, 148, 329, 314, -219, 254, -569, -467,
	-505, -304, -335, -326, 315, 89, 557, -378, -328, -312,
	-384, 2, 557, -214, -214, -174, -175, -471, -471, -471,
	-176, -188, -188, -376, -284, 556, -241, -227, 556, -188,
	-243, 2, -472, 561, 556, 539, 539, 539, -427, -116,
	333, -255, 549, -342, -291, -290, 348, 323, -291, 411,
	411, 330, 170, 250, -208, -240, -384, -384, 144, 32,
	32, -384, -384, -395, 557, -384, -384, -319, 555, 5,
	-384, 557, 557, 8, -384, 557, 558, -519, -226, -384,
	557, 58, 557, 557, 561, 561, 557, 557, 557, 557,
	557, 557, 557, -390, 179, 133, 323, 556, 557, 557,
	-90, -392, 199, 58, -414, -392, -392, -344, -308, -414,
	-382, -240, 554, -463, -459, -417, 556, 558, -186, 539,
	555, 2, 554, -463, 557, 115, -242, -242, -375, 148,
	-491, 91, -493, 74, 162, 100, 314, 319, 500, 370,
	70, 122, 385, -561, 37, 536, 557, 557, 561, -208,
	-306, -308, 314, 459, 122, 314, 122, 115, 494, 77,
	-242, -249, -308, -308, -255, -264, 155, 557, 561, 539,
	2, 549, 549, -264, -259, -264, -257, 346, 155, 557,
	-240, 5, 5, 148, -237, 74, 5, -242, -242, -258,
	115, 420, 482, -179, 561, 556, 539, 539, -179, -472,
	-112, -299, -287, 223, -242, -488, -485, -486, 370, -492,
	-494, 162, 370, -116, 2, -190, -189, -226, 5, 556,
	-282, 333, 555, -468, -339, -116, -259, -299, 557, 561,
	-360, 510, -240, -255, 148, -220, 253, -569, -467, -217,
	-363, -361, 134, 556, 329, -116, -304, 539, 557, 557,
	115, 115, 214, 147, -306, 556, 556, -308, 115, 557,
	-183, -184, -471, -112, -471, -182, -53, -54, 220, 91,
	353, -252, 467, 220, 556, 556, -208, -384, -384, -384,
	557, -304, -463, 549, -513, 348, 557, -411, -384, -384,
	-385, 179, 556, -395, 557, -514, 525, -384, -319, -514,
	-514, 557, -459, 2, -471, 554, 2, -375, -249, -253,
	-246, -226, 162, 205, 319, 245, 556, -385, -255, 556,
	2, 29, -562, 126, 224, -374, -563, 99, 460, 213,
	-412, -209, 557, 557, 319, 319, -384, -433, 556, -214,
	-214, 557, 557, -384, 482, -462, 98, -460, 2, -538,
	-239, -384, 482, 5, -214, -253, -214, -214, -237, 494,
	-264, -259, -180, -181, -471, -112, -179, 37, -288, -289,
	212, -490, 245, -246, 245, -560, 526, 557, 561, 539,
	539, -280, -191, -72, -73, 483, -426, -299, 37, 5,
	556, -226, 329, 556, -240, -221, 90, -569, -467, -218,
	-335, 315, -308, 91, -363, -391, -176, 556, 556, -285,
	79, 92, 123, 204, 182, 221, 452, 457, 27, -285,
	557, -306, -306, 557, 556, -176, 557, 561, 27, 556,
	27, 556, -255, -275, -319, -319, 557, -304, 58, 561,
	557, 557, -385, -395, 557, -515, -516, -245, 555, 2,
	-493, -246, 314, 510, -384, -228, 556, -384, 37, 224,
	127, 210, -287, 556, -373, 510, 385, -237, -306, 556,
	556, 556, 539, 179, 556, -437, -214, -258, 557, -543,
	383, -116, -191, 346, 556, -286, 329, 115, 302, -189,
	-460, -460, 557, 37, -73, 9, 37, -116, -306, -255,
	-306, 329, 262, -467, -219, 557, -249, -335, -472, -472,
	-373, 557, 557, -472, -54, -308, -308, 557, 557, -520,
	377, 412, 198, -319, -305, 557, 561, 37, 148, 200,
	557, -495, 276, -226, 557, 127, 210, -288, -308, -287,
	200, -255, -539, 510, 557, -293, -292, -290, -295, -294,
	-290, -319, -460, 98, 346, -319, -237, -546, 180, -545,
	5, 10, -286, -255, -307, -413, -242, 80, 115, -287,
	-116, -116, 557, -360, 557, -255, -569, -220, -378, 557,
	557, -374, -373, -192, 526, 557, 557, 557, 557, -521,
	-522, 48, 497, 106, -384, -521, -521, -516, -518, 162,
	526, -496, -499, -498, 329, 439, 180, 347, 557, 459,
	522, -562, 557, 526, -299, -384, -373, 557, 561, 515,
	557, 561, 515, 557, 179, 557, -214, -178, 526, 44,
	556, 557, 561, 369, 128, 137, -288, -560, -373, 556,
	-374, 556, -453, -221, 134, -176, -176, -287, -374, -378,
	-176, -523, 146, -522, 366, 175, 411, 366, 175, -523,
	-523, -246, 53, -498, 329, -499, 329, 504, 128, -378,
	53, -495, -287, -292, 212, -294, 179, 346, 418, -545,
	29, -308, -413, 412, 412, 2, -191, -286, -374, -306,
	-287, -306, 315, 504, -288, -287, 106, 196, 477, 302,
	32, 539, -497, 302, 400, 62, 433, -497, 539, -496,
	556, 556, 333, 557, 2, -286, -287, 557, -288, 557,
	433, -192, -288, 411, 337, -522, -384, 22, 319, 122,
	-384, -562, -319, -319, -175, 556, -215, 62, 400, -288,
	-373, -192, -374, -327, -378, -192, 557, 557, -175, -192,
	-374, -378, -287, -378, -378, -288, 482, 557, -378, -287,
	-288, 556, -288, -192, -319, -192, -378, 557, -378, -288,
}
var sqlDef = [...]int{

	-2, -2, 1, 2, 3, 4, 6, 7, 8, 10,
	12, 14, 16, 18, 20, 22, 24, 26, 28, 29,
	30, 31, 32, 483, 484, 486, 487, 488, 490, 491,
	493, 495, 497, 498, 499, 501, 502, 504, 505, 506,
	507, 508, 510, 512, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 574, 576,
	0, 1202, 1204, 1206, 1208, 0, 714, 0, 34, 35,
	0, -2, 285, 287, 289, 0, 315, 317, 318, 320,
	322, -2, 0, 416, 417, 419, 421, -2, -2, 0,
	883, 885, 0, 563, 565, 0, 888, 890, 0, 0,
	585, 586, 0, 1295, -2, 579, 581, 583, 648, 650,
	652, 654, 656, 658, 660, 662, 664, 665, 667, 669,
	671, 673, 675, 677, 679, 681, 682, 684, 686, 688,
	690, 692, 694, 696, 698, 700, 702, 704, 706, 708,
	-2, 710, -2, -2, 0, -2, -2, -2, 1220, 38,
	40, 42, 44, 46, 48, 50, 52, 54, 367, 368,
	370, 372, 374, 376, 379, 381, 383, 1353, 423, 425,
	427, 429, 431, 433, 435, 0, -2, 1365, 0, 0,
	56, 57, 58, 59, 60, 61, 62, 63, 64, 85,
	86, 87, 88, 89, 90, 91, 92, 68, 69, 71,
	72, 73, 77, 78, 79, 80, 83, 66, 0, 0,
	1326, 1328, 1330, 1332, -2, 0, 0, 5, 9, 11,
	13, 15, 17, 19, 21, 23, 25, 27, 485, 489,
	492, 494, 496, 500, 503, 509, 511, 513, 470, 471,
	474, 2015, 2032, 2033, 2034, 2037, 2038, 2039, 2040, 2041,
	2042, 2458, 2539, 2540, 2064, 2065, 2066, 2067, 2068, 2069,
	2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079,
	2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089,
	2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099,
	2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109,
	2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119,
	2120, 2121, 2122, 2123, 2124, 2125, 2126, 2127, 2128, 2129,
	2130, 2131, 2132, 2133, 2134, 2135, 2136, 2137, 2138, 2139,
	2140, 2141, 2142, 2143, 2144, 2145, 2146, 2147, 2148, 2149,
	2150, 2151, 2152, 2153, 2154, 2155, 2156, 2157, 2158, 2159,
	2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169,
	2170, 2171, 2172, 2173, 2174, 2175, 2176, 2177, 2178, 2179,
	2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187, 2188, 2189,
	2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198, 2199,
	2200, 2201, 2202, 2203, 2204, 2205, 2206, 2207, 2208, 2209,
	2210, 2211, 2212, 2213, 2214, 2215, 2216, 2217, 2218, 2219,
	2220, 2221, 2222, 2223, 2224, 2225, 2226, 2227, 2228, 2229,
	2230, 2231, 2232, 2233, 2234, 2235, 2236, 2237, 2238, 2239,
	2240, 2241, 2242, 2243, 2244, 2245, 2246, 2247, 2248, 2249,
	2250, 2251, 2252, 2253, 2254, 2255, 2256, 2257, 2258, 2259,
	2260, 2261, 2262, 2263, 2264, 2265, 2266, 2267, 2268, 2269,
	2270, 2271, 2272, 2273, 2274, 2275, 2276, 2277, 2278, 2279,
	2280, 2281, 2282, 2283, 2284, 2285, 2286, 2287, 2288, 2289,
	2290, 2291, 2292, 2293, 2294, 2295, 2296, 2297, 2298, 2299,
	2300, 2301, 2302, 2303, 2304, 2305, 2306, 2307, 2308, 2309,
	2310, 2311, 2312, 2313, 2314, 2315, 2316, 2317, 2318, 2319,
	2320, 2321, 2322, 2323, 2324, 2325, 2326, 2327, 2328, 2329,
	2330, 2331, 2332, 2333, 2334, 2335, 2336, 2337, 2338, 2339,
	2340, 2341, 2342, 2343, 2344, 2345, 2346, 2347, 2348, 2349,
	2350, 2351, 2352, 2353, 2354, 2355, 2356, 2357, 2358, 2359,
	2360, 2361, 2362, 2363, 2364, 2365, 2366, 2367, 2368, 2369,
	2370, 2371, 2372, 2373, 2374, 2375, 2376, 2377, 2378, 2379,
	2380, 2381, 2382, 2383, 2384, 2385, 2386, 2387, 2388, 2389,
	2390, 2391, 2392, 2393, 2394, 2395, 2396, 2397, 2398, 2399,
	2400, 2401, 2402, 2403, 2404, 2405, 2406, 2407, 2408, 2409,
	2410, 2411, 2412, 2413, 2414, 2415, 2416, 2417, 2418, 2419,
	2420, 2421, 2422, 2423, 2424, 2425, 2426, 2427, 2428, 2429,
	2430, 2431, 2432, 2433, 2434, 2435, 2436, 2437, 472, 473,
	1045, 0, 537, 535, 2007, 538, 2273, 540, 542, 410,
	411, 412, 413, 414, 415, 0, 556, 548, 555, 557,
	559, 560, 561, 562, 532, 530, 0, 556, 2067, 554,
	1200, 1201, 0, 1185, 1186, 2312, 1227, 0, 197, 575,
	-2, -2, -2, 2423, -2, 607, -2, 614, 2427, 2314,
	619, 0, 621, -2, 624, 1203, 1205, 1207, 712, 713,
	2018, 0, 0, 0, 0, 36, 37, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1094, 1095,
	1096, 0, 205, 207, -2, -2, -2, -2, 0, 0,
	2352, 2116, 1975, 2034, 1978, 1973, 286, 288, 290, 291,
	0, 0, 0, 0, 0, 0, 316, 319, 321, -2,
	323, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	346, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	-2, -2, 0, 0, 0, 0, 0, 0, 0, 0,
	940, 932, 933, 1151, 0, 0, 0, -2, 418, 420,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 422, 0, 0, 0,
	0, -2, 0, 0, 0, 0, 0, 0, 347, 475,
	476, 0, 1354, 1354, 0, 0, 0, 0, 260, 251,
	884, 886, 887, 0, 0, 0, 0, 564, 566, 0,
	0, 233, 889, 891, 892, 0, 0, 0, 0, 0,
	262, 0, 0, 580, 582, 584, 649, 651, 653, 655,
	657, 659, 661, 663, 666, 668, 670, 672, 674, 676,
	678, 680, 683, 685, 687, 689, 691, 693, 695, 697,
	699, 701, 703, 705, 707, 709, 719, 0, 0, 0,
	0, 0, -2, -2, 0, 0, 0, -2, -2, -2,
	-2, 0, 0, 0, 0, 0, 0, 0, -2, 0,
	803, 0, 0, 0, -2, -2, -2, 0, 0, 0,
	0, 0, -2, -2, 0, 0, 0, 0, 722, 724,
	725, 726, 0, 783, 801, 802, 811, 711, 0, 1085,
	1355, 1229, 1210, 1224, 1229, 1212, 1213, 1214, 1215, 1216,
	1221, 1223, 1217, 1218, 1219, 39, 41, 43, 45, 47,
	49, 51, 53, 55, 369, 371, 373, 375, 377, 380,
	382, 384, -2, 1324, 1325, 424, 426, 428, 430, 432,
	434, 436, 567, 0, 569, 0, 723, -2, 0, 1359,
	1359, 1359, 0, 0, 1325, 1323, 0, 572, 573, 628,
	629, 1618, 0, 0, 0, 0, 0, 0, 0, 1872,
	1704, 0, 630, -2, 1735, 1737, 2398, 2423, 1871, 1739,
	1740, 1741, 1742, 1743, 0, 1745, 1746, 1747, 1748, 1749,
	1750, 0, 1752, 0, 1757, 1758, 1759, 0, 2405, 1952,
	2028, -2, 0, 0, 2411, 2024, 0, 1838, 1775, -2,
	-2, 2051, 2030, 1550, 1551, 1552, 1553, 1554, -2, -2,
	2441, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787,
	1788, 1789, 0, 2386, 2406, 2407, 2412, 2414, 2408, 2395,
	1800, 2128, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, 1577, 1586, -2, -2, -2,
	-2, -2, -2, -2, 2399, 2400, 2417, 2420, 2426, 2431,
	2432, 2404, 2413, 2440, 2442, 2443, 2444, 2445, 2446, 2447,
	2448, 2449, 2450, 2451, 2452, 2453, 2454, 2455, 2456, 2457,
	1578, -2, -2, -2, -2, 1342, 2285, 1345, 1045, 1343,
	1327, 1329, 0, 1331, 0, 0, 0, 1336, 1362, 1360,
	0, 1403, 1340, 1341, 1421, 1421, 1445, 0, 1426, 0,
	1445, 1354, 1471, 0, 1432, 2304, 1776, 1777, 0, 2034,
	2029, -2, -2, 2438, 0, 0, 0, 0, 0, 0,
	0, 533, 0, 539, 541, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1226, 1150, 577, 578, 0, 602,
	0, 606, 2394, -2, 0, 2323, -2, 610, 1230, 1234,
	1235, 1236, 1237, 1238, 0, 0, 0, 0, 1243, 0,
	0, 616, 0, 0, 603, 604, 622, 625, 0, 715,
	716, 717, 718, 65, 0, 2406, 1471, 67, 0, 1997,
	2059, 2060, 2061, 2062, 2063, 2439, 2459, 2460, 2461, 2462,
	2463, 2464, 2465, 2466, 2467, 2468, 2469, 2470, 2471, 2472,
	2473, 2474, 2475, 2476, 2477, 2478, 2479, 2480, 2481, 2482,
	2483, 2484, 2485, 2486, 2487, 2488, 2489, 2490, 2491, 2492,
	2493, 2494, 2495, 2496, 2497, 2498, 2499, 2500, 2501, 2502,
	2503, 2504, 2505, 2506, 2507, 2508, 2509, 2510, 2511, 2512,
	2513, 2514, 2515, 2516, 2517, 2518, 2519, 2520, 2521, 2522,
	2523, 2524, 2525, 2526, 2527, 2528, 2529, 2530, 2531, 2532,
	2533, 2534, 2535, 2536, 2537, 2538, 2441, 70, 0, 2406,
	74, 0, 2406, 0, -2, 81, 0, 2003, 84, 0,
	2000, 93, 0, 2406, 0, 1972, -2, 0, 180, 2011,
	0, 911, 2013, -2, 2406, 1093, 263, 264, 2047, 2048,
	2055, 2056, 2057, 2058, 0, 0, 0, 0, 875, 1969,
	1974, 876, 1993, 877, 1979, 0, 292, 293, 294, 295,
	296, 0, 297, 2406, 299, 300, 0, 302, 303, 2406,
	305, 306, 0, 308, 0, 218, 219, 324, 325, 0,
	327, 0, 2406, 0, 0, 0, 333, -2, 348, 0,
	345, 336, 337, 339, 340, 341, 342, 0, 388, 386,
	2008, 0, 904, 2406, 0, 908, -2, 2014, 0, 0,
	1130, -2, 2406, 1090, 0, 1136, 1132, 0, -2, 0,
	1352, 2406, 1247, 936, 937, 938, 939, 1483, 407, 0,
	1262, 0, 1264, 0, 1283, 1477, 1421, 0, 0, 1482,
	349, 350, 351, 352, 353, 2406, 0, 0, 0, 358,
	0, 360, 361, 362, 363, 364, 365, 366, 169, 2406,
	441, 468, 0, 169, 2406, 444, 169, 2406, 447, 0,
	450, 1149, 169, 2406, 453, 169, 2406, 456, 458, 169,
	2406, 462, 463, 465, 2406, 467, 265, 1196, 1197, 1198,
	1199, 0, -2, 526, 2017, -2, 478, 0, 479, 0,
	-2, 0, 277, 0, 0, 893, 894, 895, 896, 897,
	900, 901, 902, 903, 1458, 236, 234, 0, 0, 1187,
	1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 0, 0,
	587, 0, 0, 720, 721, 0, 0, 731, 732, 733,
	0, 277, 2315, 2281, 2148, 740, 0, 743, 746, -2,
	0, 0, 0, 0, 750, 0, 755, 756, 757, 0,
	759, 761, 882, 763, 0, 0, 765, 0, 769, 0,
	772, 0, 774, 0, 776, -2, -2, -2, -2, 787,
	-2, 0, 790, 792, 0, 794, -2, 0, 803, 799,
	800, 0, 0, 0, 0, 819, 820, 0, 829, 0,
	832, 833, 834, 0, 836, 837, 0, 839, 840, 841,
	842, 0, 844, 845, -2, -2, 849, 851, 0, 858,
	0, 862, 0, 866, 0, 727, 728, 169, 1475, 1209,
	-2, 1211, 0, -2, 0, 568, 0, 571, 1382, 1310,
	1307, 0, 1379, 1380, 1311, 0, 0, 0, 1318, 0,
	1357, 1358, 0, 0, 0, 1297, 1298, 0, 0, 0,
	0, 1877, 1878, 1879, 1880, 1881, 1882, 1885, 1886, 1883,
	1884, 1887, 1888, 0, 0, 0, 0, 0, 1889, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1890, 1891, 1892, 0, 0, 1894, 0, 1896, 0, 0,
	0, 0, 0, 0, 1683, 1685, 1960, 0, 0, 1893,
	1623, 1624, 1625, 1626, 1627, 1662, 1663, 0, 0, 1736,
	1957, 1956, 1738, 0, 1908, 0, 1751, -2, 0, 1872,
	1903, 0, 0, 1760, 1761, 1762, 0, 0, 1908, 0,
	0, 1951, 1772, 1773, 1615, 0, 0, 1840, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1564, 1563, 0, 1565, 0,
	1566, 1567, 1574, 1587, 0, 0, 0, 0, 1591, 0,
	0, 0, 0, 0, 0, 0, 1932, -2, 0, 0,
	0, 0, 1579, 0, 1344, 0, 0, 1407, 1961, 1965,
	1966, 1407, 1407, 0, 0, 1909, 1468, 1468, 0, 0,
	1464, 1464, 1464, 1462, 1445, 0, 1445, 1455, 0, 1445,
	1445, 0, -2, 1426, 0, 0, 1455, 0, 1439, 514,
	516, 518, 520, 521, 522, 524, 1472, 1473, 0, 0,
	0, 0, 2035, 0, 0, 0, 0, 0, 2020, 0,
	0, 0, 0, 2362, 2314, 544, 558, 1354, 0, 1911,
	1498, 1502, 0, 1504, 1505, 1506, 1507, 1508, 0, 0,
	1499, -2, 1575, 1577, 1598, 2052, 2053, 2054, 1558, 1559,
	1560, 1561, 1562, 1570, 1557, 1557, 1557, 1568, 1597, 1589,
	1597, 1593, 1543, 1544, 1545, 1580, 1581, 1582, 1583, 0,
	2362, 2314, 550, 0, 0, 1294, 184, 186, 187, 188,
	0, 0, 0, 0, -2, 612, 617, 618, 0, 1232,
	0, 1239, 639, 640, 641, 1241, 1242, 0, 1244, 615,
	642, 643, 644, 645, 646, 647, 0, 1981, 1982, 1983,
	1984, 1987, 1988, 0, 0, 613, 632, 620, 0, 626,
	94, 1182, 0, 133, 0, 1182, 1182, 0, 0, 155,
	0, 0, 0, 0, 0, 0, 0, 118, 129, 106,
	107, 0, 0, 0, 0, 0, 75, 1067, 0, 1070,
	0, 0, 0, 0, 0, 0, 0, 1083, 0, 0,
	0, 0, 117, 0, 0, 112, 96, 0, 0, 0,
	119, 131, 0, 160, 162, 0, 0, 0, 0, 0,
	0, 179, 189, 0, 0, 0, 0, 1091, 0, 1351,
	0, 0, 2406, 0, 1458, 2192, -2, -2, 1458, 874,
	0, 0, 2035, 1977, 0, 0, 0, 0, 0, 0,
	0, 326, 328, 0, 330, 331, 332, 0, 1129, 0,
	338, 378, 1016, 2406, 0, 0, 405, 400, 0, 402,
	0, 0, 1066, 2406, 1064, 2012, 0, 1088, 0, 1045,
	2406, 2010, 0, 0, 1137, 2044, 1146, 1150, 1249, 0,
	409, 0, 1265, 1267, 0, 0, 1478, 0, 1480, 1421,
	0, 355, 356, 357, 0, 437, 0, 167, 168, 0,
	169, 2406, 442, 0, 445, 0, 169, 2406, 1967, 451,
	0, 454, 0, 0, 460, 0, 0, 0, 0, 1354,
	0, 0, 0, 0, 253, 0, 0, 0, 0, 0,
	0, 240, 0, 1457, 0, 1458, 234, 277, 277, 1458,
	589, 1458, 591, 0, 0, 734, 735, 0, 277, 277,
	277, 741, 742, 744, 745, -2, -2, -2, 859, 747,
	748, 826, 0, 0, 0, 825, 762, 0, 868, 2300,
	2314, 880, 826, 2116, 826, 2116, 826, 2116, 773, 775,
	778, 814, 822, 786, 791, 0, 0, 796, 804, -2,
	0, 806, 0, 808, 0, 810, 826, 827, 830, 835,
	838, 843, 0, 0, 0, 0, 0, 0, 0, 1084,
	0, 1222, 1382, 1310, 570, 1301, 1381, 1302, 1309, 1312,
	0, 0, 1314, 0, 1316, 0, 1377, 1378, 1385, 1386,
	0, 1396, 1397, 1389, 0, -2, 0, 0, 1392, 1393,
	1320, 0, 1337, 1338, 1339, 1366, 1369, 1160, 0, 2539,
	1619, 1493, 1620, 1621, 1996, 0, 1628, 1629, 1630, 1631,
	1632, 1633, 1634, 1635, 1636, 1637, -2, -2, -2, -2,
	-2, -2, -2, -2, 1646, 1647, 1648, 1649, 1650, 1651,
	1652, 1653, 1654, 1655, 1656, -2, -2, -2, 1660, 1661,
	-2, 1895, 1897, 0, 1960, 0, -2, 0, -2, -2,
	-2, -2, 1680, 0, 1682, 1687, 1689, 1691, 0, 0,
	0, 0, 1959, 1701, 1943, 1944, 0, 0, 1874, 1875,
	1876, 1686, 0, 1705, 1958, 1955, 0, 0, 1907, 1365,
	1764, 0, 0, 0, 0, 1771, 1756, 1905, 0, 1904,
	0, 0, 0, 1915, 0, 1950, 1946, 0, 1994, 1614,
	1601, 1602, 1603, 1604, 1605, 1606, 1616, 0, 1991, 2021,
	2027, 1848, 0, 0, 0, 1801, 1802, 1803, 1804, 1805,
	0, 1807, 1808, 0, 1810, 1811, 0, 1813, 1814, 0,
	1816, 1817, 1818, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1511, 0, 0, 0, 1515, 0, 0, 0, 1519, 0,
	0, 0, 1523, 0, 0, 0, 1527, 0, 0, 0,
	1531, 0, 0, 0, 1535, 0, 0, 0, 1539, 0,
	0, 0, 0, 0, 1820, 0, 1918, -2, -2, -2,
	-2, -2, -2, -2, -2, 0, 1822, 0, 1824, 1909,
	1929, 0, 0, 1706, 0, 0, 0, 1872, 0, 1827,
	1909, 1937, 0, 0, 0, 0, 0, 1909, 0, 1942,
	0, 1834, 0, 1836, 1346, 0, 0, 1488, 0, 0,
	0, 1964, 1488, 1488, 0, 1402, 0, 0, 1465, 1466,
	1467, 0, 0, 1468, 0, 1459, 1463, 1460, 1461, 1455,
	1418, 0, 0, 1998, 1455, 1424, 1454, 0, 1045, 1444,
	1455, 1455, 0, -2, 1428, 1445, 0, 0, 515, 517,
	519, 523, 525, 0, 0, 1365, -2, 0, -2, 1044,
	0, 0, 0, 0, 534, 536, 0, 0, 457, 0,
	0, 528, 0, 531, 0, 1489, 1492, 0, 0, 1503,
	1509, 1510, 0, -2, 0, 0, 1599, 0, 0, 0,
	0, 0, 0, 0, 200, 0, 605, 0, 1231, 1240,
	0, 636, 0, 638, 0, 1985, 1989, 1986, 1990, 0,
	627, 0, 0, 0, 0, 1181, 0, 137, 2406, 0,
	171, 0, 0, 1009, 2004, 0, 0, 0, 0, 2135,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 103, 108, 0, 0, 0, 0, 0,
	0, 0, 0, 1068, 1069, 1071, 1078, 1080, 0, 1074,
	1992, 0, 0, 1075, 0, 1077, 1079, 1081, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 105,
	109, 0, 0, 0, 0, 1971, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1125, 1123,
	1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112,
	1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122,
	0, 0, -2, 0, 0, 0, 0, 210, 0, 268,
	1970, 1980, 0, 898, 899, 298, 301, 304, 307, 206,
	0, 334, 0, 0, 942, 917, 0, 0, 387, 277,
	0, 0, 401, 2044, 906, 1062, 1065, 0, 1045, 2406,
	1102, 0, 0, 0, 0, 0, 0, 1135, 0, 2406,
	1999, 2043, 2044, 1251, 1259, 0, 1488, 0, 1281, 1268,
	0, 0, 0, 1281, 1285, 1286, 1288, 1289, 0, 0,
	1479, 1485, 0, 359, 469, 169, 439, 0, 169, 169,
	448, 0, 0, 169, 459, 169, 464, 169, 266, 466,
	477, 527, 1354, 1354, 277, 275, 2250, 273, 270, 272,
	0, 0, 0, 943, 945, 946, 947, 948, 0, 2044,
	0, 2181, 2044, 0, 1271, 1273, 0, 230, 0, 237,
	235, 240, 0, 0, 399, 588, 593, 729, 0, 277,
	737, 738, 739, 780, 816, 824, 749, 751, 752, 753,
	0, 881, 878, 879, 764, 826, 767, 826, 770, 826,
	789, 793, 798, 805, 0, 0, 0, 818, 0, 0,
	0, 0, 0, 0, 0, 863, 864, 865, 867, 1476,
	1305, 1306, 1308, 0, 1317, 0, 0, 1391, -2, -2,
	1390, 1394, 1395, -2, -2, -2, -2, 1313, 0, 1322,
	1319, 0, 1376, 1158, 1159, 0, 0, 0, 0, -2,
	-2, 0, 0, 0, 1702, 0, -2, 1681, 1684, 1688,
	1690, 1692, 0, 0, 0, 0, 0, 0, 1898, 0,
	1900, 1703, 1953, 1956, 1870, 0, 0, 1364, 1365, 1365,
	0, 1770, 0, 1906, 0, 1913, 1914, 0, 1763, 0,
	1947, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1774, 0, 0, 0, 0, 1806, 1809, 1812, 1815, 0,
	0, 0, 0, 1795, 0, 0, 0, 1799, 1569, 1555,
	0, 1597, 1595, 1596, 1590, 1597, 1594, 1547, 0, 1512,
	1513, 1514, 1516, 1517, 1518, 1520, 1521, 1522, 1524, 1525,
	1526, 1528, 1529, 1530, 1532, 1533, 1534, 1536, 1537, 1538,
	1540, 1541, 1542, 1546, 0, 1819, 0, 1821, 1823, 0,
	0, 1825, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1709, 1710, 1711, 1826, 1935,
	1936, 0, 0, 0, 0, 0, 0, 1832, 0, 1941,
	1833, 1835, 1354, 0, 1347, 0, 1404, 1399, 1487, 0,
	1962, 1458, 1406, 1408, 1963, 2001, 1399, 1399, 0, 1910,
	0, 0, 1449, 0, 0, 0, 1451, 1422, 0, 0,
	1416, 0, 1412, 1413, 1414, 1415, 1423, 1045, 1453, 1425,
	1429, 2021, 0, 1455, 0, 1440, 0, 1442, 1474, 0,
	1434, 1437, 0, 0, 2036, 278, 0, 309, 313, 314,
	310, 311, 312, 543, 0, 0, 0, 0, 1912, 0,
	1494, 0, 1500, 0, 0, 0, 0, 549, 0, 0,
	0, 185, 1293, 196, 0, 601, -2, 634, 635, 637,
	0, 633, 134, 1182, 0, 0, 1163, 1165, 0, 139,
	2406, 148, 0, 983, 0, 2002, 0, 0, 0, 0,
	0, 1184, 0, 0, 2406, 169, 2406, 169, 151, 154,
	0, 159, 156, 157, 0, 0, 974, 95, 1182, 0,
	98, 102, 110, 0, 0, 0, 116, 0, 0, 0,
	1167, 1173, 0, 0, 1072, 1073, 1076, 1082, 76, 0,
	0, 1171, 1177, 82, 0, 1162, 161, 100, 104, 111,
	0, 1179, 97, 0, 183, 0, 0, 0, 175, 0,
	176, 177, 190, 0, 169, 2406, 0, 909, 910, 1124,
	1086, 1087, 0, 1092, 0, 0, 0, 1458, 202, 0,
	1458, 210, 0, 1976, 0, 0, 0, 0, 0, 0,
	941, 1027, 0, 914, 0, 0, 0, 393, 389, 0,
	398, 404, 403, 905, 0, 0, 0, 0, -2, 0,
	0, 1139, 1133, 1134, 0, 0, 0, 2406, 1253, 1259,
	0, 1258, 1352, 1365, 408, 1260, 1281, 0, 0, 0,
	1270, 1266, 1263, 1488, 0, 0, 0, 0, 0, 1481,
	1484, 354, 438, 169, 443, 446, 1968, 169, 452, 455,
	461, 480, 481, 252, 0, 0, 0, 0, 0, 277,
	0, 0, 0, 952, 0, 2044, 2044, 0, 2006, 0,
	0, 0, 0, 238, 0, 241, 0, 0, 0, 246,
	247, 248, 249, 250, 231, 1458, 0, 590, 0, 0,
	736, 0, 766, 768, 771, 807, 809, 826, 852, 853,
	969, 0, 969, 0, 0, 1315, 0, 1388, 1321, 1370,
	1371, 0, 1160, 0, 1622, 1665, 0, 0, -2, 0,
	0, 1669, 0, 0, 0, -2, 0, 0, 0, 1899,
	1901, 0, 1955, 1765, 0, 0, 0, 1769, 1753, 1754,
	0, 1873, 1916, 1945, 1949, 0, 1607, 1608, 1609, 1610,
	1611, 1612, 1613, 0, 1995, 2022, 2026, 1846, 1847, 1851,
	2009, 0, 0, 0, 1778, 0, 0, 0, 0, 0,
	0, 0, 0, 1588, 1592, 0, 0, 1917, 1928, 1930,
	1707, 1708, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719,
	1720, 1721, -2, -2, -2, 1725, 1726, 1727, -2, -2,
	-2, 0, 0, 0, 1931, 1933, 1934, 1938, 1939, 0,
	1829, 1830, 1831, 1940, 0, 1354, 1348, 1401, 0, 1486,
	1405, 0, 1401, 1401, 1361, 1447, 0, 0, 1470, 0,
	1419, 0, 1420, 0, 1452, 0, 1427, 1430, 1431, 1441,
	0, 1433, 0, 1436, 0, 1765, -2, 279, 281, 0,
	284, 546, 547, 545, 529, 0, 0, 1496, 0, 0,
	1572, 1576, 1600, 552, 553, 551, 198, 0, 1456, 0,
	0, 0, 0, 170, 981, 1008, 0, 0, 0, 1153,
	1160, 0, 0, 1014, 141, 0, 0, 0, 149, 0,
	0, 146, 0, 153, 158, 0, 0, 0, 0, 0,
	0, 113, 114, 115, 0, 120, 0, 121, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 172, 0, 0,
	0, 1157, 0, 0, 192, 0, 0, 0, 1127, 1128,
	1168, 1174, 0, 0, 210, 208, 0, 211, 0, 214,
	215, 0, 210, 204, 0, 0, 329, 1045, 335, 963,
	1015, 0, 1017, 0, 915, 0, 0, 1016, 385, 0,
	392, 0, 0, 1066, 0, 0, 1089, 1100, 1045, 0,
	1138, 1140, 1148, 0, 0, 0, 1255, 1259, 0, 1248,
	1249, 1384, 1261, 1279, -2, 0, 0, 1365, 1287, 1284,
	1290, 1291, 0, 440, 449, 274, 0, 269, 271, 0,
	255, 0, 0, 944, 949, 0, 0, 0, 0, 0,
	1272, 1274, 0, 0, 0, 0, 0, 0, 240, 261,
	0, 730, 754, 817, 854, 968, 0, 0, 856, 0,
	0, 1387, 1374, 1375, 1372, 1160, 1667, 1671, 0, 0,
	0, 1673, -2, 0, 1695, -2, -2, 1902, 1954, 1744,
	1365, 1766, 1768, 1755, 1948, 1617, 0, 1853, 1850, 0,
	1837, 0, 1790, 1791, 0, 0, 1794, 1796, 1797, 1798,
	1556, 1549, 1548, 1927, 0, 0, 0, 0, 1828, 1349,
	0, 1842, 0, 0, 1409, 1842, 1842, 1448, 0, 1450,
	1417, 1410, 0, 2022, 1443, 1435, 0, 0, 282, 0,
	1490, 1495, 0, 1501, 1571, 199, 135, 136, 138, 0,
	982, 0, 985, 0, 0, 0, 0, 992, 993, 0,
	0, 0, 0, 0, 1002, 0, 1031, 1041, 0, 1376,
	0, 0, 0, 143, 164, 0, 0, 1183, 0, 0,
	169, 169, 0, 0, 1164, 1166, 0, 0, 0, 0,
	123, 0, 0, 1169, 1175, 1172, 1178, 0, 0, 0,
	1180, 181, 182, 0, 169, 0, 174, 169, 169, 1157,
	0, 0, 0, 201, 0, 0, 0, 0, 203, 267,
	210, 0, 971, 0, 1027, 1019, 1020, 1021, 0, 1026,
	1028, 0, 0, 929, 916, 0, 925, 0, 0, 942,
	917, 0, 390, 907, 1063, 1097, 1045, 0, 1131, 0,
	0, 0, 0, 0, 0, 1257, 1259, 0, 1250, 1251,
	1281, 1383, 0, 0, 0, 1269, 1384, 0, 276, 277,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 277,
	242, 0, 243, 244, 245, 232, 592, 594, 0, 0,
	600, 967, 0, 0, 0, 0, 1373, 1675, -2, -2,
	1696, 0, 2023, 2025, 1365, 0, 1839, 1367, 0, 0,
	-2, 0, 0, 0, 1350, 1333, 0, 1400, 1398, 1334,
	1335, 1469, 0, 1438, 283, 0, 1497, 140, 0, 986,
	987, 2005, 989, 0, 991, 994, 0, 997, 2046, 0,
	1001, 0, 1010, 1032, 0, 963, 0, 1037, 1038, 1039,
	1154, 1155, 1043, 0, 142, 144, 163, 1157, 0, 145,
	152, 0, 0, 99, 0, 0, 2107, 126, 124, 122,
	1161, 101, 0, 183, 191, 1156, 178, 193, 169, 0,
	1170, 1176, 212, 0, 213, 216, 0, 0, 917, 970,
	0, 1018, 0, 1029, 1030, 919, 0, 918, 0, 0,
	0, 0, 0, 391, 394, 0, 397, 0, 0, 1141,
	0, 1147, 0, 0, 0, 1245, 0, 0, 1252, 1253,
	406, 1275, 0, 0, 1281, 1292, 254, 0, 0, 950,
	953, 954, 955, 956, 957, 958, 959, 960, 961, 951,
	1043, 0, 0, 1007, 0, 259, 239, 0, 596, 0,
	598, 0, 855, 857, 0, 0, 1767, 1857, 0, 0,
	1792, 1793, -2, 0, 1733, 1841, 1843, 0, 1411, 1491,
	984, 988, 0, 0, 0, 1049, 0, 0, 1003, 0,
	1035, 1036, 971, 0, 963, 0, 0, 166, 0, 0,
	0, 0, 0, 0, 0, 173, 194, 1157, 209, 226,
	0, 1098, 919, 0, 0, 927, 0, 930, 0, 926,
	923, 924, 963, 0, 395, 396, 0, 1101, 0, 1148,
	0, 0, 1259, 1254, 1255, 1488, 1278, 1282, 0, 0,
	1041, 1043, 917, 0, 595, 0, 0, 860, 861, 0,
	0, 0, 0, 1852, 1368, 1734, 0, 0, 0, 0,
	996, 1054, 0, 0, 0, 1033, 1034, 1031, 0, 1012,
	0, 1045, 147, 0, 1043, 0, 975, 0, 0, 978,
	0, 0, 127, 2107, 125, 0, 169, 229, 0, 223,
	221, 222, 912, 0, 0, 1023, 1025, 0, 931, 971,
	929, 1099, 1043, 0, 1041, 0, 0, 1257, 0, 277,
	277, 963, 1041, 1488, 0, 277, 597, 599, 1849, 1869,
	1858, -2, 2365, 2113, 0, 1869, 1869, 1844, 1845, 0,
	0, 998, 1050, 1051, 0, 1046, 1047, 1048, 2045, 999,
	1000, 1488, 1040, 0, 1049, 165, 963, 972, 0, 0,
	973, 0, 0, 130, 0, 132, 195, 217, 0, 0,
	0, 1022, 0, 0, 0, 0, 917, 919, 1041, 0,
	963, 0, 1256, 1246, 0, 256, 257, 971, 963, 1006,
	258, 1854, 0, 0, 1860, 1861, 1862, 1863, 1864, 1855,
	1856, 990, 0, 1052, 0, 1053, 0, 0, 0, 1011,
	0, 1054, 150, 976, 0, 979, 0, 128, 0, 224,
	225, 0, 1024, 920, 0, 922, 919, 928, 963, 0,
	971, 0, 1276, 0, 917, 971, 0, 1866, 1867, 0,
	0, 0, 1055, 0, 1058, 1059, 0, 1056, 0, 1031,
	0, 0, 0, 966, 921, 913, 971, 1043, 917, 1041,
	0, 1488, 917, 1865, 1868, 1859, 995, 1057, 1060, 1061,
	1042, 1013, 0, 0, 227, 0, 962, 964, 965, 917,
	1041, 1488, 963, 1488, 1004, 1488, 971, 0, 0, 1488,
	963, 1144, 971, 1277, 1005, 977, 0, 228, 1142, 971,
	917, 0, 917, 1488, 0, 1488, 1145, 971, 1143, 980,
}
var sqlTok1 = [...]int{

	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 545, 3, 551, 546, 3,
	556, 557, 549, 547, 561, 548, 558, 550, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 564, 3,
	537, 539, 538, 542, 560, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 554, 3, 555, 552, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 562, 544, 563, 540,
}
var sqlTok2 = [...]int{

	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}
var sqlTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 475, 57818, 476, 57819, 477,
	57820, 478, 57821, 479, 57822, 480, 57823, 481, 57824, 482,
	57825, 483, 57826, 484, 57827, 485, 57828, 486, 57829, 487,
	57830, 488, 57831, 489, 57832, 490, 57833, 491, 57834, 492,
	57835, 493, 57836, 494, 57837, 495, 57838, 496, 57839, 497,
	57840, 498, 57841, 499, 57842, 500, 57843, 501, 57844, 502,
	57845, 503, 57846, 504, 57847, 505, 57848, 506, 57849, 507,
	57850, 508, 57851, 509, 57852, 510, 57853, 511, 57854, 512,
	57855, 513, 57856, 514, 57857, 515, 57858, 516, 57859, 517,
	57860, 518, 57861, 519, 57862, 520, 57863, 521, 57864, 522,
	57865, 523, 57866, 524, 57867, 525, 57868, 526, 57869, 527,
	57870, 528, 57871, 529, 57872, 530, 57873, 531, 57874, 532,
	57875, 533, 57876, 534, 57877, 535, 57878, 536, 57879, 541,
	57880, 543, 57881, 553, 57882, 559, 0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := sqlPact[state]
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && sqlChk[sqlAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || sqlExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := sqlExca[i]
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = sqlTok1[0]
		goto out
	}
	if char < len(sqlTok1) {
		token = sqlTok1[char]
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = sqlTok2[char-sqlPrivate]
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = sqlTok3[i+0]
		if token == char {
			token = sqlTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = sqlTok2[1] /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = sqlPact[sqlstate]
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = sqlAct[sqln]
	if sqlChk[sqln] == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = sqlDef[sqlstate]
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && sqlExca[xi+1] == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = sqlExca[xi+0]
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = sqlExca[xi+1]
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = sqlPact[sqlS[sqlp].yys] + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = sqlAct[sqln] /* simulate a shift of "error" */
					if sqlChk[sqlstate] == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= sqlR2[sqln]
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = sqlR1[sqln]
	sqlg := sqlPgo[sqln]
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = sqlAct[sqlg]
	} else {
		sqlstate = sqlAct[sqlj]
		if sqlChk[sqlstate] != -sqln {
			sqlstate = sqlAct[sqlg]
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1234
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1239
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1241
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 9:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1244
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 11:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1245
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 13:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1246
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 15:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1247
		{
			return helpWith(sqllex, "GRANT")
		}
	case 17:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1248
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 19:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1249
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 21:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1250
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 23:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1251
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 25:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1252
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 27:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1253
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 33:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1260
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 36:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1269
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 37:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1270
		{
			return helpWith(sqllex, "ALTER")
		}
	case 39:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1273
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 41:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1274
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 43:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1275
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 45:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1276
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 47:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1277
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 49:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1278
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 51:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1279
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 53:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1280
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 55:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1281
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 65:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1337
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 67:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1363
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 70:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1376
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 74:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1393
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 75:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1397
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 76:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1401
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 81:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1418
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 82:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1422
		{
			sqlVAL.union.val = &tree.AlterDatabaseOwner{Name: tree.Name(sqlDollar[3].str), Owner: sqlDollar[6].str}
		}
	case 84:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1443
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 93:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1475
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 94:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1479
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 95:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1483
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 96:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1489
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 97:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1493
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 98:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1499
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 99:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1508
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 100:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1519
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 101:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1523
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 102:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1529
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 103:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1537
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 104:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1547
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 105:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1551
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 108:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1561
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[5].union.slct(),
			}
		}
	case 109:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1572
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[5].union.slct()}
		}
	case 110:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1579
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:  tree.TableIndexName{Table: name},
				Rows:          sqlDollar[6].union.slct(),
				RelocateLease: true,
			}
		}
	case 111:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1591
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateLease: true}
		}
	case 112:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1598
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 113:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1606
		{

			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: sqlDollar[4].union.expr()}
		}
	case 114:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1611
		{
			sqlVAL.union.val = &tree.SetZoneConfig{Options: sqlDollar[4].union.kvOptions()}
		}
	case 115:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1615
		{

			sqlVAL.union.val = &tree.SetZoneConfig{SetDefault: true}
		}
	case 116:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1620
		{
			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: tree.DNull}
		}
	case 117:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1626
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 118:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1634
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 119:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1645
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 120:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1655
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 121:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1665
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 122:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1674
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 123:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1685
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 124:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1691
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 125:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1699
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 126:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1703
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 127:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1707
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 128:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1711
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 129:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1717
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 130:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1722
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 131:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1733
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 132:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1737
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 133:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1743
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 134:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1747
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 135:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1754
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 136:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1759
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 137:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1764
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 138:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1769
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 139:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1774
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 140:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1779
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 141:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1784
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 142:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1789
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 143:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1794
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 144:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1799
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 145:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1804
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 146:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1813
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 147:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1825
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 148:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1835
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 149:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1842
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 150:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:1846
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:    sqlDollar[7].union.idxElems(),
				Sharded:    sqlDollar[9].union.shardedIndexDef(),
				Interleave: sqlDollar[10].union.interleave(),
			}
		}
	case 151:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1854
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 152:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1861
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 153:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1870
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 154:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1879
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 155:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1884
		{
			sqlVAL.union.val = &tree.AlterTablePartitionBy{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 156:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1891
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 157:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1899
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Owner: sqlDollar[3].str,
			}
		}
	case 158:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1906
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 159:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1907
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 160:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1911
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 161:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1915
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 162:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1921
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 163:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1929
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 164:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1933
		{
			sqlVAL.union.val = nil
		}
	case 165:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1939
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 166:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1943
		{
			sqlVAL.union.val = nil
		}
	case 167:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1950
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 168:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1954
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 169:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1958
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 170:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1964
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 171:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1968
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 172:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1993
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      sqlDollar[6].str,
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 173:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2004
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      sqlDollar[9].str,
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 174:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2015
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: sqlDollar[6].str,
					NewVal: sqlDollar[8].str,
				},
			}
		}
	case 175:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2025
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: sqlDollar[6].str,
				},
			}
		}
	case 176:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2034
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: sqlDollar[6].str,
				},
			}
		}
	case 177:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2043
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeOwner{
					Owner: sqlDollar[6].str,
				},
			}
		}
	case 178:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2052
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 179:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2056
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 180:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2059
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 181:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2063
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: sqlDollar[2].str,
			}
		}
	case 182:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2070
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: sqlDollar[2].str,
			}
		}
	case 183:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2077
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 184:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2082
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 185:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2086
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 196:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2112
		{
			sqlVAL.union.val = &tree.RefreshMaterializedView{
				Name:              sqlDollar[5].union.unresolvedObjectName(),
				Concurrently:      sqlDollar[4].union.bool(),
				RefreshDataOption: sqlDollar[6].union.refreshDataOption(),
			}
		}
	case 197:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2119
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 198:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2123
		{
			sqlVAL.union.val = tree.RefreshDataWithData
		}
	case 199:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2127
		{
			sqlVAL.union.val = tree.RefreshDataClear
		}
	case 200:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2131
		{
			sqlVAL.union.val = tree.RefreshDataDefault
		}
	case 201:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2160
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: false,
				Subdir:         sqlDollar[4].union.expr(),
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 202:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2172
		{
			sqlVAL.union.val = &tree.Backup{
				Targets: sqlDollar[2].union.targetListPtr(),
				To:      sqlDollar[4].union.stringOrPlaceholderOptList(),
				Nested:  true,
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *sqlDollar[6].union.backupOptions(),
			}
		}
	case 203:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2182
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: true,
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 204:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2193
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:         sqlDollar[2].union.targetListPtr(),
				To:              sqlDollar[4].union.stringOrPlaceholderOptList(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}
		}
	case 205:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2202
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 206:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2206
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 207:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2210
		{
			t := sqlDollar[1].union.targetList()
			sqlVAL.union.val = &t
		}
	case 208:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2218
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 209:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2222
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 210:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2226
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 211:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2233
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 212:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2237
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 213:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2246
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 214:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2250
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: true}
		}
	case 215:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2254
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: true}
		}
	case 216:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2258
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 217:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2337
		{
			sqlVAL.union.val = &tree.ScheduledBackup{
				ScheduleLabel:   sqlDollar[3].union.expr(),
				Recurrence:      sqlDollar[10].union.expr(),
				FullBackup:      sqlDollar[11].union.fullBackupClause(),
				To:              sqlDollar[8].union.stringOrPlaceholderOptList(),
				Targets:         sqlDollar[6].union.targetListPtr(),
				BackupOptions:   *(sqlDollar[9].union.backupOptions()),
				ScheduleOptions: sqlDollar[12].union.kvOptions(),
			}
		}
	case 218:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2348
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 220:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2353
		{
			sqlVAL.union.val = nil
		}
	case 221:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2361
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 222:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2365
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 223:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2375
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 224:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2383
		{
			sqlVAL.union.val = &tree.FullBackupClause{Recurrence: sqlDollar[3].union.expr()}
		}
	case 225:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2387
		{
			sqlVAL.union.val = &tree.FullBackupClause{AlwaysFull: true}
		}
	case 226:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2391
		{
			sqlVAL.union.val = (*tree.FullBackupClause)(nil)
		}
	case 227:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2397
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 228:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2401
		{
			sqlVAL.union.val = sqlDollar[5].union.kvOptions()
		}
	case 229:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2405
		{
			sqlVAL.union.val = nil
		}
	case 230:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2436
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				From:               sqlDollar[3].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[4].union.asOfClause(),
				Options:            *(sqlDollar[5].union.restoreOptions()),
			}
		}
	case 231:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2445
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[4].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *(sqlDollar[6].union.restoreOptions()),
			}
		}
	case 232:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2454
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				Subdir:  sqlDollar[4].union.expr(),
				From:    sqlDollar[6].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[7].union.asOfClause(),
				Options: *(sqlDollar[8].union.restoreOptions()),
			}
		}
	case 233:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2463
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 234:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2467
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList{sqlDollar[1].union.expr()}
		}
	case 235:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2471
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList(sqlDollar[2].union.exprs())
		}
	case 236:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2477
		{
			sqlVAL.union.val = []tree.StringOrPlaceholderOptList{sqlDollar[1].union.stringOrPlaceholderOptList()}
		}
	case 237:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2481
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listOfStringOrPlaceholderOptList(), sqlDollar[3].union.stringOrPlaceholderOptList())
		}
	case 238:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2488
		{
			sqlVAL.union.val = sqlDollar[2].union.restoreOptions()
		}
	case 239:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2492
		{
			sqlVAL.union.val = sqlDollar[4].union.restoreOptions()
		}
	case 240:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2496
		{
			sqlVAL.union.val = &tree.RestoreOptions{}
		}
	case 241:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2503
		{
			sqlVAL.union.val = sqlDollar[1].union.restoreOptions()
		}
	case 242:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2507
		{
			if err := sqlDollar[1].union.restoreOptions().CombineWith(sqlDollar[3].union.restoreOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 243:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2516
		{
			sqlVAL.union.val = &tree.RestoreOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 244:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2520
		{
			sqlVAL.union.val = &tree.RestoreOptions{DecryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 245:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2524
		{
			sqlVAL.union.val = &tree.RestoreOptions{IntoDB: sqlDollar[3].union.expr()}
		}
	case 246:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2528
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingFKs: true}
		}
	case 247:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2532
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequences: true}
		}
	case 248:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2536
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequenceOwners: true}
		}
	case 249:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2540
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingViews: true}
		}
	case 250:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2544
		{
			sqlVAL.union.val = &tree.RestoreOptions{Detached: true}
		}
	case 251:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2550
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 252:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2587
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 253:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2592
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 254:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2596
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 255:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2602
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 256:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2607
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateFile: sqlDollar[6].union.expr(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 257:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2612
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateDefs: sqlDollar[5].union.tblDefs(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 258:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2617
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 259:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2622
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 260:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2626
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 261:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2642
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 262:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2645
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 263:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2649
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 264:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2653
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 265:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2661
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 266:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2665
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 267:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2671
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 268:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2675
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 269:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2681
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 270:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2685
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 271:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2689
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 272:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2693
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 273:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2699
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 274:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2703
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 275:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2709
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 276:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2713
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 277:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2717
		{
			sqlVAL.union.val = nil
		}
	case 278:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2729
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: *sqlDollar[6].union.copyOptions(),
			}
		}
	case 279:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2741
		{
			sqlVAL.union.val = sqlDollar[2].union.copyOptions()
		}
	case 280:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2745
		{
			sqlVAL.union.val = &tree.CopyOptions{}
		}
	case 281:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2751
		{
			sqlVAL.union.val = sqlDollar[1].union.copyOptions()
		}
	case 282:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2755
		{
			if err := sqlDollar[1].union.copyOptions().CombineWith(sqlDollar[2].union.copyOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 283:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2763
		{
			sqlVAL.union.val = &tree.CopyOptions{Destination: sqlDollar[3].union.expr()}
		}
	case 284:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2767
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatBinary}
		}
	case 286:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2775
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 288:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2776
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 290:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2777
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 291:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2778
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 292:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2788
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 293:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2796
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 294:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2798
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 295:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2802
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 296:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2805
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 297:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2815
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 298:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2824
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 299:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2832
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 300:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2834
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 301:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2838
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 302:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2841
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 303:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2851
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 304:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2860
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 305:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2868
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 306:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2870
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 307:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2874
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 308:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2877
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 309:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2881
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 310:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2885
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 311:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2889
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 312:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2902
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 313:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2908
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 314:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2913
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 316:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2925
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 319:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2927
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 321:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2928
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 322:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2929
		{
		}
	case 323:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2930
		{
			return helpWith(sqllex, "CREATE")
		}
	case 324:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2933
		{
			return unimplemented(sqllex, "create aggregate")
		}
	case 325:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2934
		{
			return unimplemented(sqllex, "create cast")
		}
	case 326:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2935
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 327:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2936
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 328:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2937
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 329:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2938
		{
			return unimplemented(sqllex, "create extension "+sqlDollar[6].str)
		}
	case 330:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2939
		{
			return unimplemented(sqllex, "create extension "+sqlDollar[3].str)
		}
	case 331:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2940
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 332:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2941
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 333:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2942
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 334:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2943
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 335:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2944
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 336:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2945
		{
			return unimplemented(sqllex, "create operator")
		}
	case 337:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2946
		{
			return unimplemented(sqllex, "create publication")
		}
	case 338:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2947
		{
			return unimplemented(sqllex, "create rule")
		}
	case 339:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2948
		{
			return unimplemented(sqllex, "create server")
		}
	case 340:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2949
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 341:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2950
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 342:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2951
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create")
		}
	case 343:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2954
		{
		}
	case 344:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2955
		{
		}
	case 345:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2958
		{
		}
	case 346:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2959
		{
		}
	case 347:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2962
		{
		}
	case 348:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2963
		{
		}
	case 349:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2966
		{
			return unimplemented(sqllex, "drop aggregate")
		}
	case 350:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2967
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 351:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2968
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 352:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2969
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 353:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2970
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 354:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2971
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[5].str)
		}
	case 355:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2972
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[3].str)
		}
	case 356:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2973
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 357:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2974
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 358:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2975
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 359:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2976
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 360:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2977
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 361:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2978
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 362:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2979
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 363:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2980
		{
			return unimplemented(sqllex, "drop server")
		}
	case 364:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2981
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 365:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2982
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 366:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2983
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 369:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2987
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 371:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2988
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 373:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2989
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 375:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2990
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 377:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2991
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 378:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2993
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 380:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2994
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 382:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2995
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 384:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2996
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 385:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3006
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 386:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3014
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 387:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3018
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 388:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3022
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 389:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3028
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 390:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3032
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 391:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3041
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 392:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3048
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 393:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3054
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 394:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3060
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 395:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3064
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 396:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3075
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 397:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3087
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 398:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3095
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 399:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3103
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 400:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3113
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[1].union.tablePatterns()}
		}
	case 401:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3117
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 402:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3123
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()}
		}
	case 403:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3127
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedObjectName().ToUnresolvedName())
		}
	case 404:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3134
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 405:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3138
		{

			sqlVAL.union.val = nil
		}
	case 406:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3152
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 407:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3162
		{
			return helpWith(sqllex, "DELETE")
		}
	case 408:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3165
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 409:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3166
		{
		}
	case 410:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3174
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 411:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3177
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 412:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3178
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 413:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3179
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 414:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3180
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 415:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3181
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 418:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3190
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 420:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3191
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 421:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3192
		{
		}
	case 422:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3193
		{
			return helpWith(sqllex, "DROP")
		}
	case 424:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3196
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 426:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3197
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 428:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3198
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 430:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3199
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 432:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3200
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 434:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3201
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 436:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3202
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 437:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3210
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 438:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3214
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 439:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3218
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[4].union.tableNames(),
				IfExists:       false,
				DropBehavior:   sqlDollar[5].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 440:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3227
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[6].union.tableNames(),
				IfExists:       true,
				DropBehavior:   sqlDollar[7].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 441:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3235
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 442:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3243
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 443:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3247
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 444:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3250
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 445:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3258
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 446:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3262
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 447:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3265
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 448:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3273
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 449:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3282
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 450:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3290
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 451:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3298
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 452:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3306
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 453:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3313
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 454:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3320
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 455:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3328
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 456:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3335
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 457:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3339
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[1].union.unresolvedObjectNames()}
		}
	case 458:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3345
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 459:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3349
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 460:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3358
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[3].union.strs(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 461:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3366
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[5].union.strs(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 462:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3373
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 463:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3377
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 464:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3381
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 465:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3391
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.exprs(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 466:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3395
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.exprs(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 467:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3398
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 468:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3402
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 469:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3407
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 470:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3420
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 471:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3425
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 472:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3427
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 473:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3432
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 474:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3436
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 475:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3458
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 476:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3465
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 477:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3467
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 478:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3475
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"DISTSQL", "ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 479:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3483
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"DISTSQL", "ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 480:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3491
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 481:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3499
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 482:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3510
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 485:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3514
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 489:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3517
		{
			return helpWith(sqllex, "DELETE")
		}
	case 492:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3519
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 494:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3520
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 496:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3521
		{
			return helpWith(sqllex, "INSERT")
		}
	case 500:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3524
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 503:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3526
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 505:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3529
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 509:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3534
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 511:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3535
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 513:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3536
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 515:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3541
		{
			return helpWith(sqllex, "DELETE")
		}
	case 517:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3542
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 519:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3543
		{
			return helpWith(sqllex, "INSERT")
		}
	case 520:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3545
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 523:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3549
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 525:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3550
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 526:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3554
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 527:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3558
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 528:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3568
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 529:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3576
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 530:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3584
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 531:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3588
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 532:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3592
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 533:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3602
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 534:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3609
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 535:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3617
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 536:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3621
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 537:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3625
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 538:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3635
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 539:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3639
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 540:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3643
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 541:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3647
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 542:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3650
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 543:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3672
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 544:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3676
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 545:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3680
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: true}
		}
	case 546:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3684
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 547:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3688
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.strs(),
				},
				Grantees: sqlDollar[7].union.nameList(),
			}
		}
	case 548:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3697
		{
			return helpWith(sqllex, "GRANT")
		}
	case 549:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3719
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 550:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3723
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 551:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3727
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.nameList(), AdminOption: true}
		}
	case 552:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3731
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 553:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3735
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.strs(),
				},
				Grantees: sqlDollar[7].union.nameList(),
			}
		}
	case 554:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3744
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 555:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3749
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 556:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3753
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 557:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3763
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 558:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3767
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 564:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3781
		{
			return helpWith(sqllex, "RESET")
		}
	case 566:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3782
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 567:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3790
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 568:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3794
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 569:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3797
		{
			return helpWith(sqllex, "RESET")
		}
	case 570:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3805
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 571:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3808
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 572:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3819
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 573:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3822
		{
			return helpWith(sqllex, "USE")
		}
	case 575:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3826
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 576:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3827
		{
		}
	case 577:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3828
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 578:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3829
		{
			return unimplementedWithIssue(sqllex, 32562)
		}
	case 580:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3833
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 582:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3834
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 584:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3835
		{
			return helpWith(sqllex, "USE")
		}
	case 587:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3851
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 588:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3866
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 589:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3869
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 590:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3887
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 591:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3895
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 592:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3899
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 593:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3903
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 594:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3909
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 595:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3913
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 596:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3919
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 597:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3923
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 598:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3927
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 599:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3931
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 600:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3935
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 601:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3946
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 602:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3949
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 605:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3959
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 606:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3975
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 607:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3979
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 608:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3984
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 609:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4003
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 610:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4006
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 611:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4008
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 612:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4011
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 613:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4015
		{

			varName := sqlDollar[1].union.strs()
			if len(varName) == 1 && varName[0] == "tracing" {
				sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[3].union.exprs()}
			} else {
				sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
			}
		}
	case 615:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4034
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 616:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4041
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 617:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4046
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 618:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4051
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 620:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4056
		{
			return unimplemented(sqllex, "set from current")
		}
	case 621:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4057
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 622:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4065
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 623:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4070
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 624:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4077
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 625:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4081
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 626:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4087
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 627:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4091
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 629:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4098
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 632:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4119
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 633:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4123
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 634:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4129
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 635:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4133
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 636:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4137
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 637:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4141
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 638:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4145
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 639:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4151
		{
			sqlVAL.union.val = tree.Low
		}
	case 640:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4155
		{
			sqlVAL.union.val = tree.Normal
		}
	case 641:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4159
		{
			sqlVAL.union.val = tree.High
		}
	case 642:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4170
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 643:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4174
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 644:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4178
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 646:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4183
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 647:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4187
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 649:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4201
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 651:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4202
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 653:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4203
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 655:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4204
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 657:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4205
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 659:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4206
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 661:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4207
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 663:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4208
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 666:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4210
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 668:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4211
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 670:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4212
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 672:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4213
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 674:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4214
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 676:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4215
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 678:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4216
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 680:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4217
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 683:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4219
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 685:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4220
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 687:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4221
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 689:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4222
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 691:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4223
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 693:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4224
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 695:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4225
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 697:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4226
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 699:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4227
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 701:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4228
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 703:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4229
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 705:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4230
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 707:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4231
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 709:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4233
		{
			return helpWith(sqllex, "SHOW")
		}
	case 711:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4234
		{
			return helpWith(sqllex, "SHOW LAST QUERY STATISTICS")
		}
	case 712:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4239
		{
		}
	case 713:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4240
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 714:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4243
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 715:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4247
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 716:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4252
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 717:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4257
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 718:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4262
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 719:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4272
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 720:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4273
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 721:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4274
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 725:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4285
		{
			sqlVAL.str = "client_encoding"
		}
	case 727:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4288
		{
			sqlVAL.str = "timezone"
		}
	case 728:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4289
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 729:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4303
		{
			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 730:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4307
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[7].union.unresolvedObjectName(), UsingJSON: true}
		}
	case 731:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4311
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 732:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4322
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 733:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4330
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 734:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4338
		{
			sqlVAL.union.val = &tree.ShowBackup{
				InCollection: sqlDollar[4].union.expr(),
			}
		}
	case 735:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4344
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 736:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4352
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:      tree.BackupDefaultDetails,
				Path:         sqlDollar[3].union.expr(),
				InCollection: sqlDollar[5].union.expr(),
				Options:      sqlDollar[6].union.kvOptions(),
			}
		}
	case 737:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4361
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:              tree.BackupDefaultDetails,
				ShouldIncludeSchemas: true,
				Path:                 sqlDollar[4].union.expr(),
				Options:              sqlDollar[5].union.kvOptions(),
			}
		}
	case 738:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4370
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 739:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4379
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 740:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4387
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 741:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4397
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 742:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4401
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 743:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4404
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 744:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4406
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 745:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4409
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 746:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4411
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 747:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4415
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 748:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4418
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 749:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4426
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 750:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4429
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 751:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4437
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 752:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4441
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 753:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4445
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 754:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4449
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 755:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4452
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 756:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4460
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 757:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4463
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 758:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4470
		{
			sqlVAL.union.val = &tree.ShowEnums{}
		}
	case 759:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4473
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 760:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4480
		{
			sqlVAL.union.val = &tree.ShowTypes{}
		}
	case 761:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4483
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 762:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4496
		{
			lst := sqlDollar[3].union.targetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.nameList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.nameList()}
			}
		}
	case 763:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4504
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 764:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4512
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 765:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4515
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 766:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4517
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 767:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4521
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 768:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4525
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 769:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4528
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 770:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4530
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 771:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4534
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 772:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4537
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 773:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4545
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 774:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4548
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 775:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4550
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 776:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4553
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 777:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4561
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 778:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4564
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 779:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4566
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 780:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4569
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 781:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4573
		{
			sqlVAL.union.val = true
		}
	case 782:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4575
		{
			sqlVAL.union.val = true
		}
	case 783:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4577
		{
			sqlVAL.union.val = false
		}
	case 784:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4588
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 785:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4592
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 786:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4595
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 787:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4596
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 788:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4598
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 789:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4602
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 790:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4606
		{
			sqlVAL.union.val = &tree.ShowJobs{Schedules: sqlDollar[3].union.slct()}
		}
	case 791:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4609
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 792:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4611
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 793:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4619
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 794:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4627
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 795:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4637
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ExecutorType:   sqlDollar[3].union.executorType(),
			}
		}
	case 796:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4643
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 797:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4645
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: sqlDollar[2].union.scheduleState(),
				ExecutorType:   sqlDollar[4].union.executorType(),
			}
		}
	case 798:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4651
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 799:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4653
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ScheduleID:     sqlDollar[3].union.expr(),
			}
		}
	case 800:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4659
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 801:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4663
		{
			sqlVAL.union.val = tree.ActiveSchedules
		}
	case 802:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4667
		{
			sqlVAL.union.val = tree.PausedSchedules
		}
	case 803:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4673
		{
			sqlVAL.union.val = tree.InvalidExecutor
		}
	case 804:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4677
		{
			sqlVAL.union.val = tree.ScheduledBackupExecutor
		}
	case 805:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4688
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 806:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4691
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 807:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4693
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 808:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4696
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 809:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4698
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 810:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4702
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 811:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4705
		{
			sqlVAL.union.val = true
		}
	case 812:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4706
		{
			sqlVAL.union.val = false
		}
	case 813:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4714
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 814:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4717
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 815:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4719
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 816:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4722
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 817:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4730
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 818:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4740
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 819:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4750
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 820:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4753
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 821:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4760
		{
			sqlVAL.union.val = &tree.ShowTransactions{Cluster: sqlDollar[2].union.bool()}
		}
	case 822:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4763
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 823:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4765
		{
			sqlVAL.union.val = &tree.ShowTransactions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 824:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4768
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 825:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4771
		{
			sqlVAL.union.val = true
		}
	case 826:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4772
		{
			sqlVAL.union.val = false
		}
	case 827:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4779
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 828:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4783
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 829:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4786
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 830:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4793
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 831:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4797
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 832:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4800
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 833:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4807
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 834:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4811
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 835:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4818
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{}
		}
	case 836:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4828
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 837:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4831
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 838:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4839
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 839:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4844
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 840:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4849
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 841:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4853
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 842:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4861
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 843:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4865
		{

			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 844:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4869
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 848:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4882
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 849:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4885
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 850:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4893
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 851:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4896
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 852:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4900
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 853:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4904
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 854:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4908
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 855:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4916
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 856:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4924
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 857:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4931
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 858:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4938
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 859:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4942
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 860:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4953
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 861:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4961
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 862:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4967
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 863:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4976
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 864:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4981
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 865:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4985
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 866:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4988
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 867:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4992
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 868:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4999
		{
			tmp := sqlDollar[2].union.targetList()
			sqlVAL.union.val = &tmp
		}
	case 869:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5004
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 870:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5124
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 871:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5128
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 872:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5132
		{

			sqlVAL.union.val = tree.TargetList{
				Tables:   tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 873:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5171
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}
		}
	case 874:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5175
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.TargetList{Tables: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}
		}
	case 875:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5180
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 876:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5184
		{
			tenID := uint64(sqlDollar[2].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TargetList{Tenant: roachpb.MakeTenantID(tenID)}
		}
	case 877:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5192
		{
			sqlVAL.union.val = tree.TargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 878:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5201
		{
			sqlVAL.union.val = tree.TargetList{ForRoles: true, Roles: sqlDollar[2].union.nameList()}
		}
	case 879:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5205
		{
			sqlVAL.union.val = tree.TargetList{Schemas: sqlDollar[2].union.nameList().ToStrings()}
		}
	case 881:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5212
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 882:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5216
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 884:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5229
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 886:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5230
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 887:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5231
		{
			return helpWith(sqllex, "PAUSE")
		}
	case 889:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5241
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 891:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5242
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 892:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5243
		{
			return helpWith(sqllex, "RESUME")
		}
	case 893:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5253
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 894:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5261
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 895:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5263
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 896:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5267
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 897:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5270
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 898:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5275
		{
			sqlVAL.union.val = sqlDollar[3].union.slct()
		}
	case 899:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5279
		{
			sqlVAL.union.val = &tree.Select{
				Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
			}
		}
	case 900:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5294
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseSchedule,
			}
		}
	case 901:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5302
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 902:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5304
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.PauseSchedule,
			}
		}
	case 903:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5310
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 904:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5318
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].str,
			}
		}
	case 905:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5324
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].str,
				IfNotExists: true,
			}
		}
	case 906:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5331
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:   sqlDollar[3].str,
				AuthRole: sqlDollar[5].str,
			}
		}
	case 907:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5338
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].str,
				IfNotExists: true,
				AuthRole:    sqlDollar[8].str,
			}
		}
	case 908:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5345
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 909:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5356
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].str,
				Cmd: &tree.AlterSchemaRename{
					NewName: sqlDollar[6].str,
				},
			}
		}
	case 910:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5365
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].str,
				Cmd: &tree.AlterSchemaOwner{
					Owner: sqlDollar[6].str,
				},
			}
		}
	case 911:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5373
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 912:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5412
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    sqlDollar[8].union.interleave(),
				Defs:          sqlDollar[6].union.tblDefs(),
				AsSource:      nil,
				PartitionBy:   sqlDollar[9].union.partitionBy(),
				Persistence:   sqlDollar[2].union.persistence(),
				StorageParams: sqlDollar[10].union.storageParams(),
				OnCommit:      sqlDollar[11].union.createTableOnCommitSetting(),
			}
		}
	case 913:
		sqlDollar = sqlS[sqlpt-14 : sqlpt+1]
//line sql-gen.y:5427
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    sqlDollar[11].union.interleave(),
				Defs:          sqlDollar[9].union.tblDefs(),
				AsSource:      nil,
				PartitionBy:   sqlDollar[12].union.partitionBy(),
				Persistence:   sqlDollar[2].union.persistence(),
				StorageParams: sqlDollar[13].union.storageParams(),
				OnCommit:      sqlDollar[14].union.createTableOnCommitSetting(),
			}
		}
	case 915:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5445
		{

			sqlVAL.union.val = nil
		}
	case 916:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5451
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 917:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5457
		{
			sqlVAL.union.val = nil
		}
	case 918:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5461
		{

			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 919:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5468
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 920:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5472
		{

			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 921:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5477
		{

			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 922:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5482
		{

			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 923:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5489
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 924:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5493
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 925:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5499
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 926:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5503
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 927:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5509
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    nil,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 928:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:5523
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    nil,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 929:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5538
		{
		}
	case 930:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5539
		{
		}
	case 931:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5540
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 932:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5558
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 933:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5559
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 934:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5560
		{
			sqlVAL.union.val = tree.PersistencePermanent
		}
	case 936:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5564
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 937:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5565
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 938:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5566
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 939:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5567
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 940:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5568
		{
			sqlVAL.union.val = tree.PersistenceUnlogged
		}
	case 942:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5573
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 943:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5579
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 944:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5583
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 945:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5589
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 948:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5595
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 949:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5599
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 950:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5608
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 951:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5612
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 952:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5618
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 953:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5623
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 954:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5624
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 955:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5625
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 956:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5626
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 957:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5627
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 958:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5628
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 959:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5629
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 960:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5630
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 961:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5631
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 962:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5636
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.InterleaveDef{
				Parent:       name,
				Fields:       sqlDollar[6].union.nameList(),
				DropBehavior: sqlDollar[8].union.dropBehavior(),
			}
		}
	case 963:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5645
		{
			sqlVAL.union.val = (*tree.InterleaveDef)(nil)
		}
	case 964:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5652
		{

			sqlVAL.union.val = tree.DropCascade
		}
	case 965:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5657
		{

			sqlVAL.union.val = tree.DropRestrict
		}
	case 966:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5662
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 967:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5668
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 969:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5675
		{
			sqlVAL.str = ""
		}
	case 971:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5682
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 972:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5688
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[5].union.nameList(),
				List:   sqlDollar[8].union.listPartitions(),
			}
		}
	case 973:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5695
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[5].union.nameList(),
				Range:  sqlDollar[8].union.rangePartitions(),
			}
		}
	case 974:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5702
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 975:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5708
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 976:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5712
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 977:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5718
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 978:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5728
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 979:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5732
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 980:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5738
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 981:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5752
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 982:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5763
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 983:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5767
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 984:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5773
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 985:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5777
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 986:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5781
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 987:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5785
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 988:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5789
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 989:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5793
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 990:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5797
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 991:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5815
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 992:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5819
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 993:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5823
		{
			sqlVAL.union.val = tree.UniqueConstraint{}
		}
	case 994:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5827
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 995:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5831
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:      true,
				ShardBuckets: sqlDollar[8].union.expr(),
			}
		}
	case 996:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5838
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 997:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5842
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 998:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5846
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 999:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5856
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr()}
		}
	case 1000:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5860
		{
			return unimplemented(sqllex, "virtual computed columns")
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5864
		{
			sqllex.Error("use AS ( <expr> ) STORED")
			return 1
		}
	case 1002:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5871
		{
		}
	case 1003:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5872
		{
		}
	case 1004:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5877
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:          tree.Name(sqlDollar[2].str),
				Columns:       sqlDollar[4].union.idxElems(),
				Sharded:       sqlDollar[6].union.shardedIndexDef(),
				Storing:       sqlDollar[7].union.nameList(),
				Interleave:    sqlDollar[8].union.interleave(),
				PartitionBy:   sqlDollar[9].union.partitionBy(),
				StorageParams: sqlDollar[10].union.storageParams(),
				Predicate:     sqlDollar[11].union.expr(),
			}
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:5890
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:          tree.Name(sqlDollar[3].str),
					Columns:       sqlDollar[5].union.idxElems(),
					Sharded:       sqlDollar[7].union.shardedIndexDef(),
					Storing:       sqlDollar[8].union.nameList(),
					Interleave:    sqlDollar[9].union.interleave(),
					PartitionBy:   sqlDollar[10].union.partitionBy(),
					StorageParams: sqlDollar[11].union.storageParams(),
					Predicate:     sqlDollar[12].union.expr(),
				},
			}
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5905
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:          tree.Name(sqlDollar[3].str),
				Columns:       sqlDollar[5].union.idxElems(),
				Inverted:      true,
				StorageParams: sqlDollar[7].union.storageParams(),
				Predicate:     sqlDollar[8].union.expr(),
			}
		}
	case 1007:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5917
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5929
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 1009:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5934
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1010:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5940
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5946
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:     sqlDollar[3].union.idxElems(),
					Storing:     sqlDollar[5].union.nameList(),
					Interleave:  sqlDollar[6].union.interleave(),
					PartitionBy: sqlDollar[7].union.partitionBy(),
					Predicate:   sqlDollar[9].union.expr(),
				},
			}
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5958
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:    sqlDollar[4].union.idxElems(),
					Sharded:    sqlDollar[6].union.shardedIndexDef(),
					Interleave: sqlDollar[7].union.interleave(),
				},
				PrimaryKey: true,
			}
		}
	case 1013:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5970
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5981
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 1015:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5988
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5992
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1017:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5998
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 1018:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6008
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 1019:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6019
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6023
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6030
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6036
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns: sqlDollar[4].union.idxElems(),
				},
				PrimaryKey: true,
			}
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6047
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6051
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6057
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6063
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6067
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6073
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6077
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6083
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6088
		{
		}
	case 1032:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6089
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6090
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 1034:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6091
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6092
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 1036:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6093
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6111
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1041:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6115
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1042:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6121
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[6].union.expr(),
			}
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6127
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6133
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6137
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6157
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6161
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6165
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6169
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6178
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6182
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6186
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6190
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6194
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6200
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6206
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6214
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6218
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6222
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6226
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6230
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6249
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:        name,
				Persistence: sqlDollar[2].union.persistence(),
				Options:     sqlDollar[5].union.seqOpts(),
			}
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6258
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
			}
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6266
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6270
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6273
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 1068:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6274
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6277
		{
			return unimplementedWithIssueDetail(sqllex, 25110, sqlDollar[2].union.typeReference().SQLString())
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6278
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6280
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6281
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6282
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6292
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 1075:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6295
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6297
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 1077:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6299
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 1078:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6301
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6302
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 1080:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6304
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6305
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 1082:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6307
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6309
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6317
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6320
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6324
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6328
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6338
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6342
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.expr(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6345
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6353
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6357
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.expr(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6360
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6366
		{
			sqlVAL.union.val = true
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6370
		{

			sqlVAL.union.val = true
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6375
		{
			sqlVAL.union.val = false
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6385
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6399
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Persistence: sqlDollar[4].union.persistence(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6411
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6423
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[5].union.nameList(),
				AsSource:     sqlDollar[7].union.slct(),
				Materialized: true,
			}
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6433
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[8].union.nameList(),
				AsSource:     sqlDollar[10].union.slct(),
				Materialized: true,
				IfNotExists:  true,
			}
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6443
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6447
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6451
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6455
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6459
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6463
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6467
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6471
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6475
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6479
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6483
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6487
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6491
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6495
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6499
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6503
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6507
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6511
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6515
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6524
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6528
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 1125:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6534
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6538
		{
			sqlVAL.union.val = nil
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6544
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: sqlDollar[3].union.expr()}
		}
	case 1128:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6548
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: tree.DNull}
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6553
		{
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6554
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6563
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.strs(),
			}
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6570
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6572
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6574
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 1135:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6576
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6578
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6580
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 1138:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6584
		{
			sqlVAL.union.val = sqlDollar[1].union.strs()
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6588
		{
			sqlVAL.union.val = []string(nil)
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6594
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6598
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-17 : sqlpt+1]
//line sql-gen.y:6618
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:          tree.Name(sqlDollar[5].str),
				Table:         table,
				Unique:        sqlDollar[2].union.bool(),
				Columns:       sqlDollar[10].union.idxElems(),
				Sharded:       sqlDollar[12].union.shardedIndexDef(),
				Storing:       sqlDollar[13].union.nameList(),
				Interleave:    sqlDollar[14].union.interleave(),
				PartitionBy:   sqlDollar[15].union.partitionBy(),
				StorageParams: sqlDollar[16].union.storageParams(),
				Predicate:     sqlDollar[17].union.expr(),
				Inverted:      sqlDollar[8].union.bool(),
				Concurrently:  sqlDollar[4].union.bool(),
			}
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-20 : sqlpt+1]
//line sql-gen.y:6636
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:          tree.Name(sqlDollar[8].str),
				Table:         table,
				Unique:        sqlDollar[2].union.bool(),
				IfNotExists:   true,
				Columns:       sqlDollar[13].union.idxElems(),
				Sharded:       sqlDollar[15].union.shardedIndexDef(),
				Storing:       sqlDollar[16].union.nameList(),
				Interleave:    sqlDollar[17].union.interleave(),
				PartitionBy:   sqlDollar[18].union.partitionBy(),
				Inverted:      sqlDollar[11].union.bool(),
				StorageParams: sqlDollar[19].union.storageParams(),
				Predicate:     sqlDollar[20].union.expr(),
				Concurrently:  sqlDollar[4].union.bool(),
			}
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:6655
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:          tree.Name(sqlDollar[6].str),
				Table:         table,
				Unique:        sqlDollar[2].union.bool(),
				Inverted:      true,
				Columns:       sqlDollar[10].union.idxElems(),
				Storing:       sqlDollar[12].union.nameList(),
				Interleave:    sqlDollar[13].union.interleave(),
				PartitionBy:   sqlDollar[14].union.partitionBy(),
				StorageParams: sqlDollar[15].union.storageParams(),
				Predicate:     sqlDollar[16].union.expr(),
				Concurrently:  sqlDollar[5].union.bool(),
			}
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:6672
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:          tree.Name(sqlDollar[9].str),
				Table:         table,
				Unique:        sqlDollar[2].union.bool(),
				Inverted:      true,
				IfNotExists:   true,
				Columns:       sqlDollar[13].union.idxElems(),
				Storing:       sqlDollar[15].union.nameList(),
				Interleave:    sqlDollar[16].union.interleave(),
				PartitionBy:   sqlDollar[17].union.partitionBy(),
				StorageParams: sqlDollar[18].union.storageParams(),
				Predicate:     sqlDollar[19].union.expr(),
				Concurrently:  sqlDollar[5].union.bool(),
			}
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6689
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6693
		{

			switch sqlDollar[2].str {
			case "gin", "gist":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6708
		{
			sqlVAL.union.val = false
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6714
		{
			sqlVAL.union.val = true
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6718
		{
			sqlVAL.union.val = false
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6724
		{
			sqlVAL.union.val = true
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6728
		{
			sqlVAL.union.val = false
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6734
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6738
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6747
		{

			e := sqlDollar[1].union.expr()
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			if colName, ok := e.(*tree.UnresolvedName); ok && colName.NumParts == 1 {
				sqlVAL.union.val = tree.IndexElem{Column: tree.Name(colName.Parts[0]), Direction: dir, NullsOrder: nullsOrder}
			} else {
				return unimplementedWithIssueDetail(sqllex, 9682, fmt.Sprintf("%T", e))
			}
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6769
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6770
		{
			sqlVAL.str = ""
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6774
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6778
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6782
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6788
		{
			sqlVAL.union.val = &tree.ReparentDatabase{Name: tree.Name(sqlDollar[3].str), Parent: tree.Name(sqlDollar[9].str)}
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6794
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6800
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6806
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6814
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: sqlDollar[6].str, IfExists: false,
			}
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6820
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: sqlDollar[8].str, IfExists: true,
			}
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6828
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: sqlDollar[6].str, IfExists: false, IsView: true,
			}
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6834
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Schema:         sqlDollar[7].str,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6844
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: sqlDollar[8].str, IfExists: true, IsView: true,
			}
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6850
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Schema:         sqlDollar[9].str,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6862
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: sqlDollar[6].str, IfExists: false, IsSequence: true,
			}
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6868
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: sqlDollar[8].str, IfExists: true, IsSequence: true,
			}
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6876
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6882
		{
			name := sqlDollar[4].union.unresolvedObjectName()
			newName := sqlDollar[7].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6894
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6900
		{
			name := sqlDollar[6].union.unresolvedObjectName()
			newName := sqlDollar[9].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6914
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6920
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6928
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6932
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6937
		{
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6938
		{
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6941
		{
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6942
		{
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6950
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6953
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6963
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6971
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6973
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6977
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6980
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6993
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeSchedule,
			}
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7001
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7003
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.ResumeSchedule,
			}
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7009
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7022
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.DropSchedule,
			}
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7030
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7032
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.DropSchedule,
			}
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7038
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7046
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1201:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7049
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7053
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7054
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7055
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7071
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7074
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7076
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7079
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1213:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7089
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1214:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7092
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7094
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7097
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7101
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7106
		{
		}
	case 1219:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7107
		{
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7108
		{
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7118
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7122
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7125
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7128
		{
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7129
		{
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7133
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7137
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7143
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7147
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7153
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7157
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7170
		{
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7172
		{
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7176
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7181
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7185
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7189
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7193
		{
			sqlVAL.union.val = tree.TransactionModes{Deferrable: sqlDollar[1].union.deferrableMode()}
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7199
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1240:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7205
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7211
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7215
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7221
		{
			sqlVAL.union.val = tree.Deferrable
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7225
		{
			sqlVAL.union.val = tree.NotDeferrable
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7235
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:            tree.Name(sqlDollar[3].str),
				Template:        sqlDollar[5].str,
				Encoding:        sqlDollar[6].str,
				Collate:         sqlDollar[7].str,
				CType:           sqlDollar[8].str,
				ConnectionLimit: sqlDollar[9].union.int32(),
			}
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:7246
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists:     true,
				Name:            tree.Name(sqlDollar[6].str),
				Template:        sqlDollar[8].str,
				Encoding:        sqlDollar[9].str,
				Collate:         sqlDollar[10].str,
				CType:           sqlDollar[11].str,
				ConnectionLimit: sqlDollar[12].union.int32(),
			}
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7257
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7261
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7265
		{
			sqlVAL.str = ""
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7271
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7275
		{
			sqlVAL.str = ""
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7281
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7285
		{
			sqlVAL.str = ""
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7291
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7295
		{
			sqlVAL.str = ""
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7301
		{
			ret, err := sqlDollar[4].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = ret
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7309
		{
			sqlVAL.union.val = int32(-1)
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7314
		{
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7315
		{
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7330
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7337
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7344
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7355
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7362
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7366
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7375
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7380
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7386
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7390
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7394
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7400
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7404
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7424
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7428
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:   tree.NameList(nil),
				DoNothing: true,
			}
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7435
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				DoNothing:        true,
			}
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7443
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				Exprs:            sqlDollar[10].union.updateExprs(),
				Where:            tree.NewWhere(tree.AstWhere, sqlDollar[11].union.expr()),
			}
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7451
		{
			return unimplementedWithIssue(sqllex, 28161)
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7455
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7460
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7464
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7481
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7493
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7496
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7499
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7505
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7509
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7522
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7525
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7529
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7539
		{
			sqlVAL.union.val = &tree.ReassignOwnedBy{
				OldRoles: sqlDollar[4].union.strs(),
				NewRole:  sqlDollar[6].str,
			}
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7545
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7586
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7592
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7596
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7611
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7615
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1301:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7619
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7623
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7627
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7631
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7635
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7639
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7644
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7645
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7648
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7649
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7653
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7657
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7663
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7672
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7673
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7674
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7675
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1318:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7678
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7679
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7682
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7683
		{
			sqlVAL.union.val = tree.LockWaitSkip
		}
	case 1322:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7684
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1323:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7689
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7724
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1329:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7725
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1331:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7726
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7748
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7761
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1335:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7775
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7787
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7791
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7800
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7809
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7824
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7831
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7843
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7847
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7852
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7858
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7862
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7868
		{
			sqlVAL.union.val = true
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7872
		{
			sqlVAL.union.val = false
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7878
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7888
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7900
		{
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7901
		{
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7905
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7909
		{
			sqlVAL.union.val = nil
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7914
		{
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7915
		{
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7919
		{
			sqlVAL.union.val = true
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7923
		{
			sqlVAL.union.val = false
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7927
		{
			sqlVAL.union.val = false
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7933
		{
			sqlVAL.union.val = true
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7939
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7944
		{
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7945
		{
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7949
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7953
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7959
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7965
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7969
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7976
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7980
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7986
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8007
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8012
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8024
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8028
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8032
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8041
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8050
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1381:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8061
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8062
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8066
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1385:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8070
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8074
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8088
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8092
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8100
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8107
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8129
		{
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8130
		{
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8133
		{
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8134
		{
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8151
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8155
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8161
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1401:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8165
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8184
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8187
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8189
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8201
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8204
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8206
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8212
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8216
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8222
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8226
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8231
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8236
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8242
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8247
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8254
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8259
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8270
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8274
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8278
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8286
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8317
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8327
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8337
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8345
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8354
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1427:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8358
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8362
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8373
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8397
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8403
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8414
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8418
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8424
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8426
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8430
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1437:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8436
		{
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8438
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1439:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8441
		{
			sqlVAL.union.val = nil
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8442
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8443
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8447
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8451
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8457
		{
			sqlVAL.union.val = true
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8461
		{
			sqlVAL.union.val = false
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8481
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8485
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8489
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8493
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8497
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8501
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8507
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8511
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8518
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8524
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8531
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8537
		{
			sqlVAL.str = tree.AstFull
		}
	case 1460:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8541
		{
			sqlVAL.str = tree.AstLeft
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8545
		{
			sqlVAL.str = tree.AstRight
		}
	case 1462:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8549
		{
			sqlVAL.str = tree.AstInner
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8555
		{
		}
	case 1464:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8556
		{
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8577
		{
			sqlVAL.str = tree.AstHash
		}
	case 1466:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8581
		{
			sqlVAL.str = tree.AstMerge
		}
	case 1467:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8585
		{
			sqlVAL.str = tree.AstLookup
		}
	case 1468:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8589
		{
			sqlVAL.str = ""
		}
	case 1469:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8602
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 1470:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8606
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8611
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1472:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8612
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1473:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8613
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8614
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8618
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8623
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8637
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8641
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8647
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8653
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8663
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[3].union.indexFlags(),
			}
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8673
		{
			sqlVAL.union.val = true
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8677
		{
			sqlVAL.union.val = false
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8683
		{
			sqlVAL.union.val = true
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8687
		{
			sqlVAL.union.val = false
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8693
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8700
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8712
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8725
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8733
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8734
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8744
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8751
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8752
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8754
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 1497:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8762
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8763
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8775
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8782
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8791
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.MakeQChar(0)
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8831
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.OIDTypeReference{OID: oid.Oid(id)}
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8836
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8843
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8844
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8847
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8848
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8849
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8850
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8851
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8852
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8853
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8854
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1519:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8855
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8856
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1521:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8857
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1522:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8858
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1523:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8859
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 1524:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8860
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1525:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8861
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8862
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8863
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8864
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8865
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8866
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8867
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8868
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8869
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1534:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8870
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1535:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8871
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8872
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8873
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8874
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8875
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8876
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8877
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8878
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8881
		{
			sqlVAL.union.val = types.Geography
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8882
		{
			sqlVAL.union.val = types.Geometry
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8883
		{
			sqlVAL.union.val = types.Box2D
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8885
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8889
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8893
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8901
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8927
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8935
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8943
		{
			sqlVAL.union.val = nil
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8950
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8954
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8958
		{
			sqlVAL.union.val = types.Int2
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8962
		{
			sqlVAL.union.val = types.Int
		}
	case 1562:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8966
		{
			sqlVAL.union.val = types.Float4
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8970
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8974
		{
			sqlVAL.union.val = types.Float
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8978
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8986
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8994
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9002
		{
			sqlVAL.union.val = types.Bool
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9008
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9021
		{
			sqlVAL.union.val = types.Float
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9027
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1572:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9033
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1573:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9041
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 1574:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9045
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1575:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9049
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9055
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9067
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9073
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9077
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9081
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9085
		{
			sqlVAL.union.val = types.String
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9094
		{
			sqlVAL.union.val = true
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9095
		{
			sqlVAL.union.val = false
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9100
		{
			sqlVAL.union.val = types.Date
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9104
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9112
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9124
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9126
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9135
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9143
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9156
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9160
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 1595:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9170
		{
			sqlVAL.union.val = true
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9171
		{
			sqlVAL.union.val = false
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9172
		{
			sqlVAL.union.val = false
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9176
		{
			sqlVAL.union.val = types.Interval
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9180
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9184
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 1601:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9195
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9203
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9211
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9219
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1605:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9227
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9235
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9241
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9250
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9259
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9268
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9274
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9283
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9289
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9299
		{
			sqlVAL.union.val = nil
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9305
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 1617:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9313
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9350
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1620:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9354
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9358
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9362
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9373
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9378
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9382
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9386
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnarySqrt, Expr: sqlDollar[2].union.expr()}
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9390
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryCbrt, Expr: sqlDollar[2].union.expr()}
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9394
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1629:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9398
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1630:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9402
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9406
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9410
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1633:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9414
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9418
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9422
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1636:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9426
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1637:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9430
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9434
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9438
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9442
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1641:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9446
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONSomeExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1642:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9450
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONAllExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1643:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9454
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Contains, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1644:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9458
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ContainedBy, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9462
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1646:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9466
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9470
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1648:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9474
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1649:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9478
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchVal, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1650:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9482
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchText, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9486
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchValPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1652:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9490
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchTextPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9494
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9498
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1655:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9502
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Overlaps, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1656:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9506
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1657:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9510
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1658:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9514
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9518
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9522
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9526
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9530
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9534
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9538
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Like, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9542
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9546
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotLike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9550
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9554
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9558
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9562
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9566
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9570
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.SimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9574
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1674:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9578
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotSimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9582
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9586
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9590
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9594
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9598
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9602
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9606
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9610
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9614
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9618
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9622
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9625
		{
			return unimplemented(sqllex, "overlaps")
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9627
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9631
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9635
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9639
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9643
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9647
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9651
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9655
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9659
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9663
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9667
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9671
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9675
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1700:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9679
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1701:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9683
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.In, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1702:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9687
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotIn, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1703:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9691
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(tree.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 1704:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9708
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1705:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9713
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 1707:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9725
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1708:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9729
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1709:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9733
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1710:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9737
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1711:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9741
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9745
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9749
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9753
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9757
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9761
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9765
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1718:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9769
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1719:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9773
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1720:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9777
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1721:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9781
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1722:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9785
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1723:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9789
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1724:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9793
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1725:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9797
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1726:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9801
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1727:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9805
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1728:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9809
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1729:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9813
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1730:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9817
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1731:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9821
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1732:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9825
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1733:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9829
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1734:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9833
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1736:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9847
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 1738:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9855
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 1739:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9891
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1740:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9895
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1741:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9899
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 1742:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9903
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 1743:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9907
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1744:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9912
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 1745:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9914
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1746:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9918
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1747:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9922
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 1748:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9926
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 1749:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9930
		{
			sqlVAL.union.val = tree.DNull
		}
	case 1750:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9934
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 1751:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9938
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 1752:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9947
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 1753:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9954
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 1754:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9958
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: sqlDollar[5].str}
		}
	case 1755:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9962
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil || idx <= 0 {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 1756:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9968
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1758:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9973
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1759:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9977
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1760:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9981
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1761:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9985
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 1762:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9989
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1763:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9992
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 1764:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9996
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 1765:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10000
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1766:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10003
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1767:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10004
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1768:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10006
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1769:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10012
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 1770:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10016
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 1771:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10019
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 1772:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10028
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.MakeQChar(0), SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var err error
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							typ, err = name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 1773:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10081
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 1774:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10094
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 1775:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10106
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1776:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10115
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1777:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10116
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1778:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10121
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 1779:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10125
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1780:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10129
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1781:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10135
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 1782:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10139
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1783:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10143
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1784:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10147
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1785:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10151
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1786:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10155
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1787:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10161
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1788:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10165
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1789:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10169
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1790:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10173
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 1791:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10177
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 1792:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10181
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 1793:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10185
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 1794:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10189
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 1795:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10193
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 1796:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10197
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 1797:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10201
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 1798:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10205
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1799:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10209
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 1801:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10216
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1802:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10219
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1803:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10221
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1804:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10224
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1805:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10226
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1806:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10230
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1807:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10233
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1808:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10235
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1809:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10239
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1810:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10242
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1811:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10244
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1812:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10248
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1813:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10251
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1814:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10253
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1815:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10257
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1816:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10260
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1817:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10262
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1818:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10265
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1819:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10267
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1820:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10270
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1821:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10272
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1822:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10275
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1823:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10277
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1824:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10280
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1825:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10282
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1826:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10286
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1827:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10289
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1828:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10290
		{
			return unimplemented(sqllex, "treat")
		}
	case 1829:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10292
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1830:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10296
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1831:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10300
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1832:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10304
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1833:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10308
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1834:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10311
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1835:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10313
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1836:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10316
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1837:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10322
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 1838:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10326
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 1839:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10332
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 1840:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10336
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1841:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10343
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 1842:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10347
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 1843:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10353
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 1844:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10357
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 1845:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10363
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 1846:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10371
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 1847:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10375
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1848:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10379
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 1849:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10386
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 1851:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10406
		{
			sqlVAL.str = ""
		}
	case 1852:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10412
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 1853:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10416
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1854:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10422
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1855:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10430
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1856:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10438
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1857:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10446
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 1858:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10452
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == tree.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 1859:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10465
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == tree.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == tree.CurrentRow && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 1860:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10493
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedPreceding}
		}
	case 1861:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10497
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedFollowing}
		}
	case 1862:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10501
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.CurrentRow}
		}
	case 1863:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10505
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetPreceding,
			}
		}
	case 1864:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10512
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetFollowing,
			}
		}
	case 1865:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10521
		{
			sqlVAL.union.val = tree.ExcludeCurrentRow
		}
	case 1866:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10525
		{
			sqlVAL.union.val = tree.ExcludeGroup
		}
	case 1867:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10529
		{
			sqlVAL.union.val = tree.ExcludeTies
		}
	case 1868:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10533
		{

			sqlVAL.union.val = tree.NoExclusion
		}
	case 1869:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10538
		{
			sqlVAL.union.val = tree.NoExclusion
		}
	case 1870:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10551
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 1871:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10555
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1873:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10562
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 1874:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10574
		{
			sqlVAL.union.val = tree.Any
		}
	case 1875:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10578
		{
			sqlVAL.union.val = tree.Some
		}
	case 1876:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10582
		{
			sqlVAL.union.val = tree.All
		}
	case 1877:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10587
		{
			sqlVAL.union.val = tree.Plus
		}
	case 1878:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10588
		{
			sqlVAL.union.val = tree.Minus
		}
	case 1879:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10589
		{
			sqlVAL.union.val = tree.Mult
		}
	case 1880:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10590
		{
			sqlVAL.union.val = tree.Div
		}
	case 1881:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10591
		{
			sqlVAL.union.val = tree.FloorDiv
		}
	case 1882:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10592
		{
			sqlVAL.union.val = tree.Mod
		}
	case 1883:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10593
		{
			sqlVAL.union.val = tree.Bitand
		}
	case 1884:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10594
		{
			sqlVAL.union.val = tree.Bitor
		}
	case 1885:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10595
		{
			sqlVAL.union.val = tree.Pow
		}
	case 1886:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10596
		{
			sqlVAL.union.val = tree.Bitxor
		}
	case 1887:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10597
		{
			sqlVAL.union.val = tree.LT
		}
	case 1888:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10598
		{
			sqlVAL.union.val = tree.GT
		}
	case 1889:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10599
		{
			sqlVAL.union.val = tree.EQ
		}
	case 1890:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10600
		{
			sqlVAL.union.val = tree.LE
		}
	case 1891:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10601
		{
			sqlVAL.union.val = tree.GE
		}
	case 1892:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10602
		{
			sqlVAL.union.val = tree.NE
		}
	case 1894:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10606
		{
			sqlVAL.union.val = tree.Like
		}
	case 1895:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10607
		{
			sqlVAL.union.val = tree.NotLike
		}
	case 1896:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10608
		{
			sqlVAL.union.val = tree.ILike
		}
	case 1897:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10609
		{
			sqlVAL.union.val = tree.NotILike
		}
	case 1898:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10632
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 1899:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10636
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1900:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10642
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1901:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10646
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1902:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10650
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 1903:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10661
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 1904:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10665
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1905:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10671
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1906:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10675
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 1908:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10682
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1909:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10688
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1910:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10692
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1911:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10698
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 1912:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10702
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 1913:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10708
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1914:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10712
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1915:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10718
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1916:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10722
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1917:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10728
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(sqlDollar[1].str), sqlDollar[3].union.expr()}
		}
	case 1918:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10732
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1927:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10755
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 1928:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10759
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 1929:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10763
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1930:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10769
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1931:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10776
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 1932:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10780
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1933:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10797
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 1934:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10801
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 1935:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10805
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 1936:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10809
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 1937:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10813
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1938:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10819
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1939:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10825
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1940:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10831
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 1941:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10835
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 1942:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10839
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1943:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10845
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1945:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10857
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 1946:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10864
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 1947:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10868
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 1948:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10874
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 1949:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10880
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1950:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10884
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1952:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10891
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1953:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10897
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 1954:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10901
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 1956:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10908
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1957:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10914
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 1958:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10918
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 1959:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10923
		{
		}
	case 1960:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10924
		{
		}
	case 1961:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10928
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 1962:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10932
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 1963:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10938
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1964:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10947
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1965:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10951
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1966:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10955
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 1967:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10963
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 1968:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10967
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 1969:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10973
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 1970:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10977
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 1971:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10996
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 1972:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11004
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 1973:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11027
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 1975:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11036
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 1976:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11040
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1977:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11044
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 1978:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11048
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 1979:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11054
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1980:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11058
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1985:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11073
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 1986:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11077
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 1989:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11089
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 1990:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11093
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 1991:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11102
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 1992:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11113
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 1993:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11122
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 1994:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11130
		{
			var err error
			var d tree.Datum
			if sqlDollar[3].union.val == nil {
				d, err = tree.ParseDInterval(sqlDollar[2].str)
			} else {
				d, err = tree.ParseDIntervalWithTypeMetadata(sqlDollar[2].str, sqlDollar[3].union.intervalTypeMetadata())
			}
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1995:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11142
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			d, err := tree.ParseDIntervalWithTypeMetadata(sqlDollar[5].str, types.IntervalTypeMetadata{
				Precision:      prec,
				PrecisionIsSet: true,
			})
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 2019:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11245
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2021:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11252
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2022:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11256
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2023:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11260
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2025:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11274
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2026:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11278
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2027:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11282
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2028:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11295
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2030:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11304
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2034:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11322
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2035:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11335
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2036:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11342
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2044:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11367
		{
			sqlVAL.str = ""
		}
	case 2045:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11373
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 2046:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11377
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
