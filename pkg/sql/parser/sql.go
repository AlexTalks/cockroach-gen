// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"math"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/security/username"
	"github.com/cockroachdb/cockroach/pkg/sql/lexbase"
	"github.com/cockroachdb/cockroach/pkg/sql/pgwire/pgcode"
	"github.com/cockroachdb/cockroach/pkg/sql/pgwire/pgerror"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/scanner"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree/treebin"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree/treecmp"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree/treewindow"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
	"github.com/lib/pq/oid"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}

func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

func processBinaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	lhs tree.Expr,
	rhs tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case treebin.BinaryOperator:
		op.IsExplicitOperator = true
		return &tree.BinaryExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case treecmp.ComparisonOperator:
		op.IsExplicitOperator = true
		return &tree.ComparisonExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case tree.UnaryOperator:

		switch op.Symbol {
		case tree.UnaryComplement:
			return &tree.ComparisonExpr{
				Operator: treecmp.ComparisonOperator{
					Symbol:             treecmp.RegMatch,
					IsExplicitOperator: true,
				},
				Left:  lhs,
				Right: rhs,
			}, 0
		default:
			sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
			return nil, -1
		}
	default:
		sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
		return nil, 1
	}
}

func processUnaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	e, code := processUnaryQualOpInternal(sqllex, op, expr)
	if code != 0 {
		return e, code
	}
	if e, ok := e.(*tree.UnaryExpr); ok {
		e.Operator.IsExplicitOperator = true
	}
	return e, code
}

func processUnaryQualOpInternal(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case tree.UnaryOperator:
		return &tree.UnaryExpr{Operator: op, Expr: expr}, 0
	case treebin.BinaryOperator:

		switch op.Symbol {
		case treebin.Plus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryPlus),
				Expr:     expr,
			}, 0
		case treebin.Minus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryMinus),
				Expr:     expr,
			}, 0
		}
	case treecmp.ComparisonOperator:
		switch op.Symbol {
		case treecmp.RegMatch:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryComplement),
				Expr:     expr,
			}, 0
		}
	}
	sqllex.Error(fmt.Sprintf("unknown unary operator %s", op))
	return nil, 1
}

//line sql-gen.y:170

var _ scanner.ScanSymType = &sqlSymType{}

func (s *sqlSymType) ID() int32 {
	return s.id
}

func (s *sqlSymType) SetID(id int32) {
	s.id = id
}

func (s *sqlSymType) Pos() int32 {
	return s.pos
}

func (s *sqlSymType) SetPos(pos int32) {
	s.pos = pos
}

func (s *sqlSymType) Str() string {
	return s.str
}

func (s *sqlSymType) SetStr(str string) {
	s.str = str
}

func (s *sqlSymType) UnionVal() interface{} {
	return s.union.val
}

func (s *sqlSymType) SetUnionVal(val interface{}) {
	s.union.val = val
}

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) roleSpec() tree.RoleSpec {
	return u.val.(tree.RoleSpec)
}
func (u *sqlSymUnion) roleSpecList() tree.RoleSpecList {
	return u.val.(tree.RoleSpecList)
}
func (u *sqlSymUnion) user() username.SQLUsername {
	return u.val.(username.SQLUsername)
}
func (u *sqlSymUnion) userPtr() *username.SQLUsername {
	return u.val.(*username.SQLUsername)
}
func (u *sqlSymUnion) users() []username.SQLUsername {
	return u.val.([]username.SQLUsername)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) enumValueList() tree.EnumValueList {
	return u.val.(tree.EnumValueList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) storageParamKeys() []tree.Name {
	if params, ok := u.val.([]tree.Name); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistence() tree.Persistence {
	return u.val.(tree.Persistence)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) backupTargetList() tree.BackupTargetList {
	return u.val.(tree.BackupTargetList)
}
func (u *sqlSymUnion) backupTargetListPtr() *tree.BackupTargetList {
	return u.val.(*tree.BackupTargetList)
}
func (u *sqlSymUnion) grantTargetList() tree.GrantTargetList {
	return u.val.(tree.GrantTargetList)
}
func (u *sqlSymUnion) grantTargetListPtr() *tree.GrantTargetList {
	return u.val.(*tree.GrantTargetList)
}
func (u *sqlSymUnion) changefeedTargets() tree.ChangefeedTargets {
	return u.val.(tree.ChangefeedTargets)
}
func (u *sqlSymUnion) changefeedTarget() tree.ChangefeedTarget {
	return u.val.(tree.ChangefeedTarget)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() treewindow.WindowFrameExclusion {
	return u.val.(treewindow.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterChangefeedCmd() tree.AlterChangefeedCmd {
	return u.val.(tree.AlterChangefeedCmd)
}
func (u *sqlSymUnion) alterChangefeedCmds() tree.AlterChangefeedCmds {
	return u.val.(tree.AlterChangefeedCmds)
}
func (u *sqlSymUnion) backupKMS() tree.BackupKMS {
	return u.val.(tree.BackupKMS)
}
func (u *sqlSymUnion) alterBackupCmd() tree.AlterBackupCmd {
	return u.val.(tree.AlterBackupCmd)
}
func (u *sqlSymUnion) alterBackupCmds() tree.AlterBackupCmds {
	return u.val.(tree.AlterBackupCmds)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) deferrableMode() tree.DeferrableMode {
	return u.val.(tree.DeferrableMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) partitionByTable() *tree.PartitionByTable {
	return u.val.(*tree.PartitionByTable)
}
func (u *sqlSymUnion) partitionByIndex() *tree.PartitionByIndex {
	return u.val.(*tree.PartitionByIndex)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) relocateSubject() tree.RelocateSubject {
	return u.val.(tree.RelocateSubject)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() treecmp.ComparisonOperator {
	return u.val.(treecmp.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) copyOptions() *tree.CopyOptions {
	return u.val.(*tree.CopyOptions)
}
func (u *sqlSymUnion) showBackupDetails() tree.ShowBackupDetails {
	return u.val.(tree.ShowBackupDetails)
}
func (u *sqlSymUnion) restoreOptions() *tree.RestoreOptions {
	return u.val.(*tree.RestoreOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) stringOrPlaceholderOptList() tree.StringOrPlaceholderOptList {
	return u.val.(tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) listOfStringOrPlaceholderOptList() []tree.StringOrPlaceholderOptList {
	return u.val.([]tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) fullBackupClause() *tree.FullBackupClause {
	return u.val.(*tree.FullBackupClause)
}
func (u *sqlSymUnion) scheduleLabelSpec() *tree.LabelSpec {
	return u.val.(*tree.LabelSpec)
}
func (u *sqlSymUnion) labelSpec() *tree.LabelSpec {
	return u.val.(*tree.LabelSpec)
}

func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}
func (u *sqlSymUnion) scheduleState() tree.ScheduleState {
	return u.val.(tree.ScheduleState)
}
func (u *sqlSymUnion) executorType() tree.ScheduledJobExecutorType {
	return u.val.(tree.ScheduledJobExecutorType)
}
func (u *sqlSymUnion) refreshDataOption() tree.RefreshDataOption {
	return u.val.(tree.RefreshDataOption)
}
func (u *sqlSymUnion) locality() *tree.Locality {
	return u.val.(*tree.Locality)
}
func (u *sqlSymUnion) survivalGoal() tree.SurvivalGoal {
	return u.val.(tree.SurvivalGoal)
}
func (u *sqlSymUnion) dataPlacement() tree.DataPlacement {
	return u.val.(tree.DataPlacement)
}
func (u *sqlSymUnion) objectNamePrefix() tree.ObjectNamePrefix {
	return u.val.(tree.ObjectNamePrefix)
}
func (u *sqlSymUnion) objectNamePrefixList() tree.ObjectNamePrefixList {
	return u.val.(tree.ObjectNamePrefixList)
}
func (u *sqlSymUnion) abbreviatedGrant() tree.AbbreviatedGrant {
	return u.val.(tree.AbbreviatedGrant)
}
func (u *sqlSymUnion) abbreviatedRevoke() tree.AbbreviatedRevoke {
	return u.val.(tree.AbbreviatedRevoke)
}
func (u *sqlSymUnion) targetObjectType() privilege.TargetObjectType {
	return u.val.(privilege.TargetObjectType)
}
func (u *sqlSymUnion) setVar() *tree.SetVar {
	return u.val.(*tree.SetVar)
}
func (u *sqlSymUnion) cursorSensitivity() tree.CursorSensitivity {
	return u.val.(tree.CursorSensitivity)
}
func (u *sqlSymUnion) cursorScrollOption() tree.CursorScrollOption {
	return u.val.(tree.CursorScrollOption)
}
func (u *sqlSymUnion) cursorStmt() tree.CursorStmt {
	return u.val.(tree.CursorStmt)
}
func (u *sqlSymUnion) asTenantClause() tree.TenantID {
	return u.val.(tree.TenantID)
}
func (u *sqlSymUnion) functionOptions() tree.FunctionOptions {
	return u.val.(tree.FunctionOptions)
}
func (u *sqlSymUnion) functionOption() tree.FunctionOption {
	return u.val.(tree.FunctionOption)
}
func (u *sqlSymUnion) functionArgs() tree.FuncArgs {
	return u.val.(tree.FuncArgs)
}
func (u *sqlSymUnion) functionArg() tree.FuncArg {
	return u.val.(tree.FuncArg)
}
func (u *sqlSymUnion) functionArgClass() tree.FuncArgClass {
	return u.val.(tree.FuncArgClass)
}
func (u *sqlSymUnion) stmts() tree.Statements {
	return u.val.(tree.Statements)
}
func (u *sqlSymUnion) routineBody() *tree.RoutineBody {
	return u.val.(*tree.RoutineBody)
}

//line sql-gen.y:960
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lexbase.IDENT
const SCONST = lexbase.SCONST
const BCONST = lexbase.BCONST
const BITCONST = lexbase.BITCONST
const ICONST = lexbase.ICONST
const FCONST = lexbase.FCONST
const PLACEHOLDER = lexbase.PLACEHOLDER
const TYPECAST = lexbase.TYPECAST
const TYPEANNOTATE = lexbase.TYPEANNOTATE
const DOT_DOT = lexbase.DOT_DOT
const LESS_EQUALS = lexbase.LESS_EQUALS
const GREATER_EQUALS = lexbase.GREATER_EQUALS
const NOT_EQUALS = lexbase.NOT_EQUALS
const NOT_REGMATCH = lexbase.NOT_REGMATCH
const REGIMATCH = lexbase.REGIMATCH
const NOT_REGIMATCH = lexbase.NOT_REGIMATCH
const ERROR = lexbase.ERROR
const ABORT = lexbase.ABORT
const ABSOLUTE = lexbase.ABSOLUTE
const ACCESS = lexbase.ACCESS
const ACTION = lexbase.ACTION
const ADD = lexbase.ADD
const ADMIN = lexbase.ADMIN
const AFTER = lexbase.AFTER
const AGGREGATE = lexbase.AGGREGATE
const ALL = lexbase.ALL
const ALTER = lexbase.ALTER
const ALWAYS = lexbase.ALWAYS
const ANALYSE = lexbase.ANALYSE
const ANALYZE = lexbase.ANALYZE
const AND = lexbase.AND
const AND_AND = lexbase.AND_AND
const ANY = lexbase.ANY
const ANNOTATE_TYPE = lexbase.ANNOTATE_TYPE
const ARRAY = lexbase.ARRAY
const AS = lexbase.AS
const ASC = lexbase.ASC
const ASENSITIVE = lexbase.ASENSITIVE
const ASYMMETRIC = lexbase.ASYMMETRIC
const AT = lexbase.AT
const ATOMIC = lexbase.ATOMIC
const ATTRIBUTE = lexbase.ATTRIBUTE
const AUTHORIZATION = lexbase.AUTHORIZATION
const AUTOMATIC = lexbase.AUTOMATIC
const AVAILABILITY = lexbase.AVAILABILITY
const BACKUP = lexbase.BACKUP
const BACKUPS = lexbase.BACKUPS
const BACKWARD = lexbase.BACKWARD
const BEFORE = lexbase.BEFORE
const BEGIN = lexbase.BEGIN
const BETWEEN = lexbase.BETWEEN
const BIGINT = lexbase.BIGINT
const BIGSERIAL = lexbase.BIGSERIAL
const BINARY = lexbase.BINARY
const BIT = lexbase.BIT
const BUCKET_COUNT = lexbase.BUCKET_COUNT
const BOOLEAN = lexbase.BOOLEAN
const BOTH = lexbase.BOTH
const BOX2D = lexbase.BOX2D
const BUNDLE = lexbase.BUNDLE
const BY = lexbase.BY
const CACHE = lexbase.CACHE
const CALLED = lexbase.CALLED
const CANCEL = lexbase.CANCEL
const CANCELQUERY = lexbase.CANCELQUERY
const CASCADE = lexbase.CASCADE
const CASE = lexbase.CASE
const CAST = lexbase.CAST
const CBRT = lexbase.CBRT
const CHANGEFEED = lexbase.CHANGEFEED
const CHAR = lexbase.CHAR
const CHARACTER = lexbase.CHARACTER
const CHARACTERISTICS = lexbase.CHARACTERISTICS
const CHECK = lexbase.CHECK
const CLOSE = lexbase.CLOSE
const CLUSTER = lexbase.CLUSTER
const COALESCE = lexbase.COALESCE
const COLLATE = lexbase.COLLATE
const COLLATION = lexbase.COLLATION
const COLUMN = lexbase.COLUMN
const COLUMNS = lexbase.COLUMNS
const COMMENT = lexbase.COMMENT
const COMMENTS = lexbase.COMMENTS
const COMMIT = lexbase.COMMIT
const COMMITTED = lexbase.COMMITTED
const COMPACT = lexbase.COMPACT
const COMPLETE = lexbase.COMPLETE
const COMPLETIONS = lexbase.COMPLETIONS
const CONCAT = lexbase.CONCAT
const CONCURRENTLY = lexbase.CONCURRENTLY
const CONFIGURATION = lexbase.CONFIGURATION
const CONFIGURATIONS = lexbase.CONFIGURATIONS
const CONFIGURE = lexbase.CONFIGURE
const CONFLICT = lexbase.CONFLICT
const CONNECTION = lexbase.CONNECTION
const CONSTRAINT = lexbase.CONSTRAINT
const CONSTRAINTS = lexbase.CONSTRAINTS
const CONTAINS = lexbase.CONTAINS
const CONTROLCHANGEFEED = lexbase.CONTROLCHANGEFEED
const CONTROLJOB = lexbase.CONTROLJOB
const CONVERSION = lexbase.CONVERSION
const CONVERT = lexbase.CONVERT
const COPY = lexbase.COPY
const COST = lexbase.COST
const COVERING = lexbase.COVERING
const CREATE = lexbase.CREATE
const CREATEDB = lexbase.CREATEDB
const CREATELOGIN = lexbase.CREATELOGIN
const CREATEROLE = lexbase.CREATEROLE
const CROSS = lexbase.CROSS
const CSV = lexbase.CSV
const CUBE = lexbase.CUBE
const CURRENT = lexbase.CURRENT
const CURRENT_CATALOG = lexbase.CURRENT_CATALOG
const CURRENT_DATE = lexbase.CURRENT_DATE
const CURRENT_SCHEMA = lexbase.CURRENT_SCHEMA
const CURRENT_ROLE = lexbase.CURRENT_ROLE
const CURRENT_TIME = lexbase.CURRENT_TIME
const CURRENT_TIMESTAMP = lexbase.CURRENT_TIMESTAMP
const CURRENT_USER = lexbase.CURRENT_USER
const CURSOR = lexbase.CURSOR
const CYCLE = lexbase.CYCLE
const DATA = lexbase.DATA
const DATABASE = lexbase.DATABASE
const DATABASES = lexbase.DATABASES
const DATE = lexbase.DATE
const DAY = lexbase.DAY
const DEBUG_PAUSE_ON = lexbase.DEBUG_PAUSE_ON
const DEC = lexbase.DEC
const DECIMAL = lexbase.DECIMAL
const DEFAULT = lexbase.DEFAULT
const DEFAULTS = lexbase.DEFAULTS
const DEFINER = lexbase.DEFINER
const DEALLOCATE = lexbase.DEALLOCATE
const DECLARE = lexbase.DECLARE
const DEFERRABLE = lexbase.DEFERRABLE
const DEFERRED = lexbase.DEFERRED
const DELETE = lexbase.DELETE
const DELIMITER = lexbase.DELIMITER
const DESC = lexbase.DESC
const DESTINATION = lexbase.DESTINATION
const DETACHED = lexbase.DETACHED
const DISCARD = lexbase.DISCARD
const DISTINCT = lexbase.DISTINCT
const DO = lexbase.DO
const DOMAIN = lexbase.DOMAIN
const DOUBLE = lexbase.DOUBLE
const DROP = lexbase.DROP
const ELSE = lexbase.ELSE
const ENCODING = lexbase.ENCODING
const ENCRYPTED = lexbase.ENCRYPTED
const ENCRYPTION_PASSPHRASE = lexbase.ENCRYPTION_PASSPHRASE
const END = lexbase.END
const ENUM = lexbase.ENUM
const ENUMS = lexbase.ENUMS
const ESCAPE = lexbase.ESCAPE
const EXCEPT = lexbase.EXCEPT
const EXCLUDE = lexbase.EXCLUDE
const EXCLUDING = lexbase.EXCLUDING
const EXISTS = lexbase.EXISTS
const EXECUTE = lexbase.EXECUTE
const EXECUTION = lexbase.EXECUTION
const EXPERIMENTAL = lexbase.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lexbase.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lexbase.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lexbase.EXPERIMENTAL_AUDIT
const EXPERIMENTAL_RELOCATE = lexbase.EXPERIMENTAL_RELOCATE
const EXPIRATION = lexbase.EXPIRATION
const EXPLAIN = lexbase.EXPLAIN
const EXPORT = lexbase.EXPORT
const EXTENSION = lexbase.EXTENSION
const EXTERNAL = lexbase.EXTERNAL
const EXTRACT = lexbase.EXTRACT
const EXTRACT_DURATION = lexbase.EXTRACT_DURATION
const FAILURE = lexbase.FAILURE
const FALSE = lexbase.FALSE
const FAMILY = lexbase.FAMILY
const FETCH = lexbase.FETCH
const FETCHVAL = lexbase.FETCHVAL
const FETCHTEXT = lexbase.FETCHTEXT
const FETCHVAL_PATH = lexbase.FETCHVAL_PATH
const FETCHTEXT_PATH = lexbase.FETCHTEXT_PATH
const FILES = lexbase.FILES
const FILTER = lexbase.FILTER
const FIRST = lexbase.FIRST
const FLOAT = lexbase.FLOAT
const FLOAT4 = lexbase.FLOAT4
const FLOAT8 = lexbase.FLOAT8
const FLOORDIV = lexbase.FLOORDIV
const FOLLOWING = lexbase.FOLLOWING
const FOR = lexbase.FOR
const FORCE = lexbase.FORCE
const FORCE_INDEX = lexbase.FORCE_INDEX
const FORCE_ZIGZAG = lexbase.FORCE_ZIGZAG
const FOREIGN = lexbase.FOREIGN
const FORWARD = lexbase.FORWARD
const FREEZE = lexbase.FREEZE
const FROM = lexbase.FROM
const FULL = lexbase.FULL
const FUNCTION = lexbase.FUNCTION
const FUNCTIONS = lexbase.FUNCTIONS
const GENERATED = lexbase.GENERATED
const GEOGRAPHY = lexbase.GEOGRAPHY
const GEOMETRY = lexbase.GEOMETRY
const GEOMETRYM = lexbase.GEOMETRYM
const GEOMETRYZ = lexbase.GEOMETRYZ
const GEOMETRYZM = lexbase.GEOMETRYZM
const GEOMETRYCOLLECTION = lexbase.GEOMETRYCOLLECTION
const GEOMETRYCOLLECTIONM = lexbase.GEOMETRYCOLLECTIONM
const GEOMETRYCOLLECTIONZ = lexbase.GEOMETRYCOLLECTIONZ
const GEOMETRYCOLLECTIONZM = lexbase.GEOMETRYCOLLECTIONZM
const GLOBAL = lexbase.GLOBAL
const GOAL = lexbase.GOAL
const GRANT = lexbase.GRANT
const GRANTS = lexbase.GRANTS
const GREATEST = lexbase.GREATEST
const GROUP = lexbase.GROUP
const GROUPING = lexbase.GROUPING
const GROUPS = lexbase.GROUPS
const HAVING = lexbase.HAVING
const HASH = lexbase.HASH
const HEADER = lexbase.HEADER
const HIGH = lexbase.HIGH
const HISTOGRAM = lexbase.HISTOGRAM
const HOLD = lexbase.HOLD
const HOUR = lexbase.HOUR
const IDENTITY = lexbase.IDENTITY
const IF = lexbase.IF
const IFERROR = lexbase.IFERROR
const IFNULL = lexbase.IFNULL
const IGNORE_FOREIGN_KEYS = lexbase.IGNORE_FOREIGN_KEYS
const ILIKE = lexbase.ILIKE
const IMMEDIATE = lexbase.IMMEDIATE
const IMMUTABLE = lexbase.IMMUTABLE
const IMPORT = lexbase.IMPORT
const IN = lexbase.IN
const INCLUDE = lexbase.INCLUDE
const INCLUDING = lexbase.INCLUDING
const INCREMENT = lexbase.INCREMENT
const INCREMENTAL = lexbase.INCREMENTAL
const INCREMENTAL_LOCATION = lexbase.INCREMENTAL_LOCATION
const INET = lexbase.INET
const INET_CONTAINED_BY_OR_EQUALS = lexbase.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lexbase.INET_CONTAINS_OR_EQUALS
const INDEX = lexbase.INDEX
const INDEXES = lexbase.INDEXES
const INHERITS = lexbase.INHERITS
const INJECT = lexbase.INJECT
const INITIALLY = lexbase.INITIALLY
const INNER = lexbase.INNER
const INOUT = lexbase.INOUT
const INPUT = lexbase.INPUT
const INSENSITIVE = lexbase.INSENSITIVE
const INSERT = lexbase.INSERT
const INT = lexbase.INT
const INTEGER = lexbase.INTEGER
const INTERSECT = lexbase.INTERSECT
const INTERVAL = lexbase.INTERVAL
const INTO = lexbase.INTO
const INTO_DB = lexbase.INTO_DB
const INVERTED = lexbase.INVERTED
const INVOKER = lexbase.INVOKER
const IS = lexbase.IS
const ISERROR = lexbase.ISERROR
const ISNULL = lexbase.ISNULL
const ISOLATION = lexbase.ISOLATION
const JOB = lexbase.JOB
const JOBS = lexbase.JOBS
const JOIN = lexbase.JOIN
const JSON = lexbase.JSON
const JSONB = lexbase.JSONB
const JSON_SOME_EXISTS = lexbase.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lexbase.JSON_ALL_EXISTS
const KEY = lexbase.KEY
const KEYS = lexbase.KEYS
const KMS = lexbase.KMS
const KV = lexbase.KV
const LANGUAGE = lexbase.LANGUAGE
const LAST = lexbase.LAST
const LATERAL = lexbase.LATERAL
const LATEST = lexbase.LATEST
const LC_CTYPE = lexbase.LC_CTYPE
const LC_COLLATE = lexbase.LC_COLLATE
const LEADING = lexbase.LEADING
const LEASE = lexbase.LEASE
const LEAST = lexbase.LEAST
const LEAKPROOF = lexbase.LEAKPROOF
const LEFT = lexbase.LEFT
const LESS = lexbase.LESS
const LEVEL = lexbase.LEVEL
const LIKE = lexbase.LIKE
const LIMIT = lexbase.LIMIT
const LINESTRING = lexbase.LINESTRING
const LINESTRINGM = lexbase.LINESTRINGM
const LINESTRINGZ = lexbase.LINESTRINGZ
const LINESTRINGZM = lexbase.LINESTRINGZM
const LIST = lexbase.LIST
const LOCAL = lexbase.LOCAL
const LOCALITY = lexbase.LOCALITY
const LOCALTIME = lexbase.LOCALTIME
const LOCALTIMESTAMP = lexbase.LOCALTIMESTAMP
const LOCKED = lexbase.LOCKED
const LOGIN = lexbase.LOGIN
const LOOKUP = lexbase.LOOKUP
const LOW = lexbase.LOW
const LSHIFT = lexbase.LSHIFT
const MATCH = lexbase.MATCH
const MATERIALIZED = lexbase.MATERIALIZED
const MERGE = lexbase.MERGE
const MINVALUE = lexbase.MINVALUE
const MAXVALUE = lexbase.MAXVALUE
const METHOD = lexbase.METHOD
const MINUTE = lexbase.MINUTE
const MODIFYCLUSTERSETTING = lexbase.MODIFYCLUSTERSETTING
const MONTH = lexbase.MONTH
const MOVE = lexbase.MOVE
const MULTILINESTRING = lexbase.MULTILINESTRING
const MULTILINESTRINGM = lexbase.MULTILINESTRINGM
const MULTILINESTRINGZ = lexbase.MULTILINESTRINGZ
const MULTILINESTRINGZM = lexbase.MULTILINESTRINGZM
const MULTIPOINT = lexbase.MULTIPOINT
const MULTIPOINTM = lexbase.MULTIPOINTM
const MULTIPOINTZ = lexbase.MULTIPOINTZ
const MULTIPOINTZM = lexbase.MULTIPOINTZM
const MULTIPOLYGON = lexbase.MULTIPOLYGON
const MULTIPOLYGONM = lexbase.MULTIPOLYGONM
const MULTIPOLYGONZ = lexbase.MULTIPOLYGONZ
const MULTIPOLYGONZM = lexbase.MULTIPOLYGONZM
const NAN = lexbase.NAN
const NAME = lexbase.NAME
const NAMES = lexbase.NAMES
const NATURAL = lexbase.NATURAL
const NEVER = lexbase.NEVER
const NEW_DB_NAME = lexbase.NEW_DB_NAME
const NEW_KMS = lexbase.NEW_KMS
const NEXT = lexbase.NEXT
const NO = lexbase.NO
const NOCANCELQUERY = lexbase.NOCANCELQUERY
const NOCONTROLCHANGEFEED = lexbase.NOCONTROLCHANGEFEED
const NOCONTROLJOB = lexbase.NOCONTROLJOB
const NOCREATEDB = lexbase.NOCREATEDB
const NOCREATELOGIN = lexbase.NOCREATELOGIN
const NOCREATEROLE = lexbase.NOCREATEROLE
const NOLOGIN = lexbase.NOLOGIN
const NOMODIFYCLUSTERSETTING = lexbase.NOMODIFYCLUSTERSETTING
const NOSQLLOGIN = lexbase.NOSQLLOGIN
const NO_INDEX_JOIN = lexbase.NO_INDEX_JOIN
const NO_ZIGZAG_JOIN = lexbase.NO_ZIGZAG_JOIN
const NO_FULL_SCAN = lexbase.NO_FULL_SCAN
const NONE = lexbase.NONE
const NONVOTERS = lexbase.NONVOTERS
const NORMAL = lexbase.NORMAL
const NOT = lexbase.NOT
const NOTHING = lexbase.NOTHING
const NOTNULL = lexbase.NOTNULL
const NOVIEWACTIVITY = lexbase.NOVIEWACTIVITY
const NOVIEWACTIVITYREDACTED = lexbase.NOVIEWACTIVITYREDACTED
const NOVIEWCLUSTERSETTING = lexbase.NOVIEWCLUSTERSETTING
const NOWAIT = lexbase.NOWAIT
const NULL = lexbase.NULL
const NULLIF = lexbase.NULLIF
const NULLS = lexbase.NULLS
const NUMERIC = lexbase.NUMERIC
const OF = lexbase.OF
const OFF = lexbase.OFF
const OFFSET = lexbase.OFFSET
const OID = lexbase.OID
const OIDS = lexbase.OIDS
const OIDVECTOR = lexbase.OIDVECTOR
const OLD_KMS = lexbase.OLD_KMS
const ON = lexbase.ON
const ONLY = lexbase.ONLY
const OPT = lexbase.OPT
const OPTION = lexbase.OPTION
const OPTIONS = lexbase.OPTIONS
const OR = lexbase.OR
const ORDER = lexbase.ORDER
const ORDINALITY = lexbase.ORDINALITY
const OTHERS = lexbase.OTHERS
const OUT = lexbase.OUT
const OUTER = lexbase.OUTER
const OVER = lexbase.OVER
const OVERLAPS = lexbase.OVERLAPS
const OVERLAY = lexbase.OVERLAY
const OWNED = lexbase.OWNED
const OWNER = lexbase.OWNER
const OPERATOR = lexbase.OPERATOR
const PARALLEL = lexbase.PARALLEL
const PARENT = lexbase.PARENT
const PARTIAL = lexbase.PARTIAL
const PARTITION = lexbase.PARTITION
const PARTITIONS = lexbase.PARTITIONS
const PASSWORD = lexbase.PASSWORD
const PAUSE = lexbase.PAUSE
const PAUSED = lexbase.PAUSED
const PHYSICAL = lexbase.PHYSICAL
const PLACEMENT = lexbase.PLACEMENT
const PLACING = lexbase.PLACING
const PLAN = lexbase.PLAN
const PLANS = lexbase.PLANS
const POINT = lexbase.POINT
const POINTM = lexbase.POINTM
const POINTZ = lexbase.POINTZ
const POINTZM = lexbase.POINTZM
const POLYGON = lexbase.POLYGON
const POLYGONM = lexbase.POLYGONM
const POLYGONZ = lexbase.POLYGONZ
const POLYGONZM = lexbase.POLYGONZM
const POSITION = lexbase.POSITION
const PRECEDING = lexbase.PRECEDING
const PRECISION = lexbase.PRECISION
const PREPARE = lexbase.PREPARE
const PRESERVE = lexbase.PRESERVE
const PRIMARY = lexbase.PRIMARY
const PRIOR = lexbase.PRIOR
const PRIORITY = lexbase.PRIORITY
const PRIVILEGES = lexbase.PRIVILEGES
const PROCEDURAL = lexbase.PROCEDURAL
const PUBLIC = lexbase.PUBLIC
const PUBLICATION = lexbase.PUBLICATION
const QUERIES = lexbase.QUERIES
const QUERY = lexbase.QUERY
const QUOTE = lexbase.QUOTE
const RANGE = lexbase.RANGE
const RANGES = lexbase.RANGES
const READ = lexbase.READ
const REAL = lexbase.REAL
const REASON = lexbase.REASON
const REASSIGN = lexbase.REASSIGN
const RECURSIVE = lexbase.RECURSIVE
const RECURRING = lexbase.RECURRING
const REF = lexbase.REF
const REFERENCES = lexbase.REFERENCES
const REFRESH = lexbase.REFRESH
const REGCLASS = lexbase.REGCLASS
const REGION = lexbase.REGION
const REGIONAL = lexbase.REGIONAL
const REGIONS = lexbase.REGIONS
const REGNAMESPACE = lexbase.REGNAMESPACE
const REGPROC = lexbase.REGPROC
const REGPROCEDURE = lexbase.REGPROCEDURE
const REGROLE = lexbase.REGROLE
const REGTYPE = lexbase.REGTYPE
const REINDEX = lexbase.REINDEX
const RELATIVE = lexbase.RELATIVE
const RELOCATE = lexbase.RELOCATE
const REMOVE_PATH = lexbase.REMOVE_PATH
const RENAME = lexbase.RENAME
const REPEATABLE = lexbase.REPEATABLE
const REPLACE = lexbase.REPLACE
const REPLICATION = lexbase.REPLICATION
const RELEASE = lexbase.RELEASE
const RESET = lexbase.RESET
const RESTART = lexbase.RESTART
const RESTORE = lexbase.RESTORE
const RESTRICT = lexbase.RESTRICT
const RESTRICTED = lexbase.RESTRICTED
const RESUME = lexbase.RESUME
const RETURNING = lexbase.RETURNING
const RETURN = lexbase.RETURN
const RETURNS = lexbase.RETURNS
const RETRY = lexbase.RETRY
const REVISION_HISTORY = lexbase.REVISION_HISTORY
const REVOKE = lexbase.REVOKE
const RIGHT = lexbase.RIGHT
const ROLE = lexbase.ROLE
const ROLES = lexbase.ROLES
const ROLLBACK = lexbase.ROLLBACK
const ROLLUP = lexbase.ROLLUP
const ROUTINES = lexbase.ROUTINES
const ROW = lexbase.ROW
const ROWS = lexbase.ROWS
const RSHIFT = lexbase.RSHIFT
const RULE = lexbase.RULE
const RUNNING = lexbase.RUNNING
const SAVEPOINT = lexbase.SAVEPOINT
const SCANS = lexbase.SCANS
const SCATTER = lexbase.SCATTER
const SCHEDULE = lexbase.SCHEDULE
const SCHEDULES = lexbase.SCHEDULES
const SCROLL = lexbase.SCROLL
const SCHEMA = lexbase.SCHEMA
const SCHEMAS = lexbase.SCHEMAS
const SCRUB = lexbase.SCRUB
const SEARCH = lexbase.SEARCH
const SECOND = lexbase.SECOND
const SECONDARY = lexbase.SECONDARY
const SECURITY = lexbase.SECURITY
const SELECT = lexbase.SELECT
const SEQUENCE = lexbase.SEQUENCE
const SEQUENCES = lexbase.SEQUENCES
const SERIALIZABLE = lexbase.SERIALIZABLE
const SERVER = lexbase.SERVER
const SESSION = lexbase.SESSION
const SESSIONS = lexbase.SESSIONS
const SESSION_USER = lexbase.SESSION_USER
const SET = lexbase.SET
const SETOF = lexbase.SETOF
const SETS = lexbase.SETS
const SETTING = lexbase.SETTING
const SETTINGS = lexbase.SETTINGS
const SHARE = lexbase.SHARE
const SHOW = lexbase.SHOW
const SIMILAR = lexbase.SIMILAR
const SIMPLE = lexbase.SIMPLE
const SKIP = lexbase.SKIP
const SKIP_LOCALITIES_CHECK = lexbase.SKIP_LOCALITIES_CHECK
const SKIP_MISSING_FOREIGN_KEYS = lexbase.SKIP_MISSING_FOREIGN_KEYS
const SKIP_MISSING_SEQUENCES = lexbase.SKIP_MISSING_SEQUENCES
const SKIP_MISSING_SEQUENCE_OWNERS = lexbase.SKIP_MISSING_SEQUENCE_OWNERS
const SKIP_MISSING_VIEWS = lexbase.SKIP_MISSING_VIEWS
const SMALLINT = lexbase.SMALLINT
const SMALLSERIAL = lexbase.SMALLSERIAL
const SNAPSHOT = lexbase.SNAPSHOT
const SOME = lexbase.SOME
const SPLIT = lexbase.SPLIT
const SQL = lexbase.SQL
const SQLLOGIN = lexbase.SQLLOGIN
const STABLE = lexbase.STABLE
const START = lexbase.START
const STATE = lexbase.STATE
const STATISTICS = lexbase.STATISTICS
const STATUS = lexbase.STATUS
const STDIN = lexbase.STDIN
const STREAM = lexbase.STREAM
const STRICT = lexbase.STRICT
const STRING = lexbase.STRING
const STORAGE = lexbase.STORAGE
const STORE = lexbase.STORE
const STORED = lexbase.STORED
const STORING = lexbase.STORING
const SUBSTRING = lexbase.SUBSTRING
const SUPER = lexbase.SUPER
const SUPPORT = lexbase.SUPPORT
const SURVIVE = lexbase.SURVIVE
const SURVIVAL = lexbase.SURVIVAL
const SYMMETRIC = lexbase.SYMMETRIC
const SYNTAX = lexbase.SYNTAX
const SYSTEM = lexbase.SYSTEM
const SQRT = lexbase.SQRT
const SUBSCRIPTION = lexbase.SUBSCRIPTION
const STATEMENTS = lexbase.STATEMENTS
const TABLE = lexbase.TABLE
const TABLES = lexbase.TABLES
const TABLESPACE = lexbase.TABLESPACE
const TEMP = lexbase.TEMP
const TEMPLATE = lexbase.TEMPLATE
const TEMPORARY = lexbase.TEMPORARY
const TENANT = lexbase.TENANT
const TENANTS = lexbase.TENANTS
const TESTING_RELOCATE = lexbase.TESTING_RELOCATE
const TEXT = lexbase.TEXT
const THEN = lexbase.THEN
const TIES = lexbase.TIES
const TIME = lexbase.TIME
const TIMETZ = lexbase.TIMETZ
const TIMESTAMP = lexbase.TIMESTAMP
const TIMESTAMPTZ = lexbase.TIMESTAMPTZ
const TO = lexbase.TO
const THROTTLING = lexbase.THROTTLING
const TRAILING = lexbase.TRAILING
const TRACE = lexbase.TRACE
const TRANSACTION = lexbase.TRANSACTION
const TRANSACTIONS = lexbase.TRANSACTIONS
const TRANSFER = lexbase.TRANSFER
const TRANSFORM = lexbase.TRANSFORM
const TREAT = lexbase.TREAT
const TRIGGER = lexbase.TRIGGER
const TRIM = lexbase.TRIM
const TRUE = lexbase.TRUE
const TRUNCATE = lexbase.TRUNCATE
const TRUSTED = lexbase.TRUSTED
const TYPE = lexbase.TYPE
const TYPES = lexbase.TYPES
const TRACING = lexbase.TRACING
const UNBOUNDED = lexbase.UNBOUNDED
const UNCOMMITTED = lexbase.UNCOMMITTED
const UNION = lexbase.UNION
const UNIQUE = lexbase.UNIQUE
const UNKNOWN = lexbase.UNKNOWN
const UNLOGGED = lexbase.UNLOGGED
const UNSPLIT = lexbase.UNSPLIT
const UPDATE = lexbase.UPDATE
const UPSERT = lexbase.UPSERT
const UNSET = lexbase.UNSET
const UNTIL = lexbase.UNTIL
const USE = lexbase.USE
const USER = lexbase.USER
const USERS = lexbase.USERS
const USING = lexbase.USING
const UUID = lexbase.UUID
const VALID = lexbase.VALID
const VALIDATE = lexbase.VALIDATE
const VALUE = lexbase.VALUE
const VALUES = lexbase.VALUES
const VARBIT = lexbase.VARBIT
const VARCHAR = lexbase.VARCHAR
const VARIADIC = lexbase.VARIADIC
const VIEW = lexbase.VIEW
const VARYING = lexbase.VARYING
const VIEWACTIVITY = lexbase.VIEWACTIVITY
const VIEWACTIVITYREDACTED = lexbase.VIEWACTIVITYREDACTED
const VIEWCLUSTERSETTING = lexbase.VIEWCLUSTERSETTING
const VIRTUAL = lexbase.VIRTUAL
const VISIBLE = lexbase.VISIBLE
const VOLATILE = lexbase.VOLATILE
const VOTERS = lexbase.VOTERS
const WHEN = lexbase.WHEN
const WHERE = lexbase.WHERE
const WINDOW = lexbase.WINDOW
const WITH = lexbase.WITH
const WITHIN = lexbase.WITHIN
const WITHOUT = lexbase.WITHOUT
const WORK = lexbase.WORK
const WRITE = lexbase.WRITE
const YEAR = lexbase.YEAR
const ZONE = lexbase.ZONE
const NOT_LA = lexbase.NOT_LA
const NULLS_LA = lexbase.NULLS_LA
const WITH_LA = lexbase.WITH_LA
const AS_LA = lexbase.AS_LA
const GENERATED_ALWAYS = lexbase.GENERATED_ALWAYS
const GENERATED_BY_DEFAULT = lexbase.GENERATED_BY_DEFAULT
const RESET_ALL = lexbase.RESET_ALL
const ROLE_ALL = lexbase.ROLE_ALL
const USER_ALL = lexbase.USER_ALL
const ON_LA = lexbase.ON_LA
const TENANT_ALL = lexbase.TENANT_ALL
const SET_TRACING = lexbase.SET_TRACING
const CONTAINED_BY = lexbase.CONTAINED_BY
const POSTFIXOP = lexbase.POSTFIXOP
const INTERVAL_SIMPLE = lexbase.INTERVAL_SIMPLE
const UMINUS = lexbase.UMINUS
const HELPTOKEN = lexbase.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ABSOLUTE",
	"ACCESS",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASENSITIVE",
	"ASYMMETRIC",
	"AT",
	"ATOMIC",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"AVAILABILITY",
	"BACKUP",
	"BACKUPS",
	"BACKWARD",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BINARY",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BOX2D",
	"BUNDLE",
	"BY",
	"CACHE",
	"CALLED",
	"CANCEL",
	"CANCELQUERY",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"COMPLETIONS",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONNECTION",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONTROLCHANGEFEED",
	"CONTROLJOB",
	"CONVERSION",
	"CONVERT",
	"COPY",
	"COST",
	"COVERING",
	"CREATE",
	"CREATEDB",
	"CREATELOGIN",
	"CREATEROLE",
	"CROSS",
	"CSV",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CURSOR",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEBUG_PAUSE_ON",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEFINER",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DELIMITER",
	"DESC",
	"DESTINATION",
	"DETACHED",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTED",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ENUMS",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXECUTION",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPERIMENTAL_RELOCATE",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTERNAL",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FAILURE",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE",
	"FORCE_INDEX",
	"FORCE_ZIGZAG",
	"FOREIGN",
	"FORWARD",
	"FREEZE",
	"FROM",
	"FULL",
	"FUNCTION",
	"FUNCTIONS",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYM",
	"GEOMETRYZ",
	"GEOMETRYZM",
	"GEOMETRYCOLLECTION",
	"GEOMETRYCOLLECTIONM",
	"GEOMETRYCOLLECTIONZ",
	"GEOMETRYCOLLECTIONZM",
	"GLOBAL",
	"GOAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HEADER",
	"HIGH",
	"HISTOGRAM",
	"HOLD",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMMUTABLE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDING",
	"INCREMENT",
	"INCREMENTAL",
	"INCREMENTAL_LOCATION",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INHERITS",
	"INJECT",
	"INITIALLY",
	"INNER",
	"INOUT",
	"INPUT",
	"INSENSITIVE",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INTO_DB",
	"INVERTED",
	"INVOKER",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KMS",
	"KV",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LATEST",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEAKPROOF",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LINESTRINGM",
	"LINESTRINGZ",
	"LINESTRINGZM",
	"LIST",
	"LOCAL",
	"LOCALITY",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"METHOD",
	"MINUTE",
	"MODIFYCLUSTERSETTING",
	"MONTH",
	"MOVE",
	"MULTILINESTRING",
	"MULTILINESTRINGM",
	"MULTILINESTRINGZ",
	"MULTILINESTRINGZM",
	"MULTIPOINT",
	"MULTIPOINTM",
	"MULTIPOINTZ",
	"MULTIPOINTZM",
	"MULTIPOLYGON",
	"MULTIPOLYGONM",
	"MULTIPOLYGONZ",
	"MULTIPOLYGONZM",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEVER",
	"NEW_DB_NAME",
	"NEW_KMS",
	"NEXT",
	"NO",
	"NOCANCELQUERY",
	"NOCONTROLCHANGEFEED",
	"NOCONTROLJOB",
	"NOCREATEDB",
	"NOCREATELOGIN",
	"NOCREATEROLE",
	"NOLOGIN",
	"NOMODIFYCLUSTERSETTING",
	"NOSQLLOGIN",
	"NO_INDEX_JOIN",
	"NO_ZIGZAG_JOIN",
	"NO_FULL_SCAN",
	"NONE",
	"NONVOTERS",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOVIEWACTIVITY",
	"NOVIEWACTIVITYREDACTED",
	"NOVIEWCLUSTERSETTING",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"OLD_KMS",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARALLEL",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PAUSED",
	"PHYSICAL",
	"PLACEMENT",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POINTM",
	"POINTZ",
	"POINTZM",
	"POLYGON",
	"POLYGONM",
	"POLYGONZ",
	"POLYGONZM",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIOR",
	"PRIORITY",
	"PRIVILEGES",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"QUOTE",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"REASON",
	"REASSIGN",
	"RECURSIVE",
	"RECURRING",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REGCLASS",
	"REGION",
	"REGIONAL",
	"REGIONS",
	"REGNAMESPACE",
	"REGPROC",
	"REGPROCEDURE",
	"REGROLE",
	"REGTYPE",
	"REINDEX",
	"RELATIVE",
	"RELOCATE",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"REPLICATION",
	"RELEASE",
	"RESET",
	"RESTART",
	"RESTORE",
	"RESTRICT",
	"RESTRICTED",
	"RESUME",
	"RETURNING",
	"RETURN",
	"RETURNS",
	"RETRY",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROUTINES",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"RUNNING",
	"SAVEPOINT",
	"SCANS",
	"SCATTER",
	"SCHEDULE",
	"SCHEDULES",
	"SCROLL",
	"SCHEMA",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SECONDARY",
	"SECURITY",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETOF",
	"SETS",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SKIP_LOCALITIES_CHECK",
	"SKIP_MISSING_FOREIGN_KEYS",
	"SKIP_MISSING_SEQUENCES",
	"SKIP_MISSING_SEQUENCE_OWNERS",
	"SKIP_MISSING_VIEWS",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"SQLLOGIN",
	"STABLE",
	"START",
	"STATE",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STREAM",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SUPER",
	"SUPPORT",
	"SURVIVE",
	"SURVIVAL",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"STATEMENTS",
	"TABLE",
	"TABLES",
	"TABLESPACE",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TENANT",
	"TENANTS",
	"TESTING_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TRANSACTIONS",
	"TRANSFER",
	"TRANSFORM",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TYPES",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNSET",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIEWACTIVITY",
	"VIEWACTIVITYREDACTED",
	"VIEWCLUSTERSETTING",
	"VIRTUAL",
	"VISIBLE",
	"VOLATILE",
	"VOTERS",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"NULLS_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"GENERATED_BY_DEFAULT",
	"RESET_ALL",
	"ROLE_ALL",
	"USER_ALL",
	"ON_LA",
	"TENANT_ALL",
	"SET_TRACING",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"INTERVAL_SIMPLE",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"';'",
	"'{'",
	"'}'",
	"':'",
}

var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:15239

//line yacctab:1
var sqlExca = [...]int16{
	-1, 0,
	1, 5,
	-2, 1837,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 63,
	281, 526,
	-2, 0,
	-1, 75,
	8, 987,
	29, 987,
	643, 987,
	644, 987,
	-2, 0,
	-1, 76,
	8, 987,
	29, 987,
	643, 987,
	644, 987,
	-2, 0,
	-1, 78,
	1, 1684,
	139, 1684,
	269, 1684,
	356, 1684,
	419, 1684,
	429, 1684,
	624, 1684,
	656, 1684,
	-2, 0,
	-1, 79,
	1, 1684,
	656, 1684,
	-2, 0,
	-1, 85,
	262, 274,
	562, 274,
	-2, 0,
	-1, 99,
	203, 448,
	248, 1558,
	264, 1558,
	281, 448,
	421, 448,
	433, 1301,
	477, 448,
	493, 1301,
	546, 1301,
	575, 448,
	602, 1301,
	-2, 0,
	-1, 106,
	141, 1837,
	257, 1837,
	586, 1837,
	587, 1837,
	-2, 0,
	-1, 124,
	160, 1808,
	181, 1808,
	194, 1808,
	260, 1808,
	295, 1808,
	369, 1808,
	380, 1808,
	581, 1808,
	-2, 1779,
	-1, 166,
	168, 1121,
	280, 1121,
	424, 1082,
	498, 1082,
	545, 1082,
	565, 1121,
	567, 1082,
	-2, 0,
	-1, 171,
	4, 1839,
	21, 1839,
	22, 1839,
	23, 1839,
	24, 1839,
	25, 1839,
	26, 1839,
	27, 1839,
	28, 1839,
	30, 1839,
	31, 1839,
	37, 1839,
	41, 1839,
	43, 1839,
	44, 1839,
	45, 1839,
	47, 1839,
	48, 1839,
	49, 1839,
	50, 1839,
	51, 1839,
	52, 1839,
	53, 1839,
	54, 1839,
	55, 1839,
	57, 1839,
	58, 1839,
	59, 1839,
	60, 1839,
	62, 1839,
	63, 1839,
	64, 1839,
	65, 1839,
	66, 1839,
	67, 1839,
	68, 1839,
	69, 1839,
	73, 1839,
	74, 1839,
	75, 1839,
	76, 1839,
	78, 1839,
	79, 1839,
	80, 1839,
	84, 1839,
	85, 1839,
	86, 1839,
	87, 1839,
	88, 1839,
	89, 1839,
	90, 1839,
	91, 1839,
	94, 1839,
	95, 1839,
	96, 1839,
	97, 1839,
	98, 1839,
	100, 1839,
	102, 1839,
	103, 1839,
	104, 1839,
	105, 1839,
	106, 1839,
	107, 1839,
	108, 1839,
	110, 1839,
	111, 1839,
	112, 1839,
	114, 1839,
	115, 1839,
	116, 1839,
	124, 1839,
	125, 1839,
	126, 1839,
	127, 1839,
	128, 1839,
	130, 1839,
	131, 1839,
	132, 1839,
	133, 1839,
	135, 1839,
	136, 1839,
	137, 1839,
	138, 1839,
	140, 1839,
	141, 1839,
	142, 1839,
	144, 1839,
	145, 1839,
	146, 1839,
	149, 1839,
	150, 1839,
	151, 1839,
	153, 1839,
	154, 1839,
	155, 1839,
	157, 1839,
	158, 1839,
	159, 1839,
	161, 1839,
	162, 1839,
	163, 1839,
	164, 1839,
	165, 1839,
	166, 1839,
	167, 1839,
	168, 1839,
	169, 1839,
	170, 1839,
	171, 1839,
	172, 1839,
	173, 1839,
	174, 1839,
	175, 1839,
	176, 1839,
	177, 1839,
	178, 1839,
	180, 1839,
	186, 1839,
	187, 1839,
	188, 1839,
	189, 1839,
	193, 1839,
	195, 1839,
	196, 1839,
	197, 1839,
	199, 1839,
	200, 1839,
	203, 1839,
	204, 1839,
	205, 1839,
	206, 1839,
	207, 1839,
	208, 1839,
	209, 1839,
	210, 1839,
	211, 1839,
	212, 1839,
	213, 1839,
	214, 1839,
	215, 1839,
	216, 1839,
	218, 1839,
	219, 1839,
	221, 1839,
	222, 1839,
	224, 1839,
	225, 1839,
	226, 1839,
	227, 1839,
	228, 1839,
	229, 1839,
	230, 1839,
	231, 1839,
	232, 1839,
	233, 1839,
	234, 1839,
	236, 1839,
	237, 1839,
	238, 1839,
	240, 1839,
	241, 1839,
	242, 1839,
	243, 1839,
	244, 1839,
	248, 1839,
	249, 1839,
	250, 1839,
	251, 1839,
	254, 1839,
	255, 1839,
	256, 1839,
	257, 1839,
	258, 1839,
	259, 1839,
	261, 1839,
	263, 1839,
	264, 1839,
	265, 1839,
	267, 1839,
	269, 1839,
	270, 1839,
	271, 1839,
	273, 1839,
	277, 1839,
	278, 1839,
	279, 1839,
	280, 1839,
	281, 1839,
	282, 1839,
	284, 1839,
	285, 1839,
	286, 1839,
	288, 1839,
	289, 1839,
	290, 1839,
	292, 1839,
	293, 1839,
	296, 1839,
	297, 1839,
	298, 1839,
	299, 1839,
	300, 1839,
	301, 1839,
	302, 1839,
	305, 1839,
	306, 1839,
	307, 1839,
	308, 1839,
	310, 1839,
	311, 1839,
	312, 1839,
	313, 1839,
	314, 1839,
	315, 1839,
	316, 1839,
	317, 1839,
	318, 1839,
	319, 1839,
	320, 1839,
	321, 1839,
	322, 1839,
	323, 1839,
	324, 1839,
	325, 1839,
	326, 1839,
	327, 1839,
	328, 1839,
	329, 1839,
	330, 1839,
	331, 1839,
	332, 1839,
	334, 1839,
	336, 1839,
	337, 1839,
	338, 1839,
	339, 1839,
	340, 1839,
	341, 1839,
	342, 1839,
	343, 1839,
	344, 1839,
	345, 1839,
	346, 1839,
	347, 1839,
	348, 1839,
	349, 1839,
	350, 1839,
	351, 1839,
	352, 1839,
	354, 1839,
	355, 1839,
	357, 1839,
	359, 1839,
	360, 1839,
	361, 1839,
	362, 1839,
	364, 1839,
	365, 1839,
	366, 1839,
	367, 1839,
	368, 1839,
	371, 1839,
	373, 1839,
	375, 1839,
	376, 1839,
	377, 1839,
	378, 1839,
	381, 1839,
	382, 1839,
	383, 1839,
	385, 1839,
	387, 1839,
	388, 1839,
	389, 1839,
	390, 1839,
	391, 1839,
	392, 1839,
	393, 1839,
	394, 1839,
	395, 1839,
	396, 1839,
	397, 1839,
	398, 1839,
	399, 1839,
	400, 1839,
	402, 1839,
	403, 1839,
	404, 1839,
	405, 1839,
	406, 1839,
	407, 1839,
	408, 1839,
	409, 1839,
	410, 1839,
	411, 1839,
	412, 1839,
	413, 1839,
	414, 1839,
	415, 1839,
	416, 1839,
	418, 1839,
	419, 1839,
	420, 1839,
	422, 1839,
	423, 1839,
	424, 1839,
	425, 1839,
	426, 1839,
	427, 1839,
	428, 1839,
	429, 1839,
	430, 1839,
	431, 1839,
	432, 1839,
	433, 1839,
	434, 1839,
	435, 1839,
	437, 1839,
	439, 1839,
	440, 1839,
	441, 1839,
	447, 1839,
	448, 1839,
	449, 1839,
	451, 1839,
	452, 1839,
	453, 1839,
	454, 1839,
	455, 1839,
	456, 1839,
	457, 1839,
	458, 1839,
	459, 1839,
	460, 1839,
	461, 1839,
	463, 1839,
	464, 1839,
	465, 1839,
	466, 1839,
	467, 1839,
	469, 1839,
	470, 1839,
	471, 1839,
	472, 1839,
	473, 1839,
	474, 1839,
	475, 1839,
	477, 1839,
	478, 1839,
	479, 1839,
	480, 1839,
	481, 1839,
	482, 1839,
	483, 1839,
	484, 1839,
	485, 1839,
	486, 1839,
	487, 1839,
	488, 1839,
	489, 1839,
	490, 1839,
	491, 1839,
	493, 1839,
	494, 1839,
	495, 1839,
	496, 1839,
	497, 1839,
	498, 1839,
	500, 1839,
	501, 1839,
	502, 1839,
	503, 1839,
	504, 1839,
	505, 1839,
	506, 1839,
	508, 1839,
	509, 1839,
	510, 1839,
	511, 1839,
	512, 1839,
	513, 1839,
	514, 1839,
	515, 1839,
	517, 1839,
	519, 1839,
	520, 1839,
	521, 1839,
	522, 1839,
	523, 1839,
	524, 1839,
	525, 1839,
	526, 1839,
	527, 1839,
	528, 1839,
	529, 1839,
	530, 1839,
	531, 1839,
	532, 1839,
	533, 1839,
	534, 1839,
	535, 1839,
	536, 1839,
	537, 1839,
	538, 1839,
	539, 1839,
	541, 1839,
	542, 1839,
	544, 1839,
	545, 1839,
	547, 1839,
	548, 1839,
	549, 1839,
	550, 1839,
	551, 1839,
	552, 1839,
	554, 1839,
	555, 1839,
	557, 1839,
	558, 1839,
	559, 1839,
	560, 1839,
	561, 1839,
	563, 1839,
	565, 1839,
	566, 1839,
	567, 1839,
	568, 1839,
	569, 1839,
	570, 1839,
	571, 1839,
	572, 1839,
	574, 1839,
	575, 1839,
	576, 1839,
	577, 1839,
	578, 1839,
	579, 1839,
	580, 1839,
	583, 1839,
	584, 1839,
	585, 1839,
	586, 1839,
	587, 1839,
	588, 1839,
	589, 1839,
	590, 1839,
	592, 1839,
	595, 1839,
	596, 1839,
	597, 1839,
	598, 1839,
	599, 1839,
	600, 1839,
	602, 1839,
	603, 1839,
	604, 1839,
	605, 1839,
	606, 1839,
	607, 1839,
	608, 1839,
	609, 1839,
	610, 1839,
	615, 1839,
	616, 1839,
	617, 1839,
	618, 1839,
	619, 1839,
	620, 1839,
	-2, 0,
	-1, 173,
	1, 1684,
	656, 1684,
	659, 1684,
	-2, 0,
	-1, 174,
	1, 1684,
	562, 1684,
	656, 1684,
	659, 1684,
	-2, 0,
	-1, 207,
	160, 1807,
	181, 1807,
	194, 1807,
	260, 1807,
	295, 1807,
	369, 1807,
	380, 1807,
	581, 1807,
	-2, 1782,
	-1, 261,
	4, 1846,
	5, 1846,
	6, 1846,
	7, 1846,
	8, 1846,
	9, 1846,
	10, 1846,
	21, 1846,
	22, 1846,
	23, 1846,
	24, 1846,
	25, 1846,
	26, 1846,
	27, 1846,
	28, 1846,
	30, 1846,
	31, 1846,
	37, 1846,
	38, 1846,
	41, 1846,
	43, 1846,
	44, 1846,
	45, 1846,
	46, 1846,
	47, 1846,
	48, 1846,
	49, 1846,
	50, 1846,
	51, 1846,
	52, 1846,
	53, 1846,
	54, 1846,
	55, 1846,
	57, 1846,
	58, 1846,
	59, 1846,
	60, 1846,
	62, 1846,
	63, 1846,
	64, 1846,
	65, 1846,
	66, 1846,
	67, 1846,
	68, 1846,
	69, 1846,
	70, 1846,
	71, 1846,
	72, 1846,
	73, 1846,
	74, 1846,
	75, 1846,
	76, 1846,
	78, 1846,
	79, 1846,
	80, 1846,
	82, 1846,
	84, 1846,
	85, 1846,
	86, 1846,
	87, 1846,
	88, 1846,
	89, 1846,
	90, 1846,
	91, 1846,
	94, 1846,
	95, 1846,
	96, 1846,
	97, 1846,
	98, 1846,
	100, 1846,
	102, 1846,
	103, 1846,
	104, 1846,
	105, 1846,
	106, 1846,
	107, 1846,
	108, 1846,
	110, 1846,
	111, 1846,
	112, 1846,
	113, 1846,
	114, 1846,
	115, 1846,
	116, 1846,
	117, 1846,
	118, 1846,
	119, 1846,
	120, 1846,
	121, 1846,
	122, 1846,
	123, 1846,
	124, 1846,
	125, 1846,
	126, 1846,
	127, 1846,
	128, 1846,
	129, 1846,
	130, 1846,
	131, 1846,
	132, 1846,
	133, 1846,
	134, 1846,
	135, 1846,
	136, 1846,
	137, 1846,
	138, 1846,
	140, 1846,
	141, 1846,
	142, 1846,
	144, 1846,
	145, 1846,
	146, 1846,
	149, 1846,
	150, 1846,
	151, 1846,
	153, 1846,
	154, 1846,
	155, 1846,
	157, 1846,
	158, 1846,
	159, 1846,
	161, 1846,
	162, 1846,
	163, 1846,
	164, 1846,
	165, 1846,
	166, 1846,
	167, 1846,
	168, 1846,
	169, 1846,
	170, 1846,
	171, 1846,
	172, 1846,
	173, 1846,
	174, 1846,
	175, 1846,
	176, 1846,
	177, 1846,
	178, 1846,
	179, 1846,
	180, 1846,
	186, 1846,
	187, 1846,
	188, 1846,
	189, 1846,
	193, 1846,
	195, 1846,
	196, 1846,
	197, 1846,
	199, 1846,
	200, 1846,
	202, 1846,
	203, 1846,
	204, 1846,
	205, 1846,
	206, 1846,
	207, 1846,
	208, 1846,
	209, 1846,
	210, 1846,
	211, 1846,
	212, 1846,
	213, 1846,
	214, 1846,
	215, 1846,
	216, 1846,
	218, 1846,
	219, 1846,
	221, 1846,
	222, 1846,
	224, 1846,
	225, 1846,
	226, 1846,
	227, 1846,
	228, 1846,
	229, 1846,
	230, 1846,
	231, 1846,
	232, 1846,
	233, 1846,
	234, 1846,
	235, 1846,
	236, 1846,
	237, 1846,
	238, 1846,
	240, 1846,
	241, 1846,
	242, 1846,
	243, 1846,
	244, 1846,
	248, 1846,
	249, 1846,
	250, 1846,
	251, 1846,
	253, 1846,
	254, 1846,
	255, 1846,
	256, 1846,
	257, 1846,
	258, 1846,
	259, 1846,
	261, 1846,
	263, 1846,
	264, 1846,
	265, 1846,
	266, 1846,
	267, 1846,
	268, 1846,
	269, 1846,
	270, 1846,
	271, 1846,
	272, 1846,
	273, 1846,
	277, 1846,
	278, 1846,
	279, 1846,
	280, 1846,
	281, 1846,
	282, 1846,
	284, 1846,
	285, 1846,
	286, 1846,
	288, 1846,
	289, 1846,
	290, 1846,
	291, 1846,
	292, 1846,
	293, 1846,
	294, 1846,
	296, 1846,
	297, 1846,
	298, 1846,
	299, 1846,
	300, 1846,
	301, 1846,
	302, 1846,
	303, 1846,
	304, 1846,
	305, 1846,
	306, 1846,
	307, 1846,
	308, 1846,
	310, 1846,
	311, 1846,
	312, 1846,
	313, 1846,
	314, 1846,
	315, 1846,
	316, 1846,
	317, 1846,
	318, 1846,
	319, 1846,
	320, 1846,
	321, 1846,
	322, 1846,
	323, 1846,
	324, 1846,
	325, 1846,
	326, 1846,
	327, 1846,
	328, 1846,
	329, 1846,
	330, 1846,
	331, 1846,
	332, 1846,
	334, 1846,
	335, 1846,
	336, 1846,
	337, 1846,
	338, 1846,
	339, 1846,
	340, 1846,
	341, 1846,
	342, 1846,
	343, 1846,
	344, 1846,
	345, 1846,
	346, 1846,
	347, 1846,
	348, 1846,
	349, 1846,
	350, 1846,
	351, 1846,
	352, 1846,
	353, 1846,
	354, 1846,
	355, 1846,
	356, 1846,
	357, 1846,
	358, 1846,
	359, 1846,
	360, 1846,
	361, 1846,
	362, 1846,
	363, 1846,
	364, 1846,
	365, 1846,
	366, 1846,
	367, 1846,
	368, 1846,
	371, 1846,
	373, 1846,
	376, 1846,
	377, 1846,
	378, 1846,
	381, 1846,
	382, 1846,
	383, 1846,
	384, 1846,
	385, 1846,
	386, 1846,
	387, 1846,
	388, 1846,
	389, 1846,
	390, 1846,
	391, 1846,
	392, 1846,
	393, 1846,
	394, 1846,
	395, 1846,
	396, 1846,
	397, 1846,
	398, 1846,
	399, 1846,
	400, 1846,
	402, 1846,
	403, 1846,
	404, 1846,
	405, 1846,
	406, 1846,
	407, 1846,
	408, 1846,
	409, 1846,
	410, 1846,
	411, 1846,
	412, 1846,
	413, 1846,
	414, 1846,
	415, 1846,
	416, 1846,
	418, 1846,
	419, 1846,
	420, 1846,
	422, 1846,
	423, 1846,
	424, 1846,
	425, 1846,
	426, 1846,
	427, 1846,
	428, 1846,
	429, 1846,
	430, 1846,
	431, 1846,
	432, 1846,
	433, 1846,
	434, 1846,
	435, 1846,
	437, 1846,
	439, 1846,
	440, 1846,
	441, 1846,
	447, 1846,
	448, 1846,
	449, 1846,
	451, 1846,
	452, 1846,
	453, 1846,
	454, 1846,
	455, 1846,
	456, 1846,
	457, 1846,
	458, 1846,
	459, 1846,
	460, 1846,
	461, 1846,
	463, 1846,
	464, 1846,
	465, 1846,
	466, 1846,
	467, 1846,
	468, 1846,
	469, 1846,
	470, 1846,
	471, 1846,
	472, 1846,
	473, 1846,
	474, 1846,
	475, 1846,
	477, 1846,
	478, 1846,
	479, 1846,
	480, 1846,
	481, 1846,
	482, 1846,
	483, 1846,
	484, 1846,
	485, 1846,
	486, 1846,
	487, 1846,
	488, 1846,
	489, 1846,
	490, 1846,
	491, 1846,
	493, 1846,
	494, 1846,
	495, 1846,
	496, 1846,
	497, 1846,
	498, 1846,
	499, 1846,
	500, 1846,
	501, 1846,
	502, 1846,
	503, 1846,
	504, 1846,
	505, 1846,
	506, 1846,
	507, 1846,
	508, 1846,
	509, 1846,
	510, 1846,
	511, 1846,
	512, 1846,
	513, 1846,
	514, 1846,
	515, 1846,
	517, 1846,
	519, 1846,
	520, 1846,
	521, 1846,
	522, 1846,
	523, 1846,
	524, 1846,
	525, 1846,
	526, 1846,
	527, 1846,
	528, 1846,
	529, 1846,
	530, 1846,
	531, 1846,
	532, 1846,
	533, 1846,
	534, 1846,
	535, 1846,
	536, 1846,
	537, 1846,
	538, 1846,
	539, 1846,
	541, 1846,
	542, 1846,
	543, 1846,
	544, 1846,
	545, 1846,
	547, 1846,
	548, 1846,
	549, 1846,
	550, 1846,
	551, 1846,
	552, 1846,
	554, 1846,
	555, 1846,
	557, 1846,
	558, 1846,
	559, 1846,
	560, 1846,
	561, 1846,
	563, 1846,
	565, 1846,
	566, 1846,
	567, 1846,
	568, 1846,
	569, 1846,
	570, 1846,
	571, 1846,
	572, 1846,
	573, 1846,
	574, 1846,
	575, 1846,
	576, 1846,
	577, 1846,
	578, 1846,
	579, 1846,
	580, 1846,
	582, 1846,
	583, 1846,
	584, 1846,
	585, 1846,
	586, 1846,
	587, 1846,
	588, 1846,
	589, 1846,
	590, 1846,
	591, 1846,
	592, 1846,
	595, 1846,
	596, 1846,
	597, 1846,
	598, 1846,
	599, 1846,
	600, 1846,
	602, 1846,
	603, 1846,
	604, 1846,
	605, 1846,
	606, 1846,
	607, 1846,
	608, 1846,
	609, 1846,
	610, 1846,
	615, 1846,
	616, 1846,
	617, 1846,
	618, 1846,
	619, 1846,
	620, 1846,
	621, 1846,
	636, 1846,
	643, 1846,
	644, 1846,
	645, 1846,
	653, 1846,
	657, 1846,
	-2, 0,
	-1, 833,
	4, 1556,
	21, 1556,
	22, 1556,
	23, 1556,
	24, 1556,
	25, 1556,
	26, 1556,
	27, 1556,
	28, 1556,
	30, 1556,
	31, 1556,
	37, 1556,
	41, 1556,
	43, 1556,
	44, 1556,
	45, 1556,
	47, 1556,
	48, 1556,
	49, 1556,
	50, 1556,
	51, 1556,
	52, 1556,
	53, 1556,
	54, 1556,
	55, 1556,
	57, 1556,
	58, 1556,
	59, 1556,
	60, 1556,
	62, 1556,
	63, 1556,
	64, 1556,
	65, 1556,
	66, 1556,
	67, 1556,
	68, 1556,
	69, 1556,
	73, 1556,
	74, 1556,
	75, 1556,
	76, 1556,
	78, 1556,
	79, 1556,
	80, 1556,
	84, 1556,
	85, 1556,
	86, 1556,
	87, 1556,
	88, 1556,
	89, 1556,
	90, 1556,
	91, 1556,
	94, 1556,
	95, 1556,
	96, 1556,
	97, 1556,
	98, 1556,
	100, 1556,
	102, 1556,
	103, 1556,
	104, 1556,
	105, 1556,
	106, 1556,
	107, 1556,
	108, 1556,
	110, 1556,
	111, 1556,
	112, 1556,
	114, 1556,
	115, 1556,
	116, 1556,
	124, 1556,
	125, 1556,
	126, 1556,
	127, 1556,
	128, 1556,
	130, 1556,
	131, 1556,
	132, 1556,
	133, 1556,
	135, 1556,
	136, 1556,
	137, 1556,
	138, 1556,
	140, 1556,
	141, 1556,
	142, 1556,
	144, 1556,
	145, 1556,
	146, 1556,
	149, 1556,
	150, 1556,
	151, 1556,
	153, 1556,
	154, 1556,
	155, 1556,
	157, 1556,
	158, 1556,
	159, 1556,
	161, 1556,
	162, 1556,
	163, 1556,
	164, 1556,
	165, 1556,
	166, 1556,
	167, 1556,
	168, 1556,
	169, 1556,
	170, 1556,
	171, 1556,
	172, 1556,
	173, 1556,
	174, 1556,
	175, 1556,
	176, 1556,
	177, 1556,
	178, 1556,
	180, 1556,
	186, 1556,
	187, 1556,
	188, 1556,
	189, 1556,
	193, 1556,
	195, 1556,
	196, 1556,
	197, 1556,
	199, 1556,
	200, 1556,
	203, 1556,
	204, 1556,
	205, 1556,
	206, 1556,
	207, 1556,
	208, 1556,
	209, 1556,
	210, 1556,
	211, 1556,
	212, 1556,
	213, 1556,
	214, 1556,
	215, 1556,
	216, 1556,
	218, 1556,
	219, 1556,
	221, 1556,
	222, 1556,
	224, 1556,
	225, 1556,
	226, 1556,
	227, 1556,
	228, 1556,
	229, 1556,
	230, 1556,
	231, 1556,
	232, 1556,
	233, 1556,
	234, 1556,
	236, 1556,
	237, 1556,
	238, 1556,
	240, 1556,
	241, 1556,
	242, 1556,
	243, 1556,
	244, 1556,
	248, 1556,
	249, 1556,
	250, 1556,
	251, 1556,
	254, 1556,
	255, 1556,
	256, 1556,
	257, 1556,
	258, 1556,
	259, 1556,
	261, 1556,
	263, 1556,
	264, 1556,
	265, 1556,
	267, 1556,
	269, 1556,
	270, 1556,
	271, 1556,
	273, 1556,
	277, 1556,
	278, 1556,
	279, 1556,
	280, 1556,
	281, 1556,
	282, 1556,
	284, 1556,
	285, 1556,
	286, 1556,
	288, 1556,
	289, 1556,
	290, 1556,
	292, 1556,
	293, 1556,
	296, 1556,
	297, 1556,
	298, 1556,
	299, 1556,
	300, 1556,
	301, 1556,
	302, 1556,
	305, 1556,
	306, 1556,
	307, 1556,
	308, 1556,
	310, 1556,
	311, 1556,
	312, 1556,
	313, 1556,
	314, 1556,
	315, 1556,
	316, 1556,
	317, 1556,
	318, 1556,
	319, 1556,
	320, 1556,
	321, 1556,
	322, 1556,
	323, 1556,
	324, 1556,
	325, 1556,
	326, 1556,
	327, 1556,
	328, 1556,
	329, 1556,
	330, 1556,
	331, 1556,
	332, 1556,
	334, 1556,
	336, 1556,
	337, 1556,
	338, 1556,
	339, 1556,
	340, 1556,
	341, 1556,
	342, 1556,
	343, 1556,
	344, 1556,
	345, 1556,
	346, 1556,
	347, 1556,
	348, 1556,
	349, 1556,
	350, 1556,
	351, 1556,
	352, 1556,
	354, 1556,
	355, 1556,
	357, 1556,
	359, 1556,
	360, 1556,
	361, 1556,
	362, 1556,
	364, 1556,
	365, 1556,
	366, 1556,
	367, 1556,
	368, 1556,
	371, 1556,
	373, 1556,
	376, 1556,
	377, 1556,
	378, 1556,
	381, 1556,
	382, 1556,
	383, 1556,
	385, 1556,
	387, 1556,
	388, 1556,
	389, 1556,
	390, 1556,
	391, 1556,
	392, 1556,
	393, 1556,
	394, 1556,
	395, 1556,
	396, 1556,
	397, 1556,
	398, 1556,
	399, 1556,
	400, 1556,
	402, 1556,
	403, 1556,
	404, 1556,
	405, 1556,
	406, 1556,
	407, 1556,
	408, 1556,
	409, 1556,
	410, 1556,
	411, 1556,
	412, 1556,
	413, 1556,
	414, 1556,
	415, 1556,
	416, 1556,
	418, 1556,
	419, 1556,
	420, 1556,
	422, 1556,
	423, 1556,
	424, 1556,
	425, 1556,
	426, 1556,
	427, 1556,
	428, 1556,
	429, 1556,
	430, 1556,
	431, 1556,
	432, 1556,
	433, 1556,
	434, 1556,
	435, 1556,
	437, 1556,
	439, 1556,
	440, 1556,
	441, 1556,
	447, 1556,
	448, 1556,
	449, 1556,
	451, 1556,
	452, 1556,
	453, 1556,
	454, 1556,
	455, 1556,
	456, 1556,
	457, 1556,
	458, 1556,
	459, 1556,
	460, 1556,
	461, 1556,
	463, 1556,
	464, 1556,
	465, 1556,
	466, 1556,
	467, 1556,
	469, 1556,
	470, 1556,
	471, 1556,
	472, 1556,
	473, 1556,
	474, 1556,
	475, 1556,
	477, 1556,
	478, 1556,
	479, 1556,
	480, 1556,
	481, 1556,
	482, 1556,
	483, 1556,
	484, 1556,
	485, 1556,
	486, 1556,
	487, 1556,
	488, 1556,
	489, 1556,
	490, 1556,
	491, 1556,
	493, 1556,
	494, 1556,
	495, 1556,
	496, 1556,
	497, 1556,
	498, 1556,
	500, 1556,
	501, 1556,
	502, 1556,
	503, 1556,
	504, 1556,
	505, 1556,
	506, 1556,
	508, 1556,
	509, 1556,
	510, 1556,
	511, 1556,
	512, 1556,
	513, 1556,
	514, 1556,
	515, 1556,
	517, 1556,
	519, 1556,
	520, 1556,
	521, 1556,
	522, 1556,
	523, 1556,
	524, 1556,
	525, 1556,
	526, 1556,
	527, 1556,
	528, 1556,
	529, 1556,
	530, 1556,
	531, 1556,
	532, 1556,
	533, 1556,
	534, 1556,
	535, 1556,
	536, 1556,
	537, 1556,
	538, 1556,
	539, 1556,
	541, 1556,
	542, 1556,
	544, 1556,
	545, 1556,
	547, 1556,
	548, 1556,
	549, 1556,
	550, 1556,
	551, 1556,
	552, 1556,
	554, 1556,
	555, 1556,
	557, 1556,
	558, 1556,
	559, 1556,
	560, 1556,
	561, 1556,
	563, 1556,
	565, 1556,
	566, 1556,
	567, 1556,
	568, 1556,
	569, 1556,
	570, 1556,
	571, 1556,
	572, 1556,
	574, 1556,
	575, 1556,
	576, 1556,
	577, 1556,
	578, 1556,
	579, 1556,
	580, 1556,
	583, 1556,
	584, 1556,
	585, 1556,
	586, 1556,
	587, 1556,
	588, 1556,
	589, 1556,
	590, 1556,
	592, 1556,
	595, 1556,
	596, 1556,
	597, 1556,
	598, 1556,
	599, 1556,
	600, 1556,
	602, 1556,
	603, 1556,
	604, 1556,
	605, 1556,
	606, 1556,
	607, 1556,
	608, 1556,
	609, 1556,
	610, 1556,
	615, 1556,
	616, 1556,
	617, 1556,
	618, 1556,
	619, 1556,
	620, 1556,
	-2, 0,
	-1, 852,
	201, 2649,
	562, 2649,
	635, 2649,
	655, 2649,
	-2, 0,
	-1, 853,
	201, 2635,
	562, 2635,
	635, 2635,
	655, 2635,
	-2, 0,
	-1, 855,
	201, 2929,
	562, 2929,
	635, 2929,
	655, 2929,
	-2, 0,
	-1, 858,
	201, 2772,
	562, 2772,
	635, 2772,
	655, 2772,
	-2, 0,
	-1, 859,
	201, 2976,
	562, 2976,
	635, 2976,
	655, 2976,
	-2, 0,
	-1, 867,
	201, 2800,
	562, 2800,
	635, 2800,
	655, 2800,
	-2, 853,
	-1, 883,
	8, 986,
	29, 986,
	643, 986,
	644, 986,
	-2, 991,
	-1, 887,
	1, 2706,
	656, 2706,
	659, 2706,
	-2, 991,
	-1, 888,
	1, 2759,
	656, 2759,
	659, 2759,
	-2, 991,
	-1, 891,
	1, 2805,
	656, 2805,
	659, 2805,
	-2, 984,
	-1, 892,
	1, 2862,
	656, 2862,
	659, 2862,
	-2, 985,
	-1, 893,
	1, 2711,
	656, 2711,
	659, 2711,
	-2, 988,
	-1, 894,
	1, 2621,
	656, 2621,
	659, 2621,
	-2, 989,
	-1, 934,
	655, 2578,
	658, 2578,
	-2, 1217,
	-1, 935,
	655, 2580,
	658, 2580,
	-2, 1218,
	-1, 936,
	655, 2579,
	658, 2579,
	-2, 1219,
	-1, 937,
	658, 2502,
	-2, 1220,
	-1, 963,
	194, 297,
	-2, 0,
	-1, 985,
	46, 2551,
	-2, 0,
	-1, 986,
	602, 1534,
	-2, 1302,
	-1, 1003,
	4, 1980,
	21, 1980,
	22, 1980,
	23, 1980,
	24, 1980,
	25, 1980,
	26, 1980,
	27, 1980,
	28, 1980,
	30, 1980,
	31, 1980,
	37, 1980,
	41, 1980,
	43, 1980,
	44, 1980,
	45, 1980,
	47, 1980,
	48, 1980,
	49, 1980,
	50, 1980,
	51, 1980,
	52, 1980,
	53, 1980,
	54, 1980,
	55, 1980,
	57, 1980,
	58, 1980,
	59, 1980,
	60, 1980,
	62, 1980,
	63, 1980,
	64, 1980,
	65, 1980,
	66, 1980,
	67, 1980,
	68, 1980,
	69, 1980,
	73, 1980,
	74, 1980,
	75, 1980,
	76, 1980,
	78, 1980,
	79, 1980,
	80, 1980,
	84, 1980,
	85, 1980,
	86, 1980,
	87, 1980,
	88, 1980,
	89, 1980,
	90, 1980,
	91, 1980,
	94, 1980,
	95, 1980,
	96, 1980,
	97, 1980,
	98, 1980,
	100, 1980,
	102, 1980,
	103, 1980,
	104, 1980,
	105, 1980,
	106, 1980,
	107, 1980,
	108, 1980,
	110, 1980,
	111, 1980,
	112, 1980,
	114, 1980,
	115, 1980,
	116, 1980,
	124, 1980,
	125, 1980,
	126, 1980,
	127, 1980,
	128, 1980,
	130, 1980,
	131, 1980,
	132, 1980,
	133, 1980,
	135, 1980,
	136, 1980,
	137, 1980,
	138, 1980,
	140, 1980,
	141, 1980,
	142, 1980,
	144, 1980,
	145, 1980,
	146, 1980,
	149, 1980,
	150, 1980,
	151, 1980,
	153, 1980,
	154, 1980,
	155, 1980,
	157, 1980,
	158, 1980,
	159, 1980,
	161, 1980,
	162, 1980,
	163, 1980,
	164, 1980,
	165, 1980,
	166, 1980,
	167, 1980,
	168, 1980,
	169, 1980,
	170, 1980,
	171, 1980,
	172, 1980,
	173, 1980,
	174, 1980,
	175, 1980,
	176, 1980,
	177, 1980,
	178, 1980,
	180, 1980,
	186, 1980,
	187, 1980,
	188, 1980,
	189, 1980,
	193, 1980,
	195, 1980,
	196, 1980,
	197, 1980,
	199, 1980,
	200, 1980,
	203, 1980,
	204, 1980,
	205, 1980,
	206, 1980,
	207, 1980,
	208, 1980,
	209, 1980,
	210, 1980,
	211, 1980,
	212, 1980,
	213, 1980,
	214, 1980,
	215, 1980,
	216, 1980,
	218, 1980,
	219, 1980,
	221, 1980,
	222, 1980,
	224, 1980,
	225, 1980,
	226, 1980,
	227, 1980,
	228, 1980,
	229, 1980,
	230, 1980,
	231, 1980,
	232, 1980,
	233, 1980,
	234, 1980,
	236, 1980,
	237, 1980,
	238, 1980,
	240, 1980,
	241, 1980,
	242, 1980,
	243, 1980,
	244, 1980,
	248, 1980,
	249, 1980,
	250, 1980,
	251, 1980,
	254, 1980,
	255, 1980,
	256, 1980,
	257, 1980,
	258, 1980,
	259, 1980,
	261, 1980,
	263, 1980,
	264, 1980,
	265, 1980,
	267, 1980,
	269, 1980,
	270, 1980,
	271, 1980,
	273, 1980,
	277, 1980,
	278, 1980,
	279, 1980,
	280, 1980,
	281, 1980,
	282, 1980,
	284, 1980,
	285, 1980,
	286, 1980,
	288, 1980,
	289, 1980,
	290, 1980,
	292, 1980,
	293, 1980,
	296, 1980,
	297, 1980,
	298, 1980,
	299, 1980,
	300, 1980,
	301, 1980,
	302, 1980,
	305, 1980,
	306, 1980,
	307, 1980,
	308, 1980,
	310, 1980,
	311, 1980,
	312, 1980,
	313, 1980,
	314, 1980,
	315, 1980,
	316, 1980,
	317, 1980,
	318, 1980,
	319, 1980,
	320, 1980,
	321, 1980,
	322, 1980,
	323, 1980,
	324, 1980,
	325, 1980,
	326, 1980,
	327, 1980,
	328, 1980,
	329, 1980,
	330, 1980,
	331, 1980,
	332, 1980,
	334, 1980,
	336, 1980,
	337, 1980,
	338, 1980,
	339, 1980,
	340, 1980,
	341, 1980,
	342, 1980,
	343, 1980,
	344, 1980,
	345, 1980,
	346, 1980,
	347, 1980,
	348, 1980,
	349, 1980,
	350, 1980,
	351, 1980,
	352, 1980,
	354, 1980,
	355, 1980,
	357, 1980,
	359, 1980,
	360, 1980,
	361, 1980,
	362, 1980,
	364, 1980,
	365, 1980,
	366, 1980,
	367, 1980,
	368, 1980,
	371, 1980,
	373, 1980,
	376, 1980,
	377, 1980,
	378, 1980,
	381, 1980,
	382, 1980,
	383, 1980,
	385, 1980,
	387, 1980,
	388, 1980,
	389, 1980,
	390, 1980,
	391, 1980,
	392, 1980,
	393, 1980,
	394, 1980,
	395, 1980,
	396, 1980,
	397, 1980,
	398, 1980,
	399, 1980,
	400, 1980,
	402, 1980,
	403, 1980,
	404, 1980,
	405, 1980,
	406, 1980,
	407, 1980,
	408, 1980,
	409, 1980,
	410, 1980,
	411, 1980,
	412, 1980,
	413, 1980,
	414, 1980,
	415, 1980,
	416, 1980,
	418, 1980,
	419, 1980,
	420, 1980,
	422, 1980,
	423, 1980,
	424, 1980,
	425, 1980,
	426, 1980,
	427, 1980,
	428, 1980,
	429, 1980,
	430, 1980,
	431, 1980,
	432, 1980,
	433, 1980,
	434, 1980,
	435, 1980,
	437, 1980,
	439, 1980,
	440, 1980,
	441, 1980,
	447, 1980,
	448, 1980,
	449, 1980,
	451, 1980,
	452, 1980,
	453, 1980,
	454, 1980,
	455, 1980,
	456, 1980,
	457, 1980,
	458, 1980,
	459, 1980,
	460, 1980,
	461, 1980,
	463, 1980,
	464, 1980,
	465, 1980,
	466, 1980,
	467, 1980,
	469, 1980,
	470, 1980,
	471, 1980,
	472, 1980,
	473, 1980,
	474, 1980,
	475, 1980,
	477, 1980,
	478, 1980,
	479, 1980,
	480, 1980,
	481, 1980,
	482, 1980,
	483, 1980,
	484, 1980,
	485, 1980,
	486, 1980,
	487, 1980,
	488, 1980,
	489, 1980,
	490, 1980,
	491, 1980,
	493, 1980,
	494, 1980,
	495, 1980,
	496, 1980,
	497, 1980,
	498, 1980,
	500, 1980,
	501, 1980,
	502, 1980,
	503, 1980,
	504, 1980,
	505, 1980,
	506, 1980,
	508, 1980,
	509, 1980,
	510, 1980,
	511, 1980,
	512, 1980,
	513, 1980,
	514, 1980,
	515, 1980,
	517, 1980,
	519, 1980,
	520, 1980,
	521, 1980,
	522, 1980,
	523, 1980,
	524, 1980,
	525, 1980,
	526, 1980,
	527, 1980,
	528, 1980,
	529, 1980,
	530, 1980,
	531, 1980,
	532, 1980,
	533, 1980,
	534, 1980,
	535, 1980,
	536, 1980,
	537, 1980,
	538, 1980,
	539, 1980,
	541, 1980,
	542, 1980,
	544, 1980,
	545, 1980,
	547, 1980,
	548, 1980,
	549, 1980,
	550, 1980,
	551, 1980,
	552, 1980,
	554, 1980,
	555, 1980,
	557, 1980,
	558, 1980,
	559, 1980,
	560, 1980,
	561, 1980,
	563, 1980,
	565, 1980,
	566, 1980,
	567, 1980,
	568, 1980,
	569, 1980,
	570, 1980,
	571, 1980,
	572, 1980,
	574, 1980,
	575, 1980,
	576, 1980,
	577, 1980,
	578, 1980,
	579, 1980,
	580, 1980,
	583, 1980,
	584, 1980,
	585, 1980,
	586, 1980,
	587, 1980,
	588, 1980,
	589, 1980,
	590, 1980,
	592, 1980,
	595, 1980,
	596, 1980,
	597, 1980,
	598, 1980,
	599, 1980,
	600, 1980,
	602, 1980,
	603, 1980,
	604, 1980,
	605, 1980,
	606, 1980,
	607, 1980,
	608, 1980,
	609, 1980,
	610, 1980,
	615, 1980,
	616, 1980,
	617, 1980,
	618, 1980,
	619, 1980,
	620, 1980,
	-2, 0,
	-1, 1014,
	281, 526,
	-2, 0,
	-1, 1092,
	201, 1030,
	-2, 0,
	-1, 1093,
	424, 1083,
	498, 1083,
	545, 1083,
	567, 1083,
	-2, 0,
	-1, 1094,
	424, 1082,
	498, 1082,
	545, 1082,
	567, 1082,
	-2, 1004,
	-1, 1098,
	1, 1135,
	652, 1135,
	654, 1135,
	656, 1135,
	659, 1135,
	-2, 0,
	-1, 1100,
	1, 1057,
	652, 1057,
	654, 1057,
	656, 1057,
	659, 1057,
	-2, 0,
	-1, 1101,
	1, 1061,
	652, 1061,
	654, 1061,
	656, 1061,
	659, 1061,
	-2, 0,
	-1, 1102,
	1, 1208,
	194, 1208,
	652, 1208,
	654, 1208,
	656, 1208,
	659, 1208,
	-2, 0,
	-1, 1110,
	1, 1088,
	652, 1088,
	654, 1088,
	656, 1088,
	659, 1088,
	-2, 0,
	-1, 1117,
	1, 1135,
	652, 1135,
	654, 1135,
	656, 1135,
	659, 1135,
	-2, 0,
	-1, 1118,
	1, 1137,
	652, 1137,
	654, 1137,
	656, 1137,
	659, 1137,
	-2, 0,
	-1, 1119,
	1, 1140,
	652, 1140,
	654, 1140,
	656, 1140,
	659, 1140,
	-2, 0,
	-1, 1127,
	1, 1171,
	652, 1171,
	654, 1171,
	656, 1171,
	659, 1171,
	-2, 0,
	-1, 1128,
	1, 1173,
	652, 1173,
	654, 1173,
	656, 1173,
	659, 1173,
	-2, 0,
	-1, 1133,
	1, 1201,
	652, 1201,
	654, 1201,
	656, 1201,
	659, 1201,
	-2, 0,
	-1, 1184,
	181, 1850,
	194, 1850,
	295, 1850,
	369, 1850,
	-2, 1786,
	-1, 1200,
	181, 1849,
	194, 1849,
	295, 1849,
	369, 1849,
	-2, 1783,
	-1, 1229,
	655, 2577,
	-2, 861,
	-1, 1258,
	5, 2569,
	653, 2567,
	-2, 2558,
	-1, 1266,
	5, 2590,
	653, 2587,
	-2, 2578,
	-1, 1267,
	5, 2591,
	653, 2588,
	-2, 2579,
	-1, 1275,
	655, 2575,
	-2, 2557,
	-1, 1276,
	653, 3086,
	-2, 2576,
	-1, 1299,
	5, 2592,
	38, 2592,
	134, 2592,
	635, 2592,
	651, 2592,
	654, 2592,
	655, 2592,
	658, 2592,
	-2, 3085,
	-1, 1300,
	5, 2055,
	-2, 3055,
	-1, 1301,
	5, 2056,
	-2, 3056,
	-1, 1302,
	5, 2057,
	-2, 3071,
	-1, 1303,
	5, 2058,
	-2, 3033,
	-1, 1304,
	5, 2059,
	-2, 3068,
	-1, 1305,
	5, 2067,
	-2, 3046,
	-1, 1306,
	5, 2054,
	-2, 3042,
	-1, 1307,
	5, 2054,
	-2, 3041,
	-1, 1308,
	5, 2054,
	-2, 3061,
	-1, 1309,
	5, 2065,
	-2, 3035,
	-1, 1310,
	5, 2070,
	-2, 3034,
	-1, 1311,
	5, 2072,
	-2, 3081,
	-1, 1314,
	5, 2094,
	-2, 3074,
	-1, 1315,
	5, 2086,
	-2, 3075,
	-1, 1316,
	5, 2094,
	-2, 3076,
	-1, 1317,
	5, 2090,
	-2, 3077,
	-1, 1318,
	5, 2040,
	-2, 3047,
	-1, 1319,
	5, 2041,
	-2, 3048,
	-1, 1320,
	5, 2042,
	-2, 3036,
	-1, 1348,
	5, 2077,
	-2, 3082,
	-1, 1349,
	5, 2078,
	-2, 3072,
	-1, 1350,
	5, 2079,
	603, 2079,
	-2, 3037,
	-1, 1351,
	5, 2080,
	603, 2080,
	-2, 3038,
	-1, 1389,
	653, 2587,
	-2, 2578,
	-1, 1390,
	653, 2588,
	-2, 2579,
	-1, 1492,
	201, 2976,
	562, 2976,
	635, 2976,
	655, 2976,
	-2, 0,
	-1, 1497,
	1, 837,
	656, 837,
	659, 837,
	-2, 1692,
	-1, 1544,
	1, 1687,
	656, 1687,
	659, 1687,
	-2, 1692,
	-1, 1646,
	389, 2552,
	451, 2552,
	500, 2552,
	645, 2552,
	-2, 2540,
	-1, 1652,
	201, 153,
	288, 153,
	354, 153,
	610, 153,
	-2, 2971,
	-1, 1653,
	201, 154,
	288, 154,
	354, 154,
	610, 154,
	-2, 2696,
	-1, 1654,
	201, 155,
	288, 155,
	354, 155,
	610, 155,
	-2, 2885,
	-1, 1660,
	657, 2552,
	-2, 2554,
	-1, 1684,
	1, 1531,
	456, 1485,
	500, 1485,
	627, 1485,
	632, 1485,
	652, 1531,
	654, 1531,
	656, 1531,
	659, 1531,
	-2, 1835,
	-1, 1690,
	217, 1631,
	239, 1631,
	467, 1631,
	-2, 0,
	-1, 1758,
	46, 2550,
	-2, 1264,
	-1, 1765,
	1, 1531,
	652, 1531,
	654, 1531,
	656, 1531,
	659, 1531,
	-2, 1835,
	-1, 1768,
	433, 1301,
	602, 1301,
	-2, 447,
	-1, 1774,
	4, 1556,
	21, 1556,
	22, 1556,
	23, 1556,
	24, 1556,
	25, 1556,
	26, 1556,
	27, 1556,
	28, 1556,
	30, 1556,
	31, 1556,
	37, 1556,
	41, 1556,
	43, 1556,
	44, 1556,
	45, 1556,
	47, 1556,
	48, 1556,
	49, 1556,
	50, 1556,
	51, 1556,
	52, 1556,
	53, 1556,
	54, 1556,
	55, 1556,
	57, 1556,
	58, 1556,
	59, 1556,
	60, 1556,
	62, 1556,
	63, 1556,
	64, 1556,
	65, 1556,
	66, 1556,
	67, 1556,
	68, 1556,
	69, 1556,
	73, 1556,
	74, 1556,
	75, 1556,
	76, 1556,
	78, 1556,
	79, 1556,
	80, 1556,
	84, 1556,
	85, 1556,
	86, 1556,
	87, 1556,
	88, 1556,
	89, 1556,
	90, 1556,
	91, 1556,
	94, 1556,
	95, 1556,
	96, 1556,
	97, 1556,
	98, 1556,
	100, 1556,
	102, 1556,
	103, 1556,
	104, 1556,
	105, 1556,
	106, 1556,
	107, 1556,
	108, 1556,
	110, 1556,
	111, 1556,
	112, 1556,
	114, 1556,
	115, 1556,
	116, 1556,
	124, 1556,
	125, 1556,
	126, 1556,
	127, 1556,
	128, 1556,
	130, 1556,
	131, 1556,
	132, 1556,
	133, 1556,
	135, 1556,
	136, 1556,
	137, 1556,
	138, 1556,
	140, 1556,
	141, 1556,
	142, 1556,
	144, 1556,
	145, 1556,
	146, 1556,
	149, 1556,
	150, 1556,
	151, 1556,
	153, 1556,
	154, 1556,
	155, 1556,
	157, 1556,
	158, 1556,
	159, 1556,
	161, 1556,
	162, 1556,
	163, 1556,
	164, 1556,
	165, 1556,
	166, 1556,
	167, 1556,
	168, 1556,
	169, 1556,
	170, 1556,
	171, 1556,
	172, 1556,
	173, 1556,
	174, 1556,
	175, 1556,
	176, 1556,
	177, 1556,
	178, 1556,
	186, 1556,
	187, 1556,
	188, 1556,
	189, 1556,
	193, 1556,
	195, 1556,
	196, 1556,
	197, 1556,
	199, 1556,
	200, 1556,
	203, 1556,
	204, 1556,
	205, 1556,
	206, 1556,
	207, 1556,
	208, 1556,
	209, 1556,
	210, 1556,
	211, 1556,
	212, 1556,
	213, 1556,
	214, 1556,
	215, 1556,
	216, 1556,
	218, 1556,
	219, 1556,
	221, 1556,
	222, 1556,
	224, 1556,
	225, 1556,
	226, 1556,
	227, 1556,
	228, 1556,
	229, 1556,
	230, 1556,
	231, 1556,
	232, 1556,
	233, 1556,
	234, 1556,
	236, 1556,
	237, 1556,
	238, 1556,
	240, 1556,
	241, 1556,
	242, 1556,
	243, 1556,
	244, 1556,
	249, 1556,
	250, 1556,
	251, 1556,
	254, 1556,
	255, 1556,
	256, 1556,
	257, 1556,
	258, 1556,
	259, 1556,
	261, 1556,
	263, 1556,
	264, 1556,
	265, 1556,
	267, 1556,
	269, 1556,
	270, 1556,
	271, 1556,
	273, 1556,
	277, 1556,
	278, 1556,
	279, 1556,
	280, 1556,
	281, 1556,
	282, 1556,
	284, 1556,
	285, 1556,
	286, 1556,
	288, 1556,
	289, 1556,
	290, 1556,
	292, 1556,
	293, 1556,
	296, 1556,
	297, 1556,
	298, 1556,
	299, 1556,
	300, 1556,
	301, 1556,
	302, 1556,
	305, 1556,
	306, 1556,
	307, 1556,
	308, 1556,
	310, 1556,
	311, 1556,
	312, 1556,
	313, 1556,
	314, 1556,
	315, 1556,
	316, 1556,
	317, 1556,
	318, 1556,
	319, 1556,
	320, 1556,
	321, 1556,
	322, 1556,
	323, 1556,
	324, 1556,
	325, 1556,
	326, 1556,
	327, 1556,
	328, 1556,
	329, 1556,
	330, 1556,
	331, 1556,
	332, 1556,
	334, 1556,
	336, 1556,
	337, 1556,
	338, 1556,
	339, 1556,
	340, 1556,
	341, 1556,
	342, 1556,
	343, 1556,
	344, 1556,
	345, 1556,
	346, 1556,
	347, 1556,
	348, 1556,
	349, 1556,
	350, 1556,
	351, 1556,
	352, 1556,
	354, 1556,
	355, 1556,
	359, 1556,
	360, 1556,
	361, 1556,
	362, 1556,
	364, 1556,
	365, 1556,
	366, 1556,
	367, 1556,
	368, 1556,
	371, 1556,
	373, 1556,
	374, 1556,
	376, 1556,
	377, 1556,
	378, 1556,
	381, 1556,
	382, 1556,
	383, 1556,
	385, 1556,
	387, 1556,
	388, 1556,
	389, 1556,
	390, 1556,
	391, 1556,
	392, 1556,
	393, 1556,
	394, 1556,
	395, 1556,
	396, 1556,
	397, 1556,
	398, 1556,
	399, 1556,
	400, 1556,
	402, 1556,
	403, 1556,
	404, 1556,
	405, 1556,
	406, 1556,
	407, 1556,
	408, 1556,
	409, 1556,
	410, 1556,
	411, 1556,
	412, 1556,
	413, 1556,
	414, 1556,
	415, 1556,
	416, 1556,
	418, 1556,
	419, 1556,
	420, 1556,
	422, 1556,
	423, 1556,
	424, 1556,
	425, 1556,
	426, 1556,
	427, 1556,
	428, 1556,
	429, 1556,
	430, 1556,
	431, 1556,
	432, 1556,
	433, 1556,
	434, 1556,
	435, 1556,
	437, 1556,
	439, 1556,
	440, 1556,
	441, 1556,
	447, 1556,
	448, 1556,
	449, 1556,
	451, 1556,
	452, 1556,
	453, 1556,
	454, 1556,
	455, 1556,
	456, 1556,
	457, 1556,
	458, 1556,
	459, 1556,
	460, 1556,
	461, 1556,
	463, 1556,
	464, 1556,
	465, 1556,
	466, 1556,
	467, 1556,
	469, 1556,
	470, 1556,
	471, 1556,
	472, 1556,
	473, 1556,
	474, 1556,
	475, 1556,
	477, 1556,
	478, 1556,
	479, 1556,
	480, 1556,
	481, 1556,
	482, 1556,
	483, 1556,
	484, 1556,
	485, 1556,
	486, 1556,
	487, 1556,
	488, 1556,
	489, 1556,
	490, 1556,
	491, 1556,
	493, 1556,
	494, 1556,
	495, 1556,
	496, 1556,
	497, 1556,
	498, 1556,
	500, 1556,
	501, 1556,
	502, 1556,
	503, 1556,
	504, 1556,
	505, 1556,
	506, 1556,
	508, 1556,
	509, 1556,
	510, 1556,
	511, 1556,
	512, 1556,
	513, 1556,
	514, 1556,
	515, 1556,
	517, 1556,
	519, 1556,
	520, 1556,
	521, 1556,
	522, 1556,
	523, 1556,
	524, 1556,
	525, 1556,
	526, 1556,
	527, 1556,
	528, 1556,
	529, 1556,
	530, 1556,
	531, 1556,
	532, 1556,
	533, 1556,
	534, 1556,
	535, 1556,
	536, 1556,
	537, 1556,
	538, 1556,
	539, 1556,
	541, 1556,
	542, 1556,
	544, 1556,
	545, 1556,
	547, 1556,
	548, 1556,
	549, 1556,
	550, 1556,
	551, 1556,
	552, 1556,
	554, 1556,
	555, 1556,
	557, 1556,
	558, 1556,
	559, 1556,
	560, 1556,
	561, 1556,
	563, 1556,
	565, 1556,
	566, 1556,
	567, 1556,
	568, 1556,
	569, 1556,
	570, 1556,
	571, 1556,
	572, 1556,
	574, 1556,
	575, 1556,
	576, 1556,
	577, 1556,
	578, 1556,
	579, 1556,
	580, 1556,
	583, 1556,
	584, 1556,
	585, 1556,
	586, 1556,
	587, 1556,
	588, 1556,
	589, 1556,
	590, 1556,
	592, 1556,
	595, 1556,
	596, 1556,
	597, 1556,
	598, 1556,
	599, 1556,
	600, 1556,
	602, 1556,
	603, 1556,
	604, 1556,
	605, 1556,
	606, 1556,
	607, 1556,
	608, 1556,
	609, 1556,
	610, 1556,
	615, 1556,
	616, 1556,
	617, 1556,
	618, 1556,
	619, 1556,
	620, 1556,
	-2, 0,
	-1, 1797,
	1, 666,
	652, 666,
	654, 666,
	656, 666,
	659, 666,
	-2, 1806,
	-1, 1800,
	4, 3080,
	11, 3080,
	12, 3080,
	14, 3080,
	15, 3080,
	16, 3080,
	17, 3080,
	18, 3080,
	19, 3080,
	21, 3080,
	22, 3080,
	23, 3080,
	24, 3080,
	25, 3080,
	26, 3080,
	27, 3080,
	28, 3080,
	30, 3080,
	31, 3080,
	34, 3080,
	35, 3080,
	37, 3080,
	39, 3080,
	41, 3080,
	43, 3080,
	44, 3080,
	45, 3080,
	47, 3080,
	48, 3080,
	49, 3080,
	50, 3080,
	51, 3080,
	52, 3080,
	53, 3080,
	54, 3080,
	55, 3080,
	57, 3080,
	58, 3080,
	59, 3080,
	60, 3080,
	62, 3080,
	63, 3080,
	64, 3080,
	65, 3080,
	66, 3080,
	67, 3080,
	68, 3080,
	69, 3080,
	72, 3080,
	73, 3080,
	74, 3080,
	75, 3080,
	76, 3080,
	78, 3080,
	79, 3080,
	80, 3080,
	81, 3080,
	84, 3080,
	85, 3080,
	86, 3080,
	87, 3080,
	88, 3080,
	89, 3080,
	90, 3080,
	91, 3080,
	92, 3080,
	94, 3080,
	95, 3080,
	96, 3080,
	97, 3080,
	98, 3080,
	100, 3080,
	101, 3080,
	102, 3080,
	103, 3080,
	104, 3080,
	105, 3080,
	106, 3080,
	107, 3080,
	108, 3080,
	110, 3080,
	111, 3080,
	112, 3080,
	113, 3080,
	114, 3080,
	115, 3080,
	116, 3080,
	124, 3080,
	125, 3080,
	126, 3080,
	127, 3080,
	128, 3080,
	130, 3080,
	131, 3080,
	132, 3080,
	133, 3080,
	135, 3080,
	136, 3080,
	137, 3080,
	138, 3080,
	140, 3080,
	141, 3080,
	142, 3080,
	144, 3080,
	145, 3080,
	146, 3080,
	149, 3080,
	150, 3080,
	151, 3080,
	153, 3080,
	154, 3080,
	155, 3080,
	157, 3080,
	158, 3080,
	159, 3080,
	161, 3080,
	162, 3080,
	163, 3080,
	164, 3080,
	165, 3080,
	166, 3080,
	167, 3080,
	168, 3080,
	169, 3080,
	170, 3080,
	171, 3080,
	172, 3080,
	173, 3080,
	174, 3080,
	175, 3080,
	176, 3080,
	177, 3080,
	178, 3080,
	182, 3080,
	183, 3080,
	184, 3080,
	185, 3080,
	186, 3080,
	187, 3080,
	188, 3080,
	189, 3080,
	192, 3080,
	193, 3080,
	195, 3080,
	196, 3080,
	197, 3080,
	199, 3080,
	200, 3080,
	202, 3080,
	203, 3080,
	204, 3080,
	205, 3080,
	206, 3080,
	207, 3080,
	208, 3080,
	209, 3080,
	210, 3080,
	211, 3080,
	212, 3080,
	213, 3080,
	214, 3080,
	215, 3080,
	216, 3080,
	218, 3080,
	219, 3080,
	221, 3080,
	222, 3080,
	224, 3080,
	225, 3080,
	226, 3080,
	227, 3080,
	228, 3080,
	229, 3080,
	230, 3080,
	231, 3080,
	232, 3080,
	233, 3080,
	234, 3080,
	235, 3080,
	236, 3080,
	237, 3080,
	238, 3080,
	239, 3080,
	240, 3080,
	241, 3080,
	242, 3080,
	243, 3080,
	244, 3080,
	246, 3080,
	247, 3080,
	249, 3080,
	250, 3080,
	251, 3080,
	253, 3080,
	254, 3080,
	255, 3080,
	256, 3080,
	257, 3080,
	258, 3080,
	259, 3080,
	261, 3080,
	263, 3080,
	264, 3080,
	265, 3080,
	266, 3080,
	267, 3080,
	268, 3080,
	269, 3080,
	270, 3080,
	271, 3080,
	272, 3080,
	273, 3080,
	275, 3080,
	276, 3080,
	277, 3080,
	278, 3080,
	279, 3080,
	280, 3080,
	281, 3080,
	282, 3080,
	284, 3080,
	285, 3080,
	286, 3080,
	288, 3080,
	289, 3080,
	290, 3080,
	291, 3080,
	292, 3080,
	293, 3080,
	294, 3080,
	296, 3080,
	297, 3080,
	298, 3080,
	299, 3080,
	300, 3080,
	301, 3080,
	302, 3080,
	305, 3080,
	306, 3080,
	307, 3080,
	308, 3080,
	309, 3080,
	310, 3080,
	311, 3080,
	312, 3080,
	313, 3080,
	314, 3080,
	315, 3080,
	316, 3080,
	317, 3080,
	318, 3080,
	319, 3080,
	320, 3080,
	321, 3080,
	322, 3080,
	323, 3080,
	324, 3080,
	325, 3080,
	326, 3080,
	327, 3080,
	328, 3080,
	329, 3080,
	330, 3080,
	331, 3080,
	332, 3080,
	334, 3080,
	335, 3080,
	336, 3080,
	337, 3080,
	338, 3080,
	339, 3080,
	340, 3080,
	341, 3080,
	342, 3080,
	343, 3080,
	344, 3080,
	345, 3080,
	346, 3080,
	347, 3080,
	348, 3080,
	349, 3080,
	350, 3080,
	351, 3080,
	352, 3080,
	354, 3080,
	355, 3080,
	358, 3080,
	359, 3080,
	360, 3080,
	361, 3080,
	362, 3080,
	364, 3080,
	365, 3080,
	366, 3080,
	367, 3080,
	368, 3080,
	371, 3080,
	373, 3080,
	376, 3080,
	377, 3080,
	378, 3080,
	379, 3080,
	381, 3080,
	382, 3080,
	383, 3080,
	385, 3080,
	387, 3080,
	388, 3080,
	389, 3080,
	390, 3080,
	391, 3080,
	392, 3080,
	393, 3080,
	394, 3080,
	395, 3080,
	396, 3080,
	397, 3080,
	398, 3080,
	399, 3080,
	400, 3080,
	402, 3080,
	403, 3080,
	404, 3080,
	405, 3080,
	406, 3080,
	407, 3080,
	408, 3080,
	409, 3080,
	410, 3080,
	411, 3080,
	412, 3080,
	413, 3080,
	414, 3080,
	415, 3080,
	416, 3080,
	418, 3080,
	419, 3080,
	420, 3080,
	422, 3080,
	423, 3080,
	424, 3080,
	425, 3080,
	426, 3080,
	427, 3080,
	428, 3080,
	429, 3080,
	430, 3080,
	431, 3080,
	432, 3080,
	433, 3080,
	434, 3080,
	435, 3080,
	437, 3080,
	439, 3080,
	440, 3080,
	441, 3080,
	447, 3080,
	448, 3080,
	449, 3080,
	450, 3080,
	451, 3080,
	452, 3080,
	453, 3080,
	454, 3080,
	455, 3080,
	456, 3080,
	457, 3080,
	458, 3080,
	459, 3080,
	460, 3080,
	461, 3080,
	463, 3080,
	464, 3080,
	465, 3080,
	466, 3080,
	467, 3080,
	468, 3080,
	469, 3080,
	470, 3080,
	471, 3080,
	472, 3080,
	473, 3080,
	474, 3080,
	475, 3080,
	476, 3080,
	477, 3080,
	478, 3080,
	479, 3080,
	480, 3080,
	481, 3080,
	482, 3080,
	483, 3080,
	484, 3080,
	485, 3080,
	486, 3080,
	487, 3080,
	488, 3080,
	489, 3080,
	490, 3080,
	491, 3080,
	493, 3080,
	494, 3080,
	495, 3080,
	496, 3080,
	497, 3080,
	498, 3080,
	500, 3080,
	501, 3080,
	502, 3080,
	503, 3080,
	504, 3080,
	505, 3080,
	506, 3080,
	507, 3080,
	508, 3080,
	509, 3080,
	510, 3080,
	511, 3080,
	512, 3080,
	513, 3080,
	514, 3080,
	515, 3080,
	517, 3080,
	519, 3080,
	520, 3080,
	521, 3080,
	522, 3080,
	523, 3080,
	524, 3080,
	525, 3080,
	526, 3080,
	527, 3080,
	528, 3080,
	529, 3080,
	530, 3080,
	531, 3080,
	532, 3080,
	533, 3080,
	534, 3080,
	535, 3080,
	536, 3080,
	537, 3080,
	538, 3080,
	539, 3080,
	541, 3080,
	542, 3080,
	543, 3080,
	544, 3080,
	545, 3080,
	547, 3080,
	548, 3080,
	549, 3080,
	550, 3080,
	551, 3080,
	552, 3080,
	554, 3080,
	555, 3080,
	557, 3080,
	558, 3080,
	559, 3080,
	560, 3080,
	561, 3080,
	563, 3080,
	565, 3080,
	566, 3080,
	567, 3080,
	568, 3080,
	569, 3080,
	570, 3080,
	571, 3080,
	572, 3080,
	574, 3080,
	575, 3080,
	576, 3080,
	577, 3080,
	578, 3080,
	579, 3080,
	580, 3080,
	583, 3080,
	584, 3080,
	585, 3080,
	586, 3080,
	587, 3080,
	588, 3080,
	589, 3080,
	590, 3080,
	592, 3080,
	595, 3080,
	596, 3080,
	597, 3080,
	598, 3080,
	599, 3080,
	600, 3080,
	602, 3080,
	603, 3080,
	604, 3080,
	605, 3080,
	606, 3080,
	607, 3080,
	608, 3080,
	609, 3080,
	610, 3080,
	615, 3080,
	616, 3080,
	617, 3080,
	618, 3080,
	619, 3080,
	620, 3080,
	621, 3080,
	623, 3080,
	633, 3080,
	634, 3080,
	635, 3080,
	636, 3080,
	637, 3080,
	638, 3080,
	640, 3080,
	641, 3080,
	642, 3080,
	643, 3080,
	644, 3080,
	645, 3080,
	646, 3080,
	647, 3080,
	648, 3080,
	651, 3080,
	654, 3080,
	655, 3080,
	657, 3080,
	658, 3080,
	-2, 0,
	-1, 1805,
	201, 2929,
	562, 2929,
	635, 2929,
	655, 2929,
	-2, 0,
	-1, 1853,
	201, 1031,
	-2, 2919,
	-1, 1854,
	201, 1032,
	-2, 2704,
	-1, 1855,
	201, 1033,
	-2, 2871,
	-1, 1860,
	424, 1083,
	498, 1083,
	545, 1083,
	567, 1083,
	-2, 0,
	-1, 1871,
	1, 1631,
	239, 1631,
	652, 1631,
	654, 1631,
	656, 1631,
	659, 1631,
	-2, 0,
	-1, 1888,
	1, 1078,
	652, 1078,
	654, 1078,
	656, 1078,
	659, 1078,
	-2, 0,
	-1, 1889,
	1, 1122,
	652, 1122,
	654, 1122,
	656, 1122,
	659, 1122,
	-2, 0,
	-1, 1890,
	1, 1130,
	652, 1130,
	654, 1130,
	656, 1130,
	659, 1130,
	-2, 0,
	-1, 1893,
	1, 1087,
	652, 1087,
	654, 1087,
	656, 1087,
	659, 1087,
	-2, 0,
	-1, 1895,
	1, 1093,
	652, 1093,
	654, 1093,
	656, 1093,
	659, 1093,
	-2, 0,
	-1, 1898,
	1, 1089,
	652, 1089,
	654, 1089,
	656, 1089,
	659, 1089,
	-2, 0,
	-1, 1903,
	1, 1103,
	652, 1103,
	654, 1103,
	656, 1103,
	659, 1103,
	-2, 0,
	-1, 1938,
	1, 2909,
	652, 2909,
	654, 2909,
	655, 2909,
	656, 2909,
	659, 2909,
	-2, 0,
	-1, 1942,
	1, 1182,
	652, 1182,
	654, 1182,
	656, 1182,
	659, 1182,
	-2, 0,
	-1, 1962,
	181, 1849,
	194, 1849,
	295, 1849,
	369, 1849,
	-2, 1787,
	-1, 2064,
	160, 1808,
	181, 1808,
	194, 1808,
	260, 1808,
	295, 1808,
	369, 1808,
	380, 1808,
	581, 1808,
	-2, 2259,
	-1, 2125,
	654, 2434,
	-2, 0,
	-1, 2161,
	160, 1808,
	181, 1808,
	194, 1808,
	260, 1808,
	295, 1808,
	369, 1808,
	380, 1808,
	581, 1808,
	-2, 1941,
	-1, 2200,
	655, 2578,
	658, 2578,
	-2, 1209,
	-1, 2201,
	655, 2580,
	658, 2580,
	-2, 1210,
	-1, 2202,
	655, 2579,
	658, 2579,
	-2, 1211,
	-1, 2203,
	658, 2502,
	-2, 1212,
	-1, 2225,
	653, 2082,
	-2, 2070,
	-1, 2257,
	201, 2926,
	655, 2926,
	658, 2926,
	-2, 0,
	-1, 2303,
	1, 839,
	656, 839,
	659, 839,
	-2, 1692,
	-1, 2480,
	239, 291,
	-2, 2586,
	-1, 2481,
	239, 292,
	-2, 355,
	-1, 2597,
	1, 1080,
	652, 1080,
	654, 1080,
	656, 1080,
	659, 1080,
	-2, 0,
	-1, 2598,
	1, 1124,
	652, 1124,
	654, 1124,
	656, 1124,
	659, 1124,
	-2, 0,
	-1, 2599,
	1, 1132,
	652, 1132,
	654, 1132,
	656, 1132,
	659, 1132,
	-2, 0,
	-1, 2600,
	1, 1184,
	652, 1184,
	654, 1184,
	656, 1184,
	659, 1184,
	-2, 0,
	-1, 2641,
	1, 1105,
	652, 1105,
	654, 1105,
	656, 1105,
	659, 1105,
	-2, 0,
	-1, 2664,
	1, 1167,
	652, 1167,
	654, 1167,
	656, 1167,
	659, 1167,
	-2, 0,
	-1, 2712,
	474, 1876,
	475, 1876,
	-2, 2115,
	-1, 2745,
	14, 0,
	15, 0,
	16, 0,
	633, 0,
	634, 0,
	635, 0,
	-2, 2135,
	-1, 2746,
	14, 0,
	15, 0,
	16, 0,
	633, 0,
	634, 0,
	635, 0,
	-2, 2136,
	-1, 2747,
	101, 0,
	275, 0,
	276, 0,
	637, 0,
	638, 0,
	-2, 2137,
	-1, 2748,
	101, 0,
	275, 0,
	276, 0,
	637, 0,
	638, 0,
	-2, 2138,
	-1, 2749,
	101, 0,
	275, 0,
	276, 0,
	637, 0,
	638, 0,
	-2, 2139,
	-1, 2750,
	101, 0,
	275, 0,
	276, 0,
	637, 0,
	638, 0,
	-2, 2140,
	-1, 2751,
	101, 0,
	275, 0,
	276, 0,
	637, 0,
	638, 0,
	-2, 2141,
	-1, 2752,
	14, 0,
	15, 0,
	16, 0,
	633, 0,
	634, 0,
	635, 0,
	-2, 2142,
	-1, 2764,
	14, 0,
	15, 0,
	16, 0,
	633, 0,
	634, 0,
	635, 0,
	-2, 2154,
	-1, 2765,
	14, 0,
	15, 0,
	16, 0,
	633, 0,
	634, 0,
	635, 0,
	-2, 2155,
	-1, 2766,
	14, 0,
	15, 0,
	16, 0,
	633, 0,
	634, 0,
	635, 0,
	-2, 2156,
	-1, 2770,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	235, 0,
	239, 0,
	294, 0,
	507, 0,
	621, 0,
	636, 0,
	-2, 2163,
	-1, 2776,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	235, 0,
	239, 0,
	294, 0,
	507, 0,
	621, 0,
	636, 0,
	-2, 2167,
	-1, 2778,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	235, 0,
	239, 0,
	294, 0,
	507, 0,
	621, 0,
	636, 0,
	-2, 2175,
	-1, 2779,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	235, 0,
	239, 0,
	294, 0,
	507, 0,
	621, 0,
	636, 0,
	-2, 2176,
	-1, 2780,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	235, 0,
	239, 0,
	294, 0,
	507, 0,
	621, 0,
	636, 0,
	-2, 2177,
	-1, 2781,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	235, 0,
	239, 0,
	294, 0,
	507, 0,
	621, 0,
	636, 0,
	-2, 2178,
	-1, 2955,
	5, 2590,
	201, 2445,
	653, 2587,
	-2, 2578,
	-1, 2956,
	201, 2446,
	-2, 3011,
	-1, 2957,
	201, 2447,
	-2, 2798,
	-1, 2958,
	201, 2448,
	-2, 2668,
	-1, 2959,
	201, 2449,
	-2, 2732,
	-1, 2960,
	201, 2450,
	-2, 2783,
	-1, 2961,
	201, 2451,
	-2, 2922,
	-1, 2962,
	201, 2452,
	-2, 2242,
	-1, 3054,
	1, 1942,
	2, 1942,
	113, 1942,
	160, 1942,
	181, 1942,
	194, 1942,
	202, 1942,
	220, 1942,
	223, 1942,
	253, 1942,
	260, 1942,
	272, 1942,
	291, 1942,
	295, 1942,
	335, 1942,
	369, 1942,
	374, 1942,
	380, 1942,
	462, 1942,
	468, 1942,
	581, 1942,
	593, 1942,
	612, 1942,
	613, 1942,
	614, 1942,
	624, 1942,
	652, 1942,
	654, 1942,
	656, 1942,
	658, 1942,
	659, 1942,
	-2, 1941,
	-1, 3067,
	653, 2559,
	-2, 2573,
	-1, 3069,
	1, 372,
	612, 372,
	659, 372,
	-2, 1835,
	-1, 3104,
	653, 2081,
	-2, 2071,
	-1, 3327,
	1, 1531,
	456, 1485,
	500, 1485,
	627, 1485,
	632, 1485,
	652, 1531,
	654, 1531,
	656, 1531,
	659, 1531,
	-2, 1835,
	-1, 3511,
	375, 1879,
	-2, 3069,
	-1, 3512,
	375, 1880,
	-2, 2906,
	-1, 3516,
	474, 2513,
	475, 2513,
	-2, 2240,
	-1, 3517,
	474, 2517,
	475, 2517,
	-2, 2241,
	-1, 3518,
	474, 2514,
	475, 2514,
	-2, 2240,
	-1, 3519,
	474, 2518,
	475, 2518,
	-2, 2241,
	-1, 3533,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	235, 0,
	239, 0,
	294, 0,
	507, 0,
	621, 0,
	636, 0,
	-2, 2165,
	-1, 3534,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	235, 0,
	239, 0,
	294, 0,
	507, 0,
	621, 0,
	636, 0,
	-2, 2169,
	-1, 3540,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	235, 0,
	239, 0,
	294, 0,
	507, 0,
	621, 0,
	636, 0,
	-2, 2171,
	-1, 3773,
	1, 834,
	652, 834,
	654, 834,
	656, 834,
	659, 834,
	-2, 1692,
	-1, 3960,
	38, 2590,
	134, 2590,
	635, 2590,
	651, 2590,
	654, 2590,
	655, 2590,
	658, 2590,
	-2, 2587,
	-1, 3961,
	38, 2591,
	134, 2591,
	635, 2591,
	651, 2591,
	654, 2591,
	655, 2591,
	658, 2591,
	-2, 2588,
	-1, 3992,
	46, 2550,
	-2, 1265,
	-1, 3997,
	1, 1531,
	652, 1531,
	654, 1531,
	656, 1531,
	659, 1531,
	-2, 1835,
	-1, 4107,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	235, 0,
	239, 0,
	294, 0,
	507, 0,
	621, 0,
	636, 0,
	-2, 2173,
	-1, 4114,
	266, 0,
	268, 0,
	358, 0,
	-2, 2192,
	-1, 4182,
	14, 0,
	15, 0,
	16, 0,
	633, 0,
	634, 0,
	635, 0,
	-2, 2221,
	-1, 4183,
	14, 0,
	15, 0,
	16, 0,
	633, 0,
	634, 0,
	635, 0,
	-2, 2222,
	-1, 4184,
	14, 0,
	15, 0,
	16, 0,
	633, 0,
	634, 0,
	635, 0,
	-2, 2223,
	-1, 4188,
	14, 0,
	15, 0,
	16, 0,
	633, 0,
	634, 0,
	635, 0,
	-2, 2227,
	-1, 4189,
	14, 0,
	15, 0,
	16, 0,
	633, 0,
	634, 0,
	635, 0,
	-2, 2228,
	-1, 4190,
	14, 0,
	15, 0,
	16, 0,
	633, 0,
	634, 0,
	635, 0,
	-2, 2229,
	-1, 4238,
	653, 2560,
	-2, 2574,
	-1, 4469,
	655, 3187,
	-2, 1761,
	-1, 4528,
	266, 0,
	268, 0,
	358, 0,
	-2, 2193,
	-1, 4531,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	235, 0,
	239, 0,
	294, 0,
	507, 0,
	621, 0,
	636, 0,
	-2, 2196,
	-1, 4532,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	235, 0,
	239, 0,
	294, 0,
	507, 0,
	621, 0,
	636, 0,
	-2, 2198,
	-1, 4657,
	655, 2575,
	-2, 1566,
	-1, 4827,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	235, 0,
	239, 0,
	294, 0,
	507, 0,
	621, 0,
	636, 0,
	-2, 2197,
	-1, 4828,
	17, 0,
	18, 0,
	19, 0,
	54, 0,
	235, 0,
	239, 0,
	294, 0,
	507, 0,
	621, 0,
	636, 0,
	-2, 2199,
	-1, 4839,
	266, 0,
	-2, 2232,
	-1, 5039,
	266, 0,
	-2, 2233,
	-1, 5285,
	54, 0,
	235, 0,
	294, 0,
	507, 0,
	621, 0,
	636, 0,
	-2, 3032,
}

const sqlPrivate = 57344

const sqlLast = 155392

var sqlAct = [...]int16{
	303, 5200, 5517, 5199, 5496, 3671, 3281, 5488, 1473, 5426,
	3251, 5364, 5348, 1012, 6, 4901, 3402, 5082, 3979, 5284,
	1209, 197, 5271, 5090, 1013, 10, 1382, 5297, 5440, 2272,
	5332, 5135, 4653, 4, 5254, 5153, 5211, 5214, 5190, 3978,
	5298, 2477, 5299, 4984, 1529, 5007, 5373, 2363, 4441, 4971,
	4511, 2323, 3739, 5231, 2520, 5295, 1670, 1700, 3177, 4951,
	4147, 1393, 5043, 5283, 4785, 4780, 4848, 4743, 4906, 4774,
	4099, 3800, 4815, 2722, 3371, 4709, 2334, 4461, 4015, 4453,
	4990, 5120, 4366, 4654, 1463, 4634, 936, 3422, 1971, 3525,
	3178, 2793, 3953, 2571, 4790, 3963, 2167, 2569, 2987, 4424,
	3864, 2212, 4397, 4009, 789, 1372, 4399, 3968, 2546, 864,
	1201, 3937, 2372, 3806, 4844, 936, 3803, 2732, 1550, 4042,
	1465, 3391, 3359, 4044, 1456, 2723, 2285, 197, 1257, 3967,
	2533, 3386, 3787, 3970, 3949, 3788, 3930, 3929, 2567, 1643,
	4241, 3081, 3686, 3717, 3388, 3694, 3677, 3789, 4510, 3654,
	3266, 3724, 3417, 3403, 1821, 3453, 3675, 4567, 2136, 3952,
	1016, 2466, 3951, 2464, 3334, 801, 5349, 2453, 3282, 2401,
	3827, 4208, 1695, 3653, 1696, 2384, 2196, 5044, 3047, 2729,
	2042, 2871, 2111, 2806, 2072, 3509, 3416, 297, 2517, 3049,
	296, 1468, 1760, 931, 860, 2451, 3296, 2443, 2424, 2465,
	1007, 2431, 3372, 1868, 1262, 2351, 2355, 2137, 2984, 3046,
	3086, 3792, 1267, 2156, 1544, 1512, 2283, 3027, 1442, 2790,
	2862, 1373, 2333, 2330, 2711, 1531, 2694, 3082, 2692, 837,
	1798, 3396, 1763, 1672, 1756, 2446, 1087, 880, 2516, 3202,
	5497, 5154, 2873, 3971, 2153, 776, 1499, 3163, 1411, 799,
	2865, 3203, 1376, 3036, 123, 1355, 2106, 2997, 938, 2146,
	937, 1230, 2951, 2843, 1390, 1453, 2917, 2056, 207, 1470,
	1972, 1527, 2693, 942, 208, 1973, 945, 845, 1903, 2695,
	2474, 1888, 856, 1789, 1796, 1651, 986, 938, 1212, 937,
	127, 2455, 113, 50, 5365, 820, 5427, 1243, 794, 49,
	1524, 47, 942, 38, 36, 945, 34, 790, 1353, 803,
	1725, 873, 876, 1378, 926, 3563, 1543, 1953, 1108, 1706,
	3557, 4222, 2274, 1978, 4223, 5506, 5532, 3673, 2274, 987,
	3026, 2274, 2274, 5520, 5504, 3740, 2274, 3908, 3026, 2274,
	5503, 5462, 5460, 5394, 3026, 4905, 4905, 2486, 1988, 1989,
	5293, 2021, 2022, 2023, 2032, 2033, 2034, 5350, 5323, 5321,
	5318, 5351, 3026, 3026, 5319, 5315, 5281, 4867, 4874, 5316,
	2486, 2025, 2019, 4024, 5280, 4871, 4870, 5279, 2486, 2295,
	1991, 3427, 5269, 5267, 4866, 4767, 4905, 4905, 3624, 3625,
	5258, 2038, 5257, 5209, 4905, 5175, 4905, 4905, 5168, 3095,
	1699, 5167, 3026, 5158, 5134, 3026, 1508, 2486, 2486, 2044,
	1370, 5131, 5112, 5041, 4601, 4905, 4726, 3095, 1990, 5021,
	4986, 4924, 4923, 4486, 4292, 2486, 2486, 4912, 4911, 2010,
	4904, 2486, 4905, 4855, 4905, 3624, 3625, 2486, 2007, 4829,
	2568, 1205, 1194, 3095, 4800, 1356, 1356, 4768, 3427, 4704,
	4681, 3908, 4530, 3026, 3026, 4477, 3095, 2521, 2295, 4037,
	1508, 1823, 4025, 2292, 1206, 4471, 1185, 1988, 1989, 4037,
	4421, 4323, 1184, 4291, 4422, 4324, 1205, 4292, 4233, 4231,
	2292, 4215, 4234, 4232, 4131, 3026, 4127, 1757, 2486, 4036,
	3026, 2019, 3758, 4037, 4212, 3734, 3753, 3119, 3670, 1991,
	3665, 3364, 3026, 3664, 3026, 3615, 3613, 3026, 3605, 3616,
	3614, 3603, 3606, 3574, 3426, 3026, 3639, 3026, 3427, 2013,
	2014, 2015, 2016, 3413, 1200, 3572, 3412, 2556, 2044, 1996,
	2556, 3573, 3142, 3090, 3094, 3079, 3026, 1990, 3095, 3026,
	3071, 3025, 3908, 2555, 2486, 3026, 2999, 2556, 2010, 1408,
	1359, 1418, 1360, 2486, 2295, 3524, 3026, 5176, 5045, 5036,
	5024, 3427, 1988, 1989, 106, 1357, 4212, 261, 2998, 3630,
	4778, 4726, 2029, 2292, 4682, 4486, 2039, 2295, 4423, 4411,
	3258, 2377, 3162, 2018, 2020, 2309, 2019, 2485, 2868, 3153,
	2273, 2292, 2289, 2295, 1991, 3364, 3276, 3087, 2132, 1409,
	1693, 4341, 4102, 2035, 4071, 2036, 2154, 2436, 4026, 3063,
	3062, 1870, 2005, 2006, 3061, 3060, 3630, 3059, 261, 1361,
	1358, 263, 1193, 2044, 1192, 1191, 1190, 1189, 4027, 3381,
	1188, 2027, 1990, 1187, 1183, 1182, 1181, 1180, 2013, 2014,
	2015, 2016, 1179, 4792, 1178, 1409, 2011, 1177, 1996, 1176,
	1988, 1989, 3479, 2021, 2022, 2023, 2032, 2033, 2034, 1175,
	1174, 1173, 1172, 1171, 1170, 1169, 1168, 1167, 1166, 1165,
	1164, 1151, 263, 262, 2019, 1085, 1084, 1083, 3624, 3625,
	1082, 1081, 1991, 1080, 1079, 1078, 3640, 2869, 1077, 255,
	1076, 1075, 1074, 2038, 1073, 2037, 1072, 1071, 256, 1070,
	1069, 1068, 2018, 2020, 1067, 1066, 1065, 1064, 1063, 1062,
	1894, 2044, 2275, 1061, 1060, 1059, 2026, 4585, 2275, 3026,
	1990, 2275, 2275, 1058, 262, 1057, 2275, 2041, 209, 2275,
	1056, 2010, 1055, 3640, 1054, 1053, 1052, 3399, 1051, 1050,
	2007, 1049, 1038, 1996, 1037, 1036, 1031, 1833, 1030, 1023,
	1022, 1021, 2900, 1006, 3562, 1005, 1004, 962, 961, 960,
	2633, 959, 958, 949, 948, 2011, 947, 2041, 946, 908,
	907, 871, 870, 869, 2870, 851, 2867, 291, 290, 209,
	289, 288, 1699, 287, 286, 285, 284, 2017, 283, 282,
	281, 280, 279, 278, 277, 276, 275, 2018, 2020, 274,
	1837, 273, 272, 271, 270, 3668, 269, 2292, 268, 267,
	266, 265, 264, 2012, 2041, 4542, 4266, 4227, 4075, 4038,
	3720, 2013, 2014, 2015, 2016, 2292, 3585, 3568, 3170, 3170,
	2157, 1996, 2292, 2292, 3559, 3456, 3344, 3099, 1475, 1267,
	2114, 3068, 2998, 3053, 2030, 1818, 2041, 2113, 2684, 2898,
	3669, 2114, 2336, 3641, 2294, 2884, 2882, 2180, 2113, 3630,
	2011, 1985, 4434, 2083, 1954, 1702, 1267, 1267, 1267, 4794,
	2074, 84, 1520, 1392, 2029, 5308, 5307, 2117, 2039, 4896,
	2043, 5304, 5282, 3364, 261, 2018, 2020, 5266, 2112, 5048,
	85, 5139, 5033, 4843, 5027, 5025, 1410, 4798, 166, 3383,
	3641, 4777, 1708, 4609, 4565, 4564, 2017, 1258, 90, 4558,
	1420, 2295, 1553, 2081, 2005, 2006, 1267, 3129, 4557, 4024,
	2273, 2292, 1267, 1675, 1267, 2289, 4556, 1475, 2687, 4549,
	4548, 4546, 2012, 2027, 4541, 1684, 4538, 4537, 263, 1708,
	1265, 2041, 1516, 1517, 1518, 2074, 4420, 2872, 2011, 1409,
	99, 4410, 1267, 2292, 1267, 4270, 1267, 1503, 2028, 4269,
	4268, 4237, 4203, 4202, 1675, 1264, 4201, 4123, 4118, 3715,
	2002, 2003, 2009, 2031, 2008, 2004, 3640, 2001, 1999, 2000,
	1992, 1993, 1994, 1995, 1997, 1998, 3661, 3652, 1475, 1814,
	262, 4552, 1014, 3623, 3620, 4551, 1765, 3619, 3617, 2043,
	1503, 1720, 1661, 2998, 1369, 55, 255, 122, 1409, 3612,
	1675, 4329, 3168, 106, 119, 256, 1714, 1675, 3633, 3634,
	3626, 3627, 3628, 3629, 3631, 3632, 1267, 2012, 1267, 2041,
	3611, 197, 197, 1675, 3624, 3625, 3610, 1697, 3607, 1648,
	2076, 2493, 1267, 1656, 1267, 209, 2536, 2075, 3604, 2073,
	1447, 1450, 3584, 1495, 3567, 3560, 3558, 2041, 3414, 3054,
	2855, 1985, 1984, 1460, 3635, 3633, 3634, 3626, 3627, 3628,
	3629, 3631, 3632, 3959, 1497, 1770, 1773, 2866, 2491, 107,
	5526, 5448, 3624, 3625, 5447, 3642, 3643, 3644, 5363, 2017,
	3624, 3625, 5361, 1675, 2043, 261, 2001, 1999, 2000, 1992,
	1993, 1994, 1995, 1997, 1998, 4526, 1394, 4149, 5201, 1792,
	4435, 3108, 5118, 1267, 5102, 2012, 1267, 1682, 1776, 1523,
	5098, 5097, 5096, 5076, 2802, 3382, 5075, 942, 5073, 5047,
	945, 5046, 1546, 5019, 1640, 1645, 2796, 5005, 1489, 5002,
	5001, 4982, 4339, 3641, 4435, 4981, 2030, 3666, 4793, 263,
	1694, 4920, 4891, 4841, 4824, 1481, 4823, 1534, 1535, 4763,
	4759, 3624, 3625, 3639, 3642, 3643, 3644, 4756, 4727, 4584,
	4563, 1388, 4487, 4327, 4326, 4307, 4306, 1758, 4304, 3167,
	3167, 1708, 2043, 3167, 1526, 1678, 4218, 4206, 1536, 1537,
	1707, 2001, 1999, 2000, 1992, 1993, 1994, 1995, 1997, 1998,
	261, 262, 4113, 2061, 1385, 4039, 1838, 4001, 3991, 3888,
	3838, 1801, 1803, 3805, 3747, 3630, 3745, 255, 1267, 1267,
	1267, 1267, 1267, 1267, 1267, 1267, 256, 3589, 3588, 1384,
	1719, 3583, 3549, 1988, 1989, 3358, 3356, 261, 111, 3195,
	2120, 2119, 3639, 1799, 2118, 1713, 2115, 2107, 2105, 3106,
	261, 1267, 3105, 1503, 263, 3065, 3398, 1267, 3058, 3024,
	2028, 2880, 2060, 3630, 1206, 1991, 2179, 2135, 2129, 2128,
	2127, 3630, 2002, 2003, 2009, 2031, 2008, 2004, 2126, 2001,
	1999, 2000, 1992, 1993, 1994, 1995, 1997, 1998, 2125, 1208,
	261, 263, 3097, 2124, 2123, 1963, 2122, 205, 2121, 114,
	2102, 2101, 118, 1990, 263, 2100, 262, 3635, 3633, 3634,
	3626, 3627, 3628, 3629, 3631, 3632, 1988, 1989, 2099, 1896,
	5050, 1912, 255, 3624, 3625, 1843, 2098, 2097, 2096, 2095,
	2094, 256, 2093, 261, 2092, 261, 2091, 3646, 2090, 2089,
	2019, 1015, 3630, 262, 263, 2063, 1813, 166, 1991, 2088,
	2087, 2076, 2062, 2059, 2054, 1488, 262, 1415, 1404, 255,
	1795, 209, 1832, 1267, 1267, 1267, 5049, 4766, 256, 1267,
	4605, 4534, 255, 4265, 1959, 4230, 1390, 2044, 1390, 4221,
	3640, 256, 1708, 3571, 3056, 4868, 1990, 263, 3640, 263,
	4607, 4264, 1790, 1553, 2075, 3743, 262, 2057, 209, 4684,
	197, 4030, 2175, 3841, 2899, 1267, 1988, 1989, 2202, 1475,
	1530, 209, 255, 1861, 1996, 171, 2230, 2202, 2134, 1475,
	4412, 256, 1475, 1675, 3252, 1515, 1986, 5439, 3712, 5106,
	1897, 211, 1964, 5300, 3624, 3625, 2377, 1530, 1991, 262,
	1513, 262, 5099, 2321, 2320, 1530, 2329, 1530, 2329, 4797,
	1530, 209, 2183, 4732, 4731, 255, 4730, 255, 4729, 3640,
	4728, 2041, 4683, 1955, 256, 4587, 256, 2143, 206, 2041,
	4494, 1530, 1960, 210, 1968, 4493, 1990, 2279, 1185, 261,
	2281, 1967, 4991, 1475, 1184, 4492, 2286, 4491, 2414, 1267,
	2288, 261, 1528, 3221, 209, 2291, 209, 1996, 1514, 2116,
	1962, 2897, 1530, 2195, 3630, 1206, 261, 2883, 2881, 4490,
	2375, 4489, 5390, 1267, 4488, 4293, 4225, 2190, 5028, 5026,
	2184, 1553, 2140, 2141, 2164, 4224, 2189, 1981, 1982, 4041,
	4895, 2097, 3294, 263, 4040, 1241, 3912, 3910, 3909, 5388,
	2041, 1508, 2114, 1508, 1356, 263, 5296, 3641, 2366, 2113,
	2157, 2018, 2020, 4438, 4100, 3641, 2327, 4357, 3624, 3625,
	263, 2082, 3609, 1508, 2108, 2109, 3608, 1957, 2097, 3531,
	3206, 1511, 3878, 2324, 2315, 4322, 1162, 3981, 1860, 3980,
	2205, 4287, 2203, 4288, 3807, 262, 4428, 2301, 2185, 2205,
	1503, 2203, 2165, 2253, 5068, 942, 2300, 262, 945, 2085,
	1869, 255, 5069, 2187, 942, 1913, 2521, 945, 2467, 4985,
	256, 2588, 262, 255, 2011, 5069, 3673, 5329, 2155, 4775,
	3423, 3640, 256, 3938, 4151, 4716, 3641, 1163, 255, 1870,
	2162, 2468, 1206, 4409, 4363, 4354, 1794, 256, 4332, 4067,
	209, 3771, 2654, 2565, 2501, 261, 4845, 2863, 5509, 4668,
	3577, 3104, 209, 4915, 3204, 1368, 5489, 4665, 2433, 2413,
	2537, 4887, 5305, 2133, 2412, 2277, 2130, 209, 3628, 3629,
	3631, 3632, 2110, 2174, 3998, 2529, 1769, 1689, 2208, 2173,
	261, 2172, 1484, 2170, 2169, 1446, 2168, 5320, 2259, 2159,
	5317, 2262, 1675, 1675, 4697, 2041, 3273, 4694, 4020, 263,
	2326, 4298, 2041, 1553, 3636, 3637, 3638, 2303, 2209, 3270,
	5091, 3635, 3633, 3634, 3626, 3627, 3628, 3629, 3631, 3632,
	2423, 3634, 3626, 3627, 3628, 3629, 3631, 3632, 3268, 1675,
	1847, 4781, 5208, 3455, 263, 3810, 5306, 3336, 4317, 3630,
	2325, 3395, 3254, 1826, 2420, 3921, 5391, 4918, 4914, 5431,
	2299, 262, 2297, 5392, 2447, 4893, 4094, 1211, 1675, 1987,
	3775, 2409, 2341, 2418, 2342, 1795, 4376, 255, 4946, 2428,
	1000, 4670, 1739, 3143, 2349, 2350, 256, 2647, 5519, 261,
	5107, 2012, 1160, 3636, 3637, 3638, 262, 1158, 3641, 2376,
	3635, 3633, 3634, 3626, 3627, 3628, 3629, 3631, 3632, 1386,
	1147, 1515, 255, 1675, 1911, 1675, 209, 1675, 2423, 2322,
	2423, 256, 4939, 4965, 1156, 5370, 1691, 2316, 2645, 1515,
	906, 2373, 1910, 4926, 3166, 1675, 1675, 903, 2343, 2344,
	4719, 4718, 4374, 263, 2371, 2347, 2348, 4373, 1210, 1675,
	3164, 209, 4375, 4365, 4347, 4346, 2383, 3180, 2043, 3777,
	3840, 1675, 2913, 2377, 1675, 1675, 1675, 3166, 4344, 2369,
	3744, 4343, 2560, 4331, 4290, 4289, 3927, 1994, 1995, 1997,
	1998, 3926, 3880, 3164, 1514, 3733, 3582, 3581, 2202, 4664,
	2448, 942, 1732, 3580, 945, 262, 1001, 2470, 2471, 1792,
	2406, 2548, 1514, 2548, 2374, 3579, 2549, 4666, 4916, 3535,
	1267, 255, 2525, 2421, 2484, 3098, 4888, 2589, 5490, 3292,
	256, 2472, 3291, 3275, 3264, 3256, 3245, 3244, 3233, 3232,
	3231, 4413, 1845, 3211, 843, 2370, 3210, 2375, 843, 2530,
	2788, 4301, 2304, 3171, 1909, 3080, 2419, 2041, 2543, 1267,
	209, 2777, 2427, 2405, 2210, 2402, 1999, 2000, 1992, 1993,
	1994, 1995, 1997, 1998, 3807, 3626, 3627, 3628, 3629, 3631,
	3632, 2868, 2786, 3876, 2912, 1961, 2580, 2593, 3183, 2457,
	2563, 2456, 2457, 2460, 2456, 1267, 2422, 1267, 5432, 2734,
	2573, 2551, 5022, 2468, 1267, 2175, 2521, 1267, 2686, 2230,
	2230, 1553, 2131, 1267, 1267, 1267, 1267, 1267, 1267, 1267,
	1267, 1267, 1267, 1267, 1267, 1267, 1267, 1267, 1267, 1267,
	1267, 1267, 1267, 1267, 1267, 1267, 1267, 1267, 1267, 1267,
	1267, 1267, 1267, 1267, 1267, 1267, 1267, 1267, 1267, 2504,
	1267, 2482, 1267, 1267, 1267, 1267, 1799, 2553, 1799, 2498,
	2540, 1794, 4685, 1998, 5371, 1532, 1533, 3392, 4615, 1269,
	2205, 998, 2203, 997, 2618, 2532, 3227, 1206, 1267, 1206,
	2869, 2704, 1267, 1267, 2422, 942, 2422, 2545, 945, 1509,
	1267, 3632, 1532, 1533, 1267, 2691, 1267, 1267, 2579, 4068,
	2331, 2332, 2331, 2332, 1553, 1532, 1533, 2557, 1489, 2558,
	1267, 1267, 1267, 1267, 2519, 1743, 1267, 1267, 1267, 1267,
	1267, 1267, 1267, 1267, 2702, 1204, 1532, 1533, 3225, 2863,
	3113, 1782, 1498, 1781, 4626, 2782, 1692, 3084, 1432, 1862,
	2702, 4822, 1267, 1267, 1267, 1267, 1267, 1267, 1267, 1267,
	1267, 4667, 1267, 5434, 1988, 1989, 1267, 1532, 1533, 2783,
	1780, 1840, 1779, 2597, 3877, 1509, 2784, 2870, 1390, 2867,
	2789, 2434, 2608, 2478, 2483, 1553, 1734, 4956, 3208, 2673,
	2844, 2845, 788, 3112, 1390, 2682, 1991, 2700, 2676, 2664,
	3085, 2584, 2661, 842, 2844, 2860, 1153, 842, 1952, 2605,
	1267, 1553, 1751, 2700, 2641, 1956, 4625, 3182, 3150, 783,
	3626, 3627, 3628, 3629, 3631, 3632, 2792, 4649, 5391, 1505,
	2716, 2908, 2715, 2728, 1990, 1203, 2376, 4964, 2430, 2727,
	1892, 1475, 1870, 3272, 2416, 1003, 1002, 1870, 2792, 1908,
	2954, 2954, 2968, 3243, 2844, 3092, 1927, 2988, 2990, 2449,
	3430, 1923, 197, 2662, 2996, 4642, 2690, 5435, 2429, 2688,
	3474, 2808, 2703, 2689, 3194, 2696, 2652, 1185, 3271, 1509,
	1185, 1185, 3774, 2719, 1735, 2639, 2720, 2721, 5302, 1892,
	2859, 3269, 1475, 2663, 2403, 3089, 1841, 1929, 3234, 2408,
	3070, 5084, 2698, 1858, 3507, 1505, 2425, 4970, 3066, 3487,
	3267, 5466, 2145, 1388, 2598, 1388, 1510, 3522, 5433, 2675,
	3193, 2602, 4643, 1487, 3033, 844, 1475, 1475, 2461, 844,
	2606, 2774, 4662, 4328, 3137, 3041, 2188, 3124, 2596, 2550,
	2164, 2374, 2586, 3128, 1206, 1996, 1385, 2450, 1385, 3083,
	2872, 1846, 1356, 2804, 1206, 1205, 3236, 3139, 1206, 4080,
	4079, 1891, 2701, 1889, 1312, 2377, 3165, 1553, 3476, 2857,
	2646, 1384, 2426, 1384, 2410, 3146, 904, 4314, 2701, 1506,
	2910, 904, 3181, 2599, 1966, 2911, 2785, 5437, 2914, 1507,
	2915, 2916, 1510, 3115, 3032, 3235, 2787, 3040, 3148, 3045,
	4389, 2149, 3051, 3052, 3132, 3055, 3111, 3238, 1155, 1505,
	1891, 2644, 4649, 3546, 904, 2963, 2230, 2950, 2994, 2979,
	2404, 904, 942, 2992, 942, 945, 3110, 945, 3022, 3023,
	3490, 900, 1890, 5086, 3038, 3039, 1503, 2458, 3034, 1764,
	3990, 3149, 3131, 2699, 3135, 3544, 2162, 3088, 1206, 4821,
	4642, 2800, 2152, 3237, 4635, 1506, 4957, 2116, 2798, 2699,
	3140, 5443, 4390, 3147, 3521, 1507, 3858, 1553, 5341, 4955,
	4137, 2147, 4633, 5059, 5498, 942, 2872, 4953, 945, 5303,
	2866, 2459, 4637, 1675, 4140, 1047, 3207, 2672, 1398, 3100,
	2150, 5403, 4717, 4345, 3172, 4342, 1510, 2356, 4274, 1762,
	1475, 4273, 2357, 4312, 1400, 4259, 4258, 4643, 3327, 3107,
	3091, 4388, 2772, 4072, 3134, 3933, 2775, 3925, 3874, 2213,
	3849, 1267, 1267, 1924, 1267, 3123, 2108, 2109, 3859, 3126,
	4952, 3127, 1395, 3274, 2148, 3230, 3209, 3780, 3285, 3117,
	1905, 3157, 2683, 2041, 4638, 1742, 3141, 950, 3133, 5418,
	3169, 4639, 898, 4636, 4660, 1475, 1202, 4138, 3367, 1506,
	4954, 3118, 4644, 3370, 3514, 3515, 3228, 5417, 1431, 1507,
	3078, 2771, 4663, 3688, 957, 5468, 3489, 3857, 3331, 1401,
	5378, 2437, 3850, 5172, 1508, 3144, 2444, 1675, 4516, 3213,
	2490, 2489, 3265, 784, 5301, 1039, 3138, 2398, 3541, 1675,
	4515, 1675, 4073, 3362, 5436, 4641, 197, 1675, 1402, 3486,
	2380, 3158, 3159, 1260, 3934, 3160, 3161, 2674, 1675, 1675,
	3198, 3931, 1040, 2358, 4645, 3379, 5333, 4737, 2604, 3542,
	3175, 3848, 3241, 3547, 3212, 3185, 3188, 3246, 4018, 3406,
	3332, 2362, 5129, 4017, 1475, 3483, 1475, 3339, 3229, 3286,
	3250, 3418, 3341, 1399, 2274, 1768, 3794, 2872, 2400, 2399,
	1508, 2434, 3872, 3433, 3434, 3293, 1950, 2151, 1267, 2415,
	3328, 3329, 2381, 1925, 5185, 3441, 3442, 3443, 3240, 3239,
	5114, 3248, 4879, 3873, 785, 3156, 2417, 3871, 3342, 3330,
	3374, 3219, 3220, 3222, 3223, 3224, 3226, 3262, 5092, 5121,
	2463, 3255, 5273, 942, 5274, 1764, 945, 2438, 2397, 3870,
	3867, 3278, 3253, 5122, 3421, 1842, 3279, 3280, 3891, 3420,
	2411, 2379, 2359, 2364, 3537, 2414, 4017, 5085, 3488, 4638,
	2872, 4661, 5441, 3822, 3776, 3337, 4639, 1921, 1267, 786,
	1871, 787, 3428, 841, 1267, 1267, 2791, 4644, 5123, 3435,
	1154, 3436, 3415, 1690, 1413, 3425, 2640, 3166, 4753, 1267,
	3450, 3431, 2462, 3451, 1508, 2417, 1844, 3459, 1138, 2407,
	4640, 2103, 3408, 3186, 5377, 3465, 3741, 3467, 2145, 3469,
	1926, 3363, 2458, 4817, 2773, 1922, 3410, 2415, 5170, 899,
	4641, 3916, 3687, 1198, 3821, 3378, 1992, 1993, 1994, 1995,
	1997, 1998, 1267, 1267, 1857, 1859, 5401, 2416, 1267, 4645,
	3044, 3401, 2360, 4650, 4651, 951, 952, 3411, 5125, 1928,
	1799, 1267, 1267, 2601, 1486, 3069, 2459, 1267, 1267, 3409,
	3492, 3495, 3494, 1267, 3497, 4595, 5171, 3448, 3390, 3543,
	2595, 2434, 4596, 5124, 2149, 1024, 901, 3828, 5356, 3545,
	897, 5442, 4313, 3464, 4512, 3466, 2367, 3468, 5357, 3470,
	3471, 3834, 5126, 1041, 1042, 4834, 2367, 2149, 5219, 3337,
	4698, 3932, 1029, 5464, 809, 3463, 4402, 2854, 1267, 1267,
	1267, 3795, 3480, 2053, 1267, 1965, 4400, 3313, 4402, 3587,
	1396, 1139, 5444, 3037, 1267, 2152, 2413, 3538, 4400, 1048,
	4418, 2412, 5469, 3050, 3830, 4594, 1205, 4153, 5450, 4765,
	4501, 1267, 4722, 3457, 3035, 3458, 4604, 4260, 2152, 1419,
	2356, 3303, 3301, 3832, 1138, 2357, 1417, 3513, 2365, 3305,
	3307, 3297, 4816, 2150, 4517, 4096, 3505, 2147, 5136, 3502,
	2799, 1386, 3570, 1386, 1876, 2441, 5409, 3504, 3503, 1198,
	5339, 1397, 5453, 5225, 5152, 4640, 2150, 5004, 4721, 4433,
	4720, 2716, 3508, 2715, 4459, 4005, 3756, 3523, 3077, 954,
	953, 2515, 3833, 3323, 3829, 4404, 3249, 3565, 3566, 2142,
	1416, 3530, 3569, 1407, 1668, 775, 3561, 4404, 4947, 1975,
	1976, 4192, 2651, 1975, 5376, 4754, 4561, 4513, 4650, 4651,
	2148, 2718, 1970, 1267, 1267, 1267, 1267, 2439, 2378, 5474,
	4403, 2317, 1267, 1267, 1267, 5408, 5340, 1267, 3919, 4913,
	4862, 5013, 4403, 3920, 3536, 1726, 2314, 3725, 3801, 1267,
	1390, 1553, 5066, 4460, 4369, 4348, 5334, 4299, 4297, 4006,
	3289, 3996, 955, 956, 2275, 3797, 2358, 1139, 3380, 1144,
	1143, 3373, 3360, 2544, 2538, 1267, 2440, 1267, 3680, 3681,
	3424, 2531, 2523, 4136, 2362, 2500, 1390, 2497, 2361, 5137,
	1736, 1423, 2708, 4207, 4097, 1043, 1044, 850, 1807, 4998,
	3440, 1206, 4283, 4818, 1553, 1388, 5191, 3215, 3028, 3170,
	1975, 3187, 2730, 2731, 1822, 5344, 1390, 5155, 1140, 1553,
	2653, 1388, 2310, 1974, 4462, 4786, 3357, 1974, 2312, 4398,
	2151, 1475, 3576, 1025, 1026, 3663, 1434, 4977, 1385, 4518,
	2340, 2585, 3718, 5355, 4975, 3299, 2230, 4890, 3031, 3813,
	1553, 3809, 3808, 2151, 1385, 3528, 3315, 3506, 5127, 4220,
	1475, 3705, 3685, 1384, 5128, 2359, 2364, 1788, 3684, 2577,
	1475, 1899, 1898, 3682, 1852, 2313, 2566, 2495, 3759, 1384,
	3314, 3304, 3302, 3306, 3308, 3298, 3300, 3316, 3318, 3692,
	1893, 3030, 1267, 5410, 5342, 1786, 3029, 1976, 3310, 3312,
	3320, 1976, 4254, 3761, 1267, 3714, 3763, 3764, 3076, 3075,
	3074, 3767, 3073, 3768, 2366, 3769, 3696, 4401, 3072, 1755,
	4193, 4408, 1475, 1774, 1974, 1144, 1143, 3719, 2230, 4401,
	3796, 4194, 3690, 4519, 1046, 3324, 4562, 1203, 5485, 1775,
	3658, 3659, 3660, 2709, 2053, 1267, 5452, 5079, 4902, 4744,
	2366, 3191, 4429, 1141, 4305, 2360, 3674, 2542, 5473, 3941,
	4979, 1475, 4294, 2454, 3892, 45, 5398, 4877, 3772, 3846,
	4875, 3757, 3784, 3785, 1140, 3727, 3728, 3729, 3730, 3454,
	3778, 3723, 1475, 1142, 1475, 3335, 3711, 1757, 3704, 889,
	3861, 1503, 3863, 4069, 3811, 3216, 3217, 3815, 4064, 3755,
	3691, 3754, 3689, 5138, 2354, 3703, 3765, 1267, 1267, 2367,
	2433, 3706, 3707, 4997, 3879, 1553, 4284, 2433, 3709, 3697,
	3710, 3736, 5411, 5343, 3735, 942, 1475, 890, 945, 3429,
	2356, 3340, 3798, 3338, 3902, 2357, 1877, 5197, 4898, 4978,
	2570, 2467, 1146, 1475, 1850, 1027, 1028, 4897, 3737, 4620,
	4619, 3914, 5205, 3812, 5188, 2339, 3817, 4568, 4209, 3819,
	3317, 4903, 1145, 5080, 2879, 4865, 2352, 4885, 4261, 1947,
	2668, 2365, 3695, 3702, 5227, 5402, 5400, 3894, 5322, 3896,
	1949, 5110, 3900, 5100, 3907, 3843, 3906, 3868, 1475, 1675,
	4873, 1675, 3847, 3825, 3762, 1553, 3918, 3766, 3748, 3749,
	3732, 3750, 936, 1675, 1675, 3726, 849, 3961, 3773, 1141,
	3701, 1946, 4840, 4612, 4560, 2353, 3917, 1944, 4886, 3781,
	3875, 4407, 3862, 1917, 1915, 1887, 1885, 1787, 1475, 3751,
	1883, 1881, 1879, 5198, 3325, 4279, 3997, 4295, 1873, 1142,
	1867, 3655, 1865, 3309, 3311, 3319, 1390, 4112, 1216, 4065,
	4013, 1784, 4062, 4011, 3831, 1785, 2358, 3881, 3752, 5081,
	4959, 3618, 3548, 3361, 3263, 3889, 1675, 3966, 3986, 3257,
	3205, 3845, 3839, 3852, 2362, 3109, 2681, 2452, 1675, 2677,
	1675, 3856, 2587, 197, 197, 2576, 3995, 2561, 2261, 2182,
	3893, 2178, 3860, 1951, 1045, 1825, 4618, 3656, 1146, 5294,
	4091, 3922, 4090, 4082, 2264, 2643, 1970, 3418, 3478, 3214,
	3884, 2361, 2610, 2476, 3890, 2224, 3418, 3477, 1145, 4033,
	4004, 3438, 2697, 1904, 3903, 2613, 3698, 3699, 3700, 2496,
	4022, 2260, 2258, 3911, 2970, 3958, 3901, 1553, 2086, 3241,
	1553, 3923, 3915, 3853, 1839, 4070, 1352, 3854, 2878, 3855,
	3989, 4699, 4356, 3913, 4355, 2359, 2364, 4703, 4680, 5187,
	4784, 4708, 2670, 4693, 4631, 4630, 4060, 4458, 4012, 2669,
	4448, 4372, 4007, 4350, 938, 1267, 937, 3924, 5374, 1948,
	4261, 4320, 1267, 1267, 4779, 902, 1267, 1267, 1267, 942,
	1267, 4083, 945, 4133, 4318, 3943, 4296, 4000, 3213, 1267,
	2230, 4010, 4014, 3987, 3994, 3928, 3982, 3393, 1267, 3385,
	1945, 3992, 3993, 1267, 4058, 3377, 1943, 3369, 3354, 1553,
	4063, 3352, 1916, 1914, 1886, 1884, 3333, 3130, 1267, 1882,
	1880, 1878, 3125, 2494, 4061, 4019, 1553, 1872, 2492, 1866,
	4021, 1864, 2469, 2435, 4028, 2360, 2230, 2230, 1267, 1267,
	1783, 1267, 1267, 1267, 2396, 2382, 2368, 3935, 4088, 2296,
	1252, 124, 4086, 4031, 4032, 905, 5369, 4089, 2293, 1267,
	2290, 4092, 2287, 1267, 4093, 2230, 2230, 1267, 1267, 1267,
	1267, 1267, 1267, 1267, 1267, 1267, 1267, 1267, 1267, 1267,
	1267, 1267, 1267, 1267, 1267, 1267, 1267, 2642, 1267, 2367,
	4098, 4115, 2282, 1206, 2609, 2475, 1267, 1267, 2230, 4165,
	2280, 4166, 2276, 1267, 2267, 5278, 1365, 4054, 2194, 4076,
	1979, 4077, 3904, 4078, 1267, 4125, 4126, 2444, 3526, 5392,
	4205, 4052, 2318, 1386, 5078, 1390, 1390, 197, 3498, 1267,
	3499, 4045, 1551, 1366, 4095, 2306, 2307, 3496, 3326, 1386,
	5260, 5146, 4799, 4715, 4617, 3419, 3782, 3779, 2335, 1157,
	1159, 2365, 933, 1741, 3166, 3166, 5015, 124, 2680, 3192,
	5008, 1553, 1728, 1422, 4470, 2377, 2541, 1454, 4239, 2600,
	3164, 3189, 1455, 2637, 1475, 1475, 1941, 1942, 2632, 5259,
	4122, 4120, 2607, 4671, 4710, 3290, 1197, 1863, 5035, 3196,
	2227, 1988, 1989, 1475, 1475, 3783, 878, 2202, 4132, 1475,
	1726, 4204, 4139, 4141, 4142, 4148, 4226, 1525, 2678, 4900,
	4569, 1988, 1989, 4547, 3826, 4155, 3197, 4054, 1267, 3218,
	4056, 3527, 1983, 1991, 3197, 4255, 2385, 1482, 1980, 2522,
	4163, 4052, 4281, 1421, 4164, 4168, 4282, 5386, 3905, 4047,
	3936, 4045, 3939, 4196, 4170, 1522, 1267, 292, 1186, 4445,
	4368, 1367, 2389, 5330, 4211, 4046, 2679, 1455, 1455, 3351,
	1207, 1990, 2524, 5406, 1493, 2305, 4143, 1033, 4197, 3270,
	3268, 4216, 4217, 895, 4243, 4367, 3277, 3259, 2559, 1267,
	1267, 1990, 3199, 881, 881, 4319, 1920, 4321, 3261, 4162,
	3201, 2361, 4213, 4214, 5196, 5177, 2572, 2574, 2454, 5144,
	772, 5140, 3260, 5077, 3200, 4999, 4996, 4878, 4812, 4456,
	2578, 4447, 2386, 4055, 1374, 4432, 4236, 3999, 3400, 3366,
	3353, 1267, 1267, 4352, 2995, 2590, 2591, 2592, 4228, 1267,
	4056, 4244, 2302, 2211, 4300, 5438, 4899, 3919, 3247, 1688,
	1687, 1681, 3920, 1199, 3738, 5472, 5142, 1388, 1699, 4047,
	1675, 1675, 5337, 1675, 4043, 3624, 3625, 1988, 1989, 4245,
	4229, 4242, 1675, 5405, 5163, 4046, 4371, 1475, 1699, 2205,
	4253, 2203, 1849, 4275, 3919, 4386, 4251, 4333, 1848, 3920,
	1385, 2346, 3152, 1388, 942, 2345, 3151, 945, 4539, 2874,
	4337, 4263, 3961, 2230, 3481, 4338, 4340, 1698, 4381, 2909,
	2346, 1699, 2345, 1919, 4455, 1384, 1918, 2230, 5000, 4940,
	4712, 4707, 4252, 1388, 4706, 4597, 1385, 4248, 4593, 4370,
	4358, 4592, 4535, 4055, 4509, 4262, 4144, 4364, 3898, 2390,
	4267, 1267, 3895, 3484, 2080, 2079, 3501, 4325, 4444, 2218,
	4330, 1384, 4249, 4256, 4257, 2685, 1385, 5457, 5419, 5264,
	5181, 5180, 1675, 5179, 5109, 5108, 5054, 5051, 1267, 4973,
	4930, 4463, 4271, 4272, 4869, 4864, 1390, 1267, 4280, 4472,
	4863, 1384, 3213, 4861, 4860, 1675, 4391, 4392, 2224, 2224,
	1675, 1675, 1675, 4425, 4415, 4417, 4053, 4048, 4049, 4050,
	4051, 4858, 4406, 4761, 4394, 1480, 4736, 4669, 4387, 4606,
	2391, 2392, 4591, 1675, 4590, 1675, 4482, 4476, 4464, 4419,
	1675, 4316, 1553, 4308, 4003, 4396, 4002, 4377, 4405, 3286,
	3958, 4439, 4440, 3406, 3818, 3760, 3485, 2387, 4057, 3475,
	4479, 3447, 3446, 3445, 4384, 4467, 3418, 3444, 3384, 4395,
	3355, 3190, 3121, 1553, 3102, 4427, 1267, 1267, 3101, 2803,
	2671, 4414, 1267, 1267, 2230, 4416, 2638, 1267, 1267, 2631,
	1267, 4431, 2630, 2629, 4466, 1267, 2188, 2628, 2627, 4450,
	2539, 4452, 2510, 4483, 4446, 2388, 1267, 4385, 2509, 2508,
	4246, 2507, 2506, 2505, 2270, 2269, 4495, 2268, 4247, 4443,
	2266, 4498, 1267, 2193, 2192, 1940, 4053, 4048, 4049, 4050,
	4051, 4449, 1939, 1874, 1750, 1749, 1748, 1747, 1705, 3742,
	1712, 1746, 1718, 2181, 4465, 1745, 4468, 1744, 4473, 1740,
	1738, 1737, 4474, 1665, 1664, 1663, 1542, 1541, 1540, 1539,
	4481, 4520, 1538, 1485, 1441, 1440, 1439, 4480, 4057, 1438,
	4496, 1437, 1436, 4250, 2394, 1435, 1433, 1428, 1427, 1426,
	1425, 1424, 1275, 1390, 1347, 4529, 2308, 1161, 4533, 4499,
	4566, 1390, 1152, 5083, 4648, 1553, 1553, 197, 1553, 4506,
	4647, 4646, 2667, 2518, 105, 1390, 1733, 98, 4514, 2442,
	4315, 5331, 1812, 5451, 1817, 5481, 1675, 1675, 2502, 5236,
	5230, 3804, 5229, 4521, 5115, 3950, 3948, 3947, 1831, 5336,
	1836, 3718, 4969, 967, 299, 299, 299, 1553, 778, 779,
	2393, 795, 778, 795, 807, 4811, 4574, 848, 1114, 5226,
	1475, 868, 5113, 1723, 4505, 4508, 875, 875, 875, 875,
	982, 5207, 3820, 3295, 1267, 2612, 1875, 4993, 299, 2614,
	3713, 2337, 3057, 1388, 5169, 1390, 4543, 1390, 3586, 4599,
	4600, 5042, 4833, 2877, 2084, 3667, 100, 1251, 4559, 1297,
	1020, 4752, 4751, 2227, 2227, 4632, 1895, 299, 4302, 4582,
	3969, 4655, 1475, 4655, 4748, 4747, 1385, 2215, 2217, 4658,
	4679, 1215, 1553, 1556, 1475, 3001, 3003, 1475, 4621, 4622,
	5272, 2319, 4688, 5463, 2395, 4691, 2328, 3103, 2953, 4570,
	4573, 1384, 1274, 1267, 1271, 4659, 1553, 4575, 4576, 2219,
	4624, 4571, 4572, 2221, 4380, 4577, 4579, 4672, 4583, 4602,
	4603, 4586, 1273, 1272, 4675, 4676, 2220, 2104, 1270, 2214,
	4454, 3988, 3404, 4029, 4610, 4611, 4627, 1793, 4614, 1791,
	1116, 2797, 2861, 3575, 4629, 2077, 4598, 1231, 1675, 1675,
	1253, 2858, 3961, 1267, 1267, 2230, 1414, 2230, 4613, 1242,
	3693, 3672, 4016, 4235, 2707, 992, 3621, 2864, 4623, 1403,
	2976, 4711, 2969, 4713, 2965, 2224, 3770, 4673, 3394, 1958,
	4847, 2055, 3405, 1519, 1235, 2795, 1475, 2068, 3553, 2717,
	124, 4695, 4023, 4696, 4769, 3716, 3096, 5253, 4152, 1553,
	4714, 3482, 2514, 1364, 1675, 1363, 1412, 1362, 778, 778,
	5213, 5210, 4674, 4787, 2432, 4689, 299, 4755, 3964, 3965,
	2311, 4745, 3145, 2487, 3287, 2807, 3983, 4692, 1247, 1675,
	1675, 1675, 1675, 1675, 1675, 1675, 3460, 3461, 1659, 2658,
	4084, 4734, 3678, 4430, 1752, 4907, 1259, 4741, 4725, 4742,
	2040, 3322, 4773, 1553, 4776, 3321, 4705, 4733, 5072, 1504,
	4788, 4770, 1502, 1501, 4497, 1267, 1267, 1267, 1500, 5428,
	3288, 4503, 4724, 4723, 2445, 1386, 4311, 4310, 4309, 260,
	3958, 4678, 3520, 1553, 1977, 1969, 4738, 257, 1267, 4616,
	259, 1267, 1267, 4750, 4687, 4791, 4746, 4690, 4819, 4764,
	4757, 1267, 258, 124, 2230, 124, 3824, 124, 4762, 1267,
	1267, 1386, 2218, 2218, 4758, 4240, 3722, 1851, 5328, 4772,
	4335, 3940, 27, 4796, 4810, 882, 1553, 4789, 1675, 883,
	884, 3155, 1388, 1388, 2338, 2171, 1521, 4286, 26, 25,
	24, 1386, 23, 128, 48, 29, 28, 4802, 3432, 4782,
	4801, 4825, 5, 1475, 22, 170, 168, 145, 165, 3439,
	1207, 124, 124, 2213, 164, 1385, 1385, 137, 163, 162,
	161, 4820, 160, 159, 167, 158, 1553, 124, 4813, 124,
	157, 152, 156, 155, 1267, 154, 153, 4830, 151, 149,
	1384, 1384, 150, 124, 144, 124, 148, 1267, 147, 146,
	143, 295, 142, 141, 140, 4842, 1267, 139, 138, 2730,
	4156, 2230, 136, 4836, 169, 4856, 135, 4857, 134, 212,
	133, 1267, 132, 131, 1267, 4884, 4853, 4854, 130, 129,
	861, 862, 67, 66, 125, 126, 21, 46, 2730, 4171,
	16, 1267, 4921, 4922, 1267, 71, 72, 1225, 20, 15,
	41, 1553, 103, 117, 116, 115, 42, 112, 40, 1475,
	2227, 124, 19, 18, 17, 110, 4910, 4949, 109, 1675,
	1267, 4200, 1675, 1675, 108, 39, 37, 13, 4880, 4941,
	11, 4943, 43, 4944, 2166, 2366, 14, 7, 4881, 202,
	4882, 201, 4933, 4883, 4889, 4934, 204, 1390, 200, 203,
	4929, 102, 199, 104, 198, 101, 35, 12, 193, 4989,
	4437, 2733, 93, 196, 195, 194, 192, 191, 190, 94,
	91, 4958, 189, 4655, 97, 1553, 96, 188, 1675, 4980,
	4945, 4972, 4927, 92, 4932, 95, 33, 5009, 8, 4931,
	70, 9, 4976, 4814, 4988, 4066, 120, 121, 44, 89,
	88, 87, 86, 32, 69, 31, 185, 4983, 236, 235,
	1186, 234, 3966, 4935, 1267, 1267, 233, 232, 4942, 231,
	4961, 230, 229, 4960, 4995, 224, 228, 226, 225, 227,
	223, 1267, 2230, 2058, 5010, 4974, 251, 4968, 250, 249,
	4950, 5014, 248, 5018, 247, 5020, 246, 245, 239, 4987,
	238, 2064, 244, 4992, 2875, 2070, 243, 1475, 1475, 5012,
	4735, 1475, 1475, 2548, 1475, 1475, 4994, 242, 241, 240,
	237, 254, 4872, 82, 222, 4791, 221, 220, 218, 5017,
	214, 5016, 1267, 5011, 1267, 217, 1267, 219, 216, 215,
	213, 5023, 253, 252, 83, 183, 1390, 184, 81, 5067,
	182, 181, 180, 179, 178, 177, 176, 80, 187, 1267,
	186, 1390, 5031, 5032, 30, 2, 1, 0, 0, 4948,
	0, 1386, 4655, 1388, 5065, 5006, 0, 0, 0, 0,
	0, 0, 0, 5040, 5034, 0, 0, 4655, 0, 5030,
	0, 4804, 0, 5095, 0, 4808, 0, 0, 0, 0,
	0, 3067, 0, 0, 0, 0, 1385, 0, 5064, 2218,
	2230, 0, 5063, 0, 0, 5104, 0, 0, 5060, 0,
	0, 0, 1390, 1390, 0, 0, 2158, 0, 2161, 5087,
	124, 1384, 0, 1405, 0, 5094, 5119, 5088, 0, 5143,
	0, 0, 0, 1390, 795, 0, 1390, 0, 4655, 4655,
	1675, 5117, 0, 0, 5132, 5133, 0, 0, 795, 0,
	1675, 0, 0, 5103, 0, 0, 0, 0, 0, 4655,
	1430, 5105, 4655, 0, 0, 5149, 1267, 1267, 5151, 0,
	3804, 0, 299, 0, 299, 299, 1267, 1459, 299, 1469,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1483, 5130, 5116, 0, 5111, 0, 5156, 0, 868, 0,
	5141, 868, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 5148, 0, 0, 5165, 0, 5166, 4992, 0, 5157,
	0, 0, 0, 0, 875, 5160, 0, 5164, 0, 1267,
	1267, 0, 0, 1267, 0, 5182, 5183, 1675, 1475, 5204,
	5174, 1475, 5178, 5161, 2634, 0, 0, 3154, 0, 5162,
	1388, 0, 0, 299, 0, 299, 299, 1459, 1388, 299,
	299, 0, 5159, 0, 5173, 5186, 5052, 5053, 1469, 0,
	5055, 5056, 1388, 5057, 5058, 2224, 0, 5212, 5215, 5252,
	5194, 5195, 299, 1385, 1701, 5256, 5228, 0, 5203, 5202,
	0, 1385, 0, 0, 5277, 0, 5275, 0, 0, 0,
	1721, 1267, 1267, 1267, 0, 1385, 5217, 5255, 1384, 1730,
	5184, 5221, 0, 0, 0, 0, 1384, 2213, 0, 0,
	0, 0, 0, 4966, 4967, 0, 1754, 5216, 1469, 0,
	1384, 5220, 0, 299, 299, 0, 1459, 5261, 0, 1267,
	0, 0, 1388, 0, 1388, 5309, 5268, 5265, 0, 0,
	1386, 1386, 5276, 0, 0, 0, 0, 2224, 868, 0,
	299, 299, 0, 5314, 1675, 5289, 5290, 0, 5292, 5291,
	0, 0, 1819, 0, 0, 1385, 0, 1385, 0, 0,
	0, 5324, 0, 1827, 5326, 0, 0, 0, 1020, 5310,
	0, 5311, 5354, 2366, 0, 0, 0, 0, 5312, 0,
	1384, 0, 1384, 0, 5352, 0, 5325, 0, 0, 0,
	0, 5353, 0, 5366, 5335, 5327, 1267, 5362, 0, 0,
	5338, 5360, 2327, 2327, 1475, 0, 0, 0, 0, 5345,
	5346, 0, 1196, 0, 1138, 5375, 5359, 0, 0, 4972,
	0, 5358, 0, 0, 5385, 5393, 0, 0, 0, 0,
	5367, 0, 5368, 0, 0, 0, 0, 0, 0, 1198,
	0, 0, 0, 5396, 5372, 1267, 5381, 5382, 0, 299,
	5389, 5387, 0, 5384, 0, 0, 0, 0, 0, 0,
	0, 5395, 0, 5397, 0, 0, 5414, 5399, 0, 0,
	0, 0, 1390, 0, 1390, 299, 5424, 5212, 0, 5412,
	5215, 5415, 5404, 5416, 0, 2712, 0, 5223, 5422, 1197,
	5224, 0, 0, 0, 3944, 3945, 5413, 0, 4655, 0,
	4655, 5421, 0, 0, 5423, 0, 5425, 0, 5420, 0,
	0, 0, 0, 1475, 5430, 0, 2224, 0, 0, 0,
	5255, 0, 0, 1207, 0, 1207, 0, 0, 0, 5455,
	0, 5445, 5456, 5446, 5429, 0, 5459, 1139, 0, 0,
	2227, 0, 0, 5454, 0, 0, 0, 0, 0, 1267,
	1267, 0, 0, 5461, 0, 0, 0, 4035, 1267, 1267,
	5467, 0, 5458, 5465, 0, 0, 0, 5479, 5470, 4059,
	5486, 0, 5475, 0, 0, 6, 0, 5494, 0, 0,
	0, 5491, 197, 5502, 5487, 5499, 10, 5500, 5492, 5478,
	5495, 0, 5484, 5501, 5493, 5483, 0, 5505, 0, 0,
	0, 0, 3406, 5508, 5507, 0, 0, 1464, 5510, 5513,
	1475, 0, 5512, 0, 0, 5518, 0, 5516, 5514, 124,
	5515, 5511, 2227, 0, 0, 5523, 5521, 0, 5522, 0,
	5525, 0, 0, 2971, 0, 3406, 0, 1267, 0, 0,
	5528, 0, 5524, 5530, 5518, 5534, 5531, 0, 5533, 0,
	0, 0, 5527, 0, 0, 0, 5476, 5477, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1386, 0, 5383, 0, 0, 0, 778, 5222, 0,
	0, 0, 0, 0, 0, 1646, 0, 0, 1660, 1464,
	0, 0, 0, 0, 0, 1144, 1143, 0, 299, 1186,
	299, 0, 1186, 1186, 299, 0, 0, 3624, 3625, 2224,
	3642, 3643, 3644, 0, 0, 0, 0, 1701, 1459, 1469,
	299, 0, 299, 2191, 0, 0, 0, 0, 0, 0,
	299, 0, 795, 0, 0, 5529, 0, 0, 0, 299,
	0, 1680, 0, 0, 1140, 0, 0, 2213, 0, 0,
	0, 0, 0, 0, 0, 2224, 2224, 2271, 0, 0,
	2794, 0, 1464, 1464, 0, 0, 0, 0, 0, 299,
	0, 0, 0, 0, 1388, 0, 299, 0, 0, 0,
	1207, 0, 5449, 0, 2224, 2224, 0, 0, 3639, 2218,
	2064, 0, 0, 0, 2064, 1988, 1989, 301, 0, 0,
	0, 2227, 0, 0, 0, 0, 0, 1385, 0, 868,
	0, 0, 0, 0, 0, 3345, 0, 2224, 3348, 2019,
	3350, 0, 0, 0, 0, 0, 0, 1991, 0, 1988,
	1989, 0, 1384, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 875, 0, 875,
	0, 0, 0, 2019, 4919, 0, 2044, 0, 1386, 875,
	875, 1991, 0, 0, 0, 1990, 1386, 0, 1374, 0,
	0, 2218, 3397, 0, 0, 3397, 0, 0, 0, 1141,
	1386, 0, 0, 0, 2161, 0, 0, 0, 3630, 0,
	2044, 3679, 0, 0, 0, 0, 0, 0, 0, 1990,
	0, 0, 0, 0, 0, 0, 0, 1195, 0, 1142,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1388, 0, 0, 0, 0, 0, 0,
	0, 0, 124, 0, 0, 3647, 0, 0, 1388, 0,
	0, 0, 0, 0, 3708, 0, 0, 0, 0, 0,
	1386, 0, 1386, 0, 0, 0, 1385, 0, 3472, 3721,
	0, 0, 3646, 0, 0, 0, 0, 0, 1146, 0,
	0, 1385, 0, 0, 0, 0, 1996, 0, 0, 0,
	0, 1384, 0, 0, 0, 0, 0, 0, 1145, 0,
	3746, 0, 0, 0, 2227, 0, 1384, 0, 0, 1388,
	1388, 0, 0, 0, 0, 3640, 0, 0, 0, 1229,
	1996, 0, 299, 0, 0, 0, 299, 0, 0, 0,
	1388, 0, 0, 1388, 0, 2213, 0, 0, 0, 0,
	2018, 2020, 1385, 1385, 0, 0, 0, 0, 0, 0,
	2227, 2227, 0, 0, 0, 0, 0, 0, 0, 0,
	2218, 4378, 4379, 1385, 0, 299, 1385, 1384, 1384, 0,
	0, 0, 0, 4382, 2018, 2020, 0, 0, 2066, 2227,
	2227, 0, 2071, 0, 299, 0, 0, 0, 1384, 0,
	0, 1384, 0, 0, 0, 299, 2041, 0, 0, 0,
	0, 0, 299, 2011, 0, 0, 0, 0, 0, 0,
	0, 0, 2227, 0, 0, 0, 0, 0, 299, 0,
	299, 2224, 2224, 0, 778, 0, 299, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2224, 2011, 868, 0,
	0, 0, 1020, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1459, 299, 0, 0, 0, 0,
	0, 1660, 3641, 0, 2041, 0, 4478, 0, 0, 0,
	868, 2572, 4484, 4485, 0, 0, 0, 299, 0, 0,
	0, 0, 0, 0, 0, 2611, 0, 0, 1008, 0,
	299, 299, 0, 299, 0, 299, 0, 299, 2041, 299,
	124, 0, 0, 124, 0, 124, 3510, 0, 0, 0,
	0, 0, 0, 0, 0, 1660, 84, 0, 1011, 1010,
	0, 0, 0, 0, 2648, 3721, 0, 2649, 0, 2650,
	0, 0, 0, 2218, 0, 85, 0, 0, 0, 0,
	0, 0, 0, 0, 299, 299, 299, 299, 299, 0,
	2012, 0, 0, 90, 0, 0, 0, 124, 0, 0,
	124, 0, 0, 2224, 0, 0, 124, 0, 0, 0,
	0, 0, 0, 0, 848, 0, 0, 0, 868, 2218,
	2218, 0, 0, 0, 2012, 0, 0, 0, 0, 2971,
	2971, 0, 0, 0, 0, 99, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2218, 2218,
	0, 0, 0, 0, 0, 0, 0, 2043, 0, 3636,
	3637, 3638, 0, 0, 0, 0, 3635, 3633, 3634, 3626,
	3627, 3628, 3629, 3631, 3632, 0, 0, 1014, 0, 0,
	0, 2218, 0, 124, 0, 0, 0, 0, 0, 0,
	55, 2043, 122, 0, 0, 0, 0, 0, 106, 119,
	0, 0, 0, 0, 0, 0, 0, 4085, 0, 1388,
	1551, 1388, 0, 2809, 0, 3550, 3551, 4588, 4589, 0,
	0, 0, 0, 0, 0, 0, 2227, 2227, 0, 0,
	0, 0, 1386, 0, 0, 0, 0, 0, 0, 0,
	0, 2227, 1385, 0, 1385, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2000, 1992, 1993, 1994,
	1995, 1997, 1998, 0, 107, 0, 0, 1384, 0, 1384,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 778, 0, 0, 0, 4129,
	0, 1992, 1993, 1994, 1995, 1997, 1998, 0, 0, 0,
	299, 0, 0, 0, 0, 0, 4145, 0, 0, 778,
	0, 2971, 2971, 2971, 2971, 0, 299, 0, 778, 0,
	0, 0, 0, 0, 0, 0, 2794, 0, 0, 0,
	299, 0, 0, 0, 2503, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2064, 0, 0,
	299, 1469, 0, 0, 0, 3835, 3836, 299, 3837, 299,
	1701, 0, 0, 0, 2528, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2572,
	0, 1386, 0, 0, 0, 0, 0, 0, 2227, 0,
	0, 0, 0, 0, 0, 0, 1386, 3648, 3649, 3650,
	3651, 2224, 0, 0, 2224, 0, 2224, 299, 1469, 0,
	299, 795, 0, 795, 0, 3885, 3886, 0, 3887, 0,
	3120, 0, 0, 111, 0, 0, 299, 0, 0, 299,
	0, 0, 0, 299, 0, 299, 0, 0, 0, 0,
	1459, 4238, 299, 299, 0, 1469, 1469, 3136, 0, 0,
	0, 0, 299, 0, 0, 0, 0, 1386, 1386, 0,
	4803, 0, 4805, 4806, 4807, 0, 4809, 0, 0, 0,
	0, 0, 0, 0, 0, 2218, 2218, 0, 1386, 0,
	0, 1386, 205, 0, 114, 0, 0, 118, 0, 0,
	2218, 0, 0, 1229, 1229, 1229, 875, 875, 0, 0,
	875, 875, 0, 0, 0, 0, 0, 0, 0, 3179,
	0, 0, 0, 0, 0, 0, 0, 0, 261, 0,
	0, 299, 0, 0, 0, 0, 1015, 0, 0, 0,
	0, 0, 166, 0, 0, 299, 2659, 2660, 0, 1637,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 299,
	1374, 0, 0, 2224, 0, 0, 0, 0, 0, 4859,
	868, 0, 0, 0, 0, 868, 0, 0, 0, 0,
	0, 0, 263, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1374, 0, 299, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	171, 0, 3283, 1701, 0, 2946, 2947, 2948, 2949, 2942,
	2943, 2944, 2945, 0, 0, 0, 211, 0, 0, 0,
	0, 0, 0, 0, 262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2218, 299, 3343,
	255, 0, 0, 0, 0, 0, 0, 0, 0, 256,
	0, 0, 0, 206, 0, 0, 0, 0, 210, 0,
	2224, 0, 0, 0, 0, 0, 0, 0, 1701, 0,
	0, 299, 0, 0, 3283, 0, 0, 0, 0, 1009,
	0, 0, 299, 0, 0, 0, 2227, 0, 0, 2227,
	0, 2227, 0, 3389, 2922, 2923, 2924, 2925, 0, 0,
	4962, 2801, 0, 3179, 0, 778, 0, 0, 0, 0,
	0, 0, 0, 0, 1020, 3179, 0, 2066, 2934, 2935,
	2936, 2937, 2930, 2931, 2932, 2933, 2938, 2939, 2940, 2941,
	0, 0, 0, 0, 0, 0, 0, 299, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	124, 124, 0, 124, 0, 0, 0, 299, 1459, 299,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3462,
	299, 0, 1680, 1459, 0, 1459, 0, 1459, 0, 1680,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1464,
	0, 0, 2918, 2919, 2920, 2921, 2926, 2927, 2928, 2929,
	124, 124, 0, 124, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 299, 299, 299, 299, 1459,
	0, 2224, 1459, 0, 0, 299, 0, 1386, 2227, 1386,
	299, 2819, 2820, 2821, 2838, 2839, 2840, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1464, 0, 0, 0,
	0, 0, 2841, 0, 0, 0, 0, 0, 0, 0,
	1380, 299, 0, 0, 0, 2971, 2971, 0, 0, 299,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1464, 1464, 0, 0, 0, 0, 0, 0, 2044,
	0, 0, 0, 0, 1222, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2831,
	0, 0, 294, 294, 774, 0, 0, 0, 2827, 0,
	0, 0, 0, 0, 0, 2218, 0, 0, 2218, 0,
	2218, 0, 0, 0, 0, 2227, 1374, 0, 4581, 1207,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2224,
	0, 4108, 4109, 124, 124, 2971, 2971, 2971, 2971, 2971,
	2971, 2971, 2971, 2971, 2971, 2971, 2971, 2971, 2971, 2971,
	2971, 2971, 2971, 2971, 2971, 0, 2971, 4608, 0, 0,
	0, 2572, 0, 0, 0, 0, 0, 0, 1646, 0,
	0, 0, 0, 0, 0, 0, 0, 1701, 0, 2832,
	2833, 2834, 2835, 0, 0, 0, 0, 0, 0, 2826,
	1637, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1660, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4172, 4173, 4174, 4175, 4176, 4177, 4178, 4179, 4180,
	4181, 4182, 4183, 4184, 4185, 4186, 4187, 4188, 4189, 4190,
	4191, 0, 4195, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2218, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2836, 2837, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2227, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2829, 0, 0, 0,
	1229, 0, 0, 0, 0, 0, 0, 0, 1637, 84,
	0, 0, 299, 0, 0, 4451, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 85, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 90, 0, 299, 0,
	0, 0, 0, 778, 2218, 0, 0, 0, 778, 0,
	0, 778, 0, 0, 778, 778, 0, 0, 1660, 0,
	778, 0, 0, 0, 0, 0, 0, 124, 299, 1464,
	0, 4500, 0, 1988, 1989, 0, 0, 0, 99, 0,
	299, 0, 0, 1551, 0, 1374, 1374, 0, 0, 0,
	299, 0, 0, 0, 2227, 0, 0, 2019, 0, 0,
	0, 0, 0, 0, 5232, 1991, 0, 0, 0, 0,
	0, 0, 0, 4831, 0, 0, 0, 0, 0, 795,
	1014, 0, 0, 0, 0, 1660, 0, 1660, 299, 0,
	0, 5237, 299, 299, 2044, 122, 0, 0, 0, 0,
	0, 106, 119, 1990, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2830, 2010, 0, 4831, 0, 0, 0,
	0, 0, 0, 2007, 0, 0, 3179, 3179, 299, 0,
	3790, 3793, 5247, 0, 0, 0, 0, 3179, 0, 2191,
	1637, 0, 0, 0, 0, 0, 0, 0, 3179, 2191,
	0, 3179, 2191, 0, 0, 2191, 0, 0, 3790, 0,
	0, 0, 0, 0, 0, 1680, 2733, 107, 0, 0,
	299, 299, 3793, 0, 299, 2218, 0, 0, 0, 0,
	2043, 4524, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3793, 0, 299, 0, 3866, 0, 3866,
	5243, 0, 0, 0, 2013, 2014, 2015, 2016, 1459, 0,
	0, 0, 0, 0, 1996, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3179, 0, 3179, 0, 3899, 3179, 3793, 0, 0,
	3179, 2733, 0, 0, 0, 0, 0, 0, 1680, 1680,
	0, 0, 0, 0, 3793, 0, 0, 868, 0, 0,
	0, 0, 5240, 0, 0, 0, 0, 0, 2018, 2020,
	2816, 2817, 2818, 2842, 2828, 2822, 0, 2824, 2825, 2823,
	2810, 2811, 2812, 2813, 2814, 2815, 0, 0, 0, 1459,
	0, 0, 0, 0, 0, 0, 299, 2005, 2006, 0,
	0, 0, 0, 2218, 0, 3093, 5233, 0, 0, 0,
	0, 0, 0, 0, 299, 5245, 0, 3946, 0, 0,
	3962, 3179, 0, 0, 299, 0, 111, 4701, 0, 0,
	0, 2011, 1469, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 299, 0,
	0, 0, 0, 3389, 0, 0, 1459, 0, 299, 0,
	124, 3179, 0, 778, 0, 0, 0, 0, 0, 0,
	3179, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 5246, 0, 0, 0, 205, 1374, 114, 84, 0,
	118, 0, 0, 0, 0, 0, 0, 0, 4760, 0,
	0, 0, 0, 0, 0, 0, 0, 85, 0, 0,
	0, 0, 2041, 4771, 0, 0, 5251, 0, 0, 4074,
	0, 261, 0, 0, 1229, 90, 124, 0, 1637, 1015,
	1680, 1680, 1680, 1680, 0, 166, 0, 4795, 0, 0,
	0, 0, 4081, 0, 0, 0, 1701, 0, 0, 0,
	1459, 299, 0, 299, 0, 0, 0, 0, 0, 1459,
	0, 0, 1459, 0, 0, 0, 0, 99, 0, 0,
	0, 0, 2017, 0, 0, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 5238,
	0, 299, 0, 0, 0, 0, 0, 0, 2012, 0,
	5248, 0, 0, 171, 0, 0, 0, 0, 0, 1014,
	1445, 0, 1445, 1445, 0, 0, 5244, 0, 0, 211,
	0, 1637, 55, 0, 122, 5250, 0, 262, 0, 0,
	106, 119, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1660, 1660, 255, 0, 0, 0, 5241, 0, 0,
	4150, 0, 256, 0, 5239, 0, 206, 0, 0, 0,
	0, 210, 5249, 0, 0, 2043, 0, 124, 0, 0,
	0, 0, 0, 1374, 0, 0, 0, 0, 0, 0,
	0, 1374, 209, 0, 4876, 0, 0, 0, 0, 0,
	0, 1548, 1637, 0, 5234, 0, 107, 1658, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1637, 0,
	1660, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 5242, 0, 0, 0, 5235, 0,
	0, 0, 0, 0, 2528, 0, 0, 299, 299, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2008,
	2004, 0, 2001, 1999, 2000, 1992, 1993, 1994, 1995, 1997,
	1998, 0, 778, 778, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1808, 1809,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2971,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 299,
	0, 0, 124, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1988, 1989, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 111, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2019, 0, 0, 0, 0,
	0, 0, 0, 1991, 1637, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2971, 124, 0, 4839, 0, 1464, 0, 0,
	0, 0, 2044, 868, 0, 0, 0, 1930, 124, 0,
	0, 1990, 0, 0, 205, 0, 114, 0, 0, 118,
	0, 0, 2010, 0, 0, 0, 0, 0, 0, 0,
	4349, 2007, 124, 4351, 0, 0, 4353, 0, 0, 0,
	0, 0, 3866, 0, 0, 0, 0, 0, 0, 0,
	261, 0, 0, 0, 0, 0, 0, 299, 1015, 0,
	0, 0, 0, 0, 166, 0, 0, 0, 0, 0,
	0, 3283, 0, 0, 1637, 0, 0, 0, 4892, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3793, 4111,
	299, 0, 0, 0, 795, 795, 1469, 0, 0, 0,
	0, 0, 1660, 5101, 263, 0, 0, 0, 0, 0,
	0, 0, 2013, 2014, 2015, 2016, 0, 0, 0, 0,
	0, 0, 1996, 0, 0, 0, 0, 0, 0, 2024,
	0, 0, 171, 0, 0, 299, 3389, 0, 0, 3389,
	2191, 0, 0, 0, 0, 299, 0, 0, 211, 0,
	0, 0, 4442, 0, 3283, 0, 262, 299, 0, 0,
	0, 299, 5145, 299, 0, 5147, 0, 0, 299, 0,
	0, 0, 255, 0, 0, 0, 2018, 2020, 0, 124,
	0, 256, 0, 0, 0, 206, 0, 3179, 299, 2971,
	210, 0, 0, 0, 1680, 1680, 0, 0, 0, 1020,
	3179, 0, 0, 0, 0, 2005, 2006, 0, 0, 0,
	0, 1804, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 299, 0, 0, 0, 3793, 0, 0, 3136, 2011,
	0, 0, 2971, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2176, 0, 0, 0, 0, 2971, 0, 0,
	0, 0, 0, 0, 0, 5039, 0, 0, 2186, 0,
	1658, 0, 0, 0, 1680, 1680, 1680, 1680, 1680, 1680,
	1680, 1680, 1680, 1680, 1680, 1680, 1680, 1680, 1680, 1680,
	1680, 1680, 1680, 1680, 0, 1680, 5262, 0, 0, 0,
	5263, 0, 4544, 0, 0, 0, 0, 0, 0, 0,
	2041, 0, 0, 0, 0, 0, 0, 1445, 5071, 0,
	0, 0, 0, 0, 1658, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 5093, 0, 0, 0, 0, 2794, 0,
	0, 0, 0, 0, 0, 0, 1229, 0, 0, 0,
	0, 0, 0, 0, 0, 299, 0, 0, 0, 0,
	2017, 1701, 0, 299, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2024, 0, 0, 0, 299, 3624, 3625,
	0, 3642, 3643, 3644, 0, 0, 2012, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1469, 1469, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1469, 1469, 0, 299,
	1469, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3179, 3179, 0, 3790, 0, 0, 3866, 3179,
	0, 0, 0, 0, 0, 0, 0, 4657, 0, 4657,
	1701, 3624, 3625, 2043, 3642, 3643, 3644, 0, 0, 3639,
	0, 3179, 0, 2191, 0, 0, 0, 3790, 0, 1701,
	1701, 299, 3793, 0, 4525, 0, 0, 0, 124, 0,
	0, 0, 0, 0, 0, 3793, 1464, 299, 3793, 0,
	299, 0, 0, 3866, 0, 3866, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3179, 0, 3179, 299, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3639, 0, 0, 0, 0, 124, 0, 0,
	124, 0, 0, 0, 0, 2024, 0, 2008, 2004, 0,
	2001, 1999, 2000, 1992, 1993, 1994, 1995, 1997, 1998, 3630,
	0, 2024, 0, 0, 0, 3179, 3179, 0, 0, 0,
	0, 3389, 3389, 0, 0, 0, 0, 0, 3790, 0,
	0, 0, 0, 0, 0, 0, 2528, 0, 0, 0,
	0, 299, 0, 0, 0, 0, 0, 0, 2024, 0,
	0, 0, 299, 0, 2024, 0, 0, 0, 0, 0,
	2024, 0, 2512, 0, 0, 0, 0, 0, 1637, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2535, 0, 3630, 3646, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2547, 0, 2547, 0,
	0, 0, 0, 0, 2554, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1637, 0, 2144, 0, 0, 3640, 0, 0, 0,
	0, 124, 0, 0, 0, 124, 1637, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2582, 0, 2024, 3646, 0, 0, 0,
	2024, 0, 0, 0, 0, 0, 0, 1637, 0, 0,
	0, 0, 0, 0, 2024, 2603, 0, 0, 0, 2024,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2619,
	0, 2621, 0, 2623, 0, 2625, 0, 2626, 0, 3640,
	0, 0, 0, 0, 0, 0, 0, 2041, 0, 1229,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1229, 0, 3179, 2191, 0, 2191, 0, 175, 4442,
	0, 0, 0, 0, 0, 0, 0, 84, 299, 52,
	51, 0, 2655, 2656, 2657, 2024, 0, 0, 4908, 0,
	4908, 2024, 0, 0, 0, 0, 85, 0, 0, 0,
	78, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 90, 868, 0, 0, 0, 0,
	2041, 0, 0, 0, 0, 73, 3866, 1701, 0, 0,
	1701, 1459, 54, 3641, 173, 0, 0, 0, 0, 0,
	0, 3624, 3625, 0, 3642, 3643, 3644, 0, 0, 0,
	3793, 0, 299, 53, 0, 0, 99, 0, 1464, 0,
	0, 0, 0, 0, 4117, 0, 0, 0, 0, 0,
	0, 0, 1637, 0, 0, 1214, 0, 1988, 1989, 0,
	0, 0, 0, 0, 56, 74, 4442, 0, 0, 4657,
	0, 0, 1701, 57, 0, 0, 3179, 0, 63, 0,
	299, 2019, 0, 79, 0, 0, 3641, 0, 0, 1991,
	0, 55, 0, 122, 5003, 0, 0, 0, 0, 106,
	119, 0, 3639, 0, 0, 0, 1701, 0, 75, 2528,
	2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024, 2044, 0,
	0, 0, 0, 0, 0, 0, 0, 1990, 0, 0,
	2024, 0, 1637, 0, 299, 299, 0, 1464, 2010, 0,
	0, 0, 0, 2024, 58, 0, 0, 2007, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4150, 0,
	0, 0, 124, 0, 0, 107, 0, 0, 0, 0,
	3636, 3637, 3638, 0, 0, 0, 0, 3635, 3633, 3634,
	3626, 3627, 3628, 3629, 3631, 3632, 0, 0, 0, 2975,
	3866, 5062, 0, 0, 0, 0, 0, 0, 4442, 0,
	0, 0, 3630, 2024, 0, 4106, 0, 0, 3064, 2024,
	0, 0, 0, 0, 0, 0, 0, 0, 4657, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2013, 2014,
	2015, 2016, 0, 4657, 0, 0, 0, 0, 1996, 0,
	0, 0, 0, 3636, 3637, 3638, 76, 0, 0, 0,
	3635, 3633, 3634, 3626, 3627, 3628, 3629, 3631, 3632, 299,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 795, 0, 1637, 0, 3646, 1637, 0, 0,
	3624, 3625, 0, 3642, 3643, 3644, 0, 0, 0, 0,
	0, 0, 2018, 2020, 4657, 4657, 0, 0, 0, 0,
	0, 0, 0, 4116, 3122, 0, 0, 1445, 0, 0,
	0, 1445, 0, 1445, 0, 4657, 0, 299, 4657, 3640,
	0, 2005, 2006, 0, 111, 0, 0, 0, 2191, 0,
	2535, 0, 0, 0, 0, 0, 0, 0, 0, 1701,
	0, 1701, 59, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2011, 1637, 0, 0, 62,
	0, 3639, 0, 0, 65, 0, 0, 0, 1680, 0,
	0, 0, 1469, 1637, 77, 0, 0, 0, 0, 0,
	0, 0, 64, 205, 0, 114, 5192, 0, 118, 0,
	0, 0, 0, 0, 60, 0, 0, 0, 174, 0,
	2041, 0, 4908, 0, 0, 299, 61, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 261,
	0, 84, 0, 0, 0, 0, 0, 68, 0, 0,
	0, 3179, 0, 166, 0, 0, 2041, 0, 0, 0,
	85, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	172, 1680, 0, 0, 0, 0, 0, 0, 90, 0,
	0, 3630, 0, 0, 0, 299, 1658, 0, 0, 0,
	0, 0, 0, 263, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3641, 0, 0, 4150,
	0, 0, 0, 0, 0, 0, 2017, 0, 0, 0,
	99, 171, 0, 0, 0, 0, 0, 0, 1637, 0,
	0, 0, 0, 0, 1701, 0, 0, 211, 0, 0,
	0, 0, 2012, 0, 0, 262, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3646, 0, 0, 0, 0,
	0, 255, 1014, 0, 0, 0, 0, 0, 0, 3365,
	256, 0, 0, 0, 206, 55, 0, 122, 0, 210,
	2535, 0, 5347, 106, 119, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3640, 0,
	209, 0, 0, 3, 1660, 0, 0, 0, 0, 2043,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4442, 0, 0,
	0, 0, 0, 0, 0, 3437, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 107,
	0, 0, 0, 0, 0, 3449, 0, 3452, 0, 0,
	0, 0, 0, 3636, 3637, 3638, 0, 0, 1680, 0,
	3635, 3633, 3634, 3626, 3627, 3628, 3629, 3631, 3632, 2041,
	0, 0, 0, 0, 3179, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4657, 0, 4657, 0, 0, 1701,
	0, 0, 1478, 2008, 2004, 0, 2001, 1999, 2000, 1992,
	1993, 1994, 1995, 1997, 1998, 0, 0, 0, 0, 0,
	2024, 1680, 0, 3491, 1658, 3493, 1658, 0, 1464, 1214,
	1214, 1214, 0, 3500, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1680, 0, 0, 0,
	2024, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3641, 3179, 0, 0, 1445,
	0, 0, 0, 0, 0, 0, 0, 3529, 0, 1650,
	0, 0, 0, 3283, 0, 1666, 0, 0, 0, 0,
	0, 2024, 0, 0, 0, 2024, 0, 0, 0, 3179,
	0, 0, 0, 0, 0, 0, 0, 0, 111, 2024,
	0, 0, 0, 3283, 0, 1703, 0, 1709, 0, 1715,
	2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024,
	2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024,
	2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024,
	2024, 2024, 2024, 2024, 2024, 2024, 0, 0, 0, 0,
	0, 2024, 0, 2024, 2024, 2024, 2024, 205, 0, 114,
	0, 0, 118, 0, 0, 2975, 2975, 0, 0, 1637,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1810,
	2024, 1815, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 261, 0, 1829, 0, 1834, 0, 0,
	1637, 1015, 0, 0, 0, 0, 0, 166, 0, 0,
	0, 0, 3636, 3637, 3638, 0, 0, 0, 0, 3635,
	3633, 3634, 3626, 3627, 3628, 3629, 3631, 3632, 0, 0,
	0, 2024, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2024, 0, 0, 2024, 0, 1900, 2024, 0, 1906,
	2024, 0, 0, 0, 0, 171, 2024, 2024, 2024, 2024,
	2024, 2024, 2024, 0, 0, 0, 0, 0, 0, 0,
	0, 211, 0, 0, 0, 0, 0, 0, 0, 262,
	84, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 255, 0, 0, 0, 85,
	0, 0, 1637, 1637, 256, 1637, 0, 0, 206, 0,
	0, 0, 0, 210, 0, 0, 0, 90, 0, 0,
	0, 0, 2024, 0, 0, 3645, 0, 2975, 2975, 2975,
	2975, 0, 0, 2024, 1802, 2024, 0, 0, 0, 0,
	2024, 0, 0, 0, 1637, 0, 0, 0, 0, 0,
	0, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 99,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1229, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2065, 0, 1988, 1989, 0, 0,
	2078, 0, 0, 0, 0, 0, 0, 0, 3731, 0,
	0, 1014, 0, 0, 0, 0, 0, 0, 0, 0,
	2019, 0, 0, 0, 0, 0, 122, 0, 1991, 1637,
	0, 0, 106, 119, 0, 0, 0, 0, 0, 0,
	0, 1988, 1989, 0, 2021, 2022, 2023, 2032, 2033, 2034,
	0, 0, 0, 1637, 0, 0, 1445, 2044, 0, 0,
	1658, 1658, 0, 0, 2025, 2019, 1990, 0, 0, 0,
	0, 0, 0, 1991, 0, 0, 0, 2010, 0, 0,
	0, 0, 0, 0, 2038, 0, 2007, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3786, 0, 107, 0,
	0, 0, 2044, 0, 0, 0, 2138, 2138, 2138, 0,
	0, 1990, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2010, 0, 0, 0, 0, 0, 0, 0,
	0, 2007, 0, 0, 0, 0, 0, 0, 3842, 3844,
	0, 0, 2535, 0, 4105, 0, 1637, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2013, 2014, 2015,
	2016, 0, 0, 0, 0, 0, 0, 1996, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1637, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2013, 2014, 2015, 2016, 0, 0, 0, 0,
	0, 0, 1996, 0, 0, 0, 0, 0, 0, 0,
	1637, 2018, 2020, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1214, 111, 0, 0,
	2005, 2006, 0, 0, 0, 2029, 0, 0, 0, 2039,
	0, 0, 0, 1637, 0, 0, 2018, 2020, 0, 0,
	0, 0, 1263, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3984, 0, 2011, 0, 2035, 0, 2036, 0,
	0, 0, 0, 0, 0, 2005, 2006, 0, 0, 0,
	0, 2024, 2024, 0, 2024, 0, 205, 0, 114, 0,
	0, 118, 0, 1637, 2027, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 298, 298, 298, 0, 0, 2011,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 261, 0, 0, 0, 0, 0, 0, 0,
	1015, 0, 0, 0, 0, 0, 166, 0, 943, 0,
	0, 1229, 0, 0, 0, 2041, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2037, 0,
	0, 0, 0, 0, 0, 0, 0, 943, 1637, 0,
	0, 0, 0, 0, 0, 0, 263, 0, 0, 2026,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4087,
	2041, 1658, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 171, 2017, 0, 0, 2024, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	211, 0, 0, 0, 0, 0, 0, 0, 262, 4101,
	0, 2012, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1637, 0, 255, 0, 0, 0, 0, 0,
	2017, 0, 0, 256, 0, 0, 0, 206, 0, 0,
	0, 0, 210, 0, 0, 0, 0, 0, 2024, 2024,
	0, 2975, 2975, 0, 0, 2024, 2012, 0, 0, 0,
	0, 0, 0, 209, 0, 3645, 3645, 0, 0, 2024,
	2024, 0, 0, 0, 0, 0, 0, 0, 2043, 2024,
	0, 0, 0, 0, 0, 0, 0, 2030, 0, 0,
	0, 0, 0, 2024, 0, 0, 1387, 0, 0, 0,
	0, 0, 0, 0, 0, 2024, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2043, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2975, 2975, 2975, 2975, 2975, 2975, 2975, 2975, 2975,
	2975, 2975, 2975, 2975, 2975, 2975, 2975, 2975, 2975, 2975,
	2975, 0, 2975, 3645, 3645, 3645, 3645, 0, 0, 0,
	0, 0, 2008, 2004, 0, 2001, 1999, 2000, 1992, 1993,
	1994, 1995, 1997, 1998, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2635, 0, 0, 0, 0, 2024, 0,
	0, 2028, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2002, 2003, 2009, 2031, 2008, 2004, 0,
	2001, 1999, 2000, 1992, 1993, 1994, 1995, 1997, 1998, 0,
	0, 0, 2665, 0, 3599, 0, 0, 0, 3600, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2706, 0,
	2710, 0, 0, 0, 0, 0, 0, 2724, 0, 0,
	1214, 0, 0, 0, 0, 0, 2735, 2736, 2737, 2738,
	2739, 2740, 2741, 2742, 2743, 2744, 2745, 2746, 2747, 2748,
	2749, 2750, 2751, 2752, 2753, 2754, 2755, 2756, 2757, 2758,
	2759, 2760, 2761, 2762, 2763, 2764, 2765, 2766, 2767, 2768,
	2769, 2770, 0, 2776, 0, 2778, 2779, 2780, 2781, 0,
	0, 0, 0, 0, 0, 0, 0, 1229, 2024, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2805, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2065, 0, 0, 0, 2856, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2886, 2889, 2892, 2895, 0, 0, 2901,
	2902, 2903, 2904, 2905, 2906, 2907, 0, 2024, 2024, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2535, 0,
	0, 0, 0, 0, 0, 0, 0, 2967, 175, 2978,
	2980, 2985, 0, 0, 0, 0, 0, 84, 0, 52,
	51, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 85, 0, 0, 0,
	0, 0, 0, 4426, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4436, 90, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 73, 0, 0, 0, 2535,
	0, 2535, 54, 0, 173, 0, 4457, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 53, 0, 0, 99, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 56, 74, 0, 0, 0, 0,
	0, 0, 0, 57, 0, 0, 0, 0, 63, 4502,
	0, 0, 0, 5482, 0, 0, 0, 0, 0, 0,
	0, 55, 0, 122, 0, 0, 0, 0, 0, 106,
	119, 0, 0, 0, 0, 0, 0, 0, 75, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 58, 0, 0, 0, 2024, 2024,
	0, 0, 2024, 3645, 3645, 2024, 0, 0, 0, 2024,
	0, 0, 0, 0, 0, 107, 2024, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2024,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 298, 0, 298, 298, 0, 0, 298, 0,
	0, 0, 2024, 2024, 2024, 2024, 2024, 0, 0, 0,
	0, 0, 2024, 0, 2024, 0, 0, 3645, 3645, 3645,
	3645, 3645, 3645, 3645, 3645, 3645, 3645, 3645, 3645, 3645,
	3645, 3645, 3645, 3645, 3645, 3645, 3645, 0, 0, 0,
	3645, 0, 0, 2024, 2024, 0, 76, 0, 0, 0,
	0, 0, 0, 0, 0, 2024, 0, 0, 0, 0,
	0, 0, 0, 0, 2024, 0, 0, 0, 0, 0,
	0, 0, 0, 298, 0, 298, 298, 0, 0, 298,
	298, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 943, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3346, 3347, 0, 3349, 0, 0,
	0, 0, 0, 0, 111, 0, 0, 0, 0, 0,
	2024, 0, 0, 0, 0, 0, 0, 0, 0, 4677,
	0, 0, 59, 0, 0, 0, 0, 0, 2024, 0,
	0, 1299, 0, 298, 298, 2535, 0, 0, 0, 62,
	0, 0, 0, 0, 65, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 77, 0, 0, 0, 0, 2024,
	298, 298, 64, 205, 0, 114, 0, 0, 118, 0,
	5334, 0, 0, 0, 60, 0, 0, 0, 174, 0,
	0, 0, 0, 0, 2024, 2024, 61, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 261,
	0, 0, 0, 0, 0, 0, 0, 68, 909, 0,
	0, 0, 0, 166, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	172, 0, 0, 0, 920, 0, 0, 0, 0, 2535,
	0, 3473, 0, 0, 0, 0, 0, 0, 0, 0,
	4783, 0, 0, 263, 0, 922, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 298,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 921,
	0, 171, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 298, 0, 211, 0, 0,
	2024, 0, 0, 0, 0, 262, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2045, 2046, 0,
	0, 255, 0, 0, 0, 0, 1988, 1989, 0, 0,
	256, 0, 1214, 914, 206, 0, 0, 0, 0, 210,
	930, 0, 1988, 1989, 0, 0, 0, 2024, 2024, 0,
	2019, 0, 2024, 2024, 0, 919, 2024, 2024, 1991, 0,
	209, 2024, 0, 0, 0, 2024, 2019, 0, 0, 0,
	2024, 0, 0, 0, 1991, 3533, 3534, 0, 0, 0,
	0, 3540, 0, 0, 0, 2975, 0, 2044, 0, 0,
	0, 0, 0, 0, 0, 1391, 1990, 0, 0, 0,
	3554, 3555, 0, 2044, 0, 0, 2856, 2010, 0, 918,
	0, 0, 1990, 0, 0, 0, 2007, 0, 0, 0,
	0, 0, 0, 2010, 0, 0, 843, 0, 0, 0,
	0, 0, 2007, 0, 0, 0, 4894, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3564, 0, 0, 916, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3578, 2975, 0,
	0, 0, 0, 0, 3539, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3590, 0, 0, 0, 0, 0,
	3532, 0, 0, 0, 0, 0, 0, 2013, 2014, 2015,
	2016, 0, 0, 0, 0, 0, 0, 1996, 0, 0,
	2535, 0, 0, 2013, 2014, 2015, 2016, 929, 2160, 0,
	1387, 0, 0, 1996, 298, 0, 0, 2024, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	298, 2160, 298, 0, 0, 0, 0, 0, 0, 0,
	943, 0, 0, 0, 0, 0, 0, 0, 2547, 943,
	0, 2018, 2020, 0, 2024, 2024, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2018, 2020, 0,
	0, 0, 0, 0, 0, 2985, 2985, 2985, 0, 298,
	2005, 2006, 0, 0, 0, 0, 298, 0, 0, 0,
	911, 0, 2138, 0, 0, 0, 2005, 2006, 0, 0,
	0, 0, 5029, 1658, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2011, 0, 0, 0, 0, 0,
	3683, 0, 0, 915, 0, 0, 0, 0, 0, 0,
	2011, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2024, 2024, 2024, 0, 0, 0, 0, 0, 0,
	0, 0, 2024, 2024, 3645, 2975, 0, 0, 0, 0,
	0, 2024, 0, 0, 2024, 842, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 925, 0, 0, 0, 0, 0, 0, 0, 913,
	0, 0, 0, 0, 0, 2041, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3645, 2975, 0,
	0, 2041, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2024, 0, 0, 0, 0, 0,
	0, 0, 2024, 2975, 0, 1214, 0, 0, 0, 0,
	2024, 0, 910, 0, 0, 0, 0, 1214, 923, 0,
	0, 2024, 0, 2024, 0, 2017, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2017, 917, 0, 0, 0, 0, 0, 2024, 0,
	0, 2012, 0, 0, 0, 5150, 0, 844, 3823, 0,
	0, 0, 0, 0, 0, 0, 0, 2012, 912, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 298, 0, 927, 928, 943, 924, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2043, 0,
	3882, 3883, 0, 0, 3645, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2043, 298, 0, 0, 0, 0,
	0, 0, 0, 5206, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 298, 2024, 3645, 0, 0, 2024,
	0, 0, 0, 0, 0, 298, 0, 0, 0, 0,
	0, 0, 298, 0, 0, 0, 0, 0, 3645, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 298, 0,
	298, 0, 0, 0, 0, 0, 298, 0, 0, 0,
	0, 0, 0, 5270, 0, 0, 0, 0, 0, 0,
	0, 0, 2008, 2004, 0, 2001, 1999, 2000, 1992, 1993,
	1994, 1995, 1997, 1998, 0, 0, 0, 0, 2008, 2004,
	0, 2001, 1999, 2000, 1992, 1993, 1994, 1995, 1997, 1998,
	0, 0, 0, 0, 0, 298, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 298, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	943, 298, 0, 298, 0, 298, 0, 298, 0, 298,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1391, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1391, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 298, 298, 298, 298, 298, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1391, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2024, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2724, 0,
	0, 0, 0, 0, 0, 4103, 4104, 0, 2024, 4107,
	0, 1391, 0, 4110, 0, 0, 0, 0, 1391, 0,
	0, 0, 4114, 0, 0, 0, 0, 0, 0, 0,
	0, 4121, 0, 0, 1391, 0, 3683, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4134, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4157, 4158, 0, 4159, 4160, 4161, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4167, 0, 1391, 0, 4169, 0, 0, 0,
	0, 0, 2024, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4198,
	4199, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4210, 1988, 1989,
	0, 2021, 2022, 2023, 2032, 2033, 2034, 0, 0, 0,
	1387, 0, 4219, 0, 0, 0, 2024, 0, 0, 0,
	0, 2025, 2019, 0, 0, 0, 1387, 0, 0, 0,
	1991, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	298, 2038, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2044,
	298, 0, 0, 0, 0, 0, 0, 943, 1990, 943,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2010,
	0, 0, 0, 0, 0, 0, 0, 0, 2007, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4285, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 298, 0, 0,
	943, 0, 0, 0, 0, 0, 0, 0, 0, 4303,
	0, 0, 0, 0, 0, 0, 298, 0, 0, 298,
	0, 0, 0, 298, 0, 298, 0, 0, 0, 0,
	0, 0, 298, 298, 0, 0, 0, 0, 0, 0,
	0, 0, 298, 4334, 0, 0, 0, 0, 0, 2013,
	2014, 2015, 2016, 0, 0, 0, 0, 0, 0, 1996,
	0, 0, 0, 0, 0, 0, 0, 1988, 1989, 0,
	2021, 2022, 2023, 2032, 2033, 2034, 0, 0, 0, 0,
	0, 0, 0, 0, 4359, 4360, 0, 0, 0, 0,
	2025, 2019, 0, 0, 0, 0, 0, 0, 0, 1991,
	0, 0, 2029, 0, 0, 0, 2039, 1391, 0, 1391,
	2038, 298, 0, 2018, 2020, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1391, 298, 0, 0, 2044, 0,
	0, 0, 0, 2035, 0, 2036, 0, 1990, 0, 298,
	0, 0, 2005, 2006, 0, 0, 0, 2231, 2010, 0,
	0, 0, 0, 0, 1391, 0, 0, 2007, 0, 0,
	0, 2027, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2011, 0, 298, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2138, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2138, 0, 0, 0, 2037, 0, 0, 943, 0,
	4475, 0, 0, 0, 0, 0, 0, 0, 2013, 2014,
	2015, 2016, 0, 0, 0, 0, 2026, 0, 1996, 0,
	0, 0, 1391, 0, 0, 0, 0, 2041, 0, 0,
	0, 298, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 298, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2029, 0, 0, 0, 2039, 0, 0, 0, 0,
	0, 0, 2018, 2020, 0, 0, 0, 0, 0, 4522,
	4523, 0, 0, 0, 0, 4527, 4528, 2017, 0, 0,
	4531, 4532, 2035, 0, 2036, 0, 0, 298, 4536, 0,
	0, 2005, 2006, 0, 0, 0, 0, 0, 0, 4540,
	0, 0, 0, 2012, 0, 0, 0, 298, 0, 298,
	2027, 0, 0, 0, 0, 4545, 0, 0, 0, 0,
	298, 0, 0, 0, 0, 2011, 0, 0, 0, 0,
	0, 0, 0, 0, 2030, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2043, 0, 0, 0, 2037, 298, 298, 298, 298, 0,
	0, 0, 0, 1391, 1391, 298, 0, 0, 0, 0,
	298, 0, 0, 0, 1391, 2026, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2041, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1391, 298, 0, 0, 0, 0, 0, 0, 0, 298,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2028, 1391,
	0, 0, 0, 0, 0, 0, 0, 1214, 0, 0,
	2002, 2003, 2009, 2031, 2008, 2004, 2017, 2001, 1999, 2000,
	1992, 1993, 1994, 1995, 1997, 1998, 0, 0, 0, 0,
	0, 2852, 0, 0, 0, 2853, 0, 0, 0, 0,
	0, 0, 2012, 0, 1391, 0, 1391, 0, 1391, 0,
	0, 0, 0, 0, 0, 1988, 1989, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1391, 1391, 0, 0,
	0, 0, 0, 2030, 0, 0, 4702, 0, 0, 2019,
	1391, 0, 0, 0, 0, 0, 0, 1991, 0, 0,
	0, 0, 1391, 0, 0, 1391, 1391, 1391, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2043,
	0, 0, 0, 0, 0, 0, 2044, 0, 0, 0,
	0, 0, 0, 0, 0, 1990, 4739, 4740, 0, 0,
	0, 0, 0, 0, 0, 0, 2010, 0, 0, 0,
	0, 0, 0, 0, 0, 2007, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2028, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2002,
	2003, 2009, 2031, 2008, 2004, 0, 2001, 1999, 2000, 1992,
	1993, 1994, 1995, 1997, 1998, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4550, 0, 2013, 2014, 2015, 2016,
	2231, 2231, 1391, 0, 0, 0, 1996, 0, 4826, 4827,
	4828, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1387, 0, 0, 0, 0, 0, 0, 0,
	0, 2724, 0, 0, 4837, 4838, 3002, 0, 0, 0,
	0, 0, 0, 1988, 1989, 0, 2021, 2022, 2023, 2032,
	2033, 2034, 4846, 4849, 0, 0, 0, 0, 1387, 0,
	2018, 2020, 0, 0, 0, 0, 2025, 2019, 0, 0,
	0, 3000, 0, 0, 0, 1991, 3004, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2038, 0, 2160, 2005,
	2006, 0, 0, 0, 0, 1391, 0, 0, 3005, 0,
	298, 0, 0, 0, 2044, 0, 0, 0, 0, 0,
	943, 0, 0, 1990, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2011, 2010, 0, 0, 0, 0, 0,
	0, 0, 0, 2007, 0, 0, 0, 0, 0, 3006,
	4909, 0, 0, 0, 0, 0, 0, 0, 298, 4917,
	0, 0, 298, 298, 0, 0, 0, 0, 0, 1391,
	0, 0, 0, 0, 4925, 0, 1391, 1214, 3007, 0,
	0, 0, 0, 0, 0, 1391, 0, 0, 0, 0,
	0, 0, 0, 0, 4936, 0, 0, 4938, 298, 0,
	0, 0, 1391, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2041, 0, 0, 3008, 0, 0,
	0, 0, 0, 4963, 2013, 2014, 2015, 2016, 0, 0,
	0, 0, 0, 0, 1996, 0, 0, 0, 0, 0,
	298, 298, 0, 0, 298, 0, 0, 0, 0, 0,
	0, 2160, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 298, 0, 0, 0, 0,
	0, 0, 0, 0, 2017, 0, 0, 2029, 0, 3009,
	0, 2039, 0, 0, 0, 0, 0, 0, 2018, 2020,
	0, 0, 0, 0, 0, 0, 0, 3010, 0, 0,
	2012, 0, 0, 0, 0, 0, 0, 3011, 2035, 0,
	2036, 0, 0, 828, 0, 0, 0, 2005, 2006, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3012, 0, 811, 0, 2027, 0, 0, 812,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2011, 0, 0, 0, 0, 0, 0, 1391, 0,
	0, 0, 0, 0, 0, 0, 298, 2043, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 813, 0, 943, 5070, 0, 0, 0, 5074,
	0, 0, 0, 814, 298, 0, 0, 0, 0, 0,
	2037, 0, 0, 0, 0, 0, 0, 2231, 0, 0,
	0, 0, 0, 0, 0, 815, 0, 0, 298, 0,
	0, 2026, 0, 0, 0, 0, 0, 0, 1387, 0,
	0, 0, 2041, 3013, 0, 0, 0, 0, 834, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1391, 0,
	816, 2008, 2004, 0, 2001, 1999, 2000, 1992, 1993, 1994,
	1995, 1997, 1998, 0, 1391, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 817, 810, 0, 0, 0,
	0, 0, 2017, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3014, 3015, 0, 0, 818,
	0, 0, 0, 0, 819, 0, 0, 0, 2012, 0,
	0, 298, 0, 298, 0, 0, 0, 0, 0, 0,
	2724, 843, 0, 3016, 0, 0, 0, 0, 0, 4849,
	0, 0, 0, 3021, 0, 0, 0, 0, 0, 2030,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 833,
	0, 298, 0, 0, 3017, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1391, 3018,
	0, 0, 0, 0, 0, 2043, 0, 0, 0, 0,
	1391, 0, 1391, 1214, 0, 0, 0, 0, 1391, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1391,
	1391, 3019, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 830, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3020, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2028, 5288, 5288, 5288, 0, 0, 0,
	0, 0, 0, 0, 0, 2002, 2003, 2009, 2031, 2008,
	2004, 0, 2001, 1999, 2000, 1992, 1993, 1994, 1995, 1997,
	1998, 0, 0, 0, 0, 0, 0, 0, 0, 840,
	0, 821, 5313, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1387, 1387, 0,
	1988, 1989, 0, 2021, 2022, 2023, 2032, 2033, 2034, 0,
	0, 0, 841, 0, 822, 0, 0, 0, 0, 0,
	0, 0, 0, 2025, 2019, 0, 0, 0, 0, 0,
	0, 0, 1991, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2038, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 5288,
	842, 2044, 0, 0, 0, 0, 0, 0, 823, 943,
	1990, 0, 0, 838, 839, 0, 836, 0, 0, 0,
	0, 2010, 0, 0, 831, 0, 0, 824, 0, 0,
	2007, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 5407, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 825, 0, 832, 0, 0,
	0, 0, 0, 0, 0, 0, 826, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 827, 0, 0, 0, 0, 835, 0, 0,
	0, 2013, 2014, 2015, 2016, 0, 0, 0, 0, 0,
	0, 1996, 844, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 829, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 298, 0, 0,
	0, 0, 5288, 5471, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2029, 0, 0, 0, 2039, 0,
	0, 0, 0, 0, 0, 2018, 2020, 0, 0, 0,
	298, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2035, 0, 2036, 0, 0,
	0, 0, 0, 0, 2005, 2006, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2027, 0, 298, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 298, 0, 0, 2011, 0,
	0, 1391, 1391, 0, 0, 0, 0, 298, 0, 0,
	0, 298, 0, 298, 0, 0, 0, 0, 298, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1391, 1387, 828,
	0, 0, 0, 0, 0, 0, 0, 2037, 0, 0,
	0, 0, 0, 0, 0, 1391, 0, 0, 1276, 0,
	811, 0, 0, 0, 0, 812, 0, 1391, 2026, 0,
	1391, 0, 0, 0, 0, 0, 0, 0, 0, 2041,
	0, 298, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2231, 0, 0,
	0, 1391, 0, 0, 0, 0, 0, 0, 813, 0,
	300, 300, 300, 0, 0, 0, 0, 0, 0, 814,
	0, 0, 0, 0, 0, 0, 0, 0, 1988, 1989,
	0, 2021, 2022, 2023, 2032, 2033, 2034, 0, 0, 2017,
	0, 815, 0, 0, 300, 0, 0, 0, 0, 0,
	0, 2025, 2019, 0, 0, 0, 0, 0, 0, 0,
	1991, 0, 0, 0, 834, 2012, 0, 0, 0, 0,
	0, 2038, 0, 300, 0, 0, 0, 0, 0, 2231,
	0, 0, 0, 0, 0, 0, 816, 0, 0, 2044,
	0, 0, 0, 0, 0, 0, 2030, 0, 1990, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2010,
	0, 817, 810, 0, 0, 0, 0, 0, 2007, 0,
	0, 0, 0, 0, 0, 1387, 0, 0, 0, 0,
	0, 0, 2043, 1387, 0, 818, 0, 0, 0, 0,
	819, 0, 0, 0, 0, 0, 0, 2160, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 843, 0, 0,
	0, 0, 0, 0, 0, 0, 1391, 304, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 833, 0, 0, 0, 298,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2013,
	2014, 2015, 2016, 0, 0, 0, 0, 0, 0, 1996,
	2028, 0, 0, 0, 0, 0, 0, 2160, 0, 2160,
	0, 0, 2002, 2003, 2009, 2031, 2008, 2004, 0, 2001,
	1999, 2000, 1992, 1993, 1994, 1995, 1997, 1998, 0, 0,
	1391, 298, 1391, 0, 0, 0, 1391, 4119, 830, 0,
	0, 0, 2029, 935, 1391, 1391, 2039, 298, 0, 0,
	298, 0, 0, 2018, 2020, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 935, 2035, 0, 2036, 0, 0, 298, 0,
	0, 0, 2005, 2006, 0, 0, 0, 1391, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2027, 0, 0, 0, 0, 0, 1391, 0, 0,
	0, 0, 0, 0, 0, 0, 2011, 821, 0, 1391,
	0, 1391, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 841, 0,
	822, 298, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 298, 0, 0, 2037, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1391, 0,
	0, 1391, 0, 0, 0, 0, 2026, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 842, 2041, 0, 0,
	0, 0, 0, 0, 823, 0, 0, 0, 0, 838,
	839, 0, 836, 0, 0, 0, 0, 0, 0, 0,
	831, 0, 0, 824, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2231, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2017, 0, 0,
	1391, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 825, 0, 832, 0, 0, 0, 1391, 0, 0,
	0, 0, 826, 2012, 0, 0, 0, 2231, 2231, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 827, 0,
	0, 0, 0, 835, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2030, 0, 2231, 2231, 844, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 829,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 298, 2231,
	2043, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1391, 1391, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1391, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 298, 0, 0, 0, 0, 0, 2028, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2002, 2003, 2009, 2031, 2008, 2004, 0, 2001, 1999, 2000,
	1992, 1993, 1994, 1995, 1997, 1998, 0, 0, 0, 2160,
	0, 0, 0, 0, 0, 3602, 0, 0, 0, 0,
	298, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 298, 298, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 300, 0,
	300, 300, 0, 0, 300, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1391, 1391, 0, 1391, 0, 0, 0, 2160, 0,
	0, 0, 0, 1391, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2160, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2231, 0, 0, 0, 0, 298,
	0, 0, 0, 0, 0, 0, 0, 0, 2231, 300,
	1557, 300, 300, 0, 0, 300, 300, 0, 0, 0,
	0, 1557, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2160, 2160, 0, 0, 300, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1391, 0, 2160, 0, 298, 2160, 0,
	0, 0, 1557, 0, 0, 0, 0, 1391, 0, 0,
	0, 0, 0, 0, 0, 0, 1391, 0, 0, 0,
	0, 1391, 1391, 1391, 0, 0, 0, 0, 0, 300,
	300, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1391, 0, 1391, 0, 1557, 0,
	0, 1391, 0, 1391, 0, 1557, 300, 300, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1557, 1988, 1989, 0, 2021, 2022, 2023, 2032, 2033,
	2034, 0, 0, 1268, 1391, 298, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2231, 2019, 0, 0, 0,
	0, 0, 0, 0, 1991, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2038, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1557, 0, 2044, 0, 0, 0, 0, 0, 0,
	0, 0, 1990, 0, 0, 298, 0, 0, 0, 0,
	0, 0, 0, 2010, 0, 0, 0, 0, 0, 1554,
	0, 0, 2007, 0, 0, 300, 0, 0, 0, 0,
	1676, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 300, 0, 0, 1391, 0, 0, 0, 0, 0,
	0, 0, 1391, 0, 0, 0, 1391, 1391, 0, 1391,
	0, 1676, 0, 0, 0, 0, 1391, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1391, 1391, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2013, 2014, 2015, 2016, 0, 1391, 0,
	0, 0, 0, 1996, 0, 0, 0, 1676, 0, 0,
	0, 0, 0, 0, 1676, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1676, 0, 0, 0, 0, 0, 1391, 0, 1391, 0,
	0, 0, 0, 0, 0, 0, 2029, 0, 0, 0,
	2039, 0, 0, 0, 0, 0, 0, 2018, 2020, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1391, 0, 0, 0, 2035, 0, 2036,
	0, 0, 0, 0, 0, 0, 2005, 2006, 0, 0,
	1676, 0, 0, 0, 0, 0, 0, 1391, 0, 0,
	0, 0, 0, 0, 2160, 2027, 2160, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2011, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1391,
	1391, 0, 0, 0, 0, 0, 2231, 0, 2231, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2037,
	300, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1557, 0, 0, 0, 0, 300, 300, 300, 0,
	1391, 0, 0, 0, 0, 1391, 300, 0, 0, 0,
	0, 2041, 0, 0, 0, 300, 0, 0, 0, 0,
	0, 1557, 0, 0, 0, 0, 0, 0, 0, 0,
	1391, 1391, 1391, 1391, 1391, 1391, 1391, 0, 0, 0,
	0, 0, 0, 0, 0, 300, 0, 0, 0, 0,
	0, 0, 300, 0, 1391, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2017, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1391, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2012, 0, 0,
	0, 0, 0, 0, 0, 2231, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1557,
	0, 0, 0, 0, 0, 0, 0, 1391, 2030, 1391,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2043, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1391, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1554, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2231, 0, 0, 2201, 0, 0, 0, 0,
	0, 0, 0, 0, 2201, 0, 0, 0, 0, 0,
	1676, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2028, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1391, 0, 2002, 2003, 2009, 2031, 2008, 2004,
	0, 2001, 1999, 2000, 1992, 1993, 1994, 1995, 1997, 1998,
	1391, 0, 0, 1391, 1391, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 300, 0,
	1557, 1557, 300, 0, 0, 0, 0, 0, 1391, 0,
	0, 1557, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1988, 1989, 0,
	2021, 2022, 2023, 2032, 2033, 2034, 1391, 1557, 1554, 1391,
	0, 300, 0, 0, 0, 0, 0, 0, 0, 0,
	2025, 2019, 0, 0, 0, 0, 0, 0, 0, 1991,
	300, 0, 0, 0, 0, 0, 1557, 0, 0, 0,
	2038, 300, 0, 0, 0, 0, 0, 0, 300, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2044, 0,
	0, 0, 0, 2231, 300, 0, 300, 1990, 0, 0,
	0, 0, 300, 0, 0, 0, 0, 0, 2010, 0,
	0, 1557, 0, 1557, 0, 1557, 0, 2007, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1557, 1557, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1557, 0, 0,
	0, 300, 0, 0, 0, 0, 0, 1391, 0, 1557,
	0, 0, 1557, 1557, 1557, 0, 0, 0, 0, 0,
	0, 0, 1391, 300, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 300, 300, 0, 300,
	0, 300, 0, 300, 0, 300, 0, 0, 2013, 2014,
	2015, 2016, 0, 0, 0, 0, 0, 0, 1996, 1676,
	1676, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1554, 2231, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1391, 1391, 0, 0, 0, 0, 0,
	300, 300, 300, 300, 300, 0, 1676, 0, 0, 0,
	0, 2029, 0, 0, 1391, 2039, 0, 1391, 0, 0,
	0, 1391, 2018, 2020, 0, 1555, 0, 0, 0, 0,
	0, 1391, 0, 0, 0, 1676, 1677, 0, 0, 0,
	0, 0, 2035, 0, 2036, 0, 0, 0, 0, 0,
	0, 2005, 2006, 0, 0, 0, 0, 0, 0, 1557,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2027, 0, 0, 0, 0, 0, 0, 1677, 0, 0,
	1676, 0, 1676, 0, 1676, 2011, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1676, 1676, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1676, 0, 1391, 0,
	0, 0, 0, 1677, 0, 0, 0, 0, 1676, 0,
	1677, 1676, 1676, 1676, 2037, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1677, 0, 0, 0,
	0, 0, 1557, 0, 0, 2201, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2041, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1677, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1557, 0, 0, 2017, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1391, 300, 0, 0, 1557,
	0, 0, 2012, 0, 1988, 1989, 0, 2021, 2022, 2023,
	2032, 2033, 2034, 0, 0, 0, 300, 0, 1554, 0,
	0, 0, 0, 300, 0, 300, 0, 2025, 2019, 0,
	0, 0, 0, 2030, 0, 0, 1991, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2038, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2044, 0, 0, 0, 2043,
	0, 0, 0, 300, 1990, 0, 300, 0, 0, 0,
	0, 0, 0, 0, 0, 2010, 0, 0, 0, 0,
	0, 0, 300, 0, 2007, 300, 0, 0, 0, 300,
	0, 300, 0, 0, 0, 0, 0, 0, 300, 300,
	0, 1554, 0, 0, 0, 0, 0, 0, 300, 0,
	0, 0, 0, 1391, 0, 1391, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2028, 0, 0,
	0, 0, 0, 0, 0, 1557, 0, 0, 0, 2002,
	2003, 2009, 2031, 2008, 2004, 0, 2001, 1999, 2000, 1992,
	1993, 1994, 1995, 1997, 1998, 2013, 2014, 2015, 2016, 0,
	0, 0, 1554, 0, 0, 1996, 0, 300, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 300, 0, 0, 0, 0, 0, 0, 1554, 0,
	0, 0, 0, 0, 0, 300, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2029, 0,
	0, 0, 2039, 0, 0, 0, 0, 0, 0, 2018,
	2020, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 300, 1557, 1555, 0, 0, 2035,
	0, 2036, 0, 0, 0, 0, 0, 0, 2005, 2006,
	0, 1557, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1677, 2027, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2011, 0, 300, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 300, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 300, 0,
	0, 2037, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1554, 0, 0, 0, 0, 0,
	0, 0, 2026, 0, 0, 1557, 0, 0, 0, 0,
	0, 0, 0, 2041, 1555, 0, 0, 1557, 0, 1557,
	0, 0, 0, 0, 0, 1557, 0, 0, 0, 0,
	0, 0, 0, 300, 0, 0, 1557, 1557, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 300, 0, 300, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 300, 0, 0, 0,
	0, 0, 0, 2017, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1554, 0, 0, 0, 0, 2012,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1676, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 300, 300, 300, 300, 0, 0, 0, 0, 0,
	2030, 300, 0, 0, 0, 0, 300, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2043, 300, 0, 0,
	0, 0, 0, 0, 0, 300, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1677, 1677, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1555, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1676, 0, 0, 0, 0, 0,
	0, 0, 1677, 0, 0, 0, 1676, 0, 1676, 0,
	0, 0, 0, 0, 1676, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2028, 1676, 1676, 0, 0, 0,
	0, 1677, 0, 0, 0, 0, 2002, 2003, 2009, 2031,
	2008, 2004, 0, 2001, 1999, 2000, 1992, 1993, 1994, 1995,
	1997, 1998, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3601, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1677, 0, 1677, 0,
	1677, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1677, 1677,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1677, 1988, 1989, 0, 2021, 2022, 2023, 2032,
	2033, 2034, 0, 0, 1677, 0, 0, 1677, 1677, 1677,
	0, 0, 0, 0, 0, 0, 2025, 2019, 0, 0,
	0, 0, 0, 0, 0, 1991, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2038, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2044, 0, 0, 0, 0, 0,
	0, 0, 0, 1990, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2010, 0, 0, 0, 0, 0,
	0, 0, 0, 2007, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1557,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1555, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1557, 0, 2013, 2014, 2015, 2016, 0, 0,
	0, 0, 0, 0, 1996, 0, 0, 1557, 0, 0,
	0, 0, 0, 0, 0, 0, 300, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 300, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1557, 0,
	0, 0, 0, 0, 0, 0, 0, 2029, 0, 0,
	0, 2039, 0, 0, 0, 0, 0, 0, 2018, 2020,
	0, 0, 0, 0, 300, 0, 0, 1555, 300, 300,
	0, 0, 0, 0, 0, 0, 0, 0, 2035, 0,
	2036, 0, 0, 0, 0, 0, 0, 2005, 2006, 0,
	0, 0, 0, 1988, 1989, 0, 0, 0, 0, 2032,
	2033, 2034, 0, 0, 300, 0, 2027, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2019, 0, 0,
	0, 2011, 0, 0, 0, 1991, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2038, 0, 1555, 0,
	0, 0, 0, 0, 0, 0, 300, 300, 1554, 0,
	300, 0, 0, 0, 2044, 0, 0, 300, 0, 0,
	0, 0, 0, 1990, 1555, 0, 0, 0, 0, 0,
	2037, 300, 0, 0, 2010, 0, 0, 0, 0, 0,
	0, 0, 0, 2007, 0, 0, 0, 0, 0, 0,
	0, 2026, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1554, 2041, 1557, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1554, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1554, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2017, 0, 2013, 2014, 2015, 2016, 0, 0,
	0, 0, 300, 0, 1996, 0, 0, 1557, 0, 1557,
	0, 0, 0, 1557, 0, 0, 0, 0, 2012, 0,
	300, 1557, 1557, 0, 0, 1557, 0, 0, 0, 0,
	300, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2029, 0, 2030,
	1555, 2039, 0, 0, 300, 0, 0, 0, 2018, 2020,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1557, 2043, 0, 2005, 2006, 0,
	0, 0, 0, 0, 0, 0, 1557, 0, 1557, 0,
	0, 0, 0, 0, 0, 0, 2027, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2011, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1554, 0, 0, 0, 0, 0, 0, 0,
	1555, 0, 0, 0, 0, 1557, 0, 300, 1557, 300,
	0, 0, 0, 2028, 0, 0, 1677, 0, 0, 0,
	0, 0, 0, 0, 0, 2002, 2003, 2009, 2031, 2008,
	2004, 0, 2001, 1999, 2000, 1992, 1993, 1994, 1995, 1997,
	1998, 0, 0, 0, 0, 0, 0, 300, 0, 0,
	3598, 0, 2041, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1676, 0, 1676, 0,
	0, 0, 1554, 0, 0, 0, 0, 0, 0, 935,
	1676, 1676, 0, 0, 0, 0, 0, 1557, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1557, 0, 0, 0, 0, 0,
	0, 0, 2017, 0, 0, 0, 0, 0, 0, 0,
	1677, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1677, 0, 1677, 0, 0, 0, 2012, 0,
	1677, 0, 0, 1676, 0, 0, 0, 0, 0, 0,
	0, 1677, 1677, 0, 0, 1676, 0, 1676, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2030,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1988, 1989,
	0, 2021, 2022, 2023, 2032, 2033, 2034, 0, 0, 0,
	0, 0, 0, 0, 0, 2043, 0, 0, 0, 0,
	0, 2025, 2019, 0, 1554, 0, 0, 1554, 0, 0,
	1991, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2038, 0, 0, 0, 0, 0, 0, 0, 1557,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2044,
	0, 0, 0, 0, 0, 0, 0, 0, 1990, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2010,
	0, 0, 0, 0, 0, 300, 0, 0, 2007, 0,
	0, 0, 0, 2028, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1554, 0, 2031, 2008,
	2004, 0, 2001, 1999, 2000, 1992, 1993, 1994, 1995, 1997,
	1998, 0, 0, 1554, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2013,
	2014, 2015, 2016, 0, 0, 0, 0, 0, 0, 1996,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2029, 300, 0, 0, 2039, 0, 0, 0,
	0, 0, 0, 2018, 2020, 0, 0, 0, 1557, 1557,
	0, 1557, 0, 0, 0, 0, 0, 0, 0, 0,
	1557, 0, 0, 2035, 0, 2036, 300, 0, 1554, 0,
	0, 0, 2005, 2006, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1557, 2027, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2201, 0, 2011, 0, 0, 0,
	0, 300, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 300, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 300, 0, 0, 0, 300, 0, 300,
	0, 0, 0, 0, 300, 0, 0, 0, 0, 0,
	1557, 0, 0, 0, 0, 2037, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1557, 0, 0, 2026, 0, 1557, 1557,
	1557, 0, 0, 0, 1555, 0, 0, 2041, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1557, 0, 1557, 0, 0, 0, 300, 1557, 0,
	1557, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1555, 0, 0,
	0, 1557, 0, 0, 0, 0, 0, 2017, 0, 0,
	0, 0, 1555, 0, 0, 0, 0, 1676, 1676, 0,
	1676, 0, 0, 0, 0, 0, 0, 0, 0, 1676,
	0, 0, 0, 2012, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1555, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2030, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2043, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1676,
	0, 0, 0, 1557, 1557, 0, 1557, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1676, 0, 1557, 1557, 0, 1676, 1676, 1676,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1557, 0, 0, 0, 0,
	1676, 0, 1676, 0, 0, 300, 0, 1676, 2028, 1554,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2002, 2003, 2009, 2031, 2008, 2004, 0, 2001, 1999, 2000,
	1992, 1993, 1994, 1995, 1997, 1998, 0, 0, 1555, 0,
	1554, 0, 0, 0, 0, 3597, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 300, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1557, 0, 0, 300, 0, 0, 300, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1557, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 300, 0, 0, 0, 0, 0,
	0, 0, 1677, 0, 1677, 0, 0, 0, 1555, 0,
	0, 0, 0, 0, 0, 0, 1677, 1677, 0, 0,
	0, 0, 0, 0, 0, 0, 1557, 1557, 0, 0,
	1557, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1554, 1554, 0, 1554, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 300, 0, 0,
	0, 0, 0, 1676, 1676, 0, 0, 1557, 300, 1677,
	0, 0, 1557, 0, 0, 0, 0, 0, 0, 0,
	0, 1677, 0, 1677, 1554, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1557, 1557, 1557,
	1557, 1557, 1557, 1557, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1557, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1555, 0, 0, 1555, 0, 0, 0, 0, 0, 0,
	0, 1557, 0, 0, 0, 0, 0, 0, 0, 1554,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1554, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1557, 0, 1557, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1555, 0, 0, 1676, 1676, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1555,
	0, 0, 0, 0, 1557, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 300, 0, 0, 0, 0, 0,
	0, 1988, 1989, 0, 2021, 2022, 2023, 2032, 2033, 2034,
	0, 0, 0, 0, 0, 965, 1554, 0, 0, 0,
	0, 1676, 0, 0, 2025, 2019, 0, 0, 0, 0,
	0, 0, 0, 1991, 0, 0, 968, 0, 0, 0,
	0, 969, 0, 0, 2038, 0, 1676, 1676, 1676, 1676,
	1676, 1676, 1676, 0, 0, 0, 0, 0, 0, 1557,
	0, 0, 2044, 0, 0, 0, 0, 0, 300, 0,
	1554, 1990, 0, 0, 0, 0, 0, 1557, 0, 0,
	1557, 1557, 2010, 0, 970, 0, 984, 0, 0, 0,
	0, 2007, 0, 0, 0, 0, 0, 0, 0, 0,
	1554, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 971, 0, 1555, 0, 300, 972, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1557, 0, 0, 1557, 0, 0, 0,
	993, 0, 0, 1554, 0, 1676, 0, 973, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 991, 0, 0, 0, 0, 0, 0, 0,
	300, 300, 2013, 2014, 2015, 2016, 0, 0, 0, 0,
	0, 0, 1996, 0, 0, 0, 0, 966, 964, 0,
	0, 0, 0, 1554, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 974, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2029, 0, 0, 995, 2039,
	0, 0, 0, 843, 0, 0, 2018, 2020, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2035, 0, 2036, 0,
	0, 0, 0, 0, 0, 2005, 2006, 0, 1554, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2027, 0, 1676, 0, 0, 1676,
	1676, 0, 0, 0, 0, 300, 0, 0, 0, 2011,
	0, 0, 0, 1677, 1677, 0, 1677, 0, 0, 0,
	0, 0, 0, 0, 994, 1677, 0, 0, 0, 0,
	0, 0, 0, 0, 989, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1554, 0, 0, 1676, 0, 0, 2037, 0,
	0, 0, 0, 300, 0, 0, 0, 0, 1557, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1557, 2026,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2041, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 988, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 975, 0, 1677, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1677, 0,
	0, 0, 0, 1677, 1677, 1677, 976, 0, 0, 0,
	2017, 300, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1557, 1677, 0, 1677, 0,
	0, 0, 0, 1677, 0, 1555, 2012, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 842, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 963, 1555, 2030, 985, 0,
	0, 300, 0, 0, 0, 0, 0, 0, 0, 977,
	0, 0, 0, 1988, 1989, 0, 2021, 2022, 2023, 2032,
	2033, 2034, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2043, 0, 0, 2025, 2019, 983, 0,
	0, 0, 0, 0, 0, 1991, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2038, 978, 0, 0,
	0, 979, 998, 0, 997, 0, 0, 1676, 980, 0,
	0, 0, 0, 0, 2044, 0, 0, 1676, 0, 0,
	0, 0, 1557, 1990, 981, 0, 0, 0, 0, 990,
	0, 0, 0, 0, 2010, 999, 0, 996, 0, 0,
	0, 0, 0, 2007, 844, 0, 0, 0, 0, 0,
	0, 2028, 0, 0, 0, 0, 0, 0, 1555, 1555,
	0, 1555, 0, 2002, 2003, 2009, 2031, 2008, 2004, 0,
	2001, 1999, 2000, 1992, 1993, 1994, 1995, 1997, 1998, 1677,
	1677, 0, 0, 0, 0, 0, 0, 0, 3596, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1555, 0, 0, 0, 1676, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2013, 2014, 2015, 2016, 0, 0,
	0, 0, 0, 0, 1996, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1555, 0, 2029, 1086, 0,
	1138, 2039, 0, 0, 0, 0, 0, 0, 2018, 2020,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1555,
	0, 0, 0, 0, 0, 1094, 0, 0, 2035, 0,
	2036, 0, 0, 0, 0, 0, 0, 2005, 2006, 0,
	0, 0, 0, 1109, 0, 1092, 1091, 0, 0, 0,
	0, 1676, 0, 0, 0, 0, 2027, 0, 0, 0,
	0, 1677, 1677, 0, 0, 0, 0, 0, 0, 1111,
	0, 2011, 0, 0, 0, 1093, 0, 0, 0, 0,
	1096, 0, 0, 0, 0, 1150, 0, 1121, 0, 0,
	0, 0, 0, 0, 0, 1106, 1107, 0, 0, 0,
	0, 0, 0, 0, 0, 1126, 0, 0, 0, 0,
	0, 0, 1555, 0, 0, 0, 0, 1677, 0, 0,
	2037, 0, 0, 1139, 1098, 0, 0, 0, 0, 0,
	1099, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2026, 1677, 1677, 1677, 1677, 1677, 1677, 1677, 0,
	0, 0, 2041, 0, 1100, 0, 0, 0, 0, 0,
	0, 0, 0, 1136, 0, 0, 1555, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1555, 0, 1137, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2017, 0, 1102, 0, 0, 0, 0, 0,
	0, 0, 0, 1090, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2012, 1555,
	0, 1677, 0, 0, 1103, 1104, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1112, 1110, 0, 2030,
	0, 0, 0, 0, 1105, 0, 0, 0, 1122, 0,
	0, 1144, 1143, 0, 0, 0, 0, 0, 0, 1555,
	0, 0, 0, 0, 0, 0, 0, 1147, 1135, 0,
	0, 0, 0, 0, 0, 2043, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1140, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1555, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1677, 2028, 0, 1677, 1677, 0, 0, 0,
	0, 1097, 0, 0, 1149, 2002, 2003, 2009, 2031, 2008,
	2004, 0, 2001, 1999, 2000, 1992, 1993, 1994, 1995, 1997,
	1998, 0, 0, 0, 0, 0, 0, 0, 1095, 0,
	2853, 0, 0, 1130, 1131, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1133, 1555, 0,
	0, 1677, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1141, 1128, 0, 0, 0,
	0, 0, 0, 0, 1148, 1123, 0, 0, 1115, 1113,
	0, 0, 1118, 0, 0, 0, 0, 0, 0, 0,
	1119, 0, 0, 1088, 0, 1142, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1089, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1134, 0, 0, 1132, 0, 1120, 0, 0,
	0, 0, 0, 1117, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1146, 0, 0, 0, 0, 0,
	0, 0, 1124, 0, 1125, 0, 0, 0, 0, 0,
	0, 0, 0, 1101, 1145, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1127, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1129, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1677, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1677, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1552, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 308, 309, 311, 310, 312,
	313, 314, 315, 1558, 316, 317, 1559, 1560, 1561, 0,
	1562, 718, 1563, 1564, 1565, 318, 1566, 319, 320, 321,
	1330, 322, 323, 324, 325, 326, 327, 328, 719, 720,
	1677, 329, 721, 330, 722, 1567, 723, 331, 332, 333,
	334, 335, 336, 337, 1568, 1569, 0, 338, 724, 725,
	726, 1570, 339, 340, 727, 1571, 1638, 1572, 341, 342,
	343, 344, 345, 346, 347, 348, 0, 1573, 350, 351,
	352, 349, 353, 1574, 354, 0, 355, 356, 357, 358,
	359, 360, 361, 1575, 362, 363, 364, 1331, 365, 366,
	367, 1576, 1577, 1579, 1578, 1580, 1581, 1582, 368, 369,
	370, 371, 372, 0, 373, 375, 728, 729, 1583, 378,
	380, 374, 376, 1584, 379, 377, 381, 1585, 382, 383,
	384, 1586, 1587, 385, 386, 387, 1588, 388, 389, 390,
	1589, 391, 392, 393, 1590, 394, 395, 730, 396, 397,
	398, 400, 402, 399, 401, 403, 404, 405, 406, 407,
	731, 732, 408, 1591, 305, 1592, 0, 1677, 0, 0,
	409, 410, 411, 733, 0, 0, 0, 412, 1593, 413,
	414, 415, 1594, 416, 417, 1595, 1332, 418, 419, 420,
	734, 735, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 1596, 430, 736, 1597, 737, 431, 1598, 432, 433,
	434, 435, 436, 437, 438, 738, 739, 740, 531, 1334,
	439, 440, 441, 1599, 442, 443, 444, 445, 446, 0,
	0, 0, 306, 447, 448, 449, 1600, 1333, 741, 450,
	532, 451, 742, 743, 1601, 744, 1602, 452, 453, 455,
	1335, 745, 1336, 454, 456, 457, 1337, 458, 0, 0,
	0, 459, 460, 461, 462, 463, 464, 1603, 465, 467,
	466, 1604, 469, 746, 468, 1338, 470, 471, 1339, 1605,
	472, 473, 474, 475, 476, 477, 480, 1606, 1607, 478,
	479, 481, 482, 0, 483, 484, 486, 489, 485, 487,
	488, 490, 503, 504, 491, 492, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 506, 0, 505, 1340,
	507, 508, 509, 510, 511, 518, 520, 521, 516, 517,
	519, 522, 523, 525, 513, 514, 515, 1341, 524, 512,
	1608, 307, 1342, 526, 527, 528, 529, 1609, 747, 530,
	748, 533, 534, 1610, 0, 535, 0, 536, 1611, 1612,
	538, 539, 540, 1613, 1614, 541, 542, 749, 1343, 543,
	1344, 750, 544, 545, 537, 546, 547, 548, 549, 550,
	551, 552, 553, 554, 555, 1615, 556, 557, 751, 558,
	559, 560, 752, 561, 562, 563, 753, 564, 754, 565,
	566, 1616, 567, 568, 569, 0, 570, 571, 572, 573,
	574, 575, 576, 577, 755, 578, 579, 581, 580, 582,
	1617, 583, 0, 584, 585, 586, 0, 0, 0, 0,
	0, 587, 588, 590, 0, 591, 592, 593, 594, 589,
	595, 596, 597, 598, 599, 600, 1618, 602, 603, 601,
	604, 605, 1345, 606, 607, 608, 609, 610, 756, 611,
	0, 612, 613, 620, 621, 622, 614, 615, 616, 623,
	624, 625, 626, 627, 629, 628, 1619, 631, 632, 630,
	633, 634, 635, 1620, 636, 757, 637, 617, 618, 638,
	639, 1346, 640, 641, 642, 643, 644, 645, 646, 758,
	0, 647, 1621, 648, 649, 650, 651, 652, 653, 655,
	619, 656, 661, 662, 759, 657, 658, 659, 660, 760,
	664, 665, 666, 667, 1622, 668, 669, 0, 663, 654,
	1623, 670, 671, 672, 673, 674, 675, 0, 676, 677,
	1624, 678, 761, 762, 763, 764, 1625, 690, 1626, 679,
	681, 682, 683, 684, 765, 685, 766, 1627, 686, 687,
	688, 689, 680, 691, 692, 1628, 1629, 693, 694, 696,
	698, 699, 695, 697, 700, 1630, 701, 1631, 0, 702,
	703, 704, 767, 768, 769, 1632, 706, 705, 707, 708,
	709, 770, 710, 711, 712, 1633, 1634, 1635, 1636, 713,
	714, 771, 715, 716, 717, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1552, 0,
	0, 0, 0, 0, 0, 3042, 0, 0, 0, 0,
	0, 0, 0, 0, 3043, 308, 309, 311, 310, 312,
	313, 314, 315, 1558, 316, 317, 1559, 1560, 1561, 0,
	1562, 718, 1563, 1564, 1565, 318, 1566, 319, 320, 321,
	1330, 322, 323, 324, 325, 326, 327, 328, 719, 720,
	0, 329, 721, 330, 722, 1567, 723, 331, 332, 333,
	334, 335, 336, 337, 1568, 1569, 0, 338, 724, 725,
	726, 1570, 339, 340, 727, 1571, 1638, 1572, 341, 342,
	343, 344, 345, 346, 347, 348, 0, 1573, 350, 351,
	352, 349, 353, 1574, 354, 0, 355, 356, 357, 358,
	359, 360, 361, 1575, 362, 363, 364, 1331, 365, 366,
	367, 1576, 1577, 1579, 1578, 1580, 1581, 1582, 368, 369,
	370, 371, 372, 0, 373, 375, 728, 729, 1583, 378,
	380, 374, 376, 1584, 379, 377, 381, 1585, 382, 383,
	384, 1586, 1587, 385, 386, 387, 1588, 388, 389, 390,
	1589, 391, 392, 393, 1590, 394, 395, 730, 396, 397,
	398, 400, 402, 399, 401, 403, 404, 405, 406, 407,
	731, 732, 408, 1591, 305, 1592, 0, 0, 0, 0,
	409, 410, 411, 733, 0, 0, 0, 412, 1593, 413,
	414, 415, 1594, 416, 417, 1595, 1332, 418, 419, 420,
	734, 735, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 1596, 430, 736, 1597, 737, 431, 1598, 432, 433,
	434, 435, 436, 437, 438, 738, 739, 740, 531, 1334,
	439, 440, 441, 1599, 442, 443, 444, 445, 446, 0,
	0, 0, 306, 447, 448, 449, 1600, 1333, 741, 450,
	532, 451, 742, 743, 1601, 744, 1602, 452, 453, 455,
	1335, 745, 1336, 454, 456, 457, 1337, 458, 0, 0,
	0, 459, 460, 461, 462, 463, 464, 1603, 465, 467,
	466, 1604, 469, 746, 468, 1338, 470, 471, 1339, 1605,
	472, 473, 474, 475, 476, 477, 480, 1606, 1607, 478,
	479, 481, 482, 0, 483, 484, 486, 489, 485, 487,
	488, 490, 503, 504, 491, 492, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 506, 0, 505, 1340,
	507, 508, 509, 510, 511, 518, 520, 521, 516, 517,
	519, 522, 523, 525, 513, 514, 515, 1341, 524, 512,
	1608, 307, 1342, 526, 527, 528, 529, 1609, 747, 530,
	748, 533, 534, 1610, 0, 535, 0, 536, 1611, 1612,
	538, 539, 540, 1613, 1614, 541, 542, 749, 1343, 543,
	1344, 750, 544, 545, 537, 546, 547, 548, 549, 550,
	551, 552, 553, 554, 555, 1615, 556, 557, 751, 558,
	559, 560, 752, 561, 562, 563, 753, 564, 754, 565,
	566, 1616, 567, 568, 569, 0, 570, 571, 572, 573,
	574, 575, 576, 577, 755, 578, 579, 581, 580, 582,
	1617, 583, 0, 584, 585, 586, 0, 0, 0, 0,
	0, 587, 588, 590, 0, 591, 592, 593, 594, 589,
	595, 596, 597, 598, 599, 600, 1618, 602, 603, 601,
	604, 605, 1345, 606, 607, 608, 609, 610, 756, 611,
	0, 612, 613, 620, 621, 622, 614, 615, 616, 623,
	624, 625, 626, 627, 629, 628, 1619, 631, 632, 630,
	633, 634, 635, 1620, 636, 757, 637, 617, 618, 638,
	639, 1346, 640, 641, 642, 643, 644, 645, 646, 758,
	0, 647, 1621, 648, 649, 650, 651, 652, 653, 655,
	619, 656, 661, 662, 759, 657, 658, 659, 660, 760,
	664, 665, 666, 667, 1622, 668, 669, 0, 663, 654,
	1623, 670, 671, 672, 673, 674, 675, 0, 676, 677,
	1624, 678, 761, 762, 763, 764, 1625, 690, 1626, 679,
	681, 682, 683, 684, 765, 685, 766, 1627, 686, 687,
	688, 689, 680, 691, 692, 1628, 1629, 693, 694, 696,
	698, 699, 695, 697, 700, 1630, 701, 1631, 0, 702,
	703, 704, 767, 768, 769, 1632, 706, 705, 707, 708,
	709, 770, 710, 711, 712, 1633, 1634, 1635, 1636, 713,
	714, 771, 715, 716, 717, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1552, 0, 0, 0, 4128,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4130, 308, 309, 311, 310, 312, 313, 314, 315,
	1558, 316, 317, 1559, 1560, 1561, 0, 1562, 718, 1563,
	1564, 1565, 318, 1566, 319, 320, 321, 1330, 322, 323,
	324, 325, 326, 327, 328, 719, 720, 0, 329, 721,
	330, 722, 1567, 723, 331, 332, 333, 334, 335, 336,
	337, 1568, 1569, 0, 338, 724, 725, 726, 1570, 339,
	340, 727, 1571, 1638, 1572, 341, 342, 343, 344, 345,
	346, 347, 348, 0, 1573, 350, 351, 352, 349, 353,
	1574, 354, 0, 355, 356, 357, 358, 359, 360, 361,
	1575, 362, 363, 364, 1331, 365, 366, 367, 1576, 1577,
	1579, 1578, 1580, 1581, 1582, 368, 369, 370, 371, 372,
	0, 373, 375, 728, 729, 1583, 378, 380, 374, 376,
	1584, 379, 377, 381, 1585, 382, 383, 384, 1586, 1587,
	385, 386, 387, 1588, 388, 389, 390, 1589, 391, 392,
	393, 1590, 394, 395, 730, 396, 397, 398, 400, 402,
	399, 401, 403, 404, 405, 406, 407, 731, 732, 408,
	1591, 305, 1592, 0, 0, 0, 0, 409, 410, 411,
	733, 0, 0, 0, 412, 1593, 413, 414, 415, 1594,
	416, 417, 1595, 1332, 418, 419, 420, 734, 735, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 1596, 430,
	736, 1597, 737, 431, 1598, 432, 433, 434, 435, 436,
	437, 438, 738, 739, 740, 531, 1334, 439, 440, 441,
	1599, 442, 443, 444, 445, 446, 0, 0, 0, 306,
	447, 448, 449, 1600, 1333, 741, 450, 532, 451, 742,
	743, 1601, 744, 1602, 452, 453, 455, 1335, 745, 1336,
	454, 456, 457, 1337, 458, 0, 0, 0, 459, 460,
	461, 462, 463, 464, 1603, 465, 467, 466, 1604, 469,
	746, 468, 1338, 470, 471, 1339, 1605, 472, 473, 474,
	475, 476, 477, 480, 1606, 1607, 478, 479, 481, 482,
	0, 483, 484, 486, 489, 485, 487, 488, 490, 503,
	504, 491, 492, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 506, 0, 505, 1340, 507, 508, 509,
	510, 511, 518, 520, 521, 516, 517, 519, 522, 523,
	525, 513, 514, 515, 1341, 524, 512, 1608, 307, 1342,
	526, 527, 528, 529, 1609, 747, 530, 748, 533, 534,
	1610, 0, 535, 0, 536, 1611, 1612, 538, 539, 540,
	1613, 1614, 541, 542, 749, 1343, 543, 1344, 750, 544,
	545, 537, 546, 547, 548, 549, 550, 551, 552, 553,
	554, 555, 1615, 556, 557, 751, 558, 559, 560, 752,
	561, 562, 563, 753, 564, 754, 565, 566, 1616, 567,
	568, 569, 0, 570, 571, 572, 573, 574, 575, 576,
	577, 755, 578, 579, 581, 580, 582, 1617, 583, 0,
	584, 585, 586, 0, 0, 0, 0, 0, 587, 588,
	590, 0, 591, 592, 593, 594, 589, 595, 596, 597,
	598, 599, 600, 1618, 602, 603, 601, 604, 605, 1345,
	606, 607, 608, 609, 610, 756, 611, 0, 612, 613,
	620, 621, 622, 614, 615, 616, 623, 624, 625, 626,
	627, 629, 628, 1619, 631, 632, 630, 633, 634, 635,
	1620, 636, 757, 637, 617, 618, 638, 639, 1346, 640,
	641, 642, 643, 644, 645, 646, 758, 0, 647, 1621,
	648, 649, 650, 651, 652, 653, 655, 619, 656, 661,
	662, 759, 657, 658, 659, 660, 760, 664, 665, 666,
	667, 1622, 668, 669, 0, 663, 654, 1623, 670, 671,
	672, 673, 674, 675, 0, 676, 677, 1624, 678, 761,
	762, 763, 764, 1625, 690, 1626, 679, 681, 682, 683,
	684, 765, 685, 766, 1627, 686, 687, 688, 689, 680,
	691, 692, 1628, 1629, 693, 694, 696, 698, 699, 695,
	697, 700, 1630, 701, 1631, 0, 702, 703, 704, 767,
	768, 769, 1632, 706, 705, 707, 708, 709, 770, 710,
	711, 712, 1633, 1634, 1635, 1636, 713, 714, 771, 715,
	716, 717, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1552, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4580, 308, 309, 311, 310, 312, 313, 314,
	315, 1558, 316, 317, 1559, 1560, 1561, 0, 1562, 718,
	1563, 1564, 1565, 318, 1566, 319, 320, 321, 1330, 322,
	323, 324, 325, 326, 327, 328, 719, 720, 0, 329,
	721, 330, 722, 1567, 723, 331, 332, 333, 334, 335,
	336, 337, 1568, 1569, 0, 338, 724, 725, 726, 1570,
	339, 340, 727, 1571, 1638, 1572, 341, 342, 343, 344,
	345, 346, 347, 348, 0, 1573, 350, 351, 352, 349,
	353, 1574, 354, 0, 355, 356, 357, 358, 359, 360,
	361, 1575, 362, 363, 364, 1331, 365, 366, 367, 1576,
	1577, 1579, 1578, 1580, 1581, 1582, 368, 369, 370, 371,
	372, 0, 373, 375, 728, 729, 1583, 378, 380, 374,
	376, 1584, 379, 377, 381, 1585, 382, 383, 384, 1586,
	1587, 385, 386, 387, 1588, 388, 389, 390, 1589, 391,
	392, 393, 1590, 394, 395, 730, 396, 397, 398, 400,
	402, 399, 401, 403, 404, 405, 406, 407, 731, 732,
	408, 1591, 305, 1592, 0, 0, 0, 0, 409, 410,
	411, 733, 0, 0, 0, 412, 1593, 413, 414, 415,
	1594, 416, 417, 1595, 1332, 418, 419, 420, 734, 735,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 1596,
	430, 736, 1597, 737, 431, 1598, 432, 433, 434, 435,
	436, 437, 438, 738, 739, 740, 531, 1334, 439, 440,
	441, 1599, 442, 443, 444, 445, 446, 0, 0, 0,
	306, 447, 448, 449, 1600, 1333, 741, 450, 532, 451,
	742, 743, 1601, 744, 1602, 452, 453, 455, 1335, 745,
	1336, 454, 456, 457, 1337, 458, 0, 0, 0, 459,
	460, 461, 462, 463, 464, 1603, 465, 467, 466, 1604,
	469, 746, 468, 1338, 470, 471, 1339, 1605, 472, 473,
	474, 475, 476, 477, 480, 1606, 1607, 478, 479, 481,
	482, 0, 483, 484, 486, 489, 485, 487, 488, 490,
	503, 504, 491, 492, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 506, 0, 505, 1340, 507, 508,
	509, 510, 511, 518, 520, 521, 516, 517, 519, 522,
	523, 525, 513, 514, 515, 1341, 524, 512, 1608, 307,
	1342, 526, 527, 528, 529, 1609, 747, 530, 748, 533,
	534, 1610, 0, 535, 0, 536, 1611, 1612, 538, 539,
	540, 1613, 1614, 541, 542, 749, 1343, 543, 1344, 750,
	544, 545, 537, 546, 547, 548, 549, 550, 551, 552,
	553, 554, 555, 1615, 556, 557, 751, 558, 559, 560,
	752, 561, 562, 563, 753, 564, 754, 565, 566, 1616,
	567, 568, 569, 0, 570, 571, 572, 573, 574, 575,
	576, 577, 755, 578, 579, 581, 580, 582, 1617, 583,
	0, 584, 585, 586, 0, 0, 0, 0, 0, 587,
	588, 590, 0, 591, 592, 593, 594, 589, 595, 596,
	597, 598, 599, 600, 1618, 602, 603, 601, 604, 605,
	1345, 606, 607, 608, 609, 610, 756, 611, 0, 612,
	613, 620, 621, 622, 614, 615, 616, 623, 624, 625,
	626, 627, 629, 628, 1619, 631, 632, 630, 633, 634,
	635, 1620, 636, 757, 637, 617, 618, 638, 639, 1346,
	640, 641, 642, 643, 644, 645, 646, 758, 0, 647,
	1621, 648, 649, 650, 651, 652, 653, 655, 619, 656,
	661, 662, 759, 657, 658, 659, 660, 760, 664, 665,
	666, 667, 1622, 668, 669, 0, 663, 654, 1623, 670,
	671, 672, 673, 674, 675, 0, 676, 677, 1624, 678,
	761, 762, 763, 764, 1625, 690, 1626, 679, 681, 682,
	683, 684, 765, 685, 766, 1627, 686, 687, 688, 689,
	680, 691, 692, 1628, 1629, 693, 694, 696, 698, 699,
	695, 697, 700, 1630, 701, 1631, 0, 702, 703, 704,
	767, 768, 769, 1632, 706, 705, 707, 708, 709, 770,
	710, 711, 712, 1633, 1634, 1635, 1636, 713, 714, 771,
	715, 716, 717, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1552, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4578, 308, 309, 311, 310, 312, 313,
	314, 315, 1558, 316, 317, 1559, 1560, 1561, 0, 1562,
	718, 1563, 1564, 1565, 318, 1566, 319, 320, 321, 1330,
	322, 323, 324, 325, 326, 327, 328, 719, 720, 0,
	329, 721, 330, 722, 1567, 723, 331, 332, 333, 334,
	335, 336, 337, 1568, 1569, 0, 338, 724, 725, 726,
	1570, 339, 340, 727, 1571, 1638, 1572, 341, 342, 343,
	344, 345, 346, 347, 348, 0, 1573, 350, 351, 352,
	349, 353, 1574, 354, 0, 355, 356, 357, 358, 359,
	360, 361, 1575, 362, 363, 364, 1331, 365, 366, 367,
	1576, 1577, 1579, 1578, 1580, 1581, 1582, 368, 369, 370,
	371, 372, 0, 373, 375, 728, 729, 1583, 378, 380,
	374, 376, 1584, 379, 377, 381, 1585, 382, 383, 384,
	1586, 1587, 385, 386, 387, 1588, 388, 389, 390, 1589,
	391, 392, 393, 1590, 394, 395, 730, 396, 397, 398,
	400, 402, 399, 401, 403, 404, 405, 406, 407, 731,
	732, 408, 1591, 305, 1592, 0, 0, 0, 0, 409,
	410, 411, 733, 0, 0, 0, 412, 1593, 413, 414,
	415, 1594, 416, 417, 1595, 1332, 418, 419, 420, 734,
	735, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	1596, 430, 736, 1597, 737, 431, 1598, 432, 433, 434,
	435, 436, 437, 438, 738, 739, 740, 531, 1334, 439,
	440, 441, 1599, 442, 443, 444, 445, 446, 0, 0,
	0, 306, 447, 448, 449, 1600, 1333, 741, 450, 532,
	451, 742, 743, 1601, 744, 1602, 452, 453, 455, 1335,
	745, 1336, 454, 456, 457, 1337, 458, 0, 0, 0,
	459, 460, 461, 462, 463, 464, 1603, 465, 467, 466,
	1604, 469, 746, 468, 1338, 470, 471, 1339, 1605, 472,
	473, 474, 475, 476, 477, 480, 1606, 1607, 478, 479,
	481, 482, 0, 483, 484, 486, 489, 485, 487, 488,
	490, 503, 504, 491, 492, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 506, 0, 505, 1340, 507,
	508, 509, 510, 511, 518, 520, 521, 516, 517, 519,
	522, 523, 525, 513, 514, 515, 1341, 524, 512, 1608,
	307, 1342, 526, 527, 528, 529, 1609, 747, 530, 748,
	533, 534, 1610, 0, 535, 0, 536, 1611, 1612, 538,
	539, 540, 1613, 1614, 541, 542, 749, 1343, 543, 1344,
	750, 544, 545, 537, 546, 547, 548, 549, 550, 551,
	552, 553, 554, 555, 1615, 556, 557, 751, 558, 559,
	560, 752, 561, 562, 563, 753, 564, 754, 565, 566,
	1616, 567, 568, 569, 0, 570, 571, 572, 573, 574,
	575, 576, 577, 755, 578, 579, 581, 580, 582, 1617,
	583, 0, 584, 585, 586, 0, 0, 0, 0, 0,
	587, 588, 590, 0, 591, 592, 593, 594, 589, 595,
	596, 597, 598, 599, 600, 1618, 602, 603, 601, 604,
	605, 1345, 606, 607, 608, 609, 610, 756, 611, 0,
	612, 613, 620, 621, 622, 614, 615, 616, 623, 624,
	625, 626, 627, 629, 628, 1619, 631, 632, 630, 633,
	634, 635, 1620, 636, 757, 637, 617, 618, 638, 639,
	1346, 640, 641, 642, 643, 644, 645, 646, 758, 0,
	647, 1621, 648, 649, 650, 651, 652, 653, 655, 619,
	656, 661, 662, 759, 657, 658, 659, 660, 760, 664,
	665, 666, 667, 1622, 668, 669, 0, 663, 654, 1623,
	670, 671, 672, 673, 674, 675, 0, 676, 677, 1624,
	678, 761, 762, 763, 764, 1625, 690, 1626, 679, 681,
	682, 683, 684, 765, 685, 766, 1627, 686, 687, 688,
	689, 680, 691, 692, 1628, 1629, 693, 694, 696, 698,
	699, 695, 697, 700, 1630, 701, 1631, 0, 702, 703,
	704, 767, 768, 769, 1632, 706, 705, 707, 708, 709,
	770, 710, 711, 712, 1633, 1634, 1635, 1636, 713, 714,
	771, 715, 716, 717, 0, 0, 0, 0, 0, 0,
	0, 0, 1552, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4832, 308,
	309, 311, 310, 312, 313, 314, 315, 1558, 316, 317,
	1559, 1560, 1561, 0, 1562, 718, 1563, 1564, 1565, 318,
	1566, 319, 320, 321, 1330, 322, 323, 324, 325, 326,
	327, 328, 719, 720, 0, 329, 721, 330, 722, 1567,
	723, 331, 332, 333, 334, 335, 336, 337, 1568, 1569,
	0, 338, 724, 725, 726, 1570, 339, 340, 727, 1571,
	1638, 1572, 341, 342, 343, 344, 345, 346, 347, 348,
	0, 1573, 350, 351, 352, 349, 353, 1574, 354, 0,
	355, 356, 357, 358, 359, 360, 361, 1575, 362, 363,
	364, 1331, 365, 366, 367, 1576, 1577, 1579, 1578, 1580,
	1581, 1582, 368, 369, 370, 371, 372, 0, 373, 375,
	728, 729, 1583, 378, 380, 374, 376, 1584, 379, 377,
	381, 1585, 382, 383, 384, 1586, 1587, 385, 386, 387,
	1588, 388, 389, 390, 1589, 391, 392, 393, 1590, 394,
	395, 730, 396, 397, 398, 400, 402, 399, 401, 403,
	404, 405, 406, 407, 731, 732, 408, 1591, 305, 1592,
	0, 0, 0, 0, 409, 410, 411, 733, 0, 0,
	0, 412, 1593, 413, 414, 415, 1594, 416, 417, 1595,
	1332, 418, 419, 420, 734, 735, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 1596, 430, 736, 1597, 737,
	431, 1598, 432, 433, 434, 435, 436, 437, 438, 738,
	739, 740, 531, 1334, 439, 440, 441, 1599, 442, 443,
	444, 445, 446, 0, 0, 0, 306, 447, 448, 449,
	1600, 1333, 741, 450, 532, 451, 742, 743, 1601, 744,
	1602, 452, 453, 455, 1335, 745, 1336, 454, 456, 457,
	1337, 458, 0, 0, 0, 459, 460, 461, 462, 463,
	464, 1603, 465, 467, 466, 1604, 469, 746, 468, 1338,
	470, 471, 1339, 1605, 472, 473, 474, 475, 476, 477,
	480, 1606, 1607, 478, 479, 481, 482, 0, 483, 484,
	486, 489, 485, 487, 488, 490, 503, 504, 491, 492,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	506, 0, 505, 1340, 507, 508, 509, 510, 511, 518,
	520, 521, 516, 517, 519, 522, 523, 525, 513, 514,
	515, 1341, 524, 512, 1608, 307, 1342, 526, 527, 528,
	529, 1609, 747, 530, 748, 533, 534, 1610, 0, 535,
	0, 536, 1611, 1612, 538, 539, 540, 1613, 1614, 541,
	542, 749, 1343, 543, 1344, 750, 544, 545, 537, 546,
	547, 548, 549, 550, 551, 552, 553, 554, 555, 1615,
	556, 557, 751, 558, 559, 560, 752, 561, 562, 563,
	753, 564, 754, 565, 566, 1616, 567, 568, 569, 0,
	570, 571, 572, 573, 574, 575, 576, 577, 755, 578,
	579, 581, 580, 582, 1617, 583, 0, 584, 585, 586,
	0, 0, 0, 0, 0, 587, 588, 590, 0, 591,
	592, 593, 594, 589, 595, 596, 597, 598, 599, 600,
	1618, 602, 603, 601, 604, 605, 1345, 606, 607, 608,
	609, 610, 756, 611, 0, 612, 613, 620, 621, 622,
	614, 615, 616, 623, 624, 625, 626, 627, 629, 628,
	1619, 631, 632, 630, 633, 634, 635, 1620, 636, 757,
	637, 617, 618, 638, 639, 1346, 640, 641, 642, 643,
	644, 645, 646, 758, 0, 647, 1621, 648, 649, 650,
	651, 652, 653, 655, 619, 656, 661, 662, 759, 657,
	658, 659, 660, 760, 664, 665, 666, 667, 1622, 668,
	669, 0, 663, 654, 1623, 670, 671, 672, 673, 674,
	675, 0, 676, 677, 1624, 678, 761, 762, 763, 764,
	1625, 690, 1626, 679, 681, 682, 683, 684, 765, 685,
	766, 1627, 686, 687, 688, 689, 680, 691, 692, 1628,
	1629, 693, 694, 696, 698, 699, 695, 697, 700, 1630,
	701, 1631, 0, 702, 703, 704, 767, 768, 769, 1632,
	706, 705, 707, 708, 709, 770, 710, 711, 712, 1633,
	1634, 1635, 1636, 713, 714, 771, 715, 716, 717, 0,
	0, 0, 0, 0, 0, 0, 0, 1552, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4686, 308, 309, 311, 310, 312, 313,
	314, 315, 1558, 316, 317, 1559, 1560, 1561, 0, 1562,
	718, 1563, 1564, 1565, 318, 1566, 319, 320, 321, 1330,
	322, 323, 324, 325, 326, 327, 328, 719, 720, 0,
	329, 721, 330, 722, 1567, 723, 331, 332, 333, 334,
	335, 336, 337, 1568, 1569, 0, 338, 724, 725, 726,
	1570, 339, 340, 727, 1571, 1638, 1572, 341, 342, 343,
	344, 345, 346, 347, 348, 0, 1573, 350, 351, 352,
	349, 353, 1574, 354, 0, 355, 356, 357, 358, 359,
	360, 361, 1575, 362, 363, 364, 1331, 365, 366, 367,
	1576, 1577, 1579, 1578, 1580, 1581, 1582, 368, 369, 370,
	371, 372, 0, 373, 375, 728, 729, 1583, 378, 380,
	374, 376, 1584, 379, 377, 381, 1585, 382, 383, 384,
	1586, 1587, 385, 386, 387, 1588, 388, 389, 390, 1589,
	391, 392, 393, 1590, 394, 395, 730, 396, 397, 398,
	400, 402, 399, 401, 403, 404, 405, 406, 407, 731,
	732, 408, 1591, 305, 1592, 0, 0, 0, 0, 409,
	410, 411, 733, 0, 0, 0, 412, 1593, 413, 414,
	415, 1594, 416, 417, 1595, 1332, 418, 419, 420, 734,
	735, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	1596, 430, 736, 1597, 737, 431, 1598, 432, 433, 434,
	435, 436, 437, 438, 738, 739, 740, 531, 1334, 439,
	440, 441, 1599, 442, 443, 444, 445, 446, 0, 0,
	0, 306, 447, 448, 449, 1600, 1333, 741, 450, 532,
	451, 742, 743, 1601, 744, 1602, 452, 453, 455, 1335,
	745, 1336, 454, 456, 457, 1337, 458, 0, 0, 0,
	459, 460, 461, 462, 463, 464, 1603, 465, 467, 466,
	1604, 469, 746, 468, 1338, 470, 471, 1339, 1605, 472,
	473, 474, 475, 476, 477, 480, 1606, 1607, 478, 479,
	481, 482, 0, 483, 484, 486, 489, 485, 487, 488,
	490, 503, 504, 491, 492, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 506, 0, 505, 1340, 507,
	508, 509, 510, 511, 518, 520, 521, 516, 517, 519,
	522, 523, 525, 513, 514, 515, 1341, 524, 512, 1608,
	307, 1342, 526, 527, 528, 529, 1609, 747, 530, 748,
	533, 534, 1610, 0, 535, 0, 536, 1611, 1612, 538,
	539, 540, 1613, 1614, 541, 542, 749, 1343, 543, 1344,
	750, 544, 545, 537, 546, 547, 548, 549, 550, 551,
	552, 553, 554, 555, 1615, 556, 557, 751, 558, 559,
	560, 752, 561, 562, 563, 753, 564, 754, 565, 566,
	1616, 567, 568, 569, 0, 570, 571, 572, 573, 574,
	575, 576, 577, 755, 578, 579, 581, 580, 582, 1617,
	583, 0, 584, 585, 586, 0, 0, 0, 0, 0,
	587, 588, 590, 0, 591, 592, 593, 594, 589, 595,
	596, 597, 598, 599, 600, 1618, 602, 603, 601, 604,
	605, 1345, 606, 607, 608, 609, 610, 756, 611, 0,
	612, 613, 620, 621, 622, 614, 615, 616, 623, 624,
	625, 626, 627, 629, 628, 1619, 631, 632, 630, 633,
	634, 635, 1620, 636, 757, 637, 617, 618, 638, 639,
	1346, 640, 641, 642, 643, 644, 645, 646, 758, 0,
	647, 1621, 648, 649, 650, 651, 652, 653, 655, 619,
	656, 661, 662, 759, 657, 658, 659, 660, 760, 664,
	665, 666, 667, 1622, 668, 669, 0, 663, 654, 1623,
	670, 671, 672, 673, 674, 675, 0, 676, 677, 1624,
	678, 761, 762, 763, 764, 1625, 690, 1626, 679, 681,
	682, 683, 684, 765, 685, 766, 1627, 686, 687, 688,
	689, 680, 691, 692, 1628, 1629, 693, 694, 696, 698,
	699, 695, 697, 700, 1630, 701, 1631, 0, 702, 703,
	704, 767, 768, 769, 1632, 706, 705, 707, 708, 709,
	770, 710, 711, 712, 1633, 1634, 1635, 1636, 713, 714,
	771, 715, 716, 717, 0, 0, 0, 0, 0, 0,
	0, 0, 1552, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4504, 308,
	309, 311, 310, 312, 313, 314, 315, 1558, 316, 317,
	1559, 1560, 1561, 0, 1562, 718, 1563, 1564, 1565, 318,
	1566, 319, 320, 321, 1330, 322, 323, 324, 325, 326,
	327, 328, 719, 720, 0, 329, 721, 330, 722, 1567,
	723, 331, 332, 333, 334, 335, 336, 337, 1568, 1569,
	0, 338, 724, 725, 726, 1570, 339, 340, 727, 1571,
	1638, 1572, 341, 342, 343, 344, 345, 346, 347, 348,
	0, 1573, 350, 351, 352, 349, 353, 1574, 354, 0,
	355, 356, 357, 358, 359, 360, 361, 1575, 362, 363,
	364, 1331, 365, 366, 367, 1576, 1577, 1579, 1578, 1580,
	1581, 1582, 368, 369, 370, 371, 372, 0, 373, 375,
	728, 729, 1583, 378, 380, 374, 376, 1584, 379, 377,
	381, 1585, 382, 383, 384, 1586, 1587, 385, 386, 387,
	1588, 388, 389, 390, 1589, 391, 392, 393, 1590, 394,
	395, 730, 396, 397, 398, 400, 402, 399, 401, 403,
	404, 405, 406, 407, 731, 732, 408, 1591, 305, 1592,
	0, 0, 0, 0, 409, 410, 411, 733, 0, 0,
	0, 412, 1593, 413, 414, 415, 1594, 416, 417, 1595,
	1332, 418, 419, 420, 734, 735, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 1596, 430, 736, 1597, 737,
	431, 1598, 432, 433, 434, 435, 436, 437, 438, 738,
	739, 740, 531, 1334, 439, 440, 441, 1599, 442, 443,
	444, 445, 446, 0, 0, 0, 306, 447, 448, 449,
	1600, 1333, 741, 450, 532, 451, 742, 743, 1601, 744,
	1602, 452, 453, 455, 1335, 745, 1336, 454, 456, 457,
	1337, 458, 0, 0, 0, 459, 460, 461, 462, 463,
	464, 1603, 465, 467, 466, 1604, 469, 746, 468, 1338,
	470, 471, 1339, 1605, 472, 473, 474, 475, 476, 477,
	480, 1606, 1607, 478, 479, 481, 482, 0, 483, 484,
	486, 489, 485, 487, 488, 490, 503, 504, 491, 492,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	506, 0, 505, 1340, 507, 508, 509, 510, 511, 518,
	520, 521, 516, 517, 519, 522, 523, 525, 513, 514,
	515, 1341, 524, 512, 1608, 307, 1342, 526, 527, 528,
	529, 1609, 747, 530, 748, 533, 534, 1610, 0, 535,
	0, 536, 1611, 1612, 538, 539, 540, 1613, 1614, 541,
	542, 749, 1343, 543, 1344, 750, 544, 545, 537, 546,
	547, 548, 549, 550, 551, 552, 553, 554, 555, 1615,
	556, 557, 751, 558, 559, 560, 752, 561, 562, 563,
	753, 564, 754, 565, 566, 1616, 567, 568, 569, 0,
	570, 571, 572, 573, 574, 575, 576, 577, 755, 578,
	579, 581, 580, 582, 1617, 583, 0, 584, 585, 586,
	0, 0, 0, 0, 0, 587, 588, 590, 0, 591,
	592, 593, 594, 589, 595, 596, 597, 598, 599, 600,
	1618, 602, 603, 601, 604, 605, 1345, 606, 607, 608,
	609, 610, 756, 611, 0, 612, 613, 620, 621, 622,
	614, 615, 616, 623, 624, 625, 626, 627, 629, 628,
	1619, 631, 632, 630, 633, 634, 635, 1620, 636, 757,
	637, 617, 618, 638, 639, 1346, 640, 641, 642, 643,
	644, 645, 646, 758, 0, 647, 1621, 648, 649, 650,
	651, 652, 653, 655, 619, 656, 661, 662, 759, 657,
	658, 659, 660, 760, 664, 665, 666, 667, 1622, 668,
	669, 0, 663, 654, 1623, 670, 671, 672, 673, 674,
	675, 0, 676, 677, 1624, 678, 761, 762, 763, 764,
	1625, 690, 1626, 679, 681, 682, 683, 684, 765, 685,
	766, 1627, 686, 687, 688, 689, 680, 691, 692, 1628,
	1629, 693, 694, 696, 698, 699, 695, 697, 700, 1630,
	701, 1631, 0, 702, 703, 704, 767, 768, 769, 1632,
	706, 705, 707, 708, 709, 770, 710, 711, 712, 1633,
	1634, 1635, 1636, 713, 714, 771, 715, 716, 717, 0,
	0, 0, 0, 0, 0, 0, 0, 1552, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4146, 308, 309, 311, 310, 312, 313,
	314, 315, 1558, 316, 317, 1559, 1560, 1561, 0, 1562,
	718, 1563, 1564, 1565, 318, 1566, 319, 320, 321, 1330,
	322, 323, 324, 325, 326, 327, 328, 719, 720, 0,
	329, 721, 330, 722, 1567, 723, 331, 332, 333, 334,
	335, 336, 337, 1568, 1569, 0, 338, 724, 725, 726,
	1570, 339, 340, 727, 1571, 1638, 1572, 341, 342, 343,
	344, 345, 346, 347, 348, 0, 1573, 350, 351, 352,
	349, 353, 1574, 354, 0, 355, 356, 357, 358, 359,
	360, 361, 1575, 362, 363, 364, 1331, 365, 366, 367,
	1576, 1577, 1579, 1578, 1580, 1581, 1582, 368, 369, 370,
	371, 372, 0, 373, 375, 728, 729, 1583, 378, 380,
	374, 376, 1584, 379, 377, 381, 1585, 382, 383, 384,
	1586, 1587, 385, 386, 387, 1588, 388, 389, 390, 1589,
	391, 392, 393, 1590, 394, 395, 730, 396, 397, 398,
	400, 402, 399, 401, 403, 404, 405, 406, 407, 731,
	732, 408, 1591, 305, 1592, 0, 0, 0, 0, 409,
	410, 411, 733, 0, 0, 0, 412, 1593, 413, 414,
	415, 1594, 416, 417, 1595, 1332, 418, 419, 420, 734,
	735, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	1596, 430, 736, 1597, 737, 431, 1598, 432, 433, 434,
	435, 436, 437, 438, 738, 739, 740, 531, 1334, 439,
	440, 441, 1599, 442, 443, 444, 445, 446, 0, 0,
	0, 306, 447, 448, 449, 1600, 1333, 741, 450, 532,
	451, 742, 743, 1601, 744, 1602, 452, 453, 455, 1335,
	745, 1336, 454, 456, 457, 1337, 458, 0, 0, 0,
	459, 460, 461, 462, 463, 464, 1603, 465, 467, 466,
	1604, 469, 746, 468, 1338, 470, 471, 1339, 1605, 472,
	473, 474, 475, 476, 477, 480, 1606, 1607, 478, 479,
	481, 482, 0, 483, 484, 486, 489, 485, 487, 488,
	490, 503, 504, 491, 492, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 506, 0, 505, 1340, 507,
	508, 509, 510, 511, 518, 520, 521, 516, 517, 519,
	522, 523, 525, 513, 514, 515, 1341, 524, 512, 1608,
	307, 1342, 526, 527, 528, 529, 1609, 747, 530, 748,
	533, 534, 1610, 0, 535, 0, 536, 1611, 1612, 538,
	539, 540, 1613, 1614, 541, 542, 749, 1343, 543, 1344,
	750, 544, 545, 537, 546, 547, 548, 549, 550, 551,
	552, 553, 554, 555, 1615, 556, 557, 751, 558, 559,
	560, 752, 561, 562, 563, 753, 564, 754, 565, 566,
	1616, 567, 568, 569, 0, 570, 571, 572, 573, 574,
	575, 576, 577, 755, 578, 579, 581, 580, 582, 1617,
	583, 0, 584, 585, 586, 0, 0, 0, 0, 0,
	587, 588, 590, 0, 591, 592, 593, 594, 589, 595,
	596, 597, 598, 599, 600, 1618, 602, 603, 601, 604,
	605, 1345, 606, 607, 608, 609, 610, 756, 611, 0,
	612, 613, 620, 621, 622, 614, 615, 616, 623, 624,
	625, 626, 627, 629, 628, 1619, 631, 632, 630, 633,
	634, 635, 1620, 636, 757, 637, 617, 618, 638, 639,
	1346, 640, 641, 642, 643, 644, 645, 646, 758, 0,
	647, 1621, 648, 649, 650, 651, 652, 653, 655, 619,
	656, 661, 662, 759, 657, 658, 659, 660, 760, 664,
	665, 666, 667, 1622, 668, 669, 0, 663, 654, 1623,
	670, 671, 672, 673, 674, 675, 0, 676, 677, 1624,
	678, 761, 762, 763, 764, 1625, 690, 1626, 679, 681,
	682, 683, 684, 765, 685, 766, 1627, 686, 687, 688,
	689, 680, 691, 692, 1628, 1629, 693, 694, 696, 698,
	699, 695, 697, 700, 1630, 701, 1631, 0, 702, 703,
	704, 767, 768, 769, 1632, 706, 705, 707, 708, 709,
	770, 710, 711, 712, 1633, 1634, 1635, 1636, 713, 714,
	771, 715, 716, 717, 0, 0, 0, 0, 0, 0,
	0, 0, 1552, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3942, 308,
	309, 311, 310, 312, 313, 314, 315, 1558, 316, 317,
	1559, 1560, 1561, 0, 1562, 718, 1563, 1564, 1565, 318,
	1566, 319, 320, 321, 1330, 322, 323, 324, 325, 326,
	327, 328, 719, 720, 0, 329, 721, 330, 722, 1567,
	723, 331, 332, 333, 334, 335, 336, 337, 1568, 1569,
	0, 338, 724, 725, 726, 1570, 339, 340, 727, 1571,
	1638, 1572, 341, 342, 343, 344, 345, 346, 347, 348,
	0, 1573, 350, 351, 352, 349, 353, 1574, 354, 0,
	355, 356, 357, 358, 359, 360, 361, 1575, 362, 363,
	364, 1331, 365, 366, 367, 1576, 1577, 1579, 1578, 1580,
	1581, 1582, 368, 369, 370, 371, 372, 0, 373, 375,
	728, 729, 1583, 378, 380, 374, 376, 1584, 379, 377,
	381, 1585, 382, 383, 384, 1586, 1587, 385, 386, 387,
	1588, 388, 389, 390, 1589, 391, 392, 393, 1590, 394,
	395, 730, 396, 397, 398, 400, 402, 399, 401, 403,
	404, 405, 406, 407, 731, 732, 408, 1591, 305, 1592,
	0, 0, 0, 0, 409, 410, 411, 733, 0, 0,
	0, 412, 1593, 413, 414, 415, 1594, 416, 417, 1595,
	1332, 418, 419, 420, 734, 735, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 1596, 430, 736, 1597, 737,
	431, 1598, 432, 433, 434, 435, 436, 437, 438, 738,
	739, 740, 531, 1334, 439, 440, 441, 1599, 442, 443,
	444, 445, 446, 0, 0, 0, 306, 447, 448, 449,
	1600, 1333, 741, 450, 532, 451, 742, 743, 1601, 744,
	1602, 452, 453, 455, 1335, 745, 1336, 454, 456, 457,
	1337, 458, 0, 0, 0, 459, 460, 461, 462, 463,
	464, 1603, 465, 467, 466, 1604, 469, 746, 468, 1338,
	470, 471, 1339, 1605, 472, 473, 474, 475, 476, 477,
	480, 1606, 1607, 478, 479, 481, 482, 0, 483, 484,
	486, 489, 485, 487, 488, 490, 503, 504, 491, 492,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	506, 0, 505, 1340, 507, 508, 509, 510, 511, 518,
	520, 521, 516, 517, 519, 522, 523, 525, 513, 514,
	515, 1341, 524, 512, 1608, 307, 1342, 526, 527, 528,
	529, 1609, 747, 530, 748, 533, 534, 1610, 0, 535,
	0, 536, 1611, 1612, 538, 539, 540, 1613, 1614, 541,
	542, 749, 1343, 543, 1344, 750, 544, 545, 537, 546,
	547, 548, 549, 550, 551, 552, 553, 554, 555, 1615,
	556, 557, 751, 558, 559, 560, 752, 561, 562, 563,
	753, 564, 754, 565, 566, 1616, 567, 568, 569, 0,
	570, 571, 572, 573, 574, 575, 576, 577, 755, 578,
	579, 581, 580, 582, 1617, 583, 0, 584, 585, 586,
	0, 0, 0, 0, 0, 587, 588, 590, 0, 591,
	592, 593, 594, 589, 595, 596, 597, 598, 599, 600,
	1618, 602, 603, 601, 604, 605, 1345, 606, 607, 608,
	609, 610, 756, 611, 0, 612, 613, 620, 621, 622,
	614, 615, 616, 623, 624, 625, 626, 627, 629, 628,
	1619, 631, 632, 630, 633, 634, 635, 1620, 636, 757,
	637, 617, 618, 638, 639, 1346, 640, 641, 642, 643,
	644, 645, 646, 758, 0, 647, 1621, 648, 649, 650,
	651, 652, 653, 655, 619, 656, 661, 662, 759, 657,
	658, 659, 660, 760, 664, 665, 666, 667, 1622, 668,
	669, 0, 663, 654, 1623, 670, 671, 672, 673, 674,
	675, 0, 676, 677, 1624, 678, 761, 762, 763, 764,
	1625, 690, 1626, 679, 681, 682, 683, 684, 765, 685,
	766, 1627, 686, 687, 688, 689, 680, 691, 692, 1628,
	1629, 693, 694, 696, 698, 699, 695, 697, 700, 1630,
	701, 1631, 0, 702, 703, 704, 767, 768, 769, 1632,
	706, 705, 707, 708, 709, 770, 710, 711, 712, 1633,
	1634, 1635, 1636, 713, 714, 771, 715, 716, 717, 0,
	0, 0, 0, 0, 0, 0, 0, 1552, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2876, 308, 309, 311, 310, 312, 313,
	314, 315, 1558, 316, 317, 1559, 1560, 1561, 0, 1562,
	718, 1563, 1564, 1565, 318, 1566, 319, 320, 321, 1330,
	322, 323, 324, 325, 326, 327, 328, 719, 720, 0,
	329, 721, 330, 722, 1567, 723, 331, 332, 333, 334,
	335, 336, 337, 1568, 1569, 0, 338, 724, 725, 726,
	1570, 339, 340, 727, 1571, 1638, 1572, 341, 342, 343,
	344, 345, 346, 347, 348, 0, 1573, 350, 351, 352,
	349, 353, 1574, 354, 0, 355, 356, 357, 358, 359,
	360, 361, 1575, 362, 363, 364, 1331, 365, 366, 367,
	1576, 1577, 1579, 1578, 1580, 1581, 1582, 368, 369, 370,
	371, 372, 0, 373, 375, 728, 729, 1583, 378, 380,
	374, 376, 1584, 379, 377, 381, 1585, 382, 383, 384,
	1586, 1587, 385, 386, 387, 1588, 388, 389, 390, 1589,
	391, 392, 393, 1590, 394, 395, 730, 396, 397, 398,
	400, 402, 399, 401, 403, 404, 405, 406, 407, 731,
	732, 408, 1591, 305, 1592, 0, 0, 0, 0, 409,
	410, 411, 733, 0, 0, 0, 412, 1593, 413, 414,
	415, 1594, 416, 417, 1595, 1332, 418, 419, 420, 734,
	735, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	1596, 430, 736, 1597, 737, 431, 1598, 432, 433, 434,
	435, 436, 437, 438, 738, 739, 740, 531, 1334, 439,
	440, 441, 1599, 442, 443, 444, 445, 446, 0, 0,
	0, 306, 447, 448, 449, 1600, 1333, 741, 450, 532,
	451, 742, 743, 1601, 744, 1602, 452, 453, 455, 1335,
	745, 1336, 454, 456, 457, 1337, 458, 0, 0, 0,
	459, 460, 461, 462, 463, 464, 1603, 465, 467, 466,
	1604, 469, 746, 468, 1338, 470, 471, 1339, 1605, 472,
	473, 474, 475, 476, 477, 480, 1606, 1607, 478, 479,
	481, 482, 0, 483, 484, 486, 489, 485, 487, 488,
	490, 503, 504, 491, 492, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 506, 0, 505, 1340, 507,
	508, 509, 510, 511, 518, 520, 521, 516, 517, 519,
	522, 523, 525, 513, 514, 515, 1341, 524, 512, 1608,
	307, 1342, 526, 527, 528, 529, 1609, 747, 530, 748,
	533, 534, 1610, 0, 535, 0, 536, 1611, 1612, 538,
	539, 540, 1613, 1614, 541, 542, 749, 1343, 543, 1344,
	750, 544, 545, 537, 546, 547, 548, 549, 550, 551,
	552, 553, 554, 555, 1615, 556, 557, 751, 558, 559,
	560, 752, 561, 562, 563, 753, 564, 754, 565, 566,
	1616, 567, 568, 569, 0, 570, 571, 572, 573, 574,
	575, 576, 577, 755, 578, 579, 581, 580, 582, 1617,
	583, 0, 584, 585, 586, 0, 0, 0, 0, 0,
	587, 588, 590, 0, 591, 592, 593, 594, 589, 595,
	596, 597, 598, 599, 600, 1618, 602, 603, 601, 604,
	605, 1345, 606, 607, 608, 609, 610, 756, 611, 0,
	612, 613, 620, 621, 622, 614, 615, 616, 623, 624,
	625, 626, 627, 629, 628, 1619, 631, 632, 630, 633,
	634, 635, 1620, 636, 757, 637, 617, 618, 638, 639,
	1346, 640, 641, 642, 643, 644, 645, 646, 758, 0,
	647, 1621, 648, 649, 650, 651, 652, 653, 655, 619,
	656, 661, 662, 759, 657, 658, 659, 660, 760, 664,
	665, 666, 667, 1622, 668, 669, 0, 663, 654, 1623,
	670, 671, 672, 673, 674, 675, 0, 676, 677, 1624,
	678, 761, 762, 763, 764, 1625, 690, 1626, 679, 681,
	682, 683, 684, 765, 685, 766, 1627, 686, 687, 688,
	689, 680, 691, 692, 1628, 1629, 693, 694, 696, 698,
	699, 695, 697, 700, 1630, 701, 1631, 0, 702, 703,
	704, 767, 768, 769, 1632, 706, 705, 707, 708, 709,
	770, 710, 711, 712, 1633, 1634, 1635, 1636, 713, 714,
	771, 715, 716, 717, 0, 0, 0, 0, 0, 0,
	1549, 0, 1552, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2488, 308,
	309, 311, 310, 312, 313, 314, 315, 1558, 316, 317,
	1559, 1560, 1561, 0, 1562, 718, 1563, 1564, 1565, 318,
	1566, 319, 320, 321, 1330, 322, 323, 324, 325, 326,
	327, 328, 719, 720, 0, 329, 721, 330, 722, 1567,
	723, 331, 332, 333, 334, 335, 336, 337, 1568, 1569,
	0, 338, 724, 725, 726, 1570, 339, 340, 727, 1571,
	1638, 1572, 341, 342, 343, 344, 345, 346, 347, 348,
	0, 1573, 350, 351, 352, 349, 353, 1574, 354, 0,
	355, 356, 357, 358, 359, 360, 361, 1575, 362, 363,
	364, 1331, 365, 366, 367, 1576, 1577, 1579, 1578, 1580,
	1581, 1582, 368, 369, 370, 371, 372, 0, 373, 375,
	728, 729, 1583, 378, 380, 374, 376, 1584, 379, 377,
	381, 1585, 382, 383, 384, 1586, 1587, 385, 386, 387,
	1588, 388, 389, 390, 1589, 391, 392, 393, 1590, 394,
	395, 730, 396, 397, 398, 400, 402, 399, 401, 403,
	404, 405, 406, 407, 731, 732, 408, 1591, 305, 1592,
	0, 0, 0, 0, 409, 410, 411, 733, 0, 0,
	0, 412, 1593, 413, 414, 415, 1594, 416, 417, 1595,
	1332, 418, 419, 420, 734, 735, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 1596, 430, 736, 1597, 737,
	431, 1598, 432, 433, 434, 435, 436, 437, 438, 738,
	739, 740, 531, 1334, 439, 440, 441, 1599, 442, 443,
	444, 445, 446, 0, 0, 0, 306, 447, 448, 449,
	1600, 1333, 741, 450, 532, 451, 742, 743, 1601, 744,
	1602, 452, 453, 455, 1335, 745, 1336, 454, 456, 457,
	1337, 458, 0, 0, 0, 459, 460, 461, 462, 463,
	464, 1603, 465, 467, 466, 1604, 469, 746, 468, 1338,
	470, 471, 1339, 1605, 472, 473, 474, 475, 476, 477,
	480, 1606, 1607, 478, 479, 481, 482, 0, 483, 484,
	486, 489, 485, 487, 488, 490, 503, 504, 491, 492,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	506, 0, 505, 1340, 507, 508, 509, 510, 511, 518,
	520, 521, 516, 517, 519, 522, 523, 525, 513, 514,
	515, 1341, 524, 512, 1608, 307, 1342, 526, 527, 528,
	529, 1609, 747, 530, 748, 533, 534, 1610, 0, 535,
	0, 536, 1611, 1612, 538, 539, 540, 1613, 1614, 541,
	542, 749, 1343, 543, 1344, 750, 544, 545, 537, 546,
	547, 548, 549, 550, 551, 552, 553, 554, 555, 1615,
	556, 557, 751, 558, 559, 560, 752, 561, 562, 563,
	753, 564, 754, 565, 566, 1616, 567, 568, 569, 0,
	570, 571, 572, 573, 574, 575, 576, 577, 755, 578,
	579, 581, 580, 582, 1617, 583, 0, 584, 585, 586,
	0, 0, 0, 0, 0, 587, 588, 590, 0, 591,
	592, 593, 594, 589, 595, 596, 597, 598, 599, 600,
	1618, 602, 603, 601, 604, 605, 1345, 606, 607, 608,
	609, 610, 756, 611, 0, 612, 613, 620, 621, 622,
	614, 615, 616, 623, 624, 625, 626, 627, 629, 628,
	1619, 631, 632, 630, 633, 634, 635, 1620, 636, 757,
	637, 617, 618, 638, 639, 1346, 640, 641, 642, 643,
	644, 645, 646, 758, 0, 647, 1621, 648, 649, 650,
	651, 652, 653, 655, 619, 656, 661, 662, 759, 657,
	658, 659, 660, 760, 664, 665, 666, 667, 1622, 668,
	669, 0, 663, 654, 1623, 670, 671, 672, 673, 674,
	675, 0, 676, 677, 1624, 678, 761, 762, 763, 764,
	1625, 690, 1626, 679, 681, 682, 683, 684, 765, 685,
	766, 1627, 686, 687, 688, 689, 680, 691, 692, 1628,
	1629, 693, 694, 696, 698, 699, 695, 697, 700, 1630,
	701, 1631, 0, 702, 703, 704, 767, 768, 769, 1632,
	706, 705, 707, 708, 709, 770, 710, 711, 712, 1633,
	1634, 1635, 1636, 713, 714, 771, 715, 716, 717, 1552,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 308, 309, 311, 310,
	312, 313, 314, 315, 1558, 316, 317, 1559, 1560, 1561,
	0, 1562, 718, 1563, 1564, 1565, 318, 1566, 319, 320,
	321, 1330, 322, 323, 324, 325, 326, 327, 328, 719,
	720, 0, 329, 721, 330, 722, 1567, 723, 331, 332,
	333, 334, 335, 336, 337, 1568, 1569, 0, 338, 724,
	725, 726, 1570, 339, 340, 727, 1571, 1638, 1572, 341,
	342, 343, 344, 345, 346, 347, 348, 0, 1573, 350,
	351, 352, 349, 353, 1574, 354, 0, 355, 356, 357,
	358, 359, 360, 361, 1575, 362, 363, 364, 1331, 365,
	366, 367, 1576, 1577, 1579, 1578, 1580, 1581, 1582, 368,
	369, 370, 371, 372, 0, 373, 375, 728, 729, 1583,
	378, 380, 374, 376, 1584, 379, 377, 381, 1585, 382,
	383, 384, 1586, 1587, 385, 386, 387, 1588, 388, 389,
	390, 1589, 391, 392, 393, 1590, 394, 395, 730, 396,
	397, 398, 400, 402, 399, 401, 403, 404, 405, 406,
	407, 731, 732, 408, 1591, 305, 1592, 0, 0, 0,
	0, 409, 410, 411, 733, 0, 0, 0, 412, 1593,
	413, 414, 415, 1594, 416, 417, 1595, 1332, 418, 419,
	420, 734, 735, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 1596, 430, 736, 1597, 737, 431, 1598, 432,
	433, 434, 435, 436, 437, 438, 738, 739, 740, 531,
	1334, 439, 440, 441, 1599, 442, 443, 444, 445, 446,
	0, 0, 0, 306, 447, 448, 449, 1600, 1333, 741,
	450, 532, 451, 742, 743, 1601, 744, 1602, 452, 453,
	455, 1335, 745, 1336, 454, 456, 457, 1337, 458, 0,
	0, 0, 459, 460, 461, 462, 463, 464, 1603, 465,
	467, 466, 1604, 469, 746, 468, 1338, 470, 471, 1339,
	1605, 472, 473, 474, 475, 476, 477, 480, 1606, 1607,
	478, 479, 481, 482, 0, 483, 484, 486, 489, 485,
	487, 488, 490, 503, 504, 491, 492, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 506, 0, 505,
	1340, 507, 508, 509, 510, 511, 518, 520, 521, 516,
	517, 519, 522, 523, 525, 513, 514, 515, 1341, 524,
	512, 1608, 307, 1342, 526, 527, 528, 529, 1609, 747,
	530, 748, 533, 534, 1610, 0, 535, 0, 536, 1611,
	1612, 538, 539, 540, 1613, 1614, 541, 542, 749, 1343,
	543, 1344, 750, 544, 545, 537, 546, 547, 548, 549,
	550, 551, 552, 553, 554, 555, 1615, 556, 557, 751,
	558, 559, 560, 752, 561, 562, 563, 753, 564, 754,
	565, 566, 1616, 567, 568, 569, 0, 570, 571, 572,
	573, 574, 575, 576, 577, 755, 578, 579, 581, 580,
	582, 1617, 583, 0, 584, 585, 586, 0, 0, 0,
	0, 0, 587, 588, 590, 0, 591, 592, 593, 594,
	589, 595, 596, 597, 598, 599, 600, 1618, 602, 603,
	601, 604, 605, 1345, 606, 607, 608, 609, 610, 756,
	611, 0, 612, 613, 620, 621, 622, 614, 615, 616,
	623, 624, 625, 626, 627, 629, 628, 1619, 631, 632,
	630, 633, 634, 635, 1620, 636, 757, 637, 617, 618,
	638, 639, 1346, 640, 641, 642, 643, 644, 645, 646,
	758, 0, 647, 1621, 648, 649, 650, 651, 652, 653,
	655, 619, 656, 661, 662, 759, 657, 658, 659, 660,
	760, 664, 665, 666, 667, 1622, 668, 669, 0, 663,
	654, 1623, 670, 671, 672, 673, 674, 675, 0, 676,
	677, 1624, 678, 761, 762, 763, 764, 1625, 690, 1626,
	679, 681, 682, 683, 684, 765, 685, 766, 1627, 686,
	687, 688, 689, 680, 691, 692, 1628, 1629, 693, 694,
	696, 698, 699, 695, 697, 700, 1630, 701, 1631, 0,
	702, 703, 704, 767, 768, 769, 1632, 706, 705, 707,
	708, 709, 770, 710, 711, 712, 1633, 1634, 1635, 1636,
	713, 714, 771, 715, 716, 717, 2851, 0, 1266, 1238,
	1239, 1240, 1236, 1237, 1249, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 308, 309, 311, 310, 312,
	313, 314, 315, 2848, 316, 317, 0, 0, 0, 0,
	0, 1290, 1254, 0, 0, 318, 0, 319, 320, 321,
	1330, 322, 323, 324, 325, 326, 327, 328, 719, 1303,
	0, 329, 1310, 330, 1309, 0, 1320, 331, 332, 333,
	334, 335, 336, 337, 1256, 1289, 1221, 338, 1350, 1351,
	726, 0, 339, 340, 1296, 0, 1277, 0, 341, 342,
	343, 344, 345, 346, 347, 348, 0, 0, 350, 351,
	352, 349, 353, 0, 354, 0, 355, 356, 357, 358,
	359, 360, 361, 0, 362, 363, 364, 1331, 365, 366,
	367, 1280, 1278, 1279, 1286, 1282, 1281, 1285, 368, 369,
	370, 371, 372, 1313, 373, 375, 1307, 1306, 1226, 378,
	380, 374, 376, 0, 379, 377, 381, 0, 382, 383,
	384, 2849, 0, 385, 1298, 387, 0, 388, 389, 390,
	0, 391, 392, 393, 0, 394, 395, 1232, 396, 397,
	398, 400, 402, 399, 401, 403, 404, 405, 406, 407,
	1321, 1322, 408, 1245, 305, 0, 0, 0, 0, 0,
	409, 410, 411, 1305, 0, 0, 0, 412, 0, 413,
	414, 415, 0, 416, 417, 0, 1332, 418, 419, 420,
	1318, 1319, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 0, 430, 1328, 0, 1255, 431, 0, 432, 433,
	434, 435, 436, 437, 438, 1291, 1292, 1295, 531, 1334,
	439, 440, 441, 0, 442, 443, 444, 445, 446, 0,
	0, 0, 306, 447, 448, 449, 0, 1333, 741, 450,
	532, 451, 1300, 1301, 0, 1261, 0, 452, 453, 455,
	1335, 1293, 1336, 454, 456, 457, 1337, 458, 0, 0,
	0, 459, 460, 461, 462, 463, 464, 0, 465, 467,
	466, 0, 469, 1329, 468, 1338, 470, 471, 1339, 0,
	472, 473, 474, 475, 476, 477, 480, 1284, 1283, 478,
	479, 481, 482, 0, 483, 484, 486, 489, 485, 487,
	488, 490, 503, 504, 491, 492, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 506, 0, 505, 1340,
	507, 508, 509, 510, 511, 518, 520, 521, 516, 517,
	519, 522, 523, 525, 513, 514, 515, 1341, 524, 512,
	1223, 307, 1342, 526, 527, 528, 529, 1246, 1294, 530,
	1308, 533, 534, 0, 0, 535, 0, 536, 0, 0,
	538, 539, 540, 0, 0, 541, 542, 749, 1343, 543,
	1344, 1323, 544, 545, 1233, 546, 547, 548, 549, 550,
	551, 552, 553, 554, 555, 0, 556, 557, 751, 558,
	559, 560, 752, 561, 562, 563, 1324, 564, 754, 565,
	566, 0, 567, 568, 569, 0, 570, 571, 572, 573,
	574, 575, 576, 577, 1304, 578, 579, 581, 580, 582,
	0, 583, 0, 584, 585, 586, 0, 0, 0, 0,
	0, 587, 588, 590, 0, 591, 592, 593, 594, 589,
	595, 596, 597, 598, 599, 600, 0, 602, 603, 601,
	604, 605, 1345, 606, 607, 608, 609, 610, 1234, 611,
	0, 612, 613, 620, 621, 622, 614, 615, 616, 623,
	624, 625, 626, 627, 629, 628, 0, 631, 632, 630,
	633, 634, 635, 1287, 636, 757, 637, 617, 618, 638,
	639, 1346, 640, 641, 642, 643, 644, 645, 646, 1302,
	0, 647, 0, 648, 649, 650, 651, 652, 653, 655,
	619, 656, 661, 662, 1349, 657, 658, 659, 660, 1325,
	664, 665, 666, 667, 0, 668, 669, 1220, 663, 654,
	0, 670, 671, 672, 673, 674, 675, 0, 676, 677,
	0, 678, 1314, 1315, 1316, 1317, 0, 690, 0, 679,
	681, 682, 683, 684, 1326, 685, 1327, 1244, 686, 687,
	688, 689, 680, 691, 692, 0, 1227, 693, 694, 696,
	698, 699, 695, 697, 700, 1288, 701, 0, 0, 702,
	703, 704, 767, 1311, 1348, 2847, 706, 705, 707, 708,
	709, 770, 710, 711, 712, 0, 0, 0, 0, 713,
	714, 771, 715, 716, 717, 1224, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1219, 0, 0, 0, 0, 0, 0, 1217, 1218, 2850,
	0, 0, 0, 0, 0, 0, 0, 1250, 2846, 0,
	1208, 1248, 1266, 1238, 1239, 1240, 1236, 1237, 1249, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 308,
	309, 311, 310, 312, 313, 314, 315, 0, 316, 317,
	0, 0, 0, 0, 0, 1290, 1254, 0, 0, 318,
	0, 319, 320, 321, 1330, 322, 323, 324, 325, 326,
	327, 328, 719, 1303, 0, 329, 1310, 330, 1309, 0,
	1320, 331, 332, 333, 334, 335, 336, 337, 1256, 1289,
	1221, 338, 1350, 1351, 726, 0, 339, 340, 1296, 0,
	1277, 0, 341, 342, 343, 344, 345, 346, 347, 348,
	0, 0, 350, 351, 352, 349, 353, 0, 354, 0,
	355, 356, 357, 358, 359, 360, 361, 0, 362, 363,
	364, 1331, 365, 366, 367, 1280, 1278, 1279, 1286, 1282,
	1281, 1285, 368, 369, 370, 371, 372, 1313, 373, 375,
	1307, 1306, 1226, 378, 380, 374, 376, 0, 379, 377,
	381, 0, 382, 383, 384, 0, 0, 385, 1298, 387,
	0, 388, 389, 390, 0, 391, 392, 393, 0, 394,
	395, 1232, 396, 397, 398, 400, 402, 399, 401, 403,
	404, 405, 406, 407, 1321, 1322, 408, 1245, 305, 0,
	0, 0, 0, 0, 409, 410, 411, 1305, 0, 0,
	0, 412, 0, 413, 414, 415, 0, 416, 417, 0,
	1332, 418, 419, 420, 1318, 1319, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 0, 430, 1328, 0, 1255,
	431, 0, 432, 433, 434, 435, 436, 437, 438, 1291,
	1292, 1295, 531, 1334, 439, 440, 441, 0, 442, 443,
	444, 445, 446, 0, 0, 0, 306, 447, 448, 449,
	0, 1333, 741, 450, 532, 451, 1300, 1301, 0, 1261,
	0, 452, 453, 455, 1335, 1293, 1336, 454, 456, 457,
	1337, 458, 0, 0, 0, 459, 460, 461, 462, 463,
	464, 0, 465, 467, 466, 0, 469, 1329, 468, 1338,
	470, 471, 1339, 0, 472, 473, 474, 475, 476, 477,
	480, 1284, 1283, 478, 479, 481, 482, 0, 483, 484,
	486, 489, 485, 487, 488, 490, 503, 504, 491, 492,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	506, 0, 505, 1340, 507, 508, 509, 510, 511, 518,
	520, 521, 516, 517, 519, 522, 523, 525, 513, 514,
	515, 1341, 524, 512, 1223, 307, 1342, 526, 527, 528,
	529, 1246, 1294, 530, 1308, 533, 534, 0, 0, 535,
	0, 536, 0, 0, 538, 539, 540, 0, 0, 541,
	542, 749, 1343, 543, 1344, 1323, 544, 545, 1233, 546,
	547, 548, 549, 550, 551, 552, 553, 554, 555, 0,
	556, 557, 751, 558, 559, 560, 752, 561, 562, 563,
	1324, 564, 754, 565, 566, 0, 567, 568, 569, 0,
	570, 571, 572, 573, 574, 575, 576, 577, 1304, 578,
	579, 581, 580, 582, 0, 583, 0, 584, 585, 586,
	0, 0, 0, 0, 0, 587, 588, 590, 0, 591,
	592, 593, 594, 589, 595, 596, 597, 598, 599, 600,
	0, 602, 603, 601, 604, 605, 1345, 606, 607, 608,
	609, 610, 1234, 611, 0, 612, 613, 620, 621, 622,
	614, 615, 616, 623, 624, 625, 626, 627, 629, 628,
	261, 631, 632, 630, 633, 634, 635, 1287, 636, 757,
	637, 617, 618, 638, 639, 1346, 640, 641, 642, 643,
	644, 645, 646, 1302, 0, 647, 0, 648, 649, 650,
	651, 652, 653, 655, 619, 656, 661, 662, 1349, 657,
	658, 659, 660, 1325, 664, 665, 666, 667, 0, 668,
	669, 1220, 663, 654, 263, 670, 671, 672, 673, 674,
	675, 0, 676, 677, 0, 678, 1314, 1315, 1316, 1317,
	0, 690, 0, 679, 681, 682, 683, 684, 1326, 685,
	1327, 1244, 686, 687, 688, 689, 680, 691, 692, 0,
	1227, 693, 694, 696, 698, 699, 695, 697, 700, 1288,
	701, 0, 0, 702, 703, 704, 1800, 1311, 1348, 0,
	706, 705, 707, 708, 709, 770, 710, 711, 712, 0,
	0, 0, 255, 713, 714, 771, 715, 716, 717, 1224,
	0, 256, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1219, 0, 0, 0, 0, 0,
	0, 1217, 1218, 1266, 1238, 1239, 1240, 1236, 1237, 1249,
	0, 2069, 2067, 0, 0, 1248, 0, 0, 0, 0,
	308, 309, 311, 310, 312, 313, 314, 315, 0, 316,
	317, 0, 0, 0, 0, 0, 1290, 1254, 0, 0,
	318, 0, 319, 320, 321, 1330, 322, 323, 324, 325,
	326, 327, 328, 719, 1303, 0, 329, 1310, 330, 1309,
	0, 1320, 331, 332, 333, 334, 335, 336, 337, 1256,
	1289, 1221, 338, 1350, 1351, 726, 0, 339, 340, 1296,
	0, 1277, 0, 341, 342, 343, 344, 345, 346, 347,
	348, 0, 0, 350, 351, 352, 349, 353, 0, 354,
	0, 355, 356, 357, 358, 359, 360, 361, 0, 362,
	363, 364, 1331, 365, 366, 367, 1280, 1278, 1279, 1286,
	1282, 1281, 1285, 368, 369, 370, 371, 372, 1313, 373,
	375, 1307, 1306, 1226, 378, 380, 374, 376, 0, 379,
	377, 381, 0, 382, 383, 384, 0, 0, 385, 1298,
	387, 0, 388, 389, 390, 0, 391, 392, 393, 0,
	394, 395, 1232, 396, 397, 398, 400, 402, 399, 401,
	403, 404, 405, 406, 407, 1321, 1322, 408, 1245, 305,
	0, 0, 0, 0, 0, 409, 410, 411, 1305, 0,
	0, 0, 412, 0, 413, 414, 415, 0, 416, 417,
	0, 1332, 418, 419, 420, 1318, 1319, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 0, 430, 1328, 0,
	1255, 431, 0, 432, 433, 434, 435, 436, 437, 438,
	1291, 1292, 1295, 531, 1334, 439, 440, 441, 0, 442,
	443, 444, 445, 446, 0, 0, 0, 306, 447, 448,
	449, 0, 1333, 741, 450, 532, 451, 1300, 1301, 0,
	1261, 0, 452, 453, 455, 1335, 1293, 1336, 454, 456,
	457, 1337, 458, 0, 0, 0, 459, 460, 461, 462,
	463, 464, 0, 465, 467, 466, 0, 469, 1329, 468,
	1338, 470, 471, 1339, 0, 472, 473, 474, 475, 476,
	477, 480, 1284, 1283, 478, 479, 481, 482, 0, 483,
	484, 486, 489, 485, 487, 488, 490, 503, 504, 491,
	492, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 506, 0, 505, 1340, 507, 508, 509, 510, 511,
	518, 520, 521, 516, 517, 519, 522, 523, 525, 513,
	514, 515, 1341, 524, 512, 1223, 307, 1342, 526, 527,
	528, 529, 1246, 1294, 530, 1308, 533, 534, 0, 0,
	535, 0, 536, 0, 0, 538, 539, 540, 0, 0,
	541, 542, 749, 1343, 543, 1344, 1323, 544, 545, 1233,
	546, 547, 548, 549, 550, 551, 552, 553, 554, 555,
	0, 556, 557, 751, 558, 559, 560, 752, 561, 562,
	563, 1324, 564, 754, 565, 566, 0, 567, 568, 569,
	0, 570, 571, 572, 573, 574, 575, 576, 577, 1304,
	578, 579, 581, 580, 582, 0, 583, 0, 584, 585,
	586, 0, 0, 0, 0, 0, 587, 588, 590, 0,
	591, 592, 593, 594, 589, 595, 596, 597, 598, 599,
	600, 0, 602, 603, 601, 604, 605, 1345, 606, 607,
	608, 609, 610, 1234, 611, 0, 612, 613, 620, 621,
	622, 614, 615, 616, 623, 624, 625, 626, 627, 629,
	628, 261, 631, 632, 630, 633, 634, 635, 1287, 636,
	757, 637, 617, 618, 638, 639, 1346, 640, 641, 642,
	643, 644, 645, 646, 1302, 0, 647, 0, 648, 649,
	650, 651, 652, 653, 655, 619, 656, 661, 662, 1349,
	657, 658, 659, 660, 1325, 664, 665, 666, 667, 0,
	668, 669, 1220, 663, 654, 263, 670, 671, 672, 673,
	674, 675, 0, 676, 677, 0, 678, 1314, 1315, 1316,
	1317, 0, 690, 0, 679, 681, 682, 683, 684, 1326,
	685, 1327, 1244, 686, 687, 688, 689, 680, 691, 692,
	0, 1227, 693, 694, 696, 698, 699, 695, 697, 700,
	1288, 701, 0, 0, 702, 703, 704, 1800, 1311, 1348,
	0, 706, 705, 707, 708, 709, 770, 710, 711, 712,
	0, 0, 0, 255, 713, 714, 771, 715, 716, 717,
	1224, 0, 256, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1219, 0, 0, 0, 0,
	0, 0, 1217, 1218, 1266, 1238, 1239, 1240, 1236, 1237,
	1249, 0, 2069, 3552, 0, 0, 1248, 0, 0, 0,
	0, 308, 309, 311, 310, 312, 313, 314, 315, 0,
	316, 317, 0, 0, 0, 0, 0, 1290, 1254, 0,
	0, 318, 0, 319, 320, 321, 1330, 322, 323, 324,
	325, 326, 327, 328, 719, 1303, 0, 329, 1310, 330,
	1309, 0, 1320, 331, 332, 333, 334, 335, 336, 337,
	1256, 1289, 1221, 338, 1350, 1351, 726, 0, 339, 340,
	1296, 0, 1277, 0, 341, 342, 343, 344, 345, 346,
	347, 348, 0, 0, 350, 351, 352, 349, 353, 0,
	354, 0, 355, 356, 357, 358, 359, 360, 361, 0,
	362, 363, 364, 1331, 365, 366, 367, 1280, 1278, 1279,
	1286, 1282, 1281, 1285, 368, 369, 370, 371, 372, 1313,
	373, 375, 1307, 1306, 1226, 378, 380, 374, 376, 0,
	379, 377, 381, 0, 382, 383, 384, 0, 0, 385,
	1298, 387, 0, 388, 389, 390, 0, 391, 392, 393,
	0, 394, 395, 1232, 396, 397, 398, 400, 402, 399,
	401, 403, 404, 405, 406, 407, 1321, 1322, 408, 1245,
	305, 0, 0, 0, 0, 0, 409, 410, 411, 1305,
	0, 0, 0, 412, 0, 413, 414, 415, 0, 416,
	417, 0, 1332, 418, 419, 420, 1318, 1319, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 0, 430, 1328,
	0, 1255, 431, 0, 432, 433, 434, 435, 436, 437,
	438, 1291, 1292, 1295, 531, 1334, 439, 440, 441, 0,
	442, 443, 444, 445, 446, 0, 0, 0, 306, 447,
	448, 449, 0, 1333, 741, 450, 532, 451, 1300, 1301,
	0, 1261, 0, 452, 453, 455, 1335, 1293, 1336, 454,
	456, 457, 1337, 458, 0, 0, 0, 459, 460, 461,
	462, 463, 464, 0, 465, 467, 466, 0, 469, 1329,
	468, 1338, 470, 471, 1339, 0, 472, 473, 474, 475,
	476, 477, 480, 1284, 1283, 478, 479, 481, 482, 0,
	483, 484, 486, 489, 485, 487, 488, 490, 503, 504,
	491, 492, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 506, 0, 505, 1340, 507, 508, 509, 510,
	511, 518, 520, 521, 516, 517, 519, 522, 523, 525,
	513, 514, 515, 1341, 524, 512, 1223, 307, 1342, 526,
	527, 528, 529, 1246, 1294, 530, 1308, 533, 534, 0,
	0, 535, 0, 536, 0, 0, 538, 539, 540, 0,
	0, 541, 542, 749, 1343, 543, 1344, 1323, 544, 545,
	1233, 546, 547, 548, 549, 550, 551, 552, 553, 554,
	555, 0, 556, 557, 751, 558, 559, 560, 752, 561,
	562, 563, 1324, 564, 754, 565, 566, 0, 567, 568,
	569, 0, 570, 571, 572, 573, 574, 575, 576, 577,
	1304, 578, 579, 581, 580, 582, 0, 583, 0, 584,
	585, 586, 0, 0, 0, 0, 0, 587, 588, 590,
	0, 591, 592, 593, 594, 589, 595, 596, 597, 598,
	599, 600, 0, 602, 603, 601, 604, 605, 1345, 606,
	607, 608, 609, 610, 1234, 611, 0, 612, 613, 620,
	621, 622, 614, 615, 616, 623, 624, 625, 626, 627,
	629, 628, 261, 631, 632, 630, 633, 634, 635, 1287,
	636, 757, 637, 617, 618, 638, 639, 1346, 640, 641,
	642, 643, 644, 645, 646, 1302, 0, 647, 0, 648,
	649, 650, 651, 652, 653, 655, 619, 656, 661, 662,
	1349, 657, 658, 659, 660, 1325, 664, 665, 666, 667,
	0, 668, 669, 1220, 663, 654, 263, 670, 671, 672,
	673, 674, 675, 0, 676, 677, 0, 678, 1314, 1315,
	1316, 1317, 0, 690, 0, 679, 681, 682, 683, 684,
	1326, 685, 1327, 1244, 686, 687, 688, 689, 680, 691,
	692, 0, 1227, 693, 694, 696, 698, 699, 695, 697,
	700, 1288, 701, 0, 0, 702, 703, 704, 1800, 1311,
	1348, 0, 706, 705, 707, 708, 709, 770, 710, 711,
	712, 0, 0, 0, 255, 713, 714, 771, 715, 716,
	717, 1224, 0, 256, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1219, 0, 0, 0,
	0, 0, 0, 1217, 1218, 1266, 1238, 1239, 1240, 1236,
	1237, 1249, 0, 2069, 2067, 0, 0, 1248, 0, 0,
	0, 0, 308, 309, 311, 310, 312, 313, 314, 315,
	0, 316, 317, 0, 0, 0, 0, 0, 1290, 1254,
	0, 0, 318, 0, 319, 320, 321, 1330, 322, 323,
	324, 325, 326, 327, 328, 719, 1303, 0, 329, 1310,
	330, 1309, 2981, 1320, 331, 332, 333, 334, 335, 336,
	337, 1256, 1289, 1221, 338, 1350, 1351, 726, 0, 339,
	340, 1296, 0, 1277, 0, 341, 342, 343, 344, 345,
	346, 347, 348, 0, 0, 350, 351, 352, 349, 353,
	0, 354, 0, 355, 356, 357, 358, 359, 360, 361,
	0, 362, 363, 364, 1331, 365, 366, 367, 1280, 1278,
	1279, 1286, 1282, 1281, 1285, 368, 369, 370, 371, 372,
	1313, 373, 375, 1307, 1306, 1226, 378, 380, 374, 376,
	0, 379, 377, 381, 0, 382, 383, 384, 0, 0,
	385, 1298, 387, 0, 388, 389, 390, 0, 391, 392,
	393, 0, 394, 395, 1232, 396, 397, 398, 400, 402,
	399, 401, 403, 404, 405, 406, 407, 1321, 1322, 408,
	1245, 305, 0, 0, 0, 0, 0, 409, 410, 411,
	1305, 0, 0, 0, 412, 0, 413, 414, 415, 0,
	416, 417, 2986, 1332, 418, 419, 420, 1318, 1319, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 0, 430,
	1328, 0, 1255, 431, 0, 432, 433, 434, 435, 436,
	437, 438, 1291, 1292, 1295, 531, 1334, 439, 440, 441,
	0, 442, 443, 444, 445, 446, 0, 0, 0, 306,
	447, 448, 449, 0, 1333, 741, 450, 532, 451, 1300,
	1301, 0, 1261, 0, 452, 453, 455, 1335, 1293, 1336,
	454, 456, 457, 1337, 458, 0, 0, 0, 459, 460,
	461, 462, 463, 464, 0, 465, 467, 466, 2982, 469,
	1329, 468, 1338, 470, 471, 1339, 0, 472, 473, 474,
	475, 476, 477, 480, 1284, 1283, 478, 479, 481, 482,
	0, 483, 484, 486, 489, 485, 487, 488, 490, 503,
	504, 491, 492, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 506, 0, 505, 1340, 507, 508, 509,
	510, 511, 518, 520, 521, 516, 517, 519, 522, 523,
	525, 513, 514, 515, 1341, 524, 512, 1223, 307, 1342,
	526, 527, 528, 529, 1246, 1294, 530, 1308, 533, 534,
	0, 0, 535, 0, 536, 0, 0, 538, 539, 540,
	0, 0, 541, 542, 749, 1343, 543, 1344, 1323, 544,
	545, 1233, 546, 547, 548, 549, 550, 551, 552, 553,
	554, 555, 0, 556, 557, 751, 558, 559, 560, 752,
	561, 562, 563, 1324, 564, 754, 565, 566, 0, 567,
	568, 569, 0, 570, 571, 572, 573, 574, 575, 576,
	577, 1304, 578, 579, 581, 580, 582, 0, 583, 0,
	584, 585, 586, 0, 0, 0, 0, 0, 587, 588,
	590, 0, 591, 592, 593, 594, 589, 595, 596, 597,
	598, 599, 600, 0, 602, 603, 601, 604, 605, 1345,
	606, 607, 608, 609, 610, 1234, 611, 0, 612, 613,
	620, 621, 622, 614, 615, 616, 623, 624, 625, 626,
	627, 629, 628, 0, 631, 632, 630, 633, 634, 635,
	1287, 636, 757, 637, 617, 618, 638, 639, 1346, 640,
	641, 642, 643, 644, 645, 646, 1302, 0, 647, 0,
	648, 649, 650, 651, 652, 653, 655, 619, 656, 661,
	662, 1349, 657, 658, 659, 660, 1325, 664, 665, 666,
	667, 0, 668, 669, 1220, 663, 654, 0, 670, 671,
	672, 673, 674, 675, 0, 676, 677, 0, 678, 1314,
	1315, 1316, 1317, 0, 690, 2983, 679, 681, 682, 683,
	684, 1326, 685, 1327, 1244, 686, 687, 688, 689, 680,
	691, 692, 0, 1227, 693, 694, 696, 698, 699, 695,
	697, 700, 1288, 701, 0, 0, 702, 703, 704, 767,
	1311, 1348, 0, 706, 705, 707, 708, 709, 770, 710,
	711, 712, 0, 0, 0, 0, 713, 714, 771, 715,
	716, 717, 1224, 0, 0, 0, 0, 2896, 0, 1266,
	1238, 1239, 1240, 1236, 1237, 1249, 0, 1219, 0, 0,
	0, 0, 0, 0, 1217, 1218, 308, 309, 311, 310,
	312, 313, 314, 315, 1250, 316, 317, 0, 1248, 0,
	0, 0, 1290, 1254, 0, 0, 318, 0, 319, 320,
	321, 1330, 322, 323, 324, 325, 326, 327, 328, 719,
	1303, 0, 329, 1310, 330, 1309, 0, 1320, 331, 332,
	333, 334, 335, 336, 337, 1256, 1289, 1221, 338, 1350,
	1351, 726, 0, 339, 340, 1296, 0, 1277, 0, 341,
	342, 343, 344, 345, 346, 347, 348, 0, 0, 350,
	351, 352, 349, 353, 0, 354, 0, 355, 356, 357,
	358, 359, 360, 361, 0, 362, 363, 364, 1331, 365,
	366, 367, 1280, 1278, 1279, 1286, 1282, 1281, 1285, 368,
	369, 370, 371, 372, 1313, 373, 375, 1307, 1306, 1226,
	378, 380, 374, 376, 0, 379, 377, 381, 0, 382,
	383, 384, 0, 0, 385, 1298, 387, 0, 388, 389,
	390, 0, 391, 392, 393, 0, 394, 395, 1232, 396,
	397, 398, 400, 402, 399, 401, 403, 404, 405, 406,
	407, 1321, 1322, 408, 1245, 305, 0, 0, 0, 0,
	0, 409, 410, 411, 1305, 0, 0, 0, 412, 0,
	413, 414, 415, 0, 416, 417, 0, 1332, 418, 419,
	420, 1318, 1319, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 0, 430, 1328, 0, 1255, 431, 0, 432,
	433, 434, 435, 436, 437, 438, 1291, 1292, 1295, 531,
	1334, 439, 440, 441, 0, 442, 443, 444, 445, 446,
	0, 0, 0, 306, 447, 448, 449, 0, 1333, 741,
	450, 532, 451, 1300, 1301, 0, 1261, 0, 452, 453,
	455, 1335, 1293, 1336, 454, 456, 457, 1337, 458, 0,
	0, 0, 459, 460, 461, 462, 463, 464, 0, 465,
	467, 466, 0, 469, 1329, 468, 1338, 470, 471, 1339,
	0, 472, 473, 474, 475, 476, 477, 480, 1284, 1283,
	478, 479, 481, 482, 0, 483, 484, 486, 489, 485,
	487, 488, 490, 503, 504, 491, 492, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 506, 0, 505,
	1340, 507, 508, 509, 510, 511, 518, 520, 521, 516,
	517, 519, 522, 523, 525, 513, 514, 515, 1341, 524,
	512, 1223, 307, 1342, 526, 527, 528, 529, 1246, 1294,
	530, 1308, 533, 534, 0, 0, 535, 0, 536, 0,
	0, 538, 539, 540, 0, 0, 541, 542, 749, 1343,
	543, 1344, 1323, 544, 545, 1233, 546, 547, 548, 549,
	550, 551, 552, 553, 554, 555, 0, 556, 557, 751,
	558, 559, 560, 752, 561, 562, 563, 1324, 564, 754,
	565, 566, 0, 567, 568, 569, 0, 570, 571, 572,
	573, 574, 575, 576, 577, 1304, 578, 579, 581, 580,
	582, 0, 583, 0, 584, 585, 586, 0, 0, 0,
	0, 0, 587, 588, 590, 0, 591, 592, 593, 594,
	589, 595, 596, 597, 598, 599, 600, 0, 602, 603,
	601, 604, 605, 1345, 606, 607, 608, 609, 610, 1234,
	611, 0, 612, 613, 620, 621, 622, 614, 615, 616,
	623, 624, 625, 626, 627, 629, 628, 0, 631, 632,
	630, 633, 634, 635, 1287, 636, 757, 637, 617, 618,
	638, 639, 1346, 640, 641, 642, 643, 644, 645, 646,
	1302, 0, 647, 0, 648, 649, 650, 651, 652, 653,
	655, 619, 656, 661, 662, 1349, 657, 658, 659, 660,
	1325, 664, 665, 666, 667, 0, 668, 669, 1220, 663,
	654, 0, 670, 671, 672, 673, 674, 675, 0, 676,
	677, 0, 678, 1314, 1315, 1316, 1317, 0, 690, 0,
	679, 681, 682, 683, 684, 1326, 685, 1327, 1244, 686,
	687, 688, 689, 680, 691, 692, 0, 1227, 693, 694,
	696, 698, 699, 695, 697, 700, 1288, 701, 0, 0,
	702, 703, 704, 767, 1311, 1348, 0, 706, 705, 707,
	708, 709, 770, 710, 711, 712, 0, 0, 0, 0,
	713, 714, 771, 715, 716, 717, 1224, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1219, 0, 0, 0, 0, 0, 0, 1217, 1218,
	0, 0, 0, 0, 0, 0, 0, 0, 1250, 2894,
	0, 2893, 1248, 1266, 1238, 1239, 1240, 1236, 1237, 1249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	308, 309, 311, 310, 312, 313, 314, 315, 0, 316,
	317, 0, 0, 0, 0, 0, 1290, 1254, 0, 0,
	318, 0, 319, 320, 321, 1330, 322, 323, 324, 325,
	326, 327, 328, 719, 1303, 0, 329, 1310, 330, 1309,
	0, 1320, 331, 332, 333, 334, 335, 336, 337, 1256,
	1289, 1221, 338, 1350, 1351, 726, 0, 339, 340, 1296,
	0, 1277, 0, 341, 342, 343, 344, 345, 346, 347,
	348, 0, 0, 350, 351, 352, 349, 353, 0, 354,
	0, 355, 356, 357, 358, 359, 360, 361, 0, 362,
	363, 364, 1331, 365, 366, 367, 1280, 1278, 1279, 1286,
	1282, 1281, 1285, 368, 369, 370, 371, 372, 1313, 373,
	375, 1307, 1306, 1226, 378, 380, 374, 376, 0, 379,
	377, 381, 0, 382, 383, 384, 0, 0, 385, 1298,
	387, 0, 388, 389, 390, 0, 391, 392, 393, 0,
	394, 395, 1232, 396, 397, 398, 400, 402, 399, 401,
	403, 404, 405, 406, 407, 1321, 1322, 408, 1245, 305,
	0, 0, 0, 0, 0, 409, 410, 411, 1305, 0,
	0, 0, 412, 0, 413, 414, 415, 0, 416, 417,
	0, 1332, 418, 419, 420, 1318, 1319, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 0, 430, 1328, 0,
	1255, 431, 0, 432, 433, 434, 435, 436, 437, 438,
	1291, 1292, 1295, 531, 1334, 439, 440, 441, 0, 442,
	443, 444, 445, 446, 0, 0, 0, 306, 447, 448,
	449, 0, 1333, 741, 450, 532, 451, 1300, 1301, 0,
	1261, 0, 452, 453, 455, 1335, 1293, 1336, 454, 456,
	457, 1337, 458, 0, 0, 0, 459, 460, 461, 462,
	463, 464, 0, 465, 467, 466, 0, 469, 1329, 468,
	1338, 470, 471, 1339, 0, 472, 473, 474, 475, 476,
	477, 480, 1284, 1283, 478, 479, 481, 482, 0, 483,
	484, 486, 489, 485, 487, 488, 490, 503, 504, 491,
	492, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 506, 0, 505, 1340, 507, 508, 509, 510, 511,
	518, 520, 521, 516, 517, 519, 522, 523, 525, 513,
	514, 515, 1341, 524, 512, 1223, 307, 1342, 526, 527,
	528, 529, 1246, 1294, 530, 1308, 533, 534, 0, 0,
	535, 0, 536, 0, 0, 538, 539, 540, 0, 0,
	541, 542, 749, 1343, 543, 1344, 1323, 544, 545, 1233,
	546, 547, 548, 549, 550, 551, 552, 553, 554, 555,
	0, 556, 557, 751, 558, 559, 560, 752, 561, 562,
	563, 1324, 564, 754, 565, 566, 0, 567, 568, 569,
	0, 570, 571, 572, 573, 574, 575, 576, 577, 1304,
	578, 579, 581, 580, 582, 0, 583, 0, 584, 585,
	586, 0, 0, 0, 0, 0, 587, 588, 590, 0,
	591, 592, 593, 594, 589, 595, 596, 597, 598, 599,
	600, 0, 602, 603, 601, 604, 605, 1345, 606, 607,
	608, 609, 610, 1234, 611, 0, 612, 613, 620, 621,
	622, 614, 615, 616, 623, 624, 625, 626, 627, 629,
	628, 0, 631, 632, 630, 633, 634, 635, 1287, 636,
	757, 637, 617, 618, 638, 639, 1346, 640, 641, 642,
	643, 644, 645, 646, 1302, 0, 647, 0, 648, 649,
	650, 651, 652, 653, 655, 619, 656, 661, 662, 1349,
	657, 658, 659, 660, 1325, 664, 665, 666, 667, 0,
	668, 669, 1220, 663, 654, 0, 670, 671, 672, 673,
	674, 675, 0, 676, 677, 0, 678, 1314, 1315, 1316,
	1317, 0, 690, 0, 679, 681, 682, 683, 684, 1326,
	685, 1327, 1244, 686, 687, 688, 689, 680, 691, 692,
	0, 1227, 693, 694, 696, 698, 699, 695, 697, 700,
	1288, 701, 0, 0, 702, 703, 704, 767, 1311, 1348,
	0, 706, 705, 707, 708, 709, 770, 710, 711, 712,
	0, 0, 0, 0, 713, 714, 771, 715, 716, 717,
	1224, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1219, 0, 0, 0, 0,
	0, 0, 1217, 1218, 0, 0, 0, 0, 0, 0,
	0, 0, 1250, 2891, 0, 2890, 1248, 1266, 1238, 1239,
	1240, 1236, 1237, 1249, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 308, 309, 311, 310, 312, 313,
	314, 315, 0, 316, 317, 0, 0, 0, 0, 0,
	1290, 1254, 0, 0, 318, 0, 319, 320, 321, 1330,
	322, 323, 324, 325, 326, 327, 328, 719, 1303, 0,
	329, 1310, 330, 1309, 0, 1320, 331, 332, 333, 334,
	335, 336, 337, 1256, 1289, 1221, 338, 1350, 1351, 726,
	0, 339, 340, 1296, 0, 1277, 0, 341, 342, 343,
	344, 345, 346, 347, 348, 0, 0, 350, 351, 352,
	349, 353, 0, 354, 0, 355, 356, 357, 358, 359,
	360, 361, 0, 362, 363, 364, 1331, 365, 366, 367,
	1280, 1278, 1279, 1286, 1282, 1281, 1285, 368, 369, 370,
	371, 372, 1313, 373, 375, 1307, 1306, 1226, 378, 380,
	374, 376, 0, 379, 377, 381, 0, 382, 383, 384,
	0, 0, 385, 1298, 387, 0, 388, 389, 390, 0,
	391, 392, 393, 0, 394, 395, 1232, 396, 397, 398,
	400, 402, 399, 401, 403, 404, 405, 406, 407, 1321,
	1322, 408, 1245, 305, 0, 0, 0, 0, 0, 409,
	410, 411, 1305, 0, 0, 0, 412, 0, 413, 414,
	415, 0, 416, 417, 0, 1332, 418, 419, 420, 1318,
	1319, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	0, 430, 1328, 0, 1255, 431, 0, 432, 433, 434,
	435, 436, 437, 438, 1291, 1292, 1295, 531, 1334, 439,
	440, 441, 0, 442, 443, 444, 445, 446, 0, 0,
	0, 306, 447, 448, 449, 0, 1333, 741, 450, 532,
	451, 1300, 1301, 0, 1261, 0, 452, 453, 455, 1335,
	1293, 1336, 454, 456, 457, 1337, 458, 0, 0, 0,
	459, 460, 461, 462, 463, 464, 0, 465, 467, 466,
	0, 469, 1329, 468, 1338, 470, 471, 1339, 0, 472,
	473, 474, 475, 476, 477, 480, 1284, 1283, 478, 479,
	481, 482, 0, 483, 484, 486, 489, 485, 487, 488,
	490, 503, 504, 491, 492, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 506, 0, 505, 1340, 507,
	508, 509, 510, 511, 518, 520, 521, 516, 517, 519,
	522, 523, 525, 513, 514, 515, 1341, 524, 512, 1223,
	307, 1342, 526, 527, 528, 529, 1246, 1294, 530, 1308,
	533, 534, 0, 0, 535, 0, 536, 0, 0, 538,
	539, 540, 0, 0, 541, 542, 749, 1343, 543, 1344,
	1323, 544, 545, 1233, 546, 547, 548, 549, 550, 551,
	552, 553, 554, 555, 0, 556, 557, 751, 558, 559,
	560, 752, 561, 562, 563, 1324, 564, 754, 565, 566,
	0, 567, 568, 569, 0, 570, 571, 572, 573, 574,
	575, 576, 577, 1304, 578, 579, 581, 580, 582, 0,
	583, 0, 584, 585, 586, 0, 0, 0, 0, 0,
	587, 588, 590, 0, 591, 592, 593, 594, 589, 595,
	596, 597, 598, 599, 600, 0, 602, 603, 601, 604,
	605, 1345, 606, 607, 608, 609, 610, 1234, 611, 0,
	612, 613, 620, 621, 622, 614, 615, 616, 623, 624,
	625, 626, 627, 629, 628, 0, 631, 632, 630, 633,
	634, 635, 1287, 636, 757, 637, 617, 618, 638, 639,
	1346, 640, 641, 642, 643, 644, 645, 646, 1302, 0,
	647, 0, 648, 649, 650, 651, 652, 653, 655, 619,
	656, 661, 662, 1349, 657, 658, 659, 660, 1325, 664,
	665, 666, 667, 0, 668, 669, 1220, 663, 654, 0,
	670, 671, 672, 673, 674, 675, 0, 676, 677, 0,
	678, 1314, 1315, 1316, 1317, 0, 690, 0, 679, 681,
	682, 683, 684, 1326, 685, 1327, 1244, 686, 687, 688,
	689, 680, 691, 692, 0, 1227, 693, 694, 696, 698,
	699, 695, 697, 700, 1288, 701, 0, 0, 702, 703,
	704, 767, 1311, 1348, 0, 706, 705, 707, 708, 709,
	770, 710, 711, 712, 0, 0, 0, 0, 713, 714,
	771, 715, 716, 717, 1224, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1219,
	0, 0, 0, 0, 0, 0, 1217, 1218, 0, 0,
	0, 0, 0, 0, 0, 0, 1250, 2888, 0, 2887,
	1248, 1266, 1238, 1239, 1240, 1236, 1237, 1249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 308, 309,
	311, 310, 312, 313, 314, 315, 0, 316, 317, 0,
	0, 0, 0, 0, 1290, 1254, 0, 0, 318, 0,
	319, 320, 321, 1330, 322, 323, 324, 325, 326, 327,
	328, 719, 1303, 0, 329, 1310, 330, 1309, 0, 1320,
	331, 332, 333, 334, 335, 336, 337, 1256, 1289, 1221,
	338, 1350, 1351, 726, 0, 339, 340, 1296, 0, 1277,
	0, 341, 342, 343, 344, 345, 346, 347, 348, 0,
	0, 350, 351, 352, 349, 353, 0, 354, 0, 355,
	356, 357, 358, 359, 360, 361, 0, 362, 363, 364,
	1331, 365, 366, 367, 1280, 1278, 1279, 1286, 1282, 1281,
	1285, 368, 369, 370, 371, 372, 1313, 373, 375, 1307,
	1306, 1226, 378, 380, 374, 376, 0, 379, 377, 381,
	0, 382, 383, 384, 0, 0, 385, 1298, 387, 0,
	388, 389, 390, 0, 391, 392, 393, 0, 394, 395,
	1232, 396, 397, 398, 400, 402, 399, 401, 403, 404,
	405, 406, 407, 1321, 1322, 408, 1245, 305, 0, 0,
	0, 0, 0, 409, 410, 411, 1305, 0, 0, 0,
	412, 0, 413, 414, 415, 0, 416, 417, 0, 1332,
	418, 419, 420, 1318, 1319, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 0, 430, 1328, 0, 1255, 431,
	0, 432, 433, 434, 435, 436, 437, 438, 1291, 1292,
	1295, 531, 1334, 439, 440, 441, 0, 442, 443, 444,
	445, 446, 0, 0, 0, 306, 447, 448, 449, 0,
	1333, 741, 450, 532, 451, 1300, 1301, 0, 1261, 0,
	452, 453, 455, 1335, 1293, 1336, 454, 456, 457, 1337,
	458, 0, 0, 0, 459, 460, 461, 462, 463, 464,
	0, 465, 467, 466, 0, 469, 1329, 468, 1338, 470,
	471, 1339, 0, 472, 473, 474, 475, 476, 477, 480,
	1284, 1283, 478, 479, 481, 482, 0, 483, 484, 486,
	489, 485, 487, 488, 490, 503, 504, 491, 492, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 506,
	0, 505, 1340, 507, 508, 509, 510, 511, 518, 520,
	521, 516, 517, 519, 522, 523, 525, 513, 514, 515,
	1341, 524, 512, 1223, 307, 1342, 526, 527, 528, 529,
	1246, 1294, 530, 1308, 533, 534, 0, 0, 535, 0,
	536, 0, 0, 538, 539, 540, 0, 0, 541, 542,
	749, 1343, 543, 1344, 1323, 544, 545, 1233, 546, 547,
	548, 549, 550, 551, 552, 553, 554, 555, 0, 556,
	557, 751, 558, 559, 560, 752, 561, 562, 563, 1324,
	564, 754, 565, 566, 0, 567, 568, 569, 0, 570,
	571, 572, 573, 574, 575, 576, 577, 1304, 578, 579,
	581, 580, 582, 0, 583, 0, 584, 585, 586, 0,
	0, 0, 0, 0, 587, 588, 590, 0, 591, 592,
	593, 594, 589, 595, 596, 597, 598, 599, 600, 0,
	602, 603, 601, 604, 605, 1345, 606, 607, 608, 609,
	610, 1234, 611, 0, 612, 613, 620, 621, 622, 614,
	615, 616, 623, 624, 625, 626, 627, 629, 628, 0,
	631, 632, 630, 633, 634, 635, 1287, 636, 757, 637,
	617, 618, 638, 639, 1346, 640, 641, 642, 643, 644,
	645, 646, 1302, 0, 647, 0, 648, 649, 650, 651,
	652, 653, 655, 619, 656, 661, 662, 1349, 657, 658,
	659, 660, 1325, 664, 665, 666, 667, 0, 668, 669,
	1220, 663, 654, 0, 670, 671, 672, 673, 674, 675,
	0, 676, 677, 0, 678, 1314, 1315, 1316, 1317, 0,
	690, 0, 679, 681, 682, 683, 684, 1326, 685, 1327,
	1244, 686, 687, 688, 689, 680, 691, 692, 0, 1227,
	693, 694, 696, 698, 699, 695, 697, 700, 1288, 701,
	0, 0, 702, 703, 704, 767, 1311, 1348, 0, 706,
	705, 707, 708, 709, 770, 710, 711, 712, 0, 0,
	0, 0, 713, 714, 771, 715, 716, 717, 1224, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1219, 0, 0, 0, 0, 0, 0,
	1217, 1218, 0, 0, 0, 0, 0, 0, 0, 0,
	1250, 2885, 0, 1902, 1248, 1266, 1238, 1239, 1240, 1236,
	1237, 1249, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 308, 309, 311, 310, 312, 313, 314, 315,
	0, 316, 317, 0, 0, 0, 0, 0, 1290, 1254,
	0, 0, 318, 0, 319, 320, 321, 1330, 322, 323,
	324, 325, 326, 327, 328, 719, 1303, 0, 329, 1310,
	330, 1309, 0, 1320, 331, 332, 333, 334, 335, 336,
	337, 1256, 1289, 1221, 338, 1350, 1351, 726, 0, 339,
	340, 1296, 0, 1277, 0, 341, 342, 343, 344, 345,
	346, 347, 348, 0, 0, 350, 351, 352, 349, 353,
	0, 354, 0, 355, 356, 357, 358, 359, 360, 361,
	0, 362, 363, 364, 1331, 365, 366, 367, 1280, 1278,
	1279, 1286, 1282, 1281, 1285, 368, 369, 370, 371, 372,
	1313, 373, 375, 1307, 1306, 1226, 378, 380, 374, 376,
	0, 379, 377, 381, 0, 382, 383, 384, 0, 0,
	385, 1298, 387, 0, 388, 389, 390, 0, 391, 392,
	393, 0, 394, 395, 1232, 396, 397, 398, 400, 402,
	399, 401, 403, 404, 405, 406, 407, 1321, 1322, 408,
	1245, 305, 0, 0, 0, 0, 0, 409, 410, 411,
	1305, 0, 0, 0, 412, 0, 413, 414, 415, 0,
	416, 417, 0, 1332, 418, 419, 420, 1318, 1319, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 0, 430,
	1328, 0, 1255, 431, 0, 432, 433, 434, 435, 436,
	437, 438, 1291, 1292, 1295, 531, 1334, 439, 440, 441,
	0, 442, 443, 444, 445, 446, 0, 0, 0, 306,
	447, 448, 449, 0, 1333, 741, 450, 532, 451, 1300,
	1301, 0, 1261, 0, 452, 453, 455, 1335, 1293, 1336,
	454, 456, 457, 1337, 458, 0, 0, 0, 459, 460,
	461, 462, 463, 464, 0, 465, 467, 466, 0, 469,
	1329, 468, 1338, 470, 471, 1339, 0, 472, 473, 474,
	475, 476, 477, 480, 1284, 1283, 478, 479, 481, 482,
	0, 483, 484, 486, 489, 485, 487, 488, 490, 503,
	504, 491, 492, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 506, 0, 505, 1340, 507, 508, 509,
	510, 511, 518, 520, 521, 516, 517, 519, 522, 523,
	525, 513, 514, 515, 1341, 524, 512, 1223, 307, 1342,
	526, 527, 528, 529, 1246, 1294, 530, 1308, 533, 534,
	0, 0, 535, 0, 536, 0, 0, 538, 539, 540,
	0, 0, 541, 542, 749, 1343, 543, 1344, 1323, 544,
	545, 1233, 546, 547, 548, 549, 550, 551, 552, 553,
	554, 555, 0, 556, 557, 751, 558, 559, 560, 752,
	561, 562, 563, 1324, 564, 754, 565, 566, 0, 567,
	568, 569, 0, 570, 571, 572, 573, 574, 575, 576,
	577, 1304, 578, 579, 581, 580, 582, 0, 583, 0,
	584, 585, 586, 0, 0, 0, 0, 0, 587, 588,
	590, 0, 591, 592, 593, 594, 589, 595, 596, 597,
	598, 599, 600, 0, 602, 603, 601, 604, 605, 1345,
	606, 607, 608, 609, 610, 1234, 611, 0, 612, 613,
	620, 621, 622, 614, 615, 616, 623, 624, 625, 626,
	627, 629, 628, 0, 631, 632, 630, 633, 634, 635,
	1287, 636, 757, 637, 617, 618, 638, 639, 1346, 640,
	641, 642, 643, 644, 645, 646, 1302, 0, 647, 0,
	648, 649, 650, 651, 652, 653, 655, 619, 656, 661,
	662, 1349, 657, 658, 659, 660, 1325, 664, 665, 666,
	667, 0, 668, 669, 1220, 663, 654, 0, 670, 671,
	672, 673, 674, 675, 0, 676, 677, 0, 678, 1314,
	1315, 1316, 1317, 0, 690, 0, 679, 681, 682, 683,
	684, 1326, 685, 1327, 1244, 686, 687, 688, 689, 680,
	691, 692, 0, 1227, 693, 694, 696, 698, 699, 695,
	697, 700, 1288, 701, 0, 0, 702, 703, 704, 767,
	1311, 1348, 0, 706, 705, 707, 708, 709, 770, 710,
	711, 712, 1901, 0, 0, 0, 713, 714, 771, 715,
	716, 717, 1224, 0, 0, 0, 0, 1213, 0, 1266,
	1238, 1239, 1240, 1236, 1237, 1249, 0, 1219, 0, 0,
	0, 0, 0, 0, 1217, 1218, 308, 309, 311, 310,
	312, 313, 314, 315, 1250, 316, 317, 0, 1248, 0,
	0, 0, 1290, 1254, 0, 0, 318, 0, 319, 320,
	321, 1330, 322, 323, 324, 325, 326, 327, 328, 719,
	1303, 0, 329, 1310, 330, 1309, 0, 1320, 331, 332,
	333, 334, 335, 336, 337, 1256, 1289, 1221, 338, 1350,
	1351, 726, 0, 339, 340, 1296, 0, 1277, 0, 341,
	342, 343, 344, 345, 346, 347, 348, 0, 0, 350,
	351, 352, 349, 353, 0, 354, 0, 355, 356, 357,
	358, 359, 360, 361, 0, 362, 363, 364, 1331, 365,
	366, 367, 1280, 1278, 1279, 1286, 1282, 1281, 1285, 368,
	369, 370, 371, 372, 1313, 373, 375, 1307, 1306, 1226,
	378, 380, 374, 376, 0, 379, 377, 381, 0, 382,
	383, 384, 0, 0, 385, 1298, 387, 0, 388, 389,
	390, 0, 391, 392, 393, 0, 394, 395, 1232, 396,
	397, 398, 400, 402, 399, 401, 403, 404, 405, 406,
	407, 1321, 1322, 408, 1245, 305, 0, 0, 0, 0,
	0, 409, 410, 411, 1305, 0, 0, 0, 412, 0,
	413, 414, 415, 0, 416, 417, 0, 1332, 418, 419,
	420, 1318, 1319, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 0, 430, 1328, 0, 1255, 431, 0, 432,
	433, 434, 435, 436, 437, 438, 1291, 1292, 1295, 531,
	1334, 439, 440, 441, 0, 442, 443, 444, 445, 446,
	0, 0, 0, 306, 447, 448, 449, 0, 1333, 741,
	450, 532, 451, 1300, 1301, 0, 1261, 0, 452, 453,
	455, 1335, 1293, 1336, 454, 456, 457, 1337, 458, 0,
	0, 0, 459, 460, 461, 462, 463, 464, 0, 465,
	467, 466, 0, 469, 1329, 468, 1338, 470, 471, 1339,
	0, 472, 473, 474, 475, 476, 477, 480, 1284, 1283,
	478, 479, 481, 482, 0, 483, 484, 486, 489, 485,
	487, 488, 490, 503, 504, 491, 492, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 506, 0, 505,
	1340, 507, 508, 509, 510, 511, 518, 520, 521, 516,
	517, 519, 522, 523, 525, 513, 514, 515, 1341, 524,
	512, 1223, 307, 1342, 526, 527, 528, 529, 1246, 1294,
	530, 1308, 533, 534, 0, 0, 535, 0, 536, 1228,
	0, 538, 539, 540, 0, 0, 541, 542, 749, 1343,
	543, 1344, 1323, 544, 545, 1233, 546, 547, 548, 549,
	550, 551, 552, 553, 554, 555, 0, 556, 557, 751,
	558, 559, 560, 752, 561, 562, 563, 1324, 564, 754,
	565, 566, 0, 567, 568, 569, 0, 570, 571, 572,
	573, 574, 575, 576, 577, 1304, 578, 579, 581, 580,
	582, 0, 583, 0, 584, 585, 586, 0, 0, 0,
	0, 0, 587, 588, 590, 0, 591, 592, 593, 594,
	589, 595, 596, 597, 598, 599, 600, 0, 602, 603,
	601, 604, 605, 1345, 606, 607, 608, 609, 610, 1234,
	611, 0, 612, 613, 620, 621, 622, 614, 615, 616,
	623, 624, 625, 626, 627, 629, 628, 0, 631, 632,
	630, 633, 634, 635, 1287, 636, 757, 637, 617, 618,
	638, 639, 1346, 640, 641, 642, 643, 644, 645, 646,
	1302, 0, 647, 0, 648, 649, 650, 651, 652, 653,
	655, 619, 656, 661, 662, 1349, 657, 658, 659, 660,
	1325, 664, 665, 666, 667, 0, 668, 669, 1220, 663,
	654, 0, 670, 671, 672, 673, 674, 675, 0, 676,
	677, 0, 678, 1314, 1315, 1316, 1317, 0, 690, 0,
	679, 681, 682, 683, 684, 1326, 685, 1327, 1244, 686,
	687, 688, 689, 680, 691, 692, 0, 1227, 693, 694,
	696, 698, 699, 695, 697, 700, 1288, 701, 0, 0,
	702, 703, 704, 767, 1311, 1348, 0, 706, 705, 707,
	708, 709, 770, 710, 711, 712, 0, 0, 0, 0,
	713, 714, 771, 715, 716, 717, 1224, 0, 0, 0,
	0, 0, 0, 1266, 1238, 1239, 1240, 1236, 1237, 1249,
	0, 1219, 0, 0, 0, 0, 0, 0, 1217, 1218,
	308, 309, 311, 310, 312, 313, 314, 315, 1250, 316,
	317, 0, 1248, 0, 0, 0, 1290, 1254, 0, 0,
	318, 0, 319, 320, 321, 1330, 322, 323, 324, 325,
	326, 327, 328, 719, 1303, 0, 329, 1310, 330, 1309,
	0, 1320, 331, 332, 333, 334, 335, 336, 337, 1256,
	1289, 1221, 338, 1350, 1351, 726, 0, 339, 340, 1296,
	0, 1277, 0, 341, 342, 343, 344, 345, 346, 347,
	348, 0, 0, 350, 351, 352, 349, 353, 0, 354,
	0, 355, 356, 357, 358, 5218, 360, 361, 0, 362,
	363, 364, 1331, 365, 366, 367, 1280, 1278, 1279, 1286,
	1282, 1281, 1285, 368, 369, 370, 371, 372, 1313, 373,
	375, 1307, 1306, 1226, 378, 380, 374, 376, 0, 379,
	377, 381, 0, 382, 383, 384, 0, 0, 385, 1298,
	387, 0, 388, 389, 390, 0, 391, 392, 393, 0,
	394, 395, 1232, 396, 397, 398, 400, 402, 399, 401,
	403, 404, 405, 406, 407, 1321, 1322, 408, 1245, 305,
	0, 0, 0, 0, 0, 409, 410, 411, 1305, 0,
	0, 0, 412, 0, 413, 414, 415, 0, 416, 417,
	0, 1332, 418, 419, 420, 1318, 1319, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 0, 430, 1328, 0,
	1255, 431, 0, 432, 433, 434, 435, 436, 437, 438,
	1291, 1292, 1295, 531, 1334, 439, 440, 441, 0, 442,
	443, 444, 445, 446, 0, 0, 0, 306, 447, 448,
	449, 0, 1333, 741, 450, 532, 451, 1300, 1301, 0,
	1261, 0, 452, 453, 455, 1335, 1293, 1336, 454, 456,
	457, 1337, 458, 0, 0, 0, 459, 460, 461, 462,
	463, 464, 0, 465, 467, 466, 0, 469, 1329, 468,
	1338, 470, 471, 1339, 0, 472, 473, 474, 475, 476,
	477, 480, 1284, 1283, 478, 479, 481, 482, 0, 483,
	484, 486, 489, 485, 487, 488, 490, 503, 504, 491,
	492, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 506, 0, 505, 1340, 507, 508, 509, 510, 511,
	518, 520, 521, 516, 517, 519, 522, 523, 525, 513,
	514, 515, 1341, 524, 512, 1223, 307, 1342, 526, 527,
	528, 529, 1246, 1294, 530, 1308, 533, 534, 0, 0,
	535, 0, 536, 1228, 0, 538, 539, 540, 0, 0,
	541, 542, 749, 1343, 543, 1344, 1323, 544, 545, 1233,
	546, 547, 548, 549, 550, 551, 552, 553, 554, 555,
	0, 556, 557, 751, 558, 559, 560, 752, 561, 562,
	563, 1324, 564, 754, 565, 566, 0, 567, 568, 569,
	0, 570, 571, 572, 573, 574, 575, 576, 577, 1304,
	578, 579, 581, 580, 582, 0, 583, 0, 584, 585,
	586, 0, 0, 0, 0, 0, 587, 588, 590, 0,
	591, 592, 593, 594, 589, 595, 596, 597, 598, 599,
	600, 0, 602, 603, 601, 604, 605, 1345, 606, 607,
	608, 609, 610, 1234, 611, 0, 612, 613, 620, 621,
	622, 614, 615, 616, 623, 624, 625, 626, 627, 629,
	628, 0, 631, 632, 630, 633, 634, 635, 1287, 636,
	757, 637, 617, 618, 638, 639, 1346, 640, 641, 642,
	643, 644, 645, 646, 1302, 0, 647, 0, 648, 649,
	650, 651, 652, 653, 655, 619, 656, 661, 662, 1349,
	657, 658, 659, 660, 1325, 664, 665, 666, 667, 0,
	668, 669, 1220, 663, 654, 0, 670, 671, 672, 673,
	674, 675, 0, 676, 677, 0, 678, 1314, 1315, 1316,
	1317, 0, 690, 0, 679, 681, 682, 683, 684, 1326,
	685, 1327, 1244, 686, 687, 688, 689, 680, 691, 692,
	0, 1227, 693, 694, 696, 698, 699, 695, 697, 700,
	1288, 701, 0, 0, 702, 703, 704, 767, 1311, 1348,
	0, 706, 705, 707, 708, 709, 770, 710, 711, 712,
	0, 0, 0, 0, 713, 714, 771, 715, 716, 717,
	1224, 0, 0, 0, 0, 0, 0, 1266, 1238, 1239,
	1240, 1236, 1237, 1249, 0, 1219, 0, 0, 0, 0,
	0, 0, 1217, 1218, 308, 309, 311, 310, 312, 313,
	314, 315, 1250, 316, 317, 0, 1248, 0, 0, 0,
	1290, 1254, 0, 0, 318, 0, 319, 320, 321, 1330,
	322, 323, 324, 325, 326, 327, 328, 719, 1303, 0,
	329, 1310, 330, 1309, 0, 1320, 331, 332, 333, 334,
	335, 336, 337, 1256, 1289, 1221, 338, 1350, 1351, 726,
	0, 339, 340, 1296, 0, 1277, 0, 341, 342, 343,
	344, 345, 346, 347, 348, 0, 0, 350, 351, 352,
	349, 353, 0, 354, 0, 355, 356, 357, 358, 359,
	360, 361, 0, 362, 363, 364, 1331, 365, 366, 367,
	1280, 1278, 1279, 1286, 1282, 1281, 1285, 368, 369, 370,
	371, 372, 1313, 373, 375, 1307, 1306, 1226, 378, 380,
	374, 376, 0, 379, 377, 381, 0, 382, 383, 384,
	0, 0, 385, 1298, 387, 0, 388, 389, 390, 0,
	391, 392, 393, 0, 394, 395, 1232, 396, 397, 398,
	400, 402, 399, 401, 403, 404, 405, 406, 407, 1321,
	1322, 408, 1245, 305, 0, 0, 0, 0, 0, 409,
	410, 411, 1305, 0, 0, 0, 412, 0, 413, 414,
	415, 0, 416, 417, 0, 1332, 418, 419, 420, 1318,
	1319, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	0, 430, 1328, 0, 1255, 431, 0, 432, 433, 434,
	435, 436, 437, 438, 1291, 1292, 1295, 531, 1334, 439,
	440, 441, 0, 442, 443, 444, 445, 446, 0, 0,
	0, 2726, 447, 448, 449, 0, 1333, 741, 450, 532,
	451, 1300, 1301, 0, 1261, 0, 452, 453, 455, 1335,
	1293, 1336, 454, 456, 457, 1337, 458, 0, 0, 0,
	459, 460, 461, 462, 463, 464, 0, 465, 467, 466,
	0, 469, 1329, 468, 1338, 470, 471, 1339, 0, 472,
	473, 474, 475, 476, 477, 480, 1284, 1283, 478, 479,
	481, 482, 0, 483, 484, 486, 489, 485, 487, 488,
	490, 503, 504, 491, 492, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 506, 0, 505, 1340, 507,
	508, 509, 510, 511, 518, 520, 521, 516, 517, 519,
	522, 523, 525, 513, 514, 515, 1341, 524, 512, 1223,
	307, 1342, 526, 527, 528, 529, 1246, 1294, 530, 1308,
	533, 534, 0, 0, 535, 0, 536, 0, 0, 538,
	539, 540, 0, 0, 541, 542, 749, 1343, 543, 1344,
	1323, 544, 545, 1233, 546, 547, 548, 549, 550, 551,
	552, 553, 554, 555, 0, 556, 557, 751, 558, 559,
	560, 752, 561, 562, 563, 1324, 564, 754, 565, 566,
	2725, 567, 568, 569, 0, 570, 571, 572, 573, 574,
	575, 576, 577, 1304, 578, 579, 581, 580, 582, 0,
	583, 0, 584, 585, 586, 0, 0, 0, 0, 0,
	587, 588, 590, 0, 591, 592, 593, 594, 589, 595,
	596, 597, 598, 599, 600, 0, 602, 603, 601, 604,
	605, 1345, 606, 607, 608, 609, 610, 1234, 611, 0,
	612, 613, 620, 621, 622, 614, 615, 616, 623, 624,
	625, 626, 627, 629, 628, 0, 631, 632, 630, 633,
	634, 635, 1287, 636, 757, 637, 617, 618, 638, 639,
	1346, 640, 641, 642, 643, 644, 645, 646, 1302, 0,
	647, 0, 648, 649, 650, 651, 652, 653, 655, 619,
	656, 661, 662, 1349, 657, 658, 659, 660, 1325, 664,
	665, 666, 667, 0, 668, 669, 1220, 663, 654, 0,
	670, 671, 672, 673, 674, 675, 0, 676, 677, 0,
	678, 1314, 1315, 1316, 1317, 0, 690, 0, 679, 681,
	682, 683, 684, 1326, 685, 1327, 1244, 686, 687, 688,
	689, 680, 691, 692, 0, 1227, 693, 694, 696, 698,
	699, 695, 697, 700, 1288, 701, 0, 0, 702, 703,
	704, 767, 1311, 1348, 0, 706, 705, 707, 708, 709,
	770, 710, 711, 712, 0, 0, 0, 0, 713, 714,
	771, 715, 716, 717, 1224, 0, 0, 0, 0, 0,
	0, 1266, 1238, 1239, 1240, 1236, 1237, 1249, 0, 1219,
	0, 0, 0, 0, 0, 0, 1217, 1218, 308, 309,
	311, 310, 312, 313, 314, 315, 1250, 316, 317, 0,
	1248, 0, 0, 0, 1290, 1254, 0, 0, 318, 0,
	319, 320, 321, 1330, 322, 323, 324, 325, 326, 327,
	328, 719, 1303, 0, 329, 1310, 330, 1309, 0, 1320,
	331, 332, 333, 334, 335, 336, 337, 1256, 1289, 1221,
	338, 1350, 1351, 726, 0, 339, 340, 1296, 0, 1277,
	0, 341, 342, 343, 344, 345, 346, 347, 348, 0,
	0, 350, 351, 352, 349, 353, 0, 354, 0, 355,
	356, 357, 358, 4928, 360, 361, 0, 362, 363, 364,
	1331, 365, 366, 367, 1280, 1278, 1279, 1286, 1282, 1281,
	1285, 368, 369, 370, 371, 372, 1313, 373, 375, 1307,
	1306, 1226, 378, 380, 374, 376, 0, 379, 377, 381,
	0, 382, 383, 384, 0, 0, 385, 1298, 387, 0,
	388, 389, 390, 0, 391, 392, 393, 0, 394, 395,
	1232, 396, 397, 398, 400, 402, 399, 401, 403, 404,
	405, 406, 407, 1321, 1322, 408, 1245, 305, 0, 0,
	0, 0, 0, 409, 410, 411, 1305, 0, 0, 0,
	412, 0, 413, 414, 415, 0, 416, 417, 0, 1332,
	418, 419, 420, 1318, 1319, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 0, 430, 1328, 0, 1255, 431,
	0, 432, 433, 434, 435, 436, 437, 438, 1291, 1292,
	1295, 531, 1334, 439, 440, 441, 0, 442, 443, 444,
	445, 446, 0, 0, 0, 306, 447, 448, 449, 0,
	1333, 741, 450, 532, 451, 1300, 1301, 0, 1261, 0,
	452, 453, 455, 1335, 1293, 1336, 454, 456, 457, 1337,
	458, 0, 0, 0, 459, 460, 461, 462, 463, 464,
	0, 465, 467, 466, 0, 469, 1329, 468, 1338, 470,
	471, 1339, 0, 472, 473, 474, 475, 476, 477, 480,
	1284, 1283, 478, 479, 481, 482, 0, 483, 484, 486,
	489, 485, 487, 488, 490, 503, 504, 491, 492, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 506,
	0, 505, 1340, 507, 508, 509, 510, 511, 518, 520,
	521, 516, 517, 519, 522, 523, 525, 513, 514, 515,
	1341, 524, 512, 1223, 307, 1342, 526, 527, 528, 529,
	1246, 1294, 530, 1308, 533, 534, 0, 0, 535, 0,
	536, 1228, 0, 538, 539, 540, 0, 0, 541, 542,
	749, 1343, 543, 1344, 1323, 544, 545, 1233, 546, 547,
	548, 549, 550, 551, 552, 553, 554, 555, 0, 556,
	557, 751, 558, 559, 560, 752, 561, 562, 563, 1324,
	564, 754, 565, 566, 0, 567, 568, 569, 0, 570,
	571, 572, 573, 574, 575, 576, 577, 1304, 578, 579,
	581, 580, 582, 0, 583, 0, 584, 585, 586, 0,
	0, 0, 0, 0, 587, 588, 590, 0, 591, 592,
	593, 594, 589, 595, 596, 597, 598, 599, 600, 0,
	602, 603, 601, 604, 605, 1345, 606, 607, 608, 609,
	610, 1234, 611, 0, 612, 613, 620, 621, 622, 614,
	615, 616, 623, 624, 625, 626, 627, 629, 628, 0,
	631, 632, 630, 633, 634, 635, 1287, 636, 757, 637,
	617, 618, 638, 639, 1346, 640, 641, 642, 643, 644,
	645, 646, 1302, 0, 647, 0, 648, 649, 650, 651,
	652, 653, 655, 619, 656, 661, 662, 1349, 657, 658,
	659, 660, 1325, 664, 665, 666, 667, 0, 668, 669,
	1220, 663, 654, 0, 670, 671, 672, 673, 674, 675,
	0, 676, 677, 0, 678, 1314, 1315, 1316, 1317, 0,
	690, 0, 679, 681, 682, 683, 684, 1326, 685, 1327,
	1244, 686, 687, 688, 689, 680, 691, 692, 0, 1227,
	693, 694, 696, 698, 699, 695, 697, 700, 1288, 701,
	0, 0, 702, 703, 704, 767, 1311, 1348, 0, 706,
	705, 707, 708, 709, 770, 710, 711, 712, 0, 0,
	0, 0, 713, 714, 771, 715, 716, 717, 1224, 0,
	0, 0, 0, 0, 0, 1266, 1238, 1239, 1240, 1236,
	1237, 1249, 0, 1219, 0, 0, 0, 0, 0, 0,
	1217, 1218, 308, 309, 311, 310, 312, 313, 314, 315,
	1250, 316, 317, 0, 1248, 0, 0, 0, 1290, 1254,
	0, 0, 318, 0, 319, 320, 321, 1330, 322, 323,
	324, 325, 326, 327, 328, 719, 1303, 0, 329, 1310,
	330, 1309, 0, 1320, 331, 332, 333, 334, 335, 336,
	337, 1256, 1289, 1221, 338, 1350, 1351, 726, 0, 339,
	340, 1296, 0, 1277, 0, 341, 342, 343, 344, 345,
	346, 347, 348, 0, 0, 350, 351, 352, 349, 353,
	0, 354, 0, 355, 356, 357, 358, 359, 360, 361,
	0, 362, 363, 364, 1331, 365, 366, 367, 1280, 1278,
	1279, 1286, 1282, 1281, 1285, 368, 369, 370, 371, 372,
	1313, 373, 375, 1307, 1306, 1226, 378, 380, 374, 376,
	0, 379, 377, 381, 0, 382, 383, 384, 0, 0,
	385, 1298, 387, 0, 388, 389, 390, 0, 391, 392,
	393, 0, 394, 395, 1232, 396, 397, 398, 400, 402,
	399, 401, 403, 404, 405, 406, 407, 1321, 1322, 408,
	1245, 305, 0, 0, 0, 0, 0, 409, 410, 411,
	1305, 0, 0, 0, 412, 0, 413, 414, 415, 0,
	416, 417, 0, 1332, 418, 419, 420, 1318, 1319, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 0, 430,
	1328, 0, 1255, 431, 0, 432, 433, 434, 435, 436,
	437, 438, 1291, 1292, 1295, 531, 1334, 439, 440, 441,
	0, 442, 443, 444, 445, 446, 0, 0, 0, 306,
	447, 448, 449, 0, 1333, 741, 450, 532, 451, 1300,
	1301, 0, 1261, 0, 452, 453, 455, 1335, 1293, 1336,
	454, 456, 457, 1337, 458, 0, 0, 0, 459, 460,
	461, 462, 463, 464, 0, 465, 467, 466, 0, 469,
	1329, 468, 1338, 470, 471, 1339, 0, 472, 473, 474,
	475, 476, 477, 480, 1284, 1283, 478, 479, 481, 482,
	0, 483, 484, 486, 489, 485, 487, 488, 490, 503,
	504, 491, 492, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 506, 0, 505, 1340, 507, 508, 509,
	510, 511, 518, 520, 521, 516, 517, 519, 522, 523,
	525, 513, 514, 515, 1341, 524, 512, 1223, 307, 1342,
	526, 527, 528, 529, 1246, 1294, 530, 1308, 533, 534,
	0, 0, 535, 0, 536, 1228, 0, 538, 539, 540,
	0, 0, 541, 542, 749, 1343, 543, 1344, 1323, 544,
	545, 1233, 546, 547, 548, 549, 550, 551, 552, 553,
	554, 555, 0, 556, 557, 751, 558, 559, 560, 752,
	561, 562, 563, 1324, 564, 754, 565, 566, 0, 567,
	568, 569, 0, 570, 571, 572, 573, 574, 575, 576,
	577, 1304, 578, 579, 581, 580, 582, 0, 583, 0,
	584, 585, 586, 0, 0, 0, 0, 0, 587, 588,
	590, 0, 591, 592, 593, 594, 589, 595, 596, 597,
	598, 599, 600, 0, 602, 603, 601, 604, 605, 1345,
	606, 607, 608, 609, 610, 1234, 611, 0, 612, 613,
	620, 621, 622, 614, 615, 616, 623, 624, 625, 626,
	627, 629, 628, 0, 631, 632, 630, 633, 634, 635,
	1287, 636, 757, 637, 617, 618, 638, 639, 1346, 640,
	641, 642, 643, 644, 645, 646, 1302, 0, 647, 0,
	648, 649, 650, 651, 652, 653, 655, 619, 656, 661,
	662, 1349, 657, 658, 659, 660, 1325, 664, 665, 666,
	667, 0, 668, 669, 1220, 663, 654, 0, 670, 671,
	672, 673, 674, 675, 0, 676, 677, 0, 678, 1314,
	1315, 1316, 1317, 0, 690, 0, 679, 681, 682, 683,
	684, 1326, 685, 1327, 1244, 686, 687, 688, 689, 680,
	691, 692, 0, 1227, 693, 694, 696, 698, 699, 695,
	697, 700, 1288, 701, 0, 0, 702, 703, 704, 767,
	1311, 1348, 0, 706, 705, 707, 708, 709, 770, 710,
	711, 712, 0, 0, 0, 0, 713, 714, 771, 715,
	716, 717, 1224, 0, 0, 0, 0, 0, 0, 1266,
	1238, 1239, 1240, 1236, 1237, 1249, 0, 1219, 0, 0,
	0, 0, 0, 0, 1217, 1218, 308, 309, 311, 310,
	312, 313, 314, 315, 1250, 316, 317, 0, 1248, 0,
	0, 0, 1290, 1254, 0, 0, 318, 0, 319, 320,
	321, 1330, 322, 323, 324, 325, 326, 327, 328, 719,
	1303, 0, 329, 1310, 330, 1309, 0, 1320, 331, 332,
	333, 334, 335, 336, 337, 1256, 1289, 1221, 338, 1350,
	1351, 726, 0, 339, 340, 1296, 0, 1277, 0, 341,
	342, 343, 344, 345, 346, 347, 348, 0, 0, 350,
	351, 352, 349, 353, 0, 354, 0, 355, 356, 357,
	358, 359, 360, 361, 0, 362, 363, 364, 1331, 365,
	366, 367, 1280, 1278, 1279, 1286, 1282, 1281, 1285, 368,
	369, 370, 371, 372, 1313, 373, 375, 1307, 1306, 1226,
	378, 380, 374, 376, 0, 379, 377, 381, 0, 382,
	383, 384, 0, 0, 385, 1298, 387, 0, 388, 389,
	390, 0, 391, 392, 393, 0, 394, 395, 1232, 396,
	397, 398, 400, 402, 399, 401, 403, 404, 405, 406,
	407, 1321, 1322, 408, 1245, 305, 0, 0, 0, 0,
	0, 409, 410, 411, 1305, 0, 0, 0, 412, 0,
	413, 414, 415, 0, 416, 417, 0, 1332, 418, 419,
	420, 1318, 1319, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 0, 430, 1328, 0, 1255, 431, 0, 432,
	433, 434, 435, 436, 437, 438, 1291, 1292, 1295, 531,
	1334, 439, 440, 441, 0, 442, 443, 444, 445, 446,
	0, 0, 0, 306, 447, 448, 449, 0, 1333, 741,
	450, 532, 451, 1300, 1301, 0, 1261, 0, 452, 453,
	455, 1335, 1293, 1336, 454, 456, 457, 1337, 458, 0,
	0, 0, 459, 460, 461, 462, 463, 464, 0, 465,
	467, 466, 0, 469, 1329, 468, 1338, 470, 471, 1339,
	0, 472, 473, 474, 475, 476, 477, 480, 1284, 1283,
	478, 479, 481, 482, 0, 483, 484, 486, 489, 485,
	487, 488, 490, 503, 504, 491, 492, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 506, 0, 505,
	1340, 507, 508, 509, 510, 511, 518, 520, 521, 516,
	517, 519, 522, 523, 525, 513, 514, 515, 1341, 524,
	512, 1223, 4469, 1342, 526, 527, 528, 529, 1246, 1294,
	530, 1308, 533, 534, 0, 0, 535, 0, 536, 0,
	0, 538, 539, 540, 0, 0, 541, 542, 749, 1343,
	543, 1344, 1323, 544, 545, 1233, 546, 547, 548, 549,
	550, 551, 552, 553, 554, 555, 0, 556, 557, 751,
	558, 559, 560, 752, 561, 562, 563, 1324, 564, 754,
	565, 566, 0, 567, 568, 569, 0, 570, 571, 572,
	573, 574, 575, 576, 577, 1304, 578, 579, 581, 580,
	582, 0, 583, 0, 584, 585, 586, 0, 0, 0,
	0, 0, 587, 588, 590, 0, 591, 592, 593, 594,
	589, 595, 596, 597, 598, 599, 600, 0, 602, 603,
	601, 604, 605, 1345, 606, 607, 608, 609, 610, 1234,
	611, 0, 612, 613, 620, 621, 622, 614, 615, 616,
	623, 624, 625, 626, 627, 629, 628, 0, 631, 632,
	630, 633, 634, 635, 1287, 636, 757, 637, 617, 618,
	638, 639, 1346, 640, 641, 642, 643, 644, 645, 646,
	1302, 0, 647, 0, 648, 649, 650, 651, 652, 653,
	655, 619, 656, 661, 662, 1349, 657, 658, 659, 660,
	1325, 664, 665, 666, 667, 0, 668, 669, 1220, 663,
	654, 0, 670, 671, 672, 673, 674, 675, 0, 676,
	677, 0, 678, 1314, 1315, 1316, 1317, 0, 690, 0,
	679, 681, 682, 683, 684, 1326, 685, 1327, 1244, 686,
	687, 688, 689, 680, 691, 692, 0, 1227, 693, 694,
	696, 698, 699, 695, 697, 700, 1288, 701, 0, 0,
	702, 703, 704, 767, 1311, 1348, 0, 706, 705, 707,
	708, 709, 770, 710, 711, 712, 0, 0, 0, 0,
	713, 714, 771, 715, 716, 717, 1224, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1219, 0, 0, 0, 0, 0, 0, 1217, 1218,
	2139, 1266, 1238, 1239, 1240, 1236, 1237, 1249, 1250, 0,
	0, 0, 1248, 0, 0, 0, 0, 0, 308, 309,
	311, 310, 312, 313, 314, 315, 0, 316, 317, 0,
	0, 0, 0, 0, 1290, 1254, 0, 0, 318, 0,
	319, 320, 321, 1330, 322, 323, 324, 325, 326, 327,
	328, 719, 1303, 0, 329, 1310, 330, 1309, 0, 1320,
	331, 332, 333, 334, 335, 336, 337, 1256, 1289, 1221,
	338, 1350, 1351, 726, 0, 339, 340, 1296, 0, 1277,
	0, 341, 342, 343, 344, 345, 346, 347, 348, 0,
	0, 350, 351, 352, 349, 353, 0, 354, 0, 355,
	356, 357, 358, 359, 360, 361, 0, 362, 363, 364,
	1331, 365, 366, 367, 1280, 1278, 1279, 1286, 1282, 1281,
	1285, 368, 369, 370, 371, 372, 1313, 373, 375, 1307,
	1306, 1226, 378, 380, 374, 376, 0, 379, 377, 381,
	0, 382, 383, 384, 0, 0, 385, 1298, 387, 0,
	388, 389, 390, 0, 391, 392, 393, 0, 394, 395,
	1232, 396, 397, 398, 400, 402, 399, 401, 403, 404,
	405, 406, 407, 1321, 1322, 408, 1245, 305, 0, 0,
	0, 0, 0, 409, 410, 411, 1305, 0, 0, 0,
	412, 0, 413, 414, 415, 0, 416, 417, 0, 1332,
	418, 419, 420, 1318, 1319, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 0, 430, 1328, 0, 1255, 431,
	0, 432, 433, 434, 435, 436, 437, 438, 1291, 1292,
	1295, 531, 1334, 439, 440, 441, 0, 442, 443, 444,
	445, 446, 0, 0, 0, 306, 447, 448, 449, 0,
	1333, 741, 450, 532, 451, 1300, 1301, 0, 1261, 0,
	452, 453, 455, 1335, 1293, 1336, 454, 456, 457, 1337,
	458, 0, 0, 0, 459, 460, 461, 462, 463, 464,
	0, 465, 467, 466, 0, 469, 1329, 468, 1338, 470,
	471, 1339, 0, 472, 473, 474, 475, 476, 477, 480,
	1284, 1283, 478, 479, 481, 482, 0, 483, 484, 486,
	489, 485, 487, 488, 490, 503, 504, 491, 492, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 506,
	0, 505, 1340, 507, 508, 509, 510, 511, 518, 520,
	521, 516, 517, 519, 522, 523, 525, 513, 514, 515,
	1341, 524, 512, 1223, 307, 1342, 526, 527, 528, 529,
	1246, 1294, 530, 1308, 533, 534, 0, 0, 535, 0,
	536, 0, 0, 538, 539, 540, 0, 0, 541, 542,
	749, 1343, 543, 1344, 1323, 544, 545, 1233, 546, 547,
	548, 549, 550, 551, 552, 553, 554, 555, 0, 556,
	557, 751, 558, 559, 560, 752, 561, 562, 563, 1324,
	564, 754, 565, 566, 0, 567, 568, 569, 0, 570,
	571, 572, 573, 574, 575, 576, 577, 1304, 578, 579,
	581, 580, 582, 0, 583, 0, 584, 585, 586, 0,
	0, 0, 0, 0, 587, 588, 590, 0, 591, 592,
	593, 594, 589, 595, 596, 597, 598, 599, 600, 0,
	602, 603, 601, 604, 605, 1345, 606, 607, 608, 609,
	610, 1234, 611, 0, 612, 613, 620, 621, 622, 614,
	615, 616, 623, 624, 625, 626, 627, 629, 628, 0,
	631, 632, 630, 633, 634, 635, 1287, 636, 757, 637,
	617, 618, 638, 639, 1346, 640, 641, 642, 643, 644,
	645, 646, 1302, 0, 647, 0, 648, 649, 650, 651,
	652, 653, 655, 619, 656, 661, 662, 1349, 657, 658,
	659, 660, 1325, 664, 665, 666, 667, 0, 668, 669,
	1220, 663, 654, 0, 670, 671, 672, 673, 674, 675,
	0, 676, 677, 0, 678, 1314, 1315, 1316, 1317, 0,
	690, 0, 679, 681, 682, 683, 684, 1326, 685, 1327,
	1244, 686, 687, 688, 689, 680, 691, 692, 0, 1227,
	693, 694, 696, 698, 699, 695, 697, 700, 1288, 701,
	0, 0, 702, 703, 704, 767, 1311, 1348, 0, 706,
	705, 707, 708, 709, 770, 710, 711, 712, 0, 0,
	0, 0, 713, 714, 771, 715, 716, 717, 1224, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1219, 0, 0, 0, 0, 0, 0,
	1217, 1218, 2139, 1266, 1238, 1239, 1240, 1236, 1237, 1249,
	1250, 0, 0, 0, 1248, 0, 0, 0, 0, 0,
	308, 309, 311, 310, 312, 313, 314, 315, 0, 316,
	317, 0, 0, 0, 0, 0, 1290, 1254, 0, 0,
	318, 0, 319, 320, 321, 1330, 322, 323, 324, 325,
	326, 327, 328, 719, 1303, 0, 329, 1310, 330, 1309,
	0, 1320, 331, 332, 333, 334, 335, 336, 337, 1256,
	1289, 1221, 338, 1350, 1351, 726, 0, 339, 340, 1296,
	0, 1277, 0, 341, 342, 343, 344, 345, 346, 347,
	348, 0, 0, 350, 351, 352, 349, 353, 0, 354,
	0, 355, 356, 357, 358, 359, 360, 361, 0, 362,
	363, 364, 1331, 365, 366, 367, 1280, 1278, 1279, 1286,
	1282, 1281, 1285, 368, 369, 370, 371, 372, 1313, 373,
	375, 1307, 1306, 1226, 378, 380, 374, 376, 0, 379,
	377, 381, 0, 382, 383, 384, 0, 0, 385, 1298,
	387, 0, 388, 389, 390, 0, 391, 392, 393, 0,
	394, 395, 1232, 396, 397, 398, 400, 402, 399, 401,
	403, 404, 405, 406, 407, 1321, 1322, 408, 1245, 305,
	0, 0, 0, 0, 0, 409, 410, 411, 1305, 0,
	0, 0, 412, 0, 413, 414, 415, 0, 416, 417,
	0, 1332, 418, 419, 420, 1318, 1319, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 0, 430, 1328, 0,
	1255, 431, 0, 432, 433, 434, 435, 436, 437, 438,
	1291, 1292, 1295, 531, 1334, 439, 440, 441, 0, 442,
	443, 444, 445, 446, 0, 0, 0, 306, 447, 448,
	449, 0, 1333, 741, 450, 532, 451, 1300, 1301, 0,
	1261, 0, 452, 453, 455, 1335, 1293, 1336, 454, 456,
	457, 1337, 458, 0, 0, 0, 459, 460, 461, 462,
	463, 464, 0, 465, 467, 466, 0, 469, 1329, 468,
	1338, 470, 471, 1339, 0, 472, 473, 474, 475, 476,
	477, 480, 1284, 1283, 478, 479, 481, 482, 0, 483,
	484, 486, 489, 485, 487, 488, 490, 503, 504, 491,
	492, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 506, 0, 505, 1340, 507, 508, 509, 510, 511,
	518, 520, 521, 516, 517, 519, 522, 523, 525, 513,
	514, 515, 1341, 524, 512, 1223, 307, 1342, 526, 527,
	528, 529, 1246, 1294, 530, 1308, 533, 534, 0, 0,
	535, 0, 536, 0, 0, 538, 539, 540, 0, 0,
	541, 542, 749, 1343, 543, 1344, 1323, 544, 545, 1233,
	546, 547, 548, 549, 550, 551, 552, 553, 554, 555,
	0, 556, 557, 751, 558, 559, 560, 752, 561, 562,
	563, 1324, 564, 754, 565, 566, 0, 567, 568, 569,
	0, 570, 571, 572, 573, 574, 575, 576, 577, 1304,
	578, 579, 581, 580, 582, 0, 583, 0, 584, 585,
	586, 0, 0, 0, 0, 0, 587, 588, 590, 0,
	591, 592, 593, 594, 589, 595, 596, 597, 598, 599,
	600, 0, 602, 603, 601, 604, 605, 1345, 606, 607,
	608, 609, 610, 1234, 611, 0, 612, 613, 620, 621,
	622, 614, 615, 616, 623, 624, 625, 626, 627, 629,
	628, 0, 631, 632, 630, 633, 634, 635, 1287, 636,
	757, 637, 617, 618, 638, 639, 1346, 640, 641, 642,
	643, 644, 645, 646, 1302, 0, 647, 0, 648, 649,
	650, 651, 652, 653, 655, 619, 656, 661, 662, 1349,
	657, 658, 659, 660, 1325, 664, 665, 666, 667, 0,
	668, 669, 1220, 663, 654, 0, 670, 671, 672, 673,
	674, 675, 0, 676, 677, 0, 678, 1314, 1315, 1316,
	1317, 0, 690, 0, 679, 681, 682, 683, 684, 1326,
	685, 1327, 1244, 686, 687, 688, 689, 680, 691, 692,
	0, 1227, 693, 694, 696, 698, 699, 695, 697, 700,
	1288, 701, 0, 0, 702, 703, 704, 767, 1311, 1348,
	4124, 706, 705, 707, 708, 709, 770, 710, 711, 712,
	0, 0, 0, 0, 713, 714, 771, 715, 716, 717,
	1224, 0, 0, 0, 0, 0, 0, 1266, 1238, 1239,
	1240, 1236, 1237, 1249, 0, 1219, 0, 0, 0, 0,
	0, 0, 1217, 1218, 308, 309, 311, 310, 312, 313,
	314, 315, 1250, 316, 317, 0, 1248, 0, 0, 0,
	1290, 1254, 0, 0, 318, 0, 319, 320, 321, 1330,
	322, 323, 324, 325, 326, 327, 328, 719, 1303, 0,
	329, 1310, 330, 1309, 0, 1320, 331, 332, 333, 334,
	335, 336, 337, 1256, 1289, 1221, 338, 1350, 1351, 726,
	0, 339, 340, 1296, 0, 1277, 0, 341, 342, 343,
	344, 345, 346, 347, 348, 0, 0, 350, 351, 352,
	349, 353, 0, 354, 0, 355, 356, 357, 358, 359,
	360, 361, 0, 362, 363, 364, 1331, 365, 366, 367,
	1280, 1278, 1279, 1286, 1282, 1281, 1285, 368, 369, 370,
	371, 372, 1313, 373, 375, 1307, 1306, 1226, 378, 380,
	374, 376, 0, 379, 377, 381, 0, 382, 383, 384,
	0, 0, 385, 1298, 387, 0, 388, 389, 390, 0,
	391, 392, 393, 0, 394, 395, 1232, 396, 397, 398,
	400, 402, 399, 401, 403, 404, 405, 406, 407, 1321,
	1322, 408, 1245, 305, 0, 0, 0, 0, 0, 409,
	410, 411, 1305, 0, 0, 0, 412, 0, 413, 414,
	415, 0, 416, 417, 2986, 1332, 418, 419, 420, 1318,
	1319, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	0, 430, 1328, 0, 1255, 431, 0, 432, 433, 434,
	435, 436, 437, 438, 1291, 1292, 1295, 531, 1334, 439,
	440, 441, 0, 442, 443, 444, 445, 446, 0, 0,
	0, 306, 447, 448, 449, 0, 1333, 741, 450, 532,
	451, 1300, 1301, 0, 1261, 0, 452, 453, 455, 1335,
	1293, 1336, 454, 456, 457, 1337, 458, 0, 0, 0,
	459, 460, 461, 462, 463, 464, 0, 465, 467, 466,
	0, 469, 1329, 468, 1338, 470, 471, 1339, 0, 472,
	473, 474, 475, 476, 477, 480, 1284, 1283, 478, 479,
	481, 482, 0, 483, 484, 486, 489, 485, 487, 488,
	490, 503, 504, 491, 492, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 506, 0, 505, 1340, 507,
	508, 509, 510, 511, 518, 520, 521, 516, 517, 519,
	522, 523, 525, 513, 514, 515, 1341, 524, 512, 1223,
	307, 1342, 526, 527, 528, 529, 1246, 1294, 530, 1308,
	533, 534, 0, 0, 535, 0, 536, 0, 0, 538,
	539, 540, 0, 0, 541, 542, 749, 1343, 543, 1344,
	1323, 544, 545, 1233, 546, 547, 548, 549, 550, 551,
	552, 553, 554, 555, 0, 556, 557, 751, 558, 559,
	560, 752, 561, 562, 563, 1324, 564, 754, 565, 566,
	0, 567, 568, 569, 0, 570, 571, 572, 573, 574,
	575, 576, 577, 1304, 578, 579, 581, 580, 582, 0,
	583, 0, 584, 585, 586, 0, 0, 0, 0, 0,
	587, 588, 590, 0, 591, 592, 593, 594, 589, 595,
	596, 597, 598, 599, 600, 0, 602, 603, 601, 604,
	605, 1345, 606, 607, 608, 609, 610, 1234, 611, 0,
	612, 613, 620, 621, 622, 614, 615, 616, 623, 624,
	625, 626, 627, 629, 628, 0, 631, 632, 630, 633,
	634, 635, 1287, 636, 757, 637, 617, 618, 638, 639,
	1346, 640, 641, 642, 643, 644, 645, 646, 1302, 0,
	647, 0, 648, 649, 650, 651, 652, 653, 655, 619,
	656, 661, 662, 1349, 657, 658, 659, 660, 1325, 664,
	665, 666, 667, 0, 668, 669, 1220, 663, 654, 0,
	670, 671, 672, 673, 674, 675, 0, 676, 677, 0,
	678, 1314, 1315, 1316, 1317, 0, 690, 0, 679, 681,
	682, 683, 684, 1326, 685, 1327, 1244, 686, 687, 688,
	689, 680, 691, 692, 0, 1227, 693, 694, 696, 698,
	699, 695, 697, 700, 1288, 701, 0, 0, 702, 703,
	704, 767, 1311, 1348, 0, 706, 705, 707, 708, 709,
	770, 710, 711, 712, 0, 0, 0, 0, 713, 714,
	771, 715, 716, 717, 1224, 0, 0, 0, 0, 0,
	0, 1266, 1238, 1239, 1240, 1236, 1237, 1249, 0, 1219,
	0, 0, 0, 0, 0, 0, 1217, 1218, 308, 309,
	311, 310, 312, 313, 314, 315, 1250, 316, 317, 0,
	1248, 0, 0, 0, 1290, 1254, 0, 0, 318, 0,
	319, 320, 321, 1330, 322, 323, 324, 325, 326, 327,
	328, 719, 1303, 0, 329, 1310, 330, 1309, 0, 1320,
	331, 332, 333, 334, 335, 336, 337, 1256, 1289, 1221,
	338, 1350, 1351, 726, 0, 339, 340, 1296, 0, 1277,
	0, 341, 342, 343, 344, 345, 346, 347, 348, 0,
	0, 350, 351, 352, 349, 353, 0, 354, 0, 355,
	356, 357, 358, 359, 360, 361, 0, 362, 363, 364,
	1331, 365, 366, 367, 1280, 1278, 1279, 1286, 1282, 1281,
	1285, 368, 369, 370, 371, 372, 1313, 373, 375, 1307,
	1306, 1226, 378, 380, 374, 376, 0, 379, 377, 381,
	0, 382, 383, 384, 0, 0, 385, 1298, 387, 0,
	388, 389, 390, 0, 391, 392, 393, 0, 394, 395,
	1232, 396, 397, 398, 400, 402, 399, 401, 403, 404,
	405, 406, 407, 1321, 1322, 408, 1245, 305, 0, 0,
	0, 0, 0, 409, 410, 411, 1305, 0, 0, 0,
	412, 0, 413, 414, 415, 0, 416, 417, 0, 1332,
	418, 419, 420, 1318, 1319, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 0, 430, 1328, 0, 1255, 431,
	0, 432, 433, 434, 435, 436, 437, 438, 1291, 1292,
	1295, 531, 1334, 439, 440, 441, 0, 442, 443, 444,
	445, 446, 0, 0, 0, 306, 447, 448, 449, 0,
	1333, 741, 450, 532, 451, 1300, 1301, 0, 1261, 0,
	452, 453, 455, 1335, 1293, 1336, 454, 456, 457, 1337,
	458, 0, 0, 0, 459, 460, 461, 462, 463, 464,
	0, 465, 467, 466, 0, 469, 1329, 468, 1338, 470,
	471, 1339, 0, 472, 473, 474, 475, 476, 477, 480,
	1284, 1283, 478, 479, 481, 482, 0, 483, 484, 486,
	489, 485, 487, 488, 490, 503, 504, 491, 492, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 506,
	0, 505, 1340, 507, 508, 509, 510, 511, 518, 520,
	521, 516, 517, 519, 522, 523, 525, 513, 514, 515,
	1341, 524, 512, 1223, 307, 1342, 526, 527, 528, 529,
	1246, 1294, 530, 1308, 533, 534, 0, 0, 535, 0,
	536, 0, 0, 538, 539, 540, 0, 0, 541, 542,
	749, 1343, 543, 1344, 1323, 544, 545, 1233, 546, 547,
	548, 549, 550, 551, 552, 553, 554, 555, 0, 556,
	557, 751, 558, 559, 560, 752, 561, 562, 563, 1324,
	564, 754, 565, 566, 0, 567, 568, 569, 0, 570,
	571, 572, 573, 574, 575, 576, 577, 1304, 578, 579,
	581, 580, 582, 0, 583, 0, 584, 585, 586, 0,
	0, 0, 0, 0, 587, 588, 590, 0, 591, 592,
	593, 594, 589, 595, 596, 597, 598, 599, 600, 0,
	602, 603, 601, 604, 605, 1345, 606, 607, 608, 609,
	610, 1234, 611, 0, 612, 613, 620, 621, 622, 614,
	615, 616, 623, 624, 625, 626, 627, 629, 628, 0,
	631, 632, 630, 633, 634, 635, 1287, 636, 757, 637,
	617, 618, 638, 639, 1346, 640, 641, 642, 643, 644,
	645, 646, 1302, 0, 647, 0, 648, 649, 650, 651,
	652, 653, 655, 619, 656, 661, 662, 1349, 657, 658,
	659, 660, 1325, 664, 665, 666, 667, 0, 668, 669,
	1220, 663, 654, 0, 670, 671, 672, 673, 674, 675,
	0, 676, 677, 0, 678, 1314, 1315, 1316, 1317, 0,
	690, 0, 679, 681, 682, 683, 684, 1326, 685, 1327,
	1244, 686, 687, 688, 689, 680, 691, 692, 0, 1227,
	693, 694, 696, 698, 699, 695, 697, 700, 1288, 701,
	0, 0, 702, 703, 704, 767, 1311, 1348, 0, 706,
	705, 707, 708, 709, 770, 710, 711, 712, 0, 0,
	0, 0, 713, 714, 771, 715, 716, 717, 1224, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1219, 0, 0, 0, 0, 0, 0,
	1217, 1218, 0, 0, 0, 0, 0, 0, 0, 0,
	1250, 2067, 0, 2991, 1248, 1266, 1238, 1239, 1240, 1236,
	1237, 1249, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 308, 309, 311, 310, 312, 313, 314, 315,
	0, 316, 317, 0, 0, 0, 0, 0, 1290, 1254,
	0, 0, 318, 0, 319, 320, 321, 1330, 322, 323,
	324, 325, 326, 327, 328, 719, 1303, 0, 329, 1310,
	330, 1309, 0, 1320, 331, 332, 333, 334, 335, 336,
	337, 1256, 1289, 1221, 338, 1350, 1351, 726, 0, 339,
	340, 1296, 0, 1277, 0, 341, 342, 343, 344, 345,
	346, 347, 348, 0, 0, 350, 351, 352, 349, 353,
	0, 354, 0, 355, 356, 357, 358, 359, 360, 361,
	0, 362, 363, 364, 1331, 365, 366, 367, 1280, 1278,
	1279, 1286, 1282, 1281, 1285, 368, 369, 370, 371, 372,
	1313, 373, 375, 1307, 1306, 1226, 378, 380, 374, 376,
	0, 379, 377, 381, 0, 382, 383, 384, 0, 0,
	385, 1298, 387, 0, 388, 389, 390, 0, 391, 392,
	393, 0, 394, 395, 1232, 396, 397, 398, 400, 402,
	399, 401, 403, 404, 405, 406, 407, 1321, 1322, 408,
	1245, 305, 0, 0, 0, 0, 0, 409, 410, 411,
	1305, 0, 0, 0, 412, 0, 413, 414, 415, 0,
	416, 417, 0, 1332, 418, 419, 420, 1318, 1319, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 0, 430,
	1328, 0, 1255, 431, 0, 432, 433, 434, 435, 436,
	437, 438, 1291, 1292, 1295, 531, 1334, 439, 440, 441,
	0, 442, 443, 444, 445, 446, 0, 0, 0, 306,
	447, 448, 449, 0, 1333, 741, 450, 532, 451, 1300,
	1301, 0, 1261, 0, 452, 453, 455, 1335, 1293, 1336,
	454, 456, 457, 1337, 458, 0, 0, 0, 459, 460,
	461, 462, 463, 464, 0, 465, 467, 466, 0, 469,
	1329, 468, 1338, 470, 471, 1339, 0, 472, 473, 474,
	475, 476, 477, 480, 1284, 1283, 478, 479, 481, 482,
	0, 483, 484, 486, 489, 485, 487, 488, 490, 503,
	504, 491, 492, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 506, 0, 505, 1340, 507, 508, 509,
	510, 511, 518, 520, 521, 516, 517, 519, 522, 523,
	525, 513, 514, 515, 1341, 524, 512, 1223, 307, 1342,
	526, 527, 528, 529, 1246, 1294, 530, 1308, 533, 534,
	0, 0, 535, 0, 536, 0, 0, 538, 539, 540,
	0, 0, 541, 542, 749, 1343, 543, 1344, 1323, 544,
	545, 1233, 546, 547, 548, 549, 550, 551, 552, 553,
	554, 555, 0, 556, 557, 751, 558, 559, 560, 752,
	561, 562, 563, 1324, 564, 754, 565, 566, 0, 567,
	568, 569, 0, 570, 571, 572, 573, 574, 575, 576,
	577, 1304, 578, 579, 581, 580, 582, 0, 583, 0,
	584, 585, 586, 0, 0, 0, 0, 0, 587, 588,
	590, 0, 591, 592, 593, 594, 589, 595, 596, 597,
	598, 599, 600, 0, 602, 603, 601, 604, 605, 1345,
	606, 607, 608, 609, 610, 1234, 611, 0, 612, 613,
	620, 621, 622, 614, 615, 616, 623, 624, 625, 626,
	627, 629, 628, 0, 631, 632, 630, 633, 634, 635,
	1287, 636, 757, 637, 617, 618, 638, 639, 1346, 640,
	641, 642, 643, 644, 645, 646, 1302, 0, 647, 0,
	648, 649, 650, 651, 652, 653, 655, 619, 656, 661,
	662, 1349, 657, 658, 659, 660, 1325, 664, 665, 666,
	667, 0, 668, 669, 1220, 663, 654, 0, 670, 671,
	672, 673, 674, 675, 0, 676, 677, 0, 678, 1314,
	1315, 1316, 1317, 0, 690, 0, 679, 681, 682, 683,
	684, 1326, 685, 1327, 1244, 686, 687, 688, 689, 680,
	691, 692, 0, 1227, 693, 694, 696, 698, 699, 695,
	697, 700, 1288, 701, 0, 0, 702, 703, 704, 767,
	1311, 1348, 0, 706, 705, 707, 708, 709, 770, 710,
	711, 712, 0, 0, 0, 0, 713, 714, 771, 715,
	716, 717, 1224, 0, 0, 0, 0, 2989, 0, 1266,
	1238, 1239, 1240, 1236, 1237, 1249, 0, 1219, 0, 0,
	0, 0, 0, 0, 1217, 1218, 308, 309, 311, 310,
	312, 313, 314, 315, 1250, 316, 317, 0, 1248, 0,
	0, 0, 1290, 1254, 0, 0, 318, 0, 319, 320,
	321, 1330, 322, 323, 324, 325, 326, 327, 328, 719,
	1303, 0, 329, 1310, 330, 1309, 0, 1320, 331, 332,
	333, 334, 335, 336, 337, 1256, 1289, 1221, 338, 1350,
	1351, 726, 0, 339, 340, 1296, 0, 1277, 0, 341,
	342, 343, 344, 345, 346, 347, 348, 0, 0, 350,
	351, 352, 349, 353, 0, 354, 0, 355, 356, 357,
	358, 359, 360, 361, 0, 362, 363, 364, 1331, 365,
	366, 367, 1280, 1278, 1279, 1286, 1282, 1281, 1285, 368,
	369, 370, 371, 372, 1313, 373, 375, 1307, 1306, 1226,
	378, 380, 374, 376, 0, 379, 377, 381, 0, 382,
	383, 384, 0, 0, 385, 1298, 387, 0, 388, 389,
	390, 0, 391, 392, 393, 0, 394, 395, 1232, 396,
	397, 398, 400, 402, 399, 401, 403, 404, 405, 406,
	407, 1321, 1322, 408, 1245, 305, 0, 0, 0, 0,
	0, 409, 410, 411, 1305, 0, 0, 0, 412, 0,
	413, 414, 415, 0, 416, 417, 0, 1332, 418, 419,
	420, 1318, 1319, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 0, 430, 1328, 0, 1255, 431, 0, 432,
	433, 434, 435, 436, 437, 438, 1291, 1292, 1295, 531,
	1334, 439, 440, 441, 0, 442, 443, 444, 445, 446,
	0, 0, 0, 306, 447, 448, 449, 0, 1333, 741,
	450, 532, 451, 1300, 1301, 0, 1261, 0, 452, 453,
	455, 1335, 1293, 1336, 454, 456, 457, 1337, 458, 0,
	0, 0, 459, 460, 461, 462, 463, 464, 0, 465,
	467, 466, 0, 469, 1329, 468, 1338, 470, 471, 1339,
	0, 472, 473, 474, 475, 476, 477, 480, 1284, 1283,
	478, 479, 481, 482, 0, 483, 484, 486, 489, 485,
	487, 488, 490, 503, 504, 491, 492, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 506, 0, 505,
	1340, 507, 508, 509, 510, 511, 518, 520, 521, 516,
	517, 519, 522, 523, 525, 513, 514, 515, 1341, 524,
	512, 1223, 307, 1342, 526, 527, 528, 529, 1246, 1294,
	530, 1308, 533, 534, 0, 0, 535, 0, 536, 0,
	0, 538, 539, 540, 0, 0, 541, 542, 749, 1343,
	543, 1344, 1323, 544, 545, 1233, 546, 547, 548, 549,
	550, 551, 552, 553, 554, 555, 0, 556, 557, 751,
	558, 559, 560, 752, 561, 562, 563, 1324, 564, 754,
	565, 566, 0, 567, 568, 569, 0, 570, 571, 572,
	573, 574, 575, 576, 577, 1304, 578, 579, 581, 580,
	582, 0, 583, 0, 584, 585, 586, 0, 0, 0,
	0, 0, 587, 588, 590, 0, 591, 592, 593, 594,
	589, 595, 596, 597, 598, 599, 600, 0, 602, 603,
	601, 604, 605, 1345, 606, 607, 608, 609, 610, 1234,
	611, 0, 612, 613, 620, 621, 622, 614, 615, 616,
	623, 624, 625, 626, 627, 629, 628, 0, 631, 632,
	630, 633, 634, 635, 1287, 636, 757, 637, 617, 618,
	638, 639, 1346, 640, 641, 642, 643, 644, 645, 646,
	1302, 0, 647, 0, 648, 649, 650, 651, 652, 653,
	655, 619, 656, 661, 662, 1349, 657, 658, 659, 660,
	1325, 664, 665, 666, 667, 0, 668, 669, 1220, 663,
	654, 0, 670, 671, 672, 673, 674, 675, 0, 676,
	677, 0, 678, 1314, 1315, 1316, 1317, 0, 690, 0,
	679, 681, 682, 683, 684, 1326, 685, 1327, 1244, 686,
	687, 688, 689, 680, 691, 692, 0, 1227, 693, 694,
	696, 698, 699, 695, 697, 700, 1288, 701, 0, 0,
	702, 703, 704, 767, 1311, 1348, 0, 706, 705, 707,
	708, 709, 770, 710, 711, 712, 0, 0, 0, 0,
	713, 714, 771, 715, 716, 717, 1224, 0, 0, 0,
	0, 2977, 0, 1266, 1238, 1239, 1240, 1236, 1237, 1249,
	0, 1219, 0, 0, 0, 0, 0, 0, 1217, 1218,
	308, 309, 311, 310, 312, 313, 314, 315, 1250, 316,
	317, 0, 1248, 0, 0, 0, 1290, 1254, 0, 0,
	318, 0, 319, 320, 321, 1330, 322, 323, 324, 325,
	326, 327, 328, 719, 1303, 0, 329, 1310, 330, 1309,
	0, 1320, 331, 332, 333, 334, 335, 336, 337, 1256,
	1289, 1221, 338, 1350, 1351, 726, 0, 339, 340, 1296,
	0, 1277, 0, 341, 342, 343, 344, 345, 346, 347,
	348, 0, 0, 350, 351, 352, 349, 353, 0, 354,
	0, 355, 356, 357, 358, 359, 360, 361, 0, 362,
	363, 364, 1331, 365, 366, 367, 1280, 1278, 1279, 1286,
	1282, 1281, 1285, 368, 369, 370, 371, 372, 1313, 373,
	375, 1307, 1306, 1226, 378, 380, 374, 376, 0, 379,
	377, 381, 0, 382, 383, 384, 0, 0, 385, 1298,
	387, 0, 388, 389, 390, 0, 391, 392, 393, 0,
	394, 395, 1232, 396, 397, 398, 400, 402, 399, 401,
	403, 404, 405, 406, 407, 1321, 1322, 408, 1245, 305,
	0, 0, 0, 0, 0, 409, 410, 411, 1305, 0,
	0, 0, 412, 0, 413, 414, 415, 0, 416, 417,
	0, 1332, 418, 419, 420, 1318, 1319, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 0, 430, 1328, 0,
	1255, 431, 0, 432, 433, 434, 435, 436, 437, 438,
	1291, 1292, 1295, 531, 1334, 439, 440, 441, 0, 442,
	443, 444, 445, 446, 0, 0, 0, 306, 447, 448,
	449, 0, 1333, 741, 450, 532, 451, 1300, 1301, 0,
	1261, 0, 452, 453, 455, 1335, 1293, 1336, 454, 456,
	457, 1337, 458, 0, 0, 0, 459, 460, 461, 462,
	463, 464, 0, 465, 467, 466, 0, 469, 1329, 468,
	1338, 470, 471, 1339, 0, 472, 473, 474, 475, 476,
	477, 480, 1284, 1283, 478, 479, 481, 482, 0, 483,
	484, 486, 489, 485, 487, 488, 490, 503, 504, 491,
	492, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 506, 0, 505, 1340, 507, 508, 509, 510, 511,
	518, 520, 521, 516, 517, 519, 522, 523, 525, 513,
	514, 515, 1341, 524, 512, 1223, 307, 1342, 526, 527,
	528, 529, 1246, 1294, 530, 1308, 533, 534, 0, 0,
	535, 0, 536, 0, 0, 538, 539, 540, 0, 0,
	541, 542, 749, 1343, 543, 1344, 1323, 544, 545, 1233,
	546, 547, 548, 549, 550, 551, 552, 553, 554, 555,
	0, 556, 557, 751, 558, 559, 560, 752, 561, 562,
	563, 1324, 564, 754, 565, 566, 0, 567, 568, 569,
	0, 570, 571, 572, 573, 574, 575, 576, 577, 1304,
	578, 579, 581, 580, 582, 0, 583, 0, 584, 585,
	586, 0, 0, 0, 0, 0, 587, 588, 590, 0,
	591, 592, 593, 594, 589, 595, 596, 597, 598, 599,
	600, 0, 602, 603, 601, 604, 605, 1345, 606, 607,
	608, 609, 610, 1234, 611, 0, 612, 613, 620, 621,
	622, 614, 615, 616, 623, 624, 625, 626, 627, 629,
	628, 0, 631, 632, 630, 633, 634, 635, 1287, 636,
	757, 637, 617, 618, 638, 639, 1346, 640, 641, 642,
	643, 644, 645, 646, 1302, 0, 647, 0, 648, 649,
	650, 651, 652, 653, 655, 619, 656, 661, 662, 1349,
	657, 658, 659, 660, 1325, 664, 665, 666, 667, 0,
	668, 669, 1220, 663, 654, 0, 670, 671, 672, 673,
	674, 675, 0, 676, 677, 0, 678, 1314, 1315, 1316,
	1317, 0, 690, 0, 679, 681, 682, 683, 684, 1326,
	685, 1327, 1244, 686, 687, 688, 689, 680, 691, 692,
	0, 1227, 693, 694, 696, 698, 699, 695, 697, 700,
	1288, 701, 0, 0, 702, 703, 704, 767, 1311, 1348,
	0, 706, 705, 707, 708, 709, 770, 710, 711, 712,
	0, 0, 0, 0, 713, 714, 771, 715, 716, 717,
	1224, 0, 0, 0, 0, 2966, 0, 1266, 1238, 1239,
	1240, 1236, 1237, 1249, 0, 1219, 0, 0, 0, 0,
	0, 0, 1217, 1218, 308, 309, 311, 310, 312, 313,
	314, 315, 1250, 316, 317, 0, 1248, 0, 0, 0,
	1290, 1254, 0, 0, 318, 0, 319, 320, 321, 1330,
	322, 323, 324, 325, 326, 327, 328, 719, 1303, 0,
	329, 1310, 330, 1309, 0, 1320, 331, 332, 333, 334,
	335, 336, 337, 1256, 1289, 1221, 338, 1350, 1351, 726,
	0, 339, 340, 1296, 0, 1277, 0, 341, 342, 343,
	344, 345, 346, 347, 348, 0, 0, 350, 351, 352,
	349, 353, 0, 354, 0, 355, 356, 357, 358, 359,
	360, 361, 0, 362, 363, 364, 1331, 365, 366, 367,
	1280, 1278, 1279, 1286, 1282, 1281, 1285, 368, 369, 370,
	371, 372, 1313, 373, 375, 1307, 1306, 1226, 378, 380,
	374, 376, 0, 379, 377, 381, 0, 382, 383, 384,
	0, 0, 385, 1298, 387, 0, 388, 389, 390, 0,
	391, 392, 393, 0, 394, 395, 1232, 396, 397, 398,
	400, 402, 399, 401, 403, 404, 405, 406, 407, 1321,
	1322, 408, 1245, 305, 0, 0, 0, 0, 0, 409,
	410, 411, 1305, 0, 0, 0, 412, 0, 413, 414,
	415, 0, 416, 417, 0, 1332, 418, 419, 420, 1318,
	1319, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	0, 430, 1328, 0, 1255, 431, 0, 432, 433, 434,
	435, 436, 437, 438, 1291, 1292, 1295, 531, 1334, 439,
	440, 441, 0, 442, 443, 444, 445, 446, 0, 0,
	0, 306, 447, 448, 449, 0, 1333, 741, 450, 532,
	451, 1300, 1301, 0, 1261, 0, 452, 453, 455, 1335,
	1293, 1336, 454, 456, 457, 1337, 458, 0, 0, 0,
	459, 460, 461, 462, 463, 464, 0, 465, 467, 466,
	0, 469, 1329, 468, 1338, 470, 471, 1339, 0, 472,
	473, 474, 475, 476, 477, 480, 1284, 1283, 478, 479,
	481, 482, 0, 483, 484, 486, 489, 485, 487, 488,
	490, 503, 504, 491, 492, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 506, 0, 505, 1340, 507,
	508, 509, 510, 511, 518, 520, 521, 516, 517, 519,
	522, 523, 525, 513, 514, 515, 1341, 524, 512, 1223,
	307, 1342, 526, 527, 528, 529, 1246, 1294, 530, 1308,
	533, 534, 0, 0, 535, 0, 536, 0, 0, 538,
	539, 540, 0, 0, 541, 542, 749, 1343, 543, 1344,
	1323, 544, 545, 1233, 546, 547, 548, 549, 550, 551,
	552, 553, 554, 555, 0, 556, 557, 751, 558, 559,
	560, 752, 561, 562, 563, 1324, 564, 754, 565, 566,
	0, 567, 568, 569, 0, 570, 571, 572, 573, 574,
	575, 576, 577, 1304, 578, 579, 581, 580, 582, 0,
	583, 0, 584, 585, 586, 0, 0, 0, 0, 0,
	587, 588, 590, 0, 591, 592, 593, 594, 589, 595,
	596, 597, 598, 599, 600, 0, 602, 603, 601, 604,
	605, 1345, 606, 607, 608, 609, 610, 1234, 611, 0,
	612, 613, 620, 621, 622, 614, 615, 616, 623, 624,
	625, 626, 627, 629, 628, 0, 631, 632, 630, 633,
	634, 635, 1287, 636, 757, 637, 617, 618, 638, 639,
	1346, 640, 641, 642, 643, 644, 645, 646, 1302, 0,
	647, 0, 648, 649, 650, 651, 652, 653, 655, 619,
	656, 661, 662, 1349, 657, 658, 659, 660, 1325, 664,
	665, 666, 667, 0, 668, 669, 1220, 663, 654, 0,
	670, 671, 672, 673, 674, 675, 0, 676, 677, 0,
	678, 1314, 1315, 1316, 1317, 0, 690, 0, 679, 681,
	682, 683, 684, 1326, 685, 1327, 1244, 686, 687, 688,
	689, 680, 691, 692, 0, 1227, 693, 694, 696, 698,
	699, 695, 697, 700, 1288, 701, 0, 0, 702, 703,
	704, 767, 1311, 1348, 0, 706, 705, 707, 708, 709,
	770, 710, 711, 712, 0, 0, 0, 0, 713, 714,
	771, 715, 716, 717, 1224, 0, 0, 0, 0, 2964,
	0, 2955, 2962, 1239, 1240, 1236, 1237, 1249, 0, 1219,
	0, 0, 0, 0, 0, 0, 1217, 1218, 308, 309,
	311, 310, 312, 313, 314, 315, 1250, 316, 317, 0,
	1248, 0, 0, 0, 1290, 1254, 0, 0, 318, 0,
	319, 320, 321, 1330, 322, 323, 324, 325, 326, 327,
	328, 719, 1303, 0, 329, 1310, 330, 1309, 0, 1320,
	331, 332, 333, 334, 335, 336, 337, 1256, 1289, 1221,
	338, 1350, 1351, 726, 0, 339, 340, 1296, 0, 1277,
	0, 341, 342, 343, 344, 345, 346, 347, 348, 0,
	0, 350, 351, 352, 349, 353, 0, 354, 0, 355,
	356, 357, 358, 359, 360, 361, 0, 362, 363, 364,
	1331, 365, 366, 367, 1280, 1278, 1279, 1286, 1282, 1281,
	1285, 368, 369, 370, 371, 372, 1313, 2958, 375, 1307,
	1306, 1226, 378, 380, 374, 376, 0, 379, 377, 381,
	0, 382, 383, 384, 0, 0, 385, 1298, 387, 0,
	388, 389, 390, 0, 391, 392, 393, 0, 394, 395,
	1232, 396, 397, 398, 400, 402, 399, 401, 403, 404,
	405, 406, 407, 1321, 1322, 408, 1245, 305, 0, 0,
	0, 0, 0, 409, 410, 411, 1305, 0, 0, 0,
	412, 0, 413, 414, 415, 0, 416, 417, 0, 1332,
	418, 419, 420, 1318, 1319, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 0, 430, 1328, 0, 1255, 431,
	0, 432, 433, 434, 435, 436, 2959, 438, 1291, 1292,
	1295, 531, 1334, 439, 440, 441, 0, 442, 443, 444,
	445, 446, 0, 0, 0, 306, 447, 448, 449, 0,
	1333, 741, 450, 532, 451, 1300, 1301, 0, 1261, 0,
	452, 453, 455, 1335, 1293, 1336, 454, 456, 457, 1337,
	458, 0, 0, 0, 459, 460, 461, 462, 463, 464,
	0, 465, 467, 466, 0, 469, 1329, 468, 1338, 470,
	471, 1339, 0, 472, 473, 474, 475, 476, 477, 480,
	1284, 1283, 478, 479, 481, 482, 0, 483, 484, 486,
	489, 485, 487, 2960, 490, 2957, 504, 491, 492, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 506,
	0, 505, 1340, 507, 508, 509, 510, 511, 518, 520,
	521, 516, 517, 519, 522, 523, 525, 513, 514, 515,
	1341, 524, 512, 1223, 307, 1342, 526, 527, 528, 529,
	1246, 1294, 530, 1308, 533, 534, 0, 0, 535, 0,
	536, 0, 0, 538, 539, 540, 0, 0, 541, 542,
	749, 1343, 543, 1344, 1323, 544, 545, 1233, 546, 547,
	548, 549, 550, 551, 552, 553, 554, 555, 0, 556,
	557, 751, 558, 559, 560, 752, 561, 562, 563, 1324,
	564, 754, 565, 566, 0, 567, 568, 569, 0, 570,
	571, 572, 573, 574, 575, 576, 577, 1304, 578, 579,
	581, 580, 582, 0, 583, 0, 584, 585, 586, 0,
	0, 0, 0, 0, 587, 588, 590, 0, 591, 592,
	593, 594, 589, 595, 596, 597, 598, 599, 600, 0,
	602, 603, 601, 604, 605, 1345, 606, 607, 608, 609,
	610, 1234, 611, 0, 612, 613, 620, 621, 622, 614,
	615, 616, 623, 624, 625, 626, 2961, 629, 628, 0,
	631, 632, 630, 633, 634, 635, 1287, 636, 757, 637,
	617, 618, 638, 639, 1346, 640, 641, 642, 643, 644,
	645, 646, 1302, 0, 647, 0, 648, 649, 650, 651,
	652, 653, 655, 619, 656, 661, 662, 1349, 657, 658,
	659, 660, 1325, 664, 665, 666, 667, 0, 668, 669,
	1220, 663, 654, 0, 670, 671, 672, 673, 674, 675,
	0, 676, 677, 0, 678, 1314, 1315, 1316, 1317, 0,
	690, 0, 679, 681, 682, 683, 684, 1326, 685, 1327,
	1244, 686, 687, 688, 689, 680, 691, 692, 0, 1227,
	693, 694, 696, 698, 699, 695, 697, 700, 1288, 701,
	0, 0, 702, 703, 704, 767, 1311, 1348, 0, 706,
	705, 707, 708, 709, 770, 710, 711, 712, 0, 0,
	0, 0, 713, 714, 771, 715, 2956, 717, 1224, 0,
	0, 0, 0, 2952, 0, 2955, 2962, 1239, 1240, 1236,
	1237, 1249, 0, 1219, 0, 0, 0, 0, 0, 0,
	1217, 1218, 308, 309, 311, 310, 312, 313, 314, 315,
	1250, 316, 317, 0, 1248, 0, 0, 0, 1290, 1254,
	0, 0, 318, 0, 319, 320, 321, 1330, 322, 323,
	324, 325, 326, 327, 328, 719, 1303, 0, 329, 1310,
	330, 1309, 0, 1320, 331, 332, 333, 334, 335, 336,
	337, 1256, 1289, 1221, 338, 1350, 1351, 726, 0, 339,
	340, 1296, 0, 1277, 0, 341, 342, 343, 344, 345,
	346, 347, 348, 0, 0, 350, 351, 352, 349, 353,
	0, 354, 0, 355, 356, 357, 358, 359, 360, 361,
	0, 362, 363, 364, 1331, 365, 366, 367, 1280, 1278,
	1279, 1286, 1282, 1281, 1285, 368, 369, 370, 371, 372,
	1313, 2958, 375, 1307, 1306, 1226, 378, 380, 374, 376,
	0, 379, 377, 381, 0, 382, 383, 384, 0, 0,
	385, 1298, 387, 0, 388, 389, 390, 0, 391, 392,
	393, 0, 394, 395, 1232, 396, 397, 398, 400, 402,
	399, 401, 403, 404, 405, 406, 407, 1321, 1322, 408,
	1245, 305, 0, 0, 0, 0, 0, 409, 410, 411,
	1305, 0, 0, 0, 412, 0, 413, 414, 415, 0,
	416, 417, 0, 1332, 418, 419, 420, 1318, 1319, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 0, 430,
	1328, 0, 1255, 431, 0, 432, 433, 434, 435, 436,
	2959, 438, 1291, 1292, 1295, 531, 1334, 439, 440, 441,
	0, 442, 443, 444, 445, 446, 0, 0, 0, 306,
	447, 448, 449, 0, 1333, 741, 450, 532, 451, 1300,
	1301, 0, 1261, 0, 452, 453, 455, 1335, 1293, 1336,
	454, 456, 457, 1337, 458, 0, 0, 0, 459, 460,
	461, 462, 463, 464, 0, 465, 467, 466, 0, 469,
	1329, 468, 1338, 470, 471, 1339, 0, 472, 473, 474,
	475, 476, 477, 480, 1284, 1283, 478, 479, 481, 482,
	0, 483, 484, 486, 489, 485, 487, 2960, 490, 2957,
	504, 491, 492, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 506, 0, 505, 1340, 507, 508, 509,
	510, 511, 518, 520, 521, 516, 517, 519, 522, 523,
	525, 513, 514, 515, 1341, 524, 512, 1223, 307, 1342,
	526, 527, 528, 529, 1246, 1294, 530, 1308, 533, 534,
	0, 0, 535, 0, 536, 0, 0, 538, 539, 540,
	0, 0, 541, 542, 749, 1343, 543, 1344, 1323, 544,
	545, 1233, 546, 547, 548, 549, 550, 551, 552, 553,
	554, 555, 0, 556, 557, 751, 558, 559, 560, 752,
	561, 562, 563, 1324, 564, 754, 565, 566, 0, 567,
	568, 569, 0, 570, 571, 572, 573, 574, 575, 576,
	577, 1304, 578, 579, 581, 580, 582, 0, 583, 0,
	584, 585, 586, 0, 0, 0, 0, 0, 587, 588,
	590, 0, 591, 592, 593, 594, 589, 595, 596, 597,
	598, 599, 600, 0, 602, 603, 601, 604, 605, 1345,
	606, 607, 608, 609, 610, 1234, 611, 0, 612, 613,
	620, 621, 622, 614, 615, 616, 623, 624, 625, 626,
	2961, 629, 628, 0, 631, 632, 630, 633, 634, 635,
	1287, 636, 757, 637, 617, 618, 638, 639, 1346, 640,
	641, 642, 643, 644, 645, 646, 1302, 0, 647, 0,
	648, 649, 650, 651, 652, 653, 655, 619, 656, 661,
	662, 1349, 657, 658, 659, 660, 1325, 664, 665, 666,
	667, 0, 668, 669, 1220, 663, 654, 0, 670, 671,
	672, 673, 674, 675, 0, 676, 677, 0, 678, 1314,
	1315, 1316, 1317, 0, 690, 0, 679, 681, 682, 683,
	684, 1326, 685, 1327, 1244, 686, 687, 688, 689, 680,
	691, 692, 0, 1227, 693, 694, 696, 698, 699, 695,
	697, 700, 1288, 701, 0, 0, 702, 703, 704, 767,
	1311, 1348, 0, 706, 705, 707, 708, 709, 770, 710,
	711, 712, 0, 0, 0, 0, 713, 714, 771, 715,
	2956, 717, 1224, 0, 0, 0, 0, 0, 0, 1266,
	1238, 1239, 1240, 1236, 1237, 1249, 0, 1219, 0, 0,
	0, 0, 0, 0, 1217, 1218, 308, 309, 311, 310,
	312, 313, 314, 315, 1250, 316, 317, 0, 1248, 0,
	0, 0, 1290, 1254, 0, 0, 318, 0, 319, 320,
	321, 1330, 322, 323, 324, 325, 326, 327, 328, 719,
	1303, 0, 329, 1310, 330, 1309, 0, 1320, 331, 332,
	333, 334, 335, 336, 337, 1256, 1289, 1221, 338, 1350,
	1351, 726, 0, 339, 340, 1296, 0, 1277, 0, 341,
	342, 343, 344, 345, 346, 347, 348, 0, 0, 350,
	351, 352, 349, 353, 0, 354, 0, 355, 356, 357,
	358, 359, 360, 361, 0, 362, 363, 364, 1331, 365,
	366, 367, 1280, 1278, 1279, 1286, 1282, 1281, 1285, 368,
	369, 370, 371, 372, 1313, 373, 375, 1307, 1306, 1226,
	378, 380, 374, 376, 0, 379, 377, 381, 0, 382,
	383, 384, 0, 0, 385, 1298, 387, 0, 388, 389,
	390, 0, 391, 392, 393, 0, 394, 395, 1232, 396,
	397, 398, 400, 402, 399, 401, 403, 404, 405, 406,
	407, 1321, 1322, 408, 1245, 305, 0, 0, 0, 0,
	0, 409, 410, 411, 1305, 0, 0, 0, 412, 0,
	413, 414, 415, 0, 416, 417, 0, 1332, 418, 419,
	420, 1318, 1319, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 0, 430, 1328, 0, 1255, 431, 0, 432,
	433, 434, 435, 436, 437, 438, 1291, 1292, 1295, 531,
	1334, 439, 440, 441, 0, 442, 443, 444, 445, 446,
	0, 0, 0, 306, 447, 448, 449, 0, 1333, 741,
	450, 532, 451, 1300, 1301, 0, 1261, 0, 452, 453,
	455, 1335, 1293, 1336, 454, 456, 457, 1337, 458, 0,
	0, 0, 459, 460, 461, 462, 463, 464, 0, 465,
	467, 466, 0, 469, 1329, 468, 1338, 470, 471, 1339,
	0, 472, 473, 474, 475, 476, 477, 480, 1284, 1283,
	478, 479, 481, 482, 0, 483, 484, 486, 489, 485,
	487, 488, 490, 503, 504, 491, 492, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 506, 0, 505,
	1340, 507, 508, 509, 510, 511, 518, 520, 521, 516,
	517, 519, 522, 523, 525, 513, 514, 515, 1341, 524,
	512, 1223, 307, 1342, 526, 527, 528, 529, 1246, 1294,
	530, 1308, 533, 534, 0, 0, 535, 0, 536, 0,
	0, 538, 539, 540, 0, 0, 541, 542, 749, 1343,
	543, 1344, 1323, 544, 545, 1233, 546, 547, 548, 549,
	550, 551, 552, 553, 554, 555, 0, 556, 557, 751,
	558, 559, 560, 752, 561, 562, 563, 1324, 564, 754,
	565, 566, 0, 567, 568, 569, 0, 570, 571, 572,
	573, 574, 575, 576, 577, 1304, 578, 579, 581, 580,
	582, 0, 583, 0, 584, 585, 586, 0, 0, 0,
	0, 0, 587, 588, 590, 0, 591, 592, 593, 594,
	589, 595, 596, 597, 598, 599, 600, 0, 602, 603,
	601, 604, 605, 1345, 606, 607, 608, 609, 610, 1234,
	611, 0, 612, 613, 620, 621, 622, 614, 615, 616,
	623, 624, 625, 626, 627, 629, 628, 0, 631, 632,
	630, 633, 634, 635, 1287, 636, 757, 637, 617, 618,
	638, 639, 1346, 640, 641, 642, 643, 644, 645, 646,
	1302, 0, 647, 0, 648, 649, 650, 651, 652, 653,
	655, 619, 656, 661, 662, 1349, 657, 658, 659, 660,
	1325, 664, 665, 666, 667, 0, 668, 669, 1220, 663,
	654, 0, 670, 671, 672, 673, 674, 675, 0, 676,
	677, 0, 678, 1314, 1315, 1316, 1317, 0, 690, 0,
	679, 681, 682, 683, 684, 1326, 685, 1327, 1244, 686,
	687, 688, 689, 680, 691, 692, 0, 1227, 693, 694,
	696, 698, 699, 695, 697, 700, 1288, 701, 0, 0,
	702, 703, 704, 767, 1311, 1348, 0, 706, 705, 707,
	708, 709, 770, 710, 711, 712, 0, 0, 0, 0,
	713, 714, 771, 715, 716, 717, 1224, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1219, 0, 0, 0, 0, 0, 0, 1217, 1218,
	0, 0, 0, 0, 0, 0, 2075, 0, 1250, 0,
	0, 0, 1248, 1266, 1238, 1239, 1240, 1236, 1237, 1249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	308, 309, 311, 310, 312, 313, 314, 315, 2705, 316,
	317, 0, 0, 0, 0, 0, 1290, 1254, 0, 0,
	318, 0, 319, 320, 321, 1330, 322, 323, 324, 325,
	326, 327, 328, 719, 1303, 0, 329, 1310, 330, 1309,
	0, 1320, 331, 332, 333, 334, 335, 336, 337, 1256,
	1289, 1221, 338, 1350, 1351, 726, 0, 339, 340, 1296,
	0, 1277, 0, 341, 342, 343, 344, 345, 346, 347,
	348, 0, 0, 350, 351, 352, 349, 353, 0, 354,
	0, 355, 356, 357, 358, 359, 360, 361, 0, 362,
	363, 364, 1331, 365, 366, 367, 1280, 1278, 1279, 1286,
	1282, 1281, 1285, 368, 369, 370, 371, 372, 1313, 373,
	375, 1307, 1306, 1226, 378, 380, 374, 376, 0, 379,
	377, 381, 0, 382, 383, 384, 0, 0, 385, 1298,
	387, 0, 388, 389, 390, 0, 391, 392, 393, 0,
	394, 395, 1232, 396, 397, 398, 400, 402, 399, 401,
	403, 404, 405, 406, 407, 1321, 1322, 408, 1245, 305,
	0, 0, 0, 0, 0, 409, 410, 411, 1305, 0,
	0, 0, 412, 0, 413, 414, 415, 0, 416, 417,
	0, 1332, 418, 419, 420, 1318, 1319, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 0, 430, 1328, 0,
	1255, 431, 0, 432, 433, 434, 435, 436, 437, 438,
	1291, 1292, 1295, 531, 1334, 439, 440, 441, 0, 442,
	443, 444, 445, 446, 0, 0, 0, 306, 447, 448,
	449, 0, 1333, 741, 450, 532, 451, 1300, 1301, 0,
	1261, 0, 452, 453, 455, 1335, 1293, 1336, 454, 456,
	457, 1337, 458, 0, 0, 0, 459, 460, 461, 462,
	463, 464, 0, 465, 467, 466, 0, 469, 1329, 468,
	1338, 470, 471, 1339, 0, 472, 473, 474, 475, 476,
	477, 480, 1284, 1283, 478, 479, 481, 482, 0, 483,
	484, 486, 489, 485, 487, 488, 490, 503, 504, 491,
	492, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 506, 0, 505, 1340, 507, 508, 509, 510, 511,
	518, 520, 521, 516, 517, 519, 522, 523, 525, 513,
	514, 515, 1341, 524, 512, 1223, 307, 1342, 526, 527,
	528, 529, 1246, 1294, 530, 1308, 533, 534, 0, 0,
	535, 0, 536, 0, 0, 538, 539, 540, 0, 0,
	541, 542, 749, 1343, 543, 1344, 1323, 544, 545, 1233,
	546, 547, 548, 549, 550, 551, 552, 553, 554, 555,
	0, 556, 557, 751, 558, 559, 560, 752, 561, 562,
	563, 1324, 564, 754, 565, 566, 0, 567, 568, 569,
	0, 570, 571, 572, 573, 574, 575, 576, 577, 1304,
	578, 579, 581, 580, 582, 0, 583, 0, 584, 585,
	586, 0, 0, 0, 0, 0, 587, 588, 590, 0,
	591, 592, 593, 594, 589, 595, 596, 597, 598, 599,
	600, 0, 602, 603, 601, 604, 605, 1345, 606, 607,
	608, 609, 610, 1234, 611, 0, 612, 613, 620, 621,
	622, 614, 615, 616, 623, 624, 625, 626, 627, 629,
	628, 0, 631, 632, 630, 633, 634, 635, 1287, 636,
	757, 637, 617, 618, 638, 639, 1346, 640, 641, 642,
	643, 644, 645, 646, 1302, 0, 647, 0, 648, 649,
	650, 651, 652, 653, 655, 619, 656, 661, 662, 1349,
	657, 658, 659, 660, 1325, 664, 665, 666, 667, 0,
	668, 669, 1220, 663, 654, 0, 670, 671, 672, 673,
	674, 675, 0, 676, 677, 0, 678, 1314, 1315, 1316,
	1317, 0, 690, 0, 679, 681, 682, 683, 684, 1326,
	685, 1327, 1244, 686, 687, 688, 689, 680, 691, 692,
	0, 1227, 693, 694, 696, 698, 699, 695, 697, 700,
	1288, 701, 0, 0, 702, 703, 704, 767, 1311, 1348,
	0, 706, 705, 707, 708, 709, 770, 710, 711, 712,
	0, 0, 0, 0, 713, 714, 771, 715, 716, 717,
	1224, 0, 0, 0, 0, 2666, 0, 1266, 1238, 1239,
	1240, 1236, 1237, 1249, 0, 1219, 0, 0, 0, 0,
	0, 0, 1217, 1218, 308, 309, 311, 310, 312, 313,
	314, 315, 1250, 316, 317, 0, 1248, 0, 0, 0,
	1290, 1254, 0, 0, 318, 0, 319, 320, 321, 1330,
	322, 323, 324, 325, 326, 327, 328, 719, 1303, 0,
	329, 1310, 330, 1309, 0, 1320, 331, 332, 333, 334,
	335, 336, 337, 1256, 1289, 1221, 338, 1350, 1351, 726,
	0, 339, 340, 1296, 0, 1277, 0, 341, 342, 343,
	344, 345, 346, 347, 348, 0, 0, 350, 351, 352,
	349, 353, 0, 354, 0, 355, 356, 357, 358, 359,
	360, 361, 0, 362, 363, 364, 1331, 365, 366, 367,
	1280, 1278, 1279, 1286, 1282, 1281, 1285, 368, 369, 370,
	371, 372, 1313, 373, 375, 1307, 1306, 1226, 378, 380,
	374, 376, 0, 379, 377, 381, 0, 382, 383, 384,
	0, 0, 385, 1298, 387, 0, 388, 389, 390, 0,
	391, 392, 393, 0, 394, 395, 1232, 396, 397, 398,
	400, 402, 399, 401, 403, 404, 405, 406, 407, 1321,
	1322, 408, 1245, 305, 0, 0, 0, 0, 0, 409,
	410, 411, 1305, 0, 0, 0, 412, 0, 413, 414,
	415, 0, 416, 417, 0, 1332, 418, 419, 420, 1318,
	1319, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	0, 430, 1328, 0, 1255, 431, 0, 432, 433, 434,
	435, 436, 437, 438, 1291, 1292, 1295, 531, 1334, 439,
	440, 441, 0, 442, 443, 444, 445, 446, 0, 0,
	0, 306, 447, 448, 449, 0, 1333, 741, 450, 532,
	451, 1300, 1301, 0, 1261, 0, 452, 453, 455, 1335,
	1293, 1336, 454, 456, 457, 1337, 458, 0, 0, 0,
	459, 460, 461, 462, 463, 464, 0, 465, 467, 466,
	0, 469, 1329, 468, 1338, 470, 471, 1339, 0, 472,
	473, 474, 475, 476, 477, 480, 1284, 1283, 478, 479,
	481, 482, 0, 483, 484, 486, 489, 485, 487, 488,
	490, 503, 504, 491, 492, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 506, 0, 505, 1340, 507,
	508, 509, 510, 511, 518, 520, 521, 516, 517, 519,
	522, 523, 525, 513, 514, 515, 1341, 524, 512, 1223,
	307, 1342, 526, 527, 528, 529, 1246, 1294, 530, 1308,
	533, 534, 0, 0, 535, 0, 536, 0, 0, 538,
	539, 540, 0, 0, 541, 542, 749, 1343, 543, 1344,
	1323, 544, 545, 1233, 546, 547, 548, 549, 550, 551,
	552, 553, 554, 555, 0, 556, 557, 751, 558, 559,
	560, 752, 561, 562, 563, 1324, 564, 754, 565, 566,
	0, 567, 568, 569, 0, 570, 571, 572, 573, 574,
	575, 576, 577, 1304, 578, 579, 581, 580, 582, 0,
	583, 0, 584, 585, 586, 0, 0, 0, 0, 0,
	587, 588, 590, 0, 591, 592, 593, 594, 589, 595,
	596, 597, 598, 599, 600, 0, 602, 603, 601, 604,
	605, 1345, 606, 607, 608, 609, 610, 1234, 611, 0,
	612, 613, 620, 621, 622, 614, 615, 616, 623, 624,
	625, 626, 627, 629, 628, 0, 631, 632, 630, 633,
	634, 635, 1287, 636, 757, 637, 617, 618, 638, 639,
	1346, 640, 641, 642, 643, 644, 645, 646, 1302, 0,
	647, 0, 648, 649, 650, 651, 652, 653, 655, 619,
	656, 661, 662, 1349, 657, 658, 659, 660, 1325, 664,
	665, 666, 667, 0, 668, 669, 1220, 663, 654, 0,
	670, 671, 672, 673, 674, 675, 0, 676, 677, 0,
	678, 1314, 1315, 1316, 1317, 0, 690, 0, 679, 681,
	682, 683, 684, 1326, 685, 1327, 1244, 686, 687, 688,
	689, 680, 691, 692, 0, 1227, 693, 694, 696, 698,
	699, 695, 697, 700, 1288, 701, 0, 0, 702, 703,
	704, 767, 1311, 1348, 0, 706, 705, 707, 708, 709,
	770, 710, 711, 712, 0, 0, 0, 0, 713, 714,
	771, 715, 716, 717, 1224, 0, 0, 0, 0, 2636,
	0, 1266, 1238, 1239, 1240, 1236, 1237, 1249, 0, 1219,
	0, 0, 0, 0, 0, 0, 1217, 1218, 308, 309,
	311, 310, 312, 313, 314, 315, 1250, 316, 317, 0,
	1248, 0, 0, 0, 1290, 1254, 0, 0, 318, 0,
	319, 320, 321, 1330, 322, 323, 324, 325, 326, 327,
	328, 719, 1303, 0, 329, 1310, 330, 1309, 0, 1320,
	331, 332, 333, 334, 335, 336, 337, 1256, 1289, 1221,
	338, 1350, 1351, 726, 0, 339, 340, 1296, 0, 1277,
	0, 341, 342, 343, 344, 345, 346, 347, 348, 0,
	0, 350, 351, 352, 349, 353, 0, 354, 0, 355,
	356, 357, 358, 359, 360, 361, 0, 362, 363, 364,
	1331, 365, 366, 367, 1280, 1278, 1279, 1286, 1282, 1281,
	1285, 368, 369, 370, 371, 372, 1313, 373, 375, 1307,
	1306, 1226, 378, 380, 374, 376, 0, 379, 377, 381,
	0, 382, 383, 384, 0, 0, 385, 1298, 387, 0,
	388, 389, 390, 0, 391, 392, 393, 0, 394, 395,
	1232, 396, 397, 398, 400, 402, 399, 401, 403, 404,
	405, 406, 407, 1321, 1322, 408, 1245, 305, 0, 0,
	0, 0, 0, 409, 410, 411, 1305, 0, 0, 0,
	412, 0, 413, 414, 415, 0, 416, 417, 0, 1332,
	418, 419, 420, 1318, 1319, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 0, 430, 1328, 0, 1255, 431,
	0, 432, 433, 434, 435, 436, 437, 438, 1291, 1292,
	1295, 531, 1334, 439, 440, 441, 0, 442, 443, 444,
	445, 446, 0, 0, 0, 306, 447, 448, 449, 0,
	1333, 741, 450, 532, 451, 1300, 1301, 0, 1261, 0,
	452, 453, 455, 1335, 1293, 1336, 454, 456, 457, 1337,
	458, 0, 0, 0, 459, 460, 461, 462, 463, 464,
	0, 465, 467, 466, 0, 469, 1329, 468, 1338, 470,
	471, 1339, 0, 472, 473, 474, 475, 476, 477, 480,
	1284, 1283, 478, 479, 481, 482, 0, 483, 484, 486,
	489, 485, 487, 488, 490, 503, 504, 491, 492, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 506,
	0, 505, 1340, 507, 508, 509, 510, 511, 518, 520,
	521, 516, 517, 519, 522, 523, 525, 513, 514, 515,
	1341, 524, 512, 1223, 307, 1342, 526, 527, 528, 529,
	1246, 1294, 530, 1308, 533, 534, 0, 0, 535, 0,
	536, 0, 0, 538, 539, 540, 0, 0, 541, 542,
	749, 1343, 543, 1344, 1323, 544, 545, 1233, 546, 547,
	548, 549, 550, 551, 552, 553, 554, 555, 0, 556,
	557, 751, 558, 559, 560, 752, 561, 562, 563, 1324,
	564, 754, 565, 566, 0, 567, 568, 569, 0, 570,
	571, 572, 573, 574, 575, 576, 577, 1304, 578, 579,
	581, 580, 582, 0, 583, 0, 584, 585, 586, 0,
	0, 0, 0, 0, 587, 588, 590, 0, 591, 592,
	593, 594, 589, 595, 596, 597, 598, 599, 600, 0,
	602, 603, 601, 604, 605, 1345, 606, 607, 608, 609,
	610, 1234, 611, 0, 612, 613, 620, 621, 622, 614,
	615, 616, 623, 624, 625, 626, 627, 629, 628, 0,
	631, 632, 630, 633, 634, 635, 1287, 636, 757, 637,
	617, 618, 638, 639, 1346, 640, 641, 642, 643, 644,
	645, 646, 1302, 0, 647, 0, 648, 649, 650, 651,
	652, 653, 655, 619, 656, 661, 662, 1349, 657, 658,
	659, 660, 1325, 664, 665, 666, 667, 0, 668, 669,
	1220, 663, 654, 0, 670, 671, 672, 673, 674, 675,
	0, 676, 677, 0, 678, 1314, 1315, 1316, 1317, 0,
	690, 0, 679, 681, 682, 683, 684, 1326, 685, 1327,
	1244, 686, 687, 688, 689, 680, 691, 692, 0, 1227,
	693, 694, 696, 698, 699, 695, 697, 700, 1288, 701,
	0, 0, 702, 703, 704, 767, 1311, 1348, 0, 706,
	705, 707, 708, 709, 770, 710, 711, 712, 0, 0,
	0, 0, 713, 714, 771, 715, 716, 717, 1224, 0,
	0, 0, 0, 1907, 0, 1266, 1238, 1239, 1240, 1236,
	1237, 1249, 0, 1219, 0, 0, 0, 0, 0, 0,
	1217, 1218, 308, 309, 311, 310, 312, 313, 314, 315,
	1250, 316, 317, 0, 1248, 0, 0, 0, 1290, 1254,
	0, 0, 318, 0, 319, 320, 321, 1330, 322, 323,
	324, 325, 326, 327, 328, 719, 1303, 0, 329, 1310,
	330, 1309, 0, 1320, 331, 332, 333, 334, 335, 336,
	337, 1256, 1289, 1221, 338, 1350, 1351, 726, 0, 339,
	340, 1296, 0, 1277, 0, 341, 342, 343, 344, 345,
	346, 347, 348, 0, 0, 350, 351, 352, 349, 353,
	0, 354, 0, 355, 356, 357, 358, 359, 360, 361,
	0, 362, 363, 364, 1331, 365, 366, 367, 1280, 1278,
	1279, 1286, 1282, 1281, 1285, 368, 369, 370, 371, 372,
	1313, 373, 375, 1307, 1306, 1226, 378, 380, 374, 376,
	0, 379, 377, 381, 0, 382, 383, 384, 0, 0,
	385, 1298, 387, 0, 388, 389, 390, 0, 391, 392,
	393, 0, 394, 395, 1232, 396, 397, 398, 400, 402,
	399, 401, 403, 404, 405, 406, 407, 1321, 1322, 408,
	1245, 305, 0, 0, 0, 0, 0, 409, 410, 411,
	1305, 0, 0, 0, 412, 0, 413, 414, 415, 0,
	416, 417, 0, 1332, 418, 419, 420, 1318, 1319, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 0, 430,
	1328, 0, 1255, 431, 0, 432, 433, 434, 435, 436,
	437, 438, 1291, 1292, 1295, 531, 1334, 439, 440, 441,
	0, 442, 443, 444, 445, 446, 0, 0, 0, 306,
	447, 448, 449, 0, 1333, 741, 450, 532, 451, 1300,
	1301, 0, 1261, 0, 452, 453, 455, 1335, 1293, 1336,
	454, 456, 457, 1337, 458, 0, 0, 0, 459, 460,
	461, 462, 463, 464, 0, 465, 467, 466, 0, 469,
	1329, 468, 1338, 470, 471, 1339, 0, 472, 473, 474,
	475, 476, 477, 480, 1284, 1283, 478, 479, 481, 482,
	0, 483, 484, 486, 489, 485, 487, 488, 490, 503,
	504, 491, 492, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 506, 0, 505, 1340, 507, 508, 509,
	510, 511, 518, 520, 521, 516, 517, 519, 522, 523,
	525, 513, 514, 515, 1341, 524, 512, 1223, 307, 1342,
	526, 527, 528, 529, 1246, 1294, 530, 1308, 533, 534,
	0, 0, 535, 0, 536, 0, 0, 538, 539, 540,
	0, 0, 541, 542, 749, 1343, 543, 1344, 1323, 544,
	545, 1233, 546, 547, 548, 549, 550, 551, 552, 553,
	554, 555, 0, 556, 557, 751, 558, 559, 560, 752,
	561, 562, 563, 1324, 564, 754, 565, 566, 0, 567,
	568, 569, 0, 570, 571, 572, 573, 574, 575, 576,
	577, 1304, 578, 579, 581, 580, 582, 0, 583, 0,
	584, 585, 586, 0, 0, 0, 0, 0, 587, 588,
	590, 0, 591, 592, 593, 594, 589, 595, 596, 597,
	598, 599, 600, 0, 602, 603, 601, 604, 605, 1345,
	606, 607, 608, 609, 610, 1234, 611, 0, 612, 613,
	620, 621, 622, 614, 615, 616, 623, 624, 625, 626,
	627, 629, 628, 0, 631, 632, 630, 633, 634, 635,
	1287, 636, 757, 637, 617, 618, 638, 639, 1346, 640,
	641, 642, 643, 644, 645, 646, 1302, 0, 647, 0,
	648, 649, 650, 651, 652, 653, 655, 619, 656, 661,
	662, 1349, 657, 658, 659, 660, 1325, 664, 665, 666,
	667, 0, 668, 669, 1220, 663, 654, 0, 670, 671,
	672, 673, 674, 675, 0, 676, 677, 0, 678, 1314,
	1315, 1316, 1317, 0, 690, 0, 679, 681, 682, 683,
	684, 1326, 685, 1327, 1244, 686, 687, 688, 689, 680,
	691, 692, 0, 1227, 693, 694, 696, 698, 699, 695,
	697, 700, 1288, 701, 0, 0, 702, 703, 704, 767,
	1311, 1348, 0, 706, 705, 707, 708, 709, 770, 710,
	711, 712, 0, 0, 0, 0, 713, 714, 771, 715,
	716, 717, 1224, 0, 0, 0, 0, 1835, 0, 1266,
	1238, 1239, 1240, 1236, 1237, 1249, 0, 1219, 0, 0,
	0, 0, 0, 0, 1217, 1218, 308, 309, 311, 310,
	312, 313, 314, 315, 1250, 316, 317, 0, 1248, 0,
	0, 0, 1290, 1254, 0, 0, 318, 0, 319, 320,
	321, 1330, 322, 323, 324, 325, 326, 327, 328, 719,
	1303, 0, 329, 1310, 330, 1309, 0, 1320, 331, 332,
	333, 334, 335, 336, 337, 1256, 1289, 1221, 338, 1350,
	1351, 726, 0, 339, 340, 1296, 0, 1277, 0, 341,
	342, 343, 344, 345, 346, 347, 348, 0, 0, 350,
	351, 352, 349, 353, 0, 354, 0, 355, 356, 357,
	358, 359, 360, 361, 0, 362, 363, 364, 1331, 365,
	366, 367, 1280, 1278, 1279, 1286, 1282, 1281, 1285, 368,
	369, 370, 371, 372, 1313, 373, 375, 1307, 1306, 1226,
	378, 380, 374, 376, 0, 379, 377, 381, 0, 382,
	383, 384, 0, 0, 385, 1298, 387, 0, 388, 389,
	390, 0, 391, 392, 393, 0, 394, 395, 1232, 396,
	397, 398, 400, 402, 399, 401, 403, 404, 405, 406,
	407, 1321, 1322, 408, 1245, 305, 0, 0, 0, 0,
	0, 409, 410, 411, 1305, 0, 0, 0, 412, 0,
	413, 414, 415, 0, 416, 417, 0, 1332, 418, 419,
	420, 1318, 1319, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 0, 430, 1328, 0, 1255, 431, 0, 432,
	433, 434, 435, 436, 437, 438, 1291, 1292, 1295, 531,
	1334, 439, 440, 441, 0, 442, 443, 444, 445, 446,
	0, 0, 0, 306, 447, 448, 449, 0, 1333, 741,
	450, 532, 451, 1300, 1301, 0, 1261, 0, 452, 453,
	455, 1335, 1293, 1336, 454, 456, 457, 1337, 458, 0,
	0, 0, 459, 460, 461, 462, 463, 464, 0, 465,
	467, 466, 0, 469, 1329, 468, 1338, 470, 471, 1339,
	0, 472, 473, 474, 475, 476, 477, 480, 1284, 1283,
	478, 479, 481, 482, 0, 483, 484, 486, 489, 485,
	487, 488, 490, 503, 504, 491, 492, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 506, 0, 505,
	1340, 507, 508, 509, 510, 511, 518, 520, 521, 516,
	517, 519, 522, 523, 525, 513, 514, 515, 1341, 524,
	512, 1223, 307, 1342, 526, 527, 528, 529, 1246, 1294,
	530, 1308, 533, 534, 0, 0, 535, 0, 536, 0,
	0, 538, 539, 540, 0, 0, 541, 542, 749, 1343,
	543, 1344, 1323, 544, 545, 1233, 546, 547, 548, 549,
	550, 551, 552, 553, 554, 555, 0, 556, 557, 751,
	558, 559, 560, 752, 561, 562, 563, 1324, 564, 754,
	565, 566, 0, 567, 568, 569, 0, 570, 571, 572,
	573, 574, 575, 576, 577, 1304, 578, 579, 581, 580,
	582, 0, 583, 0, 584, 585, 586, 0, 0, 0,
	0, 0, 587, 588, 590, 0, 591, 592, 593, 594,
	589, 595, 596, 597, 598, 599, 600, 0, 602, 603,
	601, 604, 605, 1345, 606, 607, 608, 609, 610, 1234,
	611, 0, 612, 613, 620, 621, 622, 614, 615, 616,
	623, 624, 625, 626, 627, 629, 628, 0, 631, 632,
	630, 633, 634, 635, 1287, 636, 757, 637, 617, 618,
	638, 639, 1346, 640, 641, 642, 643, 644, 645, 646,
	1302, 0, 647, 0, 648, 649, 650, 651, 652, 653,
	655, 619, 656, 661, 662, 1349, 657, 658, 659, 660,
	1325, 664, 665, 666, 667, 0, 668, 669, 1220, 663,
	654, 0, 670, 671, 672, 673, 674, 675, 0, 676,
	677, 0, 678, 1314, 1315, 1316, 1317, 0, 690, 0,
	679, 681, 682, 683, 684, 1326, 685, 1327, 1244, 686,
	687, 688, 689, 680, 691, 692, 0, 1227, 693, 694,
	696, 698, 699, 695, 697, 700, 1288, 701, 0, 0,
	702, 703, 704, 767, 1311, 1348, 0, 706, 705, 707,
	708, 709, 770, 710, 711, 712, 0, 0, 0, 0,
	713, 714, 771, 715, 716, 717, 1224, 0, 0, 0,
	0, 1830, 0, 1266, 1238, 1239, 1240, 1236, 1237, 1249,
	0, 1219, 0, 0, 0, 0, 0, 0, 1217, 1218,
	308, 309, 311, 310, 312, 313, 314, 315, 1250, 316,
	317, 0, 1248, 0, 0, 0, 1290, 1254, 0, 0,
	318, 0, 319, 320, 321, 1330, 322, 323, 324, 325,
	326, 327, 328, 719, 1303, 0, 329, 1310, 330, 1309,
	0, 1320, 331, 332, 333, 334, 335, 336, 337, 1256,
	1289, 1221, 338, 1350, 1351, 726, 0, 339, 340, 1296,
	0, 1277, 0, 341, 342, 343, 344, 345, 346, 347,
	348, 0, 0, 350, 351, 352, 349, 353, 0, 354,
	0, 355, 356, 357, 358, 359, 360, 361, 0, 362,
	363, 364, 1331, 365, 366, 367, 1280, 1278, 1279, 1286,
	1282, 1281, 1285, 368, 369, 370, 371, 372, 1313, 373,
	375, 1307, 1306, 1226, 378, 380, 374, 376, 0, 379,
	377, 381, 0, 382, 383, 384, 0, 0, 385, 1298,
	387, 0, 388, 389, 390, 0, 391, 392, 393, 0,
	394, 395, 1232, 396, 397, 398, 400, 402, 399, 401,
	403, 404, 405, 406, 407, 1321, 1322, 408, 1245, 305,
	0, 0, 0, 0, 0, 409, 410, 411, 1305, 0,
	0, 0, 412, 0, 413, 414, 415, 0, 416, 417,
	0, 1332, 418, 419, 420, 1318, 1319, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 0, 430, 1328, 0,
	1255, 431, 0, 432, 433, 434, 435, 436, 437, 438,
	1291, 1292, 1295, 531, 1334, 439, 440, 441, 0, 442,
	443, 444, 445, 446, 0, 0, 0, 306, 447, 448,
	449, 0, 1333, 741, 450, 532, 451, 1300, 1301, 0,
	1261, 0, 452, 453, 455, 1335, 1293, 1336, 454, 456,
	457, 1337, 458, 0, 0, 0, 459, 460, 461, 462,
	463, 464, 0, 465, 467, 466, 0, 469, 1329, 468,
	1338, 470, 471, 1339, 0, 472, 473, 474, 475, 476,
	477, 480, 1284, 1283, 478, 479, 481, 482, 0, 483,
	484, 486, 489, 485, 487, 488, 490, 503, 504, 491,
	492, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 506, 0, 505, 1340, 507, 508, 509, 510, 511,
	518, 520, 521, 516, 517, 519, 522, 523, 525, 513,
	514, 515, 1341, 524, 512, 1223, 307, 1342, 526, 527,
	528, 529, 1246, 1294, 530, 1308, 533, 534, 0, 0,
	535, 0, 536, 0, 0, 538, 539, 540, 0, 0,
	541, 542, 749, 1343, 543, 1344, 1323, 544, 545, 1233,
	546, 547, 548, 549, 550, 551, 552, 553, 554, 555,
	0, 556, 557, 751, 558, 559, 560, 752, 561, 562,
	563, 1324, 564, 754, 565, 566, 0, 567, 568, 569,
	0, 570, 571, 572, 573, 574, 575, 576, 577, 1304,
	578, 579, 581, 580, 582, 0, 583, 0, 584, 585,
	586, 0, 0, 0, 0, 0, 587, 588, 590, 0,
	591, 592, 593, 594, 589, 595, 596, 597, 598, 599,
	600, 0, 602, 603, 601, 604, 605, 1345, 606, 607,
	608, 609, 610, 1234, 611, 0, 612, 613, 620, 621,
	622, 614, 615, 616, 623, 624, 625, 626, 627, 629,
	628, 0, 631, 632, 630, 633, 634, 635, 1287, 636,
	757, 637, 617, 618, 638, 639, 1346, 640, 641, 642,
	643, 644, 645, 646, 1302, 0, 647, 0, 648, 649,
	650, 651, 652, 653, 655, 619, 656, 661, 662, 1349,
	657, 658, 659, 660, 1325, 664, 665, 666, 667, 0,
	668, 669, 1220, 663, 654, 0, 670, 671, 672, 673,
	674, 675, 0, 676, 677, 0, 678, 1314, 1315, 1316,
	1317, 0, 690, 0, 679, 681, 682, 683, 684, 1326,
	685, 1327, 1244, 686, 687, 688, 689, 680, 691, 692,
	0, 1227, 693, 694, 696, 698, 699, 695, 697, 700,
	1288, 701, 0, 0, 702, 703, 704, 767, 1311, 1348,
	0, 706, 705, 707, 708, 709, 770, 710, 711, 712,
	0, 0, 0, 0, 713, 714, 771, 715, 716, 717,
	1224, 0, 0, 0, 0, 1816, 0, 1266, 1238, 1239,
	1240, 1236, 1237, 1249, 0, 1219, 0, 0, 0, 0,
	0, 0, 1217, 1218, 308, 309, 311, 310, 312, 313,
	314, 315, 1250, 316, 317, 0, 1248, 0, 0, 0,
	1290, 1254, 0, 0, 318, 0, 319, 320, 321, 1330,
	322, 323, 324, 325, 326, 327, 328, 719, 1303, 0,
	329, 1310, 330, 1309, 0, 1320, 331, 332, 333, 334,
	335, 336, 337, 1256, 1289, 1221, 338, 1350, 1351, 726,
	0, 339, 340, 1296, 0, 1277, 0, 341, 342, 343,
	344, 345, 346, 347, 348, 0, 0, 350, 351, 352,
	349, 353, 0, 354, 0, 355, 356, 357, 358, 359,
	360, 361, 0, 362, 363, 364, 1331, 365, 366, 367,
	1280, 1278, 1279, 1286, 1282, 1281, 1285, 368, 369, 370,
	371, 372, 1313, 373, 375, 1307, 1306, 1226, 378, 380,
	374, 376, 0, 379, 377, 381, 0, 382, 383, 384,
	0, 0, 385, 1298, 387, 0, 388, 389, 390, 0,
	391, 392, 393, 0, 394, 395, 1232, 396, 397, 398,
	400, 402, 399, 401, 403, 404, 405, 406, 407, 1321,
	1322, 408, 1245, 305, 0, 0, 0, 0, 0, 409,
	410, 411, 1305, 0, 0, 0, 412, 0, 413, 414,
	415, 0, 416, 417, 0, 1332, 418, 419, 420, 1318,
	1319, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	0, 430, 1328, 0, 1255, 431, 0, 432, 433, 434,
	435, 436, 437, 438, 1291, 1292, 1295, 531, 1334, 439,
	440, 441, 0, 442, 443, 444, 445, 446, 0, 0,
	0, 306, 447, 448, 449, 0, 1333, 741, 450, 532,
	451, 1300, 1301, 0, 1261, 0, 452, 453, 455, 1335,
	1293, 1336, 454, 456, 457, 1337, 458, 0, 0, 0,
	459, 460, 461, 462, 463, 464, 0, 465, 467, 466,
	0, 469, 1329, 468, 1338, 470, 471, 1339, 0, 472,
	473, 474, 475, 476, 477, 480, 1284, 1283, 478, 479,
	481, 482, 0, 483, 484, 486, 489, 485, 487, 488,
	490, 503, 504, 491, 492, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 506, 0, 505, 1340, 507,
	508, 509, 510, 511, 518, 520, 521, 516, 517, 519,
	522, 523, 525, 513, 514, 515, 1341, 524, 512, 1223,
	307, 1342, 526, 527, 528, 529, 1246, 1294, 530, 1308,
	533, 534, 0, 0, 535, 0, 536, 0, 0, 538,
	539, 540, 0, 0, 541, 542, 749, 1343, 543, 1344,
	1323, 544, 545, 1233, 546, 547, 548, 549, 550, 551,
	552, 553, 554, 555, 0, 556, 557, 751, 558, 559,
	560, 752, 561, 562, 563, 1324, 564, 754, 565, 566,
	0, 567, 568, 569, 0, 570, 571, 572, 573, 574,
	575, 576, 577, 1304, 578, 579, 581, 580, 582, 0,
	583, 0, 584, 585, 586, 0, 0, 0, 0, 0,
	587, 588, 590, 0, 591, 592, 593, 594, 589, 595,
	596, 597, 598, 599, 600, 0, 602, 603, 601, 604,
	605, 1345, 606, 607, 608, 609, 610, 1234, 611, 0,
	612, 613, 620, 621, 622, 614, 615, 616, 623, 624,
	625, 626, 627, 629, 628, 0, 631, 632, 630, 633,
	634, 635, 1287, 636, 757, 637, 617, 618, 638, 639,
	1346, 640, 641, 642, 643, 644, 645, 646, 1302, 0,
	647, 0, 648, 649, 650, 651, 652, 653, 655, 619,
	656, 661, 662, 1349, 657, 658, 659, 660, 1325, 664,
	665, 666, 667, 0, 668, 669, 1220, 663, 654, 0,
	670, 671, 672, 673, 674, 675, 0, 676, 677, 0,
	678, 1314, 1315, 1316, 1317, 0, 690, 0, 679, 681,
	682, 683, 684, 1326, 685, 1327, 1244, 686, 687, 688,
	689, 680, 691, 692, 0, 1227, 693, 694, 696, 698,
	699, 695, 697, 700, 1288, 701, 0, 0, 702, 703,
	704, 767, 1311, 1348, 0, 706, 705, 707, 708, 709,
	770, 710, 711, 712, 0, 0, 0, 0, 713, 714,
	771, 715, 716, 717, 1224, 0, 0, 0, 0, 1811,
	0, 1266, 1238, 1239, 1240, 1236, 1237, 1249, 0, 1219,
	0, 0, 0, 0, 0, 0, 1217, 1218, 308, 309,
	311, 310, 312, 313, 314, 315, 1250, 316, 317, 0,
	1248, 0, 0, 0, 1290, 1254, 0, 0, 318, 0,
	319, 320, 321, 1330, 322, 323, 324, 325, 326, 327,
	328, 719, 1303, 0, 329, 1310, 330, 1309, 0, 1320,
	331, 332, 333, 334, 335, 336, 337, 1256, 1289, 1221,
	338, 1350, 1351, 726, 0, 339, 340, 1296, 0, 1277,
	0, 341, 342, 343, 344, 345, 346, 347, 348, 0,
	0, 350, 351, 352, 349, 353, 0, 354, 0, 355,
	356, 357, 358, 359, 360, 361, 0, 362, 363, 364,
	1331, 365, 366, 367, 1280, 1278, 1279, 1286, 1282, 1281,
	1285, 368, 369, 370, 371, 372, 1313, 373, 375, 1307,
	1306, 1226, 378, 380, 374, 376, 0, 379, 377, 381,
	0, 382, 383, 384, 0, 0, 385, 1298, 387, 0,
	388, 389, 390, 0, 391, 392, 393, 0, 394, 395,
	1232, 396, 397, 398, 400, 402, 399, 401, 403, 404,
	405, 406, 407, 1321, 1322, 408, 1245, 305, 0, 0,
	0, 0, 0, 409, 410, 411, 1305, 0, 0, 0,
	412, 0, 413, 414, 415, 0, 416, 417, 0, 1332,
	418, 419, 420, 1318, 1319, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 0, 430, 1328, 0, 1255, 431,
	0, 432, 433, 434, 435, 436, 437, 438, 1291, 1292,
	1295, 531, 1334, 439, 440, 441, 0, 442, 443, 444,
	445, 446, 0, 0, 0, 306, 447, 448, 449, 0,
	1333, 741, 450, 532, 451, 1300, 1301, 0, 1261, 0,
	452, 453, 455, 1335, 1293, 1336, 454, 456, 457, 1337,
	458, 0, 0, 0, 459, 460, 461, 462, 463, 464,
	0, 465, 467, 466, 0, 469, 1329, 468, 1338, 470,
	471, 1339, 0, 472, 473, 474, 475, 476, 477, 480,
	1284, 1283, 478, 479, 481, 482, 0, 483, 484, 486,
	489, 485, 487, 488, 490, 503, 504, 491, 492, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 506,
	0, 505, 1340, 507, 508, 509, 510, 511, 518, 520,
	521, 516, 517, 519, 522, 523, 525, 513, 514, 515,
	1341, 524, 512, 1223, 307, 1342, 526, 527, 528, 529,
	1246, 1294, 530, 1308, 533, 534, 0, 0, 535, 0,
	536, 0, 0, 538, 539, 540, 0, 0, 541, 542,
	749, 1343, 543, 1344, 1323, 544, 545, 1233, 546, 547,
	548, 549, 550, 551, 552, 553, 554, 555, 0, 556,
	557, 751, 558, 559, 560, 752, 561, 562, 563, 1324,
	564, 754, 565, 566, 0, 567, 568, 569, 0, 570,
	571, 572, 573, 574, 575, 576, 577, 1304, 578, 579,
	581, 580, 582, 0, 583, 0, 584, 585, 586, 0,
	0, 0, 0, 0, 587, 588, 590, 0, 591, 592,
	593, 594, 589, 595, 596, 597, 598, 599, 600, 0,
	602, 603, 601, 604, 605, 1345, 606, 607, 608, 609,
	610, 1234, 611, 0, 612, 613, 620, 621, 622, 614,
	615, 616, 623, 624, 625, 626, 627, 629, 628, 0,
	631, 632, 630, 633, 634, 635, 1287, 636, 757, 637,
	617, 618, 638, 639, 1346, 640, 641, 642, 643, 644,
	645, 646, 1302, 0, 647, 0, 648, 649, 650, 651,
	652, 653, 655, 619, 656, 661, 662, 1349, 657, 658,
	659, 660, 1325, 664, 665, 666, 667, 0, 668, 669,
	1220, 663, 654, 0, 670, 671, 672, 673, 674, 675,
	0, 676, 677, 0, 678, 1314, 1315, 1316, 1317, 0,
	690, 0, 679, 681, 682, 683, 684, 1326, 685, 1327,
	1244, 686, 687, 688, 689, 680, 691, 692, 0, 1227,
	693, 694, 696, 698, 699, 695, 697, 700, 1288, 701,
	0, 0, 702, 703, 704, 767, 1311, 1348, 0, 706,
	705, 707, 708, 709, 770, 710, 711, 712, 0, 0,
	0, 0, 713, 714, 771, 715, 716, 717, 1224, 0,
	0, 0, 0, 1717, 0, 1266, 1238, 1239, 1240, 1236,
	1237, 1249, 0, 1219, 0, 0, 0, 0, 0, 0,
	1217, 1218, 308, 309, 311, 310, 312, 313, 314, 315,
	1250, 316, 317, 0, 1248, 0, 0, 0, 1290, 1254,
	0, 0, 318, 0, 319, 320, 321, 1330, 322, 323,
	324, 325, 326, 327, 328, 719, 1303, 0, 329, 1310,
	330, 1309, 0, 1320, 331, 332, 333, 334, 335, 336,
	337, 1256, 1289, 1221, 338, 1350, 1351, 726, 0, 339,
	340, 1296, 0, 1277, 0, 341, 342, 343, 344, 345,
	346, 347, 348, 0, 0, 350, 351, 352, 349, 353,
	0, 354, 0, 355, 356, 357, 358, 359, 360, 361,
	0, 362, 363, 364, 1331, 365, 366, 367, 1280, 1278,
	1279, 1286, 1282, 1281, 1285, 368, 369, 370, 371, 372,
	1313, 373, 375, 1307, 1306, 1226, 378, 380, 374, 376,
	0, 379, 377, 381, 0, 382, 383, 384, 0, 0,
	385, 1298, 387, 0, 388, 389, 390, 0, 391, 392,
	393, 0, 394, 395, 1232, 396, 397, 398, 400, 402,
	399, 401, 403, 404, 405, 406, 407, 1321, 1322, 408,
	1245, 305, 0, 0, 0, 0, 0, 409, 410, 411,
	1305, 0, 0, 0, 412, 0, 413, 414, 415, 0,
	416, 417, 0, 1332, 418, 419, 420, 1318, 1319, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 0, 430,
	1328, 0, 1255, 431, 0, 432, 433, 434, 435, 436,
	437, 438, 1716, 1292, 1295, 531, 1334, 439, 440, 441,
	0, 442, 443, 444, 445, 446, 0, 0, 0, 306,
	447, 448, 449, 0, 1333, 741, 450, 532, 451, 1300,
	1301, 0, 1261, 0, 452, 453, 455, 1335, 1293, 1336,
	454, 456, 457, 1337, 458, 0, 0, 0, 459, 460,
	461, 462, 463, 464, 0, 465, 467, 466, 0, 469,
	1329, 468, 1338, 470, 471, 1339, 0, 472, 473, 474,
	475, 476, 477, 480, 1284, 1283, 478, 479, 481, 482,
	0, 483, 484, 486, 489, 485, 487, 488, 490, 503,
	504, 491, 492, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 506, 0, 505, 1340, 507, 508, 509,
	510, 511, 518, 520, 521, 516, 517, 519, 522, 523,
	525, 513, 514, 515, 1341, 524, 512, 1223, 307, 1342,
	526, 527, 528, 529, 1246, 1294, 530, 1308, 533, 534,
	0, 0, 535, 0, 536, 0, 0, 538, 539, 540,
	0, 0, 541, 542, 749, 1343, 543, 1344, 1323, 544,
	545, 1233, 546, 547, 548, 549, 550, 551, 552, 553,
	554, 555, 0, 556, 557, 751, 558, 559, 560, 752,
	561, 562, 563, 1324, 564, 754, 565, 566, 0, 567,
	568, 569, 0, 570, 571, 572, 573, 574, 575, 576,
	577, 1304, 578, 579, 581, 580, 582, 0, 583, 0,
	584, 585, 586, 0, 0, 0, 0, 0, 587, 588,
	590, 0, 591, 592, 593, 594, 589, 595, 596, 597,
	598, 599, 600, 0, 602, 603, 601, 604, 605, 1345,
	606, 607, 608, 609, 610, 1234, 611, 0, 612, 613,
	620, 621, 622, 614, 615, 616, 623, 624, 625, 626,
	627, 629, 628, 0, 631, 632, 630, 633, 634, 635,
	1287, 636, 757, 637, 617, 618, 638, 639, 1346, 640,
	641, 642, 643, 644, 645, 646, 1302, 0, 647, 0,
	648, 649, 650, 651, 652, 653, 655, 619, 656, 661,
	662, 1349, 657, 658, 659, 660, 1325, 664, 665, 666,
	667, 0, 668, 669, 1220, 663, 654, 0, 670, 671,
	672, 673, 674, 675, 0, 676, 677, 0, 678, 1314,
	1315, 1316, 1317, 0, 690, 0, 679, 681, 682, 683,
	684, 1326, 685, 1327, 1244, 686, 687, 688, 689, 680,
	691, 692, 0, 1227, 693, 694, 696, 698, 699, 695,
	697, 700, 1288, 701, 0, 0, 702, 703, 704, 767,
	1311, 1348, 0, 706, 705, 707, 708, 709, 770, 710,
	711, 712, 0, 0, 0, 0, 713, 714, 771, 715,
	716, 717, 1224, 0, 0, 0, 0, 1711, 0, 1266,
	1238, 1239, 1240, 1236, 1237, 1249, 0, 1219, 0, 0,
	0, 0, 0, 0, 1217, 1218, 308, 309, 311, 310,
	312, 313, 314, 315, 1250, 316, 317, 0, 1248, 0,
	0, 0, 1290, 1254, 0, 0, 318, 0, 319, 320,
	321, 1330, 322, 323, 324, 325, 326, 327, 328, 719,
	1303, 0, 329, 1310, 330, 1309, 0, 1320, 331, 332,
	333, 334, 335, 336, 337, 1256, 1289, 1221, 338, 1350,
	1351, 726, 0, 339, 340, 1296, 0, 1277, 0, 341,
	342, 343, 344, 345, 346, 347, 348, 0, 0, 350,
	351, 352, 349, 353, 0, 354, 0, 355, 356, 357,
	358, 359, 360, 361, 0, 362, 363, 364, 1331, 365,
	366, 367, 1280, 1278, 1279, 1286, 1282, 1281, 1285, 368,
	369, 370, 371, 372, 1313, 373, 375, 1307, 1306, 1226,
	378, 380, 374, 376, 0, 379, 377, 381, 0, 382,
	383, 384, 0, 0, 385, 1298, 387, 0, 388, 389,
	390, 0, 391, 392, 393, 0, 394, 395, 1232, 396,
	397, 398, 400, 402, 399, 401, 403, 404, 405, 406,
	407, 1321, 1322, 408, 1245, 305, 0, 0, 0, 0,
	0, 409, 410, 411, 1305, 0, 0, 0, 412, 0,
	413, 414, 415, 0, 416, 417, 0, 1332, 418, 419,
	420, 1318, 1319, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 0, 430, 1328, 0, 1255, 431, 0, 432,
	433, 434, 435, 436, 437, 438, 1710, 1292, 1295, 531,
	1334, 439, 440, 441, 0, 442, 443, 444, 445, 446,
	0, 0, 0, 306, 447, 448, 449, 0, 1333, 741,
	450, 532, 451, 1300, 1301, 0, 1261, 0, 452, 453,
	455, 1335, 1293, 1336, 454, 456, 457, 1337, 458, 0,
	0, 0, 459, 460, 461, 462, 463, 464, 0, 465,
	467, 466, 0, 469, 1329, 468, 1338, 470, 471, 1339,
	0, 472, 473, 474, 475, 476, 477, 480, 1284, 1283,
	478, 479, 481, 482, 0, 483, 484, 486, 489, 485,
	487, 488, 490, 503, 504, 491, 492, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 506, 0, 505,
	1340, 507, 508, 509, 510, 511, 518, 520, 521, 516,
	517, 519, 522, 523, 525, 513, 514, 515, 1341, 524,
	512, 1223, 307, 1342, 526, 527, 528, 529, 1246, 1294,
	530, 1308, 533, 534, 0, 0, 535, 0, 536, 0,
	0, 538, 539, 540, 0, 0, 541, 542, 749, 1343,
	543, 1344, 1323, 544, 545, 1233, 546, 547, 548, 549,
	550, 551, 552, 553, 554, 555, 0, 556, 557, 751,
	558, 559, 560, 752, 561, 562, 563, 1324, 564, 754,
	565, 566, 0, 567, 568, 569, 0, 570, 571, 572,
	573, 574, 575, 576, 577, 1304, 578, 579, 581, 580,
	582, 0, 583, 0, 584, 585, 586, 0, 0, 0,
	0, 0, 587, 588, 590, 0, 591, 592, 593, 594,
	589, 595, 596, 597, 598, 599, 600, 0, 602, 603,
	601, 604, 605, 1345, 606, 607, 608, 609, 610, 1234,
	611, 0, 612, 613, 620, 621, 622, 614, 615, 616,
	623, 624, 625, 626, 627, 629, 628, 0, 631, 632,
	630, 633, 634, 635, 1287, 636, 757, 637, 617, 618,
	638, 639, 1346, 640, 641, 642, 643, 644, 645, 646,
	1302, 0, 647, 0, 648, 649, 650, 651, 652, 653,
	655, 619, 656, 661, 662, 1349, 657, 658, 659, 660,
	1325, 664, 665, 666, 667, 0, 668, 669, 1220, 663,
	654, 0, 670, 671, 672, 673, 674, 675, 0, 676,
	677, 0, 678, 1314, 1315, 1316, 1317, 0, 690, 0,
	679, 681, 682, 683, 684, 1326, 685, 1327, 1244, 686,
	687, 688, 689, 680, 691, 692, 0, 1227, 693, 694,
	696, 698, 699, 695, 697, 700, 1288, 701, 0, 0,
	702, 703, 704, 767, 1311, 1348, 0, 706, 705, 707,
	708, 709, 770, 710, 711, 712, 0, 0, 0, 0,
	713, 714, 771, 715, 716, 717, 1224, 0, 0, 0,
	0, 1704, 0, 1266, 1238, 1239, 1240, 1236, 1237, 1249,
	0, 1219, 0, 0, 0, 0, 0, 0, 1217, 1218,
	308, 309, 311, 310, 312, 313, 314, 315, 1250, 316,
	317, 0, 1248, 0, 0, 0, 1290, 1254, 0, 0,
	318, 0, 319, 320, 321, 1330, 322, 323, 324, 325,
	326, 327, 328, 719, 1303, 0, 329, 1310, 330, 1309,
	0, 1320, 331, 332, 333, 334, 335, 336, 337, 1256,
	1289, 1221, 338, 1350, 1351, 726, 0, 339, 340, 1296,
	0, 1277, 0, 341, 342, 343, 344, 345, 346, 347,
	348, 0, 0, 350, 351, 352, 349, 353, 0, 354,
	0, 355, 356, 357, 358, 359, 360, 361, 0, 362,
	363, 364, 1331, 365, 366, 367, 1280, 1278, 1279, 1286,
	1282, 1281, 1285, 368, 369, 370, 371, 372, 1313, 373,
	375, 1307, 1306, 1226, 378, 380, 374, 376, 0, 379,
	377, 381, 0, 382, 383, 384, 0, 0, 385, 1298,
	387, 0, 388, 389, 390, 0, 391, 392, 393, 0,
	394, 395, 1232, 396, 397, 398, 400, 402, 399, 401,
	403, 404, 405, 406, 407, 1321, 1322, 408, 1245, 305,
	0, 0, 0, 0, 0, 409, 410, 411, 1305, 0,
	0, 0, 412, 0, 413, 414, 415, 0, 416, 417,
	0, 1332, 418, 419, 420, 1318, 1319, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 0, 430, 1328, 0,
	1255, 431, 0, 432, 433, 434, 435, 436, 437, 438,
	1291, 1292, 1295, 531, 1334, 439, 440, 441, 0, 442,
	443, 444, 445, 446, 0, 0, 0, 306, 447, 448,
	449, 0, 1333, 741, 450, 532, 451, 1300, 1301, 0,
	1261, 0, 452, 453, 455, 1335, 1293, 1336, 454, 456,
	457, 1337, 458, 0, 0, 0, 459, 460, 461, 462,
	463, 464, 0, 465, 467, 466, 0, 469, 1329, 468,
	1338, 470, 471, 1339, 0, 472, 473, 474, 475, 476,
	477, 480, 1284, 1283, 478, 479, 481, 482, 0, 483,
	484, 486, 489, 485, 487, 488, 490, 503, 504, 491,
	492, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 506, 0, 505, 1340, 507, 508, 509, 510, 511,
	518, 520, 521, 516, 517, 519, 522, 523, 525, 513,
	514, 515, 1341, 524, 512, 1223, 307, 1342, 526, 527,
	528, 529, 1246, 1294, 530, 1308, 533, 534, 0, 0,
	535, 0, 536, 0, 0, 538, 539, 540, 0, 0,
	541, 542, 749, 1343, 543, 1344, 1323, 544, 545, 1233,
	546, 547, 548, 549, 550, 551, 552, 553, 554, 555,
	0, 556, 557, 751, 558, 559, 560, 752, 561, 562,
	563, 1324, 564, 754, 565, 566, 0, 567, 568, 569,
	0, 570, 571, 572, 573, 574, 575, 576, 577, 1304,
	578, 579, 581, 580, 582, 0, 583, 0, 584, 585,
	586, 0, 0, 0, 0, 0, 587, 588, 590, 0,
	591, 592, 593, 594, 589, 595, 596, 597, 598, 599,
	600, 0, 602, 603, 601, 604, 605, 1345, 606, 607,
	608, 609, 610, 1234, 611, 0, 612, 613, 620, 621,
	622, 614, 615, 616, 623, 624, 625, 626, 627, 629,
	628, 0, 631, 632, 630, 633, 634, 635, 1287, 636,
	757, 637, 617, 618, 638, 639, 1346, 640, 641, 642,
	643, 644, 645, 646, 1302, 0, 647, 0, 648, 649,
	650, 651, 652, 653, 655, 619, 656, 661, 662, 1349,
	657, 658, 659, 660, 1325, 664, 665, 666, 667, 0,
	668, 669, 1220, 663, 654, 0, 670, 671, 672, 673,
	674, 675, 0, 676, 677, 0, 678, 1314, 1315, 1316,
	1317, 0, 690, 0, 679, 681, 682, 683, 684, 1326,
	685, 1327, 1244, 686, 687, 688, 689, 680, 691, 692,
	0, 1227, 693, 694, 696, 698, 699, 695, 697, 700,
	1288, 701, 0, 0, 702, 703, 704, 767, 1311, 1348,
	0, 706, 705, 707, 708, 709, 770, 710, 711, 712,
	0, 0, 0, 0, 713, 714, 771, 715, 716, 717,
	1224, 0, 0, 0, 0, 1667, 0, 1266, 1238, 1239,
	1240, 1236, 1237, 1249, 0, 1219, 0, 0, 0, 0,
	0, 0, 1217, 1218, 308, 309, 311, 310, 312, 313,
	314, 315, 1250, 316, 317, 0, 1248, 0, 0, 0,
	1290, 1254, 0, 0, 318, 0, 319, 320, 321, 1330,
	322, 323, 324, 325, 326, 327, 328, 719, 1303, 0,
	329, 1310, 330, 1309, 0, 1320, 331, 332, 333, 334,
	335, 336, 337, 1256, 1289, 1221, 338, 1350, 1351, 726,
	0, 339, 340, 1296, 0, 1277, 0, 341, 342, 343,
	344, 345, 346, 347, 348, 0, 0, 350, 351, 352,
	349, 353, 0, 354, 0, 355, 356, 357, 358, 359,
	360, 361, 0, 362, 363, 364, 1331, 365, 366, 367,
	1280, 1278, 1279, 1286, 1282, 1281, 1285, 368, 369, 370,
	371, 372, 1313, 373, 375, 1307, 1306, 1226, 378, 380,
	374, 376, 0, 379, 377, 381, 0, 382, 383, 384,
	0, 0, 385, 1298, 387, 0, 388, 389, 390, 0,
	391, 392, 393, 0, 394, 395, 1232, 396, 397, 398,
	400, 402, 399, 401, 403, 404, 405, 406, 407, 1321,
	1322, 408, 1245, 305, 0, 0, 0, 0, 0, 409,
	410, 411, 1305, 0, 0, 0, 412, 0, 413, 414,
	415, 0, 416, 417, 0, 1332, 418, 419, 420, 1318,
	1319, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	0, 430, 1328, 0, 1255, 431, 0, 432, 433, 434,
	435, 436, 437, 438, 1291, 1292, 1295, 531, 1334, 439,
	440, 441, 0, 442, 443, 444, 445, 446, 0, 0,
	0, 306, 447, 448, 449, 0, 1333, 741, 450, 532,
	451, 1300, 1301, 0, 1261, 0, 452, 453, 455, 1335,
	1293, 1336, 454, 456, 457, 1337, 458, 0, 0, 0,
	459, 460, 461, 462, 463, 464, 0, 465, 467, 466,
	0, 469, 1329, 468, 1338, 470, 471, 1339, 0, 472,
	473, 474, 475, 476, 477, 480, 1284, 1283, 478, 479,
	481, 482, 0, 483, 484, 486, 489, 485, 487, 488,
	490, 503, 504, 491, 492, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 506, 0, 505, 1340, 507,
	508, 509, 510, 511, 518, 520, 521, 516, 517, 519,
	522, 523, 525, 513, 514, 515, 1341, 524, 512, 1223,
	307, 1342, 526, 527, 528, 529, 1246, 1294, 530, 1308,
	533, 534, 0, 0, 535, 0, 536, 0, 0, 538,
	539, 540, 0, 0, 541, 542, 749, 1343, 543, 1344,
	1323, 544, 545, 1233, 546, 547, 548, 549, 550, 551,
	552, 553, 554, 555, 0, 556, 557, 751, 558, 559,
	560, 752, 561, 562, 563, 1324, 564, 754, 565, 566,
	0, 567, 568, 569, 0, 570, 571, 572, 573, 574,
	575, 576, 577, 1304, 578, 579, 581, 580, 582, 0,
	583, 0, 584, 585, 586, 0, 0, 0, 0, 0,
	587, 588, 590, 0, 591, 592, 593, 594, 589, 595,
	596, 597, 598, 599, 600, 0, 602, 603, 601, 604,
	605, 1345, 606, 607, 608, 609, 610, 1234, 611, 0,
	612, 613, 620, 621, 622, 614, 615, 616, 623, 624,
	625, 626, 627, 629, 628, 0, 631, 632, 630, 633,
	634, 635, 1287, 636, 757, 637, 617, 618, 638, 639,
	1346, 640, 641, 642, 643, 644, 645, 646, 1302, 0,
	647, 0, 648, 649, 650, 651, 652, 653, 655, 619,
	656, 661, 662, 1349, 657, 658, 659, 660, 1325, 664,
	665, 666, 667, 0, 668, 669, 1220, 663, 654, 0,
	670, 671, 672, 673, 674, 675, 0, 676, 677, 0,
	678, 1314, 1315, 1316, 1317, 0, 690, 0, 679, 681,
	682, 683, 684, 1326, 685, 1327, 1244, 686, 687, 688,
	689, 680, 691, 692, 0, 1227, 693, 694, 696, 698,
	699, 695, 697, 700, 1288, 701, 0, 0, 702, 703,
	704, 767, 1311, 1348, 0, 706, 705, 707, 708, 709,
	770, 710, 711, 712, 0, 0, 0, 0, 713, 714,
	771, 715, 716, 717, 1224, 0, 0, 0, 0, 1649,
	0, 1266, 1238, 1239, 1240, 1236, 1237, 1249, 0, 1219,
	0, 0, 0, 0, 0, 0, 1217, 1218, 308, 309,
	311, 310, 312, 313, 314, 315, 1250, 316, 317, 0,
	1248, 0, 0, 0, 1290, 1254, 0, 0, 318, 0,
	319, 320, 321, 1330, 322, 323, 324, 325, 326, 327,
	328, 719, 1303, 0, 329, 1310, 330, 1309, 0, 1320,
	331, 332, 333, 334, 335, 336, 337, 1256, 1289, 1221,
	338, 1350, 1351, 726, 0, 339, 340, 1296, 0, 1277,
	0, 341, 342, 343, 344, 345, 346, 347, 348, 0,
	0, 350, 351, 352, 349, 353, 0, 354, 0, 355,
	356, 357, 358, 359, 360, 361, 0, 362, 363, 364,
	1331, 365, 366, 367, 1280, 1278, 1279, 1286, 1282, 1281,
	1285, 368, 369, 370, 371, 372, 1313, 373, 375, 1307,
	1306, 1226, 378, 380, 374, 376, 0, 379, 377, 381,
	0, 382, 383, 384, 0, 0, 385, 1298, 387, 0,
	388, 389, 390, 0, 391, 392, 393, 0, 394, 395,
	1232, 396, 397, 398, 400, 402, 399, 1653, 403, 404,
	405, 406, 407, 1321, 1322, 408, 1245, 305, 0, 0,
	0, 0, 0, 409, 410, 411, 1305, 0, 0, 0,
	412, 0, 413, 414, 415, 0, 416, 417, 0, 1332,
	418, 419, 420, 1318, 1319, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 0, 430, 1328, 0, 1255, 431,
	0, 432, 433, 434, 435, 436, 437, 438, 1291, 1292,
	1295, 531, 1334, 439, 440, 441, 0, 442, 443, 444,
	445, 446, 0, 0, 0, 306, 447, 448, 449, 0,
	1333, 741, 450, 532, 451, 1300, 1301, 0, 1261, 0,
	452, 453, 455, 1335, 1293, 1336, 454, 456, 457, 1337,
	458, 0, 0, 0, 459, 460, 461, 462, 463, 464,
	0, 465, 467, 466, 0, 469, 1329, 468, 1338, 470,
	471, 1339, 0, 472, 473, 474, 475, 476, 477, 480,
	1284, 1283, 478, 479, 481, 482, 0, 483, 484, 486,
	489, 485, 487, 488, 490, 503, 504, 491, 492, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 506,
	0, 505, 1340, 507, 508, 509, 510, 511, 518, 520,
	521, 516, 517, 519, 522, 523, 525, 513, 514, 515,
	1341, 524, 512, 1223, 307, 1342, 526, 527, 528, 529,
	1246, 1294, 530, 1308, 533, 534, 0, 0, 535, 0,
	536, 0, 0, 538, 539, 540, 0, 0, 541, 542,
	749, 1343, 543, 1344, 1323, 544, 545, 1233, 546, 547,
	548, 549, 550, 551, 552, 553, 554, 555, 0, 556,
	557, 751, 558, 559, 560, 752, 561, 562, 563, 1324,
	564, 754, 565, 566, 0, 567, 568, 569, 0, 570,
	571, 572, 573, 574, 575, 576, 577, 1304, 578, 579,
	581, 580, 582, 0, 583, 0, 584, 585, 586, 0,
	0, 0, 0, 0, 587, 588, 1654, 0, 591, 592,
	593, 594, 589, 595, 596, 597, 598, 599, 600, 0,
	602, 603, 601, 604, 605, 1345, 606, 607, 608, 609,
	610, 1234, 611, 0, 612, 613, 620, 621, 622, 614,
	615, 616, 623, 624, 625, 626, 627, 629, 628, 0,
	631, 632, 630, 633, 634, 635, 1287, 636, 757, 637,
	617, 618, 638, 639, 1346, 640, 641, 642, 643, 644,
	645, 646, 1302, 0, 647, 0, 648, 649, 650, 651,
	652, 653, 655, 619, 656, 661, 662, 1349, 657, 658,
	659, 660, 1325, 664, 665, 666, 667, 0, 668, 669,
	1220, 663, 654, 0, 670, 671, 672, 673, 674, 675,
	0, 1652, 677, 0, 678, 1314, 1315, 1316, 1317, 0,
	690, 0, 679, 681, 682, 683, 684, 1326, 685, 1327,
	1244, 686, 687, 688, 689, 680, 691, 692, 0, 1227,
	693, 694, 696, 698, 699, 695, 697, 700, 1288, 701,
	0, 0, 702, 703, 704, 767, 1311, 1348, 0, 706,
	705, 707, 708, 709, 770, 710, 711, 712, 0, 0,
	0, 0, 713, 714, 771, 715, 716, 717, 1224, 0,
	0, 0, 0, 1479, 0, 1266, 1238, 1239, 1240, 1236,
	1237, 1249, 0, 1219, 0, 0, 0, 0, 0, 0,
	1217, 1218, 308, 309, 311, 310, 312, 313, 314, 315,
	1250, 316, 317, 0, 1248, 0, 0, 0, 1290, 1254,
	0, 0, 318, 0, 319, 320, 321, 1330, 322, 323,
	324, 325, 326, 327, 328, 719, 1303, 0, 329, 1310,
	330, 1309, 0, 1320, 331, 332, 333, 334, 335, 336,
	337, 1256, 1289, 1221, 338, 1350, 1351, 726, 0, 339,
	340, 1296, 0, 1277, 0, 341, 342, 343, 344, 345,
	346, 347, 348, 0, 0, 350, 351, 352, 349, 353,
	0, 354, 0, 355, 356, 357, 358, 359, 360, 361,
	0, 362, 363, 364, 1331, 365, 366, 367, 1280, 1278,
	1279, 1286, 1282, 1281, 1285, 368, 369, 370, 371, 372,
	1313, 373, 375, 1307, 1306, 1226, 378, 380, 374, 376,
	0, 379, 377, 381, 0, 382, 383, 384, 0, 0,
	385, 1298, 387, 0, 388, 389, 390, 0, 391, 392,
	393, 0, 394, 395, 1232, 396, 397, 398, 400, 402,
	399, 401, 403, 404, 405, 406, 407, 1321, 1322, 408,
	1245, 305, 0, 0, 0, 0, 0, 409, 410, 411,
	1305, 0, 0, 0, 412, 0, 413, 414, 415, 0,
	416, 417, 0, 1332, 418, 419, 420, 1318, 1319, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 0, 430,
	1328, 0, 1255, 431, 0, 432, 433, 434, 435, 436,
	437, 438, 1291, 1292, 1295, 531, 1334, 439, 440, 441,
	0, 442, 443, 444, 445, 446, 0, 0, 0, 306,
	447, 448, 449, 0, 1333, 741, 450, 532, 451, 1300,
	1301, 0, 1261, 0, 452, 453, 455, 1335, 1293, 1336,
	454, 456, 457, 1337, 458, 0, 0, 0, 459, 460,
	461, 462, 463, 464, 0, 465, 467, 466, 0, 469,
	1329, 468, 1338, 470, 471, 1339, 0, 472, 473, 474,
	475, 476, 477, 480, 1284, 1283, 478, 479, 481, 482,
	0, 483, 484, 486, 489, 485, 487, 488, 490, 503,
	504, 491, 492, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 506, 0, 505, 1340, 507, 508, 509,
	510, 511, 518, 520, 521, 516, 517, 519, 522, 523,
	525, 513, 514, 515, 1341, 524, 512, 1223, 307, 1342,
	526, 527, 528, 529, 1246, 1294, 530, 1308, 533, 534,
	0, 0, 535, 0, 536, 0, 0, 538, 539, 540,
	0, 0, 541, 542, 749, 1343, 543, 1344, 1323, 544,
	545, 1233, 546, 547, 548, 549, 550, 551, 552, 553,
	554, 555, 0, 556, 557, 751, 558, 559, 560, 752,
	561, 562, 563, 1324, 564, 754, 565, 566, 0, 567,
	568, 569, 0, 570, 571, 572, 573, 574, 575, 576,
	577, 1304, 578, 579, 581, 580, 582, 0, 583, 0,
	584, 585, 586, 0, 0, 0, 0, 0, 587, 588,
	590, 0, 591, 592, 593, 594, 589, 595, 596, 597,
	598, 599, 600, 0, 602, 603, 601, 604, 605, 1345,
	606, 607, 608, 609, 610, 1234, 611, 0, 612, 613,
	620, 621, 622, 614, 615, 616, 623, 624, 625, 626,
	627, 629, 628, 0, 631, 632, 630, 633, 634, 635,
	1287, 636, 757, 637, 617, 618, 638, 639, 1346, 640,
	641, 642, 643, 644, 645, 646, 1302, 0, 647, 0,
	648, 649, 650, 651, 652, 653, 655, 619, 656, 661,
	662, 1349, 657, 658, 659, 660, 1325, 664, 665, 666,
	667, 0, 668, 669, 1220, 663, 654, 0, 670, 671,
	672, 673, 674, 675, 0, 676, 677, 0, 678, 1314,
	1315, 1316, 1317, 0, 690, 0, 679, 681, 682, 683,
	684, 1326, 685, 1327, 1244, 686, 687, 688, 689, 680,
	691, 692, 0, 1227, 693, 694, 696, 698, 699, 695,
	697, 700, 1288, 701, 0, 0, 702, 703, 704, 767,
	1311, 1348, 0, 706, 705, 707, 708, 709, 770, 710,
	711, 712, 0, 0, 0, 0, 713, 714, 771, 715,
	716, 717, 1224, 0, 0, 0, 0, 0, 0, 1266,
	1238, 1239, 1240, 1236, 1237, 1249, 0, 1219, 0, 0,
	0, 0, 0, 0, 1217, 1218, 308, 309, 311, 310,
	312, 313, 314, 315, 1250, 316, 317, 0, 1248, 0,
	0, 0, 1290, 1254, 0, 0, 318, 0, 319, 320,
	321, 1330, 322, 323, 324, 325, 326, 327, 328, 719,
	1303, 0, 329, 1310, 330, 1309, 0, 1320, 331, 332,
	333, 334, 335, 336, 337, 1256, 1289, 1221, 338, 1350,
	1351, 726, 0, 339, 340, 1296, 0, 1277, 0, 341,
	342, 343, 344, 345, 346, 347, 348, 0, 0, 350,
	351, 352, 349, 353, 0, 354, 0, 355, 356, 357,
	358, 359, 360, 361, 0, 362, 363, 364, 1331, 365,
	366, 367, 1280, 1278, 1279, 1286, 1282, 1281, 1285, 368,
	369, 370, 371, 372, 1313, 373, 375, 1307, 1306, 1226,
	378, 380, 374, 376, 0, 379, 377, 381, 0, 382,
	383, 384, 0, 0, 385, 1298, 387, 0, 388, 389,
	390, 0, 391, 392, 393, 0, 394, 395, 1232, 396,
	397, 398, 400, 402, 399, 401, 403, 404, 405, 406,
	407, 1321, 1322, 408, 1245, 305, 0, 0, 0, 0,
	0, 409, 410, 411, 1305, 0, 0, 0, 412, 0,
	413, 414, 415, 0, 416, 417, 0, 1332, 418, 419,
	420, 1318, 1319, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 0, 430, 1328, 0, 1255, 431, 0, 432,
	433, 434, 435, 436, 437, 438, 1291, 1292, 1295, 531,
	1334, 439, 440, 441, 0, 442, 443, 444, 445, 446,
	0, 0, 0, 306, 447, 448, 449, 0, 1333, 741,
	450, 532, 451, 1300, 1301, 0, 1261, 0, 452, 453,
	455, 1335, 1293, 1336, 454, 456, 457, 1337, 458, 0,
	0, 0, 459, 460, 461, 462, 463, 464, 0, 465,
	467, 466, 0, 469, 1329, 468, 1338, 470, 471, 1339,
	0, 472, 473, 474, 475, 476, 477, 480, 1284, 1283,
	478, 479, 481, 482, 0, 483, 484, 486, 489, 485,
	487, 488, 490, 503, 504, 491, 492, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 506, 0, 505,
	1340, 507, 508, 509, 510, 511, 518, 520, 521, 516,
	517, 519, 522, 523, 525, 513, 514, 515, 1341, 524,
	512, 1223, 307, 1342, 526, 527, 528, 529, 1246, 1294,
	530, 1308, 533, 534, 0, 0, 535, 0, 536, 0,
	0, 538, 539, 540, 0, 0, 541, 542, 749, 1343,
	543, 1344, 1323, 544, 545, 1233, 546, 547, 548, 549,
	550, 551, 552, 553, 554, 555, 0, 556, 557, 751,
	558, 559, 560, 752, 561, 562, 563, 1324, 564, 754,
	565, 566, 0, 567, 568, 569, 0, 570, 571, 572,
	573, 574, 575, 576, 577, 1304, 578, 579, 581, 580,
	582, 0, 583, 0, 584, 585, 586, 0, 0, 0,
	0, 0, 587, 588, 590, 0, 591, 592, 593, 594,
	589, 595, 596, 597, 598, 599, 600, 0, 602, 603,
	601, 604, 605, 1345, 606, 607, 608, 609, 610, 1234,
	611, 0, 612, 613, 620, 621, 622, 614, 615, 616,
	623, 624, 625, 626, 627, 629, 628, 0, 631, 632,
	630, 633, 634, 635, 1287, 636, 757, 637, 617, 618,
	638, 639, 1346, 640, 641, 642, 643, 644, 645, 646,
	1302, 0, 647, 0, 648, 649, 650, 651, 652, 653,
	655, 619, 656, 661, 662, 1349, 657, 658, 659, 660,
	1325, 664, 665, 666, 667, 0, 668, 669, 1220, 663,
	654, 0, 670, 671, 672, 673, 674, 675, 0, 676,
	677, 0, 678, 1314, 1315, 1316, 1317, 0, 690, 0,
	679, 681, 682, 683, 684, 1326, 685, 1327, 1244, 686,
	687, 688, 689, 680, 691, 692, 0, 1227, 693, 694,
	696, 698, 699, 695, 697, 700, 1288, 701, 0, 0,
	702, 703, 704, 767, 1311, 1348, 0, 706, 705, 707,
	708, 709, 770, 710, 711, 712, 0, 0, 0, 0,
	713, 714, 771, 715, 716, 717, 1224, 0, 0, 0,
	0, 0, 0, 1266, 1238, 1239, 1240, 1236, 1237, 1249,
	0, 1219, 0, 0, 0, 0, 0, 0, 1217, 1218,
	308, 309, 311, 310, 312, 313, 314, 315, 1250, 316,
	317, 0, 1248, 0, 0, 0, 1290, 1254, 0, 0,
	318, 0, 319, 320, 321, 1330, 322, 323, 324, 325,
	326, 327, 328, 719, 1303, 0, 329, 1310, 330, 1309,
	0, 1320, 331, 332, 333, 334, 335, 336, 337, 1256,
	1289, 1221, 338, 1350, 1351, 726, 0, 339, 340, 1296,
	0, 1277, 0, 341, 342, 343, 344, 345, 346, 347,
	348, 0, 0, 350, 351, 352, 349, 353, 0, 354,
	0, 355, 356, 357, 358, 359, 360, 361, 0, 362,
	363, 364, 1331, 365, 366, 5287, 1280, 1278, 1279, 1286,
	1282, 1281, 1285, 368, 369, 370, 371, 372, 1313, 373,
	375, 1307, 1306, 1226, 378, 380, 374, 376, 0, 379,
	377, 381, 0, 382, 383, 384, 0, 0, 385, 1298,
	387, 0, 388, 389, 390, 0, 391, 392, 393, 0,
	394, 395, 1232, 396, 397, 398, 400, 402, 399, 401,
	403, 404, 405, 406, 407, 1321, 1322, 408, 1245, 305,
	0, 0, 0, 0, 0, 409, 410, 411, 1305, 0,
	0, 0, 412, 0, 413, 414, 415, 0, 416, 417,
	0, 1332, 418, 419, 420, 1318, 1319, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 0, 430, 1328, 0,
	1255, 431, 0, 432, 433, 434, 435, 436, 437, 438,
	1291, 1292, 1295, 531, 1334, 439, 440, 441, 0, 442,
	443, 444, 445, 446, 0, 0, 0, 306, 447, 448,
	449, 0, 1333, 741, 450, 532, 451, 1300, 1301, 0,
	1261, 0, 452, 453, 455, 1335, 1293, 1336, 454, 456,
	457, 1337, 458, 0, 0, 0, 459, 460, 461, 462,
	463, 464, 0, 465, 467, 466, 0, 469, 1329, 468,
	1338, 470, 471, 1339, 0, 472, 473, 474, 475, 476,
	477, 480, 1284, 1283, 478, 479, 481, 482, 0, 483,
	484, 486, 489, 485, 487, 488, 490, 503, 504, 491,
	492, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 506, 0, 505, 1340, 507, 508, 509, 510, 511,
	518, 520, 521, 516, 517, 519, 522, 523, 525, 513,
	514, 515, 1341, 524, 512, 1223, 307, 1342, 526, 527,
	528, 529, 1246, 1294, 530, 1308, 533, 534, 0, 0,
	535, 0, 536, 0, 0, 538, 539, 540, 0, 0,
	541, 542, 749, 1343, 543, 1344, 1323, 544, 545, 1233,
	546, 547, 548, 549, 550, 551, 552, 553, 554, 555,
	0, 556, 557, 751, 558, 559, 560, 752, 561, 562,
	563, 1324, 564, 754, 565, 566, 0, 567, 568, 569,
	0, 570, 571, 572, 573, 574, 575, 576, 577, 1304,
	578, 579, 581, 580, 582, 0, 583, 0, 584, 585,
	586, 0, 0, 0, 0, 0, 587, 588, 590, 0,
	591, 592, 593, 594, 589, 595, 596, 597, 598, 599,
	600, 0, 602, 603, 601, 604, 605, 1345, 606, 607,
	608, 609, 610, 1234, 611, 0, 612, 613, 620, 621,
	622, 614, 615, 616, 623, 624, 625, 626, 627, 629,
	628, 0, 631, 632, 630, 633, 634, 635, 1287, 636,
	757, 637, 617, 618, 638, 639, 1346, 640, 641, 642,
	643, 644, 645, 646, 1302, 0, 647, 0, 648, 649,
	650, 651, 652, 653, 655, 619, 656, 661, 662, 1349,
	657, 658, 659, 660, 1325, 664, 665, 666, 667, 0,
	668, 669, 1220, 663, 654, 0, 670, 671, 672, 673,
	674, 675, 0, 676, 677, 0, 678, 1314, 1315, 1316,
	1317, 0, 690, 0, 679, 681, 682, 683, 684, 1326,
	685, 1327, 1244, 686, 687, 688, 689, 680, 5286, 692,
	0, 1227, 693, 694, 696, 698, 699, 695, 697, 700,
	1288, 701, 0, 0, 702, 703, 704, 767, 1311, 1348,
	0, 706, 705, 707, 708, 709, 770, 710, 711, 712,
	0, 0, 0, 0, 713, 714, 771, 715, 716, 717,
	1224, 0, 0, 0, 0, 0, 0, 1266, 1238, 1239,
	1240, 1236, 1237, 1249, 0, 1219, 0, 0, 0, 0,
	0, 0, 1217, 1218, 308, 309, 311, 310, 312, 313,
	314, 315, 1250, 316, 317, 0, 1248, 0, 0, 0,
	1290, 1254, 0, 0, 318, 0, 319, 320, 321, 1330,
	322, 323, 324, 325, 326, 327, 328, 5285, 1303, 0,
	329, 1310, 330, 1309, 0, 1320, 331, 332, 333, 334,
	335, 336, 337, 1256, 1289, 1221, 338, 1350, 1351, 726,
	0, 339, 340, 1296, 0, 1277, 0, 341, 342, 343,
	344, 345, 346, 347, 348, 0, 0, 350, 351, 352,
	349, 353, 0, 354, 0, 355, 356, 357, 358, 359,
	360, 361, 0, 362, 363, 364, 1331, 365, 366, 5287,
	1280, 1278, 1279, 1286, 1282, 1281, 1285, 368, 369, 370,
	371, 372, 1313, 373, 375, 1307, 1306, 1226, 378, 380,
	374, 376, 0, 379, 377, 381, 0, 382, 383, 384,
	0, 0, 385, 1298, 387, 0, 388, 389, 390, 0,
	391, 392, 393, 0, 394, 395, 1232, 396, 397, 398,
	400, 402, 399, 401, 403, 404, 405, 406, 407, 1321,
	1322, 408, 1245, 305, 0, 0, 0, 0, 0, 409,
	410, 411, 1305, 0, 0, 0, 412, 0, 413, 414,
	415, 0, 416, 417, 0, 1332, 418, 419, 420, 1318,
	1319, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	0, 430, 1328, 0, 1255, 431, 0, 432, 433, 434,
	435, 436, 437, 438, 1291, 1292, 1295, 531, 1334, 439,
	440, 441, 0, 442, 443, 444, 445, 446, 0, 0,
	0, 306, 447, 448, 449, 0, 1333, 741, 450, 532,
	451, 1300, 1301, 0, 1261, 0, 452, 453, 455, 1335,
	1293, 1336, 454, 456, 457, 1337, 458, 0, 0, 0,
	459, 460, 461, 462, 463, 464, 0, 465, 467, 466,
	0, 469, 1329, 468, 1338, 470, 471, 1339, 0, 472,
	473, 474, 475, 476, 477, 480, 1284, 1283, 478, 479,
	481, 482, 0, 483, 484, 486, 489, 485, 487, 488,
	490, 503, 504, 491, 492, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 506, 0, 505, 1340, 507,
	508, 509, 510, 511, 518, 520, 521, 516, 517, 519,
	522, 523, 525, 513, 514, 515, 1341, 524, 512, 1223,
	307, 1342, 526, 527, 528, 529, 1246, 1294, 530, 1308,
	533, 534, 0, 0, 535, 0, 536, 0, 0, 538,
	539, 540, 0, 0, 541, 542, 749, 1343, 543, 1344,
	1323, 544, 545, 1233, 546, 547, 548, 549, 550, 551,
	552, 553, 554, 555, 0, 556, 557, 751, 558, 559,
	560, 752, 561, 562, 563, 1324, 564, 754, 565, 566,
	0, 567, 568, 569, 0, 570, 571, 572, 573, 574,
	575, 576, 577, 1304, 578, 579, 581, 580, 582, 0,
	583, 0, 584, 585, 586, 0, 0, 0, 0, 0,
	587, 588, 590, 0, 591, 592, 593, 594, 589, 595,
	596, 597, 598, 599, 600, 0, 602, 603, 601, 604,
	605, 1345, 606, 607, 608, 609, 610, 1234, 611, 0,
	612, 613, 620, 621, 622, 614, 615, 616, 623, 624,
	625, 626, 627, 629, 628, 0, 631, 632, 630, 633,
	634, 635, 1287, 636, 757, 637, 617, 618, 638, 639,
	1346, 640, 641, 642, 643, 644, 645, 646, 1302, 0,
	647, 0, 648, 649, 650, 651, 652, 653, 655, 619,
	656, 661, 662, 1349, 657, 658, 659, 660, 1325, 664,
	665, 666, 667, 0, 668, 669, 1220, 663, 654, 0,
	670, 671, 672, 673, 674, 675, 0, 676, 677, 0,
	678, 1314, 1315, 1316, 1317, 0, 690, 0, 679, 681,
	682, 683, 684, 1326, 685, 1327, 1244, 686, 687, 688,
	689, 680, 5286, 692, 0, 1227, 693, 694, 696, 698,
	699, 695, 697, 700, 1288, 701, 0, 0, 702, 703,
	704, 767, 1311, 1348, 0, 706, 705, 707, 708, 709,
	770, 710, 711, 712, 0, 0, 0, 0, 713, 714,
	771, 715, 716, 717, 1224, 0, 0, 0, 0, 0,
	0, 1266, 1238, 1239, 1240, 1236, 1237, 1249, 0, 1219,
	0, 0, 0, 0, 0, 0, 1217, 1218, 308, 309,
	311, 310, 312, 313, 314, 315, 1250, 316, 317, 0,
	1248, 0, 0, 0, 1290, 1254, 0, 0, 318, 0,
	319, 320, 321, 1330, 322, 323, 324, 325, 326, 327,
	328, 719, 1303, 0, 329, 1310, 330, 1309, 0, 1320,
	331, 332, 333, 334, 335, 336, 337, 1256, 1289, 1221,
	338, 1350, 1351, 726, 0, 339, 340, 1296, 0, 1277,
	0, 341, 342, 343, 344, 345, 346, 347, 348, 0,
	0, 350, 351, 352, 349, 353, 0, 354, 0, 355,
	356, 357, 358, 359, 360, 361, 0, 362, 363, 364,
	1331, 365, 4851, 367, 1280, 1278, 1279, 1286, 1282, 1281,
	1285, 368, 369, 370, 371, 372, 1313, 373, 375, 1307,
	1306, 1226, 378, 380, 374, 376, 0, 379, 377, 381,
	0, 382, 383, 384, 0, 0, 385, 1298, 387, 0,
	388, 389, 390, 0, 391, 392, 393, 0, 394, 395,
	1232, 396, 397, 398, 400, 402, 399, 401, 403, 404,
	405, 406, 407, 1321, 1322, 408, 1245, 305, 0, 0,
	0, 0, 0, 409, 410, 411, 1305, 0, 0, 0,
	412, 0, 413, 414, 415, 0, 416, 417, 0, 1332,
	418, 419, 420, 1318, 1319, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 0, 430, 1328, 0, 4852, 431,
	0, 432, 433, 434, 435, 436, 437, 438, 1291, 1292,
	1295, 531, 1334, 439, 440, 441, 0, 442, 443, 444,
	445, 446, 0, 0, 0, 306, 447, 448, 449, 0,
	1333, 741, 450, 532, 451, 1300, 1301, 0, 1261, 0,
	452, 453, 455, 1335, 1293, 1336, 454, 456, 457, 1337,
	458, 0, 0, 0, 459, 460, 461, 462, 463, 464,
	0, 465, 467, 466, 0, 469, 1329, 468, 1338, 470,
	471, 1339, 0, 472, 473, 474, 475, 476, 477, 480,
	1284, 1283, 478, 479, 481, 482, 0, 483, 484, 486,
	489, 485, 487, 488, 490, 503, 504, 491, 492, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 506,
	0, 505, 1340, 507, 508, 509, 510, 511, 518, 520,
	521, 516, 517, 519, 522, 523, 525, 513, 514, 515,
	1341, 524, 512, 1223, 307, 1342, 526, 527, 528, 529,
	1246, 1294, 530, 1308, 533, 534, 0, 0, 535, 0,
	536, 0, 0, 538, 539, 540, 0, 0, 541, 542,
	749, 1343, 543, 1344, 1323, 544, 545, 1233, 546, 547,
	548, 549, 550, 551, 552, 553, 554, 555, 0, 556,
	557, 751, 558, 559, 560, 752, 561, 562, 563, 1324,
	564, 754, 565, 566, 0, 567, 568, 569, 0, 570,
	571, 572, 573, 574, 575, 576, 577, 1304, 578, 579,
	581, 580, 582, 0, 583, 0, 584, 585, 586, 0,
	0, 0, 0, 0, 587, 588, 590, 0, 591, 592,
	593, 594, 589, 595, 596, 597, 598, 599, 600, 0,
	602, 603, 601, 604, 605, 1345, 606, 607, 608, 4850,
	610, 1234, 611, 0, 612, 613, 620, 621, 622, 614,
	615, 616, 623, 624, 625, 626, 627, 629, 628, 0,
	631, 632, 630, 633, 634, 635, 1287, 636, 757, 637,
	617, 618, 638, 639, 1346, 640, 641, 642, 643, 644,
	645, 646, 1302, 0, 647, 0, 648, 649, 650, 651,
	652, 653, 655, 619, 656, 661, 662, 1349, 657, 658,
	659, 660, 1325, 664, 665, 666, 667, 0, 668, 669,
	1220, 663, 654, 0, 670, 671, 672, 673, 674, 675,
	0, 676, 677, 0, 678, 1314, 1315, 1316, 1317, 0,
	690, 0, 679, 681, 682, 683, 684, 1326, 685, 1327,
	1244, 686, 687, 688, 689, 680, 691, 692, 0, 1227,
	693, 694, 696, 698, 699, 695, 697, 700, 1288, 701,
	0, 0, 702, 703, 704, 767, 1311, 1348, 0, 706,
	705, 707, 708, 709, 770, 710, 711, 712, 0, 0,
	0, 0, 713, 714, 771, 715, 716, 717, 1224, 0,
	0, 0, 0, 0, 0, 1266, 1238, 1239, 1240, 3518,
	3519, 1249, 0, 1219, 0, 0, 0, 0, 0, 0,
	1217, 1218, 308, 309, 311, 310, 312, 313, 314, 315,
	1250, 316, 317, 0, 1248, 0, 0, 0, 1290, 1254,
	0, 0, 318, 0, 319, 320, 321, 1330, 322, 323,
	324, 325, 326, 327, 328, 719, 1303, 0, 329, 1310,
	330, 1309, 0, 1320, 331, 332, 333, 334, 335, 336,
	337, 1256, 1289, 1221, 338, 1350, 1351, 726, 0, 339,
	340, 1296, 0, 1277, 0, 341, 342, 343, 344, 345,
	346, 347, 348, 0, 0, 350, 351, 352, 349, 353,
	0, 354, 0, 355, 356, 357, 358, 359, 360, 361,
	0, 362, 363, 364, 1331, 365, 366, 367, 1280, 1278,
	1279, 1286, 1282, 1281, 1285, 368, 369, 370, 371, 372,
	1313, 373, 375, 1307, 1306, 1226, 378, 380, 374, 376,
	0, 379, 377, 381, 0, 382, 383, 384, 0, 0,
	385, 1298, 387, 0, 388, 389, 390, 0, 391, 392,
	393, 0, 394, 395, 1232, 396, 397, 398, 400, 402,
	399, 401, 403, 404, 405, 406, 407, 1321, 1322, 408,
	1245, 305, 0, 0, 0, 0, 0, 409, 410, 411,
	1305, 0, 0, 0, 412, 0, 413, 414, 415, 0,
	416, 417, 0, 1332, 418, 419, 420, 1318, 1319, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 0, 430,
	1328, 0, 1255, 431, 0, 432, 433, 434, 435, 436,
	437, 438, 1291, 1292, 1295, 531, 1334, 439, 440, 441,
	0, 442, 443, 444, 445, 446, 0, 0, 0, 306,
	447, 448, 449, 0, 1333, 741, 450, 532, 451, 1300,
	1301, 0, 1261, 0, 452, 453, 455, 1335, 1293, 1336,
	454, 456, 457, 1337, 458, 0, 0, 0, 459, 460,
	461, 462, 463, 464, 0, 465, 467, 466, 0, 469,
	1329, 468, 1338, 470, 471, 1339, 0, 472, 473, 474,
	475, 476, 477, 480, 1284, 1283, 478, 479, 481, 482,
	0, 483, 484, 486, 489, 485, 487, 488, 490, 503,
	504, 491, 492, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 506, 0, 505, 1340, 507, 508, 509,
	510, 511, 518, 520, 521, 516, 517, 519, 522, 523,
	525, 513, 514, 515, 1341, 524, 512, 1223, 307, 1342,
	526, 527, 528, 529, 1246, 1294, 530, 1308, 533, 534,
	0, 0, 535, 0, 536, 0, 0, 538, 539, 540,
	0, 0, 541, 542, 749, 1343, 543, 1344, 1323, 544,
	545, 1233, 546, 547, 548, 549, 550, 551, 552, 553,
	554, 555, 0, 556, 557, 751, 558, 559, 560, 752,
	561, 562, 563, 1324, 564, 754, 565, 566, 0, 567,
	568, 569, 0, 570, 571, 572, 573, 574, 575, 576,
	577, 1304, 578, 579, 581, 580, 582, 0, 583, 0,
	584, 585, 586, 0, 0, 0, 0, 0, 587, 588,
	590, 0, 591, 592, 593, 594, 589, 595, 596, 597,
	598, 599, 600, 0, 602, 603, 601, 604, 605, 1345,
	606, 607, 608, 609, 610, 1234, 611, 0, 612, 613,
	620, 621, 622, 614, 615, 616, 623, 624, 625, 626,
	627, 629, 628, 0, 631, 632, 630, 633, 634, 635,
	1287, 636, 757, 637, 617, 618, 638, 639, 1346, 640,
	641, 642, 643, 644, 645, 646, 1302, 0, 647, 0,
	648, 649, 650, 651, 652, 653, 655, 619, 656, 661,
	662, 1349, 657, 658, 659, 660, 1325, 664, 665, 666,
	667, 0, 668, 669, 1220, 663, 654, 0, 670, 671,
	672, 673, 674, 675, 0, 676, 677, 0, 678, 1314,
	1315, 1316, 1317, 0, 690, 0, 679, 681, 682, 683,
	684, 1326, 685, 1327, 1244, 686, 687, 688, 689, 680,
	691, 692, 0, 1227, 693, 694, 696, 698, 699, 695,
	697, 700, 1288, 701, 0, 0, 702, 703, 704, 767,
	1311, 1348, 0, 706, 705, 707, 708, 709, 770, 710,
	711, 712, 0, 0, 0, 0, 713, 714, 771, 715,
	716, 717, 1224, 0, 0, 0, 0, 0, 0, 1266,
	1238, 1239, 1240, 3516, 3517, 1249, 0, 1219, 0, 0,
	0, 0, 0, 0, 1217, 1218, 308, 309, 311, 310,
	312, 313, 314, 315, 1250, 316, 317, 0, 1248, 0,
	0, 0, 1290, 1254, 0, 0, 318, 0, 319, 320,
	321, 1330, 322, 323, 324, 325, 326, 327, 328, 719,
	1303, 0, 329, 1310, 330, 1309, 0, 1320, 331, 332,
	333, 334, 335, 336, 337, 1256, 1289, 1221, 338, 1350,
	1351, 726, 0, 339, 340, 1296, 0, 1277, 0, 341,
	342, 343, 344, 345, 346, 347, 348, 0, 0, 350,
	351, 352, 349, 353, 0, 354, 0, 355, 356, 357,
	358, 359, 360, 361, 0, 362, 363, 364, 1331, 365,
	366, 367, 1280, 1278, 1279, 1286, 1282, 1281, 1285, 368,
	369, 370, 371, 372, 1313, 373, 375, 1307, 1306, 1226,
	378, 380, 374, 376, 0, 379, 377, 381, 0, 382,
	383, 384, 0, 0, 385, 1298, 387, 0, 388, 389,
	390, 0, 391, 392, 393, 0, 394, 395, 1232, 396,
	397, 398, 400, 402, 399, 401, 403, 404, 405, 406,
	407, 1321, 1322, 408, 1245, 305, 0, 0, 0, 0,
	0, 409, 410, 411, 1305, 0, 0, 0, 412, 0,
	413, 414, 415, 0, 416, 417, 0, 1332, 418, 419,
	420, 1318, 1319, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 0, 430, 1328, 0, 1255, 431, 0, 432,
	433, 434, 435, 436, 437, 438, 1291, 1292, 1295, 531,
	1334, 439, 440, 441, 0, 442, 443, 444, 445, 446,
	0, 0, 0, 306, 447, 448, 449, 0, 1333, 741,
	450, 532, 451, 1300, 1301, 0, 1261, 0, 452, 453,
	455, 1335, 1293, 1336, 454, 456, 457, 1337, 458, 0,
	0, 0, 459, 460, 461, 462, 463, 464, 0, 465,
	467, 466, 0, 469, 1329, 468, 1338, 470, 471, 1339,
	0, 472, 473, 474, 475, 476, 477, 480, 1284, 1283,
	478, 479, 481, 482, 0, 483, 484, 486, 489, 485,
	487, 488, 490, 503, 504, 491, 492, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 506, 0, 505,
	1340, 507, 508, 509, 510, 511, 518, 520, 521, 516,
	517, 519, 522, 523, 525, 513, 514, 515, 1341, 524,
	512, 1223, 307, 1342, 526, 527, 528, 529, 1246, 1294,
	530, 1308, 533, 534, 0, 0, 535, 0, 536, 0,
	0, 538, 539, 540, 0, 0, 541, 542, 749, 1343,
	543, 1344, 1323, 544, 545, 1233, 546, 547, 548, 549,
	550, 551, 552, 553, 554, 555, 0, 556, 557, 751,
	558, 559, 560, 752, 561, 562, 563, 1324, 564, 754,
	565, 566, 0, 567, 568, 569, 0, 570, 571, 572,
	573, 574, 575, 576, 577, 1304, 578, 579, 581, 580,
	582, 0, 583, 0, 584, 585, 586, 0, 0, 0,
	0, 0, 587, 588, 590, 0, 591, 592, 593, 594,
	589, 595, 596, 597, 598, 599, 600, 0, 602, 603,
	601, 604, 605, 1345, 606, 607, 608, 609, 610, 1234,
	611, 0, 612, 613, 620, 621, 622, 614, 615, 616,
	623, 624, 625, 626, 627, 629, 628, 0, 631, 632,
	630, 633, 634, 635, 1287, 636, 757, 637, 617, 618,
	638, 639, 1346, 640, 641, 642, 643, 644, 645, 646,
	1302, 0, 647, 0, 648, 649, 650, 651, 652, 653,
	655, 619, 656, 661, 662, 1349, 657, 658, 659, 660,
	1325, 664, 665, 666, 667, 0, 668, 669, 1220, 663,
	654, 0, 670, 671, 672, 673, 674, 675, 0, 676,
	677, 0, 678, 1314, 1315, 1316, 1317, 0, 690, 0,
	679, 681, 682, 683, 684, 1326, 685, 1327, 1244, 686,
	687, 688, 689, 680, 691, 692, 0, 1227, 693, 694,
	696, 698, 699, 695, 697, 700, 1288, 701, 0, 0,
	702, 703, 704, 767, 1311, 1348, 0, 706, 705, 707,
	708, 709, 770, 710, 711, 712, 0, 0, 0, 0,
	713, 714, 771, 715, 716, 717, 1224, 0, 0, 0,
	0, 0, 0, 1266, 1238, 1239, 1240, 1236, 1237, 1249,
	0, 1219, 0, 0, 0, 0, 0, 0, 1217, 1218,
	308, 309, 311, 310, 312, 313, 314, 315, 1250, 316,
	317, 0, 1248, 0, 0, 0, 1290, 1254, 0, 0,
	318, 0, 319, 320, 321, 1330, 322, 323, 324, 325,
	326, 327, 328, 719, 1303, 0, 329, 1310, 330, 1309,
	0, 1320, 331, 332, 333, 334, 335, 336, 337, 1256,
	1289, 1221, 338, 1350, 1351, 726, 0, 339, 340, 1296,
	0, 1277, 0, 341, 342, 343, 344, 345, 346, 347,
	348, 0, 0, 350, 351, 352, 349, 353, 0, 354,
	0, 355, 356, 357, 358, 359, 360, 361, 0, 362,
	363, 364, 1331, 365, 366, 367, 1280, 1278, 1279, 1286,
	1282, 1281, 1285, 368, 369, 370, 371, 372, 1313, 373,
	375, 1307, 1306, 1226, 378, 380, 374, 376, 0, 379,
	377, 381, 0, 382, 383, 384, 0, 0, 385, 1298,
	387, 0, 388, 389, 390, 0, 391, 392, 393, 0,
	394, 395, 1232, 396, 397, 398, 400, 402, 399, 401,
	403, 404, 405, 406, 407, 1321, 1322, 408, 1245, 305,
	0, 0, 0, 0, 0, 409, 410, 411, 1305, 0,
	0, 0, 412, 0, 413, 414, 415, 0, 416, 417,
	0, 1332, 418, 419, 420, 1318, 1319, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 0, 430, 1328, 0,
	1255, 431, 0, 432, 433, 434, 435, 436, 437, 438,
	1291, 1292, 1295, 531, 1334, 439, 440, 441, 0, 442,
	443, 444, 445, 446, 0, 0, 0, 306, 447, 448,
	449, 0, 1333, 741, 450, 532, 451, 1300, 1301, 0,
	1261, 0, 452, 453, 455, 1335, 1293, 1336, 454, 456,
	457, 1337, 458, 0, 0, 0, 459, 460, 461, 462,
	463, 464, 0, 465, 467, 466, 0, 469, 1329, 468,
	1338, 470, 471, 1339, 0, 472, 473, 474, 475, 476,
	477, 480, 1284, 1283, 478, 479, 481, 482, 0, 483,
	484, 486, 489, 485, 487, 488, 490, 503, 504, 491,
	492, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 506, 0, 505, 1340, 507, 508, 509, 510, 511,
	518, 520, 521, 516, 517, 519, 522, 523, 525, 513,
	514, 515, 1341, 524, 512, 1223, 307, 1342, 526, 527,
	528, 529, 1246, 1294, 530, 1308, 533, 534, 0, 0,
	535, 0, 536, 0, 0, 538, 539, 540, 0, 0,
	541, 542, 749, 1343, 543, 1344, 1323, 544, 545, 1233,
	546, 547, 548, 549, 550, 551, 552, 553, 554, 555,
	0, 556, 557, 751, 558, 559, 560, 752, 561, 562,
	563, 1324, 564, 754, 565, 566, 0, 567, 568, 569,
	0, 570, 571, 572, 573, 574, 575, 576, 577, 1304,
	578, 579, 581, 580, 582, 0, 583, 0, 584, 585,
	586, 0, 0, 0, 0, 0, 587, 588, 590, 0,
	591, 592, 593, 594, 589, 595, 596, 597, 598, 599,
	600, 0, 602, 603, 601, 604, 605, 1345, 606, 607,
	608, 609, 610, 1234, 611, 0, 612, 613, 620, 621,
	622, 614, 615, 616, 623, 624, 625, 626, 627, 629,
	628, 0, 631, 632, 630, 633, 634, 635, 1287, 636,
	757, 637, 617, 618, 638, 639, 1346, 640, 641, 642,
	643, 644, 645, 646, 1302, 0, 647, 0, 648, 649,
	650, 651, 652, 653, 655, 619, 656, 661, 662, 1349,
	657, 658, 659, 660, 1325, 664, 665, 666, 667, 0,
	668, 669, 1220, 663, 654, 0, 670, 671, 672, 673,
	674, 675, 0, 676, 677, 0, 678, 1314, 1315, 1316,
	1317, 0, 690, 0, 679, 681, 682, 683, 684, 1326,
	685, 1327, 1244, 686, 687, 688, 689, 680, 691, 692,
	0, 1227, 693, 694, 696, 698, 699, 695, 697, 700,
	1288, 701, 0, 0, 702, 703, 704, 767, 1311, 1348,
	0, 706, 705, 707, 708, 709, 770, 710, 711, 712,
	0, 0, 0, 0, 713, 714, 771, 715, 716, 717,
	1224, 0, 0, 0, 0, 0, 0, 1266, 1238, 1239,
	1240, 1236, 1237, 1249, 0, 1219, 0, 0, 0, 0,
	0, 0, 2713, 2714, 308, 309, 311, 310, 312, 313,
	314, 315, 1250, 316, 317, 0, 1248, 0, 0, 0,
	1290, 1254, 0, 0, 318, 0, 319, 320, 321, 1330,
	322, 323, 324, 325, 326, 327, 328, 719, 1303, 0,
	329, 1310, 330, 1309, 0, 1320, 331, 332, 333, 334,
	335, 336, 337, 1256, 1289, 0, 338, 1350, 1351, 726,
	0, 339, 340, 1296, 0, 1277, 0, 341, 342, 343,
	344, 345, 346, 347, 348, 0, 0, 350, 351, 352,
	349, 353, 0, 354, 0, 355, 356, 357, 358, 359,
	360, 361, 0, 362, 363, 364, 1331, 365, 366, 367,
	1280, 1278, 1279, 1286, 1282, 1281, 1285, 368, 369, 370,
	371, 372, 1313, 373, 375, 1307, 1306, 0, 378, 380,
	374, 376, 0, 379, 377, 381, 0, 382, 383, 384,
	0, 0, 385, 1298, 387, 0, 388, 389, 390, 0,
	391, 392, 393, 0, 394, 395, 1232, 396, 397, 398,
	400, 402, 399, 401, 403, 404, 405, 406, 407, 1321,
	1322, 408, 1245, 305, 0, 0, 0, 0, 0, 409,
	410, 411, 1305, 0, 0, 0, 412, 0, 413, 414,
	415, 0, 416, 417, 0, 1332, 418, 419, 420, 1318,
	1319, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	0, 430, 1328, 0, 1255, 431, 0, 432, 433, 434,
	435, 436, 437, 438, 1291, 1292, 1295, 531, 1334, 439,
	440, 441, 0, 442, 443, 444, 445, 446, 0, 0,
	0, 306, 447, 448, 449, 0, 1333, 741, 450, 532,
	451, 1300, 1301, 0, 1261, 0, 452, 453, 455, 1335,
	1293, 1336, 454, 456, 457, 1337, 458, 0, 0, 0,
	459, 460, 461, 462, 463, 464, 0, 465, 467, 466,
	0, 469, 1329, 468, 1338, 470, 471, 1339, 0, 472,
	473, 474, 475, 476, 477, 480, 1284, 1283, 478, 479,
	481, 482, 0, 483, 484, 486, 489, 485, 487, 488,
	490, 503, 504, 491, 492, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 506, 0, 505, 1340, 507,
	508, 509, 510, 511, 518, 520, 521, 516, 517, 519,
	522, 523, 525, 513, 514, 515, 1341, 524, 512, 0,
	307, 1342, 526, 527, 528, 529, 1246, 1294, 530, 1308,
	533, 534, 0, 0, 535, 0, 536, 0, 0, 538,
	539, 540, 0, 0, 541, 542, 749, 1343, 543, 1344,
	1323, 544, 545, 1233, 546, 547, 548, 549, 550, 551,
	552, 553, 554, 555, 0, 556, 557, 751, 558, 559,
	560, 752, 561, 562, 563, 1324, 564, 754, 565, 566,
	0, 567, 568, 569, 0, 570, 571, 572, 573, 574,
	575, 576, 577, 1304, 578, 579, 581, 580, 582, 0,
	583, 0, 584, 585, 586, 0, 0, 0, 0, 0,
	587, 588, 590, 0, 591, 592, 593, 594, 589, 595,
	596, 597, 598, 599, 600, 0, 602, 603, 601, 604,
	605, 1345, 606, 607, 608, 609, 610, 1234, 611, 0,
	612, 613, 620, 621, 622, 614, 615, 616, 623, 624,
	625, 626, 627, 629, 628, 0, 631, 632, 630, 633,
	634, 635, 1287, 636, 757, 637, 617, 618, 638, 639,
	1346, 640, 641, 642, 643, 644, 645, 646, 1302, 0,
	647, 0, 648, 649, 650, 651, 652, 653, 655, 619,
	656, 661, 662, 1349, 657, 658, 659, 660, 1325, 664,
	665, 666, 667, 0, 668, 669, 0, 663, 654, 0,
	670, 671, 672, 673, 674, 675, 0, 676, 677, 0,
	678, 1314, 1315, 1316, 1317, 0, 690, 0, 679, 681,
	682, 683, 684, 1326, 685, 1327, 1244, 686, 687, 688,
	689, 680, 691, 692, 0, 0, 693, 694, 696, 698,
	699, 695, 697, 700, 1288, 701, 0, 0, 702, 703,
	704, 767, 1311, 1348, 0, 706, 705, 707, 708, 709,
	770, 710, 711, 712, 0, 0, 0, 0, 713, 714,
	771, 715, 716, 717, 0, 0, 0, 0, 0, 0,
	0, 1266, 1238, 1239, 1240, 1236, 1237, 1249, 0, 2974,
	0, 0, 0, 0, 0, 0, 2972, 2973, 308, 309,
	311, 310, 312, 313, 314, 315, 1250, 316, 317, 0,
	1248, 0, 0, 0, 1290, 1254, 0, 0, 318, 0,
	319, 320, 321, 1330, 322, 323, 324, 325, 326, 327,
	328, 719, 1303, 0, 329, 1310, 330, 1309, 0, 1320,
	331, 332, 333, 334, 335, 336, 337, 1256, 1289, 0,
	338, 1350, 1351, 726, 0, 339, 340, 1296, 0, 1277,
	0, 341, 342, 343, 344, 345, 346, 347, 348, 0,
	0, 350, 351, 352, 349, 353, 0, 354, 0, 355,
	356, 357, 358, 359, 360, 361, 0, 362, 363, 364,
	1331, 365, 366, 367, 1280, 1278, 1279, 1286, 1282, 1281,
	1285, 368, 369, 370, 371, 372, 1313, 373, 375, 1307,
	1306, 0, 378, 380, 374, 376, 0, 379, 377, 381,
	0, 382, 383, 384, 0, 0, 385, 1298, 387, 0,
	388, 389, 390, 0, 391, 392, 393, 0, 394, 395,
	1232, 396, 397, 398, 400, 402, 399, 401, 403, 404,
	405, 406, 407, 1321, 1322, 408, 1245, 305, 0, 0,
	0, 0, 0, 409, 410, 411, 1305, 0, 0, 0,
	412, 0, 413, 414, 415, 0, 416, 417, 0, 1332,
	418, 419, 420, 1318, 1319, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 0, 430, 1328, 0, 1255, 431,
	0, 432, 433, 434, 435, 436, 437, 438, 1291, 1292,
	1295, 531, 1334, 439, 440, 441, 0, 442, 443, 444,
	445, 446, 0, 0, 0, 306, 447, 448, 449, 0,
	1333, 741, 450, 532, 451, 1300, 1301, 0, 1261, 0,
	452, 453, 455, 1335, 1293, 1336, 454, 456, 457, 1337,
	458, 0, 0, 0, 459, 460, 461, 462, 463, 464,
	0, 465, 467, 466, 0, 469, 1329, 468, 1338, 470,
	471, 1339, 0, 472, 473, 474, 475, 476, 477, 480,
	1284, 1283, 478, 479, 481, 482, 0, 483, 484, 486,
	489, 485, 487, 488, 490, 503, 504, 491, 492, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 506,
	0, 505, 1340, 507, 508, 509, 510, 511, 518, 520,
	521, 516, 517, 519, 522, 523, 525, 513, 514, 515,
	1341, 524, 512, 0, 307, 1342, 526, 527, 528, 529,
	1246, 1294, 530, 1308, 533, 534, 0, 0, 535, 0,
	536, 0, 0, 538, 539, 540, 0, 0, 541, 542,
	749, 1343, 543, 1344, 1323, 544, 545, 537, 546, 547,
	548, 549, 550, 551, 552, 553, 554, 555, 0, 556,
	557, 751, 558, 559, 560, 752, 561, 562, 563, 1324,
	564, 754, 565, 566, 0, 567, 568, 569, 0, 570,
	571, 572, 573, 574, 575, 576, 577, 1304, 578, 579,
	581, 580, 582, 0, 583, 0, 584, 585, 586, 0,
	0, 0, 0, 0, 587, 588, 590, 0, 591, 592,
	593, 594, 589, 595, 596, 597, 598, 599, 600, 0,
	602, 603, 601, 604, 605, 1345, 606, 607, 608, 609,
	610, 3511, 3512, 0, 612, 613, 620, 621, 622, 614,
	615, 616, 623, 624, 625, 626, 627, 629, 628, 0,
	631, 632, 630, 633, 634, 635, 1287, 636, 757, 637,
	617, 618, 638, 639, 1346, 640, 641, 642, 643, 644,
	645, 646, 1302, 0, 647, 0, 648, 649, 650, 651,
	652, 653, 655, 619, 656, 661, 662, 1349, 657, 658,
	659, 660, 1325, 664, 665, 666, 667, 0, 668, 669,
	0, 663, 654, 0, 670, 671, 672, 673, 674, 675,
	0, 676, 677, 0, 678, 1314, 1315, 1316, 1317, 0,
	690, 0, 679, 681, 682, 683, 684, 1326, 685, 1327,
	1244, 686, 687, 688, 689, 680, 691, 692, 0, 0,
	693, 694, 696, 698, 699, 695, 697, 700, 1288, 701,
	0, 0, 702, 703, 704, 767, 1311, 1348, 0, 706,
	705, 707, 708, 709, 770, 710, 711, 712, 0, 0,
	0, 0, 713, 714, 771, 715, 716, 717, 0, 0,
	0, 0, 0, 0, 0, 1266, 1238, 1239, 1240, 1236,
	1237, 1249, 0, 0, 0, 0, 0, 0, 0, 0,
	2331, 2332, 308, 309, 311, 310, 312, 313, 314, 315,
	1250, 316, 317, 0, 1248, 0, 0, 0, 1290, 1254,
	0, 0, 318, 0, 319, 320, 321, 1330, 322, 323,
	324, 325, 326, 327, 328, 0, 1303, 0, 329, 1310,
	330, 1309, 0, 1320, 331, 332, 333, 334, 335, 336,
	337, 1256, 1289, 1221, 338, 1350, 1351, 726, 0, 339,
	340, 1296, 0, 1277, 0, 341, 342, 343, 344, 345,
	346, 347, 348, 0, 0, 350, 351, 352, 349, 353,
	0, 354, 0, 355, 356, 357, 358, 359, 360, 361,
	0, 362, 363, 364, 1331, 365, 366, 5287, 1280, 1278,
	1279, 1286, 1282, 1281, 1285, 368, 369, 370, 371, 372,
	1313, 373, 375, 1307, 1306, 1226, 378, 380, 374, 376,
	0, 379, 377, 381, 0, 382, 383, 384, 0, 0,
	385, 1298, 387, 0, 388, 389, 390, 0, 391, 392,
	393, 0, 394, 395, 1232, 396, 397, 398, 400, 402,
	399, 401, 403, 404, 405, 406, 407, 1321, 1322, 408,
	1245, 305, 0, 0, 0, 0, 0, 409, 410, 411,
	1305, 0, 0, 0, 412, 0, 413, 414, 415, 0,
	416, 417, 0, 1332, 418, 419, 420, 1318, 1319, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 0, 430,
	1328, 0, 1255, 431, 0, 432, 433, 434, 435, 436,
	437, 438, 1291, 1292, 1295, 531, 0, 439, 440, 441,
	0, 442, 443, 444, 445, 446, 0, 0, 0, 306,
	447, 448, 449, 0, 1333, 741, 450, 532, 451, 1300,
	1301, 0, 1261, 0, 452, 453, 455, 0, 1293, 0,
	454, 456, 457, 1337, 458, 0, 0, 0, 459, 460,
	461, 462, 463, 464, 0, 465, 467, 466, 0, 469,
	1329, 468, 1338, 470, 471, 0, 0, 472, 473, 474,
	475, 476, 477, 480, 1284, 1283, 478, 479, 481, 482,
	0, 483, 484, 486, 489, 485, 487, 488, 490, 503,
	504, 491, 492, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 506, 0, 505, 1340, 507, 508, 509,
	510, 511, 518, 520, 521, 516, 517, 519, 522, 523,
	525, 513, 514, 515, 1341, 524, 512, 1223, 307, 0,
	526, 527, 528, 529, 1246, 1294, 530, 1308, 533, 534,
	0, 0, 535, 0, 536, 0, 0, 538, 539, 540,
	0, 0, 541, 542, 749, 1343, 543, 1344, 1323, 544,
	545, 1233, 546, 547, 548, 549, 550, 551, 552, 553,
	554, 555, 0, 556, 557, 751, 558, 559, 560, 752,
	561, 562, 563, 1324, 564, 754, 565, 566, 0, 567,
	568, 569, 0, 570, 571, 572, 573, 574, 575, 576,
	577, 1304, 578, 579, 581, 580, 582, 0, 583, 0,
	584, 585, 586, 0, 0, 0, 0, 0, 587, 588,
	590, 0, 591, 592, 593, 594, 589, 595, 596, 597,
	598, 599, 600, 0, 602, 603, 601, 604, 605, 1345,
	606, 607, 608, 609, 610, 1234, 611, 0, 612, 613,
	620, 621, 622, 614, 615, 616, 623, 624, 625, 626,
	627, 629, 628, 0, 631, 632, 630, 633, 634, 635,
	1287, 636, 757, 637, 617, 618, 638, 639, 0, 640,
	641, 642, 643, 644, 645, 646, 1302, 0, 647, 0,
	648, 649, 650, 651, 652, 653, 655, 619, 656, 661,
	662, 1349, 657, 658, 659, 660, 1325, 664, 665, 666,
	667, 0, 668, 669, 1220, 663, 654, 0, 670, 671,
	672, 673, 674, 675, 0, 676, 677, 0, 678, 1314,
	1315, 1316, 1317, 0, 690, 0, 679, 681, 682, 683,
	684, 1326, 685, 1327, 1244, 686, 687, 688, 689, 680,
	5286, 692, 0, 1227, 693, 694, 696, 698, 699, 695,
	697, 700, 1288, 701, 0, 0, 702, 703, 704, 767,
	1311, 1348, 0, 706, 705, 707, 708, 709, 770, 710,
	711, 712, 0, 0, 0, 0, 713, 714, 771, 715,
	716, 717, 0, 0, 0, 0, 0, 2993, 0, 1266,
	1238, 1239, 1240, 1236, 1237, 1249, 0, 0, 0, 0,
	0, 0, 0, 0, 1217, 1218, 308, 309, 311, 310,
	312, 313, 314, 315, 1250, 316, 317, 0, 1248, 0,
	0, 0, 1290, 1254, 0, 0, 318, 0, 319, 320,
	321, 1330, 322, 323, 324, 325, 326, 327, 328, 719,
	1303, 0, 329, 1310, 330, 1309, 0, 1320, 331, 332,
	333, 334, 335, 336, 337, 0, 1289, 0, 338, 1350,
	1351, 726, 0, 339, 340, 1296, 0, 1277, 0, 341,
	342, 343, 344, 345, 346, 347, 348, 0, 0, 350,
	351, 352, 349, 353, 0, 354, 0, 355, 356, 357,
	358, 359, 360, 361, 0, 362, 363, 364, 1331, 365,
	366, 367, 1280, 1278, 1279, 1286, 1282, 1281, 1285, 368,
	369, 370, 371, 372, 1313, 373, 375, 1307, 1306, 0,
	378, 380, 374, 376, 0, 379, 377, 381, 0, 382,
	383, 384, 0, 0, 385, 1298, 387, 0, 388, 389,
	390, 0, 391, 392, 393, 0, 394, 395, 730, 396,
	397, 398, 400, 402, 399, 401, 403, 404, 405, 406,
	407, 1321, 1322, 408, 1245, 305, 0, 0, 0, 0,
	0, 409, 410, 411, 1305, 0, 0, 0, 412, 0,
	413, 414, 415, 0, 416, 417, 0, 1332, 418, 419,
	420, 1318, 1319, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 0, 430, 1328, 0, 1255, 431, 0, 432,
	433, 434, 435, 436, 437, 438, 1291, 1292, 1295, 531,
	1334, 439, 440, 441, 0, 442, 443, 444, 445, 446,
	0, 0, 0, 306, 447, 448, 449, 0, 1333, 741,
	450, 532, 451, 1300, 1301, 0, 1261, 0, 452, 453,
	455, 1335, 1293, 1336, 454, 456, 457, 1337, 458, 0,
	0, 0, 459, 460, 461, 462, 463, 464, 0, 465,
	467, 466, 0, 469, 1329, 468, 1338, 470, 471, 1339,
	0, 472, 473, 474, 475, 476, 477, 480, 1284, 1283,
	478, 479, 481, 482, 0, 483, 484, 486, 489, 485,
	487, 488, 490, 503, 504, 491, 492, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 506, 0, 505,
	1340, 507, 508, 509, 510, 511, 518, 520, 521, 516,
	517, 519, 522, 523, 525, 513, 514, 515, 1341, 524,
	512, 0, 307, 1342, 526, 527, 528, 529, 1246, 1294,
	530, 1308, 533, 534, 0, 0, 535, 0, 536, 0,
	0, 538, 539, 540, 0, 0, 541, 542, 749, 1343,
	543, 1344, 1323, 544, 545, 537, 546, 547, 548, 549,
	550, 551, 552, 553, 554, 555, 0, 556, 557, 751,
	558, 559, 560, 752, 561, 562, 563, 1324, 564, 754,
	565, 566, 0, 567, 568, 569, 0, 570, 571, 572,
	573, 574, 575, 576, 577, 1304, 578, 579, 581, 580,
	582, 0, 583, 0, 584, 585, 586, 0, 0, 0,
	0, 0, 587, 588, 590, 0, 591, 592, 593, 594,
	589, 595, 596, 597, 598, 599, 600, 0, 602, 603,
	601, 604, 605, 1345, 606, 607, 608, 609, 610, 1234,
	611, 0, 612, 613, 620, 621, 622, 614, 615, 616,
	623, 624, 625, 626, 627, 629, 628, 0, 631, 632,
	630, 633, 634, 635, 1287, 636, 757, 637, 617, 618,
	638, 639, 1346, 640, 641, 642, 643, 644, 645, 646,
	1302, 0, 647, 0, 648, 649, 650, 651, 652, 653,
	655, 619, 656, 661, 662, 1349, 657, 658, 659, 660,
	1325, 664, 665, 666, 667, 0, 668, 669, 0, 663,
	654, 0, 670, 671, 672, 673, 674, 675, 0, 676,
	677, 0, 678, 1314, 1315, 1316, 1317, 0, 690, 0,
	679, 681, 682, 683, 684, 1326, 685, 1327, 1244, 686,
	687, 688, 689, 680, 691, 692, 0, 0, 693, 694,
	696, 698, 699, 695, 697, 700, 1288, 701, 0, 0,
	702, 703, 704, 767, 1311, 1348, 0, 706, 705, 707,
	708, 709, 770, 710, 711, 712, 0, 0, 0, 0,
	713, 714, 771, 715, 716, 717, 0, 0, 1679, 0,
	1266, 1238, 1239, 1240, 1236, 1237, 1249, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 308, 309, 311,
	310, 312, 313, 314, 315, 0, 316, 317, 1250, 0,
	0, 0, 1248, 1290, 1254, 0, 0, 318, 0, 319,
	320, 321, 1330, 322, 323, 324, 325, 326, 327, 328,
	719, 1303, 0, 329, 1310, 330, 1309, 0, 1320, 331,
	332, 333, 334, 335, 336, 337, 0, 1289, 0, 338,
	1350, 1351, 726, 0, 339, 340, 1296, 0, 1277, 0,
	341, 342, 343, 344, 345, 346, 347, 348, 0, 0,
	350, 351, 352, 349, 353, 0, 354, 0, 355, 356,
	357, 358, 359, 360, 361, 0, 362, 363, 364, 1331,
	365, 366, 367, 1280, 1278, 1279, 1286, 1282, 1281, 1285,
	368, 369, 370, 371, 372, 1313, 373, 375, 1307, 1306,
	0, 378, 380, 374, 376, 0, 379, 377, 381, 0,
	382, 383, 384, 0, 0, 385, 1298, 387, 0, 388,
	389, 390, 0, 391, 392, 393, 0, 394, 395, 730,
	396, 397, 398, 400, 402, 399, 401, 403, 404, 405,
	406, 407, 1321, 1322, 408, 1245, 305, 0, 0, 0,
	0, 0, 409, 410, 411, 1305, 0, 0, 0, 412,
	0, 413, 414, 415, 0, 416, 417, 0, 1332, 418,
	419, 420, 1318, 1319, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 0, 430, 1328, 0, 1255, 431, 0,
	432, 433, 434, 435, 436, 437, 438, 1291, 1292, 1295,
	531, 1334, 439, 440, 441, 0, 442, 443, 444, 445,
	446, 0, 0, 0, 306, 447, 448, 449, 0, 1333,
	741, 450, 532, 451, 1300, 1301, 0, 1261, 0, 452,
	453, 455, 1335, 1293, 1336, 454, 456, 457, 1337, 458,
	0, 0, 0, 459, 460, 461, 462, 463, 464, 0,
	465, 467, 466, 0, 469, 1329, 468, 1338, 470, 471,
	1339, 0, 472, 473, 474, 475, 476, 477, 480, 1284,
	1283, 478, 479, 481, 482, 0, 483, 484, 486, 489,
	485, 487, 488, 490, 503, 504, 491, 492, 493, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 506, 0,
	505, 1340, 507, 508, 509, 510, 511, 518, 520, 521,
	516, 517, 519, 522, 523, 525, 513, 514, 515, 1341,
	524, 512, 0, 307, 1342, 526, 527, 528, 529, 1246,
	1294, 530, 1308, 533, 534, 0, 0, 535, 0, 536,
	0, 0, 538, 539, 540, 0, 0, 541, 542, 749,
	1343, 543, 1344, 1323, 544, 545, 537, 546, 547, 548,
	549, 550, 551, 552, 553, 554, 555, 0, 556, 557,
	751, 558, 559, 560, 752, 561, 562, 563, 1324, 564,
	754, 565, 566, 0, 567, 568, 569, 0, 570, 571,
	572, 573, 574, 575, 576, 577, 1304, 578, 579, 581,
	580, 582, 0, 583, 0, 584, 585, 586, 0, 0,
	0, 0, 0, 587, 588, 590, 0, 591, 592, 593,
	594, 589, 595, 596, 597, 598, 599, 600, 0, 602,
	603, 601, 604, 605, 1345, 606, 607, 608, 609, 610,
	1234, 611, 0, 612, 613, 620, 621, 622, 614, 615,
	616, 623, 624, 625, 626, 627, 629, 628, 0, 631,
	632, 630, 633, 634, 635, 1287, 636, 757, 637, 617,
	618, 638, 639, 1346, 640, 641, 642, 643, 644, 645,
	646, 1302, 0, 647, 0, 648, 649, 650, 651, 652,
	653, 655, 619, 656, 661, 662, 1349, 657, 658, 659,
	660, 1325, 664, 665, 666, 667, 0, 668, 669, 0,
	663, 654, 0, 670, 671, 672, 673, 674, 675, 0,
	676, 677, 0, 678, 1314, 1315, 1316, 1317, 0, 690,
	0, 679, 681, 682, 683, 684, 1326, 685, 1327, 1244,
	686, 687, 688, 689, 680, 691, 692, 0, 0, 693,
	694, 696, 698, 699, 695, 697, 700, 1288, 701, 0,
	0, 702, 703, 704, 767, 1311, 1348, 0, 706, 705,
	707, 708, 709, 770, 710, 711, 712, 0, 0, 0,
	0, 713, 714, 771, 715, 716, 717, 1208, 0, 1389,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 308, 309, 311, 310,
	312, 313, 314, 315, 0, 316, 317, 0, 0, 1250,
	0, 0, 1290, 1248, 0, 0, 318, 0, 319, 320,
	321, 1330, 322, 323, 324, 325, 326, 327, 328, 719,
	720, 0, 329, 721, 330, 722, 0, 723, 331, 332,
	333, 334, 335, 336, 337, 0, 1289, 0, 338, 724,
	725, 726, 0, 339, 340, 1296, 0, 1277, 0, 341,
	342, 343, 344, 345, 346, 347, 348, 0, 0, 350,
	351, 352, 349, 353, 0, 354, 0, 355, 356, 357,
	358, 359, 360, 361, 0, 362, 363, 364, 1331, 365,
	366, 367, 1280, 1278, 1279, 1286, 1282, 1281, 1285, 368,
	369, 370, 371, 372, 0, 373, 375, 728, 729, 0,
	378, 380, 374, 376, 0, 379, 377, 381, 0, 382,
	383, 384, 0, 0, 385, 386, 387, 0, 388, 389,
	390, 0, 391, 392, 393, 0, 394, 395, 730, 396,
	397, 398, 400, 402, 399, 401, 403, 404, 405, 406,
	407, 1321, 1322, 408, 0, 305, 0, 0, 0, 0,
	0, 409, 410, 411, 733, 0, 0, 0, 412, 0,
	413, 414, 415, 0, 416, 417, 0, 1332, 418, 419,
	420, 734, 735, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 0, 430, 1328, 0, 737, 431, 0, 432,
	433, 434, 435, 436, 437, 438, 1291, 1292, 1295, 531,
	1334, 439, 440, 441, 0, 442, 443, 444, 445, 446,
	0, 0, 0, 306, 447, 448, 449, 0, 1333, 741,
	450, 532, 451, 742, 743, 0, 744, 0, 452, 453,
	455, 1335, 1293, 1336, 454, 456, 457, 1337, 458, 0,
	0, 0, 459, 460, 461, 462, 463, 464, 1375, 465,
	467, 466, 0, 469, 1329, 468, 1338, 470, 471, 1339,
	0, 472, 473, 474, 475, 476, 477, 480, 1284, 1283,
	478, 479, 481, 482, 0, 483, 484, 486, 489, 485,
	487, 488, 490, 503, 504, 491, 492, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 506, 0, 505,
	1340, 507, 508, 509, 510, 511, 518, 520, 521, 516,
	517, 519, 522, 523, 525, 513, 514, 515, 1341, 524,
	512, 0, 307, 1342, 526, 527, 528, 529, 0, 1294,
	530, 748, 533, 534, 0, 0, 535, 0, 536, 0,
	1381, 538, 539, 540, 0, 0, 541, 542, 749, 1343,
	543, 1344, 1323, 544, 545, 537, 546, 547, 548, 549,
	550, 551, 552, 553, 554, 555, 0, 556, 557, 751,
	558, 559, 560, 752, 561, 562, 563, 1324, 564, 754,
	565, 566, 0, 567, 568, 569, 0, 570, 571, 572,
	573, 574, 575, 576, 577, 755, 578, 579, 581, 580,
	582, 0, 583, 0, 584, 585, 586, 0, 0, 0,
	0, 0, 587, 588, 590, 0, 591, 592, 593, 594,
	589, 595, 596, 597, 598, 599, 600, 0, 602, 603,
	601, 604, 605, 1345, 606, 607, 608, 609, 610, 756,
	1383, 0, 612, 613, 620, 621, 622, 614, 615, 616,
	623, 624, 625, 626, 627, 629, 628, 261, 631, 632,
	630, 633, 634, 635, 1287, 636, 757, 637, 617, 618,
	638, 639, 1346, 640, 641, 642, 643, 644, 645, 646,
	758, 0, 647, 0, 648, 649, 650, 651, 652, 653,
	655, 619, 656, 661, 662, 759, 657, 658, 659, 660,
	1325, 664, 665, 666, 667, 0, 668, 669, 0, 663,
	654, 263, 670, 671, 672, 673, 674, 675, 0, 676,
	677, 0, 678, 761, 762, 763, 764, 0, 690, 0,
	679, 681, 682, 683, 684, 1326, 685, 1327, 0, 686,
	687, 688, 689, 680, 691, 692, 0, 0, 693, 694,
	696, 698, 699, 695, 697, 700, 1288, 701, 0, 0,
	702, 703, 704, 1800, 768, 769, 0, 706, 705, 707,
	708, 709, 770, 710, 711, 712, 0, 0, 0, 255,
	713, 714, 771, 715, 716, 717, 1389, 0, 256, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 308, 309, 311, 310, 312, 313, 314,
	315, 0, 316, 317, 0, 0, 1379, 0, 2163, 1290,
	0, 0, 0, 318, 0, 319, 320, 321, 1330, 322,
	323, 324, 325, 326, 327, 328, 719, 720, 0, 329,
	721, 330, 722, 0, 723, 331, 332, 333, 334, 335,
	336, 337, 0, 1289, 0, 338, 724, 725, 726, 0,
	339, 340, 1296, 0, 1277, 0, 341, 342, 343, 344,
	345, 346, 347, 348, 0, 0, 350, 351, 352, 349,
	353, 0, 354, 0, 355, 356, 357, 358, 359, 360,
	361, 0, 362, 363, 364, 1331, 365, 366, 367, 1280,
	1278, 1279, 1286, 1282, 1281, 1285, 368, 369, 370, 371,
	372, 0, 373, 375, 728, 729, 0, 378, 380, 374,
	376, 0, 379, 377, 381, 0, 382, 383, 384, 0,
	0, 385, 386, 387, 0, 388, 389, 390, 0, 391,
	392, 393, 0, 394, 395, 730, 396, 397, 398, 400,
	402, 399, 401, 403, 404, 405, 406, 407, 1321, 1322,
	408, 0, 305, 0, 0, 0, 0, 0, 409, 410,
	411, 733, 0, 0, 0, 412, 0, 413, 414, 415,
	0, 416, 417, 0, 1332, 418, 419, 420, 734, 735,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 0,
	430, 1328, 0, 737, 431, 0, 432, 433, 434, 435,
	436, 437, 438, 1291, 1292, 1295, 531, 1334, 439, 440,
	441, 0, 442, 443, 444, 445, 446, 0, 0, 0,
	306, 447, 448, 449, 0, 1333, 741, 450, 532, 451,
	742, 743, 0, 744, 0, 452, 453, 455, 1335, 1293,
	1336, 454, 456, 457, 1337, 458, 0, 0, 0, 459,
	460, 461, 462, 463, 464, 1375, 465, 467, 466, 0,
	469, 1329, 468, 1338, 470, 471, 1339, 0, 472, 473,
	474, 475, 476, 477, 480, 1284, 1283, 478, 479, 481,
	482, 0, 483, 484, 486, 489, 485, 487, 488, 490,
	503, 504, 491, 492, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 506, 0, 505, 1340, 507, 508,
	509, 510, 511, 518, 520, 521, 516, 517, 519, 522,
	523, 525, 513, 514, 515, 1341, 524, 512, 0, 307,
	1342, 526, 527, 528, 529, 0, 1294, 530, 748, 533,
	534, 0, 0, 535, 0, 536, 0, 1381, 538, 539,
	540, 0, 0, 541, 542, 749, 1343, 543, 1344, 1323,
	544, 545, 537, 546, 547, 548, 549, 550, 551, 552,
	553, 554, 555, 0, 556, 557, 751, 558, 559, 560,
	752, 561, 562, 563, 1324, 564, 754, 565, 566, 0,
	567, 568, 569, 0, 570, 571, 572, 573, 574, 575,
	576, 577, 755, 578, 579, 581, 580, 582, 0, 583,
	0, 584, 585, 586, 0, 0, 0, 0, 0, 587,
	588, 590, 0, 591, 592, 593, 594, 589, 595, 596,
	597, 598, 599, 600, 0, 602, 603, 601, 604, 605,
	1345, 606, 607, 608, 609, 610, 756, 1383, 0, 612,
	613, 620, 621, 622, 614, 615, 616, 623, 624, 625,
	626, 627, 629, 628, 261, 631, 632, 630, 633, 634,
	635, 1287, 636, 757, 637, 617, 618, 638, 639, 1346,
	640, 641, 642, 643, 644, 645, 646, 758, 0, 647,
	0, 648, 649, 650, 651, 652, 653, 655, 619, 656,
	661, 662, 759, 657, 658, 659, 660, 1325, 664, 665,
	666, 667, 0, 668, 669, 0, 663, 654, 263, 670,
	671, 672, 673, 674, 675, 0, 676, 677, 0, 678,
	761, 762, 763, 764, 0, 690, 0, 679, 681, 682,
	683, 684, 1326, 685, 1327, 0, 686, 687, 688, 689,
	680, 691, 692, 0, 0, 693, 694, 696, 698, 699,
	695, 697, 700, 1288, 701, 0, 0, 702, 703, 704,
	1800, 768, 769, 0, 706, 705, 707, 708, 709, 770,
	710, 711, 712, 0, 0, 0, 255, 713, 714, 771,
	715, 716, 717, 0, 0, 256, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3676, 0, 1389,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1379, 0, 2163, 308, 309, 311, 310,
	312, 313, 314, 315, 0, 316, 317, 0, 0, 0,
	0, 0, 1290, 0, 0, 0, 318, 0, 319, 320,
	321, 1330, 322, 323, 324, 325, 326, 327, 328, 719,
	720, 0, 329, 721, 330, 722, 0, 723, 331, 332,
	333, 334, 335, 336, 337, 0, 1289, 0, 338, 724,
	725, 726, 0, 339, 340, 1296, 0, 1277, 0, 341,
	342, 343, 344, 345, 346, 347, 348, 0, 0, 350,
	351, 352, 349, 353, 0, 354, 0, 355, 356, 357,
	358, 359, 360, 361, 0, 362, 363, 364, 1331, 365,
	366, 367, 1280, 1278, 1279, 1286, 1282, 1281, 1285, 368,
	369, 370, 371, 372, 0, 373, 375, 728, 729, 0,
	378, 380, 374, 376, 0, 379, 377, 381, 0, 382,
	383, 384, 0, 0, 385, 386, 387, 0, 388, 389,
	390, 0, 391, 392, 393, 0, 394, 395, 730, 396,
	397, 398, 400, 402, 399, 401, 403, 404, 405, 406,
	407, 1321, 1322, 408, 0, 305, 0, 0, 0, 0,
	0, 409, 410, 411, 733, 0, 0, 0, 412, 0,
	413, 414, 415, 0, 416, 417, 0, 1332, 418, 419,
	420, 734, 735, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 0, 430, 1328, 0, 737, 431, 0, 432,
	433, 434, 435, 436, 437, 438, 1291, 1292, 1295, 531,
	1334, 439, 440, 441, 0, 442, 443, 444, 445, 446,
	0, 0, 0, 306, 447, 448, 449, 0, 1333, 741,
	450, 532, 451, 742, 743, 0, 744, 0, 452, 453,
	455, 1335, 1293, 1336, 454, 456, 457, 1337, 458, 0,
	0, 0, 459, 460, 461, 462, 463, 464, 1375, 465,
	467, 466, 0, 469, 1329, 468, 1338, 470, 471, 1339,
	0, 472, 473, 474, 475, 476, 477, 480, 1284, 1283,
	478, 479, 481, 482, 0, 483, 484, 486, 489, 485,
	487, 488, 490, 503, 504, 491, 492, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 506, 0, 505,
	1340, 507, 508, 509, 510, 511, 518, 520, 521, 516,
	517, 519, 522, 523, 525, 513, 514, 515, 1341, 524,
	512, 0, 307, 1342, 526, 527, 528, 529, 0, 1294,
	530, 748, 533, 534, 0, 0, 535, 0, 536, 0,
	1381, 538, 539, 540, 0, 0, 541, 542, 749, 1343,
	543, 1344, 1323, 544, 545, 537, 546, 547, 548, 549,
	550, 551, 552, 553, 554, 555, 0, 556, 557, 751,
	558, 559, 560, 752, 561, 562, 563, 1324, 564, 754,
	565, 566, 0, 567, 568, 569, 0, 570, 571, 572,
	573, 574, 575, 576, 577, 755, 578, 579, 581, 580,
	582, 0, 583, 0, 584, 585, 586, 0, 0, 0,
	0, 0, 587, 588, 590, 0, 591, 592, 593, 594,
	589, 595, 596, 597, 598, 599, 600, 0, 602, 603,
	601, 604, 605, 1345, 606, 607, 608, 609, 610, 756,
	1383, 0, 612, 613, 620, 621, 622, 614, 615, 616,
	623, 624, 625, 626, 627, 629, 628, 0, 631, 632,
	630, 633, 634, 635, 1287, 636, 757, 637, 617, 618,
	638, 639, 1346, 640, 641, 642, 643, 644, 645, 646,
	758, 0, 647, 0, 648, 649, 650, 651, 652, 653,
	655, 619, 656, 661, 662, 759, 657, 658, 659, 660,
	1325, 664, 665, 666, 667, 0, 668, 669, 0, 663,
	654, 0, 670, 671, 672, 673, 674, 675, 0, 676,
	677, 0, 678, 761, 762, 763, 764, 0, 690, 0,
	679, 681, 682, 683, 684, 1326, 685, 1327, 0, 686,
	687, 688, 689, 680, 691, 692, 0, 0, 693, 694,
	696, 698, 699, 695, 697, 700, 1288, 701, 0, 0,
	702, 703, 704, 767, 768, 769, 0, 706, 705, 707,
	708, 709, 770, 710, 711, 712, 0, 0, 0, 0,
	713, 714, 771, 715, 716, 717, 1371, 0, 1389, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 308, 309, 311, 310, 312,
	313, 314, 315, 0, 316, 317, 1379, 0, 1377, 0,
	0, 1290, 0, 0, 0, 318, 0, 319, 320, 321,
	1330, 322, 323, 324, 325, 326, 327, 328, 719, 720,
	0, 329, 721, 330, 722, 0, 723, 331, 332, 333,
	334, 335, 336, 337, 0, 1289, 0, 338, 724, 725,
	726, 0, 339, 340, 1296, 0, 1277, 0, 341, 342,
	343, 344, 345, 346, 347, 348, 0, 0, 350, 351,
	352, 349, 353, 0, 354, 0, 355, 356, 357, 358,
	359, 360, 361, 0, 362, 363, 364, 1331, 365, 366,
	367, 1280, 1278, 1279, 1286, 1282, 1281, 1285, 368, 369,
	370, 371, 372, 0, 373, 375, 728, 729, 0, 378,
	380, 374, 376, 0, 379, 377, 381, 0, 382, 383,
	384, 0, 0, 385, 386, 387, 0, 388, 389, 390,
	0, 391, 392, 393, 0, 394, 395, 730, 396, 397,
	398, 400, 402, 399, 401, 403, 404, 405, 406, 407,
	1321, 1322, 408, 0, 305, 0, 0, 0, 0, 0,
	409, 410, 411, 733, 0, 0, 0, 412, 0, 413,
	414, 415, 0, 416, 417, 0, 1332, 418, 419, 420,
	734, 735, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 0, 430, 1328, 0, 737, 431, 0, 432, 433,
	434, 435, 436, 437, 438, 1291, 1292, 1295, 531, 1334,
	439, 440, 441, 0, 442, 443, 444, 445, 446, 0,
	0, 0, 306, 447, 448, 449, 0, 1333, 741, 450,
	532, 451, 742, 743, 0, 744, 0, 452, 453, 455,
	1335, 1293, 1336, 454, 456, 457, 1337, 458, 0, 0,
	0, 459, 460, 461, 462, 463, 464, 1375, 465, 467,
	466, 0, 469, 1329, 468, 1338, 470, 471, 1339, 0,
	472, 473, 474, 475, 476, 477, 480, 1284, 1283, 478,
	479, 481, 482, 0, 483, 484, 486, 489, 485, 487,
	488, 490, 503, 504, 491, 492, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 506, 0, 505, 1340,
	507, 508, 509, 510, 511, 518, 520, 521, 516, 517,
	519, 522, 523, 525, 513, 514, 515, 1341, 524, 512,
	0, 307, 1342, 526, 527, 528, 529, 0, 1294, 530,
	748, 533, 534, 0, 0, 535, 0, 536, 0, 1381,
	538, 539, 540, 0, 0, 541, 542, 749, 1343, 543,
	1344, 1323, 544, 545, 537, 546, 547, 548, 549, 550,
	551, 552, 553, 554, 555, 0, 556, 557, 751, 558,
	559, 560, 752, 561, 562, 563, 1324, 564, 754, 565,
	566, 0, 567, 568, 569, 0, 570, 571, 572, 573,
	574, 575, 576, 577, 755, 578, 579, 581, 580, 582,
	0, 583, 0, 584, 585, 586, 0, 0, 0, 0,
	0, 587, 588, 590, 0, 591, 592, 593, 594, 589,
	595, 596, 597, 598, 599, 600, 0, 602, 603, 601,
	604, 605, 1345, 606, 607, 608, 609, 610, 756, 1383,
	0, 612, 613, 620, 621, 622, 614, 615, 616, 623,
	624, 625, 626, 627, 629, 628, 0, 631, 632, 630,
	633, 634, 635, 1287, 636, 757, 637, 617, 618, 638,
	639, 1346, 640, 641, 642, 643, 644, 645, 646, 758,
	0, 647, 0, 648, 649, 650, 651, 652, 653, 655,
	619, 656, 661, 662, 759, 657, 658, 659, 660, 1325,
	664, 665, 666, 667, 0, 668, 669, 0, 663, 654,
	0, 670, 671, 672, 673, 674, 675, 0, 676, 677,
	0, 678, 761, 762, 763, 764, 0, 690, 0, 679,
	681, 682, 683, 684, 1326, 685, 1327, 0, 686, 687,
	688, 689, 680, 691, 692, 0, 0, 693, 694, 696,
	698, 699, 695, 697, 700, 1288, 701, 0, 0, 702,
	703, 704, 767, 768, 769, 0, 706, 705, 707, 708,
	709, 770, 710, 711, 712, 0, 0, 0, 0, 713,
	714, 771, 715, 716, 717, 1389, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 308, 309, 311, 310, 312, 313, 314, 315,
	0, 316, 317, 0, 0, 1379, 0, 1377, 1290, 0,
	0, 0, 318, 0, 319, 320, 321, 1330, 322, 323,
	324, 325, 326, 327, 328, 719, 720, 0, 329, 721,
	330, 722, 0, 723, 331, 332, 333, 334, 335, 336,
	337, 0, 1289, 0, 338, 724, 725, 726, 0, 339,
	340, 1296, 0, 1277, 0, 341, 342, 343, 344, 345,
	346, 347, 348, 0, 0, 350, 351, 352, 349, 353,
	0, 354, 0, 355, 356, 357, 358, 359, 360, 361,
	0, 362, 363, 364, 1331, 365, 366, 367, 1280, 1278,
	1279, 1286, 1282, 1281, 1285, 368, 369, 370, 371, 372,
	0, 373, 375, 728, 729, 0, 378, 380, 374, 376,
	0, 379, 377, 381, 0, 382, 383, 384, 0, 0,
	385, 386, 387, 0, 388, 389, 390, 0, 391, 392,
	393, 0, 394, 395, 730, 396, 397, 398, 400, 402,
	399, 401, 403, 404, 405, 406, 407, 1321, 1322, 408,
	0, 305, 0, 0, 0, 0, 0, 409, 410, 411,
	733, 0, 0, 0, 412, 0, 413, 414, 415, 0,
	416, 417, 0, 1332, 418, 419, 420, 734, 735, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 0, 430,
	1328, 0, 737, 431, 0, 432, 433, 434, 435, 436,
	437, 438, 1291, 1292, 1295, 531, 1334, 439, 440, 441,
	0, 442, 443, 444, 445, 446, 0, 0, 0, 306,
	447, 448, 449, 0, 1333, 741, 450, 532, 451, 742,
	743, 0, 744, 0, 452, 453, 455, 1335, 1293, 1336,
	454, 456, 457, 1337, 458, 0, 0, 0, 459, 460,
	461, 462, 463, 464, 1375, 465, 467, 466, 0, 469,
	1329, 468, 1338, 470, 471, 1339, 0, 472, 473, 474,
	475, 476, 477, 480, 1284, 1283, 478, 479, 481, 482,
	0, 483, 484, 486, 489, 485, 487, 488, 490, 503,
	504, 491, 492, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 506, 0, 505, 1340, 507, 508, 509,
	510, 511, 518, 520, 521, 516, 517, 519, 522, 523,
	525, 513, 514, 515, 1341, 524, 512, 0, 307, 1342,
	526, 527, 528, 529, 0, 1294, 530, 748, 533, 534,
	0, 0, 535, 0, 536, 0, 1381, 538, 539, 540,
	0, 0, 541, 542, 749, 1343, 543, 1344, 1323, 544,
	545, 537, 546, 547, 548, 549, 550, 551, 552, 553,
	554, 555, 0, 556, 557, 751, 558, 559, 560, 752,
	561, 562, 563, 1324, 564, 754, 565, 566, 0, 567,
	568, 569, 0, 570, 571, 572, 573, 574, 575, 576,
	577, 755, 578, 579, 581, 580, 582, 0, 583, 0,
	584, 585, 586, 0, 0, 0, 0, 0, 587, 588,
	590, 0, 591, 592, 593, 594, 589, 595, 596, 597,
	598, 599, 600, 0, 602, 603, 601, 604, 605, 1345,
	606, 607, 608, 609, 610, 756, 1383, 0, 612, 613,
	620, 621, 622, 614, 615, 616, 623, 624, 625, 626,
	627, 629, 628, 0, 631, 632, 630, 633, 634, 635,
	1287, 636, 757, 637, 617, 618, 638, 639, 1346, 640,
	641, 642, 643, 644, 645, 646, 758, 0, 647, 0,
	648, 649, 650, 651, 652, 653, 655, 619, 656, 661,
	662, 759, 657, 658, 659, 660, 1325, 664, 665, 666,
	667, 0, 668, 669, 0, 663, 654, 0, 670, 671,
	672, 673, 674, 675, 0, 676, 677, 0, 678, 761,
	762, 763, 764, 0, 690, 0, 679, 681, 682, 683,
	684, 1326, 685, 1327, 0, 686, 687, 688, 689, 680,
	691, 692, 0, 0, 693, 694, 696, 698, 699, 695,
	697, 700, 1288, 701, 0, 0, 702, 703, 704, 767,
	768, 769, 0, 706, 705, 707, 708, 709, 770, 710,
	711, 712, 0, 0, 0, 0, 713, 714, 771, 715,
	716, 717, 1389, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 308,
	309, 311, 310, 312, 313, 314, 315, 0, 316, 317,
	0, 0, 1379, 0, 1377, 1290, 0, 0, 0, 318,
	0, 319, 320, 321, 1330, 322, 323, 324, 325, 326,
	327, 328, 719, 720, 0, 329, 721, 330, 722, 0,
	723, 331, 332, 333, 334, 335, 336, 337, 0, 1289,
	0, 338, 724, 725, 726, 0, 339, 340, 1296, 0,
	1277, 0, 341, 342, 343, 344, 345, 346, 347, 348,
	0, 0, 350, 351, 352, 349, 353, 0, 354, 0,
	355, 356, 357, 358, 359, 360, 361, 0, 362, 363,
	364, 1331, 365, 366, 367, 1280, 1278, 1279, 1286, 1282,
	1281, 1285, 368, 369, 370, 371, 372, 0, 373, 375,
	728, 729, 0, 378, 380, 374, 376, 0, 379, 377,
	381, 0, 382, 383, 384, 0, 0, 385, 386, 387,
	0, 388, 389, 390, 0, 391, 392, 393, 0, 394,
	395, 730, 396, 397, 398, 400, 402, 399, 401, 403,
	404, 405, 406, 407, 1321, 1322, 408, 0, 305, 0,
	0, 0, 0, 0, 409, 410, 411, 733, 0, 0,
	0, 412, 0, 413, 414, 415, 0, 416, 417, 0,
	1332, 418, 419, 420, 734, 735, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 0, 430, 1328, 0, 737,
	431, 0, 432, 433, 434, 435, 436, 437, 438, 1291,
	1292, 1295, 531, 1334, 439, 440, 441, 0, 442, 443,
	444, 445, 446, 0, 0, 0, 306, 447, 448, 449,
	0, 1333, 741, 450, 532, 451, 742, 743, 0, 744,
	0, 452, 453, 455, 1335, 1293, 1336, 454, 456, 457,
	1337, 458, 0, 0, 0, 459, 460, 461, 462, 463,
	464, 0, 465, 467, 466, 0, 469, 1329, 468, 1338,
	470, 471, 1339, 0, 472, 473, 474, 475, 476, 477,
	480, 1284, 1283, 478, 479, 481, 482, 0, 483, 484,
	486, 489, 485, 487, 488, 490, 503, 504, 491, 492,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	506, 0, 505, 1340, 507, 508, 509, 510, 511, 518,
	520, 521, 516, 517, 519, 522, 523, 525, 513, 514,
	515, 1341, 524, 512, 0, 307, 1342, 526, 527, 528,
	529, 0, 1294, 530, 748, 533, 534, 0, 0, 535,
	0, 536, 0, 0, 538, 539, 540, 0, 0, 541,
	542, 749, 1343, 543, 1344, 1323, 544, 545, 537, 546,
	547, 548, 549, 550, 551, 552, 553, 554, 555, 0,
	556, 557, 751, 558, 559, 560, 752, 561, 562, 563,
	1324, 564, 754, 565, 566, 0, 567, 568, 569, 0,
	570, 571, 572, 573, 574, 575, 576, 577, 755, 578,
	579, 581, 580, 582, 0, 583, 0, 584, 585, 586,
	0, 0, 0, 0, 0, 587, 588, 590, 0, 591,
	592, 593, 594, 589, 595, 596, 597, 598, 599, 600,
	0, 602, 603, 601, 604, 605, 1345, 606, 607, 608,
	609, 610, 756, 611, 0, 612, 613, 620, 621, 622,
	614, 615, 616, 623, 624, 625, 626, 627, 629, 628,
	0, 631, 632, 630, 633, 634, 635, 1287, 636, 757,
	637, 617, 618, 638, 639, 1346, 640, 641, 642, 643,
	644, 645, 646, 758, 0, 647, 0, 648, 649, 650,
	651, 652, 653, 655, 619, 656, 661, 662, 759, 657,
	658, 659, 660, 1325, 664, 665, 666, 667, 0, 668,
	669, 0, 663, 654, 0, 670, 671, 672, 673, 674,
	675, 0, 676, 677, 0, 678, 761, 762, 763, 764,
	0, 690, 0, 679, 681, 682, 683, 684, 1326, 685,
	1327, 0, 686, 687, 688, 689, 680, 691, 692, 0,
	0, 693, 694, 696, 698, 699, 695, 697, 700, 1288,
	701, 0, 0, 702, 703, 704, 767, 768, 769, 0,
	706, 705, 707, 708, 709, 770, 710, 711, 712, 0,
	0, 0, 0, 713, 714, 771, 715, 716, 717, 1389,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 308, 309, 311, 310,
	312, 313, 314, 315, 0, 316, 317, 0, 0, 0,
	0, 4656, 1290, 0, 0, 0, 318, 0, 319, 320,
	321, 1330, 322, 323, 324, 325, 326, 327, 328, 719,
	720, 0, 329, 721, 330, 722, 0, 723, 331, 332,
	333, 334, 335, 336, 337, 0, 1289, 0, 338, 724,
	725, 726, 0, 339, 340, 1296, 0, 1277, 0, 341,
	342, 343, 344, 345, 346, 347, 348, 0, 0, 350,
	351, 352, 349, 353, 0, 354, 0, 355, 356, 357,
	358, 359, 360, 361, 0, 362, 363, 364, 1331, 365,
	366, 367, 1280, 1278, 1279, 1286, 1282, 1281, 1285, 368,
	369, 370, 371, 372, 0, 373, 375, 728, 729, 0,
	378, 380, 374, 376, 0, 379, 377, 381, 0, 382,
	383, 384, 0, 0, 385, 386, 387, 0, 388, 389,
	390, 0, 391, 392, 393, 0, 394, 395, 730, 396,
	397, 398, 400, 402, 399, 401, 403, 404, 405, 406,
	407, 1321, 1322, 408, 0, 305, 0, 0, 0, 0,
	0, 409, 410, 411, 733, 0, 0, 0, 412, 0,
	413, 414, 415, 0, 416, 417, 0, 1332, 418, 419,
	420, 734, 735, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 0, 430, 1328, 0, 737, 431, 0, 432,
	433, 434, 435, 436, 437, 438, 1291, 1292, 1295, 531,
	1334, 439, 440, 441, 0, 442, 443, 444, 445, 446,
	0, 0, 0, 306, 447, 448, 449, 0, 1333, 741,
	450, 532, 451, 742, 743, 0, 744, 0, 452, 453,
	455, 1335, 1293, 1336, 454, 456, 457, 1337, 458, 0,
	0, 0, 459, 460, 461, 462, 463, 464, 0, 465,
	467, 466, 0, 469, 1329, 468, 1338, 470, 471, 1339,
	0, 472, 473, 474, 475, 476, 477, 480, 1284, 1283,
	478, 479, 481, 482, 0, 483, 484, 486, 489, 485,
	487, 488, 490, 503, 504, 491, 492, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 506, 0, 505,
	1340, 507, 508, 509, 510, 511, 518, 520, 521, 516,
	517, 519, 522, 523, 525, 513, 514, 515, 1341, 524,
	512, 0, 307, 1342, 526, 527, 528, 529, 0, 1294,
	530, 748, 533, 534, 0, 0, 535, 0, 536, 0,
	0, 538, 539, 540, 0, 0, 541, 542, 749, 1343,
	543, 1344, 1323, 544, 545, 537, 546, 547, 548, 549,
	550, 551, 552, 553, 554, 555, 0, 556, 557, 751,
	558, 559, 560, 752, 561, 562, 563, 1324, 564, 754,
	565, 566, 0, 567, 568, 569, 0, 570, 571, 572,
	573, 574, 575, 576, 577, 755, 578, 579, 581, 580,
	582, 0, 583, 0, 584, 585, 586, 0, 0, 0,
	0, 0, 587, 588, 590, 0, 591, 592, 593, 594,
	589, 595, 596, 597, 598, 599, 600, 0, 602, 603,
	601, 604, 605, 1345, 606, 607, 608, 609, 610, 756,
	1383, 0, 612, 613, 620, 621, 622, 614, 615, 616,
	623, 624, 625, 626, 627, 629, 628, 0, 631, 632,
	630, 633, 634, 635, 1287, 636, 757, 637, 617, 618,
	638, 639, 1346, 640, 641, 642, 643, 644, 645, 646,
	758, 0, 647, 0, 648, 649, 650, 651, 652, 653,
	655, 619, 656, 661, 662, 759, 657, 658, 659, 660,
	1325, 664, 665, 666, 667, 0, 668, 669, 0, 663,
	654, 0, 670, 671, 672, 673, 674, 675, 0, 676,
	677, 0, 678, 761, 762, 763, 764, 0, 690, 0,
	679, 681, 682, 683, 684, 1326, 685, 1327, 0, 686,
	687, 688, 689, 680, 691, 692, 0, 0, 693, 694,
	696, 698, 699, 695, 697, 700, 1288, 701, 0, 0,
	702, 703, 704, 767, 768, 769, 0, 706, 705, 707,
	708, 709, 770, 710, 711, 712, 302, 0, 0, 0,
	713, 714, 771, 715, 716, 717, 2819, 2820, 2821, 2838,
	2839, 2840, 0, 308, 309, 311, 310, 312, 313, 314,
	315, 0, 316, 317, 0, 0, 0, 2841, 0, 718,
	0, 0, 0, 318, 0, 319, 320, 321, 2059, 322,
	323, 324, 325, 326, 327, 328, 719, 720, 0, 329,
	721, 330, 722, 0, 723, 331, 332, 333, 334, 335,
	336, 337, 0, 0, 2044, 338, 724, 725, 726, 0,
	339, 340, 727, 0, 0, 0, 341, 342, 343, 344,
	345, 346, 347, 348, 2831, 0, 350, 351, 352, 349,
	353, 0, 354, 2827, 355, 356, 357, 358, 359, 360,
	361, 0, 362, 363, 364, 0, 365, 366, 367, 0,
	0, 0, 0, 0, 0, 0, 368, 369, 370, 371,
	372, 0, 373, 375, 728, 729, 0, 378, 380, 374,
	376, 0, 379, 377, 381, 0, 382, 383, 384, 0,
	0, 385, 386, 387, 0, 388, 389, 390, 0, 391,
	392, 393, 0, 394, 395, 730, 396, 397, 398, 400,
	402, 399, 401, 403, 404, 405, 406, 407, 731, 732,
	408, 0, 0, 0, 2832, 2833, 2834, 2835, 409, 410,
	411, 733, 0, 0, 2826, 412, 0, 413, 414, 415,
	0, 416, 417, 0, 0, 418, 419, 420, 734, 735,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 0,
	430, 736, 0, 737, 431, 0, 432, 433, 434, 435,
	436, 437, 438, 738, 739, 740, 531, 0, 439, 440,
	441, 0, 442, 443, 444, 445, 446, 0, 0, 0,
	0, 447, 448, 449, 0, 0, 741, 450, 532, 451,
	742, 743, 0, 744, 0, 452, 453, 455, 0, 745,
	0, 454, 456, 457, 0, 458, 0, 2836, 2837, 459,
	460, 461, 462, 463, 464, 0, 465, 467, 466, 0,
	469, 746, 468, 0, 470, 471, 0, 0, 472, 473,
	474, 475, 476, 477, 480, 0, 0, 478, 479, 481,
	482, 2829, 483, 484, 486, 489, 485, 487, 488, 490,
	503, 504, 491, 492, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 506, 0, 505, 0, 507, 508,
	509, 510, 511, 518, 520, 521, 516, 517, 519, 522,
	523, 525, 513, 514, 515, 0, 524, 512, 0, 0,
	0, 526, 527, 528, 529, 0, 747, 530, 748, 533,
	534, 0, 0, 535, 0, 536, 0, 0, 538, 539,
	540, 0, 0, 541, 542, 749, 0, 543, 0, 750,
	544, 545, 537, 546, 547, 548, 549, 550, 551, 552,
	553, 554, 555, 0, 556, 557, 751, 558, 559, 560,
	752, 561, 562, 563, 753, 564, 754, 565, 566, 0,
	567, 568, 569, 0, 570, 571, 572, 573, 574, 575,
	576, 577, 755, 578, 579, 581, 580, 582, 0, 583,
	0, 584, 585, 586, 0, 0, 0, 0, 0, 587,
	588, 590, 0, 591, 592, 593, 594, 589, 595, 596,
	597, 598, 599, 600, 0, 602, 603, 601, 604, 605,
	0, 606, 607, 608, 609, 610, 756, 611, 2830, 612,
	613, 620, 621, 622, 614, 615, 616, 623, 624, 625,
	626, 627, 629, 628, 0, 631, 632, 630, 633, 634,
	635, 0, 636, 757, 637, 617, 618, 638, 639, 0,
	640, 641, 642, 643, 644, 645, 646, 758, 0, 647,
	0, 648, 649, 650, 651, 652, 653, 655, 619, 656,
	661, 662, 759, 657, 658, 659, 660, 760, 664, 665,
	666, 667, 0, 668, 669, 2043, 663, 654, 0, 670,
	671, 672, 673, 674, 675, 0, 676, 677, 0, 678,
	761, 762, 763, 764, 0, 690, 0, 679, 681, 682,
	683, 684, 765, 685, 766, 0, 686, 687, 688, 689,
	680, 691, 692, 0, 0, 693, 694, 696, 698, 699,
	695, 697, 700, 0, 701, 0, 0, 702, 703, 704,
	767, 768, 769, 0, 706, 705, 707, 708, 709, 770,
	710, 711, 712, 0, 0, 0, 0, 713, 714, 771,
	715, 716, 717, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1208, 0, 1674, 2816, 2817, 2818, 2842, 2828,
	2822, 0, 2824, 2825, 2823, 2810, 2811, 2812, 2813, 2814,
	2815, 308, 309, 311, 310, 312, 313, 314, 315, 0,
	316, 317, 0, 0, 0, 0, 0, 718, 0, 0,
	0, 318, 0, 319, 320, 321, 1330, 322, 323, 324,
	325, 326, 327, 328, 719, 720, 0, 329, 721, 330,
	722, 0, 723, 331, 332, 333, 334, 335, 336, 337,
	0, 0, 0, 338, 724, 725, 726, 0, 339, 340,
	727, 0, 1638, 0, 341, 342, 343, 344, 345, 346,
	347, 348, 0, 0, 350, 351, 352, 349, 353, 0,
	354, 0, 355, 356, 357, 358, 359, 360, 361, 0,
	362, 363, 364, 1331, 365, 366, 367, 0, 0, 0,
	0, 0, 0, 0, 368, 369, 370, 371, 372, 0,
	373, 375, 728, 729, 0, 378, 380, 374, 376, 0,
	379, 377, 381, 0, 382, 383, 384, 0, 0, 385,
	386, 387, 0, 388, 389, 390, 0, 391, 392, 393,
	0, 394, 395, 730, 396, 397, 398, 400, 402, 399,
	401, 403, 404, 405, 406, 407, 731, 732, 408, 0,
	305, 0, 0, 0, 0, 0, 409, 410, 411, 733,
	0, 0, 0, 412, 0, 413, 414, 415, 0, 416,
	417, 0, 1332, 418, 419, 420, 734, 735, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 0, 430, 736,
	0, 737, 431, 0, 432, 433, 434, 435, 436, 437,
	438, 738, 739, 740, 531, 1334, 439, 440, 441, 0,
	442, 443, 444, 445, 446, 0, 0, 0, 0, 447,
	448, 449, 0, 1333, 741, 450, 532, 451, 742, 743,
	0, 744, 0, 452, 453, 455, 1335, 745, 1336, 454,
	456, 457, 1337, 458, 0, 0, 0, 459, 460, 461,
	462, 463, 464, 0, 465, 467, 466, 0, 469, 746,
	468, 1338, 470, 471, 1339, 0, 472, 473, 474, 475,
	476, 477, 480, 0, 0, 478, 479, 481, 482, 0,
	483, 484, 486, 489, 485, 487, 488, 490, 503, 504,
	491, 492, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 506, 0, 505, 1340, 507, 508, 509, 510,
	511, 518, 520, 521, 516, 517, 519, 522, 523, 525,
	513, 514, 515, 1341, 524, 512, 0, 0, 1342, 526,
	527, 528, 529, 0, 747, 530, 748, 533, 534, 0,
	0, 535, 0, 536, 0, 0, 538, 539, 540, 0,
	0, 541, 542, 749, 1343, 543, 1344, 750, 544, 545,
	537, 546, 547, 548, 549, 550, 551, 552, 553, 554,
	555, 0, 556, 557, 751, 558, 559, 560, 752, 561,
	562, 563, 753, 564, 754, 565, 566, 0, 567, 568,
	569, 0, 570, 571, 572, 573, 574, 575, 576, 577,
	755, 578, 579, 581, 580, 582, 0, 583, 0, 584,
	585, 586, 0, 0, 0, 0, 0, 587, 588, 590,
	0, 591, 592, 593, 594, 589, 595, 596, 597, 598,
	599, 600, 0, 602, 603, 601, 604, 605, 1345, 606,
	607, 608, 609, 610, 756, 611, 0, 612, 613, 620,
	621, 622, 614, 615, 616, 623, 624, 625, 626, 627,
	629, 628, 261, 631, 632, 630, 633, 634, 635, 0,
	636, 757, 637, 617, 618, 638, 639, 1346, 640, 641,
	642, 643, 644, 645, 646, 758, 0, 647, 0, 648,
	649, 650, 651, 652, 653, 655, 619, 656, 661, 662,
	759, 657, 658, 659, 660, 760, 664, 665, 666, 667,
	0, 668, 669, 0, 663, 654, 263, 670, 671, 672,
	673, 674, 675, 0, 676, 677, 0, 678, 761, 762,
	763, 764, 0, 690, 0, 679, 681, 682, 683, 684,
	765, 685, 766, 0, 686, 687, 688, 689, 680, 691,
	692, 0, 0, 693, 694, 696, 698, 699, 695, 697,
	700, 0, 701, 0, 0, 702, 703, 704, 1800, 768,
	769, 0, 706, 705, 707, 708, 709, 770, 710, 711,
	712, 0, 0, 0, 255, 713, 714, 771, 715, 716,
	717, 0, 1797, 256, 1674, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 308, 309, 311, 310, 312, 313, 314, 315, 0,
	316, 317, 0, 209, 0, 0, 0, 718, 0, 0,
	0, 318, 0, 319, 320, 321, 1330, 322, 323, 324,
	325, 326, 327, 328, 719, 720, 0, 329, 721, 330,
	722, 0, 723, 331, 332, 333, 334, 335, 336, 337,
	0, 0, 0, 338, 724, 725, 726, 0, 339, 340,
	727, 0, 1638, 0, 341, 342, 343, 344, 345, 346,
	347, 348, 0, 0, 350, 351, 352, 349, 353, 0,
	354, 0, 355, 356, 357, 358, 359, 360, 361, 0,
	362, 363, 364, 1331, 365, 366, 367, 0, 0, 0,
	0, 0, 0, 0, 368, 369, 370, 371, 372, 0,
	373, 375, 728, 729, 0, 378, 380, 374, 376, 0,
	379, 377, 381, 0, 382, 383, 384, 0, 0, 385,
	386, 387, 0, 388, 389, 390, 0, 391, 392, 393,
	0, 394, 395, 730, 396, 397, 398, 400, 402, 399,
	401, 403, 404, 405, 406, 407, 731, 732, 408, 0,
	305, 0, 0, 0, 0, 0, 409, 410, 411, 733,
	0, 0, 0, 412, 0, 413, 414, 415, 0, 416,
	417, 0, 1332, 418, 419, 420, 734, 735, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 0, 430, 736,
	0, 737, 431, 0, 432, 433, 434, 435, 436, 437,
	438, 738, 739, 740, 531, 1334, 439, 440, 441, 0,
	442, 443, 444, 445, 446, 0, 0, 0, 0, 447,
	448, 449, 0, 1333, 741, 450, 532, 451, 742, 743,
	0, 744, 0, 452, 453, 455, 1335, 745, 1336, 454,
	456, 457, 1337, 458, 0, 0, 0, 459, 460, 461,
	462, 463, 464, 0, 465, 467, 466, 0, 469, 746,
	468, 1338, 470, 471, 1339, 0, 472, 473, 474, 475,
	476, 477, 480, 0, 0, 478, 479, 481, 482, 0,
	483, 484, 486, 489, 485, 487, 488, 490, 503, 504,
	491, 492, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 506, 0, 505, 1340, 507, 508, 509, 510,
	511, 518, 520, 521, 516, 517, 519, 522, 523, 525,
	513, 514, 515, 1341, 524, 512, 0, 0, 1342, 526,
	527, 528, 529, 0, 747, 530, 748, 533, 534, 0,
	0, 535, 0, 536, 0, 0, 538, 539, 540, 0,
	0, 541, 542, 749, 1343, 543, 1344, 750, 544, 545,
	537, 546, 547, 548, 549, 550, 551, 552, 553, 554,
	555, 0, 556, 557, 751, 558, 559, 560, 752, 561,
	562, 563, 753, 564, 754, 565, 566, 0, 567, 568,
	569, 0, 570, 571, 572, 573, 574, 575, 576, 577,
	755, 578, 579, 581, 580, 582, 0, 583, 0, 584,
	585, 586, 0, 0, 0, 0, 0, 587, 588, 590,
	0, 591, 592, 593, 594, 589, 595, 596, 597, 598,
	599, 600, 0, 602, 603, 601, 604, 605, 1345, 606,
	607, 608, 609, 610, 756, 611, 0, 612, 613, 620,
	621, 622, 614, 615, 616, 623, 624, 625, 626, 627,
	629, 628, 261, 631, 632, 630, 633, 634, 635, 0,
	636, 757, 637, 617, 618, 638, 639, 1346, 640, 641,
	642, 643, 644, 645, 646, 758, 0, 647, 0, 648,
	649, 650, 651, 652, 653, 655, 619, 656, 661, 662,
	759, 657, 658, 659, 660, 760, 664, 665, 666, 667,
	0, 668, 669, 0, 663, 654, 263, 670, 671, 672,
	673, 674, 675, 0, 676, 677, 0, 678, 761, 762,
	763, 764, 0, 690, 0, 679, 681, 682, 683, 684,
	765, 685, 766, 0, 686, 687, 688, 689, 680, 691,
	692, 0, 0, 693, 694, 696, 698, 699, 695, 697,
	700, 0, 701, 0, 0, 702, 703, 704, 1800, 768,
	769, 0, 706, 705, 707, 708, 709, 770, 710, 711,
	712, 0, 0, 0, 255, 713, 714, 771, 715, 716,
	717, 1674, 1673, 256, 0, 0, 0, 1671, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 308, 309,
	311, 310, 312, 313, 314, 315, 0, 316, 317, 0,
	0, 0, 0, 209, 718, 0, 0, 0, 318, 0,
	319, 320, 321, 1330, 322, 323, 324, 325, 326, 327,
	328, 719, 720, 0, 329, 721, 330, 722, 0, 723,
	331, 332, 333, 334, 335, 336, 337, 0, 0, 0,
	338, 724, 725, 726, 0, 339, 340, 727, 0, 1638,
	0, 341, 342, 343, 344, 345, 346, 347, 348, 0,
	0, 350, 351, 352, 349, 353, 0, 354, 0, 355,
	356, 357, 358, 359, 360, 361, 0, 362, 363, 364,
	1331, 365, 366, 367, 0, 0, 0, 0, 0, 0,
	0, 368, 369, 370, 371, 372, 0, 373, 375, 728,
	729, 0, 378, 380, 374, 376, 0, 379, 377, 381,
	0, 382, 383, 384, 0, 0, 385, 386, 387, 0,
	388, 389, 390, 0, 391, 392, 393, 0, 394, 395,
	730, 396, 397, 398, 400, 402, 399, 401, 403, 404,
	405, 406, 407, 731, 732, 408, 0, 305, 0, 0,
	0, 0, 0, 409, 410, 411, 733, 0, 0, 0,
	412, 0, 413, 414, 415, 0, 416, 417, 0, 1332,
	418, 419, 420, 734, 735, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 0, 430, 736, 0, 737, 431,
	0, 432, 433, 434, 435, 436, 437, 438, 738, 739,
	740, 531, 1334, 439, 440, 441, 0, 442, 443, 444,
	445, 446, 0, 0, 0, 0, 447, 448, 449, 0,
	1333, 741, 450, 532, 451, 742, 743, 0, 744, 0,
	452, 453, 455, 1335, 745, 1336, 454, 456, 457, 1337,
	458, 0, 0, 0, 459, 460, 461, 462, 463, 464,
	0, 465, 467, 466, 0, 469, 746, 468, 1338, 470,
	471, 1339, 0, 472, 473, 474, 475, 476, 477, 480,
	0, 0, 478, 479, 481, 482, 0, 483, 484, 486,
	489, 485, 487, 488, 490, 503, 504, 491, 492, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 506,
	0, 505, 1340, 507, 508, 509, 510, 511, 518, 520,
	521, 516, 517, 519, 522, 523, 525, 513, 514, 515,
	1341, 524, 512, 0, 0, 1342, 526, 527, 528, 529,
	0, 747, 530, 748, 533, 534, 0, 0, 535, 0,
	536, 0, 0, 538, 539, 540, 0, 0, 541, 542,
	749, 1343, 543, 1344, 750, 544, 545, 537, 546, 547,
	548, 549, 550, 551, 552, 553, 554, 555, 0, 556,
	557, 751, 558, 559, 560, 752, 561, 562, 563, 753,
	564, 754, 565, 566, 0, 567, 568, 569, 0, 570,
	571, 572, 573, 574, 575, 576, 577, 755, 578, 579,
	581, 580, 582, 0, 583, 0, 584, 585, 586, 0,
	0, 0, 0, 0, 587, 588, 590, 0, 591, 592,
	593, 594, 589, 595, 596, 597, 598, 599, 600, 0,
	602, 603, 601, 604, 605, 1345, 606, 607, 608, 609,
	610, 756, 611, 0, 612, 613, 620, 621, 622, 614,
	615, 616, 623, 624, 625, 626, 627, 629, 628, 0,
	631, 632, 630, 633, 634, 635, 0, 636, 757, 637,
	617, 618, 638, 639, 1346, 640, 641, 642, 643, 644,
	645, 646, 758, 0, 647, 0, 648, 649, 650, 651,
	652, 653, 655, 619, 656, 661, 662, 759, 657, 658,
	659, 660, 760, 664, 665, 666, 667, 0, 668, 669,
	0, 663, 654, 0, 670, 671, 672, 673, 674, 675,
	0, 676, 677, 0, 678, 761, 762, 763, 764, 0,
	690, 0, 679, 681, 682, 683, 684, 765, 685, 766,
	0, 686, 687, 688, 689, 680, 691, 692, 0, 0,
	693, 694, 696, 698, 699, 695, 697, 700, 0, 701,
	0, 0, 702, 703, 704, 767, 768, 769, 0, 706,
	705, 707, 708, 709, 770, 710, 711, 712, 0, 0,
	0, 0, 713, 714, 771, 715, 716, 717, 1674, 1673,
	0, 0, 0, 0, 1671, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 308, 309, 311, 310, 312,
	313, 314, 315, 0, 316, 317, 0, 0, 0, 0,
	1824, 718, 0, 0, 0, 318, 0, 319, 320, 321,
	1330, 322, 323, 324, 325, 326, 327, 328, 719, 720,
	0, 329, 721, 330, 722, 0, 723, 331, 332, 333,
	334, 335, 336, 337, 0, 0, 0, 338, 724, 725,
	726, 0, 339, 340, 727, 0, 1638, 0, 341, 342,
	343, 344, 345, 346, 347, 348, 0, 0, 350, 351,
	352, 349, 353, 0, 354, 0, 355, 356, 357, 358,
	359, 360, 361, 0, 362, 363, 364, 1331, 365, 366,
	367, 0, 0, 0, 0, 0, 0, 0, 368, 369,
	370, 371, 372, 0, 373, 375, 728, 729, 0, 378,
	380, 374, 376, 0, 379, 377, 381, 0, 382, 383,
	384, 0, 0, 385, 386, 387, 0, 388, 389, 390,
	0, 391, 392, 393, 0, 394, 395, 730, 396, 397,
	398, 400, 402, 399, 401, 403, 404, 405, 406, 407,
	731, 732, 408, 0, 305, 0, 0, 0, 0, 0,
	409, 410, 411, 733, 0, 0, 0, 412, 0, 413,
	414, 415, 0, 416, 417, 0, 1332, 418, 419, 420,
	734, 735, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 0, 430, 736, 0, 737, 431, 0, 432, 433,
	434, 435, 436, 437, 438, 738, 739, 740, 531, 1334,
	439, 440, 441, 0, 442, 443, 444, 445, 446, 0,
	0, 0, 0, 447, 448, 449, 0, 1333, 741, 450,
	532, 451, 742, 743, 0, 744, 0, 452, 453, 455,
	1335, 745, 1336, 454, 456, 457, 1337, 458, 0, 0,
	0, 459, 460, 461, 462, 463, 464, 0, 465, 467,
	466, 0, 469, 746, 468, 1338, 470, 471, 1339, 0,
	472, 473, 474, 475, 476, 477, 480, 0, 0, 478,
	479, 481, 482, 0, 483, 484, 486, 489, 485, 487,
	488, 490, 503, 504, 491, 492, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 506, 0, 505, 1340,
	507, 508, 509, 510, 511, 518, 520, 521, 516, 517,
	519, 522, 523, 525, 513, 514, 515, 1341, 524, 512,
	0, 0, 1342, 526, 527, 528, 529, 0, 747, 530,
	748, 533, 534, 0, 0, 535, 0, 536, 0, 0,
	538, 539, 540, 0, 0, 541, 542, 749, 1343, 543,
	1344, 750, 544, 545, 537, 546, 547, 548, 549, 550,
	551, 552, 553, 554, 555, 0, 556, 557, 751, 558,
	559, 560, 752, 561, 562, 563, 753, 564, 754, 565,
	566, 0, 567, 568, 569, 0, 570, 571, 572, 573,
	574, 575, 576, 577, 755, 578, 579, 581, 580, 582,
	0, 583, 0, 584, 585, 586, 0, 0, 0, 0,
	0, 587, 588, 590, 0, 591, 592, 593, 594, 589,
	595, 596, 597, 598, 599, 600, 0, 602, 603, 601,
	604, 605, 1345, 606, 607, 608, 609, 610, 756, 611,
	0, 612, 613, 620, 621, 622, 614, 615, 616, 623,
	624, 625, 626, 627, 629, 628, 0, 631, 632, 630,
	633, 634, 635, 0, 636, 757, 637, 617, 618, 638,
	639, 1346, 640, 641, 642, 643, 644, 645, 646, 758,
	0, 647, 0, 648, 649, 650, 651, 652, 653, 655,
	619, 656, 661, 662, 759, 657, 658, 659, 660, 760,
	664, 665, 666, 667, 0, 668, 669, 0, 663, 654,
	0, 670, 671, 672, 673, 674, 675, 0, 676, 677,
	0, 678, 761, 762, 763, 764, 0, 690, 0, 679,
	681, 682, 683, 684, 765, 685, 766, 0, 686, 687,
	688, 689, 680, 691, 692, 0, 0, 693, 694, 696,
	698, 699, 695, 697, 700, 0, 701, 0, 0, 702,
	703, 704, 767, 768, 769, 0, 706, 705, 707, 708,
	709, 770, 710, 711, 712, 0, 0, 0, 0, 713,
	714, 771, 715, 716, 717, 1674, 1673, 0, 0, 0,
	0, 1671, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 308, 309, 311, 310, 312, 313, 314, 315,
	0, 316, 317, 0, 0, 0, 0, 4034, 718, 0,
	0, 0, 318, 0, 319, 320, 321, 1330, 322, 323,
	324, 325, 326, 327, 328, 719, 720, 0, 329, 721,
	330, 722, 0, 723, 331, 332, 333, 334, 335, 336,
	337, 0, 0, 0, 338, 724, 725, 726, 0, 339,
	340, 727, 0, 1638, 0, 341, 342, 343, 344, 345,
	346, 347, 348, 0, 0, 350, 351, 352, 349, 353,
	0, 354, 0, 355, 356, 357, 358, 359, 360, 361,
	0, 362, 363, 364, 1331, 365, 366, 367, 0, 0,
	0, 0, 0, 0, 0, 368, 369, 370, 371, 372,
	0, 373, 375, 728, 729, 0, 378, 380, 374, 376,
	0, 379, 377, 381, 0, 382, 383, 384, 0, 0,
	385, 386, 387, 0, 388, 389, 390, 0, 391, 392,
	393, 0, 394, 395, 730, 396, 397, 398, 400, 402,
	399, 401, 403, 404, 405, 406, 407, 731, 732, 408,
	0, 305, 0, 0, 0, 0, 0, 409, 410, 411,
	733, 0, 0, 0, 412, 0, 413, 414, 415, 0,
	416, 417, 0, 1332, 418, 419, 420, 734, 735, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 0, 430,
	736, 0, 737, 431, 0, 432, 433, 434, 435, 436,
	437, 438, 738, 739, 740, 531, 1334, 439, 440, 441,
	0, 442, 443, 444, 445, 446, 0, 0, 0, 0,
	447, 448, 449, 0, 1333, 741, 450, 532, 451, 742,
	743, 0, 744, 0, 452, 453, 455, 1335, 745, 1336,
	454, 456, 457, 1337, 458, 0, 0, 0, 459, 460,
	461, 462, 463, 464, 0, 465, 467, 466, 0, 469,
	746, 468, 1338, 470, 471, 1339, 0, 472, 473, 474,
	475, 476, 477, 480, 0, 0, 478, 479, 481, 482,
	0, 483, 484, 486, 489, 485, 487, 488, 490, 503,
	504, 491, 492, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 506, 0, 505, 1340, 507, 508, 509,
	510, 511, 518, 520, 521, 516, 517, 519, 522, 523,
	525, 513, 514, 515, 1341, 524, 512, 0, 0, 1342,
	526, 527, 528, 529, 0, 747, 530, 748, 533, 534,
	0, 0, 535, 0, 536, 0, 0, 538, 539, 540,
	0, 0, 541, 542, 749, 1343, 543, 1344, 750, 544,
	545, 537, 546, 547, 548, 549, 550, 551, 552, 553,
	554, 555, 0, 556, 557, 751, 558, 559, 560, 752,
	561, 562, 563, 753, 564, 754, 565, 566, 0, 567,
	568, 569, 0, 570, 571, 572, 573, 574, 575, 576,
	577, 755, 578, 579, 581, 580, 582, 0, 583, 0,
	584, 585, 586, 0, 0, 0, 0, 0, 587, 588,
	590, 0, 591, 592, 593, 2575, 589, 595, 596, 597,
	598, 599, 600, 0, 602, 603, 601, 604, 605, 1345,
	606, 607, 608, 609, 610, 756, 611, 0, 612, 613,
	620, 621, 622, 614, 615, 616, 623, 624, 625, 626,
	627, 629, 628, 0, 631, 632, 630, 633, 634, 635,
	0, 636, 757, 637, 617, 618, 638, 639, 1346, 640,
	641, 642, 643, 644, 645, 646, 758, 0, 647, 0,
	648, 649, 650, 651, 652, 653, 655, 619, 656, 661,
	662, 759, 657, 658, 659, 660, 760, 664, 665, 666,
	667, 0, 668, 669, 0, 663, 654, 0, 670, 671,
	672, 673, 674, 675, 0, 676, 677, 0, 678, 761,
	762, 763, 764, 0, 690, 0, 679, 681, 682, 683,
	684, 765, 685, 766, 0, 686, 687, 688, 689, 680,
	691, 692, 0, 0, 693, 694, 696, 698, 699, 695,
	697, 700, 0, 701, 0, 0, 702, 703, 704, 767,
	768, 769, 0, 706, 705, 707, 708, 709, 770, 710,
	711, 712, 0, 0, 0, 0, 713, 714, 771, 715,
	716, 717, 1674, 2480, 0, 0, 0, 0, 2481, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 308,
	309, 311, 310, 312, 313, 314, 315, 0, 316, 317,
	0, 0, 0, 0, 1824, 718, 0, 0, 0, 318,
	0, 319, 320, 321, 1330, 322, 323, 324, 325, 326,
	327, 328, 719, 720, 0, 329, 721, 330, 722, 0,
	723, 331, 332, 333, 334, 335, 336, 337, 0, 0,
	0, 338, 724, 725, 726, 0, 339, 340, 727, 0,
	1638, 0, 341, 342, 343, 344, 345, 346, 347, 348,
	0, 0, 350, 351, 352, 349, 353, 0, 354, 0,
	355, 356, 357, 358, 359, 360, 361, 0, 362, 363,
	364, 1331, 365, 366, 367, 0, 0, 0, 0, 0,
	0, 0, 368, 369, 370, 371, 372, 0, 373, 375,
	728, 729, 0, 378, 380, 374, 376, 0, 379, 377,
	381, 0, 382, 383, 384, 0, 0, 385, 386, 387,
	0, 388, 389, 390, 0, 391, 392, 393, 0, 394,
	395, 730, 396, 397, 398, 400, 402, 399, 401, 403,
	404, 405, 406, 407, 731, 732, 408, 0, 305, 0,
	0, 0, 0, 0, 409, 410, 411, 733, 0, 0,
	0, 412, 0, 413, 414, 415, 0, 416, 417, 0,
	1332, 418, 419, 420, 734, 735, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 0, 430, 736, 0, 737,
	431, 0, 432, 433, 434, 435, 436, 437, 438, 738,
	739, 740, 531, 1334, 439, 440, 441, 0, 442, 443,
	444, 445, 446, 0, 0, 0, 0, 447, 448, 449,
	0, 1333, 741, 450, 532, 451, 742, 743, 0, 744,
	0, 452, 453, 455, 1335, 745, 1336, 454, 456, 457,
	1337, 458, 0, 0, 0, 459, 460, 461, 462, 463,
	464, 0, 2479, 467, 466, 0, 469, 746, 468, 1338,
	470, 471, 1339, 0, 472, 473, 474, 475, 476, 477,
	480, 0, 0, 478, 479, 481, 482, 0, 483, 484,
	486, 489, 485, 487, 488, 490, 503, 504, 491, 492,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	506, 0, 505, 1340, 507, 508, 509, 510, 511, 518,
	520, 521, 516, 517, 519, 522, 523, 525, 513, 514,
	515, 1341, 524, 512, 0, 0, 1342, 526, 527, 528,
	529, 0, 747, 530, 748, 533, 534, 0, 0, 535,
	0, 536, 0, 0, 538, 539, 540, 0, 0, 541,
	542, 749, 1343, 543, 1344, 750, 544, 545, 537, 546,
	547, 548, 549, 550, 551, 552, 553, 554, 555, 0,
	556, 557, 751, 558, 559, 560, 752, 561, 562, 563,
	753, 564, 754, 565, 566, 0, 567, 568, 569, 0,
	570, 571, 572, 573, 574, 575, 576, 577, 755, 578,
	579, 581, 580, 582, 0, 583, 0, 584, 585, 586,
	0, 0, 0, 0, 0, 587, 588, 590, 0, 591,
	592, 593, 594, 589, 595, 596, 597, 598, 599, 600,
	0, 602, 603, 601, 604, 605, 1345, 606, 607, 608,
	609, 610, 756, 611, 0, 612, 613, 620, 621, 622,
	614, 615, 616, 623, 624, 625, 626, 627, 629, 628,
	0, 631, 632, 630, 633, 634, 635, 0, 636, 757,
	637, 617, 618, 638, 639, 1346, 640, 641, 642, 643,
	644, 645, 646, 758, 0, 647, 0, 648, 649, 650,
	651, 652, 653, 655, 619, 656, 661, 662, 759, 657,
	658, 659, 660, 760, 664, 665, 666, 667, 0, 668,
	669, 0, 663, 654, 0, 670, 671, 672, 673, 674,
	675, 0, 676, 677, 0, 678, 761, 762, 763, 764,
	0, 690, 0, 679, 681, 682, 683, 684, 765, 685,
	766, 0, 686, 687, 688, 689, 680, 691, 692, 0,
	0, 693, 694, 696, 698, 699, 695, 697, 700, 0,
	701, 0, 0, 702, 703, 704, 767, 768, 769, 0,
	706, 705, 707, 708, 709, 770, 710, 711, 712, 0,
	0, 0, 0, 713, 714, 771, 715, 716, 717, 1674,
	1673, 0, 0, 0, 0, 1671, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 308, 309, 311, 310,
	312, 313, 314, 315, 0, 316, 317, 0, 0, 0,
	0, 1824, 718, 0, 0, 0, 318, 0, 319, 320,
	321, 1330, 322, 323, 324, 325, 326, 327, 328, 719,
	720, 0, 329, 721, 330, 722, 0, 723, 331, 332,
	333, 334, 335, 336, 337, 0, 0, 0, 338, 724,
	725, 726, 0, 339, 340, 727, 0, 1638, 0, 341,
	342, 343, 344, 345, 346, 347, 348, 0, 0, 350,
	351, 352, 349, 353, 0, 354, 0, 355, 356, 357,
	358, 359, 360, 361, 0, 362, 363, 364, 1331, 365,
	366, 367, 0, 0, 0, 0, 0, 0, 0, 368,
	369, 370, 371, 372, 0, 373, 375, 728, 729, 0,
	378, 380, 374, 376, 0, 379, 377, 381, 0, 382,
	383, 384, 0, 0, 385, 386, 387, 0, 388, 389,
	390, 0, 391, 392, 393, 0, 394, 395, 730, 396,
	397, 398, 400, 402, 399, 401, 403, 404, 405, 406,
	407, 731, 732, 408, 0, 305, 0, 0, 0, 0,
	0, 409, 410, 411, 733, 0, 0, 0, 412, 0,
	413, 414, 415, 0, 416, 417, 0, 1332, 418, 419,
	420, 734, 735, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 0, 430, 736, 0, 737, 431, 0, 432,
	433, 434, 435, 436, 437, 438, 738, 739, 740, 531,
	1334, 439, 440, 441, 0, 442, 443, 444, 445, 446,
	0, 0, 0, 0, 447, 448, 449, 0, 1333, 741,
	450, 532, 451, 742, 743, 0, 744, 0, 452, 453,
	455, 1335, 745, 1336, 454, 456, 457, 1337, 458, 0,
	0, 0, 459, 460, 461, 462, 463, 464, 0, 465,
	467, 466, 0, 469, 746, 468, 1338, 470, 471, 1339,
	0, 472, 473, 474, 475, 476, 477, 480, 0, 0,
	478, 479, 481, 482, 0, 483, 484, 486, 489, 485,
	487, 488, 490, 503, 504, 491, 492, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 506, 0, 505,
	1340, 507, 508, 509, 510, 511, 518, 520, 521, 516,
	517, 519, 522, 523, 525, 513, 514, 515, 1341, 524,
	512, 0, 0, 1342, 526, 527, 528, 529, 0, 747,
	530, 748, 533, 534, 0, 0, 535, 0, 536, 0,
	0, 538, 539, 540, 0, 0, 541, 542, 749, 1343,
	543, 1344, 750, 544, 545, 537, 546, 547, 548, 549,
	550, 551, 552, 553, 554, 555, 0, 556, 557, 751,
	558, 559, 560, 752, 561, 562, 563, 753, 564, 754,
	565, 566, 0, 567, 568, 569, 0, 570, 571, 572,
	573, 574, 575, 576, 577, 755, 578, 579, 581, 580,
	582, 0, 583, 0, 584, 585, 586, 0, 0, 0,
	0, 0, 587, 588, 590, 0, 591, 592, 593, 594,
	589, 595, 596, 597, 598, 599, 600, 0, 602, 603,
	601, 604, 605, 1345, 606, 607, 608, 609, 610, 756,
	611, 0, 612, 613, 620, 621, 622, 614, 615, 616,
	623, 624, 625, 626, 627, 629, 628, 0, 631, 632,
	630, 633, 634, 635, 0, 636, 757, 637, 617, 618,
	638, 639, 1346, 640, 641, 642, 643, 644, 645, 646,
	758, 0, 647, 0, 648, 649, 650, 651, 652, 653,
	655, 619, 656, 661, 662, 759, 657, 658, 659, 660,
	760, 664, 665, 666, 667, 0, 668, 669, 0, 663,
	654, 0, 670, 671, 672, 673, 674, 675, 0, 676,
	677, 0, 678, 761, 762, 763, 764, 0, 690, 0,
	679, 681, 682, 683, 684, 765, 685, 766, 0, 686,
	687, 688, 689, 680, 691, 692, 0, 0, 693, 694,
	696, 698, 699, 695, 697, 700, 0, 701, 0, 0,
	702, 703, 704, 767, 768, 769, 0, 706, 705, 707,
	708, 709, 770, 710, 711, 712, 0, 0, 0, 0,
	713, 714, 771, 715, 716, 717, 1208, 0, 302, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 308, 309, 311, 310, 312,
	313, 314, 315, 0, 316, 317, 0, 0, 1806, 0,
	0, 718, 0, 0, 0, 318, 0, 319, 320, 321,
	0, 322, 323, 324, 325, 326, 327, 328, 719, 720,
	0, 329, 721, 330, 722, 0, 723, 331, 332, 333,
	334, 335, 336, 337, 0, 0, 0, 338, 724, 725,
	726, 0, 339, 340, 727, 0, 0, 0, 341, 342,
	343, 344, 345, 346, 347, 348, 0, 0, 350, 351,
	352, 349, 353, 0, 354, 0, 355, 356, 357, 358,
	359, 360, 361, 0, 362, 363, 364, 0, 365, 366,
	367, 0, 0, 0, 0, 0, 0, 0, 368, 369,
	370, 371, 372, 0, 373, 375, 728, 729, 0, 378,
	380, 374, 376, 0, 379, 377, 381, 0, 382, 383,
	384, 0, 0, 385, 386, 387, 0, 388, 389, 390,
	0, 391, 392, 393, 0, 394, 395, 730, 396, 397,
	398, 400, 402, 399, 401, 403, 404, 405, 406, 407,
	731, 732, 408, 0, 0, 0, 0, 0, 0, 0,
	409, 410, 411, 733, 0, 0, 0, 412, 0, 413,
	414, 415, 0, 416, 417, 0, 0, 418, 419, 420,
	734, 735, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 0, 430, 736, 0, 737, 431, 0, 432, 433,
	434, 435, 436, 437, 438, 738, 739, 740, 531, 0,
	439, 440, 441, 0, 442, 443, 444, 445, 446, 0,
	0, 0, 0, 447, 448, 449, 0, 0, 741, 450,
	532, 451, 742, 743, 0, 744, 0, 452, 453, 455,
	0, 745, 0, 454, 456, 457, 0, 458, 0, 0,
	0, 459, 460, 461, 462, 463, 464, 0, 465, 467,
	466, 0, 469, 746, 468, 0, 470, 471, 0, 0,
	472, 473, 474, 475, 476, 477, 480, 0, 0, 478,
	479, 481, 482, 0, 483, 484, 486, 489, 485, 487,
	488, 490, 503, 504, 491, 492, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 506, 0, 505, 0,
	507, 508, 509, 510, 511, 518, 520, 521, 516, 517,
	519, 522, 523, 525, 513, 514, 515, 0, 524, 512,
	0, 0, 0, 526, 527, 528, 529, 0, 747, 530,
	748, 533, 534, 0, 0, 535, 0, 536, 0, 0,
	538, 539, 540, 0, 0, 541, 542, 749, 0, 543,
	0, 750, 544, 545, 537, 546, 547, 548, 549, 550,
	551, 552, 553, 554, 555, 0, 556, 557, 751, 558,
	559, 560, 752, 561, 562, 563, 753, 564, 754, 565,
	566, 0, 567, 568, 569, 0, 570, 571, 572, 573,
	574, 575, 576, 577, 755, 578, 579, 581, 580, 582,
	0, 583, 0, 584, 585, 586, 0, 0, 0, 0,
	0, 587, 588, 590, 0, 591, 592, 593, 594, 589,
	595, 596, 597, 598, 599, 600, 0, 602, 603, 601,
	604, 605, 0, 606, 607, 608, 609, 610, 756, 611,
	0, 612, 613, 620, 621, 622, 614, 615, 616, 623,
	624, 625, 626, 627, 629, 628, 261, 631, 632, 630,
	633, 634, 635, 0, 636, 757, 637, 617, 618, 638,
	639, 0, 640, 641, 642, 643, 644, 645, 646, 758,
	0, 647, 0, 648, 649, 650, 651, 652, 653, 655,
	619, 656, 661, 662, 759, 657, 658, 659, 660, 760,
	664, 665, 666, 667, 0, 668, 669, 0, 663, 654,
	263, 670, 671, 672, 673, 674, 675, 0, 676, 677,
	0, 678, 761, 762, 763, 764, 0, 690, 0, 679,
	681, 682, 683, 684, 765, 685, 766, 0, 686, 687,
	688, 689, 680, 691, 692, 0, 0, 693, 694, 696,
	698, 699, 695, 697, 700, 0, 701, 0, 0, 702,
	703, 704, 1800, 768, 769, 0, 706, 705, 707, 708,
	709, 770, 710, 711, 712, 302, 0, 0, 255, 713,
	714, 771, 715, 716, 717, 0, 0, 256, 0, 0,
	0, 0, 308, 309, 311, 310, 312, 313, 314, 315,
	0, 316, 317, 0, 0, 0, 0, 0, 718, 0,
	0, 0, 318, 0, 319, 320, 321, 209, 322, 323,
	324, 325, 326, 327, 328, 719, 720, 0, 329, 721,
	330, 722, 0, 723, 331, 332, 333, 334, 335, 336,
	337, 0, 0, 0, 338, 724, 725, 726, 0, 339,
	340, 727, 0, 0, 0, 341, 342, 343, 344, 345,
	346, 347, 348, 0, 0, 350, 351, 352, 349, 353,
	0, 354, 0, 355, 356, 357, 358, 359, 360, 361,
	0, 362, 363, 364, 0, 365, 366, 367, 0, 0,
	0, 0, 0, 0, 0, 368, 369, 370, 371, 372,
	0, 373, 375, 728, 729, 0, 378, 380, 374, 376,
	0, 379, 377, 381, 0, 382, 383, 384, 0, 0,
	385, 386, 387, 0, 388, 389, 390, 0, 391, 392,
	393, 0, 394, 395, 730, 396, 397, 398, 400, 402,
	399, 401, 403, 404, 405, 406, 407, 731, 732, 408,
	0, 305, 0, 0, 0, 0, 0, 409, 410, 411,
	733, 0, 0, 0, 412, 0, 413, 414, 415, 0,
	416, 417, 0, 0, 418, 419, 420, 734, 735, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 0, 430,
	736, 0, 737, 431, 0, 432, 433, 434, 435, 436,
	437, 438, 738, 739, 740, 531, 0, 439, 440, 441,
	0, 442, 443, 444, 445, 446, 0, 0, 0, 306,
	447, 448, 449, 0, 0, 741, 450, 532, 451, 742,
	743, 0, 744, 0, 452, 453, 455, 0, 745, 0,
	454, 456, 457, 0, 458, 0, 0, 0, 459, 460,
	461, 462, 463, 464, 0, 465, 467, 466, 0, 469,
	746, 468, 0, 470, 471, 0, 0, 472, 473, 474,
	475, 476, 477, 480, 0, 0, 478, 479, 481, 482,
	0, 483, 484, 486, 489, 485, 487, 488, 490, 503,
	504, 491, 492, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 506, 0, 505, 0, 507, 508, 509,
	510, 511, 518, 520, 521, 516, 517, 519, 522, 523,
	525, 513, 514, 515, 0, 524, 512, 0, 307, 0,
	526, 527, 528, 529, 0, 747, 530, 748, 533, 534,
	0, 0, 535, 0, 536, 0, 0, 538, 539, 540,
	0, 0, 541, 542, 749, 0, 543, 0, 750, 544,
	545, 537, 546, 547, 548, 549, 550, 551, 552, 553,
	554, 555, 0, 556, 557, 751, 558, 559, 560, 752,
	561, 562, 563, 753, 564, 754, 565, 566, 0, 567,
	568, 569, 0, 570, 571, 572, 573, 574, 575, 576,
	577, 755, 578, 579, 581, 580, 582, 0, 583, 0,
	584, 585, 586, 0, 0, 0, 0, 0, 587, 588,
	590, 0, 591, 592, 593, 594, 589, 595, 596, 597,
	598, 599, 600, 0, 602, 603, 601, 604, 605, 0,
	606, 607, 608, 609, 610, 756, 611, 0, 612, 613,
	620, 621, 622, 614, 615, 616, 623, 624, 625, 626,
	627, 629, 628, 0, 631, 632, 630, 633, 634, 635,
	0, 636, 757, 637, 617, 618, 638, 639, 0, 640,
	641, 642, 643, 644, 645, 646, 758, 0, 647, 0,
	648, 649, 650, 651, 652, 653, 655, 619, 656, 661,
	662, 759, 657, 658, 659, 660, 760, 664, 665, 666,
	667, 0, 668, 669, 0, 663, 654, 0, 670, 671,
	672, 673, 674, 675, 0, 676, 677, 0, 678, 761,
	762, 763, 764, 0, 690, 0, 679, 681, 682, 683,
	684, 765, 685, 766, 0, 686, 687, 688, 689, 680,
	691, 692, 0, 0, 693, 694, 696, 698, 699, 695,
	697, 700, 0, 701, 0, 0, 702, 703, 704, 767,
	768, 769, 0, 706, 705, 707, 708, 709, 770, 710,
	711, 712, 302, 3284, 0, 0, 713, 714, 771, 715,
	716, 717, 0, 0, 0, 0, 0, 0, 0, 308,
	309, 311, 310, 312, 313, 314, 315, 0, 316, 317,
	0, 0, 0, 0, 0, 718, 0, 0, 0, 318,
	0, 319, 320, 321, 2177, 322, 323, 324, 325, 326,
	327, 328, 719, 720, 0, 329, 721, 330, 722, 0,
	723, 331, 332, 333, 334, 335, 336, 337, 0, 0,
	0, 338, 724, 725, 726, 0, 339, 340, 727, 0,
	0, 0, 341, 342, 343, 344, 345, 346, 347, 348,
	0, 0, 350, 351, 352, 349, 353, 0, 354, 0,
	355, 356, 357, 358, 359, 360, 361, 0, 362, 363,
	364, 0, 365, 366, 367, 0, 0, 0, 0, 0,
	0, 0, 368, 369, 370, 371, 372, 0, 373, 375,
	728, 729, 0, 378, 380, 374, 376, 0, 379, 377,
	381, 0, 382, 383, 384, 0, 0, 385, 386, 387,
	0, 388, 389, 390, 0, 391, 392, 393, 0, 394,
	395, 730, 396, 397, 398, 400, 402, 399, 401, 403,
	404, 405, 406, 407, 731, 732, 408, 0, 0, 0,
	0, 0, 0, 0, 409, 410, 411, 733, 0, 0,
	0, 412, 0, 413, 414, 415, 0, 416, 417, 0,
	0, 418, 419, 420, 734, 735, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 0, 430, 736, 0, 737,
	431, 0, 432, 433, 434, 435, 436, 437, 438, 738,
	739, 740, 531, 0, 439, 440, 441, 0, 442, 443,
	444, 445, 446, 0, 0, 0, 0, 447, 448, 449,
	0, 0, 741, 450, 532, 451, 742, 743, 0, 744,
	0, 452, 453, 455, 0, 745, 0, 454, 456, 457,
	0, 458, 0, 0, 0, 459, 460, 461, 462, 463,
	464, 0, 465, 467, 466, 0, 469, 746, 468, 0,
	470, 471, 0, 0, 472, 473, 474, 475, 476, 477,
	480, 0, 0, 478, 479, 481, 482, 0, 483, 484,
	486, 489, 485, 487, 488, 490, 503, 504, 491, 492,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	506, 0, 505, 0, 507, 508, 509, 510, 511, 518,
	520, 521, 516, 517, 519, 522, 523, 525, 513, 514,
	515, 0, 524, 512, 0, 0, 0, 526, 527, 528,
	529, 0, 747, 530, 748, 533, 534, 0, 0, 535,
	0, 536, 0, 0, 538, 539, 540, 0, 0, 541,
	542, 749, 0, 543, 0, 750, 544, 545, 537, 546,
	547, 548, 549, 550, 551, 552, 553, 554, 555, 0,
	556, 557, 751, 558, 559, 560, 752, 561, 562, 563,
	753, 564, 754, 565, 566, 0, 567, 568, 569, 0,
	570, 571, 572, 573, 574, 575, 576, 577, 755, 578,
	579, 581, 580, 582, 0, 583, 0, 584, 585, 586,
	0, 0, 0, 0, 0, 587, 588, 590, 0, 591,
	592, 593, 594, 589, 595, 596, 597, 598, 599, 600,
	0, 602, 603, 601, 604, 605, 0, 606, 607, 608,
	609, 610, 756, 611, 0, 612, 613, 620, 621, 622,
	614, 615, 616, 623, 624, 625, 626, 627, 629, 628,
	0, 631, 632, 630, 633, 634, 635, 0, 636, 757,
	637, 617, 618, 638, 639, 0, 640, 641, 642, 643,
	644, 645, 646, 758, 0, 647, 0, 648, 649, 650,
	651, 652, 653, 655, 619, 656, 661, 662, 759, 657,
	658, 659, 660, 760, 664, 665, 666, 667, 0, 668,
	669, 0, 663, 654, 0, 670, 671, 672, 673, 674,
	675, 0, 676, 677, 0, 678, 761, 762, 763, 764,
	0, 690, 0, 679, 681, 682, 683, 684, 765, 685,
	766, 0, 686, 687, 688, 689, 680, 691, 692, 0,
	0, 693, 694, 696, 698, 699, 695, 697, 700, 0,
	701, 0, 0, 702, 703, 704, 767, 768, 769, 0,
	706, 705, 707, 708, 709, 770, 710, 711, 712, 302,
	0, 0, 0, 713, 714, 771, 715, 716, 717, 0,
	0, 0, 0, 0, 0, 0, 308, 309, 311, 310,
	312, 313, 314, 315, 0, 316, 317, 0, 0, 0,
	0, 0, 718, 0, 0, 0, 318, 0, 319, 320,
	321, 5480, 322, 323, 324, 325, 326, 327, 328, 719,
	720, 0, 329, 721, 330, 722, 0, 723, 331, 332,
	333, 334, 335, 336, 337, 0, 0, 0, 338, 724,
	725, 726, 0, 339, 340, 727, 0, 0, 0, 341,
	342, 343, 344, 345, 346, 347, 348, 0, 0, 350,
	351, 352, 349, 353, 0, 354, 0, 355, 356, 357,
	358, 359, 360, 361, 0, 362, 363, 364, 0, 365,
	366, 367, 0, 0, 0, 0, 0, 0, 0, 368,
	369, 370, 371, 372, 0, 373, 375, 728, 729, 0,
	378, 380, 374, 376, 0, 379, 377, 381, 0, 382,
	383, 384, 0, 0, 385, 386, 387, 0, 388, 389,
	390, 0, 391, 392, 393, 0, 394, 395, 730, 396,
	397, 398, 400, 402, 399, 401, 403, 404, 405, 406,
	407, 731, 732, 408, 0, 305, 0, 0, 0, 0,
	0, 409, 410, 411, 733, 0, 0, 0, 412, 0,
	413, 414, 415, 0, 416, 417, 0, 0, 418, 419,
	420, 734, 735, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 0, 430, 736, 0, 737, 431, 0, 432,
	433, 434, 435, 436, 437, 438, 738, 739, 740, 531,
	0, 439, 440, 441, 0, 442, 443, 444, 445, 446,
	0, 0, 0, 306, 447, 448, 449, 0, 0, 741,
	450, 532, 451, 742, 743, 0, 744, 0, 452, 453,
	455, 0, 745, 0, 454, 456, 457, 0, 458, 0,
	0, 0, 459, 460, 461, 462, 463, 464, 0, 465,
	467, 466, 0, 469, 746, 468, 0, 470, 471, 0,
	0, 472, 473, 474, 475, 476, 477, 480, 0, 0,
	478, 479, 481, 482, 0, 483, 484, 486, 489, 485,
	487, 488, 490, 503, 504, 491, 492, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 506, 0, 505,
	0, 507, 508, 509, 510, 511, 518, 520, 521, 516,
	517, 519, 522, 523, 525, 513, 514, 515, 0, 524,
	512, 0, 307, 0, 526, 527, 528, 529, 0, 747,
	530, 748, 533, 534, 0, 0, 535, 0, 536, 0,
	0, 538, 539, 540, 0, 0, 541, 542, 749, 0,
	543, 0, 750, 544, 545, 537, 546, 547, 548, 549,
	550, 551, 552, 553, 554, 555, 0, 556, 557, 751,
	558, 559, 560, 752, 561, 562, 563, 753, 564, 754,
	565, 566, 0, 567, 568, 569, 0, 570, 571, 572,
	573, 574, 575, 576, 577, 755, 578, 579, 581, 580,
	582, 0, 583, 0, 584, 585, 586, 0, 0, 0,
	0, 0, 587, 588, 590, 0, 591, 592, 593, 594,
	589, 595, 596, 597, 598, 599, 600, 0, 602, 603,
	601, 604, 605, 0, 606, 607, 608, 609, 610, 756,
	611, 0, 612, 613, 620, 621, 622, 614, 615, 616,
	623, 624, 625, 626, 627, 629, 628, 0, 631, 632,
	630, 633, 634, 635, 0, 636, 757, 637, 617, 618,
	638, 639, 0, 640, 641, 642, 643, 644, 645, 646,
	758, 0, 647, 0, 648, 649, 650, 651, 652, 653,
	655, 619, 656, 661, 662, 759, 657, 658, 659, 660,
	760, 664, 665, 666, 667, 0, 668, 669, 0, 663,
	654, 0, 670, 671, 672, 673, 674, 675, 0, 676,
	677, 0, 678, 761, 762, 763, 764, 0, 690, 0,
	679, 681, 682, 683, 684, 765, 685, 766, 0, 686,
	687, 688, 689, 680, 691, 692, 0, 0, 693, 694,
	696, 698, 699, 695, 697, 700, 0, 701, 0, 0,
	702, 703, 704, 767, 768, 769, 0, 706, 705, 707,
	708, 709, 770, 710, 711, 712, 0, 0, 302, 0,
	713, 714, 771, 715, 716, 717, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 308, 309, 311, 310, 312,
	313, 314, 315, 0, 316, 317, 0, 0, 0, 0,
	0, 718, 0, 0, 0, 318, 1794, 319, 320, 321,
	0, 322, 323, 324, 325, 326, 327, 328, 719, 720,
	0, 329, 721, 330, 722, 0, 723, 331, 332, 333,
	334, 335, 336, 337, 0, 0, 0, 338, 724, 725,
	726, 0, 339, 340, 727, 0, 0, 0, 341, 342,
	343, 344, 345, 346, 347, 348, 0, 0, 350, 351,
	352, 349, 353, 0, 354, 0, 355, 356, 357, 358,
	359, 360, 361, 0, 362, 363, 364, 0, 365, 366,
	367, 0, 0, 0, 0, 0, 0, 0, 368, 369,
	370, 371, 372, 0, 373, 375, 728, 729, 0, 378,
	380, 374, 376, 0, 379, 377, 381, 0, 382, 383,
	384, 0, 0, 385, 386, 387, 0, 388, 389, 390,
	0, 391, 392, 393, 0, 394, 395, 730, 396, 397,
	398, 400, 402, 399, 401, 403, 404, 405, 406, 407,
	731, 732, 408, 0, 305, 0, 0, 0, 0, 0,
	409, 410, 411, 733, 0, 0, 0, 412, 0, 413,
	414, 415, 0, 416, 417, 0, 0, 418, 419, 420,
	734, 735, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 0, 430, 736, 0, 737, 431, 0, 432, 433,
	434, 435, 436, 437, 438, 738, 739, 740, 531, 0,
	439, 440, 441, 0, 442, 443, 444, 445, 446, 0,
	0, 0, 306, 447, 448, 449, 0, 0, 741, 450,
	532, 451, 742, 743, 0, 744, 0, 452, 453, 455,
	0, 745, 0, 454, 456, 457, 0, 458, 0, 0,
	0, 459, 460, 461, 462, 463, 464, 0, 465, 467,
	466, 0, 469, 746, 468, 0, 470, 471, 0, 0,
	472, 473, 474, 475, 476, 477, 480, 0, 0, 478,
	479, 481, 482, 0, 483, 484, 486, 489, 485, 487,
	488, 490, 503, 504, 491, 492, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 506, 0, 505, 0,
	507, 508, 509, 510, 511, 518, 520, 521, 516, 517,
	519, 522, 523, 525, 513, 514, 515, 0, 524, 512,
	0, 307, 0, 526, 527, 528, 529, 0, 747, 530,
	748, 533, 534, 0, 0, 535, 0, 536, 0, 0,
	538, 539, 540, 0, 0, 541, 542, 749, 0, 543,
	0, 750, 544, 545, 537, 546, 547, 548, 549, 550,
	551, 552, 553, 554, 555, 0, 556, 557, 751, 558,
	559, 560, 752, 561, 562, 563, 753, 564, 754, 565,
	566, 0, 567, 568, 569, 0, 570, 571, 572, 573,
	574, 575, 576, 577, 755, 578, 579, 581, 580, 582,
	0, 583, 0, 584, 585, 586, 0, 0, 0, 0,
	0, 587, 588, 590, 0, 591, 592, 593, 594, 589,
	595, 596, 597, 598, 599, 600, 0, 602, 603, 601,
	604, 605, 0, 606, 607, 608, 609, 610, 756, 611,
	0, 612, 613, 620, 621, 622, 614, 615, 616, 623,
	624, 625, 626, 627, 629, 628, 0, 631, 632, 630,
	633, 634, 635, 0, 636, 757, 637, 617, 618, 638,
	639, 0, 640, 641, 642, 643, 644, 645, 646, 758,
	0, 647, 0, 648, 649, 650, 651, 652, 653, 655,
	619, 656, 661, 662, 759, 657, 658, 659, 660, 760,
	664, 665, 666, 667, 0, 668, 669, 0, 663, 654,
	0, 670, 671, 672, 673, 674, 675, 0, 676, 677,
	0, 678, 761, 762, 763, 764, 0, 690, 0, 679,
	681, 682, 683, 684, 765, 685, 766, 0, 686, 687,
	688, 689, 680, 691, 692, 0, 0, 693, 694, 696,
	698, 699, 695, 697, 700, 0, 701, 0, 0, 702,
	703, 704, 767, 768, 769, 0, 706, 705, 707, 708,
	709, 770, 710, 711, 712, 0, 0, 302, 0, 713,
	714, 771, 715, 716, 717, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 308, 309, 311, 310, 312, 313,
	314, 315, 0, 316, 317, 0, 0, 0, 0, 0,
	718, 0, 0, 0, 318, 3985, 319, 320, 321, 0,
	322, 323, 324, 325, 326, 327, 328, 719, 720, 0,
	329, 721, 330, 722, 0, 723, 331, 332, 333, 334,
	335, 336, 337, 0, 0, 0, 338, 724, 725, 726,
	0, 339, 340, 727, 0, 0, 0, 341, 342, 343,
	344, 345, 346, 347, 348, 0, 0, 350, 351, 352,
	349, 353, 0, 354, 0, 355, 356, 357, 358, 359,
	360, 361, 0, 362, 363, 364, 0, 365, 366, 367,
	0, 0, 0, 0, 0, 0, 0, 368, 369, 370,
	371, 372, 0, 373, 375, 728, 729, 0, 378, 380,
	374, 376, 0, 379, 377, 381, 0, 382, 383, 384,
	0, 0, 385, 386, 387, 0, 388, 389, 390, 0,
	391, 392, 393, 0, 394, 395, 730, 396, 397, 398,
	400, 402, 399, 401, 403, 404, 405, 406, 407, 731,
	732, 408, 0, 0, 0, 0, 0, 0, 0, 409,
	410, 411, 733, 0, 0, 0, 412, 0, 413, 414,
	415, 0, 416, 417, 0, 0, 418, 419, 420, 734,
	735, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	0, 430, 736, 0, 737, 431, 0, 432, 433, 434,
	435, 436, 437, 438, 738, 739, 740, 531, 0, 439,
	440, 441, 0, 442, 443, 444, 445, 446, 0, 0,
	0, 0, 447, 448, 449, 0, 0, 741, 450, 532,
	451, 742, 743, 0, 744, 0, 452, 453, 455, 0,
	745, 0, 454, 456, 457, 0, 458, 0, 0, 0,
	459, 460, 461, 462, 463, 464, 0, 465, 467, 466,
	0, 469, 746, 468, 0, 470, 471, 0, 0, 472,
	473, 474, 475, 476, 477, 480, 0, 0, 478, 479,
	481, 482, 0, 483, 484, 486, 489, 485, 487, 488,
	490, 503, 504, 491, 492, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 506, 0, 505, 0, 507,
	508, 509, 510, 511, 518, 520, 521, 516, 517, 519,
	522, 523, 525, 513, 514, 515, 0, 524, 512, 0,
	0, 0, 526, 527, 528, 529, 0, 747, 530, 748,
	533, 534, 0, 0, 535, 0, 536, 0, 0, 538,
	539, 540, 0, 0, 541, 542, 749, 0, 543, 0,
	750, 544, 545, 537, 546, 547, 548, 549, 550, 551,
	552, 553, 554, 555, 0, 556, 557, 751, 558, 559,
	560, 752, 561, 562, 563, 753, 564, 754, 565, 566,
	0, 567, 568, 569, 0, 570, 571, 572, 573, 574,
	575, 576, 577, 755, 578, 579, 581, 580, 582, 0,
	583, 0, 584, 585, 586, 0, 0, 0, 0, 0,
	587, 588, 590, 0, 591, 592, 593, 594, 589, 595,
	596, 597, 598, 599, 600, 0, 602, 603, 601, 604,
	605, 0, 606, 607, 608, 609, 610, 756, 611, 0,
	612, 613, 620, 621, 622, 614, 615, 616, 623, 624,
	625, 626, 627, 629, 628, 0, 631, 632, 630, 633,
	634, 635, 0, 636, 757, 637, 617, 618, 638, 639,
	0, 640, 641, 642, 643, 644, 645, 646, 758, 0,
	647, 0, 648, 649, 650, 651, 652, 653, 655, 619,
	656, 661, 662, 759, 657, 658, 659, 660, 760, 664,
	665, 666, 667, 0, 668, 669, 0, 663, 654, 0,
	670, 671, 672, 673, 674, 675, 0, 676, 677, 0,
	678, 761, 762, 763, 764, 0, 690, 0, 679, 681,
	682, 683, 684, 765, 685, 766, 0, 686, 687, 688,
	689, 680, 691, 692, 0, 0, 693, 694, 696, 698,
	699, 695, 697, 700, 0, 701, 0, 0, 702, 703,
	704, 767, 768, 769, 0, 706, 705, 707, 708, 709,
	770, 710, 711, 712, 0, 0, 0, 0, 713, 714,
	771, 715, 716, 717, 3960, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 308, 309, 311, 310, 312, 313, 314, 315, 0,
	316, 317, 0, 0, 0, 0, 3407, 0, 0, 0,
	0, 318, 0, 319, 320, 321, 1330, 322, 323, 324,
	325, 326, 327, 328, 0, 2235, 0, 329, 2225, 330,
	2241, 0, 2248, 331, 332, 333, 334, 335, 336, 337,
	0, 0, 0, 338, 2251, 2252, 0, 0, 339, 340,
	0, 0, 1638, 0, 341, 342, 343, 344, 345, 346,
	347, 348, 0, 0, 350, 351, 352, 349, 353, 0,
	354, 0, 355, 356, 357, 358, 359, 360, 361, 0,
	362, 363, 364, 1331, 365, 366, 367, 0, 0, 0,
	0, 0, 0, 0, 368, 369, 370, 371, 372, 1313,
	373, 375, 2239, 2238, 0, 378, 380, 374, 376, 0,
	379, 377, 381, 0, 382, 383, 384, 0, 0, 385,
	1298, 387, 0, 388, 389, 390, 0, 391, 392, 393,
	0, 394, 395, 0, 396, 397, 398, 400, 402, 399,
	401, 403, 404, 405, 406, 407, 0, 0, 408, 0,
	305, 0, 0, 0, 0, 0, 409, 410, 411, 2237,
	0, 0, 0, 412, 0, 413, 414, 415, 0, 416,
	417, 0, 1332, 418, 419, 420, 2246, 2247, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 0, 430, 0,
	0, 0, 431, 0, 432, 433, 434, 435, 436, 437,
	438, 0, 0, 0, 531, 1334, 439, 440, 441, 3954,
	442, 443, 444, 445, 446, 0, 0, 0, 0, 447,
	448, 449, 0, 1333, 3956, 450, 532, 451, 2232, 2233,
	0, 2228, 0, 452, 453, 455, 1335, 0, 1336, 454,
	456, 457, 1337, 458, 0, 0, 0, 459, 460, 461,
	462, 463, 464, 0, 465, 467, 466, 0, 469, 0,
	468, 1338, 470, 471, 1339, 0, 472, 473, 474, 475,
	476, 477, 480, 0, 0, 478, 479, 481, 482, 0,
	483, 484, 486, 489, 485, 487, 488, 490, 503, 504,
	491, 492, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 506, 0, 505, 1340, 507, 508, 509, 510,
	511, 518, 520, 521, 516, 517, 519, 522, 523, 525,
	513, 514, 515, 1341, 524, 512, 0, 0, 1342, 526,
	527, 528, 529, 0, 0, 530, 2240, 533, 534, 0,
	0, 535, 0, 536, 0, 0, 538, 539, 540, 0,
	0, 541, 542, 3955, 1343, 543, 1344, 0, 544, 545,
	537, 546, 547, 548, 549, 550, 551, 552, 553, 554,
	555, 0, 556, 557, 2222, 558, 559, 560, 2223, 561,
	562, 563, 0, 564, 0, 565, 566, 0, 567, 568,
	569, 0, 570, 571, 572, 573, 574, 575, 576, 577,
	2236, 578, 579, 581, 580, 582, 0, 583, 0, 584,
	585, 586, 0, 0, 0, 0, 0, 587, 588, 590,
	0, 591, 592, 593, 594, 589, 595, 596, 597, 598,
	599, 600, 0, 602, 603, 601, 604, 605, 1345, 606,
	607, 608, 609, 610, 0, 611, 0, 612, 613, 620,
	621, 622, 614, 615, 616, 623, 624, 625, 626, 627,
	629, 628, 0, 631, 632, 630, 633, 634, 635, 0,
	636, 0, 637, 617, 618, 638, 639, 1346, 640, 641,
	642, 643, 644, 645, 646, 2234, 0, 647, 0, 648,
	649, 650, 651, 652, 653, 655, 619, 656, 661, 662,
	2250, 657, 658, 659, 660, 0, 664, 665, 666, 667,
	0, 668, 669, 0, 663, 654, 0, 670, 671, 672,
	673, 674, 675, 0, 676, 677, 0, 678, 2242, 2243,
	2244, 2245, 0, 690, 0, 679, 681, 682, 683, 684,
	0, 685, 0, 0, 686, 687, 688, 689, 680, 691,
	692, 0, 0, 693, 694, 696, 698, 699, 695, 697,
	700, 0, 701, 0, 0, 702, 703, 704, 0, 2226,
	2249, 3957, 706, 705, 707, 708, 709, 0, 710, 711,
	712, 0, 0, 0, 0, 713, 714, 0, 715, 716,
	717, 302, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 308, 309,
	311, 310, 312, 313, 314, 315, 0, 316, 317, 0,
	0, 0, 0, 0, 718, 0, 0, 2216, 318, 0,
	319, 320, 321, 0, 322, 323, 324, 325, 326, 327,
	328, 719, 720, 0, 329, 721, 330, 722, 0, 723,
	331, 332, 333, 334, 335, 336, 337, 0, 0, 0,
	338, 724, 725, 726, 0, 339, 340, 727, 0, 0,
	0, 341, 342, 343, 344, 345, 346, 347, 348, 0,
	0, 350, 351, 352, 349, 353, 0, 354, 0, 355,
	356, 357, 358, 359, 360, 361, 0, 362, 363, 364,
	0, 365, 366, 367, 0, 0, 0, 0, 0, 0,
	0, 368, 369, 370, 371, 372, 0, 373, 375, 728,
	729, 0, 378, 380, 374, 376, 0, 379, 377, 381,
	0, 382, 383, 384, 0, 0, 385, 386, 387, 0,
	388, 389, 390, 0, 391, 392, 393, 0, 394, 395,
	730, 396, 397, 398, 400, 402, 399, 401, 403, 404,
	405, 406, 407, 731, 732, 408, 0, 0, 0, 0,
	0, 0, 0, 409, 410, 411, 733, 0, 0, 0,
	412, 0, 413, 414, 415, 0, 416, 417, 0, 0,
	418, 419, 420, 734, 735, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 0, 430, 736, 0, 737, 431,
	0, 432, 433, 434, 435, 436, 437, 438, 738, 739,
	740, 531, 0, 439, 440, 441, 0, 442, 443, 444,
	445, 446, 0, 0, 0, 0, 447, 448, 449, 0,
	0, 741, 450, 532, 451, 742, 743, 0, 744, 0,
	452, 453, 455, 0, 745, 0, 454, 456, 457, 0,
	458, 0, 0, 0, 459, 460, 461, 462, 463, 464,
	0, 465, 467, 466, 0, 469, 746, 468, 0, 470,
	471, 0, 0, 472, 473, 474, 475, 476, 477, 480,
	0, 0, 478, 479, 481, 482, 0, 483, 484, 486,
	489, 485, 487, 488, 490, 503, 504, 491, 492, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 506,
	0, 505, 0, 507, 508, 509, 510, 511, 518, 520,
	521, 516, 517, 519, 522, 523, 525, 513, 514, 515,
	0, 524, 512, 0, 0, 0, 526, 527, 528, 529,
	0, 747, 530, 748, 533, 534, 0, 0, 535, 0,
	536, 0, 0, 538, 539, 540, 0, 0, 541, 542,
	749, 0, 543, 0, 750, 544, 545, 537, 546, 547,
	548, 549, 550, 551, 552, 553, 554, 555, 0, 556,
	557, 751, 558, 559, 560, 752, 561, 562, 563, 753,
	564, 754, 565, 566, 0, 567, 568, 569, 0, 570,
	571, 572, 573, 574, 575, 576, 577, 755, 578, 579,
	581, 580, 582, 0, 583, 0, 584, 585, 586, 0,
	0, 0, 0, 0, 587, 588, 590, 0, 591, 592,
	593, 594, 589, 595, 596, 597, 598, 599, 600, 0,
	602, 603, 601, 604, 605, 0, 606, 607, 608, 609,
	610, 756, 611, 0, 612, 613, 620, 621, 622, 614,
	615, 616, 623, 624, 625, 626, 627, 629, 628, 0,
	631, 632, 630, 633, 634, 635, 0, 636, 757, 637,
	617, 618, 638, 639, 0, 640, 641, 642, 643, 644,
	645, 646, 758, 0, 647, 0, 648, 649, 650, 651,
	652, 653, 655, 619, 656, 661, 662, 759, 657, 658,
	659, 660, 760, 664, 665, 666, 667, 0, 668, 669,
	0, 663, 654, 0, 670, 671, 672, 673, 674, 675,
	0, 676, 677, 0, 678, 761, 762, 763, 764, 0,
	690, 0, 679, 681, 682, 683, 684, 765, 685, 766,
	0, 686, 687, 688, 689, 680, 691, 692, 0, 0,
	693, 694, 696, 698, 699, 695, 697, 700, 0, 701,
	0, 0, 702, 703, 704, 767, 768, 769, 0, 706,
	705, 707, 708, 709, 770, 710, 711, 712, 302, 0,
	0, 0, 713, 714, 771, 715, 716, 717, 0, 0,
	0, 0, 0, 0, 0, 308, 309, 311, 310, 312,
	313, 314, 315, 0, 316, 317, 0, 0, 0, 0,
	0, 718, 0, 0, 0, 318, 0, 319, 320, 321,
	4149, 322, 323, 324, 325, 326, 327, 328, 719, 720,
	0, 329, 721, 330, 722, 0, 723, 331, 332, 333,
	334, 335, 336, 337, 0, 0, 0, 338, 724, 725,
	726, 0, 339, 340, 727, 0, 0, 0, 341, 342,
	343, 344, 345, 346, 347, 348, 0, 0, 350, 351,
	352, 349, 353, 0, 354, 0, 355, 356, 357, 358,
	359, 360, 361, 0, 362, 363, 364, 0, 365, 366,
	367, 0, 0, 0, 0, 0, 0, 0, 368, 369,
	370, 371, 372, 0, 373, 375, 728, 729, 0, 378,
	380, 374, 376, 0, 379, 377, 381, 0, 382, 383,
	384, 0, 0, 385, 386, 387, 0, 388, 389, 390,
	0, 391, 392, 393, 0, 394, 395, 730, 396, 397,
	398, 400, 402, 399, 401, 403, 404, 405, 406, 407,
	731, 732, 408, 0, 0, 0, 0, 0, 0, 0,
	409, 410, 411, 733, 0, 0, 0, 412, 0, 413,
	414, 415, 0, 416, 417, 0, 0, 418, 419, 420,
	734, 735, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 0, 430, 736, 0, 737, 431, 0, 432, 433,
	434, 435, 436, 437, 438, 738, 739, 740, 531, 0,
	439, 440, 441, 0, 442, 443, 444, 445, 446, 0,
	0, 0, 0, 447, 448, 449, 0, 0, 741, 450,
	532, 451, 742, 743, 0, 744, 0, 452, 453, 455,
	0, 745, 0, 454, 456, 457, 0, 458, 0, 0,
	0, 459, 460, 461, 462, 463, 464, 0, 465, 467,
	466, 0, 469, 746, 468, 0, 470, 471, 0, 0,
	472, 473, 474, 475, 476, 477, 480, 0, 0, 478,
	479, 481, 482, 0, 483, 484, 486, 489, 485, 487,
	488, 490, 503, 504, 491, 492, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 506, 0, 505, 0,
	507, 508, 509, 510, 511, 518, 520, 521, 516, 517,
	519, 522, 523, 525, 513, 514, 515, 0, 524, 512,
	0, 0, 0, 526, 527, 528, 529, 0, 747, 530,
	748, 533, 534, 0, 0, 535, 0, 536, 0, 0,
	538, 539, 540, 0, 0, 541, 542, 749, 0, 543,
	0, 750, 544, 545, 537, 546, 547, 548, 549, 550,
	551, 552, 553, 554, 555, 0, 556, 557, 751, 558,
	559, 560, 752, 561, 562, 563, 753, 564, 754, 565,
	566, 0, 567, 568, 569, 0, 570, 571, 572, 573,
	574, 575, 576, 577, 755, 578, 579, 581, 580, 582,
	0, 583, 0, 584, 585, 586, 0, 0, 0, 0,
	0, 587, 588, 590, 0, 591, 592, 593, 594, 589,
	595, 596, 597, 598, 599, 600, 0, 602, 603, 601,
	604, 605, 0, 606, 607, 608, 609, 610, 756, 611,
	0, 612, 613, 620, 621, 622, 614, 615, 616, 623,
	624, 625, 626, 627, 629, 628, 0, 631, 632, 630,
	633, 634, 635, 0, 636, 757, 637, 617, 618, 638,
	639, 0, 640, 641, 642, 643, 644, 645, 646, 758,
	0, 647, 0, 648, 649, 650, 651, 652, 653, 655,
	619, 656, 661, 662, 759, 657, 658, 659, 660, 760,
	664, 665, 666, 667, 0, 668, 669, 0, 663, 654,
	0, 670, 671, 672, 673, 674, 675, 0, 676, 677,
	0, 678, 761, 762, 763, 764, 0, 690, 0, 679,
	681, 682, 683, 684, 765, 685, 766, 0, 686, 687,
	688, 689, 680, 691, 692, 0, 0, 693, 694, 696,
	698, 699, 695, 697, 700, 0, 701, 0, 0, 702,
	703, 704, 767, 768, 769, 0, 706, 705, 707, 708,
	709, 770, 710, 711, 712, 0, 0, 0, 0, 713,
	714, 771, 715, 716, 717, 1389, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 308, 309, 311, 310, 312, 313, 314, 315,
	0, 316, 317, 0, 0, 0, 0, 2562, 1290, 0,
	0, 0, 318, 0, 319, 320, 321, 1330, 322, 323,
	324, 325, 326, 327, 328, 719, 720, 0, 329, 721,
	330, 722, 0, 723, 331, 332, 333, 334, 335, 336,
	337, 0, 1289, 0, 338, 724, 725, 726, 0, 339,
	340, 1296, 0, 1277, 0, 341, 342, 343, 344, 345,
	346, 347, 348, 0, 0, 350, 351, 352, 349, 353,
	0, 354, 0, 355, 356, 357, 358, 359, 360, 361,
	0, 362, 363, 364, 1331, 365, 366, 367, 1280, 1278,
	1279, 1286, 1282, 1281, 1285, 368, 369, 370, 371, 372,
	0, 373, 375, 728, 729, 0, 378, 380, 374, 376,
	0, 379, 377, 381, 0, 382, 383, 384, 0, 0,
	385, 386, 387, 0, 388, 389, 390, 0, 391, 392,
	393, 0, 394, 395, 730, 396, 397, 398, 400, 402,
	399, 401, 403, 404, 405, 406, 407, 1321, 1322, 408,
	0, 305, 0, 0, 0, 0, 0, 409, 410, 411,
	733, 0, 0, 0, 412, 0, 413, 414, 415, 0,
	416, 417, 0, 1332, 418, 419, 420, 734, 735, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 0, 430,
	1328, 0, 737, 431, 0, 432, 433, 434, 435, 436,
	437, 438, 1291, 1292, 1295, 531, 1334, 439, 440, 441,
	0, 442, 443, 444, 445, 446, 0, 0, 0, 306,
	447, 448, 449, 0, 1333, 741, 450, 532, 451, 742,
	743, 0, 744, 0, 452, 453, 455, 1335, 1293, 1336,
	454, 456, 457, 1337, 458, 0, 0, 0, 459, 460,
	461, 462, 463, 464, 0, 465, 467, 466, 0, 469,
	1329, 468, 1338, 470, 471, 1339, 0, 472, 473, 474,
	475, 476, 477, 480, 1284, 1283, 478, 479, 481, 482,
	0, 483, 484, 486, 489, 485, 487, 488, 490, 503,
	504, 491, 492, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 506, 0, 505, 1340, 507, 508, 509,
	510, 511, 518, 520, 521, 516, 517, 519, 522, 523,
	525, 513, 514, 515, 1341, 524, 512, 0, 307, 1342,
	526, 527, 528, 529, 0, 1294, 530, 748, 533, 534,
	0, 0, 535, 0, 536, 0, 0, 538, 539, 540,
	0, 0, 541, 542, 749, 1343, 543, 1344, 1323, 544,
	545, 537, 546, 547, 548, 549, 550, 551, 552, 553,
	554, 555, 0, 556, 557, 751, 558, 559, 560, 752,
	561, 562, 563, 1324, 564, 754, 565, 566, 0, 567,
	568, 569, 0, 570, 571, 572, 573, 574, 575, 576,
	577, 755, 578, 579, 581, 580, 582, 0, 583, 0,
	584, 585, 586, 0, 0, 0, 0, 0, 587, 588,
	590, 0, 591, 592, 593, 594, 589, 595, 596, 597,
	598, 599, 600, 0, 602, 603, 601, 604, 605, 1345,
	606, 607, 608, 609, 610, 756, 611, 0, 612, 613,
	620, 621, 622, 614, 615, 616, 623, 624, 625, 626,
	627, 629, 628, 0, 631, 632, 630, 633, 634, 635,
	1287, 636, 757, 637, 617, 618, 638, 639, 1346, 640,
	641, 642, 643, 644, 645, 646, 758, 0, 647, 0,
	648, 649, 650, 651, 652, 653, 655, 619, 656, 661,
	662, 759, 657, 658, 659, 660, 1325, 664, 665, 666,
	667, 0, 668, 669, 0, 663, 654, 0, 670, 671,
	672, 673, 674, 675, 0, 676, 677, 0, 678, 761,
	762, 763, 764, 0, 690, 0, 679, 681, 682, 683,
	684, 1326, 685, 1327, 0, 686, 687, 688, 689, 680,
	691, 692, 0, 0, 693, 694, 696, 698, 699, 695,
	697, 700, 1288, 701, 0, 0, 702, 703, 704, 767,
	768, 769, 0, 706, 705, 707, 708, 709, 770, 710,
	711, 712, 2229, 0, 0, 0, 713, 714, 771, 715,
	716, 717, 0, 0, 0, 0, 0, 0, 0, 308,
	309, 311, 310, 312, 313, 314, 315, 0, 316, 317,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 318,
	0, 319, 320, 321, 1330, 322, 323, 324, 325, 326,
	327, 328, 0, 2235, 0, 329, 2225, 330, 2241, 0,
	2248, 331, 332, 333, 334, 335, 336, 337, 0, 0,
	0, 338, 2251, 2252, 0, 0, 339, 340, 0, 0,
	1638, 0, 341, 342, 343, 344, 345, 346, 347, 348,
	0, 0, 350, 351, 352, 349, 353, 0, 354, 0,
	355, 356, 357, 358, 359, 360, 361, 0, 362, 363,
	364, 1331, 365, 366, 367, 0, 0, 0, 0, 0,
	0, 0, 368, 369, 370, 371, 372, 1313, 373, 375,
	2239, 2238, 0, 378, 380, 374, 376, 0, 379, 377,
	381, 0, 382, 383, 384, 0, 0, 385, 1298, 387,
	0, 388, 389, 390, 0, 391, 392, 393, 0, 394,
	395, 0, 396, 397, 398, 400, 402, 399, 401, 403,
	404, 405, 406, 407, 0, 0, 408, 0, 0, 0,
	0, 0, 0, 0, 409, 410, 411, 2237, 0, 0,
	0, 412, 0, 413, 414, 415, 0, 416, 417, 0,
	1332, 418, 419, 420, 2246, 2247, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 0, 430, 0, 0, 0,
	431, 0, 432, 433, 434, 435, 436, 437, 438, 0,
	0, 0, 531, 1334, 439, 440, 441, 3954, 442, 443,
	444, 445, 446, 0, 0, 0, 0, 447, 448, 449,
	0, 1333, 3956, 450, 532, 451, 2232, 2233, 0, 2228,
	0, 452, 453, 455, 1335, 0, 1336, 454, 456, 457,
	1337, 458, 0, 0, 0, 459, 460, 461, 462, 463,
	464, 0, 465, 467, 466, 0, 469, 0, 468, 1338,
	470, 471, 1339, 0, 472, 473, 474, 475, 476, 477,
	480, 0, 0, 478, 479, 481, 482, 0, 483, 484,
	486, 489, 485, 487, 488, 490, 503, 504, 491, 492,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	506, 0, 505, 1340, 507, 508, 509, 510, 511, 518,
	520, 521, 516, 517, 519, 522, 523, 525, 513, 514,
	515, 1341, 524, 512, 0, 0, 1342, 526, 527, 528,
	529, 0, 0, 530, 2240, 533, 534, 0, 0, 535,
	0, 536, 0, 0, 538, 539, 540, 0, 0, 541,
	542, 3955, 1343, 543, 1344, 0, 544, 545, 537, 546,
	547, 548, 549, 550, 551, 552, 553, 554, 555, 0,
	556, 557, 2222, 558, 559, 560, 2223, 561, 562, 563,
	0, 564, 0, 565, 566, 0, 567, 568, 569, 0,
	570, 571, 572, 573, 574, 575, 576, 577, 2236, 578,
	579, 581, 580, 582, 0, 583, 0, 584, 585, 586,
	0, 0, 0, 0, 0, 587, 588, 590, 0, 591,
	592, 593, 594, 589, 595, 596, 597, 598, 599, 600,
	0, 602, 603, 601, 604, 605, 1345, 606, 607, 608,
	609, 610, 0, 611, 0, 612, 613, 620, 621, 622,
	614, 615, 616, 623, 624, 625, 626, 627, 629, 628,
	0, 631, 632, 630, 633, 634, 635, 0, 636, 0,
	637, 617, 618, 638, 639, 1346, 640, 641, 642, 643,
	644, 645, 646, 2234, 0, 647, 0, 648, 649, 650,
	651, 652, 653, 655, 619, 656, 661, 662, 2250, 657,
	658, 659, 660, 0, 664, 665, 666, 667, 0, 668,
	669, 0, 663, 654, 0, 670, 671, 672, 673, 674,
	675, 0, 676, 677, 0, 678, 2242, 2243, 2244, 2245,
	0, 690, 0, 679, 681, 682, 683, 684, 0, 685,
	0, 0, 686, 687, 688, 689, 680, 691, 692, 0,
	0, 693, 694, 696, 698, 699, 695, 697, 700, 0,
	701, 0, 0, 702, 703, 704, 0, 2226, 2249, 3957,
	706, 705, 707, 708, 709, 0, 710, 711, 712, 0,
	0, 0, 0, 713, 714, 0, 715, 716, 717, 1035,
	0, 934, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 308, 309,
	311, 310, 312, 313, 314, 315, 0, 316, 317, 0,
	0, 0, 0, 0, 718, 2216, 0, 0, 318, 0,
	319, 320, 321, 0, 322, 323, 324, 325, 326, 327,
	328, 719, 720, 0, 329, 721, 330, 722, 0, 723,
	331, 332, 333, 334, 335, 336, 337, 0, 0, 0,
	338, 724, 725, 726, 0, 339, 340, 727, 0, 0,
	0, 341, 342, 343, 344, 345, 346, 347, 348, 0,
	0, 350, 351, 352, 349, 353, 0, 354, 0, 355,
	356, 357, 358, 359, 360, 361, 0, 362, 363, 364,
	0, 365, 366, 367, 0, 0, 0, 0, 0, 0,
	0, 368, 369, 370, 941, 372, 0, 373, 375, 728,
	729, 0, 378, 380, 374, 376, 0, 379, 377, 381,
	0, 382, 383, 384, 0, 0, 385, 386, 387, 0,
	388, 389, 390, 0, 391, 392, 393, 0, 394, 395,
	730, 396, 397, 398, 400, 402, 399, 401, 403, 404,
	405, 406, 407, 731, 732, 408, 0, 305, 0, 0,
	0, 0, 0, 409, 410, 411, 733, 0, 0, 0,
	412, 0, 413, 414, 415, 0, 416, 417, 1032, 0,
	418, 419, 420, 734, 735, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 0, 430, 736, 0, 737, 431,
	0, 432, 433, 434, 435, 436, 437, 438, 738, 739,
	740, 531, 0, 439, 440, 441, 0, 442, 443, 444,
	445, 446, 0, 0, 0, 306, 447, 448, 449, 0,
	0, 741, 450, 532, 451, 742, 743, 0, 744, 0,
	452, 453, 455, 0, 745, 0, 454, 456, 457, 0,
	458, 0, 0, 0, 459, 460, 461, 462, 463, 464,
	0, 465, 467, 466, 0, 469, 746, 468, 0, 470,
	471, 0, 0, 472, 473, 474, 475, 476, 477, 480,
	0, 0, 478, 479, 481, 482, 0, 483, 484, 486,
	489, 485, 487, 488, 490, 503, 504, 491, 492, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 506,
	0, 505, 0, 507, 508, 509, 510, 511, 518, 520,
	521, 516, 517, 519, 522, 523, 525, 513, 514, 515,
	0, 524, 512, 0, 307, 0, 526, 527, 528, 529,
	0, 747, 530, 748, 533, 534, 0, 0, 535, 0,
	536, 0, 0, 538, 539, 540, 0, 0, 541, 542,
	749, 0, 543, 0, 750, 544, 545, 537, 546, 547,
	548, 549, 550, 551, 552, 553, 554, 555, 0, 556,
	557, 751, 558, 559, 560, 752, 561, 562, 563, 753,
	564, 754, 565, 566, 0, 567, 568, 569, 0, 570,
	571, 572, 573, 574, 575, 576, 577, 755, 578, 579,
	581, 580, 582, 0, 583, 0, 584, 585, 586, 0,
	0, 0, 0, 0, 587, 588, 590, 0, 591, 592,
	593, 594, 589, 595, 596, 597, 598, 599, 600, 0,
	602, 603, 601, 604, 605, 0, 606, 607, 608, 609,
	610, 756, 611, 0, 612, 613, 620, 621, 622, 614,
	615, 616, 623, 624, 625, 626, 627, 629, 628, 0,
	631, 632, 630, 633, 634, 635, 0, 636, 757, 637,
	617, 618, 638, 639, 0, 640, 641, 642, 643, 644,
	645, 646, 758, 0, 647, 0, 648, 649, 650, 651,
	652, 653, 655, 619, 656, 661, 662, 759, 657, 658,
	659, 660, 760, 664, 665, 666, 667, 0, 668, 1034,
	0, 663, 654, 939, 670, 671, 672, 673, 674, 940,
	0, 676, 677, 0, 678, 761, 762, 763, 764, 0,
	690, 0, 679, 681, 682, 683, 684, 765, 685, 766,
	0, 686, 687, 688, 689, 680, 691, 692, 0, 0,
	693, 694, 696, 698, 699, 695, 697, 700, 0, 701,
	0, 0, 702, 703, 704, 767, 768, 769, 0, 706,
	705, 707, 708, 709, 770, 710, 711, 712, 2200, 0,
	0, 0, 713, 714, 771, 715, 716, 717, 0, 0,
	0, 0, 0, 0, 0, 308, 309, 311, 310, 312,
	313, 314, 315, 4278, 316, 317, 0, 0, 0, 0,
	0, 718, 944, 0, 0, 318, 0, 319, 320, 321,
	0, 322, 323, 324, 325, 326, 327, 328, 719, 720,
	0, 329, 721, 330, 722, 0, 723, 331, 332, 333,
	334, 335, 336, 337, 0, 0, 0, 338, 724, 725,
	726, 0, 339, 340, 727, 0, 0, 0, 341, 342,
	343, 344, 345, 346, 347, 348, 0, 0, 350, 351,
	352, 349, 353, 0, 354, 0, 355, 356, 357, 358,
	359, 360, 361, 0, 362, 363, 364, 0, 365, 366,
	367, 0, 0, 0, 0, 0, 0, 0, 368, 369,
	370, 2207, 372, 0, 373, 375, 728, 729, 0, 378,
	380, 374, 376, 0, 379, 377, 381, 0, 382, 383,
	384, 0, 0, 385, 386, 387, 0, 388, 389, 390,
	0, 391, 392, 393, 0, 394, 395, 730, 396, 397,
	398, 400, 402, 399, 401, 403, 404, 405, 406, 407,
	731, 732, 408, 0, 305, 0, 0, 0, 0, 0,
	409, 410, 411, 733, 0, 0, 0, 412, 0, 413,
	414, 415, 0, 416, 417, 0, 0, 418, 419, 420,
	734, 735, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 0, 430, 736, 0, 737, 431, 0, 432, 433,
	434, 435, 436, 437, 438, 738, 739, 740, 531, 0,
	439, 440, 441, 0, 442, 443, 444, 445, 446, 0,
	0, 0, 306, 447, 448, 449, 0, 0, 741, 450,
	532, 451, 742, 743, 0, 744, 0, 452, 453, 455,
	0, 745, 0, 454, 456, 457, 0, 458, 0, 0,
	0, 459, 460, 461, 462, 463, 464, 0, 465, 467,
	466, 0, 469, 746, 468, 0, 470, 471, 0, 0,
	472, 473, 474, 475, 476, 477, 480, 0, 0, 478,
	479, 481, 482, 0, 483, 484, 486, 489, 485, 487,
	488, 490, 503, 504, 491, 492, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 506, 0, 505, 0,
	507, 508, 509, 510, 511, 518, 520, 521, 516, 517,
	519, 522, 523, 525, 513, 514, 515, 0, 524, 512,
	0, 307, 0, 526, 527, 528, 529, 0, 747, 530,
	748, 533, 534, 0, 0, 535, 0, 536, 0, 0,
	538, 539, 540, 0, 0, 541, 542, 749, 0, 543,
	0, 750, 544, 545, 537, 546, 547, 548, 549, 550,
	551, 552, 553, 554, 555, 0, 556, 557, 751, 558,
	559, 560, 752, 561, 562, 563, 753, 564, 754, 565,
	566, 0, 567, 568, 569, 0, 570, 571, 572, 573,
	574, 575, 576, 577, 755, 578, 579, 581, 580, 582,
	0, 583, 0, 584, 585, 586, 0, 0, 0, 0,
	0, 587, 588, 590, 0, 591, 592, 593, 594, 589,
	595, 596, 597, 598, 599, 600, 0, 602, 603, 601,
	604, 605, 0, 606, 607, 608, 609, 610, 756, 611,
	0, 612, 613, 620, 621, 622, 614, 615, 616, 4277,
	624, 625, 626, 627, 629, 628, 0, 2204, 632, 630,
	633, 634, 635, 0, 636, 757, 637, 617, 618, 638,
	639, 0, 640, 641, 642, 643, 644, 645, 646, 758,
	0, 647, 0, 648, 649, 650, 651, 652, 653, 655,
	619, 656, 661, 662, 759, 657, 658, 659, 660, 760,
	664, 665, 666, 667, 0, 668, 669, 0, 663, 654,
	2206, 670, 671, 672, 673, 674, 675, 0, 676, 677,
	0, 678, 761, 762, 763, 764, 0, 690, 0, 679,
	681, 682, 683, 684, 765, 685, 766, 0, 686, 687,
	4276, 689, 680, 691, 692, 0, 0, 693, 694, 696,
	698, 699, 695, 697, 700, 0, 701, 0, 0, 702,
	703, 704, 767, 768, 769, 0, 706, 705, 707, 708,
	709, 770, 710, 711, 712, 2200, 0, 0, 0, 713,
	714, 771, 715, 716, 717, 0, 0, 0, 0, 0,
	0, 0, 308, 309, 311, 310, 312, 313, 314, 315,
	2256, 316, 317, 0, 0, 0, 0, 0, 718, 944,
	0, 0, 318, 0, 319, 320, 321, 0, 322, 323,
	324, 325, 326, 327, 328, 719, 720, 0, 329, 721,
	330, 722, 0, 723, 331, 332, 333, 334, 335, 336,
	337, 0, 0, 0, 338, 724, 725, 726, 0, 339,
	340, 727, 0, 0, 0, 341, 342, 343, 344, 345,
	346, 347, 348, 0, 0, 350, 351, 352, 349, 353,
	0, 354, 0, 355, 356, 357, 358, 359, 360, 361,
	0, 362, 363, 364, 0, 365, 366, 367, 0, 0,
	0, 0, 0, 0, 0, 368, 369, 370, 2207, 372,
	0, 373, 375, 728, 729, 0, 378, 380, 374, 376,
	0, 379, 377, 381, 0, 382, 383, 384, 0, 0,
	385, 386, 387, 0, 388, 389, 390, 0, 391, 392,
	393, 0, 394, 395, 730, 396, 397, 398, 400, 402,
	399, 401, 403, 404, 405, 406, 407, 731, 732, 408,
	0, 305, 0, 0, 0, 0, 0, 409, 410, 411,
	733, 0, 0, 0, 412, 0, 413, 414, 415, 0,
	416, 417, 0, 0, 418, 419, 420, 734, 735, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 0, 430,
	736, 0, 737, 431, 0, 432, 433, 434, 435, 436,
	437, 438, 738, 739, 740, 531, 0, 439, 440, 441,
	0, 442, 443, 444, 445, 446, 0, 0, 0, 306,
	447, 448, 449, 0, 0, 741, 450, 532, 451, 742,
	743, 0, 744, 0, 452, 453, 455, 0, 745, 0,
	454, 456, 457, 0, 458, 0, 0, 0, 459, 460,
	461, 462, 463, 464, 0, 465, 467, 466, 0, 469,
	746, 468, 0, 470, 471, 0, 0, 472, 473, 474,
	475, 476, 477, 480, 0, 0, 478, 479, 481, 482,
	0, 483, 484, 486, 489, 485, 487, 488, 490, 503,
	504, 491, 492, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 506, 0, 505, 0, 507, 508, 509,
	510, 511, 518, 520, 521, 516, 517, 519, 522, 523,
	525, 513, 514, 515, 0, 524, 512, 0, 307, 0,
	526, 527, 528, 529, 0, 747, 530, 748, 533, 534,
	0, 0, 535, 0, 536, 0, 0, 538, 539, 540,
	0, 0, 541, 542, 749, 0, 543, 0, 750, 544,
	545, 537, 546, 547, 548, 549, 550, 551, 552, 553,
	554, 555, 0, 556, 557, 751, 558, 559, 560, 752,
	561, 562, 563, 753, 564, 754, 565, 566, 0, 567,
	568, 569, 0, 570, 571, 572, 573, 574, 575, 576,
	577, 755, 578, 579, 581, 580, 582, 0, 583, 0,
	584, 585, 586, 0, 0, 0, 0, 0, 587, 588,
	590, 0, 591, 592, 593, 594, 589, 595, 596, 597,
	598, 599, 600, 0, 602, 603, 601, 604, 605, 0,
	606, 607, 608, 609, 610, 756, 611, 0, 612, 613,
	620, 621, 622, 614, 615, 616, 2255, 624, 625, 626,
	627, 629, 628, 0, 2257, 632, 630, 633, 634, 635,
	0, 636, 757, 637, 617, 618, 638, 639, 0, 640,
	641, 642, 643, 644, 645, 646, 758, 0, 647, 0,
	648, 649, 650, 651, 652, 653, 655, 619, 656, 661,
	662, 759, 657, 658, 659, 660, 760, 664, 665, 666,
	667, 0, 668, 669, 0, 663, 654, 2206, 670, 671,
	672, 673, 674, 675, 0, 676, 677, 0, 678, 761,
	762, 763, 764, 0, 690, 0, 679, 681, 682, 683,
	684, 765, 685, 766, 0, 686, 687, 2254, 689, 680,
	691, 692, 0, 0, 693, 694, 696, 698, 699, 695,
	697, 700, 0, 701, 0, 0, 702, 703, 704, 767,
	768, 769, 0, 706, 705, 707, 708, 709, 770, 710,
	711, 712, 2200, 0, 0, 0, 713, 714, 771, 715,
	716, 717, 0, 0, 0, 0, 0, 0, 0, 308,
	309, 311, 310, 312, 313, 314, 315, 2199, 316, 317,
	0, 0, 0, 0, 0, 718, 944, 0, 0, 318,
	0, 319, 320, 321, 0, 322, 323, 324, 325, 326,
	327, 328, 719, 720, 0, 329, 721, 330, 722, 0,
	723, 331, 332, 333, 334, 335, 336, 337, 0, 0,
	0, 338, 724, 725, 726, 0, 339, 340, 727, 0,
	0, 0, 341, 342, 343, 344, 345, 346, 347, 348,
	0, 0, 350, 351, 352, 349, 353, 0, 354, 0,
	355, 356, 357, 358, 359, 360, 361, 0, 362, 363,
	364, 0, 365, 366, 367, 0, 0, 0, 0, 0,
	0, 0, 368, 369, 370, 2207, 372, 0, 373, 375,
	728, 729, 0, 378, 380, 374, 376, 0, 379, 377,
	381, 0, 382, 383, 384, 0, 0, 385, 386, 387,
	0, 388, 389, 390, 0, 391, 392, 393, 0, 394,
	395, 730, 396, 397, 398, 400, 402, 399, 401, 403,
	404, 405, 406, 407, 731, 732, 408, 0, 305, 0,
	0, 0, 0, 0, 409, 410, 411, 733, 0, 0,
	0, 412, 0, 413, 414, 415, 0, 416, 417, 0,
	0, 418, 419, 420, 734, 735, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 0, 430, 736, 0, 737,
	431, 0, 432, 433, 434, 435, 436, 437, 438, 738,
	739, 740, 531, 0, 439, 440, 441, 0, 442, 443,
	444, 445, 446, 0, 0, 0, 306, 447, 448, 449,
	0, 0, 741, 450, 532, 451, 742, 743, 0, 744,
	0, 452, 453, 455, 0, 745, 0, 454, 456, 457,
	0, 458, 0, 0, 0, 459, 460, 461, 462, 463,
	464, 0, 465, 467, 466, 0, 469, 746, 468, 0,
	470, 471, 0, 0, 472, 473, 474, 475, 476, 477,
	480, 0, 0, 478, 479, 481, 482, 0, 483, 484,
	486, 489, 485, 487, 488, 490, 503, 504, 491, 492,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	506, 0, 505, 0, 507, 508, 509, 510, 511, 518,
	520, 521, 516, 517, 519, 522, 523, 525, 513, 514,
	515, 0, 524, 512, 0, 307, 0, 526, 527, 528,
	529, 0, 747, 530, 748, 533, 534, 0, 0, 535,
	0, 536, 0, 0, 538, 539, 540, 0, 0, 541,
	542, 749, 0, 543, 0, 750, 544, 545, 537, 546,
	547, 548, 549, 550, 551, 552, 553, 554, 555, 0,
	556, 557, 751, 558, 559, 560, 752, 561, 562, 563,
	753, 564, 754, 565, 566, 0, 567, 568, 569, 0,
	570, 571, 572, 573, 574, 575, 576, 577, 755, 578,
	579, 581, 580, 582, 0, 583, 0, 584, 585, 586,
	0, 0, 0, 0, 0, 587, 588, 590, 0, 591,
	592, 593, 594, 589, 595, 596, 597, 598, 599, 600,
	0, 602, 603, 601, 604, 605, 0, 606, 607, 608,
	609, 610, 756, 611, 0, 612, 613, 620, 621, 622,
	614, 615, 616, 2198, 624, 625, 626, 627, 629, 628,
	0, 2204, 632, 630, 633, 634, 635, 0, 636, 757,
	637, 617, 618, 638, 639, 0, 640, 641, 642, 643,
	644, 645, 646, 758, 0, 647, 0, 648, 649, 650,
	651, 652, 653, 655, 619, 656, 661, 662, 759, 657,
	658, 659, 660, 760, 664, 665, 666, 667, 0, 668,
	669, 0, 663, 654, 2206, 670, 671, 672, 673, 674,
	675, 0, 676, 677, 0, 678, 761, 762, 763, 764,
	0, 690, 0, 679, 681, 682, 683, 684, 765, 685,
	766, 0, 686, 687, 2197, 689, 680, 691, 692, 0,
	0, 693, 694, 696, 698, 699, 695, 697, 700, 0,
	701, 0, 0, 702, 703, 704, 767, 768, 769, 0,
	706, 705, 707, 708, 709, 770, 710, 711, 712, 932,
	0, 934, 0, 713, 714, 771, 715, 716, 717, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 308, 309,
	311, 310, 312, 313, 314, 315, 0, 316, 317, 0,
	0, 0, 0, 944, 718, 0, 0, 0, 318, 0,
	319, 320, 321, 0, 322, 323, 324, 325, 326, 327,
	328, 719, 720, 0, 329, 721, 330, 722, 0, 723,
	331, 332, 333, 334, 335, 336, 337, 0, 0, 0,
	338, 724, 725, 726, 0, 339, 340, 727, 0, 0,
	0, 341, 342, 343, 344, 345, 346, 347, 348, 0,
	0, 350, 351, 352, 349, 353, 0, 354, 0, 355,
	356, 357, 358, 359, 360, 361, 0, 362, 363, 364,
	0, 365, 366, 367, 0, 0, 0, 0, 0, 0,
	0, 368, 369, 370, 941, 372, 0, 373, 375, 728,
	729, 0, 378, 380, 374, 376, 0, 379, 377, 381,
	0, 382, 383, 384, 0, 0, 385, 386, 387, 0,
	388, 389, 390, 0, 391, 392, 393, 0, 394, 395,
	730, 396, 397, 398, 400, 402, 399, 401, 403, 404,
	405, 406, 407, 731, 732, 408, 0, 305, 0, 0,
	0, 0, 0, 409, 410, 411, 733, 0, 0, 0,
	412, 0, 413, 414, 415, 0, 416, 417, 0, 0,
	418, 419, 420, 734, 735, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 0, 430, 736, 0, 737, 431,
	0, 432, 433, 434, 435, 436, 437, 438, 738, 739,
	740, 531, 0, 439, 440, 441, 0, 442, 443, 444,
	445, 446, 0, 0, 0, 306, 447, 448, 449, 0,
	0, 741, 450, 532, 451, 742, 743, 0, 744, 0,
	452, 453, 455, 0, 745, 0, 454, 456, 457, 0,
	458, 0, 0, 0, 459, 460, 461, 462, 463, 464,
	0, 465, 467, 466, 0, 469, 746, 468, 0, 470,
	471, 0, 0, 472, 473, 474, 475, 476, 477, 480,
	0, 0, 478, 479, 481, 482, 0, 483, 484, 486,
	489, 485, 487, 488, 490, 503, 504, 491, 492, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 506,
	0, 505, 0, 507, 508, 509, 510, 511, 518, 520,
	521, 516, 517, 519, 522, 523, 525, 513, 514, 515,
	0, 524, 512, 0, 307, 0, 526, 527, 528, 529,
	0, 747, 530, 748, 533, 534, 0, 0, 535, 0,
	536, 0, 0, 538, 539, 540, 0, 0, 541, 542,
	749, 0, 543, 0, 750, 544, 545, 537, 546, 547,
	548, 549, 550, 551, 552, 553, 554, 555, 0, 556,
	557, 751, 558, 559, 560, 752, 561, 562, 563, 753,
	564, 754, 565, 566, 0, 567, 568, 569, 0, 570,
	571, 572, 573, 574, 575, 576, 577, 755, 578, 579,
	581, 580, 582, 0, 583, 0, 584, 585, 586, 0,
	0, 0, 0, 0, 587, 588, 590, 0, 591, 592,
	593, 594, 589, 595, 596, 597, 598, 599, 600, 0,
	602, 603, 601, 604, 605, 0, 606, 607, 608, 609,
	610, 756, 611, 0, 612, 613, 620, 621, 622, 614,
	615, 616, 623, 624, 625, 626, 627, 629, 628, 0,
	631, 632, 630, 633, 634, 635, 0, 636, 757, 637,
	617, 618, 638, 639, 0, 640, 641, 642, 643, 644,
	645, 646, 758, 0, 647, 0, 648, 649, 650, 651,
	652, 653, 655, 619, 656, 661, 662, 759, 657, 658,
	659, 660, 760, 664, 665, 666, 667, 0, 668, 669,
	0, 663, 654, 939, 670, 671, 672, 673, 674, 940,
	0, 676, 677, 0, 678, 761, 762, 763, 764, 0,
	690, 0, 679, 681, 682, 683, 684, 765, 685, 766,
	0, 686, 687, 688, 689, 680, 691, 692, 0, 0,
	693, 694, 696, 698, 699, 695, 697, 700, 0, 701,
	0, 0, 702, 703, 704, 767, 768, 769, 0, 706,
	705, 707, 708, 709, 770, 710, 711, 712, 3960, 0,
	0, 0, 713, 714, 771, 715, 716, 717, 0, 0,
	0, 0, 0, 0, 0, 308, 309, 311, 310, 312,
	313, 314, 315, 0, 316, 317, 0, 0, 0, 0,
	0, 0, 944, 0, 0, 318, 0, 319, 320, 321,
	1330, 322, 323, 324, 325, 326, 327, 328, 0, 2235,
	0, 329, 2225, 330, 2241, 0, 2248, 331, 332, 333,
	334, 335, 336, 337, 0, 0, 0, 338, 2251, 2252,
	0, 0, 339, 340, 0, 0, 1638, 0, 341, 342,
	343, 344, 345, 346, 347, 348, 0, 0, 350, 351,
	352, 349, 353, 0, 354, 0, 355, 356, 357, 358,
	359, 360, 361, 0, 362, 363, 364, 1331, 365, 366,
	367, 0, 0, 0, 0, 0, 0, 0, 368, 369,
	370, 371, 372, 1313, 373, 375, 2239, 2238, 0, 378,
	380, 374, 376, 0, 379, 377, 381, 0, 382, 383,
	384, 0, 0, 385, 1298, 387, 0, 388, 389, 390,
	0, 391, 392, 393, 0, 394, 395, 0, 396, 397,
	398, 400, 402, 399, 401, 403, 404, 405, 406, 407,
	0, 0, 408, 0, 305, 0, 0, 0, 0, 0,
	409, 410, 411, 2237, 0, 0, 0, 412, 0, 413,
	414, 415, 0, 416, 417, 0, 1332, 418, 419, 420,
	2246, 2247, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 0, 430, 0, 0, 0, 431, 0, 432, 433,
	434, 435, 436, 437, 438, 0, 0, 0, 531, 1334,
	439, 440, 441, 0, 442, 443, 444, 445, 446, 0,
	0, 0, 0, 447, 448, 449, 0, 1333, 0, 450,
	532, 451, 2232, 2233, 0, 2228, 0, 452, 453, 455,
	1335, 0, 1336, 454, 456, 457, 1337, 458, 0, 0,
	0, 459, 460, 461, 462, 463, 464, 0, 465, 467,
	466, 0, 469, 0, 468, 1338, 470, 471, 1339, 0,
	472, 473, 474, 475, 476, 477, 480, 0, 0, 478,
	479, 481, 482, 0, 483, 484, 486, 489, 485, 487,
	488, 490, 503, 504, 491, 492, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 506, 0, 505, 1340,
	507, 508, 509, 510, 511, 518, 520, 521, 516, 517,
	519, 522, 523, 525, 513, 514, 515, 1341, 524, 512,
	0, 0, 1342, 526, 527, 528, 529, 0, 0, 530,
	2240, 533, 534, 0, 0, 535, 0, 536, 0, 0,
	538, 539, 540, 0, 0, 541, 542, 0, 1343, 543,
	1344, 0, 544, 545, 537, 546, 547, 548, 549, 550,
	551, 552, 553, 554, 555, 0, 556, 557, 2222, 558,
	559, 560, 2223, 561, 562, 563, 0, 564, 0, 565,
	566, 0, 567, 568, 569, 0, 570, 571, 572, 573,
	574, 575, 576, 577, 2236, 578, 579, 581, 580, 582,
	0, 583, 0, 584, 585, 586, 0, 0, 0, 0,
	0, 587, 588, 590, 0, 591, 592, 593, 594, 589,
	595, 596, 597, 598, 599, 600, 0, 602, 603, 601,
	604, 605, 1345, 606, 607, 608, 609, 610, 0, 611,
	0, 612, 613, 620, 621, 622, 614, 615, 616, 623,
	624, 625, 626, 627, 629, 628, 0, 631, 632, 630,
	633, 634, 635, 0, 636, 0, 637, 617, 618, 638,
	639, 1346, 640, 641, 642, 643, 644, 645, 646, 2234,
	0, 647, 0, 648, 649, 650, 651, 652, 653, 655,
	619, 656, 661, 662, 2250, 657, 658, 659, 660, 0,
	664, 665, 666, 667, 0, 668, 669, 0, 663, 654,
	0, 670, 671, 672, 673, 674, 675, 0, 676, 677,
	0, 678, 2242, 2243, 2244, 2245, 0, 690, 0, 679,
	681, 682, 683, 684, 0, 685, 0, 0, 686, 687,
	688, 689, 680, 691, 692, 0, 0, 693, 694, 696,
	698, 699, 695, 697, 700, 0, 701, 0, 0, 702,
	703, 704, 0, 2226, 2249, 0, 706, 705, 707, 708,
	709, 0, 710, 711, 712, 0, 0, 0, 0, 713,
	714, 0, 715, 716, 717, 934, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 308, 309, 311, 310, 312, 313, 314, 315,
	0, 316, 317, 0, 0, 0, 0, 0, 718, 0,
	0, 2216, 318, 0, 319, 320, 321, 0, 322, 323,
	324, 325, 326, 327, 328, 719, 720, 0, 329, 721,
	330, 722, 0, 723, 331, 332, 333, 334, 335, 336,
	337, 0, 0, 0, 338, 724, 725, 726, 0, 339,
	340, 727, 0, 0, 0, 341, 342, 343, 344, 345,
	346, 347, 348, 0, 0, 350, 351, 352, 349, 353,
	0, 354, 0, 355, 356, 357, 358, 359, 360, 361,
	0, 362, 363, 364, 0, 365, 366, 367, 0, 0,
	0, 0, 0, 0, 0, 368, 369, 370, 941, 372,
	0, 373, 375, 728, 729, 0, 378, 380, 374, 376,
	0, 379, 377, 381, 0, 382, 383, 384, 0, 0,
	385, 386, 387, 0, 388, 389, 390, 0, 391, 392,
	393, 0, 394, 395, 730, 396, 397, 398, 400, 402,
	399, 401, 403, 404, 405, 406, 407, 731, 732, 408,
	0, 305, 0, 0, 0, 0, 0, 409, 410, 411,
	733, 0, 0, 0, 412, 0, 413, 414, 415, 0,
	416, 417, 0, 0, 418, 419, 420, 734, 735, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 0, 430,
	736, 0, 737, 431, 0, 432, 433, 434, 435, 436,
	437, 438, 738, 739, 740, 531, 0, 439, 440, 441,
	0, 442, 443, 444, 445, 446, 0, 0, 0, 306,
	447, 448, 449, 0, 0, 741, 450, 532, 451, 742,
	743, 0, 744, 0, 452, 453, 455, 0, 745, 0,
	454, 456, 457, 0, 458, 0, 0, 0, 459, 460,
	461, 462, 463, 464, 0, 465, 467, 466, 0, 469,
	746, 468, 0, 470, 471, 0, 0, 472, 473, 474,
	475, 476, 477, 480, 0, 0, 478, 479, 481, 482,
	0, 483, 484, 486, 489, 485, 487, 488, 490, 503,
	504, 491, 492, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 506, 0, 505, 0, 507, 508, 509,
	510, 511, 518, 520, 521, 516, 517, 519, 522, 523,
	525, 513, 514, 515, 0, 524, 512, 0, 307, 0,
	526, 527, 528, 529, 0, 747, 530, 748, 533, 534,
	0, 0, 535, 0, 536, 0, 0, 538, 539, 540,
	0, 0, 541, 542, 749, 0, 543, 0, 750, 544,
	545, 537, 546, 547, 548, 549, 550, 551, 552, 553,
	554, 555, 0, 556, 557, 751, 558, 559, 560, 752,
	561, 562, 563, 753, 564, 754, 565, 566, 0, 567,
	568, 569, 0, 570, 571, 572, 573, 574, 575, 576,
	577, 755, 578, 579, 581, 580, 582, 0, 583, 0,
	584, 585, 586, 0, 0, 0, 0, 0, 587, 588,
	590, 0, 591, 592, 593, 594, 589, 595, 596, 597,
	598, 599, 600, 0, 602, 603, 601, 604, 605, 0,
	606, 607, 608, 609, 610, 756, 611, 0, 612, 613,
	620, 621, 622, 614, 615, 616, 623, 624, 625, 626,
	627, 629, 628, 0, 631, 632, 630, 633, 634, 635,
	0, 636, 757, 637, 617, 618, 638, 639, 0, 640,
	641, 642, 643, 644, 645, 646, 758, 0, 647, 0,
	648, 649, 650, 651, 652, 653, 655, 619, 656, 661,
	662, 759, 657, 658, 659, 660, 760, 664, 665, 666,
	667, 0, 668, 669, 0, 663, 654, 939, 670, 671,
	672, 673, 674, 940, 0, 676, 677, 0, 678, 761,
	762, 763, 764, 0, 690, 0, 679, 681, 682, 683,
	684, 765, 685, 766, 0, 686, 687, 688, 689, 680,
	691, 692, 0, 0, 693, 694, 696, 698, 699, 695,
	697, 700, 0, 701, 0, 0, 702, 703, 704, 767,
	768, 769, 0, 706, 705, 707, 708, 709, 770, 710,
	711, 712, 3114, 0, 302, 0, 713, 714, 771, 715,
	716, 717, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 308, 309, 311, 310, 312, 313, 314, 315, 0,
	316, 317, 0, 0, 0, 0, 944, 718, 0, 0,
	0, 318, 0, 319, 320, 321, 0, 322, 323, 324,
	325, 326, 327, 328, 719, 720, 0, 329, 721, 330,
	722, 0, 723, 331, 332, 333, 334, 335, 336, 337,
	0, 0, 0, 338, 724, 725, 726, 0, 339, 340,
	727, 0, 0, 0, 341, 342, 343, 344, 345, 346,
	347, 348, 0, 0, 350, 351, 352, 349, 353, 0,
	354, 0, 355, 356, 357, 358, 359, 360, 361, 0,
	362, 363, 364, 0, 365, 366, 367, 0, 0, 0,
	0, 0, 0, 0, 368, 369, 370, 371, 372, 0,
	373, 375, 728, 729, 0, 378, 380, 374, 376, 0,
	379, 377, 381, 0, 382, 383, 384, 0, 0, 385,
	386, 387, 0, 388, 389, 390, 0, 391, 392, 393,
	0, 394, 395, 730, 396, 397, 398, 400, 402, 399,
	401, 403, 404, 405, 406, 407, 731, 732, 408, 0,
	305, 0, 0, 0, 0, 0, 409, 410, 411, 733,
	0, 0, 0, 412, 0, 413, 414, 415, 0, 416,
	417, 0, 0, 418, 419, 420, 734, 735, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 0, 430, 736,
	0, 737, 431, 0, 432, 433, 434, 435, 436, 437,
	438, 738, 739, 740, 531, 0, 439, 440, 441, 0,
	442, 443, 444, 445, 446, 0, 0, 0, 306, 447,
	448, 449, 0, 0, 741, 450, 532, 451, 742, 743,
	0, 744, 0, 452, 453, 455, 0, 745, 0, 454,
	456, 457, 0, 458, 0, 0, 0, 459, 460, 461,
	462, 463, 464, 0, 465, 467, 466, 0, 469, 746,
	468, 0, 470, 471, 0, 0, 472, 473, 474, 475,
	476, 477, 480, 0, 0, 478, 479, 481, 482, 0,
	483, 484, 486, 489, 485, 487, 488, 490, 503, 504,
	491, 492, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 506, 0, 505, 0, 507, 508, 509, 510,
	511, 518, 520, 521, 516, 517, 519, 522, 523, 525,
	513, 514, 515, 0, 524, 512, 0, 307, 0, 526,
	527, 528, 529, 0, 747, 530, 748, 533, 534, 0,
	0, 535, 0, 536, 0, 0, 538, 539, 540, 0,
	0, 541, 542, 749, 0, 543, 0, 750, 544, 545,
	537, 546, 547, 548, 549, 550, 551, 552, 553, 554,
	555, 0, 556, 557, 751, 558, 559, 560, 752, 561,
	562, 563, 753, 564, 754, 565, 566, 0, 567, 568,
	569, 0, 570, 571, 572, 573, 574, 575, 576, 577,
	755, 578, 579, 581, 580, 582, 0, 583, 0, 584,
	585, 586, 0, 0, 0, 0, 0, 587, 588, 590,
	0, 591, 592, 593, 594, 589, 595, 596, 597, 598,
	599, 600, 0, 602, 603, 601, 604, 605, 0, 606,
	607, 608, 609, 610, 756, 611, 0, 612, 613, 620,
	621, 622, 614, 615, 616, 623, 624, 625, 626, 627,
	629, 628, 0, 631, 632, 630, 633, 634, 635, 0,
	636, 757, 637, 617, 618, 638, 639, 0, 640, 641,
	642, 643, 644, 645, 646, 758, 0, 647, 0, 648,
	649, 650, 651, 652, 653, 655, 619, 656, 661, 662,
	759, 657, 658, 659, 660, 760, 664, 665, 666, 667,
	0, 668, 669, 0, 663, 654, 0, 670, 671, 672,
	673, 674, 675, 0, 676, 677, 0, 678, 761, 762,
	763, 764, 0, 690, 0, 679, 681, 682, 683, 684,
	765, 685, 766, 0, 686, 687, 688, 689, 680, 691,
	692, 0, 0, 693, 694, 696, 698, 699, 695, 697,
	700, 0, 701, 0, 0, 702, 703, 704, 767, 768,
	769, 0, 706, 705, 707, 708, 709, 770, 710, 711,
	712, 2200, 0, 0, 0, 713, 714, 771, 715, 716,
	717, 0, 0, 0, 0, 0, 0, 0, 308, 309,
	311, 310, 312, 313, 314, 315, 0, 316, 317, 0,
	0, 0, 0, 0, 718, 944, 0, 0, 318, 0,
	319, 320, 321, 0, 322, 323, 324, 325, 326, 327,
	328, 719, 720, 0, 329, 721, 330, 722, 0, 723,
	331, 332, 333, 334, 335, 336, 337, 0, 0, 0,
	338, 724, 725, 726, 0, 339, 340, 727, 0, 0,
	0, 341, 342, 343, 344, 345, 346, 347, 348, 0,
	0, 350, 351, 352, 349, 353, 0, 354, 0, 355,
	356, 357, 358, 359, 360, 361, 0, 362, 363, 364,
	0, 365, 366, 367, 0, 0, 0, 0, 0, 0,
	0, 368, 369, 370, 2207, 372, 0, 373, 375, 728,
	729, 0, 378, 380, 374, 376, 0, 379, 377, 381,
	0, 382, 383, 384, 0, 0, 385, 386, 387, 0,
	388, 389, 390, 0, 391, 392, 393, 0, 394, 395,
	730, 396, 397, 398, 400, 402, 399, 401, 403, 404,
	405, 406, 407, 731, 732, 408, 0, 305, 0, 0,
	0, 0, 0, 409, 410, 411, 733, 0, 0, 0,
	412, 0, 413, 414, 415, 0, 416, 417, 0, 0,
	418, 419, 420, 734, 735, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 0, 430, 736, 0, 737, 431,
	0, 432, 433, 434, 435, 436, 437, 438, 738, 739,
	740, 531, 0, 439, 440, 441, 0, 442, 443, 444,
	445, 446, 0, 0, 0, 306, 447, 448, 449, 0,
	0, 741, 450, 532, 451, 742, 743, 0, 744, 0,
	452, 453, 455, 0, 745, 0, 454, 456, 457, 0,
	458, 0, 0, 0, 459, 460, 461, 462, 463, 464,
	0, 465, 467, 466, 0, 469, 746, 468, 0, 470,
	471, 0, 0, 472, 473, 474, 475, 476, 477, 480,
	0, 0, 478, 479, 481, 482, 0, 483, 484, 486,
	489, 485, 487, 488, 490, 503, 504, 491, 492, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 506,
	0, 505, 0, 507, 508, 509, 510, 511, 518, 520,
	521, 516, 517, 519, 522, 523, 525, 513, 514, 515,
	0, 524, 512, 0, 307, 0, 526, 527, 528, 529,
	0, 747, 530, 748, 533, 534, 0, 0, 535, 0,
	536, 0, 0, 538, 539, 540, 0, 0, 541, 542,
	749, 0, 543, 0, 750, 544, 545, 537, 546, 547,
	548, 549, 550, 551, 552, 553, 554, 555, 0, 556,
	557, 751, 558, 559, 560, 752, 561, 562, 563, 753,
	564, 754, 565, 566, 0, 567, 568, 569, 0, 570,
	571, 572, 573, 574, 575, 576, 577, 755, 578, 579,
	581, 580, 582, 0, 583, 0, 584, 585, 586, 0,
	0, 0, 0, 0, 587, 588, 590, 0, 591, 592,
	593, 594, 589, 595, 596, 597, 598, 599, 600, 0,
	602, 603, 601, 604, 605, 0, 2615, 607, 608, 609,
	610, 756, 611, 0, 612, 613, 620, 621, 622, 614,
	615, 616, 2616, 624, 625, 626, 627, 629, 628, 0,
	2204, 632, 630, 633, 634, 635, 0, 636, 757, 637,
	617, 618, 638, 639, 0, 640, 641, 642, 643, 644,
	645, 646, 758, 0, 647, 0, 648, 649, 650, 651,
	652, 653, 655, 619, 656, 661, 662, 759, 657, 658,
	659, 660, 760, 664, 665, 666, 667, 0, 668, 669,
	0, 663, 654, 2206, 670, 671, 672, 673, 674, 675,
	0, 676, 677, 0, 678, 761, 762, 763, 764, 0,
	690, 0, 679, 681, 682, 683, 684, 765, 685, 766,
	0, 686, 687, 2617, 689, 680, 691, 692, 0, 0,
	693, 694, 696, 698, 699, 695, 697, 700, 0, 701,
	0, 0, 702, 703, 704, 767, 768, 769, 0, 706,
	705, 707, 708, 709, 770, 710, 711, 712, 2229, 0,
	0, 0, 713, 714, 771, 715, 716, 717, 0, 0,
	0, 0, 0, 0, 0, 308, 309, 311, 310, 312,
	313, 314, 315, 0, 316, 317, 0, 0, 0, 0,
	0, 0, 944, 0, 0, 318, 0, 319, 320, 321,
	1330, 322, 323, 324, 325, 326, 327, 328, 0, 2235,
	0, 329, 2225, 330, 2241, 0, 2248, 331, 332, 333,
	334, 335, 336, 337, 0, 0, 0, 338, 2251, 2252,
	0, 0, 339, 340, 0, 0, 1638, 0, 341, 342,
	343, 344, 345, 346, 347, 348, 0, 0, 350, 351,
	352, 349, 353, 0, 354, 0, 355, 356, 357, 358,
	359, 360, 361, 0, 362, 363, 364, 1331, 365, 366,
	367, 0, 0, 0, 0, 0, 0, 0, 368, 369,
	370, 371, 372, 1313, 373, 375, 2239, 2238, 0, 378,
	380, 374, 376, 0, 379, 377, 381, 0, 382, 383,
	384, 0, 0, 385, 1298, 387, 0, 388, 389, 390,
	0, 391, 392, 393, 0, 394, 395, 0, 396, 397,
	398, 400, 402, 399, 401, 403, 404, 405, 406, 407,
	0, 0, 408, 0, 0, 0, 0, 0, 0, 0,
	409, 410, 411, 2237, 0, 0, 0, 412, 0, 413,
	414, 415, 0, 416, 417, 0, 1332, 418, 419, 420,
	2246, 2247, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 0, 430, 0, 0, 0, 431, 0, 432, 433,
	434, 435, 436, 437, 438, 0, 0, 0, 531, 1334,
	439, 440, 441, 0, 442, 443, 444, 445, 446, 0,
	0, 0, 0, 447, 448, 449, 0, 1333, 0, 450,
	532, 451, 2232, 2233, 0, 2228, 0, 452, 453, 455,
	1335, 0, 1336, 454, 456, 457, 1337, 458, 0, 0,
	0, 459, 460, 461, 462, 463, 464, 0, 465, 467,
	466, 0, 469, 0, 468, 1338, 470, 471, 1339, 0,
	472, 473, 474, 475, 476, 477, 480, 0, 0, 478,
	479, 481, 482, 0, 483, 484, 486, 489, 485, 487,
	488, 490, 503, 504, 491, 492, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 506, 0, 505, 1340,
	507, 508, 509, 510, 511, 518, 520, 521, 516, 517,
	519, 522, 523, 525, 513, 514, 515, 1341, 524, 512,
	0, 0, 1342, 526, 527, 528, 529, 0, 0, 530,
	2240, 533, 534, 0, 0, 535, 0, 536, 0, 0,
	538, 539, 540, 0, 0, 541, 542, 0, 1343, 543,
	1344, 0, 544, 545, 537, 546, 547, 548, 549, 550,
	551, 552, 553, 554, 555, 0, 556, 557, 2222, 558,
	559, 560, 2223, 561, 562, 563, 0, 564, 0, 565,
	566, 0, 567, 568, 569, 0, 570, 571, 572, 573,
	574, 575, 576, 577, 2236, 578, 579, 581, 580, 582,
	0, 583, 0, 584, 585, 586, 0, 0, 0, 0,
	0, 587, 588, 590, 0, 591, 592, 593, 594, 589,
	595, 596, 597, 598, 599, 600, 0, 602, 603, 601,
	604, 605, 1345, 606, 607, 608, 609, 610, 0, 611,
	0, 612, 613, 620, 621, 622, 614, 615, 616, 623,
	624, 625, 626, 627, 629, 628, 0, 631, 632, 630,
	633, 634, 635, 0, 636, 0, 637, 617, 618, 638,
	639, 1346, 640, 641, 642, 643, 644, 645, 646, 2234,
	0, 647, 0, 648, 649, 650, 651, 652, 653, 655,
	619, 656, 661, 662, 2250, 657, 658, 659, 660, 0,
	664, 665, 666, 667, 0, 668, 669, 0, 663, 654,
	0, 670, 671, 672, 673, 674, 675, 0, 676, 677,
	0, 678, 2242, 2243, 2244, 2245, 0, 690, 0, 679,
	681, 682, 683, 684, 0, 685, 0, 0, 686, 687,
	688, 689, 680, 691, 692, 0, 0, 693, 694, 696,
	698, 699, 695, 697, 700, 0, 701, 0, 0, 702,
	703, 704, 0, 2226, 2249, 0, 706, 705, 707, 708,
	709, 0, 710, 711, 712, 0, 0, 0, 0, 713,
	714, 0, 715, 716, 717, 302, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 308, 309, 311, 310, 312, 313, 314, 315,
	0, 316, 317, 0, 0, 0, 0, 0, 718, 0,
	0, 2216, 318, 0, 319, 320, 321, 0, 322, 323,
	324, 325, 326, 327, 328, 719, 720, 0, 329, 721,
	330, 722, 0, 723, 331, 332, 333, 334, 335, 336,
	337, 0, 0, 0, 338, 724, 725, 726, 0, 339,
	340, 727, 0, 0, 0, 341, 342, 343, 344, 345,
	346, 347, 348, 0, 0, 350, 351, 352, 349, 353,
	0, 354, 0, 355, 356, 357, 358, 359, 360, 361,
	0, 362, 363, 364, 0, 365, 366, 367, 0, 0,
	0, 0, 0, 0, 0, 368, 369, 370, 371, 372,
	0, 373, 375, 728, 729, 0, 378, 380, 374, 376,
	0, 379, 377, 381, 0, 382, 383, 384, 0, 0,
	385, 386, 387, 0, 388, 389, 390, 0, 391, 392,
	393, 0, 394, 395, 730, 396, 397, 398, 400, 402,
	399, 401, 403, 404, 405, 406, 407, 731, 732, 408,
	0, 305, 0, 0, 0, 0, 0, 409, 410, 411,
	733, 0, 0, 0, 412, 0, 413, 414, 415, 0,
	416, 417, 0, 0, 418, 419, 420, 734, 735, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 0, 430,
	736, 0, 737, 431, 0, 432, 433, 434, 435, 436,
	437, 438, 738, 739, 740, 531, 0, 439, 440, 441,
	0, 442, 443, 444, 445, 446, 0, 0, 0, 306,
	447, 448, 449, 0, 0, 741, 450, 532, 451, 742,
	743, 0, 744, 0, 452, 453, 455, 0, 745, 0,
	454, 456, 457, 0, 458, 0, 0, 0, 459, 460,
	461, 462, 463, 464, 0, 465, 467, 466, 0, 469,
	746, 468, 0, 470, 471, 0, 0, 472, 473, 474,
	475, 476, 477, 480, 0, 0, 478, 479, 481, 482,
	0, 483, 484, 486, 489, 485, 487, 488, 490, 503,
	504, 491, 492, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 506, 0, 505, 0, 507, 508, 509,
	510, 511, 518, 520, 521, 516, 517, 519, 522, 523,
	525, 513, 514, 515, 0, 524, 512, 0, 307, 0,
	526, 527, 528, 529, 0, 747, 530, 748, 533, 534,
	0, 0, 535, 0, 536, 0, 0, 538, 539, 540,
	0, 0, 541, 542, 749, 0, 543, 0, 750, 544,
	545, 537, 546, 547, 548, 549, 550, 551, 552, 553,
	554, 555, 0, 556, 557, 751, 558, 559, 560, 752,
	561, 562, 563, 753, 564, 754, 565, 566, 0, 567,
	568, 569, 0, 570, 571, 572, 573, 574, 575, 576,
	577, 755, 578, 579, 581, 580, 582, 0, 583, 0,
	584, 585, 586, 0, 0, 0, 0, 0, 587, 588,
	590, 0, 591, 592, 593, 594, 589, 595, 596, 597,
	598, 599, 600, 0, 602, 603, 601, 604, 605, 0,
	606, 607, 608, 609, 610, 756, 611, 0, 612, 613,
	620, 621, 622, 614, 615, 616, 623, 624, 625, 626,
	627, 629, 628, 0, 631, 632, 630, 633, 634, 635,
	0, 636, 757, 637, 617, 618, 638, 639, 0, 640,
	641, 642, 643, 644, 645, 646, 758, 0, 647, 0,
	648, 649, 650, 651, 652, 653, 655, 619, 656, 661,
	662, 759, 657, 658, 659, 660, 760, 664, 665, 666,
	667, 0, 668, 669, 0, 663, 654, 0, 670, 671,
	672, 673, 674, 675, 0, 676, 677, 0, 678, 761,
	762, 763, 764, 0, 690, 0, 679, 681, 682, 683,
	684, 765, 685, 766, 0, 686, 687, 688, 689, 680,
	691, 692, 0, 0, 693, 694, 696, 698, 699, 695,
	697, 700, 0, 701, 0, 0, 702, 703, 704, 767,
	768, 769, 0, 706, 705, 707, 708, 709, 770, 710,
	711, 712, 302, 0, 0, 0, 713, 714, 771, 715,
	716, 717, 0, 0, 0, 0, 0, 0, 0, 308,
	309, 311, 310, 312, 313, 314, 315, 0, 316, 317,
	0, 0, 0, 0, 0, 718, 944, 0, 0, 318,
	0, 319, 320, 321, 0, 322, 323, 324, 325, 326,
	327, 328, 719, 720, 0, 329, 721, 330, 722, 0,
	723, 331, 332, 333, 334, 335, 336, 337, 0, 0,
	0, 338, 724, 725, 726, 0, 339, 340, 727, 0,
	0, 0, 341, 342, 343, 344, 345, 346, 347, 348,
	0, 0, 350, 351, 352, 349, 353, 0, 354, 0,
	355, 356, 357, 358, 359, 360, 361, 0, 362, 363,
	364, 0, 365, 366, 367, 0, 0, 0, 0, 0,
	0, 0, 368, 369, 370, 371, 372, 0, 373, 375,
	728, 729, 0, 378, 380, 374, 376, 0, 379, 377,
	381, 0, 382, 383, 384, 0, 0, 385, 386, 387,
	0, 388, 389, 390, 0, 391, 392, 393, 0, 394,
	395, 730, 396, 397, 398, 400, 402, 399, 401, 403,
	404, 405, 406, 407, 731, 732, 408, 0, 0, 0,
	0, 0, 0, 0, 409, 410, 411, 733, 0, 0,
	0, 412, 0, 413, 414, 415, 0, 416, 417, 0,
	0, 418, 419, 420, 734, 735, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 0, 430, 736, 0, 737,
	431, 0, 432, 433, 434, 435, 436, 437, 438, 738,
	739, 740, 531, 0, 439, 440, 441, 0, 442, 443,
	444, 445, 446, 0, 0, 0, 0, 447, 448, 449,
	0, 0, 741, 450, 532, 451, 742, 743, 0, 744,
	0, 452, 453, 455, 0, 745, 0, 454, 456, 457,
	0, 458, 0, 0, 0, 459, 460, 461, 462, 463,
	464, 0, 465, 467, 466, 0, 469, 746, 468, 0,
	470, 471, 0, 0, 472, 473, 474, 475, 476, 477,
	480, 0, 0, 478, 479, 481, 482, 0, 483, 484,
	486, 489, 485, 487, 488, 490, 503, 504, 491, 492,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	506, 0, 505, 0, 507, 508, 509, 510, 511, 518,
	520, 521, 516, 517, 519, 522, 523, 525, 513, 514,
	515, 0, 524, 512, 0, 0, 0, 526, 527, 528,
	529, 0, 747, 530, 748, 533, 534, 0, 0, 535,
	0, 536, 0, 0, 538, 539, 540, 0, 0, 541,
	542, 749, 0, 543, 0, 750, 544, 545, 537, 546,
	547, 548, 549, 550, 551, 552, 553, 554, 555, 0,
	556, 557, 751, 558, 559, 560, 752, 561, 562, 563,
	753, 564, 754, 565, 566, 0, 567, 568, 569, 0,
	570, 571, 572, 573, 574, 575, 576, 577, 755, 578,
	579, 581, 580, 582, 0, 583, 0, 584, 585, 586,
	0, 0, 0, 0, 0, 587, 588, 590, 0, 591,
	592, 593, 594, 589, 595, 596, 597, 598, 599, 600,
	0, 602, 603, 601, 604, 605, 0, 606, 607, 608,
	609, 610, 756, 611, 0, 612, 613, 620, 621, 622,
	614, 615, 616, 623, 624, 625, 626, 627, 629, 628,
	0, 631, 632, 630, 633, 634, 635, 0, 636, 757,
	637, 617, 618, 638, 639, 0, 640, 641, 642, 643,
	644, 645, 646, 758, 0, 647, 0, 648, 649, 650,
	651, 652, 653, 655, 619, 656, 661, 662, 759, 657,
	658, 659, 660, 760, 664, 665, 666, 667, 0, 668,
	669, 0, 663, 654, 0, 670, 671, 672, 673, 674,
	675, 0, 676, 677, 0, 678, 761, 762, 763, 764,
	0, 690, 0, 679, 681, 682, 683, 684, 765, 685,
	766, 0, 686, 687, 688, 689, 680, 691, 692, 0,
	0, 693, 694, 696, 698, 699, 695, 697, 700, 0,
	701, 0, 0, 702, 703, 704, 767, 768, 769, 0,
	706, 705, 707, 708, 709, 770, 710, 711, 712, 0,
	0, 0, 0, 713, 714, 771, 715, 716, 717, 0,
	0, 0, 0, 0, 0, 0, 0, 1674, 1673, 0,
	0, 0, 0, 1671, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4507, 308, 309, 311, 310, 312, 313,
	314, 315, 0, 316, 317, 0, 0, 0, 0, 0,
	718, 0, 0, 0, 318, 0, 319, 320, 321, 1330,
	322, 323, 324, 325, 326, 327, 328, 719, 720, 0,
	329, 721, 330, 722, 0, 723, 331, 332, 333, 334,
	335, 336, 337, 0, 0, 0, 338, 724, 725, 726,
	0, 339, 340, 727, 0, 1638, 0, 341, 342, 343,
	344, 345, 346, 347, 348, 0, 0, 350, 351, 352,
	349, 353, 0, 354, 0, 355, 356, 357, 358, 359,
	360, 361, 0, 362, 363, 364, 1331, 365, 366, 367,
	0, 0, 0, 0, 0, 0, 0, 368, 369, 370,
	371, 372, 0, 373, 375, 728, 729, 0, 378, 380,
	374, 376, 0, 379, 377, 381, 0, 382, 383, 384,
	0, 0, 385, 386, 387, 0, 388, 389, 390, 0,
	391, 392, 393, 0, 394, 395, 730, 396, 397, 398,
	400, 402, 399, 401, 403, 404, 405, 406, 407, 731,
	732, 408, 0, 305, 0, 0, 0, 0, 0, 409,
	410, 411, 733, 0, 0, 0, 412, 0, 413, 414,
	415, 0, 416, 417, 0, 1332, 418, 419, 420, 734,
	735, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	0, 430, 736, 0, 737, 431, 0, 432, 433, 434,
	435, 436, 437, 438, 738, 739, 740, 531, 1334, 439,
	440, 441, 0, 442, 443, 444, 445, 446, 0, 0,
	0, 0, 447, 448, 449, 0, 1333, 741, 450, 532,
	451, 742, 743, 0, 744, 0, 452, 453, 455, 1335,
	745, 1336, 454, 456, 457, 1337, 458, 0, 0, 0,
	459, 460, 461, 462, 463, 464, 0, 465, 467, 466,
	0, 469, 746, 468, 1338, 470, 471, 1339, 0, 472,
	473, 474, 475, 476, 477, 480, 0, 0, 478, 479,
	481, 482, 0, 483, 484, 486, 489, 485, 487, 488,
	490, 503, 504, 491, 492, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 506, 0, 505, 1340, 507,
	508, 509, 510, 511, 518, 520, 521, 516, 517, 519,
	522, 523, 525, 513, 514, 515, 1341, 524, 512, 0,
	0, 1342, 526, 527, 528, 529, 4383, 747, 530, 748,
	533, 534, 0, 0, 535, 0, 536, 0, 0, 538,
	539, 540, 0, 0, 541, 542, 749, 1343, 543, 1344,
	750, 544, 545, 537, 546, 547, 548, 549, 550, 551,
	552, 553, 554, 555, 0, 556, 557, 751, 558, 559,
	560, 752, 561, 562, 563, 753, 564, 754, 565, 566,
	0, 567, 568, 569, 0, 570, 571, 572, 573, 574,
	575, 576, 577, 755, 578, 579, 581, 580, 582, 0,
	583, 0, 584, 585, 586, 0, 0, 0, 0, 0,
	587, 588, 590, 0, 591, 592, 593, 594, 589, 595,
	596, 597, 598, 599, 600, 0, 602, 603, 601, 604,
	605, 1345, 606, 607, 608, 609, 610, 756, 611, 0,
	612, 613, 620, 621, 622, 614, 615, 616, 623, 624,
	625, 626, 627, 629, 628, 0, 631, 632, 630, 633,
	634, 635, 0, 636, 757, 637, 617, 618, 638, 639,
	1346, 640, 641, 642, 643, 644, 645, 646, 758, 0,
	647, 0, 648, 649, 650, 651, 652, 653, 655, 619,
	656, 661, 662, 759, 657, 658, 659, 660, 760, 664,
	665, 666, 667, 0, 668, 669, 0, 663, 654, 0,
	670, 671, 672, 673, 674, 675, 0, 676, 677, 0,
	678, 761, 762, 763, 764, 0, 690, 0, 679, 681,
	682, 683, 684, 765, 685, 766, 0, 686, 687, 688,
	689, 680, 691, 692, 0, 0, 693, 694, 696, 698,
	699, 695, 697, 700, 0, 701, 0, 0, 702, 703,
	704, 767, 768, 769, 0, 706, 705, 707, 708, 709,
	770, 710, 711, 712, 0, 0, 0, 0, 713, 714,
	771, 715, 716, 717, 2499, 0, 1674, 1673, 0, 0,
	0, 0, 1671, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 308, 309, 311, 310, 312, 313, 314,
	315, 0, 316, 317, 0, 0, 0, 0, 0, 718,
	0, 0, 0, 318, 0, 319, 320, 321, 1330, 322,
	323, 324, 325, 326, 327, 328, 719, 720, 0, 329,
	721, 330, 722, 0, 723, 331, 332, 333, 334, 335,
	336, 337, 0, 0, 0, 338, 724, 725, 726, 0,
	339, 340, 727, 0, 1638, 0, 341, 342, 343, 344,
	345, 346, 347, 348, 0, 0, 350, 351, 352, 349,
	353, 0, 354, 0, 355, 356, 357, 358, 359, 360,
	361, 0, 362, 363, 364, 1331, 365, 366, 367, 0,
	0, 0, 0, 0, 0, 0, 368, 369, 370, 371,
	372, 0, 373, 375, 728, 729, 0, 378, 380, 374,
	376, 0, 379, 377, 381, 0, 382, 383, 384, 0,
	0, 385, 386, 387, 0, 388, 389, 390, 0, 391,
	392, 393, 0, 394, 395, 730, 396, 397, 398, 400,
	402, 399, 401, 403, 404, 405, 406, 407, 731, 732,
	408, 0, 305, 0, 0, 0, 0, 0, 409, 410,
	411, 733, 0, 0, 0, 412, 0, 413, 414, 415,
	0, 416, 417, 0, 1332, 418, 419, 420, 734, 735,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 0,
	430, 736, 0, 737, 431, 0, 432, 433, 434, 435,
	436, 437, 438, 1727, 739, 740, 531, 1334, 439, 440,
	441, 0, 442, 443, 444, 445, 446, 0, 0, 0,
	0, 447, 448, 449, 0, 1333, 741, 450, 532, 451,
	742, 743, 0, 744, 0, 452, 453, 455, 1335, 745,
	1336, 454, 456, 457, 1337, 458, 0, 0, 0, 459,
	460, 461, 462, 463, 464, 0, 465, 467, 466, 0,
	469, 746, 468, 1338, 470, 471, 1339, 0, 472, 473,
	474, 475, 476, 477, 480, 0, 0, 478, 479, 481,
	482, 0, 483, 484, 486, 489, 485, 487, 488, 490,
	503, 504, 491, 492, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 506, 0, 505, 1340, 507, 508,
	509, 510, 511, 518, 520, 521, 516, 517, 519, 522,
	523, 525, 513, 514, 515, 1341, 524, 512, 0, 0,
	1342, 526, 527, 528, 529, 0, 747, 530, 748, 533,
	534, 0, 0, 535, 0, 536, 0, 0, 538, 539,
	540, 0, 0, 541, 542, 749, 1343, 543, 1344, 750,
	544, 545, 537, 546, 547, 548, 549, 550, 551, 552,
	553, 554, 555, 0, 556, 557, 751, 558, 559, 560,
	752, 561, 562, 563, 753, 564, 754, 565, 566, 0,
	567, 568, 569, 0, 570, 571, 572, 573, 574, 575,
	576, 577, 755, 578, 579, 581, 580, 582, 0, 583,
	0, 584, 585, 586, 0, 0, 0, 0, 0, 587,
	588, 590, 0, 591, 592, 593, 594, 589, 595, 596,
	597, 598, 599, 600, 0, 602, 603, 601, 604, 605,
	1345, 606, 607, 608, 609, 610, 756, 611, 0, 612,
	613, 620, 621, 622, 614, 615, 616, 623, 624, 625,
	626, 627, 629, 628, 0, 631, 632, 630, 633, 634,
	635, 0, 636, 757, 637, 617, 618, 638, 639, 1346,
	640, 641, 642, 643, 644, 645, 646, 758, 0, 647,
	0, 648, 649, 650, 651, 652, 653, 655, 619, 656,
	661, 662, 759, 657, 658, 659, 660, 760, 664, 665,
	666, 667, 0, 668, 669, 0, 663, 654, 0, 670,
	671, 672, 673, 674, 675, 0, 676, 677, 0, 678,
	761, 762, 763, 764, 0, 690, 0, 679, 681, 682,
	683, 684, 765, 685, 766, 0, 686, 687, 688, 689,
	680, 691, 692, 0, 0, 693, 694, 696, 698, 699,
	695, 697, 700, 0, 701, 0, 0, 702, 703, 704,
	767, 768, 769, 0, 706, 705, 707, 708, 709, 770,
	710, 711, 712, 0, 0, 0, 0, 713, 714, 771,
	715, 716, 717, 2265, 0, 1674, 1673, 0, 0, 0,
	0, 1671, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 308, 309, 311, 310, 312, 313, 314, 315,
	0, 316, 317, 0, 0, 0, 0, 0, 718, 0,
	0, 0, 318, 0, 319, 320, 321, 1330, 322, 323,
	324, 325, 326, 327, 328, 719, 720, 0, 329, 721,
	330, 722, 0, 723, 331, 332, 333, 334, 335, 336,
	337, 0, 0, 0, 338, 724, 725, 726, 0, 339,
	340, 727, 0, 1638, 0, 341, 342, 343, 344, 345,
	346, 347, 348, 0, 0, 350, 351, 352, 349, 353,
	0, 354, 0, 355, 356, 357, 358, 359, 360, 361,
	0, 362, 363, 364, 1331, 365, 366, 367, 0, 0,
	0, 0, 0, 0, 0, 368, 369, 370, 371, 372,
	0, 373, 375, 728, 729, 0, 378, 380, 374, 376,
	0, 379, 377, 381, 0, 382, 383, 384, 0, 0,
	385, 386, 387, 0, 388, 389, 390, 0, 391, 392,
	393, 0, 394, 395, 730, 396, 397, 398, 400, 402,
	399, 401, 403, 404, 405, 406, 407, 731, 732, 408,
	0, 305, 0, 0, 0, 0, 0, 409, 410, 411,
	733, 0, 0, 0, 412, 0, 413, 414, 415, 0,
	416, 417, 0, 1332, 418, 419, 420, 734, 735, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 0, 430,
	736, 0, 737, 431, 0, 432, 433, 434, 435, 436,
	437, 438, 738, 739, 740, 531, 1334, 439, 440, 441,
	0, 442, 443, 444, 445, 446, 0, 0, 0, 0,
	447, 448, 449, 0, 1333, 741, 450, 532, 451, 742,
	743, 0, 744, 0, 452, 453, 455, 1335, 745, 1336,
	454, 456, 457, 1337, 458, 0, 0, 0, 459, 460,
	461, 462, 463, 464, 0, 465, 467, 466, 0, 469,
	746, 468, 1338, 470, 471, 1339, 0, 472, 473, 474,
	475, 476, 477, 480, 0, 0, 478, 479, 481, 482,
	0, 483, 484, 486, 489, 485, 487, 488, 490, 503,
	504, 491, 492, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 506, 0, 505, 1340, 507, 508, 509,
	510, 511, 518, 520, 521, 516, 517, 519, 522, 523,
	525, 513, 514, 515, 1341, 524, 512, 0, 0, 1342,
	526, 527, 528, 529, 0, 747, 530, 748, 533, 534,
	0, 0, 535, 0, 536, 0, 0, 538, 539, 540,
	0, 0, 541, 542, 749, 1343, 543, 1344, 750, 544,
	545, 537, 546, 547, 548, 549, 550, 551, 552, 553,
	554, 555, 0, 556, 557, 751, 558, 559, 560, 752,
	561, 562, 563, 753, 564, 754, 565, 566, 0, 567,
	568, 569, 0, 570, 571, 572, 573, 574, 575, 576,
	577, 755, 578, 579, 581, 580, 582, 0, 583, 0,
	584, 585, 586, 0, 0, 0, 0, 0, 587, 588,
	590, 0, 591, 592, 593, 594, 589, 595, 596, 597,
	598, 599, 600, 0, 602, 603, 601, 604, 605, 1345,
	606, 607, 608, 609, 610, 756, 611, 0, 612, 613,
	620, 621, 622, 614, 615, 616, 623, 624, 625, 626,
	627, 629, 628, 0, 631, 632, 630, 633, 634, 635,
	0, 636, 757, 637, 617, 618, 638, 639, 1346, 640,
	641, 642, 643, 644, 645, 646, 758, 0, 647, 0,
	648, 649, 650, 651, 652, 653, 655, 619, 656, 661,
	662, 759, 657, 658, 659, 660, 760, 664, 665, 666,
	667, 0, 668, 669, 0, 663, 654, 0, 670, 671,
	672, 673, 674, 675, 0, 676, 677, 0, 678, 761,
	762, 763, 764, 0, 690, 0, 679, 681, 682, 683,
	684, 765, 685, 766, 0, 686, 687, 688, 689, 680,
	691, 692, 0, 0, 693, 694, 696, 698, 699, 695,
	697, 700, 0, 701, 0, 0, 702, 703, 704, 767,
	768, 769, 0, 706, 705, 707, 708, 709, 770, 710,
	711, 712, 0, 0, 0, 0, 713, 714, 771, 715,
	716, 717, 1856, 0, 1674, 1673, 0, 0, 0, 0,
	1671, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 308, 309, 311, 310, 312, 313, 314, 315, 0,
	316, 317, 0, 0, 0, 0, 0, 718, 0, 0,
	0, 318, 0, 319, 320, 321, 1330, 322, 323, 324,
	325, 326, 327, 328, 719, 720, 0, 329, 721, 330,
	722, 0, 723, 331, 332, 333, 334, 335, 336, 337,
	0, 0, 0, 338, 724, 725, 726, 0, 339, 340,
	727, 0, 1638, 0, 341, 342, 343, 344, 345, 346,
	347, 348, 0, 0, 350, 351, 352, 349, 353, 0,
	354, 0, 355, 356, 357, 358, 359, 360, 361, 0,
	362, 363, 364, 1331, 365, 366, 367, 0, 0, 0,
	0, 0, 0, 0, 368, 369, 370, 371, 372, 0,
	373, 375, 728, 729, 0, 378, 380, 374, 376, 0,
	379, 377, 381, 0, 382, 383, 384, 0, 0, 385,
	386, 387, 0, 388, 389, 390, 0, 391, 392, 393,
	0, 394, 395, 730, 396, 397, 398, 400, 402, 399,
	401, 403, 404, 405, 406, 407, 731, 732, 408, 0,
	305, 0, 0, 0, 0, 0, 1854, 410, 411, 733,
	0, 0, 0, 412, 0, 413, 414, 415, 0, 416,
	417, 0, 1332, 418, 419, 420, 734, 735, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 0, 430, 736,
	0, 737, 431, 0, 432, 433, 434, 435, 436, 437,
	438, 738, 739, 740, 531, 1334, 439, 440, 441, 0,
	442, 443, 444, 445, 446, 0, 0, 0, 0, 447,
	448, 449, 0, 1333, 741, 450, 532, 451, 742, 743,
	0, 744, 0, 452, 453, 455, 1335, 745, 1336, 454,
	456, 457, 1337, 458, 0, 0, 0, 459, 460, 461,
	462, 463, 464, 0, 465, 467, 466, 0, 469, 746,
	468, 1338, 470, 471, 1339, 0, 472, 473, 474, 475,
	476, 477, 480, 0, 0, 478, 479, 481, 482, 0,
	483, 484, 486, 489, 485, 487, 488, 490, 503, 504,
	491, 492, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 506, 0, 505, 1340, 507, 508, 509, 510,
	511, 518, 520, 521, 516, 517, 519, 522, 523, 525,
	513, 514, 515, 1341, 524, 512, 0, 0, 1342, 526,
	527, 528, 529, 0, 747, 530, 748, 533, 534, 0,
	0, 535, 0, 536, 0, 0, 538, 539, 540, 0,
	0, 541, 542, 749, 1343, 543, 1344, 750, 544, 545,
	537, 546, 547, 548, 549, 550, 551, 552, 553, 554,
	555, 0, 556, 557, 751, 558, 559, 560, 752, 561,
	562, 563, 753, 564, 754, 565, 566, 0, 567, 568,
	569, 0, 570, 571, 572, 573, 574, 575, 1855, 577,
	755, 578, 579, 581, 580, 582, 0, 583, 0, 584,
	585, 586, 0, 0, 0, 0, 0, 587, 588, 590,
	0, 591, 592, 593, 594, 589, 595, 596, 597, 598,
	599, 600, 0, 602, 603, 601, 604, 605, 1345, 606,
	607, 608, 609, 610, 756, 611, 0, 612, 613, 620,
	621, 622, 614, 615, 616, 623, 1853, 625, 626, 627,
	629, 628, 0, 631, 632, 630, 633, 634, 635, 0,
	636, 757, 637, 617, 618, 638, 639, 1346, 640, 641,
	642, 643, 644, 645, 646, 758, 0, 647, 0, 648,
	649, 650, 651, 652, 653, 655, 619, 656, 661, 662,
	759, 657, 658, 659, 660, 760, 664, 665, 666, 667,
	0, 668, 669, 0, 663, 654, 0, 670, 671, 672,
	673, 674, 675, 0, 676, 677, 0, 678, 761, 762,
	763, 764, 0, 690, 0, 679, 681, 682, 683, 684,
	765, 685, 766, 0, 686, 687, 688, 689, 680, 691,
	692, 0, 0, 693, 694, 696, 698, 699, 695, 697,
	700, 0, 701, 0, 0, 702, 703, 704, 767, 768,
	769, 0, 706, 705, 707, 708, 709, 770, 710, 711,
	712, 0, 0, 0, 0, 713, 714, 771, 715, 716,
	717, 1724, 0, 1674, 1673, 0, 0, 0, 0, 1671,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	308, 309, 311, 310, 312, 313, 314, 315, 0, 316,
	317, 0, 0, 0, 0, 0, 718, 0, 0, 0,
	318, 0, 319, 320, 321, 1330, 322, 323, 324, 325,
	326, 327, 328, 719, 720, 0, 329, 721, 330, 722,
	0, 723, 331, 332, 333, 334, 335, 336, 337, 0,
	0, 0, 338, 724, 725, 726, 0, 339, 340, 727,
	0, 1638, 0, 341, 342, 343, 344, 345, 346, 347,
	348, 0, 0, 350, 351, 352, 349, 353, 0, 354,
	0, 355, 356, 357, 358, 359, 360, 361, 0, 362,
	363, 364, 1331, 365, 366, 367, 0, 0, 0, 0,
	0, 0, 0, 368, 369, 370, 371, 372, 0, 373,
	375, 728, 729, 0, 378, 380, 374, 376, 0, 379,
	377, 381, 0, 382, 383, 384, 0, 0, 385, 386,
	387, 0, 388, 389, 390, 0, 391, 392, 393, 0,
	394, 395, 730, 396, 397, 398, 400, 402, 399, 401,
	403, 404, 405, 406, 407, 731, 732, 408, 0, 305,
	0, 0, 0, 0, 0, 409, 410, 411, 733, 0,
	0, 0, 412, 0, 413, 414, 415, 0, 416, 417,
	0, 1332, 418, 419, 420, 734, 735, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 0, 430, 736, 0,
	737, 431, 0, 432, 433, 434, 435, 436, 437, 438,
	1727, 739, 740, 531, 1334, 439, 440, 441, 0, 442,
	443, 444, 445, 446, 0, 0, 0, 0, 447, 448,
	449, 0, 1333, 741, 450, 532, 451, 742, 743, 0,
	744, 0, 452, 453, 455, 1335, 745, 1336, 454, 456,
	457, 1337, 458, 0, 0, 0, 459, 460, 461, 462,
	463, 464, 0, 465, 467, 466, 0, 469, 746, 468,
	1338, 470, 471, 1339, 0, 472, 473, 474, 475, 476,
	477, 480, 0, 0, 478, 479, 481, 482, 0, 483,
	484, 486, 489, 485, 487, 488, 490, 503, 504, 491,
	492, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 506, 0, 505, 1340, 507, 508, 509, 510, 511,
	518, 520, 521, 516, 517, 519, 522, 523, 525, 513,
	514, 515, 1341, 524, 512, 0, 0, 1342, 526, 527,
	528, 529, 0, 747, 530, 748, 533, 534, 0, 0,
	535, 0, 536, 0, 0, 538, 539, 540, 0, 0,
	541, 542, 749, 1343, 543, 1344, 750, 544, 545, 537,
	546, 547, 548, 549, 550, 551, 552, 553, 554, 555,
	0, 556, 557, 751, 558, 559, 560, 752, 561, 562,
	563, 753, 564, 754, 565, 566, 0, 567, 568, 569,
	0, 570, 571, 572, 573, 574, 575, 576, 577, 755,
	578, 579, 581, 580, 582, 0, 583, 0, 584, 585,
	586, 0, 0, 0, 0, 0, 587, 588, 590, 0,
	591, 592, 593, 594, 589, 595, 596, 597, 598, 599,
	600, 0, 602, 603, 601, 604, 605, 1345, 606, 607,
	608, 609, 610, 756, 611, 0, 612, 613, 620, 621,
	622, 614, 615, 616, 623, 624, 625, 626, 627, 629,
	628, 0, 631, 632, 630, 633, 634, 635, 0, 636,
	757, 637, 617, 618, 638, 639, 1346, 640, 641, 642,
	643, 644, 645, 646, 758, 0, 647, 0, 648, 649,
	650, 651, 652, 653, 655, 619, 656, 661, 662, 759,
	657, 658, 659, 660, 760, 664, 665, 666, 667, 0,
	668, 669, 0, 663, 654, 0, 670, 671, 672, 673,
	674, 675, 0, 676, 677, 0, 678, 761, 762, 763,
	764, 0, 690, 0, 679, 681, 682, 683, 684, 765,
	685, 766, 0, 686, 687, 688, 689, 680, 691, 692,
	0, 0, 693, 694, 696, 698, 699, 695, 697, 700,
	0, 701, 0, 0, 702, 703, 704, 767, 768, 769,
	0, 706, 705, 707, 708, 709, 770, 710, 711, 712,
	0, 0, 0, 0, 713, 714, 771, 715, 716, 717,
	1669, 0, 1674, 1673, 0, 0, 0, 0, 1671, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 308,
	309, 311, 310, 312, 313, 314, 315, 0, 316, 317,
	0, 0, 0, 0, 0, 718, 0, 0, 0, 318,
	0, 319, 320, 321, 1330, 322, 323, 324, 325, 326,
	327, 328, 719, 720, 0, 329, 721, 330, 722, 0,
	723, 331, 332, 333, 334, 335, 336, 337, 0, 0,
	0, 338, 724, 725, 726, 0, 339, 340, 727, 0,
	1638, 0, 341, 342, 343, 344, 345, 346, 347, 348,
	0, 0, 350, 351, 352, 349, 353, 0, 354, 0,
	355, 356, 357, 358, 359, 360, 361, 0, 362, 363,
	364, 1331, 365, 366, 367, 0, 0, 0, 0, 0,
	0, 0, 368, 369, 370, 371, 372, 0, 373, 375,
	728, 729, 0, 378, 380, 374, 376, 0, 379, 377,
	381, 0, 382, 383, 384, 0, 0, 385, 386, 387,
	0, 388, 389, 390, 0, 391, 392, 393, 0, 394,
	395, 730, 396, 397, 398, 400, 402, 399, 401, 403,
	404, 405, 406, 407, 731, 732, 408, 0, 305, 0,
	0, 0, 0, 0, 409, 410, 411, 733, 0, 0,
	0, 412, 0, 413, 414, 415, 0, 416, 417, 0,
	1332, 418, 419, 420, 734, 735, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 0, 430, 736, 0, 737,
	431, 0, 432, 433, 434, 435, 436, 437, 438, 738,
	739, 740, 531, 1334, 439, 440, 441, 0, 442, 443,
	444, 445, 446, 0, 0, 0, 0, 447, 448, 449,
	0, 1333, 741, 450, 532, 451, 742, 743, 0, 744,
	0, 452, 453, 455, 1335, 745, 1336, 454, 456, 457,
	1337, 458, 0, 0, 0, 459, 460, 461, 462, 463,
	464, 0, 465, 467, 466, 0, 469, 746, 468, 1338,
	470, 471, 1339, 0, 472, 473, 474, 475, 476, 477,
	480, 0, 0, 478, 479, 481, 482, 0, 483, 484,
	486, 489, 485, 487, 488, 490, 503, 504, 491, 492,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	506, 0, 505, 1340, 507, 508, 509, 510, 511, 518,
	520, 521, 516, 517, 519, 522, 523, 525, 513, 514,
	515, 1341, 524, 512, 0, 0, 1342, 526, 527, 528,
	529, 0, 747, 530, 748, 533, 534, 0, 0, 535,
	0, 536, 0, 0, 538, 539, 540, 0, 0, 541,
	542, 749, 1343, 543, 1344, 750, 544, 545, 537, 546,
	547, 548, 549, 550, 551, 552, 553, 554, 555, 0,
	556, 557, 751, 558, 559, 560, 752, 561, 562, 563,
	753, 564, 754, 565, 566, 0, 567, 568, 569, 0,
	570, 571, 572, 573, 574, 575, 576, 577, 755, 578,
	579, 581, 580, 582, 0, 583, 0, 584, 585, 586,
	0, 0, 0, 0, 0, 587, 588, 590, 0, 591,
	592, 593, 594, 589, 595, 596, 597, 598, 599, 600,
	0, 602, 603, 601, 604, 605, 1345, 606, 607, 608,
	609, 610, 756, 611, 0, 612, 613, 620, 621, 622,
	614, 615, 616, 623, 624, 625, 626, 627, 629, 628,
	0, 631, 632, 630, 633, 634, 635, 0, 636, 757,
	637, 617, 618, 638, 639, 1346, 640, 641, 642, 643,
	644, 645, 646, 758, 0, 647, 0, 648, 649, 650,
	651, 652, 653, 655, 619, 656, 661, 662, 759, 657,
	658, 659, 660, 760, 664, 665, 666, 667, 0, 668,
	669, 0, 663, 654, 0, 670, 671, 672, 673, 674,
	675, 0, 676, 677, 0, 678, 761, 762, 763, 764,
	0, 690, 0, 679, 681, 682, 683, 684, 765, 685,
	766, 0, 686, 687, 688, 689, 680, 691, 692, 0,
	0, 693, 694, 696, 698, 699, 695, 697, 700, 0,
	701, 0, 0, 702, 703, 704, 767, 768, 769, 0,
	706, 705, 707, 708, 709, 770, 710, 711, 712, 0,
	0, 0, 0, 713, 714, 771, 715, 716, 717, 1674,
	1673, 0, 0, 0, 0, 1671, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 308, 309, 311, 310,
	312, 313, 314, 315, 0, 316, 317, 0, 0, 0,
	0, 0, 718, 0, 0, 0, 318, 0, 319, 320,
	321, 1330, 322, 323, 324, 325, 326, 327, 328, 719,
	720, 0, 329, 721, 330, 722, 0, 723, 331, 332,
	333, 334, 335, 336, 337, 0, 0, 0, 338, 724,
	725, 726, 0, 339, 340, 727, 0, 1638, 0, 341,
	342, 343, 344, 345, 346, 347, 348, 0, 0, 350,
	351, 352, 349, 353, 0, 354, 0, 355, 356, 357,
	358, 359, 360, 361, 0, 362, 363, 364, 1331, 365,
	366, 367, 0, 0, 0, 0, 0, 0, 0, 368,
	369, 370, 371, 372, 0, 373, 375, 728, 729, 0,
	378, 380, 374, 376, 0, 379, 377, 381, 0, 382,
	383, 384, 0, 0, 385, 386, 387, 0, 388, 389,
	390, 0, 391, 392, 393, 0, 394, 395, 730, 396,
	397, 398, 400, 402, 399, 401, 403, 404, 405, 406,
	407, 731, 732, 408, 0, 305, 0, 0, 0, 0,
	0, 409, 410, 411, 733, 0, 0, 0, 412, 0,
	413, 414, 415, 0, 416, 417, 0, 1332, 418, 419,
	420, 734, 735, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 0, 430, 736, 0, 737, 431, 0, 432,
	433, 434, 435, 436, 437, 438, 738, 739, 740, 531,
	1334, 439, 440, 441, 0, 442, 443, 444, 445, 446,
	0, 0, 0, 0, 447, 448, 449, 0, 1333, 741,
	450, 532, 451, 742, 743, 0, 744, 0, 452, 453,
	455, 1335, 745, 1336, 454, 456, 457, 1337, 458, 0,
	0, 0, 459, 460, 461, 462, 463, 464, 0, 465,
	467, 466, 0, 469, 746, 468, 1338, 470, 471, 1339,
	0, 472, 473, 474, 475, 476, 477, 480, 0, 0,
	478, 479, 481, 482, 0, 483, 484, 486, 489, 485,
	487, 488, 490, 503, 504, 491, 492, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 506, 0, 505,
	1340, 507, 508, 509, 510, 511, 518, 520, 521, 516,
	517, 519, 522, 523, 525, 513, 514, 515, 1341, 524,
	512, 0, 0, 1342, 526, 527, 528, 529, 0, 747,
	530, 748, 533, 534, 0, 0, 535, 0, 536, 0,
	0, 538, 539, 540, 0, 0, 541, 542, 749, 1343,
	543, 1344, 750, 544, 545, 537, 546, 547, 548, 549,
	550, 551, 552, 553, 554, 555, 0, 556, 557, 751,
	558, 559, 560, 752, 561, 562, 563, 753, 564, 754,
	565, 566, 0, 567, 568, 569, 0, 570, 571, 572,
	573, 574, 575, 576, 577, 755, 578, 579, 581, 580,
	582, 0, 583, 0, 584, 585, 586, 0, 0, 0,
	0, 0, 587, 588, 590, 0, 591, 592, 593, 594,
	589, 595, 596, 597, 598, 599, 600, 0, 602, 603,
	601, 604, 605, 1345, 606, 607, 608, 609, 610, 756,
	611, 0, 612, 613, 620, 621, 622, 614, 615, 616,
	623, 624, 625, 626, 627, 629, 628, 0, 631, 632,
	630, 633, 634, 635, 0, 636, 757, 637, 617, 618,
	638, 639, 1346, 640, 641, 642, 643, 644, 645, 646,
	758, 0, 647, 0, 648, 649, 650, 651, 652, 653,
	655, 619, 656, 661, 662, 759, 657, 658, 659, 660,
	760, 664, 665, 666, 667, 0, 668, 669, 0, 663,
	654, 0, 670, 671, 672, 673, 674, 675, 0, 676,
	677, 0, 678, 761, 762, 763, 764, 0, 690, 0,
	679, 681, 682, 683, 684, 765, 685, 766, 0, 686,
	687, 688, 689, 680, 691, 692, 0, 0, 693, 694,
	696, 698, 699, 695, 697, 700, 0, 701, 0, 0,
	702, 703, 704, 767, 768, 769, 0, 706, 705, 707,
	708, 709, 770, 710, 711, 712, 1674, 1673, 0, 0,
	713, 714, 771, 715, 716, 717, 0, 0, 0, 0,
	0, 0, 0, 308, 309, 311, 310, 312, 313, 314,
	315, 0, 316, 317, 0, 0, 0, 0, 0, 718,
	0, 0, 0, 318, 0, 319, 320, 321, 1330, 322,
	323, 324, 325, 326, 327, 328, 719, 720, 0, 329,
	721, 330, 722, 0, 723, 331, 332, 333, 334, 335,
	336, 337, 0, 0, 0, 338, 724, 725, 726, 0,
	339, 340, 727, 0, 1638, 0, 341, 342, 343, 344,
	345, 346, 347, 348, 0, 0, 350, 351, 352, 349,
	353, 0, 354, 0, 355, 356, 357, 358, 359, 360,
	361, 0, 362, 363, 364, 1331, 365, 366, 367, 0,
	0, 0, 0, 0, 0, 0, 368, 369, 370, 371,
	372, 0, 373, 375, 728, 729, 0, 378, 380, 374,
	376, 0, 379, 377, 381, 0, 382, 383, 384, 0,
	0, 385, 386, 387, 0, 388, 389, 390, 0, 391,
	392, 393, 0, 394, 395, 730, 396, 397, 398, 400,
	402, 399, 401, 403, 404, 405, 406, 407, 731, 732,
	408, 0, 305, 0, 0, 0, 0, 0, 409, 410,
	411, 733, 0, 0, 0, 412, 0, 413, 414, 415,
	0, 416, 417, 0, 1332, 418, 419, 420, 734, 735,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 0,
	430, 736, 0, 737, 431, 0, 432, 433, 434, 435,
	436, 437, 438, 738, 739, 740, 531, 1334, 439, 440,
	441, 0, 442, 443, 444, 445, 446, 0, 0, 0,
	0, 447, 448, 449, 0, 1333, 741, 450, 532, 451,
	742, 743, 0, 744, 0, 452, 453, 455, 1335, 745,
	1336, 454, 456, 457, 1337, 458, 0, 0, 0, 459,
	460, 461, 462, 463, 464, 0, 465, 467, 466, 0,
	469, 746, 468, 1338, 470, 471, 1339, 0, 472, 473,
	474, 475, 476, 477, 480, 0, 0, 478, 479, 481,
	482, 0, 483, 484, 486, 489, 485, 487, 488, 490,
	503, 504, 491, 492, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 506, 0, 505, 1340, 507, 508,
	509, 510, 511, 518, 520, 521, 516, 517, 519, 522,
	523, 525, 513, 514, 515, 1341, 524, 512, 0, 0,
	1342, 526, 527, 528, 529, 0, 747, 530, 748, 533,
	534, 0, 0, 535, 0, 536, 0, 0, 538, 539,
	540, 0, 0, 541, 542, 749, 1343, 543, 1344, 750,
	544, 545, 537, 546, 547, 548, 549, 550, 551, 552,
	553, 554, 555, 0, 556, 557, 751, 558, 559, 560,
	752, 561, 562, 563, 753, 564, 754, 565, 566, 0,
	567, 568, 569, 0, 570, 571, 572, 573, 574, 575,
	576, 577, 755, 578, 579, 581, 580, 582, 0, 583,
	0, 584, 585, 586, 0, 0, 0, 0, 0, 587,
	588, 590, 0, 591, 592, 593, 594, 589, 595, 596,
	597, 598, 599, 600, 0, 602, 603, 601, 604, 605,
	1345, 606, 607, 608, 609, 610, 756, 611, 0, 612,
	613, 620, 621, 622, 614, 615, 616, 623, 624, 625,
	626, 627, 629, 628, 0, 631, 632, 630, 633, 634,
	635, 0, 636, 757, 637, 617, 618, 638, 639, 1346,
	640, 641, 642, 643, 644, 645, 646, 758, 0, 647,
	0, 648, 649, 650, 651, 652, 653, 655, 619, 656,
	661, 662, 759, 657, 658, 659, 660, 760, 664, 665,
	666, 667, 0, 668, 669, 0, 663, 654, 0, 670,
	671, 672, 673, 674, 675, 0, 676, 677, 0, 678,
	761, 762, 763, 764, 0, 690, 0, 679, 681, 682,
	683, 684, 765, 685, 766, 0, 686, 687, 688, 689,
	680, 691, 692, 0, 0, 693, 694, 696, 698, 699,
	695, 697, 700, 0, 701, 0, 0, 702, 703, 704,
	767, 768, 769, 0, 706, 705, 707, 708, 709, 770,
	710, 711, 712, 1674, 0, 0, 0, 713, 714, 771,
	715, 716, 717, 0, 0, 0, 0, 0, 0, 0,
	308, 309, 311, 310, 312, 313, 314, 315, 0, 316,
	317, 0, 0, 0, 0, 0, 718, 0, 0, 0,
	318, 0, 319, 320, 321, 1330, 322, 323, 324, 325,
	326, 327, 328, 719, 720, 0, 329, 721, 330, 722,
	0, 723, 331, 332, 333, 334, 335, 336, 337, 0,
	0, 0, 338, 724, 725, 726, 0, 339, 340, 727,
	0, 1638, 0, 341, 342, 343, 344, 345, 346, 347,
	348, 0, 0, 350, 351, 352, 349, 353, 0, 354,
	0, 355, 356, 357, 358, 359, 360, 361, 0, 362,
	363, 364, 1331, 365, 366, 367, 0, 0, 0, 0,
	0, 0, 0, 368, 369, 370, 371, 372, 0, 373,
	375, 728, 729, 0, 378, 380, 374, 376, 0, 379,
	377, 381, 0, 382, 383, 384, 0, 0, 385, 386,
	387, 0, 388, 389, 390, 0, 391, 392, 393, 0,
	394, 395, 730, 396, 397, 398, 400, 402, 399, 401,
	403, 404, 405, 406, 407, 731, 732, 408, 0, 305,
	0, 0, 0, 0, 0, 409, 410, 411, 733, 0,
	0, 0, 412, 0, 413, 414, 415, 0, 416, 417,
	0, 1332, 418, 419, 420, 734, 735, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 0, 430, 736, 0,
	737, 431, 0, 432, 433, 434, 435, 436, 437, 438,
	738, 739, 740, 531, 1334, 439, 440, 441, 0, 442,
	443, 444, 445, 446, 0, 0, 0, 0, 447, 448,
	449, 0, 1333, 741, 450, 532, 451, 742, 743, 0,
	744, 0, 452, 453, 455, 1335, 745, 1336, 454, 456,
	457, 1337, 458, 0, 0, 0, 459, 460, 461, 462,
	463, 464, 0, 465, 467, 466, 0, 469, 746, 468,
	1338, 470, 471, 1339, 0, 472, 473, 474, 475, 476,
	477, 480, 0, 0, 478, 479, 481, 482, 0, 483,
	484, 486, 489, 485, 487, 488, 490, 503, 504, 491,
	492, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 506, 0, 505, 1340, 507, 508, 509, 510, 511,
	518, 520, 521, 516, 517, 519, 522, 523, 525, 513,
	514, 515, 1341, 524, 512, 0, 0, 1342, 526, 527,
	528, 529, 0, 747, 530, 748, 533, 534, 0, 0,
	535, 0, 536, 0, 0, 538, 539, 540, 0, 0,
	541, 542, 749, 1343, 543, 1344, 750, 544, 545, 537,
	546, 547, 548, 549, 550, 551, 552, 553, 554, 555,
	0, 556, 557, 751, 558, 559, 560, 752, 561, 562,
	563, 753, 564, 754, 565, 566, 0, 567, 568, 569,
	0, 570, 571, 572, 573, 574, 575, 576, 577, 755,
	578, 579, 581, 580, 582, 0, 583, 0, 584, 585,
	586, 0, 0, 0, 0, 0, 587, 588, 590, 0,
	591, 592, 593, 594, 589, 595, 596, 597, 598, 599,
	600, 0, 602, 603, 601, 604, 605, 1345, 606, 607,
	608, 609, 610, 756, 611, 0, 612, 613, 620, 621,
	622, 614, 615, 616, 623, 624, 625, 626, 627, 629,
	628, 0, 631, 632, 630, 633, 634, 635, 0, 636,
	757, 637, 617, 618, 638, 639, 1346, 640, 641, 642,
	643, 644, 645, 646, 758, 0, 647, 0, 648, 649,
	650, 651, 652, 653, 655, 619, 656, 661, 662, 759,
	657, 658, 659, 660, 760, 664, 665, 666, 667, 0,
	668, 669, 0, 663, 654, 0, 670, 671, 672, 673,
	674, 675, 0, 676, 677, 0, 678, 761, 762, 763,
	764, 0, 690, 0, 679, 681, 682, 683, 684, 765,
	685, 766, 0, 686, 687, 688, 689, 680, 691, 692,
	0, 0, 693, 694, 696, 698, 699, 695, 697, 700,
	0, 701, 0, 0, 702, 703, 704, 767, 768, 769,
	0, 706, 705, 707, 708, 709, 770, 710, 711, 712,
	302, 0, 0, 0, 713, 714, 771, 715, 716, 717,
	0, 0, 0, 0, 0, 0, 0, 308, 309, 311,
	310, 312, 313, 314, 315, 0, 316, 317, 0, 0,
	0, 0, 0, 718, 0, 0, 0, 318, 0, 319,
	320, 321, 0, 322, 323, 324, 325, 326, 327, 328,
	719, 720, 0, 329, 721, 330, 722, 0, 723, 331,
	332, 333, 334, 335, 336, 337, 0, 0, 0, 338,
	724, 725, 726, 3180, 339, 340, 727, 0, 0, 0,
	341, 342, 343, 344, 345, 346, 347, 348, 0, 0,
	350, 351, 352, 349, 353, 3977, 354, 0, 355, 356,
	357, 358, 359, 360, 361, 0, 362, 363, 364, 0,
	365, 366, 367, 0, 0, 0, 0, 0, 0, 0,
	368, 369, 370, 371, 372, 0, 373, 375, 728, 729,
	0, 378, 380, 374, 376, 0, 379, 377, 381, 0,
	382, 383, 384, 0, 0, 385, 386, 387, 0, 388,
	389, 390, 0, 391, 392, 393, 0, 3184, 395, 730,
	396, 397, 398, 400, 402, 399, 401, 403, 404, 405,
	406, 407, 731, 732, 408, 0, 3976, 0, 0, 0,
	0, 0, 409, 410, 411, 733, 0, 0, 0, 412,
	0, 413, 414, 415, 3183, 416, 417, 0, 0, 418,
	419, 420, 734, 735, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 0, 430, 736, 0, 737, 431, 0,
	432, 433, 434, 435, 436, 437, 438, 738, 739, 740,
	531, 0, 439, 440, 441, 0, 442, 443, 444, 445,
	446, 0, 0, 0, 3973, 447, 448, 449, 0, 0,
	741, 450, 532, 451, 742, 743, 0, 744, 0, 452,
	3975, 455, 0, 745, 0, 454, 456, 457, 0, 458,
	0, 0, 0, 459, 460, 461, 462, 463, 464, 0,
	465, 467, 466, 0, 469, 746, 468, 0, 470, 471,
	3972, 0, 472, 473, 474, 475, 476, 477, 480, 0,
	0, 478, 479, 481, 482, 0, 483, 484, 486, 489,
	485, 487, 488, 490, 503, 504, 491, 492, 493, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 506, 0,
	505, 0, 507, 508, 509, 510, 511, 518, 520, 521,
	516, 517, 519, 522, 523, 525, 513, 514, 515, 0,
	524, 512, 0, 0, 0, 526, 527, 528, 529, 0,
	747, 530, 748, 533, 534, 0, 0, 535, 0, 536,
	0, 0, 538, 539, 540, 0, 0, 541, 542, 749,
	0, 543, 0, 750, 544, 545, 537, 546, 547, 548,
	549, 550, 551, 552, 553, 554, 555, 0, 556, 557,
	751, 558, 559, 560, 752, 561, 562, 563, 753, 564,
	754, 565, 566, 3182, 567, 568, 569, 0, 570, 571,
	572, 573, 574, 575, 576, 577, 755, 578, 579, 581,
	580, 582, 0, 583, 0, 584, 585, 586, 0, 0,
	0, 0, 0, 587, 588, 590, 0, 591, 592, 593,
	594, 589, 595, 596, 597, 598, 599, 600, 0, 602,
	603, 601, 604, 605, 0, 606, 607, 608, 609, 610,
	756, 611, 0, 612, 613, 620, 621, 622, 614, 615,
	616, 623, 624, 625, 626, 627, 629, 628, 0, 631,
	632, 630, 633, 634, 635, 0, 636, 757, 637, 617,
	618, 638, 639, 0, 640, 641, 642, 643, 644, 645,
	646, 758, 0, 647, 0, 648, 649, 650, 651, 652,
	653, 655, 619, 656, 661, 662, 759, 657, 658, 659,
	660, 760, 664, 665, 666, 667, 0, 668, 669, 0,
	663, 654, 0, 670, 671, 672, 673, 674, 675, 0,
	676, 677, 0, 678, 761, 762, 763, 764, 0, 690,
	0, 679, 681, 682, 683, 684, 765, 685, 766, 0,
	686, 687, 688, 689, 680, 691, 692, 0, 3974, 693,
	694, 696, 698, 699, 695, 697, 700, 0, 701, 0,
	0, 702, 703, 704, 767, 768, 769, 0, 706, 705,
	707, 708, 709, 770, 710, 711, 712, 302, 0, 0,
	0, 713, 714, 771, 715, 716, 717, 0, 0, 0,
	0, 0, 0, 0, 308, 309, 311, 310, 312, 313,
	314, 315, 0, 316, 317, 0, 0, 0, 0, 0,
	718, 0, 0, 0, 318, 0, 319, 320, 321, 0,
	322, 323, 324, 325, 326, 327, 328, 719, 720, 0,
	329, 721, 330, 722, 0, 723, 331, 332, 333, 334,
	335, 336, 337, 0, 0, 0, 338, 724, 725, 726,
	3180, 339, 340, 727, 0, 0, 3174, 341, 342, 343,
	344, 345, 346, 347, 348, 0, 0, 350, 351, 352,
	349, 353, 3176, 354, 0, 355, 356, 357, 358, 359,
	360, 361, 0, 362, 363, 364, 0, 365, 366, 367,
	0, 0, 0, 0, 0, 0, 0, 368, 369, 370,
	371, 372, 0, 373, 375, 728, 729, 0, 378, 380,
	374, 376, 0, 379, 377, 381, 0, 382, 383, 384,
	0, 0, 385, 386, 387, 0, 388, 389, 390, 0,
	391, 392, 393, 0, 3184, 395, 730, 396, 397, 398,
	400, 402, 399, 401, 403, 404, 405, 406, 407, 731,
	732, 408, 0, 0, 0, 0, 0, 0, 0, 409,
	410, 411, 733, 0, 0, 0, 412, 0, 413, 414,
	415, 3183, 416, 417, 0, 0, 418, 419, 420, 734,
	735, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	0, 430, 736, 0, 737, 431, 0, 432, 433, 434,
	435, 436, 437, 438, 3173, 739, 740, 531, 0, 439,
	440, 441, 0, 442, 443, 444, 445, 446, 0, 0,
	0, 0, 447, 448, 449, 0, 0, 741, 450, 532,
	451, 742, 743, 0, 744, 0, 452, 453, 455, 0,
	745, 0, 454, 456, 457, 0, 458, 0, 0, 0,
	459, 460, 461, 462, 463, 464, 0, 465, 467, 466,
	0, 469, 746, 468, 0, 470, 471, 0, 0, 472,
	473, 474, 475, 476, 477, 480, 0, 0, 478, 479,
	481, 482, 0, 483, 484, 486, 489, 485, 487, 488,
	490, 503, 504, 491, 492, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 506, 0, 505, 0, 507,
	508, 509, 510, 511, 518, 520, 521, 516, 517, 519,
	522, 523, 525, 513, 514, 515, 0, 524, 512, 0,
	0, 0, 526, 527, 528, 529, 0, 747, 530, 748,
	533, 534, 0, 0, 535, 0, 536, 0, 0, 538,
	539, 540, 0, 0, 541, 542, 749, 0, 543, 0,
	750, 544, 545, 537, 546, 547, 548, 549, 550, 551,
	552, 553, 554, 555, 0, 556, 557, 751, 558, 559,
	560, 752, 561, 562, 563, 753, 564, 754, 565, 566,
	3182, 567, 568, 569, 0, 570, 571, 572, 573, 574,
	575, 576, 577, 755, 578, 579, 581, 580, 582, 0,
	583, 0, 584, 585, 586, 0, 0, 0, 0, 0,
	587, 588, 590, 0, 591, 592, 593, 594, 589, 595,
	596, 597, 598, 599, 600, 0, 602, 603, 601, 604,
	605, 0, 606, 607, 608, 609, 610, 756, 611, 0,
	612, 613, 620, 621, 622, 614, 615, 616, 623, 624,
	625, 626, 627, 629, 628, 0, 631, 632, 630, 633,
	634, 635, 0, 636, 757, 637, 617, 618, 638, 639,
	0, 640, 641, 642, 643, 644, 645, 646, 758, 0,
	647, 0, 648, 649, 650, 651, 652, 653, 655, 619,
	656, 661, 662, 759, 657, 658, 659, 660, 760, 664,
	665, 666, 667, 0, 668, 669, 0, 663, 654, 0,
	670, 671, 672, 673, 674, 675, 0, 676, 677, 0,
	678, 761, 762, 763, 764, 0, 690, 0, 679, 681,
	682, 683, 684, 765, 685, 766, 0, 686, 687, 688,
	689, 680, 691, 692, 0, 3181, 693, 694, 696, 698,
	699, 695, 697, 700, 0, 701, 0, 0, 702, 703,
	704, 767, 768, 769, 0, 706, 705, 707, 708, 709,
	770, 710, 711, 712, 1937, 0, 302, 0, 713, 714,
	771, 715, 716, 717, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 308, 309, 311, 310, 312, 313, 314,
	315, 1936, 316, 317, 0, 0, 0, 0, 0, 718,
	0, 0, 0, 318, 0, 319, 320, 321, 0, 322,
	323, 324, 325, 326, 327, 328, 719, 720, 0, 329,
	721, 330, 722, 0, 723, 331, 332, 333, 334, 335,
	336, 337, 0, 0, 0, 338, 724, 725, 726, 0,
	339, 340, 727, 0, 0, 0, 341, 342, 343, 344,
	345, 346, 347, 348, 0, 0, 350, 351, 352, 349,
	353, 0, 354, 0, 355, 356, 357, 358, 359, 360,
	361, 0, 362, 363, 364, 0, 365, 366, 367, 0,
	0, 0, 0, 0, 0, 0, 368, 369, 370, 1934,
	372, 0, 373, 375, 728, 729, 0, 378, 380, 374,
	376, 0, 379, 377, 381, 0, 382, 383, 384, 0,
	0, 385, 386, 387, 0, 388, 389, 390, 0, 391,
	392, 393, 0, 394, 395, 730, 396, 397, 398, 400,
	402, 399, 401, 403, 404, 405, 406, 407, 731, 732,
	408, 0, 305, 0, 0, 0, 0, 0, 409, 410,
	411, 733, 0, 0, 0, 412, 0, 413, 414, 415,
	0, 416, 417, 0, 0, 1935, 419, 420, 734, 735,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 0,
	430, 736, 0, 737, 431, 0, 432, 433, 434, 435,
	436, 437, 438, 738, 739, 740, 531, 0, 439, 440,
	441, 0, 442, 443, 444, 445, 446, 0, 0, 0,
	306, 447, 448, 449, 0, 0, 741, 450, 532, 451,
	742, 743, 0, 744, 0, 452, 453, 455, 0, 745,
	0, 454, 456, 457, 0, 458, 0, 0, 0, 459,
	460, 461, 462, 463, 464, 0, 465, 467, 466, 0,
	469, 746, 468, 0, 470, 471, 0, 0, 472, 473,
	474, 475, 476, 477, 480, 0, 0, 478, 479, 481,
	482, 0, 483, 484, 486, 489, 485, 487, 488, 490,
	503, 504, 491, 492, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 506, 0, 505, 0, 507, 508,
	509, 510, 511, 518, 520, 521, 516, 517, 519, 522,
	523, 525, 513, 514, 515, 0, 524, 512, 0, 307,
	0, 526, 527, 528, 529, 0, 747, 530, 748, 533,
	534, 0, 0, 535, 0, 536, 0, 0, 538, 539,
	540, 0, 0, 541, 542, 749, 0, 543, 0, 750,
	544, 545, 537, 546, 547, 548, 549, 550, 551, 552,
	553, 554, 555, 0, 556, 557, 751, 558, 559, 560,
	752, 561, 562, 563, 753, 564, 754, 565, 566, 0,
	567, 568, 569, 0, 570, 571, 572, 573, 574, 575,
	576, 577, 755, 578, 579, 581, 580, 582, 0, 583,
	0, 584, 585, 586, 0, 0, 0, 0, 0, 587,
	588, 590, 0, 591, 592, 593, 594, 589, 595, 596,
	597, 598, 599, 600, 0, 602, 603, 601, 604, 605,
	0, 606, 607, 608, 609, 610, 756, 611, 0, 612,
	613, 620, 621, 622, 1938, 615, 616, 623, 624, 625,
	626, 627, 629, 628, 0, 1933, 632, 630, 633, 634,
	635, 0, 636, 757, 637, 617, 618, 638, 639, 0,
	640, 641, 642, 643, 644, 645, 646, 758, 0, 647,
	0, 648, 649, 650, 651, 652, 653, 655, 619, 656,
	661, 662, 759, 657, 658, 659, 660, 760, 664, 665,
	666, 667, 0, 668, 669, 0, 663, 654, 1931, 670,
	671, 672, 673, 674, 675, 0, 676, 677, 0, 678,
	761, 762, 763, 764, 0, 690, 0, 679, 681, 682,
	683, 684, 765, 685, 766, 0, 686, 687, 688, 689,
	680, 691, 692, 0, 0, 693, 694, 696, 698, 699,
	695, 697, 700, 0, 701, 0, 0, 702, 703, 704,
	767, 768, 769, 0, 1932, 705, 707, 708, 709, 770,
	710, 711, 712, 1642, 0, 302, 0, 713, 714, 771,
	715, 716, 717, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 308, 309, 311, 310, 312, 313, 314, 315,
	0, 316, 317, 0, 0, 0, 0, 0, 718, 0,
	0, 0, 318, 0, 319, 320, 321, 0, 322, 323,
	324, 325, 326, 327, 328, 719, 720, 0, 329, 721,
	330, 722, 0, 723, 331, 332, 333, 334, 335, 336,
	337, 0, 0, 0, 338, 724, 725, 726, 0, 339,
	340, 727, 0, 0, 0, 341, 342, 343, 344, 345,
	346, 347, 348, 0, 0, 350, 351, 352, 349, 353,
	0, 354, 0, 355, 356, 357, 358, 359, 360, 361,
	0, 362, 363, 364, 0, 365, 366, 367, 0, 0,
	0, 0, 0, 0, 0, 368, 369, 370, 371, 372,
	0, 373, 375, 728, 729, 0, 378, 380, 374, 376,
	0, 379, 377, 381, 0, 382, 383, 384, 0, 0,
	385, 386, 387, 0, 388, 389, 390, 0, 391, 392,
	393, 0, 394, 395, 730, 396, 397, 398, 400, 402,
	399, 401, 403, 404, 405, 406, 407, 731, 732, 408,
	0, 305, 0, 0, 0, 0, 0, 409, 410, 411,
	733, 0, 0, 0, 412, 0, 413, 414, 415, 0,
	416, 417, 0, 0, 418, 419, 420, 734, 735, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 0, 430,
	736, 0, 737, 431, 0, 432, 433, 434, 435, 436,
	437, 438, 1644, 739, 740, 531, 0, 439, 440, 441,
	0, 442, 443, 444, 445, 446, 0, 0, 0, 306,
	447, 448, 449, 0, 0, 741, 450, 532, 451, 742,
	743, 0, 744, 0, 452, 453, 455, 0, 745, 0,
	454, 456, 457, 0, 458, 0, 0, 0, 459, 460,
	461, 462, 463, 464, 0, 465, 467, 466, 0, 469,
	746, 468, 0, 470, 471, 0, 0, 472, 473, 474,
	475, 476, 477, 480, 0, 0, 478, 479, 481, 482,
	0, 483, 484, 486, 489, 485, 487, 488, 490, 503,
	504, 491, 492, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 506, 0, 505, 0, 507, 508, 509,
	510, 511, 518, 520, 521, 516, 517, 519, 522, 523,
	525, 513, 514, 515, 0, 524, 512, 0, 307, 0,
	526, 527, 528, 529, 0, 747, 530, 748, 533, 534,
	0, 0, 535, 0, 536, 0, 1381, 538, 539, 540,
	0, 0, 541, 542, 749, 0, 543, 0, 750, 544,
	545, 537, 546, 547, 548, 549, 550, 551, 552, 553,
	554, 555, 0, 556, 557, 751, 558, 559, 560, 752,
	561, 562, 563, 753, 564, 754, 565, 566, 0, 567,
	568, 569, 0, 570, 571, 572, 573, 574, 575, 576,
	577, 755, 578, 579, 581, 580, 582, 0, 583, 0,
	584, 585, 586, 0, 0, 0, 0, 0, 587, 588,
	590, 0, 591, 592, 593, 594, 589, 595, 596, 597,
	598, 599, 600, 0, 602, 603, 601, 604, 605, 0,
	606, 607, 608, 609, 610, 756, 611, 0, 612, 613,
	620, 621, 622, 614, 615, 616, 623, 624, 625, 626,
	627, 629, 628, 0, 631, 632, 630, 633, 634, 635,
	0, 636, 757, 637, 617, 618, 638, 639, 0, 640,
	641, 642, 643, 644, 645, 646, 758, 0, 647, 0,
	648, 649, 650, 651, 652, 653, 655, 619, 656, 661,
	662, 759, 657, 658, 659, 660, 760, 664, 665, 666,
	667, 0, 668, 669, 0, 663, 654, 0, 670, 671,
	672, 673, 674, 675, 0, 676, 677, 0, 678, 761,
	762, 763, 764, 0, 690, 0, 679, 681, 682, 683,
	684, 765, 685, 766, 0, 686, 687, 688, 689, 680,
	691, 692, 0, 0, 693, 694, 696, 698, 699, 695,
	697, 700, 0, 701, 0, 0, 702, 703, 704, 767,
	768, 769, 0, 706, 705, 707, 708, 709, 770, 710,
	711, 712, 1639, 0, 302, 0, 713, 714, 771, 715,
	716, 717, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 308, 309, 311, 310, 312, 313, 314, 315, 0,
	316, 317, 0, 0, 0, 0, 0, 718, 0, 0,
	0, 318, 0, 319, 320, 321, 0, 322, 323, 324,
	325, 326, 327, 328, 719, 720, 0, 329, 721, 330,
	722, 0, 723, 331, 332, 333, 334, 335, 336, 337,
	0, 0, 0, 338, 724, 725, 726, 0, 339, 340,
	727, 0, 0, 0, 341, 342, 343, 344, 345, 346,
	347, 348, 0, 0, 350, 351, 352, 349, 353, 0,
	354, 0, 355, 356, 357, 358, 359, 360, 361, 0,
	362, 363, 364, 0, 365, 366, 367, 0, 0, 0,
	0, 0, 0, 0, 368, 369, 370, 371, 372, 0,
	373, 375, 728, 729, 0, 378, 380, 374, 376, 0,
	379, 377, 381, 0, 382, 383, 384, 0, 0, 385,
	386, 387, 0, 388, 389, 390, 0, 391, 392, 393,
	0, 394, 395, 730, 396, 397, 398, 400, 402, 399,
	401, 403, 404, 405, 406, 407, 731, 732, 408, 0,
	305, 0, 0, 0, 0, 0, 409, 410, 411, 733,
	0, 0, 0, 412, 0, 413, 414, 415, 0, 416,
	417, 0, 0, 418, 419, 420, 734, 735, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 0, 430, 736,
	0, 737, 431, 0, 432, 433, 434, 435, 436, 437,
	438, 1641, 739, 740, 531, 0, 439, 440, 441, 0,
	442, 443, 444, 445, 446, 0, 0, 0, 306, 447,
	448, 449, 0, 0, 741, 450, 532, 451, 742, 743,
	0, 744, 0, 452, 453, 455, 0, 745, 0, 454,
	456, 457, 0, 458, 0, 0, 0, 459, 460, 461,
	462, 463, 464, 0, 465, 467, 466, 0, 469, 746,
	468, 0, 470, 471, 0, 0, 472, 473, 474, 475,
	476, 477, 480, 0, 0, 478, 479, 481, 482, 0,
	483, 484, 486, 489, 485, 487, 488, 490, 503, 504,
	491, 492, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 506, 0, 505, 0, 507, 508, 509, 510,
	511, 518, 520, 521, 516, 517, 519, 522, 523, 525,
	513, 514, 515, 0, 524, 512, 0, 307, 0, 526,
	527, 528, 529, 0, 747, 530, 748, 533, 534, 0,
	0, 535, 0, 536, 0, 1381, 538, 539, 540, 0,
	0, 541, 542, 749, 0, 543, 0, 750, 544, 545,
	537, 546, 547, 548, 549, 550, 551, 552, 553, 554,
	555, 0, 556, 557, 751, 558, 559, 560, 752, 561,
	562, 563, 753, 564, 754, 565, 566, 0, 567, 568,
	569, 0, 570, 571, 572, 573, 574, 575, 576, 577,
	755, 578, 579, 581, 580, 582, 0, 583, 0, 584,
	585, 586, 0, 0, 0, 0, 0, 587, 588, 590,
	0, 591, 592, 593, 594, 589, 595, 596, 597, 598,
	599, 600, 0, 602, 603, 601, 604, 605, 0, 606,
	607, 608, 609, 610, 756, 611, 0, 612, 613, 620,
	621, 622, 614, 615, 616, 623, 624, 625, 626, 627,
	629, 628, 0, 631, 632, 630, 633, 634, 635, 0,
	636, 757, 637, 617, 618, 638, 639, 0, 640, 641,
	642, 643, 644, 645, 646, 758, 0, 647, 0, 648,
	649, 650, 651, 652, 653, 655, 619, 656, 661, 662,
	759, 657, 658, 659, 660, 760, 664, 665, 666, 667,
	0, 668, 669, 0, 663, 654, 0, 670, 671, 672,
	673, 674, 675, 0, 676, 677, 0, 678, 761, 762,
	763, 764, 0, 690, 0, 679, 681, 682, 683, 684,
	765, 685, 766, 0, 686, 687, 688, 689, 680, 691,
	692, 0, 0, 693, 694, 696, 698, 699, 695, 697,
	700, 0, 701, 0, 0, 702, 703, 704, 767, 768,
	769, 0, 706, 705, 707, 708, 709, 770, 710, 711,
	712, 1545, 0, 302, 0, 713, 714, 771, 715, 716,
	717, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	308, 309, 311, 310, 312, 313, 314, 315, 0, 316,
	317, 0, 0, 0, 0, 0, 718, 0, 0, 0,
	318, 0, 319, 320, 321, 0, 322, 323, 324, 325,
	326, 327, 328, 719, 720, 0, 329, 721, 330, 722,
	0, 723, 331, 332, 333, 334, 335, 336, 337, 0,
	0, 0, 338, 724, 725, 726, 0, 339, 340, 727,
	0, 0, 0, 341, 342, 343, 344, 345, 346, 347,
	348, 0, 0, 350, 351, 352, 349, 353, 0, 354,
	0, 355, 356, 357, 358, 359, 360, 361, 0, 362,
	363, 364, 0, 365, 366, 367, 0, 0, 0, 0,
	0, 0, 0, 368, 369, 370, 371, 372, 0, 373,
	375, 728, 729, 0, 378, 380, 374, 376, 0, 379,
	377, 381, 0, 382, 383, 384, 0, 0, 385, 386,
	387, 0, 388, 389, 390, 0, 391, 392, 393, 0,
	394, 395, 730, 396, 397, 398, 400, 402, 399, 401,
	403, 404, 405, 406, 407, 731, 732, 408, 0, 305,
	0, 0, 0, 0, 0, 409, 410, 411, 733, 0,
	0, 0, 412, 0, 413, 414, 415, 0, 416, 417,
	0, 0, 418, 419, 420, 734, 735, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 0, 430, 736, 0,
	737, 431, 0, 432, 433, 434, 435, 436, 437, 438,
	1547, 739, 740, 531, 0, 439, 440, 441, 0, 442,
	443, 444, 445, 446, 0, 0, 0, 306, 447, 448,
	449, 0, 0, 741, 450, 532, 451, 742, 743, 0,
	744, 0, 452, 453, 455, 0, 745, 0, 454, 456,
	457, 0, 458, 0, 0, 0, 459, 460, 461, 462,
	463, 464, 0, 465, 467, 466, 0, 469, 746, 468,
	0, 470, 471, 0, 0, 472, 473, 474, 475, 476,
	477, 480, 0, 0, 478, 479, 481, 482, 0, 483,
	484, 486, 489, 485, 487, 488, 490, 503, 504, 491,
	492, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 506, 0, 505, 0, 507, 508, 509, 510, 511,
	518, 520, 521, 516, 517, 519, 522, 523, 525, 513,
	514, 515, 0, 524, 512, 0, 307, 0, 526, 527,
	528, 529, 0, 747, 530, 748, 533, 534, 0, 0,
	535, 0, 536, 0, 1381, 538, 539, 540, 0, 0,
	541, 542, 749, 0, 543, 0, 750, 544, 545, 537,
	546, 547, 548, 549, 550, 551, 552, 553, 554, 555,
	0, 556, 557, 751, 558, 559, 560, 752, 561, 562,
	563, 753, 564, 754, 565, 566, 0, 567, 568, 569,
	0, 570, 571, 572, 573, 574, 575, 576, 577, 755,
	578, 579, 581, 580, 582, 0, 583, 0, 584, 585,
	586, 0, 0, 0, 0, 0, 587, 588, 590, 0,
	591, 592, 593, 594, 589, 595, 596, 597, 598, 599,
	600, 0, 602, 603, 601, 604, 605, 0, 606, 607,
	608, 609, 610, 756, 611, 0, 612, 613, 620, 621,
	622, 614, 615, 616, 623, 624, 625, 626, 627, 629,
	628, 0, 631, 632, 630, 633, 634, 635, 0, 636,
	757, 637, 617, 618, 638, 639, 0, 640, 641, 642,
	643, 644, 645, 646, 758, 0, 647, 0, 648, 649,
	650, 651, 652, 653, 655, 619, 656, 661, 662, 759,
	657, 658, 659, 660, 760, 664, 665, 666, 667, 0,
	668, 669, 0, 663, 654, 0, 670, 671, 672, 673,
	674, 675, 0, 676, 677, 0, 678, 761, 762, 763,
	764, 0, 690, 0, 679, 681, 682, 683, 684, 765,
	685, 766, 0, 686, 687, 688, 689, 680, 691, 692,
	0, 0, 693, 694, 696, 698, 699, 695, 697, 700,
	0, 701, 0, 0, 702, 703, 704, 767, 768, 769,
	0, 706, 705, 707, 708, 709, 770, 710, 711, 712,
	806, 0, 302, 0, 713, 714, 771, 715, 716, 717,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 308,
	309, 311, 310, 312, 804, 314, 315, 793, 316, 317,
	0, 0, 0, 0, 0, 718, 0, 0, 0, 318,
	0, 319, 320, 321, 0, 322, 323, 324, 325, 326,
	327, 328, 719, 720, 0, 329, 721, 330, 722, 0,
	723, 331, 332, 333, 334, 335, 336, 337, 0, 0,
	0, 338, 724, 725, 726, 0, 339, 340, 727, 0,
	0, 0, 341, 342, 343, 344, 345, 346, 347, 348,
	0, 0, 350, 351, 352, 349, 353, 0, 354, 0,
	355, 356, 357, 358, 359, 360, 361, 796, 362, 363,
	364, 0, 365, 366, 367, 0, 0, 0, 0, 0,
	0, 0, 368, 369, 370, 371, 372, 0, 373, 375,
	728, 729, 0, 378, 380, 374, 376, 0, 379, 377,
	381, 0, 382, 383, 384, 0, 0, 385, 386, 387,
	0, 388, 389, 390, 0, 391, 392, 393, 0, 394,
	395, 730, 396, 397, 398, 400, 402, 399, 401, 403,
	404, 405, 406, 407, 731, 732, 408, 0, 0, 0,
	0, 0, 0, 0, 409, 410, 411, 733, 0, 0,
	0, 412, 0, 413, 414, 415, 0, 416, 417, 0,
	0, 418, 419, 420, 734, 735, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 802, 430, 736, 0, 737,
	431, 0, 432, 433, 434, 435, 436, 437, 438, 738,
	739, 740, 531, 0, 439, 440, 441, 0, 442, 443,
	444, 445, 446, 0, 0, 0, 0, 447, 448, 449,
	0, 0, 741, 450, 532, 451, 742, 743, 0, 744,
	0, 452, 453, 455, 0, 745, 0, 454, 456, 457,
	0, 458, 0, 0, 0, 459, 460, 461, 462, 463,
	464, 0, 465, 467, 466, 0, 469, 746, 468, 0,
	470, 471, 0, 0, 472, 473, 474, 475, 476, 477,
	480, 0, 0, 478, 479, 481, 482, 0, 483, 484,
	486, 489, 485, 487, 488, 490, 503, 504, 491, 492,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	506, 0, 505, 0, 507, 508, 509, 510, 511, 518,
	520, 521, 516, 517, 519, 522, 523, 525, 513, 514,
	515, 0, 524, 512, 0, 0, 0, 526, 527, 528,
	529, 0, 747, 530, 748, 533, 534, 0, 0, 535,
	0, 536, 0, 0, 538, 539, 540, 0, 0, 541,
	542, 749, 0, 543, 0, 750, 544, 545, 537, 546,
	547, 548, 549, 550, 551, 552, 553, 554, 555, 0,
	556, 557, 751, 558, 559, 560, 752, 561, 562, 563,
	753, 564, 754, 565, 566, 0, 567, 568, 569, 0,
	570, 571, 572, 573, 574, 575, 576, 577, 755, 578,
	579, 581, 580, 582, 0, 583, 0, 584, 585, 586,
	0, 0, 0, 0, 0, 587, 588, 590, 0, 591,
	592, 593, 594, 589, 595, 596, 597, 598, 599, 600,
	0, 602, 603, 601, 604, 605, 0, 606, 607, 608,
	609, 610, 756, 611, 0, 612, 613, 620, 621, 622,
	614, 615, 616, 623, 624, 625, 626, 627, 629, 628,
	798, 631, 632, 630, 633, 634, 635, 0, 636, 757,
	637, 617, 618, 638, 639, 0, 640, 641, 642, 643,
	644, 645, 646, 758, 0, 647, 0, 648, 649, 650,
	651, 652, 653, 655, 619, 656, 661, 662, 759, 657,
	658, 659, 660, 760, 664, 665, 666, 667, 0, 668,
	805, 0, 663, 654, 0, 670, 671, 672, 673, 674,
	675, 0, 676, 677, 0, 678, 761, 762, 763, 764,
	0, 690, 0, 679, 681, 682, 683, 684, 765, 685,
	766, 0, 686, 687, 688, 689, 680, 691, 692, 0,
	0, 693, 694, 696, 698, 699, 695, 697, 700, 0,
	701, 0, 0, 702, 703, 704, 767, 768, 769, 0,
	706, 705, 707, 708, 709, 770, 710, 711, 712, 792,
	0, 302, 0, 713, 714, 771, 715, 716, 717, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 308, 309,
	311, 310, 312, 313, 314, 315, 793, 316, 317, 0,
	0, 0, 0, 0, 718, 0, 0, 0, 318, 0,
	319, 320, 321, 0, 322, 323, 324, 325, 326, 327,
	328, 719, 720, 0, 329, 721, 330, 722, 0, 723,
	331, 332, 333, 334, 335, 336, 337, 0, 0, 0,
	338, 724, 725, 726, 0, 339, 340, 727, 0, 0,
	0, 341, 342, 343, 344, 345, 346, 347, 348, 0,
	0, 350, 351, 352, 349, 353, 0, 354, 0, 355,
	356, 357, 358, 359, 360, 361, 796, 362, 363, 364,
	0, 365, 366, 367, 0, 0, 0, 0, 0, 0,
	0, 368, 369, 370, 371, 372, 0, 373, 375, 728,
	729, 0, 378, 380, 374, 376, 0, 379, 377, 381,
	0, 382, 383, 384, 0, 0, 385, 386, 387, 0,
	388, 389, 390, 0, 391, 392, 393, 0, 394, 395,
	730, 396, 397, 398, 400, 402, 399, 401, 403, 404,
	405, 406, 407, 731, 732, 408, 0, 0, 0, 0,
	0, 0, 0, 409, 410, 411, 733, 0, 0, 0,
	412, 0, 413, 414, 415, 0, 416, 417, 0, 0,
	418, 419, 420, 734, 735, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 797, 430, 736, 0, 737, 431,
	0, 432, 433, 434, 435, 436, 437, 438, 738, 739,
	740, 531, 0, 439, 440, 441, 0, 442, 443, 444,
	445, 446, 0, 0, 0, 0, 447, 448, 449, 0,
	0, 741, 450, 532, 451, 742, 743, 0, 744, 0,
	452, 453, 455, 0, 745, 0, 454, 456, 457, 0,
	458, 0, 0, 0, 459, 460, 461, 462, 463, 464,
	0, 465, 467, 466, 0, 469, 746, 468, 0, 470,
	471, 0, 0, 472, 473, 474, 475, 476, 477, 480,
	0, 0, 478, 479, 481, 482, 0, 483, 484, 486,
	489, 485, 487, 488, 490, 503, 504, 491, 492, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 506,
	0, 505, 0, 507, 508, 509, 510, 511, 518, 520,
	521, 516, 517, 519, 522, 523, 525, 513, 514, 515,
	0, 524, 512, 0, 0, 0, 526, 527, 528, 529,
	0, 747, 530, 748, 533, 534, 0, 0, 535, 0,
	536, 0, 0, 538, 539, 540, 0, 0, 541, 542,
	749, 0, 543, 0, 750, 544, 545, 537, 546, 547,
	548, 549, 550, 551, 552, 553, 554, 555, 0, 556,
	557, 751, 558, 559, 560, 752, 561, 562, 563, 753,
	564, 754, 565, 566, 0, 567, 568, 569, 0, 570,
	571, 572, 573, 574, 575, 576, 577, 755, 578, 579,
	581, 580, 582, 0, 583, 0, 584, 585, 586, 0,
	0, 0, 0, 0, 587, 588, 590, 0, 591, 592,
	593, 594, 589, 595, 596, 597, 598, 599, 600, 0,
	602, 603, 601, 604, 605, 0, 606, 607, 608, 609,
	610, 756, 611, 0, 612, 613, 620, 621, 622, 614,
	615, 616, 623, 624, 625, 626, 627, 629, 628, 798,
	631, 632, 630, 633, 634, 635, 0, 636, 757, 637,
	617, 618, 638, 639, 0, 640, 641, 642, 643, 644,
	645, 646, 758, 0, 647, 0, 648, 649, 650, 651,
	652, 653, 655, 619, 656, 661, 662, 759, 657, 658,
	659, 660, 760, 664, 665, 666, 667, 0, 668, 791,
	0, 663, 654, 0, 670, 671, 672, 673, 674, 675,
	0, 676, 677, 0, 678, 761, 762, 763, 764, 0,
	690, 0, 679, 681, 682, 683, 684, 765, 685, 766,
	0, 686, 687, 688, 689, 680, 691, 692, 0, 0,
	693, 694, 696, 698, 699, 695, 697, 700, 0, 701,
	0, 0, 702, 703, 704, 767, 768, 769, 0, 706,
	705, 707, 708, 709, 770, 710, 711, 712, 302, 0,
	0, 0, 713, 714, 771, 715, 716, 717, 0, 0,
	0, 0, 0, 0, 0, 308, 309, 311, 310, 312,
	313, 314, 315, 793, 316, 317, 0, 0, 0, 0,
	0, 718, 0, 0, 0, 318, 0, 319, 320, 321,
	0, 322, 323, 324, 325, 326, 327, 328, 719, 720,
	0, 329, 721, 330, 722, 0, 723, 331, 332, 333,
	334, 335, 336, 337, 0, 0, 0, 338, 724, 725,
	726, 0, 339, 340, 727, 0, 0, 0, 341, 342,
	343, 344, 345, 346, 347, 348, 0, 0, 350, 351,
	352, 349, 353, 0, 354, 0, 355, 356, 357, 358,
	359, 360, 361, 796, 362, 363, 364, 0, 365, 366,
	367, 0, 0, 0, 0, 0, 0, 0, 368, 369,
	370, 371, 372, 0, 373, 375, 728, 729, 0, 378,
	380, 374, 376, 0, 379, 377, 381, 0, 382, 383,
	384, 0, 0, 385, 386, 387, 0, 388, 389, 390,
	0, 391, 392, 393, 0, 394, 395, 730, 396, 397,
	398, 400, 402, 399, 401, 403, 404, 405, 406, 407,
	731, 732, 408, 0, 0, 0, 0, 0, 0, 0,
	409, 410, 411, 733, 0, 0, 0, 412, 0, 413,
	414, 415, 0, 416, 417, 0, 0, 418, 419, 420,
	734, 735, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 797, 430, 736, 0, 737, 431, 0, 432, 433,
	434, 435, 436, 437, 438, 738, 739, 740, 531, 0,
	439, 440, 441, 0, 442, 443, 444, 445, 446, 0,
	0, 0, 0, 447, 448, 449, 0, 0, 741, 450,
	532, 451, 742, 743, 0, 744, 0, 452, 453, 455,
	0, 745, 0, 454, 456, 457, 0, 458, 0, 0,
	0, 459, 460, 461, 462, 463, 464, 0, 465, 467,
	466, 0, 469, 746, 468, 0, 470, 471, 0, 0,
	472, 473, 474, 475, 476, 477, 480, 0, 0, 478,
	479, 481, 482, 0, 483, 484, 486, 489, 485, 487,
	488, 490, 503, 504, 491, 492, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 506, 0, 505, 0,
	507, 508, 509, 510, 511, 518, 520, 521, 516, 517,
	519, 522, 523, 525, 513, 514, 515, 0, 524, 512,
	0, 0, 0, 526, 527, 528, 529, 0, 747, 530,
	748, 533, 534, 0, 0, 535, 0, 536, 0, 0,
	538, 539, 540, 0, 0, 541, 542, 749, 0, 543,
	0, 750, 544, 545, 537, 546, 547, 548, 549, 550,
	551, 552, 553, 554, 555, 0, 556, 557, 751, 558,
	559, 560, 752, 561, 562, 563, 753, 564, 754, 565,
	566, 0, 567, 568, 569, 0, 570, 571, 572, 573,
	574, 575, 576, 577, 755, 578, 579, 581, 580, 582,
	0, 583, 0, 584, 585, 586, 0, 0, 0, 0,
	0, 587, 588, 590, 0, 591, 592, 593, 594, 589,
	595, 596, 597, 598, 599, 600, 0, 602, 603, 601,
	604, 605, 0, 606, 607, 608, 609, 610, 756, 611,
	0, 612, 613, 620, 621, 622, 614, 615, 616, 623,
	624, 625, 626, 627, 629, 628, 798, 631, 632, 630,
	633, 634, 635, 0, 636, 757, 637, 617, 618, 638,
	639, 0, 640, 641, 642, 643, 644, 645, 646, 758,
	0, 647, 0, 648, 649, 650, 651, 652, 653, 655,
	619, 656, 661, 662, 759, 657, 658, 659, 660, 760,
	664, 665, 666, 667, 0, 668, 669, 0, 663, 654,
	0, 670, 671, 672, 673, 674, 675, 0, 676, 677,
	0, 678, 761, 762, 763, 764, 0, 690, 0, 679,
	681, 682, 683, 684, 765, 685, 766, 0, 686, 687,
	688, 689, 680, 691, 692, 0, 0, 693, 694, 696,
	698, 699, 695, 697, 700, 0, 701, 0, 0, 702,
	703, 704, 767, 768, 769, 0, 706, 705, 707, 708,
	709, 770, 710, 711, 712, 302, 0, 0, 0, 713,
	714, 771, 715, 716, 717, 0, 0, 0, 0, 0,
	0, 0, 308, 309, 311, 310, 312, 313, 314, 315,
	793, 316, 317, 0, 0, 0, 0, 0, 718, 0,
	0, 0, 318, 0, 319, 320, 321, 0, 322, 323,
	324, 325, 326, 327, 328, 719, 720, 0, 329, 721,
	330, 722, 0, 723, 331, 332, 333, 334, 335, 336,
	337, 0, 0, 0, 338, 724, 725, 726, 0, 339,
	340, 727, 0, 0, 0, 341, 342, 343, 344, 345,
	346, 347, 348, 0, 0, 350, 351, 352, 349, 353,
	0, 354, 0, 355, 356, 357, 358, 359, 360, 361,
	796, 362, 363, 364, 0, 365, 366, 367, 0, 0,
	0, 0, 0, 0, 0, 368, 369, 370, 371, 372,
	0, 373, 375, 728, 729, 0, 378, 380, 374, 376,
	0, 379, 377, 381, 0, 382, 383, 384, 0, 0,
	385, 386, 387, 0, 388, 389, 390, 0, 391, 392,
	393, 0, 394, 395, 730, 396, 397, 398, 400, 402,
	399, 401, 403, 404, 405, 406, 407, 731, 732, 408,
	0, 0, 0, 0, 0, 0, 0, 409, 410, 411,
	733, 0, 0, 0, 412, 0, 413, 414, 415, 0,
	416, 417, 0, 0, 418, 419, 420, 734, 735, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 4393, 430,
	736, 0, 737, 431, 0, 432, 433, 434, 435, 436,
	437, 438, 738, 739, 740, 531, 0, 439, 440, 441,
	0, 442, 443, 444, 445, 446, 0, 0, 0, 0,
	447, 448, 449, 0, 0, 741, 450, 532, 451, 742,
	743, 0, 744, 0, 452, 453, 455, 0, 745, 0,
	454, 456, 457, 0, 458, 0, 0, 0, 459, 460,
	461, 462, 463, 464, 0, 465, 467, 466, 0, 469,
	746, 468, 0, 470, 471, 0, 0, 472, 473, 474,
	475, 476, 477, 480, 0, 0, 478, 479, 481, 482,
	0, 483, 484, 486, 489, 485, 487, 488, 490, 503,
	504, 491, 492, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 506, 0, 505, 0, 507, 508, 509,
	510, 511, 518, 520, 521, 516, 517, 519, 522, 523,
	525, 513, 514, 515, 0, 524, 512, 0, 0, 0,
	526, 527, 528, 529, 0, 747, 530, 748, 533, 534,
	0, 0, 535, 0, 536, 0, 0, 538, 539, 540,
	0, 0, 541, 542, 749, 0, 543, 0, 750, 544,
	545, 537, 546, 547, 548, 549, 550, 551, 552, 553,
	554, 555, 0, 556, 557, 751, 558, 559, 560, 752,
	561, 562, 563, 753, 564, 754, 565, 566, 0, 567,
	568, 569, 0, 570, 571, 572, 573, 574, 575, 576,
	577, 755, 578, 579, 581, 580, 582, 0, 583, 0,
	584, 585, 586, 0, 0, 0, 0, 0, 587, 588,
	590, 0, 591, 592, 593, 594, 589, 595, 596, 597,
	598, 599, 600, 0, 602, 603, 601, 604, 605, 0,
	606, 607, 608, 609, 610, 756, 611, 0, 612, 613,
	620, 621, 622, 614, 615, 616, 623, 624, 625, 626,
	627, 629, 628, 798, 631, 632, 630, 633, 634, 635,
	0, 636, 757, 637, 617, 618, 638, 639, 0, 640,
	641, 642, 643, 644, 645, 646, 758, 0, 647, 0,
	648, 649, 650, 651, 652, 653, 655, 619, 656, 661,
	662, 759, 657, 658, 659, 660, 760, 664, 665, 666,
	667, 0, 668, 669, 0, 663, 654, 0, 670, 671,
	672, 673, 674, 675, 0, 676, 677, 0, 678, 761,
	762, 763, 764, 0, 690, 0, 679, 681, 682, 683,
	684, 765, 685, 766, 0, 686, 687, 688, 689, 680,
	691, 692, 0, 0, 693, 694, 696, 698, 699, 695,
	697, 700, 0, 701, 0, 0, 702, 703, 704, 767,
	768, 769, 0, 706, 705, 707, 708, 709, 770, 710,
	711, 712, 302, 0, 0, 0, 713, 714, 771, 715,
	716, 717, 0, 0, 0, 0, 0, 0, 0, 308,
	309, 311, 310, 312, 313, 314, 315, 0, 316, 317,
	0, 0, 0, 0, 0, 718, 0, 0, 0, 318,
	0, 319, 320, 321, 0, 322, 323, 324, 325, 326,
	327, 328, 719, 720, 0, 329, 721, 330, 722, 0,
	723, 331, 332, 333, 334, 335, 336, 337, 0, 0,
	0, 338, 724, 725, 726, 0, 339, 340, 727, 0,
	0, 0, 341, 342, 343, 344, 345, 346, 347, 348,
	0, 0, 350, 351, 352, 349, 353, 0, 354, 0,
	355, 356, 357, 358, 359, 360, 361, 0, 362, 363,
	364, 0, 365, 366, 367, 0, 0, 0, 0, 0,
	0, 0, 368, 369, 370, 371, 372, 0, 373, 375,
	728, 729, 0, 378, 380, 374, 376, 0, 379, 377,
	381, 0, 382, 383, 384, 0, 0, 385, 386, 387,
	0, 388, 389, 390, 0, 391, 392, 393, 0, 394,
	395, 730, 396, 397, 398, 400, 402, 399, 401, 403,
	404, 405, 406, 407, 731, 732, 408, 0, 305, 0,
	0, 0, 0, 0, 409, 410, 411, 733, 0, 0,
	0, 412, 0, 413, 414, 415, 0, 416, 417, 0,
	0, 418, 419, 420, 734, 735, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 0, 430, 736, 0, 737,
	431, 0, 432, 433, 434, 435, 436, 437, 438, 738,
	739, 740, 531, 0, 439, 440, 441, 0, 442, 443,
	444, 445, 446, 0, 0, 0, 306, 447, 448, 449,
	0, 0, 741, 450, 532, 451, 742, 743, 0, 744,
	0, 452, 453, 455, 0, 745, 0, 454, 456, 457,
	0, 458, 0, 0, 0, 459, 460, 461, 462, 463,
	464, 0, 465, 467, 466, 0, 469, 746, 468, 0,
	470, 471, 0, 0, 472, 473, 474, 475, 476, 477,
	480, 0, 0, 478, 479, 481, 482, 0, 483, 484,
	486, 489, 485, 487, 488, 490, 503, 504, 491, 492,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	506, 0, 505, 0, 507, 508, 509, 510, 511, 518,
	520, 521, 516, 517, 519, 522, 523, 525, 513, 514,
	515, 0, 524, 512, 0, 307, 0, 526, 527, 528,
	529, 0, 747, 530, 748, 533, 534, 0, 0, 535,
	0, 536, 0, 1381, 538, 539, 540, 0, 0, 541,
	542, 749, 0, 543, 0, 750, 544, 545, 537, 546,
	547, 548, 549, 550, 551, 552, 553, 554, 555, 0,
	556, 557, 751, 558, 559, 560, 752, 561, 562, 563,
	753, 564, 754, 565, 566, 0, 567, 568, 569, 0,
	570, 571, 572, 573, 574, 575, 576, 577, 755, 578,
	579, 581, 580, 582, 0, 583, 0, 584, 585, 586,
	0, 0, 0, 0, 0, 587, 588, 590, 0, 591,
	592, 593, 594, 589, 595, 596, 597, 598, 599, 600,
	0, 602, 603, 601, 604, 605, 0, 606, 607, 608,
	609, 610, 756, 611, 0, 612, 613, 620, 621, 622,
	614, 615, 616, 623, 624, 625, 626, 627, 629, 628,
	0, 631, 632, 630, 633, 634, 635, 0, 636, 757,
	637, 617, 618, 638, 639, 0, 640, 641, 642, 643,
	644, 645, 646, 758, 0, 647, 0, 648, 649, 650,
	651, 652, 653, 655, 619, 656, 661, 662, 759, 657,
	658, 659, 660, 760, 664, 665, 666, 667, 0, 668,
	669, 0, 663, 654, 0, 670, 671, 672, 673, 674,
	675, 0, 676, 677, 0, 678, 761, 762, 763, 764,
	0, 690, 0, 679, 681, 682, 683, 684, 765, 685,
	766, 0, 686, 687, 688, 689, 680, 691, 692, 0,
	0, 693, 694, 696, 698, 699, 695, 697, 700, 0,
	701, 0, 0, 702, 703, 704, 767, 768, 769, 0,
	706, 705, 707, 708, 709, 770, 710, 711, 712, 302,
	0, 0, 0, 713, 714, 771, 715, 716, 717, 0,
	0, 0, 0, 0, 0, 0, 308, 309, 311, 310,
	312, 313, 314, 315, 0, 316, 317, 0, 0, 0,
	0, 0, 718, 0, 0, 0, 318, 0, 319, 320,
	321, 0, 322, 323, 324, 325, 326, 327, 328, 719,
	720, 0, 329, 721, 330, 722, 0, 723, 331, 332,
	333, 334, 335, 336, 337, 0, 0, 0, 338, 724,
	725, 726, 0, 339, 340, 727, 0, 0, 0, 341,
	342, 343, 344, 345, 346, 347, 348, 0, 0, 350,
	351, 352, 349, 353, 0, 354, 0, 355, 356, 357,
	358, 359, 360, 361, 0, 362, 363, 364, 0, 365,
	366, 367, 0, 0, 0, 0, 0, 0, 0, 368,
	369, 370, 371, 372, 0, 373, 375, 728, 729, 0,
	378, 380, 374, 376, 0, 379, 377, 381, 0, 382,
	383, 384, 0, 0, 385, 386, 387, 0, 388, 389,
	390, 0, 391, 392, 393, 0, 394, 395, 730, 396,
	397, 398, 400, 402, 399, 401, 403, 404, 405, 406,
	407, 731, 732, 408, 0, 305, 0, 0, 0, 0,
	0, 409, 410, 411, 733, 0, 0, 0, 412, 0,
	413, 414, 415, 0, 416, 417, 0, 0, 418, 419,
	420, 734, 735, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 0, 430, 736, 0, 737, 431, 0, 432,
	433, 434, 435, 436, 437, 438, 738, 739, 740, 531,
	0, 439, 440, 441, 0, 442, 443, 444, 445, 446,
	0, 0, 0, 306, 447, 448, 449, 0, 0, 741,
	450, 532, 451, 742, 743, 0, 744, 0, 452, 453,
	455, 0, 745, 0, 454, 456, 457, 0, 458, 0,
	0, 0, 459, 460, 461, 462, 463, 464, 0, 465,
	467, 466, 0, 469, 746, 468, 0, 470, 471, 0,
	0, 472, 473, 474, 475, 476, 477, 480, 0, 0,
	478, 479, 481, 482, 0, 483, 484, 486, 489, 485,
	487, 488, 490, 503, 504, 491, 492, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 506, 0, 505,
	0, 507, 508, 509, 510, 511, 518, 520, 521, 516,
	517, 519, 522, 523, 525, 513, 514, 515, 3851, 524,
	512, 0, 307, 0, 526, 527, 528, 529, 0, 747,
	530, 748, 533, 534, 0, 0, 535, 0, 536, 0,
	0, 538, 539, 540, 0, 0, 541, 542, 749, 0,
	543, 0, 750, 544, 545, 537, 546, 547, 548, 549,
	550, 551, 552, 553, 554, 555, 0, 556, 557, 751,
	558, 559, 560, 752, 561, 562, 563, 753, 564, 754,
	565, 566, 0, 567, 568, 569, 0, 570, 571, 572,
	573, 574, 575, 576, 577, 755, 578, 579, 581, 580,
	582, 0, 583, 0, 584, 585, 586, 0, 0, 0,
	0, 0, 587, 588, 590, 0, 591, 592, 593, 594,
	589, 595, 596, 597, 598, 599, 600, 0, 602, 603,
	601, 604, 605, 0, 606, 607, 608, 609, 610, 756,
	611, 0, 612, 613, 620, 621, 622, 614, 615, 616,
	623, 624, 625, 626, 627, 629, 628, 0, 631, 632,
	630, 633, 634, 635, 0, 636, 757, 637, 617, 618,
	638, 639, 0, 640, 641, 642, 643, 644, 645, 646,
	758, 0, 647, 0, 648, 649, 650, 651, 652, 653,
	655, 619, 656, 661, 662, 759, 657, 658, 659, 660,
	760, 664, 665, 666, 667, 0, 668, 669, 0, 663,
	654, 0, 670, 671, 672, 673, 674, 675, 0, 676,
	677, 0, 678, 761, 762, 763, 764, 0, 690, 0,
	679, 681, 682, 683, 684, 765, 685, 766, 0, 686,
	687, 688, 689, 680, 691, 692, 0, 0, 693, 694,
	696, 698, 699, 695, 697, 700, 0, 701, 0, 0,
	702, 703, 704, 767, 768, 769, 0, 706, 705, 707,
	708, 709, 770, 710, 711, 712, 3376, 0, 302, 0,
	713, 714, 771, 715, 716, 717, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 308, 309, 311, 310, 312,
	313, 314, 315, 0, 316, 317, 0, 0, 0, 0,
	0, 718, 0, 0, 0, 318, 0, 319, 320, 321,
	0, 322, 323, 324, 325, 326, 327, 328, 719, 720,
	0, 329, 721, 330, 722, 0, 723, 331, 332, 333,
	334, 335, 336, 337, 0, 0, 0, 338, 724, 725,
	726, 0, 339, 340, 727, 0, 0, 0, 341, 342,
	343, 344, 345, 346, 347, 348, 0, 0, 350, 351,
	352, 349, 353, 0, 354, 0, 355, 356, 357, 358,
	359, 360, 361, 0, 362, 363, 364, 0, 365, 366,
	367, 0, 0, 0, 0, 0, 0, 0, 368, 369,
	370, 371, 372, 0, 373, 375, 728, 729, 0, 378,
	380, 374, 376, 0, 379, 377, 381, 0, 382, 383,
	384, 0, 0, 385, 386, 387, 0, 388, 389, 390,
	0, 391, 392, 393, 0, 394, 395, 730, 396, 397,
	398, 400, 402, 399, 401, 403, 404, 405, 406, 407,
	731, 732, 408, 0, 305, 0, 0, 0, 0, 0,
	409, 410, 411, 733, 0, 0, 0, 412, 0, 413,
	414, 415, 0, 416, 417, 0, 0, 418, 419, 420,
	734, 735, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 0, 430, 736, 0, 737, 431, 0, 432, 433,
	434, 435, 436, 437, 438, 3375, 739, 740, 531, 0,
	439, 440, 441, 0, 442, 443, 444, 445, 446, 0,
	0, 0, 306, 447, 448, 449, 0, 0, 741, 450,
	532, 451, 742, 743, 0, 744, 0, 452, 453, 455,
	0, 745, 0, 454, 456, 457, 0, 458, 0, 0,
	0, 459, 460, 461, 462, 463, 464, 0, 465, 467,
	466, 0, 469, 746, 468, 0, 470, 471, 0, 0,
	472, 473, 474, 475, 476, 477, 480, 0, 0, 478,
	479, 481, 482, 0, 483, 484, 486, 489, 485, 487,
	488, 490, 503, 504, 491, 492, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 506, 0, 505, 0,
	507, 508, 509, 510, 511, 518, 520, 521, 516, 517,
	519, 522, 523, 525, 513, 514, 515, 0, 524, 512,
	0, 307, 0, 526, 527, 528, 529, 0, 747, 530,
	748, 533, 534, 0, 0, 535, 0, 536, 0, 0,
	538, 539, 540, 0, 0, 541, 542, 749, 0, 543,
	0, 750, 544, 545, 537, 546, 547, 548, 549, 550,
	551, 552, 553, 554, 555, 0, 556, 557, 751, 558,
	559, 560, 752, 561, 562, 563, 753, 564, 754, 565,
	566, 0, 567, 568, 569, 0, 570, 571, 572, 573,
	574, 575, 576, 577, 755, 578, 579, 581, 580, 582,
	0, 583, 0, 584, 585, 586, 0, 0, 0, 0,
	0, 587, 588, 590, 0, 591, 592, 593, 594, 589,
	595, 596, 597, 598, 599, 600, 0, 602, 603, 601,
	604, 605, 0, 606, 607, 608, 609, 610, 756, 611,
	0, 612, 613, 620, 621, 622, 614, 615, 616, 623,
	624, 625, 626, 627, 629, 628, 0, 631, 632, 630,
	633, 634, 635, 0, 636, 757, 637, 617, 618, 638,
	639, 0, 640, 641, 642, 643, 644, 645, 646, 758,
	0, 647, 0, 648, 649, 650, 651, 652, 653, 655,
	619, 656, 661, 662, 759, 657, 658, 659, 660, 760,
	664, 665, 666, 667, 0, 668, 669, 0, 663, 654,
	0, 670, 671, 672, 673, 674, 675, 0, 676, 677,
	0, 678, 761, 762, 763, 764, 0, 690, 0, 679,
	681, 682, 683, 684, 765, 685, 766, 0, 686, 687,
	688, 689, 680, 691, 692, 0, 0, 693, 694, 696,
	698, 699, 695, 697, 700, 0, 701, 0, 0, 702,
	703, 704, 767, 768, 769, 0, 706, 705, 707, 708,
	709, 770, 710, 711, 712, 302, 0, 0, 0, 713,
	714, 771, 715, 716, 717, 0, 0, 0, 0, 0,
	0, 0, 308, 309, 311, 310, 312, 313, 314, 315,
	793, 316, 317, 0, 0, 0, 0, 0, 718, 0,
	0, 0, 318, 0, 319, 320, 321, 0, 322, 323,
	324, 325, 326, 327, 328, 719, 720, 0, 329, 721,
	330, 722, 0, 723, 331, 332, 333, 334, 335, 336,
	337, 0, 0, 0, 338, 724, 725, 726, 0, 339,
	340, 727, 0, 0, 0, 341, 342, 343, 344, 345,
	346, 347, 348, 0, 0, 350, 351, 352, 349, 353,
	0, 354, 0, 355, 356, 357, 358, 359, 360, 361,
	796, 362, 363, 364, 0, 365, 366, 367, 0, 0,
	0, 0, 0, 0, 0, 368, 369, 370, 371, 372,
	0, 373, 375, 728, 729, 0, 378, 380, 374, 376,
	0, 379, 377, 381, 0, 382, 383, 384, 0, 0,
	385, 386, 387, 0, 388, 389, 390, 0, 391, 392,
	393, 0, 394, 395, 730, 396, 397, 398, 400, 402,
	399, 401, 403, 404, 405, 406, 407, 731, 732, 408,
	0, 0, 0, 0, 0, 0, 0, 409, 410, 411,
	733, 0, 0, 0, 412, 0, 413, 414, 415, 0,
	416, 417, 0, 0, 418, 419, 420, 734, 735, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 797, 430,
	736, 0, 737, 431, 0, 432, 433, 434, 435, 436,
	437, 438, 738, 739, 740, 531, 0, 439, 440, 441,
	0, 442, 443, 444, 445, 446, 0, 0, 0, 0,
	447, 448, 449, 0, 0, 741, 450, 532, 451, 742,
	743, 0, 744, 0, 452, 453, 455, 0, 745, 0,
	454, 456, 457, 0, 458, 0, 0, 0, 459, 460,
	461, 462, 463, 464, 0, 465, 467, 466, 0, 469,
	746, 468, 0, 470, 471, 0, 0, 472, 473, 474,
	475, 476, 477, 480, 0, 0, 478, 479, 481, 482,
	0, 483, 484, 486, 489, 485, 487, 488, 490, 503,
	504, 491, 492, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 506, 0, 505, 0, 507, 508, 509,
	510, 511, 518, 520, 521, 516, 517, 519, 522, 523,
	525, 513, 514, 515, 0, 524, 512, 0, 0, 0,
	526, 527, 528, 529, 0, 747, 530, 748, 533, 534,
	0, 0, 535, 0, 536, 0, 0, 538, 539, 540,
	0, 0, 541, 542, 749, 0, 543, 0, 750, 544,
	545, 537, 546, 547, 548, 549, 550, 551, 552, 553,
	554, 555, 0, 556, 557, 751, 558, 559, 560, 752,
	561, 562, 563, 753, 564, 754, 565, 566, 0, 567,
	568, 569, 0, 570, 571, 572, 573, 574, 575, 576,
	577, 755, 578, 579, 581, 580, 582, 0, 583, 0,
	584, 585, 586, 0, 0, 0, 0, 0, 587, 588,
	590, 0, 591, 592, 593, 594, 589, 595, 596, 597,
	598, 599, 600, 0, 602, 603, 601, 604, 605, 0,
	606, 607, 608, 609, 610, 756, 611, 0, 612, 613,
	620, 621, 622, 614, 615, 616, 623, 624, 625, 626,
	627, 629, 628, 798, 631, 632, 630, 633, 634, 635,
	0, 636, 757, 637, 617, 618, 638, 639, 0, 640,
	641, 642, 643, 644, 645, 646, 758, 0, 647, 0,
	648, 649, 650, 651, 652, 653, 655, 619, 656, 661,
	662, 759, 657, 658, 659, 660, 760, 664, 665, 666,
	667, 0, 668, 3116, 0, 663, 654, 0, 670, 671,
	672, 673, 674, 675, 0, 676, 677, 0, 678, 761,
	762, 763, 764, 0, 690, 0, 679, 681, 682, 683,
	684, 765, 685, 766, 0, 686, 687, 688, 689, 680,
	691, 692, 0, 0, 693, 694, 696, 698, 699, 695,
	697, 700, 0, 701, 0, 0, 702, 703, 704, 767,
	768, 769, 0, 706, 705, 707, 708, 709, 770, 710,
	711, 712, 2583, 0, 302, 0, 713, 714, 771, 715,
	716, 717, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 308, 309, 311, 310, 312, 313, 314, 315, 0,
	316, 317, 0, 0, 0, 0, 0, 718, 0, 0,
	0, 318, 0, 319, 320, 321, 0, 322, 323, 324,
	325, 326, 327, 328, 719, 720, 0, 329, 721, 330,
	722, 0, 723, 331, 332, 333, 334, 335, 336, 337,
	0, 0, 0, 338, 724, 725, 726, 0, 339, 340,
	727, 0, 0, 0, 341, 342, 343, 344, 345, 346,
	347, 348, 0, 0, 350, 351, 352, 349, 353, 0,
	354, 0, 355, 356, 357, 358, 359, 360, 361, 0,
	362, 363, 364, 0, 365, 366, 367, 0, 0, 0,
	0, 0, 0, 0, 368, 369, 370, 371, 372, 0,
	373, 375, 728, 729, 0, 378, 380, 374, 376, 0,
	379, 377, 381, 0, 382, 383, 384, 0, 0, 385,
	386, 387, 0, 388, 389, 390, 0, 391, 392, 393,
	0, 394, 395, 730, 396, 397, 398, 400, 402, 399,
	401, 403, 404, 405, 406, 407, 731, 732, 408, 0,
	305, 0, 0, 0, 0, 0, 409, 410, 411, 733,
	0, 0, 0, 412, 0, 413, 414, 415, 0, 416,
	417, 0, 0, 418, 419, 420, 734, 735, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 0, 430, 736,
	0, 737, 431, 0, 432, 433, 434, 435, 436, 437,
	438, 738, 739, 740, 531, 0, 439, 440, 441, 0,
	442, 443, 444, 445, 446, 0, 0, 0, 306, 447,
	448, 449, 0, 0, 741, 450, 532, 451, 742, 743,
	0, 744, 0, 452, 453, 455, 0, 745, 0, 454,
	456, 457, 0, 458, 0, 0, 0, 459, 460, 461,
	462, 463, 464, 0, 465, 467, 466, 0, 469, 746,
	468, 0, 470, 471, 0, 0, 472, 473, 474, 475,
	476, 477, 480, 0, 0, 478, 479, 481, 482, 0,
	483, 484, 486, 489, 485, 487, 488, 490, 503, 504,
	491, 492, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 506, 0, 505, 0, 507, 508, 509, 510,
	511, 518, 520, 521, 516, 517, 519, 522, 523, 525,
	513, 514, 515, 0, 524, 512, 0, 307, 0, 526,
	527, 528, 529, 0, 747, 530, 748, 533, 534, 0,
	0, 535, 0, 536, 0, 0, 538, 539, 540, 0,
	0, 541, 542, 749, 0, 543, 0, 750, 544, 545,
	537, 546, 547, 548, 549, 550, 551, 552, 553, 554,
	555, 0, 556, 557, 751, 558, 559, 560, 752, 561,
	562, 563, 753, 564, 754, 565, 566, 0, 567, 568,
	569, 0, 570, 571, 572, 573, 574, 575, 576, 577,
	755, 578, 579, 581, 580, 582, 0, 583, 0, 584,
	585, 586, 0, 0, 0, 0, 0, 587, 588, 590,
	0, 591, 592, 593, 594, 589, 595, 596, 597, 598,
	599, 600, 0, 602, 603, 601, 604, 605, 0, 606,
	607, 608, 609, 610, 756, 611, 0, 612, 613, 620,
	621, 622, 614, 615, 616, 623, 624, 625, 626, 627,
	629, 628, 0, 631, 632, 630, 633, 634, 635, 0,
	636, 757, 637, 617, 618, 638, 639, 0, 640, 641,
	642, 643, 644, 645, 646, 758, 0, 647, 0, 648,
	649, 650, 651, 652, 653, 655, 619, 656, 661, 662,
	759, 657, 658, 659, 660, 760, 664, 665, 666, 667,
	0, 668, 669, 0, 663, 654, 0, 670, 671, 672,
	673, 674, 675, 0, 676, 677, 0, 678, 761, 762,
	763, 764, 0, 690, 0, 679, 681, 682, 683, 684,
	765, 685, 766, 0, 686, 687, 688, 689, 680, 691,
	692, 0, 0, 693, 694, 696, 698, 699, 695, 697,
	700, 0, 701, 0, 0, 702, 703, 704, 767, 768,
	769, 0, 706, 705, 707, 708, 709, 770, 710, 711,
	712, 2527, 0, 302, 0, 713, 714, 771, 715, 716,
	717, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	308, 309, 311, 310, 312, 313, 314, 315, 0, 316,
	317, 0, 0, 0, 0, 0, 718, 0, 0, 0,
	318, 0, 319, 320, 321, 0, 322, 323, 324, 325,
	326, 327, 328, 719, 720, 0, 329, 721, 330, 722,
	0, 723, 331, 332, 333, 334, 335, 336, 337, 0,
	0, 0, 338, 724, 725, 726, 0, 339, 340, 727,
	0, 0, 0, 341, 342, 343, 344, 345, 346, 347,
	348, 0, 0, 350, 351, 352, 349, 353, 0, 354,
	0, 355, 356, 357, 358, 359, 360, 361, 0, 362,
	363, 364, 0, 365, 366, 367, 0, 0, 0, 0,
	0, 0, 0, 368, 369, 370, 371, 372, 0, 373,
	375, 728, 729, 0, 378, 380, 374, 376, 0, 379,
	377, 381, 0, 382, 383, 384, 0, 0, 385, 386,
	387, 0, 388, 389, 390, 0, 391, 392, 393, 0,
	394, 395, 730, 396, 397, 398, 400, 402, 399, 401,
	403, 404, 405, 406, 407, 731, 732, 408, 0, 305,
	0, 0, 0, 0, 0, 409, 410, 411, 733, 0,
	0, 0, 412, 0, 413, 414, 415, 0, 416, 417,
	0, 0, 418, 419, 420, 734, 735, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 0, 430, 736, 0,
	737, 431, 0, 432, 433, 434, 435, 436, 437, 438,
	2526, 739, 740, 531, 0, 439, 440, 441, 0, 442,
	443, 444, 445, 446, 0, 0, 0, 306, 447, 448,
	449, 0, 0, 741, 450, 532, 451, 742, 743, 0,
	744, 0, 452, 453, 455, 0, 745, 0, 454, 456,
	457, 0, 458, 0, 0, 0, 459, 460, 461, 462,
	463, 464, 0, 465, 467, 466, 0, 469, 746, 468,
	0, 470, 471, 0, 0, 472, 473, 474, 475, 476,
	477, 480, 0, 0, 478, 479, 481, 482, 0, 483,
	484, 486, 489, 485, 487, 488, 490, 503, 504, 491,
	492, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 506, 0, 505, 0, 507, 508, 509, 510, 511,
	518, 520, 521, 516, 517, 519, 522, 523, 525, 513,
	514, 515, 0, 524, 512, 0, 307, 0, 526, 527,
	528, 529, 0, 747, 530, 748, 533, 534, 0, 0,
	535, 0, 536, 0, 0, 538, 539, 540, 0, 0,
	541, 542, 749, 0, 543, 0, 750, 544, 545, 537,
	546, 547, 548, 549, 550, 551, 552, 553, 554, 555,
	0, 556, 557, 751, 558, 559, 560, 752, 561, 562,
	563, 753, 564, 754, 565, 566, 0, 567, 568, 569,
	0, 570, 571, 572, 573, 574, 575, 576, 577, 755,
	578, 579, 581, 580, 582, 0, 583, 0, 584, 585,
	586, 0, 0, 0, 0, 0, 587, 588, 590, 0,
	591, 592, 593, 594, 589, 595, 596, 597, 598, 599,
	600, 0, 602, 603, 601, 604, 605, 0, 606, 607,
	608, 609, 610, 756, 611, 0, 612, 613, 620, 621,
	622, 614, 615, 616, 623, 624, 625, 626, 627, 629,
	628, 0, 631, 632, 630, 633, 634, 635, 0, 636,
	757, 637, 617, 618, 638, 639, 0, 640, 641, 642,
	643, 644, 645, 646, 758, 0, 647, 0, 648, 649,
	650, 651, 652, 653, 655, 619, 656, 661, 662, 759,
	657, 658, 659, 660, 760, 664, 665, 666, 667, 0,
	668, 669, 0, 663, 654, 0, 670, 671, 672, 673,
	674, 675, 0, 676, 677, 0, 678, 761, 762, 763,
	764, 0, 690, 0, 679, 681, 682, 683, 684, 765,
	685, 766, 0, 686, 687, 688, 689, 680, 691, 692,
	0, 0, 693, 694, 696, 698, 699, 695, 697, 700,
	0, 701, 0, 0, 702, 703, 704, 767, 768, 769,
	0, 706, 705, 707, 708, 709, 770, 710, 711, 712,
	2511, 0, 302, 0, 713, 714, 771, 715, 716, 717,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 308,
	309, 311, 310, 312, 313, 314, 315, 0, 316, 317,
	0, 0, 0, 0, 0, 718, 0, 0, 0, 318,
	0, 319, 320, 321, 0, 322, 323, 324, 325, 326,
	327, 328, 719, 720, 0, 329, 721, 330, 722, 0,
	723, 331, 332, 333, 334, 335, 336, 337, 0, 0,
	0, 338, 724, 725, 726, 0, 339, 340, 727, 0,
	0, 0, 341, 342, 343, 344, 345, 346, 347, 348,
	0, 0, 350, 351, 352, 349, 353, 0, 354, 0,
	355, 356, 357, 358, 359, 360, 361, 0, 362, 363,
	364, 0, 365, 366, 367, 0, 0, 0, 0, 0,
	0, 0, 368, 369, 370, 371, 372, 0, 373, 375,
	728, 729, 0, 378, 380, 374, 376, 0, 379, 377,
	381, 0, 382, 383, 384, 0, 0, 385, 386, 387,
	0, 388, 389, 390, 0, 391, 392, 393, 0, 394,
	395, 730, 396, 397, 398, 400, 402, 399, 401, 403,
	404, 405, 406, 407, 731, 732, 408, 0, 305, 0,
	0, 0, 0, 0, 409, 410, 411, 733, 0, 0,
	0, 412, 0, 413, 414, 415, 0, 416, 417, 0,
	0, 418, 419, 420, 734, 735, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 0, 430, 736, 0, 737,
	431, 0, 432, 433, 434, 435, 436, 437, 438, 2513,
	739, 740, 531, 0, 439, 440, 441, 0, 442, 443,
	444, 445, 446, 0, 0, 0, 306, 447, 448, 449,
	0, 0, 741, 450, 532, 451, 742, 743, 0, 744,
	0, 452, 453, 455, 0, 745, 0, 454, 456, 457,
	0, 458, 0, 0, 0, 459, 460, 461, 462, 463,
	464, 0, 465, 467, 466, 0, 469, 746, 468, 0,
	470, 471, 0, 0, 472, 473, 474, 475, 476, 477,
	480, 0, 0, 478, 479, 481, 482, 0, 483, 484,
	486, 489, 485, 487, 488, 490, 503, 504, 491, 492,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	506, 0, 505, 0, 507, 508, 509, 510, 511, 518,
	520, 521, 516, 517, 519, 522, 523, 525, 513, 514,
	515, 0, 524, 512, 0, 307, 0, 526, 527, 528,
	529, 0, 747, 530, 748, 533, 534, 0, 0, 535,
	0, 536, 0, 0, 538, 539, 540, 0, 0, 541,
	542, 749, 0, 543, 0, 750, 544, 545, 537, 546,
	547, 548, 549, 550, 551, 552, 553, 554, 555, 0,
	556, 557, 751, 558, 559, 560, 752, 561, 562, 563,
	753, 564, 754, 565, 566, 0, 567, 568, 569, 0,
	570, 571, 572, 573, 574, 575, 576, 577, 755, 578,
	579, 581, 580, 582, 0, 583, 0, 584, 585, 586,
	0, 0, 0, 0, 0, 587, 588, 590, 0, 591,
	592, 593, 594, 589, 595, 596, 597, 598, 599, 600,
	0, 602, 603, 601, 604, 605, 0, 606, 607, 608,
	609, 610, 756, 611, 0, 612, 613, 620, 621, 622,
	614, 615, 616, 623, 624, 625, 626, 627, 629, 628,
	0, 631, 632, 630, 633, 634, 635, 0, 636, 757,
	637, 617, 618, 638, 639, 0, 640, 641, 642, 643,
	644, 645, 646, 758, 0, 647, 0, 648, 649, 650,
	651, 652, 653, 655, 619, 656, 661, 662, 759, 657,
	658, 659, 660, 760, 664, 665, 666, 667, 0, 668,
	669, 0, 663, 654, 0, 670, 671, 672, 673, 674,
	675, 0, 676, 677, 0, 678, 761, 762, 763, 764,
	0, 690, 0, 679, 681, 682, 683, 684, 765, 685,
	766, 0, 686, 687, 688, 689, 680, 691, 692, 0,
	0, 693, 694, 696, 698, 699, 695, 697, 700, 0,
	701, 0, 0, 702, 703, 704, 767, 768, 769, 0,
	706, 705, 707, 708, 709, 770, 710, 711, 712, 302,
	0, 0, 0, 713, 714, 771, 715, 716, 717, 0,
	0, 0, 0, 0, 0, 0, 308, 309, 311, 310,
	312, 313, 314, 315, 0, 316, 317, 0, 0, 0,
	0, 0, 718, 0, 0, 0, 318, 0, 319, 320,
	321, 0, 322, 323, 324, 325, 326, 327, 328, 719,
	720, 0, 329, 721, 330, 722, 0, 723, 331, 332,
	333, 334, 335, 336, 337, 0, 0, 0, 338, 724,
	725, 726, 0, 339, 340, 727, 0, 0, 0, 341,
	342, 343, 344, 345, 346, 347, 348, 0, 0, 350,
	351, 352, 349, 353, 0, 354, 0, 355, 356, 357,
	358, 359, 360, 361, 0, 362, 363, 364, 0, 365,
	366, 367, 0, 0, 0, 0, 0, 0, 0, 368,
	369, 370, 371, 372, 0, 373, 375, 728, 729, 0,
	378, 380, 374, 376, 0, 379, 377, 381, 0, 382,
	383, 384, 0, 0, 385, 386, 387, 0, 388, 389,
	390, 0, 391, 392, 393, 0, 394, 395, 730, 396,
	397, 398, 400, 402, 399, 401, 403, 404, 405, 406,
	407, 731, 732, 408, 0, 305, 0, 0, 0, 0,
	0, 409, 410, 411, 733, 0, 0, 0, 412, 0,
	413, 414, 415, 0, 416, 417, 0, 0, 418, 419,
	420, 734, 735, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 0, 430, 736, 0, 737, 431, 0, 432,
	433, 434, 435, 436, 437, 438, 2473, 739, 740, 531,
	0, 439, 440, 441, 0, 442, 443, 444, 445, 446,
	0, 0, 0, 306, 447, 448, 449, 0, 0, 741,
	450, 532, 451, 742, 743, 0, 744, 0, 452, 453,
	455, 0, 745, 0, 454, 456, 457, 0, 458, 0,
	0, 0, 459, 460, 461, 462, 463, 464, 0, 465,
	467, 466, 0, 469, 746, 468, 0, 470, 471, 0,
	0, 472, 473, 474, 475, 476, 477, 480, 0, 0,
	478, 479, 481, 482, 0, 483, 484, 486, 489, 485,
	487, 488, 490, 503, 504, 491, 492, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 506, 0, 505,
	0, 507, 508, 509, 510, 511, 518, 520, 521, 516,
	517, 519, 522, 523, 525, 513, 514, 515, 0, 524,
	512, 0, 307, 0, 526, 527, 528, 529, 0, 747,
	530, 748, 533, 534, 0, 0, 535, 0, 536, 0,
	1381, 538, 539, 540, 0, 0, 541, 542, 749, 0,
	543, 0, 750, 544, 545, 537, 546, 547, 548, 549,
	550, 551, 552, 553, 554, 555, 0, 556, 557, 751,
	558, 559, 560, 752, 561, 562, 563, 753, 564, 754,
	565, 566, 0, 567, 568, 569, 0, 570, 571, 572,
	573, 574, 575, 576, 577, 755, 578, 579, 581, 580,
	582, 0, 583, 0, 584, 585, 586, 0, 0, 0,
	0, 0, 587, 588, 590, 0, 591, 592, 593, 594,
	589, 595, 596, 597, 598, 599, 600, 0, 602, 603,
	601, 604, 605, 0, 606, 607, 608, 609, 610, 756,
	611, 0, 612, 613, 620, 621, 622, 614, 615, 616,
	623, 624, 625, 626, 627, 629, 628, 0, 631, 632,
	630, 633, 634, 635, 0, 636, 757, 637, 617, 618,
	638, 639, 0, 640, 641, 642, 643, 644, 645, 646,
	758, 0, 647, 0, 648, 649, 650, 651, 652, 653,
	655, 619, 656, 661, 662, 759, 657, 658, 659, 660,
	760, 664, 665, 666, 667, 0, 668, 669, 0, 663,
	654, 0, 670, 671, 672, 673, 674, 675, 0, 676,
	677, 0, 678, 761, 762, 763, 764, 0, 690, 0,
	679, 681, 682, 683, 684, 765, 685, 766, 0, 686,
	687, 688, 689, 680, 691, 692, 0, 0, 693, 694,
	696, 698, 699, 695, 697, 700, 0, 701, 0, 0,
	702, 703, 704, 767, 768, 769, 0, 706, 705, 707,
	708, 709, 770, 710, 711, 712, 1772, 0, 302, 0,
	713, 714, 771, 715, 716, 717, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 308, 309, 311, 310, 312,
	313, 314, 315, 0, 316, 317, 0, 0, 0, 0,
	0, 718, 0, 0, 0, 318, 0, 319, 320, 321,
	0, 322, 323, 324, 325, 326, 327, 328, 719, 720,
	0, 329, 721, 330, 722, 0, 723, 331, 332, 333,
	334, 335, 336, 337, 0, 0, 0, 338, 724, 725,
	726, 0, 339, 340, 727, 0, 0, 0, 341, 342,
	343, 344, 345, 346, 347, 348, 0, 0, 350, 351,
	352, 349, 353, 0, 354, 0, 355, 356, 357, 358,
	359, 360, 361, 0, 362, 363, 364, 0, 365, 366,
	367, 0, 0, 0, 0, 0, 0, 0, 368, 369,
	370, 371, 372, 0, 373, 375, 728, 729, 0, 378,
	380, 374, 376, 0, 379, 377, 381, 0, 382, 383,
	384, 0, 0, 385, 386, 387, 0, 388, 389, 390,
	0, 391, 392, 393, 0, 394, 395, 730, 396, 397,
	398, 400, 402, 399, 401, 403, 404, 405, 406, 407,
	731, 732, 408, 0, 305, 0, 0, 0, 0, 0,
	409, 410, 411, 733, 0, 0, 0, 412, 0, 413,
	414, 415, 0, 416, 417, 0, 0, 418, 419, 420,
	734, 735, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 0, 430, 736, 0, 737, 431, 0, 432, 433,
	434, 435, 436, 437, 438, 1771, 739, 740, 531, 0,
	439, 440, 441, 0, 442, 443, 444, 445, 446, 0,
	0, 0, 306, 447, 448, 449, 0, 0, 741, 450,
	532, 451, 742, 743, 0, 744, 0, 452, 453, 455,
	0, 745, 0, 454, 456, 457, 0, 458, 0, 0,
	0, 459, 460, 461, 462, 463, 464, 0, 465, 467,
	466, 0, 469, 746, 468, 0, 470, 471, 0, 0,
	472, 473, 474, 475, 476, 477, 480, 0, 0, 478,
	479, 481, 482, 0, 483, 484, 486, 489, 485, 487,
	488, 490, 503, 504, 491, 492, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 506, 0, 505, 0,
	507, 508, 509, 510, 511, 518, 520, 521, 516, 517,
	519, 522, 523, 525, 513, 514, 515, 0, 524, 512,
	0, 307, 0, 526, 527, 528, 529, 0, 747, 530,
	748, 533, 534, 0, 0, 535, 0, 536, 0, 0,
	538, 539, 540, 0, 0, 541, 542, 749, 0, 543,
	0, 750, 544, 545, 537, 546, 547, 548, 549, 550,
	551, 552, 553, 554, 555, 0, 556, 557, 751, 558,
	559, 560, 752, 561, 562, 563, 753, 564, 754, 565,
	566, 0, 567, 568, 569, 0, 570, 571, 572, 573,
	574, 575, 576, 577, 755, 578, 579, 581, 580, 582,
	0, 583, 0, 584, 585, 586, 0, 0, 0, 0,
	0, 587, 588, 590, 0, 591, 592, 593, 594, 589,
	595, 596, 597, 598, 599, 600, 0, 602, 603, 601,
	604, 605, 0, 606, 607, 608, 609, 610, 756, 611,
	0, 612, 613, 620, 621, 622, 614, 615, 616, 623,
	624, 625, 626, 627, 629, 628, 0, 631, 632, 630,
	633, 634, 635, 0, 636, 757, 637, 617, 618, 638,
	639, 0, 640, 641, 642, 643, 644, 645, 646, 758,
	0, 647, 0, 648, 649, 650, 651, 652, 653, 655,
	619, 656, 661, 662, 759, 657, 658, 659, 660, 760,
	664, 665, 666, 667, 0, 668, 669, 0, 663, 654,
	0, 670, 671, 672, 673, 674, 675, 0, 676, 677,
	0, 678, 761, 762, 763, 764, 0, 690, 0, 679,
	681, 682, 683, 684, 765, 685, 766, 0, 686, 687,
	688, 689, 680, 691, 692, 0, 0, 693, 694, 696,
	698, 699, 695, 697, 700, 0, 701, 0, 0, 702,
	703, 704, 767, 768, 769, 0, 706, 705, 707, 708,
	709, 770, 710, 711, 712, 1662, 0, 302, 0, 713,
	714, 771, 715, 716, 717, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 308, 309, 311, 310, 312, 313,
	314, 315, 0, 316, 317, 0, 0, 0, 0, 0,
	718, 0, 0, 0, 318, 0, 319, 320, 321, 0,
	322, 323, 324, 325, 326, 327, 328, 719, 720, 0,
	329, 721, 330, 722, 0, 723, 331, 332, 333, 334,
	335, 336, 337, 0, 0, 0, 338, 724, 725, 726,
	0, 339, 340, 727, 0, 0, 0, 341, 342, 343,
	344, 345, 346, 347, 348, 0, 0, 350, 351, 352,
	349, 353, 0, 354, 0, 355, 356, 357, 358, 359,
	360, 361, 0, 362, 363, 364, 0, 365, 366, 367,
	0, 0, 0, 0, 0, 0, 0, 368, 369, 370,
	371, 372, 0, 373, 375, 728, 729, 0, 378, 380,
	374, 376, 0, 379, 377, 381, 0, 382, 383, 384,
	0, 0, 385, 386, 387, 0, 388, 389, 390, 0,
	391, 392, 393, 0, 394, 395, 730, 396, 397, 398,
	400, 402, 399, 401, 403, 404, 405, 406, 407, 731,
	732, 408, 0, 305, 0, 0, 0, 0, 0, 409,
	410, 411, 733, 0, 0, 0, 412, 0, 413, 414,
	415, 0, 416, 417, 0, 0, 418, 419, 420, 734,
	735, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	0, 430, 736, 0, 737, 431, 0, 432, 433, 434,
	435, 436, 437, 438, 738, 739, 740, 531, 0, 439,
	440, 441, 0, 442, 443, 444, 445, 446, 0, 0,
	0, 306, 447, 448, 449, 0, 0, 741, 450, 532,
	451, 742, 743, 0, 744, 0, 452, 453, 455, 0,
	745, 0, 454, 456, 457, 0, 458, 0, 0, 0,
	459, 460, 461, 462, 463, 464, 0, 465, 467, 466,
	0, 469, 746, 468, 0, 470, 471, 0, 0, 472,
	473, 474, 475, 476, 477, 480, 0, 0, 478, 479,
	481, 482, 0, 483, 484, 486, 489, 485, 487, 488,
	490, 503, 504, 491, 492, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 506, 0, 505, 0, 507,
	508, 509, 510, 511, 518, 520, 521, 516, 517, 519,
	522, 523, 525, 513, 514, 515, 0, 524, 512, 0,
	307, 0, 526, 527, 528, 529, 0, 747, 530, 748,
	533, 534, 0, 0, 535, 0, 536, 0, 0, 538,
	539, 540, 0, 0, 541, 542, 749, 0, 543, 0,
	750, 544, 545, 537, 546, 547, 548, 549, 550, 551,
	552, 553, 554, 555, 0, 556, 557, 751, 558, 559,
	560, 752, 561, 562, 563, 753, 564, 754, 565, 566,
	0, 567, 568, 569, 0, 570, 571, 572, 573, 574,
	575, 576, 577, 755, 578, 579, 581, 580, 582, 0,
	583, 0, 584, 585, 586, 0, 0, 0, 0, 0,
	587, 588, 590, 0, 591, 592, 593, 594, 589, 595,
	596, 597, 598, 599, 600, 0, 602, 603, 601, 604,
	605, 0, 606, 607, 608, 609, 610, 756, 611, 0,
	612, 613, 620, 621, 622, 614, 615, 616, 623, 624,
	625, 626, 627, 629, 628, 0, 631, 632, 630, 633,
	634, 635, 0, 636, 757, 637, 617, 618, 638, 639,
	0, 640, 641, 642, 643, 644, 645, 646, 758, 0,
	647, 0, 648, 649, 650, 651, 652, 653, 655, 619,
	656, 661, 662, 759, 657, 658, 659, 660, 760, 664,
	665, 666, 667, 0, 668, 669, 0, 663, 654, 0,
	670, 671, 672, 673, 674, 675, 0, 676, 677, 0,
	678, 761, 762, 763, 764, 0, 690, 0, 679, 681,
	682, 683, 684, 765, 685, 766, 0, 686, 687, 688,
	689, 680, 691, 692, 0, 0, 693, 694, 696, 698,
	699, 695, 697, 700, 0, 701, 0, 0, 702, 703,
	704, 767, 768, 769, 0, 706, 705, 707, 708, 709,
	770, 710, 711, 712, 1655, 0, 302, 0, 713, 714,
	771, 715, 716, 717, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 308, 309, 311, 310, 312, 313, 314,
	315, 0, 316, 317, 0, 0, 0, 0, 0, 718,
	0, 0, 0, 318, 0, 319, 320, 321, 0, 322,
	323, 324, 325, 326, 327, 328, 719, 720, 0, 329,
	721, 330, 722, 0, 723, 331, 332, 333, 334, 335,
	336, 337, 0, 0, 0, 338, 724, 725, 726, 0,
	339, 340, 727, 0, 0, 0, 341, 342, 343, 344,
	345, 346, 347, 348, 0, 0, 350, 351, 352, 349,
	353, 0, 354, 0, 355, 356, 357, 358, 359, 360,
	361, 0, 362, 363, 364, 0, 365, 366, 367, 0,
	0, 0, 0, 0, 0, 0, 368, 369, 370, 371,
	372, 0, 373, 375, 728, 729, 0, 378, 380, 374,
	376, 0, 379, 377, 381, 0, 382, 383, 384, 0,
	0, 385, 386, 387, 0, 388, 389, 390, 0, 391,
	392, 393, 0, 394, 395, 730, 396, 397, 398, 400,
	402, 399, 401, 403, 404, 405, 406, 407, 731, 732,
	408, 0, 305, 0, 0, 0, 0, 0, 409, 410,
	411, 733, 0, 0, 0, 412, 0, 413, 414, 415,
	0, 416, 417, 0, 0, 418, 419, 420, 734, 735,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 0,
	430, 736, 0, 737, 431, 0, 432, 433, 434, 435,
	436, 437, 438, 1657, 739, 740, 531, 0, 439, 440,
	441, 0, 442, 443, 444, 445, 446, 0, 0, 0,
	306, 447, 448, 449, 0, 0, 741, 450, 532, 451,
	742, 743, 0, 744, 0, 452, 453, 455, 0, 745,
	0, 454, 456, 457, 0, 458, 0, 0, 0, 459,
	460, 461, 462, 463, 464, 0, 465, 467, 466, 0,
	469, 746, 468, 0, 470, 471, 0, 0, 472, 473,
	474, 475, 476, 477, 480, 0, 0, 478, 479, 481,
	482, 0, 483, 484, 486, 489, 485, 487, 488, 490,
	503, 504, 491, 492, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 506, 0, 505, 0, 507, 508,
	509, 510, 511, 518, 520, 521, 516, 517, 519, 522,
	523, 525, 513, 514, 515, 0, 524, 512, 0, 307,
	0, 526, 527, 528, 529, 0, 747, 530, 748, 533,
	534, 0, 0, 535, 0, 536, 0, 0, 538, 539,
	540, 0, 0, 541, 542, 749, 0, 543, 0, 750,
	544, 545, 537, 546, 547, 548, 549, 550, 551, 552,
	553, 554, 555, 0, 556, 557, 751, 558, 559, 560,
	752, 561, 562, 563, 753, 564, 754, 565, 566, 0,
	567, 568, 569, 0, 570, 571, 572, 573, 574, 575,
	576, 577, 755, 578, 579, 581, 580, 582, 0, 583,
	0, 584, 585, 586, 0, 0, 0, 0, 0, 587,
	588, 590, 0, 591, 592, 593, 594, 589, 595, 596,
	597, 598, 599, 600, 0, 602, 603, 601, 604, 605,
	0, 606, 607, 608, 609, 610, 756, 611, 0, 612,
	613, 620, 621, 622, 614, 615, 616, 623, 624, 625,
	626, 627, 629, 628, 0, 631, 632, 630, 633, 634,
	635, 0, 636, 757, 637, 617, 618, 638, 639, 0,
	640, 641, 642, 643, 644, 645, 646, 758, 0, 647,
	0, 648, 649, 650, 651, 652, 653, 655, 619, 656,
	661, 662, 759, 657, 658, 659, 660, 760, 664, 665,
	666, 667, 0, 668, 669, 0, 663, 654, 0, 670,
	671, 672, 673, 674, 675, 0, 676, 677, 0, 678,
	761, 762, 763, 764, 0, 690, 0, 679, 681, 682,
	683, 684, 765, 685, 766, 0, 686, 687, 688, 689,
	680, 691, 692, 0, 0, 693, 694, 696, 698, 699,
	695, 697, 700, 0, 701, 0, 0, 702, 703, 704,
	767, 768, 769, 0, 706, 705, 707, 708, 709, 770,
	710, 711, 712, 1462, 0, 302, 0, 713, 714, 771,
	715, 716, 717, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 308, 309, 311, 310, 312, 313, 314, 315,
	0, 316, 317, 0, 0, 0, 0, 0, 718, 0,
	0, 0, 318, 0, 319, 320, 321, 0, 322, 323,
	324, 325, 326, 327, 328, 719, 720, 0, 329, 721,
	330, 722, 0, 723, 331, 332, 333, 334, 335, 336,
	337, 0, 0, 0, 338, 724, 725, 726, 0, 339,
	340, 727, 0, 0, 0, 341, 342, 343, 344, 345,
	346, 347, 348, 0, 0, 350, 351, 352, 349, 353,
	0, 354, 0, 355, 356, 357, 358, 359, 360, 361,
	0, 362, 363, 364, 0, 365, 366, 367, 0, 0,
	0, 0, 0, 0, 0, 368, 369, 370, 371, 372,
	0, 373, 375, 728, 729, 0, 378, 380, 374, 376,
	0, 379, 377, 381, 0, 382, 383, 384, 0, 0,
	385, 386, 387, 0, 388, 389, 390, 0, 391, 392,
	393, 0, 394, 395, 730, 396, 397, 398, 400, 402,
	399, 401, 403, 404, 405, 406, 407, 731, 732, 408,
	0, 305, 0, 0, 0, 0, 0, 409, 410, 411,
	733, 0, 0, 0, 412, 0, 413, 414, 415, 0,
	416, 417, 0, 0, 418, 419, 420, 734, 735, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 0, 430,
	736, 0, 737, 431, 0, 432, 433, 434, 435, 436,
	437, 438, 1461, 739, 740, 531, 0, 439, 440, 441,
	0, 442, 443, 444, 445, 446, 0, 0, 0, 306,
	447, 448, 449, 0, 0, 741, 450, 532, 451, 742,
	743, 0, 744, 0, 452, 453, 455, 0, 745, 0,
	454, 456, 457, 0, 458, 0, 0, 0, 459, 460,
	461, 462, 463, 464, 0, 465, 467, 466, 0, 469,
	746, 468, 0, 470, 471, 0, 0, 472, 473, 474,
	475, 476, 477, 480, 0, 0, 478, 479, 481, 482,
	0, 483, 484, 486, 489, 485, 487, 488, 490, 503,
	504, 491, 492, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 506, 0, 505, 0, 507, 508, 509,
	510, 511, 518, 520, 521, 516, 517, 519, 522, 523,
	525, 513, 514, 515, 0, 524, 512, 0, 307, 0,
	526, 527, 528, 529, 0, 747, 530, 748, 533, 534,
	0, 0, 535, 0, 536, 0, 0, 538, 539, 540,
	0, 0, 541, 542, 749, 0, 543, 0, 750, 544,
	545, 537, 546, 547, 548, 549, 550, 551, 552, 553,
	554, 555, 0, 556, 557, 751, 558, 559, 560, 752,
	561, 562, 563, 753, 564, 754, 565, 566, 0, 567,
	568, 569, 0, 570, 571, 572, 573, 574, 575, 576,
	577, 755, 578, 579, 581, 580, 582, 0, 583, 0,
	584, 585, 586, 0, 0, 0, 0, 0, 587, 588,
	590, 0, 591, 592, 593, 594, 589, 595, 596, 597,
	598, 599, 600, 0, 602, 603, 601, 604, 605, 0,
	606, 607, 608, 609, 610, 756, 611, 0, 612, 613,
	620, 621, 622, 614, 615, 616, 623, 624, 625, 626,
	627, 629, 628, 0, 631, 632, 630, 633, 634, 635,
	0, 636, 757, 637, 617, 618, 638, 639, 0, 640,
	641, 642, 643, 644, 645, 646, 758, 0, 647, 0,
	648, 649, 650, 651, 652, 653, 655, 619, 656, 661,
	662, 759, 657, 658, 659, 660, 760, 664, 665, 666,
	667, 0, 668, 669, 0, 663, 654, 0, 670, 671,
	672, 673, 674, 675, 0, 676, 677, 0, 678, 761,
	762, 763, 764, 0, 690, 0, 679, 681, 682, 683,
	684, 765, 685, 766, 0, 686, 687, 688, 689, 680,
	691, 692, 0, 0, 693, 694, 696, 698, 699, 695,
	697, 700, 0, 701, 0, 0, 702, 703, 704, 767,
	768, 769, 0, 706, 705, 707, 708, 709, 770, 710,
	711, 712, 1452, 0, 302, 0, 713, 714, 771, 715,
	716, 717, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 308, 309, 311, 310, 312, 313, 314, 315, 0,
	316, 317, 0, 0, 0, 0, 0, 718, 0, 0,
	0, 318, 0, 319, 320, 321, 0, 322, 323, 324,
	325, 326, 327, 328, 719, 720, 0, 329, 721, 330,
	722, 0, 723, 331, 332, 333, 334, 335, 336, 337,
	0, 0, 0, 338, 724, 725, 726, 0, 339, 340,
	727, 0, 0, 0, 341, 342, 343, 344, 345, 346,
	347, 348, 0, 0, 350, 351, 352, 349, 353, 0,
	354, 0, 355, 356, 357, 358, 359, 360, 361, 0,
	362, 363, 364, 0, 365, 366, 367, 0, 0, 0,
	0, 0, 0, 0, 368, 369, 370, 371, 372, 0,
	373, 375, 728, 729, 0, 378, 380, 374, 376, 0,
	379, 377, 381, 0, 382, 383, 384, 0, 0, 385,
	386, 387, 0, 388, 389, 390, 0, 391, 392, 393,
	0, 394, 395, 730, 396, 397, 398, 400, 402, 399,
	401, 403, 404, 405, 406, 407, 731, 732, 408, 0,
	305, 0, 0, 0, 0, 0, 409, 410, 411, 733,
	0, 0, 0, 412, 0, 413, 414, 415, 0, 416,
	417, 0, 0, 418, 419, 420, 734, 735, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 0, 430, 736,
	0, 737, 431, 0, 432, 433, 434, 435, 436, 437,
	438, 1451, 739, 740, 531, 0, 439, 440, 441, 0,
	442, 443, 444, 445, 446, 0, 0, 0, 306, 447,
	448, 449, 0, 0, 741, 450, 532, 451, 742, 743,
	0, 744, 0, 452, 453, 455, 0, 745, 0, 454,
	456, 457, 0, 458, 0, 0, 0, 459, 460, 461,
	462, 463, 464, 0, 465, 467, 466, 0, 469, 746,
	468, 0, 470, 471, 0, 0, 472, 473, 474, 475,
	476, 477, 480, 0, 0, 478, 479, 481, 482, 0,
	483, 484, 486, 489, 485, 487, 488, 490, 503, 504,
	491, 492, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 506, 0, 505, 0, 507, 508, 509, 510,
	511, 518, 520, 521, 516, 517, 519, 522, 523, 525,
	513, 514, 515, 0, 524, 512, 0, 307, 0, 526,
	527, 528, 529, 0, 747, 530, 748, 533, 534, 0,
	0, 535, 0, 536, 0, 0, 538, 539, 540, 0,
	0, 541, 542, 749, 0, 543, 0, 750, 544, 545,
	537, 546, 547, 548, 549, 550, 551, 552, 553, 554,
	555, 0, 556, 557, 751, 558, 559, 560, 752, 561,
	562, 563, 753, 564, 754, 565, 566, 0, 567, 568,
	569, 0, 570, 571, 572, 573, 574, 575, 576, 577,
	755, 578, 579, 581, 580, 582, 0, 583, 0, 584,
	585, 586, 0, 0, 0, 0, 0, 587, 588, 590,
	0, 591, 592, 593, 594, 589, 595, 596, 597, 598,
	599, 600, 0, 602, 603, 601, 604, 605, 0, 606,
	607, 608, 609, 610, 756, 611, 0, 612, 613, 620,
	621, 622, 614, 615, 616, 623, 624, 625, 626, 627,
	629, 628, 0, 631, 632, 630, 633, 634, 635, 0,
	636, 757, 637, 617, 618, 638, 639, 0, 640, 641,
	642, 643, 644, 645, 646, 758, 0, 647, 0, 648,
	649, 650, 651, 652, 653, 655, 619, 656, 661, 662,
	759, 657, 658, 659, 660, 760, 664, 665, 666, 667,
	0, 668, 669, 0, 663, 654, 0, 670, 671, 672,
	673, 674, 675, 0, 676, 677, 0, 678, 761, 762,
	763, 764, 0, 690, 0, 679, 681, 682, 683, 684,
	765, 685, 766, 0, 686, 687, 688, 689, 680, 691,
	692, 0, 0, 693, 694, 696, 698, 699, 695, 697,
	700, 0, 701, 0, 0, 702, 703, 704, 767, 768,
	769, 0, 706, 705, 707, 708, 709, 770, 710, 711,
	712, 1449, 0, 302, 0, 713, 714, 771, 715, 716,
	717, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	308, 309, 311, 310, 312, 313, 314, 315, 0, 316,
	317, 0, 0, 0, 0, 0, 718, 0, 0, 0,
	318, 0, 319, 320, 321, 0, 322, 323, 324, 325,
	326, 327, 328, 719, 720, 0, 329, 721, 330, 722,
	0, 723, 331, 332, 333, 334, 335, 336, 337, 0,
	0, 0, 338, 724, 725, 726, 0, 339, 340, 727,
	0, 0, 0, 341, 342, 343, 344, 345, 346, 347,
	348, 0, 0, 350, 351, 352, 349, 353, 0, 354,
	0, 355, 356, 357, 358, 359, 360, 361, 0, 362,
	363, 364, 0, 365, 366, 367, 0, 0, 0, 0,
	0, 0, 0, 368, 369, 370, 371, 372, 0, 373,
	375, 728, 729, 0, 378, 380, 374, 376, 0, 379,
	377, 381, 0, 382, 383, 384, 0, 0, 385, 386,
	387, 0, 388, 389, 390, 0, 391, 392, 393, 0,
	394, 395, 730, 396, 397, 398, 400, 402, 399, 401,
	403, 404, 405, 406, 407, 731, 732, 408, 0, 305,
	0, 0, 0, 0, 0, 409, 410, 411, 733, 0,
	0, 0, 412, 0, 413, 414, 415, 0, 416, 417,
	0, 0, 418, 419, 420, 734, 735, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 0, 430, 736, 0,
	737, 431, 0, 432, 433, 434, 435, 436, 437, 438,
	1448, 739, 740, 531, 0, 439, 440, 441, 0, 442,
	443, 444, 445, 446, 0, 0, 0, 306, 447, 448,
	449, 0, 0, 741, 450, 532, 451, 742, 743, 0,
	744, 0, 452, 453, 455, 0, 745, 0, 454, 456,
	457, 0, 458, 0, 0, 0, 459, 460, 461, 462,
	463, 464, 0, 465, 467, 466, 0, 469, 746, 468,
	0, 470, 471, 0, 0, 472, 473, 474, 475, 476,
	477, 480, 0, 0, 478, 479, 481, 482, 0, 483,
	484, 486, 489, 485, 487, 488, 490, 503, 504, 491,
	492, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 506, 0, 505, 0, 507, 508, 509, 510, 511,
	518, 520, 521, 516, 517, 519, 522, 523, 525, 513,
	514, 515, 0, 524, 512, 0, 307, 0, 526, 527,
	528, 529, 0, 747, 530, 748, 533, 534, 0, 0,
	535, 0, 536, 0, 0, 538, 539, 540, 0, 0,
	541, 542, 749, 0, 543, 0, 750, 544, 545, 537,
	546, 547, 548, 549, 550, 551, 552, 553, 554, 555,
	0, 556, 557, 751, 558, 559, 560, 752, 561, 562,
	563, 753, 564, 754, 565, 566, 0, 567, 568, 569,
	0, 570, 571, 572, 573, 574, 575, 576, 577, 755,
	578, 579, 581, 580, 582, 0, 583, 0, 584, 585,
	586, 0, 0, 0, 0, 0, 587, 588, 590, 0,
	591, 592, 593, 594, 589, 595, 596, 597, 598, 599,
	600, 0, 602, 603, 601, 604, 605, 0, 606, 607,
	608, 609, 610, 756, 611, 0, 612, 613, 620, 621,
	622, 614, 615, 616, 623, 624, 625, 626, 627, 629,
	628, 0, 631, 632, 630, 633, 634, 635, 0, 636,
	757, 637, 617, 618, 638, 639, 0, 640, 641, 642,
	643, 644, 645, 646, 758, 0, 647, 0, 648, 649,
	650, 651, 652, 653, 655, 619, 656, 661, 662, 759,
	657, 658, 659, 660, 760, 664, 665, 666, 667, 0,
	668, 669, 0, 663, 654, 0, 670, 671, 672, 673,
	674, 675, 0, 676, 677, 0, 678, 761, 762, 763,
	764, 0, 690, 0, 679, 681, 682, 683, 684, 765,
	685, 766, 0, 686, 687, 688, 689, 680, 691, 692,
	0, 0, 693, 694, 696, 698, 699, 695, 697, 700,
	0, 701, 0, 0, 702, 703, 704, 767, 768, 769,
	0, 706, 705, 707, 708, 709, 770, 710, 711, 712,
	1444, 0, 302, 0, 713, 714, 771, 715, 716, 717,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 308,
	309, 311, 310, 312, 313, 314, 315, 0, 316, 317,
	0, 0, 0, 0, 0, 718, 0, 0, 0, 318,
	0, 319, 320, 321, 0, 322, 323, 324, 325, 326,
	327, 328, 719, 720, 0, 329, 721, 330, 722, 0,
	723, 331, 332, 333, 334, 335, 336, 337, 0, 0,
	0, 338, 724, 725, 726, 0, 339, 340, 727, 0,
	0, 0, 341, 342, 343, 344, 345, 346, 347, 348,
	0, 0, 350, 351, 352, 349, 353, 0, 354, 0,
	355, 356, 357, 358, 359, 360, 361, 0, 362, 363,
	364, 0, 365, 366, 367, 0, 0, 0, 0, 0,
	0, 0, 368, 369, 370, 371, 372, 0, 373, 375,
	728, 729, 0, 378, 380, 374, 376, 0, 379, 377,
	381, 0, 382, 383, 384, 0, 0, 385, 386, 387,
	0, 388, 389, 390, 0, 391, 392, 393, 0, 394,
	395, 730, 396, 397, 398, 400, 402, 399, 401, 403,
	404, 405, 406, 407, 731, 732, 408, 0, 305, 0,
	0, 0, 0, 0, 409, 410, 411, 733, 0, 0,
	0, 412, 0, 413, 414, 415, 0, 416, 417, 0,
	0, 418, 419, 420, 734, 735, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 0, 430, 736, 0, 737,
	431, 0, 432, 433, 434, 435, 436, 437, 438, 1443,
	739, 740, 531, 0, 439, 440, 441, 0, 442, 443,
	444, 445, 446, 0, 0, 0, 306, 447, 448, 449,
	0, 0, 741, 450, 532, 451, 742, 743, 0, 744,
	0, 452, 453, 455, 0, 745, 0, 454, 456, 457,
	0, 458, 0, 0, 0, 459, 460, 461, 462, 463,
	464, 0, 465, 467, 466, 0, 469, 746, 468, 0,
	470, 471, 0, 0, 472, 473, 474, 475, 476, 477,
	480, 0, 0, 478, 479, 481, 482, 0, 483, 484,
	486, 489, 485, 487, 488, 490, 503, 504, 491, 492,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	506, 0, 505, 0, 507, 508, 509, 510, 511, 518,
	520, 521, 516, 517, 519, 522, 523, 525, 513, 514,
	515, 0, 524, 512, 0, 307, 0, 526, 527, 528,
	529, 0, 747, 530, 748, 533, 534, 0, 0, 535,
	0, 536, 0, 0, 538, 539, 540, 0, 0, 541,
	542, 749, 0, 543, 0, 750, 544, 545, 537, 546,
	547, 548, 549, 550, 551, 552, 553, 554, 555, 0,
	556, 557, 751, 558, 559, 560, 752, 561, 562, 563,
	753, 564, 754, 565, 566, 0, 567, 568, 569, 0,
	570, 571, 572, 573, 574, 575, 576, 577, 755, 578,
	579, 581, 580, 582, 0, 583, 0, 584, 585, 586,
	0, 0, 0, 0, 0, 587, 588, 590, 0, 591,
	592, 593, 594, 589, 595, 596, 597, 598, 599, 600,
	0, 602, 603, 601, 604, 605, 0, 606, 607, 608,
	609, 610, 756, 611, 0, 612, 613, 620, 621, 622,
	614, 615, 616, 623, 624, 625, 626, 627, 629, 628,
	0, 631, 632, 630, 633, 634, 635, 0, 636, 757,
	637, 617, 618, 638, 639, 0, 640, 641, 642, 643,
	644, 645, 646, 758, 0, 647, 0, 648, 649, 650,
	651, 652, 653, 655, 619, 656, 661, 662, 759, 657,
	658, 659, 660, 760, 664, 665, 666, 667, 0, 668,
	669, 0, 663, 654, 0, 670, 671, 672, 673, 674,
	675, 0, 676, 677, 0, 678, 761, 762, 763, 764,
	0, 690, 0, 679, 681, 682, 683, 684, 765, 685,
	766, 0, 686, 687, 688, 689, 680, 691, 692, 0,
	0, 693, 694, 696, 698, 699, 695, 697, 700, 0,
	701, 0, 0, 702, 703, 704, 767, 768, 769, 0,
	706, 705, 707, 708, 709, 770, 710, 711, 712, 773,
	0, 302, 0, 713, 714, 771, 715, 716, 717, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 308, 309,
	311, 310, 312, 313, 314, 315, 0, 316, 317, 0,
	0, 0, 0, 0, 718, 0, 0, 0, 318, 0,
	319, 320, 321, 0, 322, 323, 324, 325, 326, 327,
	328, 719, 720, 0, 329, 721, 330, 722, 0, 723,
	331, 332, 333, 334, 335, 336, 337, 0, 0, 0,
	338, 724, 725, 726, 0, 339, 340, 727, 0, 0,
	0, 341, 342, 343, 344, 345, 346, 347, 348, 0,
	0, 350, 351, 352, 349, 353, 0, 354, 0, 355,
	356, 357, 358, 359, 360, 361, 0, 362, 363, 364,
	0, 365, 366, 367, 0, 0, 0, 0, 0, 0,
	0, 368, 369, 370, 371, 372, 0, 373, 375, 728,
	729, 0, 378, 380, 374, 376, 0, 379, 377, 381,
	0, 382, 383, 384, 0, 0, 385, 386, 387, 0,
	388, 389, 390, 0, 391, 392, 393, 0, 394, 395,
	730, 396, 397, 398, 400, 402, 399, 401, 403, 404,
	405, 406, 407, 731, 732, 408, 0, 305, 0, 0,
	0, 0, 0, 409, 410, 411, 733, 0, 0, 0,
	412, 0, 413, 414, 415, 0, 416, 417, 0, 0,
	418, 419, 420, 734, 735, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 0, 430, 736, 0, 737, 431,
	0, 432, 433, 434, 435, 436, 437, 438, 738, 739,
	740, 531, 0, 439, 440, 441, 0, 442, 443, 444,
	445, 446, 0, 0, 0, 306, 447, 448, 449, 0,
	0, 741, 450, 532, 451, 742, 743, 0, 744, 0,
	452, 453, 455, 0, 745, 0, 454, 456, 457, 0,
	458, 0, 0, 0, 459, 460, 461, 462, 463, 464,
	0, 465, 467, 466, 0, 469, 746, 468, 0, 470,
	471, 0, 0, 472, 473, 474, 475, 476, 477, 480,
	0, 0, 478, 479, 481, 482, 0, 483, 484, 486,
	489, 485, 487, 488, 490, 503, 504, 491, 492, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 506,
	0, 505, 0, 507, 508, 509, 510, 511, 518, 520,
	521, 516, 517, 519, 522, 523, 525, 513, 514, 515,
	0, 524, 512, 0, 307, 0, 526, 527, 528, 529,
	0, 747, 530, 748, 533, 534, 0, 0, 535, 0,
	536, 0, 0, 538, 539, 540, 0, 0, 541, 542,
	749, 0, 543, 0, 750, 544, 545, 537, 546, 547,
	548, 549, 550, 551, 552, 553, 554, 555, 0, 556,
	557, 751, 558, 559, 560, 752, 561, 562, 563, 753,
	564, 754, 565, 566, 0, 567, 568, 569, 0, 570,
	571, 572, 573, 574, 575, 576, 577, 755, 578, 579,
	581, 580, 582, 0, 583, 0, 584, 585, 586, 0,
	0, 0, 0, 0, 587, 588, 590, 0, 591, 592,
	593, 594, 589, 595, 596, 597, 598, 599, 600, 0,
	602, 603, 601, 604, 605, 0, 606, 607, 608, 609,
	610, 756, 611, 0, 612, 613, 620, 621, 622, 614,
	615, 616, 623, 624, 625, 626, 627, 629, 628, 0,
	631, 632, 630, 633, 634, 635, 0, 636, 757, 637,
	617, 618, 638, 639, 0, 640, 641, 642, 643, 644,
	645, 646, 758, 0, 647, 0, 648, 649, 650, 651,
	652, 653, 655, 619, 656, 661, 662, 759, 657, 658,
	659, 660, 760, 664, 665, 666, 667, 0, 668, 669,
	0, 663, 654, 0, 670, 671, 672, 673, 674, 675,
	0, 676, 677, 0, 678, 761, 762, 763, 764, 0,
	690, 0, 679, 681, 682, 683, 684, 765, 685, 766,
	0, 686, 687, 688, 689, 680, 691, 692, 0, 0,
	693, 694, 696, 698, 699, 695, 697, 700, 0, 701,
	0, 0, 702, 703, 704, 767, 768, 769, 0, 706,
	705, 707, 708, 709, 770, 710, 711, 712, 293, 0,
	302, 0, 713, 714, 771, 715, 716, 717, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 308, 309, 311,
	310, 312, 313, 314, 315, 0, 316, 317, 0, 0,
	0, 0, 0, 718, 0, 0, 0, 318, 0, 319,
	320, 321, 0, 322, 323, 324, 325, 326, 327, 328,
	719, 720, 0, 329, 721, 330, 722, 0, 723, 331,
	332, 333, 334, 335, 336, 337, 0, 0, 0, 338,
	724, 725, 726, 0, 339, 340, 727, 0, 0, 0,
	341, 342, 343, 344, 345, 346, 347, 348, 0, 0,
	350, 351, 352, 349, 353, 0, 354, 0, 355, 356,
	357, 358, 359, 360, 361, 0, 362, 363, 364, 0,
	365, 366, 367, 0, 0, 0, 0, 0, 0, 0,
	368, 369, 370, 371, 372, 0, 373, 375, 728, 729,
	0, 378, 380, 374, 376, 0, 379, 377, 381, 0,
	382, 383, 384, 0, 0, 385, 386, 387, 0, 388,
	389, 390, 0, 391, 392, 393, 0, 394, 395, 730,
	396, 397, 398, 400, 402, 399, 401, 403, 404, 405,
	406, 407, 731, 732, 408, 0, 305, 0, 0, 0,
	0, 0, 409, 410, 411, 733, 0, 0, 0, 412,
	0, 413, 414, 415, 0, 416, 417, 0, 0, 418,
	419, 420, 734, 735, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 0, 430, 736, 0, 737, 431, 0,
	432, 433, 434, 435, 436, 437, 438, 738, 739, 740,
	531, 0, 439, 440, 441, 0, 442, 443, 444, 445,
	446, 0, 0, 0, 306, 447, 448, 449, 0, 0,
	741, 450, 532, 451, 742, 743, 0, 744, 0, 452,
	453, 455, 0, 745, 0, 454, 456, 457, 0, 458,
	0, 0, 0, 459, 460, 461, 462, 463, 464, 0,
	465, 467, 466, 0, 469, 746, 468, 0, 470, 471,
	0, 0, 472, 473, 474, 475, 476, 477, 480, 0,
	0, 478, 479, 481, 482, 0, 483, 484, 486, 489,
	485, 487, 488, 490, 503, 504, 491, 492, 493, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 506, 0,
	505, 0, 507, 508, 509, 510, 511, 518, 520, 521,
	516, 517, 519, 522, 523, 525, 513, 514, 515, 0,
	524, 512, 0, 307, 0, 526, 527, 528, 529, 0,
	747, 530, 748, 533, 534, 0, 0, 535, 0, 536,
	0, 0, 538, 539, 540, 0, 0, 541, 542, 749,
	0, 543, 0, 750, 544, 545, 537, 546, 547, 548,
	549, 550, 551, 552, 553, 554, 555, 0, 556, 557,
	751, 558, 559, 560, 752, 561, 562, 563, 753, 564,
	754, 565, 566, 0, 567, 568, 569, 0, 570, 571,
	572, 573, 574, 575, 576, 577, 755, 578, 579, 581,
	580, 582, 0, 583, 0, 584, 585, 586, 0, 0,
	0, 0, 0, 587, 588, 590, 0, 591, 592, 593,
	594, 589, 595, 596, 597, 598, 599, 600, 0, 602,
	603, 601, 604, 605, 0, 606, 607, 608, 609, 610,
	756, 611, 0, 612, 613, 620, 621, 622, 614, 615,
	616, 623, 624, 625, 626, 627, 629, 628, 0, 631,
	632, 630, 633, 634, 635, 0, 636, 757, 637, 617,
	618, 638, 639, 0, 640, 641, 642, 643, 644, 645,
	646, 758, 0, 647, 0, 648, 649, 650, 651, 652,
	653, 655, 619, 656, 661, 662, 759, 657, 658, 659,
	660, 760, 664, 665, 666, 667, 0, 668, 669, 0,
	663, 654, 0, 670, 671, 672, 673, 674, 675, 0,
	676, 677, 0, 678, 761, 762, 763, 764, 0, 690,
	0, 679, 681, 682, 683, 684, 765, 685, 766, 0,
	686, 687, 688, 689, 680, 691, 692, 0, 0, 693,
	694, 696, 698, 699, 695, 697, 700, 0, 701, 0,
	0, 702, 703, 704, 767, 768, 769, 0, 706, 705,
	707, 708, 709, 770, 710, 711, 712, 302, 0, 0,
	0, 713, 714, 771, 715, 716, 717, 0, 0, 0,
	0, 0, 0, 0, 308, 309, 311, 310, 312, 313,
	314, 315, 0, 316, 317, 0, 0, 0, 0, 0,
	718, 0, 0, 0, 318, 0, 319, 320, 321, 0,
	322, 323, 324, 325, 326, 327, 328, 719, 720, 0,
	329, 721, 330, 722, 0, 723, 331, 332, 333, 334,
	335, 336, 337, 0, 0, 0, 338, 724, 725, 726,
	0, 339, 340, 727, 0, 0, 0, 341, 342, 343,
	344, 345, 346, 347, 348, 0, 0, 350, 351, 352,
	349, 353, 0, 354, 0, 355, 356, 357, 358, 359,
	360, 361, 0, 362, 363, 364, 0, 365, 366, 367,
	0, 0, 0, 0, 0, 0, 0, 368, 369, 370,
	371, 372, 0, 373, 375, 728, 729, 0, 378, 380,
	374, 376, 0, 379, 377, 381, 0, 382, 383, 384,
	0, 0, 385, 386, 387, 0, 388, 389, 390, 0,
	391, 392, 393, 0, 394, 395, 730, 396, 397, 398,
	400, 402, 399, 401, 403, 404, 405, 406, 407, 731,
	732, 408, 0, 305, 0, 0, 0, 0, 0, 409,
	410, 411, 733, 0, 0, 0, 412, 0, 413, 414,
	415, 0, 416, 417, 0, 0, 418, 419, 420, 734,
	735, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	0, 430, 736, 0, 737, 431, 0, 432, 433, 434,
	435, 436, 437, 438, 738, 739, 740, 531, 0, 439,
	440, 441, 0, 442, 443, 444, 445, 446, 0, 0,
	0, 306, 447, 448, 449, 0, 0, 741, 450, 532,
	451, 742, 743, 0, 744, 0, 452, 453, 455, 0,
	745, 0, 454, 456, 457, 0, 458, 0, 0, 0,
	459, 460, 461, 462, 463, 464, 0, 465, 467, 466,
	0, 469, 746, 468, 0, 470, 471, 0, 0, 472,
	473, 474, 475, 476, 477, 480, 0, 0, 478, 479,
	481, 482, 0, 483, 484, 486, 489, 485, 487, 488,
	490, 503, 504, 491, 492, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 506, 0, 505, 0, 507,
	508, 509, 510, 511, 518, 520, 521, 516, 517, 519,
	522, 523, 525, 513, 514, 515, 0, 524, 512, 0,
	307, 0, 526, 527, 528, 529, 0, 747, 530, 748,
	533, 534, 0, 0, 535, 0, 536, 0, 0, 538,
	539, 540, 0, 0, 541, 542, 749, 0, 543, 0,
	750, 544, 545, 537, 546, 547, 548, 549, 550, 551,
	552, 553, 554, 555, 0, 556, 557, 751, 558, 559,
	560, 752, 561, 562, 563, 753, 564, 754, 565, 566,
	0, 567, 568, 569, 0, 570, 571, 572, 573, 574,
	575, 576, 577, 755, 578, 579, 581, 580, 582, 0,
	583, 0, 584, 585, 586, 0, 0, 0, 0, 0,
	587, 588, 590, 0, 591, 592, 593, 594, 589, 595,
	596, 597, 598, 599, 600, 0, 602, 603, 601, 604,
	605, 0, 606, 607, 608, 609, 610, 756, 611, 0,
	612, 613, 620, 621, 622, 614, 615, 616, 623, 624,
	625, 626, 627, 629, 628, 0, 631, 632, 630, 633,
	634, 635, 0, 636, 757, 637, 617, 618, 638, 639,
	0, 640, 641, 642, 643, 644, 645, 646, 758, 0,
	647, 0, 648, 649, 650, 651, 652, 653, 655, 619,
	656, 661, 662, 759, 657, 658, 659, 660, 760, 664,
	665, 666, 667, 0, 668, 669, 0, 663, 654, 0,
	670, 671, 672, 673, 674, 675, 0, 676, 677, 0,
	678, 761, 762, 763, 764, 0, 690, 0, 679, 681,
	682, 683, 684, 765, 685, 766, 0, 686, 687, 688,
	689, 680, 691, 692, 0, 0, 693, 694, 696, 698,
	699, 695, 697, 700, 0, 701, 0, 0, 702, 703,
	704, 767, 768, 769, 0, 706, 705, 707, 708, 709,
	770, 710, 711, 712, 302, 0, 0, 0, 713, 714,
	771, 715, 716, 717, 0, 0, 0, 0, 0, 0,
	0, 308, 309, 311, 310, 312, 313, 314, 315, 0,
	316, 317, 0, 0, 0, 0, 0, 718, 0, 0,
	0, 318, 0, 319, 320, 321, 0, 322, 323, 324,
	325, 326, 327, 328, 719, 720, 0, 329, 721, 330,
	722, 0, 723, 331, 332, 333, 334, 335, 336, 337,
	0, 0, 0, 338, 724, 725, 726, 0, 339, 340,
	727, 0, 0, 0, 341, 342, 343, 344, 345, 346,
	347, 348, 0, 0, 350, 351, 352, 349, 353, 0,
	354, 0, 355, 356, 357, 358, 359, 360, 361, 796,
	362, 363, 364, 0, 365, 366, 367, 0, 0, 0,
	0, 0, 0, 0, 368, 369, 370, 371, 372, 0,
	373, 375, 728, 729, 0, 378, 380, 374, 376, 0,
	379, 377, 381, 0, 382, 383, 384, 0, 0, 385,
	386, 387, 0, 388, 389, 390, 0, 391, 392, 393,
	0, 394, 395, 730, 396, 397, 398, 400, 402, 399,
	401, 403, 404, 405, 406, 407, 731, 732, 408, 0,
	0, 0, 0, 0, 0, 0, 409, 410, 411, 733,
	0, 0, 0, 412, 0, 413, 414, 415, 0, 416,
	417, 0, 0, 418, 419, 420, 734, 735, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 797, 430, 736,
	0, 737, 431, 0, 432, 433, 434, 435, 436, 437,
	438, 738, 739, 740, 531, 0, 439, 440, 441, 0,
	442, 443, 444, 445, 446, 0, 0, 0, 0, 447,
	448, 449, 0, 0, 741, 450, 532, 451, 742, 743,
	0, 744, 0, 452, 453, 455, 0, 745, 0, 454,
	456, 457, 0, 458, 0, 0, 0, 459, 460, 461,
	462, 463, 464, 0, 465, 467, 466, 0, 469, 746,
	468, 0, 470, 471, 0, 0, 472, 473, 474, 475,
	476, 477, 480, 0, 0, 478, 479, 481, 482, 0,
	483, 484, 486, 489, 485, 487, 488, 490, 503, 504,
	491, 492, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 506, 0, 505, 0, 507, 508, 509, 510,
	511, 518, 520, 521, 516, 517, 519, 522, 523, 525,
	513, 514, 515, 0, 524, 512, 0, 0, 0, 526,
	527, 528, 529, 0, 747, 530, 748, 533, 534, 0,
	0, 535, 0, 536, 0, 0, 538, 539, 540, 0,
	0, 541, 542, 749, 0, 543, 0, 750, 544, 545,
	537, 546, 547, 548, 549, 550, 551, 552, 553, 554,
	555, 0, 556, 557, 751, 558, 559, 560, 752, 561,
	562, 563, 753, 564, 754, 565, 566, 0, 567, 568,
	569, 0, 570, 571, 572, 573, 574, 575, 576, 577,
	755, 578, 579, 581, 580, 582, 0, 583, 0, 584,
	585, 586, 0, 0, 0, 0, 0, 587, 588, 590,
	0, 591, 592, 593, 594, 589, 595, 596, 597, 598,
	599, 600, 0, 602, 603, 601, 604, 605, 0, 606,
	607, 608, 609, 610, 756, 611, 0, 612, 613, 620,
	621, 622, 614, 615, 616, 623, 624, 625, 626, 627,
	629, 628, 798, 631, 632, 630, 633, 634, 635, 0,
	636, 757, 637, 617, 618, 638, 639, 0, 640, 641,
	642, 643, 644, 645, 646, 758, 0, 647, 0, 648,
	649, 650, 651, 652, 653, 655, 619, 656, 661, 662,
	759, 657, 658, 659, 660, 760, 664, 665, 666, 667,
	0, 668, 669, 0, 663, 654, 0, 670, 671, 672,
	673, 674, 675, 0, 676, 677, 0, 678, 761, 762,
	763, 764, 0, 690, 0, 679, 681, 682, 683, 684,
	765, 685, 766, 0, 686, 687, 688, 689, 680, 691,
	692, 0, 0, 693, 694, 696, 698, 699, 695, 697,
	700, 0, 701, 0, 0, 702, 703, 704, 767, 768,
	769, 0, 706, 705, 707, 708, 709, 770, 710, 711,
	712, 302, 0, 0, 0, 713, 714, 771, 715, 716,
	717, 0, 0, 0, 0, 0, 0, 0, 308, 309,
	311, 310, 312, 313, 314, 315, 0, 316, 317, 0,
	0, 0, 0, 0, 718, 0, 0, 0, 318, 0,
	319, 320, 321, 0, 322, 323, 324, 325, 326, 327,
	328, 719, 720, 0, 329, 721, 330, 722, 0, 723,
	331, 332, 333, 334, 335, 336, 337, 0, 0, 0,
	338, 724, 725, 726, 0, 339, 340, 727, 0, 0,
	0, 341, 342, 343, 344, 345, 346, 347, 348, 0,
	0, 350, 351, 352, 349, 353, 0, 354, 0, 355,
	356, 357, 358, 359, 360, 361, 0, 362, 363, 364,
	0, 365, 366, 367, 0, 0, 0, 0, 0, 0,
	0, 368, 369, 370, 2624, 372, 0, 373, 375, 728,
	729, 0, 378, 380, 374, 376, 0, 379, 377, 381,
	0, 382, 383, 384, 0, 0, 385, 386, 387, 0,
	388, 389, 390, 0, 391, 392, 393, 0, 394, 395,
	730, 396, 397, 398, 400, 402, 399, 401, 403, 404,
	405, 406, 407, 731, 732, 408, 0, 305, 0, 0,
	0, 0, 0, 409, 410, 411, 733, 0, 0, 0,
	412, 0, 413, 414, 415, 0, 416, 417, 0, 0,
	418, 419, 420, 734, 735, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 0, 430, 736, 0, 737, 431,
	0, 432, 433, 434, 435, 436, 437, 438, 738, 739,
	740, 531, 0, 439, 440, 441, 0, 442, 443, 444,
	445, 446, 0, 0, 0, 306, 447, 448, 449, 0,
	0, 741, 450, 532, 451, 742, 743, 0, 744, 0,
	452, 453, 455, 0, 745, 0, 454, 456, 457, 0,
	458, 0, 0, 0, 459, 460, 461, 462, 463, 464,
	0, 465, 467, 466, 0, 469, 746, 468, 0, 470,
	471, 0, 0, 472, 473, 474, 475, 476, 477, 480,
	0, 0, 478, 479, 481, 482, 0, 483, 484, 486,
	489, 485, 487, 488, 490, 503, 504, 491, 492, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 506,
	0, 505, 0, 507, 508, 509, 510, 511, 518, 520,
	521, 516, 517, 519, 522, 523, 525, 513, 514, 515,
	0, 524, 512, 0, 307, 0, 526, 527, 528, 529,
	0, 747, 530, 748, 533, 534, 0, 0, 535, 0,
	536, 0, 0, 538, 539, 540, 0, 0, 541, 542,
	749, 0, 543, 0, 750, 544, 545, 537, 546, 547,
	548, 549, 550, 551, 552, 553, 554, 555, 0, 556,
	557, 751, 558, 559, 560, 752, 561, 562, 563, 753,
	564, 754, 565, 566, 0, 567, 568, 569, 0, 570,
	571, 572, 573, 574, 575, 576, 577, 755, 578, 579,
	581, 580, 582, 0, 583, 0, 584, 585, 586, 0,
	0, 0, 0, 0, 587, 588, 590, 0, 591, 592,
	593, 594, 589, 595, 596, 597, 598, 599, 600, 0,
	602, 603, 601, 604, 605, 0, 606, 607, 608, 609,
	610, 756, 611, 0, 612, 613, 620, 621, 622, 614,
	615, 616, 623, 624, 625, 626, 627, 629, 628, 0,
	631, 632, 630, 633, 634, 635, 0, 636, 757, 637,
	617, 618, 638, 639, 0, 640, 641, 642, 643, 644,
	645, 646, 758, 0, 647, 0, 648, 649, 650, 651,
	652, 653, 655, 619, 656, 661, 662, 759, 657, 658,
	659, 660, 760, 664, 665, 666, 667, 0, 668, 669,
	0, 663, 654, 0, 670, 671, 672, 673, 674, 675,
	0, 676, 677, 0, 678, 761, 762, 763, 764, 0,
	690, 0, 679, 681, 682, 683, 684, 765, 685, 766,
	0, 686, 687, 688, 689, 680, 691, 692, 0, 0,
	693, 694, 696, 698, 699, 695, 697, 700, 0, 701,
	0, 0, 702, 703, 704, 767, 768, 769, 0, 706,
	705, 707, 708, 709, 770, 710, 711, 712, 302, 0,
	0, 0, 713, 714, 771, 715, 716, 717, 0, 0,
	0, 0, 0, 0, 0, 308, 309, 311, 310, 312,
	313, 314, 315, 0, 316, 317, 0, 0, 0, 0,
	0, 718, 0, 0, 0, 318, 0, 319, 320, 321,
	0, 322, 323, 324, 325, 326, 327, 328, 719, 720,
	0, 329, 721, 330, 722, 0, 723, 331, 332, 333,
	334, 335, 336, 337, 0, 0, 0, 338, 724, 725,
	726, 0, 339, 340, 727, 0, 0, 0, 341, 342,
	343, 344, 345, 346, 347, 348, 0, 0, 350, 351,
	352, 349, 353, 0, 354, 0, 355, 356, 357, 358,
	359, 360, 361, 0, 362, 363, 364, 0, 365, 366,
	367, 0, 0, 0, 0, 0, 0, 0, 368, 369,
	370, 2622, 372, 0, 373, 375, 728, 729, 0, 378,
	380, 374, 376, 0, 379, 377, 381, 0, 382, 383,
	384, 0, 0, 385, 386, 387, 0, 388, 389, 390,
	0, 391, 392, 393, 0, 394, 395, 730, 396, 397,
	398, 400, 402, 399, 401, 403, 404, 405, 406, 407,
	731, 732, 408, 0, 305, 0, 0, 0, 0, 0,
	409, 410, 411, 733, 0, 0, 0, 412, 0, 413,
	414, 415, 0, 416, 417, 0, 0, 418, 419, 420,
	734, 735, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 0, 430, 736, 0, 737, 431, 0, 432, 433,
	434, 435, 436, 437, 438, 738, 739, 740, 531, 0,
	439, 440, 441, 0, 442, 443, 444, 445, 446, 0,
	0, 0, 306, 447, 448, 449, 0, 0, 741, 450,
	532, 451, 742, 743, 0, 744, 0, 452, 453, 455,
	0, 745, 0, 454, 456, 457, 0, 458, 0, 0,
	0, 459, 460, 461, 462, 463, 464, 0, 465, 467,
	466, 0, 469, 746, 468, 0, 470, 471, 0, 0,
	472, 473, 474, 475, 476, 477, 480, 0, 0, 478,
	479, 481, 482, 0, 483, 484, 486, 489, 485, 487,
	488, 490, 503, 504, 491, 492, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 506, 0, 505, 0,
	507, 508, 509, 510, 511, 518, 520, 521, 516, 517,
	519, 522, 523, 525, 513, 514, 515, 0, 524, 512,
	0, 307, 0, 526, 527, 528, 529, 0, 747, 530,
	748, 533, 534, 0, 0, 535, 0, 536, 0, 0,
	538, 539, 540, 0, 0, 541, 542, 749, 0, 543,
	0, 750, 544, 545, 537, 546, 547, 548, 549, 550,
	551, 552, 553, 554, 555, 0, 556, 557, 751, 558,
	559, 560, 752, 561, 562, 563, 753, 564, 754, 565,
	566, 0, 567, 568, 569, 0, 570, 571, 572, 573,
	574, 575, 576, 577, 755, 578, 579, 581, 580, 582,
	0, 583, 0, 584, 585, 586, 0, 0, 0, 0,
	0, 587, 588, 590, 0, 591, 592, 593, 594, 589,
	595, 596, 597, 598, 599, 600, 0, 602, 603, 601,
	604, 605, 0, 606, 607, 608, 609, 610, 756, 611,
	0, 612, 613, 620, 621, 622, 614, 615, 616, 623,
	624, 625, 626, 627, 629, 628, 0, 631, 632, 630,
	633, 634, 635, 0, 636, 757, 637, 617, 618, 638,
	639, 0, 640, 641, 642, 643, 644, 645, 646, 758,
	0, 647, 0, 648, 649, 650, 651, 652, 653, 655,
	619, 656, 661, 662, 759, 657, 658, 659, 660, 760,
	664, 665, 666, 667, 0, 668, 669, 0, 663, 654,
	0, 670, 671, 672, 673, 674, 675, 0, 676, 677,
	0, 678, 761, 762, 763, 764, 0, 690, 0, 679,
	681, 682, 683, 684, 765, 685, 766, 0, 686, 687,
	688, 689, 680, 691, 692, 0, 0, 693, 694, 696,
	698, 699, 695, 697, 700, 0, 701, 0, 0, 702,
	703, 704, 767, 768, 769, 0, 706, 705, 707, 708,
	709, 770, 710, 711, 712, 302, 0, 0, 0, 713,
	714, 771, 715, 716, 717, 0, 0, 0, 0, 0,
	0, 0, 308, 309, 311, 310, 312, 313, 314, 315,
	0, 316, 317, 0, 0, 0, 0, 0, 718, 0,
	0, 0, 318, 0, 319, 320, 321, 0, 322, 323,
	324, 325, 326, 327, 328, 719, 720, 0, 329, 721,
	330, 722, 0, 723, 331, 332, 333, 334, 335, 336,
	337, 0, 0, 0, 338, 724, 725, 726, 0, 339,
	340, 727, 0, 0, 0, 341, 342, 343, 344, 345,
	346, 347, 348, 0, 0, 350, 351, 352, 349, 353,
	0, 354, 0, 355, 356, 357, 358, 359, 360, 361,
	0, 362, 363, 364, 0, 365, 366, 367, 0, 0,
	0, 0, 0, 0, 0, 368, 369, 370, 2620, 372,
	0, 373, 375, 728, 729, 0, 378, 380, 374, 376,
	0, 379, 377, 381, 0, 382, 383, 384, 0, 0,
	385, 386, 387, 0, 388, 389, 390, 0, 391, 392,
	393, 0, 394, 395, 730, 396, 397, 398, 400, 402,
	399, 401, 403, 404, 405, 406, 407, 731, 732, 408,
	0, 305, 0, 0, 0, 0, 0, 409, 410, 411,
	733, 0, 0, 0, 412, 0, 413, 414, 415, 0,
	416, 417, 0, 0, 418, 419, 420, 734, 735, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 0, 430,
	736, 0, 737, 431, 0, 432, 433, 434, 435, 436,
	437, 438, 738, 739, 740, 531, 0, 439, 440, 441,
	0, 442, 443, 444, 445, 446, 0, 0, 0, 306,
	447, 448, 449, 0, 0, 741, 450, 532, 451, 742,
	743, 0, 744, 0, 452, 453, 455, 0, 745, 0,
	454, 456, 457, 0, 458, 0, 0, 0, 459, 460,
	461, 462, 463, 464, 0, 465, 467, 466, 0, 469,
	746, 468, 0, 470, 471, 0, 0, 472, 473, 474,
	475, 476, 477, 480, 0, 0, 478, 479, 481, 482,
	0, 483, 484, 486, 489, 485, 487, 488, 490, 503,
	504, 491, 492, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 506, 0, 505, 0, 507, 508, 509,
	510, 511, 518, 520, 521, 516, 517, 519, 522, 523,
	525, 513, 514, 515, 0, 524, 512, 0, 307, 0,
	526, 527, 528, 529, 0, 747, 530, 748, 533, 534,
	0, 0, 535, 0, 536, 0, 0, 538, 539, 540,
	0, 0, 541, 542, 749, 0, 543, 0, 750, 544,
	545, 537, 546, 547, 548, 549, 550, 551, 552, 553,
	554, 555, 0, 556, 557, 751, 558, 559, 560, 752,
	561, 562, 563, 753, 564, 754, 565, 566, 0, 567,
	568, 569, 0, 570, 571, 572, 573, 574, 575, 576,
	577, 755, 578, 579, 581, 580, 582, 0, 583, 0,
	584, 585, 586, 0, 0, 0, 0, 0, 587, 588,
	590, 0, 591, 592, 593, 594, 589, 595, 596, 597,
	598, 599, 600, 0, 602, 603, 601, 604, 605, 0,
	606, 607, 608, 609, 610, 756, 611, 0, 612, 613,
	620, 621, 622, 614, 615, 616, 623, 624, 625, 626,
	627, 629, 628, 0, 631, 632, 630, 633, 634, 635,
	0, 636, 757, 637, 617, 618, 638, 639, 0, 640,
	641, 642, 643, 644, 645, 646, 758, 0, 647, 0,
	648, 649, 650, 651, 652, 653, 655, 619, 656, 661,
	662, 759, 657, 658, 659, 660, 760, 664, 665, 666,
	667, 0, 668, 669, 0, 663, 654, 0, 670, 671,
	672, 673, 674, 675, 0, 676, 677, 0, 678, 761,
	762, 763, 764, 0, 690, 0, 679, 681, 682, 683,
	684, 765, 685, 766, 0, 686, 687, 688, 689, 680,
	691, 692, 0, 0, 693, 694, 696, 698, 699, 695,
	697, 700, 0, 701, 0, 0, 702, 703, 704, 767,
	768, 769, 0, 706, 705, 707, 708, 709, 770, 710,
	711, 712, 302, 0, 0, 0, 713, 714, 771, 715,
	716, 717, 0, 0, 0, 0, 0, 0, 0, 308,
	309, 311, 310, 312, 313, 314, 315, 0, 316, 317,
	0, 0, 0, 0, 0, 718, 0, 0, 0, 318,
	0, 319, 320, 321, 0, 322, 323, 324, 325, 326,
	327, 328, 719, 720, 0, 329, 721, 330, 722, 0,
	723, 331, 332, 333, 334, 335, 336, 337, 0, 0,
	0, 338, 724, 725, 726, 0, 339, 340, 727, 0,
	0, 0, 341, 342, 343, 344, 345, 346, 347, 348,
	0, 0, 350, 351, 352, 349, 353, 0, 354, 0,
	355, 356, 357, 358, 359, 360, 361, 0, 362, 363,
	364, 0, 365, 366, 367, 0, 0, 0, 0, 0,
	0, 0, 368, 369, 370, 371, 372, 0, 373, 375,
	728, 729, 0, 378, 380, 374, 376, 0, 379, 377,
	381, 0, 382, 383, 384, 0, 0, 385, 386, 387,
	0, 388, 389, 390, 0, 391, 392, 393, 0, 394,
	395, 730, 396, 397, 398, 400, 402, 399, 401, 403,
	404, 405, 406, 407, 731, 732, 408, 0, 305, 0,
	0, 0, 0, 0, 409, 410, 411, 733, 0, 0,
	0, 412, 0, 413, 414, 415, 0, 416, 417, 0,
	0, 418, 419, 420, 734, 735, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 0, 430, 736, 0, 737,
	431, 0, 432, 433, 434, 435, 436, 437, 438, 2534,
	739, 740, 531, 0, 439, 440, 441, 0, 442, 443,
	444, 445, 446, 0, 0, 0, 306, 447, 448, 449,
	0, 0, 741, 450, 532, 451, 742, 743, 0, 744,
	0, 452, 453, 455, 0, 745, 0, 454, 456, 457,
	0, 458, 0, 0, 0, 459, 460, 461, 462, 463,
	464, 0, 465, 467, 466, 0, 469, 746, 468, 0,
	470, 471, 0, 0, 472, 473, 474, 475, 476, 477,
	480, 0, 0, 478, 479, 481, 482, 0, 483, 484,
	486, 489, 485, 487, 488, 490, 503, 504, 491, 492,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	506, 0, 505, 0, 507, 508, 509, 510, 511, 518,
	520, 521, 516, 517, 519, 522, 523, 525, 513, 514,
	515, 0, 524, 512, 0, 307, 0, 526, 527, 528,
	529, 0, 747, 530, 748, 533, 534, 0, 0, 535,
	0, 536, 0, 0, 538, 539, 540, 0, 0, 541,
	542, 749, 0, 543, 0, 750, 544, 545, 537, 546,
	547, 548, 549, 550, 551, 552, 553, 554, 555, 0,
	556, 557, 751, 558, 559, 560, 752, 561, 562, 563,
	753, 564, 754, 565, 566, 0, 567, 568, 569, 0,
	570, 571, 572, 573, 574, 575, 576, 577, 755, 578,
	579, 581, 580, 582, 0, 583, 0, 584, 585, 586,
	0, 0, 0, 0, 0, 587, 588, 590, 0, 591,
	592, 593, 594, 589, 595, 596, 597, 598, 599, 600,
	0, 602, 603, 601, 604, 605, 0, 606, 607, 608,
	609, 610, 756, 611, 0, 612, 613, 620, 621, 622,
	614, 615, 616, 623, 624, 625, 626, 627, 629, 628,
	0, 631, 632, 630, 633, 634, 635, 0, 636, 757,
	637, 617, 618, 638, 639, 0, 640, 641, 642, 643,
	644, 645, 646, 758, 0, 647, 0, 648, 649, 650,
	651, 652, 653, 655, 619, 656, 661, 662, 759, 657,
	658, 659, 660, 760, 664, 665, 666, 667, 0, 668,
	669, 0, 663, 654, 0, 670, 671, 672, 673, 674,
	675, 0, 676, 677, 0, 678, 761, 762, 763, 764,
	0, 690, 0, 679, 681, 682, 683, 684, 765, 685,
	766, 0, 686, 687, 688, 689, 680, 691, 692, 0,
	0, 693, 694, 696, 698, 699, 695, 697, 700, 0,
	701, 0, 0, 702, 703, 704, 767, 768, 769, 0,
	706, 705, 707, 708, 709, 770, 710, 711, 712, 302,
	0, 0, 0, 713, 714, 771, 715, 716, 717, 0,
	0, 0, 0, 0, 0, 0, 308, 309, 311, 310,
	312, 313, 314, 315, 0, 316, 317, 0, 0, 0,
	0, 0, 718, 0, 0, 0, 318, 0, 319, 320,
	321, 0, 322, 323, 324, 325, 326, 327, 328, 719,
	720, 0, 329, 721, 330, 722, 0, 723, 331, 332,
	333, 334, 335, 336, 337, 0, 0, 0, 338, 724,
	725, 726, 0, 339, 340, 727, 0, 0, 0, 341,
	342, 343, 344, 345, 346, 347, 348, 0, 0, 350,
	351, 352, 349, 353, 0, 354, 0, 355, 356, 357,
	358, 359, 360, 361, 0, 362, 363, 364, 0, 365,
	366, 367, 0, 0, 0, 0, 0, 0, 0, 368,
	369, 370, 371, 372, 0, 373, 375, 728, 729, 0,
	378, 380, 374, 376, 0, 379, 377, 381, 0, 382,
	383, 384, 0, 0, 385, 386, 387, 0, 388, 389,
	390, 0, 391, 392, 393, 0, 394, 395, 730, 396,
	397, 398, 400, 402, 399, 401, 403, 404, 405, 406,
	407, 731, 732, 408, 0, 305, 0, 0, 0, 0,
	0, 409, 410, 411, 733, 0, 0, 0, 412, 0,
	413, 414, 415, 0, 416, 417, 0, 0, 418, 419,
	420, 734, 735, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 0, 430, 736, 0, 737, 431, 0, 432,
	433, 434, 435, 436, 437, 438, 2284, 739, 740, 531,
	0, 439, 440, 441, 0, 442, 443, 444, 445, 446,
	0, 0, 0, 306, 447, 448, 449, 0, 0, 741,
	450, 532, 451, 742, 743, 0, 744, 0, 452, 453,
	455, 0, 745, 0, 454, 456, 457, 0, 458, 0,
	0, 0, 459, 460, 461, 462, 463, 464, 0, 465,
	467, 466, 0, 469, 746, 468, 0, 470, 471, 0,
	0, 472, 473, 474, 475, 476, 477, 480, 0, 0,
	478, 479, 481, 482, 0, 483, 484, 486, 489, 485,
	487, 488, 490, 503, 504, 491, 492, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 506, 0, 505,
	0, 507, 508, 509, 510, 511, 518, 520, 521, 516,
	517, 519, 522, 523, 525, 513, 514, 515, 0, 524,
	512, 0, 307, 0, 526, 527, 528, 529, 0, 747,
	530, 748, 533, 534, 0, 0, 535, 0, 536, 0,
	0, 538, 539, 540, 0, 0, 541, 542, 749, 0,
	543, 0, 750, 544, 545, 537, 546, 547, 548, 549,
	550, 551, 552, 553, 554, 555, 0, 556, 557, 751,
	558, 559, 560, 752, 561, 562, 563, 753, 564, 754,
	565, 566, 0, 567, 568, 569, 0, 570, 571, 572,
	573, 574, 575, 576, 577, 755, 578, 579, 581, 580,
	582, 0, 583, 0, 584, 585, 586, 0, 0, 0,
	0, 0, 587, 588, 590, 0, 591, 592, 593, 594,
	589, 595, 596, 597, 598, 599, 600, 0, 602, 603,
	601, 604, 605, 0, 606, 607, 608, 609, 610, 756,
	611, 0, 612, 613, 620, 621, 622, 614, 615, 616,
	623, 624, 625, 626, 627, 629, 628, 0, 631, 632,
	630, 633, 634, 635, 0, 636, 757, 637, 617, 618,
	638, 639, 0, 640, 641, 642, 643, 644, 645, 646,
	758, 0, 647, 0, 648, 649, 650, 651, 652, 653,
	655, 619, 656, 661, 662, 759, 657, 658, 659, 660,
	760, 664, 665, 666, 667, 0, 668, 669, 0, 663,
	654, 0, 670, 671, 672, 673, 674, 675, 0, 676,
	677, 0, 678, 761, 762, 763, 764, 0, 690, 0,
	679, 681, 682, 683, 684, 765, 685, 766, 0, 686,
	687, 688, 689, 680, 691, 692, 0, 0, 693, 694,
	696, 698, 699, 695, 697, 700, 0, 701, 0, 0,
	702, 703, 704, 767, 768, 769, 0, 706, 705, 707,
	708, 709, 770, 710, 711, 712, 302, 0, 0, 0,
	713, 714, 771, 715, 716, 717, 0, 0, 0, 0,
	0, 0, 0, 308, 309, 311, 310, 312, 313, 314,
	315, 0, 316, 317, 0, 0, 0, 0, 0, 718,
	0, 0, 0, 318, 0, 319, 320, 321, 0, 322,
	323, 324, 325, 326, 327, 328, 719, 720, 0, 329,
	721, 330, 722, 0, 723, 331, 332, 333, 334, 335,
	336, 337, 0, 0, 0, 338, 724, 725, 726, 0,
	339, 340, 727, 0, 0, 0, 341, 342, 343, 344,
	345, 346, 347, 348, 0, 0, 350, 351, 352, 349,
	353, 0, 354, 0, 355, 356, 357, 358, 359, 360,
	361, 0, 362, 363, 364, 0, 365, 366, 367, 0,
	0, 0, 0, 0, 0, 0, 368, 369, 370, 371,
	372, 0, 373, 375, 728, 729, 0, 378, 380, 374,
	376, 0, 379, 377, 381, 0, 382, 383, 384, 0,
	0, 385, 386, 387, 0, 388, 389, 390, 0, 391,
	392, 393, 0, 394, 395, 730, 396, 397, 398, 400,
	402, 399, 401, 403, 404, 405, 406, 407, 731, 732,
	408, 0, 305, 0, 0, 0, 0, 0, 409, 410,
	411, 733, 0, 0, 0, 412, 0, 413, 414, 415,
	0, 416, 417, 0, 0, 418, 419, 420, 734, 735,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 0,
	430, 736, 0, 737, 431, 0, 432, 433, 434, 435,
	436, 437, 438, 2278, 739, 740, 531, 0, 439, 440,
	441, 0, 442, 443, 444, 445, 446, 0, 0, 0,
	306, 447, 448, 449, 0, 0, 741, 450, 532, 451,
	742, 743, 0, 744, 0, 452, 453, 455, 0, 745,
	0, 454, 456, 457, 0, 458, 0, 0, 0, 459,
	460, 461, 462, 463, 464, 0, 465, 467, 466, 0,
	469, 746, 468, 0, 470, 471, 0, 0, 472, 473,
	474, 475, 476, 477, 480, 0, 0, 478, 479, 481,
	482, 0, 483, 484, 486, 489, 485, 487, 488, 490,
	503, 504, 491, 492, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 506, 0, 505, 0, 507, 508,
	509, 510, 511, 518, 520, 521, 516, 517, 519, 522,
	523, 525, 513, 514, 515, 0, 524, 512, 0, 307,
	0, 526, 527, 528, 529, 0, 747, 530, 748, 533,
	534, 0, 0, 535, 0, 536, 0, 0, 538, 539,
	540, 0, 0, 541, 542, 749, 0, 543, 0, 750,
	544, 545, 537, 546, 547, 548, 549, 550, 551, 552,
	553, 554, 555, 0, 556, 557, 751, 558, 559, 560,
	752, 561, 562, 563, 753, 564, 754, 565, 566, 0,
	567, 568, 569, 0, 570, 571, 572, 573, 574, 575,
	576, 577, 755, 578, 579, 581, 580, 582, 0, 583,
	0, 584, 585, 586, 0, 0, 0, 0, 0, 587,
	588, 590, 0, 591, 592, 593, 594, 589, 595, 596,
	597, 598, 599, 600, 0, 602, 603, 601, 604, 605,
	0, 606, 607, 608, 609, 610, 756, 611, 0, 612,
	613, 620, 621, 622, 614, 615, 616, 623, 624, 625,
	626, 627, 629, 628, 0, 631, 632, 630, 633, 634,
	635, 0, 636, 757, 637, 617, 618, 638, 639, 0,
	640, 641, 642, 643, 644, 645, 646, 758, 0, 647,
	0, 648, 649, 650, 651, 652, 653, 655, 619, 656,
	661, 662, 759, 657, 658, 659, 660, 760, 664, 665,
	666, 667, 0, 668, 669, 0, 663, 654, 0, 670,
	671, 672, 673, 674, 675, 0, 676, 677, 0, 678,
	761, 762, 763, 764, 0, 690, 0, 679, 681, 682,
	683, 684, 765, 685, 766, 0, 686, 687, 688, 689,
	680, 691, 692, 0, 0, 693, 694, 696, 698, 699,
	695, 697, 700, 0, 701, 0, 0, 702, 703, 704,
	767, 768, 769, 0, 706, 705, 707, 708, 709, 770,
	710, 711, 712, 1019, 0, 302, 0, 713, 714, 771,
	715, 716, 717, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 308, 309, 311, 310, 312, 313, 314, 315,
	0, 316, 317, 0, 0, 0, 0, 0, 718, 0,
	0, 0, 318, 0, 319, 320, 321, 0, 322, 323,
	324, 325, 326, 327, 328, 719, 720, 0, 329, 721,
	330, 722, 0, 723, 331, 332, 333, 334, 335, 336,
	337, 0, 0, 0, 338, 724, 725, 726, 0, 339,
	340, 727, 0, 0, 0, 341, 342, 343, 344, 345,
	346, 347, 348, 0, 0, 350, 351, 352, 349, 353,
	0, 354, 0, 355, 356, 357, 358, 359, 360, 361,
	0, 362, 363, 364, 0, 365, 366, 367, 0, 0,
	0, 0, 0, 0, 0, 368, 369, 370, 371, 372,
	0, 373, 375, 728, 729, 0, 378, 380, 374, 376,
	0, 379, 377, 381, 0, 382, 383, 384, 0, 0,
	385, 386, 387, 0, 388, 389, 390, 0, 391, 392,
	393, 0, 394, 395, 730, 396, 397, 398, 400, 402,
	399, 401, 403, 404, 405, 406, 407, 731, 732, 408,
	0, 0, 0, 0, 0, 0, 0, 409, 410, 411,
	733, 0, 0, 0, 412, 0, 413, 414, 415, 0,
	416, 417, 0, 0, 418, 419, 420, 734, 735, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 0, 430,
	736, 0, 737, 431, 0, 432, 433, 434, 435, 436,
	437, 438, 738, 739, 740, 531, 0, 439, 440, 441,
	0, 442, 443, 444, 445, 446, 0, 0, 0, 0,
	447, 448, 449, 0, 0, 741, 450, 532, 451, 742,
	743, 0, 744, 1018, 452, 453, 455, 0, 745, 0,
	454, 456, 457, 0, 458, 0, 0, 0, 459, 460,
	461, 462, 463, 464, 0, 465, 467, 466, 0, 469,
	746, 468, 0, 470, 471, 0, 0, 472, 473, 474,
	475, 476, 477, 480, 0, 0, 478, 479, 481, 482,
	0, 483, 484, 486, 489, 485, 487, 488, 490, 503,
	504, 491, 492, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 506, 0, 505, 0, 507, 508, 509,
	510, 511, 518, 520, 521, 516, 517, 519, 522, 523,
	525, 513, 514, 515, 0, 524, 512, 0, 0, 0,
	526, 527, 528, 529, 0, 747, 530, 748, 533, 534,
	0, 0, 535, 0, 536, 0, 0, 538, 539, 540,
	0, 0, 541, 542, 749, 0, 543, 0, 750, 544,
	545, 537, 546, 547, 548, 549, 550, 551, 552, 553,
	554, 555, 0, 556, 557, 751, 558, 559, 560, 752,
	561, 562, 563, 753, 564, 754, 565, 566, 0, 567,
	568, 569, 0, 570, 571, 572, 573, 574, 575, 576,
	577, 755, 578, 579, 581, 580, 582, 0, 583, 0,
	584, 585, 586, 0, 0, 0, 0, 0, 587, 588,
	590, 0, 591, 592, 593, 594, 589, 595, 596, 597,
	598, 599, 600, 0, 602, 603, 601, 604, 605, 0,
	606, 607, 608, 609, 610, 756, 611, 0, 612, 613,
	620, 621, 622, 614, 615, 616, 623, 624, 625, 626,
	627, 629, 628, 0, 631, 632, 630, 633, 634, 635,
	0, 636, 757, 637, 617, 618, 638, 639, 0, 640,
	641, 642, 643, 644, 645, 646, 758, 0, 647, 0,
	648, 649, 650, 651, 652, 653, 655, 619, 656, 661,
	662, 759, 657, 658, 659, 660, 760, 664, 665, 666,
	667, 0, 668, 669, 0, 663, 654, 1017, 670, 671,
	672, 673, 674, 675, 0, 676, 677, 0, 678, 761,
	762, 763, 764, 0, 690, 0, 679, 681, 682, 683,
	684, 765, 685, 766, 0, 686, 687, 688, 689, 680,
	691, 692, 0, 0, 693, 694, 696, 698, 699, 695,
	697, 700, 0, 701, 0, 0, 702, 703, 704, 767,
	768, 769, 0, 706, 705, 707, 708, 709, 770, 710,
	711, 712, 896, 0, 302, 0, 713, 714, 771, 715,
	716, 717, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 308, 885, 311, 310, 312, 313, 314, 315, 0,
	316, 317, 0, 0, 0, 0, 0, 718, 0, 0,
	0, 318, 0, 319, 320, 321, 0, 322, 323, 324,
	325, 894, 327, 328, 719, 720, 0, 329, 721, 330,
	722, 0, 723, 331, 332, 333, 334, 335, 336, 337,
	0, 0, 0, 338, 724, 725, 726, 0, 339, 340,
	727, 0, 0, 0, 341, 342, 343, 344, 345, 346,
	347, 348, 0, 0, 350, 351, 352, 349, 353, 0,
	354, 0, 355, 356, 357, 358, 359, 360, 361, 0,
	362, 363, 364, 0, 365, 366, 367, 0, 0, 0,
	0, 0, 0, 0, 368, 369, 370, 371, 372, 0,
	373, 375, 728, 729, 0, 378, 380, 374, 376, 0,
	379, 377, 381, 0, 382, 383, 384, 0, 0, 385,
	386, 387, 0, 388, 389, 390, 0, 391, 392, 393,
	0, 394, 395, 730, 396, 397, 398, 400, 402, 399,
	401, 403, 404, 405, 406, 407, 731, 732, 408, 0,
	0, 0, 0, 0, 0, 0, 409, 410, 887, 733,
	0, 0, 0, 412, 0, 413, 414, 415, 0, 893,
	417, 889, 0, 418, 419, 420, 734, 735, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 0, 430, 736,
	0, 737, 431, 0, 432, 433, 434, 435, 436, 437,
	438, 738, 739, 740, 531, 0, 439, 440, 441, 890,
	442, 443, 444, 445, 446, 0, 0, 0, 0, 447,
	448, 449, 0, 0, 741, 450, 532, 451, 742, 743,
	0, 744, 0, 452, 453, 455, 0, 745, 0, 454,
	456, 457, 0, 458, 0, 0, 0, 459, 460, 461,
	462, 463, 888, 0, 465, 467, 466, 0, 469, 746,
	468, 0, 470, 471, 0, 0, 472, 473, 474, 475,
	476, 477, 480, 0, 0, 478, 479, 481, 482, 0,
	483, 484, 486, 489, 485, 487, 488, 490, 503, 504,
	491, 492, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 506, 0, 505, 0, 507, 508, 509, 891,
	511, 518, 520, 521, 516, 517, 519, 522, 523, 525,
	513, 514, 515, 0, 524, 512, 0, 0, 0, 526,
	527, 528, 529, 0, 747, 530, 748, 533, 534, 0,
	0, 535, 0, 536, 0, 0, 538, 539, 540, 0,
	0, 541, 542, 749, 0, 543, 0, 750, 544, 545,
	537, 546, 547, 548, 549, 550, 551, 552, 553, 554,
	555, 0, 556, 557, 751, 558, 559, 560, 752, 561,
	562, 563, 753, 564, 754, 565, 566, 0, 892, 568,
	569, 0, 570, 571, 572, 573, 574, 575, 576, 577,
	755, 578, 579, 581, 580, 582, 0, 583, 0, 584,
	585, 586, 0, 0, 0, 0, 0, 587, 886, 590,
	0, 591, 592, 593, 594, 589, 595, 596, 597, 598,
	599, 600, 0, 602, 603, 601, 604, 605, 0, 606,
	607, 608, 609, 610, 756, 611, 0, 612, 613, 620,
	621, 622, 614, 615, 616, 623, 624, 625, 626, 627,
	629, 628, 0, 631, 632, 630, 633, 634, 635, 0,
	636, 757, 637, 617, 618, 638, 639, 0, 640, 641,
	642, 643, 644, 645, 646, 758, 0, 647, 0, 648,
	649, 650, 651, 652, 653, 655, 619, 656, 661, 662,
	759, 657, 658, 659, 660, 760, 664, 665, 666, 667,
	0, 668, 669, 0, 663, 654, 0, 670, 671, 672,
	673, 674, 675, 0, 676, 677, 0, 678, 761, 762,
	763, 764, 0, 690, 0, 679, 681, 682, 683, 684,
	765, 685, 766, 0, 686, 687, 688, 689, 680, 691,
	692, 0, 0, 693, 694, 696, 698, 699, 695, 697,
	700, 0, 701, 0, 0, 702, 703, 704, 767, 768,
	769, 0, 706, 705, 707, 708, 709, 770, 710, 711,
	712, 879, 0, 302, 0, 713, 714, 771, 715, 716,
	717, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	308, 885, 311, 310, 312, 313, 314, 315, 0, 316,
	317, 0, 0, 0, 0, 0, 718, 0, 0, 0,
	318, 0, 319, 320, 321, 0, 322, 323, 324, 325,
	894, 327, 328, 719, 720, 0, 329, 721, 330, 722,
	0, 723, 331, 332, 333, 334, 335, 336, 337, 0,
	0, 0, 338, 724, 725, 726, 0, 339, 340, 727,
	0, 0, 0, 341, 342, 343, 344, 345, 346, 347,
	348, 0, 0, 350, 351, 352, 349, 353, 0, 354,
	0, 355, 356, 357, 358, 359, 360, 361, 0, 362,
	363, 364, 0, 365, 366, 367, 0, 0, 0, 0,
	0, 0, 0, 368, 369, 370, 371, 372, 0, 373,
	375, 728, 729, 0, 378, 380, 374, 376, 0, 379,
	377, 381, 0, 382, 383, 384, 0, 0, 385, 386,
	387, 0, 388, 389, 390, 0, 391, 392, 393, 0,
	394, 395, 730, 396, 397, 398, 400, 402, 399, 401,
	403, 404, 405, 406, 407, 731, 732, 408, 0, 0,
	0, 0, 0, 0, 0, 409, 410, 887, 733, 0,
	0, 0, 412, 0, 413, 414, 415, 0, 893, 417,
	889, 0, 418, 419, 420, 734, 735, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 0, 430, 736, 0,
	737, 431, 0, 432, 433, 434, 435, 436, 437, 438,
	738, 739, 740, 531, 0, 439, 440, 441, 890, 442,
	443, 444, 445, 446, 0, 0, 0, 0, 447, 448,
	449, 0, 0, 741, 450, 532, 451, 742, 743, 0,
	744, 0, 452, 453, 455, 0, 745, 0, 454, 456,
	457, 0, 458, 0, 0, 0, 459, 460, 461, 462,
	463, 888, 0, 465, 467, 466, 0, 469, 746, 468,
	0, 470, 471, 0, 0, 472, 473, 474, 475, 476,
	477, 480, 0, 0, 478, 479, 481, 482, 0, 483,
	484, 486, 489, 485, 487, 488, 490, 503, 504, 491,
	492, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 506, 0, 505, 0, 507, 508, 509, 891, 511,
	518, 520, 521, 516, 517, 519, 522, 523, 525, 513,
	514, 515, 0, 524, 512, 0, 0, 0, 526, 527,
	528, 529, 0, 747, 530, 748, 533, 534, 0, 0,
	535, 0, 536, 0, 0, 538, 539, 540, 0, 0,
	541, 542, 749, 0, 543, 0, 750, 544, 545, 537,
	546, 547, 548, 549, 550, 551, 552, 553, 554, 555,
	0, 556, 557, 751, 558, 559, 560, 752, 561, 562,
	563, 753, 564, 754, 565, 566, 0, 892, 568, 569,
	0, 570, 571, 572, 573, 574, 575, 576, 577, 755,
	578, 579, 581, 580, 582, 0, 583, 0, 584, 585,
	586, 0, 0, 0, 0, 0, 587, 886, 590, 0,
	591, 592, 593, 594, 589, 595, 596, 597, 598, 599,
	600, 0, 602, 603, 601, 604, 605, 0, 606, 607,
	608, 609, 610, 756, 611, 0, 612, 613, 620, 621,
	622, 614, 615, 616, 623, 624, 625, 626, 627, 629,
	628, 0, 631, 632, 630, 633, 634, 635, 0, 636,
	757, 637, 617, 618, 638, 639, 0, 640, 641, 642,
	643, 644, 645, 646, 758, 0, 647, 0, 648, 649,
	650, 651, 652, 653, 655, 619, 656, 661, 662, 759,
	657, 658, 659, 660, 760, 664, 665, 666, 667, 0,
	668, 669, 0, 663, 654, 0, 670, 671, 672, 673,
	674, 675, 0, 676, 677, 0, 678, 761, 762, 763,
	764, 0, 690, 0, 679, 681, 682, 683, 684, 765,
	685, 766, 0, 686, 687, 688, 689, 680, 691, 692,
	0, 0, 693, 694, 696, 698, 699, 695, 697, 700,
	0, 701, 0, 0, 702, 703, 704, 767, 768, 769,
	0, 706, 705, 707, 708, 709, 770, 710, 711, 712,
	302, 0, 0, 0, 713, 714, 771, 715, 716, 717,
	0, 0, 0, 0, 0, 0, 0, 308, 309, 311,
	310, 312, 313, 314, 315, 0, 316, 317, 0, 0,
	0, 0, 0, 718, 0, 0, 0, 318, 0, 319,
	320, 321, 0, 322, 323, 324, 325, 326, 327, 328,
	719, 720, 0, 329, 721, 330, 722, 0, 723, 331,
	332, 333, 334, 335, 336, 337, 0, 0, 0, 338,
	724, 725, 726, 0, 339, 340, 727, 0, 0, 0,
	341, 342, 343, 344, 345, 346, 347, 348, 0, 0,
	350, 351, 352, 349, 353, 0, 354, 0, 355, 356,
	357, 358, 359, 360, 361, 0, 362, 363, 364, 0,
	365, 366, 367, 0, 0, 0, 0, 0, 0, 0,
	368, 369, 370, 371, 372, 0, 373, 375, 728, 729,
	0, 378, 380, 374, 376, 0, 379, 377, 381, 0,
	382, 383, 384, 0, 0, 385, 386, 387, 0, 388,
	389, 390, 0, 391, 392, 393, 0, 394, 395, 730,
	396, 397, 398, 400, 402, 399, 401, 403, 404, 405,
	406, 407, 731, 732, 408, 0, 3976, 0, 0, 0,
	0, 0, 409, 410, 411, 733, 0, 0, 0, 412,
	0, 413, 414, 415, 0, 416, 417, 0, 0, 418,
	419, 420, 734, 735, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 0, 430, 736, 0, 737, 431, 0,
	432, 433, 434, 435, 436, 437, 438, 738, 739, 740,
	531, 0, 439, 440, 441, 0, 442, 443, 444, 445,
	446, 0, 0, 0, 0, 447, 448, 449, 0, 0,
	741, 450, 532, 451, 742, 743, 0, 744, 0, 452,
	453, 455, 0, 745, 0, 454, 456, 457, 0, 458,
	0, 0, 0, 459, 460, 461, 462, 463, 464, 0,
	465, 467, 466, 0, 469, 746, 468, 0, 470, 471,
	0, 0, 472, 473, 474, 475, 476, 477, 480, 0,
	0, 478, 479, 481, 482, 0, 483, 484, 486, 489,
	485, 487, 488, 490, 503, 504, 491, 492, 493, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 506, 0,
	505, 0, 507, 508, 509, 510, 511, 518, 520, 521,
	516, 517, 519, 522, 523, 525, 513, 514, 515, 0,
	524, 512, 0, 0, 0, 526, 527, 528, 529, 0,
	747, 530, 748, 533, 534, 0, 0, 535, 0, 536,
	0, 0, 538, 539, 540, 0, 0, 541, 542, 749,
	0, 543, 0, 750, 544, 545, 537, 546, 547, 548,
	549, 550, 551, 552, 553, 554, 555, 0, 556, 557,
	751, 558, 559, 560, 752, 561, 562, 563, 753, 564,
	754, 565, 566, 4749, 567, 568, 569, 0, 570, 571,
	572, 573, 574, 575, 576, 577, 755, 578, 579, 581,
	580, 582, 0, 583, 0, 584, 585, 586, 0, 0,
	0, 0, 0, 587, 588, 590, 0, 591, 592, 593,
	594, 589, 595, 596, 597, 598, 599, 600, 0, 602,
	603, 601, 604, 605, 0, 606, 607, 608, 609, 610,
	756, 611, 0, 612, 613, 620, 621, 622, 614, 615,
	616, 623, 624, 625, 626, 627, 629, 628, 0, 631,
	632, 630, 633, 634, 635, 0, 636, 757, 637, 617,
	618, 638, 639, 0, 640, 641, 642, 643, 644, 645,
	646, 758, 0, 647, 0, 648, 649, 650, 651, 652,
	653, 655, 619, 656, 661, 662, 759, 657, 658, 659,
	660, 760, 664, 665, 666, 667, 0, 668, 669, 0,
	663, 654, 0, 670, 671, 672, 673, 674, 675, 0,
	676, 677, 0, 678, 761, 762, 763, 764, 0, 690,
	0, 679, 681, 682, 683, 684, 765, 685, 766, 0,
	686, 687, 688, 689, 680, 691, 692, 0, 0, 693,
	694, 696, 698, 699, 695, 697, 700, 0, 701, 0,
	0, 702, 703, 704, 767, 768, 769, 0, 706, 705,
	707, 708, 709, 770, 710, 711, 712, 1490, 0, 302,
	0, 713, 714, 771, 715, 716, 717, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 308, 309, 311, 310,
	312, 313, 314, 315, 0, 316, 317, 0, 0, 0,
	0, 0, 718, 0, 0, 0, 318, 0, 319, 320,
	321, 1493, 322, 323, 324, 325, 326, 327, 328, 719,
	720, 0, 329, 721, 330, 722, 0, 723, 331, 332,
	333, 334, 335, 336, 337, 0, 0, 0, 338, 724,
	725, 1491, 0, 339, 340, 727, 0, 0, 0, 341,
	342, 343, 344, 345, 346, 347, 348, 0, 0, 350,
	351, 352, 349, 353, 0, 354, 0, 355, 356, 357,
	358, 359, 360, 361, 0, 362, 363, 364, 0, 365,
	366, 367, 0, 0, 0, 0, 0, 0, 0, 368,
	369, 370, 371, 372, 0, 373, 375, 728, 729, 0,
	378, 380, 374, 376, 0, 379, 377, 381, 0, 382,
	383, 384, 0, 0, 385, 386, 387, 0, 388, 389,
	390, 0, 391, 392, 393, 0, 394, 395, 730, 396,
	397, 398, 400, 402, 399, 401, 403, 404, 405, 406,
	407, 731, 732, 408, 0, 0, 0, 0, 0, 0,
	0, 409, 410, 411, 733, 0, 0, 0, 412, 0,
	413, 414, 415, 0, 416, 417, 0, 0, 418, 419,
	420, 734, 735, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 0, 430, 736, 0, 737, 431, 0, 432,
	433, 434, 435, 436, 437, 438, 738, 739, 740, 531,
	0, 439, 440, 441, 0, 442, 443, 444, 445, 446,
	0, 0, 0, 0, 447, 448, 449, 0, 0, 741,
	450, 532, 451, 742, 743, 0, 744, 0, 452, 453,
	455, 0, 745, 0, 454, 456, 457, 0, 458, 0,
	0, 0, 459, 460, 461, 462, 463, 464, 0, 465,
	467, 466, 0, 469, 746, 468, 0, 470, 471, 0,
	0, 472, 473, 474, 475, 476, 477, 480, 0, 0,
	478, 479, 481, 482, 0, 483, 484, 486, 489, 485,
	487, 488, 490, 503, 504, 491, 492, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 506, 0, 867,
	0, 507, 508, 509, 510, 511, 518, 520, 521, 516,
	517, 519, 522, 523, 525, 513, 514, 515, 0, 524,
	512, 0, 0, 0, 526, 527, 528, 529, 0, 747,
	530, 748, 533, 534, 0, 0, 535, 0, 536, 0,
	0, 538, 539, 540, 0, 0, 541, 542, 749, 0,
	543, 0, 750, 544, 545, 537, 546, 547, 548, 549,
	550, 551, 552, 553, 554, 555, 0, 556, 557, 751,
	558, 559, 560, 752, 561, 562, 563, 753, 564, 754,
	565, 566, 0, 567, 568, 569, 0, 570, 571, 572,
	573, 574, 575, 576, 577, 755, 578, 579, 581, 580,
	582, 0, 583, 0, 584, 585, 586, 0, 0, 0,
	0, 0, 587, 588, 590, 0, 591, 592, 593, 594,
	589, 595, 596, 597, 598, 599, 600, 0, 602, 603,
	601, 604, 605, 0, 866, 607, 608, 609, 610, 756,
	611, 0, 612, 613, 620, 621, 622, 614, 615, 616,
	865, 624, 625, 626, 627, 629, 628, 0, 631, 632,
	630, 633, 1494, 635, 0, 636, 757, 637, 617, 618,
	638, 639, 0, 640, 641, 642, 643, 644, 645, 646,
	758, 0, 647, 0, 648, 649, 650, 651, 652, 653,
	655, 619, 656, 661, 662, 759, 657, 658, 659, 660,
	760, 664, 665, 666, 667, 0, 668, 669, 0, 663,
	654, 0, 670, 671, 672, 673, 674, 675, 0, 676,
	677, 0, 678, 863, 762, 763, 764, 0, 690, 0,
	679, 681, 682, 683, 684, 765, 685, 766, 0, 686,
	687, 688, 689, 680, 691, 692, 0, 0, 693, 694,
	696, 698, 699, 695, 697, 700, 0, 701, 0, 0,
	702, 703, 704, 767, 768, 769, 0, 706, 705, 707,
	708, 709, 770, 710, 711, 712, 1490, 0, 302, 0,
	713, 714, 771, 715, 716, 717, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 308, 309, 311, 310, 312,
	313, 314, 315, 0, 316, 317, 0, 0, 0, 0,
	0, 718, 0, 0, 0, 318, 0, 319, 320, 321,
	1493, 322, 323, 324, 325, 326, 327, 328, 719, 720,
	0, 329, 721, 330, 722, 0, 723, 331, 332, 333,
	334, 335, 336, 337, 0, 0, 0, 338, 724, 725,
	1491, 0, 339, 340, 727, 0, 0, 0, 341, 342,
	343, 344, 345, 346, 347, 348, 0, 0, 350, 351,
	352, 349, 353, 0, 354, 0, 355, 356, 357, 358,
	359, 360, 361, 0, 362, 363, 364, 0, 365, 366,
	367, 0, 0, 0, 0, 0, 0, 0, 368, 369,
	370, 371, 372, 0, 373, 375, 728, 729, 0, 378,
	380, 374, 376, 0, 379, 377, 381, 0, 382, 383,
	384, 0, 0, 385, 386, 387, 0, 388, 389, 390,
	0, 391, 392, 393, 0, 394, 395, 730, 396, 397,
	398, 400, 402, 399, 401, 403, 404, 405, 406, 407,
	731, 732, 408, 0, 0, 0, 0, 0, 0, 0,
	409, 410, 411, 733, 0, 0, 0, 412, 0, 413,
	414, 415, 0, 416, 417, 0, 0, 418, 419, 420,
	734, 735, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 0, 430, 736, 0, 737, 431, 0, 432, 433,
	434, 435, 436, 437, 438, 738, 739, 740, 531, 0,
	439, 440, 441, 0, 442, 443, 444, 445, 446, 0,
	0, 0, 0, 447, 448, 449, 0, 0, 741, 450,
	532, 451, 742, 743, 0, 744, 0, 452, 453, 455,
	0, 745, 0, 454, 456, 457, 0, 458, 0, 0,
	0, 459, 460, 461, 462, 463, 464, 0, 465, 467,
	466, 0, 469, 746, 468, 0, 470, 471, 0, 0,
	472, 473, 474, 475, 476, 477, 480, 0, 0, 478,
	479, 481, 482, 0, 483, 484, 486, 489, 485, 487,
	488, 490, 503, 504, 491, 492, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 506, 0, 867, 0,
	507, 508, 509, 510, 511, 518, 520, 521, 516, 517,
	519, 522, 523, 525, 513, 514, 515, 0, 524, 512,
	0, 0, 0, 526, 527, 528, 529, 0, 747, 530,
	748, 533, 534, 0, 0, 535, 0, 536, 0, 0,
	538, 539, 540, 0, 0, 541, 542, 749, 0, 543,
	0, 750, 544, 545, 537, 546, 547, 548, 549, 550,
	551, 552, 553, 554, 555, 0, 556, 557, 751, 558,
	559, 560, 752, 561, 562, 563, 753, 564, 754, 565,
	566, 0, 567, 568, 569, 0, 570, 571, 572, 573,
	574, 575, 576, 577, 755, 578, 579, 581, 580, 582,
	0, 583, 0, 584, 585, 586, 0, 0, 0, 0,
	0, 587, 588, 590, 0, 591, 592, 593, 594, 589,
	595, 596, 597, 598, 599, 600, 0, 602, 603, 601,
	604, 605, 0, 866, 607, 608, 609, 610, 756, 611,
	0, 612, 613, 620, 621, 622, 614, 615, 616, 865,
	624, 625, 626, 627, 629, 628, 0, 631, 632, 630,
	633, 1494, 635, 0, 636, 757, 637, 617, 618, 638,
	639, 0, 640, 641, 642, 643, 644, 645, 646, 758,
	0, 647, 0, 648, 649, 650, 651, 652, 653, 655,
	619, 656, 661, 662, 759, 657, 658, 659, 660, 760,
	664, 665, 666, 667, 0, 668, 669, 0, 663, 654,
	0, 670, 671, 672, 673, 674, 675, 0, 676, 677,
	0, 678, 863, 762, 763, 764, 0, 690, 0, 679,
	1492, 682, 683, 684, 765, 685, 766, 0, 686, 687,
	688, 689, 680, 691, 692, 0, 0, 693, 694, 696,
	698, 699, 695, 697, 700, 0, 701, 0, 0, 702,
	703, 704, 767, 768, 769, 0, 706, 705, 707, 708,
	709, 770, 710, 711, 712, 874, 0, 302, 0, 713,
	714, 771, 715, 716, 717, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 308, 309, 311, 310, 312, 313,
	314, 315, 872, 316, 317, 0, 0, 0, 0, 0,
	718, 0, 0, 0, 318, 0, 319, 320, 321, 0,
	322, 323, 324, 325, 326, 327, 328, 719, 720, 0,
	329, 721, 330, 722, 0, 723, 331, 332, 333, 334,
	335, 336, 337, 0, 0, 0, 338, 724, 725, 726,
	0, 339, 340, 727, 0, 0, 0, 341, 342, 343,
	344, 345, 346, 347, 348, 0, 0, 350, 351, 352,
	349, 353, 0, 354, 0, 355, 356, 357, 358, 359,
	360, 361, 0, 362, 363, 364, 0, 365, 366, 367,
	0, 0, 0, 0, 0, 0, 0, 368, 369, 370,
	371, 372, 0, 373, 375, 728, 729, 0, 378, 380,
	374, 376, 0, 379, 377, 381, 0, 382, 383, 384,
	0, 0, 385, 386, 387, 0, 388, 389, 390, 0,
	391, 392, 393, 0, 394, 395, 730, 396, 397, 398,
	400, 402, 399, 401, 403, 404, 405, 406, 407, 731,
	732, 408, 0, 0, 0, 0, 0, 0, 0, 409,
	410, 411, 733, 0, 0, 0, 412, 0, 413, 414,
	415, 0, 416, 417, 0, 0, 418, 419, 420, 734,
	735, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	0, 430, 736, 0, 737, 431, 0, 432, 433, 434,
	435, 436, 437, 438, 738, 739, 740, 531, 0, 439,
	440, 441, 0, 442, 443, 444, 445, 446, 0, 0,
	0, 0, 447, 448, 449, 0, 0, 741, 450, 532,
	451, 742, 743, 0, 744, 0, 452, 453, 455, 0,
	745, 0, 454, 456, 457, 0, 458, 0, 0, 0,
	459, 460, 461, 462, 463, 464, 0, 465, 467, 466,
	0, 469, 746, 468, 0, 470, 471, 0, 0, 472,
	473, 474, 475, 476, 477, 480, 0, 0, 478, 479,
	481, 482, 0, 483, 484, 486, 489, 485, 487, 488,
	490, 503, 504, 491, 492, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 506, 0, 505, 0, 507,
	508, 509, 510, 511, 518, 520, 521, 516, 517, 519,
	522, 523, 525, 513, 514, 515, 0, 524, 512, 0,
	0, 0, 526, 527, 528, 529, 0, 747, 530, 748,
	533, 534, 0, 0, 535, 0, 536, 0, 0, 538,
	539, 540, 0, 0, 541, 542, 749, 0, 543, 0,
	750, 544, 545, 537, 546, 547, 548, 549, 550, 551,
	552, 553, 554, 555, 0, 556, 557, 751, 558, 559,
	560, 752, 561, 562, 563, 753, 564, 754, 565, 566,
	0, 567, 568, 569, 0, 570, 571, 572, 573, 574,
	575, 576, 577, 755, 578, 579, 581, 580, 582, 0,
	583, 0, 584, 585, 586, 0, 0, 0, 0, 0,
	587, 588, 590, 0, 591, 592, 593, 594, 589, 595,
	596, 597, 598, 599, 600, 0, 602, 603, 601, 604,
	605, 0, 606, 607, 608, 609, 610, 756, 611, 0,
	612, 613, 620, 621, 622, 614, 615, 616, 623, 624,
	625, 626, 627, 629, 628, 0, 631, 632, 630, 633,
	634, 635, 0, 636, 757, 637, 617, 618, 638, 639,
	0, 640, 641, 642, 643, 644, 645, 646, 758, 0,
	647, 0, 648, 649, 650, 651, 652, 653, 655, 619,
	656, 661, 662, 759, 657, 658, 659, 660, 760, 664,
	665, 666, 667, 0, 668, 669, 0, 663, 654, 0,
	670, 671, 672, 673, 674, 675, 0, 676, 677, 0,
	678, 761, 762, 763, 764, 0, 690, 0, 679, 681,
	682, 683, 684, 765, 685, 766, 0, 686, 687, 688,
	689, 680, 691, 692, 0, 0, 693, 694, 696, 698,
	699, 695, 697, 700, 0, 701, 0, 0, 702, 703,
	704, 767, 768, 769, 0, 706, 705, 707, 708, 709,
	770, 710, 711, 712, 782, 0, 302, 0, 713, 714,
	771, 715, 716, 717, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 308, 309, 311, 310, 312, 313, 314,
	315, 781, 316, 317, 0, 0, 0, 0, 0, 718,
	0, 0, 0, 318, 0, 319, 320, 321, 0, 322,
	323, 324, 325, 326, 327, 328, 719, 720, 0, 329,
	721, 330, 722, 0, 723, 331, 332, 333, 334, 335,
	336, 337, 0, 0, 0, 338, 724, 725, 726, 0,
	339, 340, 727, 0, 0, 0, 341, 342, 343, 344,
	345, 346, 347, 348, 0, 0, 350, 351, 352, 349,
	353, 0, 354, 0, 355, 356, 357, 358, 359, 360,
	361, 0, 362, 363, 364, 0, 365, 366, 367, 0,
	0, 0, 0, 0, 0, 0, 368, 369, 370, 371,
	372, 0, 373, 375, 728, 729, 0, 378, 380, 374,
	376, 0, 379, 377, 381, 0, 382, 383, 384, 0,
	0, 385, 386, 387, 0, 388, 389, 390, 0, 391,
	392, 393, 0, 394, 395, 730, 396, 397, 398, 400,
	402, 399, 401, 403, 404, 405, 406, 407, 731, 732,
	408, 0, 0, 0, 0, 0, 0, 0, 409, 410,
	411, 733, 0, 0, 0, 412, 0, 413, 414, 415,
	0, 416, 417, 0, 0, 418, 419, 420, 734, 735,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 0,
	430, 736, 0, 737, 431, 0, 432, 433, 434, 435,
	436, 437, 438, 738, 739, 740, 531, 0, 439, 440,
	441, 0, 442, 443, 444, 445, 446, 0, 0, 0,
	0, 447, 448, 449, 0, 0, 741, 450, 532, 451,
	742, 743, 0, 744, 0, 452, 453, 455, 0, 745,
	0, 454, 456, 457, 0, 458, 0, 0, 0, 459,
	460, 461, 462, 463, 464, 0, 465, 467, 466, 0,
	469, 746, 468, 0, 470, 471, 0, 0, 472, 473,
	474, 475, 476, 477, 480, 0, 0, 478, 479, 481,
	482, 0, 483, 484, 486, 489, 485, 487, 488, 490,
	503, 504, 491, 492, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 506, 0, 505, 0, 507, 508,
	509, 510, 511, 518, 520, 521, 516, 517, 519, 522,
	523, 525, 513, 514, 515, 0, 524, 512, 0, 0,
	0, 526, 527, 528, 529, 0, 747, 530, 748, 533,
	534, 0, 0, 535, 0, 536, 0, 0, 538, 539,
	540, 0, 0, 541, 542, 749, 0, 543, 0, 750,
	544, 545, 537, 546, 547, 548, 549, 550, 551, 552,
	553, 554, 555, 0, 556, 557, 751, 558, 559, 560,
	752, 561, 562, 563, 753, 564, 754, 780, 566, 0,
	567, 568, 569, 0, 570, 571, 572, 573, 574, 575,
	576, 577, 755, 578, 579, 581, 580, 582, 0, 583,
	0, 584, 585, 586, 0, 0, 0, 0, 0, 587,
	588, 590, 0, 591, 592, 593, 594, 589, 595, 596,
	597, 598, 599, 600, 0, 602, 603, 601, 604, 605,
	0, 606, 607, 608, 609, 610, 756, 611, 0, 612,
	613, 620, 621, 622, 614, 615, 616, 623, 624, 625,
	626, 627, 629, 628, 0, 631, 632, 630, 633, 634,
	635, 0, 636, 757, 637, 617, 618, 638, 639, 0,
	640, 641, 642, 643, 644, 645, 646, 758, 0, 647,
	0, 648, 649, 650, 651, 652, 653, 655, 619, 656,
	661, 662, 759, 657, 658, 659, 660, 760, 664, 665,
	666, 667, 0, 668, 669, 0, 663, 654, 0, 670,
	671, 672, 673, 674, 675, 0, 676, 677, 0, 678,
	761, 762, 763, 764, 0, 690, 0, 679, 681, 682,
	683, 684, 765, 685, 766, 0, 686, 687, 688, 689,
	680, 691, 692, 0, 0, 693, 694, 696, 698, 699,
	695, 697, 700, 0, 701, 0, 0, 702, 703, 704,
	767, 768, 769, 0, 706, 705, 707, 708, 709, 770,
	710, 711, 712, 302, 3284, 0, 0, 713, 714, 771,
	715, 716, 717, 0, 0, 0, 0, 0, 0, 0,
	308, 309, 311, 310, 312, 313, 314, 315, 0, 316,
	317, 0, 0, 0, 0, 0, 718, 0, 0, 0,
	318, 0, 319, 320, 321, 0, 322, 323, 324, 325,
	326, 327, 328, 719, 720, 0, 329, 721, 330, 722,
	0, 723, 331, 332, 333, 334, 335, 336, 337, 0,
	0, 0, 338, 724, 725, 726, 0, 339, 340, 727,
	0, 0, 0, 341, 342, 343, 344, 345, 346, 347,
	348, 0, 0, 350, 351, 352, 349, 353, 0, 354,
	0, 355, 356, 357, 358, 359, 360, 361, 0, 362,
	363, 364, 0, 365, 366, 367, 0, 0, 0, 0,
	0, 0, 0, 368, 369, 370, 371, 372, 0, 373,
	375, 728, 729, 0, 378, 380, 374, 376, 0, 379,
	377, 381, 0, 382, 383, 384, 0, 0, 385, 386,
	387, 0, 388, 389, 390, 0, 391, 392, 393, 0,
	394, 395, 730, 396, 397, 398, 400, 402, 399, 401,
	403, 404, 405, 406, 407, 731, 732, 408, 0, 0,
	0, 0, 0, 0, 0, 409, 410, 411, 733, 0,
	0, 0, 412, 0, 413, 414, 415, 0, 416, 417,
	0, 0, 418, 419, 420, 734, 735, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 0, 430, 736, 0,
	737, 431, 0, 432, 433, 434, 435, 436, 437, 438,
	738, 739, 740, 531, 0, 439, 440, 441, 0, 442,
	443, 444, 445, 446, 0, 0, 0, 0, 447, 448,
	449, 0, 0, 741, 450, 532, 451, 742, 743, 0,
	744, 0, 452, 453, 455, 0, 745, 0, 454, 456,
	457, 0, 458, 0, 0, 0, 459, 460, 461, 462,
	463, 464, 0, 465, 467, 466, 0, 469, 746, 468,
	0, 470, 471, 0, 0, 472, 473, 474, 475, 476,
	477, 480, 0, 0, 478, 479, 481, 482, 0, 483,
	484, 486, 489, 485, 487, 488, 490, 503, 504, 491,
	492, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 506, 0, 505, 0, 507, 508, 509, 510, 511,
	518, 520, 521, 516, 517, 519, 522, 523, 525, 513,
	514, 515, 0, 524, 512, 0, 0, 0, 526, 527,
	528, 529, 0, 747, 530, 748, 533, 534, 0, 0,
	535, 0, 536, 0, 0, 538, 539, 540, 0, 0,
	541, 542, 749, 0, 543, 0, 750, 544, 545, 537,
	546, 547, 548, 549, 550, 551, 552, 553, 554, 555,
	0, 556, 557, 751, 558, 559, 560, 752, 561, 562,
	563, 753, 564, 754, 565, 566, 0, 567, 568, 569,
	0, 570, 571, 572, 573, 574, 575, 576, 577, 755,
	578, 579, 581, 580, 582, 0, 583, 0, 584, 585,
	586, 0, 0, 0, 0, 0, 587, 588, 590, 0,
	591, 592, 593, 594, 589, 595, 596, 597, 598, 599,
	600, 0, 602, 603, 601, 604, 605, 0, 606, 607,
	608, 609, 610, 756, 611, 0, 612, 613, 620, 621,
	622, 614, 615, 616, 623, 624, 625, 626, 627, 629,
	628, 0, 631, 632, 630, 633, 634, 635, 0, 636,
	757, 637, 617, 618, 638, 639, 0, 640, 641, 642,
	643, 644, 645, 646, 758, 0, 647, 0, 648, 649,
	650, 651, 652, 653, 655, 619, 656, 661, 662, 759,
	657, 658, 659, 660, 760, 664, 665, 666, 667, 0,
	668, 669, 0, 663, 654, 0, 670, 671, 672, 673,
	674, 675, 0, 676, 677, 0, 678, 761, 762, 763,
	764, 0, 690, 0, 679, 681, 682, 683, 684, 765,
	685, 766, 0, 686, 687, 688, 689, 680, 691, 692,
	0, 0, 693, 694, 696, 698, 699, 695, 697, 700,
	0, 701, 0, 0, 702, 703, 704, 767, 768, 769,
	0, 706, 705, 707, 708, 709, 770, 710, 711, 712,
	302, 0, 0, 0, 713, 714, 771, 715, 716, 717,
	0, 0, 0, 0, 0, 0, 0, 308, 309, 311,
	310, 312, 313, 314, 315, 0, 316, 317, 0, 0,
	0, 0, 0, 718, 0, 0, 0, 318, 0, 319,
	320, 321, 0, 322, 323, 324, 325, 326, 327, 328,
	719, 720, 0, 329, 721, 330, 722, 0, 723, 331,
	332, 333, 334, 335, 336, 337, 0, 0, 0, 338,
	724, 725, 726, 0, 339, 340, 727, 0, 0, 0,
	341, 342, 343, 344, 345, 346, 347, 348, 0, 0,
	350, 351, 352, 349, 353, 0, 354, 0, 355, 356,
	357, 358, 359, 360, 361, 0, 362, 363, 364, 0,
	365, 366, 367, 0, 0, 0, 0, 0, 0, 0,
	368, 369, 370, 371, 372, 0, 373, 375, 728, 729,
	0, 378, 380, 374, 376, 0, 379, 377, 381, 0,
	382, 383, 384, 0, 0, 385, 386, 387, 0, 388,
	389, 390, 0, 391, 392, 393, 0, 394, 395, 730,
	396, 397, 398, 400, 402, 399, 401, 403, 404, 405,
	406, 407, 731, 732, 408, 0, 0, 0, 0, 0,
	0, 0, 409, 410, 411, 733, 0, 0, 0, 412,
	0, 413, 414, 415, 0, 416, 417, 0, 0, 418,
	419, 420, 734, 735, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 0, 430, 736, 0, 737, 431, 0,
	432, 433, 434, 435, 436, 437, 438, 738, 739, 740,
	531, 0, 439, 440, 441, 0, 442, 443, 444, 445,
	446, 0, 0, 0, 0, 447, 448, 449, 0, 0,
	741, 450, 532, 451, 742, 743, 0, 744, 0, 452,
	453, 455, 0, 745, 0, 454, 456, 457, 0, 458,
	0, 0, 0, 459, 460, 461, 462, 463, 464, 0,
	465, 467, 466, 0, 469, 746, 468, 0, 470, 471,
	0, 0, 472, 473, 474, 475, 476, 477, 480, 0,
	0, 478, 479, 481, 482, 0, 483, 484, 486, 489,
	485, 487, 488, 490, 503, 504, 491, 492, 493, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 506, 0,
	505, 0, 507, 508, 509, 510, 511, 518, 520, 521,
	516, 517, 519, 522, 523, 525, 513, 514, 515, 0,
	524, 512, 0, 0, 0, 526, 527, 528, 529, 0,
	747, 530, 748, 533, 534, 0, 0, 535, 0, 536,
	0, 0, 538, 539, 540, 0, 0, 541, 542, 749,
	0, 543, 0, 750, 544, 545, 537, 546, 547, 548,
	549, 550, 551, 552, 553, 554, 555, 0, 556, 557,
	751, 558, 559, 560, 752, 561, 562, 563, 753, 564,
	754, 565, 566, 5061, 567, 568, 569, 0, 570, 571,
	572, 573, 574, 575, 576, 577, 755, 578, 579, 581,
	580, 582, 0, 583, 0, 584, 585, 586, 0, 0,
	0, 0, 0, 587, 588, 590, 0, 591, 592, 593,
	594, 589, 595, 596, 597, 598, 599, 600, 0, 602,
	603, 601, 604, 605, 0, 606, 607, 608, 609, 610,
	756, 611, 0, 612, 613, 620, 621, 622, 614, 615,
	616, 623, 624, 625, 626, 627, 629, 628, 0, 631,
	632, 630, 633, 634, 635, 0, 636, 757, 637, 617,
	618, 638, 639, 0, 640, 641, 642, 643, 644, 645,
	646, 758, 0, 647, 0, 648, 649, 650, 651, 652,
	653, 655, 619, 656, 661, 662, 759, 657, 658, 659,
	660, 760, 664, 665, 666, 667, 0, 668, 669, 0,
	663, 654, 0, 670, 671, 672, 673, 674, 675, 0,
	676, 677, 0, 678, 761, 762, 763, 764, 0, 690,
	0, 679, 681, 682, 683, 684, 765, 685, 766, 0,
	686, 687, 688, 689, 680, 691, 692, 0, 0, 693,
	694, 696, 698, 699, 695, 697, 700, 0, 701, 0,
	0, 702, 703, 704, 767, 768, 769, 0, 706, 705,
	707, 708, 709, 770, 710, 711, 712, 302, 3791, 0,
	0, 713, 714, 771, 715, 716, 717, 0, 0, 0,
	0, 0, 0, 0, 308, 309, 311, 310, 312, 313,
	314, 315, 0, 316, 317, 0, 0, 0, 0, 0,
	718, 0, 0, 0, 318, 0, 319, 320, 321, 0,
	322, 323, 324, 325, 326, 327, 328, 719, 720, 0,
	329, 721, 330, 722, 0, 723, 331, 332, 333, 334,
	335, 336, 337, 0, 0, 0, 338, 724, 725, 726,
	0, 339, 340, 727, 0, 0, 0, 341, 342, 343,
	344, 345, 346, 347, 348, 0, 0, 350, 351, 352,
	349, 353, 0, 354, 0, 355, 356, 357, 358, 359,
	360, 361, 0, 362, 363, 364, 0, 365, 366, 367,
	0, 0, 0, 0, 0, 0, 0, 368, 369, 370,
	371, 372, 0, 373, 375, 728, 729, 0, 378, 380,
	374, 376, 0, 379, 377, 381, 0, 382, 383, 384,
	0, 0, 385, 386, 387, 0, 388, 389, 390, 0,
	391, 392, 393, 0, 394, 395, 730, 396, 397, 398,
	400, 402, 399, 401, 403, 404, 405, 406, 407, 731,
	732, 408, 0, 0, 0, 0, 0, 0, 0, 409,
	410, 411, 733, 0, 0, 0, 412, 0, 413, 414,
	415, 0, 416, 417, 0, 0, 418, 419, 420, 734,
	735, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	0, 430, 736, 0, 737, 431, 0, 432, 433, 434,
	435, 436, 437, 438, 738, 739, 740, 531, 0, 439,
	440, 441, 0, 442, 443, 444, 445, 446, 0, 0,
	0, 0, 447, 448, 449, 0, 0, 741, 450, 532,
	451, 742, 743, 0, 744, 0, 452, 453, 455, 0,
	745, 0, 454, 456, 457, 0, 458, 0, 0, 0,
	459, 460, 461, 462, 463, 464, 0, 465, 467, 466,
	0, 469, 746, 468, 0, 470, 471, 0, 0, 472,
	473, 474, 475, 476, 477, 480, 0, 0, 478, 479,
	481, 482, 0, 483, 484, 486, 489, 485, 487, 488,
	490, 503, 504, 491, 492, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 506, 0, 505, 0, 507,
	508, 509, 510, 511, 518, 520, 521, 516, 517, 519,
	522, 523, 525, 513, 514, 515, 0, 524, 512, 0,
	0, 0, 526, 527, 528, 529, 0, 747, 530, 748,
	533, 534, 0, 0, 535, 0, 536, 0, 0, 538,
	539, 540, 0, 0, 541, 542, 749, 0, 543, 0,
	750, 544, 545, 537, 546, 547, 548, 549, 550, 551,
	552, 553, 554, 555, 0, 556, 557, 751, 558, 559,
	560, 752, 561, 562, 563, 753, 564, 754, 565, 566,
	0, 567, 568, 569, 0, 570, 571, 572, 573, 574,
	575, 576, 577, 755, 578, 579, 581, 580, 582, 0,
	583, 0, 584, 585, 586, 0, 0, 0, 0, 0,
	587, 588, 590, 0, 591, 592, 593, 594, 589, 595,
	596, 597, 598, 599, 600, 0, 602, 603, 601, 604,
	605, 0, 606, 607, 608, 609, 610, 756, 611, 0,
	612, 613, 620, 621, 622, 614, 615, 616, 623, 624,
	625, 626, 627, 629, 628, 0, 631, 632, 630, 633,
	634, 635, 0, 636, 757, 637, 617, 618, 638, 639,
	0, 640, 641, 642, 643, 644, 645, 646, 758, 0,
	647, 0, 648, 649, 650, 651, 652, 653, 655, 619,
	656, 661, 662, 759, 657, 658, 659, 660, 760, 664,
	665, 666, 667, 0, 668, 669, 0, 663, 654, 0,
	670, 671, 672, 673, 674, 675, 0, 676, 677, 0,
	678, 761, 762, 763, 764, 0, 690, 0, 679, 681,
	682, 683, 684, 765, 685, 766, 0, 686, 687, 688,
	689, 680, 691, 692, 0, 0, 693, 694, 696, 698,
	699, 695, 697, 700, 0, 701, 0, 0, 702, 703,
	704, 767, 768, 769, 0, 706, 705, 707, 708, 709,
	770, 710, 711, 712, 302, 0, 0, 0, 713, 714,
	771, 715, 716, 717, 0, 0, 0, 0, 0, 0,
	0, 308, 309, 311, 310, 312, 313, 314, 315, 0,
	316, 317, 0, 0, 0, 0, 0, 718, 0, 0,
	0, 318, 0, 319, 320, 321, 0, 322, 323, 324,
	325, 326, 327, 328, 719, 720, 0, 329, 721, 330,
	722, 0, 723, 331, 332, 333, 334, 335, 336, 337,
	0, 0, 0, 338, 724, 725, 726, 0, 339, 340,
	727, 0, 0, 0, 341, 342, 343, 344, 345, 346,
	347, 348, 0, 0, 350, 351, 352, 349, 353, 0,
	354, 0, 355, 356, 357, 358, 359, 360, 361, 0,
	362, 363, 364, 0, 365, 366, 367, 0, 0, 0,
	0, 0, 0, 0, 368, 369, 370, 371, 372, 0,
	373, 375, 728, 729, 0, 378, 380, 374, 376, 0,
	379, 377, 381, 0, 382, 383, 384, 0, 0, 385,
	386, 387, 0, 388, 389, 390, 0, 391, 392, 393,
	0, 394, 395, 730, 396, 397, 398, 400, 402, 399,
	401, 403, 404, 405, 406, 407, 731, 732, 408, 0,
	0, 0, 0, 0, 0, 0, 409, 410, 411, 733,
	0, 0, 0, 412, 0, 413, 414, 415, 0, 416,
	417, 0, 0, 418, 419, 420, 734, 735, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 0, 430, 736,
	0, 737, 431, 0, 432, 433, 434, 435, 436, 437,
	438, 738, 739, 740, 531, 0, 439, 440, 441, 0,
	442, 443, 444, 445, 446, 0, 0, 0, 0, 447,
	448, 449, 0, 0, 741, 450, 532, 451, 742, 743,
	0, 744, 0, 452, 453, 455, 0, 745, 0, 454,
	456, 457, 0, 458, 0, 0, 0, 459, 460, 461,
	462, 463, 464, 0, 465, 467, 466, 0, 469, 746,
	468, 0, 470, 471, 0, 0, 472, 473, 474, 475,
	476, 477, 480, 0, 0, 478, 479, 481, 482, 0,
	483, 484, 486, 489, 485, 487, 488, 490, 503, 504,
	491, 492, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 506, 0, 505, 0, 507, 508, 509, 510,
	511, 518, 520, 521, 516, 517, 519, 522, 523, 525,
	513, 514, 515, 0, 524, 512, 0, 0, 0, 526,
	527, 528, 529, 0, 747, 530, 748, 533, 534, 0,
	0, 535, 0, 536, 0, 0, 538, 539, 540, 0,
	0, 541, 542, 749, 0, 543, 0, 750, 544, 545,
	537, 546, 547, 548, 549, 550, 551, 552, 553, 554,
	555, 0, 556, 557, 751, 558, 559, 560, 752, 561,
	562, 563, 753, 564, 754, 565, 566, 4628, 567, 568,
	569, 0, 570, 571, 572, 573, 574, 575, 576, 577,
	755, 578, 579, 581, 580, 582, 0, 583, 0, 584,
	585, 586, 0, 0, 0, 0, 0, 587, 588, 590,
	0, 591, 592, 593, 594, 589, 595, 596, 597, 598,
	599, 600, 0, 602, 603, 601, 604, 605, 0, 606,
	607, 608, 609, 610, 756, 611, 0, 612, 613, 620,
	621, 622, 614, 615, 616, 623, 624, 625, 626, 627,
	629, 628, 0, 631, 632, 630, 633, 634, 635, 0,
	636, 757, 637, 617, 618, 638, 639, 0, 640, 641,
	642, 643, 644, 645, 646, 758, 0, 647, 0, 648,
	649, 650, 651, 652, 653, 655, 619, 656, 661, 662,
	759, 657, 658, 659, 660, 760, 664, 665, 666, 667,
	0, 668, 669, 0, 663, 654, 0, 670, 671, 672,
	673, 674, 675, 0, 676, 677, 0, 678, 761, 762,
	763, 764, 0, 690, 0, 679, 681, 682, 683, 684,
	765, 685, 766, 0, 686, 687, 688, 689, 680, 691,
	692, 0, 0, 693, 694, 696, 698, 699, 695, 697,
	700, 0, 701, 0, 0, 702, 703, 704, 767, 768,
	769, 0, 706, 705, 707, 708, 709, 770, 710, 711,
	712, 302, 0, 0, 0, 713, 714, 771, 715, 716,
	717, 0, 0, 0, 0, 0, 0, 0, 308, 309,
	311, 310, 312, 313, 314, 315, 0, 316, 317, 0,
	0, 0, 0, 0, 718, 0, 0, 0, 318, 0,
	319, 320, 321, 0, 322, 323, 324, 325, 326, 327,
	328, 719, 720, 0, 329, 721, 330, 722, 0, 723,
	331, 332, 333, 334, 335, 336, 337, 0, 0, 0,
	338, 724, 725, 726, 0, 339, 340, 727, 0, 0,
	0, 341, 342, 343, 344, 345, 346, 347, 348, 0,
	0, 350, 351, 352, 349, 353, 0, 354, 0, 355,
	356, 357, 358, 359, 360, 361, 0, 362, 363, 364,
	0, 365, 366, 367, 0, 0, 0, 0, 0, 0,
	0, 368, 369, 370, 371, 372, 0, 373, 375, 728,
	729, 4336, 378, 380, 374, 376, 0, 379, 377, 381,
	0, 382, 383, 384, 0, 0, 385, 386, 387, 0,
	388, 389, 390, 0, 391, 392, 393, 0, 394, 395,
	730, 396, 397, 398, 400, 402, 399, 401, 403, 404,
	405, 406, 407, 731, 732, 408, 0, 0, 0, 0,
	0, 0, 0, 409, 410, 411, 733, 0, 0, 0,
	412, 0, 413, 414, 415, 0, 416, 417, 0, 0,
	418, 419, 420, 734, 735, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 0, 430, 736, 0, 737, 431,
	0, 432, 433, 434, 435, 436, 437, 438, 738, 739,
	740, 531, 0, 439, 440, 441, 0, 442, 443, 444,
	445, 446, 0, 0, 0, 0, 447, 448, 449, 0,
	0, 741, 450, 532, 451, 742, 743, 0, 744, 0,
	452, 453, 455, 0, 745, 0, 454, 456, 457, 0,
	458, 0, 0, 0, 459, 460, 461, 462, 463, 464,
	0, 465, 467, 466, 0, 469, 746, 468, 0, 470,
	471, 0, 0, 472, 473, 474, 475, 476, 477, 480,
	0, 0, 478, 479, 481, 482, 0, 483, 484, 486,
	489, 485, 487, 488, 490, 503, 504, 491, 492, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 506,
	0, 505, 0, 507, 508, 509, 510, 511, 518, 520,
	521, 516, 517, 519, 522, 523, 525, 513, 514, 515,
	0, 524, 512, 0, 0, 0, 526, 527, 528, 529,
	0, 747, 530, 748, 533, 534, 0, 0, 535, 0,
	536, 0, 0, 538, 539, 540, 0, 0, 541, 542,
	749, 0, 543, 0, 750, 544, 545, 537, 546, 547,
	548, 549, 550, 551, 552, 553, 554, 555, 0, 556,
	557, 751, 558, 559, 560, 752, 561, 562, 563, 753,
	564, 754, 565, 566, 0, 567, 568, 569, 0, 570,
	571, 572, 573, 574, 575, 576, 577, 755, 578, 579,
	581, 580, 582, 0, 583, 0, 584, 585, 586, 0,
	0, 0, 0, 0, 587, 588, 590, 0, 591, 592,
	593, 594, 589, 595, 596, 597, 598, 599, 600, 0,
	602, 603, 601, 604, 605, 0, 606, 607, 608, 609,
	610, 756, 611, 0, 612, 613, 620, 621, 622, 614,
	615, 616, 623, 624, 625, 626, 627, 629, 628, 0,
	631, 632, 630, 633, 634, 635, 0, 636, 757, 637,
	617, 618, 638, 639, 0, 640, 641, 642, 643, 644,
	645, 646, 758, 0, 647, 0, 648, 649, 650, 651,
	652, 653, 655, 619, 656, 661, 662, 759, 657, 658,
	659, 660, 760, 664, 665, 666, 667, 0, 668, 669,
	0, 663, 654, 0, 670, 671, 672, 673, 674, 675,
	0, 676, 677, 0, 678, 761, 762, 763, 764, 0,
	690, 0, 679, 681, 682, 683, 684, 765, 685, 766,
	0, 686, 687, 688, 689, 680, 691, 692, 0, 0,
	693, 694, 696, 698, 699, 695, 697, 700, 0, 701,
	0, 0, 702, 703, 704, 767, 768, 769, 0, 706,
	705, 707, 708, 709, 770, 710, 711, 712, 302, 0,
	0, 0, 713, 714, 771, 715, 716, 717, 0, 0,
	0, 0, 0, 0, 0, 308, 309, 311, 310, 312,
	313, 314, 315, 0, 316, 317, 0, 0, 0, 0,
	0, 718, 0, 3048, 0, 318, 0, 319, 320, 321,
	0, 322, 323, 324, 325, 326, 327, 328, 719, 720,
	0, 329, 721, 330, 722, 0, 723, 331, 332, 333,
	334, 335, 336, 337, 0, 0, 0, 338, 724, 725,
	726, 0, 339, 340, 727, 0, 0, 0, 341, 342,
	343, 344, 345, 346, 347, 348, 0, 0, 350, 351,
	352, 349, 353, 0, 354, 0, 355, 356, 357, 358,
	359, 360, 361, 0, 362, 363, 364, 0, 365, 366,
	367, 0, 0, 0, 0, 0, 0, 0, 368, 369,
	370, 371, 372, 0, 373, 375, 728, 729, 0, 378,
	380, 374, 376, 0, 379, 377, 381, 0, 382, 383,
	384, 0, 0, 385, 386, 387, 0, 388, 389, 390,
	0, 391, 392, 393, 0, 394, 395, 730, 396, 397,
	398, 400, 402, 399, 401, 403, 404, 405, 406, 407,
	731, 732, 408, 0, 0, 0, 0, 0, 0, 0,
	409, 410, 411, 733, 0, 0, 0, 412, 0, 413,
	414, 415, 0, 416, 417, 0, 0, 418, 419, 420,
	734, 735, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 0, 430, 736, 0, 737, 431, 0, 432, 433,
	434, 435, 436, 437, 438, 738, 739, 740, 531, 0,
	439, 440, 441, 0, 442, 443, 444, 445, 446, 0,
	0, 0, 0, 447, 448, 449, 0, 0, 741, 450,
	532, 451, 742, 743, 0, 744, 0, 452, 453, 455,
	0, 745, 0, 454, 456, 457, 0, 458, 0, 0,
	0, 459, 460, 461, 462, 463, 464, 0, 465, 467,
	466, 0, 469, 746, 468, 0, 470, 471, 0, 0,
	472, 473, 474, 475, 476, 477, 480, 0, 0, 478,
	479, 481, 482, 0, 483, 484, 486, 489, 485, 487,
	488, 490, 503, 504, 491, 492, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 506, 0, 505, 0,
	507, 508, 509, 510, 511, 518, 520, 521, 516, 517,
	519, 522, 523, 525, 513, 514, 515, 0, 524, 512,
	0, 0, 0, 526, 527, 528, 529, 0, 747, 530,
	748, 533, 534, 0, 0, 535, 0, 536, 0, 0,
	538, 539, 540, 0, 0, 541, 542, 749, 0, 543,
	0, 750, 544, 545, 537, 546, 547, 548, 549, 550,
	551, 552, 553, 554, 555, 0, 556, 557, 751, 558,
	559, 560, 752, 561, 562, 563, 753, 564, 754, 565,
	566, 0, 567, 568, 569, 0, 570, 571, 572, 573,
	574, 575, 576, 577, 755, 578, 579, 581, 580, 582,
	0, 583, 0, 584, 585, 586, 0, 0, 0, 0,
	0, 587, 588, 590, 0, 591, 592, 593, 594, 589,
	595, 596, 597, 598, 599, 600, 0, 602, 603, 601,
	604, 605, 0, 606, 607, 608, 609, 610, 756, 611,
	0, 612, 613, 620, 621, 622, 614, 615, 616, 623,
	624, 625, 626, 627, 629, 628, 0, 631, 632, 630,
	633, 634, 635, 0, 636, 757, 637, 617, 618, 638,
	639, 0, 640, 641, 642, 643, 644, 645, 646, 758,
	0, 647, 0, 648, 649, 650, 651, 652, 653, 655,
	619, 656, 661, 662, 759, 657, 658, 659, 660, 760,
	664, 665, 666, 667, 0, 668, 669, 0, 663, 654,
	0, 670, 671, 672, 673, 674, 675, 0, 676, 677,
	0, 678, 761, 762, 763, 764, 0, 690, 0, 679,
	681, 682, 683, 684, 765, 685, 766, 0, 686, 687,
	688, 689, 680, 691, 692, 0, 0, 693, 694, 696,
	698, 699, 695, 697, 700, 0, 701, 0, 0, 702,
	703, 704, 767, 768, 769, 0, 706, 705, 707, 708,
	709, 770, 710, 711, 712, 302, 3284, 0, 0, 713,
	714, 771, 715, 716, 717, 0, 0, 0, 0, 0,
	0, 0, 308, 309, 311, 310, 312, 313, 314, 315,
	0, 316, 317, 0, 0, 0, 0, 0, 718, 0,
	0, 0, 318, 0, 319, 320, 321, 0, 322, 323,
	324, 325, 326, 327, 328, 719, 720, 0, 329, 721,
	330, 722, 0, 723, 331, 332, 333, 334, 335, 336,
	337, 0, 0, 0, 338, 724, 725, 726, 0, 339,
	340, 727, 0, 0, 0, 341, 342, 343, 344, 345,
	346, 347, 348, 0, 0, 350, 351, 352, 349, 353,
	0, 354, 0, 355, 356, 357, 358, 359, 360, 361,
	0, 362, 363, 364, 0, 365, 366, 367, 0, 0,
	0, 0, 0, 0, 0, 368, 369, 370, 371, 372,
	0, 373, 375, 728, 729, 0, 378, 380, 374, 376,
	0, 379, 377, 381, 0, 382, 383, 384, 0, 0,
	385, 386, 387, 0, 388, 389, 390, 0, 391, 392,
	393, 0, 394, 395, 730, 396, 397, 398, 400, 402,
	399, 401, 403, 404, 405, 406, 407, 731, 732, 408,
	0, 0, 0, 0, 0, 0, 0, 409, 410, 411,
	733, 0, 0, 0, 412, 0, 413, 414, 415, 0,
	416, 417, 0, 0, 418, 419, 420, 734, 735, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 0, 430,
	736, 0, 737, 431, 0, 432, 433, 434, 435, 436,
	437, 438, 738, 739, 740, 531, 0, 439, 440, 441,
	0, 442, 443, 444, 445, 446, 0, 0, 0, 0,
	447, 448, 449, 0, 0, 741, 450, 532, 451, 742,
	743, 0, 744, 0, 452, 453, 455, 0, 745, 0,
	454, 456, 457, 0, 458, 0, 0, 0, 459, 460,
	461, 462, 463, 464, 0, 465, 467, 466, 0, 469,
	746, 468, 0, 470, 471, 0, 0, 472, 473, 474,
	475, 476, 477, 480, 0, 0, 478, 479, 481, 482,
	0, 483, 484, 486, 489, 485, 487, 488, 490, 503,
	504, 491, 492, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 506, 0, 505, 0, 507, 508, 509,
	510, 511, 518, 520, 521, 516, 517, 519, 522, 523,
	525, 513, 514, 515, 0, 524, 512, 0, 0, 0,
	526, 527, 528, 529, 0, 747, 530, 748, 533, 534,
	0, 0, 535, 0, 536, 0, 0, 538, 539, 3368,
	0, 0, 541, 542, 749, 0, 543, 0, 750, 544,
	545, 537, 546, 547, 548, 549, 550, 551, 552, 553,
	554, 555, 0, 556, 557, 751, 558, 559, 560, 752,
	561, 562, 563, 753, 564, 754, 565, 566, 0, 567,
	568, 569, 0, 570, 571, 572, 573, 574, 575, 576,
	577, 755, 578, 579, 581, 580, 582, 0, 583, 0,
	584, 585, 586, 0, 0, 0, 0, 0, 587, 588,
	590, 0, 591, 592, 593, 594, 589, 595, 596, 597,
	598, 599, 600, 0, 602, 603, 601, 604, 605, 0,
	606, 607, 608, 609, 610, 756, 611, 0, 612, 613,
	620, 621, 622, 614, 615, 616, 623, 624, 625, 626,
	627, 629, 628, 0, 631, 632, 630, 633, 634, 635,
	0, 636, 757, 637, 617, 618, 638, 639, 0, 640,
	641, 642, 643, 644, 645, 646, 758, 0, 647, 0,
	648, 649, 650, 651, 652, 653, 655, 619, 656, 661,
	662, 759, 657, 658, 659, 660, 760, 664, 665, 666,
	667, 0, 668, 669, 0, 663, 654, 0, 670, 671,
	672, 673, 674, 675, 0, 676, 677, 0, 678, 761,
	762, 763, 764, 0, 690, 0, 679, 681, 682, 683,
	684, 765, 685, 766, 0, 686, 687, 688, 689, 680,
	691, 692, 0, 0, 693, 694, 696, 698, 699, 695,
	697, 700, 0, 701, 0, 0, 702, 703, 704, 767,
	768, 769, 0, 706, 705, 707, 708, 709, 770, 710,
	711, 712, 302, 0, 0, 0, 713, 714, 771, 715,
	716, 717, 0, 0, 0, 0, 0, 0, 0, 308,
	309, 311, 310, 312, 313, 314, 315, 0, 316, 317,
	0, 0, 0, 0, 0, 718, 0, 0, 0, 318,
	0, 319, 320, 321, 0, 322, 323, 324, 325, 326,
	327, 328, 719, 720, 0, 329, 721, 330, 722, 0,
	723, 331, 332, 333, 334, 335, 336, 337, 0, 0,
	0, 338, 724, 725, 726, 0, 339, 340, 727, 0,
	0, 0, 341, 342, 343, 344, 345, 346, 347, 348,
	0, 0, 350, 351, 352, 349, 353, 0, 354, 0,
	355, 356, 357, 358, 359, 360, 361, 0, 362, 363,
	364, 0, 365, 366, 367, 0, 0, 0, 0, 0,
	0, 0, 368, 369, 370, 371, 372, 0, 373, 375,
	728, 729, 0, 378, 380, 374, 376, 0, 379, 377,
	381, 0, 382, 383, 384, 0, 0, 385, 386, 387,
	0, 388, 389, 390, 0, 391, 392, 393, 0, 394,
	395, 730, 396, 397, 398, 400, 402, 399, 401, 403,
	404, 405, 406, 407, 731, 732, 408, 0, 0, 0,
	0, 0, 0, 0, 409, 410, 411, 733, 0, 0,
	0, 412, 0, 413, 414, 415, 0, 416, 417, 0,
	0, 418, 419, 420, 734, 735, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 0, 430, 736, 0, 737,
	431, 0, 432, 433, 434, 435, 436, 437, 438, 738,
	739, 740, 531, 0, 439, 440, 441, 0, 442, 443,
	444, 445, 446, 0, 0, 0, 0, 447, 448, 449,
	0, 0, 741, 450, 532, 451, 742, 743, 0, 744,
	0, 452, 453, 455, 0, 745, 0, 454, 456, 457,
	0, 458, 0, 0, 0, 459, 460, 461, 462, 463,
	464, 0, 465, 467, 466, 0, 469, 746, 468, 0,
	470, 471, 0, 0, 472, 473, 474, 475, 476, 477,
	480, 0, 0, 478, 479, 481, 482, 0, 483, 484,
	486, 489, 485, 487, 488, 490, 503, 504, 491, 492,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	506, 0, 505, 0, 507, 508, 509, 510, 511, 518,
	520, 521, 516, 517, 519, 522, 523, 525, 513, 514,
	515, 0, 524, 512, 0, 0, 0, 526, 527, 528,
	529, 0, 747, 530, 748, 533, 534, 0, 0, 535,
	0, 536, 0, 0, 538, 539, 540, 0, 0, 541,
	542, 749, 0, 543, 0, 750, 544, 545, 537, 546,
	547, 548, 549, 550, 551, 552, 553, 554, 555, 0,
	556, 557, 751, 558, 559, 560, 752, 561, 562, 563,
	753, 564, 754, 565, 566, 2417, 567, 568, 569, 0,
	570, 571, 572, 573, 574, 575, 576, 577, 755, 578,
	579, 581, 580, 582, 0, 583, 0, 584, 585, 586,
	0, 0, 0, 0, 0, 587, 588, 590, 0, 591,
	592, 593, 594, 589, 595, 596, 597, 598, 599, 600,
	0, 602, 603, 601, 604, 605, 0, 866, 607, 608,
	609, 610, 756, 611, 0, 612, 613, 620, 621, 622,
	614, 615, 616, 865, 624, 625, 626, 627, 3242, 628,
	0, 631, 632, 630, 633, 634, 635, 0, 636, 757,
	637, 617, 618, 638, 639, 0, 640, 641, 642, 643,
	644, 645, 646, 758, 0, 647, 0, 648, 649, 650,
	651, 652, 653, 655, 619, 656, 661, 662, 759, 657,
	658, 659, 660, 760, 664, 665, 666, 667, 0, 668,
	669, 0, 663, 654, 0, 670, 671, 672, 673, 674,
	675, 0, 676, 677, 0, 678, 863, 762, 763, 764,
	0, 690, 0, 679, 681, 682, 683, 684, 765, 685,
	766, 0, 686, 687, 688, 689, 680, 691, 692, 0,
	0, 693, 694, 696, 698, 699, 695, 697, 700, 0,
	701, 0, 0, 702, 703, 704, 767, 768, 769, 0,
	706, 705, 707, 708, 709, 770, 710, 711, 712, 302,
	0, 0, 0, 713, 714, 771, 715, 716, 717, 0,
	0, 0, 0, 0, 0, 0, 308, 309, 311, 310,
	312, 313, 314, 315, 2594, 316, 317, 0, 0, 0,
	0, 0, 718, 0, 0, 0, 318, 0, 319, 320,
	321, 0, 322, 323, 324, 325, 326, 327, 328, 719,
	720, 0, 329, 721, 330, 722, 0, 723, 331, 332,
	333, 334, 335, 336, 337, 0, 0, 0, 338, 724,
	725, 726, 0, 339, 340, 727, 0, 0, 0, 341,
	342, 343, 344, 345, 346, 347, 348, 0, 0, 350,
	351, 352, 349, 353, 0, 354, 0, 355, 356, 357,
	358, 359, 360, 361, 0, 362, 363, 364, 0, 365,
	366, 367, 0, 0, 0, 0, 0, 0, 0, 368,
	369, 370, 371, 372, 0, 373, 375, 728, 729, 0,
	378, 380, 374, 376, 0, 379, 377, 381, 0, 382,
	383, 384, 0, 0, 385, 386, 387, 0, 388, 389,
	390, 0, 391, 392, 393, 0, 394, 395, 730, 396,
	397, 398, 400, 402, 399, 401, 403, 404, 405, 406,
	407, 731, 732, 408, 0, 0, 0, 0, 0, 0,
	0, 409, 410, 411, 733, 0, 0, 0, 412, 0,
	413, 414, 415, 0, 416, 417, 0, 0, 418, 419,
	420, 734, 735, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 0, 430, 736, 0, 737, 431, 0, 432,
	433, 434, 435, 436, 437, 438, 738, 739, 740, 531,
	0, 439, 440, 441, 0, 442, 443, 444, 445, 446,
	0, 0, 0, 0, 447, 448, 449, 0, 0, 741,
	450, 532, 451, 742, 743, 0, 744, 0, 452, 453,
	455, 0, 745, 0, 454, 456, 457, 0, 458, 0,
	0, 0, 459, 460, 461, 462, 463, 464, 0, 465,
	467, 466, 0, 469, 746, 468, 0, 470, 471, 0,
	0, 472, 473, 474, 475, 476, 477, 480, 0, 0,
	478, 479, 481, 482, 0, 483, 484, 486, 489, 485,
	487, 488, 490, 503, 504, 491, 492, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 506, 0, 505,
	0, 507, 508, 509, 510, 511, 518, 520, 521, 516,
	517, 519, 522, 523, 525, 513, 514, 515, 0, 524,
	512, 0, 0, 0, 526, 527, 528, 529, 0, 747,
	530, 748, 533, 534, 0, 0, 535, 0, 536, 0,
	0, 538, 539, 540, 0, 0, 541, 542, 749, 0,
	543, 0, 750, 544, 545, 537, 546, 547, 548, 549,
	550, 551, 552, 553, 554, 555, 0, 556, 557, 751,
	558, 559, 560, 752, 561, 562, 563, 753, 564, 754,
	565, 566, 0, 567, 568, 569, 0, 570, 571, 572,
	573, 574, 575, 576, 577, 755, 578, 579, 581, 580,
	582, 0, 583, 0, 584, 585, 586, 0, 0, 0,
	0, 0, 587, 588, 590, 0, 591, 592, 593, 594,
	589, 595, 596, 597, 598, 599, 600, 0, 602, 603,
	601, 604, 605, 0, 606, 607, 608, 609, 610, 756,
	611, 0, 612, 613, 620, 621, 622, 614, 615, 616,
	623, 624, 625, 626, 627, 629, 628, 0, 631, 632,
	630, 633, 634, 635, 0, 636, 757, 637, 617, 618,
	638, 639, 0, 640, 641, 642, 643, 644, 645, 646,
	758, 0, 647, 0, 648, 649, 650, 651, 652, 653,
	655, 619, 656, 661, 662, 759, 657, 658, 659, 660,
	760, 664, 665, 666, 667, 0, 668, 669, 0, 663,
	654, 0, 670, 671, 672, 673, 674, 675, 0, 676,
	677, 0, 678, 761, 762, 763, 764, 0, 690, 0,
	679, 681, 682, 683, 684, 765, 685, 766, 0, 686,
	687, 688, 689, 680, 691, 692, 0, 0, 693, 694,
	696, 698, 699, 695, 697, 700, 0, 701, 0, 0,
	702, 703, 704, 767, 768, 769, 0, 706, 705, 707,
	708, 709, 770, 710, 711, 712, 2581, 0, 302, 0,
	713, 714, 771, 715, 716, 717, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 308, 309, 311, 310, 312,
	313, 314, 315, 0, 316, 317, 0, 0, 0, 0,
	0, 718, 0, 0, 0, 318, 0, 319, 320, 321,
	0, 322, 323, 324, 325, 326, 327, 328, 719, 720,
	0, 329, 721, 330, 722, 0, 723, 331, 332, 333,
	334, 335, 336, 337, 0, 0, 0, 338, 724, 725,
	726, 0, 339, 340, 727, 0, 0, 0, 341, 342,
	343, 344, 345, 346, 347, 348, 0, 0, 350, 351,
	352, 349, 353, 0, 354, 0, 355, 356, 357, 358,
	359, 360, 361, 0, 362, 363, 364, 0, 365, 366,
	367, 0, 0, 0, 0, 0, 0, 0, 368, 369,
	370, 371, 372, 0, 373, 375, 728, 729, 0, 378,
	380, 374, 376, 0, 379, 377, 381, 0, 382, 383,
	384, 0, 0, 385, 386, 387, 0, 388, 389, 390,
	0, 391, 392, 393, 0, 394, 395, 730, 396, 397,
	398, 400, 402, 399, 401, 403, 404, 405, 406, 407,
	731, 732, 408, 0, 0, 0, 0, 0, 0, 0,
	409, 410, 411, 733, 0, 0, 0, 412, 0, 413,
	414, 415, 0, 416, 417, 0, 0, 418, 419, 420,
	734, 735, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 0, 430, 736, 0, 737, 431, 0, 432, 433,
	434, 435, 436, 437, 438, 738, 739, 740, 531, 0,
	439, 440, 441, 0, 442, 443, 444, 445, 446, 0,
	0, 0, 0, 447, 448, 449, 0, 0, 741, 450,
	532, 451, 742, 743, 0, 744, 0, 452, 453, 455,
	0, 745, 0, 454, 456, 457, 0, 458, 0, 0,
	0, 459, 460, 461, 462, 463, 464, 0, 465, 467,
	466, 0, 469, 746, 468, 0, 470, 471, 0, 0,
	472, 473, 474, 475, 476, 477, 480, 0, 0, 478,
	479, 481, 482, 0, 483, 484, 486, 489, 485, 487,
	488, 490, 503, 504, 491, 492, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 506, 0, 505, 0,
	507, 508, 509, 510, 511, 518, 520, 521, 516, 517,
	519, 522, 523, 525, 513, 514, 515, 0, 524, 512,
	0, 0, 0, 526, 527, 528, 529, 0, 747, 530,
	748, 533, 534, 0, 0, 535, 0, 536, 0, 0,
	538, 539, 540, 0, 0, 541, 542, 749, 0, 543,
	0, 750, 544, 545, 537, 546, 547, 548, 549, 550,
	551, 552, 553, 554, 555, 0, 556, 557, 751, 558,
	559, 560, 752, 561, 562, 563, 753, 564, 754, 565,
	566, 0, 567, 568, 569, 0, 570, 571, 572, 573,
	574, 575, 576, 577, 755, 578, 579, 581, 580, 582,
	0, 583, 0, 584, 585, 586, 0, 0, 0, 0,
	0, 587, 588, 590, 0, 591, 592, 593, 594, 589,
	595, 596, 597, 598, 599, 600, 0, 602, 603, 601,
	604, 605, 0, 606, 607, 608, 609, 610, 756, 611,
	0, 612, 613, 620, 621, 622, 614, 615, 616, 623,
	624, 625, 626, 627, 629, 628, 0, 631, 632, 630,
	633, 634, 635, 0, 636, 757, 637, 617, 618, 638,
	639, 0, 640, 641, 642, 643, 644, 645, 646, 758,
	0, 647, 0, 648, 649, 650, 651, 652, 653, 655,
	619, 656, 661, 662, 759, 657, 658, 659, 660, 760,
	664, 665, 666, 667, 0, 668, 669, 0, 663, 654,
	0, 670, 671, 672, 673, 674, 675, 0, 676, 677,
	0, 678, 761, 762, 763, 764, 0, 690, 0, 679,
	681, 682, 683, 684, 765, 685, 766, 0, 686, 687,
	688, 689, 680, 691, 692, 0, 0, 693, 694, 696,
	698, 699, 695, 697, 700, 0, 701, 0, 0, 702,
	703, 704, 767, 768, 769, 0, 706, 705, 707, 708,
	709, 770, 710, 711, 712, 1828, 0, 302, 0, 713,
	714, 771, 715, 716, 717, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 308, 309, 311, 310, 312, 313,
	314, 315, 0, 316, 317, 0, 0, 0, 0, 0,
	718, 0, 0, 0, 318, 0, 319, 320, 321, 0,
	322, 323, 324, 325, 326, 327, 328, 719, 720, 0,
	329, 721, 330, 722, 0, 723, 331, 332, 333, 334,
	335, 336, 337, 0, 0, 0, 338, 724, 725, 726,
	0, 339, 340, 727, 0, 0, 0, 341, 342, 343,
	344, 345, 346, 347, 348, 0, 0, 350, 351, 352,
	349, 353, 0, 354, 0, 355, 356, 357, 358, 359,
	360, 361, 0, 362, 363, 364, 0, 365, 366, 367,
	0, 0, 0, 0, 0, 0, 0, 368, 369, 370,
	371, 372, 0, 373, 375, 728, 729, 0, 378, 380,
	374, 376, 0, 379, 377, 381, 0, 382, 383, 384,
	0, 0, 385, 386, 387, 0, 388, 389, 390, 0,
	391, 392, 393, 0, 394, 395, 730, 396, 397, 398,
	400, 402, 399, 401, 403, 404, 405, 406, 407, 731,
	732, 408, 0, 0, 0, 0, 0, 0, 0, 409,
	410, 411, 733, 0, 0, 0, 412, 0, 413, 414,
	415, 0, 416, 417, 0, 0, 418, 419, 420, 734,
	735, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	0, 430, 736, 0, 737, 431, 0, 432, 433, 434,
	435, 436, 437, 438, 738, 739, 740, 531, 0, 439,
	440, 441, 0, 442, 443, 444, 445, 446, 0, 0,
	0, 0, 447, 448, 449, 0, 0, 741, 450, 532,
	451, 742, 743, 0, 744, 0, 452, 453, 455, 0,
	745, 0, 454, 456, 457, 0, 458, 0, 0, 0,
	459, 460, 461, 462, 463, 464, 0, 465, 467, 466,
	0, 469, 746, 468, 0, 470, 471, 0, 0, 472,
	473, 474, 475, 476, 477, 480, 0, 0, 478, 479,
	481, 482, 0, 483, 484, 486, 489, 485, 487, 488,
	490, 503, 504, 491, 492, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 506, 0, 505, 0, 507,
	508, 509, 510, 511, 518, 520, 521, 516, 517, 519,
	522, 523, 525, 513, 514, 515, 0, 524, 512, 0,
	0, 0, 526, 527, 528, 529, 0, 747, 530, 748,
	533, 534, 0, 0, 535, 0, 536, 0, 0, 538,
	539, 540, 0, 0, 541, 542, 749, 0, 543, 0,
	750, 544, 545, 537, 546, 547, 548, 549, 550, 551,
	552, 553, 554, 555, 0, 556, 557, 751, 558, 559,
	560, 752, 561, 562, 563, 753, 564, 754, 565, 566,
	0, 567, 568, 569, 0, 570, 571, 572, 573, 574,
	575, 576, 577, 755, 578, 579, 581, 580, 582, 0,
	583, 0, 584, 585, 586, 0, 0, 0, 0, 0,
	587, 588, 590, 0, 591, 592, 593, 594, 589, 595,
	596, 597, 598, 599, 600, 0, 602, 603, 601, 604,
	605, 0, 606, 607, 608, 609, 610, 756, 611, 0,
	612, 613, 620, 621, 622, 614, 615, 616, 623, 624,
	625, 626, 627, 629, 628, 0, 631, 632, 630, 633,
	634, 635, 0, 636, 757, 637, 617, 618, 638, 639,
	0, 640, 641, 642, 643, 644, 645, 646, 758, 0,
	647, 0, 648, 649, 650, 651, 652, 653, 655, 619,
	656, 661, 662, 759, 657, 658, 659, 660, 760, 664,
	665, 666, 667, 0, 668, 669, 0, 663, 654, 0,
	670, 671, 672, 673, 674, 675, 0, 676, 677, 0,
	678, 761, 762, 763, 764, 0, 690, 0, 679, 681,
	682, 683, 684, 765, 685, 766, 0, 686, 687, 688,
	689, 680, 691, 692, 0, 0, 693, 694, 696, 698,
	699, 695, 697, 700, 0, 701, 0, 0, 702, 703,
	704, 767, 768, 769, 0, 706, 705, 707, 708, 709,
	770, 710, 711, 712, 1820, 0, 302, 0, 713, 714,
	771, 715, 716, 717, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 308, 309, 311, 310, 312, 313, 314,
	315, 0, 316, 317, 0, 0, 0, 0, 0, 718,
	0, 0, 0, 318, 0, 319, 320, 321, 0, 322,
	323, 324, 325, 326, 327, 328, 719, 720, 0, 329,
	721, 330, 722, 0, 723, 331, 332, 333, 334, 335,
	336, 337, 0, 0, 0, 338, 724, 725, 726, 0,
	339, 340, 727, 0, 0, 0, 341, 342, 343, 344,
	345, 346, 347, 348, 0, 0, 350, 351, 352, 349,
	353, 0, 354, 0, 355, 356, 357, 358, 359, 360,
	361, 0, 362, 363, 364, 0, 365, 366, 367, 0,
	0, 0, 0, 0, 0, 0, 368, 369, 370, 371,
	372, 0, 373, 375, 728, 729, 0, 378, 380, 374,
	376, 0, 379, 377, 381, 0, 382, 383, 384, 0,
	0, 385, 386, 387, 0, 388, 389, 390, 0, 391,
	392, 393, 0, 394, 395, 730, 396, 397, 398, 400,
	402, 399, 401, 403, 404, 405, 406, 407, 731, 732,
	408, 0, 0, 0, 0, 0, 0, 0, 409, 410,
	411, 733, 0, 0, 0, 412, 0, 413, 414, 415,
	0, 416, 417, 0, 0, 418, 419, 420, 734, 735,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 0,
	430, 736, 0, 737, 431, 0, 432, 433, 434, 435,
	436, 437, 438, 738, 739, 740, 531, 0, 439, 440,
	441, 0, 442, 443, 444, 445, 446, 0, 0, 0,
	0, 447, 448, 449, 0, 0, 741, 450, 532, 451,
	742, 743, 0, 744, 0, 452, 453, 455, 0, 745,
	0, 454, 456, 457, 0, 458, 0, 0, 0, 459,
	460, 461, 462, 463, 464, 0, 465, 467, 466, 0,
	469, 746, 468, 0, 470, 471, 0, 0, 472, 473,
	474, 475, 476, 477, 480, 0, 0, 478, 479, 481,
	482, 0, 483, 484, 486, 489, 485, 487, 488, 490,
	503, 504, 491, 492, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 506, 0, 505, 0, 507, 508,
	509, 510, 511, 518, 520, 521, 516, 517, 519, 522,
	523, 525, 513, 514, 515, 0, 524, 512, 0, 0,
	0, 526, 527, 528, 529, 0, 747, 530, 748, 533,
	534, 0, 0, 535, 0, 536, 0, 0, 538, 539,
	540, 0, 0, 541, 542, 749, 0, 543, 0, 750,
	544, 545, 537, 546, 547, 548, 549, 550, 551, 552,
	553, 554, 555, 0, 556, 557, 751, 558, 559, 560,
	752, 561, 562, 563, 753, 564, 754, 565, 566, 0,
	567, 568, 569, 0, 570, 571, 572, 573, 574, 575,
	576, 577, 755, 578, 579, 581, 580, 582, 0, 583,
	0, 584, 585, 586, 0, 0, 0, 0, 0, 587,
	588, 590, 0, 591, 592, 593, 594, 589, 595, 596,
	597, 598, 599, 600, 0, 602, 603, 601, 604, 605,
	0, 606, 607, 608, 609, 610, 756, 611, 0, 612,
	613, 620, 621, 622, 614, 615, 616, 623, 624, 625,
	626, 627, 629, 628, 0, 631, 632, 630, 633, 634,
	635, 0, 636, 757, 637, 617, 618, 638, 639, 0,
	640, 641, 642, 643, 644, 645, 646, 758, 0, 647,
	0, 648, 649, 650, 651, 652, 653, 655, 619, 656,
	661, 662, 759, 657, 658, 659, 660, 760, 664, 665,
	666, 667, 0, 668, 669, 0, 663, 654, 0, 670,
	671, 672, 673, 674, 675, 0, 676, 677, 0, 678,
	761, 762, 763, 764, 0, 690, 0, 679, 681, 682,
	683, 684, 765, 685, 766, 0, 686, 687, 688, 689,
	680, 691, 692, 0, 0, 693, 694, 696, 698, 699,
	695, 697, 700, 0, 701, 0, 0, 702, 703, 704,
	767, 768, 769, 0, 706, 705, 707, 708, 709, 770,
	710, 711, 712, 857, 0, 302, 0, 713, 714, 771,
	715, 716, 717, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 308, 309, 311, 310, 312, 313, 314, 315,
	0, 316, 317, 0, 0, 0, 0, 0, 718, 0,
	0, 0, 318, 0, 319, 320, 321, 0, 322, 323,
	324, 325, 326, 327, 328, 719, 720, 0, 329, 721,
	330, 722, 0, 723, 331, 332, 333, 334, 335, 336,
	337, 0, 0, 0, 338, 724, 725, 726, 0, 339,
	853, 727, 0, 0, 0, 341, 342, 343, 344, 345,
	346, 347, 348, 0, 0, 350, 351, 352, 349, 353,
	0, 354, 0, 355, 356, 357, 358, 359, 360, 361,
	0, 362, 363, 364, 0, 365, 366, 367, 0, 0,
	0, 0, 0, 0, 0, 368, 369, 370, 371, 372,
	0, 373, 375, 728, 729, 0, 378, 380, 374, 376,
	0, 379, 377, 381, 0, 382, 383, 384, 0, 0,
	385, 386, 387, 0, 388, 389, 390, 0, 391, 392,
	393, 0, 394, 395, 730, 396, 397, 398, 400, 402,
	399, 401, 403, 404, 405, 406, 407, 731, 732, 408,
	0, 0, 0, 0, 0, 0, 0, 409, 410, 411,
	733, 0, 0, 0, 412, 0, 413, 414, 415, 0,
	416, 417, 0, 0, 418, 419, 420, 734, 735, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 0, 430,
	736, 0, 737, 431, 0, 432, 433, 434, 435, 436,
	437, 438, 738, 739, 740, 531, 0, 439, 440, 441,
	0, 442, 443, 444, 445, 446, 0, 0, 0, 0,
	447, 448, 449, 0, 0, 741, 450, 532, 451, 742,
	743, 0, 744, 0, 452, 453, 455, 0, 745, 0,
	454, 456, 457, 0, 458, 0, 0, 0, 459, 460,
	461, 462, 463, 464, 0, 465, 467, 466, 0, 469,
	746, 468, 0, 470, 471, 0, 0, 472, 473, 474,
	475, 476, 858, 480, 0, 0, 478, 479, 481, 482,
	0, 483, 484, 486, 489, 485, 487, 488, 490, 503,
	504, 491, 492, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 506, 0, 867, 0, 507, 508, 509,
	510, 511, 518, 520, 521, 516, 517, 519, 522, 523,
	525, 513, 514, 515, 0, 524, 512, 0, 0, 0,
	526, 527, 528, 529, 0, 747, 530, 748, 533, 534,
	0, 0, 535, 0, 536, 0, 0, 538, 539, 540,
	0, 0, 541, 542, 749, 0, 543, 0, 750, 544,
	545, 537, 546, 547, 548, 549, 550, 551, 552, 553,
	554, 555, 0, 556, 557, 751, 558, 559, 560, 752,
	561, 562, 563, 753, 564, 754, 565, 566, 0, 567,
	568, 569, 0, 570, 571, 572, 573, 574, 575, 576,
	577, 755, 578, 579, 581, 580, 582, 0, 583, 0,
	584, 585, 586, 0, 0, 0, 0, 0, 587, 588,
	590, 0, 591, 592, 593, 594, 589, 595, 596, 597,
	598, 599, 600, 0, 602, 603, 601, 604, 605, 0,
	866, 607, 608, 609, 610, 756, 611, 0, 612, 613,
	620, 621, 622, 614, 615, 616, 865, 624, 625, 626,
	627, 629, 628, 0, 631, 632, 630, 633, 1805, 635,
	0, 636, 757, 637, 617, 618, 638, 639, 0, 640,
	641, 642, 643, 644, 645, 646, 758, 0, 647, 0,
	648, 649, 650, 651, 652, 653, 655, 619, 656, 661,
	662, 759, 657, 658, 659, 660, 760, 664, 665, 666,
	667, 0, 668, 669, 0, 663, 654, 0, 670, 671,
	672, 673, 674, 675, 0, 676, 677, 0, 678, 863,
	762, 763, 764, 0, 690, 0, 679, 681, 682, 683,
	684, 765, 685, 766, 0, 686, 687, 688, 689, 680,
	691, 692, 0, 0, 693, 694, 696, 698, 699, 695,
	697, 700, 0, 701, 0, 0, 702, 703, 704, 767,
	768, 769, 0, 706, 705, 707, 708, 709, 770, 710,
	711, 712, 1778, 0, 302, 0, 713, 714, 771, 715,
	716, 717, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 308, 309, 311, 310, 312, 313, 314, 315, 0,
	316, 317, 0, 0, 0, 0, 0, 718, 0, 0,
	0, 318, 0, 319, 320, 321, 0, 322, 323, 324,
	325, 326, 327, 328, 719, 720, 0, 329, 721, 330,
	722, 0, 723, 331, 332, 333, 334, 335, 336, 337,
	0, 0, 0, 338, 724, 725, 726, 0, 339, 340,
	727, 0, 0, 0, 341, 342, 343, 344, 345, 346,
	347, 348, 0, 0, 350, 351, 352, 349, 353, 0,
	354, 0, 355, 356, 357, 358, 359, 360, 361, 0,
	362, 363, 364, 0, 365, 366, 367, 0, 0, 0,
	0, 0, 0, 0, 368, 369, 370, 371, 372, 0,
	373, 375, 728, 729, 0, 378, 380, 374, 376, 0,
	379, 377, 381, 0, 382, 383, 384, 0, 0, 385,
	386, 387, 0, 388, 389, 390, 0, 391, 392, 393,
	0, 394, 395, 730, 396, 397, 398, 400, 402, 399,
	401, 403, 404, 405, 406, 407, 731, 732, 408, 0,
	0, 0, 0, 0, 0, 0, 409, 410, 411, 733,
	0, 0, 0, 412, 0, 413, 414, 415, 0, 416,
	417, 0, 0, 418, 419, 420, 734, 735, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 0, 430, 736,
	0, 737, 431, 0, 432, 433, 434, 435, 436, 437,
	438, 1777, 739, 740, 531, 0, 439, 440, 441, 0,
	442, 443, 444, 445, 446, 0, 0, 0, 0, 447,
	448, 449, 0, 0, 741, 450, 532, 451, 742, 743,
	0, 744, 0, 452, 453, 455, 0, 745, 0, 454,
	456, 457, 0, 458, 0, 0, 0, 459, 460, 461,
	462, 463, 464, 0, 465, 467, 466, 0, 469, 746,
	468, 0, 470, 471, 0, 0, 472, 473, 474, 475,
	476, 477, 480, 0, 0, 478, 479, 481, 482, 0,
	483, 484, 486, 489, 485, 487, 488, 490, 503, 504,
	491, 492, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 506, 0, 505, 0, 507, 508, 509, 510,
	511, 518, 520, 521, 516, 517, 519, 522, 523, 525,
	513, 514, 515, 0, 524, 512, 0, 0, 0, 526,
	527, 528, 529, 0, 747, 530, 748, 533, 534, 0,
	0, 535, 0, 536, 0, 0, 538, 539, 540, 0,
	0, 541, 542, 749, 0, 543, 0, 750, 544, 545,
	537, 546, 547, 548, 549, 550, 551, 552, 553, 554,
	555, 0, 556, 557, 751, 558, 559, 560, 752, 561,
	562, 563, 753, 564, 754, 565, 566, 0, 567, 568,
	569, 0, 570, 571, 572, 573, 574, 575, 576, 577,
	755, 578, 579, 581, 580, 582, 0, 583, 0, 584,
	585, 586, 0, 0, 0, 0, 0, 587, 588, 590,
	0, 591, 592, 593, 594, 589, 595, 596, 597, 598,
	599, 600, 0, 602, 603, 601, 604, 605, 0, 606,
	607, 608, 609, 610, 756, 611, 0, 612, 613, 620,
	621, 622, 614, 615, 616, 623, 624, 625, 626, 627,
	629, 628, 0, 631, 632, 630, 633, 634, 635, 0,
	636, 757, 637, 617, 618, 638, 639, 0, 640, 641,
	642, 643, 644, 645, 646, 758, 0, 647, 0, 648,
	649, 650, 651, 652, 653, 655, 619, 656, 661, 662,
	759, 657, 658, 659, 660, 760, 664, 665, 666, 667,
	0, 668, 669, 0, 663, 654, 0, 670, 671, 672,
	673, 674, 675, 0, 676, 677, 0, 678, 761, 762,
	763, 764, 0, 690, 0, 679, 681, 682, 683, 684,
	765, 685, 766, 0, 686, 687, 688, 689, 680, 691,
	692, 0, 0, 693, 694, 696, 698, 699, 695, 697,
	700, 0, 701, 0, 0, 702, 703, 704, 767, 768,
	769, 0, 706, 705, 707, 708, 709, 770, 710, 711,
	712, 1761, 0, 302, 0, 713, 714, 771, 715, 716,
	717, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	308, 309, 311, 310, 312, 313, 314, 315, 0, 316,
	317, 0, 0, 0, 0, 0, 718, 0, 0, 0,
	318, 0, 319, 320, 321, 0, 322, 323, 324, 325,
	326, 327, 328, 719, 720, 0, 329, 721, 330, 722,
	0, 723, 331, 332, 333, 334, 335, 336, 337, 0,
	0, 0, 338, 724, 725, 726, 0, 339, 340, 727,
	0, 0, 0, 341, 342, 343, 344, 345, 346, 347,
	348, 0, 0, 350, 351, 352, 349, 353, 0, 354,
	0, 355, 356, 357, 358, 359, 360, 361, 0, 362,
	363, 364, 0, 365, 366, 367, 0, 0, 0, 0,
	0, 0, 0, 368, 369, 370, 371, 372, 0, 373,
	375, 728, 729, 0, 378, 380, 374, 376, 0, 379,
	377, 381, 0, 382, 383, 384, 0, 0, 385, 386,
	387, 0, 388, 389, 390, 0, 391, 392, 393, 0,
	394, 395, 730, 396, 397, 398, 400, 402, 399, 401,
	403, 404, 405, 406, 407, 731, 732, 408, 0, 0,
	0, 0, 0, 0, 0, 409, 410, 411, 733, 0,
	0, 0, 412, 0, 413, 414, 415, 0, 416, 417,
	0, 0, 418, 419, 420, 734, 735, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 0, 430, 736, 0,
	737, 431, 0, 432, 433, 434, 435, 436, 437, 438,
	1759, 739, 740, 531, 0, 439, 440, 441, 0, 442,
	443, 444, 445, 446, 0, 0, 0, 0, 447, 448,
	449, 0, 0, 741, 450, 532, 451, 742, 743, 0,
	744, 0, 452, 453, 455, 0, 745, 0, 454, 456,
	457, 0, 458, 0, 0, 0, 459, 460, 461, 462,
	463, 464, 0, 465, 467, 466, 0, 469, 746, 468,
	0, 470, 471, 0, 0, 472, 473, 474, 475, 476,
	477, 480, 0, 0, 478, 479, 481, 482, 0, 483,
	484, 486, 489, 485, 487, 488, 490, 503, 504, 491,
	492, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 506, 0, 505, 0, 507, 508, 509, 510, 511,
	518, 520, 521, 516, 517, 519, 522, 523, 525, 513,
	514, 515, 0, 524, 512, 0, 0, 0, 526, 527,
	528, 529, 0, 747, 530, 748, 533, 534, 0, 0,
	535, 0, 536, 0, 0, 538, 539, 540, 0, 0,
	541, 542, 749, 0, 543, 0, 750, 544, 545, 537,
	546, 547, 548, 549, 550, 551, 552, 553, 554, 555,
	0, 556, 557, 751, 558, 559, 560, 752, 561, 562,
	563, 753, 564, 754, 565, 566, 0, 567, 568, 569,
	0, 570, 571, 572, 573, 574, 575, 576, 577, 755,
	578, 579, 581, 580, 582, 0, 583, 0, 584, 585,
	586, 0, 0, 0, 0, 0, 587, 588, 590, 0,
	591, 592, 593, 594, 589, 595, 596, 597, 598, 599,
	600, 0, 602, 603, 601, 604, 605, 0, 606, 607,
	608, 609, 610, 756, 611, 0, 612, 613, 620, 621,
	622, 614, 615, 616, 623, 624, 625, 626, 627, 629,
	628, 0, 631, 632, 630, 633, 634, 635, 0, 636,
	757, 637, 617, 618, 638, 639, 0, 640, 641, 642,
	643, 644, 645, 646, 758, 0, 647, 0, 648, 649,
	650, 651, 652, 653, 655, 619, 656, 661, 662, 759,
	657, 658, 659, 660, 760, 664, 665, 666, 667, 0,
	668, 669, 0, 663, 654, 0, 670, 671, 672, 673,
	674, 675, 0, 676, 677, 0, 678, 761, 762, 763,
	764, 0, 690, 0, 679, 681, 682, 683, 684, 765,
	685, 766, 0, 686, 687, 688, 689, 680, 691, 692,
	0, 0, 693, 694, 696, 698, 699, 695, 697, 700,
	0, 701, 0, 0, 702, 703, 704, 767, 768, 769,
	0, 706, 705, 707, 708, 709, 770, 710, 711, 712,
	1753, 0, 302, 0, 713, 714, 771, 715, 716, 717,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 308,
	309, 311, 310, 312, 313, 314, 315, 0, 316, 317,
	0, 0, 0, 0, 0, 718, 0, 0, 0, 318,
	0, 319, 320, 321, 0, 322, 323, 324, 325, 326,
	327, 328, 719, 720, 0, 329, 721, 330, 722, 0,
	723, 331, 332, 333, 334, 335, 336, 337, 0, 0,
	0, 338, 724, 725, 726, 0, 339, 340, 727, 0,
	0, 0, 341, 342, 343, 344, 345, 346, 347, 348,
	0, 0, 350, 351, 352, 349, 353, 0, 354, 0,
	355, 356, 357, 358, 359, 360, 361, 0, 362, 363,
	364, 0, 365, 366, 367, 0, 0, 0, 0, 0,
	0, 0, 368, 369, 370, 371, 372, 0, 373, 375,
	728, 729, 0, 378, 380, 374, 376, 0, 379, 377,
	381, 0, 382, 383, 384, 0, 0, 385, 386, 387,
	0, 388, 389, 390, 0, 391, 392, 393, 0, 394,
	395, 730, 396, 397, 398, 400, 402, 399, 401, 403,
	404, 405, 406, 407, 731, 732, 408, 0, 0, 0,
	0, 0, 0, 0, 409, 410, 411, 733, 0, 0,
	0, 412, 0, 413, 414, 415, 0, 416, 417, 0,
	0, 418, 419, 420, 734, 735, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 0, 430, 736, 0, 737,
	431, 0, 432, 433, 434, 435, 436, 437, 438, 738,
	739, 740, 531, 0, 439, 440, 441, 0, 442, 443,
	444, 445, 446, 0, 0, 0, 0, 447, 448, 449,
	0, 0, 741, 450, 532, 451, 742, 743, 0, 744,
	0, 452, 453, 455, 0, 745, 0, 454, 456, 457,
	0, 458, 0, 0, 0, 459, 460, 461, 462, 463,
	464, 0, 465, 467, 466, 0, 469, 746, 468, 0,
	470, 471, 0, 0, 472, 473, 474, 475, 476, 477,
	480, 0, 0, 478, 479, 481, 482, 0, 483, 484,
	486, 489, 485, 487, 488, 490, 503, 504, 491, 492,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	506, 0, 505, 0, 507, 508, 509, 510, 511, 518,
	520, 521, 516, 517, 519, 522, 523, 525, 513, 514,
	515, 0, 524, 512, 0, 0, 0, 526, 527, 528,
	529, 0, 747, 530, 748, 533, 534, 0, 0, 535,
	0, 536, 0, 0, 538, 539, 540, 0, 0, 541,
	542, 749, 0, 543, 0, 750, 544, 545, 537, 546,
	547, 548, 549, 550, 551, 552, 553, 554, 555, 0,
	556, 557, 751, 558, 559, 560, 752, 561, 562, 563,
	753, 564, 754, 565, 566, 0, 567, 568, 569, 0,
	570, 571, 572, 573, 574, 575, 576, 577, 755, 578,
	579, 581, 580, 582, 0, 583, 0, 584, 585, 586,
	0, 0, 0, 0, 0, 587, 588, 590, 0, 591,
	592, 593, 594, 589, 595, 596, 597, 598, 599, 600,
	0, 602, 603, 601, 604, 605, 0, 606, 607, 608,
	609, 610, 756, 611, 0, 612, 613, 620, 621, 622,
	614, 615, 616, 623, 624, 625, 626, 627, 629, 628,
	0, 631, 632, 630, 633, 634, 635, 0, 636, 757,
	637, 617, 618, 638, 639, 0, 640, 641, 642, 643,
	644, 645, 646, 758, 0, 647, 0, 648, 649, 650,
	651, 652, 653, 655, 619, 656, 661, 662, 759, 657,
	658, 659, 660, 760, 664, 665, 666, 667, 0, 668,
	669, 0, 663, 654, 0, 670, 671, 672, 673, 674,
	675, 0, 676, 677, 0, 678, 761, 762, 763, 764,
	0, 690, 0, 679, 681, 682, 683, 684, 765, 685,
	766, 0, 686, 687, 688, 689, 680, 691, 692, 0,
	0, 693, 694, 696, 698, 699, 695, 697, 700, 0,
	701, 0, 0, 702, 703, 704, 767, 768, 769, 0,
	706, 705, 707, 708, 709, 770, 710, 711, 712, 1731,
	0, 302, 0, 713, 714, 771, 715, 716, 717, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 308, 309,
	311, 310, 312, 313, 314, 315, 0, 316, 317, 0,
	0, 0, 0, 0, 718, 0, 0, 0, 318, 0,
	319, 320, 321, 0, 322, 323, 324, 325, 326, 327,
	328, 719, 720, 0, 329, 721, 330, 722, 0, 723,
	331, 332, 333, 334, 335, 336, 337, 0, 0, 0,
	338, 724, 725, 726, 0, 339, 340, 727, 0, 0,
	0, 341, 342, 343, 344, 345, 346, 347, 348, 0,
	0, 350, 351, 352, 349, 353, 0, 354, 0, 355,
	356, 357, 358, 359, 360, 361, 0, 362, 363, 364,
	0, 365, 366, 367, 0, 0, 0, 0, 0, 0,
	0, 368, 369, 370, 371, 372, 0, 373, 375, 728,
	729, 0, 378, 380, 374, 376, 0, 379, 377, 381,
	0, 382, 383, 384, 0, 0, 385, 386, 387, 0,
	388, 389, 390, 0, 391, 392, 393, 0, 394, 395,
	730, 396, 397, 398, 400, 402, 399, 401, 403, 404,
	405, 406, 407, 731, 732, 408, 0, 0, 0, 0,
	0, 0, 0, 409, 410, 411, 733, 0, 0, 0,
	412, 0, 413, 414, 415, 0, 416, 417, 0, 0,
	418, 419, 420, 734, 735, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 0, 430, 736, 0, 737, 431,
	0, 432, 433, 434, 435, 436, 437, 438, 1729, 739,
	740, 531, 0, 439, 440, 441, 0, 442, 443, 444,
	445, 446, 0, 0, 0, 0, 447, 448, 449, 0,
	0, 741, 450, 532, 451, 742, 743, 0, 744, 0,
	452, 453, 455, 0, 745, 0, 454, 456, 457, 0,
	458, 0, 0, 0, 459, 460, 461, 462, 463, 464,
	0, 465, 467, 466, 0, 469, 746, 468, 0, 470,
	471, 0, 0, 472, 473, 474, 475, 476, 477, 480,
	0, 0, 478, 479, 481, 482, 0, 483, 484, 486,
	489, 485, 487, 488, 490, 503, 504, 491, 492, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 506,
	0, 505, 0, 507, 508, 509, 510, 511, 518, 520,
	521, 516, 517, 519, 522, 523, 525, 513, 514, 515,
	0, 524, 512, 0, 0, 0, 526, 527, 528, 529,
	0, 747, 530, 748, 533, 534, 0, 0, 535, 0,
	536, 0, 0, 538, 539, 540, 0, 0, 541, 542,
	749, 0, 543, 0, 750, 544, 545, 537, 546, 547,
	548, 549, 550, 551, 552, 553, 554, 555, 0, 556,
	557, 751, 558, 559, 560, 752, 561, 562, 563, 753,
	564, 754, 565, 566, 0, 567, 568, 569, 0, 570,
	571, 572, 573, 574, 575, 576, 577, 755, 578, 579,
	581, 580, 582, 0, 583, 0, 584, 585, 586, 0,
	0, 0, 0, 0, 587, 588, 590, 0, 591, 592,
	593, 594, 589, 595, 596, 597, 598, 599, 600, 0,
	602, 603, 601, 604, 605, 0, 606, 607, 608, 609,
	610, 756, 611, 0, 612, 613, 620, 621, 622, 614,
	615, 616, 623, 624, 625, 626, 627, 629, 628, 0,
	631, 632, 630, 633, 634, 635, 0, 636, 757, 637,
	617, 618, 638, 639, 0, 640, 641, 642, 643, 644,
	645, 646, 758, 0, 647, 0, 648, 649, 650, 651,
	652, 653, 655, 619, 656, 661, 662, 759, 657, 658,
	659, 660, 760, 664, 665, 666, 667, 0, 668, 669,
	0, 663, 654, 0, 670, 671, 672, 673, 674, 675,
	0, 676, 677, 0, 678, 761, 762, 763, 764, 0,
	690, 0, 679, 681, 682, 683, 684, 765, 685, 766,
	0, 686, 687, 688, 689, 680, 691, 692, 0, 0,
	693, 694, 696, 698, 699, 695, 697, 700, 0, 701,
	0, 0, 702, 703, 704, 767, 768, 769, 0, 706,
	705, 707, 708, 709, 770, 710, 711, 712, 1722, 0,
	302, 0, 713, 714, 771, 715, 716, 717, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 308, 309, 311,
	310, 312, 313, 314, 315, 0, 316, 317, 0, 0,
	0, 0, 0, 718, 0, 0, 0, 318, 0, 319,
	320, 321, 0, 322, 323, 324, 325, 326, 327, 328,
	719, 720, 0, 329, 721, 330, 722, 0, 723, 331,
	332, 333, 334, 335, 336, 337, 0, 0, 0, 338,
	724, 725, 726, 0, 339, 340, 727, 0, 0, 0,
	341, 342, 343, 344, 345, 346, 347, 348, 0, 0,
	350, 351, 352, 349, 353, 0, 354, 0, 355, 356,
	357, 358, 359, 360, 361, 0, 362, 363, 364, 0,
	365, 366, 367, 0, 0, 0, 0, 0, 0, 0,
	368, 369, 370, 371, 372, 0, 373, 375, 728, 729,
	0, 378, 380, 374, 376, 0, 379, 377, 381, 0,
	382, 383, 384, 0, 0, 385, 386, 387, 0, 388,
	389, 390, 0, 391, 392, 393, 0, 394, 395, 730,
	396, 397, 398, 400, 402, 399, 401, 403, 404, 405,
	406, 407, 731, 732, 408, 0, 0, 0, 0, 0,
	0, 0, 409, 410, 411, 733, 0, 0, 0, 412,
	0, 413, 414, 415, 0, 416, 417, 0, 0, 418,
	419, 420, 734, 735, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 0, 430, 736, 0, 737, 431, 0,
	432, 433, 434, 435, 436, 437, 438, 738, 739, 740,
	531, 0, 439, 440, 441, 0, 442, 443, 444, 445,
	446, 0, 0, 0, 0, 447, 448, 449, 0, 0,
	741, 450, 532, 451, 742, 743, 0, 744, 0, 452,
	453, 455, 0, 745, 0, 454, 456, 457, 0, 458,
	0, 0, 0, 459, 460, 461, 462, 463, 464, 0,
	465, 467, 466, 0, 469, 746, 468, 0, 470, 471,
	0, 0, 472, 473, 474, 475, 476, 477, 480, 0,
	0, 478, 479, 481, 482, 0, 483, 484, 486, 489,
	485, 487, 488, 490, 503, 504, 491, 492, 493, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 506, 0,
	505, 0, 507, 508, 509, 510, 511, 518, 520, 521,
	516, 517, 519, 522, 523, 525, 513, 514, 515, 0,
	524, 512, 0, 0, 0, 526, 527, 528, 529, 0,
	747, 530, 748, 533, 534, 0, 0, 535, 0, 536,
	0, 0, 538, 539, 540, 0, 0, 541, 542, 749,
	0, 543, 0, 750, 544, 545, 537, 546, 547, 548,
	549, 550, 551, 552, 553, 554, 555, 0, 556, 557,
	751, 558, 559, 560, 752, 561, 562, 563, 753, 564,
	754, 565, 566, 0, 567, 568, 569, 0, 570, 571,
	572, 573, 574, 575, 576, 577, 755, 578, 579, 581,
	580, 582, 0, 583, 0, 584, 585, 586, 0, 0,
	0, 0, 0, 587, 588, 590, 0, 591, 592, 593,
	594, 589, 595, 596, 597, 598, 599, 600, 0, 602,
	603, 601, 604, 605, 0, 606, 607, 608, 609, 610,
	756, 611, 0, 612, 613, 620, 621, 622, 614, 615,
	616, 623, 624, 625, 626, 627, 629, 628, 0, 631,
	632, 630, 633, 634, 635, 0, 636, 757, 637, 617,
	618, 638, 639, 0, 640, 641, 642, 643, 644, 645,
	646, 758, 0, 647, 0, 648, 649, 650, 651, 652,
	653, 655, 619, 656, 661, 662, 759, 657, 658, 659,
	660, 760, 664, 665, 666, 667, 0, 668, 669, 0,
	663, 654, 0, 670, 671, 672, 673, 674, 675, 0,
	676, 677, 0, 678, 761, 762, 763, 764, 0, 690,
	0, 679, 681, 682, 683, 684, 765, 685, 766, 0,
	686, 687, 688, 689, 680, 691, 692, 0, 0, 693,
	694, 696, 698, 699, 695, 697, 700, 0, 701, 0,
	0, 702, 703, 704, 767, 768, 769, 0, 706, 705,
	707, 708, 709, 770, 710, 711, 712, 1683, 0, 302,
	0, 713, 714, 771, 715, 716, 717, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 308, 309, 311, 310,
	312, 313, 314, 315, 0, 316, 317, 0, 0, 0,
	0, 0, 718, 0, 0, 0, 318, 0, 319, 320,
	321, 0, 322, 323, 324, 325, 326, 327, 328, 719,
	720, 0, 329, 721, 330, 722, 0, 723, 331, 332,
	333, 334, 335, 336, 337, 0, 0, 0, 338, 724,
	725, 726, 0, 339, 340, 727, 0, 0, 0, 341,
	342, 343, 344, 345, 346, 347, 348, 0, 0, 350,
	351, 352, 349, 353, 0, 354, 0, 355, 356, 357,
	358, 359, 360, 361, 0, 362, 363, 364, 0, 365,
	366, 367, 0, 0, 0, 0, 0, 0, 0, 368,
	369, 370, 371, 372, 0, 373, 375, 728, 729, 0,
	378, 380, 374, 376, 0, 379, 377, 381, 0, 382,
	383, 384, 0, 0, 385, 386, 387, 0, 388, 389,
	390, 0, 391, 392, 393, 0, 394, 395, 730, 396,
	397, 398, 400, 402, 399, 401, 403, 404, 405, 406,
	407, 731, 732, 408, 0, 0, 0, 0, 0, 0,
	0, 409, 410, 411, 733, 0, 0, 0, 412, 0,
	413, 414, 415, 0, 416, 417, 0, 0, 418, 419,
	420, 734, 735, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 0, 430, 736, 0, 737, 431, 0, 432,
	433, 434, 435, 436, 437, 438, 738, 739, 740, 531,
	0, 439, 440, 441, 0, 442, 443, 444, 445, 446,
	0, 0, 0, 0, 447, 448, 449, 0, 0, 741,
	450, 532, 451, 742, 743, 0, 744, 0, 452, 453,
	455, 0, 745, 0, 454, 456, 457, 0, 458, 0,
	0, 0, 459, 460, 461, 462, 463, 464, 0, 465,
	467, 466, 0, 469, 746, 468, 0, 470, 471, 0,
	0, 472, 473, 474, 475, 476, 477, 480, 0, 0,
	478, 479, 481, 482, 0, 483, 484, 486, 489, 485,
	487, 488, 490, 503, 504, 491, 492, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 506, 0, 505,
	0, 507, 508, 509, 510, 511, 518, 520, 521, 516,
	517, 519, 522, 523, 525, 513, 514, 515, 0, 524,
	512, 0, 0, 0, 526, 527, 528, 529, 0, 747,
	530, 748, 533, 534, 0, 0, 535, 0, 536, 0,
	0, 538, 539, 540, 0, 0, 541, 542, 749, 0,
	543, 0, 750, 544, 545, 537, 546, 547, 548, 549,
	550, 551, 552, 553, 554, 555, 0, 556, 557, 751,
	558, 559, 560, 752, 561, 562, 563, 753, 564, 754,
	565, 566, 0, 567, 568, 569, 0, 570, 571, 572,
	573, 574, 575, 576, 577, 755, 578, 579, 581, 580,
	582, 0, 583, 0, 584, 585, 586, 0, 0, 0,
	0, 0, 587, 588, 590, 0, 591, 592, 593, 594,
	589, 595, 596, 597, 598, 599, 600, 0, 602, 603,
	601, 604, 605, 0, 606, 607, 608, 609, 610, 756,
	611, 0, 612, 613, 620, 621, 622, 614, 615, 616,
	623, 624, 625, 626, 627, 629, 628, 0, 631, 632,
	630, 633, 634, 635, 0, 636, 757, 637, 617, 618,
	638, 639, 0, 640, 641, 642, 643, 644, 645, 646,
	758, 0, 647, 0, 648, 649, 650, 651, 652, 653,
	655, 619, 656, 661, 662, 759, 657, 658, 659, 660,
	760, 664, 665, 666, 667, 0, 668, 669, 0, 663,
	654, 0, 670, 671, 672, 673, 674, 675, 0, 676,
	677, 0, 678, 761, 762, 763, 764, 0, 690, 0,
	679, 681, 682, 683, 684, 765, 685, 766, 0, 686,
	687, 688, 689, 680, 691, 692, 0, 0, 693, 694,
	696, 698, 699, 695, 697, 700, 0, 701, 0, 0,
	702, 703, 704, 767, 768, 769, 0, 706, 705, 707,
	708, 709, 770, 710, 711, 712, 1647, 0, 302, 0,
	713, 714, 771, 715, 716, 717, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 308, 309, 311, 310, 312,
	313, 314, 315, 0, 316, 317, 0, 0, 0, 0,
	0, 718, 0, 0, 0, 318, 0, 319, 320, 321,
	0, 322, 323, 324, 325, 326, 327, 328, 719, 720,
	0, 329, 721, 330, 722, 0, 723, 331, 332, 333,
	334, 335, 336, 337, 0, 0, 0, 338, 724, 725,
	726, 0, 339, 340, 727, 0, 0, 0, 341, 342,
	343, 344, 345, 346, 347, 348, 0, 0, 350, 351,
	352, 349, 353, 0, 354, 0, 355, 356, 357, 358,
	359, 360, 361, 0, 362, 363, 364, 0, 365, 366,
	367, 0, 0, 0, 0, 0, 0, 0, 368, 369,
	370, 371, 372, 0, 373, 375, 728, 729, 0, 378,
	380, 374, 376, 0, 379, 377, 381, 0, 382, 383,
	384, 0, 0, 385, 386, 387, 0, 388, 389, 390,
	0, 391, 392, 393, 0, 394, 395, 730, 396, 397,
	398, 400, 402, 399, 401, 403, 404, 405, 406, 407,
	731, 732, 408, 0, 0, 0, 0, 0, 0, 0,
	409, 410, 411, 733, 0, 0, 0, 412, 0, 413,
	414, 415, 0, 416, 417, 0, 0, 418, 419, 420,
	734, 735, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 0, 430, 736, 0, 737, 431, 0, 432, 433,
	434, 435, 436, 437, 438, 738, 739, 740, 531, 0,
	439, 440, 441, 0, 442, 443, 444, 445, 446, 0,
	0, 0, 0, 447, 448, 449, 0, 0, 741, 450,
	532, 451, 742, 743, 0, 744, 0, 452, 453, 455,
	0, 745, 0, 454, 456, 457, 0, 458, 0, 0,
	0, 459, 460, 461, 462, 463, 464, 0, 465, 467,
	466, 0, 469, 746, 468, 0, 470, 471, 0, 0,
	472, 473, 474, 475, 476, 477, 480, 0, 0, 478,
	479, 481, 482, 0, 483, 484, 486, 489, 485, 487,
	488, 490, 503, 504, 491, 492, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 506, 0, 505, 0,
	507, 508, 509, 510, 511, 518, 520, 521, 516, 517,
	519, 522, 523, 525, 513, 514, 515, 0, 524, 512,
	0, 0, 0, 526, 527, 528, 529, 0, 747, 530,
	748, 533, 534, 0, 0, 535, 0, 536, 0, 0,
	538, 539, 540, 0, 0, 541, 542, 749, 0, 543,
	0, 750, 544, 545, 537, 546, 547, 548, 549, 550,
	551, 552, 553, 554, 555, 0, 556, 557, 751, 558,
	559, 560, 752, 561, 562, 563, 753, 564, 754, 565,
	566, 0, 567, 568, 569, 0, 570, 571, 572, 573,
	574, 575, 576, 577, 755, 578, 579, 581, 580, 582,
	0, 583, 0, 584, 585, 586, 0, 0, 0, 0,
	0, 587, 588, 590, 0, 591, 592, 593, 594, 589,
	595, 596, 597, 598, 599, 600, 0, 602, 603, 601,
	604, 605, 0, 606, 607, 608, 609, 610, 756, 611,
	0, 612, 613, 620, 621, 622, 614, 615, 616, 623,
	624, 625, 626, 627, 629, 628, 0, 631, 632, 630,
	633, 634, 635, 0, 636, 757, 637, 617, 618, 638,
	639, 0, 640, 641, 642, 643, 644, 645, 646, 758,
	0, 647, 0, 648, 649, 650, 651, 652, 653, 655,
	619, 656, 661, 662, 759, 657, 658, 659, 660, 760,
	664, 665, 666, 667, 0, 668, 669, 0, 663, 654,
	0, 670, 671, 672, 673, 674, 675, 0, 676, 677,
	0, 678, 761, 762, 763, 764, 0, 690, 0, 679,
	681, 682, 683, 684, 765, 685, 766, 0, 686, 687,
	688, 689, 680, 691, 692, 0, 0, 693, 694, 696,
	698, 699, 695, 697, 700, 0, 701, 0, 0, 702,
	703, 704, 767, 768, 769, 0, 706, 705, 707, 708,
	709, 770, 710, 711, 712, 1496, 0, 302, 0, 713,
	714, 771, 715, 716, 717, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 308, 309, 311, 310, 312, 313,
	314, 315, 0, 316, 317, 0, 0, 0, 0, 0,
	718, 0, 0, 0, 318, 0, 319, 320, 321, 0,
	322, 323, 324, 325, 326, 327, 328, 719, 720, 0,
	329, 721, 330, 722, 0, 723, 331, 332, 333, 334,
	335, 336, 337, 0, 0, 0, 338, 724, 725, 726,
	0, 339, 340, 727, 0, 0, 0, 341, 342, 343,
	344, 345, 346, 347, 348, 0, 0, 350, 351, 352,
	349, 353, 0, 354, 0, 355, 356, 357, 358, 359,
	360, 361, 0, 362, 363, 364, 0, 365, 366, 367,
	0, 0, 0, 0, 0, 0, 0, 368, 369, 370,
	371, 372, 0, 373, 375, 728, 729, 0, 378, 380,
	374, 376, 0, 379, 377, 381, 0, 382, 383, 384,
	0, 0, 385, 386, 387, 0, 388, 389, 390, 0,
	391, 392, 393, 0, 394, 395, 730, 396, 397, 398,
	400, 402, 399, 401, 403, 404, 405, 406, 407, 731,
	732, 408, 0, 0, 0, 0, 0, 0, 0, 409,
	410, 411, 733, 0, 0, 0, 412, 0, 413, 414,
	415, 0, 416, 417, 0, 0, 418, 419, 420, 734,
	735, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	0, 430, 736, 0, 737, 431, 0, 432, 433, 434,
	435, 436, 437, 438, 738, 739, 740, 531, 0, 439,
	440, 441, 0, 442, 443, 444, 445, 446, 0, 0,
	0, 0, 447, 448, 449, 0, 0, 741, 450, 532,
	451, 742, 743, 0, 744, 0, 452, 453, 455, 0,
	745, 0, 454, 456, 457, 0, 458, 0, 0, 0,
	459, 460, 461, 462, 463, 464, 0, 465, 467, 466,
	0, 469, 746, 468, 0, 470, 471, 0, 0, 472,
	473, 474, 475, 476, 477, 480, 0, 0, 478, 479,
	481, 482, 0, 483, 484, 486, 489, 485, 487, 488,
	490, 503, 504, 491, 492, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 506, 0, 505, 0, 507,
	508, 509, 510, 511, 518, 520, 521, 516, 517, 519,
	522, 523, 525, 513, 514, 515, 0, 524, 512, 0,
	0, 0, 526, 527, 528, 529, 0, 747, 530, 748,
	533, 534, 0, 0, 535, 0, 536, 0, 0, 538,
	539, 540, 0, 0, 541, 542, 749, 0, 543, 0,
	750, 544, 545, 537, 546, 547, 548, 549, 550, 551,
	552, 553, 554, 555, 0, 556, 557, 751, 558, 559,
	560, 752, 561, 562, 563, 753, 564, 754, 565, 566,
	0, 567, 568, 569, 0, 570, 571, 572, 573, 574,
	575, 576, 577, 755, 578, 579, 581, 580, 582, 0,
	583, 0, 584, 585, 586, 0, 0, 0, 0, 0,
	587, 588, 590, 0, 591, 592, 593, 594, 589, 595,
	596, 597, 598, 599, 600, 0, 602, 603, 601, 604,
	605, 0, 866, 607, 608, 609, 610, 756, 611, 0,
	612, 613, 620, 621, 622, 614, 615, 616, 865, 624,
	625, 626, 627, 629, 628, 0, 631, 632, 630, 633,
	634, 635, 0, 636, 757, 637, 617, 618, 638, 639,
	0, 640, 641, 642, 643, 644, 645, 646, 758, 0,
	647, 0, 648, 649, 650, 651, 652, 653, 655, 619,
	656, 661, 662, 759, 657, 658, 659, 660, 760, 664,
	665, 666, 667, 0, 668, 669, 0, 663, 654, 0,
	670, 671, 672, 673, 674, 675, 0, 676, 677, 0,
	678, 863, 762, 763, 764, 0, 690, 0, 679, 681,
	682, 683, 684, 765, 685, 766, 0, 686, 687, 688,
	689, 680, 691, 692, 0, 0, 693, 694, 696, 698,
	699, 695, 697, 700, 0, 701, 0, 0, 702, 703,
	704, 767, 768, 769, 0, 706, 705, 707, 708, 709,
	770, 710, 711, 712, 1467, 0, 302, 0, 713, 714,
	771, 715, 716, 717, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 308, 309, 311, 310, 312, 313, 314,
	315, 0, 316, 317, 0, 0, 0, 0, 0, 718,
	0, 0, 0, 318, 0, 319, 320, 321, 0, 322,
	323, 324, 325, 326, 327, 328, 719, 720, 0, 329,
	721, 330, 722, 0, 723, 331, 332, 333, 334, 335,
	336, 337, 0, 0, 0, 338, 724, 725, 726, 0,
	339, 340, 727, 0, 0, 0, 341, 342, 343, 344,
	345, 346, 347, 348, 0, 0, 350, 351, 352, 349,
	353, 0, 354, 0, 355, 356, 357, 358, 359, 360,
	361, 0, 362, 363, 364, 0, 365, 366, 367, 0,
	0, 0, 0, 0, 0, 0, 368, 369, 370, 371,
	372, 0, 373, 375, 728, 729, 0, 378, 380, 374,
	376, 0, 379, 377, 381, 0, 382, 383, 384, 0,
	0, 385, 386, 387, 0, 388, 389, 390, 0, 391,
	392, 393, 0, 394, 395, 730, 396, 397, 398, 400,
	402, 399, 401, 403, 404, 405, 406, 407, 731, 732,
	408, 0, 0, 0, 0, 0, 0, 0, 409, 410,
	411, 733, 0, 0, 0, 412, 0, 413, 414, 415,
	0, 416, 417, 0, 0, 418, 419, 420, 734, 735,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 0,
	430, 736, 0, 737, 431, 0, 432, 433, 434, 435,
	436, 437, 438, 1466, 739, 740, 531, 0, 439, 440,
	441, 0, 442, 443, 444, 445, 446, 0, 0, 0,
	0, 447, 448, 449, 0, 0, 741, 450, 532, 451,
	742, 743, 0, 744, 0, 452, 453, 455, 0, 745,
	0, 454, 456, 457, 0, 458, 0, 0, 0, 459,
	460, 461, 462, 463, 464, 0, 465, 467, 466, 0,
	469, 746, 468, 0, 470, 471, 0, 0, 472, 473,
	474, 475, 476, 477, 480, 0, 0, 478, 479, 481,
	482, 0, 483, 484, 486, 489, 485, 487, 488, 490,
	503, 504, 491, 492, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 506, 0, 505, 0, 507, 508,
	509, 510, 511, 518, 520, 521, 516, 517, 519, 522,
	523, 525, 513, 514, 515, 0, 524, 512, 0, 0,
	0, 526, 527, 528, 529, 0, 747, 530, 748, 533,
	534, 0, 0, 535, 0, 536, 0, 0, 538, 539,
	540, 0, 0, 541, 542, 749, 0, 543, 0, 750,
	544, 545, 537, 546, 547, 548, 549, 550, 551, 552,
	553, 554, 555, 0, 556, 557, 751, 558, 559, 560,
	752, 561, 562, 563, 753, 564, 754, 565, 566, 0,
	567, 568, 569, 0, 570, 571, 572, 573, 574, 575,
	576, 577, 755, 578, 579, 581, 580, 582, 0, 583,
	0, 584, 585, 586, 0, 0, 0, 0, 0, 587,
	588, 590, 0, 591, 592, 593, 594, 589, 595, 596,
	597, 598, 599, 600, 0, 602, 603, 601, 604, 605,
	0, 606, 607, 608, 609, 610, 756, 611, 0, 612,
	613, 620, 621, 622, 614, 615, 616, 623, 624, 625,
	626, 627, 629, 628, 0, 631, 632, 630, 633, 634,
	635, 0, 636, 757, 637, 617, 618, 638, 639, 0,
	640, 641, 642, 643, 644, 645, 646, 758, 0, 647,
	0, 648, 649, 650, 651, 652, 653, 655, 619, 656,
	661, 662, 759, 657, 658, 659, 660, 760, 664, 665,
	666, 667, 0, 668, 669, 0, 663, 654, 0, 670,
	671, 672, 673, 674, 675, 0, 676, 677, 0, 678,
	761, 762, 763, 764, 0, 690, 0, 679, 681, 682,
	683, 684, 765, 685, 766, 0, 686, 687, 688, 689,
	680, 691, 692, 0, 0, 693, 694, 696, 698, 699,
	695, 697, 700, 0, 701, 0, 0, 702, 703, 704,
	767, 768, 769, 0, 706, 705, 707, 708, 709, 770,
	710, 711, 712, 1458, 0, 302, 0, 713, 714, 771,
	715, 716, 717, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 308, 309, 311, 310, 312, 313, 314, 315,
	0, 316, 317, 0, 0, 0, 0, 0, 718, 0,
	0, 0, 318, 0, 319, 320, 321, 0, 322, 323,
	324, 325, 326, 327, 328, 719, 720, 0, 329, 721,
	330, 722, 0, 723, 331, 332, 333, 334, 335, 336,
	337, 0, 0, 0, 338, 724, 725, 726, 0, 339,
	340, 727, 0, 0, 0, 341, 342, 343, 344, 345,
	346, 347, 348, 0, 0, 350, 351, 352, 349, 353,
	0, 354, 0, 355, 356, 357, 358, 359, 360, 361,
	0, 362, 363, 364, 0, 365, 366, 367, 0, 0,
	0, 0, 0, 0, 0, 368, 369, 370, 371, 372,
	0, 373, 375, 728, 729, 0, 378, 380, 374, 376,
	0, 379, 377, 381, 0, 382, 383, 384, 0, 0,
	385, 386, 387, 0, 388, 389, 390, 0, 391, 392,
	393, 0, 394, 395, 730, 396, 397, 398, 400, 402,
	399, 401, 403, 404, 405, 406, 407, 731, 732, 408,
	0, 0, 0, 0, 0, 0, 0, 409, 410, 411,
	733, 0, 0, 0, 412, 0, 413, 414, 415, 0,
	416, 417, 0, 0, 418, 419, 420, 734, 735, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 0, 430,
	736, 0, 737, 431, 0, 432, 433, 434, 435, 436,
	437, 438, 1457, 739, 740, 531, 0, 439, 440, 441,
	0, 442, 443, 444, 445, 446, 0, 0, 0, 0,
	447, 448, 449, 0, 0, 741, 450, 532, 451, 742,
	743, 0, 744, 0, 452, 453, 455, 0, 745, 0,
	454, 456, 457, 0, 458, 0, 0, 0, 459, 460,
	461, 462, 463, 464, 0, 465, 467, 466, 0, 469,
	746, 468, 0, 470, 471, 0, 0, 472, 473, 474,
	475, 476, 477, 480, 0, 0, 478, 479, 481, 482,
	0, 483, 484, 486, 489, 485, 487, 488, 490, 503,
	504, 491, 492, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 506, 0, 505, 0, 507, 508, 509,
	510, 511, 518, 520, 521, 516, 517, 519, 522, 523,
	525, 513, 514, 515, 0, 524, 512, 0, 0, 0,
	526, 527, 528, 529, 0, 747, 530, 748, 533, 534,
	0, 0, 535, 0, 536, 0, 0, 538, 539, 540,
	0, 0, 541, 542, 749, 0, 543, 0, 750, 544,
	545, 537, 546, 547, 548, 549, 550, 551, 552, 553,
	554, 555, 0, 556, 557, 751, 558, 559, 560, 752,
	561, 562, 563, 753, 564, 754, 565, 566, 0, 567,
	568, 569, 0, 570, 571, 572, 573, 574, 575, 576,
	577, 755, 578, 579, 581, 580, 582, 0, 583, 0,
	584, 585, 586, 0, 0, 0, 0, 0, 587, 588,
	590, 0, 591, 592, 593, 594, 589, 595, 596, 597,
	598, 599, 600, 0, 602, 603, 601, 604, 605, 0,
	606, 607, 608, 609, 610, 756, 611, 0, 612, 613,
	620, 621, 622, 614, 615, 616, 623, 624, 625, 626,
	627, 629, 628, 0, 631, 632, 630, 633, 634, 635,
	0, 636, 757, 637, 617, 618, 638, 639, 0, 640,
	641, 642, 643, 644, 645, 646, 758, 0, 647, 0,
	648, 649, 650, 651, 652, 653, 655, 619, 656, 661,
	662, 759, 657, 658, 659, 660, 760, 664, 665, 666,
	667, 0, 668, 669, 0, 663, 654, 0, 670, 671,
	672, 673, 674, 675, 0, 676, 677, 0, 678, 761,
	762, 763, 764, 0, 690, 0, 679, 681, 682, 683,
	684, 765, 685, 766, 0, 686, 687, 688, 689, 680,
	691, 692, 0, 0, 693, 694, 696, 698, 699, 695,
	697, 700, 0, 701, 0, 0, 702, 703, 704, 767,
	768, 769, 0, 706, 705, 707, 708, 709, 770, 710,
	711, 712, 302, 0, 0, 0, 713, 714, 771, 715,
	716, 717, 0, 0, 0, 0, 0, 0, 0, 308,
	309, 311, 310, 312, 313, 314, 315, 1406, 316, 317,
	0, 0, 0, 0, 0, 718, 0, 0, 0, 318,
	0, 319, 320, 321, 0, 322, 323, 324, 325, 326,
	327, 328, 719, 720, 0, 329, 721, 330, 722, 0,
	723, 331, 332, 333, 334, 335, 336, 337, 0, 0,
	0, 338, 724, 725, 726, 0, 339, 340, 727, 0,
	0, 0, 341, 342, 343, 344, 345, 346, 347, 348,
	0, 0, 350, 351, 352, 349, 353, 0, 354, 0,
	355, 356, 357, 358, 359, 360, 361, 0, 362, 363,
	364, 0, 365, 366, 367, 0, 0, 0, 0, 0,
	0, 0, 368, 369, 370, 371, 372, 0, 373, 375,
	728, 729, 0, 378, 380, 374, 376, 0, 379, 377,
	381, 0, 382, 383, 384, 0, 0, 385, 386, 387,
	0, 388, 389, 390, 0, 391, 392, 393, 0, 394,
	395, 730, 396, 397, 398, 400, 402, 399, 401, 403,
	404, 405, 406, 407, 731, 732, 408, 0, 0, 0,
	0, 0, 0, 0, 409, 410, 411, 733, 0, 0,
	0, 412, 0, 413, 414, 415, 0, 416, 417, 0,
	0, 418, 419, 420, 734, 735, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 0, 430, 736, 0, 737,
	431, 0, 432, 433, 434, 435, 436, 437, 438, 738,
	739, 740, 531, 0, 439, 440, 441, 0, 442, 443,
	444, 445, 446, 0, 0, 0, 0, 447, 448, 449,
	0, 0, 741, 450, 532, 451, 742, 743, 0, 744,
	0, 452, 453, 455, 0, 745, 0, 454, 456, 457,
	0, 458, 0, 0, 0, 459, 460, 461, 462, 463,
	464, 0, 465, 467, 466, 0, 469, 746, 468, 0,
	470, 471, 0, 0, 472, 473, 474, 475, 476, 477,
	480, 0, 0, 478, 479, 481, 482, 0, 483, 484,
	486, 489, 485, 487, 488, 490, 503, 504, 491, 492,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	506, 0, 505, 0, 507, 508, 509, 510, 511, 518,
	520, 521, 516, 517, 519, 522, 523, 525, 513, 514,
	515, 0, 524, 512, 0, 0, 0, 526, 527, 528,
	529, 0, 747, 530, 748, 533, 534, 0, 0, 535,
	0, 536, 0, 0, 538, 539, 540, 0, 0, 541,
	542, 749, 0, 543, 0, 750, 544, 545, 537, 546,
	547, 548, 549, 550, 551, 552, 553, 554, 555, 0,
	556, 557, 751, 558, 559, 560, 752, 561, 562, 563,
	753, 564, 754, 565, 566, 0, 567, 568, 569, 0,
	570, 571, 572, 573, 574, 575, 576, 577, 755, 578,
	579, 581, 580, 582, 0, 583, 0, 584, 585, 586,
	0, 0, 0, 0, 0, 587, 588, 590, 0, 591,
	592, 593, 594, 589, 595, 596, 597, 598, 599, 600,
	0, 602, 603, 601, 604, 605, 0, 606, 607, 608,
	609, 610, 756, 611, 0, 612, 613, 620, 621, 622,
	614, 615, 616, 623, 624, 625, 626, 627, 629, 628,
	0, 631, 632, 630, 633, 634, 635, 0, 636, 757,
	637, 617, 618, 638, 639, 0, 640, 641, 642, 643,
	644, 645, 646, 758, 0, 647, 0, 648, 649, 650,
	651, 652, 653, 655, 619, 656, 661, 662, 759, 657,
	658, 659, 660, 760, 664, 665, 666, 667, 0, 668,
	669, 0, 663, 654, 0, 670, 671, 672, 673, 674,
	675, 0, 676, 677, 0, 678, 761, 762, 763, 764,
	0, 690, 0, 679, 681, 682, 683, 684, 765, 685,
	766, 0, 686, 687, 688, 689, 680, 691, 692, 0,
	0, 693, 694, 696, 698, 699, 695, 697, 700, 0,
	701, 0, 0, 702, 703, 704, 767, 768, 769, 0,
	706, 705, 707, 708, 709, 770, 710, 711, 712, 877,
	0, 302, 0, 713, 714, 771, 715, 716, 717, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 308, 309,
	311, 310, 312, 313, 314, 315, 0, 316, 317, 0,
	0, 0, 0, 0, 718, 0, 0, 0, 318, 0,
	319, 320, 321, 0, 322, 323, 324, 325, 326, 327,
	328, 719, 720, 0, 329, 721, 330, 722, 0, 723,
	331, 332, 333, 334, 335, 336, 337, 0, 0, 0,
	338, 724, 725, 726, 0, 339, 340, 727, 0, 0,
	0, 341, 342, 343, 344, 345, 346, 347, 348, 0,
	0, 350, 351, 352, 349, 353, 0, 354, 0, 355,
	356, 357, 358, 359, 360, 361, 0, 362, 363, 364,
	0, 365, 366, 367, 0, 0, 0, 0, 0, 0,
	0, 368, 369, 370, 371, 372, 0, 373, 375, 728,
	729, 0, 378, 380, 374, 376, 0, 379, 377, 381,
	0, 382, 383, 384, 0, 0, 385, 386, 387, 0,
	388, 389, 390, 0, 391, 392, 393, 0, 394, 395,
	730, 396, 397, 398, 400, 402, 399, 401, 403, 404,
	405, 406, 407, 731, 732, 408, 0, 0, 0, 0,
	0, 0, 0, 409, 410, 411, 733, 0, 0, 0,
	412, 0, 413, 414, 415, 0, 416, 417, 0, 0,
	418, 419, 420, 734, 735, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 0, 430, 736, 0, 737, 431,
	0, 432, 433, 434, 435, 436, 437, 438, 738, 739,
	740, 531, 0, 439, 440, 441, 0, 442, 443, 444,
	445, 446, 0, 0, 0, 0, 447, 448, 449, 0,
	0, 741, 450, 532, 451, 742, 743, 0, 744, 0,
	452, 453, 455, 0, 745, 0, 454, 456, 457, 0,
	458, 0, 0, 0, 459, 460, 461, 462, 463, 464,
	0, 465, 467, 466, 0, 469, 746, 468, 0, 470,
	471, 0, 0, 472, 473, 474, 475, 476, 477, 480,
	0, 0, 478, 479, 481, 482, 0, 483, 484, 486,
	489, 485, 487, 488, 490, 503, 504, 491, 492, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 506,
	0, 505, 0, 507, 508, 509, 510, 511, 518, 520,
	521, 516, 517, 519, 522, 523, 525, 513, 514, 515,
	0, 524, 512, 0, 0, 0, 526, 527, 528, 529,
	0, 747, 530, 748, 533, 534, 0, 0, 535, 0,
	536, 0, 0, 538, 539, 540, 0, 0, 541, 542,
	749, 0, 543, 0, 750, 544, 545, 537, 546, 547,
	548, 549, 550, 551, 552, 553, 554, 555, 0, 556,
	557, 751, 558, 559, 560, 752, 561, 562, 563, 753,
	564, 754, 565, 566, 0, 567, 568, 569, 0, 570,
	571, 572, 573, 574, 575, 576, 577, 755, 578, 579,
	581, 580, 582, 0, 583, 0, 584, 585, 586, 0,
	0, 0, 0, 0, 587, 588, 590, 0, 591, 592,
	593, 594, 589, 595, 596, 597, 598, 599, 600, 0,
	602, 603, 601, 604, 605, 0, 606, 607, 608, 609,
	610, 756, 611, 0, 612, 613, 620, 621, 622, 614,
	615, 616, 623, 624, 625, 626, 627, 629, 628, 0,
	631, 632, 630, 633, 634, 635, 0, 636, 757, 637,
	617, 618, 638, 639, 0, 640, 641, 642, 643, 644,
	645, 646, 758, 0, 647, 0, 648, 649, 650, 651,
	652, 653, 655, 619, 656, 661, 662, 759, 657, 658,
	659, 660, 760, 664, 665, 666, 667, 0, 668, 669,
	0, 663, 654, 0, 670, 671, 672, 673, 674, 675,
	0, 676, 677, 0, 678, 761, 762, 763, 764, 0,
	690, 0, 679, 681, 682, 683, 684, 765, 685, 766,
	0, 686, 687, 688, 689, 680, 691, 692, 0, 0,
	693, 694, 696, 698, 699, 695, 697, 700, 0, 701,
	0, 0, 702, 703, 704, 767, 768, 769, 0, 706,
	705, 707, 708, 709, 770, 710, 711, 712, 857, 0,
	302, 0, 713, 714, 771, 715, 716, 717, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 308, 309, 311,
	310, 312, 313, 314, 315, 0, 316, 317, 0, 0,
	0, 0, 0, 718, 0, 0, 0, 318, 0, 319,
	320, 321, 0, 322, 323, 324, 325, 326, 327, 328,
	719, 720, 0, 329, 721, 330, 722, 0, 723, 331,
	332, 333, 334, 335, 336, 337, 0, 0, 0, 338,
	724, 725, 726, 0, 339, 853, 727, 0, 0, 0,
	341, 342, 343, 344, 345, 346, 347, 348, 0, 0,
	350, 351, 352, 349, 353, 0, 852, 0, 355, 356,
	357, 358, 359, 360, 361, 0, 362, 363, 364, 0,
	365, 366, 367, 0, 0, 0, 0, 0, 0, 0,
	368, 369, 370, 371, 372, 0, 373, 375, 728, 729,
	0, 378, 380, 374, 376, 0, 379, 377, 381, 0,
	382, 383, 384, 0, 0, 385, 386, 387, 0, 388,
	389, 390, 0, 391, 392, 393, 0, 394, 395, 730,
	396, 397, 398, 400, 402, 399, 401, 403, 404, 405,
	406, 407, 731, 732, 408, 0, 0, 0, 0, 0,
	0, 0, 409, 410, 411, 733, 0, 0, 0, 412,
	0, 413, 414, 415, 0, 416, 417, 0, 0, 418,
	419, 420, 734, 735, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 0, 430, 736, 0, 737, 431, 0,
	432, 433, 434, 435, 436, 437, 438, 738, 739, 740,
	531, 0, 439, 440, 441, 0, 442, 443, 444, 445,
	446, 0, 0, 0, 0, 447, 448, 449, 0, 0,
	741, 450, 532, 451, 742, 743, 0, 744, 0, 452,
	453, 455, 0, 745, 0, 454, 456, 457, 0, 458,
	0, 0, 0, 459, 460, 461, 462, 463, 464, 0,
	465, 467, 466, 0, 469, 746, 468, 0, 470, 471,
	0, 0, 472, 473, 474, 475, 476, 858, 480, 0,
	0, 478, 479, 481, 482, 0, 483, 484, 486, 489,
	485, 487, 488, 490, 503, 504, 491, 492, 493, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 506, 0,
	867, 0, 507, 508, 509, 510, 511, 518, 520, 521,
	516, 517, 519, 522, 523, 525, 513, 514, 515, 0,
	524, 512, 0, 0, 0, 526, 527, 528, 529, 0,
	747, 530, 748, 533, 534, 0, 0, 535, 0, 536,
	0, 0, 538, 539, 540, 0, 0, 541, 542, 749,
	0, 543, 0, 750, 544, 545, 537, 546, 547, 548,
	549, 550, 551, 552, 553, 554, 555, 0, 556, 557,
	751, 558, 559, 560, 752, 561, 562, 563, 753, 564,
	754, 565, 566, 0, 567, 568, 569, 0, 570, 571,
	572, 573, 574, 575, 576, 577, 755, 578, 579, 581,
	580, 582, 0, 583, 0, 584, 585, 586, 0, 0,
	0, 0, 0, 587, 588, 590, 0, 591, 592, 593,
	594, 589, 595, 596, 597, 598, 599, 600, 0, 602,
	603, 601, 604, 605, 0, 866, 607, 608, 609, 610,
	854, 611, 0, 612, 613, 620, 621, 622, 614, 615,
	616, 865, 624, 625, 626, 627, 629, 628, 0, 631,
	632, 630, 633, 855, 635, 0, 636, 757, 637, 617,
	618, 638, 639, 0, 640, 641, 642, 643, 644, 645,
	646, 758, 0, 647, 0, 648, 649, 650, 651, 652,
	653, 655, 619, 656, 661, 662, 759, 657, 658, 659,
	660, 760, 664, 665, 666, 667, 0, 668, 669, 0,
	663, 654, 0, 670, 671, 672, 673, 674, 675, 0,
	676, 677, 0, 678, 863, 762, 763, 764, 0, 690,
	0, 679, 859, 682, 683, 684, 765, 685, 766, 0,
	686, 687, 688, 689, 680, 691, 692, 0, 0, 693,
	694, 696, 698, 699, 695, 697, 700, 0, 701, 0,
	0, 702, 703, 704, 767, 768, 769, 0, 706, 705,
	707, 708, 709, 770, 710, 711, 712, 846, 0, 302,
	0, 713, 714, 771, 715, 716, 717, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 308, 309, 311, 310,
	312, 313, 314, 315, 0, 316, 317, 0, 0, 0,
	0, 0, 718, 0, 0, 0, 318, 0, 319, 320,
	321, 0, 322, 323, 324, 325, 326, 327, 328, 719,
	720, 0, 329, 721, 330, 722, 0, 723, 331, 332,
	333, 334, 335, 336, 337, 0, 0, 0, 338, 724,
	725, 726, 0, 339, 340, 727, 0, 0, 0, 341,
	342, 343, 344, 345, 346, 347, 348, 0, 0, 350,
	351, 352, 349, 353, 0, 354, 0, 355, 356, 357,
	358, 359, 360, 361, 0, 362, 363, 364, 0, 365,
	366, 367, 0, 0, 0, 0, 0, 0, 0, 368,
	369, 370, 371, 372, 0, 373, 375, 728, 729, 0,
	378, 380, 374, 376, 0, 379, 377, 381, 0, 382,
	383, 384, 0, 0, 385, 386, 387, 0, 388, 389,
	390, 0, 391, 392, 393, 0, 394, 395, 730, 396,
	397, 398, 400, 402, 399, 401, 403, 404, 405, 406,
	407, 731, 732, 408, 0, 0, 0, 0, 0, 0,
	0, 409, 410, 411, 733, 0, 0, 0, 412, 0,
	413, 414, 415, 0, 416, 417, 0, 0, 418, 419,
	420, 734, 735, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 0, 430, 736, 0, 737, 431, 0, 432,
	433, 434, 435, 436, 437, 438, 738, 739, 740, 531,
	0, 439, 440, 441, 0, 442, 443, 444, 445, 446,
	0, 0, 0, 0, 447, 448, 449, 0, 0, 741,
	450, 532, 451, 742, 743, 0, 744, 0, 452, 453,
	455, 0, 745, 0, 454, 456, 457, 0, 458, 0,
	0, 0, 459, 460, 461, 462, 463, 464, 0, 465,
	467, 466, 0, 469, 746, 468, 0, 470, 471, 0,
	0, 472, 473, 474, 475, 476, 477, 480, 0, 0,
	478, 479, 481, 482, 0, 483, 484, 486, 489, 485,
	487, 488, 490, 503, 504, 491, 492, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 506, 0, 505,
	0, 507, 508, 509, 510, 511, 518, 520, 521, 516,
	517, 519, 522, 523, 525, 513, 514, 515, 0, 524,
	512, 0, 0, 0, 526, 527, 528, 529, 0, 747,
	530, 748, 533, 534, 0, 0, 535, 0, 536, 0,
	0, 538, 539, 540, 0, 0, 541, 542, 749, 0,
	543, 0, 750, 544, 545, 537, 546, 547, 548, 549,
	550, 551, 552, 553, 554, 555, 0, 556, 557, 751,
	558, 559, 560, 752, 561, 562, 563, 753, 564, 754,
	565, 566, 0, 567, 568, 569, 0, 570, 571, 572,
	573, 574, 575, 576, 577, 755, 578, 579, 581, 580,
	582, 0, 583, 0, 584, 585, 586, 0, 0, 0,
	0, 0, 587, 588, 590, 0, 591, 592, 593, 594,
	589, 595, 596, 597, 598, 599, 600, 0, 602, 603,
	601, 604, 605, 0, 606, 607, 608, 609, 610, 756,
	611, 0, 612, 613, 847, 621, 622, 614, 615, 616,
	623, 624, 625, 626, 627, 629, 628, 0, 631, 632,
	630, 633, 634, 635, 0, 636, 757, 637, 617, 618,
	638, 639, 0, 640, 641, 642, 643, 644, 645, 646,
	758, 0, 647, 0, 648, 649, 650, 651, 652, 653,
	655, 619, 656, 661, 662, 759, 657, 658, 659, 660,
	760, 664, 665, 666, 667, 0, 668, 669, 0, 663,
	654, 0, 670, 671, 672, 673, 674, 675, 0, 676,
	677, 0, 678, 761, 762, 763, 764, 0, 690, 0,
	679, 681, 682, 683, 684, 765, 685, 766, 0, 686,
	687, 688, 689, 680, 691, 692, 0, 0, 693, 694,
	696, 698, 699, 695, 697, 700, 0, 701, 0, 0,
	702, 703, 704, 767, 768, 769, 0, 706, 705, 707,
	708, 709, 770, 710, 711, 712, 808, 0, 302, 0,
	713, 714, 771, 715, 716, 717, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 308, 309, 311, 310, 312,
	313, 314, 315, 0, 316, 317, 0, 0, 0, 0,
	0, 718, 0, 0, 0, 318, 0, 319, 320, 321,
	0, 322, 323, 324, 325, 326, 327, 328, 719, 720,
	0, 329, 721, 330, 722, 0, 723, 331, 332, 333,
	334, 335, 336, 337, 0, 0, 0, 338, 724, 725,
	726, 0, 339, 340, 727, 0, 0, 0, 341, 342,
	343, 344, 345, 346, 347, 348, 0, 0, 350, 351,
	352, 349, 353, 0, 354, 0, 355, 356, 357, 358,
	359, 360, 361, 0, 362, 363, 364, 0, 365, 366,
	367, 0, 0, 0, 0, 0, 0, 0, 368, 369,
	370, 371, 372, 0, 373, 375, 728, 729, 0, 378,
	380, 374, 376, 0, 379, 377, 381, 0, 382, 383,
	384, 0, 0, 385, 386, 387, 0, 388, 389, 390,
	0, 391, 392, 393, 0, 394, 395, 730, 396, 397,
	398, 400, 402, 399, 401, 403, 404, 405, 406, 407,
	731, 732, 408, 0, 0, 0, 0, 0, 0, 0,
	409, 410, 411, 733, 0, 0, 0, 412, 0, 413,
	414, 415, 0, 416, 417, 0, 0, 418, 419, 420,
	734, 735, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 0, 430, 736, 0, 737, 431, 0, 432, 433,
	434, 435, 436, 437, 438, 738, 739, 740, 531, 0,
	439, 440, 441, 0, 442, 443, 444, 445, 446, 0,
	0, 0, 0, 447, 448, 449, 0, 0, 741, 450,
	532, 451, 742, 743, 0, 744, 0, 452, 453, 455,
	0, 745, 0, 454, 456, 457, 0, 458, 0, 0,
	0, 459, 460, 461, 462, 463, 464, 0, 465, 467,
	466, 0, 469, 746, 468, 0, 470, 471, 0, 0,
	472, 473, 474, 475, 476, 477, 480, 0, 0, 478,
	479, 481, 482, 0, 483, 484, 486, 489, 485, 487,
	488, 490, 503, 504, 491, 492, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 506, 0, 505, 0,
	507, 508, 509, 510, 511, 518, 520, 521, 516, 517,
	519, 522, 523, 525, 513, 514, 515, 0, 524, 512,
	0, 0, 0, 526, 527, 528, 529, 0, 747, 530,
	748, 533, 534, 0, 0, 535, 0, 536, 0, 0,
	538, 539, 540, 0, 0, 541, 542, 749, 0, 543,
	0, 750, 544, 545, 537, 546, 547, 548, 549, 550,
	551, 552, 553, 554, 555, 0, 556, 557, 751, 558,
	559, 560, 752, 561, 562, 563, 753, 564, 754, 565,
	566, 0, 567, 568, 569, 0, 570, 571, 572, 573,
	574, 575, 576, 577, 755, 578, 579, 581, 580, 582,
	0, 583, 0, 584, 585, 586, 0, 0, 0, 0,
	0, 587, 588, 590, 0, 591, 592, 593, 594, 589,
	595, 596, 597, 598, 599, 600, 0, 602, 603, 601,
	604, 605, 0, 606, 607, 608, 609, 610, 756, 611,
	0, 612, 613, 620, 621, 622, 614, 615, 616, 623,
	624, 625, 626, 627, 629, 628, 0, 631, 632, 630,
	633, 634, 635, 0, 636, 757, 637, 617, 618, 638,
	639, 0, 640, 641, 642, 643, 644, 645, 646, 758,
	0, 647, 0, 648, 649, 650, 651, 652, 653, 655,
	619, 656, 661, 662, 759, 657, 658, 659, 660, 760,
	664, 665, 666, 667, 0, 668, 669, 0, 663, 654,
	0, 670, 671, 672, 673, 674, 675, 0, 676, 677,
	0, 678, 761, 762, 763, 764, 0, 690, 0, 679,
	681, 682, 683, 684, 765, 685, 766, 0, 686, 687,
	688, 689, 680, 691, 692, 0, 0, 693, 694, 696,
	698, 699, 695, 697, 700, 0, 701, 0, 0, 702,
	703, 704, 767, 768, 769, 0, 706, 705, 707, 708,
	709, 770, 710, 711, 712, 800, 0, 302, 0, 713,
	714, 771, 715, 716, 717, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 308, 309, 311, 310, 312, 313,
	314, 315, 0, 316, 317, 0, 0, 0, 0, 0,
	718, 0, 0, 0, 318, 0, 319, 320, 321, 0,
	322, 323, 324, 325, 326, 327, 328, 719, 720, 0,
	329, 721, 330, 722, 0, 723, 331, 332, 333, 334,
	335, 336, 337, 0, 0, 0, 338, 724, 725, 726,
	0, 339, 340, 727, 0, 0, 0, 341, 342, 343,
	344, 345, 346, 347, 348, 0, 0, 350, 351, 352,
	349, 353, 0, 354, 0, 355, 356, 357, 358, 359,
	360, 361, 0, 362, 363, 364, 0, 365, 366, 367,
	0, 0, 0, 0, 0, 0, 0, 368, 369, 370,
	371, 372, 0, 373, 375, 728, 729, 0, 378, 380,
	374, 376, 0, 379, 377, 381, 0, 382, 383, 384,
	0, 0, 385, 386, 387, 0, 388, 389, 390, 0,
	391, 392, 393, 0, 394, 395, 730, 396, 397, 398,
	400, 402, 399, 401, 403, 404, 405, 406, 407, 731,
	732, 408, 0, 0, 0, 0, 0, 0, 0, 409,
	410, 411, 733, 0, 0, 0, 412, 0, 413, 414,
	415, 0, 416, 417, 0, 0, 418, 419, 420, 734,
	735, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	0, 430, 736, 0, 737, 431, 0, 432, 433, 434,
	435, 436, 437, 438, 738, 739, 740, 531, 0, 439,
	440, 441, 0, 442, 443, 444, 445, 446, 0, 0,
	0, 0, 447, 448, 449, 0, 0, 741, 450, 532,
	451, 742, 743, 0, 744, 0, 452, 453, 455, 0,
	745, 0, 454, 456, 457, 0, 458, 0, 0, 0,
	459, 460, 461, 462, 463, 464, 0, 465, 467, 466,
	0, 469, 746, 468, 0, 470, 471, 0, 0, 472,
	473, 474, 475, 476, 477, 480, 0, 0, 478, 479,
	481, 482, 0, 483, 484, 486, 489, 485, 487, 488,
	490, 503, 504, 491, 492, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 506, 0, 505, 0, 507,
	508, 509, 510, 511, 518, 520, 521, 516, 517, 519,
	522, 523, 525, 513, 514, 515, 0, 524, 512, 0,
	0, 0, 526, 527, 528, 529, 0, 747, 530, 748,
	533, 534, 0, 0, 535, 0, 536, 0, 0, 538,
	539, 540, 0, 0, 541, 542, 749, 0, 543, 0,
	750, 544, 545, 537, 546, 547, 548, 549, 550, 551,
	552, 553, 554, 555, 0, 556, 557, 751, 558, 559,
	560, 752, 561, 562, 563, 753, 564, 754, 565, 566,
	0, 567, 568, 569, 0, 570, 571, 572, 573, 574,
	575, 576, 577, 755, 578, 579, 581, 580, 582, 0,
	583, 0, 584, 585, 586, 0, 0, 0, 0, 0,
	587, 588, 590, 0, 591, 592, 593, 594, 589, 595,
	596, 597, 598, 599, 600, 0, 602, 603, 601, 604,
	605, 0, 606, 607, 608, 609, 610, 756, 611, 0,
	612, 613, 620, 621, 622, 614, 615, 616, 623, 624,
	625, 626, 627, 629, 628, 0, 631, 632, 630, 633,
	634, 635, 0, 636, 757, 637, 617, 618, 638, 639,
	0, 640, 641, 642, 643, 644, 645, 646, 758, 0,
	647, 0, 648, 649, 650, 651, 652, 653, 655, 619,
	656, 661, 662, 759, 657, 658, 659, 660, 760, 664,
	665, 666, 667, 0, 668, 669, 0, 663, 654, 0,
	670, 671, 672, 673, 674, 675, 0, 676, 677, 0,
	678, 761, 762, 763, 764, 0, 690, 0, 679, 681,
	682, 683, 684, 765, 685, 766, 0, 686, 687, 688,
	689, 680, 691, 692, 0, 0, 693, 694, 696, 698,
	699, 695, 697, 700, 0, 701, 0, 0, 702, 703,
	704, 767, 768, 769, 0, 706, 705, 707, 708, 709,
	770, 710, 711, 712, 777, 0, 302, 0, 713, 714,
	771, 715, 716, 717, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 308, 309, 311, 310, 312, 313, 314,
	315, 0, 316, 317, 0, 0, 0, 0, 0, 718,
	0, 0, 0, 318, 0, 319, 320, 321, 0, 322,
	323, 324, 325, 326, 327, 328, 719, 720, 0, 329,
	721, 330, 722, 0, 723, 331, 332, 333, 334, 335,
	336, 337, 0, 0, 0, 338, 724, 725, 726, 0,
	339, 340, 727, 0, 0, 0, 341, 342, 343, 344,
	345, 346, 347, 348, 0, 0, 350, 351, 352, 349,
	353, 0, 354, 0, 355, 356, 357, 358, 359, 360,
	361, 0, 362, 363, 364, 0, 365, 366, 367, 0,
	0, 0, 0, 0, 0, 0, 368, 369, 370, 371,
	372, 0, 373, 375, 728, 729, 0, 378, 380, 374,
	376, 0, 379, 377, 381, 0, 382, 383, 384, 0,
	0, 385, 386, 387, 0, 388, 389, 390, 0, 391,
	392, 393, 0, 394, 395, 730, 396, 397, 398, 400,
	402, 399, 401, 403, 404, 405, 406, 407, 731, 732,
	408, 0, 0, 0, 0, 0, 0, 0, 409, 410,
	411, 733, 0, 0, 0, 412, 0, 413, 414, 415,
	0, 416, 417, 0, 0, 418, 419, 420, 734, 735,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 0,
	430, 736, 0, 737, 431, 0, 432, 433, 434, 435,
	436, 437, 438, 738, 739, 740, 531, 0, 439, 440,
	441, 0, 442, 443, 444, 445, 446, 0, 0, 0,
	0, 447, 448, 449, 0, 0, 741, 450, 532, 451,
	742, 743, 0, 744, 0, 452, 453, 455, 0, 745,
	0, 454, 456, 457, 0, 458, 0, 0, 0, 459,
	460, 461, 462, 463, 464, 0, 465, 467, 466, 0,
	469, 746, 468, 0, 470, 471, 0, 0, 472, 473,
	474, 475, 476, 477, 480, 0, 0, 478, 479, 481,
	482, 0, 483, 484, 486, 489, 485, 487, 488, 490,
	503, 504, 491, 492, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 506, 0, 505, 0, 507, 508,
	509, 510, 511, 518, 520, 521, 516, 517, 519, 522,
	523, 525, 513, 514, 515, 0, 524, 512, 0, 0,
	0, 526, 527, 528, 529, 0, 747, 530, 748, 533,
	534, 0, 0, 535, 0, 536, 0, 0, 538, 539,
	540, 0, 0, 541, 542, 749, 0, 543, 0, 750,
	544, 545, 537, 546, 547, 548, 549, 550, 551, 552,
	553, 554, 555, 0, 556, 557, 751, 558, 559, 560,
	752, 561, 562, 563, 753, 564, 754, 565, 566, 0,
	567, 568, 569, 0, 570, 571, 572, 573, 574, 575,
	576, 577, 755, 578, 579, 581, 580, 582, 0, 583,
	0, 584, 585, 586, 0, 0, 0, 0, 0, 587,
	588, 590, 0, 591, 592, 593, 594, 589, 595, 596,
	597, 598, 599, 600, 0, 602, 603, 601, 604, 605,
	0, 606, 607, 608, 609, 610, 756, 611, 0, 612,
	613, 620, 621, 622, 614, 615, 616, 623, 624, 625,
	626, 627, 629, 628, 0, 631, 632, 630, 633, 634,
	635, 0, 636, 757, 637, 617, 618, 638, 639, 0,
	640, 641, 642, 643, 644, 645, 646, 758, 0, 647,
	0, 648, 649, 650, 651, 652, 653, 655, 619, 656,
	661, 662, 759, 657, 658, 659, 660, 760, 664, 665,
	666, 667, 0, 668, 669, 0, 663, 654, 0, 670,
	671, 672, 673, 674, 675, 0, 676, 677, 0, 678,
	761, 762, 763, 764, 0, 690, 0, 679, 681, 682,
	683, 684, 765, 685, 766, 0, 686, 687, 688, 689,
	680, 691, 692, 0, 0, 693, 694, 696, 698, 699,
	695, 697, 700, 0, 701, 0, 0, 702, 703, 704,
	767, 768, 769, 0, 706, 705, 707, 708, 709, 770,
	710, 711, 712, 302, 0, 0, 0, 713, 714, 771,
	715, 716, 717, 0, 0, 0, 0, 0, 0, 0,
	308, 309, 311, 310, 312, 313, 314, 315, 0, 316,
	317, 0, 0, 0, 0, 0, 718, 0, 0, 0,
	318, 0, 319, 320, 321, 0, 322, 323, 324, 325,
	326, 327, 328, 719, 720, 0, 329, 721, 330, 722,
	0, 723, 331, 332, 333, 334, 335, 336, 337, 0,
	0, 0, 338, 724, 725, 726, 0, 339, 340, 727,
	0, 0, 0, 341, 342, 343, 344, 345, 346, 347,
	348, 0, 0, 350, 351, 352, 349, 353, 0, 354,
	0, 355, 356, 357, 358, 359, 360, 361, 0, 362,
	363, 364, 0, 365, 366, 367, 0, 0, 0, 0,
	0, 0, 0, 368, 369, 370, 371, 372, 0, 373,
	375, 728, 729, 0, 378, 380, 374, 376, 0, 379,
	377, 381, 0, 382, 383, 384, 0, 0, 385, 386,
	387, 0, 388, 389, 390, 0, 391, 392, 393, 0,
	394, 395, 730, 396, 397, 398, 400, 402, 399, 401,
	403, 404, 405, 406, 407, 731, 732, 408, 0, 0,
	0, 0, 0, 0, 0, 409, 410, 411, 733, 0,
	0, 0, 412, 0, 413, 414, 415, 0, 416, 417,
	0, 0, 418, 419, 420, 734, 735, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 0, 430, 736, 0,
	737, 431, 0, 432, 433, 434, 435, 436, 437, 438,
	738, 739, 740, 531, 0, 439, 440, 441, 0, 442,
	443, 444, 445, 446, 0, 0, 0, 0, 447, 448,
	449, 0, 0, 741, 450, 532, 451, 742, 743, 0,
	744, 0, 452, 453, 455, 0, 745, 0, 454, 456,
	457, 0, 458, 0, 0, 0, 459, 460, 461, 462,
	463, 464, 0, 465, 467, 466, 0, 469, 746, 468,
	0, 470, 471, 0, 0, 472, 473, 474, 475, 476,
	477, 480, 0, 0, 478, 479, 481, 482, 0, 483,
	484, 486, 489, 485, 487, 488, 490, 503, 504, 491,
	492, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 506, 0, 505, 0, 507, 508, 509, 510, 511,
	518, 520, 521, 516, 517, 519, 522, 523, 525, 513,
	514, 515, 0, 524, 512, 0, 0, 0, 526, 527,
	528, 529, 0, 747, 530, 748, 533, 534, 0, 0,
	535, 0, 536, 0, 0, 538, 539, 540, 0, 0,
	541, 542, 749, 0, 543, 0, 750, 544, 545, 537,
	546, 547, 548, 549, 550, 551, 552, 553, 554, 555,
	0, 556, 557, 751, 558, 559, 560, 752, 561, 562,
	563, 753, 564, 754, 565, 566, 0, 567, 568, 569,
	0, 570, 571, 572, 573, 574, 575, 576, 577, 755,
	578, 579, 581, 580, 582, 0, 583, 0, 584, 585,
	586, 0, 0, 0, 0, 0, 587, 588, 590, 0,
	591, 592, 593, 594, 589, 595, 596, 597, 598, 599,
	600, 0, 602, 603, 601, 604, 605, 0, 606, 607,
	608, 609, 610, 756, 611, 0, 612, 613, 620, 621,
	622, 614, 615, 616, 623, 624, 625, 626, 627, 629,
	628, 0, 631, 632, 630, 633, 634, 635, 0, 636,
	757, 637, 617, 618, 638, 639, 0, 640, 641, 642,
	643, 644, 645, 646, 758, 0, 647, 0, 648, 649,
	650, 651, 652, 653, 655, 619, 656, 661, 662, 759,
	657, 658, 659, 660, 760, 664, 665, 666, 667, 0,
	668, 669, 0, 663, 654, 0, 670, 671, 672, 673,
	674, 675, 0, 676, 677, 0, 678, 761, 762, 763,
	764, 0, 690, 0, 679, 681, 682, 683, 684, 765,
	685, 766, 0, 686, 687, 688, 689, 680, 691, 692,
	0, 0, 693, 694, 696, 698, 699, 695, 697, 700,
	0, 701, 0, 0, 702, 703, 704, 767, 768, 769,
	0, 706, 705, 707, 708, 709, 770, 710, 711, 712,
	302, 0, 0, 0, 713, 714, 771, 715, 716, 717,
	0, 0, 0, 0, 0, 0, 0, 308, 309, 311,
	310, 312, 313, 314, 315, 0, 316, 317, 0, 0,
	0, 0, 0, 718, 0, 0, 0, 318, 0, 319,
	320, 321, 0, 322, 323, 324, 325, 326, 327, 328,
	719, 720, 0, 329, 721, 330, 722, 0, 723, 331,
	332, 333, 334, 335, 336, 337, 0, 0, 0, 338,
	724, 725, 726, 0, 339, 340, 727, 0, 0, 0,
	341, 342, 343, 344, 345, 346, 347, 348, 0, 0,
	350, 351, 352, 349, 353, 0, 354, 0, 355, 356,
	357, 358, 359, 360, 361, 0, 362, 363, 364, 0,
	365, 366, 367, 0, 0, 0, 0, 0, 0, 0,
	368, 369, 370, 371, 372, 0, 373, 375, 728, 729,
	0, 378, 380, 374, 376, 0, 379, 377, 381, 0,
	382, 383, 384, 0, 0, 385, 386, 387, 0, 388,
	389, 390, 0, 391, 392, 393, 0, 394, 395, 730,
	396, 397, 398, 400, 402, 399, 401, 403, 404, 405,
	406, 407, 731, 732, 408, 0, 0, 0, 0, 0,
	0, 0, 409, 410, 411, 733, 0, 0, 0, 412,
	0, 413, 414, 415, 0, 416, 417, 0, 0, 418,
	419, 420, 734, 735, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 0, 430, 736, 0, 737, 431, 0,
	432, 433, 434, 435, 436, 437, 438, 4008, 739, 740,
	531, 0, 439, 440, 441, 0, 442, 443, 444, 445,
	446, 0, 0, 0, 0, 447, 448, 449, 0, 0,
	741, 450, 532, 451, 742, 743, 0, 744, 0, 452,
	453, 455, 0, 745, 0, 454, 456, 457, 0, 458,
	0, 0, 0, 459, 460, 461, 462, 463, 464, 0,
	465, 467, 466, 0, 469, 746, 468, 0, 470, 471,
	0, 0, 472, 473, 474, 475, 476, 477, 480, 0,
	0, 478, 479, 481, 482, 0, 483, 484, 486, 489,
	485, 487, 488, 490, 503, 504, 491, 492, 493, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 506, 0,
	505, 0, 507, 508, 509, 510, 511, 518, 520, 521,
	516, 517, 519, 522, 523, 525, 513, 514, 515, 0,
	524, 512, 0, 0, 0, 526, 527, 528, 529, 0,
	747, 530, 748, 533, 534, 0, 0, 535, 0, 536,
	0, 0, 538, 539, 540, 0, 0, 541, 542, 749,
	0, 543, 0, 750, 544, 545, 537, 546, 547, 548,
	549, 550, 551, 552, 553, 554, 555, 0, 556, 557,
	751, 558, 559, 560, 752, 561, 562, 563, 753, 564,
	754, 565, 566, 0, 567, 568, 569, 0, 570, 571,
	572, 573, 574, 575, 576, 577, 755, 578, 579, 581,
	580, 582, 0, 583, 0, 584, 585, 586, 0, 0,
	0, 0, 0, 587, 588, 590, 0, 591, 592, 593,
	594, 589, 595, 596, 597, 598, 599, 600, 0, 602,
	603, 601, 604, 605, 0, 606, 607, 608, 609, 610,
	756, 611, 0, 612, 613, 620, 621, 622, 614, 615,
	616, 623, 624, 625, 626, 627, 629, 628, 0, 631,
	632, 630, 633, 634, 635, 0, 636, 757, 637, 617,
	618, 638, 639, 0, 640, 641, 642, 643, 644, 645,
	646, 758, 0, 647, 0, 648, 649, 650, 651, 652,
	653, 655, 619, 656, 661, 662, 759, 657, 658, 659,
	660, 760, 664, 665, 666, 667, 0, 668, 669, 0,
	663, 654, 0, 670, 671, 672, 673, 674, 675, 0,
	676, 677, 0, 678, 761, 762, 763, 764, 0, 690,
	0, 679, 681, 682, 683, 684, 765, 685, 766, 0,
	686, 687, 688, 689, 680, 691, 692, 0, 0, 693,
	694, 696, 698, 699, 695, 697, 700, 0, 701, 0,
	0, 702, 703, 704, 767, 768, 769, 0, 706, 705,
	707, 708, 709, 770, 710, 711, 712, 302, 0, 0,
	0, 713, 714, 771, 715, 716, 717, 0, 0, 0,
	0, 0, 0, 0, 308, 309, 311, 310, 312, 313,
	314, 315, 0, 316, 317, 0, 0, 0, 0, 0,
	718, 0, 0, 0, 318, 0, 319, 320, 321, 0,
	322, 323, 324, 325, 326, 327, 328, 719, 720, 0,
	329, 721, 330, 722, 0, 723, 331, 332, 333, 334,
	335, 336, 337, 0, 0, 0, 338, 724, 725, 726,
	0, 339, 340, 727, 0, 0, 0, 341, 342, 343,
	344, 345, 346, 347, 348, 0, 0, 350, 351, 352,
	349, 353, 0, 354, 0, 355, 356, 357, 358, 359,
	360, 361, 0, 362, 363, 364, 0, 365, 366, 367,
	0, 0, 0, 0, 0, 0, 0, 368, 369, 370,
	371, 372, 0, 373, 375, 728, 729, 0, 378, 380,
	374, 376, 0, 379, 377, 381, 0, 382, 383, 384,
	0, 0, 385, 386, 387, 0, 388, 389, 390, 0,
	391, 392, 393, 0, 394, 395, 730, 396, 397, 398,
	400, 402, 399, 401, 403, 404, 405, 406, 407, 731,
	732, 408, 0, 0, 0, 0, 0, 0, 0, 409,
	410, 411, 733, 0, 0, 0, 412, 0, 413, 414,
	415, 0, 416, 417, 0, 0, 418, 419, 420, 734,
	735, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	0, 430, 736, 0, 737, 431, 0, 432, 433, 434,
	435, 436, 437, 438, 738, 739, 740, 531, 0, 439,
	440, 441, 0, 442, 443, 444, 445, 446, 0, 0,
	0, 0, 447, 448, 449, 0, 0, 741, 450, 532,
	451, 742, 743, 0, 744, 0, 452, 453, 455, 0,
	745, 0, 454, 456, 457, 0, 458, 0, 0, 0,
	459, 460, 461, 462, 463, 464, 0, 465, 467, 466,
	0, 469, 746, 468, 0, 470, 471, 0, 0, 472,
	473, 474, 475, 476, 477, 480, 0, 0, 478, 479,
	481, 482, 0, 483, 484, 486, 489, 485, 487, 488,
	490, 503, 504, 491, 492, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 506, 0, 505, 0, 507,
	508, 509, 510, 511, 518, 520, 521, 516, 517, 519,
	522, 523, 525, 513, 514, 515, 0, 524, 512, 0,
	0, 0, 526, 527, 528, 529, 0, 747, 530, 748,
	533, 534, 0, 0, 535, 0, 536, 0, 0, 538,
	539, 540, 0, 0, 541, 542, 749, 0, 543, 0,
	750, 544, 545, 537, 546, 547, 548, 549, 550, 551,
	552, 553, 554, 555, 0, 556, 557, 751, 558, 559,
	560, 752, 561, 562, 563, 753, 564, 754, 565, 566,
	0, 567, 568, 569, 0, 570, 571, 572, 573, 574,
	575, 576, 577, 755, 578, 579, 581, 580, 582, 0,
	583, 0, 584, 585, 586, 0, 0, 0, 0, 0,
	587, 588, 590, 0, 591, 592, 593, 594, 589, 595,
	596, 597, 598, 599, 600, 0, 602, 603, 601, 604,
	605, 0, 866, 607, 608, 609, 610, 756, 611, 0,
	612, 613, 620, 621, 622, 614, 615, 616, 865, 624,
	625, 626, 627, 629, 628, 0, 631, 632, 630, 633,
	634, 635, 0, 636, 757, 637, 617, 618, 638, 639,
	0, 640, 641, 642, 643, 644, 645, 646, 758, 0,
	647, 0, 648, 649, 650, 651, 652, 653, 655, 619,
	656, 661, 662, 759, 657, 658, 659, 660, 760, 664,
	665, 666, 667, 0, 668, 669, 0, 663, 654, 0,
	670, 671, 672, 673, 674, 675, 0, 676, 677, 0,
	678, 863, 762, 763, 764, 0, 690, 0, 679, 681,
	682, 683, 684, 765, 685, 766, 0, 686, 687, 688,
	689, 680, 691, 692, 0, 0, 693, 694, 696, 698,
	699, 695, 697, 700, 0, 701, 0, 0, 702, 703,
	704, 767, 768, 769, 0, 706, 705, 707, 708, 709,
	770, 710, 711, 712, 302, 0, 0, 0, 713, 714,
	771, 715, 716, 717, 0, 0, 0, 0, 0, 0,
	0, 308, 309, 311, 310, 312, 313, 314, 315, 0,
	316, 317, 0, 0, 0, 0, 0, 718, 0, 0,
	0, 318, 0, 319, 320, 321, 0, 322, 323, 324,
	325, 326, 327, 328, 719, 720, 0, 329, 721, 330,
	722, 0, 723, 331, 332, 333, 334, 335, 336, 337,
	0, 0, 0, 338, 724, 725, 726, 0, 339, 340,
	727, 0, 0, 0, 341, 342, 343, 344, 345, 346,
	347, 348, 0, 0, 350, 351, 352, 349, 353, 0,
	354, 0, 355, 356, 357, 358, 359, 360, 361, 0,
	362, 363, 364, 0, 365, 366, 367, 0, 0, 0,
	0, 0, 0, 0, 368, 369, 370, 371, 372, 0,
	373, 375, 728, 729, 0, 378, 380, 374, 376, 0,
	379, 377, 381, 0, 382, 383, 384, 0, 0, 385,
	386, 387, 0, 388, 389, 390, 0, 391, 392, 393,
	0, 394, 395, 730, 396, 397, 398, 400, 402, 399,
	401, 403, 404, 405, 406, 407, 731, 732, 408, 0,
	0, 0, 0, 0, 0, 0, 409, 410, 411, 733,
	0, 0, 0, 412, 0, 413, 414, 415, 0, 416,
	417, 0, 0, 418, 419, 420, 734, 735, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 0, 430, 736,
	0, 737, 431, 0, 432, 433, 434, 435, 436, 437,
	438, 3897, 739, 740, 531, 0, 439, 440, 441, 0,
	442, 443, 444, 445, 446, 0, 0, 0, 0, 447,
	448, 449, 0, 0, 741, 450, 532, 451, 742, 743,
	0, 744, 0, 452, 453, 455, 0, 745, 0, 454,
	456, 457, 0, 458, 0, 0, 0, 459, 460, 461,
	462, 463, 464, 0, 465, 467, 466, 0, 469, 746,
	468, 0, 470, 471, 0, 0, 472, 473, 474, 475,
	476, 477, 480, 0, 0, 478, 479, 481, 482, 0,
	483, 484, 486, 489, 485, 487, 488, 490, 503, 504,
	491, 492, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 506, 0, 505, 0, 507, 508, 509, 510,
	511, 518, 520, 521, 516, 517, 519, 522, 523, 525,
	513, 514, 515, 0, 524, 512, 0, 0, 0, 526,
	527, 528, 529, 0, 747, 530, 748, 533, 534, 0,
	0, 535, 0, 536, 0, 0, 538, 539, 540, 0,
	0, 541, 542, 749, 0, 543, 0, 750, 544, 545,
	537, 546, 547, 548, 549, 550, 551, 552, 553, 554,
	555, 0, 556, 557, 751, 558, 559, 560, 752, 561,
	562, 563, 753, 564, 754, 565, 566, 0, 567, 568,
	569, 0, 570, 571, 572, 573, 574, 575, 576, 577,
	755, 578, 579, 581, 580, 582, 0, 583, 0, 584,
	585, 586, 0, 0, 0, 0, 0, 587, 588, 590,
	0, 591, 592, 593, 594, 589, 595, 596, 597, 598,
	599, 600, 0, 602, 603, 601, 604, 605, 0, 606,
	607, 608, 609, 610, 756, 611, 0, 612, 613, 620,
	621, 622, 614, 615, 616, 623, 624, 625, 626, 627,
	629, 628, 0, 631, 632, 630, 633, 634, 635, 0,
	636, 757, 637, 617, 618, 638, 639, 0, 640, 641,
	642, 643, 644, 645, 646, 758, 0, 647, 0, 648,
	649, 650, 651, 652, 653, 655, 619, 656, 661, 662,
	759, 657, 658, 659, 660, 760, 664, 665, 666, 667,
	0, 668, 669, 0, 663, 654, 0, 670, 671, 672,
	673, 674, 675, 0, 676, 677, 0, 678, 761, 762,
	763, 764, 0, 690, 0, 679, 681, 682, 683, 684,
	765, 685, 766, 0, 686, 687, 688, 689, 680, 691,
	692, 0, 0, 693, 694, 696, 698, 699, 695, 697,
	700, 0, 701, 0, 0, 702, 703, 704, 767, 768,
	769, 0, 706, 705, 707, 708, 709, 770, 710, 711,
	712, 302, 0, 0, 0, 713, 714, 771, 715, 716,
	717, 0, 0, 0, 0, 0, 0, 0, 308, 309,
	311, 310, 312, 313, 314, 315, 0, 316, 317, 0,
	0, 0, 0, 0, 718, 0, 0, 0, 318, 0,
	319, 320, 321, 0, 322, 323, 324, 325, 326, 327,
	328, 719, 720, 0, 329, 721, 330, 722, 0, 723,
	331, 332, 333, 334, 335, 336, 337, 0, 0, 0,
	338, 724, 725, 726, 0, 339, 340, 727, 0, 0,
	0, 341, 342, 343, 344, 345, 346, 347, 348, 0,
	0, 350, 351, 352, 349, 353, 0, 354, 0, 355,
	356, 357, 358, 359, 360, 361, 0, 362, 363, 364,
	0, 365, 366, 367, 0, 0, 0, 0, 0, 0,
	0, 368, 369, 370, 371, 372, 0, 373, 375, 728,
	729, 0, 378, 380, 374, 376, 0, 379, 377, 381,
	0, 382, 383, 384, 0, 0, 385, 386, 387, 0,
	388, 389, 390, 0, 391, 392, 393, 0, 394, 395,
	730, 396, 397, 398, 400, 402, 399, 401, 403, 404,
	405, 406, 407, 731, 732, 408, 0, 0, 0, 0,
	0, 0, 0, 409, 410, 411, 733, 0, 0, 0,
	412, 0, 413, 414, 415, 0, 416, 417, 0, 0,
	418, 419, 420, 734, 735, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 0, 430, 736, 0, 737, 431,
	0, 432, 433, 434, 435, 436, 437, 438, 3869, 739,
	740, 531, 0, 439, 440, 441, 0, 442, 443, 444,
	445, 446, 0, 0, 0, 0, 447, 448, 449, 0,
	0, 741, 450, 532, 451, 742, 743, 0, 744, 0,
	452, 453, 455, 0, 745, 0, 454, 456, 457, 0,
	458, 0, 0, 0, 459, 460, 461, 462, 463, 464,
	0, 465, 467, 466, 0, 469, 746, 468, 0, 470,
	471, 0, 0, 472, 473, 474, 475, 476, 477, 480,
	0, 0, 478, 479, 481, 482, 0, 483, 484, 486,
	489, 485, 487, 488, 490, 503, 504, 491, 492, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 506,
	0, 505, 0, 507, 508, 509, 510, 511, 518, 520,
	521, 516, 517, 519, 522, 523, 525, 513, 514, 515,
	0, 524, 512, 0, 0, 0, 526, 527, 528, 529,
	0, 747, 530, 748, 533, 534, 0, 0, 535, 0,
	536, 0, 0, 538, 539, 540, 0, 0, 541, 542,
	749, 0, 543, 0, 750, 544, 545, 537, 546, 547,
	548, 549, 550, 551, 552, 553, 554, 555, 0, 556,
	557, 751, 558, 559, 560, 752, 561, 562, 563, 753,
	564, 754, 565, 566, 0, 567, 568, 569, 0, 570,
	571, 572, 573, 574, 575, 576, 577, 755, 578, 579,
	581, 580, 582, 0, 583, 0, 584, 585, 586, 0,
	0, 0, 0, 0, 587, 588, 590, 0, 591, 592,
	593, 594, 589, 595, 596, 597, 598, 599, 600, 0,
	602, 603, 601, 604, 605, 0, 606, 607, 608, 609,
	610, 756, 611, 0, 612, 613, 620, 621, 622, 614,
	615, 616, 623, 624, 625, 626, 627, 629, 628, 0,
	631, 632, 630, 633, 634, 635, 0, 636, 757, 637,
	617, 618, 638, 639, 0, 640, 641, 642, 643, 644,
	645, 646, 758, 0, 647, 0, 648, 649, 650, 651,
	652, 653, 655, 619, 656, 661, 662, 759, 657, 658,
	659, 660, 760, 664, 665, 666, 667, 0, 668, 669,
	0, 663, 654, 0, 670, 671, 672, 673, 674, 675,
	0, 676, 677, 0, 678, 761, 762, 763, 764, 0,
	690, 0, 679, 681, 682, 683, 684, 765, 685, 766,
	0, 686, 687, 688, 689, 680, 691, 692, 0, 0,
	693, 694, 696, 698, 699, 695, 697, 700, 0, 701,
	0, 0, 702, 703, 704, 767, 768, 769, 0, 706,
	705, 707, 708, 709, 770, 710, 711, 712, 302, 0,
	0, 0, 713, 714, 771, 715, 716, 717, 0, 0,
	0, 0, 0, 0, 0, 308, 309, 311, 310, 312,
	313, 314, 315, 0, 316, 317, 0, 0, 0, 0,
	0, 718, 0, 0, 0, 318, 0, 319, 320, 321,
	0, 322, 323, 324, 325, 326, 327, 328, 719, 720,
	0, 329, 721, 330, 722, 0, 723, 331, 332, 333,
	334, 335, 336, 337, 0, 0, 0, 338, 724, 725,
	726, 0, 339, 340, 727, 0, 0, 0, 341, 342,
	343, 344, 345, 346, 347, 348, 0, 0, 350, 351,
	352, 349, 353, 0, 354, 0, 355, 356, 357, 358,
	359, 360, 361, 0, 362, 363, 364, 0, 365, 366,
	367, 0, 0, 0, 0, 0, 0, 0, 368, 369,
	370, 371, 372, 0, 373, 375, 728, 729, 0, 378,
	380, 374, 376, 0, 379, 377, 381, 0, 382, 383,
	384, 0, 0, 385, 386, 387, 0, 388, 389, 390,
	0, 391, 392, 393, 0, 394, 395, 730, 396, 397,
	398, 400, 402, 399, 401, 403, 404, 405, 406, 407,
	731, 732, 408, 0, 0, 0, 0, 0, 0, 0,
	409, 410, 411, 733, 0, 0, 0, 412, 0, 413,
	414, 415, 0, 416, 417, 0, 0, 418, 419, 420,
	734, 735, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 0, 430, 736, 0, 737, 431, 0, 432, 433,
	434, 435, 436, 437, 438, 3865, 739, 740, 531, 0,
	439, 440, 441, 0, 442, 443, 444, 445, 446, 0,
	0, 0, 0, 447, 448, 449, 0, 0, 741, 450,
	532, 451, 742, 743, 0, 744, 0, 452, 453, 455,
	0, 745, 0, 454, 456, 457, 0, 458, 0, 0,
	0, 459, 460, 461, 462, 463, 464, 0, 465, 467,
	466, 0, 469, 746, 468, 0, 470, 471, 0, 0,
	472, 473, 474, 475, 476, 477, 480, 0, 0, 478,
	479, 481, 482, 0, 483, 484, 486, 489, 485, 487,
	488, 490, 503, 504, 491, 492, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 506, 0, 505, 0,
	507, 508, 509, 510, 511, 518, 520, 521, 516, 517,
	519, 522, 523, 525, 513, 514, 515, 0, 524, 512,
	0, 0, 0, 526, 527, 528, 529, 0, 747, 530,
	748, 533, 534, 0, 0, 535, 0, 536, 0, 0,
	538, 539, 540, 0, 0, 541, 542, 749, 0, 543,
	0, 750, 544, 545, 537, 546, 547, 548, 549, 550,
	551, 552, 553, 554, 555, 0, 556, 557, 751, 558,
	559, 560, 752, 561, 562, 563, 753, 564, 754, 565,
	566, 0, 567, 568, 569, 0, 570, 571, 572, 573,
	574, 575, 576, 577, 755, 578, 579, 581, 580, 582,
	0, 583, 0, 584, 585, 586, 0, 0, 0, 0,
	0, 587, 588, 590, 0, 591, 592, 593, 594, 589,
	595, 596, 597, 598, 599, 600, 0, 602, 603, 601,
	604, 605, 0, 606, 607, 608, 609, 610, 756, 611,
	0, 612, 613, 620, 621, 622, 614, 615, 616, 623,
	624, 625, 626, 627, 629, 628, 0, 631, 632, 630,
	633, 634, 635, 0, 636, 757, 637, 617, 618, 638,
	639, 0, 640, 641, 642, 643, 644, 645, 646, 758,
	0, 647, 0, 648, 649, 650, 651, 652, 653, 655,
	619, 656, 661, 662, 759, 657, 658, 659, 660, 760,
	664, 665, 666, 667, 0, 668, 669, 0, 663, 654,
	0, 670, 671, 672, 673, 674, 675, 0, 676, 677,
	0, 678, 761, 762, 763, 764, 0, 690, 0, 679,
	681, 682, 683, 684, 765, 685, 766, 0, 686, 687,
	688, 689, 680, 691, 692, 0, 0, 693, 694, 696,
	698, 699, 695, 697, 700, 0, 701, 0, 0, 702,
	703, 704, 767, 768, 769, 0, 706, 705, 707, 708,
	709, 770, 710, 711, 712, 302, 0, 0, 0, 713,
	714, 771, 715, 716, 717, 0, 0, 0, 0, 0,
	0, 0, 308, 309, 311, 310, 312, 313, 314, 315,
	0, 316, 317, 0, 0, 0, 0, 0, 718, 0,
	0, 0, 318, 0, 319, 320, 321, 0, 322, 323,
	324, 325, 326, 327, 328, 719, 720, 0, 329, 721,
	330, 722, 0, 723, 331, 332, 333, 334, 335, 336,
	337, 0, 0, 0, 338, 724, 725, 726, 0, 339,
	340, 727, 0, 0, 0, 341, 342, 343, 344, 345,
	346, 347, 348, 0, 0, 350, 351, 352, 349, 353,
	0, 354, 0, 355, 356, 357, 358, 359, 360, 361,
	0, 362, 363, 364, 0, 365, 366, 367, 0, 0,
	0, 0, 0, 0, 0, 368, 369, 370, 371, 372,
	0, 373, 375, 728, 729, 0, 378, 380, 374, 376,
	0, 379, 377, 381, 0, 382, 383, 384, 0, 0,
	385, 386, 387, 0, 388, 389, 390, 0, 391, 392,
	393, 0, 394, 395, 730, 396, 397, 398, 400, 402,
	399, 401, 403, 404, 405, 406, 407, 731, 732, 408,
	0, 0, 0, 0, 0, 0, 0, 409, 410, 411,
	733, 0, 0, 0, 412, 0, 413, 414, 415, 0,
	416, 417, 0, 0, 418, 419, 420, 734, 735, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 0, 430,
	736, 0, 737, 431, 0, 432, 433, 434, 435, 436,
	437, 438, 3816, 739, 740, 531, 0, 439, 440, 441,
	0, 442, 443, 444, 445, 446, 0, 0, 0, 0,
	447, 448, 449, 0, 0, 741, 450, 532, 451, 742,
	743, 0, 744, 0, 452, 453, 455, 0, 745, 0,
	454, 456, 457, 0, 458, 0, 0, 0, 459, 460,
	461, 462, 463, 464, 0, 465, 467, 466, 0, 469,
	746, 468, 0, 470, 471, 0, 0, 472, 473, 474,
	475, 476, 477, 480, 0, 0, 478, 479, 481, 482,
	0, 483, 484, 486, 489, 485, 487, 488, 490, 503,
	504, 491, 492, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 506, 0, 505, 0, 507, 508, 509,
	510, 511, 518, 520, 521, 516, 517, 519, 522, 523,
	525, 513, 514, 515, 0, 524, 512, 0, 0, 0,
	526, 527, 528, 529, 0, 747, 530, 748, 533, 534,
	0, 0, 535, 0, 536, 0, 0, 538, 539, 540,
	0, 0, 541, 542, 749, 0, 543, 0, 750, 544,
	545, 537, 546, 547, 548, 549, 550, 551, 552, 553,
	554, 555, 0, 556, 557, 751, 558, 559, 560, 752,
	561, 562, 563, 753, 564, 754, 565, 566, 0, 567,
	568, 569, 0, 570, 571, 572, 573, 574, 575, 576,
	577, 755, 578, 579, 581, 580, 582, 0, 583, 0,
	584, 585, 586, 0, 0, 0, 0, 0, 587, 588,
	590, 0, 591, 592, 593, 594, 589, 595, 596, 597,
	598, 599, 600, 0, 602, 603, 601, 604, 605, 0,
	606, 607, 608, 609, 610, 756, 611, 0, 612, 613,
	620, 621, 622, 614, 615, 616, 623, 624, 625, 626,
	627, 629, 628, 0, 631, 632, 630, 633, 634, 635,
	0, 636, 757, 637, 617, 618, 638, 639, 0, 640,
	641, 642, 643, 644, 645, 646, 758, 0, 647, 0,
	648, 649, 650, 651, 652, 653, 655, 619, 656, 661,
	662, 759, 657, 658, 659, 660, 760, 664, 665, 666,
	667, 0, 668, 669, 0, 663, 654, 0, 670, 671,
	672, 673, 674, 675, 0, 676, 677, 0, 678, 761,
	762, 763, 764, 0, 690, 0, 679, 681, 682, 683,
	684, 765, 685, 766, 0, 686, 687, 688, 689, 680,
	691, 692, 0, 0, 693, 694, 696, 698, 699, 695,
	697, 700, 0, 701, 0, 0, 702, 703, 704, 767,
	768, 769, 0, 706, 705, 707, 708, 709, 770, 710,
	711, 712, 302, 0, 0, 0, 713, 714, 771, 715,
	716, 717, 0, 0, 0, 0, 0, 0, 0, 308,
	309, 311, 310, 312, 313, 314, 315, 0, 316, 317,
	0, 0, 0, 0, 0, 718, 0, 0, 0, 318,
	0, 319, 320, 321, 0, 322, 323, 324, 325, 326,
	327, 328, 719, 720, 0, 329, 721, 330, 722, 0,
	723, 331, 332, 333, 334, 335, 336, 337, 0, 0,
	0, 338, 724, 725, 726, 0, 339, 340, 727, 0,
	0, 0, 341, 342, 343, 344, 345, 346, 347, 348,
	0, 0, 350, 351, 352, 349, 353, 0, 354, 0,
	355, 356, 357, 358, 359, 360, 361, 0, 362, 363,
	364, 0, 365, 366, 367, 0, 0, 0, 0, 0,
	0, 0, 368, 369, 370, 371, 372, 0, 373, 375,
	728, 729, 0, 378, 380, 374, 376, 0, 379, 377,
	381, 0, 382, 383, 384, 0, 0, 385, 386, 387,
	0, 388, 389, 390, 0, 391, 392, 393, 0, 394,
	395, 730, 396, 397, 398, 400, 402, 399, 401, 403,
	404, 405, 406, 407, 731, 732, 408, 0, 0, 0,
	0, 0, 0, 0, 409, 410, 411, 733, 0, 0,
	0, 412, 0, 413, 414, 415, 0, 416, 417, 0,
	0, 418, 419, 420, 734, 735, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 0, 430, 736, 0, 737,
	431, 0, 432, 433, 434, 435, 436, 437, 438, 3814,
	739, 740, 531, 0, 439, 440, 441, 0, 442, 443,
	444, 445, 446, 0, 0, 0, 0, 447, 448, 449,
	0, 0, 741, 450, 532, 451, 742, 743, 0, 744,
	0, 452, 453, 455, 0, 745, 0, 454, 456, 457,
	0, 458, 0, 0, 0, 459, 460, 461, 462, 463,
	464, 0, 465, 467, 466, 0, 469, 746, 468, 0,
	470, 471, 0, 0, 472, 473, 474, 475, 476, 477,
	480, 0, 0, 478, 479, 481, 482, 0, 483, 484,
	486, 489, 485, 487, 488, 490, 503, 504, 491, 492,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	506, 0, 505, 0, 507, 508, 509, 510, 511, 518,
	520, 521, 516, 517, 519, 522, 523, 525, 513, 514,
	515, 0, 524, 512, 0, 0, 0, 526, 527, 528,
	529, 0, 747, 530, 748, 533, 534, 0, 0, 535,
	0, 536, 0, 0, 538, 539, 540, 0, 0, 541,
	542, 749, 0, 543, 0, 750, 544, 545, 537, 546,
	547, 548, 549, 550, 551, 552, 553, 554, 555, 0,
	556, 557, 751, 558, 559, 560, 752, 561, 562, 563,
	753, 564, 754, 565, 566, 0, 567, 568, 569, 0,
	570, 571, 572, 573, 574, 575, 576, 577, 755, 578,
	579, 581, 580, 582, 0, 583, 0, 584, 585, 586,
	0, 0, 0, 0, 0, 587, 588, 590, 0, 591,
	592, 593, 594, 589, 595, 596, 597, 598, 599, 600,
	0, 602, 603, 601, 604, 605, 0, 606, 607, 608,
	609, 610, 756, 611, 0, 612, 613, 620, 621, 622,
	614, 615, 616, 623, 624, 625, 626, 627, 629, 628,
	0, 631, 632, 630, 633, 634, 635, 0, 636, 757,
	637, 617, 618, 638, 639, 0, 640, 641, 642, 643,
	644, 645, 646, 758, 0, 647, 0, 648, 649, 650,
	651, 652, 653, 655, 619, 656, 661, 662, 759, 657,
	658, 659, 660, 760, 664, 665, 666, 667, 0, 668,
	669, 0, 663, 654, 0, 670, 671, 672, 673, 674,
	675, 0, 676, 677, 0, 678, 761, 762, 763, 764,
	0, 690, 0, 679, 681, 682, 683, 684, 765, 685,
	766, 0, 686, 687, 688, 689, 680, 691, 692, 0,
	0, 693, 694, 696, 698, 699, 695, 697, 700, 0,
	701, 0, 0, 702, 703, 704, 767, 768, 769, 0,
	706, 705, 707, 708, 709, 770, 710, 711, 712, 302,
	0, 0, 0, 713, 714, 771, 715, 716, 717, 0,
	0, 0, 0, 0, 0, 0, 308, 309, 311, 310,
	312, 313, 314, 315, 0, 316, 317, 0, 0, 0,
	0, 0, 718, 0, 0, 0, 318, 0, 319, 320,
	321, 0, 322, 323, 324, 325, 326, 327, 328, 719,
	720, 0, 329, 721, 330, 722, 0, 723, 331, 332,
	333, 334, 335, 336, 337, 0, 0, 0, 338, 724,
	725, 726, 0, 339, 340, 727, 0, 0, 0, 341,
	342, 343, 344, 345, 346, 347, 348, 0, 0, 350,
	351, 352, 349, 353, 0, 354, 0, 355, 356, 357,
	358, 359, 360, 361, 0, 362, 363, 364, 0, 365,
	366, 367, 0, 0, 0, 0, 0, 0, 0, 368,
	369, 370, 371, 372, 0, 373, 375, 728, 729, 0,
	378, 380, 374, 376, 0, 379, 377, 381, 0, 382,
	383, 384, 0, 0, 385, 386, 387, 0, 388, 389,
	390, 0, 391, 392, 393, 0, 394, 395, 730, 396,
	397, 398, 400, 402, 399, 401, 403, 404, 405, 406,
	407, 731, 732, 408, 0, 0, 0, 0, 0, 0,
	0, 409, 410, 411, 733, 0, 0, 0, 412, 0,
	413, 414, 415, 0, 416, 417, 0, 0, 418, 419,
	420, 734, 735, 421, 422, 423, 424, 425, 426, 427,
	428, 429, 0, 430, 736, 0, 737, 431, 0, 432,
	433, 434, 435, 436, 437, 438, 3802, 739, 740, 531,
	0, 439, 440, 441, 0, 442, 443, 444, 445, 446,
	0, 0, 0, 0, 447, 448, 449, 0, 0, 741,
	450, 532, 451, 742, 743, 0, 744, 0, 452, 453,
	455, 0, 745, 0, 454, 456, 457, 0, 458, 0,
	0, 0, 459, 460, 461, 462, 463, 464, 0, 465,
	467, 466, 0, 469, 746, 468, 0, 470, 471, 0,
	0, 472, 473, 474, 475, 476, 477, 480, 0, 0,
	478, 479, 481, 482, 0, 483, 484, 486, 489, 485,
	487, 488, 490, 503, 504, 491, 492, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 506, 0, 505,
	0, 507, 508, 509, 510, 511, 518, 520, 521, 516,
	517, 519, 522, 523, 525, 513, 514, 515, 0, 524,
	512, 0, 0, 0, 526, 527, 528, 529, 0, 747,
	530, 748, 533, 534, 0, 0, 535, 0, 536, 0,
	0, 538, 539, 540, 0, 0, 541, 542, 749, 0,
	543, 0, 750, 544, 545, 537, 546, 547, 548, 549,
	550, 551, 552, 553, 554, 555, 0, 556, 557, 751,
	558, 559, 560, 752, 561, 562, 563, 753, 564, 754,
	565, 566, 0, 567, 568, 569, 0, 570, 571, 572,
	573, 574, 575, 576, 577, 755, 578, 579, 581, 580,
	582, 0, 583, 0, 584, 585, 586, 0, 0, 0,
	0, 0, 587, 588, 590, 0, 591, 592, 593, 594,
	589, 595, 596, 597, 598, 599, 600, 0, 602, 603,
	601, 604, 605, 0, 606, 607, 608, 609, 610, 756,
	611, 0, 612, 613, 620, 621, 622, 614, 615, 616,
	623, 624, 625, 626, 627, 629, 628, 0, 631, 632,
	630, 633, 634, 635, 0, 636, 757, 637, 617, 618,
	638, 639, 0, 640, 641, 642, 643, 644, 645, 646,
	758, 0, 647, 0, 648, 649, 650, 651, 652, 653,
	655, 619, 656, 661, 662, 759, 657, 658, 659, 660,
	760, 664, 665, 666, 667, 0, 668, 669, 0, 663,
	654, 0, 670, 671, 672, 673, 674, 675, 0, 676,
	677, 0, 678, 761, 762, 763, 764, 0, 690, 0,
	679, 681, 682, 683, 684, 765, 685, 766, 0, 686,
	687, 688, 689, 680, 691, 692, 0, 0, 693, 694,
	696, 698, 699, 695, 697, 700, 0, 701, 0, 0,
	702, 703, 704, 767, 768, 769, 0, 706, 705, 707,
	708, 709, 770, 710, 711, 712, 302, 0, 0, 0,
	713, 714, 771, 715, 716, 717, 0, 0, 0, 0,
	0, 0, 0, 308, 309, 311, 310, 312, 313, 314,
	315, 0, 316, 317, 0, 0, 0, 0, 0, 718,
	0, 0, 0, 318, 0, 319, 320, 321, 0, 322,
	323, 324, 325, 326, 327, 328, 719, 720, 0, 329,
	721, 330, 722, 0, 723, 331, 332, 333, 334, 335,
	336, 337, 0, 0, 0, 338, 724, 725, 726, 0,
	339, 340, 727, 0, 0, 0, 341, 342, 343, 344,
	345, 346, 347, 348, 0, 0, 350, 351, 352, 349,
	353, 0, 354, 0, 355, 356, 357, 358, 359, 360,
	361, 0, 362, 363, 364, 0, 365, 366, 367, 0,
	0, 0, 0, 0, 0, 0, 368, 369, 370, 371,
	372, 0, 373, 375, 728, 729, 0, 378, 380, 374,
	376, 0, 379, 377, 381, 0, 382, 383, 384, 0,
	0, 385, 386, 387, 0, 388, 389, 390, 0, 391,
	392, 393, 0, 394, 395, 730, 396, 397, 398, 400,
	402, 399, 401, 403, 404, 405, 406, 407, 731, 732,
	408, 0, 0, 0, 0, 0, 0, 0, 409, 410,
	411, 733, 0, 0, 0, 412, 0, 413, 414, 415,
	0, 416, 417, 0, 0, 418, 419, 420, 734, 735,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 0,
	430, 736, 0, 737, 431, 0, 432, 433, 434, 435,
	436, 437, 438, 3799, 739, 740, 531, 0, 439, 440,
	441, 0, 442, 443, 444, 445, 446, 0, 0, 0,
	0, 447, 448, 449, 0, 0, 741, 450, 532, 451,
	742, 743, 0, 744, 0, 452, 453, 455, 0, 745,
	0, 454, 456, 457, 0, 458, 0, 0, 0, 459,
	460, 461, 462, 463, 464, 0, 465, 467, 466, 0,
	469, 746, 468, 0, 470, 471, 0, 0, 472, 473,
	474, 475, 476, 477, 480, 0, 0, 478, 479, 481,
	482, 0, 483, 484, 486, 489, 485, 487, 488, 490,
	503, 504, 491, 492, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 506, 0, 505, 0, 507, 508,
	509, 510, 511, 518, 520, 521, 516, 517, 519, 522,
	523, 525, 513, 514, 515, 0, 524, 512, 0, 0,
	0, 526, 527, 528, 529, 0, 747, 530, 748, 533,
	534, 0, 0, 535, 0, 536, 0, 0, 538, 539,
	540, 0, 0, 541, 542, 749, 0, 543, 0, 750,
	544, 545, 537, 546, 547, 548, 549, 550, 551, 552,
	553, 554, 555, 0, 556, 557, 751, 558, 559, 560,
	752, 561, 562, 563, 753, 564, 754, 565, 566, 0,
	567, 568, 569, 0, 570, 571, 572, 573, 574, 575,
	576, 577, 755, 578, 579, 581, 580, 582, 0, 583,
	0, 584, 585, 586, 0, 0, 0, 0, 0, 587,
	588, 590, 0, 591, 592, 593, 594, 589, 595, 596,
	597, 598, 599, 600, 0, 602, 603, 601, 604, 605,
	0, 606, 607, 608, 609, 610, 756, 611, 0, 612,
	613, 620, 621, 622, 614, 615, 616, 623, 624, 625,
	626, 627, 629, 628, 0, 631, 632, 630, 633, 634,
	635, 0, 636, 757, 637, 617, 618, 638, 639, 0,
	640, 641, 642, 643, 644, 645, 646, 758, 0, 647,
	0, 648, 649, 650, 651, 652, 653, 655, 619, 656,
	661, 662, 759, 657, 658, 659, 660, 760, 664, 665,
	666, 667, 0, 668, 669, 0, 663, 654, 0, 670,
	671, 672, 673, 674, 675, 0, 676, 677, 0, 678,
	761, 762, 763, 764, 0, 690, 0, 679, 681, 682,
	683, 684, 765, 685, 766, 0, 686, 687, 688, 689,
	680, 691, 692, 0, 0, 693, 694, 696, 698, 699,
	695, 697, 700, 0, 701, 0, 0, 702, 703, 704,
	767, 768, 769, 0, 706, 705, 707, 708, 709, 770,
	710, 711, 712, 302, 0, 0, 0, 713, 714, 771,
	715, 716, 717, 0, 0, 0, 0, 0, 0, 0,
	308, 309, 311, 310, 312, 313, 314, 315, 0, 316,
	317, 0, 0, 0, 0, 0, 718, 0, 0, 0,
	318, 0, 319, 320, 321, 0, 322, 323, 324, 325,
	326, 327, 328, 719, 720, 0, 329, 721, 330, 722,
	0, 723, 331, 332, 333, 334, 335, 336, 337, 0,
	0, 0, 338, 724, 725, 726, 0, 339, 340, 727,
	0, 0, 0, 341, 342, 343, 344, 345, 346, 347,
	348, 0, 0, 350, 351, 352, 349, 353, 0, 354,
	0, 355, 356, 357, 358, 359, 360, 361, 0, 362,
	363, 364, 0, 365, 366, 367, 0, 0, 0, 0,
	0, 0, 0, 368, 369, 370, 371, 372, 0, 373,
	375, 728, 729, 0, 378, 380, 374, 376, 0, 379,
	377, 381, 0, 382, 383, 384, 0, 0, 385, 386,
	387, 0, 388, 389, 390, 0, 391, 392, 393, 0,
	394, 395, 730, 396, 397, 398, 400, 402, 399, 401,
	403, 404, 405, 406, 407, 731, 732, 408, 0, 0,
	0, 0, 0, 0, 0, 409, 410, 411, 733, 0,
	0, 0, 412, 0, 413, 414, 415, 0, 416, 417,
	0, 0, 418, 419, 420, 734, 735, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 0, 430, 736, 0,
	737, 431, 0, 432, 433, 434, 435, 436, 437, 438,
	3387, 739, 740, 531, 0, 439, 440, 441, 0, 442,
	443, 444, 445, 446, 0, 0, 0, 0, 447, 448,
	449, 0, 0, 741, 450, 532, 451, 742, 743, 0,
	744, 0, 452, 453, 455, 0, 745, 0, 454, 456,
	457, 0, 458, 0, 0, 0, 459, 460, 461, 462,
	463, 464, 0, 465, 467, 466, 0, 469, 746, 468,
	0, 470, 471, 0, 0, 472, 473, 474, 475, 476,
	477, 480, 0, 0, 478, 479, 481, 482, 0, 483,
	484, 486, 489, 485, 487, 488, 490, 503, 504, 491,
	492, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 506, 0, 505, 0, 507, 508, 509, 510, 511,
	518, 520, 521, 516, 517, 519, 522, 523, 525, 513,
	514, 515, 0, 524, 512, 0, 0, 0, 526, 527,
	528, 529, 0, 747, 530, 748, 533, 534, 0, 0,
	535, 0, 536, 0, 0, 538, 539, 540, 0, 0,
	541, 542, 749, 0, 543, 0, 750, 544, 545, 537,
	546, 547, 548, 549, 550, 551, 552, 553, 554, 555,
	0, 556, 557, 751, 558, 559, 560, 752, 561, 562,
	563, 753, 564, 754, 565, 566, 0, 567, 568, 569,
	0, 570, 571, 572, 573, 574, 575, 576, 577, 755,
	578, 579, 581, 580, 582, 0, 583, 0, 584, 585,
	586, 0, 0, 0, 0, 0, 587, 588, 590, 0,
	591, 592, 593, 594, 589, 595, 596, 597, 598, 599,
	600, 0, 602, 603, 601, 604, 605, 0, 606, 607,
	608, 609, 610, 756, 611, 0, 612, 613, 620, 621,
	622, 614, 615, 616, 623, 624, 625, 626, 627, 629,
	628, 0, 631, 632, 630, 633, 634, 635, 0, 636,
	757, 637, 617, 618, 638, 639, 0, 640, 641, 642,
	643, 644, 645, 646, 758, 0, 647, 0, 648, 649,
	650, 651, 652, 653, 655, 619, 656, 661, 662, 759,
	657, 658, 659, 660, 760, 664, 665, 666, 667, 0,
	668, 669, 0, 663, 654, 0, 670, 671, 672, 673,
	674, 675, 0, 676, 677, 0, 678, 761, 762, 763,
	764, 0, 690, 0, 679, 681, 682, 683, 684, 765,
	685, 766, 0, 686, 687, 688, 689, 680, 691, 692,
	0, 0, 693, 694, 696, 698, 699, 695, 697, 700,
	0, 701, 0, 0, 702, 703, 704, 767, 768, 769,
	0, 706, 705, 707, 708, 709, 770, 710, 711, 712,
	302, 0, 0, 0, 713, 714, 771, 715, 716, 717,
	0, 0, 0, 0, 0, 0, 0, 308, 309, 311,
	310, 312, 313, 314, 315, 0, 316, 317, 0, 0,
	0, 0, 0, 718, 0, 0, 0, 318, 0, 319,
	320, 321, 0, 322, 323, 324, 325, 326, 327, 328,
	719, 720, 0, 329, 721, 330, 722, 0, 723, 331,
	332, 333, 334, 335, 336, 337, 0, 0, 0, 338,
	724, 725, 726, 0, 339, 340, 727, 0, 0, 0,
	341, 342, 343, 344, 345, 346, 347, 348, 0, 0,
	350, 351, 352, 349, 353, 0, 354, 0, 355, 356,
	357, 358, 359, 360, 361, 0, 362, 363, 364, 0,
	365, 366, 367, 0, 0, 0, 0, 0, 0, 0,
	368, 369, 370, 371, 372, 0, 373, 375, 728, 729,
	0, 378, 380, 374, 376, 0, 379, 377, 381, 0,
	382, 383, 384, 0, 0, 385, 386, 387, 0, 388,
	389, 390, 0, 391, 392, 393, 0, 394, 395, 730,
	396, 397, 398, 400, 402, 399, 401, 403, 404, 405,
	406, 407, 731, 732, 408, 0, 0, 0, 0, 0,
	0, 0, 409, 410, 411, 733, 0, 0, 0, 412,
	0, 413, 414, 415, 0, 416, 417, 0, 0, 418,
	419, 420, 734, 735, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 0, 430, 736, 0, 737, 431, 0,
	432, 433, 434, 435, 436, 437, 438, 738, 739, 740,
	531, 0, 439, 440, 441, 0, 442, 443, 444, 445,
	446, 0, 0, 0, 0, 447, 448, 449, 0, 0,
	741, 450, 532, 451, 742, 743, 0, 744, 0, 452,
	453, 455, 0, 745, 0, 454, 456, 457, 0, 458,
	0, 0, 0, 459, 460, 461, 462, 463, 464, 0,
	465, 467, 466, 0, 469, 746, 468, 0, 470, 471,
	0, 0, 472, 473, 474, 475, 476, 477, 480, 0,
	0, 478, 479, 481, 482, 0, 483, 484, 486, 489,
	485, 487, 488, 490, 503, 504, 491, 492, 493, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 506, 0,
	505, 0, 507, 508, 509, 510, 511, 518, 520, 521,
	516, 517, 519, 522, 523, 525, 513, 514, 515, 0,
	524, 512, 0, 0, 0, 526, 527, 528, 529, 0,
	747, 530, 748, 533, 534, 0, 0, 535, 0, 536,
	0, 0, 538, 539, 540, 0, 0, 541, 542, 749,
	0, 543, 0, 750, 544, 545, 537, 546, 547, 548,
	549, 550, 551, 552, 553, 554, 555, 0, 556, 557,
	751, 558, 559, 560, 752, 561, 562, 563, 753, 564,
	754, 565, 566, 0, 567, 568, 569, 0, 570, 571,
	572, 573, 574, 575, 576, 577, 755, 578, 579, 581,
	580, 582, 0, 583, 0, 584, 585, 586, 0, 0,
	0, 0, 0, 587, 588, 590, 0, 591, 592, 593,
	594, 589, 595, 596, 597, 598, 599, 600, 0, 602,
	603, 601, 604, 605, 0, 606, 607, 608, 609, 610,
	756, 611, 0, 612, 613, 847, 621, 622, 614, 615,
	616, 623, 624, 625, 626, 627, 629, 628, 0, 631,
	632, 630, 633, 634, 635, 0, 636, 757, 637, 617,
	618, 638, 639, 0, 640, 641, 642, 643, 644, 645,
	646, 758, 0, 647, 0, 648, 649, 650, 651, 652,
	653, 655, 619, 656, 661, 662, 759, 657, 658, 659,
	660, 760, 664, 665, 666, 667, 0, 668, 669, 0,
	663, 654, 0, 670, 671, 672, 673, 674, 675, 0,
	676, 677, 0, 678, 761, 762, 763, 764, 0, 690,
	0, 679, 681, 682, 683, 684, 765, 685, 766, 0,
	686, 687, 688, 689, 680, 691, 692, 0, 0, 693,
	694, 696, 698, 699, 695, 697, 700, 0, 701, 0,
	0, 702, 703, 704, 767, 768, 769, 0, 706, 705,
	707, 708, 709, 770, 710, 711, 712, 302, 0, 0,
	0, 713, 714, 771, 715, 716, 717, 0, 0, 0,
	0, 0, 0, 0, 308, 309, 311, 310, 312, 313,
	314, 315, 0, 316, 317, 0, 0, 0, 0, 0,
	718, 0, 2552, 0, 318, 0, 319, 320, 321, 0,
	322, 323, 324, 325, 326, 327, 328, 719, 720, 0,
	329, 721, 330, 722, 0, 723, 331, 332, 333, 334,
	335, 336, 337, 0, 0, 0, 338, 724, 725, 726,
	0, 339, 340, 727, 0, 0, 0, 341, 342, 343,
	344, 345, 346, 347, 348, 0, 0, 350, 351, 352,
	349, 353, 0, 354, 0, 355, 356, 357, 358, 359,
	360, 361, 0, 362, 363, 364, 0, 365, 366, 367,
	0, 0, 0, 0, 0, 0, 0, 368, 369, 370,
	371, 372, 0, 373, 375, 728, 729, 0, 378, 380,
	374, 376, 0, 379, 377, 381, 0, 382, 383, 384,
	0, 0, 385, 386, 387, 0, 388, 389, 390, 0,
	391, 392, 393, 0, 394, 395, 730, 396, 397, 398,
	400, 402, 399, 401, 403, 404, 405, 406, 407, 731,
	732, 408, 0, 0, 0, 0, 0, 0, 0, 409,
	410, 411, 733, 0, 0, 0, 412, 0, 413, 414,
	415, 0, 416, 417, 0, 0, 418, 419, 420, 734,
	735, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	0, 430, 736, 0, 737, 431, 0, 432, 433, 434,
	435, 436, 437, 438, 738, 739, 740, 531, 0, 439,
	440, 441, 0, 442, 443, 444, 445, 446, 0, 0,
	0, 0, 447, 448, 449, 0, 0, 741, 450, 532,
	451, 742, 743, 0, 744, 0, 452, 453, 455, 0,
	745, 0, 454, 456, 457, 0, 458, 0, 0, 0,
	459, 460, 461, 462, 463, 464, 0, 465, 467, 466,
	0, 469, 746, 468, 0, 470, 471, 0, 0, 472,
	473, 474, 475, 476, 477, 480, 0, 0, 478, 479,
	481, 482, 0, 483, 484, 486, 489, 485, 487, 488,
	490, 503, 504, 491, 492, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 506, 0, 505, 0, 507,
	508, 509, 510, 511, 518, 520, 521, 516, 517, 519,
	522, 523, 525, 513, 514, 515, 0, 524, 512, 0,
	0, 0, 526, 527, 528, 529, 0, 747, 530, 748,
	533, 534, 0, 0, 535, 0, 536, 0, 0, 538,
	539, 540, 0, 0, 541, 542, 749, 0, 543, 0,
	750, 544, 545, 537, 546, 547, 548, 549, 550, 551,
	552, 553, 554, 555, 0, 556, 557, 751, 558, 559,
	560, 752, 561, 562, 563, 753, 564, 754, 565, 566,
	0, 567, 568, 569, 0, 570, 571, 572, 573, 574,
	575, 576, 577, 755, 578, 579, 581, 580, 582, 0,
	583, 0, 584, 585, 586, 0, 0, 0, 0, 0,
	587, 588, 590, 0, 591, 592, 593, 594, 589, 595,
	596, 597, 598, 599, 600, 0, 602, 603, 601, 604,
	605, 0, 606, 607, 608, 609, 610, 756, 611, 0,
	612, 613, 620, 621, 622, 614, 615, 616, 623, 624,
	625, 626, 627, 629, 628, 0, 631, 632, 630, 633,
	634, 635, 0, 0, 757, 637, 617, 618, 638, 639,
	0, 640, 641, 642, 643, 644, 645, 646, 758, 0,
	647, 0, 648, 649, 650, 651, 652, 653, 655, 619,
	656, 661, 662, 759, 657, 658, 659, 660, 760, 664,
	665, 666, 667, 0, 668, 669, 0, 663, 654, 0,
	670, 671, 672, 673, 674, 675, 0, 676, 677, 0,
	678, 761, 762, 763, 764, 0, 690, 0, 679, 681,
	682, 683, 684, 765, 685, 766, 0, 686, 687, 688,
	689, 680, 691, 692, 0, 0, 693, 694, 696, 698,
	699, 695, 697, 700, 0, 701, 0, 0, 702, 703,
	704, 767, 768, 769, 0, 706, 705, 707, 708, 709,
	770, 710, 711, 712, 302, 0, 0, 0, 713, 714,
	771, 715, 716, 717, 0, 0, 0, 0, 0, 0,
	0, 308, 309, 311, 310, 312, 313, 314, 315, 0,
	316, 317, 0, 0, 0, 0, 0, 718, 0, 0,
	0, 318, 0, 319, 320, 321, 0, 322, 323, 324,
	325, 326, 327, 328, 719, 720, 0, 329, 721, 330,
	722, 0, 723, 331, 332, 333, 334, 335, 336, 337,
	0, 0, 0, 338, 724, 725, 726, 0, 339, 340,
	727, 0, 0, 0, 341, 342, 343, 344, 345, 346,
	347, 348, 0, 0, 350, 351, 352, 349, 353, 0,
	354, 0, 355, 356, 357, 358, 359, 360, 361, 0,
	362, 363, 364, 0, 365, 366, 367, 0, 0, 0,
	0, 0, 0, 0, 368, 369, 370, 371, 372, 0,
	373, 375, 728, 729, 0, 378, 380, 374, 376, 0,
	379, 377, 381, 0, 382, 383, 384, 0, 0, 385,
	386, 387, 0, 388, 389, 390, 0, 391, 392, 393,
	0, 394, 395, 730, 396, 397, 398, 400, 402, 399,
	401, 403, 404, 405, 406, 407, 731, 732, 408, 0,
	0, 0, 0, 0, 0, 0, 409, 410, 411, 733,
	0, 0, 0, 412, 0, 413, 414, 415, 0, 416,
	417, 0, 0, 418, 419, 420, 734, 735, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 0, 430, 736,
	0, 737, 431, 0, 432, 433, 434, 435, 436, 437,
	438, 1429, 739, 740, 531, 0, 439, 440, 441, 0,
	442, 443, 444, 445, 446, 0, 0, 0, 0, 447,
	448, 449, 0, 0, 741, 450, 532, 451, 742, 743,
	0, 744, 0, 452, 453, 455, 0, 745, 0, 454,
	456, 457, 0, 458, 0, 0, 0, 459, 460, 461,
	462, 463, 464, 0, 465, 467, 466, 0, 469, 746,
	468, 0, 470, 471, 0, 0, 472, 473, 474, 475,
	476, 477, 480, 0, 0, 478, 479, 481, 482, 0,
	483, 484, 486, 489, 485, 487, 488, 490, 503, 504,
	491, 492, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 506, 0, 505, 0, 507, 508, 509, 510,
	511, 518, 520, 521, 516, 517, 519, 522, 523, 525,
	513, 514, 515, 0, 524, 512, 0, 0, 0, 526,
	527, 528, 529, 0, 747, 530, 748, 533, 534, 0,
	0, 535, 0, 536, 0, 0, 538, 539, 540, 0,
	0, 541, 542, 749, 0, 543, 0, 750, 544, 545,
	537, 546, 547, 548, 549, 550, 551, 552, 553, 554,
	555, 0, 556, 557, 751, 558, 559, 560, 752, 561,
	562, 563, 753, 564, 754, 565, 566, 0, 567, 568,
	569, 0, 570, 571, 572, 573, 574, 575, 576, 577,
	755, 578, 579, 581, 580, 582, 0, 583, 0, 584,
	585, 586, 0, 0, 0, 0, 0, 587, 588, 590,
	0, 591, 592, 593, 594, 589, 595, 596, 597, 598,
	599, 600, 0, 602, 603, 601, 604, 605, 0, 606,
	607, 608, 609, 610, 756, 611, 0, 612, 613, 620,
	621, 622, 614, 615, 616, 623, 624, 625, 626, 627,
	629, 628, 0, 631, 632, 630, 633, 634, 635, 0,
	636, 757, 637, 617, 618, 638, 639, 0, 640, 641,
	642, 643, 644, 645, 646, 758, 0, 647, 0, 648,
	649, 650, 651, 652, 653, 655, 619, 656, 661, 662,
	759, 657, 658, 659, 660, 760, 664, 665, 666, 667,
	0, 668, 669, 0, 663, 654, 0, 670, 671, 672,
	673, 674, 675, 0, 676, 677, 0, 678, 761, 762,
	763, 764, 0, 690, 0, 679, 681, 682, 683, 684,
	765, 685, 766, 0, 686, 687, 688, 689, 680, 691,
	692, 0, 0, 693, 694, 696, 698, 699, 695, 697,
	700, 0, 701, 0, 0, 702, 703, 704, 767, 768,
	769, 0, 706, 705, 707, 708, 709, 770, 710, 711,
	712, 302, 0, 0, 0, 713, 714, 771, 715, 716,
	717, 0, 0, 0, 0, 0, 0, 0, 308, 309,
	311, 310, 312, 313, 314, 315, 0, 316, 317, 0,
	0, 0, 0, 0, 718, 0, 0, 0, 318, 0,
	319, 320, 321, 0, 322, 323, 324, 325, 326, 327,
	328, 719, 720, 0, 329, 721, 330, 722, 0, 723,
	331, 332, 333, 334, 335, 336, 337, 0, 0, 0,
	338, 724, 725, 726, 0, 339, 340, 727, 0, 0,
	0, 341, 342, 343, 344, 345, 346, 347, 348, 0,
	0, 350, 351, 352, 349, 353, 0, 354, 0, 355,
	356, 357, 358, 359, 360, 361, 0, 362, 363, 364,
	0, 365, 366, 367, 0, 0, 0, 0, 0, 0,
	0, 368, 369, 370, 371, 372, 0, 373, 375, 728,
	729, 0, 378, 380, 374, 376, 0, 379, 377, 381,
	0, 382, 383, 384, 0, 0, 385, 386, 387, 0,
	388, 389, 390, 0, 391, 392, 393, 0, 394, 395,
	730, 396, 397, 398, 400, 402, 399, 401, 403, 404,
	405, 406, 407, 731, 732, 408, 0, 0, 0, 0,
	0, 0, 0, 409, 410, 411, 733, 0, 0, 0,
	412, 0, 413, 414, 415, 0, 416, 417, 0, 0,
	418, 419, 420, 734, 735, 421, 422, 423, 424, 425,
	426, 427, 428, 429, 0, 430, 736, 0, 737, 431,
	0, 432, 433, 434, 435, 436, 437, 438, 738, 739,
	740, 531, 0, 439, 440, 441, 0, 442, 443, 444,
	445, 446, 0, 0, 0, 0, 447, 448, 449, 0,
	0, 741, 450, 532, 451, 742, 743, 0, 744, 0,
	452, 453, 455, 0, 745, 0, 454, 456, 457, 0,
	458, 0, 0, 0, 459, 460, 461, 462, 463, 464,
	0, 465, 467, 466, 0, 469, 746, 468, 0, 470,
	471, 0, 0, 472, 473, 474, 475, 476, 477, 480,
	0, 0, 478, 479, 481, 482, 0, 483, 484, 486,
	489, 485, 487, 488, 490, 503, 504, 491, 492, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 506,
	0, 505, 0, 507, 508, 509, 510, 511, 518, 520,
	521, 516, 517, 519, 522, 523, 525, 513, 514, 515,
	0, 524, 512, 0, 0, 0, 526, 527, 528, 529,
	0, 747, 530, 748, 533, 534, 0, 0, 535, 0,
	536, 0, 0, 538, 539, 540, 0, 0, 541, 542,
	749, 0, 543, 0, 750, 544, 545, 537, 546, 547,
	548, 549, 550, 551, 552, 553, 554, 555, 0, 556,
	557, 751, 558, 559, 560, 752, 561, 562, 563, 753,
	564, 754, 565, 566, 0, 567, 568, 569, 0, 570,
	571, 572, 573, 574, 575, 576, 577, 755, 578, 579,
	1354, 580, 582, 0, 583, 0, 584, 585, 586, 0,
	0, 0, 0, 0, 587, 588, 590, 0, 591, 592,
	593, 594, 589, 595, 596, 597, 598, 599, 600, 0,
	602, 603, 601, 604, 605, 0, 606, 607, 608, 609,
	610, 756, 611, 0, 612, 613, 620, 621, 622, 614,
	615, 616, 623, 624, 625, 626, 627, 629, 628, 0,
	631, 632, 630, 633, 634, 635, 0, 636, 757, 637,
	617, 618, 638, 639, 0, 640, 641, 642, 643, 644,
	645, 646, 758, 0, 647, 0, 648, 649, 650, 651,
	652, 653, 655, 619, 656, 661, 662, 759, 657, 658,
	659, 660, 760, 664, 665, 666, 667, 0, 668, 669,
	0, 663, 654, 0, 670, 671, 672, 673, 674, 675,
	0, 676, 677, 0, 678, 761, 762, 763, 764, 0,
	690, 0, 679, 681, 682, 683, 684, 765, 685, 766,
	0, 686, 687, 688, 689, 680, 691, 692, 0, 0,
	693, 694, 696, 698, 699, 695, 697, 700, 0, 701,
	0, 0, 702, 703, 704, 767, 768, 769, 0, 706,
	705, 707, 708, 709, 770, 710, 711, 712, 302, 0,
	0, 0, 713, 714, 771, 715, 716, 717, 0, 0,
	0, 0, 0, 0, 0, 308, 309, 311, 310, 312,
	313, 314, 315, 0, 316, 317, 0, 0, 0, 0,
	0, 718, 0, 0, 0, 318, 0, 319, 320, 321,
	0, 322, 323, 324, 325, 326, 327, 328, 719, 720,
	0, 329, 721, 330, 722, 0, 723, 331, 332, 333,
	334, 335, 336, 337, 0, 0, 0, 338, 724, 725,
	726, 0, 339, 340, 727, 0, 0, 0, 341, 342,
	343, 344, 345, 346, 347, 348, 0, 0, 350, 351,
	352, 349, 353, 0, 354, 0, 355, 356, 357, 358,
	359, 360, 361, 0, 362, 363, 364, 0, 365, 366,
	367, 0, 0, 0, 0, 0, 0, 0, 368, 369,
	370, 371, 372, 0, 373, 375, 728, 729, 0, 378,
	380, 374, 376, 0, 379, 377, 381, 0, 382, 383,
	384, 0, 0, 385, 386, 387, 0, 388, 389, 390,
	0, 391, 392, 393, 0, 394, 395, 730, 396, 397,
	398, 400, 402, 399, 401, 403, 404, 405, 406, 407,
	731, 732, 408, 0, 0, 0, 0, 0, 0, 0,
	409, 410, 411, 733, 0, 0, 0, 412, 0, 413,
	414, 415, 0, 416, 417, 0, 0, 418, 419, 420,
	734, 735, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 0, 430, 736, 0, 737, 0, 0, 432, 433,
	434, 435, 436, 437, 438, 738, 739, 740, 531, 0,
	439, 440, 441, 0, 442, 443, 444, 445, 446, 0,
	0, 0, 0, 447, 448, 449, 0, 0, 741, 450,
	532, 451, 742, 743, 0, 744, 0, 452, 453, 455,
	0, 745, 0, 454, 456, 457, 0, 458, 0, 0,
	0, 459, 460, 461, 462, 463, 464, 0, 465, 467,
	466, 0, 469, 746, 468, 0, 470, 471, 0, 0,
	472, 473, 474, 475, 476, 477, 480, 0, 0, 478,
	479, 481, 482, 0, 483, 484, 486, 489, 485, 487,
	488, 490, 503, 504, 491, 492, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 506, 0, 505, 0,
	507, 508, 509, 510, 511, 518, 520, 521, 516, 517,
	519, 522, 523, 525, 513, 514, 515, 0, 524, 512,
	0, 0, 0, 526, 527, 528, 529, 0, 747, 530,
	748, 533, 534, 0, 0, 535, 0, 536, 0, 0,
	538, 539, 540, 0, 0, 541, 542, 749, 0, 543,
	0, 750, 544, 545, 537, 546, 547, 548, 0, 550,
	551, 552, 553, 554, 555, 0, 556, 557, 751, 558,
	559, 560, 752, 561, 562, 563, 753, 564, 754, 565,
	566, 0, 567, 568, 569, 0, 570, 571, 572, 573,
	574, 0, 576, 577, 755, 578, 579, 581, 580, 582,
	0, 583, 0, 584, 585, 586, 0, 0, 0, 0,
	0, 587, 588, 590, 0, 591, 592, 593, 594, 589,
	595, 596, 597, 598, 599, 600, 0, 602, 603, 601,
	604, 605, 0, 606, 607, 608, 609, 610, 756, 0,
	0, 612, 613, 620, 621, 622, 614, 615, 616, 623,
	624, 625, 626, 627, 629, 628, 0, 631, 632, 630,
	633, 634, 635, 0, 636, 757, 637, 617, 618, 638,
	639, 0, 640, 641, 642, 643, 644, 645, 646, 758,
	0, 647, 0, 648, 649, 650, 651, 652, 653, 655,
	619, 656, 661, 662, 759, 657, 658, 659, 660, 760,
	664, 665, 666, 667, 0, 668, 669, 0, 663, 654,
	0, 670, 671, 672, 673, 674, 675, 0, 676, 677,
	0, 678, 761, 762, 763, 764, 0, 690, 0, 679,
	681, 682, 683, 684, 765, 685, 766, 0, 686, 687,
	688, 689, 680, 691, 692, 0, 0, 693, 694, 696,
	698, 699, 695, 697, 700, 0, 701, 0, 0, 702,
	703, 704, 767, 768, 769, 0, 706, 705, 707, 708,
	709, 770, 710, 711, 712, 1767, 0, 1474, 0, 713,
	714, 771, 715, 716, 717, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 308, 309, 311, 310, 312, 313,
	314, 315, 0, 316, 317, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 318, 0, 319, 320, 321, 0,
	322, 323, 324, 325, 326, 327, 328, 0, 0, 0,
	329, 0, 330, 0, 0, 0, 331, 332, 333, 334,
	335, 336, 337, 0, 0, 0, 338, 0, 0, 0,
	0, 339, 340, 0, 0, 0, 0, 341, 342, 343,
	344, 345, 346, 347, 348, 0, 0, 350, 351, 352,
	349, 353, 0, 354, 0, 355, 356, 357, 358, 359,
	360, 361, 0, 362, 363, 364, 0, 365, 366, 367,
	0, 0, 0, 0, 0, 0, 1476, 368, 369, 370,
	371, 372, 0, 373, 375, 0, 0, 0, 378, 380,
	374, 376, 0, 379, 377, 381, 0, 382, 383, 384,
	0, 0, 385, 386, 387, 0, 388, 389, 390, 0,
	391, 392, 393, 0, 394, 395, 0, 396, 397, 398,
	400, 402, 399, 401, 403, 404, 405, 406, 407, 0,
	0, 408, 0, 0, 0, 0, 0, 0, 0, 409,
	410, 411, 0, 0, 0, 0, 412, 0, 413, 414,
	415, 0, 416, 417, 0, 0, 418, 419, 420, 0,
	0, 421, 422, 423, 424, 425, 426, 427, 428, 429,
	0, 430, 0, 0, 0, 431, 0, 432, 433, 434,
	435, 436, 437, 438, 1766, 0, 0, 531, 0, 439,
	440, 441, 0, 442, 443, 444, 445, 446, 0, 0,
	0, 0, 447, 448, 449, 0, 0, 0, 450, 532,
	451, 0, 0, 0, 0, 0, 452, 453, 455, 0,
	0, 0, 454, 456, 457, 0, 458, 0, 0, 0,
	459, 460, 461, 462, 463, 464, 0, 465, 467, 466,
	0, 469, 0, 468, 0, 470, 471, 0, 0, 472,
	473, 474, 475, 476, 477, 480, 0, 0, 478, 479,
	481, 482, 0, 483, 484, 486, 489, 485, 487, 488,
	490, 503, 504, 491, 492, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 506, 0, 505, 0, 507,
	508, 509, 510, 511, 518, 520, 521, 516, 517, 519,
	522, 523, 525, 513, 514, 515, 0, 524, 512, 0,
	0, 0, 526, 527, 528, 529, 0, 0, 530, 0,
	533, 534, 0, 0, 535, 0, 536, 0, 0, 538,
	539, 540, 0, 0, 541, 542, 0, 0, 543, 0,
	0, 544, 545, 537, 546, 547, 548, 549, 550, 551,
	552, 553, 554, 555, 0, 556, 557, 0, 558, 559,
	560, 0, 561, 562, 563, 0, 564, 0, 565, 566,
	0, 567, 568, 569, 0, 570, 571, 572, 573, 574,
	575, 576, 577, 0, 578, 579, 581, 580, 582, 0,
	583, 0, 584, 585, 586, 0, 0, 0, 0, 0,
	587, 588, 590, 0, 591, 592, 593, 594, 589, 595,
	596, 597, 598, 599, 600, 0, 602, 603, 601, 604,
	605, 0, 606, 607, 608, 609, 610, 0, 611, 0,
	612, 613, 620, 621, 622, 614, 615, 616, 623, 624,
	625, 626, 627, 629, 628, 0, 631, 632, 630, 633,
	634, 635, 1477, 636, 0, 637, 617, 618, 638, 639,
	0, 640, 641, 642, 643, 644, 645, 646, 0, 0,
	647, 0, 648, 649, 650, 651, 652, 653, 655, 619,
	656, 661, 662, 0, 657, 658, 659, 660, 0, 664,
	665, 666, 667, 0, 668, 669, 0, 663, 654, 0,
	670, 671, 672, 673, 674, 675, 0, 676, 677, 0,
	678, 0, 0, 0, 0, 0, 690, 0, 679, 681,
	682, 683, 684, 0, 685, 0, 0, 686, 687, 688,
	689, 680, 691, 692, 0, 0, 693, 694, 696, 698,
	699, 695, 697, 700, 0, 701, 0, 0, 702, 703,
	704, 0, 0, 0, 0, 706, 705, 707, 708, 709,
	0, 710, 711, 712, 1686, 0, 1474, 0, 713, 714,
	0, 715, 716, 717, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 308, 309, 311, 310, 312, 313, 314,
	315, 0, 316, 317, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 318, 0, 319, 320, 321, 0, 322,
	323, 324, 325, 326, 327, 328, 0, 0, 0, 329,
	0, 330, 0, 0, 0, 331, 332, 333, 334, 335,
	336, 337, 0, 0, 0, 338, 0, 0, 0, 0,
	339, 340, 0, 0, 0, 0, 341, 342, 343, 344,
	345, 346, 347, 348, 0, 0, 350, 351, 352, 349,
	353, 0, 354, 0, 355, 356, 357, 358, 359, 360,
	361, 0, 362, 363, 364, 0, 365, 366, 367, 0,
	0, 0, 0, 0, 0, 1476, 368, 369, 370, 371,
	372, 0, 373, 375, 0, 0, 0, 378, 380, 374,
	376, 0, 379, 377, 381, 0, 382, 383, 384, 0,
	0, 385, 386, 387, 0, 388, 389, 390, 0, 391,
	392, 393, 0, 394, 395, 0, 396, 397, 398, 400,
	402, 399, 401, 403, 404, 405, 406, 407, 0, 0,
	408, 0, 0, 0, 0, 0, 0, 0, 409, 410,
	411, 0, 0, 0, 0, 412, 0, 413, 414, 415,
	0, 416, 417, 0, 0, 418, 419, 420, 0, 0,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 0,
	430, 0, 0, 0, 431, 0, 432, 433, 434, 435,
	436, 437, 438, 1685, 0, 0, 531, 0, 439, 440,
	441, 0, 442, 443, 444, 445, 446, 0, 0, 0,
	0, 447, 448, 449, 0, 0, 0, 450, 532, 451,
	0, 0, 0, 0, 0, 452, 453, 455, 0, 0,
	0, 454, 456, 457, 0, 458, 0, 0, 0, 459,
	460, 461, 462, 463, 464, 0, 465, 467, 466, 0,
	469, 0, 468, 0, 470, 471, 0, 0, 472, 473,
	474, 475, 476, 477, 480, 0, 0, 478, 479, 481,
	482, 0, 483, 484, 486, 489, 485, 487, 488, 490,
	503, 504, 491, 492, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 506, 0, 505, 0, 507, 508,
	509, 510, 511, 518, 520, 521, 516, 517, 519, 522,
	523, 525, 513, 514, 515, 0, 524, 512, 0, 0,
	0, 526, 527, 528, 529, 0, 0, 530, 0, 533,
	534, 0, 0, 535, 0, 536, 0, 0, 538, 539,
	540, 0, 0, 541, 542, 0, 0, 543, 0, 0,
	544, 545, 537, 546, 547, 548, 549, 550, 551, 552,
	553, 554, 555, 0, 556, 557, 0, 558, 559, 560,
	0, 561, 562, 563, 0, 564, 0, 565, 566, 0,
	567, 568, 569, 0, 570, 571, 572, 573, 574, 575,
	576, 577, 0, 578, 579, 581, 580, 582, 0, 583,
	0, 584, 585, 586, 0, 0, 0, 0, 0, 587,
	588, 590, 0, 591, 592, 593, 594, 589, 595, 596,
	597, 598, 599, 600, 0, 602, 603, 601, 604, 605,
	0, 606, 607, 608, 609, 610, 0, 611, 0, 612,
	613, 620, 621, 622, 614, 615, 616, 623, 624, 625,
	626, 627, 629, 628, 0, 631, 632, 630, 633, 634,
	635, 1477, 636, 0, 637, 617, 618, 638, 639, 0,
	640, 641, 642, 643, 644, 645, 646, 0, 0, 647,
	0, 648, 649, 650, 651, 652, 653, 655, 619, 656,
	661, 662, 0, 657, 658, 659, 660, 0, 664, 665,
	666, 667, 0, 668, 669, 0, 663, 654, 0, 670,
	671, 672, 673, 674, 675, 0, 676, 677, 0, 678,
	0, 0, 0, 0, 0, 690, 0, 679, 681, 682,
	683, 684, 0, 685, 0, 0, 686, 687, 688, 689,
	680, 691, 692, 0, 0, 693, 694, 696, 698, 699,
	695, 697, 700, 0, 701, 0, 0, 702, 703, 704,
	0, 0, 0, 0, 706, 705, 707, 708, 709, 0,
	710, 711, 712, 1472, 0, 1474, 0, 713, 714, 0,
	715, 716, 717, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 308, 309, 311, 310, 312, 313, 314, 315,
	0, 316, 317, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 318, 0, 319, 320, 321, 0, 322, 323,
	324, 325, 326, 327, 328, 0, 0, 0, 329, 0,
	330, 0, 0, 0, 331, 332, 333, 334, 335, 336,
	337, 0, 0, 0, 338, 0, 0, 0, 0, 339,
	340, 0, 0, 0, 0, 341, 342, 343, 344, 345,
	346, 347, 348, 0, 0, 350, 351, 352, 349, 353,
	0, 354, 0, 355, 356, 357, 358, 359, 360, 361,
	0, 362, 363, 364, 0, 365, 366, 367, 0, 0,
	0, 0, 0, 0, 1476, 368, 369, 370, 371, 372,
	0, 373, 375, 0, 0, 0, 378, 380, 374, 376,
	0, 379, 377, 381, 0, 382, 383, 384, 0, 0,
	385, 386, 387, 0, 388, 389, 390, 0, 391, 392,
	393, 0, 394, 395, 0, 396, 397, 398, 400, 402,
	399, 401, 403, 404, 405, 406, 407, 0, 0, 408,
	0, 0, 0, 0, 0, 0, 0, 409, 410, 411,
	0, 0, 0, 0, 412, 0, 413, 414, 415, 0,
	416, 417, 0, 0, 418, 419, 420, 0, 0, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 0, 430,
	0, 0, 0, 431, 0, 432, 433, 434, 435, 436,
	437, 438, 1471, 0, 0, 531, 0, 439, 440, 441,
	0, 442, 443, 444, 445, 446, 0, 0, 0, 0,
	447, 448, 449, 0, 0, 0, 450, 532, 451, 0,
	0, 0, 0, 0, 452, 453, 455, 0, 0, 0,
	454, 456, 457, 0, 458, 0, 0, 0, 459, 460,
	461, 462, 463, 464, 0, 465, 467, 466, 0, 469,
	0, 468, 0, 470, 471, 0, 0, 472, 473, 474,
	475, 476, 477, 480, 0, 0, 478, 479, 481, 482,
	0, 483, 484, 486, 489, 485, 487, 488, 490, 503,
	504, 491, 492, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 506, 0, 505, 0, 507, 508, 509,
	510, 511, 518, 520, 521, 516, 517, 519, 522, 523,
	525, 513, 514, 515, 0, 524, 512, 0, 0, 0,
	526, 527, 528, 529, 0, 0, 530, 0, 533, 534,
	0, 0, 535, 0, 536, 0, 0, 538, 539, 540,
	0, 0, 541, 542, 0, 0, 543, 0, 0, 544,
	545, 537, 546, 547, 548, 549, 550, 551, 552, 553,
	554, 555, 0, 556, 557, 0, 558, 559, 560, 0,
	561, 562, 563, 0, 564, 0, 565, 566, 0, 567,
	568, 569, 0, 570, 571, 572, 573, 574, 575, 576,
	577, 0, 578, 579, 581, 580, 582, 0, 583, 0,
	584, 585, 586, 0, 0, 0, 0, 0, 587, 588,
	590, 0, 591, 592, 593, 594, 589, 595, 596, 597,
	598, 599, 600, 0, 602, 603, 601, 604, 605, 0,
	606, 607, 608, 609, 610, 0, 611, 0, 612, 613,
	620, 621, 622, 614, 615, 616, 623, 624, 625, 626,
	627, 629, 628, 0, 631, 632, 630, 633, 634, 635,
	1477, 636, 0, 637, 617, 618, 638, 639, 0, 640,
	641, 642, 643, 644, 645, 646, 0, 0, 647, 0,
	648, 649, 650, 651, 652, 653, 655, 619, 656, 661,
	662, 0, 657, 658, 659, 660, 0, 664, 665, 666,
	667, 0, 668, 669, 0, 663, 654, 0, 670, 671,
	672, 673, 674, 675, 0, 676, 677, 0, 678, 0,
	0, 0, 0, 0, 690, 0, 679, 681, 682, 683,
	684, 0, 685, 0, 0, 686, 687, 688, 689, 680,
	691, 692, 0, 0, 693, 694, 696, 698, 699, 695,
	697, 700, 0, 701, 0, 0, 702, 703, 704, 0,
	0, 0, 0, 706, 705, 707, 708, 709, 0, 710,
	711, 712, 2298, 0, 1474, 0, 713, 714, 0, 715,
	716, 717, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 308, 309, 311, 310, 312, 313, 314, 315, 0,
	316, 317, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 318, 0, 319, 320, 321, 0, 322, 323, 324,
	325, 326, 327, 328, 0, 0, 0, 329, 0, 330,
	0, 0, 0, 331, 332, 333, 334, 335, 336, 337,
	0, 0, 0, 338, 0, 0, 0, 0, 339, 340,
	0, 0, 0, 0, 341, 342, 343, 344, 345, 346,
	347, 348, 0, 0, 350, 351, 352, 349, 353, 0,
	354, 0, 355, 356, 357, 358, 359, 360, 361, 0,
	362, 363, 364, 0, 365, 366, 367, 0, 0, 0,
	0, 0, 0, 1476, 368, 369, 370, 371, 372, 0,
	373, 375, 0, 0, 0, 378, 380, 374, 376, 0,
	379, 377, 381, 0, 382, 383, 384, 0, 0, 385,
	386, 387, 0, 388, 389, 390, 0, 391, 392, 393,
	0, 394, 395, 0, 396, 397, 398, 400, 402, 399,
	401, 403, 404, 405, 406, 407, 0, 0, 408, 0,
	0, 0, 0, 0, 0, 0, 409, 410, 411, 0,
	0, 0, 0, 412, 0, 413, 414, 415, 0, 416,
	417, 0, 0, 418, 419, 420, 0, 0, 421, 422,
	423, 424, 425, 426, 427, 428, 429, 0, 430, 0,
	0, 0, 431, 0, 432, 433, 434, 435, 436, 437,
	438, 0, 0, 0, 531, 0, 439, 440, 441, 0,
	442, 443, 444, 445, 446, 0, 0, 0, 0, 447,
	448, 449, 0, 0, 0, 450, 532, 451, 0, 0,
	0, 0, 0, 452, 453, 455, 0, 0, 0, 454,
	456, 457, 0, 458, 0, 0, 0, 459, 460, 461,
	462, 463, 464, 0, 465, 467, 466, 0, 469, 0,
	468, 0, 470, 471, 0, 0, 472, 473, 474, 475,
	476, 477, 480, 0, 0, 478, 479, 481, 482, 0,
	483, 484, 486, 489, 485, 487, 488, 490, 503, 504,
	491, 492, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 506, 0, 505, 0, 507, 508, 509, 510,
	511, 518, 520, 521, 516, 517, 519, 522, 523, 525,
	513, 514, 515, 0, 524, 512, 0, 0, 0, 526,
	527, 528, 529, 0, 0, 530, 0, 533, 534, 0,
	0, 535, 0, 536, 0, 0, 538, 539, 540, 0,
	0, 541, 542, 0, 0, 543, 0, 0, 544, 545,
	537, 546, 547, 548, 549, 550, 551, 552, 553, 554,
	555, 0, 556, 557, 0, 558, 559, 560, 0, 561,
	562, 563, 0, 564, 0, 565, 566, 0, 567, 568,
	569, 0, 570, 571, 572, 573, 574, 575, 576, 577,
	0, 578, 579, 581, 580, 582, 0, 583, 0, 584,
	585, 586, 0, 0, 0, 0, 0, 587, 588, 590,
	0, 591, 592, 593, 594, 589, 595, 596, 597, 598,
	599, 600, 0, 602, 603, 601, 604, 605, 0, 606,
	607, 608, 609, 610, 0, 611, 0, 612, 613, 620,
	621, 622, 614, 615, 616, 623, 624, 625, 626, 627,
	629, 628, 0, 631, 632, 630, 633, 634, 635, 1477,
	636, 0, 637, 617, 618, 638, 639, 0, 640, 641,
	642, 643, 644, 645, 646, 0, 0, 647, 0, 648,
	649, 650, 651, 652, 653, 655, 619, 656, 661, 662,
	0, 657, 658, 659, 660, 0, 664, 665, 666, 667,
	0, 668, 669, 0, 663, 654, 0, 670, 671, 672,
	673, 674, 675, 0, 676, 677, 0, 678, 0, 0,
	0, 0, 0, 690, 0, 679, 681, 682, 683, 684,
	0, 685, 0, 0, 686, 687, 688, 689, 680, 691,
	692, 0, 0, 693, 694, 696, 698, 699, 695, 697,
	700, 0, 701, 0, 0, 702, 703, 704, 0, 0,
	0, 0, 706, 705, 707, 708, 709, 0, 710, 711,
	712, 2263, 0, 1474, 0, 713, 714, 0, 715, 716,
	717, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	308, 309, 311, 310, 312, 313, 314, 315, 0, 316,
	317, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	318, 0, 319, 320, 321, 0, 322, 323, 324, 325,
	326, 327, 328, 0, 0, 0, 329, 0, 330, 0,
	0, 0, 331, 332, 333, 334, 335, 336, 337, 0,
	0, 0, 338, 0, 0, 0, 0, 339, 340, 0,
	0, 0, 0, 341, 342, 343, 344, 345, 346, 347,
	348, 0, 0, 350, 351, 352, 349, 353, 0, 354,
	0, 355, 356, 357, 358, 359, 360, 361, 0, 362,
	363, 364, 0, 365, 366, 367, 0, 0, 0, 0,
	0, 0, 1476, 368, 369, 370, 371, 372, 0, 373,
	375, 0, 0, 0, 378, 380, 374, 376, 0, 379,
	377, 381, 0, 382, 383, 384, 0, 0, 385, 386,
	387, 0, 388, 389, 390, 0, 391, 392, 393, 0,
	394, 395, 0, 396, 397, 398, 400, 402, 399, 401,
	403, 404, 405, 406, 407, 0, 0, 408, 0, 0,
	0, 0, 0, 0, 0, 409, 410, 411, 0, 0,
	0, 0, 412, 0, 413, 414, 415, 0, 416, 417,
	0, 0, 418, 419, 420, 0, 0, 421, 422, 423,
	424, 425, 426, 427, 428, 429, 0, 430, 0, 0,
	0, 431, 0, 432, 433, 434, 435, 436, 437, 438,
	0, 0, 0, 531, 0, 439, 440, 441, 0, 442,
	443, 444, 445, 446, 0, 0, 0, 0, 447, 448,
	449, 0, 0, 0, 450, 532, 451, 0, 0, 0,
	0, 0, 452, 453, 455, 0, 0, 0, 454, 456,
	457, 0, 458, 0, 0, 0, 459, 460, 461, 462,
	463, 464, 0, 465, 467, 466, 0, 469, 0, 468,
	0, 470, 471, 0, 0, 472, 473, 474, 475, 476,
	477, 480, 0, 0, 478, 479, 481, 482, 0, 483,
	484, 486, 489, 485, 487, 488, 490, 503, 504, 491,
	492, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 506, 0, 505, 0, 507, 508, 509, 510, 511,
	518, 520, 521, 516, 517, 519, 522, 523, 525, 513,
	514, 515, 0, 524, 512, 0, 0, 0, 526, 527,
	528, 529, 0, 0, 530, 0, 533, 534, 0, 0,
	535, 0, 536, 0, 0, 538, 539, 540, 0, 0,
	541, 542, 0, 0, 543, 0, 0, 544, 545, 537,
	546, 547, 548, 549, 550, 551, 552, 553, 554, 555,
	0, 556, 557, 0, 558, 559, 560, 0, 561, 562,
	563, 0, 564, 0, 565, 566, 0, 567, 568, 569,
	0, 570, 571, 572, 573, 574, 575, 576, 577, 0,
	578, 579, 581, 580, 582, 0, 583, 0, 584, 585,
	586, 0, 0, 0, 0, 0, 587, 588, 590, 0,
	591, 592, 593, 594, 589, 595, 596, 597, 598, 599,
	600, 0, 602, 603, 601, 604, 605, 0, 606, 607,
	608, 609, 610, 0, 611, 0, 612, 613, 620, 621,
	622, 614, 615, 616, 623, 624, 625, 626, 627, 629,
	628, 0, 631, 632, 630, 633, 634, 635, 1477, 636,
	0, 637, 617, 618, 638, 639, 0, 640, 641, 642,
	643, 644, 645, 646, 0, 0, 647, 0, 648, 649,
	650, 651, 652, 653, 655, 619, 656, 661, 662, 0,
	657, 658, 659, 660, 0, 664, 665, 666, 667, 0,
	668, 669, 0, 663, 654, 0, 670, 671, 672, 673,
	674, 675, 0, 676, 677, 0, 678, 0, 0, 0,
	0, 0, 690, 0, 679, 681, 682, 683, 684, 0,
	685, 0, 0, 686, 687, 688, 689, 680, 691, 692,
	0, 0, 693, 694, 696, 698, 699, 695, 697, 700,
	0, 701, 0, 0, 702, 703, 704, 0, 0, 0,
	0, 706, 705, 707, 708, 709, 1474, 710, 711, 712,
	0, 0, 0, 0, 713, 714, 0, 715, 716, 717,
	0, 0, 0, 308, 309, 311, 310, 312, 313, 314,
	315, 0, 316, 317, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 318, 0, 319, 320, 321, 0, 322,
	323, 324, 325, 326, 327, 328, 0, 0, 0, 329,
	0, 330, 0, 0, 0, 331, 332, 333, 334, 335,
	336, 337, 0, 0, 0, 338, 0, 0, 0, 0,
	339, 340, 0, 0, 0, 0, 341, 342, 343, 344,
	345, 346, 347, 348, 0, 0, 350, 351, 352, 349,
	353, 0, 354, 0, 355, 356, 357, 358, 359, 360,
	361, 0, 362, 363, 364, 0, 365, 366, 367, 0,
	0, 0, 0, 0, 0, 1476, 368, 369, 370, 371,
	372, 0, 373, 375, 0, 0, 0, 378, 380, 374,
	376, 0, 379, 377, 381, 0, 382, 383, 384, 0,
	0, 385, 386, 387, 0, 388, 389, 390, 0, 391,
	392, 393, 0, 394, 395, 0, 396, 397, 398, 400,
	402, 399, 401, 403, 404, 405, 406, 407, 0, 0,
	408, 0, 0, 0, 0, 0, 0, 0, 409, 410,
	411, 0, 0, 0, 0, 412, 0, 413, 414, 415,
	0, 416, 417, 0, 0, 418, 419, 420, 0, 0,
	421, 422, 423, 424, 425, 426, 427, 428, 429, 0,
	430, 0, 0, 0, 431, 0, 432, 433, 434, 435,
	436, 437, 438, 0, 0, 0, 531, 0, 439, 440,
	441, 0, 442, 443, 444, 445, 446, 0, 0, 0,
	0, 447, 448, 449, 0, 0, 0, 450, 532, 451,
	0, 0, 0, 0, 0, 452, 453, 455, 0, 0,
	0, 454, 456, 457, 0, 458, 0, 0, 0, 459,
	460, 461, 462, 463, 464, 0, 465, 467, 466, 0,
	469, 0, 468, 0, 470, 471, 0, 0, 472, 473,
	474, 475, 476, 477, 480, 0, 0, 478, 479, 481,
	482, 0, 483, 484, 486, 489, 485, 487, 488, 490,
	503, 504, 491, 492, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 506, 0, 505, 0, 507, 508,
	509, 510, 511, 518, 520, 521, 516, 517, 519, 522,
	523, 525, 513, 514, 515, 0, 524, 512, 0, 0,
	0, 526, 527, 528, 529, 0, 0, 530, 0, 533,
	534, 0, 0, 535, 0, 536, 0, 0, 538, 539,
	540, 0, 0, 541, 542, 0, 0, 543, 0, 0,
	544, 545, 537, 546, 547, 548, 549, 550, 551, 552,
	553, 554, 555, 0, 556, 557, 0, 558, 559, 560,
	0, 561, 562, 563, 0, 564, 0, 565, 566, 0,
	567, 568, 569, 0, 570, 571, 572, 573, 574, 575,
	576, 577, 0, 578, 579, 581, 580, 582, 0, 583,
	0, 584, 585, 586, 0, 0, 0, 0, 0, 587,
	588, 590, 0, 591, 592, 593, 594, 589, 595, 596,
	597, 598, 599, 600, 0, 602, 603, 601, 604, 605,
	0, 606, 607, 608, 609, 610, 0, 611, 0, 612,
	613, 620, 621, 622, 614, 615, 616, 623, 624, 625,
	626, 627, 629, 628, 0, 631, 632, 630, 633, 634,
	635, 1477, 636, 0, 637, 617, 618, 638, 639, 0,
	640, 641, 642, 643, 644, 645, 646, 0, 0, 647,
	0, 648, 649, 650, 651, 652, 653, 655, 619, 656,
	661, 662, 0, 657, 658, 659, 660, 0, 664, 665,
	666, 667, 0, 668, 669, 0, 663, 654, 0, 670,
	671, 672, 673, 674, 675, 0, 676, 677, 0, 678,
	0, 0, 0, 0, 0, 690, 0, 679, 681, 682,
	683, 684, 0, 685, 0, 0, 686, 687, 688, 689,
	680, 691, 692, 0, 0, 693, 694, 696, 698, 699,
	695, 697, 700, 0, 701, 0, 0, 702, 703, 704,
	0, 0, 0, 0, 706, 705, 707, 708, 709, 0,
	710, 711, 712, 0, 0, 0, 0, 713, 714, 0,
	715, 716, 717, 1988, 1989, 0, 2021, 2022, 2023, 2032,
	2033, 2034, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2025, 2019, 0, 0,
	0, 0, 0, 0, 0, 1991, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2038, 1988, 1989, 0,
	2021, 2022, 2023, 2032, 2033, 2034, 0, 0, 0, 0,
	0, 0, 0, 0, 2044, 0, 0, 0, 0, 0,
	2025, 2019, 0, 1990, 0, 0, 0, 0, 0, 1991,
	0, 0, 0, 0, 2010, 0, 0, 0, 0, 0,
	2038, 1988, 1989, 2007, 2021, 2022, 2023, 2032, 2033, 2034,
	0, 0, 0, 0, 0, 0, 0, 0, 2044, 0,
	0, 0, 0, 0, 2025, 2019, 0, 1990, 0, 0,
	0, 0, 0, 1991, 0, 0, 0, 0, 2010, 0,
	0, 0, 0, 0, 2038, 0, 0, 2007, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2044, 0, 0, 0, 0, 0, 0, 0,
	0, 1990, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2010, 0, 2013, 2014, 2015, 2016, 0, 0,
	0, 2007, 0, 0, 1996, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2013, 2014,
	2015, 2016, 0, 0, 0, 0, 0, 2029, 1996, 0,
	0, 2039, 0, 0, 0, 0, 0, 0, 2018, 2020,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2035, 0,
	2036, 0, 2013, 2014, 2015, 2016, 0, 2005, 2006, 0,
	0, 2029, 1996, 0, 0, 2039, 0, 0, 0, 0,
	0, 0, 2018, 2020, 0, 0, 2027, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2011, 2035, 0, 2036, 0, 0, 0, 0, 0,
	0, 2005, 2006, 0, 0, 2029, 0, 1988, 1989, 2039,
	2021, 2022, 2023, 2032, 2033, 2034, 2018, 2020, 0, 0,
	2027, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2025, 2019, 0, 0, 0, 2011, 2035, 0, 2036, 1991,
	2037, 0, 0, 0, 0, 2005, 2006, 0, 0, 0,
	2038, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2026, 0, 0, 2027, 0, 0, 0, 2044, 0,
	0, 0, 2041, 0, 0, 0, 0, 1990, 0, 2011,
	0, 0, 0, 0, 2037, 0, 0, 0, 2010, 0,
	0, 0, 0, 0, 0, 0, 0, 2007, 0, 0,
	0, 0, 0, 0, 0, 2026, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2041, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2037, 0,
	0, 0, 2017, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2026,
	0, 0, 0, 0, 0, 0, 0, 0, 2012, 0,
	2041, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2017, 0, 2013, 2014,
	2015, 2016, 0, 0, 0, 0, 0, 0, 1996, 2030,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2012, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2017, 0, 0, 0, 0, 2043, 0, 0, 0, 0,
	0, 2029, 0, 2030, 0, 2039, 0, 0, 0, 0,
	0, 0, 2018, 2020, 0, 0, 2012, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2035, 0, 2036, 0, 0, 0, 0, 2043,
	0, 2005, 2006, 0, 0, 0, 0, 2030, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2027, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2028, 0, 2011, 0, 0, 0, 0,
	0, 0, 0, 2043, 0, 2002, 2003, 2009, 2031, 2008,
	2004, 0, 2001, 1999, 2000, 1992, 1993, 1994, 1995, 1997,
	1998, 0, 0, 0, 0, 0, 5193, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2028, 0, 0,
	0, 0, 0, 0, 2037, 0, 0, 0, 0, 2002,
	2003, 2009, 2031, 2008, 2004, 0, 2001, 1999, 2000, 1992,
	1993, 1994, 1995, 1997, 1998, 2026, 0, 0, 0, 0,
	5189, 0, 0, 0, 0, 0, 2041, 0, 0, 0,
	0, 2028, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2002, 2003, 2009, 2031, 2008, 2004, 0,
	2001, 1999, 2000, 1992, 1993, 1994, 1995, 1997, 1998, 0,
	0, 0, 0, 0, 5089, 1988, 1989, 0, 2021, 2022,
	2023, 2032, 2033, 2034, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2017, 0, 2025, 2019,
	0, 0, 0, 0, 0, 0, 0, 1991, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2038, 0,
	0, 0, 2012, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2044, 0, 0, 0,
	0, 0, 0, 1988, 1989, 1990, 2021, 2022, 2023, 2032,
	2033, 2034, 0, 2030, 0, 0, 2010, 0, 0, 0,
	0, 0, 0, 0, 0, 2007, 2025, 2019, 0, 0,
	0, 0, 0, 0, 0, 1991, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2038, 0, 0, 2043,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2044, 0, 0, 0, 0, 0,
	0, 0, 0, 1990, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2010, 0, 0, 0, 0, 0,
	0, 0, 0, 2007, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2013, 2014, 2015, 2016,
	0, 0, 0, 0, 0, 0, 1996, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2028, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2002,
	2003, 2009, 2031, 2008, 2004, 0, 2001, 1999, 2000, 1992,
	1993, 1994, 1995, 1997, 1998, 0, 0, 0, 0, 2029,
	5038, 0, 0, 2039, 0, 0, 0, 0, 0, 0,
	2018, 2020, 0, 0, 2013, 2014, 2015, 2016, 0, 0,
	0, 0, 0, 0, 1996, 0, 0, 0, 0, 0,
	2035, 0, 2036, 0, 0, 0, 0, 0, 0, 2005,
	2006, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2027, 0,
	0, 0, 0, 0, 0, 0, 0, 2029, 0, 0,
	0, 2039, 0, 2011, 0, 0, 0, 0, 2018, 2020,
	0, 1988, 1989, 0, 2021, 2022, 2023, 2032, 2033, 2034,
	0, 0, 0, 0, 0, 0, 0, 0, 2035, 0,
	2036, 0, 0, 0, 2025, 2019, 0, 2005, 2006, 0,
	0, 0, 0, 1991, 0, 0, 0, 0, 0, 0,
	0, 0, 2037, 0, 2038, 0, 2027, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2011, 2044, 2026, 0, 0, 0, 0, 0, 0,
	0, 1990, 0, 0, 2041, 0, 0, 0, 0, 0,
	1988, 1989, 2010, 2021, 2022, 2023, 2032, 2033, 2034, 0,
	0, 2007, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2025, 2019, 0, 0, 0, 0, 0,
	2037, 0, 1991, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2038, 0, 0, 0, 0, 0, 0,
	0, 2026, 0, 0, 2017, 0, 0, 0, 0, 0,
	0, 2044, 2041, 0, 0, 0, 0, 0, 0, 0,
	1990, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2012, 2010, 0, 0, 0, 0, 0, 0, 0, 0,
	2007, 0, 2013, 2014, 2015, 2016, 0, 0, 0, 0,
	0, 0, 1996, 0, 0, 0, 0, 0, 0, 0,
	0, 2030, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2017, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2029, 0, 2043, 2012, 2039,
	0, 0, 0, 0, 0, 0, 2018, 2020, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2013, 2014, 2015, 2016, 0, 2035, 0, 2036, 2030,
	0, 1996, 0, 0, 0, 2005, 2006, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2027, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2043, 0, 0, 0, 2011,
	0, 0, 0, 0, 2029, 2028, 0, 0, 2039, 0,
	0, 0, 0, 0, 0, 2018, 2020, 2002, 2003, 2009,
	2031, 2008, 2004, 0, 2001, 1999, 2000, 1992, 1993, 1994,
	1995, 1997, 1998, 0, 0, 2035, 0, 2036, 5037, 0,
	0, 0, 0, 0, 2005, 2006, 0, 0, 2037, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2027, 0, 0, 0, 0, 0, 2026,
	0, 0, 0, 2028, 0, 0, 0, 0, 2011, 0,
	2041, 0, 0, 0, 0, 2002, 2003, 2009, 2031, 2008,
	2004, 0, 2001, 1999, 2000, 1992, 1993, 1994, 1995, 1997,
	1998, 0, 0, 0, 0, 0, 4835, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2037, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2017, 0, 0, 0, 0, 0, 0, 0, 2026, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2041,
	0, 0, 0, 0, 0, 0, 2012, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2030, 1988, 1989,
	0, 2021, 2022, 2023, 2032, 2033, 2034, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2017,
	0, 2025, 2019, 0, 0, 0, 0, 0, 0, 0,
	1991, 0, 0, 2043, 0, 0, 0, 0, 0, 0,
	0, 2038, 0, 0, 0, 2012, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2044,
	0, 0, 0, 0, 0, 0, 0, 0, 1990, 0,
	0, 0, 0, 0, 0, 0, 2030, 0, 0, 2010,
	0, 0, 0, 0, 0, 0, 1988, 1989, 2007, 2021,
	2022, 2023, 2032, 2033, 2034, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2025,
	2019, 2028, 2043, 0, 0, 0, 0, 0, 1991, 0,
	0, 0, 0, 2002, 2003, 2009, 2031, 2008, 2004, 2038,
	2001, 1999, 2000, 1992, 1993, 1994, 1995, 1997, 1998, 0,
	0, 0, 0, 0, 4652, 0, 0, 2044, 0, 0,
	0, 0, 0, 0, 0, 0, 1990, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2010, 0, 2013,
	2014, 2015, 2016, 0, 0, 0, 2007, 0, 0, 1996,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2028, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2002, 2003, 2009, 2031, 2008, 2004, 0, 2001,
	1999, 2000, 1992, 1993, 1994, 1995, 1997, 1998, 0, 0,
	0, 0, 2029, 4555, 0, 0, 2039, 0, 0, 0,
	0, 0, 0, 2018, 2020, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2035, 0, 2036, 0, 2013, 2014, 2015,
	2016, 0, 2005, 2006, 0, 0, 0, 1996, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2027, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2011, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2029, 0, 1988, 1989, 2039, 2021, 2022, 2023, 2032, 2033,
	2034, 2018, 2020, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2025, 2019, 0, 0, 0,
	0, 2035, 0, 2036, 1991, 2037, 0, 0, 0, 0,
	2005, 2006, 0, 0, 0, 2038, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2026, 0, 0, 2027,
	0, 0, 0, 2044, 0, 0, 0, 2041, 0, 0,
	0, 0, 1990, 0, 2011, 0, 0, 0, 0, 0,
	0, 0, 0, 2010, 0, 0, 0, 0, 0, 0,
	0, 0, 2007, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2037, 0, 0, 0, 2017, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2026, 0, 0, 0, 0, 0,
	0, 0, 0, 2012, 0, 2041, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2013, 2014, 2015, 2016, 0, 0, 0,
	0, 0, 0, 1996, 2030, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1988, 1989, 0, 2021, 2022, 2023, 2032, 2033, 2034,
	0, 0, 0, 0, 0, 2017, 0, 0, 0, 0,
	2043, 0, 0, 0, 2025, 2019, 2029, 0, 0, 0,
	2039, 0, 0, 1991, 0, 0, 0, 2018, 2020, 0,
	0, 2012, 0, 0, 2038, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2035, 0, 2036,
	0, 0, 2044, 0, 0, 0, 2005, 2006, 0, 0,
	0, 1990, 2030, 1988, 1989, 0, 2021, 2022, 2023, 2032,
	2033, 2034, 2010, 0, 0, 2027, 0, 0, 0, 0,
	0, 2007, 0, 0, 0, 0, 2025, 2019, 2028, 0,
	2011, 0, 0, 0, 0, 1991, 0, 0, 2043, 0,
	2002, 2003, 2009, 2031, 2008, 2004, 2038, 2001, 1999, 2000,
	1992, 1993, 1994, 1995, 1997, 1998, 0, 0, 0, 0,
	0, 4554, 0, 0, 2044, 0, 0, 0, 0, 0,
	0, 0, 0, 1990, 0, 0, 0, 0, 0, 2037,
	0, 0, 0, 0, 2010, 0, 0, 0, 0, 0,
	0, 0, 0, 2007, 0, 0, 0, 0, 0, 0,
	2026, 0, 2013, 2014, 2015, 2016, 0, 0, 0, 0,
	0, 2041, 1996, 0, 0, 0, 2028, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2002, 2003,
	2009, 2031, 2008, 2004, 0, 2001, 1999, 2000, 1992, 1993,
	1994, 1995, 1997, 1998, 0, 0, 0, 0, 0, 4553,
	0, 0, 0, 0, 0, 2029, 0, 0, 0, 2039,
	0, 0, 0, 0, 0, 0, 2018, 2020, 0, 0,
	0, 2017, 0, 0, 2013, 2014, 2015, 2016, 0, 0,
	0, 0, 0, 0, 1996, 0, 2035, 0, 2036, 0,
	0, 0, 0, 0, 0, 2005, 2006, 2012, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1988, 1989, 2027, 2021, 2022, 2023, 2032, 2033,
	2034, 0, 0, 0, 0, 0, 0, 2029, 2030, 2011,
	0, 2039, 0, 0, 0, 2025, 2019, 0, 2018, 2020,
	0, 0, 0, 0, 1991, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2038, 0, 0, 2035, 0,
	2036, 0, 0, 0, 2043, 0, 0, 2005, 2006, 0,
	0, 0, 0, 2044, 0, 0, 0, 0, 2037, 0,
	0, 0, 1990, 0, 0, 0, 2027, 0, 0, 0,
	0, 0, 0, 2010, 0, 0, 0, 0, 0, 2026,
	0, 2011, 2007, 0, 0, 0, 0, 0, 0, 0,
	2041, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2028, 0, 0, 0, 0, 0, 0, 0,
	2037, 0, 0, 0, 2002, 2003, 2009, 2031, 2008, 2004,
	0, 2001, 1999, 2000, 1992, 1993, 1994, 1995, 1997, 1998,
	2017, 2026, 0, 0, 0, 4154, 0, 0, 0, 0,
	0, 0, 2041, 2013, 2014, 2015, 2016, 0, 0, 0,
	0, 0, 0, 1996, 0, 0, 2012, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2030, 0, 0,
	0, 0, 0, 0, 0, 0, 2029, 0, 0, 0,
	2039, 0, 2017, 0, 0, 0, 0, 2018, 2020, 0,
	1988, 1989, 0, 2021, 2022, 2023, 2032, 2033, 2034, 0,
	0, 0, 0, 2043, 0, 0, 0, 2035, 2012, 2036,
	0, 0, 0, 2025, 2019, 0, 2005, 2006, 0, 0,
	0, 0, 1991, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2038, 0, 2027, 0, 0, 0, 2030,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2011, 2044, 0, 0, 0, 0, 0, 0, 0, 0,
	1990, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2010, 0, 0, 0, 2043, 0, 0, 0, 0,
	2007, 2028, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2002, 2003, 2009, 2031, 2008, 2004, 2037,
	2001, 1999, 2000, 1992, 1993, 1994, 1995, 1997, 1998, 0,
	0, 0, 0, 0, 3594, 0, 0, 0, 0, 0,
	2026, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2041, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2028, 0, 0, 0, 0, 0, 0,
	0, 2013, 2014, 2015, 2016, 2002, 2003, 2009, 2031, 2008,
	2004, 1996, 2001, 1999, 2000, 1992, 1993, 1994, 1995, 1997,
	1998, 0, 0, 0, 0, 0, 3593, 0, 0, 0,
	0, 2017, 0, 0, 0, 0, 0, 0, 0, 1988,
	1989, 0, 2021, 2022, 2023, 2032, 2033, 2034, 0, 0,
	0, 0, 0, 0, 2029, 0, 0, 2012, 2039, 0,
	0, 0, 2025, 2019, 0, 2018, 2020, 0, 0, 0,
	0, 1991, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2038, 0, 0, 2035, 0, 2036, 2030, 0,
	0, 0, 0, 0, 2005, 2006, 0, 0, 0, 0,
	2044, 0, 0, 0, 0, 0, 0, 0, 0, 1990,
	0, 1988, 1989, 2027, 2021, 2022, 2023, 2032, 2033, 2034,
	2010, 0, 0, 0, 2043, 2447, 0, 0, 2011, 2007,
	0, 0, 0, 0, 2025, 2019, 0, 0, 0, 0,
	0, 0, 0, 1991, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2038, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2044, 0, 0, 0, 0, 2037, 0, 0,
	0, 1990, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2010, 0, 0, 0, 0, 0, 2026, 0,
	0, 2007, 2028, 0, 0, 0, 0, 0, 0, 2041,
	2013, 2014, 2015, 2016, 2002, 2003, 2009, 2031, 2008, 2004,
	1996, 2001, 1999, 2000, 1992, 1993, 1994, 1995, 1997, 1998,
	0, 0, 0, 0, 0, 3592, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2448, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2029, 0, 0, 0, 2039, 0, 2017,
	0, 0, 0, 0, 2018, 2020, 0, 0, 0, 0,
	0, 0, 2013, 2014, 2015, 2016, 0, 0, 0, 0,
	0, 0, 1996, 0, 2035, 2012, 2036, 0, 0, 0,
	0, 0, 0, 2005, 2006, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2027, 0, 0, 0, 2030, 0, 0, 0,
	0, 0, 0, 0, 0, 2029, 0, 2011, 0, 2039,
	0, 0, 0, 0, 0, 0, 2018, 2020, 0, 1988,
	1989, 0, 2021, 2022, 2023, 2032, 2033, 2034, 0, 0,
	0, 0, 2043, 0, 0, 0, 2035, 0, 2036, 0,
	0, 0, 2025, 2019, 0, 2005, 2006, 0, 0, 0,
	0, 1991, 0, 0, 0, 0, 2037, 0, 0, 0,
	0, 0, 2038, 0, 2027, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2026, 0, 2011,
	2044, 0, 0, 0, 0, 0, 0, 0, 2041, 1990,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2010, 0, 0, 0, 2377, 0, 0, 0, 0, 2007,
	2028, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2002, 2003, 2009, 2031, 2008, 2004, 2037, 2001,
	1999, 2000, 1992, 1993, 1994, 1995, 1997, 1998, 0, 0,
	0, 0, 0, 3591, 0, 0, 0, 0, 2017, 2026,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2041, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2012, 0, 0, 0, 2375, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2013, 2014, 2015, 2016, 0, 0, 0, 0, 0, 0,
	1996, 0, 0, 0, 0, 2030, 0, 0, 1988, 1989,
	0, 2021, 2022, 2023, 2032, 2033, 2034, 0, 0, 0,
	2017, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2025, 2019, 0, 0, 0, 0, 0, 0, 0,
	1991, 2043, 0, 2029, 0, 0, 2012, 2039, 0, 0,
	0, 2038, 0, 0, 2018, 2020, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2044,
	2449, 0, 0, 0, 2035, 0, 2036, 2030, 1990, 0,
	0, 0, 0, 2005, 2006, 0, 0, 0, 0, 2010,
	0, 0, 0, 0, 0, 0, 0, 0, 2007, 0,
	0, 0, 2027, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2043, 0, 0, 0, 2011, 0, 2028,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2002, 2003, 2009, 2031, 2008, 2004, 0, 2001, 1999,
	2000, 1992, 1993, 1994, 1995, 1997, 1998, 0, 0, 0,
	3556, 0, 0, 0, 0, 0, 0, 0, 2450, 0,
	0, 0, 0, 0, 0, 0, 2037, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2013,
	2014, 2015, 2016, 0, 0, 0, 0, 2026, 0, 1996,
	5380, 2028, 0, 0, 0, 0, 0, 0, 2041, 0,
	0, 0, 0, 2002, 2003, 2009, 2031, 2008, 2004, 0,
	2001, 1999, 2000, 1992, 1993, 1994, 1995, 1997, 1998, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2029, 0, 0, 0, 2039, 0, 0, 0,
	0, 0, 0, 2018, 2020, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2376, 2017, 0,
	0, 0, 0, 2035, 0, 2036, 0, 0, 0, 0,
	0, 0, 2005, 2006, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2012, 0, 0, 0, 0, 1988,
	1989, 2027, 2021, 2022, 2023, 2032, 2033, 2034, 0, 0,
	0, 0, 0, 0, 0, 0, 2011, 0, 0, 0,
	0, 0, 2025, 2019, 0, 2030, 0, 0, 0, 0,
	0, 1991, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2038, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2044, 2043, 0, 0, 0, 2037, 0, 0, 0, 1990,
	0, 0, 2374, 0, 0, 0, 0, 0, 0, 0,
	2010, 0, 0, 0, 0, 0, 2026, 0, 0, 2007,
	0, 0, 0, 0, 0, 0, 0, 2041, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	5379, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2028,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2002, 2003, 2009, 2031, 2008, 2004, 2017, 2001, 1999,
	2000, 1992, 1993, 1994, 1995, 1997, 1998, 0, 0, 0,
	2013, 2014, 2015, 2016, 0, 0, 0, 0, 0, 0,
	1996, 0, 3656, 2012, 0, 0, 0, 0, 0, 3655,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2030, 0, 0, 0, 0, 0,
	0, 0, 0, 2029, 0, 0, 0, 2039, 0, 0,
	0, 0, 0, 0, 2018, 2020, 0, 1988, 1989, 0,
	2021, 2022, 2023, 2032, 2033, 2034, 0, 0, 0, 0,
	2043, 0, 0, 0, 2035, 0, 2036, 0, 0, 0,
	2025, 2019, 0, 2005, 2006, 0, 3526, 0, 0, 1991,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2038, 0, 2027, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2011, 2044, 0,
	0, 0, 0, 0, 0, 0, 0, 1990, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2010, 0,
	0, 0, 0, 0, 0, 0, 0, 2007, 2028, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2002, 2003, 2009, 2031, 2008, 2004, 2037, 2001, 1999, 2000,
	1992, 1993, 1994, 1995, 1997, 1998, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2026, 0, 3527,
	0, 0, 0, 0, 0, 0, 0, 0, 2041, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2013, 2014,
	2015, 2016, 0, 0, 0, 0, 1988, 1989, 1996, 2021,
	2022, 2023, 2032, 2033, 2034, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2017, 2025,
	2019, 0, 0, 0, 0, 0, 0, 0, 1991, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2038,
	0, 2029, 0, 0, 2012, 2039, 0, 0, 0, 0,
	0, 0, 2018, 2020, 0, 0, 0, 2044, 0, 0,
	0, 0, 0, 0, 0, 0, 1990, 0, 0, 0,
	0, 0, 2035, 0, 2036, 2030, 0, 2010, 0, 0,
	0, 2005, 2006, 0, 0, 0, 2007, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2027, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2043, 0, 0, 0, 2011, 0, 1988, 1989, 0,
	2021, 2022, 2023, 2032, 2033, 2034, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2025, 2019, 0, 0, 0, 0, 0, 0, 0, 1991,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2038, 0, 0, 0, 2037, 0, 0, 2013, 2014, 2015,
	2016, 0, 0, 0, 0, 0, 0, 1996, 2044, 4937,
	0, 0, 0, 0, 0, 2026, 0, 1990, 0, 2028,
	0, 0, 0, 0, 0, 0, 2041, 0, 2010, 0,
	0, 2002, 2003, 2009, 2031, 2008, 2004, 2007, 2001, 1999,
	2000, 1992, 1993, 1994, 1995, 1997, 1998, 0, 0, 0,
	2029, 0, 0, 0, 2039, 0, 0, 0, 0, 0,
	0, 2018, 2020, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2035, 0, 2036, 0, 0, 2017, 0, 0, 0,
	2005, 2006, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2027,
	0, 0, 2012, 0, 0, 0, 0, 0, 2013, 2014,
	2015, 2016, 0, 0, 2011, 0, 1988, 1989, 1996, 2021,
	2022, 2023, 2032, 2033, 2034, 0, 0, 0, 0, 0,
	0, 0, 0, 2030, 0, 0, 0, 0, 0, 2025,
	2019, 0, 0, 0, 0, 0, 0, 0, 1991, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2038,
	0, 2029, 0, 2037, 0, 2039, 0, 0, 0, 2043,
	0, 0, 2018, 2020, 0, 0, 0, 2044, 0, 0,
	0, 0, 0, 0, 2026, 0, 1990, 0, 0, 0,
	0, 0, 2035, 0, 2036, 2041, 0, 2010, 0, 0,
	0, 2005, 2006, 0, 0, 0, 2007, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2027, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2011, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2028, 0, 0,
	0, 0, 0, 0, 0, 2017, 0, 0, 0, 2002,
	2003, 2009, 2031, 2008, 2004, 0, 2001, 1999, 2000, 1992,
	1993, 1994, 1995, 1997, 1998, 0, 0, 0, 0, 0,
	0, 2012, 0, 0, 2037, 0, 0, 2013, 2014, 2015,
	2016, 0, 0, 0, 0, 0, 0, 1996, 0, 0,
	0, 0, 0, 0, 0, 2026, 1205, 0, 0, 0,
	0, 0, 2030, 0, 0, 0, 2041, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2029, 0, 0, 0, 2039, 0, 0, 0, 2043, 0,
	0, 2018, 2020, 0, 1988, 1989, 0, 2021, 2022, 2023,
	2032, 2033, 2034, 0, 0, 0, 0, 0, 0, 0,
	0, 2035, 0, 2036, 0, 0, 2017, 2025, 2019, 0,
	2005, 2006, 0, 0, 0, 0, 1991, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2038, 0, 2027,
	0, 0, 2012, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2011, 2044, 0, 0, 0, 0,
	0, 0, 0, 0, 1990, 0, 2028, 0, 0, 0,
	0, 0, 0, 2030, 0, 2010, 0, 0, 2002, 2003,
	2009, 2031, 2008, 2004, 2007, 2001, 1999, 2000, 1992, 1993,
	1994, 1995, 1997, 1998, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2037, 0, 0, 0, 0, 0, 2043,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2026, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2041, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2013, 2014, 2015, 2016, 0,
	0, 0, 0, 1988, 1989, 1996, 2021, 2022, 2023, 2032,
	2033, 2034, 0, 0, 0, 0, 0, 2028, 0, 0,
	0, 0, 0, 0, 0, 2017, 2025, 2019, 0, 2002,
	2003, 2009, 2031, 2008, 2004, 1991, 2001, 1999, 2000, 1992,
	1993, 1994, 1995, 1997, 1998, 0, 2038, 0, 2029, 0,
	0, 2012, 2039, 0, 0, 0, 0, 0, 0, 2018,
	2020, 0, 0, 0, 2044, 0, 0, 0, 0, 0,
	0, 0, 0, 1990, 0, 0, 0, 0, 0, 2035,
	0, 2036, 2030, 0, 2010, 0, 0, 0, 2005, 2006,
	0, 0, 0, 2007, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2027, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2043, 0,
	0, 0, 2011, 0, 1988, 1989, 0, 2021, 2022, 2023,
	2032, 2033, 2034, 0, 0, 0, 0, 4700, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2025, 2019, 0,
	0, 0, 0, 0, 0, 0, 1991, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2038, 0, 0,
	0, 2037, 0, 0, 2013, 2014, 2015, 2016, 0, 0,
	0, 0, 0, 0, 1996, 2044, 4361, 0, 0, 0,
	0, 0, 2026, 0, 1990, 0, 2028, 0, 0, 0,
	0, 0, 0, 2041, 0, 2010, 0, 0, 2002, 2003,
	2009, 2031, 2008, 2004, 2007, 2001, 1999, 2000, 1992, 1993,
	1994, 1995, 1997, 1998, 0, 0, 0, 2029, 0, 0,
	0, 2039, 0, 0, 0, 0, 0, 0, 2018, 2020,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2035, 0,
	2036, 0, 0, 2017, 0, 0, 0, 2005, 2006, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2027, 0, 0, 2012,
	0, 0, 0, 0, 0, 2013, 2014, 2015, 2016, 0,
	0, 2011, 0, 1988, 1989, 1996, 2021, 2022, 2023, 2032,
	2033, 2034, 0, 0, 0, 0, 0, 0, 0, 0,
	2030, 0, 0, 0, 0, 0, 2025, 2019, 0, 0,
	0, 0, 0, 0, 0, 1991, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2038, 0, 2029, 0,
	2037, 0, 2039, 0, 0, 0, 2043, 0, 0, 2018,
	2020, 0, 0, 0, 2044, 0, 0, 0, 0, 0,
	0, 2026, 0, 1990, 0, 4362, 0, 0, 0, 2035,
	0, 2036, 2041, 0, 2010, 0, 0, 0, 2005, 2006,
	0, 0, 0, 2007, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2027, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2011, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2028, 0, 0, 0, 0, 0,
	0, 0, 2017, 0, 0, 0, 2002, 2003, 2009, 2031,
	2008, 2004, 0, 2001, 1999, 2000, 1992, 1993, 1994, 1995,
	1997, 1998, 0, 0, 0, 0, 0, 0, 2012, 0,
	0, 2037, 0, 0, 2013, 2014, 2015, 2016, 0, 0,
	0, 0, 0, 0, 1996, 0, 0, 0, 0, 0,
	0, 0, 2026, 3662, 0, 0, 0, 0, 0, 2030,
	0, 0, 0, 2041, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2029, 0, 0,
	0, 2039, 0, 0, 0, 2043, 0, 0, 2018, 2020,
	0, 1988, 1989, 0, 2021, 2022, 2023, 2032, 2033, 2034,
	0, 0, 0, 0, 0, 0, 0, 0, 2035, 0,
	2036, 0, 0, 2017, 2025, 2019, 0, 2005, 2006, 3657,
	0, 0, 0, 1991, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2038, 0, 2027, 0, 0, 2012,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2011, 2044, 0, 0, 0, 0, 0, 0, 0,
	0, 1990, 0, 2028, 0, 0, 0, 0, 0, 0,
	2030, 0, 2010, 0, 0, 2002, 2003, 2009, 2031, 2008,
	2004, 2007, 2001, 1999, 2000, 1992, 1993, 1994, 1995, 1997,
	1998, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2037, 0, 0, 0, 0, 0, 2043, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4135,
	0, 2026, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2041, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2013, 2014, 2015, 2016, 0, 0, 0, 0,
	1988, 1989, 1996, 2021, 2022, 2023, 2032, 2033, 2034, 0,
	0, 0, 0, 0, 2028, 0, 0, 0, 0, 0,
	0, 0, 2017, 2025, 2019, 0, 2002, 2003, 2009, 2031,
	2008, 2004, 1991, 2001, 1999, 2000, 1992, 1993, 1994, 1995,
	1997, 1998, 0, 2038, 0, 2029, 0, 0, 2012, 2039,
	0, 0, 0, 0, 0, 0, 2018, 2020, 0, 0,
	0, 2044, 0, 0, 0, 0, 0, 0, 0, 0,
	1990, 0, 0, 0, 0, 0, 2035, 0, 2036, 2030,
	0, 2010, 0, 0, 0, 2005, 2006, 0, 0, 0,
	2007, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2027, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2043, 0, 0, 0, 2011,
	0, 1988, 1989, 0, 2021, 2022, 2023, 2032, 2033, 2034,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2025, 2019, 0, 0, 0, 3595,
	0, 0, 0, 1991, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2038, 0, 0, 0, 2037, 0,
	0, 2013, 2014, 2015, 2016, 0, 0, 0, 0, 0,
	0, 1996, 2044, 0, 0, 0, 0, 0, 0, 2026,
	0, 1990, 0, 2028, 0, 0, 0, 0, 0, 0,
	2041, 0, 2010, 0, 0, 2002, 2003, 2009, 2031, 2008,
	2004, 2007, 2001, 1999, 2000, 1992, 1993, 1994, 1995, 1997,
	1998, 0, 0, 0, 2029, 0, 0, 0, 2039, 0,
	0, 0, 0, 0, 0, 2018, 2020, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2035, 0, 2036, 0, 0,
	2017, 0, 0, 0, 2005, 2006, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2027, 0, 0, 2012, 0, 0, 0,
	0, 0, 2013, 2014, 2015, 2016, 0, 0, 2011, 0,
	0, 0, 1996, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2030, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2029, 0, 2037, 0, 2039,
	0, 0, 0, 2043, 0, 0, 2018, 2020, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2026, 0,
	0, 0, 0, 0, 0, 0, 2035, 0, 2036, 2041,
	0, 0, 0, 0, 0, 2005, 2006, 0, 0, 0,
	3622, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2027, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2011,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2028, 0, 0, 0, 0, 0, 0, 0, 2017,
	0, 0, 0, 2002, 2003, 2009, 2031, 2008, 2004, 0,
	2001, 1999, 2000, 1992, 1993, 1994, 1995, 1997, 1998, 0,
	0, 0, 0, 0, 0, 2012, 0, 0, 2037, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2026,
	0, 0, 0, 0, 0, 0, 2030, 0, 0, 0,
	2041, 0, 0, 0, 1988, 1989, 0, 2021, 2022, 2023,
	2032, 2033, 2034, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2025, 2019, 0,
	0, 0, 2043, 0, 0, 0, 1991, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2038, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2017, 0, 0, 0, 0, 2044, 0, 0, 0, 0,
	0, 0, 0, 0, 1990, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2010, 2012, 0, 0, 0,
	0, 0, 0, 0, 2007, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2028, 0, 0, 0, 0, 0, 0, 2030, 0, 0,
	0, 0, 2002, 2003, 2009, 2031, 2008, 2004, 0, 2001,
	1999, 2000, 1992, 1993, 1994, 1995, 1997, 1998, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2043, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2013, 2014, 2015, 2016, 0,
	0, 0, 0, 0, 0, 1996, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2029, 0,
	0, 2028, 2039, 0, 0, 0, 0, 0, 0, 2018,
	2020, 0, 0, 2002, 2003, 2009, 2031, 2008, 2004, 0,
	2001, 1999, 2000, 1992, 1993, 1994, 1995, 1997, 1998, 2035,
	0, 2036, 0, 0, 0, 0, 0, 0, 2005, 2006,
	0, 0, 0, 0, 1988, 1989, 0, 2021, 2022, 2023,
	2032, 2033, 2034, 0, 0, 0, 0, 2027, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2025, 2019, 0,
	0, 0, 2011, 0, 0, 0, 1991, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2038, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2044, 0, 0, 0, 0,
	0, 0, 0, 0, 1990, 0, 0, 0, 0, 0,
	0, 2037, 0, 0, 0, 2010, 0, 0, 0, 0,
	0, 0, 0, 0, 2007, 0, 0, 0, 0, 0,
	0, 0, 2026, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2041, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2017, 0, 2013, 2014, 2015, 2016, 0,
	0, 0, 0, 0, 0, 1996, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2012,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2029, 0,
	2030, 0, 2039, 0, 0, 0, 0, 0, 0, 2018,
	2020, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2035,
	0, 2036, 0, 0, 0, 0, 2043, 0, 2005, 2006,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2027, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2011, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2564, 0, 0,
	0, 0, 0, 0, 2028, 0, 0, 0, 0, 0,
	0, 2037, 0, 0, 0, 0, 2002, 2003, 2009, 2031,
	2008, 2004, 0, 2001, 1999, 2000, 1992, 1993, 1994, 1995,
	1997, 1998, 2026, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2041, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2017, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2012,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2030, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2043, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2028, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2002, 2003, 2009, 2031,
	2008, 2004, 0, 2001, 1999, 2000, 1992, 1993, 1994, 1995,
	1997, 1998,
}

var sqlPact = [...]int32{
	8827, -1000, -1000, -1000, -1000, -1000, -1000, 156, -1000, -1000,
	155, 154, 153, 152, 150, 148, 147, 146, 145, 143,
	140, -1000, -1000, 139, 138, 137, 136, -1000, 135, 134,
	-1000, 133, -1000, -1000, 132, -1000, 130, 129, 128, -1000,
	-1000, 127, -1000, 125, -1000, -1000, -1000, -1000, 124, 122,
	121, 106616, 106007, 107223, 2581, 134592, 116342, 2160, 95057, 133983,
	94448, 133374, 2456, 13561, 132765, 3045, 119, -1000, 132156, 117,
	116, 115, -1000, 115733, 131547, 113299, 112690, 2274, 1825, 1818,
	-1000, 114, 113, -1000, 11346, 80367, 112, 110, 108, 107,
	2515, 106, -1000, 105, 103, -1000, 102, 101, -1000, 18993,
	1629, -1000, 100, 99, 97, -1000, 6086, 112081, 95, 94,
	93, 2813, 92, 90, 77937, 89, 88, 86, 2563, 3182,
	-1000, -1000, 2382, -1000, -1000, 85, 83, 82, 80, 79,
	78, 76, 74, 69, 67, 59, 58, 57, -1000, 53,
	52, 51, 50, 49, -1000, 48, 45, 44, -1000, 43,
	-1000, 41, 40, 38, 36, 35, 34, 32, 29, 28,
	27, 25, 24, 21, 20, 19, 19716, -1000, -1000, 15,
	-1000, 2174, 1812, 1785, 1780, 1010, 14, 13, 12, 11,
	10, 9, 8, 7, 6, 5, 4, 3, -7, -9,
	-12, -14, -19, -20, -21, -22, -1000, 126, -23, -26,
	-29, -30, -31, -32, -34, 5300, 3874, -1000, 1945, 1287,
	1260, 35015, 3302, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 143697, 135199, -36, -106, -37,
	-1000, 3664, 1002, 63804, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 218, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 453, 2375, 705, -1000, -1000, -1000,
	130938, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2579,
	-13, 95664, -1000, 2304, -1000, -1000, -1000, -1000, -1000, 704,
	-1000, 2576, 2519, 350, 2512, 95664, -1000, -1000, -1000, 3729,
	3625, 2726, 4209, 4208, 4207, 4206, 4205, 143090, 1992, 4204,
	2805, 4203, 4200, 4199, 4197, 4194, 4193, 4192, -1000, 105398,
	1083, 104789, 104180, 3725, 130331, 103571, 129722, 146131, 53831, 1153,
	3723, -1000, -1000, -1000, -1000, -1000, -1000, 135199, -1000, 1080,
	-1000, -1000, 4191, 2291, 702, 115124, -1000, -1000, 129113, 2110,
	-1000, -1000, -1000, 951, 1239, 37511, 37511, 37511, 217, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 3748, -1000, -1000, -1000,
	-1000, 135199, 3038, 3038, 1463, 1402, 1402, 3038, 3038, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 4190, 4187, 4186,
	4185, 4184, 2006, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	93839, 27338, 93230, 92621, 128504, 53207, 102962, 102353, 4183, 4182,
	4181, 52583, 88358, 61316, 3872, 127895, 145522, 3871, 3870, 1075,
	2303, 1554, -1000, -1000, -1000, -1000, -1000, -1000, -58, 84031,
	3953, 135199, -1000, 210, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 51959, 1188, 51335, 1014, 50711, 999, 127286, -1000, -1000,
	-1000, -1000, -1000, 87739, 3624, -1000, 126677, 1679, 2725, 4179,
	4178, 1201, 4177, 3609, 1969, 4175, 4173, 4169, 4165, 4164,
	4163, 4162, 1636, 126068, 2975, 125459, 1976, 144913, 2172, 1074,
	101744, 107223, 2925, 124850, 1591, 1562, -1000, -1000, -1000, -1000,
	3399, 3143, 3115, 1390, -1000, -1000, -1000, -1000, -1000, 67510,
	9291, 7608, -1000, -1000, 14307, 124241, 70595, 107223, 107223, -1000,
	-1000, -1000, -1000, -1000, -1000, 50087, 987, 49463, 843, 123632,
	-1000, -1000, 68127, 3244, 1151, -1000, -1000, -1000, -1000, -1000,
	123023, 48839, 745, 48215, 798, 135199, -1000, 3300, 2139, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2734, 1728,
	3930, 3055, 87120, 2271, 1499, 3668, 3390, 3388, 1598, 2290,
	3386, 4161, 2912, 3380, 3379, 3378, 3374, 3373, 1835, 2869,
	708, 2851, 34391, 3279, 2027, 47591, 1654, 1603, 3372, 3371,
	3961, 3803, 2282, 2229, 2224, 2265, 92012, 4160, 4153, 3642,
	3365, 3359, 3103, 3328, 2195, -1000, 3242, 1632, 209, -1000,
	-1000, -1000, -1000, -1000, -1000, 209, 1565, -1000, -1000, -1000,
	-1000, -1000, 96878, -1000, -1000, 2006, -1000, -1000, -1000, 1403,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1945, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2890, -1000, 2352, -1000, -1000,
	-1000, 2778, 3641, 3641, 3641, 3718, 408, 407, -1000, 126,
	863, 1181, -1000, -1000, 154743, -1000, -1000, 54455, 54455, 54455,
	54455, 54455, 54455, 54455, 54455, 2467, -1000, 701, -1000, -1000,
	746, -1000, 700, 609, 550, -1000, -1000, -1000, -1000, -1000,
	-1000, 699, -1000, -1000, -1000, -1000, -1000, -1000, 3900, -1000,
	30510, -1000, -1000, -1000, 396, 698, 54455, -1000, -1000, 3990,
	3989, 908, -1000, 208, 984, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 3294, 697, 696,
	-1000, 686, 685, 683, 681, 679, -1000, 677, -1000, 676,
	675, 674, 673, 665, 652, 648, 647, -1000, 2327, -1000,
	-1000, -1000, -1000, -1000, -1000, 595, 594, 594, 594, -1000,
	1069, -1000, -1000, -1000, 235, 593, 224, 591, 588, 587,
	-1000, 645, 643, 641, 640, 635, 625, 617, 616, 615,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1063, -1000, -1000,
	-1000, -1000, 1440, -60, 135199, -1000, 453, -60, -1000, -1000,
	614, -1000, 38777, 38777, 38777, -1000, -1000, 2575, 54455, -1000,
	2635, -1000, -51, -51, 927, 65655, -1000, 62552, 927, 392,
	757, 71821, -1000, 3240, -1000, -1000, 613, 202, -1000, -1000,
	-1000, -1000, 27955, 3238, 135199, 135199, 135199, 107223, 107223, 107223,
	135199, 4152, 4151, 3522, 54455, -1000, -1000, 79758, 147952, 107830,
	1382, -59, -1000, -1000, 3854, 83414, 79151, 3288, 147952, 3287,
	3237, 147349, 86501, 4148, -1000, -1000, -1000, -1000, -1000, 3501,
	4145, 4143, 4142, -1000, 135199, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 262, 3499, -1000, -1000, 111472, 262, 3497, -1000,
	262, 3489, -1000, 110865, -1000, -1000, 2555, 3459, -1000, -1000,
	267, 3457, -1000, -1000, -1000, 263, 3455, -1000, -1000, 199,
	-104, 3446, -1000, -1000, -1000, -1000, -1000, -1000, 154743, -1000,
	-1000, -1000, 146740, -1000, 3639, -1000, 135199, -1000, 54455, -1000,
	-1000, 3853, 1930, 3691, 3778, -1000, -1000, -73, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2779, 2770, 1199, 2614, -1000,
	3543, 1439, 37511, 3592, -1000, -1000, -1000, -1000, -1000, 197,
	27955, 3049, -1000, -1000, 135199, -1000, 135199, 3038, 3038, -1000,
	-1000, -1000, 3954, 3952, 3038, 3038, 135199, 135199, -1000, -1000,
	-1000, -1000, -1000, -1000, -73, -1000, 2865, 3443, 1340, -1000,
	2611, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2191, 3442, -1000, 3747, 3441, 2178, -1000, -1000, 2239, -1000,
	151648, 1456, -1000, -1000, -1000, -1000, 1757, 3430, -50, -1000,
	-1000, 2526, -1000, -1000, -1000, -1000, 151410, -1000, 3188, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1951, -1000,
	-1000, 2296, 2281, -1000, 1369, 3429, -1000, 3052, 3052, 101135,
	3461, 69978, 68127, 84031, -71, -1000, -1000, -1000, -1000, -1000,
	-105, -1000, 26713, 154743, -1000, -1000, -1000, -1000, 2078, 154743,
	915, -1000, -1000, 3425, -1000, 154743, 878, -1000, -1000, 3420,
	-1000, 2856, -1000, 3285, -1000, -1000, -1000, 2681, 85882, 2679,
	1030, -1000, 107223, 2292, 4141, -1000, 4140, -1000, -1000, 4139,
	-1000, 4137, 4136, 4130, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 100528, 2567, -1000, -1000, 1548, 992, 88975, -1000, 2676,
	3776, -1000, 99919, 1073, -1000, 1017, 2675, -1000, 1502, 110258,
	1007, 2668, -1000, 4128, 3724, 2959, 1017, 2667, -1000, -1000,
	-1000, -1000, -1000, 985, -1000, 73035, -1000, 73035, -1000, 1809,
	-1000, 142483, -51, 107223, 3900, -1000, -111, -1000, -1000, -1000,
	1002, -1000, 66890, -1000, 66890, 114515, 88975, 992, 3236, 76094,
	154473, -1000, 1029, -1000, -1000, 154743, -1000, -1000, -1000, 2855,
	-1000, -218, 3051, -1000, 88975, 69361, 3234, 2848, -1000, 154743,
	-1000, -1000, -1000, -1000, 154743, -1000, -1000, -1000, 88975, 1548,
	-1000, 122414, 99310, -1000, -1000, 1625, 2818, -1000, -1000, -1000,
	68127, 3231, 1372, 88975, 88975, 88975, -1000, 121805, -1000, -1000,
	2306, 1786, 3634, 2289, 107223, -1000, 2052, -1000, -1000, -1000,
	3657, 3460, 135199, -1000, -1000, 3281, -1000, 82807, 109651, -1000,
	109044, -1000, 108437, -1000, 107223, -1000, 107223, -1000, 4126, 4125,
	4121, -1000, -1000, 4120, -1000, 4117, 3648, -1000, 758, 46967,
	154743, 3643, -1000, 4114, 2206, 3279, 154743, -1000, 3453, 1816,
	1775, 135199, -1000, -1000, 135199, -1000, 135199, -1000, -1000, -1000,
	2593, 1721, -1000, -1000, 2777, -1000, -1000, -1000, 1028, -1000,
	-1000, 107223, 107223, 107223, 107223, 107223, 1686, -1000, 46343, -1000,
	-1000, 3318, 4108, 1911, -1000, 2041, -1000, 3228, 3689, -1000,
	3225, 1619, 2032, 193, 4001, 193, -1000, -1000, 270, -1000,
	-1000, 141876, -1000, 2778, -1000, 135199, -1000, 2782, 3262, 3278,
	1843, 2591, 2879, -1000, 45719, 2854, 58199, 2604, 126, -1000,
	-1000, 126, 126, 36263, -1000, -1000, 37511, 863, 83414, 83414,
	27955, 1421, 54455, 54455, 54455, 54455, 54455, 54455, 54455, 54455,
	54455, 54455, 54455, 54455, 54455, 54455, 54455, 54455, 54455, 54455,
	54455, 54455, 54455, 54455, 54455, 54455, 54455, 54455, 54455, 54455,
	54455, 54455, 54455, 54455, 54455, 54455, 54455, 54455, 2247, 54455,
	1379, 54455, 54455, 54455, 54455, 1783, -1000, -1000, 2176, 483,
	2392, 609, -1000, -1000, -1000, 3906, 3906, 3906, 2123, 2123,
	2123, 15351, 15351, 471, 4107, 746, -1000, 54455, -1000, 75,
	66262, 54455, 28574, -1000, 407, 12407, 2808, -1000, 406, 29228,
	-1000, -1000, -1000, 30510, 550, 45065, 54455, 1036, 154743, -1000,
	-1000, 1831, 3941, 26088, 3311, 3094, 608, 854, 853, 33737,
	33083, 32429, 31775, 847, 750, 54455, 54455, 54455, 54455, 54455,
	54455, 54455, 54455, -1000, -1000, 3951, -1000, 3941, -1000, -1000,
	-1000, -1000, 3941, 1406, 1294, 3941, -1000, 3941, 3941, 6458,
	6458, 44441, 43817, 43193, 58823, 42569, 54455, 31151, 41945, 41321,
	-1000, 60695, 135199, -60, 3845, 54455, 345, -1000, 13292, -1000,
	345, 345, 606, -113, 154743, 2834, 2834, 64421, 2612, 2479,
	2479, 2479, -1000, 927, 20424, 927, 119984, 2492, 927, 927,
	188, 207, 405, 61935, 2635, 119984, 732, 605, -39, -41,
	-42, -1000, -1000, -46, -47, -1000, -1000, 107223, 602, 28574,
	27955, 186, 2268, -114, 2902, 2896, 2894, 2893, -1000, 2892,
	2564, -1000, -1000, -1000, 2065, -119, 1373, 107223, 135199, 1623,
	-1000, -1000, -1000, -1000, 84031, -61, 84031, 135199, -81, -1000,
	147952, 7179, -120, -1000, 1254, 182, 3941, -1000, -1000, -1000,
	-1000, -1000, 4106, 4102, -1000, 1048, 599, 596, 458, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 595, 594, 594,
	594, -1000, 235, 593, 224, 591, 588, 587, -1000, -1000,
	-1000, -1000, -1000, 3224, 107223, 135199, 1616, 82200, 98701, -104,
	107830, 147952, -65, -1000, -1000, -1000, -1000, 135199, -1000, -1000,
	-1000, 4100, -1000, 107223, -1000, -1000, 107223, 262, 3419, -1000,
	107223, -1000, 107223, 259, 3414, -1000, -1000, 135199, -1000, 107223,
	107223, -1000, 135199, 135199, 135199, 147952, 147952, 253, -1000, 107223,
	863, -122, 1207, -73, -1000, -1000, -1000, -1000, 2006, -1000,
	1916, -1000, -1000, -1000, -1000, -1000, -1000, 1646, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 908, -1000, -1000, -1000,
	-1000, 3937, 3933, -69, -1000, -1000, 27955, -1000, 2171, -1000,
	-1000, -1000, -1000, 135199, 135199, -1000, -1000, 135199, 135199, -1000,
	-1000, -76, 1774, 527, 1371, -1000, 91403, 2644, 3632, 4099,
	2951, 3620, 1790, -1000, 1719, 586, -1000, 3720, 96878, 3799,
	3821, 1366, -1000, 3219, -1000, -1000, -1000, 950, 1910, 2021,
	1364, 1361, 96878, 3747, -1000, 83414, -1000, 2932, 3715, 1402,
	1429, 1402, 1402, 1494, 1442, -1000, 96878, 2020, 1358, 1357,
	1356, -1000, -1000, 1829, 1887, -1000, -1000, 121198, 1687, -1000,
	1355, 1354, 136413, 3869, 2890, 2486, 789, 2243, -1000, 1454,
	1353, 3218, -1000, -1000, -78, 3794, 3819, 1366, -1000, 3213,
	1352, -1000, -1000, -1000, 3712, 107223, 27955, 1683, 1664, 1651,
	2018, 1351, -62, -1000, 3791, 1729, -1000, 1548, 1548, 116949,
	135199, 3833, 88975, -1000, 2672, -1000, -1000, -1000, 3667, 3666,
	-1000, -1000, 1350, 1347, -1000, 1032, 2789, 3571, -1000, 147952,
	1032, 1032, 2159, 3413, 2996, 1708, -1000, 3044, 917, 3042,
	-1000, -1000, -1000, 917, -71, 84031, 135199, 181, -1000, 75,
	54455, 54455, 75, 54455, 75, -1000, 3770, 3408, 3841, -1000,
	3405, 4098, 583, -1000, 2795, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 582, 2666, 3212, 135199, 225, -1000, 107223, -1000,
	3840, 120591, -1000, 3404, 147952, 3747, 2665, -1000, -1000, 98094,
	-1000, 3402, 2242, 453, 2662, -1000, 472, 4096, 3396, -1000,
	141269, -1000, 3639, 1497, 3394, 1148, 603, 3839, -1000, 603,
	74253, -1000, 135199, -1000, -51, 841, 90189, -128, -131, 404,
	-1000, 135199, 135199, 3579, 2258, 2253, -1000, 1006, 68127, -1000,
	68127, -140, -1000, -218, 3040, 1702, 68127, -1000, 992, -157,
	917, -1000, 917, -1000, 107223, 3277, -1000, 88975, 68127, -1000,
	992, 992, 992, -1000, -1000, -1000, -1000, 4095, 4091, 4090,
	4089, -1000, -1000, 1015, 107223, 135199, 107223, -1000, 2990, 1704,
	-1000, 180, -1000, 147952, -1000, 147952, 135199, 107223, -1000, 1015,
	135199, 1015, 135199, 1015, 135199, 1015, 1015, -1000, -1000, -1000,
	-1000, -1000, 75, -1000, -1000, 154743, -1000, 54455, -1000, -1000,
	1715, 4087, 1841, -1000, 3273, -1000, 3264, -1000, -3, -1000,
	-1000, 3946, 2153, -1000, 3988, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 4084, 154743, -1000, 2152, -1000, -1000,
	-1000, -1000, 107223, 107223, 107223, 107223, 135199, 3570, -1000, 135199,
	3560, 3563, 107223, -1000, 3992, -1000, -1000, 96878, -1000, 2782,
	3262, -1000, -1000, -1000, -1000, -1000, -1000, 1827, 2531, -1000,
	2830, -1000, 1769, -1000, -1000, -1000, 154743, 59447, -1000, -1000,
	154743, 2060, -1000, 57575, 56951, -1000, -1000, 1925, 107223, 2927,
	-1000, 2927, -103, -1000, 152356, 2828, 107223, -69, 37511, -1000,
	-1000, -1000, -1000, -1000, 949, 1222, 1222, 1395, 1395, 1395,
	1395, 3740, 5674, 5708, 1305, 17472, 17472, 456, 456, 456,
	456, 456, 17472, 551, 2123, 2123, 551, 551, 551, 551,
	551, 2123, 2123, 2123, 17472, 17472, 17472, 2123, 15351, 16036,
	11471, 54455, 54455, 1337, 2154, 483, 11455, 54455, 13074, 13074,
	13074, 13074, -1000, 2236, -1000, -1000, -1000, -1000, 3211, 579,
	58823, 58823, -1000, -1000, -1000, -1000, 29869, 54455, -1000, -1000,
	-1000, -1000, 40667, -1000, -1000, 151338, -342, 402, -1000, 179,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 401, -102, 96, -1000, 54455, 54455, 54455,
	400, -1000, 172, 54455, 135199, -1000, 19482, 731, -127, -1000,
	-141, 1498, -1000, 54455, -1000, -1000, 1333, -1000, 1321, 1315,
	1314, -1000, 578, 398, -1000, 171, -1000, 2474, 575, 574,
	54455, -1000, -1000, -1000, -1000, -1000, 151129, -1000, -1000, 150891,
	-1000, -1000, 150682, -1000, -1000, 150610, -1000, -1000, -1000, -1000,
	-1000, 154090, 18970, 17987, 17202, 10030, 16503, 14387, -143, 394,
	-146, 384, 946, 942, 382, 376, 355, -148, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-149, 344, -1000, 3210, -102, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 343, -1000, 340, -1000, 153969, -102, 339,
	5586, -1000, 58823, 58823, 58823, 58823, 333, -1000, 152118, -1000,
	153790, 40043, 40043, 40043, 332, 153552, 54455, -102, -151, -1000,
	-154, -1000, -1000, -1000, -1000, 494, -156, 1004, 38777, 63185,
	27955, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1004, 1004, 54455, -1000, 54455, 2846, -1000, -1000,
	-1000, -1000, 2840, 2169, 2834, 64421, -1000, -1000, -1000, -1000,
	119984, -1000, 3900, 3126, -1000, 119984, -1000, -1000, 135199, 453,
	-1000, 119984, 119984, 27955, 927, -1000, 927, 119984, 774, -1000,
	-1000, -1000, -1000, -1000, 315, 76711, 96, 165, 27955, 1017,
	-1000, -1000, 2992, 2992, 2992, 2992, 2992, 107223, -1000, -1000,
	147952, 1313, -66, -67, 3035, 3032, -71, 84031, -71, -105,
	3878, -279, -1000, 2344, -1000, 83414, -1000, 744, 1208, 27955,
	-1000, -1000, -1000, 561, -1000, 3941, 3941, -1000, 3941, 147952,
	3207, 295, 3012, 3010, -1000, 2562, 95664, 291, -104, 147952,
	4083, -1000, -1000, 262, -1000, 107223, 262, 262, -1000, 107223,
	107223, 2555, -1000, 267, -1000, 263, -1000, -1000, -104, -1000,
	1027, 37511, -1000, 2006, -1000, -1000, 1672, -1000, 2275, -1000,
	1291, -1000, -1000, 37511, -1000, 3583, -1000, 2023, -1000, -1000,
	-1000, -1000, 3255, 135199, 135199, 107223, -1000, 118163, 135199, -1000,
	2411, 147952, -1000, 2659, 140662, 2642, 140055, 83414, -1000, -1000,
	560, 968, 2825, 2824, 1142, 135199, 135199, 2822, 139448, 138841,
	-1000, 4082, 135199, 2335, 54455, 118163, 3710, 2517, 2442, 75,
	75, -1000, 75, -1000, -1000, 557, 1257, 107223, 107223, 135199,
	147952, 107223, 2101, -1000, -1000, -1000, -1000, -1000, 97485, -1000,
	-1000, 1402, -1000, -1000, -1000, 1402, -1000, 1402, 3747, 2047,
	135199, 147952, 107223, 147952, 138234, 2241, 137627, 2240, 2218, -1000,
	-1000, -1000, 2193, 2214, 2003, 135199, -1000, -1000, -1000, -1000,
	-1000, 1524, -1000, 789, 1310, 3206, 54455, 54455, 2417, 75,
	75, -1000, 75, 556, 27955, 2237, -1000, 3209, 135199, 3987,
	137020, 3983, 135199, 135199, 135199, 147952, 3647, 135199, -1000, -157,
	-63, -116, -1000, 903, 902, -105, -1000, 3833, -1000, 901,
	2291, 135199, 147952, -1000, 136413, 2789, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2365, 2983, 1156, 135199, 1369, -1000, -1000,
	2002, 1309, 1304, 96878, 2374, 2000, 2114, 147952, 68127, 1009,
	68127, 2966, -1000, -1000, 25463, -1000, 154743, 154743, -1000, 154743,
	-1000, 81591, 88975, 88975, 135199, -1000, 74870, 135199, 90796, 963,
	3393, 73644, -105, 992, 1548, 3320, 1918, -116, 555, 135199,
	-1000, -1000, 3747, 3391, 453, 2655, -1000, 147952, 1072, 3838,
	3384, 554, 4074, 4072, -1000, 107223, 2561, 2653, -1000, -1000,
	135806, 3398, 789, 135199, 1004, 64421, 2234, -1000, 71214, 1100,
	135199, 2151, 261, -1000, -1000, -1000, -27, 135199, -1000, 756,
	-1000, -1000, 841, 841, 992, 68744, -165, -1000, 164, 552,
	899, 894, -1000, 3536, -1000, -218, -1000, 88975, 1006, 68127,
	3201, -218, 3009, 3198, -1000, -1000, 1025, -1000, 1533, 3004,
	992, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -53, -1000, 1998, 2102, 135199, -104, -104, -85,
	-1000, -1000, 163, -66, -1000, 1015, -1000, 1015, -1000, 1015,
	-1000, -1000, -1000, 154743, -1000, -1000, -1000, 1833, 1832, 135199,
	-1000, 3259, -1000, 135199, -1000, -1000, 27955, 135199, 107223, 27955,
	107223, 3258, 3256, -1000, -1000, -1000, 135199, -1000, -1000, 135199,
	-1000, -1000, -1000, -1000, -1000, -1000, 1170, -1000, 2060, 2530,
	-1000, 550, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2739, -1000, -68, 36263, 932, -1000, -1000, 107223, -55,
	-69, 54455, 54455, 9985, 8946, 54455, 58823, 58823, -1000, 54455,
	7980, -1000, -1000, -1000, -1000, -1000, 3196, 549, 54455, 83414,
	9169, 8910, -1000, 314, 13959, 551, -1000, 54455, -1000, 6887,
	-1000, 313, 39419, -1000, 152656, 61, -168, -1000, 21064, -102,
	-170, -1000, -1000, 743, -1000, 3387, -1000, 54455, 153373, 2715,
	2211, 2138, 1957, 3941, 3981, 24838, -1000, 75487, 1012, 2497,
	150411, -1000, -1000, -1000, -1000, 83414, 83414, 54455, 54455, -1000,
	54455, 54455, 54455, -1000, -1000, -1000, 3941, 926, -1000, -1000,
	-1000, 926, -1000, -1000, 1402, -1000, 1402, -1000, 54455, -1000,
	-1000, 3190, 54455, -1000, 83414, 83414, 58823, 58823, 58823, 58823,
	58823, 58823, 58823, 58823, 58823, 58823, 58823, 58823, 58823, 58823,
	58823, 58823, 58823, 58823, 58823, 58823, 2814, 58823, 3904, 3904,
	3904, 1547, -1000, 3253, 3190, 54455, 54455, 83414, 312, 309,
	308, -1000, 54455, -102, -1000, -1000, 9860, 534, -1000, 2732,
	-1000, 3088, -1000, 54455, -1000, -164, -1000, 2635, -1000, -1000,
	3088, 3088, -173, 154743, 64421, 64421, -1000, 533, 54455, 2837,
	-1000, -1000, 727, -337, -1000, 890, -1000, -1000, -1000, -1000,
	-1000, -1000, 881, -1000, 453, -1000, -1000, -1000, 162, 119984,
	119984, 723, -1000, -175, -1000, -1000, -176, -1000, 3837, 307,
	27955, -1000, 1004, 3777, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2886, -279, 147952, 147952, 1991, 1990, -71, 2510, -1000,
	3101, 3980, -1000, 3943, 740, 721, 161, 3941, 306, 305,
	301, -104, 147952, 147952, 1986, 1983, 78544, 3184, 147952, -1000,
	-1000, -1000, 262, -1000, -1000, -1000, 259, -1000, -1000, -1000,
	-1000, 2926, -1000, -73, -1000, -1000, -1000, 54455, -1000, 967,
	-1000, -1000, 3631, 530, 1303, 1302, -1000, -181, -1000, 880,
	-1000, -1000, -1000, -1000, -1000, 3148, -1000, 3383, -1000, 2652,
	-1000, 1106, 2651, 1770, -1000, 54455, 525, 2956, 523, 522,
	4071, 2322, 4069, 1145, 3381, 2555, 3368, 2555, -1000, -1000,
	-1000, 957, -1000, 154743, -183, -1000, 2517, -1000, 521, 520,
	-1000, -76, 1741, 526, 1301, 1024, -1000, -1000, 54455, 54455,
	119377, -1000, 485, 3629, -56, -1000, -1000, -1000, 1980, 1299,
	1296, -1000, -1000, -1000, -1000, -1000, 3747, 1978, 1283, 1282,
	-1000, -1000, -1000, -1000, -1000, 2649, -1000, 135199, -1000, 3360,
	135199, -1000, 789, 135199, 1021, -1000, 3326, 3324, 937, 135199,
	54455, 54455, 153252, 153073, -1000, 1020, -1000, -1000, 54455, -1000,
	-78, 1281, 3783, 2648, 107223, -1000, 2555, 3358, 1275, -1000,
	1270, -1000, -1000, -1000, 3785, 3784, 1266, -1000, 116949, 88975,
	88975, 3833, 68127, -1000, -1000, -1000, 3929, -1000, -1000, -1000,
	-1000, 85263, -1000, -1000, 1032, 135199, 147952, 107223, 1981, -1000,
	-1000, 95664, 96271, 135199, 2996, -104, 917, -1000, 2701, 917,
	1009, 3170, -1000, 2909, -1000, -1000, 1019, 297, -79, -1000,
	1286, 80974, 77318, -1000, 2487, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 4067, 292, -184, -80, 83414, -1000, -1000, -1000,
	-1000, 2642, 107223, 135199, 1338, 2954, 135199, 135199, 3836, -1000,
	2558, 491, 107223, 939, -1000, 3900, -1000, -1000, -1000, 135199,
	38777, 116949, -1000, 3763, 107223, 3832, 3357, 1017, 107223, 75,
	107223, 3959, -1000, -1000, 3830, 107223, 3354, 2560, 2647, 2788,
	789, 89582, 1017, 2496, -92, -1000, 2151, 38135, 3627, -189,
	-1000, -1000, -1000, 1004, 74253, 64421, 54455, 4065, -199, -1000,
	-1000, -1000, -1000, -1000, 88975, 992, 135199, 135199, 4064, 88975,
	88975, 88975, -83, 519, -1000, 879, 876, 874, -1000, -1000,
	-1000, -1000, -1000, -1000, 852, 850, 840, 835, 1006, -1000,
	-1000, -218, 68127, 1006, 68127, 75, -1000, 2502, 107223, 68127,
	-1000, 24213, 135199, 2990, -1000, 84638, -1000, -1000, -1000, -1000,
	-1000, 1015, 3979, -105, -1000, -1000, -1000, 2430, 2600, 2430,
	2096, 2084, -1000, -1000, -1000, 2529, -1000, -1000, -1000, -1000,
	2901, 3638, 27955, 3760, 13074, 54455, 54455, 7272, 8510, 1071,
	13074, 54455, 54455, 83414, 639, -202, 54455, 54455, -1000, 54455,
	719, 154743, -1000, 3977, 54455, 283, 282, -1000, -1000, -1000,
	3940, -1000, -1000, -1000, 154743, 54455, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 280, -1000, 160, -1000, -1000, -1000, 144304,
	-1000, 54455, 277, 3709, -1000, 276, 275, 12596, 337, 150185,
	150097, 149679, 272, -1000, -1000, 264, 255, 154743, 3253, 154743,
	-1000, -1000, 1023, 1023, 1423, 1423, 1423, 1423, 3904, 1079,
	1312, 377, 424, 424, 424, 667, 1547, 1547, 424, 424,
	424, 1547, 3163, 2819, 517, 8437, -1000, -1000, 154743, 154743,
	251, -1000, -1000, -1000, -102, 250, 9860, -1000, 3084, 3706,
	154743, -1000, 64421, 3084, 3084, -1000, -1000, 2169, 135199, 154743,
	64421, -1000, 3126, -1000, 22332, 21701, -1000, 27955, -1000, -1000,
	-1000, -1000, 3900, -1000, 76711, -1000, 516, -1000, 62, -1000,
	3777, -1000, 830, -1000, -1000, 88975, 88975, 4062, 4060, -1000,
	3976, 3973, 2449, 3970, 2992, -1000, -279, -200, 135199, 135199,
	-1000, 2509, -1000, 718, 4057, 739, 27955, 249, -1000, -1000,
	-1000, -104, -104, 135199, 135199, 3162, 107223, 135199, 1501, 147952,
	-104, -1000, -1000, -1000, 3578, 154743, 3252, 3072, 3071, 135199,
	135199, -1000, 118163, 37511, 1640, 118770, 135199, 3352, -1000, 3351,
	-1000, 1142, 2343, 149600, 65038, -1000, 65038, 135199, -1000, -1000,
	-1000, -1000, 2168, 1523, 4055, 1195, -1000, 3659, 135199, -1000,
	135199, -1000, -1000, -1000, 118163, -1000, 135199, 135199, 107223, 135199,
	-1000, 147952, 3337, -204, 154743, -84, -1000, 827, -1000, 1397,
	-1000, 23588, 135199, 147952, 107223, 135199, 147952, 107223, 3350, 1099,
	135199, -1000, 135199, 1096, 2448, -1000, -1000, 3323, -1000, 154743,
	152835, 75, 54455, 3336, -205, 27955, -1000, 3969, 3966, 3348,
	3663, -1000, 135199, 3965, 135199, 107223, 3577, -1000, -1000, -1000,
	1011, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1977, 1269,
	1268, 2556, 2554, 2505, -85, 2374, 1009, -87, 515, -1000,
	825, 823, 821, 819, 818, 1009, -1000, 88975, 68127, 4054,
	2133, 74870, 54455, 54455, 83414, -1000, 83414, -1000, -1000, -1000,
	2949, -1000, 113906, 90796, 2548, -1000, -1000, 514, 135199, 135199,
	507, -1000, 75, -1000, 4051, 118163, 506, -1000, 2501, -1000,
	715, -1000, -1000, 184, -207, 147952, 3747, 75, 107223, -1000,
	453, 1005, 453, 247, -88, -1000, 3377, 1138, 27955, 107223,
	3347, 2790, 789, 89582, -1000, 1497, 2879, -1000, -90, -1000,
	495, 75, 2496, -1000, -92, 154743, -1000, 814, 243, -1000,
	3576, -1000, -1000, -210, -1000, -1000, 3646, 3646, 88975, 68127,
	88975, 88975, 88975, 68127, 88975, -1000, 1006, 3829, -1000, -218,
	-1000, 2654, -1000, 992, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 27955, 1873, -1000, 503, 501, -1000, -1000, -1000,
	-1000, 3638, 13074, 13074, 54455, 54455, 54455, 13074, 639, -215,
	-1000, 13074, 13074, -102, -1000, -1000, 152656, -1000, -1000, -1000,
	154743, -1000, 22963, 2441, -1000, 149362, -1000, 36263, -1000, -1000,
	54455, 54455, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	58823, 3161, 500, 83414, -1000, -1000, 239, 1033, 54455, 56327,
	2635, 1033, 1033, -1000, -221, -1000, -1000, -1000, 3900, -1000,
	3900, 62, -1000, -1000, 4049, 27955, -1000, 88975, -1000, -1000,
	-1000, -1000, -1000, 4032, 4031, 2627, 4028, 4023, -1000, -1000,
	-1000, 3313, -178, -195, -1000, 734, -1000, 4022, -1000, -1000,
	175, 174, 147952, 3139, 167, 2981, -104, -1000, 75, -1000,
	-1000, -1000, -1000, -1000, -1000, 2978, 3828, -1000, 2213, -1000,
	135199, 135199, -1000, 135199, -1000, 27955, 135199, 3137, 1298, -1000,
	968, 2820, 499, 58823, 1169, 107223, 877, 3067, 3058, -1000,
	3865, 3705, 3059, -224, -1000, 135199, 54455, 135199, -226, -227,
	2626, -1000, -1000, 1162, 1290, 54455, 1161, -1000, -1000, -1000,
	83414, 498, 2555, 2555, -1000, -232, -233, -1000, -1000, -1000,
	54455, 1261, 135199, 36887, -1000, 4018, 3629, -1000, -1000, -1000,
	-1000, -1000, -1000, 135199, 135199, -1000, -1000, 135199, 135199, -1000,
	54455, -1000, 152535, 54455, 1250, -1000, -1000, -1000, 3964, 2555,
	27955, 2555, -1000, 2555, 3663, 1192, 2585, 135199, 147952, 107223,
	1953, 1953, 3216, -1000, -1000, -1000, 2713, 2713, 88975, 54455,
	1634, 68127, 68127, -1000, -97, 1009, -1000, 1776, -1000, 154743,
	154743, -1000, -1000, 2432, 4017, -1000, -1000, -1000, -1000, 2817,
	-1000, -1000, -1000, 135199, 2810, 3048, 65038, 492, 488, 135199,
	995, -1000, -234, 90796, 963, 919, -1000, 73035, -1000, -1000,
	-1000, -1000, 453, 3827, -1000, 2923, 3826, -1000, 3963, 487,
	486, 135199, 2553, 484, 27955, 3622, 789, 89582, -1000, 3398,
	2151, -1000, 2634, 135199, 3617, -1000, 2879, 483, 992, 480,
	992, -1000, -235, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1430, 1006, -98, -1000, 866, 865, -1000, -1000,
	-1000, 107223, 107223, 54455, 54455, -1000, 13074, 13074, 13074, -1000,
	238, -1000, -1000, 2496, 3684, -1000, -99, 149294, 148876, 1150,
	58823, 83414, -241, -1000, -1000, 135199, 154743, -100, -1000, 154743,
	478, 476, 387, -1000, -1000, -1000, 714, 668, -1000, -1000,
	-1000, -1000, 4015, -1000, -1000, -1000, 147952, 147952, 4014, -1000,
	147952, 147952, -104, 147952, 147952, 1958, -1000, 117556, 135199, -1000,
	-1000, 1770, 2158, -1000, -1000, 135199, 2646, -1000, -1000, -1000,
	1001, 54455, 8437, 58823, 475, 54455, -1000, 473, 470, 3824,
	3550, -1000, 2945, 3173, 2163, 65038, -1000, 3638, -1000, 148650,
	-1000, 1117, 2232, -1000, -1000, -1000, -1000, 154743, 58823, 3663,
	65038, -1000, -1000, 469, 468, 154743, 467, 807, 3132, -1000,
	-1000, -1000, -1000, -105, -105, -1000, 154743, 75, 154743, 461,
	3783, -1000, -1000, -1000, -1000, 2555, 107223, 794, -1000, -1000,
	-1000, 1218, -1000, -1000, -1000, -1000, 4013, 4012, 3130, 95664,
	-1000, -242, -1000, 154743, -1000, -1000, -1000, -1000, 2216, 83414,
	-1000, 963, -1000, -1000, 2548, 459, -1000, 988, 2583, 2583,
	-243, 65038, 65038, -250, 2534, 2913, -1000, 237, 3822, 919,
	-1000, 3897, -1000, 1004, -1000, 3820, 75, 3575, -1000, 75,
	-1000, 3959, 65038, -1000, 107223, 65038, 2550, 2318, 2772, 89582,
	-1000, 2788, -1000, -1000, -251, 135199, 2151, -1000, -1000, 88975,
	-1000, -1000, 3920, -1000, 2654, -1000, 135199, -1000, 135199, -1000,
	-1000, -253, -256, -1000, 2331, 54455, 36263, -1000, -1000, 1150,
	-259, -1000, -101, -1000, 3816, 56327, 4011, 4009, 4008, -1000,
	-1000, -1000, -279, -279, -1000, -104, -104, -104, -104, 135199,
	-1000, 2205, -1000, 2642, -1000, -1000, 3346, -1000, 3080, 457,
	148606, 8437, 2746, 135199, 148562, 3747, 3747, -1000, 3815, 3147,
	-1000, -1000, 2417, 455, -1000, -1000, -1000, -1000, 932, 135199,
	988, 3078, 107223, 8437, 1139, -261, 2430, 2430, 54455, 35639,
	2446, -1000, 54455, -1000, -1000, 3663, 68127, 147952, -1000, -1000,
	147952, 2549, -1000, 3122, 3929, 7275, -1000, 2534, 135199, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1117, -262, -264, -1000, -1000, 3652, -1000, 3574, 2949,
	75, -1000, -1000, -1000, 75, -1000, 4007, 1005, 233, -271,
	1138, -272, 107223, 2233, -1000, 789, -1000, 2790, 1004, 3517,
	-1000, -277, -1000, -1000, -1000, -280, -288, -1000, -1000, 228,
	55703, 55703, 55703, -102, -103, -1000, 135199, 454, -1000, -1000,
	-1000, -1000, -1000, -1000, 149, -1000, -1000, 3269, 923, -1000,
	803, 2056, 227, 1129, 222, 221, -1000, -1000, -1000, 3059,
	-1000, 135199, -1000, -1000, -1000, 923, 453, -1000, 54455, 1117,
	-289, -1000, 1092, -294, -1000, 1089, -295, -1000, 3127, -1000,
	-296, 2555, -1000, -279, 253, 1953, 1003, 3764, -1000, 2543,
	7275, -1000, 3907, 89582, -1000, -1000, -1000, 2546, 2623, -1000,
	-1000, -1000, -1000, 1947, 3008, -1000, 2775, 1437, 1437, 135199,
	-1000, -1000, 2757, -297, -1000, -1000, 2163, 1117, 2417, 2677,
	-1000, 2432, 995, -1000, -1000, -1000, -1000, 1117, 439, 2163,
	435, 1676, 789, -1000, -1000, 1402, 3622, 3468, 1458, 992,
	-1000, -1000, -1000, 3367, -1000, 60071, 2551, 2076, 151837, 3367,
	3367, -1000, -1000, 147952, 135199, 988, 3738, -1000, 909, 882,
	1612, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1004,
	-311, -1000, 2746, 154743, 988, -1000, 2430, 2977, -1000, 2430,
	3125, -1000, 2384, -1000, -1000, -1000, -1000, 3124, -1000, 1979,
	3892, -1000, -1000, 3779, 54455, -1000, -1000, -1000, -1000, 2622,
	2542, 3007, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	988, 135199, 2417, 2163, 988, 2062, 2044, 4006, 963, 2534,
	2163, 65038, 2417, 65038, 2357, -1000, 135199, -1000, 2318, 1392,
	-1000, 1788, -1000, -1000, 2017, 3861, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -104, -1000, -1000, 792, -1000, 3538, -1000,
	1160, 2362, 2362, -1000, -1000, 803, -1000, -1000, 431, -1000,
	428, -1000, 147952, 2500, -1000, -1000, -1000, 154743, 2941, 2559,
	-1000, -1000, -1000, -1000, 988, 2417, 1004, -1000, 4005, -1000,
	2534, -1000, 2417, -312, 988, -313, 2454, -1000, -1000, -105,
	2233, -1000, 1781, 74253, 2071, -1000, -1000, 2490, 55079, 54455,
	-1000, 3881, -1000, -1000, 2845, -1000, 3059, 54455, 54455, 253,
	72428, 10847, -1000, 2933, 1004, 988, 1300, -1000, 2757, 988,
	1117, 1004, 2163, 1954, 789, 1676, 74253, -285, -1000, -1000,
	-1000, 154743, -1000, -1000, -1000, -1000, -314, -320, -1000, -116,
	116949, -334, -1000, -1000, -1000, -1000, 1300, 1004, -1000, 1040,
	-1000, -1000, 1004, 2163, 1300, 2417, -1000, -1000, 2193, 147952,
	2357, -285, -1000, 2417, 1216, -321, -1000, -1000, 1300, -1000,
	1300, 2417, -1000, 988, -1000, 1954, -1000, -1000, -1000, 427,
	-1000, -1000, -1000, 988, 1004, -1000, 54455, 1004, 1300, -328,
	1300, -1000, 2417, -1000, -1000,
}

var sqlPgo = [...]int16{
	0, 4926, 4925, 33, 4924, 4920, 4918, 4917, 4916, 4915,
	4914, 4913, 4912, 4911, 4910, 4908, 169, 4907, 4905, 4904,
	4903, 4902, 4900, 4899, 4898, 4897, 4895, 4890, 4888, 4887,
	4886, 4884, 4883, 4881, 4880, 4879, 4878, 4877, 4866, 4862,
	4860, 4858, 4857, 4856, 4854, 4852, 4849, 4848, 4846, 4840,
	4839, 4838, 4837, 4836, 4835, 4832, 4831, 4829, 4827, 4826,
	4821, 4819, 4818, 4816, 4815, 4814, 4813, 4812, 4811, 4810,
	4809, 4808, 4807, 4806, 4805, 4803, 72, 4801, 4800, 4798,
	4796, 4795, 4793, 4787, 4786, 4784, 4782, 4780, 4779, 4778,
	4777, 4776, 4775, 4774, 4773, 4772, 4770, 4769, 80, 4768,
	306, 4767, 4766, 4765, 4764, 4763, 4762, 4761, 4759, 4758,
	4756, 4751, 4749, 4747, 304, 4746, 13, 200, 4744, 4742,
	24, 4740, 4737, 303, 4736, 4735, 4734, 4728, 4725, 319,
	4724, 4723, 4722, 4718, 4717, 292, 4716, 4715, 4714, 4713,
	4712, 4710, 461, 154, 4709, 4708, 3215, 4706, 4705, 4700,
	4697, 4696, 4695, 4694, 290, 291, 4693, 4692, 4691, 282,
	194, 4690, 301, 4689, 4688, 4683, 4682, 4680, 4679, 4678,
	4676, 4674, 4672, 4668, 4667, 4664, 4663, 4662, 4660, 4659,
	4658, 4656, 4654, 4652, 4649, 4648, 4646, 4645, 4643, 4642,
	4641, 4640, 4635, 4634, 4633, 4632, 4630, 4629, 4628, 4627,
	4624, 4618, 4617, 4616, 4615, 281, 236, 151, 4614, 4612,
	4606, 4605, 4604, 299, 293, 4603, 4602, 4600, 4599, 4598,
	3756, 4597, 4596, 4594, 4591, 4590, 4589, 4585, 4582, 4581,
	168, 6, 54, 4580, 4578, 111, 106, 102, 87, 123,
	119, 4577, 4576, 140, 4575, 160, 147, 4566, 135, 132,
	39, 18, 254, 274, 3610, 268, 4562, 4550, 4547, 279,
	226, 4545, 275, 4544, 4542, 4539, 4538, 4537, 4536, 89,
	70, 235, 4534, 4530, 167, 195, 206, 205, 201, 198,
	29, 71, 121, 103, 77, 64, 22, 100, 241, 35,
	240, 4, 9, 296, 4529, 294, 11, 166, 12, 45,
	4528, 4523, 4522, 4519, 4212, 144, 4518, 298, 277, 196,
	4515, 4511, 4510, 1535, 4506, 4505, 75, 237, 124, 150,
	131, 58, 152, 4504, 177, 199, 48, 4503, 189, 116,
	4502, 4500, 118, 117, 10282, 6930, 4499, 4498, 139, 84,
	130, 4661, 190, 187, 227, 211, 155, 191, 192, 4497,
	120, 4496, 172, 174, 204, 907, 4488, 108, 4486, 3807,
	126, 216, 180, 6964, 4485, 4482, 4480, 95, 4479, 122,
	4478, 4477, 81, 31, 2, 1, 170, 49, 47, 3,
	4474, 50, 148, 67, 36, 4471, 37, 4470, 4467, 4466,
	4465, 69, 4463, 61, 186, 4462, 4461, 315, 4458, 110,
	73, 32, 4457, 57, 248, 4456, 257, 156, 4455, 4452,
	210, 218, 4449, 98, 263, 4448, 4447, 4445, 4444, 4443,
	317, 158, 16, 153, 4442, 4441, 171, 4440, 66, 272,
	228, 4439, 78, 4438, 4436, 202, 74, 175, 323, 203,
	253, 142, 259, 217, 262, 4434, 4432, 4430, 208, 4429,
	4427, 250, 181, 4426, 4425, 265, 318, 113, 65, 7,
	88, 270, 94, 224, 185, 4424, 231, 4423, 4422, 316,
	214, 246, 55, 23, 17, 107, 129, 4421, 5, 267,
	183, 244, 145, 4420, 8743, 3484, 3398, 261, 4419, 173,
	149, 91, 157, 184, 297, 101, 4416, 4411, 4707, 4410,
	4407, 4405, 4403, 220, 4402, 4401, 51, 178, 209, 213,
	4400, 125, 83, 68, 34, 146, 105, 313, 143, 252,
	221, 283, 4399, 4397, 4393, 207, 4392, 97, 138, 234,
	4391, 230, 284, 79, 4390, 1073, 4389, 179, 2583, 82,
	182, 4388, 256, 4387, 4386, 4383, 4382, 4373, 4369, 4364,
	2334, 266, 4362, 4358, 4357, 44, 225, 4356, 223, 242,
	271, 96, 76, 222, 109, 2780, 128, 2049, 233, 56,
	8, 4353, 269, 4351, 2031, 93, 4350, 0, 15373, 11271,
	14328, 4346, 4345, 14537, 4343, 5687, 4341, 4338, 4337, 243,
	90, 4335, 4334, 4330, 133, 4328, 99, 4325, 4322, 85,
	4321, 38, 27, 28, 42, 40, 965, 940, 4319, 4317,
	26, 161, 20, 4316, 308, 255, 4315, 4314, 4313, 4312,
	114, 4311, 62, 4308, 60, 4306, 4304, 63, 19, 46,
	4302, 4300, 238, 188, 3712, 193, 176, 4299, 141, 4297,
	4296, 4295, 104, 163, 4293, 4292, 285, 239, 251, 112,
	4291, 286, 4290, 229, 4283, 4282, 41, 4279, 4278, 278,
	137, 136, 52, 280, 164, 59, 4275, 4263, 4262, 159,
	4259, 4257, 4256, 134, 4255, 4254, 92, 4252, 4250, 53,
	4249, 162, 4248, 30, 4245, 4243, 4241, 310, 215, 247,
	4240, 4239, 197, 4237, 4236, 295, 4234, 4233, 3767, 300,
	4232, 43, 4231, 4230, 4224, 15, 4223, 4222, 232, 3535,
	4217, 4216, 10, 4214, 219,
}

var sqlR1 = [...]int16{
	0, 1, 2, 2, 2, 2, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 4, 4, 4, 4, 4, 4,
	4, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 8, 8, 8, 8, 8,
	8, 8, 8, 8, 8, 8, 14, 14, 10, 10,
	10, 10, 11, 11, 11, 11, 11, 60, 60, 12,
	12, 12, 12, 12, 12, 12, 12, 12, 12, 12,
	12, 12, 12, 12, 12, 41, 43, 42, 36, 36,
	37, 37, 38, 39, 39, 44, 46, 45, 47, 48,
	13, 13, 13, 9, 9, 9, 9, 9, 9, 9,
	9, 22, 22, 49, 49, 23, 23, 51, 51, 24,
	24, 52, 52, 646, 646, 646, 647, 647, 648, 648,
	648, 27, 54, 20, 21, 21, 21, 21, 649, 649,
	649, 649, 40, 28, 55, 33, 33, 33, 33, 33,
	233, 233, 233, 233, 26, 26, 50, 50, 277, 277,
	276, 276, 276, 276, 276, 276, 276, 276, 276, 276,
	276, 276, 276, 276, 276, 276, 276, 276, 276, 276,
	276, 276, 276, 276, 276, 276, 276, 276, 276, 276,
	645, 645, 279, 279, 278, 266, 266, 267, 267, 268,
	268, 650, 650, 280, 280, 280, 281, 281, 17, 17,
	17, 17, 17, 17, 17, 17, 17, 17, 539, 539,
	539, 570, 570, 570, 570, 572, 572, 691, 691, 692,
	692, 692, 692, 692, 145, 145, 434, 434, 434, 64,
	64, 64, 64, 64, 635, 635, 235, 235, 235, 237,
	237, 236, 236, 236, 236, 236, 236, 236, 236, 88,
	88, 656, 656, 655, 687, 687, 654, 654, 657, 657,
	657, 234, 234, 234, 85, 85, 105, 105, 141, 141,
	141, 141, 141, 141, 141, 141, 142, 142, 143, 143,
	666, 666, 666, 238, 238, 238, 240, 240, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 245, 19, 19, 19, 124, 124, 124, 124, 124,
	124, 124, 119, 119, 574, 574, 575, 575, 229, 229,
	230, 230, 230, 230, 231, 231, 232, 232, 232, 79,
	79, 242, 242, 244, 244, 243, 243, 243, 243, 243,
	243, 243, 243, 243, 243, 243, 243, 243, 243, 66,
	66, 66, 66, 66, 66, 66, 66, 66, 67, 67,
	67, 67, 67, 68, 68, 68, 68, 68, 68, 69,
	69, 69, 69, 69, 69, 70, 70, 77, 77, 77,
	77, 77, 77, 77, 77, 207, 207, 80, 80, 80,
	80, 80, 80, 80, 80, 80, 80, 80, 80, 80,
	80, 84, 84, 84, 84, 84, 94, 667, 667, 668,
	668, 682, 671, 671, 672, 672, 673, 673, 673, 674,
	674, 674, 674, 674, 681, 681, 681, 681, 681, 676,
	675, 677, 677, 678, 678, 679, 679, 679, 679, 679,
	680, 680, 680, 680, 680, 680, 680, 680, 680, 680,
	680, 680, 680, 680, 680, 680, 680, 670, 683, 684,
	684, 685, 685, 686, 686, 686, 693, 693, 693, 693,
	693, 693, 693, 693, 693, 693, 693, 693, 693, 693,
	693, 693, 693, 694, 694, 695, 695, 696, 696, 696,
	696, 696, 696, 696, 696, 696, 696, 696, 696, 696,
	696, 696, 696, 696, 696, 696, 82, 82, 82, 82,
	82, 82, 82, 82, 82, 82, 82, 82, 82, 82,
	82, 82, 82, 82, 95, 95, 395, 395, 358, 358,
	96, 96, 96, 97, 97, 98, 98, 81, 81, 81,
	632, 632, 633, 639, 697, 697, 530, 530, 529, 529,
	100, 100, 433, 433, 101, 101, 101, 101, 101, 101,
	102, 102, 102, 102, 102, 102, 102, 102, 102, 103,
	103, 103, 103, 103, 103, 103, 103, 103, 103, 103,
	103, 103, 103, 111, 111, 111, 111, 111, 112, 112,
	112, 109, 109, 109, 106, 106, 106, 104, 104, 104,
	110, 110, 110, 638, 344, 344, 108, 108, 108, 107,
	107, 107, 411, 411, 113, 113, 113, 113, 359, 114,
	114, 114, 114, 114, 114, 114, 114, 117, 117, 116,
	116, 116, 116, 116, 116, 116, 116, 116, 116, 116,
	116, 116, 116, 116, 116, 116, 116, 116, 116, 116,
	116, 116, 116, 116, 116, 116, 116, 116, 116, 116,
	118, 118, 118, 118, 118, 118, 118, 118, 118, 118,
	118, 118, 532, 532, 5, 5, 272, 272, 271, 271,
	271, 271, 6, 6, 6, 275, 275, 274, 273, 115,
	115, 115, 496, 496, 120, 120, 120, 449, 449, 121,
	121, 121, 121, 121, 122, 122, 122, 122, 122, 122,
	122, 122, 122, 122, 144, 144, 144, 144, 144, 144,
	144, 144, 144, 144, 144, 144, 144, 144, 144, 642,
	642, 404, 404, 307, 307, 307, 307, 133, 133, 133,
	133, 134, 134, 134, 134, 135, 135, 215, 215, 151,
	151, 151, 151, 150, 150, 150, 150, 150, 150, 150,
	150, 71, 71, 71, 72, 72, 73, 73, 74, 74,
	75, 75, 76, 76, 76, 76, 76, 154, 154, 32,
	32, 32, 32, 155, 155, 688, 688, 157, 153, 153,
	153, 153, 153, 153, 153, 152, 152, 156, 156, 156,
	156, 158, 160, 160, 160, 160, 160, 159, 159, 159,
	159, 159, 161, 161, 564, 564, 419, 419, 562, 562,
	586, 586, 563, 563, 365, 365, 365, 365, 365, 366,
	366, 366, 573, 573, 573, 573, 573, 573, 162, 162,
	162, 162, 162, 162, 162, 162, 162, 162, 162, 162,
	162, 162, 162, 162, 162, 162, 162, 162, 162, 162,
	162, 162, 162, 162, 162, 162, 162, 162, 162, 162,
	162, 162, 162, 162, 162, 162, 162, 162, 162, 162,
	162, 162, 162, 162, 162, 162, 162, 162, 162, 162,
	162, 162, 162, 162, 162, 162, 162, 162, 162, 162,
	162, 162, 162, 162, 162, 162, 162, 162, 162, 162,
	162, 162, 162, 162, 216, 216, 216, 217, 217, 222,
	222, 223, 223, 223, 224, 224, 224, 221, 221, 221,
	218, 218, 219, 219, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 227, 227, 225, 225, 226, 226,
	699, 699, 698, 698, 228, 228, 228, 228, 228, 188,
	188, 188, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 420, 420, 191, 191, 191,
	175, 175, 163, 163, 163, 163, 163, 163, 163, 163,
	241, 241, 241, 241, 168, 168, 168, 168, 168, 168,
	168, 168, 169, 169, 169, 164, 164, 177, 177, 177,
	177, 177, 170, 170, 171, 171, 171, 172, 172, 172,
	172, 199, 199, 174, 174, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 165, 165, 165, 165, 179, 179,
	179, 179, 456, 456, 456, 205, 205, 178, 178, 178,
	178, 178, 178, 178, 178, 178, 178, 178, 178, 178,
	178, 178, 178, 202, 202, 202, 202, 202, 202, 658,
	658, 659, 659, 659, 195, 195, 195, 195, 195, 195,
	510, 510, 189, 189, 189, 189, 194, 194, 194, 194,
	197, 197, 197, 197, 439, 439, 186, 186, 186, 187,
	187, 187, 192, 192, 204, 193, 396, 396, 190, 190,
	196, 196, 196, 196, 198, 198, 198, 166, 166, 166,
	166, 166, 166, 166, 166, 166, 166, 167, 167, 167,
	167, 200, 200, 185, 185, 201, 201, 201, 201, 201,
	201, 201, 201, 201, 201, 201, 700, 700, 181, 181,
	181, 180, 180, 180, 180, 183, 183, 184, 184, 184,
	184, 184, 184, 184, 182, 173, 203, 640, 640, 636,
	636, 636, 636, 636, 636, 636, 636, 634, 634, 634,
	634, 634, 634, 634, 634, 634, 637, 637, 637, 637,
	637, 641, 641, 125, 125, 125, 125, 125, 125, 125,
	136, 136, 136, 136, 136, 136, 136, 139, 139, 126,
	126, 126, 126, 126, 126, 126, 129, 129, 127, 127,
	127, 127, 128, 128, 89, 89, 89, 89, 89, 18,
	18, 18, 90, 90, 298, 298, 250, 250, 250, 383,
	383, 251, 251, 373, 373, 373, 373, 246, 246, 247,
	247, 248, 249, 249, 91, 91, 701, 701, 701, 651,
	651, 651, 652, 652, 652, 652, 652, 652, 367, 367,
	368, 368, 476, 476, 476, 476, 476, 371, 371, 371,
	372, 372, 372, 372, 372, 372, 372, 372, 372, 381,
	382, 382, 374, 374, 380, 379, 379, 378, 378, 377,
	377, 375, 376, 376, 376, 385, 385, 384, 387, 387,
	386, 475, 595, 595, 597, 597, 597, 597, 597, 597,
	597, 599, 599, 599, 599, 599, 599, 599, 599, 599,
	599, 599, 599, 599, 599, 599, 599, 599, 457, 457,
	702, 702, 703, 704, 593, 593, 593, 594, 589, 589,
	590, 590, 590, 590, 590, 369, 369, 370, 370, 370,
	370, 591, 592, 402, 402, 514, 596, 596, 598, 598,
	600, 705, 705, 705, 705, 705, 705, 706, 706, 706,
	474, 474, 473, 473, 472, 472, 393, 393, 601, 601,
	601, 601, 602, 602, 602, 602, 602, 605, 604, 603,
	603, 603, 603, 603, 93, 93, 93, 436, 436, 435,
	435, 437, 437, 437, 437, 437, 437, 437, 437, 437,
	437, 437, 437, 437, 437, 437, 437, 437, 437, 212,
	212, 310, 310, 310, 87, 87, 87, 15, 15, 15,
	15, 15, 15, 15, 325, 325, 16, 16, 16, 16,
	653, 653, 653, 92, 92, 92, 92, 92, 92, 391,
	391, 391, 309, 309, 309, 309, 309, 309, 309, 309,
	309, 309, 309, 309, 309, 309, 309, 309, 309, 309,
	309, 309, 309, 309, 309, 309, 309, 309, 644, 644,
	643, 643, 311, 311, 708, 708, 99, 99, 99, 99,
	99, 99, 99, 99, 533, 533, 534, 534, 86, 86,
	86, 86, 86, 458, 458, 455, 455, 454, 454, 401,
	401, 512, 512, 512, 513, 315, 315, 316, 316, 269,
	269, 269, 459, 459, 459, 35, 34, 25, 25, 29,
	29, 30, 30, 297, 297, 297, 297, 297, 297, 297,
	297, 297, 31, 31, 57, 57, 57, 57, 58, 58,
	58, 58, 61, 61, 62, 62, 56, 56, 56, 56,
	59, 59, 53, 53, 63, 63, 63, 63, 63, 660,
	662, 662, 661, 661, 665, 665, 665, 665, 665, 665,
	663, 663, 346, 346, 664, 664, 689, 689, 690, 690,
	132, 132, 137, 137, 137, 137, 137, 138, 138, 138,
	138, 140, 140, 140, 140, 149, 149, 208, 208, 208,
	208, 208, 208, 208, 65, 65, 78, 78, 147, 710,
	710, 710, 148, 148, 148, 209, 209, 209, 209, 210,
	210, 211, 211, 709, 709, 308, 308, 469, 469, 470,
	470, 711, 711, 471, 471, 471, 471, 471, 301, 300,
	302, 302, 303, 303, 83, 83, 83, 289, 289, 288,
	291, 291, 290, 292, 292, 293, 293, 286, 286, 576,
	576, 295, 295, 295, 296, 296, 282, 282, 283, 283,
	284, 284, 285, 285, 299, 299, 571, 571, 712, 712,
	123, 123, 123, 214, 214, 357, 357, 357, 466, 466,
	466, 394, 394, 322, 322, 468, 468, 468, 468, 468,
	432, 432, 432, 213, 213, 409, 409, 422, 422, 423,
	423, 526, 526, 424, 130, 130, 131, 131, 146, 146,
	254, 254, 252, 252, 252, 252, 252, 252, 252, 252,
	259, 259, 260, 260, 261, 261, 262, 263, 263, 263,
	263, 412, 412, 264, 264, 264, 253, 253, 253, 255,
	255, 255, 255, 255, 255, 255, 258, 258, 258, 258,
	265, 265, 265, 257, 257, 612, 612, 612, 614, 614,
	616, 616, 615, 615, 611, 611, 613, 613, 707, 707,
	438, 438, 438, 390, 392, 388, 388, 389, 389, 399,
	399, 397, 398, 398, 400, 400, 511, 511, 511, 270,
	270, 270, 429, 429, 429, 429, 430, 430, 462, 462,
	460, 460, 460, 460, 461, 461, 463, 463, 463, 464,
	464, 465, 465, 426, 426, 427, 427, 428, 428, 428,
	428, 492, 492, 256, 256, 256, 406, 406, 406, 407,
	407, 482, 482, 482, 482, 482, 482, 482, 482, 482,
	482, 482, 483, 483, 481, 481, 481, 481, 515, 515,
	515, 515, 515, 515, 515, 515, 515, 516, 517, 517,
	408, 408, 518, 467, 467, 630, 630, 630, 631, 631,
	509, 509, 519, 519, 519, 519, 519, 519, 507, 507,
	508, 508, 527, 528, 528, 442, 442, 442, 442, 440,
	440, 443, 443, 443, 443, 443, 441, 441, 520, 520,
	520, 520, 431, 431, 521, 521, 521, 521, 522, 523,
	523, 524, 524, 477, 478, 478, 535, 535, 535, 535,
	537, 405, 405, 405, 405, 405, 588, 587, 587, 536,
	536, 536, 536, 536, 536, 536, 536, 536, 551, 551,
	551, 551, 551, 551, 551, 551, 551, 551, 551, 551,
	551, 551, 551, 551, 551, 551, 551, 551, 551, 551,
	551, 551, 551, 551, 551, 551, 551, 551, 551, 551,
	552, 552, 552, 552, 552, 552, 552, 538, 538, 538,
	538, 538, 542, 542, 542, 541, 541, 541, 541, 541,
	541, 541, 541, 541, 541, 541, 543, 543, 548, 548,
	549, 549, 549, 544, 545, 550, 550, 550, 550, 713,
	713, 554, 554, 546, 546, 546, 546, 546, 546, 546,
	546, 546, 540, 540, 540, 547, 547, 547, 451, 451,
	451, 451, 451, 451, 451, 451, 451, 451, 451, 451,
	451, 450, 450, 452, 452, 484, 484, 484, 484, 484,
	484, 484, 484, 484, 484, 484, 484, 484, 484, 484,
	484, 484, 484, 484, 484, 484, 484, 484, 484, 484,
	484, 484, 484, 484, 484, 484, 484, 484, 484, 484,
	484, 484, 484, 484, 484, 484, 484, 484, 484, 484,
	484, 484, 484, 484, 484, 484, 484, 484, 484, 484,
	484, 484, 484, 484, 484, 484, 484, 484, 484, 484,
	484, 484, 484, 484, 484, 484, 484, 484, 484, 484,
	484, 484, 484, 484, 484, 484, 484, 484, 484, 484,
	484, 484, 484, 484, 484, 485, 485, 485, 485, 485,
	485, 485, 485, 485, 485, 485, 485, 485, 485, 485,
	485, 485, 485, 485, 485, 485, 485, 485, 485, 485,
	485, 485, 485, 485, 485, 485, 486, 486, 486, 486,
	487, 487, 487, 487, 487, 487, 487, 487, 487, 487,
	487, 487, 487, 487, 487, 487, 487, 487, 487, 487,
	487, 487, 487, 487, 487, 606, 606, 606, 606, 606,
	606, 606, 606, 488, 488, 609, 609, 610, 610, 607,
	607, 607, 607, 607, 607, 607, 607, 607, 607, 607,
	607, 607, 607, 607, 607, 607, 607, 607, 607, 607,
	607, 607, 608, 608, 608, 608, 608, 608, 608, 608,
	608, 608, 608, 608, 608, 608, 608, 608, 608, 608,
	608, 608, 608, 608, 608, 608, 608, 608, 608, 608,
	608, 608, 608, 608, 608, 608, 608, 608, 608, 608,
	617, 617, 618, 618, 620, 620, 621, 621, 622, 623,
	623, 623, 624, 625, 625, 619, 619, 626, 626, 626,
	626, 627, 627, 628, 628, 628, 628, 628, 629, 629,
	629, 629, 629, 498, 498, 499, 499, 505, 505, 505,
	362, 362, 362, 362, 362, 362, 362, 362, 362, 362,
	362, 362, 362, 362, 362, 362, 362, 362, 362, 362,
	362, 362, 362, 362, 362, 362, 362, 362, 362, 362,
	362, 362, 362, 362, 362, 364, 364, 363, 312, 312,
	312, 312, 312, 312, 417, 417, 415, 415, 415, 418,
	418, 416, 416, 414, 414, 413, 413, 495, 495, 493,
	493, 497, 497, 444, 444, 553, 553, 553, 553, 553,
	553, 553, 553, 445, 445, 445, 453, 446, 446, 447,
	447, 447, 447, 447, 489, 490, 448, 448, 448, 491,
	491, 500, 504, 504, 503, 502, 502, 501, 501, 479,
	479, 480, 480, 425, 425, 714, 714, 421, 421, 525,
	525, 525, 525, 582, 582, 361, 361, 410, 410, 360,
	360, 352, 352, 353, 353, 353, 353, 403, 403, 506,
	506, 555, 555, 556, 556, 557, 557, 558, 558, 559,
	560, 561, 494, 494, 333, 332, 319, 320, 331, 330,
	329, 318, 321, 326, 327, 328, 323, 324, 340, 339,
	338, 287, 294, 345, 347, 347, 350, 350, 351, 349,
	348, 348, 335, 336, 337, 531, 317, 354, 354, 355,
	355, 355, 356, 356, 356, 356, 313, 313, 314, 314,
	341, 341, 342, 343, 343, 334, 334, 334, 304, 304,
	304, 305, 305, 306, 306, 569, 569, 566, 566, 566,
	567, 567, 567, 669, 568, 568, 568, 568, 565, 565,
	565, 565, 565, 577, 577, 577, 577, 577, 577, 577,
	577, 577, 577, 577, 577, 577, 577, 577, 577, 577,
	577, 577, 577, 577, 577, 577, 577, 577, 577, 577,
	577, 577, 577, 577, 577, 577, 577, 577, 577, 577,
	577, 577, 577, 577, 577, 577, 577, 577, 577, 577,
	577, 577, 577, 577, 577, 577, 577, 577, 577, 577,
	577, 577, 577, 577, 577, 577, 577, 577, 577, 577,
	577, 577, 577, 577, 577, 577, 577, 577, 577, 577,
	577, 577, 577, 577, 577, 577, 577, 577, 577, 577,
	577, 577, 577, 577, 577, 577, 577, 577, 577, 577,
	577, 577, 577, 577, 577, 577, 577, 577, 577, 577,
	577, 577, 577, 577, 577, 577, 577, 577, 577, 577,
	577, 577, 577, 577, 577, 577, 577, 577, 577, 577,
	577, 577, 577, 577, 577, 577, 577, 577, 577, 577,
	577, 577, 577, 577, 577, 577, 577, 577, 577, 577,
	577, 577, 577, 577, 577, 577, 577, 577, 577, 577,
	577, 577, 577, 577, 577, 577, 577, 577, 577, 577,
	577, 577, 577, 577, 577, 577, 577, 577, 577, 577,
	577, 577, 577, 577, 577, 577, 577, 577, 577, 577,
	577, 577, 577, 577, 577, 577, 577, 577, 577, 577,
	577, 577, 577, 577, 577, 577, 577, 577, 577, 577,
	577, 577, 577, 577, 577, 577, 577, 577, 577, 577,
	577, 577, 577, 577, 577, 577, 577, 577, 577, 577,
	577, 577, 577, 577, 577, 577, 577, 577, 577, 577,
	577, 577, 577, 577, 577, 577, 577, 577, 577, 577,
	577, 577, 577, 577, 577, 577, 577, 577, 577, 577,
	577, 577, 577, 577, 577, 577, 577, 577, 577, 577,
	577, 577, 577, 577, 577, 577, 577, 577, 577, 577,
	577, 577, 577, 577, 577, 577, 577, 577, 577, 577,
	577, 577, 577, 577, 577, 577, 577, 577, 577, 577,
	577, 577, 577, 577, 577, 577, 577, 577, 577, 577,
	577, 577, 577, 577, 577, 577, 577, 577, 577, 577,
	577, 577, 577, 577, 577, 577, 577, 577, 577, 577,
	577, 577, 577, 577, 577, 577, 577, 577, 577, 577,
	577, 577, 577, 577, 577, 577, 577, 577, 577, 577,
	577, 577, 577, 577, 577, 577, 577, 577, 577, 577,
	577, 577, 577, 577, 577, 577, 577, 577, 577, 577,
	577, 577, 577, 577, 577, 577, 577, 577, 577, 577,
	577, 577, 577, 577, 577, 577, 577, 577, 577, 577,
	577, 577, 577, 577, 577, 577, 577, 577, 577, 577,
	577, 577, 577, 577, 577, 577, 577, 577, 577, 577,
	577, 577, 577, 581, 581, 581, 581, 581, 581, 581,
	581, 581, 581, 581, 581, 581, 581, 581, 581, 581,
	581, 583, 583, 583, 583, 583, 583, 583, 583, 583,
	583, 583, 583, 583, 583, 583, 583, 583, 583, 583,
	583, 583, 583, 583, 583, 583, 583, 583, 583, 583,
	583, 583, 583, 583, 583, 583, 583, 583, 583, 583,
	583, 583, 583, 583, 583, 583, 583, 583, 583, 583,
	583, 583, 583, 583, 583, 578, 578, 579, 579, 579,
	579, 579, 579, 579, 579, 579, 579, 579, 579, 579,
	579, 579, 579, 579, 579, 580, 584, 584, 584, 584,
	584, 584, 584, 584, 584, 584, 584, 584, 584, 584,
	584, 584, 584, 584, 584, 584, 584, 584, 584, 584,
	584, 584, 584, 584, 584, 584, 584, 584, 584, 584,
	584, 584, 584, 584, 584, 584, 584, 584, 584, 584,
	584, 584, 584, 584, 584, 584, 584, 584, 584, 584,
	584, 584, 584, 584, 584, 584, 584, 584, 584, 584,
	584, 584, 584, 584, 584, 584, 584, 584, 584, 584,
	584, 584, 584, 584, 584, 584, 585, 585,
}

var sqlR2 = [...]int8{
	0, 1, 1, 1, 1, 0, 1, 1, 2, 1,
	1, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 1, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 1, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 1, 3, 1, 1,
	1, 3, 1, 1, 1, 1, 3, 4, 6, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 6, 4, 4, 6, 9,
	6, 8, 4, 4, 5, 9, 7, 9, 5, 6,
	1, 1, 3, 1, 1, 1, 1, 1, 1, 1,
	3, 4, 6, 4, 6, 6, 9, 6, 9, 6,
	5, 6, 5, 1, 1, 1, 1, 1, 1, 0,
	1, 6, 6, 4, 8, 7, 10, 9, 4, 4,
	4, 3, 4, 4, 4, 7, 7, 9, 8, 9,
	5, 3, 5, 7, 4, 12, 4, 12, 1, 3,
	5, 5, 2, 5, 3, 6, 4, 4, 4, 6,
	5, 6, 5, 6, 4, 8, 3, 8, 4, 2,
	3, 10, 3, 6, 4, 3, 1, 3, 4, 4,
	2, 1, 1, 3, 1, 3, 2, 4, 3, 2,
	3, 2, 0, 1, 1, 0, 2, 0, 7, 10,
	6, 8, 6, 6, 6, 9, 4, 3, 2, 2,
	0, 1, 1, 1, 1, 1, 3, 1, 3, 6,
	4, 6, 7, 9, 6, 2, 2, 3, 0, 8,
	6, 8, 7, 2, 0, 1, 2, 5, 0, 1,
	3, 3, 1, 3, 1, 3, 3, 3, 3, 12,
	3, 1, 1, 2, 1, 4, 1, 0, 3, 3,
	0, 4, 6, 0, 6, 4, 4, 4, 5, 7,
	6, 8, 7, 9, 8, 2, 1, 3, 1, 3,
	3, 3, 0, 2, 5, 0, 1, 3, 3, 3,
	3, 1, 1, 1, 1, 1, 1, 3, 3, 3,
	3, 1, 3, 3, 3, 6, 4, 9, 7, 12,
	9, 2, 7, 2, 1, 1, 1, 3, 3, 0,
	3, 1, 3, 1, 1, 3, 2, 5, 0, 7,
	5, 2, 0, 1, 2, 3, 1, 1, 2, 2,
	2, 2, 1, 2, 3, 3, 4, 3, 3, 1,
	2, 1, 2, 1, 2, 1, 2, 2, 3, 3,
	3, 3, 3, 3, 5, 3, 3, 5, 3, 3,
	5, 3, 3, 5, 3, 4, 3, 6, 6, 6,
	6, 6, 8, 4, 4, 1, 1, 1, 2, 1,
	1, 2, 1, 2, 1, 1, 2, 1, 2, 1,
	2, 6, 3, 8, 5, 3, 12, 2, 0, 1,
	0, 1, 1, 0, 1, 3, 1, 3, 3, 3,
	3, 2, 2, 1, 1, 1, 1, 2, 1, 1,
	1, 1, 0, 1, 2, 2, 2, 1, 1, 1,
	4, 5, 1, 1, 1, 1, 3, 3, 2, 2,
	1, 2, 2, 2, 2, 1, 1, 1, 2, 1,
	1, 3, 0, 1, 4, 0, 4, 3, 3, 4,
	3, 4, 4, 4, 7, 3, 3, 4, 3, 3,
	3, 3, 3, 1, 0, 1, 0, 4, 3, 3,
	3, 3, 3, 6, 4, 4, 4, 3, 5, 3,
	3, 3, 3, 3, 3, 3, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 4, 1, 2, 1,
	2, 1, 2, 1, 7, 3, 2, 0, 1, 3,
	3, 1, 0, 1, 2, 2, 1, 6, 10, 5,
	1, 3, 3, 1, 1, 0, 2, 0, 2, 0,
	9, 3, 2, 0, 2, 2, 2, 2, 2, 2,
	1, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 4, 6, 5, 7, 3, 4, 6,
	3, 4, 6, 3, 5, 7, 3, 4, 6, 3,
	4, 6, 3, 1, 1, 3, 4, 6, 3, 3,
	5, 3, 1, 3, 2, 2, 2, 2, 1, 2,
	2, 5, 3, 3, 6, 6, 3, 1, 1, 1,
	1, 2, 1, 1, 1, 2, 1, 1, 2, 1,
	2, 1, 2, 1, 1, 1, 2, 1, 1, 2,
	1, 1, 1, 1, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 3, 4, 3, 1, 2, 3, 2,
	2, 2, 4, 6, 3, 1, 2, 2, 7, 5,
	7, 2, 3, 0, 3, 5, 2, 3, 0, 2,
	3, 2, 3, 2, 7, 4, 7, 8, 8, 9,
	11, 11, 6, 2, 6, 9, 4, 7, 7, 10,
	7, 10, 10, 10, 13, 5, 8, 5, 2, 2,
	1, 1, 3, 1, 1, 1, 1, 1, 2, 1,
	2, 2, 3, 2, 2, 4, 3, 2, 2, 1,
	2, 1, 3, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 1, 3, 5, 4, 6, 4, 3, 0,
	1, 3, 2, 4, 2, 4, 1, 6, 3, 4,
	4, 3, 4, 1, 1, 1, 1, 5, 4, 5,
	3, 3, 2, 2, 6, 3, 3, 3, 3, 4,
	4, 3, 1, 3, 3, 2, 2, 1, 3, 3,
	3, 1, 2, 1, 1, 2, 2, 3, 1, 1,
	1, 1, 1, 3, 2, 2, 1, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 1, 2,
	1, 2, 1, 2, 1, 1, 2, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 2, 1,
	1, 1, 2, 1, 2, 2, 2, 9, 2, 1,
	0, 1, 1, 0, 1, 2, 0, 2, 2, 0,
	2, 2, 2, 2, 1, 2, 3, 3, 4, 4,
	4, 4, 3, 3, 1, 1, 1, 0, 1, 1,
	1, 0, 1, 1, 3, 3, 3, 3, 3, 2,
	3, 3, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 2, 2, 2, 3, 5, 7, 3,
	3, 3, 4, 8, 6, 4, 5, 5, 5, 3,
	0, 1, 1, 1, 4, 4, 3, 4, 4, 3,
	4, 4, 1, 4, 4, 5, 3, 5, 5, 5,
	7, 3, 3, 3, 5, 7, 4, 2, 6, 4,
	3, 2, 3, 4, 3, 5, 3, 6, 5, 6,
	3, 5, 6, 3, 5, 3, 5, 3, 3, 4,
	4, 5, 0, 1, 1, 1, 1, 3, 2, 3,
	4, 3, 4, 3, 5, 3, 4, 4, 3, 4,
	5, 3, 4, 3, 4, 4, 5, 3, 3, 1,
	1, 0, 2, 3, 5, 4, 6, 4, 6, 4,
	1, 0, 3, 4, 4, 5, 7, 5, 3, 3,
	3, 4, 4, 5, 2, 0, 4, 2, 3, 4,
	2, 3, 3, 3, 7, 5, 2, 0, 3, 3,
	4, 3, 3, 3, 5, 3, 3, 3, 4, 4,
	4, 4, 4, 4, 4, 4, 3, 4, 5, 4,
	4, 2, 3, 2, 3, 6, 6, 7, 9, 7,
	9, 4, 3, 4, 4, 5, 1, 1, 10, 10,
	3, 5, 5, 5, 3, 5, 6, 4, 4, 5,
	5, 2, 6, 3, 2, 5, 4, 2, 0, 1,
	1, 1, 1, 2, 3, 2, 2, 1, 1, 1,
	1, 3, 2, 2, 2, 2, 2, 2, 2, 2,
	1, 2, 0, 1, 2, 1, 2, 1, 2, 2,
	1, 2, 1, 2, 1, 2, 2, 4, 3, 3,
	7, 3, 3, 7, 3, 3, 3, 3, 3, 3,
	3, 3, 4, 3, 3, 6, 5, 8, 3, 6,
	6, 3, 12, 15, 1, 0, 1, 2, 3, 0,
	2, 0, 4, 0, 4, 5, 4, 1, 1, 1,
	3, 3, 1, 3, 10, 13, 0, 2, 3, 1,
	1, 0, 1, 2, 2, 2, 2, 1, 1, 0,
	1, 3, 1, 1, 1, 2, 3, 3, 3, 0,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	1, 0, 1, 0, 1, 1, 0, 1, 4, 1,
	0, 3, 7, 7, 1, 1, 3, 7, 1, 3,
	11, 3, 2, 0, 3, 1, 2, 2, 3, 2,
	6, 2, 1, 2, 2, 3, 6, 4, 2, 3,
	5, 5, 5, 2, 5, 5, 2, 2, 2, 0,
	1, 1, 3, 4, 11, 12, 10, 5, 3, 1,
	5, 9, 7, 11, 3, 3, 0, 2, 4, 3,
	3, 1, 6, 1, 3, 1, 2, 0, 1, 2,
	3, 0, 1, 3, 3, 2, 2, 1, 1, 1,
	4, 0, 3, 0, 4, 0, 3, 0, 2, 2,
	2, 0, 1, 1, 2, 2, 0, 3, 3, 2,
	1, 1, 2, 2, 5, 8, 4, 1, 0, 1,
	2, 2, 1, 2, 3, 3, 2, 2, 3, 2,
	2, 2, 2, 2, 3, 1, 2, 3, 1, 4,
	2, 3, 2, 2, 4, 7, 3, 4, 6, 5,
	7, 5, 5, 3, 3, 0, 2, 2, 2, 2,
	1, 1, 1, 8, 10, 11, 8, 11, 5, 4,
	2, 0, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	2, 0, 3, 3, 0, 1, 8, 11, 3, 6,
	6, 5, 3, 4, 1, 0, 1, 3, 17, 20,
	16, 19, 4, 2, 0, 1, 0, 1, 0, 1,
	3, 2, 4, 2, 3, 1, 0, 2, 0, 1,
	1, 0, 2, 1, 0, 9, 6, 6, 8, 6,
	8, 5, 7, 2, 6, 7, 4, 4, 5, 2,
	4, 6, 6, 8, 6, 7, 8, 9, 6, 7,
	8, 9, 6, 8, 6, 8, 6, 7, 8, 9,
	6, 8, 6, 8, 6, 6, 8, 8, 4, 7,
	3, 0, 7, 10, 1, 1, 1, 1, 2, 2,
	3, 0, 3, 0, 3, 0, 1, 0, 2, 0,
	2, 2, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 2, 2, 1, 2, 1,
	2, 1, 2, 1, 3, 2, 2, 2, 2, 1,
	1, 0, 2, 4, 2, 1, 2, 1, 2, 3,
	2, 2, 2, 1, 0, 2, 1, 1, 0, 1,
	3, 1, 0, 1, 1, 1, 1, 1, 2, 3,
	2, 2, 1, 2, 15, 17, 3, 1, 0, 4,
	1, 0, 4, 1, 0, 2, 2, 3, 0, 1,
	1, 4, 4, 5, 1, 0, 3, 0, 3, 0,
	3, 0, 3, 0, 4, 0, 3, 0, 1, 0,
	6, 7, 3, 6, 3, 1, 3, 1, 1, 4,
	2, 1, 3, 1, 3, 4, 8, 11, 7, 10,
	2, 2, 0, 10, 3, 2, 0, 1, 3, 1,
	1, 3, 3, 5, 6, 4, 5, 4, 1, 1,
	3, 3, 1, 2, 4, 4, 2, 3, 5, 5,
	1, 3, 1, 0, 1, 2, 3, 2, 4, 2,
	3, 0, 2, 0, 2, 1, 2, 1, 1, 1,
	2, 1, 2, 1, 2, 1, 8, 8, 8, 2,
	4, 4, 4, 2, 2, 2, 2, 3, 1, 3,
	1, 2, 6, 7, 1, 0, 1, 0, 1, 0,
	1, 1, 0, 1, 5, 1, 0, 1, 0, 1,
	0, 3, 3, 5, 1, 3, 3, 4, 5, 2,
	2, 0, 2, 2, 1, 1, 1, 0, 1, 0,
	2, 2, 5, 4, 2, 3, 1, 1, 1, 1,
	1, 1, 1, 3, 0, 1, 3, 1, 3, 3,
	3, 2, 0, 4, 2, 5, 3, 2, 0, 1,
	3, 3, 5, 1, 1, 1, 1, 1, 1, 1,
	3, 5, 1, 3, 2, 4, 4, 0, 4, 4,
	3, 4, 1, 5, 3, 4, 5, 5, 1, 5,
	1, 3, 2, 0, 3, 0, 2, 3, 1, 3,
	2, 0, 3, 5, 6, 4, 6, 4, 3, 2,
	1, 0, 5, 1, 0, 2, 2, 2, 1, 1,
	0, 1, 1, 1, 1, 0, 4, 2, 1, 2,
	2, 4, 1, 3, 1, 2, 3, 2, 4, 1,
	0, 1, 0, 2, 1, 0, 2, 5, 7, 2,
	1, 2, 4, 3, 5, 0, 1, 3, 5, 1,
	2, 1, 1, 1, 1, 1, 2, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 4, 4, 6, 6, 1, 1, 1,
	1, 1, 3, 5, 0, 1, 1, 1, 1, 1,
	2, 2, 2, 2, 2, 1, 3, 0, 5, 4,
	1, 2, 1, 4, 1, 1, 2, 1, 1, 1,
	1, 1, 0, 1, 2, 5, 1, 4, 2, 5,
	1, 4, 3, 3, 0, 1, 2, 4, 1, 1,
	1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
	3, 1, 0, 1, 4, 1, 3, 3, 3, 5,
	2, 2, 2, 2, 2, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 2, 3, 3,
	3, 2, 2, 3, 5, 4, 6, 3, 5, 4,
	6, 4, 6, 5, 7, 3, 3, 3, 3, 3,
	4, 3, 2, 4, 2, 3, 3, 4, 3, 4,
	3, 4, 5, 6, 6, 7, 6, 7, 6, 7,
	3, 4, 4, 1, 3, 1, 3, 3, 2, 2,
	2, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	2, 3, 5, 6, 6, 7, 1, 2, 1, 2,
	1, 1, 1, 1, 1, 6, 1, 1, 1, 1,
	1, 1, 2, 1, 5, 5, 6, 3, 1, 1,
	1, 2, 2, 2, 4, 3, 5, 6, 8, 6,
	5, 4, 3, 2, 2, 4, 1, 1, 1, 5,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 6, 6, 8, 8, 6, 4, 6, 6, 6,
	4, 1, 3, 3, 3, 3, 3, 4, 3, 3,
	4, 3, 3, 4, 3, 3, 4, 3, 3, 3,
	3, 3, 4, 3, 4, 3, 4, 3, 4, 4,
	3, 6, 5, 5, 5, 4, 4, 3, 4, 3,
	5, 0, 5, 0, 2, 0, 1, 3, 3, 2,
	2, 0, 6, 1, 0, 3, 0, 3, 3, 3,
	0, 1, 4, 2, 2, 2, 2, 2, 3, 2,
	2, 3, 0, 4, 1, 1, 5, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 4, 1, 1,
	1, 2, 1, 2, 2, 3, 1, 2, 3, 2,
	3, 2, 3, 1, 0, 1, 3, 1, 3, 3,
	3, 1, 3, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 4, 3, 1, 2, 3, 0, 3,
	3, 2, 2, 1, 2, 2, 3, 2, 1, 1,
	1, 5, 1, 2, 4, 2, 0, 1, 0, 3,
	5, 1, 0, 1, 2, 1, 0, 1, 3, 3,
	2, 1, 1, 1, 1, 1, 3, 1, 3, 3,
	1, 1, 1, 1, 5, 3, 1, 1, 3, 1,
	1, 1, 1, 2, 2, 1, 1, 2, 2, 1,
	1, 1, 3, 5, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 1, 3, 1, 3,
	1, 0, 1, 1, 1, 1, 1, 1, 1, 3,
	5, 7, 1, 7, 5, 3, 1, 1, 1, 1,
	1, 1, 1, 3, 5, 1, 1, 1, 1, 1,
	1, 1, 0, 3, 0, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
}

var sqlChk = [...]int16{
	-1000, -1, -2, 656, -3, -209, -116, -113, -79, -77,
	-120, -121, -101, -122, -115, -144, -149, -130, -131, -132,
	-145, -151, -208, -216, -217, -218, -219, -228, -210, -211,
	-4, -64, -66, -80, -100, -102, -114, -124, -123, -125,
	-133, -141, -136, -119, -71, -146, -150, -162, -212, -213,
	-214, 33, 32, 106, 85, 164, 137, 146, 217, 415,
	467, 479, 432, 151, 455, 437, -156, -157, 500, -65,
	-78, -148, -147, 78, 138, 181, 319, 447, 53, 156,
	-7, -15, -32, -19, 30, 49, -67, -68, -69, -70,
	67, -87, -82, -95, -88, -81, -84, -85, -693, 109,
	-613, -103, -107, -140, -105, -696, 172, 238, -126, -127,
	-128, 397, -134, -135, 458, -137, -138, -139, 461, 173,
	-73, -72, 166, -252, -254, -153, -152, -154, -215, -163,
	-164, -165, -166, -167, -169, -170, -172, -199, -173, -174,
	-175, -176, -177, -178, -182, -202, -179, -180, -181, -184,
	-183, -185, -190, -186, -187, -188, -189, -191, -192, -194,
	-195, -196, -197, -198, -200, -201, 506, -193, -203, -171,
	-204, 574, 523, 87, 471, 21, -8, -9, -10, -11,
	-12, -13, -14, -18, -17, -63, -5, -6, -83, -86,
	-89, -90, -91, -99, -92, -93, -94, -612, -104, -106,
	-109, -111, -112, -108, -110, 456, 627, -255, -253, 653,
	632, 590, -168, -22, -27, -23, -24, -26, -28, -25,
	-29, -30, -31, -49, -54, -51, -52, -50, -53, -55,
	-56, -57, -58, -59, -60, -61, -62, -34, -40, -41,
	-35, -36, -37, -38, -39, -42, -43, -44, -45, -46,
	-47, -48, -20, -21, -33, 614, 623, -258, -256, -257,
	-265, 492, 598, 546, 656, 656, 656, 656, 656, 656,
	656, 656, 656, 656, 656, 656, 656, 656, 656, 656,
	656, 656, 656, 656, 656, 656, 656, 656, 656, 656,
	656, 656, -359, 2, -335, -341, -342, -343, -334, -304,
	-580, -585, 4, -577, -583, 180, 248, 357, 21, 22,
	24, 23, 25, 26, 27, 28, 30, 31, 41, 43,
	44, 45, 47, 48, 49, 50, 51, 52, 53, 57,
	59, 63, 64, 65, 66, 67, 68, 69, 73, 78,
	79, 84, 85, 86, 87, 88, 89, 90, 91, 97,
	94, 95, 96, 98, 100, 102, 103, 104, 105, 106,
	107, 108, 110, 111, 112, 114, 115, 116, 124, 125,
	126, 127, 128, 130, 137, 131, 138, 141, 135, 140,
	136, 142, 144, 145, 146, 149, 150, 151, 153, 154,
	155, 157, 158, 159, 161, 162, 164, 165, 166, 169,
	167, 170, 168, 171, 172, 173, 174, 175, 178, 186,
	187, 188, 193, 195, 196, 197, 199, 200, 203, 204,
	205, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	218, 222, 224, 225, 226, 227, 228, 229, 230, 236,
	237, 238, 240, 241, 242, 243, 244, 249, 250, 251,
	255, 257, 263, 264, 269, 265, 270, 271, 273, 277,
	278, 279, 280, 281, 282, 284, 286, 285, 290, 288,
	292, 293, 296, 297, 298, 299, 300, 301, 305, 306,
	302, 307, 308, 310, 311, 314, 312, 315, 316, 313,
	317, 320, 321, 322, 323, 324, 325, 326, 327, 328,
	329, 330, 331, 318, 319, 334, 332, 336, 337, 338,
	339, 340, 355, 350, 351, 352, 344, 345, 341, 346,
	342, 343, 347, 348, 354, 349, 359, 360, 361, 362,
	365, 234, 256, 367, 368, 371, 373, 390, 376, 377,
	378, 381, 382, 385, 388, 389, 391, 392, 393, 394,
	395, 396, 397, 398, 399, 400, 402, 403, 405, 406,
	407, 409, 410, 411, 413, 415, 416, 418, 419, 420,
	422, 423, 424, 425, 426, 427, 428, 429, 431, 432,
	434, 433, 435, 437, 439, 440, 441, 447, 448, 455,
	449, 451, 452, 453, 454, 456, 457, 458, 459, 460,
	461, 465, 463, 464, 466, 467, 469, 470, 471, 472,
	473, 475, 477, 478, 482, 483, 484, 503, 504, 526,
	479, 480, 481, 485, 486, 487, 488, 489, 491, 490,
	495, 493, 494, 496, 497, 498, 500, 502, 505, 506,
	508, 509, 510, 511, 512, 513, 514, 517, 519, 520,
	521, 522, 523, 524, 545, 525, 527, 531, 532, 533,
	534, 528, 529, 544, 536, 537, 538, 539, 541, 542,
	547, 548, 549, 550, 551, 552, 554, 555, 557, 565,
	578, 566, 567, 568, 569, 571, 574, 575, 576, 577,
	563, 579, 580, 583, 584, 588, 585, 589, 586, 587,
	590, 592, 595, 596, 597, 603, 602, 604, 605, 606,
	608, 609, 610, 615, 616, 618, 619, 620, 37, 54,
	55, 58, 60, 62, 74, 75, 76, 80, 132, 133,
	163, 176, 177, 189, 206, 207, 219, 221, 231, 232,
	233, 254, 258, 259, 261, 267, 289, 364, 366, 383,
	387, 404, 408, 412, 414, 430, 474, 501, 515, 530,
	535, 558, 559, 560, 561, 570, 572, 598, 599, 600,
	607, 617, -359, 2, -335, 374, -328, 2, -304, -304,
	415, 29, 2, 29, 403, 494, 549, 551, 2, -642,
	-404, 542, 2, 29, -307, -304, 109, 217, 492, -328,
	2, -642, 217, -404, 26, 542, 2, -304, 2, 388,
	175, 23, 28, 71, 82, 104, 149, 174, 198, 203,
	-695, 390, 423, 477, 496, 544, 555, 571, 2, 602,
	311, 493, 546, 248, 127, 576, 485, -653, 482, 483,
	388, 421, 469, 220, 591, -308, 2, 479, -304, 311,
	2, 656, 100, 79, 474, 497, -159, 2, 301, 566,
	-160, -161, -158, 558, -564, 485, 469, 334, -304, 656,
	656, 656, 29, -317, 2, -304, -317, 2, -220, 2,
	-317, -698, -227, -226, -225, 22, 448, 188, 282, 201,
	239, 339, 418, 199, 51, -220, 2, 546, 248, 485,
	127, 542, -709, 2, 566, -709, 2, 656, 656, 2,
	546, 394, 602, 493, 127, 427, 248, 576, 203, 149,
	28, 73, 49, 552, 631, 485, -653, 628, 629, 311,
	134, -635, 2, -634, 4, -583, -577, -353, -352, 546,
	552, 127, -343, -334, 645, -342, 656, 656, 656, 656,
	2, 270, 271, 425, 424, 497, 498, 29, 656, 656,
	656, 656, 656, 482, 175, 2, 174, -667, 23, 28,
	71, 99, 104, 134, 198, 390, 423, 496, 544, 548,
	555, 571, -652, 525, 73, 485, -651, -653, 379, 311,
	576, 149, -454, 127, 301, 215, 584, 551, 549, 582,
	141, 257, 587, 586, 656, 656, 656, -117, 2, 653,
	33, 32, -116, -120, 151, 500, -245, 546, 262, 2,
	-304, 656, 656, 656, 2, 270, 271, 482, 483, 29,
	656, 656, 201, -634, 542, 2, 656, 656, 656, 2,
	29, 270, 271, 482, 483, 262, 2, 73, 487, 656,
	656, 656, 656, 656, 656, 656, 656, 656, 656, 656,
	656, 656, 656, 656, 656, 656, 656, 656, 656, 656,
	656, 656, 656, 656, 656, 656, 656, 656, 656, 656,
	656, 656, 656, 656, 656, 656, 2, -206, 497, 525,
	227, 50, 49, 79, 29, 422, 84, 395, 128, 134,
	158, 577, 218, 248, 249, 278, 99, 100, -456, 47,
	271, 73, 270, 483, -658, 482, -510, 547, 486, 494,
	541, 91, 282, 479, 566, 568, 109, 592, 470, 620,
	427, 428, 539, 441, 536, 302, 167, 202, 4, 127,
	334, 469, 499, 286, 285, 578, 558, 301, 478, 398,
	89, 656, -707, 2, 546, 566, 2, -709, 2, -709,
	2, -710, 566, 617, 656, 656, 656, 656, 656, 656,
	656, 656, 656, 656, 656, 656, 656, 656, 656, 656,
	656, 656, 656, 656, -253, -255, -254, 656, 656, 656,
	656, 656, 656, 656, -206, 497, 2, 79, 29, 29,
	-397, -399, 581, 260, 160, 380, -252, -254, 2, -612,
	578, 497, -562, 2, -484, -586, -486, 643, 644, 636,
	543, 72, -363, 356, 621, -498, 134, 582, 374, -585,
	-487, -500, 163, 390, 474, -418, 8, 9, 5, 6,
	7, -313, -488, -494, 573, 179, 363, -356, 657, 10,
	653, -609, -254, -499, 38, 221, 70, -566, -355, -314,
	-538, 261, -354, -334, -606, -607, 4, -577, -578, -567,
	-541, -549, -545, -546, -552, -304, -580, 82, 118, 119,
	117, 122, 121, 304, 303, 123, 120, 499, 591, 71,
	37, 231, 232, 267, 364, 233, 80, -608, 150, -579,
	258, 259, 515, 55, 430, 189, 133, 132, 366, 60,
	58, 599, -550, 129, 558, 559, 560, 561, 206, 207,
	62, 176, 177, 387, 412, 535, 570, 572, 219, 289,
	46, 113, 202, 253, 235, 266, 268, 272, 291, 294,
	335, 353, 358, 384, 386, 468, 507, -713, 600, 530,
	74, 75, 194, -614, 433, -615, -328, -614, 656, 656,
	658, 656, -388, -390, -392, 2, 29, 147, 653, 2,
	-515, 2, -516, -520, -254, 283, -519, 653, -517, 651,
	-335, 375, -610, 475, -606, -607, -313, -334, -355, 4,
	-577, -579, 655, -393, 653, 127, 485, 546, 83, 248,
	99, 174, 203, -449, 653, -304, 29, 374, 562, 658,
	-642, -404, -389, 420, -496, 653, 374, 377, 201, 377,
	-642, 64, 98, 315, 2, 2, 2, 2, 2, 231,
	-304, 546, 126, 2, 281, 2, 2, 2, 2, 2,
	2, 2, -411, 231, 2, -335, 602, -411, 231, 2,
	-411, 231, 2, -455, 2, 93, -318, 231, 2, -304,
	-344, 231, 2, -339, -341, -350, 231, 2, -347, -304,
	-572, 231, 2, -570, 4, -577, 123, 499, -484, 2,
	-146, 2, 64, -304, 602, 2, 503, 2, 653, -159,
	2, 76, 566, 46, 497, -160, 2, -470, 2, -471,
	-300, -301, -302, -527, -303, 269, 419, 429, 624, 139,
	356, 620, -688, 201, 635, 562, -562, -562, -562, -419,
	655, -222, 57, -317, -699, -698, -699, -560, 29, -555,
	8, -556, 643, 644, -560, -560, -699, -699, 2, 2,
	2, 2, 2, -469, -470, 2, -520, 231, -335, 2,
	-332, -565, 4, -577, -583, -578, -584, -580, 29, 32,
	33, 34, 36, 38, 39, 40, 42, 61, 70, 71,
	77, 81, 83, 93, 99, 109, 117, 118, 120, 119,
	121, 122, 123, 134, 139, 143, 147, 148, 152, 156,
	160, 179, 181, 194, 198, 201, 217, 220, 223, 239,
	252, 260, 262, 283, 287, 295, 303, 304, 356, 363,
	369, 374, 375, 379, 380, 401, 417, 436, 462, 492,
	499, 518, 540, 546, 556, 562, 564, 573, 581, 582,
	591, 593, 601, 611, 612, 613, 614, -585, 82, 2,
	-520, 231, 2, -338, 231, -520, -341, 2, -318, 2,
	-484, -646, 554, 170, 449, 2, -360, 231, -335, -337,
	-341, -339, 2, 2, 2, 2, -484, 2, -574, 2,
	-569, 10, -568, 5, 4, -577, -583, -578, -487, 2,
	-498, 29, -347, 2, -570, 231, 2, 29, 29, 602,
	420, 262, 562, 658, -410, -352, -353, -561, 4, 8,
	-403, -304, 655, -484, 2, -146, -129, 2, 194, -484,
	231, 2, -146, 231, 2, -484, 231, 2, -146, 231,
	2, -304, 2, -654, 2, -687, -574, 231, 98, 231,
	-304, 2, 203, -694, 477, 575, 315, 2, 2, 571,
	2, 104, 546, 126, 2, 2, 2, 2, 2, 2,
	2, 546, -323, 2, -304, 194, -529, 262, -347, 231,
	-348, 2, 493, -708, 433, -570, 231, 2, 453, 602,
	-339, 231, 2, -339, 248, 264, -318, 231, 2, 551,
	549, 551, 549, 201, 2, 262, 2, 262, 2, -521,
	2, -522, -516, -523, 651, 375, -532, 2, -531, -568,
	598, -117, 653, -117, 653, 497, 653, -574, -335, -335,
	-484, 2, -146, -129, 2, -484, 2, -146, 2, -304,
	2, -143, -574, -142, 653, 201, 592, -304, 2, -484,
	2, -146, -129, 2, -484, 2, -146, 2, -245, 194,
	2, 127, 546, -206, 2, 194, 593, 2, 8, 2,
	239, -241, -574, 486, 186, 428, 2, 503, 2, 504,
	79, -456, 620, 79, 201, 2, 201, 2, -439, 2,
	614, 420, 201, 2, 2, -640, 2, 374, 201, 2,
	201, 2, 201, 2, 201, 2, 201, 2, -205, 498,
	567, 545, 424, 271, 2, -146, 611, -129, 271, 270,
	-484, 611, 2, -659, 194, 483, -484, 2, 565, 280,
	168, 201, -439, 2, 201, 2, 201, 2, 5, 2,
	43, 425, 526, 2, 269, 419, 526, 2, 524, 2,
	-335, 546, 602, 493, 127, 203, 29, 2, 482, 2,
	2, 94, 95, 201, 2, 201, 2, 216, 201, 2,
	441, 201, 546, -420, 655, -420, 620, 2, -431, -520,
	-469, 562, -397, -399, -206, 503, 2, -259, -429, -261,
	194, -460, -461, -262, 295, 181, 369, -263, -438, 29,
	147, -438, -438, 64, 654, 654, -688, 578, 11, 12,
	81, 43, 643, 644, 645, 646, 192, 647, 648, 641,
	642, 640, 633, 634, 638, 275, 276, 101, 637, 635,
	92, 309, 476, 182, 183, 184, 185, 450, 246, 35,
	247, 14, 15, 16, -363, 34, 379, 294, 621, 235,
	507, 636, 17, 18, 19, 266, 268, 358, 54, 239,
	-312, 390, -362, 543, 72, -484, -484, -484, -484, -484,
	-484, -484, -484, 386, 653, -425, -479, 651, -254, 653,
	653, 653, 653, -561, -254, -484, -498, 654, -416, 653,
	-254, -498, -493, 653, 474, 651, 653, -501, -484, 5,
	5, 5, 653, 655, -617, 615, 194, 653, 653, 653,
	653, 653, 653, 653, 653, 653, 653, 653, 653, 653,
	653, 653, 653, 414, -543, 653, -542, 653, -542, -542,
	603, -540, 653, 623, 616, 653, -540, 653, 653, 653,
	653, 653, 653, 653, 653, 653, 653, 653, 653, 653,
	603, 552, 658, -614, -393, 653, -421, -525, -484, 645,
	-421, -421, 374, -413, -484, 113, -442, 272, 335, 202,
	291, 468, 253, -481, 657, -481, -509, 623, -254, -517,
	-334, -254, -519, 653, -515, -509, -118, -561, -100, -114,
	-123, -146, -162, -213, -214, 645, -335, 653, 201, 653,
	655, -565, 201, -403, -318, -347, -335, -354, -355, -360,
	-329, -304, 2, 2, 146, -413, -636, 576, 485, 29,
	4, -583, -577, -353, 493, -352, 546, 127, -572, -307,
	562, 39, -495, -535, -536, -588, 657, -587, -538, -548,
	-544, -547, 404, 408, -567, 58, 599, -550, 261, 4,
	-577, -579, 258, 259, 515, 55, 430, 189, 133, 132,
	366, 60, 558, 559, 560, 561, 206, 207, 62, 600,
	530, 74, 75, -636, 576, 485, 29, 493, 194, -572,
	194, 201, -572, 2, -574, 2, 2, 163, 2, 2,
	2, -304, -280, 658, 69, 459, 163, -411, 231, -280,
	163, -280, 163, -361, 231, -360, -280, 163, -280, 658,
	163, -280, 658, 163, 655, 658, 163, -572, 2, -455,
	-564, -413, 39, -470, 2, 134, 4, 5, -711, 658,
	293, -366, 308, 355, 226, 375, 618, 367, 139, -573,
	5, 4, -494, -506, 134, 301, 261, -555, -557, 9,
	-558, 643, 644, -563, -562, 116, 655, -565, -223, 256,
	41, -317, -317, -699, -699, 8, 8, -699, -699, -317,
	-317, -277, 451, 500, 389, -276, 25, 30, 151, 250,
	340, 596, 169, -378, 251, 456, -375, 394, 163, 519,
	585, -646, -649, 481, 554, 170, 449, 96, 367, 500,
	389, 451, 163, -435, -437, 39, 125, 340, 388, 65,
	242, 313, 314, 523, 457, 607, 163, 500, 389, 451,
	389, -16, -293, 25, 151, -295, -288, 500, 30, -649,
	105, 451, 632, 627, 456, 400, 538, 417, -649, -646,
	288, -648, 610, 354, -279, 519, 585, -646, -649, 481,
	451, -278, -380, -375, 394, 163, 657, 25, 151, 451,
	500, 389, -691, -692, 30, -272, -271, 25, 151, 500,
	588, -275, 239, -274, 25, -155, -135, -154, 456, 500,
	-155, 2, 451, 389, -643, -325, -611, 239, 614, 163,
	-325, -325, -520, 231, -663, 194, 2, -656, -142, 284,
	5, 10, -574, -142, -410, 658, 658, -565, 645, 483,
	482, 163, 163, 163, 163, 271, 194, 356, -687, 2,
	356, 614, -682, -341, -695, 2, 2, 2, 2, 2,
	2, 2, -335, 231, -395, 374, -632, -633, -697, 546,
	-232, 614, -574, 356, 46, -338, 231, 2, -341, 602,
	-643, 356, -651, -340, 231, -335, 39, 653, 356, 2,
	-455, 2, 248, -611, 356, -521, -357, -335, -516, -357,
	500, -328, 39, -481, -335, 654, 658, -532, -532, -574,
	-232, 201, 653, -245, 614, 614, 271, -528, 658, -527,
	239, -575, -574, -143, -574, 454, 201, 271, -574, -632,
	-318, 2, -335, 2, 546, 273, -142, 201, 239, -232,
	-574, -574, -574, -564, 29, 504, 2, -205, 498, 567,
	95, 504, 2, -335, 546, 127, 248, 85, -663, 194,
	2, -304, -641, 194, -637, 469, 485, 576, -636, -335,
	127, -335, 127, -335, 127, -335, -335, 2, 2, 2,
	2, 2, 90, 2, -146, -484, 2, 90, 2, 49,
	520, -659, 194, 2, 565, 2, 565, 2, -304, -304,
	-304, 369, 525, 293, 614, -335, -335, -335, -336, -341,
	-341, 486, 547, 577, 483, -484, 2, -700, 2, 201,
	194, 2, 546, 248, 546, 248, 127, 201, 79, 127,
	29, 201, 546, 480, 655, 4, -280, 658, -308, -259,
	-429, -564, -430, -429, -260, -259, -262, 194, 429, 586,
	340, 505, 277, -461, -460, 29, -484, -465, 188, 339,
	-484, -463, -486, 643, 644, -556, -558, -412, 367, -253,
	-253, -253, -400, -511, -484, 417, 248, -563, -688, -537,
	-535, -535, -333, -565, 558, -484, -484, -484, -484, -484,
	-484, -484, -484, -484, -484, -484, -484, -484, -484, -484,
	-484, -484, -484, -484, -484, -484, -484, -484, -484, -484,
	-484, -484, -484, -484, -484, -484, -484, -484, -484, -484,
	-484, 294, 235, 507, 54, 239, -484, 562, -484, -484,
	-484, -484, 332, 356, 363, 573, 179, 583, 147, 367,
	-714, 540, 42, -491, -254, -417, 653, -505, 36, 518,
	29, -498, 653, 2, -479, -484, -480, -364, -362, -304,
	643, 644, 645, 646, 647, 648, 633, 634, 635, 14,
	15, 16, 638, 642, 640, 641, 192, 101, 637, 309,
	476, 92, 182, 183, 184, 185, 275, 276, 17, 18,
	19, 35, 636, -414, -413, -413, 654, 601, 29, 147,
	645, 2, 654, 658, 39, 654, -484, -414, -497, -493,
	-413, -504, -503, 611, -450, -451, 619, 318, 130, 229,
	316, -452, 489, -559, 8, -565, 645, -618, 187, 220,
	653, 654, 2, 654, 2, 654, -484, 2, 654, -484,
	2, 654, -484, 2, 654, -484, 2, 654, 2, 654,
	2, -484, -484, -484, -484, -484, -484, -484, -413, 8,
	-559, -559, 558, 558, -559, -559, -559, -551, 404, 405,
	406, 407, 296, 297, 298, 299, 408, 409, 410, 411,
	324, 325, 326, 327, 320, 321, 322, 323, 328, 329,
	330, 331, 211, 212, 213, 214, 207, 208, 209, 210,
	-551, -444, 2, -553, -413, 4, 619, 318, 130, 229,
	316, 489, 5, -444, 2, -445, 2, -484, -413, -446,
	-485, -486, 643, 644, 636, -363, -447, 2, -484, -414,
	-484, 61, 287, 564, -448, -484, 201, -413, -413, 2,
	-413, 2, -487, 2, -615, 39, -413, -406, 658, 201,
	39, -582, 4, -581, 44, 66, 107, 136, 175, 237,
	255, 265, 290, 391, 463, 464, 491, 522, 537, 569,
	609, 501, -406, -406, 653, 654, 658, -443, 224, 312,
	307, 264, -443, -515, -442, 272, -440, 384, -440, -440,
	-509, -319, 651, 660, -565, -509, -508, -507, 39, -328,
	381, -509, -509, 655, 654, -508, 652, -630, 653, 656,
	656, 656, 656, 656, -335, 653, -413, -565, 655, 527,
	2, 654, 266, 266, 266, 266, 266, 374, 475, 654,
	562, -638, -344, -350, 494, 547, -410, 658, -410, -403,
	614, -572, -116, 376, 654, 658, -405, 38, 651, 655,
	-559, 2, 2, -554, 603, 653, 653, -451, 653, 201,
	-638, -350, 547, 494, 2, -642, 542, -404, -572, 562,
	-304, 2, -335, -411, -280, 163, -411, -411, -280, 658,
	163, -318, -339, -344, -347, -350, -304, -570, -572, -280,
	-340, -688, 654, 566, -471, -365, 429, 517, 452, 495,
	542, 9, 9, 658, -565, -224, 484, 340, -317, -317,
	-317, -317, 658, -689, 99, 562, 83, 653, 485, -297,
	302, 562, -475, 231, 83, -589, 99, -321, -590, -304,
	77, 582, 417, 198, 161, -689, 99, 417, -689, 99,
	2, 250, 99, 500, 525, 653, 29, 64, -520, 43,
	43, 29, -647, -648, 288, 201, 620, 546, 248, 485,
	562, 562, -520, -437, -535, 125, 313, 314, 64, -560,
	-560, 64, -560, -560, -560, 614, -560, 614, -338, -520,
	485, 562, 562, 562, 439, 536, 439, 536, 490, -288,
	-290, -160, 490, 536, 562, 562, -160, 29, -206, 460,
	134, -712, 635, 439, 288, -648, 562, 201, 658, 43,
	43, 29, -647, 201, 562, -360, -319, 597, 45, 597,
	45, 597, 562, 45, 485, 562, 658, 45, -271, -632,
	-632, -231, -230, -304, 5, -403, -274, -574, -273, 338,
	79, 562, 562, -16, 500, -644, -309, 112, 346, 306,
	347, 103, 343, 102, 342, 110, 344, 111, 345, 604,
	359, 605, 360, 68, 341, 317, 348, 521, 349, 606,
	361, -310, -311, 154, 396, 595, 127, -570, -16, -16,
	500, 389, 451, 163, -664, 239, 29, -653, 239, -528,
	239, -528, -352, -304, 655, -146, -484, -484, -146, -484,
	-146, 49, 163, 39, 163, 2, 653, 281, 653, -369,
	356, 201, -403, -529, 658, -335, 39, -231, 378, 163,
	-570, -436, -435, 356, -340, 231, 2, 163, -708, -393,
	356, 157, 653, 427, 2, 163, -320, 231, -305, -304,
	-455, -282, 550, 163, -433, 593, -466, -146, 653, 134,
	39, -466, -422, -423, -526, -424, -321, 653, -328, -481,
	-117, -531, 654, 654, 654, -245, -394, -322, -321, 126,
	431, 431, -238, 614, -142, -143, 654, 658, -528, 239,
	528, -143, -574, -232, -232, -528, -528, -335, 194, -574,
	-142, -232, -232, -232, 2, 2, 2, 2, -439, -335,
	-318, -360, -335, -346, 239, 29, 655, -572, -572, -350,
	-351, -349, -304, -344, -439, -318, -439, -318, -439, -318,
	-439, -439, -146, -484, 525, 2, 497, 194, 194, 655,
	-439, 8, -396, 462, 5, 2, 427, 127, 546, 394,
	248, -335, -360, -335, -360, -318, 127, -318, 128, 127,
	-335, 4, -520, -430, -260, 375, 277, 505, -463, -464,
	-486, 474, 475, -464, 474, 475, 8, 9, 8, 9,
	-264, 509, 362, -411, 658, -269, 40, 143, 277, -335,
	-563, 620, 159, -484, -484, 562, -714, 540, -491, 159,
	-484, 332, 363, 573, 179, 583, 147, 367, 201, 653,
	-485, -485, 654, -415, -484, -484, 652, 662, 654, 655,
	654, -399, 658, -397, -484, -413, -413, 654, 655, -413,
	-403, 652, 652, 658, 654, -502, -503, 152, -484, 562,
	562, 562, 562, 653, 654, 655, -623, 385, 653, 653,
	-484, 654, 654, 654, 654, 39, 658, 658, 658, 654,
	658, 658, 658, 654, 654, 654, 658, 654, 620, 620,
	654, 654, 654, 654, 658, 654, 658, 654, 201, 654,
	654, -453, 401, 654, 11, 12, 643, 644, 645, 646,
	192, 647, 648, 641, 642, 640, 633, 634, 635, 92,
	309, 476, 14, 15, 16, -363, 266, 239, -485, -485,
	-485, -485, 654, -489, -490, 201, 194, 39, -448, -448,
	-448, 654, 201, -413, 654, 654, 653, -616, 311, 356,
	654, -478, -477, 612, -525, -407, 2, -515, -330, -565,
	-478, -478, -413, -484, 272, 272, -441, 593, 374, -443,
	-515, -508, -561, -483, -482, 196, 40, 143, 350, 351,
	352, 234, 197, -508, -328, -393, -508, -508, -565, -509,
	-509, -507, 654, -631, -561, 654, -408, -518, -610, -399,
	655, -565, -242, -611, -207, 5, 363, -207, -207, -207,
	-207, -335, -572, 562, 562, 239, 239, -410, 26, -662,
	614, 402, -535, 651, 652, 8, -565, 653, -559, -559,
	-559, -572, 201, 201, 239, 239, 374, -642, 201, -570,
	2, -280, -411, -280, -280, -360, -361, -280, -280, -280,
	-434, 614, -562, -470, 580, 88, 429, 558, -562, 124,
	484, -276, 451, 500, -321, -321, -335, -249, -248, -246,
	-304, 5, -345, -304, 215, 440, -570, 356, -475, 231,
	-281, 356, 231, -329, -535, 653, -457, 616, 277, 277,
	593, -321, -329, 277, 231, -321, 231, -329, 2, -329,
	-645, 429, 368, -484, -247, -246, 64, -376, 300, 427,
	357, -277, 451, 500, 389, -146, -146, -146, 653, -688,
	593, 146, -335, -360, -335, -345, -570, -340, 500, 389,
	451, 353, -354, -560, -560, -560, -435, 500, 389, 451,
	-345, -570, -338, -570, -287, 231, -304, 439, -287, 231,
	439, 439, 439, 439, 485, -318, 439, 620, 48, -712,
	562, 201, -484, -484, -278, -146, -146, -146, 653, -319,
	-279, 451, 5, 231, -321, 5, -321, 231, 5, -304,
	-321, -345, -570, -692, 25, 151, -321, -232, 658, 635,
	635, -275, 635, -345, -570, -309, 396, -656, 363, 5,
	10, 589, -318, -643, -325, 485, 562, 562, -520, -660,
	-661, 217, 467, 485, 470, -572, -142, -235, 614, -142,
	-229, 243, 645, -635, -574, -574, -304, -671, -672, -673,
	-674, -681, -669, -676, 239, 383, 254, 601, -566, -535,
	4, -577, -304, -367, -370, -368, -321, -476, -475, -593,
	-594, -589, 294, 248, 582, 264, 180, 99, -250, -251,
	616, 614, 163, -358, -335, 651, -232, -633, -530, 180,
	492, 653, -347, -348, 163, -393, 356, -570, 602, 39,
	163, 653, 2, 2, -339, 374, 356, -320, 231, -283,
	153, -712, -318, -478, -407, -432, -468, 462, 374, -394,
	598, -328, -432, -409, 658, 201, 635, 655, -394, -524,
	645, -117, -117, -232, 653, -574, 654, 658, 655, 653,
	635, 635, -240, 378, -239, 155, 279, 263, 511, 512,
	513, 514, 145, 510, 131, 337, 244, 552, -528, -574,
	-238, -143, 201, -528, 239, 201, -74, 614, 546, 239,
	-232, 657, 485, 470, -304, 655, -439, -439, -439, 497,
	497, -304, 194, -403, -331, -565, -318, -335, -332, -360,
	194, 194, -318, -318, 586, -464, 375, 305, -511, -270,
	622, -335, 657, -484, -484, 159, 159, -484, -485, -485,
	-484, 159, 201, 653, -484, -495, 34, 34, 654, 658,
	-480, -484, -362, 654, 601, -399, -399, 654, 645, -565,
	657, 654, -493, 156, -484, 556, 318, 229, 316, -452,
	316, -452, -452, -559, 5, -565, 645, -624, -324, 653,
	-304, 612, -398, 380, 654, -537, -535, -484, -484, -484,
	-484, -484, -559, -540, -540, -555, -555, -484, -489, -484,
	-537, -535, -485, -485, -485, -485, -485, -485, -485, -485,
	-485, -485, -485, -485, -485, -485, -485, -485, -485, -485,
	-485, -485, 147, 356, 367, -485, -490, -489, -484, -484,
	-535, 654, 654, 654, -413, -116, 653, 311, -426, 220,
	-484, -528, 658, -426, -426, 654, -515, -515, 653, -484,
	272, 652, 658, 661, 635, 635, -393, 655, -507, -508,
	652, 654, 658, 654, 658, -467, 39, 654, -565, -478,
	-244, -243, 144, 57, 114, 142, 363, 371, 200, 225,
	426, 159, 195, 153, 266, -662, -572, -572, 485, 485,
	377, 217, 5, 8, 651, 652, 655, -559, 654, 654,
	654, -572, -572, 485, 485, -636, 576, 485, 29, 201,
	-572, -280, -280, 126, 340, -484, -221, 614, 616, 562,
	562, 654, 658, 635, 64, 239, 163, 356, 595, 356,
	-590, 161, -595, -484, 653, 248, 653, 653, 2, -266,
	-267, -268, 151, 500, 25, -690, 2, 593, 163, -280,
	163, -280, 618, 654, 658, -376, 653, 653, 562, 485,
	-297, 562, 614, -413, -484, -233, 134, -564, -649, 657,
	-649, 657, 485, 562, 562, 485, 562, 562, 356, -304,
	163, -304, -712, -304, 614, 178, 178, 620, -287, -484,
	-484, 194, 562, 614, -413, 562, -539, 52, 27, 356,
	-339, -280, 163, 562, 562, 576, 500, -230, -574, -574,
	-142, -656, -574, 363, -16, -345, -570, -340, 500, 389,
	451, -642, -642, 217, -350, -664, -528, -237, 378, -236,
	155, 466, 145, 279, 244, -528, -235, 201, 262, 614,
	654, 658, 134, 635, -669, -676, -681, -676, 383, 2,
	654, 654, 658, 658, -596, -281, -335, -320, 248, 248,
	-327, -305, 39, 371, 371, 653, -335, -96, 614, -527,
	-561, -326, -304, -421, -231, 46, -338, 39, 163, -643,
	-340, -146, -340, -533, -534, 5, 39, -335, 163, 374,
	356, -284, 286, -712, -569, -611, -399, -432, -421, 357,
	97, 654, -478, -423, -407, -484, 2, 654, -574, -232,
	-245, -322, 2, -575, -574, -574, 658, 653, 635, 635,
	635, 635, 635, 635, 635, -238, -528, -142, -238, -143,
	-146, 378, -335, -142, 645, -345, -346, 645, -439, 5,
	-382, -381, 394, 367, -382, 474, 474, 375, 188, 282,
	-269, -319, -484, -484, 159, 34, 34, -484, -484, -495,
	654, -484, -484, -413, 652, 5, -484, 654, 654, 8,
	-484, 654, 655, -625, -304, -484, 654, 64, 654, 654,
	658, 658, 654, 654, 654, 654, 654, 654, 654, -490,
	201, 147, 367, 653, 654, 654, -116, -492, 223, 64,
	-515, -492, -492, -441, -403, -515, -482, -319, 651, -319,
	651, -565, -561, -518, 653, 655, -243, 635, -574, -574,
	2, 2, 5, 5, 426, 356, 363, 5, -207, -662,
	-662, 614, -350, -350, 377, 652, 2, 651, -565, 654,
	-350, -350, 201, -638, -350, 547, -572, 126, 194, 228,
	228, -321, -321, -248, -562, 546, 474, -287, 417, -475,
	163, 163, -597, 99, -599, 81, 180, 109, 356, 363,
	582, 417, 77, 134, 374, 436, -702, -703, -704, 39,
	625, 626, 654, -401, -512, -610, 653, -304, -401, -403,
	356, 533, 134, 374, 356, 134, 374, 608, 126, 2,
	576, 84, -321, -329, -246, -403, -403, -335, -345, -570,
	171, 654, 658, 635, 2, 645, 645, -345, -570, -340,
	-345, -570, -338, 163, 598, -287, -287, 598, 392, 178,
	562, -146, -484, 171, 654, -319, 5, 5, 163, -316,
	81, -321, 5, -321, -339, 126, 614, 485, 562, 562,
	374, 374, 377, -660, -661, -235, 658, 653, 635, 635,
	635, 635, 635, -235, -575, -142, 2, 464, -673, -484,
	-484, -676, -676, -383, 250, -321, -594, -591, -592, 417,
	-476, -598, -600, 180, 417, -371, 653, -320, -305, 653,
	-146, 2, -249, 653, -369, 378, 652, 201, 654, -570,
	-436, -146, -340, -393, -391, 614, -393, 654, 658, 157,
	-458, 593, -319, -335, 163, -285, 285, -712, -569, -282,
	-462, -460, 148, 653, 374, -146, -399, 635, 654, 126,
	654, -239, -240, -574, -142, -574, -574, -574, -142, -574,
	-238, -666, 39, -528, -75, -76, 248, 99, 399, -232,
	-332, 546, 248, 653, 653, -269, -484, -484, -484, 654,
	-399, -565, 645, -619, 394, 654, -511, -484, -484, -485,
	201, 653, -495, 654, -620, 613, -484, -427, -428, -484,
	472, 115, 221, -620, -620, 654, -561, -561, 2, -574,
	2, 2, 363, 2, 2, 2, 562, 562, 651, 2,
	201, 201, -572, 201, 201, 239, -146, 239, 39, 439,
	-475, -329, -329, -333, -326, 180, 231, 363, 608, -457,
	277, 653, -485, 586, -335, 653, 2, 230, 230, 31,
	64, -705, 139, 252, 654, 658, -513, -315, -304, -484,
	-513, 654, 654, 363, 586, 363, 608, -484, 586, -535,
	653, -280, -280, 654, 654, -484, 562, -564, 106, -562,
	2, -649, -287, -403, -403, -318, -484, 194, -484, 562,
	5, -280, -333, -280, -280, -316, 576, 373, -345, -570,
	-340, -665, 547, 494, 577, 486, 204, 473, -665, 194,
	-236, -237, -574, -484, 573, 179, -142, -142, -235, -668,
	501, -377, -378, 2, -596, 277, -326, 277, 241, 162,
	-401, 653, 653, -403, -701, 614, 654, -367, -250, -97,
	-98, 563, -527, -639, -357, -393, 39, 340, 126, 39,
	5, 653, 653, -304, 374, 653, -319, -299, 98, -712,
	-569, -283, -432, 357, -403, 99, -462, -491, -232, 653,
	-232, 654, 552, -238, 658, 29, 653, 29, 653, -335,
	-360, -413, -413, 654, -399, 64, 658, 654, 654, -485,
	-495, 654, -621, -622, -324, 658, 653, 653, 502, 652,
	652, 2, -572, -572, 2, -572, -572, -572, -572, 485,
	-287, 417, -304, -590, -599, -326, 356, -251, 593, 614,
	-484, -485, -306, 653, -484, 653, 653, 39, 134, 252,
	140, 236, -474, -706, 108, 534, 240, -512, -269, 654,
	-473, 593, 436, -485, -316, -401, 653, 653, 653, 635,
	201, -146, 653, -539, -280, -339, 635, 562, 2, 2,
	201, -642, 654, -655, 434, -675, -676, -250, 653, -251,
	-372, 86, 100, 135, 230, 205, 249, 525, 531, 29,
	-372, 654, -401, -401, 654, -373, 374, 126, 340, 654,
	39, -98, 9, -478, 39, -146, 126, -146, -533, -401,
	-335, -401, 374, -289, -288, 295, -569, -284, 654, -329,
	-432, -575, -561, 4, -76, -403, -403, 654, 654, -626,
	427, 475, 222, -413, -400, 654, 658, 39, -428, 2,
	2, 2, -662, -662, -350, 439, -281, 163, 224, 654,
	-601, 310, -304, 654, -436, -436, 39, 140, 236, -379,
	-375, 653, -270, -513, -251, 224, -335, -650, 593, 654,
	-385, -384, -381, -387, -386, -381, -413, -562, 106, 392,
	-413, -316, -142, -572, -572, 374, -657, 202, -656, -677,
	-678, -679, 39, 281, 569, 613, -680, 66, 464, 529,
	237, 522, 609, 175, 491, 290, 356, 107, 475, 537,
	500, 391, -373, -402, -514, -321, -473, 654, 654, 87,
	126, -383, -146, -146, 2, -391, 654, 654, -458, 654,
	-335, -286, -576, 439, 441, -712, -285, -478, 148, 654,
	654, 654, 654, -627, -628, 54, 579, 116, -484, -627,
	-627, -622, -624, 201, 180, -472, 623, -602, -605, -604,
	630, 508, 202, 393, 654, 533, 607, 654, 654, -705,
	-403, -472, -393, -484, -473, 654, 658, 598, 654, 658,
	598, 654, 201, 654, -280, -662, -280, -665, -234, 614,
	49, -686, -683, 53, 463, -679, -670, 5, -569, 374,
	363, 491, 136, 265, 290, -506, -506, -304, -298, -297,
	654, 658, -474, -473, -379, 416, 141, 151, -377, -701,
	-473, 653, -474, 653, -296, -295, -712, -555, -299, 148,
	357, 586, -232, -629, 161, -628, 413, 193, 474, 413,
	193, -629, -629, -572, -326, -251, 59, -604, 630, -605,
	630, 586, 141, -478, 654, -601, -251, -384, 239, -386,
	201, 392, 201, 482, -656, 31, 44, -484, 363, 374,
	136, 265, -251, -514, -379, -474, -251, 475, 475, 2,
	-250, -373, -474, -401, -379, -401, -292, -293, -294, -403,
	-289, 357, 586, 500, 116, 220, 557, 340, 34, 635,
	-603, 340, 459, 69, 500, -603, -602, 653, 653, -572,
	378, -685, 255, 363, -251, -379, -478, 2, -373, -379,
	654, -251, 654, -571, 389, -286, 500, -422, 474, 382,
	-628, -484, 24, 363, 134, -705, -413, -413, -280, -231,
	653, -684, 156, -3, -683, 255, -478, -251, -459, 356,
	608, -298, -251, -473, -478, -474, -291, -290, 490, -712,
	-296, -422, -478, 654, 654, -231, 659, -459, -478, 608,
	-478, -474, -459, -379, -570, -292, -478, -374, -375, 562,
	654, -459, -459, -379, -251, -291, 653, -251, -478, -413,
	-478, -459, 654, -459, -374,
}

var sqlDef = [...]int16{
	-2, -2, 1, 2, 3, 4, 6, 7, 9, 10,
	11, 13, 15, 17, 19, 21, 23, 25, 27, 29,
	31, 33, 34, 35, 37, 39, 41, 43, 1675, 1677,
	669, 670, 672, 673, 674, 676, 677, 679, 681, 683,
	684, 685, 687, 688, 690, 691, 692, 693, 694, 696,
	698, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, -2, 0, 0, 789, 791, 0, 1657,
	1659, 1661, 1663, 0, 0, -2, -2, 0, -2, -2,
	44, 45, 47, 49, 0, -2, 389, 391, 393, 395,
	0, 427, 429, 430, 432, 434, 435, 437, 439, -2,
	0, 600, 601, 603, 605, 607, -2, 0, 1233, 1235,
	1237, 0, 777, 779, 0, 1240, 1242, 1244, 0, 0,
	801, 802, 0, 1778, -2, 793, 795, 797, 799, 878,
	880, 882, 884, 886, 888, 890, 892, 894, 896, 897,
	899, 901, 903, 905, 907, 908, 910, 912, 914, 915,
	917, 918, 920, 922, 924, 926, 928, 930, 932, 934,
	936, 938, 940, 942, 944, 946, -2, 949, 950, 951,
	953, -2, 0, -2, -2, 1671, 51, 53, 55, 57,
	59, 61, 63, 65, 67, 69, 71, 73, 546, 548,
	550, 552, 554, 557, 559, 561, 563, 1836, 609, 611,
	613, 615, 617, 619, 621, 0, 0, -2, 1850, 0,
	0, 0, 1042, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 133, 134, 135, 136, 137, 138, 139,
	88, 89, 90, 92, 93, 94, 95, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 130, 131, 86, 0, 0, 1809, 1811, 1813,
	1815, -2, 0, 0, 8, 12, 14, 16, 18, 20,
	22, 24, 26, 28, 30, 32, 36, 38, 40, 42,
	1676, 1678, 671, 675, 678, 680, 682, 686, 689, 695,
	697, 699, 654, 655, 658, 2552, 2570, 2571, 2572, 2575,
	2576, 2577, 2578, 2579, 2580, 3105, 3186, 3187, 2603, 2604,
	2605, 2606, 2607, 2608, 2609, 2610, 2611, 2612, 2613, 2614,
	2615, 2616, 2617, 2618, 2619, 2620, 2621, 2622, 2623, 2624,
	2625, 2626, 2627, 2628, 2629, 2630, 2631, 2632, 2633, 2634,
	2635, 2636, 2637, 2638, 2639, 2640, 2641, 2642, 2643, 2644,
	2645, 2646, 2647, 2648, 2649, 2650, 2651, 2652, 2653, 2654,
	2655, 2656, 2657, 2658, 2659, 2660, 2661, 2662, 2663, 2664,
	2665, 2666, 2667, 2668, 2669, 2670, 2671, 2672, 2673, 2674,
	2675, 2676, 2677, 2678, 2679, 2680, 2681, 2682, 2683, 2684,
	2685, 2686, 2687, 2688, 2689, 2690, 2691, 2692, 2693, 2694,
	2695, 2696, 2697, 2698, 2699, 2700, 2701, 2702, 2703, 2704,
	2705, 2706, 2707, 2708, 2709, 2710, 2711, 2712, 2713, 2714,
	2715, 2716, 2717, 2718, 2719, 2720, 2721, 2722, 2723, 2724,
	2725, 2726, 2727, 2728, 2729, 2730, 2731, 2732, 2733, 2734,
	2735, 2736, 2737, 2738, 2739, 2740, 2741, 2742, 2743, 2744,
	2745, 2746, 2747, 2748, 2749, 2750, 2751, 2752, 2753, 2754,
	2755, 2756, 2757, 2758, 2759, 2760, 2761, 2762, 2763, 2764,
	2765, 2766, 2767, 2768, 2769, 2770, 2771, 2772, 2773, 2774,
	2775, 2776, 2777, 2778, 2779, 2780, 2781, 2782, 2783, 2784,
	2785, 2786, 2787, 2788, 2789, 2790, 2791, 2792, 2793, 2794,
	2795, 2796, 2797, 2798, 2799, 2800, 2801, 2802, 2803, 2804,
	2805, 2806, 2807, 2808, 2809, 2810, 2811, 2812, 2813, 2814,
	2815, 2816, 2817, 2818, 2819, 2820, 2821, 2822, 2823, 2824,
	2825, 2826, 2827, 2828, 2829, 2830, 2831, 2832, 2833, 2834,
	2835, 2836, 2837, 2838, 2839, 2840, 2841, 2842, 2843, 2844,
	2845, 2846, 2847, 2848, 2849, 2850, 2851, 2852, 2853, 2854,
	2855, 2856, 2857, 2858, 2859, 2860, 2861, 2862, 2863, 2864,
	2865, 2866, 2867, 2868, 2869, 2870, 2871, 2872, 2873, 2874,
	2875, 2876, 2877, 2878, 2879, 2880, 2881, 2882, 2883, 2884,
	2885, 2886, 2887, 2888, 2889, 2890, 2891, 2892, 2893, 2894,
	2895, 2896, 2897, 2898, 2899, 2900, 2901, 2902, 2903, 2904,
	2905, 2906, 2907, 2908, 2909, 2910, 2911, 2912, 2913, 2914,
	2915, 2916, 2917, 2918, 2919, 2920, 2921, 2922, 2923, 2924,
	2925, 2926, 2927, 2928, 2929, 2930, 2931, 2932, 2933, 2934,
	2935, 2936, 2937, 2938, 2939, 2940, 2941, 2942, 2943, 2944,
	2945, 2946, 2947, 2948, 2949, 2950, 2951, 2952, 2953, 2954,
	2955, 2956, 2957, 2958, 2959, 2960, 2961, 2962, 2963, 2964,
	2965, 2966, 2967, 2968, 2969, 2970, 2971, 2972, 2973, 2974,
	2975, 2976, 2977, 2978, 2979, 2980, 2981, 2982, 2983, 2984,
	2985, 2986, 2987, 2988, 2989, 2990, 2991, 2992, 2993, 2994,
	2995, 2996, 2997, 2998, 2999, 3000, 3001, 3002, 3003, 3004,
	3005, 3006, 3007, 3008, 3009, 3010, 3011, 3012, 3031, 3032,
	3033, 3034, 3035, 3036, 3037, 3038, 3039, 3040, 3041, 3042,
	3043, 3044, 3045, 3046, 3047, 3048, 3049, 3050, 3051, 3052,
	3053, 3054, 3055, 3056, 3057, 3058, 3059, 3060, 3061, 3062,
	3063, 3064, 3065, 3066, 3067, 3068, 3069, 3070, 3071, 3072,
	3073, 3074, 3075, 3076, 3077, 3078, 3079, 3080, 3081, 3082,
	3083, 3084, 656, 657, 1427, 0, 738, 736, 2535, 739,
	2860, 741, 743, 594, 595, 596, 597, 598, 599, 0,
	770, 2964, 753, 1848, 771, 773, 774, 775, 776, 733,
	731, 0, 775, 770, 2608, 2964, 768, 1655, 1656, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 608, 0,
	0, 0, 0, -2, 0, 0, 0, 0, 0, 0,
	0, 525, 1490, 1491, 1492, 1640, 1641, 2915, 1686, 0,
	265, 790, -2, -2, 3069, -2, 832, 833, -2, -2,
	847, 851, 842, 3074, 0, 2918, 2901, -2, 854, 1658,
	1660, 1662, 954, 955, 956, 2556, 960, 958, 970, 971,
	974, 0, 991, -2, 0, 2604, 2883, -2, -2, 992,
	993, -2, -2, -2, -2, 972, 973, 0, 0, 0,
	0, 0, 1688, 1680, 1683, 1681, 1682, 46, 48, 50,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 273, 275, -2, -2, -2, -2, 0, 0,
	2970, 2666, 2503, 2572, 2506, 2501, 390, 392, 394, 396,
	397, 0, 0, 0, 0, 0, 0, 0, 428, 431,
	433, 436, 438, -2, 0, 440, 0, 524, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 589, -2, -2, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1307, 1299, 1300, 1557,
	0, 0, 0, -2, 602, 604, 606, 659, 660, 0,
	1837, 1837, 667, 668, -2, 0, 0, 0, 0, 351,
	341, 1234, 1236, 1238, 1239, 0, 0, 0, 0, 0,
	778, 780, 0, 0, 2964, 315, 1241, 1243, 1245, 1246,
	0, 0, 0, 0, 0, 0, 353, 0, 0, 794,
	796, 798, 800, 879, 881, 883, 885, 887, 889, 891,
	893, 895, 898, 900, 902, 904, 906, 909, 911, 913,
	916, 919, 921, 923, 925, 927, 929, 931, 933, 935,
	937, 939, 941, 943, 945, 947, 948, 999, 0, 0,
	0, 0, -2, -2, -2, 0, 0, 0, -2, 0,
	-2, -2, -2, 0, 0, 0, 0, 0, 0, 0,
	-2, 0, 0, 1111, 0, 0, 0, -2, -2, -2,
	0, 0, 0, 0, 0, 0, 0, -2, -2, 0,
	0, 0, 0, -2, 0, 1204, 0, 0, 1002, 1005,
	1006, 1007, 1008, 1009, 1010, 1011, 0, 1084, 1109, 1110,
	1120, 952, 0, 1470, 1838, 1688, 1665, 1666, 1667, 1672,
	1674, 1668, 1669, 1670, 52, 54, 56, 58, 60, 62,
	64, 66, 68, 70, 72, 74, 547, 549, 551, 553,
	555, 558, 560, 562, -2, 1807, 1808, 610, 612, 614,
	616, 618, 620, 622, 781, 0, 784, 0, 1004, 783,
	-2, 0, 1842, 1842, 1842, 0, 0, 1808, 1806, 0,
	0, 0, 787, 788, 858, 859, 2115, 0, 0, 0,
	0, 0, 0, 0, 0, 2375, 2203, 0, 860, -2,
	2236, 2238, 3043, 2832, 3069, 2374, 2240, 2241, 2242, 2243,
	2244, 0, 2246, 2247, 2248, 2249, 2250, 2251, 0, 2253,
	0, 2258, 2259, 2260, 0, 3050, 2478, 2566, -2, 0,
	0, 3057, 2562, 0, 2341, 2276, -2, -2, 2589, 2568,
	2047, 2048, 2049, 2050, 2051, -2, -2, 3088, 2280, 2281,
	2282, 2283, 2284, 2285, 2286, 2287, 2288, 2289, 2290, 0,
	3031, 3051, 3052, 3058, 3060, 3053, 3040, 2301, 2681, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, 2074, 2083, -2, -2, -2, -2, -2, -2,
	-2, 3044, 3045, 3063, 3066, 3073, 3078, 3079, 3049, 3059,
	3087, 3089, 3090, 3091, 3092, 3093, 3094, 3095, 3096, 3097,
	3098, 3099, 3100, 3101, 3102, 3103, 3104, 2075, -2, -2,
	-2, -2, 0, 1825, 2876, 1828, 1427, 1826, 1810, 1812,
	0, 1814, 0, 0, 0, 1819, 1845, 1843, 0, 1894,
	1823, 1824, 1917, 1917, 1941, 0, 1922, 0, 1941, 1837,
	1968, 0, 1928, 2906, 2277, 2278, 0, 2572, 2567, -2,
	-2, 3085, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 734, 0, 740, 742, 0, 0, 0,
	0, 770, 769, 1847, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 528, 529, 530, 531, 532, 3051,
	0, 0, 0, 537, 0, 539, 540, 541, 542, 543,
	544, 545, 235, 3051, 627, 652, 0, 235, 3051, 630,
	235, 3051, 633, 0, 636, 1555, 235, 3051, 639, 2531,
	235, 3051, 642, 644, 2539, 235, 3051, 648, 2546, 2544,
	649, 0, 651, 255, 251, 252, 253, 254, 1651, 1652,
	1653, 1654, 0, 1685, 1556, 792, 0, 818, 0, 830,
	831, 3039, -2, 0, 2929, 835, 836, -2, 838, 1689,
	1693, 1694, 1695, 1696, 1697, 0, 0, 0, 0, 1702,
	0, 0, 0, 0, 825, 826, 845, 846, 852, 855,
	0, 963, 959, 975, 0, 990, 0, 991, 991, 2520,
	2511, 2512, 0, 0, 991, 991, 0, 0, 994, 995,
	996, 997, 998, 1679, -2, 85, 0, 3051, 1968, 87,
	0, 2525, 2598, 2599, 2600, 2601, 2602, 3086, 3106, 3107,
	3108, 3109, 3110, 3111, 3112, 3113, 3114, 3115, 3116, 3117,
	3118, 3119, 3120, 3121, 3122, 3123, 3124, 3125, 3126, 3127,
	3128, 3129, 3130, 3131, 3132, 3133, 3134, 3135, 3136, 3137,
	3138, 3139, 3140, 3141, 3142, 3143, 3144, 3145, 3146, 3147,
	3148, 3149, 3150, 3151, 3152, 3153, 3154, 3155, 3156, 3157,
	3158, 3159, 3160, 3161, 3162, 3163, 3164, 3165, 3166, 3167,
	3168, 3169, 3170, 3171, 3172, 3173, 3174, 3175, 3176, 3177,
	3178, 3179, 3180, 3181, 3182, 3183, 3184, 3185, 3088, 91,
	0, 3051, 96, 0, 3051, 0, -2, 114, 0, 132,
	0, 159, -2, -2, -2, 140, 0, 3051, 0, 2500,
	-2, 0, 247, 342, 343, 344, 0, 715, 0, 724,
	354, 355, 2585, 2586, 2594, 2595, 2596, 2597, 0, 821,
	2375, 0, 0, 1271, -2, 0, 1483, 1485, 1485, 0,
	-2, 0, 0, 0, 1222, 2497, 2502, 1223, 1224, 2521,
	1225, 2507, 0, 398, 399, 400, 401, 402, 0, 403,
	3051, 405, 406, 0, 408, 409, 3051, 411, 412, 0,
	414, 0, 416, 0, 290, 296, 294, 3051, 0, 3051,
	442, 445, 0, 526, 0, 523, 0, 507, 508, 0,
	510, 0, 0, 0, 515, 516, 518, 519, 520, 521,
	522, 0, 567, 565, 2536, 585, 368, 0, -2, 3051,
	0, 1268, 0, 0, 1535, -2, 0, 1476, -2, 0,
	1542, 3051, 1538, 0, -2, 0, 1835, 3051, 1706, 1303,
	1304, 1305, 1306, 1980, 591, 0, 1742, 0, 1744, 0,
	1764, 1974, 1917, 0, 0, 1979, 0, -2, 712, 2555,
	-2, 662, 0, 663, 0, -2, 0, 368, 0, 0,
	1249, 1251, 1252, 1254, 1255, 1258, 1259, 1260, 1261, 0,
	1263, 1954, 316, 318, 0, 0, 0, 0, 1248, 1642,
	1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 0, 585,
	803, 0, 0, 1000, 1001, 0, 0, 1019, 1020, 1021,
	0, 0, 368, -2, -2, -2, 1029, 0, 1036, 1039,
	-2, 0, 0, 0, 0, 1046, 0, 1051, 1052, 1053,
	0, -2, 0, 1060, 1062, 1232, 1064, 0, 0, 1066,
	0, 1070, 0, 1073, 0, 1075, 0, 1077, -2, -2,
	-2, 1085, 1086, -2, 1091, -2, 0, 1095, -2, 0,
	1098, 0, 1101, -2, 0, 1111, 1107, 1108, 0, 0,
	0, 0, 1128, 1129, 0, 1138, 0, 1141, 1142, 1143,
	0, 0, 1148, 1149, 0, 1151, 1152, 1153, 1155, 1156,
	1157, 0, 3001, 2926, 2666, 2713, 0, 1166, -2, 1172,
	1174, 0, -2, 0, 1190, 0, 1194, 0, 0, 1203,
	0, 0, 0, 1003, 0, 1012, 1013, 1014, 235, 1972,
	1664, 0, -2, 0, 782, 0, 786, 1867, 1793, 1790,
	0, 1864, 1865, 1794, 0, 0, 0, 1801, 0, 1840,
	1841, 0, 0, 0, 1780, 1781, 0, 0, 0, 0,
	0, 0, 2380, 2381, 2382, 2383, 2396, 2384, 2385, 2395,
	2393, 2394, 2386, 2387, 2392, 2406, 2407, 2397, 2398, 2388,
	2401, 2399, 2400, 2402, 2403, 2404, 2405, 0, 0, 2411,
	0, 2389, 2390, 2391, 2419, 0, 0, 2420, 0, 2422,
	0, 2412, 2408, 2409, 2410, 0, 2182, 2184, 2486, 0,
	0, 0, 2418, 2413, 2414, 2120, 2121, 2122, 2123, 2124,
	2157, 2161, 2162, 0, 0, 2237, 2483, 2482, 2239, 0,
	0, 2434, 0, 2252, -2, 0, 2375, 2429, 0, 0,
	2261, 2262, 2263, 0, 0, 2434, 0, 0, 2477, 2273,
	2274, 2112, 0, 0, 2343, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2061, 2060, 0, 2062, 0, 2063, 2064,
	2071, 2084, 0, 0, 0, 0, 2088, 0, 0, 0,
	0, 0, 0, 0, 2458, -2, 0, 0, 0, 0,
	2076, 0, 0, 1827, 0, 0, 1898, 2487, 2491, 2492,
	1898, 1898, 0, 0, 2435, 1965, 1965, 0, 0, 1960,
	1960, 1960, 1958, 1941, 0, 1941, 1951, 0, 1941, 1941,
	0, -2, 1922, 0, 0, 1951, 0, 1935, 700, 702,
	704, 706, 707, 708, 710, 1969, 1970, 0, 0, 0,
	0, 2573, 0, 0, 0, 0, 0, 0, 2558, 0,
	0, 2530, 423, 424, 0, 0, 0, 2983, 2918, 0,
	-2, -2, -2, -2, 2926, 0, 0, 2666, 745, 772,
	0, 1837, 0, 2437, 1995, 1999, 0, 2001, 2002, 2003,
	2004, 2005, 0, 0, 1996, -2, 2072, 2074, 2095, 2590,
	2591, 2592, 2055, 2056, 2057, 2058, 2059, 2067, 2054, 2054,
	2054, 2065, 2094, 2086, 2094, 2090, 2040, 2041, 2042, 2077,
	2078, 2079, 2080, 0, 2983, 2918, 0, -2, 0, 756,
	0, 0, 0, 1775, 306, 307, 527, 0, 534, 535,
	536, 0, 623, 0, 233, 234, 0, 235, 3051, 628,
	0, 631, 0, 235, 3051, 2495, 637, 0, 640, 0,
	0, 646, 0, 0, 0, 0, 0, 235, 1777, 0,
	0, 0, 0, -2, 840, 848, 849, 850, 0, 1691,
	0, 1698, 869, 870, 871, 1700, 1701, 0, 1703, 843,
	872, 873, 874, 875, 876, 877, 0, 2509, 2510, 2515,
	2516, 0, 0, 841, 862, 844, 0, 856, 966, 961,
	962, 976, 977, 0, 0, 2513, 2514, 0, 0, 982,
	983, 141, 1637, 0, 0, 188, 0, 1637, 1637, 0,
	0, 0, 0, 216, 0, 0, 1337, 0, 0, 0,
	0, 159, 173, 184, 153, 154, 155, 0, 0, 0,
	0, 0, 0, 97, 1449, 0, 1452, 0, 0, 0,
	0, 0, 0, 0, 1465, 1468, 0, 0, 0, 0,
	0, 116, 117, 0, 0, 122, 123, 0, 0, 172,
	0, 0, 0, 0, 0, 0, 1739, 0, 163, 159,
	0, 0, 158, 160, 143, 0, 0, 159, 174, 186,
	0, 222, 224, 1334, 0, 0, 0, 0, 0, 0,
	0, 0, 246, 257, 0, 714, 716, 585, 585, 0,
	0, 722, 0, 725, 0, 819, 823, 824, 0, 0,
	820, 822, 0, 0, 1477, 0, 0, 0, 1834, 0,
	0, 0, 0, 3051, 1635, 0, 1618, 0, 1954, 2760,
	-2, -2, 316, 1954, 1221, 0, 0, 2573, 2505, 0,
	0, 0, 0, 0, 0, 415, 0, 0, 0, 305,
	0, 0, 0, 451, 0, 517, 506, 509, 511, 512,
	513, 556, 1396, 3051, 0, 0, 589, 580, 0, 584,
	0, 0, 588, 0, 0, 1448, 3051, 1446, 2540, 0,
	1474, 0, 1534, 1427, 3051, 2538, 0, 0, 0, 1543,
	2582, 1552, 1556, 1727, 0, 593, 0, 1745, 1747, 0,
	0, 1975, 0, 1977, 1917, 1837, 0, 0, 0, 0,
	346, 0, 0, 0, 0, 0, 1262, 325, 0, 1953,
	0, 0, 356, 1954, 316, 2889, 0, 1247, 368, 368,
	1954, 805, 1954, 807, 0, 0, 1022, 0, 0, 1025,
	368, 368, 368, 1034, 1035, 1037, 1038, -2, -2, -2,
	-2, 1040, 1041, 1135, 0, 0, 0, 1134, 1633, 0,
	1056, 1059, 1063, 0, 1207, 2901, 2918, 2983, 1230, 1135,
	2666, 1135, 2666, 1135, 2666, 1135, 1135, 1079, 1123, 1131,
	1090, 1097, 0, 1092, 1096, 1099, 1102, 0, 1104, 1112,
	0, -2, 0, 1115, 0, 1117, 0, 1119, 1135, 1136,
	1139, 0, 1147, 1150, 0, 1158, 1159, 1160, 1161, 2553,
	1162, 1163, 1164, 1165, -2, 1169, 1170, 0, 1181, 1186,
	1187, 1183, 0, 0, 0, 0, 0, 0, 1197, 1198,
	0, 0, 0, 1206, 0, 1015, 1469, 0, 1673, 1867,
	1793, 785, 1784, 1866, 1785, 1792, 1795, 0, 0, 1797,
	0, 1799, 0, 1862, 1863, 1870, 1871, 0, 1881, 1882,
	1874, 0, -2, 0, 0, 1877, 1878, 1803, 0, 1820,
	1821, 1822, 1851, 1854, 1571, 0, 3186, 828, 0, 2116,
	1990, 2117, 2118, 2524, 0, 2125, 2126, 2127, 2128, 2129,
	2130, 2131, 2132, 2133, 2134, -2, -2, -2, -2, -2,
	-2, -2, -2, 2143, 2144, 2145, 2146, 2147, 2148, 2149,
	2150, 2151, 2152, 2153, -2, -2, -2, 2158, 2159, 2160,
	-2, 2421, 2423, 0, 2486, 0, -2, 0, -2, -2,
	-2, -2, 2179, 0, 2181, 2186, 2188, 2190, 0, 0,
	0, 0, 2485, 2200, 2469, 2470, 0, 0, 2377, 2378,
	2379, 2185, 0, 2204, 2484, 2481, 0, 0, 2415, 0,
	2380, 2381, 2382, 2383, 2384, 2385, 2386, 2387, 2388, 2389,
	2390, 2391, 2392, 2393, 2394, 2395, 2396, 2397, 2398, 2399,
	2400, 2401, 2402, 2403, 2404, 2405, 2406, 2407, 2408, 2409,
	2410, 2411, 2412, 0, 2433, 1850, 2265, 0, 0, 0,
	0, 2272, 2257, 2431, 0, 2430, 0, 0, 0, 2441,
	0, 2476, 2472, 0, 2522, 2111, 2098, 2099, 2100, 2101,
	2102, 2103, 2113, 0, 2519, 2559, 2565, 2351, 0, 0,
	0, 2302, 2303, 2304, 2305, 2306, 0, 2308, 2309, 0,
	2311, 2312, 0, 2314, 2315, 0, 2317, 2318, 2319, 2320,
	2321, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2008, 2009,
	2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019,
	2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029,
	2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039,
	0, 0, 2323, 0, 2444, -2, -2, -2, -2, -2,
	-2, -2, -2, 0, 2325, 0, 2327, 2435, 2455, 0,
	0, 2205, 0, 0, 0, 0, 0, 2330, 2435, 2463,
	0, 0, 0, 0, 0, 2435, 0, 2468, 0, 2337,
	0, 2339, 1043, 1044, 1829, 0, 0, 1985, 0, 0,
	0, 2490, 2493, 2494, 3013, 3014, 3015, 3016, 3017, 3018,
	3019, 3020, 3021, 3022, 3023, 3024, 3025, 3026, 3027, 3028,
	3029, 3030, 1985, 1985, 0, 1893, 0, 0, 1961, 1962,
	1963, 1964, 0, 0, 1965, 0, 1955, 1959, 1956, 1957,
	1951, 1914, 0, 0, 2526, 1951, 1920, 1950, 0, 1427,
	1940, 1951, 1951, 0, -2, 1924, 1941, 0, 0, 701,
	703, 705, 709, 711, 0, 0, 1850, -2, 0, -2,
	370, 1426, 0, 0, 0, 0, 0, 0, 735, 737,
	0, 0, 643, 0, 0, 0, 1213, 0, 1215, 1216,
	0, 1621, 729, 0, 732, 0, 1986, 1989, 0, 0,
	2000, 2006, 2007, 0, -2, 0, 0, 2096, 0, 0,
	0, 0, 0, 0, 767, 0, 2964, 0, 765, 0,
	0, 538, 653, 235, 625, 0, 235, 235, 634, 0,
	0, 235, 645, 235, 2547, 235, 2545, 256, 650, 1776,
	268, 0, 827, 0, 1690, 1699, 0, 866, 0, 868,
	0, 2517, 2518, 0, 857, 0, 964, 0, 978, 979,
	980, 981, 0, 0, 0, 0, 1636, 0, 0, 1581,
	0, 0, 192, 3051, 0, 237, 0, 0, 1389, 2532,
	0, 1379, 0, 0, 2689, 0, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 150, 0, 156, 157, 0, 0, 0, 0, 0,
	0, 0, 0, 1450, 1451, 1453, 1460, 1462, 0, 1456,
	1457, 0, 1459, 1461, 1463, 0, 1466, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 124,
	128, 1486, 2924, 0, 0, 0, 1487, 1488, 1489, 1715,
	1716, 0, 1738, 1739, 0, 0, 0, 0, 0, 0,
	0, 152, 0, 0, 0, 0, 2499, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 717, 368,
	719, 720, 364, 361, 363, 721, 726, 0, 727, 0,
	0, 0, 0, 1479, 0, 1530, 1528, 1502, 1503, 1504,
	1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514,
	1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524,
	1525, 1526, 1527, 0, 0, 0, 0, -2, 1481, 1482,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 278,
	0, 359, 2498, 2508, 0, 1256, 1257, 404, 407, 410,
	413, 274, 0, 0, 0, 444, 453, 0, 1309, 1281,
	0, 0, 566, 368, 585, 587, 0, 366, 2835, 2551,
	1266, 1444, 1447, 0, 1427, 3051, 1498, 0, 0, 0,
	0, 0, 0, 0, 1541, 0, 0, 3051, 2527, 2581,
	2582, 1729, 1739, 0, 1985, 0, 1762, 1748, 0, 0,
	0, 1762, 1766, 1767, 1769, 1770, 0, 0, 1976, 1982,
	661, 713, 1837, 1837, 368, 0, 0, 1751, 1753, 0,
	0, 0, 308, 0, 319, 1954, 317, 0, 325, 0,
	0, 1954, 316, 0, 579, 804, 809, 1017, 0, 0,
	368, 1026, 1027, 1028, 1081, 1125, 1133, 1185, 1045, 1047,
	1048, 1049, 0, 1054, 0, 0, 0, 1231, 1226, 1227,
	1228, 2548, 2544, 1229, 1065, 1135, 1068, 1135, 1071, 1135,
	1074, 1076, 1094, 1100, 1113, 1106, 1114, 0, 0, 0,
	1127, 0, 1145, 0, 1154, 1168, 0, 0, 0, 0,
	0, 0, 0, 1191, 1192, 1193, 1195, 1200, 1199, 0,
	1205, 1016, 1973, 1788, 1789, 1791, 0, 1800, 0, 0,
	1876, -2, -2, 1875, 1879, 1880, -2, -2, -2, -2,
	1796, 0, 1805, 1802, 0, 1861, 1569, 1570, 0, 0,
	829, 0, 0, -2, -2, 0, 0, 0, 2201, 0,
	-2, 2180, 2183, 2187, 2189, 2191, 0, 0, 0, 0,
	0, 0, 2424, 0, 2426, 2202, 2479, 2482, 2417, 0,
	2373, 0, 0, 1849, 1850, 1850, 0, 2271, 0, 2432,
	0, 2439, 2440, 0, 2264, 0, 2473, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2275, 0, 0, 0,
	0, 2307, 2310, 2313, 2316, 0, 0, 0, 0, 2296,
	0, 0, 0, 2300, 2066, 2052, 0, 2094, 2092, 2093,
	2087, 2094, 2091, 2044, 0, 2043, 0, 2322, 0, 2324,
	2326, 0, 0, 2328, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2208, 2209,
	2210, 2230, 2329, 2461, 2462, 0, 0, 0, 0, 0,
	0, 2335, 0, 2467, 2336, 2338, 1837, 0, 1830, 0,
	1895, 1884, 1984, 0, 2488, 1954, 1897, 1899, 2489, 2529,
	1884, 1884, 0, 2436, 0, 0, 1945, 0, 0, 0,
	1947, 1918, 0, 0, 1912, 0, 1903, 1904, 1905, 1906,
	1907, 1908, 1909, 1919, 1427, 1949, 1921, 1925, 2559, 0,
	1951, 0, 1936, 0, 1938, 1971, 0, 1930, 1933, 0,
	0, 2574, 1985, 0, 417, 425, 426, 418, 419, 420,
	421, 0, 1621, 0, 0, 0, 0, 1214, 0, 752,
	0, 0, 2438, 0, 1991, 0, 1997, 0, 0, 0,
	0, 754, 0, 0, 0, 0, 0, 0, 0, 1774,
	533, 624, 235, 629, 632, 2496, 235, 638, 641, 647,
	264, 0, 817, -2, 864, 865, 867, 0, 863, 969,
	965, 189, 1637, 0, 0, 0, 1577, 0, 1292, 0,
	1287, 1288, 1579, 2543, 1583, 1589, 1592, 0, 194, 3051,
	206, 0, 3051, 0, 1353, 0, 0, 0, 0, 0,
	0, 1639, 0, 0, 3051, 235, 3051, 235, 210, 212,
	215, 0, 221, 217, 0, 1289, 0, 1341, 0, 0,
	1344, 142, 1637, 0, 0, 145, 149, 161, 0, 0,
	0, 171, 0, 0, 0, 1594, 1598, 1606, 0, 0,
	0, 1454, 1455, 1458, 1464, 1467, 98, 0, 0, 0,
	1602, 1604, 1610, 115, 118, 3051, 2541, 0, 120, 3051,
	0, 129, 1739, 0, 0, 1576, 0, 0, 0, 0,
	0, 0, 0, 0, 223, 147, 151, 162, 0, 1612,
	144, 0, 250, 0, 0, 240, 235, 3051, 0, 242,
	0, 243, 244, 258, 0, 0, 0, 718, 0, 0,
	0, 723, 0, 1269, 1270, 1529, 0, 1472, 1473, 291,
	292, 0, 1484, 1478, 0, 0, 0, 0, 0, 1614,
	1615, 0, 0, 0, 1635, 1630, 1954, 270, 0, 1954,
	278, 0, 2504, 0, 295, 304, 441, 0, 452, 454,
	456, 0, 0, 463, 464, 465, 466, 468, 2593, 469,
	-2, -2, 0, 0, 0, 1308, 1407, 1310, 1312, 1313,
	1314, 237, 0, 2582, 1379, 2748, 2582, 0, 0, 1276,
	0, 0, 0, 572, 568, 0, 577, 581, 582, 0,
	0, 0, -2, 0, 0, 0, 0, -2, 0, 0,
	0, 1545, 1539, 1540, 0, 0, 0, 0, 3051, 1731,
	1739, 0, 1835, 1850, 592, 1740, 1762, 0, 0, 0,
	1750, 1746, 1743, 1985, 0, 0, 0, 0, 0, 1978,
	1981, 664, 665, 345, 0, 368, 0, 0, 0, 0,
	0, 0, 323, 0, 326, 0, 0, 0, 331, 332,
	333, 334, 335, 336, 0, 0, 0, 0, 325, 357,
	310, 1954, 0, 325, 0, 0, 806, 0, 0, 0,
	1024, 0, 0, 1633, 1058, 0, 1067, 1069, 1072, 1116,
	1118, 1135, 0, 1146, 1175, 2528, 1176, 1331, 0, 1331,
	0, 0, 1196, 1202, 1798, 0, 1873, 1804, 1855, 1856,
	0, 1571, 0, 2119, 2164, 0, 0, -2, 0, 0,
	2168, 0, 0, 0, -2, 0, 0, 0, 2425, 2427,
	0, 2481, 2416, 2266, 0, 0, 0, 2270, 2254, 2255,
	0, 2376, 2442, 2471, 2475, 0, 2104, 2105, 2106, 2107,
	2108, 2109, 2110, 0, 2523, 2560, 2564, 2349, 2350, 2354,
	2537, 0, 0, 0, 2279, 0, 0, 0, 0, 0,
	0, 0, 0, 2085, 2089, 0, 0, 2443, 2454, 2456,
	2206, 2207, 2211, 2212, 2213, 2214, 2215, 2216, 2217, 2218,
	2219, 2220, -2, -2, -2, 2224, 2225, 2226, -2, -2,
	-2, 2231, 0, 0, 0, 2457, 2459, 2460, 2464, 2465,
	0, 2332, 2333, 2334, 2466, 0, 1837, 1831, 1892, 0,
	1983, 1896, 0, 1892, 1892, 1844, 1943, 0, 0, 1967,
	0, 1915, 0, 1916, 0, 0, 1948, 0, 1923, 1926,
	1927, 1937, 0, 1929, 0, 1932, 0, 2266, -2, 369,
	371, 373, 0, 376, 377, 0, 0, 0, 0, 382,
	0, 0, 0, 0, 0, 744, 1621, 1621, 0, 0,
	746, 0, 730, 0, 0, 1993, 0, 0, 2069, 2073,
	2097, 758, 760, 0, 0, 0, 2983, 2918, 0, 0,
	757, 626, 635, 266, 0, 1952, 0, 0, 0, 0,
	0, 218, 0, 0, 0, 0, 0, 0, 236, 0,
	1388, 0, 1351, 0, 0, 1378, 0, 0, 1394, 196,
	197, 198, 0, 0, 0, 0, 208, 0, 0, 204,
	0, 214, 220, 219, 0, 1338, 0, 0, 0, 0,
	1582, 0, 0, 0, 168, 169, 170, 0, 175, 0,
	176, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 126, 0, 0, 0, 1721, 1722, 0, 1709, 165,
	0, 0, 0, 0, 0, 0, 238, 0, 0, 0,
	1568, 260, 0, 0, 0, 0, 0, 365, 360, 362,
	0, 1471, 1532, 1533, 1480, 1595, 1599, 1607, 0, 0,
	0, 0, 0, 775, 1634, 0, 278, 276, 0, 279,
	0, 282, 284, 0, 0, 278, 272, 0, 0, 0,
	0, 0, 0, 0, 0, 462, 0, 461, 467, 514,
	1279, 1395, 0, 0, 1397, 1315, 1319, 0, 2582, 2582,
	0, 2534, 0, 1277, 0, 0, 1396, 564, 0, 571,
	0, 586, 2533, 0, 0, 0, 1448, 0, 0, 1475,
	1427, 1501, 1427, 0, 1544, 1546, 0, 1554, 0, 0,
	0, 1733, 1739, 0, 1726, 1727, 1869, 1741, 1760, -2,
	0, 0, 1850, 1768, 1765, 1771, 1772, 0, 0, 348,
	0, 1752, 1754, 0, 1250, 1253, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 309, 325, 322, 312, 1954,
	352, 0, 1018, 368, 1050, 1632, 1055, 2549, 1126, 1144,
	1177, 1330, 0, 0, 1179, 0, 0, 1872, 1859, 1860,
	1857, 1571, 2166, 2170, 0, 0, 0, 2172, -2, 0,
	2194, -2, -2, 2428, 2480, 2245, 1850, 2267, 2269, 2256,
	2474, 2114, 0, 2356, 2353, 0, 2340, 0, 2291, 2292,
	0, 0, 2295, 2297, 2298, 2299, 2053, 2046, 2045, 2453,
	0, 0, 0, 0, 2331, 1832, 0, 2345, 0, 0,
	1900, 2345, 2345, 1944, 0, 1946, 1913, 1901, 0, 1910,
	0, 2560, 1939, 1931, 0, 0, 374, 0, 378, 379,
	380, 381, 383, 0, 0, 0, 0, 0, 422, 747,
	748, 0, 0, 0, 1620, 1987, 1992, 0, 1998, 2068,
	0, 0, 0, 0, 0, 0, 766, 267, 0, 967,
	968, 190, 191, 1293, 1291, 1586, 1590, 1587, 0, 193,
	0, 0, 1352, 0, 1355, 0, 0, 0, 0, 1362,
	1379, 0, 0, 0, 0, 0, 0, 1381, 0, 1380,
	0, 0, 1411, 0, 1559, 1566, 0, -2, 0, 0,
	0, 200, 226, 0, 0, 0, 0, 229, 1638, 202,
	0, 0, 235, 235, 1290, 0, 0, 1578, 1580, 1593,
	0, 0, 0, 0, 178, 0, 0, 1596, 1600, 1608,
	1603, 1605, 1611, 0, 0, 121, 1712, 0, 0, 1723,
	0, 164, 0, 0, 0, 1613, 248, 249, 0, 235,
	0, 235, 241, 235, 1568, 0, 0, 0, 0, 0,
	0, 0, 0, 1616, 1617, 269, 0, 0, 0, 0,
	0, 0, 0, 271, 358, 278, 443, 450, 455, 457,
	458, 459, 460, 1340, 0, 1407, 1399, 1400, 1401, 0,
	1311, 1406, 1408, 0, 0, 1316, 0, 0, 0, 0,
	1296, 1278, 0, 1309, 1281, 0, 569, 0, 367, 1267,
	1445, 1493, 1427, 0, 1496, 0, 0, 1536, 0, 0,
	0, 0, 0, 0, 0, 1735, 1739, 0, 1728, 1729,
	1762, 1868, 0, 0, 0, 1749, 1869, 0, 368, 0,
	368, 327, 0, 328, 329, 330, 337, 338, 339, 340,
	311, 314, 0, 325, 808, 810, 0, 0, 816, 1023,
	1329, 0, 0, 0, 0, 1858, 2174, -2, -2, 2195,
	0, 2561, 2563, 1850, 0, 2342, 1852, 0, 0, -2,
	0, 0, 0, 1833, 1816, 0, 1891, 1883, 1885, 1887,
	2904, 2661, 3050, 1817, 1818, 1966, 0, 0, 1934, 375,
	384, 385, 0, 387, 388, 749, 0, 0, 0, 1994,
	0, 0, 755, 0, 0, 0, 957, 0, 0, 1588,
	195, 0, 0, 1356, 1357, 1359, 0, 1361, 1363, 1364,
	1281, 0, 1368, 0, 2584, 0, 1373, 1376, 1377, 0,
	0, 1390, 1412, 0, 1421, 0, 1561, 1571, 1565, 0,
	1563, 1423, 0, 199, 228, 201, 230, 225, 0, 1568,
	0, 203, 213, 0, 0, 146, 0, 0, 2654, 181,
	179, 177, 119, 125, 127, 1575, 167, 0, 148, 0,
	250, 259, 1567, 261, 245, 235, 0, 0, 1597, 1601,
	1609, 0, 1624, 1625, 1626, 1627, 0, 0, 0, 0,
	280, 0, 281, 283, 285, 286, 287, 288, 0, 0,
	449, 1281, 1339, 1280, 1398, 0, 1409, 1281, 0, 0,
	0, 0, 0, 0, 1283, 0, 1282, 0, 0, 570,
	573, 0, 576, 1985, 583, 0, 0, 0, 1500, 0,
	1547, 1545, 0, 1553, 0, 0, 0, 1708, 0, 0,
	1730, 1731, 590, 1755, 0, 0, 1762, 1773, 347, 0,
	350, 324, 0, 313, 0, 812, 0, 814, 0, 1178,
	1180, 0, 0, 2268, 2360, 0, 0, 2293, 2294, -2,
	0, 2234, 2344, 2346, 0, 0, 0, 0, 0, 1902,
	1911, 386, 1621, 1621, 1988, 762, 763, 759, 761, 0,
	1584, 0, 1591, 237, 1354, 1358, 0, 1365, 0, 0,
	0, 1369, 1431, 0, 0, 1448, 1448, 1382, 0, 0,
	1415, 1416, 1336, 0, 1417, 1418, 1419, 1560, 1861, 1566,
	1281, 0, 0, 227, 232, 0, 0, 0, 0, 0,
	0, 166, 0, 239, 262, 1568, 0, 0, 1628, 1629,
	0, 0, 277, 300, 0, 472, 470, 1283, 0, 1410,
	1317, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328,
	1318, 1423, 0, 0, 1387, 1294, 0, 1297, 0, 1279,
	0, 574, 575, 578, 0, 1494, 0, 1501, 0, 0,
	1554, 0, 0, 1718, 1707, 1739, 1732, 1733, 1985, 0,
	1763, 0, 320, 321, 811, 0, 0, 1188, 1189, 0,
	0, 0, 0, 2355, 1853, 2235, 0, 0, 1886, 1888,
	1889, 1890, 750, 751, 0, 1585, 207, 0, 1425, 1367,
	1436, 0, 0, 0, 0, 0, 1383, 1413, 1414, 1411,
	1335, 0, 1564, 1562, 1392, 1425, 1427, 205, 0, 1423,
	0, 1345, 0, 0, 1348, 0, 0, 182, 2654, 180,
	0, 235, 728, 1621, 235, 0, 303, 0, 293, 505,
	471, 473, 0, 0, 477, 478, 479, 0, 0, 482,
	483, 484, 485, 0, 0, 490, 0, 0, 0, 0,
	495, 496, 1275, 0, 1403, 1405, 1421, 1423, 1336, 0,
	1298, 1340, 1296, 1495, 1499, 1497, 1537, 1423, 0, 1421,
	0, 1725, 1739, 1719, 1720, 0, 1735, 0, 0, 368,
	813, 815, 2352, 2372, 2361, -2, 2986, 2662, 0, 2372,
	2372, 2347, 2348, 0, 0, 1281, 0, 1370, 1432, 1433,
	0, 1428, 1429, 1430, 2583, 1371, 1372, 1374, 1375, 1985,
	0, 1422, 1431, 231, 1281, 1342, 0, 0, 1343, 0,
	0, 185, 0, 187, 263, 1619, 1622, 0, 289, 0,
	0, 446, 503, 0, 0, 474, 475, 497, 476, 0,
	0, 0, 488, 489, 491, 492, 493, 494, 1272, 1274,
	1281, 0, 1336, 1421, 1281, 0, 0, 0, 1281, 1283,
	1421, 0, 1336, 0, 1714, 1724, 0, 1734, 1708, 0,
	1758, 0, 349, 2357, 0, 0, 2363, 2364, 2365, 2366,
	2367, 2358, 2359, 764, 1360, 1366, 0, 1434, 0, 1435,
	0, 0, 0, 1391, 1420, 1436, 211, 1346, 0, 1349,
	0, 183, 0, 0, 298, 299, 502, 498, 0, 0,
	486, 487, 1402, 1404, 1281, 1336, 1985, 1284, 0, 1286,
	1283, 1295, 1336, 0, 1281, 0, 1737, 1713, 1717, 2542,
	1718, 1756, 0, 0, 0, 2369, 2370, 0, 0, 0,
	1437, 0, 1440, 1441, 0, 1438, 1411, 0, 0, 235,
	0, 1837, 480, 0, 1985, 1281, 1574, 1285, 1275, 1281,
	1423, 1985, 1421, 1711, 1739, 1725, 0, 1985, 2368, 2371,
	2362, 1424, 1439, 1442, 1443, 1393, 0, 0, 1623, 301,
	0, 0, 504, 499, 500, 481, 1574, 1985, 1386, 0,
	1573, 1273, 1985, 1421, 1574, 1336, 1704, 1710, 0, 0,
	1714, 1985, 1759, 1333, 0, 0, 501, 1384, 1574, 1572,
	1574, 1336, 1550, 1281, 1736, 1711, 1757, 1347, 1332, 0,
	302, 1385, 1548, 1281, 1985, 1705, 0, 1985, 1574, 0,
	1574, 1551, 1333, 1549, 1350,
}

var sqlTok1 = [...]int16{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 641, 3, 647, 642, 3,
	653, 654, 645, 643, 658, 644, 655, 646, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 662, 659,
	633, 635, 634, 638, 657, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 651, 3, 652, 648, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 660, 640, 661, 636,
}

var sqlTok2 = [...]int16{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}

var sqlTok3 = [...]uint16{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 475, 57818, 476, 57819, 477,
	57820, 478, 57821, 479, 57822, 480, 57823, 481, 57824, 482,
	57825, 483, 57826, 484, 57827, 485, 57828, 486, 57829, 487,
	57830, 488, 57831, 489, 57832, 490, 57833, 491, 57834, 492,
	57835, 493, 57836, 494, 57837, 495, 57838, 496, 57839, 497,
	57840, 498, 57841, 499, 57842, 500, 57843, 501, 57844, 502,
	57845, 503, 57846, 504, 57847, 505, 57848, 506, 57849, 507,
	57850, 508, 57851, 509, 57852, 510, 57853, 511, 57854, 512,
	57855, 513, 57856, 514, 57857, 515, 57858, 516, 57859, 517,
	57860, 518, 57861, 519, 57862, 520, 57863, 521, 57864, 522,
	57865, 523, 57866, 524, 57867, 525, 57868, 526, 57869, 527,
	57870, 528, 57871, 529, 57872, 530, 57873, 531, 57874, 532,
	57875, 533, 57876, 534, 57877, 535, 57878, 536, 57879, 537,
	57880, 538, 57881, 539, 57882, 540, 57883, 541, 57884, 542,
	57885, 543, 57886, 544, 57887, 545, 57888, 546, 57889, 547,
	57890, 548, 57891, 549, 57892, 550, 57893, 551, 57894, 552,
	57895, 553, 57896, 554, 57897, 555, 57898, 556, 57899, 557,
	57900, 558, 57901, 559, 57902, 560, 57903, 561, 57904, 562,
	57905, 563, 57906, 564, 57907, 565, 57908, 566, 57909, 567,
	57910, 568, 57911, 569, 57912, 570, 57913, 571, 57914, 572,
	57915, 573, 57916, 574, 57917, 575, 57918, 576, 57919, 577,
	57920, 578, 57921, 579, 57922, 580, 57923, 581, 57924, 582,
	57925, 583, 57926, 584, 57927, 585, 57928, 586, 57929, 587,
	57930, 588, 57931, 589, 57932, 590, 57933, 591, 57934, 592,
	57935, 593, 57936, 594, 57937, 595, 57938, 596, 57939, 597,
	57940, 598, 57941, 599, 57942, 600, 57943, 601, 57944, 602,
	57945, 603, 57946, 604, 57947, 605, 57948, 606, 57949, 607,
	57950, 608, 57951, 609, 57952, 610, 57953, 611, 57954, 612,
	57955, 613, 57956, 614, 57957, 615, 57958, 616, 57959, 617,
	57960, 618, 57961, 619, 57962, 620, 57963, 621, 57964, 622,
	57965, 623, 57966, 624, 57967, 625, 57968, 626, 57969, 627,
	57970, 628, 57971, 629, 57972, 630, 57973, 631, 57974, 632,
	57975, 637, 57976, 639, 57977, 649, 57978, 650, 57979, 656,
	0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := int(sqlPact[state])
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && int(sqlChk[int(sqlAct[n])]) == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || int(sqlExca[i+1]) != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := int(sqlExca[i])
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = int(sqlTok1[0])
		goto out
	}
	if char < len(sqlTok1) {
		token = int(sqlTok1[char])
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = int(sqlTok2[char-sqlPrivate])
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = int(sqlTok3[i+0])
		if token == char {
			token = int(sqlTok3[i+1])
			goto out
		}
	}

out:
	if token == 0 {
		token = int(sqlTok2[1]) /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = int(sqlPact[sqlstate])
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = int(sqlAct[sqln])
	if int(sqlChk[sqln]) == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = int(sqlDef[sqlstate])
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && int(sqlExca[xi+1]) == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = int(sqlExca[xi+0])
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = int(sqlExca[xi+1])
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = int(sqlPact[sqlS[sqlp].yys]) + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = int(sqlAct[sqln]) /* simulate a shift of "error" */
					if int(sqlChk[sqlstate]) == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= int(sqlR2[sqln])
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = int(sqlR1[sqln])
	sqlg := int(sqlPgo[sqln])
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = int(sqlAct[sqlg])
	} else {
		sqlstate = int(sqlAct[sqlj])
		if int(sqlChk[sqlstate]) != -sqln {
			sqlstate = int(sqlAct[sqlg])
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1623
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1628
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1632
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 8:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1638
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 12:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1641
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 14:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1642
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 16:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1643
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 18:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1644
		{
			return helpWith(sqllex, "GRANT")
		}
	case 20:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1645
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 22:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1646
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 24:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1647
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 26:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1648
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 28:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1649
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 30:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1650
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 32:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1651
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 36:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1654
		{
			return helpWith(sqllex, "CLOSE")
		}
	case 38:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1655
		{
			return helpWith(sqllex, "DECLARE")
		}
	case 40:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1656
		{
			return helpWith(sqllex, "FETCH")
		}
	case 42:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1657
		{
			return helpWith(sqllex, "MOVE")
		}
	case 46:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1665
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 48:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1666
		{
			return helpWith(sqllex, "ALTER TENANT")
		}
	case 50:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1668
		{
			return helpWith(sqllex, "ALTER")
		}
	case 52:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1671
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 54:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1672
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 56:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1673
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 58:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1674
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 60:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1675
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 62:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1676
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 64:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1677
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 66:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1678
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 68:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1679
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 70:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1680
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 72:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1681
		{
			return helpWith(sqllex, "ALTER CHANGEFEED")
		}
	case 74:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1682
		{
			return helpWith(sqllex, "ALTER BACKUP")
		}
	case 85:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1743
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 87:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1769
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 91:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1783
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 96:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1803
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 97:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1807
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 98:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1811
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 114:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1850
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 115:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1854
		{
			sqlVAL.union.val = &tree.AlterDatabaseOwner{Name: tree.Name(sqlDollar[3].str), Owner: sqlDollar[6].union.roleSpec()}
		}
	case 116:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1861
		{

			sqlVAL.union.val = &tree.AlterRoleSet{
				AllRoles:     true,
				DatabaseName: tree.Name(sqlDollar[3].str),
				IsRole:       true,
				SetOrReset:   sqlDollar[4].union.setVar(),
			}
		}
	case 117:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1873
		{

			sqlVAL.union.val = &tree.AlterDatabasePlacement{
				Name:      tree.Name(sqlDollar[3].str),
				Placement: sqlDollar[4].union.dataPlacement(),
			}
		}
	case 118:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1883
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 119:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1890
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:        tree.Name(sqlDollar[3].str),
				Region:      tree.Name(sqlDollar[9].str),
				IfNotExists: true,
			}
		}
	case 120:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1900
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 121:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1907
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:     tree.Name(sqlDollar[3].str),
				Region:   tree.Name(sqlDollar[8].str),
				IfExists: true,
			}
		}
	case 122:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1917
		{
			sqlVAL.union.val = &tree.AlterDatabaseSurvivalGoal{
				Name:         tree.Name(sqlDollar[3].str),
				SurvivalGoal: sqlDollar[4].union.survivalGoal(),
			}
		}
	case 123:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1926
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[4].str),
			}
		}
	case 124:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1933
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[5].str),
			}
		}
	case 125:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1943
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddSuperRegion{
				DatabaseName:    tree.Name(sqlDollar[3].str),
				SuperRegionName: tree.Name(sqlDollar[7].str),
				Regions:         sqlDollar[9].union.nameList(),
			}
		}
	case 126:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1953
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropSuperRegion{
				DatabaseName:    tree.Name(sqlDollar[3].str),
				SuperRegionName: tree.Name(sqlDollar[7].str),
			}
		}
	case 127:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1962
		{
			sqlVAL.union.val = &tree.AlterDatabaseAlterSuperRegion{
				DatabaseName:    tree.Name(sqlDollar[3].str),
				SuperRegionName: tree.Name(sqlDollar[7].str),
				Regions:         sqlDollar[9].union.nameList(),
			}
		}
	case 128:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1972
		{
			sqlVAL.union.val = &tree.AlterDatabaseSecondaryRegion{
				DatabaseName:    tree.Name(sqlDollar[3].str),
				SecondaryRegion: tree.Name(sqlDollar[5].str),
			}
		}
	case 129:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1981
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropSecondaryRegion{
				DatabaseName: tree.Name(sqlDollar[3].str),
			}
		}
	case 132:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2009
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 140:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2041
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 141:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2045
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 142:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2049
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 143:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2055
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 144:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2059
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 145:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2065
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 146:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2074
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 147:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2085
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 148:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2089
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 149:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2095
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 150:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2103
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 151:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2113
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 152:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2117
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 157:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2129
		{
			sqlVAL.union.val = tree.RelocateLease
		}
	case 158:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2135
		{
			sqlVAL.union.val = tree.RelocateVoters
		}
	case 159:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2139
		{

			sqlVAL.union.val = tree.RelocateVoters
		}
	case 160:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2144
		{
			sqlVAL.union.val = tree.RelocateNonVoters
		}
	case 161:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2150
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:    tree.TableIndexName{Table: name},
				Rows:            sqlDollar[6].union.slct(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 162:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2162
		{

			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:    sqlDollar[3].union.tableIndexName(),
				Rows:            sqlDollar[6].union.slct(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 163:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2183
		{
			var zoneName string
			switch e := sqlDollar[3].union.expr().(type) {
			case *tree.UnresolvedName:
				if e.NumParts != 1 {
					return setErr(sqllex, errors.New("only simple names are supported in ALTER RANGE ... CONFIGURE ZONE"))
				}
				zoneName = e.Parts[0]
			case tree.DefaultVal:
				zoneName = "default"
			default:
				return setErr(sqllex, errors.New("only simple names are supported in ALTER RANGE ... CONFIGURE ZONE"))
			}
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(zoneName)}
			sqlVAL.union.val = s
		}
	case 164:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2203
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows:            sqlDollar[8].union.slct(),
				FromStoreID:     tree.DNull,
				ToStoreID:       sqlDollar[6].union.expr(),
				SubjectReplicas: tree.RelocateLease,
			}
		}
	case 165:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2212
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				FromStoreID:     tree.DNull,
				ToStoreID:       sqlDollar[7].union.expr(),
				SubjectReplicas: tree.RelocateLease,
			}
		}
	case 166:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2223
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows:            sqlDollar[10].union.slct(),
				FromStoreID:     sqlDollar[6].union.expr(),
				ToStoreID:       sqlDollar[8].union.expr(),
				SubjectReplicas: sqlDollar[4].union.relocateSubject(),
			}
		}
	case 167:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2232
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				FromStoreID:     sqlDollar[7].union.expr(),
				ToStoreID:       sqlDollar[9].union.expr(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 168:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2245
		{

			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: sqlDollar[4].union.expr()}
		}
	case 169:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2250
		{
			sqlVAL.union.val = &tree.SetZoneConfig{Options: sqlDollar[4].union.kvOptions()}
		}
	case 170:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2254
		{

			sqlVAL.union.val = &tree.SetZoneConfig{SetDefault: true}
		}
	case 171:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2259
		{
			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: tree.DNull}
		}
	case 172:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2265
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 173:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2273
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 174:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2284
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 175:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2294
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 176:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2304
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 177:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2313
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 178:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2324
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 179:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2330
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 180:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2338
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 181:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2342
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 182:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2346
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 183:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2350
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 184:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2356
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 185:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2361
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 186:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2372
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 187:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2376
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 188:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2382
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 189:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2386
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 190:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2393
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 191:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2398
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 192:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2403
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 193:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2408
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 194:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2413
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 195:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2418
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 196:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2423
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 197:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2428
		{
			sqlVAL.union.val = &tree.AlterTableSetOnUpdate{Column: tree.Name(sqlDollar[3].str), Expr: sqlDollar[4].union.expr()}
		}
	case 198:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2433
		{
			sqlVAL.union.val = &tree.AlterTableSetVisible{Column: tree.Name(sqlDollar[3].str), Visible: sqlDollar[4].union.bool()}
		}
	case 199:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2438
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 200:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2443
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 201:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2448
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 202:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2452
		{
			return unimplemented(sqllex, "alter table alter column add")
		}
	case 203:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2457
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 204:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2466
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 205:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2478
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 206:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2488
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 207:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2496
		{
			def := sqlDollar[7].union.constraintDef()
			def.SetName(tree.Name(sqlDollar[6].str))
			def.SetIfNotExists()
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      def,
				ValidationBehavior: sqlDollar[8].union.validationBehavior(),
			}
		}
	case 208:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2506
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 209:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2509
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table inherits")
		}
	case 210:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2515
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table no inherits")
		}
	case 211:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2522
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:       sqlDollar[7].union.idxElems(),
				Sharded:       sqlDollar[9].union.shardedIndexDef(),
				StorageParams: sqlDollar[10].union.storageParams(),
			}
		}
	case 212:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2530
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 213:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2537
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 214:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2546
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 215:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2555
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 216:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2560
		{
			sqlVAL.union.val = &tree.AlterTablePartitionByTable{
				PartitionByTable: sqlDollar[1].union.partitionByTable(),
			}
		}
	case 217:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2567
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 218:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2574
		{
			sqlVAL.union.val = &tree.AlterTableSetStorageParams{
				StorageParams: sqlDollar[3].union.storageParams(),
			}
		}
	case 219:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2580
		{
			sqlVAL.union.val = &tree.AlterTableResetStorageParams{
				Params: sqlDollar[3].union.storageParamKeys(),
			}
		}
	case 220:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2587
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 221:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2588
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 222:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2592
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 223:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2596
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 224:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2602
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionByIndex: sqlDollar[1].union.partitionByIndex(),
			}
		}
	case 225:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2610
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 226:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2614
		{
			sqlVAL.union.val = nil
		}
	case 227:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2620
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 228:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2624
		{
			sqlVAL.union.val = nil
		}
	case 229:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2630
		{
			sqlVAL.union.val = true
		}
	case 230:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2634
		{
			sqlVAL.union.val = false
		}
	case 231:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2640
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 232:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2644
		{
			sqlVAL.union.val = nil
		}
	case 233:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2651
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 234:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2655
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 235:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2659
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 236:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2665
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 237:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2669
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 238:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2694
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[6].str),
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 239:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2705
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[9].str),
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 240:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2716
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeDropValue{
					Val: tree.EnumValue(sqlDollar[6].str),
				},
			}
		}
	case 241:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2725
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: tree.EnumValue(sqlDollar[6].str),
					NewVal: tree.EnumValue(sqlDollar[8].str),
				},
			}
		}
	case 242:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2735
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 243:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2744
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 244:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2753
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeOwner{
					Owner: sqlDollar[6].union.roleSpec(),
				},
			}
		}
	case 245:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2762
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 246:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2766
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 247:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2769
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 248:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2773
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 249:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2780
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 250:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2787
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 251:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2793
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.RoleName,
				Name:         sqlDollar[1].str,
			}
		}
	case 252:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2800
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.RoleName,
				Name:         sqlDollar[1].str,
			}
		}
	case 253:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2807
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.CurrentUser,
			}
		}
	case 254:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2813
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.SessionUser,
			}
		}
	case 255:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2821
		{
			sqlVAL.union.val = tree.RoleSpecList{sqlDollar[1].union.roleSpec()}
		}
	case 256:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2825
		{
			sqlVAL.union.val = append(sqlDollar[1].union.roleSpecList(), sqlDollar[3].union.roleSpec())
		}
	case 264:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2846
		{
			sqlVAL.union.val = &tree.RefreshMaterializedView{
				Name:              sqlDollar[5].union.unresolvedObjectName(),
				Concurrently:      sqlDollar[4].union.bool(),
				RefreshDataOption: sqlDollar[6].union.refreshDataOption(),
			}
		}
	case 265:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2853
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 266:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2857
		{
			sqlVAL.union.val = tree.RefreshDataWithData
		}
	case 267:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2861
		{
			sqlVAL.union.val = tree.RefreshDataClear
		}
	case 268:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2865
		{
			sqlVAL.union.val = tree.RefreshDataDefault
		}
	case 269:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2908
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.backupTargetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: false,
				Subdir:         sqlDollar[4].union.expr(),
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 270:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2920
		{
			sqlVAL.union.val = &tree.Backup{
				Targets: sqlDollar[2].union.backupTargetListPtr(),
				To:      sqlDollar[4].union.stringOrPlaceholderOptList(),
				Nested:  true,
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *sqlDollar[6].union.backupOptions(),
			}
		}
	case 271:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2930
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.backupTargetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: true,
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 272:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2941
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:         sqlDollar[2].union.backupTargetListPtr(),
				To:              sqlDollar[4].union.stringOrPlaceholderOptList(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}
		}
	case 273:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2950
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 274:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2954
		{
			sqlVAL.union.val = (*tree.BackupTargetList)(nil)
		}
	case 275:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2958
		{
			t := sqlDollar[1].union.backupTargetList()
			sqlVAL.union.val = &t
		}
	case 276:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2966
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 277:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2970
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 278:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2974
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 279:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2981
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 280:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2985
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 281:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2994
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 282:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2998
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: tree.MakeDBool(true)}
		}
	case 283:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3002
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: sqlDollar[3].union.expr()}
		}
	case 284:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3006
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: tree.MakeDBool(true)}
		}
	case 285:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3010
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: tree.MakeDBool(true)}
		}
	case 286:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3014
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: tree.MakeDBool(false)}
		}
	case 287:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3018
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 288:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3022
		{
			sqlVAL.union.val = &tree.BackupOptions{IncrementalStorage: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 289:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3104
		{
			sqlVAL.union.val = &tree.ScheduledBackup{
				ScheduleLabelSpec: *(sqlDollar[3].union.scheduleLabelSpec()),
				Recurrence:        sqlDollar[10].union.expr(),
				FullBackup:        sqlDollar[11].union.fullBackupClause(),
				To:                sqlDollar[8].union.stringOrPlaceholderOptList(),
				Targets:           sqlDollar[6].union.backupTargetListPtr(),
				BackupOptions:     *(sqlDollar[9].union.backupOptions()),
				ScheduleOptions:   sqlDollar[12].union.kvOptions(),
			}
		}
	case 290:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3115
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 291:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3120
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 292:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3124
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 293:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3134
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 294:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3140
		{
			sqlVAL.union.val = &tree.LabelSpec{Label: sqlDollar[1].union.expr(), IfNotExists: false}
		}
	case 295:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3144
		{
			sqlVAL.union.val = &tree.LabelSpec{Label: sqlDollar[4].union.expr(), IfNotExists: true}
		}
	case 296:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3150
		{
			sqlVAL.union.val = sqlDollar[1].union.labelSpec()
		}
	case 297:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3154
		{
			sqlVAL.union.val = &tree.LabelSpec{IfNotExists: false}
		}
	case 298:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3163
		{
			sqlVAL.union.val = &tree.FullBackupClause{Recurrence: sqlDollar[3].union.expr()}
		}
	case 299:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3167
		{
			sqlVAL.union.val = &tree.FullBackupClause{AlwaysFull: true}
		}
	case 300:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3171
		{
			sqlVAL.union.val = (*tree.FullBackupClause)(nil)
		}
	case 301:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3177
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 302:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3181
		{
			sqlVAL.union.val = sqlDollar[5].union.kvOptions()
		}
	case 303:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3185
		{
			sqlVAL.union.val = nil
		}
	case 304:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3202
		{
			sqlVAL.union.val = &tree.CreateExternalConnection{
				ConnectionLabelSpec: *(sqlDollar[4].union.labelSpec()),
				As:                  sqlDollar[6].union.expr(),
			}
		}
	case 305:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3208
		{
			return helpWith(sqllex, "CREATE EXTERNAL CONNECTION")
		}
	case 306:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3219
		{
			sqlVAL.union.val = &tree.DropExternalConnection{
				ConnectionLabel: sqlDollar[4].union.expr(),
			}
		}
	case 307:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3224
		{
			return helpWith(sqllex, "DROP EXTERNAL CONNECTION")
		}
	case 308:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3259
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				From:               sqlDollar[3].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[4].union.asOfClause(),
				Options:            *(sqlDollar[5].union.restoreOptions()),
			}
		}
	case 309:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3268
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				Subdir:             sqlDollar[3].union.expr(),
				From:               sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[6].union.asOfClause(),
				Options:            *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 310:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3278
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.backupTargetList(),
				From:    sqlDollar[4].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *(sqlDollar[6].union.restoreOptions()),
			}
		}
	case 311:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3287
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.backupTargetList(),
				Subdir:  sqlDollar[4].union.expr(),
				From:    sqlDollar[6].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[7].union.asOfClause(),
				Options: *(sqlDollar[8].union.restoreOptions()),
			}
		}
	case 312:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3297
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.SystemUsers,
				From:               sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[6].union.asOfClause(),
				Options:            *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 313:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3306
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.SystemUsers,
				Subdir:             sqlDollar[5].union.expr(),
				From:               sqlDollar[7].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[8].union.asOfClause(),
				Options:            *(sqlDollar[9].union.restoreOptions()),
			}
		}
	case 314:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3316
		{
			sqlVAL.union.val = &tree.StreamIngestion{
				Targets:  sqlDollar[2].union.backupTargetList(),
				From:     sqlDollar[7].union.stringOrPlaceholderOptList(),
				AsTenant: sqlDollar[8].union.asTenantClause(),
			}
		}
	case 315:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3323
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 316:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3327
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList{sqlDollar[1].union.expr()}
		}
	case 317:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3331
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList(sqlDollar[2].union.exprs())
		}
	case 318:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3337
		{
			sqlVAL.union.val = []tree.StringOrPlaceholderOptList{sqlDollar[1].union.stringOrPlaceholderOptList()}
		}
	case 319:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3341
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listOfStringOrPlaceholderOptList(), sqlDollar[3].union.stringOrPlaceholderOptList())
		}
	case 320:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3348
		{
			tenID := uint64(sqlDollar[3].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TenantID{Specified: true, ID: tenID}
		}
	case 321:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3356
		{
			if sqlDollar[3].str != "_" {
				return setErr(sqllex, errors.New("invalid syntax"))
			}
			sqlVAL.union.val = tree.TenantID{Specified: true}
		}
	case 322:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3363
		{
			sqlVAL.union.val = tree.TenantID{Specified: false}
		}
	case 323:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3370
		{
			sqlVAL.union.val = sqlDollar[2].union.restoreOptions()
		}
	case 324:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3374
		{
			sqlVAL.union.val = sqlDollar[4].union.restoreOptions()
		}
	case 325:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3378
		{
			sqlVAL.union.val = &tree.RestoreOptions{}
		}
	case 326:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3385
		{
			sqlVAL.union.val = sqlDollar[1].union.restoreOptions()
		}
	case 327:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3389
		{
			if err := sqlDollar[1].union.restoreOptions().CombineWith(sqlDollar[3].union.restoreOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 328:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3398
		{
			sqlVAL.union.val = &tree.RestoreOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 329:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3402
		{
			sqlVAL.union.val = &tree.RestoreOptions{DecryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 330:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3406
		{
			sqlVAL.union.val = &tree.RestoreOptions{IntoDB: sqlDollar[3].union.expr()}
		}
	case 331:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3410
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingFKs: true}
		}
	case 332:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3414
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequences: true}
		}
	case 333:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3418
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequenceOwners: true}
		}
	case 334:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3422
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingViews: true}
		}
	case 335:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3426
		{
			sqlVAL.union.val = &tree.RestoreOptions{Detached: true}
		}
	case 336:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3430
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipLocalitiesCheck: true}
		}
	case 337:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3434
		{
			sqlVAL.union.val = &tree.RestoreOptions{DebugPauseOn: sqlDollar[3].union.expr()}
		}
	case 338:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3438
		{
			sqlVAL.union.val = &tree.RestoreOptions{NewDBName: sqlDollar[3].union.expr()}
		}
	case 339:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3442
		{
			sqlVAL.union.val = &tree.RestoreOptions{IncrementalStorage: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 340:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3446
		{
			sqlVAL.union.val = &tree.RestoreOptions{AsTenant: sqlDollar[3].union.expr()}
		}
	case 341:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3452
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 342:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3458
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "alter function")
		}
	case 343:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3462
		{
			return unimplemented(sqllex, "alter domain")
		}
	case 344:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3466
		{
			return unimplementedWithIssueDetail(sqllex, 74775, "alter aggregate")
		}
	case 345:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3493
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 346:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3498
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 347:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3502
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 348:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3508
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 349:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3513
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 350:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3518
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 351:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3522
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 352:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3539
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 353:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3542
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 354:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3546
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 355:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3550
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 356:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3558
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 357:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3562
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 358:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3568
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 359:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3572
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 360:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3578
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 361:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3582
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 362:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3586
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 363:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3590
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 364:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3596
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 365:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3600
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 366:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3606
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 367:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3610
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 368:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3614
		{
			sqlVAL.union.val = nil
		}
	case 369:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3626
		{

			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			if sqlDollar[7].union.expr() != nil {
				return unimplementedWithIssue(sqllex, 54580)
			}
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: *sqlDollar[6].union.copyOptions(),
			}
		}
	case 370:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3640
		{
			return unimplemented(sqllex, "copy from unsupported format")
		}
	case 371:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3646
		{
			sqlVAL.union.val = sqlDollar[2].union.copyOptions()
		}
	case 372:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3650
		{
			sqlVAL.union.val = &tree.CopyOptions{}
		}
	case 373:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3656
		{
			sqlVAL.union.val = sqlDollar[1].union.copyOptions()
		}
	case 374:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3660
		{
			if err := sqlDollar[1].union.copyOptions().CombineWith(sqlDollar[2].union.copyOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 375:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3668
		{
			sqlVAL.union.val = &tree.CopyOptions{Destination: sqlDollar[3].union.expr()}
		}
	case 376:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3672
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatBinary}
		}
	case 377:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3676
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatCSV}
		}
	case 378:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3680
		{
			sqlVAL.union.val = &tree.CopyOptions{Delimiter: sqlDollar[2].union.expr()}
		}
	case 379:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3684
		{
			sqlVAL.union.val = &tree.CopyOptions{Null: sqlDollar[2].union.expr()}
		}
	case 380:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3688
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "oids")
		}
	case 381:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3692
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "freeze")
		}
	case 382:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3696
		{
			sqlVAL.union.val = &tree.CopyOptions{Header: true}
		}
	case 383:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3700
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "quote")
		}
	case 384:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3704
		{
			sqlVAL.union.val = &tree.CopyOptions{Escape: tree.NewStrVal(sqlDollar[2].str)}
		}
	case 385:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3708
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "force quote")
		}
	case 386:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3712
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "force not null")
		}
	case 387:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3716
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "force null")
		}
	case 388:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3720
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "encoding")
		}
	case 390:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3728
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 392:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3729
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 394:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3730
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 396:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3731
		{
			return helpWith(sqllex, "CANCEL ALL JOBS")
		}
	case 397:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3732
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 398:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3742
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 399:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3750
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 400:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3752
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 401:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3756
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 402:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3759
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 403:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3769
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 404:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3778
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 405:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3786
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 406:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3788
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 407:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3792
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 408:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3795
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 409:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3805
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 410:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3814
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 411:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3822
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 412:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3824
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 413:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3828
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 414:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3831
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 415:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3839
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.CancelJob}
		}
	case 416:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3842
		{
			return helpWith(sqllex, "CANCEL ALL JOBS")
		}
	case 417:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3846
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 418:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3850
		{
			sqlVAL.union.val = &tree.CommentOnSchema{Name: sqlDollar[4].union.objectNamePrefix(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 419:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3854
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 420:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3858
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 421:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3871
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 422:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3876
		{
			sqlVAL.union.val = &tree.CommentOnConstraint{Constraint: tree.Name(sqlDollar[4].str), Table: sqlDollar[6].union.unresolvedObjectName(), Comment: sqlDollar[8].union.strPtr()}
		}
	case 423:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3879
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "comment on extension")
		}
	case 424:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3880
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "comment on function")
		}
	case 425:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3884
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 426:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3889
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 428:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3901
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 431:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3903
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 433:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3904
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 436:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3906
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 438:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3907
		{
			return helpWith(sqllex, "CREATE EXTERNAL CONNECTION")
		}
	case 439:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3908
		{
		}
	case 440:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3909
		{
			return helpWith(sqllex, "CREATE")
		}
	case 441:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3916
		{
			sqlVAL.union.val = &tree.CreateExtension{IfNotExists: true, Name: sqlDollar[6].str}
		}
	case 442:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3919
		{
			sqlVAL.union.val = &tree.CreateExtension{Name: sqlDollar[3].str}
		}
	case 443:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3923
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "create extension if not exists with")
		}
	case 444:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3926
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "create extension with")
		}
	case 445:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3929
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 446:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3934
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToFunctionName()
			sqlVAL.union.val = &tree.CreateFunction{
				IsProcedure: false,
				Replace:     sqlDollar[2].union.bool(),
				FuncName:    name,
				Args:        sqlDollar[6].union.functionArgs(),
				ReturnType: tree.FuncReturnType{
					Type:  sqlDollar[10].union.typeReference(),
					IsSet: sqlDollar[9].union.bool(),
				},
				Options:     sqlDollar[11].union.functionOptions(),
				RoutineBody: sqlDollar[12].union.routineBody(),
			}
		}
	case 447:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3951
		{
			sqlVAL.union.val = true
		}
	case 448:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3952
		{
			sqlVAL.union.val = false
		}
	case 449:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3955
		{
			sqlVAL.union.val = true
		}
	case 450:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3956
		{
			sqlVAL.union.val = false
		}
	case 452:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3962
		{
			sqlVAL.union.val = sqlDollar[1].union.functionArgs()
		}
	case 453:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3963
		{
			sqlVAL.union.val = tree.FuncArgs{}
		}
	case 454:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3966
		{
			sqlVAL.union.val = tree.FuncArgs{sqlDollar[1].union.functionArg()}
		}
	case 455:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3968
		{
			sqlVAL.union.val = append(sqlDollar[1].union.functionArgs(), sqlDollar[3].union.functionArg())
		}
	case 457:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3975
		{
			arg := sqlDollar[1].union.functionArg()
			arg.DefaultVal = sqlDollar[3].union.expr()
			sqlVAL.union.val = arg
		}
	case 458:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3981
		{
			arg := sqlDollar[1].union.functionArg()
			arg.DefaultVal = sqlDollar[3].union.expr()
			sqlVAL.union.val = arg
		}
	case 459:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3989
		{
			sqlVAL.union.val = tree.FuncArg{
				Name:  tree.Name(sqlDollar[2].str),
				Type:  sqlDollar[3].union.typeReference(),
				Class: sqlDollar[1].union.functionArgClass(),
			}
		}
	case 460:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3997
		{
			sqlVAL.union.val = tree.FuncArg{
				Name:  tree.Name(sqlDollar[1].str),
				Type:  sqlDollar[3].union.typeReference(),
				Class: sqlDollar[2].union.functionArgClass(),
			}
		}
	case 461:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4005
		{
			sqlVAL.union.val = tree.FuncArg{
				Name:  tree.Name(sqlDollar[1].str),
				Type:  sqlDollar[2].union.typeReference(),
				Class: tree.FunctionArgIn,
			}
		}
	case 462:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4013
		{
			sqlVAL.union.val = tree.FuncArg{
				Type:  sqlDollar[2].union.typeReference(),
				Class: sqlDollar[1].union.functionArgClass(),
			}
		}
	case 463:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4020
		{
			sqlVAL.union.val = tree.FuncArg{
				Type:  sqlDollar[1].union.typeReference(),
				Class: tree.FunctionArgIn,
			}
		}
	case 464:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4028
		{
			sqlVAL.union.val = tree.FunctionArgIn
		}
	case 465:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4029
		{
			return unimplemented(sqllex, "create function with 'OUT' argument class")
		}
	case 466:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4030
		{
			return unimplemented(sqllex, "create function with 'INOUT' argument class")
		}
	case 467:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4031
		{
			return unimplemented(sqllex, "create function with 'IN OUT' argument class")
		}
	case 468:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4032
		{
			return unimplemented(sqllex, "create function with 'VARIADIC' argument class")
		}
	case 471:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4041
		{
			sqlVAL.union.val = sqlDollar[1].union.functionOptions()
		}
	case 472:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4042
		{
			sqlVAL.union.val = tree.FunctionOptions{}
		}
	case 473:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4045
		{
			sqlVAL.union.val = tree.FunctionOptions{sqlDollar[1].union.functionOption()}
		}
	case 474:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4047
		{
			sqlVAL.union.val = append(sqlDollar[1].union.functionOptions(), sqlDollar[2].union.functionOption())
		}
	case 475:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4053
		{
			sqlVAL.union.val = tree.FunctionBodyStr(sqlDollar[2].str)
		}
	case 476:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4057
		{
			lang, err := tree.AsFunctionLanguage(sqlDollar[2].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = lang
		}
	case 477:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4064
		{
			return unimplemented(sqllex, "create transform function")
		}
	case 478:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4065
		{
			return unimplemented(sqllex, "create window function")
		}
	case 479:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4067
		{
			sqlVAL.union.val = sqlDollar[1].union.functionOption()
		}
	case 480:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4073
		{
			sqlVAL.union.val = tree.FunctionCalledOnNullInput
		}
	case 481:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4077
		{
			sqlVAL.union.val = tree.FunctionReturnsNullOnNullInput
		}
	case 482:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4081
		{
			sqlVAL.union.val = tree.FunctionStrict
		}
	case 483:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4085
		{
			sqlVAL.union.val = tree.FunctionImmutable
		}
	case 484:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4089
		{
			sqlVAL.union.val = tree.FunctionStable
		}
	case 485:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4093
		{
			sqlVAL.union.val = tree.FunctionVolatile
		}
	case 486:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4097
		{
			return unimplemented(sqllex, "create function...security")
		}
	case 487:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4101
		{
			return unimplemented(sqllex, "create function...security")
		}
	case 488:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4105
		{
			return unimplemented(sqllex, "create function...security")
		}
	case 489:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4109
		{
			return unimplemented(sqllex, "create function...security")
		}
	case 490:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4113
		{
			sqlVAL.union.val = tree.FunctionLeakproof(true)
		}
	case 491:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4117
		{
			sqlVAL.union.val = tree.FunctionLeakproof(false)
		}
	case 492:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4121
		{
			return unimplemented(sqllex, "create function...cost")
		}
	case 493:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4125
		{
			return unimplemented(sqllex, "create function...rows")
		}
	case 494:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4129
		{
			return unimplemented(sqllex, "create function...support")
		}
	case 495:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4135
		{
			return unimplemented(sqllex, "create function...set")
		}
	case 496:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4136
		{
			return unimplemented(sqllex, "create function...parallel")
		}
	case 498:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4143
		{
			sqlVAL.union.val = &tree.RoutineReturn{
				ReturnVal: sqlDollar[2].union.expr(),
			}
		}
	case 501:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4155
		{
			sqlVAL.union.val = append(sqlDollar[1].union.stmts(), sqlDollar[2].union.stmt())
		}
	case 502:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4159
		{
			sqlVAL.union.val = tree.Statements{}
		}
	case 503:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4165
		{
			sqlVAL.union.val = &tree.RoutineBody{
				Stmts: tree.Statements{sqlDollar[1].union.stmt()},
			}
		}
	case 504:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4171
		{
			sqlVAL.union.val = &tree.RoutineBody{
				Stmts: sqlDollar[3].union.stmts(),
			}
		}
	case 505:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4177
		{
			sqlVAL.union.val = (*tree.RoutineBody)(nil)
		}
	case 506:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4182
		{
			return unimplemented(sqllex, "create access method")
		}
	case 507:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4183
		{
			return unimplementedWithIssueDetail(sqllex, 74775, "create aggregate")
		}
	case 508:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4184
		{
			return unimplemented(sqllex, "create cast")
		}
	case 509:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4185
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 510:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4186
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 511:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4187
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 512:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4188
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 513:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4189
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 514:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4190
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 515:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4191
		{
			return unimplementedWithIssue(sqllex, 65017)
		}
	case 516:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4192
		{
			return unimplemented(sqllex, "create publication")
		}
	case 517:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4193
		{
			return unimplemented(sqllex, "create rule")
		}
	case 518:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4194
		{
			return unimplemented(sqllex, "create server")
		}
	case 519:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4195
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 520:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4196
		{
			return unimplementedWithIssueDetail(sqllex, 54113, "create tablespace")
		}
	case 521:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4197
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 522:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4198
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create trigger")
		}
	case 523:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4201
		{
		}
	case 524:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4202
		{
		}
	case 525:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4205
		{
		}
	case 526:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4206
		{
		}
	case 527:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4209
		{
			return unimplemented(sqllex, "drop access method")
		}
	case 528:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4210
		{
			return unimplementedWithIssueDetail(sqllex, 74775, "drop aggregate")
		}
	case 529:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4211
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 530:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4212
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 531:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4213
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 532:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4214
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 533:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4215
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "drop extension if exists")
		}
	case 534:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4216
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "drop extension")
		}
	case 535:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4217
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 536:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4218
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 537:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4219
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 538:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4220
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 539:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4221
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 540:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4222
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 541:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4223
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 542:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4224
		{
			return unimplemented(sqllex, "drop server")
		}
	case 543:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4225
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 544:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4226
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 545:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4227
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 547:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4230
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 549:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4231
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 551:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4232
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 553:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4233
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 555:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4234
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 556:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4236
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 558:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4237
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 560:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4238
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 562:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4239
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 564:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4250
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 565:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4258
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 566:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4262
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 567:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4266
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 568:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4272
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 569:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4276
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 570:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4285
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 571:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4292
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 572:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4298
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 573:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4304
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 574:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4308
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 575:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4319
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 576:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4331
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 577:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4346
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.changefeedTargets(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 578:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4355
		{
			target, err := tree.ChangefeedTargetFromTableExpr(sqlDollar[9].union.tblExpr())
			if err != nil {
				return setErr(sqllex, err)
			}

			sqlVAL.union.val = &tree.CreateChangefeed{
				SinkURI: sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
				Targets: tree.ChangefeedTargets{target},
				Select: &tree.SelectClause{
					Exprs: sqlDollar[7].union.selExprs(),
					From:  tree.From{Tables: tree.TableExprs{sqlDollar[9].union.tblExpr()}},
					Where: tree.NewWhere(tree.AstWhere, sqlDollar[10].union.expr()),
				},
			}
		}
	case 579:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4373
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.changefeedTargets(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 580:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4383
		{
			sqlVAL.union.val = tree.ChangefeedTargets{sqlDollar[1].union.changefeedTarget()}
		}
	case 581:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4387
		{
			sqlVAL.union.val = append(sqlDollar[1].union.changefeedTargets(), sqlDollar[3].union.changefeedTarget())
		}
	case 582:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4393
		{
			sqlVAL.union.val = tree.ChangefeedTarget{
				TableName:  sqlDollar[2].union.unresolvedObjectName().ToUnresolvedName(),
				FamilyName: tree.Name(sqlDollar[3].str),
			}
		}
	case 584:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4404
		{
		}
	case 585:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4406
		{
		}
	case 586:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4410
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 587:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4414
		{
			sqlVAL.str = ""
		}
	case 588:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4420
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 589:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4424
		{

			sqlVAL.union.val = nil
		}
	case 590:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4438
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 591:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4448
		{
			return helpWith(sqllex, "DELETE")
		}
	case 592:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4451
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 593:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4452
		{
		}
	case 594:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4460
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 595:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4463
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 596:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4464
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 597:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4465
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 598:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4466
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 599:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4467
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 602:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4476
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 604:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4477
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 606:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4478
		{
			return helpWith(sqllex, "DROP EXTERNAL CONNECTION")
		}
	case 607:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4479
		{
		}
	case 608:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4480
		{
			return helpWith(sqllex, "DROP")
		}
	case 610:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4483
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 612:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4484
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 614:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4485
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 616:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4486
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 618:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4487
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 620:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4488
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 622:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4489
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 623:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4497
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 624:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4501
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 625:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4505
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[4].union.tableNames(),
				IfExists:       false,
				DropBehavior:   sqlDollar[5].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 626:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4514
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[6].union.tableNames(),
				IfExists:       true,
				DropBehavior:   sqlDollar[7].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 627:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4522
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 628:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4530
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 629:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4534
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 630:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4537
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 631:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4545
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 632:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4549
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 633:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4552
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 634:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4560
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 635:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4569
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 636:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4577
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 637:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4585
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 638:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4593
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 639:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4600
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 640:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4607
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 641:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4615
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 642:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4622
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 643:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4626
		{
			sqlVAL.union.val = tree.GrantTargetList{Types: sqlDollar[1].union.unresolvedObjectNames()}
		}
	case 644:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4632
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 645:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4636
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 646:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4645
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[3].union.objectNamePrefixList(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 647:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4653
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[5].union.objectNamePrefixList(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 648:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4660
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 649:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4668
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.roleSpecList(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 650:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4672
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.roleSpecList(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 651:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4675
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 652:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4679
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 653:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4684
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 654:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4697
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 655:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4702
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 656:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4704
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 657:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4709
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 658:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4713
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 659:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4736
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 660:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4743
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 661:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4745
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 662:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4753
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 663:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4761
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 664:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4769
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 665:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4777
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 666:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4788
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 671:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4796
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 675:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4799
		{
			return helpWith(sqllex, "DELETE")
		}
	case 678:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4801
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 680:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4802
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 682:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4803
		{
			return helpWith(sqllex, "INSERT")
		}
	case 686:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4806
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 689:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4808
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 691:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4811
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 695:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4816
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 697:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4817
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 699:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4818
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 701:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4823
		{
			return helpWith(sqllex, "DELETE")
		}
	case 703:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4824
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 705:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4825
		{
			return helpWith(sqllex, "INSERT")
		}
	case 706:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4827
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 709:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4831
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 711:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4832
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 712:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4836
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 713:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4840
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 714:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4850
		{
			sqlVAL.union.val = &tree.AlterChangefeed{
				Jobs: sqlDollar[3].union.expr(),
				Cmds: sqlDollar[4].union.alterChangefeedCmds(),
			}
		}
	case 715:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4856
		{
			return helpWith(sqllex, "ALTER CHANGEFEED")
		}
	case 716:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4860
		{
			sqlVAL.union.val = tree.AlterChangefeedCmds{sqlDollar[1].union.alterChangefeedCmd()}
		}
	case 717:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4864
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterChangefeedCmds(), sqlDollar[2].union.alterChangefeedCmd())
		}
	case 718:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4871
		{
			sqlVAL.union.val = &tree.AlterChangefeedAddTarget{
				Targets: sqlDollar[2].union.changefeedTargets(),
				Options: sqlDollar[3].union.kvOptions(),
			}
		}
	case 719:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4879
		{
			sqlVAL.union.val = &tree.AlterChangefeedDropTarget{
				Targets: sqlDollar[2].union.changefeedTargets(),
			}
		}
	case 720:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4885
		{
			sqlVAL.union.val = &tree.AlterChangefeedSetOptions{
				Options: sqlDollar[2].union.kvOptions(),
			}
		}
	case 721:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4891
		{
			sqlVAL.union.val = &tree.AlterChangefeedUnsetOptions{
				Options: sqlDollar[2].union.nameList(),
			}
		}
	case 722:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4910
		{
			sqlVAL.union.val = &tree.AlterBackup{
				Backup: sqlDollar[3].union.expr(),
				Cmds:   sqlDollar[4].union.alterBackupCmds(),
			}
		}
	case 723:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4917
		{
			sqlVAL.union.val = &tree.AlterBackup{
				Subdir: sqlDollar[3].union.expr(),
				Backup: sqlDollar[5].union.expr(),
				Cmds:   sqlDollar[6].union.alterBackupCmds(),
			}
		}
	case 724:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4924
		{
			return helpWith(sqllex, "ALTER BACKUP")
		}
	case 725:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4928
		{
			sqlVAL.union.val = tree.AlterBackupCmds{sqlDollar[1].union.alterBackupCmd()}
		}
	case 726:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4932
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterBackupCmds(), sqlDollar[2].union.alterBackupCmd())
		}
	case 727:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4938
		{
			sqlVAL.union.val = &tree.AlterBackupKMS{
				KMSInfo: sqlDollar[2].union.backupKMS(),
			}
		}
	case 728:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4946
		{
			sqlVAL.union.val = tree.BackupKMS{
				NewKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList(),
				OldKMSURI: sqlDollar[7].union.stringOrPlaceholderOptList(),
			}
		}
	case 729:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4959
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 730:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4967
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 731:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4975
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 732:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4979
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 733:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4983
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 734:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4993
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 735:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5000
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 736:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5008
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 737:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5012
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 738:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5016
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 739:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5026
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 740:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5030
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 741:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5034
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 742:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5038
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 743:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5041
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 744:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5064
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.roleSpecList(), Targets: sqlDollar[4].union.grantTargetList(), WithGrantOption: sqlDollar[7].union.bool()}
		}
	case 745:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5068
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: false}
		}
	case 746:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5072
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: true}
		}
	case 747:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5076
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.grantTargetList(), Grantees: sqlDollar[7].union.roleSpecList(), WithGrantOption: sqlDollar[8].union.bool()}
		}
	case 748:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5080
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees:        sqlDollar[7].union.roleSpecList(),
				WithGrantOption: sqlDollar[8].union.bool(),
			}
		}
	case 749:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5091
		{
			return unimplemented(sqllex, "grant privileges on schema with")
		}
	case 750:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5095
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:              sqlDollar[8].union.objectNamePrefixList(),
					AllSequencesInSchema: true,
				},
				Grantees:        sqlDollar[10].union.roleSpecList(),
				WithGrantOption: sqlDollar[11].union.bool(),
			}
		}
	case 751:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5107
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:        sqlDollar[10].union.roleSpecList(),
				WithGrantOption: sqlDollar[11].union.bool(),
			}
		}
	case 752:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5119
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[3].union.privilegeList(),
				Targets: tree.GrantTargetList{
					System: true,
				},
				Grantees:        sqlDollar[5].union.roleSpecList(),
				WithGrantOption: sqlDollar[6].union.bool(),
			}
		}
	case 753:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5129
		{
			return helpWith(sqllex, "GRANT")
		}
	case 754:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5152
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.roleSpecList(), Targets: sqlDollar[4].union.grantTargetList(), GrantOptionFor: false}
		}
	case 755:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5156
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[5].union.privilegeList(), Grantees: sqlDollar[9].union.roleSpecList(), Targets: sqlDollar[7].union.grantTargetList(), GrantOptionFor: true}
		}
	case 756:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5160
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: false}
		}
	case 757:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5164
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.roleSpecList(), AdminOption: true}
		}
	case 758:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5168
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.grantTargetList(), Grantees: sqlDollar[7].union.roleSpecList(), GrantOptionFor: false}
		}
	case 759:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5172
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[5].union.privilegeList(), Targets: sqlDollar[8].union.grantTargetList(), Grantees: sqlDollar[10].union.roleSpecList(), GrantOptionFor: true}
		}
	case 760:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5176
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees:       sqlDollar[7].union.roleSpecList(),
				GrantOptionFor: false,
			}
		}
	case 761:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5187
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[5].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas: sqlDollar[8].union.objectNamePrefixList(),
				},
				Grantees:       sqlDollar[10].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 762:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5198
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:       sqlDollar[10].union.roleSpecList(),
				GrantOptionFor: false,
			}
		}
	case 763:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5210
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:              sqlDollar[8].union.objectNamePrefixList(),
					AllSequencesInSchema: true,
				},
				Grantees:       sqlDollar[10].union.roleSpecList(),
				GrantOptionFor: false,
			}
		}
	case 764:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:5222
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[5].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:           sqlDollar[11].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:       sqlDollar[13].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 765:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5234
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[3].union.privilegeList(),
				Targets: tree.GrantTargetList{
					System: true,
				},
				Grantees: sqlDollar[5].union.roleSpecList(),
			}
		}
	case 766:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5244
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[6].union.privilegeList(),
				Targets: tree.GrantTargetList{
					System: true,
				},
				Grantees:       sqlDollar[8].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 767:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5255
		{
			return unimplemented(sqllex, "revoke privileges on sequence")
		}
	case 768:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5258
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 769:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5264
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 770:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5268
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 771:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5278
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 772:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5282
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 778:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5296
		{
			return helpWith(sqllex, "RESET")
		}
	case 780:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5297
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 781:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5305
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}, Reset: true}
		}
	case 782:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5309
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}, Reset: true}
		}
	case 783:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5313
		{
			sqlVAL.union.val = &tree.SetVar{ResetAll: true, Reset: true}
		}
	case 784:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5316
		{
			return helpWith(sqllex, "RESET")
		}
	case 785:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5324
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 786:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5327
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 787:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5338
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 788:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5341
		{
			return helpWith(sqllex, "USE")
		}
	case 790:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5345
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 791:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5346
		{
		}
	case 792:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5347
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 794:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5351
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 796:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5352
		{
			return helpWith(sqllex, "SET LOCAL")
		}
	case 798:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5353
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 800:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5354
		{
			return helpWith(sqllex, "USE")
		}
	case 803:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5370
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 804:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5385
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 805:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5388
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 806:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5406
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 807:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5414
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 808:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5418
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 809:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5422
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 810:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5428
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 811:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5432
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 812:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5438
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 813:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5442
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 814:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5446
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 815:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5450
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 816:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5454
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 817:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5465
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 818:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5468
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 819:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5478
		{
			csettingStmt := sqlDollar[4].union.stmt().(*tree.SetClusterSetting)
			sqlVAL.union.val = &tree.AlterTenantSetClusterSetting{
				SetClusterSetting: *csettingStmt,
				TenantID:          sqlDollar[3].union.expr(),
			}
		}
	case 820:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5486
		{
			csettingStmt := sqlDollar[4].union.stmt().(*tree.SetClusterSetting)
			sqlVAL.union.val = &tree.AlterTenantSetClusterSetting{
				SetClusterSetting: *csettingStmt,
				TenantAll:         true,
			}
		}
	case 821:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5493
		{
			return helpWith(sqllex, "ALTER TENANT")
		}
	case 822:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5494
		{
			return helpWith(sqllex, "ALTER TENANT")
		}
	case 827:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5508
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 828:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5524
		{

			sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[4].union.exprs()}
		}
	case 829:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5530
		{

			sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[5].union.exprs()}
		}
	case 830:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5536
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 831:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5539
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 832:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5541
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 833:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5544
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 834:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5547
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 835:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5561
		{
			ret := sqlDollar[3].union.setVar()
			ret.Local = true
			sqlVAL.union.val = ret
		}
	case 836:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5566
		{
			return helpWith(sqllex, "SET LOCAL")
		}
	case 837:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5583
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 838:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5586
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 839:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5588
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 840:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5591
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 841:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5595
		{
			sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
		}
	case 843:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5607
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 844:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5611
		{
			return unimplemented(sqllex, "set from current")
		}
	case 845:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5615
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 846:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5620
		{

			sqlVAL.union.val = &tree.SetVar{Name: "role", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 848:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5629
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 849:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5634
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 850:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5638
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 852:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5650
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 853:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5655
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 854:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5662
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 855:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5666
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 856:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5672
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 857:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5676
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 859:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5683
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 862:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5704
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 863:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5708
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 864:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5714
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 865:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5718
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 866:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5722
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 867:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5726
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 868:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5730
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 869:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5736
		{
			sqlVAL.union.val = tree.Low
		}
	case 870:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5740
		{
			sqlVAL.union.val = tree.Normal
		}
	case 871:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5744
		{
			sqlVAL.union.val = tree.High
		}
	case 872:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5755
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 873:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5759
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 874:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5763
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 876:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5768
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 877:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5772
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 879:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5788
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 881:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5789
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 883:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5790
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 885:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5791
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 887:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5792
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 889:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5793
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 891:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5794
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 893:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5795
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 895:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5796
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 898:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5798
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 900:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5799
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 902:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5800
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 904:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5801
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 906:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5802
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 909:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5804
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 911:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5805
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 913:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5806
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 916:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5808
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 919:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5810
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 921:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5811
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 923:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5812
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 925:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5813
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 927:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5814
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 929:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5815
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 931:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5816
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 933:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5817
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 935:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5818
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 937:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5819
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 939:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5820
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 941:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5821
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 943:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5822
		{
			return helpWith(sqllex, "SHOW TRANSFER")
		}
	case 945:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5823
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 947:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5824
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 948:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5825
		{
			return helpWith(sqllex, "SHOW")
		}
	case 952:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5828
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 954:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5837
		{
			sqlVAL.union.val = &tree.CloseCursor{
				All: true,
			}
		}
	case 955:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5843
		{
			sqlVAL.union.val = &tree.CloseCursor{
				Name: tree.Name(sqlDollar[2].str),
			}
		}
	case 956:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5848
		{
			return helpWith(sqllex, "CLOSE")
		}
	case 957:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5858
		{
			sqlVAL.union.val = &tree.DeclareCursor{
				Binary:      sqlDollar[3].union.bool(),
				Name:        tree.Name(sqlDollar[2].str),
				Sensitivity: sqlDollar[4].union.cursorSensitivity(),
				Scroll:      sqlDollar[5].union.cursorScrollOption(),
				Hold:        sqlDollar[7].union.bool(),
				Select:      sqlDollar[9].union.slct(),
			}
		}
	case 958:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5868
		{
			return helpWith(sqllex, "DECLARE")
		}
	case 959:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5872
		{
			sqlVAL.union.val = true
		}
	case 960:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5876
		{
			sqlVAL.union.val = false
		}
	case 961:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5882
		{
			sqlVAL.union.val = tree.Insensitive
		}
	case 962:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5886
		{
			sqlVAL.union.val = tree.Asensitive
		}
	case 963:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5890
		{
			sqlVAL.union.val = tree.UnspecifiedSensitivity
		}
	case 964:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5896
		{
			sqlVAL.union.val = tree.Scroll
		}
	case 965:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5900
		{
			sqlVAL.union.val = tree.NoScroll
		}
	case 966:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5904
		{
			sqlVAL.union.val = tree.UnspecifiedScroll
		}
	case 967:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5910
		{
			sqlVAL.union.val = true
		}
	case 968:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5914
		{
			sqlVAL.union.val = false
		}
	case 969:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5918
		{
			sqlVAL.union.val = false
		}
	case 970:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5928
		{
			sqlVAL.union.val = &tree.FetchCursor{
				CursorStmt: sqlDollar[2].union.cursorStmt(),
			}
		}
	case 971:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5933
		{
			return helpWith(sqllex, "FETCH")
		}
	case 972:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5941
		{
			sqlVAL.union.val = &tree.MoveCursor{
				CursorStmt: sqlDollar[2].union.cursorStmt(),
			}
		}
	case 973:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5946
		{
			return helpWith(sqllex, "MOVE")
		}
	case 974:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5950
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[1].str),
				Count: 1,
			}
		}
	case 975:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5957
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[2].str),
				Count: 1,
			}
		}
	case 976:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5964
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[3].str),
				Count: sqlDollar[1].union.int64(),
			}
		}
	case 977:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5971
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[3].str),
				Count: sqlDollar[1].union.int64(),
			}
		}
	case 978:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5978
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[4].str),
				Count: sqlDollar[2].union.int64() * sqlDollar[1].union.int64(),
			}
		}
	case 979:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5985
		{
			fetchType := tree.FetchAll
			count := sqlDollar[1].union.int64()
			if count < 0 {
				fetchType = tree.FetchBackwardAll
			}
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[4].str),
				FetchType: fetchType,
			}
		}
	case 980:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5997
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[4].str),
				FetchType: tree.FetchAbsolute,
				Count:     sqlDollar[2].union.int64(),
			}
		}
	case 981:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6005
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[4].str),
				FetchType: tree.FetchRelative,
				Count:     sqlDollar[2].union.int64(),
			}
		}
	case 982:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6013
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[3].str),
				FetchType: tree.FetchFirst,
			}
		}
	case 983:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6020
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[3].str),
				FetchType: tree.FetchLast,
			}
		}
	case 984:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6028
		{
			sqlVAL.union.val = int64(1)
		}
	case 985:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6029
		{
			sqlVAL.union.val = int64(-1)
		}
	case 986:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6032
		{
			sqlVAL.union.val = sqlDollar[1].union.int64()
		}
	case 987:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6033
		{
			sqlVAL.union.val = int64(1)
		}
	case 988:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6036
		{
			sqlVAL.union.val = int64(1)
		}
	case 989:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6037
		{
			sqlVAL.union.val = int64(-1)
		}
	case 990:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6040
		{
		}
	case 991:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6041
		{
		}
	case 992:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6044
		{
		}
	case 993:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6045
		{
		}
	case 994:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6049
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 995:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6054
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 996:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6059
		{

			return purposelyUnimplemented(sqllex, "reindex schema", "CockroachDB does not require reindexing.")
		}
	case 997:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6064
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 998:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6069
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 999:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6079
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 1000:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6080
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6081
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 1003:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6086
		{
			sqlVAL.str = sqlDollar[1].str + "." + strings.Join(sqlDollar[2].union.strs(), ".")
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6096
		{
			sqlVAL.str = "client_encoding"
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6101
		{
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6103
		{

			sqlVAL.str = sqlDollar[1].str + "." + strings.Join(sqlDollar[2].union.strs(), ".")
		}
	case 1013:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6108
		{
			sqlVAL.str = "timezone"
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6109
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 1015:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6113
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6117
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 1017:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6133
		{
			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 1018:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6137
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[7].union.unresolvedObjectName(), UsingJSON: true}
		}
	case 1019:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6141
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6152
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6160
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6168
		{
			sqlVAL.union.val = &tree.ShowBackup{
				InCollection: sqlDollar[4].union.stringOrPlaceholderOptList(),
			}
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6174
		{
			sqlVAL.union.val = &tree.ShowBackup{
				From:         true,
				Details:      sqlDollar[3].union.showBackupDetails(),
				Path:         sqlDollar[5].union.expr(),
				InCollection: sqlDollar[7].union.stringOrPlaceholderOptList(),
				Options:      sqlDollar[8].union.kvOptions(),
			}
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6184
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:      tree.BackupDefaultDetails,
				Path:         sqlDollar[3].union.expr(),
				InCollection: sqlDollar[5].union.stringOrPlaceholderOptList(),
				Options:      sqlDollar[6].union.kvOptions(),
			}
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6193
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6201
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupSchemaDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6209
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6217
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6224
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6228
		{
			sqlVAL.union.val = tree.BackupDefaultDetails
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6232
		{
			sqlVAL.union.val = tree.BackupSchemaDetails
		}
	case 1032:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6236
		{
			sqlVAL.union.val = tree.BackupFileDetails
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6240
		{
			sqlVAL.union.val = tree.BackupRangeDetails
		}
	case 1034:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6252
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6256
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 1036:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6259
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6261
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 1038:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6264
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6266
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6270
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 1041:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6273
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 1042:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6277
		{
			sqlVAL.union.val = sqlDollar[1].union.stmt()
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6279
		{
			switch t := sqlDollar[1].union.stmt().(type) {
			case *tree.ShowClusterSetting:
				sqlVAL.union.val = &tree.ShowTenantClusterSetting{
					ShowClusterSetting: t,
					TenantID:           sqlDollar[4].union.expr(),
				}
			case *tree.ShowClusterSettingList:
				sqlVAL.union.val = &tree.ShowTenantClusterSettingList{
					ShowClusterSettingList: t,
					TenantID:               sqlDollar[4].union.expr(),
				}
			}
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6293
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6301
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6304
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6312
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6316
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6320
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6324
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6327
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6335
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6338
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6344
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				Roles:  sqlDollar[4].union.roleSpecList(),
				Schema: tree.Name(sqlDollar[5].str),
			}
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6350
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				ForAllRoles: true,
				Schema:      tree.Name(sqlDollar[7].str),
			}
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6356
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6363
		{
			sqlVAL.union.val = &tree.ShowEnums{}
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6367
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
			}
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6377
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
			}
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6386
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6393
		{
			sqlVAL.union.val = &tree.ShowTypes{}
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6396
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6409
		{
			lst := sqlDollar[3].union.grantTargetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.roleSpecList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.roleSpecList()}
			}
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6417
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6425
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6428
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6430
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 1068:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6434
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6438
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6441
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6443
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6447
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6450
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6458
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 1075:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6461
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6463
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 1077:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6466
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 1078:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6474
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6477
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 1080:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6479
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6482
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 1082:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6486
		{
			sqlVAL.union.val = true
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6488
		{
			sqlVAL.union.val = true
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6490
		{
			sqlVAL.union.val = false
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6507
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6511
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6515
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{}
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6518
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6519
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6520
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6522
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6526
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6530
		{
			sqlVAL.union.val = &tree.ShowJobs{Schedules: sqlDollar[3].union.slct()}
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6534
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{Jobs: sqlDollar[4].union.slct()}
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6537
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6539
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6547
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[4].union.expr()}}},
				},
			}
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6555
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6563
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6564
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6574
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ExecutorType:   sqlDollar[3].union.executorType(),
			}
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6580
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6582
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: sqlDollar[2].union.scheduleState(),
				ExecutorType:   sqlDollar[4].union.executorType(),
			}
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6588
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6590
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ScheduleID:     sqlDollar[3].union.expr(),
			}
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6596
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6600
		{
			sqlVAL.union.val = tree.ActiveSchedules
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6604
		{
			sqlVAL.union.val = tree.PausedSchedules
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6610
		{
			sqlVAL.union.val = tree.InvalidExecutor
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6614
		{
			sqlVAL.union.val = tree.ScheduledBackupExecutor
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6618
		{
			sqlVAL.union.val = tree.ScheduledSQLStatsCompactionExecutor
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6629
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6632
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6634
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6637
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6639
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6643
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6646
		{
			sqlVAL.union.val = true
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6647
		{
			sqlVAL.union.val = false
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6655
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6658
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6660
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 1125:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6663
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6671
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6681
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 1128:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6691
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6694
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6701
		{
			sqlVAL.union.val = &tree.ShowTransactions{Cluster: sqlDollar[2].union.bool()}
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6704
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6706
		{
			sqlVAL.union.val = &tree.ShowTransactions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6709
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6712
		{
			sqlVAL.union.val = true
		}
	case 1135:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6713
		{
			sqlVAL.union.val = false
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6720
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6724
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 1138:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6727
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6734
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6738
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6741
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6748
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6752
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6756
		{

			sqlVAL.union.val = &tree.ShowCompletions{
				Statement: tree.NewStrVal(sqlDollar[7].str),
				Offset:    sqlDollar[5].union.numVal(),
			}
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6766
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{Columns: sqlDollar[5].union.nameList()}
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6773
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6777
		{

			sqlVAL.union.val = tree.ShowLastQueryStatisticsDefaultColumns
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6788
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6791
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6799
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6804
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6809
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6813
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6820
		{
			sqlVAL.union.val = &tree.ShowTransferState{TransferKey: tree.NewStrVal(sqlDollar[5].str)}
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6824
		{
			sqlVAL.union.val = &tree.ShowTransferState{}
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6827
		{
			return helpWith(sqllex, "SHOW TRANSFER")
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6839
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6843
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeTable, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6848
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeView, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6853
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeSequence, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6858
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeDatabase, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6863
		{

			sqlVAL.union.val = &tree.ShowCreateFunction{
				Name: tree.ResolvableFunctionReference{
					FunctionReference: sqlDollar[4].union.unresolvedObjectName().ToUnresolvedName(),
				},
			}
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6872
		{
			sqlVAL.union.val = &tree.ShowCreateAllSchemas{}
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6876
		{
			sqlVAL.union.val = &tree.ShowCreateAllTables{}
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6880
		{
			sqlVAL.union.val = &tree.ShowCreateAllTypes{}
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6883
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6893
		{
			sqlVAL.union.val = &tree.ShowCreateSchedules{}
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6896
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6898
		{
			sqlVAL.union.val = &tree.ShowCreateSchedules{ScheduleID: sqlDollar[4].union.expr()}
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6901
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6909
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6912
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6920
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6923
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6933
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6937
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6941
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6949
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6957
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6964
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6970
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6972
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6975
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6977
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6980
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6984
		{
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6993
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7001
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7007
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7016
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7021
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7025
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7028
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7037
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{}
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7041
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{
				DatabaseName: tree.Name(sqlDollar[6].str),
			}
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7057
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromCluster,
			}
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7063
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
			}
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7069
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromAllDatabases,
			}
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7075
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
				DatabaseName:    tree.Name(sqlDollar[5].str),
			}
		}
	case 1201:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7082
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDefault,
			}
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7088
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowSuperRegionsFromDatabase,
				DatabaseName:    tree.Name(sqlDollar[6].str),
			}
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7094
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 1204:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7098
		{
			sqlVAL.union.val = &tree.ShowVar{Name: "locality"}
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7104
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7111
		{
			sqlVAL.union.val = &tree.ShowFullTableScans{}
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7117
		{
			tmp := sqlDollar[2].union.grantTargetList()
			sqlVAL.union.val = &tmp
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7122
		{
			sqlVAL.union.val = (*tree.GrantTargetList)(nil)
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7244
		{
			sqlVAL.union.val = tree.GrantTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}}
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7248
		{
			sqlVAL.union.val = tree.GrantTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}}
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7252
		{

			sqlVAL.union.val = tree.GrantTargetList{
				Tables:   tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7291
		{
			sqlVAL.union.val = tree.GrantTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}}
		}
	case 1213:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7295
		{
			sqlVAL.union.val = tree.GrantTargetList{Tables: tree.TableAttrs{SequenceOnly: true, TablePatterns: sqlDollar[2].union.tablePatterns()}}
		}
	case 1214:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7299
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.GrantTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}}
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7304
		{
			sqlVAL.union.val = tree.GrantTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: sqlDollar[2].union.tablePatterns()}}
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7308
		{
			sqlVAL.union.val = tree.GrantTargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7318
		{
			sqlVAL.union.val = tree.BackupTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}}
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7322
		{
			sqlVAL.union.val = tree.BackupTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}}
		}
	case 1219:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7326
		{
			sqlVAL.union.val = tree.BackupTargetList{
				Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}},
			}
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7332
		{
			sqlVAL.union.val = tree.BackupTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}}
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7336
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.BackupTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}}
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7341
		{
			sqlVAL.union.val = tree.BackupTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: sqlDollar[2].union.tablePatterns()}}
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7347
		{
			tenID := uint64(sqlDollar[2].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.BackupTargetList{TenantID: tree.TenantID{Specified: true, ID: tenID}}
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7355
		{

			if sqlDollar[2].str != "_" {
				return setErr(sqllex, errors.New("invalid syntax"))
			}
			sqlVAL.union.val = tree.BackupTargetList{TenantID: tree.TenantID{Specified: true}}
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7364
		{
			sqlVAL.union.val = tree.BackupTargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7373
		{
			sqlVAL.union.val = tree.GrantTargetList{ForRoles: true, Roles: sqlDollar[2].union.roleSpecList()}
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7377
		{
			sqlVAL.union.val = tree.GrantTargetList{Schemas: sqlDollar[2].union.objectNamePrefixList()}
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7381
		{
			sqlVAL.union.val = tree.GrantTargetList{Schemas: sqlDollar[2].union.objectNamePrefixList()}
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7385
		{
			sqlVAL.union.val = tree.GrantTargetList{Types: sqlDollar[2].union.unresolvedObjectNames()}
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7393
		{
			sqlVAL.union.val = sqlDollar[2].union.roleSpecList()
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7397
		{
			sqlVAL.union.val = tree.RoleSpecList(nil)
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7410
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7411
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7412
		{
			return helpWith(sqllex, "PAUSE ALL JOBS")
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7413
		{
			return helpWith(sqllex, "PAUSE")
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7423
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7424
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7425
		{
			return helpWith(sqllex, "RESUME ALL JOBS")
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7426
		{
			return helpWith(sqllex, "RESUME")
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7434
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.ResumeJob}
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7437
		{
			return helpWith(sqllex, "RESUME ALL JOBS")
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7447
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7456
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
				Reason:  sqlDollar[7].union.expr(),
			}
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7465
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7467
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7471
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob, Reason: sqlDollar[7].union.expr()}
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7475
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7478
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7483
		{
			sqlVAL.union.val = sqlDollar[3].union.slct()
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7487
		{
			sqlVAL.union.val = &tree.Select{
				Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
			}
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7502
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseSchedule,
			}
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7510
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7512
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.PauseSchedule,
			}
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7518
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7526
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.PauseJob}
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7529
		{
			return helpWith(sqllex, "PAUSE ALL JOBS")
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7538
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
			}
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7544
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
			}
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7551
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:   sqlDollar[3].union.objectNamePrefix(),
				AuthRole: sqlDollar[5].union.roleSpec(),
			}
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7558
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
				AuthRole:    sqlDollar[8].union.roleSpec(),
			}
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7565
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7576
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7585
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaOwner{
					Owner: sqlDollar[6].union.roleSpec(),
				},
			}
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7593
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:7629
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      false,
				Defs:             sqlDollar[6].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[9].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[10].union.storageParams(),
				OnCommit:         sqlDollar[11].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[12].union.locality(),
			}
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:7644
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      true,
				Defs:             sqlDollar[9].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[12].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[13].union.storageParams(),
				OnCommit:         sqlDollar[14].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[15].union.locality(),
			}
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7661
		{
			sqlVAL.union.val = sqlDollar[1].union.locality()
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7665
		{
			sqlVAL.union.val = (*tree.Locality)(nil)
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7672
		{

			sqlVAL.union.val = nil
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7678
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7684
		{
			sqlVAL.str = ""
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7688
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "create table inherits")
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7694
		{
			sqlVAL.union.val = nil
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7698
		{
			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7703
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7707
		{
			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7711
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7715
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7725
		{
			sqlVAL.union.val = []tree.Name{tree.Name(sqlDollar[1].str)}
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7729
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParamKeys(), tree.Name(sqlDollar[3].str))
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7735
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7741
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7745
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7751
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:7764
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7778
		{
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7779
		{
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7780
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7798
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7799
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1301:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7800
		{
			sqlVAL.union.val = tree.PersistencePermanent
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7804
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7805
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7806
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7807
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7808
		{
			sqlVAL.union.val = tree.PersistenceUnlogged
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7813
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7819
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7823
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7829
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7835
		{
			def := sqlDollar[1].union.constraintDef()
			valBehavior := sqlDollar[2].union.validationBehavior()
			if u, ok := def.(*tree.UniqueConstraintTableDef); ok && valBehavior == tree.ValidationSkip {
				typ := "PRIMARY KEY"
				if !u.PrimaryKey {
					typ = "UNIQUE"
				}
				return purposelyUnimplemented(sqllex, "table constraint", typ+" constraints cannot be marked NOT VALID")
			}
			sqlVAL.union.val = def
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7848
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7857
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 1318:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7861
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7867
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7872
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7873
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 1322:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7874
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 1323:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7875
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7876
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7877
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7878
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7879
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7880
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 1329:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7885
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1331:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7892
		{
			sqlVAL.str = ""
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7899
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7905
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1335:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7913
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7919
		{
			sqlVAL.union.val = (*tree.PartitionByIndex)(nil)
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7925
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7931
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				All:         true,
				PartitionBy: sqlDollar[4].union.partitionBy(),
			}
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7941
		{
			sqlVAL.union.val = (*tree.PartitionByTable)(nil)
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7947
		{
			sqlVAL.union.val = sqlDollar[3].union.partitionBy()
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7953
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				List:   sqlDollar[6].union.listPartitions(),
			}
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7960
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				Range:  sqlDollar[6].union.rangePartitions(),
			}
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7967
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7973
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7977
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7983
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7993
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7997
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8003
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8017
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8028
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8032
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8038
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8042
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8046
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8050
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8054
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8058
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8062
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8080
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8084
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8088
		{
			sqlVAL.union.val = tree.HiddenConstraint{}
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8092
		{
			sqlVAL.union.val = tree.UniqueConstraint{
				WithoutIndex: sqlDollar[2].union.bool(),
			}
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8098
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{
				StorageParams: sqlDollar[3].union.storageParams(),
			}
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8104
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:       true,
				ShardBuckets:  sqlDollar[5].union.expr(),
				StorageParams: sqlDollar[6].union.storageParams(),
			}
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8112
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8116
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8120
		{
			sqlVAL.union.val = &tree.ColumnOnUpdate{Expr: sqlDollar[3].union.expr()}
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8124
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8134
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: false}
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8138
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: true}
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8142
		{
			sqllex.Error("use AS ( <expr> ) STORED or AS ( <expr> ) VIRTUAL")
			return 1
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8147
		{
			sqlVAL.union.val = &tree.GeneratedAlwaysAsIdentity{
				SeqOptions: sqlDollar[4].union.seqOpts(),
			}
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8153
		{
			sqlVAL.union.val = &tree.GeneratedByDefAsIdentity{
				SeqOptions: sqlDollar[4].union.seqOpts(),
			}
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8159
		{
			sqlVAL.union.val = &tree.GeneratedAlwaysAsIdentity{}
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8163
		{
			sqlVAL.union.val = &tree.GeneratedByDefAsIdentity{}
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8169
		{

			sqlVAL.union.val = true
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8174
		{
			sqlVAL.union.val = false
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8179
		{
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8183
		{
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8186
		{
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8190
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[2].str),
				Columns:          sqlDollar[4].union.idxElems(),
				Sharded:          sqlDollar[6].union.shardedIndexDef(),
				Storing:          sqlDollar[7].union.nameList(),
				PartitionByIndex: sqlDollar[8].union.partitionByIndex(),
				StorageParams:    sqlDollar[9].union.storageParams(),
				Predicate:        sqlDollar[10].union.expr(),
				NotVisible:       sqlDollar[11].union.bool(),
			}
		}
	case 1385:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:8203
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:             tree.Name(sqlDollar[3].str),
					Columns:          sqlDollar[5].union.idxElems(),
					Sharded:          sqlDollar[7].union.shardedIndexDef(),
					Storing:          sqlDollar[8].union.nameList(),
					PartitionByIndex: sqlDollar[9].union.partitionByIndex(),
					StorageParams:    sqlDollar[10].union.storageParams(),
					Predicate:        sqlDollar[11].union.expr(),
					NotVisible:       sqlDollar[12].union.bool(),
				},
			}
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8218
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[3].str),
				Columns:          sqlDollar[5].union.idxElems(),
				Inverted:         true,
				PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
				StorageParams:    sqlDollar[8].union.storageParams(),
				Predicate:        sqlDollar[9].union.expr(),
				NotVisible:       sqlDollar[10].union.bool(),
			}
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8232
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8244
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8249
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8255
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8262
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				WithoutIndex: sqlDollar[2].union.bool(),
				IndexTableDef: tree.IndexTableDef{
					Columns:          sqlDollar[4].union.idxElems(),
					Storing:          sqlDollar[6].union.nameList(),
					PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
					Predicate:        sqlDollar[9].union.expr(),
				},
			}
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8274
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:       sqlDollar[4].union.idxElems(),
					Sharded:       sqlDollar[6].union.shardedIndexDef(),
					StorageParams: sqlDollar[7].union.storageParams(),
				},
				PrimaryKey: true,
			}
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8286
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8297
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8304
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8308
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8314
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8324
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8335
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8339
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 1401:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8346
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8352
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:       sqlDollar[4].union.idxElems(),
					StorageParams: sqlDollar[6].union.storageParams(),
				},
				PrimaryKey: true,
			}
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8364
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8368
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8374
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8380
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8384
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8390
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8394
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8400
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{
				StorageParams: sqlDollar[3].union.storageParams(),
			}
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8407
		{
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8408
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8409
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8410
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8411
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8412
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8430
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8434
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8440
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[3].union.expr(),
			}
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8446
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8452
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8456
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8462
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1427:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8466
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8486
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8490
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8494
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8498
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8507
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8511
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8515
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8519
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8523
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 1437:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8529
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8535
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1439:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8543
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8547
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8551
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8555
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8559
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8579
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:        name,
				Persistence: sqlDollar[2].union.persistence(),
				Options:     sqlDollar[5].union.seqOpts(),
			}
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8588
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
			}
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8596
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8600
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8603
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8604
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8607
		{

			parsedType := sqlDollar[2].union.colType()
			if parsedType == nil {
				sqllex.(*lexer).lastError = pgerror.Newf(pgcode.UndefinedObject, "type %q does not exist", sqlDollar[2].union.val)
				sqllex.(*lexer).populateErrorDetails()
				return 1
			}
			if parsedType.Family() != types.IntFamily {
				sqllex.Error(fmt.Sprintf("invalid integer type: %s", parsedType.SQLString()))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptAs, AsIntegerType: parsedType}
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8621
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8623
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8624
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8625
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8635
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8637
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8639
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8641
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 1460:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8643
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8644
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 1462:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8646
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8647
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 1464:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8649
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8651
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptRestart}
		}
	case 1466:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8652
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptRestart, IntVal: &x}
		}
	case 1467:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8654
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptRestart, IntVal: &x, OptionalWord: true}
		}
	case 1468:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8657
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 1469:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8665
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 1470:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8668
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8672
		{

			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[2].str), Value: sqlDollar[3].union.expr()}
		}
	case 1472:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8678
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 1473:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8682
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8692
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.roleSpec(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8696
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.roleSpec(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8699
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8710
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.roleSpec(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8714
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.roleSpec(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8718
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[3].union.roleSpec(), DatabaseName: tree.Name(sqlDollar[4].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8722
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[5].union.roleSpec(), IfExists: true, DatabaseName: tree.Name(sqlDollar[6].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[7].union.setVar()}
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8726
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: true, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8730
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: false, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8733
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8737
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8741
		{
			sqlVAL.str = ""
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8749
		{
			sqlVAL.union.val = sqlDollar[2].union.setVar()
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8753
		{

			sqlVAL.union.val = sqlDollar[2].union.setVar()
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8760
		{
			sqlVAL.union.val = &tree.SetVar{ResetAll: true}
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8764
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8772
		{
			sqlVAL.union.val = true
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8776
		{

			sqlVAL.union.val = true
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8781
		{
			sqlVAL.union.val = false
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8793
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8807
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Persistence: sqlDollar[4].union.persistence(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8819
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8831
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[5].union.nameList(),
				AsSource:     sqlDollar[7].union.slct(),
				Materialized: true,
				WithData:     sqlDollar[8].union.bool(),
			}
		}
	case 1497:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8842
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[8].union.nameList(),
				AsSource:     sqlDollar[10].union.slct(),
				Materialized: true,
				IfNotExists:  true,
				WithData:     sqlDollar[11].union.bool(),
			}
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8853
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8857
		{
			sqlVAL.union.val = false
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8861
		{
			sqlVAL.union.val = true
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8865
		{
			sqlVAL.union.val = true
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8871
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8875
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8879
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8883
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8887
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8891
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8895
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8899
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8903
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8907
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8911
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8915
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8919
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8923
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8927
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8931
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8935
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1519:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8939
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8943
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1521:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8947
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1522:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8951
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1523:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8955
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1524:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8959
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1525:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8963
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8971
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8975
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8981
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8985
		{
			sqlVAL.union.val = nil
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8991
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name("valid until"), Value: sqlDollar[3].union.expr()}
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8995
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name("valid until"), Value: tree.DNull}
		}
	case 1534:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9000
		{
		}
	case 1535:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9001
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9010
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.enumValueList(),
			}
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:9018
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:    sqlDollar[6].union.unresolvedObjectName(),
				Variety:     tree.Enum,
				EnumLabels:  sqlDollar[10].union.enumValueList(),
				IfNotExists: true,
			}
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9026
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9028
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9030
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9032
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9034
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9036
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9040
		{
			sqlVAL.union.val = sqlDollar[1].union.enumValueList()
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9044
		{
			sqlVAL.union.val = tree.EnumValueList(nil)
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9050
		{
			sqlVAL.union.val = tree.EnumValueList{tree.EnumValue(sqlDollar[1].str)}
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9054
		{
			sqlVAL.union.val = append(sqlDollar[1].union.enumValueList(), tree.EnumValue(sqlDollar[3].str))
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-17 : sqlpt+1]
//line sql-gen.y:9071
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[5].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Columns:          sqlDollar[10].union.idxElems(),
				Sharded:          sqlDollar[12].union.shardedIndexDef(),
				Storing:          sqlDollar[13].union.nameList(),
				PartitionByIndex: sqlDollar[14].union.partitionByIndex(),
				StorageParams:    sqlDollar[15].union.storageParams(),
				Predicate:        sqlDollar[16].union.expr(),
				Inverted:         sqlDollar[8].union.bool(),
				Concurrently:     sqlDollar[4].union.bool(),
				NotVisible:       sqlDollar[17].union.bool(),
			}
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-20 : sqlpt+1]
//line sql-gen.y:9089
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[8].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Sharded:          sqlDollar[15].union.shardedIndexDef(),
				Storing:          sqlDollar[16].union.nameList(),
				PartitionByIndex: sqlDollar[17].union.partitionByIndex(),
				Inverted:         sqlDollar[11].union.bool(),
				StorageParams:    sqlDollar[18].union.storageParams(),
				Predicate:        sqlDollar[19].union.expr(),
				Concurrently:     sqlDollar[4].union.bool(),
				NotVisible:       sqlDollar[20].union.bool(),
			}
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:9108
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[6].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				Columns:          sqlDollar[10].union.idxElems(),
				Storing:          sqlDollar[12].union.nameList(),
				PartitionByIndex: sqlDollar[13].union.partitionByIndex(),
				StorageParams:    sqlDollar[14].union.storageParams(),
				Predicate:        sqlDollar[15].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
				NotVisible:       sqlDollar[16].union.bool(),
			}
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:9125
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[9].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Storing:          sqlDollar[15].union.nameList(),
				PartitionByIndex: sqlDollar[16].union.partitionByIndex(),
				StorageParams:    sqlDollar[17].union.storageParams(),
				Predicate:        sqlDollar[18].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
				NotVisible:       sqlDollar[19].union.bool(),
			}
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9142
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9146
		{

			switch sqlDollar[2].str {
			case "gin", "gist":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9161
		{
			sqlVAL.union.val = false
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9167
		{
			sqlVAL.union.val = true
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9171
		{
			sqlVAL.union.val = false
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9177
		{
			sqlVAL.union.val = true
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9181
		{
			sqlVAL.union.val = false
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9187
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9191
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9200
		{
			e := sqlDollar[2].union.idxElem()
			e.Expr = sqlDollar[1].union.expr()
			sqlVAL.union.val = e
		}
	case 1562:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9206
		{
			e := sqlDollar[4].union.idxElem()
			e.Expr = sqlDollar[2].union.expr()
			sqlVAL.union.val = e
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9212
		{
			e := sqlDollar[2].union.idxElem()
			e.Column = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = e
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9220
		{

			opClass := sqlDollar[1].str
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = tree.IndexElem{Direction: dir, NullsOrder: nullsOrder, OpClass: tree.Name(opClass)}
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9238
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9239
		{
			sqlVAL.str = ""
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9242
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9243
		{
			sqlVAL.str = ""
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9247
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9251
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9255
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1572:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9261
		{
			sqlVAL.union.val = true
		}
	case 1573:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9265
		{
			sqlVAL.union.val = false
		}
	case 1574:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9269
		{
			sqlVAL.union.val = false
		}
	case 1575:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:9275
		{
			sqlVAL.union.val = &tree.ReparentDatabase{Name: tree.Name(sqlDollar[3].str), Parent: tree.Name(sqlDollar[9].str)}
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9281
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9287
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9293
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9301
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false,
			}
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9307
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true,
			}
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9315
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Locality: sqlDollar[5].union.locality(),
				IfExists: false,
			}
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9323
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Locality: sqlDollar[7].union.locality(),
				IfExists: true,
			}
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9333
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9339
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[6].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9346
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9352
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9358
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[4].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9365
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9371
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9377
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9383
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel:       tree.LocalityLevelRow,
				RegionalByRowColumn: tree.Name(sqlDollar[6].str),
			}
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9392
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.roleSpec(),
				IfExists: false,
			}
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9400
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.roleSpec(),
				IfExists: true,
			}
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9410
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsView: true,
			}
		}
	case 1595:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9416
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[7].str),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9426
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsView: true,
			}
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:9432
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[9].str),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9444
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.roleSpec(),
				IfExists: false,
				IsView:   true,
			}
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9453
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Owner:          sqlDollar[7].union.roleSpec(),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9463
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.roleSpec(),
				IfExists: true,
				IsView:   true,
			}
		}
	case 1601:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:9472
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Owner:          sqlDollar[9].union.roleSpec(),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9484
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsSequence: true,
			}
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9490
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsSequence: true,
			}
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9498
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[3].union.unresolvedObjectName(),
				Owner:      sqlDollar[6].union.roleSpec(),
				IfExists:   false,
				IsSequence: true,
			}
		}
	case 1605:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9507
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[5].union.unresolvedObjectName(),
				Owner:      sqlDollar[8].union.roleSpec(),
				IfExists:   true,
				IsSequence: true,
			}
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9518
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9524
		{
			name := sqlDollar[4].union.unresolvedObjectName()
			newName := sqlDollar[7].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9536
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:9542
		{
			name := sqlDollar[6].union.unresolvedObjectName()
			newName := sqlDollar[9].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9556
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9562
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9570
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9574
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9586
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.roleSpecList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Grant:   sqlDollar[6].union.abbreviatedGrant(),
				IsGrant: true,
			}
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9595
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.roleSpecList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Revoke:  sqlDollar[6].union.abbreviatedRevoke(),
				IsGrant: false,
			}
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9604
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Grant:       sqlDollar[8].union.abbreviatedGrant(),
				IsGrant:     true,
			}
		}
	case 1617:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9613
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Revoke:      sqlDollar[8].union.abbreviatedRevoke(),
				IsGrant:     false,
			}
		}
	case 1618:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9621
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9625
		{
			sqlVAL.union.val = tree.AbbreviatedGrant{
				Privileges:      sqlDollar[2].union.privilegeList(),
				Target:          sqlDollar[4].union.targetObjectType(),
				Grantees:        sqlDollar[6].union.roleSpecList(),
				WithGrantOption: sqlDollar[7].union.bool(),
			}
		}
	case 1620:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9636
		{
			sqlVAL.union.val = true
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9640
		{
			sqlVAL.union.val = false
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9646
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Target:     sqlDollar[4].union.targetObjectType(),
				Grantees:   sqlDollar[6].union.roleSpecList(),
			}
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:9654
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges:     sqlDollar[5].union.privilegeList(),
				Target:         sqlDollar[7].union.targetObjectType(),
				Grantees:       sqlDollar[9].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9665
		{
			sqlVAL.union.val = privilege.Tables
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9669
		{
			sqlVAL.union.val = privilege.Sequences
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9673
		{
			sqlVAL.union.val = privilege.Types
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9677
		{
			sqlVAL.union.val = privilege.Schemas
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9681
		{
			sqlVAL.union.val = privilege.Functions
		}
	case 1629:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9685
		{
			return unimplemented(sqllex, "ALTER DEFAULT PRIVILEGES ... ON ROUTINES ...")
		}
	case 1630:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9691
		{
			sqlVAL.union.val = sqlDollar[3].union.roleSpecList()
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9694
		{
			sqlVAL.union.val = tree.RoleSpecList(nil)
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9700
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1633:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9704
		{
			sqlVAL.str = ""
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9711
		{
			sqlVAL.union.val = sqlDollar[3].union.objectNamePrefixList()
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9715
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{}
		}
	case 1636:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9720
		{
		}
	case 1637:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9721
		{
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9724
		{
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9725
		{
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9733
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1641:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9736
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1642:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9746
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1643:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9754
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1644:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9756
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9760
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1646:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9763
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9776
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeSchedule,
			}
		}
	case 1648:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9784
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1649:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9786
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.ResumeSchedule,
			}
		}
	case 1650:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9792
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9805
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.DropSchedule,
			}
		}
	case 1652:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9813
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9815
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.DropSchedule,
			}
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9821
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1655:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9829
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1656:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9832
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1658:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9836
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9837
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9838
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9854
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9857
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9867
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9870
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9874
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9879
		{
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9880
		{
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9881
		{
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9891
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9895
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1674:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9898
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9904
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9905
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9909
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9912
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9916
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9919
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9923
		{
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9924
		{
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9928
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9932
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9938
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9942
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9948
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9952
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9965
		{
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9967
		{
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9971
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9976
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9980
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9984
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9988
		{
			sqlVAL.union.val = tree.TransactionModes{Deferrable: sqlDollar[1].union.deferrableMode()}
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9994
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10000
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1700:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10006
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1701:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10010
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1702:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10016
		{
			sqlVAL.union.val = tree.Deferrable
		}
	case 1703:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10020
		{
			sqlVAL.union.val = tree.NotDeferrable
		}
	case 1704:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:10030
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:            tree.Name(sqlDollar[3].str),
				Template:        sqlDollar[5].str,
				Encoding:        sqlDollar[6].str,
				Collate:         sqlDollar[7].str,
				CType:           sqlDollar[8].str,
				ConnectionLimit: sqlDollar[9].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[10].str),
				Regions:         sqlDollar[11].union.nameList(),
				SurvivalGoal:    sqlDollar[12].union.survivalGoal(),
				Placement:       sqlDollar[13].union.dataPlacement(),
				Owner:           sqlDollar[14].union.roleSpec(),
				SecondaryRegion: tree.Name(sqlDollar[15].str),
			}
		}
	case 1705:
		sqlDollar = sqlS[sqlpt-17 : sqlpt+1]
//line sql-gen.y:10047
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists:     true,
				Name:            tree.Name(sqlDollar[6].str),
				Template:        sqlDollar[8].str,
				Encoding:        sqlDollar[9].str,
				Collate:         sqlDollar[10].str,
				CType:           sqlDollar[11].str,
				ConnectionLimit: sqlDollar[12].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[13].str),
				Regions:         sqlDollar[14].union.nameList(),
				SurvivalGoal:    sqlDollar[15].union.survivalGoal(),
				Placement:       sqlDollar[16].union.dataPlacement(),
				SecondaryRegion: tree.Name(sqlDollar[17].str),
			}
		}
	case 1706:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10063
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1708:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10068
		{
			sqlVAL.str = ""
		}
	case 1709:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10073
		{
			sqlVAL.str = sqlDollar[4].str
		}
	case 1711:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10080
		{
			sqlVAL.str = ""
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10085
		{
			sqlVAL.str = sqlDollar[4].str
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10092
		{
			sqlVAL.union.val = tree.DataPlacementUnspecified
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10098
		{

			sqlVAL.union.val = tree.DataPlacementRestricted
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10103
		{

			sqlVAL.union.val = tree.DataPlacementDefault
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10110
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1718:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10114
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1719:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10120
		{

		}
	case 1721:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10127
		{
			sqlVAL.union.val = tree.SurvivalGoalRegionFailure
		}
	case 1722:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10131
		{
			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1723:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10135
		{

			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1725:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10144
		{
			sqlVAL.union.val = tree.SurvivalGoalDefault
		}
	case 1726:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10150
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1727:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10154
		{
			sqlVAL.str = ""
		}
	case 1728:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10160
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1729:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10164
		{
			sqlVAL.str = ""
		}
	case 1730:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10170
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1731:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10174
		{
			sqlVAL.str = ""
		}
	case 1732:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10180
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1733:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10184
		{
			sqlVAL.str = ""
		}
	case 1734:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10190
		{
			ret, err := sqlDollar[4].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = ret
		}
	case 1735:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10198
		{
			sqlVAL.union.val = int32(-1)
		}
	case 1736:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10204
		{
			sqlVAL.union = sqlDollar[3].union
		}
	case 1737:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10208
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.CurrentUser,
			}
		}
	case 1738:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10215
		{
		}
	case 1739:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10216
		{
		}
	case 1740:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10231
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1741:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10238
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1742:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10245
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1743:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10256
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1744:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10263
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1745:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10267
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1746:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10276
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1747:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10281
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1748:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10287
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1749:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10291
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1750:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10295
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1751:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10301
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1752:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10305
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1754:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10325
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1755:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10329
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:   tree.NameList(nil),
				DoNothing: true,
			}
		}
	case 1756:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10336
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				DoNothing:        true,
			}
		}
	case 1757:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:10344
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				Exprs:            sqlDollar[10].union.updateExprs(),
				Where:            tree.NewWhere(tree.AstWhere, sqlDollar[11].union.expr()),
			}
		}
	case 1758:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10353
		{
			sqlVAL.union.val = &tree.OnConflict{
				Constraint: tree.Name(sqlDollar[5].str),
				DoNothing:  true,
			}
		}
	case 1759:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:10360
		{
			sqlVAL.union.val = &tree.OnConflict{
				Constraint: tree.Name(sqlDollar[5].str),
				Exprs:      sqlDollar[9].union.updateExprs(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[10].union.expr()),
			}
		}
	case 1760:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10370
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1761:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10375
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1762:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10379
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1763:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:10396
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1764:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10408
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1765:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10411
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1766:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10414
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1767:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10420
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1768:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10424
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1771:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10437
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1772:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10440
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1773:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10444
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1774:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10455
		{
			sqlVAL.union.val = &tree.ReassignOwnedBy{
				OldRoles: sqlDollar[4].union.roleSpecList(),
				NewRole:  sqlDollar[6].union.roleSpec(),
			}
		}
	case 1775:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10461
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 1776:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10470
		{
			sqlVAL.union.val = &tree.DropOwnedBy{
				Roles:        sqlDollar[4].union.roleSpecList(),
				DropBehavior: sqlDollar[5].union.dropBehavior(),
			}
		}
	case 1777:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10476
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 1779:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10517
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1780:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10523
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1781:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10527
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1782:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10542
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1783:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10546
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1784:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10550
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1785:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10554
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1786:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10558
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1787:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10562
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1788:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10566
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1789:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10570
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1790:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10575
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1791:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10576
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1792:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10579
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1793:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10580
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1794:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10584
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1795:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10588
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1796:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10594
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1797:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10603
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1798:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10604
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1799:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10605
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1800:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10606
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1801:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10609
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1802:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10610
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1803:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10613
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1804:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10614
		{
			sqlVAL.union.val = tree.LockWaitSkipLocked
		}
	case 1805:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10615
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1806:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10620
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1810:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10655
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1812:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10656
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1814:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10657
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1816:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10679
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1817:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10692
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1818:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10706
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1819:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10718
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1820:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10722
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1821:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10731
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1822:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10740
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1823:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10755
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1824:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10762
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1825:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10774
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1826:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10778
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1827:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10783
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1828:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10789
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1829:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10793
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1830:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10799
		{
			sqlVAL.union.val = true
		}
	case 1831:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10803
		{
			sqlVAL.union.val = false
		}
	case 1832:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10809
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1833:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10819
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1834:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10831
		{
		}
	case 1835:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10832
		{
		}
	case 1836:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10836
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1837:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10840
		{
			sqlVAL.union.val = nil
		}
	case 1838:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10845
		{
		}
	case 1839:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10846
		{
		}
	case 1840:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10850
		{
			sqlVAL.union.val = true
		}
	case 1841:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10854
		{
			sqlVAL.union.val = false
		}
	case 1842:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10858
		{
			sqlVAL.union.val = false
		}
	case 1843:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10864
		{
			sqlVAL.union.val = true
		}
	case 1844:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10870
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1845:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10875
		{
		}
	case 1846:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10876
		{
		}
	case 1847:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10879
		{
		}
	case 1848:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10880
		{
		}
	case 1849:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10884
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1850:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10888
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1851:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10894
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1852:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10900
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1853:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10904
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1854:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10911
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1855:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10915
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1856:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10921
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1857:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10933
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1858:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10938
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1859:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10950
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1860:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10954
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1861:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10958
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1862:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10964
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1863:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10973
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1866:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10984
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1867:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10985
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1869:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10989
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1870:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10993
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1871:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10997
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1872:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11011
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1873:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11015
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1874:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11023
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1875:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11030
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1879:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11052
		{
		}
	case 1880:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11053
		{
		}
	case 1881:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11056
		{
		}
	case 1882:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11057
		{
		}
	case 1883:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11074
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1884:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11078
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1885:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11083
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1886:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11084
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1887:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11090
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1888:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11091
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "rollup")
		}
	case 1889:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11092
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "cube")
		}
	case 1890:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11093
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "grouping sets")
		}
	case 1891:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11097
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1892:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11101
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1893:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11120
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1894:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11123
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1895:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11125
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1896:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11137
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1897:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11140
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1898:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11142
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1899:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11148
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1900:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11152
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1901:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11158
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1902:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11162
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1903:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11167
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1904:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11172
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1905:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11178
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1906:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11183
		{
			sqlVAL.union.val = &tree.IndexFlags{NoZigzagJoin: true}
		}
	case 1907:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11188
		{
			sqlVAL.union.val = &tree.IndexFlags{NoFullScan: true}
		}
	case 1908:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11193
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1909:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11199
		{
			sqlVAL.union.val = &tree.IndexFlags{ForceZigzag: true}
		}
	case 1910:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11204
		{
			sqlVAL.union.val = &tree.IndexFlags{ZigzagIndexes: []tree.UnrestrictedName{tree.UnrestrictedName(sqlDollar[3].str)}}
		}
	case 1911:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11209
		{

			sqlVAL.union.val = &tree.IndexFlags{ZigzagIndexIDs: []tree.IndexID{tree.IndexID(sqlDollar[4].union.int64())}}
		}
	case 1912:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11216
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1913:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11221
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1914:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11232
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1915:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11236
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1916:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11240
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1917:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11248
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1918:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11282
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1919:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11292
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1920:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11302
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1921:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11310
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1922:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11319
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1923:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11323
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1924:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11327
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1925:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11338
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1926:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11362
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1927:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11368
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1928:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11379
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1929:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11383
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1930:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11389
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1931:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11391
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1932:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11395
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1933:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11401
		{
		}
	case 1934:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11403
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1935:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11406
		{
			sqlVAL.union.val = nil
		}
	case 1936:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11407
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1937:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11408
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1938:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11412
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1939:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11416
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1940:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11422
		{
			sqlVAL.union.val = true
		}
	case 1941:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11426
		{
			sqlVAL.union.val = false
		}
	case 1942:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11446
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1943:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11450
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 1944:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11454
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 1945:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11458
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 1946:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11462
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 1947:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11466
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1948:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11472
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 1949:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11476
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 1951:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11483
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 1952:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11489
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 1954:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11496
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 1955:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11502
		{
			sqlVAL.str = tree.AstFull
		}
	case 1956:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11506
		{
			sqlVAL.str = tree.AstLeft
		}
	case 1957:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11510
		{
			sqlVAL.str = tree.AstRight
		}
	case 1958:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11514
		{
			sqlVAL.str = tree.AstInner
		}
	case 1959:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11520
		{
		}
	case 1960:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11521
		{
		}
	case 1961:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11545
		{
			sqlVAL.str = tree.AstHash
		}
	case 1962:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11549
		{
			sqlVAL.str = tree.AstMerge
		}
	case 1963:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11553
		{
			sqlVAL.str = tree.AstLookup
		}
	case 1964:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11557
		{
			sqlVAL.str = tree.AstInverted
		}
	case 1965:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11561
		{
			sqlVAL.str = ""
		}
	case 1966:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11574
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 1967:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11578
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 1968:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11583
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1969:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11584
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1970:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11585
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 1971:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11586
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 1972:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11590
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 1973:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11595
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 1974:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11609
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1975:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11613
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 1976:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11619
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 1977:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11625
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1978:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11635
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[3].union.indexFlags(),
			}
		}
	case 1979:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11645
		{
			sqlVAL.union.val = true
		}
	case 1980:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11649
		{
			sqlVAL.union.val = false
		}
	case 1981:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11655
		{
			sqlVAL.union.val = true
		}
	case 1982:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11659
		{
			sqlVAL.union.val = false
		}
	case 1983:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11665
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1985:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11672
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1986:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11684
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 1987:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11697
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1988:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11705
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1989:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11706
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1990:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11716
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1991:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11723
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 1992:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11724
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1993:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11726
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 1994:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11734
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1995:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11735
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 1997:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11747
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1998:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11754
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1999:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11763
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.QChar
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 2000:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11803
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.OIDTypeReference{OID: oid.Oid(id)}
		}
	case 2001:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11808
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 2006:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11815
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 2007:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11816
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 2008:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11819
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 2009:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11820
		{
			sqlVAL.union.val = geopb.ShapeType_PointM
		}
	case 2010:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11821
		{
			sqlVAL.union.val = geopb.ShapeType_PointZ
		}
	case 2011:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11822
		{
			sqlVAL.union.val = geopb.ShapeType_PointZM
		}
	case 2012:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11823
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 2013:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11824
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringM
		}
	case 2014:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11825
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZ
		}
	case 2015:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11826
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZM
		}
	case 2016:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11827
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 2017:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11828
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonM
		}
	case 2018:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11829
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZ
		}
	case 2019:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11830
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZM
		}
	case 2020:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11831
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 2021:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11832
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointM
		}
	case 2022:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11833
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZ
		}
	case 2023:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11834
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZM
		}
	case 2024:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11835
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 2025:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11836
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringM
		}
	case 2026:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11837
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZ
		}
	case 2027:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11838
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZM
		}
	case 2028:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11839
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 2029:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11840
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonM
		}
	case 2030:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11841
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZ
		}
	case 2031:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11842
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZM
		}
	case 2032:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11843
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 2033:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11844
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionM
		}
	case 2034:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11845
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZ
		}
	case 2035:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11846
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZM
		}
	case 2036:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11847
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 2037:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11848
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryM
		}
	case 2038:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11849
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZ
		}
	case 2039:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11850
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZM
		}
	case 2040:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11853
		{
			sqlVAL.union.val = types.Geography
		}
	case 2041:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11854
		{
			sqlVAL.union.val = types.Geometry
		}
	case 2042:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11855
		{
			sqlVAL.union.val = types.Box2D
		}
	case 2043:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11857
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 2044:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11861
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 2045:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11865
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 2046:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11873
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 2052:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11899
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 2053:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11907
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 2054:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11915
		{
			sqlVAL.union.val = nil
		}
	case 2055:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11922
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 2056:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11926
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 2057:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11930
		{
			sqlVAL.union.val = types.Int2
		}
	case 2058:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11934
		{
			sqlVAL.union.val = types.Int
		}
	case 2059:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11938
		{
			sqlVAL.union.val = types.Float4
		}
	case 2060:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11942
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 2061:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11946
		{
			sqlVAL.union.val = types.Float
		}
	case 2062:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11950
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 2063:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11958
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 2064:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11966
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 2065:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11974
		{
			sqlVAL.union.val = types.Bool
		}
	case 2066:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11980
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 2067:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11993
		{
			sqlVAL.union.val = types.Float
		}
	case 2068:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11999
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 2069:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12005
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 2070:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12013
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 2071:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12017
		{
			sqlVAL.union.val = types.VarBit
		}
	case 2072:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12021
		{
			sqlVAL.union.val = types.VarBit
		}
	case 2073:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12027
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 2074:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12039
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 2075:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12045
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 2076:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12049
		{
			sqlVAL.union.val = types.VarChar
		}
	case 2077:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12053
		{
			sqlVAL.union.val = types.VarChar
		}
	case 2078:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12057
		{
			sqlVAL.union.val = types.String
		}
	case 2081:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12066
		{
			sqlVAL.union.val = true
		}
	case 2082:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12067
		{
			sqlVAL.union.val = false
		}
	case 2083:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12072
		{
			sqlVAL.union.val = types.Date
		}
	case 2084:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12076
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 2085:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12084
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 2086:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12096
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 2087:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12098
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 2088:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12107
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 2089:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12115
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 2090:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12128
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 2091:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12132
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 2092:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12142
		{
			sqlVAL.union.val = true
		}
	case 2093:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12143
		{
			sqlVAL.union.val = false
		}
	case 2094:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12144
		{
			sqlVAL.union.val = false
		}
	case 2095:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12148
		{
			sqlVAL.union.val = types.Interval
		}
	case 2096:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12152
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 2097:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12156
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 2098:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12167
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 2099:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12175
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 2100:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12183
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 2101:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12191
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 2102:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12199
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 2103:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12207
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 2104:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12213
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 2105:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12222
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 2106:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12231
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 2107:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12240
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 2108:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12246
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 2109:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12255
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 2110:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12261
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 2112:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12271
		{
			sqlVAL.union.val = nil
		}
	case 2113:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12277
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 2114:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12285
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 2116:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12322
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 2117:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12326
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 2118:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12330
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 2119:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12334
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 2120:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12345
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2121:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12350
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 2122:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12354
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 2123:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12358
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnarySqrt), Expr: sqlDollar[2].union.expr()}
		}
	case 2124:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12362
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryCbrt), Expr: sqlDollar[2].union.expr()}
		}
	case 2125:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12366
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2126:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12370
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2127:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12374
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2128:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12378
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2129:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12382
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2130:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12386
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2131:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12390
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2132:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12394
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2133:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12398
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2134:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12402
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2135:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12406
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2136:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12410
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2137:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12414
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.JSONExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2138:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12418
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.JSONSomeExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2139:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12422
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.JSONAllExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2140:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12426
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.Contains), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2141:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12430
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.ContainedBy), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2142:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12434
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2143:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12438
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2144:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12442
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2145:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12446
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2146:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12450
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchVal), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2147:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12454
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchText), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2148:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12458
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchValPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2149:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12462
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchTextPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2150:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12466
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 2151:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12470
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 2152:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12474
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.Overlaps), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2153:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12478
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 2154:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12482
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2155:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12486
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2156:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12490
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2157:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12494
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 2158:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12502
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 2159:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12512
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2160:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12516
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2161:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12520
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 2162:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12524
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 2163:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12528
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.Like), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2164:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12532
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2165:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12536
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotLike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2166:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12540
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 2167:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12544
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.ILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2168:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12548
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2169:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12552
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2170:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12556
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 2171:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12560
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.SimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2172:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12564
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 2173:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12568
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotSimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 2174:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12572
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 2175:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12576
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.RegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2176:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12580
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotRegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2177:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12584
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.RegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2178:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12588
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotRegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2179:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12592
		{
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator: treecmp.MakeComparisonOperator(treecmp.EQ),
				Left:     sqlDollar[1].union.expr(),
				Right:    tree.NewNumVal(constant.MakeFloat64(math.NaN()), "NaN", false),
			}
		}
	case 2180:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12600
		{
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator: treecmp.MakeComparisonOperator(treecmp.NE),
				Left:     sqlDollar[1].union.expr(),
				Right:    tree.NewNumVal(constant.MakeFloat64(math.NaN()), "NaN", false),
			}
		}
	case 2181:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12608
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2182:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12612
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2183:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12616
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2184:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12620
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2185:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12624
		{
			t1, t2 := sqlDollar[1].union.tuple(), sqlDollar[3].union.tuple()
			if len(t1.Exprs) != 2 {
				sqllex.Error("wrong number of parameters on left side of OVERLAPS expression")
				return 1
			}
			if len(t2.Exprs) != 2 {
				sqllex.Error("wrong number of parameters on right side of OVERLAPS expression")
				return 1
			}
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("overlaps"), Exprs: tree.Exprs{t1.Exprs[0], t1.Exprs[1], t2.Exprs[0], t2.Exprs[1]}}
		}
	case 2186:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12637
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 2187:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12641
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 2188:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12645
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 2189:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12649
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 2190:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12653
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 2191:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12657
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 2192:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12661
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 2193:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12665
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 2194:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12669
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 2195:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12673
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 2196:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12677
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 2197:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12681
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 2198:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12685
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 2199:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12689
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 2200:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12693
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.In), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2201:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12697
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotIn), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2202:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12701
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(treecmp.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 2203:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12718
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 2204:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12723
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 2206:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12735
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 2207:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12739
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 2208:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12743
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2209:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12747
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 2210:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12751
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 2211:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12755
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2212:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12759
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2213:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12763
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2214:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12767
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2215:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12771
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2216:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12775
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2217:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12779
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2218:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12783
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2219:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12787
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2220:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12791
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2221:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12795
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2222:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12799
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2223:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12803
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2224:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12807
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2225:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12811
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2226:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12815
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2227:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12819
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2228:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12823
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2229:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12827
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2230:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12831
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 2231:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12839
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 2232:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12849
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 2233:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12853
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 2234:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12857
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 2235:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12861
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 2237:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12875
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 2239:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12883
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 2240:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12919
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 2241:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12923
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 2242:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12927
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 2243:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12931
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 2244:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12935
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 2245:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12940
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 2246:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12942
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2247:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12946
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2248:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12950
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 2249:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12954
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 2250:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12958
		{
			sqlVAL.union.val = tree.DNull
		}
	case 2251:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12962
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 2252:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12966
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 2253:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12975
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 2254:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12982
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 2255:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12986
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: tree.Name(sqlDollar[5].str)}
		}
	case 2256:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12990
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			if idx <= 0 {
				err := errors.New("invalid numeric tuple index: indexes must be > 0")
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 2257:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13000
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 2259:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13005
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2260:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13009
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2261:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13013
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 2262:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13017
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 2263:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13021
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2264:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13024
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 2265:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13028
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 2266:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13032
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 2267:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13035
		{
			return unimplemented(sqllex, "variadic")
		}
	case 2268:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:13036
		{
			return unimplemented(sqllex, "variadic")
		}
	case 2269:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13038
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 2270:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13044
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 2271:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13048
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 2272:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13051
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 2273:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13060
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.QChar, SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var err error
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							typ, err = name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 2274:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13113
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 2275:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13126
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 2276:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13138
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2277:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13147
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2278:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13148
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2279:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13153
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 2280:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13157
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2281:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13161
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2282:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13167
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 2283:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13171
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2284:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13175
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2285:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13179
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2286:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13183
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2287:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13187
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2288:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13193
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2289:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13197
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("session_user")}
		}
	case 2290:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13201
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2291:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13205
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 2292:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13209
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 2293:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:13213
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 2294:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:13217
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 2295:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13221
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 2296:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13225
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 2297:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13229
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 2298:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13233
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 2299:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13237
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2300:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13241
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 2302:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13248
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2303:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13251
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2304:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13253
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2305:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13256
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2306:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13258
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2307:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13262
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2308:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13265
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2309:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13267
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2310:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13271
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2311:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13274
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2312:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13276
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2313:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13280
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2314:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13283
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2315:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13285
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2316:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13289
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2317:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13292
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2318:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13294
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2319:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13297
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2320:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13299
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2321:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13302
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2322:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13304
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2323:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13307
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2324:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13309
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2325:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13312
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2326:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13314
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2327:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13317
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2328:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13319
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2329:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13323
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2330:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13326
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2331:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13327
		{
			return unimplemented(sqllex, "treat")
		}
	case 2332:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13329
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2333:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13333
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2334:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13337
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2335:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13341
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2336:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13345
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2337:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13348
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2338:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13350
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2339:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13353
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2340:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13359
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 2341:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13363
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 2342:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13369
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 2343:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13373
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2344:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13380
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 2345:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13384
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 2346:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13390
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 2347:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13394
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 2348:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13400
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 2349:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13408
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 2350:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13412
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 2351:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13416
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 2352:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13423
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 2354:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13443
		{
			sqlVAL.str = ""
		}
	case 2355:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13449
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 2356:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13453
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2357:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13459
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      treewindow.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2358:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13467
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      treewindow.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2359:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13475
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      treewindow.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2360:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13483
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 2361:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13489
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == treewindow.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == treewindow.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 2362:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13502
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == treewindow.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == treewindow.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == treewindow.CurrentRow && endBound.BoundType == treewindow.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == treewindow.OffsetFollowing && endBound.BoundType == treewindow.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == treewindow.OffsetFollowing && endBound.BoundType == treewindow.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 2363:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13530
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: treewindow.UnboundedPreceding}
		}
	case 2364:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13534
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: treewindow.UnboundedFollowing}
		}
	case 2365:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13538
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: treewindow.CurrentRow}
		}
	case 2366:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13542
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  treewindow.OffsetPreceding,
			}
		}
	case 2367:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13549
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  treewindow.OffsetFollowing,
			}
		}
	case 2368:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13558
		{
			sqlVAL.union.val = treewindow.ExcludeCurrentRow
		}
	case 2369:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13562
		{
			sqlVAL.union.val = treewindow.ExcludeGroup
		}
	case 2370:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13566
		{
			sqlVAL.union.val = treewindow.ExcludeTies
		}
	case 2371:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13570
		{

			sqlVAL.union.val = treewindow.NoExclusion
		}
	case 2372:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13575
		{
			sqlVAL.union.val = treewindow.NoExclusion
		}
	case 2373:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13588
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 2374:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13592
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2376:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13599
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 2377:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13611
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Any)
		}
	case 2378:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13615
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Some)
		}
	case 2379:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13619
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.All)
		}
	case 2380:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13635
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Plus)
		}
	case 2381:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13636
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Minus)
		}
	case 2382:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13637
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Mult)
		}
	case 2383:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13638
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Div)
		}
	case 2384:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13639
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Mod)
		}
	case 2385:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13640
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Pow)
		}
	case 2386:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13641
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.LT)
		}
	case 2387:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13642
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.GT)
		}
	case 2388:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13643
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.EQ)
		}
	case 2389:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13644
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.LE)
		}
	case 2390:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13645
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.GE)
		}
	case 2391:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13646
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NE)
		}
	case 2392:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13648
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.JSONExists)
		}
	case 2393:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13649
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Bitand)
		}
	case 2394:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13650
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Bitor)
		}
	case 2395:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13651
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Bitxor)
		}
	case 2396:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13652
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.FloorDiv)
		}
	case 2397:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13653
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Contains)
		}
	case 2398:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13654
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.ContainedBy)
		}
	case 2399:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13655
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.LShift)
		}
	case 2400:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13656
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.RShift)
		}
	case 2401:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13657
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Concat)
		}
	case 2402:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13658
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchVal)
		}
	case 2403:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13659
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchText)
		}
	case 2404:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13660
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchValPath)
		}
	case 2405:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13661
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchTextPath)
		}
	case 2406:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13662
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.JSONSomeExists)
		}
	case 2407:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13663
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.JSONAllExists)
		}
	case 2408:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13664
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotRegMatch)
		}
	case 2409:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13665
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.RegIMatch)
		}
	case 2410:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13666
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotRegIMatch)
		}
	case 2411:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13667
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Overlaps)
		}
	case 2412:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13668
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryComplement)
		}
	case 2413:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13669
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnarySqrt)
		}
	case 2414:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13670
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryCbrt)
		}
	case 2416:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13675
		{

			if sqlDollar[1].str != "pg_catalog" {
				return unimplementedWithIssue(sqllex, 65017)
			}
			sqlVAL.union = sqlDollar[3].union
		}
	case 2417:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13691
		{
			sqlVAL.union = sqlDollar[3].union
		}
	case 2420:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13698
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Like)
		}
	case 2421:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13699
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotLike)
		}
	case 2422:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13700
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.ILike)
		}
	case 2423:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13701
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotILike)
		}
	case 2424:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13724
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2425:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13728
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2426:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13734
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2427:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13738
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2428:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13742
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2429:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13753
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2430:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13757
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2431:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13763
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2432:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13767
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2434:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13774
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2435:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13780
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2436:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13784
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2437:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13790
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 2438:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13794
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 2439:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13800
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2440:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13804
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2441:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13810
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2442:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13814
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2443:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13820
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(strings.ToLower(sqlDollar[1].str)), sqlDollar[3].union.expr()}
		}
	case 2444:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13824
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2453:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13847
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 2454:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13851
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2455:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13855
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2456:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13861
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2457:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13868
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 2458:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13872
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2459:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13889
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2460:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13893
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2461:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13897
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2462:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13901
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 2463:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13905
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2464:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13911
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2465:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13917
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2466:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13923
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 2467:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13927
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 2468:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13931
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2469:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13937
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2471:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13949
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 2472:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13956
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 2473:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13960
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 2474:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13966
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 2475:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13972
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2476:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13976
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2478:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13983
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2479:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13989
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 2480:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13993
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 2482:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14000
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2483:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14006
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 2484:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14010
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 2485:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14015
		{
		}
	case 2486:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14016
		{
		}
	case 2487:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14020
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 2488:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14024
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 2489:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14030
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 2490:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14039
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 2491:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14043
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2492:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14047
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 2495:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14059
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 2496:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14063
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 2497:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14069
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 2498:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14073
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 2499:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14092
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 2500:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14100
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 2501:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14123
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2503:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14132
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2504:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:14136
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2505:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14140
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2506:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14144
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 2507:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14150
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 2508:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14154
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 2513:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14169
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2514:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14173
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2517:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14185
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2518:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14189
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2519:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14198
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2520:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14209
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2521:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14218
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2522:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14226
		{
			var t *types.T
			if sqlDollar[3].union.val == nil {
				t = types.Interval
			} else {
				t = types.MakeInterval(sqlDollar[3].union.intervalTypeMetadata())
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[2].str),
				Type: t,

				SyntaxMode: tree.CastShort,
			}
		}
	case 2523:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:14243
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[5].str),
				Type: types.MakeInterval(
					types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true},
				),

				SyntaxMode: tree.CastShort,
			}
		}
	case 2542:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14328
		{
			sqlVAL.union.val = sqlDollar[1].union.nameList()
		}
	case 2544:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14336
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{SchemaName: tree.Name(sqlDollar[1].str), ExplicitSchema: true}
		}
	case 2545:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14340
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{CatalogName: tree.Name(sqlDollar[1].str), SchemaName: tree.Name(sqlDollar[3].str), ExplicitCatalog: true, ExplicitSchema: true}
		}
	case 2546:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14346
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{sqlDollar[1].union.objectNamePrefix()}
		}
	case 2547:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14350
		{
			sqlVAL.union.val = append(sqlDollar[1].union.objectNamePrefixList(), sqlDollar[3].union.objectNamePrefix())
		}
	case 2548:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14356
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{sqlDollar[1].union.objectNamePrefix()}
		}
	case 2549:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14362
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{CatalogName: tree.Name(sqlDollar[1].str), SchemaName: tree.Name('*'), ExplicitCatalog: true, ExplicitSchema: true}
		}
	case 2551:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14369
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{ExplicitSchema: false}
		}
	case 2557:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14396
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2559:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14403
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2560:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:14407
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2561:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:14411
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2563:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:14425
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2564:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:14429
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2565:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14433
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2566:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14446
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2568:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14455
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2572:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14473
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2573:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14486
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2574:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:14493
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2582:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14518
		{
			sqlVAL.str = ""
		}
	case 2583:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14524
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 2584:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14528
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
