// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"math"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/security/username"
	"github.com/cockroachdb/cockroach/pkg/sql/lexbase"
	"github.com/cockroachdb/cockroach/pkg/sql/pgwire/pgcode"
	"github.com/cockroachdb/cockroach/pkg/sql/pgwire/pgerror"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/scanner"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree/treebin"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree/treecmp"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree/treewindow"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
	"github.com/lib/pq/oid"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}

func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

func processBinaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	lhs tree.Expr,
	rhs tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case treebin.BinaryOperator:
		op.IsExplicitOperator = true
		return &tree.BinaryExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case treecmp.ComparisonOperator:
		op.IsExplicitOperator = true
		return &tree.ComparisonExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case tree.UnaryOperator:

		switch op.Symbol {
		case tree.UnaryComplement:
			return &tree.ComparisonExpr{
				Operator: treecmp.ComparisonOperator{
					Symbol:             treecmp.RegMatch,
					IsExplicitOperator: true,
				},
				Left:  lhs,
				Right: rhs,
			}, 0
		default:
			sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
			return nil, -1
		}
	default:
		sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
		return nil, 1
	}
}

func processUnaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	e, code := processUnaryQualOpInternal(sqllex, op, expr)
	if code != 0 {
		return e, code
	}
	if e, ok := e.(*tree.UnaryExpr); ok {
		e.Operator.IsExplicitOperator = true
	}
	return e, code
}

func processUnaryQualOpInternal(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case tree.UnaryOperator:
		return &tree.UnaryExpr{Operator: op, Expr: expr}, 0
	case treebin.BinaryOperator:

		switch op.Symbol {
		case treebin.Plus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryPlus),
				Expr:     expr,
			}, 0
		case treebin.Minus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryMinus),
				Expr:     expr,
			}, 0
		}
	case treecmp.ComparisonOperator:
		switch op.Symbol {
		case treecmp.RegMatch:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryComplement),
				Expr:     expr,
			}, 0
		}
	}
	sqllex.Error(fmt.Sprintf("unknown unary operator %s", op))
	return nil, 1
}

//line sql-gen.y:170

var _ scanner.ScanSymType = &sqlSymType{}

func (s *sqlSymType) ID() int32 {
	return s.id
}

func (s *sqlSymType) SetID(id int32) {
	s.id = id
}

func (s *sqlSymType) Pos() int32 {
	return s.pos
}

func (s *sqlSymType) SetPos(pos int32) {
	s.pos = pos
}

func (s *sqlSymType) Str() string {
	return s.str
}

func (s *sqlSymType) SetStr(str string) {
	s.str = str
}

func (s *sqlSymType) UnionVal() interface{} {
	return s.union.val
}

func (s *sqlSymType) SetUnionVal(val interface{}) {
	s.union.val = val
}

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) roleSpec() tree.RoleSpec {
	return u.val.(tree.RoleSpec)
}
func (u *sqlSymUnion) roleSpecList() tree.RoleSpecList {
	return u.val.(tree.RoleSpecList)
}
func (u *sqlSymUnion) user() username.SQLUsername {
	return u.val.(username.SQLUsername)
}
func (u *sqlSymUnion) userPtr() *username.SQLUsername {
	return u.val.(*username.SQLUsername)
}
func (u *sqlSymUnion) users() []username.SQLUsername {
	return u.val.([]username.SQLUsername)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) enumValueList() tree.EnumValueList {
	return u.val.(tree.EnumValueList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) functionReference() tree.FunctionReference {
	return u.val.(tree.FunctionReference)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) storageParamKeys() []tree.Name {
	if params, ok := u.val.([]tree.Name); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistence() tree.Persistence {
	return u.val.(tree.Persistence)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) targetList() tree.TargetList {
	return u.val.(tree.TargetList)
}
func (u *sqlSymUnion) targetListPtr() *tree.TargetList {
	return u.val.(*tree.TargetList)
}
func (u *sqlSymUnion) changefeedTargets() tree.ChangefeedTargets {
	return u.val.(tree.ChangefeedTargets)
}
func (u *sqlSymUnion) changefeedTarget() tree.ChangefeedTarget {
	return u.val.(tree.ChangefeedTarget)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() treewindow.WindowFrameExclusion {
	return u.val.(treewindow.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterChangefeedCmd() tree.AlterChangefeedCmd {
	return u.val.(tree.AlterChangefeedCmd)
}
func (u *sqlSymUnion) alterChangefeedCmds() tree.AlterChangefeedCmds {
	return u.val.(tree.AlterChangefeedCmds)
}
func (u *sqlSymUnion) backupKMS() tree.BackupKMS {
	return u.val.(tree.BackupKMS)
}
func (u *sqlSymUnion) alterBackupCmd() tree.AlterBackupCmd {
	return u.val.(tree.AlterBackupCmd)
}
func (u *sqlSymUnion) alterBackupCmds() tree.AlterBackupCmds {
	return u.val.(tree.AlterBackupCmds)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) deferrableMode() tree.DeferrableMode {
	return u.val.(tree.DeferrableMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) partitionByTable() *tree.PartitionByTable {
	return u.val.(*tree.PartitionByTable)
}
func (u *sqlSymUnion) partitionByIndex() *tree.PartitionByIndex {
	return u.val.(*tree.PartitionByIndex)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) relocateSubject() tree.RelocateSubject {
	return u.val.(tree.RelocateSubject)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() treecmp.ComparisonOperator {
	return u.val.(treecmp.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) copyOptions() *tree.CopyOptions {
	return u.val.(*tree.CopyOptions)
}
func (u *sqlSymUnion) showBackupDetails() tree.ShowBackupDetails {
	return u.val.(tree.ShowBackupDetails)
}
func (u *sqlSymUnion) restoreOptions() *tree.RestoreOptions {
	return u.val.(*tree.RestoreOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) stringOrPlaceholderOptList() tree.StringOrPlaceholderOptList {
	return u.val.(tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) listOfStringOrPlaceholderOptList() []tree.StringOrPlaceholderOptList {
	return u.val.([]tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) fullBackupClause() *tree.FullBackupClause {
	return u.val.(*tree.FullBackupClause)
}

func (u *sqlSymUnion) scheduleLabelSpec() *tree.ScheduleLabelSpec {
	return u.val.(*tree.ScheduleLabelSpec)
}

func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}
func (u *sqlSymUnion) scheduleState() tree.ScheduleState {
	return u.val.(tree.ScheduleState)
}
func (u *sqlSymUnion) executorType() tree.ScheduledJobExecutorType {
	return u.val.(tree.ScheduledJobExecutorType)
}
func (u *sqlSymUnion) refreshDataOption() tree.RefreshDataOption {
	return u.val.(tree.RefreshDataOption)
}
func (u *sqlSymUnion) locality() *tree.Locality {
	return u.val.(*tree.Locality)
}
func (u *sqlSymUnion) survivalGoal() tree.SurvivalGoal {
	return u.val.(tree.SurvivalGoal)
}
func (u *sqlSymUnion) dataPlacement() tree.DataPlacement {
	return u.val.(tree.DataPlacement)
}
func (u *sqlSymUnion) objectNamePrefix() tree.ObjectNamePrefix {
	return u.val.(tree.ObjectNamePrefix)
}
func (u *sqlSymUnion) objectNamePrefixList() tree.ObjectNamePrefixList {
	return u.val.(tree.ObjectNamePrefixList)
}
func (u *sqlSymUnion) abbreviatedGrant() tree.AbbreviatedGrant {
	return u.val.(tree.AbbreviatedGrant)
}
func (u *sqlSymUnion) abbreviatedRevoke() tree.AbbreviatedRevoke {
	return u.val.(tree.AbbreviatedRevoke)
}
func (u *sqlSymUnion) targetObjectType() privilege.TargetObjectType {
	return u.val.(privilege.TargetObjectType)
}
func (u *sqlSymUnion) setVar() *tree.SetVar {
	return u.val.(*tree.SetVar)
}
func (u *sqlSymUnion) cursorSensitivity() tree.CursorSensitivity {
	return u.val.(tree.CursorSensitivity)
}
func (u *sqlSymUnion) cursorScrollOption() tree.CursorScrollOption {
	return u.val.(tree.CursorScrollOption)
}
func (u *sqlSymUnion) cursorStmt() tree.CursorStmt {
	return u.val.(tree.CursorStmt)
}
func (u *sqlSymUnion) asTenantClause() tree.TenantID {
	return u.val.(tree.TenantID)
}

//line sql-gen.y:934
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lexbase.IDENT
const SCONST = lexbase.SCONST
const BCONST = lexbase.BCONST
const BITCONST = lexbase.BITCONST
const ICONST = lexbase.ICONST
const FCONST = lexbase.FCONST
const PLACEHOLDER = lexbase.PLACEHOLDER
const TYPECAST = lexbase.TYPECAST
const TYPEANNOTATE = lexbase.TYPEANNOTATE
const DOT_DOT = lexbase.DOT_DOT
const LESS_EQUALS = lexbase.LESS_EQUALS
const GREATER_EQUALS = lexbase.GREATER_EQUALS
const NOT_EQUALS = lexbase.NOT_EQUALS
const NOT_REGMATCH = lexbase.NOT_REGMATCH
const REGIMATCH = lexbase.REGIMATCH
const NOT_REGIMATCH = lexbase.NOT_REGIMATCH
const ERROR = lexbase.ERROR
const ABORT = lexbase.ABORT
const ABSOLUTE = lexbase.ABSOLUTE
const ACCESS = lexbase.ACCESS
const ACTION = lexbase.ACTION
const ADD = lexbase.ADD
const ADMIN = lexbase.ADMIN
const AFTER = lexbase.AFTER
const AGGREGATE = lexbase.AGGREGATE
const ALL = lexbase.ALL
const ALTER = lexbase.ALTER
const ALWAYS = lexbase.ALWAYS
const ANALYSE = lexbase.ANALYSE
const ANALYZE = lexbase.ANALYZE
const AND = lexbase.AND
const AND_AND = lexbase.AND_AND
const ANY = lexbase.ANY
const ANNOTATE_TYPE = lexbase.ANNOTATE_TYPE
const ARRAY = lexbase.ARRAY
const AS = lexbase.AS
const ASC = lexbase.ASC
const ASENSITIVE = lexbase.ASENSITIVE
const ASYMMETRIC = lexbase.ASYMMETRIC
const AT = lexbase.AT
const ATTRIBUTE = lexbase.ATTRIBUTE
const AUTHORIZATION = lexbase.AUTHORIZATION
const AUTOMATIC = lexbase.AUTOMATIC
const AVAILABILITY = lexbase.AVAILABILITY
const BACKUP = lexbase.BACKUP
const BACKUPS = lexbase.BACKUPS
const BACKWARD = lexbase.BACKWARD
const BEFORE = lexbase.BEFORE
const BEGIN = lexbase.BEGIN
const BETWEEN = lexbase.BETWEEN
const BIGINT = lexbase.BIGINT
const BIGSERIAL = lexbase.BIGSERIAL
const BINARY = lexbase.BINARY
const BIT = lexbase.BIT
const BUCKET_COUNT = lexbase.BUCKET_COUNT
const BOOLEAN = lexbase.BOOLEAN
const BOTH = lexbase.BOTH
const BOX2D = lexbase.BOX2D
const BUNDLE = lexbase.BUNDLE
const BY = lexbase.BY
const CACHE = lexbase.CACHE
const CANCEL = lexbase.CANCEL
const CANCELQUERY = lexbase.CANCELQUERY
const CASCADE = lexbase.CASCADE
const CASE = lexbase.CASE
const CAST = lexbase.CAST
const CBRT = lexbase.CBRT
const CHANGEFEED = lexbase.CHANGEFEED
const CHAR = lexbase.CHAR
const CHARACTER = lexbase.CHARACTER
const CHARACTERISTICS = lexbase.CHARACTERISTICS
const CHECK = lexbase.CHECK
const CLOSE = lexbase.CLOSE
const CLUSTER = lexbase.CLUSTER
const COALESCE = lexbase.COALESCE
const COLLATE = lexbase.COLLATE
const COLLATION = lexbase.COLLATION
const COLUMN = lexbase.COLUMN
const COLUMNS = lexbase.COLUMNS
const COMMENT = lexbase.COMMENT
const COMMENTS = lexbase.COMMENTS
const COMMIT = lexbase.COMMIT
const COMMITTED = lexbase.COMMITTED
const COMPACT = lexbase.COMPACT
const COMPLETE = lexbase.COMPLETE
const COMPLETIONS = lexbase.COMPLETIONS
const CONCAT = lexbase.CONCAT
const CONCURRENTLY = lexbase.CONCURRENTLY
const CONFIGURATION = lexbase.CONFIGURATION
const CONFIGURATIONS = lexbase.CONFIGURATIONS
const CONFIGURE = lexbase.CONFIGURE
const CONFLICT = lexbase.CONFLICT
const CONNECTION = lexbase.CONNECTION
const CONSTRAINT = lexbase.CONSTRAINT
const CONSTRAINTS = lexbase.CONSTRAINTS
const CONTAINS = lexbase.CONTAINS
const CONTROLCHANGEFEED = lexbase.CONTROLCHANGEFEED
const CONTROLJOB = lexbase.CONTROLJOB
const CONVERSION = lexbase.CONVERSION
const CONVERT = lexbase.CONVERT
const COPY = lexbase.COPY
const COVERING = lexbase.COVERING
const CREATE = lexbase.CREATE
const CREATEDB = lexbase.CREATEDB
const CREATELOGIN = lexbase.CREATELOGIN
const CREATEROLE = lexbase.CREATEROLE
const CROSS = lexbase.CROSS
const CSV = lexbase.CSV
const CUBE = lexbase.CUBE
const CURRENT = lexbase.CURRENT
const CURRENT_CATALOG = lexbase.CURRENT_CATALOG
const CURRENT_DATE = lexbase.CURRENT_DATE
const CURRENT_SCHEMA = lexbase.CURRENT_SCHEMA
const CURRENT_ROLE = lexbase.CURRENT_ROLE
const CURRENT_TIME = lexbase.CURRENT_TIME
const CURRENT_TIMESTAMP = lexbase.CURRENT_TIMESTAMP
const CURRENT_USER = lexbase.CURRENT_USER
const CURSOR = lexbase.CURSOR
const CYCLE = lexbase.CYCLE
const DATA = lexbase.DATA
const DATABASE = lexbase.DATABASE
const DATABASES = lexbase.DATABASES
const DATE = lexbase.DATE
const DAY = lexbase.DAY
const DEBUG_PAUSE_ON = lexbase.DEBUG_PAUSE_ON
const DEC = lexbase.DEC
const DECIMAL = lexbase.DECIMAL
const DEFAULT = lexbase.DEFAULT
const DEFAULTS = lexbase.DEFAULTS
const DEALLOCATE = lexbase.DEALLOCATE
const DECLARE = lexbase.DECLARE
const DEFERRABLE = lexbase.DEFERRABLE
const DEFERRED = lexbase.DEFERRED
const DELETE = lexbase.DELETE
const DELIMITER = lexbase.DELIMITER
const DESC = lexbase.DESC
const DESTINATION = lexbase.DESTINATION
const DETACHED = lexbase.DETACHED
const DISCARD = lexbase.DISCARD
const DISTINCT = lexbase.DISTINCT
const DO = lexbase.DO
const DOMAIN = lexbase.DOMAIN
const DOUBLE = lexbase.DOUBLE
const DROP = lexbase.DROP
const ELSE = lexbase.ELSE
const ENCODING = lexbase.ENCODING
const ENCRYPTED = lexbase.ENCRYPTED
const ENCRYPTION_PASSPHRASE = lexbase.ENCRYPTION_PASSPHRASE
const END = lexbase.END
const ENUM = lexbase.ENUM
const ENUMS = lexbase.ENUMS
const ESCAPE = lexbase.ESCAPE
const EXCEPT = lexbase.EXCEPT
const EXCLUDE = lexbase.EXCLUDE
const EXCLUDING = lexbase.EXCLUDING
const EXISTS = lexbase.EXISTS
const EXECUTE = lexbase.EXECUTE
const EXECUTION = lexbase.EXECUTION
const EXPERIMENTAL = lexbase.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lexbase.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lexbase.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lexbase.EXPERIMENTAL_AUDIT
const EXPERIMENTAL_RELOCATE = lexbase.EXPERIMENTAL_RELOCATE
const EXPIRATION = lexbase.EXPIRATION
const EXPLAIN = lexbase.EXPLAIN
const EXPORT = lexbase.EXPORT
const EXTENSION = lexbase.EXTENSION
const EXTRACT = lexbase.EXTRACT
const EXTRACT_DURATION = lexbase.EXTRACT_DURATION
const FAILURE = lexbase.FAILURE
const FALSE = lexbase.FALSE
const FAMILY = lexbase.FAMILY
const FETCH = lexbase.FETCH
const FETCHVAL = lexbase.FETCHVAL
const FETCHTEXT = lexbase.FETCHTEXT
const FETCHVAL_PATH = lexbase.FETCHVAL_PATH
const FETCHTEXT_PATH = lexbase.FETCHTEXT_PATH
const FILES = lexbase.FILES
const FILTER = lexbase.FILTER
const FIRST = lexbase.FIRST
const FLOAT = lexbase.FLOAT
const FLOAT4 = lexbase.FLOAT4
const FLOAT8 = lexbase.FLOAT8
const FLOORDIV = lexbase.FLOORDIV
const FOLLOWING = lexbase.FOLLOWING
const FOR = lexbase.FOR
const FORCE = lexbase.FORCE
const FORCE_INDEX = lexbase.FORCE_INDEX
const FORCE_ZIGZAG = lexbase.FORCE_ZIGZAG
const FOREIGN = lexbase.FOREIGN
const FORWARD = lexbase.FORWARD
const FREEZE = lexbase.FREEZE
const FROM = lexbase.FROM
const FULL = lexbase.FULL
const FUNCTION = lexbase.FUNCTION
const FUNCTIONS = lexbase.FUNCTIONS
const GENERATED = lexbase.GENERATED
const GEOGRAPHY = lexbase.GEOGRAPHY
const GEOMETRY = lexbase.GEOMETRY
const GEOMETRYM = lexbase.GEOMETRYM
const GEOMETRYZ = lexbase.GEOMETRYZ
const GEOMETRYZM = lexbase.GEOMETRYZM
const GEOMETRYCOLLECTION = lexbase.GEOMETRYCOLLECTION
const GEOMETRYCOLLECTIONM = lexbase.GEOMETRYCOLLECTIONM
const GEOMETRYCOLLECTIONZ = lexbase.GEOMETRYCOLLECTIONZ
const GEOMETRYCOLLECTIONZM = lexbase.GEOMETRYCOLLECTIONZM
const GLOBAL = lexbase.GLOBAL
const GOAL = lexbase.GOAL
const GRANT = lexbase.GRANT
const GRANTS = lexbase.GRANTS
const GREATEST = lexbase.GREATEST
const GROUP = lexbase.GROUP
const GROUPING = lexbase.GROUPING
const GROUPS = lexbase.GROUPS
const HAVING = lexbase.HAVING
const HASH = lexbase.HASH
const HEADER = lexbase.HEADER
const HIGH = lexbase.HIGH
const HISTOGRAM = lexbase.HISTOGRAM
const HOLD = lexbase.HOLD
const HOUR = lexbase.HOUR
const IDENTITY = lexbase.IDENTITY
const IF = lexbase.IF
const IFERROR = lexbase.IFERROR
const IFNULL = lexbase.IFNULL
const IGNORE_FOREIGN_KEYS = lexbase.IGNORE_FOREIGN_KEYS
const ILIKE = lexbase.ILIKE
const IMMEDIATE = lexbase.IMMEDIATE
const IMPORT = lexbase.IMPORT
const IN = lexbase.IN
const INCLUDE = lexbase.INCLUDE
const INCLUDING = lexbase.INCLUDING
const INCREMENT = lexbase.INCREMENT
const INCREMENTAL = lexbase.INCREMENTAL
const INCREMENTAL_LOCATION = lexbase.INCREMENTAL_LOCATION
const INET = lexbase.INET
const INET_CONTAINED_BY_OR_EQUALS = lexbase.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lexbase.INET_CONTAINS_OR_EQUALS
const INDEX = lexbase.INDEX
const INDEXES = lexbase.INDEXES
const INHERITS = lexbase.INHERITS
const INJECT = lexbase.INJECT
const INITIALLY = lexbase.INITIALLY
const INNER = lexbase.INNER
const INSENSITIVE = lexbase.INSENSITIVE
const INSERT = lexbase.INSERT
const INT = lexbase.INT
const INTEGER = lexbase.INTEGER
const INTERSECT = lexbase.INTERSECT
const INTERVAL = lexbase.INTERVAL
const INTO = lexbase.INTO
const INTO_DB = lexbase.INTO_DB
const INVERTED = lexbase.INVERTED
const IS = lexbase.IS
const ISERROR = lexbase.ISERROR
const ISNULL = lexbase.ISNULL
const ISOLATION = lexbase.ISOLATION
const JOB = lexbase.JOB
const JOBS = lexbase.JOBS
const JOIN = lexbase.JOIN
const JSON = lexbase.JSON
const JSONB = lexbase.JSONB
const JSON_SOME_EXISTS = lexbase.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lexbase.JSON_ALL_EXISTS
const KEY = lexbase.KEY
const KEYS = lexbase.KEYS
const KMS = lexbase.KMS
const KV = lexbase.KV
const LANGUAGE = lexbase.LANGUAGE
const LAST = lexbase.LAST
const LATERAL = lexbase.LATERAL
const LATEST = lexbase.LATEST
const LC_CTYPE = lexbase.LC_CTYPE
const LC_COLLATE = lexbase.LC_COLLATE
const LEADING = lexbase.LEADING
const LEASE = lexbase.LEASE
const LEAST = lexbase.LEAST
const LEFT = lexbase.LEFT
const LESS = lexbase.LESS
const LEVEL = lexbase.LEVEL
const LIKE = lexbase.LIKE
const LIMIT = lexbase.LIMIT
const LINESTRING = lexbase.LINESTRING
const LINESTRINGM = lexbase.LINESTRINGM
const LINESTRINGZ = lexbase.LINESTRINGZ
const LINESTRINGZM = lexbase.LINESTRINGZM
const LIST = lexbase.LIST
const LOCAL = lexbase.LOCAL
const LOCALITY = lexbase.LOCALITY
const LOCALTIME = lexbase.LOCALTIME
const LOCALTIMESTAMP = lexbase.LOCALTIMESTAMP
const LOCKED = lexbase.LOCKED
const LOGIN = lexbase.LOGIN
const LOOKUP = lexbase.LOOKUP
const LOW = lexbase.LOW
const LSHIFT = lexbase.LSHIFT
const MATCH = lexbase.MATCH
const MATERIALIZED = lexbase.MATERIALIZED
const MERGE = lexbase.MERGE
const MINVALUE = lexbase.MINVALUE
const MAXVALUE = lexbase.MAXVALUE
const METHOD = lexbase.METHOD
const MINUTE = lexbase.MINUTE
const MODIFYCLUSTERSETTING = lexbase.MODIFYCLUSTERSETTING
const MONTH = lexbase.MONTH
const MOVE = lexbase.MOVE
const MULTILINESTRING = lexbase.MULTILINESTRING
const MULTILINESTRINGM = lexbase.MULTILINESTRINGM
const MULTILINESTRINGZ = lexbase.MULTILINESTRINGZ
const MULTILINESTRINGZM = lexbase.MULTILINESTRINGZM
const MULTIPOINT = lexbase.MULTIPOINT
const MULTIPOINTM = lexbase.MULTIPOINTM
const MULTIPOINTZ = lexbase.MULTIPOINTZ
const MULTIPOINTZM = lexbase.MULTIPOINTZM
const MULTIPOLYGON = lexbase.MULTIPOLYGON
const MULTIPOLYGONM = lexbase.MULTIPOLYGONM
const MULTIPOLYGONZ = lexbase.MULTIPOLYGONZ
const MULTIPOLYGONZM = lexbase.MULTIPOLYGONZM
const NAN = lexbase.NAN
const NAME = lexbase.NAME
const NAMES = lexbase.NAMES
const NATURAL = lexbase.NATURAL
const NEVER = lexbase.NEVER
const NEW_DB_NAME = lexbase.NEW_DB_NAME
const NEW_KMS = lexbase.NEW_KMS
const NEXT = lexbase.NEXT
const NO = lexbase.NO
const NOCANCELQUERY = lexbase.NOCANCELQUERY
const NOCONTROLCHANGEFEED = lexbase.NOCONTROLCHANGEFEED
const NOCONTROLJOB = lexbase.NOCONTROLJOB
const NOCREATEDB = lexbase.NOCREATEDB
const NOCREATELOGIN = lexbase.NOCREATELOGIN
const NOCREATEROLE = lexbase.NOCREATEROLE
const NOLOGIN = lexbase.NOLOGIN
const NOMODIFYCLUSTERSETTING = lexbase.NOMODIFYCLUSTERSETTING
const NOSQLLOGIN = lexbase.NOSQLLOGIN
const NO_INDEX_JOIN = lexbase.NO_INDEX_JOIN
const NO_ZIGZAG_JOIN = lexbase.NO_ZIGZAG_JOIN
const NO_FULL_SCAN = lexbase.NO_FULL_SCAN
const NONE = lexbase.NONE
const NONVOTERS = lexbase.NONVOTERS
const NORMAL = lexbase.NORMAL
const NOT = lexbase.NOT
const NOTHING = lexbase.NOTHING
const NOTNULL = lexbase.NOTNULL
const NOVIEWACTIVITY = lexbase.NOVIEWACTIVITY
const NOVIEWACTIVITYREDACTED = lexbase.NOVIEWACTIVITYREDACTED
const NOVIEWCLUSTERSETTING = lexbase.NOVIEWCLUSTERSETTING
const NOWAIT = lexbase.NOWAIT
const NULL = lexbase.NULL
const NULLIF = lexbase.NULLIF
const NULLS = lexbase.NULLS
const NUMERIC = lexbase.NUMERIC
const OF = lexbase.OF
const OFF = lexbase.OFF
const OFFSET = lexbase.OFFSET
const OID = lexbase.OID
const OIDS = lexbase.OIDS
const OIDVECTOR = lexbase.OIDVECTOR
const OLD_KMS = lexbase.OLD_KMS
const ON = lexbase.ON
const ONLY = lexbase.ONLY
const OPT = lexbase.OPT
const OPTION = lexbase.OPTION
const OPTIONS = lexbase.OPTIONS
const OR = lexbase.OR
const ORDER = lexbase.ORDER
const ORDINALITY = lexbase.ORDINALITY
const OTHERS = lexbase.OTHERS
const OUT = lexbase.OUT
const OUTER = lexbase.OUTER
const OVER = lexbase.OVER
const OVERLAPS = lexbase.OVERLAPS
const OVERLAY = lexbase.OVERLAY
const OWNED = lexbase.OWNED
const OWNER = lexbase.OWNER
const OPERATOR = lexbase.OPERATOR
const PARENT = lexbase.PARENT
const PARTIAL = lexbase.PARTIAL
const PARTITION = lexbase.PARTITION
const PARTITIONS = lexbase.PARTITIONS
const PASSWORD = lexbase.PASSWORD
const PAUSE = lexbase.PAUSE
const PAUSED = lexbase.PAUSED
const PHYSICAL = lexbase.PHYSICAL
const PLACEMENT = lexbase.PLACEMENT
const PLACING = lexbase.PLACING
const PLAN = lexbase.PLAN
const PLANS = lexbase.PLANS
const POINT = lexbase.POINT
const POINTM = lexbase.POINTM
const POINTZ = lexbase.POINTZ
const POINTZM = lexbase.POINTZM
const POLYGON = lexbase.POLYGON
const POLYGONM = lexbase.POLYGONM
const POLYGONZ = lexbase.POLYGONZ
const POLYGONZM = lexbase.POLYGONZM
const POSITION = lexbase.POSITION
const PRECEDING = lexbase.PRECEDING
const PRECISION = lexbase.PRECISION
const PREPARE = lexbase.PREPARE
const PRESERVE = lexbase.PRESERVE
const PRIMARY = lexbase.PRIMARY
const PRIOR = lexbase.PRIOR
const PRIORITY = lexbase.PRIORITY
const PRIVILEGES = lexbase.PRIVILEGES
const PROCEDURAL = lexbase.PROCEDURAL
const PUBLIC = lexbase.PUBLIC
const PUBLICATION = lexbase.PUBLICATION
const QUERIES = lexbase.QUERIES
const QUERY = lexbase.QUERY
const QUOTE = lexbase.QUOTE
const RANGE = lexbase.RANGE
const RANGES = lexbase.RANGES
const READ = lexbase.READ
const REAL = lexbase.REAL
const REASON = lexbase.REASON
const REASSIGN = lexbase.REASSIGN
const RECURSIVE = lexbase.RECURSIVE
const RECURRING = lexbase.RECURRING
const REF = lexbase.REF
const REFERENCES = lexbase.REFERENCES
const REFRESH = lexbase.REFRESH
const REGCLASS = lexbase.REGCLASS
const REGION = lexbase.REGION
const REGIONAL = lexbase.REGIONAL
const REGIONS = lexbase.REGIONS
const REGNAMESPACE = lexbase.REGNAMESPACE
const REGPROC = lexbase.REGPROC
const REGPROCEDURE = lexbase.REGPROCEDURE
const REGROLE = lexbase.REGROLE
const REGTYPE = lexbase.REGTYPE
const REINDEX = lexbase.REINDEX
const RELATIVE = lexbase.RELATIVE
const RELOCATE = lexbase.RELOCATE
const REMOVE_PATH = lexbase.REMOVE_PATH
const RENAME = lexbase.RENAME
const REPEATABLE = lexbase.REPEATABLE
const REPLACE = lexbase.REPLACE
const REPLICATION = lexbase.REPLICATION
const RELEASE = lexbase.RELEASE
const RESET = lexbase.RESET
const RESTART = lexbase.RESTART
const RESTORE = lexbase.RESTORE
const RESTRICT = lexbase.RESTRICT
const RESTRICTED = lexbase.RESTRICTED
const RESUME = lexbase.RESUME
const RETURNING = lexbase.RETURNING
const RETRY = lexbase.RETRY
const REVISION_HISTORY = lexbase.REVISION_HISTORY
const REVOKE = lexbase.REVOKE
const RIGHT = lexbase.RIGHT
const ROLE = lexbase.ROLE
const ROLES = lexbase.ROLES
const ROLLBACK = lexbase.ROLLBACK
const ROLLUP = lexbase.ROLLUP
const ROUTINES = lexbase.ROUTINES
const ROW = lexbase.ROW
const ROWS = lexbase.ROWS
const RSHIFT = lexbase.RSHIFT
const RULE = lexbase.RULE
const RUNNING = lexbase.RUNNING
const SAVEPOINT = lexbase.SAVEPOINT
const SCANS = lexbase.SCANS
const SCATTER = lexbase.SCATTER
const SCHEDULE = lexbase.SCHEDULE
const SCHEDULES = lexbase.SCHEDULES
const SCROLL = lexbase.SCROLL
const SCHEMA = lexbase.SCHEMA
const SCHEMAS = lexbase.SCHEMAS
const SCRUB = lexbase.SCRUB
const SEARCH = lexbase.SEARCH
const SECOND = lexbase.SECOND
const SELECT = lexbase.SELECT
const SEQUENCE = lexbase.SEQUENCE
const SEQUENCES = lexbase.SEQUENCES
const SERIALIZABLE = lexbase.SERIALIZABLE
const SERVER = lexbase.SERVER
const SESSION = lexbase.SESSION
const SESSIONS = lexbase.SESSIONS
const SESSION_USER = lexbase.SESSION_USER
const SET = lexbase.SET
const SETS = lexbase.SETS
const SETTING = lexbase.SETTING
const SETTINGS = lexbase.SETTINGS
const SHARE = lexbase.SHARE
const SHOW = lexbase.SHOW
const SIMILAR = lexbase.SIMILAR
const SIMPLE = lexbase.SIMPLE
const SKIP = lexbase.SKIP
const SKIP_LOCALITIES_CHECK = lexbase.SKIP_LOCALITIES_CHECK
const SKIP_MISSING_FOREIGN_KEYS = lexbase.SKIP_MISSING_FOREIGN_KEYS
const SKIP_MISSING_SEQUENCES = lexbase.SKIP_MISSING_SEQUENCES
const SKIP_MISSING_SEQUENCE_OWNERS = lexbase.SKIP_MISSING_SEQUENCE_OWNERS
const SKIP_MISSING_VIEWS = lexbase.SKIP_MISSING_VIEWS
const SMALLINT = lexbase.SMALLINT
const SMALLSERIAL = lexbase.SMALLSERIAL
const SNAPSHOT = lexbase.SNAPSHOT
const SOME = lexbase.SOME
const SPLIT = lexbase.SPLIT
const SQL = lexbase.SQL
const SQLLOGIN = lexbase.SQLLOGIN
const START = lexbase.START
const STATE = lexbase.STATE
const STATISTICS = lexbase.STATISTICS
const STATUS = lexbase.STATUS
const STDIN = lexbase.STDIN
const STREAM = lexbase.STREAM
const STRICT = lexbase.STRICT
const STRING = lexbase.STRING
const STORAGE = lexbase.STORAGE
const STORE = lexbase.STORE
const STORED = lexbase.STORED
const STORING = lexbase.STORING
const SUBSTRING = lexbase.SUBSTRING
const SUPER = lexbase.SUPER
const SURVIVE = lexbase.SURVIVE
const SURVIVAL = lexbase.SURVIVAL
const SYMMETRIC = lexbase.SYMMETRIC
const SYNTAX = lexbase.SYNTAX
const SYSTEM = lexbase.SYSTEM
const SQRT = lexbase.SQRT
const SUBSCRIPTION = lexbase.SUBSCRIPTION
const STATEMENTS = lexbase.STATEMENTS
const TABLE = lexbase.TABLE
const TABLES = lexbase.TABLES
const TABLESPACE = lexbase.TABLESPACE
const TEMP = lexbase.TEMP
const TEMPLATE = lexbase.TEMPLATE
const TEMPORARY = lexbase.TEMPORARY
const TENANT = lexbase.TENANT
const TENANTS = lexbase.TENANTS
const TESTING_RELOCATE = lexbase.TESTING_RELOCATE
const TEXT = lexbase.TEXT
const THEN = lexbase.THEN
const TIES = lexbase.TIES
const TIME = lexbase.TIME
const TIMETZ = lexbase.TIMETZ
const TIMESTAMP = lexbase.TIMESTAMP
const TIMESTAMPTZ = lexbase.TIMESTAMPTZ
const TO = lexbase.TO
const THROTTLING = lexbase.THROTTLING
const TRAILING = lexbase.TRAILING
const TRACE = lexbase.TRACE
const TRANSACTION = lexbase.TRANSACTION
const TRANSACTIONS = lexbase.TRANSACTIONS
const TRANSFER = lexbase.TRANSFER
const TREAT = lexbase.TREAT
const TRIGGER = lexbase.TRIGGER
const TRIM = lexbase.TRIM
const TRUE = lexbase.TRUE
const TRUNCATE = lexbase.TRUNCATE
const TRUSTED = lexbase.TRUSTED
const TYPE = lexbase.TYPE
const TYPES = lexbase.TYPES
const TRACING = lexbase.TRACING
const UNBOUNDED = lexbase.UNBOUNDED
const UNCOMMITTED = lexbase.UNCOMMITTED
const UNION = lexbase.UNION
const UNIQUE = lexbase.UNIQUE
const UNKNOWN = lexbase.UNKNOWN
const UNLOGGED = lexbase.UNLOGGED
const UNSPLIT = lexbase.UNSPLIT
const UPDATE = lexbase.UPDATE
const UPSERT = lexbase.UPSERT
const UNSET = lexbase.UNSET
const UNTIL = lexbase.UNTIL
const USE = lexbase.USE
const USER = lexbase.USER
const USERS = lexbase.USERS
const USING = lexbase.USING
const UUID = lexbase.UUID
const VALID = lexbase.VALID
const VALIDATE = lexbase.VALIDATE
const VALUE = lexbase.VALUE
const VALUES = lexbase.VALUES
const VARBIT = lexbase.VARBIT
const VARCHAR = lexbase.VARCHAR
const VARIADIC = lexbase.VARIADIC
const VIEW = lexbase.VIEW
const VARYING = lexbase.VARYING
const VIEWACTIVITY = lexbase.VIEWACTIVITY
const VIEWACTIVITYREDACTED = lexbase.VIEWACTIVITYREDACTED
const VIEWCLUSTERSETTING = lexbase.VIEWCLUSTERSETTING
const VIRTUAL = lexbase.VIRTUAL
const VISIBLE = lexbase.VISIBLE
const VOTERS = lexbase.VOTERS
const WHEN = lexbase.WHEN
const WHERE = lexbase.WHERE
const WINDOW = lexbase.WINDOW
const WITH = lexbase.WITH
const WITHIN = lexbase.WITHIN
const WITHOUT = lexbase.WITHOUT
const WORK = lexbase.WORK
const WRITE = lexbase.WRITE
const YEAR = lexbase.YEAR
const ZONE = lexbase.ZONE
const NOT_LA = lexbase.NOT_LA
const NULLS_LA = lexbase.NULLS_LA
const WITH_LA = lexbase.WITH_LA
const AS_LA = lexbase.AS_LA
const GENERATED_ALWAYS = lexbase.GENERATED_ALWAYS
const GENERATED_BY_DEFAULT = lexbase.GENERATED_BY_DEFAULT
const RESET_ALL = lexbase.RESET_ALL
const ROLE_ALL = lexbase.ROLE_ALL
const USER_ALL = lexbase.USER_ALL
const ON_LA = lexbase.ON_LA
const TENANT_ALL = lexbase.TENANT_ALL
const SET_TRACING = lexbase.SET_TRACING
const CONTAINED_BY = lexbase.CONTAINED_BY
const POSTFIXOP = lexbase.POSTFIXOP
const INTERVAL_SIMPLE = lexbase.INTERVAL_SIMPLE
const UMINUS = lexbase.UMINUS
const HELPTOKEN = lexbase.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ABSOLUTE",
	"ACCESS",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASENSITIVE",
	"ASYMMETRIC",
	"AT",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"AVAILABILITY",
	"BACKUP",
	"BACKUPS",
	"BACKWARD",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BINARY",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BOX2D",
	"BUNDLE",
	"BY",
	"CACHE",
	"CANCEL",
	"CANCELQUERY",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"COMPLETIONS",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONNECTION",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONTROLCHANGEFEED",
	"CONTROLJOB",
	"CONVERSION",
	"CONVERT",
	"COPY",
	"COVERING",
	"CREATE",
	"CREATEDB",
	"CREATELOGIN",
	"CREATEROLE",
	"CROSS",
	"CSV",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CURSOR",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEBUG_PAUSE_ON",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DELIMITER",
	"DESC",
	"DESTINATION",
	"DETACHED",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTED",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ENUMS",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXECUTION",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPERIMENTAL_RELOCATE",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FAILURE",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE",
	"FORCE_INDEX",
	"FORCE_ZIGZAG",
	"FOREIGN",
	"FORWARD",
	"FREEZE",
	"FROM",
	"FULL",
	"FUNCTION",
	"FUNCTIONS",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYM",
	"GEOMETRYZ",
	"GEOMETRYZM",
	"GEOMETRYCOLLECTION",
	"GEOMETRYCOLLECTIONM",
	"GEOMETRYCOLLECTIONZ",
	"GEOMETRYCOLLECTIONZM",
	"GLOBAL",
	"GOAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HEADER",
	"HIGH",
	"HISTOGRAM",
	"HOLD",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDING",
	"INCREMENT",
	"INCREMENTAL",
	"INCREMENTAL_LOCATION",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INHERITS",
	"INJECT",
	"INITIALLY",
	"INNER",
	"INSENSITIVE",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INTO_DB",
	"INVERTED",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KMS",
	"KV",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LATEST",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LINESTRINGM",
	"LINESTRINGZ",
	"LINESTRINGZM",
	"LIST",
	"LOCAL",
	"LOCALITY",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"METHOD",
	"MINUTE",
	"MODIFYCLUSTERSETTING",
	"MONTH",
	"MOVE",
	"MULTILINESTRING",
	"MULTILINESTRINGM",
	"MULTILINESTRINGZ",
	"MULTILINESTRINGZM",
	"MULTIPOINT",
	"MULTIPOINTM",
	"MULTIPOINTZ",
	"MULTIPOINTZM",
	"MULTIPOLYGON",
	"MULTIPOLYGONM",
	"MULTIPOLYGONZ",
	"MULTIPOLYGONZM",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEVER",
	"NEW_DB_NAME",
	"NEW_KMS",
	"NEXT",
	"NO",
	"NOCANCELQUERY",
	"NOCONTROLCHANGEFEED",
	"NOCONTROLJOB",
	"NOCREATEDB",
	"NOCREATELOGIN",
	"NOCREATEROLE",
	"NOLOGIN",
	"NOMODIFYCLUSTERSETTING",
	"NOSQLLOGIN",
	"NO_INDEX_JOIN",
	"NO_ZIGZAG_JOIN",
	"NO_FULL_SCAN",
	"NONE",
	"NONVOTERS",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOVIEWACTIVITY",
	"NOVIEWACTIVITYREDACTED",
	"NOVIEWCLUSTERSETTING",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"OLD_KMS",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PAUSED",
	"PHYSICAL",
	"PLACEMENT",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POINTM",
	"POINTZ",
	"POINTZM",
	"POLYGON",
	"POLYGONM",
	"POLYGONZ",
	"POLYGONZM",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIOR",
	"PRIORITY",
	"PRIVILEGES",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"QUOTE",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"REASON",
	"REASSIGN",
	"RECURSIVE",
	"RECURRING",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REGCLASS",
	"REGION",
	"REGIONAL",
	"REGIONS",
	"REGNAMESPACE",
	"REGPROC",
	"REGPROCEDURE",
	"REGROLE",
	"REGTYPE",
	"REINDEX",
	"RELATIVE",
	"RELOCATE",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"REPLICATION",
	"RELEASE",
	"RESET",
	"RESTART",
	"RESTORE",
	"RESTRICT",
	"RESTRICTED",
	"RESUME",
	"RETURNING",
	"RETRY",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROUTINES",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"RUNNING",
	"SAVEPOINT",
	"SCANS",
	"SCATTER",
	"SCHEDULE",
	"SCHEDULES",
	"SCROLL",
	"SCHEMA",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETS",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SKIP_LOCALITIES_CHECK",
	"SKIP_MISSING_FOREIGN_KEYS",
	"SKIP_MISSING_SEQUENCES",
	"SKIP_MISSING_SEQUENCE_OWNERS",
	"SKIP_MISSING_VIEWS",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"SQLLOGIN",
	"START",
	"STATE",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STREAM",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SUPER",
	"SURVIVE",
	"SURVIVAL",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"STATEMENTS",
	"TABLE",
	"TABLES",
	"TABLESPACE",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TENANT",
	"TENANTS",
	"TESTING_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TRANSACTIONS",
	"TRANSFER",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TYPES",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNSET",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIEWACTIVITY",
	"VIEWACTIVITYREDACTED",
	"VIEWCLUSTERSETTING",
	"VIRTUAL",
	"VISIBLE",
	"VOTERS",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"NULLS_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"GENERATED_BY_DEFAULT",
	"RESET_ALL",
	"ROLE_ALL",
	"USER_ALL",
	"ON_LA",
	"TENANT_ALL",
	"SET_TRACING",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"INTERVAL_SIMPLE",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"'{'",
	"'}'",
	"':'",
}

var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:14677

//line yacctab:1
var sqlExca = [...]int{
	-1, 0,
	1, 41,
	-2, 1740,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 59,
	272, 454,
	-2, 0,
	-1, 71,
	8, 908,
	29, 908,
	623, 908,
	624, 908,
	-2, 0,
	-1, 72,
	8, 908,
	29, 908,
	623, 908,
	624, 908,
	-2, 0,
	-1, 79,
	254, 268,
	544, 268,
	-2, 0,
	-1, 92,
	242, 1471,
	256, 1471,
	272, 450,
	410, 450,
	422, 1214,
	464, 450,
	478, 1214,
	528, 1214,
	556, 450,
	583, 1214,
	-2, 0,
	-1, 98,
	137, 1740,
	249, 1740,
	567, 1740,
	568, 1740,
	-2, 0,
	-1, 116,
	156, 1711,
	176, 1711,
	189, 1711,
	252, 1711,
	285, 1711,
	359, 1711,
	370, 1711,
	562, 1711,
	-2, 1682,
	-1, 158,
	164, 1042,
	271, 1042,
	413, 1003,
	483, 1003,
	527, 1003,
	547, 1042,
	549, 1003,
	-2, 0,
	-1, 163,
	4, 1742,
	21, 1742,
	22, 1742,
	23, 1742,
	24, 1742,
	25, 1742,
	26, 1742,
	27, 1742,
	28, 1742,
	30, 1742,
	31, 1742,
	37, 1742,
	41, 1742,
	43, 1742,
	44, 1742,
	46, 1742,
	47, 1742,
	48, 1742,
	49, 1742,
	50, 1742,
	51, 1742,
	52, 1742,
	53, 1742,
	54, 1742,
	56, 1742,
	57, 1742,
	58, 1742,
	59, 1742,
	61, 1742,
	62, 1742,
	63, 1742,
	64, 1742,
	65, 1742,
	66, 1742,
	67, 1742,
	71, 1742,
	72, 1742,
	73, 1742,
	74, 1742,
	76, 1742,
	77, 1742,
	78, 1742,
	82, 1742,
	83, 1742,
	84, 1742,
	85, 1742,
	86, 1742,
	87, 1742,
	88, 1742,
	89, 1742,
	92, 1742,
	93, 1742,
	94, 1742,
	95, 1742,
	96, 1742,
	98, 1742,
	100, 1742,
	101, 1742,
	102, 1742,
	103, 1742,
	104, 1742,
	105, 1742,
	107, 1742,
	108, 1742,
	109, 1742,
	111, 1742,
	112, 1742,
	113, 1742,
	121, 1742,
	122, 1742,
	123, 1742,
	124, 1742,
	125, 1742,
	127, 1742,
	128, 1742,
	129, 1742,
	130, 1742,
	132, 1742,
	133, 1742,
	134, 1742,
	136, 1742,
	137, 1742,
	138, 1742,
	140, 1742,
	141, 1742,
	142, 1742,
	145, 1742,
	146, 1742,
	147, 1742,
	149, 1742,
	150, 1742,
	151, 1742,
	153, 1742,
	154, 1742,
	155, 1742,
	157, 1742,
	158, 1742,
	159, 1742,
	160, 1742,
	161, 1742,
	162, 1742,
	163, 1742,
	164, 1742,
	165, 1742,
	166, 1742,
	167, 1742,
	168, 1742,
	169, 1742,
	170, 1742,
	171, 1742,
	172, 1742,
	173, 1742,
	175, 1742,
	181, 1742,
	182, 1742,
	183, 1742,
	184, 1742,
	188, 1742,
	190, 1742,
	191, 1742,
	192, 1742,
	194, 1742,
	195, 1742,
	198, 1742,
	199, 1742,
	200, 1742,
	201, 1742,
	202, 1742,
	203, 1742,
	204, 1742,
	205, 1742,
	206, 1742,
	207, 1742,
	208, 1742,
	209, 1742,
	210, 1742,
	211, 1742,
	213, 1742,
	214, 1742,
	216, 1742,
	217, 1742,
	219, 1742,
	220, 1742,
	221, 1742,
	222, 1742,
	223, 1742,
	224, 1742,
	225, 1742,
	226, 1742,
	227, 1742,
	228, 1742,
	229, 1742,
	231, 1742,
	232, 1742,
	234, 1742,
	235, 1742,
	236, 1742,
	237, 1742,
	238, 1742,
	242, 1742,
	243, 1742,
	244, 1742,
	245, 1742,
	248, 1742,
	249, 1742,
	250, 1742,
	251, 1742,
	253, 1742,
	255, 1742,
	256, 1742,
	258, 1742,
	260, 1742,
	261, 1742,
	262, 1742,
	264, 1742,
	268, 1742,
	269, 1742,
	270, 1742,
	271, 1742,
	272, 1742,
	273, 1742,
	275, 1742,
	276, 1742,
	277, 1742,
	279, 1742,
	280, 1742,
	282, 1742,
	283, 1742,
	286, 1742,
	287, 1742,
	288, 1742,
	289, 1742,
	290, 1742,
	291, 1742,
	292, 1742,
	295, 1742,
	296, 1742,
	297, 1742,
	298, 1742,
	300, 1742,
	301, 1742,
	302, 1742,
	303, 1742,
	304, 1742,
	305, 1742,
	306, 1742,
	307, 1742,
	308, 1742,
	309, 1742,
	310, 1742,
	311, 1742,
	312, 1742,
	313, 1742,
	314, 1742,
	315, 1742,
	316, 1742,
	317, 1742,
	318, 1742,
	319, 1742,
	320, 1742,
	321, 1742,
	322, 1742,
	324, 1742,
	326, 1742,
	327, 1742,
	328, 1742,
	329, 1742,
	330, 1742,
	331, 1742,
	332, 1742,
	333, 1742,
	334, 1742,
	335, 1742,
	336, 1742,
	337, 1742,
	338, 1742,
	339, 1742,
	340, 1742,
	341, 1742,
	342, 1742,
	344, 1742,
	345, 1742,
	347, 1742,
	349, 1742,
	350, 1742,
	351, 1742,
	352, 1742,
	354, 1742,
	355, 1742,
	356, 1742,
	357, 1742,
	358, 1742,
	361, 1742,
	363, 1742,
	365, 1742,
	366, 1742,
	367, 1742,
	368, 1742,
	371, 1742,
	372, 1742,
	373, 1742,
	375, 1742,
	377, 1742,
	378, 1742,
	379, 1742,
	380, 1742,
	381, 1742,
	382, 1742,
	383, 1742,
	384, 1742,
	385, 1742,
	386, 1742,
	387, 1742,
	388, 1742,
	389, 1742,
	391, 1742,
	392, 1742,
	393, 1742,
	394, 1742,
	395, 1742,
	396, 1742,
	397, 1742,
	398, 1742,
	399, 1742,
	400, 1742,
	401, 1742,
	402, 1742,
	403, 1742,
	404, 1742,
	405, 1742,
	407, 1742,
	408, 1742,
	409, 1742,
	411, 1742,
	412, 1742,
	413, 1742,
	414, 1742,
	415, 1742,
	416, 1742,
	417, 1742,
	418, 1742,
	419, 1742,
	420, 1742,
	421, 1742,
	422, 1742,
	423, 1742,
	424, 1742,
	426, 1742,
	428, 1742,
	429, 1742,
	430, 1742,
	436, 1742,
	437, 1742,
	438, 1742,
	440, 1742,
	441, 1742,
	442, 1742,
	443, 1742,
	444, 1742,
	445, 1742,
	446, 1742,
	447, 1742,
	448, 1742,
	449, 1742,
	450, 1742,
	452, 1742,
	453, 1742,
	454, 1742,
	456, 1742,
	457, 1742,
	458, 1742,
	459, 1742,
	460, 1742,
	461, 1742,
	462, 1742,
	464, 1742,
	465, 1742,
	466, 1742,
	467, 1742,
	468, 1742,
	469, 1742,
	470, 1742,
	471, 1742,
	472, 1742,
	473, 1742,
	474, 1742,
	475, 1742,
	476, 1742,
	478, 1742,
	479, 1742,
	480, 1742,
	481, 1742,
	482, 1742,
	483, 1742,
	485, 1742,
	486, 1742,
	487, 1742,
	488, 1742,
	489, 1742,
	490, 1742,
	492, 1742,
	493, 1742,
	494, 1742,
	495, 1742,
	496, 1742,
	497, 1742,
	498, 1742,
	499, 1742,
	501, 1742,
	503, 1742,
	504, 1742,
	505, 1742,
	506, 1742,
	507, 1742,
	508, 1742,
	509, 1742,
	510, 1742,
	511, 1742,
	512, 1742,
	513, 1742,
	514, 1742,
	515, 1742,
	516, 1742,
	517, 1742,
	518, 1742,
	519, 1742,
	520, 1742,
	521, 1742,
	523, 1742,
	524, 1742,
	526, 1742,
	527, 1742,
	529, 1742,
	530, 1742,
	531, 1742,
	532, 1742,
	533, 1742,
	534, 1742,
	536, 1742,
	537, 1742,
	539, 1742,
	540, 1742,
	541, 1742,
	542, 1742,
	543, 1742,
	545, 1742,
	547, 1742,
	548, 1742,
	549, 1742,
	550, 1742,
	551, 1742,
	552, 1742,
	553, 1742,
	555, 1742,
	556, 1742,
	557, 1742,
	558, 1742,
	559, 1742,
	560, 1742,
	561, 1742,
	564, 1742,
	565, 1742,
	566, 1742,
	567, 1742,
	568, 1742,
	569, 1742,
	570, 1742,
	571, 1742,
	573, 1742,
	576, 1742,
	577, 1742,
	578, 1742,
	579, 1742,
	580, 1742,
	581, 1742,
	583, 1742,
	584, 1742,
	585, 1742,
	586, 1742,
	587, 1742,
	588, 1742,
	589, 1742,
	590, 1742,
	595, 1742,
	596, 1742,
	597, 1742,
	598, 1742,
	599, 1742,
	600, 1742,
	-2, 0,
	-1, 164,
	1, 1590,
	135, 1590,
	260, 1590,
	346, 1590,
	408, 1590,
	418, 1590,
	604, 1590,
	636, 1590,
	-2, 0,
	-1, 166,
	1, 1590,
	636, 1590,
	-2, 0,
	-1, 167,
	1, 1590,
	636, 1590,
	-2, 0,
	-1, 168,
	1, 1590,
	544, 1590,
	636, 1590,
	-2, 0,
	-1, 200,
	156, 1710,
	176, 1710,
	189, 1710,
	252, 1710,
	285, 1710,
	359, 1710,
	370, 1710,
	562, 1710,
	-2, 1685,
	-1, 252,
	4, 1749,
	5, 1749,
	6, 1749,
	7, 1749,
	8, 1749,
	9, 1749,
	10, 1749,
	21, 1749,
	22, 1749,
	23, 1749,
	24, 1749,
	25, 1749,
	26, 1749,
	27, 1749,
	28, 1749,
	30, 1749,
	31, 1749,
	37, 1749,
	38, 1749,
	41, 1749,
	43, 1749,
	44, 1749,
	45, 1749,
	46, 1749,
	47, 1749,
	48, 1749,
	49, 1749,
	50, 1749,
	51, 1749,
	52, 1749,
	53, 1749,
	54, 1749,
	56, 1749,
	57, 1749,
	58, 1749,
	59, 1749,
	61, 1749,
	62, 1749,
	63, 1749,
	64, 1749,
	65, 1749,
	66, 1749,
	67, 1749,
	68, 1749,
	69, 1749,
	70, 1749,
	71, 1749,
	72, 1749,
	73, 1749,
	74, 1749,
	76, 1749,
	77, 1749,
	78, 1749,
	80, 1749,
	82, 1749,
	83, 1749,
	84, 1749,
	85, 1749,
	86, 1749,
	87, 1749,
	88, 1749,
	89, 1749,
	92, 1749,
	93, 1749,
	94, 1749,
	95, 1749,
	96, 1749,
	98, 1749,
	100, 1749,
	101, 1749,
	102, 1749,
	103, 1749,
	104, 1749,
	105, 1749,
	107, 1749,
	108, 1749,
	109, 1749,
	110, 1749,
	111, 1749,
	112, 1749,
	113, 1749,
	114, 1749,
	115, 1749,
	116, 1749,
	117, 1749,
	118, 1749,
	119, 1749,
	120, 1749,
	121, 1749,
	122, 1749,
	123, 1749,
	124, 1749,
	125, 1749,
	126, 1749,
	127, 1749,
	128, 1749,
	129, 1749,
	130, 1749,
	131, 1749,
	132, 1749,
	133, 1749,
	134, 1749,
	136, 1749,
	137, 1749,
	138, 1749,
	140, 1749,
	141, 1749,
	142, 1749,
	145, 1749,
	146, 1749,
	147, 1749,
	149, 1749,
	150, 1749,
	151, 1749,
	153, 1749,
	154, 1749,
	155, 1749,
	157, 1749,
	158, 1749,
	159, 1749,
	160, 1749,
	161, 1749,
	162, 1749,
	163, 1749,
	164, 1749,
	165, 1749,
	166, 1749,
	167, 1749,
	168, 1749,
	169, 1749,
	170, 1749,
	171, 1749,
	172, 1749,
	173, 1749,
	174, 1749,
	175, 1749,
	181, 1749,
	182, 1749,
	183, 1749,
	184, 1749,
	188, 1749,
	190, 1749,
	191, 1749,
	192, 1749,
	194, 1749,
	195, 1749,
	197, 1749,
	198, 1749,
	199, 1749,
	200, 1749,
	201, 1749,
	202, 1749,
	203, 1749,
	204, 1749,
	205, 1749,
	206, 1749,
	207, 1749,
	208, 1749,
	209, 1749,
	210, 1749,
	211, 1749,
	213, 1749,
	214, 1749,
	216, 1749,
	217, 1749,
	219, 1749,
	220, 1749,
	221, 1749,
	222, 1749,
	223, 1749,
	224, 1749,
	225, 1749,
	226, 1749,
	227, 1749,
	228, 1749,
	229, 1749,
	230, 1749,
	231, 1749,
	232, 1749,
	234, 1749,
	235, 1749,
	236, 1749,
	237, 1749,
	238, 1749,
	242, 1749,
	243, 1749,
	244, 1749,
	245, 1749,
	247, 1749,
	248, 1749,
	249, 1749,
	250, 1749,
	251, 1749,
	253, 1749,
	255, 1749,
	256, 1749,
	257, 1749,
	258, 1749,
	259, 1749,
	260, 1749,
	261, 1749,
	262, 1749,
	263, 1749,
	264, 1749,
	268, 1749,
	269, 1749,
	270, 1749,
	271, 1749,
	272, 1749,
	273, 1749,
	275, 1749,
	276, 1749,
	277, 1749,
	279, 1749,
	280, 1749,
	281, 1749,
	282, 1749,
	283, 1749,
	284, 1749,
	286, 1749,
	287, 1749,
	288, 1749,
	289, 1749,
	290, 1749,
	291, 1749,
	292, 1749,
	293, 1749,
	294, 1749,
	295, 1749,
	296, 1749,
	297, 1749,
	298, 1749,
	300, 1749,
	301, 1749,
	302, 1749,
	303, 1749,
	304, 1749,
	305, 1749,
	306, 1749,
	307, 1749,
	308, 1749,
	309, 1749,
	310, 1749,
	311, 1749,
	312, 1749,
	313, 1749,
	314, 1749,
	315, 1749,
	316, 1749,
	317, 1749,
	318, 1749,
	319, 1749,
	320, 1749,
	321, 1749,
	322, 1749,
	324, 1749,
	325, 1749,
	326, 1749,
	327, 1749,
	328, 1749,
	329, 1749,
	330, 1749,
	331, 1749,
	332, 1749,
	333, 1749,
	334, 1749,
	335, 1749,
	336, 1749,
	337, 1749,
	338, 1749,
	339, 1749,
	340, 1749,
	341, 1749,
	342, 1749,
	343, 1749,
	344, 1749,
	345, 1749,
	346, 1749,
	347, 1749,
	348, 1749,
	349, 1749,
	350, 1749,
	351, 1749,
	352, 1749,
	353, 1749,
	354, 1749,
	355, 1749,
	356, 1749,
	357, 1749,
	358, 1749,
	361, 1749,
	363, 1749,
	366, 1749,
	367, 1749,
	368, 1749,
	371, 1749,
	372, 1749,
	373, 1749,
	374, 1749,
	375, 1749,
	376, 1749,
	377, 1749,
	378, 1749,
	379, 1749,
	380, 1749,
	381, 1749,
	382, 1749,
	383, 1749,
	384, 1749,
	385, 1749,
	386, 1749,
	387, 1749,
	388, 1749,
	389, 1749,
	391, 1749,
	392, 1749,
	393, 1749,
	394, 1749,
	395, 1749,
	396, 1749,
	397, 1749,
	398, 1749,
	399, 1749,
	400, 1749,
	401, 1749,
	402, 1749,
	403, 1749,
	404, 1749,
	405, 1749,
	407, 1749,
	408, 1749,
	409, 1749,
	411, 1749,
	412, 1749,
	413, 1749,
	414, 1749,
	415, 1749,
	416, 1749,
	417, 1749,
	418, 1749,
	419, 1749,
	420, 1749,
	421, 1749,
	422, 1749,
	423, 1749,
	424, 1749,
	426, 1749,
	428, 1749,
	429, 1749,
	430, 1749,
	436, 1749,
	437, 1749,
	438, 1749,
	440, 1749,
	441, 1749,
	442, 1749,
	443, 1749,
	444, 1749,
	445, 1749,
	446, 1749,
	447, 1749,
	448, 1749,
	449, 1749,
	450, 1749,
	452, 1749,
	453, 1749,
	454, 1749,
	455, 1749,
	456, 1749,
	457, 1749,
	458, 1749,
	459, 1749,
	460, 1749,
	461, 1749,
	462, 1749,
	464, 1749,
	465, 1749,
	466, 1749,
	467, 1749,
	468, 1749,
	469, 1749,
	470, 1749,
	471, 1749,
	472, 1749,
	473, 1749,
	474, 1749,
	475, 1749,
	476, 1749,
	478, 1749,
	479, 1749,
	480, 1749,
	481, 1749,
	482, 1749,
	483, 1749,
	484, 1749,
	485, 1749,
	486, 1749,
	487, 1749,
	488, 1749,
	489, 1749,
	490, 1749,
	491, 1749,
	492, 1749,
	493, 1749,
	494, 1749,
	495, 1749,
	496, 1749,
	497, 1749,
	498, 1749,
	499, 1749,
	501, 1749,
	503, 1749,
	504, 1749,
	505, 1749,
	506, 1749,
	507, 1749,
	508, 1749,
	509, 1749,
	510, 1749,
	511, 1749,
	512, 1749,
	513, 1749,
	514, 1749,
	515, 1749,
	516, 1749,
	517, 1749,
	518, 1749,
	519, 1749,
	520, 1749,
	521, 1749,
	523, 1749,
	524, 1749,
	525, 1749,
	526, 1749,
	527, 1749,
	529, 1749,
	530, 1749,
	531, 1749,
	532, 1749,
	533, 1749,
	534, 1749,
	536, 1749,
	537, 1749,
	539, 1749,
	540, 1749,
	541, 1749,
	542, 1749,
	543, 1749,
	545, 1749,
	547, 1749,
	548, 1749,
	549, 1749,
	550, 1749,
	551, 1749,
	552, 1749,
	553, 1749,
	554, 1749,
	555, 1749,
	556, 1749,
	557, 1749,
	558, 1749,
	559, 1749,
	560, 1749,
	561, 1749,
	563, 1749,
	564, 1749,
	565, 1749,
	566, 1749,
	567, 1749,
	568, 1749,
	569, 1749,
	570, 1749,
	571, 1749,
	572, 1749,
	573, 1749,
	576, 1749,
	577, 1749,
	578, 1749,
	579, 1749,
	580, 1749,
	581, 1749,
	583, 1749,
	584, 1749,
	585, 1749,
	586, 1749,
	587, 1749,
	588, 1749,
	589, 1749,
	590, 1749,
	595, 1749,
	596, 1749,
	597, 1749,
	598, 1749,
	599, 1749,
	600, 1749,
	601, 1749,
	616, 1749,
	623, 1749,
	624, 1749,
	625, 1749,
	633, 1749,
	637, 1749,
	-2, 0,
	-1, 801,
	4, 1469,
	21, 1469,
	22, 1469,
	23, 1469,
	24, 1469,
	25, 1469,
	26, 1469,
	27, 1469,
	28, 1469,
	30, 1469,
	31, 1469,
	37, 1469,
	41, 1469,
	43, 1469,
	44, 1469,
	46, 1469,
	47, 1469,
	48, 1469,
	49, 1469,
	50, 1469,
	51, 1469,
	52, 1469,
	53, 1469,
	54, 1469,
	56, 1469,
	57, 1469,
	58, 1469,
	59, 1469,
	61, 1469,
	62, 1469,
	63, 1469,
	64, 1469,
	65, 1469,
	66, 1469,
	67, 1469,
	71, 1469,
	72, 1469,
	73, 1469,
	74, 1469,
	76, 1469,
	77, 1469,
	78, 1469,
	82, 1469,
	83, 1469,
	84, 1469,
	85, 1469,
	86, 1469,
	87, 1469,
	88, 1469,
	89, 1469,
	92, 1469,
	93, 1469,
	94, 1469,
	95, 1469,
	96, 1469,
	98, 1469,
	100, 1469,
	101, 1469,
	102, 1469,
	103, 1469,
	104, 1469,
	105, 1469,
	107, 1469,
	108, 1469,
	109, 1469,
	111, 1469,
	112, 1469,
	113, 1469,
	121, 1469,
	122, 1469,
	123, 1469,
	124, 1469,
	125, 1469,
	127, 1469,
	128, 1469,
	129, 1469,
	130, 1469,
	132, 1469,
	133, 1469,
	134, 1469,
	136, 1469,
	137, 1469,
	138, 1469,
	140, 1469,
	141, 1469,
	142, 1469,
	145, 1469,
	146, 1469,
	147, 1469,
	149, 1469,
	150, 1469,
	151, 1469,
	153, 1469,
	154, 1469,
	155, 1469,
	157, 1469,
	158, 1469,
	159, 1469,
	160, 1469,
	161, 1469,
	162, 1469,
	163, 1469,
	164, 1469,
	165, 1469,
	166, 1469,
	167, 1469,
	168, 1469,
	169, 1469,
	170, 1469,
	171, 1469,
	172, 1469,
	173, 1469,
	175, 1469,
	181, 1469,
	182, 1469,
	183, 1469,
	184, 1469,
	188, 1469,
	190, 1469,
	191, 1469,
	192, 1469,
	194, 1469,
	195, 1469,
	198, 1469,
	199, 1469,
	200, 1469,
	201, 1469,
	202, 1469,
	203, 1469,
	204, 1469,
	205, 1469,
	206, 1469,
	207, 1469,
	208, 1469,
	209, 1469,
	210, 1469,
	211, 1469,
	213, 1469,
	214, 1469,
	216, 1469,
	217, 1469,
	219, 1469,
	220, 1469,
	221, 1469,
	222, 1469,
	223, 1469,
	224, 1469,
	225, 1469,
	226, 1469,
	227, 1469,
	228, 1469,
	229, 1469,
	231, 1469,
	232, 1469,
	234, 1469,
	235, 1469,
	236, 1469,
	237, 1469,
	238, 1469,
	242, 1469,
	243, 1469,
	244, 1469,
	245, 1469,
	248, 1469,
	249, 1469,
	250, 1469,
	251, 1469,
	253, 1469,
	255, 1469,
	256, 1469,
	258, 1469,
	260, 1469,
	261, 1469,
	262, 1469,
	264, 1469,
	268, 1469,
	269, 1469,
	270, 1469,
	271, 1469,
	272, 1469,
	273, 1469,
	275, 1469,
	276, 1469,
	277, 1469,
	279, 1469,
	280, 1469,
	282, 1469,
	283, 1469,
	286, 1469,
	287, 1469,
	288, 1469,
	289, 1469,
	290, 1469,
	291, 1469,
	292, 1469,
	295, 1469,
	296, 1469,
	297, 1469,
	298, 1469,
	300, 1469,
	301, 1469,
	302, 1469,
	303, 1469,
	304, 1469,
	305, 1469,
	306, 1469,
	307, 1469,
	308, 1469,
	309, 1469,
	310, 1469,
	311, 1469,
	312, 1469,
	313, 1469,
	314, 1469,
	315, 1469,
	316, 1469,
	317, 1469,
	318, 1469,
	319, 1469,
	320, 1469,
	321, 1469,
	322, 1469,
	324, 1469,
	326, 1469,
	327, 1469,
	328, 1469,
	329, 1469,
	330, 1469,
	331, 1469,
	332, 1469,
	333, 1469,
	334, 1469,
	335, 1469,
	336, 1469,
	337, 1469,
	338, 1469,
	339, 1469,
	340, 1469,
	341, 1469,
	342, 1469,
	344, 1469,
	345, 1469,
	347, 1469,
	349, 1469,
	350, 1469,
	351, 1469,
	352, 1469,
	354, 1469,
	355, 1469,
	356, 1469,
	357, 1469,
	358, 1469,
	361, 1469,
	363, 1469,
	366, 1469,
	367, 1469,
	368, 1469,
	371, 1469,
	372, 1469,
	373, 1469,
	375, 1469,
	377, 1469,
	378, 1469,
	379, 1469,
	380, 1469,
	381, 1469,
	382, 1469,
	383, 1469,
	384, 1469,
	385, 1469,
	386, 1469,
	387, 1469,
	388, 1469,
	389, 1469,
	391, 1469,
	392, 1469,
	393, 1469,
	394, 1469,
	395, 1469,
	396, 1469,
	397, 1469,
	398, 1469,
	399, 1469,
	400, 1469,
	401, 1469,
	402, 1469,
	403, 1469,
	404, 1469,
	405, 1469,
	407, 1469,
	408, 1469,
	409, 1469,
	411, 1469,
	412, 1469,
	413, 1469,
	414, 1469,
	415, 1469,
	416, 1469,
	417, 1469,
	418, 1469,
	419, 1469,
	420, 1469,
	421, 1469,
	422, 1469,
	423, 1469,
	424, 1469,
	426, 1469,
	428, 1469,
	429, 1469,
	430, 1469,
	436, 1469,
	437, 1469,
	438, 1469,
	440, 1469,
	441, 1469,
	442, 1469,
	443, 1469,
	444, 1469,
	445, 1469,
	446, 1469,
	447, 1469,
	448, 1469,
	449, 1469,
	450, 1469,
	452, 1469,
	453, 1469,
	454, 1469,
	456, 1469,
	457, 1469,
	458, 1469,
	459, 1469,
	460, 1469,
	461, 1469,
	462, 1469,
	464, 1469,
	465, 1469,
	466, 1469,
	467, 1469,
	468, 1469,
	469, 1469,
	470, 1469,
	471, 1469,
	472, 1469,
	473, 1469,
	474, 1469,
	475, 1469,
	476, 1469,
	478, 1469,
	479, 1469,
	480, 1469,
	481, 1469,
	482, 1469,
	483, 1469,
	485, 1469,
	486, 1469,
	487, 1469,
	488, 1469,
	489, 1469,
	490, 1469,
	492, 1469,
	493, 1469,
	494, 1469,
	495, 1469,
	496, 1469,
	497, 1469,
	498, 1469,
	499, 1469,
	501, 1469,
	503, 1469,
	504, 1469,
	505, 1469,
	506, 1469,
	507, 1469,
	508, 1469,
	509, 1469,
	510, 1469,
	511, 1469,
	512, 1469,
	513, 1469,
	514, 1469,
	515, 1469,
	516, 1469,
	517, 1469,
	518, 1469,
	519, 1469,
	520, 1469,
	521, 1469,
	523, 1469,
	524, 1469,
	526, 1469,
	527, 1469,
	529, 1469,
	530, 1469,
	531, 1469,
	532, 1469,
	533, 1469,
	534, 1469,
	536, 1469,
	537, 1469,
	539, 1469,
	540, 1469,
	541, 1469,
	542, 1469,
	543, 1469,
	545, 1469,
	547, 1469,
	548, 1469,
	549, 1469,
	550, 1469,
	551, 1469,
	552, 1469,
	553, 1469,
	555, 1469,
	556, 1469,
	557, 1469,
	558, 1469,
	559, 1469,
	560, 1469,
	561, 1469,
	564, 1469,
	565, 1469,
	566, 1469,
	567, 1469,
	568, 1469,
	569, 1469,
	570, 1469,
	571, 1469,
	573, 1469,
	576, 1469,
	577, 1469,
	578, 1469,
	579, 1469,
	580, 1469,
	581, 1469,
	583, 1469,
	584, 1469,
	585, 1469,
	586, 1469,
	587, 1469,
	588, 1469,
	589, 1469,
	590, 1469,
	595, 1469,
	596, 1469,
	597, 1469,
	598, 1469,
	599, 1469,
	600, 1469,
	-2, 0,
	-1, 820,
	196, 2547,
	544, 2547,
	615, 2547,
	635, 2547,
	-2, 0,
	-1, 821,
	196, 2533,
	544, 2533,
	615, 2533,
	635, 2533,
	-2, 0,
	-1, 823,
	196, 2815,
	544, 2815,
	615, 2815,
	635, 2815,
	-2, 0,
	-1, 826,
	196, 2663,
	544, 2663,
	615, 2663,
	635, 2663,
	-2, 0,
	-1, 827,
	196, 2860,
	544, 2860,
	615, 2860,
	635, 2860,
	-2, 0,
	-1, 835,
	196, 2691,
	544, 2691,
	615, 2691,
	635, 2691,
	-2, 774,
	-1, 851,
	8, 907,
	29, 907,
	623, 907,
	624, 907,
	-2, 912,
	-1, 855,
	1, 2601,
	636, 2601,
	-2, 912,
	-1, 856,
	1, 2651,
	636, 2651,
	-2, 912,
	-1, 859,
	1, 2696,
	636, 2696,
	-2, 905,
	-1, 860,
	1, 2752,
	636, 2752,
	-2, 906,
	-1, 861,
	1, 2606,
	636, 2606,
	-2, 909,
	-1, 862,
	1, 2520,
	636, 2520,
	-2, 910,
	-1, 897,
	635, 2479,
	638, 2479,
	-2, 1129,
	-1, 898,
	635, 2481,
	638, 2481,
	-2, 1130,
	-1, 899,
	635, 2480,
	638, 2480,
	-2, 1131,
	-1, 900,
	638, 2403,
	-2, 1132,
	-1, 926,
	189, 287,
	-2, 0,
	-1, 949,
	45, 2452,
	-2, 0,
	-1, 950,
	583, 1447,
	-2, 1215,
	-1, 966,
	4, 1883,
	21, 1883,
	22, 1883,
	23, 1883,
	24, 1883,
	25, 1883,
	26, 1883,
	27, 1883,
	28, 1883,
	30, 1883,
	31, 1883,
	37, 1883,
	41, 1883,
	43, 1883,
	44, 1883,
	46, 1883,
	47, 1883,
	48, 1883,
	49, 1883,
	50, 1883,
	51, 1883,
	52, 1883,
	53, 1883,
	54, 1883,
	56, 1883,
	57, 1883,
	58, 1883,
	59, 1883,
	61, 1883,
	62, 1883,
	63, 1883,
	64, 1883,
	65, 1883,
	66, 1883,
	67, 1883,
	71, 1883,
	72, 1883,
	73, 1883,
	74, 1883,
	76, 1883,
	77, 1883,
	78, 1883,
	82, 1883,
	83, 1883,
	84, 1883,
	85, 1883,
	86, 1883,
	87, 1883,
	88, 1883,
	89, 1883,
	92, 1883,
	93, 1883,
	94, 1883,
	95, 1883,
	96, 1883,
	98, 1883,
	100, 1883,
	101, 1883,
	102, 1883,
	103, 1883,
	104, 1883,
	105, 1883,
	107, 1883,
	108, 1883,
	109, 1883,
	111, 1883,
	112, 1883,
	113, 1883,
	121, 1883,
	122, 1883,
	123, 1883,
	124, 1883,
	125, 1883,
	127, 1883,
	128, 1883,
	129, 1883,
	130, 1883,
	132, 1883,
	133, 1883,
	134, 1883,
	136, 1883,
	137, 1883,
	138, 1883,
	140, 1883,
	141, 1883,
	142, 1883,
	145, 1883,
	146, 1883,
	147, 1883,
	149, 1883,
	150, 1883,
	151, 1883,
	153, 1883,
	154, 1883,
	155, 1883,
	157, 1883,
	158, 1883,
	159, 1883,
	160, 1883,
	161, 1883,
	162, 1883,
	163, 1883,
	164, 1883,
	165, 1883,
	166, 1883,
	167, 1883,
	168, 1883,
	169, 1883,
	170, 1883,
	171, 1883,
	172, 1883,
	173, 1883,
	175, 1883,
	181, 1883,
	182, 1883,
	183, 1883,
	184, 1883,
	188, 1883,
	190, 1883,
	191, 1883,
	192, 1883,
	194, 1883,
	195, 1883,
	198, 1883,
	199, 1883,
	200, 1883,
	201, 1883,
	202, 1883,
	203, 1883,
	204, 1883,
	205, 1883,
	206, 1883,
	207, 1883,
	208, 1883,
	209, 1883,
	210, 1883,
	211, 1883,
	213, 1883,
	214, 1883,
	216, 1883,
	217, 1883,
	219, 1883,
	220, 1883,
	221, 1883,
	222, 1883,
	223, 1883,
	224, 1883,
	225, 1883,
	226, 1883,
	227, 1883,
	228, 1883,
	229, 1883,
	231, 1883,
	232, 1883,
	234, 1883,
	235, 1883,
	236, 1883,
	237, 1883,
	238, 1883,
	242, 1883,
	243, 1883,
	244, 1883,
	245, 1883,
	248, 1883,
	249, 1883,
	250, 1883,
	251, 1883,
	253, 1883,
	255, 1883,
	256, 1883,
	258, 1883,
	260, 1883,
	261, 1883,
	262, 1883,
	264, 1883,
	268, 1883,
	269, 1883,
	270, 1883,
	271, 1883,
	272, 1883,
	273, 1883,
	275, 1883,
	276, 1883,
	277, 1883,
	279, 1883,
	280, 1883,
	282, 1883,
	283, 1883,
	286, 1883,
	287, 1883,
	288, 1883,
	289, 1883,
	290, 1883,
	291, 1883,
	292, 1883,
	295, 1883,
	296, 1883,
	297, 1883,
	298, 1883,
	300, 1883,
	301, 1883,
	302, 1883,
	303, 1883,
	304, 1883,
	305, 1883,
	306, 1883,
	307, 1883,
	308, 1883,
	309, 1883,
	310, 1883,
	311, 1883,
	312, 1883,
	313, 1883,
	314, 1883,
	315, 1883,
	316, 1883,
	317, 1883,
	318, 1883,
	319, 1883,
	320, 1883,
	321, 1883,
	322, 1883,
	324, 1883,
	326, 1883,
	327, 1883,
	328, 1883,
	329, 1883,
	330, 1883,
	331, 1883,
	332, 1883,
	333, 1883,
	334, 1883,
	335, 1883,
	336, 1883,
	337, 1883,
	338, 1883,
	339, 1883,
	340, 1883,
	341, 1883,
	342, 1883,
	344, 1883,
	345, 1883,
	347, 1883,
	349, 1883,
	350, 1883,
	351, 1883,
	352, 1883,
	354, 1883,
	355, 1883,
	356, 1883,
	357, 1883,
	358, 1883,
	361, 1883,
	363, 1883,
	366, 1883,
	367, 1883,
	368, 1883,
	371, 1883,
	372, 1883,
	373, 1883,
	375, 1883,
	377, 1883,
	378, 1883,
	379, 1883,
	380, 1883,
	381, 1883,
	382, 1883,
	383, 1883,
	384, 1883,
	385, 1883,
	386, 1883,
	387, 1883,
	388, 1883,
	389, 1883,
	391, 1883,
	392, 1883,
	393, 1883,
	394, 1883,
	395, 1883,
	396, 1883,
	397, 1883,
	398, 1883,
	399, 1883,
	400, 1883,
	401, 1883,
	402, 1883,
	403, 1883,
	404, 1883,
	405, 1883,
	407, 1883,
	408, 1883,
	409, 1883,
	411, 1883,
	412, 1883,
	413, 1883,
	414, 1883,
	415, 1883,
	416, 1883,
	417, 1883,
	418, 1883,
	419, 1883,
	420, 1883,
	421, 1883,
	422, 1883,
	423, 1883,
	424, 1883,
	426, 1883,
	428, 1883,
	429, 1883,
	430, 1883,
	436, 1883,
	437, 1883,
	438, 1883,
	440, 1883,
	441, 1883,
	442, 1883,
	443, 1883,
	444, 1883,
	445, 1883,
	446, 1883,
	447, 1883,
	448, 1883,
	449, 1883,
	450, 1883,
	452, 1883,
	453, 1883,
	454, 1883,
	456, 1883,
	457, 1883,
	458, 1883,
	459, 1883,
	460, 1883,
	461, 1883,
	462, 1883,
	464, 1883,
	465, 1883,
	466, 1883,
	467, 1883,
	468, 1883,
	469, 1883,
	470, 1883,
	471, 1883,
	472, 1883,
	473, 1883,
	474, 1883,
	475, 1883,
	476, 1883,
	478, 1883,
	479, 1883,
	480, 1883,
	481, 1883,
	482, 1883,
	483, 1883,
	485, 1883,
	486, 1883,
	487, 1883,
	488, 1883,
	489, 1883,
	490, 1883,
	492, 1883,
	493, 1883,
	494, 1883,
	495, 1883,
	496, 1883,
	497, 1883,
	498, 1883,
	499, 1883,
	501, 1883,
	503, 1883,
	504, 1883,
	505, 1883,
	506, 1883,
	507, 1883,
	508, 1883,
	509, 1883,
	510, 1883,
	511, 1883,
	512, 1883,
	513, 1883,
	514, 1883,
	515, 1883,
	516, 1883,
	517, 1883,
	518, 1883,
	519, 1883,
	520, 1883,
	521, 1883,
	523, 1883,
	524, 1883,
	526, 1883,
	527, 1883,
	529, 1883,
	530, 1883,
	531, 1883,
	532, 1883,
	533, 1883,
	534, 1883,
	536, 1883,
	537, 1883,
	539, 1883,
	540, 1883,
	541, 1883,
	542, 1883,
	543, 1883,
	545, 1883,
	547, 1883,
	548, 1883,
	549, 1883,
	550, 1883,
	551, 1883,
	552, 1883,
	553, 1883,
	555, 1883,
	556, 1883,
	557, 1883,
	558, 1883,
	559, 1883,
	560, 1883,
	561, 1883,
	564, 1883,
	565, 1883,
	566, 1883,
	567, 1883,
	568, 1883,
	569, 1883,
	570, 1883,
	571, 1883,
	573, 1883,
	576, 1883,
	577, 1883,
	578, 1883,
	579, 1883,
	580, 1883,
	581, 1883,
	583, 1883,
	584, 1883,
	585, 1883,
	586, 1883,
	587, 1883,
	588, 1883,
	589, 1883,
	590, 1883,
	595, 1883,
	596, 1883,
	597, 1883,
	598, 1883,
	599, 1883,
	600, 1883,
	-2, 0,
	-1, 976,
	272, 454,
	-2, 0,
	-1, 1054,
	196, 951,
	-2, 0,
	-1, 1055,
	413, 1004,
	483, 1004,
	527, 1004,
	549, 1004,
	-2, 0,
	-1, 1056,
	413, 1003,
	483, 1003,
	527, 1003,
	549, 1003,
	-2, 925,
	-1, 1060,
	1, 1056,
	632, 1056,
	634, 1056,
	636, 1056,
	-2, 0,
	-1, 1062,
	1, 978,
	632, 978,
	634, 978,
	636, 978,
	-2, 0,
	-1, 1063,
	1, 982,
	632, 982,
	634, 982,
	636, 982,
	-2, 0,
	-1, 1064,
	1, 1128,
	189, 1128,
	632, 1128,
	634, 1128,
	636, 1128,
	-2, 0,
	-1, 1072,
	1, 1009,
	632, 1009,
	634, 1009,
	636, 1009,
	-2, 0,
	-1, 1079,
	1, 1056,
	632, 1056,
	634, 1056,
	636, 1056,
	-2, 0,
	-1, 1080,
	1, 1058,
	632, 1058,
	634, 1058,
	636, 1058,
	-2, 0,
	-1, 1081,
	1, 1061,
	632, 1061,
	634, 1061,
	636, 1061,
	-2, 0,
	-1, 1089,
	1, 1091,
	632, 1091,
	634, 1091,
	636, 1091,
	-2, 0,
	-1, 1090,
	1, 1093,
	632, 1093,
	634, 1093,
	636, 1093,
	-2, 0,
	-1, 1095,
	1, 1121,
	632, 1121,
	634, 1121,
	636, 1121,
	-2, 0,
	-1, 1151,
	176, 1753,
	189, 1753,
	285, 1753,
	359, 1753,
	-2, 1689,
	-1, 1167,
	176, 1752,
	189, 1752,
	285, 1752,
	359, 1752,
	-2, 1686,
	-1, 1196,
	635, 2478,
	-2, 782,
	-1, 1225,
	5, 2470,
	633, 2468,
	-2, 2459,
	-1, 1233,
	5, 2491,
	633, 2488,
	-2, 2479,
	-1, 1234,
	5, 2492,
	633, 2489,
	-2, 2480,
	-1, 1242,
	635, 2476,
	-2, 2458,
	-1, 1243,
	633, 2948,
	-2, 2477,
	-1, 1266,
	633, 2947,
	-2, 2493,
	-1, 1267,
	5, 1958,
	-2, 2918,
	-1, 1268,
	5, 1959,
	-2, 2919,
	-1, 1269,
	5, 1960,
	-2, 2933,
	-1, 1270,
	5, 1961,
	-2, 2897,
	-1, 1271,
	5, 1962,
	-2, 2931,
	-1, 1272,
	5, 1970,
	-2, 2910,
	-1, 1273,
	5, 1957,
	-2, 2906,
	-1, 1274,
	5, 1957,
	-2, 2905,
	-1, 1275,
	5, 1957,
	-2, 2924,
	-1, 1276,
	5, 1968,
	-2, 2899,
	-1, 1277,
	5, 1973,
	-2, 2898,
	-1, 1278,
	5, 1975,
	-2, 2943,
	-1, 1281,
	5, 1997,
	-2, 2936,
	-1, 1282,
	5, 1989,
	-2, 2937,
	-1, 1283,
	5, 1997,
	-2, 2938,
	-1, 1284,
	5, 1993,
	-2, 2939,
	-1, 1285,
	5, 1943,
	-2, 2911,
	-1, 1286,
	5, 1944,
	-2, 2912,
	-1, 1287,
	5, 1945,
	-2, 2900,
	-1, 1315,
	5, 1980,
	-2, 2944,
	-1, 1316,
	5, 1981,
	-2, 2934,
	-1, 1317,
	5, 1982,
	584, 1982,
	-2, 2901,
	-1, 1318,
	5, 1983,
	584, 1983,
	-2, 2902,
	-1, 1356,
	633, 2488,
	-2, 2479,
	-1, 1357,
	633, 2489,
	-2, 2480,
	-1, 1458,
	196, 2860,
	544, 2860,
	615, 2860,
	635, 2860,
	-2, 0,
	-1, 1463,
	1, 758,
	636, 758,
	-2, 1598,
	-1, 1610,
	379, 2453,
	440, 2453,
	485, 2453,
	625, 2453,
	-2, 2441,
	-1, 1616,
	196, 147,
	279, 147,
	344, 147,
	590, 147,
	-2, 2855,
	-1, 1617,
	196, 148,
	279, 148,
	344, 148,
	590, 148,
	-2, 2592,
	-1, 1618,
	196, 149,
	279, 149,
	344, 149,
	590, 149,
	-2, 2775,
	-1, 1624,
	637, 2453,
	-2, 2455,
	-1, 1648,
	1, 1444,
	445, 1398,
	485, 1398,
	607, 1398,
	612, 1398,
	632, 1444,
	634, 1444,
	636, 1444,
	-2, 1738,
	-1, 1654,
	212, 1541,
	233, 1541,
	454, 1541,
	-2, 0,
	-1, 1704,
	422, 1214,
	583, 1214,
	-2, 449,
	-1, 1720,
	45, 2451,
	-2, 1177,
	-1, 1727,
	1, 1444,
	632, 1444,
	634, 1444,
	636, 1444,
	-2, 1738,
	-1, 1735,
	4, 1469,
	21, 1469,
	22, 1469,
	23, 1469,
	24, 1469,
	25, 1469,
	26, 1469,
	27, 1469,
	28, 1469,
	30, 1469,
	31, 1469,
	37, 1469,
	41, 1469,
	43, 1469,
	44, 1469,
	46, 1469,
	47, 1469,
	48, 1469,
	49, 1469,
	50, 1469,
	51, 1469,
	52, 1469,
	53, 1469,
	54, 1469,
	56, 1469,
	57, 1469,
	58, 1469,
	59, 1469,
	61, 1469,
	62, 1469,
	63, 1469,
	64, 1469,
	65, 1469,
	66, 1469,
	67, 1469,
	71, 1469,
	72, 1469,
	73, 1469,
	74, 1469,
	76, 1469,
	77, 1469,
	78, 1469,
	82, 1469,
	83, 1469,
	84, 1469,
	85, 1469,
	86, 1469,
	87, 1469,
	88, 1469,
	89, 1469,
	92, 1469,
	93, 1469,
	94, 1469,
	95, 1469,
	96, 1469,
	98, 1469,
	100, 1469,
	101, 1469,
	102, 1469,
	103, 1469,
	104, 1469,
	105, 1469,
	107, 1469,
	108, 1469,
	109, 1469,
	111, 1469,
	112, 1469,
	113, 1469,
	121, 1469,
	122, 1469,
	123, 1469,
	124, 1469,
	125, 1469,
	127, 1469,
	128, 1469,
	129, 1469,
	130, 1469,
	132, 1469,
	133, 1469,
	134, 1469,
	136, 1469,
	137, 1469,
	138, 1469,
	140, 1469,
	141, 1469,
	142, 1469,
	145, 1469,
	146, 1469,
	147, 1469,
	149, 1469,
	150, 1469,
	151, 1469,
	153, 1469,
	154, 1469,
	155, 1469,
	157, 1469,
	158, 1469,
	159, 1469,
	160, 1469,
	161, 1469,
	162, 1469,
	163, 1469,
	164, 1469,
	165, 1469,
	166, 1469,
	167, 1469,
	168, 1469,
	169, 1469,
	170, 1469,
	171, 1469,
	172, 1469,
	173, 1469,
	181, 1469,
	182, 1469,
	183, 1469,
	184, 1469,
	188, 1469,
	190, 1469,
	191, 1469,
	192, 1469,
	194, 1469,
	195, 1469,
	198, 1469,
	199, 1469,
	200, 1469,
	201, 1469,
	202, 1469,
	203, 1469,
	204, 1469,
	205, 1469,
	206, 1469,
	207, 1469,
	208, 1469,
	209, 1469,
	210, 1469,
	211, 1469,
	213, 1469,
	214, 1469,
	216, 1469,
	217, 1469,
	219, 1469,
	220, 1469,
	221, 1469,
	222, 1469,
	223, 1469,
	224, 1469,
	225, 1469,
	226, 1469,
	227, 1469,
	228, 1469,
	229, 1469,
	231, 1469,
	232, 1469,
	234, 1469,
	235, 1469,
	236, 1469,
	237, 1469,
	238, 1469,
	243, 1469,
	244, 1469,
	245, 1469,
	248, 1469,
	249, 1469,
	250, 1469,
	251, 1469,
	253, 1469,
	255, 1469,
	256, 1469,
	258, 1469,
	260, 1469,
	261, 1469,
	262, 1469,
	264, 1469,
	268, 1469,
	269, 1469,
	270, 1469,
	271, 1469,
	272, 1469,
	273, 1469,
	275, 1469,
	276, 1469,
	277, 1469,
	279, 1469,
	280, 1469,
	282, 1469,
	283, 1469,
	286, 1469,
	287, 1469,
	288, 1469,
	289, 1469,
	290, 1469,
	291, 1469,
	292, 1469,
	295, 1469,
	296, 1469,
	297, 1469,
	298, 1469,
	300, 1469,
	301, 1469,
	302, 1469,
	303, 1469,
	304, 1469,
	305, 1469,
	306, 1469,
	307, 1469,
	308, 1469,
	309, 1469,
	310, 1469,
	311, 1469,
	312, 1469,
	313, 1469,
	314, 1469,
	315, 1469,
	316, 1469,
	317, 1469,
	318, 1469,
	319, 1469,
	320, 1469,
	321, 1469,
	322, 1469,
	324, 1469,
	326, 1469,
	327, 1469,
	328, 1469,
	329, 1469,
	330, 1469,
	331, 1469,
	332, 1469,
	333, 1469,
	334, 1469,
	335, 1469,
	336, 1469,
	337, 1469,
	338, 1469,
	339, 1469,
	340, 1469,
	341, 1469,
	342, 1469,
	344, 1469,
	345, 1469,
	349, 1469,
	350, 1469,
	351, 1469,
	352, 1469,
	354, 1469,
	355, 1469,
	356, 1469,
	357, 1469,
	358, 1469,
	361, 1469,
	363, 1469,
	364, 1469,
	366, 1469,
	367, 1469,
	368, 1469,
	371, 1469,
	372, 1469,
	373, 1469,
	375, 1469,
	377, 1469,
	378, 1469,
	379, 1469,
	380, 1469,
	381, 1469,
	382, 1469,
	383, 1469,
	384, 1469,
	385, 1469,
	386, 1469,
	387, 1469,
	388, 1469,
	389, 1469,
	391, 1469,
	392, 1469,
	393, 1469,
	394, 1469,
	395, 1469,
	396, 1469,
	397, 1469,
	398, 1469,
	399, 1469,
	400, 1469,
	401, 1469,
	402, 1469,
	403, 1469,
	404, 1469,
	405, 1469,
	407, 1469,
	408, 1469,
	409, 1469,
	411, 1469,
	412, 1469,
	413, 1469,
	414, 1469,
	415, 1469,
	416, 1469,
	417, 1469,
	418, 1469,
	419, 1469,
	420, 1469,
	421, 1469,
	422, 1469,
	423, 1469,
	424, 1469,
	426, 1469,
	428, 1469,
	429, 1469,
	430, 1469,
	436, 1469,
	437, 1469,
	438, 1469,
	440, 1469,
	441, 1469,
	442, 1469,
	443, 1469,
	444, 1469,
	445, 1469,
	446, 1469,
	447, 1469,
	448, 1469,
	449, 1469,
	450, 1469,
	452, 1469,
	453, 1469,
	454, 1469,
	456, 1469,
	457, 1469,
	458, 1469,
	459, 1469,
	460, 1469,
	461, 1469,
	462, 1469,
	464, 1469,
	465, 1469,
	466, 1469,
	467, 1469,
	468, 1469,
	469, 1469,
	470, 1469,
	471, 1469,
	472, 1469,
	473, 1469,
	474, 1469,
	475, 1469,
	476, 1469,
	478, 1469,
	479, 1469,
	480, 1469,
	481, 1469,
	482, 1469,
	483, 1469,
	485, 1469,
	486, 1469,
	487, 1469,
	488, 1469,
	489, 1469,
	490, 1469,
	492, 1469,
	493, 1469,
	494, 1469,
	495, 1469,
	496, 1469,
	497, 1469,
	498, 1469,
	499, 1469,
	501, 1469,
	503, 1469,
	504, 1469,
	505, 1469,
	506, 1469,
	507, 1469,
	508, 1469,
	509, 1469,
	510, 1469,
	511, 1469,
	512, 1469,
	513, 1469,
	514, 1469,
	515, 1469,
	516, 1469,
	517, 1469,
	518, 1469,
	519, 1469,
	520, 1469,
	521, 1469,
	523, 1469,
	524, 1469,
	526, 1469,
	527, 1469,
	529, 1469,
	530, 1469,
	531, 1469,
	532, 1469,
	533, 1469,
	534, 1469,
	536, 1469,
	537, 1469,
	539, 1469,
	540, 1469,
	541, 1469,
	542, 1469,
	543, 1469,
	545, 1469,
	547, 1469,
	548, 1469,
	549, 1469,
	550, 1469,
	551, 1469,
	552, 1469,
	553, 1469,
	555, 1469,
	556, 1469,
	557, 1469,
	558, 1469,
	559, 1469,
	560, 1469,
	561, 1469,
	564, 1469,
	565, 1469,
	566, 1469,
	567, 1469,
	568, 1469,
	569, 1469,
	570, 1469,
	571, 1469,
	573, 1469,
	576, 1469,
	577, 1469,
	578, 1469,
	579, 1469,
	580, 1469,
	581, 1469,
	583, 1469,
	584, 1469,
	585, 1469,
	586, 1469,
	587, 1469,
	588, 1469,
	589, 1469,
	590, 1469,
	595, 1469,
	596, 1469,
	597, 1469,
	598, 1469,
	599, 1469,
	600, 1469,
	-2, 0,
	-1, 1758,
	1, 588,
	632, 588,
	634, 588,
	636, 588,
	-2, 1709,
	-1, 1761,
	4, 2942,
	11, 2942,
	12, 2942,
	14, 2942,
	15, 2942,
	16, 2942,
	17, 2942,
	18, 2942,
	19, 2942,
	21, 2942,
	22, 2942,
	23, 2942,
	24, 2942,
	25, 2942,
	26, 2942,
	27, 2942,
	28, 2942,
	30, 2942,
	31, 2942,
	34, 2942,
	35, 2942,
	37, 2942,
	39, 2942,
	41, 2942,
	43, 2942,
	44, 2942,
	46, 2942,
	47, 2942,
	48, 2942,
	49, 2942,
	50, 2942,
	51, 2942,
	52, 2942,
	53, 2942,
	54, 2942,
	56, 2942,
	57, 2942,
	58, 2942,
	59, 2942,
	61, 2942,
	62, 2942,
	63, 2942,
	64, 2942,
	65, 2942,
	66, 2942,
	67, 2942,
	70, 2942,
	71, 2942,
	72, 2942,
	73, 2942,
	74, 2942,
	76, 2942,
	77, 2942,
	78, 2942,
	79, 2942,
	82, 2942,
	83, 2942,
	84, 2942,
	85, 2942,
	86, 2942,
	87, 2942,
	88, 2942,
	89, 2942,
	90, 2942,
	92, 2942,
	93, 2942,
	94, 2942,
	95, 2942,
	96, 2942,
	98, 2942,
	99, 2942,
	100, 2942,
	101, 2942,
	102, 2942,
	103, 2942,
	104, 2942,
	105, 2942,
	107, 2942,
	108, 2942,
	109, 2942,
	110, 2942,
	111, 2942,
	112, 2942,
	113, 2942,
	121, 2942,
	122, 2942,
	123, 2942,
	124, 2942,
	125, 2942,
	127, 2942,
	128, 2942,
	129, 2942,
	130, 2942,
	132, 2942,
	133, 2942,
	134, 2942,
	136, 2942,
	137, 2942,
	138, 2942,
	140, 2942,
	141, 2942,
	142, 2942,
	145, 2942,
	146, 2942,
	147, 2942,
	149, 2942,
	150, 2942,
	151, 2942,
	153, 2942,
	154, 2942,
	155, 2942,
	157, 2942,
	158, 2942,
	159, 2942,
	160, 2942,
	161, 2942,
	162, 2942,
	163, 2942,
	164, 2942,
	165, 2942,
	166, 2942,
	167, 2942,
	168, 2942,
	169, 2942,
	170, 2942,
	171, 2942,
	172, 2942,
	173, 2942,
	177, 2942,
	178, 2942,
	179, 2942,
	180, 2942,
	181, 2942,
	182, 2942,
	183, 2942,
	184, 2942,
	187, 2942,
	188, 2942,
	190, 2942,
	191, 2942,
	192, 2942,
	194, 2942,
	195, 2942,
	197, 2942,
	198, 2942,
	199, 2942,
	200, 2942,
	201, 2942,
	202, 2942,
	203, 2942,
	204, 2942,
	205, 2942,
	206, 2942,
	207, 2942,
	208, 2942,
	209, 2942,
	210, 2942,
	211, 2942,
	213, 2942,
	214, 2942,
	216, 2942,
	217, 2942,
	219, 2942,
	220, 2942,
	221, 2942,
	222, 2942,
	223, 2942,
	224, 2942,
	225, 2942,
	226, 2942,
	227, 2942,
	228, 2942,
	229, 2942,
	230, 2942,
	231, 2942,
	232, 2942,
	233, 2942,
	234, 2942,
	235, 2942,
	236, 2942,
	237, 2942,
	238, 2942,
	240, 2942,
	241, 2942,
	243, 2942,
	244, 2942,
	245, 2942,
	247, 2942,
	248, 2942,
	249, 2942,
	250, 2942,
	251, 2942,
	253, 2942,
	255, 2942,
	256, 2942,
	257, 2942,
	258, 2942,
	259, 2942,
	260, 2942,
	261, 2942,
	262, 2942,
	263, 2942,
	264, 2942,
	266, 2942,
	267, 2942,
	268, 2942,
	269, 2942,
	270, 2942,
	271, 2942,
	272, 2942,
	273, 2942,
	275, 2942,
	276, 2942,
	277, 2942,
	279, 2942,
	280, 2942,
	281, 2942,
	282, 2942,
	283, 2942,
	284, 2942,
	286, 2942,
	287, 2942,
	288, 2942,
	289, 2942,
	290, 2942,
	291, 2942,
	292, 2942,
	295, 2942,
	296, 2942,
	297, 2942,
	298, 2942,
	299, 2942,
	300, 2942,
	301, 2942,
	302, 2942,
	303, 2942,
	304, 2942,
	305, 2942,
	306, 2942,
	307, 2942,
	308, 2942,
	309, 2942,
	310, 2942,
	311, 2942,
	312, 2942,
	313, 2942,
	314, 2942,
	315, 2942,
	316, 2942,
	317, 2942,
	318, 2942,
	319, 2942,
	320, 2942,
	321, 2942,
	322, 2942,
	324, 2942,
	325, 2942,
	326, 2942,
	327, 2942,
	328, 2942,
	329, 2942,
	330, 2942,
	331, 2942,
	332, 2942,
	333, 2942,
	334, 2942,
	335, 2942,
	336, 2942,
	337, 2942,
	338, 2942,
	339, 2942,
	340, 2942,
	341, 2942,
	342, 2942,
	344, 2942,
	345, 2942,
	348, 2942,
	349, 2942,
	350, 2942,
	351, 2942,
	352, 2942,
	354, 2942,
	355, 2942,
	356, 2942,
	357, 2942,
	358, 2942,
	361, 2942,
	363, 2942,
	366, 2942,
	367, 2942,
	368, 2942,
	369, 2942,
	371, 2942,
	372, 2942,
	373, 2942,
	375, 2942,
	377, 2942,
	378, 2942,
	379, 2942,
	380, 2942,
	381, 2942,
	382, 2942,
	383, 2942,
	384, 2942,
	385, 2942,
	386, 2942,
	387, 2942,
	388, 2942,
	389, 2942,
	391, 2942,
	392, 2942,
	393, 2942,
	394, 2942,
	395, 2942,
	396, 2942,
	397, 2942,
	398, 2942,
	399, 2942,
	400, 2942,
	401, 2942,
	402, 2942,
	403, 2942,
	404, 2942,
	405, 2942,
	407, 2942,
	408, 2942,
	409, 2942,
	411, 2942,
	412, 2942,
	413, 2942,
	414, 2942,
	415, 2942,
	416, 2942,
	417, 2942,
	418, 2942,
	419, 2942,
	420, 2942,
	421, 2942,
	422, 2942,
	423, 2942,
	424, 2942,
	426, 2942,
	428, 2942,
	429, 2942,
	430, 2942,
	436, 2942,
	437, 2942,
	438, 2942,
	439, 2942,
	440, 2942,
	441, 2942,
	442, 2942,
	443, 2942,
	444, 2942,
	445, 2942,
	446, 2942,
	447, 2942,
	448, 2942,
	449, 2942,
	450, 2942,
	452, 2942,
	453, 2942,
	454, 2942,
	455, 2942,
	456, 2942,
	457, 2942,
	458, 2942,
	459, 2942,
	460, 2942,
	461, 2942,
	462, 2942,
	463, 2942,
	464, 2942,
	465, 2942,
	466, 2942,
	467, 2942,
	468, 2942,
	469, 2942,
	470, 2942,
	471, 2942,
	472, 2942,
	473, 2942,
	474, 2942,
	475, 2942,
	476, 2942,
	478, 2942,
	479, 2942,
	480, 2942,
	481, 2942,
	482, 2942,
	483, 2942,
	485, 2942,
	486, 2942,
	487, 2942,
	488, 2942,
	489, 2942,
	490, 2942,
	491, 2942,
	492, 2942,
	493, 2942,
	494, 2942,
	495, 2942,
	496, 2942,
	497, 2942,
	498, 2942,
	499, 2942,
	501, 2942,
	503, 2942,
	504, 2942,
	505, 2942,
	506, 2942,
	507, 2942,
	508, 2942,
	509, 2942,
	510, 2942,
	511, 2942,
	512, 2942,
	513, 2942,
	514, 2942,
	515, 2942,
	516, 2942,
	517, 2942,
	518, 2942,
	519, 2942,
	520, 2942,
	521, 2942,
	523, 2942,
	524, 2942,
	525, 2942,
	526, 2942,
	527, 2942,
	529, 2942,
	530, 2942,
	531, 2942,
	532, 2942,
	533, 2942,
	534, 2942,
	536, 2942,
	537, 2942,
	539, 2942,
	540, 2942,
	541, 2942,
	542, 2942,
	543, 2942,
	545, 2942,
	547, 2942,
	548, 2942,
	549, 2942,
	550, 2942,
	551, 2942,
	552, 2942,
	553, 2942,
	555, 2942,
	556, 2942,
	557, 2942,
	558, 2942,
	559, 2942,
	560, 2942,
	561, 2942,
	564, 2942,
	565, 2942,
	566, 2942,
	567, 2942,
	568, 2942,
	569, 2942,
	570, 2942,
	571, 2942,
	573, 2942,
	576, 2942,
	577, 2942,
	578, 2942,
	579, 2942,
	580, 2942,
	581, 2942,
	583, 2942,
	584, 2942,
	585, 2942,
	586, 2942,
	587, 2942,
	588, 2942,
	589, 2942,
	590, 2942,
	595, 2942,
	596, 2942,
	597, 2942,
	598, 2942,
	599, 2942,
	600, 2942,
	601, 2942,
	603, 2942,
	613, 2942,
	614, 2942,
	615, 2942,
	616, 2942,
	617, 2942,
	618, 2942,
	620, 2942,
	621, 2942,
	622, 2942,
	623, 2942,
	624, 2942,
	625, 2942,
	626, 2942,
	627, 2942,
	628, 2942,
	631, 2942,
	634, 2942,
	635, 2942,
	637, 2942,
	638, 2942,
	-2, 0,
	-1, 1766,
	196, 2815,
	544, 2815,
	615, 2815,
	635, 2815,
	-2, 0,
	-1, 1814,
	196, 952,
	-2, 2807,
	-1, 1815,
	196, 953,
	-2, 2599,
	-1, 1816,
	196, 954,
	-2, 2761,
	-1, 1821,
	413, 1004,
	483, 1004,
	527, 1004,
	549, 1004,
	-2, 0,
	-1, 1832,
	1, 1541,
	233, 1541,
	632, 1541,
	634, 1541,
	636, 1541,
	-2, 0,
	-1, 1849,
	1, 999,
	632, 999,
	634, 999,
	636, 999,
	-2, 0,
	-1, 1850,
	1, 1043,
	632, 1043,
	634, 1043,
	636, 1043,
	-2, 0,
	-1, 1851,
	1, 1051,
	632, 1051,
	634, 1051,
	636, 1051,
	-2, 0,
	-1, 1854,
	1, 1008,
	632, 1008,
	634, 1008,
	636, 1008,
	-2, 0,
	-1, 1856,
	1, 1014,
	632, 1014,
	634, 1014,
	636, 1014,
	-2, 0,
	-1, 1859,
	1, 1010,
	632, 1010,
	634, 1010,
	636, 1010,
	-2, 0,
	-1, 1864,
	1, 1024,
	632, 1024,
	634, 1024,
	636, 1024,
	-2, 0,
	-1, 1898,
	1, 2797,
	632, 2797,
	634, 2797,
	635, 2797,
	636, 2797,
	-2, 0,
	-1, 1902,
	1, 1102,
	632, 1102,
	634, 1102,
	636, 1102,
	-2, 0,
	-1, 1921,
	1, 1593,
	636, 1593,
	-2, 1598,
	-1, 1924,
	176, 1752,
	189, 1752,
	285, 1752,
	359, 1752,
	-2, 1690,
	-1, 2026,
	156, 1711,
	176, 1711,
	189, 1711,
	252, 1711,
	285, 1711,
	359, 1711,
	370, 1711,
	562, 1711,
	-2, 2162,
	-1, 2087,
	634, 2337,
	-2, 0,
	-1, 2123,
	156, 1711,
	176, 1711,
	189, 1711,
	252, 1711,
	285, 1711,
	359, 1711,
	370, 1711,
	562, 1711,
	-2, 1844,
	-1, 2179,
	633, 1985,
	-2, 1973,
	-1, 2211,
	196, 2812,
	635, 2812,
	638, 2812,
	-2, 0,
	-1, 2255,
	1, 760,
	636, 760,
	-2, 1598,
	-1, 2432,
	233, 282,
	-2, 2487,
	-1, 2433,
	233, 283,
	-2, 341,
	-1, 2544,
	1, 1001,
	632, 1001,
	634, 1001,
	636, 1001,
	-2, 0,
	-1, 2545,
	1, 1045,
	632, 1045,
	634, 1045,
	636, 1045,
	-2, 0,
	-1, 2546,
	1, 1053,
	632, 1053,
	634, 1053,
	636, 1053,
	-2, 0,
	-1, 2547,
	1, 1104,
	632, 1104,
	634, 1104,
	636, 1104,
	-2, 0,
	-1, 2588,
	1, 1026,
	632, 1026,
	634, 1026,
	636, 1026,
	-2, 0,
	-1, 2610,
	1, 1087,
	632, 1087,
	634, 1087,
	636, 1087,
	-2, 0,
	-1, 2658,
	461, 1779,
	462, 1779,
	-2, 2018,
	-1, 2691,
	14, 0,
	15, 0,
	16, 0,
	613, 0,
	614, 0,
	615, 0,
	-2, 2038,
	-1, 2692,
	14, 0,
	15, 0,
	16, 0,
	613, 0,
	614, 0,
	615, 0,
	-2, 2039,
	-1, 2693,
	99, 0,
	266, 0,
	267, 0,
	617, 0,
	618, 0,
	-2, 2040,
	-1, 2694,
	99, 0,
	266, 0,
	267, 0,
	617, 0,
	618, 0,
	-2, 2041,
	-1, 2695,
	99, 0,
	266, 0,
	267, 0,
	617, 0,
	618, 0,
	-2, 2042,
	-1, 2696,
	99, 0,
	266, 0,
	267, 0,
	617, 0,
	618, 0,
	-2, 2043,
	-1, 2697,
	99, 0,
	266, 0,
	267, 0,
	617, 0,
	618, 0,
	-2, 2044,
	-1, 2698,
	14, 0,
	15, 0,
	16, 0,
	613, 0,
	614, 0,
	615, 0,
	-2, 2045,
	-1, 2710,
	14, 0,
	15, 0,
	16, 0,
	613, 0,
	614, 0,
	615, 0,
	-2, 2057,
	-1, 2711,
	14, 0,
	15, 0,
	16, 0,
	613, 0,
	614, 0,
	615, 0,
	-2, 2058,
	-1, 2712,
	14, 0,
	15, 0,
	16, 0,
	613, 0,
	614, 0,
	615, 0,
	-2, 2059,
	-1, 2716,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	230, 0,
	233, 0,
	284, 0,
	491, 0,
	601, 0,
	616, 0,
	-2, 2066,
	-1, 2722,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	230, 0,
	233, 0,
	284, 0,
	491, 0,
	601, 0,
	616, 0,
	-2, 2070,
	-1, 2724,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	230, 0,
	233, 0,
	284, 0,
	491, 0,
	601, 0,
	616, 0,
	-2, 2078,
	-1, 2725,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	230, 0,
	233, 0,
	284, 0,
	491, 0,
	601, 0,
	616, 0,
	-2, 2079,
	-1, 2726,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	230, 0,
	233, 0,
	284, 0,
	491, 0,
	601, 0,
	616, 0,
	-2, 2080,
	-1, 2727,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	230, 0,
	233, 0,
	284, 0,
	491, 0,
	601, 0,
	616, 0,
	-2, 2081,
	-1, 2901,
	5, 2491,
	196, 2348,
	633, 2488,
	-2, 2479,
	-1, 2902,
	196, 2349,
	-2, 2893,
	-1, 2903,
	196, 2350,
	-2, 2689,
	-1, 2904,
	196, 2351,
	-2, 2565,
	-1, 2905,
	196, 2352,
	-2, 2627,
	-1, 2906,
	196, 2353,
	-2, 2674,
	-1, 2907,
	196, 2354,
	-2, 2810,
	-1, 2908,
	196, 2355,
	-2, 2145,
	-1, 2980,
	1, 1845,
	2, 1845,
	110, 1845,
	156, 1845,
	176, 1845,
	189, 1845,
	197, 1845,
	215, 1845,
	218, 1845,
	247, 1845,
	252, 1845,
	263, 1845,
	281, 1845,
	285, 1845,
	325, 1845,
	359, 1845,
	364, 1845,
	370, 1845,
	451, 1845,
	455, 1845,
	562, 1845,
	574, 1845,
	592, 1845,
	593, 1845,
	594, 1845,
	604, 1845,
	632, 1845,
	634, 1845,
	636, 1845,
	638, 1845,
	-2, 1844,
	-1, 2993,
	633, 2460,
	-2, 2474,
	-1, 2995,
	1, 358,
	592, 358,
	-2, 1738,
	-1, 3026,
	633, 1984,
	-2, 1974,
	-1, 3245,
	1, 1444,
	445, 1398,
	485, 1398,
	607, 1398,
	612, 1398,
	632, 1444,
	634, 1444,
	636, 1444,
	-2, 1738,
	-1, 3429,
	365, 1782,
	-2, 2932,
	-1, 3430,
	365, 1783,
	-2, 2794,
	-1, 3434,
	461, 2414,
	462, 2414,
	-2, 2143,
	-1, 3435,
	461, 2418,
	462, 2418,
	-2, 2144,
	-1, 3436,
	461, 2415,
	462, 2415,
	-2, 2143,
	-1, 3437,
	461, 2419,
	462, 2419,
	-2, 2144,
	-1, 3451,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	230, 0,
	233, 0,
	284, 0,
	491, 0,
	601, 0,
	616, 0,
	-2, 2068,
	-1, 3452,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	230, 0,
	233, 0,
	284, 0,
	491, 0,
	601, 0,
	616, 0,
	-2, 2072,
	-1, 3458,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	230, 0,
	233, 0,
	284, 0,
	491, 0,
	601, 0,
	616, 0,
	-2, 2074,
	-1, 3689,
	1, 755,
	632, 755,
	634, 755,
	636, 755,
	-2, 1598,
	-1, 3889,
	45, 2451,
	-2, 1178,
	-1, 3894,
	1, 1444,
	632, 1444,
	634, 1444,
	636, 1444,
	-2, 1738,
	-1, 4004,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	230, 0,
	233, 0,
	284, 0,
	491, 0,
	601, 0,
	616, 0,
	-2, 2076,
	-1, 4011,
	257, 0,
	259, 0,
	348, 0,
	-2, 2095,
	-1, 4079,
	14, 0,
	15, 0,
	16, 0,
	613, 0,
	614, 0,
	615, 0,
	-2, 2124,
	-1, 4080,
	14, 0,
	15, 0,
	16, 0,
	613, 0,
	614, 0,
	615, 0,
	-2, 2125,
	-1, 4081,
	14, 0,
	15, 0,
	16, 0,
	613, 0,
	614, 0,
	615, 0,
	-2, 2126,
	-1, 4085,
	14, 0,
	15, 0,
	16, 0,
	613, 0,
	614, 0,
	615, 0,
	-2, 2130,
	-1, 4086,
	14, 0,
	15, 0,
	16, 0,
	613, 0,
	614, 0,
	615, 0,
	-2, 2131,
	-1, 4087,
	14, 0,
	15, 0,
	16, 0,
	613, 0,
	614, 0,
	615, 0,
	-2, 2132,
	-1, 4135,
	633, 2461,
	-2, 2475,
	-1, 4352,
	635, 3049,
	-2, 1664,
	-1, 4412,
	257, 0,
	259, 0,
	348, 0,
	-2, 2096,
	-1, 4415,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	230, 0,
	233, 0,
	284, 0,
	491, 0,
	601, 0,
	616, 0,
	-2, 2099,
	-1, 4416,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	230, 0,
	233, 0,
	284, 0,
	491, 0,
	601, 0,
	616, 0,
	-2, 2101,
	-1, 4540,
	635, 2476,
	-2, 1479,
	-1, 4699,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	230, 0,
	233, 0,
	284, 0,
	491, 0,
	601, 0,
	616, 0,
	-2, 2100,
	-1, 4700,
	17, 0,
	18, 0,
	19, 0,
	53, 0,
	230, 0,
	233, 0,
	284, 0,
	491, 0,
	601, 0,
	616, 0,
	-2, 2102,
	-1, 4711,
	257, 0,
	-2, 2135,
	-1, 4905,
	257, 0,
	-2, 2136,
	-1, 5128,
	53, 0,
	230, 0,
	284, 0,
	491, 0,
	601, 0,
	616, 0,
	-2, 2896,
}

const sqlPrivate = 57344

const sqlLast = 147802

var sqlAct = [...]int{
	292, 3318, 5062, 5061, 5319, 3589, 5190, 5246, 4773, 4956,
	5174, 3199, 5127, 1439, 4948, 5112, 5000, 3169, 3876, 5140,
	5016, 5260, 3875, 2429, 4395, 5095, 5076, 5052, 5141, 5199,
	5142, 5073, 1495, 4872, 4852, 4823, 2315, 4839, 4044, 5138,
	4657, 3887, 1665, 4652, 3098, 1360, 2129, 4909, 4536, 4618,
	4591, 4646, 1784, 2506, 5126, 4778, 4720, 3996, 2286, 3656,
	3288, 3716, 4687, 4344, 1431, 3911, 1634, 2668, 4858, 2518,
	4985, 4336, 4517, 1429, 4261, 4537, 3340, 1225, 3099, 2739,
	899, 3780, 4662, 3905, 1933, 3443, 4311, 832, 3849, 758,
	2237, 2516, 3860, 4292, 3722, 1168, 4294, 2678, 1514, 4716,
	3941, 2324, 3939, 2166, 3302, 3277, 3307, 899, 3703, 3865,
	3864, 3842, 3867, 3841, 2933, 3705, 3304, 3704, 3007, 3604,
	3635, 1607, 4138, 3642, 3612, 2224, 2669, 3572, 2479, 974,
	4, 1782, 4394, 3371, 3335, 3319, 2514, 3252, 3200, 2098,
	3184, 2416, 978, 1176, 190, 2405, 770, 2336, 3593, 5175,
	3743, 4105, 2418, 2973, 1829, 4910, 2817, 2073, 1232, 4451,
	2353, 3571, 2675, 2004, 2972, 1434, 2034, 2752, 3427, 3719,
	3334, 896, 2975, 3595, 1722, 894, 3214, 2395, 969, 2417,
	2467, 2376, 2403, 1236, 2383, 1229, 3708, 828, 2307, 286,
	3289, 1408, 285, 2303, 2235, 1921, 1478, 2808, 2285, 2953,
	2657, 2099, 1422, 2736, 2167, 1234, 1497, 2118, 2640, 805,
	2930, 2638, 1759, 1493, 1349, 3008, 2398, 3312, 1725, 3123,
	3084, 900, 902, 3868, 745, 3124, 1465, 1049, 768, 5017,
	2811, 2962, 2466, 1343, 2789, 1378, 1636, 848, 2108, 2943,
	1322, 2897, 190, 1197, 2115, 2018, 2068, 200, 2863, 201,
	1934, 1935, 2639, 813, 2641, 1357, 1864, 1849, 1657, 824,
	2426, 1750, 1339, 1179, 2492, 119, 1340, 1419, 284, 906,
	1279, 115, 909, 5191, 1436, 2407, 1757, 1615, 995, 1490,
	105, 5247, 1231, 2662, 1210, 788, 1227, 763, 889, 46,
	759, 45, 772, 43, 950, 34, 906, 32, 30, 909,
	1345, 1940, 951, 1913, 1320, 1671, 3481, 841, 844, 1920,
	1070, 4119, 3475, 4120, 3591, 3657, 5136, 2226, 1664, 1950,
	1951, 4746, 1983, 1984, 1985, 1994, 1995, 1996, 2226, 5330,
	2226, 2226, 1355, 2952, 2226, 2226, 5322, 5310, 4743, 4742,
	3822, 2952, 1987, 1981, 5309, 5279, 5277, 4739, 2952, 4777,
	4777, 1953, 5220, 5176, 5166, 4738, 2438, 5177, 2952, 2247,
	3920, 2000, 5164, 5161, 5158, 5124, 2952, 5162, 5159, 2438,
	5123, 5120, 5110, 5108, 2438, 3345, 4777, 4777, 2006, 5099,
	5098, 5071, 5037, 4777, 4777, 4777, 3017, 1952, 5030, 5029,
	5021, 4999, 2952, 2952, 2438, 2438, 4996, 4978, 1972, 4907,
	4777, 4608, 4886, 3017, 4854, 4796, 4370, 1969, 4188, 2438,
	4795, 4784, 4783, 1352, 2438, 2438, 4777, 1474, 4776, 1323,
	1323, 1685, 4777, 4727, 4485, 4701, 1161, 2438, 1337, 3017,
	4673, 4670, 4586, 4564, 3345, 3822, 2952, 2952, 1152, 4414,
	1151, 2244, 4360, 3017, 4354, 1474, 3934, 2507, 3934, 2244,
	4308, 2515, 4219, 4187, 4309, 4130, 4220, 4188, 4128, 4131,
	4112, 4028, 4129, 4024, 2952, 2438, 1172, 2952, 2247, 3933,
	3921, 1172, 3674, 3934, 1173, 3670, 3652, 3588, 98, 4109,
	3583, 2952, 3822, 3283, 2952, 1975, 1976, 1977, 1978, 1794,
	3582, 3282, 3040, 1375, 2952, 1958, 2819, 3542, 3543, 3533,
	3560, 3561, 3562, 3534, 2814, 3531, 3523, 3521, 1167, 3532,
	3524, 2952, 3492, 3490, 3344, 3012, 2952, 3329, 3345, 3491,
	4410, 2502, 3328, 3063, 3016, 3005, 2502, 2952, 3017, 2952,
	2997, 2951, 2945, 1385, 2438, 2952, 2501, 1351, 1991, 2438,
	2502, 2001, 1326, 2247, 1327, 3442, 2952, 5038, 1980, 1982,
	4911, 4902, 1324, 4890, 3345, 4109, 2944, 4650, 4608, 2247,
	2244, 252, 4565, 4370, 4310, 1997, 3176, 1998, 3083, 2261,
	2244, 3074, 2225, 2241, 1967, 1968, 3557, 3282, 2329, 2436,
	3194, 2094, 1376, 1660, 1950, 1951, 2247, 1376, 4237, 3999,
	3968, 2116, 1989, 2388, 3922, 1831, 2989, 2988, 2987, 2986,
	2985, 2815, 1328, 1325, 1160, 1159, 1158, 1973, 1981, 1157,
	1156, 1155, 254, 1154, 3923, 4469, 1953, 252, 1150, 1149,
	169, 1148, 1147, 1146, 1145, 1144, 1143, 1142, 1141, 78,
	1140, 48, 47, 1139, 1138, 1137, 3397, 1664, 1136, 1135,
	1134, 1133, 1132, 2006, 1131, 1684, 1113, 79, 1047, 1046,
	1045, 164, 1952, 1044, 1043, 1042, 1999, 1041, 1040, 1039,
	1038, 1037, 1036, 253, 84, 1035, 1034, 1033, 254, 1032,
	1031, 1030, 1029, 3548, 1028, 69, 1673, 1988, 246, 1027,
	1026, 1855, 50, 2816, 166, 2813, 1025, 247, 2003, 1775,
	1024, 1023, 1022, 1021, 1020, 1019, 1018, 1017, 2227, 1016,
	1015, 1014, 1013, 49, 1208, 92, 1012, 1011, 1000, 2227,
	999, 2227, 2227, 998, 993, 2227, 2227, 202, 992, 253,
	4893, 985, 984, 983, 968, 967, 925, 924, 923, 922,
	913, 912, 52, 70, 2952, 911, 910, 4664, 871, 3480,
	870, 53, 839, 3564, 838, 837, 59, 1979, 819, 280,
	279, 167, 278, 277, 276, 275, 5151, 274, 2244, 51,
	1958, 114, 1679, 2244, 273, 2580, 272, 98, 111, 271,
	270, 1974, 269, 202, 268, 71, 1798, 267, 2036, 1672,
	2244, 2244, 266, 265, 264, 3558, 263, 252, 262, 261,
	260, 259, 258, 257, 256, 255, 4426, 4163, 4124, 1992,
	158, 3972, 3935, 3091, 3638, 3503, 1441, 1234, 3486, 3477,
	3374, 54, 3262, 1980, 1982, 3586, 3297, 3091, 2076, 2076,
	3021, 2994, 2979, 2119, 78, 2075, 2075, 2846, 2630, 2288,
	2246, 99, 2142, 2005, 1234, 1234, 1234, 2045, 254, 1914,
	1667, 1486, 79, 2844, 2830, 2828, 1359, 5150, 3542, 3543,
	1377, 5147, 5125, 2818, 1947, 2079, 2074, 4768, 5107, 84,
	3587, 5004, 4914, 4891, 1387, 4899, 2003, 3282, 1673, 4715,
	4671, 4649, 1973, 4493, 4449, 1517, 1673, 1779, 4448, 1234,
	4442, 4441, 4440, 3542, 3543, 1234, 1639, 1234, 2247, 253,
	1441, 4433, 1482, 1483, 1484, 4321, 252, 2036, 5325, 3050,
	92, 2225, 2244, 1648, 246, 2241, 2633, 3315, 72, 1990,
	3542, 3543, 3920, 247, 1376, 4432, 1234, 2244, 1234, 1469,
	1234, 1964, 1965, 1971, 1993, 1970, 1966, 1639, 1963, 1961,
	1962, 1954, 1955, 1956, 1957, 1959, 1960, 4430, 4425, 4422,
	1447, 976, 4436, 202, 2043, 4421, 4435, 254, 2037, 3559,
	2035, 1662, 1441, 2003, 1625, 4307, 114, 4666, 4167, 1353,
	4166, 4165, 98, 111, 252, 1727, 1673, 4134, 4100, 4099,
	1620, 1336, 1639, 4098, 2944, 1376, 2812, 3542, 3543, 1639,
	3560, 3561, 3562, 4225, 4020, 103, 1678, 4015, 1234, 3633,
	1234, 1413, 1416, 3579, 3570, 1639, 3541, 3089, 253, 3538,
	3537, 3535, 3530, 55, 1234, 3529, 1234, 3528, 3525, 2038,
	3030, 2445, 3522, 246, 1461, 254, 3502, 3485, 3478, 1426,
	58, 3476, 247, 1463, 3548, 61, 99, 1731, 1734, 3330,
	1175, 2980, 2801, 1947, 1946, 73, 1974, 2443, 2482, 5268,
	5267, 5189, 5187, 60, 198, 1361, 106, 4046, 5063, 110,
	4322, 4983, 202, 56, 1646, 1639, 3557, 168, 4968, 3548,
	4964, 4963, 3542, 3543, 4962, 57, 253, 1500, 1501, 2748,
	4942, 4941, 1430, 4939, 4913, 1234, 252, 4912, 1234, 3299,
	1612, 246, 4884, 1455, 64, 2742, 3548, 1489, 4870, 158,
	247, 906, 4867, 906, 909, 4866, 909, 4850, 2005, 3554,
	3555, 3556, 4849, 4792, 4763, 165, 3553, 3551, 3552, 3544,
	3545, 3546, 3547, 3549, 3550, 1720, 190, 190, 4713, 3662,
	202, 4235, 4696, 1659, 1658, 1659, 1658, 254, 4695, 4638,
	1642, 1492, 4634, 4631, 4609, 1502, 1503, 1950, 1951, 4468,
	1510, 3557, 1604, 1609, 3088, 1610, 4447, 3584, 1624, 1430,
	1799, 1762, 1764, 3548, 163, 4371, 252, 4223, 3088, 1737,
	3015, 4222, 1661, 4203, 252, 4202, 4200, 4322, 3088, 1953,
	204, 3558, 4115, 4103, 4010, 2023, 3936, 3930, 253, 3897,
	103, 3802, 3754, 3721, 3664, 1234, 1234, 1234, 1234, 1234,
	1234, 1234, 1234, 246, 1961, 1962, 1954, 1955, 1956, 1957,
	1959, 1960, 247, 3507, 3506, 1952, 199, 254, 1760, 1469,
	3501, 203, 1469, 3467, 3276, 254, 3116, 2003, 1234, 2082,
	2081, 2080, 1430, 1430, 1234, 2077, 4665, 2069, 2067, 1753,
	3028, 3027, 202, 2991, 1873, 3, 2984, 252, 3548, 198,
	252, 106, 2950, 1173, 110, 2826, 2022, 1925, 2141, 2097,
	2091, 252, 2003, 252, 252, 2090, 2089, 2088, 253, 3542,
	3543, 2087, 2025, 3630, 2086, 3558, 253, 2085, 2084, 2083,
	1857, 252, 2064, 246, 2063, 2062, 2061, 2060, 1804, 977,
	2059, 246, 247, 2058, 158, 2057, 2056, 2055, 254, 2054,
	247, 254, 2053, 2052, 1774, 2051, 3298, 2050, 2049, 2038,
	2024, 2021, 254, 2016, 254, 254, 1454, 1751, 1382, 1371,
	1793, 3019, 202, 1958, 4916, 4915, 4641, 3542, 3543, 4740,
	202, 4489, 254, 4491, 4894, 41, 4418, 4162, 4127, 4118,
	1234, 1234, 1234, 3489, 2982, 3559, 1234, 1756, 4161, 253,
	2037, 3660, 253, 1357, 2019, 1357, 2003, 2329, 3926, 163,
	3558, 2137, 252, 253, 246, 253, 253, 246, 1479, 3170,
	1517, 3757, 1481, 247, 5259, 204, 247, 1822, 246, 2096,
	246, 246, 1234, 253, 1948, 899, 1441, 247, 1858, 247,
	247, 1919, 4972, 2184, 899, 4965, 1441, 4669, 246, 1441,
	1926, 3542, 3543, 202, 4612, 4611, 202, 247, 4567, 4610,
	4566, 199, 1496, 254, 2145, 4471, 203, 202, 4378, 3314,
	202, 1915, 1950, 1951, 4377, 252, 4376, 4375, 4374, 2327,
	1355, 1930, 1355, 1929, 1152, 4373, 1151, 202, 4372, 3559,
	1922, 2003, 4189, 1480, 4122, 3548, 4121, 3938, 3937, 3826,
	3997, 2078, 3824, 2150, 1953, 3823, 5143, 2273, 2272, 1441,
	2105, 1496, 2281, 1496, 253, 1234, 5216, 2151, 1924, 2845,
	3544, 3545, 3546, 3547, 3549, 3550, 254, 4892, 5214, 246,
	2102, 2103, 1943, 1944, 1494, 2843, 2829, 2827, 247, 1234,
	1952, 1496, 4252, 1474, 5139, 2059, 2157, 1517, 4767, 1173,
	190, 3542, 3543, 3548, 1323, 3544, 3545, 3546, 3547, 3549,
	3550, 1352, 4859, 1352, 2119, 252, 2003, 3527, 202, 1496,
	2279, 2059, 2076, 2318, 3559, 1917, 4218, 253, 2126, 2075,
	2366, 2070, 2071, 3526, 3546, 3547, 3549, 3550, 4325, 2147,
	3449, 3127, 246, 1496, 1821, 1477, 3142, 2152, 1474, 2231,
	2252, 247, 2233, 1950, 1951, 2267, 2158, 3558, 2238, 1129,
	1469, 2149, 2240, 2127, 3723, 2207, 254, 2243, 4315, 3792,
	3212, 1474, 2047, 4934, 906, 2146, 2178, 909, 3878, 2253,
	3877, 202, 2044, 906, 2276, 1953, 909, 1874, 2124, 3554,
	3555, 3556, 4183, 4935, 4184, 2117, 3553, 3551, 3552, 3544,
	3545, 3546, 3547, 3549, 3550, 3591, 4935, 1830, 1130, 2507,
	4853, 5172, 1335, 1755, 2229, 3558, 4647, 253, 3341, 3850,
	4598, 1952, 1475, 1831, 2420, 4304, 1173, 4258, 4249, 4228,
	3964, 3687, 246, 2385, 2601, 1351, 2095, 1351, 2003, 2512,
	2451, 247, 2483, 4717, 4048, 1624, 2136, 3125, 2135, 3495,
	2134, 2809, 2132, 2121, 2131, 2130, 3026, 2092, 4787, 2072,
	2162, 2419, 3858, 2181, 2255, 2535, 1639, 1639, 4194, 5148,
	2213, 202, 2476, 2216, 2163, 4759, 1730, 3548, 1517, 2172,
	1756, 3553, 3551, 3552, 3544, 3545, 3546, 3547, 3549, 3550,
	1653, 1450, 2365, 1412, 5163, 3191, 2003, 2364, 1624, 5160,
	3172, 2328, 4579, 2372, 4577, 3916, 2278, 3188, 3186, 4957,
	3833, 4653, 2375, 5070, 1808, 3726, 1481, 4213, 2430, 2435,
	3311, 3559, 1787, 5217, 2361, 2399, 2370, 4790, 2251, 1958,
	5218, 2325, 2380, 2249, 2814, 5251, 4786, 4765, 2293, 1178,
	2294, 5149, 3991, 3691, 2277, 1949, 3373, 1471, 4818, 4271,
	2301, 2302, 963, 3661, 4553, 1698, 1706, 3101, 1109, 1954,
	1955, 1956, 1957, 1959, 1960, 2375, 2321, 3064, 2375, 1127,
	3087, 2282, 2274, 1481, 1639, 1125, 1639, 3087, 1639, 3559,
	5321, 1872, 2594, 2295, 2296, 1123, 3085, 1480, 2268, 3558,
	2299, 2300, 1655, 3085, 4973, 4811, 1639, 1639, 1853, 2326,
	2323, 2592, 2610, 3756, 4798, 2607, 4601, 5025, 2335, 4600,
	1639, 4269, 5196, 4268, 4260, 1121, 1177, 1118, 4243, 4242,
	4240, 4270, 1639, 4239, 4227, 1639, 1639, 1639, 4186, 2322,
	1171, 2815, 4185, 1476, 3839, 3838, 3308, 3794, 3254, 4197,
	3651, 2422, 2423, 3500, 1480, 1871, 3499, 2400, 1707, 899,
	3498, 2373, 2358, 3497, 3453, 3210, 2472, 3209, 3193, 3693,
	906, 2608, 3182, 909, 964, 2648, 4499, 3174, 2545, 3163,
	2003, 1234, 3162, 3154, 2533, 3104, 2859, 2536, 3153, 2477,
	3552, 3544, 3545, 3546, 3547, 3549, 3550, 3152, 2137, 3132,
	2609, 3131, 1659, 1658, 4788, 1472, 2357, 3092, 4551, 3006,
	2489, 1806, 2371, 2723, 2354, 1473, 4548, 2164, 2379, 1234,
	1923, 4760, 1852, 2816, 3020, 2813, 2540, 2858, 2409, 2680,
	2457, 2409, 3723, 2510, 3965, 2093, 1170, 2646, 2520, 2437,
	2424, 2412, 811, 2408, 2546, 2497, 2408, 3551, 3552, 3544,
	3545, 3546, 3547, 3549, 3550, 1115, 1755, 1234, 4694, 1234,
	3790, 1702, 1870, 3559, 2628, 5252, 1234, 3129, 2374, 1234,
	2738, 2184, 2184, 1517, 2531, 1234, 1234, 1234, 1234, 1234,
	1234, 1234, 1234, 1234, 1234, 1234, 1234, 1234, 1234, 1234,
	1234, 1234, 1234, 1234, 1234, 1234, 1234, 1234, 1234, 1234,
	1234, 1234, 1234, 1234, 1234, 1234, 1234, 1234, 1234, 1234,
	1234, 2459, 1234, 2475, 1234, 1234, 1234, 1234, 2499, 2458,
	1760, 2374, 1760, 2486, 2374, 2527, 2491, 1753, 3550, 2494,
	2565, 2494, 2420, 2495, 811, 2637, 2507, 1498, 1499, 2650,
	1234, 4568, 5197, 1912, 1234, 1234, 1455, 3035, 906, 1960,
	1715, 909, 1234, 2526, 1172, 1173, 1234, 1173, 1234, 1234,
	2503, 1743, 2504, 1742, 2632, 3071, 1517, 1353, 1741, 1353,
	1740, 1398, 1234, 1234, 1234, 1234, 2368, 1823, 1234, 1234,
	1234, 1234, 1234, 1234, 1234, 1234, 2283, 2284, 1498, 1499,
	2648, 3010, 1656, 2818, 2619, 3161, 2647, 3034, 3103, 5254,
	2544, 1474, 2809, 3157, 1234, 1234, 1234, 1234, 1234, 1234,
	1234, 1234, 1234, 2555, 1234, 3148, 1498, 1499, 1234, 4509,
	3553, 3551, 3552, 3544, 3545, 3546, 3547, 3549, 3550, 868,
	1357, 4547, 3791, 1916, 3348, 2738, 3392, 1517, 2622, 3146,
	3155, 3011, 3405, 2588, 1498, 1499, 1357, 1884, 3115, 4549,
	2996, 4950, 2646, 1446, 2178, 2178, 2552, 2599, 2790, 2791,
	2586, 4828, 1234, 1517, 1853, 2661, 2674, 2673, 1498, 1499,
	5217, 3425, 2790, 2806, 2645, 2676, 2677, 1956, 1957, 1959,
	1960, 4545, 1819, 810, 2606, 1441, 4508, 1888, 1801, 1831,
	5283, 1890, 966, 965, 3158, 2401, 2549, 2634, 2636, 2854,
	2635, 5255, 4210, 2642, 2649, 3190, 2754, 1355, 1152, 1831,
	2665, 1152, 1152, 2666, 2667, 2543, 2812, 1453, 2900, 2900,
	2914, 5145, 2790, 1355, 2805, 2934, 2936, 2256, 3690, 3440,
	2746, 3156, 2942, 2410, 1850, 1928, 1441, 2744, 1869, 3189,
	2644, 2181, 2181, 4224, 4693, 3009, 1169, 866, 5253, 3114,
	3086, 3187, 3185, 3128, 2496, 3102, 2621, 2172, 2172, 4925,
	3408, 3977, 1670, 961, 1677, 960, 1683, 2413, 1441, 1441,
	2818, 4284, 3774, 2411, 2553, 810, 2992, 2967, 1852, 2402,
	4952, 3058, 1464, 2750, 3976, 3394, 4037, 1323, 1352, 4599,
	4241, 3078, 2803, 3765, 3033, 3696, 1807, 1726, 4238, 812,
	1851, 1009, 4171, 2959, 1352, 4170, 4156, 3464, 2734, 1517,
	1802, 2647, 2981, 1173, 4155, 3014, 5257, 3969, 3845, 2126,
	3837, 3067, 3037, 1173, 4208, 1119, 1183, 1173, 2958, 190,
	3056, 1119, 4285, 3775, 1773, 3053, 1778, 2593, 3462, 2732,
	3788, 1119, 2925, 2966, 3069, 2971, 2909, 3032, 2977, 2978,
	1792, 2896, 1797, 1724, 3766, 2940, 2591, 2938, 2184, 3192,
	1475, 3151, 2948, 2949, 2964, 2965, 1701, 3130, 3249, 2960,
	3439, 1120, 1469, 1119, 4550, 3045, 2078, 4283, 3773, 2124,
	2618, 3049, 2350, 3070, 757, 1866, 1805, 5263, 1100, 2645,
	4034, 812, 2389, 2720, 5229, 3060, 4543, 2396, 2629, 3764,
	3061, 3407, 2355, 5238, 3068, 5237, 5146, 2360, 3004, 1517,
	5285, 752, 1351, 1165, 4546, 1475, 5204, 1173, 1856, 2442,
	2441, 906, 4829, 3970, 909, 1639, 3432, 3433, 1351, 3250,
	3055, 4400, 3077, 3029, 3404, 4827, 4399, 1704, 3093, 3846,
	3044, 4825, 1441, 2351, 3047, 1885, 3048, 3843, 1430, 3913,
	3455, 3401, 2226, 1659, 1658, 3245, 2818, 1910, 2386, 3013,
	2070, 2071, 3052, 1234, 1234, 3203, 1234, 3168, 5047, 3062,
	3038, 2329, 4035, 2415, 3248, 3090, 1397, 867, 3054, 4751,
	2362, 1116, 5114, 3787, 5115, 1471, 3459, 2728, 2349, 3786,
	3149, 4824, 1441, 3783, 3171, 3914, 2308, 1430, 3183, 4958,
	4980, 2309, 3710, 3134, 1726, 3287, 3339, 3065, 1101, 3338,
	3039, 2729, 1882, 3692, 2390, 3805, 5144, 3460, 2730, 2107,
	4826, 3465, 2735, 1639, 2356, 5256, 809, 5034, 3280, 869,
	1430, 1430, 1832, 865, 2414, 1654, 1639, 1001, 1639, 3331,
	1471, 2178, 2620, 3059, 1639, 3295, 3406, 1380, 4628, 2369,
	3106, 3109, 3096, 3079, 3080, 1639, 1639, 3081, 3082, 2065,
	2551, 3322, 3135, 4951, 1002, 1100, 4544, 3160, 5203, 3204,
	2718, 1476, 3164, 2721, 3336, 3140, 3141, 3143, 3144, 3145,
	3147, 1441, 3913, 1441, 3658, 2367, 2856, 3257, 3342, 3830,
	1165, 2857, 3259, 1886, 2860, 2386, 2861, 2862, 3211, 3351,
	3352, 4396, 2319, 3246, 3247, 1234, 2111, 3119, 3358, 3159,
	3738, 3359, 3360, 3361, 3166, 2737, 2587, 3173, 2310, 3180,
	4706, 3133, 3087, 1365, 2717, 3291, 1476, 5227, 2181, 5081,
	2337, 4580, 5281, 1472, 3196, 3150, 2314, 1610, 3107, 1367,
	2308, 2916, 2818, 1473, 2172, 2309, 906, 778, 3377, 909,
	5261, 2015, 3197, 3198, 1883, 2341, 2114, 3255, 2995, 2800,
	1106, 1105, 4209, 4532, 3369, 190, 1362, 1818, 1820, 3343,
	3737, 3333, 2109, 3505, 1234, 3349, 1624, 3346, 1659, 3260,
	1234, 1234, 2548, 2963, 3353, 1101, 3354, 3022, 1472, 3844,
	2112, 3324, 2133, 2332, 1887, 1234, 1889, 3274, 1473, 4525,
	3326, 2542, 1452, 2745, 1010, 5286, 2976, 4297, 1102, 1172,
	2410, 4050, 1368, 2338, 1803, 2311, 2316, 4295, 3461, 2731,
	1927, 3711, 5270, 4640, 4479, 3366, 5032, 5182, 3463, 2733,
	3410, 4480, 3412, 3317, 2110, 3327, 4385, 5183, 1234, 1234,
	1369, 3382, 4604, 3384, 1234, 3386, 2393, 3388, 3389, 1837,
	2411, 4532, 4401, 3744, 2333, 4526, 2352, 1234, 1234, 1760,
	4488, 4157, 2310, 1234, 1234, 3325, 2367, 1386, 5262, 1234,
	3398, 1384, 5033, 3606, 753, 3368, 3306, 4689, 3993, 4629,
	2314, 3423, 5202, 2369, 1366, 3167, 3255, 4525, 5001, 4994,
	3383, 4518, 3385, 4478, 3387, 5087, 1003, 1004, 5015, 2331,
	3381, 2312, 4297, 4869, 4299, 5264, 2111, 2391, 4603, 4516,
	3746, 4602, 4295, 4342, 1234, 1234, 1234, 2363, 4520, 3901,
	1234, 3456, 2366, 3673, 3003, 2465, 2104, 2342, 1383, 1474,
	1234, 2719, 1374, 2227, 1353, 4819, 4298, 1106, 1105, 986,
	1103, 744, 1624, 4526, 4986, 3413, 3431, 1234, 3415, 4320,
	1353, 1938, 2392, 1430, 2319, 3375, 2114, 3376, 4987, 2311,
	2316, 754, 2359, 3488, 2113, 3422, 991, 3421, 1104, 2598,
	1937, 1937, 2961, 4445, 3426, 4397, 3441, 4089, 2664, 3745,
	2661, 2330, 2269, 1932, 1474, 1102, 3643, 4519, 5291, 4785,
	2112, 4734, 4988, 3448, 2343, 2344, 2308, 2368, 4878, 4299,
	3717, 2309, 4932, 4343, 2266, 4264, 4244, 3479, 1624, 4195,
	1624, 3698, 3207, 755, 4193, 756, 2317, 3902, 3893, 3713,
	3420, 2339, 4688, 3296, 1108, 3290, 3278, 2490, 2484, 3483,
	3484, 4298, 2478, 2470, 3487, 2450, 2654, 4033, 2449, 1234,
	1234, 1234, 1234, 1107, 3454, 2312, 3136, 3108, 1234, 1234,
	1234, 1695, 1389, 1234, 4104, 5053, 3699, 5002, 818, 914,
	4990, 3994, 4863, 3091, 1937, 1234, 1357, 1517, 2600, 2340,
	4521, 1234, 5018, 1234, 3598, 3599, 4179, 4522, 4345, 1936,
	1936, 2264, 1357, 3605, 2365, 4989, 921, 2262, 4527, 2364,
	4658, 4402, 3275, 1400, 3750, 5181, 2015, 4845, 2319, 4843,
	1517, 4762, 4151, 4991, 1005, 1006, 3729, 3725, 3724, 3446,
	2954, 3424, 1357, 2532, 1363, 1517, 2524, 1103, 2310, 4296,
	3002, 4117, 3603, 3001, 3602, 3494, 2513, 1441, 2265, 4293,
	4524, 1860, 1859, 2447, 1173, 3610, 2314, 2346, 2184, 1854,
	3000, 3623, 1517, 1355, 2999, 1104, 2998, 2957, 2313, 4528,
	4303, 3632, 1441, 1938, 1938, 3748, 1170, 1735, 4521, 1355,
	2317, 1441, 1749, 2292, 2113, 4522, 4774, 3581, 4690, 1747,
	1364, 1736, 4945, 1936, 3675, 1008, 4527, 4619, 4316, 3112,
	4090, 4403, 2655, 1234, 4201, 3600, 2488, 4446, 2956, 1355,
	2406, 4091, 3853, 2955, 857, 1234, 5224, 2345, 987, 988,
	3749, 1108, 4749, 4747, 4847, 3372, 2318, 3253, 3637, 3966,
	5290, 1838, 4190, 1441, 4296, 2311, 2316, 3961, 4524, 2184,
	1107, 3614, 3672, 3671, 1352, 3654, 3712, 3137, 3138, 3653,
	3347, 858, 3258, 3256, 2517, 2419, 1234, 4528, 1811, 4770,
	1352, 3688, 2318, 3645, 3646, 3647, 3648, 4769, 5059, 3700,
	3701, 3609, 1441, 3694, 4946, 3608, 3621, 3629, 3576, 3577,
	3578, 3681, 3624, 3625, 5003, 3762, 3592, 3622, 3641, 4862,
	1352, 3727, 4757, 1441, 3731, 1441, 1469, 4775, 4503, 2347,
	3607, 4846, 4502, 4180, 5067, 3806, 3777, 4523, 3779, 5050,
	3677, 4452, 2313, 3679, 3680, 1234, 1234, 4106, 3683, 2385,
	3684, 2312, 3685, 1517, 2825, 2581, 2385, 4737, 3627, 3793,
	3628, 4158, 1907, 5089, 1441, 5228, 5226, 1909, 915, 916,
	3615, 2178, 5165, 4758, 4976, 3714, 3636, 3816, 4966, 4533,
	4534, 1441, 2614, 1906, 3644, 1904, 1878, 2150, 4745, 1876,
	3759, 1848, 3659, 5060, 3828, 4831, 4712, 1846, 1351, 4947,
	2306, 3808, 3741, 3810, 2319, 1844, 3814, 817, 3678, 3784,
	3820, 1842, 1840, 1639, 1351, 1834, 3682, 1828, 4992, 4501,
	2291, 3821, 3613, 3620, 4993, 4523, 1441, 1639, 4496, 1639,
	3689, 3763, 4191, 1517, 4444, 4302, 3573, 4009, 3962, 3959,
	899, 1639, 3697, 3795, 1351, 3778, 3669, 3728, 2404, 3536,
	3733, 3650, 2178, 3735, 1639, 3466, 989, 990, 2181, 1826,
	3619, 2304, 3279, 3181, 1748, 1441, 2317, 4533, 4534, 1745,
	3175, 1746, 3126, 3720, 2172, 3031, 3668, 1007, 3894, 3848,
	2627, 3851, 1357, 3747, 2623, 2534, 3909, 3761, 2523, 1624,
	1624, 3863, 2508, 3803, 3755, 3768, 3907, 2215, 2144, 2140,
	1911, 1786, 3574, 3988, 1639, 3883, 2305, 3892, 3776, 2590,
	3772, 2557, 2428, 3987, 3979, 1932, 1639, 3396, 1639, 2824,
	918, 917, 3395, 3356, 2643, 1865, 3769, 2560, 2448, 3336,
	3770, 3798, 3771, 2214, 2212, 3804, 3789, 2048, 3336, 2181,
	1800, 1719, 3817, 1319, 5137, 3900, 3886, 3285, 4581, 3815,
	4251, 4250, 4585, 3918, 3929, 2172, 3807, 3835, 3825, 1355,
	3829, 1908, 5195, 4563, 5049, 4656, 3827, 4158, 1624, 2616,
	3160, 3616, 3617, 3618, 5200, 1517, 2615, 1905, 1517, 1903,
	1877, 3903, 3967, 1875, 4590, 1847, 1117, 4576, 4514, 919,
	920, 1845, 2475, 3957, 4513, 3836, 4341, 4332, 2313, 1843,
	4267, 4246, 4216, 4214, 4192, 1841, 1839, 3134, 3896, 1833,
	3891, 1827, 3879, 1234, 3980, 3855, 4651, 3834, 3309, 3301,
	1234, 1234, 3889, 3294, 1234, 1234, 1234, 3286, 1234, 906,
	3910, 3890, 909, 3884, 3271, 3270, 3251, 1234, 2184, 3051,
	1352, 3046, 190, 190, 2446, 2444, 1234, 2421, 2387, 3958,
	3955, 1234, 2348, 1825, 2334, 3915, 3960, 1517, 2320, 3917,
	2248, 2245, 2242, 1744, 3924, 2239, 1234, 2234, 4030, 3986,
	2232, 2228, 2219, 3906, 1517, 5119, 3985, 3927, 3928, 1941,
	2329, 2156, 3908, 3444, 2184, 2184, 1234, 1234, 3840, 1234,
	1234, 1234, 5218, 2270, 3665, 3666, 2589, 3667, 2556, 2427,
	3847, 4944, 2626, 2258, 2259, 3416, 3417, 1234, 3973, 3414,
	3974, 1234, 3975, 2184, 2184, 1234, 1234, 1234, 1234, 1234,
	1234, 1234, 1234, 1234, 1234, 1234, 1234, 1234, 1234, 1234,
	1234, 1234, 1234, 1234, 1234, 4062, 1234, 4063, 3818, 3995,
	1430, 4012, 1332, 2396, 1234, 1234, 2184, 3244, 4022, 4023,
	2624, 1234, 2327, 1122, 1124, 1126, 1173, 5101, 5009, 4672,
	4597, 4500, 1234, 3337, 1351, 3992, 3695, 2287, 1700, 1333,
	3087, 4880, 3087, 1357, 1357, 3113, 4873, 1234, 3983, 4353,
	2329, 2547, 3445, 2487, 1901, 1902, 3085, 3989, 3110, 1420,
	3990, 1421, 2584, 1942, 2579, 5100, 4554, 2625, 2554, 4592,
	3208, 1164, 1950, 1951, 1824, 1950, 1951, 4901, 2107, 1517,
	4772, 4019, 846, 4017, 1491, 3117, 4136, 4453, 4431, 3742,
	1353, 2178, 1441, 1441, 3118, 4036, 4038, 4039, 4029, 3139,
	2257, 4045, 1945, 1448, 1953, 1388, 1353, 5212, 4123, 1488,
	1441, 1441, 1192, 5173, 899, 1441, 4052, 1624, 3269, 3118,
	1355, 1355, 4263, 4060, 4329, 2471, 281, 4061, 1459, 3188,
	3819, 3186, 3195, 3179, 1234, 4101, 1353, 2178, 2178, 4093,
	1952, 4065, 1421, 1952, 3177, 4067, 4262, 3178, 1421, 3122,
	4152, 3120, 1881, 1334, 4102, 863, 849, 849, 2676, 4053,
	5058, 5039, 1234, 3121, 5008, 2111, 2178, 2178, 190, 5005,
	4108, 4943, 4888, 4140, 4094, 741, 4864, 4838, 2181, 4750,
	4339, 4331, 4319, 4133, 3895, 3316, 2941, 2676, 4068, 2254,
	4110, 4111, 2165, 5258, 2172, 1234, 1234, 4771, 3165, 2178,
	3951, 1352, 1352, 5091, 1652, 1651, 1645, 3263, 5092, 1166,
	3266, 3655, 3268, 3949, 2406, 2114, 4113, 4114, 5289, 5007,
	4097, 4125, 1664, 3942, 2181, 2181, 3542, 3543, 4141, 5231,
	5122, 2109, 5091, 4126, 1664, 1234, 1234, 5092, 4196, 2386,
	2172, 2172, 4338, 1234, 4177, 1950, 1951, 4423, 4178, 2112,
	2298, 3073, 2820, 2181, 2181, 4142, 1810, 4139, 3313, 2297,
	3072, 3313, 1809, 4160, 1639, 1639, 4150, 1639, 3399, 2172,
	2172, 1639, 4148, 1663, 1639, 2855, 2970, 1664, 2298, 1441,
	2297, 4865, 4812, 4594, 4233, 4172, 2181, 1880, 4589, 4588,
	1879, 4481, 4281, 2110, 2328, 4477, 2382, 4215, 4476, 4217,
	4234, 4236, 2172, 906, 2184, 4419, 909, 4149, 4393, 4229,
	3953, 4159, 4145, 4041, 3812, 4253, 3809, 3402, 2042, 4275,
	2041, 3419, 4265, 2631, 2381, 1351, 1351, 3944, 5274, 5239,
	5105, 5043, 5042, 4221, 5041, 4975, 4974, 4146, 4920, 4226,
	4917, 4841, 3943, 4802, 4741, 3390, 4736, 4735, 1639, 4733,
	4289, 4732, 4730, 4636, 1234, 4616, 4552, 4259, 4490, 2377,
	3134, 4475, 1357, 1234, 4346, 4355, 4153, 4154, 4328, 4327,
	4312, 4474, 1639, 4286, 4287, 4366, 4266, 1639, 1639, 1639,
	290, 4301, 4361, 4359, 4168, 4169, 4306, 4212, 4204, 4176,
	3899, 3898, 2326, 3734, 3676, 3403, 3393, 3365, 3364, 3952,
	1639, 4272, 1639, 3363, 3362, 3322, 3300, 1639, 4282, 1517,
	3273, 3204, 4326, 3272, 4347, 4314, 3111, 3042, 4350, 3336,
	3024, 3023, 2378, 2113, 4290, 4291, 4363, 4305, 4300, 2749,
	4318, 2617, 2585, 2578, 2577, 2576, 2575, 4279, 4040, 1355,
	1517, 2574, 1242, 1234, 1234, 4349, 4367, 2485, 2460, 1234,
	1234, 2184, 4381, 4330, 1234, 1234, 1353, 1234, 2456, 4387,
	2455, 4059, 1234, 2454, 4280, 4335, 2453, 2452, 2222, 2221,
	4143, 2220, 4379, 1234, 2218, 2155, 4333, 4382, 4144, 2154,
	1900, 1899, 1835, 1714, 1713, 1712, 1711, 2178, 1710, 1234,
	288, 288, 288, 4351, 747, 748, 4356, 764, 747, 764,
	776, 4348, 1709, 816, 1708, 1703, 1699, 836, 3720, 4365,
	4357, 1697, 843, 843, 843, 843, 4364, 1430, 1696, 1629,
	1352, 1628, 288, 1627, 4404, 1508, 1507, 1506, 1505, 1504,
	1451, 1407, 4147, 4383, 1406, 4380, 1405, 1404, 1403, 1402,
	1401, 1399, 982, 1394, 4390, 1393, 1392, 1391, 1390, 288,
	1357, 975, 8, 1314, 4413, 2260, 1128, 1114, 1357, 4398,
	4949, 4531, 1517, 1517, 4530, 1517, 3950, 3945, 3946, 3947,
	3948, 4417, 1357, 4392, 2181, 4529, 2613, 97, 1705, 938,
	4405, 91, 2394, 1639, 1639, 1196, 4211, 4887, 1076, 5088,
	2172, 4979, 1688, 946, 5069, 3736, 4389, 3213, 4458, 2559,
	2475, 4164, 1836, 2561, 1517, 3631, 3954, 2983, 5031, 4427,
	3504, 4908, 4705, 2823, 2046, 3585, 4466, 93, 1218, 1264,
	4627, 4626, 4515, 4198, 3866, 4623, 4622, 1355, 2169, 2171,
	1234, 1182, 1520, 4443, 2178, 1355, 5113, 2271, 5280, 1224,
	2280, 1357, 3025, 1357, 1351, 2899, 1241, 1238, 2173, 1355,
	2175, 1240, 1239, 4483, 4484, 2174, 2066, 1237, 2168, 4337,
	4486, 4487, 3281, 3320, 3925, 1754, 1752, 1078, 1441, 2275,
	4504, 4505, 2743, 4450, 4457, 4494, 4495, 2807, 1517, 4498,
	1441, 4562, 3493, 1441, 4460, 2658, 4542, 190, 4507, 747,
	747, 4541, 4467, 4571, 2039, 1198, 4574, 288, 1234, 4555,
	4470, 1517, 4461, 4463, 1220, 4558, 4559, 2804, 1352, 1381,
	4455, 4456, 1209, 4510, 3611, 4482, 1352, 3590, 1355, 3912,
	1355, 2181, 4132, 4454, 2653, 955, 3539, 2810, 1370, 2922,
	1352, 4459, 4497, 2915, 2911, 3686, 3310, 2172, 1918, 4719,
	2017, 3321, 4512, 1639, 1639, 1485, 4506, 1353, 1353, 1202,
	2741, 2030, 4593, 3471, 4595, 2663, 3919, 3634, 3018, 5094,
	4049, 3400, 2464, 1331, 1330, 1379, 1329, 5075, 4578, 5072,
	1441, 2384, 4630, 3861, 3862, 2263, 4557, 3066, 2753, 3880,
	1214, 3378, 1517, 4642, 4596, 3379, 3636, 1639, 1623, 2605,
	3981, 4617, 3596, 4317, 4620, 1716, 4615, 4779, 1226, 1352,
	2002, 1352, 3240, 4659, 3239, 4575, 4938, 1470, 1468, 4572,
	1467, 1466, 4614, 1639, 1639, 1639, 1639, 1639, 1639, 1639,
	4607, 4648, 5248, 3206, 2397, 4207, 4556, 4206, 4205, 4613,
	251, 4643, 1351, 2917, 3438, 1939, 1931, 1517, 248, 250,
	1351, 4587, 4606, 249, 4605, 3740, 4137, 3640, 1812, 1234,
	1234, 1234, 4561, 4660, 1351, 4538, 5171, 4538, 4231, 3852,
	4632, 4625, 4621, 25, 850, 4570, 4677, 1517, 4573, 4639,
	4681, 4637, 1234, 4633, 4663, 1234, 1234, 851, 852, 3076,
	2290, 4691, 1430, 1487, 4182, 1234, 3751, 3752, 2184, 3753,
	24, 4668, 23, 1234, 1234, 4661, 22, 4683, 21, 120,
	44, 4645, 20, 162, 160, 137, 157, 156, 129, 155,
	1517, 4674, 1639, 154, 4675, 153, 152, 151, 159, 150,
	149, 144, 4654, 1351, 148, 1351, 147, 146, 145, 143,
	141, 4697, 142, 136, 140, 4692, 139, 1441, 138, 135,
	134, 133, 132, 3799, 3800, 131, 3801, 130, 128, 4728,
	161, 4729, 2475, 127, 126, 205, 4702, 125, 4684, 1517,
	4685, 124, 123, 122, 121, 829, 830, 1234, 63, 62,
	117, 118, 19, 42, 14, 67, 68, 18, 13, 1430,
	1234, 37, 96, 109, 108, 107, 38, 104, 36, 1234,
	17, 4714, 16, 15, 2184, 4725, 4726, 102, 4708, 1644,
	101, 4756, 100, 35, 1234, 33, 11, 1234, 9, 39,
	2128, 12, 5, 195, 194, 197, 193, 196, 95, 192,
	191, 94, 31, 1234, 10, 187, 1234, 4857, 4324, 87,
	189, 188, 186, 1517, 185, 184, 4782, 88, 85, 183,
	90, 1441, 182, 86, 89, 29, 6, 66, 7, 4686,
	3963, 1639, 1639, 1639, 4821, 112, 4755, 113, 4761, 40,
	4805, 2318, 4806, 4752, 83, 4801, 1353, 82, 81, 80,
	28, 2178, 1357, 65, 27, 179, 229, 228, 227, 4830,
	226, 225, 224, 223, 222, 217, 221, 4817, 219, 218,
	220, 216, 242, 4799, 241, 4840, 240, 1517, 4804, 239,
	1639, 238, 4856, 232, 4835, 4836, 231, 237, 236, 235,
	4844, 4803, 234, 233, 230, 245, 4874, 4851, 76, 215,
	4848, 4793, 4794, 3863, 4753, 214, 4754, 213, 211, 207,
	4814, 4861, 210, 212, 209, 208, 1234, 1234, 206, 244,
	243, 77, 177, 4833, 4837, 4832, 178, 4842, 4879, 1355,
	75, 1515, 176, 1234, 2184, 175, 174, 4813, 2181, 4815,
	173, 4816, 172, 171, 170, 4883, 4875, 4885, 4877, 74,
	4822, 4855, 4860, 181, 2172, 180, 26, 2178, 2, 1441,
	1441, 1, 0, 1441, 1441, 4876, 1441, 1441, 0, 4882,
	0, 4881, 1372, 4663, 0, 0, 0, 0, 4791, 0,
	0, 0, 4889, 764, 1234, 0, 1234, 0, 1234, 0,
	0, 4744, 0, 0, 1196, 1196, 1196, 764, 1357, 0,
	0, 4933, 0, 4807, 0, 4896, 4820, 0, 1396, 0,
	1352, 1234, 0, 1357, 0, 0, 0, 4871, 0, 4931,
	288, 4900, 288, 288, 0, 1425, 288, 1435, 0, 0,
	4897, 4898, 0, 0, 1353, 1601, 0, 4906, 1449, 0,
	0, 0, 1353, 0, 2181, 0, 836, 4930, 0, 836,
	0, 4926, 4929, 0, 0, 0, 1353, 0, 0, 0,
	2172, 4961, 4960, 0, 0, 0, 4538, 0, 0, 0,
	1357, 1357, 843, 4953, 0, 1355, 0, 0, 0, 0,
	0, 0, 4982, 0, 4984, 4954, 0, 0, 1357, 0,
	1355, 1357, 0, 0, 0, 1639, 288, 0, 288, 288,
	1425, 0, 288, 288, 0, 1639, 0, 4969, 0, 0,
	2028, 1435, 4971, 0, 2033, 0, 0, 2178, 4997, 4998,
	0, 0, 1234, 1234, 288, 1353, 288, 1353, 1666, 0,
	0, 0, 1234, 0, 1351, 0, 5012, 0, 4995, 5014,
	0, 4977, 0, 0, 1686, 0, 5006, 1355, 1355, 0,
	0, 1693, 0, 0, 0, 5027, 1352, 5028, 5011, 0,
	5020, 5019, 0, 4970, 0, 1355, 0, 5023, 1355, 4860,
	1718, 1352, 1435, 5026, 5024, 0, 288, 288, 0, 1425,
	3428, 0, 0, 1624, 0, 1234, 1234, 0, 5040, 1234,
	5036, 0, 0, 1639, 1441, 5066, 0, 1441, 5044, 5045,
	836, 0, 288, 288, 2181, 0, 0, 5074, 5077, 0,
	5046, 5048, 4538, 2434, 1780, 0, 0, 0, 0, 5093,
	2172, 0, 5056, 5057, 5090, 1788, 5097, 4538, 1352, 1352,
	982, 5065, 5064, 4918, 4919, 0, 5035, 4921, 4922, 0,
	4923, 4924, 5083, 0, 5079, 5084, 1352, 5118, 5096, 1352,
	0, 0, 0, 1234, 1234, 1234, 5116, 0, 0, 0,
	0, 0, 0, 2917, 2917, 0, 1163, 0, 1100, 0,
	5022, 0, 0, 0, 5102, 0, 0, 5109, 0, 0,
	1351, 5117, 5106, 0, 4538, 4538, 0, 0, 0, 0,
	5152, 1234, 5121, 1165, 0, 1351, 0, 0, 5135, 5078,
	0, 5157, 4538, 5082, 0, 4538, 5134, 1430, 5132, 5133,
	0, 288, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 5180, 0, 2318, 5153, 5154, 5179, 0,
	0, 0, 5178, 0, 5155, 0, 0, 288, 5186, 0,
	0, 1164, 0, 5170, 0, 5188, 0, 0, 0, 1234,
	0, 5192, 1351, 1351, 0, 0, 0, 1441, 5185, 4840,
	5184, 5201, 0, 0, 0, 5168, 0, 0, 0, 5193,
	1351, 5194, 0, 1351, 3951, 0, 0, 5211, 5219, 0,
	0, 0, 5207, 5208, 0, 0, 0, 3949, 1101, 0,
	0, 5215, 5213, 0, 5198, 0, 5222, 3942, 0, 5210,
	0, 0, 5234, 5221, 5074, 0, 0, 5077, 1357, 5225,
	1357, 5223, 5244, 0, 5235, 5232, 2143, 5230, 0, 5236,
	0, 5242, 5241, 5233, 0, 0, 0, 5240, 0, 5167,
	0, 0, 5169, 0, 0, 5250, 0, 0, 0, 0,
	0, 4334, 5096, 0, 0, 2917, 2917, 2917, 2917, 1441,
	0, 0, 0, 0, 0, 5249, 5243, 0, 5245, 5272,
	5265, 5266, 5273, 0, 0, 0, 5276, 0, 5085, 0,
	0, 5086, 0, 5271, 0, 5284, 0, 5275, 0, 1234,
	1234, 0, 0, 5278, 3953, 1355, 5282, 1355, 1234, 1234,
	0, 5287, 0, 0, 0, 5292, 0, 5298, 0, 0,
	0, 3944, 5296, 0, 5303, 5307, 5300, 5302, 4384, 5306,
	5308, 5299, 0, 0, 5304, 5301, 3943, 0, 3322, 5305,
	1601, 0, 0, 0, 0, 5312, 1441, 5313, 5315, 5311,
	0, 0, 5320, 5318, 5317, 0, 0, 5314, 5323, 5316,
	1106, 1105, 0, 2289, 747, 0, 1234, 0, 3322, 0,
	5327, 0, 5329, 5320, 5324, 5331, 1353, 0, 0, 0,
	0, 0, 5326, 0, 0, 288, 1352, 288, 1352, 0,
	0, 288, 0, 3952, 0, 0, 0, 0, 3468, 3469,
	0, 0, 0, 0, 1666, 1425, 1435, 288, 1102, 288,
	2153, 0, 0, 0, 0, 78, 0, 288, 0, 764,
	0, 0, 5293, 5294, 0, 0, 288, 0, 0, 0,
	0, 0, 0, 79, 3940, 5295, 0, 0, 0, 0,
	0, 0, 4538, 2223, 4538, 0, 0, 0, 0, 0,
	84, 5209, 0, 0, 0, 288, 0, 0, 0, 1196,
	0, 0, 288, 0, 0, 0, 0, 1601, 0, 0,
	0, 0, 2765, 2766, 2767, 2784, 2785, 2786, 0, 0,
	5328, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 92, 0, 2787, 0, 836, 0, 1950, 1951, 0,
	1983, 1984, 1985, 1994, 1995, 1996, 0, 0, 0, 0,
	1351, 0, 1351, 0, 0, 0, 0, 0, 0, 0,
	1987, 1981, 1353, 0, 0, 0, 0, 0, 2006, 1953,
	0, 0, 976, 843, 0, 843, 0, 1353, 0, 2000,
	1103, 0, 0, 5269, 2439, 843, 843, 114, 2777, 0,
	0, 0, 0, 98, 111, 0, 2006, 2773, 0, 0,
	3950, 3945, 3946, 3947, 3948, 1952, 1162, 0, 1104, 0,
	0, 0, 0, 0, 0, 0, 1972, 0, 0, 0,
	3566, 3567, 3568, 3569, 0, 1969, 0, 0, 0, 0,
	0, 0, 0, 0, 1353, 1353, 0, 0, 0, 0,
	3954, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1353, 0, 0, 1353, 0, 99, 0, 0,
	0, 0, 4583, 0, 1108, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2778, 2779, 2780, 2781, 0,
	0, 0, 0, 1107, 0, 2772, 0, 0, 1601, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1975, 1976, 1977, 1978, 0, 0, 0,
	0, 0, 0, 1958, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4635, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 288, 4644, 0, 0,
	0, 3542, 3543, 288, 3560, 3561, 3562, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1991, 0, 0, 2001,
	4667, 0, 0, 0, 2782, 2783, 1980, 1982, 2747, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1997, 2028, 1998, 0, 0, 0, 0,
	0, 0, 1967, 1968, 0, 0, 0, 2775, 288, 0,
	0, 0, 288, 0, 0, 0, 0, 288, 0, 0,
	1989, 103, 0, 288, 0, 0, 0, 0, 0, 0,
	3557, 0, 0, 0, 0, 1973, 0, 0, 0, 288,
	0, 288, 0, 0, 0, 747, 0, 288, 0, 1644,
	0, 2917, 2917, 0, 0, 0, 1644, 0, 0, 836,
	0, 0, 0, 982, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2679,
	198, 0, 106, 0, 1999, 110, 0, 0, 0, 0,
	0, 0, 0, 288, 0, 1425, 288, 0, 0, 0,
	0, 0, 0, 0, 0, 1988, 0, 0, 0, 0,
	0, 836, 252, 0, 0, 0, 2003, 4748, 288, 0,
	977, 0, 0, 0, 0, 158, 2558, 3548, 0, 0,
	0, 288, 288, 0, 288, 0, 288, 0, 288, 0,
	288, 2917, 2917, 2917, 2917, 2917, 2917, 2917, 2917, 2917,
	2917, 2917, 2917, 2917, 2917, 2917, 2917, 2917, 2917, 2917,
	2917, 0, 2917, 254, 0, 2595, 0, 0, 2596, 1632,
	2597, 2776, 2821, 3565, 0, 1979, 0, 0, 0, 1196,
	0, 0, 1353, 1601, 1353, 288, 288, 288, 288, 0,
	163, 0, 0, 0, 0, 0, 0, 3564, 0, 1974,
	0, 0, 0, 0, 0, 0, 204, 0, 0, 0,
	1690, 0, 0, 0, 253, 0, 816, 0, 0, 0,
	836, 0, 0, 0, 0, 0, 0, 1992, 0, 246,
	0, 0, 0, 2005, 0, 0, 0, 0, 247, 3558,
	0, 0, 199, 0, 0, 0, 0, 203, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2005, 1768, 0, 0, 0, 0, 0, 202, 2993,
	0, 0, 0, 0, 0, 0, 1601, 0, 1783, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2755, 0, 0, 0, 0,
	2003, 2762, 2763, 2764, 2788, 2774, 2768, 0, 2770, 2771,
	2769, 2756, 2757, 2758, 2759, 2760, 2761, 1990, 1813, 0,
	0, 0, 0, 0, 0, 0, 0, 1601, 0, 1964,
	1965, 1971, 1993, 1970, 1966, 0, 1963, 1961, 1962, 1954,
	1955, 1956, 1957, 1959, 1960, 0, 4005, 4006, 0, 0,
	3517, 0, 0, 1601, 3518, 0, 3542, 3543, 0, 3560,
	3561, 3562, 0, 0, 0, 0, 0, 747, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4409,
	0, 0, 288, 3559, 0, 0, 0, 0, 0, 0,
	0, 747, 0, 0, 0, 3075, 0, 0, 288, 0,
	747, 0, 0, 0, 0, 4967, 0, 0, 0, 0,
	0, 0, 288, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 288, 1435, 4981, 3557, 4069, 4070, 4071, 4072,
	4073, 4074, 4075, 4076, 4077, 4078, 4079, 4080, 4081, 4082,
	4083, 4084, 4085, 4086, 4087, 4088, 0, 4092, 0, 0,
	5010, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 288, 1435, 0, 288, 764, 0, 764, 0, 0,
	0, 0, 3041, 0, 0, 0, 0, 0, 288, 1601,
	0, 288, 0, 0, 0, 288, 0, 288, 0, 0,
	0, 0, 1425, 0, 288, 288, 0, 1435, 1435, 3057,
	0, 0, 0, 0, 288, 0, 0, 1950, 1951, 0,
	0, 0, 3548, 3554, 3555, 3556, 0, 0, 0, 0,
	3553, 3551, 3552, 3544, 3545, 3546, 3547, 3549, 3550, 0,
	0, 1981, 0, 0, 0, 1950, 1951, 0, 0, 1953,
	0, 1994, 1995, 1996, 0, 0, 0, 0, 843, 843,
	0, 0, 843, 843, 0, 0, 0, 0, 0, 1981,
	0, 3100, 0, 0, 0, 0, 2006, 1953, 0, 0,
	0, 0, 0, 288, 0, 1952, 1644, 2000, 0, 1601,
	0, 5103, 3564, 0, 5104, 0, 1972, 288, 0, 0,
	0, 0, 3542, 3543, 2006, 3560, 3561, 3562, 0, 0,
	0, 288, 0, 1952, 0, 0, 0, 0, 0, 0,
	0, 0, 836, 0, 1972, 4014, 0, 836, 0, 0,
	0, 0, 0, 1969, 3558, 1950, 1951, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	288, 1189, 0, 0, 0, 0, 0, 0, 0, 1981,
	0, 0, 288, 288, 3201, 1666, 0, 1953, 0, 1644,
	1644, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3557, 0, 1975, 1976, 1977, 1978, 3542, 3543, 0,
	3560, 3561, 3562, 1958, 2006, 0, 0, 0, 0, 288,
	0, 3261, 0, 1952, 0, 0, 0, 0, 0, 0,
	4013, 1975, 1976, 1977, 1978, 2003, 0, 0, 0, 0,
	0, 1958, 0, 0, 0, 0, 0, 0, 1666, 0,
	0, 288, 0, 0, 0, 0, 0, 0, 0, 288,
	0, 0, 0, 0, 0, 0, 1980, 1982, 0, 3305,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3100,
	0, 747, 0, 0, 1991, 0, 3557, 2001, 0, 0,
	3201, 982, 3100, 0, 1980, 1982, 0, 0, 3548, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 288, 0, 0, 0, 3559, 0,
	1967, 1968, 0, 0, 0, 1973, 0, 0, 0, 0,
	0, 1958, 0, 0, 288, 1425, 288, 0, 1989, 0,
	0, 0, 0, 0, 0, 0, 3380, 288, 0, 0,
	1425, 0, 1425, 1973, 1425, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3564, 0,
	0, 1644, 1644, 1644, 1644, 0, 0, 0, 0, 0,
	0, 0, 0, 3548, 1980, 1982, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1196, 0, 0, 0, 0,
	0, 288, 288, 288, 288, 1425, 2003, 0, 1425, 0,
	3558, 288, 0, 0, 0, 0, 288, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2003, 0, 0, 0, 0, 0,
	0, 0, 0, 1973, 0, 0, 0, 288, 0, 0,
	0, 0, 0, 3564, 0, 288, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1979, 0, 0, 3554, 3555,
	3556, 0, 0, 0, 0, 3553, 3551, 3552, 3544, 3545,
	3546, 3547, 3549, 3550, 0, 0, 0, 0, 0, 1974,
	0, 2003, 0, 1979, 0, 3558, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1974, 1950, 1951,
	0, 0, 0, 0, 2003, 0, 0, 0, 0, 0,
	0, 2917, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2505, 1981, 0, 0, 1992, 0, 0, 0, 0,
	1953, 2005, 0, 0, 0, 0, 0, 0, 0, 2519,
	2521, 0, 0, 3597, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2525, 3559, 0, 2003, 2006, 0, 2005,
	0, 0, 0, 1666, 0, 0, 1952, 0, 2537, 2538,
	2539, 0, 0, 0, 0, 0, 3626, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1974, 0, 0,
	0, 3639, 0, 2917, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3663, 0,
	0, 0, 0, 0, 0, 0, 1963, 1961, 1962, 1954,
	1955, 1956, 1957, 1959, 1960, 1990, 0, 0, 0, 3559,
	0, 0, 0, 0, 0, 0, 0, 1601, 0, 2005,
	1993, 1970, 1966, 0, 1963, 1961, 1962, 1954, 1955, 1956,
	1957, 1959, 1960, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1958, 0, 0, 0, 0, 0,
	1601, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1601, 0, 0, 0, 0,
	0, 0, 0, 0, 3554, 3555, 3556, 0, 288, 0,
	0, 3553, 3551, 3552, 3544, 3545, 3546, 3547, 3549, 3550,
	0, 0, 1601, 0, 288, 0, 0, 1980, 1982, 747,
	0, 0, 0, 0, 747, 0, 0, 747, 0, 0,
	747, 747, 0, 0, 0, 0, 747, 1954, 1955, 1956,
	1957, 1959, 1960, 0, 288, 0, 0, 0, 0, 0,
	0, 0, 0, 1196, 0, 0, 288, 0, 0, 0,
	0, 0, 0, 0, 0, 1196, 0, 0, 0, 2917,
	0, 0, 0, 0, 0, 0, 1973, 0, 0, 3554,
	3555, 3556, 0, 0, 0, 0, 3553, 3551, 3552, 3544,
	3545, 3546, 3547, 3549, 3550, 0, 0, 0, 0, 288,
	0, 0, 0, 288, 288, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4711, 0, 0, 0,
	0, 0, 2917, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3100, 3100, 288,
	0, 3706, 3709, 0, 0, 0, 0, 2917, 3100, 3639,
	2153, 0, 0, 0, 0, 0, 0, 2003, 0, 3100,
	2153, 0, 3100, 2153, 0, 0, 2153, 0, 0, 3706,
	0, 0, 0, 1601, 0, 0, 0, 1644, 1644, 0,
	0, 288, 288, 3709, 0, 288, 0, 0, 0, 970,
	0, 0, 0, 0, 0, 0, 0, 0, 4764, 0,
	0, 0, 0, 0, 3709, 0, 288, 0, 3782, 0,
	3782, 0, 0, 0, 0, 0, 1425, 78, 0, 973,
	972, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 79, 0, 0, 0, 3100,
	1974, 3100, 0, 3813, 3100, 3709, 0, 0, 3100, 0,
	0, 0, 84, 1601, 0, 0, 0, 0, 0, 0,
	0, 0, 3709, 0, 0, 836, 0, 1644, 1644, 1644,
	1644, 1644, 1644, 1644, 1644, 1644, 1644, 1644, 1644, 1644,
	1644, 1644, 1644, 1644, 1644, 1644, 1644, 0, 1644, 0,
	0, 3982, 0, 92, 1515, 0, 0, 1425, 0, 0,
	0, 0, 2005, 0, 288, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 288, 0, 3857, 0, 0, 0, 3859, 3100,
	0, 0, 288, 0, 976, 288, 0, 0, 3888, 1435,
	0, 0, 0, 0, 0, 0, 0, 51, 0, 114,
	0, 0, 0, 0, 288, 98, 111, 0, 0, 3305,
	0, 0, 1425, 0, 288, 0, 0, 3100, 0, 747,
	0, 0, 0, 4026, 0, 0, 3100, 0, 0, 0,
	0, 0, 0, 0, 4905, 0, 0, 0, 0, 0,
	4042, 0, 0, 0, 0, 1601, 0, 0, 1601, 1962,
	1954, 1955, 1956, 1957, 1959, 1960, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 99,
	0, 0, 0, 0, 0, 0, 0, 3971, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4937, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3205, 0,
	3978, 0, 0, 0, 1666, 0, 0, 0, 1425, 288,
	0, 288, 4959, 0, 0, 0, 0, 1425, 0, 0,
	1425, 0, 0, 0, 0, 0, 0, 1601, 0, 0,
	0, 1950, 1951, 0, 1983, 1984, 1985, 1994, 1995, 1996,
	0, 0, 0, 0, 1601, 0, 0, 0, 0, 288,
	0, 0, 0, 0, 0, 1981, 0, 0, 0, 0,
	0, 2106, 0, 1953, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2000, 0, 4135, 0, 0, 0, 0,
	1950, 1951, 0, 1983, 1984, 1985, 1994, 1995, 1996, 0,
	2006, 0, 0, 0, 0, 0, 0, 0, 0, 1952,
	0, 0, 0, 1987, 1981, 0, 0, 0, 4047, 3231,
	1972, 0, 1953, 0, 0, 0, 0, 3350, 0, 1969,
	0, 0, 2000, 103, 0, 0, 0, 0, 3357, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2006,
	0, 0, 0, 3221, 3219, 0, 0, 0, 1952, 0,
	3223, 3225, 3215, 0, 0, 0, 0, 0, 0, 1972,
	0, 0, 0, 0, 0, 0, 0, 0, 1969, 0,
	0, 0, 0, 1986, 0, 0, 0, 0, 0, 1601,
	0, 0, 198, 0, 106, 0, 0, 110, 0, 0,
	0, 0, 0, 3241, 0, 0, 0, 1975, 1976, 1977,
	1978, 0, 0, 0, 0, 288, 288, 1958, 0, 0,
	0, 0, 0, 0, 252, 0, 0, 0, 0, 0,
	0, 0, 977, 0, 0, 0, 0, 158, 0, 0,
	747, 747, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1975, 1976, 1977, 1978,
	1991, 0, 0, 2001, 0, 0, 1958, 0, 0, 0,
	1980, 1982, 0, 0, 0, 254, 1181, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 288, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1967, 1968, 0, 0,
	0, 0, 163, 0, 0, 0, 0, 0, 0, 1991,
	0, 0, 2001, 0, 1989, 0, 0, 0, 204, 1980,
	1982, 0, 0, 0, 0, 0, 253, 0, 0, 1973,
	0, 0, 0, 0, 0, 0, 1997, 0, 1998, 0,
	0, 246, 0, 0, 0, 1967, 1968, 0, 0, 3217,
	247, 0, 0, 0, 199, 0, 0, 0, 0, 203,
	3233, 0, 0, 1989, 0, 0, 0, 0, 0, 836,
	0, 0, 0, 0, 0, 0, 0, 0, 1973, 0,
	971, 0, 0, 0, 3232, 3222, 3220, 3224, 3226, 3216,
	3218, 3234, 3236, 0, 0, 0, 4245, 0, 0, 4247,
	4248, 0, 3228, 3230, 3238, 0, 3782, 0, 0, 0,
	2003, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 288, 0, 0, 0, 0, 0, 1999, 0, 0,
	0, 0, 0, 0, 0, 3201, 0, 0, 3242, 0,
	0, 0, 0, 0, 0, 0, 1986, 0, 1988, 0,
	3709, 0, 288, 0, 0, 0, 764, 764, 1435, 2003,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1979,
	0, 288, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 288, 3305, 0, 0, 3305, 2153, 0, 0,
	0, 0, 288, 1974, 0, 0, 0, 0, 0, 3888,
	0, 0, 0, 0, 288, 0, 0, 0, 0, 288,
	0, 0, 0, 0, 288, 0, 0, 0, 1979, 1601,
	0, 1992, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3100, 288, 0, 0, 0, 0, 0,
	0, 0, 1974, 3201, 0, 0, 982, 3100, 0, 0,
	1601, 0, 0, 0, 0, 2005, 0, 0, 3235, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1992, 4465, 0, 0, 0, 0, 0, 0, 288, 0,
	0, 0, 3709, 0, 0, 3057, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2005, 0, 0, 0, 0, 0,
	4492, 0, 0, 0, 0, 0, 1986, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3243,
	0, 1990, 1986, 0, 0, 0, 0, 0, 3227, 3229,
	3237, 0, 0, 1964, 1965, 1971, 1993, 1970, 1966, 0,
	1963, 1961, 1962, 1954, 1955, 1956, 1957, 1959, 1960, 4428,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1986, 0, 1601, 1601, 0, 1601, 1986, 0, 0, 0,
	1990, 0, 1986, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1964, 1965, 1971, 1993, 1970, 1966, 0, 1963,
	1961, 1962, 1954, 1955, 1956, 1957, 1959, 1960, 0, 0,
	0, 0, 0, 2798, 1601, 0, 0, 2799, 0, 0,
	0, 0, 288, 0, 0, 0, 0, 1644, 1666, 0,
	288, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1196, 0, 3542, 3543, 288, 3560, 3561, 3562, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1435, 1435,
	0, 0, 0, 1986, 0, 0, 0, 0, 1986, 0,
	0, 0, 0, 1435, 1435, 0, 288, 1435, 1601, 0,
	0, 0, 1986, 0, 0, 0, 0, 1986, 3100, 3100,
	0, 3706, 0, 0, 3782, 3100, 0, 0, 0, 1644,
	0, 1601, 0, 4540, 0, 4540, 1666, 0, 0, 0,
	0, 3557, 0, 0, 0, 0, 0, 3100, 0, 2153,
	0, 0, 0, 3706, 0, 1666, 1666, 288, 3709, 0,
	0, 0, 0, 1515, 0, 0, 3831, 0, 0, 0,
	0, 3709, 0, 288, 3709, 0, 288, 0, 0, 3782,
	0, 0, 0, 1986, 0, 0, 0, 0, 78, 1986,
	0, 0, 0, 4703, 3856, 0, 0, 0, 1444, 0,
	3100, 0, 3100, 288, 0, 0, 79, 3885, 0, 0,
	0, 0, 1601, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 84, 0, 1181, 1181, 1181, 0, 0,
	0, 0, 0, 0, 0, 0, 4703, 0, 3548, 0,
	0, 0, 3100, 3100, 0, 0, 0, 0, 3305, 3305,
	0, 0, 0, 0, 0, 3706, 0, 3932, 0, 0,
	0, 0, 0, 0, 92, 288, 0, 1601, 0, 3956,
	1614, 0, 0, 0, 0, 288, 1630, 0, 0, 0,
	0, 0, 0, 0, 0, 2679, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1601, 0, 0,
	0, 0, 0, 0, 0, 976, 0, 1668, 3564, 1674,
	0, 1680, 0, 0, 0, 1644, 0, 0, 51, 0,
	114, 0, 0, 0, 0, 0, 98, 111, 0, 1986,
	1986, 1986, 1986, 1986, 1986, 1986, 1986, 0, 0, 0,
	1601, 0, 0, 0, 0, 0, 0, 0, 0, 1986,
	3558, 0, 0, 0, 0, 0, 0, 0, 0, 2679,
	0, 0, 1986, 0, 0, 0, 0, 0, 1644, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1771,
	0, 1776, 0, 0, 0, 0, 0, 0, 0, 1601,
	99, 0, 0, 1644, 0, 1790, 0, 1795, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2921, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1986, 0, 0, 0, 0, 0, 1986, 0,
	0, 2003, 0, 0, 0, 0, 0, 1196, 0, 0,
	0, 0, 0, 0, 0, 0, 3100, 2153, 0, 2153,
	0, 0, 3888, 0, 0, 0, 0, 0, 0, 0,
	0, 288, 0, 1601, 0, 0, 1861, 0, 0, 1867,
	0, 4780, 0, 4780, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1950, 1951, 0,
	1983, 1984, 1985, 1994, 1995, 1996, 0, 0, 836, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3782,
	1666, 1981, 1666, 1425, 3559, 0, 0, 0, 0, 1953,
	0, 0, 0, 0, 0, 0, 0, 1601, 0, 2000,
	0, 0, 3709, 0, 288, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 103, 0, 2006, 0, 0, 0,
	0, 0, 0, 0, 0, 1952, 0, 0, 0, 0,
	0, 3888, 0, 0, 4540, 0, 1972, 1666, 0, 0,
	0, 3100, 0, 0, 0, 1969, 2007, 2008, 2009, 2010,
	2011, 2012, 2013, 2014, 0, 0, 4868, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1666, 0,
	0, 0, 0, 198, 0, 106, 0, 0, 110, 2027,
	0, 0, 0, 0, 0, 2040, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 288, 288, 0, 0,
	0, 0, 0, 0, 0, 252, 0, 0, 0, 0,
	0, 0, 0, 977, 0, 0, 0, 0, 158, 0,
	4047, 0, 0, 1975, 1976, 1977, 1978, 0, 0, 0,
	0, 0, 0, 1958, 3554, 3555, 3556, 0, 0, 0,
	0, 3553, 3551, 3552, 3544, 3545, 3546, 3547, 3549, 3550,
	0, 0, 3782, 4928, 0, 0, 254, 0, 0, 0,
	3888, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1991, 0, 0, 2001,
	4540, 0, 0, 163, 0, 0, 1980, 1982, 0, 0,
	0, 2100, 2100, 2100, 0, 4540, 0, 0, 0, 204,
	0, 0, 0, 1997, 0, 1998, 0, 253, 0, 0,
	0, 0, 1967, 1968, 0, 0, 0, 4273, 4274, 0,
	0, 288, 246, 0, 4276, 0, 0, 4277, 0, 0,
	1989, 247, 0, 0, 764, 199, 0, 0, 0, 0,
	203, 0, 0, 0, 0, 1973, 0, 0, 0, 0,
	0, 0, 4540, 4540, 0, 0, 0, 0, 0, 0,
	0, 202, 0, 0, 0, 0, 0, 0, 0, 0,
	4540, 0, 288, 4540, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2153, 0, 0, 1230, 0, 0, 0,
	0, 0, 0, 0, 1999, 1666, 0, 1666, 0, 0,
	0, 0, 0, 0, 0, 0, 1196, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4362, 2003, 0, 1435, 0,
	2519, 4368, 4369, 0, 287, 287, 287, 0, 0, 0,
	1181, 0, 5054, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4780, 0,
	0, 288, 0, 0, 0, 0, 907, 0, 0, 0,
	0, 0, 0, 0, 1986, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1979, 3100, 0, 0, 0,
	0, 0, 0, 907, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1986, 0, 0, 0, 0, 0, 1974,
	0, 0, 0, 0, 0, 0, 0, 0, 288, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1992, 0, 0,
	0, 4047, 0, 0, 1986, 0, 0, 0, 1986, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1986, 0, 0, 0, 1666, 0, 0, 0,
	0, 2005, 0, 1986, 1986, 1986, 1986, 1986, 1986, 1986,
	1986, 1986, 1986, 1986, 1986, 1986, 1986, 1986, 1986, 1986,
	1986, 1986, 1986, 1986, 1986, 1986, 1986, 1986, 1986, 1986,
	1986, 1986, 1986, 1986, 1986, 1986, 1986, 1986, 1986, 0,
	0, 0, 0, 0, 1986, 0, 1986, 1986, 1986, 1986,
	0, 0, 0, 0, 0, 1950, 1951, 0, 2921, 2921,
	0, 0, 0, 0, 0, 0, 4472, 4473, 0, 0,
	3888, 1354, 0, 1986, 0, 0, 0, 1990, 0, 1981,
	0, 0, 0, 0, 0, 0, 0, 1953, 0, 1964,
	1965, 1971, 1993, 1970, 1966, 0, 1963, 1961, 1962, 1954,
	1955, 1956, 1957, 1959, 1960, 0, 0, 0, 0, 0,
	3100, 0, 0, 0, 2006, 0, 0, 0, 0, 0,
	4540, 0, 4540, 1952, 1986, 1666, 0, 0, 0, 0,
	0, 0, 0, 0, 1972, 0, 0, 0, 0, 0,
	0, 0, 0, 1969, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1986, 0, 0, 1986, 0, 0,
	1986, 0, 0, 1986, 0, 0, 0, 0, 0, 1986,
	1986, 1986, 1986, 1986, 1986, 1986, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3100, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4408,
	0, 0, 0, 3201, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3100, 0, 0, 0,
	0, 1975, 1976, 1977, 1978, 0, 2519, 0, 0, 0,
	3201, 1958, 0, 0, 0, 1986, 0, 0, 3563, 0,
	2921, 2921, 2921, 2921, 0, 0, 1986, 0, 1986, 0,
	0, 0, 2582, 1986, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1980, 1982, 0, 0, 0, 0,
	2611, 0, 0, 0, 0, 0, 4676, 0, 4678, 4679,
	4680, 0, 4682, 0, 0, 0, 0, 0, 0, 0,
	1967, 1968, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2652, 0,
	2656, 0, 0, 0, 0, 0, 0, 2670, 0, 0,
	1181, 0, 0, 1973, 0, 0, 2681, 2682, 2683, 2684,
	2685, 2686, 2687, 2688, 2689, 2690, 2691, 2692, 2693, 2694,
	2695, 2696, 2697, 2698, 2699, 2700, 2701, 2702, 2703, 2704,
	2705, 2706, 2707, 2708, 2709, 2710, 2711, 2712, 2713, 2714,
	2715, 2716, 0, 2722, 0, 2724, 2725, 2726, 2727, 0,
	0, 0, 0, 0, 0, 4731, 0, 1950, 1951, 0,
	78, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2751, 0, 0, 0, 0, 0, 0, 79, 0,
	0, 1981, 0, 2027, 2003, 0, 0, 2802, 0, 1953,
	0, 0, 0, 0, 0, 84, 0, 0, 0, 0,
	0, 0, 0, 2832, 2835, 2838, 2841, 0, 0, 2847,
	2848, 2849, 2850, 2851, 2852, 2853, 2006, 0, 0, 0,
	0, 0, 0, 0, 0, 1952, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 92, 2913, 0, 2924,
	2926, 2931, 0, 1979, 0, 0, 0, 1950, 1951, 0,
	1983, 1984, 1985, 1994, 1995, 1996, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1974, 0, 0,
	1987, 1981, 0, 0, 0, 0, 0, 976, 0, 1953,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2000,
	51, 0, 114, 0, 4834, 0, 0, 0, 98, 111,
	0, 0, 0, 0, 0, 0, 2006, 0, 0, 0,
	0, 0, 0, 0, 0, 1952, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1972, 0, 0, 2005,
	0, 0, 0, 1958, 0, 1969, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1986, 1986, 0, 1986,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 99, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 287, 0, 287, 287, 0, 0,
	287, 0, 0, 0, 0, 0, 1980, 1982, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1975, 1976, 1977, 1978, 0, 0, 0,
	0, 1970, 1966, 1958, 1963, 1961, 1962, 1954, 1955, 1956,
	1957, 1959, 1960, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1973, 0, 0, 0, 0,
	287, 0, 287, 287, 0, 0, 287, 287, 0, 0,
	0, 0, 0, 0, 0, 0, 1991, 0, 0, 2001,
	0, 0, 0, 1986, 0, 0, 1980, 1982, 907, 0,
	907, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1997, 0, 1998, 0, 0, 0, 0,
	0, 0, 1967, 1968, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 103, 0, 0, 0,
	1989, 0, 0, 0, 0, 0, 2003, 0, 0, 0,
	287, 287, 0, 1986, 1986, 1973, 2921, 2921, 0, 0,
	1986, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3563, 3563, 0, 0, 1986, 1986, 287, 287, 0, 0,
	0, 0, 0, 0, 1986, 0, 0, 0, 2519, 0,
	0, 0, 0, 0, 0, 198, 0, 106, 1986, 0,
	110, 0, 0, 0, 1999, 0, 0, 0, 0, 0,
	1986, 0, 0, 0, 3264, 3265, 0, 3267, 0, 0,
	0, 0, 0, 0, 0, 1988, 0, 252, 0, 1974,
	0, 0, 0, 0, 0, 977, 2003, 0, 0, 0,
	158, 0, 0, 0, 0, 0, 2921, 2921, 2921, 2921,
	2921, 2921, 2921, 2921, 2921, 2921, 2921, 2921, 2921, 2921,
	2921, 2921, 2921, 2921, 2921, 2921, 0, 2921, 3563, 3563,
	3563, 3563, 0, 0, 0, 0, 0, 1266, 254, 0,
	0, 0, 1950, 1951, 0, 287, 0, 0, 0, 0,
	0, 2005, 0, 0, 0, 1979, 0, 0, 0, 0,
	0, 0, 0, 1986, 0, 163, 1981, 0, 0, 0,
	0, 287, 0, 0, 1953, 0, 0, 0, 0, 1974,
	0, 204, 0, 0, 0, 0, 0, 0, 0, 253,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2006, 0, 0, 246, 0, 0, 1992, 0, 0,
	1952, 0, 0, 247, 0, 0, 3391, 199, 0, 0,
	0, 1972, 203, 0, 0, 0, 0, 0, 0, 0,
	1969, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2005, 0, 1765, 0, 0, 1963, 1961, 1962, 1954,
	1955, 1956, 1957, 1959, 1960, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4008, 0, 0, 0,
	0, 2007, 2008, 0, 0, 0, 0, 0, 0, 0,
	0, 1986, 0, 0, 0, 0, 1181, 0, 1975, 1976,
	1977, 1978, 0, 0, 0, 0, 0, 1990, 1958, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1964,
	1965, 1971, 1993, 1970, 1966, 0, 1963, 1961, 1962, 1954,
	1955, 1956, 1957, 1959, 1960, 0, 0, 0, 0, 3451,
	3452, 0, 0, 0, 4434, 3458, 0, 0, 1986, 1986,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1980, 1982, 0, 3472, 3473, 0, 0, 0, 0,
	2802, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1358, 0, 0, 0, 0, 1967, 1968, 2122,
	0, 1354, 0, 0, 0, 287, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 287, 2122, 287, 0, 3482, 0, 0, 0, 0,
	1973, 907, 0, 1950, 1951, 0, 0, 0, 0, 0,
	907, 3496, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1981, 3508, 0,
	0, 0, 0, 0, 0, 1953, 0, 0, 0, 287,
	0, 0, 0, 0, 0, 0, 287, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2006, 0, 0, 0, 0, 0, 0, 0,
	0, 1952, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2003, 1972, 0, 0, 0, 0, 0, 0, 0,
	0, 1969, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2931,
	2931, 2931, 1986, 1986, 0, 0, 1986, 3563, 3563, 1986,
	1979, 0, 0, 1986, 0, 0, 2100, 4003, 0, 0,
	1986, 0, 0, 0, 3601, 0, 0, 0, 0, 0,
	0, 0, 0, 1986, 1974, 0, 0, 0, 0, 1975,
	1976, 1977, 1978, 0, 0, 0, 0, 0, 0, 1958,
	0, 0, 0, 0, 0, 0, 1986, 1986, 1986, 1986,
	1986, 0, 0, 0, 0, 0, 1986, 0, 1986, 0,
	0, 3563, 3563, 3563, 3563, 3563, 3563, 3563, 3563, 3563,
	3563, 3563, 3563, 3563, 3563, 3563, 3563, 3563, 3563, 3563,
	3563, 0, 0, 0, 3563, 0, 2005, 1986, 1986, 0,
	0, 0, 1980, 1982, 0, 0, 0, 0, 0, 1986,
	0, 0, 0, 0, 0, 0, 0, 0, 1986, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1967, 1968,
	0, 0, 0, 0, 1181, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1181, 1950, 1951, 0,
	287, 0, 0, 0, 0, 0, 0, 907, 0, 0,
	0, 1973, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1981, 0, 0, 0, 0, 0, 0, 0, 1953,
	0, 0, 0, 1986, 0, 0, 0, 3739, 1970, 1966,
	0, 1963, 1961, 1962, 1954, 1955, 1956, 1957, 1959, 1960,
	0, 1986, 0, 0, 0, 0, 2006, 0, 0, 0,
	0, 0, 287, 0, 0, 1952, 287, 0, 0, 0,
	0, 287, 0, 0, 0, 0, 1972, 287, 0, 0,
	0, 0, 1986, 0, 0, 1969, 0, 0, 0, 0,
	0, 0, 2003, 287, 0, 287, 3796, 3797, 0, 0,
	0, 287, 0, 0, 0, 0, 1986, 1986, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4002, 0, 0, 0, 0, 0, 287, 0, 0,
	287, 1979, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1975, 1976, 1977, 1978, 0, 0, 0,
	0, 0, 287, 1958, 0, 1974, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 907, 287, 0, 287, 0,
	287, 0, 287, 0, 287, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1986, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1980, 1982, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2005, 0, 287,
	287, 287, 287, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1967, 1968, 0, 0, 0, 0, 1986, 1986,
	0, 0, 0, 1986, 1986, 0, 0, 1986, 1986, 0,
	0, 0, 1986, 78, 0, 0, 1986, 0, 0, 0,
	0, 1986, 0, 0, 0, 1973, 0, 0, 0, 0,
	0, 79, 0, 0, 0, 0, 2921, 0, 0, 0,
	0, 0, 1358, 0, 0, 0, 0, 0, 84, 0,
	0, 0, 0, 1358, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1970,
	1966, 0, 1963, 1961, 1962, 1954, 1955, 1956, 1957, 1959,
	1960, 0, 0, 0, 0, 0, 0, 0, 0, 92,
	0, 0, 0, 0, 1358, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2670, 0, 2003, 0, 0, 0,
	0, 4000, 4001, 0, 0, 4004, 0, 0, 2921, 4007,
	0, 0, 0, 0, 0, 0, 0, 0, 4011, 0,
	976, 0, 0, 0, 0, 0, 0, 4018, 0, 1358,
	0, 0, 3601, 51, 0, 114, 1358, 0, 0, 0,
	0, 98, 111, 0, 0, 0, 0, 4031, 0, 0,
	0, 0, 1358, 0, 0, 1979, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1986, 4054, 4055, 0,
	4056, 4057, 4058, 0, 0, 0, 0, 0, 0, 1974,
	0, 0, 0, 0, 0, 0, 1354, 0, 4064, 0,
	0, 0, 4066, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1354, 0, 0, 99, 0, 0, 0, 0,
	0, 0, 1358, 0, 0, 0, 287, 0, 0, 0,
	0, 0, 0, 0, 0, 4095, 4096, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 287, 0, 0, 0,
	0, 2005, 0, 4107, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4116, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1986, 1986, 1986, 0, 0, 287, 0, 0, 907, 0,
	0, 1986, 1986, 3563, 2921, 0, 0, 0, 0, 0,
	1986, 0, 287, 1986, 0, 287, 0, 0, 0, 287,
	0, 287, 0, 0, 0, 0, 0, 0, 287, 287,
	0, 0, 0, 0, 0, 0, 0, 0, 287, 0,
	0, 0, 0, 1970, 1966, 0, 1963, 1961, 1962, 1954,
	1955, 1956, 1957, 1959, 1960, 4181, 3563, 2921, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 103,
	0, 0, 0, 1986, 0, 0, 0, 0, 0, 0,
	0, 1986, 2921, 4199, 0, 0, 0, 0, 0, 1986,
	0, 0, 0, 0, 0, 0, 872, 0, 0, 0,
	1986, 0, 1986, 0, 0, 0, 0, 287, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4230, 0, 0,
	0, 287, 883, 0, 0, 0, 0, 0, 198, 0,
	106, 0, 0, 110, 0, 287, 0, 0, 0, 0,
	0, 0, 885, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4254, 4255, 0, 0,
	252, 0, 0, 0, 0, 884, 0, 0, 977, 0,
	0, 0, 0, 158, 287, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 287, 287, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3563, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1358, 254, 1358, 0, 0, 0, 0, 0, 877, 0,
	0, 0, 0, 907, 0, 893, 0, 1358, 1986, 3563,
	0, 0, 1986, 0, 0, 0, 0, 0, 163, 882,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2185, 3563, 0, 0, 204, 287, 0, 0, 0, 0,
	0, 0, 253, 287, 0, 1950, 1951, 0, 1983, 1984,
	1985, 1994, 1995, 1996, 0, 2100, 0, 246, 0, 0,
	0, 0, 0, 0, 4358, 0, 247, 0, 1987, 1981,
	199, 0, 881, 0, 0, 203, 0, 1953, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2000, 0, 811,
	0, 0, 0, 0, 0, 0, 1763, 0, 287, 0,
	0, 0, 0, 0, 2006, 0, 0, 0, 0, 0,
	0, 0, 0, 1952, 0, 0, 879, 0, 287, 0,
	287, 0, 0, 0, 1972, 0, 0, 0, 0, 0,
	0, 287, 0, 1969, 1358, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4406, 4407, 0, 0, 0, 0,
	4411, 4412, 0, 0, 0, 4415, 4416, 0, 0, 0,
	0, 0, 0, 4420, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4424, 892, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 287, 287, 287, 287, 0,
	4429, 0, 0, 0, 0, 287, 0, 0, 0, 0,
	287, 0, 0, 1986, 0, 0, 0, 0, 0, 0,
	0, 1975, 1976, 1977, 1978, 0, 0, 0, 0, 0,
	0, 1958, 0, 0, 0, 0, 0, 0, 1986, 0,
	0, 287, 0, 0, 0, 0, 0, 0, 0, 287,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 874, 0, 0,
	1950, 1951, 0, 0, 1991, 0, 0, 2001, 0, 0,
	0, 0, 0, 0, 1980, 1982, 0, 0, 0, 0,
	0, 0, 0, 0, 1981, 0, 0, 0, 0, 0,
	878, 1997, 1953, 1998, 0, 0, 0, 0, 0, 0,
	1967, 1968, 0, 1358, 1358, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1358, 0, 0, 1989, 2006,
	0, 0, 0, 1347, 0, 0, 0, 0, 1952, 0,
	810, 1181, 0, 1973, 0, 0, 0, 0, 0, 1972,
	0, 0, 0, 0, 0, 0, 888, 0, 1969, 0,
	0, 0, 876, 0, 0, 0, 0, 0, 0, 0,
	1986, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 283, 283, 743, 0, 0, 0, 0, 0, 0,
	0, 0, 1999, 0, 0, 0, 0, 0, 0, 0,
	2892, 2893, 2894, 2895, 2888, 2889, 2890, 2891, 0, 4584,
	0, 0, 873, 1988, 3457, 0, 0, 0, 886, 0,
	0, 1358, 0, 1358, 2003, 1358, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1975, 1976, 1977, 1978,
	0, 880, 0, 1358, 1358, 0, 1958, 1219, 116, 0,
	0, 0, 0, 0, 0, 0, 812, 1358, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 875, 0, 1358,
	0, 0, 1358, 1358, 1358, 0, 0, 0, 0, 0,
	0, 0, 0, 1979, 2868, 2869, 2870, 2871, 0, 0,
	0, 0, 890, 891, 0, 887, 0, 0, 0, 1980,
	1982, 0, 0, 0, 0, 0, 0, 1974, 2880, 2881,
	2882, 2883, 2876, 2877, 2878, 2879, 2884, 2885, 2886, 2887,
	0, 0, 1354, 0, 0, 1967, 1968, 0, 0, 0,
	0, 0, 0, 0, 0, 1992, 0, 0, 1354, 0,
	0, 0, 0, 0, 0, 0, 116, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1973, 0,
	4698, 4699, 4700, 0, 0, 0, 0, 0, 2122, 2005,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	287, 0, 0, 2670, 0, 0, 4709, 4710, 0, 0,
	0, 2864, 2865, 2866, 2867, 2872, 2873, 2874, 2875, 0,
	0, 0, 0, 0, 4718, 4721, 0, 0, 2185, 2185,
	1358, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 287, 0, 0, 0, 287, 287, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1153, 2003,
	0, 0, 0, 0, 0, 1990, 0, 0, 0, 0,
	1174, 0, 0, 0, 0, 0, 0, 1964, 1965, 1971,
	1993, 1970, 1966, 287, 1963, 1961, 1962, 1954, 1955, 1956,
	1957, 1959, 1960, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4016, 0, 0, 0, 0, 0, 0, 0,
	0, 4781, 0, 0, 0, 0, 0, 0, 1979, 0,
	4789, 0, 1341, 1358, 0, 287, 287, 0, 0, 287,
	0, 0, 0, 0, 0, 4797, 2122, 0, 1181, 0,
	0, 0, 1974, 0, 0, 0, 0, 0, 0, 0,
	287, 0, 0, 0, 4808, 0, 0, 4810, 1950, 1951,
	0, 1983, 1984, 1985, 1994, 1995, 1996, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1987, 1981, 0, 0, 0, 0, 1358, 0, 0,
	1953, 0, 0, 0, 1358, 0, 0, 0, 0, 0,
	2000, 0, 0, 1358, 2005, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2006, 0, 0,
	1358, 0, 0, 0, 0, 0, 1952, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1972, 0, 0,
	0, 0, 0, 0, 0, 0, 1969, 0, 287, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 907, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 287, 0, 0, 287,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1970, 1966, 287, 1963,
	1961, 1962, 1954, 1955, 1956, 1957, 1959, 1960, 1354, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1975, 1976, 1977, 1978, 0, 0,
	0, 0, 0, 0, 1958, 4936, 0, 0, 0, 4940,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1358, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1991, 0, 0,
	2001, 0, 0, 0, 0, 0, 0, 1980, 1982, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 287, 1997, 287, 1998, 0, 0, 0,
	0, 0, 0, 1967, 1968, 2185, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1989, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 287, 0, 0, 1973, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1358, 0, 0, 0,
	0, 0, 0, 0, 2670, 0, 0, 0, 0, 0,
	0, 0, 1358, 4721, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1999, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1988, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2003, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1181, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1411, 0, 1411, 1411, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1358, 0, 0, 0, 0, 0, 1979, 0, 0, 0,
	0, 0, 0, 1358, 0, 1358, 0, 0, 0, 1354,
	1354, 1358, 0, 0, 5131, 5131, 5131, 0, 0, 0,
	1974, 0, 1358, 1358, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1512, 0, 0,
	0, 0, 0, 1622, 0, 0, 0, 0, 1992, 0,
	0, 0, 5156, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	907, 0, 2005, 0, 0, 116, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	5131, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1769, 1770, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1990, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1964, 1965, 1971, 1993, 1970, 1966, 0, 1963, 1961, 1962,
	1954, 1955, 1956, 1957, 1959, 1960, 0, 0, 0, 0,
	0, 0, 0, 0, 116, 3520, 116, 0, 116, 0,
	0, 0, 1950, 1951, 0, 1983, 1984, 1985, 1994, 1995,
	1996, 0, 0, 0, 0, 287, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1987, 1981, 0, 0, 0,
	0, 0, 0, 0, 1953, 0, 0, 0, 0, 0,
	5131, 5288, 0, 0, 2000, 0, 287, 0, 0, 1174,
	116, 116, 1891, 0, 0, 0, 0, 0, 0, 0,
	0, 2006, 0, 0, 0, 287, 116, 0, 116, 1243,
	1952, 0, 0, 0, 0, 0, 287, 0, 0, 0,
	0, 1972, 116, 0, 116, 0, 287, 0, 0, 0,
	1969, 0, 0, 0, 0, 0, 0, 0, 287, 0,
	0, 0, 0, 287, 0, 0, 0, 0, 287, 0,
	0, 0, 0, 0, 0, 0, 0, 289, 289, 289,
	0, 0, 0, 0, 0, 0, 0, 0, 1354, 0,
	0, 0, 0, 0, 0, 1950, 1951, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 289,
	116, 0, 0, 0, 0, 0, 0, 0, 0, 1981,
	0, 0, 0, 0, 0, 0, 0, 1953, 1975, 1976,
	1977, 1978, 287, 0, 0, 0, 289, 0, 1958, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2006, 0, 0, 0, 0, 0,
	0, 0, 0, 1952, 0, 0, 1950, 1951, 0, 0,
	0, 0, 0, 0, 1972, 0, 0, 0, 0, 0,
	0, 1991, 0, 1969, 2001, 0, 0, 0, 0, 0,
	1981, 1980, 1982, 1358, 1358, 0, 0, 0, 1953, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1997, 1358,
	1998, 0, 0, 0, 1153, 0, 0, 1967, 1968, 0,
	0, 0, 0, 0, 0, 2006, 0, 1358, 0, 0,
	0, 0, 0, 0, 1952, 1989, 0, 2020, 0, 1358,
	0, 0, 1358, 0, 0, 1972, 0, 0, 0, 0,
	1973, 0, 0, 0, 1969, 2026, 0, 0, 0, 2032,
	0, 1975, 1976, 1977, 1978, 2185, 0, 0, 0, 1358,
	0, 1958, 2138, 0, 0, 0, 1354, 0, 0, 0,
	0, 0, 0, 0, 1354, 0, 0, 0, 2148, 0,
	1622, 0, 0, 0, 0, 0, 0, 0, 2122, 1999,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3450, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1988, 0, 0, 0, 1980, 1982, 0, 0, 0, 0,
	0, 2003, 1975, 1976, 1977, 1978, 1411, 0, 0, 0,
	287, 0, 1958, 1622, 0, 0, 2185, 0, 0, 0,
	1967, 1968, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2122, 0, 2122,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2120, 0, 2123, 1973, 116, 0, 0, 0, 0, 0,
	1979, 287, 0, 0, 0, 1980, 1982, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 287, 0, 0,
	287, 0, 0, 0, 1974, 0, 0, 0, 0, 0,
	0, 1967, 1968, 0, 0, 0, 0, 0, 0, 0,
	1358, 0, 0, 0, 0, 0, 0, 287, 0, 0,
	0, 0, 1992, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1973, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2003, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2005, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1358, 0, 0, 0, 0, 0, 0, 0, 0, 287,
	0, 0, 0, 0, 1358, 0, 1358, 0, 0, 287,
	1358, 0, 0, 0, 0, 0, 0, 0, 1358, 0,
	0, 0, 0, 1979, 0, 0, 0, 0, 0, 0,
	0, 1358, 0, 0, 0, 2003, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1974, 0, 0,
	0, 0, 1990, 0, 0, 0, 0, 0, 0, 1358,
	0, 0, 0, 0, 1964, 1965, 1971, 1993, 1970, 1966,
	0, 1963, 1961, 1962, 1954, 1955, 1956, 1957, 1959, 1960,
	0, 1358, 0, 0, 0, 0, 0, 0, 0, 3519,
	0, 0, 0, 1358, 1979, 1358, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2005,
	0, 0, 0, 0, 0, 0, 0, 0, 1974, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2462,
	0, 0, 0, 2469, 0, 0, 0, 0, 0, 0,
	0, 0, 1358, 0, 2481, 1358, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2493, 0, 2493, 0, 0, 0, 0, 0, 2500, 0,
	2005, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 287, 0, 0, 0, 0,
	0, 1970, 1966, 0, 1963, 1961, 1962, 1954, 1955, 1956,
	1957, 1959, 1960, 0, 0, 2185, 0, 0, 0, 0,
	0, 0, 0, 0, 2469, 0, 796, 2529, 0, 0,
	0, 0, 0, 0, 1358, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 779, 0, 2550,
	0, 1358, 780, 0, 0, 0, 0, 0, 0, 0,
	0, 2185, 2185, 2566, 0, 2568, 0, 2570, 287, 2572,
	0, 2573, 1970, 1966, 0, 1963, 1961, 1962, 1954, 1955,
	1956, 1957, 1959, 1960, 0, 0, 0, 0, 0, 0,
	2185, 2185, 0, 781, 0, 0, 0, 0, 2122, 0,
	0, 1174, 0, 1174, 782, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2602, 2603, 2604, 0,
	0, 0, 0, 2185, 0, 0, 783, 289, 0, 289,
	289, 0, 0, 289, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 802, 0,
	1358, 1358, 0, 0, 0, 0, 0, 0, 0, 0,
	287, 287, 0, 0, 0, 0, 0, 0, 0, 784,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1950, 1951, 1358, 1983, 1984, 1985,
	1994, 1995, 1996, 0, 785, 0, 0, 116, 0, 0,
	0, 0, 0, 289, 1521, 289, 289, 1987, 1981, 289,
	289, 0, 0, 0, 0, 1521, 1953, 786, 0, 0,
	0, 0, 787, 0, 0, 0, 2000, 0, 0, 0,
	0, 289, 0, 289, 0, 0, 0, 0, 0, 811,
	0, 0, 0, 2006, 2122, 0, 0, 0, 0, 0,
	0, 0, 1952, 0, 0, 0, 1521, 0, 0, 2122,
	0, 0, 0, 1972, 0, 0, 801, 0, 0, 0,
	0, 0, 1969, 0, 0, 0, 0, 0, 1153, 0,
	0, 1153, 1153, 289, 289, 287, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1521, 0, 0, 0, 0, 0, 0, 1521, 289,
	289, 0, 0, 0, 0, 0, 2122, 2122, 0, 0,
	0, 0, 0, 0, 1521, 798, 0, 0, 0, 0,
	0, 0, 0, 0, 2122, 0, 287, 2122, 0, 2740,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1975, 1976, 1977, 1978, 0, 0, 0, 0, 0, 1174,
	1958, 0, 0, 2990, 0, 0, 0, 0, 0, 2026,
	0, 1358, 1358, 2026, 1358, 0, 0, 0, 1358, 0,
	0, 1358, 0, 0, 1521, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 808, 1991, 789, 0, 2001, 0, 0, 0,
	0, 2185, 0, 1980, 1982, 0, 0, 0, 289, 0,
	0, 0, 0, 0, 0, 287, 0, 0, 0, 0,
	1997, 0, 1998, 0, 809, 0, 790, 0, 0, 1967,
	1968, 0, 0, 0, 289, 0, 0, 1341, 0, 3043,
	0, 0, 1411, 0, 0, 1358, 1411, 1989, 1411, 0,
	0, 0, 0, 2123, 0, 0, 0, 0, 0, 1358,
	0, 0, 1973, 0, 0, 2481, 0, 0, 0, 1358,
	810, 0, 287, 0, 1358, 1358, 1358, 0, 791, 0,
	0, 0, 0, 806, 807, 0, 804, 0, 0, 0,
	0, 0, 799, 116, 0, 792, 0, 1358, 0, 1358,
	0, 0, 0, 0, 1358, 0, 1358, 0, 0, 0,
	0, 1999, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1988, 0, 0, 0, 0, 1358, 0, 0,
	793, 0, 800, 2003, 0, 293, 0, 0, 2185, 0,
	0, 794, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 795, 0, 0, 0,
	0, 803, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 812, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 797, 0, 0,
	0, 1622, 1979, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2469, 2469, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 898, 1974, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2122, 0, 2122, 1358, 0, 0,
	0, 0, 898, 0, 1992, 1358, 0, 0, 0, 1358,
	1358, 0, 1358, 0, 0, 0, 0, 0, 289, 1358,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1521,
	1358, 1358, 3284, 0, 289, 289, 289, 0, 2005, 0,
	2481, 0, 0, 0, 289, 0, 0, 0, 0, 0,
	0, 1358, 0, 289, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 289, 0, 0, 0, 0, 0, 1358, 289,
	1358, 0, 0, 0, 0, 3355, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1990, 3367, 0, 3370, 0, 116,
	0, 0, 116, 0, 116, 1358, 1964, 1965, 1971, 1993,
	1970, 1966, 0, 1963, 1961, 1962, 1954, 1955, 1956, 1957,
	1959, 1960, 0, 0, 0, 0, 0, 0, 1358, 0,
	0, 3516, 0, 0, 0, 0, 1521, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	116, 0, 0, 116, 0, 796, 0, 0, 0, 116,
	0, 0, 3409, 1622, 3411, 1622, 0, 0, 0, 0,
	1358, 1358, 3418, 0, 0, 0, 779, 0, 0, 0,
	0, 780, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1411, 1358,
	0, 0, 0, 0, 1358, 0, 3447, 0, 0, 0,
	0, 0, 781, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 782, 0, 0, 0, 116, 0, 0,
	1358, 1358, 1358, 1358, 1358, 1358, 1358, 0, 0, 0,
	0, 0, 0, 0, 0, 783, 0, 0, 0, 0,
	0, 0, 0, 0, 1358, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 802, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1358, 0, 0, 0, 784, 0,
	0, 0, 0, 289, 0, 1521, 1521, 0, 0, 0,
	289, 0, 0, 0, 0, 2185, 0, 1521, 0, 0,
	0, 0, 0, 785, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1358, 0, 1358,
	0, 0, 0, 0, 0, 0, 786, 0, 0, 0,
	0, 787, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 289, 0, 0, 811, 289,
	0, 0, 0, 0, 289, 0, 0, 0, 0, 2740,
	289, 0, 0, 0, 0, 0, 1358, 0, 0, 0,
	0, 0, 0, 0, 0, 801, 289, 0, 289, 0,
	2026, 0, 0, 0, 289, 0, 0, 0, 0, 0,
	0, 0, 0, 1521, 0, 1521, 0, 1521, 0, 0,
	0, 2185, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1521, 1521, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1521,
	289, 0, 0, 289, 798, 0, 0, 0, 0, 0,
	1358, 1521, 0, 0, 1521, 1521, 1521, 0, 0, 0,
	0, 0, 0, 0, 0, 289, 0, 0, 1358, 1358,
	1358, 0, 0, 0, 1235, 0, 0, 0, 289, 289,
	0, 289, 0, 289, 0, 289, 0, 289, 0, 1358,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1358, 0, 0, 1358, 0, 0,
	0, 0, 0, 789, 0, 0, 0, 0, 0, 0,
	0, 0, 289, 289, 289, 289, 0, 3649, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 809, 0, 790, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2185, 0, 0, 0, 0, 0, 0, 0, 0,
	1411, 0, 0, 0, 1622, 1622, 0, 0, 0, 0,
	0, 0, 1521, 1341, 0, 0, 0, 0, 0, 810,
	0, 0, 0, 0, 0, 0, 0, 791, 0, 1341,
	0, 0, 806, 807, 0, 804, 0, 0, 0, 0,
	3702, 799, 0, 0, 792, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1358, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1358, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3758, 3760, 0, 0, 2481, 0, 0, 793,
	0, 800, 0, 0, 0, 0, 0, 0, 0, 0,
	794, 0, 0, 0, 0, 1521, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 795, 0, 0, 0, 0,
	803, 0, 0, 0, 0, 0, 0, 1358, 1358, 0,
	0, 0, 0, 0, 0, 812, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1358, 797, 0, 1358, 0,
	0, 0, 1358, 0, 0, 0, 0, 0, 0, 0,
	1518, 0, 1358, 0, 0, 0, 0, 0, 0, 0,
	0, 1640, 0, 0, 0, 0, 1521, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 116, 116,
	0, 116, 0, 0, 0, 0, 0, 0, 0, 289,
	0, 0, 1521, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1640, 0, 0, 0, 0, 0, 0, 289,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3881, 0, 0, 2469, 0, 0, 0,
	0, 0, 0, 0, 0, 116, 116, 0, 116, 0,
	1358, 0, 0, 0, 0, 0, 0, 1640, 0, 0,
	0, 0, 0, 0, 1640, 0, 0, 0, 289, 0,
	0, 289, 0, 0, 0, 0, 0, 0, 0, 0,
	1640, 0, 0, 0, 0, 289, 0, 0, 289, 0,
	0, 0, 289, 0, 289, 0, 0, 0, 0, 0,
	0, 289, 289, 0, 0, 0, 0, 927, 0, 0,
	0, 289, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 929, 0,
	0, 0, 0, 930, 0, 0, 0, 0, 0, 0,
	1640, 0, 0, 0, 0, 0, 0, 0, 1521, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3984, 0, 1622, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 931, 0, 948, 0, 0, 1341,
	289, 0, 1174, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 289, 0, 116, 116, 0, 0,
	3998, 0, 932, 0, 0, 0, 0, 933, 289, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 956,
	0, 0, 0, 0, 0, 0, 934, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 289, 1521, 0,
	954, 0, 0, 0, 0, 0, 0, 0, 0, 289,
	289, 0, 0, 0, 1521, 1358, 0, 1358, 0, 0,
	0, 0, 0, 0, 0, 928, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 289, 0, 935, 0,
	0, 0, 0, 936, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 958, 0, 0, 0, 0,
	811, 0, 0, 0, 0, 0, 0, 0, 289, 0,
	0, 0, 0, 0, 0, 0, 289, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1950, 1951, 0, 1983,
	1984, 1985, 1994, 1995, 1996, 0, 0, 0, 0, 0,
	0, 0, 1521, 0, 0, 0, 0, 0, 0, 1987,
	1981, 0, 0, 0, 0, 1521, 0, 1521, 1953, 0,
	0, 0, 0, 1521, 0, 0, 0, 0, 2000, 0,
	0, 289, 0, 0, 1521, 1521, 957, 0, 0, 0,
	0, 0, 0, 0, 0, 2006, 952, 0, 0, 0,
	0, 289, 0, 289, 1952, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 289, 1972, 0, 0, 0, 0,
	0, 0, 0, 0, 1969, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1518, 0, 0, 0, 0,
	0, 0, 116, 0, 0, 0, 0, 0, 0, 0,
	898, 0, 0, 0, 0, 0, 0, 0, 0, 898,
	1341, 1341, 0, 0, 937, 0, 0, 0, 289, 289,
	289, 289, 0, 0, 0, 939, 0, 0, 289, 0,
	0, 0, 0, 289, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1975, 1976, 1977, 1978, 0, 940, 0, 0,
	0, 0, 1958, 0, 289, 0, 0, 0, 0, 0,
	0, 0, 289, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 810, 0, 0, 0, 1991, 0, 0, 2001, 1519,
	0, 0, 1518, 0, 926, 1980, 1982, 949, 0, 0,
	1641, 0, 0, 0, 0, 0, 941, 0, 0, 0,
	0, 0, 1997, 2481, 1998, 0, 0, 0, 0, 0,
	0, 1967, 1968, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2481, 947, 0, 0, 0, 0, 0, 1989,
	0, 1641, 0, 4313, 0, 0, 0, 0, 0, 0,
	0, 942, 0, 4323, 1973, 943, 961, 0, 960, 0,
	0, 0, 944, 0, 0, 0, 0, 0, 0, 0,
	2481, 0, 0, 0, 0, 4340, 0, 945, 0, 0,
	0, 0, 953, 0, 0, 0, 1641, 0, 962, 0,
	959, 0, 0, 1641, 0, 0, 0, 812, 0, 0,
	0, 0, 0, 1999, 0, 0, 0, 0, 0, 1641,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1988, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2003, 0, 0, 0, 4386,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1640, 1640, 0, 0, 0, 0, 0, 0, 1641,
	0, 0, 0, 1518, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 116, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1979, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1341,
	0, 0, 0, 0, 0, 0, 0, 0, 1974, 0,
	0, 0, 0, 0, 0, 0, 1521, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1992, 0, 0, 0,
	116, 0, 0, 0, 0, 0, 0, 0, 0, 1521,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1640,
	0, 1640, 0, 1640, 1521, 0, 0, 0, 0, 0,
	2005, 0, 0, 289, 0, 0, 0, 0, 0, 0,
	0, 1640, 1640, 0, 0, 0, 0, 0, 0, 0,
	0, 1521, 0, 0, 0, 1640, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1640, 0, 0,
	1640, 1640, 1640, 0, 0, 0, 289, 0, 0, 0,
	289, 289, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 898, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1990, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 289, 0, 1964, 1965,
	1971, 1993, 1970, 1966, 0, 1963, 1961, 1962, 1954, 1955,
	1956, 1957, 1959, 1960, 0, 0, 0, 0, 0, 0,
	0, 116, 0, 3515, 0, 0, 0, 1341, 4560, 0,
	0, 0, 0, 0, 0, 1341, 0, 0, 289, 289,
	0, 0, 289, 0, 2481, 0, 0, 0, 0, 289,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 289, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1518, 0,
	0, 0, 1521, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1519, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2481, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4655, 0, 0, 0,
	0, 0, 1521, 0, 0, 0, 0, 0, 0, 0,
	0, 289, 0, 0, 0, 0, 1521, 0, 1521, 0,
	0, 0, 1521, 0, 116, 0, 0, 0, 0, 289,
	1521, 1518, 0, 0, 0, 0, 0, 0, 0, 289,
	0, 0, 289, 1521, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 289, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1519, 0, 0, 0, 0, 0, 116, 0, 0,
	0, 0, 0, 1521, 0, 0, 0, 0, 0, 116,
	0, 0, 1518, 0, 0, 1521, 0, 1521, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 116, 0, 0, 0, 0, 0, 1518, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1521, 0, 289, 1521, 289, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4766, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 289, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1521, 0, 0, 0,
	1641, 1641, 0, 0, 0, 2481, 0, 0, 0, 0,
	0, 0, 1519, 1521, 0, 0, 0, 0, 0, 116,
	0, 0, 0, 0, 1518, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4895, 1622, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1641, 0,
	1641, 0, 1641, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1518, 0, 0, 0, 0, 0,
	1641, 1641, 0, 0, 0, 0, 0, 0, 0, 0,
	1640, 0, 0, 0, 1641, 0, 0, 0, 1521, 0,
	0, 0, 0, 0, 0, 0, 1641, 0, 0, 1641,
	1641, 1641, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 289, 0, 0, 0, 2740, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1640, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1640, 0, 1640, 0, 0, 0, 0, 0, 1640,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1640, 1640, 0, 5013, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1519, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 289, 0,
	0, 0, 0, 0, 0, 0, 0, 116, 0, 0,
	0, 0, 0, 1521, 1521, 0, 1521, 0, 0, 0,
	1521, 0, 0, 1521, 0, 0, 0, 0, 0, 289,
	0, 0, 0, 0, 0, 0, 116, 0, 0, 0,
	0, 0, 5068, 0, 0, 0, 0, 0, 289, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 289,
	0, 0, 116, 0, 0, 0, 0, 0, 0, 289,
	1519, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 289, 0, 0, 0, 0, 289, 0, 0, 0,
	0, 289, 0, 0, 0, 0, 0, 1521, 0, 5111,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1521, 0, 0, 0, 0, 1521, 1521, 1521, 1950,
	1951, 0, 1983, 1984, 1985, 1994, 1995, 1996, 0, 0,
	0, 1519, 0, 0, 0, 0, 0, 0, 0, 1521,
	0, 1521, 1987, 1981, 0, 289, 1521, 0, 1521, 0,
	0, 1953, 0, 0, 0, 0, 0, 1519, 0, 0,
	0, 2000, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2006, 1521,
	0, 0, 0, 0, 0, 0, 0, 1952, 0, 0,
	0, 0, 0, 116, 0, 0, 116, 0, 1972, 0,
	0, 0, 0, 0, 0, 0, 0, 1969, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1975, 1976, 1977, 1978, 0,
	0, 0, 0, 0, 0, 1958, 0, 0, 0, 0,
	0, 1521, 1521, 1519, 1521, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1521, 1521, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1991, 0,
	0, 2001, 0, 1521, 0, 0, 0, 0, 1980, 1982,
	0, 0, 1518, 289, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1997, 0, 1998, 0, 0,
	0, 0, 0, 0, 1967, 1968, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1518, 0, 0, 0, 0,
	0, 0, 1989, 0, 0, 0, 0, 0, 0, 0,
	1518, 0, 0, 1519, 289, 0, 0, 1973, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1521, 0, 1641,
	289, 0, 0, 289, 0, 0, 0, 1518, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1521, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	289, 0, 0, 0, 0, 0, 1999, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1988, 0, 0,
	0, 0, 1521, 1521, 0, 0, 0, 0, 2003, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 289, 0, 0, 0, 0, 1641, 0, 0,
	0, 1521, 289, 0, 0, 0, 1521, 0, 0, 0,
	1641, 0, 1641, 0, 0, 0, 0, 0, 1641, 0,
	0, 0, 0, 0, 0, 0, 0, 1979, 0, 1641,
	1641, 0, 1521, 1521, 1521, 1521, 1521, 1521, 1521, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1974, 0, 0, 0, 0, 1521, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1518, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1992,
	0, 0, 0, 0, 0, 0, 1521, 0, 0, 0,
	0, 1950, 1951, 0, 1983, 1984, 1985, 1994, 1995, 1996,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2005, 1987, 1981, 0, 0, 0, 0,
	0, 0, 0, 1953, 0, 0, 0, 0, 1640, 1521,
	0, 1521, 0, 2000, 0, 0, 0, 0, 0, 0,
	0, 0, 1640, 0, 1640, 0, 0, 0, 1518, 0,
	2006, 0, 0, 0, 0, 898, 1640, 0, 0, 1952,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1640,
	1972, 0, 0, 0, 0, 0, 0, 0, 1521, 1969,
	0, 0, 0, 0, 0, 0, 0, 0, 289, 1990,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1964, 1965, 1971, 1993, 1970, 1966, 0, 1963, 1961,
	1962, 1954, 1955, 1956, 1957, 1959, 1960, 0, 0, 1640,
	0, 0, 0, 0, 0, 0, 3514, 0, 0, 0,
	0, 1640, 0, 1640, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1521, 0, 0, 0, 0, 1975, 1976, 1977,
	1978, 289, 0, 0, 0, 0, 0, 1958, 0, 0,
	1521, 1521, 1521, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1518, 0, 0, 1518, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1991, 0, 0, 2001, 0, 0, 1521, 0, 0, 1521,
	1980, 1982, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1997, 0, 1998,
	0, 0, 0, 0, 0, 0, 1967, 1968, 0, 0,
	0, 0, 0, 289, 289, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1989, 0, 0, 0, 0, 0,
	0, 0, 1518, 0, 0, 0, 0, 0, 0, 1973,
	1950, 1951, 0, 1983, 1984, 1985, 1994, 1995, 1996, 1518,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1987, 1981, 0, 0, 0, 0, 0,
	0, 0, 1953, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2000, 0, 0, 0, 0, 0, 1999, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2006,
	0, 1519, 0, 0, 0, 0, 0, 0, 1952, 1988,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1972,
	2003, 0, 0, 0, 0, 0, 0, 0, 1969, 0,
	0, 0, 0, 0, 1519, 0, 0, 0, 289, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1519,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1519, 0, 0, 1979,
	0, 0, 0, 0, 1518, 0, 0, 0, 0, 289,
	0, 0, 0, 0, 1521, 0, 0, 0, 0, 0,
	0, 0, 0, 1974, 1521, 0, 1975, 1976, 1977, 1978,
	0, 0, 0, 0, 0, 0, 1958, 0, 0, 898,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1992, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1991,
	0, 0, 2001, 0, 0, 2005, 0, 0, 0, 1980,
	1982, 0, 0, 0, 0, 0, 0, 0, 289, 0,
	0, 0, 0, 0, 0, 0, 1997, 0, 1998, 0,
	0, 0, 1521, 0, 0, 1967, 1968, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1989, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1973, 0,
	0, 0, 0, 0, 0, 289, 0, 1519, 0, 0,
	0, 1990, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1964, 1965, 1971, 1993, 1970, 1966, 0,
	1963, 1961, 1962, 1954, 1955, 1956, 1957, 1959, 1960, 1640,
	1640, 0, 1640, 0, 0, 0, 1640, 1999, 2799, 1640,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1641, 1988, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2003,
	0, 1641, 0, 1641, 0, 0, 0, 1519, 0, 0,
	0, 0, 0, 0, 0, 1641, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1641, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1640, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1979, 0,
	0, 0, 0, 0, 0, 0, 0, 1640, 0, 0,
	0, 0, 1640, 1640, 1640, 0, 0, 0, 1641, 0,
	0, 0, 1974, 0, 0, 0, 0, 0, 0, 0,
	1641, 0, 1641, 0, 0, 1640, 0, 1640, 0, 0,
	0, 0, 1640, 0, 1518, 0, 0, 0, 0, 0,
	1992, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1518, 0, 0, 0, 0,
	0, 0, 0, 0, 2005, 0, 0, 0, 0, 1519,
	0, 0, 1519, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1990, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1519, 1964, 1965, 1971, 1993, 1970, 1966, 0, 1963,
	1961, 1962, 1954, 1955, 1956, 1957, 1959, 1960, 1519, 0,
	0, 0, 0, 5055, 0, 0, 0, 1518, 1518, 0,
	1518, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1640, 1640,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1518,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1950, 1951, 0, 1983,
	1984, 1985, 1994, 1995, 1996, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1987,
	1981, 0, 0, 0, 0, 0, 0, 0, 1953, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2000, 0,
	0, 0, 0, 1518, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1519, 0, 2006, 0, 0, 0, 0,
	0, 0, 0, 0, 1952, 0, 1518, 0, 0, 0,
	0, 0, 0, 0, 0, 1972, 0, 0, 0, 0,
	0, 0, 0, 0, 1969, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1640, 1640,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1518, 0, 0,
	0, 0, 1640, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1975, 1976, 1977, 1978, 0, 0, 0, 0,
	0, 0, 1958, 0, 0, 0, 0, 0, 1640, 1640,
	1640, 1640, 1640, 1640, 1640, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1518, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1991, 0, 0, 2001, 0,
	0, 0, 0, 0, 0, 1980, 1982, 0, 0, 0,
	0, 0, 1518, 0, 0, 0, 0, 0, 1641, 1641,
	0, 1641, 1997, 0, 1998, 1641, 0, 0, 1641, 0,
	0, 1967, 1968, 0, 0, 0, 0, 0, 0, 1950,
	1951, 0, 1983, 1984, 1985, 1994, 1995, 1996, 0, 1989,
	0, 0, 0, 0, 0, 1518, 0, 1640, 0, 0,
	0, 0, 1987, 1981, 1973, 0, 0, 0, 0, 0,
	0, 1953, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2000, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2006, 0,
	0, 0, 1641, 0, 1518, 0, 0, 1952, 0, 0,
	0, 0, 0, 1999, 0, 0, 0, 0, 1972, 0,
	0, 0, 0, 0, 0, 0, 1641, 1969, 0, 0,
	0, 1641, 1641, 1641, 1988, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2003, 0, 0, 0, 0,
	0, 0, 0, 0, 1641, 0, 1641, 0, 0, 0,
	0, 1641, 0, 1519, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1518, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1519, 0, 1640, 1640, 1640, 0,
	0, 0, 0, 0, 1979, 1975, 1976, 1977, 1978, 0,
	0, 0, 0, 0, 0, 1958, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1974, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1518, 0, 0, 1640, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1992, 0, 1991, 0,
	0, 2001, 0, 0, 0, 0, 0, 0, 1980, 1982,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1997, 0, 1998, 0, 0,
	2005, 0, 0, 0, 1967, 1968, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1989, 0, 0, 0, 1519, 1519, 0, 1519,
	0, 0, 0, 0, 0, 0, 0, 1973, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1641, 1641, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1519, 0,
	0, 0, 0, 0, 0, 0, 1990, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1999, 0, 1964, 1965,
	1971, 1993, 1970, 1966, 0, 1963, 1961, 1962, 1954, 1955,
	1956, 1957, 1959, 1960, 0, 0, 0, 1988, 0, 5051,
	0, 0, 0, 0, 0, 0, 0, 0, 2003, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1519, 0, 0, 0, 0, 0, 0, 0,
	0, 1950, 1951, 0, 1983, 1984, 1985, 1994, 1995, 1996,
	0, 0, 0, 0, 0, 1519, 0, 0, 0, 0,
	1640, 0, 0, 0, 1987, 1981, 0, 1979, 0, 0,
	1640, 1950, 1951, 1953, 1983, 1984, 1985, 1994, 1995, 1996,
	0, 0, 0, 2000, 0, 0, 0, 0, 0, 0,
	0, 1974, 0, 0, 1987, 1981, 0, 1641, 1641, 0,
	2006, 0, 0, 1953, 0, 0, 0, 0, 0, 1952,
	0, 0, 0, 2000, 0, 0, 0, 0, 0, 1992,
	1972, 0, 0, 0, 0, 0, 0, 0, 0, 1969,
	2006, 0, 0, 0, 0, 0, 1519, 0, 0, 1952,
	0, 1641, 0, 0, 0, 0, 0, 0, 0, 0,
	1972, 0, 0, 2005, 2329, 0, 0, 0, 1640, 1969,
	0, 0, 0, 0, 0, 0, 0, 1641, 1641, 1641,
	1641, 1641, 1641, 1641, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1519, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1975, 1976, 1977,
	1978, 0, 0, 0, 0, 0, 0, 1958, 0, 0,
	0, 1519, 0, 0, 0, 0, 2327, 0, 0, 1990,
	0, 0, 0, 0, 0, 0, 0, 1975, 1976, 1977,
	1978, 1964, 1965, 1971, 1993, 1970, 1966, 1958, 1963, 1961,
	1962, 1954, 1955, 1956, 1957, 1959, 1960, 0, 0, 0,
	1991, 0, 4955, 2001, 1519, 0, 1641, 0, 0, 0,
	1980, 1982, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1997, 0, 1998,
	1991, 0, 0, 2001, 0, 0, 1967, 1968, 0, 0,
	1980, 1982, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1519, 1989, 0, 0, 1997, 0, 1998,
	0, 0, 0, 0, 0, 0, 1967, 1968, 0, 1973,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1989, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1973,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1999, 0,
	0, 0, 0, 0, 0, 0, 0, 1519, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1988,
	0, 0, 0, 0, 0, 1641, 1641, 1641, 1999, 0,
	2003, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1988,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2003, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1519, 0, 0, 1641, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1979,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1974, 0, 0, 0, 0, 2328, 1979,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1992, 0, 1974, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1992, 0, 0, 0, 2005, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2005, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2326, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1990, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1964, 1965, 1971, 1993, 1970, 1966, 0,
	1963, 1961, 1962, 1954, 1955, 1956, 1957, 1959, 1960, 0,
	0, 1990, 0, 0, 4904, 0, 0, 0, 0, 1641,
	0, 0, 1516, 1964, 1965, 1971, 1993, 1970, 1966, 1641,
	1963, 1961, 1962, 1954, 1955, 1956, 1957, 1959, 1960, 297,
	298, 300, 299, 301, 302, 303, 304, 1522, 305, 306,
	1523, 1524, 1525, 0, 1526, 689, 1527, 1528, 1529, 307,
	1530, 308, 309, 1297, 310, 311, 312, 313, 314, 315,
	316, 690, 691, 0, 317, 692, 318, 693, 1531, 694,
	319, 320, 321, 322, 323, 324, 1532, 1533, 0, 325,
	695, 696, 697, 1534, 326, 327, 698, 1535, 1602, 1536,
	328, 329, 330, 331, 332, 333, 334, 335, 0, 1537,
	337, 338, 339, 336, 340, 1538, 341, 1641, 342, 343,
	344, 345, 346, 347, 1539, 348, 349, 350, 1298, 351,
	352, 353, 1540, 1541, 1543, 1542, 1544, 1545, 1546, 354,
	355, 356, 357, 358, 0, 359, 361, 699, 700, 1547,
	364, 360, 362, 1548, 365, 363, 366, 1549, 367, 368,
	369, 1550, 1551, 370, 371, 372, 1552, 373, 374, 375,
	1553, 376, 377, 378, 1554, 379, 380, 701, 381, 382,
	383, 385, 387, 384, 386, 388, 389, 390, 391, 702,
	703, 392, 1555, 294, 1556, 0, 0, 0, 0, 393,
	394, 395, 704, 0, 0, 0, 396, 1557, 397, 398,
	399, 1558, 400, 401, 1559, 1299, 402, 403, 404, 705,
	706, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	1560, 414, 707, 1561, 708, 415, 1562, 416, 417, 418,
	419, 420, 421, 422, 709, 710, 711, 511, 1301, 423,
	424, 1563, 425, 426, 427, 428, 429, 0, 0, 0,
	295, 430, 431, 432, 1564, 1300, 512, 433, 712, 713,
	1565, 714, 1566, 434, 435, 1302, 715, 1303, 436, 437,
	438, 1304, 439, 0, 0, 0, 440, 441, 442, 443,
	444, 445, 1567, 446, 448, 447, 1568, 449, 716, 1305,
	450, 451, 1306, 1569, 452, 453, 454, 455, 456, 457,
	460, 1570, 1571, 458, 459, 461, 462, 0, 463, 464,
	466, 469, 465, 467, 468, 470, 483, 484, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	486, 0, 485, 1307, 487, 488, 489, 490, 491, 498,
	500, 501, 496, 497, 499, 502, 503, 505, 493, 494,
	495, 1308, 504, 492, 1572, 296, 1309, 506, 507, 508,
	509, 1573, 717, 510, 718, 513, 514, 1574, 0, 515,
	0, 516, 1575, 1576, 518, 519, 520, 1577, 1578, 521,
	522, 719, 1310, 523, 1311, 720, 524, 525, 517, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 1579, 535,
	536, 721, 537, 538, 539, 722, 540, 541, 542, 723,
	543, 724, 544, 545, 1580, 546, 547, 548, 0, 549,
	550, 551, 552, 553, 554, 555, 556, 725, 557, 558,
	560, 559, 561, 1581, 562, 0, 563, 564, 565, 0,
	0, 0, 0, 0, 566, 567, 569, 0, 570, 571,
	572, 573, 568, 574, 575, 576, 577, 578, 579, 1582,
	580, 581, 582, 1312, 583, 584, 585, 586, 587, 726,
	588, 0, 589, 590, 597, 598, 599, 591, 592, 593,
	600, 601, 602, 603, 604, 1583, 606, 607, 605, 608,
	609, 610, 1584, 611, 612, 594, 595, 613, 614, 1313,
	615, 616, 617, 618, 619, 620, 621, 727, 0, 622,
	1585, 623, 624, 625, 626, 627, 629, 596, 630, 635,
	636, 728, 631, 632, 633, 634, 729, 638, 639, 640,
	1586, 641, 642, 0, 637, 628, 1587, 643, 644, 645,
	646, 647, 648, 0, 649, 650, 1588, 651, 730, 731,
	732, 733, 1589, 662, 1590, 652, 654, 655, 656, 734,
	657, 735, 1591, 658, 659, 660, 661, 653, 663, 664,
	1592, 1593, 665, 666, 668, 670, 671, 667, 669, 672,
	1594, 673, 1595, 0, 674, 675, 676, 736, 737, 738,
	1596, 678, 677, 679, 680, 681, 739, 682, 683, 1597,
	1598, 1599, 1600, 684, 685, 740, 686, 687, 688, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1516, 0, 0, 0, 0, 0, 0, 0, 2968,
	0, 0, 0, 0, 0, 0, 0, 2969, 297, 298,
	300, 299, 301, 302, 303, 304, 1522, 305, 306, 1523,
	1524, 1525, 0, 1526, 689, 1527, 1528, 1529, 307, 1530,
	308, 309, 1297, 310, 311, 312, 313, 314, 315, 316,
	690, 691, 0, 317, 692, 318, 693, 1531, 694, 319,
	320, 321, 322, 323, 324, 1532, 1533, 0, 325, 695,
	696, 697, 1534, 326, 327, 698, 1535, 1602, 1536, 328,
	329, 330, 331, 332, 333, 334, 335, 0, 1537, 337,
	338, 339, 336, 340, 1538, 341, 0, 342, 343, 344,
	345, 346, 347, 1539, 348, 349, 350, 1298, 351, 352,
	353, 1540, 1541, 1543, 1542, 1544, 1545, 1546, 354, 355,
	356, 357, 358, 0, 359, 361, 699, 700, 1547, 364,
	360, 362, 1548, 365, 363, 366, 1549, 367, 368, 369,
	1550, 1551, 370, 371, 372, 1552, 373, 374, 375, 1553,
	376, 377, 378, 1554, 379, 380, 701, 381, 382, 383,
	385, 387, 384, 386, 388, 389, 390, 391, 702, 703,
	392, 1555, 294, 1556, 0, 0, 0, 0, 393, 394,
	395, 704, 0, 0, 0, 396, 1557, 397, 398, 399,
	1558, 400, 401, 1559, 1299, 402, 403, 404, 705, 706,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 1560,
	414, 707, 1561, 708, 415, 1562, 416, 417, 418, 419,
	420, 421, 422, 709, 710, 711, 511, 1301, 423, 424,
	1563, 425, 426, 427, 428, 429, 0, 0, 0, 295,
	430, 431, 432, 1564, 1300, 512, 433, 712, 713, 1565,
	714, 1566, 434, 435, 1302, 715, 1303, 436, 437, 438,
	1304, 439, 0, 0, 0, 440, 441, 442, 443, 444,
	445, 1567, 446, 448, 447, 1568, 449, 716, 1305, 450,
	451, 1306, 1569, 452, 453, 454, 455, 456, 457, 460,
	1570, 1571, 458, 459, 461, 462, 0, 463, 464, 466,
	469, 465, 467, 468, 470, 483, 484, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 486,
	0, 485, 1307, 487, 488, 489, 490, 491, 498, 500,
	501, 496, 497, 499, 502, 503, 505, 493, 494, 495,
	1308, 504, 492, 1572, 296, 1309, 506, 507, 508, 509,
	1573, 717, 510, 718, 513, 514, 1574, 0, 515, 0,
	516, 1575, 1576, 518, 519, 520, 1577, 1578, 521, 522,
	719, 1310, 523, 1311, 720, 524, 525, 517, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 1579, 535, 536,
	721, 537, 538, 539, 722, 540, 541, 542, 723, 543,
	724, 544, 545, 1580, 546, 547, 548, 0, 549, 550,
	551, 552, 553, 554, 555, 556, 725, 557, 558, 560,
	559, 561, 1581, 562, 0, 563, 564, 565, 0, 0,
	0, 0, 0, 566, 567, 569, 0, 570, 571, 572,
	573, 568, 574, 575, 576, 577, 578, 579, 1582, 580,
	581, 582, 1312, 583, 584, 585, 586, 587, 726, 588,
	0, 589, 590, 597, 598, 599, 591, 592, 593, 600,
	601, 602, 603, 604, 1583, 606, 607, 605, 608, 609,
	610, 1584, 611, 612, 594, 595, 613, 614, 1313, 615,
	616, 617, 618, 619, 620, 621, 727, 0, 622, 1585,
	623, 624, 625, 626, 627, 629, 596, 630, 635, 636,
	728, 631, 632, 633, 634, 729, 638, 639, 640, 1586,
	641, 642, 0, 637, 628, 1587, 643, 644, 645, 646,
	647, 648, 0, 649, 650, 1588, 651, 730, 731, 732,
	733, 1589, 662, 1590, 652, 654, 655, 656, 734, 657,
	735, 1591, 658, 659, 660, 661, 653, 663, 664, 1592,
	1593, 665, 666, 668, 670, 671, 667, 669, 672, 1594,
	673, 1595, 0, 674, 675, 676, 736, 737, 738, 1596,
	678, 677, 679, 680, 681, 739, 682, 683, 1597, 1598,
	1599, 1600, 684, 685, 740, 686, 687, 688, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1516, 0,
	0, 0, 4025, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4027, 297, 298, 300, 299, 301,
	302, 303, 304, 1522, 305, 306, 1523, 1524, 1525, 0,
	1526, 689, 1527, 1528, 1529, 307, 1530, 308, 309, 1297,
	310, 311, 312, 313, 314, 315, 316, 690, 691, 0,
	317, 692, 318, 693, 1531, 694, 319, 320, 321, 322,
	323, 324, 1532, 1533, 0, 325, 695, 696, 697, 1534,
	326, 327, 698, 1535, 1602, 1536, 328, 329, 330, 331,
	332, 333, 334, 335, 0, 1537, 337, 338, 339, 336,
	340, 1538, 341, 0, 342, 343, 344, 345, 346, 347,
	1539, 348, 349, 350, 1298, 351, 352, 353, 1540, 1541,
	1543, 1542, 1544, 1545, 1546, 354, 355, 356, 357, 358,
	0, 359, 361, 699, 700, 1547, 364, 360, 362, 1548,
	365, 363, 366, 1549, 367, 368, 369, 1550, 1551, 370,
	371, 372, 1552, 373, 374, 375, 1553, 376, 377, 378,
	1554, 379, 380, 701, 381, 382, 383, 385, 387, 384,
	386, 388, 389, 390, 391, 702, 703, 392, 1555, 294,
	1556, 0, 0, 0, 0, 393, 394, 395, 704, 0,
	0, 0, 396, 1557, 397, 398, 399, 1558, 400, 401,
	1559, 1299, 402, 403, 404, 705, 706, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 1560, 414, 707, 1561,
	708, 415, 1562, 416, 417, 418, 419, 420, 421, 422,
	709, 710, 711, 511, 1301, 423, 424, 1563, 425, 426,
	427, 428, 429, 0, 0, 0, 295, 430, 431, 432,
	1564, 1300, 512, 433, 712, 713, 1565, 714, 1566, 434,
	435, 1302, 715, 1303, 436, 437, 438, 1304, 439, 0,
	0, 0, 440, 441, 442, 443, 444, 445, 1567, 446,
	448, 447, 1568, 449, 716, 1305, 450, 451, 1306, 1569,
	452, 453, 454, 455, 456, 457, 460, 1570, 1571, 458,
	459, 461, 462, 0, 463, 464, 466, 469, 465, 467,
	468, 470, 483, 484, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 486, 0, 485, 1307,
	487, 488, 489, 490, 491, 498, 500, 501, 496, 497,
	499, 502, 503, 505, 493, 494, 495, 1308, 504, 492,
	1572, 296, 1309, 506, 507, 508, 509, 1573, 717, 510,
	718, 513, 514, 1574, 0, 515, 0, 516, 1575, 1576,
	518, 519, 520, 1577, 1578, 521, 522, 719, 1310, 523,
	1311, 720, 524, 525, 517, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 1579, 535, 536, 721, 537, 538,
	539, 722, 540, 541, 542, 723, 543, 724, 544, 545,
	1580, 546, 547, 548, 0, 549, 550, 551, 552, 553,
	554, 555, 556, 725, 557, 558, 560, 559, 561, 1581,
	562, 0, 563, 564, 565, 0, 0, 0, 0, 0,
	566, 567, 569, 0, 570, 571, 572, 573, 568, 574,
	575, 576, 577, 578, 579, 1582, 580, 581, 582, 1312,
	583, 584, 585, 586, 587, 726, 588, 0, 589, 590,
	597, 598, 599, 591, 592, 593, 600, 601, 602, 603,
	604, 1583, 606, 607, 605, 608, 609, 610, 1584, 611,
	612, 594, 595, 613, 614, 1313, 615, 616, 617, 618,
	619, 620, 621, 727, 0, 622, 1585, 623, 624, 625,
	626, 627, 629, 596, 630, 635, 636, 728, 631, 632,
	633, 634, 729, 638, 639, 640, 1586, 641, 642, 0,
	637, 628, 1587, 643, 644, 645, 646, 647, 648, 0,
	649, 650, 1588, 651, 730, 731, 732, 733, 1589, 662,
	1590, 652, 654, 655, 656, 734, 657, 735, 1591, 658,
	659, 660, 661, 653, 663, 664, 1592, 1593, 665, 666,
	668, 670, 671, 667, 669, 672, 1594, 673, 1595, 0,
	674, 675, 676, 736, 737, 738, 1596, 678, 677, 679,
	680, 681, 739, 682, 683, 1597, 1598, 1599, 1600, 684,
	685, 740, 686, 687, 688, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1516,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4464, 297, 298, 300, 299,
	301, 302, 303, 304, 1522, 305, 306, 1523, 1524, 1525,
	0, 1526, 689, 1527, 1528, 1529, 307, 1530, 308, 309,
	1297, 310, 311, 312, 313, 314, 315, 316, 690, 691,
	0, 317, 692, 318, 693, 1531, 694, 319, 320, 321,
	322, 323, 324, 1532, 1533, 0, 325, 695, 696, 697,
	1534, 326, 327, 698, 1535, 1602, 1536, 328, 329, 330,
	331, 332, 333, 334, 335, 0, 1537, 337, 338, 339,
	336, 340, 1538, 341, 0, 342, 343, 344, 345, 346,
	347, 1539, 348, 349, 350, 1298, 351, 352, 353, 1540,
	1541, 1543, 1542, 1544, 1545, 1546, 354, 355, 356, 357,
	358, 0, 359, 361, 699, 700, 1547, 364, 360, 362,
	1548, 365, 363, 366, 1549, 367, 368, 369, 1550, 1551,
	370, 371, 372, 1552, 373, 374, 375, 1553, 376, 377,
	378, 1554, 379, 380, 701, 381, 382, 383, 385, 387,
	384, 386, 388, 389, 390, 391, 702, 703, 392, 1555,
	294, 1556, 0, 0, 0, 0, 393, 394, 395, 704,
	0, 0, 0, 396, 1557, 397, 398, 399, 1558, 400,
	401, 1559, 1299, 402, 403, 404, 705, 706, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 1560, 414, 707,
	1561, 708, 415, 1562, 416, 417, 418, 419, 420, 421,
	422, 709, 710, 711, 511, 1301, 423, 424, 1563, 425,
	426, 427, 428, 429, 0, 0, 0, 295, 430, 431,
	432, 1564, 1300, 512, 433, 712, 713, 1565, 714, 1566,
	434, 435, 1302, 715, 1303, 436, 437, 438, 1304, 439,
	0, 0, 0, 440, 441, 442, 443, 444, 445, 1567,
	446, 448, 447, 1568, 449, 716, 1305, 450, 451, 1306,
	1569, 452, 453, 454, 455, 456, 457, 460, 1570, 1571,
	458, 459, 461, 462, 0, 463, 464, 466, 469, 465,
	467, 468, 470, 483, 484, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 486, 0, 485,
	1307, 487, 488, 489, 490, 491, 498, 500, 501, 496,
	497, 499, 502, 503, 505, 493, 494, 495, 1308, 504,
	492, 1572, 296, 1309, 506, 507, 508, 509, 1573, 717,
	510, 718, 513, 514, 1574, 0, 515, 0, 516, 1575,
	1576, 518, 519, 520, 1577, 1578, 521, 522, 719, 1310,
	523, 1311, 720, 524, 525, 517, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 1579, 535, 536, 721, 537,
	538, 539, 722, 540, 541, 542, 723, 543, 724, 544,
	545, 1580, 546, 547, 548, 0, 549, 550, 551, 552,
	553, 554, 555, 556, 725, 557, 558, 560, 559, 561,
	1581, 562, 0, 563, 564, 565, 0, 0, 0, 0,
	0, 566, 567, 569, 0, 570, 571, 572, 573, 568,
	574, 575, 576, 577, 578, 579, 1582, 580, 581, 582,
	1312, 583, 584, 585, 586, 587, 726, 588, 0, 589,
	590, 597, 598, 599, 591, 592, 593, 600, 601, 602,
	603, 604, 1583, 606, 607, 605, 608, 609, 610, 1584,
	611, 612, 594, 595, 613, 614, 1313, 615, 616, 617,
	618, 619, 620, 621, 727, 0, 622, 1585, 623, 624,
	625, 626, 627, 629, 596, 630, 635, 636, 728, 631,
	632, 633, 634, 729, 638, 639, 640, 1586, 641, 642,
	0, 637, 628, 1587, 643, 644, 645, 646, 647, 648,
	0, 649, 650, 1588, 651, 730, 731, 732, 733, 1589,
	662, 1590, 652, 654, 655, 656, 734, 657, 735, 1591,
	658, 659, 660, 661, 653, 663, 664, 1592, 1593, 665,
	666, 668, 670, 671, 667, 669, 672, 1594, 673, 1595,
	0, 674, 675, 676, 736, 737, 738, 1596, 678, 677,
	679, 680, 681, 739, 682, 683, 1597, 1598, 1599, 1600,
	684, 685, 740, 686, 687, 688, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1516, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4462, 297, 298, 300,
	299, 301, 302, 303, 304, 1522, 305, 306, 1523, 1524,
	1525, 0, 1526, 689, 1527, 1528, 1529, 307, 1530, 308,
	309, 1297, 310, 311, 312, 313, 314, 315, 316, 690,
	691, 0, 317, 692, 318, 693, 1531, 694, 319, 320,
	321, 322, 323, 324, 1532, 1533, 0, 325, 695, 696,
	697, 1534, 326, 327, 698, 1535, 1602, 1536, 328, 329,
	330, 331, 332, 333, 334, 335, 0, 1537, 337, 338,
	339, 336, 340, 1538, 341, 0, 342, 343, 344, 345,
	346, 347, 1539, 348, 349, 350, 1298, 351, 352, 353,
	1540, 1541, 1543, 1542, 1544, 1545, 1546, 354, 355, 356,
	357, 358, 0, 359, 361, 699, 700, 1547, 364, 360,
	362, 1548, 365, 363, 366, 1549, 367, 368, 369, 1550,
	1551, 370, 371, 372, 1552, 373, 374, 375, 1553, 376,
	377, 378, 1554, 379, 380, 701, 381, 382, 383, 385,
	387, 384, 386, 388, 389, 390, 391, 702, 703, 392,
	1555, 294, 1556, 0, 0, 0, 0, 393, 394, 395,
	704, 0, 0, 0, 396, 1557, 397, 398, 399, 1558,
	400, 401, 1559, 1299, 402, 403, 404, 705, 706, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 1560, 414,
	707, 1561, 708, 415, 1562, 416, 417, 418, 419, 420,
	421, 422, 709, 710, 711, 511, 1301, 423, 424, 1563,
	425, 426, 427, 428, 429, 0, 0, 0, 295, 430,
	431, 432, 1564, 1300, 512, 433, 712, 713, 1565, 714,
	1566, 434, 435, 1302, 715, 1303, 436, 437, 438, 1304,
	439, 0, 0, 0, 440, 441, 442, 443, 444, 445,
	1567, 446, 448, 447, 1568, 449, 716, 1305, 450, 451,
	1306, 1569, 452, 453, 454, 455, 456, 457, 460, 1570,
	1571, 458, 459, 461, 462, 0, 463, 464, 466, 469,
	465, 467, 468, 470, 483, 484, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 486, 0,
	485, 1307, 487, 488, 489, 490, 491, 498, 500, 501,
	496, 497, 499, 502, 503, 505, 493, 494, 495, 1308,
	504, 492, 1572, 296, 1309, 506, 507, 508, 509, 1573,
	717, 510, 718, 513, 514, 1574, 0, 515, 0, 516,
	1575, 1576, 518, 519, 520, 1577, 1578, 521, 522, 719,
	1310, 523, 1311, 720, 524, 525, 517, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 1579, 535, 536, 721,
	537, 538, 539, 722, 540, 541, 542, 723, 543, 724,
	544, 545, 1580, 546, 547, 548, 0, 549, 550, 551,
	552, 553, 554, 555, 556, 725, 557, 558, 560, 559,
	561, 1581, 562, 0, 563, 564, 565, 0, 0, 0,
	0, 0, 566, 567, 569, 0, 570, 571, 572, 573,
	568, 574, 575, 576, 577, 578, 579, 1582, 580, 581,
	582, 1312, 583, 584, 585, 586, 587, 726, 588, 0,
	589, 590, 597, 598, 599, 591, 592, 593, 600, 601,
	602, 603, 604, 1583, 606, 607, 605, 608, 609, 610,
	1584, 611, 612, 594, 595, 613, 614, 1313, 615, 616,
	617, 618, 619, 620, 621, 727, 0, 622, 1585, 623,
	624, 625, 626, 627, 629, 596, 630, 635, 636, 728,
	631, 632, 633, 634, 729, 638, 639, 640, 1586, 641,
	642, 0, 637, 628, 1587, 643, 644, 645, 646, 647,
	648, 0, 649, 650, 1588, 651, 730, 731, 732, 733,
	1589, 662, 1590, 652, 654, 655, 656, 734, 657, 735,
	1591, 658, 659, 660, 661, 653, 663, 664, 1592, 1593,
	665, 666, 668, 670, 671, 667, 669, 672, 1594, 673,
	1595, 0, 674, 675, 676, 736, 737, 738, 1596, 678,
	677, 679, 680, 681, 739, 682, 683, 1597, 1598, 1599,
	1600, 684, 685, 740, 686, 687, 688, 0, 0, 0,
	0, 0, 0, 0, 0, 1516, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4704, 297, 298, 300, 299, 301, 302, 303, 304,
	1522, 305, 306, 1523, 1524, 1525, 0, 1526, 689, 1527,
	1528, 1529, 307, 1530, 308, 309, 1297, 310, 311, 312,
	313, 314, 315, 316, 690, 691, 0, 317, 692, 318,
	693, 1531, 694, 319, 320, 321, 322, 323, 324, 1532,
	1533, 0, 325, 695, 696, 697, 1534, 326, 327, 698,
	1535, 1602, 1536, 328, 329, 330, 331, 332, 333, 334,
	335, 0, 1537, 337, 338, 339, 336, 340, 1538, 341,
	0, 342, 343, 344, 345, 346, 347, 1539, 348, 349,
	350, 1298, 351, 352, 353, 1540, 1541, 1543, 1542, 1544,
	1545, 1546, 354, 355, 356, 357, 358, 0, 359, 361,
	699, 700, 1547, 364, 360, 362, 1548, 365, 363, 366,
	1549, 367, 368, 369, 1550, 1551, 370, 371, 372, 1552,
	373, 374, 375, 1553, 376, 377, 378, 1554, 379, 380,
	701, 381, 382, 383, 385, 387, 384, 386, 388, 389,
	390, 391, 702, 703, 392, 1555, 294, 1556, 0, 0,
	0, 0, 393, 394, 395, 704, 0, 0, 0, 396,
	1557, 397, 398, 399, 1558, 400, 401, 1559, 1299, 402,
	403, 404, 705, 706, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 1560, 414, 707, 1561, 708, 415, 1562,
	416, 417, 418, 419, 420, 421, 422, 709, 710, 711,
	511, 1301, 423, 424, 1563, 425, 426, 427, 428, 429,
	0, 0, 0, 295, 430, 431, 432, 1564, 1300, 512,
	433, 712, 713, 1565, 714, 1566, 434, 435, 1302, 715,
	1303, 436, 437, 438, 1304, 439, 0, 0, 0, 440,
	441, 442, 443, 444, 445, 1567, 446, 448, 447, 1568,
	449, 716, 1305, 450, 451, 1306, 1569, 452, 453, 454,
	455, 456, 457, 460, 1570, 1571, 458, 459, 461, 462,
	0, 463, 464, 466, 469, 465, 467, 468, 470, 483,
	484, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 486, 0, 485, 1307, 487, 488, 489,
	490, 491, 498, 500, 501, 496, 497, 499, 502, 503,
	505, 493, 494, 495, 1308, 504, 492, 1572, 296, 1309,
	506, 507, 508, 509, 1573, 717, 510, 718, 513, 514,
	1574, 0, 515, 0, 516, 1575, 1576, 518, 519, 520,
	1577, 1578, 521, 522, 719, 1310, 523, 1311, 720, 524,
	525, 517, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 1579, 535, 536, 721, 537, 538, 539, 722, 540,
	541, 542, 723, 543, 724, 544, 545, 1580, 546, 547,
	548, 0, 549, 550, 551, 552, 553, 554, 555, 556,
	725, 557, 558, 560, 559, 561, 1581, 562, 0, 563,
	564, 565, 0, 0, 0, 0, 0, 566, 567, 569,
	0, 570, 571, 572, 573, 568, 574, 575, 576, 577,
	578, 579, 1582, 580, 581, 582, 1312, 583, 584, 585,
	586, 587, 726, 588, 0, 589, 590, 597, 598, 599,
	591, 592, 593, 600, 601, 602, 603, 604, 1583, 606,
	607, 605, 608, 609, 610, 1584, 611, 612, 594, 595,
	613, 614, 1313, 615, 616, 617, 618, 619, 620, 621,
	727, 0, 622, 1585, 623, 624, 625, 626, 627, 629,
	596, 630, 635, 636, 728, 631, 632, 633, 634, 729,
	638, 639, 640, 1586, 641, 642, 0, 637, 628, 1587,
	643, 644, 645, 646, 647, 648, 0, 649, 650, 1588,
	651, 730, 731, 732, 733, 1589, 662, 1590, 652, 654,
	655, 656, 734, 657, 735, 1591, 658, 659, 660, 661,
	653, 663, 664, 1592, 1593, 665, 666, 668, 670, 671,
	667, 669, 672, 1594, 673, 1595, 0, 674, 675, 676,
	736, 737, 738, 1596, 678, 677, 679, 680, 681, 739,
	682, 683, 1597, 1598, 1599, 1600, 684, 685, 740, 686,
	687, 688, 0, 0, 0, 0, 0, 0, 0, 0,
	1516, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4569, 297, 298, 300,
	299, 301, 302, 303, 304, 1522, 305, 306, 1523, 1524,
	1525, 0, 1526, 689, 1527, 1528, 1529, 307, 1530, 308,
	309, 1297, 310, 311, 312, 313, 314, 315, 316, 690,
	691, 0, 317, 692, 318, 693, 1531, 694, 319, 320,
	321, 322, 323, 324, 1532, 1533, 0, 325, 695, 696,
	697, 1534, 326, 327, 698, 1535, 1602, 1536, 328, 329,
	330, 331, 332, 333, 334, 335, 0, 1537, 337, 338,
	339, 336, 340, 1538, 341, 0, 342, 343, 344, 345,
	346, 347, 1539, 348, 349, 350, 1298, 351, 352, 353,
	1540, 1541, 1543, 1542, 1544, 1545, 1546, 354, 355, 356,
	357, 358, 0, 359, 361, 699, 700, 1547, 364, 360,
	362, 1548, 365, 363, 366, 1549, 367, 368, 369, 1550,
	1551, 370, 371, 372, 1552, 373, 374, 375, 1553, 376,
	377, 378, 1554, 379, 380, 701, 381, 382, 383, 385,
	387, 384, 386, 388, 389, 390, 391, 702, 703, 392,
	1555, 294, 1556, 0, 0, 0, 0, 393, 394, 395,
	704, 0, 0, 0, 396, 1557, 397, 398, 399, 1558,
	400, 401, 1559, 1299, 402, 403, 404, 705, 706, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 1560, 414,
	707, 1561, 708, 415, 1562, 416, 417, 418, 419, 420,
	421, 422, 709, 710, 711, 511, 1301, 423, 424, 1563,
	425, 426, 427, 428, 429, 0, 0, 0, 295, 430,
	431, 432, 1564, 1300, 512, 433, 712, 713, 1565, 714,
	1566, 434, 435, 1302, 715, 1303, 436, 437, 438, 1304,
	439, 0, 0, 0, 440, 441, 442, 443, 444, 445,
	1567, 446, 448, 447, 1568, 449, 716, 1305, 450, 451,
	1306, 1569, 452, 453, 454, 455, 456, 457, 460, 1570,
	1571, 458, 459, 461, 462, 0, 463, 464, 466, 469,
	465, 467, 468, 470, 483, 484, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 486, 0,
	485, 1307, 487, 488, 489, 490, 491, 498, 500, 501,
	496, 497, 499, 502, 503, 505, 493, 494, 495, 1308,
	504, 492, 1572, 296, 1309, 506, 507, 508, 509, 1573,
	717, 510, 718, 513, 514, 1574, 0, 515, 0, 516,
	1575, 1576, 518, 519, 520, 1577, 1578, 521, 522, 719,
	1310, 523, 1311, 720, 524, 525, 517, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 1579, 535, 536, 721,
	537, 538, 539, 722, 540, 541, 542, 723, 543, 724,
	544, 545, 1580, 546, 547, 548, 0, 549, 550, 551,
	552, 553, 554, 555, 556, 725, 557, 558, 560, 559,
	561, 1581, 562, 0, 563, 564, 565, 0, 0, 0,
	0, 0, 566, 567, 569, 0, 570, 571, 572, 573,
	568, 574, 575, 576, 577, 578, 579, 1582, 580, 581,
	582, 1312, 583, 584, 585, 586, 587, 726, 588, 0,
	589, 590, 597, 598, 599, 591, 592, 593, 600, 601,
	602, 603, 604, 1583, 606, 607, 605, 608, 609, 610,
	1584, 611, 612, 594, 595, 613, 614, 1313, 615, 616,
	617, 618, 619, 620, 621, 727, 0, 622, 1585, 623,
	624, 625, 626, 627, 629, 596, 630, 635, 636, 728,
	631, 632, 633, 634, 729, 638, 639, 640, 1586, 641,
	642, 0, 637, 628, 1587, 643, 644, 645, 646, 647,
	648, 0, 649, 650, 1588, 651, 730, 731, 732, 733,
	1589, 662, 1590, 652, 654, 655, 656, 734, 657, 735,
	1591, 658, 659, 660, 661, 653, 663, 664, 1592, 1593,
	665, 666, 668, 670, 671, 667, 669, 672, 1594, 673,
	1595, 0, 674, 675, 676, 736, 737, 738, 1596, 678,
	677, 679, 680, 681, 739, 682, 683, 1597, 1598, 1599,
	1600, 684, 685, 740, 686, 687, 688, 0, 0, 0,
	0, 0, 0, 0, 0, 1516, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4388, 297, 298, 300, 299, 301, 302, 303, 304,
	1522, 305, 306, 1523, 1524, 1525, 0, 1526, 689, 1527,
	1528, 1529, 307, 1530, 308, 309, 1297, 310, 311, 312,
	313, 314, 315, 316, 690, 691, 0, 317, 692, 318,
	693, 1531, 694, 319, 320, 321, 322, 323, 324, 1532,
	1533, 0, 325, 695, 696, 697, 1534, 326, 327, 698,
	1535, 1602, 1536, 328, 329, 330, 331, 332, 333, 334,
	335, 0, 1537, 337, 338, 339, 336, 340, 1538, 341,
	0, 342, 343, 344, 345, 346, 347, 1539, 348, 349,
	350, 1298, 351, 352, 353, 1540, 1541, 1543, 1542, 1544,
	1545, 1546, 354, 355, 356, 357, 358, 0, 359, 361,
	699, 700, 1547, 364, 360, 362, 1548, 365, 363, 366,
	1549, 367, 368, 369, 1550, 1551, 370, 371, 372, 1552,
	373, 374, 375, 1553, 376, 377, 378, 1554, 379, 380,
	701, 381, 382, 383, 385, 387, 384, 386, 388, 389,
	390, 391, 702, 703, 392, 1555, 294, 1556, 0, 0,
	0, 0, 393, 394, 395, 704, 0, 0, 0, 396,
	1557, 397, 398, 399, 1558, 400, 401, 1559, 1299, 402,
	403, 404, 705, 706, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 1560, 414, 707, 1561, 708, 415, 1562,
	416, 417, 418, 419, 420, 421, 422, 709, 710, 711,
	511, 1301, 423, 424, 1563, 425, 426, 427, 428, 429,
	0, 0, 0, 295, 430, 431, 432, 1564, 1300, 512,
	433, 712, 713, 1565, 714, 1566, 434, 435, 1302, 715,
	1303, 436, 437, 438, 1304, 439, 0, 0, 0, 440,
	441, 442, 443, 444, 445, 1567, 446, 448, 447, 1568,
	449, 716, 1305, 450, 451, 1306, 1569, 452, 453, 454,
	455, 456, 457, 460, 1570, 1571, 458, 459, 461, 462,
	0, 463, 464, 466, 469, 465, 467, 468, 470, 483,
	484, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 486, 0, 485, 1307, 487, 488, 489,
	490, 491, 498, 500, 501, 496, 497, 499, 502, 503,
	505, 493, 494, 495, 1308, 504, 492, 1572, 296, 1309,
	506, 507, 508, 509, 1573, 717, 510, 718, 513, 514,
	1574, 0, 515, 0, 516, 1575, 1576, 518, 519, 520,
	1577, 1578, 521, 522, 719, 1310, 523, 1311, 720, 524,
	525, 517, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 1579, 535, 536, 721, 537, 538, 539, 722, 540,
	541, 542, 723, 543, 724, 544, 545, 1580, 546, 547,
	548, 0, 549, 550, 551, 552, 553, 554, 555, 556,
	725, 557, 558, 560, 559, 561, 1581, 562, 0, 563,
	564, 565, 0, 0, 0, 0, 0, 566, 567, 569,
	0, 570, 571, 572, 573, 568, 574, 575, 576, 577,
	578, 579, 1582, 580, 581, 582, 1312, 583, 584, 585,
	586, 587, 726, 588, 0, 589, 590, 597, 598, 599,
	591, 592, 593, 600, 601, 602, 603, 604, 1583, 606,
	607, 605, 608, 609, 610, 1584, 611, 612, 594, 595,
	613, 614, 1313, 615, 616, 617, 618, 619, 620, 621,
	727, 0, 622, 1585, 623, 624, 625, 626, 627, 629,
	596, 630, 635, 636, 728, 631, 632, 633, 634, 729,
	638, 639, 640, 1586, 641, 642, 0, 637, 628, 1587,
	643, 644, 645, 646, 647, 648, 0, 649, 650, 1588,
	651, 730, 731, 732, 733, 1589, 662, 1590, 652, 654,
	655, 656, 734, 657, 735, 1591, 658, 659, 660, 661,
	653, 663, 664, 1592, 1593, 665, 666, 668, 670, 671,
	667, 669, 672, 1594, 673, 1595, 0, 674, 675, 676,
	736, 737, 738, 1596, 678, 677, 679, 680, 681, 739,
	682, 683, 1597, 1598, 1599, 1600, 684, 685, 740, 686,
	687, 688, 0, 0, 0, 0, 0, 0, 0, 0,
	1516, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4043, 297, 298, 300,
	299, 301, 302, 303, 304, 1522, 305, 306, 1523, 1524,
	1525, 0, 1526, 689, 1527, 1528, 1529, 307, 1530, 308,
	309, 1297, 310, 311, 312, 313, 314, 315, 316, 690,
	691, 0, 317, 692, 318, 693, 1531, 694, 319, 320,
	321, 322, 323, 324, 1532, 1533, 0, 325, 695, 696,
	697, 1534, 326, 327, 698, 1535, 1602, 1536, 328, 329,
	330, 331, 332, 333, 334, 335, 0, 1537, 337, 338,
	339, 336, 340, 1538, 341, 0, 342, 343, 344, 345,
	346, 347, 1539, 348, 349, 350, 1298, 351, 352, 353,
	1540, 1541, 1543, 1542, 1544, 1545, 1546, 354, 355, 356,
	357, 358, 0, 359, 361, 699, 700, 1547, 364, 360,
	362, 1548, 365, 363, 366, 1549, 367, 368, 369, 1550,
	1551, 370, 371, 372, 1552, 373, 374, 375, 1553, 376,
	377, 378, 1554, 379, 380, 701, 381, 382, 383, 385,
	387, 384, 386, 388, 389, 390, 391, 702, 703, 392,
	1555, 294, 1556, 0, 0, 0, 0, 393, 394, 395,
	704, 0, 0, 0, 396, 1557, 397, 398, 399, 1558,
	400, 401, 1559, 1299, 402, 403, 404, 705, 706, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 1560, 414,
	707, 1561, 708, 415, 1562, 416, 417, 418, 419, 420,
	421, 422, 709, 710, 711, 511, 1301, 423, 424, 1563,
	425, 426, 427, 428, 429, 0, 0, 0, 295, 430,
	431, 432, 1564, 1300, 512, 433, 712, 713, 1565, 714,
	1566, 434, 435, 1302, 715, 1303, 436, 437, 438, 1304,
	439, 0, 0, 0, 440, 441, 442, 443, 444, 445,
	1567, 446, 448, 447, 1568, 449, 716, 1305, 450, 451,
	1306, 1569, 452, 453, 454, 455, 456, 457, 460, 1570,
	1571, 458, 459, 461, 462, 0, 463, 464, 466, 469,
	465, 467, 468, 470, 483, 484, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 486, 0,
	485, 1307, 487, 488, 489, 490, 491, 498, 500, 501,
	496, 497, 499, 502, 503, 505, 493, 494, 495, 1308,
	504, 492, 1572, 296, 1309, 506, 507, 508, 509, 1573,
	717, 510, 718, 513, 514, 1574, 0, 515, 0, 516,
	1575, 1576, 518, 519, 520, 1577, 1578, 521, 522, 719,
	1310, 523, 1311, 720, 524, 525, 517, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 1579, 535, 536, 721,
	537, 538, 539, 722, 540, 541, 542, 723, 543, 724,
	544, 545, 1580, 546, 547, 548, 0, 549, 550, 551,
	552, 553, 554, 555, 556, 725, 557, 558, 560, 559,
	561, 1581, 562, 0, 563, 564, 565, 0, 0, 0,
	0, 0, 566, 567, 569, 0, 570, 571, 572, 573,
	568, 574, 575, 576, 577, 578, 579, 1582, 580, 581,
	582, 1312, 583, 584, 585, 586, 587, 726, 588, 0,
	589, 590, 597, 598, 599, 591, 592, 593, 600, 601,
	602, 603, 604, 1583, 606, 607, 605, 608, 609, 610,
	1584, 611, 612, 594, 595, 613, 614, 1313, 615, 616,
	617, 618, 619, 620, 621, 727, 0, 622, 1585, 623,
	624, 625, 626, 627, 629, 596, 630, 635, 636, 728,
	631, 632, 633, 634, 729, 638, 639, 640, 1586, 641,
	642, 0, 637, 628, 1587, 643, 644, 645, 646, 647,
	648, 0, 649, 650, 1588, 651, 730, 731, 732, 733,
	1589, 662, 1590, 652, 654, 655, 656, 734, 657, 735,
	1591, 658, 659, 660, 661, 653, 663, 664, 1592, 1593,
	665, 666, 668, 670, 671, 667, 669, 672, 1594, 673,
	1595, 0, 674, 675, 676, 736, 737, 738, 1596, 678,
	677, 679, 680, 681, 739, 682, 683, 1597, 1598, 1599,
	1600, 684, 685, 740, 686, 687, 688, 0, 0, 0,
	0, 0, 0, 0, 0, 1516, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3854, 297, 298, 300, 299, 301, 302, 303, 304,
	1522, 305, 306, 1523, 1524, 1525, 0, 1526, 689, 1527,
	1528, 1529, 307, 1530, 308, 309, 1297, 310, 311, 312,
	313, 314, 315, 316, 690, 691, 0, 317, 692, 318,
	693, 1531, 694, 319, 320, 321, 322, 323, 324, 1532,
	1533, 0, 325, 695, 696, 697, 1534, 326, 327, 698,
	1535, 1602, 1536, 328, 329, 330, 331, 332, 333, 334,
	335, 0, 1537, 337, 338, 339, 336, 340, 1538, 341,
	0, 342, 343, 344, 345, 346, 347, 1539, 348, 349,
	350, 1298, 351, 352, 353, 1540, 1541, 1543, 1542, 1544,
	1545, 1546, 354, 355, 356, 357, 358, 0, 359, 361,
	699, 700, 1547, 364, 360, 362, 1548, 365, 363, 366,
	1549, 367, 368, 369, 1550, 1551, 370, 371, 372, 1552,
	373, 374, 375, 1553, 376, 377, 378, 1554, 379, 380,
	701, 381, 382, 383, 385, 387, 384, 386, 388, 389,
	390, 391, 702, 703, 392, 1555, 294, 1556, 0, 0,
	0, 0, 393, 394, 395, 704, 0, 0, 0, 396,
	1557, 397, 398, 399, 1558, 400, 401, 1559, 1299, 402,
	403, 404, 705, 706, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 1560, 414, 707, 1561, 708, 415, 1562,
	416, 417, 418, 419, 420, 421, 422, 709, 710, 711,
	511, 1301, 423, 424, 1563, 425, 426, 427, 428, 429,
	0, 0, 0, 295, 430, 431, 432, 1564, 1300, 512,
	433, 712, 713, 1565, 714, 1566, 434, 435, 1302, 715,
	1303, 436, 437, 438, 1304, 439, 0, 0, 0, 440,
	441, 442, 443, 444, 445, 1567, 446, 448, 447, 1568,
	449, 716, 1305, 450, 451, 1306, 1569, 452, 453, 454,
	455, 456, 457, 460, 1570, 1571, 458, 459, 461, 462,
	0, 463, 464, 466, 469, 465, 467, 468, 470, 483,
	484, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 486, 0, 485, 1307, 487, 488, 489,
	490, 491, 498, 500, 501, 496, 497, 499, 502, 503,
	505, 493, 494, 495, 1308, 504, 492, 1572, 296, 1309,
	506, 507, 508, 509, 1573, 717, 510, 718, 513, 514,
	1574, 0, 515, 0, 516, 1575, 1576, 518, 519, 520,
	1577, 1578, 521, 522, 719, 1310, 523, 1311, 720, 524,
	525, 517, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 1579, 535, 536, 721, 537, 538, 539, 722, 540,
	541, 542, 723, 543, 724, 544, 545, 1580, 546, 547,
	548, 0, 549, 550, 551, 552, 553, 554, 555, 556,
	725, 557, 558, 560, 559, 561, 1581, 562, 0, 563,
	564, 565, 0, 0, 0, 0, 0, 566, 567, 569,
	0, 570, 571, 572, 573, 568, 574, 575, 576, 577,
	578, 579, 1582, 580, 581, 582, 1312, 583, 584, 585,
	586, 587, 726, 588, 0, 589, 590, 597, 598, 599,
	591, 592, 593, 600, 601, 602, 603, 604, 1583, 606,
	607, 605, 608, 609, 610, 1584, 611, 612, 594, 595,
	613, 614, 1313, 615, 616, 617, 618, 619, 620, 621,
	727, 0, 622, 1585, 623, 624, 625, 626, 627, 629,
	596, 630, 635, 636, 728, 631, 632, 633, 634, 729,
	638, 639, 640, 1586, 641, 642, 0, 637, 628, 1587,
	643, 644, 645, 646, 647, 648, 0, 649, 650, 1588,
	651, 730, 731, 732, 733, 1589, 662, 1590, 652, 654,
	655, 656, 734, 657, 735, 1591, 658, 659, 660, 661,
	653, 663, 664, 1592, 1593, 665, 666, 668, 670, 671,
	667, 669, 672, 1594, 673, 1595, 0, 674, 675, 676,
	736, 737, 738, 1596, 678, 677, 679, 680, 681, 739,
	682, 683, 1597, 1598, 1599, 1600, 684, 685, 740, 686,
	687, 688, 0, 0, 0, 0, 0, 0, 0, 0,
	1516, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2822, 297, 298, 300,
	299, 301, 302, 303, 304, 1522, 305, 306, 1523, 1524,
	1525, 0, 1526, 689, 1527, 1528, 1529, 307, 1530, 308,
	309, 1297, 310, 311, 312, 313, 314, 315, 316, 690,
	691, 0, 317, 692, 318, 693, 1531, 694, 319, 320,
	321, 322, 323, 324, 1532, 1533, 0, 325, 695, 696,
	697, 1534, 326, 327, 698, 1535, 1602, 1536, 328, 329,
	330, 331, 332, 333, 334, 335, 0, 1537, 337, 338,
	339, 336, 340, 1538, 341, 0, 342, 343, 344, 345,
	346, 347, 1539, 348, 349, 350, 1298, 351, 352, 353,
	1540, 1541, 1543, 1542, 1544, 1545, 1546, 354, 355, 356,
	357, 358, 0, 359, 361, 699, 700, 1547, 364, 360,
	362, 1548, 365, 363, 366, 1549, 367, 368, 369, 1550,
	1551, 370, 371, 372, 1552, 373, 374, 375, 1553, 376,
	377, 378, 1554, 379, 380, 701, 381, 382, 383, 385,
	387, 384, 386, 388, 389, 390, 391, 702, 703, 392,
	1555, 294, 1556, 0, 0, 0, 0, 393, 394, 395,
	704, 0, 0, 0, 396, 1557, 397, 398, 399, 1558,
	400, 401, 1559, 1299, 402, 403, 404, 705, 706, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 1560, 414,
	707, 1561, 708, 415, 1562, 416, 417, 418, 419, 420,
	421, 422, 709, 710, 711, 511, 1301, 423, 424, 1563,
	425, 426, 427, 428, 429, 0, 0, 0, 295, 430,
	431, 432, 1564, 1300, 512, 433, 712, 713, 1565, 714,
	1566, 434, 435, 1302, 715, 1303, 436, 437, 438, 1304,
	439, 0, 0, 0, 440, 441, 442, 443, 444, 445,
	1567, 446, 448, 447, 1568, 449, 716, 1305, 450, 451,
	1306, 1569, 452, 453, 454, 455, 456, 457, 460, 1570,
	1571, 458, 459, 461, 462, 0, 463, 464, 466, 469,
	465, 467, 468, 470, 483, 484, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 486, 0,
	485, 1307, 487, 488, 489, 490, 491, 498, 500, 501,
	496, 497, 499, 502, 503, 505, 493, 494, 495, 1308,
	504, 492, 1572, 296, 1309, 506, 507, 508, 509, 1573,
	717, 510, 718, 513, 514, 1574, 0, 515, 0, 516,
	1575, 1576, 518, 519, 520, 1577, 1578, 521, 522, 719,
	1310, 523, 1311, 720, 524, 525, 517, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 1579, 535, 536, 721,
	537, 538, 539, 722, 540, 541, 542, 723, 543, 724,
	544, 545, 1580, 546, 547, 548, 0, 549, 550, 551,
	552, 553, 554, 555, 556, 725, 557, 558, 560, 559,
	561, 1581, 562, 0, 563, 564, 565, 0, 0, 0,
	0, 0, 566, 567, 569, 0, 570, 571, 572, 573,
	568, 574, 575, 576, 577, 578, 579, 1582, 580, 581,
	582, 1312, 583, 584, 585, 586, 587, 726, 588, 0,
	589, 590, 597, 598, 599, 591, 592, 593, 600, 601,
	602, 603, 604, 1583, 606, 607, 605, 608, 609, 610,
	1584, 611, 612, 594, 595, 613, 614, 1313, 615, 616,
	617, 618, 619, 620, 621, 727, 0, 622, 1585, 623,
	624, 625, 626, 627, 629, 596, 630, 635, 636, 728,
	631, 632, 633, 634, 729, 638, 639, 640, 1586, 641,
	642, 0, 637, 628, 1587, 643, 644, 645, 646, 647,
	648, 0, 649, 650, 1588, 651, 730, 731, 732, 733,
	1589, 662, 1590, 652, 654, 655, 656, 734, 657, 735,
	1591, 658, 659, 660, 661, 653, 663, 664, 1592, 1593,
	665, 666, 668, 670, 671, 667, 669, 672, 1594, 673,
	1595, 0, 674, 675, 676, 736, 737, 738, 1596, 678,
	677, 679, 680, 681, 739, 682, 683, 1597, 1598, 1599,
	1600, 684, 685, 740, 686, 687, 688, 0, 0, 0,
	0, 0, 0, 1513, 0, 1516, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2440, 297, 298, 300, 299, 301, 302, 303, 304,
	1522, 305, 306, 1523, 1524, 1525, 0, 1526, 689, 1527,
	1528, 1529, 307, 1530, 308, 309, 1297, 310, 311, 312,
	313, 314, 315, 316, 690, 691, 0, 317, 692, 318,
	693, 1531, 694, 319, 320, 321, 322, 323, 324, 1532,
	1533, 0, 325, 695, 696, 697, 1534, 326, 327, 698,
	1535, 1602, 1536, 328, 329, 330, 331, 332, 333, 334,
	335, 0, 1537, 337, 338, 339, 336, 340, 1538, 341,
	0, 342, 343, 344, 345, 346, 347, 1539, 348, 349,
	350, 1298, 351, 352, 353, 1540, 1541, 1543, 1542, 1544,
	1545, 1546, 354, 355, 356, 357, 358, 0, 359, 361,
	699, 700, 1547, 364, 360, 362, 1548, 365, 363, 366,
	1549, 367, 368, 369, 1550, 1551, 370, 371, 372, 1552,
	373, 374, 375, 1553, 376, 377, 378, 1554, 379, 380,
	701, 381, 382, 383, 385, 387, 384, 386, 388, 389,
	390, 391, 702, 703, 392, 1555, 294, 1556, 0, 0,
	0, 0, 393, 394, 395, 704, 0, 0, 0, 396,
	1557, 397, 398, 399, 1558, 400, 401, 1559, 1299, 402,
	403, 404, 705, 706, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 1560, 414, 707, 1561, 708, 415, 1562,
	416, 417, 418, 419, 420, 421, 422, 709, 710, 711,
	511, 1301, 423, 424, 1563, 425, 426, 427, 428, 429,
	0, 0, 0, 295, 430, 431, 432, 1564, 1300, 512,
	433, 712, 713, 1565, 714, 1566, 434, 435, 1302, 715,
	1303, 436, 437, 438, 1304, 439, 0, 0, 0, 440,
	441, 442, 443, 444, 445, 1567, 446, 448, 447, 1568,
	449, 716, 1305, 450, 451, 1306, 1569, 452, 453, 454,
	455, 456, 457, 460, 1570, 1571, 458, 459, 461, 462,
	0, 463, 464, 466, 469, 465, 467, 468, 470, 483,
	484, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 486, 0, 485, 1307, 487, 488, 489,
	490, 491, 498, 500, 501, 496, 497, 499, 502, 503,
	505, 493, 494, 495, 1308, 504, 492, 1572, 296, 1309,
	506, 507, 508, 509, 1573, 717, 510, 718, 513, 514,
	1574, 0, 515, 0, 516, 1575, 1576, 518, 519, 520,
	1577, 1578, 521, 522, 719, 1310, 523, 1311, 720, 524,
	525, 517, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 1579, 535, 536, 721, 537, 538, 539, 722, 540,
	541, 542, 723, 543, 724, 544, 545, 1580, 546, 547,
	548, 0, 549, 550, 551, 552, 553, 554, 555, 556,
	725, 557, 558, 560, 559, 561, 1581, 562, 0, 563,
	564, 565, 0, 0, 0, 0, 0, 566, 567, 569,
	0, 570, 571, 572, 573, 568, 574, 575, 576, 577,
	578, 579, 1582, 580, 581, 582, 1312, 583, 584, 585,
	586, 587, 726, 588, 0, 589, 590, 597, 598, 599,
	591, 592, 593, 600, 601, 602, 603, 604, 1583, 606,
	607, 605, 608, 609, 610, 1584, 611, 612, 594, 595,
	613, 614, 1313, 615, 616, 617, 618, 619, 620, 621,
	727, 0, 622, 1585, 623, 624, 625, 626, 627, 629,
	596, 630, 635, 636, 728, 631, 632, 633, 634, 729,
	638, 639, 640, 1586, 641, 642, 0, 637, 628, 1587,
	643, 644, 645, 646, 647, 648, 0, 649, 650, 1588,
	651, 730, 731, 732, 733, 1589, 662, 1590, 652, 654,
	655, 656, 734, 657, 735, 1591, 658, 659, 660, 661,
	653, 663, 664, 1592, 1593, 665, 666, 668, 670, 671,
	667, 669, 672, 1594, 673, 1595, 0, 674, 675, 676,
	736, 737, 738, 1596, 678, 677, 679, 680, 681, 739,
	682, 683, 1597, 1598, 1599, 1600, 684, 685, 740, 686,
	687, 688, 1516, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 297,
	298, 300, 299, 301, 302, 303, 304, 1522, 305, 306,
	1523, 1524, 1525, 0, 1526, 689, 1527, 1528, 1529, 307,
	1530, 308, 309, 1297, 310, 311, 312, 313, 314, 315,
	316, 690, 691, 0, 317, 692, 318, 693, 1531, 694,
	319, 320, 321, 322, 323, 324, 1532, 1533, 0, 325,
	695, 696, 697, 1534, 326, 327, 698, 1535, 1602, 1536,
	328, 329, 330, 331, 332, 333, 334, 335, 0, 1537,
	337, 338, 339, 336, 340, 1538, 341, 0, 342, 343,
	344, 345, 346, 347, 1539, 348, 349, 350, 1298, 351,
	352, 353, 1540, 1541, 1543, 1542, 1544, 1545, 1546, 354,
	355, 356, 357, 358, 0, 359, 361, 699, 700, 1547,
	364, 360, 362, 1548, 365, 363, 366, 1549, 367, 368,
	369, 1550, 1551, 370, 371, 372, 1552, 373, 374, 375,
	1553, 376, 377, 378, 1554, 379, 380, 701, 381, 382,
	383, 385, 387, 384, 386, 388, 389, 390, 391, 702,
	703, 392, 1555, 294, 1556, 0, 0, 0, 0, 393,
	394, 395, 704, 0, 0, 0, 396, 1557, 397, 398,
	399, 1558, 400, 401, 1559, 1299, 402, 403, 404, 705,
	706, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	1560, 414, 707, 1561, 708, 415, 1562, 416, 417, 418,
	419, 420, 421, 422, 709, 710, 711, 511, 1301, 423,
	424, 1563, 425, 426, 427, 428, 429, 0, 0, 0,
	295, 430, 431, 432, 1564, 1300, 512, 433, 712, 713,
	1565, 714, 1566, 434, 435, 1302, 715, 1303, 436, 437,
	438, 1304, 439, 0, 0, 0, 440, 441, 442, 443,
	444, 445, 1567, 446, 448, 447, 1568, 449, 716, 1305,
	450, 451, 1306, 1569, 452, 453, 454, 455, 456, 457,
	460, 1570, 1571, 458, 459, 461, 462, 0, 463, 464,
	466, 469, 465, 467, 468, 470, 483, 484, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	486, 0, 485, 1307, 487, 488, 489, 490, 491, 498,
	500, 501, 496, 497, 499, 502, 503, 505, 493, 494,
	495, 1308, 504, 492, 1572, 296, 1309, 506, 507, 508,
	509, 1573, 717, 510, 718, 513, 514, 1574, 0, 515,
	0, 516, 1575, 1576, 518, 519, 520, 1577, 1578, 521,
	522, 719, 1310, 523, 1311, 720, 524, 525, 517, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 1579, 535,
	536, 721, 537, 538, 539, 722, 540, 541, 542, 723,
	543, 724, 544, 545, 1580, 546, 547, 548, 0, 549,
	550, 551, 552, 553, 554, 555, 556, 725, 557, 558,
	560, 559, 561, 1581, 562, 0, 563, 564, 565, 0,
	0, 0, 0, 0, 566, 567, 569, 0, 570, 571,
	572, 573, 568, 574, 575, 576, 577, 578, 579, 1582,
	580, 581, 582, 1312, 583, 584, 585, 586, 587, 726,
	588, 0, 589, 590, 597, 598, 599, 591, 592, 593,
	600, 601, 602, 603, 604, 1583, 606, 607, 605, 608,
	609, 610, 1584, 611, 612, 594, 595, 613, 614, 1313,
	615, 616, 617, 618, 619, 620, 621, 727, 0, 622,
	1585, 623, 624, 625, 626, 627, 629, 596, 630, 635,
	636, 728, 631, 632, 633, 634, 729, 638, 639, 640,
	1586, 641, 642, 0, 637, 628, 1587, 643, 644, 645,
	646, 647, 648, 0, 649, 650, 1588, 651, 730, 731,
	732, 733, 1589, 662, 1590, 652, 654, 655, 656, 734,
	657, 735, 1591, 658, 659, 660, 661, 653, 663, 664,
	1592, 1593, 665, 666, 668, 670, 671, 667, 669, 672,
	1594, 673, 1595, 0, 674, 675, 676, 736, 737, 738,
	1596, 678, 677, 679, 680, 681, 739, 682, 683, 1597,
	1598, 1599, 1600, 684, 685, 740, 686, 687, 688, 2797,
	0, 1233, 1205, 1206, 1207, 1203, 1204, 1216, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 297, 298,
	300, 299, 301, 302, 303, 304, 2794, 305, 306, 0,
	0, 0, 0, 0, 1257, 1221, 0, 0, 307, 0,
	308, 309, 1297, 310, 311, 312, 313, 314, 315, 316,
	690, 1270, 0, 317, 1277, 318, 1276, 0, 1287, 319,
	320, 321, 322, 323, 324, 1223, 1256, 1188, 325, 1317,
	1318, 697, 0, 326, 327, 1263, 0, 1244, 0, 328,
	329, 330, 331, 332, 333, 334, 335, 0, 0, 337,
	338, 339, 336, 340, 0, 341, 0, 342, 343, 344,
	345, 346, 347, 0, 348, 349, 350, 1298, 351, 352,
	353, 1247, 1245, 1246, 1253, 1249, 1248, 1252, 354, 355,
	356, 357, 358, 1280, 359, 361, 1274, 1273, 1193, 364,
	360, 362, 0, 365, 363, 366, 0, 367, 368, 369,
	2795, 0, 370, 1265, 372, 0, 373, 374, 375, 0,
	376, 377, 378, 0, 379, 380, 1199, 381, 382, 383,
	385, 387, 384, 386, 388, 389, 390, 391, 1288, 1289,
	392, 1212, 294, 0, 0, 0, 0, 0, 393, 394,
	395, 1272, 0, 0, 0, 396, 0, 397, 398, 399,
	0, 400, 401, 0, 1299, 402, 403, 404, 1285, 1286,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 0,
	414, 1295, 0, 1222, 415, 0, 416, 417, 418, 419,
	420, 421, 422, 1258, 1259, 1262, 511, 1301, 423, 424,
	0, 425, 426, 427, 428, 429, 0, 0, 0, 295,
	430, 431, 432, 0, 1300, 512, 433, 1267, 1268, 0,
	1228, 0, 434, 435, 1302, 1260, 1303, 436, 437, 438,
	1304, 439, 0, 0, 0, 440, 441, 442, 443, 444,
	445, 0, 446, 448, 447, 0, 449, 1296, 1305, 450,
	451, 1306, 0, 452, 453, 454, 455, 456, 457, 460,
	1251, 1250, 458, 459, 461, 462, 0, 463, 464, 466,
	469, 465, 467, 468, 470, 483, 484, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 486,
	0, 485, 1307, 487, 488, 489, 490, 491, 498, 500,
	501, 496, 497, 499, 502, 503, 505, 493, 494, 495,
	1308, 504, 492, 1190, 296, 1309, 506, 507, 508, 509,
	1213, 1261, 510, 1275, 513, 514, 0, 0, 515, 0,
	516, 0, 0, 518, 519, 520, 0, 0, 521, 522,
	719, 1310, 523, 1311, 1290, 524, 525, 1200, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 0, 535, 536,
	721, 537, 538, 539, 722, 540, 541, 542, 1291, 543,
	724, 544, 545, 0, 546, 547, 548, 0, 549, 550,
	551, 552, 553, 554, 555, 556, 1271, 557, 558, 560,
	559, 561, 0, 562, 0, 563, 564, 565, 0, 0,
	0, 0, 0, 566, 567, 569, 0, 570, 571, 572,
	573, 568, 574, 575, 576, 577, 578, 579, 0, 580,
	581, 582, 1312, 583, 584, 585, 586, 587, 1201, 588,
	0, 589, 590, 597, 598, 599, 591, 592, 593, 600,
	601, 602, 603, 604, 0, 606, 607, 605, 608, 609,
	610, 1254, 611, 612, 594, 595, 613, 614, 1313, 615,
	616, 617, 618, 619, 620, 621, 1269, 0, 622, 0,
	623, 624, 625, 626, 627, 629, 596, 630, 635, 636,
	1316, 631, 632, 633, 634, 1292, 638, 639, 640, 0,
	641, 642, 1187, 637, 628, 0, 643, 644, 645, 646,
	647, 648, 0, 649, 650, 0, 651, 1281, 1282, 1283,
	1284, 0, 662, 0, 652, 654, 655, 656, 1293, 657,
	1294, 1211, 658, 659, 660, 661, 653, 663, 664, 0,
	1194, 665, 666, 668, 670, 671, 667, 669, 672, 1255,
	673, 0, 0, 674, 675, 676, 736, 1278, 1315, 2793,
	678, 677, 679, 680, 681, 739, 682, 683, 0, 0,
	0, 0, 684, 685, 740, 686, 687, 688, 1191, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1186, 0, 0, 0, 0, 0, 0,
	1184, 1185, 2796, 0, 0, 0, 0, 0, 0, 0,
	1217, 2792, 0, 1175, 1215, 1233, 1205, 1206, 1207, 1203,
	1204, 1216, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 297, 298, 300, 299, 301, 302, 303, 304,
	0, 305, 306, 0, 0, 0, 0, 0, 1257, 1221,
	0, 0, 307, 0, 308, 309, 1297, 310, 311, 312,
	313, 314, 315, 316, 690, 1270, 0, 317, 1277, 318,
	1276, 0, 1287, 319, 320, 321, 322, 323, 324, 1223,
	1256, 1188, 325, 1317, 1318, 697, 0, 326, 327, 1263,
	0, 1244, 0, 328, 329, 330, 331, 332, 333, 334,
	335, 0, 0, 337, 338, 339, 336, 340, 0, 341,
	0, 342, 343, 344, 345, 346, 347, 0, 348, 349,
	350, 1298, 351, 352, 353, 1247, 1245, 1246, 1253, 1249,
	1248, 1252, 354, 355, 356, 357, 358, 1280, 359, 361,
	1274, 1273, 1193, 364, 360, 362, 0, 365, 363, 366,
	0, 367, 368, 369, 0, 0, 370, 1265, 372, 0,
	373, 374, 375, 0, 376, 377, 378, 0, 379, 380,
	1199, 381, 382, 383, 385, 387, 384, 386, 388, 389,
	390, 391, 1288, 1289, 392, 1212, 294, 0, 0, 0,
	0, 0, 393, 394, 395, 1272, 0, 0, 0, 396,
	0, 397, 398, 399, 0, 400, 401, 0, 1299, 402,
	403, 404, 1285, 1286, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 0, 414, 1295, 0, 1222, 415, 0,
	416, 417, 418, 419, 420, 421, 422, 1258, 1259, 1262,
	511, 1301, 423, 424, 0, 425, 426, 427, 428, 429,
	0, 0, 0, 295, 430, 431, 432, 0, 1300, 512,
	433, 1267, 1268, 0, 1228, 0, 434, 435, 1302, 1260,
	1303, 436, 437, 438, 1304, 439, 0, 0, 0, 440,
	441, 442, 443, 444, 445, 0, 446, 448, 447, 0,
	449, 1296, 1305, 450, 451, 1306, 0, 452, 453, 454,
	455, 456, 457, 460, 1251, 1250, 458, 459, 461, 462,
	0, 463, 464, 466, 469, 465, 467, 468, 470, 483,
	484, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 486, 0, 485, 1307, 487, 488, 489,
	490, 491, 498, 500, 501, 496, 497, 499, 502, 503,
	505, 493, 494, 495, 1308, 504, 492, 1190, 296, 1309,
	506, 507, 508, 509, 1213, 1261, 510, 1275, 513, 514,
	0, 0, 515, 0, 516, 0, 0, 518, 519, 520,
	0, 0, 521, 522, 719, 1310, 523, 1311, 1290, 524,
	525, 1200, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 0, 535, 536, 721, 537, 538, 539, 722, 540,
	541, 542, 1291, 543, 724, 544, 545, 0, 546, 547,
	548, 0, 549, 550, 551, 552, 553, 554, 555, 556,
	1271, 557, 558, 560, 559, 561, 0, 562, 0, 563,
	564, 565, 0, 0, 0, 0, 0, 566, 567, 569,
	0, 570, 571, 572, 573, 568, 574, 575, 576, 577,
	578, 579, 0, 580, 581, 582, 1312, 583, 584, 585,
	586, 587, 1201, 588, 0, 589, 590, 597, 598, 599,
	591, 592, 593, 600, 601, 602, 603, 604, 252, 606,
	607, 605, 608, 609, 610, 1254, 611, 612, 594, 595,
	613, 614, 1313, 615, 616, 617, 618, 619, 620, 621,
	1269, 0, 622, 0, 623, 624, 625, 626, 627, 629,
	596, 630, 635, 636, 1316, 631, 632, 633, 634, 1292,
	638, 639, 640, 0, 641, 642, 1187, 637, 628, 254,
	643, 644, 645, 646, 647, 648, 0, 649, 650, 0,
	651, 1281, 1282, 1283, 1284, 0, 662, 0, 652, 654,
	655, 656, 1293, 657, 1294, 1211, 658, 659, 660, 661,
	653, 663, 664, 0, 1194, 665, 666, 668, 670, 671,
	667, 669, 672, 1255, 673, 0, 0, 674, 675, 676,
	1761, 1278, 1315, 0, 678, 677, 679, 680, 681, 739,
	682, 683, 0, 0, 0, 246, 684, 685, 740, 686,
	687, 688, 1191, 0, 247, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1186, 0, 0,
	0, 0, 0, 0, 1184, 1185, 1233, 1205, 1206, 1207,
	1203, 1204, 1216, 0, 2031, 2029, 0, 0, 1215, 0,
	0, 0, 0, 297, 298, 300, 299, 301, 302, 303,
	304, 0, 305, 306, 0, 0, 0, 0, 0, 1257,
	1221, 0, 0, 307, 0, 308, 309, 1297, 310, 311,
	312, 313, 314, 315, 316, 690, 1270, 0, 317, 1277,
	318, 1276, 0, 1287, 319, 320, 321, 322, 323, 324,
	1223, 1256, 1188, 325, 1317, 1318, 697, 0, 326, 327,
	1263, 0, 1244, 0, 328, 329, 330, 331, 332, 333,
	334, 335, 0, 0, 337, 338, 339, 336, 340, 0,
	341, 0, 342, 343, 344, 345, 346, 347, 0, 348,
	349, 350, 1298, 351, 352, 353, 1247, 1245, 1246, 1253,
	1249, 1248, 1252, 354, 355, 356, 357, 358, 1280, 359,
	361, 1274, 1273, 1193, 364, 360, 362, 0, 365, 363,
	366, 0, 367, 368, 369, 0, 0, 370, 1265, 372,
	0, 373, 374, 375, 0, 376, 377, 378, 0, 379,
	380, 1199, 381, 382, 383, 385, 387, 384, 386, 388,
	389, 390, 391, 1288, 1289, 392, 1212, 294, 0, 0,
	0, 0, 0, 393, 394, 395, 1272, 0, 0, 0,
	396, 0, 397, 398, 399, 0, 400, 401, 0, 1299,
	402, 403, 404, 1285, 1286, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 0, 414, 1295, 0, 1222, 415,
	0, 416, 417, 418, 419, 420, 421, 422, 1258, 1259,
	1262, 511, 1301, 423, 424, 0, 425, 426, 427, 428,
	429, 0, 0, 0, 295, 430, 431, 432, 0, 1300,
	512, 433, 1267, 1268, 0, 1228, 0, 434, 435, 1302,
	1260, 1303, 436, 437, 438, 1304, 439, 0, 0, 0,
	440, 441, 442, 443, 444, 445, 0, 446, 448, 447,
	0, 449, 1296, 1305, 450, 451, 1306, 0, 452, 453,
	454, 455, 456, 457, 460, 1251, 1250, 458, 459, 461,
	462, 0, 463, 464, 466, 469, 465, 467, 468, 470,
	483, 484, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 486, 0, 485, 1307, 487, 488,
	489, 490, 491, 498, 500, 501, 496, 497, 499, 502,
	503, 505, 493, 494, 495, 1308, 504, 492, 1190, 296,
	1309, 506, 507, 508, 509, 1213, 1261, 510, 1275, 513,
	514, 0, 0, 515, 0, 516, 0, 0, 518, 519,
	520, 0, 0, 521, 522, 719, 1310, 523, 1311, 1290,
	524, 525, 1200, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 0, 535, 536, 721, 537, 538, 539, 722,
	540, 541, 542, 1291, 543, 724, 544, 545, 0, 546,
	547, 548, 0, 549, 550, 551, 552, 553, 554, 555,
	556, 1271, 557, 558, 560, 559, 561, 0, 562, 0,
	563, 564, 565, 0, 0, 0, 0, 0, 566, 567,
	569, 0, 570, 571, 572, 573, 568, 574, 575, 576,
	577, 578, 579, 0, 580, 581, 582, 1312, 583, 584,
	585, 586, 587, 1201, 588, 0, 589, 590, 597, 598,
	599, 591, 592, 593, 600, 601, 602, 603, 604, 252,
	606, 607, 605, 608, 609, 610, 1254, 611, 612, 594,
	595, 613, 614, 1313, 615, 616, 617, 618, 619, 620,
	621, 1269, 0, 622, 0, 623, 624, 625, 626, 627,
	629, 596, 630, 635, 636, 1316, 631, 632, 633, 634,
	1292, 638, 639, 640, 0, 641, 642, 1187, 637, 628,
	254, 643, 644, 645, 646, 647, 648, 0, 649, 650,
	0, 651, 1281, 1282, 1283, 1284, 0, 662, 0, 652,
	654, 655, 656, 1293, 657, 1294, 1211, 658, 659, 660,
	661, 653, 663, 664, 0, 1194, 665, 666, 668, 670,
	671, 667, 669, 672, 1255, 673, 0, 0, 674, 675,
	676, 1761, 1278, 1315, 0, 678, 677, 679, 680, 681,
	739, 682, 683, 0, 0, 0, 246, 684, 685, 740,
	686, 687, 688, 1191, 0, 247, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1186, 0,
	0, 0, 0, 0, 0, 1184, 1185, 1233, 1205, 1206,
	1207, 1203, 1204, 1216, 0, 2031, 3470, 0, 0, 1215,
	0, 0, 0, 0, 297, 298, 300, 299, 301, 302,
	303, 304, 0, 305, 306, 0, 0, 0, 0, 0,
	1257, 1221, 0, 0, 307, 0, 308, 309, 1297, 310,
	311, 312, 313, 314, 315, 316, 690, 1270, 0, 317,
	1277, 318, 1276, 0, 1287, 319, 320, 321, 322, 323,
	324, 1223, 1256, 1188, 325, 1317, 1318, 697, 0, 326,
	327, 1263, 0, 1244, 0, 328, 329, 330, 331, 332,
	333, 334, 335, 0, 0, 337, 338, 339, 336, 340,
	0, 341, 0, 342, 343, 344, 345, 346, 347, 0,
	348, 349, 350, 1298, 351, 352, 353, 1247, 1245, 1246,
	1253, 1249, 1248, 1252, 354, 355, 356, 357, 358, 1280,
	359, 361, 1274, 1273, 1193, 364, 360, 362, 0, 365,
	363, 366, 0, 367, 368, 369, 0, 0, 370, 1265,
	372, 0, 373, 374, 375, 0, 376, 377, 378, 0,
	379, 380, 1199, 381, 382, 383, 385, 387, 384, 386,
	388, 389, 390, 391, 1288, 1289, 392, 1212, 294, 0,
	0, 0, 0, 0, 393, 394, 395, 1272, 0, 0,
	0, 396, 0, 397, 398, 399, 0, 400, 401, 0,
	1299, 402, 403, 404, 1285, 1286, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 0, 414, 1295, 0, 1222,
	415, 0, 416, 417, 418, 419, 420, 421, 422, 1258,
	1259, 1262, 511, 1301, 423, 424, 0, 425, 426, 427,
	428, 429, 0, 0, 0, 295, 430, 431, 432, 0,
	1300, 512, 433, 1267, 1268, 0, 1228, 0, 434, 435,
	1302, 1260, 1303, 436, 437, 438, 1304, 439, 0, 0,
	0, 440, 441, 442, 443, 444, 445, 0, 446, 448,
	447, 0, 449, 1296, 1305, 450, 451, 1306, 0, 452,
	453, 454, 455, 456, 457, 460, 1251, 1250, 458, 459,
	461, 462, 0, 463, 464, 466, 469, 465, 467, 468,
	470, 483, 484, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 486, 0, 485, 1307, 487,
	488, 489, 490, 491, 498, 500, 501, 496, 497, 499,
	502, 503, 505, 493, 494, 495, 1308, 504, 492, 1190,
	296, 1309, 506, 507, 508, 509, 1213, 1261, 510, 1275,
	513, 514, 0, 0, 515, 0, 516, 0, 0, 518,
	519, 520, 0, 0, 521, 522, 719, 1310, 523, 1311,
	1290, 524, 525, 1200, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 0, 535, 536, 721, 537, 538, 539,
	722, 540, 541, 542, 1291, 543, 724, 544, 545, 0,
	546, 547, 548, 0, 549, 550, 551, 552, 553, 554,
	555, 556, 1271, 557, 558, 560, 559, 561, 0, 562,
	0, 563, 564, 565, 0, 0, 0, 0, 0, 566,
	567, 569, 0, 570, 571, 572, 573, 568, 574, 575,
	576, 577, 578, 579, 0, 580, 581, 582, 1312, 583,
	584, 585, 586, 587, 1201, 588, 0, 589, 590, 597,
	598, 599, 591, 592, 593, 600, 601, 602, 603, 604,
	252, 606, 607, 605, 608, 609, 610, 1254, 611, 612,
	594, 595, 613, 614, 1313, 615, 616, 617, 618, 619,
	620, 621, 1269, 0, 622, 0, 623, 624, 625, 626,
	627, 629, 596, 630, 635, 636, 1316, 631, 632, 633,
	634, 1292, 638, 639, 640, 0, 641, 642, 1187, 637,
	628, 254, 643, 644, 645, 646, 647, 648, 0, 649,
	650, 0, 651, 1281, 1282, 1283, 1284, 0, 662, 0,
	652, 654, 655, 656, 1293, 657, 1294, 1211, 658, 659,
	660, 661, 653, 663, 664, 0, 1194, 665, 666, 668,
	670, 671, 667, 669, 672, 1255, 673, 0, 0, 674,
	675, 676, 1761, 1278, 1315, 0, 678, 677, 679, 680,
	681, 739, 682, 683, 0, 0, 0, 246, 684, 685,
	740, 686, 687, 688, 1191, 0, 247, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1186,
	0, 0, 0, 0, 0, 0, 1184, 1185, 1233, 1205,
	1206, 1207, 1203, 1204, 1216, 0, 2031, 2029, 0, 0,
	1215, 0, 0, 0, 0, 297, 298, 300, 299, 301,
	302, 303, 304, 0, 305, 306, 0, 0, 0, 0,
	0, 1257, 1221, 0, 0, 307, 0, 308, 309, 1297,
	310, 311, 312, 313, 314, 315, 316, 690, 1270, 0,
	317, 1277, 318, 1276, 2927, 1287, 319, 320, 321, 322,
	323, 324, 1223, 1256, 1188, 325, 1317, 1318, 697, 0,
	326, 327, 1263, 0, 1244, 0, 328, 329, 330, 331,
	332, 333, 334, 335, 0, 0, 337, 338, 339, 336,
	340, 0, 341, 0, 342, 343, 344, 345, 346, 347,
	0, 348, 349, 350, 1298, 351, 352, 353, 1247, 1245,
	1246, 1253, 1249, 1248, 1252, 354, 355, 356, 357, 358,
	1280, 359, 361, 1274, 1273, 1193, 364, 360, 362, 0,
	365, 363, 366, 0, 367, 368, 369, 0, 0, 370,
	1265, 372, 0, 373, 374, 375, 0, 376, 377, 378,
	0, 379, 380, 1199, 381, 382, 383, 385, 387, 384,
	386, 388, 389, 390, 391, 1288, 1289, 392, 1212, 294,
	0, 0, 0, 0, 0, 393, 394, 395, 1272, 0,
	0, 0, 396, 0, 397, 398, 399, 0, 400, 401,
	2932, 1299, 402, 403, 404, 1285, 1286, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 0, 414, 1295, 0,
	1222, 415, 0, 416, 417, 418, 419, 420, 421, 422,
	1258, 1259, 1262, 511, 1301, 423, 424, 0, 425, 426,
	427, 428, 429, 0, 0, 0, 295, 430, 431, 432,
	0, 1300, 512, 433, 1267, 1268, 0, 1228, 0, 434,
	435, 1302, 1260, 1303, 436, 437, 438, 1304, 439, 0,
	0, 0, 440, 441, 442, 443, 444, 445, 0, 446,
	448, 447, 2928, 449, 1296, 1305, 450, 451, 1306, 0,
	452, 453, 454, 455, 456, 457, 460, 1251, 1250, 458,
	459, 461, 462, 0, 463, 464, 466, 469, 465, 467,
	468, 470, 483, 484, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 486, 0, 485, 1307,
	487, 488, 489, 490, 491, 498, 500, 501, 496, 497,
	499, 502, 503, 505, 493, 494, 495, 1308, 504, 492,
	1190, 296, 1309, 506, 507, 508, 509, 1213, 1261, 510,
	1275, 513, 514, 0, 0, 515, 0, 516, 0, 0,
	518, 519, 520, 0, 0, 521, 522, 719, 1310, 523,
	1311, 1290, 524, 525, 1200, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 0, 535, 536, 721, 537, 538,
	539, 722, 540, 541, 542, 1291, 543, 724, 544, 545,
	0, 546, 547, 548, 0, 549, 550, 551, 552, 553,
	554, 555, 556, 1271, 557, 558, 560, 559, 561, 0,
	562, 0, 563, 564, 565, 0, 0, 0, 0, 0,
	566, 567, 569, 0, 570, 571, 572, 573, 568, 574,
	575, 576, 577, 578, 579, 0, 580, 581, 582, 1312,
	583, 584, 585, 586, 587, 1201, 588, 0, 589, 590,
	597, 598, 599, 591, 592, 593, 600, 601, 602, 603,
	604, 0, 606, 607, 605, 608, 609, 610, 1254, 611,
	612, 594, 595, 613, 614, 1313, 615, 616, 617, 618,
	619, 620, 621, 1269, 0, 622, 0, 623, 624, 625,
	626, 627, 629, 596, 630, 635, 636, 1316, 631, 632,
	633, 634, 1292, 638, 639, 640, 0, 641, 642, 1187,
	637, 628, 0, 643, 644, 645, 646, 647, 648, 0,
	649, 650, 0, 651, 1281, 1282, 1283, 1284, 0, 662,
	2929, 652, 654, 655, 656, 1293, 657, 1294, 1211, 658,
	659, 660, 661, 653, 663, 664, 0, 1194, 665, 666,
	668, 670, 671, 667, 669, 672, 1255, 673, 0, 0,
	674, 675, 676, 736, 1278, 1315, 0, 678, 677, 679,
	680, 681, 739, 682, 683, 0, 0, 0, 0, 684,
	685, 740, 686, 687, 688, 1191, 0, 0, 0, 0,
	2842, 0, 1233, 1205, 1206, 1207, 1203, 1204, 1216, 0,
	1186, 0, 0, 0, 0, 0, 0, 1184, 1185, 297,
	298, 300, 299, 301, 302, 303, 304, 1217, 305, 306,
	0, 1215, 0, 0, 0, 1257, 1221, 0, 0, 307,
	0, 308, 309, 1297, 310, 311, 312, 313, 314, 315,
	316, 690, 1270, 0, 317, 1277, 318, 1276, 0, 1287,
	319, 320, 321, 322, 323, 324, 1223, 1256, 1188, 325,
	1317, 1318, 697, 0, 326, 327, 1263, 0, 1244, 0,
	328, 329, 330, 331, 332, 333, 334, 335, 0, 0,
	337, 338, 339, 336, 340, 0, 341, 0, 342, 343,
	344, 345, 346, 347, 0, 348, 349, 350, 1298, 351,
	352, 353, 1247, 1245, 1246, 1253, 1249, 1248, 1252, 354,
	355, 356, 357, 358, 1280, 359, 361, 1274, 1273, 1193,
	364, 360, 362, 0, 365, 363, 366, 0, 367, 368,
	369, 0, 0, 370, 1265, 372, 0, 373, 374, 375,
	0, 376, 377, 378, 0, 379, 380, 1199, 381, 382,
	383, 385, 387, 384, 386, 388, 389, 390, 391, 1288,
	1289, 392, 1212, 294, 0, 0, 0, 0, 0, 393,
	394, 395, 1272, 0, 0, 0, 396, 0, 397, 398,
	399, 0, 400, 401, 0, 1299, 402, 403, 404, 1285,
	1286, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	0, 414, 1295, 0, 1222, 415, 0, 416, 417, 418,
	419, 420, 421, 422, 1258, 1259, 1262, 511, 1301, 423,
	424, 0, 425, 426, 427, 428, 429, 0, 0, 0,
	295, 430, 431, 432, 0, 1300, 512, 433, 1267, 1268,
	0, 1228, 0, 434, 435, 1302, 1260, 1303, 436, 437,
	438, 1304, 439, 0, 0, 0, 440, 441, 442, 443,
	444, 445, 0, 446, 448, 447, 0, 449, 1296, 1305,
	450, 451, 1306, 0, 452, 453, 454, 455, 456, 457,
	460, 1251, 1250, 458, 459, 461, 462, 0, 463, 464,
	466, 469, 465, 467, 468, 470, 483, 484, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	486, 0, 485, 1307, 487, 488, 489, 490, 491, 498,
	500, 501, 496, 497, 499, 502, 503, 505, 493, 494,
	495, 1308, 504, 492, 1190, 296, 1309, 506, 507, 508,
	509, 1213, 1261, 510, 1275, 513, 514, 0, 0, 515,
	0, 516, 0, 0, 518, 519, 520, 0, 0, 521,
	522, 719, 1310, 523, 1311, 1290, 524, 525, 1200, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 0, 535,
	536, 721, 537, 538, 539, 722, 540, 541, 542, 1291,
	543, 724, 544, 545, 0, 546, 547, 548, 0, 549,
	550, 551, 552, 553, 554, 555, 556, 1271, 557, 558,
	560, 559, 561, 0, 562, 0, 563, 564, 565, 0,
	0, 0, 0, 0, 566, 567, 569, 0, 570, 571,
	572, 573, 568, 574, 575, 576, 577, 578, 579, 0,
	580, 581, 582, 1312, 583, 584, 585, 586, 587, 1201,
	588, 0, 589, 590, 597, 598, 599, 591, 592, 593,
	600, 601, 602, 603, 604, 0, 606, 607, 605, 608,
	609, 610, 1254, 611, 612, 594, 595, 613, 614, 1313,
	615, 616, 617, 618, 619, 620, 621, 1269, 0, 622,
	0, 623, 624, 625, 626, 627, 629, 596, 630, 635,
	636, 1316, 631, 632, 633, 634, 1292, 638, 639, 640,
	0, 641, 642, 1187, 637, 628, 0, 643, 644, 645,
	646, 647, 648, 0, 649, 650, 0, 651, 1281, 1282,
	1283, 1284, 0, 662, 0, 652, 654, 655, 656, 1293,
	657, 1294, 1211, 658, 659, 660, 661, 653, 663, 664,
	0, 1194, 665, 666, 668, 670, 671, 667, 669, 672,
	1255, 673, 0, 0, 674, 675, 676, 736, 1278, 1315,
	0, 678, 677, 679, 680, 681, 739, 682, 683, 0,
	0, 0, 0, 684, 685, 740, 686, 687, 688, 1191,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1186, 0, 0, 0, 0, 0,
	0, 1184, 1185, 0, 0, 0, 0, 0, 0, 0,
	0, 1217, 2840, 0, 2839, 1215, 1233, 1205, 1206, 1207,
	1203, 1204, 1216, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 297, 298, 300, 299, 301, 302, 303,
	304, 0, 305, 306, 0, 0, 0, 0, 0, 1257,
	1221, 0, 0, 307, 0, 308, 309, 1297, 310, 311,
	312, 313, 314, 315, 316, 690, 1270, 0, 317, 1277,
	318, 1276, 0, 1287, 319, 320, 321, 322, 323, 324,
	1223, 1256, 1188, 325, 1317, 1318, 697, 0, 326, 327,
	1263, 0, 1244, 0, 328, 329, 330, 331, 332, 333,
	334, 335, 0, 0, 337, 338, 339, 336, 340, 0,
	341, 0, 342, 343, 344, 345, 346, 347, 0, 348,
	349, 350, 1298, 351, 352, 353, 1247, 1245, 1246, 1253,
	1249, 1248, 1252, 354, 355, 356, 357, 358, 1280, 359,
	361, 1274, 1273, 1193, 364, 360, 362, 0, 365, 363,
	366, 0, 367, 368, 369, 0, 0, 370, 1265, 372,
	0, 373, 374, 375, 0, 376, 377, 378, 0, 379,
	380, 1199, 381, 382, 383, 385, 387, 384, 386, 388,
	389, 390, 391, 1288, 1289, 392, 1212, 294, 0, 0,
	0, 0, 0, 393, 394, 395, 1272, 0, 0, 0,
	396, 0, 397, 398, 399, 0, 400, 401, 0, 1299,
	402, 403, 404, 1285, 1286, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 0, 414, 1295, 0, 1222, 415,
	0, 416, 417, 418, 419, 420, 421, 422, 1258, 1259,
	1262, 511, 1301, 423, 424, 0, 425, 426, 427, 428,
	429, 0, 0, 0, 295, 430, 431, 432, 0, 1300,
	512, 433, 1267, 1268, 0, 1228, 0, 434, 435, 1302,
	1260, 1303, 436, 437, 438, 1304, 439, 0, 0, 0,
	440, 441, 442, 443, 444, 445, 0, 446, 448, 447,
	0, 449, 1296, 1305, 450, 451, 1306, 0, 452, 453,
	454, 455, 456, 457, 460, 1251, 1250, 458, 459, 461,
	462, 0, 463, 464, 466, 469, 465, 467, 468, 470,
	483, 484, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 486, 0, 485, 1307, 487, 488,
	489, 490, 491, 498, 500, 501, 496, 497, 499, 502,
	503, 505, 493, 494, 495, 1308, 504, 492, 1190, 296,
	1309, 506, 507, 508, 509, 1213, 1261, 510, 1275, 513,
	514, 0, 0, 515, 0, 516, 0, 0, 518, 519,
	520, 0, 0, 521, 522, 719, 1310, 523, 1311, 1290,
	524, 525, 1200, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 0, 535, 536, 721, 537, 538, 539, 722,
	540, 541, 542, 1291, 543, 724, 544, 545, 0, 546,
	547, 548, 0, 549, 550, 551, 552, 553, 554, 555,
	556, 1271, 557, 558, 560, 559, 561, 0, 562, 0,
	563, 564, 565, 0, 0, 0, 0, 0, 566, 567,
	569, 0, 570, 571, 572, 573, 568, 574, 575, 576,
	577, 578, 579, 0, 580, 581, 582, 1312, 583, 584,
	585, 586, 587, 1201, 588, 0, 589, 590, 597, 598,
	599, 591, 592, 593, 600, 601, 602, 603, 604, 0,
	606, 607, 605, 608, 609, 610, 1254, 611, 612, 594,
	595, 613, 614, 1313, 615, 616, 617, 618, 619, 620,
	621, 1269, 0, 622, 0, 623, 624, 625, 626, 627,
	629, 596, 630, 635, 636, 1316, 631, 632, 633, 634,
	1292, 638, 639, 640, 0, 641, 642, 1187, 637, 628,
	0, 643, 644, 645, 646, 647, 648, 0, 649, 650,
	0, 651, 1281, 1282, 1283, 1284, 0, 662, 0, 652,
	654, 655, 656, 1293, 657, 1294, 1211, 658, 659, 660,
	661, 653, 663, 664, 0, 1194, 665, 666, 668, 670,
	671, 667, 669, 672, 1255, 673, 0, 0, 674, 675,
	676, 736, 1278, 1315, 0, 678, 677, 679, 680, 681,
	739, 682, 683, 0, 0, 0, 0, 684, 685, 740,
	686, 687, 688, 1191, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1186, 0,
	0, 0, 0, 0, 0, 1184, 1185, 0, 0, 0,
	0, 0, 0, 0, 0, 1217, 2837, 0, 2836, 1215,
	1233, 1205, 1206, 1207, 1203, 1204, 1216, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 297, 298, 300,
	299, 301, 302, 303, 304, 0, 305, 306, 0, 0,
	0, 0, 0, 1257, 1221, 0, 0, 307, 0, 308,
	309, 1297, 310, 311, 312, 313, 314, 315, 316, 690,
	1270, 0, 317, 1277, 318, 1276, 0, 1287, 319, 320,
	321, 322, 323, 324, 1223, 1256, 1188, 325, 1317, 1318,
	697, 0, 326, 327, 1263, 0, 1244, 0, 328, 329,
	330, 331, 332, 333, 334, 335, 0, 0, 337, 338,
	339, 336, 340, 0, 341, 0, 342, 343, 344, 345,
	346, 347, 0, 348, 349, 350, 1298, 351, 352, 353,
	1247, 1245, 1246, 1253, 1249, 1248, 1252, 354, 355, 356,
	357, 358, 1280, 359, 361, 1274, 1273, 1193, 364, 360,
	362, 0, 365, 363, 366, 0, 367, 368, 369, 0,
	0, 370, 1265, 372, 0, 373, 374, 375, 0, 376,
	377, 378, 0, 379, 380, 1199, 381, 382, 383, 385,
	387, 384, 386, 388, 389, 390, 391, 1288, 1289, 392,
	1212, 294, 0, 0, 0, 0, 0, 393, 394, 395,
	1272, 0, 0, 0, 396, 0, 397, 398, 399, 0,
	400, 401, 0, 1299, 402, 403, 404, 1285, 1286, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 0, 414,
	1295, 0, 1222, 415, 0, 416, 417, 418, 419, 420,
	421, 422, 1258, 1259, 1262, 511, 1301, 423, 424, 0,
	425, 426, 427, 428, 429, 0, 0, 0, 295, 430,
	431, 432, 0, 1300, 512, 433, 1267, 1268, 0, 1228,
	0, 434, 435, 1302, 1260, 1303, 436, 437, 438, 1304,
	439, 0, 0, 0, 440, 441, 442, 443, 444, 445,
	0, 446, 448, 447, 0, 449, 1296, 1305, 450, 451,
	1306, 0, 452, 453, 454, 455, 456, 457, 460, 1251,
	1250, 458, 459, 461, 462, 0, 463, 464, 466, 469,
	465, 467, 468, 470, 483, 484, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 486, 0,
	485, 1307, 487, 488, 489, 490, 491, 498, 500, 501,
	496, 497, 499, 502, 503, 505, 493, 494, 495, 1308,
	504, 492, 1190, 296, 1309, 506, 507, 508, 509, 1213,
	1261, 510, 1275, 513, 514, 0, 0, 515, 0, 516,
	0, 0, 518, 519, 520, 0, 0, 521, 522, 719,
	1310, 523, 1311, 1290, 524, 525, 1200, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 0, 535, 536, 721,
	537, 538, 539, 722, 540, 541, 542, 1291, 543, 724,
	544, 545, 0, 546, 547, 548, 0, 549, 550, 551,
	552, 553, 554, 555, 556, 1271, 557, 558, 560, 559,
	561, 0, 562, 0, 563, 564, 565, 0, 0, 0,
	0, 0, 566, 567, 569, 0, 570, 571, 572, 573,
	568, 574, 575, 576, 577, 578, 579, 0, 580, 581,
	582, 1312, 583, 584, 585, 586, 587, 1201, 588, 0,
	589, 590, 597, 598, 599, 591, 592, 593, 600, 601,
	602, 603, 604, 0, 606, 607, 605, 608, 609, 610,
	1254, 611, 612, 594, 595, 613, 614, 1313, 615, 616,
	617, 618, 619, 620, 621, 1269, 0, 622, 0, 623,
	624, 625, 626, 627, 629, 596, 630, 635, 636, 1316,
	631, 632, 633, 634, 1292, 638, 639, 640, 0, 641,
	642, 1187, 637, 628, 0, 643, 644, 645, 646, 647,
	648, 0, 649, 650, 0, 651, 1281, 1282, 1283, 1284,
	0, 662, 0, 652, 654, 655, 656, 1293, 657, 1294,
	1211, 658, 659, 660, 661, 653, 663, 664, 0, 1194,
	665, 666, 668, 670, 671, 667, 669, 672, 1255, 673,
	0, 0, 674, 675, 676, 736, 1278, 1315, 0, 678,
	677, 679, 680, 681, 739, 682, 683, 0, 0, 0,
	0, 684, 685, 740, 686, 687, 688, 1191, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1186, 0, 0, 0, 0, 0, 0, 1184,
	1185, 0, 0, 0, 0, 0, 0, 0, 0, 1217,
	2834, 0, 2833, 1215, 1233, 1205, 1206, 1207, 1203, 1204,
	1216, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 298, 300, 299, 301, 302, 303, 304, 0,
	305, 306, 0, 0, 0, 0, 0, 1257, 1221, 0,
	0, 307, 0, 308, 309, 1297, 310, 311, 312, 313,
	314, 315, 316, 690, 1270, 0, 317, 1277, 318, 1276,
	0, 1287, 319, 320, 321, 322, 323, 324, 1223, 1256,
	1188, 325, 1317, 1318, 697, 0, 326, 327, 1263, 0,
	1244, 0, 328, 329, 330, 331, 332, 333, 334, 335,
	0, 0, 337, 338, 339, 336, 340, 0, 341, 0,
	342, 343, 344, 345, 346, 347, 0, 348, 349, 350,
	1298, 351, 352, 353, 1247, 1245, 1246, 1253, 1249, 1248,
	1252, 354, 355, 356, 357, 358, 1280, 359, 361, 1274,
	1273, 1193, 364, 360, 362, 0, 365, 363, 366, 0,
	367, 368, 369, 0, 0, 370, 1265, 372, 0, 373,
	374, 375, 0, 376, 377, 378, 0, 379, 380, 1199,
	381, 382, 383, 385, 387, 384, 386, 388, 389, 390,
	391, 1288, 1289, 392, 1212, 294, 0, 0, 0, 0,
	0, 393, 394, 395, 1272, 0, 0, 0, 396, 0,
	397, 398, 399, 0, 400, 401, 0, 1299, 402, 403,
	404, 1285, 1286, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 0, 414, 1295, 0, 1222, 415, 0, 416,
	417, 418, 419, 420, 421, 422, 1258, 1259, 1262, 511,
	1301, 423, 424, 0, 425, 426, 427, 428, 429, 0,
	0, 0, 295, 430, 431, 432, 0, 1300, 512, 433,
	1267, 1268, 0, 1228, 0, 434, 435, 1302, 1260, 1303,
	436, 437, 438, 1304, 439, 0, 0, 0, 440, 441,
	442, 443, 444, 445, 0, 446, 448, 447, 0, 449,
	1296, 1305, 450, 451, 1306, 0, 452, 453, 454, 455,
	456, 457, 460, 1251, 1250, 458, 459, 461, 462, 0,
	463, 464, 466, 469, 465, 467, 468, 470, 483, 484,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 486, 0, 485, 1307, 487, 488, 489, 490,
	491, 498, 500, 501, 496, 497, 499, 502, 503, 505,
	493, 494, 495, 1308, 504, 492, 1190, 296, 1309, 506,
	507, 508, 509, 1213, 1261, 510, 1275, 513, 514, 0,
	0, 515, 0, 516, 0, 0, 518, 519, 520, 0,
	0, 521, 522, 719, 1310, 523, 1311, 1290, 524, 525,
	1200, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	0, 535, 536, 721, 537, 538, 539, 722, 540, 541,
	542, 1291, 543, 724, 544, 545, 0, 546, 547, 548,
	0, 549, 550, 551, 552, 553, 554, 555, 556, 1271,
	557, 558, 560, 559, 561, 0, 562, 0, 563, 564,
	565, 0, 0, 0, 0, 0, 566, 567, 569, 0,
	570, 571, 572, 573, 568, 574, 575, 576, 577, 578,
	579, 0, 580, 581, 582, 1312, 583, 584, 585, 586,
	587, 1201, 588, 0, 589, 590, 597, 598, 599, 591,
	592, 593, 600, 601, 602, 603, 604, 0, 606, 607,
	605, 608, 609, 610, 1254, 611, 612, 594, 595, 613,
	614, 1313, 615, 616, 617, 618, 619, 620, 621, 1269,
	0, 622, 0, 623, 624, 625, 626, 627, 629, 596,
	630, 635, 636, 1316, 631, 632, 633, 634, 1292, 638,
	639, 640, 0, 641, 642, 1187, 637, 628, 0, 643,
	644, 645, 646, 647, 648, 0, 649, 650, 0, 651,
	1281, 1282, 1283, 1284, 0, 662, 0, 652, 654, 655,
	656, 1293, 657, 1294, 1211, 658, 659, 660, 661, 653,
	663, 664, 0, 1194, 665, 666, 668, 670, 671, 667,
	669, 672, 1255, 673, 0, 0, 674, 675, 676, 736,
	1278, 1315, 0, 678, 677, 679, 680, 681, 739, 682,
	683, 0, 0, 0, 0, 684, 685, 740, 686, 687,
	688, 1191, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1186, 0, 0, 0,
	0, 0, 0, 1184, 1185, 0, 0, 0, 0, 0,
	0, 0, 0, 1217, 2831, 0, 1863, 1215, 1233, 1205,
	1206, 1207, 1203, 1204, 1216, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 297, 298, 300, 299, 301,
	302, 303, 304, 0, 305, 306, 0, 0, 0, 0,
	0, 1257, 1221, 0, 0, 307, 0, 308, 309, 1297,
	310, 311, 312, 313, 314, 315, 316, 690, 1270, 0,
	317, 1277, 318, 1276, 0, 1287, 319, 320, 321, 322,
	323, 324, 1223, 1256, 1188, 325, 1317, 1318, 697, 0,
	326, 327, 1263, 0, 1244, 0, 328, 329, 330, 331,
	332, 333, 334, 335, 0, 0, 337, 338, 339, 336,
	340, 0, 341, 0, 342, 343, 344, 345, 346, 347,
	0, 348, 349, 350, 1298, 351, 352, 353, 1247, 1245,
	1246, 1253, 1249, 1248, 1252, 354, 355, 356, 357, 358,
	1280, 359, 361, 1274, 1273, 1193, 364, 360, 362, 0,
	365, 363, 366, 0, 367, 368, 369, 0, 0, 370,
	1265, 372, 0, 373, 374, 375, 0, 376, 377, 378,
	0, 379, 380, 1199, 381, 382, 383, 385, 387, 384,
	386, 388, 389, 390, 391, 1288, 1289, 392, 1212, 294,
	0, 0, 0, 0, 0, 393, 394, 395, 1272, 0,
	0, 0, 396, 0, 397, 398, 399, 0, 400, 401,
	0, 1299, 402, 403, 404, 1285, 1286, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 0, 414, 1295, 0,
	1222, 415, 0, 416, 417, 418, 419, 420, 421, 422,
	1258, 1259, 1262, 511, 1301, 423, 424, 0, 425, 426,
	427, 428, 429, 0, 0, 0, 295, 430, 431, 432,
	0, 1300, 512, 433, 1267, 1268, 0, 1228, 0, 434,
	435, 1302, 1260, 1303, 436, 437, 438, 1304, 439, 0,
	0, 0, 440, 441, 442, 443, 444, 445, 0, 446,
	448, 447, 0, 449, 1296, 1305, 450, 451, 1306, 0,
	452, 453, 454, 455, 456, 457, 460, 1251, 1250, 458,
	459, 461, 462, 0, 463, 464, 466, 469, 465, 467,
	468, 470, 483, 484, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 486, 0, 485, 1307,
	487, 488, 489, 490, 491, 498, 500, 501, 496, 497,
	499, 502, 503, 505, 493, 494, 495, 1308, 504, 492,
	1190, 296, 1309, 506, 507, 508, 509, 1213, 1261, 510,
	1275, 513, 514, 0, 0, 515, 0, 516, 0, 0,
	518, 519, 520, 0, 0, 521, 522, 719, 1310, 523,
	1311, 1290, 524, 525, 1200, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 0, 535, 536, 721, 537, 538,
	539, 722, 540, 541, 542, 1291, 543, 724, 544, 545,
	0, 546, 547, 548, 0, 549, 550, 551, 552, 553,
	554, 555, 556, 1271, 557, 558, 560, 559, 561, 0,
	562, 0, 563, 564, 565, 0, 0, 0, 0, 0,
	566, 567, 569, 0, 570, 571, 572, 573, 568, 574,
	575, 576, 577, 578, 579, 0, 580, 581, 582, 1312,
	583, 584, 585, 586, 587, 1201, 588, 0, 589, 590,
	597, 598, 599, 591, 592, 593, 600, 601, 602, 603,
	604, 0, 606, 607, 605, 608, 609, 610, 1254, 611,
	612, 594, 595, 613, 614, 1313, 615, 616, 617, 618,
	619, 620, 621, 1269, 0, 622, 0, 623, 624, 625,
	626, 627, 629, 596, 630, 635, 636, 1316, 631, 632,
	633, 634, 1292, 638, 639, 640, 0, 641, 642, 1187,
	637, 628, 0, 643, 644, 645, 646, 647, 648, 0,
	649, 650, 0, 651, 1281, 1282, 1283, 1284, 0, 662,
	0, 652, 654, 655, 656, 1293, 657, 1294, 1211, 658,
	659, 660, 661, 653, 663, 664, 0, 1194, 665, 666,
	668, 670, 671, 667, 669, 672, 1255, 673, 0, 0,
	674, 675, 676, 736, 1278, 1315, 0, 678, 677, 679,
	680, 681, 739, 682, 683, 1862, 0, 0, 0, 684,
	685, 740, 686, 687, 688, 1191, 0, 0, 0, 0,
	1180, 0, 1233, 1205, 1206, 1207, 1203, 1204, 1216, 0,
	1186, 0, 0, 0, 0, 0, 0, 1184, 1185, 297,
	298, 300, 299, 301, 302, 303, 304, 1217, 305, 306,
	0, 1215, 0, 0, 0, 1257, 1221, 0, 0, 307,
	0, 308, 309, 1297, 310, 311, 312, 313, 314, 315,
	316, 690, 1270, 0, 317, 1277, 318, 1276, 0, 1287,
	319, 320, 321, 322, 323, 324, 1223, 1256, 1188, 325,
	1317, 1318, 697, 0, 326, 327, 1263, 0, 1244, 0,
	328, 329, 330, 331, 332, 333, 334, 335, 0, 0,
	337, 338, 339, 336, 340, 0, 341, 0, 342, 343,
	344, 345, 346, 347, 0, 348, 349, 350, 1298, 351,
	352, 353, 1247, 1245, 1246, 1253, 1249, 1248, 1252, 354,
	355, 356, 357, 358, 1280, 359, 361, 1274, 1273, 1193,
	364, 360, 362, 0, 365, 363, 366, 0, 367, 368,
	369, 0, 0, 370, 1265, 372, 0, 373, 374, 375,
	0, 376, 377, 378, 0, 379, 380, 1199, 381, 382,
	383, 385, 387, 384, 386, 388, 389, 390, 391, 1288,
	1289, 392, 1212, 294, 0, 0, 0, 0, 0, 393,
	394, 395, 1272, 0, 0, 0, 396, 0, 397, 398,
	399, 0, 400, 401, 0, 1299, 402, 403, 404, 1285,
	1286, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	0, 414, 1295, 0, 1222, 415, 0, 416, 417, 418,
	419, 420, 421, 422, 1258, 1259, 1262, 511, 1301, 423,
	424, 0, 425, 426, 427, 428, 429, 0, 0, 0,
	295, 430, 431, 432, 0, 1300, 512, 433, 1267, 1268,
	0, 1228, 0, 434, 435, 1302, 1260, 1303, 436, 437,
	438, 1304, 439, 0, 0, 0, 440, 441, 442, 443,
	444, 445, 0, 446, 448, 447, 0, 449, 1296, 1305,
	450, 451, 1306, 0, 452, 453, 454, 455, 456, 457,
	460, 1251, 1250, 458, 459, 461, 462, 0, 463, 464,
	466, 469, 465, 467, 468, 470, 483, 484, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	486, 0, 485, 1307, 487, 488, 489, 490, 491, 498,
	500, 501, 496, 497, 499, 502, 503, 505, 493, 494,
	495, 1308, 504, 492, 1190, 296, 1309, 506, 507, 508,
	509, 1213, 1261, 510, 1275, 513, 514, 0, 0, 515,
	0, 516, 1195, 0, 518, 519, 520, 0, 0, 521,
	522, 719, 1310, 523, 1311, 1290, 524, 525, 1200, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 0, 535,
	536, 721, 537, 538, 539, 722, 540, 541, 542, 1291,
	543, 724, 544, 545, 0, 546, 547, 548, 0, 549,
	550, 551, 552, 553, 554, 555, 556, 1271, 557, 558,
	560, 559, 561, 0, 562, 0, 563, 564, 565, 0,
	0, 0, 0, 0, 566, 567, 569, 0, 570, 571,
	572, 573, 568, 574, 575, 576, 577, 578, 579, 0,
	580, 581, 582, 1312, 583, 584, 585, 586, 587, 1201,
	588, 0, 589, 590, 597, 598, 599, 591, 592, 593,
	600, 601, 602, 603, 604, 0, 606, 607, 605, 608,
	609, 610, 1254, 611, 612, 594, 595, 613, 614, 1313,
	615, 616, 617, 618, 619, 620, 621, 1269, 0, 622,
	0, 623, 624, 625, 626, 627, 629, 596, 630, 635,
	636, 1316, 631, 632, 633, 634, 1292, 638, 639, 640,
	0, 641, 642, 1187, 637, 628, 0, 643, 644, 645,
	646, 647, 648, 0, 649, 650, 0, 651, 1281, 1282,
	1283, 1284, 0, 662, 0, 652, 654, 655, 656, 1293,
	657, 1294, 1211, 658, 659, 660, 661, 653, 663, 664,
	0, 1194, 665, 666, 668, 670, 671, 667, 669, 672,
	1255, 673, 0, 0, 674, 675, 676, 736, 1278, 1315,
	0, 678, 677, 679, 680, 681, 739, 682, 683, 0,
	0, 0, 0, 684, 685, 740, 686, 687, 688, 1191,
	0, 0, 0, 0, 0, 0, 1233, 1205, 1206, 1207,
	1203, 1204, 1216, 0, 1186, 0, 0, 0, 0, 0,
	0, 1184, 1185, 297, 298, 300, 299, 301, 302, 303,
	304, 1217, 305, 306, 0, 1215, 0, 0, 0, 1257,
	1221, 0, 0, 307, 0, 308, 309, 1297, 310, 311,
	312, 313, 314, 315, 316, 690, 1270, 0, 317, 1277,
	318, 1276, 0, 1287, 319, 320, 321, 322, 323, 324,
	1223, 1256, 1188, 325, 1317, 1318, 697, 0, 326, 327,
	1263, 0, 1244, 0, 328, 329, 330, 331, 332, 333,
	334, 335, 0, 0, 337, 338, 339, 336, 340, 0,
	341, 0, 342, 343, 344, 345, 5080, 347, 0, 348,
	349, 350, 1298, 351, 352, 353, 1247, 1245, 1246, 1253,
	1249, 1248, 1252, 354, 355, 356, 357, 358, 1280, 359,
	361, 1274, 1273, 1193, 364, 360, 362, 0, 365, 363,
	366, 0, 367, 368, 369, 0, 0, 370, 1265, 372,
	0, 373, 374, 375, 0, 376, 377, 378, 0, 379,
	380, 1199, 381, 382, 383, 385, 387, 384, 386, 388,
	389, 390, 391, 1288, 1289, 392, 1212, 294, 0, 0,
	0, 0, 0, 393, 394, 395, 1272, 0, 0, 0,
	396, 0, 397, 398, 399, 0, 400, 401, 0, 1299,
	402, 403, 404, 1285, 1286, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 0, 414, 1295, 0, 1222, 415,
	0, 416, 417, 418, 419, 420, 421, 422, 1258, 1259,
	1262, 511, 1301, 423, 424, 0, 425, 426, 427, 428,
	429, 0, 0, 0, 295, 430, 431, 432, 0, 1300,
	512, 433, 1267, 1268, 0, 1228, 0, 434, 435, 1302,
	1260, 1303, 436, 437, 438, 1304, 439, 0, 0, 0,
	440, 441, 442, 443, 444, 445, 0, 446, 448, 447,
	0, 449, 1296, 1305, 450, 451, 1306, 0, 452, 453,
	454, 455, 456, 457, 460, 1251, 1250, 458, 459, 461,
	462, 0, 463, 464, 466, 469, 465, 467, 468, 470,
	483, 484, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 486, 0, 485, 1307, 487, 488,
	489, 490, 491, 498, 500, 501, 496, 497, 499, 502,
	503, 505, 493, 494, 495, 1308, 504, 492, 1190, 296,
	1309, 506, 507, 508, 509, 1213, 1261, 510, 1275, 513,
	514, 0, 0, 515, 0, 516, 1195, 0, 518, 519,
	520, 0, 0, 521, 522, 719, 1310, 523, 1311, 1290,
	524, 525, 1200, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 0, 535, 536, 721, 537, 538, 539, 722,
	540, 541, 542, 1291, 543, 724, 544, 545, 0, 546,
	547, 548, 0, 549, 550, 551, 552, 553, 554, 555,
	556, 1271, 557, 558, 560, 559, 561, 0, 562, 0,
	563, 564, 565, 0, 0, 0, 0, 0, 566, 567,
	569, 0, 570, 571, 572, 573, 568, 574, 575, 576,
	577, 578, 579, 0, 580, 581, 582, 1312, 583, 584,
	585, 586, 587, 1201, 588, 0, 589, 590, 597, 598,
	599, 591, 592, 593, 600, 601, 602, 603, 604, 0,
	606, 607, 605, 608, 609, 610, 1254, 611, 612, 594,
	595, 613, 614, 1313, 615, 616, 617, 618, 619, 620,
	621, 1269, 0, 622, 0, 623, 624, 625, 626, 627,
	629, 596, 630, 635, 636, 1316, 631, 632, 633, 634,
	1292, 638, 639, 640, 0, 641, 642, 1187, 637, 628,
	0, 643, 644, 645, 646, 647, 648, 0, 649, 650,
	0, 651, 1281, 1282, 1283, 1284, 0, 662, 0, 652,
	654, 655, 656, 1293, 657, 1294, 1211, 658, 659, 660,
	661, 653, 663, 664, 0, 1194, 665, 666, 668, 670,
	671, 667, 669, 672, 1255, 673, 0, 0, 674, 675,
	676, 736, 1278, 1315, 0, 678, 677, 679, 680, 681,
	739, 682, 683, 0, 0, 0, 0, 684, 685, 740,
	686, 687, 688, 1191, 0, 0, 0, 0, 0, 0,
	1233, 1205, 1206, 1207, 1203, 1204, 1216, 0, 1186, 0,
	0, 0, 0, 0, 0, 1184, 1185, 297, 298, 300,
	299, 301, 302, 303, 304, 1217, 305, 306, 0, 1215,
	0, 0, 0, 1257, 1221, 0, 0, 307, 0, 308,
	309, 1297, 310, 311, 312, 313, 314, 315, 316, 690,
	1270, 0, 317, 1277, 318, 1276, 0, 1287, 319, 320,
	321, 322, 323, 324, 1223, 1256, 1188, 325, 1317, 1318,
	697, 0, 326, 327, 1263, 0, 1244, 0, 328, 329,
	330, 331, 332, 333, 334, 335, 0, 0, 337, 338,
	339, 336, 340, 0, 341, 0, 342, 343, 344, 345,
	346, 347, 0, 348, 349, 350, 1298, 351, 352, 353,
	1247, 1245, 1246, 1253, 1249, 1248, 1252, 354, 355, 356,
	357, 358, 1280, 359, 361, 1274, 1273, 1193, 364, 360,
	362, 0, 365, 363, 366, 0, 367, 368, 369, 0,
	0, 370, 1265, 372, 0, 373, 374, 375, 0, 376,
	377, 378, 0, 379, 380, 1199, 381, 382, 383, 385,
	387, 384, 386, 388, 389, 390, 391, 1288, 1289, 392,
	1212, 294, 0, 0, 0, 0, 0, 393, 394, 395,
	1272, 0, 0, 0, 396, 0, 397, 398, 399, 0,
	400, 401, 0, 1299, 402, 403, 404, 1285, 1286, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 0, 414,
	1295, 0, 1222, 415, 0, 416, 417, 418, 419, 420,
	421, 422, 1258, 1259, 1262, 511, 1301, 423, 424, 0,
	425, 426, 427, 428, 429, 0, 0, 0, 2672, 430,
	431, 432, 0, 1300, 512, 433, 1267, 1268, 0, 1228,
	0, 434, 435, 1302, 1260, 1303, 436, 437, 438, 1304,
	439, 0, 0, 0, 440, 441, 442, 443, 444, 445,
	0, 446, 448, 447, 0, 449, 1296, 1305, 450, 451,
	1306, 0, 452, 453, 454, 455, 456, 457, 460, 1251,
	1250, 458, 459, 461, 462, 0, 463, 464, 466, 469,
	465, 467, 468, 470, 483, 484, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 486, 0,
	485, 1307, 487, 488, 489, 490, 491, 498, 500, 501,
	496, 497, 499, 502, 503, 505, 493, 494, 495, 1308,
	504, 492, 1190, 296, 1309, 506, 507, 508, 509, 1213,
	1261, 510, 1275, 513, 514, 0, 0, 515, 0, 516,
	0, 0, 518, 519, 520, 0, 0, 521, 522, 719,
	1310, 523, 1311, 1290, 524, 525, 1200, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 0, 535, 536, 721,
	537, 538, 539, 722, 540, 541, 542, 1291, 543, 724,
	544, 545, 2671, 546, 547, 548, 0, 549, 550, 551,
	552, 553, 554, 555, 556, 1271, 557, 558, 560, 559,
	561, 0, 562, 0, 563, 564, 565, 0, 0, 0,
	0, 0, 566, 567, 569, 0, 570, 571, 572, 573,
	568, 574, 575, 576, 577, 578, 579, 0, 580, 581,
	582, 1312, 583, 584, 585, 586, 587, 1201, 588, 0,
	589, 590, 597, 598, 599, 591, 592, 593, 600, 601,
	602, 603, 604, 0, 606, 607, 605, 608, 609, 610,
	1254, 611, 612, 594, 595, 613, 614, 1313, 615, 616,
	617, 618, 619, 620, 621, 1269, 0, 622, 0, 623,
	624, 625, 626, 627, 629, 596, 630, 635, 636, 1316,
	631, 632, 633, 634, 1292, 638, 639, 640, 0, 641,
	642, 1187, 637, 628, 0, 643, 644, 645, 646, 647,
	648, 0, 649, 650, 0, 651, 1281, 1282, 1283, 1284,
	0, 662, 0, 652, 654, 655, 656, 1293, 657, 1294,
	1211, 658, 659, 660, 661, 653, 663, 664, 0, 1194,
	665, 666, 668, 670, 671, 667, 669, 672, 1255, 673,
	0, 0, 674, 675, 676, 736, 1278, 1315, 0, 678,
	677, 679, 680, 681, 739, 682, 683, 0, 0, 0,
	0, 684, 685, 740, 686, 687, 688, 1191, 0, 0,
	0, 0, 0, 0, 1233, 1205, 1206, 1207, 1203, 1204,
	1216, 0, 1186, 0, 0, 0, 0, 0, 0, 1184,
	1185, 297, 298, 300, 299, 301, 302, 303, 304, 1217,
	305, 306, 0, 1215, 0, 0, 0, 1257, 1221, 0,
	0, 307, 0, 308, 309, 1297, 310, 311, 312, 313,
	314, 315, 316, 690, 1270, 0, 317, 1277, 318, 1276,
	0, 1287, 319, 320, 321, 322, 323, 324, 1223, 1256,
	1188, 325, 1317, 1318, 697, 0, 326, 327, 1263, 0,
	1244, 0, 328, 329, 330, 331, 332, 333, 334, 335,
	0, 0, 337, 338, 339, 336, 340, 0, 341, 0,
	342, 343, 344, 345, 4800, 347, 0, 348, 349, 350,
	1298, 351, 352, 353, 1247, 1245, 1246, 1253, 1249, 1248,
	1252, 354, 355, 356, 357, 358, 1280, 359, 361, 1274,
	1273, 1193, 364, 360, 362, 0, 365, 363, 366, 0,
	367, 368, 369, 0, 0, 370, 1265, 372, 0, 373,
	374, 375, 0, 376, 377, 378, 0, 379, 380, 1199,
	381, 382, 383, 385, 387, 384, 386, 388, 389, 390,
	391, 1288, 1289, 392, 1212, 294, 0, 0, 0, 0,
	0, 393, 394, 395, 1272, 0, 0, 0, 396, 0,
	397, 398, 399, 0, 400, 401, 0, 1299, 402, 403,
	404, 1285, 1286, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 0, 414, 1295, 0, 1222, 415, 0, 416,
	417, 418, 419, 420, 421, 422, 1258, 1259, 1262, 511,
	1301, 423, 424, 0, 425, 426, 427, 428, 429, 0,
	0, 0, 295, 430, 431, 432, 0, 1300, 512, 433,
	1267, 1268, 0, 1228, 0, 434, 435, 1302, 1260, 1303,
	436, 437, 438, 1304, 439, 0, 0, 0, 440, 441,
	442, 443, 444, 445, 0, 446, 448, 447, 0, 449,
	1296, 1305, 450, 451, 1306, 0, 452, 453, 454, 455,
	456, 457, 460, 1251, 1250, 458, 459, 461, 462, 0,
	463, 464, 466, 469, 465, 467, 468, 470, 483, 484,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 486, 0, 485, 1307, 487, 488, 489, 490,
	491, 498, 500, 501, 496, 497, 499, 502, 503, 505,
	493, 494, 495, 1308, 504, 492, 1190, 296, 1309, 506,
	507, 508, 509, 1213, 1261, 510, 1275, 513, 514, 0,
	0, 515, 0, 516, 1195, 0, 518, 519, 520, 0,
	0, 521, 522, 719, 1310, 523, 1311, 1290, 524, 525,
	1200, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	0, 535, 536, 721, 537, 538, 539, 722, 540, 541,
	542, 1291, 543, 724, 544, 545, 0, 546, 547, 548,
	0, 549, 550, 551, 552, 553, 554, 555, 556, 1271,
	557, 558, 560, 559, 561, 0, 562, 0, 563, 564,
	565, 0, 0, 0, 0, 0, 566, 567, 569, 0,
	570, 571, 572, 573, 568, 574, 575, 576, 577, 578,
	579, 0, 580, 581, 582, 1312, 583, 584, 585, 586,
	587, 1201, 588, 0, 589, 590, 597, 598, 599, 591,
	592, 593, 600, 601, 602, 603, 604, 0, 606, 607,
	605, 608, 609, 610, 1254, 611, 612, 594, 595, 613,
	614, 1313, 615, 616, 617, 618, 619, 620, 621, 1269,
	0, 622, 0, 623, 624, 625, 626, 627, 629, 596,
	630, 635, 636, 1316, 631, 632, 633, 634, 1292, 638,
	639, 640, 0, 641, 642, 1187, 637, 628, 0, 643,
	644, 645, 646, 647, 648, 0, 649, 650, 0, 651,
	1281, 1282, 1283, 1284, 0, 662, 0, 652, 654, 655,
	656, 1293, 657, 1294, 1211, 658, 659, 660, 661, 653,
	663, 664, 0, 1194, 665, 666, 668, 670, 671, 667,
	669, 672, 1255, 673, 0, 0, 674, 675, 676, 736,
	1278, 1315, 0, 678, 677, 679, 680, 681, 739, 682,
	683, 0, 0, 0, 0, 684, 685, 740, 686, 687,
	688, 1191, 0, 0, 0, 0, 0, 0, 1233, 1205,
	1206, 1207, 1203, 1204, 1216, 0, 1186, 0, 0, 0,
	0, 0, 0, 1184, 1185, 297, 298, 300, 299, 301,
	302, 303, 304, 1217, 305, 306, 0, 1215, 0, 0,
	0, 1257, 1221, 0, 0, 307, 0, 308, 309, 1297,
	310, 311, 312, 313, 314, 315, 316, 690, 1270, 0,
	317, 1277, 318, 1276, 0, 1287, 319, 320, 321, 322,
	323, 324, 1223, 1256, 1188, 325, 1317, 1318, 697, 0,
	326, 327, 1263, 0, 1244, 0, 328, 329, 330, 331,
	332, 333, 334, 335, 0, 0, 337, 338, 339, 336,
	340, 0, 341, 0, 342, 343, 344, 345, 346, 347,
	0, 348, 349, 350, 1298, 351, 352, 353, 1247, 1245,
	1246, 1253, 1249, 1248, 1252, 354, 355, 356, 357, 358,
	1280, 359, 361, 1274, 1273, 1193, 364, 360, 362, 0,
	365, 363, 366, 0, 367, 368, 369, 0, 0, 370,
	1265, 372, 0, 373, 374, 375, 0, 376, 377, 378,
	0, 379, 380, 1199, 381, 382, 383, 385, 387, 384,
	386, 388, 389, 390, 391, 1288, 1289, 392, 1212, 294,
	0, 0, 0, 0, 0, 393, 394, 395, 1272, 0,
	0, 0, 396, 0, 397, 398, 399, 0, 400, 401,
	0, 1299, 402, 403, 404, 1285, 1286, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 0, 414, 1295, 0,
	1222, 415, 0, 416, 417, 418, 419, 420, 421, 422,
	1258, 1259, 1262, 511, 1301, 423, 424, 0, 425, 426,
	427, 428, 429, 0, 0, 0, 295, 430, 431, 432,
	0, 1300, 512, 433, 1267, 1268, 0, 1228, 0, 434,
	435, 1302, 1260, 1303, 436, 437, 438, 1304, 439, 0,
	0, 0, 440, 441, 442, 443, 444, 445, 0, 446,
	448, 447, 0, 449, 1296, 1305, 450, 451, 1306, 0,
	452, 453, 454, 455, 456, 457, 460, 1251, 1250, 458,
	459, 461, 462, 0, 463, 464, 466, 469, 465, 467,
	468, 470, 483, 484, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 486, 0, 485, 1307,
	487, 488, 489, 490, 491, 498, 500, 501, 496, 497,
	499, 502, 503, 505, 493, 494, 495, 1308, 504, 492,
	1190, 296, 1309, 506, 507, 508, 509, 1213, 1261, 510,
	1275, 513, 514, 0, 0, 515, 0, 516, 1195, 0,
	518, 519, 520, 0, 0, 521, 522, 719, 1310, 523,
	1311, 1290, 524, 525, 1200, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 0, 535, 536, 721, 537, 538,
	539, 722, 540, 541, 542, 1291, 543, 724, 544, 545,
	0, 546, 547, 548, 0, 549, 550, 551, 552, 553,
	554, 555, 556, 1271, 557, 558, 560, 559, 561, 0,
	562, 0, 563, 564, 565, 0, 0, 0, 0, 0,
	566, 567, 569, 0, 570, 571, 572, 573, 568, 574,
	575, 576, 577, 578, 579, 0, 580, 581, 582, 1312,
	583, 584, 585, 586, 587, 1201, 588, 0, 589, 590,
	597, 598, 599, 591, 592, 593, 600, 601, 602, 603,
	604, 0, 606, 607, 605, 608, 609, 610, 1254, 611,
	612, 594, 595, 613, 614, 1313, 615, 616, 617, 618,
	619, 620, 621, 1269, 0, 622, 0, 623, 624, 625,
	626, 627, 629, 596, 630, 635, 636, 1316, 631, 632,
	633, 634, 1292, 638, 639, 640, 0, 641, 642, 1187,
	637, 628, 0, 643, 644, 645, 646, 647, 648, 0,
	649, 650, 0, 651, 1281, 1282, 1283, 1284, 0, 662,
	0, 652, 654, 655, 656, 1293, 657, 1294, 1211, 658,
	659, 660, 661, 653, 663, 664, 0, 1194, 665, 666,
	668, 670, 671, 667, 669, 672, 1255, 673, 0, 0,
	674, 675, 676, 736, 1278, 1315, 0, 678, 677, 679,
	680, 681, 739, 682, 683, 0, 0, 0, 0, 684,
	685, 740, 686, 687, 688, 1191, 0, 0, 0, 0,
	0, 0, 1233, 1205, 1206, 1207, 1203, 1204, 1216, 0,
	1186, 0, 0, 0, 0, 0, 0, 1184, 1185, 297,
	298, 300, 299, 301, 302, 303, 304, 1217, 305, 306,
	0, 1215, 0, 0, 0, 1257, 1221, 0, 0, 307,
	0, 308, 309, 1297, 310, 311, 312, 313, 314, 315,
	316, 690, 1270, 0, 317, 1277, 318, 1276, 0, 1287,
	319, 320, 321, 322, 323, 324, 1223, 1256, 1188, 325,
	1317, 1318, 697, 0, 326, 327, 1263, 0, 1244, 0,
	328, 329, 330, 331, 332, 333, 334, 335, 0, 0,
	337, 338, 339, 336, 340, 0, 341, 0, 342, 343,
	344, 345, 346, 347, 0, 348, 349, 350, 1298, 351,
	352, 353, 1247, 1245, 1246, 1253, 1249, 1248, 1252, 354,
	355, 356, 357, 358, 1280, 359, 361, 1274, 1273, 1193,
	364, 360, 362, 0, 365, 363, 366, 0, 367, 368,
	369, 0, 0, 370, 1265, 372, 0, 373, 374, 375,
	0, 376, 377, 378, 0, 379, 380, 1199, 381, 382,
	383, 385, 387, 384, 386, 388, 389, 390, 391, 1288,
	1289, 392, 1212, 294, 0, 0, 0, 0, 0, 393,
	394, 395, 1272, 0, 0, 0, 396, 0, 397, 398,
	399, 0, 400, 401, 0, 1299, 402, 403, 404, 1285,
	1286, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	0, 414, 1295, 0, 1222, 415, 0, 416, 417, 418,
	419, 420, 421, 422, 1258, 1259, 1262, 511, 1301, 423,
	424, 0, 425, 426, 427, 428, 429, 0, 0, 0,
	295, 430, 431, 432, 0, 1300, 512, 433, 1267, 1268,
	0, 1228, 0, 434, 435, 1302, 1260, 1303, 436, 437,
	438, 1304, 439, 0, 0, 0, 440, 441, 442, 443,
	444, 445, 0, 446, 448, 447, 0, 449, 1296, 1305,
	450, 451, 1306, 0, 452, 453, 454, 455, 456, 457,
	460, 1251, 1250, 458, 459, 461, 462, 0, 463, 464,
	466, 469, 465, 467, 468, 470, 483, 484, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	486, 0, 485, 1307, 487, 488, 489, 490, 491, 498,
	500, 501, 496, 497, 499, 502, 503, 505, 493, 494,
	495, 1308, 504, 492, 1190, 4352, 1309, 506, 507, 508,
	509, 1213, 1261, 510, 1275, 513, 514, 0, 0, 515,
	0, 516, 0, 0, 518, 519, 520, 0, 0, 521,
	522, 719, 1310, 523, 1311, 1290, 524, 525, 1200, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 0, 535,
	536, 721, 537, 538, 539, 722, 540, 541, 542, 1291,
	543, 724, 544, 545, 0, 546, 547, 548, 0, 549,
	550, 551, 552, 553, 554, 555, 556, 1271, 557, 558,
	560, 559, 561, 0, 562, 0, 563, 564, 565, 0,
	0, 0, 0, 0, 566, 567, 569, 0, 570, 571,
	572, 573, 568, 574, 575, 576, 577, 578, 579, 0,
	580, 581, 582, 1312, 583, 584, 585, 586, 587, 1201,
	588, 0, 589, 590, 597, 598, 599, 591, 592, 593,
	600, 601, 602, 603, 604, 0, 606, 607, 605, 608,
	609, 610, 1254, 611, 612, 594, 595, 613, 614, 1313,
	615, 616, 617, 618, 619, 620, 621, 1269, 0, 622,
	0, 623, 624, 625, 626, 627, 629, 596, 630, 635,
	636, 1316, 631, 632, 633, 634, 1292, 638, 639, 640,
	0, 641, 642, 1187, 637, 628, 0, 643, 644, 645,
	646, 647, 648, 0, 649, 650, 0, 651, 1281, 1282,
	1283, 1284, 0, 662, 0, 652, 654, 655, 656, 1293,
	657, 1294, 1211, 658, 659, 660, 661, 653, 663, 664,
	0, 1194, 665, 666, 668, 670, 671, 667, 669, 672,
	1255, 673, 0, 0, 674, 675, 676, 736, 1278, 1315,
	0, 678, 677, 679, 680, 681, 739, 682, 683, 0,
	0, 0, 0, 684, 685, 740, 686, 687, 688, 1191,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1186, 0, 0, 0, 0, 0,
	0, 1184, 1185, 2101, 1233, 1205, 1206, 1207, 1203, 1204,
	1216, 1217, 0, 0, 0, 1215, 0, 0, 0, 0,
	0, 297, 298, 300, 299, 301, 302, 303, 304, 0,
	305, 306, 0, 0, 0, 0, 0, 1257, 1221, 0,
	0, 307, 0, 308, 309, 1297, 310, 311, 312, 313,
	314, 315, 316, 690, 1270, 0, 317, 1277, 318, 1276,
	0, 1287, 319, 320, 321, 322, 323, 324, 1223, 1256,
	1188, 325, 1317, 1318, 697, 0, 326, 327, 1263, 0,
	1244, 0, 328, 329, 330, 331, 332, 333, 334, 335,
	0, 0, 337, 338, 339, 336, 340, 0, 341, 0,
	342, 343, 344, 345, 346, 347, 0, 348, 349, 350,
	1298, 351, 352, 353, 1247, 1245, 1246, 1253, 1249, 1248,
	1252, 354, 355, 356, 357, 358, 1280, 359, 361, 1274,
	1273, 1193, 364, 360, 362, 0, 365, 363, 366, 0,
	367, 368, 369, 0, 0, 370, 1265, 372, 0, 373,
	374, 375, 0, 376, 377, 378, 0, 379, 380, 1199,
	381, 382, 383, 385, 387, 384, 386, 388, 389, 390,
	391, 1288, 1289, 392, 1212, 294, 0, 0, 0, 0,
	0, 393, 394, 395, 1272, 0, 0, 0, 396, 0,
	397, 398, 399, 0, 400, 401, 0, 1299, 402, 403,
	404, 1285, 1286, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 0, 414, 1295, 0, 1222, 415, 0, 416,
	417, 418, 419, 420, 421, 422, 1258, 1259, 1262, 511,
	1301, 423, 424, 0, 425, 426, 427, 428, 429, 0,
	0, 0, 295, 430, 431, 432, 0, 1300, 512, 433,
	1267, 1268, 0, 1228, 0, 434, 435, 1302, 1260, 1303,
	436, 437, 438, 1304, 439, 0, 0, 0, 440, 441,
	442, 443, 444, 445, 0, 446, 448, 447, 0, 449,
	1296, 1305, 450, 451, 1306, 0, 452, 453, 454, 455,
	456, 457, 460, 1251, 1250, 458, 459, 461, 462, 0,
	463, 464, 466, 469, 465, 467, 468, 470, 483, 484,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 486, 0, 485, 1307, 487, 488, 489, 490,
	491, 498, 500, 501, 496, 497, 499, 502, 503, 505,
	493, 494, 495, 1308, 504, 492, 1190, 296, 1309, 506,
	507, 508, 509, 1213, 1261, 510, 1275, 513, 514, 0,
	0, 515, 0, 516, 0, 0, 518, 519, 520, 0,
	0, 521, 522, 719, 1310, 523, 1311, 1290, 524, 525,
	1200, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	0, 535, 536, 721, 537, 538, 539, 722, 540, 541,
	542, 1291, 543, 724, 544, 545, 0, 546, 547, 548,
	0, 549, 550, 551, 552, 553, 554, 555, 556, 1271,
	557, 558, 560, 559, 561, 0, 562, 0, 563, 564,
	565, 0, 0, 0, 0, 0, 566, 567, 569, 0,
	570, 571, 572, 573, 568, 574, 575, 576, 577, 578,
	579, 0, 580, 581, 582, 1312, 583, 584, 585, 586,
	587, 1201, 588, 0, 589, 590, 597, 598, 599, 591,
	592, 593, 600, 601, 602, 603, 604, 0, 606, 607,
	605, 608, 609, 610, 1254, 611, 612, 594, 595, 613,
	614, 1313, 615, 616, 617, 618, 619, 620, 621, 1269,
	0, 622, 0, 623, 624, 625, 626, 627, 629, 596,
	630, 635, 636, 1316, 631, 632, 633, 634, 1292, 638,
	639, 640, 0, 641, 642, 1187, 637, 628, 0, 643,
	644, 645, 646, 647, 648, 0, 649, 650, 0, 651,
	1281, 1282, 1283, 1284, 0, 662, 0, 652, 654, 655,
	656, 1293, 657, 1294, 1211, 658, 659, 660, 661, 653,
	663, 664, 0, 1194, 665, 666, 668, 670, 671, 667,
	669, 672, 1255, 673, 0, 0, 674, 675, 676, 736,
	1278, 1315, 4021, 678, 677, 679, 680, 681, 739, 682,
	683, 0, 0, 0, 0, 684, 685, 740, 686, 687,
	688, 1191, 0, 0, 0, 0, 0, 0, 1233, 1205,
	1206, 1207, 1203, 1204, 1216, 0, 1186, 0, 0, 0,
	0, 0, 0, 1184, 1185, 297, 298, 300, 299, 301,
	302, 303, 304, 1217, 305, 306, 0, 1215, 0, 0,
	0, 1257, 1221, 0, 0, 307, 0, 308, 309, 1297,
	310, 311, 312, 313, 314, 315, 316, 690, 1270, 0,
	317, 1277, 318, 1276, 0, 1287, 319, 320, 321, 322,
	323, 324, 1223, 1256, 1188, 325, 1317, 1318, 697, 0,
	326, 327, 1263, 0, 1244, 0, 328, 329, 330, 331,
	332, 333, 334, 335, 0, 0, 337, 338, 339, 336,
	340, 0, 341, 0, 342, 343, 344, 345, 346, 347,
	0, 348, 349, 350, 1298, 351, 352, 353, 1247, 1245,
	1246, 1253, 1249, 1248, 1252, 354, 355, 356, 357, 358,
	1280, 359, 361, 1274, 1273, 1193, 364, 360, 362, 0,
	365, 363, 366, 0, 367, 368, 369, 0, 0, 370,
	1265, 372, 0, 373, 374, 375, 0, 376, 377, 378,
	0, 379, 380, 1199, 381, 382, 383, 385, 387, 384,
	386, 388, 389, 390, 391, 1288, 1289, 392, 1212, 294,
	0, 0, 0, 0, 0, 393, 394, 395, 1272, 0,
	0, 0, 396, 0, 397, 398, 399, 0, 400, 401,
	0, 1299, 402, 403, 404, 1285, 1286, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 0, 414, 1295, 0,
	1222, 415, 0, 416, 417, 418, 419, 420, 421, 422,
	1258, 1259, 1262, 511, 1301, 423, 424, 0, 425, 426,
	427, 428, 429, 0, 0, 0, 295, 430, 431, 432,
	0, 1300, 512, 433, 1267, 1268, 0, 1228, 0, 434,
	435, 1302, 1260, 1303, 436, 437, 438, 1304, 439, 0,
	0, 0, 440, 441, 442, 443, 444, 445, 0, 446,
	448, 447, 0, 449, 1296, 1305, 450, 451, 1306, 0,
	452, 453, 454, 455, 456, 457, 460, 1251, 1250, 458,
	459, 461, 462, 0, 463, 464, 466, 469, 465, 467,
	468, 470, 483, 484, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 486, 0, 485, 1307,
	487, 488, 489, 490, 491, 498, 500, 501, 496, 497,
	499, 502, 503, 505, 493, 494, 495, 1308, 504, 492,
	1190, 296, 1309, 506, 507, 508, 509, 1213, 1261, 510,
	1275, 513, 514, 0, 0, 515, 0, 516, 0, 0,
	518, 519, 520, 0, 0, 521, 522, 719, 1310, 523,
	1311, 1290, 524, 525, 1200, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 0, 535, 536, 721, 537, 538,
	539, 722, 540, 541, 542, 1291, 543, 724, 544, 545,
	0, 546, 547, 548, 0, 549, 550, 551, 552, 553,
	554, 555, 556, 1271, 557, 558, 560, 559, 561, 0,
	562, 0, 563, 564, 565, 0, 0, 0, 0, 0,
	566, 567, 569, 0, 570, 571, 572, 573, 568, 574,
	575, 576, 577, 578, 579, 0, 580, 581, 582, 1312,
	583, 584, 585, 586, 587, 1201, 588, 0, 589, 590,
	597, 598, 599, 591, 592, 593, 600, 601, 602, 603,
	604, 0, 606, 607, 605, 608, 609, 610, 1254, 611,
	612, 594, 595, 613, 614, 1313, 615, 616, 617, 618,
	619, 620, 621, 1269, 0, 622, 0, 623, 624, 625,
	626, 627, 629, 596, 630, 635, 636, 1316, 631, 632,
	633, 634, 1292, 638, 639, 640, 0, 641, 642, 1187,
	637, 628, 0, 643, 644, 645, 646, 647, 648, 0,
	649, 650, 0, 651, 1281, 1282, 1283, 1284, 0, 662,
	0, 652, 654, 655, 656, 1293, 657, 1294, 1211, 658,
	659, 660, 661, 653, 663, 664, 0, 1194, 665, 666,
	668, 670, 671, 667, 669, 672, 1255, 673, 0, 0,
	674, 675, 676, 736, 1278, 1315, 0, 678, 677, 679,
	680, 681, 739, 682, 683, 0, 0, 0, 0, 684,
	685, 740, 686, 687, 688, 1191, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1186, 0, 0, 0, 0, 0, 0, 1184, 1185, 2101,
	1233, 1205, 1206, 1207, 1203, 1204, 1216, 1217, 0, 0,
	0, 1215, 0, 0, 0, 0, 0, 297, 298, 300,
	299, 301, 302, 303, 304, 0, 305, 306, 0, 0,
	0, 0, 0, 1257, 1221, 0, 0, 307, 0, 308,
	309, 1297, 310, 311, 312, 313, 314, 315, 316, 690,
	1270, 0, 317, 1277, 318, 1276, 0, 1287, 319, 320,
	321, 322, 323, 324, 1223, 1256, 1188, 325, 1317, 1318,
	697, 0, 326, 327, 1263, 0, 1244, 0, 328, 329,
	330, 331, 332, 333, 334, 335, 0, 0, 337, 338,
	339, 336, 340, 0, 341, 0, 342, 343, 344, 345,
	346, 347, 0, 348, 349, 350, 1298, 351, 352, 353,
	1247, 1245, 1246, 1253, 1249, 1248, 1252, 354, 355, 356,
	357, 358, 1280, 359, 361, 1274, 1273, 1193, 364, 360,
	362, 0, 365, 363, 366, 0, 367, 368, 369, 0,
	0, 370, 1265, 372, 0, 373, 374, 375, 0, 376,
	377, 378, 0, 379, 380, 1199, 381, 382, 383, 385,
	387, 384, 386, 388, 389, 390, 391, 1288, 1289, 392,
	1212, 294, 0, 0, 0, 0, 0, 393, 394, 395,
	1272, 0, 0, 0, 396, 0, 397, 398, 399, 0,
	400, 401, 2932, 1299, 402, 403, 404, 1285, 1286, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 0, 414,
	1295, 0, 1222, 415, 0, 416, 417, 418, 419, 420,
	421, 422, 1258, 1259, 1262, 511, 1301, 423, 424, 0,
	425, 426, 427, 428, 429, 0, 0, 0, 295, 430,
	431, 432, 0, 1300, 512, 433, 1267, 1268, 0, 1228,
	0, 434, 435, 1302, 1260, 1303, 436, 437, 438, 1304,
	439, 0, 0, 0, 440, 441, 442, 443, 444, 445,
	0, 446, 448, 447, 0, 449, 1296, 1305, 450, 451,
	1306, 0, 452, 453, 454, 455, 456, 457, 460, 1251,
	1250, 458, 459, 461, 462, 0, 463, 464, 466, 469,
	465, 467, 468, 470, 483, 484, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 486, 0,
	485, 1307, 487, 488, 489, 490, 491, 498, 500, 501,
	496, 497, 499, 502, 503, 505, 493, 494, 495, 1308,
	504, 492, 1190, 296, 1309, 506, 507, 508, 509, 1213,
	1261, 510, 1275, 513, 514, 0, 0, 515, 0, 516,
	0, 0, 518, 519, 520, 0, 0, 521, 522, 719,
	1310, 523, 1311, 1290, 524, 525, 1200, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 0, 535, 536, 721,
	537, 538, 539, 722, 540, 541, 542, 1291, 543, 724,
	544, 545, 0, 546, 547, 548, 0, 549, 550, 551,
	552, 553, 554, 555, 556, 1271, 557, 558, 560, 559,
	561, 0, 562, 0, 563, 564, 565, 0, 0, 0,
	0, 0, 566, 567, 569, 0, 570, 571, 572, 573,
	568, 574, 575, 576, 577, 578, 579, 0, 580, 581,
	582, 1312, 583, 584, 585, 586, 587, 1201, 588, 0,
	589, 590, 597, 598, 599, 591, 592, 593, 600, 601,
	602, 603, 604, 0, 606, 607, 605, 608, 609, 610,
	1254, 611, 612, 594, 595, 613, 614, 1313, 615, 616,
	617, 618, 619, 620, 621, 1269, 0, 622, 0, 623,
	624, 625, 626, 627, 629, 596, 630, 635, 636, 1316,
	631, 632, 633, 634, 1292, 638, 639, 640, 0, 641,
	642, 1187, 637, 628, 0, 643, 644, 645, 646, 647,
	648, 0, 649, 650, 0, 651, 1281, 1282, 1283, 1284,
	0, 662, 0, 652, 654, 655, 656, 1293, 657, 1294,
	1211, 658, 659, 660, 661, 653, 663, 664, 0, 1194,
	665, 666, 668, 670, 671, 667, 669, 672, 1255, 673,
	0, 0, 674, 675, 676, 736, 1278, 1315, 0, 678,
	677, 679, 680, 681, 739, 682, 683, 0, 0, 0,
	0, 684, 685, 740, 686, 687, 688, 1191, 0, 0,
	0, 0, 0, 0, 1233, 1205, 1206, 1207, 1203, 1204,
	1216, 0, 1186, 0, 0, 0, 0, 0, 0, 1184,
	1185, 297, 298, 300, 299, 301, 302, 303, 304, 1217,
	305, 306, 0, 1215, 0, 0, 0, 1257, 1221, 0,
	0, 307, 0, 308, 309, 1297, 310, 311, 312, 313,
	314, 315, 316, 690, 1270, 0, 317, 1277, 318, 1276,
	0, 1287, 319, 320, 321, 322, 323, 324, 1223, 1256,
	1188, 325, 1317, 1318, 697, 0, 326, 327, 1263, 0,
	1244, 0, 328, 329, 330, 331, 332, 333, 334, 335,
	0, 0, 337, 338, 339, 336, 340, 0, 341, 0,
	342, 343, 344, 345, 346, 347, 0, 348, 349, 350,
	1298, 351, 352, 353, 1247, 1245, 1246, 1253, 1249, 1248,
	1252, 354, 355, 356, 357, 358, 1280, 359, 361, 1274,
	1273, 1193, 364, 360, 362, 0, 365, 363, 366, 0,
	367, 368, 369, 0, 0, 370, 1265, 372, 0, 373,
	374, 375, 0, 376, 377, 378, 0, 379, 380, 1199,
	381, 382, 383, 385, 387, 384, 386, 388, 389, 390,
	391, 1288, 1289, 392, 1212, 294, 0, 0, 0, 0,
	0, 393, 394, 395, 1272, 0, 0, 0, 396, 0,
	397, 398, 399, 0, 400, 401, 0, 1299, 402, 403,
	404, 1285, 1286, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 0, 414, 1295, 0, 1222, 415, 0, 416,
	417, 418, 419, 420, 421, 422, 1258, 1259, 1262, 511,
	1301, 423, 424, 0, 425, 426, 427, 428, 429, 0,
	0, 0, 295, 430, 431, 432, 0, 1300, 512, 433,
	1267, 1268, 0, 1228, 0, 434, 435, 1302, 1260, 1303,
	436, 437, 438, 1304, 439, 0, 0, 0, 440, 441,
	442, 443, 444, 445, 0, 446, 448, 447, 0, 449,
	1296, 1305, 450, 451, 1306, 0, 452, 453, 454, 455,
	456, 457, 460, 1251, 1250, 458, 459, 461, 462, 0,
	463, 464, 466, 469, 465, 467, 468, 470, 483, 484,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 486, 0, 485, 1307, 487, 488, 489, 490,
	491, 498, 500, 501, 496, 497, 499, 502, 503, 505,
	493, 494, 495, 1308, 504, 492, 1190, 296, 1309, 506,
	507, 508, 509, 1213, 1261, 510, 1275, 513, 514, 0,
	0, 515, 0, 516, 0, 0, 518, 519, 520, 0,
	0, 521, 522, 719, 1310, 523, 1311, 1290, 524, 525,
	1200, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	0, 535, 536, 721, 537, 538, 539, 722, 540, 541,
	542, 1291, 543, 724, 544, 545, 0, 546, 547, 548,
	0, 549, 550, 551, 552, 553, 554, 555, 556, 1271,
	557, 558, 560, 559, 561, 0, 562, 0, 563, 564,
	565, 0, 0, 0, 0, 0, 566, 567, 569, 0,
	570, 571, 572, 573, 568, 574, 575, 576, 577, 578,
	579, 0, 580, 581, 582, 1312, 583, 584, 585, 586,
	587, 1201, 588, 0, 589, 590, 597, 598, 599, 591,
	592, 593, 600, 601, 602, 603, 604, 0, 606, 607,
	605, 608, 609, 610, 1254, 611, 612, 594, 595, 613,
	614, 1313, 615, 616, 617, 618, 619, 620, 621, 1269,
	0, 622, 0, 623, 624, 625, 626, 627, 629, 596,
	630, 635, 636, 1316, 631, 632, 633, 634, 1292, 638,
	639, 640, 0, 641, 642, 1187, 637, 628, 0, 643,
	644, 645, 646, 647, 648, 0, 649, 650, 0, 651,
	1281, 1282, 1283, 1284, 0, 662, 0, 652, 654, 655,
	656, 1293, 657, 1294, 1211, 658, 659, 660, 661, 653,
	663, 664, 0, 1194, 665, 666, 668, 670, 671, 667,
	669, 672, 1255, 673, 0, 0, 674, 675, 676, 736,
	1278, 1315, 0, 678, 677, 679, 680, 681, 739, 682,
	683, 0, 0, 0, 0, 684, 685, 740, 686, 687,
	688, 1191, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1186, 0, 0, 0,
	0, 0, 0, 1184, 1185, 0, 0, 0, 0, 0,
	0, 0, 0, 1217, 2029, 0, 2937, 1215, 1233, 1205,
	1206, 1207, 1203, 1204, 1216, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 297, 298, 300, 299, 301,
	302, 303, 304, 0, 305, 306, 0, 0, 0, 0,
	0, 1257, 1221, 0, 0, 307, 0, 308, 309, 1297,
	310, 311, 312, 313, 314, 315, 316, 690, 1270, 0,
	317, 1277, 318, 1276, 0, 1287, 319, 320, 321, 322,
	323, 324, 1223, 1256, 1188, 325, 1317, 1318, 697, 0,
	326, 327, 1263, 0, 1244, 0, 328, 329, 330, 331,
	332, 333, 334, 335, 0, 0, 337, 338, 339, 336,
	340, 0, 341, 0, 342, 343, 344, 345, 346, 347,
	0, 348, 349, 350, 1298, 351, 352, 353, 1247, 1245,
	1246, 1253, 1249, 1248, 1252, 354, 355, 356, 357, 358,
	1280, 359, 361, 1274, 1273, 1193, 364, 360, 362, 0,
	365, 363, 366, 0, 367, 368, 369, 0, 0, 370,
	1265, 372, 0, 373, 374, 375, 0, 376, 377, 378,
	0, 379, 380, 1199, 381, 382, 383, 385, 387, 384,
	386, 388, 389, 390, 391, 1288, 1289, 392, 1212, 294,
	0, 0, 0, 0, 0, 393, 394, 395, 1272, 0,
	0, 0, 396, 0, 397, 398, 399, 0, 400, 401,
	0, 1299, 402, 403, 404, 1285, 1286, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 0, 414, 1295, 0,
	1222, 415, 0, 416, 417, 418, 419, 420, 421, 422,
	1258, 1259, 1262, 511, 1301, 423, 424, 0, 425, 426,
	427, 428, 429, 0, 0, 0, 295, 430, 431, 432,
	0, 1300, 512, 433, 1267, 1268, 0, 1228, 0, 434,
	435, 1302, 1260, 1303, 436, 437, 438, 1304, 439, 0,
	0, 0, 440, 441, 442, 443, 444, 445, 0, 446,
	448, 447, 0, 449, 1296, 1305, 450, 451, 1306, 0,
	452, 453, 454, 455, 456, 457, 460, 1251, 1250, 458,
	459, 461, 462, 0, 463, 464, 466, 469, 465, 467,
	468, 470, 483, 484, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 486, 0, 485, 1307,
	487, 488, 489, 490, 491, 498, 500, 501, 496, 497,
	499, 502, 503, 505, 493, 494, 495, 1308, 504, 492,
	1190, 296, 1309, 506, 507, 508, 509, 1213, 1261, 510,
	1275, 513, 514, 0, 0, 515, 0, 516, 0, 0,
	518, 519, 520, 0, 0, 521, 522, 719, 1310, 523,
	1311, 1290, 524, 525, 1200, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 0, 535, 536, 721, 537, 538,
	539, 722, 540, 541, 542, 1291, 543, 724, 544, 545,
	0, 546, 547, 548, 0, 549, 550, 551, 552, 553,
	554, 555, 556, 1271, 557, 558, 560, 559, 561, 0,
	562, 0, 563, 564, 565, 0, 0, 0, 0, 0,
	566, 567, 569, 0, 570, 571, 572, 573, 568, 574,
	575, 576, 577, 578, 579, 0, 580, 581, 582, 1312,
	583, 584, 585, 586, 587, 1201, 588, 0, 589, 590,
	597, 598, 599, 591, 592, 593, 600, 601, 602, 603,
	604, 0, 606, 607, 605, 608, 609, 610, 1254, 611,
	612, 594, 595, 613, 614, 1313, 615, 616, 617, 618,
	619, 620, 621, 1269, 0, 622, 0, 623, 624, 625,
	626, 627, 629, 596, 630, 635, 636, 1316, 631, 632,
	633, 634, 1292, 638, 639, 640, 0, 641, 642, 1187,
	637, 628, 0, 643, 644, 645, 646, 647, 648, 0,
	649, 650, 0, 651, 1281, 1282, 1283, 1284, 0, 662,
	0, 652, 654, 655, 656, 1293, 657, 1294, 1211, 658,
	659, 660, 661, 653, 663, 664, 0, 1194, 665, 666,
	668, 670, 671, 667, 669, 672, 1255, 673, 0, 0,
	674, 675, 676, 736, 1278, 1315, 0, 678, 677, 679,
	680, 681, 739, 682, 683, 0, 0, 0, 0, 684,
	685, 740, 686, 687, 688, 1191, 0, 0, 0, 0,
	2935, 0, 1233, 1205, 1206, 1207, 1203, 1204, 1216, 0,
	1186, 0, 0, 0, 0, 0, 0, 1184, 1185, 297,
	298, 300, 299, 301, 302, 303, 304, 1217, 305, 306,
	0, 1215, 0, 0, 0, 1257, 1221, 0, 0, 307,
	0, 308, 309, 1297, 310, 311, 312, 313, 314, 315,
	316, 690, 1270, 0, 317, 1277, 318, 1276, 0, 1287,
	319, 320, 321, 322, 323, 324, 1223, 1256, 1188, 325,
	1317, 1318, 697, 0, 326, 327, 1263, 0, 1244, 0,
	328, 329, 330, 331, 332, 333, 334, 335, 0, 0,
	337, 338, 339, 336, 340, 0, 341, 0, 342, 343,
	344, 345, 346, 347, 0, 348, 349, 350, 1298, 351,
	352, 353, 1247, 1245, 1246, 1253, 1249, 1248, 1252, 354,
	355, 356, 357, 358, 1280, 359, 361, 1274, 1273, 1193,
	364, 360, 362, 0, 365, 363, 366, 0, 367, 368,
	369, 0, 0, 370, 1265, 372, 0, 373, 374, 375,
	0, 376, 377, 378, 0, 379, 380, 1199, 381, 382,
	383, 385, 387, 384, 386, 388, 389, 390, 391, 1288,
	1289, 392, 1212, 294, 0, 0, 0, 0, 0, 393,
	394, 395, 1272, 0, 0, 0, 396, 0, 397, 398,
	399, 0, 400, 401, 0, 1299, 402, 403, 404, 1285,
	1286, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	0, 414, 1295, 0, 1222, 415, 0, 416, 417, 418,
	419, 420, 421, 422, 1258, 1259, 1262, 511, 1301, 423,
	424, 0, 425, 426, 427, 428, 429, 0, 0, 0,
	295, 430, 431, 432, 0, 1300, 512, 433, 1267, 1268,
	0, 1228, 0, 434, 435, 1302, 1260, 1303, 436, 437,
	438, 1304, 439, 0, 0, 0, 440, 441, 442, 443,
	444, 445, 0, 446, 448, 447, 0, 449, 1296, 1305,
	450, 451, 1306, 0, 452, 453, 454, 455, 456, 457,
	460, 1251, 1250, 458, 459, 461, 462, 0, 463, 464,
	466, 469, 465, 467, 468, 470, 483, 484, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	486, 0, 485, 1307, 487, 488, 489, 490, 491, 498,
	500, 501, 496, 497, 499, 502, 503, 505, 493, 494,
	495, 1308, 504, 492, 1190, 296, 1309, 506, 507, 508,
	509, 1213, 1261, 510, 1275, 513, 514, 0, 0, 515,
	0, 516, 0, 0, 518, 519, 520, 0, 0, 521,
	522, 719, 1310, 523, 1311, 1290, 524, 525, 1200, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 0, 535,
	536, 721, 537, 538, 539, 722, 540, 541, 542, 1291,
	543, 724, 544, 545, 0, 546, 547, 548, 0, 549,
	550, 551, 552, 553, 554, 555, 556, 1271, 557, 558,
	560, 559, 561, 0, 562, 0, 563, 564, 565, 0,
	0, 0, 0, 0, 566, 567, 569, 0, 570, 571,
	572, 573, 568, 574, 575, 576, 577, 578, 579, 0,
	580, 581, 582, 1312, 583, 584, 585, 586, 587, 1201,
	588, 0, 589, 590, 597, 598, 599, 591, 592, 593,
	600, 601, 602, 603, 604, 0, 606, 607, 605, 608,
	609, 610, 1254, 611, 612, 594, 595, 613, 614, 1313,
	615, 616, 617, 618, 619, 620, 621, 1269, 0, 622,
	0, 623, 624, 625, 626, 627, 629, 596, 630, 635,
	636, 1316, 631, 632, 633, 634, 1292, 638, 639, 640,
	0, 641, 642, 1187, 637, 628, 0, 643, 644, 645,
	646, 647, 648, 0, 649, 650, 0, 651, 1281, 1282,
	1283, 1284, 0, 662, 0, 652, 654, 655, 656, 1293,
	657, 1294, 1211, 658, 659, 660, 661, 653, 663, 664,
	0, 1194, 665, 666, 668, 670, 671, 667, 669, 672,
	1255, 673, 0, 0, 674, 675, 676, 736, 1278, 1315,
	0, 678, 677, 679, 680, 681, 739, 682, 683, 0,
	0, 0, 0, 684, 685, 740, 686, 687, 688, 1191,
	0, 0, 0, 0, 2923, 0, 1233, 1205, 1206, 1207,
	1203, 1204, 1216, 0, 1186, 0, 0, 0, 0, 0,
	0, 1184, 1185, 297, 298, 300, 299, 301, 302, 303,
	304, 1217, 305, 306, 0, 1215, 0, 0, 0, 1257,
	1221, 0, 0, 307, 0, 308, 309, 1297, 310, 311,
	312, 313, 314, 315, 316, 690, 1270, 0, 317, 1277,
	318, 1276, 0, 1287, 319, 320, 321, 322, 323, 324,
	1223, 1256, 1188, 325, 1317, 1318, 697, 0, 326, 327,
	1263, 0, 1244, 0, 328, 329, 330, 331, 332, 333,
	334, 335, 0, 0, 337, 338, 339, 336, 340, 0,
	341, 0, 342, 343, 344, 345, 346, 347, 0, 348,
	349, 350, 1298, 351, 352, 353, 1247, 1245, 1246, 1253,
	1249, 1248, 1252, 354, 355, 356, 357, 358, 1280, 359,
	361, 1274, 1273, 1193, 364, 360, 362, 0, 365, 363,
	366, 0, 367, 368, 369, 0, 0, 370, 1265, 372,
	0, 373, 374, 375, 0, 376, 377, 378, 0, 379,
	380, 1199, 381, 382, 383, 385, 387, 384, 386, 388,
	389, 390, 391, 1288, 1289, 392, 1212, 294, 0, 0,
	0, 0, 0, 393, 394, 395, 1272, 0, 0, 0,
	396, 0, 397, 398, 399, 0, 400, 401, 0, 1299,
	402, 403, 404, 1285, 1286, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 0, 414, 1295, 0, 1222, 415,
	0, 416, 417, 418, 419, 420, 421, 422, 1258, 1259,
	1262, 511, 1301, 423, 424, 0, 425, 426, 427, 428,
	429, 0, 0, 0, 295, 430, 431, 432, 0, 1300,
	512, 433, 1267, 1268, 0, 1228, 0, 434, 435, 1302,
	1260, 1303, 436, 437, 438, 1304, 439, 0, 0, 0,
	440, 441, 442, 443, 444, 445, 0, 446, 448, 447,
	0, 449, 1296, 1305, 450, 451, 1306, 0, 452, 453,
	454, 455, 456, 457, 460, 1251, 1250, 458, 459, 461,
	462, 0, 463, 464, 466, 469, 465, 467, 468, 470,
	483, 484, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 486, 0, 485, 1307, 487, 488,
	489, 490, 491, 498, 500, 501, 496, 497, 499, 502,
	503, 505, 493, 494, 495, 1308, 504, 492, 1190, 296,
	1309, 506, 507, 508, 509, 1213, 1261, 510, 1275, 513,
	514, 0, 0, 515, 0, 516, 0, 0, 518, 519,
	520, 0, 0, 521, 522, 719, 1310, 523, 1311, 1290,
	524, 525, 1200, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 0, 535, 536, 721, 537, 538, 539, 722,
	540, 541, 542, 1291, 543, 724, 544, 545, 0, 546,
	547, 548, 0, 549, 550, 551, 552, 553, 554, 555,
	556, 1271, 557, 558, 560, 559, 561, 0, 562, 0,
	563, 564, 565, 0, 0, 0, 0, 0, 566, 567,
	569, 0, 570, 571, 572, 573, 568, 574, 575, 576,
	577, 578, 579, 0, 580, 581, 582, 1312, 583, 584,
	585, 586, 587, 1201, 588, 0, 589, 590, 597, 598,
	599, 591, 592, 593, 600, 601, 602, 603, 604, 0,
	606, 607, 605, 608, 609, 610, 1254, 611, 612, 594,
	595, 613, 614, 1313, 615, 616, 617, 618, 619, 620,
	621, 1269, 0, 622, 0, 623, 624, 625, 626, 627,
	629, 596, 630, 635, 636, 1316, 631, 632, 633, 634,
	1292, 638, 639, 640, 0, 641, 642, 1187, 637, 628,
	0, 643, 644, 645, 646, 647, 648, 0, 649, 650,
	0, 651, 1281, 1282, 1283, 1284, 0, 662, 0, 652,
	654, 655, 656, 1293, 657, 1294, 1211, 658, 659, 660,
	661, 653, 663, 664, 0, 1194, 665, 666, 668, 670,
	671, 667, 669, 672, 1255, 673, 0, 0, 674, 675,
	676, 736, 1278, 1315, 0, 678, 677, 679, 680, 681,
	739, 682, 683, 0, 0, 0, 0, 684, 685, 740,
	686, 687, 688, 1191, 0, 0, 0, 0, 2912, 0,
	1233, 1205, 1206, 1207, 1203, 1204, 1216, 0, 1186, 0,
	0, 0, 0, 0, 0, 1184, 1185, 297, 298, 300,
	299, 301, 302, 303, 304, 1217, 305, 306, 0, 1215,
	0, 0, 0, 1257, 1221, 0, 0, 307, 0, 308,
	309, 1297, 310, 311, 312, 313, 314, 315, 316, 690,
	1270, 0, 317, 1277, 318, 1276, 0, 1287, 319, 320,
	321, 322, 323, 324, 1223, 1256, 1188, 325, 1317, 1318,
	697, 0, 326, 327, 1263, 0, 1244, 0, 328, 329,
	330, 331, 332, 333, 334, 335, 0, 0, 337, 338,
	339, 336, 340, 0, 341, 0, 342, 343, 344, 345,
	346, 347, 0, 348, 349, 350, 1298, 351, 352, 353,
	1247, 1245, 1246, 1253, 1249, 1248, 1252, 354, 355, 356,
	357, 358, 1280, 359, 361, 1274, 1273, 1193, 364, 360,
	362, 0, 365, 363, 366, 0, 367, 368, 369, 0,
	0, 370, 1265, 372, 0, 373, 374, 375, 0, 376,
	377, 378, 0, 379, 380, 1199, 381, 382, 383, 385,
	387, 384, 386, 388, 389, 390, 391, 1288, 1289, 392,
	1212, 294, 0, 0, 0, 0, 0, 393, 394, 395,
	1272, 0, 0, 0, 396, 0, 397, 398, 399, 0,
	400, 401, 0, 1299, 402, 403, 404, 1285, 1286, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 0, 414,
	1295, 0, 1222, 415, 0, 416, 417, 418, 419, 420,
	421, 422, 1258, 1259, 1262, 511, 1301, 423, 424, 0,
	425, 426, 427, 428, 429, 0, 0, 0, 295, 430,
	431, 432, 0, 1300, 512, 433, 1267, 1268, 0, 1228,
	0, 434, 435, 1302, 1260, 1303, 436, 437, 438, 1304,
	439, 0, 0, 0, 440, 441, 442, 443, 444, 445,
	0, 446, 448, 447, 0, 449, 1296, 1305, 450, 451,
	1306, 0, 452, 453, 454, 455, 456, 457, 460, 1251,
	1250, 458, 459, 461, 462, 0, 463, 464, 466, 469,
	465, 467, 468, 470, 483, 484, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 486, 0,
	485, 1307, 487, 488, 489, 490, 491, 498, 500, 501,
	496, 497, 499, 502, 503, 505, 493, 494, 495, 1308,
	504, 492, 1190, 296, 1309, 506, 507, 508, 509, 1213,
	1261, 510, 1275, 513, 514, 0, 0, 515, 0, 516,
	0, 0, 518, 519, 520, 0, 0, 521, 522, 719,
	1310, 523, 1311, 1290, 524, 525, 1200, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 0, 535, 536, 721,
	537, 538, 539, 722, 540, 541, 542, 1291, 543, 724,
	544, 545, 0, 546, 547, 548, 0, 549, 550, 551,
	552, 553, 554, 555, 556, 1271, 557, 558, 560, 559,
	561, 0, 562, 0, 563, 564, 565, 0, 0, 0,
	0, 0, 566, 567, 569, 0, 570, 571, 572, 573,
	568, 574, 575, 576, 577, 578, 579, 0, 580, 581,
	582, 1312, 583, 584, 585, 586, 587, 1201, 588, 0,
	589, 590, 597, 598, 599, 591, 592, 593, 600, 601,
	602, 603, 604, 0, 606, 607, 605, 608, 609, 610,
	1254, 611, 612, 594, 595, 613, 614, 1313, 615, 616,
	617, 618, 619, 620, 621, 1269, 0, 622, 0, 623,
	624, 625, 626, 627, 629, 596, 630, 635, 636, 1316,
	631, 632, 633, 634, 1292, 638, 639, 640, 0, 641,
	642, 1187, 637, 628, 0, 643, 644, 645, 646, 647,
	648, 0, 649, 650, 0, 651, 1281, 1282, 1283, 1284,
	0, 662, 0, 652, 654, 655, 656, 1293, 657, 1294,
	1211, 658, 659, 660, 661, 653, 663, 664, 0, 1194,
	665, 666, 668, 670, 671, 667, 669, 672, 1255, 673,
	0, 0, 674, 675, 676, 736, 1278, 1315, 0, 678,
	677, 679, 680, 681, 739, 682, 683, 0, 0, 0,
	0, 684, 685, 740, 686, 687, 688, 1191, 0, 0,
	0, 0, 2910, 0, 2901, 2908, 1206, 1207, 1203, 1204,
	1216, 0, 1186, 0, 0, 0, 0, 0, 0, 1184,
	1185, 297, 298, 300, 299, 301, 302, 303, 304, 1217,
	305, 306, 0, 1215, 0, 0, 0, 1257, 1221, 0,
	0, 307, 0, 308, 309, 1297, 310, 311, 312, 313,
	314, 315, 316, 690, 1270, 0, 317, 1277, 318, 1276,
	0, 1287, 319, 320, 321, 322, 323, 324, 1223, 1256,
	1188, 325, 1317, 1318, 697, 0, 326, 327, 1263, 0,
	1244, 0, 328, 329, 330, 331, 332, 333, 334, 335,
	0, 0, 337, 338, 339, 336, 340, 0, 341, 0,
	342, 343, 344, 345, 346, 347, 0, 348, 349, 350,
	1298, 351, 352, 353, 1247, 1245, 1246, 1253, 1249, 1248,
	1252, 354, 355, 356, 357, 358, 1280, 2904, 361, 1274,
	1273, 1193, 364, 360, 362, 0, 365, 363, 366, 0,
	367, 368, 369, 0, 0, 370, 1265, 372, 0, 373,
	374, 375, 0, 376, 377, 378, 0, 379, 380, 1199,
	381, 382, 383, 385, 387, 384, 386, 388, 389, 390,
	391, 1288, 1289, 392, 1212, 294, 0, 0, 0, 0,
	0, 393, 394, 395, 1272, 0, 0, 0, 396, 0,
	397, 398, 399, 0, 400, 401, 0, 1299, 402, 403,
	404, 1285, 1286, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 0, 414, 1295, 0, 1222, 415, 0, 416,
	417, 418, 419, 420, 2905, 422, 1258, 1259, 1262, 511,
	1301, 423, 424, 0, 425, 426, 427, 428, 429, 0,
	0, 0, 295, 430, 431, 432, 0, 1300, 512, 433,
	1267, 1268, 0, 1228, 0, 434, 435, 1302, 1260, 1303,
	436, 437, 438, 1304, 439, 0, 0, 0, 440, 441,
	442, 443, 444, 445, 0, 446, 448, 447, 0, 449,
	1296, 1305, 450, 451, 1306, 0, 452, 453, 454, 455,
	456, 457, 460, 1251, 1250, 458, 459, 461, 462, 0,
	463, 464, 466, 469, 465, 467, 2906, 470, 2903, 484,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 486, 0, 485, 1307, 487, 488, 489, 490,
	491, 498, 500, 501, 496, 497, 499, 502, 503, 505,
	493, 494, 495, 1308, 504, 492, 1190, 296, 1309, 506,
	507, 508, 509, 1213, 1261, 510, 1275, 513, 514, 0,
	0, 515, 0, 516, 0, 0, 518, 519, 520, 0,
	0, 521, 522, 719, 1310, 523, 1311, 1290, 524, 525,
	1200, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	0, 535, 536, 721, 537, 538, 539, 722, 540, 541,
	542, 1291, 543, 724, 544, 545, 0, 546, 547, 548,
	0, 549, 550, 551, 552, 553, 554, 555, 556, 1271,
	557, 558, 560, 559, 561, 0, 562, 0, 563, 564,
	565, 0, 0, 0, 0, 0, 566, 567, 569, 0,
	570, 571, 572, 573, 568, 574, 575, 576, 577, 578,
	579, 0, 580, 581, 582, 1312, 583, 584, 585, 586,
	587, 1201, 588, 0, 589, 590, 597, 598, 599, 591,
	592, 593, 600, 601, 602, 603, 2907, 0, 606, 607,
	605, 608, 609, 610, 1254, 611, 612, 594, 595, 613,
	614, 1313, 615, 616, 617, 618, 619, 620, 621, 1269,
	0, 622, 0, 623, 624, 625, 626, 627, 629, 596,
	630, 635, 636, 1316, 631, 632, 633, 634, 1292, 638,
	639, 640, 0, 641, 642, 1187, 637, 628, 0, 643,
	644, 645, 646, 647, 648, 0, 649, 650, 0, 651,
	1281, 1282, 1283, 1284, 0, 662, 0, 652, 654, 655,
	656, 1293, 657, 1294, 1211, 658, 659, 660, 661, 653,
	663, 664, 0, 1194, 665, 666, 668, 670, 671, 667,
	669, 672, 1255, 673, 0, 0, 674, 675, 676, 736,
	1278, 1315, 0, 678, 677, 679, 680, 681, 739, 682,
	683, 0, 0, 0, 0, 684, 685, 740, 686, 2902,
	688, 1191, 0, 0, 0, 0, 2898, 0, 2901, 2908,
	1206, 1207, 1203, 1204, 1216, 0, 1186, 0, 0, 0,
	0, 0, 0, 1184, 1185, 297, 298, 300, 299, 301,
	302, 303, 304, 1217, 305, 306, 0, 1215, 0, 0,
	0, 1257, 1221, 0, 0, 307, 0, 308, 309, 1297,
	310, 311, 312, 313, 314, 315, 316, 690, 1270, 0,
	317, 1277, 318, 1276, 0, 1287, 319, 320, 321, 322,
	323, 324, 1223, 1256, 1188, 325, 1317, 1318, 697, 0,
	326, 327, 1263, 0, 1244, 0, 328, 329, 330, 331,
	332, 333, 334, 335, 0, 0, 337, 338, 339, 336,
	340, 0, 341, 0, 342, 343, 344, 345, 346, 347,
	0, 348, 349, 350, 1298, 351, 352, 353, 1247, 1245,
	1246, 1253, 1249, 1248, 1252, 354, 355, 356, 357, 358,
	1280, 2904, 361, 1274, 1273, 1193, 364, 360, 362, 0,
	365, 363, 366, 0, 367, 368, 369, 0, 0, 370,
	1265, 372, 0, 373, 374, 375, 0, 376, 377, 378,
	0, 379, 380, 1199, 381, 382, 383, 385, 387, 384,
	386, 388, 389, 390, 391, 1288, 1289, 392, 1212, 294,
	0, 0, 0, 0, 0, 393, 394, 395, 1272, 0,
	0, 0, 396, 0, 397, 398, 399, 0, 400, 401,
	0, 1299, 402, 403, 404, 1285, 1286, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 0, 414, 1295, 0,
	1222, 415, 0, 416, 417, 418, 419, 420, 2905, 422,
	1258, 1259, 1262, 511, 1301, 423, 424, 0, 425, 426,
	427, 428, 429, 0, 0, 0, 295, 430, 431, 432,
	0, 1300, 512, 433, 1267, 1268, 0, 1228, 0, 434,
	435, 1302, 1260, 1303, 436, 437, 438, 1304, 439, 0,
	0, 0, 440, 441, 442, 443, 444, 445, 0, 446,
	448, 447, 0, 449, 1296, 1305, 450, 451, 1306, 0,
	452, 453, 454, 455, 456, 457, 460, 1251, 1250, 458,
	459, 461, 462, 0, 463, 464, 466, 469, 465, 467,
	2906, 470, 2903, 484, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 486, 0, 485, 1307,
	487, 488, 489, 490, 491, 498, 500, 501, 496, 497,
	499, 502, 503, 505, 493, 494, 495, 1308, 504, 492,
	1190, 296, 1309, 506, 507, 508, 509, 1213, 1261, 510,
	1275, 513, 514, 0, 0, 515, 0, 516, 0, 0,
	518, 519, 520, 0, 0, 521, 522, 719, 1310, 523,
	1311, 1290, 524, 525, 1200, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 0, 535, 536, 721, 537, 538,
	539, 722, 540, 541, 542, 1291, 543, 724, 544, 545,
	0, 546, 547, 548, 0, 549, 550, 551, 552, 553,
	554, 555, 556, 1271, 557, 558, 560, 559, 561, 0,
	562, 0, 563, 564, 565, 0, 0, 0, 0, 0,
	566, 567, 569, 0, 570, 571, 572, 573, 568, 574,
	575, 576, 577, 578, 579, 0, 580, 581, 582, 1312,
	583, 584, 585, 586, 587, 1201, 588, 0, 589, 590,
	597, 598, 599, 591, 592, 593, 600, 601, 602, 603,
	2907, 0, 606, 607, 605, 608, 609, 610, 1254, 611,
	612, 594, 595, 613, 614, 1313, 615, 616, 617, 618,
	619, 620, 621, 1269, 0, 622, 0, 623, 624, 625,
	626, 627, 629, 596, 630, 635, 636, 1316, 631, 632,
	633, 634, 1292, 638, 639, 640, 0, 641, 642, 1187,
	637, 628, 0, 643, 644, 645, 646, 647, 648, 0,
	649, 650, 0, 651, 1281, 1282, 1283, 1284, 0, 662,
	0, 652, 654, 655, 656, 1293, 657, 1294, 1211, 658,
	659, 660, 661, 653, 663, 664, 0, 1194, 665, 666,
	668, 670, 671, 667, 669, 672, 1255, 673, 0, 0,
	674, 675, 676, 736, 1278, 1315, 0, 678, 677, 679,
	680, 681, 739, 682, 683, 0, 0, 0, 0, 684,
	685, 740, 686, 2902, 688, 1191, 0, 0, 0, 0,
	0, 0, 1233, 1205, 1206, 1207, 1203, 1204, 1216, 0,
	1186, 0, 0, 0, 0, 0, 0, 1184, 1185, 297,
	298, 300, 299, 301, 302, 303, 304, 1217, 305, 306,
	0, 1215, 0, 0, 0, 1257, 1221, 0, 0, 307,
	0, 308, 309, 1297, 310, 311, 312, 313, 314, 315,
	316, 690, 1270, 0, 317, 1277, 318, 1276, 0, 1287,
	319, 320, 321, 322, 323, 324, 1223, 1256, 1188, 325,
	1317, 1318, 697, 0, 326, 327, 1263, 0, 1244, 0,
	328, 329, 330, 331, 332, 333, 334, 335, 0, 0,
	337, 338, 339, 336, 340, 0, 341, 0, 342, 343,
	344, 345, 346, 347, 0, 348, 349, 350, 1298, 351,
	352, 353, 1247, 1245, 1246, 1253, 1249, 1248, 1252, 354,
	355, 356, 357, 358, 1280, 359, 361, 1274, 1273, 1193,
	364, 360, 362, 0, 365, 363, 366, 0, 367, 368,
	369, 0, 0, 370, 1265, 372, 0, 373, 374, 375,
	0, 376, 377, 378, 0, 379, 380, 1199, 381, 382,
	383, 385, 387, 384, 386, 388, 389, 390, 391, 1288,
	1289, 392, 1212, 294, 0, 0, 0, 0, 0, 393,
	394, 395, 1272, 0, 0, 0, 396, 0, 397, 398,
	399, 0, 400, 401, 0, 1299, 402, 403, 404, 1285,
	1286, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	0, 414, 1295, 0, 1222, 415, 0, 416, 417, 418,
	419, 420, 421, 422, 1258, 1259, 1262, 511, 1301, 423,
	424, 0, 425, 426, 427, 428, 429, 0, 0, 0,
	295, 430, 431, 432, 0, 1300, 512, 433, 1267, 1268,
	0, 1228, 0, 434, 435, 1302, 1260, 1303, 436, 437,
	438, 1304, 439, 0, 0, 0, 440, 441, 442, 443,
	444, 445, 0, 446, 448, 447, 0, 449, 1296, 1305,
	450, 451, 1306, 0, 452, 453, 454, 455, 456, 457,
	460, 1251, 1250, 458, 459, 461, 462, 0, 463, 464,
	466, 469, 465, 467, 468, 470, 483, 484, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	486, 0, 485, 1307, 487, 488, 489, 490, 491, 498,
	500, 501, 496, 497, 499, 502, 503, 505, 493, 494,
	495, 1308, 504, 492, 1190, 296, 1309, 506, 507, 508,
	509, 1213, 1261, 510, 1275, 513, 514, 0, 0, 515,
	0, 516, 0, 0, 518, 519, 520, 0, 0, 521,
	522, 719, 1310, 523, 1311, 1290, 524, 525, 1200, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 0, 535,
	536, 721, 537, 538, 539, 722, 540, 541, 542, 1291,
	543, 724, 544, 545, 0, 546, 547, 548, 0, 549,
	550, 551, 552, 553, 554, 555, 556, 1271, 557, 558,
	560, 559, 561, 0, 562, 0, 563, 564, 565, 0,
	0, 0, 0, 0, 566, 567, 569, 0, 570, 571,
	572, 573, 568, 574, 575, 576, 577, 578, 579, 0,
	580, 581, 582, 1312, 583, 584, 585, 586, 587, 1201,
	588, 0, 589, 590, 597, 598, 599, 591, 592, 593,
	600, 601, 602, 603, 604, 0, 606, 607, 605, 608,
	609, 610, 1254, 611, 612, 594, 595, 613, 614, 1313,
	615, 616, 617, 618, 619, 620, 621, 1269, 0, 622,
	0, 623, 624, 625, 626, 627, 629, 596, 630, 635,
	636, 1316, 631, 632, 633, 634, 1292, 638, 639, 640,
	0, 641, 642, 1187, 637, 628, 0, 643, 644, 645,
	646, 647, 648, 0, 649, 650, 0, 651, 1281, 1282,
	1283, 1284, 0, 662, 0, 652, 654, 655, 656, 1293,
	657, 1294, 1211, 658, 659, 660, 661, 653, 663, 664,
	0, 1194, 665, 666, 668, 670, 671, 667, 669, 672,
	1255, 673, 0, 0, 674, 675, 676, 736, 1278, 1315,
	0, 678, 677, 679, 680, 681, 739, 682, 683, 0,
	0, 0, 0, 684, 685, 740, 686, 687, 688, 1191,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1186, 0, 0, 0, 0, 0,
	0, 1184, 1185, 0, 0, 0, 0, 0, 0, 2037,
	0, 1217, 0, 0, 0, 1215, 1233, 1205, 1206, 1207,
	1203, 1204, 1216, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 297, 298, 300, 299, 301, 302, 303,
	304, 2651, 305, 306, 0, 0, 0, 0, 0, 1257,
	1221, 0, 0, 307, 0, 308, 309, 1297, 310, 311,
	312, 313, 314, 315, 316, 690, 1270, 0, 317, 1277,
	318, 1276, 0, 1287, 319, 320, 321, 322, 323, 324,
	1223, 1256, 1188, 325, 1317, 1318, 697, 0, 326, 327,
	1263, 0, 1244, 0, 328, 329, 330, 331, 332, 333,
	334, 335, 0, 0, 337, 338, 339, 336, 340, 0,
	341, 0, 342, 343, 344, 345, 346, 347, 0, 348,
	349, 350, 1298, 351, 352, 353, 1247, 1245, 1246, 1253,
	1249, 1248, 1252, 354, 355, 356, 357, 358, 1280, 359,
	361, 1274, 1273, 1193, 364, 360, 362, 0, 365, 363,
	366, 0, 367, 368, 369, 0, 0, 370, 1265, 372,
	0, 373, 374, 375, 0, 376, 377, 378, 0, 379,
	380, 1199, 381, 382, 383, 385, 387, 384, 386, 388,
	389, 390, 391, 1288, 1289, 392, 1212, 294, 0, 0,
	0, 0, 0, 393, 394, 395, 1272, 0, 0, 0,
	396, 0, 397, 398, 399, 0, 400, 401, 0, 1299,
	402, 403, 404, 1285, 1286, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 0, 414, 1295, 0, 1222, 415,
	0, 416, 417, 418, 419, 420, 421, 422, 1258, 1259,
	1262, 511, 1301, 423, 424, 0, 425, 426, 427, 428,
	429, 0, 0, 0, 295, 430, 431, 432, 0, 1300,
	512, 433, 1267, 1268, 0, 1228, 0, 434, 435, 1302,
	1260, 1303, 436, 437, 438, 1304, 439, 0, 0, 0,
	440, 441, 442, 443, 444, 445, 0, 446, 448, 447,
	0, 449, 1296, 1305, 450, 451, 1306, 0, 452, 453,
	454, 455, 456, 457, 460, 1251, 1250, 458, 459, 461,
	462, 0, 463, 464, 466, 469, 465, 467, 468, 470,
	483, 484, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 486, 0, 485, 1307, 487, 488,
	489, 490, 491, 498, 500, 501, 496, 497, 499, 502,
	503, 505, 493, 494, 495, 1308, 504, 492, 1190, 296,
	1309, 506, 507, 508, 509, 1213, 1261, 510, 1275, 513,
	514, 0, 0, 515, 0, 516, 0, 0, 518, 519,
	520, 0, 0, 521, 522, 719, 1310, 523, 1311, 1290,
	524, 525, 1200, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 0, 535, 536, 721, 537, 538, 539, 722,
	540, 541, 542, 1291, 543, 724, 544, 545, 0, 546,
	547, 548, 0, 549, 550, 551, 552, 553, 554, 555,
	556, 1271, 557, 558, 560, 559, 561, 0, 562, 0,
	563, 564, 565, 0, 0, 0, 0, 0, 566, 567,
	569, 0, 570, 571, 572, 573, 568, 574, 575, 576,
	577, 578, 579, 0, 580, 581, 582, 1312, 583, 584,
	585, 586, 587, 1201, 588, 0, 589, 590, 597, 598,
	599, 591, 592, 593, 600, 601, 602, 603, 604, 0,
	606, 607, 605, 608, 609, 610, 1254, 611, 612, 594,
	595, 613, 614, 1313, 615, 616, 617, 618, 619, 620,
	621, 1269, 0, 622, 0, 623, 624, 625, 626, 627,
	629, 596, 630, 635, 636, 1316, 631, 632, 633, 634,
	1292, 638, 639, 640, 0, 641, 642, 1187, 637, 628,
	0, 643, 644, 645, 646, 647, 648, 0, 649, 650,
	0, 651, 1281, 1282, 1283, 1284, 0, 662, 0, 652,
	654, 655, 656, 1293, 657, 1294, 1211, 658, 659, 660,
	661, 653, 663, 664, 0, 1194, 665, 666, 668, 670,
	671, 667, 669, 672, 1255, 673, 0, 0, 674, 675,
	676, 736, 1278, 1315, 0, 678, 677, 679, 680, 681,
	739, 682, 683, 0, 0, 0, 0, 684, 685, 740,
	686, 687, 688, 1191, 0, 0, 0, 0, 2612, 0,
	1233, 1205, 1206, 1207, 1203, 1204, 1216, 0, 1186, 0,
	0, 0, 0, 0, 0, 1184, 1185, 297, 298, 300,
	299, 301, 302, 303, 304, 1217, 305, 306, 0, 1215,
	0, 0, 0, 1257, 1221, 0, 0, 307, 0, 308,
	309, 1297, 310, 311, 312, 313, 314, 315, 316, 690,
	1270, 0, 317, 1277, 318, 1276, 0, 1287, 319, 320,
	321, 322, 323, 324, 1223, 1256, 1188, 325, 1317, 1318,
	697, 0, 326, 327, 1263, 0, 1244, 0, 328, 329,
	330, 331, 332, 333, 334, 335, 0, 0, 337, 338,
	339, 336, 340, 0, 341, 0, 342, 343, 344, 345,
	346, 347, 0, 348, 349, 350, 1298, 351, 352, 353,
	1247, 1245, 1246, 1253, 1249, 1248, 1252, 354, 355, 356,
	357, 358, 1280, 359, 361, 1274, 1273, 1193, 364, 360,
	362, 0, 365, 363, 366, 0, 367, 368, 369, 0,
	0, 370, 1265, 372, 0, 373, 374, 375, 0, 376,
	377, 378, 0, 379, 380, 1199, 381, 382, 383, 385,
	387, 384, 386, 388, 389, 390, 391, 1288, 1289, 392,
	1212, 294, 0, 0, 0, 0, 0, 393, 394, 395,
	1272, 0, 0, 0, 396, 0, 397, 398, 399, 0,
	400, 401, 0, 1299, 402, 403, 404, 1285, 1286, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 0, 414,
	1295, 0, 1222, 415, 0, 416, 417, 418, 419, 420,
	421, 422, 1258, 1259, 1262, 511, 1301, 423, 424, 0,
	425, 426, 427, 428, 429, 0, 0, 0, 295, 430,
	431, 432, 0, 1300, 512, 433, 1267, 1268, 0, 1228,
	0, 434, 435, 1302, 1260, 1303, 436, 437, 438, 1304,
	439, 0, 0, 0, 440, 441, 442, 443, 444, 445,
	0, 446, 448, 447, 0, 449, 1296, 1305, 450, 451,
	1306, 0, 452, 453, 454, 455, 456, 457, 460, 1251,
	1250, 458, 459, 461, 462, 0, 463, 464, 466, 469,
	465, 467, 468, 470, 483, 484, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 486, 0,
	485, 1307, 487, 488, 489, 490, 491, 498, 500, 501,
	496, 497, 499, 502, 503, 505, 493, 494, 495, 1308,
	504, 492, 1190, 296, 1309, 506, 507, 508, 509, 1213,
	1261, 510, 1275, 513, 514, 0, 0, 515, 0, 516,
	0, 0, 518, 519, 520, 0, 0, 521, 522, 719,
	1310, 523, 1311, 1290, 524, 525, 1200, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 0, 535, 536, 721,
	537, 538, 539, 722, 540, 541, 542, 1291, 543, 724,
	544, 545, 0, 546, 547, 548, 0, 549, 550, 551,
	552, 553, 554, 555, 556, 1271, 557, 558, 560, 559,
	561, 0, 562, 0, 563, 564, 565, 0, 0, 0,
	0, 0, 566, 567, 569, 0, 570, 571, 572, 573,
	568, 574, 575, 576, 577, 578, 579, 0, 580, 581,
	582, 1312, 583, 584, 585, 586, 587, 1201, 588, 0,
	589, 590, 597, 598, 599, 591, 592, 593, 600, 601,
	602, 603, 604, 0, 606, 607, 605, 608, 609, 610,
	1254, 611, 612, 594, 595, 613, 614, 1313, 615, 616,
	617, 618, 619, 620, 621, 1269, 0, 622, 0, 623,
	624, 625, 626, 627, 629, 596, 630, 635, 636, 1316,
	631, 632, 633, 634, 1292, 638, 639, 640, 0, 641,
	642, 1187, 637, 628, 0, 643, 644, 645, 646, 647,
	648, 0, 649, 650, 0, 651, 1281, 1282, 1283, 1284,
	0, 662, 0, 652, 654, 655, 656, 1293, 657, 1294,
	1211, 658, 659, 660, 661, 653, 663, 664, 0, 1194,
	665, 666, 668, 670, 671, 667, 669, 672, 1255, 673,
	0, 0, 674, 675, 676, 736, 1278, 1315, 0, 678,
	677, 679, 680, 681, 739, 682, 683, 0, 0, 0,
	0, 684, 685, 740, 686, 687, 688, 1191, 0, 0,
	0, 0, 2583, 0, 1233, 1205, 1206, 1207, 1203, 1204,
	1216, 0, 1186, 0, 0, 0, 0, 0, 0, 1184,
	1185, 297, 298, 300, 299, 301, 302, 303, 304, 1217,
	305, 306, 0, 1215, 0, 0, 0, 1257, 1221, 0,
	0, 307, 0, 308, 309, 1297, 310, 311, 312, 313,
	314, 315, 316, 690, 1270, 0, 317, 1277, 318, 1276,
	0, 1287, 319, 320, 321, 322, 323, 324, 1223, 1256,
	1188, 325, 1317, 1318, 697, 0, 326, 327, 1263, 0,
	1244, 0, 328, 329, 330, 331, 332, 333, 334, 335,
	0, 0, 337, 338, 339, 336, 340, 0, 341, 0,
	342, 343, 344, 345, 346, 347, 0, 348, 349, 350,
	1298, 351, 352, 353, 1247, 1245, 1246, 1253, 1249, 1248,
	1252, 354, 355, 356, 357, 358, 1280, 359, 361, 1274,
	1273, 1193, 364, 360, 362, 0, 365, 363, 366, 0,
	367, 368, 369, 0, 0, 370, 1265, 372, 0, 373,
	374, 375, 0, 376, 377, 378, 0, 379, 380, 1199,
	381, 382, 383, 385, 387, 384, 386, 388, 389, 390,
	391, 1288, 1289, 392, 1212, 294, 0, 0, 0, 0,
	0, 393, 394, 395, 1272, 0, 0, 0, 396, 0,
	397, 398, 399, 0, 400, 401, 0, 1299, 402, 403,
	404, 1285, 1286, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 0, 414, 1295, 0, 1222, 415, 0, 416,
	417, 418, 419, 420, 421, 422, 1258, 1259, 1262, 511,
	1301, 423, 424, 0, 425, 426, 427, 428, 429, 0,
	0, 0, 295, 430, 431, 432, 0, 1300, 512, 433,
	1267, 1268, 0, 1228, 0, 434, 435, 1302, 1260, 1303,
	436, 437, 438, 1304, 439, 0, 0, 0, 440, 441,
	442, 443, 444, 445, 0, 446, 448, 447, 0, 449,
	1296, 1305, 450, 451, 1306, 0, 452, 453, 454, 455,
	456, 457, 460, 1251, 1250, 458, 459, 461, 462, 0,
	463, 464, 466, 469, 465, 467, 468, 470, 483, 484,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 486, 0, 485, 1307, 487, 488, 489, 490,
	491, 498, 500, 501, 496, 497, 499, 502, 503, 505,
	493, 494, 495, 1308, 504, 492, 1190, 296, 1309, 506,
	507, 508, 509, 1213, 1261, 510, 1275, 513, 514, 0,
	0, 515, 0, 516, 0, 0, 518, 519, 520, 0,
	0, 521, 522, 719, 1310, 523, 1311, 1290, 524, 525,
	1200, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	0, 535, 536, 721, 537, 538, 539, 722, 540, 541,
	542, 1291, 543, 724, 544, 545, 0, 546, 547, 548,
	0, 549, 550, 551, 552, 553, 554, 555, 556, 1271,
	557, 558, 560, 559, 561, 0, 562, 0, 563, 564,
	565, 0, 0, 0, 0, 0, 566, 567, 569, 0,
	570, 571, 572, 573, 568, 574, 575, 576, 577, 578,
	579, 0, 580, 581, 582, 1312, 583, 584, 585, 586,
	587, 1201, 588, 0, 589, 590, 597, 598, 599, 591,
	592, 593, 600, 601, 602, 603, 604, 0, 606, 607,
	605, 608, 609, 610, 1254, 611, 612, 594, 595, 613,
	614, 1313, 615, 616, 617, 618, 619, 620, 621, 1269,
	0, 622, 0, 623, 624, 625, 626, 627, 629, 596,
	630, 635, 636, 1316, 631, 632, 633, 634, 1292, 638,
	639, 640, 0, 641, 642, 1187, 637, 628, 0, 643,
	644, 645, 646, 647, 648, 0, 649, 650, 0, 651,
	1281, 1282, 1283, 1284, 0, 662, 0, 652, 654, 655,
	656, 1293, 657, 1294, 1211, 658, 659, 660, 661, 653,
	663, 664, 0, 1194, 665, 666, 668, 670, 671, 667,
	669, 672, 1255, 673, 0, 0, 674, 675, 676, 736,
	1278, 1315, 0, 678, 677, 679, 680, 681, 739, 682,
	683, 0, 0, 0, 0, 684, 685, 740, 686, 687,
	688, 1191, 0, 0, 0, 0, 1868, 0, 1233, 1205,
	1206, 1207, 1203, 1204, 1216, 0, 1186, 0, 0, 0,
	0, 0, 0, 1184, 1185, 297, 298, 300, 299, 301,
	302, 303, 304, 1217, 305, 306, 0, 1215, 0, 0,
	0, 1257, 1221, 0, 0, 307, 0, 308, 309, 1297,
	310, 311, 312, 313, 314, 315, 316, 690, 1270, 0,
	317, 1277, 318, 1276, 0, 1287, 319, 320, 321, 322,
	323, 324, 1223, 1256, 1188, 325, 1317, 1318, 697, 0,
	326, 327, 1263, 0, 1244, 0, 328, 329, 330, 331,
	332, 333, 334, 335, 0, 0, 337, 338, 339, 336,
	340, 0, 341, 0, 342, 343, 344, 345, 346, 347,
	0, 348, 349, 350, 1298, 351, 352, 353, 1247, 1245,
	1246, 1253, 1249, 1248, 1252, 354, 355, 356, 357, 358,
	1280, 359, 361, 1274, 1273, 1193, 364, 360, 362, 0,
	365, 363, 366, 0, 367, 368, 369, 0, 0, 370,
	1265, 372, 0, 373, 374, 375, 0, 376, 377, 378,
	0, 379, 380, 1199, 381, 382, 383, 385, 387, 384,
	386, 388, 389, 390, 391, 1288, 1289, 392, 1212, 294,
	0, 0, 0, 0, 0, 393, 394, 395, 1272, 0,
	0, 0, 396, 0, 397, 398, 399, 0, 400, 401,
	0, 1299, 402, 403, 404, 1285, 1286, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 0, 414, 1295, 0,
	1222, 415, 0, 416, 417, 418, 419, 420, 421, 422,
	1258, 1259, 1262, 511, 1301, 423, 424, 0, 425, 426,
	427, 428, 429, 0, 0, 0, 295, 430, 431, 432,
	0, 1300, 512, 433, 1267, 1268, 0, 1228, 0, 434,
	435, 1302, 1260, 1303, 436, 437, 438, 1304, 439, 0,
	0, 0, 440, 441, 442, 443, 444, 445, 0, 446,
	448, 447, 0, 449, 1296, 1305, 450, 451, 1306, 0,
	452, 453, 454, 455, 456, 457, 460, 1251, 1250, 458,
	459, 461, 462, 0, 463, 464, 466, 469, 465, 467,
	468, 470, 483, 484, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 486, 0, 485, 1307,
	487, 488, 489, 490, 491, 498, 500, 501, 496, 497,
	499, 502, 503, 505, 493, 494, 495, 1308, 504, 492,
	1190, 296, 1309, 506, 507, 508, 509, 1213, 1261, 510,
	1275, 513, 514, 0, 0, 515, 0, 516, 0, 0,
	518, 519, 520, 0, 0, 521, 522, 719, 1310, 523,
	1311, 1290, 524, 525, 1200, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 0, 535, 536, 721, 537, 538,
	539, 722, 540, 541, 542, 1291, 543, 724, 544, 545,
	0, 546, 547, 548, 0, 549, 550, 551, 552, 553,
	554, 555, 556, 1271, 557, 558, 560, 559, 561, 0,
	562, 0, 563, 564, 565, 0, 0, 0, 0, 0,
	566, 567, 569, 0, 570, 571, 572, 573, 568, 574,
	575, 576, 577, 578, 579, 0, 580, 581, 582, 1312,
	583, 584, 585, 586, 587, 1201, 588, 0, 589, 590,
	597, 598, 599, 591, 592, 593, 600, 601, 602, 603,
	604, 0, 606, 607, 605, 608, 609, 610, 1254, 611,
	612, 594, 595, 613, 614, 1313, 615, 616, 617, 618,
	619, 620, 621, 1269, 0, 622, 0, 623, 624, 625,
	626, 627, 629, 596, 630, 635, 636, 1316, 631, 632,
	633, 634, 1292, 638, 639, 640, 0, 641, 642, 1187,
	637, 628, 0, 643, 644, 645, 646, 647, 648, 0,
	649, 650, 0, 651, 1281, 1282, 1283, 1284, 0, 662,
	0, 652, 654, 655, 656, 1293, 657, 1294, 1211, 658,
	659, 660, 661, 653, 663, 664, 0, 1194, 665, 666,
	668, 670, 671, 667, 669, 672, 1255, 673, 0, 0,
	674, 675, 676, 736, 1278, 1315, 0, 678, 677, 679,
	680, 681, 739, 682, 683, 0, 0, 0, 0, 684,
	685, 740, 686, 687, 688, 1191, 0, 0, 0, 0,
	1796, 0, 1233, 1205, 1206, 1207, 1203, 1204, 1216, 0,
	1186, 0, 0, 0, 0, 0, 0, 1184, 1185, 297,
	298, 300, 299, 301, 302, 303, 304, 1217, 305, 306,
	0, 1215, 0, 0, 0, 1257, 1221, 0, 0, 307,
	0, 308, 309, 1297, 310, 311, 312, 313, 314, 315,
	316, 690, 1270, 0, 317, 1277, 318, 1276, 0, 1287,
	319, 320, 321, 322, 323, 324, 1223, 1256, 1188, 325,
	1317, 1318, 697, 0, 326, 327, 1263, 0, 1244, 0,
	328, 329, 330, 331, 332, 333, 334, 335, 0, 0,
	337, 338, 339, 336, 340, 0, 341, 0, 342, 343,
	344, 345, 346, 347, 0, 348, 349, 350, 1298, 351,
	352, 353, 1247, 1245, 1246, 1253, 1249, 1248, 1252, 354,
	355, 356, 357, 358, 1280, 359, 361, 1274, 1273, 1193,
	364, 360, 362, 0, 365, 363, 366, 0, 367, 368,
	369, 0, 0, 370, 1265, 372, 0, 373, 374, 375,
	0, 376, 377, 378, 0, 379, 380, 1199, 381, 382,
	383, 385, 387, 384, 386, 388, 389, 390, 391, 1288,
	1289, 392, 1212, 294, 0, 0, 0, 0, 0, 393,
	394, 395, 1272, 0, 0, 0, 396, 0, 397, 398,
	399, 0, 400, 401, 0, 1299, 402, 403, 404, 1285,
	1286, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	0, 414, 1295, 0, 1222, 415, 0, 416, 417, 418,
	419, 420, 421, 422, 1258, 1259, 1262, 511, 1301, 423,
	424, 0, 425, 426, 427, 428, 429, 0, 0, 0,
	295, 430, 431, 432, 0, 1300, 512, 433, 1267, 1268,
	0, 1228, 0, 434, 435, 1302, 1260, 1303, 436, 437,
	438, 1304, 439, 0, 0, 0, 440, 441, 442, 443,
	444, 445, 0, 446, 448, 447, 0, 449, 1296, 1305,
	450, 451, 1306, 0, 452, 453, 454, 455, 456, 457,
	460, 1251, 1250, 458, 459, 461, 462, 0, 463, 464,
	466, 469, 465, 467, 468, 470, 483, 484, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	486, 0, 485, 1307, 487, 488, 489, 490, 491, 498,
	500, 501, 496, 497, 499, 502, 503, 505, 493, 494,
	495, 1308, 504, 492, 1190, 296, 1309, 506, 507, 508,
	509, 1213, 1261, 510, 1275, 513, 514, 0, 0, 515,
	0, 516, 0, 0, 518, 519, 520, 0, 0, 521,
	522, 719, 1310, 523, 1311, 1290, 524, 525, 1200, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 0, 535,
	536, 721, 537, 538, 539, 722, 540, 541, 542, 1291,
	543, 724, 544, 545, 0, 546, 547, 548, 0, 549,
	550, 551, 552, 553, 554, 555, 556, 1271, 557, 558,
	560, 559, 561, 0, 562, 0, 563, 564, 565, 0,
	0, 0, 0, 0, 566, 567, 569, 0, 570, 571,
	572, 573, 568, 574, 575, 576, 577, 578, 579, 0,
	580, 581, 582, 1312, 583, 584, 585, 586, 587, 1201,
	588, 0, 589, 590, 597, 598, 599, 591, 592, 593,
	600, 601, 602, 603, 604, 0, 606, 607, 605, 608,
	609, 610, 1254, 611, 612, 594, 595, 613, 614, 1313,
	615, 616, 617, 618, 619, 620, 621, 1269, 0, 622,
	0, 623, 624, 625, 626, 627, 629, 596, 630, 635,
	636, 1316, 631, 632, 633, 634, 1292, 638, 639, 640,
	0, 641, 642, 1187, 637, 628, 0, 643, 644, 645,
	646, 647, 648, 0, 649, 650, 0, 651, 1281, 1282,
	1283, 1284, 0, 662, 0, 652, 654, 655, 656, 1293,
	657, 1294, 1211, 658, 659, 660, 661, 653, 663, 664,
	0, 1194, 665, 666, 668, 670, 671, 667, 669, 672,
	1255, 673, 0, 0, 674, 675, 676, 736, 1278, 1315,
	0, 678, 677, 679, 680, 681, 739, 682, 683, 0,
	0, 0, 0, 684, 685, 740, 686, 687, 688, 1191,
	0, 0, 0, 0, 1791, 0, 1233, 1205, 1206, 1207,
	1203, 1204, 1216, 0, 1186, 0, 0, 0, 0, 0,
	0, 1184, 1185, 297, 298, 300, 299, 301, 302, 303,
	304, 1217, 305, 306, 0, 1215, 0, 0, 0, 1257,
	1221, 0, 0, 307, 0, 308, 309, 1297, 310, 311,
	312, 313, 314, 315, 316, 690, 1270, 0, 317, 1277,
	318, 1276, 0, 1287, 319, 320, 321, 322, 323, 324,
	1223, 1256, 1188, 325, 1317, 1318, 697, 0, 326, 327,
	1263, 0, 1244, 0, 328, 329, 330, 331, 332, 333,
	334, 335, 0, 0, 337, 338, 339, 336, 340, 0,
	341, 0, 342, 343, 344, 345, 346, 347, 0, 348,
	349, 350, 1298, 351, 352, 353, 1247, 1245, 1246, 1253,
	1249, 1248, 1252, 354, 355, 356, 357, 358, 1280, 359,
	361, 1274, 1273, 1193, 364, 360, 362, 0, 365, 363,
	366, 0, 367, 368, 369, 0, 0, 370, 1265, 372,
	0, 373, 374, 375, 0, 376, 377, 378, 0, 379,
	380, 1199, 381, 382, 383, 385, 387, 384, 386, 388,
	389, 390, 391, 1288, 1289, 392, 1212, 294, 0, 0,
	0, 0, 0, 393, 394, 395, 1272, 0, 0, 0,
	396, 0, 397, 398, 399, 0, 400, 401, 0, 1299,
	402, 403, 404, 1285, 1286, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 0, 414, 1295, 0, 1222, 415,
	0, 416, 417, 418, 419, 420, 421, 422, 1258, 1259,
	1262, 511, 1301, 423, 424, 0, 425, 426, 427, 428,
	429, 0, 0, 0, 295, 430, 431, 432, 0, 1300,
	512, 433, 1267, 1268, 0, 1228, 0, 434, 435, 1302,
	1260, 1303, 436, 437, 438, 1304, 439, 0, 0, 0,
	440, 441, 442, 443, 444, 445, 0, 446, 448, 447,
	0, 449, 1296, 1305, 450, 451, 1306, 0, 452, 453,
	454, 455, 456, 457, 460, 1251, 1250, 458, 459, 461,
	462, 0, 463, 464, 466, 469, 465, 467, 468, 470,
	483, 484, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 486, 0, 485, 1307, 487, 488,
	489, 490, 491, 498, 500, 501, 496, 497, 499, 502,
	503, 505, 493, 494, 495, 1308, 504, 492, 1190, 296,
	1309, 506, 507, 508, 509, 1213, 1261, 510, 1275, 513,
	514, 0, 0, 515, 0, 516, 0, 0, 518, 519,
	520, 0, 0, 521, 522, 719, 1310, 523, 1311, 1290,
	524, 525, 1200, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 0, 535, 536, 721, 537, 538, 539, 722,
	540, 541, 542, 1291, 543, 724, 544, 545, 0, 546,
	547, 548, 0, 549, 550, 551, 552, 553, 554, 555,
	556, 1271, 557, 558, 560, 559, 561, 0, 562, 0,
	563, 564, 565, 0, 0, 0, 0, 0, 566, 567,
	569, 0, 570, 571, 572, 573, 568, 574, 575, 576,
	577, 578, 579, 0, 580, 581, 582, 1312, 583, 584,
	585, 586, 587, 1201, 588, 0, 589, 590, 597, 598,
	599, 591, 592, 593, 600, 601, 602, 603, 604, 0,
	606, 607, 605, 608, 609, 610, 1254, 611, 612, 594,
	595, 613, 614, 1313, 615, 616, 617, 618, 619, 620,
	621, 1269, 0, 622, 0, 623, 624, 625, 626, 627,
	629, 596, 630, 635, 636, 1316, 631, 632, 633, 634,
	1292, 638, 639, 640, 0, 641, 642, 1187, 637, 628,
	0, 643, 644, 645, 646, 647, 648, 0, 649, 650,
	0, 651, 1281, 1282, 1283, 1284, 0, 662, 0, 652,
	654, 655, 656, 1293, 657, 1294, 1211, 658, 659, 660,
	661, 653, 663, 664, 0, 1194, 665, 666, 668, 670,
	671, 667, 669, 672, 1255, 673, 0, 0, 674, 675,
	676, 736, 1278, 1315, 0, 678, 677, 679, 680, 681,
	739, 682, 683, 0, 0, 0, 0, 684, 685, 740,
	686, 687, 688, 1191, 0, 0, 0, 0, 1777, 0,
	1233, 1205, 1206, 1207, 1203, 1204, 1216, 0, 1186, 0,
	0, 0, 0, 0, 0, 1184, 1185, 297, 298, 300,
	299, 301, 302, 303, 304, 1217, 305, 306, 0, 1215,
	0, 0, 0, 1257, 1221, 0, 0, 307, 0, 308,
	309, 1297, 310, 311, 312, 313, 314, 315, 316, 690,
	1270, 0, 317, 1277, 318, 1276, 0, 1287, 319, 320,
	321, 322, 323, 324, 1223, 1256, 1188, 325, 1317, 1318,
	697, 0, 326, 327, 1263, 0, 1244, 0, 328, 329,
	330, 331, 332, 333, 334, 335, 0, 0, 337, 338,
	339, 336, 340, 0, 341, 0, 342, 343, 344, 345,
	346, 347, 0, 348, 349, 350, 1298, 351, 352, 353,
	1247, 1245, 1246, 1253, 1249, 1248, 1252, 354, 355, 356,
	357, 358, 1280, 359, 361, 1274, 1273, 1193, 364, 360,
	362, 0, 365, 363, 366, 0, 367, 368, 369, 0,
	0, 370, 1265, 372, 0, 373, 374, 375, 0, 376,
	377, 378, 0, 379, 380, 1199, 381, 382, 383, 385,
	387, 384, 386, 388, 389, 390, 391, 1288, 1289, 392,
	1212, 294, 0, 0, 0, 0, 0, 393, 394, 395,
	1272, 0, 0, 0, 396, 0, 397, 398, 399, 0,
	400, 401, 0, 1299, 402, 403, 404, 1285, 1286, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 0, 414,
	1295, 0, 1222, 415, 0, 416, 417, 418, 419, 420,
	421, 422, 1258, 1259, 1262, 511, 1301, 423, 424, 0,
	425, 426, 427, 428, 429, 0, 0, 0, 295, 430,
	431, 432, 0, 1300, 512, 433, 1267, 1268, 0, 1228,
	0, 434, 435, 1302, 1260, 1303, 436, 437, 438, 1304,
	439, 0, 0, 0, 440, 441, 442, 443, 444, 445,
	0, 446, 448, 447, 0, 449, 1296, 1305, 450, 451,
	1306, 0, 452, 453, 454, 455, 456, 457, 460, 1251,
	1250, 458, 459, 461, 462, 0, 463, 464, 466, 469,
	465, 467, 468, 470, 483, 484, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 486, 0,
	485, 1307, 487, 488, 489, 490, 491, 498, 500, 501,
	496, 497, 499, 502, 503, 505, 493, 494, 495, 1308,
	504, 492, 1190, 296, 1309, 506, 507, 508, 509, 1213,
	1261, 510, 1275, 513, 514, 0, 0, 515, 0, 516,
	0, 0, 518, 519, 520, 0, 0, 521, 522, 719,
	1310, 523, 1311, 1290, 524, 525, 1200, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 0, 535, 536, 721,
	537, 538, 539, 722, 540, 541, 542, 1291, 543, 724,
	544, 545, 0, 546, 547, 548, 0, 549, 550, 551,
	552, 553, 554, 555, 556, 1271, 557, 558, 560, 559,
	561, 0, 562, 0, 563, 564, 565, 0, 0, 0,
	0, 0, 566, 567, 569, 0, 570, 571, 572, 573,
	568, 574, 575, 576, 577, 578, 579, 0, 580, 581,
	582, 1312, 583, 584, 585, 586, 587, 1201, 588, 0,
	589, 590, 597, 598, 599, 591, 592, 593, 600, 601,
	602, 603, 604, 0, 606, 607, 605, 608, 609, 610,
	1254, 611, 612, 594, 595, 613, 614, 1313, 615, 616,
	617, 618, 619, 620, 621, 1269, 0, 622, 0, 623,
	624, 625, 626, 627, 629, 596, 630, 635, 636, 1316,
	631, 632, 633, 634, 1292, 638, 639, 640, 0, 641,
	642, 1187, 637, 628, 0, 643, 644, 645, 646, 647,
	648, 0, 649, 650, 0, 651, 1281, 1282, 1283, 1284,
	0, 662, 0, 652, 654, 655, 656, 1293, 657, 1294,
	1211, 658, 659, 660, 661, 653, 663, 664, 0, 1194,
	665, 666, 668, 670, 671, 667, 669, 672, 1255, 673,
	0, 0, 674, 675, 676, 736, 1278, 1315, 0, 678,
	677, 679, 680, 681, 739, 682, 683, 0, 0, 0,
	0, 684, 685, 740, 686, 687, 688, 1191, 0, 0,
	0, 0, 1772, 0, 1233, 1205, 1206, 1207, 1203, 1204,
	1216, 0, 1186, 0, 0, 0, 0, 0, 0, 1184,
	1185, 297, 298, 300, 299, 301, 302, 303, 304, 1217,
	305, 306, 0, 1215, 0, 0, 0, 1257, 1221, 0,
	0, 307, 0, 308, 309, 1297, 310, 311, 312, 313,
	314, 315, 316, 690, 1270, 0, 317, 1277, 318, 1276,
	0, 1287, 319, 320, 321, 322, 323, 324, 1223, 1256,
	1188, 325, 1317, 1318, 697, 0, 326, 327, 1263, 0,
	1244, 0, 328, 329, 330, 331, 332, 333, 334, 335,
	0, 0, 337, 338, 339, 336, 340, 0, 341, 0,
	342, 343, 344, 345, 346, 347, 0, 348, 349, 350,
	1298, 351, 352, 353, 1247, 1245, 1246, 1253, 1249, 1248,
	1252, 354, 355, 356, 357, 358, 1280, 359, 361, 1274,
	1273, 1193, 364, 360, 362, 0, 365, 363, 366, 0,
	367, 368, 369, 0, 0, 370, 1265, 372, 0, 373,
	374, 375, 0, 376, 377, 378, 0, 379, 380, 1199,
	381, 382, 383, 385, 387, 384, 386, 388, 389, 390,
	391, 1288, 1289, 392, 1212, 294, 0, 0, 0, 0,
	0, 393, 394, 395, 1272, 0, 0, 0, 396, 0,
	397, 398, 399, 0, 400, 401, 0, 1299, 402, 403,
	404, 1285, 1286, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 0, 414, 1295, 0, 1222, 415, 0, 416,
	417, 418, 419, 420, 421, 422, 1258, 1259, 1262, 511,
	1301, 423, 424, 0, 425, 426, 427, 428, 429, 0,
	0, 0, 295, 430, 431, 432, 0, 1300, 512, 433,
	1267, 1268, 0, 1228, 0, 434, 435, 1302, 1260, 1303,
	436, 437, 438, 1304, 439, 0, 0, 0, 440, 441,
	442, 443, 444, 445, 0, 446, 448, 447, 0, 449,
	1296, 1305, 450, 451, 1306, 0, 452, 453, 454, 455,
	456, 457, 460, 1251, 1250, 458, 459, 461, 462, 0,
	463, 464, 466, 469, 465, 467, 468, 470, 483, 484,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 486, 0, 485, 1307, 487, 488, 489, 490,
	491, 498, 500, 501, 496, 497, 499, 502, 503, 505,
	493, 494, 495, 1308, 504, 492, 1190, 296, 1309, 506,
	507, 508, 509, 1213, 1261, 510, 1275, 513, 514, 0,
	0, 515, 0, 516, 0, 0, 518, 519, 520, 0,
	0, 521, 522, 719, 1310, 523, 1311, 1290, 524, 525,
	1200, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	0, 535, 536, 721, 537, 538, 539, 722, 540, 541,
	542, 1291, 543, 724, 544, 545, 0, 546, 547, 548,
	0, 549, 550, 551, 552, 553, 554, 555, 556, 1271,
	557, 558, 560, 559, 561, 0, 562, 0, 563, 564,
	565, 0, 0, 0, 0, 0, 566, 567, 569, 0,
	570, 571, 572, 573, 568, 574, 575, 576, 577, 578,
	579, 0, 580, 581, 582, 1312, 583, 584, 585, 586,
	587, 1201, 588, 0, 589, 590, 597, 598, 599, 591,
	592, 593, 600, 601, 602, 603, 604, 0, 606, 607,
	605, 608, 609, 610, 1254, 611, 612, 594, 595, 613,
	614, 1313, 615, 616, 617, 618, 619, 620, 621, 1269,
	0, 622, 0, 623, 624, 625, 626, 627, 629, 596,
	630, 635, 636, 1316, 631, 632, 633, 634, 1292, 638,
	639, 640, 0, 641, 642, 1187, 637, 628, 0, 643,
	644, 645, 646, 647, 648, 0, 649, 650, 0, 651,
	1281, 1282, 1283, 1284, 0, 662, 0, 652, 654, 655,
	656, 1293, 657, 1294, 1211, 658, 659, 660, 661, 653,
	663, 664, 0, 1194, 665, 666, 668, 670, 671, 667,
	669, 672, 1255, 673, 0, 0, 674, 675, 676, 736,
	1278, 1315, 0, 678, 677, 679, 680, 681, 739, 682,
	683, 0, 0, 0, 0, 684, 685, 740, 686, 687,
	688, 1191, 0, 0, 0, 0, 1682, 0, 1233, 1205,
	1206, 1207, 1203, 1204, 1216, 0, 1186, 0, 0, 0,
	0, 0, 0, 1184, 1185, 297, 298, 300, 299, 301,
	302, 303, 304, 1217, 305, 306, 0, 1215, 0, 0,
	0, 1257, 1221, 0, 0, 307, 0, 308, 309, 1297,
	310, 311, 312, 313, 314, 315, 316, 690, 1270, 0,
	317, 1277, 318, 1276, 0, 1287, 319, 320, 321, 322,
	323, 324, 1223, 1256, 1188, 325, 1317, 1318, 697, 0,
	326, 327, 1263, 0, 1244, 0, 328, 329, 330, 331,
	332, 333, 334, 335, 0, 0, 337, 338, 339, 336,
	340, 0, 341, 0, 342, 343, 344, 345, 346, 347,
	0, 348, 349, 350, 1298, 351, 352, 353, 1247, 1245,
	1246, 1253, 1249, 1248, 1252, 354, 355, 356, 357, 358,
	1280, 359, 361, 1274, 1273, 1193, 364, 360, 362, 0,
	365, 363, 366, 0, 367, 368, 369, 0, 0, 370,
	1265, 372, 0, 373, 374, 375, 0, 376, 377, 378,
	0, 379, 380, 1199, 381, 382, 383, 385, 387, 384,
	386, 388, 389, 390, 391, 1288, 1289, 392, 1212, 294,
	0, 0, 0, 0, 0, 393, 394, 395, 1272, 0,
	0, 0, 396, 0, 397, 398, 399, 0, 400, 401,
	0, 1299, 402, 403, 404, 1285, 1286, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 0, 414, 1295, 0,
	1222, 415, 0, 416, 417, 418, 419, 420, 421, 422,
	1681, 1259, 1262, 511, 1301, 423, 424, 0, 425, 426,
	427, 428, 429, 0, 0, 0, 295, 430, 431, 432,
	0, 1300, 512, 433, 1267, 1268, 0, 1228, 0, 434,
	435, 1302, 1260, 1303, 436, 437, 438, 1304, 439, 0,
	0, 0, 440, 441, 442, 443, 444, 445, 0, 446,
	448, 447, 0, 449, 1296, 1305, 450, 451, 1306, 0,
	452, 453, 454, 455, 456, 457, 460, 1251, 1250, 458,
	459, 461, 462, 0, 463, 464, 466, 469, 465, 467,
	468, 470, 483, 484, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 486, 0, 485, 1307,
	487, 488, 489, 490, 491, 498, 500, 501, 496, 497,
	499, 502, 503, 505, 493, 494, 495, 1308, 504, 492,
	1190, 296, 1309, 506, 507, 508, 509, 1213, 1261, 510,
	1275, 513, 514, 0, 0, 515, 0, 516, 0, 0,
	518, 519, 520, 0, 0, 521, 522, 719, 1310, 523,
	1311, 1290, 524, 525, 1200, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 0, 535, 536, 721, 537, 538,
	539, 722, 540, 541, 542, 1291, 543, 724, 544, 545,
	0, 546, 547, 548, 0, 549, 550, 551, 552, 553,
	554, 555, 556, 1271, 557, 558, 560, 559, 561, 0,
	562, 0, 563, 564, 565, 0, 0, 0, 0, 0,
	566, 567, 569, 0, 570, 571, 572, 573, 568, 574,
	575, 576, 577, 578, 579, 0, 580, 581, 582, 1312,
	583, 584, 585, 586, 587, 1201, 588, 0, 589, 590,
	597, 598, 599, 591, 592, 593, 600, 601, 602, 603,
	604, 0, 606, 607, 605, 608, 609, 610, 1254, 611,
	612, 594, 595, 613, 614, 1313, 615, 616, 617, 618,
	619, 620, 621, 1269, 0, 622, 0, 623, 624, 625,
	626, 627, 629, 596, 630, 635, 636, 1316, 631, 632,
	633, 634, 1292, 638, 639, 640, 0, 641, 642, 1187,
	637, 628, 0, 643, 644, 645, 646, 647, 648, 0,
	649, 650, 0, 651, 1281, 1282, 1283, 1284, 0, 662,
	0, 652, 654, 655, 656, 1293, 657, 1294, 1211, 658,
	659, 660, 661, 653, 663, 664, 0, 1194, 665, 666,
	668, 670, 671, 667, 669, 672, 1255, 673, 0, 0,
	674, 675, 676, 736, 1278, 1315, 0, 678, 677, 679,
	680, 681, 739, 682, 683, 0, 0, 0, 0, 684,
	685, 740, 686, 687, 688, 1191, 0, 0, 0, 0,
	1676, 0, 1233, 1205, 1206, 1207, 1203, 1204, 1216, 0,
	1186, 0, 0, 0, 0, 0, 0, 1184, 1185, 297,
	298, 300, 299, 301, 302, 303, 304, 1217, 305, 306,
	0, 1215, 0, 0, 0, 1257, 1221, 0, 0, 307,
	0, 308, 309, 1297, 310, 311, 312, 313, 314, 315,
	316, 690, 1270, 0, 317, 1277, 318, 1276, 0, 1287,
	319, 320, 321, 322, 323, 324, 1223, 1256, 1188, 325,
	1317, 1318, 697, 0, 326, 327, 1263, 0, 1244, 0,
	328, 329, 330, 331, 332, 333, 334, 335, 0, 0,
	337, 338, 339, 336, 340, 0, 341, 0, 342, 343,
	344, 345, 346, 347, 0, 348, 349, 350, 1298, 351,
	352, 353, 1247, 1245, 1246, 1253, 1249, 1248, 1252, 354,
	355, 356, 357, 358, 1280, 359, 361, 1274, 1273, 1193,
	364, 360, 362, 0, 365, 363, 366, 0, 367, 368,
	369, 0, 0, 370, 1265, 372, 0, 373, 374, 375,
	0, 376, 377, 378, 0, 379, 380, 1199, 381, 382,
	383, 385, 387, 384, 386, 388, 389, 390, 391, 1288,
	1289, 392, 1212, 294, 0, 0, 0, 0, 0, 393,
	394, 395, 1272, 0, 0, 0, 396, 0, 397, 398,
	399, 0, 400, 401, 0, 1299, 402, 403, 404, 1285,
	1286, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	0, 414, 1295, 0, 1222, 415, 0, 416, 417, 418,
	419, 420, 421, 422, 1675, 1259, 1262, 511, 1301, 423,
	424, 0, 425, 426, 427, 428, 429, 0, 0, 0,
	295, 430, 431, 432, 0, 1300, 512, 433, 1267, 1268,
	0, 1228, 0, 434, 435, 1302, 1260, 1303, 436, 437,
	438, 1304, 439, 0, 0, 0, 440, 441, 442, 443,
	444, 445, 0, 446, 448, 447, 0, 449, 1296, 1305,
	450, 451, 1306, 0, 452, 453, 454, 455, 456, 457,
	460, 1251, 1250, 458, 459, 461, 462, 0, 463, 464,
	466, 469, 465, 467, 468, 470, 483, 484, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	486, 0, 485, 1307, 487, 488, 489, 490, 491, 498,
	500, 501, 496, 497, 499, 502, 503, 505, 493, 494,
	495, 1308, 504, 492, 1190, 296, 1309, 506, 507, 508,
	509, 1213, 1261, 510, 1275, 513, 514, 0, 0, 515,
	0, 516, 0, 0, 518, 519, 520, 0, 0, 521,
	522, 719, 1310, 523, 1311, 1290, 524, 525, 1200, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 0, 535,
	536, 721, 537, 538, 539, 722, 540, 541, 542, 1291,
	543, 724, 544, 545, 0, 546, 547, 548, 0, 549,
	550, 551, 552, 553, 554, 555, 556, 1271, 557, 558,
	560, 559, 561, 0, 562, 0, 563, 564, 565, 0,
	0, 0, 0, 0, 566, 567, 569, 0, 570, 571,
	572, 573, 568, 574, 575, 576, 577, 578, 579, 0,
	580, 581, 582, 1312, 583, 584, 585, 586, 587, 1201,
	588, 0, 589, 590, 597, 598, 599, 591, 592, 593,
	600, 601, 602, 603, 604, 0, 606, 607, 605, 608,
	609, 610, 1254, 611, 612, 594, 595, 613, 614, 1313,
	615, 616, 617, 618, 619, 620, 621, 1269, 0, 622,
	0, 623, 624, 625, 626, 627, 629, 596, 630, 635,
	636, 1316, 631, 632, 633, 634, 1292, 638, 639, 640,
	0, 641, 642, 1187, 637, 628, 0, 643, 644, 645,
	646, 647, 648, 0, 649, 650, 0, 651, 1281, 1282,
	1283, 1284, 0, 662, 0, 652, 654, 655, 656, 1293,
	657, 1294, 1211, 658, 659, 660, 661, 653, 663, 664,
	0, 1194, 665, 666, 668, 670, 671, 667, 669, 672,
	1255, 673, 0, 0, 674, 675, 676, 736, 1278, 1315,
	0, 678, 677, 679, 680, 681, 739, 682, 683, 0,
	0, 0, 0, 684, 685, 740, 686, 687, 688, 1191,
	0, 0, 0, 0, 1669, 0, 1233, 1205, 1206, 1207,
	1203, 1204, 1216, 0, 1186, 0, 0, 0, 0, 0,
	0, 1184, 1185, 297, 298, 300, 299, 301, 302, 303,
	304, 1217, 305, 306, 0, 1215, 0, 0, 0, 1257,
	1221, 0, 0, 307, 0, 308, 309, 1297, 310, 311,
	312, 313, 314, 315, 316, 690, 1270, 0, 317, 1277,
	318, 1276, 0, 1287, 319, 320, 321, 322, 323, 324,
	1223, 1256, 1188, 325, 1317, 1318, 697, 0, 326, 327,
	1263, 0, 1244, 0, 328, 329, 330, 331, 332, 333,
	334, 335, 0, 0, 337, 338, 339, 336, 340, 0,
	341, 0, 342, 343, 344, 345, 346, 347, 0, 348,
	349, 350, 1298, 351, 352, 353, 1247, 1245, 1246, 1253,
	1249, 1248, 1252, 354, 355, 356, 357, 358, 1280, 359,
	361, 1274, 1273, 1193, 364, 360, 362, 0, 365, 363,
	366, 0, 367, 368, 369, 0, 0, 370, 1265, 372,
	0, 373, 374, 375, 0, 376, 377, 378, 0, 379,
	380, 1199, 381, 382, 383, 385, 387, 384, 386, 388,
	389, 390, 391, 1288, 1289, 392, 1212, 294, 0, 0,
	0, 0, 0, 393, 394, 395, 1272, 0, 0, 0,
	396, 0, 397, 398, 399, 0, 400, 401, 0, 1299,
	402, 403, 404, 1285, 1286, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 0, 414, 1295, 0, 1222, 415,
	0, 416, 417, 418, 419, 420, 421, 422, 1258, 1259,
	1262, 511, 1301, 423, 424, 0, 425, 426, 427, 428,
	429, 0, 0, 0, 295, 430, 431, 432, 0, 1300,
	512, 433, 1267, 1268, 0, 1228, 0, 434, 435, 1302,
	1260, 1303, 436, 437, 438, 1304, 439, 0, 0, 0,
	440, 441, 442, 443, 444, 445, 0, 446, 448, 447,
	0, 449, 1296, 1305, 450, 451, 1306, 0, 452, 453,
	454, 455, 456, 457, 460, 1251, 1250, 458, 459, 461,
	462, 0, 463, 464, 466, 469, 465, 467, 468, 470,
	483, 484, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 486, 0, 485, 1307, 487, 488,
	489, 490, 491, 498, 500, 501, 496, 497, 499, 502,
	503, 505, 493, 494, 495, 1308, 504, 492, 1190, 296,
	1309, 506, 507, 508, 509, 1213, 1261, 510, 1275, 513,
	514, 0, 0, 515, 0, 516, 0, 0, 518, 519,
	520, 0, 0, 521, 522, 719, 1310, 523, 1311, 1290,
	524, 525, 1200, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 0, 535, 536, 721, 537, 538, 539, 722,
	540, 541, 542, 1291, 543, 724, 544, 545, 0, 546,
	547, 548, 0, 549, 550, 551, 552, 553, 554, 555,
	556, 1271, 557, 558, 560, 559, 561, 0, 562, 0,
	563, 564, 565, 0, 0, 0, 0, 0, 566, 567,
	569, 0, 570, 571, 572, 573, 568, 574, 575, 576,
	577, 578, 579, 0, 580, 581, 582, 1312, 583, 584,
	585, 586, 587, 1201, 588, 0, 589, 590, 597, 598,
	599, 591, 592, 593, 600, 601, 602, 603, 604, 0,
	606, 607, 605, 608, 609, 610, 1254, 611, 612, 594,
	595, 613, 614, 1313, 615, 616, 617, 618, 619, 620,
	621, 1269, 0, 622, 0, 623, 624, 625, 626, 627,
	629, 596, 630, 635, 636, 1316, 631, 632, 633, 634,
	1292, 638, 639, 640, 0, 641, 642, 1187, 637, 628,
	0, 643, 644, 645, 646, 647, 648, 0, 649, 650,
	0, 651, 1281, 1282, 1283, 1284, 0, 662, 0, 652,
	654, 655, 656, 1293, 657, 1294, 1211, 658, 659, 660,
	661, 653, 663, 664, 0, 1194, 665, 666, 668, 670,
	671, 667, 669, 672, 1255, 673, 0, 0, 674, 675,
	676, 736, 1278, 1315, 0, 678, 677, 679, 680, 681,
	739, 682, 683, 0, 0, 0, 0, 684, 685, 740,
	686, 687, 688, 1191, 0, 0, 0, 0, 1631, 0,
	1233, 1205, 1206, 1207, 1203, 1204, 1216, 0, 1186, 0,
	0, 0, 0, 0, 0, 1184, 1185, 297, 298, 300,
	299, 301, 302, 303, 304, 1217, 305, 306, 0, 1215,
	0, 0, 0, 1257, 1221, 0, 0, 307, 0, 308,
	309, 1297, 310, 311, 312, 313, 314, 315, 316, 690,
	1270, 0, 317, 1277, 318, 1276, 0, 1287, 319, 320,
	321, 322, 323, 324, 1223, 1256, 1188, 325, 1317, 1318,
	697, 0, 326, 327, 1263, 0, 1244, 0, 328, 329,
	330, 331, 332, 333, 334, 335, 0, 0, 337, 338,
	339, 336, 340, 0, 341, 0, 342, 343, 344, 345,
	346, 347, 0, 348, 349, 350, 1298, 351, 352, 353,
	1247, 1245, 1246, 1253, 1249, 1248, 1252, 354, 355, 356,
	357, 358, 1280, 359, 361, 1274, 1273, 1193, 364, 360,
	362, 0, 365, 363, 366, 0, 367, 368, 369, 0,
	0, 370, 1265, 372, 0, 373, 374, 375, 0, 376,
	377, 378, 0, 379, 380, 1199, 381, 382, 383, 385,
	387, 384, 386, 388, 389, 390, 391, 1288, 1289, 392,
	1212, 294, 0, 0, 0, 0, 0, 393, 394, 395,
	1272, 0, 0, 0, 396, 0, 397, 398, 399, 0,
	400, 401, 0, 1299, 402, 403, 404, 1285, 1286, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 0, 414,
	1295, 0, 1222, 415, 0, 416, 417, 418, 419, 420,
	421, 422, 1258, 1259, 1262, 511, 1301, 423, 424, 0,
	425, 426, 427, 428, 429, 0, 0, 0, 295, 430,
	431, 432, 0, 1300, 512, 433, 1267, 1268, 0, 1228,
	0, 434, 435, 1302, 1260, 1303, 436, 437, 438, 1304,
	439, 0, 0, 0, 440, 441, 442, 443, 444, 445,
	0, 446, 448, 447, 0, 449, 1296, 1305, 450, 451,
	1306, 0, 452, 453, 454, 455, 456, 457, 460, 1251,
	1250, 458, 459, 461, 462, 0, 463, 464, 466, 469,
	465, 467, 468, 470, 483, 484, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 486, 0,
	485, 1307, 487, 488, 489, 490, 491, 498, 500, 501,
	496, 497, 499, 502, 503, 505, 493, 494, 495, 1308,
	504, 492, 1190, 296, 1309, 506, 507, 508, 509, 1213,
	1261, 510, 1275, 513, 514, 0, 0, 515, 0, 516,
	0, 0, 518, 519, 520, 0, 0, 521, 522, 719,
	1310, 523, 1311, 1290, 524, 525, 1200, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 0, 535, 536, 721,
	537, 538, 539, 722, 540, 541, 542, 1291, 543, 724,
	544, 545, 0, 546, 547, 548, 0, 549, 550, 551,
	552, 553, 554, 555, 556, 1271, 557, 558, 560, 559,
	561, 0, 562, 0, 563, 564, 565, 0, 0, 0,
	0, 0, 566, 567, 569, 0, 570, 571, 572, 573,
	568, 574, 575, 576, 577, 578, 579, 0, 580, 581,
	582, 1312, 583, 584, 585, 586, 587, 1201, 588, 0,
	589, 590, 597, 598, 599, 591, 592, 593, 600, 601,
	602, 603, 604, 0, 606, 607, 605, 608, 609, 610,
	1254, 611, 612, 594, 595, 613, 614, 1313, 615, 616,
	617, 618, 619, 620, 621, 1269, 0, 622, 0, 623,
	624, 625, 626, 627, 629, 596, 630, 635, 636, 1316,
	631, 632, 633, 634, 1292, 638, 639, 640, 0, 641,
	642, 1187, 637, 628, 0, 643, 644, 645, 646, 647,
	648, 0, 649, 650, 0, 651, 1281, 1282, 1283, 1284,
	0, 662, 0, 652, 654, 655, 656, 1293, 657, 1294,
	1211, 658, 659, 660, 661, 653, 663, 664, 0, 1194,
	665, 666, 668, 670, 671, 667, 669, 672, 1255, 673,
	0, 0, 674, 675, 676, 736, 1278, 1315, 0, 678,
	677, 679, 680, 681, 739, 682, 683, 0, 0, 0,
	0, 684, 685, 740, 686, 687, 688, 1191, 0, 0,
	0, 0, 1613, 0, 1233, 1205, 1206, 1207, 1203, 1204,
	1216, 0, 1186, 0, 0, 0, 0, 0, 0, 1184,
	1185, 297, 298, 300, 299, 301, 302, 303, 304, 1217,
	305, 306, 0, 1215, 0, 0, 0, 1257, 1221, 0,
	0, 307, 0, 308, 309, 1297, 310, 311, 312, 313,
	314, 315, 316, 690, 1270, 0, 317, 1277, 318, 1276,
	0, 1287, 319, 320, 321, 322, 323, 324, 1223, 1256,
	1188, 325, 1317, 1318, 697, 0, 326, 327, 1263, 0,
	1244, 0, 328, 329, 330, 331, 332, 333, 334, 335,
	0, 0, 337, 338, 339, 336, 340, 0, 341, 0,
	342, 343, 344, 345, 346, 347, 0, 348, 349, 350,
	1298, 351, 352, 353, 1247, 1245, 1246, 1253, 1249, 1248,
	1252, 354, 355, 356, 357, 358, 1280, 359, 361, 1274,
	1273, 1193, 364, 360, 362, 0, 365, 363, 366, 0,
	367, 368, 369, 0, 0, 370, 1265, 372, 0, 373,
	374, 375, 0, 376, 377, 378, 0, 379, 380, 1199,
	381, 382, 383, 385, 387, 384, 1617, 388, 389, 390,
	391, 1288, 1289, 392, 1212, 294, 0, 0, 0, 0,
	0, 393, 394, 395, 1272, 0, 0, 0, 396, 0,
	397, 398, 399, 0, 400, 401, 0, 1299, 402, 403,
	404, 1285, 1286, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 0, 414, 1295, 0, 1222, 415, 0, 416,
	417, 418, 419, 420, 421, 422, 1258, 1259, 1262, 511,
	1301, 423, 424, 0, 425, 426, 427, 428, 429, 0,
	0, 0, 295, 430, 431, 432, 0, 1300, 512, 433,
	1267, 1268, 0, 1228, 0, 434, 435, 1302, 1260, 1303,
	436, 437, 438, 1304, 439, 0, 0, 0, 440, 441,
	442, 443, 444, 445, 0, 446, 448, 447, 0, 449,
	1296, 1305, 450, 451, 1306, 0, 452, 453, 454, 455,
	456, 457, 460, 1251, 1250, 458, 459, 461, 462, 0,
	463, 464, 466, 469, 465, 467, 468, 470, 483, 484,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 486, 0, 485, 1307, 487, 488, 489, 490,
	491, 498, 500, 501, 496, 497, 499, 502, 503, 505,
	493, 494, 495, 1308, 504, 492, 1190, 296, 1309, 506,
	507, 508, 509, 1213, 1261, 510, 1275, 513, 514, 0,
	0, 515, 0, 516, 0, 0, 518, 519, 520, 0,
	0, 521, 522, 719, 1310, 523, 1311, 1290, 524, 525,
	1200, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	0, 535, 536, 721, 537, 538, 539, 722, 540, 541,
	542, 1291, 543, 724, 544, 545, 0, 546, 547, 548,
	0, 549, 550, 551, 552, 553, 554, 555, 556, 1271,
	557, 558, 560, 559, 561, 0, 562, 0, 563, 564,
	565, 0, 0, 0, 0, 0, 566, 567, 1618, 0,
	570, 571, 572, 573, 568, 574, 575, 576, 577, 578,
	579, 0, 580, 581, 582, 1312, 583, 584, 585, 586,
	587, 1201, 588, 0, 589, 590, 597, 598, 599, 591,
	592, 593, 600, 601, 602, 603, 604, 0, 606, 607,
	605, 608, 609, 610, 1254, 611, 612, 594, 595, 613,
	614, 1313, 615, 616, 617, 618, 619, 620, 621, 1269,
	0, 622, 0, 623, 624, 625, 626, 627, 629, 596,
	630, 635, 636, 1316, 631, 632, 633, 634, 1292, 638,
	639, 640, 0, 641, 642, 1187, 637, 628, 0, 643,
	644, 645, 646, 647, 648, 0, 1616, 650, 0, 651,
	1281, 1282, 1283, 1284, 0, 662, 0, 652, 654, 655,
	656, 1293, 657, 1294, 1211, 658, 659, 660, 661, 653,
	663, 664, 0, 1194, 665, 666, 668, 670, 671, 667,
	669, 672, 1255, 673, 0, 0, 674, 675, 676, 736,
	1278, 1315, 0, 678, 677, 679, 680, 681, 739, 682,
	683, 0, 0, 0, 0, 684, 685, 740, 686, 687,
	688, 1191, 0, 0, 0, 0, 1445, 0, 1233, 1205,
	1206, 1207, 1203, 1204, 1216, 0, 1186, 0, 0, 0,
	0, 0, 0, 1184, 1185, 297, 298, 300, 299, 301,
	302, 303, 304, 1217, 305, 306, 0, 1215, 0, 0,
	0, 1257, 1221, 0, 0, 307, 0, 308, 309, 1297,
	310, 311, 312, 313, 314, 315, 316, 690, 1270, 0,
	317, 1277, 318, 1276, 0, 1287, 319, 320, 321, 322,
	323, 324, 1223, 1256, 1188, 325, 1317, 1318, 697, 0,
	326, 327, 1263, 0, 1244, 0, 328, 329, 330, 331,
	332, 333, 334, 335, 0, 0, 337, 338, 339, 336,
	340, 0, 341, 0, 342, 343, 344, 345, 346, 347,
	0, 348, 349, 350, 1298, 351, 352, 353, 1247, 1245,
	1246, 1253, 1249, 1248, 1252, 354, 355, 356, 357, 358,
	1280, 359, 361, 1274, 1273, 1193, 364, 360, 362, 0,
	365, 363, 366, 0, 367, 368, 369, 0, 0, 370,
	1265, 372, 0, 373, 374, 375, 0, 376, 377, 378,
	0, 379, 380, 1199, 381, 382, 383, 385, 387, 384,
	386, 388, 389, 390, 391, 1288, 1289, 392, 1212, 294,
	0, 0, 0, 0, 0, 393, 394, 395, 1272, 0,
	0, 0, 396, 0, 397, 398, 399, 0, 400, 401,
	0, 1299, 402, 403, 404, 1285, 1286, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 0, 414, 1295, 0,
	1222, 415, 0, 416, 417, 418, 419, 420, 421, 422,
	1258, 1259, 1262, 511, 1301, 423, 424, 0, 425, 426,
	427, 428, 429, 0, 0, 0, 295, 430, 431, 432,
	0, 1300, 512, 433, 1267, 1268, 0, 1228, 0, 434,
	435, 1302, 1260, 1303, 436, 437, 438, 1304, 439, 0,
	0, 0, 440, 441, 442, 443, 444, 445, 0, 446,
	448, 447, 0, 449, 1296, 1305, 450, 451, 1306, 0,
	452, 453, 454, 455, 456, 457, 460, 1251, 1250, 458,
	459, 461, 462, 0, 463, 464, 466, 469, 465, 467,
	468, 470, 483, 484, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 486, 0, 485, 1307,
	487, 488, 489, 490, 491, 498, 500, 501, 496, 497,
	499, 502, 503, 505, 493, 494, 495, 1308, 504, 492,
	1190, 296, 1309, 506, 507, 508, 509, 1213, 1261, 510,
	1275, 513, 514, 0, 0, 515, 0, 516, 0, 0,
	518, 519, 520, 0, 0, 521, 522, 719, 1310, 523,
	1311, 1290, 524, 525, 1200, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 0, 535, 536, 721, 537, 538,
	539, 722, 540, 541, 542, 1291, 543, 724, 544, 545,
	0, 546, 547, 548, 0, 549, 550, 551, 552, 553,
	554, 555, 556, 1271, 557, 558, 560, 559, 561, 0,
	562, 0, 563, 564, 565, 0, 0, 0, 0, 0,
	566, 567, 569, 0, 570, 571, 572, 573, 568, 574,
	575, 576, 577, 578, 579, 0, 580, 581, 582, 1312,
	583, 584, 585, 586, 587, 1201, 588, 0, 589, 590,
	597, 598, 599, 591, 592, 593, 600, 601, 602, 603,
	604, 0, 606, 607, 605, 608, 609, 610, 1254, 611,
	612, 594, 595, 613, 614, 1313, 615, 616, 617, 618,
	619, 620, 621, 1269, 0, 622, 0, 623, 624, 625,
	626, 627, 629, 596, 630, 635, 636, 1316, 631, 632,
	633, 634, 1292, 638, 639, 640, 0, 641, 642, 1187,
	637, 628, 0, 643, 644, 645, 646, 647, 648, 0,
	649, 650, 0, 651, 1281, 1282, 1283, 1284, 0, 662,
	0, 652, 654, 655, 656, 1293, 657, 1294, 1211, 658,
	659, 660, 661, 653, 663, 664, 0, 1194, 665, 666,
	668, 670, 671, 667, 669, 672, 1255, 673, 0, 0,
	674, 675, 676, 736, 1278, 1315, 0, 678, 677, 679,
	680, 681, 739, 682, 683, 0, 0, 0, 0, 684,
	685, 740, 686, 687, 688, 1191, 0, 0, 0, 0,
	0, 0, 1233, 1205, 1206, 1207, 1203, 1204, 1216, 0,
	1186, 0, 0, 0, 0, 0, 0, 1184, 1185, 297,
	298, 300, 299, 301, 302, 303, 304, 1217, 305, 306,
	0, 1215, 0, 0, 0, 1257, 1221, 0, 0, 307,
	0, 308, 309, 1297, 310, 311, 312, 313, 314, 315,
	316, 690, 1270, 0, 317, 1277, 318, 1276, 0, 1287,
	319, 320, 321, 322, 323, 324, 1223, 1256, 1188, 325,
	1317, 1318, 697, 0, 326, 327, 1263, 0, 1244, 0,
	328, 329, 330, 331, 332, 333, 334, 335, 0, 0,
	337, 338, 339, 336, 340, 0, 341, 0, 342, 343,
	344, 345, 346, 347, 0, 348, 349, 350, 1298, 351,
	352, 353, 1247, 1245, 1246, 1253, 1249, 1248, 1252, 354,
	355, 356, 357, 358, 1280, 359, 361, 1274, 1273, 1193,
	364, 360, 362, 0, 365, 363, 366, 0, 367, 368,
	369, 0, 0, 370, 1265, 372, 0, 373, 374, 375,
	0, 376, 377, 378, 0, 379, 380, 1199, 381, 382,
	383, 385, 387, 384, 386, 388, 389, 390, 391, 1288,
	1289, 392, 1212, 294, 0, 0, 0, 0, 0, 393,
	394, 395, 1272, 0, 0, 0, 396, 0, 397, 398,
	399, 0, 400, 401, 0, 1299, 402, 403, 404, 1285,
	1286, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	0, 414, 1295, 0, 1222, 415, 0, 416, 417, 418,
	419, 420, 421, 422, 1258, 1259, 1262, 511, 1301, 423,
	424, 0, 425, 426, 427, 428, 429, 0, 0, 0,
	295, 430, 431, 432, 0, 1300, 512, 433, 1267, 1268,
	0, 1228, 0, 434, 435, 1302, 1260, 1303, 436, 437,
	438, 1304, 439, 0, 0, 0, 440, 441, 442, 443,
	444, 445, 0, 446, 448, 447, 0, 449, 1296, 1305,
	450, 451, 1306, 0, 452, 453, 454, 455, 456, 457,
	460, 1251, 1250, 458, 459, 461, 462, 0, 463, 464,
	466, 469, 465, 467, 468, 470, 483, 484, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	486, 0, 485, 1307, 487, 488, 489, 490, 491, 498,
	500, 501, 496, 497, 499, 502, 503, 505, 493, 494,
	495, 1308, 504, 492, 1190, 296, 1309, 506, 507, 508,
	509, 1213, 1261, 510, 1275, 513, 514, 0, 0, 515,
	0, 516, 0, 0, 518, 519, 520, 0, 0, 521,
	522, 719, 1310, 523, 1311, 1290, 524, 525, 1200, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 0, 535,
	536, 721, 537, 538, 539, 722, 540, 541, 542, 1291,
	543, 724, 544, 545, 0, 546, 547, 548, 0, 549,
	550, 551, 552, 553, 554, 555, 556, 1271, 557, 558,
	560, 559, 561, 0, 562, 0, 563, 564, 565, 0,
	0, 0, 0, 0, 566, 567, 569, 0, 570, 571,
	572, 573, 568, 574, 575, 576, 577, 578, 579, 0,
	580, 581, 582, 1312, 583, 584, 585, 586, 587, 1201,
	588, 0, 589, 590, 597, 598, 599, 591, 592, 593,
	600, 601, 602, 603, 604, 0, 606, 607, 605, 608,
	609, 610, 1254, 611, 612, 594, 595, 613, 614, 1313,
	615, 616, 617, 618, 619, 620, 621, 1269, 0, 622,
	0, 623, 624, 625, 626, 627, 629, 596, 630, 635,
	636, 1316, 631, 632, 633, 634, 1292, 638, 639, 640,
	0, 641, 642, 1187, 637, 628, 0, 643, 644, 645,
	646, 647, 648, 0, 649, 650, 0, 651, 1281, 1282,
	1283, 1284, 0, 662, 0, 652, 654, 655, 656, 1293,
	657, 1294, 1211, 658, 659, 660, 661, 653, 663, 664,
	0, 1194, 665, 666, 668, 670, 671, 667, 669, 672,
	1255, 673, 0, 0, 674, 675, 676, 736, 1278, 1315,
	0, 678, 677, 679, 680, 681, 739, 682, 683, 0,
	0, 0, 0, 684, 685, 740, 686, 687, 688, 1191,
	0, 0, 0, 0, 0, 0, 1233, 1205, 1206, 1207,
	1203, 1204, 1216, 0, 1186, 0, 0, 0, 0, 0,
	0, 1184, 1185, 297, 298, 300, 299, 301, 302, 303,
	304, 1217, 305, 306, 0, 1215, 0, 0, 0, 1257,
	1221, 0, 0, 307, 0, 308, 309, 1297, 310, 311,
	312, 313, 314, 315, 316, 690, 1270, 0, 317, 1277,
	318, 1276, 0, 1287, 319, 320, 321, 322, 323, 324,
	1223, 1256, 1188, 325, 1317, 1318, 697, 0, 326, 327,
	1263, 0, 1244, 0, 328, 329, 330, 331, 332, 333,
	334, 335, 0, 0, 337, 338, 339, 336, 340, 0,
	341, 0, 342, 343, 344, 345, 346, 347, 0, 348,
	349, 350, 1298, 351, 352, 5130, 1247, 1245, 1246, 1253,
	1249, 1248, 1252, 354, 355, 356, 357, 358, 1280, 359,
	361, 1274, 1273, 1193, 364, 360, 362, 0, 365, 363,
	366, 0, 367, 368, 369, 0, 0, 370, 1265, 372,
	0, 373, 374, 375, 0, 376, 377, 378, 0, 379,
	380, 1199, 381, 382, 383, 385, 387, 384, 386, 388,
	389, 390, 391, 1288, 1289, 392, 1212, 294, 0, 0,
	0, 0, 0, 393, 394, 395, 1272, 0, 0, 0,
	396, 0, 397, 398, 399, 0, 400, 401, 0, 1299,
	402, 403, 404, 1285, 1286, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 0, 414, 1295, 0, 1222, 415,
	0, 416, 417, 418, 419, 420, 421, 422, 1258, 1259,
	1262, 511, 1301, 423, 424, 0, 425, 426, 427, 428,
	429, 0, 0, 0, 295, 430, 431, 432, 0, 1300,
	512, 433, 1267, 1268, 0, 1228, 0, 434, 435, 1302,
	1260, 1303, 436, 437, 438, 1304, 439, 0, 0, 0,
	440, 441, 442, 443, 444, 445, 0, 446, 448, 447,
	0, 449, 1296, 1305, 450, 451, 1306, 0, 452, 453,
	454, 455, 456, 457, 460, 1251, 1250, 458, 459, 461,
	462, 0, 463, 464, 466, 469, 465, 467, 468, 470,
	483, 484, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 486, 0, 485, 1307, 487, 488,
	489, 490, 491, 498, 500, 501, 496, 497, 499, 502,
	503, 505, 493, 494, 495, 1308, 504, 492, 1190, 296,
	1309, 506, 507, 508, 509, 1213, 1261, 510, 1275, 513,
	514, 0, 0, 515, 0, 516, 0, 0, 518, 519,
	520, 0, 0, 521, 522, 719, 1310, 523, 1311, 1290,
	524, 525, 1200, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 0, 535, 536, 721, 537, 538, 539, 722,
	540, 541, 542, 1291, 543, 724, 544, 545, 0, 546,
	547, 548, 0, 549, 550, 551, 552, 553, 554, 555,
	556, 1271, 557, 558, 560, 559, 561, 0, 562, 0,
	563, 564, 565, 0, 0, 0, 0, 0, 566, 567,
	569, 0, 570, 571, 572, 573, 568, 574, 575, 576,
	577, 578, 579, 0, 580, 581, 582, 1312, 583, 584,
	585, 586, 587, 1201, 588, 0, 589, 590, 597, 598,
	599, 591, 592, 593, 600, 601, 602, 603, 604, 0,
	606, 607, 605, 608, 609, 610, 1254, 611, 612, 594,
	595, 613, 614, 1313, 615, 616, 617, 618, 619, 620,
	621, 1269, 0, 622, 0, 623, 624, 625, 626, 627,
	629, 596, 630, 635, 636, 1316, 631, 632, 633, 634,
	1292, 638, 639, 640, 0, 641, 642, 1187, 637, 628,
	0, 643, 644, 645, 646, 647, 648, 0, 649, 650,
	0, 651, 1281, 1282, 1283, 1284, 0, 662, 0, 652,
	654, 655, 656, 1293, 657, 1294, 1211, 658, 659, 660,
	661, 653, 5129, 664, 0, 1194, 665, 666, 668, 670,
	671, 667, 669, 672, 1255, 673, 0, 0, 674, 675,
	676, 736, 1278, 1315, 0, 678, 677, 679, 680, 681,
	739, 682, 683, 0, 0, 0, 0, 684, 685, 740,
	686, 687, 688, 1191, 0, 0, 0, 0, 0, 0,
	1233, 1205, 1206, 1207, 1203, 1204, 1216, 0, 1186, 0,
	0, 0, 0, 0, 0, 1184, 1185, 297, 298, 300,
	299, 301, 302, 303, 304, 1217, 305, 306, 0, 1215,
	0, 0, 0, 1257, 1221, 0, 0, 307, 0, 308,
	309, 1297, 310, 311, 312, 313, 314, 315, 316, 5128,
	1270, 0, 317, 1277, 318, 1276, 0, 1287, 319, 320,
	321, 322, 323, 324, 1223, 1256, 1188, 325, 1317, 1318,
	697, 0, 326, 327, 1263, 0, 1244, 0, 328, 329,
	330, 331, 332, 333, 334, 335, 0, 0, 337, 338,
	339, 336, 340, 0, 341, 0, 342, 343, 344, 345,
	346, 347, 0, 348, 349, 350, 1298, 351, 352, 5130,
	1247, 1245, 1246, 1253, 1249, 1248, 1252, 354, 355, 356,
	357, 358, 1280, 359, 361, 1274, 1273, 1193, 364, 360,
	362, 0, 365, 363, 366, 0, 367, 368, 369, 0,
	0, 370, 1265, 372, 0, 373, 374, 375, 0, 376,
	377, 378, 0, 379, 380, 1199, 381, 382, 383, 385,
	387, 384, 386, 388, 389, 390, 391, 1288, 1289, 392,
	1212, 294, 0, 0, 0, 0, 0, 393, 394, 395,
	1272, 0, 0, 0, 396, 0, 397, 398, 399, 0,
	400, 401, 0, 1299, 402, 403, 404, 1285, 1286, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 0, 414,
	1295, 0, 1222, 415, 0, 416, 417, 418, 419, 420,
	421, 422, 1258, 1259, 1262, 511, 1301, 423, 424, 0,
	425, 426, 427, 428, 429, 0, 0, 0, 295, 430,
	431, 432, 0, 1300, 512, 433, 1267, 1268, 0, 1228,
	0, 434, 435, 1302, 1260, 1303, 436, 437, 438, 1304,
	439, 0, 0, 0, 440, 441, 442, 443, 444, 445,
	0, 446, 448, 447, 0, 449, 1296, 1305, 450, 451,
	1306, 0, 452, 453, 454, 455, 456, 457, 460, 1251,
	1250, 458, 459, 461, 462, 0, 463, 464, 466, 469,
	465, 467, 468, 470, 483, 484, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 486, 0,
	485, 1307, 487, 488, 489, 490, 491, 498, 500, 501,
	496, 497, 499, 502, 503, 505, 493, 494, 495, 1308,
	504, 492, 1190, 296, 1309, 506, 507, 508, 509, 1213,
	1261, 510, 1275, 513, 514, 0, 0, 515, 0, 516,
	0, 0, 518, 519, 520, 0, 0, 521, 522, 719,
	1310, 523, 1311, 1290, 524, 525, 1200, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 0, 535, 536, 721,
	537, 538, 539, 722, 540, 541, 542, 1291, 543, 724,
	544, 545, 0, 546, 547, 548, 0, 549, 550, 551,
	552, 553, 554, 555, 556, 1271, 557, 558, 560, 559,
	561, 0, 562, 0, 563, 564, 565, 0, 0, 0,
	0, 0, 566, 567, 569, 0, 570, 571, 572, 573,
	568, 574, 575, 576, 577, 578, 579, 0, 580, 581,
	582, 1312, 583, 584, 585, 586, 587, 1201, 588, 0,
	589, 590, 597, 598, 599, 591, 592, 593, 600, 601,
	602, 603, 604, 0, 606, 607, 605, 608, 609, 610,
	1254, 611, 612, 594, 595, 613, 614, 1313, 615, 616,
	617, 618, 619, 620, 621, 1269, 0, 622, 0, 623,
	624, 625, 626, 627, 629, 596, 630, 635, 636, 1316,
	631, 632, 633, 634, 1292, 638, 639, 640, 0, 641,
	642, 1187, 637, 628, 0, 643, 644, 645, 646, 647,
	648, 0, 649, 650, 0, 651, 1281, 1282, 1283, 1284,
	0, 662, 0, 652, 654, 655, 656, 1293, 657, 1294,
	1211, 658, 659, 660, 661, 653, 5129, 664, 0, 1194,
	665, 666, 668, 670, 671, 667, 669, 672, 1255, 673,
	0, 0, 674, 675, 676, 736, 1278, 1315, 0, 678,
	677, 679, 680, 681, 739, 682, 683, 0, 0, 0,
	0, 684, 685, 740, 686, 687, 688, 1191, 0, 0,
	0, 0, 0, 0, 1233, 1205, 1206, 1207, 1203, 1204,
	1216, 0, 1186, 0, 0, 0, 0, 0, 0, 1184,
	1185, 297, 298, 300, 299, 301, 302, 303, 304, 1217,
	305, 306, 0, 1215, 0, 0, 0, 1257, 1221, 0,
	0, 307, 0, 308, 309, 1297, 310, 311, 312, 313,
	314, 315, 316, 690, 1270, 0, 317, 1277, 318, 1276,
	0, 1287, 319, 320, 321, 322, 323, 324, 1223, 1256,
	1188, 325, 1317, 1318, 697, 0, 326, 327, 1263, 0,
	1244, 0, 328, 329, 330, 331, 332, 333, 334, 335,
	0, 0, 337, 338, 339, 336, 340, 0, 341, 0,
	342, 343, 344, 345, 346, 347, 0, 348, 349, 350,
	1298, 351, 4723, 353, 1247, 1245, 1246, 1253, 1249, 1248,
	1252, 354, 355, 356, 357, 358, 1280, 359, 361, 1274,
	1273, 1193, 364, 360, 362, 0, 365, 363, 366, 0,
	367, 368, 369, 0, 0, 370, 1265, 372, 0, 373,
	374, 375, 0, 376, 377, 378, 0, 379, 380, 1199,
	381, 382, 383, 385, 387, 384, 386, 388, 389, 390,
	391, 1288, 1289, 392, 1212, 294, 0, 0, 0, 0,
	0, 393, 394, 395, 1272, 0, 0, 0, 396, 0,
	397, 398, 399, 0, 400, 401, 0, 1299, 402, 403,
	404, 1285, 1286, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 0, 414, 1295, 0, 4724, 415, 0, 416,
	417, 418, 419, 420, 421, 422, 1258, 1259, 1262, 511,
	1301, 423, 424, 0, 425, 426, 427, 428, 429, 0,
	0, 0, 295, 430, 431, 432, 0, 1300, 512, 433,
	1267, 1268, 0, 1228, 0, 434, 435, 1302, 1260, 1303,
	436, 437, 438, 1304, 439, 0, 0, 0, 440, 441,
	442, 443, 444, 445, 0, 446, 448, 447, 0, 449,
	1296, 1305, 450, 451, 1306, 0, 452, 453, 454, 455,
	456, 457, 460, 1251, 1250, 458, 459, 461, 462, 0,
	463, 464, 466, 469, 465, 467, 468, 470, 483, 484,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 486, 0, 485, 1307, 487, 488, 489, 490,
	491, 498, 500, 501, 496, 497, 499, 502, 503, 505,
	493, 494, 495, 1308, 504, 492, 1190, 296, 1309, 506,
	507, 508, 509, 1213, 1261, 510, 1275, 513, 514, 0,
	0, 515, 0, 516, 0, 0, 518, 519, 520, 0,
	0, 521, 522, 719, 1310, 523, 1311, 1290, 524, 525,
	1200, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	0, 535, 536, 721, 537, 538, 539, 722, 540, 541,
	542, 1291, 543, 724, 544, 545, 0, 546, 547, 548,
	0, 549, 550, 551, 552, 553, 554, 555, 556, 1271,
	557, 558, 560, 559, 561, 0, 562, 0, 563, 564,
	565, 0, 0, 0, 0, 0, 566, 567, 569, 0,
	570, 571, 572, 573, 568, 574, 575, 576, 577, 578,
	579, 0, 580, 581, 582, 1312, 583, 584, 585, 4722,
	587, 1201, 588, 0, 589, 590, 597, 598, 599, 591,
	592, 593, 600, 601, 602, 603, 604, 0, 606, 607,
	605, 608, 609, 610, 1254, 611, 612, 594, 595, 613,
	614, 1313, 615, 616, 617, 618, 619, 620, 621, 1269,
	0, 622, 0, 623, 624, 625, 626, 627, 629, 596,
	630, 635, 636, 1316, 631, 632, 633, 634, 1292, 638,
	639, 640, 0, 641, 642, 1187, 637, 628, 0, 643,
	644, 645, 646, 647, 648, 0, 649, 650, 0, 651,
	1281, 1282, 1283, 1284, 0, 662, 0, 652, 654, 655,
	656, 1293, 657, 1294, 1211, 658, 659, 660, 661, 653,
	663, 664, 0, 1194, 665, 666, 668, 670, 671, 667,
	669, 672, 1255, 673, 0, 0, 674, 675, 676, 736,
	1278, 1315, 0, 678, 677, 679, 680, 681, 739, 682,
	683, 0, 0, 0, 0, 684, 685, 740, 686, 687,
	688, 1191, 0, 0, 0, 0, 0, 0, 1233, 1205,
	1206, 1207, 3436, 3437, 1216, 0, 1186, 0, 0, 0,
	0, 0, 0, 1184, 1185, 297, 298, 300, 299, 301,
	302, 303, 304, 1217, 305, 306, 0, 1215, 0, 0,
	0, 1257, 1221, 0, 0, 307, 0, 308, 309, 1297,
	310, 311, 312, 313, 314, 315, 316, 690, 1270, 0,
	317, 1277, 318, 1276, 0, 1287, 319, 320, 321, 322,
	323, 324, 1223, 1256, 1188, 325, 1317, 1318, 697, 0,
	326, 327, 1263, 0, 1244, 0, 328, 329, 330, 331,
	332, 333, 334, 335, 0, 0, 337, 338, 339, 336,
	340, 0, 341, 0, 342, 343, 344, 345, 346, 347,
	0, 348, 349, 350, 1298, 351, 352, 353, 1247, 1245,
	1246, 1253, 1249, 1248, 1252, 354, 355, 356, 357, 358,
	1280, 359, 361, 1274, 1273, 1193, 364, 360, 362, 0,
	365, 363, 366, 0, 367, 368, 369, 0, 0, 370,
	1265, 372, 0, 373, 374, 375, 0, 376, 377, 378,
	0, 379, 380, 1199, 381, 382, 383, 385, 387, 384,
	386, 388, 389, 390, 391, 1288, 1289, 392, 1212, 294,
	0, 0, 0, 0, 0, 393, 394, 395, 1272, 0,
	0, 0, 396, 0, 397, 398, 399, 0, 400, 401,
	0, 1299, 402, 403, 404, 1285, 1286, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 0, 414, 1295, 0,
	1222, 415, 0, 416, 417, 418, 419, 420, 421, 422,
	1258, 1259, 1262, 511, 1301, 423, 424, 0, 425, 426,
	427, 428, 429, 0, 0, 0, 295, 430, 431, 432,
	0, 1300, 512, 433, 1267, 1268, 0, 1228, 0, 434,
	435, 1302, 1260, 1303, 436, 437, 438, 1304, 439, 0,
	0, 0, 440, 441, 442, 443, 444, 445, 0, 446,
	448, 447, 0, 449, 1296, 1305, 450, 451, 1306, 0,
	452, 453, 454, 455, 456, 457, 460, 1251, 1250, 458,
	459, 461, 462, 0, 463, 464, 466, 469, 465, 467,
	468, 470, 483, 484, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 486, 0, 485, 1307,
	487, 488, 489, 490, 491, 498, 500, 501, 496, 497,
	499, 502, 503, 505, 493, 494, 495, 1308, 504, 492,
	1190, 296, 1309, 506, 507, 508, 509, 1213, 1261, 510,
	1275, 513, 514, 0, 0, 515, 0, 516, 0, 0,
	518, 519, 520, 0, 0, 521, 522, 719, 1310, 523,
	1311, 1290, 524, 525, 1200, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 0, 535, 536, 721, 537, 538,
	539, 722, 540, 541, 542, 1291, 543, 724, 544, 545,
	0, 546, 547, 548, 0, 549, 550, 551, 552, 553,
	554, 555, 556, 1271, 557, 558, 560, 559, 561, 0,
	562, 0, 563, 564, 565, 0, 0, 0, 0, 0,
	566, 567, 569, 0, 570, 571, 572, 573, 568, 574,
	575, 576, 577, 578, 579, 0, 580, 581, 582, 1312,
	583, 584, 585, 586, 587, 1201, 588, 0, 589, 590,
	597, 598, 599, 591, 592, 593, 600, 601, 602, 603,
	604, 0, 606, 607, 605, 608, 609, 610, 1254, 611,
	612, 594, 595, 613, 614, 1313, 615, 616, 617, 618,
	619, 620, 621, 1269, 0, 622, 0, 623, 624, 625,
	626, 627, 629, 596, 630, 635, 636, 1316, 631, 632,
	633, 634, 1292, 638, 639, 640, 0, 641, 642, 1187,
	637, 628, 0, 643, 644, 645, 646, 647, 648, 0,
	649, 650, 0, 651, 1281, 1282, 1283, 1284, 0, 662,
	0, 652, 654, 655, 656, 1293, 657, 1294, 1211, 658,
	659, 660, 661, 653, 663, 664, 0, 1194, 665, 666,
	668, 670, 671, 667, 669, 672, 1255, 673, 0, 0,
	674, 675, 676, 736, 1278, 1315, 0, 678, 677, 679,
	680, 681, 739, 682, 683, 0, 0, 0, 0, 684,
	685, 740, 686, 687, 688, 1191, 0, 0, 0, 0,
	0, 0, 1233, 1205, 1206, 1207, 3434, 3435, 1216, 0,
	1186, 0, 0, 0, 0, 0, 0, 1184, 1185, 297,
	298, 300, 299, 301, 302, 303, 304, 1217, 305, 306,
	0, 1215, 0, 0, 0, 1257, 1221, 0, 0, 307,
	0, 308, 309, 1297, 310, 311, 312, 313, 314, 315,
	316, 690, 1270, 0, 317, 1277, 318, 1276, 0, 1287,
	319, 320, 321, 322, 323, 324, 1223, 1256, 1188, 325,
	1317, 1318, 697, 0, 326, 327, 1263, 0, 1244, 0,
	328, 329, 330, 331, 332, 333, 334, 335, 0, 0,
	337, 338, 339, 336, 340, 0, 341, 0, 342, 343,
	344, 345, 346, 347, 0, 348, 349, 350, 1298, 351,
	352, 353, 1247, 1245, 1246, 1253, 1249, 1248, 1252, 354,
	355, 356, 357, 358, 1280, 359, 361, 1274, 1273, 1193,
	364, 360, 362, 0, 365, 363, 366, 0, 367, 368,
	369, 0, 0, 370, 1265, 372, 0, 373, 374, 375,
	0, 376, 377, 378, 0, 379, 380, 1199, 381, 382,
	383, 385, 387, 384, 386, 388, 389, 390, 391, 1288,
	1289, 392, 1212, 294, 0, 0, 0, 0, 0, 393,
	394, 395, 1272, 0, 0, 0, 396, 0, 397, 398,
	399, 0, 400, 401, 0, 1299, 402, 403, 404, 1285,
	1286, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	0, 414, 1295, 0, 1222, 415, 0, 416, 417, 418,
	419, 420, 421, 422, 1258, 1259, 1262, 511, 1301, 423,
	424, 0, 425, 426, 427, 428, 429, 0, 0, 0,
	295, 430, 431, 432, 0, 1300, 512, 433, 1267, 1268,
	0, 1228, 0, 434, 435, 1302, 1260, 1303, 436, 437,
	438, 1304, 439, 0, 0, 0, 440, 441, 442, 443,
	444, 445, 0, 446, 448, 447, 0, 449, 1296, 1305,
	450, 451, 1306, 0, 452, 453, 454, 455, 456, 457,
	460, 1251, 1250, 458, 459, 461, 462, 0, 463, 464,
	466, 469, 465, 467, 468, 470, 483, 484, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	486, 0, 485, 1307, 487, 488, 489, 490, 491, 498,
	500, 501, 496, 497, 499, 502, 503, 505, 493, 494,
	495, 1308, 504, 492, 1190, 296, 1309, 506, 507, 508,
	509, 1213, 1261, 510, 1275, 513, 514, 0, 0, 515,
	0, 516, 0, 0, 518, 519, 520, 0, 0, 521,
	522, 719, 1310, 523, 1311, 1290, 524, 525, 1200, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 0, 535,
	536, 721, 537, 538, 539, 722, 540, 541, 542, 1291,
	543, 724, 544, 545, 0, 546, 547, 548, 0, 549,
	550, 551, 552, 553, 554, 555, 556, 1271, 557, 558,
	560, 559, 561, 0, 562, 0, 563, 564, 565, 0,
	0, 0, 0, 0, 566, 567, 569, 0, 570, 571,
	572, 573, 568, 574, 575, 576, 577, 578, 579, 0,
	580, 581, 582, 1312, 583, 584, 585, 586, 587, 1201,
	588, 0, 589, 590, 597, 598, 599, 591, 592, 593,
	600, 601, 602, 603, 604, 0, 606, 607, 605, 608,
	609, 610, 1254, 611, 612, 594, 595, 613, 614, 1313,
	615, 616, 617, 618, 619, 620, 621, 1269, 0, 622,
	0, 623, 624, 625, 626, 627, 629, 596, 630, 635,
	636, 1316, 631, 632, 633, 634, 1292, 638, 639, 640,
	0, 641, 642, 1187, 637, 628, 0, 643, 644, 645,
	646, 647, 648, 0, 649, 650, 0, 651, 1281, 1282,
	1283, 1284, 0, 662, 0, 652, 654, 655, 656, 1293,
	657, 1294, 1211, 658, 659, 660, 661, 653, 663, 664,
	0, 1194, 665, 666, 668, 670, 671, 667, 669, 672,
	1255, 673, 0, 0, 674, 675, 676, 736, 1278, 1315,
	0, 678, 677, 679, 680, 681, 739, 682, 683, 0,
	0, 0, 0, 684, 685, 740, 686, 687, 688, 1191,
	0, 0, 0, 0, 0, 0, 1233, 1205, 1206, 1207,
	1203, 1204, 1216, 0, 1186, 0, 0, 0, 0, 0,
	0, 1184, 1185, 297, 298, 300, 299, 301, 302, 303,
	304, 1217, 305, 306, 0, 1215, 0, 0, 0, 1257,
	1221, 0, 0, 307, 0, 308, 309, 1297, 310, 311,
	312, 313, 314, 315, 316, 690, 1270, 0, 317, 1277,
	318, 1276, 0, 1287, 319, 320, 321, 322, 323, 324,
	1223, 1256, 1188, 325, 1317, 1318, 697, 0, 326, 327,
	1263, 0, 1244, 0, 328, 329, 330, 331, 332, 333,
	334, 335, 0, 0, 337, 338, 339, 336, 340, 0,
	341, 0, 342, 343, 344, 345, 346, 347, 0, 348,
	349, 350, 1298, 351, 352, 353, 1247, 1245, 1246, 1253,
	1249, 1248, 1252, 354, 355, 356, 357, 358, 1280, 359,
	361, 1274, 1273, 1193, 364, 360, 362, 0, 365, 363,
	366, 0, 367, 368, 369, 0, 0, 370, 1265, 372,
	0, 373, 374, 375, 0, 376, 377, 378, 0, 379,
	380, 1199, 381, 382, 383, 385, 387, 384, 386, 388,
	389, 390, 391, 1288, 1289, 392, 1212, 294, 0, 0,
	0, 0, 0, 393, 394, 395, 1272, 0, 0, 0,
	396, 0, 397, 398, 399, 0, 400, 401, 0, 1299,
	402, 403, 404, 1285, 1286, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 0, 414, 1295, 0, 1222, 415,
	0, 416, 417, 418, 419, 420, 421, 422, 1258, 1259,
	1262, 511, 1301, 423, 424, 0, 425, 426, 427, 428,
	429, 0, 0, 0, 295, 430, 431, 432, 0, 1300,
	512, 433, 1267, 1268, 0, 1228, 0, 434, 435, 1302,
	1260, 1303, 436, 437, 438, 1304, 439, 0, 0, 0,
	440, 441, 442, 443, 444, 445, 0, 446, 448, 447,
	0, 449, 1296, 1305, 450, 451, 1306, 0, 452, 453,
	454, 455, 456, 457, 460, 1251, 1250, 458, 459, 461,
	462, 0, 463, 464, 466, 469, 465, 467, 468, 470,
	483, 484, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 486, 0, 485, 1307, 487, 488,
	489, 490, 491, 498, 500, 501, 496, 497, 499, 502,
	503, 505, 493, 494, 495, 1308, 504, 492, 1190, 296,
	1309, 506, 507, 508, 509, 1213, 1261, 510, 1275, 513,
	514, 0, 0, 515, 0, 516, 0, 0, 518, 519,
	520, 0, 0, 521, 522, 719, 1310, 523, 1311, 1290,
	524, 525, 1200, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 0, 535, 536, 721, 537, 538, 539, 722,
	540, 541, 542, 1291, 543, 724, 544, 545, 0, 546,
	547, 548, 0, 549, 550, 551, 552, 553, 554, 555,
	556, 1271, 557, 558, 560, 559, 561, 0, 562, 0,
	563, 564, 565, 0, 0, 0, 0, 0, 566, 567,
	569, 0, 570, 571, 572, 573, 568, 574, 575, 576,
	577, 578, 579, 0, 580, 581, 582, 1312, 583, 584,
	585, 586, 587, 1201, 588, 0, 589, 590, 597, 598,
	599, 591, 592, 593, 600, 601, 602, 603, 604, 0,
	606, 607, 605, 608, 609, 610, 1254, 611, 612, 594,
	595, 613, 614, 1313, 615, 616, 617, 618, 619, 620,
	621, 1269, 0, 622, 0, 623, 624, 625, 626, 627,
	629, 596, 630, 635, 636, 1316, 631, 632, 633, 634,
	1292, 638, 639, 640, 0, 641, 642, 1187, 637, 628,
	0, 643, 644, 645, 646, 647, 648, 0, 649, 650,
	0, 651, 1281, 1282, 1283, 1284, 0, 662, 0, 652,
	654, 655, 656, 1293, 657, 1294, 1211, 658, 659, 660,
	661, 653, 663, 664, 0, 1194, 665, 666, 668, 670,
	671, 667, 669, 672, 1255, 673, 0, 0, 674, 675,
	676, 736, 1278, 1315, 0, 678, 677, 679, 680, 681,
	739, 682, 683, 0, 0, 0, 0, 684, 685, 740,
	686, 687, 688, 1191, 0, 0, 0, 0, 0, 0,
	1233, 1205, 1206, 1207, 1203, 1204, 1216, 0, 1186, 0,
	0, 0, 0, 0, 0, 2659, 2660, 297, 298, 300,
	299, 301, 302, 303, 304, 1217, 305, 306, 0, 1215,
	0, 0, 0, 1257, 1221, 0, 0, 307, 0, 308,
	309, 1297, 310, 311, 312, 313, 314, 315, 316, 690,
	1270, 0, 317, 1277, 318, 1276, 0, 1287, 319, 320,
	321, 322, 323, 324, 1223, 1256, 0, 325, 1317, 1318,
	697, 0, 326, 327, 1263, 0, 1244, 0, 328, 329,
	330, 331, 332, 333, 334, 335, 0, 0, 337, 338,
	339, 336, 340, 0, 341, 0, 342, 343, 344, 345,
	346, 347, 0, 348, 349, 350, 1298, 351, 352, 353,
	1247, 1245, 1246, 1253, 1249, 1248, 1252, 354, 355, 356,
	357, 358, 1280, 359, 361, 1274, 1273, 0, 364, 360,
	362, 0, 365, 363, 366, 0, 367, 368, 369, 0,
	0, 370, 1265, 372, 0, 373, 374, 375, 0, 376,
	377, 378, 0, 379, 380, 1199, 381, 382, 383, 385,
	387, 384, 386, 388, 389, 390, 391, 1288, 1289, 392,
	1212, 294, 0, 0, 0, 0, 0, 393, 394, 395,
	1272, 0, 0, 0, 396, 0, 397, 398, 399, 0,
	400, 401, 0, 1299, 402, 403, 404, 1285, 1286, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 0, 414,
	1295, 0, 1222, 415, 0, 416, 417, 418, 419, 420,
	421, 422, 1258, 1259, 1262, 511, 1301, 423, 424, 0,
	425, 426, 427, 428, 429, 0, 0, 0, 295, 430,
	431, 432, 0, 1300, 512, 433, 1267, 1268, 0, 1228,
	0, 434, 435, 1302, 1260, 1303, 436, 437, 438, 1304,
	439, 0, 0, 0, 440, 441, 442, 443, 444, 445,
	0, 446, 448, 447, 0, 449, 1296, 1305, 450, 451,
	1306, 0, 452, 453, 454, 455, 456, 457, 460, 1251,
	1250, 458, 459, 461, 462, 0, 463, 464, 466, 469,
	465, 467, 468, 470, 483, 484, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 486, 0,
	485, 1307, 487, 488, 489, 490, 491, 498, 500, 501,
	496, 497, 499, 502, 503, 505, 493, 494, 495, 1308,
	504, 492, 0, 296, 1309, 506, 507, 508, 509, 1213,
	1261, 510, 1275, 513, 514, 0, 0, 515, 0, 516,
	0, 0, 518, 519, 520, 0, 0, 521, 522, 719,
	1310, 523, 1311, 1290, 524, 525, 1200, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 0, 535, 536, 721,
	537, 538, 539, 722, 540, 541, 542, 1291, 543, 724,
	544, 545, 0, 546, 547, 548, 0, 549, 550, 551,
	552, 553, 554, 555, 556, 1271, 557, 558, 560, 559,
	561, 0, 562, 0, 563, 564, 565, 0, 0, 0,
	0, 0, 566, 567, 569, 0, 570, 571, 572, 573,
	568, 574, 575, 576, 577, 578, 579, 0, 580, 581,
	582, 1312, 583, 584, 585, 586, 587, 1201, 588, 0,
	589, 590, 597, 598, 599, 591, 592, 593, 600, 601,
	602, 603, 604, 0, 606, 607, 605, 608, 609, 610,
	1254, 611, 612, 594, 595, 613, 614, 1313, 615, 616,
	617, 618, 619, 620, 621, 1269, 0, 622, 0, 623,
	624, 625, 626, 627, 629, 596, 630, 635, 636, 1316,
	631, 632, 633, 634, 1292, 638, 639, 640, 0, 641,
	642, 0, 637, 628, 0, 643, 644, 645, 646, 647,
	648, 0, 649, 650, 0, 651, 1281, 1282, 1283, 1284,
	0, 662, 0, 652, 654, 655, 656, 1293, 657, 1294,
	1211, 658, 659, 660, 661, 653, 663, 664, 0, 0,
	665, 666, 668, 670, 671, 667, 669, 672, 1255, 673,
	0, 0, 674, 675, 676, 736, 1278, 1315, 0, 678,
	677, 679, 680, 681, 739, 682, 683, 0, 0, 0,
	0, 684, 685, 740, 686, 687, 688, 0, 0, 0,
	0, 0, 0, 0, 1233, 1205, 1206, 1207, 1203, 1204,
	1216, 0, 2920, 0, 0, 0, 0, 0, 0, 2918,
	2919, 297, 298, 300, 299, 301, 302, 303, 304, 1217,
	305, 306, 0, 1215, 0, 0, 0, 1257, 1221, 0,
	0, 307, 0, 308, 309, 1297, 310, 311, 312, 313,
	314, 315, 316, 690, 1270, 0, 317, 1277, 318, 1276,
	0, 1287, 319, 320, 321, 322, 323, 324, 1223, 1256,
	0, 325, 1317, 1318, 697, 0, 326, 327, 1263, 0,
	1244, 0, 328, 329, 330, 331, 332, 333, 334, 335,
	0, 0, 337, 338, 339, 336, 340, 0, 341, 0,
	342, 343, 344, 345, 346, 347, 0, 348, 349, 350,
	1298, 351, 352, 353, 1247, 1245, 1246, 1253, 1249, 1248,
	1252, 354, 355, 356, 357, 358, 1280, 359, 361, 1274,
	1273, 0, 364, 360, 362, 0, 365, 363, 366, 0,
	367, 368, 369, 0, 0, 370, 1265, 372, 0, 373,
	374, 375, 0, 376, 377, 378, 0, 379, 380, 1199,
	381, 382, 383, 385, 387, 384, 386, 388, 389, 390,
	391, 1288, 1289, 392, 1212, 294, 0, 0, 0, 0,
	0, 393, 394, 395, 1272, 0, 0, 0, 396, 0,
	397, 398, 399, 0, 400, 401, 0, 1299, 402, 403,
	404, 1285, 1286, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 0, 414, 1295, 0, 1222, 415, 0, 416,
	417, 418, 419, 420, 421, 422, 1258, 1259, 1262, 511,
	1301, 423, 424, 0, 425, 426, 427, 428, 429, 0,
	0, 0, 295, 430, 431, 432, 0, 1300, 512, 433,
	1267, 1268, 0, 1228, 0, 434, 435, 1302, 1260, 1303,
	436, 437, 438, 1304, 439, 0, 0, 0, 440, 441,
	442, 443, 444, 445, 0, 446, 448, 447, 0, 449,
	1296, 1305, 450, 451, 1306, 0, 452, 453, 454, 455,
	456, 457, 460, 1251, 1250, 458, 459, 461, 462, 0,
	463, 464, 466, 469, 465, 467, 468, 470, 483, 484,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 486, 0, 485, 1307, 487, 488, 489, 490,
	491, 498, 500, 501, 496, 497, 499, 502, 503, 505,
	493, 494, 495, 1308, 504, 492, 0, 296, 1309, 506,
	507, 508, 509, 1213, 1261, 510, 1275, 513, 514, 0,
	0, 515, 0, 516, 0, 0, 518, 519, 520, 0,
	0, 521, 522, 719, 1310, 523, 1311, 1290, 524, 525,
	517, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	0, 535, 536, 721, 537, 538, 539, 722, 540, 541,
	542, 1291, 543, 724, 544, 545, 0, 546, 547, 548,
	0, 549, 550, 551, 552, 553, 554, 555, 556, 1271,
	557, 558, 560, 559, 561, 0, 562, 0, 563, 564,
	565, 0, 0, 0, 0, 0, 566, 567, 569, 0,
	570, 571, 572, 573, 568, 574, 575, 576, 577, 578,
	579, 0, 580, 581, 582, 1312, 583, 584, 585, 586,
	587, 3429, 3430, 0, 589, 590, 597, 598, 599, 591,
	592, 593, 600, 601, 602, 603, 604, 0, 606, 607,
	605, 608, 609, 610, 1254, 611, 612, 594, 595, 613,
	614, 1313, 615, 616, 617, 618, 619, 620, 621, 1269,
	0, 622, 0, 623, 624, 625, 626, 627, 629, 596,
	630, 635, 636, 1316, 631, 632, 633, 634, 1292, 638,
	639, 640, 0, 641, 642, 0, 637, 628, 0, 643,
	644, 645, 646, 647, 648, 0, 649, 650, 0, 651,
	1281, 1282, 1283, 1284, 0, 662, 0, 652, 654, 655,
	656, 1293, 657, 1294, 1211, 658, 659, 660, 661, 653,
	663, 664, 0, 0, 665, 666, 668, 670, 671, 667,
	669, 672, 1255, 673, 0, 0, 674, 675, 676, 736,
	1278, 1315, 0, 678, 677, 679, 680, 681, 739, 682,
	683, 0, 0, 0, 0, 684, 685, 740, 686, 687,
	688, 0, 0, 0, 0, 0, 0, 0, 1233, 1205,
	1206, 1207, 1203, 1204, 1216, 0, 0, 0, 0, 0,
	0, 0, 0, 2283, 2284, 297, 298, 300, 299, 301,
	302, 303, 304, 1217, 305, 306, 0, 1215, 0, 0,
	0, 1257, 1221, 0, 0, 307, 0, 308, 309, 1297,
	310, 311, 312, 313, 314, 315, 316, 0, 1270, 0,
	317, 1277, 318, 1276, 0, 1287, 319, 320, 321, 322,
	323, 324, 1223, 1256, 1188, 325, 1317, 1318, 697, 0,
	326, 327, 1263, 0, 1244, 0, 328, 329, 330, 331,
	332, 333, 334, 335, 0, 0, 337, 338, 339, 336,
	340, 0, 341, 0, 342, 343, 344, 345, 346, 347,
	0, 348, 349, 350, 1298, 351, 352, 5130, 1247, 1245,
	1246, 1253, 1249, 1248, 1252, 354, 355, 356, 357, 358,
	1280, 359, 361, 1274, 1273, 1193, 364, 360, 362, 0,
	365, 363, 366, 0, 367, 368, 369, 0, 0, 370,
	1265, 372, 0, 373, 374, 375, 0, 376, 377, 378,
	0, 379, 380, 1199, 381, 382, 383, 385, 387, 384,
	386, 388, 389, 390, 391, 1288, 1289, 392, 1212, 294,
	0, 0, 0, 0, 0, 393, 394, 395, 1272, 0,
	0, 0, 396, 0, 397, 398, 399, 0, 400, 401,
	0, 1299, 402, 403, 404, 1285, 1286, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 0, 414, 1295, 0,
	1222, 415, 0, 416, 417, 418, 419, 420, 421, 422,
	1258, 1259, 1262, 511, 0, 423, 424, 0, 425, 426,
	427, 428, 429, 0, 0, 0, 295, 430, 431, 432,
	0, 1300, 512, 433, 1267, 1268, 0, 1228, 0, 434,
	435, 0, 1260, 0, 436, 437, 438, 1304, 439, 0,
	0, 0, 440, 441, 442, 443, 444, 445, 0, 446,
	448, 447, 0, 449, 1296, 1305, 450, 451, 0, 0,
	452, 453, 454, 455, 456, 457, 460, 1251, 1250, 458,
	459, 461, 462, 0, 463, 464, 466, 469, 465, 467,
	468, 470, 483, 484, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 486, 0, 485, 1307,
	487, 488, 489, 490, 491, 498, 500, 501, 496, 497,
	499, 502, 503, 505, 493, 494, 495, 1308, 504, 492,
	1190, 296, 0, 506, 507, 508, 509, 1213, 1261, 510,
	1275, 513, 514, 0, 0, 515, 0, 516, 0, 0,
	518, 519, 520, 0, 0, 521, 522, 719, 1310, 523,
	1311, 1290, 524, 525, 1200, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 0, 535, 536, 721, 537, 538,
	539, 722, 540, 541, 542, 1291, 543, 724, 544, 545,
	0, 546, 547, 548, 0, 549, 550, 551, 552, 553,
	554, 555, 556, 1271, 557, 558, 560, 559, 561, 0,
	562, 0, 563, 564, 565, 0, 0, 0, 0, 0,
	566, 567, 569, 0, 570, 571, 572, 573, 568, 574,
	575, 576, 577, 578, 579, 0, 580, 581, 582, 1312,
	583, 584, 585, 586, 587, 1201, 588, 0, 589, 590,
	597, 598, 599, 591, 592, 593, 600, 601, 602, 603,
	604, 0, 606, 607, 605, 608, 609, 610, 1254, 611,
	612, 594, 595, 613, 614, 0, 615, 616, 617, 618,
	619, 620, 621, 1269, 0, 622, 0, 623, 624, 625,
	626, 627, 629, 596, 630, 635, 636, 1316, 631, 632,
	633, 634, 1292, 638, 639, 640, 0, 641, 642, 1187,
	637, 628, 0, 643, 644, 645, 646, 647, 648, 0,
	649, 650, 0, 651, 1281, 1282, 1283, 1284, 0, 662,
	0, 652, 654, 655, 656, 1293, 657, 1294, 1211, 658,
	659, 660, 661, 653, 5129, 664, 0, 1194, 665, 666,
	668, 670, 671, 667, 669, 672, 1255, 673, 0, 0,
	674, 675, 676, 736, 1278, 1315, 0, 678, 677, 679,
	680, 681, 739, 682, 683, 0, 0, 0, 0, 684,
	685, 740, 686, 687, 688, 0, 0, 0, 0, 0,
	2939, 0, 1233, 1205, 1206, 1207, 1203, 1204, 1216, 0,
	0, 0, 0, 0, 0, 0, 0, 1184, 1185, 297,
	298, 300, 299, 301, 302, 303, 304, 1217, 305, 306,
	0, 1215, 0, 0, 0, 1257, 1221, 0, 0, 307,
	0, 308, 309, 1297, 310, 311, 312, 313, 314, 315,
	316, 690, 1270, 0, 317, 1277, 318, 1276, 0, 1287,
	319, 320, 321, 322, 323, 324, 0, 1256, 0, 325,
	1317, 1318, 697, 0, 326, 327, 1263, 0, 1244, 0,
	328, 329, 330, 331, 332, 333, 334, 335, 0, 0,
	337, 338, 339, 336, 340, 0, 341, 0, 342, 343,
	344, 345, 346, 347, 0, 348, 349, 350, 1298, 351,
	352, 353, 1247, 1245, 1246, 1253, 1249, 1248, 1252, 354,
	355, 356, 357, 358, 1280, 359, 361, 1274, 1273, 0,
	364, 360, 362, 0, 365, 363, 366, 0, 367, 368,
	369, 0, 0, 370, 1265, 372, 0, 373, 374, 375,
	0, 376, 377, 378, 0, 379, 380, 701, 381, 382,
	383, 385, 387, 384, 386, 388, 389, 390, 391, 1288,
	1289, 392, 1212, 294, 0, 0, 0, 0, 0, 393,
	394, 395, 1272, 0, 0, 0, 396, 0, 397, 398,
	399, 0, 400, 401, 0, 1299, 402, 403, 404, 1285,
	1286, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	0, 414, 1295, 0, 1222, 415, 0, 416, 417, 418,
	419, 420, 421, 422, 1258, 1259, 1262, 511, 1301, 423,
	424, 0, 425, 426, 427, 428, 429, 0, 0, 0,
	295, 430, 431, 432, 0, 1300, 512, 433, 1267, 1268,
	0, 1228, 0, 434, 435, 1302, 1260, 1303, 436, 437,
	438, 1304, 439, 0, 0, 0, 440, 441, 442, 443,
	444, 445, 0, 446, 448, 447, 0, 449, 1296, 1305,
	450, 451, 1306, 0, 452, 453, 454, 455, 456, 457,
	460, 1251, 1250, 458, 459, 461, 462, 0, 463, 464,
	466, 469, 465, 467, 468, 470, 483, 484, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	486, 0, 485, 1307, 487, 488, 489, 490, 491, 498,
	500, 501, 496, 497, 499, 502, 503, 505, 493, 494,
	495, 1308, 504, 492, 0, 296, 1309, 506, 507, 508,
	509, 1213, 1261, 510, 1275, 513, 514, 0, 0, 515,
	0, 516, 0, 0, 518, 519, 520, 0, 0, 521,
	522, 719, 1310, 523, 1311, 1290, 524, 525, 517, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 0, 535,
	536, 721, 537, 538, 539, 722, 540, 541, 542, 1291,
	543, 724, 544, 545, 0, 546, 547, 548, 0, 549,
	550, 551, 552, 553, 554, 555, 556, 1271, 557, 558,
	560, 559, 561, 0, 562, 0, 563, 564, 565, 0,
	0, 0, 0, 0, 566, 567, 569, 0, 570, 571,
	572, 573, 568, 574, 575, 576, 577, 578, 579, 0,
	580, 581, 582, 1312, 583, 584, 585, 586, 587, 1201,
	588, 0, 589, 590, 597, 598, 599, 591, 592, 593,
	600, 601, 602, 603, 604, 0, 606, 607, 605, 608,
	609, 610, 1254, 611, 612, 594, 595, 613, 614, 1313,
	615, 616, 617, 618, 619, 620, 621, 1269, 0, 622,
	0, 623, 624, 625, 626, 627, 629, 596, 630, 635,
	636, 1316, 631, 632, 633, 634, 1292, 638, 639, 640,
	0, 641, 642, 0, 637, 628, 0, 643, 644, 645,
	646, 647, 648, 0, 649, 650, 0, 651, 1281, 1282,
	1283, 1284, 0, 662, 0, 652, 654, 655, 656, 1293,
	657, 1294, 1211, 658, 659, 660, 661, 653, 663, 664,
	0, 0, 665, 666, 668, 670, 671, 667, 669, 672,
	1255, 673, 0, 0, 674, 675, 676, 736, 1278, 1315,
	0, 678, 677, 679, 680, 681, 739, 682, 683, 0,
	0, 0, 0, 684, 685, 740, 686, 687, 688, 0,
	0, 1643, 0, 1233, 1205, 1206, 1207, 1203, 1204, 1216,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	297, 298, 300, 299, 301, 302, 303, 304, 0, 305,
	306, 1217, 0, 0, 0, 1215, 1257, 1221, 0, 0,
	307, 0, 308, 309, 1297, 310, 311, 312, 313, 314,
	315, 316, 690, 1270, 0, 317, 1277, 318, 1276, 0,
	1287, 319, 320, 321, 322, 323, 324, 0, 1256, 0,
	325, 1317, 1318, 697, 0, 326, 327, 1263, 0, 1244,
	0, 328, 329, 330, 331, 332, 333, 334, 335, 0,
	0, 337, 338, 339, 336, 340, 0, 341, 0, 342,
	343, 344, 345, 346, 347, 0, 348, 349, 350, 1298,
	351, 352, 353, 1247, 1245, 1246, 1253, 1249, 1248, 1252,
	354, 355, 356, 357, 358, 1280, 359, 361, 1274, 1273,
	0, 364, 360, 362, 0, 365, 363, 366, 0, 367,
	368, 369, 0, 0, 370, 1265, 372, 0, 373, 374,
	375, 0, 376, 377, 378, 0, 379, 380, 701, 381,
	382, 383, 385, 387, 384, 386, 388, 389, 390, 391,
	1288, 1289, 392, 1212, 294, 0, 0, 0, 0, 0,
	393, 394, 395, 1272, 0, 0, 0, 396, 0, 397,
	398, 399, 0, 400, 401, 0, 1299, 402, 403, 404,
	1285, 1286, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 0, 414, 1295, 0, 1222, 415, 0, 416, 417,
	418, 419, 420, 421, 422, 1258, 1259, 1262, 511, 1301,
	423, 424, 0, 425, 426, 427, 428, 429, 0, 0,
	0, 295, 430, 431, 432, 0, 1300, 512, 433, 1267,
	1268, 0, 1228, 0, 434, 435, 1302, 1260, 1303, 436,
	437, 438, 1304, 439, 0, 0, 0, 440, 441, 442,
	443, 444, 445, 0, 446, 448, 447, 0, 449, 1296,
	1305, 450, 451, 1306, 0, 452, 453, 454, 455, 456,
	457, 460, 1251, 1250, 458, 459, 461, 462, 0, 463,
	464, 466, 469, 465, 467, 468, 470, 483, 484, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 486, 0, 485, 1307, 487, 488, 489, 490, 491,
	498, 500, 501, 496, 497, 499, 502, 503, 505, 493,
	494, 495, 1308, 504, 492, 0, 296, 1309, 506, 507,
	508, 509, 1213, 1261, 510, 1275, 513, 514, 0, 0,
	515, 0, 516, 0, 0, 518, 519, 520, 0, 0,
	521, 522, 719, 1310, 523, 1311, 1290, 524, 525, 517,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 0,
	535, 536, 721, 537, 538, 539, 722, 540, 541, 542,
	1291, 543, 724, 544, 545, 0, 546, 547, 548, 0,
	549, 550, 551, 552, 553, 554, 555, 556, 1271, 557,
	558, 560, 559, 561, 0, 562, 0, 563, 564, 565,
	0, 0, 0, 0, 0, 566, 567, 569, 0, 570,
	571, 572, 573, 568, 574, 575, 576, 577, 578, 579,
	0, 580, 581, 582, 1312, 583, 584, 585, 586, 587,
	1201, 588, 0, 589, 590, 597, 598, 599, 591, 592,
	593, 600, 601, 602, 603, 604, 0, 606, 607, 605,
	608, 609, 610, 1254, 611, 612, 594, 595, 613, 614,
	1313, 615, 616, 617, 618, 619, 620, 621, 1269, 0,
	622, 0, 623, 624, 625, 626, 627, 629, 596, 630,
	635, 636, 1316, 631, 632, 633, 634, 1292, 638, 639,
	640, 0, 641, 642, 0, 637, 628, 0, 643, 644,
	645, 646, 647, 648, 0, 649, 650, 0, 651, 1281,
	1282, 1283, 1284, 0, 662, 0, 652, 654, 655, 656,
	1293, 657, 1294, 1211, 658, 659, 660, 661, 653, 663,
	664, 0, 0, 665, 666, 668, 670, 671, 667, 669,
	672, 1255, 673, 0, 0, 674, 675, 676, 736, 1278,
	1315, 0, 678, 677, 679, 680, 681, 739, 682, 683,
	0, 0, 0, 0, 684, 685, 740, 686, 687, 688,
	1175, 0, 1356, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 297,
	298, 300, 299, 301, 302, 303, 304, 0, 305, 306,
	0, 0, 1217, 0, 0, 1257, 1215, 0, 0, 307,
	0, 308, 309, 1297, 310, 311, 312, 313, 314, 315,
	316, 690, 691, 0, 317, 692, 318, 693, 0, 694,
	319, 320, 321, 322, 323, 324, 0, 1256, 0, 325,
	695, 696, 697, 0, 326, 327, 1263, 0, 1244, 0,
	328, 329, 330, 331, 332, 333, 334, 335, 0, 0,
	337, 338, 339, 336, 340, 0, 341, 0, 342, 343,
	344, 345, 346, 347, 0, 348, 349, 350, 1298, 351,
	352, 353, 1247, 1245, 1246, 1253, 1249, 1248, 1252, 354,
	355, 356, 357, 358, 0, 359, 361, 699, 700, 0,
	364, 360, 362, 0, 365, 363, 366, 0, 367, 368,
	369, 0, 0, 370, 371, 372, 0, 373, 374, 375,
	0, 376, 377, 378, 0, 379, 380, 701, 381, 382,
	383, 385, 387, 384, 386, 388, 389, 390, 391, 1288,
	1289, 392, 0, 294, 0, 0, 0, 0, 0, 393,
	394, 395, 704, 0, 0, 0, 396, 0, 397, 398,
	399, 0, 400, 401, 0, 1299, 402, 403, 404, 705,
	706, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	0, 414, 1295, 0, 708, 415, 0, 416, 417, 418,
	419, 420, 421, 422, 1258, 1259, 1262, 511, 1301, 423,
	424, 0, 425, 426, 427, 428, 429, 0, 0, 0,
	295, 430, 431, 432, 0, 1300, 512, 433, 712, 713,
	0, 714, 0, 434, 435, 1302, 1260, 1303, 436, 437,
	438, 1304, 439, 0, 0, 0, 440, 441, 442, 443,
	444, 445, 1342, 446, 448, 447, 0, 449, 1296, 1305,
	450, 451, 1306, 0, 452, 453, 454, 455, 456, 457,
	460, 1251, 1250, 458, 459, 461, 462, 0, 463, 464,
	466, 469, 465, 467, 468, 470, 483, 484, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	486, 0, 485, 1307, 487, 488, 489, 490, 491, 498,
	500, 501, 496, 497, 499, 502, 503, 505, 493, 494,
	495, 1308, 504, 492, 0, 296, 1309, 506, 507, 508,
	509, 0, 1261, 510, 718, 513, 514, 0, 0, 515,
	0, 516, 0, 1348, 518, 519, 520, 0, 0, 521,
	522, 719, 1310, 523, 1311, 1290, 524, 525, 517, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 0, 535,
	536, 721, 537, 538, 539, 722, 540, 541, 542, 1291,
	543, 724, 544, 545, 0, 546, 547, 548, 0, 549,
	550, 551, 552, 553, 554, 555, 556, 725, 557, 558,
	560, 559, 561, 0, 562, 0, 563, 564, 565, 0,
	0, 0, 0, 0, 566, 567, 569, 0, 570, 571,
	572, 573, 568, 574, 575, 576, 577, 578, 579, 0,
	580, 581, 582, 1312, 583, 584, 585, 586, 587, 726,
	1350, 0, 589, 590, 597, 598, 599, 591, 592, 593,
	600, 601, 602, 603, 604, 252, 606, 607, 605, 608,
	609, 610, 1254, 611, 612, 594, 595, 613, 614, 1313,
	615, 616, 617, 618, 619, 620, 621, 727, 0, 622,
	0, 623, 624, 625, 626, 627, 629, 596, 630, 635,
	636, 728, 631, 632, 633, 634, 1292, 638, 639, 640,
	0, 641, 642, 0, 637, 628, 254, 643, 644, 645,
	646, 647, 648, 0, 649, 650, 0, 651, 730, 731,
	732, 733, 0, 662, 0, 652, 654, 655, 656, 1293,
	657, 1294, 0, 658, 659, 660, 661, 653, 663, 664,
	0, 0, 665, 666, 668, 670, 671, 667, 669, 672,
	1255, 673, 0, 0, 674, 675, 676, 1761, 737, 738,
	0, 678, 677, 679, 680, 681, 739, 682, 683, 0,
	0, 0, 246, 684, 685, 740, 686, 687, 688, 1356,
	0, 247, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 297, 298, 300, 299,
	301, 302, 303, 304, 0, 305, 306, 0, 0, 1346,
	0, 2125, 1257, 0, 0, 0, 307, 0, 308, 309,
	1297, 310, 311, 312, 313, 314, 315, 316, 690, 691,
	0, 317, 692, 318, 693, 0, 694, 319, 320, 321,
	322, 323, 324, 0, 1256, 0, 325, 695, 696, 697,
	0, 326, 327, 1263, 0, 1244, 0, 328, 329, 330,
	331, 332, 333, 334, 335, 0, 0, 337, 338, 339,
	336, 340, 0, 341, 0, 342, 343, 344, 345, 346,
	347, 0, 348, 349, 350, 1298, 351, 352, 353, 1247,
	1245, 1246, 1253, 1249, 1248, 1252, 354, 355, 356, 357,
	358, 0, 359, 361, 699, 700, 0, 364, 360, 362,
	0, 365, 363, 366, 0, 367, 368, 369, 0, 0,
	370, 371, 372, 0, 373, 374, 375, 0, 376, 377,
	378, 0, 379, 380, 701, 381, 382, 383, 385, 387,
	384, 386, 388, 389, 390, 391, 1288, 1289, 392, 0,
	294, 0, 0, 0, 0, 0, 393, 394, 395, 704,
	0, 0, 0, 396, 0, 397, 398, 399, 0, 400,
	401, 0, 1299, 402, 403, 404, 705, 706, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 0, 414, 1295,
	0, 708, 415, 0, 416, 417, 418, 419, 420, 421,
	422, 1258, 1259, 1262, 511, 1301, 423, 424, 0, 425,
	426, 427, 428, 429, 0, 0, 0, 295, 430, 431,
	432, 0, 1300, 512, 433, 712, 713, 0, 714, 0,
	434, 435, 1302, 1260, 1303, 436, 437, 438, 1304, 439,
	0, 0, 0, 440, 441, 442, 443, 444, 445, 1342,
	446, 448, 447, 0, 449, 1296, 1305, 450, 451, 1306,
	0, 452, 453, 454, 455, 456, 457, 460, 1251, 1250,
	458, 459, 461, 462, 0, 463, 464, 466, 469, 465,
	467, 468, 470, 483, 484, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 486, 0, 485,
	1307, 487, 488, 489, 490, 491, 498, 500, 501, 496,
	497, 499, 502, 503, 505, 493, 494, 495, 1308, 504,
	492, 0, 296, 1309, 506, 507, 508, 509, 0, 1261,
	510, 718, 513, 514, 0, 0, 515, 0, 516, 0,
	1348, 518, 519, 520, 0, 0, 521, 522, 719, 1310,
	523, 1311, 1290, 524, 525, 517, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 0, 535, 536, 721, 537,
	538, 539, 722, 540, 541, 542, 1291, 543, 724, 544,
	545, 0, 546, 547, 548, 0, 549, 550, 551, 552,
	553, 554, 555, 556, 725, 557, 558, 560, 559, 561,
	0, 562, 0, 563, 564, 565, 0, 0, 0, 0,
	0, 566, 567, 569, 0, 570, 571, 572, 573, 568,
	574, 575, 576, 577, 578, 579, 0, 580, 581, 582,
	1312, 583, 584, 585, 586, 587, 726, 1350, 0, 589,
	590, 597, 598, 599, 591, 592, 593, 600, 601, 602,
	603, 604, 252, 606, 607, 605, 608, 609, 610, 1254,
	611, 612, 594, 595, 613, 614, 1313, 615, 616, 617,
	618, 619, 620, 621, 727, 0, 622, 0, 623, 624,
	625, 626, 627, 629, 596, 630, 635, 636, 728, 631,
	632, 633, 634, 1292, 638, 639, 640, 0, 641, 642,
	0, 637, 628, 254, 643, 644, 645, 646, 647, 648,
	0, 649, 650, 0, 651, 730, 731, 732, 733, 0,
	662, 0, 652, 654, 655, 656, 1293, 657, 1294, 0,
	658, 659, 660, 661, 653, 663, 664, 0, 0, 665,
	666, 668, 670, 671, 667, 669, 672, 1255, 673, 0,
	0, 674, 675, 676, 1761, 737, 738, 0, 678, 677,
	679, 680, 681, 739, 682, 683, 0, 0, 0, 246,
	684, 685, 740, 686, 687, 688, 0, 0, 247, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3594, 0, 1356, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1346, 0, 2125, 297,
	298, 300, 299, 301, 302, 303, 304, 0, 305, 306,
	0, 0, 0, 0, 0, 1257, 0, 0, 0, 307,
	0, 308, 309, 1297, 310, 311, 312, 313, 314, 315,
	316, 690, 691, 0, 317, 692, 318, 693, 0, 694,
	319, 320, 321, 322, 323, 324, 0, 1256, 0, 325,
	695, 696, 697, 0, 326, 327, 1263, 0, 1244, 0,
	328, 329, 330, 331, 332, 333, 334, 335, 0, 0,
	337, 338, 339, 336, 340, 0, 341, 0, 342, 343,
	344, 345, 346, 347, 0, 348, 349, 350, 1298, 351,
	352, 353, 1247, 1245, 1246, 1253, 1249, 1248, 1252, 354,
	355, 356, 357, 358, 0, 359, 361, 699, 700, 0,
	364, 360, 362, 0, 365, 363, 366, 0, 367, 368,
	369, 0, 0, 370, 371, 372, 0, 373, 374, 375,
	0, 376, 377, 378, 0, 379, 380, 701, 381, 382,
	383, 385, 387, 384, 386, 388, 389, 390, 391, 1288,
	1289, 392, 0, 294, 0, 0, 0, 0, 0, 393,
	394, 395, 704, 0, 0, 0, 396, 0, 397, 398,
	399, 0, 400, 401, 0, 1299, 402, 403, 404, 705,
	706, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	0, 414, 1295, 0, 708, 415, 0, 416, 417, 418,
	419, 420, 421, 422, 1258, 1259, 1262, 511, 1301, 423,
	424, 0, 425, 426, 427, 428, 429, 0, 0, 0,
	295, 430, 431, 432, 0, 1300, 512, 433, 712, 713,
	0, 714, 0, 434, 435, 1302, 1260, 1303, 436, 437,
	438, 1304, 439, 0, 0, 0, 440, 441, 442, 443,
	444, 445, 1342, 446, 448, 447, 0, 449, 1296, 1305,
	450, 451, 1306, 0, 452, 453, 454, 455, 456, 457,
	460, 1251, 1250, 458, 459, 461, 462, 0, 463, 464,
	466, 469, 465, 467, 468, 470, 483, 484, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	486, 0, 485, 1307, 487, 488, 489, 490, 491, 498,
	500, 501, 496, 497, 499, 502, 503, 505, 493, 494,
	495, 1308, 504, 492, 0, 296, 1309, 506, 507, 508,
	509, 0, 1261, 510, 718, 513, 514, 0, 0, 515,
	0, 516, 0, 1348, 518, 519, 520, 0, 0, 521,
	522, 719, 1310, 523, 1311, 1290, 524, 525, 517, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 0, 535,
	536, 721, 537, 538, 539, 722, 540, 541, 542, 1291,
	543, 724, 544, 545, 0, 546, 547, 548, 0, 549,
	550, 551, 552, 553, 554, 555, 556, 725, 557, 558,
	560, 559, 561, 0, 562, 0, 563, 564, 565, 0,
	0, 0, 0, 0, 566, 567, 569, 0, 570, 571,
	572, 573, 568, 574, 575, 576, 577, 578, 579, 0,
	580, 581, 582, 1312, 583, 584, 585, 586, 587, 726,
	1350, 0, 589, 590, 597, 598, 599, 591, 592, 593,
	600, 601, 602, 603, 604, 0, 606, 607, 605, 608,
	609, 610, 1254, 611, 612, 594, 595, 613, 614, 1313,
	615, 616, 617, 618, 619, 620, 621, 727, 0, 622,
	0, 623, 624, 625, 626, 627, 629, 596, 630, 635,
	636, 728, 631, 632, 633, 634, 1292, 638, 639, 640,
	0, 641, 642, 0, 637, 628, 0, 643, 644, 645,
	646, 647, 648, 0, 649, 650, 0, 651, 730, 731,
	732, 733, 0, 662, 0, 652, 654, 655, 656, 1293,
	657, 1294, 0, 658, 659, 660, 661, 653, 663, 664,
	0, 0, 665, 666, 668, 670, 671, 667, 669, 672,
	1255, 673, 0, 0, 674, 675, 676, 736, 737, 738,
	0, 678, 677, 679, 680, 681, 739, 682, 683, 0,
	0, 0, 0, 684, 685, 740, 686, 687, 688, 1338,
	0, 1356, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 297, 298,
	300, 299, 301, 302, 303, 304, 0, 305, 306, 1346,
	0, 1344, 0, 0, 1257, 0, 0, 0, 307, 0,
	308, 309, 1297, 310, 311, 312, 313, 314, 315, 316,
	690, 691, 0, 317, 692, 318, 693, 0, 694, 319,
	320, 321, 322, 323, 324, 0, 1256, 0, 325, 695,
	696, 697, 0, 326, 327, 1263, 0, 1244, 0, 328,
	329, 330, 331, 332, 333, 334, 335, 0, 0, 337,
	338, 339, 336, 340, 0, 341, 0, 342, 343, 344,
	345, 346, 347, 0, 348, 349, 350, 1298, 351, 352,
	353, 1247, 1245, 1246, 1253, 1249, 1248, 1252, 354, 355,
	356, 357, 358, 0, 359, 361, 699, 700, 0, 364,
	360, 362, 0, 365, 363, 366, 0, 367, 368, 369,
	0, 0, 370, 371, 372, 0, 373, 374, 375, 0,
	376, 377, 378, 0, 379, 380, 701, 381, 382, 383,
	385, 387, 384, 386, 388, 389, 390, 391, 1288, 1289,
	392, 0, 294, 0, 0, 0, 0, 0, 393, 394,
	395, 704, 0, 0, 0, 396, 0, 397, 398, 399,
	0, 400, 401, 0, 1299, 402, 403, 404, 705, 706,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 0,
	414, 1295, 0, 708, 415, 0, 416, 417, 418, 419,
	420, 421, 422, 1258, 1259, 1262, 511, 1301, 423, 424,
	0, 425, 426, 427, 428, 429, 0, 0, 0, 295,
	430, 431, 432, 0, 1300, 512, 433, 712, 713, 0,
	714, 0, 434, 435, 1302, 1260, 1303, 436, 437, 438,
	1304, 439, 0, 0, 0, 440, 441, 442, 443, 444,
	445, 1342, 446, 448, 447, 0, 449, 1296, 1305, 450,
	451, 1306, 0, 452, 453, 454, 455, 456, 457, 460,
	1251, 1250, 458, 459, 461, 462, 0, 463, 464, 466,
	469, 465, 467, 468, 470, 483, 484, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 486,
	0, 485, 1307, 487, 488, 489, 490, 491, 498, 500,
	501, 496, 497, 499, 502, 503, 505, 493, 494, 495,
	1308, 504, 492, 0, 296, 1309, 506, 507, 508, 509,
	0, 1261, 510, 718, 513, 514, 0, 0, 515, 0,
	516, 0, 1348, 518, 519, 520, 0, 0, 521, 522,
	719, 1310, 523, 1311, 1290, 524, 525, 517, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 0, 535, 536,
	721, 537, 538, 539, 722, 540, 541, 542, 1291, 543,
	724, 544, 545, 0, 546, 547, 548, 0, 549, 550,
	551, 552, 553, 554, 555, 556, 725, 557, 558, 560,
	559, 561, 0, 562, 0, 563, 564, 565, 0, 0,
	0, 0, 0, 566, 567, 569, 0, 570, 571, 572,
	573, 568, 574, 575, 576, 577, 578, 579, 0, 580,
	581, 582, 1312, 583, 584, 585, 586, 587, 726, 1350,
	0, 589, 590, 597, 598, 599, 591, 592, 593, 600,
	601, 602, 603, 604, 0, 606, 607, 605, 608, 609,
	610, 1254, 611, 612, 594, 595, 613, 614, 1313, 615,
	616, 617, 618, 619, 620, 621, 727, 0, 622, 0,
	623, 624, 625, 626, 627, 629, 596, 630, 635, 636,
	728, 631, 632, 633, 634, 1292, 638, 639, 640, 0,
	641, 642, 0, 637, 628, 0, 643, 644, 645, 646,
	647, 648, 0, 649, 650, 0, 651, 730, 731, 732,
	733, 0, 662, 0, 652, 654, 655, 656, 1293, 657,
	1294, 0, 658, 659, 660, 661, 653, 663, 664, 0,
	0, 665, 666, 668, 670, 671, 667, 669, 672, 1255,
	673, 0, 0, 674, 675, 676, 736, 737, 738, 0,
	678, 677, 679, 680, 681, 739, 682, 683, 0, 0,
	0, 0, 684, 685, 740, 686, 687, 688, 1356, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 297, 298, 300, 299, 301,
	302, 303, 304, 0, 305, 306, 0, 0, 1346, 0,
	1344, 1257, 0, 0, 0, 307, 0, 308, 309, 1297,
	310, 311, 312, 313, 314, 315, 316, 690, 691, 0,
	317, 692, 318, 693, 0, 694, 319, 320, 321, 322,
	323, 324, 0, 1256, 0, 325, 695, 696, 697, 0,
	326, 327, 1263, 0, 1244, 0, 328, 329, 330, 331,
	332, 333, 334, 335, 0, 0, 337, 338, 339, 336,
	340, 0, 341, 0, 342, 343, 344, 345, 346, 347,
	0, 348, 349, 350, 1298, 351, 352, 353, 1247, 1245,
	1246, 1253, 1249, 1248, 1252, 354, 355, 356, 357, 358,
	0, 359, 361, 699, 700, 0, 364, 360, 362, 0,
	365, 363, 366, 0, 367, 368, 369, 0, 0, 370,
	371, 372, 0, 373, 374, 375, 0, 376, 377, 378,
	0, 379, 380, 701, 381, 382, 383, 385, 387, 384,
	386, 388, 389, 390, 391, 1288, 1289, 392, 0, 294,
	0, 0, 0, 0, 0, 393, 394, 395, 704, 0,
	0, 0, 396, 0, 397, 398, 399, 0, 400, 401,
	0, 1299, 402, 403, 404, 705, 706, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 0, 414, 1295, 0,
	708, 415, 0, 416, 417, 418, 419, 420, 421, 422,
	1258, 1259, 1262, 511, 1301, 423, 424, 0, 425, 426,
	427, 428, 429, 0, 0, 0, 295, 430, 431, 432,
	0, 1300, 512, 433, 712, 713, 0, 714, 0, 434,
	435, 1302, 1260, 1303, 436, 437, 438, 1304, 439, 0,
	0, 0, 440, 441, 442, 443, 444, 445, 1342, 446,
	448, 447, 0, 449, 1296, 1305, 450, 451, 1306, 0,
	452, 453, 454, 455, 456, 457, 460, 1251, 1250, 458,
	459, 461, 462, 0, 463, 464, 466, 469, 465, 467,
	468, 470, 483, 484, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 486, 0, 485, 1307,
	487, 488, 489, 490, 491, 498, 500, 501, 496, 497,
	499, 502, 503, 505, 493, 494, 495, 1308, 504, 492,
	0, 296, 1309, 506, 507, 508, 509, 0, 1261, 510,
	718, 513, 514, 0, 0, 515, 0, 516, 0, 1348,
	518, 519, 520, 0, 0, 521, 522, 719, 1310, 523,
	1311, 1290, 524, 525, 517, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 0, 535, 536, 721, 537, 538,
	539, 722, 540, 541, 542, 1291, 543, 724, 544, 545,
	0, 546, 547, 548, 0, 549, 550, 551, 552, 553,
	554, 555, 556, 725, 557, 558, 560, 559, 561, 0,
	562, 0, 563, 564, 565, 0, 0, 0, 0, 0,
	566, 567, 569, 0, 570, 571, 572, 573, 568, 574,
	575, 576, 577, 578, 579, 0, 580, 581, 582, 1312,
	583, 584, 585, 586, 587, 726, 1350, 0, 589, 590,
	597, 598, 599, 591, 592, 593, 600, 601, 602, 603,
	604, 0, 606, 607, 605, 608, 609, 610, 1254, 611,
	612, 594, 595, 613, 614, 1313, 615, 616, 617, 618,
	619, 620, 621, 727, 0, 622, 0, 623, 624, 625,
	626, 627, 629, 596, 630, 635, 636, 728, 631, 632,
	633, 634, 1292, 638, 639, 640, 0, 641, 642, 0,
	637, 628, 0, 643, 644, 645, 646, 647, 648, 0,
	649, 650, 0, 651, 730, 731, 732, 733, 0, 662,
	0, 652, 654, 655, 656, 1293, 657, 1294, 0, 658,
	659, 660, 661, 653, 663, 664, 0, 0, 665, 666,
	668, 670, 671, 667, 669, 672, 1255, 673, 0, 0,
	674, 675, 676, 736, 737, 738, 0, 678, 677, 679,
	680, 681, 739, 682, 683, 0, 0, 0, 0, 684,
	685, 740, 686, 687, 688, 1356, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 297, 298, 300, 299, 301, 302, 303, 304,
	0, 305, 306, 0, 0, 1346, 0, 1344, 1257, 0,
	0, 0, 307, 0, 308, 309, 1297, 310, 311, 312,
	313, 314, 315, 316, 690, 691, 0, 317, 692, 318,
	693, 0, 694, 319, 320, 321, 322, 323, 324, 0,
	1256, 0, 325, 695, 696, 697, 0, 326, 327, 1263,
	0, 1244, 0, 328, 329, 330, 331, 332, 333, 334,
	335, 0, 0, 337, 338, 339, 336, 340, 0, 341,
	0, 342, 343, 344, 345, 346, 347, 0, 348, 349,
	350, 1298, 351, 352, 353, 1247, 1245, 1246, 1253, 1249,
	1248, 1252, 354, 355, 356, 357, 358, 0, 359, 361,
	699, 700, 0, 364, 360, 362, 0, 365, 363, 366,
	0, 367, 368, 369, 0, 0, 370, 371, 372, 0,
	373, 374, 375, 0, 376, 377, 378, 0, 379, 380,
	701, 381, 382, 383, 385, 387, 384, 386, 388, 389,
	390, 391, 1288, 1289, 392, 0, 294, 0, 0, 0,
	0, 0, 393, 394, 395, 704, 0, 0, 0, 396,
	0, 397, 398, 399, 0, 400, 401, 0, 1299, 402,
	403, 404, 705, 706, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 0, 414, 1295, 0, 708, 415, 0,
	416, 417, 418, 419, 420, 421, 422, 1258, 1259, 1262,
	511, 1301, 423, 424, 0, 425, 426, 427, 428, 429,
	0, 0, 0, 295, 430, 431, 432, 0, 1300, 512,
	433, 712, 713, 0, 714, 0, 434, 435, 1302, 1260,
	1303, 436, 437, 438, 1304, 439, 0, 0, 0, 440,
	441, 442, 443, 444, 445, 0, 446, 448, 447, 0,
	449, 1296, 1305, 450, 451, 1306, 0, 452, 453, 454,
	455, 456, 457, 460, 1251, 1250, 458, 459, 461, 462,
	0, 463, 464, 466, 469, 465, 467, 468, 470, 483,
	484, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 486, 0, 485, 1307, 487, 488, 489,
	490, 491, 498, 500, 501, 496, 497, 499, 502, 503,
	505, 493, 494, 495, 1308, 504, 492, 0, 296, 1309,
	506, 507, 508, 509, 0, 1261, 510, 718, 513, 514,
	0, 0, 515, 0, 516, 0, 0, 518, 519, 520,
	0, 0, 521, 522, 719, 1310, 523, 1311, 1290, 524,
	525, 517, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 0, 535, 536, 721, 537, 538, 539, 722, 540,
	541, 542, 1291, 543, 724, 544, 545, 0, 546, 547,
	548, 0, 549, 550, 551, 552, 553, 554, 555, 556,
	725, 557, 558, 560, 559, 561, 0, 562, 0, 563,
	564, 565, 0, 0, 0, 0, 0, 566, 567, 569,
	0, 570, 571, 572, 573, 568, 574, 575, 576, 577,
	578, 579, 0, 580, 581, 582, 1312, 583, 584, 585,
	586, 587, 726, 588, 0, 589, 590, 597, 598, 599,
	591, 592, 593, 600, 601, 602, 603, 604, 0, 606,
	607, 605, 608, 609, 610, 1254, 611, 612, 594, 595,
	613, 614, 1313, 615, 616, 617, 618, 619, 620, 621,
	727, 0, 622, 0, 623, 624, 625, 626, 627, 629,
	596, 630, 635, 636, 728, 631, 632, 633, 634, 1292,
	638, 639, 640, 0, 641, 642, 0, 637, 628, 0,
	643, 644, 645, 646, 647, 648, 0, 649, 650, 0,
	651, 730, 731, 732, 733, 0, 662, 0, 652, 654,
	655, 656, 1293, 657, 1294, 0, 658, 659, 660, 661,
	653, 663, 664, 0, 0, 665, 666, 668, 670, 671,
	667, 669, 672, 1255, 673, 0, 0, 674, 675, 676,
	736, 737, 738, 0, 678, 677, 679, 680, 681, 739,
	682, 683, 0, 0, 0, 0, 684, 685, 740, 686,
	687, 688, 1356, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 297,
	298, 300, 299, 301, 302, 303, 304, 0, 305, 306,
	0, 0, 0, 0, 4539, 1257, 0, 0, 0, 307,
	0, 308, 309, 1297, 310, 311, 312, 313, 314, 315,
	316, 690, 691, 0, 317, 692, 318, 693, 0, 694,
	319, 320, 321, 322, 323, 324, 0, 1256, 0, 325,
	695, 696, 697, 0, 326, 327, 1263, 0, 1244, 0,
	328, 329, 330, 331, 332, 333, 334, 335, 0, 0,
	337, 338, 339, 336, 340, 0, 341, 0, 342, 343,
	344, 345, 346, 347, 0, 348, 349, 350, 1298, 351,
	352, 353, 1247, 1245, 1246, 1253, 1249, 1248, 1252, 354,
	355, 356, 357, 358, 0, 359, 361, 699, 700, 0,
	364, 360, 362, 0, 365, 363, 366, 0, 367, 368,
	369, 0, 0, 370, 371, 372, 0, 373, 374, 375,
	0, 376, 377, 378, 0, 379, 380, 701, 381, 382,
	383, 385, 387, 384, 386, 388, 389, 390, 391, 1288,
	1289, 392, 0, 294, 0, 0, 0, 0, 0, 393,
	394, 395, 704, 0, 0, 0, 396, 0, 397, 398,
	399, 0, 400, 401, 0, 1299, 402, 403, 404, 705,
	706, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	0, 414, 1295, 0, 708, 415, 0, 416, 417, 418,
	419, 420, 421, 422, 1258, 1259, 1262, 511, 1301, 423,
	424, 0, 425, 426, 427, 428, 429, 0, 0, 0,
	295, 430, 431, 432, 0, 1300, 512, 433, 712, 713,
	0, 714, 0, 434, 435, 1302, 1260, 1303, 436, 437,
	438, 1304, 439, 0, 0, 0, 440, 441, 442, 443,
	444, 445, 0, 446, 448, 447, 0, 449, 1296, 1305,
	450, 451, 1306, 0, 452, 453, 454, 455, 456, 457,
	460, 1251, 1250, 458, 459, 461, 462, 0, 463, 464,
	466, 469, 465, 467, 468, 470, 483, 484, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	486, 0, 485, 1307, 487, 488, 489, 490, 491, 498,
	500, 501, 496, 497, 499, 502, 503, 505, 493, 494,
	495, 1308, 504, 492, 0, 296, 1309, 506, 507, 508,
	509, 0, 1261, 510, 718, 513, 514, 0, 0, 515,
	0, 516, 0, 0, 518, 519, 520, 0, 0, 521,
	522, 719, 1310, 523, 1311, 1290, 524, 525, 517, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 0, 535,
	536, 721, 537, 538, 539, 722, 540, 541, 542, 1291,
	543, 724, 544, 545, 0, 546, 547, 548, 0, 549,
	550, 551, 552, 553, 554, 555, 556, 725, 557, 558,
	560, 559, 561, 0, 562, 0, 563, 564, 565, 0,
	0, 0, 0, 0, 566, 567, 569, 0, 570, 571,
	572, 573, 568, 574, 575, 576, 577, 578, 579, 0,
	580, 581, 582, 1312, 583, 584, 585, 586, 587, 726,
	1350, 0, 589, 590, 597, 598, 599, 591, 592, 593,
	600, 601, 602, 603, 604, 0, 606, 607, 605, 608,
	609, 610, 1254, 611, 612, 594, 595, 613, 614, 1313,
	615, 616, 617, 618, 619, 620, 621, 727, 0, 622,
	0, 623, 624, 625, 626, 627, 629, 596, 630, 635,
	636, 728, 631, 632, 633, 634, 1292, 638, 639, 640,
	0, 641, 642, 0, 637, 628, 0, 643, 644, 645,
	646, 647, 648, 0, 649, 650, 0, 651, 730, 731,
	732, 733, 0, 662, 0, 652, 654, 655, 656, 1293,
	657, 1294, 0, 658, 659, 660, 661, 653, 663, 664,
	0, 0, 665, 666, 668, 670, 671, 667, 669, 672,
	1255, 673, 0, 0, 674, 675, 676, 736, 737, 738,
	0, 678, 677, 679, 680, 681, 739, 682, 683, 0,
	291, 0, 0, 684, 685, 740, 686, 687, 688, 0,
	2765, 2766, 2767, 2784, 2785, 2786, 0, 297, 298, 300,
	299, 301, 302, 303, 304, 0, 305, 306, 0, 0,
	0, 2787, 0, 689, 0, 0, 0, 307, 0, 308,
	309, 2021, 310, 311, 312, 313, 314, 315, 316, 690,
	691, 0, 317, 692, 318, 693, 0, 694, 319, 320,
	321, 322, 323, 324, 0, 0, 2006, 325, 695, 696,
	697, 0, 326, 327, 698, 0, 0, 0, 328, 329,
	330, 331, 332, 333, 334, 335, 2777, 0, 337, 338,
	339, 336, 340, 0, 341, 2773, 342, 343, 344, 345,
	346, 347, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 0, 0, 0, 0, 0, 0, 354, 355, 356,
	357, 358, 0, 359, 361, 699, 700, 0, 364, 360,
	362, 0, 365, 363, 366, 0, 367, 368, 369, 0,
	0, 370, 371, 372, 0, 373, 374, 375, 0, 376,
	377, 378, 0, 379, 380, 701, 381, 382, 383, 385,
	387, 384, 386, 388, 389, 390, 391, 702, 703, 392,
	0, 0, 0, 2778, 2779, 2780, 2781, 393, 394, 395,
	704, 0, 0, 2772, 396, 0, 397, 398, 399, 0,
	400, 401, 0, 0, 402, 403, 404, 705, 706, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 0, 414,
	707, 0, 708, 415, 0, 416, 417, 418, 419, 420,
	421, 422, 709, 710, 711, 511, 0, 423, 424, 0,
	425, 426, 427, 428, 429, 0, 0, 0, 0, 430,
	431, 432, 0, 0, 512, 433, 712, 713, 0, 714,
	0, 434, 435, 0, 715, 0, 436, 437, 438, 0,
	439, 0, 2782, 2783, 440, 441, 442, 443, 444, 445,
	0, 446, 448, 447, 0, 449, 716, 0, 450, 451,
	0, 0, 452, 453, 454, 455, 456, 457, 460, 0,
	0, 458, 459, 461, 462, 2775, 463, 464, 466, 469,
	465, 467, 468, 470, 483, 484, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 486, 0,
	485, 0, 487, 488, 489, 490, 491, 498, 500, 501,
	496, 497, 499, 502, 503, 505, 493, 494, 495, 0,
	504, 492, 0, 0, 0, 506, 507, 508, 509, 0,
	717, 510, 718, 513, 514, 0, 0, 515, 0, 516,
	0, 0, 518, 519, 520, 0, 0, 521, 522, 719,
	0, 523, 0, 720, 524, 525, 517, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 0, 535, 536, 721,
	537, 538, 539, 722, 540, 541, 542, 723, 543, 724,
	544, 545, 0, 546, 547, 548, 0, 549, 550, 551,
	552, 553, 554, 555, 556, 725, 557, 558, 560, 559,
	561, 0, 562, 0, 563, 564, 565, 0, 0, 0,
	0, 0, 566, 567, 569, 0, 570, 571, 572, 573,
	568, 574, 575, 576, 577, 578, 579, 0, 580, 581,
	582, 0, 583, 584, 585, 586, 587, 726, 588, 2776,
	589, 590, 597, 598, 599, 591, 592, 593, 600, 601,
	602, 603, 604, 0, 606, 607, 605, 608, 609, 610,
	0, 611, 612, 594, 595, 613, 614, 0, 615, 616,
	617, 618, 619, 620, 621, 727, 0, 622, 0, 623,
	624, 625, 626, 627, 629, 596, 630, 635, 636, 728,
	631, 632, 633, 634, 729, 638, 639, 640, 0, 641,
	642, 2005, 637, 628, 0, 643, 644, 645, 646, 647,
	648, 0, 649, 650, 0, 651, 730, 731, 732, 733,
	0, 662, 0, 652, 654, 655, 656, 734, 657, 735,
	0, 658, 659, 660, 661, 653, 663, 664, 0, 0,
	665, 666, 668, 670, 671, 667, 669, 672, 0, 673,
	0, 0, 674, 675, 676, 736, 737, 738, 0, 678,
	677, 679, 680, 681, 739, 682, 683, 0, 0, 0,
	0, 684, 685, 740, 686, 687, 688, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1175, 0, 1638, 2762,
	2763, 2764, 2788, 2774, 2768, 0, 2770, 2771, 2769, 2756,
	2757, 2758, 2759, 2760, 2761, 297, 298, 300, 299, 301,
	302, 303, 304, 0, 305, 306, 0, 0, 0, 0,
	0, 689, 0, 0, 0, 307, 0, 308, 309, 1297,
	310, 311, 312, 313, 314, 315, 316, 690, 691, 0,
	317, 692, 318, 693, 0, 694, 319, 320, 321, 322,
	323, 324, 0, 0, 0, 325, 695, 696, 697, 0,
	326, 327, 698, 0, 1602, 0, 328, 329, 330, 331,
	332, 333, 334, 335, 0, 0, 337, 338, 339, 336,
	340, 0, 341, 0, 342, 343, 344, 345, 346, 347,
	0, 348, 349, 350, 1298, 351, 352, 353, 0, 0,
	0, 0, 0, 0, 0, 354, 355, 356, 357, 358,
	0, 359, 361, 699, 700, 0, 364, 360, 362, 0,
	365, 363, 366, 0, 367, 368, 369, 0, 0, 370,
	371, 372, 0, 373, 374, 375, 0, 376, 377, 378,
	0, 379, 380, 701, 381, 382, 383, 385, 387, 384,
	386, 388, 389, 390, 391, 702, 703, 392, 0, 294,
	0, 0, 0, 0, 0, 393, 394, 395, 704, 0,
	0, 0, 396, 0, 397, 398, 399, 0, 400, 401,
	0, 1299, 402, 403, 404, 705, 706, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 0, 414, 707, 0,
	708, 415, 0, 416, 417, 418, 419, 420, 421, 422,
	709, 710, 711, 511, 1301, 423, 424, 0, 425, 426,
	427, 428, 429, 0, 0, 0, 0, 430, 431, 432,
	0, 1300, 512, 433, 712, 713, 0, 714, 0, 434,
	435, 1302, 715, 1303, 436, 437, 438, 1304, 439, 0,
	0, 0, 440, 441, 442, 443, 444, 445, 0, 446,
	448, 447, 0, 449, 716, 1305, 450, 451, 1306, 0,
	452, 453, 454, 455, 456, 457, 460, 0, 0, 458,
	459, 461, 462, 0, 463, 464, 466, 469, 465, 467,
	468, 470, 483, 484, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 486, 0, 485, 1307,
	487, 488, 489, 490, 491, 498, 500, 501, 496, 497,
	499, 502, 503, 505, 493, 494, 495, 1308, 504, 492,
	0, 0, 1309, 506, 507, 508, 509, 0, 717, 510,
	718, 513, 514, 0, 0, 515, 0, 516, 0, 0,
	518, 519, 520, 0, 0, 521, 522, 719, 1310, 523,
	1311, 720, 524, 525, 517, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 0, 535, 536, 721, 537, 538,
	539, 722, 540, 541, 542, 723, 543, 724, 544, 545,
	0, 546, 547, 548, 0, 549, 550, 551, 552, 553,
	554, 555, 556, 725, 557, 558, 560, 559, 561, 0,
	562, 0, 563, 564, 565, 0, 0, 0, 0, 0,
	566, 567, 569, 0, 570, 571, 572, 573, 568, 574,
	575, 576, 577, 578, 579, 0, 580, 581, 582, 1312,
	583, 584, 585, 586, 587, 726, 588, 0, 589, 590,
	597, 598, 599, 591, 592, 593, 600, 601, 602, 603,
	604, 252, 606, 607, 605, 608, 609, 610, 0, 611,
	612, 594, 595, 613, 614, 1313, 615, 616, 617, 618,
	619, 620, 621, 727, 0, 622, 0, 623, 624, 625,
	626, 627, 629, 596, 630, 635, 636, 728, 631, 632,
	633, 634, 729, 638, 639, 640, 0, 641, 642, 0,
	637, 628, 254, 643, 644, 645, 646, 647, 648, 0,
	649, 650, 0, 651, 730, 731, 732, 733, 0, 662,
	0, 652, 654, 655, 656, 734, 657, 735, 0, 658,
	659, 660, 661, 653, 663, 664, 0, 0, 665, 666,
	668, 670, 671, 667, 669, 672, 0, 673, 0, 0,
	674, 675, 676, 1761, 737, 738, 0, 678, 677, 679,
	680, 681, 739, 682, 683, 0, 0, 0, 246, 684,
	685, 740, 686, 687, 688, 0, 1758, 247, 1638, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 297, 298, 300, 299, 301,
	302, 303, 304, 0, 305, 306, 0, 202, 0, 0,
	0, 689, 0, 0, 0, 307, 0, 308, 309, 1297,
	310, 311, 312, 313, 314, 315, 316, 690, 691, 0,
	317, 692, 318, 693, 0, 694, 319, 320, 321, 322,
	323, 324, 0, 0, 0, 325, 695, 696, 697, 0,
	326, 327, 698, 0, 1602, 0, 328, 329, 330, 331,
	332, 333, 334, 335, 0, 0, 337, 338, 339, 336,
	340, 0, 341, 0, 342, 343, 344, 345, 346, 347,
	0, 348, 349, 350, 1298, 351, 352, 353, 0, 0,
	0, 0, 0, 0, 0, 354, 355, 356, 357, 358,
	0, 359, 361, 699, 700, 0, 364, 360, 362, 0,
	365, 363, 366, 0, 367, 368, 369, 0, 0, 370,
	371, 372, 0, 373, 374, 375, 0, 376, 377, 378,
	0, 379, 380, 701, 381, 382, 383, 385, 387, 384,
	386, 388, 389, 390, 391, 702, 703, 392, 0, 294,
	0, 0, 0, 0, 0, 393, 394, 395, 704, 0,
	0, 0, 396, 0, 397, 398, 399, 0, 400, 401,
	0, 1299, 402, 403, 404, 705, 706, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 0, 414, 707, 0,
	708, 415, 0, 416, 417, 418, 419, 420, 421, 422,
	709, 710, 711, 511, 1301, 423, 424, 0, 425, 426,
	427, 428, 429, 0, 0, 0, 0, 430, 431, 432,
	0, 1300, 512, 433, 712, 713, 0, 714, 0, 434,
	435, 1302, 715, 1303, 436, 437, 438, 1304, 439, 0,
	0, 0, 440, 441, 442, 443, 444, 445, 0, 446,
	448, 447, 0, 449, 716, 1305, 450, 451, 1306, 0,
	452, 453, 454, 455, 456, 457, 460, 0, 0, 458,
	459, 461, 462, 0, 463, 464, 466, 469, 465, 467,
	468, 470, 483, 484, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 486, 0, 485, 1307,
	487, 488, 489, 490, 491, 498, 500, 501, 496, 497,
	499, 502, 503, 505, 493, 494, 495, 1308, 504, 492,
	0, 0, 1309, 506, 507, 508, 509, 0, 717, 510,
	718, 513, 514, 0, 0, 515, 0, 516, 0, 0,
	518, 519, 520, 0, 0, 521, 522, 719, 1310, 523,
	1311, 720, 524, 525, 517, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 0, 535, 536, 721, 537, 538,
	539, 722, 540, 541, 542, 723, 543, 724, 544, 545,
	0, 546, 547, 548, 0, 549, 550, 551, 552, 553,
	554, 555, 556, 725, 557, 558, 560, 559, 561, 0,
	562, 0, 563, 564, 565, 0, 0, 0, 0, 0,
	566, 567, 569, 0, 570, 571, 572, 573, 568, 574,
	575, 576, 577, 578, 579, 0, 580, 581, 582, 1312,
	583, 584, 585, 586, 587, 726, 588, 0, 589, 590,
	597, 598, 599, 591, 592, 593, 600, 601, 602, 603,
	604, 252, 606, 607, 605, 608, 609, 610, 0, 611,
	612, 594, 595, 613, 614, 1313, 615, 616, 617, 618,
	619, 620, 621, 727, 0, 622, 0, 623, 624, 625,
	626, 627, 629, 596, 630, 635, 636, 728, 631, 632,
	633, 634, 729, 638, 639, 640, 0, 641, 642, 0,
	637, 628, 254, 643, 644, 645, 646, 647, 648, 0,
	649, 650, 0, 651, 730, 731, 732, 733, 0, 662,
	0, 652, 654, 655, 656, 734, 657, 735, 0, 658,
	659, 660, 661, 653, 663, 664, 0, 0, 665, 666,
	668, 670, 671, 667, 669, 672, 0, 673, 0, 0,
	674, 675, 676, 1761, 737, 738, 0, 678, 677, 679,
	680, 681, 739, 682, 683, 0, 0, 0, 246, 684,
	685, 740, 686, 687, 688, 1638, 1637, 247, 0, 0,
	0, 1635, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 297, 298, 300, 299, 301, 302, 303, 304,
	0, 305, 306, 0, 0, 0, 0, 202, 689, 0,
	0, 0, 307, 0, 308, 309, 1297, 310, 311, 312,
	313, 314, 315, 316, 690, 691, 0, 317, 692, 318,
	693, 0, 694, 319, 320, 321, 322, 323, 324, 0,
	0, 0, 325, 695, 696, 697, 0, 326, 327, 698,
	0, 1602, 0, 328, 329, 330, 331, 332, 333, 334,
	335, 0, 0, 337, 338, 339, 336, 340, 0, 341,
	0, 342, 343, 344, 345, 346, 347, 0, 348, 349,
	350, 1298, 351, 352, 353, 0, 0, 0, 0, 0,
	0, 0, 354, 355, 356, 357, 358, 0, 359, 361,
	699, 700, 0, 364, 360, 362, 0, 365, 363, 366,
	0, 367, 368, 369, 0, 0, 370, 371, 372, 0,
	373, 374, 375, 0, 376, 377, 378, 0, 379, 380,
	701, 381, 382, 383, 385, 387, 384, 386, 388, 389,
	390, 391, 702, 703, 392, 0, 294, 0, 0, 0,
	0, 0, 393, 394, 395, 704, 0, 0, 0, 396,
	0, 397, 398, 399, 0, 400, 401, 0, 1299, 402,
	403, 404, 705, 706, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 0, 414, 707, 0, 708, 415, 0,
	416, 417, 418, 419, 420, 421, 422, 709, 710, 711,
	511, 1301, 423, 424, 0, 425, 426, 427, 428, 429,
	0, 0, 0, 0, 430, 431, 432, 0, 1300, 512,
	433, 712, 713, 0, 714, 0, 434, 435, 1302, 715,
	1303, 436, 437, 438, 1304, 439, 0, 0, 0, 440,
	441, 442, 443, 444, 445, 0, 446, 448, 447, 0,
	449, 716, 1305, 450, 451, 1306, 0, 452, 453, 454,
	455, 456, 457, 460, 0, 0, 458, 459, 461, 462,
	0, 463, 464, 466, 469, 465, 467, 468, 470, 483,
	484, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 486, 0, 485, 1307, 487, 488, 489,
	490, 491, 498, 500, 501, 496, 497, 499, 502, 503,
	505, 493, 494, 495, 1308, 504, 492, 0, 0, 1309,
	506, 507, 508, 509, 0, 717, 510, 718, 513, 514,
	0, 0, 515, 0, 516, 0, 0, 518, 519, 520,
	0, 0, 521, 522, 719, 1310, 523, 1311, 720, 524,
	525, 517, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 0, 535, 536, 721, 537, 538, 539, 722, 540,
	541, 542, 723, 543, 724, 544, 545, 0, 546, 547,
	548, 0, 549, 550, 551, 552, 553, 554, 555, 556,
	725, 557, 558, 560, 559, 561, 0, 562, 0, 563,
	564, 565, 0, 0, 0, 0, 0, 566, 567, 569,
	0, 570, 571, 572, 573, 568, 574, 575, 576, 577,
	578, 579, 0, 580, 581, 582, 1312, 583, 584, 585,
	586, 587, 726, 588, 0, 589, 590, 597, 598, 599,
	591, 592, 593, 600, 601, 602, 603, 604, 0, 606,
	607, 605, 608, 609, 610, 0, 611, 612, 594, 595,
	613, 614, 1313, 615, 616, 617, 618, 619, 620, 621,
	727, 0, 622, 0, 623, 624, 625, 626, 627, 629,
	596, 630, 635, 636, 728, 631, 632, 633, 634, 729,
	638, 639, 640, 0, 641, 642, 0, 637, 628, 0,
	643, 644, 645, 646, 647, 648, 0, 649, 650, 0,
	651, 730, 731, 732, 733, 0, 662, 0, 652, 654,
	655, 656, 734, 657, 735, 0, 658, 659, 660, 661,
	653, 663, 664, 0, 0, 665, 666, 668, 670, 671,
	667, 669, 672, 0, 673, 0, 0, 674, 675, 676,
	736, 737, 738, 0, 678, 677, 679, 680, 681, 739,
	682, 683, 0, 0, 0, 0, 684, 685, 740, 686,
	687, 688, 1638, 1637, 0, 0, 0, 0, 1635, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 297,
	298, 300, 299, 301, 302, 303, 304, 0, 305, 306,
	0, 0, 0, 0, 1785, 689, 0, 0, 0, 307,
	0, 308, 309, 1297, 310, 311, 312, 313, 314, 315,
	316, 690, 691, 0, 317, 692, 318, 693, 0, 694,
	319, 320, 321, 322, 323, 324, 0, 0, 0, 325,
	695, 696, 697, 0, 326, 327, 698, 0, 1602, 0,
	328, 329, 330, 331, 332, 333, 334, 335, 0, 0,
	337, 338, 339, 336, 340, 0, 341, 0, 342, 343,
	344, 345, 346, 347, 0, 348, 349, 350, 1298, 351,
	352, 353, 0, 0, 0, 0, 0, 0, 0, 354,
	355, 356, 357, 358, 0, 359, 361, 699, 700, 0,
	364, 360, 362, 0, 365, 363, 366, 0, 367, 368,
	369, 0, 0, 370, 371, 372, 0, 373, 374, 375,
	0, 376, 377, 378, 0, 379, 380, 701, 381, 382,
	383, 385, 387, 384, 386, 388, 389, 390, 391, 702,
	703, 392, 0, 294, 0, 0, 0, 0, 0, 393,
	394, 395, 704, 0, 0, 0, 396, 0, 397, 398,
	399, 0, 400, 401, 0, 1299, 402, 403, 404, 705,
	706, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	0, 414, 707, 0, 708, 415, 0, 416, 417, 418,
	419, 420, 421, 422, 709, 710, 711, 511, 1301, 423,
	424, 0, 425, 426, 427, 428, 429, 0, 0, 0,
	0, 430, 431, 432, 0, 1300, 512, 433, 712, 713,
	0, 714, 0, 434, 435, 1302, 715, 1303, 436, 437,
	438, 1304, 439, 0, 0, 0, 440, 441, 442, 443,
	444, 445, 0, 446, 448, 447, 0, 449, 716, 1305,
	450, 451, 1306, 0, 452, 453, 454, 455, 456, 457,
	460, 0, 0, 458, 459, 461, 462, 0, 463, 464,
	466, 469, 465, 467, 468, 470, 483, 484, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	486, 0, 485, 1307, 487, 488, 489, 490, 491, 498,
	500, 501, 496, 497, 499, 502, 503, 505, 493, 494,
	495, 1308, 504, 492, 0, 0, 1309, 506, 507, 508,
	509, 0, 717, 510, 718, 513, 514, 0, 0, 515,
	0, 516, 0, 0, 518, 519, 520, 0, 0, 521,
	522, 719, 1310, 523, 1311, 720, 524, 525, 517, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 0, 535,
	536, 721, 537, 538, 539, 722, 540, 541, 542, 723,
	543, 724, 544, 545, 0, 546, 547, 548, 0, 549,
	550, 551, 552, 553, 554, 555, 556, 725, 557, 558,
	560, 559, 561, 0, 562, 0, 563, 564, 565, 0,
	0, 0, 0, 0, 566, 567, 569, 0, 570, 571,
	572, 573, 568, 574, 575, 576, 577, 578, 579, 0,
	580, 581, 582, 1312, 583, 584, 585, 586, 587, 726,
	588, 0, 589, 590, 597, 598, 599, 591, 592, 593,
	600, 601, 602, 603, 604, 0, 606, 607, 605, 608,
	609, 610, 0, 611, 612, 594, 595, 613, 614, 1313,
	615, 616, 617, 618, 619, 620, 621, 727, 0, 622,
	0, 623, 624, 625, 626, 627, 629, 596, 630, 635,
	636, 728, 631, 632, 633, 634, 729, 638, 639, 640,
	0, 641, 642, 0, 637, 628, 0, 643, 644, 645,
	646, 647, 648, 0, 649, 650, 0, 651, 730, 731,
	732, 733, 0, 662, 0, 652, 654, 655, 656, 734,
	657, 735, 0, 658, 659, 660, 661, 653, 663, 664,
	0, 0, 665, 666, 668, 670, 671, 667, 669, 672,
	0, 673, 0, 0, 674, 675, 676, 736, 737, 738,
	0, 678, 677, 679, 680, 681, 739, 682, 683, 0,
	0, 0, 0, 684, 685, 740, 686, 687, 688, 1638,
	1637, 0, 0, 0, 0, 1635, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 297, 298, 300, 299,
	301, 302, 303, 304, 0, 305, 306, 0, 0, 0,
	0, 3931, 689, 0, 0, 0, 307, 0, 308, 309,
	1297, 310, 311, 312, 313, 314, 315, 316, 690, 691,
	0, 317, 692, 318, 693, 0, 694, 319, 320, 321,
	322, 323, 324, 0, 0, 0, 325, 695, 696, 697,
	0, 326, 327, 698, 0, 1602, 0, 328, 329, 330,
	331, 332, 333, 334, 335, 0, 0, 337, 338, 339,
	336, 340, 0, 341, 0, 342, 343, 344, 345, 346,
	347, 0, 348, 349, 350, 1298, 351, 352, 353, 0,
	0, 0, 0, 0, 0, 0, 354, 355, 356, 357,
	358, 0, 359, 361, 699, 700, 0, 364, 360, 362,
	0, 365, 363, 366, 0, 367, 368, 369, 0, 0,
	370, 371, 372, 0, 373, 374, 375, 0, 376, 377,
	378, 0, 379, 380, 701, 381, 382, 383, 385, 387,
	384, 386, 388, 389, 390, 391, 702, 703, 392, 0,
	294, 0, 0, 0, 0, 0, 393, 394, 395, 704,
	0, 0, 0, 396, 0, 397, 398, 399, 0, 400,
	401, 0, 1299, 402, 403, 404, 705, 706, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 0, 414, 707,
	0, 708, 415, 0, 416, 417, 418, 419, 420, 421,
	422, 709, 710, 711, 511, 1301, 423, 424, 0, 425,
	426, 427, 428, 429, 0, 0, 0, 0, 430, 431,
	432, 0, 1300, 512, 433, 712, 713, 0, 714, 0,
	434, 435, 1302, 715, 1303, 436, 437, 438, 1304, 439,
	0, 0, 0, 440, 441, 442, 443, 444, 445, 0,
	446, 448, 447, 0, 449, 716, 1305, 450, 451, 1306,
	0, 452, 453, 454, 455, 456, 457, 460, 0, 0,
	458, 459, 461, 462, 0, 463, 464, 466, 469, 465,
	467, 468, 470, 483, 484, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 486, 0, 485,
	1307, 487, 488, 489, 490, 491, 498, 500, 501, 496,
	497, 499, 502, 503, 505, 493, 494, 495, 1308, 504,
	492, 0, 0, 1309, 506, 507, 508, 509, 0, 717,
	510, 718, 513, 514, 0, 0, 515, 0, 516, 0,
	0, 518, 519, 520, 0, 0, 521, 522, 719, 1310,
	523, 1311, 720, 524, 525, 517, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 0, 535, 536, 721, 537,
	538, 539, 722, 540, 541, 542, 723, 543, 724, 544,
	545, 0, 546, 547, 548, 0, 549, 550, 551, 552,
	553, 554, 555, 556, 725, 557, 558, 560, 559, 561,
	0, 562, 0, 563, 564, 565, 0, 0, 0, 0,
	0, 566, 567, 569, 0, 570, 571, 572, 2522, 568,
	574, 575, 576, 577, 578, 579, 0, 580, 581, 582,
	1312, 583, 584, 585, 586, 587, 726, 588, 0, 589,
	590, 597, 598, 599, 591, 592, 593, 600, 601, 602,
	603, 604, 0, 606, 607, 605, 608, 609, 610, 0,
	611, 612, 594, 595, 613, 614, 1313, 615, 616, 617,
	618, 619, 620, 621, 727, 0, 622, 0, 623, 624,
	625, 626, 627, 629, 596, 630, 635, 636, 728, 631,
	632, 633, 634, 729, 638, 639, 640, 0, 641, 642,
	0, 637, 628, 0, 643, 644, 645, 646, 647, 648,
	0, 649, 650, 0, 651, 730, 731, 732, 733, 0,
	662, 0, 652, 654, 655, 656, 734, 657, 735, 0,
	658, 659, 660, 661, 653, 663, 664, 0, 0, 665,
	666, 668, 670, 671, 667, 669, 672, 0, 673, 0,
	0, 674, 675, 676, 736, 737, 738, 0, 678, 677,
	679, 680, 681, 739, 682, 683, 0, 0, 0, 0,
	684, 685, 740, 686, 687, 688, 1638, 2432, 0, 0,
	0, 0, 2433, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 297, 298, 300, 299, 301, 302, 303,
	304, 0, 305, 306, 0, 0, 0, 0, 1785, 689,
	0, 0, 0, 307, 0, 308, 309, 1297, 310, 311,
	312, 313, 314, 315, 316, 690, 691, 0, 317, 692,
	318, 693, 0, 694, 319, 320, 321, 322, 323, 324,
	0, 0, 0, 325, 695, 696, 697, 0, 326, 327,
	698, 0, 1602, 0, 328, 329, 330, 331, 332, 333,
	334, 335, 0, 0, 337, 338, 339, 336, 340, 0,
	341, 0, 342, 343, 344, 345, 346, 347, 0, 348,
	349, 350, 1298, 351, 352, 353, 0, 0, 0, 0,
	0, 0, 0, 354, 355, 356, 357, 358, 0, 359,
	361, 699, 700, 0, 364, 360, 362, 0, 365, 363,
	366, 0, 367, 368, 369, 0, 0, 370, 371, 372,
	0, 373, 374, 375, 0, 376, 377, 378, 0, 379,
	380, 701, 381, 382, 383, 385, 387, 384, 386, 388,
	389, 390, 391, 702, 703, 392, 0, 294, 0, 0,
	0, 0, 0, 393, 394, 395, 704, 0, 0, 0,
	396, 0, 397, 398, 399, 0, 400, 401, 0, 1299,
	402, 403, 404, 705, 706, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 0, 414, 707, 0, 708, 415,
	0, 416, 417, 418, 419, 420, 421, 422, 709, 710,
	711, 511, 1301, 423, 424, 0, 425, 426, 427, 428,
	429, 0, 0, 0, 0, 430, 431, 432, 0, 1300,
	512, 433, 712, 713, 0, 714, 0, 434, 435, 1302,
	715, 1303, 436, 437, 438, 1304, 439, 0, 0, 0,
	440, 441, 442, 443, 444, 445, 0, 2431, 448, 447,
	0, 449, 716, 1305, 450, 451, 1306, 0, 452, 453,
	454, 455, 456, 457, 460, 0, 0, 458, 459, 461,
	462, 0, 463, 464, 466, 469, 465, 467, 468, 470,
	483, 484, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 486, 0, 485, 1307, 487, 488,
	489, 490, 491, 498, 500, 501, 496, 497, 499, 502,
	503, 505, 493, 494, 495, 1308, 504, 492, 0, 0,
	1309, 506, 507, 508, 509, 0, 717, 510, 718, 513,
	514, 0, 0, 515, 0, 516, 0, 0, 518, 519,
	520, 0, 0, 521, 522, 719, 1310, 523, 1311, 720,
	524, 525, 517, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 0, 535, 536, 721, 537, 538, 539, 722,
	540, 541, 542, 723, 543, 724, 544, 545, 0, 546,
	547, 548, 0, 549, 550, 551, 552, 553, 554, 555,
	556, 725, 557, 558, 560, 559, 561, 0, 562, 0,
	563, 564, 565, 0, 0, 0, 0, 0, 566, 567,
	569, 0, 570, 571, 572, 573, 568, 574, 575, 576,
	577, 578, 579, 0, 580, 581, 582, 1312, 583, 584,
	585, 586, 587, 726, 588, 0, 589, 590, 597, 598,
	599, 591, 592, 593, 600, 601, 602, 603, 604, 0,
	606, 607, 605, 608, 609, 610, 0, 611, 612, 594,
	595, 613, 614, 1313, 615, 616, 617, 618, 619, 620,
	621, 727, 0, 622, 0, 623, 624, 625, 626, 627,
	629, 596, 630, 635, 636, 728, 631, 632, 633, 634,
	729, 638, 639, 640, 0, 641, 642, 0, 637, 628,
	0, 643, 644, 645, 646, 647, 648, 0, 649, 650,
	0, 651, 730, 731, 732, 733, 0, 662, 0, 652,
	654, 655, 656, 734, 657, 735, 0, 658, 659, 660,
	661, 653, 663, 664, 0, 0, 665, 666, 668, 670,
	671, 667, 669, 672, 0, 673, 0, 0, 674, 675,
	676, 736, 737, 738, 0, 678, 677, 679, 680, 681,
	739, 682, 683, 0, 0, 0, 0, 684, 685, 740,
	686, 687, 688, 1638, 1637, 0, 0, 0, 0, 1635,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	297, 298, 300, 299, 301, 302, 303, 304, 0, 305,
	306, 0, 0, 0, 0, 1785, 689, 0, 0, 0,
	307, 0, 308, 309, 1297, 310, 311, 312, 313, 314,
	315, 316, 690, 691, 0, 317, 692, 318, 693, 0,
	694, 319, 320, 321, 322, 323, 324, 0, 0, 0,
	325, 695, 696, 697, 0, 326, 327, 698, 0, 1602,
	0, 328, 329, 330, 331, 332, 333, 334, 335, 0,
	0, 337, 338, 339, 336, 340, 0, 341, 0, 342,
	343, 344, 345, 346, 347, 0, 348, 349, 350, 1298,
	351, 352, 353, 0, 0, 0, 0, 0, 0, 0,
	354, 355, 356, 357, 358, 0, 359, 361, 699, 700,
	0, 364, 360, 362, 0, 365, 363, 366, 0, 367,
	368, 369, 0, 0, 370, 371, 372, 0, 373, 374,
	375, 0, 376, 377, 378, 0, 379, 380, 701, 381,
	382, 383, 385, 387, 384, 386, 388, 389, 390, 391,
	702, 703, 392, 0, 294, 0, 0, 0, 0, 0,
	393, 394, 395, 704, 0, 0, 0, 396, 0, 397,
	398, 399, 0, 400, 401, 0, 1299, 402, 403, 404,
	705, 706, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 0, 414, 707, 0, 708, 415, 0, 416, 417,
	418, 419, 420, 421, 422, 709, 710, 711, 511, 1301,
	423, 424, 0, 425, 426, 427, 428, 429, 0, 0,
	0, 0, 430, 431, 432, 0, 1300, 512, 433, 712,
	713, 0, 714, 0, 434, 435, 1302, 715, 1303, 436,
	437, 438, 1304, 439, 0, 0, 0, 440, 441, 442,
	443, 444, 445, 0, 446, 448, 447, 0, 449, 716,
	1305, 450, 451, 1306, 0, 452, 453, 454, 455, 456,
	457, 460, 0, 0, 458, 459, 461, 462, 0, 463,
	464, 466, 469, 465, 467, 468, 470, 483, 484, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 486, 0, 485, 1307, 487, 488, 489, 490, 491,
	498, 500, 501, 496, 497, 499, 502, 503, 505, 493,
	494, 495, 1308, 504, 492, 0, 0, 1309, 506, 507,
	508, 509, 0, 717, 510, 718, 513, 514, 0, 0,
	515, 0, 516, 0, 0, 518, 519, 520, 0, 0,
	521, 522, 719, 1310, 523, 1311, 720, 524, 525, 517,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 0,
	535, 536, 721, 537, 538, 539, 722, 540, 541, 542,
	723, 543, 724, 544, 545, 0, 546, 547, 548, 0,
	549, 550, 551, 552, 553, 554, 555, 556, 725, 557,
	558, 560, 559, 561, 0, 562, 0, 563, 564, 565,
	0, 0, 0, 0, 0, 566, 567, 569, 0, 570,
	571, 572, 573, 568, 574, 575, 576, 577, 578, 579,
	0, 580, 581, 582, 1312, 583, 584, 585, 586, 587,
	726, 588, 0, 589, 590, 597, 598, 599, 591, 592,
	593, 600, 601, 602, 603, 604, 0, 606, 607, 605,
	608, 609, 610, 0, 611, 612, 594, 595, 613, 614,
	1313, 615, 616, 617, 618, 619, 620, 621, 727, 0,
	622, 0, 623, 624, 625, 626, 627, 629, 596, 630,
	635, 636, 728, 631, 632, 633, 634, 729, 638, 639,
	640, 0, 641, 642, 0, 637, 628, 0, 643, 644,
	645, 646, 647, 648, 0, 649, 650, 0, 651, 730,
	731, 732, 733, 0, 662, 0, 652, 654, 655, 656,
	734, 657, 735, 0, 658, 659, 660, 661, 653, 663,
	664, 0, 0, 665, 666, 668, 670, 671, 667, 669,
	672, 0, 673, 0, 0, 674, 675, 676, 736, 737,
	738, 0, 678, 677, 679, 680, 681, 739, 682, 683,
	0, 0, 0, 0, 684, 685, 740, 686, 687, 688,
	1175, 0, 291, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 297,
	298, 300, 299, 301, 302, 303, 304, 0, 305, 306,
	0, 0, 1767, 0, 0, 689, 0, 0, 0, 307,
	0, 308, 309, 0, 310, 311, 312, 313, 314, 315,
	316, 690, 691, 0, 317, 692, 318, 693, 0, 694,
	319, 320, 321, 322, 323, 324, 0, 0, 0, 325,
	695, 696, 697, 0, 326, 327, 698, 0, 0, 0,
	328, 329, 330, 331, 332, 333, 334, 335, 0, 0,
	337, 338, 339, 336, 340, 0, 341, 0, 342, 343,
	344, 345, 346, 347, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 0, 0, 0, 0, 0, 0, 354,
	355, 356, 357, 358, 0, 359, 361, 699, 700, 0,
	364, 360, 362, 0, 365, 363, 366, 0, 367, 368,
	369, 0, 0, 370, 371, 372, 0, 373, 374, 375,
	0, 376, 377, 378, 0, 379, 380, 701, 381, 382,
	383, 385, 387, 384, 386, 388, 389, 390, 391, 702,
	703, 392, 0, 0, 0, 0, 0, 0, 0, 393,
	394, 395, 704, 0, 0, 0, 396, 0, 397, 398,
	399, 0, 400, 401, 0, 0, 402, 403, 404, 705,
	706, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	0, 414, 707, 0, 708, 415, 0, 416, 417, 418,
	419, 420, 421, 422, 709, 710, 711, 511, 0, 423,
	424, 0, 425, 426, 427, 428, 429, 0, 0, 0,
	0, 430, 431, 432, 0, 0, 512, 433, 712, 713,
	0, 714, 0, 434, 435, 0, 715, 0, 436, 437,
	438, 0, 439, 0, 0, 0, 440, 441, 442, 443,
	444, 445, 0, 446, 448, 447, 0, 449, 716, 0,
	450, 451, 0, 0, 452, 453, 454, 455, 456, 457,
	460, 0, 0, 458, 459, 461, 462, 0, 463, 464,
	466, 469, 465, 467, 468, 470, 483, 484, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	486, 0, 485, 0, 487, 488, 489, 490, 491, 498,
	500, 501, 496, 497, 499, 502, 503, 505, 493, 494,
	495, 0, 504, 492, 0, 0, 0, 506, 507, 508,
	509, 0, 717, 510, 718, 513, 514, 0, 0, 515,
	0, 516, 0, 0, 518, 519, 520, 0, 0, 521,
	522, 719, 0, 523, 0, 720, 524, 525, 517, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 0, 535,
	536, 721, 537, 538, 539, 722, 540, 541, 542, 723,
	543, 724, 544, 545, 0, 546, 547, 548, 0, 549,
	550, 551, 552, 553, 554, 555, 556, 725, 557, 558,
	560, 559, 561, 0, 562, 0, 563, 564, 565, 0,
	0, 0, 0, 0, 566, 567, 569, 0, 570, 571,
	572, 573, 568, 574, 575, 576, 577, 578, 579, 0,
	580, 581, 582, 0, 583, 584, 585, 586, 587, 726,
	588, 0, 589, 590, 597, 598, 599, 591, 592, 593,
	600, 601, 602, 603, 604, 252, 606, 607, 605, 608,
	609, 610, 0, 611, 612, 594, 595, 613, 614, 0,
	615, 616, 617, 618, 619, 620, 621, 727, 0, 622,
	0, 623, 624, 625, 626, 627, 629, 596, 630, 635,
	636, 728, 631, 632, 633, 634, 729, 638, 639, 640,
	0, 641, 642, 0, 637, 628, 254, 643, 644, 645,
	646, 647, 648, 0, 649, 650, 0, 651, 730, 731,
	732, 733, 0, 662, 0, 652, 654, 655, 656, 734,
	657, 735, 0, 658, 659, 660, 661, 653, 663, 664,
	0, 0, 665, 666, 668, 670, 671, 667, 669, 672,
	0, 673, 0, 0, 674, 675, 676, 1761, 737, 738,
	0, 678, 677, 679, 680, 681, 739, 682, 683, 0,
	291, 0, 246, 684, 685, 740, 686, 687, 688, 0,
	0, 247, 0, 0, 0, 0, 0, 297, 298, 300,
	299, 301, 302, 303, 304, 0, 305, 306, 0, 0,
	0, 0, 0, 689, 0, 0, 0, 307, 0, 308,
	309, 202, 310, 311, 312, 313, 314, 315, 316, 690,
	691, 0, 317, 692, 318, 693, 0, 694, 319, 320,
	321, 322, 323, 324, 0, 0, 0, 325, 695, 696,
	697, 0, 326, 327, 698, 0, 0, 0, 328, 329,
	330, 331, 332, 333, 334, 335, 0, 0, 337, 338,
	339, 336, 340, 0, 341, 0, 342, 343, 344, 345,
	346, 347, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 0, 0, 0, 0, 0, 0, 354, 355, 356,
	357, 358, 0, 359, 361, 699, 700, 0, 364, 360,
	362, 0, 365, 363, 366, 0, 367, 368, 369, 0,
	0, 370, 371, 372, 0, 373, 374, 375, 0, 376,
	377, 378, 0, 379, 380, 701, 381, 382, 383, 385,
	387, 384, 386, 388, 389, 390, 391, 702, 703, 392,
	0, 294, 0, 0, 0, 0, 0, 393, 394, 395,
	704, 0, 0, 0, 396, 0, 397, 398, 399, 0,
	400, 401, 0, 0, 402, 403, 404, 705, 706, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 0, 414,
	707, 0, 708, 415, 0, 416, 417, 418, 419, 420,
	421, 422, 709, 710, 711, 511, 0, 423, 424, 0,
	425, 426, 427, 428, 429, 0, 0, 0, 295, 430,
	431, 432, 0, 0, 512, 433, 712, 713, 0, 714,
	0, 434, 435, 0, 715, 0, 436, 437, 438, 0,
	439, 0, 0, 0, 440, 441, 442, 443, 444, 445,
	0, 446, 448, 447, 0, 449, 716, 0, 450, 451,
	0, 0, 452, 453, 454, 455, 456, 457, 460, 0,
	0, 458, 459, 461, 462, 0, 463, 464, 466, 469,
	465, 467, 468, 470, 483, 484, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 486, 0,
	485, 0, 487, 488, 489, 490, 491, 498, 500, 501,
	496, 497, 499, 502, 503, 505, 493, 494, 495, 0,
	504, 492, 0, 296, 0, 506, 507, 508, 509, 0,
	717, 510, 718, 513, 514, 0, 0, 515, 0, 516,
	0, 0, 518, 519, 520, 0, 0, 521, 522, 719,
	0, 523, 0, 720, 524, 525, 517, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 0, 535, 536, 721,
	537, 538, 539, 722, 540, 541, 542, 723, 543, 724,
	544, 545, 0, 546, 547, 548, 0, 549, 550, 551,
	552, 553, 554, 555, 556, 725, 557, 558, 560, 559,
	561, 0, 562, 0, 563, 564, 565, 0, 0, 0,
	0, 0, 566, 567, 569, 0, 570, 571, 572, 573,
	568, 574, 575, 576, 577, 578, 579, 0, 580, 581,
	582, 0, 583, 584, 585, 586, 587, 726, 588, 0,
	589, 590, 597, 598, 599, 591, 592, 593, 600, 601,
	602, 603, 604, 0, 606, 607, 605, 608, 609, 610,
	0, 611, 612, 594, 595, 613, 614, 0, 615, 616,
	617, 618, 619, 620, 621, 727, 0, 622, 0, 623,
	624, 625, 626, 627, 629, 596, 630, 635, 636, 728,
	631, 632, 633, 634, 729, 638, 639, 640, 0, 641,
	642, 0, 637, 628, 0, 643, 644, 645, 646, 647,
	648, 0, 649, 650, 0, 651, 730, 731, 732, 733,
	0, 662, 0, 652, 654, 655, 656, 734, 657, 735,
	0, 658, 659, 660, 661, 653, 663, 664, 0, 0,
	665, 666, 668, 670, 671, 667, 669, 672, 0, 673,
	0, 0, 674, 675, 676, 736, 737, 738, 0, 678,
	677, 679, 680, 681, 739, 682, 683, 0, 291, 3202,
	0, 684, 685, 740, 686, 687, 688, 0, 0, 0,
	0, 0, 0, 0, 0, 297, 298, 300, 299, 301,
	302, 303, 304, 0, 305, 306, 0, 0, 0, 0,
	0, 689, 0, 0, 0, 307, 0, 308, 309, 2139,
	310, 311, 312, 313, 314, 315, 316, 690, 691, 0,
	317, 692, 318, 693, 0, 694, 319, 320, 321, 322,
	323, 324, 0, 0, 0, 325, 695, 696, 697, 0,
	326, 327, 698, 0, 0, 0, 328, 329, 330, 331,
	332, 333, 334, 335, 0, 0, 337, 338, 339, 336,
	340, 0, 341, 0, 342, 343, 344, 345, 346, 347,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 0,
	0, 0, 0, 0, 0, 354, 355, 356, 357, 358,
	0, 359, 361, 699, 700, 0, 364, 360, 362, 0,
	365, 363, 366, 0, 367, 368, 369, 0, 0, 370,
	371, 372, 0, 373, 374, 375, 0, 376, 377, 378,
	0, 379, 380, 701, 381, 382, 383, 385, 387, 384,
	386, 388, 389, 390, 391, 702, 703, 392, 0, 0,
	0, 0, 0, 0, 0, 393, 394, 395, 704, 0,
	0, 0, 396, 0, 397, 398, 399, 0, 400, 401,
	0, 0, 402, 403, 404, 705, 706, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 0, 414, 707, 0,
	708, 415, 0, 416, 417, 418, 419, 420, 421, 422,
	709, 710, 711, 511, 0, 423, 424, 0, 425, 426,
	427, 428, 429, 0, 0, 0, 0, 430, 431, 432,
	0, 0, 512, 433, 712, 713, 0, 714, 0, 434,
	435, 0, 715, 0, 436, 437, 438, 0, 439, 0,
	0, 0, 440, 441, 442, 443, 444, 445, 0, 446,
	448, 447, 0, 449, 716, 0, 450, 451, 0, 0,
	452, 453, 454, 455, 456, 457, 460, 0, 0, 458,
	459, 461, 462, 0, 463, 464, 466, 469, 465, 467,
	468, 470, 483, 484, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 486, 0, 485, 0,
	487, 488, 489, 490, 491, 498, 500, 501, 496, 497,
	499, 502, 503, 505, 493, 494, 495, 0, 504, 492,
	0, 0, 0, 506, 507, 508, 509, 0, 717, 510,
	718, 513, 514, 0, 0, 515, 0, 516, 0, 0,
	518, 519, 520, 0, 0, 521, 522, 719, 0, 523,
	0, 720, 524, 525, 517, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 0, 535, 536, 721, 537, 538,
	539, 722, 540, 541, 542, 723, 543, 724, 544, 545,
	0, 546, 547, 548, 0, 549, 550, 551, 552, 553,
	554, 555, 556, 725, 557, 558, 560, 559, 561, 0,
	562, 0, 563, 564, 565, 0, 0, 0, 0, 0,
	566, 567, 569, 0, 570, 571, 572, 573, 568, 574,
	575, 576, 577, 578, 579, 0, 580, 581, 582, 0,
	583, 584, 585, 586, 587, 726, 588, 0, 589, 590,
	597, 598, 599, 591, 592, 593, 600, 601, 602, 603,
	604, 0, 606, 607, 605, 608, 609, 610, 0, 611,
	612, 594, 595, 613, 614, 0, 615, 616, 617, 618,
	619, 620, 621, 727, 0, 622, 0, 623, 624, 625,
	626, 627, 629, 596, 630, 635, 636, 728, 631, 632,
	633, 634, 729, 638, 639, 640, 0, 641, 642, 0,
	637, 628, 0, 643, 644, 645, 646, 647, 648, 0,
	649, 650, 0, 651, 730, 731, 732, 733, 0, 662,
	0, 652, 654, 655, 656, 734, 657, 735, 0, 658,
	659, 660, 661, 653, 663, 664, 0, 0, 665, 666,
	668, 670, 671, 667, 669, 672, 0, 673, 0, 0,
	674, 675, 676, 736, 737, 738, 0, 678, 677, 679,
	680, 681, 739, 682, 683, 0, 291, 0, 0, 684,
	685, 740, 686, 687, 688, 0, 0, 0, 0, 0,
	0, 0, 0, 297, 298, 300, 299, 301, 302, 303,
	304, 0, 305, 306, 0, 0, 0, 0, 0, 689,
	0, 0, 0, 307, 0, 308, 309, 5297, 310, 311,
	312, 313, 314, 315, 316, 690, 691, 0, 317, 692,
	318, 693, 0, 694, 319, 320, 321, 322, 323, 324,
	0, 0, 0, 325, 695, 696, 697, 0, 326, 327,
	698, 0, 0, 0, 328, 329, 330, 331, 332, 333,
	334, 335, 0, 0, 337, 338, 339, 336, 340, 0,
	341, 0, 342, 343, 344, 345, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 0, 0, 0,
	0, 0, 0, 354, 355, 356, 357, 358, 0, 359,
	361, 699, 700, 0, 364, 360, 362, 0, 365, 363,
	366, 0, 367, 368, 369, 0, 0, 370, 371, 372,
	0, 373, 374, 375, 0, 376, 377, 378, 0, 379,
	380, 701, 381, 382, 383, 385, 387, 384, 386, 388,
	389, 390, 391, 702, 703, 392, 0, 294, 0, 0,
	0, 0, 0, 393, 394, 395, 704, 0, 0, 0,
	396, 0, 397, 398, 399, 0, 400, 401, 0, 0,
	402, 403, 404, 705, 706, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 0, 414, 707, 0, 708, 415,
	0, 416, 417, 418, 419, 420, 421, 422, 709, 710,
	711, 511, 0, 423, 424, 0, 425, 426, 427, 428,
	429, 0, 0, 0, 295, 430, 431, 432, 0, 0,
	512, 433, 712, 713, 0, 714, 0, 434, 435, 0,
	715, 0, 436, 437, 438, 0, 439, 0, 0, 0,
	440, 441, 442, 443, 444, 445, 0, 446, 448, 447,
	0, 449, 716, 0, 450, 451, 0, 0, 452, 453,
	454, 455, 456, 457, 460, 0, 0, 458, 459, 461,
	462, 0, 463, 464, 466, 469, 465, 467, 468, 470,
	483, 484, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 486, 0, 485, 0, 487, 488,
	489, 490, 491, 498, 500, 501, 496, 497, 499, 502,
	503, 505, 493, 494, 495, 0, 504, 492, 0, 296,
	0, 506, 507, 508, 509, 0, 717, 510, 718, 513,
	514, 0, 0, 515, 0, 516, 0, 0, 518, 519,
	520, 0, 0, 521, 522, 719, 0, 523, 0, 720,
	524, 525, 517, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 0, 535, 536, 721, 537, 538, 539, 722,
	540, 541, 542, 723, 543, 724, 544, 545, 0, 546,
	547, 548, 0, 549, 550, 551, 552, 553, 554, 555,
	556, 725, 557, 558, 560, 559, 561, 0, 562, 0,
	563, 564, 565, 0, 0, 0, 0, 0, 566, 567,
	569, 0, 570, 571, 572, 573, 568, 574, 575, 576,
	577, 578, 579, 0, 580, 581, 582, 0, 583, 584,
	585, 586, 587, 726, 588, 0, 589, 590, 597, 598,
	599, 591, 592, 593, 600, 601, 602, 603, 604, 0,
	606, 607, 605, 608, 609, 610, 0, 611, 612, 594,
	595, 613, 614, 0, 615, 616, 617, 618, 619, 620,
	621, 727, 0, 622, 0, 623, 624, 625, 626, 627,
	629, 596, 630, 635, 636, 728, 631, 632, 633, 634,
	729, 638, 639, 640, 0, 641, 642, 0, 637, 628,
	0, 643, 644, 645, 646, 647, 648, 0, 649, 650,
	0, 651, 730, 731, 732, 733, 0, 662, 0, 652,
	654, 655, 656, 734, 657, 735, 0, 658, 659, 660,
	661, 653, 663, 664, 0, 0, 665, 666, 668, 670,
	671, 667, 669, 672, 0, 673, 0, 0, 674, 675,
	676, 736, 737, 738, 0, 678, 677, 679, 680, 681,
	739, 682, 683, 0, 0, 291, 0, 684, 685, 740,
	686, 687, 688, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 297, 298, 300, 299, 301, 302, 303, 304,
	0, 305, 306, 0, 0, 0, 0, 0, 689, 0,
	0, 0, 307, 3882, 308, 309, 0, 310, 311, 312,
	313, 314, 315, 316, 690, 691, 0, 317, 692, 318,
	693, 0, 694, 319, 320, 321, 322, 323, 324, 0,
	0, 0, 325, 695, 696, 697, 0, 326, 327, 698,
	0, 0, 0, 328, 329, 330, 331, 332, 333, 334,
	335, 0, 0, 337, 338, 339, 336, 340, 0, 341,
	0, 342, 343, 344, 345, 346, 347, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 0, 0, 0, 0,
	0, 0, 354, 355, 356, 357, 358, 0, 359, 361,
	699, 700, 0, 364, 360, 362, 0, 365, 363, 366,
	0, 367, 368, 369, 0, 0, 370, 371, 372, 0,
	373, 374, 375, 0, 376, 377, 378, 0, 379, 380,
	701, 381, 382, 383, 385, 387, 384, 386, 388, 389,
	390, 391, 702, 703, 392, 0, 294, 0, 0, 0,
	0, 0, 393, 394, 395, 704, 0, 0, 0, 396,
	0, 397, 398, 399, 0, 400, 401, 0, 0, 402,
	403, 404, 705, 706, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 0, 414, 707, 0, 708, 415, 0,
	416, 417, 418, 419, 420, 421, 422, 709, 710, 711,
	511, 0, 423, 424, 0, 425, 426, 427, 428, 429,
	0, 0, 0, 295, 430, 431, 432, 0, 0, 512,
	433, 712, 713, 0, 714, 0, 434, 435, 0, 715,
	0, 436, 437, 438, 0, 439, 0, 0, 0, 440,
	441, 442, 443, 444, 445, 0, 446, 448, 447, 0,
	449, 716, 0, 450, 451, 0, 0, 452, 453, 454,
	455, 456, 457, 460, 0, 0, 458, 459, 461, 462,
	0, 463, 464, 466, 469, 465, 467, 468, 470, 483,
	484, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 486, 0, 485, 0, 487, 488, 489,
	490, 491, 498, 500, 501, 496, 497, 499, 502, 503,
	505, 493, 494, 495, 0, 504, 492, 0, 296, 0,
	506, 507, 508, 509, 0, 717, 510, 718, 513, 514,
	0, 0, 515, 0, 516, 0, 0, 518, 519, 520,
	0, 0, 521, 522, 719, 0, 523, 0, 720, 524,
	525, 517, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 0, 535, 536, 721, 537, 538, 539, 722, 540,
	541, 542, 723, 543, 724, 544, 545, 0, 546, 547,
	548, 0, 549, 550, 551, 552, 553, 554, 555, 556,
	725, 557, 558, 560, 559, 561, 0, 562, 0, 563,
	564, 565, 0, 0, 0, 0, 0, 566, 567, 569,
	0, 570, 571, 572, 573, 568, 574, 575, 576, 577,
	578, 579, 0, 580, 581, 582, 0, 583, 584, 585,
	586, 587, 726, 588, 0, 589, 590, 597, 598, 599,
	591, 592, 593, 600, 601, 602, 603, 604, 0, 606,
	607, 605, 608, 609, 610, 0, 611, 612, 594, 595,
	613, 614, 0, 615, 616, 617, 618, 619, 620, 621,
	727, 0, 622, 0, 623, 624, 625, 626, 627, 629,
	596, 630, 635, 636, 728, 631, 632, 633, 634, 729,
	638, 639, 640, 0, 641, 642, 0, 637, 628, 0,
	643, 644, 645, 646, 647, 648, 0, 649, 650, 0,
	651, 730, 731, 732, 733, 0, 662, 0, 652, 654,
	655, 656, 734, 657, 735, 0, 658, 659, 660, 661,
	653, 663, 664, 0, 0, 665, 666, 668, 670, 671,
	667, 669, 672, 0, 673, 0, 0, 674, 675, 676,
	736, 737, 738, 0, 678, 677, 679, 680, 681, 739,
	682, 683, 0, 0, 291, 0, 684, 685, 740, 686,
	687, 688, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 298, 300, 299, 301, 302, 303, 304, 0,
	305, 306, 0, 0, 0, 0, 0, 689, 0, 0,
	0, 307, 1755, 308, 309, 0, 310, 311, 312, 313,
	314, 315, 316, 690, 691, 0, 317, 692, 318, 693,
	0, 694, 319, 320, 321, 322, 323, 324, 0, 0,
	0, 325, 695, 696, 697, 0, 326, 327, 698, 0,
	0, 0, 328, 329, 330, 331, 332, 333, 334, 335,
	0, 0, 337, 338, 339, 336, 340, 0, 341, 0,
	342, 343, 344, 345, 346, 347, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 0, 0, 0, 0, 0,
	0, 354, 355, 356, 357, 358, 0, 359, 361, 699,
	700, 0, 364, 360, 362, 0, 365, 363, 366, 0,
	367, 368, 369, 0, 0, 370, 371, 372, 0, 373,
	374, 375, 0, 376, 377, 378, 0, 379, 380, 701,
	381, 382, 383, 385, 387, 384, 386, 388, 389, 390,
	391, 702, 703, 392, 0, 0, 0, 0, 0, 0,
	0, 393, 394, 395, 704, 0, 0, 0, 396, 0,
	397, 398, 399, 0, 400, 401, 0, 0, 402, 403,
	404, 705, 706, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 0, 414, 707, 0, 708, 415, 0, 416,
	417, 418, 419, 420, 421, 422, 709, 710, 711, 511,
	0, 423, 424, 0, 425, 426, 427, 428, 429, 0,
	0, 0, 0, 430, 431, 432, 0, 0, 512, 433,
	712, 713, 0, 714, 0, 434, 435, 0, 715, 0,
	436, 437, 438, 0, 439, 0, 0, 0, 440, 441,
	442, 443, 444, 445, 0, 446, 448, 447, 0, 449,
	716, 0, 450, 451, 0, 0, 452, 453, 454, 455,
	456, 457, 460, 0, 0, 458, 459, 461, 462, 0,
	463, 464, 466, 469, 465, 467, 468, 470, 483, 484,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 486, 0, 485, 0, 487, 488, 489, 490,
	491, 498, 500, 501, 496, 497, 499, 502, 503, 505,
	493, 494, 495, 0, 504, 492, 0, 0, 0, 506,
	507, 508, 509, 0, 717, 510, 718, 513, 514, 0,
	0, 515, 0, 516, 0, 0, 518, 519, 520, 0,
	0, 521, 522, 719, 0, 523, 0, 720, 524, 525,
	517, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	0, 535, 536, 721, 537, 538, 539, 722, 540, 541,
	542, 723, 543, 724, 544, 545, 0, 546, 547, 548,
	0, 549, 550, 551, 552, 553, 554, 555, 556, 725,
	557, 558, 560, 559, 561, 0, 562, 0, 563, 564,
	565, 0, 0, 0, 0, 0, 566, 567, 569, 0,
	570, 571, 572, 573, 568, 574, 575, 576, 577, 578,
	579, 0, 580, 581, 582, 0, 583, 584, 585, 586,
	587, 726, 588, 0, 589, 590, 597, 598, 599, 591,
	592, 593, 600, 601, 602, 603, 604, 0, 606, 607,
	605, 608, 609, 610, 0, 611, 612, 594, 595, 613,
	614, 0, 615, 616, 617, 618, 619, 620, 621, 727,
	0, 622, 0, 623, 624, 625, 626, 627, 629, 596,
	630, 635, 636, 728, 631, 632, 633, 634, 729, 638,
	639, 640, 0, 641, 642, 0, 637, 628, 0, 643,
	644, 645, 646, 647, 648, 0, 649, 650, 0, 651,
	730, 731, 732, 733, 0, 662, 0, 652, 654, 655,
	656, 734, 657, 735, 0, 658, 659, 660, 661, 653,
	663, 664, 0, 0, 665, 666, 668, 670, 671, 667,
	669, 672, 0, 673, 0, 0, 674, 675, 676, 736,
	737, 738, 0, 678, 677, 679, 680, 681, 739, 682,
	683, 0, 291, 0, 0, 684, 685, 740, 686, 687,
	688, 0, 0, 0, 0, 0, 0, 0, 0, 297,
	298, 300, 299, 301, 302, 303, 304, 0, 305, 306,
	0, 0, 0, 0, 0, 689, 0, 0, 0, 307,
	0, 308, 309, 3323, 310, 311, 312, 313, 314, 315,
	316, 690, 691, 0, 317, 692, 318, 693, 0, 694,
	319, 320, 321, 322, 323, 324, 0, 0, 0, 325,
	695, 696, 697, 0, 326, 327, 698, 0, 0, 0,
	328, 329, 330, 331, 332, 333, 334, 335, 0, 0,
	337, 338, 339, 336, 340, 0, 341, 0, 342, 343,
	344, 345, 346, 347, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 0, 0, 0, 0, 0, 0, 354,
	355, 356, 357, 358, 0, 359, 361, 699, 700, 0,
	364, 360, 362, 0, 365, 363, 366, 0, 367, 368,
	369, 0, 0, 370, 371, 372, 0, 373, 374, 375,
	0, 376, 377, 378, 0, 379, 380, 701, 381, 382,
	383, 385, 387, 384, 386, 388, 389, 390, 391, 702,
	703, 392, 0, 0, 0, 0, 0, 0, 0, 393,
	394, 395, 704, 0, 0, 0, 396, 0, 397, 398,
	399, 0, 400, 401, 0, 0, 402, 403, 404, 705,
	706, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	0, 414, 707, 0, 708, 415, 0, 416, 417, 418,
	419, 420, 421, 422, 709, 710, 711, 511, 0, 423,
	424, 0, 425, 426, 427, 428, 429, 0, 0, 0,
	0, 430, 431, 432, 0, 0, 512, 433, 712, 713,
	0, 714, 0, 434, 435, 0, 715, 0, 436, 437,
	438, 0, 439, 0, 0, 0, 440, 441, 442, 443,
	444, 445, 0, 446, 448, 447, 0, 449, 716, 0,
	450, 451, 0, 0, 452, 453, 454, 455, 456, 457,
	460, 0, 0, 458, 459, 461, 462, 0, 463, 464,
	466, 469, 465, 467, 468, 470, 483, 484, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	486, 0, 485, 0, 487, 488, 489, 490, 491, 498,
	500, 501, 496, 497, 499, 502, 503, 505, 493, 494,
	495, 0, 504, 492, 0, 0, 0, 506, 507, 508,
	509, 0, 717, 510, 718, 513, 514, 0, 0, 515,
	0, 516, 0, 0, 518, 519, 520, 0, 0, 521,
	522, 719, 0, 523, 0, 720, 524, 525, 517, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 0, 535,
	536, 721, 537, 538, 539, 722, 540, 541, 542, 723,
	543, 724, 544, 545, 0, 546, 547, 548, 0, 549,
	550, 551, 552, 553, 554, 555, 556, 725, 557, 558,
	560, 559, 561, 0, 562, 0, 563, 564, 565, 0,
	0, 0, 0, 0, 566, 567, 569, 0, 570, 571,
	572, 573, 568, 574, 575, 576, 577, 578, 579, 0,
	580, 581, 582, 0, 583, 584, 585, 586, 587, 726,
	588, 0, 589, 590, 597, 598, 599, 591, 592, 593,
	600, 601, 602, 603, 604, 0, 606, 607, 605, 608,
	609, 610, 0, 611, 612, 594, 595, 613, 614, 0,
	615, 616, 617, 618, 619, 620, 621, 727, 0, 622,
	0, 623, 624, 625, 626, 627, 629, 596, 630, 635,
	636, 728, 631, 632, 633, 634, 729, 638, 639, 640,
	0, 641, 642, 0, 637, 628, 0, 643, 644, 645,
	646, 647, 648, 0, 649, 650, 0, 651, 730, 731,
	732, 733, 0, 662, 0, 652, 654, 655, 656, 734,
	657, 735, 0, 658, 659, 660, 661, 653, 663, 664,
	0, 0, 665, 666, 668, 670, 671, 667, 669, 672,
	0, 673, 0, 0, 674, 675, 676, 736, 737, 738,
	0, 678, 677, 679, 680, 681, 739, 682, 683, 0,
	291, 0, 0, 684, 685, 740, 686, 687, 688, 0,
	0, 0, 0, 0, 0, 0, 0, 297, 298, 300,
	299, 301, 302, 303, 304, 0, 305, 306, 0, 0,
	0, 0, 0, 689, 0, 0, 0, 307, 0, 308,
	309, 4046, 310, 311, 312, 313, 314, 315, 316, 690,
	691, 0, 317, 692, 318, 693, 0, 694, 319, 320,
	321, 322, 323, 324, 0, 0, 0, 325, 695, 696,
	697, 0, 326, 327, 698, 0, 0, 0, 328, 329,
	330, 331, 332, 333, 334, 335, 0, 0, 337, 338,
	339, 336, 340, 0, 341, 0, 342, 343, 344, 345,
	346, 347, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 0, 0, 0, 0, 0, 0, 354, 355, 356,
	357, 358, 0, 359, 361, 699, 700, 0, 364, 360,
	362, 0, 365, 363, 366, 0, 367, 368, 369, 0,
	0, 370, 371, 372, 0, 373, 374, 375, 0, 376,
	377, 378, 0, 379, 380, 701, 381, 382, 383, 385,
	387, 384, 386, 388, 389, 390, 391, 702, 703, 392,
	0, 0, 0, 0, 0, 0, 0, 393, 394, 395,
	704, 0, 0, 0, 396, 0, 397, 398, 399, 0,
	400, 401, 0, 0, 402, 403, 404, 705, 706, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 0, 414,
	707, 0, 708, 415, 0, 416, 417, 418, 419, 420,
	421, 422, 709, 710, 711, 511, 0, 423, 424, 0,
	425, 426, 427, 428, 429, 0, 0, 0, 0, 430,
	431, 432, 0, 0, 512, 433, 712, 713, 0, 714,
	0, 434, 435, 0, 715, 0, 436, 437, 438, 0,
	439, 0, 0, 0, 440, 441, 442, 443, 444, 445,
	0, 446, 448, 447, 0, 449, 716, 0, 450, 451,
	0, 0, 452, 453, 454, 455, 456, 457, 460, 0,
	0, 458, 459, 461, 462, 0, 463, 464, 466, 469,
	465, 467, 468, 470, 483, 484, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 486, 0,
	485, 0, 487, 488, 489, 490, 491, 498, 500, 501,
	496, 497, 499, 502, 503, 505, 493, 494, 495, 0,
	504, 492, 0, 0, 0, 506, 507, 508, 509, 0,
	717, 510, 718, 513, 514, 0, 0, 515, 0, 516,
	0, 0, 518, 519, 520, 0, 0, 521, 522, 719,
	0, 523, 0, 720, 524, 525, 517, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 0, 535, 536, 721,
	537, 538, 539, 722, 540, 541, 542, 723, 543, 724,
	544, 545, 0, 546, 547, 548, 0, 549, 550, 551,
	552, 553, 554, 555, 556, 725, 557, 558, 560, 559,
	561, 0, 562, 0, 563, 564, 565, 0, 0, 0,
	0, 0, 566, 567, 569, 0, 570, 571, 572, 573,
	568, 574, 575, 576, 577, 578, 579, 0, 580, 581,
	582, 0, 583, 584, 585, 586, 587, 726, 588, 0,
	589, 590, 597, 598, 599, 591, 592, 593, 600, 601,
	602, 603, 604, 0, 606, 607, 605, 608, 609, 610,
	0, 611, 612, 594, 595, 613, 614, 0, 615, 616,
	617, 618, 619, 620, 621, 727, 0, 622, 0, 623,
	624, 625, 626, 627, 629, 596, 630, 635, 636, 728,
	631, 632, 633, 634, 729, 638, 639, 640, 0, 641,
	642, 0, 637, 628, 0, 643, 644, 645, 646, 647,
	648, 0, 649, 650, 0, 651, 730, 731, 732, 733,
	0, 662, 0, 652, 654, 655, 656, 734, 657, 735,
	0, 658, 659, 660, 661, 653, 663, 664, 0, 0,
	665, 666, 668, 670, 671, 667, 669, 672, 0, 673,
	0, 0, 674, 675, 676, 736, 737, 738, 0, 678,
	677, 679, 680, 681, 739, 682, 683, 0, 0, 0,
	0, 684, 685, 740, 686, 687, 688, 1356, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 297, 298, 300, 299, 301, 302,
	303, 304, 0, 305, 306, 0, 0, 0, 0, 2509,
	1257, 0, 0, 0, 307, 0, 308, 309, 1297, 310,
	311, 312, 313, 314, 315, 316, 690, 691, 0, 317,
	692, 318, 693, 0, 694, 319, 320, 321, 322, 323,
	324, 0, 1256, 0, 325, 695, 696, 697, 0, 326,
	327, 1263, 0, 1244, 0, 328, 329, 330, 331, 332,
	333, 334, 335, 0, 0, 337, 338, 339, 336, 340,
	0, 341, 0, 342, 343, 344, 345, 346, 347, 0,
	348, 349, 350, 1298, 351, 352, 353, 1247, 1245, 1246,
	1253, 1249, 1248, 1252, 354, 355, 356, 357, 358, 0,
	359, 361, 699, 700, 0, 364, 360, 362, 0, 365,
	363, 366, 0, 367, 368, 369, 0, 0, 370, 371,
	372, 0, 373, 374, 375, 0, 376, 377, 378, 0,
	379, 380, 701, 381, 382, 383, 385, 387, 384, 386,
	388, 389, 390, 391, 1288, 1289, 392, 0, 294, 0,
	0, 0, 0, 0, 393, 394, 395, 704, 0, 0,
	0, 396, 0, 397, 398, 399, 0, 400, 401, 0,
	1299, 402, 403, 404, 705, 706, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 0, 414, 1295, 0, 708,
	415, 0, 416, 417, 418, 419, 420, 421, 422, 1258,
	1259, 1262, 511, 1301, 423, 424, 0, 425, 426, 427,
	428, 429, 0, 0, 0, 295, 430, 431, 432, 0,
	1300, 512, 433, 712, 713, 0, 714, 0, 434, 435,
	1302, 1260, 1303, 436, 437, 438, 1304, 439, 0, 0,
	0, 440, 441, 442, 443, 444, 445, 0, 446, 448,
	447, 0, 449, 1296, 1305, 450, 451, 1306, 0, 452,
	453, 454, 455, 456, 457, 460, 1251, 1250, 458, 459,
	461, 462, 0, 463, 464, 466, 469, 465, 467, 468,
	470, 483, 484, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 486, 0, 485, 1307, 487,
	488, 489, 490, 491, 498, 500, 501, 496, 497, 499,
	502, 503, 505, 493, 494, 495, 1308, 504, 492, 0,
	296, 1309, 506, 507, 508, 509, 0, 1261, 510, 718,
	513, 514, 0, 0, 515, 0, 516, 0, 0, 518,
	519, 520, 0, 0, 521, 522, 719, 1310, 523, 1311,
	1290, 524, 525, 517, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 0, 535, 536, 721, 537, 538, 539,
	722, 540, 541, 542, 1291, 543, 724, 544, 545, 0,
	546, 547, 548, 0, 549, 550, 551, 552, 553, 554,
	555, 556, 725, 557, 558, 560, 559, 561, 0, 562,
	0, 563, 564, 565, 0, 0, 0, 0, 0, 566,
	567, 569, 0, 570, 571, 572, 573, 568, 574, 575,
	576, 577, 578, 579, 0, 580, 581, 582, 1312, 583,
	584, 585, 586, 587, 726, 588, 0, 589, 590, 597,
	598, 599, 591, 592, 593, 600, 601, 602, 603, 604,
	0, 606, 607, 605, 608, 609, 610, 1254, 611, 612,
	594, 595, 613, 614, 1313, 615, 616, 617, 618, 619,
	620, 621, 727, 0, 622, 0, 623, 624, 625, 626,
	627, 629, 596, 630, 635, 636, 728, 631, 632, 633,
	634, 1292, 638, 639, 640, 0, 641, 642, 0, 637,
	628, 0, 643, 644, 645, 646, 647, 648, 0, 649,
	650, 0, 651, 730, 731, 732, 733, 0, 662, 0,
	652, 654, 655, 656, 1293, 657, 1294, 0, 658, 659,
	660, 661, 653, 663, 664, 0, 0, 665, 666, 668,
	670, 671, 667, 669, 672, 1255, 673, 0, 0, 674,
	675, 676, 736, 737, 738, 0, 678, 677, 679, 680,
	681, 739, 682, 683, 997, 0, 897, 0, 684, 685,
	740, 686, 687, 688, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 297, 298, 300, 299, 301, 302, 303,
	304, 0, 305, 306, 0, 0, 0, 0, 0, 689,
	0, 0, 0, 307, 0, 308, 309, 0, 310, 311,
	312, 313, 314, 315, 316, 690, 691, 0, 317, 692,
	318, 693, 0, 694, 319, 320, 321, 322, 323, 324,
	0, 0, 0, 325, 695, 696, 697, 0, 326, 327,
	698, 0, 0, 0, 328, 329, 330, 331, 332, 333,
	334, 335, 0, 0, 337, 338, 339, 336, 340, 0,
	341, 0, 342, 343, 344, 345, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 0, 0, 0,
	0, 0, 0, 354, 355, 356, 905, 358, 0, 359,
	361, 699, 700, 0, 364, 360, 362, 0, 365, 363,
	366, 0, 367, 368, 369, 0, 0, 370, 371, 372,
	0, 373, 374, 375, 0, 376, 377, 378, 0, 379,
	380, 701, 381, 382, 383, 385, 387, 384, 386, 388,
	389, 390, 391, 702, 703, 392, 0, 294, 0, 0,
	0, 0, 0, 393, 394, 395, 704, 0, 0, 0,
	396, 0, 397, 398, 399, 0, 400, 401, 994, 0,
	402, 403, 404, 705, 706, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 0, 414, 707, 0, 708, 415,
	0, 416, 417, 418, 419, 420, 421, 422, 709, 710,
	711, 511, 0, 423, 424, 0, 425, 426, 427, 428,
	429, 0, 0, 0, 295, 430, 431, 432, 0, 0,
	512, 433, 712, 713, 0, 714, 0, 434, 435, 0,
	715, 0, 436, 437, 438, 0, 439, 0, 0, 0,
	440, 441, 442, 443, 444, 445, 0, 446, 448, 447,
	0, 449, 716, 0, 450, 451, 0, 0, 452, 453,
	454, 455, 456, 457, 460, 0, 0, 458, 459, 461,
	462, 0, 463, 464, 466, 469, 465, 467, 468, 470,
	483, 484, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 486, 0, 485, 0, 487, 488,
	489, 490, 491, 498, 500, 501, 496, 497, 499, 502,
	503, 505, 493, 494, 495, 0, 504, 492, 0, 296,
	0, 506, 507, 508, 509, 0, 717, 510, 718, 513,
	514, 0, 0, 515, 0, 516, 0, 0, 518, 519,
	520, 0, 0, 521, 522, 719, 0, 523, 0, 720,
	524, 525, 517, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 0, 535, 536, 721, 537, 538, 539, 722,
	540, 541, 542, 723, 543, 724, 544, 545, 0, 546,
	547, 548, 0, 549, 550, 551, 552, 553, 554, 555,
	556, 725, 557, 558, 560, 559, 561, 0, 562, 0,
	563, 564, 565, 0, 0, 0, 0, 0, 566, 567,
	569, 0, 570, 571, 572, 573, 568, 574, 575, 576,
	577, 578, 579, 0, 580, 581, 582, 0, 583, 584,
	585, 586, 587, 726, 588, 0, 589, 590, 597, 598,
	599, 591, 592, 593, 600, 601, 602, 603, 604, 0,
	901, 607, 605, 608, 609, 610, 0, 611, 612, 594,
	595, 613, 614, 0, 615, 616, 617, 618, 619, 620,
	621, 727, 0, 622, 0, 623, 624, 625, 626, 627,
	629, 596, 630, 635, 636, 728, 631, 632, 633, 634,
	729, 638, 639, 640, 0, 641, 996, 0, 637, 628,
	903, 643, 644, 645, 646, 647, 904, 0, 649, 650,
	0, 651, 730, 731, 732, 733, 0, 662, 0, 652,
	654, 655, 656, 734, 657, 735, 0, 658, 659, 660,
	661, 653, 663, 664, 0, 0, 665, 666, 668, 670,
	671, 667, 669, 672, 0, 673, 0, 0, 674, 675,
	676, 736, 737, 738, 0, 678, 677, 679, 680, 681,
	739, 682, 683, 2183, 0, 0, 0, 684, 685, 740,
	686, 687, 688, 0, 0, 0, 0, 0, 0, 0,
	297, 298, 300, 299, 301, 302, 303, 304, 0, 305,
	306, 0, 0, 0, 0, 0, 0, 908, 0, 0,
	307, 0, 308, 309, 1297, 310, 311, 312, 313, 314,
	315, 316, 0, 2189, 0, 317, 2179, 318, 2195, 0,
	2202, 319, 320, 321, 322, 323, 324, 0, 0, 0,
	325, 2205, 2206, 0, 0, 326, 327, 0, 0, 1602,
	0, 328, 329, 330, 331, 332, 333, 334, 335, 0,
	0, 337, 338, 339, 336, 340, 0, 341, 0, 342,
	343, 344, 345, 346, 347, 0, 348, 349, 350, 1298,
	351, 352, 353, 0, 0, 0, 0, 0, 0, 0,
	354, 355, 356, 357, 358, 1280, 359, 361, 2193, 2192,
	0, 364, 360, 362, 0, 365, 363, 366, 0, 367,
	368, 369, 0, 0, 370, 1265, 372, 0, 373, 374,
	375, 0, 376, 377, 378, 0, 379, 380, 0, 381,
	382, 383, 385, 387, 384, 386, 388, 389, 390, 391,
	0, 0, 392, 0, 0, 0, 0, 0, 0, 0,
	393, 394, 395, 2191, 0, 0, 0, 396, 0, 397,
	398, 399, 0, 400, 401, 0, 1299, 402, 403, 404,
	2200, 2201, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 0, 414, 0, 0, 0, 415, 0, 416, 417,
	418, 419, 420, 421, 422, 0, 0, 0, 511, 1301,
	423, 424, 0, 425, 426, 427, 428, 429, 0, 0,
	0, 0, 430, 431, 432, 0, 1300, 512, 433, 2186,
	2187, 0, 2182, 0, 434, 435, 1302, 0, 1303, 436,
	437, 438, 1304, 439, 0, 0, 0, 440, 441, 442,
	443, 444, 445, 0, 446, 448, 447, 0, 449, 0,
	1305, 450, 451, 1306, 0, 452, 453, 454, 455, 456,
	457, 460, 0, 0, 458, 459, 461, 462, 0, 463,
	464, 466, 469, 465, 467, 468, 470, 483, 484, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 486, 0, 485, 1307, 487, 488, 489, 490, 491,
	498, 500, 501, 496, 497, 499, 502, 503, 505, 493,
	494, 495, 1308, 504, 492, 0, 0, 1309, 506, 507,
	508, 509, 0, 0, 510, 2194, 513, 514, 0, 0,
	515, 0, 516, 0, 0, 518, 519, 520, 0, 0,
	521, 522, 0, 1310, 523, 1311, 0, 524, 525, 517,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 0,
	535, 536, 2176, 537, 538, 539, 2177, 540, 541, 542,
	0, 543, 0, 544, 545, 0, 546, 547, 548, 0,
	549, 550, 551, 552, 553, 554, 555, 556, 2190, 557,
	558, 560, 559, 561, 0, 562, 0, 563, 564, 565,
	0, 0, 0, 0, 0, 566, 567, 569, 0, 570,
	571, 572, 573, 568, 574, 575, 576, 577, 578, 579,
	0, 580, 581, 582, 1312, 583, 584, 585, 586, 587,
	0, 588, 0, 589, 590, 597, 598, 599, 591, 592,
	593, 600, 601, 602, 603, 604, 0, 606, 607, 605,
	608, 609, 610, 0, 611, 612, 594, 595, 613, 614,
	1313, 615, 616, 617, 618, 619, 620, 621, 2188, 0,
	622, 0, 623, 624, 625, 626, 627, 629, 596, 630,
	635, 636, 2204, 631, 632, 633, 634, 0, 638, 639,
	640, 0, 641, 642, 0, 637, 628, 0, 643, 644,
	645, 646, 647, 648, 0, 649, 650, 0, 651, 2196,
	2197, 2198, 2199, 0, 662, 0, 652, 654, 655, 656,
	0, 657, 0, 0, 658, 659, 660, 661, 653, 663,
	664, 0, 0, 665, 666, 668, 670, 671, 667, 669,
	672, 0, 673, 0, 0, 674, 675, 676, 0, 2180,
	2203, 0, 678, 677, 679, 680, 681, 0, 682, 683,
	0, 0, 0, 0, 684, 685, 0, 686, 687, 688,
	897, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 297, 298, 300,
	299, 301, 302, 303, 304, 4175, 305, 306, 0, 0,
	0, 0, 0, 689, 0, 0, 2170, 307, 0, 308,
	309, 0, 310, 311, 312, 313, 314, 315, 316, 690,
	691, 0, 317, 692, 318, 693, 0, 694, 319, 320,
	321, 322, 323, 324, 0, 0, 0, 325, 695, 696,
	697, 0, 326, 327, 698, 0, 0, 0, 328, 329,
	330, 331, 332, 333, 334, 335, 0, 0, 337, 338,
	339, 336, 340, 0, 341, 0, 342, 343, 344, 345,
	346, 347, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 0, 0, 0, 0, 0, 0, 354, 355, 356,
	905, 358, 0, 359, 361, 699, 700, 0, 364, 360,
	362, 0, 365, 363, 366, 0, 367, 368, 369, 0,
	0, 370, 371, 372, 0, 373, 374, 375, 0, 376,
	377, 378, 0, 379, 380, 701, 381, 382, 383, 385,
	387, 384, 386, 388, 389, 390, 391, 702, 703, 392,
	0, 294, 0, 0, 0, 0, 0, 393, 394, 395,
	704, 0, 0, 0, 396, 0, 397, 398, 399, 0,
	400, 401, 0, 0, 402, 403, 404, 705, 706, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 0, 414,
	707, 0, 708, 415, 0, 416, 417, 418, 419, 420,
	421, 422, 709, 710, 711, 511, 0, 423, 424, 0,
	425, 426, 427, 428, 429, 0, 0, 0, 295, 430,
	431, 432, 0, 0, 512, 433, 712, 713, 0, 714,
	0, 434, 435, 0, 715, 0, 436, 437, 438, 0,
	439, 0, 0, 0, 440, 441, 442, 443, 444, 445,
	0, 446, 448, 447, 0, 449, 716, 0, 450, 451,
	0, 0, 452, 453, 454, 455, 456, 457, 460, 0,
	0, 458, 459, 461, 462, 0, 463, 464, 466, 469,
	465, 467, 468, 470, 483, 484, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 486, 0,
	485, 0, 487, 488, 489, 490, 491, 498, 500, 501,
	496, 497, 499, 502, 503, 505, 493, 494, 495, 0,
	504, 492, 0, 296, 0, 506, 507, 508, 509, 0,
	717, 510, 718, 513, 514, 0, 0, 515, 0, 516,
	0, 0, 518, 519, 520, 0, 0, 521, 522, 719,
	0, 523, 0, 720, 524, 525, 517, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 0, 535, 536, 721,
	537, 538, 539, 722, 540, 541, 542, 723, 543, 724,
	544, 545, 0, 546, 547, 548, 0, 549, 550, 551,
	552, 553, 554, 555, 556, 725, 557, 558, 560, 559,
	561, 0, 562, 0, 563, 564, 565, 0, 0, 0,
	0, 0, 566, 567, 569, 0, 570, 571, 572, 573,
	568, 574, 575, 576, 577, 578, 579, 0, 580, 581,
	582, 0, 583, 584, 585, 586, 587, 726, 588, 0,
	589, 590, 597, 598, 599, 591, 592, 593, 4174, 601,
	602, 603, 604, 0, 901, 607, 605, 608, 609, 610,
	0, 611, 612, 594, 595, 613, 614, 0, 615, 616,
	617, 618, 619, 620, 621, 727, 0, 622, 0, 623,
	624, 625, 626, 627, 629, 596, 630, 635, 636, 728,
	631, 632, 633, 634, 729, 638, 639, 640, 0, 641,
	642, 0, 637, 628, 903, 643, 644, 645, 646, 647,
	904, 0, 649, 650, 0, 651, 730, 731, 732, 733,
	0, 662, 0, 652, 654, 655, 656, 734, 657, 735,
	0, 658, 659, 4173, 661, 653, 663, 664, 0, 0,
	665, 666, 668, 670, 671, 667, 669, 672, 0, 673,
	0, 0, 674, 675, 676, 736, 737, 738, 0, 678,
	677, 679, 680, 681, 739, 682, 683, 897, 0, 0,
	0, 684, 685, 740, 686, 687, 688, 0, 0, 0,
	0, 0, 0, 0, 297, 298, 300, 299, 301, 302,
	303, 304, 2210, 305, 306, 0, 0, 0, 0, 0,
	689, 908, 0, 0, 307, 0, 308, 309, 0, 310,
	311, 312, 313, 314, 315, 316, 690, 691, 0, 317,
	692, 318, 693, 0, 694, 319, 320, 321, 322, 323,
	324, 0, 0, 0, 325, 695, 696, 697, 0, 326,
	327, 698, 0, 0, 0, 328, 329, 330, 331, 332,
	333, 334, 335, 0, 0, 337, 338, 339, 336, 340,
	0, 341, 0, 342, 343, 344, 345, 346, 347, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 0, 0,
	0, 0, 0, 0, 354, 355, 356, 905, 358, 0,
	359, 361, 699, 700, 0, 364, 360, 362, 0, 365,
	363, 366, 0, 367, 368, 369, 0, 0, 370, 371,
	372, 0, 373, 374, 375, 0, 376, 377, 378, 0,
	379, 380, 701, 381, 382, 383, 385, 387, 384, 386,
	388, 389, 390, 391, 702, 703, 392, 0, 294, 0,
	0, 0, 0, 0, 393, 394, 395, 704, 0, 0,
	0, 396, 0, 397, 398, 399, 0, 400, 401, 0,
	0, 402, 403, 404, 705, 706, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 0, 414, 707, 0, 708,
	415, 0, 416, 417, 418, 419, 420, 421, 422, 709,
	710, 711, 511, 0, 423, 424, 0, 425, 426, 427,
	428, 429, 0, 0, 0, 295, 430, 431, 432, 0,
	0, 512, 433, 712, 713, 0, 714, 0, 434, 435,
	0, 715, 0, 436, 437, 438, 0, 439, 0, 0,
	0, 440, 441, 442, 443, 444, 445, 0, 446, 448,
	447, 0, 449, 716, 0, 450, 451, 0, 0, 452,
	453, 454, 455, 456, 457, 460, 0, 0, 458, 459,
	461, 462, 0, 463, 464, 466, 469, 465, 467, 468,
	470, 483, 484, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 486, 0, 485, 0, 487,
	488, 489, 490, 491, 498, 500, 501, 496, 497, 499,
	502, 503, 505, 493, 494, 495, 0, 504, 492, 0,
	296, 0, 506, 507, 508, 509, 0, 717, 510, 718,
	513, 514, 0, 0, 515, 0, 516, 0, 0, 518,
	519, 520, 0, 0, 521, 522, 719, 0, 523, 0,
	720, 524, 525, 517, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 0, 535, 536, 721, 537, 538, 539,
	722, 540, 541, 542, 723, 543, 724, 544, 545, 0,
	546, 547, 548, 0, 549, 550, 551, 552, 553, 554,
	555, 556, 725, 557, 558, 560, 559, 561, 0, 562,
	0, 563, 564, 565, 0, 0, 0, 0, 0, 566,
	567, 569, 0, 570, 571, 572, 573, 568, 574, 575,
	576, 577, 578, 579, 0, 580, 581, 582, 0, 583,
	584, 585, 586, 587, 726, 588, 0, 589, 590, 597,
	598, 599, 591, 592, 593, 2209, 601, 602, 603, 604,
	0, 2211, 607, 605, 608, 609, 610, 0, 611, 612,
	594, 595, 613, 614, 0, 615, 616, 617, 618, 619,
	620, 621, 727, 0, 622, 0, 623, 624, 625, 626,
	627, 629, 596, 630, 635, 636, 728, 631, 632, 633,
	634, 729, 638, 639, 640, 0, 641, 642, 0, 637,
	628, 903, 643, 644, 645, 646, 647, 904, 0, 649,
	650, 0, 651, 730, 731, 732, 733, 0, 662, 0,
	652, 654, 655, 656, 734, 657, 735, 0, 658, 659,
	2208, 661, 653, 663, 664, 0, 0, 665, 666, 668,
	670, 671, 667, 669, 672, 0, 673, 0, 0, 674,
	675, 676, 736, 737, 738, 0, 678, 677, 679, 680,
	681, 739, 682, 683, 897, 0, 0, 0, 684, 685,
	740, 686, 687, 688, 0, 0, 0, 0, 0, 0,
	0, 297, 298, 300, 299, 301, 302, 303, 304, 2161,
	305, 306, 0, 0, 0, 0, 0, 689, 908, 0,
	0, 307, 0, 308, 309, 0, 310, 311, 312, 313,
	314, 315, 316, 690, 691, 0, 317, 692, 318, 693,
	0, 694, 319, 320, 321, 322, 323, 324, 0, 0,
	0, 325, 695, 696, 697, 0, 326, 327, 698, 0,
	0, 0, 328, 329, 330, 331, 332, 333, 334, 335,
	0, 0, 337, 338, 339, 336, 340, 0, 341, 0,
	342, 343, 344, 345, 346, 347, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 0, 0, 0, 0, 0,
	0, 354, 355, 356, 905, 358, 0, 359, 361, 699,
	700, 0, 364, 360, 362, 0, 365, 363, 366, 0,
	367, 368, 369, 0, 0, 370, 371, 372, 0, 373,
	374, 375, 0, 376, 377, 378, 0, 379, 380, 701,
	381, 382, 383, 385, 387, 384, 386, 388, 389, 390,
	391, 702, 703, 392, 0, 294, 0, 0, 0, 0,
	0, 393, 394, 395, 704, 0, 0, 0, 396, 0,
	397, 398, 399, 0, 400, 401, 0, 0, 402, 403,
	404, 705, 706, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 0, 414, 707, 0, 708, 415, 0, 416,
	417, 418, 419, 420, 421, 422, 709, 710, 711, 511,
	0, 423, 424, 0, 425, 426, 427, 428, 429, 0,
	0, 0, 295, 430, 431, 432, 0, 0, 512, 433,
	712, 713, 0, 714, 0, 434, 435, 0, 715, 0,
	436, 437, 438, 0, 439, 0, 0, 0, 440, 441,
	442, 443, 444, 445, 0, 446, 448, 447, 0, 449,
	716, 0, 450, 451, 0, 0, 452, 453, 454, 455,
	456, 457, 460, 0, 0, 458, 459, 461, 462, 0,
	463, 464, 466, 469, 465, 467, 468, 470, 483, 484,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 486, 0, 485, 0, 487, 488, 489, 490,
	491, 498, 500, 501, 496, 497, 499, 502, 503, 505,
	493, 494, 495, 0, 504, 492, 0, 296, 0, 506,
	507, 508, 509, 0, 717, 510, 718, 513, 514, 0,
	0, 515, 0, 516, 0, 0, 518, 519, 520, 0,
	0, 521, 522, 719, 0, 523, 0, 720, 524, 525,
	517, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	0, 535, 536, 721, 537, 538, 539, 722, 540, 541,
	542, 723, 543, 724, 544, 545, 0, 546, 547, 548,
	0, 549, 550, 551, 552, 553, 554, 555, 556, 725,
	557, 558, 560, 559, 561, 0, 562, 0, 563, 564,
	565, 0, 0, 0, 0, 0, 566, 567, 569, 0,
	570, 571, 572, 573, 568, 574, 575, 576, 577, 578,
	579, 0, 580, 581, 582, 0, 583, 584, 585, 586,
	587, 726, 588, 0, 589, 590, 597, 598, 599, 591,
	592, 593, 2160, 601, 602, 603, 604, 0, 901, 607,
	605, 608, 609, 610, 0, 611, 612, 594, 595, 613,
	614, 0, 615, 616, 617, 618, 619, 620, 621, 727,
	0, 622, 0, 623, 624, 625, 626, 627, 629, 596,
	630, 635, 636, 728, 631, 632, 633, 634, 729, 638,
	639, 640, 0, 641, 642, 0, 637, 628, 903, 643,
	644, 645, 646, 647, 904, 0, 649, 650, 0, 651,
	730, 731, 732, 733, 0, 662, 0, 652, 654, 655,
	656, 734, 657, 735, 0, 658, 659, 2159, 661, 653,
	663, 664, 0, 0, 665, 666, 668, 670, 671, 667,
	669, 672, 0, 673, 0, 0, 674, 675, 676, 736,
	737, 738, 0, 678, 677, 679, 680, 681, 739, 682,
	683, 895, 0, 897, 0, 684, 685, 740, 686, 687,
	688, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	297, 298, 300, 299, 301, 302, 303, 304, 0, 305,
	306, 0, 0, 0, 0, 908, 689, 0, 0, 0,
	307, 0, 308, 309, 0, 310, 311, 312, 313, 314,
	315, 316, 690, 691, 0, 317, 692, 318, 693, 0,
	694, 319, 320, 321, 322, 323, 324, 0, 0, 0,
	325, 695, 696, 697, 0, 326, 327, 698, 0, 0,
	0, 328, 329, 330, 331, 332, 333, 334, 335, 0,
	0, 337, 338, 339, 336, 340, 0, 341, 0, 342,
	343, 344, 345, 346, 347, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 0, 0, 0, 0, 0, 0,
	354, 355, 356, 905, 358, 0, 359, 361, 699, 700,
	0, 364, 360, 362, 0, 365, 363, 366, 0, 367,
	368, 369, 0, 0, 370, 371, 372, 0, 373, 374,
	375, 0, 376, 377, 378, 0, 379, 380, 701, 381,
	382, 383, 385, 387, 384, 386, 388, 389, 390, 391,
	702, 703, 392, 0, 294, 0, 0, 0, 0, 0,
	393, 394, 395, 704, 0, 0, 0, 396, 0, 397,
	398, 399, 0, 400, 401, 0, 0, 402, 403, 404,
	705, 706, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 0, 414, 707, 0, 708, 415, 0, 416, 417,
	418, 419, 420, 421, 422, 709, 710, 711, 511, 0,
	423, 424, 0, 425, 426, 427, 428, 429, 0, 0,
	0, 295, 430, 431, 432, 0, 0, 512, 433, 712,
	713, 0, 714, 0, 434, 435, 0, 715, 0, 436,
	437, 438, 0, 439, 0, 0, 0, 440, 441, 442,
	443, 444, 445, 0, 446, 448, 447, 0, 449, 716,
	0, 450, 451, 0, 0, 452, 453, 454, 455, 456,
	457, 460, 0, 0, 458, 459, 461, 462, 0, 463,
	464, 466, 469, 465, 467, 468, 470, 483, 484, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 486, 0, 485, 0, 487, 488, 489, 490, 491,
	498, 500, 501, 496, 497, 499, 502, 503, 505, 493,
	494, 495, 0, 504, 492, 0, 296, 0, 506, 507,
	508, 509, 0, 717, 510, 718, 513, 514, 0, 0,
	515, 0, 516, 0, 0, 518, 519, 520, 0, 0,
	521, 522, 719, 0, 523, 0, 720, 524, 525, 517,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 0,
	535, 536, 721, 537, 538, 539, 722, 540, 541, 542,
	723, 543, 724, 544, 545, 0, 546, 547, 548, 0,
	549, 550, 551, 552, 553, 554, 555, 556, 725, 557,
	558, 560, 559, 561, 0, 562, 0, 563, 564, 565,
	0, 0, 0, 0, 0, 566, 567, 569, 0, 570,
	571, 572, 573, 568, 574, 575, 576, 577, 578, 579,
	0, 580, 581, 582, 0, 583, 584, 585, 586, 587,
	726, 588, 0, 589, 590, 597, 598, 599, 591, 592,
	593, 600, 601, 602, 603, 604, 0, 901, 607, 605,
	608, 609, 610, 0, 611, 612, 594, 595, 613, 614,
	0, 615, 616, 617, 618, 619, 620, 621, 727, 0,
	622, 0, 623, 624, 625, 626, 627, 629, 596, 630,
	635, 636, 728, 631, 632, 633, 634, 729, 638, 639,
	640, 0, 641, 642, 0, 637, 628, 903, 643, 644,
	645, 646, 647, 904, 0, 649, 650, 0, 651, 730,
	731, 732, 733, 0, 662, 0, 652, 654, 655, 656,
	734, 657, 735, 0, 658, 659, 660, 661, 653, 663,
	664, 0, 0, 665, 666, 668, 670, 671, 667, 669,
	672, 0, 673, 0, 0, 674, 675, 676, 736, 737,
	738, 0, 678, 677, 679, 680, 681, 739, 682, 683,
	897, 0, 0, 0, 684, 685, 740, 686, 687, 688,
	0, 0, 0, 0, 0, 0, 0, 297, 298, 300,
	299, 301, 302, 303, 304, 0, 305, 306, 0, 0,
	0, 0, 0, 689, 908, 0, 0, 307, 0, 308,
	309, 0, 310, 311, 312, 313, 314, 315, 316, 690,
	691, 0, 317, 692, 318, 693, 0, 694, 319, 320,
	321, 322, 323, 324, 0, 0, 0, 325, 695, 696,
	697, 0, 326, 327, 698, 0, 0, 0, 328, 329,
	330, 331, 332, 333, 334, 335, 0, 0, 337, 338,
	339, 336, 340, 0, 341, 0, 342, 343, 344, 345,
	346, 347, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 0, 0, 0, 0, 0, 0, 354, 355, 356,
	905, 358, 0, 359, 361, 699, 700, 0, 364, 360,
	362, 0, 365, 363, 366, 0, 367, 368, 369, 0,
	0, 370, 371, 372, 0, 373, 374, 375, 0, 376,
	377, 378, 0, 379, 380, 701, 381, 382, 383, 385,
	387, 384, 386, 388, 389, 390, 391, 702, 703, 392,
	0, 294, 0, 0, 0, 0, 0, 393, 394, 395,
	704, 0, 0, 0, 396, 0, 397, 398, 399, 0,
	400, 401, 0, 0, 402, 403, 404, 705, 706, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 0, 414,
	707, 0, 708, 415, 0, 416, 417, 418, 419, 420,
	421, 422, 709, 710, 711, 511, 0, 423, 424, 0,
	425, 426, 427, 428, 429, 0, 0, 0, 295, 430,
	431, 432, 0, 0, 512, 433, 712, 713, 0, 714,
	0, 434, 435, 0, 715, 0, 436, 437, 438, 0,
	439, 0, 0, 0, 440, 441, 442, 443, 444, 445,
	0, 446, 448, 447, 0, 449, 716, 0, 450, 451,
	0, 0, 452, 453, 454, 455, 456, 457, 460, 0,
	0, 458, 459, 461, 462, 0, 463, 464, 466, 469,
	465, 467, 468, 470, 483, 484, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 486, 0,
	485, 0, 487, 488, 489, 490, 491, 498, 500, 501,
	496, 497, 499, 502, 503, 505, 493, 494, 495, 0,
	504, 492, 0, 296, 0, 506, 507, 508, 509, 0,
	717, 510, 718, 513, 514, 0, 0, 515, 0, 516,
	0, 0, 518, 519, 520, 0, 0, 521, 522, 719,
	0, 523, 0, 720, 524, 525, 517, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 0, 535, 536, 721,
	537, 538, 539, 722, 540, 541, 542, 723, 543, 724,
	544, 545, 0, 546, 547, 548, 0, 549, 550, 551,
	552, 553, 554, 555, 556, 725, 557, 558, 560, 559,
	561, 0, 562, 0, 563, 564, 565, 0, 0, 0,
	0, 0, 566, 567, 569, 0, 570, 571, 572, 573,
	568, 574, 575, 576, 577, 578, 579, 0, 580, 581,
	582, 0, 583, 584, 585, 586, 587, 726, 588, 0,
	589, 590, 597, 598, 599, 591, 592, 593, 600, 601,
	602, 603, 604, 0, 901, 607, 605, 608, 609, 610,
	0, 611, 612, 594, 595, 613, 614, 0, 615, 616,
	617, 618, 619, 620, 621, 727, 0, 622, 0, 623,
	624, 625, 626, 627, 629, 596, 630, 635, 636, 728,
	631, 632, 633, 634, 729, 638, 639, 640, 0, 641,
	642, 0, 637, 628, 903, 643, 644, 645, 646, 647,
	904, 0, 649, 650, 0, 651, 730, 731, 732, 733,
	0, 662, 0, 652, 654, 655, 656, 734, 657, 735,
	0, 658, 659, 660, 661, 653, 663, 664, 0, 0,
	665, 666, 668, 670, 671, 667, 669, 672, 0, 673,
	0, 0, 674, 675, 676, 736, 737, 738, 0, 678,
	677, 679, 680, 681, 739, 682, 683, 3036, 0, 291,
	0, 684, 685, 740, 686, 687, 688, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 297, 298, 300, 299,
	301, 302, 303, 304, 0, 305, 306, 0, 0, 0,
	0, 908, 689, 0, 0, 0, 307, 0, 308, 309,
	0, 310, 311, 312, 313, 314, 315, 316, 690, 691,
	0, 317, 692, 318, 693, 0, 694, 319, 320, 321,
	322, 323, 324, 0, 0, 0, 325, 695, 696, 697,
	0, 326, 327, 698, 0, 0, 0, 328, 329, 330,
	331, 332, 333, 334, 335, 0, 0, 337, 338, 339,
	336, 340, 0, 341, 0, 342, 343, 344, 345, 346,
	347, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	0, 0, 0, 0, 0, 0, 354, 355, 356, 357,
	358, 0, 359, 361, 699, 700, 0, 364, 360, 362,
	0, 365, 363, 366, 0, 367, 368, 369, 0, 0,
	370, 371, 372, 0, 373, 374, 375, 0, 376, 377,
	378, 0, 379, 380, 701, 381, 382, 383, 385, 387,
	384, 386, 388, 389, 390, 391, 702, 703, 392, 0,
	294, 0, 0, 0, 0, 0, 393, 394, 395, 704,
	0, 0, 0, 396, 0, 397, 398, 399, 0, 400,
	401, 0, 0, 402, 403, 404, 705, 706, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 0, 414, 707,
	0, 708, 415, 0, 416, 417, 418, 419, 420, 421,
	422, 709, 710, 711, 511, 0, 423, 424, 0, 425,
	426, 427, 428, 429, 0, 0, 0, 295, 430, 431,
	432, 0, 0, 512, 433, 712, 713, 0, 714, 0,
	434, 435, 0, 715, 0, 436, 437, 438, 0, 439,
	0, 0, 0, 440, 441, 442, 443, 444, 445, 0,
	446, 448, 447, 0, 449, 716, 0, 450, 451, 0,
	0, 452, 453, 454, 455, 456, 457, 460, 0, 0,
	458, 459, 461, 462, 0, 463, 464, 466, 469, 465,
	467, 468, 470, 483, 484, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 486, 0, 485,
	0, 487, 488, 489, 490, 491, 498, 500, 501, 496,
	497, 499, 502, 503, 505, 493, 494, 495, 0, 504,
	492, 0, 296, 0, 506, 507, 508, 509, 0, 717,
	510, 718, 513, 514, 0, 0, 515, 0, 516, 0,
	0, 518, 519, 520, 0, 0, 521, 522, 719, 0,
	523, 0, 720, 524, 525, 517, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 0, 535, 536, 721, 537,
	538, 539, 722, 540, 541, 542, 723, 543, 724, 544,
	545, 0, 546, 547, 548, 0, 549, 550, 551, 552,
	553, 554, 555, 556, 725, 557, 558, 560, 559, 561,
	0, 562, 0, 563, 564, 565, 0, 0, 0, 0,
	0, 566, 567, 569, 0, 570, 571, 572, 573, 568,
	574, 575, 576, 577, 578, 579, 0, 580, 581, 582,
	0, 583, 584, 585, 586, 587, 726, 588, 0, 589,
	590, 597, 598, 599, 591, 592, 593, 600, 601, 602,
	603, 604, 0, 606, 607, 605, 608, 609, 610, 0,
	611, 612, 594, 595, 613, 614, 0, 615, 616, 617,
	618, 619, 620, 621, 727, 0, 622, 0, 623, 624,
	625, 626, 627, 629, 596, 630, 635, 636, 728, 631,
	632, 633, 634, 729, 638, 639, 640, 0, 641, 642,
	0, 637, 628, 0, 643, 644, 645, 646, 647, 648,
	0, 649, 650, 0, 651, 730, 731, 732, 733, 0,
	662, 0, 652, 654, 655, 656, 734, 657, 735, 0,
	658, 659, 660, 661, 653, 663, 664, 0, 0, 665,
	666, 668, 670, 671, 667, 669, 672, 0, 673, 0,
	0, 674, 675, 676, 736, 737, 738, 0, 678, 677,
	679, 680, 681, 739, 682, 683, 897, 0, 0, 0,
	684, 685, 740, 686, 687, 688, 0, 0, 0, 0,
	0, 0, 0, 297, 298, 300, 299, 301, 302, 303,
	304, 0, 305, 306, 0, 0, 0, 0, 0, 689,
	908, 0, 0, 307, 0, 308, 309, 0, 310, 311,
	312, 313, 314, 315, 316, 690, 691, 0, 317, 692,
	318, 693, 0, 694, 319, 320, 321, 322, 323, 324,
	0, 0, 0, 325, 695, 696, 697, 0, 326, 327,
	698, 0, 0, 0, 328, 329, 330, 331, 332, 333,
	334, 335, 0, 0, 337, 338, 339, 336, 340, 0,
	341, 0, 342, 343, 344, 345, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 0, 0, 0,
	0, 0, 0, 354, 355, 356, 905, 358, 0, 359,
	361, 699, 700, 0, 364, 360, 362, 0, 365, 363,
	366, 0, 367, 368, 369, 0, 0, 370, 371, 372,
	0, 373, 374, 375, 0, 376, 377, 378, 0, 379,
	380, 701, 381, 382, 383, 385, 387, 384, 386, 388,
	389, 390, 391, 702, 703, 392, 0, 294, 0, 0,
	0, 0, 0, 393, 394, 395, 704, 0, 0, 0,
	396, 0, 397, 398, 399, 0, 400, 401, 0, 0,
	402, 403, 404, 705, 706, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 0, 414, 707, 0, 708, 415,
	0, 416, 417, 418, 419, 420, 421, 422, 709, 710,
	711, 511, 0, 423, 424, 0, 425, 426, 427, 428,
	429, 0, 0, 0, 295, 430, 431, 432, 0, 0,
	512, 433, 712, 713, 0, 714, 0, 434, 435, 0,
	715, 0, 436, 437, 438, 0, 439, 0, 0, 0,
	440, 441, 442, 443, 444, 445, 0, 446, 448, 447,
	0, 449, 716, 0, 450, 451, 0, 0, 452, 453,
	454, 455, 456, 457, 460, 0, 0, 458, 459, 461,
	462, 0, 463, 464, 466, 469, 465, 467, 468, 470,
	483, 484, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 486, 0, 485, 0, 487, 488,
	489, 490, 491, 498, 500, 501, 496, 497, 499, 502,
	503, 505, 493, 494, 495, 0, 504, 492, 0, 296,
	0, 506, 507, 508, 509, 0, 717, 510, 718, 513,
	514, 0, 0, 515, 0, 516, 0, 0, 518, 519,
	520, 0, 0, 521, 522, 719, 0, 523, 0, 720,
	524, 525, 517, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 0, 535, 536, 721, 537, 538, 539, 722,
	540, 541, 542, 723, 543, 724, 544, 545, 0, 546,
	547, 548, 0, 549, 550, 551, 552, 553, 554, 555,
	556, 725, 557, 558, 560, 559, 561, 0, 562, 0,
	563, 564, 565, 0, 0, 0, 0, 0, 566, 567,
	569, 0, 570, 571, 572, 573, 568, 574, 575, 576,
	577, 578, 579, 0, 580, 581, 582, 0, 2562, 584,
	585, 586, 587, 726, 588, 0, 589, 590, 597, 598,
	599, 591, 592, 593, 2563, 601, 602, 603, 604, 0,
	901, 607, 605, 608, 609, 610, 0, 611, 612, 594,
	595, 613, 614, 0, 615, 616, 617, 618, 619, 620,
	621, 727, 0, 622, 0, 623, 624, 625, 626, 627,
	629, 596, 630, 635, 636, 728, 631, 632, 633, 634,
	729, 638, 639, 640, 0, 641, 642, 0, 637, 628,
	903, 643, 644, 645, 646, 647, 904, 0, 649, 650,
	0, 651, 730, 731, 732, 733, 0, 662, 0, 652,
	654, 655, 656, 734, 657, 735, 0, 658, 659, 2564,
	661, 653, 663, 664, 0, 0, 665, 666, 668, 670,
	671, 667, 669, 672, 0, 673, 0, 0, 674, 675,
	676, 736, 737, 738, 0, 678, 677, 679, 680, 681,
	739, 682, 683, 291, 0, 0, 0, 684, 685, 740,
	686, 687, 688, 0, 0, 0, 0, 0, 0, 0,
	297, 298, 300, 299, 301, 302, 303, 304, 0, 305,
	306, 0, 0, 0, 0, 0, 689, 908, 0, 0,
	307, 0, 308, 309, 0, 310, 311, 312, 313, 314,
	315, 316, 690, 691, 0, 317, 692, 318, 693, 0,
	694, 319, 320, 321, 322, 323, 324, 0, 0, 0,
	325, 695, 696, 697, 0, 326, 327, 698, 0, 0,
	0, 328, 329, 330, 331, 332, 333, 334, 335, 0,
	0, 337, 338, 339, 336, 340, 0, 341, 0, 342,
	343, 344, 345, 346, 347, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 0, 0, 0, 0, 0, 0,
	354, 355, 356, 357, 358, 0, 359, 361, 699, 700,
	0, 364, 360, 362, 0, 365, 363, 366, 0, 367,
	368, 369, 0, 0, 370, 371, 372, 0, 373, 374,
	375, 0, 376, 377, 378, 0, 379, 380, 701, 381,
	382, 383, 385, 387, 384, 386, 388, 389, 390, 391,
	702, 703, 392, 0, 294, 0, 0, 0, 0, 0,
	393, 394, 395, 704, 0, 0, 0, 396, 0, 397,
	398, 399, 0, 400, 401, 0, 0, 402, 403, 404,
	705, 706, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 0, 414, 707, 0, 708, 415, 0, 416, 417,
	418, 419, 420, 421, 422, 709, 710, 711, 511, 0,
	423, 424, 0, 425, 426, 427, 428, 429, 0, 0,
	0, 295, 430, 431, 432, 0, 0, 512, 433, 712,
	713, 0, 714, 0, 434, 435, 0, 715, 0, 436,
	437, 438, 0, 439, 0, 0, 0, 440, 441, 442,
	443, 444, 445, 0, 446, 448, 447, 0, 449, 716,
	0, 450, 451, 0, 0, 452, 453, 454, 455, 456,
	457, 460, 0, 0, 458, 459, 461, 462, 0, 463,
	464, 466, 469, 465, 467, 468, 470, 483, 484, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 486, 0, 485, 0, 487, 488, 489, 490, 491,
	498, 500, 501, 496, 497, 499, 502, 503, 505, 493,
	494, 495, 0, 504, 492, 0, 296, 0, 506, 507,
	508, 509, 0, 717, 510, 718, 513, 514, 0, 0,
	515, 0, 516, 0, 0, 518, 519, 520, 0, 0,
	521, 522, 719, 0, 523, 0, 720, 524, 525, 517,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 0,
	535, 536, 721, 537, 538, 539, 722, 540, 541, 542,
	723, 543, 724, 544, 545, 0, 546, 547, 548, 0,
	549, 550, 551, 552, 553, 554, 555, 556, 725, 557,
	558, 560, 559, 561, 0, 562, 0, 563, 564, 565,
	0, 0, 0, 0, 0, 566, 567, 569, 0, 570,
	571, 572, 573, 568, 574, 575, 576, 577, 578, 579,
	0, 580, 581, 582, 0, 583, 584, 585, 586, 587,
	726, 588, 0, 589, 590, 597, 598, 599, 591, 592,
	593, 600, 601, 602, 603, 604, 0, 606, 607, 605,
	608, 609, 610, 0, 611, 612, 594, 595, 613, 614,
	0, 615, 616, 617, 618, 619, 620, 621, 727, 0,
	622, 0, 623, 624, 625, 626, 627, 629, 596, 630,
	635, 636, 728, 631, 632, 633, 634, 729, 638, 639,
	640, 0, 641, 642, 0, 637, 628, 0, 643, 644,
	645, 646, 647, 648, 0, 649, 650, 0, 651, 730,
	731, 732, 733, 0, 662, 0, 652, 654, 655, 656,
	734, 657, 735, 0, 658, 659, 660, 661, 653, 663,
	664, 0, 0, 665, 666, 668, 670, 671, 667, 669,
	672, 0, 673, 0, 0, 674, 675, 676, 736, 737,
	738, 0, 678, 677, 679, 680, 681, 739, 682, 683,
	291, 0, 0, 0, 684, 685, 740, 686, 687, 688,
	0, 0, 0, 0, 0, 0, 0, 297, 298, 300,
	299, 301, 302, 303, 304, 0, 305, 306, 0, 0,
	0, 0, 0, 689, 908, 0, 0, 307, 0, 308,
	309, 0, 310, 311, 312, 313, 314, 315, 316, 690,
	691, 0, 317, 692, 318, 693, 0, 694, 319, 320,
	321, 322, 323, 324, 0, 0, 0, 325, 695, 696,
	697, 0, 326, 327, 698, 0, 0, 0, 328, 329,
	330, 331, 332, 333, 334, 335, 0, 0, 337, 338,
	339, 336, 340, 0, 341, 0, 342, 343, 344, 345,
	346, 347, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 0, 0, 0, 0, 0, 0, 354, 355, 356,
	357, 358, 0, 359, 361, 699, 700, 0, 364, 360,
	362, 0, 365, 363, 366, 0, 367, 368, 369, 0,
	0, 370, 371, 372, 0, 373, 374, 375, 0, 376,
	377, 378, 0, 379, 380, 701, 381, 382, 383, 385,
	387, 384, 386, 388, 389, 390, 391, 702, 703, 392,
	0, 0, 0, 0, 0, 0, 0, 393, 394, 395,
	704, 0, 0, 0, 396, 0, 397, 398, 399, 0,
	400, 401, 0, 0, 402, 403, 404, 705, 706, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 0, 414,
	707, 0, 708, 415, 0, 416, 417, 418, 419, 420,
	421, 422, 709, 710, 711, 511, 0, 423, 424, 0,
	425, 426, 427, 428, 429, 0, 0, 0, 0, 430,
	431, 432, 0, 0, 512, 433, 712, 713, 0, 714,
	0, 434, 435, 0, 715, 0, 436, 437, 438, 0,
	439, 0, 0, 0, 440, 441, 442, 443, 444, 445,
	0, 446, 448, 447, 0, 449, 716, 0, 450, 451,
	0, 0, 452, 453, 454, 455, 456, 457, 460, 0,
	0, 458, 459, 461, 462, 0, 463, 464, 466, 469,
	465, 467, 468, 470, 483, 484, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 486, 0,
	485, 0, 487, 488, 489, 490, 491, 498, 500, 501,
	496, 497, 499, 502, 503, 505, 493, 494, 495, 0,
	504, 492, 0, 0, 0, 506, 507, 508, 509, 0,
	717, 510, 718, 513, 514, 0, 0, 515, 0, 516,
	0, 0, 518, 519, 520, 0, 0, 521, 522, 719,
	0, 523, 0, 720, 524, 525, 517, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 0, 535, 536, 721,
	537, 538, 539, 722, 540, 541, 542, 723, 543, 724,
	544, 545, 0, 546, 547, 548, 0, 549, 550, 551,
	552, 553, 554, 555, 556, 725, 557, 558, 560, 559,
	561, 0, 562, 0, 563, 564, 565, 0, 0, 0,
	0, 0, 566, 567, 569, 0, 570, 571, 572, 573,
	568, 574, 575, 576, 577, 578, 579, 0, 580, 581,
	582, 0, 583, 584, 585, 586, 587, 726, 588, 0,
	589, 590, 597, 598, 599, 591, 592, 593, 600, 601,
	602, 603, 604, 0, 606, 607, 605, 608, 609, 610,
	0, 611, 612, 594, 595, 613, 614, 0, 615, 616,
	617, 618, 619, 620, 621, 727, 0, 622, 0, 623,
	624, 625, 626, 627, 629, 596, 630, 635, 636, 728,
	631, 632, 633, 634, 729, 638, 639, 640, 0, 641,
	642, 0, 637, 628, 0, 643, 644, 645, 646, 647,
	648, 0, 649, 650, 0, 651, 730, 731, 732, 733,
	0, 662, 0, 652, 654, 655, 656, 734, 657, 735,
	0, 658, 659, 660, 661, 653, 663, 664, 0, 0,
	665, 666, 668, 670, 671, 667, 669, 672, 0, 673,
	0, 0, 674, 675, 676, 736, 737, 738, 0, 678,
	677, 679, 680, 681, 739, 682, 683, 0, 0, 0,
	0, 684, 685, 740, 686, 687, 688, 0, 0, 0,
	0, 0, 0, 0, 0, 1638, 1637, 0, 0, 0,
	0, 1635, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4391, 297, 298, 300, 299, 301, 302, 303, 304,
	0, 305, 306, 0, 0, 0, 0, 0, 689, 0,
	0, 0, 307, 0, 308, 309, 1297, 310, 311, 312,
	313, 314, 315, 316, 690, 691, 0, 317, 692, 318,
	693, 0, 694, 319, 320, 321, 322, 323, 324, 0,
	0, 0, 325, 695, 696, 697, 0, 326, 327, 698,
	0, 1602, 0, 328, 329, 330, 331, 332, 333, 334,
	335, 0, 0, 337, 338, 339, 336, 340, 0, 341,
	0, 342, 343, 344, 345, 346, 347, 0, 348, 349,
	350, 1298, 351, 352, 353, 0, 0, 0, 0, 0,
	0, 0, 354, 355, 356, 357, 358, 0, 359, 361,
	699, 700, 0, 364, 360, 362, 0, 365, 363, 366,
	0, 367, 368, 369, 0, 0, 370, 371, 372, 0,
	373, 374, 375, 0, 376, 377, 378, 0, 379, 380,
	701, 381, 382, 383, 385, 387, 384, 386, 388, 389,
	390, 391, 702, 703, 392, 0, 294, 0, 0, 0,
	0, 0, 393, 394, 395, 704, 0, 0, 0, 396,
	0, 397, 398, 399, 0, 400, 401, 0, 1299, 402,
	403, 404, 705, 706, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 0, 414, 707, 0, 708, 415, 0,
	416, 417, 418, 419, 420, 421, 422, 709, 710, 711,
	511, 1301, 423, 424, 0, 425, 426, 427, 428, 429,
	0, 0, 0, 0, 430, 431, 432, 0, 1300, 512,
	433, 712, 713, 0, 714, 0, 434, 435, 1302, 715,
	1303, 436, 437, 438, 1304, 439, 0, 0, 0, 440,
	441, 442, 443, 444, 445, 0, 446, 448, 447, 0,
	449, 716, 1305, 450, 451, 1306, 0, 452, 453, 454,
	455, 456, 457, 460, 0, 0, 458, 459, 461, 462,
	0, 463, 464, 466, 469, 465, 467, 468, 470, 483,
	484, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 486, 0, 485, 1307, 487, 488, 489,
	490, 491, 498, 500, 501, 496, 497, 499, 502, 503,
	505, 493, 494, 495, 1308, 504, 492, 0, 0, 1309,
	506, 507, 508, 509, 4278, 717, 510, 718, 513, 514,
	0, 0, 515, 0, 516, 0, 0, 518, 519, 520,
	0, 0, 521, 522, 719, 1310, 523, 1311, 720, 524,
	525, 517, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 0, 535, 536, 721, 537, 538, 539, 722, 540,
	541, 542, 723, 543, 724, 544, 545, 0, 546, 547,
	548, 0, 549, 550, 551, 552, 553, 554, 555, 556,
	725, 557, 558, 560, 559, 561, 0, 562, 0, 563,
	564, 565, 0, 0, 0, 0, 0, 566, 567, 569,
	0, 570, 571, 572, 573, 568, 574, 575, 576, 577,
	578, 579, 0, 580, 581, 582, 1312, 583, 584, 585,
	586, 587, 726, 588, 0, 589, 590, 597, 598, 599,
	591, 592, 593, 600, 601, 602, 603, 604, 0, 606,
	607, 605, 608, 609, 610, 0, 611, 612, 594, 595,
	613, 614, 1313, 615, 616, 617, 618, 619, 620, 621,
	727, 0, 622, 0, 623, 624, 625, 626, 627, 629,
	596, 630, 635, 636, 728, 631, 632, 633, 634, 729,
	638, 639, 640, 0, 641, 642, 0, 637, 628, 0,
	643, 644, 645, 646, 647, 648, 0, 649, 650, 0,
	651, 730, 731, 732, 733, 0, 662, 0, 652, 654,
	655, 656, 734, 657, 735, 0, 658, 659, 660, 661,
	653, 663, 664, 0, 0, 665, 666, 668, 670, 671,
	667, 669, 672, 0, 673, 0, 0, 674, 675, 676,
	736, 737, 738, 0, 678, 677, 679, 680, 681, 739,
	682, 683, 0, 0, 0, 0, 684, 685, 740, 686,
	687, 688, 1638, 1637, 0, 0, 0, 0, 1635, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 297,
	298, 300, 299, 301, 302, 303, 304, 0, 305, 306,
	0, 0, 0, 0, 0, 689, 0, 0, 0, 307,
	0, 308, 309, 1297, 310, 311, 312, 313, 314, 315,
	316, 690, 691, 0, 317, 692, 318, 693, 0, 694,
	319, 320, 321, 322, 323, 324, 0, 0, 0, 325,
	695, 696, 697, 0, 326, 327, 698, 0, 1602, 0,
	328, 329, 330, 331, 332, 333, 334, 335, 0, 0,
	337, 338, 339, 336, 340, 0, 341, 0, 342, 343,
	344, 345, 346, 347, 0, 348, 349, 350, 1298, 351,
	352, 353, 0, 0, 0, 0, 0, 0, 0, 354,
	355, 356, 357, 358, 0, 359, 361, 699, 700, 0,
	364, 360, 362, 0, 365, 363, 366, 0, 367, 368,
	369, 0, 0, 370, 371, 372, 0, 373, 374, 375,
	0, 376, 377, 378, 0, 379, 380, 701, 381, 382,
	383, 385, 387, 384, 386, 388, 389, 390, 391, 702,
	703, 392, 0, 294, 0, 0, 0, 0, 0, 393,
	394, 395, 704, 0, 0, 0, 396, 0, 397, 398,
	399, 0, 400, 401, 0, 1299, 402, 403, 404, 705,
	706, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	0, 414, 707, 0, 708, 415, 0, 416, 417, 418,
	419, 420, 421, 422, 709, 710, 711, 511, 1301, 423,
	424, 0, 425, 426, 427, 428, 429, 0, 0, 0,
	0, 430, 431, 432, 0, 1300, 512, 433, 712, 713,
	0, 714, 0, 434, 435, 1302, 715, 1303, 436, 437,
	438, 1304, 439, 0, 0, 0, 440, 441, 442, 443,
	444, 445, 0, 446, 448, 447, 0, 449, 716, 1305,
	450, 451, 1306, 0, 452, 453, 454, 455, 456, 457,
	460, 0, 0, 458, 459, 461, 462, 0, 463, 464,
	466, 469, 465, 467, 468, 470, 483, 484, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	486, 0, 485, 1307, 487, 488, 489, 490, 491, 498,
	500, 501, 496, 497, 499, 502, 503, 505, 493, 494,
	495, 1308, 504, 492, 0, 0, 1309, 506, 507, 508,
	509, 3832, 717, 510, 718, 513, 514, 0, 0, 515,
	0, 516, 0, 0, 518, 519, 520, 0, 0, 521,
	522, 719, 1310, 523, 1311, 720, 524, 525, 517, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 0, 535,
	536, 721, 537, 538, 539, 722, 540, 541, 542, 723,
	543, 724, 544, 545, 0, 546, 547, 548, 0, 549,
	550, 551, 552, 553, 554, 555, 556, 725, 557, 558,
	560, 559, 561, 0, 562, 0, 563, 564, 565, 0,
	0, 0, 0, 0, 566, 567, 569, 0, 570, 571,
	572, 573, 568, 574, 575, 576, 577, 578, 579, 0,
	580, 581, 582, 1312, 583, 584, 585, 586, 587, 726,
	588, 0, 589, 590, 597, 598, 599, 591, 592, 593,
	600, 601, 602, 603, 604, 0, 606, 607, 605, 608,
	609, 610, 0, 611, 612, 594, 595, 613, 614, 1313,
	615, 616, 617, 618, 619, 620, 621, 727, 0, 622,
	0, 623, 624, 625, 626, 627, 629, 596, 630, 635,
	636, 728, 631, 632, 633, 634, 729, 638, 639, 640,
	0, 641, 642, 0, 637, 628, 0, 643, 644, 645,
	646, 647, 648, 0, 649, 650, 0, 651, 730, 731,
	732, 733, 0, 662, 0, 652, 654, 655, 656, 734,
	657, 735, 0, 658, 659, 660, 661, 653, 663, 664,
	0, 0, 665, 666, 668, 670, 671, 667, 669, 672,
	0, 673, 0, 0, 674, 675, 676, 736, 737, 738,
	0, 678, 677, 679, 680, 681, 739, 682, 683, 0,
	0, 0, 0, 684, 685, 740, 686, 687, 688, 1817,
	0, 1638, 1637, 0, 0, 0, 0, 1635, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 297, 298,
	300, 299, 301, 302, 303, 304, 0, 305, 306, 0,
	0, 0, 0, 0, 689, 0, 0, 0, 307, 0,
	308, 309, 1297, 310, 311, 312, 313, 314, 315, 316,
	690, 691, 0, 317, 692, 318, 693, 0, 694, 319,
	320, 321, 322, 323, 324, 0, 0, 0, 325, 695,
	696, 697, 0, 326, 327, 698, 0, 1602, 0, 328,
	329, 330, 331, 332, 333, 334, 335, 0, 0, 337,
	338, 339, 336, 340, 0, 341, 0, 342, 343, 344,
	345, 346, 347, 0, 348, 349, 350, 1298, 351, 352,
	353, 0, 0, 0, 0, 0, 0, 0, 354, 355,
	356, 357, 358, 0, 359, 361, 699, 700, 0, 364,
	360, 362, 0, 365, 363, 366, 0, 367, 368, 369,
	0, 0, 370, 371, 372, 0, 373, 374, 375, 0,
	376, 377, 378, 0, 379, 380, 701, 381, 382, 383,
	385, 387, 384, 386, 388, 389, 390, 391, 702, 703,
	392, 0, 294, 0, 0, 0, 0, 0, 1815, 394,
	395, 704, 0, 0, 0, 396, 0, 397, 398, 399,
	0, 400, 401, 0, 1299, 402, 403, 404, 705, 706,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 0,
	414, 707, 0, 708, 415, 0, 416, 417, 418, 419,
	420, 421, 422, 709, 710, 711, 511, 1301, 423, 424,
	0, 425, 426, 427, 428, 429, 0, 0, 0, 0,
	430, 431, 432, 0, 1300, 512, 433, 712, 713, 0,
	714, 0, 434, 435, 1302, 715, 1303, 436, 437, 438,
	1304, 439, 0, 0, 0, 440, 441, 442, 443, 444,
	445, 0, 446, 448, 447, 0, 449, 716, 1305, 450,
	451, 1306, 0, 452, 453, 454, 455, 456, 457, 460,
	0, 0, 458, 459, 461, 462, 0, 463, 464, 466,
	469, 465, 467, 468, 470, 483, 484, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 486,
	0, 485, 1307, 487, 488, 489, 490, 491, 498, 500,
	501, 496, 497, 499, 502, 503, 505, 493, 494, 495,
	1308, 504, 492, 0, 0, 1309, 506, 507, 508, 509,
	0, 717, 510, 718, 513, 514, 0, 0, 515, 0,
	516, 0, 0, 518, 519, 520, 0, 0, 521, 522,
	719, 1310, 523, 1311, 720, 524, 525, 517, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 0, 535, 536,
	721, 537, 538, 539, 722, 540, 541, 542, 723, 543,
	724, 544, 545, 0, 546, 547, 548, 0, 549, 550,
	551, 552, 553, 554, 1816, 556, 725, 557, 558, 560,
	559, 561, 0, 562, 0, 563, 564, 565, 0, 0,
	0, 0, 0, 566, 567, 569, 0, 570, 571, 572,
	573, 568, 574, 575, 576, 577, 578, 579, 0, 580,
	581, 582, 1312, 583, 584, 585, 586, 587, 726, 588,
	0, 589, 590, 597, 598, 599, 591, 592, 593, 600,
	1814, 602, 603, 604, 0, 606, 607, 605, 608, 609,
	610, 0, 611, 612, 594, 595, 613, 614, 1313, 615,
	616, 617, 618, 619, 620, 621, 727, 0, 622, 0,
	623, 624, 625, 626, 627, 629, 596, 630, 635, 636,
	728, 631, 632, 633, 634, 729, 638, 639, 640, 0,
	641, 642, 0, 637, 628, 0, 643, 644, 645, 646,
	647, 648, 0, 649, 650, 0, 651, 730, 731, 732,
	733, 0, 662, 0, 652, 654, 655, 656, 734, 657,
	735, 0, 658, 659, 660, 661, 653, 663, 664, 0,
	0, 665, 666, 668, 670, 671, 667, 669, 672, 0,
	673, 0, 0, 674, 675, 676, 736, 737, 738, 0,
	678, 677, 679, 680, 681, 739, 682, 683, 0, 0,
	0, 0, 684, 685, 740, 686, 687, 688, 1689, 0,
	1638, 1637, 0, 0, 0, 0, 1635, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 297, 298, 300,
	299, 301, 302, 303, 304, 0, 305, 306, 0, 0,
	0, 0, 0, 689, 0, 0, 0, 307, 0, 308,
	309, 1297, 310, 311, 312, 313, 314, 315, 316, 690,
	691, 0, 317, 692, 318, 693, 0, 694, 319, 320,
	321, 322, 323, 324, 0, 0, 0, 325, 695, 696,
	697, 0, 326, 327, 698, 0, 1602, 0, 328, 329,
	330, 331, 332, 333, 334, 335, 0, 0, 337, 338,
	339, 336, 340, 0, 341, 0, 342, 343, 344, 345,
	346, 347, 0, 348, 349, 350, 1298, 351, 352, 353,
	0, 0, 0, 0, 0, 0, 0, 354, 355, 356,
	357, 358, 0, 359, 361, 699, 700, 0, 364, 360,
	362, 0, 365, 363, 366, 0, 367, 368, 369, 0,
	0, 370, 371, 372, 0, 373, 374, 375, 0, 376,
	377, 378, 0, 379, 380, 701, 381, 382, 383, 385,
	387, 384, 386, 388, 389, 390, 391, 702, 703, 392,
	0, 294, 0, 0, 0, 0, 0, 393, 394, 395,
	704, 0, 0, 0, 396, 0, 397, 398, 399, 0,
	400, 401, 0, 1299, 402, 403, 404, 705, 706, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 0, 414,
	707, 0, 708, 415, 0, 416, 417, 418, 419, 420,
	421, 422, 1691, 710, 711, 511, 1301, 423, 424, 0,
	425, 426, 427, 428, 429, 0, 0, 0, 0, 430,
	431, 432, 0, 1300, 512, 433, 712, 713, 0, 714,
	0, 434, 435, 1302, 715, 1303, 436, 437, 438, 1304,
	439, 0, 0, 0, 440, 441, 442, 443, 444, 445,
	0, 446, 448, 447, 0, 449, 716, 1305, 450, 451,
	1306, 0, 452, 453, 454, 455, 456, 457, 460, 0,
	0, 458, 459, 461, 462, 0, 463, 464, 466, 469,
	465, 467, 468, 470, 483, 484, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 486, 0,
	485, 1307, 487, 488, 489, 490, 491, 498, 500, 501,
	496, 497, 499, 502, 503, 505, 493, 494, 495, 1308,
	504, 492, 0, 0, 1309, 506, 507, 508, 509, 0,
	717, 510, 718, 513, 514, 0, 0, 515, 0, 516,
	0, 0, 518, 519, 520, 0, 0, 521, 522, 719,
	1310, 523, 1311, 720, 524, 525, 517, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 0, 535, 536, 721,
	537, 538, 539, 722, 540, 541, 542, 723, 543, 724,
	544, 545, 0, 546, 547, 548, 0, 549, 550, 551,
	552, 553, 554, 555, 556, 725, 557, 558, 560, 559,
	561, 0, 562, 0, 563, 564, 565, 0, 0, 0,
	0, 0, 566, 567, 569, 0, 570, 571, 572, 573,
	568, 574, 575, 576, 577, 578, 579, 0, 580, 581,
	582, 1312, 583, 584, 585, 586, 587, 726, 588, 0,
	589, 590, 597, 598, 599, 591, 592, 593, 600, 601,
	602, 603, 604, 0, 606, 607, 605, 608, 609, 610,
	0, 611, 612, 594, 595, 613, 614, 1313, 615, 616,
	617, 618, 619, 620, 621, 727, 0, 622, 0, 623,
	624, 625, 626, 627, 629, 596, 630, 635, 636, 728,
	631, 632, 633, 634, 729, 638, 639, 640, 0, 641,
	642, 0, 637, 628, 0, 643, 644, 645, 646, 647,
	648, 0, 649, 650, 0, 651, 730, 731, 732, 733,
	0, 662, 0, 652, 654, 655, 656, 734, 657, 735,
	0, 658, 659, 660, 661, 653, 663, 664, 0, 0,
	665, 666, 668, 670, 671, 667, 669, 672, 0, 673,
	0, 0, 674, 675, 676, 736, 737, 738, 0, 678,
	677, 679, 680, 681, 739, 682, 683, 0, 0, 0,
	0, 684, 685, 740, 686, 687, 688, 1633, 0, 1638,
	1637, 0, 0, 0, 0, 1635, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 297, 298, 300, 299,
	301, 302, 303, 304, 0, 305, 306, 0, 0, 0,
	0, 0, 689, 0, 0, 0, 307, 0, 308, 309,
	1297, 310, 311, 312, 313, 314, 315, 316, 690, 691,
	0, 317, 692, 318, 693, 0, 694, 319, 320, 321,
	322, 323, 324, 0, 0, 0, 325, 695, 696, 697,
	0, 326, 327, 698, 0, 1602, 0, 328, 329, 330,
	331, 332, 333, 334, 335, 0, 0, 337, 338, 339,
	336, 340, 0, 341, 0, 342, 343, 344, 345, 346,
	347, 0, 348, 349, 350, 1298, 351, 352, 353, 0,
	0, 0, 0, 0, 0, 0, 354, 355, 356, 357,
	358, 0, 359, 361, 699, 700, 0, 364, 360, 362,
	0, 365, 363, 366, 0, 367, 368, 369, 0, 0,
	370, 371, 372, 0, 373, 374, 375, 0, 376, 377,
	378, 0, 379, 380, 701, 381, 382, 383, 385, 387,
	384, 386, 388, 389, 390, 391, 702, 703, 392, 0,
	294, 0, 0, 0, 0, 0, 393, 394, 395, 704,
	0, 0, 0, 396, 0, 397, 398, 399, 0, 400,
	401, 0, 1299, 402, 403, 404, 705, 706, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 0, 414, 707,
	0, 708, 415, 0, 416, 417, 418, 419, 420, 421,
	422, 709, 710, 711, 511, 1301, 423, 424, 0, 425,
	426, 427, 428, 429, 0, 0, 0, 0, 430, 431,
	432, 0, 1300, 512, 433, 712, 713, 0, 714, 0,
	434, 435, 1302, 715, 1303, 436, 437, 438, 1304, 439,
	0, 0, 0, 440, 441, 442, 443, 444, 445, 0,
	446, 448, 447, 0, 449, 716, 1305, 450, 451, 1306,
	0, 452, 453, 454, 455, 456, 457, 460, 0, 0,
	458, 459, 461, 462, 0, 463, 464, 466, 469, 465,
	467, 468, 470, 483, 484, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 486, 0, 485,
	1307, 487, 488, 489, 490, 491, 498, 500, 501, 496,
	497, 499, 502, 503, 505, 493, 494, 495, 1308, 504,
	492, 0, 0, 1309, 506, 507, 508, 509, 0, 717,
	510, 718, 513, 514, 0, 0, 515, 0, 516, 0,
	0, 518, 519, 520, 0, 0, 521, 522, 719, 1310,
	523, 1311, 720, 524, 525, 517, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 0, 535, 536, 721, 537,
	538, 539, 722, 540, 541, 542, 723, 543, 724, 544,
	545, 0, 546, 547, 548, 0, 549, 550, 551, 552,
	553, 554, 555, 556, 725, 557, 558, 560, 559, 561,
	0, 562, 0, 563, 564, 565, 0, 0, 0, 0,
	0, 566, 567, 569, 0, 570, 571, 572, 573, 568,
	574, 575, 576, 577, 578, 579, 0, 580, 581, 582,
	1312, 583, 584, 585, 586, 587, 726, 588, 0, 589,
	590, 597, 598, 599, 591, 592, 593, 600, 601, 602,
	603, 604, 0, 606, 607, 605, 608, 609, 610, 0,
	611, 612, 594, 595, 613, 614, 1313, 615, 616, 617,
	618, 619, 620, 621, 727, 0, 622, 0, 623, 624,
	625, 626, 627, 629, 596, 630, 635, 636, 728, 631,
	632, 633, 634, 729, 638, 639, 640, 0, 641, 642,
	0, 637, 628, 0, 643, 644, 645, 646, 647, 648,
	0, 649, 650, 0, 651, 730, 731, 732, 733, 0,
	662, 0, 652, 654, 655, 656, 734, 657, 735, 0,
	658, 659, 660, 661, 653, 663, 664, 0, 0, 665,
	666, 668, 670, 671, 667, 669, 672, 0, 673, 0,
	0, 674, 675, 676, 736, 737, 738, 0, 678, 677,
	679, 680, 681, 739, 682, 683, 0, 0, 0, 0,
	684, 685, 740, 686, 687, 688, 1638, 1637, 0, 0,
	0, 0, 1635, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 297, 298, 300, 299, 301, 302, 303,
	304, 0, 305, 306, 0, 0, 0, 0, 0, 689,
	0, 0, 0, 307, 0, 308, 309, 1297, 310, 311,
	312, 313, 314, 315, 316, 690, 691, 0, 317, 692,
	318, 693, 0, 694, 319, 320, 321, 322, 323, 324,
	0, 0, 0, 325, 695, 696, 697, 0, 326, 327,
	698, 0, 1602, 0, 328, 329, 330, 331, 332, 333,
	334, 335, 0, 0, 337, 338, 339, 336, 340, 0,
	341, 0, 342, 343, 344, 345, 346, 347, 0, 348,
	349, 350, 1298, 351, 352, 353, 0, 0, 0, 0,
	0, 0, 0, 354, 355, 356, 357, 358, 0, 359,
	361, 699, 700, 0, 364, 360, 362, 0, 365, 363,
	366, 0, 367, 368, 369, 0, 0, 370, 371, 372,
	0, 373, 374, 375, 0, 376, 377, 378, 0, 379,
	380, 701, 381, 382, 383, 385, 387, 384, 386, 388,
	389, 390, 391, 702, 703, 392, 0, 294, 0, 0,
	0, 0, 0, 393, 394, 395, 704, 0, 0, 0,
	396, 0, 397, 398, 399, 0, 400, 401, 0, 1299,
	402, 403, 404, 705, 706, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 0, 414, 707, 0, 708, 415,
	0, 416, 417, 418, 419, 420, 421, 422, 709, 710,
	711, 511, 1301, 423, 424, 0, 425, 426, 427, 428,
	429, 0, 0, 0, 0, 430, 431, 432, 0, 1300,
	512, 433, 712, 713, 0, 714, 0, 434, 435, 1302,
	715, 1303, 436, 437, 438, 1304, 439, 0, 0, 0,
	440, 441, 442, 443, 444, 445, 0, 446, 448, 447,
	0, 449, 716, 1305, 450, 451, 1306, 0, 452, 453,
	454, 455, 456, 457, 460, 0, 0, 458, 459, 461,
	462, 0, 463, 464, 466, 469, 465, 467, 468, 470,
	483, 484, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 486, 0, 485, 1307, 487, 488,
	489, 490, 491, 498, 500, 501, 496, 497, 499, 502,
	503, 505, 493, 494, 495, 1308, 504, 492, 0, 0,
	1309, 506, 507, 508, 509, 0, 717, 510, 718, 513,
	514, 0, 0, 515, 0, 516, 0, 0, 518, 519,
	520, 0, 0, 521, 522, 719, 1310, 523, 1311, 720,
	524, 525, 517, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 0, 535, 536, 721, 537, 538, 539, 722,
	540, 541, 542, 723, 543, 724, 544, 545, 0, 546,
	547, 548, 0, 549, 550, 551, 552, 553, 554, 555,
	556, 725, 557, 558, 560, 559, 561, 0, 562, 0,
	563, 564, 565, 0, 0, 0, 0, 0, 566, 567,
	569, 0, 570, 571, 572, 573, 568, 574, 575, 576,
	577, 578, 579, 0, 580, 581, 582, 1312, 583, 584,
	585, 586, 587, 726, 588, 0, 589, 590, 597, 598,
	599, 591, 592, 593, 600, 601, 602, 603, 604, 0,
	606, 607, 605, 608, 609, 610, 0, 611, 612, 594,
	595, 613, 614, 1313, 615, 616, 617, 618, 619, 620,
	621, 727, 0, 622, 0, 623, 624, 625, 626, 627,
	629, 596, 630, 635, 636, 728, 631, 632, 633, 634,
	729, 638, 639, 640, 0, 641, 642, 0, 637, 628,
	0, 643, 644, 645, 646, 647, 648, 0, 649, 650,
	0, 651, 730, 731, 732, 733, 0, 662, 0, 652,
	654, 655, 656, 734, 657, 735, 0, 658, 659, 660,
	661, 653, 663, 664, 0, 0, 665, 666, 668, 670,
	671, 667, 669, 672, 0, 673, 0, 0, 674, 675,
	676, 736, 737, 738, 0, 678, 677, 679, 680, 681,
	739, 682, 683, 1638, 1637, 0, 0, 684, 685, 740,
	686, 687, 688, 0, 0, 0, 0, 0, 0, 0,
	297, 298, 300, 299, 301, 302, 303, 304, 0, 305,
	306, 0, 0, 0, 0, 0, 689, 0, 0, 0,
	307, 0, 308, 309, 1297, 310, 311, 312, 313, 314,
	315, 316, 690, 691, 0, 317, 692, 318, 693, 0,
	694, 319, 320, 321, 322, 323, 324, 0, 0, 0,
	325, 695, 696, 697, 0, 326, 327, 698, 0, 1602,
	0, 328, 329, 330, 331, 332, 333, 334, 335, 0,
	0, 337, 338, 339, 336, 340, 0, 341, 0, 342,
	343, 344, 345, 346, 347, 0, 348, 349, 350, 1298,
	351, 352, 353, 0, 0, 0, 0, 0, 0, 0,
	354, 355, 356, 357, 358, 0, 359, 361, 699, 700,
	0, 364, 360, 362, 0, 365, 363, 366, 0, 367,
	368, 369, 0, 0, 370, 371, 372, 0, 373, 374,
	375, 0, 376, 377, 378, 0, 379, 380, 701, 381,
	382, 383, 385, 387, 384, 386, 388, 389, 390, 391,
	702, 703, 392, 0, 294, 0, 0, 0, 0, 0,
	393, 394, 395, 704, 0, 0, 0, 396, 0, 397,
	398, 399, 0, 400, 401, 0, 1299, 402, 403, 404,
	705, 706, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 0, 414, 707, 0, 708, 415, 0, 416, 417,
	418, 419, 420, 421, 422, 709, 710, 711, 511, 1301,
	423, 424, 0, 425, 426, 427, 428, 429, 0, 0,
	0, 0, 430, 431, 432, 0, 1300, 512, 433, 712,
	713, 0, 714, 0, 434, 435, 1302, 715, 1303, 436,
	437, 438, 1304, 439, 0, 0, 0, 440, 441, 442,
	443, 444, 445, 0, 446, 448, 447, 0, 449, 716,
	1305, 450, 451, 1306, 0, 452, 453, 454, 455, 456,
	457, 460, 0, 0, 458, 459, 461, 462, 0, 463,
	464, 466, 469, 465, 467, 468, 470, 483, 484, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 486, 0, 485, 1307, 487, 488, 489, 490, 491,
	498, 500, 501, 496, 497, 499, 502, 503, 505, 493,
	494, 495, 1308, 504, 492, 0, 0, 1309, 506, 507,
	508, 509, 0, 717, 510, 718, 513, 514, 0, 0,
	515, 0, 516, 0, 0, 518, 519, 520, 0, 0,
	521, 522, 719, 1310, 523, 1311, 720, 524, 525, 517,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 0,
	535, 536, 721, 537, 538, 539, 722, 540, 541, 542,
	723, 543, 724, 544, 545, 0, 546, 547, 548, 0,
	549, 550, 551, 552, 553, 554, 555, 556, 725, 557,
	558, 560, 559, 561, 0, 562, 0, 563, 564, 565,
	0, 0, 0, 0, 0, 566, 567, 569, 0, 570,
	571, 572, 573, 568, 574, 575, 576, 577, 578, 579,
	0, 580, 581, 582, 1312, 583, 584, 585, 586, 587,
	726, 588, 0, 589, 590, 597, 598, 599, 591, 592,
	593, 600, 601, 602, 603, 604, 0, 606, 607, 605,
	608, 609, 610, 0, 611, 612, 594, 595, 613, 614,
	1313, 615, 616, 617, 618, 619, 620, 621, 727, 0,
	622, 0, 623, 624, 625, 626, 627, 629, 596, 630,
	635, 636, 728, 631, 632, 633, 634, 729, 638, 639,
	640, 0, 641, 642, 0, 637, 628, 0, 643, 644,
	645, 646, 647, 648, 0, 649, 650, 0, 651, 730,
	731, 732, 733, 0, 662, 0, 652, 654, 655, 656,
	734, 657, 735, 0, 658, 659, 660, 661, 653, 663,
	664, 0, 0, 665, 666, 668, 670, 671, 667, 669,
	672, 0, 673, 0, 0, 674, 675, 676, 736, 737,
	738, 0, 678, 677, 679, 680, 681, 739, 682, 683,
	1638, 0, 0, 0, 684, 685, 740, 686, 687, 688,
	0, 0, 0, 0, 0, 0, 0, 297, 298, 300,
	299, 301, 302, 303, 304, 0, 305, 306, 0, 0,
	0, 0, 0, 689, 0, 0, 0, 307, 0, 308,
	309, 1297, 310, 311, 312, 313, 314, 315, 316, 690,
	691, 0, 317, 692, 318, 693, 0, 694, 319, 320,
	321, 322, 323, 324, 0, 0, 0, 325, 695, 696,
	697, 0, 326, 327, 698, 0, 1602, 0, 328, 329,
	330, 331, 332, 333, 334, 335, 0, 0, 337, 338,
	339, 336, 340, 0, 341, 0, 342, 343, 344, 345,
	346, 347, 0, 348, 349, 350, 1298, 351, 352, 353,
	0, 0, 0, 0, 0, 0, 0, 354, 355, 356,
	357, 358, 0, 359, 361, 699, 700, 0, 364, 360,
	362, 0, 365, 363, 366, 0, 367, 368, 369, 0,
	0, 370, 371, 372, 0, 373, 374, 375, 0, 376,
	377, 378, 0, 379, 380, 701, 381, 382, 383, 385,
	387, 384, 386, 388, 389, 390, 391, 702, 703, 392,
	0, 294, 0, 0, 0, 0, 0, 393, 394, 395,
	704, 0, 0, 0, 396, 0, 397, 398, 399, 0,
	400, 401, 0, 1299, 402, 403, 404, 705, 706, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 0, 414,
	707, 0, 708, 415, 0, 416, 417, 418, 419, 420,
	421, 422, 709, 710, 711, 511, 1301, 423, 424, 0,
	425, 426, 427, 428, 429, 0, 0, 0, 0, 430,
	431, 432, 0, 1300, 512, 433, 712, 713, 0, 714,
	0, 434, 435, 1302, 715, 1303, 436, 437, 438, 1304,
	439, 0, 0, 0, 440, 441, 442, 443, 444, 445,
	0, 446, 448, 447, 0, 449, 716, 1305, 450, 451,
	1306, 0, 452, 453, 454, 455, 456, 457, 460, 0,
	0, 458, 459, 461, 462, 0, 463, 464, 466, 469,
	465, 467, 468, 470, 483, 484, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 486, 0,
	485, 1307, 487, 488, 489, 490, 491, 498, 500, 501,
	496, 497, 499, 502, 503, 505, 493, 494, 495, 1308,
	504, 492, 0, 0, 1309, 506, 507, 508, 509, 0,
	717, 510, 718, 513, 514, 0, 0, 515, 0, 516,
	0, 0, 518, 519, 520, 0, 0, 521, 522, 719,
	1310, 523, 1311, 720, 524, 525, 517, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 0, 535, 536, 721,
	537, 538, 539, 722, 540, 541, 542, 723, 543, 724,
	544, 545, 0, 546, 547, 548, 0, 549, 550, 551,
	552, 553, 554, 555, 556, 725, 557, 558, 560, 559,
	561, 0, 562, 0, 563, 564, 565, 0, 0, 0,
	0, 0, 566, 567, 569, 0, 570, 571, 572, 573,
	568, 574, 575, 576, 577, 578, 579, 0, 580, 581,
	582, 1312, 583, 584, 585, 586, 587, 726, 588, 0,
	589, 590, 597, 598, 599, 591, 592, 593, 600, 601,
	602, 603, 604, 0, 606, 607, 605, 608, 609, 610,
	0, 611, 612, 594, 595, 613, 614, 1313, 615, 616,
	617, 618, 619, 620, 621, 727, 0, 622, 0, 623,
	624, 625, 626, 627, 629, 596, 630, 635, 636, 728,
	631, 632, 633, 634, 729, 638, 639, 640, 0, 641,
	642, 0, 637, 628, 0, 643, 644, 645, 646, 647,
	648, 0, 649, 650, 0, 651, 730, 731, 732, 733,
	0, 662, 0, 652, 654, 655, 656, 734, 657, 735,
	0, 658, 659, 660, 661, 653, 663, 664, 0, 0,
	665, 666, 668, 670, 671, 667, 669, 672, 0, 673,
	0, 0, 674, 675, 676, 736, 737, 738, 0, 678,
	677, 679, 680, 681, 739, 682, 683, 291, 0, 0,
	0, 684, 685, 740, 686, 687, 688, 0, 0, 0,
	0, 0, 0, 0, 297, 298, 300, 299, 301, 302,
	303, 304, 0, 305, 306, 0, 0, 0, 0, 0,
	689, 0, 0, 0, 307, 0, 308, 309, 0, 310,
	311, 312, 313, 314, 315, 316, 690, 691, 0, 317,
	692, 318, 693, 0, 694, 319, 320, 321, 322, 323,
	324, 0, 0, 0, 325, 695, 696, 697, 3101, 326,
	327, 698, 0, 0, 0, 328, 329, 330, 331, 332,
	333, 334, 335, 0, 0, 337, 338, 339, 336, 340,
	3874, 341, 0, 342, 343, 344, 345, 346, 347, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 0, 0,
	0, 0, 0, 0, 354, 355, 356, 357, 358, 0,
	359, 361, 699, 700, 0, 364, 360, 362, 0, 365,
	363, 366, 0, 367, 368, 369, 0, 0, 370, 371,
	372, 0, 373, 374, 375, 0, 376, 377, 378, 0,
	3105, 380, 701, 381, 382, 383, 385, 387, 384, 386,
	388, 389, 390, 391, 702, 703, 392, 0, 3873, 0,
	0, 0, 0, 0, 393, 394, 395, 704, 0, 0,
	0, 396, 0, 397, 398, 399, 3104, 400, 401, 0,
	0, 402, 403, 404, 705, 706, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 0, 414, 707, 0, 708,
	415, 0, 416, 417, 418, 419, 420, 421, 422, 709,
	710, 711, 511, 0, 423, 424, 0, 425, 426, 427,
	428, 429, 0, 0, 0, 3870, 430, 431, 432, 0,
	0, 512, 433, 712, 713, 0, 714, 0, 434, 3872,
	0, 715, 0, 436, 437, 438, 0, 439, 0, 0,
	0, 440, 441, 442, 443, 444, 445, 0, 446, 448,
	447, 0, 449, 716, 0, 450, 451, 3869, 0, 452,
	453, 454, 455, 456, 457, 460, 0, 0, 458, 459,
	461, 462, 0, 463, 464, 466, 469, 465, 467, 468,
	470, 483, 484, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 486, 0, 485, 0, 487,
	488, 489, 490, 491, 498, 500, 501, 496, 497, 499,
	502, 503, 505, 493, 494, 495, 0, 504, 492, 0,
	0, 0, 506, 507, 508, 509, 0, 717, 510, 718,
	513, 514, 0, 0, 515, 0, 516, 0, 0, 518,
	519, 520, 0, 0, 521, 522, 719, 0, 523, 0,
	720, 524, 525, 517, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 0, 535, 536, 721, 537, 538, 539,
	722, 540, 541, 542, 723, 543, 724, 544, 545, 3103,
	546, 547, 548, 0, 549, 550, 551, 552, 553, 554,
	555, 556, 725, 557, 558, 560, 559, 561, 0, 562,
	0, 563, 564, 565, 0, 0, 0, 0, 0, 566,
	567, 569, 0, 570, 571, 572, 573, 568, 574, 575,
	576, 577, 578, 579, 0, 580, 581, 582, 0, 583,
	584, 585, 586, 587, 726, 588, 0, 589, 590, 597,
	598, 599, 591, 592, 593, 600, 601, 602, 603, 604,
	0, 606, 607, 605, 608, 609, 610, 0, 611, 612,
	594, 595, 613, 614, 0, 615, 616, 617, 618, 619,
	620, 621, 727, 0, 622, 0, 623, 624, 625, 626,
	627, 629, 596, 630, 635, 636, 728, 631, 632, 633,
	634, 729, 638, 639, 640, 0, 641, 642, 0, 637,
	628, 0, 643, 644, 645, 646, 647, 648, 0, 649,
	650, 0, 651, 730, 731, 732, 733, 0, 662, 0,
	652, 654, 655, 656, 734, 657, 735, 0, 658, 659,
	660, 661, 653, 663, 664, 0, 3871, 665, 666, 668,
	670, 671, 667, 669, 672, 0, 673, 0, 0, 674,
	675, 676, 736, 737, 738, 0, 678, 677, 679, 680,
	681, 739, 682, 683, 291, 0, 0, 0, 684, 685,
	740, 686, 687, 688, 0, 0, 0, 0, 0, 0,
	0, 297, 298, 300, 299, 301, 302, 303, 304, 0,
	305, 306, 0, 0, 0, 0, 0, 689, 0, 0,
	0, 307, 0, 308, 309, 0, 310, 311, 312, 313,
	314, 315, 316, 690, 691, 0, 317, 692, 318, 693,
	0, 694, 319, 320, 321, 322, 323, 324, 0, 0,
	0, 325, 695, 696, 697, 3101, 326, 327, 698, 0,
	0, 3095, 328, 329, 330, 331, 332, 333, 334, 335,
	0, 0, 337, 338, 339, 336, 340, 3097, 341, 0,
	342, 343, 344, 345, 346, 347, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 0, 0, 0, 0, 0,
	0, 354, 355, 356, 357, 358, 0, 359, 361, 699,
	700, 0, 364, 360, 362, 0, 365, 363, 366, 0,
	367, 368, 369, 0, 0, 370, 371, 372, 0, 373,
	374, 375, 0, 376, 377, 378, 0, 3105, 380, 701,
	381, 382, 383, 385, 387, 384, 386, 388, 389, 390,
	391, 702, 703, 392, 0, 0, 0, 0, 0, 0,
	0, 393, 394, 395, 704, 0, 0, 0, 396, 0,
	397, 398, 399, 3104, 400, 401, 0, 0, 402, 403,
	404, 705, 706, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 0, 414, 707, 0, 708, 415, 0, 416,
	417, 418, 419, 420, 421, 422, 3094, 710, 711, 511,
	0, 423, 424, 0, 425, 426, 427, 428, 429, 0,
	0, 0, 0, 430, 431, 432, 0, 0, 512, 433,
	712, 713, 0, 714, 0, 434, 435, 0, 715, 0,
	436, 437, 438, 0, 439, 0, 0, 0, 440, 441,
	442, 443, 444, 445, 0, 446, 448, 447, 0, 449,
	716, 0, 450, 451, 0, 0, 452, 453, 454, 455,
	456, 457, 460, 0, 0, 458, 459, 461, 462, 0,
	463, 464, 466, 469, 465, 467, 468, 470, 483, 484,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 486, 0, 485, 0, 487, 488, 489, 490,
	491, 498, 500, 501, 496, 497, 499, 502, 503, 505,
	493, 494, 495, 0, 504, 492, 0, 0, 0, 506,
	507, 508, 509, 0, 717, 510, 718, 513, 514, 0,
	0, 515, 0, 516, 0, 0, 518, 519, 520, 0,
	0, 521, 522, 719, 0, 523, 0, 720, 524, 525,
	517, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	0, 535, 536, 721, 537, 538, 539, 722, 540, 541,
	542, 723, 543, 724, 544, 545, 3103, 546, 547, 548,
	0, 549, 550, 551, 552, 553, 554, 555, 556, 725,
	557, 558, 560, 559, 561, 0, 562, 0, 563, 564,
	565, 0, 0, 0, 0, 0, 566, 567, 569, 0,
	570, 571, 572, 573, 568, 574, 575, 576, 577, 578,
	579, 0, 580, 581, 582, 0, 583, 584, 585, 586,
	587, 726, 588, 0, 589, 590, 597, 598, 599, 591,
	592, 593, 600, 601, 602, 603, 604, 0, 606, 607,
	605, 608, 609, 610, 0, 611, 612, 594, 595, 613,
	614, 0, 615, 616, 617, 618, 619, 620, 621, 727,
	0, 622, 0, 623, 624, 625, 626, 627, 629, 596,
	630, 635, 636, 728, 631, 632, 633, 634, 729, 638,
	639, 640, 0, 641, 642, 0, 637, 628, 0, 643,
	644, 645, 646, 647, 648, 0, 649, 650, 0, 651,
	730, 731, 732, 733, 0, 662, 0, 652, 654, 655,
	656, 734, 657, 735, 0, 658, 659, 660, 661, 653,
	663, 664, 0, 3102, 665, 666, 668, 670, 671, 667,
	669, 672, 0, 673, 0, 0, 674, 675, 676, 736,
	737, 738, 0, 678, 677, 679, 680, 681, 739, 682,
	683, 1897, 0, 291, 0, 684, 685, 740, 686, 687,
	688, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	297, 298, 300, 299, 301, 302, 303, 304, 1896, 305,
	306, 0, 0, 0, 0, 0, 689, 0, 0, 0,
	307, 0, 308, 309, 0, 310, 311, 312, 313, 314,
	315, 316, 690, 691, 0, 317, 692, 318, 693, 0,
	694, 319, 320, 321, 322, 323, 324, 0, 0, 0,
	325, 695, 696, 697, 0, 326, 327, 698, 0, 0,
	0, 328, 329, 330, 331, 332, 333, 334, 335, 0,
	0, 337, 338, 339, 336, 340, 0, 341, 0, 342,
	343, 344, 345, 346, 347, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 0, 0, 0, 0, 0, 0,
	354, 355, 356, 1895, 358, 0, 359, 361, 699, 700,
	0, 364, 360, 362, 0, 365, 363, 366, 0, 367,
	368, 369, 0, 0, 370, 371, 372, 0, 373, 374,
	375, 0, 376, 377, 378, 0, 379, 380, 701, 381,
	382, 383, 385, 387, 384, 386, 388, 389, 390, 391,
	702, 703, 392, 0, 294, 0, 0, 0, 0, 0,
	393, 394, 395, 704, 0, 0, 0, 396, 0, 397,
	398, 399, 0, 400, 401, 0, 0, 402, 403, 404,
	705, 706, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 0, 414, 707, 0, 708, 415, 0, 416, 417,
	418, 419, 420, 421, 422, 709, 710, 711, 511, 0,
	423, 424, 0, 425, 426, 427, 428, 429, 0, 0,
	0, 295, 430, 431, 432, 0, 0, 512, 433, 712,
	713, 0, 714, 0, 434, 435, 0, 715, 0, 436,
	437, 438, 0, 439, 0, 0, 0, 440, 441, 442,
	443, 444, 445, 0, 446, 448, 447, 0, 449, 716,
	0, 450, 451, 0, 0, 452, 453, 454, 455, 456,
	457, 460, 0, 0, 458, 459, 461, 462, 0, 463,
	464, 466, 469, 465, 467, 468, 470, 483, 484, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 486, 0, 485, 0, 487, 488, 489, 490, 491,
	498, 500, 501, 496, 497, 499, 502, 503, 505, 493,
	494, 495, 0, 504, 492, 0, 296, 0, 506, 507,
	508, 509, 0, 717, 510, 718, 513, 514, 0, 0,
	515, 0, 516, 0, 0, 518, 519, 520, 0, 0,
	521, 522, 719, 0, 523, 0, 720, 524, 525, 517,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 0,
	535, 536, 721, 537, 538, 539, 722, 540, 541, 542,
	723, 543, 724, 544, 545, 0, 546, 547, 548, 0,
	549, 550, 551, 552, 553, 554, 555, 556, 725, 557,
	558, 560, 559, 561, 0, 562, 0, 563, 564, 565,
	0, 0, 0, 0, 0, 566, 567, 569, 0, 570,
	571, 572, 573, 568, 574, 575, 576, 577, 578, 579,
	0, 580, 581, 582, 0, 583, 584, 585, 586, 587,
	726, 588, 0, 589, 590, 597, 598, 599, 1898, 592,
	593, 600, 601, 602, 603, 604, 0, 1894, 607, 605,
	608, 609, 610, 0, 611, 612, 594, 595, 613, 614,
	0, 615, 616, 617, 618, 619, 620, 621, 727, 0,
	622, 0, 623, 624, 625, 626, 627, 629, 596, 630,
	635, 636, 728, 631, 632, 633, 634, 729, 638, 639,
	640, 0, 641, 642, 0, 637, 628, 1892, 643, 644,
	645, 646, 647, 648, 0, 649, 650, 0, 651, 730,
	731, 732, 733, 0, 662, 0, 652, 654, 655, 656,
	734, 657, 735, 0, 658, 659, 660, 661, 653, 663,
	664, 0, 0, 665, 666, 668, 670, 671, 667, 669,
	672, 0, 673, 0, 0, 674, 675, 676, 736, 737,
	738, 0, 1893, 677, 679, 680, 681, 739, 682, 683,
	1606, 0, 291, 0, 684, 685, 740, 686, 687, 688,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 297,
	298, 300, 299, 301, 302, 303, 304, 0, 305, 306,
	0, 0, 0, 0, 0, 689, 0, 0, 0, 307,
	0, 308, 309, 0, 310, 311, 312, 313, 314, 315,
	316, 690, 691, 0, 317, 692, 318, 693, 0, 694,
	319, 320, 321, 322, 323, 324, 0, 0, 0, 325,
	695, 696, 697, 0, 326, 327, 698, 0, 0, 0,
	328, 329, 330, 331, 332, 333, 334, 335, 0, 0,
	337, 338, 339, 336, 340, 0, 341, 0, 342, 343,
	344, 345, 346, 347, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 0, 0, 0, 0, 0, 0, 354,
	355, 356, 357, 358, 0, 359, 361, 699, 700, 0,
	364, 360, 362, 0, 365, 363, 366, 0, 367, 368,
	369, 0, 0, 370, 371, 372, 0, 373, 374, 375,
	0, 376, 377, 378, 0, 379, 380, 701, 381, 382,
	383, 385, 387, 384, 386, 388, 389, 390, 391, 702,
	703, 392, 0, 294, 0, 0, 0, 0, 0, 393,
	394, 395, 704, 0, 0, 0, 396, 0, 397, 398,
	399, 0, 400, 401, 0, 0, 402, 403, 404, 705,
	706, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	0, 414, 707, 0, 708, 415, 0, 416, 417, 418,
	419, 420, 421, 422, 1608, 710, 711, 511, 0, 423,
	424, 0, 425, 426, 427, 428, 429, 0, 0, 0,
	295, 430, 431, 432, 0, 0, 512, 433, 712, 713,
	0, 714, 0, 434, 435, 0, 715, 0, 436, 437,
	438, 0, 439, 0, 0, 0, 440, 441, 442, 443,
	444, 445, 0, 446, 448, 447, 0, 449, 716, 0,
	450, 451, 0, 0, 452, 453, 454, 455, 456, 457,
	460, 0, 0, 458, 459, 461, 462, 0, 463, 464,
	466, 469, 465, 467, 468, 470, 483, 484, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	486, 0, 485, 0, 487, 488, 489, 490, 491, 498,
	500, 501, 496, 497, 499, 502, 503, 505, 493, 494,
	495, 0, 504, 492, 0, 296, 0, 506, 507, 508,
	509, 0, 717, 510, 718, 513, 514, 0, 0, 515,
	0, 516, 0, 1348, 518, 519, 520, 0, 0, 521,
	522, 719, 0, 523, 0, 720, 524, 525, 517, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 0, 535,
	536, 721, 537, 538, 539, 722, 540, 541, 542, 723,
	543, 724, 544, 545, 0, 546, 547, 548, 0, 549,
	550, 551, 552, 553, 554, 555, 556, 725, 557, 558,
	560, 559, 561, 0, 562, 0, 563, 564, 565, 0,
	0, 0, 0, 0, 566, 567, 569, 0, 570, 571,
	572, 573, 568, 574, 575, 576, 577, 578, 579, 0,
	580, 581, 582, 0, 583, 584, 585, 586, 587, 726,
	588, 0, 589, 590, 597, 598, 599, 591, 592, 593,
	600, 601, 602, 603, 604, 0, 606, 607, 605, 608,
	609, 610, 0, 611, 612, 594, 595, 613, 614, 0,
	615, 616, 617, 618, 619, 620, 621, 727, 0, 622,
	0, 623, 624, 625, 626, 627, 629, 596, 630, 635,
	636, 728, 631, 632, 633, 634, 729, 638, 639, 640,
	0, 641, 642, 0, 637, 628, 0, 643, 644, 645,
	646, 647, 648, 0, 649, 650, 0, 651, 730, 731,
	732, 733, 0, 662, 0, 652, 654, 655, 656, 734,
	657, 735, 0, 658, 659, 660, 661, 653, 663, 664,
	0, 0, 665, 666, 668, 670, 671, 667, 669, 672,
	0, 673, 0, 0, 674, 675, 676, 736, 737, 738,
	0, 678, 677, 679, 680, 681, 739, 682, 683, 1603,
	0, 291, 0, 684, 685, 740, 686, 687, 688, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 297, 298,
	300, 299, 301, 302, 303, 304, 0, 305, 306, 0,
	0, 0, 0, 0, 689, 0, 0, 0, 307, 0,
	308, 309, 0, 310, 311, 312, 313, 314, 315, 316,
	690, 691, 0, 317, 692, 318, 693, 0, 694, 319,
	320, 321, 322, 323, 324, 0, 0, 0, 325, 695,
	696, 697, 0, 326, 327, 698, 0, 0, 0, 328,
	329, 330, 331, 332, 333, 334, 335, 0, 0, 337,
	338, 339, 336, 340, 0, 341, 0, 342, 343, 344,
	345, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 0, 0, 0, 0, 0, 0, 354, 355,
	356, 357, 358, 0, 359, 361, 699, 700, 0, 364,
	360, 362, 0, 365, 363, 366, 0, 367, 368, 369,
	0, 0, 370, 371, 372, 0, 373, 374, 375, 0,
	376, 377, 378, 0, 379, 380, 701, 381, 382, 383,
	385, 387, 384, 386, 388, 389, 390, 391, 702, 703,
	392, 0, 294, 0, 0, 0, 0, 0, 393, 394,
	395, 704, 0, 0, 0, 396, 0, 397, 398, 399,
	0, 400, 401, 0, 0, 402, 403, 404, 705, 706,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 0,
	414, 707, 0, 708, 415, 0, 416, 417, 418, 419,
	420, 421, 422, 1605, 710, 711, 511, 0, 423, 424,
	0, 425, 426, 427, 428, 429, 0, 0, 0, 295,
	430, 431, 432, 0, 0, 512, 433, 712, 713, 0,
	714, 0, 434, 435, 0, 715, 0, 436, 437, 438,
	0, 439, 0, 0, 0, 440, 441, 442, 443, 444,
	445, 0, 446, 448, 447, 0, 449, 716, 0, 450,
	451, 0, 0, 452, 453, 454, 455, 456, 457, 460,
	0, 0, 458, 459, 461, 462, 0, 463, 464, 466,
	469, 465, 467, 468, 470, 483, 484, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 486,
	0, 485, 0, 487, 488, 489, 490, 491, 498, 500,
	501, 496, 497, 499, 502, 503, 505, 493, 494, 495,
	0, 504, 492, 0, 296, 0, 506, 507, 508, 509,
	0, 717, 510, 718, 513, 514, 0, 0, 515, 0,
	516, 0, 1348, 518, 519, 520, 0, 0, 521, 522,
	719, 0, 523, 0, 720, 524, 525, 517, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 0, 535, 536,
	721, 537, 538, 539, 722, 540, 541, 542, 723, 543,
	724, 544, 545, 0, 546, 547, 548, 0, 549, 550,
	551, 552, 553, 554, 555, 556, 725, 557, 558, 560,
	559, 561, 0, 562, 0, 563, 564, 565, 0, 0,
	0, 0, 0, 566, 567, 569, 0, 570, 571, 572,
	573, 568, 574, 575, 576, 577, 578, 579, 0, 580,
	581, 582, 0, 583, 584, 585, 586, 587, 726, 588,
	0, 589, 590, 597, 598, 599, 591, 592, 593, 600,
	601, 602, 603, 604, 0, 606, 607, 605, 608, 609,
	610, 0, 611, 612, 594, 595, 613, 614, 0, 615,
	616, 617, 618, 619, 620, 621, 727, 0, 622, 0,
	623, 624, 625, 626, 627, 629, 596, 630, 635, 636,
	728, 631, 632, 633, 634, 729, 638, 639, 640, 0,
	641, 642, 0, 637, 628, 0, 643, 644, 645, 646,
	647, 648, 0, 649, 650, 0, 651, 730, 731, 732,
	733, 0, 662, 0, 652, 654, 655, 656, 734, 657,
	735, 0, 658, 659, 660, 661, 653, 663, 664, 0,
	0, 665, 666, 668, 670, 671, 667, 669, 672, 0,
	673, 0, 0, 674, 675, 676, 736, 737, 738, 0,
	678, 677, 679, 680, 681, 739, 682, 683, 1509, 0,
	291, 0, 684, 685, 740, 686, 687, 688, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 297, 298, 300,
	299, 301, 302, 303, 304, 0, 305, 306, 0, 0,
	0, 0, 0, 689, 0, 0, 0, 307, 0, 308,
	309, 0, 310, 311, 312, 313, 314, 315, 316, 690,
	691, 0, 317, 692, 318, 693, 0, 694, 319, 320,
	321, 322, 323, 324, 0, 0, 0, 325, 695, 696,
	697, 0, 326, 327, 698, 0, 0, 0, 328, 329,
	330, 331, 332, 333, 334, 335, 0, 0, 337, 338,
	339, 336, 340, 0, 341, 0, 342, 343, 344, 345,
	346, 347, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 0, 0, 0, 0, 0, 0, 354, 355, 356,
	357, 358, 0, 359, 361, 699, 700, 0, 364, 360,
	362, 0, 365, 363, 366, 0, 367, 368, 369, 0,
	0, 370, 371, 372, 0, 373, 374, 375, 0, 376,
	377, 378, 0, 379, 380, 701, 381, 382, 383, 385,
	387, 384, 386, 388, 389, 390, 391, 702, 703, 392,
	0, 294, 0, 0, 0, 0, 0, 393, 394, 395,
	704, 0, 0, 0, 396, 0, 397, 398, 399, 0,
	400, 401, 0, 0, 402, 403, 404, 705, 706, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 0, 414,
	707, 0, 708, 415, 0, 416, 417, 418, 419, 420,
	421, 422, 1511, 710, 711, 511, 0, 423, 424, 0,
	425, 426, 427, 428, 429, 0, 0, 0, 295, 430,
	431, 432, 0, 0, 512, 433, 712, 713, 0, 714,
	0, 434, 435, 0, 715, 0, 436, 437, 438, 0,
	439, 0, 0, 0, 440, 441, 442, 443, 444, 445,
	0, 446, 448, 447, 0, 449, 716, 0, 450, 451,
	0, 0, 452, 453, 454, 455, 456, 457, 460, 0,
	0, 458, 459, 461, 462, 0, 463, 464, 466, 469,
	465, 467, 468, 470, 483, 484, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 486, 0,
	485, 0, 487, 488, 489, 490, 491, 498, 500, 501,
	496, 497, 499, 502, 503, 505, 493, 494, 495, 0,
	504, 492, 0, 296, 0, 506, 507, 508, 509, 0,
	717, 510, 718, 513, 514, 0, 0, 515, 0, 516,
	0, 1348, 518, 519, 520, 0, 0, 521, 522, 719,
	0, 523, 0, 720, 524, 525, 517, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 0, 535, 536, 721,
	537, 538, 539, 722, 540, 541, 542, 723, 543, 724,
	544, 545, 0, 546, 547, 548, 0, 549, 550, 551,
	552, 553, 554, 555, 556, 725, 557, 558, 560, 559,
	561, 0, 562, 0, 563, 564, 565, 0, 0, 0,
	0, 0, 566, 567, 569, 0, 570, 571, 572, 573,
	568, 574, 575, 576, 577, 578, 579, 0, 580, 581,
	582, 0, 583, 584, 585, 586, 587, 726, 588, 0,
	589, 590, 597, 598, 599, 591, 592, 593, 600, 601,
	602, 603, 604, 0, 606, 607, 605, 608, 609, 610,
	0, 611, 612, 594, 595, 613, 614, 0, 615, 616,
	617, 618, 619, 620, 621, 727, 0, 622, 0, 623,
	624, 625, 626, 627, 629, 596, 630, 635, 636, 728,
	631, 632, 633, 634, 729, 638, 639, 640, 0, 641,
	642, 0, 637, 628, 0, 643, 644, 645, 646, 647,
	648, 0, 649, 650, 0, 651, 730, 731, 732, 733,
	0, 662, 0, 652, 654, 655, 656, 734, 657, 735,
	0, 658, 659, 660, 661, 653, 663, 664, 0, 0,
	665, 666, 668, 670, 671, 667, 669, 672, 0, 673,
	0, 0, 674, 675, 676, 736, 737, 738, 0, 678,
	677, 679, 680, 681, 739, 682, 683, 775, 0, 291,
	0, 684, 685, 740, 686, 687, 688, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 297, 298, 300, 299,
	301, 773, 303, 304, 762, 305, 306, 0, 0, 0,
	0, 0, 689, 0, 0, 0, 307, 0, 308, 309,
	0, 310, 311, 312, 313, 314, 315, 316, 690, 691,
	0, 317, 692, 318, 693, 0, 694, 319, 320, 321,
	322, 323, 324, 0, 0, 0, 325, 695, 696, 697,
	0, 326, 327, 698, 0, 0, 0, 328, 329, 330,
	331, 332, 333, 334, 335, 0, 0, 337, 338, 339,
	336, 340, 0, 341, 0, 342, 343, 344, 345, 346,
	347, 765, 348, 349, 350, 0, 351, 352, 353, 0,
	0, 0, 0, 0, 0, 0, 354, 355, 356, 357,
	358, 0, 359, 361, 699, 700, 0, 364, 360, 362,
	0, 365, 363, 366, 0, 367, 368, 369, 0, 0,
	370, 371, 372, 0, 373, 374, 375, 0, 376, 377,
	378, 0, 379, 380, 701, 381, 382, 383, 385, 387,
	384, 386, 388, 389, 390, 391, 702, 703, 392, 0,
	0, 0, 0, 0, 0, 0, 393, 394, 395, 704,
	0, 0, 0, 396, 0, 397, 398, 399, 0, 400,
	401, 0, 0, 402, 403, 404, 705, 706, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 771, 414, 707,
	0, 708, 415, 0, 416, 417, 418, 419, 420, 421,
	422, 709, 710, 711, 511, 0, 423, 424, 0, 425,
	426, 427, 428, 429, 0, 0, 0, 0, 430, 431,
	432, 0, 0, 512, 433, 712, 713, 0, 714, 0,
	434, 435, 0, 715, 0, 436, 437, 438, 0, 439,
	0, 0, 0, 440, 441, 442, 443, 444, 445, 0,
	446, 448, 447, 0, 449, 716, 0, 450, 451, 0,
	0, 452, 453, 454, 455, 456, 457, 460, 0, 0,
	458, 459, 461, 462, 0, 463, 464, 466, 469, 465,
	467, 468, 470, 483, 484, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 486, 0, 485,
	0, 487, 488, 489, 490, 491, 498, 500, 501, 496,
	497, 499, 502, 503, 505, 493, 494, 495, 0, 504,
	492, 0, 0, 0, 506, 507, 508, 509, 0, 717,
	510, 718, 513, 514, 0, 0, 515, 0, 516, 0,
	0, 518, 519, 520, 0, 0, 521, 522, 719, 0,
	523, 0, 720, 524, 525, 517, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 0, 535, 536, 721, 537,
	538, 539, 722, 540, 541, 542, 723, 543, 724, 544,
	545, 0, 546, 547, 548, 0, 549, 550, 551, 552,
	553, 554, 555, 556, 725, 557, 558, 560, 559, 561,
	0, 562, 0, 563, 564, 565, 0, 0, 0, 0,
	0, 566, 567, 569, 0, 570, 571, 572, 573, 568,
	574, 575, 576, 577, 578, 579, 0, 580, 581, 582,
	0, 583, 584, 585, 586, 587, 726, 588, 0, 589,
	590, 597, 598, 599, 591, 592, 593, 600, 601, 602,
	603, 604, 767, 606, 607, 605, 608, 609, 610, 0,
	611, 612, 594, 595, 613, 614, 0, 615, 616, 617,
	618, 619, 620, 621, 727, 0, 622, 0, 623, 624,
	625, 626, 627, 629, 596, 630, 635, 636, 728, 631,
	632, 633, 634, 729, 638, 639, 640, 0, 641, 774,
	0, 637, 628, 0, 643, 644, 645, 646, 647, 648,
	0, 649, 650, 0, 651, 730, 731, 732, 733, 0,
	662, 0, 652, 654, 655, 656, 734, 657, 735, 0,
	658, 659, 660, 661, 653, 663, 664, 0, 0, 665,
	666, 668, 670, 671, 667, 669, 672, 0, 673, 0,
	0, 674, 675, 676, 736, 737, 738, 0, 678, 677,
	679, 680, 681, 739, 682, 683, 761, 0, 291, 0,
	684, 685, 740, 686, 687, 688, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 297, 298, 300, 299, 301,
	302, 303, 304, 762, 305, 306, 0, 0, 0, 0,
	0, 689, 0, 0, 0, 307, 0, 308, 309, 0,
	310, 311, 312, 313, 314, 315, 316, 690, 691, 0,
	317, 692, 318, 693, 0, 694, 319, 320, 321, 322,
	323, 324, 0, 0, 0, 325, 695, 696, 697, 0,
	326, 327, 698, 0, 0, 0, 328, 329, 330, 331,
	332, 333, 334, 335, 0, 0, 337, 338, 339, 336,
	340, 0, 341, 0, 342, 343, 344, 345, 346, 347,
	765, 348, 349, 350, 0, 351, 352, 353, 0, 0,
	0, 0, 0, 0, 0, 354, 355, 356, 357, 358,
	0, 359, 361, 699, 700, 0, 364, 360, 362, 0,
	365, 363, 366, 0, 367, 368, 369, 0, 0, 370,
	371, 372, 0, 373, 374, 375, 0, 376, 377, 378,
	0, 379, 380, 701, 381, 382, 383, 385, 387, 384,
	386, 388, 389, 390, 391, 702, 703, 392, 0, 0,
	0, 0, 0, 0, 0, 393, 394, 395, 704, 0,
	0, 0, 396, 0, 397, 398, 399, 0, 400, 401,
	0, 0, 402, 403, 404, 705, 706, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 766, 414, 707, 0,
	708, 415, 0, 416, 417, 418, 419, 420, 421, 422,
	709, 710, 711, 511, 0, 423, 424, 0, 425, 426,
	427, 428, 429, 0, 0, 0, 0, 430, 431, 432,
	0, 0, 512, 433, 712, 713, 0, 714, 0, 434,
	435, 0, 715, 0, 436, 437, 438, 0, 439, 0,
	0, 0, 440, 441, 442, 443, 444, 445, 0, 446,
	448, 447, 0, 449, 716, 0, 450, 451, 0, 0,
	452, 453, 454, 455, 456, 457, 460, 0, 0, 458,
	459, 461, 462, 0, 463, 464, 466, 469, 465, 467,
	468, 470, 483, 484, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 486, 0, 485, 0,
	487, 488, 489, 490, 491, 498, 500, 501, 496, 497,
	499, 502, 503, 505, 493, 494, 495, 0, 504, 492,
	0, 0, 0, 506, 507, 508, 509, 0, 717, 510,
	718, 513, 514, 0, 0, 515, 0, 516, 0, 0,
	518, 519, 520, 0, 0, 521, 522, 719, 0, 523,
	0, 720, 524, 525, 517, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 0, 535, 536, 721, 537, 538,
	539, 722, 540, 541, 542, 723, 543, 724, 544, 545,
	0, 546, 547, 548, 0, 549, 550, 551, 552, 553,
	554, 555, 556, 725, 557, 558, 560, 559, 561, 0,
	562, 0, 563, 564, 565, 0, 0, 0, 0, 0,
	566, 567, 569, 0, 570, 571, 572, 573, 568, 574,
	575, 576, 577, 578, 579, 0, 580, 581, 582, 0,
	583, 584, 585, 586, 587, 726, 588, 0, 589, 590,
	597, 598, 599, 591, 592, 593, 600, 601, 602, 603,
	604, 767, 606, 607, 605, 608, 609, 610, 0, 611,
	612, 594, 595, 613, 614, 0, 615, 616, 617, 618,
	619, 620, 621, 727, 0, 622, 0, 623, 624, 625,
	626, 627, 629, 596, 630, 635, 636, 728, 631, 632,
	633, 634, 729, 638, 639, 640, 0, 641, 760, 0,
	637, 628, 0, 643, 644, 645, 646, 647, 648, 0,
	649, 650, 0, 651, 730, 731, 732, 733, 0, 662,
	0, 652, 654, 655, 656, 734, 657, 735, 0, 658,
	659, 660, 661, 653, 663, 664, 0, 0, 665, 666,
	668, 670, 671, 667, 669, 672, 0, 673, 0, 0,
	674, 675, 676, 736, 737, 738, 0, 678, 677, 679,
	680, 681, 739, 682, 683, 291, 0, 0, 0, 684,
	685, 740, 686, 687, 688, 0, 0, 0, 0, 0,
	0, 0, 297, 298, 300, 299, 301, 302, 303, 304,
	762, 305, 306, 0, 0, 0, 0, 0, 689, 0,
	0, 0, 307, 0, 308, 309, 0, 310, 311, 312,
	313, 314, 315, 316, 690, 691, 0, 317, 692, 318,
	693, 0, 694, 319, 320, 321, 322, 323, 324, 0,
	0, 0, 325, 695, 696, 697, 0, 326, 327, 698,
	0, 0, 0, 328, 329, 330, 331, 332, 333, 334,
	335, 0, 0, 337, 338, 339, 336, 340, 0, 341,
	0, 342, 343, 344, 345, 346, 347, 765, 348, 349,
	350, 0, 351, 352, 353, 0, 0, 0, 0, 0,
	0, 0, 354, 355, 356, 357, 358, 0, 359, 361,
	699, 700, 0, 364, 360, 362, 0, 365, 363, 366,
	0, 367, 368, 369, 0, 0, 370, 371, 372, 0,
	373, 374, 375, 0, 376, 377, 378, 0, 379, 380,
	701, 381, 382, 383, 385, 387, 384, 386, 388, 389,
	390, 391, 702, 703, 392, 0, 0, 0, 0, 0,
	0, 0, 393, 394, 395, 704, 0, 0, 0, 396,
	0, 397, 398, 399, 0, 400, 401, 0, 0, 402,
	403, 404, 705, 706, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 766, 414, 707, 0, 708, 415, 0,
	416, 417, 418, 419, 420, 421, 422, 709, 710, 711,
	511, 0, 423, 424, 0, 425, 426, 427, 428, 429,
	0, 0, 0, 0, 430, 431, 432, 0, 0, 512,
	433, 712, 713, 0, 714, 0, 434, 435, 0, 715,
	0, 436, 437, 438, 0, 439, 0, 0, 0, 440,
	441, 442, 443, 444, 445, 0, 446, 448, 447, 0,
	449, 716, 0, 450, 451, 0, 0, 452, 453, 454,
	455, 456, 457, 460, 0, 0, 458, 459, 461, 462,
	0, 463, 464, 466, 469, 465, 467, 468, 470, 483,
	484, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 486, 0, 485, 0, 487, 488, 489,
	490, 491, 498, 500, 501, 496, 497, 499, 502, 503,
	505, 493, 494, 495, 0, 504, 492, 0, 0, 0,
	506, 507, 508, 509, 0, 717, 510, 718, 513, 514,
	0, 0, 515, 0, 516, 0, 0, 518, 519, 520,
	0, 0, 521, 522, 719, 0, 523, 0, 720, 524,
	525, 517, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 0, 535, 536, 721, 537, 538, 539, 722, 540,
	541, 542, 723, 543, 724, 544, 545, 0, 546, 547,
	548, 0, 549, 550, 551, 552, 553, 554, 555, 556,
	725, 557, 558, 560, 559, 561, 0, 562, 0, 563,
	564, 565, 0, 0, 0, 0, 0, 566, 567, 569,
	0, 570, 571, 572, 573, 568, 574, 575, 576, 577,
	578, 579, 0, 580, 581, 582, 0, 583, 584, 585,
	586, 587, 726, 588, 0, 589, 590, 597, 598, 599,
	591, 592, 593, 600, 601, 602, 603, 604, 767, 606,
	607, 605, 608, 609, 610, 0, 611, 612, 594, 595,
	613, 614, 0, 615, 616, 617, 618, 619, 620, 621,
	727, 0, 622, 0, 623, 624, 625, 626, 627, 629,
	596, 630, 635, 636, 728, 631, 632, 633, 634, 729,
	638, 639, 640, 0, 641, 642, 0, 637, 628, 0,
	643, 644, 645, 646, 647, 648, 0, 649, 650, 0,
	651, 730, 731, 732, 733, 0, 662, 0, 652, 654,
	655, 656, 734, 657, 735, 0, 658, 659, 660, 661,
	653, 663, 664, 0, 0, 665, 666, 668, 670, 671,
	667, 669, 672, 0, 673, 0, 0, 674, 675, 676,
	736, 737, 738, 0, 678, 677, 679, 680, 681, 739,
	682, 683, 291, 0, 0, 0, 684, 685, 740, 686,
	687, 688, 0, 0, 0, 0, 0, 0, 0, 297,
	298, 300, 299, 301, 302, 303, 304, 762, 305, 306,
	0, 0, 0, 0, 0, 689, 0, 0, 0, 307,
	0, 308, 309, 0, 310, 311, 312, 313, 314, 315,
	316, 690, 691, 0, 317, 692, 318, 693, 0, 694,
	319, 320, 321, 322, 323, 324, 0, 0, 0, 325,
	695, 696, 697, 0, 326, 327, 698, 0, 0, 0,
	328, 329, 330, 331, 332, 333, 334, 335, 0, 0,
	337, 338, 339, 336, 340, 0, 341, 0, 342, 343,
	344, 345, 346, 347, 765, 348, 349, 350, 0, 351,
	352, 353, 0, 0, 0, 0, 0, 0, 0, 354,
	355, 356, 357, 358, 0, 359, 361, 699, 700, 0,
	364, 360, 362, 0, 365, 363, 366, 0, 367, 368,
	369, 0, 0, 370, 371, 372, 0, 373, 374, 375,
	0, 376, 377, 378, 0, 379, 380, 701, 381, 382,
	383, 385, 387, 384, 386, 388, 389, 390, 391, 702,
	703, 392, 0, 0, 0, 0, 0, 0, 0, 393,
	394, 395, 704, 0, 0, 0, 396, 0, 397, 398,
	399, 0, 400, 401, 0, 0, 402, 403, 404, 705,
	706, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	4288, 414, 707, 0, 708, 415, 0, 416, 417, 418,
	419, 420, 421, 422, 709, 710, 711, 511, 0, 423,
	424, 0, 425, 426, 427, 428, 429, 0, 0, 0,
	0, 430, 431, 432, 0, 0, 512, 433, 712, 713,
	0, 714, 0, 434, 435, 0, 715, 0, 436, 437,
	438, 0, 439, 0, 0, 0, 440, 441, 442, 443,
	444, 445, 0, 446, 448, 447, 0, 449, 716, 0,
	450, 451, 0, 0, 452, 453, 454, 455, 456, 457,
	460, 0, 0, 458, 459, 461, 462, 0, 463, 464,
	466, 469, 465, 467, 468, 470, 483, 484, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	486, 0, 485, 0, 487, 488, 489, 490, 491, 498,
	500, 501, 496, 497, 499, 502, 503, 505, 493, 494,
	495, 0, 504, 492, 0, 0, 0, 506, 507, 508,
	509, 0, 717, 510, 718, 513, 514, 0, 0, 515,
	0, 516, 0, 0, 518, 519, 520, 0, 0, 521,
	522, 719, 0, 523, 0, 720, 524, 525, 517, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 0, 535,
	536, 721, 537, 538, 539, 722, 540, 541, 542, 723,
	543, 724, 544, 545, 0, 546, 547, 548, 0, 549,
	550, 551, 552, 553, 554, 555, 556, 725, 557, 558,
	560, 559, 561, 0, 562, 0, 563, 564, 565, 0,
	0, 0, 0, 0, 566, 567, 569, 0, 570, 571,
	572, 573, 568, 574, 575, 576, 577, 578, 579, 0,
	580, 581, 582, 0, 583, 584, 585, 586, 587, 726,
	588, 0, 589, 590, 597, 598, 599, 591, 592, 593,
	600, 601, 602, 603, 604, 767, 606, 607, 605, 608,
	609, 610, 0, 611, 612, 594, 595, 613, 614, 0,
	615, 616, 617, 618, 619, 620, 621, 727, 0, 622,
	0, 623, 624, 625, 626, 627, 629, 596, 630, 635,
	636, 728, 631, 632, 633, 634, 729, 638, 639, 640,
	0, 641, 642, 0, 637, 628, 0, 643, 644, 645,
	646, 647, 648, 0, 649, 650, 0, 651, 730, 731,
	732, 733, 0, 662, 0, 652, 654, 655, 656, 734,
	657, 735, 0, 658, 659, 660, 661, 653, 663, 664,
	0, 0, 665, 666, 668, 670, 671, 667, 669, 672,
	0, 673, 0, 0, 674, 675, 676, 736, 737, 738,
	0, 678, 677, 679, 680, 681, 739, 682, 683, 291,
	0, 0, 0, 684, 685, 740, 686, 687, 688, 0,
	0, 0, 0, 0, 0, 0, 297, 298, 300, 299,
	301, 302, 303, 304, 0, 305, 306, 0, 0, 0,
	0, 0, 689, 0, 0, 0, 307, 0, 308, 309,
	0, 310, 311, 312, 313, 314, 315, 316, 690, 691,
	0, 317, 692, 318, 693, 0, 694, 319, 320, 321,
	322, 323, 324, 0, 0, 0, 325, 695, 696, 697,
	0, 326, 327, 698, 0, 0, 0, 328, 329, 330,
	331, 332, 333, 334, 335, 0, 0, 337, 338, 339,
	336, 340, 0, 341, 0, 342, 343, 344, 345, 346,
	347, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	0, 0, 0, 0, 0, 0, 354, 355, 356, 357,
	358, 0, 359, 361, 699, 700, 0, 364, 360, 362,
	0, 365, 363, 366, 0, 367, 368, 369, 0, 0,
	370, 371, 372, 0, 373, 374, 375, 0, 376, 377,
	378, 0, 379, 380, 701, 381, 382, 383, 385, 387,
	384, 386, 388, 389, 390, 391, 702, 703, 392, 0,
	294, 0, 0, 0, 0, 0, 393, 394, 395, 704,
	0, 0, 0, 396, 0, 397, 398, 399, 0, 400,
	401, 0, 0, 402, 403, 404, 705, 706, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 0, 414, 707,
	0, 708, 415, 0, 416, 417, 418, 419, 420, 421,
	422, 709, 710, 711, 511, 0, 423, 424, 0, 425,
	426, 427, 428, 429, 0, 0, 0, 295, 430, 431,
	432, 0, 0, 512, 433, 712, 713, 0, 714, 0,
	434, 435, 0, 715, 0, 436, 437, 438, 0, 439,
	0, 0, 0, 440, 441, 442, 443, 444, 445, 0,
	446, 448, 447, 0, 449, 716, 0, 450, 451, 0,
	0, 452, 453, 454, 455, 456, 457, 460, 0, 0,
	458, 459, 461, 462, 0, 463, 464, 466, 469, 465,
	467, 468, 470, 483, 484, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 486, 0, 485,
	0, 487, 488, 489, 490, 491, 498, 500, 501, 496,
	497, 499, 502, 503, 505, 493, 494, 495, 0, 504,
	492, 0, 296, 0, 506, 507, 508, 509, 0, 717,
	510, 718, 513, 514, 0, 0, 515, 0, 516, 0,
	0, 518, 519, 520, 0, 0, 521, 522, 719, 0,
	523, 0, 720, 524, 525, 517, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 0, 535, 536, 721, 537,
	538, 539, 722, 540, 541, 542, 723, 543, 724, 544,
	545, 0, 546, 547, 548, 0, 549, 550, 551, 552,
	553, 554, 555, 556, 725, 557, 558, 560, 559, 561,
	0, 562, 0, 563, 564, 565, 0, 0, 0, 0,
	0, 566, 567, 569, 0, 570, 571, 572, 573, 568,
	574, 575, 576, 577, 578, 579, 0, 580, 581, 582,
	0, 583, 584, 585, 586, 587, 726, 588, 0, 589,
	590, 597, 598, 599, 591, 592, 593, 600, 601, 602,
	603, 604, 0, 606, 607, 605, 608, 609, 610, 0,
	611, 612, 594, 595, 613, 614, 0, 615, 616, 617,
	618, 619, 620, 621, 727, 0, 622, 0, 623, 624,
	625, 626, 627, 629, 596, 630, 635, 636, 728, 631,
	632, 633, 634, 729, 638, 639, 640, 0, 641, 642,
	0, 637, 628, 2468, 643, 644, 645, 646, 647, 648,
	0, 649, 650, 0, 651, 730, 731, 732, 733, 0,
	662, 0, 652, 654, 655, 656, 734, 657, 735, 0,
	658, 659, 660, 661, 653, 663, 664, 0, 0, 665,
	666, 668, 670, 671, 667, 669, 672, 0, 673, 0,
	0, 674, 675, 676, 736, 737, 738, 0, 678, 677,
	679, 680, 681, 739, 682, 683, 291, 0, 0, 0,
	684, 685, 740, 686, 687, 688, 0, 0, 0, 0,
	0, 0, 0, 297, 298, 300, 299, 301, 302, 303,
	304, 0, 305, 306, 0, 0, 0, 0, 0, 689,
	0, 0, 0, 307, 0, 308, 309, 0, 310, 311,
	312, 313, 314, 315, 316, 690, 691, 0, 317, 692,
	318, 693, 0, 694, 319, 320, 321, 322, 323, 324,
	0, 0, 0, 325, 695, 696, 697, 0, 326, 327,
	698, 0, 0, 0, 328, 329, 330, 331, 332, 333,
	334, 335, 0, 0, 337, 338, 339, 336, 340, 0,
	341, 0, 342, 343, 344, 345, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 0, 0, 0,
	0, 0, 0, 354, 355, 356, 357, 358, 0, 359,
	361, 699, 700, 0, 364, 360, 362, 0, 365, 363,
	366, 0, 367, 368, 369, 0, 0, 370, 371, 372,
	0, 373, 374, 375, 0, 376, 377, 378, 0, 379,
	380, 701, 381, 382, 383, 385, 387, 384, 386, 388,
	389, 390, 391, 702, 703, 392, 0, 294, 0, 0,
	0, 0, 0, 393, 394, 395, 704, 0, 0, 0,
	396, 0, 397, 398, 399, 0, 400, 401, 0, 0,
	402, 403, 404, 705, 706, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 0, 414, 707, 0, 708, 415,
	0, 416, 417, 418, 419, 420, 421, 422, 709, 710,
	711, 511, 0, 423, 424, 0, 425, 426, 427, 428,
	429, 0, 0, 0, 295, 430, 431, 432, 0, 0,
	512, 433, 712, 713, 0, 714, 0, 434, 435, 0,
	715, 0, 436, 437, 438, 0, 439, 0, 0, 0,
	440, 441, 442, 443, 444, 445, 0, 446, 448, 447,
	0, 449, 716, 0, 450, 451, 0, 0, 452, 453,
	454, 455, 456, 457, 460, 0, 0, 458, 459, 461,
	462, 0, 463, 464, 466, 469, 465, 467, 468, 470,
	483, 484, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 486, 0, 485, 0, 487, 488,
	489, 490, 491, 498, 500, 501, 496, 497, 499, 502,
	503, 505, 493, 494, 495, 0, 504, 492, 0, 296,
	0, 506, 507, 508, 509, 0, 717, 510, 718, 513,
	514, 0, 0, 515, 0, 516, 0, 1348, 518, 519,
	520, 0, 0, 521, 522, 719, 0, 523, 0, 720,
	524, 525, 517, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 0, 535, 536, 721, 537, 538, 539, 722,
	540, 541, 542, 723, 543, 724, 544, 545, 0, 546,
	547, 548, 0, 549, 550, 551, 552, 553, 554, 555,
	556, 725, 557, 558, 560, 559, 561, 0, 562, 0,
	563, 564, 565, 0, 0, 0, 0, 0, 566, 567,
	569, 0, 570, 571, 572, 573, 568, 574, 575, 576,
	577, 578, 579, 0, 580, 581, 582, 0, 583, 584,
	585, 586, 587, 726, 588, 0, 589, 590, 597, 598,
	599, 591, 592, 593, 600, 601, 602, 603, 604, 0,
	606, 607, 605, 608, 609, 610, 0, 611, 612, 594,
	595, 613, 614, 0, 615, 616, 617, 618, 619, 620,
	621, 727, 0, 622, 0, 623, 624, 625, 626, 627,
	629, 596, 630, 635, 636, 728, 631, 632, 633, 634,
	729, 638, 639, 640, 0, 641, 642, 0, 637, 628,
	0, 643, 644, 645, 646, 647, 648, 0, 649, 650,
	0, 651, 730, 731, 732, 733, 0, 662, 0, 652,
	654, 655, 656, 734, 657, 735, 0, 658, 659, 660,
	661, 653, 663, 664, 0, 0, 665, 666, 668, 670,
	671, 667, 669, 672, 0, 673, 0, 0, 674, 675,
	676, 736, 737, 738, 0, 678, 677, 679, 680, 681,
	739, 682, 683, 291, 0, 0, 0, 684, 685, 740,
	686, 687, 688, 0, 0, 0, 0, 0, 0, 0,
	297, 298, 300, 299, 301, 302, 303, 304, 0, 305,
	306, 0, 0, 0, 0, 0, 689, 0, 0, 0,
	307, 0, 308, 309, 0, 310, 311, 312, 313, 314,
	315, 316, 690, 691, 0, 317, 692, 318, 693, 0,
	694, 319, 320, 321, 322, 323, 324, 0, 0, 0,
	325, 695, 696, 697, 0, 326, 327, 698, 0, 0,
	0, 328, 329, 330, 331, 332, 333, 334, 335, 0,
	0, 337, 338, 339, 336, 340, 0, 341, 0, 342,
	343, 344, 345, 346, 347, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 0, 0, 0, 0, 0, 0,
	354, 355, 356, 357, 358, 0, 359, 361, 699, 700,
	0, 364, 360, 362, 0, 365, 363, 366, 0, 367,
	368, 369, 0, 0, 370, 371, 372, 0, 373, 374,
	375, 0, 376, 377, 378, 0, 379, 380, 701, 381,
	382, 383, 385, 387, 384, 386, 388, 389, 390, 391,
	702, 703, 392, 0, 294, 0, 0, 0, 0, 0,
	393, 394, 395, 704, 0, 0, 0, 396, 0, 397,
	398, 399, 0, 400, 401, 0, 0, 402, 403, 404,
	705, 706, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 0, 414, 707, 0, 708, 415, 0, 416, 417,
	418, 419, 420, 421, 422, 709, 710, 711, 511, 0,
	423, 424, 0, 425, 426, 427, 428, 429, 0, 0,
	0, 295, 430, 431, 432, 0, 0, 512, 433, 712,
	713, 0, 714, 0, 434, 435, 0, 715, 0, 436,
	437, 438, 0, 439, 0, 0, 0, 440, 441, 442,
	443, 444, 445, 0, 446, 448, 447, 0, 449, 716,
	0, 450, 451, 0, 0, 452, 453, 454, 455, 456,
	457, 460, 0, 0, 458, 459, 461, 462, 0, 463,
	464, 466, 469, 465, 467, 468, 470, 483, 484, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 486, 0, 485, 0, 487, 488, 489, 490, 491,
	498, 500, 501, 496, 497, 499, 502, 503, 505, 493,
	494, 495, 3767, 504, 492, 0, 296, 0, 506, 507,
	508, 509, 0, 717, 510, 718, 513, 514, 0, 0,
	515, 0, 516, 0, 0, 518, 519, 520, 0, 0,
	521, 522, 719, 0, 523, 0, 720, 524, 525, 517,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 0,
	535, 536, 721, 537, 538, 539, 722, 540, 541, 542,
	723, 543, 724, 544, 545, 0, 546, 547, 548, 0,
	549, 550, 551, 552, 553, 554, 555, 556, 725, 557,
	558, 560, 559, 561, 0, 562, 0, 563, 564, 565,
	0, 0, 0, 0, 0, 566, 567, 569, 0, 570,
	571, 572, 573, 568, 574, 575, 576, 577, 578, 579,
	0, 580, 581, 582, 0, 583, 584, 585, 586, 587,
	726, 588, 0, 589, 590, 597, 598, 599, 591, 592,
	593, 600, 601, 602, 603, 604, 0, 606, 607, 605,
	608, 609, 610, 0, 611, 612, 594, 595, 613, 614,
	0, 615, 616, 617, 618, 619, 620, 621, 727, 0,
	622, 0, 623, 624, 625, 626, 627, 629, 596, 630,
	635, 636, 728, 631, 632, 633, 634, 729, 638, 639,
	640, 0, 641, 642, 0, 637, 628, 0, 643, 644,
	645, 646, 647, 648, 0, 649, 650, 0, 651, 730,
	731, 732, 733, 0, 662, 0, 652, 654, 655, 656,
	734, 657, 735, 0, 658, 659, 660, 661, 653, 663,
	664, 0, 0, 665, 666, 668, 670, 671, 667, 669,
	672, 0, 673, 0, 0, 674, 675, 676, 736, 737,
	738, 0, 678, 677, 679, 680, 681, 739, 682, 683,
	3293, 0, 291, 0, 684, 685, 740, 686, 687, 688,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 297,
	298, 300, 299, 301, 302, 303, 304, 0, 305, 306,
	0, 0, 0, 0, 0, 689, 0, 0, 0, 307,
	0, 308, 309, 0, 310, 311, 312, 313, 314, 315,
	316, 690, 691, 0, 317, 692, 318, 693, 0, 694,
	319, 320, 321, 322, 323, 324, 0, 0, 0, 325,
	695, 696, 697, 0, 326, 327, 698, 0, 0, 0,
	328, 329, 330, 331, 332, 333, 334, 335, 0, 0,
	337, 338, 339, 336, 340, 0, 341, 0, 342, 343,
	344, 345, 346, 347, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 0, 0, 0, 0, 0, 0, 354,
	355, 356, 357, 358, 0, 359, 361, 699, 700, 0,
	364, 360, 362, 0, 365, 363, 366, 0, 367, 368,
	369, 0, 0, 370, 371, 372, 0, 373, 374, 375,
	0, 376, 377, 378, 0, 379, 380, 701, 381, 382,
	383, 385, 387, 384, 386, 388, 389, 390, 391, 702,
	703, 392, 0, 294, 0, 0, 0, 0, 0, 393,
	394, 395, 704, 0, 0, 0, 396, 0, 397, 398,
	399, 0, 400, 401, 0, 0, 402, 403, 404, 705,
	706, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	0, 414, 707, 0, 708, 415, 0, 416, 417, 418,
	419, 420, 421, 422, 3292, 710, 711, 511, 0, 423,
	424, 0, 425, 426, 427, 428, 429, 0, 0, 0,
	295, 430, 431, 432, 0, 0, 512, 433, 712, 713,
	0, 714, 0, 434, 435, 0, 715, 0, 436, 437,
	438, 0, 439, 0, 0, 0, 440, 441, 442, 443,
	444, 445, 0, 446, 448, 447, 0, 449, 716, 0,
	450, 451, 0, 0, 452, 453, 454, 455, 456, 457,
	460, 0, 0, 458, 459, 461, 462, 0, 463, 464,
	466, 469, 465, 467, 468, 470, 483, 484, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	486, 0, 485, 0, 487, 488, 489, 490, 491, 498,
	500, 501, 496, 497, 499, 502, 503, 505, 493, 494,
	495, 0, 504, 492, 0, 296, 0, 506, 507, 508,
	509, 0, 717, 510, 718, 513, 514, 0, 0, 515,
	0, 516, 0, 0, 518, 519, 520, 0, 0, 521,
	522, 719, 0, 523, 0, 720, 524, 525, 517, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 0, 535,
	536, 721, 537, 538, 539, 722, 540, 541, 542, 723,
	543, 724, 544, 545, 0, 546, 547, 548, 0, 549,
	550, 551, 552, 553, 554, 555, 556, 725, 557, 558,
	560, 559, 561, 0, 562, 0, 563, 564, 565, 0,
	0, 0, 0, 0, 566, 567, 569, 0, 570, 571,
	572, 573, 568, 574, 575, 576, 577, 578, 579, 0,
	580, 581, 582, 0, 583, 584, 585, 586, 587, 726,
	588, 0, 589, 590, 597, 598, 599, 591, 592, 593,
	600, 601, 602, 603, 604, 0, 606, 607, 605, 608,
	609, 610, 0, 611, 612, 594, 595, 613, 614, 0,
	615, 616, 617, 618, 619, 620, 621, 727, 0, 622,
	0, 623, 624, 625, 626, 627, 629, 596, 630, 635,
	636, 728, 631, 632, 633, 634, 729, 638, 639, 640,
	0, 641, 642, 0, 637, 628, 0, 643, 644, 645,
	646, 647, 648, 0, 649, 650, 0, 651, 730, 731,
	732, 733, 0, 662, 0, 652, 654, 655, 656, 734,
	657, 735, 0, 658, 659, 660, 661, 653, 663, 664,
	0, 0, 665, 666, 668, 670, 671, 667, 669, 672,
	0, 673, 0, 0, 674, 675, 676, 736, 737, 738,
	0, 678, 677, 679, 680, 681, 739, 682, 683, 2530,
	0, 291, 0, 684, 685, 740, 686, 687, 688, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 297, 298,
	300, 299, 301, 302, 303, 304, 0, 305, 306, 0,
	0, 0, 0, 0, 689, 0, 0, 0, 307, 0,
	308, 309, 0, 310, 311, 312, 313, 314, 315, 316,
	690, 691, 0, 317, 692, 318, 693, 0, 694, 319,
	320, 321, 322, 323, 324, 0, 0, 0, 325, 695,
	696, 697, 0, 326, 327, 698, 0, 0, 0, 328,
	329, 330, 331, 332, 333, 334, 335, 0, 0, 337,
	338, 339, 336, 340, 0, 341, 0, 342, 343, 344,
	345, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 0, 0, 0, 0, 0, 0, 354, 355,
	356, 357, 358, 0, 359, 361, 699, 700, 0, 364,
	360, 362, 0, 365, 363, 366, 0, 367, 368, 369,
	0, 0, 370, 371, 372, 0, 373, 374, 375, 0,
	376, 377, 378, 0, 379, 380, 701, 381, 382, 383,
	385, 387, 384, 386, 388, 389, 390, 391, 702, 703,
	392, 0, 294, 0, 0, 0, 0, 0, 393, 394,
	395, 704, 0, 0, 0, 396, 0, 397, 398, 399,
	0, 400, 401, 0, 0, 402, 403, 404, 705, 706,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 0,
	414, 707, 0, 708, 415, 0, 416, 417, 418, 419,
	420, 421, 422, 709, 710, 711, 511, 0, 423, 424,
	0, 425, 426, 427, 428, 429, 0, 0, 0, 295,
	430, 431, 432, 0, 0, 512, 433, 712, 713, 0,
	714, 0, 434, 435, 0, 715, 0, 436, 437, 438,
	0, 439, 0, 0, 0, 440, 441, 442, 443, 444,
	445, 0, 446, 448, 447, 0, 449, 716, 0, 450,
	451, 0, 0, 452, 453, 454, 455, 456, 457, 460,
	0, 0, 458, 459, 461, 462, 0, 463, 464, 466,
	469, 465, 467, 468, 470, 483, 484, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 486,
	0, 485, 0, 487, 488, 489, 490, 491, 498, 500,
	501, 496, 497, 499, 502, 503, 505, 493, 494, 495,
	0, 504, 492, 0, 296, 0, 506, 507, 508, 509,
	0, 717, 510, 718, 513, 514, 0, 0, 515, 0,
	516, 0, 0, 518, 519, 520, 0, 0, 521, 522,
	719, 0, 523, 0, 720, 524, 525, 517, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 0, 535, 536,
	721, 537, 538, 539, 722, 540, 541, 542, 723, 543,
	724, 544, 545, 0, 546, 547, 548, 0, 549, 550,
	551, 552, 553, 554, 555, 556, 725, 557, 558, 560,
	559, 561, 0, 562, 0, 563, 564, 565, 0, 0,
	0, 0, 0, 566, 567, 569, 0, 570, 571, 572,
	573, 568, 574, 575, 576, 577, 578, 579, 0, 580,
	581, 582, 0, 583, 584, 585, 586, 587, 726, 588,
	0, 589, 590, 597, 598, 599, 591, 592, 593, 600,
	601, 602, 603, 604, 0, 606, 607, 605, 608, 609,
	610, 0, 611, 612, 594, 595, 613, 614, 0, 615,
	616, 617, 618, 619, 620, 621, 727, 0, 622, 0,
	623, 624, 625, 626, 627, 629, 596, 630, 635, 636,
	728, 631, 632, 633, 634, 729, 638, 639, 640, 0,
	641, 642, 0, 637, 628, 0, 643, 644, 645, 646,
	647, 648, 0, 649, 650, 0, 651, 730, 731, 732,
	733, 0, 662, 0, 652, 654, 655, 656, 734, 657,
	735, 0, 658, 659, 660, 661, 653, 663, 664, 0,
	0, 665, 666, 668, 670, 671, 667, 669, 672, 0,
	673, 0, 0, 674, 675, 676, 736, 737, 738, 0,
	678, 677, 679, 680, 681, 739, 682, 683, 2474, 0,
	291, 0, 684, 685, 740, 686, 687, 688, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 297, 298, 300,
	299, 301, 302, 303, 304, 0, 305, 306, 0, 0,
	0, 0, 0, 689, 0, 0, 0, 307, 0, 308,
	309, 0, 310, 311, 312, 313, 314, 315, 316, 690,
	691, 0, 317, 692, 318, 693, 0, 694, 319, 320,
	321, 322, 323, 324, 0, 0, 0, 325, 695, 696,
	697, 0, 326, 327, 698, 0, 0, 0, 328, 329,
	330, 331, 332, 333, 334, 335, 0, 0, 337, 338,
	339, 336, 340, 0, 341, 0, 342, 343, 344, 345,
	346, 347, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 0, 0, 0, 0, 0, 0, 354, 355, 356,
	357, 358, 0, 359, 361, 699, 700, 0, 364, 360,
	362, 0, 365, 363, 366, 0, 367, 368, 369, 0,
	0, 370, 371, 372, 0, 373, 374, 375, 0, 376,
	377, 378, 0, 379, 380, 701, 381, 382, 383, 385,
	387, 384, 386, 388, 389, 390, 391, 702, 703, 392,
	0, 294, 0, 0, 0, 0, 0, 393, 394, 395,
	704, 0, 0, 0, 396, 0, 397, 398, 399, 0,
	400, 401, 0, 0, 402, 403, 404, 705, 706, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 0, 414,
	707, 0, 708, 415, 0, 416, 417, 418, 419, 420,
	421, 422, 2473, 710, 711, 511, 0, 423, 424, 0,
	425, 426, 427, 428, 429, 0, 0, 0, 295, 430,
	431, 432, 0, 0, 512, 433, 712, 713, 0, 714,
	0, 434, 435, 0, 715, 0, 436, 437, 438, 0,
	439, 0, 0, 0, 440, 441, 442, 443, 444, 445,
	0, 446, 448, 447, 0, 449, 716, 0, 450, 451,
	0, 0, 452, 453, 454, 455, 456, 457, 460, 0,
	0, 458, 459, 461, 462, 0, 463, 464, 466, 469,
	465, 467, 468, 470, 483, 484, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 486, 0,
	485, 0, 487, 488, 489, 490, 491, 498, 500, 501,
	496, 497, 499, 502, 503, 505, 493, 494, 495, 0,
	504, 492, 0, 296, 0, 506, 507, 508, 509, 0,
	717, 510, 718, 513, 514, 0, 0, 515, 0, 516,
	0, 0, 518, 519, 520, 0, 0, 521, 522, 719,
	0, 523, 0, 720, 524, 525, 517, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 0, 535, 536, 721,
	537, 538, 539, 722, 540, 541, 542, 723, 543, 724,
	544, 545, 0, 546, 547, 548, 0, 549, 550, 551,
	552, 553, 554, 555, 556, 725, 557, 558, 560, 559,
	561, 0, 562, 0, 563, 564, 565, 0, 0, 0,
	0, 0, 566, 567, 569, 0, 570, 571, 572, 573,
	568, 574, 575, 576, 577, 578, 579, 0, 580, 581,
	582, 0, 583, 584, 585, 586, 587, 726, 588, 0,
	589, 590, 597, 598, 599, 591, 592, 593, 600, 601,
	602, 603, 604, 0, 606, 607, 605, 608, 609, 610,
	0, 611, 612, 594, 595, 613, 614, 0, 615, 616,
	617, 618, 619, 620, 621, 727, 0, 622, 0, 623,
	624, 625, 626, 627, 629, 596, 630, 635, 636, 728,
	631, 632, 633, 634, 729, 638, 639, 640, 0, 641,
	642, 0, 637, 628, 0, 643, 644, 645, 646, 647,
	648, 0, 649, 650, 0, 651, 730, 731, 732, 733,
	0, 662, 0, 652, 654, 655, 656, 734, 657, 735,
	0, 658, 659, 660, 661, 653, 663, 664, 0, 0,
	665, 666, 668, 670, 671, 667, 669, 672, 0, 673,
	0, 0, 674, 675, 676, 736, 737, 738, 0, 678,
	677, 679, 680, 681, 739, 682, 683, 2461, 0, 291,
	0, 684, 685, 740, 686, 687, 688, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 297, 298, 300, 299,
	301, 302, 303, 304, 0, 305, 306, 0, 0, 0,
	0, 0, 689, 0, 0, 0, 307, 0, 308, 309,
	0, 310, 311, 312, 313, 314, 315, 316, 690, 691,
	0, 317, 692, 318, 693, 0, 694, 319, 320, 321,
	322, 323, 324, 0, 0, 0, 325, 695, 696, 697,
	0, 326, 327, 698, 0, 0, 0, 328, 329, 330,
	331, 332, 333, 334, 335, 0, 0, 337, 338, 339,
	336, 340, 0, 341, 0, 342, 343, 344, 345, 346,
	347, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	0, 0, 0, 0, 0, 0, 354, 355, 356, 357,
	358, 0, 359, 361, 699, 700, 0, 364, 360, 362,
	0, 365, 363, 366, 0, 367, 368, 369, 0, 0,
	370, 371, 372, 0, 373, 374, 375, 0, 376, 377,
	378, 0, 379, 380, 701, 381, 382, 383, 385, 387,
	384, 386, 388, 389, 390, 391, 702, 703, 392, 0,
	294, 0, 0, 0, 0, 0, 393, 394, 395, 704,
	0, 0, 0, 396, 0, 397, 398, 399, 0, 400,
	401, 0, 0, 402, 403, 404, 705, 706, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 0, 414, 707,
	0, 708, 415, 0, 416, 417, 418, 419, 420, 421,
	422, 2463, 710, 711, 511, 0, 423, 424, 0, 425,
	426, 427, 428, 429, 0, 0, 0, 295, 430, 431,
	432, 0, 0, 512, 433, 712, 713, 0, 714, 0,
	434, 435, 0, 715, 0, 436, 437, 438, 0, 439,
	0, 0, 0, 440, 441, 442, 443, 444, 445, 0,
	446, 448, 447, 0, 449, 716, 0, 450, 451, 0,
	0, 452, 453, 454, 455, 456, 457, 460, 0, 0,
	458, 459, 461, 462, 0, 463, 464, 466, 469, 465,
	467, 468, 470, 483, 484, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 486, 0, 485,
	0, 487, 488, 489, 490, 491, 498, 500, 501, 496,
	497, 499, 502, 503, 505, 493, 494, 495, 0, 504,
	492, 0, 296, 0, 506, 507, 508, 509, 0, 717,
	510, 718, 513, 514, 0, 0, 515, 0, 516, 0,
	0, 518, 519, 520, 0, 0, 521, 522, 719, 0,
	523, 0, 720, 524, 525, 517, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 0, 535, 536, 721, 537,
	538, 539, 722, 540, 541, 542, 723, 543, 724, 544,
	545, 0, 546, 547, 548, 0, 549, 550, 551, 552,
	553, 554, 555, 556, 725, 557, 558, 560, 559, 561,
	0, 562, 0, 563, 564, 565, 0, 0, 0, 0,
	0, 566, 567, 569, 0, 570, 571, 572, 573, 568,
	574, 575, 576, 577, 578, 579, 0, 580, 581, 582,
	0, 583, 584, 585, 586, 587, 726, 588, 0, 589,
	590, 597, 598, 599, 591, 592, 593, 600, 601, 602,
	603, 604, 0, 606, 607, 605, 608, 609, 610, 0,
	611, 612, 594, 595, 613, 614, 0, 615, 616, 617,
	618, 619, 620, 621, 727, 0, 622, 0, 623, 624,
	625, 626, 627, 629, 596, 630, 635, 636, 728, 631,
	632, 633, 634, 729, 638, 639, 640, 0, 641, 642,
	0, 637, 628, 0, 643, 644, 645, 646, 647, 648,
	0, 649, 650, 0, 651, 730, 731, 732, 733, 0,
	662, 0, 652, 654, 655, 656, 734, 657, 735, 0,
	658, 659, 660, 661, 653, 663, 664, 0, 0, 665,
	666, 668, 670, 671, 667, 669, 672, 0, 673, 0,
	0, 674, 675, 676, 736, 737, 738, 0, 678, 677,
	679, 680, 681, 739, 682, 683, 291, 0, 0, 0,
	684, 685, 740, 686, 687, 688, 0, 0, 0, 0,
	0, 0, 0, 297, 298, 300, 299, 301, 302, 303,
	304, 0, 305, 306, 0, 0, 0, 0, 0, 689,
	0, 0, 0, 307, 0, 308, 309, 0, 310, 311,
	312, 313, 314, 315, 316, 690, 691, 0, 317, 692,
	318, 693, 0, 694, 319, 320, 321, 322, 323, 324,
	0, 0, 0, 325, 695, 696, 697, 0, 326, 327,
	698, 0, 0, 0, 328, 329, 330, 331, 332, 333,
	334, 335, 0, 0, 337, 338, 339, 336, 340, 0,
	341, 0, 342, 343, 344, 345, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 0, 0, 0,
	0, 0, 0, 354, 355, 356, 357, 358, 0, 359,
	361, 699, 700, 0, 364, 360, 362, 0, 365, 363,
	366, 0, 367, 368, 369, 0, 0, 370, 371, 372,
	0, 373, 374, 375, 0, 376, 377, 378, 0, 379,
	380, 701, 381, 382, 383, 385, 387, 384, 386, 388,
	389, 390, 391, 702, 703, 392, 0, 294, 0, 0,
	0, 0, 0, 393, 394, 395, 704, 0, 0, 0,
	396, 0, 397, 398, 399, 0, 400, 401, 0, 0,
	402, 403, 404, 705, 706, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 0, 414, 707, 0, 708, 415,
	0, 416, 417, 418, 419, 420, 421, 422, 2425, 710,
	711, 511, 0, 423, 424, 0, 425, 426, 427, 428,
	429, 0, 0, 0, 295, 430, 431, 432, 0, 0,
	512, 433, 712, 713, 0, 714, 0, 434, 435, 0,
	715, 0, 436, 437, 438, 0, 439, 0, 0, 0,
	440, 441, 442, 443, 444, 445, 0, 446, 448, 447,
	0, 449, 716, 0, 450, 451, 0, 0, 452, 453,
	454, 455, 456, 457, 460, 0, 0, 458, 459, 461,
	462, 0, 463, 464, 466, 469, 465, 467, 468, 470,
	483, 484, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 486, 0, 485, 0, 487, 488,
	489, 490, 491, 498, 500, 501, 496, 497, 499, 502,
	503, 505, 493, 494, 495, 0, 504, 492, 0, 296,
	0, 506, 507, 508, 509, 0, 717, 510, 718, 513,
	514, 0, 0, 515, 0, 516, 0, 1348, 518, 519,
	520, 0, 0, 521, 522, 719, 0, 523, 0, 720,
	524, 525, 517, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 0, 535, 536, 721, 537, 538, 539, 722,
	540, 541, 542, 723, 543, 724, 544, 545, 0, 546,
	547, 548, 0, 549, 550, 551, 552, 553, 554, 555,
	556, 725, 557, 558, 560, 559, 561, 0, 562, 0,
	563, 564, 565, 0, 0, 0, 0, 0, 566, 567,
	569, 0, 570, 571, 572, 573, 568, 574, 575, 576,
	577, 578, 579, 0, 580, 581, 582, 0, 583, 584,
	585, 586, 587, 726, 588, 0, 589, 590, 597, 598,
	599, 591, 592, 593, 600, 601, 602, 603, 604, 0,
	606, 607, 605, 608, 609, 610, 0, 611, 612, 594,
	595, 613, 614, 0, 615, 616, 617, 618, 619, 620,
	621, 727, 0, 622, 0, 623, 624, 625, 626, 627,
	629, 596, 630, 635, 636, 728, 631, 632, 633, 634,
	729, 638, 639, 640, 0, 641, 642, 0, 637, 628,
	0, 643, 644, 645, 646, 647, 648, 0, 649, 650,
	0, 651, 730, 731, 732, 733, 0, 662, 0, 652,
	654, 655, 656, 734, 657, 735, 0, 658, 659, 660,
	661, 653, 663, 664, 0, 0, 665, 666, 668, 670,
	671, 667, 669, 672, 0, 673, 0, 0, 674, 675,
	676, 736, 737, 738, 0, 678, 677, 679, 680, 681,
	739, 682, 683, 1733, 0, 291, 0, 684, 685, 740,
	686, 687, 688, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 297, 298, 300, 299, 301, 302, 303, 304,
	0, 305, 306, 0, 0, 0, 0, 0, 689, 0,
	0, 0, 307, 0, 308, 309, 0, 310, 311, 312,
	313, 314, 315, 316, 690, 691, 0, 317, 692, 318,
	693, 0, 694, 319, 320, 321, 322, 323, 324, 0,
	0, 0, 325, 695, 696, 697, 0, 326, 327, 698,
	0, 0, 0, 328, 329, 330, 331, 332, 333, 334,
	335, 0, 0, 337, 338, 339, 336, 340, 0, 341,
	0, 342, 343, 344, 345, 346, 347, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 0, 0, 0, 0,
	0, 0, 354, 355, 356, 357, 358, 0, 359, 361,
	699, 700, 0, 364, 360, 362, 0, 365, 363, 366,
	0, 367, 368, 369, 0, 0, 370, 371, 372, 0,
	373, 374, 375, 0, 376, 377, 378, 0, 379, 380,
	701, 381, 382, 383, 385, 387, 384, 386, 388, 389,
	390, 391, 702, 703, 392, 0, 294, 0, 0, 0,
	0, 0, 393, 394, 395, 704, 0, 0, 0, 396,
	0, 397, 398, 399, 0, 400, 401, 0, 0, 402,
	403, 404, 705, 706, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 0, 414, 707, 0, 708, 415, 0,
	416, 417, 418, 419, 420, 421, 422, 1732, 710, 711,
	511, 0, 423, 424, 0, 425, 426, 427, 428, 429,
	0, 0, 0, 295, 430, 431, 432, 0, 0, 512,
	433, 712, 713, 0, 714, 0, 434, 435, 0, 715,
	0, 436, 437, 438, 0, 439, 0, 0, 0, 440,
	441, 442, 443, 444, 445, 0, 446, 448, 447, 0,
	449, 716, 0, 450, 451, 0, 0, 452, 453, 454,
	455, 456, 457, 460, 0, 0, 458, 459, 461, 462,
	0, 463, 464, 466, 469, 465, 467, 468, 470, 483,
	484, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 486, 0, 485, 0, 487, 488, 489,
	490, 491, 498, 500, 501, 496, 497, 499, 502, 503,
	505, 493, 494, 495, 0, 504, 492, 0, 296, 0,
	506, 507, 508, 509, 0, 717, 510, 718, 513, 514,
	0, 0, 515, 0, 516, 0, 0, 518, 519, 520,
	0, 0, 521, 522, 719, 0, 523, 0, 720, 524,
	525, 517, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 0, 535, 536, 721, 537, 538, 539, 722, 540,
	541, 542, 723, 543, 724, 544, 545, 0, 546, 547,
	548, 0, 549, 550, 551, 552, 553, 554, 555, 556,
	725, 557, 558, 560, 559, 561, 0, 562, 0, 563,
	564, 565, 0, 0, 0, 0, 0, 566, 567, 569,
	0, 570, 571, 572, 573, 568, 574, 575, 576, 577,
	578, 579, 0, 580, 581, 582, 0, 583, 584, 585,
	586, 587, 726, 588, 0, 589, 590, 597, 598, 599,
	591, 592, 593, 600, 601, 602, 603, 604, 0, 606,
	607, 605, 608, 609, 610, 0, 611, 612, 594, 595,
	613, 614, 0, 615, 616, 617, 618, 619, 620, 621,
	727, 0, 622, 0, 623, 624, 625, 626, 627, 629,
	596, 630, 635, 636, 728, 631, 632, 633, 634, 729,
	638, 639, 640, 0, 641, 642, 0, 637, 628, 0,
	643, 644, 645, 646, 647, 648, 0, 649, 650, 0,
	651, 730, 731, 732, 733, 0, 662, 0, 652, 654,
	655, 656, 734, 657, 735, 0, 658, 659, 660, 661,
	653, 663, 664, 0, 0, 665, 666, 668, 670, 671,
	667, 669, 672, 0, 673, 0, 0, 674, 675, 676,
	736, 737, 738, 0, 678, 677, 679, 680, 681, 739,
	682, 683, 1626, 0, 291, 0, 684, 685, 740, 686,
	687, 688, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 298, 300, 299, 301, 302, 303, 304, 0,
	305, 306, 0, 0, 0, 0, 0, 689, 0, 0,
	0, 307, 0, 308, 309, 0, 310, 311, 312, 313,
	314, 315, 316, 690, 691, 0, 317, 692, 318, 693,
	0, 694, 319, 320, 321, 322, 323, 324, 0, 0,
	0, 325, 695, 696, 697, 0, 326, 327, 698, 0,
	0, 0, 328, 329, 330, 331, 332, 333, 334, 335,
	0, 0, 337, 338, 339, 336, 340, 0, 341, 0,
	342, 343, 344, 345, 346, 347, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 0, 0, 0, 0, 0,
	0, 354, 355, 356, 357, 358, 0, 359, 361, 699,
	700, 0, 364, 360, 362, 0, 365, 363, 366, 0,
	367, 368, 369, 0, 0, 370, 371, 372, 0, 373,
	374, 375, 0, 376, 377, 378, 0, 379, 380, 701,
	381, 382, 383, 385, 387, 384, 386, 388, 389, 390,
	391, 702, 703, 392, 0, 294, 0, 0, 0, 0,
	0, 393, 394, 395, 704, 0, 0, 0, 396, 0,
	397, 398, 399, 0, 400, 401, 0, 0, 402, 403,
	404, 705, 706, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 0, 414, 707, 0, 708, 415, 0, 416,
	417, 418, 419, 420, 421, 422, 709, 710, 711, 511,
	0, 423, 424, 0, 425, 426, 427, 428, 429, 0,
	0, 0, 295, 430, 431, 432, 0, 0, 512, 433,
	712, 713, 0, 714, 0, 434, 435, 0, 715, 0,
	436, 437, 438, 0, 439, 0, 0, 0, 440, 441,
	442, 443, 444, 445, 0, 446, 448, 447, 0, 449,
	716, 0, 450, 451, 0, 0, 452, 453, 454, 455,
	456, 457, 460, 0, 0, 458, 459, 461, 462, 0,
	463, 464, 466, 469, 465, 467, 468, 470, 483, 484,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 486, 0, 485, 0, 487, 488, 489, 490,
	491, 498, 500, 501, 496, 497, 499, 502, 503, 505,
	493, 494, 495, 0, 504, 492, 0, 296, 0, 506,
	507, 508, 509, 0, 717, 510, 718, 513, 514, 0,
	0, 515, 0, 516, 0, 0, 518, 519, 520, 0,
	0, 521, 522, 719, 0, 523, 0, 720, 524, 525,
	517, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	0, 535, 536, 721, 537, 538, 539, 722, 540, 541,
	542, 723, 543, 724, 544, 545, 0, 546, 547, 548,
	0, 549, 550, 551, 552, 553, 554, 555, 556, 725,
	557, 558, 560, 559, 561, 0, 562, 0, 563, 564,
	565, 0, 0, 0, 0, 0, 566, 567, 569, 0,
	570, 571, 572, 573, 568, 574, 575, 576, 577, 578,
	579, 0, 580, 581, 582, 0, 583, 584, 585, 586,
	587, 726, 588, 0, 589, 590, 597, 598, 599, 591,
	592, 593, 600, 601, 602, 603, 604, 0, 606, 607,
	605, 608, 609, 610, 0, 611, 612, 594, 595, 613,
	614, 0, 615, 616, 617, 618, 619, 620, 621, 727,
	0, 622, 0, 623, 624, 625, 626, 627, 629, 596,
	630, 635, 636, 728, 631, 632, 633, 634, 729, 638,
	639, 640, 0, 641, 642, 0, 637, 628, 0, 643,
	644, 645, 646, 647, 648, 0, 649, 650, 0, 651,
	730, 731, 732, 733, 0, 662, 0, 652, 654, 655,
	656, 734, 657, 735, 0, 658, 659, 660, 661, 653,
	663, 664, 0, 0, 665, 666, 668, 670, 671, 667,
	669, 672, 0, 673, 0, 0, 674, 675, 676, 736,
	737, 738, 0, 678, 677, 679, 680, 681, 739, 682,
	683, 1619, 0, 291, 0, 684, 685, 740, 686, 687,
	688, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	297, 298, 300, 299, 301, 302, 303, 304, 0, 305,
	306, 0, 0, 0, 0, 0, 689, 0, 0, 0,
	307, 0, 308, 309, 0, 310, 311, 312, 313, 314,
	315, 316, 690, 691, 0, 317, 692, 318, 693, 0,
	694, 319, 320, 321, 322, 323, 324, 0, 0, 0,
	325, 695, 696, 697, 0, 326, 327, 698, 0, 0,
	0, 328, 329, 330, 331, 332, 333, 334, 335, 0,
	0, 337, 338, 339, 336, 340, 0, 341, 0, 342,
	343, 344, 345, 346, 347, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 0, 0, 0, 0, 0, 0,
	354, 355, 356, 357, 358, 0, 359, 361, 699, 700,
	0, 364, 360, 362, 0, 365, 363, 366, 0, 367,
	368, 369, 0, 0, 370, 371, 372, 0, 373, 374,
	375, 0, 376, 377, 378, 0, 379, 380, 701, 381,
	382, 383, 385, 387, 384, 386, 388, 389, 390, 391,
	702, 703, 392, 0, 294, 0, 0, 0, 0, 0,
	393, 394, 395, 704, 0, 0, 0, 396, 0, 397,
	398, 399, 0, 400, 401, 0, 0, 402, 403, 404,
	705, 706, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 0, 414, 707, 0, 708, 415, 0, 416, 417,
	418, 419, 420, 421, 422, 1621, 710, 711, 511, 0,
	423, 424, 0, 425, 426, 427, 428, 429, 0, 0,
	0, 295, 430, 431, 432, 0, 0, 512, 433, 712,
	713, 0, 714, 0, 434, 435, 0, 715, 0, 436,
	437, 438, 0, 439, 0, 0, 0, 440, 441, 442,
	443, 444, 445, 0, 446, 448, 447, 0, 449, 716,
	0, 450, 451, 0, 0, 452, 453, 454, 455, 456,
	457, 460, 0, 0, 458, 459, 461, 462, 0, 463,
	464, 466, 469, 465, 467, 468, 470, 483, 484, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 486, 0, 485, 0, 487, 488, 489, 490, 491,
	498, 500, 501, 496, 497, 499, 502, 503, 505, 493,
	494, 495, 0, 504, 492, 0, 296, 0, 506, 507,
	508, 509, 0, 717, 510, 718, 513, 514, 0, 0,
	515, 0, 516, 0, 0, 518, 519, 520, 0, 0,
	521, 522, 719, 0, 523, 0, 720, 524, 525, 517,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 0,
	535, 536, 721, 537, 538, 539, 722, 540, 541, 542,
	723, 543, 724, 544, 545, 0, 546, 547, 548, 0,
	549, 550, 551, 552, 553, 554, 555, 556, 725, 557,
	558, 560, 559, 561, 0, 562, 0, 563, 564, 565,
	0, 0, 0, 0, 0, 566, 567, 569, 0, 570,
	571, 572, 573, 568, 574, 575, 576, 577, 578, 579,
	0, 580, 581, 582, 0, 583, 584, 585, 586, 587,
	726, 588, 0, 589, 590, 597, 598, 599, 591, 592,
	593, 600, 601, 602, 603, 604, 0, 606, 607, 605,
	608, 609, 610, 0, 611, 612, 594, 595, 613, 614,
	0, 615, 616, 617, 618, 619, 620, 621, 727, 0,
	622, 0, 623, 624, 625, 626, 627, 629, 596, 630,
	635, 636, 728, 631, 632, 633, 634, 729, 638, 639,
	640, 0, 641, 642, 0, 637, 628, 0, 643, 644,
	645, 646, 647, 648, 0, 649, 650, 0, 651, 730,
	731, 732, 733, 0, 662, 0, 652, 654, 655, 656,
	734, 657, 735, 0, 658, 659, 660, 661, 653, 663,
	664, 0, 0, 665, 666, 668, 670, 671, 667, 669,
	672, 0, 673, 0, 0, 674, 675, 676, 736, 737,
	738, 0, 678, 677, 679, 680, 681, 739, 682, 683,
	1428, 0, 291, 0, 684, 685, 740, 686, 687, 688,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 297,
	298, 300, 299, 301, 302, 303, 304, 0, 305, 306,
	0, 0, 0, 0, 0, 689, 0, 0, 0, 307,
	0, 308, 309, 0, 310, 311, 312, 313, 314, 315,
	316, 690, 691, 0, 317, 692, 318, 693, 0, 694,
	319, 320, 321, 322, 323, 324, 0, 0, 0, 325,
	695, 696, 697, 0, 326, 327, 698, 0, 0, 0,
	328, 329, 330, 331, 332, 333, 334, 335, 0, 0,
	337, 338, 339, 336, 340, 0, 341, 0, 342, 343,
	344, 345, 346, 347, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 0, 0, 0, 0, 0, 0, 354,
	355, 356, 357, 358, 0, 359, 361, 699, 700, 0,
	364, 360, 362, 0, 365, 363, 366, 0, 367, 368,
	369, 0, 0, 370, 371, 372, 0, 373, 374, 375,
	0, 376, 377, 378, 0, 379, 380, 701, 381, 382,
	383, 385, 387, 384, 386, 388, 389, 390, 391, 702,
	703, 392, 0, 294, 0, 0, 0, 0, 0, 393,
	394, 395, 704, 0, 0, 0, 396, 0, 397, 398,
	399, 0, 400, 401, 0, 0, 402, 403, 404, 705,
	706, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	0, 414, 707, 0, 708, 415, 0, 416, 417, 418,
	419, 420, 421, 422, 1427, 710, 711, 511, 0, 423,
	424, 0, 425, 426, 427, 428, 429, 0, 0, 0,
	295, 430, 431, 432, 0, 0, 512, 433, 712, 713,
	0, 714, 0, 434, 435, 0, 715, 0, 436, 437,
	438, 0, 439, 0, 0, 0, 440, 441, 442, 443,
	444, 445, 0, 446, 448, 447, 0, 449, 716, 0,
	450, 451, 0, 0, 452, 453, 454, 455, 456, 457,
	460, 0, 0, 458, 459, 461, 462, 0, 463, 464,
	466, 469, 465, 467, 468, 470, 483, 484, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	486, 0, 485, 0, 487, 488, 489, 490, 491, 498,
	500, 501, 496, 497, 499, 502, 503, 505, 493, 494,
	495, 0, 504, 492, 0, 296, 0, 506, 507, 508,
	509, 0, 717, 510, 718, 513, 514, 0, 0, 515,
	0, 516, 0, 0, 518, 519, 520, 0, 0, 521,
	522, 719, 0, 523, 0, 720, 524, 525, 517, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 0, 535,
	536, 721, 537, 538, 539, 722, 540, 541, 542, 723,
	543, 724, 544, 545, 0, 546, 547, 548, 0, 549,
	550, 551, 552, 553, 554, 555, 556, 725, 557, 558,
	560, 559, 561, 0, 562, 0, 563, 564, 565, 0,
	0, 0, 0, 0, 566, 567, 569, 0, 570, 571,
	572, 573, 568, 574, 575, 576, 577, 578, 579, 0,
	580, 581, 582, 0, 583, 584, 585, 586, 587, 726,
	588, 0, 589, 590, 597, 598, 599, 591, 592, 593,
	600, 601, 602, 603, 604, 0, 606, 607, 605, 608,
	609, 610, 0, 611, 612, 594, 595, 613, 614, 0,
	615, 616, 617, 618, 619, 620, 621, 727, 0, 622,
	0, 623, 624, 625, 626, 627, 629, 596, 630, 635,
	636, 728, 631, 632, 633, 634, 729, 638, 639, 640,
	0, 641, 642, 0, 637, 628, 0, 643, 644, 645,
	646, 647, 648, 0, 649, 650, 0, 651, 730, 731,
	732, 733, 0, 662, 0, 652, 654, 655, 656, 734,
	657, 735, 0, 658, 659, 660, 661, 653, 663, 664,
	0, 0, 665, 666, 668, 670, 671, 667, 669, 672,
	0, 673, 0, 0, 674, 675, 676, 736, 737, 738,
	0, 678, 677, 679, 680, 681, 739, 682, 683, 1418,
	0, 291, 0, 684, 685, 740, 686, 687, 688, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 297, 298,
	300, 299, 301, 302, 303, 304, 0, 305, 306, 0,
	0, 0, 0, 0, 689, 0, 0, 0, 307, 0,
	308, 309, 0, 310, 311, 312, 313, 314, 315, 316,
	690, 691, 0, 317, 692, 318, 693, 0, 694, 319,
	320, 321, 322, 323, 324, 0, 0, 0, 325, 695,
	696, 697, 0, 326, 327, 698, 0, 0, 0, 328,
	329, 330, 331, 332, 333, 334, 335, 0, 0, 337,
	338, 339, 336, 340, 0, 341, 0, 342, 343, 344,
	345, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 0, 0, 0, 0, 0, 0, 354, 355,
	356, 357, 358, 0, 359, 361, 699, 700, 0, 364,
	360, 362, 0, 365, 363, 366, 0, 367, 368, 369,
	0, 0, 370, 371, 372, 0, 373, 374, 375, 0,
	376, 377, 378, 0, 379, 380, 701, 381, 382, 383,
	385, 387, 384, 386, 388, 389, 390, 391, 702, 703,
	392, 0, 294, 0, 0, 0, 0, 0, 393, 394,
	395, 704, 0, 0, 0, 396, 0, 397, 398, 399,
	0, 400, 401, 0, 0, 402, 403, 404, 705, 706,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 0,
	414, 707, 0, 708, 415, 0, 416, 417, 418, 419,
	420, 421, 422, 1417, 710, 711, 511, 0, 423, 424,
	0, 425, 426, 427, 428, 429, 0, 0, 0, 295,
	430, 431, 432, 0, 0, 512, 433, 712, 713, 0,
	714, 0, 434, 435, 0, 715, 0, 436, 437, 438,
	0, 439, 0, 0, 0, 440, 441, 442, 443, 444,
	445, 0, 446, 448, 447, 0, 449, 716, 0, 450,
	451, 0, 0, 452, 453, 454, 455, 456, 457, 460,
	0, 0, 458, 459, 461, 462, 0, 463, 464, 466,
	469, 465, 467, 468, 470, 483, 484, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 486,
	0, 485, 0, 487, 488, 489, 490, 491, 498, 500,
	501, 496, 497, 499, 502, 503, 505, 493, 494, 495,
	0, 504, 492, 0, 296, 0, 506, 507, 508, 509,
	0, 717, 510, 718, 513, 514, 0, 0, 515, 0,
	516, 0, 0, 518, 519, 520, 0, 0, 521, 522,
	719, 0, 523, 0, 720, 524, 525, 517, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 0, 535, 536,
	721, 537, 538, 539, 722, 540, 541, 542, 723, 543,
	724, 544, 545, 0, 546, 547, 548, 0, 549, 550,
	551, 552, 553, 554, 555, 556, 725, 557, 558, 560,
	559, 561, 0, 562, 0, 563, 564, 565, 0, 0,
	0, 0, 0, 566, 567, 569, 0, 570, 571, 572,
	573, 568, 574, 575, 576, 577, 578, 579, 0, 580,
	581, 582, 0, 583, 584, 585, 586, 587, 726, 588,
	0, 589, 590, 597, 598, 599, 591, 592, 593, 600,
	601, 602, 603, 604, 0, 606, 607, 605, 608, 609,
	610, 0, 611, 612, 594, 595, 613, 614, 0, 615,
	616, 617, 618, 619, 620, 621, 727, 0, 622, 0,
	623, 624, 625, 626, 627, 629, 596, 630, 635, 636,
	728, 631, 632, 633, 634, 729, 638, 639, 640, 0,
	641, 642, 0, 637, 628, 0, 643, 644, 645, 646,
	647, 648, 0, 649, 650, 0, 651, 730, 731, 732,
	733, 0, 662, 0, 652, 654, 655, 656, 734, 657,
	735, 0, 658, 659, 660, 661, 653, 663, 664, 0,
	0, 665, 666, 668, 670, 671, 667, 669, 672, 0,
	673, 0, 0, 674, 675, 676, 736, 737, 738, 0,
	678, 677, 679, 680, 681, 739, 682, 683, 1415, 0,
	291, 0, 684, 685, 740, 686, 687, 688, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 297, 298, 300,
	299, 301, 302, 303, 304, 0, 305, 306, 0, 0,
	0, 0, 0, 689, 0, 0, 0, 307, 0, 308,
	309, 0, 310, 311, 312, 313, 314, 315, 316, 690,
	691, 0, 317, 692, 318, 693, 0, 694, 319, 320,
	321, 322, 323, 324, 0, 0, 0, 325, 695, 696,
	697, 0, 326, 327, 698, 0, 0, 0, 328, 329,
	330, 331, 332, 333, 334, 335, 0, 0, 337, 338,
	339, 336, 340, 0, 341, 0, 342, 343, 344, 345,
	346, 347, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 0, 0, 0, 0, 0, 0, 354, 355, 356,
	357, 358, 0, 359, 361, 699, 700, 0, 364, 360,
	362, 0, 365, 363, 366, 0, 367, 368, 369, 0,
	0, 370, 371, 372, 0, 373, 374, 375, 0, 376,
	377, 378, 0, 379, 380, 701, 381, 382, 383, 385,
	387, 384, 386, 388, 389, 390, 391, 702, 703, 392,
	0, 294, 0, 0, 0, 0, 0, 393, 394, 395,
	704, 0, 0, 0, 396, 0, 397, 398, 399, 0,
	400, 401, 0, 0, 402, 403, 404, 705, 706, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 0, 414,
	707, 0, 708, 415, 0, 416, 417, 418, 419, 420,
	421, 422, 1414, 710, 711, 511, 0, 423, 424, 0,
	425, 426, 427, 428, 429, 0, 0, 0, 295, 430,
	431, 432, 0, 0, 512, 433, 712, 713, 0, 714,
	0, 434, 435, 0, 715, 0, 436, 437, 438, 0,
	439, 0, 0, 0, 440, 441, 442, 443, 444, 445,
	0, 446, 448, 447, 0, 449, 716, 0, 450, 451,
	0, 0, 452, 453, 454, 455, 456, 457, 460, 0,
	0, 458, 459, 461, 462, 0, 463, 464, 466, 469,
	465, 467, 468, 470, 483, 484, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 486, 0,
	485, 0, 487, 488, 489, 490, 491, 498, 500, 501,
	496, 497, 499, 502, 503, 505, 493, 494, 495, 0,
	504, 492, 0, 296, 0, 506, 507, 508, 509, 0,
	717, 510, 718, 513, 514, 0, 0, 515, 0, 516,
	0, 0, 518, 519, 520, 0, 0, 521, 522, 719,
	0, 523, 0, 720, 524, 525, 517, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 0, 535, 536, 721,
	537, 538, 539, 722, 540, 541, 542, 723, 543, 724,
	544, 545, 0, 546, 547, 548, 0, 549, 550, 551,
	552, 553, 554, 555, 556, 725, 557, 558, 560, 559,
	561, 0, 562, 0, 563, 564, 565, 0, 0, 0,
	0, 0, 566, 567, 569, 0, 570, 571, 572, 573,
	568, 574, 575, 576, 577, 578, 579, 0, 580, 581,
	582, 0, 583, 584, 585, 586, 587, 726, 588, 0,
	589, 590, 597, 598, 599, 591, 592, 593, 600, 601,
	602, 603, 604, 0, 606, 607, 605, 608, 609, 610,
	0, 611, 612, 594, 595, 613, 614, 0, 615, 616,
	617, 618, 619, 620, 621, 727, 0, 622, 0, 623,
	624, 625, 626, 627, 629, 596, 630, 635, 636, 728,
	631, 632, 633, 634, 729, 638, 639, 640, 0, 641,
	642, 0, 637, 628, 0, 643, 644, 645, 646, 647,
	648, 0, 649, 650, 0, 651, 730, 731, 732, 733,
	0, 662, 0, 652, 654, 655, 656, 734, 657, 735,
	0, 658, 659, 660, 661, 653, 663, 664, 0, 0,
	665, 666, 668, 670, 671, 667, 669, 672, 0, 673,
	0, 0, 674, 675, 676, 736, 737, 738, 0, 678,
	677, 679, 680, 681, 739, 682, 683, 1410, 0, 291,
	0, 684, 685, 740, 686, 687, 688, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 297, 298, 300, 299,
	301, 302, 303, 304, 0, 305, 306, 0, 0, 0,
	0, 0, 689, 0, 0, 0, 307, 0, 308, 309,
	0, 310, 311, 312, 313, 314, 315, 316, 690, 691,
	0, 317, 692, 318, 693, 0, 694, 319, 320, 321,
	322, 323, 324, 0, 0, 0, 325, 695, 696, 697,
	0, 326, 327, 698, 0, 0, 0, 328, 329, 330,
	331, 332, 333, 334, 335, 0, 0, 337, 338, 339,
	336, 340, 0, 341, 0, 342, 343, 344, 345, 346,
	347, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	0, 0, 0, 0, 0, 0, 354, 355, 356, 357,
	358, 0, 359, 361, 699, 700, 0, 364, 360, 362,
	0, 365, 363, 366, 0, 367, 368, 369, 0, 0,
	370, 371, 372, 0, 373, 374, 375, 0, 376, 377,
	378, 0, 379, 380, 701, 381, 382, 383, 385, 387,
	384, 386, 388, 389, 390, 391, 702, 703, 392, 0,
	294, 0, 0, 0, 0, 0, 393, 394, 395, 704,
	0, 0, 0, 396, 0, 397, 398, 399, 0, 400,
	401, 0, 0, 402, 403, 404, 705, 706, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 0, 414, 707,
	0, 708, 415, 0, 416, 417, 418, 419, 420, 421,
	422, 1409, 710, 711, 511, 0, 423, 424, 0, 425,
	426, 427, 428, 429, 0, 0, 0, 295, 430, 431,
	432, 0, 0, 512, 433, 712, 713, 0, 714, 0,
	434, 435, 0, 715, 0, 436, 437, 438, 0, 439,
	0, 0, 0, 440, 441, 442, 443, 444, 445, 0,
	446, 448, 447, 0, 449, 716, 0, 450, 451, 0,
	0, 452, 453, 454, 455, 456, 457, 460, 0, 0,
	458, 459, 461, 462, 0, 463, 464, 466, 469, 465,
	467, 468, 470, 483, 484, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 486, 0, 485,
	0, 487, 488, 489, 490, 491, 498, 500, 501, 496,
	497, 499, 502, 503, 505, 493, 494, 495, 0, 504,
	492, 0, 296, 0, 506, 507, 508, 509, 0, 717,
	510, 718, 513, 514, 0, 0, 515, 0, 516, 0,
	0, 518, 519, 520, 0, 0, 521, 522, 719, 0,
	523, 0, 720, 524, 525, 517, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 0, 535, 536, 721, 537,
	538, 539, 722, 540, 541, 542, 723, 543, 724, 544,
	545, 0, 546, 547, 548, 0, 549, 550, 551, 552,
	553, 554, 555, 556, 725, 557, 558, 560, 559, 561,
	0, 562, 0, 563, 564, 565, 0, 0, 0, 0,
	0, 566, 567, 569, 0, 570, 571, 572, 573, 568,
	574, 575, 576, 577, 578, 579, 0, 580, 581, 582,
	0, 583, 584, 585, 586, 587, 726, 588, 0, 589,
	590, 597, 598, 599, 591, 592, 593, 600, 601, 602,
	603, 604, 0, 606, 607, 605, 608, 609, 610, 0,
	611, 612, 594, 595, 613, 614, 0, 615, 616, 617,
	618, 619, 620, 621, 727, 0, 622, 0, 623, 624,
	625, 626, 627, 629, 596, 630, 635, 636, 728, 631,
	632, 633, 634, 729, 638, 639, 640, 0, 641, 642,
	0, 637, 628, 0, 643, 644, 645, 646, 647, 648,
	0, 649, 650, 0, 651, 730, 731, 732, 733, 0,
	662, 0, 652, 654, 655, 656, 734, 657, 735, 0,
	658, 659, 660, 661, 653, 663, 664, 0, 0, 665,
	666, 668, 670, 671, 667, 669, 672, 0, 673, 0,
	0, 674, 675, 676, 736, 737, 738, 0, 678, 677,
	679, 680, 681, 739, 682, 683, 742, 0, 291, 0,
	684, 685, 740, 686, 687, 688, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 297, 298, 300, 299, 301,
	302, 303, 304, 0, 305, 306, 0, 0, 0, 0,
	0, 689, 0, 0, 0, 307, 0, 308, 309, 0,
	310, 311, 312, 313, 314, 315, 316, 690, 691, 0,
	317, 692, 318, 693, 0, 694, 319, 320, 321, 322,
	323, 324, 0, 0, 0, 325, 695, 696, 697, 0,
	326, 327, 698, 0, 0, 0, 328, 329, 330, 331,
	332, 333, 334, 335, 0, 0, 337, 338, 339, 336,
	340, 0, 341, 0, 342, 343, 344, 345, 346, 347,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 0,
	0, 0, 0, 0, 0, 354, 355, 356, 357, 358,
	0, 359, 361, 699, 700, 0, 364, 360, 362, 0,
	365, 363, 366, 0, 367, 368, 369, 0, 0, 370,
	371, 372, 0, 373, 374, 375, 0, 376, 377, 378,
	0, 379, 380, 701, 381, 382, 383, 385, 387, 384,
	386, 388, 389, 390, 391, 702, 703, 392, 0, 294,
	0, 0, 0, 0, 0, 393, 394, 395, 704, 0,
	0, 0, 396, 0, 397, 398, 399, 0, 400, 401,
	0, 0, 402, 403, 404, 705, 706, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 0, 414, 707, 0,
	708, 415, 0, 416, 417, 418, 419, 420, 421, 422,
	709, 710, 711, 511, 0, 423, 424, 0, 425, 426,
	427, 428, 429, 0, 0, 0, 295, 430, 431, 432,
	0, 0, 512, 433, 712, 713, 0, 714, 0, 434,
	435, 0, 715, 0, 436, 437, 438, 0, 439, 0,
	0, 0, 440, 441, 442, 443, 444, 445, 0, 446,
	448, 447, 0, 449, 716, 0, 450, 451, 0, 0,
	452, 453, 454, 455, 456, 457, 460, 0, 0, 458,
	459, 461, 462, 0, 463, 464, 466, 469, 465, 467,
	468, 470, 483, 484, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 486, 0, 485, 0,
	487, 488, 489, 490, 491, 498, 500, 501, 496, 497,
	499, 502, 503, 505, 493, 494, 495, 0, 504, 492,
	0, 296, 0, 506, 507, 508, 509, 0, 717, 510,
	718, 513, 514, 0, 0, 515, 0, 516, 0, 0,
	518, 519, 520, 0, 0, 521, 522, 719, 0, 523,
	0, 720, 524, 525, 517, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 0, 535, 536, 721, 537, 538,
	539, 722, 540, 541, 542, 723, 543, 724, 544, 545,
	0, 546, 547, 548, 0, 549, 550, 551, 552, 553,
	554, 555, 556, 725, 557, 558, 560, 559, 561, 0,
	562, 0, 563, 564, 565, 0, 0, 0, 0, 0,
	566, 567, 569, 0, 570, 571, 572, 573, 568, 574,
	575, 576, 577, 578, 579, 0, 580, 581, 582, 0,
	583, 584, 585, 586, 587, 726, 588, 0, 589, 590,
	597, 598, 599, 591, 592, 593, 600, 601, 602, 603,
	604, 0, 606, 607, 605, 608, 609, 610, 0, 611,
	612, 594, 595, 613, 614, 0, 615, 616, 617, 618,
	619, 620, 621, 727, 0, 622, 0, 623, 624, 625,
	626, 627, 629, 596, 630, 635, 636, 728, 631, 632,
	633, 634, 729, 638, 639, 640, 0, 641, 642, 0,
	637, 628, 0, 643, 644, 645, 646, 647, 648, 0,
	649, 650, 0, 651, 730, 731, 732, 733, 0, 662,
	0, 652, 654, 655, 656, 734, 657, 735, 0, 658,
	659, 660, 661, 653, 663, 664, 0, 0, 665, 666,
	668, 670, 671, 667, 669, 672, 0, 673, 0, 0,
	674, 675, 676, 736, 737, 738, 0, 678, 677, 679,
	680, 681, 739, 682, 683, 282, 0, 291, 0, 684,
	685, 740, 686, 687, 688, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 297, 298, 300, 299, 301, 302,
	303, 304, 0, 305, 306, 0, 0, 0, 0, 0,
	689, 0, 0, 0, 307, 0, 308, 309, 0, 310,
	311, 312, 313, 314, 315, 316, 690, 691, 0, 317,
	692, 318, 693, 0, 694, 319, 320, 321, 322, 323,
	324, 0, 0, 0, 325, 695, 696, 697, 0, 326,
	327, 698, 0, 0, 0, 328, 329, 330, 331, 332,
	333, 334, 335, 0, 0, 337, 338, 339, 336, 340,
	0, 341, 0, 342, 343, 344, 345, 346, 347, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 0, 0,
	0, 0, 0, 0, 354, 355, 356, 357, 358, 0,
	359, 361, 699, 700, 0, 364, 360, 362, 0, 365,
	363, 366, 0, 367, 368, 369, 0, 0, 370, 371,
	372, 0, 373, 374, 375, 0, 376, 377, 378, 0,
	379, 380, 701, 381, 382, 383, 385, 387, 384, 386,
	388, 389, 390, 391, 702, 703, 392, 0, 294, 0,
	0, 0, 0, 0, 393, 394, 395, 704, 0, 0,
	0, 396, 0, 397, 398, 399, 0, 400, 401, 0,
	0, 402, 403, 404, 705, 706, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 0, 414, 707, 0, 708,
	415, 0, 416, 417, 418, 419, 420, 421, 422, 709,
	710, 711, 511, 0, 423, 424, 0, 425, 426, 427,
	428, 429, 0, 0, 0, 295, 430, 431, 432, 0,
	0, 512, 433, 712, 713, 0, 714, 0, 434, 435,
	0, 715, 0, 436, 437, 438, 0, 439, 0, 0,
	0, 440, 441, 442, 443, 444, 445, 0, 446, 448,
	447, 0, 449, 716, 0, 450, 451, 0, 0, 452,
	453, 454, 455, 456, 457, 460, 0, 0, 458, 459,
	461, 462, 0, 463, 464, 466, 469, 465, 467, 468,
	470, 483, 484, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 486, 0, 485, 0, 487,
	488, 489, 490, 491, 498, 500, 501, 496, 497, 499,
	502, 503, 505, 493, 494, 495, 0, 504, 492, 0,
	296, 0, 506, 507, 508, 509, 0, 717, 510, 718,
	513, 514, 0, 0, 515, 0, 516, 0, 0, 518,
	519, 520, 0, 0, 521, 522, 719, 0, 523, 0,
	720, 524, 525, 517, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 0, 535, 536, 721, 537, 538, 539,
	722, 540, 541, 542, 723, 543, 724, 544, 545, 0,
	546, 547, 548, 0, 549, 550, 551, 552, 553, 554,
	555, 556, 725, 557, 558, 560, 559, 561, 0, 562,
	0, 563, 564, 565, 0, 0, 0, 0, 0, 566,
	567, 569, 0, 570, 571, 572, 573, 568, 574, 575,
	576, 577, 578, 579, 0, 580, 581, 582, 0, 583,
	584, 585, 586, 587, 726, 588, 0, 589, 590, 597,
	598, 599, 591, 592, 593, 600, 601, 602, 603, 604,
	0, 606, 607, 605, 608, 609, 610, 0, 611, 612,
	594, 595, 613, 614, 0, 615, 616, 617, 618, 619,
	620, 621, 727, 0, 622, 0, 623, 624, 625, 626,
	627, 629, 596, 630, 635, 636, 728, 631, 632, 633,
	634, 729, 638, 639, 640, 0, 641, 642, 0, 637,
	628, 0, 643, 644, 645, 646, 647, 648, 0, 649,
	650, 0, 651, 730, 731, 732, 733, 0, 662, 0,
	652, 654, 655, 656, 734, 657, 735, 0, 658, 659,
	660, 661, 653, 663, 664, 0, 0, 665, 666, 668,
	670, 671, 667, 669, 672, 0, 673, 0, 0, 674,
	675, 676, 736, 737, 738, 0, 678, 677, 679, 680,
	681, 739, 682, 683, 291, 0, 0, 0, 684, 685,
	740, 686, 687, 688, 0, 0, 0, 0, 0, 0,
	0, 297, 298, 300, 299, 301, 302, 303, 304, 0,
	305, 306, 0, 0, 0, 0, 0, 689, 0, 0,
	0, 307, 0, 308, 309, 0, 310, 311, 312, 313,
	314, 315, 316, 690, 691, 0, 317, 692, 318, 693,
	0, 694, 319, 320, 321, 322, 323, 324, 0, 0,
	0, 325, 695, 696, 697, 0, 326, 327, 698, 0,
	0, 0, 328, 329, 330, 331, 332, 333, 334, 335,
	0, 0, 337, 338, 339, 336, 340, 0, 341, 0,
	342, 343, 344, 345, 346, 347, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 0, 0, 0, 0, 0,
	0, 354, 355, 356, 357, 358, 0, 359, 361, 699,
	700, 0, 364, 360, 362, 0, 365, 363, 366, 0,
	367, 368, 369, 0, 0, 370, 371, 372, 0, 373,
	374, 375, 0, 376, 377, 378, 0, 379, 380, 701,
	381, 382, 383, 385, 387, 384, 386, 388, 389, 390,
	391, 702, 703, 392, 0, 294, 0, 0, 0, 0,
	0, 393, 394, 395, 704, 0, 0, 0, 396, 0,
	397, 398, 399, 0, 400, 401, 0, 0, 402, 403,
	404, 705, 706, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 0, 414, 707, 0, 708, 415, 0, 416,
	417, 418, 419, 420, 421, 422, 709, 710, 711, 511,
	0, 423, 424, 0, 425, 426, 427, 428, 429, 0,
	0, 0, 295, 430, 431, 432, 0, 0, 512, 433,
	712, 713, 0, 714, 0, 434, 435, 0, 715, 0,
	436, 437, 438, 0, 439, 0, 0, 0, 440, 441,
	442, 443, 444, 445, 0, 446, 448, 447, 0, 449,
	716, 0, 450, 451, 0, 0, 452, 453, 454, 455,
	456, 457, 460, 0, 0, 458, 459, 461, 462, 0,
	463, 464, 466, 469, 465, 467, 468, 470, 483, 484,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 486, 0, 485, 0, 487, 488, 489, 490,
	491, 498, 500, 501, 496, 497, 499, 502, 503, 505,
	493, 494, 495, 0, 504, 492, 0, 296, 0, 506,
	507, 508, 509, 0, 717, 510, 718, 513, 514, 0,
	0, 515, 0, 516, 0, 0, 518, 519, 520, 0,
	0, 521, 522, 719, 0, 523, 0, 720, 524, 525,
	517, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	0, 535, 536, 721, 537, 538, 539, 722, 540, 541,
	542, 723, 543, 724, 544, 545, 0, 546, 547, 548,
	0, 549, 550, 551, 552, 553, 554, 555, 556, 725,
	557, 558, 560, 559, 561, 0, 562, 0, 563, 564,
	565, 0, 0, 0, 0, 0, 566, 567, 569, 0,
	570, 571, 572, 573, 568, 574, 575, 576, 577, 578,
	579, 0, 580, 581, 582, 0, 583, 584, 585, 586,
	587, 726, 588, 0, 589, 590, 597, 598, 599, 591,
	592, 593, 600, 601, 602, 603, 604, 0, 606, 607,
	605, 608, 609, 610, 0, 611, 612, 594, 595, 613,
	614, 0, 615, 616, 617, 618, 619, 620, 621, 727,
	0, 622, 0, 623, 624, 625, 626, 627, 629, 596,
	630, 635, 636, 728, 631, 632, 633, 634, 729, 638,
	639, 640, 0, 641, 642, 0, 637, 628, 0, 643,
	644, 645, 646, 647, 648, 0, 649, 650, 0, 651,
	730, 731, 732, 733, 0, 662, 0, 652, 654, 655,
	656, 734, 657, 735, 0, 658, 659, 660, 661, 653,
	663, 664, 0, 0, 665, 666, 668, 670, 671, 667,
	669, 672, 0, 673, 0, 0, 674, 675, 676, 736,
	737, 738, 0, 678, 677, 679, 680, 681, 739, 682,
	683, 291, 0, 0, 0, 684, 685, 740, 686, 687,
	688, 0, 0, 0, 0, 0, 0, 0, 297, 298,
	300, 299, 301, 302, 303, 304, 0, 305, 306, 0,
	0, 0, 0, 0, 689, 0, 0, 0, 307, 0,
	308, 309, 0, 310, 311, 312, 313, 314, 315, 316,
	690, 691, 0, 317, 692, 318, 693, 0, 694, 319,
	320, 321, 322, 323, 324, 0, 0, 0, 325, 695,
	696, 697, 0, 326, 327, 698, 0, 0, 0, 328,
	329, 330, 331, 332, 333, 334, 335, 0, 0, 337,
	338, 339, 336, 340, 0, 341, 0, 342, 343, 344,
	345, 346, 347, 765, 348, 349, 350, 0, 351, 352,
	353, 0, 0, 0, 0, 0, 0, 0, 354, 355,
	356, 357, 358, 0, 359, 361, 699, 700, 0, 364,
	360, 362, 0, 365, 363, 366, 0, 367, 368, 369,
	0, 0, 370, 371, 372, 0, 373, 374, 375, 0,
	376, 377, 378, 0, 379, 380, 701, 381, 382, 383,
	385, 387, 384, 386, 388, 389, 390, 391, 702, 703,
	392, 0, 0, 0, 0, 0, 0, 0, 393, 394,
	395, 704, 0, 0, 0, 396, 0, 397, 398, 399,
	0, 400, 401, 0, 0, 402, 403, 404, 705, 706,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 766,
	414, 707, 0, 708, 415, 0, 416, 417, 418, 419,
	420, 421, 422, 709, 710, 711, 511, 0, 423, 424,
	0, 425, 426, 427, 428, 429, 0, 0, 0, 0,
	430, 431, 432, 0, 0, 512, 433, 712, 713, 0,
	714, 0, 434, 435, 0, 715, 0, 436, 437, 438,
	0, 439, 0, 0, 0, 440, 441, 442, 443, 444,
	445, 0, 446, 448, 447, 0, 449, 716, 0, 450,
	451, 0, 0, 452, 453, 454, 455, 456, 457, 460,
	0, 0, 458, 459, 461, 462, 0, 463, 464, 466,
	469, 465, 467, 468, 470, 483, 484, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 486,
	0, 485, 0, 487, 488, 489, 490, 491, 498, 500,
	501, 496, 497, 499, 502, 503, 505, 493, 494, 495,
	0, 504, 492, 0, 0, 0, 506, 507, 508, 509,
	0, 717, 510, 718, 513, 514, 0, 0, 515, 0,
	516, 0, 0, 518, 519, 520, 0, 0, 521, 522,
	719, 0, 523, 0, 720, 524, 525, 517, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 0, 535, 536,
	721, 537, 538, 539, 722, 540, 541, 542, 723, 543,
	724, 544, 545, 0, 546, 547, 548, 0, 549, 550,
	551, 552, 553, 554, 555, 556, 725, 557, 558, 560,
	559, 561, 0, 562, 0, 563, 564, 565, 0, 0,
	0, 0, 0, 566, 567, 569, 0, 570, 571, 572,
	573, 568, 574, 575, 576, 577, 578, 579, 0, 580,
	581, 582, 0, 583, 584, 585, 586, 587, 726, 588,
	0, 589, 590, 597, 598, 599, 591, 592, 593, 600,
	601, 602, 603, 604, 767, 606, 607, 605, 608, 609,
	610, 0, 611, 612, 594, 595, 613, 614, 0, 615,
	616, 617, 618, 619, 620, 621, 727, 0, 622, 0,
	623, 624, 625, 626, 627, 629, 596, 630, 635, 636,
	728, 631, 632, 633, 634, 729, 638, 639, 640, 0,
	641, 642, 0, 637, 628, 0, 643, 644, 645, 646,
	647, 648, 0, 649, 650, 0, 651, 730, 731, 732,
	733, 0, 662, 0, 652, 654, 655, 656, 734, 657,
	735, 0, 658, 659, 660, 661, 653, 663, 664, 0,
	0, 665, 666, 668, 670, 671, 667, 669, 672, 0,
	673, 0, 0, 674, 675, 676, 736, 737, 738, 0,
	678, 677, 679, 680, 681, 739, 682, 683, 291, 0,
	0, 0, 684, 685, 740, 686, 687, 688, 0, 0,
	0, 0, 0, 0, 0, 297, 298, 300, 299, 301,
	302, 303, 304, 0, 305, 306, 0, 0, 0, 0,
	0, 689, 0, 0, 0, 307, 0, 308, 309, 0,
	310, 311, 312, 313, 314, 315, 316, 690, 691, 0,
	317, 692, 318, 693, 0, 694, 319, 320, 321, 322,
	323, 324, 0, 0, 0, 325, 695, 696, 697, 0,
	326, 327, 698, 0, 0, 0, 328, 329, 330, 331,
	332, 333, 334, 335, 0, 0, 337, 338, 339, 336,
	340, 0, 341, 0, 342, 343, 344, 345, 346, 347,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 0,
	0, 0, 0, 0, 0, 354, 355, 356, 2571, 358,
	0, 359, 361, 699, 700, 0, 364, 360, 362, 0,
	365, 363, 366, 0, 367, 368, 369, 0, 0, 370,
	371, 372, 0, 373, 374, 375, 0, 376, 377, 378,
	0, 379, 380, 701, 381, 382, 383, 385, 387, 384,
	386, 388, 389, 390, 391, 702, 703, 392, 0, 294,
	0, 0, 0, 0, 0, 393, 394, 395, 704, 0,
	0, 0, 396, 0, 397, 398, 399, 0, 400, 401,
	0, 0, 402, 403, 404, 705, 706, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 0, 414, 707, 0,
	708, 415, 0, 416, 417, 418, 419, 420, 421, 422,
	709, 710, 711, 511, 0, 423, 424, 0, 425, 426,
	427, 428, 429, 0, 0, 0, 295, 430, 431, 432,
	0, 0, 512, 433, 712, 713, 0, 714, 0, 434,
	435, 0, 715, 0, 436, 437, 438, 0, 439, 0,
	0, 0, 440, 441, 442, 443, 444, 445, 0, 446,
	448, 447, 0, 449, 716, 0, 450, 451, 0, 0,
	452, 453, 454, 455, 456, 457, 460, 0, 0, 458,
	459, 461, 462, 0, 463, 464, 466, 469, 465, 467,
	468, 470, 483, 484, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 486, 0, 485, 0,
	487, 488, 489, 490, 491, 498, 500, 501, 496, 497,
	499, 502, 503, 505, 493, 494, 495, 0, 504, 492,
	0, 296, 0, 506, 507, 508, 509, 0, 717, 510,
	718, 513, 514, 0, 0, 515, 0, 516, 0, 0,
	518, 519, 520, 0, 0, 521, 522, 719, 0, 523,
	0, 720, 524, 525, 517, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 0, 535, 536, 721, 537, 538,
	539, 722, 540, 541, 542, 723, 543, 724, 544, 545,
	0, 546, 547, 548, 0, 549, 550, 551, 552, 553,
	554, 555, 556, 725, 557, 558, 560, 559, 561, 0,
	562, 0, 563, 564, 565, 0, 0, 0, 0, 0,
	566, 567, 569, 0, 570, 571, 572, 573, 568, 574,
	575, 576, 577, 578, 579, 0, 580, 581, 582, 0,
	583, 584, 585, 586, 587, 726, 588, 0, 589, 590,
	597, 598, 599, 591, 592, 593, 600, 601, 602, 603,
	604, 0, 606, 607, 605, 608, 609, 610, 0, 611,
	612, 594, 595, 613, 614, 0, 615, 616, 617, 618,
	619, 620, 621, 727, 0, 622, 0, 623, 624, 625,
	626, 627, 629, 596, 630, 635, 636, 728, 631, 632,
	633, 634, 729, 638, 639, 640, 0, 641, 642, 0,
	637, 628, 0, 643, 644, 645, 646, 647, 648, 0,
	649, 650, 0, 651, 730, 731, 732, 733, 0, 662,
	0, 652, 654, 655, 656, 734, 657, 735, 0, 658,
	659, 660, 661, 653, 663, 664, 0, 0, 665, 666,
	668, 670, 671, 667, 669, 672, 0, 673, 0, 0,
	674, 675, 676, 736, 737, 738, 0, 678, 677, 679,
	680, 681, 739, 682, 683, 291, 0, 0, 0, 684,
	685, 740, 686, 687, 688, 0, 0, 0, 0, 0,
	0, 0, 297, 298, 300, 299, 301, 302, 303, 304,
	0, 305, 306, 0, 0, 0, 0, 0, 689, 0,
	0, 0, 307, 0, 308, 309, 0, 310, 311, 312,
	313, 314, 315, 316, 690, 691, 0, 317, 692, 318,
	693, 0, 694, 319, 320, 321, 322, 323, 324, 0,
	0, 0, 325, 695, 696, 697, 0, 326, 327, 698,
	0, 0, 0, 328, 329, 330, 331, 332, 333, 334,
	335, 0, 0, 337, 338, 339, 336, 340, 0, 341,
	0, 342, 343, 344, 345, 346, 347, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 0, 0, 0, 0,
	0, 0, 354, 355, 356, 2569, 358, 0, 359, 361,
	699, 700, 0, 364, 360, 362, 0, 365, 363, 366,
	0, 367, 368, 369, 0, 0, 370, 371, 372, 0,
	373, 374, 375, 0, 376, 377, 378, 0, 379, 380,
	701, 381, 382, 383, 385, 387, 384, 386, 388, 389,
	390, 391, 702, 703, 392, 0, 294, 0, 0, 0,
	0, 0, 393, 394, 395, 704, 0, 0, 0, 396,
	0, 397, 398, 399, 0, 400, 401, 0, 0, 402,
	403, 404, 705, 706, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 0, 414, 707, 0, 708, 415, 0,
	416, 417, 418, 419, 420, 421, 422, 709, 710, 711,
	511, 0, 423, 424, 0, 425, 426, 427, 428, 429,
	0, 0, 0, 295, 430, 431, 432, 0, 0, 512,
	433, 712, 713, 0, 714, 0, 434, 435, 0, 715,
	0, 436, 437, 438, 0, 439, 0, 0, 0, 440,
	441, 442, 443, 444, 445, 0, 446, 448, 447, 0,
	449, 716, 0, 450, 451, 0, 0, 452, 453, 454,
	455, 456, 457, 460, 0, 0, 458, 459, 461, 462,
	0, 463, 464, 466, 469, 465, 467, 468, 470, 483,
	484, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 486, 0, 485, 0, 487, 488, 489,
	490, 491, 498, 500, 501, 496, 497, 499, 502, 503,
	505, 493, 494, 495, 0, 504, 492, 0, 296, 0,
	506, 507, 508, 509, 0, 717, 510, 718, 513, 514,
	0, 0, 515, 0, 516, 0, 0, 518, 519, 520,
	0, 0, 521, 522, 719, 0, 523, 0, 720, 524,
	525, 517, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 0, 535, 536, 721, 537, 538, 539, 722, 540,
	541, 542, 723, 543, 724, 544, 545, 0, 546, 547,
	548, 0, 549, 550, 551, 552, 553, 554, 555, 556,
	725, 557, 558, 560, 559, 561, 0, 562, 0, 563,
	564, 565, 0, 0, 0, 0, 0, 566, 567, 569,
	0, 570, 571, 572, 573, 568, 574, 575, 576, 577,
	578, 579, 0, 580, 581, 582, 0, 583, 584, 585,
	586, 587, 726, 588, 0, 589, 590, 597, 598, 599,
	591, 592, 593, 600, 601, 602, 603, 604, 0, 606,
	607, 605, 608, 609, 610, 0, 611, 612, 594, 595,
	613, 614, 0, 615, 616, 617, 618, 619, 620, 621,
	727, 0, 622, 0, 623, 624, 625, 626, 627, 629,
	596, 630, 635, 636, 728, 631, 632, 633, 634, 729,
	638, 639, 640, 0, 641, 642, 0, 637, 628, 0,
	643, 644, 645, 646, 647, 648, 0, 649, 650, 0,
	651, 730, 731, 732, 733, 0, 662, 0, 652, 654,
	655, 656, 734, 657, 735, 0, 658, 659, 660, 661,
	653, 663, 664, 0, 0, 665, 666, 668, 670, 671,
	667, 669, 672, 0, 673, 0, 0, 674, 675, 676,
	736, 737, 738, 0, 678, 677, 679, 680, 681, 739,
	682, 683, 291, 0, 0, 0, 684, 685, 740, 686,
	687, 688, 0, 0, 0, 0, 0, 0, 0, 297,
	298, 300, 299, 301, 302, 303, 304, 0, 305, 306,
	0, 0, 0, 0, 0, 689, 0, 0, 0, 307,
	0, 308, 309, 0, 310, 311, 312, 313, 314, 315,
	316, 690, 691, 0, 317, 692, 318, 693, 0, 694,
	319, 320, 321, 322, 323, 324, 0, 0, 0, 325,
	695, 696, 697, 0, 326, 327, 698, 0, 0, 0,
	328, 329, 330, 331, 332, 333, 334, 335, 0, 0,
	337, 338, 339, 336, 340, 0, 341, 0, 342, 343,
	344, 345, 346, 347, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 0, 0, 0, 0, 0, 0, 354,
	355, 356, 2567, 358, 0, 359, 361, 699, 700, 0,
	364, 360, 362, 0, 365, 363, 366, 0, 367, 368,
	369, 0, 0, 370, 371, 372, 0, 373, 374, 375,
	0, 376, 377, 378, 0, 379, 380, 701, 381, 382,
	383, 385, 387, 384, 386, 388, 389, 390, 391, 702,
	703, 392, 0, 294, 0, 0, 0, 0, 0, 393,
	394, 395, 704, 0, 0, 0, 396, 0, 397, 398,
	399, 0, 400, 401, 0, 0, 402, 403, 404, 705,
	706, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	0, 414, 707, 0, 708, 415, 0, 416, 417, 418,
	419, 420, 421, 422, 709, 710, 711, 511, 0, 423,
	424, 0, 425, 426, 427, 428, 429, 0, 0, 0,
	295, 430, 431, 432, 0, 0, 512, 433, 712, 713,
	0, 714, 0, 434, 435, 0, 715, 0, 436, 437,
	438, 0, 439, 0, 0, 0, 440, 441, 442, 443,
	444, 445, 0, 446, 448, 447, 0, 449, 716, 0,
	450, 451, 0, 0, 452, 453, 454, 455, 456, 457,
	460, 0, 0, 458, 459, 461, 462, 0, 463, 464,
	466, 469, 465, 467, 468, 470, 483, 484, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	486, 0, 485, 0, 487, 488, 489, 490, 491, 498,
	500, 501, 496, 497, 499, 502, 503, 505, 493, 494,
	495, 0, 504, 492, 0, 296, 0, 506, 507, 508,
	509, 0, 717, 510, 718, 513, 514, 0, 0, 515,
	0, 516, 0, 0, 518, 519, 520, 0, 0, 521,
	522, 719, 0, 523, 0, 720, 524, 525, 517, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 0, 535,
	536, 721, 537, 538, 539, 722, 540, 541, 542, 723,
	543, 724, 544, 545, 0, 546, 547, 548, 0, 549,
	550, 551, 552, 553, 554, 555, 556, 725, 557, 558,
	560, 559, 561, 0, 562, 0, 563, 564, 565, 0,
	0, 0, 0, 0, 566, 567, 569, 0, 570, 571,
	572, 573, 568, 574, 575, 576, 577, 578, 579, 0,
	580, 581, 582, 0, 583, 584, 585, 586, 587, 726,
	588, 0, 589, 590, 597, 598, 599, 591, 592, 593,
	600, 601, 602, 603, 604, 0, 606, 607, 605, 608,
	609, 610, 0, 611, 612, 594, 595, 613, 614, 0,
	615, 616, 617, 618, 619, 620, 621, 727, 0, 622,
	0, 623, 624, 625, 626, 627, 629, 596, 630, 635,
	636, 728, 631, 632, 633, 634, 729, 638, 639, 640,
	0, 641, 642, 0, 637, 628, 0, 643, 644, 645,
	646, 647, 648, 0, 649, 650, 0, 651, 730, 731,
	732, 733, 0, 662, 0, 652, 654, 655, 656, 734,
	657, 735, 0, 658, 659, 660, 661, 653, 663, 664,
	0, 0, 665, 666, 668, 670, 671, 667, 669, 672,
	0, 673, 0, 0, 674, 675, 676, 736, 737, 738,
	0, 678, 677, 679, 680, 681, 739, 682, 683, 291,
	0, 0, 0, 684, 685, 740, 686, 687, 688, 0,
	0, 0, 0, 0, 0, 0, 297, 298, 300, 299,
	301, 302, 303, 304, 0, 305, 306, 0, 0, 0,
	0, 0, 689, 0, 0, 0, 307, 0, 308, 309,
	0, 310, 311, 312, 313, 314, 315, 316, 690, 691,
	0, 317, 692, 318, 693, 0, 694, 319, 320, 321,
	322, 323, 324, 0, 0, 0, 325, 695, 696, 697,
	0, 326, 327, 698, 0, 0, 0, 328, 329, 330,
	331, 332, 333, 334, 335, 0, 0, 337, 338, 339,
	336, 340, 0, 341, 0, 342, 343, 344, 345, 346,
	347, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	0, 0, 0, 0, 0, 0, 354, 355, 356, 357,
	358, 0, 359, 361, 699, 700, 0, 364, 360, 362,
	0, 365, 363, 366, 0, 367, 368, 369, 0, 0,
	370, 371, 372, 0, 373, 374, 375, 0, 376, 377,
	378, 0, 379, 380, 701, 381, 382, 383, 385, 387,
	384, 386, 388, 389, 390, 391, 702, 703, 392, 0,
	294, 0, 0, 0, 0, 0, 393, 394, 395, 704,
	0, 0, 0, 396, 0, 397, 398, 399, 0, 400,
	401, 0, 0, 402, 403, 404, 705, 706, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 0, 414, 707,
	0, 708, 415, 0, 416, 417, 418, 419, 420, 421,
	422, 2480, 710, 711, 511, 0, 423, 424, 0, 425,
	426, 427, 428, 429, 0, 0, 0, 295, 430, 431,
	432, 0, 0, 512, 433, 712, 713, 0, 714, 0,
	434, 435, 0, 715, 0, 436, 437, 438, 0, 439,
	0, 0, 0, 440, 441, 442, 443, 444, 445, 0,
	446, 448, 447, 0, 449, 716, 0, 450, 451, 0,
	0, 452, 453, 454, 455, 456, 457, 460, 0, 0,
	458, 459, 461, 462, 0, 463, 464, 466, 469, 465,
	467, 468, 470, 483, 484, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 486, 0, 485,
	0, 487, 488, 489, 490, 491, 498, 500, 501, 496,
	497, 499, 502, 503, 505, 493, 494, 495, 0, 504,
	492, 0, 296, 0, 506, 507, 508, 509, 0, 717,
	510, 718, 513, 514, 0, 0, 515, 0, 516, 0,
	0, 518, 519, 520, 0, 0, 521, 522, 719, 0,
	523, 0, 720, 524, 525, 517, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 0, 535, 536, 721, 537,
	538, 539, 722, 540, 541, 542, 723, 543, 724, 544,
	545, 0, 546, 547, 548, 0, 549, 550, 551, 552,
	553, 554, 555, 556, 725, 557, 558, 560, 559, 561,
	0, 562, 0, 563, 564, 565, 0, 0, 0, 0,
	0, 566, 567, 569, 0, 570, 571, 572, 573, 568,
	574, 575, 576, 577, 578, 579, 0, 580, 581, 582,
	0, 583, 584, 585, 586, 587, 726, 588, 0, 589,
	590, 597, 598, 599, 591, 592, 593, 600, 601, 602,
	603, 604, 0, 606, 607, 605, 608, 609, 610, 0,
	611, 612, 594, 595, 613, 614, 0, 615, 616, 617,
	618, 619, 620, 621, 727, 0, 622, 0, 623, 624,
	625, 626, 627, 629, 596, 630, 635, 636, 728, 631,
	632, 633, 634, 729, 638, 639, 640, 0, 641, 642,
	0, 637, 628, 0, 643, 644, 645, 646, 647, 648,
	0, 649, 650, 0, 651, 730, 731, 732, 733, 0,
	662, 0, 652, 654, 655, 656, 734, 657, 735, 0,
	658, 659, 660, 661, 653, 663, 664, 0, 0, 665,
	666, 668, 670, 671, 667, 669, 672, 0, 673, 0,
	0, 674, 675, 676, 736, 737, 738, 0, 678, 677,
	679, 680, 681, 739, 682, 683, 291, 0, 0, 0,
	684, 685, 740, 686, 687, 688, 0, 0, 0, 0,
	0, 0, 0, 297, 298, 300, 299, 301, 302, 303,
	304, 0, 305, 306, 0, 0, 0, 0, 0, 689,
	0, 0, 0, 307, 0, 308, 309, 0, 310, 311,
	312, 313, 314, 315, 316, 690, 691, 0, 317, 692,
	318, 693, 0, 694, 319, 320, 321, 322, 323, 324,
	0, 0, 0, 325, 695, 696, 697, 0, 326, 327,
	698, 0, 0, 0, 328, 329, 330, 331, 332, 333,
	334, 335, 0, 0, 337, 338, 339, 336, 340, 0,
	341, 0, 342, 343, 344, 345, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 0, 0, 0,
	0, 0, 0, 354, 355, 356, 357, 358, 0, 359,
	361, 699, 700, 0, 364, 360, 362, 0, 365, 363,
	366, 0, 367, 368, 369, 0, 0, 370, 371, 372,
	0, 373, 374, 375, 0, 376, 377, 378, 0, 379,
	380, 701, 381, 382, 383, 385, 387, 384, 386, 388,
	389, 390, 391, 702, 703, 392, 0, 294, 0, 0,
	0, 0, 0, 393, 394, 395, 704, 0, 0, 0,
	396, 0, 397, 398, 399, 0, 400, 401, 0, 0,
	402, 403, 404, 705, 706, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 0, 414, 707, 0, 708, 415,
	0, 416, 417, 418, 419, 420, 421, 422, 2236, 710,
	711, 511, 0, 423, 424, 0, 425, 426, 427, 428,
	429, 0, 0, 0, 295, 430, 431, 432, 0, 0,
	512, 433, 712, 713, 0, 714, 0, 434, 435, 0,
	715, 0, 436, 437, 438, 0, 439, 0, 0, 0,
	440, 441, 442, 443, 444, 445, 0, 446, 448, 447,
	0, 449, 716, 0, 450, 451, 0, 0, 452, 453,
	454, 455, 456, 457, 460, 0, 0, 458, 459, 461,
	462, 0, 463, 464, 466, 469, 465, 467, 468, 470,
	483, 484, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 486, 0, 485, 0, 487, 488,
	489, 490, 491, 498, 500, 501, 496, 497, 499, 502,
	503, 505, 493, 494, 495, 0, 504, 492, 0, 296,
	0, 506, 507, 508, 509, 0, 717, 510, 718, 513,
	514, 0, 0, 515, 0, 516, 0, 0, 518, 519,
	520, 0, 0, 521, 522, 719, 0, 523, 0, 720,
	524, 525, 517, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 0, 535, 536, 721, 537, 538, 539, 722,
	540, 541, 542, 723, 543, 724, 544, 545, 0, 546,
	547, 548, 0, 549, 550, 551, 552, 553, 554, 555,
	556, 725, 557, 558, 560, 559, 561, 0, 562, 0,
	563, 564, 565, 0, 0, 0, 0, 0, 566, 567,
	569, 0, 570, 571, 572, 573, 568, 574, 575, 576,
	577, 578, 579, 0, 580, 581, 582, 0, 583, 584,
	585, 586, 587, 726, 588, 0, 589, 590, 597, 598,
	599, 591, 592, 593, 600, 601, 602, 603, 604, 0,
	606, 607, 605, 608, 609, 610, 0, 611, 612, 594,
	595, 613, 614, 0, 615, 616, 617, 618, 619, 620,
	621, 727, 0, 622, 0, 623, 624, 625, 626, 627,
	629, 596, 630, 635, 636, 728, 631, 632, 633, 634,
	729, 638, 639, 640, 0, 641, 642, 0, 637, 628,
	0, 643, 644, 645, 646, 647, 648, 0, 649, 650,
	0, 651, 730, 731, 732, 733, 0, 662, 0, 652,
	654, 655, 656, 734, 657, 735, 0, 658, 659, 660,
	661, 653, 663, 664, 0, 0, 665, 666, 668, 670,
	671, 667, 669, 672, 0, 673, 0, 0, 674, 675,
	676, 736, 737, 738, 0, 678, 677, 679, 680, 681,
	739, 682, 683, 291, 0, 0, 0, 684, 685, 740,
	686, 687, 688, 0, 0, 0, 0, 0, 0, 0,
	297, 298, 300, 299, 301, 302, 303, 304, 0, 305,
	306, 0, 0, 0, 0, 0, 689, 0, 0, 0,
	307, 0, 308, 309, 0, 310, 311, 312, 313, 314,
	315, 316, 690, 691, 0, 317, 692, 318, 693, 0,
	694, 319, 320, 321, 322, 323, 324, 0, 0, 0,
	325, 695, 696, 697, 0, 326, 327, 698, 0, 0,
	0, 328, 329, 330, 331, 332, 333, 334, 335, 0,
	0, 337, 338, 339, 336, 340, 0, 341, 0, 342,
	343, 344, 345, 346, 347, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 0, 0, 0, 0, 0, 0,
	354, 355, 356, 357, 358, 0, 359, 361, 699, 700,
	0, 364, 360, 362, 0, 365, 363, 366, 0, 367,
	368, 369, 0, 0, 370, 371, 372, 0, 373, 374,
	375, 0, 376, 377, 378, 0, 379, 380, 701, 381,
	382, 383, 385, 387, 384, 386, 388, 389, 390, 391,
	702, 703, 392, 0, 294, 0, 0, 0, 0, 0,
	393, 394, 395, 704, 0, 0, 0, 396, 0, 397,
	398, 399, 0, 400, 401, 0, 0, 402, 403, 404,
	705, 706, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 0, 414, 707, 0, 708, 415, 0, 416, 417,
	418, 419, 420, 421, 422, 2230, 710, 711, 511, 0,
	423, 424, 0, 425, 426, 427, 428, 429, 0, 0,
	0, 295, 430, 431, 432, 0, 0, 512, 433, 712,
	713, 0, 714, 0, 434, 435, 0, 715, 0, 436,
	437, 438, 0, 439, 0, 0, 0, 440, 441, 442,
	443, 444, 445, 0, 446, 448, 447, 0, 449, 716,
	0, 450, 451, 0, 0, 452, 453, 454, 455, 456,
	457, 460, 0, 0, 458, 459, 461, 462, 0, 463,
	464, 466, 469, 465, 467, 468, 470, 483, 484, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 486, 0, 485, 0, 487, 488, 489, 490, 491,
	498, 500, 501, 496, 497, 499, 502, 503, 505, 493,
	494, 495, 0, 504, 492, 0, 296, 0, 506, 507,
	508, 509, 0, 717, 510, 718, 513, 514, 0, 0,
	515, 0, 516, 0, 0, 518, 519, 520, 0, 0,
	521, 522, 719, 0, 523, 0, 720, 524, 525, 517,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 0,
	535, 536, 721, 537, 538, 539, 722, 540, 541, 542,
	723, 543, 724, 544, 545, 0, 546, 547, 548, 0,
	549, 550, 551, 552, 553, 554, 555, 556, 725, 557,
	558, 560, 559, 561, 0, 562, 0, 563, 564, 565,
	0, 0, 0, 0, 0, 566, 567, 569, 0, 570,
	571, 572, 573, 568, 574, 575, 576, 577, 578, 579,
	0, 580, 581, 582, 0, 583, 584, 585, 586, 587,
	726, 588, 0, 589, 590, 597, 598, 599, 591, 592,
	593, 600, 601, 602, 603, 604, 0, 606, 607, 605,
	608, 609, 610, 0, 611, 612, 594, 595, 613, 614,
	0, 615, 616, 617, 618, 619, 620, 621, 727, 0,
	622, 0, 623, 624, 625, 626, 627, 629, 596, 630,
	635, 636, 728, 631, 632, 633, 634, 729, 638, 639,
	640, 0, 641, 642, 0, 637, 628, 0, 643, 644,
	645, 646, 647, 648, 0, 649, 650, 0, 651, 730,
	731, 732, 733, 0, 662, 0, 652, 654, 655, 656,
	734, 657, 735, 0, 658, 659, 660, 661, 653, 663,
	664, 0, 0, 665, 666, 668, 670, 671, 667, 669,
	672, 0, 673, 0, 0, 674, 675, 676, 736, 737,
	738, 0, 678, 677, 679, 680, 681, 739, 682, 683,
	981, 0, 291, 0, 684, 685, 740, 686, 687, 688,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 297,
	298, 300, 299, 301, 302, 303, 304, 0, 305, 306,
	0, 0, 0, 0, 0, 689, 0, 0, 0, 307,
	0, 308, 309, 0, 310, 311, 312, 313, 314, 315,
	316, 690, 691, 0, 317, 692, 318, 693, 0, 694,
	319, 320, 321, 322, 323, 324, 0, 0, 0, 325,
	695, 696, 697, 0, 326, 327, 698, 0, 0, 0,
	328, 329, 330, 331, 332, 333, 334, 335, 0, 0,
	337, 338, 339, 336, 340, 0, 341, 0, 342, 343,
	344, 345, 346, 347, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 0, 0, 0, 0, 0, 0, 354,
	355, 356, 357, 358, 0, 359, 361, 699, 700, 0,
	364, 360, 362, 0, 365, 363, 366, 0, 367, 368,
	369, 0, 0, 370, 371, 372, 0, 373, 374, 375,
	0, 376, 377, 378, 0, 379, 380, 701, 381, 382,
	383, 385, 387, 384, 386, 388, 389, 390, 391, 702,
	703, 392, 0, 0, 0, 0, 0, 0, 0, 393,
	394, 395, 704, 0, 0, 0, 396, 0, 397, 398,
	399, 0, 400, 401, 0, 0, 402, 403, 404, 705,
	706, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	0, 414, 707, 0, 708, 415, 0, 416, 417, 418,
	419, 420, 421, 422, 709, 710, 711, 511, 0, 423,
	424, 0, 425, 426, 427, 428, 429, 0, 0, 0,
	0, 430, 431, 432, 0, 0, 512, 433, 712, 713,
	0, 714, 980, 434, 435, 0, 715, 0, 436, 437,
	438, 0, 439, 0, 0, 0, 440, 441, 442, 443,
	444, 445, 0, 446, 448, 447, 0, 449, 716, 0,
	450, 451, 0, 0, 452, 453, 454, 455, 456, 457,
	460, 0, 0, 458, 459, 461, 462, 0, 463, 464,
	466, 469, 465, 467, 468, 470, 483, 484, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	486, 0, 485, 0, 487, 488, 489, 490, 491, 498,
	500, 501, 496, 497, 499, 502, 503, 505, 493, 494,
	495, 0, 504, 492, 0, 0, 0, 506, 507, 508,
	509, 0, 717, 510, 718, 513, 514, 0, 0, 515,
	0, 516, 0, 0, 518, 519, 520, 0, 0, 521,
	522, 719, 0, 523, 0, 720, 524, 525, 517, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 0, 535,
	536, 721, 537, 538, 539, 722, 540, 541, 542, 723,
	543, 724, 544, 545, 0, 546, 547, 548, 0, 549,
	550, 551, 552, 553, 554, 555, 556, 725, 557, 558,
	560, 559, 561, 0, 562, 0, 563, 564, 565, 0,
	0, 0, 0, 0, 566, 567, 569, 0, 570, 571,
	572, 573, 568, 574, 575, 576, 577, 578, 579, 0,
	580, 581, 582, 0, 583, 584, 585, 586, 587, 726,
	588, 0, 589, 590, 597, 598, 599, 591, 592, 593,
	600, 601, 602, 603, 604, 0, 606, 607, 605, 608,
	609, 610, 0, 611, 612, 594, 595, 613, 614, 0,
	615, 616, 617, 618, 619, 620, 621, 727, 0, 622,
	0, 623, 624, 625, 626, 627, 629, 596, 630, 635,
	636, 728, 631, 632, 633, 634, 729, 638, 639, 640,
	0, 641, 642, 0, 637, 628, 979, 643, 644, 645,
	646, 647, 648, 0, 649, 650, 0, 651, 730, 731,
	732, 733, 0, 662, 0, 652, 654, 655, 656, 734,
	657, 735, 0, 658, 659, 660, 661, 653, 663, 664,
	0, 0, 665, 666, 668, 670, 671, 667, 669, 672,
	0, 673, 0, 0, 674, 675, 676, 736, 737, 738,
	0, 678, 677, 679, 680, 681, 739, 682, 683, 864,
	0, 291, 0, 684, 685, 740, 686, 687, 688, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 297, 853,
	300, 299, 301, 302, 303, 304, 0, 305, 306, 0,
	0, 0, 0, 0, 689, 0, 0, 0, 307, 0,
	308, 309, 0, 310, 311, 312, 313, 862, 315, 316,
	690, 691, 0, 317, 692, 318, 693, 0, 694, 319,
	320, 321, 322, 323, 324, 0, 0, 0, 325, 695,
	696, 697, 0, 326, 327, 698, 0, 0, 0, 328,
	329, 330, 331, 332, 333, 334, 335, 0, 0, 337,
	338, 339, 336, 340, 0, 341, 0, 342, 343, 344,
	345, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 0, 0, 0, 0, 0, 0, 354, 355,
	356, 357, 358, 0, 359, 361, 699, 700, 0, 364,
	360, 362, 0, 365, 363, 366, 0, 367, 368, 369,
	0, 0, 370, 371, 372, 0, 373, 374, 375, 0,
	376, 377, 378, 0, 379, 380, 701, 381, 382, 383,
	385, 387, 384, 386, 388, 389, 390, 391, 702, 703,
	392, 0, 0, 0, 0, 0, 0, 0, 393, 394,
	855, 704, 0, 0, 0, 396, 0, 397, 398, 399,
	0, 861, 401, 857, 0, 402, 403, 404, 705, 706,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 0,
	414, 707, 0, 708, 415, 0, 416, 417, 418, 419,
	420, 421, 422, 709, 710, 711, 511, 0, 423, 424,
	858, 425, 426, 427, 428, 429, 0, 0, 0, 0,
	430, 431, 432, 0, 0, 512, 433, 712, 713, 0,
	714, 0, 434, 435, 0, 715, 0, 436, 437, 438,
	0, 439, 0, 0, 0, 440, 441, 442, 443, 444,
	856, 0, 446, 448, 447, 0, 449, 716, 0, 450,
	451, 0, 0, 452, 453, 454, 455, 456, 457, 460,
	0, 0, 458, 459, 461, 462, 0, 463, 464, 466,
	469, 465, 467, 468, 470, 483, 484, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 486,
	0, 485, 0, 487, 488, 489, 859, 491, 498, 500,
	501, 496, 497, 499, 502, 503, 505, 493, 494, 495,
	0, 504, 492, 0, 0, 0, 506, 507, 508, 509,
	0, 717, 510, 718, 513, 514, 0, 0, 515, 0,
	516, 0, 0, 518, 519, 520, 0, 0, 521, 522,
	719, 0, 523, 0, 720, 524, 525, 517, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 0, 535, 536,
	721, 537, 538, 539, 722, 540, 541, 542, 723, 543,
	724, 544, 545, 0, 860, 547, 548, 0, 549, 550,
	551, 552, 553, 554, 555, 556, 725, 557, 558, 560,
	559, 561, 0, 562, 0, 563, 564, 565, 0, 0,
	0, 0, 0, 566, 854, 569, 0, 570, 571, 572,
	573, 568, 574, 575, 576, 577, 578, 579, 0, 580,
	581, 582, 0, 583, 584, 585, 586, 587, 726, 588,
	0, 589, 590, 597, 598, 599, 591, 592, 593, 600,
	601, 602, 603, 604, 0, 606, 607, 605, 608, 609,
	610, 0, 611, 612, 594, 595, 613, 614, 0, 615,
	616, 617, 618, 619, 620, 621, 727, 0, 622, 0,
	623, 624, 625, 626, 627, 629, 596, 630, 635, 636,
	728, 631, 632, 633, 634, 729, 638, 639, 640, 0,
	641, 642, 0, 637, 628, 0, 643, 644, 645, 646,
	647, 648, 0, 649, 650, 0, 651, 730, 731, 732,
	733, 0, 662, 0, 652, 654, 655, 656, 734, 657,
	735, 0, 658, 659, 660, 661, 653, 663, 664, 0,
	0, 665, 666, 668, 670, 671, 667, 669, 672, 0,
	673, 0, 0, 674, 675, 676, 736, 737, 738, 0,
	678, 677, 679, 680, 681, 739, 682, 683, 847, 0,
	291, 0, 684, 685, 740, 686, 687, 688, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 297, 853, 300,
	299, 301, 302, 303, 304, 0, 305, 306, 0, 0,
	0, 0, 0, 689, 0, 0, 0, 307, 0, 308,
	309, 0, 310, 311, 312, 313, 862, 315, 316, 690,
	691, 0, 317, 692, 318, 693, 0, 694, 319, 320,
	321, 322, 323, 324, 0, 0, 0, 325, 695, 696,
	697, 0, 326, 327, 698, 0, 0, 0, 328, 329,
	330, 331, 332, 333, 334, 335, 0, 0, 337, 338,
	339, 336, 340, 0, 341, 0, 342, 343, 344, 345,
	346, 347, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 0, 0, 0, 0, 0, 0, 354, 355, 356,
	357, 358, 0, 359, 361, 699, 700, 0, 364, 360,
	362, 0, 365, 363, 366, 0, 367, 368, 369, 0,
	0, 370, 371, 372, 0, 373, 374, 375, 0, 376,
	377, 378, 0, 379, 380, 701, 381, 382, 383, 385,
	387, 384, 386, 388, 389, 390, 391, 702, 703, 392,
	0, 0, 0, 0, 0, 0, 0, 393, 394, 855,
	704, 0, 0, 0, 396, 0, 397, 398, 399, 0,
	861, 401, 857, 0, 402, 403, 404, 705, 706, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 0, 414,
	707, 0, 708, 415, 0, 416, 417, 418, 419, 420,
	421, 422, 709, 710, 711, 511, 0, 423, 424, 858,
	425, 426, 427, 428, 429, 0, 0, 0, 0, 430,
	431, 432, 0, 0, 512, 433, 712, 713, 0, 714,
	0, 434, 435, 0, 715, 0, 436, 437, 438, 0,
	439, 0, 0, 0, 440, 441, 442, 443, 444, 856,
	0, 446, 448, 447, 0, 449, 716, 0, 450, 451,
	0, 0, 452, 453, 454, 455, 456, 457, 460, 0,
	0, 458, 459, 461, 462, 0, 463, 464, 466, 469,
	465, 467, 468, 470, 483, 484, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 486, 0,
	485, 0, 487, 488, 489, 859, 491, 498, 500, 501,
	496, 497, 499, 502, 503, 505, 493, 494, 495, 0,
	504, 492, 0, 0, 0, 506, 507, 508, 509, 0,
	717, 510, 718, 513, 514, 0, 0, 515, 0, 516,
	0, 0, 518, 519, 520, 0, 0, 521, 522, 719,
	0, 523, 0, 720, 524, 525, 517, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 0, 535, 536, 721,
	537, 538, 539, 722, 540, 541, 542, 723, 543, 724,
	544, 545, 0, 860, 547, 548, 0, 549, 550, 551,
	552, 553, 554, 555, 556, 725, 557, 558, 560, 559,
	561, 0, 562, 0, 563, 564, 565, 0, 0, 0,
	0, 0, 566, 854, 569, 0, 570, 571, 572, 573,
	568, 574, 575, 576, 577, 578, 579, 0, 580, 581,
	582, 0, 583, 584, 585, 586, 587, 726, 588, 0,
	589, 590, 597, 598, 599, 591, 592, 593, 600, 601,
	602, 603, 604, 0, 606, 607, 605, 608, 609, 610,
	0, 611, 612, 594, 595, 613, 614, 0, 615, 616,
	617, 618, 619, 620, 621, 727, 0, 622, 0, 623,
	624, 625, 626, 627, 629, 596, 630, 635, 636, 728,
	631, 632, 633, 634, 729, 638, 639, 640, 0, 641,
	642, 0, 637, 628, 0, 643, 644, 645, 646, 647,
	648, 0, 649, 650, 0, 651, 730, 731, 732, 733,
	0, 662, 0, 652, 654, 655, 656, 734, 657, 735,
	0, 658, 659, 660, 661, 653, 663, 664, 0, 0,
	665, 666, 668, 670, 671, 667, 669, 672, 0, 673,
	0, 0, 674, 675, 676, 736, 737, 738, 0, 678,
	677, 679, 680, 681, 739, 682, 683, 291, 0, 0,
	0, 684, 685, 740, 686, 687, 688, 0, 0, 0,
	0, 0, 0, 0, 297, 298, 300, 299, 301, 302,
	303, 304, 0, 305, 306, 0, 0, 0, 0, 0,
	689, 0, 0, 0, 307, 0, 308, 309, 0, 310,
	311, 312, 313, 314, 315, 316, 690, 691, 0, 317,
	692, 318, 693, 0, 694, 319, 320, 321, 322, 323,
	324, 0, 0, 0, 325, 695, 696, 697, 0, 326,
	327, 698, 0, 0, 0, 328, 329, 330, 331, 332,
	333, 334, 335, 0, 0, 337, 338, 339, 336, 340,
	0, 341, 0, 342, 343, 344, 345, 346, 347, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 0, 0,
	0, 0, 0, 0, 354, 355, 356, 357, 358, 0,
	359, 361, 699, 700, 0, 364, 360, 362, 0, 365,
	363, 366, 0, 367, 368, 369, 0, 0, 370, 371,
	372, 0, 373, 374, 375, 0, 376, 377, 378, 0,
	379, 380, 701, 381, 382, 383, 385, 387, 384, 386,
	388, 389, 390, 391, 702, 703, 392, 0, 3873, 0,
	0, 0, 0, 0, 393, 394, 395, 704, 0, 0,
	0, 396, 0, 397, 398, 399, 0, 400, 401, 0,
	0, 402, 403, 404, 705, 706, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 0, 414, 707, 0, 708,
	415, 0, 416, 417, 418, 419, 420, 421, 422, 709,
	710, 711, 511, 0, 423, 424, 0, 425, 426, 427,
	428, 429, 0, 0, 0, 0, 430, 431, 432, 0,
	0, 512, 433, 712, 713, 0, 714, 0, 434, 435,
	0, 715, 0, 436, 437, 438, 0, 439, 0, 0,
	0, 440, 441, 442, 443, 444, 445, 0, 446, 448,
	447, 0, 449, 716, 0, 450, 451, 0, 0, 452,
	453, 454, 455, 456, 457, 460, 0, 0, 458, 459,
	461, 462, 0, 463, 464, 466, 469, 465, 467, 468,
	470, 483, 484, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 486, 0, 485, 0, 487,
	488, 489, 490, 491, 498, 500, 501, 496, 497, 499,
	502, 503, 505, 493, 494, 495, 0, 504, 492, 0,
	0, 0, 506, 507, 508, 509, 0, 717, 510, 718,
	513, 514, 0, 0, 515, 0, 516, 0, 0, 518,
	519, 520, 0, 0, 521, 522, 719, 0, 523, 0,
	720, 524, 525, 517, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 0, 535, 536, 721, 537, 538, 539,
	722, 540, 541, 542, 723, 543, 724, 544, 545, 4624,
	546, 547, 548, 0, 549, 550, 551, 552, 553, 554,
	555, 556, 725, 557, 558, 560, 559, 561, 0, 562,
	0, 563, 564, 565, 0, 0, 0, 0, 0, 566,
	567, 569, 0, 570, 571, 572, 573, 568, 574, 575,
	576, 577, 578, 579, 0, 580, 581, 582, 0, 583,
	584, 585, 586, 587, 726, 588, 0, 589, 590, 597,
	598, 599, 591, 592, 593, 600, 601, 602, 603, 604,
	0, 606, 607, 605, 608, 609, 610, 0, 611, 612,
	594, 595, 613, 614, 0, 615, 616, 617, 618, 619,
	620, 621, 727, 0, 622, 0, 623, 624, 625, 626,
	627, 629, 596, 630, 635, 636, 728, 631, 632, 633,
	634, 729, 638, 639, 640, 0, 641, 642, 0, 637,
	628, 0, 643, 644, 645, 646, 647, 648, 0, 649,
	650, 0, 651, 730, 731, 732, 733, 0, 662, 0,
	652, 654, 655, 656, 734, 657, 735, 0, 658, 659,
	660, 661, 653, 663, 664, 0, 0, 665, 666, 668,
	670, 671, 667, 669, 672, 0, 673, 0, 0, 674,
	675, 676, 736, 737, 738, 0, 678, 677, 679, 680,
	681, 739, 682, 683, 1456, 0, 291, 0, 684, 685,
	740, 686, 687, 688, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 297, 298, 300, 299, 301, 302, 303,
	304, 0, 305, 306, 0, 0, 0, 0, 0, 689,
	0, 0, 0, 307, 0, 308, 309, 1459, 310, 311,
	312, 313, 314, 315, 316, 690, 691, 0, 317, 692,
	318, 693, 0, 694, 319, 320, 321, 322, 323, 324,
	0, 0, 0, 325, 695, 696, 1457, 0, 326, 327,
	698, 0, 0, 0, 328, 329, 330, 331, 332, 333,
	334, 335, 0, 0, 337, 338, 339, 336, 340, 0,
	341, 0, 342, 343, 344, 345, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 0, 0, 0,
	0, 0, 0, 354, 355, 356, 357, 358, 0, 359,
	361, 699, 700, 0, 364, 360, 362, 0, 365, 363,
	366, 0, 367, 368, 369, 0, 0, 370, 371, 372,
	0, 373, 374, 375, 0, 376, 377, 378, 0, 379,
	380, 701, 381, 382, 383, 385, 387, 384, 386, 388,
	389, 390, 391, 702, 703, 392, 0, 0, 0, 0,
	0, 0, 0, 393, 394, 395, 704, 0, 0, 0,
	396, 0, 397, 398, 399, 0, 400, 401, 0, 0,
	402, 403, 404, 705, 706, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 0, 414, 707, 0, 708, 415,
	0, 416, 417, 418, 419, 420, 421, 422, 709, 710,
	711, 511, 0, 423, 424, 0, 425, 426, 427, 428,
	429, 0, 0, 0, 0, 430, 431, 432, 0, 0,
	512, 433, 712, 713, 0, 714, 0, 434, 435, 0,
	715, 0, 436, 437, 438, 0, 439, 0, 0, 0,
	440, 441, 442, 443, 444, 445, 0, 446, 448, 447,
	0, 449, 716, 0, 450, 451, 0, 0, 452, 453,
	454, 455, 456, 457, 460, 0, 0, 458, 459, 461,
	462, 0, 463, 464, 466, 469, 465, 467, 468, 470,
	483, 484, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 486, 0, 835, 0, 487, 488,
	489, 490, 491, 498, 500, 501, 496, 497, 499, 502,
	503, 505, 493, 494, 495, 0, 504, 492, 0, 0,
	0, 506, 507, 508, 509, 0, 717, 510, 718, 513,
	514, 0, 0, 515, 0, 516, 0, 0, 518, 519,
	520, 0, 0, 521, 522, 719, 0, 523, 0, 720,
	524, 525, 517, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 0, 535, 536, 721, 537, 538, 539, 722,
	540, 541, 542, 723, 543, 724, 544, 545, 0, 546,
	547, 548, 0, 549, 550, 551, 552, 553, 554, 555,
	556, 725, 557, 558, 560, 559, 561, 0, 562, 0,
	563, 564, 565, 0, 0, 0, 0, 0, 566, 567,
	569, 0, 570, 571, 572, 573, 568, 574, 575, 576,
	577, 578, 579, 0, 580, 581, 582, 0, 834, 584,
	585, 586, 587, 726, 588, 0, 589, 590, 597, 598,
	599, 591, 592, 593, 833, 601, 602, 603, 604, 0,
	606, 607, 605, 608, 1460, 610, 0, 611, 612, 594,
	595, 613, 614, 0, 615, 616, 617, 618, 619, 620,
	621, 727, 0, 622, 0, 623, 624, 625, 626, 627,
	629, 596, 630, 635, 636, 728, 631, 632, 633, 634,
	729, 638, 639, 640, 0, 641, 642, 0, 637, 628,
	0, 643, 644, 645, 646, 647, 648, 0, 649, 650,
	0, 651, 831, 731, 732, 733, 0, 662, 0, 652,
	654, 655, 656, 734, 657, 735, 0, 658, 659, 660,
	661, 653, 663, 664, 0, 0, 665, 666, 668, 670,
	671, 667, 669, 672, 0, 673, 0, 0, 674, 675,
	676, 736, 737, 738, 0, 678, 677, 679, 680, 681,
	739, 682, 683, 1456, 0, 291, 0, 684, 685, 740,
	686, 687, 688, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 297, 298, 300, 299, 301, 302, 303, 304,
	0, 305, 306, 0, 0, 0, 0, 0, 689, 0,
	0, 0, 307, 0, 308, 309, 1459, 310, 311, 312,
	313, 314, 315, 316, 690, 691, 0, 317, 692, 318,
	693, 0, 694, 319, 320, 321, 322, 323, 324, 0,
	0, 0, 325, 695, 696, 1457, 0, 326, 327, 698,
	0, 0, 0, 328, 329, 330, 331, 332, 333, 334,
	335, 0, 0, 337, 338, 339, 336, 340, 0, 341,
	0, 342, 343, 344, 345, 346, 347, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 0, 0, 0, 0,
	0, 0, 354, 355, 356, 357, 358, 0, 359, 361,
	699, 700, 0, 364, 360, 362, 0, 365, 363, 366,
	0, 367, 368, 369, 0, 0, 370, 371, 372, 0,
	373, 374, 375, 0, 376, 377, 378, 0, 379, 380,
	701, 381, 382, 383, 385, 387, 384, 386, 388, 389,
	390, 391, 702, 703, 392, 0, 0, 0, 0, 0,
	0, 0, 393, 394, 395, 704, 0, 0, 0, 396,
	0, 397, 398, 399, 0, 400, 401, 0, 0, 402,
	403, 404, 705, 706, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 0, 414, 707, 0, 708, 415, 0,
	416, 417, 418, 419, 420, 421, 422, 709, 710, 711,
	511, 0, 423, 424, 0, 425, 426, 427, 428, 429,
	0, 0, 0, 0, 430, 431, 432, 0, 0, 512,
	433, 712, 713, 0, 714, 0, 434, 435, 0, 715,
	0, 436, 437, 438, 0, 439, 0, 0, 0, 440,
	441, 442, 443, 444, 445, 0, 446, 448, 447, 0,
	449, 716, 0, 450, 451, 0, 0, 452, 453, 454,
	455, 456, 457, 460, 0, 0, 458, 459, 461, 462,
	0, 463, 464, 466, 469, 465, 467, 468, 470, 483,
	484, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 486, 0, 835, 0, 487, 488, 489,
	490, 491, 498, 500, 501, 496, 497, 499, 502, 503,
	505, 493, 494, 495, 0, 504, 492, 0, 0, 0,
	506, 507, 508, 509, 0, 717, 510, 718, 513, 514,
	0, 0, 515, 0, 516, 0, 0, 518, 519, 520,
	0, 0, 521, 522, 719, 0, 523, 0, 720, 524,
	525, 517, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 0, 535, 536, 721, 537, 538, 539, 722, 540,
	541, 542, 723, 543, 724, 544, 545, 0, 546, 547,
	548, 0, 549, 550, 551, 552, 553, 554, 555, 556,
	725, 557, 558, 560, 559, 561, 0, 562, 0, 563,
	564, 565, 0, 0, 0, 0, 0, 566, 567, 569,
	0, 570, 571, 572, 573, 568, 574, 575, 576, 577,
	578, 579, 0, 580, 581, 582, 0, 834, 584, 585,
	586, 587, 726, 588, 0, 589, 590, 597, 598, 599,
	591, 592, 593, 833, 601, 602, 603, 604, 0, 606,
	607, 605, 608, 1460, 610, 0, 611, 612, 594, 595,
	613, 614, 0, 615, 616, 617, 618, 619, 620, 621,
	727, 0, 622, 0, 623, 624, 625, 626, 627, 629,
	596, 630, 635, 636, 728, 631, 632, 633, 634, 729,
	638, 639, 640, 0, 641, 642, 0, 637, 628, 0,
	643, 644, 645, 646, 647, 648, 0, 649, 650, 0,
	651, 831, 731, 732, 733, 0, 662, 0, 652, 1458,
	655, 656, 734, 657, 735, 0, 658, 659, 660, 661,
	653, 663, 664, 0, 0, 665, 666, 668, 670, 671,
	667, 669, 672, 0, 673, 0, 0, 674, 675, 676,
	736, 737, 738, 0, 678, 677, 679, 680, 681, 739,
	682, 683, 842, 0, 291, 0, 684, 685, 740, 686,
	687, 688, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 298, 300, 299, 301, 302, 303, 304, 840,
	305, 306, 0, 0, 0, 0, 0, 689, 0, 0,
	0, 307, 0, 308, 309, 0, 310, 311, 312, 313,
	314, 315, 316, 690, 691, 0, 317, 692, 318, 693,
	0, 694, 319, 320, 321, 322, 323, 324, 0, 0,
	0, 325, 695, 696, 697, 0, 326, 327, 698, 0,
	0, 0, 328, 329, 330, 331, 332, 333, 334, 335,
	0, 0, 337, 338, 339, 336, 340, 0, 341, 0,
	342, 343, 344, 345, 346, 347, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 0, 0, 0, 0, 0,
	0, 354, 355, 356, 357, 358, 0, 359, 361, 699,
	700, 0, 364, 360, 362, 0, 365, 363, 366, 0,
	367, 368, 369, 0, 0, 370, 371, 372, 0, 373,
	374, 375, 0, 376, 377, 378, 0, 379, 380, 701,
	381, 382, 383, 385, 387, 384, 386, 388, 389, 390,
	391, 702, 703, 392, 0, 0, 0, 0, 0, 0,
	0, 393, 394, 395, 704, 0, 0, 0, 396, 0,
	397, 398, 399, 0, 400, 401, 0, 0, 402, 403,
	404, 705, 706, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 0, 414, 707, 0, 708, 415, 0, 416,
	417, 418, 419, 420, 421, 422, 709, 710, 711, 511,
	0, 423, 424, 0, 425, 426, 427, 428, 429, 0,
	0, 0, 0, 430, 431, 432, 0, 0, 512, 433,
	712, 713, 0, 714, 0, 434, 435, 0, 715, 0,
	436, 437, 438, 0, 439, 0, 0, 0, 440, 441,
	442, 443, 444, 445, 0, 446, 448, 447, 0, 449,
	716, 0, 450, 451, 0, 0, 452, 453, 454, 455,
	456, 457, 460, 0, 0, 458, 459, 461, 462, 0,
	463, 464, 466, 469, 465, 467, 468, 470, 483, 484,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 486, 0, 485, 0, 487, 488, 489, 490,
	491, 498, 500, 501, 496, 497, 499, 502, 503, 505,
	493, 494, 495, 0, 504, 492, 0, 0, 0, 506,
	507, 508, 509, 0, 717, 510, 718, 513, 514, 0,
	0, 515, 0, 516, 0, 0, 518, 519, 520, 0,
	0, 521, 522, 719, 0, 523, 0, 720, 524, 525,
	517, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	0, 535, 536, 721, 537, 538, 539, 722, 540, 541,
	542, 723, 543, 724, 544, 545, 0, 546, 547, 548,
	0, 549, 550, 551, 552, 553, 554, 555, 556, 725,
	557, 558, 560, 559, 561, 0, 562, 0, 563, 564,
	565, 0, 0, 0, 0, 0, 566, 567, 569, 0,
	570, 571, 572, 573, 568, 574, 575, 576, 577, 578,
	579, 0, 580, 581, 582, 0, 583, 584, 585, 586,
	587, 726, 588, 0, 589, 590, 597, 598, 599, 591,
	592, 593, 600, 601, 602, 603, 604, 0, 606, 607,
	605, 608, 609, 610, 0, 611, 612, 594, 595, 613,
	614, 0, 615, 616, 617, 618, 619, 620, 621, 727,
	0, 622, 0, 623, 624, 625, 626, 627, 629, 596,
	630, 635, 636, 728, 631, 632, 633, 634, 729, 638,
	639, 640, 0, 641, 642, 0, 637, 628, 0, 643,
	644, 645, 646, 647, 648, 0, 649, 650, 0, 651,
	730, 731, 732, 733, 0, 662, 0, 652, 654, 655,
	656, 734, 657, 735, 0, 658, 659, 660, 661, 653,
	663, 664, 0, 0, 665, 666, 668, 670, 671, 667,
	669, 672, 0, 673, 0, 0, 674, 675, 676, 736,
	737, 738, 0, 678, 677, 679, 680, 681, 739, 682,
	683, 751, 0, 291, 0, 684, 685, 740, 686, 687,
	688, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	297, 298, 300, 299, 301, 302, 303, 304, 750, 305,
	306, 0, 0, 0, 0, 0, 689, 0, 0, 0,
	307, 0, 308, 309, 0, 310, 311, 312, 313, 314,
	315, 316, 690, 691, 0, 317, 692, 318, 693, 0,
	694, 319, 320, 321, 322, 323, 324, 0, 0, 0,
	325, 695, 696, 697, 0, 326, 327, 698, 0, 0,
	0, 328, 329, 330, 331, 332, 333, 334, 335, 0,
	0, 337, 338, 339, 336, 340, 0, 341, 0, 342,
	343, 344, 345, 346, 347, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 0, 0, 0, 0, 0, 0,
	354, 355, 356, 357, 358, 0, 359, 361, 699, 700,
	0, 364, 360, 362, 0, 365, 363, 366, 0, 367,
	368, 369, 0, 0, 370, 371, 372, 0, 373, 374,
	375, 0, 376, 377, 378, 0, 379, 380, 701, 381,
	382, 383, 385, 387, 384, 386, 388, 389, 390, 391,
	702, 703, 392, 0, 0, 0, 0, 0, 0, 0,
	393, 394, 395, 704, 0, 0, 0, 396, 0, 397,
	398, 399, 0, 400, 401, 0, 0, 402, 403, 404,
	705, 706, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 0, 414, 707, 0, 708, 415, 0, 416, 417,
	418, 419, 420, 421, 422, 709, 710, 711, 511, 0,
	423, 424, 0, 425, 426, 427, 428, 429, 0, 0,
	0, 0, 430, 431, 432, 0, 0, 512, 433, 712,
	713, 0, 714, 0, 434, 435, 0, 715, 0, 436,
	437, 438, 0, 439, 0, 0, 0, 440, 441, 442,
	443, 444, 445, 0, 446, 448, 447, 0, 449, 716,
	0, 450, 451, 0, 0, 452, 453, 454, 455, 456,
	457, 460, 0, 0, 458, 459, 461, 462, 0, 463,
	464, 466, 469, 465, 467, 468, 470, 483, 484, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 486, 0, 485, 0, 487, 488, 489, 490, 491,
	498, 500, 501, 496, 497, 499, 502, 503, 505, 493,
	494, 495, 0, 504, 492, 0, 0, 0, 506, 507,
	508, 509, 0, 717, 510, 718, 513, 514, 0, 0,
	515, 0, 516, 0, 0, 518, 519, 520, 0, 0,
	521, 522, 719, 0, 523, 0, 720, 524, 525, 517,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 0,
	535, 536, 721, 537, 538, 539, 722, 540, 541, 542,
	723, 543, 724, 749, 545, 0, 546, 547, 548, 0,
	549, 550, 551, 552, 553, 554, 555, 556, 725, 557,
	558, 560, 559, 561, 0, 562, 0, 563, 564, 565,
	0, 0, 0, 0, 0, 566, 567, 569, 0, 570,
	571, 572, 573, 568, 574, 575, 576, 577, 578, 579,
	0, 580, 581, 582, 0, 583, 584, 585, 586, 587,
	726, 588, 0, 589, 590, 597, 598, 599, 591, 592,
	593, 600, 601, 602, 603, 604, 0, 606, 607, 605,
	608, 609, 610, 0, 611, 612, 594, 595, 613, 614,
	0, 615, 616, 617, 618, 619, 620, 621, 727, 0,
	622, 0, 623, 624, 625, 626, 627, 629, 596, 630,
	635, 636, 728, 631, 632, 633, 634, 729, 638, 639,
	640, 0, 641, 642, 0, 637, 628, 0, 643, 644,
	645, 646, 647, 648, 0, 649, 650, 0, 651, 730,
	731, 732, 733, 0, 662, 0, 652, 654, 655, 656,
	734, 657, 735, 0, 658, 659, 660, 661, 653, 663,
	664, 0, 0, 665, 666, 668, 670, 671, 667, 669,
	672, 0, 673, 0, 0, 674, 675, 676, 736, 737,
	738, 0, 678, 677, 679, 680, 681, 739, 682, 683,
	291, 3202, 0, 0, 684, 685, 740, 686, 687, 688,
	0, 0, 0, 0, 0, 0, 0, 297, 298, 300,
	299, 301, 302, 303, 304, 0, 305, 306, 0, 0,
	0, 0, 0, 689, 0, 0, 0, 307, 0, 308,
	309, 0, 310, 311, 312, 313, 314, 315, 316, 690,
	691, 0, 317, 692, 318, 693, 0, 694, 319, 320,
	321, 322, 323, 324, 0, 0, 0, 325, 695, 696,
	697, 0, 326, 327, 698, 0, 0, 0, 328, 329,
	330, 331, 332, 333, 334, 335, 0, 0, 337, 338,
	339, 336, 340, 0, 341, 0, 342, 343, 344, 345,
	346, 347, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 0, 0, 0, 0, 0, 0, 354, 355, 356,
	357, 358, 0, 359, 361, 699, 700, 0, 364, 360,
	362, 0, 365, 363, 366, 0, 367, 368, 369, 0,
	0, 370, 371, 372, 0, 373, 374, 375, 0, 376,
	377, 378, 0, 379, 380, 701, 381, 382, 383, 385,
	387, 384, 386, 388, 389, 390, 391, 702, 703, 392,
	0, 0, 0, 0, 0, 0, 0, 393, 394, 395,
	704, 0, 0, 0, 396, 0, 397, 398, 399, 0,
	400, 401, 0, 0, 402, 403, 404, 705, 706, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 0, 414,
	707, 0, 708, 415, 0, 416, 417, 418, 419, 420,
	421, 422, 709, 710, 711, 511, 0, 423, 424, 0,
	425, 426, 427, 428, 429, 0, 0, 0, 0, 430,
	431, 432, 0, 0, 512, 433, 712, 713, 0, 714,
	0, 434, 435, 0, 715, 0, 436, 437, 438, 0,
	439, 0, 0, 0, 440, 441, 442, 443, 444, 445,
	0, 446, 448, 447, 0, 449, 716, 0, 450, 451,
	0, 0, 452, 453, 454, 455, 456, 457, 460, 0,
	0, 458, 459, 461, 462, 0, 463, 464, 466, 469,
	465, 467, 468, 470, 483, 484, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 486, 0,
	485, 0, 487, 488, 489, 490, 491, 498, 500, 501,
	496, 497, 499, 502, 503, 505, 493, 494, 495, 0,
	504, 492, 0, 0, 0, 506, 507, 508, 509, 0,
	717, 510, 718, 513, 514, 0, 0, 515, 0, 516,
	0, 0, 518, 519, 520, 0, 0, 521, 522, 719,
	0, 523, 0, 720, 524, 525, 517, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 0, 535, 536, 721,
	537, 538, 539, 722, 540, 541, 542, 723, 543, 724,
	544, 545, 0, 546, 547, 548, 0, 549, 550, 551,
	552, 553, 554, 555, 556, 725, 557, 558, 560, 559,
	561, 0, 562, 0, 563, 564, 565, 0, 0, 0,
	0, 0, 566, 567, 569, 0, 570, 571, 572, 573,
	568, 574, 575, 576, 577, 578, 579, 0, 580, 581,
	582, 0, 583, 584, 585, 586, 587, 726, 588, 0,
	589, 590, 597, 598, 599, 591, 592, 593, 600, 601,
	602, 603, 604, 0, 606, 607, 605, 608, 609, 610,
	0, 611, 612, 594, 595, 613, 614, 0, 615, 616,
	617, 618, 619, 620, 621, 727, 0, 622, 0, 623,
	624, 625, 626, 627, 629, 596, 630, 635, 636, 728,
	631, 632, 633, 634, 729, 638, 639, 640, 0, 641,
	642, 0, 637, 628, 0, 643, 644, 645, 646, 647,
	648, 0, 649, 650, 0, 651, 730, 731, 732, 733,
	0, 662, 0, 652, 654, 655, 656, 734, 657, 735,
	0, 658, 659, 660, 661, 653, 663, 664, 0, 0,
	665, 666, 668, 670, 671, 667, 669, 672, 0, 673,
	0, 0, 674, 675, 676, 736, 737, 738, 0, 678,
	677, 679, 680, 681, 739, 682, 683, 291, 0, 0,
	0, 684, 685, 740, 686, 687, 688, 0, 0, 0,
	0, 0, 0, 0, 297, 298, 300, 299, 301, 302,
	303, 304, 0, 305, 306, 0, 0, 0, 0, 0,
	689, 0, 0, 0, 307, 0, 308, 309, 0, 310,
	311, 312, 313, 314, 315, 316, 690, 691, 0, 317,
	692, 318, 693, 0, 694, 319, 320, 321, 322, 323,
	324, 0, 0, 0, 325, 695, 696, 697, 0, 326,
	327, 698, 0, 0, 0, 328, 329, 330, 331, 332,
	333, 334, 335, 0, 0, 337, 338, 339, 336, 340,
	0, 341, 0, 342, 343, 344, 345, 346, 347, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 0, 0,
	0, 0, 0, 0, 354, 355, 356, 357, 358, 0,
	359, 361, 699, 700, 0, 364, 360, 362, 0, 365,
	363, 366, 0, 367, 368, 369, 0, 0, 370, 371,
	372, 0, 373, 374, 375, 0, 376, 377, 378, 0,
	379, 380, 701, 381, 382, 383, 385, 387, 384, 386,
	388, 389, 390, 391, 702, 703, 392, 0, 0, 0,
	0, 0, 0, 0, 393, 394, 395, 704, 0, 0,
	0, 396, 0, 397, 398, 399, 0, 400, 401, 0,
	0, 402, 403, 404, 705, 706, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 0, 414, 707, 0, 708,
	415, 0, 416, 417, 418, 419, 420, 421, 422, 709,
	710, 711, 511, 0, 423, 424, 0, 425, 426, 427,
	428, 429, 0, 0, 0, 0, 430, 431, 432, 0,
	0, 512, 433, 712, 713, 0, 714, 0, 434, 435,
	0, 715, 0, 436, 437, 438, 0, 439, 0, 0,
	0, 440, 441, 442, 443, 444, 445, 0, 446, 448,
	447, 0, 449, 716, 0, 450, 451, 0, 0, 452,
	453, 454, 455, 456, 457, 460, 0, 0, 458, 459,
	461, 462, 0, 463, 464, 466, 469, 465, 467, 468,
	470, 483, 484, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 486, 0, 485, 0, 487,
	488, 489, 490, 491, 498, 500, 501, 496, 497, 499,
	502, 503, 505, 493, 494, 495, 0, 504, 492, 0,
	0, 0, 506, 507, 508, 509, 0, 717, 510, 718,
	513, 514, 0, 0, 515, 0, 516, 0, 0, 518,
	519, 520, 0, 0, 521, 522, 719, 0, 523, 0,
	720, 524, 525, 517, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 0, 535, 536, 721, 537, 538, 539,
	722, 540, 541, 542, 723, 543, 724, 544, 545, 4927,
	546, 547, 548, 0, 549, 550, 551, 552, 553, 554,
	555, 556, 725, 557, 558, 560, 559, 561, 0, 562,
	0, 563, 564, 565, 0, 0, 0, 0, 0, 566,
	567, 569, 0, 570, 571, 572, 573, 568, 574, 575,
	576, 577, 578, 579, 0, 580, 581, 582, 0, 583,
	584, 585, 586, 587, 726, 588, 0, 589, 590, 597,
	598, 599, 591, 592, 593, 600, 601, 602, 603, 604,
	0, 606, 607, 605, 608, 609, 610, 0, 611, 612,
	594, 595, 613, 614, 0, 615, 616, 617, 618, 619,
	620, 621, 727, 0, 622, 0, 623, 624, 625, 626,
	627, 629, 596, 630, 635, 636, 728, 631, 632, 633,
	634, 729, 638, 639, 640, 0, 641, 642, 0, 637,
	628, 0, 643, 644, 645, 646, 647, 648, 0, 649,
	650, 0, 651, 730, 731, 732, 733, 0, 662, 0,
	652, 654, 655, 656, 734, 657, 735, 0, 658, 659,
	660, 661, 653, 663, 664, 0, 0, 665, 666, 668,
	670, 671, 667, 669, 672, 0, 673, 0, 0, 674,
	675, 676, 736, 737, 738, 0, 678, 677, 679, 680,
	681, 739, 682, 683, 291, 3707, 0, 0, 684, 685,
	740, 686, 687, 688, 0, 0, 0, 0, 0, 0,
	0, 297, 298, 300, 299, 301, 302, 303, 304, 0,
	305, 306, 0, 0, 0, 0, 0, 689, 0, 0,
	0, 307, 0, 308, 309, 0, 310, 311, 312, 313,
	314, 315, 316, 690, 691, 0, 317, 692, 318, 693,
	0, 694, 319, 320, 321, 322, 323, 324, 0, 0,
	0, 325, 695, 696, 697, 0, 326, 327, 698, 0,
	0, 0, 328, 329, 330, 331, 332, 333, 334, 335,
	0, 0, 337, 338, 339, 336, 340, 0, 341, 0,
	342, 343, 344, 345, 346, 347, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 0, 0, 0, 0, 0,
	0, 354, 355, 356, 357, 358, 0, 359, 361, 699,
	700, 0, 364, 360, 362, 0, 365, 363, 366, 0,
	367, 368, 369, 0, 0, 370, 371, 372, 0, 373,
	374, 375, 0, 376, 377, 378, 0, 379, 380, 701,
	381, 382, 383, 385, 387, 384, 386, 388, 389, 390,
	391, 702, 703, 392, 0, 0, 0, 0, 0, 0,
	0, 393, 394, 395, 704, 0, 0, 0, 396, 0,
	397, 398, 399, 0, 400, 401, 0, 0, 402, 403,
	404, 705, 706, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 0, 414, 707, 0, 708, 415, 0, 416,
	417, 418, 419, 420, 421, 422, 709, 710, 711, 511,
	0, 423, 424, 0, 425, 426, 427, 428, 429, 0,
	0, 0, 0, 430, 431, 432, 0, 0, 512, 433,
	712, 713, 0, 714, 0, 434, 435, 0, 715, 0,
	436, 437, 438, 0, 439, 0, 0, 0, 440, 441,
	442, 443, 444, 445, 0, 446, 448, 447, 0, 449,
	716, 0, 450, 451, 0, 0, 452, 453, 454, 455,
	456, 457, 460, 0, 0, 458, 459, 461, 462, 0,
	463, 464, 466, 469, 465, 467, 468, 470, 483, 484,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 486, 0, 485, 0, 487, 488, 489, 490,
	491, 498, 500, 501, 496, 497, 499, 502, 503, 505,
	493, 494, 495, 0, 504, 492, 0, 0, 0, 506,
	507, 508, 509, 0, 717, 510, 718, 513, 514, 0,
	0, 515, 0, 516, 0, 0, 518, 519, 520, 0,
	0, 521, 522, 719, 0, 523, 0, 720, 524, 525,
	517, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	0, 535, 536, 721, 537, 538, 539, 722, 540, 541,
	542, 723, 543, 724, 544, 545, 0, 546, 547, 548,
	0, 549, 550, 551, 552, 553, 554, 555, 556, 725,
	557, 558, 560, 559, 561, 0, 562, 0, 563, 564,
	565, 0, 0, 0, 0, 0, 566, 567, 569, 0,
	570, 571, 572, 573, 568, 574, 575, 576, 577, 578,
	579, 0, 580, 581, 582, 0, 583, 584, 585, 586,
	587, 726, 588, 0, 589, 590, 597, 598, 599, 591,
	592, 593, 600, 601, 602, 603, 604, 0, 606, 607,
	605, 608, 609, 610, 0, 611, 612, 594, 595, 613,
	614, 0, 615, 616, 617, 618, 619, 620, 621, 727,
	0, 622, 0, 623, 624, 625, 626, 627, 629, 596,
	630, 635, 636, 728, 631, 632, 633, 634, 729, 638,
	639, 640, 0, 641, 642, 0, 637, 628, 0, 643,
	644, 645, 646, 647, 648, 0, 649, 650, 0, 651,
	730, 731, 732, 733, 0, 662, 0, 652, 654, 655,
	656, 734, 657, 735, 0, 658, 659, 660, 661, 653,
	663, 664, 0, 0, 665, 666, 668, 670, 671, 667,
	669, 672, 0, 673, 0, 0, 674, 675, 676, 736,
	737, 738, 0, 678, 677, 679, 680, 681, 739, 682,
	683, 291, 0, 0, 0, 684, 685, 740, 686, 687,
	688, 0, 0, 0, 0, 0, 0, 0, 297, 298,
	300, 299, 301, 302, 303, 304, 0, 305, 306, 0,
	0, 0, 0, 0, 689, 0, 0, 0, 307, 0,
	308, 309, 0, 310, 311, 312, 313, 314, 315, 316,
	690, 691, 0, 317, 692, 318, 693, 0, 694, 319,
	320, 321, 322, 323, 324, 0, 0, 0, 325, 695,
	696, 697, 0, 326, 327, 698, 0, 0, 0, 328,
	329, 330, 331, 332, 333, 334, 335, 0, 0, 337,
	338, 339, 336, 340, 0, 341, 0, 342, 343, 344,
	345, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 0, 0, 0, 0, 0, 0, 354, 355,
	356, 357, 358, 0, 359, 361, 699, 700, 0, 364,
	360, 362, 0, 365, 363, 366, 0, 367, 368, 369,
	0, 0, 370, 371, 372, 0, 373, 374, 375, 0,
	376, 377, 378, 0, 379, 380, 701, 381, 382, 383,
	385, 387, 384, 386, 388, 389, 390, 391, 702, 703,
	392, 0, 0, 0, 0, 0, 0, 0, 393, 394,
	395, 704, 0, 0, 0, 396, 0, 397, 398, 399,
	0, 400, 401, 0, 0, 402, 403, 404, 705, 706,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 0,
	414, 707, 0, 708, 415, 0, 416, 417, 418, 419,
	420, 421, 422, 709, 710, 711, 511, 0, 423, 424,
	0, 425, 426, 427, 428, 429, 0, 0, 0, 0,
	430, 431, 432, 0, 0, 512, 433, 712, 713, 0,
	714, 0, 434, 435, 0, 715, 0, 436, 437, 438,
	0, 439, 0, 0, 0, 440, 441, 442, 443, 444,
	445, 0, 446, 448, 447, 0, 449, 716, 0, 450,
	451, 0, 0, 452, 453, 454, 455, 456, 457, 460,
	0, 0, 458, 459, 461, 462, 0, 463, 464, 466,
	469, 465, 467, 468, 470, 483, 484, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 486,
	0, 485, 0, 487, 488, 489, 490, 491, 498, 500,
	501, 496, 497, 499, 502, 503, 505, 493, 494, 495,
	0, 504, 492, 0, 0, 0, 506, 507, 508, 509,
	0, 717, 510, 718, 513, 514, 0, 0, 515, 0,
	516, 0, 0, 518, 519, 520, 0, 0, 521, 522,
	719, 0, 523, 0, 720, 524, 525, 517, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 0, 535, 536,
	721, 537, 538, 539, 722, 540, 541, 542, 723, 543,
	724, 544, 545, 4511, 546, 547, 548, 0, 549, 550,
	551, 552, 553, 554, 555, 556, 725, 557, 558, 560,
	559, 561, 0, 562, 0, 563, 564, 565, 0, 0,
	0, 0, 0, 566, 567, 569, 0, 570, 571, 572,
	573, 568, 574, 575, 576, 577, 578, 579, 0, 580,
	581, 582, 0, 583, 584, 585, 586, 587, 726, 588,
	0, 589, 590, 597, 598, 599, 591, 592, 593, 600,
	601, 602, 603, 604, 0, 606, 607, 605, 608, 609,
	610, 0, 611, 612, 594, 595, 613, 614, 0, 615,
	616, 617, 618, 619, 620, 621, 727, 0, 622, 0,
	623, 624, 625, 626, 627, 629, 596, 630, 635, 636,
	728, 631, 632, 633, 634, 729, 638, 639, 640, 0,
	641, 642, 0, 637, 628, 0, 643, 644, 645, 646,
	647, 648, 0, 649, 650, 0, 651, 730, 731, 732,
	733, 0, 662, 0, 652, 654, 655, 656, 734, 657,
	735, 0, 658, 659, 660, 661, 653, 663, 664, 0,
	0, 665, 666, 668, 670, 671, 667, 669, 672, 0,
	673, 0, 0, 674, 675, 676, 736, 737, 738, 0,
	678, 677, 679, 680, 681, 739, 682, 683, 291, 0,
	0, 0, 684, 685, 740, 686, 687, 688, 0, 0,
	0, 0, 0, 0, 0, 297, 298, 300, 299, 301,
	302, 303, 304, 0, 305, 306, 0, 0, 0, 0,
	0, 689, 0, 0, 0, 307, 0, 308, 309, 0,
	310, 311, 312, 313, 314, 315, 316, 690, 691, 0,
	317, 692, 318, 693, 0, 694, 319, 320, 321, 322,
	323, 324, 0, 0, 0, 325, 695, 696, 697, 0,
	326, 327, 698, 0, 0, 0, 328, 329, 330, 331,
	332, 333, 334, 335, 0, 0, 337, 338, 339, 336,
	340, 0, 341, 0, 342, 343, 344, 345, 346, 347,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 0,
	0, 0, 0, 0, 0, 354, 355, 356, 357, 358,
	0, 359, 361, 699, 700, 4232, 364, 360, 362, 0,
	365, 363, 366, 0, 367, 368, 369, 0, 0, 370,
	371, 372, 0, 373, 374, 375, 0, 376, 377, 378,
	0, 379, 380, 701, 381, 382, 383, 385, 387, 384,
	386, 388, 389, 390, 391, 702, 703, 392, 0, 0,
	0, 0, 0, 0, 0, 393, 394, 395, 704, 0,
	0, 0, 396, 0, 397, 398, 399, 0, 400, 401,
	0, 0, 402, 403, 404, 705, 706, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 0, 414, 707, 0,
	708, 415, 0, 416, 417, 418, 419, 420, 421, 422,
	709, 710, 711, 511, 0, 423, 424, 0, 425, 426,
	427, 428, 429, 0, 0, 0, 0, 430, 431, 432,
	0, 0, 512, 433, 712, 713, 0, 714, 0, 434,
	435, 0, 715, 0, 436, 437, 438, 0, 439, 0,
	0, 0, 440, 441, 442, 443, 444, 445, 0, 446,
	448, 447, 0, 449, 716, 0, 450, 451, 0, 0,
	452, 453, 454, 455, 456, 457, 460, 0, 0, 458,
	459, 461, 462, 0, 463, 464, 466, 469, 465, 467,
	468, 470, 483, 484, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 486, 0, 485, 0,
	487, 488, 489, 490, 491, 498, 500, 501, 496, 497,
	499, 502, 503, 505, 493, 494, 495, 0, 504, 492,
	0, 0, 0, 506, 507, 508, 509, 0, 717, 510,
	718, 513, 514, 0, 0, 515, 0, 516, 0, 0,
	518, 519, 520, 0, 0, 521, 522, 719, 0, 523,
	0, 720, 524, 525, 517, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 0, 535, 536, 721, 537, 538,
	539, 722, 540, 541, 542, 723, 543, 724, 544, 545,
	0, 546, 547, 548, 0, 549, 550, 551, 552, 553,
	554, 555, 556, 725, 557, 558, 560, 559, 561, 0,
	562, 0, 563, 564, 565, 0, 0, 0, 0, 0,
	566, 567, 569, 0, 570, 571, 572, 573, 568, 574,
	575, 576, 577, 578, 579, 0, 580, 581, 582, 0,
	583, 584, 585, 586, 587, 726, 588, 0, 589, 590,
	597, 598, 599, 591, 592, 593, 600, 601, 602, 603,
	604, 0, 606, 607, 605, 608, 609, 610, 0, 611,
	612, 594, 595, 613, 614, 0, 615, 616, 617, 618,
	619, 620, 621, 727, 0, 622, 0, 623, 624, 625,
	626, 627, 629, 596, 630, 635, 636, 728, 631, 632,
	633, 634, 729, 638, 639, 640, 0, 641, 642, 0,
	637, 628, 0, 643, 644, 645, 646, 647, 648, 0,
	649, 650, 0, 651, 730, 731, 732, 733, 0, 662,
	0, 652, 654, 655, 656, 734, 657, 735, 0, 658,
	659, 660, 661, 653, 663, 664, 0, 0, 665, 666,
	668, 670, 671, 667, 669, 672, 0, 673, 0, 0,
	674, 675, 676, 736, 737, 738, 0, 678, 677, 679,
	680, 681, 739, 682, 683, 291, 0, 0, 0, 684,
	685, 740, 686, 687, 688, 0, 0, 0, 0, 0,
	0, 0, 297, 298, 300, 299, 301, 302, 303, 304,
	0, 305, 306, 0, 0, 0, 0, 0, 689, 0,
	2974, 0, 307, 0, 308, 309, 0, 310, 311, 312,
	313, 314, 315, 316, 690, 691, 0, 317, 692, 318,
	693, 0, 694, 319, 320, 321, 322, 323, 324, 0,
	0, 0, 325, 695, 696, 697, 0, 326, 327, 698,
	0, 0, 0, 328, 329, 330, 331, 332, 333, 334,
	335, 0, 0, 337, 338, 339, 336, 340, 0, 341,
	0, 342, 343, 344, 345, 346, 347, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 0, 0, 0, 0,
	0, 0, 354, 355, 356, 357, 358, 0, 359, 361,
	699, 700, 0, 364, 360, 362, 0, 365, 363, 366,
	0, 367, 368, 369, 0, 0, 370, 371, 372, 0,
	373, 374, 375, 0, 376, 377, 378, 0, 379, 380,
	701, 381, 382, 383, 385, 387, 384, 386, 388, 389,
	390, 391, 702, 703, 392, 0, 0, 0, 0, 0,
	0, 0, 393, 394, 395, 704, 0, 0, 0, 396,
	0, 397, 398, 399, 0, 400, 401, 0, 0, 402,
	403, 404, 705, 706, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 0, 414, 707, 0, 708, 415, 0,
	416, 417, 418, 419, 420, 421, 422, 709, 710, 711,
	511, 0, 423, 424, 0, 425, 426, 427, 428, 429,
	0, 0, 0, 0, 430, 431, 432, 0, 0, 512,
	433, 712, 713, 0, 714, 0, 434, 435, 0, 715,
	0, 436, 437, 438, 0, 439, 0, 0, 0, 440,
	441, 442, 443, 444, 445, 0, 446, 448, 447, 0,
	449, 716, 0, 450, 451, 0, 0, 452, 453, 454,
	455, 456, 457, 460, 0, 0, 458, 459, 461, 462,
	0, 463, 464, 466, 469, 465, 467, 468, 470, 483,
	484, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 486, 0, 485, 0, 487, 488, 489,
	490, 491, 498, 500, 501, 496, 497, 499, 502, 503,
	505, 493, 494, 495, 0, 504, 492, 0, 0, 0,
	506, 507, 508, 509, 0, 717, 510, 718, 513, 514,
	0, 0, 515, 0, 516, 0, 0, 518, 519, 520,
	0, 0, 521, 522, 719, 0, 523, 0, 720, 524,
	525, 517, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 0, 535, 536, 721, 537, 538, 539, 722, 540,
	541, 542, 723, 543, 724, 544, 545, 0, 546, 547,
	548, 0, 549, 550, 551, 552, 553, 554, 555, 556,
	725, 557, 558, 560, 559, 561, 0, 562, 0, 563,
	564, 565, 0, 0, 0, 0, 0, 566, 567, 569,
	0, 570, 571, 572, 573, 568, 574, 575, 576, 577,
	578, 579, 0, 580, 581, 582, 0, 583, 584, 585,
	586, 587, 726, 588, 0, 589, 590, 597, 598, 599,
	591, 592, 593, 600, 601, 602, 603, 604, 0, 606,
	607, 605, 608, 609, 610, 0, 611, 612, 594, 595,
	613, 614, 0, 615, 616, 617, 618, 619, 620, 621,
	727, 0, 622, 0, 623, 624, 625, 626, 627, 629,
	596, 630, 635, 636, 728, 631, 632, 633, 634, 729,
	638, 639, 640, 0, 641, 642, 0, 637, 628, 0,
	643, 644, 645, 646, 647, 648, 0, 649, 650, 0,
	651, 730, 731, 732, 733, 0, 662, 0, 652, 654,
	655, 656, 734, 657, 735, 0, 658, 659, 660, 661,
	653, 663, 664, 0, 0, 665, 666, 668, 670, 671,
	667, 669, 672, 0, 673, 0, 0, 674, 675, 676,
	736, 737, 738, 0, 678, 677, 679, 680, 681, 739,
	682, 683, 291, 3202, 0, 0, 684, 685, 740, 686,
	687, 688, 0, 0, 0, 0, 0, 0, 0, 297,
	298, 300, 299, 301, 302, 303, 304, 0, 305, 306,
	0, 0, 0, 0, 0, 689, 0, 0, 0, 307,
	0, 308, 309, 0, 310, 311, 312, 313, 314, 315,
	316, 690, 691, 0, 317, 692, 318, 693, 0, 694,
	319, 320, 321, 322, 323, 324, 0, 0, 0, 325,
	695, 696, 697, 0, 326, 327, 698, 0, 0, 0,
	328, 329, 330, 331, 332, 333, 334, 335, 0, 0,
	337, 338, 339, 336, 340, 0, 341, 0, 342, 343,
	344, 345, 346, 347, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 0, 0, 0, 0, 0, 0, 354,
	355, 356, 357, 358, 0, 359, 361, 699, 700, 0,
	364, 360, 362, 0, 365, 363, 366, 0, 367, 368,
	369, 0, 0, 370, 371, 372, 0, 373, 374, 375,
	0, 376, 377, 378, 0, 379, 380, 701, 381, 382,
	383, 385, 387, 384, 386, 388, 389, 390, 391, 702,
	703, 392, 0, 0, 0, 0, 0, 0, 0, 393,
	394, 395, 704, 0, 0, 0, 396, 0, 397, 398,
	399, 0, 400, 401, 0, 0, 402, 403, 404, 705,
	706, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	0, 414, 707, 0, 708, 415, 0, 416, 417, 418,
	419, 420, 421, 422, 709, 710, 711, 511, 0, 423,
	424, 0, 425, 426, 427, 428, 429, 0, 0, 0,
	0, 430, 431, 432, 0, 0, 512, 433, 712, 713,
	0, 714, 0, 434, 435, 0, 715, 0, 436, 437,
	438, 0, 439, 0, 0, 0, 440, 441, 442, 443,
	444, 445, 0, 446, 448, 447, 0, 449, 716, 0,
	450, 451, 0, 0, 452, 453, 454, 455, 456, 457,
	460, 0, 0, 458, 459, 461, 462, 0, 463, 464,
	466, 469, 465, 467, 468, 470, 483, 484, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	486, 0, 485, 0, 487, 488, 489, 490, 491, 498,
	500, 501, 496, 497, 499, 502, 503, 505, 493, 494,
	495, 0, 504, 492, 0, 0, 0, 506, 507, 508,
	509, 0, 717, 510, 718, 513, 514, 0, 0, 515,
	0, 516, 0, 0, 518, 519, 3332, 0, 0, 521,
	522, 719, 0, 523, 0, 720, 524, 525, 517, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 0, 535,
	536, 721, 537, 538, 539, 722, 540, 541, 542, 723,
	543, 724, 544, 545, 0, 546, 547, 548, 0, 549,
	550, 551, 552, 553, 554, 555, 556, 725, 557, 558,
	560, 559, 561, 0, 562, 0, 563, 564, 565, 0,
	0, 0, 0, 0, 566, 567, 569, 0, 570, 571,
	572, 573, 568, 574, 575, 576, 577, 578, 579, 0,
	580, 581, 582, 0, 583, 584, 585, 586, 587, 726,
	588, 0, 589, 590, 597, 598, 599, 591, 592, 593,
	600, 601, 602, 603, 604, 0, 606, 607, 605, 608,
	609, 610, 0, 611, 612, 594, 595, 613, 614, 0,
	615, 616, 617, 618, 619, 620, 621, 727, 0, 622,
	0, 623, 624, 625, 626, 627, 629, 596, 630, 635,
	636, 728, 631, 632, 633, 634, 729, 638, 639, 640,
	0, 641, 642, 0, 637, 628, 0, 643, 644, 645,
	646, 647, 648, 0, 649, 650, 0, 651, 730, 731,
	732, 733, 0, 662, 0, 652, 654, 655, 656, 734,
	657, 735, 0, 658, 659, 660, 661, 653, 663, 664,
	0, 0, 665, 666, 668, 670, 671, 667, 669, 672,
	0, 673, 0, 0, 674, 675, 676, 736, 737, 738,
	0, 678, 677, 679, 680, 681, 739, 682, 683, 291,
	0, 0, 0, 684, 685, 740, 686, 687, 688, 0,
	0, 0, 0, 0, 0, 0, 297, 298, 300, 299,
	301, 302, 303, 304, 0, 305, 306, 0, 0, 0,
	0, 0, 689, 0, 0, 0, 307, 0, 308, 309,
	0, 310, 311, 312, 313, 314, 315, 316, 690, 691,
	0, 317, 692, 318, 693, 0, 694, 319, 320, 321,
	322, 323, 324, 0, 0, 0, 325, 695, 696, 697,
	0, 326, 327, 698, 0, 0, 0, 328, 329, 330,
	331, 332, 333, 334, 335, 0, 0, 337, 338, 339,
	336, 340, 0, 341, 0, 342, 343, 344, 345, 346,
	347, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	0, 0, 0, 0, 0, 0, 354, 355, 356, 357,
	358, 0, 359, 361, 699, 700, 0, 364, 360, 362,
	0, 365, 363, 366, 0, 367, 368, 369, 0, 0,
	370, 371, 372, 0, 373, 374, 375, 0, 376, 377,
	378, 0, 379, 380, 701, 381, 382, 383, 385, 387,
	384, 386, 388, 389, 390, 391, 702, 703, 392, 0,
	0, 0, 0, 0, 0, 0, 393, 394, 395, 704,
	0, 0, 0, 396, 0, 397, 398, 399, 0, 400,
	401, 0, 0, 402, 403, 404, 705, 706, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 0, 414, 707,
	0, 708, 415, 0, 416, 417, 418, 419, 420, 421,
	422, 709, 710, 711, 511, 0, 423, 424, 0, 425,
	426, 427, 428, 429, 0, 0, 0, 0, 430, 431,
	432, 0, 0, 512, 433, 712, 713, 0, 714, 0,
	434, 435, 0, 715, 0, 436, 437, 438, 0, 439,
	0, 0, 0, 440, 441, 442, 443, 444, 445, 0,
	446, 448, 447, 0, 449, 716, 0, 450, 451, 0,
	0, 452, 453, 454, 455, 456, 457, 460, 0, 0,
	458, 459, 461, 462, 0, 463, 464, 466, 469, 465,
	467, 468, 470, 483, 484, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 486, 0, 485,
	0, 487, 488, 489, 490, 491, 498, 500, 501, 496,
	497, 499, 502, 503, 505, 493, 494, 495, 0, 504,
	492, 0, 0, 0, 506, 507, 508, 509, 0, 717,
	510, 718, 513, 514, 0, 0, 515, 0, 516, 0,
	0, 518, 519, 520, 0, 0, 521, 522, 719, 0,
	523, 0, 720, 524, 525, 517, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 0, 535, 536, 721, 537,
	538, 539, 722, 540, 541, 542, 723, 543, 724, 544,
	545, 2369, 546, 547, 548, 0, 549, 550, 551, 552,
	553, 554, 555, 556, 725, 557, 558, 560, 559, 561,
	0, 562, 0, 563, 564, 565, 0, 0, 0, 0,
	0, 566, 567, 569, 0, 570, 571, 572, 573, 568,
	574, 575, 576, 577, 578, 579, 0, 580, 581, 582,
	0, 834, 584, 585, 586, 587, 726, 588, 0, 589,
	590, 597, 598, 599, 591, 592, 593, 833, 601, 602,
	603, 604, 0, 606, 607, 605, 608, 609, 610, 0,
	611, 612, 594, 595, 613, 614, 0, 615, 616, 617,
	618, 619, 620, 621, 727, 0, 622, 0, 623, 624,
	625, 626, 627, 629, 596, 630, 635, 636, 728, 631,
	632, 633, 634, 729, 638, 639, 640, 0, 641, 642,
	0, 637, 628, 0, 643, 644, 645, 646, 647, 648,
	0, 649, 650, 0, 651, 831, 731, 732, 733, 0,
	662, 0, 652, 654, 655, 656, 734, 657, 735, 0,
	658, 659, 660, 661, 653, 663, 664, 0, 0, 665,
	666, 668, 670, 671, 667, 669, 672, 0, 673, 0,
	0, 674, 675, 676, 736, 737, 738, 0, 678, 677,
	679, 680, 681, 739, 682, 683, 291, 0, 0, 0,
	684, 685, 740, 686, 687, 688, 0, 0, 0, 0,
	0, 0, 0, 297, 298, 300, 299, 301, 302, 303,
	304, 2541, 305, 306, 0, 0, 0, 0, 0, 689,
	0, 0, 0, 307, 0, 308, 309, 0, 310, 311,
	312, 313, 314, 315, 316, 690, 691, 0, 317, 692,
	318, 693, 0, 694, 319, 320, 321, 322, 323, 324,
	0, 0, 0, 325, 695, 696, 697, 0, 326, 327,
	698, 0, 0, 0, 328, 329, 330, 331, 332, 333,
	334, 335, 0, 0, 337, 338, 339, 336, 340, 0,
	341, 0, 342, 343, 344, 345, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 0, 0, 0,
	0, 0, 0, 354, 355, 356, 357, 358, 0, 359,
	361, 699, 700, 0, 364, 360, 362, 0, 365, 363,
	366, 0, 367, 368, 369, 0, 0, 370, 371, 372,
	0, 373, 374, 375, 0, 376, 377, 378, 0, 379,
	380, 701, 381, 382, 383, 385, 387, 384, 386, 388,
	389, 390, 391, 702, 703, 392, 0, 0, 0, 0,
	0, 0, 0, 393, 394, 395, 704, 0, 0, 0,
	396, 0, 397, 398, 399, 0, 400, 401, 0, 0,
	402, 403, 404, 705, 706, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 0, 414, 707, 0, 708, 415,
	0, 416, 417, 418, 419, 420, 421, 422, 709, 710,
	711, 511, 0, 423, 424, 0, 425, 426, 427, 428,
	429, 0, 0, 0, 0, 430, 431, 432, 0, 0,
	512, 433, 712, 713, 0, 714, 0, 434, 435, 0,
	715, 0, 436, 437, 438, 0, 439, 0, 0, 0,
	440, 441, 442, 443, 444, 445, 0, 446, 448, 447,
	0, 449, 716, 0, 450, 451, 0, 0, 452, 453,
	454, 455, 456, 457, 460, 0, 0, 458, 459, 461,
	462, 0, 463, 464, 466, 469, 465, 467, 468, 470,
	483, 484, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 486, 0, 485, 0, 487, 488,
	489, 490, 491, 498, 500, 501, 496, 497, 499, 502,
	503, 505, 493, 494, 495, 0, 504, 492, 0, 0,
	0, 506, 507, 508, 509, 0, 717, 510, 718, 513,
	514, 0, 0, 515, 0, 516, 0, 0, 518, 519,
	520, 0, 0, 521, 522, 719, 0, 523, 0, 720,
	524, 525, 517, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 0, 535, 536, 721, 537, 538, 539, 722,
	540, 541, 542, 723, 543, 724, 544, 545, 0, 546,
	547, 548, 0, 549, 550, 551, 552, 553, 554, 555,
	556, 725, 557, 558, 560, 559, 561, 0, 562, 0,
	563, 564, 565, 0, 0, 0, 0, 0, 566, 567,
	569, 0, 570, 571, 572, 573, 568, 574, 575, 576,
	577, 578, 579, 0, 580, 581, 582, 0, 583, 584,
	585, 586, 587, 726, 588, 0, 589, 590, 597, 598,
	599, 591, 592, 593, 600, 601, 602, 603, 604, 0,
	606, 607, 605, 608, 609, 610, 0, 611, 612, 594,
	595, 613, 614, 0, 615, 616, 617, 618, 619, 620,
	621, 727, 0, 622, 0, 623, 624, 625, 626, 627,
	629, 596, 630, 635, 636, 728, 631, 632, 633, 634,
	729, 638, 639, 640, 0, 641, 642, 0, 637, 628,
	0, 643, 644, 645, 646, 647, 648, 0, 649, 650,
	0, 651, 730, 731, 732, 733, 0, 662, 0, 652,
	654, 655, 656, 734, 657, 735, 0, 658, 659, 660,
	661, 653, 663, 664, 0, 0, 665, 666, 668, 670,
	671, 667, 669, 672, 0, 673, 0, 0, 674, 675,
	676, 736, 737, 738, 0, 678, 677, 679, 680, 681,
	739, 682, 683, 2528, 0, 291, 0, 684, 685, 740,
	686, 687, 688, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 297, 298, 300, 299, 301, 302, 303, 304,
	0, 305, 306, 0, 0, 0, 0, 0, 689, 0,
	0, 0, 307, 0, 308, 309, 0, 310, 311, 312,
	313, 314, 315, 316, 690, 691, 0, 317, 692, 318,
	693, 0, 694, 319, 320, 321, 322, 323, 324, 0,
	0, 0, 325, 695, 696, 697, 0, 326, 327, 698,
	0, 0, 0, 328, 329, 330, 331, 332, 333, 334,
	335, 0, 0, 337, 338, 339, 336, 340, 0, 341,
	0, 342, 343, 344, 345, 346, 347, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 0, 0, 0, 0,
	0, 0, 354, 355, 356, 357, 358, 0, 359, 361,
	699, 700, 0, 364, 360, 362, 0, 365, 363, 366,
	0, 367, 368, 369, 0, 0, 370, 371, 372, 0,
	373, 374, 375, 0, 376, 377, 378, 0, 379, 380,
	701, 381, 382, 383, 385, 387, 384, 386, 388, 389,
	390, 391, 702, 703, 392, 0, 0, 0, 0, 0,
	0, 0, 393, 394, 395, 704, 0, 0, 0, 396,
	0, 397, 398, 399, 0, 400, 401, 0, 0, 402,
	403, 404, 705, 706, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 0, 414, 707, 0, 708, 415, 0,
	416, 417, 418, 419, 420, 421, 422, 709, 710, 711,
	511, 0, 423, 424, 0, 425, 426, 427, 428, 429,
	0, 0, 0, 0, 430, 431, 432, 0, 0, 512,
	433, 712, 713, 0, 714, 0, 434, 435, 0, 715,
	0, 436, 437, 438, 0, 439, 0, 0, 0, 440,
	441, 442, 443, 444, 445, 0, 446, 448, 447, 0,
	449, 716, 0, 450, 451, 0, 0, 452, 453, 454,
	455, 456, 457, 460, 0, 0, 458, 459, 461, 462,
	0, 463, 464, 466, 469, 465, 467, 468, 470, 483,
	484, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 486, 0, 485, 0, 487, 488, 489,
	490, 491, 498, 500, 501, 496, 497, 499, 502, 503,
	505, 493, 494, 495, 0, 504, 492, 0, 0, 0,
	506, 507, 508, 509, 0, 717, 510, 718, 513, 514,
	0, 0, 515, 0, 516, 0, 0, 518, 519, 520,
	0, 0, 521, 522, 719, 0, 523, 0, 720, 524,
	525, 517, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 0, 535, 536, 721, 537, 538, 539, 722, 540,
	541, 542, 723, 543, 724, 544, 545, 0, 546, 547,
	548, 0, 549, 550, 551, 552, 553, 554, 555, 556,
	725, 557, 558, 560, 559, 561, 0, 562, 0, 563,
	564, 565, 0, 0, 0, 0, 0, 566, 567, 569,
	0, 570, 571, 572, 573, 568, 574, 575, 576, 577,
	578, 579, 0, 580, 581, 582, 0, 583, 584, 585,
	586, 587, 726, 588, 0, 589, 590, 597, 598, 599,
	591, 592, 593, 600, 601, 602, 603, 604, 0, 606,
	607, 605, 608, 609, 610, 0, 611, 612, 594, 595,
	613, 614, 0, 615, 616, 617, 618, 619, 620, 621,
	727, 0, 622, 0, 623, 624, 625, 626, 627, 629,
	596, 630, 635, 636, 728, 631, 632, 633, 634, 729,
	638, 639, 640, 0, 641, 642, 0, 637, 628, 0,
	643, 644, 645, 646, 647, 648, 0, 649, 650, 0,
	651, 730, 731, 732, 733, 0, 662, 0, 652, 654,
	655, 656, 734, 657, 735, 0, 658, 659, 660, 661,
	653, 663, 664, 0, 0, 665, 666, 668, 670, 671,
	667, 669, 672, 0, 673, 0, 0, 674, 675, 676,
	736, 737, 738, 0, 678, 677, 679, 680, 681, 739,
	682, 683, 1789, 0, 291, 0, 684, 685, 740, 686,
	687, 688, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 298, 300, 299, 301, 302, 303, 304, 0,
	305, 306, 0, 0, 0, 0, 0, 689, 0, 0,
	0, 307, 0, 308, 309, 0, 310, 311, 312, 313,
	314, 315, 316, 690, 691, 0, 317, 692, 318, 693,
	0, 694, 319, 320, 321, 322, 323, 324, 0, 0,
	0, 325, 695, 696, 697, 0, 326, 327, 698, 0,
	0, 0, 328, 329, 330, 331, 332, 333, 334, 335,
	0, 0, 337, 338, 339, 336, 340, 0, 341, 0,
	342, 343, 344, 345, 346, 347, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 0, 0, 0, 0, 0,
	0, 354, 355, 356, 357, 358, 0, 359, 361, 699,
	700, 0, 364, 360, 362, 0, 365, 363, 366, 0,
	367, 368, 369, 0, 0, 370, 371, 372, 0, 373,
	374, 375, 0, 376, 377, 378, 0, 379, 380, 701,
	381, 382, 383, 385, 387, 384, 386, 388, 389, 390,
	391, 702, 703, 392, 0, 0, 0, 0, 0, 0,
	0, 393, 394, 395, 704, 0, 0, 0, 396, 0,
	397, 398, 399, 0, 400, 401, 0, 0, 402, 403,
	404, 705, 706, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 0, 414, 707, 0, 708, 415, 0, 416,
	417, 418, 419, 420, 421, 422, 709, 710, 711, 511,
	0, 423, 424, 0, 425, 426, 427, 428, 429, 0,
	0, 0, 0, 430, 431, 432, 0, 0, 512, 433,
	712, 713, 0, 714, 0, 434, 435, 0, 715, 0,
	436, 437, 438, 0, 439, 0, 0, 0, 440, 441,
	442, 443, 444, 445, 0, 446, 448, 447, 0, 449,
	716, 0, 450, 451, 0, 0, 452, 453, 454, 455,
	456, 457, 460, 0, 0, 458, 459, 461, 462, 0,
	463, 464, 466, 469, 465, 467, 468, 470, 483, 484,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 486, 0, 485, 0, 487, 488, 489, 490,
	491, 498, 500, 501, 496, 497, 499, 502, 503, 505,
	493, 494, 495, 0, 504, 492, 0, 0, 0, 506,
	507, 508, 509, 0, 717, 510, 718, 513, 514, 0,
	0, 515, 0, 516, 0, 0, 518, 519, 520, 0,
	0, 521, 522, 719, 0, 523, 0, 720, 524, 525,
	517, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	0, 535, 536, 721, 537, 538, 539, 722, 540, 541,
	542, 723, 543, 724, 544, 545, 0, 546, 547, 548,
	0, 549, 550, 551, 552, 553, 554, 555, 556, 725,
	557, 558, 560, 559, 561, 0, 562, 0, 563, 564,
	565, 0, 0, 0, 0, 0, 566, 567, 569, 0,
	570, 571, 572, 573, 568, 574, 575, 576, 577, 578,
	579, 0, 580, 581, 582, 0, 583, 584, 585, 586,
	587, 726, 588, 0, 589, 590, 597, 598, 599, 591,
	592, 593, 600, 601, 602, 603, 604, 0, 606, 607,
	605, 608, 609, 610, 0, 611, 612, 594, 595, 613,
	614, 0, 615, 616, 617, 618, 619, 620, 621, 727,
	0, 622, 0, 623, 624, 625, 626, 627, 629, 596,
	630, 635, 636, 728, 631, 632, 633, 634, 729, 638,
	639, 640, 0, 641, 642, 0, 637, 628, 0, 643,
	644, 645, 646, 647, 648, 0, 649, 650, 0, 651,
	730, 731, 732, 733, 0, 662, 0, 652, 654, 655,
	656, 734, 657, 735, 0, 658, 659, 660, 661, 653,
	663, 664, 0, 0, 665, 666, 668, 670, 671, 667,
	669, 672, 0, 673, 0, 0, 674, 675, 676, 736,
	737, 738, 0, 678, 677, 679, 680, 681, 739, 682,
	683, 1781, 0, 291, 0, 684, 685, 740, 686, 687,
	688, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	297, 298, 300, 299, 301, 302, 303, 304, 0, 305,
	306, 0, 0, 0, 0, 0, 689, 0, 0, 0,
	307, 0, 308, 309, 0, 310, 311, 312, 313, 314,
	315, 316, 690, 691, 0, 317, 692, 318, 693, 0,
	694, 319, 320, 321, 322, 323, 324, 0, 0, 0,
	325, 695, 696, 697, 0, 326, 327, 698, 0, 0,
	0, 328, 329, 330, 331, 332, 333, 334, 335, 0,
	0, 337, 338, 339, 336, 340, 0, 341, 0, 342,
	343, 344, 345, 346, 347, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 0, 0, 0, 0, 0, 0,
	354, 355, 356, 357, 358, 0, 359, 361, 699, 700,
	0, 364, 360, 362, 0, 365, 363, 366, 0, 367,
	368, 369, 0, 0, 370, 371, 372, 0, 373, 374,
	375, 0, 376, 377, 378, 0, 379, 380, 701, 381,
	382, 383, 385, 387, 384, 386, 388, 389, 390, 391,
	702, 703, 392, 0, 0, 0, 0, 0, 0, 0,
	393, 394, 395, 704, 0, 0, 0, 396, 0, 397,
	398, 399, 0, 400, 401, 0, 0, 402, 403, 404,
	705, 706, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 0, 414, 707, 0, 708, 415, 0, 416, 417,
	418, 419, 420, 421, 422, 709, 710, 711, 511, 0,
	423, 424, 0, 425, 426, 427, 428, 429, 0, 0,
	0, 0, 430, 431, 432, 0, 0, 512, 433, 712,
	713, 0, 714, 0, 434, 435, 0, 715, 0, 436,
	437, 438, 0, 439, 0, 0, 0, 440, 441, 442,
	443, 444, 445, 0, 446, 448, 447, 0, 449, 716,
	0, 450, 451, 0, 0, 452, 453, 454, 455, 456,
	457, 460, 0, 0, 458, 459, 461, 462, 0, 463,
	464, 466, 469, 465, 467, 468, 470, 483, 484, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 486, 0, 485, 0, 487, 488, 489, 490, 491,
	498, 500, 501, 496, 497, 499, 502, 503, 505, 493,
	494, 495, 0, 504, 492, 0, 0, 0, 506, 507,
	508, 509, 0, 717, 510, 718, 513, 514, 0, 0,
	515, 0, 516, 0, 0, 518, 519, 520, 0, 0,
	521, 522, 719, 0, 523, 0, 720, 524, 525, 517,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 0,
	535, 536, 721, 537, 538, 539, 722, 540, 541, 542,
	723, 543, 724, 544, 545, 0, 546, 547, 548, 0,
	549, 550, 551, 552, 553, 554, 555, 556, 725, 557,
	558, 560, 559, 561, 0, 562, 0, 563, 564, 565,
	0, 0, 0, 0, 0, 566, 567, 569, 0, 570,
	571, 572, 573, 568, 574, 575, 576, 577, 578, 579,
	0, 580, 581, 582, 0, 583, 584, 585, 586, 587,
	726, 588, 0, 589, 590, 597, 598, 599, 591, 592,
	593, 600, 601, 602, 603, 604, 0, 606, 607, 605,
	608, 609, 610, 0, 611, 612, 594, 595, 613, 614,
	0, 615, 616, 617, 618, 619, 620, 621, 727, 0,
	622, 0, 623, 624, 625, 626, 627, 629, 596, 630,
	635, 636, 728, 631, 632, 633, 634, 729, 638, 639,
	640, 0, 641, 642, 0, 637, 628, 0, 643, 644,
	645, 646, 647, 648, 0, 649, 650, 0, 651, 730,
	731, 732, 733, 0, 662, 0, 652, 654, 655, 656,
	734, 657, 735, 0, 658, 659, 660, 661, 653, 663,
	664, 0, 0, 665, 666, 668, 670, 671, 667, 669,
	672, 0, 673, 0, 0, 674, 675, 676, 736, 737,
	738, 0, 678, 677, 679, 680, 681, 739, 682, 683,
	825, 0, 291, 0, 684, 685, 740, 686, 687, 688,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 297,
	298, 300, 299, 301, 302, 303, 304, 0, 305, 306,
	0, 0, 0, 0, 0, 689, 0, 0, 0, 307,
	0, 308, 309, 0, 310, 311, 312, 313, 314, 315,
	316, 690, 691, 0, 317, 692, 318, 693, 0, 694,
	319, 320, 321, 322, 323, 324, 0, 0, 0, 325,
	695, 696, 697, 0, 326, 821, 698, 0, 0, 0,
	328, 329, 330, 331, 332, 333, 334, 335, 0, 0,
	337, 338, 339, 336, 340, 0, 341, 0, 342, 343,
	344, 345, 346, 347, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 0, 0, 0, 0, 0, 0, 354,
	355, 356, 357, 358, 0, 359, 361, 699, 700, 0,
	364, 360, 362, 0, 365, 363, 366, 0, 367, 368,
	369, 0, 0, 370, 371, 372, 0, 373, 374, 375,
	0, 376, 377, 378, 0, 379, 380, 701, 381, 382,
	383, 385, 387, 384, 386, 388, 389, 390, 391, 702,
	703, 392, 0, 0, 0, 0, 0, 0, 0, 393,
	394, 395, 704, 0, 0, 0, 396, 0, 397, 398,
	399, 0, 400, 401, 0, 0, 402, 403, 404, 705,
	706, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	0, 414, 707, 0, 708, 415, 0, 416, 417, 418,
	419, 420, 421, 422, 709, 710, 711, 511, 0, 423,
	424, 0, 425, 426, 427, 428, 429, 0, 0, 0,
	0, 430, 431, 432, 0, 0, 512, 433, 712, 713,
	0, 714, 0, 434, 435, 0, 715, 0, 436, 437,
	438, 0, 439, 0, 0, 0, 440, 441, 442, 443,
	444, 445, 0, 446, 448, 447, 0, 449, 716, 0,
	450, 451, 0, 0, 452, 453, 454, 455, 456, 826,
	460, 0, 0, 458, 459, 461, 462, 0, 463, 464,
	466, 469, 465, 467, 468, 470, 483, 484, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	486, 0, 835, 0, 487, 488, 489, 490, 491, 498,
	500, 501, 496, 497, 499, 502, 503, 505, 493, 494,
	495, 0, 504, 492, 0, 0, 0, 506, 507, 508,
	509, 0, 717, 510, 718, 513, 514, 0, 0, 515,
	0, 516, 0, 0, 518, 519, 520, 0, 0, 521,
	522, 719, 0, 523, 0, 720, 524, 525, 517, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 0, 535,
	536, 721, 537, 538, 539, 722, 540, 541, 542, 723,
	543, 724, 544, 545, 0, 546, 547, 548, 0, 549,
	550, 551, 552, 553, 554, 555, 556, 725, 557, 558,
	560, 559, 561, 0, 562, 0, 563, 564, 565, 0,
	0, 0, 0, 0, 566, 567, 569, 0, 570, 571,
	572, 573, 568, 574, 575, 576, 577, 578, 579, 0,
	580, 581, 582, 0, 834, 584, 585, 586, 587, 726,
	588, 0, 589, 590, 597, 598, 599, 591, 592, 593,
	833, 601, 602, 603, 604, 0, 606, 607, 605, 608,
	1766, 610, 0, 611, 612, 594, 595, 613, 614, 0,
	615, 616, 617, 618, 619, 620, 621, 727, 0, 622,
	0, 623, 624, 625, 626, 627, 629, 596, 630, 635,
	636, 728, 631, 632, 633, 634, 729, 638, 639, 640,
	0, 641, 642, 0, 637, 628, 0, 643, 644, 645,
	646, 647, 648, 0, 649, 650, 0, 651, 831, 731,
	732, 733, 0, 662, 0, 652, 654, 655, 656, 734,
	657, 735, 0, 658, 659, 660, 661, 653, 663, 664,
	0, 0, 665, 666, 668, 670, 671, 667, 669, 672,
	0, 673, 0, 0, 674, 675, 676, 736, 737, 738,
	0, 678, 677, 679, 680, 681, 739, 682, 683, 1739,
	0, 291, 0, 684, 685, 740, 686, 687, 688, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 297, 298,
	300, 299, 301, 302, 303, 304, 0, 305, 306, 0,
	0, 0, 0, 0, 689, 0, 0, 0, 307, 0,
	308, 309, 0, 310, 311, 312, 313, 314, 315, 316,
	690, 691, 0, 317, 692, 318, 693, 0, 694, 319,
	320, 321, 322, 323, 324, 0, 0, 0, 325, 695,
	696, 697, 0, 326, 327, 698, 0, 0, 0, 328,
	329, 330, 331, 332, 333, 334, 335, 0, 0, 337,
	338, 339, 336, 340, 0, 341, 0, 342, 343, 344,
	345, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 0, 0, 0, 0, 0, 0, 354, 355,
	356, 357, 358, 0, 359, 361, 699, 700, 0, 364,
	360, 362, 0, 365, 363, 366, 0, 367, 368, 369,
	0, 0, 370, 371, 372, 0, 373, 374, 375, 0,
	376, 377, 378, 0, 379, 380, 701, 381, 382, 383,
	385, 387, 384, 386, 388, 389, 390, 391, 702, 703,
	392, 0, 0, 0, 0, 0, 0, 0, 393, 394,
	395, 704, 0, 0, 0, 396, 0, 397, 398, 399,
	0, 400, 401, 0, 0, 402, 403, 404, 705, 706,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 0,
	414, 707, 0, 708, 415, 0, 416, 417, 418, 419,
	420, 421, 422, 1738, 710, 711, 511, 0, 423, 424,
	0, 425, 426, 427, 428, 429, 0, 0, 0, 0,
	430, 431, 432, 0, 0, 512, 433, 712, 713, 0,
	714, 0, 434, 435, 0, 715, 0, 436, 437, 438,
	0, 439, 0, 0, 0, 440, 441, 442, 443, 444,
	445, 0, 446, 448, 447, 0, 449, 716, 0, 450,
	451, 0, 0, 452, 453, 454, 455, 456, 457, 460,
	0, 0, 458, 459, 461, 462, 0, 463, 464, 466,
	469, 465, 467, 468, 470, 483, 484, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 486,
	0, 485, 0, 487, 488, 489, 490, 491, 498, 500,
	501, 496, 497, 499, 502, 503, 505, 493, 494, 495,
	0, 504, 492, 0, 0, 0, 506, 507, 508, 509,
	0, 717, 510, 718, 513, 514, 0, 0, 515, 0,
	516, 0, 0, 518, 519, 520, 0, 0, 521, 522,
	719, 0, 523, 0, 720, 524, 525, 517, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 0, 535, 536,
	721, 537, 538, 539, 722, 540, 541, 542, 723, 543,
	724, 544, 545, 0, 546, 547, 548, 0, 549, 550,
	551, 552, 553, 554, 555, 556, 725, 557, 558, 560,
	559, 561, 0, 562, 0, 563, 564, 565, 0, 0,
	0, 0, 0, 566, 567, 569, 0, 570, 571, 572,
	573, 568, 574, 575, 576, 577, 578, 579, 0, 580,
	581, 582, 0, 583, 584, 585, 586, 587, 726, 588,
	0, 589, 590, 597, 598, 599, 591, 592, 593, 600,
	601, 602, 603, 604, 0, 606, 607, 605, 608, 609,
	610, 0, 611, 612, 594, 595, 613, 614, 0, 615,
	616, 617, 618, 619, 620, 621, 727, 0, 622, 0,
	623, 624, 625, 626, 627, 629, 596, 630, 635, 636,
	728, 631, 632, 633, 634, 729, 638, 639, 640, 0,
	641, 642, 0, 637, 628, 0, 643, 644, 645, 646,
	647, 648, 0, 649, 650, 0, 651, 730, 731, 732,
	733, 0, 662, 0, 652, 654, 655, 656, 734, 657,
	735, 0, 658, 659, 660, 661, 653, 663, 664, 0,
	0, 665, 666, 668, 670, 671, 667, 669, 672, 0,
	673, 0, 0, 674, 675, 676, 736, 737, 738, 0,
	678, 677, 679, 680, 681, 739, 682, 683, 1723, 0,
	291, 0, 684, 685, 740, 686, 687, 688, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 297, 298, 300,
	299, 301, 302, 303, 304, 0, 305, 306, 0, 0,
	0, 0, 0, 689, 0, 0, 0, 307, 0, 308,
	309, 0, 310, 311, 312, 313, 314, 315, 316, 690,
	691, 0, 317, 692, 318, 693, 0, 694, 319, 320,
	321, 322, 323, 324, 0, 0, 0, 325, 695, 696,
	697, 0, 326, 327, 698, 0, 0, 0, 328, 329,
	330, 331, 332, 333, 334, 335, 0, 0, 337, 338,
	339, 336, 340, 0, 341, 0, 342, 343, 344, 345,
	346, 347, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 0, 0, 0, 0, 0, 0, 354, 355, 356,
	357, 358, 0, 359, 361, 699, 700, 0, 364, 360,
	362, 0, 365, 363, 366, 0, 367, 368, 369, 0,
	0, 370, 371, 372, 0, 373, 374, 375, 0, 376,
	377, 378, 0, 379, 380, 701, 381, 382, 383, 385,
	387, 384, 386, 388, 389, 390, 391, 702, 703, 392,
	0, 0, 0, 0, 0, 0, 0, 393, 394, 395,
	704, 0, 0, 0, 396, 0, 397, 398, 399, 0,
	400, 401, 0, 0, 402, 403, 404, 705, 706, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 0, 414,
	707, 0, 708, 415, 0, 416, 417, 418, 419, 420,
	421, 422, 1721, 710, 711, 511, 0, 423, 424, 0,
	425, 426, 427, 428, 429, 0, 0, 0, 0, 430,
	431, 432, 0, 0, 512, 433, 712, 713, 0, 714,
	0, 434, 435, 0, 715, 0, 436, 437, 438, 0,
	439, 0, 0, 0, 440, 441, 442, 443, 444, 445,
	0, 446, 448, 447, 0, 449, 716, 0, 450, 451,
	0, 0, 452, 453, 454, 455, 456, 457, 460, 0,
	0, 458, 459, 461, 462, 0, 463, 464, 466, 469,
	465, 467, 468, 470, 483, 484, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 486, 0,
	485, 0, 487, 488, 489, 490, 491, 498, 500, 501,
	496, 497, 499, 502, 503, 505, 493, 494, 495, 0,
	504, 492, 0, 0, 0, 506, 507, 508, 509, 0,
	717, 510, 718, 513, 514, 0, 0, 515, 0, 516,
	0, 0, 518, 519, 520, 0, 0, 521, 522, 719,
	0, 523, 0, 720, 524, 525, 517, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 0, 535, 536, 721,
	537, 538, 539, 722, 540, 541, 542, 723, 543, 724,
	544, 545, 0, 546, 547, 548, 0, 549, 550, 551,
	552, 553, 554, 555, 556, 725, 557, 558, 560, 559,
	561, 0, 562, 0, 563, 564, 565, 0, 0, 0,
	0, 0, 566, 567, 569, 0, 570, 571, 572, 573,
	568, 574, 575, 576, 577, 578, 579, 0, 580, 581,
	582, 0, 583, 584, 585, 586, 587, 726, 588, 0,
	589, 590, 597, 598, 599, 591, 592, 593, 600, 601,
	602, 603, 604, 0, 606, 607, 605, 608, 609, 610,
	0, 611, 612, 594, 595, 613, 614, 0, 615, 616,
	617, 618, 619, 620, 621, 727, 0, 622, 0, 623,
	624, 625, 626, 627, 629, 596, 630, 635, 636, 728,
	631, 632, 633, 634, 729, 638, 639, 640, 0, 641,
	642, 0, 637, 628, 0, 643, 644, 645, 646, 647,
	648, 0, 649, 650, 0, 651, 730, 731, 732, 733,
	0, 662, 0, 652, 654, 655, 656, 734, 657, 735,
	0, 658, 659, 660, 661, 653, 663, 664, 0, 0,
	665, 666, 668, 670, 671, 667, 669, 672, 0, 673,
	0, 0, 674, 675, 676, 736, 737, 738, 0, 678,
	677, 679, 680, 681, 739, 682, 683, 1717, 0, 291,
	0, 684, 685, 740, 686, 687, 688, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 297, 298, 300, 299,
	301, 302, 303, 304, 0, 305, 306, 0, 0, 0,
	0, 0, 689, 0, 0, 0, 307, 0, 308, 309,
	0, 310, 311, 312, 313, 314, 315, 316, 690, 691,
	0, 317, 692, 318, 693, 0, 694, 319, 320, 321,
	322, 323, 324, 0, 0, 0, 325, 695, 696, 697,
	0, 326, 327, 698, 0, 0, 0, 328, 329, 330,
	331, 332, 333, 334, 335, 0, 0, 337, 338, 339,
	336, 340, 0, 341, 0, 342, 343, 344, 345, 346,
	347, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	0, 0, 0, 0, 0, 0, 354, 355, 356, 357,
	358, 0, 359, 361, 699, 700, 0, 364, 360, 362,
	0, 365, 363, 366, 0, 367, 368, 369, 0, 0,
	370, 371, 372, 0, 373, 374, 375, 0, 376, 377,
	378, 0, 379, 380, 701, 381, 382, 383, 385, 387,
	384, 386, 388, 389, 390, 391, 702, 703, 392, 0,
	0, 0, 0, 0, 0, 0, 393, 394, 395, 704,
	0, 0, 0, 396, 0, 397, 398, 399, 0, 400,
	401, 0, 0, 402, 403, 404, 705, 706, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 0, 414, 707,
	0, 708, 415, 0, 416, 417, 418, 419, 420, 421,
	422, 709, 710, 711, 511, 0, 423, 424, 0, 425,
	426, 427, 428, 429, 0, 0, 0, 0, 430, 431,
	432, 0, 0, 512, 433, 712, 713, 0, 714, 0,
	434, 435, 0, 715, 0, 436, 437, 438, 0, 439,
	0, 0, 0, 440, 441, 442, 443, 444, 445, 0,
	446, 448, 447, 0, 449, 716, 0, 450, 451, 0,
	0, 452, 453, 454, 455, 456, 457, 460, 0, 0,
	458, 459, 461, 462, 0, 463, 464, 466, 469, 465,
	467, 468, 470, 483, 484, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 486, 0, 485,
	0, 487, 488, 489, 490, 491, 498, 500, 501, 496,
	497, 499, 502, 503, 505, 493, 494, 495, 0, 504,
	492, 0, 0, 0, 506, 507, 508, 509, 0, 717,
	510, 718, 513, 514, 0, 0, 515, 0, 516, 0,
	0, 518, 519, 520, 0, 0, 521, 522, 719, 0,
	523, 0, 720, 524, 525, 517, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 0, 535, 536, 721, 537,
	538, 539, 722, 540, 541, 542, 723, 543, 724, 544,
	545, 0, 546, 547, 548, 0, 549, 550, 551, 552,
	553, 554, 555, 556, 725, 557, 558, 560, 559, 561,
	0, 562, 0, 563, 564, 565, 0, 0, 0, 0,
	0, 566, 567, 569, 0, 570, 571, 572, 573, 568,
	574, 575, 576, 577, 578, 579, 0, 580, 581, 582,
	0, 583, 584, 585, 586, 587, 726, 588, 0, 589,
	590, 597, 598, 599, 591, 592, 593, 600, 601, 602,
	603, 604, 0, 606, 607, 605, 608, 609, 610, 0,
	611, 612, 594, 595, 613, 614, 0, 615, 616, 617,
	618, 619, 620, 621, 727, 0, 622, 0, 623, 624,
	625, 626, 627, 629, 596, 630, 635, 636, 728, 631,
	632, 633, 634, 729, 638, 639, 640, 0, 641, 642,
	0, 637, 628, 0, 643, 644, 645, 646, 647, 648,
	0, 649, 650, 0, 651, 730, 731, 732, 733, 0,
	662, 0, 652, 654, 655, 656, 734, 657, 735, 0,
	658, 659, 660, 661, 653, 663, 664, 0, 0, 665,
	666, 668, 670, 671, 667, 669, 672, 0, 673, 0,
	0, 674, 675, 676, 736, 737, 738, 0, 678, 677,
	679, 680, 681, 739, 682, 683, 1694, 0, 291, 0,
	684, 685, 740, 686, 687, 688, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 297, 298, 300, 299, 301,
	302, 303, 304, 0, 305, 306, 0, 0, 0, 0,
	0, 689, 0, 0, 0, 307, 0, 308, 309, 0,
	310, 311, 312, 313, 314, 315, 316, 690, 691, 0,
	317, 692, 318, 693, 0, 694, 319, 320, 321, 322,
	323, 324, 0, 0, 0, 325, 695, 696, 697, 0,
	326, 327, 698, 0, 0, 0, 328, 329, 330, 331,
	332, 333, 334, 335, 0, 0, 337, 338, 339, 336,
	340, 0, 341, 0, 342, 343, 344, 345, 346, 347,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 0,
	0, 0, 0, 0, 0, 354, 355, 356, 357, 358,
	0, 359, 361, 699, 700, 0, 364, 360, 362, 0,
	365, 363, 366, 0, 367, 368, 369, 0, 0, 370,
	371, 372, 0, 373, 374, 375, 0, 376, 377, 378,
	0, 379, 380, 701, 381, 382, 383, 385, 387, 384,
	386, 388, 389, 390, 391, 702, 703, 392, 0, 0,
	0, 0, 0, 0, 0, 393, 394, 395, 704, 0,
	0, 0, 396, 0, 397, 398, 399, 0, 400, 401,
	0, 0, 402, 403, 404, 705, 706, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 0, 414, 707, 0,
	708, 415, 0, 416, 417, 418, 419, 420, 421, 422,
	1692, 710, 711, 511, 0, 423, 424, 0, 425, 426,
	427, 428, 429, 0, 0, 0, 0, 430, 431, 432,
	0, 0, 512, 433, 712, 713, 0, 714, 0, 434,
	435, 0, 715, 0, 436, 437, 438, 0, 439, 0,
	0, 0, 440, 441, 442, 443, 444, 445, 0, 446,
	448, 447, 0, 449, 716, 0, 450, 451, 0, 0,
	452, 453, 454, 455, 456, 457, 460, 0, 0, 458,
	459, 461, 462, 0, 463, 464, 466, 469, 465, 467,
	468, 470, 483, 484, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 486, 0, 485, 0,
	487, 488, 489, 490, 491, 498, 500, 501, 496, 497,
	499, 502, 503, 505, 493, 494, 495, 0, 504, 492,
	0, 0, 0, 506, 507, 508, 509, 0, 717, 510,
	718, 513, 514, 0, 0, 515, 0, 516, 0, 0,
	518, 519, 520, 0, 0, 521, 522, 719, 0, 523,
	0, 720, 524, 525, 517, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 0, 535, 536, 721, 537, 538,
	539, 722, 540, 541, 542, 723, 543, 724, 544, 545,
	0, 546, 547, 548, 0, 549, 550, 551, 552, 553,
	554, 555, 556, 725, 557, 558, 560, 559, 561, 0,
	562, 0, 563, 564, 565, 0, 0, 0, 0, 0,
	566, 567, 569, 0, 570, 571, 572, 573, 568, 574,
	575, 576, 577, 578, 579, 0, 580, 581, 582, 0,
	583, 584, 585, 586, 587, 726, 588, 0, 589, 590,
	597, 598, 599, 591, 592, 593, 600, 601, 602, 603,
	604, 0, 606, 607, 605, 608, 609, 610, 0, 611,
	612, 594, 595, 613, 614, 0, 615, 616, 617, 618,
	619, 620, 621, 727, 0, 622, 0, 623, 624, 625,
	626, 627, 629, 596, 630, 635, 636, 728, 631, 632,
	633, 634, 729, 638, 639, 640, 0, 641, 642, 0,
	637, 628, 0, 643, 644, 645, 646, 647, 648, 0,
	649, 650, 0, 651, 730, 731, 732, 733, 0, 662,
	0, 652, 654, 655, 656, 734, 657, 735, 0, 658,
	659, 660, 661, 653, 663, 664, 0, 0, 665, 666,
	668, 670, 671, 667, 669, 672, 0, 673, 0, 0,
	674, 675, 676, 736, 737, 738, 0, 678, 677, 679,
	680, 681, 739, 682, 683, 1687, 0, 291, 0, 684,
	685, 740, 686, 687, 688, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 297, 298, 300, 299, 301, 302,
	303, 304, 0, 305, 306, 0, 0, 0, 0, 0,
	689, 0, 0, 0, 307, 0, 308, 309, 0, 310,
	311, 312, 313, 314, 315, 316, 690, 691, 0, 317,
	692, 318, 693, 0, 694, 319, 320, 321, 322, 323,
	324, 0, 0, 0, 325, 695, 696, 697, 0, 326,
	327, 698, 0, 0, 0, 328, 329, 330, 331, 332,
	333, 334, 335, 0, 0, 337, 338, 339, 336, 340,
	0, 341, 0, 342, 343, 344, 345, 346, 347, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 0, 0,
	0, 0, 0, 0, 354, 355, 356, 357, 358, 0,
	359, 361, 699, 700, 0, 364, 360, 362, 0, 365,
	363, 366, 0, 367, 368, 369, 0, 0, 370, 371,
	372, 0, 373, 374, 375, 0, 376, 377, 378, 0,
	379, 380, 701, 381, 382, 383, 385, 387, 384, 386,
	388, 389, 390, 391, 702, 703, 392, 0, 0, 0,
	0, 0, 0, 0, 393, 394, 395, 704, 0, 0,
	0, 396, 0, 397, 398, 399, 0, 400, 401, 0,
	0, 402, 403, 404, 705, 706, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 0, 414, 707, 0, 708,
	415, 0, 416, 417, 418, 419, 420, 421, 422, 709,
	710, 711, 511, 0, 423, 424, 0, 425, 426, 427,
	428, 429, 0, 0, 0, 0, 430, 431, 432, 0,
	0, 512, 433, 712, 713, 0, 714, 0, 434, 435,
	0, 715, 0, 436, 437, 438, 0, 439, 0, 0,
	0, 440, 441, 442, 443, 444, 445, 0, 446, 448,
	447, 0, 449, 716, 0, 450, 451, 0, 0, 452,
	453, 454, 455, 456, 457, 460, 0, 0, 458, 459,
	461, 462, 0, 463, 464, 466, 469, 465, 467, 468,
	470, 483, 484, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 486, 0, 485, 0, 487,
	488, 489, 490, 491, 498, 500, 501, 496, 497, 499,
	502, 503, 505, 493, 494, 495, 0, 504, 492, 0,
	0, 0, 506, 507, 508, 509, 0, 717, 510, 718,
	513, 514, 0, 0, 515, 0, 516, 0, 0, 518,
	519, 520, 0, 0, 521, 522, 719, 0, 523, 0,
	720, 524, 525, 517, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 0, 535, 536, 721, 537, 538, 539,
	722, 540, 541, 542, 723, 543, 724, 544, 545, 0,
	546, 547, 548, 0, 549, 550, 551, 552, 553, 554,
	555, 556, 725, 557, 558, 560, 559, 561, 0, 562,
	0, 563, 564, 565, 0, 0, 0, 0, 0, 566,
	567, 569, 0, 570, 571, 572, 573, 568, 574, 575,
	576, 577, 578, 579, 0, 580, 581, 582, 0, 583,
	584, 585, 586, 587, 726, 588, 0, 589, 590, 597,
	598, 599, 591, 592, 593, 600, 601, 602, 603, 604,
	0, 606, 607, 605, 608, 609, 610, 0, 611, 612,
	594, 595, 613, 614, 0, 615, 616, 617, 618, 619,
	620, 621, 727, 0, 622, 0, 623, 624, 625, 626,
	627, 629, 596, 630, 635, 636, 728, 631, 632, 633,
	634, 729, 638, 639, 640, 0, 641, 642, 0, 637,
	628, 0, 643, 644, 645, 646, 647, 648, 0, 649,
	650, 0, 651, 730, 731, 732, 733, 0, 662, 0,
	652, 654, 655, 656, 734, 657, 735, 0, 658, 659,
	660, 661, 653, 663, 664, 0, 0, 665, 666, 668,
	670, 671, 667, 669, 672, 0, 673, 0, 0, 674,
	675, 676, 736, 737, 738, 0, 678, 677, 679, 680,
	681, 739, 682, 683, 1647, 0, 291, 0, 684, 685,
	740, 686, 687, 688, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 297, 298, 300, 299, 301, 302, 303,
	304, 0, 305, 306, 0, 0, 0, 0, 0, 689,
	0, 0, 0, 307, 0, 308, 309, 0, 310, 311,
	312, 313, 314, 315, 316, 690, 691, 0, 317, 692,
	318, 693, 0, 694, 319, 320, 321, 322, 323, 324,
	0, 0, 0, 325, 695, 696, 697, 0, 326, 327,
	698, 0, 0, 0, 328, 329, 330, 331, 332, 333,
	334, 335, 0, 0, 337, 338, 339, 336, 340, 0,
	341, 0, 342, 343, 344, 345, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 0, 0, 0,
	0, 0, 0, 354, 355, 356, 357, 358, 0, 359,
	361, 699, 700, 0, 364, 360, 362, 0, 365, 363,
	366, 0, 367, 368, 369, 0, 0, 370, 371, 372,
	0, 373, 374, 375, 0, 376, 377, 378, 0, 379,
	380, 701, 381, 382, 383, 385, 387, 384, 386, 388,
	389, 390, 391, 702, 703, 392, 0, 0, 0, 0,
	0, 0, 0, 393, 394, 395, 704, 0, 0, 0,
	396, 0, 397, 398, 399, 0, 400, 401, 0, 0,
	402, 403, 404, 705, 706, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 0, 414, 707, 0, 708, 415,
	0, 416, 417, 418, 419, 420, 421, 422, 709, 710,
	711, 511, 0, 423, 424, 0, 425, 426, 427, 428,
	429, 0, 0, 0, 0, 430, 431, 432, 0, 0,
	512, 433, 712, 713, 0, 714, 0, 434, 435, 0,
	715, 0, 436, 437, 438, 0, 439, 0, 0, 0,
	440, 441, 442, 443, 444, 445, 0, 446, 448, 447,
	0, 449, 716, 0, 450, 451, 0, 0, 452, 453,
	454, 455, 456, 457, 460, 0, 0, 458, 459, 461,
	462, 0, 463, 464, 466, 469, 465, 467, 468, 470,
	483, 484, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 486, 0, 485, 0, 487, 488,
	489, 490, 491, 498, 500, 501, 496, 497, 499, 502,
	503, 505, 493, 494, 495, 0, 504, 492, 0, 0,
	0, 506, 507, 508, 509, 0, 717, 510, 718, 513,
	514, 0, 0, 515, 0, 516, 0, 0, 518, 519,
	520, 0, 0, 521, 522, 719, 0, 523, 0, 720,
	524, 525, 517, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 0, 535, 536, 721, 537, 538, 539, 722,
	540, 541, 542, 723, 543, 724, 544, 545, 0, 546,
	547, 548, 0, 549, 550, 551, 552, 553, 554, 555,
	556, 725, 557, 558, 560, 559, 561, 0, 562, 0,
	563, 564, 565, 0, 0, 0, 0, 0, 566, 567,
	569, 0, 570, 571, 572, 573, 568, 574, 575, 576,
	577, 578, 579, 0, 580, 581, 582, 0, 583, 584,
	585, 586, 587, 726, 588, 0, 589, 590, 597, 598,
	599, 591, 592, 593, 600, 601, 602, 603, 604, 0,
	606, 607, 605, 608, 609, 610, 0, 611, 612, 594,
	595, 613, 614, 0, 615, 616, 617, 618, 619, 620,
	621, 727, 0, 622, 0, 623, 624, 625, 626, 627,
	629, 596, 630, 635, 636, 728, 631, 632, 633, 634,
	729, 638, 639, 640, 0, 641, 642, 0, 637, 628,
	0, 643, 644, 645, 646, 647, 648, 0, 649, 650,
	0, 651, 730, 731, 732, 733, 0, 662, 0, 652,
	654, 655, 656, 734, 657, 735, 0, 658, 659, 660,
	661, 653, 663, 664, 0, 0, 665, 666, 668, 670,
	671, 667, 669, 672, 0, 673, 0, 0, 674, 675,
	676, 736, 737, 738, 0, 678, 677, 679, 680, 681,
	739, 682, 683, 1611, 0, 291, 0, 684, 685, 740,
	686, 687, 688, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 297, 298, 300, 299, 301, 302, 303, 304,
	0, 305, 306, 0, 0, 0, 0, 0, 689, 0,
	0, 0, 307, 0, 308, 309, 0, 310, 311, 312,
	313, 314, 315, 316, 690, 691, 0, 317, 692, 318,
	693, 0, 694, 319, 320, 321, 322, 323, 324, 0,
	0, 0, 325, 695, 696, 697, 0, 326, 327, 698,
	0, 0, 0, 328, 329, 330, 331, 332, 333, 334,
	335, 0, 0, 337, 338, 339, 336, 340, 0, 341,
	0, 342, 343, 344, 345, 346, 347, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 0, 0, 0, 0,
	0, 0, 354, 355, 356, 357, 358, 0, 359, 361,
	699, 700, 0, 364, 360, 362, 0, 365, 363, 366,
	0, 367, 368, 369, 0, 0, 370, 371, 372, 0,
	373, 374, 375, 0, 376, 377, 378, 0, 379, 380,
	701, 381, 382, 383, 385, 387, 384, 386, 388, 389,
	390, 391, 702, 703, 392, 0, 0, 0, 0, 0,
	0, 0, 393, 394, 395, 704, 0, 0, 0, 396,
	0, 397, 398, 399, 0, 400, 401, 0, 0, 402,
	403, 404, 705, 706, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 0, 414, 707, 0, 708, 415, 0,
	416, 417, 418, 419, 420, 421, 422, 709, 710, 711,
	511, 0, 423, 424, 0, 425, 426, 427, 428, 429,
	0, 0, 0, 0, 430, 431, 432, 0, 0, 512,
	433, 712, 713, 0, 714, 0, 434, 435, 0, 715,
	0, 436, 437, 438, 0, 439, 0, 0, 0, 440,
	441, 442, 443, 444, 445, 0, 446, 448, 447, 0,
	449, 716, 0, 450, 451, 0, 0, 452, 453, 454,
	455, 456, 457, 460, 0, 0, 458, 459, 461, 462,
	0, 463, 464, 466, 469, 465, 467, 468, 470, 483,
	484, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 486, 0, 485, 0, 487, 488, 489,
	490, 491, 498, 500, 501, 496, 497, 499, 502, 503,
	505, 493, 494, 495, 0, 504, 492, 0, 0, 0,
	506, 507, 508, 509, 0, 717, 510, 718, 513, 514,
	0, 0, 515, 0, 516, 0, 0, 518, 519, 520,
	0, 0, 521, 522, 719, 0, 523, 0, 720, 524,
	525, 517, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 0, 535, 536, 721, 537, 538, 539, 722, 540,
	541, 542, 723, 543, 724, 544, 545, 0, 546, 547,
	548, 0, 549, 550, 551, 552, 553, 554, 555, 556,
	725, 557, 558, 560, 559, 561, 0, 562, 0, 563,
	564, 565, 0, 0, 0, 0, 0, 566, 567, 569,
	0, 570, 571, 572, 573, 568, 574, 575, 576, 577,
	578, 579, 0, 580, 581, 582, 0, 583, 584, 585,
	586, 587, 726, 588, 0, 589, 590, 597, 598, 599,
	591, 592, 593, 600, 601, 602, 603, 604, 0, 606,
	607, 605, 608, 609, 610, 0, 611, 612, 594, 595,
	613, 614, 0, 615, 616, 617, 618, 619, 620, 621,
	727, 0, 622, 0, 623, 624, 625, 626, 627, 629,
	596, 630, 635, 636, 728, 631, 632, 633, 634, 729,
	638, 639, 640, 0, 641, 642, 0, 637, 628, 0,
	643, 644, 645, 646, 647, 648, 0, 649, 650, 0,
	651, 730, 731, 732, 733, 0, 662, 0, 652, 654,
	655, 656, 734, 657, 735, 0, 658, 659, 660, 661,
	653, 663, 664, 0, 0, 665, 666, 668, 670, 671,
	667, 669, 672, 0, 673, 0, 0, 674, 675, 676,
	736, 737, 738, 0, 678, 677, 679, 680, 681, 739,
	682, 683, 1462, 0, 291, 0, 684, 685, 740, 686,
	687, 688, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 298, 300, 299, 301, 302, 303, 304, 0,
	305, 306, 0, 0, 0, 0, 0, 689, 0, 0,
	0, 307, 0, 308, 309, 0, 310, 311, 312, 313,
	314, 315, 316, 690, 691, 0, 317, 692, 318, 693,
	0, 694, 319, 320, 321, 322, 323, 324, 0, 0,
	0, 325, 695, 696, 697, 0, 326, 327, 698, 0,
	0, 0, 328, 329, 330, 331, 332, 333, 334, 335,
	0, 0, 337, 338, 339, 336, 340, 0, 341, 0,
	342, 343, 344, 345, 346, 347, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 0, 0, 0, 0, 0,
	0, 354, 355, 356, 357, 358, 0, 359, 361, 699,
	700, 0, 364, 360, 362, 0, 365, 363, 366, 0,
	367, 368, 369, 0, 0, 370, 371, 372, 0, 373,
	374, 375, 0, 376, 377, 378, 0, 379, 380, 701,
	381, 382, 383, 385, 387, 384, 386, 388, 389, 390,
	391, 702, 703, 392, 0, 0, 0, 0, 0, 0,
	0, 393, 394, 395, 704, 0, 0, 0, 396, 0,
	397, 398, 399, 0, 400, 401, 0, 0, 402, 403,
	404, 705, 706, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 0, 414, 707, 0, 708, 415, 0, 416,
	417, 418, 419, 420, 421, 422, 709, 710, 711, 511,
	0, 423, 424, 0, 425, 426, 427, 428, 429, 0,
	0, 0, 0, 430, 431, 432, 0, 0, 512, 433,
	712, 713, 0, 714, 0, 434, 435, 0, 715, 0,
	436, 437, 438, 0, 439, 0, 0, 0, 440, 441,
	442, 443, 444, 445, 0, 446, 448, 447, 0, 449,
	716, 0, 450, 451, 0, 0, 452, 453, 454, 455,
	456, 457, 460, 0, 0, 458, 459, 461, 462, 0,
	463, 464, 466, 469, 465, 467, 468, 470, 483, 484,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 486, 0, 485, 0, 487, 488, 489, 490,
	491, 498, 500, 501, 496, 497, 499, 502, 503, 505,
	493, 494, 495, 0, 504, 492, 0, 0, 0, 506,
	507, 508, 509, 0, 717, 510, 718, 513, 514, 0,
	0, 515, 0, 516, 0, 0, 518, 519, 520, 0,
	0, 521, 522, 719, 0, 523, 0, 720, 524, 525,
	517, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	0, 535, 536, 721, 537, 538, 539, 722, 540, 541,
	542, 723, 543, 724, 544, 545, 0, 546, 547, 548,
	0, 549, 550, 551, 552, 553, 554, 555, 556, 725,
	557, 558, 560, 559, 561, 0, 562, 0, 563, 564,
	565, 0, 0, 0, 0, 0, 566, 567, 569, 0,
	570, 571, 572, 573, 568, 574, 575, 576, 577, 578,
	579, 0, 580, 581, 582, 0, 834, 584, 585, 586,
	587, 726, 588, 0, 589, 590, 597, 598, 599, 591,
	592, 593, 833, 601, 602, 603, 604, 0, 606, 607,
	605, 608, 609, 610, 0, 611, 612, 594, 595, 613,
	614, 0, 615, 616, 617, 618, 619, 620, 621, 727,
	0, 622, 0, 623, 624, 625, 626, 627, 629, 596,
	630, 635, 636, 728, 631, 632, 633, 634, 729, 638,
	639, 640, 0, 641, 642, 0, 637, 628, 0, 643,
	644, 645, 646, 647, 648, 0, 649, 650, 0, 651,
	831, 731, 732, 733, 0, 662, 0, 652, 654, 655,
	656, 734, 657, 735, 0, 658, 659, 660, 661, 653,
	663, 664, 0, 0, 665, 666, 668, 670, 671, 667,
	669, 672, 0, 673, 0, 0, 674, 675, 676, 736,
	737, 738, 0, 678, 677, 679, 680, 681, 739, 682,
	683, 1433, 0, 291, 0, 684, 685, 740, 686, 687,
	688, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	297, 298, 300, 299, 301, 302, 303, 304, 0, 305,
	306, 0, 0, 0, 0, 0, 689, 0, 0, 0,
	307, 0, 308, 309, 0, 310, 311, 312, 313, 314,
	315, 316, 690, 691, 0, 317, 692, 318, 693, 0,
	694, 319, 320, 321, 322, 323, 324, 0, 0, 0,
	325, 695, 696, 697, 0, 326, 327, 698, 0, 0,
	0, 328, 329, 330, 331, 332, 333, 334, 335, 0,
	0, 337, 338, 339, 336, 340, 0, 341, 0, 342,
	343, 344, 345, 346, 347, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 0, 0, 0, 0, 0, 0,
	354, 355, 356, 357, 358, 0, 359, 361, 699, 700,
	0, 364, 360, 362, 0, 365, 363, 366, 0, 367,
	368, 369, 0, 0, 370, 371, 372, 0, 373, 374,
	375, 0, 376, 377, 378, 0, 379, 380, 701, 381,
	382, 383, 385, 387, 384, 386, 388, 389, 390, 391,
	702, 703, 392, 0, 0, 0, 0, 0, 0, 0,
	393, 394, 395, 704, 0, 0, 0, 396, 0, 397,
	398, 399, 0, 400, 401, 0, 0, 402, 403, 404,
	705, 706, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 0, 414, 707, 0, 708, 415, 0, 416, 417,
	418, 419, 420, 421, 422, 1432, 710, 711, 511, 0,
	423, 424, 0, 425, 426, 427, 428, 429, 0, 0,
	0, 0, 430, 431, 432, 0, 0, 512, 433, 712,
	713, 0, 714, 0, 434, 435, 0, 715, 0, 436,
	437, 438, 0, 439, 0, 0, 0, 440, 441, 442,
	443, 444, 445, 0, 446, 448, 447, 0, 449, 716,
	0, 450, 451, 0, 0, 452, 453, 454, 455, 456,
	457, 460, 0, 0, 458, 459, 461, 462, 0, 463,
	464, 466, 469, 465, 467, 468, 470, 483, 484, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 486, 0, 485, 0, 487, 488, 489, 490, 491,
	498, 500, 501, 496, 497, 499, 502, 503, 505, 493,
	494, 495, 0, 504, 492, 0, 0, 0, 506, 507,
	508, 509, 0, 717, 510, 718, 513, 514, 0, 0,
	515, 0, 516, 0, 0, 518, 519, 520, 0, 0,
	521, 522, 719, 0, 523, 0, 720, 524, 525, 517,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 0,
	535, 536, 721, 537, 538, 539, 722, 540, 541, 542,
	723, 543, 724, 544, 545, 0, 546, 547, 548, 0,
	549, 550, 551, 552, 553, 554, 555, 556, 725, 557,
	558, 560, 559, 561, 0, 562, 0, 563, 564, 565,
	0, 0, 0, 0, 0, 566, 567, 569, 0, 570,
	571, 572, 573, 568, 574, 575, 576, 577, 578, 579,
	0, 580, 581, 582, 0, 583, 584, 585, 586, 587,
	726, 588, 0, 589, 590, 597, 598, 599, 591, 592,
	593, 600, 601, 602, 603, 604, 0, 606, 607, 605,
	608, 609, 610, 0, 611, 612, 594, 595, 613, 614,
	0, 615, 616, 617, 618, 619, 620, 621, 727, 0,
	622, 0, 623, 624, 625, 626, 627, 629, 596, 630,
	635, 636, 728, 631, 632, 633, 634, 729, 638, 639,
	640, 0, 641, 642, 0, 637, 628, 0, 643, 644,
	645, 646, 647, 648, 0, 649, 650, 0, 651, 730,
	731, 732, 733, 0, 662, 0, 652, 654, 655, 656,
	734, 657, 735, 0, 658, 659, 660, 661, 653, 663,
	664, 0, 0, 665, 666, 668, 670, 671, 667, 669,
	672, 0, 673, 0, 0, 674, 675, 676, 736, 737,
	738, 0, 678, 677, 679, 680, 681, 739, 682, 683,
	1424, 0, 291, 0, 684, 685, 740, 686, 687, 688,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 297,
	298, 300, 299, 301, 302, 303, 304, 0, 305, 306,
	0, 0, 0, 0, 0, 689, 0, 0, 0, 307,
	0, 308, 309, 0, 310, 311, 312, 313, 314, 315,
	316, 690, 691, 0, 317, 692, 318, 693, 0, 694,
	319, 320, 321, 322, 323, 324, 0, 0, 0, 325,
	695, 696, 697, 0, 326, 327, 698, 0, 0, 0,
	328, 329, 330, 331, 332, 333, 334, 335, 0, 0,
	337, 338, 339, 336, 340, 0, 341, 0, 342, 343,
	344, 345, 346, 347, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 0, 0, 0, 0, 0, 0, 354,
	355, 356, 357, 358, 0, 359, 361, 699, 700, 0,
	364, 360, 362, 0, 365, 363, 366, 0, 367, 368,
	369, 0, 0, 370, 371, 372, 0, 373, 374, 375,
	0, 376, 377, 378, 0, 379, 380, 701, 381, 382,
	383, 385, 387, 384, 386, 388, 389, 390, 391, 702,
	703, 392, 0, 0, 0, 0, 0, 0, 0, 393,
	394, 395, 704, 0, 0, 0, 396, 0, 397, 398,
	399, 0, 400, 401, 0, 0, 402, 403, 404, 705,
	706, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	0, 414, 707, 0, 708, 415, 0, 416, 417, 418,
	419, 420, 421, 422, 1423, 710, 711, 511, 0, 423,
	424, 0, 425, 426, 427, 428, 429, 0, 0, 0,
	0, 430, 431, 432, 0, 0, 512, 433, 712, 713,
	0, 714, 0, 434, 435, 0, 715, 0, 436, 437,
	438, 0, 439, 0, 0, 0, 440, 441, 442, 443,
	444, 445, 0, 446, 448, 447, 0, 449, 716, 0,
	450, 451, 0, 0, 452, 453, 454, 455, 456, 457,
	460, 0, 0, 458, 459, 461, 462, 0, 463, 464,
	466, 469, 465, 467, 468, 470, 483, 484, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	486, 0, 485, 0, 487, 488, 489, 490, 491, 498,
	500, 501, 496, 497, 499, 502, 503, 505, 493, 494,
	495, 0, 504, 492, 0, 0, 0, 506, 507, 508,
	509, 0, 717, 510, 718, 513, 514, 0, 0, 515,
	0, 516, 0, 0, 518, 519, 520, 0, 0, 521,
	522, 719, 0, 523, 0, 720, 524, 525, 517, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 0, 535,
	536, 721, 537, 538, 539, 722, 540, 541, 542, 723,
	543, 724, 544, 545, 0, 546, 547, 548, 0, 549,
	550, 551, 552, 553, 554, 555, 556, 725, 557, 558,
	560, 559, 561, 0, 562, 0, 563, 564, 565, 0,
	0, 0, 0, 0, 566, 567, 569, 0, 570, 571,
	572, 573, 568, 574, 575, 576, 577, 578, 579, 0,
	580, 581, 582, 0, 583, 584, 585, 586, 587, 726,
	588, 0, 589, 590, 597, 598, 599, 591, 592, 593,
	600, 601, 602, 603, 604, 0, 606, 607, 605, 608,
	609, 610, 0, 611, 612, 594, 595, 613, 614, 0,
	615, 616, 617, 618, 619, 620, 621, 727, 0, 622,
	0, 623, 624, 625, 626, 627, 629, 596, 630, 635,
	636, 728, 631, 632, 633, 634, 729, 638, 639, 640,
	0, 641, 642, 0, 637, 628, 0, 643, 644, 645,
	646, 647, 648, 0, 649, 650, 0, 651, 730, 731,
	732, 733, 0, 662, 0, 652, 654, 655, 656, 734,
	657, 735, 0, 658, 659, 660, 661, 653, 663, 664,
	0, 0, 665, 666, 668, 670, 671, 667, 669, 672,
	0, 673, 0, 0, 674, 675, 676, 736, 737, 738,
	0, 678, 677, 679, 680, 681, 739, 682, 683, 291,
	0, 0, 0, 684, 685, 740, 686, 687, 688, 0,
	0, 0, 0, 0, 0, 0, 297, 298, 300, 299,
	301, 302, 303, 304, 1373, 305, 306, 0, 0, 0,
	0, 0, 689, 0, 0, 0, 307, 0, 308, 309,
	0, 310, 311, 312, 313, 314, 315, 316, 690, 691,
	0, 317, 692, 318, 693, 0, 694, 319, 320, 321,
	322, 323, 324, 0, 0, 0, 325, 695, 696, 697,
	0, 326, 327, 698, 0, 0, 0, 328, 329, 330,
	331, 332, 333, 334, 335, 0, 0, 337, 338, 339,
	336, 340, 0, 341, 0, 342, 343, 344, 345, 346,
	347, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	0, 0, 0, 0, 0, 0, 354, 355, 356, 357,
	358, 0, 359, 361, 699, 700, 0, 364, 360, 362,
	0, 365, 363, 366, 0, 367, 368, 369, 0, 0,
	370, 371, 372, 0, 373, 374, 375, 0, 376, 377,
	378, 0, 379, 380, 701, 381, 382, 383, 385, 387,
	384, 386, 388, 389, 390, 391, 702, 703, 392, 0,
	0, 0, 0, 0, 0, 0, 393, 394, 395, 704,
	0, 0, 0, 396, 0, 397, 398, 399, 0, 400,
	401, 0, 0, 402, 403, 404, 705, 706, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 0, 414, 707,
	0, 708, 415, 0, 416, 417, 418, 419, 420, 421,
	422, 709, 710, 711, 511, 0, 423, 424, 0, 425,
	426, 427, 428, 429, 0, 0, 0, 0, 430, 431,
	432, 0, 0, 512, 433, 712, 713, 0, 714, 0,
	434, 435, 0, 715, 0, 436, 437, 438, 0, 439,
	0, 0, 0, 440, 441, 442, 443, 444, 445, 0,
	446, 448, 447, 0, 449, 716, 0, 450, 451, 0,
	0, 452, 453, 454, 455, 456, 457, 460, 0, 0,
	458, 459, 461, 462, 0, 463, 464, 466, 469, 465,
	467, 468, 470, 483, 484, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 486, 0, 485,
	0, 487, 488, 489, 490, 491, 498, 500, 501, 496,
	497, 499, 502, 503, 505, 493, 494, 495, 0, 504,
	492, 0, 0, 0, 506, 507, 508, 509, 0, 717,
	510, 718, 513, 514, 0, 0, 515, 0, 516, 0,
	0, 518, 519, 520, 0, 0, 521, 522, 719, 0,
	523, 0, 720, 524, 525, 517, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 0, 535, 536, 721, 537,
	538, 539, 722, 540, 541, 542, 723, 543, 724, 544,
	545, 0, 546, 547, 548, 0, 549, 550, 551, 552,
	553, 554, 555, 556, 725, 557, 558, 560, 559, 561,
	0, 562, 0, 563, 564, 565, 0, 0, 0, 0,
	0, 566, 567, 569, 0, 570, 571, 572, 573, 568,
	574, 575, 576, 577, 578, 579, 0, 580, 581, 582,
	0, 583, 584, 585, 586, 587, 726, 588, 0, 589,
	590, 597, 598, 599, 591, 592, 593, 600, 601, 602,
	603, 604, 0, 606, 607, 605, 608, 609, 610, 0,
	611, 612, 594, 595, 613, 614, 0, 615, 616, 617,
	618, 619, 620, 621, 727, 0, 622, 0, 623, 624,
	625, 626, 627, 629, 596, 630, 635, 636, 728, 631,
	632, 633, 634, 729, 638, 639, 640, 0, 641, 642,
	0, 637, 628, 0, 643, 644, 645, 646, 647, 648,
	0, 649, 650, 0, 651, 730, 731, 732, 733, 0,
	662, 0, 652, 654, 655, 656, 734, 657, 735, 0,
	658, 659, 660, 661, 653, 663, 664, 0, 0, 665,
	666, 668, 670, 671, 667, 669, 672, 0, 673, 0,
	0, 674, 675, 676, 736, 737, 738, 0, 678, 677,
	679, 680, 681, 739, 682, 683, 845, 0, 291, 0,
	684, 685, 740, 686, 687, 688, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 297, 298, 300, 299, 301,
	302, 303, 304, 0, 305, 306, 0, 0, 0, 0,
	0, 689, 0, 0, 0, 307, 0, 308, 309, 0,
	310, 311, 312, 313, 314, 315, 316, 690, 691, 0,
	317, 692, 318, 693, 0, 694, 319, 320, 321, 322,
	323, 324, 0, 0, 0, 325, 695, 696, 697, 0,
	326, 327, 698, 0, 0, 0, 328, 329, 330, 331,
	332, 333, 334, 335, 0, 0, 337, 338, 339, 336,
	340, 0, 341, 0, 342, 343, 344, 345, 346, 347,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 0,
	0, 0, 0, 0, 0, 354, 355, 356, 357, 358,
	0, 359, 361, 699, 700, 0, 364, 360, 362, 0,
	365, 363, 366, 0, 367, 368, 369, 0, 0, 370,
	371, 372, 0, 373, 374, 375, 0, 376, 377, 378,
	0, 379, 380, 701, 381, 382, 383, 385, 387, 384,
	386, 388, 389, 390, 391, 702, 703, 392, 0, 0,
	0, 0, 0, 0, 0, 393, 394, 395, 704, 0,
	0, 0, 396, 0, 397, 398, 399, 0, 400, 401,
	0, 0, 402, 403, 404, 705, 706, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 0, 414, 707, 0,
	708, 415, 0, 416, 417, 418, 419, 420, 421, 422,
	709, 710, 711, 511, 0, 423, 424, 0, 425, 426,
	427, 428, 429, 0, 0, 0, 0, 430, 431, 432,
	0, 0, 512, 433, 712, 713, 0, 714, 0, 434,
	435, 0, 715, 0, 436, 437, 438, 0, 439, 0,
	0, 0, 440, 441, 442, 443, 444, 445, 0, 446,
	448, 447, 0, 449, 716, 0, 450, 451, 0, 0,
	452, 453, 454, 455, 456, 457, 460, 0, 0, 458,
	459, 461, 462, 0, 463, 464, 466, 469, 465, 467,
	468, 470, 483, 484, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 486, 0, 485, 0,
	487, 488, 489, 490, 491, 498, 500, 501, 496, 497,
	499, 502, 503, 505, 493, 494, 495, 0, 504, 492,
	0, 0, 0, 506, 507, 508, 509, 0, 717, 510,
	718, 513, 514, 0, 0, 515, 0, 516, 0, 0,
	518, 519, 520, 0, 0, 521, 522, 719, 0, 523,
	0, 720, 524, 525, 517, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 0, 535, 536, 721, 537, 538,
	539, 722, 540, 541, 542, 723, 543, 724, 544, 545,
	0, 546, 547, 548, 0, 549, 550, 551, 552, 553,
	554, 555, 556, 725, 557, 558, 560, 559, 561, 0,
	562, 0, 563, 564, 565, 0, 0, 0, 0, 0,
	566, 567, 569, 0, 570, 571, 572, 573, 568, 574,
	575, 576, 577, 578, 579, 0, 580, 581, 582, 0,
	583, 584, 585, 586, 587, 726, 588, 0, 589, 590,
	597, 598, 599, 591, 592, 593, 600, 601, 602, 603,
	604, 0, 606, 607, 605, 608, 609, 610, 0, 611,
	612, 594, 595, 613, 614, 0, 615, 616, 617, 618,
	619, 620, 621, 727, 0, 622, 0, 623, 624, 625,
	626, 627, 629, 596, 630, 635, 636, 728, 631, 632,
	633, 634, 729, 638, 639, 640, 0, 641, 642, 0,
	637, 628, 0, 643, 644, 645, 646, 647, 648, 0,
	649, 650, 0, 651, 730, 731, 732, 733, 0, 662,
	0, 652, 654, 655, 656, 734, 657, 735, 0, 658,
	659, 660, 661, 653, 663, 664, 0, 0, 665, 666,
	668, 670, 671, 667, 669, 672, 0, 673, 0, 0,
	674, 675, 676, 736, 737, 738, 0, 678, 677, 679,
	680, 681, 739, 682, 683, 825, 0, 291, 0, 684,
	685, 740, 686, 687, 688, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 297, 298, 300, 299, 301, 302,
	303, 304, 0, 305, 306, 0, 0, 0, 0, 0,
	689, 0, 0, 0, 307, 0, 308, 309, 0, 310,
	311, 312, 313, 314, 315, 316, 690, 691, 0, 317,
	692, 318, 693, 0, 694, 319, 320, 321, 322, 323,
	324, 0, 0, 0, 325, 695, 696, 697, 0, 326,
	821, 698, 0, 0, 0, 328, 329, 330, 331, 332,
	333, 334, 335, 0, 0, 337, 338, 339, 336, 340,
	0, 820, 0, 342, 343, 344, 345, 346, 347, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 0, 0,
	0, 0, 0, 0, 354, 355, 356, 357, 358, 0,
	359, 361, 699, 700, 0, 364, 360, 362, 0, 365,
	363, 366, 0, 367, 368, 369, 0, 0, 370, 371,
	372, 0, 373, 374, 375, 0, 376, 377, 378, 0,
	379, 380, 701, 381, 382, 383, 385, 387, 384, 386,
	388, 389, 390, 391, 702, 703, 392, 0, 0, 0,
	0, 0, 0, 0, 393, 394, 395, 704, 0, 0,
	0, 396, 0, 397, 398, 399, 0, 400, 401, 0,
	0, 402, 403, 404, 705, 706, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 0, 414, 707, 0, 708,
	415, 0, 416, 417, 418, 419, 420, 421, 422, 709,
	710, 711, 511, 0, 423, 424, 0, 425, 426, 427,
	428, 429, 0, 0, 0, 0, 430, 431, 432, 0,
	0, 512, 433, 712, 713, 0, 714, 0, 434, 435,
	0, 715, 0, 436, 437, 438, 0, 439, 0, 0,
	0, 440, 441, 442, 443, 444, 445, 0, 446, 448,
	447, 0, 449, 716, 0, 450, 451, 0, 0, 452,
	453, 454, 455, 456, 826, 460, 0, 0, 458, 459,
	461, 462, 0, 463, 464, 466, 469, 465, 467, 468,
	470, 483, 484, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 486, 0, 835, 0, 487,
	488, 489, 490, 491, 498, 500, 501, 496, 497, 499,
	502, 503, 505, 493, 494, 495, 0, 504, 492, 0,
	0, 0, 506, 507, 508, 509, 0, 717, 510, 718,
	513, 514, 0, 0, 515, 0, 516, 0, 0, 518,
	519, 520, 0, 0, 521, 522, 719, 0, 523, 0,
	720, 524, 525, 517, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 0, 535, 536, 721, 537, 538, 539,
	722, 540, 541, 542, 723, 543, 724, 544, 545, 0,
	546, 547, 548, 0, 549, 550, 551, 552, 553, 554,
	555, 556, 725, 557, 558, 560, 559, 561, 0, 562,
	0, 563, 564, 565, 0, 0, 0, 0, 0, 566,
	567, 569, 0, 570, 571, 572, 573, 568, 574, 575,
	576, 577, 578, 579, 0, 580, 581, 582, 0, 834,
	584, 585, 586, 587, 822, 588, 0, 589, 590, 597,
	598, 599, 591, 592, 593, 833, 601, 602, 603, 604,
	0, 606, 607, 605, 608, 823, 610, 0, 611, 612,
	594, 595, 613, 614, 0, 615, 616, 617, 618, 619,
	620, 621, 727, 0, 622, 0, 623, 624, 625, 626,
	627, 629, 596, 630, 635, 636, 728, 631, 632, 633,
	634, 729, 638, 639, 640, 0, 641, 642, 0, 637,
	628, 0, 643, 644, 645, 646, 647, 648, 0, 649,
	650, 0, 651, 831, 731, 732, 733, 0, 662, 0,
	652, 827, 655, 656, 734, 657, 735, 0, 658, 659,
	660, 661, 653, 663, 664, 0, 0, 665, 666, 668,
	670, 671, 667, 669, 672, 0, 673, 0, 0, 674,
	675, 676, 736, 737, 738, 0, 678, 677, 679, 680,
	681, 739, 682, 683, 814, 0, 291, 0, 684, 685,
	740, 686, 687, 688, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 297, 298, 300, 299, 301, 302, 303,
	304, 0, 305, 306, 0, 0, 0, 0, 0, 689,
	0, 0, 0, 307, 0, 308, 309, 0, 310, 311,
	312, 313, 314, 315, 316, 690, 691, 0, 317, 692,
	318, 693, 0, 694, 319, 320, 321, 322, 323, 324,
	0, 0, 0, 325, 695, 696, 697, 0, 326, 327,
	698, 0, 0, 0, 328, 329, 330, 331, 332, 333,
	334, 335, 0, 0, 337, 338, 339, 336, 340, 0,
	341, 0, 342, 343, 344, 345, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 0, 0, 0,
	0, 0, 0, 354, 355, 356, 357, 358, 0, 359,
	361, 699, 700, 0, 364, 360, 362, 0, 365, 363,
	366, 0, 367, 368, 369, 0, 0, 370, 371, 372,
	0, 373, 374, 375, 0, 376, 377, 378, 0, 379,
	380, 701, 381, 382, 383, 385, 387, 384, 386, 388,
	389, 390, 391, 702, 703, 392, 0, 0, 0, 0,
	0, 0, 0, 393, 394, 395, 704, 0, 0, 0,
	396, 0, 397, 398, 399, 0, 400, 401, 0, 0,
	402, 403, 404, 705, 706, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 0, 414, 707, 0, 708, 415,
	0, 416, 417, 418, 419, 420, 421, 422, 709, 710,
	711, 511, 0, 423, 424, 0, 425, 426, 427, 428,
	429, 0, 0, 0, 0, 430, 431, 432, 0, 0,
	512, 433, 712, 713, 0, 714, 0, 434, 435, 0,
	715, 0, 436, 437, 438, 0, 439, 0, 0, 0,
	440, 441, 442, 443, 444, 445, 0, 446, 448, 447,
	0, 449, 716, 0, 450, 451, 0, 0, 452, 453,
	454, 455, 456, 457, 460, 0, 0, 458, 459, 461,
	462, 0, 463, 464, 466, 469, 465, 467, 468, 470,
	483, 484, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 486, 0, 485, 0, 487, 488,
	489, 490, 491, 498, 500, 501, 496, 497, 499, 502,
	503, 505, 493, 494, 495, 0, 504, 492, 0, 0,
	0, 506, 507, 508, 509, 0, 717, 510, 718, 513,
	514, 0, 0, 515, 0, 516, 0, 0, 518, 519,
	520, 0, 0, 521, 522, 719, 0, 523, 0, 720,
	524, 525, 517, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 0, 535, 536, 721, 537, 538, 539, 722,
	540, 541, 542, 723, 543, 724, 544, 545, 0, 546,
	547, 548, 0, 549, 550, 551, 552, 553, 554, 555,
	556, 725, 557, 558, 560, 559, 561, 0, 562, 0,
	563, 564, 565, 0, 0, 0, 0, 0, 566, 567,
	569, 0, 570, 571, 572, 573, 568, 574, 575, 576,
	577, 578, 579, 0, 580, 581, 582, 0, 583, 584,
	585, 586, 587, 726, 588, 0, 589, 590, 815, 598,
	599, 591, 592, 593, 600, 601, 602, 603, 604, 0,
	606, 607, 605, 608, 609, 610, 0, 611, 612, 594,
	595, 613, 614, 0, 615, 616, 617, 618, 619, 620,
	621, 727, 0, 622, 0, 623, 624, 625, 626, 627,
	629, 596, 630, 635, 636, 728, 631, 632, 633, 634,
	729, 638, 639, 640, 0, 641, 642, 0, 637, 628,
	0, 643, 644, 645, 646, 647, 648, 0, 649, 650,
	0, 651, 730, 731, 732, 733, 0, 662, 0, 652,
	654, 655, 656, 734, 657, 735, 0, 658, 659, 660,
	661, 653, 663, 664, 0, 0, 665, 666, 668, 670,
	671, 667, 669, 672, 0, 673, 0, 0, 674, 675,
	676, 736, 737, 738, 0, 678, 677, 679, 680, 681,
	739, 682, 683, 777, 0, 291, 0, 684, 685, 740,
	686, 687, 688, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 297, 298, 300, 299, 301, 302, 303, 304,
	0, 305, 306, 0, 0, 0, 0, 0, 689, 0,
	0, 0, 307, 0, 308, 309, 0, 310, 311, 312,
	313, 314, 315, 316, 690, 691, 0, 317, 692, 318,
	693, 0, 694, 319, 320, 321, 322, 323, 324, 0,
	0, 0, 325, 695, 696, 697, 0, 326, 327, 698,
	0, 0, 0, 328, 329, 330, 331, 332, 333, 334,
	335, 0, 0, 337, 338, 339, 336, 340, 0, 341,
	0, 342, 343, 344, 345, 346, 347, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 0, 0, 0, 0,
	0, 0, 354, 355, 356, 357, 358, 0, 359, 361,
	699, 700, 0, 364, 360, 362, 0, 365, 363, 366,
	0, 367, 368, 369, 0, 0, 370, 371, 372, 0,
	373, 374, 375, 0, 376, 377, 378, 0, 379, 380,
	701, 381, 382, 383, 385, 387, 384, 386, 388, 389,
	390, 391, 702, 703, 392, 0, 0, 0, 0, 0,
	0, 0, 393, 394, 395, 704, 0, 0, 0, 396,
	0, 397, 398, 399, 0, 400, 401, 0, 0, 402,
	403, 404, 705, 706, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 0, 414, 707, 0, 708, 415, 0,
	416, 417, 418, 419, 420, 421, 422, 709, 710, 711,
	511, 0, 423, 424, 0, 425, 426, 427, 428, 429,
	0, 0, 0, 0, 430, 431, 432, 0, 0, 512,
	433, 712, 713, 0, 714, 0, 434, 435, 0, 715,
	0, 436, 437, 438, 0, 439, 0, 0, 0, 440,
	441, 442, 443, 444, 445, 0, 446, 448, 447, 0,
	449, 716, 0, 450, 451, 0, 0, 452, 453, 454,
	455, 456, 457, 460, 0, 0, 458, 459, 461, 462,
	0, 463, 464, 466, 469, 465, 467, 468, 470, 483,
	484, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 486, 0, 485, 0, 487, 488, 489,
	490, 491, 498, 500, 501, 496, 497, 499, 502, 503,
	505, 493, 494, 495, 0, 504, 492, 0, 0, 0,
	506, 507, 508, 509, 0, 717, 510, 718, 513, 514,
	0, 0, 515, 0, 516, 0, 0, 518, 519, 520,
	0, 0, 521, 522, 719, 0, 523, 0, 720, 524,
	525, 517, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 0, 535, 536, 721, 537, 538, 539, 722, 540,
	541, 542, 723, 543, 724, 544, 545, 0, 546, 547,
	548, 0, 549, 550, 551, 552, 553, 554, 555, 556,
	725, 557, 558, 560, 559, 561, 0, 562, 0, 563,
	564, 565, 0, 0, 0, 0, 0, 566, 567, 569,
	0, 570, 571, 572, 573, 568, 574, 575, 576, 577,
	578, 579, 0, 580, 581, 582, 0, 583, 584, 585,
	586, 587, 726, 588, 0, 589, 590, 597, 598, 599,
	591, 592, 593, 600, 601, 602, 603, 604, 0, 606,
	607, 605, 608, 609, 610, 0, 611, 612, 594, 595,
	613, 614, 0, 615, 616, 617, 618, 619, 620, 621,
	727, 0, 622, 0, 623, 624, 625, 626, 627, 629,
	596, 630, 635, 636, 728, 631, 632, 633, 634, 729,
	638, 639, 640, 0, 641, 642, 0, 637, 628, 0,
	643, 644, 645, 646, 647, 648, 0, 649, 650, 0,
	651, 730, 731, 732, 733, 0, 662, 0, 652, 654,
	655, 656, 734, 657, 735, 0, 658, 659, 660, 661,
	653, 663, 664, 0, 0, 665, 666, 668, 670, 671,
	667, 669, 672, 0, 673, 0, 0, 674, 675, 676,
	736, 737, 738, 0, 678, 677, 679, 680, 681, 739,
	682, 683, 769, 0, 291, 0, 684, 685, 740, 686,
	687, 688, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 298, 300, 299, 301, 302, 303, 304, 0,
	305, 306, 0, 0, 0, 0, 0, 689, 0, 0,
	0, 307, 0, 308, 309, 0, 310, 311, 312, 313,
	314, 315, 316, 690, 691, 0, 317, 692, 318, 693,
	0, 694, 319, 320, 321, 322, 323, 324, 0, 0,
	0, 325, 695, 696, 697, 0, 326, 327, 698, 0,
	0, 0, 328, 329, 330, 331, 332, 333, 334, 335,
	0, 0, 337, 338, 339, 336, 340, 0, 341, 0,
	342, 343, 344, 345, 346, 347, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 0, 0, 0, 0, 0,
	0, 354, 355, 356, 357, 358, 0, 359, 361, 699,
	700, 0, 364, 360, 362, 0, 365, 363, 366, 0,
	367, 368, 369, 0, 0, 370, 371, 372, 0, 373,
	374, 375, 0, 376, 377, 378, 0, 379, 380, 701,
	381, 382, 383, 385, 387, 384, 386, 388, 389, 390,
	391, 702, 703, 392, 0, 0, 0, 0, 0, 0,
	0, 393, 394, 395, 704, 0, 0, 0, 396, 0,
	397, 398, 399, 0, 400, 401, 0, 0, 402, 403,
	404, 705, 706, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 0, 414, 707, 0, 708, 415, 0, 416,
	417, 418, 419, 420, 421, 422, 709, 710, 711, 511,
	0, 423, 424, 0, 425, 426, 427, 428, 429, 0,
	0, 0, 0, 430, 431, 432, 0, 0, 512, 433,
	712, 713, 0, 714, 0, 434, 435, 0, 715, 0,
	436, 437, 438, 0, 439, 0, 0, 0, 440, 441,
	442, 443, 444, 445, 0, 446, 448, 447, 0, 449,
	716, 0, 450, 451, 0, 0, 452, 453, 454, 455,
	456, 457, 460, 0, 0, 458, 459, 461, 462, 0,
	463, 464, 466, 469, 465, 467, 468, 470, 483, 484,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 486, 0, 485, 0, 487, 488, 489, 490,
	491, 498, 500, 501, 496, 497, 499, 502, 503, 505,
	493, 494, 495, 0, 504, 492, 0, 0, 0, 506,
	507, 508, 509, 0, 717, 510, 718, 513, 514, 0,
	0, 515, 0, 516, 0, 0, 518, 519, 520, 0,
	0, 521, 522, 719, 0, 523, 0, 720, 524, 525,
	517, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	0, 535, 536, 721, 537, 538, 539, 722, 540, 541,
	542, 723, 543, 724, 544, 545, 0, 546, 547, 548,
	0, 549, 550, 551, 552, 553, 554, 555, 556, 725,
	557, 558, 560, 559, 561, 0, 562, 0, 563, 564,
	565, 0, 0, 0, 0, 0, 566, 567, 569, 0,
	570, 571, 572, 573, 568, 574, 575, 576, 577, 578,
	579, 0, 580, 581, 582, 0, 583, 584, 585, 586,
	587, 726, 588, 0, 589, 590, 597, 598, 599, 591,
	592, 593, 600, 601, 602, 603, 604, 0, 606, 607,
	605, 608, 609, 610, 0, 611, 612, 594, 595, 613,
	614, 0, 615, 616, 617, 618, 619, 620, 621, 727,
	0, 622, 0, 623, 624, 625, 626, 627, 629, 596,
	630, 635, 636, 728, 631, 632, 633, 634, 729, 638,
	639, 640, 0, 641, 642, 0, 637, 628, 0, 643,
	644, 645, 646, 647, 648, 0, 649, 650, 0, 651,
	730, 731, 732, 733, 0, 662, 0, 652, 654, 655,
	656, 734, 657, 735, 0, 658, 659, 660, 661, 653,
	663, 664, 0, 0, 665, 666, 668, 670, 671, 667,
	669, 672, 0, 673, 0, 0, 674, 675, 676, 736,
	737, 738, 0, 678, 677, 679, 680, 681, 739, 682,
	683, 746, 0, 291, 0, 684, 685, 740, 686, 687,
	688, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	297, 298, 300, 299, 301, 302, 303, 304, 0, 305,
	306, 0, 0, 0, 0, 0, 689, 0, 0, 0,
	307, 0, 308, 309, 0, 310, 311, 312, 313, 314,
	315, 316, 690, 691, 0, 317, 692, 318, 693, 0,
	694, 319, 320, 321, 322, 323, 324, 0, 0, 0,
	325, 695, 696, 697, 0, 326, 327, 698, 0, 0,
	0, 328, 329, 330, 331, 332, 333, 334, 335, 0,
	0, 337, 338, 339, 336, 340, 0, 341, 0, 342,
	343, 344, 345, 346, 347, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 0, 0, 0, 0, 0, 0,
	354, 355, 356, 357, 358, 0, 359, 361, 699, 700,
	0, 364, 360, 362, 0, 365, 363, 366, 0, 367,
	368, 369, 0, 0, 370, 371, 372, 0, 373, 374,
	375, 0, 376, 377, 378, 0, 379, 380, 701, 381,
	382, 383, 385, 387, 384, 386, 388, 389, 390, 391,
	702, 703, 392, 0, 0, 0, 0, 0, 0, 0,
	393, 394, 395, 704, 0, 0, 0, 396, 0, 397,
	398, 399, 0, 400, 401, 0, 0, 402, 403, 404,
	705, 706, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 0, 414, 707, 0, 708, 415, 0, 416, 417,
	418, 419, 420, 421, 422, 709, 710, 711, 511, 0,
	423, 424, 0, 425, 426, 427, 428, 429, 0, 0,
	0, 0, 430, 431, 432, 0, 0, 512, 433, 712,
	713, 0, 714, 0, 434, 435, 0, 715, 0, 436,
	437, 438, 0, 439, 0, 0, 0, 440, 441, 442,
	443, 444, 445, 0, 446, 448, 447, 0, 449, 716,
	0, 450, 451, 0, 0, 452, 453, 454, 455, 456,
	457, 460, 0, 0, 458, 459, 461, 462, 0, 463,
	464, 466, 469, 465, 467, 468, 470, 483, 484, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 486, 0, 485, 0, 487, 488, 489, 490, 491,
	498, 500, 501, 496, 497, 499, 502, 503, 505, 493,
	494, 495, 0, 504, 492, 0, 0, 0, 506, 507,
	508, 509, 0, 717, 510, 718, 513, 514, 0, 0,
	515, 0, 516, 0, 0, 518, 519, 520, 0, 0,
	521, 522, 719, 0, 523, 0, 720, 524, 525, 517,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 0,
	535, 536, 721, 537, 538, 539, 722, 540, 541, 542,
	723, 543, 724, 544, 545, 0, 546, 547, 548, 0,
	549, 550, 551, 552, 553, 554, 555, 556, 725, 557,
	558, 560, 559, 561, 0, 562, 0, 563, 564, 565,
	0, 0, 0, 0, 0, 566, 567, 569, 0, 570,
	571, 572, 573, 568, 574, 575, 576, 577, 578, 579,
	0, 580, 581, 582, 0, 583, 584, 585, 586, 587,
	726, 588, 0, 589, 590, 597, 598, 599, 591, 592,
	593, 600, 601, 602, 603, 604, 0, 606, 607, 605,
	608, 609, 610, 0, 611, 612, 594, 595, 613, 614,
	0, 615, 616, 617, 618, 619, 620, 621, 727, 0,
	622, 0, 623, 624, 625, 626, 627, 629, 596, 630,
	635, 636, 728, 631, 632, 633, 634, 729, 638, 639,
	640, 0, 641, 642, 0, 637, 628, 0, 643, 644,
	645, 646, 647, 648, 0, 649, 650, 0, 651, 730,
	731, 732, 733, 0, 662, 0, 652, 654, 655, 656,
	734, 657, 735, 0, 658, 659, 660, 661, 653, 663,
	664, 0, 0, 665, 666, 668, 670, 671, 667, 669,
	672, 0, 673, 0, 0, 674, 675, 676, 736, 737,
	738, 0, 678, 677, 679, 680, 681, 739, 682, 683,
	291, 0, 0, 0, 684, 685, 740, 686, 687, 688,
	0, 0, 0, 0, 0, 0, 0, 297, 298, 300,
	299, 301, 302, 303, 304, 0, 305, 306, 0, 0,
	0, 0, 0, 689, 0, 0, 0, 307, 0, 308,
	309, 0, 310, 311, 312, 313, 314, 315, 316, 690,
	691, 0, 317, 692, 318, 693, 0, 694, 319, 320,
	321, 322, 323, 324, 0, 0, 0, 325, 695, 696,
	697, 0, 326, 327, 698, 0, 0, 0, 328, 329,
	330, 331, 332, 333, 334, 335, 0, 0, 337, 338,
	339, 336, 340, 0, 341, 0, 342, 343, 344, 345,
	346, 347, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 0, 0, 0, 0, 0, 0, 354, 355, 356,
	357, 358, 0, 359, 361, 699, 700, 0, 364, 360,
	362, 0, 365, 363, 366, 0, 367, 368, 369, 0,
	0, 370, 371, 372, 0, 373, 374, 375, 0, 376,
	377, 378, 0, 379, 380, 701, 381, 382, 383, 385,
	387, 384, 386, 388, 389, 390, 391, 702, 703, 392,
	0, 0, 0, 0, 0, 0, 0, 393, 394, 395,
	704, 0, 0, 0, 396, 0, 397, 398, 399, 0,
	400, 401, 0, 0, 402, 403, 404, 705, 706, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 0, 414,
	707, 0, 708, 415, 0, 416, 417, 418, 419, 420,
	421, 422, 709, 710, 711, 511, 0, 423, 424, 0,
	425, 426, 427, 428, 429, 0, 0, 0, 0, 430,
	431, 432, 0, 0, 512, 433, 712, 713, 0, 714,
	0, 434, 435, 0, 715, 0, 436, 437, 438, 0,
	439, 0, 0, 0, 440, 441, 442, 443, 444, 445,
	0, 446, 448, 447, 0, 449, 716, 0, 450, 451,
	0, 0, 452, 453, 454, 455, 456, 457, 460, 0,
	0, 458, 459, 461, 462, 0, 463, 464, 466, 469,
	465, 467, 468, 470, 483, 484, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 486, 0,
	485, 0, 487, 488, 489, 490, 491, 498, 500, 501,
	496, 497, 499, 502, 503, 505, 493, 494, 495, 0,
	504, 492, 0, 0, 0, 506, 507, 508, 509, 0,
	717, 510, 718, 513, 514, 0, 0, 515, 0, 516,
	0, 0, 518, 519, 520, 0, 0, 521, 522, 719,
	0, 523, 0, 720, 524, 525, 517, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 0, 535, 536, 721,
	537, 538, 539, 722, 540, 541, 542, 723, 543, 724,
	544, 545, 0, 546, 547, 548, 0, 549, 550, 551,
	552, 553, 554, 555, 556, 725, 557, 558, 560, 559,
	561, 0, 562, 0, 563, 564, 565, 0, 0, 0,
	0, 0, 566, 567, 569, 0, 570, 571, 572, 573,
	568, 574, 575, 576, 577, 578, 579, 0, 580, 581,
	582, 0, 583, 584, 585, 586, 587, 726, 588, 0,
	589, 590, 597, 598, 599, 591, 592, 593, 600, 601,
	602, 603, 604, 0, 606, 607, 605, 608, 609, 610,
	0, 611, 612, 594, 595, 613, 614, 0, 615, 616,
	617, 618, 619, 620, 621, 727, 0, 622, 0, 623,
	624, 625, 626, 627, 629, 596, 630, 635, 636, 728,
	631, 632, 633, 634, 729, 638, 639, 640, 0, 641,
	642, 0, 637, 628, 0, 643, 644, 645, 646, 647,
	648, 0, 649, 650, 0, 651, 730, 731, 732, 733,
	0, 662, 0, 652, 654, 655, 656, 734, 657, 735,
	0, 658, 659, 660, 661, 653, 663, 664, 0, 0,
	665, 666, 668, 670, 671, 667, 669, 672, 0, 673,
	0, 0, 674, 675, 676, 736, 737, 738, 0, 678,
	677, 679, 680, 681, 739, 682, 683, 291, 0, 0,
	0, 684, 685, 740, 686, 687, 688, 0, 0, 0,
	0, 0, 0, 0, 297, 298, 300, 299, 301, 302,
	303, 304, 0, 305, 306, 0, 0, 0, 0, 0,
	689, 0, 0, 0, 307, 0, 308, 309, 0, 310,
	311, 312, 313, 314, 315, 316, 690, 691, 0, 317,
	692, 318, 693, 0, 694, 319, 320, 321, 322, 323,
	324, 0, 0, 0, 325, 695, 696, 697, 0, 326,
	327, 698, 0, 0, 0, 328, 329, 330, 331, 332,
	333, 334, 335, 0, 0, 337, 338, 339, 336, 340,
	0, 341, 0, 342, 343, 344, 345, 346, 347, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 0, 0,
	0, 0, 0, 0, 354, 355, 356, 357, 358, 0,
	359, 361, 699, 700, 0, 364, 360, 362, 0, 365,
	363, 366, 0, 367, 368, 369, 0, 0, 370, 371,
	372, 0, 373, 374, 375, 0, 376, 377, 378, 0,
	379, 380, 701, 381, 382, 383, 385, 387, 384, 386,
	388, 389, 390, 391, 702, 703, 392, 0, 0, 0,
	0, 0, 0, 0, 393, 394, 395, 704, 0, 0,
	0, 396, 0, 397, 398, 399, 0, 400, 401, 0,
	0, 402, 403, 404, 705, 706, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 0, 414, 707, 0, 708,
	415, 0, 416, 417, 418, 419, 420, 421, 422, 3904,
	710, 711, 511, 0, 423, 424, 0, 425, 426, 427,
	428, 429, 0, 0, 0, 0, 430, 431, 432, 0,
	0, 512, 433, 712, 713, 0, 714, 0, 434, 435,
	0, 715, 0, 436, 437, 438, 0, 439, 0, 0,
	0, 440, 441, 442, 443, 444, 445, 0, 446, 448,
	447, 0, 449, 716, 0, 450, 451, 0, 0, 452,
	453, 454, 455, 456, 457, 460, 0, 0, 458, 459,
	461, 462, 0, 463, 464, 466, 469, 465, 467, 468,
	470, 483, 484, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 486, 0, 485, 0, 487,
	488, 489, 490, 491, 498, 500, 501, 496, 497, 499,
	502, 503, 505, 493, 494, 495, 0, 504, 492, 0,
	0, 0, 506, 507, 508, 509, 0, 717, 510, 718,
	513, 514, 0, 0, 515, 0, 516, 0, 0, 518,
	519, 520, 0, 0, 521, 522, 719, 0, 523, 0,
	720, 524, 525, 517, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 0, 535, 536, 721, 537, 538, 539,
	722, 540, 541, 542, 723, 543, 724, 544, 545, 0,
	546, 547, 548, 0, 549, 550, 551, 552, 553, 554,
	555, 556, 725, 557, 558, 560, 559, 561, 0, 562,
	0, 563, 564, 565, 0, 0, 0, 0, 0, 566,
	567, 569, 0, 570, 571, 572, 573, 568, 574, 575,
	576, 577, 578, 579, 0, 580, 581, 582, 0, 583,
	584, 585, 586, 587, 726, 588, 0, 589, 590, 597,
	598, 599, 591, 592, 593, 600, 601, 602, 603, 604,
	0, 606, 607, 605, 608, 609, 610, 0, 611, 612,
	594, 595, 613, 614, 0, 615, 616, 617, 618, 619,
	620, 621, 727, 0, 622, 0, 623, 624, 625, 626,
	627, 629, 596, 630, 635, 636, 728, 631, 632, 633,
	634, 729, 638, 639, 640, 0, 641, 642, 0, 637,
	628, 0, 643, 644, 645, 646, 647, 648, 0, 649,
	650, 0, 651, 730, 731, 732, 733, 0, 662, 0,
	652, 654, 655, 656, 734, 657, 735, 0, 658, 659,
	660, 661, 653, 663, 664, 0, 0, 665, 666, 668,
	670, 671, 667, 669, 672, 0, 673, 0, 0, 674,
	675, 676, 736, 737, 738, 0, 678, 677, 679, 680,
	681, 739, 682, 683, 291, 0, 0, 0, 684, 685,
	740, 686, 687, 688, 0, 0, 0, 0, 0, 0,
	0, 297, 298, 300, 299, 301, 302, 303, 304, 0,
	305, 306, 0, 0, 0, 0, 0, 689, 0, 0,
	0, 307, 0, 308, 309, 0, 310, 311, 312, 313,
	314, 315, 316, 690, 691, 0, 317, 692, 318, 693,
	0, 694, 319, 320, 321, 322, 323, 324, 0, 0,
	0, 325, 695, 696, 697, 0, 326, 327, 698, 0,
	0, 0, 328, 329, 330, 331, 332, 333, 334, 335,
	0, 0, 337, 338, 339, 336, 340, 0, 341, 0,
	342, 343, 344, 345, 346, 347, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 0, 0, 0, 0, 0,
	0, 354, 355, 356, 357, 358, 0, 359, 361, 699,
	700, 0, 364, 360, 362, 0, 365, 363, 366, 0,
	367, 368, 369, 0, 0, 370, 371, 372, 0, 373,
	374, 375, 0, 376, 377, 378, 0, 379, 380, 701,
	381, 382, 383, 385, 387, 384, 386, 388, 389, 390,
	391, 702, 703, 392, 0, 0, 0, 0, 0, 0,
	0, 393, 394, 395, 704, 0, 0, 0, 396, 0,
	397, 398, 399, 0, 400, 401, 0, 0, 402, 403,
	404, 705, 706, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 0, 414, 707, 0, 708, 415, 0, 416,
	417, 418, 419, 420, 421, 422, 709, 710, 711, 511,
	0, 423, 424, 0, 425, 426, 427, 428, 429, 0,
	0, 0, 0, 430, 431, 432, 0, 0, 512, 433,
	712, 713, 0, 714, 0, 434, 435, 0, 715, 0,
	436, 437, 438, 0, 439, 0, 0, 0, 440, 441,
	442, 443, 444, 445, 0, 446, 448, 447, 0, 449,
	716, 0, 450, 451, 0, 0, 452, 453, 454, 455,
	456, 457, 460, 0, 0, 458, 459, 461, 462, 0,
	463, 464, 466, 469, 465, 467, 468, 470, 483, 484,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 486, 0, 485, 0, 487, 488, 489, 490,
	491, 498, 500, 501, 496, 497, 499, 502, 503, 505,
	493, 494, 495, 0, 504, 492, 0, 0, 0, 506,
	507, 508, 509, 0, 717, 510, 718, 513, 514, 0,
	0, 515, 0, 516, 0, 0, 518, 519, 520, 0,
	0, 521, 522, 719, 0, 523, 0, 720, 524, 525,
	517, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	0, 535, 536, 721, 537, 538, 539, 722, 540, 541,
	542, 723, 543, 724, 544, 545, 0, 546, 547, 548,
	0, 549, 550, 551, 552, 553, 554, 555, 556, 725,
	557, 558, 560, 559, 561, 0, 562, 0, 563, 564,
	565, 0, 0, 0, 0, 0, 566, 567, 569, 0,
	570, 571, 572, 573, 568, 574, 575, 576, 577, 578,
	579, 0, 580, 581, 582, 0, 834, 584, 585, 586,
	587, 726, 588, 0, 589, 590, 597, 598, 599, 591,
	592, 593, 833, 601, 602, 603, 604, 0, 606, 607,
	605, 608, 609, 610, 0, 611, 612, 594, 595, 613,
	614, 0, 615, 616, 617, 618, 619, 620, 621, 727,
	0, 622, 0, 623, 624, 625, 626, 627, 629, 596,
	630, 635, 636, 728, 631, 632, 633, 634, 729, 638,
	639, 640, 0, 641, 642, 0, 637, 628, 0, 643,
	644, 645, 646, 647, 648, 0, 649, 650, 0, 651,
	831, 731, 732, 733, 0, 662, 0, 652, 654, 655,
	656, 734, 657, 735, 0, 658, 659, 660, 661, 653,
	663, 664, 0, 0, 665, 666, 668, 670, 671, 667,
	669, 672, 0, 673, 0, 0, 674, 675, 676, 736,
	737, 738, 0, 678, 677, 679, 680, 681, 739, 682,
	683, 291, 0, 0, 0, 684, 685, 740, 686, 687,
	688, 0, 0, 0, 0, 0, 0, 0, 297, 298,
	300, 299, 301, 302, 303, 304, 0, 305, 306, 0,
	0, 0, 0, 0, 689, 0, 0, 0, 307, 0,
	308, 309, 0, 310, 311, 312, 313, 314, 315, 316,
	690, 691, 0, 317, 692, 318, 693, 0, 694, 319,
	320, 321, 322, 323, 324, 0, 0, 0, 325, 695,
	696, 697, 0, 326, 327, 698, 0, 0, 0, 328,
	329, 330, 331, 332, 333, 334, 335, 0, 0, 337,
	338, 339, 336, 340, 0, 341, 0, 342, 343, 344,
	345, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 0, 0, 0, 0, 0, 0, 354, 355,
	356, 357, 358, 0, 359, 361, 699, 700, 0, 364,
	360, 362, 0, 365, 363, 366, 0, 367, 368, 369,
	0, 0, 370, 371, 372, 0, 373, 374, 375, 0,
	376, 377, 378, 0, 379, 380, 701, 381, 382, 383,
	385, 387, 384, 386, 388, 389, 390, 391, 702, 703,
	392, 0, 0, 0, 0, 0, 0, 0, 393, 394,
	395, 704, 0, 0, 0, 396, 0, 397, 398, 399,
	0, 400, 401, 0, 0, 402, 403, 404, 705, 706,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 0,
	414, 707, 0, 708, 415, 0, 416, 417, 418, 419,
	420, 421, 422, 3811, 710, 711, 511, 0, 423, 424,
	0, 425, 426, 427, 428, 429, 0, 0, 0, 0,
	430, 431, 432, 0, 0, 512, 433, 712, 713, 0,
	714, 0, 434, 435, 0, 715, 0, 436, 437, 438,
	0, 439, 0, 0, 0, 440, 441, 442, 443, 444,
	445, 0, 446, 448, 447, 0, 449, 716, 0, 450,
	451, 0, 0, 452, 453, 454, 455, 456, 457, 460,
	0, 0, 458, 459, 461, 462, 0, 463, 464, 466,
	469, 465, 467, 468, 470, 483, 484, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 486,
	0, 485, 0, 487, 488, 489, 490, 491, 498, 500,
	501, 496, 497, 499, 502, 503, 505, 493, 494, 495,
	0, 504, 492, 0, 0, 0, 506, 507, 508, 509,
	0, 717, 510, 718, 513, 514, 0, 0, 515, 0,
	516, 0, 0, 518, 519, 520, 0, 0, 521, 522,
	719, 0, 523, 0, 720, 524, 525, 517, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 0, 535, 536,
	721, 537, 538, 539, 722, 540, 541, 542, 723, 543,
	724, 544, 545, 0, 546, 547, 548, 0, 549, 550,
	551, 552, 553, 554, 555, 556, 725, 557, 558, 560,
	559, 561, 0, 562, 0, 563, 564, 565, 0, 0,
	0, 0, 0, 566, 567, 569, 0, 570, 571, 572,
	573, 568, 574, 575, 576, 577, 578, 579, 0, 580,
	581, 582, 0, 583, 584, 585, 586, 587, 726, 588,
	0, 589, 590, 597, 598, 599, 591, 592, 593, 600,
	601, 602, 603, 604, 0, 606, 607, 605, 608, 609,
	610, 0, 611, 612, 594, 595, 613, 614, 0, 615,
	616, 617, 618, 619, 620, 621, 727, 0, 622, 0,
	623, 624, 625, 626, 627, 629, 596, 630, 635, 636,
	728, 631, 632, 633, 634, 729, 638, 639, 640, 0,
	641, 642, 0, 637, 628, 0, 643, 644, 645, 646,
	647, 648, 0, 649, 650, 0, 651, 730, 731, 732,
	733, 0, 662, 0, 652, 654, 655, 656, 734, 657,
	735, 0, 658, 659, 660, 661, 653, 663, 664, 0,
	0, 665, 666, 668, 670, 671, 667, 669, 672, 0,
	673, 0, 0, 674, 675, 676, 736, 737, 738, 0,
	678, 677, 679, 680, 681, 739, 682, 683, 291, 0,
	0, 0, 684, 685, 740, 686, 687, 688, 0, 0,
	0, 0, 0, 0, 0, 297, 298, 300, 299, 301,
	302, 303, 304, 0, 305, 306, 0, 0, 0, 0,
	0, 689, 0, 0, 0, 307, 0, 308, 309, 0,
	310, 311, 312, 313, 314, 315, 316, 690, 691, 0,
	317, 692, 318, 693, 0, 694, 319, 320, 321, 322,
	323, 324, 0, 0, 0, 325, 695, 696, 697, 0,
	326, 327, 698, 0, 0, 0, 328, 329, 330, 331,
	332, 333, 334, 335, 0, 0, 337, 338, 339, 336,
	340, 0, 341, 0, 342, 343, 344, 345, 346, 347,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 0,
	0, 0, 0, 0, 0, 354, 355, 356, 357, 358,
	0, 359, 361, 699, 700, 0, 364, 360, 362, 0,
	365, 363, 366, 0, 367, 368, 369, 0, 0, 370,
	371, 372, 0, 373, 374, 375, 0, 376, 377, 378,
	0, 379, 380, 701, 381, 382, 383, 385, 387, 384,
	386, 388, 389, 390, 391, 702, 703, 392, 0, 0,
	0, 0, 0, 0, 0, 393, 394, 395, 704, 0,
	0, 0, 396, 0, 397, 398, 399, 0, 400, 401,
	0, 0, 402, 403, 404, 705, 706, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 0, 414, 707, 0,
	708, 415, 0, 416, 417, 418, 419, 420, 421, 422,
	3785, 710, 711, 511, 0, 423, 424, 0, 425, 426,
	427, 428, 429, 0, 0, 0, 0, 430, 431, 432,
	0, 0, 512, 433, 712, 713, 0, 714, 0, 434,
	435, 0, 715, 0, 436, 437, 438, 0, 439, 0,
	0, 0, 440, 441, 442, 443, 444, 445, 0, 446,
	448, 447, 0, 449, 716, 0, 450, 451, 0, 0,
	452, 453, 454, 455, 456, 457, 460, 0, 0, 458,
	459, 461, 462, 0, 463, 464, 466, 469, 465, 467,
	468, 470, 483, 484, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 486, 0, 485, 0,
	487, 488, 489, 490, 491, 498, 500, 501, 496, 497,
	499, 502, 503, 505, 493, 494, 495, 0, 504, 492,
	0, 0, 0, 506, 507, 508, 509, 0, 717, 510,
	718, 513, 514, 0, 0, 515, 0, 516, 0, 0,
	518, 519, 520, 0, 0, 521, 522, 719, 0, 523,
	0, 720, 524, 525, 517, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 0, 535, 536, 721, 537, 538,
	539, 722, 540, 541, 542, 723, 543, 724, 544, 545,
	0, 546, 547, 548, 0, 549, 550, 551, 552, 553,
	554, 555, 556, 725, 557, 558, 560, 559, 561, 0,
	562, 0, 563, 564, 565, 0, 0, 0, 0, 0,
	566, 567, 569, 0, 570, 571, 572, 573, 568, 574,
	575, 576, 577, 578, 579, 0, 580, 581, 582, 0,
	583, 584, 585, 586, 587, 726, 588, 0, 589, 590,
	597, 598, 599, 591, 592, 593, 600, 601, 602, 603,
	604, 0, 606, 607, 605, 608, 609, 610, 0, 611,
	612, 594, 595, 613, 614, 0, 615, 616, 617, 618,
	619, 620, 621, 727, 0, 622, 0, 623, 624, 625,
	626, 627, 629, 596, 630, 635, 636, 728, 631, 632,
	633, 634, 729, 638, 639, 640, 0, 641, 642, 0,
	637, 628, 0, 643, 644, 645, 646, 647, 648, 0,
	649, 650, 0, 651, 730, 731, 732, 733, 0, 662,
	0, 652, 654, 655, 656, 734, 657, 735, 0, 658,
	659, 660, 661, 653, 663, 664, 0, 0, 665, 666,
	668, 670, 671, 667, 669, 672, 0, 673, 0, 0,
	674, 675, 676, 736, 737, 738, 0, 678, 677, 679,
	680, 681, 739, 682, 683, 291, 0, 0, 0, 684,
	685, 740, 686, 687, 688, 0, 0, 0, 0, 0,
	0, 0, 297, 298, 300, 299, 301, 302, 303, 304,
	0, 305, 306, 0, 0, 0, 0, 0, 689, 0,
	0, 0, 307, 0, 308, 309, 0, 310, 311, 312,
	313, 314, 315, 316, 690, 691, 0, 317, 692, 318,
	693, 0, 694, 319, 320, 321, 322, 323, 324, 0,
	0, 0, 325, 695, 696, 697, 0, 326, 327, 698,
	0, 0, 0, 328, 329, 330, 331, 332, 333, 334,
	335, 0, 0, 337, 338, 339, 336, 340, 0, 341,
	0, 342, 343, 344, 345, 346, 347, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 0, 0, 0, 0,
	0, 0, 354, 355, 356, 357, 358, 0, 359, 361,
	699, 700, 0, 364, 360, 362, 0, 365, 363, 366,
	0, 367, 368, 369, 0, 0, 370, 371, 372, 0,
	373, 374, 375, 0, 376, 377, 378, 0, 379, 380,
	701, 381, 382, 383, 385, 387, 384, 386, 388, 389,
	390, 391, 702, 703, 392, 0, 0, 0, 0, 0,
	0, 0, 393, 394, 395, 704, 0, 0, 0, 396,
	0, 397, 398, 399, 0, 400, 401, 0, 0, 402,
	403, 404, 705, 706, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 0, 414, 707, 0, 708, 415, 0,
	416, 417, 418, 419, 420, 421, 422, 3781, 710, 711,
	511, 0, 423, 424, 0, 425, 426, 427, 428, 429,
	0, 0, 0, 0, 430, 431, 432, 0, 0, 512,
	433, 712, 713, 0, 714, 0, 434, 435, 0, 715,
	0, 436, 437, 438, 0, 439, 0, 0, 0, 440,
	441, 442, 443, 444, 445, 0, 446, 448, 447, 0,
	449, 716, 0, 450, 451, 0, 0, 452, 453, 454,
	455, 456, 457, 460, 0, 0, 458, 459, 461, 462,
	0, 463, 464, 466, 469, 465, 467, 468, 470, 483,
	484, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 486, 0, 485, 0, 487, 488, 489,
	490, 491, 498, 500, 501, 496, 497, 499, 502, 503,
	505, 493, 494, 495, 0, 504, 492, 0, 0, 0,
	506, 507, 508, 509, 0, 717, 510, 718, 513, 514,
	0, 0, 515, 0, 516, 0, 0, 518, 519, 520,
	0, 0, 521, 522, 719, 0, 523, 0, 720, 524,
	525, 517, 526, 527, 528, 529, 530, 531, 532, 533,
	534, 0, 535, 536, 721, 537, 538, 539, 722, 540,
	541, 542, 723, 543, 724, 544, 545, 0, 546, 547,
	548, 0, 549, 550, 551, 552, 553, 554, 555, 556,
	725, 557, 558, 560, 559, 561, 0, 562, 0, 563,
	564, 565, 0, 0, 0, 0, 0, 566, 567, 569,
	0, 570, 571, 572, 573, 568, 574, 575, 576, 577,
	578, 579, 0, 580, 581, 582, 0, 583, 584, 585,
	586, 587, 726, 588, 0, 589, 590, 597, 598, 599,
	591, 592, 593, 600, 601, 602, 603, 604, 0, 606,
	607, 605, 608, 609, 610, 0, 611, 612, 594, 595,
	613, 614, 0, 615, 616, 617, 618, 619, 620, 621,
	727, 0, 622, 0, 623, 624, 625, 626, 627, 629,
	596, 630, 635, 636, 728, 631, 632, 633, 634, 729,
	638, 639, 640, 0, 641, 642, 0, 637, 628, 0,
	643, 644, 645, 646, 647, 648, 0, 649, 650, 0,
	651, 730, 731, 732, 733, 0, 662, 0, 652, 654,
	655, 656, 734, 657, 735, 0, 658, 659, 660, 661,
	653, 663, 664, 0, 0, 665, 666, 668, 670, 671,
	667, 669, 672, 0, 673, 0, 0, 674, 675, 676,
	736, 737, 738, 0, 678, 677, 679, 680, 681, 739,
	682, 683, 291, 0, 0, 0, 684, 685, 740, 686,
	687, 688, 0, 0, 0, 0, 0, 0, 0, 297,
	298, 300, 299, 301, 302, 303, 304, 0, 305, 306,
	0, 0, 0, 0, 0, 689, 0, 0, 0, 307,
	0, 308, 309, 0, 310, 311, 312, 313, 314, 315,
	316, 690, 691, 0, 317, 692, 318, 693, 0, 694,
	319, 320, 321, 322, 323, 324, 0, 0, 0, 325,
	695, 696, 697, 0, 326, 327, 698, 0, 0, 0,
	328, 329, 330, 331, 332, 333, 334, 335, 0, 0,
	337, 338, 339, 336, 340, 0, 341, 0, 342, 343,
	344, 345, 346, 347, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 0, 0, 0, 0, 0, 0, 354,
	355, 356, 357, 358, 0, 359, 361, 699, 700, 0,
	364, 360, 362, 0, 365, 363, 366, 0, 367, 368,
	369, 0, 0, 370, 371, 372, 0, 373, 374, 375,
	0, 376, 377, 378, 0, 379, 380, 701, 381, 382,
	383, 385, 387, 384, 386, 388, 389, 390, 391, 702,
	703, 392, 0, 0, 0, 0, 0, 0, 0, 393,
	394, 395, 704, 0, 0, 0, 396, 0, 397, 398,
	399, 0, 400, 401, 0, 0, 402, 403, 404, 705,
	706, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	0, 414, 707, 0, 708, 415, 0, 416, 417, 418,
	419, 420, 421, 422, 3732, 710, 711, 511, 0, 423,
	424, 0, 425, 426, 427, 428, 429, 0, 0, 0,
	0, 430, 431, 432, 0, 0, 512, 433, 712, 713,
	0, 714, 0, 434, 435, 0, 715, 0, 436, 437,
	438, 0, 439, 0, 0, 0, 440, 441, 442, 443,
	444, 445, 0, 446, 448, 447, 0, 449, 716, 0,
	450, 451, 0, 0, 452, 453, 454, 455, 456, 457,
	460, 0, 0, 458, 459, 461, 462, 0, 463, 464,
	466, 469, 465, 467, 468, 470, 483, 484, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	486, 0, 485, 0, 487, 488, 489, 490, 491, 498,
	500, 501, 496, 497, 499, 502, 503, 505, 493, 494,
	495, 0, 504, 492, 0, 0, 0, 506, 507, 508,
	509, 0, 717, 510, 718, 513, 514, 0, 0, 515,
	0, 516, 0, 0, 518, 519, 520, 0, 0, 521,
	522, 719, 0, 523, 0, 720, 524, 525, 517, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 0, 535,
	536, 721, 537, 538, 539, 722, 540, 541, 542, 723,
	543, 724, 544, 545, 0, 546, 547, 548, 0, 549,
	550, 551, 552, 553, 554, 555, 556, 725, 557, 558,
	560, 559, 561, 0, 562, 0, 563, 564, 565, 0,
	0, 0, 0, 0, 566, 567, 569, 0, 570, 571,
	572, 573, 568, 574, 575, 576, 577, 578, 579, 0,
	580, 581, 582, 0, 583, 584, 585, 586, 587, 726,
	588, 0, 589, 590, 597, 598, 599, 591, 592, 593,
	600, 601, 602, 603, 604, 0, 606, 607, 605, 608,
	609, 610, 0, 611, 612, 594, 595, 613, 614, 0,
	615, 616, 617, 618, 619, 620, 621, 727, 0, 622,
	0, 623, 624, 625, 626, 627, 629, 596, 630, 635,
	636, 728, 631, 632, 633, 634, 729, 638, 639, 640,
	0, 641, 642, 0, 637, 628, 0, 643, 644, 645,
	646, 647, 648, 0, 649, 650, 0, 651, 730, 731,
	732, 733, 0, 662, 0, 652, 654, 655, 656, 734,
	657, 735, 0, 658, 659, 660, 661, 653, 663, 664,
	0, 0, 665, 666, 668, 670, 671, 667, 669, 672,
	0, 673, 0, 0, 674, 675, 676, 736, 737, 738,
	0, 678, 677, 679, 680, 681, 739, 682, 683, 291,
	0, 0, 0, 684, 685, 740, 686, 687, 688, 0,
	0, 0, 0, 0, 0, 0, 297, 298, 300, 299,
	301, 302, 303, 304, 0, 305, 306, 0, 0, 0,
	0, 0, 689, 0, 0, 0, 307, 0, 308, 309,
	0, 310, 311, 312, 313, 314, 315, 316, 690, 691,
	0, 317, 692, 318, 693, 0, 694, 319, 320, 321,
	322, 323, 324, 0, 0, 0, 325, 695, 696, 697,
	0, 326, 327, 698, 0, 0, 0, 328, 329, 330,
	331, 332, 333, 334, 335, 0, 0, 337, 338, 339,
	336, 340, 0, 341, 0, 342, 343, 344, 345, 346,
	347, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	0, 0, 0, 0, 0, 0, 354, 355, 356, 357,
	358, 0, 359, 361, 699, 700, 0, 364, 360, 362,
	0, 365, 363, 366, 0, 367, 368, 369, 0, 0,
	370, 371, 372, 0, 373, 374, 375, 0, 376, 377,
	378, 0, 379, 380, 701, 381, 382, 383, 385, 387,
	384, 386, 388, 389, 390, 391, 702, 703, 392, 0,
	0, 0, 0, 0, 0, 0, 393, 394, 395, 704,
	0, 0, 0, 396, 0, 397, 398, 399, 0, 400,
	401, 0, 0, 402, 403, 404, 705, 706, 405, 406,
	407, 408, 409, 410, 411, 412, 413, 0, 414, 707,
	0, 708, 415, 0, 416, 417, 418, 419, 420, 421,
	422, 3730, 710, 711, 511, 0, 423, 424, 0, 425,
	426, 427, 428, 429, 0, 0, 0, 0, 430, 431,
	432, 0, 0, 512, 433, 712, 713, 0, 714, 0,
	434, 435, 0, 715, 0, 436, 437, 438, 0, 439,
	0, 0, 0, 440, 441, 442, 443, 444, 445, 0,
	446, 448, 447, 0, 449, 716, 0, 450, 451, 0,
	0, 452, 453, 454, 455, 456, 457, 460, 0, 0,
	458, 459, 461, 462, 0, 463, 464, 466, 469, 465,
	467, 468, 470, 483, 484, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 486, 0, 485,
	0, 487, 488, 489, 490, 491, 498, 500, 501, 496,
	497, 499, 502, 503, 505, 493, 494, 495, 0, 504,
	492, 0, 0, 0, 506, 507, 508, 509, 0, 717,
	510, 718, 513, 514, 0, 0, 515, 0, 516, 0,
	0, 518, 519, 520, 0, 0, 521, 522, 719, 0,
	523, 0, 720, 524, 525, 517, 526, 527, 528, 529,
	530, 531, 532, 533, 534, 0, 535, 536, 721, 537,
	538, 539, 722, 540, 541, 542, 723, 543, 724, 544,
	545, 0, 546, 547, 548, 0, 549, 550, 551, 552,
	553, 554, 555, 556, 725, 557, 558, 560, 559, 561,
	0, 562, 0, 563, 564, 565, 0, 0, 0, 0,
	0, 566, 567, 569, 0, 570, 571, 572, 573, 568,
	574, 575, 576, 577, 578, 579, 0, 580, 581, 582,
	0, 583, 584, 585, 586, 587, 726, 588, 0, 589,
	590, 597, 598, 599, 591, 592, 593, 600, 601, 602,
	603, 604, 0, 606, 607, 605, 608, 609, 610, 0,
	611, 612, 594, 595, 613, 614, 0, 615, 616, 617,
	618, 619, 620, 621, 727, 0, 622, 0, 623, 624,
	625, 626, 627, 629, 596, 630, 635, 636, 728, 631,
	632, 633, 634, 729, 638, 639, 640, 0, 641, 642,
	0, 637, 628, 0, 643, 644, 645, 646, 647, 648,
	0, 649, 650, 0, 651, 730, 731, 732, 733, 0,
	662, 0, 652, 654, 655, 656, 734, 657, 735, 0,
	658, 659, 660, 661, 653, 663, 664, 0, 0, 665,
	666, 668, 670, 671, 667, 669, 672, 0, 673, 0,
	0, 674, 675, 676, 736, 737, 738, 0, 678, 677,
	679, 680, 681, 739, 682, 683, 291, 0, 0, 0,
	684, 685, 740, 686, 687, 688, 0, 0, 0, 0,
	0, 0, 0, 297, 298, 300, 299, 301, 302, 303,
	304, 0, 305, 306, 0, 0, 0, 0, 0, 689,
	0, 0, 0, 307, 0, 308, 309, 0, 310, 311,
	312, 313, 314, 315, 316, 690, 691, 0, 317, 692,
	318, 693, 0, 694, 319, 320, 321, 322, 323, 324,
	0, 0, 0, 325, 695, 696, 697, 0, 326, 327,
	698, 0, 0, 0, 328, 329, 330, 331, 332, 333,
	334, 335, 0, 0, 337, 338, 339, 336, 340, 0,
	341, 0, 342, 343, 344, 345, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 0, 0, 0,
	0, 0, 0, 354, 355, 356, 357, 358, 0, 359,
	361, 699, 700, 0, 364, 360, 362, 0, 365, 363,
	366, 0, 367, 368, 369, 0, 0, 370, 371, 372,
	0, 373, 374, 375, 0, 376, 377, 378, 0, 379,
	380, 701, 381, 382, 383, 385, 387, 384, 386, 388,
	389, 390, 391, 702, 703, 392, 0, 0, 0, 0,
	0, 0, 0, 393, 394, 395, 704, 0, 0, 0,
	396, 0, 397, 398, 399, 0, 400, 401, 0, 0,
	402, 403, 404, 705, 706, 405, 406, 407, 408, 409,
	410, 411, 412, 413, 0, 414, 707, 0, 708, 415,
	0, 416, 417, 418, 419, 420, 421, 422, 3718, 710,
	711, 511, 0, 423, 424, 0, 425, 426, 427, 428,
	429, 0, 0, 0, 0, 430, 431, 432, 0, 0,
	512, 433, 712, 713, 0, 714, 0, 434, 435, 0,
	715, 0, 436, 437, 438, 0, 439, 0, 0, 0,
	440, 441, 442, 443, 444, 445, 0, 446, 448, 447,
	0, 449, 716, 0, 450, 451, 0, 0, 452, 453,
	454, 455, 456, 457, 460, 0, 0, 458, 459, 461,
	462, 0, 463, 464, 466, 469, 465, 467, 468, 470,
	483, 484, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 486, 0, 485, 0, 487, 488,
	489, 490, 491, 498, 500, 501, 496, 497, 499, 502,
	503, 505, 493, 494, 495, 0, 504, 492, 0, 0,
	0, 506, 507, 508, 509, 0, 717, 510, 718, 513,
	514, 0, 0, 515, 0, 516, 0, 0, 518, 519,
	520, 0, 0, 521, 522, 719, 0, 523, 0, 720,
	524, 525, 517, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 0, 535, 536, 721, 537, 538, 539, 722,
	540, 541, 542, 723, 543, 724, 544, 545, 0, 546,
	547, 548, 0, 549, 550, 551, 552, 553, 554, 555,
	556, 725, 557, 558, 560, 559, 561, 0, 562, 0,
	563, 564, 565, 0, 0, 0, 0, 0, 566, 567,
	569, 0, 570, 571, 572, 573, 568, 574, 575, 576,
	577, 578, 579, 0, 580, 581, 582, 0, 583, 584,
	585, 586, 587, 726, 588, 0, 589, 590, 597, 598,
	599, 591, 592, 593, 600, 601, 602, 603, 604, 0,
	606, 607, 605, 608, 609, 610, 0, 611, 612, 594,
	595, 613, 614, 0, 615, 616, 617, 618, 619, 620,
	621, 727, 0, 622, 0, 623, 624, 625, 626, 627,
	629, 596, 630, 635, 636, 728, 631, 632, 633, 634,
	729, 638, 639, 640, 0, 641, 642, 0, 637, 628,
	0, 643, 644, 645, 646, 647, 648, 0, 649, 650,
	0, 651, 730, 731, 732, 733, 0, 662, 0, 652,
	654, 655, 656, 734, 657, 735, 0, 658, 659, 660,
	661, 653, 663, 664, 0, 0, 665, 666, 668, 670,
	671, 667, 669, 672, 0, 673, 0, 0, 674, 675,
	676, 736, 737, 738, 0, 678, 677, 679, 680, 681,
	739, 682, 683, 291, 0, 0, 0, 684, 685, 740,
	686, 687, 688, 0, 0, 0, 0, 0, 0, 0,
	297, 298, 300, 299, 301, 302, 303, 304, 0, 305,
	306, 0, 0, 0, 0, 0, 689, 0, 0, 0,
	307, 0, 308, 309, 0, 310, 311, 312, 313, 314,
	315, 316, 690, 691, 0, 317, 692, 318, 693, 0,
	694, 319, 320, 321, 322, 323, 324, 0, 0, 0,
	325, 695, 696, 697, 0, 326, 327, 698, 0, 0,
	0, 328, 329, 330, 331, 332, 333, 334, 335, 0,
	0, 337, 338, 339, 336, 340, 0, 341, 0, 342,
	343, 344, 345, 346, 347, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 0, 0, 0, 0, 0, 0,
	354, 355, 356, 357, 358, 0, 359, 361, 699, 700,
	0, 364, 360, 362, 0, 365, 363, 366, 0, 367,
	368, 369, 0, 0, 370, 371, 372, 0, 373, 374,
	375, 0, 376, 377, 378, 0, 379, 380, 701, 381,
	382, 383, 385, 387, 384, 386, 388, 389, 390, 391,
	702, 703, 392, 0, 0, 0, 0, 0, 0, 0,
	393, 394, 395, 704, 0, 0, 0, 396, 0, 397,
	398, 399, 0, 400, 401, 0, 0, 402, 403, 404,
	705, 706, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 0, 414, 707, 0, 708, 415, 0, 416, 417,
	418, 419, 420, 421, 422, 3715, 710, 711, 511, 0,
	423, 424, 0, 425, 426, 427, 428, 429, 0, 0,
	0, 0, 430, 431, 432, 0, 0, 512, 433, 712,
	713, 0, 714, 0, 434, 435, 0, 715, 0, 436,
	437, 438, 0, 439, 0, 0, 0, 440, 441, 442,
	443, 444, 445, 0, 446, 448, 447, 0, 449, 716,
	0, 450, 451, 0, 0, 452, 453, 454, 455, 456,
	457, 460, 0, 0, 458, 459, 461, 462, 0, 463,
	464, 466, 469, 465, 467, 468, 470, 483, 484, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 486, 0, 485, 0, 487, 488, 489, 490, 491,
	498, 500, 501, 496, 497, 499, 502, 503, 505, 493,
	494, 495, 0, 504, 492, 0, 0, 0, 506, 507,
	508, 509, 0, 717, 510, 718, 513, 514, 0, 0,
	515, 0, 516, 0, 0, 518, 519, 520, 0, 0,
	521, 522, 719, 0, 523, 0, 720, 524, 525, 517,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 0,
	535, 536, 721, 537, 538, 539, 722, 540, 541, 542,
	723, 543, 724, 544, 545, 0, 546, 547, 548, 0,
	549, 550, 551, 552, 553, 554, 555, 556, 725, 557,
	558, 560, 559, 561, 0, 562, 0, 563, 564, 565,
	0, 0, 0, 0, 0, 566, 567, 569, 0, 570,
	571, 572, 573, 568, 574, 575, 576, 577, 578, 579,
	0, 580, 581, 582, 0, 583, 584, 585, 586, 587,
	726, 588, 0, 589, 590, 597, 598, 599, 591, 592,
	593, 600, 601, 602, 603, 604, 0, 606, 607, 605,
	608, 609, 610, 0, 611, 612, 594, 595, 613, 614,
	0, 615, 616, 617, 618, 619, 620, 621, 727, 0,
	622, 0, 623, 624, 625, 626, 627, 629, 596, 630,
	635, 636, 728, 631, 632, 633, 634, 729, 638, 639,
	640, 0, 641, 642, 0, 637, 628, 0, 643, 644,
	645, 646, 647, 648, 0, 649, 650, 0, 651, 730,
	731, 732, 733, 0, 662, 0, 652, 654, 655, 656,
	734, 657, 735, 0, 658, 659, 660, 661, 653, 663,
	664, 0, 0, 665, 666, 668, 670, 671, 667, 669,
	672, 0, 673, 0, 0, 674, 675, 676, 736, 737,
	738, 0, 678, 677, 679, 680, 681, 739, 682, 683,
	291, 0, 0, 0, 684, 685, 740, 686, 687, 688,
	0, 0, 0, 0, 0, 0, 0, 297, 298, 300,
	299, 301, 302, 303, 304, 0, 305, 306, 0, 0,
	0, 0, 0, 689, 0, 0, 0, 307, 0, 308,
	309, 0, 310, 311, 312, 313, 314, 315, 316, 690,
	691, 0, 317, 692, 318, 693, 0, 694, 319, 320,
	321, 322, 323, 324, 0, 0, 0, 325, 695, 696,
	697, 0, 326, 327, 698, 0, 0, 0, 328, 329,
	330, 331, 332, 333, 334, 335, 0, 0, 337, 338,
	339, 336, 340, 0, 341, 0, 342, 343, 344, 345,
	346, 347, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 0, 0, 0, 0, 0, 0, 354, 355, 356,
	357, 358, 0, 359, 361, 699, 700, 0, 364, 360,
	362, 0, 365, 363, 366, 0, 367, 368, 369, 0,
	0, 370, 371, 372, 0, 373, 374, 375, 0, 376,
	377, 378, 0, 379, 380, 701, 381, 382, 383, 385,
	387, 384, 386, 388, 389, 390, 391, 702, 703, 392,
	0, 0, 0, 0, 0, 0, 0, 393, 394, 395,
	704, 0, 0, 0, 396, 0, 397, 398, 399, 0,
	400, 401, 0, 0, 402, 403, 404, 705, 706, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 0, 414,
	707, 0, 708, 415, 0, 416, 417, 418, 419, 420,
	421, 422, 3303, 710, 711, 511, 0, 423, 424, 0,
	425, 426, 427, 428, 429, 0, 0, 0, 0, 430,
	431, 432, 0, 0, 512, 433, 712, 713, 0, 714,
	0, 434, 435, 0, 715, 0, 436, 437, 438, 0,
	439, 0, 0, 0, 440, 441, 442, 443, 444, 445,
	0, 446, 448, 447, 0, 449, 716, 0, 450, 451,
	0, 0, 452, 453, 454, 455, 456, 457, 460, 0,
	0, 458, 459, 461, 462, 0, 463, 464, 466, 469,
	465, 467, 468, 470, 483, 484, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 486, 0,
	485, 0, 487, 488, 489, 490, 491, 498, 500, 501,
	496, 497, 499, 502, 503, 505, 493, 494, 495, 0,
	504, 492, 0, 0, 0, 506, 507, 508, 509, 0,
	717, 510, 718, 513, 514, 0, 0, 515, 0, 516,
	0, 0, 518, 519, 520, 0, 0, 521, 522, 719,
	0, 523, 0, 720, 524, 525, 517, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 0, 535, 536, 721,
	537, 538, 539, 722, 540, 541, 542, 723, 543, 724,
	544, 545, 0, 546, 547, 548, 0, 549, 550, 551,
	552, 553, 554, 555, 556, 725, 557, 558, 560, 559,
	561, 0, 562, 0, 563, 564, 565, 0, 0, 0,
	0, 0, 566, 567, 569, 0, 570, 571, 572, 573,
	568, 574, 575, 576, 577, 578, 579, 0, 580, 581,
	582, 0, 583, 584, 585, 586, 587, 726, 588, 0,
	589, 590, 597, 598, 599, 591, 592, 593, 600, 601,
	602, 603, 604, 0, 606, 607, 605, 608, 609, 610,
	0, 611, 612, 594, 595, 613, 614, 0, 615, 616,
	617, 618, 619, 620, 621, 727, 0, 622, 0, 623,
	624, 625, 626, 627, 629, 596, 630, 635, 636, 728,
	631, 632, 633, 634, 729, 638, 639, 640, 0, 641,
	642, 0, 637, 628, 0, 643, 644, 645, 646, 647,
	648, 0, 649, 650, 0, 651, 730, 731, 732, 733,
	0, 662, 0, 652, 654, 655, 656, 734, 657, 735,
	0, 658, 659, 660, 661, 653, 663, 664, 0, 0,
	665, 666, 668, 670, 671, 667, 669, 672, 0, 673,
	0, 0, 674, 675, 676, 736, 737, 738, 0, 678,
	677, 679, 680, 681, 739, 682, 683, 291, 0, 0,
	0, 684, 685, 740, 686, 687, 688, 0, 0, 0,
	0, 0, 0, 0, 297, 298, 300, 299, 301, 302,
	303, 304, 0, 305, 306, 0, 0, 0, 0, 0,
	689, 0, 0, 0, 307, 0, 308, 309, 0, 310,
	311, 312, 313, 314, 315, 316, 690, 691, 0, 317,
	692, 318, 693, 0, 694, 319, 320, 321, 322, 323,
	324, 0, 0, 0, 325, 695, 696, 697, 0, 326,
	327, 698, 0, 0, 0, 328, 329, 330, 331, 332,
	333, 334, 335, 0, 0, 337, 338, 339, 336, 340,
	0, 341, 0, 342, 343, 344, 345, 346, 347, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 0, 0,
	0, 0, 0, 0, 354, 355, 356, 357, 358, 0,
	359, 361, 699, 700, 0, 364, 360, 362, 0, 365,
	363, 366, 0, 367, 368, 369, 0, 0, 370, 371,
	372, 0, 373, 374, 375, 0, 376, 377, 378, 0,
	379, 380, 701, 381, 382, 383, 385, 387, 384, 386,
	388, 389, 390, 391, 702, 703, 392, 0, 0, 0,
	0, 0, 0, 0, 393, 394, 395, 704, 0, 0,
	0, 396, 0, 397, 398, 399, 0, 400, 401, 0,
	0, 402, 403, 404, 705, 706, 405, 406, 407, 408,
	409, 410, 411, 412, 413, 0, 414, 707, 0, 708,
	415, 0, 416, 417, 418, 419, 420, 421, 422, 709,
	710, 711, 511, 0, 423, 424, 0, 425, 426, 427,
	428, 429, 0, 0, 0, 0, 430, 431, 432, 0,
	0, 512, 433, 712, 713, 0, 714, 0, 434, 435,
	0, 715, 0, 436, 437, 438, 0, 439, 0, 0,
	0, 440, 441, 442, 443, 444, 445, 0, 446, 448,
	447, 0, 449, 716, 0, 450, 451, 0, 0, 452,
	453, 454, 455, 456, 457, 460, 0, 0, 458, 459,
	461, 462, 0, 463, 464, 466, 469, 465, 467, 468,
	470, 483, 484, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 486, 0, 485, 0, 487,
	488, 489, 490, 491, 498, 500, 501, 496, 497, 499,
	502, 503, 505, 493, 494, 495, 0, 504, 492, 0,
	0, 0, 506, 507, 508, 509, 0, 717, 510, 718,
	513, 514, 0, 0, 515, 0, 516, 0, 0, 518,
	519, 520, 0, 0, 521, 522, 719, 0, 523, 0,
	720, 524, 525, 517, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 0, 535, 536, 721, 537, 538, 539,
	722, 540, 541, 542, 723, 543, 724, 544, 545, 0,
	546, 547, 548, 0, 549, 550, 551, 552, 553, 554,
	555, 556, 725, 557, 558, 560, 559, 561, 0, 562,
	0, 563, 564, 565, 0, 0, 0, 0, 0, 566,
	567, 569, 0, 570, 571, 572, 573, 568, 574, 575,
	576, 577, 578, 579, 0, 580, 581, 582, 0, 583,
	584, 585, 586, 587, 726, 588, 0, 589, 590, 815,
	598, 599, 591, 592, 593, 600, 601, 602, 603, 604,
	0, 606, 607, 605, 608, 609, 610, 0, 611, 612,
	594, 595, 613, 614, 0, 615, 616, 617, 618, 619,
	620, 621, 727, 0, 622, 0, 623, 624, 625, 626,
	627, 629, 596, 630, 635, 636, 728, 631, 632, 633,
	634, 729, 638, 639, 640, 0, 641, 642, 0, 637,
	628, 0, 643, 644, 645, 646, 647, 648, 0, 649,
	650, 0, 651, 730, 731, 732, 733, 0, 662, 0,
	652, 654, 655, 656, 734, 657, 735, 0, 658, 659,
	660, 661, 653, 663, 664, 0, 0, 665, 666, 668,
	670, 671, 667, 669, 672, 0, 673, 0, 0, 674,
	675, 676, 736, 737, 738, 0, 678, 677, 679, 680,
	681, 739, 682, 683, 291, 0, 0, 0, 684, 685,
	740, 686, 687, 688, 0, 0, 0, 0, 0, 0,
	0, 297, 298, 300, 299, 301, 302, 303, 304, 0,
	305, 306, 0, 0, 0, 0, 0, 689, 0, 2498,
	0, 307, 0, 308, 309, 0, 310, 311, 312, 313,
	314, 315, 316, 690, 691, 0, 317, 692, 318, 693,
	0, 694, 319, 320, 321, 322, 323, 324, 0, 0,
	0, 325, 695, 696, 697, 0, 326, 327, 698, 0,
	0, 0, 328, 329, 330, 331, 332, 333, 334, 335,
	0, 0, 337, 338, 339, 336, 340, 0, 341, 0,
	342, 343, 344, 345, 346, 347, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 0, 0, 0, 0, 0,
	0, 354, 355, 356, 357, 358, 0, 359, 361, 699,
	700, 0, 364, 360, 362, 0, 365, 363, 366, 0,
	367, 368, 369, 0, 0, 370, 371, 372, 0, 373,
	374, 375, 0, 376, 377, 378, 0, 379, 380, 701,
	381, 382, 383, 385, 387, 384, 386, 388, 389, 390,
	391, 702, 703, 392, 0, 0, 0, 0, 0, 0,
	0, 393, 394, 395, 704, 0, 0, 0, 396, 0,
	397, 398, 399, 0, 400, 401, 0, 0, 402, 403,
	404, 705, 706, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 0, 414, 707, 0, 708, 415, 0, 416,
	417, 418, 419, 420, 421, 422, 709, 710, 711, 511,
	0, 423, 424, 0, 425, 426, 427, 428, 429, 0,
	0, 0, 0, 430, 431, 432, 0, 0, 512, 433,
	712, 713, 0, 714, 0, 434, 435, 0, 715, 0,
	436, 437, 438, 0, 439, 0, 0, 0, 440, 441,
	442, 443, 444, 445, 0, 446, 448, 447, 0, 449,
	716, 0, 450, 451, 0, 0, 452, 453, 454, 455,
	456, 457, 460, 0, 0, 458, 459, 461, 462, 0,
	463, 464, 466, 469, 465, 467, 468, 470, 483, 484,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 486, 0, 485, 0, 487, 488, 489, 490,
	491, 498, 500, 501, 496, 497, 499, 502, 503, 505,
	493, 494, 495, 0, 504, 492, 0, 0, 0, 506,
	507, 508, 509, 0, 717, 510, 718, 513, 514, 0,
	0, 515, 0, 516, 0, 0, 518, 519, 520, 0,
	0, 521, 522, 719, 0, 523, 0, 720, 524, 525,
	517, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	0, 535, 536, 721, 537, 538, 539, 722, 540, 541,
	542, 723, 543, 724, 544, 545, 0, 546, 547, 548,
	0, 549, 550, 551, 552, 553, 554, 555, 556, 725,
	557, 558, 560, 559, 561, 0, 562, 0, 563, 564,
	565, 0, 0, 0, 0, 0, 566, 567, 569, 0,
	570, 571, 572, 573, 568, 574, 575, 576, 577, 578,
	579, 0, 580, 581, 582, 0, 583, 584, 585, 586,
	587, 726, 588, 0, 589, 590, 597, 598, 599, 591,
	592, 593, 600, 601, 602, 603, 604, 0, 606, 607,
	605, 608, 609, 610, 0, 0, 612, 594, 595, 613,
	614, 0, 615, 616, 617, 618, 619, 620, 621, 727,
	0, 622, 0, 623, 624, 625, 626, 627, 629, 596,
	630, 635, 636, 728, 631, 632, 633, 634, 729, 638,
	639, 640, 0, 641, 642, 0, 637, 628, 0, 643,
	644, 645, 646, 647, 648, 0, 649, 650, 0, 651,
	730, 731, 732, 733, 0, 662, 0, 652, 654, 655,
	656, 734, 657, 735, 0, 658, 659, 660, 661, 653,
	663, 664, 0, 0, 665, 666, 668, 670, 671, 667,
	669, 672, 0, 673, 0, 0, 674, 675, 676, 736,
	737, 738, 0, 678, 677, 679, 680, 681, 739, 682,
	683, 291, 0, 0, 0, 684, 685, 740, 686, 687,
	688, 0, 0, 0, 0, 0, 0, 0, 297, 298,
	300, 299, 301, 302, 303, 304, 0, 305, 306, 0,
	0, 0, 0, 0, 689, 0, 0, 0, 307, 0,
	308, 309, 0, 310, 311, 312, 313, 314, 315, 316,
	690, 691, 0, 317, 692, 318, 693, 0, 694, 319,
	320, 321, 322, 323, 324, 0, 0, 0, 325, 695,
	696, 697, 0, 326, 327, 698, 0, 0, 0, 328,
	329, 330, 331, 332, 333, 334, 335, 0, 0, 337,
	338, 339, 336, 340, 0, 341, 0, 342, 343, 344,
	345, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 0, 0, 0, 0, 0, 0, 354, 355,
	356, 357, 358, 0, 359, 361, 699, 700, 0, 364,
	360, 362, 0, 365, 363, 366, 0, 367, 368, 369,
	0, 0, 370, 371, 372, 0, 373, 374, 375, 0,
	376, 377, 378, 0, 379, 380, 701, 381, 382, 383,
	385, 387, 384, 386, 388, 389, 390, 391, 702, 703,
	392, 0, 0, 0, 0, 0, 0, 0, 393, 394,
	395, 704, 0, 0, 0, 396, 0, 397, 398, 399,
	0, 400, 401, 0, 0, 402, 403, 404, 705, 706,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 0,
	414, 707, 0, 708, 415, 0, 416, 417, 418, 419,
	420, 421, 422, 1395, 710, 711, 511, 0, 423, 424,
	0, 425, 426, 427, 428, 429, 0, 0, 0, 0,
	430, 431, 432, 0, 0, 512, 433, 712, 713, 0,
	714, 0, 434, 435, 0, 715, 0, 436, 437, 438,
	0, 439, 0, 0, 0, 440, 441, 442, 443, 444,
	445, 0, 446, 448, 447, 0, 449, 716, 0, 450,
	451, 0, 0, 452, 453, 454, 455, 456, 457, 460,
	0, 0, 458, 459, 461, 462, 0, 463, 464, 466,
	469, 465, 467, 468, 470, 483, 484, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 486,
	0, 485, 0, 487, 488, 489, 490, 491, 498, 500,
	501, 496, 497, 499, 502, 503, 505, 493, 494, 495,
	0, 504, 492, 0, 0, 0, 506, 507, 508, 509,
	0, 717, 510, 718, 513, 514, 0, 0, 515, 0,
	516, 0, 0, 518, 519, 520, 0, 0, 521, 522,
	719, 0, 523, 0, 720, 524, 525, 517, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 0, 535, 536,
	721, 537, 538, 539, 722, 540, 541, 542, 723, 543,
	724, 544, 545, 0, 546, 547, 548, 0, 549, 550,
	551, 552, 553, 554, 555, 556, 725, 557, 558, 560,
	559, 561, 0, 562, 0, 563, 564, 565, 0, 0,
	0, 0, 0, 566, 567, 569, 0, 570, 571, 572,
	573, 568, 574, 575, 576, 577, 578, 579, 0, 580,
	581, 582, 0, 583, 584, 585, 586, 587, 726, 588,
	0, 589, 590, 597, 598, 599, 591, 592, 593, 600,
	601, 602, 603, 604, 0, 606, 607, 605, 608, 609,
	610, 0, 611, 612, 594, 595, 613, 614, 0, 615,
	616, 617, 618, 619, 620, 621, 727, 0, 622, 0,
	623, 624, 625, 626, 627, 629, 596, 630, 635, 636,
	728, 631, 632, 633, 634, 729, 638, 639, 640, 0,
	641, 642, 0, 637, 628, 0, 643, 644, 645, 646,
	647, 648, 0, 649, 650, 0, 651, 730, 731, 732,
	733, 0, 662, 0, 652, 654, 655, 656, 734, 657,
	735, 0, 658, 659, 660, 661, 653, 663, 664, 0,
	0, 665, 666, 668, 670, 671, 667, 669, 672, 0,
	673, 0, 0, 674, 675, 676, 736, 737, 738, 0,
	678, 677, 679, 680, 681, 739, 682, 683, 291, 0,
	0, 0, 684, 685, 740, 686, 687, 688, 0, 0,
	0, 0, 0, 0, 0, 297, 298, 300, 299, 301,
	302, 303, 304, 0, 305, 306, 0, 0, 0, 0,
	0, 689, 0, 0, 0, 307, 0, 308, 309, 0,
	310, 311, 312, 313, 314, 315, 316, 690, 691, 0,
	317, 692, 318, 693, 0, 694, 319, 320, 321, 322,
	323, 324, 0, 0, 0, 325, 695, 696, 697, 0,
	326, 327, 698, 0, 0, 0, 328, 329, 330, 331,
	332, 333, 334, 335, 0, 0, 337, 338, 339, 336,
	340, 0, 341, 0, 342, 343, 344, 345, 346, 347,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 0,
	0, 0, 0, 0, 0, 354, 355, 356, 357, 358,
	0, 359, 361, 699, 700, 0, 364, 360, 362, 0,
	365, 363, 366, 0, 367, 368, 369, 0, 0, 370,
	371, 372, 0, 373, 374, 375, 0, 376, 377, 378,
	0, 379, 380, 701, 381, 382, 383, 385, 387, 384,
	386, 388, 389, 390, 391, 702, 703, 392, 0, 0,
	0, 0, 0, 0, 0, 393, 394, 395, 704, 0,
	0, 0, 396, 0, 397, 398, 399, 0, 400, 401,
	0, 0, 402, 403, 404, 705, 706, 405, 406, 407,
	408, 409, 410, 411, 412, 413, 0, 414, 707, 0,
	708, 415, 0, 416, 417, 418, 419, 420, 421, 422,
	709, 710, 711, 511, 0, 423, 424, 0, 425, 426,
	427, 428, 429, 0, 0, 0, 0, 430, 431, 432,
	0, 0, 512, 433, 712, 713, 0, 714, 0, 434,
	435, 0, 715, 0, 436, 437, 438, 0, 439, 0,
	0, 0, 440, 441, 442, 443, 444, 445, 0, 446,
	448, 447, 0, 449, 716, 0, 450, 451, 0, 0,
	452, 453, 454, 455, 456, 457, 460, 0, 0, 458,
	459, 461, 462, 0, 463, 464, 466, 469, 465, 467,
	468, 470, 483, 484, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 486, 0, 485, 0,
	487, 488, 489, 490, 491, 498, 500, 501, 496, 497,
	499, 502, 503, 505, 493, 494, 495, 0, 504, 492,
	0, 0, 0, 506, 507, 508, 509, 0, 717, 510,
	718, 513, 514, 0, 0, 515, 0, 516, 0, 0,
	518, 519, 520, 0, 0, 521, 522, 719, 0, 523,
	0, 720, 524, 525, 517, 526, 527, 528, 529, 530,
	531, 532, 533, 534, 0, 535, 536, 721, 537, 538,
	539, 722, 540, 541, 542, 723, 543, 724, 544, 545,
	0, 546, 547, 548, 0, 549, 550, 551, 552, 553,
	554, 555, 556, 725, 557, 558, 1321, 559, 561, 0,
	562, 0, 563, 564, 565, 0, 0, 0, 0, 0,
	566, 567, 569, 0, 570, 571, 572, 573, 568, 574,
	575, 576, 577, 578, 579, 0, 580, 581, 582, 0,
	583, 584, 585, 586, 587, 726, 588, 0, 589, 590,
	597, 598, 599, 591, 592, 593, 600, 601, 602, 603,
	604, 0, 606, 607, 605, 608, 609, 610, 0, 611,
	612, 594, 595, 613, 614, 0, 615, 616, 617, 618,
	619, 620, 621, 727, 0, 622, 0, 623, 624, 625,
	626, 627, 629, 596, 630, 635, 636, 728, 631, 632,
	633, 634, 729, 638, 639, 640, 0, 641, 642, 0,
	637, 628, 0, 643, 644, 645, 646, 647, 648, 0,
	649, 650, 0, 651, 730, 731, 732, 733, 0, 662,
	0, 652, 654, 655, 656, 734, 657, 735, 0, 658,
	659, 660, 661, 653, 663, 664, 0, 0, 665, 666,
	668, 670, 671, 667, 669, 672, 0, 673, 0, 0,
	674, 675, 676, 736, 737, 738, 0, 678, 677, 679,
	680, 681, 739, 682, 683, 291, 0, 0, 0, 684,
	685, 740, 686, 687, 688, 0, 0, 0, 0, 0,
	0, 0, 297, 298, 300, 299, 301, 302, 303, 304,
	0, 305, 306, 0, 0, 0, 0, 0, 689, 0,
	0, 0, 307, 0, 308, 309, 0, 310, 311, 312,
	313, 314, 315, 316, 690, 691, 0, 317, 692, 318,
	693, 0, 694, 319, 320, 321, 322, 323, 324, 0,
	0, 0, 325, 695, 696, 697, 0, 326, 327, 698,
	0, 0, 0, 328, 329, 330, 331, 332, 333, 334,
	335, 0, 0, 337, 338, 339, 336, 340, 0, 341,
	0, 342, 343, 344, 345, 346, 347, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 0, 0, 0, 0,
	0, 0, 354, 355, 356, 357, 358, 0, 359, 361,
	699, 700, 0, 364, 360, 362, 0, 365, 363, 366,
	0, 367, 368, 369, 0, 0, 370, 371, 372, 0,
	373, 374, 375, 0, 376, 377, 378, 0, 379, 380,
	701, 381, 382, 383, 385, 387, 384, 386, 388, 389,
	390, 391, 702, 703, 392, 0, 0, 0, 0, 0,
	0, 0, 393, 394, 395, 704, 0, 0, 0, 396,
	0, 397, 398, 399, 0, 400, 401, 0, 0, 402,
	403, 404, 705, 706, 405, 406, 407, 408, 409, 410,
	411, 412, 413, 0, 414, 707, 0, 708, 0, 0,
	416, 417, 418, 419, 420, 421, 422, 709, 710, 711,
	511, 0, 423, 424, 0, 425, 426, 427, 428, 429,
	0, 0, 0, 0, 430, 431, 432, 0, 0, 512,
	433, 712, 713, 0, 714, 0, 434, 435, 0, 715,
	0, 436, 437, 438, 0, 439, 0, 0, 0, 440,
	441, 442, 443, 444, 445, 0, 446, 448, 447, 0,
	449, 716, 0, 450, 451, 0, 0, 452, 453, 454,
	455, 456, 457, 460, 0, 0, 458, 459, 461, 462,
	0, 463, 464, 466, 469, 465, 467, 468, 470, 483,
	484, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 486, 0, 485, 0, 487, 488, 489,
	490, 491, 498, 500, 501, 496, 497, 499, 502, 503,
	505, 493, 494, 495, 0, 504, 492, 0, 0, 0,
	506, 507, 508, 509, 0, 717, 510, 718, 513, 514,
	0, 0, 515, 0, 516, 0, 0, 518, 519, 520,
	0, 0, 521, 522, 719, 0, 523, 0, 720, 524,
	525, 517, 526, 527, 0, 529, 530, 531, 532, 533,
	534, 0, 535, 536, 721, 537, 538, 539, 722, 540,
	541, 542, 723, 543, 724, 544, 545, 0, 546, 547,
	548, 0, 549, 550, 551, 552, 553, 0, 555, 556,
	725, 557, 558, 560, 559, 561, 0, 562, 0, 563,
	564, 565, 0, 0, 0, 0, 0, 566, 567, 569,
	0, 570, 571, 572, 573, 568, 574, 575, 576, 577,
	578, 579, 0, 580, 581, 582, 0, 583, 584, 585,
	586, 587, 726, 0, 0, 589, 590, 597, 598, 599,
	591, 592, 593, 600, 601, 602, 603, 604, 0, 606,
	607, 605, 608, 609, 610, 0, 611, 612, 594, 595,
	613, 614, 0, 615, 616, 617, 618, 619, 620, 621,
	727, 0, 622, 0, 623, 624, 625, 626, 627, 629,
	596, 630, 635, 636, 728, 631, 632, 633, 634, 729,
	638, 639, 640, 0, 641, 642, 0, 637, 628, 0,
	643, 644, 645, 646, 647, 648, 0, 649, 650, 0,
	651, 730, 731, 732, 733, 0, 662, 0, 652, 654,
	655, 656, 734, 657, 735, 0, 658, 659, 660, 661,
	653, 663, 664, 0, 0, 665, 666, 668, 670, 671,
	667, 669, 672, 0, 673, 0, 0, 674, 675, 676,
	736, 737, 738, 0, 678, 677, 679, 680, 681, 739,
	682, 683, 1729, 0, 1440, 0, 684, 685, 740, 686,
	687, 688, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 297, 298, 300, 299, 301, 302, 303, 304, 0,
	305, 306, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 307, 0, 308, 309, 0, 310, 311, 312, 313,
	314, 315, 316, 0, 0, 0, 317, 0, 318, 0,
	0, 0, 319, 320, 321, 322, 323, 324, 0, 0,
	0, 325, 0, 0, 0, 0, 326, 327, 0, 0,
	0, 0, 328, 329, 330, 331, 332, 333, 334, 335,
	0, 0, 337, 338, 339, 336, 340, 0, 341, 0,
	342, 343, 344, 345, 346, 347, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 0, 0, 0, 0, 0,
	1442, 354, 355, 356, 357, 358, 0, 359, 361, 0,
	0, 0, 364, 360, 362, 0, 365, 363, 366, 0,
	367, 368, 369, 0, 0, 370, 371, 372, 0, 373,
	374, 375, 0, 376, 377, 378, 0, 379, 380, 0,
	381, 382, 383, 385, 387, 384, 386, 388, 389, 390,
	391, 0, 0, 392, 0, 0, 0, 0, 0, 0,
	0, 393, 394, 395, 0, 0, 0, 0, 396, 0,
	397, 398, 399, 0, 400, 401, 0, 0, 402, 403,
	404, 0, 0, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 0, 414, 0, 0, 0, 415, 0, 416,
	417, 418, 419, 420, 421, 422, 1728, 0, 0, 511,
	0, 423, 424, 0, 425, 426, 427, 428, 429, 0,
	0, 0, 0, 430, 431, 432, 0, 0, 512, 433,
	0, 0, 0, 0, 0, 434, 435, 0, 0, 0,
	436, 437, 438, 0, 439, 0, 0, 0, 440, 441,
	442, 443, 444, 445, 0, 446, 448, 447, 0, 449,
	0, 0, 450, 451, 0, 0, 452, 453, 454, 455,
	456, 457, 460, 0, 0, 458, 459, 461, 462, 0,
	463, 464, 466, 469, 465, 467, 468, 470, 483, 484,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 486, 0, 485, 0, 487, 488, 489, 490,
	491, 498, 500, 501, 496, 497, 499, 502, 503, 505,
	493, 494, 495, 0, 504, 492, 0, 0, 0, 506,
	507, 508, 509, 0, 0, 510, 0, 513, 514, 0,
	0, 515, 0, 516, 0, 0, 518, 519, 520, 0,
	0, 521, 522, 0, 0, 523, 0, 0, 524, 525,
	517, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	0, 535, 536, 0, 537, 538, 539, 0, 540, 541,
	542, 0, 543, 0, 544, 545, 0, 546, 547, 548,
	0, 549, 550, 551, 552, 553, 554, 555, 556, 0,
	557, 558, 560, 559, 561, 0, 562, 0, 563, 564,
	565, 0, 0, 0, 0, 0, 566, 567, 569, 0,
	570, 571, 572, 573, 568, 574, 575, 576, 577, 578,
	579, 0, 580, 581, 582, 0, 583, 584, 585, 586,
	587, 0, 588, 0, 589, 590, 597, 598, 599, 591,
	592, 593, 600, 601, 602, 603, 604, 0, 606, 607,
	605, 608, 609, 610, 1443, 611, 612, 594, 595, 613,
	614, 0, 615, 616, 617, 618, 619, 620, 621, 0,
	0, 622, 0, 623, 624, 625, 626, 627, 629, 596,
	630, 635, 636, 0, 631, 632, 633, 634, 0, 638,
	639, 640, 0, 641, 642, 0, 637, 628, 0, 643,
	644, 645, 646, 647, 648, 0, 649, 650, 0, 651,
	0, 0, 0, 0, 0, 662, 0, 652, 654, 655,
	656, 0, 657, 0, 0, 658, 659, 660, 661, 653,
	663, 664, 0, 0, 665, 666, 668, 670, 671, 667,
	669, 672, 0, 673, 0, 0, 674, 675, 676, 0,
	0, 0, 0, 678, 677, 679, 680, 681, 0, 682,
	683, 1650, 0, 1440, 0, 684, 685, 0, 686, 687,
	688, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	297, 298, 300, 299, 301, 302, 303, 304, 0, 305,
	306, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	307, 0, 308, 309, 0, 310, 311, 312, 313, 314,
	315, 316, 0, 0, 0, 317, 0, 318, 0, 0,
	0, 319, 320, 321, 322, 323, 324, 0, 0, 0,
	325, 0, 0, 0, 0, 326, 327, 0, 0, 0,
	0, 328, 329, 330, 331, 332, 333, 334, 335, 0,
	0, 337, 338, 339, 336, 340, 0, 341, 0, 342,
	343, 344, 345, 346, 347, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 0, 0, 0, 0, 0, 1442,
	354, 355, 356, 357, 358, 0, 359, 361, 0, 0,
	0, 364, 360, 362, 0, 365, 363, 366, 0, 367,
	368, 369, 0, 0, 370, 371, 372, 0, 373, 374,
	375, 0, 376, 377, 378, 0, 379, 380, 0, 381,
	382, 383, 385, 387, 384, 386, 388, 389, 390, 391,
	0, 0, 392, 0, 0, 0, 0, 0, 0, 0,
	393, 394, 395, 0, 0, 0, 0, 396, 0, 397,
	398, 399, 0, 400, 401, 0, 0, 402, 403, 404,
	0, 0, 405, 406, 407, 408, 409, 410, 411, 412,
	413, 0, 414, 0, 0, 0, 415, 0, 416, 417,
	418, 419, 420, 421, 422, 1649, 0, 0, 511, 0,
	423, 424, 0, 425, 426, 427, 428, 429, 0, 0,
	0, 0, 430, 431, 432, 0, 0, 512, 433, 0,
	0, 0, 0, 0, 434, 435, 0, 0, 0, 436,
	437, 438, 0, 439, 0, 0, 0, 440, 441, 442,
	443, 444, 445, 0, 446, 448, 447, 0, 449, 0,
	0, 450, 451, 0, 0, 452, 453, 454, 455, 456,
	457, 460, 0, 0, 458, 459, 461, 462, 0, 463,
	464, 466, 469, 465, 467, 468, 470, 483, 484, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 486, 0, 485, 0, 487, 488, 489, 490, 491,
	498, 500, 501, 496, 497, 499, 502, 503, 505, 493,
	494, 495, 0, 504, 492, 0, 0, 0, 506, 507,
	508, 509, 0, 0, 510, 0, 513, 514, 0, 0,
	515, 0, 516, 0, 0, 518, 519, 520, 0, 0,
	521, 522, 0, 0, 523, 0, 0, 524, 525, 517,
	526, 527, 528, 529, 530, 531, 532, 533, 534, 0,
	535, 536, 0, 537, 538, 539, 0, 540, 541, 542,
	0, 543, 0, 544, 545, 0, 546, 547, 548, 0,
	549, 550, 551, 552, 553, 554, 555, 556, 0, 557,
	558, 560, 559, 561, 0, 562, 0, 563, 564, 565,
	0, 0, 0, 0, 0, 566, 567, 569, 0, 570,
	571, 572, 573, 568, 574, 575, 576, 577, 578, 579,
	0, 580, 581, 582, 0, 583, 584, 585, 586, 587,
	0, 588, 0, 589, 590, 597, 598, 599, 591, 592,
	593, 600, 601, 602, 603, 604, 0, 606, 607, 605,
	608, 609, 610, 1443, 611, 612, 594, 595, 613, 614,
	0, 615, 616, 617, 618, 619, 620, 621, 0, 0,
	622, 0, 623, 624, 625, 626, 627, 629, 596, 630,
	635, 636, 0, 631, 632, 633, 634, 0, 638, 639,
	640, 0, 641, 642, 0, 637, 628, 0, 643, 644,
	645, 646, 647, 648, 0, 649, 650, 0, 651, 0,
	0, 0, 0, 0, 662, 0, 652, 654, 655, 656,
	0, 657, 0, 0, 658, 659, 660, 661, 653, 663,
	664, 0, 0, 665, 666, 668, 670, 671, 667, 669,
	672, 0, 673, 0, 0, 674, 675, 676, 0, 0,
	0, 0, 678, 677, 679, 680, 681, 0, 682, 683,
	1438, 0, 1440, 0, 684, 685, 0, 686, 687, 688,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 297,
	298, 300, 299, 301, 302, 303, 304, 0, 305, 306,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 307,
	0, 308, 309, 0, 310, 311, 312, 313, 314, 315,
	316, 0, 0, 0, 317, 0, 318, 0, 0, 0,
	319, 320, 321, 322, 323, 324, 0, 0, 0, 325,
	0, 0, 0, 0, 326, 327, 0, 0, 0, 0,
	328, 329, 330, 331, 332, 333, 334, 335, 0, 0,
	337, 338, 339, 336, 340, 0, 341, 0, 342, 343,
	344, 345, 346, 347, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 0, 0, 0, 0, 0, 1442, 354,
	355, 356, 357, 358, 0, 359, 361, 0, 0, 0,
	364, 360, 362, 0, 365, 363, 366, 0, 367, 368,
	369, 0, 0, 370, 371, 372, 0, 373, 374, 375,
	0, 376, 377, 378, 0, 379, 380, 0, 381, 382,
	383, 385, 387, 384, 386, 388, 389, 390, 391, 0,
	0, 392, 0, 0, 0, 0, 0, 0, 0, 393,
	394, 395, 0, 0, 0, 0, 396, 0, 397, 398,
	399, 0, 400, 401, 0, 0, 402, 403, 404, 0,
	0, 405, 406, 407, 408, 409, 410, 411, 412, 413,
	0, 414, 0, 0, 0, 415, 0, 416, 417, 418,
	419, 420, 421, 422, 1437, 0, 0, 511, 0, 423,
	424, 0, 425, 426, 427, 428, 429, 0, 0, 0,
	0, 430, 431, 432, 0, 0, 512, 433, 0, 0,
	0, 0, 0, 434, 435, 0, 0, 0, 436, 437,
	438, 0, 439, 0, 0, 0, 440, 441, 442, 443,
	444, 445, 0, 446, 448, 447, 0, 449, 0, 0,
	450, 451, 0, 0, 452, 453, 454, 455, 456, 457,
	460, 0, 0, 458, 459, 461, 462, 0, 463, 464,
	466, 469, 465, 467, 468, 470, 483, 484, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	486, 0, 485, 0, 487, 488, 489, 490, 491, 498,
	500, 501, 496, 497, 499, 502, 503, 505, 493, 494,
	495, 0, 504, 492, 0, 0, 0, 506, 507, 508,
	509, 0, 0, 510, 0, 513, 514, 0, 0, 515,
	0, 516, 0, 0, 518, 519, 520, 0, 0, 521,
	522, 0, 0, 523, 0, 0, 524, 525, 517, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 0, 535,
	536, 0, 537, 538, 539, 0, 540, 541, 542, 0,
	543, 0, 544, 545, 0, 546, 547, 548, 0, 549,
	550, 551, 552, 553, 554, 555, 556, 0, 557, 558,
	560, 559, 561, 0, 562, 0, 563, 564, 565, 0,
	0, 0, 0, 0, 566, 567, 569, 0, 570, 571,
	572, 573, 568, 574, 575, 576, 577, 578, 579, 0,
	580, 581, 582, 0, 583, 584, 585, 586, 587, 0,
	588, 0, 589, 590, 597, 598, 599, 591, 592, 593,
	600, 601, 602, 603, 604, 0, 606, 607, 605, 608,
	609, 610, 1443, 611, 612, 594, 595, 613, 614, 0,
	615, 616, 617, 618, 619, 620, 621, 0, 0, 622,
	0, 623, 624, 625, 626, 627, 629, 596, 630, 635,
	636, 0, 631, 632, 633, 634, 0, 638, 639, 640,
	0, 641, 642, 0, 637, 628, 0, 643, 644, 645,
	646, 647, 648, 0, 649, 650, 0, 651, 0, 0,
	0, 0, 0, 662, 0, 652, 654, 655, 656, 0,
	657, 0, 0, 658, 659, 660, 661, 653, 663, 664,
	0, 0, 665, 666, 668, 670, 671, 667, 669, 672,
	0, 673, 0, 0, 674, 675, 676, 0, 0, 0,
	0, 678, 677, 679, 680, 681, 0, 682, 683, 2250,
	0, 1440, 0, 684, 685, 0, 686, 687, 688, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 297, 298,
	300, 299, 301, 302, 303, 304, 0, 305, 306, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 307, 0,
	308, 309, 0, 310, 311, 312, 313, 314, 315, 316,
	0, 0, 0, 317, 0, 318, 0, 0, 0, 319,
	320, 321, 322, 323, 324, 0, 0, 0, 325, 0,
	0, 0, 0, 326, 327, 0, 0, 0, 0, 328,
	329, 330, 331, 332, 333, 334, 335, 0, 0, 337,
	338, 339, 336, 340, 0, 341, 0, 342, 343, 344,
	345, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 0, 0, 0, 0, 0, 1442, 354, 355,
	356, 357, 358, 0, 359, 361, 0, 0, 0, 364,
	360, 362, 0, 365, 363, 366, 0, 367, 368, 369,
	0, 0, 370, 371, 372, 0, 373, 374, 375, 0,
	376, 377, 378, 0, 379, 380, 0, 381, 382, 383,
	385, 387, 384, 386, 388, 389, 390, 391, 0, 0,
	392, 0, 0, 0, 0, 0, 0, 0, 393, 394,
	395, 0, 0, 0, 0, 396, 0, 397, 398, 399,
	0, 400, 401, 0, 0, 402, 403, 404, 0, 0,
	405, 406, 407, 408, 409, 410, 411, 412, 413, 0,
	414, 0, 0, 0, 415, 0, 416, 417, 418, 419,
	420, 421, 422, 0, 0, 0, 511, 0, 423, 424,
	0, 425, 426, 427, 428, 429, 0, 0, 0, 0,
	430, 431, 432, 0, 0, 512, 433, 0, 0, 0,
	0, 0, 434, 435, 0, 0, 0, 436, 437, 438,
	0, 439, 0, 0, 0, 440, 441, 442, 443, 444,
	445, 0, 446, 448, 447, 0, 449, 0, 0, 450,
	451, 0, 0, 452, 453, 454, 455, 456, 457, 460,
	0, 0, 458, 459, 461, 462, 0, 463, 464, 466,
	469, 465, 467, 468, 470, 483, 484, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 486,
	0, 485, 0, 487, 488, 489, 490, 491, 498, 500,
	501, 496, 497, 499, 502, 503, 505, 493, 494, 495,
	0, 504, 492, 0, 0, 0, 506, 507, 508, 509,
	0, 0, 510, 0, 513, 514, 0, 0, 515, 0,
	516, 0, 0, 518, 519, 520, 0, 0, 521, 522,
	0, 0, 523, 0, 0, 524, 525, 517, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 0, 535, 536,
	0, 537, 538, 539, 0, 540, 541, 542, 0, 543,
	0, 544, 545, 0, 546, 547, 548, 0, 549, 550,
	551, 552, 553, 554, 555, 556, 0, 557, 558, 560,
	559, 561, 0, 562, 0, 563, 564, 565, 0, 0,
	0, 0, 0, 566, 567, 569, 0, 570, 571, 572,
	573, 568, 574, 575, 576, 577, 578, 579, 0, 580,
	581, 582, 0, 583, 584, 585, 586, 587, 0, 588,
	0, 589, 590, 597, 598, 599, 591, 592, 593, 600,
	601, 602, 603, 604, 0, 606, 607, 605, 608, 609,
	610, 1443, 611, 612, 594, 595, 613, 614, 0, 615,
	616, 617, 618, 619, 620, 621, 0, 0, 622, 0,
	623, 624, 625, 626, 627, 629, 596, 630, 635, 636,
	0, 631, 632, 633, 634, 0, 638, 639, 640, 0,
	641, 642, 0, 637, 628, 0, 643, 644, 645, 646,
	647, 648, 0, 649, 650, 0, 651, 0, 0, 0,
	0, 0, 662, 0, 652, 654, 655, 656, 0, 657,
	0, 0, 658, 659, 660, 661, 653, 663, 664, 0,
	0, 665, 666, 668, 670, 671, 667, 669, 672, 0,
	673, 0, 0, 674, 675, 676, 0, 0, 0, 0,
	678, 677, 679, 680, 681, 0, 682, 683, 2217, 0,
	1440, 0, 684, 685, 0, 686, 687, 688, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 297, 298, 300,
	299, 301, 302, 303, 304, 0, 305, 306, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 307, 0, 308,
	309, 0, 310, 311, 312, 313, 314, 315, 316, 0,
	0, 0, 317, 0, 318, 0, 0, 0, 319, 320,
	321, 322, 323, 324, 0, 0, 0, 325, 0, 0,
	0, 0, 326, 327, 0, 0, 0, 0, 328, 329,
	330, 331, 332, 333, 334, 335, 0, 0, 337, 338,
	339, 336, 340, 0, 341, 0, 342, 343, 344, 345,
	346, 347, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 0, 0, 0, 0, 0, 1442, 354, 355, 356,
	357, 358, 0, 359, 361, 0, 0, 0, 364, 360,
	362, 0, 365, 363, 366, 0, 367, 368, 369, 0,
	0, 370, 371, 372, 0, 373, 374, 375, 0, 376,
	377, 378, 0, 379, 380, 0, 381, 382, 383, 385,
	387, 384, 386, 388, 389, 390, 391, 0, 0, 392,
	0, 0, 0, 0, 0, 0, 0, 393, 394, 395,
	0, 0, 0, 0, 396, 0, 397, 398, 399, 0,
	400, 401, 0, 0, 402, 403, 404, 0, 0, 405,
	406, 407, 408, 409, 410, 411, 412, 413, 0, 414,
	0, 0, 0, 415, 0, 416, 417, 418, 419, 420,
	421, 422, 0, 0, 0, 511, 0, 423, 424, 0,
	425, 426, 427, 428, 429, 0, 0, 0, 0, 430,
	431, 432, 0, 0, 512, 433, 0, 0, 0, 0,
	0, 434, 435, 0, 0, 0, 436, 437, 438, 0,
	439, 0, 0, 0, 440, 441, 442, 443, 444, 445,
	0, 446, 448, 447, 0, 449, 0, 0, 450, 451,
	0, 0, 452, 453, 454, 455, 456, 457, 460, 0,
	0, 458, 459, 461, 462, 0, 463, 464, 466, 469,
	465, 467, 468, 470, 483, 484, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 486, 0,
	485, 0, 487, 488, 489, 490, 491, 498, 500, 501,
	496, 497, 499, 502, 503, 505, 493, 494, 495, 0,
	504, 492, 0, 0, 0, 506, 507, 508, 509, 0,
	0, 510, 0, 513, 514, 0, 0, 515, 0, 516,
	0, 0, 518, 519, 520, 0, 0, 521, 522, 0,
	0, 523, 0, 0, 524, 525, 517, 526, 527, 528,
	529, 530, 531, 532, 533, 534, 0, 535, 536, 0,
	537, 538, 539, 0, 540, 541, 542, 0, 543, 0,
	544, 545, 0, 546, 547, 548, 0, 549, 550, 551,
	552, 553, 554, 555, 556, 0, 557, 558, 560, 559,
	561, 0, 562, 0, 563, 564, 565, 0, 0, 0,
	0, 0, 566, 567, 569, 0, 570, 571, 572, 573,
	568, 574, 575, 576, 577, 578, 579, 0, 580, 581,
	582, 0, 583, 584, 585, 586, 587, 0, 588, 0,
	589, 590, 597, 598, 599, 591, 592, 593, 600, 601,
	602, 603, 604, 0, 606, 607, 605, 608, 609, 610,
	1443, 611, 612, 594, 595, 613, 614, 0, 615, 616,
	617, 618, 619, 620, 621, 0, 0, 622, 0, 623,
	624, 625, 626, 627, 629, 596, 630, 635, 636, 0,
	631, 632, 633, 634, 0, 638, 639, 640, 0, 641,
	642, 0, 637, 628, 0, 643, 644, 645, 646, 647,
	648, 0, 649, 650, 0, 651, 0, 0, 0, 0,
	0, 662, 0, 652, 654, 655, 656, 0, 657, 0,
	0, 658, 659, 660, 661, 653, 663, 664, 0, 0,
	665, 666, 668, 670, 671, 667, 669, 672, 0, 673,
	0, 0, 674, 675, 676, 0, 0, 0, 0, 678,
	677, 679, 680, 681, 1440, 682, 683, 0, 0, 0,
	0, 684, 685, 0, 686, 687, 688, 0, 0, 0,
	0, 297, 298, 300, 299, 301, 302, 303, 304, 0,
	305, 306, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 307, 0, 308, 309, 0, 310, 311, 312, 313,
	314, 315, 316, 0, 0, 0, 317, 0, 318, 0,
	0, 0, 319, 320, 321, 322, 323, 324, 0, 0,
	0, 325, 0, 0, 0, 0, 326, 327, 0, 0,
	0, 0, 328, 329, 330, 331, 332, 333, 334, 335,
	0, 0, 337, 338, 339, 336, 340, 0, 341, 0,
	342, 343, 344, 345, 346, 347, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 0, 0, 0, 0, 0,
	1442, 354, 355, 356, 357, 358, 0, 359, 361, 0,
	0, 0, 364, 360, 362, 0, 365, 363, 366, 0,
	367, 368, 369, 0, 0, 370, 371, 372, 0, 373,
	374, 375, 0, 376, 377, 378, 0, 379, 380, 0,
	381, 382, 383, 385, 387, 384, 386, 388, 389, 390,
	391, 0, 0, 392, 0, 0, 0, 0, 0, 0,
	0, 393, 394, 395, 0, 0, 0, 0, 396, 0,
	397, 398, 399, 0, 400, 401, 0, 0, 402, 403,
	404, 0, 0, 405, 406, 407, 408, 409, 410, 411,
	412, 413, 0, 414, 0, 0, 0, 415, 0, 416,
	417, 418, 419, 420, 421, 422, 0, 0, 0, 511,
	0, 423, 424, 0, 425, 426, 427, 428, 429, 0,
	0, 0, 0, 430, 431, 432, 0, 0, 512, 433,
	0, 0, 0, 0, 0, 434, 435, 0, 0, 0,
	436, 437, 438, 0, 439, 0, 0, 0, 440, 441,
	442, 443, 444, 445, 0, 446, 448, 447, 0, 449,
	0, 0, 450, 451, 0, 0, 452, 453, 454, 455,
	456, 457, 460, 0, 0, 458, 459, 461, 462, 0,
	463, 464, 466, 469, 465, 467, 468, 470, 483, 484,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 486, 0, 485, 0, 487, 488, 489, 490,
	491, 498, 500, 501, 496, 497, 499, 502, 503, 505,
	493, 494, 495, 0, 504, 492, 0, 0, 0, 506,
	507, 508, 509, 0, 0, 510, 0, 513, 514, 0,
	0, 515, 0, 516, 0, 0, 518, 519, 520, 0,
	0, 521, 522, 0, 0, 523, 0, 0, 524, 525,
	517, 526, 527, 528, 529, 530, 531, 532, 533, 534,
	0, 535, 536, 0, 537, 538, 539, 0, 540, 541,
	542, 0, 543, 0, 544, 545, 0, 546, 547, 548,
	0, 549, 550, 551, 552, 553, 554, 555, 556, 0,
	557, 558, 560, 559, 561, 0, 562, 0, 563, 564,
	565, 0, 0, 0, 0, 0, 566, 567, 569, 0,
	570, 571, 572, 573, 568, 574, 575, 576, 577, 578,
	579, 0, 580, 581, 582, 0, 583, 584, 585, 586,
	587, 0, 588, 0, 589, 590, 597, 598, 599, 591,
	592, 593, 600, 601, 602, 603, 604, 0, 606, 607,
	605, 608, 609, 610, 1443, 611, 612, 594, 595, 613,
	614, 0, 615, 616, 617, 618, 619, 620, 621, 0,
	0, 622, 0, 623, 624, 625, 626, 627, 629, 596,
	630, 635, 636, 0, 631, 632, 633, 634, 0, 638,
	639, 640, 0, 641, 642, 0, 637, 628, 0, 643,
	644, 645, 646, 647, 648, 0, 649, 650, 0, 651,
	0, 0, 0, 0, 0, 662, 0, 652, 654, 655,
	656, 0, 657, 0, 0, 658, 659, 660, 661, 653,
	663, 664, 0, 0, 665, 666, 668, 670, 671, 667,
	669, 672, 0, 673, 0, 0, 674, 675, 676, 0,
	0, 0, 0, 678, 677, 679, 680, 681, 0, 682,
	683, 0, 0, 0, 0, 684, 685, 0, 686, 687,
	688, 1950, 1951, 0, 1983, 1984, 1985, 1994, 1995, 1996,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1987, 1981, 0, 0, 0, 0,
	0, 1950, 1951, 1953, 1983, 1984, 1985, 1994, 1995, 1996,
	0, 0, 0, 2000, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1987, 1981, 0, 0, 0, 0,
	2006, 0, 0, 1953, 0, 0, 0, 0, 0, 1952,
	0, 0, 0, 2000, 0, 0, 0, 0, 0, 0,
	1972, 0, 0, 0, 0, 0, 0, 0, 0, 1969,
	2006, 0, 0, 0, 0, 0, 0, 0, 0, 1952,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1972, 0, 0, 0, 0, 0, 0, 0, 0, 1969,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1975, 1976, 1977,
	1978, 0, 0, 0, 0, 0, 0, 1958, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1975, 1976, 1977,
	1978, 0, 0, 0, 0, 0, 0, 1958, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1991, 0, 0, 2001, 0, 0, 0, 0, 0, 0,
	1980, 1982, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1997, 0, 1998,
	1991, 0, 0, 2001, 0, 0, 1967, 1968, 0, 0,
	1980, 1982, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1989, 0, 0, 1997, 0, 1998,
	0, 0, 0, 0, 0, 0, 1967, 1968, 0, 1973,
	0, 0, 0, 0, 1950, 1951, 0, 1983, 1984, 1985,
	1994, 1995, 1996, 0, 1989, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1987, 1981, 1973,
	0, 0, 0, 0, 0, 0, 1953, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2000, 0, 1999, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2006, 0, 0, 0, 0, 0, 1988,
	0, 0, 1952, 0, 0, 0, 0, 0, 1999, 0,
	2003, 0, 0, 1972, 0, 0, 0, 0, 0, 0,
	0, 0, 1969, 0, 0, 0, 0, 0, 0, 1988,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2003, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1979,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1974, 0, 0, 0, 0, 0, 1979,
	1975, 1976, 1977, 1978, 0, 0, 0, 0, 0, 0,
	1958, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1992, 0, 1974, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1950, 1951, 0, 1983, 1984, 1985, 1994, 1995,
	1996, 1992, 0, 1991, 0, 2005, 2001, 0, 0, 0,
	0, 0, 0, 1980, 1982, 1987, 1981, 0, 0, 0,
	0, 0, 0, 0, 1953, 0, 0, 0, 0, 0,
	1997, 0, 1998, 0, 2000, 2005, 0, 0, 0, 1967,
	1968, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2006, 0, 0, 0, 0, 0, 1989, 0, 0,
	1952, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1972, 1973, 0, 0, 0, 0, 0, 0, 0,
	1969, 1990, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1964, 1965, 1971, 1993, 1970, 1966, 0,
	1963, 1961, 1962, 1954, 1955, 1956, 1957, 1959, 1960, 0,
	0, 1990, 0, 0, 4903, 0, 0, 0, 0, 0,
	0, 1999, 0, 1964, 1965, 1971, 1993, 1970, 1966, 0,
	1963, 1961, 1962, 1954, 1955, 1956, 1957, 1959, 1960, 0,
	0, 0, 1988, 0, 4707, 0, 0, 0, 0, 0,
	0, 0, 0, 2003, 0, 0, 0, 0, 1975, 1976,
	1977, 1978, 0, 0, 0, 0, 0, 0, 1958, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1950, 1951, 0, 1983, 1984, 1985, 1994, 1995, 1996, 0,
	0, 1991, 1979, 0, 2001, 0, 0, 0, 0, 0,
	0, 1980, 1982, 1987, 1981, 0, 0, 0, 0, 0,
	0, 0, 1953, 0, 0, 0, 1974, 0, 1997, 0,
	1998, 0, 2000, 0, 0, 0, 0, 1967, 1968, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2006,
	0, 0, 0, 0, 1992, 1989, 0, 0, 1952, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1972,
	1973, 0, 0, 0, 0, 0, 0, 0, 1969, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2005, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1999,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1988, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2003, 0, 0, 0, 0, 1975, 1976, 1977, 1978,
	0, 0, 0, 0, 1990, 0, 1958, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1964, 1965, 1971, 1993,
	1970, 1966, 0, 1963, 1961, 1962, 1954, 1955, 1956, 1957,
	1959, 1960, 0, 0, 0, 0, 0, 4535, 1950, 1951,
	0, 1983, 1984, 1985, 1994, 1995, 1996, 0, 0, 1991,
	1979, 0, 2001, 0, 0, 0, 0, 0, 0, 1980,
	1982, 1987, 1981, 0, 0, 0, 0, 0, 0, 0,
	1953, 0, 0, 0, 1974, 0, 1997, 0, 1998, 0,
	2000, 0, 0, 0, 0, 1967, 1968, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2006, 0, 0,
	0, 0, 1992, 1989, 0, 0, 1952, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1972, 1973, 0,
	0, 0, 0, 0, 0, 0, 1969, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2005, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1999, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1988, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2003,
	0, 0, 0, 0, 1975, 1976, 1977, 1978, 0, 0,
	0, 0, 1990, 0, 1958, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1964, 1965, 1971, 1993, 1970, 1966,
	0, 1963, 1961, 1962, 1954, 1955, 1956, 1957, 1959, 1960,
	0, 0, 0, 0, 0, 4439, 1950, 1951, 0, 1983,
	1984, 1985, 1994, 1995, 1996, 0, 0, 1991, 1979, 0,
	2001, 0, 0, 0, 0, 0, 0, 1980, 1982, 1987,
	1981, 0, 0, 0, 0, 0, 0, 0, 1953, 0,
	0, 0, 1974, 0, 1997, 0, 1998, 0, 2000, 0,
	0, 0, 0, 1967, 1968, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2006, 0, 0, 0, 0,
	1992, 1989, 0, 0, 1952, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1972, 1973, 0, 0, 0,
	0, 0, 0, 0, 1969, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2005, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1999, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1988, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2003, 0, 0,
	0, 0, 1975, 1976, 1977, 1978, 0, 0, 0, 0,
	1990, 0, 1958, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1964, 1965, 1971, 1993, 1970, 1966, 0, 1963,
	1961, 1962, 1954, 1955, 1956, 1957, 1959, 1960, 0, 0,
	0, 0, 0, 4438, 1950, 1951, 0, 1983, 1984, 1985,
	1994, 1995, 1996, 0, 0, 1991, 1979, 0, 2001, 0,
	0, 0, 0, 0, 0, 1980, 1982, 1987, 1981, 0,
	0, 0, 0, 0, 0, 0, 1953, 0, 0, 0,
	1974, 0, 1997, 0, 1998, 0, 2000, 0, 0, 0,
	0, 1967, 1968, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2006, 0, 0, 0, 0, 1992, 1989,
	0, 0, 1952, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1972, 1973, 0, 0, 0, 0, 0,
	0, 0, 1969, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2005, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1999, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1988, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2003, 0, 0, 0, 0,
	1975, 1976, 1977, 1978, 0, 0, 0, 0, 1990, 0,
	1958, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1964, 1965, 1971, 1993, 1970, 1966, 0, 1963, 1961, 1962,
	1954, 1955, 1956, 1957, 1959, 1960, 0, 0, 0, 0,
	0, 4437, 1950, 1951, 0, 1983, 1984, 1985, 1994, 1995,
	1996, 0, 0, 1991, 1979, 0, 2001, 0, 0, 0,
	0, 0, 0, 1980, 1982, 1987, 1981, 0, 0, 0,
	0, 0, 0, 0, 1953, 0, 0, 0, 1974, 0,
	1997, 0, 1998, 0, 2000, 0, 0, 0, 0, 1967,
	1968, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2006, 0, 0, 0, 0, 1992, 1989, 0, 0,
	1952, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1972, 1973, 0, 0, 0, 0, 0, 0, 0,
	1969, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2005, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1999, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1988, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2003, 0, 0, 0, 0, 1975, 1976,
	1977, 1978, 0, 0, 0, 0, 1990, 0, 1958, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1964, 1965,
	1971, 1993, 1970, 1966, 0, 1963, 1961, 1962, 1954, 1955,
	1956, 1957, 1959, 1960, 0, 0, 0, 0, 0, 4051,
	1950, 1951, 0, 1983, 1984, 1985, 1994, 1995, 1996, 0,
	0, 1991, 1979, 0, 2001, 0, 0, 0, 0, 0,
	0, 1980, 1982, 1987, 1981, 0, 0, 0, 0, 0,
	0, 0, 1953, 0, 0, 0, 1974, 0, 1997, 0,
	1998, 0, 2000, 0, 0, 0, 0, 1967, 1968, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2006,
	0, 0, 0, 0, 1992, 1989, 0, 0, 1952, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1972,
	1973, 0, 0, 0, 0, 0, 0, 0, 1969, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2005, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1999,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1988, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2003, 0, 0, 0, 0, 1975, 1976, 1977, 1978,
	0, 0, 0, 0, 1990, 0, 1958, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1964, 1965, 1971, 1993,
	1970, 1966, 0, 1963, 1961, 1962, 1954, 1955, 1956, 1957,
	1959, 1960, 0, 0, 0, 0, 0, 3512, 1950, 1951,
	0, 1983, 1984, 1985, 1994, 1995, 1996, 0, 0, 1991,
	1979, 0, 2001, 0, 0, 0, 0, 0, 0, 1980,
	1982, 1987, 1981, 0, 0, 0, 0, 0, 0, 0,
	1953, 0, 0, 0, 1974, 0, 1997, 0, 1998, 0,
	2000, 0, 0, 0, 0, 1967, 1968, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2006, 0, 0,
	0, 0, 1992, 1989, 0, 0, 1952, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1972, 1973, 0,
	0, 0, 0, 0, 0, 0, 1969, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2005, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1999, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1988, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2003,
	0, 0, 0, 0, 1975, 1976, 1977, 1978, 0, 0,
	0, 0, 1990, 0, 1958, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1964, 1965, 1971, 1993, 1970, 1966,
	0, 1963, 1961, 1962, 1954, 1955, 1956, 1957, 1959, 1960,
	0, 0, 0, 0, 0, 3511, 1950, 1951, 0, 1983,
	1984, 1985, 1994, 1995, 1996, 0, 0, 1991, 1979, 0,
	2001, 0, 0, 0, 0, 0, 0, 1980, 1982, 1987,
	1981, 0, 0, 0, 0, 0, 0, 0, 1953, 0,
	0, 0, 1974, 0, 1997, 0, 1998, 0, 2000, 0,
	0, 0, 0, 1967, 1968, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2006, 0, 0, 0, 0,
	1992, 1989, 0, 0, 1952, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1972, 1973, 0, 0, 0,
	0, 0, 0, 0, 1969, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2005, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1999, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1988, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2003, 0, 0,
	0, 0, 1975, 1976, 1977, 1978, 0, 0, 0, 0,
	1990, 0, 1958, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1964, 1965, 1971, 1993, 1970, 1966, 0, 1963,
	1961, 1962, 1954, 1955, 1956, 1957, 1959, 1960, 0, 0,
	0, 0, 0, 3510, 0, 0, 1950, 1951, 0, 1983,
	1984, 1985, 1994, 1995, 1996, 1991, 1979, 0, 2001, 0,
	2399, 0, 0, 0, 0, 1980, 1982, 0, 0, 1987,
	1981, 0, 0, 0, 0, 0, 0, 0, 1953, 0,
	1974, 0, 1997, 0, 1998, 0, 0, 0, 2000, 0,
	0, 1967, 1968, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2006, 0, 0, 1992, 1989,
	0, 0, 0, 0, 1952, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1973, 1972, 0, 0, 0, 0,
	0, 0, 0, 0, 1969, 0, 0, 0, 0, 0,
	0, 0, 2005, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1999, 0, 0, 0, 0, 0, 0,
	0, 0, 2400, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1988, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2003, 0, 0, 0, 0,
	0, 0, 1975, 1976, 1977, 1978, 0, 0, 1990, 0,
	0, 0, 1958, 0, 0, 0, 0, 0, 0, 0,
	1964, 1965, 1971, 1993, 1970, 1966, 0, 1963, 1961, 1962,
	1954, 1955, 1956, 1957, 1959, 1960, 0, 0, 0, 0,
	0, 3509, 0, 0, 1950, 1951, 0, 1983, 1984, 1985,
	1994, 1995, 1996, 0, 1979, 1991, 0, 0, 2001, 0,
	0, 0, 0, 0, 0, 1980, 1982, 1987, 1981, 0,
	0, 0, 0, 0, 0, 0, 1953, 0, 1974, 0,
	0, 0, 1997, 0, 1998, 0, 2000, 0, 0, 0,
	0, 1967, 1968, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2006, 0, 0, 1992, 0, 0, 1989,
	0, 0, 1952, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1972, 1973, 0, 0, 0, 0, 0,
	0, 0, 1969, 0, 0, 0, 0, 0, 0, 0,
	2005, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1999, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1988, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2003, 0, 0, 0, 0,
	1975, 1976, 1977, 1978, 0, 0, 1990, 0, 0, 0,
	1958, 5206, 0, 0, 0, 0, 0, 0, 1964, 1965,
	1971, 1993, 1970, 1966, 0, 1963, 1961, 1962, 1954, 1955,
	1956, 1957, 1959, 1960, 0, 0, 0, 3474, 0, 0,
	0, 0, 1950, 1951, 0, 1983, 1984, 1985, 1994, 1995,
	1996, 0, 0, 1991, 1979, 0, 2001, 0, 0, 0,
	0, 0, 0, 1980, 1982, 1987, 1981, 0, 0, 0,
	0, 0, 0, 0, 1953, 0, 0, 0, 1974, 0,
	1997, 0, 1998, 0, 2000, 0, 0, 0, 0, 1967,
	1968, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2401, 2006, 0, 0, 0, 0, 1992, 1989, 0, 0,
	1952, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1972, 1973, 0, 0, 0, 0, 0, 0, 0,
	1969, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2005, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1999, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2402, 0, 0, 0, 0, 0,
	0, 0, 1988, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2003, 0, 0, 0, 0, 1975, 1976,
	1977, 1978, 0, 0, 0, 0, 1990, 0, 1958, 0,
	3574, 0, 0, 0, 0, 5205, 0, 3573, 1964, 1965,
	1971, 1993, 1970, 1966, 0, 1963, 1961, 1962, 1954, 1955,
	1956, 1957, 1959, 1960, 0, 0, 0, 0, 0, 0,
	1950, 1951, 0, 1983, 1984, 1985, 1994, 1995, 1996, 0,
	0, 1991, 1979, 0, 2001, 0, 0, 0, 0, 0,
	0, 1980, 1982, 1987, 1981, 0, 0, 0, 0, 3444,
	0, 0, 1953, 0, 0, 0, 1974, 0, 1997, 0,
	1998, 0, 2000, 0, 0, 0, 0, 1967, 1968, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2006,
	0, 0, 0, 0, 1992, 1989, 0, 0, 1952, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1972,
	1973, 0, 0, 0, 0, 0, 0, 0, 1969, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2005, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3445, 1999,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1988, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2003, 0, 0, 0, 0, 1975, 1976, 1977, 1978,
	0, 0, 0, 0, 1990, 0, 1958, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1964, 1965, 1971, 1993,
	1970, 1966, 0, 1963, 1961, 1962, 1954, 1955, 1956, 1957,
	1959, 1960, 0, 2947, 0, 0, 0, 0, 0, 0,
	1950, 1951, 0, 1983, 1984, 1985, 1994, 1995, 1996, 1991,
	1979, 0, 2001, 0, 0, 0, 0, 0, 0, 1980,
	1982, 0, 0, 1987, 1981, 0, 0, 0, 2946, 0,
	0, 0, 1953, 0, 1974, 0, 1997, 0, 1998, 0,
	0, 0, 2000, 0, 0, 1967, 1968, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2006,
	0, 0, 1992, 1989, 0, 0, 0, 0, 1952, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1973, 1972,
	0, 0, 0, 0, 0, 0, 0, 0, 1969, 0,
	0, 0, 0, 0, 0, 0, 2005, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1999, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1988, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2003,
	0, 0, 0, 0, 0, 0, 1975, 1976, 1977, 1978,
	0, 0, 1990, 0, 0, 0, 1958, 0, 0, 0,
	0, 0, 0, 0, 1964, 1965, 1971, 1993, 1970, 1966,
	0, 1963, 1961, 1962, 1954, 1955, 1956, 1957, 1959, 1960,
	0, 0, 0, 0, 0, 0, 0, 0, 1950, 1951,
	0, 1983, 1984, 1985, 1994, 1995, 1996, 0, 1979, 1991,
	0, 0, 2001, 0, 0, 0, 0, 0, 0, 1980,
	1982, 1987, 1981, 0, 0, 0, 0, 0, 0, 0,
	1953, 0, 1974, 0, 0, 0, 1997, 0, 1998, 0,
	2000, 0, 0, 0, 0, 1967, 1968, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2006, 0, 0,
	1992, 0, 0, 1989, 0, 0, 1952, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1972, 1973, 0,
	0, 0, 0, 0, 0, 0, 1969, 0, 0, 0,
	0, 0, 0, 0, 2005, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1999, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1988, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2003,
	0, 0, 0, 0, 1975, 1976, 1977, 1978, 0, 0,
	1990, 0, 0, 0, 1958, 0, 4809, 0, 0, 0,
	0, 0, 1964, 1965, 1971, 1993, 1970, 1966, 0, 1963,
	1961, 1962, 1954, 1955, 1956, 1957, 1959, 1960, 0, 0,
	0, 0, 0, 0, 0, 0, 1950, 1951, 0, 1983,
	1984, 1985, 1994, 1995, 1996, 0, 0, 1991, 1979, 0,
	2001, 0, 0, 0, 0, 0, 0, 1980, 1982, 1987,
	1981, 0, 0, 0, 0, 0, 0, 0, 1953, 0,
	0, 0, 1974, 0, 1997, 0, 1998, 0, 2000, 0,
	0, 0, 0, 1967, 1968, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2006, 0, 0, 0, 0,
	1992, 1989, 0, 0, 1952, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1972, 1973, 0, 0, 0,
	0, 0, 0, 0, 1969, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2005, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1999, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1988, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2003, 0, 0,
	0, 0, 1975, 1976, 1977, 1978, 0, 0, 0, 0,
	1990, 0, 1958, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1964, 1965, 1971, 1993, 1970, 1966, 0, 1963,
	1961, 1962, 1954, 1955, 1956, 1957, 1959, 1960, 0, 0,
	0, 0, 0, 0, 1950, 1951, 0, 1983, 1984, 1985,
	1994, 1995, 1996, 0, 0, 1991, 1979, 0, 2001, 0,
	0, 0, 0, 0, 0, 1980, 1982, 1987, 1981, 0,
	0, 0, 0, 0, 0, 0, 1953, 0, 0, 0,
	1974, 0, 1997, 0, 1998, 0, 2000, 0, 0, 0,
	0, 1967, 1968, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2006, 0, 0, 0, 0, 1992, 1989,
	0, 0, 1952, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1972, 1973, 0, 0, 0, 0, 0,
	0, 0, 1969, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2005, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1999, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1988, 1172, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2003, 0, 0, 0, 0,
	1975, 1976, 1977, 1978, 0, 0, 0, 0, 1990, 0,
	1958, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1964, 1965, 1971, 1993, 1970, 1966, 0, 1963, 1961, 1962,
	1954, 1955, 1956, 1957, 1959, 1960, 0, 0, 0, 0,
	0, 0, 1950, 1951, 0, 1983, 1984, 1985, 1994, 1995,
	1996, 0, 0, 1991, 1979, 0, 2001, 0, 0, 0,
	0, 0, 0, 1980, 1982, 1987, 1981, 0, 0, 0,
	0, 0, 0, 0, 1953, 0, 0, 0, 1974, 0,
	1997, 0, 1998, 0, 2000, 0, 0, 0, 0, 1967,
	1968, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2006, 0, 0, 0, 0, 1992, 1989, 0, 0,
	1952, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1972, 1973, 0, 0, 0, 0, 0, 0, 0,
	1969, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2005, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1999, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1988, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2003, 0, 0, 0, 0, 1975, 1976,
	1977, 1978, 0, 0, 0, 0, 1990, 0, 1958, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1964, 1965,
	1971, 1993, 1970, 1966, 0, 1963, 1961, 1962, 1954, 1955,
	1956, 1957, 1959, 1960, 0, 0, 0, 0, 0, 0,
	1950, 1951, 0, 1983, 1984, 1985, 1994, 1995, 1996, 0,
	0, 1991, 1979, 0, 2001, 0, 0, 0, 0, 0,
	0, 1980, 1982, 1987, 1981, 0, 0, 0, 0, 0,
	0, 0, 1953, 0, 0, 0, 1974, 0, 1997, 0,
	1998, 0, 2000, 0, 0, 0, 0, 1967, 1968, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2006,
	0, 0, 0, 0, 1992, 1989, 0, 0, 1952, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1972,
	1973, 0, 0, 0, 0, 0, 0, 0, 1969, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2005, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4582, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1999,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1988, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2003, 0, 0, 0, 0, 1975, 1976, 1977, 1978,
	0, 0, 0, 0, 1990, 0, 1958, 0, 4256, 0,
	0, 0, 0, 0, 0, 0, 1964, 1965, 1971, 1993,
	1970, 1966, 0, 1963, 1961, 1962, 1954, 1955, 1956, 1957,
	1959, 1960, 0, 0, 0, 0, 0, 0, 1950, 1951,
	0, 1983, 1984, 1985, 1994, 1995, 1996, 0, 0, 1991,
	1979, 0, 2001, 0, 0, 0, 0, 0, 0, 1980,
	1982, 1987, 1981, 0, 0, 0, 0, 0, 0, 0,
	1953, 0, 0, 0, 1974, 0, 1997, 0, 1998, 0,
	2000, 0, 0, 0, 0, 1967, 1968, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2006, 0, 0,
	0, 0, 1992, 1989, 0, 0, 1952, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1972, 1973, 0,
	0, 0, 0, 0, 0, 0, 1969, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2005, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4257, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1999, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1988, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2003,
	0, 0, 0, 0, 1975, 1976, 1977, 1978, 0, 0,
	0, 0, 1990, 0, 1958, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1964, 1965, 1971, 1993, 1970, 1966,
	0, 1963, 1961, 1962, 1954, 1955, 1956, 1957, 1959, 1960,
	0, 0, 0, 0, 0, 0, 1950, 1951, 0, 1983,
	1984, 1985, 1994, 1995, 1996, 0, 0, 1991, 1979, 0,
	2001, 0, 0, 0, 0, 0, 0, 1980, 1982, 1987,
	1981, 0, 0, 0, 0, 0, 0, 0, 1953, 0,
	0, 0, 1974, 0, 1997, 0, 1998, 0, 2000, 0,
	0, 0, 0, 1967, 1968, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2006, 0, 0, 0, 0,
	1992, 1989, 0, 0, 1952, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1972, 1973, 0, 0, 0,
	0, 0, 0, 0, 1969, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2005, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1999, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1988, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2003, 0, 0,
	0, 0, 1975, 1976, 1977, 1978, 0, 0, 0, 0,
	1990, 0, 1958, 0, 0, 0, 0, 0, 0, 0,
	0, 3580, 1964, 1965, 1971, 1993, 1970, 1966, 0, 1963,
	1961, 1962, 1954, 1955, 1956, 1957, 1959, 1960, 0, 0,
	0, 0, 0, 0, 1950, 1951, 0, 1983, 1984, 1985,
	1994, 1995, 1996, 0, 0, 1991, 1979, 0, 2001, 0,
	0, 0, 0, 0, 0, 1980, 1982, 1987, 1981, 0,
	0, 0, 3575, 0, 0, 0, 1953, 0, 0, 0,
	1974, 0, 1997, 0, 1998, 0, 2000, 0, 0, 0,
	0, 1967, 1968, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2006, 0, 0, 0, 0, 1992, 1989,
	0, 0, 1952, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1972, 1973, 0, 0, 0, 0, 0,
	0, 0, 1969, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2005, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4032, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1999, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1988, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2003, 0, 0, 0, 0,
	1975, 1976, 1977, 1978, 0, 0, 0, 0, 1990, 0,
	1958, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1964, 1965, 1971, 1993, 1970, 1966, 0, 1963, 1961, 1962,
	1954, 1955, 1956, 1957, 1959, 1960, 0, 0, 0, 0,
	0, 0, 1950, 1951, 0, 1983, 1984, 1985, 1994, 1995,
	1996, 0, 0, 1991, 1979, 0, 2001, 0, 0, 0,
	0, 0, 0, 1980, 1982, 1987, 1981, 0, 0, 0,
	0, 0, 0, 0, 1953, 0, 0, 0, 1974, 0,
	1997, 0, 1998, 0, 2000, 0, 0, 0, 0, 1967,
	1968, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2006, 0, 0, 0, 0, 1992, 1989, 0, 0,
	1952, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1972, 1973, 0, 0, 0, 0, 0, 0, 0,
	1969, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2005, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1999, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1988, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2003, 0, 0, 0, 0, 1975, 1976,
	1977, 1978, 0, 0, 0, 0, 1990, 0, 1958, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1964, 1965,
	1971, 1993, 1970, 1966, 0, 1963, 1961, 1962, 1954, 1955,
	1956, 1957, 1959, 1960, 0, 0, 0, 0, 0, 0,
	1950, 1951, 0, 1983, 1984, 1985, 1994, 1995, 1996, 0,
	0, 1991, 1979, 0, 2001, 0, 0, 0, 0, 0,
	0, 1980, 1982, 1987, 1981, 0, 0, 0, 3513, 0,
	0, 0, 1953, 0, 0, 0, 1974, 0, 1997, 0,
	1998, 0, 2000, 0, 0, 0, 0, 1967, 1968, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2006,
	0, 0, 0, 0, 1992, 1989, 0, 0, 1952, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1972,
	1973, 0, 0, 0, 0, 0, 0, 0, 1969, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2005, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1999,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1988, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2003, 0, 0, 0, 0, 1975, 1976, 1977, 1978,
	0, 3540, 0, 0, 1990, 0, 1958, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1964, 1965, 1971, 1993,
	1970, 1966, 0, 1963, 1961, 1962, 1954, 1955, 1956, 1957,
	1959, 1960, 0, 0, 0, 0, 0, 0, 1950, 1951,
	0, 1983, 1984, 1985, 1994, 1995, 1996, 0, 0, 1991,
	1979, 0, 2001, 0, 0, 0, 0, 0, 0, 1980,
	1982, 1987, 1981, 0, 0, 0, 0, 0, 0, 0,
	1953, 0, 0, 0, 1974, 0, 1997, 0, 1998, 0,
	2000, 0, 0, 0, 0, 1967, 1968, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2006, 0, 0,
	0, 0, 1992, 1989, 0, 0, 1952, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1972, 1973, 0,
	0, 0, 0, 0, 0, 0, 1969, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2005, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1999, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1988, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2003,
	0, 0, 0, 0, 1975, 1976, 1977, 1978, 0, 0,
	0, 0, 1990, 0, 1958, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1964, 1965, 1971, 1993, 1970, 1966,
	0, 1963, 1961, 1962, 1954, 1955, 1956, 1957, 1959, 1960,
	0, 0, 0, 0, 0, 0, 1950, 1951, 0, 1983,
	1984, 1985, 1994, 1995, 1996, 0, 0, 1991, 1979, 0,
	2001, 0, 0, 0, 0, 0, 0, 1980, 1982, 1987,
	1981, 0, 0, 0, 0, 0, 0, 0, 1953, 0,
	0, 0, 1974, 0, 1997, 0, 1998, 0, 2000, 0,
	0, 0, 0, 1967, 1968, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2006, 0, 0, 0, 0,
	1992, 1989, 0, 0, 1952, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1972, 1973, 0, 0, 0,
	0, 0, 0, 0, 1969, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2005, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1999, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1988, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2003, 0, 0,
	0, 0, 1975, 1976, 1977, 1978, 0, 0, 0, 0,
	1990, 0, 1958, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1964, 1965, 1971, 1993, 1970, 1966, 0, 1963,
	1961, 1962, 1954, 1955, 1956, 1957, 1959, 1960, 0, 0,
	0, 0, 0, 0, 0, 0, 1950, 1951, 0, 1983,
	1984, 1985, 1994, 1995, 1996, 1991, 1979, 0, 2001, 0,
	0, 0, 0, 0, 0, 1980, 1982, 0, 0, 1987,
	1981, 0, 0, 0, 0, 0, 0, 0, 1953, 0,
	1974, 0, 1997, 0, 1998, 0, 0, 0, 2000, 0,
	0, 1967, 1968, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2006, 0, 0, 1992, 1989,
	0, 0, 0, 0, 1952, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1973, 1972, 0, 0, 0, 0,
	0, 0, 0, 0, 1969, 0, 0, 0, 0, 0,
	0, 0, 2005, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1999, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1988, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2003, 0, 0, 0, 0,
	0, 2511, 1975, 1976, 1977, 1978, 0, 0, 1990, 0,
	0, 0, 1958, 0, 0, 0, 0, 0, 0, 0,
	1964, 1965, 1971, 1993, 1970, 1966, 0, 1963, 1961, 1962,
	1954, 1955, 1956, 1957, 1959, 1960, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1979, 1991, 0, 0, 2001, 0,
	0, 0, 0, 0, 0, 1980, 1982, 0, 0, 0,
	0, 0, 0, 1048, 0, 1100, 0, 0, 1974, 0,
	0, 0, 1997, 0, 1998, 0, 0, 0, 0, 0,
	0, 1967, 1968, 0, 0, 0, 0, 0, 0, 0,
	1056, 0, 0, 0, 0, 0, 1992, 0, 0, 1989,
	0, 0, 0, 0, 0, 0, 0, 1071, 0, 1054,
	1053, 0, 0, 0, 1973, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2005, 0, 1073, 0, 0, 0, 0, 0, 1055, 0,
	0, 0, 0, 1058, 0, 0, 0, 0, 1112, 0,
	1083, 0, 0, 0, 0, 0, 0, 0, 1068, 1069,
	0, 0, 0, 1999, 0, 0, 0, 1088, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1101, 1060, 0, 0, 0,
	0, 0, 1061, 0, 0, 2003, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1990, 0, 0, 0,
	0, 0, 0, 0, 0, 1062, 0, 0, 1964, 1965,
	1971, 1993, 1970, 1966, 1098, 1963, 1961, 1962, 1954, 1955,
	1956, 1957, 1959, 1960, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1979, 0, 0, 0, 1099, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1064, 0, 0, 0, 1974, 0,
	0, 0, 0, 1052, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1065, 1066, 0, 1992, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1074, 1072, 0, 0, 0, 0, 0, 0,
	1067, 0, 0, 0, 1084, 0, 0, 1106, 1105, 0,
	2005, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1109, 1097, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1102, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1990, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1964, 1965,
	1971, 1993, 1970, 1966, 0, 1963, 1961, 1962, 1954, 1955,
	1956, 1957, 1959, 1960, 0, 1059, 0, 0, 1111, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1057, 0, 0, 0, 0, 1092, 1093, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1095, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1103, 1090, 0,
	0, 0, 0, 0, 0, 0, 1110, 1085, 0, 0,
	1077, 1075, 0, 0, 1080, 0, 0, 0, 0, 0,
	1081, 0, 0, 1050, 0, 1104, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1051,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1096, 0, 1094, 0, 1082, 0, 0, 0, 0, 0,
	1079, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1108, 0, 0, 0, 0, 0, 0, 0, 1086,
	0, 1087, 0, 0, 0, 0, 0, 0, 0, 1063,
	1107, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1089, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1091,
}

var sqlPact = [...]int{
	599, -1000, -1000, -1000, -1000, 159, -1000, -1000, 158, 157,
	156, 155, 154, 153, 152, 150, 148, 147, 146, -1000,
	-1000, 141, 138, 136, 134, -1000, -1000, 133, -1000, -1000,
	130, -1000, 128, 121, 119, -1000, -1000, 118, -1000, 117,
	-1000, -1000, -1000, -1000, 116, 114, 113, 100473, 99884, 101060,
	2457, 127529, 109879, 2362, 89294, 126940, 88705, 126351, 2249, 13444,
	125762, 2936, 112, -1000, 125173, 109, 108, 106, -1000, 109290,
	124584, 106936, 106347, 1985, -1000, 104, 102, -1000, 11194, 76879,
	100, 99, 95, 94, 2937, 93, -1000, 92, 91, -1000,
	90, -1000, 14995, 1605, -1000, 89, 88, -1000, 7137, 105758,
	87, 86, 85, 2817, 82, 78, 73932, 77, 74, 72,
	2515, 3053, -1000, -1000, 2210, -1000, -1000, 71, 70, 66,
	65, 64, 63, 61, 60, 59, 58, 57, 56, 55,
	-1000, 54, 50, 44, 43, 38, -1000, 36, 35, 34,
	-1000, 33, -1000, 31, 30, 29, 26, 25, 24, 23,
	22, 21, 19, 18, 17, 14, 13, 12, 147201, -1000,
	-1000, 10, -1000, 1933, 1805, 1803, 1773, 1763, 1757, 1001,
	8, 6, 5, 4, 3, 2, -1, -2, -3, -6,
	-8, -9, -10, -11, -12, -13, -14, -15, -17, -18,
	140, -23, -25, -26, -27, -30, -31, -32, 5044, 3740,
	-1000, 1664, 1028, 1247, 33588, 3184, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 136334, 128116, -33, -94,
	-34, -1000, 3570, 969, 61457, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 211, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 412, 2522, 676, -1000, -1000, -1000, 123995,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2448, -51,
	89881, -1000, 2118, -1000, -1000, -1000, -1000, -1000, 675, -1000,
	2444, 2384, 337, 2380, 89881, -1000, -1000, -1000, 3602, 2627,
	4106, 4105, 4104, 4103, 4101, 135747, 1928, 4099, 2701, 4098,
	4097, 4096, 4095, 4094, 4092, 4089, -1000, 99295, 1100, 98706,
	98117, 3617, 123408, 97528, 122819, 138688, 51804, 938, 3600, -1000,
	-1000, -1000, -1000, -1000, -1000, 128116, -1000, 1098, -1000, -1000,
	4088, 2195, 673, 108701, -1000, -1000, 122230, 2260, -1000, -1000,
	-1000, 935, 1162, 36004, 36004, 36004, 206, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 3613, -1000, -1000, -1000, -1000, 128116,
	2878, 2878, 1445, 1394, 1394, 2878, 2878, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 4087, 4086, 4085, 4084, 4083,
	-1000, -1000, -1000, 88116, 26151, 87527, 86938, 121641, 51200, 96939,
	96350, 4081, 4079, 4077, 50596, 82815, 59049, 3737, 121052, 138099,
	3736, 3735, 1097, 2106, 1528, -1000, -1000, -1000, -1000, -1000,
	-1000, 79229, -55, 79229, 3829, 128116, -1000, 205, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 49992, 777, 49388, 760, 48784,
	419, 120463, -1000, -1000, -1000, -1000, 82216, -1000, 119874, 2626,
	4076, 4069, 1193, 4064, 3496, 1818, 4063, 1975, 1282, 4062,
	4060, 4046, 4044, 4043, 4042, 4041, 1502, 119285, 3182, 118696,
	1855, 137510, 1083, 95761, 101060, 2795, 118107, 1517, 1510, -1000,
	-1000, -1000, -1000, 3297, 3047, 3040, 1305, -1000, -1000, -1000,
	-1000, 65044, 10783, 9440, -1000, -1000, 14253, 117518, 68029, 101060,
	101060, -1000, -1000, -1000, -1000, -1000, -1000, 48180, 687, 47576,
	875, 116929, -1000, -1000, 65641, 3135, 1139, -1000, -1000, -1000,
	-1000, -1000, 116340, 46972, 487, 46368, 774, 128116, -1000, 3181,
	2166, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2364, 1702, 3814, 2885, 81617, 2160, 1457, 3557, 3287, 3245,
	1595, 2103, 3243, 4040, 2727, 3240, 3239, 3233, 3225, 3219,
	1731, 2757, 679, 2750, 32984, 3166, 1895, 45764, 1671, 1575,
	3217, 3214, 3845, 3669, 2078, 2125, 2165, 2169, 86349, 4039,
	4038, 3522, 3213, 3211, 2981, 3195, 2007, -1000, 3134, 1495,
	204, -1000, -1000, -1000, -1000, -1000, -1000, 204, 1513, -1000,
	-1000, -1000, -1000, -1000, 91642, -1000, -1000, 1477, -1000, -1000,
	1477, -1000, -1000, -1000, -1000, -1000, 1356, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1664, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2541, -1000, 2213, -1000, -1000, -1000, 2674, 3480,
	3480, 3480, 3599, 400, 399, -1000, 140, 818, 1176, -1000,
	-1000, 146745, -1000, -1000, 52408, 52408, 52408, 52408, 52408, 52408,
	52408, 52408, 2255, -1000, 670, -1000, -1000, 713, -1000, 668,
	613, 542, -1000, -1000, -1000, -1000, -1000, -1000, 667, -1000,
	-1000, -1000, -1000, -1000, -1000, 3774, -1000, 29223, -1000, -1000,
	-1000, 317, 666, 52408, -1000, -1000, 3875, 3873, 939, -1000,
	202, 967, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 3178, 665, 664, -1000, 662, 660,
	659, 656, 654, -1000, 653, -1000, 652, 650, 647, 644,
	643, 642, 641, 639, -1000, 2136, -1000, -1000, -1000, -1000,
	-1000, -1000, 595, 594, 594, 594, -1000, 1065, -1000, -1000,
	-1000, 223, 592, 222, 588, 587, 586, -1000, 636, 635,
	634, 631, 628, 624, 623, 622, 617, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1063, -1000, -1000, -1000, -1000, 1381,
	-57, 128116, -1000, 412, -57, -1000, -1000, 616, -1000, 37834,
	37834, 37834, -1000, -1000, 2442, 52408, -1000, 3528, -1000, -46,
	-46, 901, 63248, -1000, 60245, 901, 310, 726, 69216, -1000,
	3133, -1000, -1000, 615, 197, -1000, -1000, -1000, -1000, 26748,
	3132, 128116, 128116, 128116, 101060, 101060, 101060, 128116, 4037, 4033,
	3369, 52408, -1000, -1000, 76290, 140450, 101647, 1353, -56, -1000,
	-1000, 3713, 74519, 75703, 3175, 140450, 3174, 3131, 139866, 4032,
	-1000, -1000, -1000, -1000, -1000, 3343, 4029, 4027, 4026, -1000,
	128116, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 263, 3342,
	-1000, -1000, 105169, 263, 3341, -1000, 263, 3338, -1000, 104582,
	-1000, -1000, 2365, 3336, -1000, -1000, 267, 3333, -1000, -1000,
	-1000, 264, 3332, -1000, -1000, 195, -95, 3331, -1000, -1000,
	-1000, -1000, -1000, -1000, 146745, -1000, -1000, -1000, 139277, -1000,
	3530, -1000, 128116, -1000, 52408, -1000, -1000, 3710, 2205, 3529,
	3643, -1000, -1000, -69, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2684, 2663, 1180, 2505, -1000, 3388, 1443, 36004, 3484,
	-1000, -1000, -1000, -1000, -1000, 194, 26748, 3002, -1000, -1000,
	128116, -1000, 128116, 2878, 2878, -1000, -1000, -1000, 3832, 3830,
	2878, 2878, 128116, 128116, -1000, -1000, -1000, -1000, -1000, -1000,
	2851, 3329, 1253, -1000, 2504, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2294, 3325, -1000, 2571, 3323, 1983,
	-1000, -1000, 2357, -1000, 18850, 1414, -1000, -1000, -1000, -1000,
	3416, 3319, -44, -1000, -1000, 2347, -1000, -1000, -1000, -1000,
	143415, -1000, 3045, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1768, -1000, -1000, 2245, 2074, -1000, 1418, 3318,
	-1000, 2882, 2882, 95172, 3340, 67432, 65641, -59, -1000, -1000,
	79229, -59, -1000, -1000, -1000, -99, -1000, 25546, 146745, -1000,
	-1000, -1000, -1000, 1930, 146745, 878, -1000, -1000, 3316, -1000,
	146745, 852, -1000, -1000, 3315, -1000, 2751, -1000, 3169, -1000,
	-1000, 2572, 2569, 1036, -1000, 4025, -1000, -1000, 4024, -1000,
	4021, 4018, 4016, -1000, 1712, 2096, 4006, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 94585, 2441, -1000, -1000, 91055,
	-1000, 2567, 3640, -1000, 93996, 1079, -1000, 1020, 2566, -1000,
	103995, 999, 2562, -1000, 4005, 3611, 2824, 1020, 2561, -1000,
	-1000, -1000, -1000, -1000, 972, -1000, 70981, -1000, 70981, -1000,
	1749, -1000, 135160, -46, 101060, 3774, -1000, -98, -1000, -1000,
	-1000, 969, -1000, 64444, -1000, 64444, 108112, 83412, 1005, 3126,
	72746, 146537, -1000, 1035, -1000, -1000, 146745, -1000, -1000, -1000,
	2744, -1000, -187, 2881, -1000, 83412, 66835, 3122, 2734, -1000,
	146745, -1000, -1000, -1000, -1000, 146745, -1000, -1000, -1000, 83412,
	91055, -1000, 115751, 93407, -1000, -1000, 1426, 2729, -1000, -1000,
	-1000, 65641, 3119, 1422, 83412, 83412, 83412, -1000, 115162, -1000,
	-1000, 2193, 1375, 3518, 2174, 101060, -1000, 2012, -1000, -1000,
	-1000, 3545, 3339, 128116, -1000, -1000, 3168, -1000, 78642, 103408,
	-1000, 102821, -1000, 102234, -1000, 101060, -1000, 101060, -1000, 3999,
	3994, 3993, -1000, -1000, 3992, -1000, 3991, 3536, -1000, 763,
	45160, 146745, 3534, -1000, 3990, 2092, 3166, 146745, -1000, 3337,
	1789, 1770, 128116, -1000, -1000, 128116, -1000, 128116, -1000, -1000,
	-1000, 2490, 1629, -1000, -1000, 2665, -1000, -1000, -1000, 1030,
	-1000, -1000, 101060, 101060, 101060, 101060, 1322, -1000, 44556, -1000,
	-1000, 3210, 3989, 1832, -1000, 1994, -1000, 3118, 3503, -1000,
	3114, 1416, 1911, 193, 3879, 193, -1000, -1000, 268, -1000,
	-1000, -69, -1000, 134573, -1000, 2674, -1000, 128116, -1000, 2675,
	3156, 3165, 1802, 2472, 2768, -1000, 43952, 2733, 56032, 2501,
	140, -1000, -1000, 140, 140, 34796, -1000, -1000, 36004, 818,
	74519, 74519, 26748, 1369, 52408, 52408, 52408, 52408, 52408, 52408,
	52408, 52408, 52408, 52408, 52408, 52408, 52408, 52408, 52408, 52408,
	52408, 52408, 52408, 52408, 52408, 52408, 52408, 52408, 52408, 52408,
	52408, 52408, 52408, 52408, 52408, 52408, 52408, 52408, 52408, 52408,
	2320, 52408, 1349, 52408, 52408, 52408, 52408, 2145, -1000, -1000,
	2073, 452, 2181, 613, -1000, -1000, -1000, 3794, 3794, 3794,
	1126, 1126, 1126, 8546, 8546, 436, 3987, 713, -1000, 52408,
	-1000, 84, 63836, 52408, 27347, -1000, 399, 7469, 2600, -1000,
	398, 27981, -1000, -1000, -1000, 29223, 542, 43318, 52408, 1050,
	146745, -1000, -1000, 1597, 3804, 24941, 3167, 2969, 612, 843,
	842, 32350, 31716, 31082, 30448, 841, 825, 52408, 52408, 52408,
	52408, 52408, 52408, 52408, 52408, -1000, -1000, 3827, -1000, 3804,
	-1000, -1000, -1000, -1000, 3804, 1367, 1326, 3804, -1000, 3804,
	3804, 11508, 11508, 42714, 42110, 41506, 56636, 40902, 52408, 29844,
	40298, 39694, -1000, 58448, 128116, -57, 3707, 52408, 336, -1000,
	144249, -1000, 336, 336, 609, -103, 146745, 2771, 2771, 62054,
	2589, 2289, 2289, 2289, -1000, 901, 19458, 901, 113401, 2315,
	901, 901, 187, 220, 397, 59648, 3528, 113401, 702, 603,
	-36, -37, -38, -1000, -1000, -39, -40, -1000, -1000, 101060,
	600, 27347, 26748, 186, 2128, -104, 2769, 2767, 2763, 2746,
	-1000, 2743, 2440, -1000, -1000, -1000, 1926, -109, 1345, 101060,
	128116, 1592, -79, -1000, 140450, 794, -110, -1000, 1273, 185,
	3804, -1000, -1000, -1000, -1000, -1000, 3979, 3978, -1000, 1062,
	598, 597, 377, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 595, 594, 594, 594, -1000, 223, 592, 222, 588,
	587, 586, -1000, -1000, -1000, -1000, -1000, 3109, 101060, 128116,
	1548, 78055, 89881, -95, 101647, 140450, -52, -1000, -1000, 128116,
	-1000, -1000, -1000, 3975, -1000, 101060, -1000, -1000, 101060, 263,
	3312, -1000, 101060, -1000, 101060, 261, 3310, -1000, -1000, 128116,
	-1000, 101060, 101060, -1000, 128116, 128116, 128116, 140450, 140450, 250,
	-1000, 101060, 818, -111, 1209, -69, -1000, -1000, -1000, -1000,
	1477, -1000, 1883, -1000, -1000, -1000, -1000, -1000, -1000, 1521,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 939, -1000,
	-1000, -1000, -1000, 3811, 3802, -67, -1000, -1000, 26748, -1000,
	1941, -1000, -1000, -1000, -1000, 128116, 128116, -1000, -1000, 128116,
	128116, -1000, -1000, -70, 1686, 525, 1343, -1000, 85760, 2521,
	3521, 3974, 2815, 3508, 1744, -1000, 1620, 583, -1000, 3616,
	91642, 3668, 3680, 1358, -1000, 3106, -1000, -1000, -1000, 931,
	1705, 1875, 1337, 1335, 91642, 2571, -1000, 74519, -1000, 2804,
	3596, 1394, 1473, 1394, 1394, 1525, 1501, -1000, 91642, 1869,
	1333, 1324, 1319, -1000, -1000, 1692, 1655, -1000, -1000, 114575,
	1556, -1000, 1318, 1315, 129290, 3729, 2541, 2316, 744, 2046,
	-1000, 1411, 1313, 3104, -1000, -1000, -72, 3661, 3664, 1358,
	-1000, 3097, 1308, -1000, -1000, -1000, 3591, 101060, 26748, 1654,
	1653, 1641, 1867, 1304, -58, -1000, 3648, 1690, -1000, 91055,
	91055, 110466, 128116, 3749, 83412, -1000, 2564, -1000, -1000, -1000,
	3554, 3553, -1000, -1000, 1303, 1301, -1000, 1075, 7443, 3453,
	-1000, 140450, 1075, 1075, 1969, 3307, 2854, 1799, -1000, 2880,
	879, 2879, -1000, -1000, -1000, 879, 79229, -59, 128116, 177,
	-1000, 84, 52408, 52408, 84, 52408, 84, -1000, 3630, 3306,
	3305, 3971, -1000, -1000, -1000, -1000, -1000, 3968, 2062, 2700,
	-1000, -1000, 581, 2560, 3096, 128116, 229, -1000, 101060, 3202,
	3298, 140450, 2571, 2559, -1000, -1000, 92818, -1000, 3294, 412,
	2557, -1000, 663, 3964, 3290, -1000, 133986, -1000, 3530, 1294,
	3289, 1136, 776, 3706, -1000, 776, 71570, -1000, 128116, -1000,
	-46, 8228, 84586, -112, -117, 395, -1000, 113988, 128116, 128116,
	3470, 2069, 2066, -1000, 1014, 65641, -1000, 65641, -120, -1000,
	-187, 2877, 1603, 65641, -1000, 1005, -147, 879, -1000, 879,
	-1000, 101060, 3164, -1000, 83412, 65641, -1000, 1005, 1005, 1005,
	-1000, -1000, -1000, -1000, 3962, 3961, 3956, 3955, -1000, -1000,
	1019, 101060, 128116, 101060, -1000, 2852, 1707, -1000, 175, -1000,
	140450, -1000, 140450, 128116, 101060, -1000, 1019, 128116, 1019, 128116,
	1019, 128116, 1019, 1019, -1000, -1000, -1000, -1000, -1000, 84,
	-1000, -1000, 146745, -1000, 52408, -1000, -1000, 1608, 3954, 1783,
	-1000, 3163, -1000, 3158, -1000, 1, -1000, -1000, 3820, 1980,
	-1000, 3872, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	3953, 146745, -1000, 1998, -1000, -1000, -1000, -1000, 101060, 101060,
	101060, 101060, 128116, 3415, -1000, 128116, 3410, 3412, 101060, -1000,
	3877, -1000, -1000, 91642, -1000, 2675, 3156, -1000, -1000, -1000,
	-1000, -1000, -1000, 1587, 2396, -1000, 2723, -1000, 1662, -1000,
	-1000, -1000, 146745, 57240, -1000, -1000, 146745, 1945, -1000, 55428,
	54824, -1000, -1000, 1857, 101060, 2784, -1000, 2784, -93, -1000,
	144039, 2721, 101060, -67, 36004, -1000, -1000, -1000, -1000, -1000,
	930, 1532, 1532, 1401, 1401, 1401, 1401, 3621, 6727, 6364,
	573, 6274, 6274, 6246, 6246, 6246, 6246, 6246, 6274, 9456,
	1126, 1126, 9456, 9456, 9456, 9456, 9456, 1126, 1126, 1126,
	6274, 6274, 6274, 1126, 8546, 146955, 12875, 52408, 52408, 1300,
	1908, 452, 11569, 52408, 12804, 12804, 12804, 12804, -1000, 2144,
	-1000, -1000, -1000, -1000, 3089, 580, 56636, 56636, -1000, -1000,
	-1000, -1000, 28602, 52408, -1000, -1000, -1000, -1000, 39060, -1000,
	-1000, 143205, -329, 387, -1000, 174, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 384,
	-92, 101, -1000, 52408, 52408, 52408, 383, -1000, 173, 52408,
	128116, -1000, 17170, 701, -119, -1000, -122, 1491, -1000, 52408,
	-1000, -1000, 1299, -1000, 1296, 1292, 1289, -1000, 577, 382,
	-1000, 170, -1000, 2278, 571, 570, 52408, -1000, -1000, -1000,
	-1000, -1000, 142997, -1000, -1000, 142789, -1000, -1000, 142581, -1000,
	-1000, 142373, -1000, -1000, -1000, -1000, -1000, 146329, 16678, 15225,
	13593, 5446, 12671, 12037, -127, 378, -128, 374, 923, 907,
	373, 371, 368, -129, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -135, 367, -1000, 3083,
	-92, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 366,
	-1000, 365, -1000, 146121, -92, 362, 5650, -1000, 56636, 56636,
	56636, 56636, 360, -1000, 143831, -1000, 145913, 38456, 38456, 38456,
	359, 145705, 52408, -92, -144, -1000, -154, -1000, -1000, -1000,
	-1000, 514, -157, 1003, 37834, 60858, 26748, -1000, 1003, 1003,
	52408, -1000, 52408, 2741, -1000, -1000, -1000, -1000, 2739, 2389,
	2771, 62054, -1000, -1000, -1000, -1000, 113401, -1000, 3774, 3061,
	-1000, 113401, -1000, -1000, 128116, 412, -1000, 113401, 113401, 26748,
	901, -1000, 901, 113401, 629, -1000, -1000, -1000, -1000, -1000,
	355, 73343, 101, 169, 26748, 1020, -1000, -1000, 2861, 2861,
	2861, 2861, 2861, 101060, -1000, -1000, 140450, 1286, -65, -68,
	2876, 2872, 3745, -279, -1000, 2173, -1000, 74519, -1000, 710,
	1111, 26748, -1000, -1000, -1000, 551, -1000, 3804, 3804, -1000,
	3804, 140450, 3080, 279, 2870, 2869, -1000, 2439, 276, -95,
	140450, 3952, -1000, -1000, 263, -1000, 101060, 263, 263, -1000,
	101060, 101060, 2365, -1000, 267, -1000, 264, -1000, -1000, -95,
	-1000, 1027, 36004, -1000, 1477, -1000, -1000, 1647, -1000, 2075,
	-1000, 1309, -1000, -1000, 36004, -1000, 3475, -1000, 1804, -1000,
	-1000, -1000, -1000, 2451, 128116, 128116, 101060, -1000, 111640, 128116,
	-1000, 2272, 140450, -1000, 2553, 133399, 2534, 132812, 74519, -1000,
	-1000, 550, 958, 2720, 2719, 1131, 128116, 128116, 2718, 132225,
	131638, -1000, 3951, 128116, 2232, 52408, 111640, 3586, 2443, 2595,
	84, 84, -1000, 84, -1000, -1000, 549, 1219, 101060, 101060,
	128116, 140450, 101060, 1894, -1000, -1000, -1000, -1000, -1000, 92229,
	-1000, -1000, 1394, -1000, -1000, -1000, 1394, -1000, 1394, 2571,
	1873, 128116, 140450, 101060, 140450, 131051, 2045, 130464, 2041, -1000,
	-1000, 2035, 1848, 128116, -1000, -1000, -1000, -1000, -1000, 1512,
	-1000, 744, 1283, 3077, 52408, 52408, 2192, 84, 84, -1000,
	84, 548, 26748, 2055, -1000, 3160, 128116, 3871, 129877, 3869,
	128116, 128116, 128116, 140450, 3543, 128116, -1000, -147, -61, -156,
	-1000, 830, 827, -99, -1000, 3749, -1000, 824, 2195, 128116,
	140450, -1000, 129290, 7443, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2184, 81018, 1130, 128116, 1418, -1000, -1000, 1828, 1281,
	1280, 91642, 2215, 1826, 1962, 140450, 65641, 1015, 65641, 2835,
	-1000, -1000, 24336, -1000, 146745, 146745, -1000, 146745, -1000, 77466,
	83412, 128116, -1000, -1000, 1069, 128116, 85173, 974, 3283, 70392,
	-99, 1005, 91055, 83412, 3201, 128116, 128116, -1000, -1000, 2571,
	3281, 412, 2552, -1000, 140450, 3705, 3279, 546, 3949, 3948,
	-1000, 101060, 2435, 2551, -1000, -1000, 128703, 3354, 744, 128116,
	1003, 62054, 2111, -1000, 68628, 1116, 128116, 1978, 274, -1000,
	-1000, -1000, -21, 128116, -1000, 723, -1000, -1000, 8228, 8228,
	1005, -156, 544, 66238, -165, -1000, 167, 543, 823, 822,
	-1000, 5026, -1000, -187, -1000, 83412, 1014, 65641, 3073, -187,
	2864, 3072, -1000, -1000, 1026, -1000, 1386, 2856, 1005, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-47, -1000, 1825, 1946, 128116, -95, -95, -78, -1000, -1000,
	166, -65, -1000, 1019, -1000, 1019, -1000, 1019, -1000, -1000,
	-1000, 146745, -1000, -1000, -1000, 1782, 1759, 128116, -1000, 3155,
	-1000, 128116, -1000, -1000, 26748, 128116, 101060, 26748, 101060, 3154,
	3144, -1000, -1000, -1000, 128116, -1000, -1000, 128116, -1000, -1000,
	-1000, -1000, -1000, -1000, 1165, -1000, 1945, 2393, -1000, 542,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2646,
	-1000, -66, 34796, 838, -1000, -1000, 101060, -48, -67, 52408,
	52408, 10526, 10252, 52408, 56636, 56636, -1000, 52408, 9961, -1000,
	-1000, -1000, -1000, -1000, 3071, 541, 52408, 74519, 6416, 6331,
	-1000, 353, 11354, 9456, -1000, 52408, -1000, 5418, -1000, 350,
	37230, -1000, 144665, 96, -171, -1000, 20077, -92, -173, -1000,
	-1000, 709, -1000, 3346, -1000, 52408, 145497, 2609, 2146, 1960,
	1774, 3804, 3868, 23731, -1000, 72158, 1042, 2321, 142165, -1000,
	-1000, -1000, -1000, 74519, 74519, 52408, 52408, -1000, 52408, 52408,
	52408, -1000, -1000, -1000, 3804, 916, -1000, -1000, -1000, 916,
	-1000, -1000, 1394, -1000, 1394, -1000, 52408, -1000, -1000, 3070,
	52408, -1000, 74519, 74519, 56636, 56636, 56636, 56636, 56636, 56636,
	56636, 56636, 56636, 56636, 56636, 56636, 56636, 56636, 56636, 56636,
	56636, 56636, 56636, 56636, 2714, 56636, 3775, 3775, 3775, 837,
	-1000, 3143, 3070, 52408, 52408, 74519, 339, 335, 334, -1000,
	52408, -92, -1000, -1000, 5345, 540, -1000, 2633, -1000, 2962,
	-1000, 52408, -1000, -159, -1000, 3528, -1000, -1000, 2962, 2962,
	-174, 146745, 62054, 62054, -1000, 539, 52408, 2738, -1000, -1000,
	697, -327, -1000, 821, -1000, -1000, -1000, -1000, -1000, -1000,
	819, -1000, 412, -1000, -1000, -1000, 163, 113401, 113401, 696,
	-1000, -176, -1000, -1000, -179, -1000, 3704, 333, 26748, -1000,
	1003, 3677, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2725,
	-279, 140450, 140450, 1822, 1814, 2374, -1000, 2979, 3866, -1000,
	3815, 707, 695, 162, 3804, 327, 326, 324, -95, 140450,
	140450, 1813, 1810, 75116, 140450, -1000, -1000, -1000, 263, -1000,
	-1000, -1000, 261, -1000, -1000, -1000, -1000, 2833, -1000, -69,
	-1000, -1000, -1000, 52408, -1000, 988, -1000, -1000, 3519, 535,
	1278, 1274, -1000, -181, -1000, 817, -1000, -1000, -1000, -1000,
	-1000, 3029, -1000, 3275, -1000, 2548, -1000, 1082, 2543, 1672,
	-1000, 52408, 533, 2822, 532, 530, 3946, 2157, 3945, 1133,
	3274, 2365, 3273, 2365, -1000, -1000, -1000, 918, -1000, 146745,
	-182, -1000, 2443, -1000, 528, 524, -1000, -70, 1679, 511,
	1270, 1025, -1000, -1000, 52408, 52408, 112814, -1000, 484, 3516,
	-49, -1000, -1000, -1000, 1806, 1269, 1266, -1000, -1000, -1000,
	-1000, -1000, 2571, 1798, 1265, 1264, -1000, -1000, -1000, -1000,
	-1000, 2540, -1000, 128116, -1000, 3272, 128116, 128116, 1024, -1000,
	3208, 3207, 882, 128116, 52408, 52408, 145289, 145081, -1000, 1023,
	-1000, -1000, 52408, -1000, -72, 1260, 3655, 2539, 101060, -1000,
	2365, 3271, 1259, -1000, 1257, -1000, -1000, -1000, 3647, 3645,
	1254, -1000, 110466, 83412, 83412, 3749, 65641, -1000, -1000, -1000,
	83412, -1000, -1000, 80421, -1000, -1000, 1075, 128116, 140450, 101060,
	1872, -1000, -1000, 89881, 90468, 128116, 2854, -95, 879, -1000,
	2641, 879, 1015, 3069, -1000, 2776, -1000, 1021, 101060, 3944,
	321, -184, -74, 74519, -1000, -1000, -1000, -1000, 2534, 101060,
	128116, 1316, 2816, 128116, 128116, 3703, -1000, 2468, 534, 101060,
	934, -1000, 3774, -1000, -1000, -1000, 128116, -1000, -1000, -1000,
	3639, 101060, 3702, 3268, 1020, 84, 101060, 3797, -1000, -1000,
	3701, 101060, 3267, 2429, 2537, 2681, 744, 83999, 1020, 2319,
	-83, -1000, 1978, 36608, 3514, -190, -1000, -1000, -1000, 1003,
	71570, 62054, 52408, 3941, -192, -1000, -1000, -1000, -1000, -1000,
	110466, 83412, 1005, 128116, 128116, 3933, 83412, 83412, 83412, -75,
	522, -1000, 813, 810, 803, -1000, -1000, -1000, -1000, -1000,
	-1000, 802, 801, 799, 793, 1014, -1000, -1000, -187, 65641,
	1014, 65641, 84, -1000, 2348, 101060, 65641, -1000, 23126, 128116,
	2852, -1000, 79816, -1000, -1000, -1000, -1000, -1000, 1019, 3863,
	-99, -1000, -1000, -1000, 2198, 2498, 2198, 1955, 1950, -1000,
	-1000, -1000, 2367, -1000, -1000, -1000, -1000, 2788, 3473, 26748,
	3624, 12804, 52408, 52408, 9114, 6075, 486, 12804, 52408, 52408,
	74519, 7420, -195, 52408, 52408, -1000, 52408, 694, 146745, -1000,
	3860, 52408, 311, 305, -1000, -1000, -1000, 3799, -1000, -1000,
	-1000, 146745, 52408, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	304, -1000, 161, -1000, -1000, -1000, 136921, -1000, 52408, 303,
	3585, -1000, 281, 257, 9546, 308, 141957, 141749, 141541, 248,
	-1000, -1000, 247, 246, 146745, 3143, 146745, -1000, -1000, 899,
	899, 1380, 1380, 1380, 1380, 3775, 1248, 872, 1306, 1051,
	1051, 1051, 1480, 837, 837, 1051, 1051, 1051, 837, 3068,
	2710, 513, 8121, -1000, -1000, 146745, 146745, 244, -1000, -1000,
	-1000, -92, 240, 5345, -1000, 2953, 3584, 146745, -1000, 62054,
	2953, 2953, -1000, -1000, 2389, 128116, 146745, 62054, -1000, 3061,
	-1000, 21305, 20694, -1000, 26748, -1000, -1000, -1000, -1000, 3774,
	-1000, 73343, -1000, 506, -1000, -20, -1000, 3677, -1000, 790,
	-1000, -1000, 83412, 83412, 3929, 3919, -1000, 3853, 3850, 2358,
	3846, 2861, -1000, -279, -170, 128116, 128116, -1000, 2373, -1000,
	689, 3916, 692, 26748, 239, -1000, -1000, -1000, -95, -95,
	128116, 128116, 3062, 101060, 128116, 1327, -95, -1000, -1000, -1000,
	3468, 146745, 3060, 2939, 2935, 128116, 128116, -1000, 111640, 36004,
	1638, 112227, 128116, 3265, -1000, 3259, -1000, 1131, 2692, 141333,
	62651, -1000, 62651, 128116, -1000, -1000, -1000, -1000, 2030, 1765,
	3914, 1187, -1000, 3544, 128116, -1000, 128116, -1000, -1000, -1000,
	111640, -1000, 128116, 128116, 101060, 128116, -1000, 140450, 3226, -201,
	146745, -76, -1000, 785, -1000, 1396, -1000, 22521, 128116, 140450,
	101060, 128116, 140450, 101060, 3258, 1115, 128116, -1000, 1113, 2230,
	-1000, -1000, 3205, -1000, 146745, 144873, 84, 52408, 3215, -202,
	26748, -1000, 3844, 3843, 3255, 3550, -1000, 128116, 3838, 128116,
	101060, 3467, -1000, -1000, -1000, 1016, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1797, 1255, 1252, 2427, 2424, 2355, -78,
	2215, 1015, -80, 501, -1000, 784, -1000, -1000, 780, 779,
	1015, -1000, 83412, 65641, 3913, 412, -1000, 2813, -1000, 107523,
	85173, 2353, -1000, -1000, 500, 128116, 128116, 499, -1000, 84,
	-1000, 3911, 111640, 496, -1000, 2335, -1000, 684, -1000, 140450,
	2571, 84, 101060, -1000, 1012, 412, 237, -81, -1000, 3293,
	1127, 26748, 101060, 3236, 2694, 744, 83999, -1000, 1294, 2768,
	-1000, -82, -1000, 593, 84, 2319, -1000, -83, 146745, -1000,
	772, -203, 236, -1000, 3466, -1000, -1000, -204, -1000, -1000,
	3632, 3632, 83412, 65641, 83412, 83412, 83412, 65641, 83412, -1000,
	1014, 879, -1000, -187, -1000, 2660, -1000, 1005, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 26748, 1696, -1000, 495,
	489, -1000, -1000, -1000, -1000, 3473, 12804, 12804, 52408, 52408,
	52408, 12804, 7420, -209, -1000, 12804, 12804, -92, -1000, -1000,
	144665, -1000, -1000, -1000, 146745, -1000, 21916, 2217, -1000, 141070,
	-1000, 34796, -1000, -1000, 52408, 52408, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 56636, 3030, 485, 74519, -1000, -1000,
	235, 1040, 52408, 54220, 3528, 1040, 1040, -1000, -211, -1000,
	-1000, -1000, 3774, -1000, 3774, -20, -1000, -1000, 3910, 26748,
	-1000, 83412, -1000, -1000, -1000, -1000, -1000, 3909, 3907, 2518,
	3905, 3904, -1000, -1000, -1000, 3185, -189, -197, -1000, 688,
	-1000, 3902, -1000, -1000, 143, 142, 140450, 3022, 125, 2850,
	-1000, 84, -1000, -1000, -1000, -1000, -1000, -1000, 2849, 3700,
	-1000, 2031, -1000, 128116, 128116, -1000, 128116, -1000, 26748, 128116,
	2977, 1312, -1000, 958, 2713, 471, 56636, 1160, 101060, 855,
	2902, 2894, -1000, 3726, 3577, 2911, -216, -1000, 128116, 52408,
	128116, -222, -223, 2516, -1000, -1000, 1159, 1295, 52408, 1150,
	-1000, -1000, -1000, 74519, 470, 2365, 2365, -1000, -224, -229,
	-1000, -1000, -1000, 52408, 1250, 128116, 35400, -1000, 3901, 3516,
	-1000, -1000, -1000, -1000, -1000, -1000, 128116, 128116, -1000, 128116,
	128116, -1000, 52408, -1000, 144457, 52408, 1241, -1000, -1000, -1000,
	3837, 2365, 26748, 2365, -1000, 2365, 3550, 1181, 2452, 128116,
	140450, 101060, 1942, 1942, 3036, -1000, -1000, -1000, 2546, 2546,
	83412, 65641, 65641, -1000, -84, 1015, -1000, 3698, 2199, 3899,
	-1000, -1000, -1000, -1000, 2711, -1000, -1000, -1000, 128116, 2709,
	2926, 62651, 469, 464, 128116, 1006, -1000, -230, 85173, 974,
	957, -1000, -1000, -1000, -1000, 412, -1000, 2819, 3697, -1000,
	3836, 462, 459, 128116, 2419, 455, 26748, 3510, 744, 83999,
	-1000, 3354, 1978, -1000, 2531, 128116, 3504, -1000, 2768, 452,
	-1000, 1005, 449, 1005, -1000, -232, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 3693, 1014, -85, -1000, 834, 691,
	-1000, -1000, -1000, 101060, 101060, 52408, 52408, -1000, 12804, 12804,
	12804, -1000, 231, -1000, -1000, 2319, 3574, -1000, -87, 141040,
	18820, 966, 56636, 74519, -235, -1000, -1000, 128116, 146745, -88,
	-1000, 146745, 444, 441, 376, -1000, -1000, -1000, 683, 682,
	-1000, -1000, -1000, -1000, 3898, -1000, -1000, -1000, 140450, 140450,
	3896, -1000, 140450, 140450, -95, 140450, 140450, 1767, -1000, 111053,
	128116, -1000, -1000, 1672, 2604, -1000, -1000, 128116, 2536, -1000,
	-1000, -1000, 989, 52408, 8121, 56636, 440, 52408, -1000, 438,
	437, 3692, 3400, -1000, 2806, 2998, 2026, 62651, -1000, 3473,
	-1000, 18418, -1000, 1125, 2054, -1000, -1000, -1000, -1000, 146745,
	56636, 3550, 62651, -1000, -1000, 431, 428, 146745, 427, 770,
	3012, -1000, -1000, -1000, -1000, -99, -99, -1000, 146745, 84,
	146745, 425, 3655, -1000, -1000, -1000, -1000, 2365, 101060, 767,
	-1000, -1000, -1000, 1240, -1000, -1000, -1000, -1000, 3894, 3893,
	3008, 89881, -1000, -237, -1000, -1000, -1000, 2057, 84, 974,
	-1000, -1000, 2353, 418, -1000, 1002, 2740, 2740, -238, 62651,
	62651, -243, 2404, 2814, -1000, 227, 3690, 957, -1000, 3770,
	-1000, 3685, 3465, -1000, 84, -1000, 3797, 62651, -1000, 101060,
	62651, 2414, 2123, 2667, 83999, -1000, 2681, -1000, -1000, -244,
	128116, 1978, -1000, -1000, 83412, -1000, -1000, -1000, 1263, -1000,
	2660, -1000, 128116, -1000, 128116, -1000, -1000, -245, -246, -1000,
	2290, 52408, 34796, -1000, -1000, 966, -252, -1000, -91, -1000,
	3682, 54220, 3892, 3890, 3889, -1000, -1000, -1000, -279, -279,
	-1000, -95, -95, -95, -95, 128116, -1000, 2020, -1000, 2534,
	-1000, -1000, 3235, -1000, 2950, 417, 18155, 8121, 2635, 128116,
	17459, 2571, 2571, -1000, 3681, 2992, -1000, -1000, 2192, 415,
	-1000, -1000, -1000, -1000, 838, 128116, 1002, 2945, 101060, 8121,
	1129, -253, 2198, 2198, 52408, 34192, 2228, -1000, 52408, -1000,
	-1000, 3550, 65641, 140450, -1000, -1000, 140450, 2411, -1000, 2996,
	3787, -1000, 2404, 128116, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1125, -254, -255, -1000,
	-1000, 3540, -1000, 3464, 2813, 84, -1000, -1000, 84, 3888,
	1012, 224, -261, 1127, -262, 101060, 2034, -1000, 744, -1000,
	2694, 1003, 3361, -1000, -263, 3786, -1000, -264, -269, -1000,
	-1000, 218, 53616, 53616, 53616, -92, -93, -1000, 128116, 414,
	-1000, -1000, -1000, -1000, -1000, -1000, 120, -1000, -1000, 3199,
	881, -1000, 836, 2004, 217, 1143, 213, 122, -1000, -1000,
	-1000, 2911, -1000, 128116, -1000, -1000, -1000, 881, 412, -1000,
	52408, 1125, -270, -1000, 1110, -271, -1000, 1105, -272, -1000,
	3006, -1000, -280, 2365, -1000, -279, 250, 1942, 1007, 3625,
	-1000, -1000, -1000, 2651, -281, -1000, -1000, 2026, 1125, 2192,
	2570, -1000, 2199, 1006, -1000, -1000, -1000, -1000, 1125, 409,
	2026, 408, 1536, 744, -1000, -1000, 1394, 3510, 3248, 1455,
	1005, -1000, -1000, -1000, -1000, -1000, 3247, -1000, 57844, 2360,
	1935, 143623, 3247, 3247, -1000, -1000, 140450, 128116, 1002, 3609,
	-1000, 858, 846, 1583, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1003, -282, -1000, 2635, 146745, 1002, -1000, 2198,
	2843, -1000, 2198, 3000, -1000, 2226, -1000, -1000, -1000, -1000,
	2999, -1000, 1905, 3758, -1000, -1000, 1002, 128116, 2192, 2026,
	1002, 1923, 1921, 3887, 974, 2404, 2026, 62651, 2192, 62651,
	2176, -1000, 128116, -1000, 2123, 1378, -1000, 1743, -1000, -1000,
	1966, 3719, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -95,
	-1000, -1000, 749, -1000, 3385, -1000, 1146, 2300, 2300, -1000,
	-1000, 836, -1000, -1000, 407, -1000, 406, -1000, 140450, 2334,
	-1000, -1000, -1000, -1000, 1002, 2192, 1003, -1000, 3886, -1000,
	2404, -1000, 2192, -288, 1002, -289, 2233, -1000, -1000, -99,
	2034, -1000, 1685, 71570, 1929, -1000, -1000, 2313, 53012, 52408,
	-1000, 3754, -1000, -1000, 2737, -1000, 2911, 52408, 52408, 250,
	69804, 1003, 1002, -1000, -1000, 2651, 1002, 1125, 1003, 2026,
	-1000, 744, 1536, 71570, -278, -1000, -1000, -1000, 146745, -1000,
	-1000, -1000, -1000, -290, -297, -1000, -156, 110466, -1000, 1003,
	-1000, 1003, 2026, -1000, 2192, 140450, 2176, -278, -1000, 2192,
	1226, -298, -1000, -1000, 2192, 1002, -1000, -1000, -1000, -1000,
	-1000, 265, -1000, 1002, 1003, 52408, 1003, -1000, -305, -1000,
	2192, -1000,
}

var sqlPgo = [...]int{
	0, 4741, 4738, 4736, 4735, 4733, 4729, 4724, 4723, 4722,
	4720, 4716, 4715, 4712, 4710, 160, 4706, 4702, 4701, 4700,
	4699, 4698, 4695, 4694, 4693, 4692, 4689, 4688, 4687, 4685,
	4679, 4678, 4675, 4674, 4673, 4672, 4669, 4668, 4667, 4666,
	4663, 4661, 4659, 4656, 4654, 4652, 4651, 4650, 4649, 4648,
	4646, 4645, 4644, 4643, 4642, 4641, 4640, 4638, 4637, 4636,
	4635, 4634, 4633, 4630, 4629, 4628, 4627, 4624, 4619, 4617,
	4615, 4610, 4609, 62, 4608, 4607, 4606, 4605, 4604, 4603,
	4602, 4600, 4599, 4598, 4597, 4595, 4594, 4592, 4591, 4590,
	4589, 4588, 4587, 68, 4585, 298, 4584, 4582, 4581, 4580,
	4579, 4578, 4577, 4576, 4575, 4574, 4573, 4572, 297, 4571,
	129, 178, 4570, 4569, 4111, 4568, 4566, 295, 4565, 4563,
	4562, 4560, 4557, 305, 4553, 4552, 4550, 4548, 4547, 280,
	4546, 4545, 4544, 4543, 4542, 4541, 52, 131, 4538, 4537,
	1325, 4536, 4535, 4534, 4533, 4532, 4531, 4530, 265, 275,
	4529, 4528, 4526, 259, 187, 4525, 293, 4524, 4523, 4522,
	4521, 4517, 4515, 4514, 4513, 4510, 4508, 4507, 4505, 4502,
	4501, 4500, 4499, 4498, 4496, 4494, 4493, 4492, 4490, 4489,
	4488, 4487, 4486, 4484, 4481, 4480, 4479, 4478, 4477, 4476,
	4475, 4473, 4469, 4468, 4467, 4466, 4465, 4464, 4463, 257,
	227, 123, 4462, 4460, 291, 289, 4459, 4458, 4456, 4452,
	4450, 3642, 4444, 4443, 4440, 4439, 4438, 4437, 4424, 4423,
	4419, 138, 11, 53, 4418, 4416, 88, 96, 93, 76,
	100, 102, 4408, 4407, 122, 4406, 142, 115, 4405, 117,
	108, 22, 18, 271, 249, 11757, 247, 4403, 4399, 4398,
	254, 208, 4396, 251, 4395, 4394, 4390, 4388, 4387, 4385,
	85, 57, 216, 4384, 4383, 145, 182, 188, 193, 184,
	181, 125, 61, 106, 83, 63, 40, 15, 81, 229,
	20, 7, 281, 4382, 273, 6, 149, 10, 33, 4371,
	4370, 4368, 4367, 4002, 116, 4366, 287, 253, 176, 4364,
	4362, 4360, 704, 4358, 4357, 50, 237, 202, 140, 104,
	44, 134, 4355, 155, 179, 41, 4353, 172, 169, 4352,
	4350, 98, 97, 8886, 11643, 4349, 4348, 121, 73, 128,
	268, 192, 189, 215, 186, 133, 165, 174, 4345, 64,
	4341, 222, 221, 185, 77, 4340, 264, 4339, 3686, 90,
	194, 163, 6391, 4338, 4337, 4335, 92, 4334, 105, 4333,
	4332, 70, 16, 4, 2, 150, 37, 36, 3, 4331,
	24, 132, 49, 31, 4329, 26, 4327, 4326, 4325, 4324,
	51, 4323, 45, 170, 4322, 4321, 306, 4320, 95, 67,
	48, 4319, 42, 235, 4318, 239, 148, 4317, 4316, 258,
	191, 4315, 114, 234, 4313, 4311, 4310, 4309, 4305, 303,
	139, 1, 135, 4301, 4300, 151, 4299, 56, 252, 211,
	4298, 65, 4296, 4295, 190, 60, 147, 301, 154, 231,
	119, 238, 199, 241, 4294, 4293, 4289, 210, 4288, 4287,
	230, 156, 4286, 4285, 267, 310, 94, 43, 84, 250,
	82, 200, 168, 4284, 217, 4282, 4279, 309, 195, 226,
	39, 9, 14, 109, 110, 4277, 5, 245, 167, 244,
	124, 4274, 7461, 2621, 2306, 243, 4272, 161, 127, 79,
	159, 166, 284, 103, 4269, 4267, 3672, 4264, 4255, 4254,
	4242, 197, 4237, 4232, 4229, 153, 164, 207, 4227, 126,
	75, 55, 25, 173, 262, 300, 120, 233, 266, 261,
	4226, 4225, 4224, 201, 4223, 91, 136, 4222, 212, 276,
	71, 4219, 204, 4218, 162, 286, 74, 157, 4217, 246,
	4216, 4215, 4212, 4211, 4210, 4208, 4207, 270, 248, 4206,
	4205, 4202, 32, 206, 4200, 283, 496, 213, 46, 58,
	198, 87, 3836, 4199, 183, 236, 66, 13, 4198, 274,
	4197, 4993, 69, 4196, 0, 14584, 9967, 12749, 13975, 4192,
	3940, 4191, 4189, 4188, 223, 78, 4186, 4185, 4184, 112,
	4183, 86, 4182, 4181, 72, 4180, 27, 19, 21, 30,
	28, 282, 158, 4179, 4178, 214, 152, 143, 4177, 304,
	240, 4175, 4174, 4173, 4172, 99, 4171, 47, 4170, 38,
	4169, 4168, 54, 12, 29, 4167, 4165, 171, 4163, 118,
	232, 180, 4162, 175, 4159, 89, 141, 4157, 4155, 277,
	219, 225, 101, 4154, 294, 4153, 209, 4152, 4151, 23,
	4149, 4148, 256, 113, 111, 59, 260, 137, 35, 4147,
	196, 220, 4146, 4142, 177, 4141, 4139, 4138, 285, 4137,
	3644, 279, 4136, 34, 4135, 4124, 4121, 8, 4120, 4117,
	218, 3416, 4116, 4115, 17, 4113, 203,
}

var sqlR1 = [...]int{
	0, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 3, 3, 3, 3, 3, 3, 3, 6,
	6, 6, 6, 6, 6, 6, 6, 6, 6, 6,
	6, 6, 6, 6, 6, 6, 6, 6, 6, 6,
	6, 6, 6, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 13, 13, 9, 9, 9, 9,
	10, 10, 10, 10, 10, 57, 57, 11, 11, 11,
	11, 11, 11, 11, 11, 11, 11, 11, 11, 11,
	11, 40, 42, 41, 35, 35, 36, 36, 37, 38,
	38, 43, 45, 44, 12, 12, 12, 8, 8, 8,
	8, 8, 8, 8, 8, 21, 21, 46, 46, 22,
	22, 48, 48, 23, 23, 49, 49, 629, 629, 629,
	630, 630, 631, 631, 631, 26, 51, 19, 20, 20,
	20, 20, 632, 632, 632, 632, 39, 27, 52, 32,
	32, 32, 32, 32, 224, 224, 224, 224, 25, 25,
	47, 47, 268, 268, 267, 267, 267, 267, 267, 267,
	267, 267, 267, 267, 267, 267, 267, 267, 267, 267,
	267, 267, 267, 267, 267, 267, 267, 267, 267, 267,
	267, 267, 267, 267, 628, 628, 270, 270, 269, 257,
	257, 258, 258, 259, 259, 633, 633, 271, 271, 271,
	272, 272, 16, 16, 16, 16, 16, 16, 16, 16,
	16, 16, 526, 526, 526, 557, 557, 557, 557, 559,
	559, 653, 653, 654, 654, 654, 654, 654, 139, 139,
	423, 423, 423, 61, 61, 61, 61, 61, 623, 623,
	226, 226, 226, 228, 228, 227, 227, 227, 227, 227,
	84, 84, 639, 639, 638, 637, 637, 637, 640, 640,
	640, 225, 225, 225, 135, 135, 135, 135, 135, 135,
	135, 135, 136, 136, 137, 137, 649, 649, 649, 229,
	229, 229, 231, 231, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 230, 230, 230, 230, 236, 18, 18,
	18, 118, 118, 118, 118, 118, 118, 118, 113, 113,
	561, 561, 562, 562, 220, 220, 221, 221, 221, 221,
	222, 222, 223, 223, 223, 76, 76, 233, 233, 235,
	235, 234, 234, 234, 234, 234, 234, 234, 234, 234,
	234, 234, 234, 234, 234, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 64, 64, 64, 64, 64, 65,
	65, 65, 65, 65, 65, 66, 66, 66, 66, 66,
	66, 67, 67, 74, 74, 74, 74, 74, 74, 74,
	74, 201, 201, 77, 77, 77, 77, 77, 77, 77,
	77, 77, 77, 77, 77, 81, 81, 81, 81, 81,
	655, 655, 655, 655, 655, 655, 655, 655, 655, 655,
	655, 655, 655, 655, 655, 655, 655, 655, 655, 656,
	656, 657, 657, 658, 658, 659, 659, 659, 659, 659,
	659, 659, 659, 659, 659, 659, 659, 659, 659, 659,
	659, 659, 659, 659, 79, 79, 79, 79, 79, 79,
	79, 79, 79, 79, 79, 79, 79, 79, 79, 79,
	79, 90, 90, 384, 384, 347, 347, 91, 91, 91,
	92, 92, 93, 93, 78, 78, 620, 620, 621, 621,
	621, 621, 517, 517, 95, 95, 422, 422, 96, 96,
	96, 96, 96, 96, 97, 97, 97, 97, 97, 97,
	97, 98, 98, 98, 98, 98, 98, 98, 98, 98,
	98, 98, 98, 98, 98, 105, 105, 105, 105, 105,
	106, 106, 106, 103, 103, 103, 100, 100, 100, 99,
	99, 99, 104, 104, 104, 619, 333, 333, 102, 102,
	102, 101, 101, 101, 400, 400, 107, 107, 107, 107,
	348, 108, 108, 108, 108, 108, 108, 108, 108, 111,
	111, 110, 110, 110, 110, 110, 110, 110, 110, 110,
	110, 110, 110, 110, 110, 110, 110, 110, 110, 110,
	110, 110, 110, 110, 110, 110, 110, 110, 110, 110,
	110, 110, 112, 112, 112, 112, 112, 112, 112, 112,
	112, 112, 112, 112, 519, 519, 4, 4, 263, 263,
	262, 262, 262, 262, 5, 5, 5, 266, 266, 265,
	264, 109, 109, 109, 484, 484, 114, 114, 114, 438,
	438, 115, 115, 115, 115, 115, 116, 116, 116, 116,
	116, 116, 116, 116, 116, 116, 138, 138, 138, 138,
	138, 138, 138, 138, 138, 138, 138, 138, 138, 138,
	625, 625, 393, 393, 296, 296, 296, 296, 127, 127,
	127, 127, 128, 128, 128, 128, 129, 129, 206, 206,
	145, 145, 145, 145, 144, 144, 144, 144, 144, 144,
	144, 144, 68, 68, 68, 69, 69, 70, 70, 71,
	71, 72, 72, 73, 73, 73, 73, 73, 148, 148,
	31, 31, 31, 31, 149, 149, 650, 650, 151, 147,
	147, 147, 147, 147, 147, 147, 146, 146, 150, 150,
	150, 150, 152, 154, 154, 154, 154, 154, 153, 153,
	153, 153, 153, 155, 155, 551, 551, 408, 408, 549,
	549, 571, 571, 550, 550, 354, 354, 354, 354, 354,
	355, 355, 355, 560, 560, 560, 560, 560, 560, 156,
	156, 156, 156, 156, 156, 156, 156, 156, 156, 156,
	156, 156, 156, 156, 156, 156, 156, 156, 156, 156,
	156, 156, 156, 156, 156, 156, 156, 156, 156, 156,
	156, 156, 156, 156, 156, 156, 156, 156, 156, 156,
	156, 156, 156, 156, 156, 156, 156, 156, 156, 156,
	156, 156, 156, 156, 156, 156, 156, 156, 156, 156,
	156, 156, 156, 156, 156, 156, 156, 156, 156, 156,
	156, 156, 156, 156, 156, 207, 207, 207, 208, 208,
	213, 213, 214, 214, 214, 215, 215, 215, 212, 212,
	212, 209, 209, 210, 210, 211, 211, 211, 211, 211,
	211, 211, 211, 211, 211, 218, 218, 216, 216, 217,
	217, 661, 661, 660, 660, 219, 219, 219, 219, 219,
	182, 182, 182, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 409, 409, 185, 185,
	185, 169, 169, 157, 157, 157, 157, 157, 157, 157,
	157, 232, 232, 232, 232, 162, 162, 162, 162, 162,
	162, 162, 162, 163, 163, 163, 158, 158, 171, 171,
	171, 171, 171, 164, 164, 165, 165, 165, 166, 166,
	166, 166, 193, 193, 168, 168, 170, 170, 170, 170,
	170, 170, 170, 170, 170, 159, 159, 159, 159, 173,
	173, 173, 173, 445, 445, 445, 199, 199, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 196, 196, 196, 196, 196, 196,
	641, 641, 642, 642, 642, 189, 189, 189, 189, 189,
	189, 498, 498, 183, 183, 183, 183, 188, 188, 188,
	188, 191, 191, 191, 191, 428, 428, 180, 180, 180,
	181, 181, 181, 186, 186, 198, 187, 385, 385, 184,
	184, 190, 190, 190, 190, 192, 192, 192, 160, 160,
	160, 160, 160, 160, 160, 160, 160, 161, 161, 161,
	161, 194, 194, 179, 179, 195, 195, 195, 195, 195,
	195, 195, 195, 195, 195, 195, 662, 662, 175, 175,
	175, 174, 174, 174, 174, 177, 177, 178, 178, 178,
	178, 178, 178, 178, 176, 167, 197, 622, 622, 617,
	617, 617, 617, 617, 617, 617, 617, 617, 617, 618,
	618, 618, 618, 618, 624, 624, 119, 119, 119, 119,
	119, 119, 119, 130, 130, 130, 130, 130, 130, 130,
	133, 133, 120, 120, 120, 120, 120, 120, 120, 123,
	123, 121, 121, 121, 121, 122, 122, 85, 85, 85,
	85, 85, 17, 17, 17, 86, 86, 287, 287, 241,
	241, 241, 372, 372, 242, 242, 362, 362, 362, 362,
	237, 237, 238, 238, 239, 240, 240, 87, 87, 663,
	663, 663, 634, 634, 634, 635, 635, 635, 635, 635,
	635, 356, 356, 357, 357, 464, 464, 464, 464, 464,
	360, 360, 360, 361, 361, 361, 361, 361, 361, 361,
	361, 361, 370, 371, 371, 363, 363, 369, 368, 368,
	367, 367, 366, 366, 364, 365, 365, 365, 374, 374,
	373, 376, 376, 375, 463, 580, 580, 582, 582, 582,
	582, 582, 582, 582, 584, 584, 584, 584, 584, 584,
	584, 584, 584, 584, 584, 584, 584, 584, 584, 584,
	584, 446, 446, 664, 664, 665, 666, 578, 578, 578,
	579, 574, 574, 575, 575, 575, 575, 575, 358, 358,
	359, 359, 359, 359, 576, 577, 391, 391, 502, 581,
	581, 583, 583, 585, 667, 667, 667, 667, 667, 667,
	668, 668, 668, 462, 462, 461, 461, 460, 460, 382,
	382, 586, 586, 586, 586, 587, 587, 587, 587, 587,
	590, 589, 588, 588, 588, 588, 588, 89, 89, 89,
	425, 425, 424, 424, 426, 426, 426, 426, 426, 426,
	426, 426, 426, 426, 426, 426, 426, 426, 426, 426,
	426, 426, 203, 203, 299, 299, 299, 83, 83, 83,
	14, 14, 14, 14, 14, 14, 14, 314, 314, 15,
	15, 15, 15, 636, 636, 636, 88, 88, 88, 88,
	88, 88, 380, 380, 380, 298, 298, 298, 298, 298,
	298, 298, 298, 298, 298, 298, 298, 298, 298, 298,
	298, 298, 298, 298, 298, 298, 298, 298, 298, 298,
	298, 627, 627, 626, 626, 300, 300, 670, 670, 94,
	94, 94, 94, 94, 94, 94, 94, 520, 520, 521,
	521, 82, 82, 82, 82, 82, 447, 447, 444, 444,
	443, 443, 390, 390, 500, 500, 500, 501, 304, 304,
	305, 305, 260, 260, 260, 34, 33, 24, 24, 28,
	28, 29, 29, 286, 286, 286, 286, 286, 286, 286,
	286, 286, 30, 30, 54, 54, 54, 54, 55, 55,
	55, 55, 58, 58, 59, 59, 53, 53, 53, 53,
	56, 56, 50, 50, 60, 60, 60, 60, 60, 643,
	645, 645, 644, 644, 648, 648, 648, 648, 648, 648,
	646, 646, 335, 335, 647, 647, 651, 651, 652, 652,
	126, 126, 131, 131, 131, 131, 131, 132, 132, 132,
	132, 134, 134, 134, 134, 143, 143, 202, 202, 202,
	202, 202, 202, 202, 62, 62, 62, 62, 75, 75,
	75, 75, 141, 672, 672, 672, 142, 142, 142, 671,
	671, 297, 297, 457, 457, 458, 458, 673, 673, 459,
	459, 459, 459, 459, 290, 289, 291, 291, 292, 292,
	80, 80, 80, 280, 280, 279, 281, 281, 282, 282,
	277, 277, 563, 563, 284, 284, 284, 285, 285, 273,
	273, 274, 274, 275, 275, 276, 276, 288, 288, 558,
	558, 674, 674, 117, 117, 117, 205, 205, 346, 346,
	346, 454, 454, 454, 383, 383, 311, 311, 456, 456,
	456, 456, 456, 421, 421, 421, 204, 204, 398, 398,
	411, 411, 412, 412, 514, 514, 413, 124, 124, 125,
	125, 140, 140, 245, 245, 243, 243, 243, 243, 243,
	243, 243, 243, 250, 250, 251, 251, 252, 252, 253,
	254, 254, 254, 254, 401, 401, 255, 255, 255, 244,
	244, 244, 246, 246, 246, 246, 246, 246, 246, 249,
	249, 249, 249, 256, 256, 256, 248, 248, 597, 597,
	597, 599, 599, 601, 601, 600, 600, 596, 596, 598,
	598, 669, 669, 427, 427, 427, 379, 381, 377, 377,
	378, 378, 388, 388, 386, 387, 387, 389, 389, 499,
	499, 499, 261, 261, 261, 418, 418, 418, 418, 419,
	419, 450, 450, 448, 448, 448, 448, 449, 449, 451,
	451, 451, 452, 452, 453, 453, 415, 415, 416, 416,
	417, 417, 417, 417, 480, 480, 247, 247, 247, 395,
	395, 395, 396, 396, 470, 470, 470, 470, 470, 470,
	470, 470, 470, 470, 470, 471, 471, 469, 469, 469,
	469, 503, 503, 503, 503, 503, 503, 503, 503, 503,
	504, 505, 505, 397, 397, 506, 455, 455, 615, 615,
	615, 616, 616, 497, 497, 507, 507, 507, 507, 507,
	507, 495, 495, 496, 496, 515, 516, 516, 431, 431,
	431, 431, 429, 429, 432, 432, 432, 432, 432, 430,
	430, 508, 508, 508, 508, 420, 420, 509, 509, 509,
	509, 510, 511, 511, 512, 512, 465, 466, 466, 522,
	522, 522, 522, 524, 394, 394, 394, 394, 394, 573,
	572, 572, 523, 523, 523, 523, 523, 523, 523, 523,
	523, 538, 538, 538, 538, 538, 538, 538, 538, 538,
	538, 538, 538, 538, 538, 538, 538, 538, 538, 538,
	538, 538, 538, 538, 538, 538, 538, 538, 538, 538,
	538, 538, 538, 539, 539, 539, 539, 539, 539, 539,
	525, 525, 525, 525, 525, 529, 529, 529, 528, 528,
	528, 528, 528, 528, 528, 528, 528, 528, 528, 530,
	530, 535, 535, 536, 536, 536, 531, 532, 537, 537,
	537, 537, 675, 675, 541, 541, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 527, 527, 527, 534, 534,
	534, 440, 440, 440, 440, 440, 440, 440, 440, 440,
	440, 440, 440, 440, 439, 439, 441, 441, 472, 472,
	472, 472, 472, 472, 472, 472, 472, 472, 472, 472,
	472, 472, 472, 472, 472, 472, 472, 472, 472, 472,
	472, 472, 472, 472, 472, 472, 472, 472, 472, 472,
	472, 472, 472, 472, 472, 472, 472, 472, 472, 472,
	472, 472, 472, 472, 472, 472, 472, 472, 472, 472,
	472, 472, 472, 472, 472, 472, 472, 472, 472, 472,
	472, 472, 472, 472, 472, 472, 472, 472, 472, 472,
	472, 472, 472, 472, 472, 472, 472, 472, 472, 472,
	472, 472, 472, 472, 472, 472, 472, 472, 473, 473,
	473, 473, 473, 473, 473, 473, 473, 473, 473, 473,
	473, 473, 473, 473, 473, 473, 473, 473, 473, 473,
	473, 473, 473, 473, 473, 473, 473, 473, 473, 474,
	474, 474, 474, 475, 475, 475, 475, 475, 475, 475,
	475, 475, 475, 475, 475, 475, 475, 475, 475, 475,
	475, 475, 475, 475, 475, 475, 475, 475, 591, 591,
	591, 591, 591, 591, 591, 591, 476, 476, 594, 594,
	595, 595, 592, 592, 592, 592, 592, 592, 592, 592,
	592, 592, 592, 592, 592, 592, 592, 592, 592, 592,
	592, 592, 592, 592, 592, 593, 593, 593, 593, 593,
	593, 593, 593, 593, 593, 593, 593, 593, 593, 593,
	593, 593, 593, 593, 593, 593, 593, 593, 593, 593,
	593, 593, 593, 593, 593, 593, 593, 593, 593, 593,
	593, 593, 593, 602, 602, 603, 603, 605, 605, 606,
	606, 607, 608, 608, 608, 609, 610, 610, 604, 604,
	611, 611, 611, 611, 612, 612, 613, 613, 613, 613,
	613, 614, 614, 614, 614, 614, 486, 486, 487, 487,
	493, 493, 493, 351, 351, 351, 351, 351, 351, 351,
	351, 351, 351, 351, 351, 351, 351, 351, 351, 351,
	351, 351, 351, 351, 351, 351, 351, 351, 351, 351,
	351, 351, 351, 351, 351, 351, 351, 351, 353, 353,
	352, 301, 301, 301, 301, 301, 301, 406, 406, 404,
	404, 404, 407, 407, 405, 405, 403, 403, 402, 402,
	483, 483, 481, 481, 485, 485, 433, 433, 540, 540,
	540, 540, 540, 540, 540, 540, 434, 434, 434, 442,
	435, 435, 436, 436, 436, 436, 436, 477, 478, 437,
	437, 437, 479, 479, 488, 492, 492, 491, 490, 490,
	489, 489, 467, 467, 468, 468, 414, 414, 676, 676,
	410, 410, 513, 513, 513, 513, 350, 350, 399, 399,
	349, 349, 341, 341, 342, 342, 342, 342, 392, 392,
	494, 494, 542, 542, 543, 543, 544, 544, 545, 545,
	546, 547, 548, 482, 482, 322, 321, 308, 309, 320,
	319, 318, 307, 310, 315, 316, 317, 312, 313, 329,
	328, 327, 278, 283, 334, 336, 336, 339, 339, 340,
	338, 337, 337, 324, 325, 326, 518, 306, 343, 343,
	344, 344, 344, 345, 345, 345, 345, 302, 302, 303,
	303, 330, 330, 331, 332, 332, 323, 323, 323, 293,
	293, 293, 294, 294, 295, 295, 556, 556, 553, 553,
	553, 554, 554, 554, 555, 555, 555, 555, 552, 552,
	552, 552, 552, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 568, 568, 568, 568, 568,
	568, 568, 568, 568, 568, 568, 568, 568, 568, 568,
	568, 568, 568, 568, 568, 568, 568, 568, 568, 568,
	568, 568, 568, 568, 568, 568, 568, 568, 568, 568,
	568, 568, 568, 568, 568, 568, 568, 568, 568, 568,
	568, 568, 568, 568, 568, 568, 568, 565, 565, 566,
	566, 566, 566, 566, 566, 566, 566, 566, 566, 566,
	566, 566, 566, 566, 566, 566, 566, 567, 569, 569,
	569, 569, 569, 569, 569, 569, 569, 569, 569, 569,
	569, 569, 569, 569, 569, 569, 569, 569, 569, 569,
	569, 569, 569, 569, 569, 569, 569, 569, 569, 569,
	569, 569, 569, 569, 569, 569, 569, 569, 569, 569,
	569, 569, 569, 569, 569, 569, 569, 569, 569, 569,
	569, 569, 569, 569, 569, 569, 569, 569, 569, 569,
	569, 569, 569, 569, 569, 569, 569, 569, 569, 569,
	569, 569, 569, 569, 569, 569, 569, 569, 570, 570,
}

var sqlR2 = [...]int{
	0, 1, 1, 1, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 0, 1, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 1, 3, 1, 1, 1, 3,
	1, 1, 1, 1, 3, 4, 6, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 6, 4, 4, 6, 9, 6, 8, 4, 4,
	5, 9, 7, 9, 1, 1, 3, 1, 1, 1,
	1, 1, 1, 1, 3, 4, 6, 4, 6, 6,
	9, 6, 9, 6, 5, 6, 5, 1, 1, 1,
	1, 1, 1, 0, 1, 6, 6, 4, 8, 7,
	10, 9, 4, 4, 4, 3, 4, 4, 4, 7,
	7, 9, 8, 9, 5, 3, 5, 7, 4, 12,
	4, 12, 1, 3, 5, 5, 2, 5, 3, 6,
	4, 4, 4, 6, 5, 6, 5, 6, 4, 8,
	3, 8, 4, 2, 3, 10, 3, 6, 4, 3,
	1, 3, 4, 4, 2, 1, 1, 3, 1, 3,
	2, 4, 3, 2, 3, 2, 0, 1, 1, 0,
	2, 0, 7, 10, 6, 8, 6, 6, 6, 9,
	4, 3, 2, 2, 0, 1, 1, 1, 1, 1,
	3, 1, 3, 6, 4, 6, 7, 9, 6, 2,
	2, 3, 0, 8, 6, 8, 7, 2, 0, 1,
	2, 5, 0, 1, 3, 3, 1, 1, 3, 3,
	12, 3, 1, 1, 2, 1, 4, 0, 3, 3,
	0, 4, 6, 0, 5, 7, 6, 8, 7, 9,
	9, 2, 1, 3, 1, 3, 3, 3, 0, 2,
	5, 0, 1, 3, 3, 3, 3, 1, 1, 1,
	1, 1, 1, 3, 3, 3, 3, 1, 3, 3,
	3, 6, 4, 9, 7, 12, 9, 2, 7, 2,
	1, 1, 1, 3, 3, 0, 3, 1, 3, 1,
	1, 3, 2, 5, 0, 7, 5, 2, 0, 1,
	2, 3, 1, 1, 2, 2, 2, 2, 1, 2,
	3, 3, 4, 3, 3, 1, 2, 1, 2, 1,
	2, 1, 2, 2, 3, 3, 3, 3, 3, 3,
	5, 3, 3, 5, 3, 3, 5, 3, 3, 5,
	3, 4, 3, 6, 6, 6, 6, 6, 8, 4,
	4, 1, 1, 1, 2, 1, 1, 2, 1, 2,
	1, 1, 2, 1, 2, 6, 3, 8, 5, 3,
	4, 3, 3, 4, 3, 4, 4, 4, 3, 5,
	7, 3, 3, 4, 3, 3, 3, 3, 3, 2,
	0, 1, 0, 1, 0, 4, 3, 3, 3, 3,
	3, 6, 4, 4, 4, 3, 5, 3, 3, 3,
	3, 3, 3, 3, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 4, 1, 2, 1, 2, 1,
	2, 7, 3, 2, 0, 1, 3, 3, 1, 0,
	1, 2, 2, 1, 6, 5, 1, 3, 2, 1,
	4, 3, 2, 0, 9, 3, 2, 0, 2, 2,
	2, 2, 2, 2, 1, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 4, 6, 5, 7, 3,
	4, 6, 3, 4, 6, 3, 5, 7, 3, 4,
	6, 3, 4, 6, 3, 1, 1, 3, 4, 6,
	3, 3, 5, 3, 1, 3, 2, 2, 2, 2,
	1, 2, 2, 5, 3, 3, 6, 6, 3, 1,
	1, 1, 1, 2, 1, 1, 1, 2, 1, 1,
	2, 1, 2, 1, 2, 1, 1, 1, 2, 1,
	1, 2, 1, 1, 1, 1, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 1,
	1, 2, 1, 2, 1, 3, 4, 3, 1, 2,
	3, 2, 2, 2, 4, 6, 3, 1, 2, 2,
	7, 5, 7, 2, 3, 0, 3, 5, 2, 3,
	0, 2, 3, 2, 3, 2, 7, 4, 7, 8,
	8, 9, 11, 11, 6, 2, 6, 9, 4, 7,
	7, 10, 7, 10, 10, 10, 13, 5, 5, 2,
	2, 1, 1, 3, 1, 1, 1, 1, 1, 2,
	1, 2, 2, 3, 2, 2, 4, 3, 2, 2,
	1, 2, 1, 3, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 1, 3, 5, 4, 6, 4, 3,
	0, 1, 3, 2, 4, 2, 4, 1, 6, 3,
	4, 4, 3, 4, 1, 1, 1, 1, 5, 4,
	5, 3, 3, 2, 2, 6, 3, 3, 3, 3,
	4, 4, 3, 1, 3, 3, 2, 2, 1, 3,
	3, 3, 1, 2, 1, 1, 2, 2, 3, 1,
	1, 1, 1, 1, 3, 2, 2, 1, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 1,
	2, 1, 2, 1, 2, 1, 1, 2, 1, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 2,
	1, 1, 1, 2, 1, 2, 2, 2, 9, 2,
	1, 0, 1, 1, 0, 1, 2, 0, 2, 2,
	0, 2, 2, 2, 2, 1, 2, 3, 3, 4,
	4, 4, 4, 3, 3, 1, 1, 1, 0, 1,
	1, 1, 0, 1, 1, 3, 3, 3, 3, 3,
	2, 3, 3, 1, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 2, 2, 2, 3, 5, 7,
	3, 3, 3, 4, 8, 6, 4, 5, 5, 5,
	3, 0, 1, 1, 1, 4, 4, 3, 4, 4,
	3, 4, 4, 1, 4, 4, 5, 3, 5, 5,
	5, 7, 3, 3, 3, 5, 7, 4, 2, 6,
	4, 3, 2, 3, 4, 3, 5, 3, 6, 5,
	6, 3, 5, 6, 3, 5, 3, 5, 3, 3,
	4, 4, 5, 0, 1, 1, 1, 1, 3, 2,
	3, 4, 3, 4, 3, 5, 3, 4, 4, 3,
	4, 5, 3, 4, 3, 4, 4, 5, 3, 3,
	1, 1, 0, 2, 3, 5, 4, 6, 4, 6,
	4, 1, 0, 3, 4, 4, 5, 7, 5, 3,
	3, 3, 4, 4, 5, 2, 0, 4, 2, 3,
	4, 2, 3, 3, 3, 7, 5, 2, 0, 3,
	3, 4, 3, 3, 3, 5, 3, 3, 3, 4,
	4, 4, 4, 4, 4, 4, 3, 4, 5, 4,
	4, 2, 3, 2, 3, 6, 6, 7, 9, 7,
	9, 4, 3, 4, 4, 5, 1, 1, 10, 10,
	3, 5, 5, 5, 3, 5, 6, 4, 4, 5,
	5, 2, 6, 3, 2, 5, 4, 2, 0, 1,
	1, 1, 1, 2, 3, 2, 2, 2, 2, 2,
	2, 2, 2, 1, 2, 0, 1, 2, 1, 2,
	1, 2, 2, 1, 2, 1, 2, 1, 2, 2,
	4, 3, 3, 7, 3, 3, 7, 3, 3, 3,
	3, 3, 3, 3, 3, 4, 3, 3, 6, 5,
	8, 3, 6, 6, 3, 12, 15, 1, 0, 1,
	2, 3, 0, 2, 0, 4, 0, 4, 5, 4,
	1, 1, 1, 3, 3, 1, 3, 10, 13, 0,
	2, 3, 1, 1, 0, 1, 2, 2, 2, 2,
	1, 1, 0, 1, 3, 1, 1, 1, 2, 3,
	3, 3, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 1, 0, 1, 0, 1, 1, 0,
	1, 4, 1, 0, 3, 7, 7, 1, 1, 3,
	7, 1, 3, 11, 3, 2, 0, 3, 1, 2,
	2, 3, 2, 6, 2, 1, 2, 2, 3, 6,
	4, 2, 3, 5, 5, 5, 2, 5, 5, 2,
	2, 2, 0, 1, 1, 3, 4, 10, 11, 9,
	5, 3, 1, 5, 9, 7, 11, 3, 3, 0,
	2, 4, 3, 3, 1, 6, 1, 3, 1, 2,
	0, 1, 2, 3, 0, 1, 3, 3, 2, 2,
	1, 1, 1, 4, 0, 3, 0, 4, 0, 3,
	0, 2, 2, 2, 0, 1, 1, 2, 2, 0,
	3, 3, 2, 1, 1, 2, 2, 5, 8, 4,
	1, 0, 1, 2, 2, 1, 2, 3, 3, 2,
	2, 3, 2, 2, 2, 2, 2, 3, 1, 2,
	3, 1, 4, 2, 3, 2, 2, 4, 7, 3,
	4, 6, 5, 7, 5, 5, 3, 3, 0, 2,
	2, 2, 2, 1, 1, 1, 8, 10, 11, 8,
	11, 5, 4, 2, 0, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 2, 0, 3, 3, 0, 1, 8,
	11, 3, 6, 6, 5, 3, 4, 1, 0, 1,
	3, 16, 19, 15, 18, 4, 2, 0, 1, 0,
	1, 0, 1, 3, 2, 4, 2, 3, 1, 0,
	2, 0, 1, 1, 0, 9, 6, 6, 8, 6,
	8, 5, 7, 2, 6, 7, 4, 4, 5, 2,
	4, 6, 6, 8, 6, 7, 8, 9, 6, 7,
	8, 9, 6, 8, 6, 8, 6, 7, 8, 9,
	6, 8, 6, 8, 6, 6, 8, 8, 4, 7,
	3, 0, 7, 10, 1, 1, 1, 1, 2, 2,
	3, 0, 3, 0, 3, 0, 1, 0, 2, 0,
	2, 2, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 2, 2, 1, 2, 1,
	2, 1, 2, 1, 3, 2, 3, 2, 2, 2,
	2, 2, 2, 1, 1, 0, 2, 4, 2, 1,
	0, 2, 1, 1, 0, 1, 3, 1, 0, 1,
	1, 1, 1, 1, 2, 3, 2, 2, 1, 2,
	14, 16, 3, 1, 0, 4, 1, 0, 2, 2,
	3, 0, 1, 1, 4, 4, 5, 1, 0, 3,
	0, 3, 0, 3, 0, 3, 0, 4, 0, 3,
	0, 1, 0, 6, 7, 3, 6, 3, 1, 3,
	1, 1, 4, 2, 1, 3, 1, 3, 4, 8,
	11, 7, 10, 2, 2, 0, 10, 3, 2, 0,
	1, 3, 1, 1, 3, 3, 5, 6, 4, 5,
	4, 1, 1, 3, 3, 1, 2, 4, 4, 2,
	3, 5, 5, 1, 3, 1, 0, 1, 2, 3,
	2, 4, 2, 3, 0, 2, 0, 2, 1, 2,
	1, 1, 1, 2, 1, 2, 1, 2, 1, 8,
	8, 8, 2, 4, 4, 4, 2, 2, 2, 2,
	3, 1, 3, 1, 2, 6, 7, 1, 0, 1,
	0, 1, 0, 1, 1, 0, 1, 5, 1, 0,
	1, 0, 1, 0, 3, 3, 5, 1, 3, 3,
	4, 5, 2, 2, 0, 2, 2, 1, 1, 1,
	0, 1, 0, 2, 2, 5, 4, 2, 3, 1,
	1, 1, 1, 1, 1, 1, 3, 0, 1, 3,
	1, 3, 3, 3, 2, 0, 4, 2, 5, 3,
	2, 0, 1, 3, 3, 5, 1, 1, 1, 1,
	1, 1, 1, 3, 5, 1, 3, 2, 4, 4,
	0, 4, 4, 3, 4, 1, 5, 3, 4, 5,
	5, 1, 5, 1, 3, 2, 0, 3, 0, 2,
	3, 1, 3, 2, 0, 3, 5, 6, 4, 6,
	4, 3, 2, 1, 0, 5, 1, 0, 2, 2,
	2, 1, 1, 0, 1, 1, 1, 1, 0, 4,
	2, 1, 2, 2, 4, 1, 3, 1, 2, 3,
	2, 4, 1, 0, 1, 0, 2, 1, 0, 2,
	5, 7, 2, 1, 2, 4, 3, 5, 0, 1,
	3, 5, 1, 2, 1, 1, 1, 1, 1, 2,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 4, 4, 6, 6,
	1, 1, 1, 1, 1, 3, 5, 0, 1, 1,
	1, 1, 1, 2, 2, 2, 2, 2, 1, 3,
	0, 5, 4, 1, 2, 1, 4, 1, 1, 2,
	1, 1, 1, 1, 1, 0, 1, 2, 5, 1,
	4, 2, 5, 1, 4, 3, 3, 0, 1, 2,
	4, 1, 1, 1, 1, 1, 1, 3, 3, 3,
	3, 3, 3, 3, 1, 0, 1, 4, 1, 3,
	3, 3, 5, 2, 2, 2, 2, 2, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	2, 3, 3, 3, 2, 2, 3, 5, 4, 6,
	3, 5, 4, 6, 4, 6, 5, 7, 3, 3,
	3, 3, 3, 4, 3, 2, 4, 2, 3, 3,
	4, 3, 4, 3, 4, 5, 6, 6, 7, 6,
	7, 6, 7, 3, 4, 4, 1, 3, 1, 3,
	3, 2, 2, 2, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 2, 3, 5, 6, 6, 7, 1,
	2, 1, 2, 1, 1, 1, 1, 1, 6, 1,
	1, 1, 1, 1, 1, 2, 1, 5, 5, 6,
	3, 1, 1, 1, 2, 2, 2, 4, 3, 5,
	6, 8, 6, 5, 4, 3, 2, 2, 4, 1,
	1, 1, 5, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 6, 6, 8, 8, 6, 4,
	6, 6, 6, 4, 1, 3, 3, 3, 3, 3,
	4, 3, 3, 4, 3, 3, 4, 3, 3, 4,
	3, 3, 3, 3, 3, 4, 3, 4, 3, 4,
	3, 4, 4, 3, 6, 5, 5, 5, 4, 4,
	3, 4, 3, 5, 0, 5, 0, 2, 0, 1,
	3, 3, 2, 2, 0, 6, 1, 0, 3, 0,
	3, 3, 3, 0, 1, 4, 2, 2, 2, 2,
	2, 3, 2, 2, 3, 0, 4, 1, 1, 5,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	4, 1, 1, 1, 2, 1, 2, 2, 3, 1,
	2, 3, 2, 3, 2, 3, 1, 0, 1, 3,
	1, 3, 3, 3, 1, 3, 3, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 4, 3, 1, 2,
	3, 0, 3, 3, 2, 2, 1, 2, 2, 3,
	2, 1, 1, 1, 5, 1, 2, 4, 2, 0,
	1, 0, 3, 5, 1, 0, 1, 2, 1, 0,
	1, 3, 3, 2, 1, 1, 1, 3, 1, 3,
	3, 1, 1, 1, 1, 5, 3, 1, 1, 3,
	1, 1, 1, 1, 2, 2, 1, 1, 2, 2,
	1, 1, 1, 3, 5, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 1, 3, 1,
	3, 1, 0, 1, 1, 1, 1, 1, 1, 1,
	3, 5, 7, 1, 7, 5, 3, 1, 1, 1,
	1, 1, 1, 1, 3, 5, 1, 1, 1, 1,
	1, 1, 1, 0, 3, 0, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
}

var sqlChk = [...]int{
	-1000, -1, -2, 636, -110, -107, -76, -74, -114, -115,
	-96, -116, -109, -138, -143, -124, -125, -126, -139, -145,
	-202, -207, -208, -209, -210, -219, -3, -61, -63, -77,
	-95, -97, -108, -118, -117, -119, -127, -135, -130, -113,
	-68, -140, -144, -156, -203, -204, -205, 33, 32, 104,
	83, 160, 133, 142, 212, 404, 454, 466, 421, 147,
	444, 426, -150, -151, 485, -62, -75, -142, -141, 76,
	134, 176, 309, 436, -6, -14, -31, -18, 30, 48,
	-64, -65, -66, -67, 65, -83, -79, -90, -84, -78,
	-81, -655, 106, -598, -98, -101, -134, -659, 168, 232,
	-120, -121, -122, 386, -128, -129, 447, -131, -132, -133,
	450, 169, -70, -69, 162, -243, -245, -147, -146, -148,
	-206, -157, -158, -159, -160, -161, -163, -164, -166, -193,
	-167, -168, -169, -170, -171, -172, -176, -196, -173, -174,
	-175, -178, -177, -179, -184, -180, -181, -182, -183, -185,
	-186, -188, -189, -190, -191, -192, -194, -195, 490, -187,
	-197, -165, -198, 555, 52, 506, 85, 152, 458, 21,
	-7, -8, -9, -10, -11, -12, -13, -17, -16, -60,
	-4, -5, -80, -82, -85, -86, -87, -94, -88, -89,
	-597, -99, -100, -103, -105, -106, -102, -104, 445, 607,
	-246, -244, 633, 612, 571, -162, -21, -26, -22, -23,
	-25, -27, -24, -28, -29, -30, -46, -51, -48, -49,
	-47, -50, -52, -53, -54, -55, -56, -57, -58, -59,
	-33, -39, -40, -34, -35, -36, -37, -38, -41, -42,
	-43, -44, -45, -19, -20, -32, 594, 603, -249, -247,
	-248, -256, 477, 579, 528, 636, 636, 636, 636, 636,
	636, 636, 636, 636, 636, 636, 636, 636, 636, 636,
	636, 636, 636, 636, 636, 636, 636, 636, 636, 636,
	636, -348, 2, -324, -330, -331, -332, -323, -293, -567,
	-570, 4, -564, -568, 175, 242, 347, 21, 22, 24,
	23, 25, 26, 27, 28, 30, 31, 41, 43, 44,
	46, 47, 48, 49, 50, 51, 52, 56, 58, 62,
	63, 64, 65, 66, 67, 71, 76, 77, 82, 83,
	84, 85, 86, 87, 88, 89, 95, 92, 93, 94,
	96, 98, 100, 101, 102, 103, 104, 105, 107, 108,
	109, 111, 112, 113, 121, 122, 123, 124, 125, 127,
	133, 128, 134, 137, 132, 136, 138, 140, 141, 142,
	145, 146, 147, 149, 150, 151, 153, 154, 155, 157,
	158, 160, 161, 162, 165, 163, 166, 164, 167, 168,
	169, 170, 173, 181, 182, 183, 188, 190, 191, 192,
	194, 195, 198, 199, 200, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 213, 217, 219, 220, 221, 222,
	223, 224, 225, 231, 232, 234, 235, 236, 237, 238,
	243, 244, 245, 249, 255, 256, 260, 261, 262, 264,
	268, 269, 270, 271, 272, 273, 275, 277, 276, 279,
	282, 283, 286, 287, 288, 289, 290, 291, 295, 296,
	292, 297, 298, 300, 301, 304, 302, 305, 306, 303,
	307, 310, 311, 312, 313, 314, 315, 316, 317, 318,
	319, 320, 321, 308, 309, 324, 322, 326, 327, 328,
	329, 330, 345, 340, 341, 342, 334, 335, 331, 336,
	332, 333, 337, 338, 344, 339, 349, 350, 351, 352,
	355, 229, 248, 357, 358, 361, 363, 380, 366, 367,
	368, 371, 372, 375, 378, 379, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 391, 392, 394, 395, 396,
	398, 399, 400, 402, 404, 405, 407, 408, 409, 411,
	412, 413, 414, 415, 416, 417, 418, 420, 421, 423,
	422, 424, 426, 428, 429, 430, 436, 437, 444, 438,
	440, 441, 442, 443, 445, 446, 447, 448, 449, 450,
	452, 453, 454, 456, 457, 458, 459, 460, 462, 464,
	465, 469, 470, 471, 487, 488, 509, 466, 467, 468,
	472, 473, 474, 475, 476, 480, 478, 479, 481, 482,
	483, 485, 486, 489, 490, 492, 493, 494, 495, 496,
	497, 498, 501, 503, 504, 505, 506, 507, 527, 508,
	510, 514, 515, 516, 517, 511, 512, 526, 519, 520,
	521, 523, 524, 529, 530, 531, 532, 533, 534, 536,
	537, 539, 547, 559, 548, 549, 550, 552, 555, 556,
	557, 558, 545, 560, 561, 564, 565, 569, 566, 570,
	567, 568, 571, 573, 576, 577, 578, 584, 583, 585,
	586, 587, 589, 590, 595, 596, 598, 599, 600, 37,
	53, 54, 57, 59, 61, 72, 73, 74, 78, 129,
	130, 159, 171, 172, 184, 201, 202, 214, 216, 226,
	227, 228, 250, 251, 253, 258, 280, 354, 356, 373,
	377, 393, 397, 401, 403, 419, 461, 499, 513, 518,
	540, 541, 542, 543, 551, 553, 579, 580, 581, 588,
	597, -348, 2, -324, 364, -317, 2, -293, -293, 404,
	29, 2, 29, 392, 479, 531, 533, 2, -625, -393,
	524, 2, 29, -296, -293, 106, 212, 477, -317, 2,
	-625, 212, -393, 26, 524, 2, -293, 2, 378, 23,
	28, 69, 80, 102, 145, 170, 193, 198, -658, 380,
	412, 464, 481, 526, 537, 552, 2, 583, 301, 478,
	528, 242, 124, 557, 472, -636, 469, 470, 378, 410,
	456, 215, 572, -297, 2, 466, -293, 301, 2, 636,
	98, 77, 461, 482, -153, 2, 291, 548, -154, -155,
	-152, 540, -551, 472, 456, 324, -293, 636, 636, 636,
	29, -306, 2, -293, -306, 2, -211, 2, -306, -660,
	-218, -217, -216, 22, 437, 183, 273, 196, 233, 329,
	407, 194, 50, -211, 2, 528, 242, 472, 124, 524,
	636, 636, 2, 528, 383, 583, 478, 124, 416, 242,
	557, 198, 145, 28, 71, 48, 534, 611, 472, -636,
	608, 609, 301, 131, -623, 2, -617, 4, -568, -564,
	-342, 478, -341, 528, 534, 124, -332, -323, 625, -331,
	636, 636, 636, 636, 2, 261, 262, 414, 413, 482,
	483, 29, 636, 636, 636, 636, 469, 2, 170, 23,
	28, 69, 97, 102, 131, 193, 198, 369, -656, 380,
	412, 481, 526, 530, 537, 552, -635, 508, 71, 472,
	-634, -636, 301, 557, 145, -443, 124, 291, 210, 565,
	533, 531, 563, 137, 249, 568, 567, 636, 636, -111,
	2, 633, 33, 32, -110, -114, 147, 485, -236, 528,
	254, 2, -293, 636, 636, 636, 2, 261, 262, 469,
	470, 29, 636, 636, 196, -617, 524, 2, 636, 636,
	636, 2, 29, 261, 262, 469, 470, 254, 2, 71,
	474, 636, 636, 636, 636, 636, 636, 636, 636, 636,
	636, 636, 636, 636, 636, 636, 636, 636, 636, 636,
	636, 636, 636, 636, 636, 636, 636, 636, 636, 636,
	636, 636, 636, 636, 636, 636, 636, 636, 2, -200,
	482, 508, 222, 49, 48, 77, 29, 411, 82, 384,
	125, 131, 154, 558, 213, 242, 243, 269, 97, 98,
	-445, 46, 262, 71, 261, 470, -641, 469, -498, 529,
	473, 479, 523, 89, 273, 466, 548, 550, 106, 573,
	457, 600, 416, 417, 521, 430, 519, 292, 163, 197,
	4, 124, 324, 456, 484, 277, 276, 559, 540, 291,
	465, 387, 87, 636, -669, 2, 528, -671, 2, 548,
	548, 2, -671, 2, -671, 2, -671, 2, -672, 548,
	597, 636, 636, 636, 636, 636, 636, 636, 636, 636,
	636, 636, 636, 636, 636, 636, 636, 636, 636, 636,
	636, -244, -246, -245, 636, 636, 636, 636, 636, 636,
	636, -200, 482, 2, 77, 29, 29, -386, -388, 562,
	252, 156, 370, -243, -245, 2, -597, 559, 482, -549,
	2, -472, -571, -474, 623, 624, 616, 525, 70, -352,
	346, 601, -486, 131, 563, 364, -570, -475, -488, 159,
	380, 461, -407, 8, 9, 5, 6, 7, -302, -476,
	-482, 554, 174, 353, -345, 637, 10, 633, -594, -245,
	-487, 38, 216, 68, -553, -344, -303, -525, 253, -343,
	-323, -591, -592, 4, -564, -565, -554, -528, -536, -532,
	-533, -539, -293, -567, 80, 115, 116, 114, 119, 118,
	294, 293, 120, 117, 484, 572, 69, 37, 226, 227,
	258, 354, 228, 78, -593, 146, -566, 250, 251, 499,
	54, 419, 184, 130, 129, 356, 59, 57, 580, -537,
	126, 540, 541, 542, 543, 201, 202, 61, 171, 172,
	377, 401, 518, 551, 553, 214, 280, 45, 110, 197,
	247, 230, 257, 259, 263, 281, 284, 325, 343, 348,
	374, 376, 455, 491, -675, 581, 513, 72, 73, 189,
	-599, 422, -600, -317, -599, 636, 636, 638, 636, -377,
	-379, -381, 2, 29, 143, 633, 2, -503, 2, -504,
	-508, -245, 274, -507, 633, -505, 631, -324, 365, -595,
	462, -591, -592, -302, -323, -344, 4, -564, -566, 635,
	-382, 633, 124, 472, 528, 81, 242, 97, 170, 198,
	-438, 633, -293, 29, 364, 544, 638, -625, -393, -378,
	409, -484, 633, 364, 367, 196, 367, -625, 63, 305,
	2, 2, 2, 2, 2, 226, -293, 528, 123, 2,
	272, 2, 2, 2, 2, 2, 2, 2, -400, 226,
	2, -324, 583, -400, 226, 2, -400, 226, 2, -444,
	2, 91, -307, 226, 2, -293, -333, 226, 2, -328,
	-330, -339, 226, 2, -336, -293, -559, 226, 2, -557,
	4, -564, 120, 484, -472, 2, -140, 2, 63, -293,
	583, 2, 487, 2, 633, -153, 2, 74, 548, 45,
	482, -154, 2, -458, 2, -459, -289, -290, -291, -515,
	-292, 260, 408, 418, 604, 135, 346, 600, -650, 196,
	615, 544, -549, -549, -549, -408, 635, -213, 56, -306,
	-661, -660, -661, -547, 29, -542, 8, -543, 623, 624,
	-547, -547, -661, -661, 2, 2, 2, 2, 2, 2,
	-508, 226, -324, 2, -321, -552, 4, -564, -568, -565,
	-569, -567, 29, 32, 33, 34, 36, 38, 39, 40,
	42, 60, 68, 69, 75, 79, 81, 91, 97, 106,
	114, 115, 117, 116, 118, 119, 120, 131, 135, 139,
	143, 144, 148, 152, 156, 174, 176, 189, 193, 196,
	212, 215, 218, 233, 246, 252, 254, 274, 278, 285,
	293, 294, 346, 353, 359, 364, 365, 369, 370, 390,
	406, 425, 451, 477, 484, 502, 522, 528, 538, 544,
	546, 554, 562, 563, 572, 574, 582, 591, 592, 593,
	594, -570, 80, 2, -508, 226, 2, -327, 226, -508,
	-330, 2, -307, 2, -472, -629, 536, 166, 438, 2,
	-349, 226, -324, -326, -330, -328, 2, 2, 2, 2,
	-472, 2, -561, 2, -556, 10, -555, 5, 4, -564,
	-568, -565, -475, 2, -486, 29, -336, 2, -557, 226,
	2, 29, 29, 583, 409, 254, 544, -399, -341, -342,
	638, -399, -548, 4, 8, -392, -293, 635, -472, 2,
	-140, -123, 2, 189, -472, 226, 2, -140, 226, 2,
	-472, 226, 2, -140, 226, 2, -293, 2, -637, 2,
	-561, 226, 226, -293, 2, 305, 2, 2, 552, 2,
	102, 528, 123, 2, 442, -657, 464, 556, 2, 2,
	2, 2, 2, 2, 2, 528, -312, 2, -293, 189,
	-336, 226, -337, 2, 478, -670, 422, -557, 226, 2,
	583, -328, 226, 2, -328, 242, 256, -307, 226, 2,
	533, 531, 533, 531, 196, 2, 254, 2, 254, 2,
	-509, 2, -510, -504, -511, 631, 365, -519, 2, -518,
	-555, 579, -111, 633, -111, 633, 482, 633, -561, -324,
	-324, -472, 2, -140, -123, 2, -472, 2, -140, 2,
	-293, 2, -137, -561, -136, 633, 196, 573, -293, 2,
	-472, 2, -140, -123, 2, -472, 2, -140, 2, -236,
	189, 2, 124, 528, -200, 2, 189, 574, 2, 8,
	2, 233, -232, -561, 473, 181, 417, 2, 487, 2,
	488, 77, -445, 600, 77, 196, 2, 196, 2, -428,
	2, 594, 409, 196, 2, 2, -622, 2, 364, 196,
	2, 196, 2, 196, 2, 196, 2, 196, 2, -199,
	483, 549, 527, 413, 262, 2, -140, 591, -123, 262,
	261, -472, 591, 2, -642, 189, 470, -472, 2, 547,
	271, 164, 196, -428, 2, 196, 2, 196, 2, 5,
	2, 43, 414, 509, 2, 260, 408, 509, 2, 507,
	2, -324, 528, 583, 478, 124, 29, 2, 469, 2,
	2, 92, 93, 196, 2, 196, 2, 211, 196, 2,
	430, 196, 528, -409, 635, -409, 600, 2, -420, -508,
	-457, -458, -457, 544, -386, -388, -200, 487, 2, -250,
	-418, -252, 189, -448, -449, -253, 285, 176, 359, -254,
	-427, 29, 143, -427, -427, 63, 634, 634, -650, 559,
	11, 12, 79, 43, 623, 624, 625, 626, 187, 627,
	628, 621, 622, 620, 613, 614, 618, 266, 267, 99,
	617, 615, 90, 299, 463, 177, 178, 179, 180, 439,
	240, 35, 241, 14, 15, 16, -352, 34, 369, 284,
	601, 230, 491, 616, 17, 18, 19, 257, 259, 348,
	53, 233, -301, 380, -351, 525, 70, -472, -472, -472,
	-472, -472, -472, -472, -472, 376, 633, -414, -467, 631,
	-245, 633, 633, 633, 633, -548, -245, -472, -486, 634,
	-405, 633, -245, -486, -481, 633, 461, 631, 633, -489,
	-472, 5, 5, 5, 633, 635, -602, 595, 189, 633,
	633, 633, 633, 633, 633, 633, 633, 633, 633, 633,
	633, 633, 633, 633, 633, 403, -530, 633, -529, 633,
	-529, -529, 584, -527, 633, 603, 596, 633, -527, 633,
	633, 633, 633, 633, 633, 633, 633, 633, 633, 633,
	633, 633, 584, 534, 638, -599, -382, 633, -410, -513,
	-472, 625, -410, -410, 364, -402, -472, 110, -431, 263,
	325, 197, 281, 455, 247, -469, 637, -469, -497, 603,
	-245, -505, -323, -245, -507, 633, -503, -497, -112, -548,
	-95, -108, -117, -140, -156, -204, -205, 625, -324, 633,
	196, 633, 635, -552, 196, -392, -307, -336, -324, -343,
	-344, -349, -318, -293, 2, 2, 142, -402, -617, 557,
	472, 29, -559, -296, 544, 39, -483, -522, -523, -573,
	637, -572, -525, -535, -531, -534, 393, 397, -554, 57,
	580, -537, 253, 4, -564, -566, 250, 251, 499, 54,
	419, 184, 130, 129, 356, 59, 540, 541, 542, 543,
	201, 202, 61, 581, 513, 72, 73, -617, 557, 472,
	29, 478, 189, -559, 189, 196, -559, 2, 2, 159,
	2, 2, 2, -293, -271, 638, 67, 448, 159, -400,
	226, -271, 159, -271, 159, -350, 226, -349, -271, 159,
	-271, 638, 159, -271, 638, 159, 635, 638, 159, -559,
	2, -444, -551, -402, 39, -458, 2, 131, 4, 5,
	-673, 638, 283, -355, 298, 345, 221, 365, 598, 357,
	135, -560, 5, 4, -482, -494, 131, 291, 253, -542,
	-544, 9, -545, 623, 624, -550, -549, 113, 635, -552,
	-214, 248, 41, -306, -306, -661, -661, 8, 8, -661,
	-661, -306, -306, -268, 440, 485, 379, -267, 25, 30,
	147, 244, 330, 577, 165, -367, 245, 445, -364, 383,
	159, 503, 566, -629, -632, 468, 536, 166, 438, 94,
	357, 485, 379, 440, 159, -424, -426, 39, 122, 330,
	378, 64, 236, 303, 304, 506, 446, 588, 159, 485,
	379, 440, 379, -15, -282, 25, 147, -284, -279, 485,
	30, -632, 103, 440, 612, 607, 445, 389, 520, 406,
	-632, -629, 279, -631, 590, 344, -270, 503, 566, -629,
	-632, 468, 440, -269, -369, -364, 383, 159, 637, 25,
	147, 440, 485, 379, -653, -654, 30, -263, -262, 25,
	147, 485, 569, -266, 233, -265, 25, -149, -129, -148,
	445, 485, -149, 2, 440, 379, -626, -314, -596, 233,
	594, 159, -314, -314, -508, 226, -646, 189, 2, -639,
	-136, 275, 5, 10, -561, -136, 638, -399, 638, -552,
	625, 470, 469, 159, 159, 159, 159, 262, 189, 346,
	346, 594, 2, 2, 2, 2, 2, 198, -634, -658,
	2, 2, -324, 226, -384, 364, -620, -621, 528, -324,
	346, 45, -327, 226, 2, -330, 583, -626, 346, -329,
	226, -324, 39, 633, 346, 2, -444, 2, 242, -596,
	346, -509, -346, -324, -504, -346, 485, -317, 39, -469,
	-324, 634, 638, -519, -519, -561, -223, 594, 196, 633,
	-236, 594, 594, 262, -516, 638, -515, 233, -562, -561,
	-137, -561, 443, 196, 262, -561, -620, -307, 2, -324,
	2, 528, 264, -136, 196, 233, -223, -561, -561, -561,
	-551, 29, 488, 2, -199, 483, 549, 93, 488, 2,
	-324, 528, 124, 242, 83, -646, 189, 2, -293, -624,
	189, -618, 456, 472, 557, -617, -324, 124, -324, 124,
	-324, 124, -324, -324, 2, 2, 2, 2, 2, 88,
	2, -140, -472, 2, 88, 2, 48, 504, -642, 189,
	2, 547, 2, 547, 2, -293, -293, -293, 359, 508,
	283, 594, -324, -324, -324, -325, -330, 473, 529, 558,
	470, -472, 2, -662, 2, 196, 189, 2, 528, 242,
	528, 242, 124, 196, 77, 124, 29, 196, 528, 467,
	635, 4, -271, 638, -297, -250, -418, -551, -419, -418,
	-251, -250, -253, 189, 418, 567, 330, 489, 268, -449,
	-448, 29, -472, -453, 183, 329, -472, -451, -474, 623,
	624, -543, -545, -401, 357, -244, -244, -244, -389, -499,
	-472, 406, 242, -550, -650, -524, -522, -522, -322, -552,
	540, -472, -472, -472, -472, -472, -472, -472, -472, -472,
	-472, -472, -472, -472, -472, -472, -472, -472, -472, -472,
	-472, -472, -472, -472, -472, -472, -472, -472, -472, -472,
	-472, -472, -472, -472, -472, -472, -472, 284, 230, 491,
	53, 233, -472, 544, -472, -472, -472, -472, 322, 346,
	353, 554, 174, 564, 143, 357, -676, 522, 42, -479,
	-245, -406, 633, -493, 36, 502, 29, -486, 633, 2,
	-467, -472, -468, -353, -351, -293, 623, 624, 625, 626,
	627, 628, 613, 614, 615, 14, 15, 16, 618, 622,
	620, 621, 187, 99, 617, 299, 463, 90, 177, 178,
	179, 180, 266, 267, 17, 18, 19, 35, 616, -403,
	-402, -402, 634, 582, 29, 143, 625, 2, 634, 638,
	39, 634, -472, -403, -485, -481, -402, -492, -491, 591,
	-439, -440, 599, 308, 127, 224, 306, -441, 476, -546,
	8, -552, 625, -603, 182, 215, 633, 634, 2, 634,
	2, 634, -472, 2, 634, -472, 2, 634, -472, 2,
	634, -472, 2, 634, 2, 634, 2, -472, -472, -472,
	-472, -472, -472, -472, -402, 8, -546, -546, 540, 540,
	-546, -546, -546, -538, 393, 394, 395, 396, 286, 287,
	288, 289, 397, 398, 399, 400, 314, 315, 316, 317,
	310, 311, 312, 313, 318, 319, 320, 321, 206, 207,
	208, 209, 202, 203, 204, 205, -538, -433, 2, -540,
	-402, 4, 599, 308, 127, 224, 306, 476, 5, -433,
	2, -434, 2, -472, -402, -435, -473, -474, 623, 624,
	616, -352, -436, 2, -472, -403, -472, 60, 278, 546,
	-437, -472, 196, -402, -402, 2, -402, 2, -475, 2,
	-600, 39, -402, -395, 638, 196, 39, 4, -395, -395,
	633, 634, 638, -432, 219, 302, 297, 256, -432, -503,
	-431, 263, -429, 374, -429, -429, -497, -308, 631, 639,
	-552, -497, -496, -495, 39, -317, 371, -497, -497, 635,
	634, -496, 632, -615, 633, 636, 636, 636, 636, 636,
	-324, 633, -402, -552, 635, 510, 2, 634, 257, 257,
	257, 257, 257, 364, 462, 634, 544, -619, -333, -339,
	479, 529, 594, -559, -110, 366, 634, 638, -394, 38,
	631, 635, -546, 2, 2, -541, 584, 633, 633, -440,
	633, 196, -619, -339, 529, 479, 2, -625, -393, -559,
	544, -293, 2, -324, -400, -271, 159, -400, -400, -271,
	638, 159, -307, -328, -333, -336, -339, -293, -557, -559,
	-271, -329, -650, 634, 548, -459, -354, 418, 501, 441,
	480, 524, 9, 9, 638, -552, -215, 471, 330, -306,
	-306, -306, -306, 638, -651, 97, 544, 81, 633, 472,
	-286, 292, 544, -463, 226, 81, -574, 97, -310, -575,
	-293, 75, 563, 406, 193, 157, -651, 97, 406, -651,
	97, 2, 244, 97, 485, 508, 633, 29, 63, -508,
	43, 43, 29, -630, -631, 279, 196, 600, 528, 242,
	472, 544, 544, -508, -426, -522, 122, 303, 304, 63,
	-547, -547, 63, -547, -547, -547, 594, -547, 594, -327,
	-508, 472, 544, 544, 544, 428, 519, 428, 519, -279,
	-154, 519, 544, 544, -154, 29, -200, 449, 131, -674,
	615, 428, 279, -631, 544, 196, 638, 43, 43, 29,
	-630, 196, 544, -349, -308, 578, 44, 578, 44, 578,
	544, 44, 472, 544, 638, 44, -262, -620, -620, -222,
	-221, -293, 5, -392, -265, -561, -264, 328, 77, 544,
	544, -15, 485, -627, -298, 109, 336, 296, 337, 101,
	333, 100, 332, 107, 334, 108, 335, 585, 349, 586,
	350, 66, 331, 307, 338, 505, 339, 587, 351, -299,
	-300, 150, 385, 576, 124, -557, -15, -15, 485, 379,
	440, 159, -647, 233, 29, -636, 233, -516, 233, -516,
	-341, -293, 635, -140, -472, -472, -140, -472, -140, 48,
	159, 159, 2, 2, -670, 272, 633, -358, 346, 196,
	-392, -517, 638, 254, -324, 175, 159, -557, -425, -424,
	346, -329, 226, 2, 159, -382, 346, 153, 633, 416,
	2, 159, -309, 226, -294, -293, -444, -273, 532, 159,
	-422, 574, -454, -140, 633, 131, 39, -454, -411, -412,
	-514, -413, -310, 633, -317, -469, -111, -518, 634, 634,
	634, -222, 368, -236, -383, -311, -310, 123, 420, 420,
	-229, 594, -136, -137, 634, 638, -516, 233, 511, -137,
	-561, -223, -223, -516, -516, -324, 189, -561, -136, -223,
	-223, -223, 2, 2, 2, 2, -428, -324, -307, -349,
	-324, -335, 233, 29, 635, -559, -559, -339, -340, -338,
	-293, -333, -428, -307, -428, -307, -428, -307, -428, -428,
	-140, -472, 508, 2, 482, 189, 189, 635, -428, 8,
	-385, 451, 5, 2, 416, 124, 528, 383, 242, -324,
	-349, -324, -349, -307, 124, -307, 125, 124, -324, 4,
	-508, -419, -251, 365, 268, 489, -451, -452, -474, 461,
	462, -452, 461, 462, 8, 9, 8, 9, -255, 493,
	352, -400, 638, -260, 40, 139, 268, -324, -550, 600,
	155, -472, -472, 544, -676, 522, -479, 155, -472, 322,
	353, 554, 174, 564, 143, 357, 196, 633, -473, -473,
	634, -404, -472, -472, 632, 641, 634, 635, 634, -388,
	638, -386, -472, -402, -402, 634, 635, -402, -392, 632,
	632, 638, 634, -490, -491, 148, -472, 544, 544, 544,
	544, 633, 634, 635, -608, 375, 633, 633, -472, 634,
	634, 634, 634, 39, 638, 638, 638, 634, 638, 638,
	638, 634, 634, 634, 638, 634, 600, 600, 634, 634,
	634, 634, 638, 634, 638, 634, 196, 634, 634, -442,
	390, 634, 11, 12, 623, 624, 625, 626, 187, 627,
	628, 621, 622, 620, 613, 614, 615, 90, 299, 463,
	14, 15, 16, -352, 257, 233, -473, -473, -473, -473,
	634, -477, -478, 196, 189, 39, -437, -437, -437, 634,
	196, -402, 634, 634, 633, -601, 301, 346, 634, -466,
	-465, 592, -513, -396, 2, -503, -319, -552, -466, -466,
	-402, -472, 263, 263, -430, 574, 364, -432, -503, -496,
	-548, -471, -470, 191, 40, 139, 340, 341, 342, 229,
	192, -496, -317, -382, -496, -496, -552, -497, -497, -495,
	634, -616, -548, 634, -397, -506, -595, -388, 635, -552,
	-233, -596, -201, 5, 353, -201, -201, -201, -201, -324,
	-559, 544, 544, 233, 233, 26, -645, 594, 391, -522,
	631, 632, 8, -552, 633, -546, -546, -546, -559, 196,
	196, 233, 233, 364, 196, -557, 2, -271, -400, -271,
	-271, -349, -350, -271, -271, -271, -423, 594, -549, -458,
	561, 86, 418, 540, -549, 121, 471, -267, 440, 485,
	-310, -310, -324, -240, -239, -237, -293, 5, -334, -293,
	210, 429, -557, 346, -463, 226, -272, 346, 226, -318,
	-522, 633, -446, 596, 268, 268, 574, -310, -318, 268,
	226, -310, 226, -318, 2, -318, -628, 418, 358, -472,
	-238, -237, 63, -365, 290, 416, 347, -268, 440, 485,
	379, -140, -140, -140, 633, -650, 574, 142, -324, -349,
	-324, -334, -557, -329, 485, 379, 440, 343, -343, -547,
	-547, -547, -424, 485, 379, 440, -334, -557, -327, -557,
	-278, 226, -293, 428, -278, 226, 428, 428, 472, -307,
	428, 600, 47, -674, 544, 196, -472, -472, -269, -140,
	-140, -140, 633, -308, -270, 440, 5, 226, -310, 5,
	-310, 226, 5, -293, -310, -334, -557, -654, 25, 147,
	-310, -223, 638, 615, 615, -266, 615, -334, -557, -298,
	385, -561, 353, 570, -307, -626, -314, 472, 544, 544,
	-508, -643, -644, 212, 454, 472, 457, -559, -136, -226,
	594, -136, -220, 237, 625, -623, -561, -293, 583, -293,
	-356, -359, -357, -310, -464, -463, -578, -579, -574, 284,
	242, 563, 256, 175, 97, -241, -242, 596, 594, 159,
	-347, -324, 631, -223, -621, -561, 175, -315, -293, -336,
	-337, 159, -382, 346, -557, 39, 159, 633, 2, 2,
	-328, 364, 346, -309, 226, -274, 149, -674, -307, -466,
	-396, -421, -456, 451, 364, -383, 579, -317, -421, -398,
	638, 196, 615, 635, -383, -512, 625, -111, -111, -223,
	633, 633, -561, 634, 638, 635, 633, 615, 615, -231,
	368, -230, 151, 270, 255, 495, 496, 497, 498, 141,
	494, 128, 327, 238, 534, -516, -561, -229, -137, 196,
	-516, 233, 196, -71, 594, 528, 233, -223, 637, 472,
	457, -293, 635, -428, -428, -428, 482, 482, -293, 189,
	-392, -320, -552, -307, -324, -321, -349, 189, 189, -307,
	-307, 567, -452, 365, 295, -499, -261, 602, -324, 637,
	-472, -472, 155, 155, -472, -473, -473, -472, 155, 196,
	633, -472, -483, 34, 34, 634, 638, -468, -472, -351,
	634, 582, -388, -388, 634, 625, -552, 637, 634, -481,
	152, -472, 538, 308, 224, 306, -441, 306, -441, -441,
	-546, 5, -552, 625, -609, -313, 633, -293, 592, -387,
	370, 634, -524, -522, -472, -472, -472, -472, -472, -546,
	-527, -527, -542, -542, -472, -477, -472, -524, -522, -473,
	-473, -473, -473, -473, -473, -473, -473, -473, -473, -473,
	-473, -473, -473, -473, -473, -473, -473, -473, -473, 143,
	346, 357, -473, -478, -477, -472, -472, -522, 634, 634,
	634, -402, -110, 633, 301, -415, 215, -472, -516, 638,
	-415, -415, 634, -503, -503, 633, -472, 263, 632, 638,
	640, 615, 615, -382, 635, -495, -496, 632, 634, 638,
	634, 638, -455, 39, 634, -552, -466, -235, -234, 140,
	56, 111, 138, 353, 361, 195, 220, 415, 155, 190,
	149, 257, -645, -559, -559, 472, 472, 367, 212, 5,
	8, 631, 632, 635, -546, 634, 634, 634, -559, -559,
	472, 472, -617, 557, 472, 29, -559, -271, -271, 123,
	330, -472, -212, 594, 596, 544, 544, 634, 638, 615,
	63, 233, 159, 346, 576, 346, -575, 157, -580, -472,
	633, 242, 633, 633, 2, -257, -258, -259, 147, 485,
	25, -652, 2, 574, 159, -271, 159, -271, 598, 634,
	638, -365, 633, 633, 544, 472, -286, 544, 594, -402,
	-472, -224, 131, -551, -632, 637, -632, 637, 472, 544,
	544, 472, 544, 544, 346, -293, 159, -293, -293, 594,
	173, 173, 600, -278, -472, -472, 189, 544, 594, -402,
	544, -526, 51, 27, 346, -328, -271, 159, 544, 544,
	557, 485, -221, -561, -561, -136, -561, -561, 353, -15,
	-334, -557, -329, 485, 379, 440, -625, -625, 212, -339,
	-647, -516, -228, 368, -227, 151, 453, 141, 270, 238,
	-516, -226, 196, 254, 594, -329, 2, 634, 634, 638,
	638, -581, -272, -324, -309, 242, 242, -316, -294, 39,
	361, 361, 633, -324, -91, 594, -515, -548, -315, 45,
	-327, 39, 159, -626, -140, -329, -520, -521, 5, 39,
	-324, 159, 364, 346, -275, 277, -674, -556, -596, -388,
	-421, -410, 347, 95, 634, -466, -412, -396, -472, 2,
	634, -222, -561, -223, -236, -311, 2, -562, -561, -561,
	638, 633, 615, 615, 615, 615, 615, 615, 615, -229,
	-516, -136, -229, -137, -140, 368, -324, -136, 625, -334,
	-335, 625, -428, 5, -371, -370, 383, 357, -371, 461,
	461, 365, 183, 273, -260, -308, -472, -472, 155, 34,
	34, -472, -472, -483, 634, -472, -472, -402, 632, 5,
	-472, 634, 634, 8, -472, 634, 635, -610, -293, -472,
	634, 63, 634, 634, 638, 638, 634, 634, 634, 634,
	634, 634, 634, -478, 196, 143, 357, 633, 634, 634,
	-110, -480, 218, 63, -503, -480, -480, -430, -392, -503,
	-470, -308, 631, -308, 631, -552, -548, -506, 633, 635,
	-234, 615, -561, -561, 2, 2, 5, 5, 415, 346,
	353, 5, -201, -645, -645, 594, -339, -339, 367, 632,
	2, 631, -552, 634, -339, -339, 196, -619, -339, 529,
	123, 189, 223, 223, -310, -310, -239, -549, 528, 461,
	-278, 406, -463, 159, 159, -582, 97, -584, 79, 175,
	106, 346, 353, 563, 406, 75, 131, 364, 425, -664,
	-665, -666, 39, 605, 606, 634, -390, -500, -595, 633,
	-293, -390, -392, 346, 516, 131, 364, 346, 131, 364,
	589, 123, 2, 557, 82, -310, -318, -237, -392, -392,
	-324, -334, -557, 167, 634, 638, 615, 2, 625, 625,
	-334, -557, -329, -334, -557, -327, 159, 579, -278, 579,
	381, 173, 544, -140, -472, 167, 634, -308, 5, 5,
	159, -305, 79, -310, 5, -310, -328, 123, 594, 472,
	544, 544, 364, 364, 367, -643, -644, -226, 638, 633,
	615, 615, 615, -226, -562, -136, 2, -382, -372, 244,
	-310, -579, -576, -577, 406, -464, -583, -585, 175, 406,
	-360, 633, -309, -294, 633, -140, 2, -240, 633, -358,
	368, 632, -557, -425, -140, -329, -380, 594, -382, 634,
	638, 153, -447, 574, -308, -324, 159, -276, 276, -674,
	-556, -273, -450, -448, 144, 633, 364, -140, -388, 615,
	634, 634, 123, 634, -230, -231, -561, -136, -561, -561,
	-561, -136, -561, -229, -516, -516, -72, -73, 242, 97,
	388, -223, -321, 528, 242, 633, 633, -260, -472, -472,
	-472, 634, -388, -552, 625, -604, 383, 634, -499, -472,
	-472, -473, 196, 633, -483, 634, -605, 593, -472, -416,
	-417, -472, 459, 112, 216, -605, -605, 634, -548, -548,
	2, -561, 2, 2, 353, 2, 2, 2, 544, 544,
	631, 2, 196, 196, -559, 196, 196, 233, -140, 233,
	39, 428, -463, -318, -318, -322, -315, 175, 226, 353,
	589, -446, 268, 633, -473, 567, -324, 633, 2, 225,
	225, 31, 63, -667, 135, 246, 634, 638, -501, -304,
	-293, -472, -501, 634, 634, 353, 567, 353, 589, -472,
	567, -522, 633, -271, -271, 634, 634, -472, 544, -551,
	104, -549, 2, -632, -278, -392, -392, -307, -472, 189,
	-472, 544, 5, -271, -322, -271, -271, -305, 557, 363,
	-334, -557, -329, -648, 529, 479, 558, 473, 199, 460,
	-648, 189, -227, -228, -561, -136, -136, -226, 39, -366,
	-367, 2, -581, 268, -315, 268, 235, 158, -390, 633,
	633, -392, -663, 594, 634, -356, -241, -92, -93, 545,
	-515, -382, 330, 123, 39, 5, 633, 633, -293, 364,
	633, -308, -288, 96, -674, -556, -274, -421, 347, -392,
	97, -450, -479, -223, 633, -223, 634, -649, 39, -229,
	638, 29, 633, 29, 633, -324, -349, -402, -402, 634,
	-388, 63, 638, 634, 634, -473, -483, 634, -606, -607,
	-313, 638, 633, 633, 486, 632, 632, 2, -559, -559,
	2, -559, -559, -559, -559, 472, -278, 406, -293, -575,
	-584, -315, 346, -242, 574, 594, -472, -473, -295, 633,
	-472, 633, 633, 39, 131, 246, 136, 231, -462, -668,
	105, 517, 234, -500, -260, 634, -461, 574, 425, -473,
	-305, -390, 633, 633, 633, 615, 196, -140, 633, -526,
	-271, -328, 615, 544, 2, 2, 196, -625, 634, -638,
	423, -140, -241, 633, -242, -361, 84, 98, 132, 225,
	200, 243, 508, 514, 29, -361, 634, -390, -390, 634,
	-362, 364, 123, 330, 634, 39, -93, 9, 39, 123,
	-140, -520, -390, -324, -390, 364, -280, -279, 285, -556,
	-275, 634, -318, -421, -562, 534, -73, -392, -392, 634,
	634, -611, 416, 462, 217, -402, -389, 634, 638, 39,
	-417, 2, 2, 2, -645, -645, -339, 428, -272, 159,
	219, 634, -586, 300, -293, 634, -425, -425, 39, 136,
	231, -368, -364, 633, -261, -501, -242, 219, -324, -633,
	574, 634, -374, -373, -370, -376, -375, -370, -402, -549,
	104, 381, -402, -305, -136, -559, -559, 364, -640, 197,
	-639, 5, 10, -362, -391, -502, -310, -461, 634, 634,
	85, 123, -372, -140, -140, 2, -380, 634, 634, -447,
	634, -324, -277, -563, 428, 430, -674, -276, -466, 144,
	634, -548, 4, 634, 634, 634, -612, -613, 53, 560,
	113, -472, -612, -612, -607, -609, 196, 175, -460, 603,
	-587, -590, -589, 610, 492, 197, 382, 634, 516, 588,
	634, 634, -667, -392, -460, -382, -472, -461, 634, 638,
	579, 634, 638, 579, 634, 196, 634, -271, -645, -271,
	-648, -225, 594, 48, -287, -286, 634, 638, -462, -461,
	-368, 405, 137, 147, -366, -663, -461, 633, -462, 633,
	-285, -284, -674, -542, -288, 144, 347, 567, -223, -614,
	157, -613, 402, 188, 461, 402, 188, -614, -614, -559,
	-315, -242, 58, -589, 610, -590, 610, 567, 137, -466,
	634, -586, -242, -373, 233, -375, 196, 381, 196, 469,
	-639, 31, -242, -502, -368, -462, -242, 462, 462, 2,
	-241, -362, -462, -390, -368, -390, -281, -282, -283, -392,
	-280, 347, 567, 485, 113, 215, 539, 330, 34, 615,
	-588, 330, 448, 67, 485, -588, -587, 633, 633, -559,
	368, -242, -368, -466, 2, -362, -368, 634, -242, 634,
	-558, 379, -277, 485, -411, 461, 372, -613, -472, 24,
	353, 131, -667, -402, -402, -271, -222, 633, -466, -242,
	-287, -242, -461, -466, -462, -674, -285, -411, -466, 634,
	634, -222, -466, -466, -462, -368, -557, -281, -466, -363,
	-364, 544, 634, -368, -242, 633, -242, -466, -402, -466,
	634, -363,
}

var sqlDef = [...]int{
	-2, -2, 1, 2, 3, 4, 6, 7, 8, 10,
	12, 14, 16, 18, 20, 22, 24, 26, 28, 30,
	31, 32, 34, 36, 38, 40, 591, 592, 594, 595,
	596, 598, 599, 601, 603, 605, 606, 607, 609, 610,
	612, 613, 614, 615, 616, 618, 620, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, -2,
	0, 0, 710, 712, 0, 1567, 1569, 1571, 1573, 0,
	0, -2, -2, 0, 42, 43, 45, 47, 0, -2,
	375, 377, 379, 381, 0, 413, 415, 416, 418, 420,
	421, 423, -2, 0, 524, 525, 527, 529, -2, 0,
	1146, 1148, 1150, 0, 698, 700, 0, 1153, 1155, 1157,
	0, 0, 722, 723, 0, 1681, -2, 714, 716, 718,
	720, 799, 801, 803, 805, 807, 809, 811, 813, 815,
	817, 818, 820, 822, 824, 826, 828, 829, 831, 833,
	835, 836, 838, 839, 841, 843, 845, 847, 849, 851,
	853, 855, 857, 859, 861, 863, 865, 867, -2, 870,
	871, 872, 874, -2, -2, 0, -2, -2, -2, 1585,
	49, 51, 53, 55, 57, 59, 61, 63, 65, 67,
	69, 71, 474, 476, 478, 480, 482, 485, 487, 489,
	1739, 531, 533, 535, 537, 539, 541, 543, 0, 0,
	-2, 1753, 0, 0, 0, 963, 73, 74, 75, 76,
	77, 78, 79, 80, 81, 82, 127, 128, 129, 130,
	131, 132, 133, 86, 87, 88, 90, 91, 92, 93,
	97, 98, 99, 100, 101, 102, 103, 104, 105, 106,
	107, 108, 109, 124, 125, 84, 0, 0, 1712, 1714,
	1716, 1718, -2, 0, 0, 5, 9, 11, 13, 15,
	17, 19, 21, 23, 25, 27, 29, 33, 35, 37,
	39, 593, 597, 600, 602, 604, 608, 611, 617, 619,
	621, 576, 577, 580, 2453, 2471, 2472, 2473, 2476, 2477,
	2478, 2479, 2480, 2481, 2967, 3048, 3049, 2503, 2504, 2505,
	2506, 2507, 2508, 2509, 2510, 2511, 2512, 2513, 2514, 2515,
	2516, 2517, 2518, 2519, 2520, 2521, 2522, 2523, 2524, 2525,
	2526, 2527, 2528, 2529, 2530, 2531, 2532, 2533, 2534, 2535,
	2536, 2537, 2538, 2539, 2540, 2541, 2542, 2543, 2544, 2545,
	2546, 2547, 2548, 2549, 2550, 2551, 2552, 2553, 2554, 2555,
	2556, 2557, 2558, 2559, 2560, 2561, 2562, 2563, 2564, 2565,
	2566, 2567, 2568, 2569, 2570, 2571, 2572, 2573, 2574, 2575,
	2576, 2577, 2578, 2579, 2580, 2581, 2582, 2583, 2584, 2585,
	2586, 2587, 2588, 2589, 2590, 2591, 2592, 2593, 2594, 2595,
	2596, 2597, 2598, 2599, 2600, 2601, 2602, 2603, 2604, 2605,
	2606, 2607, 2608, 2609, 2610, 2611, 2612, 2613, 2614, 2615,
	2616, 2617, 2618, 2619, 2620, 2621, 2622, 2623, 2624, 2625,
	2626, 2627, 2628, 2629, 2630, 2631, 2632, 2633, 2634, 2635,
	2636, 2637, 2638, 2639, 2640, 2641, 2642, 2643, 2644, 2645,
	2646, 2647, 2648, 2649, 2650, 2651, 2652, 2653, 2654, 2655,
	2656, 2657, 2658, 2659, 2660, 2661, 2662, 2663, 2664, 2665,
	2666, 2667, 2668, 2669, 2670, 2671, 2672, 2673, 2674, 2675,
	2676, 2677, 2678, 2679, 2680, 2681, 2682, 2683, 2684, 2685,
	2686, 2687, 2688, 2689, 2690, 2691, 2692, 2693, 2694, 2695,
	2696, 2697, 2698, 2699, 2700, 2701, 2702, 2703, 2704, 2705,
	2706, 2707, 2708, 2709, 2710, 2711, 2712, 2713, 2714, 2715,
	2716, 2717, 2718, 2719, 2720, 2721, 2722, 2723, 2724, 2725,
	2726, 2727, 2728, 2729, 2730, 2731, 2732, 2733, 2734, 2735,
	2736, 2737, 2738, 2739, 2740, 2741, 2742, 2743, 2744, 2745,
	2746, 2747, 2748, 2749, 2750, 2751, 2752, 2753, 2754, 2755,
	2756, 2757, 2758, 2759, 2760, 2761, 2762, 2763, 2764, 2765,
	2766, 2767, 2768, 2769, 2770, 2771, 2772, 2773, 2774, 2775,
	2776, 2777, 2778, 2779, 2780, 2781, 2782, 2783, 2784, 2785,
	2786, 2787, 2788, 2789, 2790, 2791, 2792, 2793, 2794, 2795,
	2796, 2797, 2798, 2799, 2800, 2801, 2802, 2803, 2804, 2805,
	2806, 2807, 2808, 2809, 2810, 2811, 2812, 2813, 2814, 2815,
	2816, 2817, 2818, 2819, 2820, 2821, 2822, 2823, 2824, 2825,
	2826, 2827, 2828, 2829, 2830, 2831, 2832, 2833, 2834, 2835,
	2836, 2837, 2838, 2839, 2840, 2841, 2842, 2843, 2844, 2845,
	2846, 2847, 2848, 2849, 2850, 2851, 2852, 2853, 2854, 2855,
	2856, 2857, 2858, 2859, 2860, 2861, 2862, 2863, 2864, 2865,
	2866, 2867, 2868, 2869, 2870, 2871, 2872, 2873, 2874, 2875,
	2876, 2877, 2878, 2879, 2880, 2881, 2882, 2883, 2884, 2885,
	2886, 2887, 2888, 2889, 2890, 2891, 2892, 2893, 2894, 2895,
	2896, 2897, 2898, 2899, 2900, 2901, 2902, 2903, 2904, 2905,
	2906, 2907, 2908, 2909, 2910, 2911, 2912, 2913, 2914, 2915,
	2916, 2917, 2918, 2919, 2920, 2921, 2922, 2923, 2924, 2925,
	2926, 2927, 2928, 2929, 2930, 2931, 2932, 2933, 2934, 2935,
	2936, 2937, 2938, 2939, 2940, 2941, 2942, 2943, 2944, 2945,
	2946, 578, 579, 1340, 0, 660, 658, 2436, 661, 2750,
	663, 665, 518, 519, 520, 521, 522, 523, 0, 691,
	2848, 675, 1751, 692, 694, 695, 696, 697, 655, 653,
	0, 696, 691, 2508, 2848, 689, 1565, 1566, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 530, 0, 0, 0,
	0, -2, 0, 0, 0, 0, 0, 0, 0, 453,
	1403, 1404, 1405, 1550, 1551, 2803, 1592, 0, 259, 711,
	-2, -2, 2932, -2, 753, 754, -2, -2, 768, 772,
	763, 2936, 0, 2806, 2789, -2, 775, 1568, 1570, 1572,
	875, 876, 877, 2457, 881, 879, 891, 892, 895, 0,
	912, -2, 0, 2504, 2773, -2, -2, 913, 914, -2,
	-2, -2, -2, 893, 894, 0, 0, 0, 0, 0,
	44, 46, 48, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 267, 269, -2, -2, -2,
	-2, 2812, 0, 0, 2854, 2563, 2404, 2473, 2407, 2402,
	376, 378, 380, 382, 383, 0, 0, 0, 0, 0,
	0, 0, 414, 417, 419, 422, -2, 424, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 452, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, -2,
	-2, 0, 0, 0, 0, 0, 0, 0, 0, 1220,
	1212, 1213, 1470, 0, 0, 0, -2, 526, 528, 581,
	582, 0, 1740, 1740, 589, 590, -2, 0, 0, 0,
	0, 337, 327, 1147, 1149, 1151, 1152, 0, 0, 0,
	0, 0, 699, 701, 0, 0, 2848, 301, 1154, 1156,
	1158, 1159, 0, 0, 0, 0, 0, 0, 339, 0,
	0, 715, 717, 719, 721, 800, 802, 804, 806, 808,
	810, 812, 814, 816, 819, 821, 823, 825, 827, 830,
	832, 834, 837, 840, 842, 844, 846, 848, 850, 852,
	854, 856, 858, 860, 862, 864, 866, 868, 869, 920,
	0, 0, 0, 0, -2, -2, -2, 0, 0, 0,
	-2, 0, -2, -2, -2, 0, 0, 0, 0, 0,
	0, 0, -2, 0, 0, 1032, 0, 0, 0, -2,
	-2, -2, 0, 0, 0, 0, 0, 0, 0, -2,
	-2, 0, 0, 0, 0, -2, 0, 1124, 0, 0,
	923, 926, 927, 928, 929, 930, 931, 932, 0, 1005,
	1030, 1031, 1041, 873, 0, 1383, 1741, 1594, 1575, 1589,
	1594, 1577, 1578, 1579, 1580, 1581, 1586, 1588, 1582, 1583,
	1584, 50, 52, 54, 56, 58, 60, 62, 64, 66,
	68, 70, 72, 475, 477, 479, 481, 483, 486, 488,
	490, -2, 1710, 1711, 532, 534, 536, 538, 540, 542,
	544, 702, 0, 705, 0, 925, 704, -2, 0, 1745,
	1745, 1745, 0, 0, 1711, 1709, 0, 0, 0, 708,
	709, 779, 780, 2018, 0, 0, 0, 0, 0, 0,
	0, 0, 2278, 2106, 0, 781, -2, 2139, 2141, 2907,
	2723, 2932, 2277, 2143, 2144, 2145, 2146, 2147, 0, 2149,
	2150, 2151, 2152, 2153, 2154, 0, 2156, 0, 2161, 2162,
	2163, 0, 2914, 2381, 2467, -2, 0, 0, 2920, 2463,
	0, 2244, 2179, -2, -2, 2490, 2469, 1950, 1951, 1952,
	1953, 1954, -2, -2, 2950, 2183, 2184, 2185, 2186, 2187,
	2188, 2189, 2190, 2191, 2192, 2193, 0, 2895, 2915, 2916,
	2921, 2923, 2917, 2904, 2204, 2577, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, 1977,
	1986, -2, -2, -2, -2, -2, -2, -2, 2908, 2909,
	2926, 2929, 2935, 2940, 2941, 2913, 2922, 2949, 2951, 2952,
	2953, 2954, 2955, 2956, 2957, 2958, 2959, 2960, 2961, 2962,
	2963, 2964, 2965, 2966, 1978, -2, -2, -2, -2, 0,
	1728, 2766, 1731, 1340, 1729, 1713, 1715, 0, 1717, 0,
	0, 0, 1722, 1748, 1746, 0, 1797, 1726, 1727, 1820,
	1820, 1844, 0, 1825, 0, 1844, 1740, 1871, 0, 1831,
	2794, 2180, 2181, 0, 2473, 2468, -2, -2, 2947, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	656, 0, 662, 664, 0, 0, 0, 0, 691, 690,
	1750, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	456, 457, 458, 459, 460, 2915, 0, 0, 0, 465,
	0, 467, 468, 469, 470, 471, 472, 473, 229, 2915,
	549, 574, 0, 229, 2915, 552, 229, 2915, 555, 0,
	558, 1468, 229, 2915, 561, 2432, 229, 2915, 564, 566,
	2440, 229, 2915, 570, 2447, 2445, 571, 0, 573, 249,
	245, 246, 247, 248, 1561, 1562, 1563, 1564, 0, 1591,
	1469, 713, 0, 739, 0, 751, 752, 2903, -2, 0,
	2815, 756, 757, -2, 759, 1595, 1599, 1600, 1601, 1602,
	1603, 0, 0, 0, 0, 1608, 0, 0, 0, 0,
	746, 747, 766, 767, 773, 776, 0, 884, 880, 896,
	0, 911, 0, 912, 912, 2421, 2412, 2413, 0, 0,
	912, 912, 0, 0, 915, 916, 917, 918, 919, 83,
	0, 2915, 1871, 85, 0, 2426, 2498, 2499, 2500, 2501,
	2502, 2948, 2968, 2969, 2970, 2971, 2972, 2973, 2974, 2975,
	2976, 2977, 2978, 2979, 2980, 2981, 2982, 2983, 2984, 2985,
	2986, 2987, 2988, 2989, 2990, 2991, 2992, 2993, 2994, 2995,
	2996, 2997, 2998, 2999, 3000, 3001, 3002, 3003, 3004, 3005,
	3006, 3007, 3008, 3009, 3010, 3011, 3012, 3013, 3014, 3015,
	3016, 3017, 3018, 3019, 3020, 3021, 3022, 3023, 3024, 3025,
	3026, 3027, 3028, 3029, 3030, 3031, 3032, 3033, 3034, 3035,
	3036, 3037, 3038, 3039, 3040, 3041, 3042, 3043, 3044, 3045,
	3046, 3047, 2950, 89, 0, 2915, 94, 0, 2915, 0,
	-2, 110, 0, 126, 0, 153, -2, -2, -2, 134,
	0, 2915, 0, 2401, -2, 0, 241, 328, 329, 330,
	0, 637, 0, 646, 340, 341, 2486, 2487, 2494, 2495,
	2496, 2497, 0, 742, 2278, 0, 0, 1184, -2, 0,
	1396, 1398, 1398, 0, -2, 0, 0, 1133, 2398, 2403,
	0, 1135, 1136, 1137, 2422, 1138, 2408, 0, 384, 385,
	386, 387, 388, 0, 389, 2915, 391, 392, 0, 394,
	395, 2915, 397, 398, 0, 400, 0, 402, 0, 281,
	285, 2915, 2915, 426, 429, 0, 431, 432, 0, 434,
	0, 0, 0, 438, -2, 454, 0, 451, 441, 442,
	444, 445, 446, 447, 448, 0, 494, 492, 2437, 0,
	-2, 2915, 0, 1181, 0, 0, 1448, -2, 0, 1389,
	0, 1455, 2915, 1451, 0, -2, 0, 1738, 2915, 1612,
	1216, 1217, 1218, 1219, 1883, 515, 0, 1645, 0, 1647,
	0, 1667, 1877, 1820, 0, 0, 1882, 0, -2, 634,
	2456, -2, 584, 0, 585, 0, -2, 0, 354, 0,
	0, 1162, 1164, 1165, 1167, 1168, 1171, 1172, 1173, 1174,
	0, 1176, 1857, 302, 304, 0, 0, 0, 0, 1161,
	1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 0,
	0, 724, 0, 0, 921, 922, 0, 0, 940, 941,
	942, 0, 0, 354, -2, -2, -2, 950, 0, 957,
	960, -2, 0, 0, 0, 0, 967, 0, 972, 973,
	974, 0, -2, 0, 981, 983, 1145, 985, 0, 0,
	987, 0, 991, 0, 994, 0, 996, 0, 998, -2,
	-2, -2, 1006, 1007, -2, 1012, -2, 0, 1016, -2,
	0, 1019, 0, 1022, -2, 0, 1032, 1028, 1029, 0,
	0, 0, 0, 1049, 1050, 0, 1059, 0, 1062, 1063,
	1064, 0, 0, 1069, 1070, 0, 1072, 1073, 1074, 1076,
	1077, 1078, 0, 2884, 2812, 2563, 0, 1086, -2, 1092,
	1094, 0, -2, 0, 1110, 0, 1114, 0, 0, 1123,
	0, 0, 0, 924, 0, 933, 934, 935, 229, 1875,
	1574, -2, 1576, 0, -2, 0, 703, 0, 707, 1770,
	1696, 1693, 0, 1767, 1768, 1697, 0, 0, 0, 1704,
	0, 1743, 1744, 0, 0, 0, 1683, 1684, 0, 0,
	0, 0, 0, 0, 2283, 2284, 2285, 2286, 2299, 2287,
	2288, 2298, 2296, 2297, 2289, 2290, 2295, 2309, 2310, 2300,
	2301, 2291, 2304, 2302, 2303, 2305, 2306, 2307, 2308, 0,
	0, 2314, 0, 2292, 2293, 2294, 2322, 0, 0, 2323,
	0, 2325, 0, 2315, 2311, 2312, 2313, 0, 2085, 2087,
	2389, 0, 0, 0, 2321, 2316, 2317, 2023, 2024, 2025,
	2026, 2027, 2060, 2064, 2065, 0, 0, 2140, 2386, 2385,
	2142, 0, 0, 2337, 0, 2155, -2, 0, 2278, 2332,
	0, 0, 2164, 2165, 2166, 0, 0, 2337, 0, 0,
	2380, 2176, 2177, 2015, 0, 0, 2246, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1964, 1963, 0, 1965, 0,
	1966, 1967, 1974, 1987, 0, 0, 0, 0, 1991, 0,
	0, 0, 0, 0, 0, 0, 2361, -2, 0, 0,
	0, 0, 1979, 0, 0, 1730, 0, 0, 1801, 2390,
	2394, 2395, 1801, 1801, 0, 0, 2338, 1868, 1868, 0,
	0, 1863, 1863, 1863, 1861, 1844, 0, 1844, 1854, 0,
	1844, 1844, 0, -2, 1825, 0, 0, 1854, 0, 1838,
	622, 624, 626, 628, 629, 630, 632, 1872, 1873, 0,
	0, 0, 0, 2474, 0, 0, 0, 0, 0, 0,
	2459, 0, 0, 2431, 409, 410, 0, 0, 0, 2866,
	2806, 0, 667, 693, 0, 1740, 0, 2340, 1898, 1902,
	0, 1904, 1905, 1906, 1907, 1908, 0, 0, 1899, -2,
	1975, 1977, 1998, 2491, 2492, 2493, 1958, 1959, 1960, 1961,
	1962, 1970, 1957, 1957, 1957, 1968, 1997, 1989, 1997, 1993,
	1943, 1944, 1945, 1980, 1981, 1982, 1983, 0, 2866, 2806,
	0, -2, 0, 678, 0, 0, 0, 1678, 455, 0,
	462, 463, 464, 0, 545, 0, 227, 228, 0, 229,
	2915, 550, 0, 553, 0, 229, 2915, 2396, 559, 0,
	562, 0, 0, 568, 0, 0, 0, 0, 0, 229,
	1680, 0, 0, 0, 0, -2, 761, 769, 770, 771,
	0, 1597, 0, 1604, 790, 791, 792, 1606, 1607, 0,
	1609, 764, 793, 794, 795, 796, 797, 798, 0, 2410,
	2411, 2416, 2417, 0, 0, 762, 783, 765, 0, 777,
	887, 882, 883, 897, 898, 0, 0, 2414, 2415, 0,
	0, 903, 904, 135, 1547, 0, 0, 182, 0, 1547,
	1547, 0, 0, 0, 0, 210, 0, 0, 1250, 0,
	0, 0, 0, 153, 167, 178, 147, 148, 149, 0,
	0, 0, 0, 0, 0, 95, 1362, 0, 1365, 0,
	0, 0, 0, 0, 0, 0, 1378, 1381, 0, 0,
	0, 0, 0, 112, 113, 0, 0, 118, 119, 0,
	0, 166, 0, 0, 0, 0, 0, 0, 1642, 0,
	157, 153, 0, 0, 152, 154, 137, 0, 0, 153,
	168, 180, 0, 216, 218, 1247, 0, 0, 0, 0,
	0, 0, 0, 0, 240, 251, 0, 636, 638, 0,
	0, 0, 0, 644, 0, 647, 0, 740, 744, 745,
	0, 0, 741, 743, 0, 0, 1390, 0, 0, 0,
	1737, 0, 0, 0, 0, 2915, 1545, 0, 1528, 0,
	1857, 2652, -2, -2, 302, 1857, 0, 1134, 0, 2474,
	2406, 0, 0, 0, 0, 0, 0, 401, 0, 0,
	0, 0, 430, 433, 435, 436, 437, 0, 1447, 0,
	443, 484, 1309, 2915, 0, 0, 513, 506, 0, 509,
	0, 0, 1361, 2915, 1359, 2441, 0, 1387, 0, 1340,
	2915, 2439, 0, 0, 0, 1456, 2483, 1465, 1469, 1630,
	0, 517, 0, 1648, 1650, 0, 0, 1878, 0, 1880,
	1820, 1740, 0, 0, 0, 0, 332, 0, 0, 0,
	0, 0, 0, 1175, 311, 0, 1856, 0, 0, 342,
	1857, 302, 2779, 0, 1160, 354, 354, 1857, 726, 1857,
	728, 0, 0, 943, 0, 0, 946, 354, 354, 354,
	955, 956, 958, 959, -2, -2, -2, -2, 961, 962,
	1056, 0, 0, 0, 1055, 1543, 0, 977, 980, 984,
	0, 1127, 2789, 2806, 2866, 1143, 1056, 2563, 1056, 2563,
	1056, 2563, 1056, 1056, 1000, 1044, 1052, 1011, 1018, 0,
	1013, 1017, 1020, 1023, 0, 1025, 1033, 0, -2, 0,
	1036, 0, 1038, 0, 1040, 1056, 1057, 1060, 0, 1068,
	1071, 0, 1079, 1080, 1081, 1082, 2454, 1083, 1084, 1085,
	-2, 1089, 1090, 0, 1101, 1106, 1107, 1103, 0, 0,
	0, 0, 0, 0, 1117, 1118, 0, 0, 0, 1126,
	0, 936, 1382, 0, 1587, 1770, 1696, 706, 1687, 1769,
	1688, 1695, 1698, 0, 0, 1700, 0, 1702, 0, 1765,
	1766, 1773, 1774, 0, 1784, 1785, 1777, 0, -2, 0,
	0, 1780, 1781, 1706, 0, 1723, 1724, 1725, 1754, 1757,
	1484, 0, 3048, 749, 0, 2019, 1893, 2020, 2021, 2425,
	0, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036,
	2037, -2, -2, -2, -2, -2, -2, -2, -2, 2046,
	2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056,
	-2, -2, -2, 2061, 2062, 2063, -2, 2324, 2326, 0,
	2389, 0, -2, 0, -2, -2, -2, -2, 2082, 0,
	2084, 2089, 2091, 2093, 0, 0, 0, 0, 2388, 2103,
	2372, 2373, 0, 0, 2280, 2281, 2282, 2088, 0, 2107,
	2387, 2384, 0, 0, 2318, 0, 2283, 2284, 2285, 2286,
	2287, 2288, 2289, 2290, 2291, 2292, 2293, 2294, 2295, 2296,
	2297, 2298, 2299, 2300, 2301, 2302, 2303, 2304, 2305, 2306,
	2307, 2308, 2309, 2310, 2311, 2312, 2313, 2314, 2315, 0,
	2336, 1753, 2168, 0, 0, 0, 0, 2175, 2160, 2334,
	0, 2333, 0, 0, 0, 2344, 0, 2379, 2375, 0,
	2423, 2014, 2001, 2002, 2003, 2004, 2005, 2006, 2016, 0,
	2420, 2460, 2466, 2254, 0, 0, 0, 2205, 2206, 2207,
	2208, 2209, 0, 2211, 2212, 0, 2214, 2215, 0, 2217,
	2218, 0, 2220, 2221, 2222, 2223, 2224, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1911, 1912, 1913, 1914, 1915, 1916,
	1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925, 1926,
	1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936,
	1937, 1938, 1939, 1940, 1941, 1942, 0, 0, 2226, 0,
	2347, -2, -2, -2, -2, -2, -2, -2, -2, 0,
	2228, 0, 2230, 2338, 2358, 0, 0, 2108, 0, 0,
	0, 0, 0, 2233, 2338, 2366, 0, 0, 0, 0,
	0, 2338, 0, 2371, 0, 2240, 0, 2242, 964, 965,
	1732, 0, 0, 1888, 0, 0, 0, 2393, 1888, 1888,
	0, 1796, 0, 0, 1864, 1865, 1866, 1867, 0, 0,
	1868, 0, 1858, 1862, 1859, 1860, 1854, 1817, 0, 0,
	2427, 1854, 1823, 1853, 0, 1340, 1843, 1854, 1854, 0,
	-2, 1827, 1844, 0, 0, 623, 625, 627, 631, 633,
	0, 0, 1753, -2, 0, -2, 356, 1339, 0, 0,
	0, 0, 0, 0, 657, 659, 0, 0, 565, 0,
	0, 0, 0, 1531, 651, 0, 654, 0, 1889, 1892,
	0, 0, 1903, 1909, 1910, 0, -2, 0, 0, 1999,
	0, 0, 0, 0, 0, 0, 688, 0, 0, 687,
	0, 0, 466, 575, 229, 547, 0, 229, 229, 556,
	0, 0, 229, 567, 229, 2448, 229, 2446, 250, 572,
	1679, 262, 0, 748, 0, 1596, 1605, 0, 787, 0,
	789, 0, 2418, 2419, 0, 778, 0, 885, 0, 899,
	900, 901, 902, 0, 0, 0, 0, 1546, 0, 0,
	1491, 0, 0, 186, 2915, 0, 231, 0, 0, 1302,
	2433, 0, 1292, 0, 0, 2585, 0, 0, 0, 0,
	0, 203, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 144, 0, 150, 151, 0, 0, 0, 0,
	0, 0, 0, 0, 1363, 1364, 1366, 1373, 1375, 0,
	1369, 1370, 0, 1372, 1374, 1376, 0, 1379, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 120,
	1399, 0, 0, 0, 1400, 1401, 1402, 1618, 1619, 0,
	1641, 1642, 0, 0, 0, 0, 0, 0, 0, 146,
	0, 0, 0, 0, 2400, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 639, 354, 641, 642,
	350, 347, 349, 643, 648, 0, 649, 0, 0, 0,
	0, 1392, 0, 1443, 1441, 1415, 1416, 1417, 1418, 1419,
	1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429,
	1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439,
	1440, 0, 0, 0, 0, -2, 1394, 1395, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 272, 0, 345,
	2399, 2409, 0, 1169, 1170, 390, 393, 396, 399, 268,
	0, 0, 428, 439, 0, 0, 1222, 1194, 0, 0,
	493, 354, 0, 0, 508, 0, 2452, 1179, 1357, 1360,
	0, 1340, 2915, 1411, 0, 0, 0, 0, 0, 0,
	1454, 0, 0, 2915, 2428, 2482, 2483, 1632, 1642, 0,
	1888, 0, 1665, 1651, 0, 0, 0, 1665, 1669, 1670,
	1672, 1673, 0, 0, 1879, 1885, 583, 635, 1740, 1740,
	354, 352, 2726, 0, 0, 1654, 1656, 0, 0, 0,
	294, 0, 305, 1857, 303, 0, 311, 0, 0, 1857,
	302, 0, 505, 725, 730, 938, 0, 0, 354, 947,
	948, 949, 1002, 1046, 1054, 1105, 966, 968, 969, 970,
	0, 975, 0, 0, 0, 1144, 1139, 1140, 1141, 2449,
	2445, 1142, 986, 1056, 989, 1056, 992, 1056, 995, 997,
	1015, 1021, 1034, 1027, 1035, 0, 0, 0, 1048, 0,
	1066, 0, 1075, 1088, 0, 0, 0, 0, 0, 0,
	0, 1111, 1112, 1113, 1115, 1120, 1119, 0, 1125, 937,
	1876, 1691, 1692, 1694, 0, 1703, 0, 0, 1779, -2,
	-2, 1778, 1782, 1783, -2, -2, -2, -2, 1699, 0,
	1708, 1705, 0, 1764, 1482, 1483, 0, 0, 750, 0,
	0, -2, -2, 0, 0, 0, 2104, 0, -2, 2083,
	2086, 2090, 2092, 2094, 0, 0, 0, 0, 0, 0,
	2327, 0, 2329, 2105, 2382, 2385, 2320, 0, 2276, 0,
	0, 1752, 1753, 1753, 0, 2174, 0, 2335, 0, 2342,
	2343, 0, 2167, 0, 2376, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2178, 0, 0, 0, 0, 2210,
	2213, 2216, 2219, 0, 0, 0, 0, 2199, 0, 0,
	0, 2203, 1969, 1955, 0, 1997, 1995, 1996, 1990, 1997,
	1994, 1947, 0, 1946, 0, 2225, 0, 2227, 2229, 0,
	0, 2231, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2111, 2112, 2113, 2133,
	2232, 2364, 2365, 0, 0, 0, 0, 0, 0, 2238,
	0, 2370, 2239, 2241, 1740, 0, 1733, 0, 1798, 1787,
	1887, 0, 2391, 1857, 1800, 1802, 2392, 2430, 1787, 1787,
	0, 2339, 0, 0, 1848, 0, 0, 0, 1850, 1821,
	0, 0, 1815, 0, 1806, 1807, 1808, 1809, 1810, 1811,
	1812, 1822, 1340, 1852, 1824, 1828, 2460, 0, 1854, 0,
	1839, 0, 1841, 1874, 0, 1833, 1836, 0, 0, 2475,
	1888, 0, 403, 411, 412, 404, 405, 406, 407, 0,
	1531, 0, 0, 0, 0, 0, 674, 0, 0, 2341,
	0, 1894, 0, 1900, 0, 0, 0, 0, 676, 0,
	0, 0, 0, 0, 0, 1677, 461, 546, 229, 551,
	554, 2397, 229, 560, 563, 569, 258, 0, 738, -2,
	785, 786, 788, 0, 784, 890, 886, 183, 1547, 0,
	0, 0, 1487, 0, 1205, 0, 1200, 1201, 1489, 2444,
	1493, 1499, 1502, 0, 188, 2915, 200, 0, 2915, 0,
	1266, 0, 0, 0, 0, 0, 0, 1549, 0, 0,
	2915, 229, 2915, 229, 204, 206, 209, 0, 215, 211,
	0, 1202, 0, 1254, 0, 0, 1257, 136, 1547, 0,
	0, 139, 143, 155, 0, 0, 0, 165, 0, 0,
	0, 1504, 1508, 1516, 0, 0, 0, 1367, 1368, 1371,
	1377, 1380, 96, 0, 0, 0, 1512, 1514, 1520, 111,
	114, 2915, 2442, 0, 116, 2915, 0, 0, 0, 1486,
	0, 0, 0, 0, 0, 0, 0, 0, 217, 141,
	145, 156, 0, 1522, 138, 0, 244, 0, 0, 234,
	229, 2915, 0, 236, 0, 237, 238, 252, 0, 0,
	0, 640, 0, 0, 0, 645, 0, 1182, 1183, 1442,
	0, 1385, 1386, 0, 1397, 1391, 0, 0, 0, 0,
	0, 1524, 1525, 0, 0, 0, 1545, 1540, 1857, 264,
	0, 1857, 272, 0, 2405, 0, 286, 425, 0, 0,
	0, 0, 1221, 1320, 1223, 1225, 1226, 1227, 231, 0,
	2483, 1292, 2641, 2483, 0, 0, 1189, 0, 0, 0,
	499, 495, 0, 504, 507, 512, 0, 511, 2434, -2,
	0, 0, 0, 0, -2, 0, 0, 1458, 1452, 1453,
	0, 0, 0, 0, 2915, 1634, 1642, 0, 1738, 1753,
	516, 1643, 1665, 0, 0, 0, 1653, 1649, 1646, 1888,
	0, 0, 0, 0, 0, 1881, 1884, 586, 587, 331,
	0, 0, 354, 0, 0, 0, 0, 0, 0, 309,
	0, 312, 0, 0, 0, 317, 318, 319, 320, 321,
	322, 0, 0, 0, 0, 311, 343, 296, 1857, 0,
	311, 0, 0, 727, 0, 0, 0, 945, 0, 0,
	1543, 979, 0, 988, 990, 993, 1037, 1039, 1056, 0,
	1067, 1095, 2429, 1096, 1244, 0, 1244, 0, 0, 1116,
	1122, 1701, 0, 1776, 1707, 1758, 1759, 0, 1484, 0,
	2022, 2067, 0, 0, -2, 0, 0, 2071, 0, 0,
	0, -2, 0, 0, 0, 2328, 2330, 0, 2384, 2319,
	2169, 0, 0, 0, 2173, 2157, 2158, 0, 2279, 2345,
	2374, 2378, 0, 2007, 2008, 2009, 2010, 2011, 2012, 2013,
	0, 2424, 2461, 2465, 2252, 2253, 2257, 2438, 0, 0,
	0, 2182, 0, 0, 0, 0, 0, 0, 0, 0,
	1988, 1992, 0, 0, 2346, 2357, 2359, 2109, 2110, 2114,
	2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, -2,
	-2, -2, 2127, 2128, 2129, -2, -2, -2, 2134, 0,
	0, 0, 2360, 2362, 2363, 2367, 2368, 0, 2235, 2236,
	2237, 2369, 0, 1740, 1734, 1795, 0, 1886, 1799, 0,
	1795, 1795, 1747, 1846, 0, 0, 1870, 0, 1818, 0,
	1819, 0, 0, 1851, 0, 1826, 1829, 1830, 1840, 0,
	1832, 0, 1835, 0, 2169, -2, 355, 357, 359, 0,
	362, 363, 0, 0, 0, 0, 368, 0, 0, 0,
	0, 0, 666, 1531, 1531, 0, 0, 668, 0, 652,
	0, 0, 1896, 0, 0, 1972, 1976, 2000, 680, 682,
	0, 0, 0, 2866, 2806, 0, 679, 548, 557, 260,
	0, 1855, 0, 0, 0, 0, 0, 212, 0, 0,
	0, 0, 0, 0, 230, 0, 1301, 0, 1264, 0,
	0, 1291, 0, 0, 1307, 190, 191, 192, 0, 0,
	0, 0, 202, 0, 0, 198, 0, 208, 214, 213,
	0, 1251, 0, 0, 0, 0, 1492, 0, 0, 0,
	162, 163, 164, 0, 169, 0, 170, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 122, 0, 0,
	1624, 1625, 0, 1615, 159, 0, 0, 0, 0, 0,
	0, 232, 0, 0, 0, 1481, 254, 0, 0, 0,
	0, 0, 351, 346, 348, 0, 1384, 1445, 1446, 1393,
	1505, 1509, 1517, 0, 0, 0, 0, 0, 696, 1544,
	0, 272, 270, 0, 273, 0, 276, 277, 0, 0,
	272, 266, 0, 0, 0, 1340, 440, 1192, 1308, 0,
	0, 1310, 1228, 1232, 0, 2483, 2483, 0, 2435, 0,
	1190, 0, 0, 1309, 491, 0, 498, 0, 510, 0,
	1361, 0, 0, 1388, 1414, 1340, 0, 1457, 1459, 0,
	1467, 0, 0, 0, 1636, 1642, 0, 1629, 1630, 1772,
	1644, 1663, -2, 0, 0, 1753, 1671, 1668, 1674, 1675,
	0, 0, 0, 334, 0, 1655, 1657, 0, 1163, 1166,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 295,
	311, 1857, 298, 1857, 338, 0, 939, 354, 971, 1542,
	976, 2450, 1047, 1065, 1097, 1243, 0, 0, 1099, 0,
	0, 1775, 1762, 1763, 1760, 1484, 2069, 2073, 0, 0,
	0, 2075, -2, 0, 2097, -2, -2, 2331, 2383, 2148,
	1753, 2170, 2172, 2159, 2377, 2017, 0, 2259, 2256, 0,
	2243, 0, 2194, 2195, 0, 0, 2198, 2200, 2201, 2202,
	1956, 1949, 1948, 2356, 0, 0, 0, 0, 2234, 1735,
	0, 2248, 0, 0, 1803, 2248, 2248, 1847, 0, 1849,
	1816, 1804, 0, 1813, 0, 2461, 1842, 1834, 0, 0,
	360, 0, 364, 365, 366, 367, 369, 0, 0, 0,
	0, 0, 408, 669, 670, 0, 0, 0, 1530, 1890,
	1895, 0, 1901, 1971, 0, 0, 0, 0, 0, 0,
	261, 0, 888, 889, 184, 185, 1206, 1204, 1496, 1500,
	1497, 0, 187, 0, 0, 1265, 0, 1268, 0, 0,
	0, 0, 1275, 1292, 0, 0, 0, 0, 0, 0,
	1294, 0, 1293, 0, 0, 1324, 0, 1472, 1479, 0,
	-2, 0, 0, 0, 194, 220, 0, 0, 0, 0,
	223, 1548, 196, 0, 0, 229, 229, 1203, 0, 0,
	1488, 1490, 1503, 0, 0, 0, 0, 172, 0, 0,
	1506, 1510, 1518, 1513, 1515, 1521, 0, 0, 117, 0,
	0, 1626, 0, 158, 0, 0, 0, 1523, 242, 243,
	0, 229, 0, 229, 235, 229, 1481, 0, 0, 0,
	0, 0, 0, 0, 0, 1526, 1527, 263, 0, 0,
	0, 0, 0, 265, 344, 272, 427, 0, 1253, 0,
	1320, 1312, 1313, 1314, 0, 1224, 1319, 1321, 0, 0,
	1229, 0, 0, 0, 0, 1209, 1191, 0, 1222, 1194,
	0, 496, 1180, 1358, 1406, 1340, 1409, 0, 0, 1449,
	0, 0, 0, 0, 0, 0, 0, 1638, 1642, 0,
	1631, 1632, 1665, 1771, 0, 0, 0, 1652, 1772, 0,
	353, 354, 0, 354, 313, 0, 314, 315, 316, 323,
	324, 325, 326, 297, 308, 311, 729, 731, 0, 0,
	737, 944, 1242, 0, 0, 0, 0, 1761, 2077, -2,
	-2, 2098, 0, 2462, 2464, 1753, 0, 2245, 1755, 0,
	0, -2, 0, 0, 0, 1736, 1719, 0, 1794, 1786,
	1788, 1790, 2792, 2558, 2914, 1720, 1721, 1869, 0, 0,
	1837, 361, 370, 371, 0, 373, 374, 671, 0, 0,
	0, 1897, 0, 0, 677, 0, 0, 0, 878, 0,
	0, 1498, 189, 0, 0, 1269, 1270, 1272, 0, 1274,
	1276, 1277, 1194, 0, 1281, 0, 2485, 0, 1286, 1289,
	1290, 0, 0, 1303, 1325, 0, 1334, 0, 1474, 1484,
	1478, 0, 1476, 1336, 0, 193, 222, 195, 224, 219,
	0, 1481, 0, 197, 207, 0, 0, 140, 0, 0,
	2552, 175, 173, 171, 115, 121, 123, 1485, 161, 0,
	142, 0, 244, 253, 1480, 255, 239, 229, 0, 0,
	1507, 1511, 1519, 0, 1534, 1535, 1536, 1537, 0, 0,
	0, 0, 274, 0, 275, 278, 279, 0, 0, 1194,
	1252, 1193, 1311, 0, 1322, 1194, 0, 0, 0, 0,
	0, 0, 1196, 0, 1195, 0, 0, 497, 500, 0,
	503, 0, 0, 1413, 0, 1460, 1458, 0, 1466, 0,
	0, 0, 1614, 0, 0, 1633, 1634, 514, 1658, 0,
	0, 1665, 1676, 333, 0, 336, 310, 300, 0, 299,
	0, 733, 0, 735, 0, 1098, 1100, 0, 0, 2171,
	2263, 0, 0, 2196, 2197, -2, 0, 2137, 2247, 2249,
	0, 0, 0, 0, 0, 1805, 1814, 372, 1531, 1531,
	1891, 684, 685, 681, 683, 0, 1494, 0, 1501, 231,
	1267, 1271, 0, 1278, 0, 0, 0, 1282, 1344, 0,
	0, 1361, 1361, 1295, 0, 0, 1328, 1329, 1249, 0,
	1330, 1331, 1332, 1473, 1764, 1479, 1194, 0, 0, 221,
	226, 0, 0, 0, 0, 0, 0, 160, 0, 233,
	256, 1481, 0, 0, 1538, 1539, 0, 0, 271, 290,
	0, 1407, 1196, 0, 1323, 1230, 1233, 1234, 1235, 1236,
	1237, 1238, 1239, 1240, 1241, 1231, 1336, 0, 0, 1300,
	1207, 0, 1210, 0, 1192, 0, 501, 502, 0, 0,
	1414, 0, 0, 1467, 0, 0, 1621, 1613, 1642, 1635,
	1636, 1888, 0, 1666, 0, 0, 732, 0, 0, 1108,
	1109, 0, 0, 0, 0, 2258, 1756, 2138, 0, 0,
	1789, 1791, 1792, 1793, 672, 673, 0, 1495, 201, 0,
	1338, 1280, 1349, 0, 0, 0, 0, 0, 1296, 1326,
	1327, 1324, 1248, 0, 1477, 1475, 1305, 1338, 1340, 199,
	0, 1336, 0, 1258, 0, 0, 1261, 0, 0, 176,
	2552, 174, 0, 229, 650, 1531, 229, 0, 293, 0,
	284, 282, 283, 1188, 0, 1316, 1318, 1334, 1336, 1249,
	0, 1211, 1253, 1209, 1408, 1412, 1410, 1450, 1336, 0,
	1334, 0, 1628, 1642, 1622, 1623, 0, 1638, 0, 0,
	354, 306, 307, 734, 736, 2255, 2275, 2264, -2, 2869,
	2559, 0, 2275, 2275, 2250, 2251, 0, 0, 1194, 0,
	1283, 1345, 1346, 0, 1341, 1342, 1343, 2484, 1284, 1285,
	1287, 1288, 1888, 0, 1335, 1344, 225, 1194, 1255, 0,
	0, 1256, 0, 0, 179, 0, 181, 257, 1529, 1532,
	0, 280, 0, 0, 1185, 1187, 1194, 0, 1249, 1334,
	1194, 0, 0, 0, 1194, 1196, 1334, 0, 1249, 0,
	1617, 1627, 0, 1637, 1614, 0, 1661, 0, 335, 2260,
	0, 0, 2266, 2267, 2268, 2269, 2270, 2261, 2262, 686,
	1273, 1279, 0, 1347, 0, 1348, 0, 0, 0, 1304,
	1333, 1349, 205, 1259, 0, 1262, 0, 177, 0, 0,
	288, 289, 1315, 1317, 1194, 1249, 1888, 1197, 0, 1199,
	1196, 1208, 1249, 0, 1194, 0, 1640, 1616, 1620, 2443,
	1621, 1659, 0, 0, 0, 2272, 2273, 0, 0, 0,
	1350, 0, 1353, 1354, 0, 1351, 1324, 0, 0, 229,
	0, 1888, 1194, 1299, 1198, 1188, 1194, 1336, 1888, 1334,
	1610, 1642, 1628, 0, 1888, 2271, 2274, 2265, 1337, 1352,
	1355, 1356, 1306, 0, 0, 1533, 291, 0, 1297, 1888,
	1186, 1888, 1334, 1463, 1249, 0, 1617, 1888, 1662, 1246,
	0, 0, 1298, 1461, 1249, 1194, 1639, 1611, 1660, 1260,
	1245, 0, 292, 1194, 1888, 0, 1888, 1464, 0, 1462,
	1246, 1263,
}

var sqlTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 621, 3, 627, 622, 3,
	633, 634, 625, 623, 638, 624, 635, 626, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 641, 3,
	613, 615, 614, 618, 637, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 631, 3, 632, 628, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 639, 620, 640, 616,
}

var sqlTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}

var sqlTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 475, 57818, 476, 57819, 477,
	57820, 478, 57821, 479, 57822, 480, 57823, 481, 57824, 482,
	57825, 483, 57826, 484, 57827, 485, 57828, 486, 57829, 487,
	57830, 488, 57831, 489, 57832, 490, 57833, 491, 57834, 492,
	57835, 493, 57836, 494, 57837, 495, 57838, 496, 57839, 497,
	57840, 498, 57841, 499, 57842, 500, 57843, 501, 57844, 502,
	57845, 503, 57846, 504, 57847, 505, 57848, 506, 57849, 507,
	57850, 508, 57851, 509, 57852, 510, 57853, 511, 57854, 512,
	57855, 513, 57856, 514, 57857, 515, 57858, 516, 57859, 517,
	57860, 518, 57861, 519, 57862, 520, 57863, 521, 57864, 522,
	57865, 523, 57866, 524, 57867, 525, 57868, 526, 57869, 527,
	57870, 528, 57871, 529, 57872, 530, 57873, 531, 57874, 532,
	57875, 533, 57876, 534, 57877, 535, 57878, 536, 57879, 537,
	57880, 538, 57881, 539, 57882, 540, 57883, 541, 57884, 542,
	57885, 543, 57886, 544, 57887, 545, 57888, 546, 57889, 547,
	57890, 548, 57891, 549, 57892, 550, 57893, 551, 57894, 552,
	57895, 553, 57896, 554, 57897, 555, 57898, 556, 57899, 557,
	57900, 558, 57901, 559, 57902, 560, 57903, 561, 57904, 562,
	57905, 563, 57906, 564, 57907, 565, 57908, 566, 57909, 567,
	57910, 568, 57911, 569, 57912, 570, 57913, 571, 57914, 572,
	57915, 573, 57916, 574, 57917, 575, 57918, 576, 57919, 577,
	57920, 578, 57921, 579, 57922, 580, 57923, 581, 57924, 582,
	57925, 583, 57926, 584, 57927, 585, 57928, 586, 57929, 587,
	57930, 588, 57931, 589, 57932, 590, 57933, 591, 57934, 592,
	57935, 593, 57936, 594, 57937, 595, 57938, 596, 57939, 597,
	57940, 598, 57941, 599, 57942, 600, 57943, 601, 57944, 602,
	57945, 603, 57946, 604, 57947, 605, 57948, 606, 57949, 607,
	57950, 608, 57951, 609, 57952, 610, 57953, 611, 57954, 612,
	57955, 617, 57956, 619, 57957, 629, 57958, 630, 57959, 636,
	0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := sqlPact[state]
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && sqlChk[sqlAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || sqlExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := sqlExca[i]
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = sqlTok1[0]
		goto out
	}
	if char < len(sqlTok1) {
		token = sqlTok1[char]
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = sqlTok2[char-sqlPrivate]
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = sqlTok3[i+0]
		if token == char {
			token = sqlTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = sqlTok2[1] /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = sqlPact[sqlstate]
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = sqlAct[sqln]
	if sqlChk[sqln] == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = sqlDef[sqlstate]
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && sqlExca[xi+1] == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = sqlExca[xi+0]
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = sqlExca[xi+1]
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = sqlPact[sqlS[sqlp].yys] + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = sqlAct[sqln] /* simulate a shift of "error" */
					if sqlChk[sqlstate] == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= sqlR2[sqln]
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = sqlR1[sqln]
	sqlg := sqlPgo[sqln]
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = sqlAct[sqlg]
	} else {
		sqlstate = sqlAct[sqlj]
		if sqlChk[sqlstate] != -sqln {
			sqlstate = sqlAct[sqlg]
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1569
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1574
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1576
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 9:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1579
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 11:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1580
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 13:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1581
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 15:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1582
		{
			return helpWith(sqllex, "GRANT")
		}
	case 17:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1583
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 19:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1584
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 21:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1585
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 23:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1586
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 25:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1587
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 27:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1588
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 29:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1589
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 33:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1592
		{
			return helpWith(sqllex, "CLOSE")
		}
	case 35:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1593
		{
			return helpWith(sqllex, "DECLARE")
		}
	case 37:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1594
		{
			return helpWith(sqllex, "FETCH")
		}
	case 39:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1595
		{
			return helpWith(sqllex, "MOVE")
		}
	case 41:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1598
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 44:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1607
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 46:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1608
		{
			return helpWith(sqllex, "ALTER TENANT")
		}
	case 48:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1610
		{
			return helpWith(sqllex, "ALTER")
		}
	case 50:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1613
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 52:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1614
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 54:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1615
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 56:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1616
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 58:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1617
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 60:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1618
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 62:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1619
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 64:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1620
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 66:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1621
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 68:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1622
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 70:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1623
		{
			return helpWith(sqllex, "ALTER CHANGEFEED")
		}
	case 72:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1624
		{
			return helpWith(sqllex, "ALTER BACKUP")
		}
	case 83:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1685
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 85:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1711
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 89:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1725
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 94:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1745
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 95:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1749
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 96:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1753
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 110:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1789
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 111:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1793
		{
			sqlVAL.union.val = &tree.AlterDatabaseOwner{Name: tree.Name(sqlDollar[3].str), Owner: sqlDollar[6].union.roleSpec()}
		}
	case 112:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1800
		{

			sqlVAL.union.val = &tree.AlterRoleSet{
				AllRoles:     true,
				DatabaseName: tree.Name(sqlDollar[3].str),
				IsRole:       true,
				SetOrReset:   sqlDollar[4].union.setVar(),
			}
		}
	case 113:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1812
		{

			sqlVAL.union.val = &tree.AlterDatabasePlacement{
				Name:      tree.Name(sqlDollar[3].str),
				Placement: sqlDollar[4].union.dataPlacement(),
			}
		}
	case 114:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1822
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 115:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1829
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:        tree.Name(sqlDollar[3].str),
				Region:      tree.Name(sqlDollar[9].str),
				IfNotExists: true,
			}
		}
	case 116:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1839
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 117:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1846
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:     tree.Name(sqlDollar[3].str),
				Region:   tree.Name(sqlDollar[8].str),
				IfExists: true,
			}
		}
	case 118:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1856
		{
			sqlVAL.union.val = &tree.AlterDatabaseSurvivalGoal{
				Name:         tree.Name(sqlDollar[3].str),
				SurvivalGoal: sqlDollar[4].union.survivalGoal(),
			}
		}
	case 119:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1865
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[4].str),
			}
		}
	case 120:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1872
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[5].str),
			}
		}
	case 121:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1881
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddSuperRegion{
				DatabaseName:    tree.Name(sqlDollar[3].str),
				SuperRegionName: tree.Name(sqlDollar[7].str),
				Regions:         sqlDollar[9].union.nameList(),
			}
		}
	case 122:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1891
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropSuperRegion{
				DatabaseName:    tree.Name(sqlDollar[3].str),
				SuperRegionName: tree.Name(sqlDollar[7].str),
			}
		}
	case 123:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1900
		{
			sqlVAL.union.val = &tree.AlterDatabaseAlterSuperRegion{
				DatabaseName:    tree.Name(sqlDollar[3].str),
				SuperRegionName: tree.Name(sqlDollar[7].str),
				Regions:         sqlDollar[9].union.nameList(),
			}
		}
	case 126:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1930
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 134:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1962
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 135:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1966
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 136:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1970
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 137:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1976
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 138:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1980
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 139:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1986
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 140:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1995
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 141:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2006
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 142:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2010
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 143:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2016
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 144:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2024
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 145:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2034
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 146:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2038
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 151:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2050
		{
			sqlVAL.union.val = tree.RelocateLease
		}
	case 152:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2056
		{
			sqlVAL.union.val = tree.RelocateVoters
		}
	case 153:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2060
		{

			sqlVAL.union.val = tree.RelocateVoters
		}
	case 154:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2065
		{
			sqlVAL.union.val = tree.RelocateNonVoters
		}
	case 155:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2071
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:    tree.TableIndexName{Table: name},
				Rows:            sqlDollar[6].union.slct(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 156:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2083
		{

			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:    sqlDollar[3].union.tableIndexName(),
				Rows:            sqlDollar[6].union.slct(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 157:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2104
		{
			var zoneName string
			switch e := sqlDollar[3].union.expr().(type) {
			case *tree.UnresolvedName:
				if e.NumParts != 1 {
					return setErr(sqllex, errors.New("only simple names are supported in ALTER RANGE ... CONFIGURE ZONE"))
				}
				zoneName = e.Parts[0]
			case tree.DefaultVal:
				zoneName = "default"
			default:
				return setErr(sqllex, errors.New("only simple names are supported in ALTER RANGE ... CONFIGURE ZONE"))
			}
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(zoneName)}
			sqlVAL.union.val = s
		}
	case 158:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2124
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows:            sqlDollar[8].union.slct(),
				FromStoreID:     tree.DNull,
				ToStoreID:       sqlDollar[6].union.expr(),
				SubjectReplicas: tree.RelocateLease,
			}
		}
	case 159:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2133
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				FromStoreID:     tree.DNull,
				ToStoreID:       sqlDollar[7].union.expr(),
				SubjectReplicas: tree.RelocateLease,
			}
		}
	case 160:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2144
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows:            sqlDollar[10].union.slct(),
				FromStoreID:     sqlDollar[6].union.expr(),
				ToStoreID:       sqlDollar[8].union.expr(),
				SubjectReplicas: sqlDollar[4].union.relocateSubject(),
			}
		}
	case 161:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2153
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				FromStoreID:     sqlDollar[7].union.expr(),
				ToStoreID:       sqlDollar[9].union.expr(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 162:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2166
		{

			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: sqlDollar[4].union.expr()}
		}
	case 163:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2171
		{
			sqlVAL.union.val = &tree.SetZoneConfig{Options: sqlDollar[4].union.kvOptions()}
		}
	case 164:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2175
		{

			sqlVAL.union.val = &tree.SetZoneConfig{SetDefault: true}
		}
	case 165:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2180
		{
			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: tree.DNull}
		}
	case 166:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2186
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 167:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2194
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 168:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2205
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 169:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2215
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 170:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2225
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 171:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2234
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 172:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2245
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 173:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2251
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 174:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2259
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 175:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2263
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 176:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2267
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 177:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2271
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 178:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2277
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 179:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2282
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 180:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2293
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 181:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2297
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 182:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2303
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 183:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2307
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 184:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2314
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 185:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2319
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 186:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2324
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 187:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2329
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 188:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2334
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 189:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2339
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 190:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2344
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 191:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2349
		{
			sqlVAL.union.val = &tree.AlterTableSetOnUpdate{Column: tree.Name(sqlDollar[3].str), Expr: sqlDollar[4].union.expr()}
		}
	case 192:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2354
		{
			sqlVAL.union.val = &tree.AlterTableSetVisible{Column: tree.Name(sqlDollar[3].str), Visible: sqlDollar[4].union.bool()}
		}
	case 193:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2359
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 194:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2364
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 195:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2369
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 196:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2373
		{
			return unimplemented(sqllex, "alter table alter column add")
		}
	case 197:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2378
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 198:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2387
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 199:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2399
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 200:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2409
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 201:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2417
		{
			def := sqlDollar[7].union.constraintDef()
			def.SetName(tree.Name(sqlDollar[6].str))
			def.SetIfNotExists()
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      def,
				ValidationBehavior: sqlDollar[8].union.validationBehavior(),
			}
		}
	case 202:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2427
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 203:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2430
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table inherits")
		}
	case 204:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2436
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table no inherits")
		}
	case 205:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2443
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:       sqlDollar[7].union.idxElems(),
				Sharded:       sqlDollar[9].union.shardedIndexDef(),
				StorageParams: sqlDollar[10].union.storageParams(),
			}
		}
	case 206:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2451
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 207:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2458
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 208:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2467
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 209:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2476
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 210:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2481
		{
			sqlVAL.union.val = &tree.AlterTablePartitionByTable{
				PartitionByTable: sqlDollar[1].union.partitionByTable(),
			}
		}
	case 211:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2488
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 212:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2495
		{
			sqlVAL.union.val = &tree.AlterTableSetStorageParams{
				StorageParams: sqlDollar[3].union.storageParams(),
			}
		}
	case 213:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2501
		{
			sqlVAL.union.val = &tree.AlterTableResetStorageParams{
				Params: sqlDollar[3].union.storageParamKeys(),
			}
		}
	case 214:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2508
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 215:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2509
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 216:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2513
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 217:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2517
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 218:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2523
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionByIndex: sqlDollar[1].union.partitionByIndex(),
			}
		}
	case 219:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2531
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 220:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2535
		{
			sqlVAL.union.val = nil
		}
	case 221:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2541
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 222:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2545
		{
			sqlVAL.union.val = nil
		}
	case 223:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2551
		{
			sqlVAL.union.val = true
		}
	case 224:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2555
		{
			sqlVAL.union.val = false
		}
	case 225:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2561
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 226:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2565
		{
			sqlVAL.union.val = nil
		}
	case 227:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2572
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 228:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2576
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 229:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2580
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 230:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2586
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 231:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2590
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 232:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2615
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[6].str),
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 233:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2626
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[9].str),
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 234:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2637
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeDropValue{
					Val: tree.EnumValue(sqlDollar[6].str),
				},
			}
		}
	case 235:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2646
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: tree.EnumValue(sqlDollar[6].str),
					NewVal: tree.EnumValue(sqlDollar[8].str),
				},
			}
		}
	case 236:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2656
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 237:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2665
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 238:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2674
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeOwner{
					Owner: sqlDollar[6].union.roleSpec(),
				},
			}
		}
	case 239:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2683
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 240:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2687
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 241:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2690
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 242:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2694
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 243:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2701
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 244:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2708
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 245:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2714
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.RoleName,
				Name:         sqlDollar[1].str,
			}
		}
	case 246:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2721
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.RoleName,
				Name:         sqlDollar[1].str,
			}
		}
	case 247:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2728
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.CurrentUser,
			}
		}
	case 248:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2734
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.SessionUser,
			}
		}
	case 249:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2742
		{
			sqlVAL.union.val = tree.RoleSpecList{sqlDollar[1].union.roleSpec()}
		}
	case 250:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2746
		{
			sqlVAL.union.val = append(sqlDollar[1].union.roleSpecList(), sqlDollar[3].union.roleSpec())
		}
	case 258:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2767
		{
			sqlVAL.union.val = &tree.RefreshMaterializedView{
				Name:              sqlDollar[5].union.unresolvedObjectName(),
				Concurrently:      sqlDollar[4].union.bool(),
				RefreshDataOption: sqlDollar[6].union.refreshDataOption(),
			}
		}
	case 259:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2774
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 260:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2778
		{
			sqlVAL.union.val = tree.RefreshDataWithData
		}
	case 261:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2782
		{
			sqlVAL.union.val = tree.RefreshDataClear
		}
	case 262:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2786
		{
			sqlVAL.union.val = tree.RefreshDataDefault
		}
	case 263:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2829
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: false,
				Subdir:         sqlDollar[4].union.expr(),
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 264:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2841
		{
			sqlVAL.union.val = &tree.Backup{
				Targets: sqlDollar[2].union.targetListPtr(),
				To:      sqlDollar[4].union.stringOrPlaceholderOptList(),
				Nested:  true,
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *sqlDollar[6].union.backupOptions(),
			}
		}
	case 265:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2851
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: true,
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 266:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2862
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:         sqlDollar[2].union.targetListPtr(),
				To:              sqlDollar[4].union.stringOrPlaceholderOptList(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}
		}
	case 267:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2871
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 268:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2875
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 269:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2879
		{
			t := sqlDollar[1].union.targetList()
			sqlVAL.union.val = &t
		}
	case 270:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2887
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 271:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2891
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 272:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2895
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 273:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2902
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 274:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2906
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 275:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2915
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 276:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2919
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: true}
		}
	case 277:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2923
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: true}
		}
	case 278:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2927
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 279:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2931
		{
			sqlVAL.union.val = &tree.BackupOptions{IncrementalStorage: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 280:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3013
		{
			sqlVAL.union.val = &tree.ScheduledBackup{
				ScheduleLabelSpec: *(sqlDollar[3].union.scheduleLabelSpec()),
				Recurrence:        sqlDollar[10].union.expr(),
				FullBackup:        sqlDollar[11].union.fullBackupClause(),
				To:                sqlDollar[8].union.stringOrPlaceholderOptList(),
				Targets:           sqlDollar[6].union.targetListPtr(),
				BackupOptions:     *(sqlDollar[9].union.backupOptions()),
				ScheduleOptions:   sqlDollar[12].union.kvOptions(),
			}
		}
	case 281:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3024
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 282:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3029
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 283:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3033
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 284:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3043
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 285:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3049
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{Label: sqlDollar[1].union.expr(), IfNotExists: false}
		}
	case 286:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3053
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{Label: sqlDollar[4].union.expr(), IfNotExists: true}
		}
	case 287:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3057
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{IfNotExists: false}
		}
	case 288:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3066
		{
			sqlVAL.union.val = &tree.FullBackupClause{Recurrence: sqlDollar[3].union.expr()}
		}
	case 289:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3070
		{
			sqlVAL.union.val = &tree.FullBackupClause{AlwaysFull: true}
		}
	case 290:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3074
		{
			sqlVAL.union.val = (*tree.FullBackupClause)(nil)
		}
	case 291:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3080
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 292:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3084
		{
			sqlVAL.union.val = sqlDollar[5].union.kvOptions()
		}
	case 293:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3088
		{
			sqlVAL.union.val = nil
		}
	case 294:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3126
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				From:               sqlDollar[3].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[4].union.asOfClause(),
				Options:            *(sqlDollar[5].union.restoreOptions()),
			}
		}
	case 295:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3135
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				Subdir:             sqlDollar[3].union.expr(),
				From:               sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[6].union.asOfClause(),
				Options:            *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 296:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3145
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[4].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *(sqlDollar[6].union.restoreOptions()),
			}
		}
	case 297:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3154
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				Subdir:  sqlDollar[4].union.expr(),
				From:    sqlDollar[6].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[7].union.asOfClause(),
				Options: *(sqlDollar[8].union.restoreOptions()),
			}
		}
	case 298:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3164
		{
			sqlVAL.union.val = &tree.Restore{
				SystemUsers: true,
				From:        sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:        sqlDollar[6].union.asOfClause(),
				Options:     *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 299:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3173
		{
			sqlVAL.union.val = &tree.Restore{
				SystemUsers: true,
				Subdir:      sqlDollar[5].union.expr(),
				From:        sqlDollar[7].union.listOfStringOrPlaceholderOptList(),
				AsOf:        sqlDollar[8].union.asOfClause(),
				Options:     *(sqlDollar[9].union.restoreOptions()),
			}
		}
	case 300:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3183
		{
			sqlVAL.union.val = &tree.StreamIngestion{
				Targets:  sqlDollar[2].union.targetList(),
				From:     sqlDollar[7].union.stringOrPlaceholderOptList(),
				AsOf:     sqlDollar[8].union.asOfClause(),
				AsTenant: sqlDollar[9].union.asTenantClause(),
			}
		}
	case 301:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3191
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 302:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3195
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList{sqlDollar[1].union.expr()}
		}
	case 303:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3199
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList(sqlDollar[2].union.exprs())
		}
	case 304:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3205
		{
			sqlVAL.union.val = []tree.StringOrPlaceholderOptList{sqlDollar[1].union.stringOrPlaceholderOptList()}
		}
	case 305:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3209
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listOfStringOrPlaceholderOptList(), sqlDollar[3].union.stringOrPlaceholderOptList())
		}
	case 306:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3216
		{
			tenID := uint64(sqlDollar[3].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TenantID{Specified: true, ID: tenID}
		}
	case 307:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3224
		{
			if sqlDollar[3].str != "_" {
				return setErr(sqllex, errors.New("invalid syntax"))
			}
			sqlVAL.union.val = tree.TenantID{Specified: true}
		}
	case 308:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3231
		{
			sqlVAL.union.val = tree.TenantID{Specified: false}
		}
	case 309:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3238
		{
			sqlVAL.union.val = sqlDollar[2].union.restoreOptions()
		}
	case 310:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3242
		{
			sqlVAL.union.val = sqlDollar[4].union.restoreOptions()
		}
	case 311:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3246
		{
			sqlVAL.union.val = &tree.RestoreOptions{}
		}
	case 312:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3253
		{
			sqlVAL.union.val = sqlDollar[1].union.restoreOptions()
		}
	case 313:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3257
		{
			if err := sqlDollar[1].union.restoreOptions().CombineWith(sqlDollar[3].union.restoreOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 314:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3266
		{
			sqlVAL.union.val = &tree.RestoreOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 315:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3270
		{
			sqlVAL.union.val = &tree.RestoreOptions{DecryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 316:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3274
		{
			sqlVAL.union.val = &tree.RestoreOptions{IntoDB: sqlDollar[3].union.expr()}
		}
	case 317:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3278
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingFKs: true}
		}
	case 318:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3282
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequences: true}
		}
	case 319:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3286
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequenceOwners: true}
		}
	case 320:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3290
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingViews: true}
		}
	case 321:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3294
		{
			sqlVAL.union.val = &tree.RestoreOptions{Detached: true}
		}
	case 322:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3298
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipLocalitiesCheck: true}
		}
	case 323:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3302
		{
			sqlVAL.union.val = &tree.RestoreOptions{DebugPauseOn: sqlDollar[3].union.expr()}
		}
	case 324:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3306
		{
			sqlVAL.union.val = &tree.RestoreOptions{NewDBName: sqlDollar[3].union.expr()}
		}
	case 325:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3310
		{
			sqlVAL.union.val = &tree.RestoreOptions{IncrementalStorage: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 326:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3314
		{
			sqlVAL.union.val = &tree.RestoreOptions{AsTenant: sqlDollar[3].union.expr()}
		}
	case 327:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3320
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 328:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3326
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "alter function")
		}
	case 329:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3330
		{
			return unimplemented(sqllex, "alter domain")
		}
	case 330:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3334
		{
			return unimplementedWithIssueDetail(sqllex, 74775, "alter aggregate")
		}
	case 331:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3361
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 332:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3366
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 333:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3370
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 334:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3376
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 335:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3381
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 336:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3386
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 337:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3390
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 338:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3407
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 339:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3410
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 340:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3414
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 341:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3418
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 342:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3426
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 343:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3430
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 344:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3436
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 345:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3440
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 346:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3446
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 347:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3450
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 348:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3454
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 349:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3458
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 350:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3464
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 351:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3468
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 352:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3474
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 353:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3478
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 354:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3482
		{
			sqlVAL.union.val = nil
		}
	case 355:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3494
		{

			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			if sqlDollar[7].union.expr() != nil {
				return unimplementedWithIssue(sqllex, 54580)
			}
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: *sqlDollar[6].union.copyOptions(),
			}
		}
	case 356:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3508
		{
			return unimplemented(sqllex, "copy from unsupported format")
		}
	case 357:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3514
		{
			sqlVAL.union.val = sqlDollar[2].union.copyOptions()
		}
	case 358:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3518
		{
			sqlVAL.union.val = &tree.CopyOptions{}
		}
	case 359:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3524
		{
			sqlVAL.union.val = sqlDollar[1].union.copyOptions()
		}
	case 360:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3528
		{
			if err := sqlDollar[1].union.copyOptions().CombineWith(sqlDollar[2].union.copyOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 361:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3536
		{
			sqlVAL.union.val = &tree.CopyOptions{Destination: sqlDollar[3].union.expr()}
		}
	case 362:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3540
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatBinary}
		}
	case 363:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3544
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatCSV}
		}
	case 364:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3548
		{
			sqlVAL.union.val = &tree.CopyOptions{Delimiter: sqlDollar[2].union.expr()}
		}
	case 365:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3552
		{
			sqlVAL.union.val = &tree.CopyOptions{Null: sqlDollar[2].union.expr()}
		}
	case 366:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3556
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "oids")
		}
	case 367:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3560
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "freeze")
		}
	case 368:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3564
		{
			sqlVAL.union.val = &tree.CopyOptions{Header: true}
		}
	case 369:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3568
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "quote")
		}
	case 370:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3572
		{
			sqlVAL.union.val = &tree.CopyOptions{Escape: tree.NewStrVal(sqlDollar[2].str)}
		}
	case 371:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3576
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "force quote")
		}
	case 372:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3580
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "force not null")
		}
	case 373:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3584
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "force null")
		}
	case 374:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3588
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "encoding")
		}
	case 376:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3596
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 378:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3597
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 380:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3598
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 382:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3599
		{
			return helpWith(sqllex, "CANCEL ALL JOBS")
		}
	case 383:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3600
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 384:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3610
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 385:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3618
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 386:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3620
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 387:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3624
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 388:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3627
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 389:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3637
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 390:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3646
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 391:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3654
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 392:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3656
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 393:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3660
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 394:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3663
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 395:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3673
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 396:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3682
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 397:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3690
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 398:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3692
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 399:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3696
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 400:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3699
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 401:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3707
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.CancelJob}
		}
	case 402:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3710
		{
			return helpWith(sqllex, "CANCEL ALL JOBS")
		}
	case 403:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3714
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 404:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3718
		{
			sqlVAL.union.val = &tree.CommentOnSchema{Name: sqlDollar[4].union.objectNamePrefix(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 405:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3722
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 406:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3726
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 407:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3739
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 408:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3744
		{
			sqlVAL.union.val = &tree.CommentOnConstraint{Constraint: tree.Name(sqlDollar[4].str), Table: sqlDollar[6].union.unresolvedObjectName(), Comment: sqlDollar[8].union.strPtr()}
		}
	case 409:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3747
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "comment on extension")
		}
	case 410:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3748
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "comment on function")
		}
	case 411:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3752
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 412:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3757
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 414:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3769
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 417:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3771
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 419:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3772
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 422:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3774
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 423:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3775
		{
		}
	case 424:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3776
		{
			return helpWith(sqllex, "CREATE")
		}
	case 425:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3783
		{
			sqlVAL.union.val = &tree.CreateExtension{IfNotExists: true, Name: sqlDollar[6].str}
		}
	case 426:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3786
		{
			sqlVAL.union.val = &tree.CreateExtension{Name: sqlDollar[3].str}
		}
	case 427:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3790
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "create extension if not exists with")
		}
	case 428:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3793
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "create extension with")
		}
	case 429:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3796
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 430:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3799
		{
			return unimplemented(sqllex, "create access method")
		}
	case 431:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3800
		{
			return unimplementedWithIssueDetail(sqllex, 74775, "create aggregate")
		}
	case 432:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3801
		{
			return unimplemented(sqllex, "create cast")
		}
	case 433:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3802
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 434:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3803
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 435:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3804
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 436:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3805
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 437:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3806
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 438:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3807
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 439:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3808
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 440:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3809
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 441:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3810
		{
			return unimplementedWithIssue(sqllex, 65017)
		}
	case 442:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3811
		{
			return unimplemented(sqllex, "create publication")
		}
	case 443:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3812
		{
			return unimplemented(sqllex, "create rule")
		}
	case 444:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3813
		{
			return unimplemented(sqllex, "create server")
		}
	case 445:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3814
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 446:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3815
		{
			return unimplementedWithIssueDetail(sqllex, 54113, "create tablespace")
		}
	case 447:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3816
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 448:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3817
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create trigger")
		}
	case 449:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3820
		{
		}
	case 450:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3821
		{
		}
	case 451:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3824
		{
		}
	case 452:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3825
		{
		}
	case 453:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3828
		{
		}
	case 454:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3829
		{
		}
	case 455:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3832
		{
			return unimplemented(sqllex, "drop access method")
		}
	case 456:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3833
		{
			return unimplementedWithIssueDetail(sqllex, 74775, "drop aggregate")
		}
	case 457:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3834
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 458:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3835
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 459:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3836
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 460:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3837
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 461:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3838
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "drop extension if exists")
		}
	case 462:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3839
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "drop extension")
		}
	case 463:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3840
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 464:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3841
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 465:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3842
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 466:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3843
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 467:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3844
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 468:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3845
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 469:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3846
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 470:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3847
		{
			return unimplemented(sqllex, "drop server")
		}
	case 471:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3848
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 472:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3849
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 473:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3850
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 475:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3853
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 477:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3854
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 479:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3855
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 481:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3856
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 483:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3857
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 484:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3859
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 486:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3860
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 488:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3861
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 490:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3862
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 491:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3872
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 492:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3880
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 493:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3884
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 494:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3888
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 495:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3894
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 496:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3898
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 497:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3907
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 498:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3914
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 499:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3920
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 500:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3926
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 501:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3930
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 502:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3941
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 503:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3953
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 504:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3968
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.changefeedTargets(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 505:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3976
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.changefeedTargets(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 506:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3986
		{
			sqlVAL.union.val = tree.ChangefeedTargets{sqlDollar[1].union.changefeedTarget()}
		}
	case 507:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3990
		{
			sqlVAL.union.val = append(sqlDollar[1].union.changefeedTargets(), sqlDollar[3].union.changefeedTarget())
		}
	case 508:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3996
		{
			sqlVAL.union.val = tree.ChangefeedTarget{
				TableName: sqlDollar[2].union.unresolvedObjectName().ToUnresolvedName(),
			}
		}
	case 509:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4002
		{
			sqlVAL.union.val = tree.ChangefeedTarget{
				TableName: sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName(),
			}
		}
	case 510:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4009
		{
			sqlVAL.union.val = tree.ChangefeedTarget{
				TableName:  sqlDollar[2].union.unresolvedObjectName().ToUnresolvedName(),
				FamilyName: tree.Name(sqlDollar[4].str),
			}
		}
	case 511:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4017
		{
			sqlVAL.union.val = tree.ChangefeedTarget{
				TableName:  sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName(),
				FamilyName: tree.Name(sqlDollar[3].str),
			}
		}
	case 512:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4028
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 513:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4032
		{

			sqlVAL.union.val = nil
		}
	case 514:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4046
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 515:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4056
		{
			return helpWith(sqllex, "DELETE")
		}
	case 516:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4059
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 517:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4060
		{
		}
	case 518:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4068
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 519:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4071
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 520:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4072
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 521:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4073
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 522:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4074
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 523:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4075
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 526:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4084
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 528:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4085
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 529:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4086
		{
		}
	case 530:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4087
		{
			return helpWith(sqllex, "DROP")
		}
	case 532:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4090
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 534:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4091
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 536:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4092
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 538:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4093
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 540:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4094
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 542:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4095
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 544:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4096
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 545:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4104
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 546:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4108
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 547:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4112
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[4].union.tableNames(),
				IfExists:       false,
				DropBehavior:   sqlDollar[5].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 548:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4121
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[6].union.tableNames(),
				IfExists:       true,
				DropBehavior:   sqlDollar[7].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 549:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4129
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 550:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4137
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 551:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4141
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 552:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4144
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 553:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4152
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 554:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4156
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 555:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4159
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 556:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4167
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 557:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4176
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 558:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4184
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 559:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4192
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 560:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4200
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 561:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4207
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 562:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4214
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 563:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4222
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 564:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4229
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 565:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4233
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[1].union.unresolvedObjectNames()}
		}
	case 566:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4239
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 567:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4243
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 568:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4252
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[3].union.objectNamePrefixList(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 569:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4260
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[5].union.objectNamePrefixList(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 570:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4267
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 571:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4275
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.roleSpecList(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 572:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4279
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.roleSpecList(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 573:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4282
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 574:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4286
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 575:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4291
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 576:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4304
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 577:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4309
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 578:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4311
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 579:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4316
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 580:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4320
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 581:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4343
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 582:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4350
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 583:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4352
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 584:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4360
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 585:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4368
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 586:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4376
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 587:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4384
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 588:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4395
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 593:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4403
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 597:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4406
		{
			return helpWith(sqllex, "DELETE")
		}
	case 600:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4408
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 602:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4409
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 604:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4410
		{
			return helpWith(sqllex, "INSERT")
		}
	case 608:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4413
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 611:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4415
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 613:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4418
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 617:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4423
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 619:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4424
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 621:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4425
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 623:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4430
		{
			return helpWith(sqllex, "DELETE")
		}
	case 625:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4431
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 627:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4432
		{
			return helpWith(sqllex, "INSERT")
		}
	case 628:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4434
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 631:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4438
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 633:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4439
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 634:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4443
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 635:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4447
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 636:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4457
		{
			sqlVAL.union.val = &tree.AlterChangefeed{
				Jobs: sqlDollar[3].union.expr(),
				Cmds: sqlDollar[4].union.alterChangefeedCmds(),
			}
		}
	case 637:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4463
		{
			return helpWith(sqllex, "ALTER CHANGEFEED")
		}
	case 638:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4467
		{
			sqlVAL.union.val = tree.AlterChangefeedCmds{sqlDollar[1].union.alterChangefeedCmd()}
		}
	case 639:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4471
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterChangefeedCmds(), sqlDollar[2].union.alterChangefeedCmd())
		}
	case 640:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4478
		{
			sqlVAL.union.val = &tree.AlterChangefeedAddTarget{
				Targets: sqlDollar[2].union.changefeedTargets(),
				Options: sqlDollar[3].union.kvOptions(),
			}
		}
	case 641:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4486
		{
			sqlVAL.union.val = &tree.AlterChangefeedDropTarget{
				Targets: sqlDollar[2].union.changefeedTargets(),
			}
		}
	case 642:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4492
		{
			sqlVAL.union.val = &tree.AlterChangefeedSetOptions{
				Options: sqlDollar[2].union.kvOptions(),
			}
		}
	case 643:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4498
		{
			sqlVAL.union.val = &tree.AlterChangefeedUnsetOptions{
				Options: sqlDollar[2].union.nameList(),
			}
		}
	case 644:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4517
		{
			sqlVAL.union.val = &tree.AlterBackup{
				Backup: sqlDollar[3].union.expr(),
				Cmds:   sqlDollar[4].union.alterBackupCmds(),
			}
		}
	case 645:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4524
		{
			sqlVAL.union.val = &tree.AlterBackup{
				Subdir: sqlDollar[3].union.expr(),
				Backup: sqlDollar[5].union.expr(),
				Cmds:   sqlDollar[6].union.alterBackupCmds(),
			}
		}
	case 646:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4531
		{
			return helpWith(sqllex, "ALTER BACKUP")
		}
	case 647:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4535
		{
			sqlVAL.union.val = tree.AlterBackupCmds{sqlDollar[1].union.alterBackupCmd()}
		}
	case 648:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4539
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterBackupCmds(), sqlDollar[2].union.alterBackupCmd())
		}
	case 649:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4545
		{
			sqlVAL.union.val = &tree.AlterBackupKMS{
				KMSInfo: sqlDollar[2].union.backupKMS(),
			}
		}
	case 650:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4553
		{
			sqlVAL.union.val = tree.BackupKMS{
				NewKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList(),
				OldKMSURI: sqlDollar[7].union.stringOrPlaceholderOptList(),
			}
		}
	case 651:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4566
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 652:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4574
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 653:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4582
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 654:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4586
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 655:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4590
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 656:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4600
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 657:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4607
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 658:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4615
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 659:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4619
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 660:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4623
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 661:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4633
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 662:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4637
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 663:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4641
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 664:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4645
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 665:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4648
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 666:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4671
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.roleSpecList(), Targets: sqlDollar[4].union.targetList(), WithGrantOption: sqlDollar[7].union.bool()}
		}
	case 667:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4675
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: false}
		}
	case 668:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4679
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: true}
		}
	case 669:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4683
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.roleSpecList(), WithGrantOption: sqlDollar[8].union.bool()}
		}
	case 670:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4687
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees:        sqlDollar[7].union.roleSpecList(),
				WithGrantOption: sqlDollar[8].union.bool(),
			}
		}
	case 671:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4698
		{
			return unimplemented(sqllex, "grant privileges on schema with")
		}
	case 672:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:4702
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:              sqlDollar[8].union.objectNamePrefixList(),
					AllSequencesInSchema: true,
				},
				Grantees:        sqlDollar[10].union.roleSpecList(),
				WithGrantOption: sqlDollar[11].union.bool(),
			}
		}
	case 673:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:4714
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:        sqlDollar[10].union.roleSpecList(),
				WithGrantOption: sqlDollar[11].union.bool(),
			}
		}
	case 674:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4726
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[3].union.privilegeList(),
				Targets: tree.TargetList{
					System: true,
				},
				Grantees:        sqlDollar[5].union.roleSpecList(),
				WithGrantOption: sqlDollar[6].union.bool(),
			}
		}
	case 675:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4736
		{
			return helpWith(sqllex, "GRANT")
		}
	case 676:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4759
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.roleSpecList(), Targets: sqlDollar[4].union.targetList(), GrantOptionFor: false}
		}
	case 677:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4763
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[5].union.privilegeList(), Grantees: sqlDollar[9].union.roleSpecList(), Targets: sqlDollar[7].union.targetList(), GrantOptionFor: true}
		}
	case 678:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4767
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: false}
		}
	case 679:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4771
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.roleSpecList(), AdminOption: true}
		}
	case 680:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4775
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.roleSpecList(), GrantOptionFor: false}
		}
	case 681:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4779
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[5].union.privilegeList(), Targets: sqlDollar[8].union.targetList(), Grantees: sqlDollar[10].union.roleSpecList(), GrantOptionFor: true}
		}
	case 682:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4783
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees:       sqlDollar[7].union.roleSpecList(),
				GrantOptionFor: false,
			}
		}
	case 683:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4794
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[5].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[8].union.objectNamePrefixList(),
				},
				Grantees:       sqlDollar[10].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 684:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4805
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:       sqlDollar[10].union.roleSpecList(),
				GrantOptionFor: false,
			}
		}
	case 685:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4817
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:              sqlDollar[8].union.objectNamePrefixList(),
					AllSequencesInSchema: true,
				},
				Grantees:       sqlDollar[10].union.roleSpecList(),
				GrantOptionFor: false,
			}
		}
	case 686:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:4829
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[5].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[11].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:       sqlDollar[13].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 687:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4841
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[3].union.privilegeList(),
				Targets: tree.TargetList{
					System: true,
				},
				Grantees: sqlDollar[5].union.roleSpecList(),
			}
		}
	case 688:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4851
		{
			return unimplemented(sqllex, "revoke privileges on sequence")
		}
	case 689:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4854
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 690:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4860
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 691:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4864
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 692:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4874
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 693:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4878
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 699:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4892
		{
			return helpWith(sqllex, "RESET")
		}
	case 701:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4893
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 702:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4901
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}, Reset: true}
		}
	case 703:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4905
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}, Reset: true}
		}
	case 704:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4909
		{
			sqlVAL.union.val = &tree.SetVar{ResetAll: true, Reset: true}
		}
	case 705:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4912
		{
			return helpWith(sqllex, "RESET")
		}
	case 706:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4920
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 707:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4923
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 708:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4934
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 709:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4937
		{
			return helpWith(sqllex, "USE")
		}
	case 711:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4941
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 712:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4942
		{
		}
	case 713:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4943
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 715:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4947
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 717:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4948
		{
			return helpWith(sqllex, "SET LOCAL")
		}
	case 719:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4949
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 721:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4950
		{
			return helpWith(sqllex, "USE")
		}
	case 724:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4966
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 725:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4981
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 726:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4984
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 727:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5002
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 728:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5010
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 729:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5014
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 730:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5018
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 731:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5024
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 732:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5028
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 733:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5034
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 734:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5038
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 735:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5042
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 736:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5046
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 737:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5050
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 738:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5061
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 739:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5064
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 740:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5074
		{
			csettingStmt := sqlDollar[4].union.stmt().(*tree.SetClusterSetting)
			sqlVAL.union.val = &tree.AlterTenantSetClusterSetting{
				SetClusterSetting: *csettingStmt,
				TenantID:          sqlDollar[3].union.expr(),
			}
		}
	case 741:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5082
		{
			csettingStmt := sqlDollar[4].union.stmt().(*tree.SetClusterSetting)
			sqlVAL.union.val = &tree.AlterTenantSetClusterSetting{
				SetClusterSetting: *csettingStmt,
				TenantAll:         true,
			}
		}
	case 742:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5089
		{
			return helpWith(sqllex, "ALTER TENANT")
		}
	case 743:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5090
		{
			return helpWith(sqllex, "ALTER TENANT")
		}
	case 748:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5104
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 749:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5120
		{

			sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[4].union.exprs()}
		}
	case 750:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5126
		{

			sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[5].union.exprs()}
		}
	case 751:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5132
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 752:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5135
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 753:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5137
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 754:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5140
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 755:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5143
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 756:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5157
		{
			ret := sqlDollar[3].union.setVar()
			ret.Local = true
			sqlVAL.union.val = ret
		}
	case 757:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5162
		{
			return helpWith(sqllex, "SET LOCAL")
		}
	case 758:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5179
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 759:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5182
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 760:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5184
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 761:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5187
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 762:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5191
		{
			sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
		}
	case 764:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5203
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 765:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5207
		{
			return unimplemented(sqllex, "set from current")
		}
	case 766:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5211
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 767:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5216
		{

			sqlVAL.union.val = &tree.SetVar{Name: "role", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 769:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5225
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 770:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5230
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 771:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5234
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 773:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5246
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 774:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5251
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 775:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5258
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 776:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5262
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 777:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5268
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 778:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5272
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 780:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5279
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 783:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5300
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 784:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5304
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 785:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5310
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 786:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5314
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 787:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5318
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 788:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5322
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 789:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5326
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 790:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5332
		{
			sqlVAL.union.val = tree.Low
		}
	case 791:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5336
		{
			sqlVAL.union.val = tree.Normal
		}
	case 792:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5340
		{
			sqlVAL.union.val = tree.High
		}
	case 793:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5351
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 794:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5355
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 795:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5359
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 797:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5364
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 798:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5368
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 800:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5383
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 802:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5384
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 804:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5385
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 806:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5386
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 808:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5387
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 810:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5388
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 812:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5389
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 814:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5390
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 816:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5391
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 819:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5393
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 821:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5394
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 823:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5395
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 825:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5396
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 827:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5397
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 830:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5399
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 832:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5400
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 834:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5401
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 837:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5403
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 840:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5405
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 842:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5406
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 844:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5407
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 846:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5408
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 848:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5409
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 850:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5410
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 852:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5411
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 854:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5412
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 856:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5413
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 858:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5414
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 860:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5415
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 862:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5416
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 864:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5417
		{
			return helpWith(sqllex, "SHOW TRANSFER")
		}
	case 866:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5418
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 868:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5419
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 869:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5420
		{
			return helpWith(sqllex, "SHOW")
		}
	case 873:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5423
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 875:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5432
		{
			sqlVAL.union.val = &tree.CloseCursor{
				All: true,
			}
		}
	case 876:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5438
		{
			sqlVAL.union.val = &tree.CloseCursor{
				Name: tree.Name(sqlDollar[2].str),
			}
		}
	case 877:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5443
		{
			return helpWith(sqllex, "CLOSE")
		}
	case 878:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5453
		{
			sqlVAL.union.val = &tree.DeclareCursor{
				Binary:      sqlDollar[3].union.bool(),
				Name:        tree.Name(sqlDollar[2].str),
				Sensitivity: sqlDollar[4].union.cursorSensitivity(),
				Scroll:      sqlDollar[5].union.cursorScrollOption(),
				Hold:        sqlDollar[7].union.bool(),
				Select:      sqlDollar[9].union.slct(),
			}
		}
	case 879:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5463
		{
			return helpWith(sqllex, "DECLARE")
		}
	case 880:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5467
		{
			sqlVAL.union.val = true
		}
	case 881:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5471
		{
			sqlVAL.union.val = false
		}
	case 882:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5477
		{
			sqlVAL.union.val = tree.Insensitive
		}
	case 883:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5481
		{
			sqlVAL.union.val = tree.Asensitive
		}
	case 884:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5485
		{
			sqlVAL.union.val = tree.UnspecifiedSensitivity
		}
	case 885:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5491
		{
			sqlVAL.union.val = tree.Scroll
		}
	case 886:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5495
		{
			sqlVAL.union.val = tree.NoScroll
		}
	case 887:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5499
		{
			sqlVAL.union.val = tree.UnspecifiedScroll
		}
	case 888:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5505
		{
			sqlVAL.union.val = true
		}
	case 889:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5509
		{
			sqlVAL.union.val = false
		}
	case 890:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5513
		{
			sqlVAL.union.val = false
		}
	case 891:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5523
		{
			sqlVAL.union.val = &tree.FetchCursor{
				CursorStmt: sqlDollar[2].union.cursorStmt(),
			}
		}
	case 892:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5528
		{
			return helpWith(sqllex, "FETCH")
		}
	case 893:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5536
		{
			sqlVAL.union.val = &tree.MoveCursor{
				CursorStmt: sqlDollar[2].union.cursorStmt(),
			}
		}
	case 894:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5541
		{
			return helpWith(sqllex, "MOVE")
		}
	case 895:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5545
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[1].str),
				Count: 1,
			}
		}
	case 896:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5552
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[2].str),
				Count: 1,
			}
		}
	case 897:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5559
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[3].str),
				Count: sqlDollar[1].union.int64(),
			}
		}
	case 898:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5566
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[3].str),
				Count: sqlDollar[1].union.int64(),
			}
		}
	case 899:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5573
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[4].str),
				Count: sqlDollar[2].union.int64() * sqlDollar[1].union.int64(),
			}
		}
	case 900:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5580
		{
			fetchType := tree.FetchAll
			count := sqlDollar[1].union.int64()
			if count < 0 {
				fetchType = tree.FetchBackwardAll
			}
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[4].str),
				FetchType: fetchType,
			}
		}
	case 901:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5592
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[4].str),
				FetchType: tree.FetchAbsolute,
				Count:     sqlDollar[2].union.int64(),
			}
		}
	case 902:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5600
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[4].str),
				FetchType: tree.FetchRelative,
				Count:     sqlDollar[2].union.int64(),
			}
		}
	case 903:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5608
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[3].str),
				FetchType: tree.FetchFirst,
			}
		}
	case 904:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5615
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[3].str),
				FetchType: tree.FetchLast,
			}
		}
	case 905:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5623
		{
			sqlVAL.union.val = int64(1)
		}
	case 906:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5624
		{
			sqlVAL.union.val = int64(-1)
		}
	case 907:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5627
		{
			sqlVAL.union.val = sqlDollar[1].union.int64()
		}
	case 908:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5628
		{
			sqlVAL.union.val = int64(1)
		}
	case 909:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5631
		{
			sqlVAL.union.val = int64(1)
		}
	case 910:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5632
		{
			sqlVAL.union.val = int64(-1)
		}
	case 911:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5635
		{
		}
	case 912:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5636
		{
		}
	case 913:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5639
		{
		}
	case 914:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5640
		{
		}
	case 915:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5644
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 916:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5649
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 917:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5654
		{

			return purposelyUnimplemented(sqllex, "reindex schema", "CockroachDB does not require reindexing.")
		}
	case 918:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5659
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 919:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5664
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 920:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5674
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 921:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5675
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 922:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5676
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 924:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5681
		{
			sqlVAL.str = sqlDollar[1].str + "." + strings.Join(sqlDollar[2].union.strs(), ".")
		}
	case 927:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5691
		{
			sqlVAL.str = "client_encoding"
		}
	case 932:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5696
		{
		}
	case 933:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5698
		{

			sqlVAL.str = sqlDollar[1].str + "." + strings.Join(sqlDollar[2].union.strs(), ".")
		}
	case 934:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5703
		{
			sqlVAL.str = "timezone"
		}
	case 935:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5704
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 936:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5708
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 937:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5712
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 938:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5728
		{
			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 939:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5732
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[7].union.unresolvedObjectName(), UsingJSON: true}
		}
	case 940:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5736
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 941:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5747
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 942:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5755
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 943:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5763
		{
			sqlVAL.union.val = &tree.ShowBackup{
				InCollection: sqlDollar[4].union.stringOrPlaceholderOptList(),
			}
		}
	case 944:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5769
		{
			sqlVAL.union.val = &tree.ShowBackup{
				From:         true,
				Details:      sqlDollar[3].union.showBackupDetails(),
				Path:         sqlDollar[5].union.expr(),
				InCollection: sqlDollar[7].union.stringOrPlaceholderOptList(),
				Options:      sqlDollar[8].union.kvOptions(),
			}
		}
	case 945:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5779
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:      tree.BackupDefaultDetails,
				Path:         sqlDollar[3].union.expr(),
				InCollection: sqlDollar[5].union.stringOrPlaceholderOptList(),
				Options:      sqlDollar[6].union.kvOptions(),
			}
		}
	case 946:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5788
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 947:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5796
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupSchemaDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 948:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5804
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 949:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5812
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 950:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5819
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 951:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5823
		{
			sqlVAL.union.val = tree.BackupDefaultDetails
		}
	case 952:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5827
		{
			sqlVAL.union.val = tree.BackupSchemaDetails
		}
	case 953:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5831
		{
			sqlVAL.union.val = tree.BackupFileDetails
		}
	case 954:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5835
		{
			sqlVAL.union.val = tree.BackupRangeDetails
		}
	case 955:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5847
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 956:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5851
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 957:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5854
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 958:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5856
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 959:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5859
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 960:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5861
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 961:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5865
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 962:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5868
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 963:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5872
		{
			sqlVAL.union.val = sqlDollar[1].union.stmt()
		}
	case 964:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5874
		{
			switch t := sqlDollar[1].union.stmt().(type) {
			case *tree.ShowClusterSetting:
				sqlVAL.union.val = &tree.ShowTenantClusterSetting{
					ShowClusterSetting: t,
					TenantID:           sqlDollar[4].union.expr(),
				}
			case *tree.ShowClusterSettingList:
				sqlVAL.union.val = &tree.ShowTenantClusterSettingList{
					ShowClusterSettingList: t,
					TenantID:               sqlDollar[4].union.expr(),
				}
			}
		}
	case 965:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5888
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 966:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5896
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 967:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5899
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 968:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5907
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 969:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5911
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 970:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5915
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 971:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5919
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 972:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5922
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 973:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5930
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 974:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5933
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 975:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5939
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				Roles:  sqlDollar[4].union.roleSpecList(),
				Schema: tree.Name(sqlDollar[5].str),
			}
		}
	case 976:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5945
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				ForAllRoles: true,
				Schema:      tree.Name(sqlDollar[7].str),
			}
		}
	case 977:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5951
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 978:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5958
		{
			sqlVAL.union.val = &tree.ShowEnums{}
		}
	case 979:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5962
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
			}
		}
	case 980:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5972
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
			}
		}
	case 981:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5981
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 982:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5988
		{
			sqlVAL.union.val = &tree.ShowTypes{}
		}
	case 983:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5991
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 984:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6004
		{
			lst := sqlDollar[3].union.targetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.roleSpecList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.roleSpecList()}
			}
		}
	case 985:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6012
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 986:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6020
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 987:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6023
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 988:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6025
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 989:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6029
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 990:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6033
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 991:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6036
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 992:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6038
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 993:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6042
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 994:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6045
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 995:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6053
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 996:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6056
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 997:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6058
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 998:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6061
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 999:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6069
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 1000:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6072
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6074
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 1002:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6077
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 1003:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6081
		{
			sqlVAL.union.val = true
		}
	case 1004:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6083
		{
			sqlVAL.union.val = true
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6085
		{
			sqlVAL.union.val = false
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6102
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 1009:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6106
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 1010:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6110
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{}
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6113
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6114
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1013:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6115
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6117
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 1015:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6121
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6125
		{
			sqlVAL.union.val = &tree.ShowJobs{Schedules: sqlDollar[3].union.slct()}
		}
	case 1017:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6129
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{Jobs: sqlDollar[4].union.slct()}
		}
	case 1018:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6132
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1019:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6134
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6142
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[4].union.expr()}}},
				},
			}
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6150
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6158
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6159
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6169
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ExecutorType:   sqlDollar[3].union.executorType(),
			}
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6175
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6177
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: sqlDollar[2].union.scheduleState(),
				ExecutorType:   sqlDollar[4].union.executorType(),
			}
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6183
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6185
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ScheduleID:     sqlDollar[3].union.expr(),
			}
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6191
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6195
		{
			sqlVAL.union.val = tree.ActiveSchedules
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6199
		{
			sqlVAL.union.val = tree.PausedSchedules
		}
	case 1032:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6205
		{
			sqlVAL.union.val = tree.InvalidExecutor
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6209
		{
			sqlVAL.union.val = tree.ScheduledBackupExecutor
		}
	case 1034:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6213
		{
			sqlVAL.union.val = tree.ScheduledSQLStatsCompactionExecutor
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6224
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 1036:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6227
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6229
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 1038:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6232
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6234
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6238
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 1041:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6241
		{
			sqlVAL.union.val = true
		}
	case 1042:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6242
		{
			sqlVAL.union.val = false
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6250
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6253
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6255
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6258
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6266
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6276
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6286
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6289
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6296
		{
			sqlVAL.union.val = &tree.ShowTransactions{Cluster: sqlDollar[2].union.bool()}
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6299
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6301
		{
			sqlVAL.union.val = &tree.ShowTransactions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6304
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6307
		{
			sqlVAL.union.val = true
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6308
		{
			sqlVAL.union.val = false
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6315
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6319
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6322
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6329
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6333
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6336
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6343
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6347
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6351
		{

			sqlVAL.union.val = &tree.ShowCompletions{
				Statement: tree.NewStrVal(sqlDollar[7].str),
				Offset:    sqlDollar[5].union.numVal(),
			}
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6361
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{Columns: sqlDollar[5].union.nameList()}
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6368
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1068:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6372
		{

			sqlVAL.union.val = tree.ShowLastQueryStatisticsDefaultColumns
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6383
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6386
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6394
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6399
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6404
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6408
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 1075:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6415
		{
			sqlVAL.union.val = &tree.ShowTransferState{TransferKey: tree.NewStrVal(sqlDollar[5].str)}
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6419
		{
			sqlVAL.union.val = &tree.ShowTransferState{}
		}
	case 1077:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6422
		{
			return helpWith(sqllex, "SHOW TRANSFER")
		}
	case 1078:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6434
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6438
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeTable, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1080:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6443
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeView, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6448
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeSequence, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1082:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6453
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeDatabase, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6458
		{
			sqlVAL.union.val = &tree.ShowCreateAllSchemas{}
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6462
		{
			sqlVAL.union.val = &tree.ShowCreateAllTables{}
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6466
		{
			sqlVAL.union.val = &tree.ShowCreateAllTypes{}
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6469
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6479
		{
			sqlVAL.union.val = &tree.ShowCreateSchedules{}
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6482
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6484
		{
			sqlVAL.union.val = &tree.ShowCreateSchedules{ScheduleID: sqlDollar[4].union.expr()}
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6487
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6495
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6498
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6506
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6509
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6519
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6523
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6527
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6535
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6543
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6550
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6556
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6558
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6561
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6563
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6566
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6570
		{
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6579
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6587
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6593
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6602
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6607
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6611
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6614
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6623
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{}
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6627
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{
				DatabaseName: tree.Name(sqlDollar[6].str),
			}
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6643
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromCluster,
			}
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6649
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
			}
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6655
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromAllDatabases,
			}
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6661
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
				DatabaseName:    tree.Name(sqlDollar[5].str),
			}
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6668
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDefault,
			}
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6674
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowSuperRegionsFromDatabase,
				DatabaseName:    tree.Name(sqlDollar[6].str),
			}
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6680
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6684
		{
			sqlVAL.union.val = &tree.ShowVar{Name: "locality"}
		}
	case 1125:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6690
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6697
		{
			sqlVAL.union.val = &tree.ShowFullTableScans{}
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6703
		{
			tmp := sqlDollar[2].union.targetList()
			sqlVAL.union.val = &tmp
		}
	case 1128:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6708
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6828
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}}
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6832
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}}
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6836
		{

			sqlVAL.union.val = tree.TargetList{
				Tables:   tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6875
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}}
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6879
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TableAttrs{SequenceOnly: true, TablePatterns: sqlDollar[2].union.tablePatterns()}}
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6883
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.TargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}}
		}
	case 1135:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6888
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: sqlDollar[2].union.tablePatterns()}}
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6894
		{
			tenID := uint64(sqlDollar[2].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TargetList{TenantID: tree.TenantID{Specified: true, ID: tenID}}
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6902
		{

			if sqlDollar[2].str != "_" {
				return setErr(sqllex, errors.New("invalid syntax"))
			}
			sqlVAL.union.val = tree.TargetList{TenantID: tree.TenantID{Specified: true}}
		}
	case 1138:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6911
		{
			sqlVAL.union.val = tree.TargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6920
		{
			sqlVAL.union.val = tree.TargetList{ForRoles: true, Roles: sqlDollar[2].union.roleSpecList()}
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6924
		{
			sqlVAL.union.val = tree.TargetList{Schemas: sqlDollar[2].union.objectNamePrefixList()}
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6928
		{
			sqlVAL.union.val = tree.TargetList{Schemas: sqlDollar[2].union.objectNamePrefixList()}
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6932
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[2].union.unresolvedObjectNames()}
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6940
		{
			sqlVAL.union.val = sqlDollar[2].union.roleSpecList()
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6944
		{
			sqlVAL.union.val = tree.RoleSpecList(nil)
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6957
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6958
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6959
		{
			return helpWith(sqllex, "PAUSE ALL JOBS")
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6960
		{
			return helpWith(sqllex, "PAUSE")
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6970
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6971
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6972
		{
			return helpWith(sqllex, "RESUME ALL JOBS")
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6973
		{
			return helpWith(sqllex, "RESUME")
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6981
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.ResumeJob}
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6984
		{
			return helpWith(sqllex, "RESUME ALL JOBS")
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6994
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7003
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
				Reason:  sqlDollar[7].union.expr(),
			}
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7012
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7014
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7018
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob, Reason: sqlDollar[7].union.expr()}
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7022
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7025
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7030
		{
			sqlVAL.union.val = sqlDollar[3].union.slct()
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7034
		{
			sqlVAL.union.val = &tree.Select{
				Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
			}
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7049
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseSchedule,
			}
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7057
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7059
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.PauseSchedule,
			}
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7065
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7073
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.PauseJob}
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7076
		{
			return helpWith(sqllex, "PAUSE ALL JOBS")
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7085
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
			}
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7091
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
			}
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7098
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:   sqlDollar[3].union.objectNamePrefix(),
				AuthRole: sqlDollar[5].union.roleSpec(),
			}
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7105
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
				AuthRole:    sqlDollar[8].union.roleSpec(),
			}
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7112
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7123
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7132
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaOwner{
					Owner: sqlDollar[6].union.roleSpec(),
				},
			}
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7140
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:7176
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      false,
				Defs:             sqlDollar[6].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[9].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[10].union.storageParams(),
				OnCommit:         sqlDollar[11].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[12].union.locality(),
			}
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:7191
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      true,
				Defs:             sqlDollar[9].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[12].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[13].union.storageParams(),
				OnCommit:         sqlDollar[14].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[15].union.locality(),
			}
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7208
		{
			sqlVAL.union.val = sqlDollar[1].union.locality()
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7212
		{
			sqlVAL.union.val = (*tree.Locality)(nil)
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7219
		{

			sqlVAL.union.val = nil
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7225
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7231
		{
			sqlVAL.str = ""
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7235
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "create table inherits")
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7241
		{
			sqlVAL.union.val = nil
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7245
		{
			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7250
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7254
		{
			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7258
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7262
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7272
		{
			sqlVAL.union.val = []tree.Name{tree.Name(sqlDollar[1].str)}
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7276
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParamKeys(), tree.Name(sqlDollar[3].str))
		}
	case 1204:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7282
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7288
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7292
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7298
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:7311
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7325
		{
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7326
		{
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7327
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7345
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1213:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7346
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1214:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7347
		{
			sqlVAL.union.val = tree.PersistencePermanent
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7351
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7352
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7353
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1219:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7354
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7355
		{
			sqlVAL.union.val = tree.PersistenceUnlogged
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7360
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7366
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7370
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7376
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7382
		{
			def := sqlDollar[1].union.constraintDef()
			valBehavior := sqlDollar[2].union.validationBehavior()
			if u, ok := def.(*tree.UniqueConstraintTableDef); ok && valBehavior == tree.ValidationSkip {
				typ := "PRIMARY KEY"
				if !u.PrimaryKey {
					typ = "UNIQUE"
				}
				return purposelyUnimplemented(sqllex, "table constraint", typ+" constraints cannot be marked NOT VALID")
			}
			sqlVAL.union.val = def
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7395
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7404
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7408
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7414
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7419
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7420
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7421
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7422
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7423
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7424
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7425
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 1240:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7426
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7427
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7432
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7439
		{
			sqlVAL.str = ""
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7446
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7452
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7460
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7466
		{
			sqlVAL.union.val = (*tree.PartitionByIndex)(nil)
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7472
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7478
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				All:         true,
				PartitionBy: sqlDollar[4].union.partitionBy(),
			}
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7488
		{
			sqlVAL.union.val = (*tree.PartitionByTable)(nil)
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7494
		{
			sqlVAL.union.val = sqlDollar[3].union.partitionBy()
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7500
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				List:   sqlDollar[6].union.listPartitions(),
			}
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7507
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				Range:  sqlDollar[6].union.rangePartitions(),
			}
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7514
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7520
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7524
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7530
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7540
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7544
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7550
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7564
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7575
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7579
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7585
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7589
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7593
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7597
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7601
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7605
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7609
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7627
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7631
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7635
		{
			sqlVAL.union.val = tree.HiddenConstraint{}
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7639
		{
			sqlVAL.union.val = tree.UniqueConstraint{
				WithoutIndex: sqlDollar[2].union.bool(),
			}
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7645
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{
				StorageParams: sqlDollar[3].union.storageParams(),
			}
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7651
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:       true,
				ShardBuckets:  sqlDollar[5].union.expr(),
				StorageParams: sqlDollar[6].union.storageParams(),
			}
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7659
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7663
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7667
		{
			sqlVAL.union.val = &tree.ColumnOnUpdate{Expr: sqlDollar[3].union.expr()}
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7671
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7681
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: false}
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7685
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: true}
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7689
		{
			sqllex.Error("use AS ( <expr> ) STORED or AS ( <expr> ) VIRTUAL")
			return 1
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7694
		{
			sqlVAL.union.val = &tree.GeneratedAlwaysAsIdentity{
				SeqOptions: sqlDollar[4].union.seqOpts(),
			}
		}
	case 1288:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7700
		{
			sqlVAL.union.val = &tree.GeneratedByDefAsIdentity{
				SeqOptions: sqlDollar[4].union.seqOpts(),
			}
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7706
		{
			sqlVAL.union.val = &tree.GeneratedAlwaysAsIdentity{}
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7710
		{
			sqlVAL.union.val = &tree.GeneratedByDefAsIdentity{}
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7716
		{

			sqlVAL.union.val = true
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7721
		{
			sqlVAL.union.val = false
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7726
		{
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7730
		{
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7733
		{
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7737
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[2].str),
				Columns:          sqlDollar[4].union.idxElems(),
				Sharded:          sqlDollar[6].union.shardedIndexDef(),
				Storing:          sqlDollar[7].union.nameList(),
				PartitionByIndex: sqlDollar[8].union.partitionByIndex(),
				StorageParams:    sqlDollar[9].union.storageParams(),
				Predicate:        sqlDollar[10].union.expr(),
			}
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7749
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:             tree.Name(sqlDollar[3].str),
					Columns:          sqlDollar[5].union.idxElems(),
					Sharded:          sqlDollar[7].union.shardedIndexDef(),
					Storing:          sqlDollar[8].union.nameList(),
					PartitionByIndex: sqlDollar[9].union.partitionByIndex(),
					StorageParams:    sqlDollar[10].union.storageParams(),
					Predicate:        sqlDollar[11].union.expr(),
				},
			}
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7763
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[3].str),
				Columns:          sqlDollar[5].union.idxElems(),
				Inverted:         true,
				PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
				StorageParams:    sqlDollar[8].union.storageParams(),
				Predicate:        sqlDollar[9].union.expr(),
			}
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7776
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 1301:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7788
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7793
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7799
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7806
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				WithoutIndex: sqlDollar[2].union.bool(),
				IndexTableDef: tree.IndexTableDef{
					Columns:          sqlDollar[4].union.idxElems(),
					Storing:          sqlDollar[6].union.nameList(),
					PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
					Predicate:        sqlDollar[9].union.expr(),
				},
			}
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7818
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:       sqlDollar[4].union.idxElems(),
					Sharded:       sqlDollar[6].union.shardedIndexDef(),
					StorageParams: sqlDollar[7].union.storageParams(),
				},
				PrimaryKey: true,
			}
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7830
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7841
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7848
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7852
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7858
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7868
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7879
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7883
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7890
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7896
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:       sqlDollar[4].union.idxElems(),
					StorageParams: sqlDollar[6].union.storageParams(),
				},
				PrimaryKey: true,
			}
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7908
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7912
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1318:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7918
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7924
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7928
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7934
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1322:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7938
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1323:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7944
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{
				StorageParams: sqlDollar[3].union.storageParams(),
			}
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7951
		{
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7952
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7953
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7954
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7955
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 1329:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7956
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7974
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7978
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1335:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7984
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[3].union.expr(),
			}
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7990
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7996
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8000
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8006
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8010
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8030
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8034
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8038
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8042
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8051
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8055
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8059
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8063
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8067
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8073
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8079
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8087
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8091
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8095
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8099
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8103
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8123
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:        name,
				Persistence: sqlDollar[2].union.persistence(),
				Options:     sqlDollar[5].union.seqOpts(),
			}
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8132
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
			}
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8140
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8144
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8147
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8148
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8151
		{

			parsedType := sqlDollar[2].union.colType()
			if parsedType == nil {
				sqllex.(*lexer).lastError = pgerror.Newf(pgcode.UndefinedObject, "type %q does not exist", sqlDollar[2].union.val)
				sqllex.(*lexer).populateErrorDetails()
				return 1
			}
			if parsedType.Family() != types.IntFamily {
				sqllex.Error(fmt.Sprintf("invalid integer type: %s", parsedType.SQLString()))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptAs, AsIntegerType: parsedType}
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8165
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8167
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8168
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8169
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8179
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8181
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8183
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8185
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8187
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8188
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8190
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8191
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8193
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8195
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptRestart}
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8196
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptRestart, IntVal: &x}
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8198
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptRestart, IntVal: &x, OptionalWord: true}
		}
	case 1381:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8201
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8209
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8212
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8216
		{

			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[2].str), Value: sqlDollar[3].union.expr()}
		}
	case 1385:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8222
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8226
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8236
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.roleSpec(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8240
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.roleSpec(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8243
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8254
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.roleSpec(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8258
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.roleSpec(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8262
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[3].union.roleSpec(), DatabaseName: tree.Name(sqlDollar[4].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8266
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[5].union.roleSpec(), IfExists: true, DatabaseName: tree.Name(sqlDollar[6].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[7].union.setVar()}
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8270
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: true, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8274
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: false, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8277
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8281
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8285
		{
			sqlVAL.str = ""
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8293
		{
			sqlVAL.union.val = sqlDollar[2].union.setVar()
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8297
		{

			sqlVAL.union.val = sqlDollar[2].union.setVar()
		}
	case 1401:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8304
		{
			sqlVAL.union.val = &tree.SetVar{ResetAll: true}
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8308
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8316
		{
			sqlVAL.union.val = true
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8320
		{

			sqlVAL.union.val = true
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8325
		{
			sqlVAL.union.val = false
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8335
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8349
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Persistence: sqlDollar[4].union.persistence(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8361
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8373
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[5].union.nameList(),
				AsSource:     sqlDollar[7].union.slct(),
				Materialized: true,
			}
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8383
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[8].union.nameList(),
				AsSource:     sqlDollar[10].union.slct(),
				Materialized: true,
				IfNotExists:  true,
			}
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8393
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8397
		{
			return unimplementedWithIssue(sqllex, 74083)
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8401
		{
			sqlVAL.union.val = true
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8405
		{
			sqlVAL.union.val = true
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8411
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8415
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8419
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8423
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8427
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8431
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8435
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8439
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8443
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8447
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8451
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8455
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1427:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8459
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8463
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8467
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8471
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8475
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8479
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8483
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8487
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8491
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8495
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1437:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8499
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8503
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8511
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8515
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8521
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8525
		{
			sqlVAL.union.val = nil
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8531
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name("valid until"), Value: sqlDollar[3].union.expr()}
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8535
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name("valid until"), Value: tree.DNull}
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8540
		{
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8541
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8550
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.enumValueList(),
			}
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8558
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:    sqlDollar[6].union.unresolvedObjectName(),
				Variety:     tree.Enum,
				EnumLabels:  sqlDollar[10].union.enumValueList(),
				IfNotExists: true,
			}
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8566
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8568
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8570
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8572
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8574
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8576
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8580
		{
			sqlVAL.union.val = sqlDollar[1].union.enumValueList()
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8584
		{
			sqlVAL.union.val = tree.EnumValueList(nil)
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8590
		{
			sqlVAL.union.val = tree.EnumValueList{tree.EnumValue(sqlDollar[1].str)}
		}
	case 1460:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8594
		{
			sqlVAL.union.val = append(sqlDollar[1].union.enumValueList(), tree.EnumValue(sqlDollar[3].str))
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:8611
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[5].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Columns:          sqlDollar[10].union.idxElems(),
				Sharded:          sqlDollar[12].union.shardedIndexDef(),
				Storing:          sqlDollar[13].union.nameList(),
				PartitionByIndex: sqlDollar[14].union.partitionByIndex(),
				StorageParams:    sqlDollar[15].union.storageParams(),
				Predicate:        sqlDollar[16].union.expr(),
				Inverted:         sqlDollar[8].union.bool(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1462:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:8628
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[8].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Sharded:          sqlDollar[15].union.shardedIndexDef(),
				Storing:          sqlDollar[16].union.nameList(),
				PartitionByIndex: sqlDollar[17].union.partitionByIndex(),
				Inverted:         sqlDollar[11].union.bool(),
				StorageParams:    sqlDollar[18].union.storageParams(),
				Predicate:        sqlDollar[19].union.expr(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:8646
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[6].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				Columns:          sqlDollar[10].union.idxElems(),
				Storing:          sqlDollar[12].union.nameList(),
				PartitionByIndex: sqlDollar[13].union.partitionByIndex(),
				StorageParams:    sqlDollar[14].union.storageParams(),
				Predicate:        sqlDollar[15].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1464:
		sqlDollar = sqlS[sqlpt-18 : sqlpt+1]
//line sql-gen.y:8662
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[9].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Storing:          sqlDollar[15].union.nameList(),
				PartitionByIndex: sqlDollar[16].union.partitionByIndex(),
				StorageParams:    sqlDollar[17].union.storageParams(),
				Predicate:        sqlDollar[18].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8678
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1466:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8682
		{

			switch sqlDollar[2].str {
			case "gin", "gist":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1467:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8697
		{
			sqlVAL.union.val = false
		}
	case 1468:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8703
		{
			sqlVAL.union.val = true
		}
	case 1469:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8707
		{
			sqlVAL.union.val = false
		}
	case 1470:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8713
		{
			sqlVAL.union.val = true
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8717
		{
			sqlVAL.union.val = false
		}
	case 1472:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8723
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1473:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8727
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8736
		{
			e := sqlDollar[2].union.idxElem()
			e.Expr = sqlDollar[1].union.expr()
			sqlVAL.union.val = e
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8742
		{
			e := sqlDollar[4].union.idxElem()
			e.Expr = sqlDollar[2].union.expr()
			sqlVAL.union.val = e
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8748
		{
			e := sqlDollar[2].union.idxElem()
			e.Column = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = e
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8756
		{

			opClass := sqlDollar[1].str
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = tree.IndexElem{Direction: dir, NullsOrder: nullsOrder, OpClass: tree.Name(opClass)}
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8774
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8775
		{
			sqlVAL.str = ""
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8778
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8779
		{
			sqlVAL.str = ""
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8783
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8787
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8791
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8797
		{
			sqlVAL.union.val = &tree.ReparentDatabase{Name: tree.Name(sqlDollar[3].str), Parent: tree.Name(sqlDollar[9].str)}
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8803
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8809
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8815
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8823
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false,
			}
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8829
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true,
			}
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8837
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Locality: sqlDollar[5].union.locality(),
				IfExists: false,
			}
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8845
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Locality: sqlDollar[7].union.locality(),
				IfExists: true,
			}
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8855
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8861
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[6].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8868
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8874
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1497:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8880
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[4].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8887
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8893
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8899
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8905
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel:       tree.LocalityLevelRow,
				RegionalByRowColumn: tree.Name(sqlDollar[6].str),
			}
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8914
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.roleSpec(),
				IfExists: false,
			}
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8922
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.roleSpec(),
				IfExists: true,
			}
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8932
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsView: true,
			}
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8938
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[7].str),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8948
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsView: true,
			}
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8954
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[9].str),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8966
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.roleSpec(),
				IfExists: false,
				IsView:   true,
			}
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8975
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Owner:          sqlDollar[7].union.roleSpec(),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8985
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.roleSpec(),
				IfExists: true,
				IsView:   true,
			}
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8994
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Owner:          sqlDollar[9].union.roleSpec(),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9006
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsSequence: true,
			}
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9012
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsSequence: true,
			}
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9020
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[3].union.unresolvedObjectName(),
				Owner:      sqlDollar[6].union.roleSpec(),
				IfExists:   false,
				IsSequence: true,
			}
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9029
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[5].union.unresolvedObjectName(),
				Owner:      sqlDollar[8].union.roleSpec(),
				IfExists:   true,
				IsSequence: true,
			}
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9040
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9046
		{
			name := sqlDollar[4].union.unresolvedObjectName()
			newName := sqlDollar[7].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9058
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1519:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:9064
		{
			name := sqlDollar[6].union.unresolvedObjectName()
			newName := sqlDollar[9].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9078
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1521:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9084
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1522:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9092
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1523:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9096
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1524:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9108
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.roleSpecList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Grant:   sqlDollar[6].union.abbreviatedGrant(),
				IsGrant: true,
			}
		}
	case 1525:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9117
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.roleSpecList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Revoke:  sqlDollar[6].union.abbreviatedRevoke(),
				IsGrant: false,
			}
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9126
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Grant:       sqlDollar[8].union.abbreviatedGrant(),
				IsGrant:     true,
			}
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9135
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Revoke:      sqlDollar[8].union.abbreviatedRevoke(),
				IsGrant:     false,
			}
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9143
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9147
		{
			sqlVAL.union.val = tree.AbbreviatedGrant{
				Privileges:      sqlDollar[2].union.privilegeList(),
				Target:          sqlDollar[4].union.targetObjectType(),
				Grantees:        sqlDollar[6].union.roleSpecList(),
				WithGrantOption: sqlDollar[7].union.bool(),
			}
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9158
		{
			sqlVAL.union.val = true
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9162
		{
			sqlVAL.union.val = false
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9168
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Target:     sqlDollar[4].union.targetObjectType(),
				Grantees:   sqlDollar[6].union.roleSpecList(),
			}
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:9176
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges:     sqlDollar[5].union.privilegeList(),
				Target:         sqlDollar[7].union.targetObjectType(),
				Grantees:       sqlDollar[9].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 1534:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9187
		{
			sqlVAL.union.val = privilege.Tables
		}
	case 1535:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9191
		{
			sqlVAL.union.val = privilege.Sequences
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9195
		{
			sqlVAL.union.val = privilege.Types
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9199
		{
			sqlVAL.union.val = privilege.Schemas
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9203
		{
			return unimplemented(sqllex, "ALTER DEFAULT PRIVILEGES ... ON FUNCTIONS ...")
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9207
		{
			return unimplemented(sqllex, "ALTER DEFAULT PRIVILEGES ... ON ROUTINES ...")
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9213
		{
			sqlVAL.union.val = sqlDollar[3].union.roleSpecList()
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9216
		{
			sqlVAL.union.val = tree.RoleSpecList(nil)
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9222
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9226
		{
			sqlVAL.str = ""
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9233
		{
			sqlVAL.union.val = sqlDollar[3].union.objectNamePrefixList()
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9237
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{}
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9242
		{
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9243
		{
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9246
		{
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9247
		{
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9255
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9258
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9268
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9276
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9278
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9282
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9285
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9298
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeSchedule,
			}
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9306
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9308
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.ResumeSchedule,
			}
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9314
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9327
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.DropSchedule,
			}
		}
	case 1562:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9335
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9337
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.DropSchedule,
			}
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9343
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9351
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9354
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9358
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9359
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1572:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9360
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1574:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9376
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1575:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9379
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9381
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9384
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9394
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9397
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9399
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9402
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9406
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9411
		{
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9412
		{
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9413
		{
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9423
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9427
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9430
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9433
		{
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9434
		{
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9438
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9442
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9448
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9452
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1595:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9458
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9462
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9475
		{
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9477
		{
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9481
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9486
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1601:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9490
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9494
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9498
		{
			sqlVAL.union.val = tree.TransactionModes{Deferrable: sqlDollar[1].union.deferrableMode()}
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9504
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1605:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9510
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9516
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9520
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9526
		{
			sqlVAL.union.val = tree.Deferrable
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9530
		{
			sqlVAL.union.val = tree.NotDeferrable
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-14 : sqlpt+1]
//line sql-gen.y:9540
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:            tree.Name(sqlDollar[3].str),
				Template:        sqlDollar[5].str,
				Encoding:        sqlDollar[6].str,
				Collate:         sqlDollar[7].str,
				CType:           sqlDollar[8].str,
				ConnectionLimit: sqlDollar[9].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[10].str),
				Regions:         sqlDollar[11].union.nameList(),
				SurvivalGoal:    sqlDollar[12].union.survivalGoal(),
				Placement:       sqlDollar[13].union.dataPlacement(),
				Owner:           sqlDollar[14].union.roleSpec(),
			}
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:9556
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists:     true,
				Name:            tree.Name(sqlDollar[6].str),
				Template:        sqlDollar[8].str,
				Encoding:        sqlDollar[9].str,
				Collate:         sqlDollar[10].str,
				CType:           sqlDollar[11].str,
				ConnectionLimit: sqlDollar[12].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[13].str),
				Regions:         sqlDollar[14].union.nameList(),
				SurvivalGoal:    sqlDollar[15].union.survivalGoal(),
				Placement:       sqlDollar[16].union.dataPlacement(),
			}
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9571
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9576
		{
			sqlVAL.str = ""
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9581
		{
			sqlVAL.str = sqlDollar[4].str
		}
	case 1617:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9588
		{
			sqlVAL.union.val = tree.DataPlacementUnspecified
		}
	case 1618:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9594
		{

			sqlVAL.union.val = tree.DataPlacementRestricted
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9599
		{

			sqlVAL.union.val = tree.DataPlacementDefault
		}
	case 1620:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9606
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9610
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9616
		{

		}
	case 1624:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9623
		{
			sqlVAL.union.val = tree.SurvivalGoalRegionFailure
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9627
		{
			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9631
		{

			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9640
		{
			sqlVAL.union.val = tree.SurvivalGoalDefault
		}
	case 1629:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9646
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1630:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9650
		{
			sqlVAL.str = ""
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9656
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9660
		{
			sqlVAL.str = ""
		}
	case 1633:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9666
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9670
		{
			sqlVAL.str = ""
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9676
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1636:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9680
		{
			sqlVAL.str = ""
		}
	case 1637:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9686
		{
			ret, err := sqlDollar[4].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = ret
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9694
		{
			sqlVAL.union.val = int32(-1)
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9700
		{
			sqlVAL.union = sqlDollar[3].union
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9704
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.CurrentUser,
			}
		}
	case 1641:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9711
		{
		}
	case 1642:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9712
		{
		}
	case 1643:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9727
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1644:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9734
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9741
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1646:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9752
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9759
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1648:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9763
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1649:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9772
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1650:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9777
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9783
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1652:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9787
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9791
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9797
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1655:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9801
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1657:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9821
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1658:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9825
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:   tree.NameList(nil),
				DoNothing: true,
			}
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9832
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				DoNothing:        true,
			}
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:9840
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				Exprs:            sqlDollar[10].union.updateExprs(),
				Where:            tree.NewWhere(tree.AstWhere, sqlDollar[11].union.expr()),
			}
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9849
		{
			sqlVAL.union.val = &tree.OnConflict{
				Constraint: tree.Name(sqlDollar[5].str),
				DoNothing:  true,
			}
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:9856
		{
			sqlVAL.union.val = &tree.OnConflict{
				Constraint: tree.Name(sqlDollar[5].str),
				Exprs:      sqlDollar[9].union.updateExprs(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[10].union.expr()),
			}
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9866
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9871
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9875
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:9892
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9904
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9907
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9910
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9916
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9920
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1674:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9933
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9936
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9940
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9951
		{
			sqlVAL.union.val = &tree.ReassignOwnedBy{
				OldRoles: sqlDollar[4].union.roleSpecList(),
				NewRole:  sqlDollar[6].union.roleSpec(),
			}
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9957
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9966
		{
			sqlVAL.union.val = &tree.DropOwnedBy{
				Roles:        sqlDollar[4].union.roleSpecList(),
				DropBehavior: sqlDollar[5].union.dropBehavior(),
			}
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9972
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10013
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10019
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10023
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10038
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10042
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10046
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10050
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10054
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10058
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10062
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10066
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10071
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10072
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10075
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10076
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10080
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10084
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10090
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1700:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10099
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1701:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10100
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1702:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10101
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1703:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10102
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1704:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10105
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1705:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10106
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1706:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10109
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1707:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10110
		{
			sqlVAL.union.val = tree.LockWaitSkip
		}
	case 1708:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10111
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1709:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10116
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10151
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10152
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10153
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1719:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10175
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1720:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10188
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1721:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10202
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1722:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10214
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1723:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10218
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1724:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10227
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1725:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10236
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1726:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10251
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1727:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10258
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1728:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10270
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1729:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10274
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1730:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10279
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1731:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10285
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1732:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10289
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1733:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10295
		{
			sqlVAL.union.val = true
		}
	case 1734:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10299
		{
			sqlVAL.union.val = false
		}
	case 1735:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10305
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1736:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10315
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1737:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10327
		{
		}
	case 1738:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10328
		{
		}
	case 1739:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10332
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1740:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10336
		{
			sqlVAL.union.val = nil
		}
	case 1741:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10341
		{
		}
	case 1742:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10342
		{
		}
	case 1743:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10346
		{
			sqlVAL.union.val = true
		}
	case 1744:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10350
		{
			sqlVAL.union.val = false
		}
	case 1745:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10354
		{
			sqlVAL.union.val = false
		}
	case 1746:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10360
		{
			sqlVAL.union.val = true
		}
	case 1747:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10366
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1748:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10371
		{
		}
	case 1749:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10372
		{
		}
	case 1750:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10375
		{
		}
	case 1751:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10376
		{
		}
	case 1752:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10380
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1753:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10384
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1754:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10390
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1755:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10396
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1756:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10400
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1757:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10407
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1758:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10411
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1759:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10417
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1760:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10429
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1761:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10434
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1762:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10446
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1763:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10450
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1764:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10454
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1765:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10460
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1766:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10469
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1769:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10480
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1770:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10481
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1772:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10485
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1773:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10489
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1774:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10493
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1775:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10507
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1776:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10511
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1777:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10519
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1778:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10526
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1782:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10548
		{
		}
	case 1783:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10549
		{
		}
	case 1784:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10552
		{
		}
	case 1785:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10553
		{
		}
	case 1786:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10570
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1787:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10574
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1788:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10579
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1789:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10580
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1790:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10586
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1791:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10587
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "rollup")
		}
	case 1792:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10588
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "cube")
		}
	case 1793:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10589
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "grouping sets")
		}
	case 1794:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10593
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1795:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10597
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1796:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10616
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1797:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10619
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1798:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10621
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1799:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10633
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1800:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10636
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1801:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10638
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1802:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10644
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1803:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10648
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1804:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10654
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1805:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10658
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1806:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10663
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1807:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10668
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1808:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10674
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1809:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10679
		{
			sqlVAL.union.val = &tree.IndexFlags{NoZigzagJoin: true}
		}
	case 1810:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10684
		{
			sqlVAL.union.val = &tree.IndexFlags{NoFullScan: true}
		}
	case 1811:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10689
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1812:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10695
		{
			sqlVAL.union.val = &tree.IndexFlags{ForceZigzag: true}
		}
	case 1813:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10700
		{
			sqlVAL.union.val = &tree.IndexFlags{ZigzagIndexes: []tree.UnrestrictedName{tree.UnrestrictedName(sqlDollar[3].str)}}
		}
	case 1814:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10705
		{

			sqlVAL.union.val = &tree.IndexFlags{ZigzagIndexIDs: []tree.IndexID{tree.IndexID(sqlDollar[4].union.int64())}}
		}
	case 1815:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10712
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1816:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10717
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1817:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10728
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1818:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10732
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1819:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10736
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1820:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10744
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1821:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10778
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1822:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10788
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1823:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10798
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1824:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10806
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1825:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10815
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1826:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10819
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1827:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10823
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1828:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10834
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1829:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10858
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1830:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10864
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1831:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10875
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1832:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10879
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1833:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10885
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1834:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10887
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1835:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10891
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1836:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10897
		{
		}
	case 1837:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10899
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1838:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10902
		{
			sqlVAL.union.val = nil
		}
	case 1839:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10903
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1840:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10904
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1841:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10908
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1842:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10912
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1843:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10918
		{
			sqlVAL.union.val = true
		}
	case 1844:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10922
		{
			sqlVAL.union.val = false
		}
	case 1845:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10942
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1846:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10946
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 1847:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10950
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 1848:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10954
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 1849:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10958
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 1850:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10962
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1851:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10968
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 1852:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10972
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 1854:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10979
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 1855:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10985
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 1857:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10992
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 1858:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10998
		{
			sqlVAL.str = tree.AstFull
		}
	case 1859:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11002
		{
			sqlVAL.str = tree.AstLeft
		}
	case 1860:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11006
		{
			sqlVAL.str = tree.AstRight
		}
	case 1861:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11010
		{
			sqlVAL.str = tree.AstInner
		}
	case 1862:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11016
		{
		}
	case 1863:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11017
		{
		}
	case 1864:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11041
		{
			sqlVAL.str = tree.AstHash
		}
	case 1865:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11045
		{
			sqlVAL.str = tree.AstMerge
		}
	case 1866:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11049
		{
			sqlVAL.str = tree.AstLookup
		}
	case 1867:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11053
		{
			sqlVAL.str = tree.AstInverted
		}
	case 1868:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11057
		{
			sqlVAL.str = ""
		}
	case 1869:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11070
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 1870:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11074
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 1871:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11079
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1872:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11080
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1873:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11081
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 1874:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11082
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 1875:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11086
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 1876:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11091
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 1877:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11105
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1878:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11109
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 1879:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11115
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 1880:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11121
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1881:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11131
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[3].union.indexFlags(),
			}
		}
	case 1882:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11141
		{
			sqlVAL.union.val = true
		}
	case 1883:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11145
		{
			sqlVAL.union.val = false
		}
	case 1884:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11151
		{
			sqlVAL.union.val = true
		}
	case 1885:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11155
		{
			sqlVAL.union.val = false
		}
	case 1886:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11161
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1888:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11168
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1889:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11180
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 1890:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11193
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1891:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11201
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1892:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11202
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1893:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11212
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1894:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11219
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 1895:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11220
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1896:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11222
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 1897:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11230
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1898:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11231
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 1900:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11243
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1901:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11250
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1902:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11259
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.QChar
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 1903:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11299
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.OIDTypeReference{OID: oid.Oid(id)}
		}
	case 1904:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11304
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1909:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11311
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 1910:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11312
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 1911:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11315
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 1912:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11316
		{
			sqlVAL.union.val = geopb.ShapeType_PointM
		}
	case 1913:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11317
		{
			sqlVAL.union.val = geopb.ShapeType_PointZ
		}
	case 1914:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11318
		{
			sqlVAL.union.val = geopb.ShapeType_PointZM
		}
	case 1915:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11319
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 1916:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11320
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringM
		}
	case 1917:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11321
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZ
		}
	case 1918:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11322
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZM
		}
	case 1919:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11323
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 1920:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11324
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonM
		}
	case 1921:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11325
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZ
		}
	case 1922:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11326
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZM
		}
	case 1923:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11327
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 1924:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11328
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointM
		}
	case 1925:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11329
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZ
		}
	case 1926:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11330
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZM
		}
	case 1927:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11331
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 1928:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11332
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringM
		}
	case 1929:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11333
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZ
		}
	case 1930:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11334
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZM
		}
	case 1931:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11335
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 1932:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11336
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonM
		}
	case 1933:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11337
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZ
		}
	case 1934:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11338
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZM
		}
	case 1935:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11339
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 1936:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11340
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionM
		}
	case 1937:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11341
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZ
		}
	case 1938:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11342
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZM
		}
	case 1939:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11343
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 1940:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11344
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryM
		}
	case 1941:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11345
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZ
		}
	case 1942:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11346
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZM
		}
	case 1943:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11349
		{
			sqlVAL.union.val = types.Geography
		}
	case 1944:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11350
		{
			sqlVAL.union.val = types.Geometry
		}
	case 1945:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11351
		{
			sqlVAL.union.val = types.Box2D
		}
	case 1946:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11353
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1947:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11357
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1948:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11361
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1949:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11369
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1955:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11395
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1956:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11403
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1957:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11411
		{
			sqlVAL.union.val = nil
		}
	case 1958:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11418
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1959:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11422
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1960:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11426
		{
			sqlVAL.union.val = types.Int2
		}
	case 1961:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11430
		{
			sqlVAL.union.val = types.Int
		}
	case 1962:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11434
		{
			sqlVAL.union.val = types.Float4
		}
	case 1963:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11438
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 1964:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11442
		{
			sqlVAL.union.val = types.Float
		}
	case 1965:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11446
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1966:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11454
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1967:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11462
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1968:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11470
		{
			sqlVAL.union.val = types.Bool
		}
	case 1969:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11476
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 1970:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11489
		{
			sqlVAL.union.val = types.Float
		}
	case 1971:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11495
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1972:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11501
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1973:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11509
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 1974:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11513
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1975:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11517
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1976:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11523
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 1977:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11535
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1978:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11541
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 1979:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11545
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1980:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11549
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1981:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11553
		{
			sqlVAL.union.val = types.String
		}
	case 1984:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11562
		{
			sqlVAL.union.val = true
		}
	case 1985:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11563
		{
			sqlVAL.union.val = false
		}
	case 1986:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11568
		{
			sqlVAL.union.val = types.Date
		}
	case 1987:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11572
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 1988:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11580
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 1989:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11592
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 1990:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11594
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 1991:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11603
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 1992:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11611
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 1993:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11624
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 1994:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11628
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 1995:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11638
		{
			sqlVAL.union.val = true
		}
	case 1996:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11639
		{
			sqlVAL.union.val = false
		}
	case 1997:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11640
		{
			sqlVAL.union.val = false
		}
	case 1998:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11644
		{
			sqlVAL.union.val = types.Interval
		}
	case 1999:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11648
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 2000:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11652
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 2001:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11663
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 2002:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11671
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 2003:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11679
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 2004:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11687
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 2005:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11695
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 2006:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11703
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 2007:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11709
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 2008:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11718
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 2009:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11727
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 2010:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11736
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 2011:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11742
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 2012:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11751
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 2013:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11757
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 2015:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11767
		{
			sqlVAL.union.val = nil
		}
	case 2016:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11773
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 2017:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11781
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 2019:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11818
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 2020:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11822
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 2021:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11826
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 2022:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11830
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 2023:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11841
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2024:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11846
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 2025:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11850
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 2026:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11854
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnarySqrt), Expr: sqlDollar[2].union.expr()}
		}
	case 2027:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11858
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryCbrt), Expr: sqlDollar[2].union.expr()}
		}
	case 2028:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11862
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2029:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11866
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2030:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11870
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2031:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11874
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2032:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11878
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2033:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11882
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2034:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11886
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2035:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11890
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2036:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11894
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2037:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11898
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2038:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11902
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2039:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11906
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2040:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11910
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.JSONExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2041:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11914
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.JSONSomeExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2042:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11918
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.JSONAllExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2043:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11922
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.Contains), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2044:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11926
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.ContainedBy), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2045:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11930
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2046:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11934
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2047:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11938
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2048:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11942
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2049:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11946
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchVal), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2050:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11950
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchText), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2051:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11954
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchValPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2052:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11958
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchTextPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2053:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11962
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 2054:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11966
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 2055:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11970
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.Overlaps), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2056:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11974
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 2057:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11978
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2058:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11982
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2059:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11986
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2060:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11990
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 2061:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11998
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 2062:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12008
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2063:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12012
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2064:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12016
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 2065:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12020
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 2066:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12024
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.Like), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2067:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12028
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2068:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12032
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotLike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2069:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12036
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 2070:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12040
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.ILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2071:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12044
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2072:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12048
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2073:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12052
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 2074:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12056
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.SimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2075:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12060
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 2076:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12064
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotSimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 2077:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12068
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 2078:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12072
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.RegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2079:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12076
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotRegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2080:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12080
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.RegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2081:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12084
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotRegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2082:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12088
		{
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator: treecmp.MakeComparisonOperator(treecmp.EQ),
				Left:     sqlDollar[1].union.expr(),
				Right:    tree.NewNumVal(constant.MakeFloat64(math.NaN()), "NaN", false),
			}
		}
	case 2083:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12096
		{
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator: treecmp.MakeComparisonOperator(treecmp.NE),
				Left:     sqlDollar[1].union.expr(),
				Right:    tree.NewNumVal(constant.MakeFloat64(math.NaN()), "NaN", false),
			}
		}
	case 2084:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12104
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2085:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12108
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2086:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12112
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2087:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12116
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2088:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12120
		{
			t1, t2 := sqlDollar[1].union.tuple(), sqlDollar[3].union.tuple()
			if len(t1.Exprs) != 2 {
				sqllex.Error("wrong number of parameters on left side of OVERLAPS expression")
				return 1
			}
			if len(t2.Exprs) != 2 {
				sqllex.Error("wrong number of parameters on right side of OVERLAPS expression")
				return 1
			}
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("overlaps"), Exprs: tree.Exprs{t1.Exprs[0], t1.Exprs[1], t2.Exprs[0], t2.Exprs[1]}}
		}
	case 2089:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12133
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 2090:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12137
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 2091:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12141
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 2092:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12145
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 2093:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12149
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 2094:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12153
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 2095:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12157
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 2096:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12161
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 2097:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12165
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 2098:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12169
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 2099:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12173
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 2100:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12177
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 2101:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12181
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 2102:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12185
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 2103:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12189
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.In), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2104:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12193
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotIn), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2105:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12197
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(treecmp.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 2106:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12214
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 2107:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12219
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 2109:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12231
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 2110:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12235
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 2111:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12239
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2112:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12243
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 2113:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12247
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 2114:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12251
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2115:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12255
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2116:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12259
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2117:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12263
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2118:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12267
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2119:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12271
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2120:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12275
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2121:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12279
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2122:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12283
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2123:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12287
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2124:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12291
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2125:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12295
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2126:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12299
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2127:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12303
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2128:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12307
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2129:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12311
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2130:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12315
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2131:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12319
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2132:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12323
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2133:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12327
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 2134:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12335
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 2135:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12345
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 2136:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12349
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 2137:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12353
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 2138:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12357
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 2140:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12371
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 2142:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12379
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 2143:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12415
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 2144:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12419
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 2145:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12423
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 2146:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12427
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 2147:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12431
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 2148:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12436
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 2149:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12438
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2150:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12442
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2151:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12446
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 2152:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12450
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 2153:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12454
		{
			sqlVAL.union.val = tree.DNull
		}
	case 2154:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12458
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 2155:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12462
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 2156:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12471
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 2157:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12478
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 2158:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12482
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: tree.Name(sqlDollar[5].str)}
		}
	case 2159:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12486
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			if idx <= 0 {
				err := errors.New("invalid numeric tuple index: indexes must be > 0")
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 2160:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12496
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 2162:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12501
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2163:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12505
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2164:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12509
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 2165:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12513
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 2166:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12517
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2167:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12520
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 2168:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12524
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 2169:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12528
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 2170:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12531
		{
			return unimplemented(sqllex, "variadic")
		}
	case 2171:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:12532
		{
			return unimplemented(sqllex, "variadic")
		}
	case 2172:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12534
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 2173:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12540
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 2174:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12544
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 2175:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12547
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 2176:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12556
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.QChar, SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var err error
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							typ, err = name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 2177:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12609
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 2178:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12622
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 2179:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12634
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2180:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12643
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2181:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12644
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2182:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12649
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 2183:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12653
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2184:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12657
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2185:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12663
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 2186:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12667
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2187:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12671
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2188:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12675
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2189:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12679
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2190:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12683
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2191:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12689
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2192:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12693
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("session_user")}
		}
	case 2193:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12697
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2194:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12701
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 2195:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12705
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 2196:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:12709
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 2197:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:12713
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 2198:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12717
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 2199:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12721
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 2200:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12725
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 2201:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12729
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 2202:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12733
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2203:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12737
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 2205:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12744
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2206:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12747
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2207:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12749
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2208:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12752
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2209:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12754
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2210:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12758
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2211:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12761
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2212:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12763
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2213:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12767
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2214:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12770
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2215:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12772
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2216:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12776
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2217:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12779
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2218:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12781
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2219:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12785
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2220:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12788
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2221:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12790
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2222:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12793
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2223:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12795
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2224:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12798
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2225:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12800
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2226:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12803
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2227:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12805
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2228:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12808
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2229:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12810
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2230:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12813
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2231:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12815
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2232:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12819
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2233:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12822
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2234:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12823
		{
			return unimplemented(sqllex, "treat")
		}
	case 2235:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12825
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2236:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12829
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2237:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12833
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2238:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12837
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2239:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12841
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2240:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12844
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2241:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12846
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2242:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12849
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2243:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12855
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 2244:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12859
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 2245:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12865
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 2246:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12869
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2247:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12876
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 2248:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12880
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 2249:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12886
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 2250:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12890
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 2251:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12896
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 2252:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12904
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 2253:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12908
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 2254:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12912
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 2255:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12919
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 2257:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12939
		{
			sqlVAL.str = ""
		}
	case 2258:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12945
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 2259:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12949
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2260:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12955
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      treewindow.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2261:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12963
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      treewindow.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2262:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12971
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      treewindow.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2263:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12979
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 2264:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12985
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == treewindow.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == treewindow.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 2265:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12998
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == treewindow.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == treewindow.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == treewindow.CurrentRow && endBound.BoundType == treewindow.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == treewindow.OffsetFollowing && endBound.BoundType == treewindow.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == treewindow.OffsetFollowing && endBound.BoundType == treewindow.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 2266:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13026
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: treewindow.UnboundedPreceding}
		}
	case 2267:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13030
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: treewindow.UnboundedFollowing}
		}
	case 2268:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13034
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: treewindow.CurrentRow}
		}
	case 2269:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13038
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  treewindow.OffsetPreceding,
			}
		}
	case 2270:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13045
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  treewindow.OffsetFollowing,
			}
		}
	case 2271:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13054
		{
			sqlVAL.union.val = treewindow.ExcludeCurrentRow
		}
	case 2272:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13058
		{
			sqlVAL.union.val = treewindow.ExcludeGroup
		}
	case 2273:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13062
		{
			sqlVAL.union.val = treewindow.ExcludeTies
		}
	case 2274:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13066
		{

			sqlVAL.union.val = treewindow.NoExclusion
		}
	case 2275:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13071
		{
			sqlVAL.union.val = treewindow.NoExclusion
		}
	case 2276:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13084
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 2277:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13088
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2279:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13095
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 2280:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13107
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Any)
		}
	case 2281:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13111
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Some)
		}
	case 2282:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13115
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.All)
		}
	case 2283:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13131
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Plus)
		}
	case 2284:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13132
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Minus)
		}
	case 2285:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13133
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Mult)
		}
	case 2286:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13134
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Div)
		}
	case 2287:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13135
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Mod)
		}
	case 2288:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13136
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Pow)
		}
	case 2289:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13137
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.LT)
		}
	case 2290:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13138
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.GT)
		}
	case 2291:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13139
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.EQ)
		}
	case 2292:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13140
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.LE)
		}
	case 2293:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13141
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.GE)
		}
	case 2294:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13142
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NE)
		}
	case 2295:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13144
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.JSONExists)
		}
	case 2296:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13145
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Bitand)
		}
	case 2297:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13146
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Bitor)
		}
	case 2298:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13147
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Bitxor)
		}
	case 2299:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13148
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.FloorDiv)
		}
	case 2300:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13149
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Contains)
		}
	case 2301:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13150
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.ContainedBy)
		}
	case 2302:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13151
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.LShift)
		}
	case 2303:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13152
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.RShift)
		}
	case 2304:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13153
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Concat)
		}
	case 2305:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13154
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchVal)
		}
	case 2306:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13155
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchText)
		}
	case 2307:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13156
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchValPath)
		}
	case 2308:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13157
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchTextPath)
		}
	case 2309:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13158
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.JSONSomeExists)
		}
	case 2310:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13159
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.JSONAllExists)
		}
	case 2311:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13160
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotRegMatch)
		}
	case 2312:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13161
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.RegIMatch)
		}
	case 2313:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13162
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotRegIMatch)
		}
	case 2314:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13163
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Overlaps)
		}
	case 2315:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13164
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryComplement)
		}
	case 2316:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13165
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnarySqrt)
		}
	case 2317:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13166
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryCbrt)
		}
	case 2319:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13171
		{

			if sqlDollar[1].str != "pg_catalog" {
				return unimplementedWithIssue(sqllex, 65017)
			}
			sqlVAL.union = sqlDollar[3].union
		}
	case 2320:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13187
		{
			sqlVAL.union = sqlDollar[3].union
		}
	case 2323:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13194
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Like)
		}
	case 2324:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13195
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotLike)
		}
	case 2325:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13196
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.ILike)
		}
	case 2326:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13197
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotILike)
		}
	case 2327:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13220
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2328:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13224
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2329:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13230
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2330:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13234
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2331:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13238
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2332:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13249
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2333:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13253
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2334:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13259
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2335:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13263
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2337:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13270
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2338:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13276
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2339:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13280
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2340:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13286
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 2341:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13290
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 2342:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13296
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2343:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13300
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2344:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13306
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2345:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13310
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2346:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13316
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(strings.ToLower(sqlDollar[1].str)), sqlDollar[3].union.expr()}
		}
	case 2347:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13320
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2356:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13343
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 2357:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13347
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2358:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13351
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2359:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13357
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2360:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13364
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 2361:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13368
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2362:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13385
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2363:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13389
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2364:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13393
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2365:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13397
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 2366:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13401
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2367:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13407
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2368:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13413
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2369:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13419
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 2370:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13423
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 2371:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13427
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2372:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13433
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2374:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13445
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 2375:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13452
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 2376:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13456
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 2377:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13462
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 2378:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13468
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2379:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13472
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2381:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13479
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2382:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13485
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 2383:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13489
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 2385:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13496
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2386:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13502
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 2387:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13506
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 2388:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13511
		{
		}
	case 2389:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13512
		{
		}
	case 2390:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13516
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 2391:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13520
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 2392:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13526
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 2393:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13535
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 2394:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13539
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2395:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13543
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 2396:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13551
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 2397:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13555
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 2398:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13561
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 2399:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13565
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 2400:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13584
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 2401:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13592
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 2402:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13615
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2404:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13624
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2405:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13628
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2406:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13632
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2407:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13636
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 2408:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13642
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 2409:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13646
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 2414:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13661
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2415:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13665
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2418:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13677
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2419:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13681
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2420:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13690
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2421:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13701
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2422:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13710
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2423:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13718
		{
			var t *types.T
			if sqlDollar[3].union.val == nil {
				t = types.Interval
			} else {
				t = types.MakeInterval(sqlDollar[3].union.intervalTypeMetadata())
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[2].str),
				Type: t,

				SyntaxMode: tree.CastShort,
			}
		}
	case 2424:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13735
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[5].str),
				Type: types.MakeInterval(
					types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true},
				),

				SyntaxMode: tree.CastShort,
			}
		}
	case 2443:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13820
		{
			sqlVAL.union.val = sqlDollar[1].union.nameList()
		}
	case 2445:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13828
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{SchemaName: tree.Name(sqlDollar[1].str), ExplicitSchema: true}
		}
	case 2446:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13832
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{CatalogName: tree.Name(sqlDollar[1].str), SchemaName: tree.Name(sqlDollar[3].str), ExplicitCatalog: true, ExplicitSchema: true}
		}
	case 2447:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13838
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{sqlDollar[1].union.objectNamePrefix()}
		}
	case 2448:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13842
		{
			sqlVAL.union.val = append(sqlDollar[1].union.objectNamePrefixList(), sqlDollar[3].union.objectNamePrefix())
		}
	case 2449:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13848
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{sqlDollar[1].union.objectNamePrefix()}
		}
	case 2450:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13854
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{CatalogName: tree.Name(sqlDollar[1].str), SchemaName: tree.Name('*'), ExplicitCatalog: true, ExplicitSchema: true}
		}
	case 2452:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13861
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{ExplicitSchema: false}
		}
	case 2458:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13888
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2460:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13895
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2461:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13899
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2462:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:13903
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2464:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:13917
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2465:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13921
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2466:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13925
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2467:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13938
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2469:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13947
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2473:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13965
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2474:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13978
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2475:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13985
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2483:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14010
		{
			sqlVAL.str = ""
		}
	case 2484:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14016
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 2485:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14020
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
